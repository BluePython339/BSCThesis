sub_401060
mov eax [ esp + 0x8 ]
push esi
mov esi ecx
push edi
mov edi [ lstrcpynA@IAT ]
push 0x104
lea ecx [ esi + 0x104 ]
push eax
push ecx
call edi
mov edx [ esp + 0xc ]
push 0x104
push edx
push esi
call edi
pop edi
mov eax 0x1
pop esi
retn 0x8
sub_4010a0
sub esp 0x8
push ebx
push ebp
push esi
mov esi [ RegCreateKeyA@IAT ]
lea eax [ esp + 0xc ]
push edi
push eax
xor ebx ebx
push rw-data
mov edi ecx
push 0x80000002
mov [ esp + 0x1c ] ebx
call esi
cmp eax ebx
je r-xdata
mov ebp [ RegSetValueExA@IAT ]
mov [ esp + 0x14 ] ebx
mov ebx [ lstrlenA@IAT ]
lea ecx [ esp + 0x10 ]
push ecx
push rw-data
push 0x80000001
call esi
cmp eax ebx
jne r-xdata
mov ecx [ esp + 0x10 ]
push ecx
call [ RegCloseKey@IAT ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x8
retn
push edi
call ebx
lea esi [ edi + 0x104 ]
test eax eax
push esi
jg r-xdata
call ebx
push eax
mov eax [ esp + 0x14 ]
push esi
push 0x1
push 0x0
push edi
push eax
call ebx
mov edx [ esp + 0x10 ]
push eax
push esi
push 0x1
push 0x0
push 0x0
push edx
jmp r-xdata
cmp [ esp + 0x14 ] 0xa
jge r-xdata
call ebp
mov edx [ esp + 0x14 ]
inc edx
test eax eax
mov [ esp + 0x14 ] edx
je r-xdata
sub_401190
push 0xffffffff
push sub_402a0e
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov eax [ esp + 0x14 ]
push esi
push edi
mov esi ecx
push eax
push 0x67
mov [ esp + 0x10 ] esi
call Ordinal_MFC42_324
push Ordinal_MFC42_800
push Ordinal_MFC42_540
push 0x2
lea ecx [ esi + 0x78 ]
push 0x4
push ecx
mov [ esp + 0x28 ] 0x0
call sub_40275c
lea edi [ esi + 0x80 ]
mov [ esp + 0x14 ] 0x1
mov ecx edi
call Ordinal_MFC42_567
mov ecx [ esp + 0xc ]
mov [ edi ] r--data
mov [ esi ] r--data
mov eax esi
pop edi
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn 0x4
sub_401240
push 0xffffffff
push sub_402a3e
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push esi
mov esi ecx
mov [ esp + 0x4 ] esi
lea ecx [ esi + 0x80 ]
mov [ esp + 0x10 ] 0x1
call Ordinal_MFC42_656
push Ordinal_MFC42_800
push 0x2
lea eax [ esi + 0x78 ]
push 0x4
push eax
mov [ esp + 0x20 ] 0x0
call sub_402668
mov ecx esi
mov [ esp + 0x10 ] 0xffffffff
call Ordinal_MFC42_641
mov ecx [ esp + 0x8 ]
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_401380
push 0xffffffff
push sub_402a58
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push esi
mov esi ecx
push rw-data
mov eax [ esi + 0x74 ]
lea eax [ esi + eax * 4 + 0x78 ]
mov eax [ eax ]
push eax
call [ _mbscmp@IAT ]
add esp 0x8
test eax eax
je r-xdata
mov ecx [ esp + 0x8 ]
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
mov ecx [ esi + 0x74 ]
push rw-data
lea ecx [ esi + ecx * 4 + 0x78 ]
call Ordinal_MFC42_941
mov edx [ esi + 0x74 ]
mov ecx esi
mov eax [ esi + edx * 4 + 0x78 ]
push eax
push 0x3f2
call Ordinal_MFC42_5953
mov eax [ esi + 0x6c ]
test eax eax
jne r-xdata
lea ecx [ esp + 0x4 ]
call Ordinal_MFC42_540
lea eax [ esp + 0x4 ]
mov ecx esi
push eax
push 0x3f2
mov [ esp + 0x18 ] 0x0
call Ordinal_MFC42_3097
push rw-data
lea ecx [ esp + 0x8 ]
call Ordinal_MFC42_941
mov ecx [ esp + 0x4 ]
push ecx
push 0x3f2
mov ecx esi
call Ordinal_MFC42_5953
lea ecx [ esp + 0x4 ]
mov [ esp + 0x10 ] 0xffffffff
call Ordinal_MFC42_800
sub_401450
push esi
mov esi ecx
mov eax [ esi + 0x6c ]
test eax eax
jne r-xdata
pop esi
retn
mov eax [ esi + 0x74 ]
push rw-data
lea ecx [ esi + eax * 4 + 0x78 ]
call Ordinal_MFC42_941
mov ecx [ esi + 0x74 ]
mov eax 0x1
mov [ esi + 0x6c ] eax
mov [ esi + 0x70 ] eax
mov edx [ esi + ecx * 4 + 0x78 ]
mov ecx esi
push edx
push 0x3f2
call Ordinal_MFC42_5953
sub_401490
push esi
mov esi ecx
mov eax [ esi + 0x70 ]
test eax eax
je r-xdata
mov [ esi + 0x60 ] 0x1
pop esi
retn
mov eax [ esi + 0x60 ]
test eax eax
jne r-xdata
mov eax [ esi + 0x60 ]
mov ecx esi
push eax
call sub_4017c0
mov [ esi + 0x60 ] 0x1
sub_4014c0
push esi
mov esi ecx
mov eax [ esi + 0x70 ]
test eax eax
je r-xdata
mov [ esi + 0x60 ] 0x2
pop esi
retn
mov eax [ esi + 0x60 ]
test eax eax
jne r-xdata
mov eax [ esi + 0x60 ]
mov ecx esi
push eax
call sub_4017c0
mov [ esi + 0x60 ] 0x2
sub_4014f0
push esi
mov esi ecx
mov eax [ esi + 0x70 ]
test eax eax
je r-xdata
mov [ esi + 0x60 ] 0x3
pop esi
retn
mov eax [ esi + 0x60 ]
test eax eax
jne r-xdata
mov eax [ esi + 0x60 ]
mov ecx esi
push eax
call sub_4017c0
push rw-data
lea ecx [ esi + 0x7c ]
call Ordinal_MFC42_860
mov [ esi + 0x60 ] 0x3
sub_401530
push esi
mov esi ecx
mov eax [ esi + 0x70 ]
test eax eax
je r-xdata
mov [ esi + 0x60 ] 0x4
pop esi
retn
mov eax [ esi + 0x60 ]
test eax eax
jne r-xdata
mov eax [ esi + 0x60 ]
mov ecx esi
push eax
call sub_4017c0
push rw-data
lea ecx [ esi + 0x7c ]
call Ordinal_MFC42_860
mov [ esi + 0x60 ] 0x4
sub_4015b0
push 0xffffffff
push sub_402a88
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x8
push esi
mov esi ecx
lea ecx [ esp + 0x8 ]
call Ordinal_MFC42_540
mov eax [ esp + 0x1c ]
lea ecx [ esp + 0x8 ]
push eax
push rw-data
push ecx
mov [ esp + 0x20 ] 0x0
call Ordinal_MFC42_2818
add esp 0xc
lea ecx [ esp + 0x4 ]
call Ordinal_MFC42_540
mov eax [ esi + 0x70 ]
mov [ esp + 0x14 ] 0x1
test eax eax
jne r-xdata
mov edx [ esi + 0x74 ]
lea ecx [ esp + 0x8 ]
push ecx
lea ecx [ esi + edx * 4 + 0x78 ]
call Ordinal_MFC42_939
mov eax [ esi + 0x74 ]
mov ecx esi
mov eax [ esi + eax * 4 + 0x78 ]
push eax
push 0x3f2
call Ordinal_MFC42_5953
mov eax [ esi + 0x6c ]
test eax eax
jne r-xdata
mov eax [ esi + 0x74 ]
lea edx [ esp + 0x8 ]
push edx
lea ecx [ esi + eax * 4 + 0x78 ]
call Ordinal_MFC42_858
mov ecx [ esi + 0x74 ]
push rw-data
lea eax [ esp + 0x20 ]
mov [ esi + 0x70 ] 0x1
lea edx [ esi + ecx * 4 + 0x78 ]
push edx
push eax
call Ordinal_MFC42_924
mov eax [ eax ]
mov ecx esi
push eax
push 0x3f2
mov [ esp + 0x1c ] 0x2
call Ordinal_MFC42_5953
lea ecx [ esp + 0x1c ]
mov [ esp + 0x14 ] 0x1
call Ordinal_MFC42_800
jmp r-xdata
lea ecx [ esp + 0x4 ]
mov [ esp + 0x14 ] 0x0
call Ordinal_MFC42_800
lea ecx [ esp + 0x8 ]
mov [ esp + 0x14 ] 0xffffffff
call Ordinal_MFC42_800
mov ecx [ esp + 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x14
retn 0x4
lea ecx [ esp + 0x4 ]
push ecx
push 0x3f2
mov ecx esi
call Ordinal_MFC42_3097
push rw-data
lea ecx [ esp + 0x8 ]
call Ordinal_MFC42_941
mov edx [ esp + 0x4 ]
mov ecx esi
push edx
push 0x3f2
call Ordinal_MFC42_5953
sub_4016f0
push 0xffffffff
push sub_402ab3
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x8
push ebx
push esi
mov esi ecx
push edi
xor edi edi
push rw-data
lea ebx [ esi + 0x78 ]
mov [ esi + 0x60 ] edi
mov ecx ebx
mov [ esi + 0x6c ] edi
mov [ esi + 0x70 ] edi
mov [ esi + 0x68 ] edi
mov [ esi + 0x64 ] edi
call Ordinal_MFC42_860
push rw-data
lea ecx [ esi + 0x7c ]
call Ordinal_MFC42_860
push rw-data
lea eax [ esp + 0x10 ]
push ebx
push eax
mov [ esi + 0x74 ] edi
call Ordinal_MFC42_924
mov eax [ eax ]
mov ecx esi
push eax
push 0x3f2
mov [ esp + 0x24 ] edi
call Ordinal_MFC42_5953
or esi 0xffffffff
lea ecx [ esp + 0xc ]
mov [ esp + 0x1c ] esi
call Ordinal_MFC42_800
push 0x730
call Ordinal_MFC42_823
add esp 0x4
mov [ esp + 0x10 ] eax
cmp eax edi
mov [ esp + 0x1c ] 0x1
je r-xdata
xor eax eax
mov ecx eax
call sub_401f10
jmp r-xdata
mov ecx eax
mov [ esp + 0x1c ] esi
call sub_401f30
sub_4017c0
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_402ad0
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x14
push ebx
push esi
mov esi ecx
push edi
mov eax [ esi + 0x78 ]
lea edi [ esi + 0x78 ]
push eax
call [ atof@IAT ]
mov eax [ esi + 0x7c ]
lea ebx [ esi + 0x7c ]
fstp [ esp + 0x18 ]
push eax
call [ atof@IAT ]
mov eax [ ebp + 0x8 ]
add esp 0x8
dec eax
cmp eax 0x4
ja r-xdata
fstp st0
jmp [ eax * 4 + jump_table_40195c ]
mov eax [ edi ]
mov ecx esi
push eax
push 0x3f2
call Ordinal_MFC42_5953
mov eax [ esi + 0x6c ]
test eax eax
jne r-xdata
lea ecx [ esp + 0x10 ]
call Ordinal_MFC42_540
fld [ esp + 0x14 ]
fmul [ r--data ]
lea edx [ esp + 0x10 ]
mov [ esp + 0x28 ] 0x0
fstp [ esp + 0x14 ]
mov eax [ esp + 0x18 ]
mov ecx [ esp + 0x14 ]
push eax
push ecx
push rw-data
push edx
call Ordinal_MFC42_2818
mov eax [ esp + 0x20 ]
add esp 0x10
mov ecx esi
push eax
push 0x3f2
call Ordinal_MFC42_5953
mov [ esp + 0x28 ] 0xffffffff
lea ecx [ esp + 0x10 ]
jmp r-xdata
fadd [ esp + 0x14 ]
fstp [ esp + 0x14 ]
jmp r-xdata
fld [ esp + 0x14 ]
fsub st1
jmp r-xdata
fmul [ esp + 0x14 ]
fstp [ esp + 0x14 ]
jmp r-xdata
fld [ esp + 0x14 ]
fdiv st1
xor eax eax
push rw-data
mov ecx ebx
mov [ esi + 0x74 ] 0x1
mov [ esi + 0x6c ] eax
mov [ esi + 0x70 ] eax
call Ordinal_MFC42_860
mov ecx [ esp + 0x20 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0x4
push 0x2e
mov ecx edi
call Ordinal_MFC42_2763
cmp eax 0xffffffff
jne r-xdata
call Ordinal_MFC42_800
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
push ecx
push edx
push rw-data
push edi
call Ordinal_MFC42_2818
mov eax [ ebp + 0x8 ]
add esp 0x10
cmp eax 0x5
jne r-xdata
fstp [ esp + 0x14 ]
lea ecx [ esp + 0xc ]
call Ordinal_MFC42_540
lea ecx [ esp + 0xc ]
mov [ esp + 0x28 ] 0x1
push ecx
push 0x3f2
mov ecx esi
call Ordinal_MFC42_3097
push rw-data
lea ecx [ esp + 0x10 ]
call Ordinal_MFC42_941
mov edx [ esp + 0xc ]
mov ecx esi
push edx
push 0x3f2
call Ordinal_MFC42_5953
mov [ esp + 0x28 ] 0xffffffff
lea ecx [ esp + 0xc ]
sub_401a80
push esi
mov esi ecx
mov eax [ esi + 0x70 ]
test eax eax
jne r-xdata
mov eax [ esi + 0x60 ]
test eax eax
je r-xdata
cmp [ esi + 0x60 ] 0x4
jne r-xdata
pop esi
retn
push 0x5
mov ecx esi
call sub_4017c0
mov [ esi + 0x60 ] 0x0
mov [ esi + 0x70 ] 0x1
sub_401ab0
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_402b10
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc
push esi
mov esi ecx
mov eax [ esi + 0x70 ]
test eax eax
je r-xdata
mov ecx [ esp + 0x10 ]
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x18
retn
lea ecx [ esp + 0x4 ]
call Ordinal_MFC42_540
lea eax [ esp + 0x4 ]
mov ecx esi
push eax
push 0x3f2
mov [ esp + 0x20 ] 0x0
call Ordinal_MFC42_3097
mov ecx [ esp + 0x4 ]
push ecx
call [ atof@IAT ]
fdivr [ r--data ]
lea ecx [ esp + 0x8 ]
fstp [ esp + 0xc ]
mov edx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
push edx
push eax
push rw-data
push ecx
call Ordinal_MFC42_2818
mov eax [ esi + 0x74 ]
add esp 0x14
lea edx [ esp + 0x4 ]
push edx
lea ecx [ esi + eax * 4 + 0x78 ]
call Ordinal_MFC42_858
push 0x2e
lea ecx [ esp + 0x8 ]
call Ordinal_MFC42_2763
cmp eax 0xffffffff
jne r-xdata
mov eax [ esp + 0x4 ]
mov ecx esi
push eax
push 0x3f2
call Ordinal_MFC42_5953
lea ecx [ esp + 0x4 ]
push rw-data
lea edx [ esp + 0xc ]
push ecx
push edx
call Ordinal_MFC42_924
mov eax [ eax ]
mov ecx esi
push eax
push 0x3f2
mov [ esp + 0x20 ] 0x1
call Ordinal_MFC42_5953
lea ecx [ esp + 0x8 ]
mov [ esp + 0x18 ] 0x0
call Ordinal_MFC42_800
jmp r-xdata
lea ecx [ esp + 0x4 ]
mov [ esp + 0x18 ] 0xffffffff
call Ordinal_MFC42_800
sub_401bc0
push 0xffffffff
push sub_402b3f
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x10
push ebx
push esi
mov esi ecx
xor ebx ebx
mov [ esp + 0xc ] ebx
cmp [ esi + 0x70 ] ebx
je r-xdata
mov ecx [ esp + 0x18 ]
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x1c
retn
push ebp
push edi
lea ecx [ esp + 0x10 ]
call Ordinal_MFC42_540
lea eax [ esp + 0x10 ]
mov ecx esi
push eax
push 0x3f2
mov [ esp + 0x30 ] ebx
call Ordinal_MFC42_3097
mov ecx [ esp + 0x10 ]
push ecx
call [ atof@IAT ]
fchs
fstp [ esp + 0x1c ]
mov edi [ esp + 0x20 ]
mov ebp [ esp + 0x1c ]
push edi
push ebp
lea edx [ esp + 0x1c ]
push rw-data
push edx
call Ordinal_MFC42_2818
mov eax [ esi + 0x74 ]
push edi
push ebp
push rw-data
lea ecx [ esi + eax * 4 + 0x78 ]
push ecx
call Ordinal_MFC42_2818
mov eax [ esi + 0x6c ]
add esp 0x24
test eax eax
pop edi
pop ebp
je r-xdata
lea edx [ esp + 0x8 ]
push rw-data
lea eax [ esp + 0x14 ]
push edx
push eax
call Ordinal_MFC42_924
mov ebx 0x1
mov [ esp + 0xc ] ebx
mov [ esp + 0x20 ] bl
lea eax [ esp + 0x8 ]
jmp r-xdata
lea ecx [ esp + 0x8 ]
mov [ esp + 0x20 ] 0xffffffff
call Ordinal_MFC42_800
lea ecx [ esp + 0x10 ]
call Ordinal_MFC42_800
mov eax [ eax ]
mov ecx esi
push eax
push 0x3f2
call Ordinal_MFC42_5953
test bl 0x1
mov [ esp + 0x20 ] 0x0
je r-xdata
sub_401cd0
push 0xffffffff
push sub_402b6f
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x34
push ebx
push esi
mov esi ecx
xor ebx ebx
mov [ esp + 0xc ] ebx
cmp [ esi + 0x70 ] ebx
je r-xdata
mov ecx [ esp + 0x3c ]
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x40
retn
push edi
lea ecx [ esp + 0xc ]
call Ordinal_MFC42_540
lea eax [ esp + 0xc ]
mov ecx esi
push eax
push 0x3f2
mov [ esp + 0x50 ] ebx
call Ordinal_MFC42_3097
mov ecx [ esp + 0xc ]
push ecx
call [ atof@IAT ]
fstp [ esp + 0x1c ]
mov edx [ esp + 0x20 ]
mov eax [ esp + 0x1c ]
push edx
push eax
lea ecx [ esp + 0x2c ]
push rw-data
push ecx
call [ sprintf@IAT ]
lea edi [ esp + 0x34 ]
or ecx 0xffffffff
xor eax eax
add esp 0x14
[ edi ]
not ecx
dec ecx
mov [ esp + 0x18 ] ebx
mov [ esp + 0x1c ] ebx
lea eax [ ecx - 0x1 ]
cmp [ esp + eax + 0x20 ] 0x2e
jne r-xdata
mov [ esp + eax + 0x20 ] bl
lea edi [ esp + 0x20 ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
pop edi
jne r-xdata
dec eax
mov [ esi + 0x6c ] ebx
lea edx [ esp + 0x14 ]
lea eax [ esp + 0x1c ]
push edx
push rw-data
push eax
call [ sscanf@IAT ]
lea ecx [ esp + 0x28 ]
lea edx [ esp + 0x14 ]
push ecx
push rw-data
push edx
call Ordinal_MFC42_2818
mov ecx [ esi + 0x74 ]
add esp 0x18
lea eax [ esp + 0x8 ]
push eax
lea ecx [ esi + ecx * 4 + 0x78 ]
call Ordinal_MFC42_858
cmp [ esi + 0x6c ] ebx
je r-xdata
mov [ esp + 0x1c ] 0x30
mov [ esp + 0x1d ] bl
mov eax [ esi + 0x74 ]
push rw-data
lea edx [ esp + 0x14 ]
lea ecx [ esi + eax * 4 + 0x78 ]
push ecx
push edx
call Ordinal_MFC42_924
mov [ esp + 0xc ] 0x1
mov [ esp + 0x44 ] 0x1
mov edx [ esi + 0x74 ]
lea eax [ esi + edx * 4 + 0x78 ]
jmp r-xdata
lea ecx [ esp + 0x8 ]
mov [ esp + 0x44 ] 0xffffffff
call Ordinal_MFC42_800
lea ecx [ esp + 0x10 ]
call Ordinal_MFC42_800
mov eax [ eax ]
mov ecx esi
push eax
push 0x3f2
call Ordinal_MFC42_5953
mov al [ esp + 0xc ]
mov [ esp + 0x44 ] ebx
test al 0x1
je r-xdata
sub_401f30
push 0xffffffff
push sub_402b8b
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x8
push ebx
push ebp
push esi
mov ebp ecx
push 0x730
call Ordinal_MFC42_823
add esp 0x4
mov [ esp + 0xc ] eax
xor ebx ebx
cmp eax ebx
mov [ esp + 0x1c ] ebx
je r-xdata
push edi
mov ecx 0x1cc
mov esi ebp
mov edi ebx
[ edi ] [ esi ]
mov eax [ ebp + 0x110 ]
mov [ esp + 0x20 ] 0xffffffff
test eax eax
pop edi
je r-xdata
mov ecx eax
call sub_4020a0
mov ebx eax
mov eax [ ebp + 0x31c ]
test eax eax
je r-xdata
lea eax [ ebp + 0x218 ]
lea ecx [ ebp + 0x114 ]
push eax
push ecx
mov ecx rw-data
call sub_401060
mov ecx rw-data
call sub_4010a0
push 0x0
push 0x16d4
push rw-data
mov ecx ebx
call sub_4020b0
push eax
call Ordinal_MFC42_823
add esp 0x4
mov esi eax
mov ecx ebx
push esi
push 0x16d4
push rw-data
call sub_4020b0
lea ecx [ esp + 0x10 ]
push ecx
push 0x40
push eax
push esi
call [ VirtualProtect@IAT ]
call esi
mov esi [ Sleep@IAT ]
push 0x3e8
call esi
push 0x3e8
call esi
push 0x3e8
call esi
push 0x3e8
call esi
push 0x3e8
call esi
push 0x0
call [ exit@IAT ]
lea edx [ ebp + 0x62c ]
lea eax [ ebp + 0x528 ]
push edx
add ebp 0x320
push eax
push ebp
mov ecx rw-data
call sub_4021d0
mov ecx rw-data
call sub_402250
sub_4020b0
mov eax [ esp + 0x4 ]
mov edx ecx
push ebx
push ebp
mov ecx [ eax ]
push esi
mov [ edx + 0x108 ] ecx
mov ecx [ eax ]
mov esi [ eax + 0x4 ]
mov ebp ecx
push edi
add esi eax
lea edi [ edx + 0x1 ]
mov ebx eax
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebp
and ecx 0x3
[ edi ] [ esi ]
mov edi [ eax + 0xc ]
mov ecx [ edx + 0x10c ]
mov ebx [ ebx + 0x8 ]
add eax edi
dec ecx
jne r-xdata
mov eax [ esp + 0x14 ]
pop edi
pop esi
pop ebp
pop ebx
retn 0xc
mov ecx [ esp + 0x1c ]
push ecx
push ebx
push eax
mov ecx edx
call sub_402110
pop edi
pop esi
pop ebp
pop ebx
retn 0xc
sub_402110
push esi
push edi
mov edi ecx
mov ecx [ esp + 0x14 ]
mov esi [ edi + 0x108 ]
test ecx ecx
jne r-xdata
mov edx [ esp + 0x10 ]
push ebx
xor ebx ebx
test edx edx
jbe r-xdata
mov eax [ esp + 0x10 ]
pop edi
add eax esi
pop esi
retn 0xc
pop ebx
pop edi
mov eax edx
pop esi
retn 0xc
push ebp
mov ebp [ esp + 0x14 ]
sub ebp ecx
lea eax [ edx - 0x14 ]
cmp ebx eax
jbe r-xdata
add ecx ebx
inc ebx
cmp ebx edx
jb r-xdata
push ecx
push rw-data
call [ printf@IAT ]
mov ecx [ esp + 0x24 ]
mov edx [ esp + 0x20 ]
add esp 0x8
mov dl [ edi + eax + 0x1 ]
xor dl [ ecx + ebp ]
inc eax
cmp eax esi
mov [ ecx ] dl
jl r-xdata
mov ecx [ esp + 0x1c ]
mov edx [ esp + 0x18 ]
xor eax eax
test esi esi
jle r-xdata
pop ebp
sub_4021d0
mov eax [ esp + 0x4 ]
push esi
push edi
mov edi [ lstrcpynA@IAT ]
mov esi ecx
push 0x104
push eax
push esi
call edi
mov ecx [ esp + 0x10 ]
push 0x104
lea edx [ esi + 0x104 ]
push ecx
push edx
call edi
mov eax [ esp + 0x14 ]
push 0x104
lea ecx [ esi + 0x208 ]
push eax
push ecx
call edi
xor eax eax
mov ecx 0x1
mov [ esi + 0x314 ] eax
mov [ esi + 0x318 ] 0x10
mov [ esi + 0x31c ] ecx
mov [ esi + 0x320 ] ecx
mov [ esi + 0x324 ] eax
mov [ esi + 0x328 ] eax
mov [ esi + 0x32c ] eax
mov [ esi + 0x330 ] eax
pop edi
pop esi
retn 0xc
sub_402330
push 0xffffffff
push sub_402bc9
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc0
push esi
mov esi ecx
push 0x0
call Ordinal_MFC42_1134
add esp 0x4
mov ecx esi
call Ordinal_MFC42_2621
push 0x0
lea ecx [ esp + 0x8 ]
call sub_401190
lea eax [ esp + 0x4 ]
lea ecx [ esp + 0x4 ]
mov [ esp + 0xcc ] 0x0
mov [ esi + 0x20 ] eax
call Ordinal_MFC42_2514
lea ecx [ esp + 0x84 ]
mov [ esp + 0xcc ] 0x2
call Ordinal_MFC42_656
push Ordinal_MFC42_800
push 0x2
lea ecx [ esp + 0x84 ]
push 0x4
push ecx
mov [ esp + 0xdc ] 0x1
call sub_402668
lea ecx [ esp + 0x4 ]
mov [ esp + 0xcc ] 0xffffffff
call Ordinal_MFC42_641
mov ecx [ esp + 0xc4 ]
xor eax eax
pop esi
mov [ fs : 0x0 ] ecx
add esp 0xcc
retn
sub_402668
push ebp
mov ebp esp
push 0xffffffff
push r--data
push _except_handler3
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc
push ebx
push esi
push edi
and [ ebp - 0x1c ] 0x0
mov esi [ ebp + 0xc ]
mov eax esi
imul eax [ ebp + 0x10 ]
add [ ebp + 0x8 ] eax
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x1c ] 0x1
or [ ebp - 0x4 ] 0xffffffff
call sub_4026d0
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn 0x10
sub [ ebp + 0x8 ] esi
mov ecx [ ebp + 0x8 ]
call [ ebp + 0x14 ]
jmp r-xdata
dec [ ebp + 0x10 ]
js r-xdata
sub_4026e8
push ebp
mov ebp esp
push 0xffffffff
push r--data
push _except_handler3
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
and [ ebp - 0x4 ] 0x0
or [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn 0x10
mov ecx [ ebp + 0x8 ]
sub ecx [ ebp + 0xc ]
mov [ ebp + 0x8 ] ecx
call [ ebp + 0x14 ]
jmp r-xdata
dec [ ebp + 0x10 ]
js r-xdata
sub_40275c
push ebp
mov ebp esp
push 0xffffffff
push r--data
push _except_handler3
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x10
push ebx
push esi
push edi
xor eax eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x20 ] 0x1
or [ ebp - 0x4 ] 0xffffffff
call sub_4027c6
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn 0x14
mov esi [ ebp + 0x8 ]
mov ecx esi
call [ ebp + 0x14 ]
add esi [ ebp + 0xc ]
mov [ ebp + 0x8 ] esi
inc [ ebp - 0x1c ]
jmp r-xdata
mov eax [ ebp - 0x1c ]
cmp eax [ ebp + 0x10 ]
jge r-xdata
_start
push ebp
mov ebp esp
push 0xffffffff
push r--data
push _except_handler3
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x68
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
xor ebx ebx
mov [ ebp - 0x4 ] ebx
push 0x2
call [ __set_app_type@IAT ]
pop ecx
or [ rw-data ] 0xffffffff
or [ rw-data ] 0xffffffff
call [ __p__fmode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
call [ __p__commode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
mov eax [ _adjust_fdiv@IAT ]
mov eax [ eax ]
mov [ rw-data ] eax
call sub_402981
cmp [ rw-data ] ebx
jne r-xdata
call sub_40296c
push rw-data
push rw-data
call _initterm
mov eax [ rw-data ]
mov [ ebp - 0x6c ] eax
lea eax [ ebp - 0x6c ]
push eax
push [ rw-data ]
lea eax [ ebp - 0x64 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
lea eax [ ebp - 0x60 ]
push eax
call [ __getmainargs@IAT ]
push rw-data
push rw-data
call _initterm
add esp 0x24
mov eax [ _acmdln@IAT ]
mov esi [ eax ]
mov [ ebp - 0x74 ] esi
cmp [ esi ] 0x22
jne r-xdata
push sub_40297e
call [ __setusermatherr@IAT ]
pop ecx
cmp [ esi ] 0x20
jbe r-xdata
inc esi
mov [ ebp - 0x74 ] esi
mov al [ esi ]
cmp al bl
je r-xdata
mov al [ esi ]
cmp al bl
je r-xdata
inc esi
mov [ ebp - 0x74 ] esi
jmp r-xdata
cmp [ esi ] 0x22
jne r-xdata
cmp al 0x22
jne r-xdata
mov [ ebp - 0x30 ] ebx
lea eax [ ebp - 0x5c ]
push eax
call [ GetStartupInfoA@IAT ]
test [ ebp - 0x30 ] 0x1
je r-xdata
cmp al 0x20
jbe r-xdata
inc esi
mov [ ebp - 0x74 ] esi
push 0xa
pop eax
movzx eax [ ebp - 0x2c ]
jmp r-xdata
push eax
push esi
push ebx
push ebx
call [ GetModuleHandleA@IAT ]
push eax
call sub_402988
mov [ ebp - 0x68 ] eax
push eax
call [ exit@IAT ]
sub_4029a0
call Ordinal_MFC42_1168
mov ecx [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
test ecx ecx
mov [ eax + 0x14 ] cl
mov [ eax + 0x1040 ] edx
jne r-xdata
push 0x1
pop eax
retn 0x8
push 0xfffffffd
call [ _setmbcp@IAT ]
pop ecx
sub_401000
call sub_401010
jmp sub_401020
sub_401010
mov ecx rw-data
jmp sub_401040
sub_401020
push sub_401030
call sub_402656
pop ecx
retn
sub_401030
mov ecx rw-data
jmp sub_402270
sub_401040
push esi
mov esi ecx
push 0x104
lea eax [ esi + 0x104 ]
push eax
push 0x0
call [ GetModuleFileNameA@IAT ]
mov eax esi
pop esi
retn
sub_401150
call sub_401160
jmp sub_401170
sub_401160
mov ecx rw-data
jmp sub_402260
sub_401170
push sub_401180
call sub_402656
pop ecx
retn
sub_401180
mov ecx rw-data
jmp sub_402270
sub_401210
retn
sub_401220
push esi
mov esi ecx
call sub_401240
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call Ordinal_MFC42_825
add esp 0x4
sub_4012b0
mov eax [ esp + 0x4 ]
add ecx 0x80
push ecx
push 0x3f2
push eax
call Ordinal_MFC42_2302
retn 0x4
sub_4012d0
mov eax [ Ordinal_MFC42_4234@IAT ]
retn
sub_4012e0
mov eax r--data
retn
sub_4012f0
push 0x1
call sub_4015b0
retn
sub_401300
push 0x2
call sub_4015b0
retn
sub_401310
push 0x3
call sub_4015b0
retn
sub_401320
push 0x4
call sub_4015b0
retn
sub_401330
push 0x5
call sub_4015b0
retn
sub_401340
push 0x6
call sub_4015b0
retn
sub_401350
push 0x7
call sub_4015b0
retn
sub_401360
push 0x8
call sub_4015b0
retn
sub_401370
push 0x9
call sub_4015b0
retn
sub_401570
push esi
mov esi ecx
mov eax [ esi + 0x60 ]
test eax eax
je r-xdata
pop esi
retn
push eax
call sub_4017c0
mov [ esi + 0x60 ] 0x0
mov [ esi + 0x70 ] 0x1
sub_401590
push esi
mov esi ecx
call Ordinal_MFC42_4710
mov ecx esi
call sub_4016f0
j_sub_4016f0
jmp sub_4016f0
sub_401e40
retn 0x4
sub_401e50
mov eax [ ecx + 0x20 ]
push 0x0
push eax
call [ EnableWindow@IAT ]
retn
sub_401e60
mov eax [ ecx + 0x20 ]
push 0x1
push eax
call [ EnableWindow@IAT ]
retn
sub_401e70
push esi
mov esi ecx
call Ordinal_MFC42_656
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call Ordinal_MFC42_825
add esp 0x4
sub_401e90
call sub_401ea0
jmp sub_401eb0
sub_401ea0
mov ecx rw-data
jmp sub_402260
sub_401eb0
push sub_401ec0
call sub_402656
pop ecx
retn
sub_401ec0
mov ecx rw-data
jmp sub_402270
sub_401ed0
call sub_401ee0
jmp sub_401ef0
sub_401ee0
mov ecx rw-data
jmp sub_402260
sub_401ef0
push sub_401f00
call sub_402656
pop ecx
retn
sub_401f00
mov ecx rw-data
jmp sub_402270
sub_401f10
push esi
mov esi ecx
call sub_402260
mov [ esi ] 0x0
mov [ esi + 0x10c ] 0x1
mov eax esi
pop esi
retn
sub_402070
mov ecx rw-data
jmp sub_402260
sub_402080
push sub_402090
call sub_402656
pop ecx
retn
sub_402090
mov ecx rw-data
jmp sub_402270
sub_4020a0
push esi
mov esi ecx
call sub_402260
mov eax esi
pop esi
retn
sub_402190
call sub_4021a0
jmp sub_4021b0
sub_4021a0
mov ecx rw-data
jmp sub_402260
sub_4021b0
push sub_4021c0
call sub_402656
pop ecx
retn
sub_4021c0
mov ecx rw-data
jmp sub_402270
sub_402250
xor eax eax
retn
sub_402260
mov eax ecx
retn
sub_402270
retn
sub_402280
mov eax [ Ordinal_MFC42_4274@IAT ]
retn
sub_402290
mov eax r--data
retn
sub_4022a0
push esi
mov esi ecx
push 0x0
call Ordinal_MFC42_561
mov [ esi ] r--data
mov eax esi
pop esi
retn
sub_4022c0
push esi
mov esi ecx
call sub_4022e0
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call Ordinal_MFC42_825
add esp 0x4
sub_4022e0
jmp Ordinal_MFC42_815
sub_4022f0
call sub_402300
jmp sub_402310
sub_402300
mov ecx rw-data
jmp sub_4022a0
sub_402310
push sub_402320
call sub_402656
pop ecx
retn
sub_402320
mov ecx rw-data
jmp sub_4022e0
Ordinal_MFC42_6055
jmp [ Ordinal_MFC42_6055@IAT ]
Ordinal_MFC42_1776
jmp [ Ordinal_MFC42_1776@IAT ]
Ordinal_MFC42_5290
jmp [ Ordinal_MFC42_5290@IAT ]
Ordinal_MFC42_3402
jmp [ Ordinal_MFC42_3402@IAT ]
Ordinal_MFC42_4424
jmp [ Ordinal_MFC42_4424@IAT ]
Ordinal_MFC42_3610
jmp [ Ordinal_MFC42_3610@IAT ]
Ordinal_MFC42_5265
jmp [ Ordinal_MFC42_5265@IAT ]
Ordinal_MFC42_4376
jmp [ Ordinal_MFC42_4376@IAT ]
Ordinal_MFC42_4853
jmp [ Ordinal_MFC42_4853@IAT ]
Ordinal_MFC42_4998
jmp [ Ordinal_MFC42_4998@IAT ]
Ordinal_MFC42_2514
jmp [ Ordinal_MFC42_2514@IAT ]
Ordinal_MFC42_6052
jmp [ Ordinal_MFC42_6052@IAT ]
Ordinal_MFC42_4078
jmp [ Ordinal_MFC42_4078@IAT ]
Ordinal_MFC42_1775
jmp [ Ordinal_MFC42_1775@IAT ]
Ordinal_MFC42_4407
jmp [ Ordinal_MFC42_4407@IAT ]
Ordinal_MFC42_5241
jmp [ Ordinal_MFC42_5241@IAT ]
Ordinal_MFC42_2385
jmp [ Ordinal_MFC42_2385@IAT ]
Ordinal_MFC42_5163
jmp [ Ordinal_MFC42_5163@IAT ]
Ordinal_MFC42_6374
jmp [ Ordinal_MFC42_6374@IAT ]
Ordinal_MFC42_4353
jmp [ Ordinal_MFC42_4353@IAT ]
Ordinal_MFC42_5280
jmp [ Ordinal_MFC42_5280@IAT ]
Ordinal_MFC42_3798
jmp [ Ordinal_MFC42_3798@IAT ]
Ordinal_MFC42_4837
jmp [ Ordinal_MFC42_4837@IAT ]
Ordinal_MFC42_4441
jmp [ Ordinal_MFC42_4441@IAT ]
Ordinal_MFC42_2648
jmp [ Ordinal_MFC42_2648@IAT ]
Ordinal_MFC42_2055
jmp [ Ordinal_MFC42_2055@IAT ]
Ordinal_MFC42_6376
jmp [ Ordinal_MFC42_6376@IAT ]
Ordinal_MFC42_3749
jmp [ Ordinal_MFC42_3749@IAT ]
Ordinal_MFC42_5065
jmp [ Ordinal_MFC42_5065@IAT ]
Ordinal_MFC42_1727
jmp [ Ordinal_MFC42_1727@IAT ]
Ordinal_MFC42_5261
jmp [ Ordinal_MFC42_5261@IAT ]
Ordinal_MFC42_2446
jmp [ Ordinal_MFC42_2446@IAT ]
Ordinal_MFC42_2124
jmp [ Ordinal_MFC42_2124@IAT ]
Ordinal_MFC42_5277
jmp [ Ordinal_MFC42_5277@IAT ]
Ordinal_MFC42_2982
jmp [ Ordinal_MFC42_2982@IAT ]
Ordinal_MFC42_3147
jmp [ Ordinal_MFC42_3147@IAT ]
Ordinal_MFC42_3259
jmp [ Ordinal_MFC42_3259@IAT ]
Ordinal_MFC42_4465
jmp [ Ordinal_MFC42_4465@IAT ]
Ordinal_MFC42_3136
jmp [ Ordinal_MFC42_3136@IAT ]
Ordinal_MFC42_3262
jmp [ Ordinal_MFC42_3262@IAT ]
Ordinal_MFC42_2985
jmp [ Ordinal_MFC42_2985@IAT ]
Ordinal_MFC42_3081
jmp [ Ordinal_MFC42_3081@IAT ]
Ordinal_MFC42_2976
jmp [ Ordinal_MFC42_2976@IAT ]
Ordinal_MFC42_3830
jmp [ Ordinal_MFC42_3830@IAT ]
Ordinal_MFC42_3831
jmp [ Ordinal_MFC42_3831@IAT ]
Ordinal_MFC42_3825
jmp [ Ordinal_MFC42_3825@IAT ]
Ordinal_MFC42_3079
jmp [ Ordinal_MFC42_3079@IAT ]
Ordinal_MFC42_4080
jmp [ Ordinal_MFC42_4080@IAT ]
Ordinal_MFC42_4627
jmp [ Ordinal_MFC42_4627@IAT ]
Ordinal_MFC42_4425
jmp [ Ordinal_MFC42_4425@IAT ]
Ordinal_MFC42_3597
jmp [ Ordinal_MFC42_3597@IAT ]
Ordinal_MFC42_641
jmp [ Ordinal_MFC42_641@IAT ]
Ordinal_MFC42_567
jmp [ Ordinal_MFC42_567@IAT ]
Ordinal_MFC42_540
jmp [ Ordinal_MFC42_540@IAT ]
Ordinal_MFC42_800
jmp [ Ordinal_MFC42_800@IAT ]
Ordinal_MFC42_324
jmp [ Ordinal_MFC42_324@IAT ]
Ordinal_MFC42_825
jmp [ Ordinal_MFC42_825@IAT ]
Ordinal_MFC42_656
jmp [ Ordinal_MFC42_656@IAT ]
Ordinal_MFC42_2302
jmp [ Ordinal_MFC42_2302@IAT ]
Ordinal_MFC42_3097
jmp [ Ordinal_MFC42_3097@IAT ]
Ordinal_MFC42_5953
jmp [ Ordinal_MFC42_5953@IAT ]
Ordinal_MFC42_941
jmp [ Ordinal_MFC42_941@IAT ]
Ordinal_MFC42_860
jmp [ Ordinal_MFC42_860@IAT ]
Ordinal_MFC42_4710
jmp [ Ordinal_MFC42_4710@IAT ]
Ordinal_MFC42_939
jmp [ Ordinal_MFC42_939@IAT ]
Ordinal_MFC42_924
jmp [ Ordinal_MFC42_924@IAT ]
Ordinal_MFC42_858
jmp [ Ordinal_MFC42_858@IAT ]
Ordinal_MFC42_2818
jmp [ Ordinal_MFC42_2818@IAT ]
Ordinal_MFC42_823
jmp [ Ordinal_MFC42_823@IAT ]
Ordinal_MFC42_2763
jmp [ Ordinal_MFC42_2763@IAT ]
Ordinal_MFC42_4673
jmp [ Ordinal_MFC42_4673@IAT ]
Ordinal_MFC42_6375
jmp [ Ordinal_MFC42_6375@IAT ]
Ordinal_MFC42_4486
jmp [ Ordinal_MFC42_4486@IAT ]
Ordinal_MFC42_2554
jmp [ Ordinal_MFC42_2554@IAT ]
Ordinal_MFC42_2512
jmp [ Ordinal_MFC42_2512@IAT ]
Ordinal_MFC42_5731
jmp [ Ordinal_MFC42_5731@IAT ]
Ordinal_MFC42_3922
jmp [ Ordinal_MFC42_3922@IAT ]
Ordinal_MFC42_1089
jmp [ Ordinal_MFC42_1089@IAT ]
Ordinal_MFC42_5199
jmp [ Ordinal_MFC42_5199@IAT ]
Ordinal_MFC42_2396
jmp [ Ordinal_MFC42_2396@IAT ]
Ordinal_MFC42_3346
jmp [ Ordinal_MFC42_3346@IAT ]
Ordinal_MFC42_5300
jmp [ Ordinal_MFC42_5300@IAT ]
Ordinal_MFC42_5302
jmp [ Ordinal_MFC42_5302@IAT ]
Ordinal_MFC42_2725
jmp [ Ordinal_MFC42_2725@IAT ]
Ordinal_MFC42_4079
jmp [ Ordinal_MFC42_4079@IAT ]
Ordinal_MFC42_4698
jmp [ Ordinal_MFC42_4698@IAT ]
Ordinal_MFC42_5307
jmp [ Ordinal_MFC42_5307@IAT ]
Ordinal_MFC42_5289
jmp [ Ordinal_MFC42_5289@IAT ]
Ordinal_MFC42_5714
jmp [ Ordinal_MFC42_5714@IAT ]
Ordinal_MFC42_4622
jmp [ Ordinal_MFC42_4622@IAT ]
Ordinal_MFC42_3738
jmp [ Ordinal_MFC42_3738@IAT ]
Ordinal_MFC42_561
jmp [ Ordinal_MFC42_561@IAT ]
Ordinal_MFC42_815
jmp [ Ordinal_MFC42_815@IAT ]
Ordinal_MFC42_2621
jmp [ Ordinal_MFC42_2621@IAT ]
Ordinal_MFC42_1134
jmp [ Ordinal_MFC42_1134@IAT ]
sub_40262a
cmp [ rw-data ] 0xffffffff
jne r-xdata
push rw-data
push rw-data
push [ esp + 0xc ]
call __dllonexit
add esp 0xc
retn
push [ esp + 0x4 ]
call [ _onexit@IAT ]
pop ecx
retn
sub_402656
push [ esp + 0x4 ]
call sub_40262a
neg eax
sbb eax eax
pop ecx
neg eax
dec eax
retn
sub_4026d0
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
retn
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4026e8
sub_402724
push [ ebp - 0x14 ]
call sub_402746
pop ecx
retn
sub_402746
mov eax [ esp + 0x4 ]
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
je r-xdata
jmp ?terminate@@YAXXZ
xor eax eax
retn
sub_4027c6
cmp [ ebp - 0x20 ] 0x0
jne r-xdata
retn
push [ ebp + 0x18 ]
push [ ebp - 0x1c ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4026e8
__CxxFrameHandler
jmp [ __CxxFrameHandler@IAT ]
__dllonexit
jmp [ __dllonexit@IAT ]
_except_handler3
jmp [ _except_handler3@IAT ]
?terminate@@YAXXZ
jmp [ terminate@IAT ]
_XcptFilter
jmp [ _XcptFilter@IAT ]
_initterm
jmp [ _initterm@IAT ]
sub_40296c
push 0x30000
push 0x10000
call _controlfp
pop ecx
pop ecx
retn
sub_40297e
xor eax eax
retn
sub_402981
retn
_controlfp
jmp [ _controlfp@IAT ]
sub_402988
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
call Ordinal_MFC42_1576
retn 0x10
j_sub_4029ce
jmp sub_4029ce
sub_4029ce
push 0x600
push 0x0
call sub_4029a0
mov [ rw-data ] al
retn
Ordinal_MFC42_1576
jmp [ Ordinal_MFC42_1576@IAT ]
Ordinal_MFC42_1168
jmp [ Ordinal_MFC42_1168@IAT ]
sub_4029f0
mov ecx [ ebp - 0x10 ]
jmp Ordinal_MFC42_641
sub_4029f8
push Ordinal_MFC42_800
push 0x2
push 0x4
mov eax [ ebp - 0x10 ]
add eax 0x78
push eax
call sub_402668
retn
sub_402a0e
mov eax r--data
jmp __CxxFrameHandler
sub_402a20
mov ecx [ ebp - 0x10 ]
jmp Ordinal_MFC42_641
sub_402a28
push Ordinal_MFC42_800
push 0x2
push 0x4
mov eax [ ebp - 0x10 ]
add eax 0x78
push eax
call sub_402668
retn
sub_402a3e
mov eax r--data
jmp __CxxFrameHandler
sub_402a50
lea ecx [ ebp - 0x10 ]
jmp Ordinal_MFC42_800
sub_402a58
mov eax r--data
jmp __CxxFrameHandler
sub_402a70
lea ecx [ ebp - 0x10 ]
jmp Ordinal_MFC42_800
sub_402a78
lea ecx [ ebp - 0x14 ]
jmp Ordinal_MFC42_800
sub_402a80
lea ecx [ ebp + 0x4 ]
jmp Ordinal_MFC42_800
sub_402a88
mov eax r--data
jmp __CxxFrameHandler
sub_402aa0
lea ecx [ ebp - 0x14 ]
jmp Ordinal_MFC42_800
sub_402aa8
mov eax [ ebp - 0x10 ]
push eax
call Ordinal_MFC42_825
pop ecx
retn
sub_402ab3
mov eax r--data
jmp __CxxFrameHandler
sub_402ac0
lea ecx [ ebp - 0x1c ]
jmp Ordinal_MFC42_800
sub_402ac8
lea ecx [ ebp - 0x20 ]
jmp Ordinal_MFC42_800
sub_402ad0
mov eax r--data
jmp __CxxFrameHandler
sub_402ae0
lea ecx [ ebp - 0x18 ]
jmp Ordinal_MFC42_800
sub_402ae8
lea ecx [ ebp - 0x14 ]
jmp Ordinal_MFC42_800
sub_402af0
mov eax r--data
jmp __CxxFrameHandler
sub_402b00
lea ecx [ ebp - 0x18 ]
jmp Ordinal_MFC42_800
sub_402b08
lea ecx [ ebp - 0x14 ]
jmp Ordinal_MFC42_800
sub_402b10
mov eax r--data
jmp __CxxFrameHandler
sub_402b20
lea ecx [ ebp - 0x1c ]
jmp Ordinal_MFC42_800
sub_402b28
mov eax [ ebp - 0x18 ]
and eax 0x1
test eax eax
je r-xdata
retn
lea ecx [ ebp - 0x14 ]
jmp Ordinal_MFC42_800
sub_402b3f
mov eax r--data
jmp __CxxFrameHandler
sub_402b50
lea ecx [ ebp - 0x40 ]
jmp Ordinal_MFC42_800
sub_402b58
mov eax [ ebp - 0x3c ]
and eax 0x1
test eax eax
je r-xdata
retn
lea ecx [ ebp - 0x38 ]
jmp Ordinal_MFC42_800
sub_402b6f
mov eax r--data
jmp __CxxFrameHandler
sub_402b80
mov eax [ ebp - 0x14 ]
push eax
call Ordinal_MFC42_825
pop ecx
retn
sub_402b8b
mov eax r--data
jmp __CxxFrameHandler
sub_402ba0
lea ecx [ ebp - 0xcc ]
jmp sub_401240
sub_402bab
lea ecx [ ebp - 0xcc ]
jmp Ordinal_MFC42_641
sub_402bb6
push Ordinal_MFC42_800
push 0x2
push 0x4
lea eax [ ebp - 0x54 ]
push eax
call sub_402668
retn
sub_402bc9
mov eax r--data
jmp __CxxFrameHandler
