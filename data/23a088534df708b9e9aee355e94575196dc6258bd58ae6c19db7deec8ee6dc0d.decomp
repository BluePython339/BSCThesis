sub_401000
push 0xffffffff
push sub_417cfa
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x60
mov al [ esp + 0x3 ]
push ebx
push ebp
mov ebp ecx
push esi
push edi
lea esi [ ebp + 0x4 ]
mov [ esp + 0x18 ] ebp
mov [ esi ] al
xor eax eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] eax
mov cl [ esp + 0x13 ]
lea edi [ ebp + 0x14 ]
mov [ esp + 0x78 ] eax
mov [ edi ] cl
mov [ edi + 0x4 ] eax
mov [ edi + 0x8 ] eax
mov [ edi + 0xc ] eax
mov dl [ esp + 0x13 ]
lea ebx [ ebp + 0x24 ]
mov [ ebx ] dl
mov [ ebx + 0x4 ] eax
mov [ ebx + 0x8 ] eax
mov [ ebx + 0xc ] eax
mov dl [ esp + 0x13 ]
lea ecx [ ebp + 0x34 ]
push eax
mov [ esp + 0x7c ] 0x2
mov [ ecx ] dl
call sub_4085a0
mov al [ esp + 0x13 ]
lea ecx [ ebp + 0x44 ]
push 0x0
mov [ esp + 0x7c ] 0x3
mov [ ecx ] al
call sub_4085a0
mov dl [ esp + 0x13 ]
lea ecx [ ebp + 0x54 ]
push 0x0
mov [ esp + 0x7c ] 0x4
mov [ ecx ] dl
call sub_4085a0
mov al [ esp + 0x13 ]
lea ecx [ ebp + 0x64 ]
push 0x0
mov [ esp + 0x7c ] 0x5
mov [ ecx ] al
call sub_4085a0
mov dl [ esp + 0x13 ]
lea ecx [ ebp + 0x7c ]
push 0x0
mov [ esp + 0x7c ] 0x6
mov [ ecx ] dl
call sub_4085a0
mov al [ esp + 0x13 ]
lea ecx [ ebp + 0x94 ]
push 0x0
mov [ esp + 0x7c ] 0x7
mov [ ecx ] al
call sub_4085a0
mov dl [ esp + 0x13 ]
lea ecx [ ebp + 0xa4 ]
push 0x0
mov [ esp + 0x7c ] 0x8
mov [ ecx ] dl
call sub_4085a0
mov al [ esp + 0x13 ]
mov [ esp + 0x78 ] 0x9
lea ecx [ ebp + 0xb4 ]
push 0x0
mov [ ecx ] al
call sub_4085a0
mov [ ebp ] r--data
mov eax [ esi + 0x8 ]
mov ecx [ esi + 0x4 ]
push eax
push ecx
mov ecx esi
mov [ esp + 0x80 ] 0xa
call sub_408640
mov eax [ edi + 0x8 ]
mov ecx [ edi + 0x4 ]
push eax
push ecx
mov ecx edi
call sub_408640
mov eax [ ebx + 0x8 ]
mov ecx [ ebx + 0x4 ]
push eax
push ecx
mov ecx ebx
call sub_408640
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
push ecx
push rw-data
lea ecx [ ebp + 0x34 ]
call sub_408900
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea ebx [ ebp + 0x44 ]
[ edi ]
not ecx
dec ecx
push 0x1
mov esi ecx
mov ecx ebx
push esi
mov [ esp + 0x1c ] esi
call sub_4083b0
test al al
je r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea ebx [ ebp + 0x54 ]
[ edi ]
not ecx
dec ecx
push 0x1
mov esi ecx
mov ecx ebx
push esi
mov [ esp + 0x1c ] esi
call sub_4083b0
test al al
je r-xdata
mov edi [ ebx + 0x4 ]
mov ecx esi
mov edx ecx
mov esi rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
mov eax edx
and ecx 0x3
push eax
[ edi ] [ esi ]
mov ecx ebx
call sub_408310
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea ebx [ ebp + 0x64 ]
[ edi ]
not ecx
dec ecx
push 0x1
mov esi ecx
mov ecx ebx
push esi
mov [ esp + 0x1c ] esi
call sub_4083b0
test al al
je r-xdata
mov edi [ ebx + 0x4 ]
mov ecx esi
mov edx ecx
mov esi rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
mov eax edx
and ecx 0x3
push eax
[ edi ] [ esi ]
mov ecx ebx
call sub_408310
xor esi esi
mov edi rw-data
or ecx 0xffffffff
xor eax eax
mov [ ebp + 0x74 ] esi
mov [ ebp + 0x78 ] esi
mov [ ebp + 0x8c ] 0x1
push 0x1
[ edi ]
not ecx
dec ecx
lea edi [ ebp + 0x7c ]
mov ebx ecx
mov ecx edi
push ebx
call sub_4083b0
test al al
je r-xdata
mov edi [ ebx + 0x4 ]
mov ecx esi
mov edx ecx
mov esi rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
mov eax edx
and ecx 0x3
push eax
[ edi ] [ esi ]
mov ecx ebx
call sub_408310
lea eax [ esp + 0x1c ]
mov ecx ebp
push eax
mov [ ebp + 0x90 ] esi
call sub_405e50
mov ecx [ r--data ]
mov [ esp + 0x78 ] 0xb
push ecx
push esi
push eax
lea ecx [ ebp + 0x94 ]
call sub_408080
push 0x1
lea ecx [ esp + 0x20 ]
mov [ esp + 0x7c ] 0xa
call sub_4085a0
mov ecx ebp
call sub_405ad0
lea edx [ esp + 0x2c ]
push 0x41
push edx
call gethostname
mov edi rw-data
or ecx 0xffffffff
xor eax eax
push 0x1
[ edi ]
not ecx
dec ecx
lea edi [ ebp + 0xb4 ]
mov ebx ecx
mov ecx edi
push ebx
call sub_4083b0
test al al
je r-xdata
mov edi [ edi + 0x4 ]
mov ecx ebx
mov edx ecx
mov esi rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
push ebx
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ ebp + 0x7c ]
call sub_408310
xor esi esi
mov ecx [ esp + 0x70 ]
xor eax eax
mov [ ebp + 0xc8 ] eax
mov [ ebp + 0xcc ] eax
mov [ ebp + 0xd0 ] eax
mov [ ebp + 0xd4 ] eax
pop edi
mov [ ebp + 0xc4 ] 0x0
mov eax ebp
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x6c
retn
mov edi [ edi + 0x4 ]
mov ecx ebx
mov eax ecx
mov esi rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov ecx [ ebp + 0xb8 ]
mov [ ebp + 0xbc ] ebx
mov [ ecx + ebx ] 0x0
sub_401390
push 0xffffffff
push sub_417d84
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push ebx
push ebp
push esi
mov esi ecx
push edi
mov [ esp + 0x10 ] esi
mov [ esi ] r--data
push 0x1
lea ecx [ esi + 0xb4 ]
mov [ esp + 0x20 ] 0x9
call sub_4085a0
push 0x1
lea ecx [ esi + 0xa4 ]
mov [ esp + 0x20 ] 0x8
call sub_4085a0
push 0x1
lea ecx [ esi + 0x94 ]
mov [ esp + 0x20 ] 0x7
call sub_4085a0
push 0x1
lea ecx [ esi + 0x7c ]
mov [ esp + 0x20 ] 0x6
call sub_4085a0
push 0x1
lea ecx [ esi + 0x64 ]
mov [ esp + 0x20 ] 0x5
call sub_4085a0
mov eax [ esi + 0x58 ]
xor ebx ebx
cmp eax ebx
je r-xdata
mov [ esi + 0x58 ] ebx
mov [ esi + 0x5c ] ebx
mov [ esi + 0x60 ] ebx
mov eax [ esi + 0x48 ]
cmp eax ebx
je r-xdata
lea ecx [ eax - 0x1 ]
mov al [ eax - 0x1 ]
cmp al bl
je r-xdata
mov [ esi + 0x48 ] ebx
mov [ esi + 0x4c ] ebx
mov [ esi + 0x50 ] ebx
mov eax [ esi + 0x38 ]
cmp eax ebx
je r-xdata
lea ecx [ eax - 0x1 ]
mov al [ eax - 0x1 ]
cmp al bl
je r-xdata
push ecx
call sub_40d360
add esp 0x4
cmp al 0xff
je r-xdata
mov [ esi + 0x38 ] ebx
mov [ esi + 0x3c ] ebx
mov [ esi + 0x40 ] ebx
mov ebp [ esi + 0x2c ]
mov edi [ esi + 0x28 ]
mov [ esp + 0x1c ] 0x1
cmp edi ebp
je r-xdata
lea ecx [ eax - 0x1 ]
mov al [ eax - 0x1 ]
cmp al bl
je r-xdata
push ecx
call sub_40d360
add esp 0x4
cmp al 0xff
je r-xdata
dec al
mov [ ecx ] al
jmp r-xdata
mov eax [ esi + 0x28 ]
push eax
call sub_40d360
mov [ esi + 0x28 ] ebx
mov [ esi + 0x2c ] ebx
mov [ esi + 0x30 ] ebx
mov ebp [ esi + 0x1c ]
mov edi [ esi + 0x18 ]
add esp 0x4
cmp edi ebp
mov [ esp + 0x1c ] bl
je r-xdata
mov ecx edi
call sub_4016e0
add edi 0x20
cmp edi ebp
jne r-xdata
push ecx
call sub_40d360
add esp 0x4
cmp al 0xff
je r-xdata
dec al
mov [ ecx ] al
jmp r-xdata
mov eax [ esi + 0x18 ]
push eax
call sub_40d360
mov [ esi + 0x18 ] ebx
mov [ esi + 0x1c ] ebx
mov [ esi + 0x20 ] ebx
mov ebp [ esi + 0xc ]
mov edi [ esi + 0x8 ]
add esp 0x4
cmp edi ebp
mov [ esp + 0x1c ] 0xffffffff
je r-xdata
push ebx
mov ecx edi
call sub_4016c0
add edi 0x20
cmp edi ebp
jne r-xdata
dec al
mov [ ecx ] al
jmp r-xdata
mov eax [ esi + 0x8 ]
push eax
call sub_40d360
mov ecx [ esp + 0x18 ]
add esp 0x4
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
mov [ esi + 0x10 ] ebx
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
push ebx
mov ecx edi
call sub_4016c0
add edi 0x20
cmp edi ebp
jne r-xdata
sub_401550
push 0xffffffff
push sub_417dbb
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push ebp
push esi
push edi
mov edi ecx
push 0x20
mov [ esp + 0x1c ] 0x1
call sub_40daa2
mov esi eax
add esp 0x4
mov [ esp + 0xc ] esi
xor ebp ebp
mov [ esp + 0x18 ] 0x2
cmp esi ebp
je r-xdata
xor esi esi
mov al [ esp + 0x40 ]
push ebp
mov ecx esi
mov [ esi ] al
call sub_4085a0
mov dl [ esp + 0x40 ]
lea ecx [ esi + 0x10 ]
push ebp
mov [ esp + 0x1c ] 0x3
mov [ ecx ] dl
call sub_4085a0
jmp r-xdata
mov ecx [ esp + 0x24 ]
cmp ecx ebp
je r-xdata
mov eax [ r--data ]
lea ecx [ esp + 0x20 ]
push eax
push ebp
push ecx
mov ecx esi
call sub_408080
mov edx [ r--data ]
lea ebp [ esi + 0x10 ]
push edx
lea eax [ esp + 0x34 ]
push 0x0
push eax
mov ecx ebp
call sub_408080
mov eax [ esp + 0x40 ]
sub eax 0x0
je r-xdata
cmp esi ebp
mov [ esp + 0x18 ] 0x1
je r-xdata
mov ecx [ esp + 0x34 ]
pop edi
mov [ esp + 0x20 ] ebp
mov [ esp + 0x24 ] ebp
mov [ esp + 0x28 ] ebp
pop esi
cmp ecx ebp
pop ebp
je r-xdata
mov al [ ecx - 0x1 ]
test al al
je r-xdata
lea ecx [ edi + 0x4 ]
dec eax
je r-xdata
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x10
retn 0x24
mov al [ ecx - 0x1 ]
test al al
je r-xdata
dec ecx
push ecx
call sub_40d360
add esp 0x4
cmp al 0xff
je r-xdata
lea ecx [ edi + 0x14 ]
jmp r-xdata
dec eax
jne r-xdata
dec ecx
push ecx
call sub_40d360
add esp 0x4
cmp al 0xff
je r-xdata
dec al
mov [ ecx - 0x1 ] al
jmp r-xdata
mov eax [ ecx + 0x8 ]
push esi
push 0x1
push eax
call sub_408b70
mov [ esp + 0x40 ] esi
push 0x1
mov ecx ebp
mov [ esp + 0x1c ] 0x4
call sub_4085a0
push 0x1
mov ecx esi
mov [ esp + 0x1c ] 0x1
call sub_4085a0
push esi
call sub_40d360
add esp 0x4
xor ebp ebp
lea ecx [ edi + 0x24 ]
jmp r-xdata
dec al
mov [ ecx - 0x1 ] al
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x10
retn 0x24
sub_4016e0
push ebx
push esi
mov esi ecx
xor ebx ebx
mov eax [ esi + 0x14 ]
cmp eax ebx
je r-xdata
mov [ esi + 0x14 ] ebx
mov [ esi + 0x18 ] ebx
mov [ esi + 0x1c ] ebx
mov eax [ esi + 0x4 ]
cmp eax ebx
je r-xdata
lea ecx [ eax - 0x1 ]
mov al [ eax - 0x1 ]
cmp al bl
je r-xdata
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
pop esi
pop ebx
retn
lea ecx [ eax - 0x1 ]
mov al [ eax - 0x1 ]
cmp al bl
je r-xdata
push ecx
call sub_40d360
add esp 0x4
cmp al 0xff
je r-xdata
push ecx
call sub_40d360
add esp 0x4
cmp al 0xff
je r-xdata
dec al
mov [ ecx ] al
jmp r-xdata
dec al
mov [ ecx ] al
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
pop esi
pop ebx
retn
sub_401750
push 0xffffffff
push sub_417df8
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x54
mov al [ esp + 0x68 ]
push ebx
push ebp
push esi
mov ebp ecx
xor esi esi
push edi
push esi
lea ecx [ esp + 0x18 ]
mov [ esp + 0x14 ] esi
mov [ esp + 0x18 ] al
call sub_4085a0
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
push ecx
push rw-data
lea ecx [ esp + 0x1c ]
call sub_408900
mov eax [ esp + 0x78 ]
mov [ esp + 0x6c ] esi
sub eax esi
je r-xdata
mov eax [ ebp + 0x8 ]
cmp eax esi
je r-xdata
dec eax
je r-xdata
mov esi [ esp + 0x74 ]
mov cl [ esp + 0x14 ]
xor edi edi
lea eax [ esp + 0x14 ]
mov [ esi ] cl
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
mov edx [ r--data ]
mov ecx esi
push edx
push edi
push eax
call sub_408080
mov ecx [ esp + 0x18 ]
cmp ecx edi
je r-xdata
mov ecx [ ebp + 0xc ]
sub ecx eax
test ecx 0xffffffe0
je r-xdata
mov eax [ ebp + 0x18 ]
cmp eax esi
je r-xdata
dec eax
jne r-xdata
mov ecx [ esp + 0x64 ]
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x60
retn 0x8
mov al [ ecx - 0x1 ]
test al al
je r-xdata
mov esi eax
mov eax [ ebp + 0xc ]
cmp esi eax
jae r-xdata
mov ecx [ ebp + 0x1c ]
sub ecx eax
test ecx 0xffffffe0
je r-xdata
mov eax [ ebp + 0x28 ]
cmp eax esi
je r-xdata
dec ecx
push ecx
call sub_40d360
add esp 0x4
cmp al 0xff
je r-xdata
lea ebx [ esi + 0x10 ]
mov esi eax
mov eax [ ebp + 0x1c ]
cmp esi eax
jae r-xdata
mov ecx [ ebp + 0x2c ]
sub ecx eax
test ecx 0xffffffe0
je r-xdata
dec al
mov [ ecx - 0x1 ] al
jmp r-xdata
mov edx [ r--data ]
lea ecx [ esp + 0x14 ]
push edx
push 0x0
push esi
call sub_408760
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
push ecx
push rw-data
lea ecx [ esp + 0x1c ]
call sub_408840
mov eax [ r--data ]
lea ecx [ esp + 0x14 ]
push eax
push 0x0
push ebx
call sub_408760
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
push ecx
push rw-data
lea ecx [ esp + 0x1c ]
call sub_408840
mov eax [ ebp + 0xc ]
add esi 0x20
add ebx 0x20
cmp esi eax
jb r-xdata
lea ebx [ esi + 0x10 ]
mov esi eax
mov eax [ ebp + 0x2c ]
cmp esi eax
jae r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
push ecx
push rw-data
lea ecx [ esp + 0x1c ]
call sub_408840
cmp esi [ ebp + 0x1c ]
jb r-xdata
mov eax [ esp + 0x1c ]
xor esi esi
test eax eax
jbe r-xdata
lea ebx [ esi + 0x10 ]
mov edx [ r--data ]
lea ecx [ esp + 0x14 ]
push edx
push 0x0
push esi
call sub_408760
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
push ecx
push rw-data
lea ecx [ esp + 0x1c ]
call sub_408840
mov eax [ r--data ]
lea ecx [ esp + 0x14 ]
push eax
push 0x0
push ebx
call sub_408760
mov eax [ ebp + 0x1c ]
add esi 0x20
add ebx 0x20
cmp esi eax
jae r-xdata
jmp r-xdata
mov ecx [ esp + 0x18 ]
test ecx ecx
jne r-xdata
cmp eax esi
mov edx [ r--data ]
lea ecx [ esp + 0x14 ]
push edx
push 0x0
push esi
call sub_408760
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
push ecx
push rw-data
lea ecx [ esp + 0x1c ]
call sub_408840
mov eax [ r--data ]
lea ecx [ esp + 0x14 ]
push eax
push 0x0
push ebx
call sub_408760
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
push ecx
push rw-data
lea ecx [ esp + 0x1c ]
call sub_408840
mov eax [ ebp + 0x2c ]
add esi 0x20
add ebx 0x20
cmp esi eax
jb r-xdata
push eax
lea eax [ esp + 0x48 ]
push ecx
push eax
mov ecx ebp
call sub_406e00
mov ecx [ r--data ]
mov [ esp + 0x6c ] 0x1
push ecx
push 0x0
push eax
lea ecx [ esp + 0x20 ]
call sub_408080
push 0x1
lea ecx [ esp + 0x48 ]
mov [ esp + 0x70 ] 0x0
call sub_4085a0
mov dl [ esp + 0x78 ]
push 0x0
lea ecx [ esp + 0x38 ]
mov [ esp + 0x38 ] dl
call sub_4085a0
mov edi rw-data
or ecx 0xffffffff
xor eax eax
push 0x1
[ edi ]
not ecx
dec ecx
mov ebx ecx
lea ecx [ esp + 0x38 ]
push ebx
call sub_4083b0
test al al
je r-xdata
mov ecx r--data
mov edi r--data
test ecx ecx
je r-xdata
mov dl [ esp + 0x78 ]
xor esi esi
push esi
lea ecx [ esp + 0x28 ]
mov [ esp + 0x70 ] 0x2
mov [ esp + 0x28 ] dl
call sub_4085a0
mov edi rw-data
or ecx 0xffffffff
xor eax eax
push 0x1
[ edi ]
not ecx
dec ecx
mov ebx ecx
lea ecx [ esp + 0x28 ]
push ebx
call sub_4083b0
test al al
je r-xdata
mov edi [ esp + 0x38 ]
mov ecx ebx
mov eax ecx
mov esi rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov ecx [ esp + 0x38 ]
mov [ esp + 0x3c ] ebx
mov [ ebx + ecx ] 0x0
mov eax r--data
test ecx ecx
je r-xdata
lea ecx [ esp + 0x14 ]
call sub_408330
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x1c ]
lea edi [ ecx + esi ]
jmp r-xdata
lea ecx [ esp + 0x34 ]
lea edx [ esp + 0x24 ]
push ecx
lea eax [ esp + 0x18 ]
push edx
lea ecx [ esp + 0x5c ]
push eax
push ecx
mov ecx ebp
mov [ esp + 0x7c ] 0x3
call sub_407800
mov edx [ r--data ]
lea ecx [ esp + 0x14 ]
push edx
push esi
push eax
mov [ esp + 0x78 ] 0x4
call sub_408080
push 0x1
lea ecx [ esp + 0x58 ]
mov [ esp + 0x70 ] 0x3
call sub_4085a0
mov eax [ esp + 0x28 ]
cmp eax esi
je r-xdata
mov edi [ esp + 0x28 ]
mov ecx ebx
mov eax ecx
mov esi rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
push ebx
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ esp + 0x28 ]
call sub_408310
xor esi esi
mov ecx [ esp + 0x18 ]
jb r-xdata
lea ecx [ esp + 0x14 ]
call sub_408330
mov ecx [ esp + 0x18 ]
lea eax [ ecx + esi ]
jmp r-xdata
cmp eax esi
jb r-xdata
mov eax [ esp + 0x38 ]
mov [ esp + 0x28 ] esi
cmp eax esi
mov [ esp + 0x2c ] esi
mov [ esp + 0x30 ] esi
mov [ esp + 0x6c ] 0x0
je r-xdata
lea ecx [ eax - 0x1 ]
mov al [ eax - 0x1 ]
test al al
je r-xdata
mov dl [ edi ]
xor dl 0x6b
inc esi
mov [ eax ] dl
mov eax [ esp + 0x1c ]
cmp eax esi
ja r-xdata
lea ecx [ eax - 0x1 ]
mov al [ eax - 0x1 ]
test al al
je r-xdata
push ecx
call sub_40d360
add esp 0x4
cmp al 0xff
je r-xdata
push ecx
call sub_40d360
add esp 0x4
jmp r-xdata
cmp al 0xff
je r-xdata
dec al
mov [ ecx ] al
jmp r-xdata
dec al
mov [ ecx ] al
jmp r-xdata
sub_401c00
push 0xffffffff
push sub_417f4d
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x9c
push ebx
push ebp
xor ebx ebx
push esi
push edi
mov ebp ecx
mov [ esp + 0x14 ] ebx
mov al [ esp + 0x13 ]
push ebx
lea ecx [ esp + 0x5c ]
mov [ esp + 0xb8 ] ebx
mov [ esp + 0x5c ] al
call sub_4085a0
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
push ecx
push rw-data
lea ecx [ esp + 0x60 ]
call sub_408900
mov cl [ esp + 0x13 ]
push ebx
mov [ esp + 0x44 ] cl
lea ecx [ esp + 0x44 ]
mov [ esp + 0xb8 ] 0x1
call sub_4085f0
push rw-data
call sub_40db02
add esp 0x4
lea ecx [ esp + 0x40 ]
push eax
push rw-data
call sub_408ac0
push 0x138
mov [ esp + 0xb8 ] 0x2
call sub_40daa2
mov esi eax
add esp 0x4
mov [ esp + 0x28 ] esi
test esi esi
mov [ esp + 0xb4 ] 0x3
je r-xdata
xor esi esi
mov dl [ esp + 0x13 ]
push ebx
lea ecx [ esp + 0x6c ]
mov [ esp + 0x6c ] dl
call sub_4085f0
push rw-data
call sub_40db02
add esp 0x4
lea ecx [ esp + 0x68 ]
push eax
push rw-data
call sub_408ac0
mov ebx 0x1
mov [ esp + 0x14 ] ebx
lea eax [ esp + 0x68 ]
push 0x0
push eax
mov ecx esi
mov [ esp + 0xbc ] 0x4
call sub_40a0f0
mov esi eax
jmp r-xdata
push 0x0
mov ecx esi
call sub_40c2a0
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea ebx [ ebp + 0x64 ]
[ edi ]
not ecx
dec ecx
push ecx
mov ecx [ ebx + 0x8 ]
push rw-data
push ecx
push eax
mov ecx ebx
call sub_409ed0
test eax eax
je r-xdata
push 0x1
lea ecx [ esp + 0x6c ]
call sub_4085f0
test bl 0x1
mov [ esp + 0xb4 ] 0x2
je r-xdata
lea eax [ esp + 0xc4 ]
lea ecx [ esp + 0x18 ]
push eax
push ecx
mov ecx esi
call sub_40cdf0
push eax
mov ecx esi
mov [ esp + 0xb8 ] 0x7
call sub_40be90
push 0x1
lea ecx [ esp + 0x1c ]
mov [ esp + 0xb8 ] 0x2
call sub_4085f0
test esi esi
jne r-xdata
lea edx [ esp + 0x18 ]
push ebx
push edx
mov ecx esi
call sub_40cdf0
push eax
mov ecx esi
mov [ esp + 0xb8 ] 0x6
call sub_40c150
push 0x1
lea ecx [ esp + 0x1c ]
mov [ esp + 0xb8 ] 0x2
call sub_4085f0
mov eax [ esp + 0xc0 ]
cmp eax 0x3
ja r-xdata
mov esi [ esp + 0xbc ]
mov dl [ esp + 0x58 ]
push 0x0
mov ecx esi
mov [ esi ] dl
call sub_4085a0
mov eax [ r--data ]
lea ecx [ esp + 0x58 ]
push eax
push 0x0
push ecx
mov ecx esi
call sub_408080
push 0x1
lea ecx [ esp + 0x44 ]
mov [ esp + 0xb8 ] 0x1
call sub_4085f0
push 0x1
lea ecx [ esp + 0x5c ]
mov [ esp + 0xb8 ] 0x0
call sub_4085a0
push 0x1
lea ecx [ esp + 0xc8 ]
mov [ esp + 0xb8 ] 0xffffffff
call sub_4085a0
jmp r-xdata
mov eax [ ebp + 0x28 ]
lea edi [ ebp + 0x24 ]
test eax eax
je r-xdata
jmp [ eax * 4 + jump_table_40270c ]
mov ecx [ esp + 0xac ]
mov eax esi
pop edi
pop esi
pop ebp
mov [ fs : 0x0 ] ecx
pop ebx
add esp 0xa8
retn 0x1c
mov edi rw-data
or ecx 0xffffffff
xor eax eax
mov edx [ ebp + 0x3c ]
[ edi ]
not ecx
lea ebx [ ebp + 0x34 ]
dec ecx
push ecx
push rw-data
push edx
push eax
mov ecx ebx
call sub_409ed0
test eax eax
je r-xdata
mov ecx [ edi + 0x8 ]
sub ecx eax
sar ecx 0x5
je r-xdata
push rw-data
call sub_40db02
add esp 0x4
lea ecx [ esp + 0x40 ]
push eax
push rw-data
call sub_408ac0
jmp r-xdata
push rw-data
call sub_40db02
add esp 0x4
lea ecx [ esp + 0x40 ]
push eax
push rw-data
call sub_408ac0
mov eax [ ebp + 0x18 ]
lea edi [ ebp + 0x14 ]
test eax eax
je r-xdata
push rw-data
call sub_40db02
add esp 0x4
mov edi eax
lea ecx [ esp + 0x40 ]
push 0x1
push edi
call sub_409160
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
lea edi [ ebp + 0x4 ]
test eax eax
je r-xdata
lea eax [ esp + 0x2c ]
push ebx
push eax
mov ecx esi
call sub_40cdf0
push eax
mov ecx esi
mov [ esp + 0xb8 ] 0xf
call sub_40bca0
push 0x1
lea ecx [ esp + 0x30 ]
mov [ esp + 0xb8 ] 0x2
call sub_4085f0
lea edx [ esp + 0x18 ]
push 0x2
push edx
mov ecx ebp
call sub_401750
lea eax [ esp + 0x18 ]
lea ecx [ esp + 0x2c ]
push eax
mov bl 0xd
push ecx
mov ecx esi
mov [ esp + 0xbc ] bl
call sub_40cdf0
push eax
mov ecx esi
mov [ esp + 0xb8 ] 0xe
call sub_40bca0
push 0x1
lea ecx [ esp + 0x30 ]
mov [ esp + 0xb8 ] bl
call sub_4085f0
mov ecx [ edi + 0x4 ]
mov eax [ edi + 0x8 ]
push ecx
push eax
push eax
call sub_409750
add esp 0xc
mov ebx eax
mov eax [ edi + 0x8 ]
mov ecx edi
push eax
push ebx
call sub_4086e0
push 0x1
lea ecx [ esp + 0x1c ]
mov [ edi + 0x8 ] ebx
mov [ esp + 0xb8 ] 0x2
call sub_4085a0
jmp r-xdata
mov edx [ edi + 0x8 ]
sub edx eax
sar edx 0x5
je r-xdata
mov eax [ ebp + 0x78 ]
test eax eax
je r-xdata
mov eax [ esp + 0x44 ]
push edi
push rw-data
push eax
call sub_402760
add esp 0xc
lea ecx [ esp + 0x40 ]
push edi
call sub_409140
cmp [ esp + 0xd4 ] 0x1
jne r-xdata
mov ecx [ edi + 0x8 ]
sub ecx eax
sar ecx 0x5
je r-xdata
lea eax [ esp + 0x18 ]
push 0x1
push eax
mov ecx ebp
call sub_401750
mov eax [ esp + 0x1c ]
mov [ esp + 0xb4 ] 0x8
test eax eax
jne r-xdata
jle r-xdata
lea eax [ esp + 0x40 ]
push 0x0
push eax
mov ecx esi
call sub_40a880
lea ecx [ esp + 0x18 ]
push ecx
mov ecx esi
call sub_40b950
lea edx [ esp + 0x2c ]
mov bl 0x14
push eax
push edx
mov ecx esi
mov [ esp + 0xbc ] bl
call sub_40cb50
mov ecx [ r--data ]
mov [ esp + 0xb4 ] 0x15
push ecx
push 0x0
push eax
lea ecx [ esp + 0x64 ]
call sub_408080
push 0x1
lea ecx [ esp + 0x30 ]
mov [ esp + 0xb8 ] bl
call sub_4085a0
mov ecx [ esp + 0x1c ]
mov [ esp + 0xb4 ] 0x2
test ecx ecx
je r-xdata
lea edx [ esp + 0x40 ]
push 0x1
push edx
mov ecx esi
call sub_40a880
lea eax [ esp + 0x18 ]
mov ecx esi
push eax
call sub_40c2b0
lea ecx [ esp + 0x2c ]
push eax
mov bl 0x12
push ecx
mov ecx esi
mov [ esp + 0xbc ] bl
call sub_40cb50
mov edx [ r--data ]
lea ecx [ esp + 0x58 ]
push edx
push 0x0
push eax
mov [ esp + 0xc0 ] 0x13
call sub_408080
push 0x1
lea ecx [ esp + 0x30 ]
mov [ esp + 0xb8 ] bl
call sub_4085a0
push 0x1
lea ecx [ esp + 0x1c ]
mov [ esp + 0xb8 ] 0x2
call sub_4085f0
jmp r-xdata
lea edx [ esp + 0x18 ]
push 0x0
push edx
mov ecx ebp
call sub_401750
lea eax [ esp + 0x18 ]
lea ecx [ esp + 0x2c ]
push eax
mov bl 0x10
push ecx
mov ecx esi
mov [ esp + 0xbc ] bl
call sub_40cdf0
push eax
mov ecx esi
mov [ esp + 0xb8 ] 0x11
call sub_40c000
push 0x1
lea ecx [ esp + 0x30 ]
mov [ esp + 0xb8 ] bl
call sub_4085f0
mov ecx [ edi + 0x4 ]
mov eax [ edi + 0x8 ]
push ecx
push eax
push eax
call sub_409750
add esp 0xc
mov ebx eax
mov eax [ edi + 0x8 ]
mov ecx edi
push eax
push ebx
call sub_4086e0
push 0x1
lea ecx [ esp + 0x1c ]
mov [ edi + 0x8 ] ebx
mov [ esp + 0xb8 ] 0x2
call sub_4085a0
mov ecx [ esp + 0x20 ]
push ecx
push eax
mov ecx esi
call sub_40bdf0
mov ecx [ edi + 0x4 ]
mov eax [ edi + 0x8 ]
push ecx
push eax
push eax
call sub_409750
add esp 0xc
mov ebx eax
mov eax [ edi + 0x8 ]
mov ecx edi
push eax
push ebx
call sub_4086e0
push 0x0
lea edx [ esp + 0x17 ]
sub esp 0x10
mov [ edi + 0x8 ] ebx
mov ecx esp
mov [ esp + 0x3c ] esp
push edx
push rw-data
call sub_407b20
sub esp 0x10
lea eax [ esp + 0x79 ]
mov ecx esp
mov [ esp + 0x38 ] esp
push eax
push rw-data
mov [ esp + 0xe0 ] 0x9
call sub_407b20
mov ecx ebp
mov [ esp + 0xd8 ] 0x8
call sub_401550
mov cl [ rw-data ]
xor eax eax
mov [ esp + 0x78 ] cl
mov ecx 0xc
lea edi [ esp + 0x79 ]
mov edx [ esp + 0x20 ]
[ edi ]
stosb [ edi ]
push edx
lea eax [ esp + 0x7c ]
push rw-data
push eax
call sub_40dab0
add esp 0xc
lea edx [ esp + 0x54 ]
lea eax [ esp + 0x78 ]
push 0x0
sub esp 0x10
mov ecx esp
mov [ esp + 0x3c ] esp
push edx
push eax
call sub_407b20
sub esp 0x10
lea edx [ esp + 0x76 ]
mov ecx esp
mov [ esp + 0x38 ] esp
push edx
push rw-data
mov [ esp + 0xe0 ] 0xa
call sub_407b20
mov ecx ebp
mov [ esp + 0xd8 ] 0x8
call sub_401550
push 0x1
lea ecx [ esp + 0x1c ]
mov [ esp + 0xb8 ] 0x2
call sub_4085a0
jmp r-xdata
mov eax r--data
mov ecx [ ebp + 0x74 ]
push eax
push ecx
mov ecx esi
call sub_40bdf0
mov ecx [ ebp + 0x18 ]
mov eax [ ebp + 0x1c ]
lea edi [ ebp + 0x14 ]
push ecx
push eax
push eax
call sub_409750
add esp 0xc
mov ebx eax
mov eax [ edi + 0x8 ]
mov ecx edi
push eax
push ebx
call sub_4086e0
push 0x0
lea edx [ esp + 0x5b ]
sub esp 0x10
mov [ edi + 0x8 ] ebx
mov ecx esp
mov [ esp + 0x3c ] esp
push edx
push rw-data
call sub_407b20
sub esp 0x10
lea eax [ esp + 0x7a ]
mov ecx esp
mov [ esp + 0x38 ] esp
push eax
push rw-data
mov [ esp + 0xe0 ] 0xb
call sub_407b20
mov ecx ebp
mov [ esp + 0xd8 ] 0x2
call sub_401550
mov cl [ rw-data ]
xor eax eax
mov [ esp + 0x78 ] cl
mov ecx 0xc
lea edi [ esp + 0x79 ]
mov edx [ ebp + 0x78 ]
[ edi ]
stosb [ edi ]
push edx
lea eax [ esp + 0x7c ]
push rw-data
push eax
call sub_40dab0
add esp 0xc
lea edx [ esp + 0x53 ]
lea eax [ esp + 0x78 ]
push 0x0
sub esp 0x10
mov ecx esp
mov [ esp + 0x3c ] esp
push edx
push eax
call sub_407b20
sub esp 0x10
lea edx [ esp + 0x63 ]
mov ecx esp
mov [ esp + 0x38 ] esp
push edx
push rw-data
mov [ esp + 0xe0 ] 0xc
call sub_407b20
mov ecx ebp
mov [ esp + 0xd8 ] 0x2
call sub_401550
lea edx [ esp + 0x2c ]
mov ecx esi
push edx
call sub_40b7c0
mov edi eax
push rw-data
mov [ esp + 0xb8 ] 0x16
call sub_40db02
add esp 0x4
mov ecx edi
push eax
mov eax [ edi + 0x8 ]
push rw-data
push eax
push 0x0
call sub_409f70
mov ecx [ esp + 0x30 ]
mov [ esp + 0xb4 ] 0x2
test eax eax
setne bl
xor edi edi
cmp ecx edi
je r-xdata
mov al [ ecx - 0x1 ]
test al al
je r-xdata
test bl bl
je r-xdata
mov al [ ecx - 0x1 ]
test al al
je r-xdata
add ecx 0xfffffffe
push ecx
call sub_40d360
add esp 0x4
cmp al 0xff
je r-xdata
lea edx [ esp + 0x2c ]
mov ecx esi
push edx
call sub_40bb60
mov edi eax
push rw-data
call sub_40db02
mov ebx eax
mov eax [ edi + 0x8 ]
add esp 0x4
cmp eax ebx
mov [ esp + 0x14 ] eax
jb r-xdata
lea ecx [ esp + 0x2c ]
push ecx
mov ecx esi
call sub_40b7c0
lea edx [ esp + 0x18 ]
push eax
push edx
mov ecx esi
mov [ esp + 0xbc ] 0x17
call sub_40cb50
mov ecx [ r--data ]
mov [ esp + 0xb4 ] 0x18
push ecx
push edi
push eax
lea ecx [ ebp + 0x44 ]
call sub_408080
mov eax [ esp + 0x1c ]
cmp eax edi
je r-xdata
add ecx 0xfffffffe
push ecx
call sub_40d360
add esp 0x4
cmp al 0xff
je r-xdata
dec al
mov [ ecx - 0x1 ] al
jmp r-xdata
mov edi [ edi + 0x4 ]
push eax
push rw-data
push edi
call sub_402720
add esp 0xc
test eax eax
jne r-xdata
mov eax ebx
mov ecx [ esp + 0x30 ]
mov [ esp + 0x1c ] edi
cmp ecx edi
mov [ esp + 0x20 ] edi
mov [ esp + 0x24 ] edi
mov [ esp + 0xb4 ] 0x2
je r-xdata
lea ecx [ eax - 0x1 ]
mov al [ eax - 0x1 ]
test al al
je r-xdata
dec al
mov [ ecx - 0x1 ] al
jmp r-xdata
mov ecx [ esp + 0x30 ]
xor edi edi
cmp eax edi
mov [ esp + 0xb4 ] 0x2
setne bl
cmp ecx edi
je r-xdata
mov eax [ esp + 0x14 ]
cmp eax ebx
jae r-xdata
mov al [ ecx - 0x1 ]
test al al
je r-xdata
push ecx
call sub_40d360
add esp 0x4
cmp al 0xff
je r-xdata
test bl bl
je r-xdata
mov al [ ecx - 0x1 ]
test al al
je r-xdata
xor ecx ecx
cmp eax ebx
setne cl
mov eax ecx
or eax 0xffffffff
jmp r-xdata
lea eax [ ecx - 0x2 ]
push eax
call sub_40d360
add esp 0x4
cmp al 0xff
je r-xdata
dec al
mov [ ecx ] al
jmp r-xdata
mov eax [ esp + 0xc0 ]
dec eax
jne r-xdata
lea edx [ esp + 0x2c ]
mov ecx esi
push edx
call sub_40bb60
push eax
lea eax [ esp + 0x1c ]
push eax
mov ecx esi
mov [ esp + 0xbc ] 0x1a
call sub_40cb50
mov ecx [ r--data ]
mov [ esp + 0xb4 ] 0x1b
push ecx
push edi
push eax
lea ecx [ ebp + 0x34 ]
call sub_408080
mov eax [ esp + 0x1c ]
cmp eax edi
je r-xdata
lea eax [ ecx - 0x2 ]
push eax
call sub_40d360
add esp 0x4
cmp al 0xff
je r-xdata
dec al
mov [ ecx - 0x1 ] al
jmp r-xdata
mov eax [ esi ]
push 0x1
mov ecx esi
call [ eax ]
mov esi [ esp + 0xbc ]
mov cl [ esp + 0x58 ]
lea eax [ esp + 0x58 ]
mov [ esi ] cl
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
mov edx [ r--data ]
mov ecx esi
push edx
push edi
push eax
call sub_408080
mov ecx [ esp + 0x44 ]
cmp ecx edi
je r-xdata
add ebp 0x54
lea edx [ esp + 0x2c ]
push ebp
push edx
mov ecx esi
call sub_40cdf0
push eax
mov ecx esi
mov [ esp + 0xb8 ] 0x1c
call sub_40ba90
mov ecx [ esp + 0x30 ]
mov [ esp + 0xb4 ] 0x2
cmp ecx edi
je r-xdata
mov ecx [ esp + 0x30 ]
mov [ esp + 0x1c ] edi
cmp ecx edi
mov [ esp + 0x20 ] edi
mov [ esp + 0x24 ] edi
mov [ esp + 0xb4 ] 0x2
je r-xdata
lea ecx [ eax - 0x1 ]
mov al [ eax - 0x1 ]
test al al
je r-xdata
dec al
mov [ ecx - 0x1 ] al
jmp r-xdata
mov ecx [ esp + 0x5c ]
mov [ esp + 0x44 ] edi
cmp ecx edi
mov [ esp + 0x48 ] edi
mov [ esp + 0x4c ] edi
je r-xdata
mov al [ ecx - 0x1 ]
test al al
je r-xdata
mov al [ ecx - 0x1 ]
test al al
je r-xdata
mov al [ ecx - 0x1 ]
test al al
je r-xdata
push ecx
call sub_40d360
add esp 0x4
cmp al 0xff
je r-xdata
mov ecx [ esp + 0xc8 ]
mov [ esp + 0x5c ] edi
cmp ecx edi
mov [ esp + 0x60 ] edi
mov [ esp + 0x64 ] edi
je r-xdata
mov al [ ecx - 0x1 ]
test al al
je r-xdata
add ecx 0xfffffffe
push ecx
call sub_40d360
add esp 0x4
cmp al 0xff
je r-xdata
add ecx 0xfffffffe
push ecx
call sub_40d360
add esp 0x4
cmp al 0xff
je r-xdata
lea eax [ ecx - 0x2 ]
push eax
call sub_40d360
add esp 0x4
cmp al 0xff
je r-xdata
dec al
mov [ ecx ] al
jmp r-xdata
mov al [ ecx - 0x1 ]
test al al
je r-xdata
dec ecx
push ecx
call sub_40d360
add esp 0x4
cmp al 0xff
je r-xdata
dec al
mov [ ecx - 0x1 ] al
jmp r-xdata
dec al
mov [ ecx - 0x1 ] al
jmp r-xdata
dec al
mov [ ecx - 0x1 ] al
jmp r-xdata
dec ecx
push ecx
call sub_40d360
add esp 0x4
cmp al 0xff
je r-xdata
dec al
mov [ ecx - 0x1 ] al
jmp r-xdata
dec al
mov [ ecx - 0x1 ] al
jmp r-xdata
sub_402720
mov edx [ esp + 0xc ]
push esi
test edx edx
jbe r-xdata
xor eax eax
pop esi
retn
mov ecx [ esp + 0xc ]
mov eax [ esp + 0x8 ]
mov ax [ eax ]
pop esi
cmp ax [ ecx ]
sbb eax eax
and al 0xfe
inc eax
retn
add eax 0x2
add ecx 0x2
dec edx
jne r-xdata
mov si [ eax ]
cmp si [ ecx ]
jne r-xdata
sub_402760
mov eax [ esp + 0x4 ]
push esi
mov esi [ esp + 0x10 ]
mov ecx eax
test esi esi
jbe r-xdata
pop esi
retn
mov edx [ esp + 0xc ]
push edi
mov di [ edx ]
add edx 0x2
mov [ ecx ] di
add ecx 0x2
dec esi
jne r-xdata
pop edi
sub_402790
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_417f98
push eax
mov [ fs : 0x0 ] esp
sub esp 0x50
xor eax eax
push ebx
push ebp
push esi
mov esi ecx
push edi
mov edi rw-data
or ecx 0xffffffff
lea ebp [ esi + 0x7c ]
[ edi ]
not ecx
dec ecx
push ecx
push rw-data
mov ecx ebp
call sub_408900
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
mov eax [ ebp + 0x8 ]
not ecx
dec ecx
push ecx
push rw-data
push eax
push 0x0
mov ecx ebp
call sub_409ed0
test eax eax
jne r-xdata
mov cl [ esp + 0x13 ]
push 0x0
mov [ esp + 0x34 ] cl
lea ecx [ esp + 0x34 ]
call sub_4085a0
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
push ecx
push rw-data
lea ecx [ esp + 0x38 ]
call sub_408900
mov dl [ esp + 0x13 ]
push 0x0
lea ecx [ esp + 0x44 ]
mov [ esp + 0x6c ] 0x0
mov [ esp + 0x44 ] dl
call sub_4085a0
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
push ecx
push rw-data
lea ecx [ esp + 0x48 ]
call sub_408900
mov al [ esp + 0x13 ]
push 0x0
lea ecx [ esp + 0x24 ]
mov [ esp + 0x6c ] 0x1
mov [ esp + 0x24 ] al
call sub_4085a0
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
push ecx
push rw-data
lea ecx [ esp + 0x28 ]
call sub_408900
mov edi rw-data
or ecx 0xffffffff
xor eax eax
mov bl 0x2
[ edi ]
not ecx
dec ecx
mov [ esp + 0x68 ] bl
push ecx
push rw-data
lea ecx [ esp + 0x28 ]
call sub_408900
mov cl [ esp + 0x20 ]
sub esp 0x10
mov edi esp
xor ebp ebp
mov [ esp + 0x24 ] esp
push ebp
mov [ edi ] cl
mov ecx edi
call sub_4085a0
mov edx [ r--data ]
lea eax [ esp + 0x30 ]
push edx
push ebp
push eax
mov ecx edi
call sub_408080
mov [ esp + 0x78 ] 0x3
sub esp 0x10
lea edx [ esp + 0x60 ]
mov ecx esp
mov [ esp + 0x38 ] esp
push edx
call sub_407a00
sub esp 0x10
lea eax [ esp + 0x60 ]
mov ecx esp
mov [ esp + 0x4c ] esp
push eax
mov [ esp + 0x9c ] 0x4
call sub_407a00
lea ecx [ esp + 0x80 ]
mov [ esp + 0x98 ] bl
push ecx
mov ecx esi
call sub_405f90
mov edx [ r--data ]
lea ecx [ esp + 0x30 ]
push edx
push ebp
push eax
mov [ esp + 0x74 ] 0x5
call sub_408080
push 0x1
lea ecx [ esp + 0x54 ]
mov [ esp + 0x6c ] bl
call sub_4085a0
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
mov eax [ esp + 0x38 ]
not ecx
dec ecx
push ecx
push rw-data
push eax
push ebp
lea ecx [ esp + 0x40 ]
call sub_409ed0
cmp eax ebp
je r-xdata
mov ecx esi
call sub_405bc0
mov al [ esi + 0x8c ]
test al al
je r-xdata
push ebp
lea edx [ esp + 0x34 ]
sub esp 0x10
mov ecx esp
mov [ esp + 0x30 ] esp
push edx
call sub_407a00
lea eax [ esp + 0x64 ]
push ebp
push eax
mov ecx esi
call sub_401c00
push 0x1
lea ecx [ esp + 0x54 ]
call sub_4085a0
mov ecx [ esp + 0x24 ]
cmp ecx ebp
je r-xdata
lea ecx [ esp + 0x50 ]
push ecx
mov ecx esi
call sub_402ac0
mov dl [ esp + 0x50 ]
sub esp 0x10
mov edi esp
mov [ esp + 0x2c ] esp
push ebp
mov ecx edi
mov [ esp + 0x7c ] 0x6
mov [ edi ] dl
call sub_4085a0
mov eax [ r--data ]
lea ecx [ esp + 0x60 ]
push eax
push ebp
push ecx
mov ecx edi
call sub_408080
mov ecx esi
call sub_403310
push 0x1
lea ecx [ esp + 0x54 ]
mov [ esp + 0x6c ] bl
call sub_4085a0
mov al [ esi + 0x8c ]
test al al
jne r-xdata
mov ecx [ esp + 0x44 ]
mov [ esp + 0x24 ] ebp
cmp ecx ebp
mov [ esp + 0x28 ] ebp
mov [ esp + 0x2c ] ebp
je r-xdata
mov al [ ecx - 0x1 ]
test al al
je r-xdata
mov ecx [ esp + 0x34 ]
mov [ esp + 0x44 ] ebp
cmp ecx ebp
mov [ esp + 0x48 ] ebp
mov [ esp + 0x4c ] ebp
je r-xdata
mov al [ ecx - 0x1 ]
test al al
je r-xdata
dec ecx
push ecx
call sub_40d360
add esp 0x4
cmp al 0xff
je r-xdata
mov ecx [ esp + 0x60 ]
pop edi
pop esi
pop ebp
mov [ fs : 0x0 ] ecx
pop ebx
add esp 0x5c
retn
mov al [ ecx - 0x1 ]
test al al
je r-xdata
dec ecx
push ecx
call sub_40d360
add esp 0x4
cmp al 0xff
je r-xdata
dec al
mov [ ecx - 0x1 ] al
jmp r-xdata
dec ecx
push ecx
call sub_40d360
add esp 0x4
cmp al 0xff
je r-xdata
dec al
mov [ ecx - 0x1 ] al
jmp r-xdata
dec al
mov [ ecx - 0x1 ] al
mov ecx [ esp + 0x60 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebp
pop ebx
add esp 0x5c
retn
sub_402ac0
push 0xffffffff
push sub_41803b
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xa4
mov al [ esp + 0x2 ]
push ebx
push ebp
push esi
mov esi ecx
xor ebp ebp
push edi
push ebp
lea ecx [ esp + 0x4c ]
mov [ esp + 0x18 ] ebp
mov [ esp + 0x4c ] al
call sub_4085a0
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
push ecx
push rw-data
lea ecx [ esp + 0x50 ]
call sub_408900
mov cl [ esp + 0x12 ]
mov ebx 0x1
mov [ esp + 0x18 ] cl
push ebp
lea ecx [ esp + 0x1c ]
mov [ esp + 0xc0 ] ebx
call sub_4085a0
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
push ecx
push rw-data
lea ecx [ esp + 0x20 ]
call sub_408900
mov dl [ esp + 0x12 ]
push ebp
lea ecx [ esp + 0x3c ]
mov [ esp + 0xc0 ] 0x2
mov [ esp + 0x3c ] dl
call sub_4085a0
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
push ecx
push rw-data
lea ecx [ esp + 0x40 ]
call sub_408900
mov edi [ Sleep@IAT ]
push 0x7d0
mov [ esp + 0xc0 ] 0x3
call edi
cmp [ esi + 0x90 ] 0x2
jne r-xdata
lea eax [ esp + 0x5c ]
mov ecx esi
push eax
call sub_405e50
lea ecx [ esi + 0x7c ]
push eax
lea edx [ esp + 0xa8 ]
push ecx
push edx
mov [ esp + 0xc8 ] 0x4
call sub_4093a0
push rw-data
push eax
lea eax [ esp + 0xa8 ]
mov bl 0x5
push eax
mov [ esp + 0xd4 ] bl
call sub_4094d0
add esp 0x18
mov ecx [ r--data ]
mov [ esp + 0xbc ] 0x6
push ecx
push ebp
push eax
lea ecx [ esp + 0x54 ]
call sub_408080
push 0x1
lea ecx [ esp + 0x98 ]
mov [ esp + 0xc0 ] bl
call sub_4085a0
push 0x1
lea ecx [ esp + 0xa8 ]
mov [ esp + 0xc0 ] 0x4
call sub_4085a0
push 0x1
lea ecx [ esp + 0x60 ]
mov [ esp + 0xc0 ] 0x3
call sub_4085a0
push 0x2
lea edx [ esp + 0x16 ]
sub esp 0x10
mov ecx esp
mov [ esp + 0x94 ] esp
push edx
push rw-data
call sub_407b20
sub esp 0x10
lea eax [ esp + 0x37 ]
mov ecx esp
mov [ esp + 0x90 ] esp
push eax
push rw-data
mov [ esp + 0xe8 ] 0x7
call sub_407b20
mov ecx esi
mov [ esp + 0xe0 ] 0x3
call sub_401550
mov ecx esi
call sub_405a10
push ebp
lea edx [ esp + 0x4c ]
sub esp 0x10
mov ecx esp
mov [ esp + 0x80 ] esp
push edx
call sub_407a00
lea eax [ esp + 0x70 ]
push ebp
push eax
mov ecx esi
call sub_401c00
mov ecx [ r--data ]
mov [ esp + 0xbc ] 0x8
push ecx
push ebp
push eax
lea ecx [ esp + 0x24 ]
call sub_408080
push 0x1
lea ecx [ esp + 0x60 ]
mov [ esp + 0xc0 ] 0x3
call sub_4085a0
lea edx [ esp + 0x5c ]
mov ecx esi
push edx
call sub_4031e0
mov ecx [ r--data ]
mov [ esp + 0xbc ] 0x9
push ecx
push ebp
push eax
lea ecx [ esp + 0x44 ]
call sub_408080
push 0x1
lea ecx [ esp + 0x60 ]
mov [ esp + 0xc0 ] 0x3
call sub_4085a0
mov edi rw-data
or ecx 0xffffffff
xor eax eax
mov edx [ esp + 0x40 ]
[ edi ]
not ecx
dec ecx
push ecx
push rw-data
push edx
push ebp
lea ecx [ esp + 0x48 ]
call sub_409ed0
cmp eax ebp
jne r-xdata
push 0xdbba00
mov [ esi + 0x90 ] ebp
call edi
mov esi [ esp + 0xc4 ]
mov al [ esp + 0x18 ]
push ebp
mov ecx esi
mov [ esi ] al
call sub_4085a0
mov ecx [ r--data ]
lea edx [ esp + 0x18 ]
push ecx
push ebp
push edx
mov ecx esi
call sub_408080
mov [ esp + 0x14 ] ebx
push ebx
lea ecx [ esp + 0x3c ]
mov [ esp + 0xc0 ] 0x2
call sub_4085a0
push ebx
lea ecx [ esp + 0x1c ]
mov [ esp + 0xc0 ] bl
call sub_4085a0
push ebx
lea ecx [ esp + 0x4c ]
mov [ esp + 0xc0 ] 0x0
call sub_4085a0
jmp r-xdata
lea eax [ esp + 0x28 ]
mov ecx esi
push eax
mov [ esi + 0x90 ] ebp
call sub_4030b0
mov cl [ esp + 0x13 ]
push ebp
mov [ esp + 0x88 ] cl
lea ecx [ esp + 0x88 ]
mov [ esp + 0xc0 ] 0xa
call sub_4085a0
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
push ecx
push rw-data
lea ecx [ esp + 0x8c ]
call sub_408900
mov dl [ esp + 0x13 ]
push ebp
lea ecx [ esp + 0x74 ]
mov [ esp + 0xc0 ] 0xb
mov [ esp + 0x74 ] dl
call sub_4085a0
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
push ecx
push rw-data
lea ecx [ esp + 0x78 ]
call sub_408900
mov eax [ esp + 0x2c ]
mov bl 0xc
cmp eax ebp
mov [ esp + 0xbc ] bl
mov [ esp + 0x58 ] ebp
jne r-xdata
mov edx [ esi + 0x90 ]
mov al [ esp + 0x38 ]
inc edx
push ebp
mov [ esi + 0x90 ] edx
mov esi [ esp + 0xc8 ]
mov ecx esi
mov [ esi ] al
call sub_4085a0
mov ecx [ r--data ]
lea edx [ esp + 0x38 ]
push ecx
push ebp
push edx
mov ecx esi
call sub_408080
push 0x1
lea ecx [ esp + 0x3c ]
mov [ esp + 0x18 ] 0x1
mov [ esp + 0xc0 ] 0x2
call sub_4085a0
push 0x1
lea ecx [ esp + 0x1c ]
mov [ esp + 0xc0 ] 0x1
call sub_4085a0
push 0x1
lea ecx [ esp + 0x4c ]
mov [ esp + 0xc0 ] 0x0
call sub_4085a0
jmp r-xdata
mov ecx [ esp + 0xb4 ]
mov eax esi
pop edi
pop esi
pop ebp
mov [ fs : 0x0 ] ecx
pop ebx
add esp 0xb0
retn 0x4
mov edx [ esp + 0x30 ]
lea ecx [ esp + 0x58 ]
push ecx
push edx
push eax
lea eax [ esp + 0x68 ]
push eax
mov ecx esi
call sub_407280
mov ecx [ r--data ]
mov [ esp + 0xbc ] 0xd
push ecx
push ebp
push eax
lea ecx [ esp + 0x34 ]
call sub_408080
push 0x1
lea ecx [ esp + 0x60 ]
mov [ esp + 0xc0 ] bl
call sub_4085a0
mov eax [ esp + 0x30 ]
xor esi esi
cmp eax ebp
jbe r-xdata
mov eax r--data
mov edx [ r--data ]
lea eax [ esp + 0x28 ]
push edx
push ebp
push eax
lea ecx [ esp + 0x24 ]
call sub_408080
mov esi [ esp + 0xc4 ]
mov cl [ esp + 0x18 ]
push ebp
mov [ esi ] cl
mov ecx esi
call sub_4085a0
mov edx [ r--data ]
lea eax [ esp + 0x18 ]
push edx
push ebp
push eax
mov ecx esi
call sub_408080
push 0x1
lea ecx [ esp + 0x74 ]
mov [ esp + 0x18 ] 0x1
mov [ esp + 0xc0 ] 0xb
call sub_4085a0
push 0x1
lea ecx [ esp + 0x88 ]
mov [ esp + 0xc0 ] 0xa
call sub_4085a0
push 0x1
lea ecx [ esp + 0x2c ]
mov [ esp + 0xc0 ] 0x3
call sub_4085a0
mov ecx [ esp + 0x3c ]
cmp ecx ebp
je r-xdata
cmp eax esi
mov ecx [ esp + 0x1c ]
mov [ esp + 0x3c ] ebp
cmp ecx ebp
mov [ esp + 0x40 ] ebp
mov [ esp + 0x44 ] ebp
je r-xdata
mov al [ ecx - 0x1 ]
test al al
je r-xdata
mov edi r--data
cmp ecx ebp
je r-xdata
mov ecx [ esp + 0x4c ]
mov [ esp + 0x1c ] ebp
cmp ecx ebp
mov [ esp + 0x20 ] ebp
mov [ esp + 0x24 ] ebp
je r-xdata
mov al [ ecx - 0x1 ]
test al al
je r-xdata
dec ecx
push ecx
call sub_40d360
add esp 0x4
cmp al 0xff
je r-xdata
mov eax r--data
cmp ecx ebp
je r-xdata
lea ecx [ esp + 0x28 ]
call sub_408330
mov ecx [ esp + 0x2c ]
mov eax [ esp + 0x30 ]
lea edi [ ecx + esi ]
jmp r-xdata
mov al [ ecx - 0x1 ]
test al al
je r-xdata
dec ecx
push ecx
call sub_40d360
add esp 0x4
cmp al 0xff
je r-xdata
dec al
mov [ ecx - 0x1 ] al
jmp r-xdata
mov ecx [ esp + 0x2c ]
jb r-xdata
lea ecx [ esp + 0x28 ]
call sub_408330
mov edx [ esp + 0x2c ]
lea eax [ edx + esi ]
jmp r-xdata
cmp eax esi
jb r-xdata
dec ecx
push ecx
call sub_40d360
add esp 0x4
cmp al 0xff
je r-xdata
dec al
mov [ ecx - 0x1 ] al
jmp r-xdata
mov cl [ edi ]
xor cl 0x6b
inc esi
mov [ eax ] cl
mov eax [ esp + 0x30 ]
cmp eax esi
ja r-xdata
dec al
mov [ ecx - 0x1 ] al
jmp r-xdata
sub_4030b0
push ecx
mov al [ ecx + 0x34 ]
push ebx
push ebp
mov ebp [ esp + 0x10 ]
push esi
lea esi [ ecx + 0x34 ]
push edi
xor edi edi
mov [ ebp ] al
mov [ ebp + 0x4 ] edi
mov [ ebp + 0x8 ] edi
mov [ ebp + 0xc ] edi
mov eax [ esi + 0x8 ]
mov ecx [ r--data ]
mov ebx eax
mov [ esp + 0x10 ] edi
cmp ecx ebx
jae r-xdata
cmp ebp esi
jne r-xdata
mov ebx ecx
cmp ebx edi
jbe r-xdata
cmp ebx edi
mov esi ecx
jbe r-xdata
push 0x1
push ebx
mov ecx ebp
call sub_4083b0
test al al
je r-xdata
cmp ebx eax
jne r-xdata
mov ecx ebp
call sub_4084d0
mov eax [ ebp + 0x8 ]
sub eax ebx
cmp eax esi
jae r-xdata
call sub_40d597
pop edi
mov eax ebp
pop esi
pop ebp
pop ebx
pop ecx
retn 0x4
mov esi [ esi + 0x4 ]
cmp esi edi
jne r-xdata
mov eax [ esi + 0x4 ]
cmp eax edi
jne r-xdata
cmp esi edi
jbe r-xdata
mov esi eax
mov edi [ ebp + 0x4 ]
mov ecx ebx
mov eax ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov ecx [ ebp + 0x4 ]
mov [ ebp + 0x8 ] ebx
mov [ ebx + ecx ] 0x0
mov esi r--data
cmp [ eax - 0x1 ] 0xfe
jae r-xdata
mov eax r--data
mov ecx ebp
call sub_4084d0
pop edi
mov eax ebp
pop esi
pop ebp
pop ebx
pop ecx
retn 0x4
mov ecx [ ebp + 0x4 ]
sub eax esi
add ebx ecx
push eax
lea edx [ ebx + esi ]
push edx
push ebx
call sub_40db20
mov ebx [ ebp + 0x8 ]
add esp 0xc
sub ebx esi
mov ecx ebp
push edi
push ebx
call sub_4083b0
test al al
je r-xdata
push 0x1
mov ecx ebp
call sub_4085a0
mov eax [ esi + 0x4 ]
cmp eax edi
jne r-xdata
push ebx
mov ecx ebp
call sub_408310
mov [ ebp + 0x4 ] eax
mov ecx [ esi + 0x8 ]
mov [ ebp + 0x8 ] ecx
mov edx [ esi + 0xc ]
mov [ ebp + 0xc ] edx
mov cl [ eax - 0x1 ]
inc cl
pop edi
mov [ eax - 0x1 ] cl
mov eax ebp
pop esi
pop ebp
pop ebx
pop ecx
retn 0x4
mov eax r--data
sub_4031e0
push ecx
mov al [ ecx + 0x44 ]
push ebx
push ebp
mov ebp [ esp + 0x10 ]
push esi
lea esi [ ecx + 0x44 ]
push edi
xor edi edi
mov [ ebp ] al
mov [ ebp + 0x4 ] edi
mov [ ebp + 0x8 ] edi
mov [ ebp + 0xc ] edi
mov eax [ esi + 0x8 ]
mov ecx [ r--data ]
mov ebx eax
mov [ esp + 0x10 ] edi
cmp ecx ebx
jae r-xdata
cmp ebp esi
jne r-xdata
mov ebx ecx
cmp ebx edi
jbe r-xdata
cmp ebx edi
mov esi ecx
jbe r-xdata
push 0x1
push ebx
mov ecx ebp
call sub_4083b0
test al al
je r-xdata
cmp ebx eax
jne r-xdata
mov ecx ebp
call sub_4084d0
mov eax [ ebp + 0x8 ]
sub eax ebx
cmp eax esi
jae r-xdata
call sub_40d597
pop edi
mov eax ebp
pop esi
pop ebp
pop ebx
pop ecx
retn 0x4
mov esi [ esi + 0x4 ]
cmp esi edi
jne r-xdata
mov eax [ esi + 0x4 ]
cmp eax edi
jne r-xdata
cmp esi edi
jbe r-xdata
mov esi eax
mov edi [ ebp + 0x4 ]
mov ecx ebx
mov eax ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov ecx [ ebp + 0x4 ]
mov [ ebp + 0x8 ] ebx
mov [ ebx + ecx ] 0x0
mov esi r--data
cmp [ eax - 0x1 ] 0xfe
jae r-xdata
mov eax r--data
mov ecx ebp
call sub_4084d0
pop edi
mov eax ebp
pop esi
pop ebp
pop ebx
pop ecx
retn 0x4
mov ecx [ ebp + 0x4 ]
sub eax esi
add ebx ecx
push eax
lea edx [ ebx + esi ]
push edx
push ebx
call sub_40db20
mov ebx [ ebp + 0x8 ]
add esp 0xc
sub ebx esi
mov ecx ebp
push edi
push ebx
call sub_4083b0
test al al
je r-xdata
push 0x1
mov ecx ebp
call sub_4085a0
mov eax [ esi + 0x4 ]
cmp eax edi
jne r-xdata
push ebx
mov ecx ebp
call sub_408310
mov [ ebp + 0x4 ] eax
mov ecx [ esi + 0x8 ]
mov [ ebp + 0x8 ] ecx
mov edx [ esi + 0xc ]
mov [ ebp + 0xc ] edx
mov cl [ eax - 0x1 ]
inc cl
pop edi
mov [ eax - 0x1 ] cl
mov eax ebp
pop esi
pop ebp
pop ebx
pop ecx
retn 0x4
mov eax r--data
sub_403310
push 0xffffffff
push sub_418118
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x6c
push ebx
push ebp
push esi
push edi
mov ebp ecx
lea esi [ ebp + 0xb4 ]
xor ebx ebx
push esi
lea ecx [ esp + 0x90 ]
mov [ esp + 0x88 ] ebx
call sub_409e20
test eax eax
jne r-xdata
mov eax [ r--data ]
lea ecx [ esp + 0x8c ]
push eax
push ebx
push ecx
mov ecx esi
call sub_408080
mov dl [ esp + 0x8c ]
push ebx
lea ecx [ esp + 0x30 ]
mov [ esp + 0x30 ] dl
call sub_4085a0
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
push ecx
push rw-data
lea ecx [ esp + 0x34 ]
call sub_408900
mov al [ esp + 0x8c ]
push ebx
lea ecx [ esp + 0x20 ]
mov [ esp + 0x88 ] 0x1
mov [ esp + 0x20 ] al
call sub_4085a0
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
push ecx
push rw-data
lea ecx [ esp + 0x24 ]
call sub_408900
mov edi rw-data
or ecx 0xffffffff
xor eax eax
mov [ esp + 0x84 ] 0x2
[ edi ]
not ecx
dec ecx
push ecx
push rw-data
lea ecx [ esp + 0x34 ]
call sub_408900
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
push ecx
push rw-data
lea ecx [ esp + 0x24 ]
call sub_408900
mov cl [ esp + 0x1c ]
sub esp 0x10
mov esi esp
mov [ esp + 0x20 ] esp
push ebx
mov [ esi ] cl
mov ecx esi
call sub_4085a0
mov edx [ r--data ]
lea eax [ esp + 0x2c ]
push edx
push ebx
push eax
mov ecx esi
call sub_408080
sub esp 0x10
mov [ esp + 0xa4 ] 0x3
mov ecx esp
mov [ esp + 0x34 ] esp
lea edx [ esp + 0x4c ]
push edx
call sub_407a00
sub esp 0x10
lea eax [ esp + 0xbc ]
mov ecx esp
mov [ esp + 0x48 ] esp
push eax
mov [ esp + 0xb8 ] 0x4
call sub_407a00
lea ecx [ esp + 0x6c ]
mov [ esp + 0xb4 ] 0x2
push ecx
mov ecx ebp
call sub_405f90
mov edi rw-data
or ecx 0xffffffff
xor eax eax
mov [ esp + 0x84 ] 0x5
[ edi ]
not ecx
dec ecx
push ecx
push rw-data
lea ecx [ esp + 0x34 ]
call sub_408900
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
push ecx
push rw-data
lea ecx [ esp + 0x24 ]
call sub_408900
mov dl [ esp + 0x1c ]
sub esp 0x10
mov esi esp
mov [ esp + 0x28 ] esp
push ebx
mov ecx esi
mov [ esi ] dl
call sub_4085a0
mov eax [ r--data ]
lea ecx [ esp + 0x2c ]
push eax
push ebx
push ecx
mov ecx esi
call sub_408080
sub esp 0x10
lea edx [ esp + 0x4c ]
mov ecx esp
mov [ esp + 0x34 ] esp
push edx
mov [ esp + 0xa8 ] 0x6
call sub_407a00
sub esp 0x10
lea eax [ esp + 0xbc ]
mov ecx esp
mov [ esp + 0x40 ] esp
push eax
mov [ esp + 0xb8 ] 0x7
call sub_407a00
lea ecx [ esp + 0x8c ]
mov [ esp + 0xb4 ] 0x5
push ecx
mov ecx ebp
call sub_405f90
push rw-data
lea ecx [ esp + 0x40 ]
mov [ esp + 0x88 ] 0x8
call sub_409e70
test eax eax
jne r-xdata
mov ecx ebp
call sub_405f70
push eax
call [ Sleep@IAT ]
push 0x1
lea ecx [ esp + 0x90 ]
mov [ esp + 0x88 ] 0xffffffff
call sub_4085a0
jmp r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
mov eax [ esp + 0x44 ]
not ecx
dec ecx
push ecx
push rw-data
push eax
push ebx
lea ecx [ esp + 0x4c ]
call sub_409ed0
cmp eax ebx
jne r-xdata
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
push ecx
push rw-data
lea ecx [ esp + 0x34 ]
call sub_408900
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
push ecx
push rw-data
lea ecx [ esp + 0x24 ]
call sub_408900
mov dl [ esp + 0x1c ]
sub esp 0x10
mov esi esp
mov [ esp + 0x28 ] esp
push 0x0
mov ecx esi
mov [ esi ] dl
call sub_4085a0
mov eax [ r--data ]
lea ecx [ esp + 0x2c ]
push eax
push 0x0
push ecx
mov ecx esi
call sub_408080
sub esp 0x10
lea edx [ esp + 0x4c ]
mov ecx esp
mov [ esp + 0x34 ] esp
push edx
mov [ esp + 0xa8 ] 0x9
call sub_407a00
sub esp 0x10
lea eax [ esp + 0xbc ]
mov ecx esp
mov [ esp + 0x40 ] esp
push eax
mov [ esp + 0xb8 ] 0xa
call sub_407a00
lea ecx [ esp + 0x9c ]
mov [ esp + 0xb4 ] 0x8
push ecx
mov ecx ebp
call sub_405f90
mov edi rw-data
or ecx 0xffffffff
xor eax eax
mov bl 0xb
[ edi ]
not ecx
dec ecx
mov [ esp + 0x84 ] bl
push ecx
push rw-data
lea ecx [ esp + 0x34 ]
call sub_408900
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
push ecx
push rw-data
lea ecx [ esp + 0x24 ]
call sub_408900
sub esp 0x10
mov [ esp + 0x28 ] esp
mov esi esp
mov dl [ esp + 0x2c ]
push 0x0
mov ecx esi
mov [ esi ] dl
call sub_4085a0
mov eax [ r--data ]
lea ecx [ esp + 0x2c ]
push eax
push 0x0
push ecx
mov ecx esi
call sub_408080
sub esp 0x10
lea edx [ esp + 0x4c ]
mov ecx esp
mov [ esp + 0x34 ] esp
push edx
mov [ esp + 0xa8 ] 0xc
call sub_407a00
sub esp 0x10
lea eax [ esp + 0xbc ]
mov ecx esp
mov [ esp + 0x40 ] esp
push eax
mov [ esp + 0xb8 ] 0xd
call sub_407a00
lea ecx [ esp + 0x7c ]
mov [ esp + 0xb4 ] bl
push ecx
mov ecx ebp
call sub_405f90
mov dl [ esp + 0x6c ]
sub esp 0x10
mov esi esp
mov [ esp + 0x28 ] esp
push 0x0
mov ecx esi
mov [ esp + 0x98 ] 0xe
mov [ esi ] dl
call sub_4085a0
mov eax [ r--data ]
lea ecx [ esp + 0x7c ]
push eax
push 0x0
push ecx
mov ecx esi
call sub_408080
sub esp 0x10
lea edx [ esp + 0x6c ]
mov ecx esp
mov [ esp + 0x34 ] esp
push edx
mov [ esp + 0xa8 ] 0xf
call sub_407a00
mov ecx ebp
mov [ esp + 0xa4 ] 0xe
call sub_404c70
push 0x1
lea ecx [ esp + 0x50 ]
mov [ esp + 0x88 ] bl
call sub_4085a0
push 0x1
lea ecx [ esp + 0x70 ]
mov [ esp + 0x88 ] 0x8
call sub_4085a0
xor ebx ebx
mov ecx [ esp + 0x7c ]
pop edi
pop esi
pop ebp
mov [ fs : 0x0 ] ecx
pop ebx
add esp 0x78
retn 0x10
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
mov eax [ esp + 0x44 ]
not ecx
dec ecx
push ecx
push rw-data
push eax
push ebx
lea ecx [ esp + 0x4c ]
call sub_409ed0
cmp eax ebx
jne r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
push ecx
push rw-data
lea ecx [ esp + 0x34 ]
call sub_408900
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
push ecx
push rw-data
lea ecx [ esp + 0x24 ]
call sub_408900
mov cl [ esp + 0x1c ]
sub esp 0x10
mov esi esp
mov [ esp + 0x28 ] esp
push ebx
mov [ esi ] cl
mov ecx esi
call sub_4085a0
mov edx [ r--data ]
lea eax [ esp + 0x2c ]
push edx
push ebx
push eax
mov ecx esi
call sub_408080
sub esp 0x10
lea edx [ esp + 0x4c ]
mov ecx esp
mov [ esp + 0x34 ] esp
push edx
mov [ esp + 0xa8 ] 0x10
call sub_407a00
sub esp 0x10
lea eax [ esp + 0xbc ]
mov ecx esp
mov [ esp + 0x40 ] esp
push eax
mov [ esp + 0xb8 ] 0x11
call sub_407a00
lea ecx [ esp + 0x9c ]
mov [ esp + 0xb4 ] 0x8
push ecx
mov ecx ebp
call sub_405f90
push ebx
lea edx [ esp + 0x70 ]
sub esp 0x10
mov [ esp + 0x98 ] 0x12
mov ecx esp
mov [ esp + 0x2c ] esp
push edx
call sub_407a00
mov ecx ebp
call sub_404680
push 0x1
lea ecx [ esp + 0x70 ]
mov [ esp + 0x88 ] 0x8
call sub_4085a0
mov ecx [ esp + 0x60 ]
cmp ecx ebx
je r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
push ecx
push rw-data
lea ecx [ esp + 0x34 ]
call sub_408900
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
push ecx
push rw-data
lea ecx [ esp + 0x24 ]
call sub_408900
mov cl [ esp + 0x1c ]
sub esp 0x10
mov esi esp
mov [ esp + 0x28 ] esp
push ebx
mov [ esi ] cl
mov ecx esi
call sub_4085a0
mov edx [ r--data ]
lea eax [ esp + 0x2c ]
push edx
push ebx
push eax
mov ecx esi
call sub_408080
sub esp 0x10
lea edx [ esp + 0x4c ]
mov ecx esp
mov [ esp + 0x34 ] esp
push edx
mov [ esp + 0xa8 ] 0x13
call sub_407a00
sub esp 0x10
lea eax [ esp + 0xbc ]
mov ecx esp
mov [ esp + 0x40 ] esp
push eax
mov [ esp + 0xb8 ] 0x14
call sub_407a00
lea ecx [ esp + 0x7c ]
mov [ esp + 0xb4 ] 0x8
push ecx
mov ecx ebp
call sub_405f90
mov edi rw-data
or ecx 0xffffffff
xor eax eax
mov edx [ esp + 0x54 ]
[ edi ]
not ecx
dec ecx
mov [ esp + 0x84 ] 0x15
push ecx
push rw-data
push edx
push ebx
lea ecx [ esp + 0x5c ]
call sub_409ed0
cmp eax ebx
jne r-xdata
mov ecx [ esp + 0x40 ]
mov [ esp + 0x60 ] ebx
cmp ecx ebx
mov [ esp + 0x64 ] ebx
mov [ esp + 0x68 ] ebx
je r-xdata
mov al [ ecx - 0x1 ]
test al al
je r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
push ecx
push ebx
push rw-data
lea ecx [ esp + 0x58 ]
call sub_408280
cmp eax 0xffffffff
je r-xdata
cmp [ ebp + 0xc4 ] 0x1
jne r-xdata
mov ecx [ esp + 0x20 ]
mov [ esp + 0x40 ] ebx
cmp ecx ebx
mov [ esp + 0x44 ] ebx
mov [ esp + 0x48 ] ebx
je r-xdata
mov al [ ecx - 0x1 ]
test al al
je r-xdata
dec ecx
push ecx
call sub_40d360
add esp 0x4
cmp al 0xff
je r-xdata
mov al [ ebp + 0xc4 ]
test al al
jne r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
push 0x1
[ edi ]
not ecx
dec ecx
mov ebx ecx
lea ecx [ esp + 0x30 ]
push ebx
call sub_4083b0
test al al
je r-xdata
mov [ ebp + 0x8c ] 0x0
mov al [ esp + 0x8c ]
sub esp 0x10
mov esi esp
mov [ esp + 0x28 ] esp
push ebx
mov ecx esi
mov [ esi ] al
call sub_4085a0
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
push ecx
push rw-data
mov ecx esi
call sub_408900
mov ecx ebp
call sub_4044e0
mov ecx [ esp + 0x30 ]
mov [ esp + 0x20 ] ebx
cmp ecx ebx
mov [ esp + 0x24 ] ebx
mov [ esp + 0x28 ] ebx
je r-xdata
mov al [ ecx - 0x1 ]
test al al
je r-xdata
dec ecx
push ecx
call sub_40d360
add esp 0x4
cmp al 0xff
je r-xdata
dec al
mov [ ecx - 0x1 ] al
jmp r-xdata
mov dl [ esp + 0x4c ]
sub esp 0x10
mov ecx esp
mov [ esp + 0x28 ] esp
mov [ ecx ] dl
mov [ ecx + 0x4 ] ebx
mov [ ecx + 0x8 ] ebx
mov [ ecx + 0xc ] ebx
mov eax [ r--data ]
lea edx [ esp + 0x5c ]
push eax
push ebx
push edx
mov ecx ebp
call sub_403f50
test al al
jne r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
push 0x1
[ edi ]
not ecx
dec ecx
mov ebx ecx
lea ecx [ esp + 0x20 ]
push ebx
call sub_4083b0
test al al
je r-xdata
mov edi [ esp + 0x30 ]
mov ecx ebx
mov edx ecx
mov esi rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
push ebx
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ esp + 0x30 ]
call sub_408310
mov ecx [ esp + 0x90 ]
mov [ esp + 0x30 ] ebx
cmp ecx ebx
mov [ esp + 0x34 ] ebx
mov [ esp + 0x38 ] ebx
je r-xdata
mov al [ ecx - 0x1 ]
test al al
je r-xdata
dec ecx
push ecx
call sub_40d360
add esp 0x4
cmp al 0xff
je r-xdata
dec al
mov [ ecx - 0x1 ] al
jmp r-xdata
mov al [ ecx - 0x1 ]
test al al
je r-xdata
mov cl [ esp + 0x4c ]
sub esp 0x10
mov esi esp
mov [ ebp + 0xc4 ] 0x1
mov [ esp + 0x28 ] esp
push ebx
mov [ esi ] cl
mov ecx esi
call sub_4085a0
mov edx [ r--data ]
lea eax [ esp + 0x5c ]
push edx
push ebx
push eax
mov ecx esi
jmp r-xdata
mov ecx [ esp + 0x50 ]
cmp ecx ebx
je r-xdata
mov cl [ esp + 0x1c ]
sub esp 0x10
mov esi esp
xor ebx ebx
mov [ esp + 0x28 ] esp
push ebx
mov [ esi ] cl
mov ecx esi
call sub_4085a0
mov edx [ r--data ]
lea eax [ esp + 0x2c ]
push edx
push ebx
push eax
mov ecx esi
call sub_408080
sub esp 0x10
lea edx [ esp + 0x4c ]
mov ecx esp
mov [ esp + 0x34 ] esp
push edx
mov [ esp + 0xa8 ] 0x16
call sub_407a00
sub esp 0x10
lea eax [ esp + 0xbc ]
mov ecx esp
mov [ esp + 0x40 ] esp
push eax
mov [ esp + 0xb8 ] 0x17
call sub_407a00
lea ecx [ esp + 0x9c ]
mov [ esp + 0xb4 ] 0x15
push ecx
mov ecx ebp
call sub_405f90
mov edi rw-data
or ecx 0xffffffff
xor eax eax
mov edx [ esp + 0x74 ]
[ edi ]
not ecx
dec ecx
mov [ esp + 0x84 ] 0x18
push ecx
push rw-data
push edx
push ebx
lea ecx [ esp + 0x7c ]
call sub_409ed0
cmp eax ebx
je r-xdata
mov edi [ esp + 0x20 ]
mov ecx ebx
mov eax ecx
mov esi rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
push ebx
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ esp + 0x20 ]
call sub_408310
mov al [ ecx - 0x1 ]
test al al
je r-xdata
dec ecx
push ecx
call sub_40d360
add esp 0x4
cmp al 0xff
je r-xdata
dec al
mov [ ecx - 0x1 ] al
jmp r-xdata
dec ecx
push ecx
call sub_40d360
add esp 0x4
cmp al 0xff
je r-xdata
call sub_408080
mov ecx ebp
call sub_4044e0
mov ecx [ esp + 0x50 ]
cmp ecx ebx
je r-xdata
mov ecx [ esp + 0x60 ]
mov [ esp + 0x50 ] ebx
cmp ecx ebx
mov [ esp + 0x54 ] ebx
mov [ esp + 0x58 ] ebx
je r-xdata
mov al [ ecx - 0x1 ]
test al al
je r-xdata
push 0x1
lea ecx [ esp + 0x70 ]
mov [ esp + 0x88 ] 0x15
call sub_4085a0
push 0x1
lea ecx [ esp + 0x50 ]
mov [ esp + 0x88 ] 0x8
call sub_4085a0
push 0x1
lea ecx [ esp + 0x60 ]
mov [ esp + 0x88 ] 0x5
call sub_4085a0
push 0x1
lea ecx [ esp + 0x40 ]
mov [ esp + 0x88 ] 0x2
call sub_4085a0
push 0x1
lea ecx [ esp + 0x20 ]
mov [ esp + 0x88 ] 0x1
call sub_4085a0
jmp r-xdata
mov eax [ esp + 0x70 ]
cmp eax ebx
jne r-xdata
dec ecx
push ecx
call sub_40d360
add esp 0x4
cmp al 0xff
je r-xdata
dec al
mov [ ecx - 0x1 ] al
jmp r-xdata
dec al
mov [ ecx - 0x1 ] al
jmp r-xdata
mov ecx [ esp + 0x40 ]
mov [ esp + 0x60 ] ebx
cmp ecx ebx
mov [ esp + 0x64 ] ebx
mov [ esp + 0x68 ] ebx
je r-xdata
mov al [ ecx - 0x1 ]
test al al
je r-xdata
dec ecx
push ecx
call sub_40d360
add esp 0x4
cmp al 0xff
je r-xdata
mov ecx [ esp + 0x30 ]
cmp ecx ebx
je r-xdata
push eax
call sub_40dee0
add esp 0x4
cmp eax ebx
jg r-xdata
mov eax r--data
dec al
mov [ ecx - 0x1 ] al
jmp r-xdata
mov ecx [ esp + 0x20 ]
mov [ esp + 0x40 ] ebx
cmp ecx ebx
mov [ esp + 0x44 ] ebx
mov [ esp + 0x48 ] ebx
je r-xdata
mov al [ ecx - 0x1 ]
test al al
je r-xdata
dec ecx
push ecx
call sub_40d360
add esp 0x4
cmp al 0xff
je r-xdata
dec al
mov [ ecx - 0x1 ] al
jmp r-xdata
mov ecx [ esp + 0x90 ]
mov [ esp + 0x30 ] ebx
cmp ecx ebx
mov [ esp + 0x34 ] ebx
mov [ esp + 0x38 ] ebx
je r-xdata
mov al [ ecx - 0x1 ]
test al al
je r-xdata
lea eax [ eax + eax * 2 ]
lea eax [ eax + eax * 4 ]
lea eax [ eax + eax * 4 ]
lea eax [ eax + eax * 4 ]
lea eax [ eax + eax * 4 ]
shl eax 0x5
push eax
call [ Sleep@IAT ]
push 0x1
lea ecx [ esp + 0x70 ]
mov [ esp + 0x88 ] 0x15
call sub_4085a0
jmp r-xdata
mov [ esp + 0x20 ] ebx
mov [ esp + 0x24 ] ebx
mov [ esp + 0x28 ] ebx
mov al [ ecx - 0x1 ]
test al al
je r-xdata
dec ecx
push ecx
call sub_40d360
add esp 0x4
cmp al 0xff
je r-xdata
dec al
mov [ ecx - 0x1 ] al
jmp r-xdata
mov al [ ecx - 0x1 ]
test al al
je r-xdata
dec ecx
push ecx
call sub_40d360
add esp 0x4
cmp al 0xff
je r-xdata
push 0x1
lea ecx [ esp + 0x50 ]
mov [ esp + 0x88 ] 0x8
call sub_4085a0
push 0x1
lea ecx [ esp + 0x60 ]
mov [ esp + 0x88 ] 0x5
call sub_4085a0
push 0x1
lea ecx [ esp + 0x40 ]
mov [ esp + 0x88 ] 0x2
call sub_4085a0
push 0x1
lea ecx [ esp + 0x20 ]
mov [ esp + 0x88 ] 0x1
call sub_4085a0
push 0x1
lea ecx [ esp + 0x30 ]
mov [ esp + 0x88 ] 0x0
call sub_4085a0
push 0x1
lea ecx [ esp + 0x90 ]
mov [ esp + 0x88 ] 0xffffffff
call sub_4085a0
jmp r-xdata
dec ecx
push ecx
call sub_40d360
add esp 0x4
cmp al 0xff
je r-xdata
dec al
mov [ ecx - 0x1 ] al
jmp r-xdata
cmp al 0xff
je r-xdata
dec al
mov [ ecx - 0x1 ] al
jmp r-xdata
dec al
mov [ ecx - 0x1 ] al
jmp r-xdata
dec al
mov [ ecx - 0x1 ] al
jmp r-xdata
sub_403f50
push 0xffffffff
push sub_418159
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x8c
push ebx
push ebp
mov ebp ecx
push esi
push edi
mov edi [ CreatePipe@IAT ]
lea ecx [ esp + 0x3c ]
lea eax [ ebp + 0xcc ]
push 0x0
lea esi [ ebp + 0xc8 ]
push ecx
push eax
push esi
mov [ esp + 0x4c ] 0xc
mov [ esp + 0x50 ] 0x0
mov [ esp + 0x54 ] 0x1
call edi
test eax eax
jne r-xdata
lea edx [ esp + 0x3c ]
lea ebx [ ebp + 0xd4 ]
push 0x0
lea eax [ ebp + 0xd0 ]
push edx
push ebx
push eax
call edi
test eax eax
jne r-xdata
push rw-data
call sub_40dfed
add esp 0x4
push 0x0
call sub_40df18
mov ecx 0x11
xor eax eax
lea edi [ esp + 0x58 ]
[ edi ]
lea eax [ esp + 0x58 ]
mov [ esp + 0x58 ] 0x44
push eax
call [ GetStartupInfoA@IAT ]
mov ecx [ esi ]
mov eax [ ebx ]
lea edx [ esp + 0x48 ]
mov [ esp + 0x90 ] ecx
xor edi edi
push edx
mov ecx ebp
mov [ esp + 0x9c ] eax
mov [ esp + 0x98 ] eax
mov [ esp + 0x8c ] di
mov [ esp + 0x88 ] 0x101
call sub_406400
push rw-data
mov [ esp + 0xa8 ] edi
call [ LoadLibraryA@IAT ]
mov esi eax
cmp esi edi
mov [ esp + 0x34 ] esi
jne r-xdata
push rw-data
call sub_40dfed
add esp 0x4
push 0x0
call sub_40df18
mov al [ esp + 0x13 ]
push edi
lea ecx [ esp + 0x18 ]
mov [ esp + 0x18 ] al
call sub_4085a0
mov edi rw-data
or ecx 0xffffffff
xor eax eax
push 0x1
[ edi ]
not ecx
dec ecx
mov ebx ecx
lea ecx [ esp + 0x18 ]
push ebx
call sub_4083b0
test al al
je r-xdata
push 0x1
lea ecx [ esp + 0x4c ]
mov [ esp + 0xa8 ] 0xffffffff
call sub_4085a0
xor al al
jmp r-xdata
mov eax [ esp + 0x18 ]
xor edi edi
cmp eax edi
mov [ esp + 0xa4 ] 0x1
mov [ esp + 0x38 ] edi
jne r-xdata
mov edi [ esp + 0x18 ]
mov ecx ebx
mov edx ecx
mov esi rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
push ebx
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ esp + 0x18 ]
call sub_408310
mov esi [ esp + 0x34 ]
mov ecx [ esp + 0x9c ]
pop edi
pop esi
pop ebp
mov [ fs : 0x0 ] ecx
pop ebx
add esp 0x98
retn
mov edx [ esp + 0x1c ]
lea ecx [ esp + 0x38 ]
push ecx
push edx
push eax
lea eax [ esp + 0x30 ]
push eax
mov ecx ebp
call sub_407280
mov ecx [ r--data ]
mov [ esp + 0xa4 ] 0x2
push ecx
push edi
push eax
lea ecx [ esp + 0x20 ]
call sub_408080
push 0x1
lea ecx [ esp + 0x28 ]
mov [ esp + 0xa8 ] 0x1
call sub_4085a0
mov eax [ esp + 0x18 ]
cmp eax edi
jne r-xdata
mov eax r--data
push eax
push esi
call [ GetProcAddress@IAT ]
mov ecx [ esp + 0x4c ]
mov [ ebp + 0xe8 ] eax
cmp ecx edi
jne r-xdata
mov eax r--data
lea edx [ ebp + 0xd8 ]
push edx
lea edx [ esp + 0x5c ]
push edx
push edi
push edi
push edi
push 0x1
push edi
push edi
push edi
push ecx
call eax
test eax eax
jne r-xdata
mov ecx r--data
push edi
push edi
push ebp
push sub_404360
push edi
push edi
call [ CreateThread@IAT ]
mov ecx [ esp + 0x18 ]
cmp ecx edi
je r-xdata
mov eax [ ebp + 0xc8 ]
mov esi [ CloseHandle@IAT ]
cmp eax 0xffffffff
je r-xdata
mov ecx [ esp + 0x4c ]
mov [ esp + 0x18 ] edi
cmp ecx edi
mov [ esp + 0x1c ] edi
mov [ esp + 0x20 ] edi
je r-xdata
mov al [ ecx - 0x1 ]
test al al
je r-xdata
mov eax [ ebp + 0xd4 ]
cmp eax 0xffffffff
je r-xdata
push eax
call esi
mov al 0x1
mov al [ ecx - 0x1 ]
test al al
je r-xdata
dec ecx
push ecx
call sub_40d360
add esp 0x4
cmp al 0xff
je r-xdata
mov eax [ ebp + 0xcc ]
cmp eax 0xffffffff
je r-xdata
push eax
call esi
dec ecx
push ecx
call sub_40d360
add esp 0x4
cmp al 0xff
je r-xdata
dec al
mov [ ecx - 0x1 ] al
jmp r-xdata
mov eax [ ebp + 0xd0 ]
cmp eax 0xffffffff
je r-xdata
push eax
call esi
dec al
mov [ ecx - 0x1 ] al
jmp r-xdata
mov al [ esp + 0x13 ]
push edi
lea ecx [ esp + 0x28 ]
mov [ esp + 0x28 ] al
call sub_4085a0
mov edi rw-data
or ecx 0xffffffff
xor eax eax
push 0x1
[ edi ]
not ecx
dec ecx
mov ebx ecx
lea ecx [ esp + 0x28 ]
push ebx
call sub_4083b0
test al al
je r-xdata
push eax
call esi
mov cl [ esp + 0x24 ]
sub esp 0x10
mov esi esp
xor edi edi
mov [ esp + 0x44 ] esp
push edi
mov [ esi ] cl
mov ecx esi
mov [ esp + 0xb8 ] 0x3
call sub_4085a0
mov edx [ r--data ]
lea eax [ esp + 0x34 ]
push edx
push edi
push eax
mov ecx esi
call sub_408080
mov ecx ebp
call sub_405350
mov ecx [ esp + 0x28 ]
cmp ecx edi
je r-xdata
mov edi [ esp + 0x28 ]
mov ecx ebx
mov edx ecx
mov esi rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov eax [ esp + 0x28 ]
mov [ esp + 0x2c ] ebx
mov [ eax + ebx ] 0x0
mov ecx [ esp + 0x18 ]
mov [ esp + 0x28 ] edi
cmp ecx edi
mov [ esp + 0x2c ] edi
mov [ esp + 0x30 ] edi
je r-xdata
mov al [ ecx - 0x1 ]
test al al
je r-xdata
mov ecx [ esp + 0x4c ]
mov [ esp + 0x18 ] edi
cmp ecx edi
mov [ esp + 0x1c ] edi
mov [ esp + 0x20 ] edi
je r-xdata
mov al [ ecx - 0x1 ]
test al al
je r-xdata
dec ecx
push ecx
call sub_40d360
add esp 0x4
cmp al 0xff
je r-xdata
xor al al
jmp r-xdata
mov al [ ecx - 0x1 ]
test al al
je r-xdata
dec ecx
push ecx
call sub_40d360
add esp 0x4
cmp al 0xff
je r-xdata
dec al
mov [ ecx - 0x1 ] al
jmp r-xdata
dec ecx
push ecx
call sub_40d360
add esp 0x4
cmp al 0xff
je r-xdata
dec al
mov [ ecx - 0x1 ] al
jmp r-xdata
dec al
mov [ ecx - 0x1 ] al
xor al al
jmp r-xdata
sub_404380
push 0xffffffff
push sub_41817b
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x820
push ebx
push ebp
push esi
mov esi ecx
xor ebx ebx
push edi
mov al [ esi + 0xc4 ]
mov [ esp + 0x24 ] esi
cmp al bl
je r-xdata
mov ecx [ esp + 0x830 ]
pop edi
pop esi
pop ebp
xor eax eax
mov [ fs : 0x0 ] ecx
pop ebx
add esp 0x82c
retn
mov edx [ esi + 0xd0 ]
mov ecx 0x200
xor eax eax
lea edi [ esp + 0x30 ]
[ edi ]
lea eax [ esp + 0x28 ]
push ebx
push eax
lea ecx [ esp + 0x38 ]
push 0x7ff
push ecx
push edx
call [ ReadFile@IAT ]
test eax eax
je r-xdata
cmp [ esi + 0xc4 ] bl
jne r-xdata
mov al [ esp + 0x13 ]
lea edi [ esp + 0x30 ]
mov [ esp + 0x14 ] al
or ecx 0xffffffff
xor eax eax
push 0x1
[ edi ]
not ecx
dec ecx
mov [ esp + 0x1c ] ebx
mov ebp ecx
lea ecx [ esp + 0x18 ]
push ebp
mov [ esp + 0x24 ] ebx
mov [ esp + 0x28 ] ebx
call sub_4083b0
test al al
je r-xdata
mov dl [ esp + 0x14 ]
sub esp 0x10
mov ecx esp
mov [ esp + 0x3c ] esp
mov [ esp + 0x848 ] ebx
mov [ ecx ] dl
mov [ ecx + 0x4 ] ebx
mov [ ecx + 0x8 ] ebx
mov [ ecx + 0xc ] ebx
mov eax [ r--data ]
lea edx [ esp + 0x24 ]
push eax
push ebx
push edx
call sub_408080
mov ecx esi
call sub_405350
mov ecx [ esp + 0x18 ]
mov [ esp + 0x838 ] 0xffffffff
cmp ecx ebx
je r-xdata
mov edi [ esp + 0x18 ]
mov ecx ebp
mov edx ecx
lea esi [ esp + 0x30 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov eax [ esp + 0x18 ]
mov esi [ esp + 0x24 ]
mov [ esp + 0x1c ] ebp
mov [ eax + ebp ] bl
mov [ esp + 0x18 ] ebx
mov [ esp + 0x1c ] ebx
mov [ esp + 0x20 ] ebx
mov al [ ecx - 0x1 ]
cmp al bl
je r-xdata
dec ecx
push ecx
call sub_40d360
add esp 0x4
cmp al 0xff
je r-xdata
dec al
mov [ ecx - 0x1 ] al
jmp r-xdata
sub_4044e0
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_418198
push eax
mov [ fs : 0x0 ] esp
sub esp 0x5e0
push ebx
push ebp
push edi
mov ebp ecx
mov ebx [ esp + 0x604 ]
mov ecx 0x177
xor eax eax
lea edi [ esp + 0x10 ]
cmp ebx 0x5dc
[ edi ]
jbe r-xdata
push esi
mov esi [ esp + 0x604 ]
test esi esi
jne r-xdata
mov ecx [ esp + 0x600 ]
test ecx ecx
je r-xdata
mov ecx ebx
lea edi [ esp + 0x14 ]
mov eax ecx
lea edx [ esp + 0x14 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
push eax
[ edi ] [ esi ]
lea edi [ esp + 0x18 ]
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
lea edi [ esp + 0x18 ]
mov [ esp + ecx + 0x18 ] 0xa
lea ecx [ esp + 0x14 ]
push ecx
or ecx 0xffffffff
[ edi ]
mov eax [ ebp + 0xcc ]
not ecx
dec ecx
push ecx
push edx
push eax
call [ WriteFile@IAT ]
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
mov edx ecx
mov ecx ebx
cmp ebx edx
jb r-xdata
mov esi r--data
mov ecx [ esp + 0x5ec ]
pop edi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x5ec
retn 0x10
mov al [ ecx - 0x1 ]
test al al
je r-xdata
mov esi [ esp + 0x604 ]
mov edi rw-data
xor eax eax
[ esi ] [ edi ]
je r-xdata
mov ecx edx
dec ecx
push ecx
call sub_40d360
add esp 0x4
cmp al 0xff
je r-xdata
test eax eax
jne r-xdata
sbb eax eax
sbb eax 0xffffffff
dec al
mov [ ecx - 0x1 ] al
jmp r-xdata
mov ecx [ esp + 0x604 ]
pop esi
test ecx ecx
je r-xdata
cmp ebx edx
jb r-xdata
mov al [ ecx - 0x1 ]
test al al
je r-xdata
cmp ebx edx
setne al
test eax eax
jne r-xdata
cmp al 0xff
je r-xdata
mov ecx [ ebp + 0xd8 ]
push 0x1
push ecx
mov [ ebp + 0xc4 ] al
call [ TerminateProcess@IAT ]
mov eax [ ebp + 0xc8 ]
mov esi [ CloseHandle@IAT ]
cmp eax 0xffffffff
je r-xdata
dec al
mov [ ecx - 0x1 ] al
jmp r-xdata
mov eax [ ebp + 0xd4 ]
cmp eax 0xffffffff
je r-xdata
push eax
call esi
mov eax [ ebp + 0xcc ]
cmp eax 0xffffffff
je r-xdata
push eax
call esi
mov ebp [ ebp + 0xd0 ]
cmp ebp 0xffffffff
je r-xdata
push eax
call esi
push ebp
call esi
sub_404680
push 0xffffffff
push sub_4181f8
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x4c
push ebx
push ebp
mov ebp ecx
push esi
push edi
mov [ esp + 0x10 ] ebp
mov al [ esp + 0x7c ]
xor esi esi
push esi
lea ecx [ esp + 0x30 ]
mov [ esp + 0x68 ] esi
mov [ esp + 0x30 ] al
call sub_4085a0
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
push ecx
push rw-data
lea ecx [ esp + 0x34 ]
call sub_408900
mov eax [ esp + 0x70 ]
mov [ esp + 0x64 ] 0x1
cmp eax esi
jne r-xdata
push 0x5c
push eax
call sub_40e240
add esp 0x8
cmp eax esi
je r-xdata
mov eax r--data
mov cl [ esp + 0x7c ]
push esi
mov [ esp + 0x40 ] cl
lea ecx [ esp + 0x40 ]
call sub_4085a0
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
push ecx
push rw-data
lea ecx [ esp + 0x44 ]
call sub_408900
mov dl [ esp + 0x3c ]
sub esp 0x10
mov edi esp
mov [ esp + 0x8c ] esp
push esi
mov ecx edi
mov [ esp + 0x78 ] 0x3
mov [ edi ] dl
call sub_4085a0
mov eax [ r--data ]
lea ecx [ esp + 0x4c ]
push eax
push esi
push ecx
mov ecx edi
call sub_408080
mov ecx ebp
call sub_405350
push 0x1
lea ecx [ esp + 0x40 ]
mov [ esp + 0x68 ] 0x1
call sub_4085a0
push 0x1
lea ecx [ esp + 0x30 ]
mov [ esp + 0x68 ] 0x0
call sub_4085a0
push 0x1
lea ecx [ esp + 0x70 ]
mov [ esp + 0x68 ] 0xffffffff
call sub_4085a0
mov cl [ esp + 0x7c ]
push esi
mov [ esp + 0x40 ] cl
lea ecx [ esp + 0x40 ]
lea ebx [ eax + 0x1 ]
call sub_4085a0
mov edi ebx
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
push ecx
push ebx
lea ecx [ esp + 0x44 ]
call sub_408900
mov edx [ r--data ]
lea eax [ esp + 0x3c ]
push edx
push esi
push eax
lea ecx [ esp + 0x38 ]
mov [ esp + 0x70 ] 0x2
call sub_408080
push 0x1
lea ecx [ esp + 0x40 ]
mov [ esp + 0x68 ] 0x1
call sub_4085a0
mov eax [ esp + 0x70 ]
cmp eax esi
jne r-xdata
push rw-data
push eax
call sub_40e22a
mov ebx eax
add esp 0x8
cmp ebx esi
je r-xdata
mov eax r--data
mov cl [ esp + 0x7c ]
push esi
mov [ esp + 0x20 ] cl
lea ecx [ esp + 0x20 ]
call sub_4085a0
mov edi rw-data
or ecx 0xffffffff
xor eax eax
push 0x1
[ edi ]
not ecx
dec ecx
mov ebx ecx
lea ecx [ esp + 0x20 ]
push ebx
call sub_4083b0
test al al
je r-xdata
push 0x2
push esi
push ebx
call sub_40e17e
lea ecx [ esp + 0x28 ]
push ecx
push ebx
call sub_40e15c
push esi
push esi
push ebx
call sub_40e17e
lea edx [ esp + 0x4c ]
lea eax [ esp + 0x6c ]
push edx
push rw-data
push eax
call sub_409600
push rw-data
lea ecx [ esp + 0x6c ]
push eax
push ecx
mov [ esp + 0x9c ] 0x4
call sub_4094d0
add esp 0x38
mov edx [ r--data ]
lea ecx [ esp + 0x2c ]
push edx
push esi
push eax
mov [ esp + 0x70 ] 0x5
call sub_408080
push 0x1
lea ecx [ esp + 0x40 ]
mov [ esp + 0x68 ] 0x4
call sub_4085a0
push 0x1
lea ecx [ esp + 0x50 ]
mov [ esp + 0x68 ] 0x1
call sub_4085a0
push 0x31128
call sub_40daa2
mov ebp eax
add esp 0x4
cmp ebp esi
je r-xdata
mov cl [ esp + 0x1c ]
sub esp 0x10
mov edi esp
mov [ esp + 0x8c ] esp
push esi
mov [ esp + 0x78 ] 0x8
mov [ edi ] cl
mov ecx edi
call sub_4085a0
mov edx [ r--data ]
lea eax [ esp + 0x2c ]
push edx
push esi
push eax
mov ecx edi
call sub_408080
mov ecx ebp
call sub_405350
mov ecx [ esp + 0x20 ]
cmp ecx esi
je r-xdata
mov edi [ esp + 0x20 ]
mov ecx ebx
mov edx ecx
mov esi rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
mov ebp [ esp + 0x10 ]
and ecx 0x3
[ edi ] [ esi ]
mov eax [ esp + 0x20 ]
mov [ esp + 0x24 ] ebx
xor esi esi
mov [ eax + ebx ] 0x0
mov dl [ esp + 0x7c ]
push esi
lea ecx [ esp + 0x40 ]
mov [ esp + 0x40 ] dl
call sub_4085a0
mov edi rw-data
or ecx 0xffffffff
xor eax eax
push 0x1
[ edi ]
not ecx
dec ecx
mov ebx ecx
lea ecx [ esp + 0x40 ]
push ebx
call sub_4083b0
test al al
je r-xdata
mov eax [ esp + 0x20 ]
mov ecx [ esp + 0x1c ]
cmp eax esi
jl r-xdata
mov [ esp + 0x20 ] esi
mov [ esp + 0x24 ] esi
mov [ esp + 0x28 ] esi
mov al [ ecx - 0x1 ]
test al al
je r-xdata
mov cl [ esp + 0x3c ]
sub esp 0x10
mov edi esp
mov [ esp + 0x8c ] esp
push esi
mov [ esp + 0x78 ] 0x7
mov [ edi ] cl
mov ecx edi
call sub_4085a0
mov edx [ r--data ]
lea eax [ esp + 0x4c ]
push edx
push esi
push eax
mov ecx edi
call sub_408080
mov ecx [ esp + 0x20 ]
call sub_405350
push 0x1
lea ecx [ esp + 0x40 ]
mov [ esp + 0x68 ] 0x1
call sub_4085a0
push 0x1
lea ecx [ esp + 0x30 ]
mov [ esp + 0x68 ] 0x0
call sub_4085a0
mov ecx [ esp + 0x70 ]
cmp ecx esi
je r-xdata
mov edi [ esp + 0x40 ]
mov ecx ebx
mov eax ecx
mov esi rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
push ebx
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ esp + 0x40 ]
call sub_408310
xor esi esi
mov ecx 0xc44a
xor eax eax
mov edi ebp
[ edi ]
mov eax [ esp + 0x30 ]
cmp eax esi
mov esi r--data
je r-xdata
jg r-xdata
mov ecx [ esp + 0x70 ]
mov [ esp + 0x30 ] esi
cmp ecx esi
mov [ esp + 0x34 ] esi
mov [ esp + 0x38 ] esi
je r-xdata
mov al [ ecx - 0x1 ]
test al al
je r-xdata
dec ecx
push ecx
call sub_40d360
add esp 0x4
cmp al 0xff
je r-xdata
mov ecx [ esp + 0x5c ]
pop edi
pop esi
pop ebp
mov [ fs : 0x0 ] ecx
pop ebx
add esp 0x58
retn 0x14
mov al [ ecx - 0x1 ]
test al al
je r-xdata
mov ecx [ esp + 0x34 ]
mov edi ebp
mov eax ecx
push ebx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
push 0x30d40
and ecx 0x3
push 0x1
[ edi ] [ esi ]
mov ecx [ esp + 0x40 ]
add ecx ebp
push ecx
call sub_40e074
mov edx [ esp + 0x44 ]
mov ecx [ esp + 0x20 ]
add esp 0x10
add edx eax
push edx
push ebp
call sub_405650
mov esi eax
push esi
push 0x30d40
push eax
push ecx
call sub_40e270
inc eax
mov [ esp + 0x14 ] esi
cmp eax esi
mov [ esp + 0x18 ] eax
jle r-xdata
cmp ecx 0x30d40
jbe r-xdata
mov al [ ecx - 0x1 ]
test al al
je r-xdata
dec ecx
push ecx
call sub_40d360
add esp 0x4
cmp al 0xff
je r-xdata
dec al
mov [ ecx - 0x1 ] al
jmp r-xdata
dec ecx
push ecx
call sub_40d360
add esp 0x4
jmp r-xdata
cmp al 0xff
je r-xdata
push ebx
call sub_40e01e
add esp 0x4
jmp r-xdata
push ebp
call sub_40d360
add esp 0x4
lea eax [ esp + 0x6c ]
push rw-data
lea ecx [ esp + 0x40 ]
push eax
push ecx
call sub_4094d0
mov dl [ esp + 0x48 ]
push ecx
mov edi esp
mov [ esp + 0x8c ] esp
push esi
mov ecx edi
mov [ esp + 0x78 ] 0x6
mov [ edi ] dl
call sub_4085a0
mov eax [ r--data ]
lea ecx [ esp + 0x4c ]
push eax
push esi
push ecx
mov ecx edi
call sub_408080
mov ecx [ esp + 0x20 ]
call sub_405350
push 0x1
lea ecx [ esp + 0x40 ]
mov [ esp + 0x68 ] 0x1
call sub_4085a0
cmp ebp esi
je r-xdata
jmp r-xdata
cmp al 0xff
je r-xdata
dec al
mov [ ecx - 0x1 ] al
jmp r-xdata
dec al
mov [ ecx - 0x1 ] al
jmp r-xdata
mov ecx [ esp + 0x30 ]
cmp ecx esi
je r-xdata
mov ecx 0xc44a
xor eax eax
mov edi ebp
[ edi ]
mov eax [ esp + 0x30 ]
cmp eax esi
mov esi r--data
je r-xdata
dec al
mov [ ecx - 0x1 ] al
jmp r-xdata
mov ecx [ esp + 0x34 ]
mov edi ebp
mov eax ecx
push ebx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
push 0x30d40
and ecx 0x3
push 0x1
[ edi ] [ esi ]
mov ecx [ esp + 0x40 ]
add ecx ebp
push ecx
call sub_40e074
mov esi [ esp + 0x24 ]
mov ecx [ esp + 0x8c ]
add esp 0x10
cmp esi ecx
jl r-xdata
mov esi eax
mov eax [ esp + 0x18 ]
inc esi
cmp esi eax
mov [ esp + 0x14 ] esi
jl r-xdata
mov edx [ esp + 0x34 ]
mov ecx [ esp + 0x10 ]
add edx eax
push edx
push ebp
call sub_405650
test al al
je r-xdata
xor esi esi
jmp r-xdata
push ebp
call sub_40d360
add esp 0x4
xor ebp ebp
jmp r-xdata
xor esi esi
sub_404c70
push 0xffffffff
push sub_41828b
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x7c
push ebx
push ebp
push esi
push edi
mov esi ecx
mov al [ esp + 0x12 ]
push 0x0
lea ecx [ esp + 0x20 ]
mov [ esp + 0x98 ] 0x1
mov [ esp + 0x20 ] al
call sub_4085a0
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
push ecx
push rw-data
lea ecx [ esp + 0x24 ]
call sub_408900
lea ecx [ esp + 0x7c ]
mov ebx 0x2
push ecx
mov ecx esi
mov [ esp + 0x98 ] bl
call sub_405e50
mov edi eax
lea edx [ esi + 0x7c ]
push rw-data
lea eax [ esp + 0x70 ]
push edx
push eax
mov [ esp + 0xa0 ] 0x3
call sub_4094d0
push edi
lea ecx [ esp + 0x6c ]
push eax
push ecx
mov [ esp + 0xac ] 0x4
call sub_4093a0
push rw-data
lea edx [ esp + 0x58 ]
push eax
push edx
mov [ esp + 0xb8 ] 0x5
call sub_4094d0
add esp 0x24
mov ecx [ r--data ]
mov [ esp + 0x94 ] 0x6
push ecx
push 0x0
push eax
lea ecx [ esp + 0x28 ]
call sub_408080
push 0x1
lea ecx [ esp + 0x40 ]
mov [ esp + 0x98 ] 0x5
call sub_4085a0
push 0x1
lea ecx [ esp + 0x60 ]
mov [ esp + 0x98 ] 0x4
call sub_4085a0
push 0x1
lea ecx [ esp + 0x70 ]
mov [ esp + 0x98 ] 0x3
call sub_4085a0
push 0x1
lea ecx [ esp + 0x80 ]
mov [ esp + 0x98 ] bl
call sub_4085a0
push ebx
sub esp 0x10
mov ecx esp
lea edx [ esp + 0x26 ]
mov [ esp + 0x28 ] esp
push edx
push rw-data
call sub_407b20
sub esp 0x10
lea eax [ esp + 0x37 ]
mov ecx esp
mov [ esp + 0x3c ] esp
push eax
push rw-data
mov [ esp + 0xc0 ] 0x7
call sub_407b20
mov ecx esi
mov [ esp + 0xb8 ] bl
call sub_401550
mov ecx esi
call sub_405a10
push ebx
lea edx [ esp + 0xa0 ]
sub esp 0x10
mov ecx esp
mov [ esp + 0x2c ] esp
push edx
call sub_407a00
sub esp 0x10
lea eax [ esp + 0x37 ]
mov ecx esp
mov [ esp + 0x38 ] esp
push eax
push rw-data
mov [ esp + 0xc0 ] 0x8
call sub_407b20
mov ecx esi
mov [ esp + 0xb8 ] bl
call sub_401550
mov cl [ esp + 0x13 ]
push 0x0
mov [ esp + 0x30 ] cl
lea ecx [ esp + 0x30 ]
call sub_4085a0
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
push ecx
push rw-data
lea ecx [ esp + 0x34 ]
call sub_408900
mov eax [ esp + 0xa0 ]
mov [ esp + 0x94 ] 0x9
test eax eax
jne r-xdata
push 0x5c
push eax
call sub_40e240
add esp 0x8
test eax eax
je r-xdata
mov eax r--data
mov al [ esp + 0x13 ]
push 0x0
lea ecx [ esp + 0x40 ]
mov [ esp + 0x40 ] al
call sub_4085a0
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
push ecx
push rw-data
lea ecx [ esp + 0x44 ]
call sub_408900
mov cl [ esp + 0x3c ]
sub esp 0x10
mov edi esp
mov [ esp + 0x28 ] esp
push 0x0
mov [ esp + 0xa8 ] 0xb
mov [ edi ] cl
mov ecx edi
call sub_4085a0
mov edx [ r--data ]
lea eax [ esp + 0x4c ]
push edx
push 0x0
push eax
mov ecx edi
call sub_408080
mov ecx esi
call sub_405350
push 0x1
lea ecx [ esp + 0x40 ]
mov [ esp + 0x98 ] 0x9
call sub_4085a0
push 0x1
lea ecx [ esp + 0x30 ]
mov [ esp + 0x98 ] bl
call sub_4085a0
push 0x1
lea ecx [ esp + 0x20 ]
mov [ esp + 0x98 ] 0x1
call sub_4085a0
push 0x1
lea ecx [ esp + 0xa0 ]
mov [ esp + 0x98 ] 0x0
call sub_4085a0
push 0x1
lea ecx [ esp + 0xb0 ]
mov [ esp + 0x98 ] 0xffffffff
call sub_4085a0
mov dl [ esp + 0x13 ]
push 0x0
lea ecx [ esp + 0x40 ]
lea ebp [ eax + 0x1 ]
mov [ esp + 0x40 ] dl
call sub_4085a0
mov edi ebp
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
push ecx
push ebp
lea ecx [ esp + 0x44 ]
call sub_408900
mov eax [ r--data ]
xor ebp ebp
push eax
lea ecx [ esp + 0x40 ]
push ebp
push ecx
lea ecx [ esp + 0x38 ]
mov [ esp + 0xa0 ] 0xa
call sub_408080
push 0x1
lea ecx [ esp + 0x40 ]
mov [ esp + 0x98 ] 0x9
call sub_4085a0
mov edi rw-data
or ecx 0xffffffff
xor eax eax
mov edx [ esp + 0xb4 ]
[ edi ]
not ecx
dec ecx
push ecx
push rw-data
push edx
push ebp
lea ecx [ esp + 0xbc ]
call sub_409ed0
cmp eax ebp
jne r-xdata
mov dl [ esp + 0xac ]
sub esp 0x10
mov edi esp
mov [ esp + 0x28 ] esp
push ebp
mov ecx edi
mov [ edi ] dl
call sub_4085a0
mov eax [ r--data ]
lea ecx [ esp + 0xbc ]
push eax
push ebp
push ecx
mov ecx edi
call sub_408080
mov ecx esi
call sub_405200
push ebp
lea edx [ esp + 0x20 ]
sub esp 0x10
mov ecx esp
mov [ esp + 0x2c ] esp
push edx
call sub_407a00
lea eax [ esp + 0x90 ]
push 0x1
push eax
mov ecx esi
call sub_401c00
push 0x1
lea ecx [ esp + 0x80 ]
call sub_4085a0
lea ecx [ esp + 0x9c ]
push rw-data
lea edx [ esp + 0x50 ]
push ecx
push edx
call sub_4094d0
mov al [ esp + 0x58 ]
push ecx
mov edi esp
mov [ esp + 0x28 ] esp
push ebp
mov ecx edi
mov [ esp + 0xa8 ] 0xe
mov [ edi ] al
call sub_4085a0
mov ecx [ r--data ]
lea edx [ esp + 0x5c ]
push ecx
push ebp
push edx
mov ecx edi
call sub_408080
mov ecx esi
call sub_405350
push 0x1
lea ecx [ esp + 0x50 ]
mov [ esp + 0x98 ] 0x9
call sub_4085a0
push 0x1
lea ecx [ esp + 0x30 ]
mov [ esp + 0x98 ] bl
call sub_4085a0
mov ecx [ esp + 0x20 ]
cmp ecx ebp
je r-xdata
lea eax [ esp + 0x3c ]
mov ecx esi
push eax
call sub_406220
lea ecx [ esp + 0x2c ]
lea edx [ esp + 0x3c ]
push ecx
lea eax [ esp + 0x80 ]
push edx
push eax
mov [ esp + 0xa0 ] 0xc
call sub_4093a0
add esp 0xc
mov ecx [ r--data ]
mov [ esp + 0x94 ] 0xd
push ecx
push ebp
push eax
lea ecx [ esp + 0xb8 ]
call sub_408080
push 0x1
lea ecx [ esp + 0x80 ]
mov [ esp + 0x98 ] 0xc
call sub_4085a0
push 0x1
lea ecx [ esp + 0x40 ]
mov [ esp + 0x98 ] 0x9
call sub_4085a0
mov ecx [ esp + 0xa0 ]
mov [ esp + 0x20 ] ebp
cmp ecx ebp
mov [ esp + 0x24 ] ebp
mov [ esp + 0x28 ] ebp
je r-xdata
mov al [ ecx - 0x1 ]
test al al
je r-xdata
mov ecx [ esp + 0xb0 ]
mov [ esp + 0xa0 ] ebp
cmp ecx ebp
mov [ esp + 0xa4 ] ebp
mov [ esp + 0xa8 ] ebp
je r-xdata
mov al [ ecx - 0x1 ]
test al al
je r-xdata
dec ecx
push ecx
call sub_40d360
add esp 0x4
cmp al 0xff
je r-xdata
mov ecx [ esp + 0x8c ]
pop edi
pop esi
pop ebp
mov [ fs : 0x0 ] ecx
pop ebx
add esp 0x88
retn 0x20
mov al [ ecx - 0x1 ]
test al al
je r-xdata
dec ecx
push ecx
call sub_40d360
add esp 0x4
cmp al 0xff
je r-xdata
dec al
mov [ ecx - 0x1 ] al
jmp r-xdata
dec ecx
push ecx
call sub_40d360
add esp 0x4
jmp r-xdata
cmp al 0xff
je r-xdata
dec al
mov [ ecx - 0x1 ] al
jmp r-xdata
dec al
mov [ ecx - 0x1 ] al
jmp r-xdata
sub_405200
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_4182a8
push eax
mov [ fs : 0x0 ] esp
push ebx
push ebp
push esi
push edi
mov edi [ esp + 0x28 ]
mov esi [ r--data ]
mov ebp edi
mov [ esp + 0x18 ] 0x0
cmp esi ebp
lea ebx [ ecx + 0x54 ]
jae r-xdata
lea eax [ esp + 0x20 ]
cmp ebx eax
jne r-xdata
mov ebp esi
test ebp ebp
jbe r-xdata
cmp [ ebx + 0x8 ] ebp
jae r-xdata
mov esi [ esp + 0x24 ]
cmp ebp edi
jne r-xdata
mov ecx ebx
call sub_4084d0
mov eax [ ebx + 0x8 ]
sub eax ebp
cmp eax esi
jae r-xdata
call sub_40d597
test esi esi
je r-xdata
test esi esi
jne r-xdata
mov esi [ esp + 0x24 ]
mov eax r--data
test esi esi
je r-xdata
test esi esi
jbe r-xdata
mov esi eax
mov ecx [ esp + 0x10 ]
pop edi
pop esi
pop ebp
mov [ fs : 0x0 ] ecx
pop ebx
add esp 0xc
retn 0x10
mov al [ esi - 0x1 ]
test al al
je r-xdata
mov edi [ ebx + 0x4 ]
mov ecx ebp
mov edx ecx
push ebp
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov ecx ebx
call sub_408310
mov esi r--data
cmp [ eax - 0x1 ] 0xfe
jae r-xdata
mov eax esi
push 0x0
push 0x0
mov ecx ebx
call sub_407c20
jmp r-xdata
mov ecx [ ebx + 0x4 ]
sub eax esi
add ebp ecx
push eax
lea edx [ esi + ebp ]
push edx
push ebp
call sub_40db20
mov edi [ ebx + 0x8 ]
add esp 0xc
sub edi esi
mov ecx ebx
push 0x0
push edi
call sub_4083b0
test al al
je r-xdata
dec esi
push esi
call sub_40d360
add esp 0x4
cmp al 0xff
je r-xdata
push 0x1
push ebp
mov ecx ebx
call sub_4083b0
test al al
je r-xdata
push 0x1
mov ecx ebx
call sub_4085a0
test esi esi
mov eax r--data
je r-xdata
mov esi [ esp + 0x24 ]
push edi
mov ecx ebx
call sub_408310
dec al
mov [ esi - 0x1 ] al
jmp r-xdata
mov ecx [ esp + 0x2c ]
mov [ ebx + 0x4 ] eax
mov [ ebx + 0x8 ] edi
mov [ ebx + 0xc ] ecx
inc [ eax - 0x1 ]
jmp r-xdata
mov eax esi
sub_405350
push 0xffffffff
push sub_418300
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x5c
push ebp
push esi
push edi
mov esi ecx
mov al [ esp + 0x78 ]
xor ebp ebp
push ebp
lea ecx [ esp + 0x1c ]
mov [ esp + 0x74 ] ebp
mov [ esp + 0x1c ] al
call sub_4085a0
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
push ecx
push rw-data
lea ecx [ esp + 0x20 ]
call sub_408900
lea ecx [ esp + 0x58 ]
mov [ esp + 0x70 ] 0x1
push ecx
mov ecx esi
call sub_405e50
push eax
lea edx [ esi + 0x7c ]
lea eax [ esp + 0x4c ]
push edx
push eax
mov [ esp + 0x7c ] 0x2
call sub_4093a0
push rw-data
lea ecx [ esp + 0x48 ]
push eax
push ecx
mov [ esp + 0x88 ] 0x3
call sub_4094d0
add esp 0x18
mov edx [ r--data ]
lea ecx [ esp + 0x18 ]
push edx
push ebp
push eax
mov [ esp + 0x7c ] 0x4
call sub_408080
push 0x1
lea ecx [ esp + 0x3c ]
mov [ esp + 0x74 ] 0x3
call sub_4085a0
push 0x1
lea ecx [ esp + 0x4c ]
mov [ esp + 0x74 ] 0x2
call sub_4085a0
push 0x1
lea ecx [ esp + 0x5c ]
mov [ esp + 0x74 ] 0x1
call sub_4085a0
push 0x2
lea eax [ esp + 0x12 ]
sub esp 0x10
mov ecx esp
mov [ esp + 0x24 ] esp
push eax
push rw-data
call sub_407b20
sub esp 0x10
lea edx [ esp + 0x33 ]
mov ecx esp
mov [ esp + 0x38 ] esp
push edx
push rw-data
mov [ esp + 0x9c ] 0x5
call sub_407b20
mov ecx esi
mov [ esp + 0x94 ] 0x1
call sub_401550
mov ecx esi
call sub_405a10
mov eax [ esp + 0x80 ]
xor edi edi
cmp eax ebp
jbe r-xdata
mov ecx [ esp + 0x7c ]
cmp ecx ebp
jne r-xdata
jmp r-xdata
push eax
lea edx [ esp + 0x2c ]
push ecx
push edx
mov ecx esi
call sub_406e00
push 0x1
lea eax [ esp + 0x2c ]
sub esp 0x10
mov [ esp + 0x84 ] 0x6
mov ecx esp
mov [ esp + 0x28 ] esp
push eax
call sub_407a00
sub esp 0x10
lea edx [ esp + 0x33 ]
mov ecx esp
mov [ esp + 0x34 ] esp
push edx
push rw-data
mov [ esp + 0x9c ] 0x7
call sub_407b20
mov ecx esi
mov [ esp + 0x94 ] 0x6
call sub_401550
push ebp
lea eax [ esp + 0x1c ]
sub esp 0x10
mov ecx esp
mov [ esp + 0x28 ] esp
push eax
call sub_407a00
lea ecx [ esp + 0x6c ]
push 0x2
push ecx
mov ecx esi
call sub_401c00
mov eax [ esp + 0x5c ]
cmp eax ebp
je r-xdata
mov ecx r--data
mov ecx [ esp + 0x7c ]
cmp eax edi
jb r-xdata
mov ecx [ esp + 0x2c ]
cmp ecx ebp
je r-xdata
lea ecx [ eax - 0x1 ]
mov al [ eax - 0x1 ]
test al al
je r-xdata
mov ebp r--data
cmp ecx ebp
je r-xdata
mov ecx [ esp + 0x1c ]
mov [ esp + 0x2c ] ebp
cmp ecx ebp
mov [ esp + 0x30 ] ebp
mov [ esp + 0x34 ] ebp
je r-xdata
mov al [ ecx - 0x1 ]
test al al
je r-xdata
push ecx
call sub_40d360
add esp 0x4
cmp al 0xff
je r-xdata
mov eax r--data
test ecx ecx
je r-xdata
lea ecx [ esp + 0x78 ]
call sub_408330
mov ecx [ esp + 0x7c ]
mov eax [ esp + 0x80 ]
lea ebp [ ecx + edi ]
jmp r-xdata
mov ecx [ esp + 0x7c ]
mov [ esp + 0x1c ] ebp
cmp ecx ebp
mov [ esp + 0x20 ] ebp
mov [ esp + 0x24 ] ebp
je r-xdata
mov al [ ecx - 0x1 ]
test al al
je r-xdata
dec ecx
push ecx
call sub_40d360
add esp 0x4
cmp al 0xff
je r-xdata
dec al
mov [ ecx ] al
jmp r-xdata
xor ebp ebp
xor ebp ebp
lea ecx [ esp + 0x78 ]
call sub_408330
mov eax [ esp + 0x7c ]
add eax edi
jmp r-xdata
cmp eax edi
jb r-xdata
mov ecx [ esp + 0x68 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebp
add esp 0x68
retn 0x10
mov al [ ecx - 0x1 ]
test al al
je r-xdata
dec ecx
push ecx
call sub_40d360
add esp 0x4
cmp al 0xff
je r-xdata
dec al
mov [ ecx - 0x1 ] al
jmp r-xdata
mov cl [ ebp ]
xor cl 0x6b
inc edi
mov [ eax ] cl
mov eax [ esp + 0x80 ]
cmp edi eax
jb r-xdata
dec ecx
push ecx
call sub_40d360
add esp 0x4
cmp al 0xff
je r-xdata
dec al
mov [ ecx - 0x1 ] al
jmp r-xdata
dec al
mov [ ecx - 0x1 ] al
mov ecx [ esp + 0x68 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebp
add esp 0x68
retn 0x10
sub_405650
push 0xffffffff
push sub_418360
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x6c
mov al [ esp + 0x80 ]
push ebx
push ebp
push esi
mov esi ecx
xor ebp ebp
push edi
push ebp
lea ecx [ esp + 0x40 ]
mov [ esp + 0x40 ] al
call sub_4085a0
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
push ecx
push rw-data
lea ecx [ esp + 0x44 ]
call sub_408900
mov cl [ esp + 0x90 ]
push ebp
mov [ esp + 0x20 ] cl
lea ecx [ esp + 0x20 ]
mov [ esp + 0x88 ] ebp
call sub_4085a0
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
push ecx
push rw-data
lea ecx [ esp + 0x24 ]
call sub_408900
lea edx [ esp + 0x6c ]
mov ecx esi
push edx
mov [ esp + 0x88 ] 0x1
call sub_405e50
push eax
lea eax [ esi + 0x7c ]
lea ecx [ esp + 0x60 ]
push eax
push ecx
mov [ esp + 0x90 ] 0x2
call sub_4093a0
push rw-data
lea edx [ esp + 0x5c ]
mov bl 0x3
push eax
push edx
mov [ esp + 0x9c ] bl
call sub_4094d0
add esp 0x18
mov ecx [ r--data ]
mov [ esp + 0x84 ] 0x4
push ecx
push ebp
push eax
lea ecx [ esp + 0x48 ]
call sub_408080
push 0x1
lea ecx [ esp + 0x50 ]
mov [ esp + 0x88 ] bl
call sub_4085a0
push 0x1
lea ecx [ esp + 0x60 ]
mov [ esp + 0x88 ] 0x2
call sub_4085a0
push 0x1
lea ecx [ esp + 0x70 ]
mov [ esp + 0x88 ] 0x1
call sub_4085a0
push 0x2
lea edx [ esp + 0x16 ]
sub esp 0x10
mov ecx esp
mov [ esp + 0x28 ] esp
push edx
push rw-data
call sub_407b20
sub esp 0x10
lea eax [ esp + 0x37 ]
mov ecx esp
mov [ esp + 0x3c ] esp
push eax
push rw-data
mov [ esp + 0xb0 ] 0x5
call sub_407b20
mov ecx esi
mov [ esp + 0xa8 ] 0x1
call sub_401550
mov ecx esi
call sub_405a10
mov ecx [ esp + 0x90 ]
mov edx [ esp + 0x8c ]
xor eax eax
cmp ecx ebp
jle r-xdata
push ecx
lea ecx [ esp + 0x30 ]
push edx
push ecx
mov ecx esi
call sub_406e00
push 0x1
lea edx [ esp + 0x30 ]
sub esp 0x10
mov bl 0x6
mov ecx esp
mov [ esp + 0xa0 ] esp
push edx
mov [ esp + 0x9c ] bl
call sub_407a00
sub esp 0x10
lea eax [ esp + 0xb4 ]
mov ecx esp
mov [ esp + 0x3c ] esp
push eax
push rw-data
mov [ esp + 0xb0 ] 0x7
call sub_407b20
mov ecx esi
mov [ esp + 0xa8 ] bl
call sub_401550
push ebp
lea edx [ esp + 0x40 ]
sub esp 0x10
mov ecx esp
mov [ esp + 0xa4 ] esp
push edx
call sub_407a00
lea eax [ esp + 0x80 ]
push 0x2
push eax
mov ecx esi
call sub_401c00
mov ecx [ r--data ]
mov [ esp + 0x84 ] 0x8
push ecx
push ebp
push eax
lea ecx [ esp + 0x28 ]
call sub_408080
push 0x1
lea ecx [ esp + 0x70 ]
mov [ esp + 0x88 ] bl
call sub_4085a0
lea edx [ esp + 0x6c ]
mov ecx esi
push edx
call sub_4031e0
mov ecx [ r--data ]
mov [ esp + 0x84 ] 0x9
push ecx
push ebp
push eax
lea ecx [ esp + 0x28 ]
call sub_408080
push 0x1
lea ecx [ esp + 0x70 ]
mov [ esp + 0x88 ] bl
call sub_4085a0
mov edi rw-data
or ecx 0xffffffff
xor eax eax
mov edx [ esp + 0x24 ]
[ edi ]
not ecx
dec ecx
push ecx
push rw-data
push edx
push ebp
lea ecx [ esp + 0x2c ]
call sub_409ed0
cmp eax ebp
jne r-xdata
mov bl [ eax + edx ]
xor bl 0x6b
mov [ eax + edx ] bl
inc eax
cmp eax ecx
jl r-xdata
mov ecx [ esp + 0x30 ]
cmp ecx ebp
je r-xdata
push 0x1
lea ecx [ esp + 0x30 ]
mov [ esp + 0x88 ] 0x1
call sub_4085a0
mov ecx [ esp + 0x20 ]
cmp ecx ebp
je r-xdata
mov ecx [ esp + 0x20 ]
mov [ esp + 0x30 ] ebp
cmp ecx ebp
mov [ esp + 0x34 ] ebp
mov [ esp + 0x38 ] ebp
je r-xdata
mov al [ ecx - 0x1 ]
test al al
je r-xdata
mov ecx [ esp + 0x40 ]
mov [ esp + 0x20 ] ebp
cmp ecx ebp
mov [ esp + 0x24 ] ebp
mov [ esp + 0x28 ] ebp
je r-xdata
mov al [ ecx - 0x1 ]
test al al
je r-xdata
mov ecx [ esp + 0x40 ]
mov [ esp + 0x20 ] ebp
cmp ecx ebp
mov [ esp + 0x24 ] ebp
mov [ esp + 0x28 ] ebp
je r-xdata
mov al [ ecx - 0x1 ]
test al al
je r-xdata
dec ecx
push ecx
call sub_40d360
add esp 0x4
cmp al 0xff
je r-xdata
xor al al
jmp r-xdata
mov al [ ecx - 0x1 ]
test al al
je r-xdata
dec ecx
push ecx
call sub_40d360
add esp 0x4
cmp al 0xff
je r-xdata
mov al 0x1
mov al [ ecx - 0x1 ]
test al al
je r-xdata
dec ecx
push ecx
call sub_40d360
add esp 0x4
cmp al 0xff
je r-xdata
dec al
mov [ ecx - 0x1 ] al
jmp r-xdata
mov ecx [ esp + 0x7c ]
pop edi
pop esi
pop ebp
mov [ fs : 0x0 ] ecx
pop ebx
add esp 0x78
retn 0x8
dec ecx
push ecx
call sub_40d360
add esp 0x4
cmp al 0xff
je r-xdata
dec al
mov [ ecx - 0x1 ] al
jmp r-xdata
dec ecx
push ecx
call sub_40d360
add esp 0x4
cmp al 0xff
je r-xdata
dec al
mov [ ecx - 0x1 ] al
jmp r-xdata
dec al
mov [ ecx - 0x1 ] al
xor al al
jmp r-xdata
dec al
mov [ ecx - 0x1 ] al
jmp r-xdata
sub_405a10
push 0xffffffff
push sub_418380
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc
push esi
mov esi ecx
push 0x2
sub esp 0x10
lea eax [ esi + 0x94 ]
mov ecx esp
mov [ esp + 0x1c ] esp
push eax
call sub_407a00
sub esp 0x10
lea edx [ esp + 0x2a ]
mov ecx esp
mov [ esp + 0x30 ] esp
push edx
push rw-data
mov [ esp + 0x44 ] 0x0
call sub_407b20
mov ecx esi
mov [ esp + 0x3c ] 0xffffffff
call sub_401550
push 0x2
lea eax [ esi + 0xa4 ]
sub esp 0x10
mov ecx esp
mov [ esp + 0x20 ] esp
push eax
call sub_407a00
sub esp 0x10
lea edx [ esp + 0x2b ]
mov ecx esp
mov [ esp + 0x2c ] esp
push edx
push rw-data
mov [ esp + 0x44 ] 0x1
call sub_407b20
mov ecx esi
mov [ esp + 0x3c ] 0xffffffff
call sub_401550
mov ecx [ esp + 0x10 ]
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x18
retn
sub_405ad0
sub esp 0x290
lea eax [ esp + 0x100 ]
push ebx
push ebp
push esi
push edi
push eax
mov esi ecx
push 0x2
call WSAStartup
test eax eax
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x290
retn
lea ecx [ esp + 0x10 ]
push 0xff
push ecx
call gethostname
test eax eax
jne r-xdata
lea edi [ esp + 0x10 ]
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
lea ebp [ esi + 0xa4 ]
mov ebx ecx
cmp ebx 0xfffffffd
jbe r-xdata
mov ecx [ ebp + 0x4 ]
xor edx edx
cmp ecx edx
je r-xdata
call sub_40d36b
cmp ebx edx
jne r-xdata
mov al [ ecx - 0x1 ]
test al al
je r-xdata
mov eax [ ebp + 0xc ]
cmp eax 0x1f
ja r-xdata
push 0x1
mov ecx ebp
call sub_4085a0
pop edi
pop esi
pop ebp
pop ebx
add esp 0x290
retn
cmp al 0xff
je r-xdata
push 0x1
mov ecx ebp
call sub_4085a0
cmp eax ebx
jae r-xdata
cmp ebx edx
jne r-xdata
mov edi [ ebp + 0x4 ]
mov ecx ebx
mov edx ecx
lea esi [ esp + 0x10 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov eax [ ebp + 0x4 ]
mov [ ebp + 0x8 ] ebx
mov [ eax + ebx ] 0x0
push ebx
mov ecx ebp
call sub_4089b0
dec al
pop edi
mov [ ecx - 0x1 ] al
mov [ ebp + 0x4 ] edx
mov [ ebp + 0x8 ] edx
mov [ ebp + 0xc ] edx
pop esi
pop ebp
pop ebx
add esp 0x290
retn
sub_405bc0
push 0xffffffff
push sub_4183c0
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x50
mov al [ esp + 0x3 ]
push ebx
push ebp
push esi
mov ebx ecx
push edi
push 0x0
lea ecx [ esp + 0x34 ]
mov [ esp + 0x34 ] al
call sub_4085a0
mov edi rw-data
or ecx 0xffffffff
xor eax eax
push 0x1
[ edi ]
not ecx
dec ecx
mov ebp ecx
lea ecx [ esp + 0x34 ]
push ebp
call sub_4083b0
test al al
je r-xdata
mov al [ esp + 0x13 ]
push 0x0
lea ecx [ esp + 0x44 ]
mov [ esp + 0x6c ] 0x0
mov [ esp + 0x44 ] al
call sub_4085a0
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
push ecx
push rw-data
lea ecx [ esp + 0x48 ]
call sub_408900
mov cl [ esp + 0x13 ]
push 0x0
mov [ esp + 0x24 ] cl
lea ecx [ esp + 0x24 ]
mov [ esp + 0x6c ] 0x1
call sub_4085a0
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
push ecx
push rw-data
lea ecx [ esp + 0x28 ]
call sub_408900
mov edi rw-data
or ecx 0xffffffff
xor eax eax
push 0x1
[ edi ]
not ecx
dec ecx
mov [ esp + 0x6c ] 0x2
mov ebp ecx
lea ecx [ esp + 0x24 ]
push ebp
call sub_4083b0
test al al
je r-xdata
mov edi [ esp + 0x34 ]
mov ecx ebp
mov edx ecx
mov esi rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
push ebp
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ esp + 0x34 ]
call sub_408310
mov al [ esp + 0x20 ]
sub esp 0x10
mov esi esp
xor edi edi
mov [ esp + 0x24 ] esp
push edi
mov ecx esi
mov [ esi ] al
call sub_4085a0
mov ecx [ r--data ]
lea edx [ esp + 0x30 ]
push ecx
push edi
push edx
mov ecx esi
call sub_408080
sub esp 0x10
lea eax [ esp + 0x60 ]
mov ecx esp
mov [ esp + 0x38 ] esp
push eax
mov [ esp + 0x8c ] 0x3
call sub_407a00
sub esp 0x10
lea edx [ esp + 0x60 ]
mov ecx esp
mov [ esp + 0x4c ] esp
push edx
mov [ esp + 0x9c ] 0x4
call sub_407a00
lea eax [ esp + 0x80 ]
mov ecx ebx
push eax
mov [ esp + 0x9c ] 0x2
call sub_405f90
mov ecx [ r--data ]
mov [ esp + 0x68 ] 0x5
push ecx
push edi
push eax
lea ecx [ esp + 0x3c ]
call sub_408080
push 0x1
lea ecx [ esp + 0x54 ]
mov [ esp + 0x6c ] 0x2
call sub_4085a0
mov edx [ r--data ]
lea eax [ esp + 0x30 ]
push edx
push edi
push eax
lea ecx [ ebx + 0x7c ]
call sub_408080
mov ecx [ esp + 0x24 ]
cmp ecx edi
je r-xdata
mov edi [ esp + 0x24 ]
mov ecx ebp
mov edx ecx
mov esi rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
push ebp
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ esp + 0x24 ]
call sub_408310
mov ecx [ esp + 0x44 ]
mov [ esp + 0x24 ] edi
cmp ecx edi
mov [ esp + 0x28 ] edi
mov [ esp + 0x2c ] edi
je r-xdata
mov al [ ecx - 0x1 ]
test al al
je r-xdata
mov ecx [ esp + 0x34 ]
mov [ esp + 0x44 ] edi
cmp ecx edi
mov [ esp + 0x48 ] edi
mov [ esp + 0x4c ] edi
je r-xdata
mov al [ ecx - 0x1 ]
test al al
je r-xdata
dec ecx
push ecx
call sub_40d360
add esp 0x4
cmp al 0xff
je r-xdata
mov ecx [ esp + 0x60 ]
pop edi
pop esi
pop ebp
mov [ fs : 0x0 ] ecx
pop ebx
add esp 0x5c
retn
mov al [ ecx - 0x1 ]
test al al
je r-xdata
dec ecx
push ecx
call sub_40d360
add esp 0x4
cmp al 0xff
je r-xdata
dec al
mov [ ecx - 0x1 ] al
jmp r-xdata
dec ecx
push ecx
call sub_40d360
add esp 0x4
cmp al 0xff
je r-xdata
dec al
mov [ ecx - 0x1 ] al
jmp r-xdata
dec al
mov [ ecx - 0x1 ] al
mov ecx [ esp + 0x60 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebp
pop ebx
add esp 0x5c
retn
sub_405e50
push 0xffffffff
push sub_4183d8
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x54
push ebx
push ebp
push esi
xor ebx ebx
push edi
push ebx
mov [ esp + 0x14 ] ebx
call sub_40e342
push eax
call sub_40e31a
add esp 0x8
call sub_40e324
cdq
mov ecx 0x2710
idiv ecx
push edx
lea edx [ esp + 0x28 ]
push rw-data
push edx
call sub_40dab0
mov al [ esp + 0x80 ]
lea edi [ esp + 0x30 ]
mov [ esp + 0x20 ] al
or ecx 0xffffffff
xor eax eax
add esp 0xc
[ edi ]
not ecx
dec ecx
push 0x1
mov ebp ecx
lea ecx [ esp + 0x18 ]
push ebp
mov [ esp + 0x20 ] ebx
mov [ esp + 0x24 ] ebx
mov [ esp + 0x28 ] ebx
call sub_4083b0
test al al
je r-xdata
mov esi [ esp + 0x74 ]
mov cl [ esp + 0x14 ]
lea eax [ esp + 0x14 ]
mov [ esp + 0x6c ] ebx
mov [ esi ] cl
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
mov edx [ r--data ]
mov ecx esi
push edx
push ebx
push eax
call sub_408080
mov ecx [ esp + 0x18 ]
cmp ecx ebx
je r-xdata
mov edi [ esp + 0x18 ]
mov ecx ebp
mov edx ecx
lea esi [ esp + 0x24 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov eax [ esp + 0x18 ]
mov [ esp + 0x1c ] ebp
mov [ eax + ebp ] bl
mov ecx [ esp + 0x64 ]
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x60
retn 0x4
mov al [ ecx - 0x1 ]
cmp al bl
je r-xdata
dec ecx
push ecx
call sub_40d360
add esp 0x4
cmp al 0xff
je r-xdata
dec al
mov [ ecx - 0x1 ] al
jmp r-xdata
sub_405f90
push 0xffffffff
push sub_418437
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x34
push ebx
xor ebx ebx
push esi
push edi
mov [ esp + 0xc ] ebx
mov al [ esp + 0x50 ]
push ebx
lea ecx [ esp + 0x14 ]
mov [ esp + 0x4c ] 0x3
mov [ esp + 0x14 ] al
call sub_4085a0
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
push ecx
push rw-data
lea ecx [ esp + 0x18 ]
call sub_408900
mov cl [ esp + 0x54 ]
push ebx
mov [ esp + 0x24 ] cl
lea ecx [ esp + 0x24 ]
mov [ esp + 0x4c ] 0x4
call sub_4085a0
mov edx [ r--data ]
lea eax [ esp + 0x54 ]
push edx
push ebx
push eax
lea ecx [ esp + 0x2c ]
call sub_408080
mov edi rw-data
or ecx 0xffffffff
xor eax eax
xor esi esi
[ edi ]
not ecx
dec ecx
mov [ esp + 0x48 ] 0x5
push ecx
mov ecx [ esp + 0x70 ]
push rw-data
push ecx
push ebx
lea ecx [ esp + 0x74 ]
call sub_409ed0
cmp eax ebx
je r-xdata
mov ecx [ esp + 0x6c ]
mov edi rw-data
add esi ecx
or ecx 0xffffffff
xor eax eax
mov edx [ esp + 0x7c ]
[ edi ]
not ecx
dec ecx
push ecx
push rw-data
push edx
push ebx
lea ecx [ esp + 0x84 ]
call sub_409ed0
cmp eax ebx
jne r-xdata
mov edx [ esp + 0x68 ]
cmp edx ebx
jne r-xdata
mov edx [ esp + 0x78 ]
cmp edx ebx
jne r-xdata
mov eax [ esp + 0x28 ]
jmp r-xdata
mov edi edx
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
push ecx
push ebx
push edx
lea ecx [ esp + 0x2c ]
call sub_408280
mov esi eax
cmp esi 0xffffffff
je r-xdata
mov edx r--data
mov edi edx
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
push ecx
push esi
push edx
lea ecx [ esp + 0x2c ]
call sub_408280
mov edx r--data
cmp eax 0xffffffff
je r-xdata
mov esi [ esp + 0x50 ]
mov dl [ esp + 0x10 ]
push ebx
mov ecx esi
mov [ esi ] dl
call sub_4085a0
mov eax [ r--data ]
lea ecx [ esp + 0x10 ]
push eax
push ebx
push ecx
mov ecx esi
call sub_408080
mov [ esp + 0xc ] 0x1
push 0x1
lea ecx [ esp + 0x24 ]
mov [ esp + 0x4c ] 0x4
call sub_4085a0
mov ecx [ esp + 0x14 ]
cmp ecx ebx
je r-xdata
sub eax esi
lea ecx [ esp + 0x20 ]
push eax
lea eax [ esp + 0x34 ]
push esi
push eax
call sub_407d40
mov ecx [ r--data ]
mov [ esp + 0x48 ] 0x6
push ecx
push ebx
push eax
lea ecx [ esp + 0x1c ]
call sub_408080
push 0x1
lea ecx [ esp + 0x34 ]
mov [ esp + 0x4c ] 0x5
call sub_4085a0
mov ecx [ esp + 0x58 ]
mov [ esp + 0x14 ] ebx
cmp ecx ebx
mov [ esp + 0x18 ] ebx
mov [ esp + 0x1c ] ebx
je r-xdata
mov al [ ecx - 0x1 ]
cmp al bl
je r-xdata
mov ecx [ esp + 0x68 ]
mov [ esp + 0x58 ] ebx
cmp ecx ebx
mov [ esp + 0x5c ] ebx
mov [ esp + 0x60 ] ebx
je r-xdata
mov al [ ecx - 0x1 ]
cmp al bl
je r-xdata
dec ecx
push ecx
call sub_40d360
add esp 0x4
cmp al 0xff
je r-xdata
mov ecx [ esp + 0x78 ]
mov [ esp + 0x68 ] ebx
cmp ecx ebx
mov [ esp + 0x6c ] ebx
mov [ esp + 0x70 ] ebx
je r-xdata
mov al [ ecx - 0x1 ]
cmp al bl
je r-xdata
dec ecx
push ecx
call sub_40d360
add esp 0x4
cmp al 0xff
je r-xdata
dec al
mov [ ecx - 0x1 ] al
jmp r-xdata
mov ecx [ esp + 0x40 ]
mov eax esi
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x40
retn 0x34
mov al [ ecx - 0x1 ]
cmp al bl
je r-xdata
dec ecx
push ecx
call sub_40d360
add esp 0x4
cmp al 0xff
je r-xdata
dec al
mov [ ecx - 0x1 ] al
jmp r-xdata
dec ecx
push ecx
call sub_40d360
add esp 0x4
cmp al 0xff
je r-xdata
dec al
mov [ ecx - 0x1 ] al
jmp r-xdata
dec al
mov [ ecx - 0x1 ] al
jmp r-xdata
sub_406220
push 0xffffffff
push sub_41845b
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x218
push ebx
push ebp
push esi
push edi
lea eax [ esp + 0x28 ]
xor ebx ebx
push 0x100
push eax
push ebx
mov [ esp + 0x20 ] ebx
call [ GetModuleFileNameA@IAT ]
push ebx
lea ecx [ esp + 0x12c ]
push ebx
lea edx [ esp + 0x1c ]
push ecx
lea eax [ esp + 0x34 ]
push edx
push eax
call sub_40e41e
mov ecx 0x40
xor eax eax
lea edi [ esp + 0x3c ]
add esp 0x14
[ edi ]
or ecx 0xffffffff
lea edi [ esp + 0x14 ]
[ edi ]
not ecx
sub edi ecx
lea edx [ esp + 0x28 ]
mov eax ecx
mov esi edi
shr ecx 0x2
mov edi edx
lea edx [ esp + 0x28 ]
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebp ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebp
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebp
lea edx [ esp + 0x28 ]
and ecx 0x3
[ edi ] [ esi ]
lea edi [ esp + 0x128 ]
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebp ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebp
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebp
lea edx [ esp + 0x28 ]
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
push 0x1
mov esi edi
mov ebp ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebp
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebp
mov al [ esp + 0x17 ]
and ecx 0x3
mov [ esp + 0x1c ] al
[ edi ] [ esi ]
lea edi [ esp + 0x2c ]
or ecx 0xffffffff
xor eax eax
mov [ esp + 0x20 ] ebx
[ edi ]
not ecx
dec ecx
mov [ esp + 0x24 ] ebx
mov ebp ecx
lea ecx [ esp + 0x1c ]
push ebp
mov [ esp + 0x2c ] ebx
call sub_4083b0
test al al
je r-xdata
mov esi [ esp + 0x238 ]
mov cl [ esp + 0x18 ]
lea eax [ esp + 0x18 ]
mov [ esp + 0x230 ] ebx
mov [ esi ] cl
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
mov edx [ r--data ]
mov ecx esi
push edx
push ebx
push eax
call sub_408080
mov ecx [ esp + 0x1c ]
cmp ecx ebx
je r-xdata
mov edi [ esp + 0x1c ]
mov ecx ebp
mov edx ecx
lea esi [ esp + 0x28 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov eax [ esp + 0x1c ]
mov [ esp + 0x20 ] ebp
mov [ eax + ebp ] bl
mov ecx [ esp + 0x228 ]
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x224
retn 0x4
mov al [ ecx - 0x1 ]
cmp al bl
je r-xdata
dec ecx
push ecx
call sub_40d360
add esp 0x4
cmp al 0xff
je r-xdata
dec al
mov [ ecx - 0x1 ] al
jmp r-xdata
sub_406400
push 0xffffffff
push sub_418501
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x90
mov al [ esp + 0x3 ]
push ebx
push ebp
push esi
mov ebp ecx
xor ebx ebx
push edi
push ebx
lea ecx [ esp + 0x3c ]
mov [ esp + 0x5c ] ebp
mov [ esp + 0x38 ] ebx
mov [ esp + 0x3c ] al
call sub_4085a0
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
push ecx
push rw-data
lea ecx [ esp + 0x40 ]
call sub_408900
push rw-data
mov [ esp + 0xac ] 0x1
call sub_40e565
mov cl [ esp + 0x17 ]
add esp 0x4
mov [ esp + 0x48 ] cl
lea ecx [ esp + 0x48 ]
push ebx
mov esi eax
call sub_4085a0
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
push ecx
push rw-data
lea ecx [ esp + 0x50 ]
call sub_408900
mov eax [ esp + 0x4c ]
mov [ esp + 0xa8 ] 0x2
cmp eax ebx
mov [ esp + 0x6c ] ebx
jne r-xdata
mov ecx [ esp + 0x50 ]
lea edx [ esp + 0x6c ]
push edx
push ecx
lea edx [ esp + 0x1c ]
push eax
push edx
mov ecx ebp
call sub_407280
mov ecx [ r--data ]
mov [ esp + 0xa8 ] 0x3
push ecx
push ebx
push eax
lea ecx [ esp + 0x54 ]
call sub_408080
mov edi 0x1
lea ecx [ esp + 0x14 ]
push edi
mov [ esp + 0xac ] 0x2
call sub_4085a0
lea edx [ esp + 0x5c ]
mov ecx ebp
push edx
call sub_406220
lea eax [ esp + 0x5c ]
push rw-data
lea ecx [ esp + 0x74 ]
push eax
push ecx
mov [ esp + 0xb4 ] 0x4
call sub_4094d0
add esp 0xc
mov eax [ esp + 0x74 ]
mov [ esp + 0xa8 ] 0x5
cmp eax ebx
jne r-xdata
mov eax r--data
push rw-data
push eax
call sub_40e22a
add esp 0x8
cmp eax ebx
je r-xdata
mov eax r--data
lea ecx [ esp + 0x48 ]
lea edx [ esp + 0x5c ]
push ecx
lea eax [ esp + 0x18 ]
push edx
push eax
call sub_4093a0
add esp 0xc
mov ecx [ r--data ]
mov [ esp + 0xa8 ] 0x6
push ecx
push ebx
push eax
lea ecx [ esp + 0x68 ]
call sub_408080
push edi
lea ecx [ esp + 0x18 ]
mov [ esp + 0xac ] 0x5
call sub_4085a0
mov eax [ esp + 0x60 ]
cmp eax ebx
jne r-xdata
push eax
call sub_40e01e
mov edx [ r--data ]
add esp 0x4
lea eax [ esp + 0x70 ]
lea ecx [ esp + 0x38 ]
push edx
push ebx
push eax
call sub_408080
mov esi [ esp + 0xb0 ]
mov cl [ esp + 0x38 ]
push ebx
mov [ esi ] cl
mov ecx esi
call sub_4085a0
mov edx [ r--data ]
lea eax [ esp + 0x38 ]
push edx
push ebx
push eax
mov ecx esi
call sub_408080
mov [ esp + 0x34 ] edi
jmp r-xdata
push rw-data
push eax
call sub_40e22a
add esp 0x8
cmp eax ebx
je r-xdata
mov eax r--data
push edi
lea ecx [ esp + 0x74 ]
mov [ esp + 0xac ] 0x4
call sub_4085a0
push edi
lea ecx [ esp + 0x60 ]
mov [ esp + 0xac ] 0x2
call sub_4085a0
push edi
lea ecx [ esp + 0x4c ]
mov [ esp + 0xac ] 0x1
call sub_4085a0
push edi
lea ecx [ esp + 0x3c ]
mov [ esp + 0xac ] bl
call sub_4085a0
mov eax esi
jmp r-xdata
mov cl [ esp + 0x13 ]
mov [ esp + 0x28 ] ebx
mov [ esp + 0x24 ] cl
mov [ esp + 0x2c ] ebx
mov [ esp + 0x30 ] ebx
cmp esi ebx
mov [ esp + 0xa8 ] 0x7
je r-xdata
push eax
call sub_40e01e
mov edx [ r--data ]
add esp 0x4
lea eax [ esp + 0x5c ]
lea ecx [ esp + 0x38 ]
push edx
push ebx
push eax
call sub_408080
mov esi [ esp + 0xb0 ]
mov cl [ esp + 0x38 ]
push ebx
mov [ esi ] cl
mov ecx esi
call sub_4085a0
mov edx [ r--data ]
lea eax [ esp + 0x38 ]
push edx
push ebx
push eax
mov ecx esi
call sub_408080
mov [ esp + 0x34 ] edi
mov ecx [ esp + 0xa0 ]
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x9c
retn 0x4
push rw-data
lea ecx [ esp + 0x3c ]
call sub_409e70
test eax eax
jne r-xdata
mov dl [ esp + 0x13 ]
push ebx
lea ecx [ esp + 0x18 ]
mov [ esp + 0x18 ] dl
call sub_4085a0
mov edi esi
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
push ecx
push esi
lea ecx [ esp + 0x1c ]
call sub_408900
lea eax [ esp + 0x24 ]
lea ecx [ esp + 0x14 ]
push eax
push 0x3b
push ecx
mov ecx ebp
mov [ esp + 0xb4 ] 0x8
call sub_406c10
push 0x1
lea ecx [ esp + 0x18 ]
mov [ esp + 0xac ] 0x7
call sub_4085a0
mov eax [ esp + 0x28 ]
cmp eax ebx
je r-xdata
mov ebp [ esp + 0xb0 ]
mov cl [ esp + 0x38 ]
push ebx
mov [ ebp ] cl
mov ecx ebp
call sub_4085a0
mov edx [ r--data ]
lea eax [ esp + 0x38 ]
push edx
push ebx
push eax
mov ecx ebp
call sub_408080
mov eax [ esp + 0x2c ]
mov esi [ esp + 0x28 ]
cmp esi eax
mov [ esp + 0x34 ] 0x1
mov [ esp + 0xa8 ] 0x5
mov edi eax
je r-xdata
mov cl [ esp + 0x13 ]
push ebx
mov [ esp + 0x18 ] cl
lea ecx [ esp + 0x18 ]
call sub_4085a0
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
push ecx
push rw-data
lea ecx [ esp + 0x1c ]
call sub_408900
mov eax [ esp + 0x18 ]
mov [ esp + 0xa8 ] 0xc
cmp eax ebx
mov [ esp + 0x58 ] ebx
jne r-xdata
mov ecx [ esp + 0x2c ]
mov edx ecx
sub edx eax
sar edx 0x4
je r-xdata
push esi
call sub_40d360
add esp 0x4
lea ecx [ esp + 0x70 ]
mov [ esp + 0x28 ] ebx
mov [ esp + 0x2c ] ebx
push 0x1
mov [ esp + 0x34 ] ebx
mov [ esp + 0xac ] 0x4
call sub_4085a0
push 0x1
lea ecx [ esp + 0x60 ]
mov [ esp + 0xac ] 0x2
call sub_4085a0
mov ecx [ esp + 0x4c ]
cmp ecx ebx
je r-xdata
push ebx
mov ecx esi
call sub_409dc0
add esi 0x10
cmp esi edi
jne r-xdata
mov ecx [ esp + 0x1c ]
lea edx [ esp + 0x58 ]
push edx
push ecx
lea edx [ esp + 0x88 ]
push eax
push edx
mov ecx ebp
call sub_407280
mov ecx [ r--data ]
mov [ esp + 0xa8 ] 0xd
push ecx
push ebx
push eax
lea ecx [ esp + 0x20 ]
call sub_408080
push 0x1
lea ecx [ esp + 0x84 ]
mov [ esp + 0xac ] 0xc
call sub_4085a0
mov eax [ esp + 0x18 ]
cmp eax ebx
jne r-xdata
mov eax r--data
xor ebp ebp
xor edi edi
mov ecx [ esp + 0x3c ]
mov [ esp + 0x4c ] ebx
cmp ecx ebx
mov [ esp + 0x50 ] ebx
mov [ esp + 0x54 ] ebx
je r-xdata
mov al [ ecx - 0x1 ]
cmp al bl
je r-xdata
mov esi [ esp + 0x28 ]
push rw-data
push eax
call sub_40e22a
add esp 0x8
cmp eax ebx
je r-xdata
mov eax r--data
mov ebp [ esp + 0x58 ]
sub ecx eax
sar ecx 0x4
cmp ebp ecx
jae r-xdata
mov eax ebp
mov al [ ecx - 0x1 ]
cmp al bl
je r-xdata
dec ecx
push ecx
call sub_40d360
add esp 0x4
cmp al 0xff
je r-xdata
push 0x1
lea ecx [ esp + 0x18 ]
mov [ esp + 0xac ] 0x7
call sub_4085a0
push eax
call sub_40e01e
mov edx [ r--data ]
add esp 0x4
lea eax [ esp + 0x14 ]
lea ecx [ esp + 0x38 ]
push edx
push ebx
push eax
call sub_408080
mov edi [ esp + 0xb0 ]
mov cl [ esp + 0x38 ]
push ebx
mov [ edi ] cl
mov ecx edi
call sub_4085a0
mov edx [ r--data ]
lea eax [ esp + 0x38 ]
push edx
push ebx
push eax
mov ecx edi
call sub_408080
push 0x1
lea ecx [ esp + 0x18 ]
mov [ esp + 0x38 ] 0x1
mov [ esp + 0xac ] 0x7
call sub_4085a0
mov eax [ esp + 0x2c ]
mov esi [ esp + 0x28 ]
cmp esi eax
mov [ esp + 0xa8 ] 0x5
mov ebp eax
je r-xdata
lea esi [ edi + eax ]
push ebx
lea ecx [ esp + 0x18 ]
mov al [ esi ]
mov [ esp + 0x18 ] al
call sub_4085a0
mov ecx [ r--data ]
push ecx
push ebx
push esi
lea ecx [ esp + 0x20 ]
call sub_408080
lea edx [ esp + 0x14 ]
push rw-data
lea eax [ esp + 0x84 ]
push edx
push eax
mov [ esp + 0xb4 ] 0x9
call sub_4094d0
lea ecx [ esp + 0x54 ]
lea edx [ esp + 0x9c ]
push ecx
push eax
push edx
mov [ esp + 0xc0 ] 0xa
call sub_4093a0
add esp 0x18
mov ecx [ r--data ]
mov [ esp + 0xa8 ] 0xb
push ecx
push ebx
push eax
lea ecx [ esp + 0x20 ]
call sub_408080
push 0x1
lea ecx [ esp + 0x94 ]
mov [ esp + 0xac ] 0xa
call sub_4085a0
push 0x1
lea ecx [ esp + 0x84 ]
mov [ esp + 0xac ] 0x9
call sub_4085a0
mov eax [ esp + 0x18 ]
cmp eax ebx
jne r-xdata
dec ecx
push ecx
call sub_40d360
add esp 0x4
cmp al 0xff
je r-xdata
dec al
mov [ ecx - 0x1 ] al
jmp r-xdata
push esi
call sub_40d360
add esp 0x4
lea ecx [ esp + 0x70 ]
mov [ esp + 0x28 ] ebx
mov [ esp + 0x2c ] ebx
push 0x1
mov [ esp + 0x34 ] ebx
mov [ esp + 0xac ] 0x4
call sub_4085a0
push 0x1
lea ecx [ esp + 0x60 ]
mov [ esp + 0xac ] 0x2
call sub_4085a0
push 0x1
lea ecx [ esp + 0x4c ]
mov [ esp + 0xac ] 0x1
call sub_4085a0
push 0x1
lea ecx [ esp + 0x3c ]
mov [ esp + 0xac ] bl
call sub_4085a0
mov eax edi
jmp r-xdata
push ebx
mov ecx esi
call sub_409dc0
add esi 0x10
cmp esi ebp
jne r-xdata
push rw-data
push eax
call sub_40e22a
add esp 0x8
cmp eax ebx
jne r-xdata
mov eax r--data
dec al
mov [ ecx - 0x1 ] al
jmp r-xdata
mov esi [ esp + 0x28 ]
push eax
call sub_40e01e
mov edx [ r--data ]
add esp 0x4
lea eax [ esp + 0x14 ]
lea ecx [ esp + 0x38 ]
push edx
push ebx
push eax
call sub_408080
mov esi [ esp + 0xb0 ]
mov cl [ esp + 0x38 ]
push ebx
mov [ esi ] cl
mov ecx esi
call sub_4085a0
mov edx [ r--data ]
lea eax [ esp + 0x38 ]
push edx
push ebx
push eax
mov ecx esi
call sub_408080
push 0x1
lea ecx [ esp + 0x18 ]
mov [ esp + 0x38 ] 0x1
mov [ esp + 0xac ] 0x7
call sub_4085a0
mov ecx [ esp + 0x2c ]
mov edx [ esp + 0x28 ]
push ecx
push edx
lea ecx [ esp + 0x2c ]
mov [ esp + 0xb0 ] 0x5
call sub_408710
mov eax [ esp + 0x28 ]
push eax
call sub_40d360
add esp 0x4
lea ecx [ esp + 0x70 ]
mov [ esp + 0x28 ] ebx
mov [ esp + 0x2c ] ebx
push 0x1
mov [ esp + 0x34 ] ebx
mov [ esp + 0xac ] 0x4
call sub_4085a0
push 0x1
lea ecx [ esp + 0x60 ]
mov [ esp + 0xac ] 0x2
call sub_4085a0
push 0x1
lea ecx [ esp + 0x4c ]
mov [ esp + 0xac ] 0x1
call sub_4085a0
push 0x1
lea ecx [ esp + 0x3c ]
mov [ esp + 0xac ] bl
call sub_4085a0
mov eax esi
jmp r-xdata
push 0x1
lea ecx [ esp + 0x18 ]
mov [ esp + 0xac ] 0x7
call sub_4085a0
mov ecx [ esp + 0x2c ]
mov eax [ esp + 0x28 ]
inc ebp
add edi 0x10
jmp r-xdata
cmp eax ebx
je r-xdata
sub_406c10
push 0xffffffff
push sub_418518
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x14
mov al [ esp + 0x28 ]
push ebx
push esi
xor esi esi
push edi
push esi
lea ecx [ esp + 0x14 ]
mov [ esp + 0x14 ] al
call sub_4085a0
mov ebx [ esp + 0x38 ]
mov [ esp + 0x28 ] esi
mov [ esp + 0xc ] esi
mov ecx [ ebx + 0x4 ]
mov eax [ ebx + 0x8 ]
push ecx
push eax
push eax
call sub_409990
mov ecx [ ebx + 0x8 ]
add esp 0xc
mov edi eax
push ecx
push edi
mov ecx ebx
call sub_408710
mov ecx [ esp + 0x30 ]
mov [ ebx + 0x8 ] edi
xor edi edi
mov eax [ ecx + 0x8 ]
mov [ esp + 0x38 ] edi
cmp eax esi
jbe r-xdata
mov ecx [ esp + 0x14 ]
test ecx ecx
je r-xdata
mov eax [ esp + 0x18 ]
push ebp
mov ecx [ esp + 0x20 ]
mov eax esi
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x20
retn 0xc
mov al [ ecx - 0x1 ]
test al al
je r-xdata
mov dl [ esp + 0x38 ]
mov cl [ ebp ]
cmp cl dl
je r-xdata
lea ebp [ esi + edi ]
dec ecx
push ecx
call sub_40d360
add esp 0x4
cmp al 0xff
je r-xdata
test eax eax
je r-xdata
test esi esi
jne r-xdata
dec al
mov [ ecx - 0x1 ] al
jmp r-xdata
mov edx [ esp + 0x34 ]
mov ecx [ edx + 0x8 ]
dec ecx
cmp edi ecx
jne r-xdata
mov edx [ ebx + 0x8 ]
lea ecx [ esp + 0x14 ]
push ecx
push 0x1
push edx
mov ecx ebx
call sub_408e80
mov ecx [ esp + 0x10 ]
mov esi [ esp + 0x18 ]
mov ebp [ r--data ]
inc ecx
test esi esi
mov [ esp + 0x10 ] ecx
je r-xdata
add esi edi
mov esi r--data
jmp r-xdata
mov ecx [ esp + 0x34 ]
inc edi
mov [ esp + 0x3c ] edi
cmp edi [ ecx + 0x8 ]
jb r-xdata
test eax eax
je r-xdata
mov eax [ esp + 0x1c ]
cmp eax ebp
jae r-xdata
mov al [ esi - 0x1 ]
test al al
je r-xdata
mov al [ esi ]
lea ecx [ esp + 0x14 ]
push eax
push 0x1
call sub_407fb0
mov eax [ esp + 0x1c ]
jmp r-xdata
mov esi [ ecx + 0x4 ]
mov ebp r--data
test esi esi
je r-xdata
mov esi [ esp + 0x10 ]
pop ebp
mov eax [ ebx + 0x8 ]
lea edx [ esp + 0x14 ]
push edx
push 0x1
push eax
mov ecx ebx
call sub_408e80
mov eax [ esp + 0x10 ]
inc eax
mov [ esp + 0x10 ] eax
mov eax [ esp + 0x1c ]
test ebp ebp
jbe r-xdata
mov ebp eax
cmp al 0xff
je r-xdata
sub eax ebp
push eax
mov eax [ esp + 0x1c ]
lea ecx [ eax + ebp ]
push ecx
push eax
call sub_40db20
mov esi [ esp + 0x28 ]
add esp 0xc
sub esi ebp
lea ecx [ esp + 0x14 ]
push 0x0
push esi
call sub_4083b0
test al al
je r-xdata
push 0x1
lea ecx [ esp + 0x18 ]
call sub_4085a0
mov edi esi
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
push ecx
push esi
lea ecx [ esp + 0x1c ]
call sub_408900
mov edi [ esp + 0x3c ]
mov eax [ esp + 0x1c ]
mov edi [ esp + 0x3c ]
push esi
lea ecx [ esp + 0x18 ]
call sub_408310
sub_406e00
push 0xffffffff
push sub_418538
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x60
push ebx
push ebp
push esi
push edi
mov ecx 0x10
mov esi rw-data
lea edi [ esp + 0x2c ]
mov al [ esp + 0x84 ]
[ edi ] [ esi ]
xor ebx ebx
lea ecx [ esp + 0x1c ]
push ebx
mov [ esp + 0x14 ] ebx
movsb [ edi ] [ esi ]
mov [ esp + 0x20 ] al
call sub_4085a0
mov eax 0x55555556
mov [ esp + 0x78 ] ebx
imul [ esp + 0x88 ]
mov ecx edx
shr ecx 0x1f
add edx ecx
cmp edx ebx
jle r-xdata
mov ebp [ esp + 0x84 ]
mov ebp [ esp + 0x84 ]
mov [ esp + 0x10 ] edx
cmp edx 0x2
jne r-xdata
mov dl [ ebp ]
mov ecx [ r--data ]
mov [ esp + 0x15 ] dl
mov esi [ esp + 0x15 ]
mov edx [ esp + 0x24 ]
and esi 0xff
mov eax esi
sub ecx edx
shr eax 0x2
cmp ecx 0x1
mov bl [ esp + eax + 0x2c ]
ja r-xdata
mov eax [ esp + 0x10 ]
dec eax
mov [ esp + 0x10 ] eax
jne r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
push ecx
push rw-data
lea ecx [ esp + 0x24 ]
call sub_408840
xor ebx ebx
mov esi [ esp + 0x80 ]
mov cl [ esp + 0x1c ]
push 0x0
mov [ esi ] cl
mov ecx esi
call sub_4085a0
mov edx [ r--data ]
lea eax [ esp + 0x1c ]
push edx
push 0x0
push eax
mov ecx esi
call sub_408080
mov ecx [ esp + 0x20 ]
test ecx ecx
je r-xdata
mov al [ ebp ]
mov cl [ ebp + 0x1 ]
mov [ esp + 0x15 ] al
mov [ esp + 0x16 ] cl
mov esi [ esp + 0x15 ]
mov eax [ r--data ]
and esi 0xff
mov edx esi
shr edx 0x2
mov bl [ esp + edx + 0x2c ]
mov edx [ esp + 0x24 ]
sub eax edx
cmp eax 0x1
ja r-xdata
mov edx [ esp + 0x24 ]
push 0x0
lea ecx [ esp + 0x20 ]
lea edi [ edx + 0x1 ]
push edi
call sub_4083b0
test al al
je r-xdata
call sub_40d36b
mov dl [ ebp ]
mov al [ ebp + 0x1 ]
inc ebp
mov [ esp + 0x15 ] dl
inc ebp
mov [ esp + 0x16 ] al
mov cl [ ebp ]
inc ebp
mov [ esp + 0x17 ] cl
mov esi [ esp + 0x15 ]
and esi 0xff
lea ecx [ esp + 0x1c ]
mov edx esi
shr edx 0x2
mov al [ esp + edx + 0x2c ]
push eax
push 0x1
call sub_407fb0
mov edi [ esp + 0x16 ]
and esi 0x3
and edi 0xff
mov ecx edi
shr ecx 0x4
shl esi 0x4
or ecx esi
mov dl [ esp + ecx + 0x2c ]
lea ecx [ esp + 0x1c ]
push edx
push 0x1
call sub_407fb0
mov esi [ esp + 0x17 ]
and edi 0xf
and esi 0xff
mov eax esi
shr eax 0x6
shl edi 0x2
or eax edi
mov cl [ esp + eax + 0x2c ]
push ecx
push 0x1
lea ecx [ esp + 0x24 ]
call sub_407fb0
and esi 0x3f
lea ecx [ esp + 0x1c ]
mov dl [ esp + esi + 0x2c ]
push edx
push 0x1
call sub_407fb0
add ebx 0x4
cmp ebx 0x4c
jne r-xdata
jmp r-xdata
mov ecx [ esp + 0x70 ]
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x6c
retn 0xc
mov al [ ecx - 0x1 ]
test al al
je r-xdata
mov ecx [ esp + 0x24 ]
push 0x0
lea edi [ ecx + 0x1 ]
lea ecx [ esp + 0x20 ]
push edi
call sub_4083b0
test al al
je r-xdata
call sub_40d36b
mov edx [ r--data ]
mov ecx [ esp + 0x24 ]
and esi 0x3
sub edx ecx
shl esi 0x4
cmp edx 0x1
mov bl [ esp + esi + 0x2c ]
ja r-xdata
mov ecx [ esp + 0x24 ]
mov edx [ esp + 0x20 ]
movsx eax bl
add edx ecx
mov ah al
push edi
lea ecx [ esp + 0x20 ]
mov [ edx ] al
call sub_408310
mov eax [ esp + 0x88 ]
mov ecx 0x3
cdq
idiv ecx
cmp edx 0x1
jne r-xdata
dec ecx
push ecx
call sub_40d360
add esp 0x4
cmp al 0xff
je r-xdata
mov edi [ esp + 0x16 ]
and esi 0x3
and edi 0xff
mov edx [ r--data ]
mov ecx edi
shr ecx 0x4
shl esi 0x4
or ecx esi
mov bl [ esp + ecx + 0x2c ]
mov ecx [ esp + 0x24 ]
sub edx ecx
cmp edx 0x1
ja r-xdata
mov eax [ esp + 0x24 ]
mov ecx [ esp + 0x20 ]
movsx edx bl
add ecx eax
mov dh dl
push edi
mov [ ecx ] dl
lea ecx [ esp + 0x20 ]
call sub_408310
mov eax [ esp + 0x24 ]
push 0x0
lea ecx [ esp + 0x20 ]
lea esi [ eax + 0x1 ]
push esi
call sub_4083b0
test al al
je r-xdata
call sub_40d36b
dec al
mov [ ecx - 0x1 ] al
jmp r-xdata
mov eax [ esp + 0x24 ]
push 0x0
lea ecx [ esp + 0x20 ]
lea esi [ eax + 0x1 ]
push esi
call sub_4083b0
test al al
je r-xdata
call sub_40d36b
mov edi rw-data
or ecx 0xffffffff
xor eax eax
mov edx [ esp + 0x24 ]
[ edi ]
mov eax [ r--data ]
not ecx
dec ecx
sub eax edx
mov esi ecx
cmp eax esi
ja r-xdata
mov edx [ esp + 0x24 ]
mov eax [ esp + 0x20 ]
movsx ecx bl
add eax edx
mov ch cl
push esi
mov [ eax ] cl
lea ecx [ esp + 0x20 ]
call sub_408310
mov eax [ r--data ]
mov edx [ esp + 0x24 ]
and edi 0xf
sub eax edx
cmp eax 0x1
mov bl [ esp + edi * 4 + 0x2c ]
ja r-xdata
mov edx [ esp + 0x24 ]
mov eax [ esp + 0x20 ]
movsx ecx bl
add eax edx
mov ch cl
push esi
mov [ eax ] cl
lea ecx [ esp + 0x20 ]
call sub_408310
test esi esi
jbe r-xdata
call sub_40d36b
mov ecx [ esp + 0x24 ]
push 0x0
lea esi [ ecx + 0x1 ]
lea ecx [ esp + 0x20 ]
push esi
call sub_4083b0
test al al
je r-xdata
call sub_40d36b
mov ecx [ esp + 0x24 ]
push 0x0
lea ebx [ ecx + esi ]
lea ecx [ esp + 0x20 ]
push ebx
call sub_4083b0
test al al
je r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
mov edx [ esp + 0x24 ]
[ edi ]
not ecx
dec ecx
mov esi ecx
mov ecx [ r--data ]
sub ecx edx
cmp ecx esi
ja r-xdata
mov eax [ esp + 0x24 ]
mov ecx [ esp + 0x20 ]
movsx edx bl
add ecx eax
mov dh dl
push esi
mov [ ecx ] dl
lea ecx [ esp + 0x20 ]
call sub_408310
mov edx [ esp + 0x24 ]
mov eax [ esp + 0x20 ]
mov ecx esi
mov esi rw-data
lea edi [ eax + edx ]
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
jmp r-xdata
test esi esi
jbe r-xdata
call sub_40d36b
and ecx 0x3
push ebx
[ edi ] [ esi ]
lea ecx [ esp + 0x20 ]
call sub_408310
mov edx [ esp + 0x24 ]
push 0x0
lea ecx [ esp + 0x20 ]
lea ebx [ edx + esi ]
push ebx
call sub_4083b0
test al al
je r-xdata
mov eax [ esp + 0x24 ]
mov edx [ esp + 0x20 ]
mov ecx esi
mov esi rw-data
lea edi [ edx + eax ]
mov eax ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
sub_407280
push 0xffffffff
push sub_41855b
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x98
push ebx
xor ebx ebx
push esi
mov [ esp + 0x1c ] ebx
mov [ esp + 0x24 ] bl
mov [ esp + 0x25 ] bl
mov [ esp + 0x26 ] bl
mov [ esp + 0x27 ] bl
mov [ esp + 0x28 ] bl
mov [ esp + 0x29 ] bl
mov [ esp + 0x2a ] bl
mov [ esp + 0x2b ] bl
mov [ esp + 0x2c ] bl
mov [ esp + 0x2d ] bl
mov [ esp + 0x2e ] bl
mov [ esp + 0x2f ] bl
mov [ esp + 0x30 ] bl
mov [ esp + 0x31 ] bl
mov [ esp + 0x32 ] bl
mov [ esp + 0x33 ] bl
mov [ esp + 0x34 ] bl
mov [ esp + 0x35 ] bl
mov [ esp + 0x36 ] bl
mov [ esp + 0x37 ] bl
mov [ esp + 0x38 ] bl
mov [ esp + 0x39 ] bl
mov [ esp + 0x3a ] bl
mov [ esp + 0x3b ] bl
mov [ esp + 0x3c ] bl
mov [ esp + 0x3d ] bl
mov [ esp + 0x3e ] bl
mov [ esp + 0x3f ] bl
mov [ esp + 0x40 ] bl
mov [ esp + 0x41 ] bl
mov [ esp + 0x42 ] bl
mov [ esp + 0x43 ] bl
mov [ esp + 0x44 ] bl
mov [ esp + 0x45 ] bl
mov [ esp + 0x46 ] bl
mov [ esp + 0x47 ] bl
mov [ esp + 0x48 ] bl
mov [ esp + 0x49 ] bl
mov [ esp + 0x4a ] bl
mov [ esp + 0x4b ] bl
mov [ esp + 0x4c ] bl
mov [ esp + 0x4d ] bl
mov [ esp + 0x4e ] bl
mov [ esp + 0x4f ] 0x3e
mov [ esp + 0x50 ] bl
mov [ esp + 0x51 ] bl
mov [ esp + 0x52 ] bl
mov [ esp + 0x53 ] 0x3f
mov [ esp + 0x54 ] 0x34
mov [ esp + 0x55 ] 0x35
mov [ esp + 0x56 ] 0x36
mov [ esp + 0x57 ] 0x37
mov [ esp + 0x58 ] 0x38
mov [ esp + 0x59 ] 0x39
mov [ esp + 0x5a ] 0x3a
mov [ esp + 0x5b ] 0x3b
mov [ esp + 0x5c ] 0x3c
mov [ esp + 0x5d ] 0x3d
mov [ esp + 0x5e ] bl
mov [ esp + 0x5f ] bl
mov [ esp + 0x60 ] bl
mov [ esp + 0x61 ] bl
mov [ esp + 0x62 ] bl
mov [ esp + 0x63 ] bl
mov [ esp + 0x64 ] bl
mov [ esp + 0x65 ] bl
mov [ esp + 0x66 ] 0x1
mov [ esp + 0x67 ] 0x2
mov [ esp + 0x68 ] 0x3
mov [ esp + 0x69 ] 0x4
mov [ esp + 0x6a ] 0x5
mov [ esp + 0x6b ] 0x6
mov [ esp + 0x6c ] 0x7
mov [ esp + 0x6d ] 0x8
mov [ esp + 0x6e ] 0x9
mov [ esp + 0x6f ] 0xa
mov [ esp + 0x70 ] 0xb
mov al [ esp + 0xb ]
mov [ esp + 0x71 ] 0xc
mov [ esp + 0x72 ] 0xd
mov [ esp + 0x73 ] 0xe
mov [ esp + 0x74 ] 0xf
mov [ esp + 0x75 ] 0x10
mov [ esp + 0x76 ] 0x11
mov [ esp + 0x77 ] 0x12
mov [ esp + 0x78 ] 0x13
mov [ esp + 0x79 ] 0x14
mov [ esp + 0x7a ] 0x15
mov [ esp + 0x7b ] 0x16
mov [ esp + 0x7c ] 0x17
mov [ esp + 0x7d ] 0x18
mov [ esp + 0x7e ] 0x19
mov [ esp + 0x7f ] bl
mov [ esp + 0x80 ] bl
mov [ esp + 0x81 ] bl
mov [ esp + 0x82 ] bl
mov [ esp + 0x83 ] bl
mov [ esp + 0x84 ] bl
mov [ esp + 0x85 ] 0x1a
mov [ esp + 0x86 ] 0x1b
mov [ esp + 0x87 ] 0x1c
mov [ esp + 0x88 ] 0x1d
mov [ esp + 0x89 ] 0x1e
mov [ esp + 0x8a ] 0x1f
mov [ esp + 0x8b ] 0x20
mov [ esp + 0x8c ] 0x21
mov [ esp + 0x8d ] 0x22
mov [ esp + 0x8e ] 0x23
mov [ esp + 0x8f ] 0x24
mov [ esp + 0x90 ] 0x25
mov [ esp + 0x91 ] 0x26
mov [ esp + 0x92 ] 0x27
mov [ esp + 0x93 ] 0x28
mov [ esp + 0x94 ] 0x29
mov [ esp + 0x95 ] 0x2a
mov [ esp + 0x96 ] 0x2b
mov [ esp + 0x97 ] 0x2c
mov [ esp + 0x98 ] 0x2d
mov [ esp + 0x99 ] 0x2e
mov [ esp + 0x9a ] 0x2f
mov [ esp + 0x9b ] 0x30
mov [ esp + 0x9c ] 0x31
mov [ esp + 0x9d ] 0x32
mov [ esp + 0x9e ] 0x33
mov [ esp + 0xc ] al
mov [ esp + 0x10 ] ebx
mov [ esp + 0x14 ] ebx
mov [ esp + 0x18 ] ebx
mov eax [ esp + 0xb8 ]
mov [ esp + 0xa8 ] ebx
cmp eax ebx
mov [ esp + 0x1c ] ebx
jle r-xdata
mov esi [ esp + 0xb0 ]
mov dl [ esp + 0xc ]
lea ecx [ esp + 0xc ]
mov [ esi ] dl
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
mov eax [ r--data ]
push eax
push ebx
push ecx
mov ecx esi
call sub_408080
mov ecx [ esp + 0x10 ]
cmp ecx ebx
je r-xdata
push ebp
mov ebp [ esp + 0xc0 ]
push edi
mov edi [ esp + 0xbc ]
mov ecx [ esp + 0xa0 ]
mov eax esi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0xa4
retn 0x10
mov al [ ecx - 0x1 ]
cmp al bl
je r-xdata
mov eax [ esp + 0x24 ]
inc edi
inc eax
cmp al 0xa
je r-xdata
dec ecx
push ecx
call sub_40d360
add esp 0x4
cmp al 0xff
je r-xdata
mov al [ edi ]
cmp al 0xd
je r-xdata
pop edi
pop ebp
movsx ecx al
movsx edx [ edi + 0x1 ]
movsx eax [ esp + ecx + 0x2c ]
shl eax 0x12
inc edi
movsx ecx [ esp + edx + 0x2c ]
mov edx [ r--data ]
shl ecx 0xc
add eax ecx
mov ecx [ esp + 0x1c ]
mov [ esp + 0x28 ] eax
sub edx ecx
inc edi
sar eax 0x10
cmp edx 0x1
mov [ esp + 0x13 ] al
ja r-xdata
dec al
mov [ ecx - 0x1 ] al
jmp r-xdata
mov eax [ esp + 0x1c ]
push ebx
lea ecx [ esp + 0x18 ]
lea esi [ eax + 0x1 ]
push esi
call sub_4083b0
test al al
je r-xdata
call sub_40d36b
mov edx [ ebp ]
inc edx
mov [ ebp ] edx
mov al [ edi ]
cmp al 0x3d
je r-xdata
movsx ecx [ esp + 0x13 ]
mov edx [ esp + 0x18 ]
mov eax [ esp + 0x1c ]
add edx eax
mov ch cl
mov [ edx ] cl
mov ecx [ esp + 0x18 ]
mov [ esp + 0x1c ] esi
mov [ ecx + esi ] bl
mov eax [ esp + 0x24 ]
add eax 0x4
jmp r-xdata
movsx edx al
mov eax [ esp + 0x28 ]
movsx ecx [ esp + edx + 0x2c ]
mov edx [ r--data ]
shl ecx 0x6
add eax ecx
mov ecx [ esp + 0x1c ]
mov [ esp + 0x28 ] eax
sub edx ecx
inc edi
sar eax 0x8
cmp edx 0x1
mov [ esp + 0x13 ] al
ja r-xdata
mov [ esp + 0x24 ] eax
mov ecx eax
cmp ecx [ esp + 0xc0 ]
jl r-xdata
mov eax [ esp + 0x1c ]
lea ecx [ esp + 0x14 ]
lea esi [ eax + 0x1 ]
call sub_4089a0
cmp eax esi
jae r-xdata
call sub_40d36b
mov ecx [ esp + 0x18 ]
cmp ecx ebx
je r-xdata
call sub_40d36b
cmp esi ebx
jne r-xdata
mov al [ ecx - 0x1 ]
cmp al bl
je r-xdata
cmp [ esp + 0x20 ] esi
jae r-xdata
cmp ecx ebx
je r-xdata
cmp al 0xff
je r-xdata
mov eax [ esp + 0x1c ]
push esi
movsx edx [ esp + 0x17 ]
add ecx eax
mov dh dl
mov [ ecx ] dl
push esi
lea ecx [ esp + 0x18 ]
call sub_4089b0
mov ecx [ esp + 0x18 ]
mov edx [ ebp ]
inc edx
mov [ ebp ] edx
mov al [ edi ]
cmp al 0x3d
je r-xdata
push ebx
jmp r-xdata
cmp esi ebx
jne r-xdata
movsx ecx al
mov eax [ esp + 0x28 ]
movsx edx [ esp + ecx + 0x2c ]
add eax edx
mov edx [ esp + 0x1c ]
mov [ esp + 0x28 ] eax
mov eax [ r--data ]
sub eax edx
inc edi
cmp eax 0x1
ja r-xdata
lea ecx [ esp + 0x18 ]
call sub_408310
dec al
push ebx
mov [ ecx - 0x1 ] al
lea ecx [ esp + 0x18 ]
call sub_4085a0
jmp r-xdata
mov ecx [ esp + 0x1c ]
lea esi [ ecx + 0x1 ]
lea ecx [ esp + 0x14 ]
call sub_4089a0
cmp eax esi
jae r-xdata
call sub_40d36b
mov ecx [ esp + 0x18 ]
cmp ecx ebx
je r-xdata
call sub_40d36b
cmp esi ebx
jne r-xdata
mov al [ ecx - 0x1 ]
cmp al bl
je r-xdata
cmp [ esp + 0x20 ] esi
jae r-xdata
cmp ecx ebx
je r-xdata
cmp al 0xff
je r-xdata
mov eax [ esp + 0x1c ]
push esi
movsx edx [ esp + 0x2c ]
add ecx eax
mov dh dl
mov [ ecx ] dl
push esi
lea ecx [ esp + 0x18 ]
call sub_4089b0
mov ecx [ esp + 0x18 ]
inc [ ebp ]
push ebx
jmp r-xdata
cmp esi ebx
jne r-xdata
lea ecx [ esp + 0x18 ]
call sub_408310
dec al
push ebx
mov [ ecx - 0x1 ] al
lea ecx [ esp + 0x18 ]
call sub_4085a0
mov eax [ ebp ]
inc eax
mov [ ebp ] eax
mov eax [ esp + 0x24 ]
add eax 0x4
jmp r-xdata
sub_407800
sub esp 0x8
push ebx
push ebp
push esi
push edi
mov [ esp + 0x14 ] 0x0
test esi esi
jne r-xdata
mov [ esp + 0x10 ] eax
mov edi [ esp + 0x20 ]
mov ebx [ edi + 0x8 ]
test ebx ebx
jbe r-xdata
mov edx [ r--data ]
mov edi [ esp + 0x20 ]
xor ebx ebx
jmp r-xdata
mov edx [ r--data ]
mov ebx edx
cmp esi ebx
ja r-xdata
cmp ebx edx
je r-xdata
mov esi [ esp + 0x1c ]
mov dl [ edi ]
xor eax eax
mov [ esi ] dl
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] eax
mov ecx [ r--data ]
push ecx
push eax
push edi
mov ecx esi
call sub_408080
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
add esp 0x8
retn 0x10
mov eax [ esp + 0x24 ]
mov ebp edx
mov esi [ eax + 0x8 ]
mov eax [ edi + 0x8 ]
cmp eax ebx
jae r-xdata
mov ecx [ esp + 0x10 ]
mov ebp [ edi + 0x4 ]
mov eax 0x1
movsx edx [ ecx ]
sub eax esi
add ebx eax
push ebx
push edx
push ebp
call sub_40e5f0
add esp 0xc
test eax eax
je r-xdata
mov eax [ edi + 0x8 ]
mov ecx eax
sub ecx ebx
cmp ecx esi
jae r-xdata
call sub_40d597
mov edx [ r--data ]
jmp r-xdata
mov ecx [ esp + 0x28 ]
mov ecx [ ecx + 0x8 ]
cmp ecx ebp
jae r-xdata
mov esi ecx
mov edi [ esp + 0x10 ]
mov ecx esi
mov esi eax
xor edx edx
[ esi ] [ edi ]
je r-xdata
sub eax esi
sub edx ebp
cmp edx eax
ja r-xdata
mov ebp ecx
mov edx [ esp + 0x20 ]
mov edi [ esp + 0x20 ]
mov ecx [ edx + 0x4 ]
mov edx [ r--data ]
sub eax ecx
mov ebx eax
jmp r-xdata
sub ebp eax
lea ebx [ ebx + ebp - 0x1 ]
lea ebp [ eax + 0x1 ]
mov eax [ esp + 0x10 ]
push ebx
movsx ecx [ eax ]
push ecx
push ebp
call sub_40e5f0
add esp 0xc
test eax eax
jne r-xdata
mov ecx edi
call sub_4084d0
mov eax [ edi + 0x8 ]
sub eax esi
sub eax ebx
cmp ebp esi
mov [ esp + 0x14 ] eax
jae r-xdata
call sub_40d36b
mov esi [ esp + 0x14 ]
mov edi [ esp + 0x20 ]
test ebp ebp
ja r-xdata
mov ecx [ edi + 0x4 ]
push eax
lea edx [ ecx + esi ]
add ecx ebp
add edx ebx
add ecx ebx
push edx
push ecx
call sub_40db20
add esp 0xc
mov edx [ edi + 0x8 ]
mov eax ebp
sub eax esi
push 0x0
add eax edx
mov ecx edi
push eax
mov [ esp + 0x18 ] eax
call sub_4083b0
test al al
je r-xdata
test esi esi
jbe r-xdata
mov eax [ esp + 0x24 ]
mov [ esp + 0x10 ] r--data
mov esi [ eax + 0x8 ]
mov eax [ eax + 0x4 ]
test eax eax
mov [ esp + 0x14 ] esi
je r-xdata
cmp esi ebp
jae r-xdata
mov edi [ esp + 0x20 ]
mov eax [ esp + 0x28 ]
mov esi [ eax + 0x4 ]
test esi esi
jne r-xdata
mov eax [ esp + 0x20 ]
mov ecx [ esp + 0x14 ]
push ecx
mov eax [ eax + 0x4 ]
lea edx [ eax + esi ]
add eax ebp
add edx ebx
add eax ebx
push edx
push eax
call sub_40db20
add esp 0xc
mov edx [ esp + 0x20 ]
mov ecx ebp
mov eax ecx
mov edi [ edx + 0x4 ]
add edi ebx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov ecx [ esp + 0x10 ]
push ecx
mov ecx edx
call sub_408310
jmp r-xdata
mov esi r--data
sub_407a00
push ebx
push ebp
push esi
mov esi [ esp + 0x10 ]
push edi
mov ebx ecx
mov al [ esi ]
xor edi edi
mov [ ebx ] al
mov [ ebx + 0x4 ] edi
mov [ ebx + 0x8 ] edi
mov [ ebx + 0xc ] edi
mov ecx [ esi + 0x8 ]
mov eax [ r--data ]
mov ebp ecx
cmp eax ebp
jae r-xdata
cmp ebx esi
jne r-xdata
mov ebp eax
cmp ebp edi
jbe r-xdata
cmp ebp edi
mov esi eax
jbe r-xdata
push 0x1
push ebp
mov ecx ebx
call sub_4083b0
test al al
je r-xdata
cmp ebp ecx
jne r-xdata
mov ecx ebx
call sub_4084d0
mov eax [ ebx + 0x8 ]
sub eax ebp
cmp eax esi
jae r-xdata
call sub_40d597
pop edi
pop esi
mov eax ebx
pop ebp
pop ebx
retn 0x4
mov esi [ esi + 0x4 ]
cmp esi edi
jne r-xdata
mov eax [ esi + 0x4 ]
cmp eax edi
jne r-xdata
cmp esi edi
jbe r-xdata
mov esi eax
mov edi [ ebx + 0x4 ]
mov ecx ebp
mov eax ecx
push ebp
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov ecx ebx
call sub_408310
mov esi r--data
cmp [ eax - 0x1 ] 0xfe
jae r-xdata
mov eax r--data
mov ecx ebx
call sub_4084d0
pop edi
pop esi
mov eax ebx
pop ebp
pop ebx
retn 0x4
mov ecx [ ebx + 0x4 ]
sub eax esi
add ecx ebp
push eax
lea edx [ ecx + esi ]
push edx
push ecx
call sub_40db20
mov ebp [ ebx + 0x8 ]
add esp 0xc
sub ebp esi
mov ecx ebx
push edi
push ebp
call sub_4083b0
test al al
je r-xdata
mov [ ebx + 0x4 ] edi
mov [ ebx + 0x8 ] edi
mov [ ebx + 0xc ] edi
mov eax [ esi + 0x4 ]
cmp eax edi
jne r-xdata
push ebp
mov ecx ebx
call sub_408310
mov [ ebx + 0x4 ] eax
mov ecx [ esi + 0x8 ]
mov [ ebx + 0x8 ] ecx
mov edx [ esi + 0xc ]
mov [ ebx + 0xc ] edx
mov cl [ eax - 0x1 ]
inc cl
pop edi
mov [ eax - 0x1 ] cl
pop esi
mov eax ebx
pop ebp
pop ebx
retn 0x4
mov eax r--data
sub_407b20
mov eax [ esp + 0x8 ]
push ebx
push ebp
mov ebp ecx
mov cl [ eax ]
push esi
push edi
mov edi [ esp + 0x14 ]
mov [ ebp ] cl
xor esi esi
or ecx 0xffffffff
xor eax eax
mov [ ebp + 0x4 ] esi
mov [ ebp + 0x8 ] esi
mov [ ebp + 0xc ] esi
[ edi ]
not ecx
dec ecx
mov ebx ecx
cmp ebx 0xfffffffd
jbe r-xdata
mov ecx [ ebp + 0x4 ]
cmp ecx esi
je r-xdata
call sub_40d36b
cmp ebx esi
jne r-xdata
mov al [ ecx - 0x1 ]
test al al
je r-xdata
mov eax [ ebp + 0xc ]
cmp eax 0x1f
ja r-xdata
push 0x1
mov ecx ebp
call sub_4085a0
pop edi
mov eax ebp
pop esi
pop ebp
pop ebx
retn 0x8
cmp al 0xff
je r-xdata
push 0x1
mov ecx ebp
call sub_4085a0
cmp eax ebx
jae r-xdata
cmp ebx esi
jne r-xdata
mov esi [ esp + 0x14 ]
mov edi [ ebp + 0x4 ]
mov ecx ebx
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov eax [ ebp + 0x4 ]
mov [ ebp + 0x8 ] ebx
pop edi
pop esi
mov [ eax + ebx ] 0x0
mov eax ebp
pop ebp
pop ebx
retn 0x8
push ebx
mov ecx ebp
call sub_4089b0
dec al
push esi
mov [ ecx - 0x1 ] al
mov ecx ebp
call sub_4085a0
pop edi
mov eax ebp
pop esi
pop ebp
pop ebx
retn 0x8
sub_407be0
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
mov [ esi + 0xc ] 0x0
pop esi
retn
lea ecx [ eax - 0x1 ]
mov al [ eax - 0x1 ]
test al al
je r-xdata
push ecx
call sub_40d360
add esp 0x4
cmp al 0xff
je r-xdata
dec al
mov [ ecx ] al
jmp r-xdata
sub_407c20
push ebx
push ebp
mov ebp ecx
push esi
mov ecx [ esp + 0x10 ]
push edi
mov eax [ ebp + 0x8 ]
cmp eax ecx
jae r-xdata
mov esi [ ebp + 0x4 ]
xor ebx ebx
cmp esi ebx
je r-xdata
call sub_40d597
mov eax [ ebp + 0x8 ]
mov edx [ esp + 0x14 ]
mov edi [ esp + 0x18 ]
sub eax edx
cmp eax edi
jae r-xdata
mov al [ esi - 0x1 ]
test al al
je r-xdata
cmp edi ebx
jbe r-xdata
mov edi eax
cmp al 0xff
je r-xdata
pop edi
mov eax ebp
pop esi
pop ebp
pop ebx
retn 0x8
mov ecx [ ebp + 0x4 ]
mov edx [ esp + 0x14 ]
add ecx edx
sub eax edi
push eax
lea eax [ ecx + edi ]
push eax
push ecx
call sub_40db20
mov esi [ ebp + 0x8 ]
add esp 0xc
sub esi edi
cmp esi 0xfffffffd
jbe r-xdata
dec al
mov edi esi
mov [ esi - 0x1 ] al
or ecx 0xffffffff
xor eax eax
mov [ ebp + 0x4 ] ebx
mov [ ebp + 0x8 ] ebx
mov [ ebp + 0xc ] ebx
[ edi ]
not ecx
dec ecx
push 0x1
mov ebx ecx
mov ecx ebp
push ebx
call sub_4083b0
test al al
je r-xdata
mov ecx [ ebp + 0x4 ]
cmp ecx ebx
je r-xdata
call sub_40d36b
xor ebx ebx
mov edi [ ebp + 0x4 ]
mov ecx ebx
mov edx ecx
push ebx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov ecx ebp
call sub_408310
cmp esi ebx
jne r-xdata
mov al [ ecx - 0x1 ]
test al al
je r-xdata
cmp [ ebp + 0xc ] esi
jae r-xdata
cmp ecx ebx
je r-xdata
cmp al 0xff
je r-xdata
mov ecx [ ebp + 0x4 ]
mov [ ebp + 0x8 ] esi
mov [ esi + ecx ] 0x0
push esi
mov ecx ebp
call sub_4089b0
pop edi
mov [ ebp + 0x8 ] ebx
mov eax ebp
pop esi
pop ebp
mov [ ecx ] 0x0
pop ebx
retn 0x8
cmp esi ebx
jne r-xdata
dec al
push ebx
mov [ ecx - 0x1 ] al
mov ecx ebp
call sub_4085a0
pop edi
mov eax ebp
pop esi
pop ebp
pop ebx
retn 0x8
sub_407d40
push ecx
push ebx
push ebp
mov ebp [ esp + 0x10 ]
push esi
mov esi ecx
xor eax eax
mov cl [ esp + 0x14 ]
push edi
mov edi [ esp + 0x1c ]
mov [ esp + 0x10 ] eax
mov [ ebp ] cl
mov [ ebp + 0x4 ] eax
mov [ ebp + 0x8 ] eax
mov [ ebp + 0xc ] eax
cmp [ esi + 0x8 ] edi
jae r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ esp + 0x20 ]
mov ebx eax
sub ebx edi
cmp ecx ebx
jae r-xdata
call sub_40d597
cmp ebp esi
jne r-xdata
mov ebx ecx
test ebx ebx
jbe r-xdata
mov eax [ ebp + 0x8 ]
mov esi [ r--data ]
add ebx edi
cmp eax ebx
jae r-xdata
push 0x1
push ebx
mov ecx ebp
call sub_4083b0
test al al
je r-xdata
cmp ebx eax
jne r-xdata
mov ecx ebp
call sub_4084d0
mov eax [ ebp + 0x8 ]
sub eax ebx
cmp eax esi
jae r-xdata
call sub_40d597
pop edi
mov eax ebp
pop esi
pop ebp
pop ebx
pop ecx
retn 0xc
mov eax [ esi + 0x4 ]
test eax eax
jne r-xdata
mov eax [ esi + 0x4 ]
test eax eax
jne r-xdata
test esi esi
jbe r-xdata
mov esi eax
mov ecx ebx
lea esi [ eax + edi ]
mov edi [ ebp + 0x4 ]
mov eax ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov ecx [ ebp + 0x4 ]
mov [ ebp + 0x8 ] ebx
mov [ ecx + ebx ] 0x0
mov eax r--data
cmp [ eax - 0x1 ] 0xfe
jae r-xdata
mov eax r--data
mov ecx ebp
mov ebx edi
call sub_4084d0
mov eax [ ebp + 0x8 ]
cmp eax edi
jae r-xdata
mov edx [ ebp + 0x4 ]
sub eax esi
push eax
lea ecx [ edx + ebx ]
lea eax [ ecx + esi ]
push eax
push ecx
call sub_40db20
mov ebx [ ebp + 0x8 ]
add esp 0xc
sub ebx esi
mov ecx ebp
push 0x0
push ebx
call sub_4083b0
test al al
je r-xdata
push 0x1
mov ecx ebp
call sub_4085a0
mov eax [ esi + 0x4 ]
test eax eax
jne r-xdata
test ebx ebx
jbe r-xdata
mov ebx eax
push ebx
mov ecx ebp
call sub_408310
mov [ ebp + 0x4 ] eax
mov ecx [ esi + 0x8 ]
mov [ ebp + 0x8 ] ecx
mov edx [ esi + 0xc ]
mov [ ebp + 0xc ] edx
mov cl [ eax - 0x1 ]
inc cl
pop edi
mov [ eax - 0x1 ] cl
mov eax ebp
pop esi
pop ebp
pop ebx
pop ecx
retn 0xc
mov eax r--data
mov ecx [ ebp + 0x4 ]
sub eax ebx
push eax
lea edx [ ecx + ebx ]
push edx
push ecx
call sub_40db20
mov esi [ ebp + 0x8 ]
add esp 0xc
sub esi ebx
mov ecx ebp
push 0x0
push esi
call sub_4083b0
test al al
je r-xdata
push esi
mov ecx ebp
call sub_408310
pop edi
mov eax ebp
pop esi
pop ebp
pop ebx
pop ecx
retn 0xc
sub_407ed0
push esi
mov esi ecx
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
mov [ esi + 0xc ] 0x0
pop esi
retn
mov al [ ecx - 0x1 ]
test al al
je r-xdata
add ecx 0xfffffffe
push ecx
call sub_40d360
add esp 0x4
cmp al 0xff
je r-xdata
dec al
mov [ ecx - 0x1 ] al
jmp r-xdata
sub_407f10
push ebx
push esi
push edi
mov edi ecx
mov ebx [ edi + 0x8 ]
mov esi [ edi + 0x4 ]
cmp esi ebx
je r-xdata
mov eax [ edi + 0x4 ]
push eax
call sub_40d360
add esp 0x4
xor eax eax
mov [ edi + 0x4 ] eax
mov [ edi + 0x8 ] eax
mov [ edi + 0xc ] eax
pop edi
pop esi
pop ebx
retn
mov ecx esi
call sub_4016e0
add esi 0x20
cmp esi ebx
jne r-xdata
sub_407f50
push ebx
push ebp
push esi
push edi
mov edi ecx
xor ebx ebx
mov ebp [ edi + 0x8 ]
mov esi [ edi + 0x4 ]
cmp esi ebp
je r-xdata
mov eax [ edi + 0x4 ]
push eax
call sub_40d360
add esp 0x4
mov [ edi + 0x4 ] ebx
mov [ edi + 0x8 ] ebx
mov [ edi + 0xc ] ebx
pop edi
pop esi
pop ebp
pop ebx
retn
mov eax [ esi + 0x4 ]
cmp eax ebx
je r-xdata
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
add esi 0x10
cmp esi ebp
jne r-xdata
lea ecx [ eax - 0x1 ]
mov al [ eax - 0x1 ]
cmp al bl
je r-xdata
push ecx
call sub_40d360
add esp 0x4
cmp al 0xff
je r-xdata
dec al
mov [ ecx ] al
jmp r-xdata
sub_407fb0
mov eax [ r--data ]
push ebx
push ebp
push esi
mov esi ecx
push edi
mov edi [ esp + 0x14 ]
sub eax [ esi + 0x8 ]
cmp eax edi
ja r-xdata
xor ebx ebx
cmp edi ebx
jbe r-xdata
call sub_40d36b
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
retn 0x8
mov ecx [ esi + 0x8 ]
mov ebp edi
add ebp ecx
cmp ebp 0xfffffffd
jbe r-xdata
mov ecx [ esi + 0x4 ]
cmp ecx ebx
je r-xdata
call sub_40d36b
cmp ebp ebx
jne r-xdata
mov al [ ecx - 0x1 ]
cmp al bl
je r-xdata
cmp [ esi + 0xc ] ebp
jae r-xdata
cmp ecx ebx
je r-xdata
cmp al 0xff
je r-xdata
movsx eax [ esp + 0x18 ]
mov edx [ esi + 0x8 ]
mov bl al
mov ecx edi
mov edi [ esi + 0x4 ]
mov bh bl
add edi edx
mov eax ebx
mov edx ecx
shl eax 0x10
mov ax bx
shr ecx 0x2
[ edi ]
mov ecx edx
and ecx 0x3
[ edi ]
mov eax [ esi + 0x4 ]
mov [ esi + 0x8 ] ebp
mov [ eax + ebp ] 0x0
push ebp
mov ecx esi
call sub_4089b0
push ebx
mov ecx esi
call sub_408310
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
retn 0x8
cmp ebp ebx
jne r-xdata
dec al
pop edi
mov [ ecx - 0x1 ] al
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
mov eax esi
pop esi
pop ebp
pop ebx
retn 0x8
sub_408080
push ebx
push ebp
push esi
mov esi [ esp + 0x14 ]
push edi
mov edi [ esp + 0x14 ]
mov ebp ecx
cmp [ edi + 0x8 ] esi
jae r-xdata
mov eax [ edi + 0x8 ]
mov ecx [ esp + 0x1c ]
mov ebx eax
sub ebx esi
cmp ecx ebx
jae r-xdata
call sub_40d597
cmp ebp edi
jne r-xdata
mov ebx ecx
xor edx edx
cmp ebx edx
jbe r-xdata
mov eax [ ebp + 0x8 ]
mov edi [ r--data ]
add ebx esi
cmp eax ebx
jae r-xdata
mov ecx ebp
call sub_4089a0
cmp eax ebx
jae r-xdata
cmp ebx eax
jne r-xdata
mov ecx ebp
call sub_4084d0
mov eax [ ebp + 0x8 ]
sub eax ebx
cmp eax edi
jae r-xdata
call sub_40d597
mov ecx [ ebp + 0x4 ]
test ecx ecx
je r-xdata
call sub_40d36b
mov eax [ edi + 0x4 ]
cmp eax edx
jne r-xdata
test edi edi
jbe r-xdata
mov edi eax
test ebx ebx
jne r-xdata
mov al [ ecx - 0x1 ]
test al al
je r-xdata
cmp [ eax - 0x1 ] 0xfe
jae r-xdata
mov eax r--data
mov ecx ebp
mov edi esi
call sub_4084d0
mov eax [ ebp + 0x8 ]
cmp eax esi
jae r-xdata
mov ecx [ ebp + 0x4 ]
sub eax edi
add ecx ebx
push eax
lea edx [ ecx + edi ]
push edx
push ecx
call sub_40db20
mov esi [ ebp + 0x8 ]
add esp 0xc
sub esi edi
mov ecx ebp
push 0x0
push esi
call sub_4083b0
test al al
je r-xdata
mov eax [ ebp + 0xc ]
cmp eax 0x1f
ja r-xdata
push 0x1
mov ecx ebp
call sub_4085a0
pop edi
mov eax ebp
pop esi
pop ebp
pop ebx
retn 0xc
cmp al 0xff
je r-xdata
mov eax [ ebp + 0x4 ]
cmp eax edx
je r-xdata
test edi edi
jbe r-xdata
mov edi eax
mov esi [ esp + 0x18 ]
mov eax [ ebp + 0x4 ]
mov [ ebp + 0x8 ] esi
mov [ esi + eax ] 0x0
push 0x1
mov ecx ebp
call sub_4085a0
cmp eax ebx
jae r-xdata
test ebx ebx
jne r-xdata
mov [ ebp + 0x4 ] edx
mov [ ebp + 0x8 ] edx
mov [ ebp + 0xc ] edx
mov eax [ edi + 0x4 ]
cmp eax edx
jne r-xdata
lea ecx [ eax - 0x1 ]
mov al [ eax - 0x1 ]
test al al
je r-xdata
pop edi
mov eax ebp
pop esi
pop ebp
pop ebx
retn 0xc
mov ecx [ ebp + 0x4 ]
sub eax edi
push eax
lea edx [ ecx + edi ]
push edx
push ecx
call sub_40db20
mov esi [ ebp + 0x8 ]
add esp 0xc
sub esi edi
mov ecx ebp
push 0x0
push esi
call sub_4083b0
test al al
je r-xdata
mov edi [ ebp + 0x4 ]
mov ecx ebx
add esi eax
mov eax ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov ecx [ ebp + 0x4 ]
mov [ ebp + 0x8 ] ebx
mov [ ebx + ecx ] 0x0
mov eax r--data
mov eax [ edi + 0x4 ]
test eax eax
jne r-xdata
push ebx
mov ecx ebp
call sub_4089b0
dec al
push ebx
mov [ ecx - 0x1 ] al
mov ecx ebp
call sub_4085a0
pop edi
mov eax ebp
pop esi
pop ebp
pop ebx
retn 0xc
mov [ ebp + 0x4 ] eax
mov ecx [ edi + 0x8 ]
mov [ ebp + 0x8 ] ecx
mov edx [ edi + 0xc ]
mov [ ebp + 0xc ] edx
mov cl [ eax - 0x1 ]
inc cl
pop edi
mov [ eax - 0x1 ] cl
mov eax ebp
pop esi
pop ebp
pop ebx
retn 0xc
mov eax r--data
push ecx
call sub_40d360
add esp 0x4
xor edx edx
cmp al 0xff
je r-xdata
push esi
mov ecx ebp
call sub_408310
pop edi
mov eax ebp
pop esi
pop ebp
pop ebx
retn 0xc
dec al
mov [ ecx ] al
jmp r-xdata
sub_408280
push ecx
mov eax [ esp + 0xc ]
push ebx
push ebp
push esi
mov esi [ esp + 0x1c ]
push edi
test esi esi
mov [ esp + 0x10 ] ecx
jne r-xdata
mov ebp [ ecx + 0x8 ]
cmp eax ebp
jae r-xdata
cmp eax [ ecx + 0x8 ]
jbe r-xdata
mov eax [ r--data ]
sub ebp eax
cmp esi ebp
ja r-xdata
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn 0xc
mov ebx [ ecx + 0x4 ]
mov edx 0x1
sub edx esi
add ebp edx
add ebx eax
mov ecx esi
mov esi eax
xor edx edx
[ esi ] [ edi ]
je r-xdata
mov ecx [ esp + 0x10 ]
pop edi
pop esi
pop ebp
mov edx [ ecx + 0x4 ]
pop ebx
sub eax edx
pop ecx
retn 0xc
mov esi [ esp + 0x20 ]
sub ebx eax
lea ebp [ ebx + ebp - 0x1 ]
lea ebx [ eax + 0x1 ]
jmp r-xdata
mov edi [ esp + 0x18 ]
push ebp
movsx eax [ edi ]
push eax
push ebx
call sub_40e5f0
add esp 0xc
test eax eax
je r-xdata
sub_408330
push esi
mov esi ecx
push edi
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov esi [ esi + 0x4 ]
test esi esi
je r-xdata
mov al [ eax - 0x1 ]
test al al
je r-xdata
pop edi
pop esi
retn
mov [ esi - 0x1 ] 0xff
cmp al 0xff
je r-xdata
mov edi [ esi + 0x8 ]
cmp edi 0xfffffffd
jbe r-xdata
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
call sub_40d36b
test edi edi
jne r-xdata
mov al [ ecx - 0x1 ]
test al al
je r-xdata
cmp [ esi + 0xc ] edi
jae r-xdata
test ecx ecx
je r-xdata
cmp al 0xff
je r-xdata
push edi
mov ecx esi
call sub_4089b0
push edi
mov ecx esi
call sub_408310
jmp r-xdata
test edi edi
jne r-xdata
dec al
mov [ ecx - 0x1 ] al
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
jmp r-xdata
sub_4083b0
push ebx
push esi
push edi
mov edi [ esp + 0x10 ]
cmp edi 0xfffffffd
mov esi ecx
jbe r-xdata
mov eax [ esi + 0x4 ]
xor ebx ebx
cmp eax ebx
je r-xdata
call sub_40d36b
mov cl [ esp + 0x14 ]
cmp edi ebx
jne r-xdata
mov cl [ eax - 0x1 ]
cmp cl bl
je r-xdata
cmp cl bl
je r-xdata
cmp cl bl
je r-xdata
cmp cl 0xff
je r-xdata
cmp [ esi + 0xc ] edi
jae r-xdata
mov ecx [ esi + 0xc ]
cmp ecx 0x1f
ja r-xdata
cmp eax ebx
je r-xdata
cmp eax ebx
je r-xdata
cmp edi ebx
jne r-xdata
pop edi
pop esi
mov al 0x1
pop ebx
retn 0x8
push edi
mov ecx esi
call sub_4089b0
cmp eax ebx
je r-xdata
cmp ecx edi
jae r-xdata
pop edi
pop esi
xor al al
pop ebx
retn 0x8
mov [ esi + 0x8 ] ebx
mov [ eax ] bl
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
pop edi
pop esi
xor al al
pop ebx
retn 0x8
lea ecx [ eax - 0x1 ]
mov al [ eax - 0x1 ]
cmp al bl
je r-xdata
dec cl
pop edi
mov [ eax - 0x1 ] cl
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
pop esi
xor al al
pop ebx
retn 0x8
push edi
mov ecx esi
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
call sub_4089b0
pop edi
pop esi
mov al 0x1
pop ebx
retn 0x8
lea ecx [ eax - 0x1 ]
mov al [ eax - 0x1 ]
cmp al bl
je r-xdata
push ecx
call sub_40d360
add esp 0x4
cmp al 0xff
je r-xdata
push ecx
call sub_40d360
add esp 0x4
cmp al 0xff
je r-xdata
dec al
pop edi
mov [ ecx ] al
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
pop esi
xor al al
pop ebx
retn 0x8
dec al
push edi
mov [ ecx ] al
mov ecx esi
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
call sub_4089b0
pop edi
pop esi
mov al 0x1
pop ebx
retn 0x8
sub_4084d0
push ebx
push ebp
mov ebp ecx
xor edx edx
push esi
push edi
mov ecx [ ebp + 0x4 ]
cmp ecx edx
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn
mov al [ ecx - 0x1 ]
test al al
je r-xdata
cmp al 0xff
je r-xdata
dec al
mov esi ecx
mov [ ecx - 0x1 ] al
mov edi esi
or ecx 0xffffffff
xor eax eax
mov [ ebp + 0x4 ] edx
mov [ ebp + 0x8 ] edx
mov [ ebp + 0xc ] edx
[ edi ]
not ecx
dec ecx
mov ebx ecx
cmp ebx 0xfffffffd
jbe r-xdata
mov ecx [ ebp + 0x4 ]
cmp ecx edx
je r-xdata
call sub_40d36b
xor edx edx
cmp ebx edx
jne r-xdata
mov al [ ecx - 0x1 ]
test al al
je r-xdata
mov eax [ ebp + 0xc ]
cmp eax 0x1f
ja r-xdata
push 0x1
mov ecx ebp
call sub_4085a0
pop edi
pop esi
pop ebp
pop ebx
retn
cmp al 0xff
je r-xdata
push 0x1
mov ecx ebp
call sub_4085a0
cmp eax ebx
jae r-xdata
cmp ebx edx
jne r-xdata
mov edi [ ebp + 0x4 ]
mov ecx ebx
mov eax ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov ecx [ ebp + 0x4 ]
mov [ ebp + 0x8 ] ebx
mov [ ebx + ecx ] 0x0
push ebx
mov ecx ebp
call sub_4089b0
dec al
push edx
mov [ ecx - 0x1 ] al
mov ecx ebp
call sub_4085a0
pop edi
pop esi
pop ebp
pop ebx
retn
sub_4085a0
mov al [ esp + 0x4 ]
push esi
test al al
mov esi ecx
je r-xdata
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
mov [ esi + 0xc ] 0x0
pop esi
retn 0x4
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
lea ecx [ eax - 0x1 ]
mov al [ eax - 0x1 ]
test al al
je r-xdata
push ecx
call sub_40d360
add esp 0x4
cmp al 0xff
je r-xdata
dec al
mov [ ecx ] al
jmp r-xdata
sub_4085f0
mov al [ esp + 0x4 ]
push esi
test al al
mov esi ecx
je r-xdata
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
mov [ esi + 0xc ] 0x0
pop esi
retn 0x4
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
mov al [ ecx - 0x1 ]
test al al
je r-xdata
add ecx 0xfffffffe
push ecx
call sub_40d360
add esp 0x4
cmp al 0xff
je r-xdata
dec al
mov [ ecx - 0x1 ] al
jmp r-xdata
sub_408640
push ecx
mov eax [ esp + 0x8 ]
push ebx
push ebp
mov ebp [ ecx + 0x8 ]
push esi
push edi
mov edi [ esp + 0x1c ]
mov [ esp + 0x10 ] ecx
cmp edi ebp
mov esi eax
je r-xdata
mov ebx [ ecx + 0x8 ]
mov edi esi
cmp esi ebx
je r-xdata
mov ecx edi
lea ebx [ eax + 0x10 ]
sub ecx eax
mov [ esp + 0x1c ] ecx
mov [ ecx + 0x8 ] esi
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn 0x8
mov ecx edi
call sub_4016e0
add edi 0x20
cmp edi ebx
jne r-xdata
mov eax [ r--data ]
mov ecx esi
push eax
push 0x0
push edi
call sub_408080
mov ecx [ r--data ]
mov edx [ esp + 0x1c ]
push ecx
add edx ebx
push 0x0
push edx
mov ecx ebx
call sub_408080
add edi 0x20
add esi 0x20
add ebx 0x20
cmp edi ebp
jne r-xdata
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0x18 ]
mov eax [ esp + 0x10 ]
pop edi
mov [ eax + 0x8 ] esi
mov eax [ esp + 0x14 ]
pop esi
pop ebp
pop ebx
pop ecx
retn 0x8
sub_4086e0
push esi
mov esi [ esp + 0x8 ]
push edi
mov edi [ esp + 0x10 ]
cmp esi edi
je r-xdata
pop edi
pop esi
retn 0x8
mov ecx esi
call sub_4016e0
add esi 0x20
cmp esi edi
jne r-xdata
sub_408710
push esi
mov esi [ esp + 0x8 ]
push edi
mov edi [ esp + 0x10 ]
cmp esi edi
je r-xdata
pop edi
pop esi
retn 0x8
push ebx
xor ebx ebx
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
add esi 0x10
cmp esi edi
jne r-xdata
lea ecx [ eax - 0x1 ]
mov al [ eax - 0x1 ]
cmp al bl
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax ebx
je r-xdata
pop ebx
push ecx
call sub_40d360
add esp 0x4
cmp al 0xff
je r-xdata
dec al
mov [ ecx ] al
jmp r-xdata
sub_408760
push ebx
push ebp
push esi
mov esi [ esp + 0x14 ]
push edi
mov edi [ esp + 0x14 ]
mov ebx ecx
cmp [ edi + 0x8 ] esi
jae r-xdata
mov eax [ edi + 0x8 ]
sub eax esi
mov esi [ esp + 0x1c ]
cmp eax esi
jae r-xdata
call sub_40d597
mov eax [ r--data ]
mov edx [ ebx + 0x8 ]
sub eax edx
cmp eax esi
ja r-xdata
mov esi eax
test esi esi
jbe r-xdata
call sub_40d36b
pop edi
pop esi
mov eax ebx
pop ebp
pop ebx
retn 0xc
mov ebp [ ebx + 0x8 ]
add ebp esi
cmp ebp 0xfffffffd
jbe r-xdata
mov ecx [ ebx + 0x4 ]
test ecx ecx
je r-xdata
call sub_40d36b
test ebp ebp
jne r-xdata
mov al [ ecx - 0x1 ]
test al al
je r-xdata
cmp [ ebx + 0xc ] ebp
jae r-xdata
test ecx ecx
je r-xdata
cmp al 0xff
je r-xdata
mov eax [ edi + 0x4 ]
test eax eax
jne r-xdata
push ebp
mov ecx ebx
call sub_4089b0
pop edi
mov [ ebx + 0x8 ] ebp
pop esi
mov eax ebx
pop ebp
mov [ ecx ] 0x0
pop ebx
retn 0xc
test ebp ebp
jne r-xdata
mov edx [ esp + 0x18 ]
mov edi [ ebx + 0x8 ]
mov ecx esi
lea esi [ eax + edx ]
mov eax [ ebx + 0x4 ]
add edi eax
mov eax ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov ecx [ ebx + 0x4 ]
mov [ ebx + 0x8 ] ebp
mov [ ecx + ebp ] 0x0
mov eax r--data
dec al
push ebp
mov [ ecx - 0x1 ] al
mov ecx ebx
call sub_4085a0
pop edi
pop esi
mov eax ebx
pop ebp
pop ebx
retn 0xc
sub_408840
mov eax [ r--data ]
push ebx
push ebp
mov ebp ecx
push esi
push edi
mov edx [ ebp + 0x8 ]
mov edi [ esp + 0x18 ]
sub eax edx
cmp eax edi
ja r-xdata
xor esi esi
cmp edi esi
jbe r-xdata
call sub_40d36b
pop edi
mov eax ebp
pop esi
pop ebp
pop ebx
retn 0x8
mov ecx [ ebp + 0x8 ]
mov ebx edi
add ebx ecx
cmp ebx 0xfffffffd
jbe r-xdata
mov ecx [ ebp + 0x4 ]
cmp ecx esi
je r-xdata
call sub_40d36b
cmp ebx esi
jne r-xdata
mov al [ ecx - 0x1 ]
test al al
je r-xdata
cmp [ ebp + 0xc ] ebx
jae r-xdata
cmp ecx esi
je r-xdata
cmp al 0xff
je r-xdata
mov edx [ ebp + 0x8 ]
mov esi [ esp + 0x14 ]
mov ecx edi
mov edi [ ebp + 0x4 ]
add edi edx
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov eax [ ebp + 0x4 ]
mov [ ebp + 0x8 ] ebx
mov [ eax + ebx ] 0x0
push ebx
mov ecx ebp
call sub_4089b0
push esi
mov ecx ebp
call sub_408310
pop edi
mov eax ebp
pop esi
pop ebp
pop ebx
retn 0x8
cmp ebx esi
jne r-xdata
dec al
pop edi
mov [ ecx - 0x1 ] al
mov [ ebp + 0x4 ] esi
mov [ ebp + 0x8 ] esi
mov [ ebp + 0xc ] esi
mov eax ebp
pop esi
pop ebp
pop ebx
retn 0x8
sub_408900
push ebx
mov ebx [ esp + 0xc ]
push ebp
cmp ebx 0xfffffffd
mov ebp ecx
jbe r-xdata
mov ecx [ ebp + 0x4 ]
xor edx edx
cmp ecx edx
je r-xdata
call sub_40d36b
cmp ebx edx
jne r-xdata
mov al [ ecx - 0x1 ]
test al al
je r-xdata
mov eax [ ebp + 0xc ]
cmp eax 0x1f
ja r-xdata
push 0x1
mov ecx ebp
call sub_4085a0
mov eax ebp
pop ebp
pop ebx
retn 0x8
cmp al 0xff
je r-xdata
push 0x1
mov ecx ebp
call sub_4085a0
cmp eax ebx
jae r-xdata
cmp ebx edx
jne r-xdata
mov ecx ebx
push esi
mov esi [ esp + 0x10 ]
mov eax ecx
push edi
mov edi [ ebp + 0x4 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
mov eax ebp
and ecx 0x3
[ edi ] [ esi ]
mov ecx [ ebp + 0x4 ]
pop edi
mov [ ebp + 0x8 ] ebx
pop esi
mov [ ebx + ecx ] 0x0
pop ebp
pop ebx
retn 0x8
push ebx
mov ecx ebp
call sub_4089b0
dec al
mov [ ecx - 0x1 ] al
mov [ ebp + 0x4 ] edx
mov [ ebp + 0x8 ] edx
mov [ ebp + 0xc ] edx
mov eax ebp
pop ebp
pop ebx
retn 0x8
sub_4089b0
push ebp
mov ebp esp
push 0xffffffff
push sub_418570
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi eax
or esi 0x1f
push edi
mov ebx ecx
cmp esi 0xfffffffd
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] esi
jbe r-xdata
lea eax [ esi + 0x2 ]
mov [ ebp - 0x4 ] 0x0
test eax eax
jge r-xdata
mov [ ebp - 0x14 ] eax
mov esi eax
push eax
call sub_40daa2
add esp 0x4
mov [ ebp + 0x8 ] eax
jmp r-xdata
xor eax eax
mov eax [ ebx + 0x8 ]
test eax eax
jbe r-xdata
mov eax [ ebx + 0x4 ]
mov edi [ ebx + 0x8 ]
test eax eax
je r-xdata
cmp eax esi
jbe r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x8 ] 0x0
inc eax
cmp edi esi
mov [ ebx + 0x4 ] eax
mov [ eax - 0x1 ] 0x0
mov [ ebx + 0xc ] esi
ja r-xdata
lea ecx [ eax - 0x1 ]
mov al [ eax - 0x1 ]
test al al
je r-xdata
mov esi [ ebx + 0x4 ]
mov ecx eax
mov eax [ ebp + 0x8 ]
mov edx ecx
shr ecx 0x2
lea edi [ eax + 0x1 ]
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov esi [ ebp - 0x14 ]
mov eax esi
mov ecx [ ebx + 0x4 ]
mov [ ebx + 0x8 ] esi
pop edi
mov [ ecx + esi ] 0x0
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov esi edi
push ecx
call sub_40d360
add esp 0x4
cmp al 0xff
je r-xdata
dec al
mov [ ecx ] al
jmp r-xdata
sub_408ac0
push esi
push edi
mov edi [ esp + 0x10 ]
mov esi ecx
cmp edi 0x7ffffffd
jbe r-xdata
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
call sub_40d36b
test edi edi
jne r-xdata
mov al [ ecx - 0x1 ]
test al al
je r-xdata
mov eax [ esi + 0xc ]
cmp eax 0x1f
ja r-xdata
push 0x1
mov ecx esi
call sub_4085f0
mov eax esi
pop edi
pop esi
retn 0x8
cmp al 0xff
je r-xdata
push 0x1
mov ecx esi
call sub_4085f0
cmp eax edi
jae r-xdata
test edi edi
jne r-xdata
mov eax [ esi + 0x4 ]
mov [ esi + 0x8 ] edi
mov [ eax + edi * 2 ] 0x0
mov eax esi
pop edi
pop esi
retn 0x8
push ebp
mov edx edi
mov ecx [ esp + 0xc ]
mov eax [ esi + 0x4 ]
test edi edi
jbe r-xdata
push edi
mov ecx esi
call sub_409290
dec al
mov [ ecx - 0x1 ] al
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
mov eax esi
pop edi
pop esi
retn 0x8
mov bp [ ecx ]
add ecx 0x2
mov [ eax ] bp
add eax 0x2
dec edx
jne r-xdata
pop ebp
sub_408b70
sub esp 0xc
mov eax [ ecx + 0xc ]
push ebx
mov ebx [ esp + 0x18 ]
push ebp
push esi
mov esi [ ecx + 0x8 ]
sub eax esi
push edi
sar eax 0x5
cmp eax ebx
mov [ esp + 0x10 ] ecx
jae r-xdata
mov edi [ esp + 0x20 ]
mov edx esi
sub edx edi
sar edx 0x5
cmp edx ebx
jae r-xdata
mov ecx [ ecx + 0x4 ]
test ecx ecx
je r-xdata
test ebx ebx
jbe r-xdata
mov eax ebx
mov ebp edi
shl eax 0x5
cmp edi esi
mov [ esp + 0x20 ] eax
lea edx [ eax + edi ]
je r-xdata
mov eax ebx
mov eax esi
sub eax ecx
sar eax 0x5
cmp ebx eax
jb r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0xc
retn 0xc
shl ebx 0x5
mov eax ebx
mov ebx esi
sub ebx eax
mov ebp esi
cmp ebx esi
mov [ esp + 0x20 ] eax
je r-xdata
mov esi [ ecx + 0x8 ]
mov ebp [ esp + 0x28 ]
mov edx esi
sub edx edi
sar edx 0x5
sub ebx edx
je r-xdata
mov [ esp + 0x24 ] edx
sub esi ecx
sar esi 0x5
xor esi esi
jmp r-xdata
test ecx ecx
jne r-xdata
mov ebx [ ecx + 0x8 ]
mov esi ebx
sub esi eax
cmp edi esi
je r-xdata
push ebx
push ebp
call sub_409af0
add ebx 0x20
add esp 0x8
add ebp 0x20
cmp ebx esi
jne r-xdata
mov ebx [ ecx + 0x8 ]
mov esi edi
cmp edi ebx
je r-xdata
push ebp
push esi
call sub_409af0
add esp 0x8
add esi 0x20
dec ebx
jne r-xdata
mov eax [ esp + 0x24 ]
push ebp
push eax
call sub_409af0
mov ecx [ esp + 0x2c ]
add ebp 0x20
add esp 0x8
add ecx 0x20
cmp ebp esi
mov [ esp + 0x24 ] ecx
jne r-xdata
mov eax [ esp + 0x20 ]
mov ecx [ esp + 0x10 ]
shl eax 0x5
push eax
call sub_40daa2
mov ebp [ esp + 0x14 ]
mov [ esp + 0x1c ] eax
mov edi eax
mov eax [ esp + 0x24 ]
mov esi [ ebp + 0x4 ]
add esp 0x4
cmp esi eax
je r-xdata
xor eax eax
add eax esi
test eax eax
mov [ esp + 0x14 ] eax
jge r-xdata
lea ebx [ eax + edi ]
mov esi edi
cmp edi ebx
je r-xdata
lea edx [ ebx + 0x10 ]
lea ebp [ esi + 0x10 ]
mov [ esp + 0x24 ] edx
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0x20 ]
add [ ecx + 0x8 ] eax
lea edi [ ebp + 0x10 ]
mov eax [ esp + 0x20 ]
mov ecx [ esp + 0x10 ]
test ebx ebx
mov esi edi
jbe r-xdata
push esi
push edi
call sub_409af0
mov eax [ esp + 0x28 ]
add esi 0x20
add esp 0x8
add edi 0x20
cmp esi eax
jne r-xdata
mov edi [ esp + 0x28 ]
lea ebp [ edi + 0x10 ]
mov eax [ r--data ]
mov edx [ esp + 0x24 ]
sub esi 0x20
sub ebx 0x20
push eax
sub edx 0x20
push 0x0
push esi
mov ecx ebx
sub ebp 0x20
mov [ esp + 0x30 ] edx
call sub_408080
mov ecx [ r--data ]
push ecx
mov ecx [ esp + 0x28 ]
push 0x0
push ebp
call sub_408080
cmp esi edi
jne r-xdata
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0x20 ]
mov eax [ r--data ]
mov ecx esi
push eax
push 0x0
push ebp
call sub_408080
mov ecx [ r--data ]
push ecx
push 0x0
push edi
lea ecx [ esi + 0x10 ]
call sub_408080
add esi 0x20
cmp esi ebx
jne r-xdata
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0x20 ]
pop edi
pop esi
mov edx [ ecx + 0x8 ]
pop ebp
add edx eax
pop ebx
mov [ ecx + 0x8 ] edx
add esp 0xc
retn 0xc
mov esi [ esp + 0x20 ]
mov edx ebx
shl edx 0x5
lea eax [ edx + edi ]
mov edi [ ebp + 0x8 ]
cmp esi edi
je r-xdata
mov [ esp + 0x24 ] ebx
mov edx [ r--data ]
mov ecx esi
push edx
push 0x0
push edi
call sub_408080
mov eax [ r--data ]
lea ecx [ esi + 0x10 ]
push eax
push 0x0
push ebp
call sub_408080
add esi 0x20
cmp esi ebx
jne r-xdata
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0x20 ]
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0x4 ]
cmp esi edi
je r-xdata
mov [ esp + 0x20 ] eax
mov ecx [ esp + 0x28 ]
push ecx
push esi
call sub_409af0
mov eax [ esp + 0x2c ]
add esp 0x8
add esi 0x20
dec eax
mov [ esp + 0x24 ] eax
jne r-xdata
mov ecx [ ebp + 0x4 ]
push ecx
call sub_40d360
mov eax [ esp + 0x18 ]
mov edx [ esp + 0x1c ]
mov ecx [ ebp + 0x4 ]
add esp 0x4
shl eax 0x5
add eax edx
test ecx ecx
mov [ ebp + 0xc ] eax
jne r-xdata
mov ecx esi
call sub_4016e0
add esi 0x20
cmp esi edi
jne r-xdata
mov eax [ esp + 0x20 ]
push esi
push eax
call sub_409af0
mov ecx [ esp + 0x28 ]
add esi 0x20
add esp 0x8
add ecx 0x20
cmp esi edi
mov [ esp + 0x20 ] ecx
jne r-xdata
mov eax [ ebp + 0x8 ]
pop edi
sub eax ecx
mov [ ebp + 0x4 ] edx
sar eax 0x5
add eax ebx
pop esi
shl eax 0x5
add eax edx
mov [ ebp + 0x8 ] eax
pop ebp
pop ebx
add esp 0xc
retn 0xc
xor eax eax
pop edi
mov eax ebx
mov [ ebp + 0x4 ] edx
shl eax 0x5
add eax edx
pop esi
mov [ ebp + 0x8 ] eax
pop ebp
pop ebx
add esp 0xc
retn 0xc
sub_408e80
sub esp 0xc
mov eax [ ecx + 0xc ]
push ebx
push ebp
push esi
mov esi [ ecx + 0x8 ]
push edi
mov edi [ esp + 0x24 ]
sub eax esi
sar eax 0x4
cmp eax edi
mov [ esp + 0x10 ] ecx
jae r-xdata
mov ebx [ esp + 0x20 ]
mov edx esi
sub edx ebx
sar edx 0x4
cmp edx edi
jae r-xdata
mov ecx [ ecx + 0x4 ]
test ecx ecx
je r-xdata
test edi edi
jbe r-xdata
mov eax edi
mov ebp ebx
shl eax 0x4
cmp ebx esi
mov [ esp + 0x20 ] eax
lea edx [ eax + ebx ]
je r-xdata
mov eax edi
mov eax esi
sub eax ecx
sar eax 0x4
cmp edi eax
jb r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0xc
retn 0xc
shl edi 0x4
mov eax edi
mov edi esi
sub edi eax
mov ebp esi
cmp edi esi
mov [ esp + 0x20 ] eax
je r-xdata
mov esi [ ecx + 0x8 ]
mov ebp [ esp + 0x28 ]
mov edx esi
sub edx ebx
sar edx 0x4
sub edi edx
je r-xdata
mov [ esp + 0x24 ] edx
sub esi ecx
sar esi 0x4
xor esi esi
jmp r-xdata
test ecx ecx
jne r-xdata
mov edi [ ecx + 0x8 ]
mov esi edi
sub esi eax
cmp ebx esi
je r-xdata
push edi
push ebp
call sub_409c50
add edi 0x10
add esp 0x8
add ebp 0x10
cmp edi esi
jne r-xdata
mov edi [ ecx + 0x8 ]
mov esi ebx
cmp ebx edi
je r-xdata
push ebp
push esi
call sub_409c50
add esp 0x8
add esi 0x10
dec edi
jne r-xdata
mov eax [ esp + 0x24 ]
push ebp
push eax
call sub_409c50
mov ecx [ esp + 0x2c ]
add ebp 0x10
add esp 0x8
add ecx 0x10
cmp ebp esi
mov [ esp + 0x24 ] ecx
jne r-xdata
mov eax [ esp + 0x20 ]
mov ecx [ esp + 0x10 ]
shl eax 0x4
push eax
call sub_40daa2
mov ebp [ esp + 0x14 ]
mov [ esp + 0x1c ] eax
mov ebx eax
mov eax [ esp + 0x24 ]
mov esi [ ebp + 0x4 ]
add esp 0x4
cmp esi eax
je r-xdata
xor eax eax
add eax esi
test eax eax
mov [ esp + 0x14 ] eax
jge r-xdata
lea edi [ eax + ebx ]
mov esi ebx
cmp ebx edi
je r-xdata
mov ecx [ r--data ]
sub esi 0x10
sub edi 0x10
push ecx
push 0x0
push esi
mov ecx edi
call sub_408080
cmp esi ebx
jne r-xdata
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0x20 ]
add [ ecx + 0x8 ] eax
mov eax [ r--data ]
mov ecx esi
push eax
push 0x0
push ebp
call sub_408080
add esi 0x10
cmp esi edi
jne r-xdata
mov eax [ esp + 0x20 ]
mov ecx [ esp + 0x10 ]
test edi edi
mov esi ebx
jbe r-xdata
push esi
push ebx
call sub_409c50
mov eax [ esp + 0x28 ]
add esi 0x10
add esp 0x8
add ebx 0x10
cmp esi eax
jne r-xdata
mov ebx [ esp + 0x28 ]
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0x20 ]
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0x20 ]
pop edi
pop esi
mov edx [ ecx + 0x8 ]
pop ebp
add edx eax
pop ebx
mov [ ecx + 0x8 ] edx
add esp 0xc
retn 0xc
mov esi [ esp + 0x20 ]
mov edx edi
shl edx 0x4
lea eax [ edx + ebx ]
mov ebx [ ebp + 0x8 ]
cmp esi ebx
je r-xdata
mov [ esp + 0x24 ] edi
mov edx [ r--data ]
mov ecx esi
push edx
push 0x0
push ebx
call sub_408080
add esi 0x10
cmp esi edi
jne r-xdata
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0x20 ]
mov ebx [ ebp + 0x8 ]
mov esi [ ebp + 0x4 ]
cmp esi ebx
je r-xdata
mov [ esp + 0x20 ] eax
mov ecx [ esp + 0x28 ]
push ecx
push esi
call sub_409c50
mov eax [ esp + 0x2c ]
add esp 0x8
add esi 0x10
dec eax
mov [ esp + 0x24 ] eax
jne r-xdata
mov ecx [ ebp + 0x4 ]
push ecx
call sub_40d360
mov eax [ esp + 0x18 ]
mov edx [ esp + 0x1c ]
mov ecx [ ebp + 0x4 ]
add esp 0x4
shl eax 0x4
add eax edx
test ecx ecx
mov [ ebp + 0xc ] eax
jne r-xdata
push 0x1
mov ecx esi
call sub_4085a0
add esi 0x10
cmp esi ebx
jne r-xdata
mov eax [ esp + 0x20 ]
push esi
push eax
call sub_409c50
mov ecx [ esp + 0x28 ]
add esi 0x10
add esp 0x8
add ecx 0x10
cmp esi ebx
mov [ esp + 0x20 ] ecx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebp + 0x4 ] edx
sub eax ecx
sar eax 0x4
add eax edi
pop edi
shl eax 0x4
add eax edx
pop esi
mov [ ebp + 0x8 ] eax
pop ebp
pop ebx
add esp 0xc
retn 0xc
xor eax eax
mov [ ebp + 0x4 ] edx
mov eax edi
pop edi
shl eax 0x4
add eax edx
pop esi
mov [ ebp + 0x8 ] eax
pop ebp
pop ebx
add esp 0xc
retn 0xc
sub_409160
push ebx
push esi
push edi
mov edi [ esp + 0x10 ]
cmp edi 0x7ffffffd
mov esi ecx
jbe r-xdata
mov eax [ esi + 0x4 ]
xor ebx ebx
cmp eax ebx
je r-xdata
call sub_40d36b
mov cl [ esp + 0x14 ]
cmp edi ebx
jne r-xdata
mov cl [ eax - 0x1 ]
cmp cl bl
je r-xdata
cmp cl bl
je r-xdata
cmp cl bl
je r-xdata
cmp cl 0xff
je r-xdata
cmp [ esi + 0xc ] edi
jae r-xdata
mov ecx [ esi + 0xc ]
cmp ecx 0x1f
ja r-xdata
cmp eax ebx
je r-xdata
cmp eax ebx
je r-xdata
cmp edi ebx
jne r-xdata
pop edi
pop esi
mov al 0x1
pop ebx
retn 0x8
push edi
mov ecx esi
call sub_409290
cmp eax ebx
je r-xdata
cmp ecx edi
jae r-xdata
pop edi
pop esi
xor al al
pop ebx
retn 0x8
mov [ esi + 0x8 ] ebx
mov [ eax ] bx
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
pop edi
pop esi
xor al al
pop ebx
retn 0x8
mov cl [ eax - 0x1 ]
cmp cl bl
je r-xdata
dec cl
pop edi
mov [ eax - 0x1 ] cl
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
pop esi
xor al al
pop ebx
retn 0x8
push edi
mov ecx esi
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
call sub_409290
pop edi
pop esi
mov al 0x1
pop ebx
retn 0x8
mov cl [ eax - 0x1 ]
cmp cl bl
je r-xdata
add eax 0xfffffffe
push eax
call sub_40d360
add esp 0x4
cmp cl 0xff
je r-xdata
add eax 0xfffffffe
push eax
call sub_40d360
add esp 0x4
cmp cl 0xff
je r-xdata
dec cl
pop edi
mov [ eax - 0x1 ] cl
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
pop esi
xor al al
pop ebx
retn 0x8
dec cl
push edi
mov [ eax - 0x1 ] cl
mov ecx esi
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
call sub_409290
pop edi
pop esi
mov al 0x1
pop ebx
retn 0x8
sub_409290
push ebp
mov ebp esp
push 0xffffffff
push sub_418580
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov edi eax
mov esi ecx
or edi 0x1f
mov [ ebp - 0x10 ] esp
cmp edi 0x7ffffffd
mov [ ebp - 0x14 ] esi
jbe r-xdata
lea eax [ edi + 0x2 ]
mov [ ebp - 0x4 ] 0x0
test eax eax
jge r-xdata
mov edi eax
add eax eax
push eax
call sub_40daa2
add esp 0x4
mov [ ebp + 0x8 ] eax
jmp r-xdata
xor eax eax
mov edx [ esi + 0x8 ]
test edx edx
jbe r-xdata
mov eax [ esi + 0x4 ]
mov ebx [ esi + 0x8 ]
test eax eax
je r-xdata
cmp edx edi
jbe r-xdata
mov ecx [ ebp + 0x8 ]
mov [ esi + 0x8 ] 0x0
cmp ebx edi
lea eax [ ecx + 0x2 ]
mov [ esi + 0x4 ] eax
mov [ eax - 0x1 ] 0x0
mov [ esi + 0xc ] edi
ja r-xdata
mov cl [ eax - 0x1 ]
test cl cl
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ esi + 0x4 ]
add eax 0x2
test edx edx
jbe r-xdata
mov edx edi
mov edx [ esi + 0x4 ]
mov ecx [ ebp - 0xc ]
mov [ esi + 0x8 ] edi
mov [ edx + edi * 2 ] 0x0
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov edi ebx
add eax 0xfffffffe
push eax
call sub_40d360
add esp 0x4
cmp cl 0xff
je r-xdata
mov bx [ ecx ]
add ecx 0x2
mov [ eax ] bx
add eax 0x2
dec edx
jne r-xdata
dec cl
mov [ eax - 0x1 ] cl
jmp r-xdata
sub_4092e8
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x18 ] eax
add eax 0x2
test eax eax
jge r-xdata
lea ecx [ eax + eax ]
push ecx
call sub_40daa2
mov [ ebp + 0x8 ] eax
add esp 0x4
mov eax r-xdata
retn
xor eax eax
sub_4093a0
push 0xffffffff
push sub_418598
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x14
mov eax [ esp + 0x28 ]
mov edx [ r--data ]
push ebx
push esi
mov cl [ eax ]
push edi
xor ebx ebx
push edx
mov [ esp + 0x14 ] cl
push ebx
push eax
lea ecx [ esp + 0x1c ]
mov [ esp + 0x18 ] ebx
mov [ esp + 0x20 ] ebx
mov [ esp + 0x24 ] ebx
mov [ esp + 0x28 ] ebx
call sub_408080
mov esi [ esp + 0x38 ]
mov eax [ r--data ]
mov edi eax
mov [ esp + 0x28 ] ebx
mov ecx [ esi + 0x8 ]
cmp ecx edi
jae r-xdata
sub eax [ esp + 0x18 ]
cmp eax edi
ja r-xdata
mov edi ecx
cmp edi ebx
push ebp
jbe r-xdata
call sub_40d36b
mov esi [ esp + 0x34 ]
mov cl [ esp + 0x14 ]
lea eax [ esp + 0x14 ]
mov [ esi ] cl
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
mov edx [ r--data ]
mov ecx esi
push edx
push ebx
push eax
call sub_408080
mov eax [ esp + 0x18 ]
pop ebp
cmp eax ebx
je r-xdata
mov eax [ esp + 0x1c ]
push ebx
lea ecx [ esp + 0x18 ]
lea ebp [ eax + edi ]
push ebp
call sub_4083b0
test al al
je r-xdata
mov ecx [ esp + 0x20 ]
mov eax esi
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x20
retn
lea ecx [ eax - 0x1 ]
mov al [ eax - 0x1 ]
cmp al bl
je r-xdata
mov esi [ esi + 0x4 ]
cmp esi ebx
jne r-xdata
push ecx
call sub_40d360
add esp 0x4
cmp al 0xff
je r-xdata
mov edx [ esp + 0x18 ]
mov eax [ esp + 0x1c ]
mov ecx edi
lea edi [ eax + edx ]
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov eax [ esp + 0x18 ]
mov [ esp + 0x1c ] ebp
mov [ eax + ebp ] bl
mov esi r--data
dec al
pop edi
mov [ ecx ] al
mov eax esi
pop esi
pop ebx
mov ecx [ esp + 0x14 ]
mov [ fs : 0x0 ] ecx
add esp 0x20
retn
sub_4094d0
push 0xffffffff
push sub_4185b8
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x14
mov eax [ esp + 0x28 ]
mov edx [ r--data ]
push ebx
push esi
mov cl [ eax ]
push edi
xor ebx ebx
push edx
mov [ esp + 0x14 ] cl
push ebx
push eax
lea ecx [ esp + 0x1c ]
mov [ esp + 0x18 ] ebx
mov [ esp + 0x20 ] ebx
mov [ esp + 0x24 ] ebx
mov [ esp + 0x28 ] ebx
call sub_408080
mov esi [ esp + 0x38 ]
or ecx 0xffffffff
mov edi esi
xor eax eax
[ edi ]
mov eax [ r--data ]
mov edx [ esp + 0x18 ]
not ecx
dec ecx
sub eax edx
mov edi ecx
mov [ esp + 0x28 ] ebx
cmp eax edi
ja r-xdata
cmp edi ebx
push ebp
jbe r-xdata
call sub_40d36b
mov esi [ esp + 0x34 ]
mov cl [ esp + 0x14 ]
lea eax [ esp + 0x14 ]
mov [ esi ] cl
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
mov edx [ r--data ]
mov ecx esi
push edx
push ebx
push eax
call sub_408080
mov eax [ esp + 0x18 ]
pop ebp
cmp eax ebx
je r-xdata
mov ecx [ esp + 0x1c ]
push ebx
lea ebp [ ecx + edi ]
lea ecx [ esp + 0x18 ]
push ebp
call sub_4083b0
test al al
je r-xdata
mov ecx [ esp + 0x20 ]
mov eax esi
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x20
retn
lea ecx [ eax - 0x1 ]
mov al [ eax - 0x1 ]
cmp al bl
je r-xdata
mov edx [ esp + 0x18 ]
mov eax [ esp + 0x1c ]
mov ecx edi
lea edi [ eax + edx ]
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov eax [ esp + 0x18 ]
mov [ esp + 0x1c ] ebp
mov [ eax + ebp ] bl
push ecx
call sub_40d360
add esp 0x4
cmp al 0xff
je r-xdata
dec al
pop edi
mov [ ecx ] al
mov eax esi
pop esi
pop ebx
mov ecx [ esp + 0x14 ]
mov [ fs : 0x0 ] ecx
add esp 0x20
retn
sub_409600
push 0xffffffff
push sub_4185d8
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x14
mov al [ esp + 0x28 ]
push ebx
push ebp
push esi
mov esi [ esp + 0x34 ]
push edi
mov [ esp + 0x14 ] al
mov edi esi
or ecx 0xffffffff
xor eax eax
xor ebx ebx
push 0x1
[ edi ]
not ecx
dec ecx
mov [ esp + 0x14 ] ebx
mov ebp ecx
lea ecx [ esp + 0x18 ]
push ebp
mov [ esp + 0x20 ] ebx
mov [ esp + 0x24 ] ebx
mov [ esp + 0x28 ] ebx
call sub_4083b0
test al al
je r-xdata
mov esi [ esp + 0x3c ]
mov eax [ r--data ]
mov edi eax
mov [ esp + 0x2c ] ebx
mov ecx [ esi + 0x8 ]
cmp ecx edi
jae r-xdata
mov edi [ esp + 0x18 ]
mov ecx ebp
mov edx ecx
push ebp
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ esp + 0x18 ]
call sub_408310
sub eax [ esp + 0x1c ]
cmp eax edi
ja r-xdata
mov edi ecx
cmp edi ebx
jbe r-xdata
call sub_40d36b
mov esi [ esp + 0x34 ]
mov cl [ esp + 0x14 ]
lea eax [ esp + 0x14 ]
mov [ esi ] cl
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
mov edx [ r--data ]
mov ecx esi
push edx
push ebx
push eax
call sub_408080
mov eax [ esp + 0x18 ]
cmp eax ebx
je r-xdata
mov eax [ esp + 0x1c ]
push ebx
lea ecx [ esp + 0x18 ]
lea ebp [ eax + edi ]
push ebp
call sub_4083b0
test al al
je r-xdata
mov ecx [ esp + 0x24 ]
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x20
retn
lea ecx [ eax - 0x1 ]
mov al [ eax - 0x1 ]
cmp al bl
je r-xdata
mov esi [ esi + 0x4 ]
cmp esi ebx
jne r-xdata
push ecx
call sub_40d360
add esp 0x4
cmp al 0xff
je r-xdata
mov edx [ esp + 0x18 ]
mov eax [ esp + 0x1c ]
mov ecx edi
lea edi [ eax + edx ]
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov eax [ esp + 0x18 ]
mov [ esp + 0x1c ] ebp
mov [ eax + ebp ] bl
mov esi r--data
dec al
mov [ ecx ] al
jmp r-xdata
sub_409750
push ecx
mov edx [ esp + 0x8 ]
mov eax [ esp + 0xc ]
cmp edx eax
je r-xdata
mov eax [ esp + 0x10 ]
pop ecx
retn
push ebx
push ebp
push esi
mov esi [ esp + 0x1c ]
push edi
lea edi [ edx + 0x14 ]
mov [ esp + 0x10 ] edi
lea ebp [ esi + 0x18 ]
cmp esi edx
jne r-xdata
mov ebx eax
xor edx edx
cmp ebx edx
jbe r-xdata
push eax
push ebx
mov ecx esi
call sub_407c20
push 0x0
push 0x0
mov ecx esi
call sub_407c20
jmp r-xdata
push 0x1
push ebx
mov ecx esi
call sub_4083b0
test al al
je r-xdata
cmp ebx ecx
jne r-xdata
mov ecx [ edi + 0x4 ]
mov eax [ r--data ]
mov ebx ecx
cmp eax ebx
jae r-xdata
mov esi [ edi - 0x10 ]
test esi esi
jne r-xdata
mov eax [ edi - 0x10 ]
cmp eax edx
jne r-xdata
lea edx [ ebp - 0x8 ]
lea esi [ edi - 0x4 ]
cmp edx esi
jne r-xdata
mov ebx eax
mov edi [ ebp - 0x14 ]
mov ecx ebx
mov eax ecx
push ebx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov ecx [ esp + 0x24 ]
call sub_408310
mov edi [ esp + 0x10 ]
mov esi r--data
cmp [ eax - 0x1 ] 0xfe
jae r-xdata
mov eax r--data
test ebx ebx
jbe r-xdata
mov esi eax
mov eax [ ebp ]
cmp eax ebx
jae r-xdata
mov eax [ ebp - 0x14 ]
cmp eax edx
je r-xdata
push 0x1
lea ecx [ ebp - 0x8 ]
push ebx
call sub_4083b0
test al al
je r-xdata
cmp ebx ecx
jne r-xdata
lea ecx [ ebp - 0x8 ]
call sub_4084d0
mov eax [ ebp ]
sub eax ebx
cmp eax esi
jae r-xdata
call sub_40d597
mov [ ebp - 0x14 ] edx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] edx
mov eax [ edi - 0x10 ]
cmp eax edx
jne r-xdata
lea ecx [ eax - 0x1 ]
mov al [ eax - 0x1 ]
test al al
je r-xdata
mov edx [ esp + 0x18 ]
mov esi [ esp + 0x20 ]
mov eax [ esp + 0x1c ]
add edx 0x20
add esi 0x20
add ebp 0x20
add edi 0x20
cmp edx eax
mov [ esp + 0x20 ] esi
mov [ esp + 0x18 ] edx
mov [ esp + 0x10 ] edi
jne r-xdata
mov edi [ edi ]
mov esi r--data
test edi edi
je r-xdata
mov eax [ edi ]
test eax eax
jne r-xdata
test esi esi
jbe r-xdata
mov esi eax
mov [ ebp - 0x14 ] eax
mov ecx [ edi - 0xc ]
mov [ ebp - 0x10 ] ecx
mov edx [ edi - 0x8 ]
mov [ ebp - 0xc ] edx
mov cl [ eax - 0x1 ]
inc cl
mov [ eax - 0x1 ] cl
jmp r-xdata
mov eax r--data
push ecx
call sub_40d360
add esp 0x4
xor edx edx
cmp al 0xff
je r-xdata
mov ecx [ edi - 0xc ]
mov eax [ r--data ]
mov ebx ecx
cmp eax ebx
jae r-xdata
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
mov edi [ ebp - 0x4 ]
mov ecx ebx
mov eax ecx
push ebx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ ebp - 0x8 ]
call sub_408310
mov edi [ esp + 0x10 ]
mov esi edi
cmp [ eax - 0x1 ] 0xfe
jae r-xdata
mov eax r--data
push 0x0
push 0x0
lea ecx [ ebp - 0x8 ]
call sub_407c20
jmp r-xdata
mov ecx [ ebp - 0x4 ]
sub eax esi
add ebx ecx
push eax
lea edx [ ebx + esi ]
push edx
push ebx
call sub_40db20
mov edi [ ebp ]
add esp 0xc
sub edi esi
lea ecx [ ebp - 0x8 ]
push 0x0
push edi
call sub_4083b0
test al al
je r-xdata
dec al
mov [ ecx ] al
jmp r-xdata
push 0x1
lea ecx [ ebp - 0x8 ]
call sub_4085a0
mov eax [ edi ]
test eax eax
jne r-xdata
mov edi [ esp + 0x10 ]
push edi
lea ecx [ ebp - 0x8 ]
call sub_408310
mov [ ebp - 0x4 ] eax
mov ecx [ edi + 0x4 ]
mov [ ebp ] ecx
mov edx [ edi + 0x8 ]
mov [ ebp + 0x4 ] edx
mov cl [ eax - 0x1 ]
inc cl
mov [ eax - 0x1 ] cl
jmp r-xdata
mov eax r--data
sub_409990
mov eax [ esp + 0x8 ]
push edi
mov edi [ esp + 0x8 ]
cmp edi eax
je r-xdata
mov eax [ esp + 0x10 ]
pop edi
retn
push ebx
push ebp
mov ebp [ esp + 0x18 ]
push esi
cmp ebp edi
jne r-xdata
mov ebx esi
xor esi esi
cmp ebx esi
jbe r-xdata
cmp [ ebp + 0x8 ] ebx
jae r-xdata
push 0x1
push ebx
mov ecx ebp
call sub_4083b0
test al al
je r-xdata
cmp ebx eax
jne r-xdata
mov ecx ebp
call sub_4084d0
mov eax [ ebp + 0x8 ]
sub eax ebx
cmp eax esi
jae r-xdata
call sub_40d597
mov eax [ esp + 0x18 ]
add edi 0x10
add ebp 0x10
cmp edi eax
mov [ esp + 0x14 ] edi
jne r-xdata
mov esi [ edi + 0x4 ]
test esi esi
jne r-xdata
mov eax [ edi + 0x4 ]
cmp eax esi
jne r-xdata
test esi esi
jbe r-xdata
mov esi eax
mov eax [ edi + 0x8 ]
mov esi [ r--data ]
mov ebx eax
cmp esi ebx
jae r-xdata
mov eax ebp
pop esi
pop ebp
pop ebx
pop edi
retn
mov edi [ ebp + 0x4 ]
mov ecx ebx
mov eax ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov ecx [ ebp + 0x4 ]
mov edi [ esp + 0x14 ]
mov [ ebp + 0x8 ] ebx
mov [ ecx + ebx ] 0x0
mov esi r--data
cmp [ eax - 0x1 ] 0xfe
jae r-xdata
mov eax r--data
mov ecx ebp
call sub_4084d0
jmp r-xdata
mov ecx [ ebp + 0x4 ]
sub eax esi
add ebx ecx
push eax
lea edx [ ebx + esi ]
push edx
push ebx
call sub_40db20
mov ebx [ ebp + 0x8 ]
add esp 0xc
sub ebx esi
mov ecx ebp
push 0x0
push ebx
call sub_4083b0
test al al
je r-xdata
mov eax [ ebp + 0x4 ]
cmp eax esi
je r-xdata
push ebx
mov ecx ebp
call sub_408310
mov [ ebp + 0x4 ] esi
mov [ ebp + 0x8 ] esi
mov [ ebp + 0xc ] esi
mov eax [ edi + 0x4 ]
cmp eax esi
jne r-xdata
lea ecx [ eax - 0x1 ]
mov al [ eax - 0x1 ]
test al al
je r-xdata
mov [ ebp + 0x4 ] eax
mov ecx [ edi + 0x8 ]
mov [ ebp + 0x8 ] ecx
mov edx [ edi + 0xc ]
mov [ ebp + 0xc ] edx
mov cl [ eax - 0x1 ]
inc cl
mov [ eax - 0x1 ] cl
jmp r-xdata
mov eax r--data
push ecx
call sub_40d360
add esp 0x4
cmp al 0xff
je r-xdata
dec al
mov [ ecx ] al
jmp r-xdata
sub_409af0
push 0xffffffff
push sub_418609
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push ebx
push ebp
push esi
mov esi [ esp + 0x20 ]
push edi
mov [ esp + 0x10 ] esi
xor ebp ebp
cmp esi ebp
mov [ esp + 0x1c ] ebp
je r-xdata
mov ecx [ esp + 0x14 ]
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
mov edi [ esp + 0x28 ]
mov al [ edi ]
mov [ esi + 0x4 ] ebp
mov [ esi ] al
mov [ esi + 0x8 ] ebp
mov [ esi + 0xc ] ebp
mov ecx [ r--data ]
push ecx
push ebp
push edi
mov ecx esi
call sub_408080
mov dl [ edi + 0x10 ]
add edi 0x10
lea ebx [ esi + 0x10 ]
mov [ esp + 0x1c ] 0x1
mov [ ebx ] dl
mov [ ebx + 0x4 ] ebp
mov [ ebx + 0x8 ] ebp
mov [ ebx + 0xc ] ebp
mov eax [ edi + 0x8 ]
mov ecx [ r--data ]
mov ebp eax
cmp ecx ebp
jae r-xdata
cmp ebx edi
jne r-xdata
mov ebp ecx
xor esi esi
cmp ebp esi
jbe r-xdata
push ecx
push ebp
mov ecx ebx
call sub_407c20
push 0x0
push 0x0
mov ecx ebx
call sub_407c20
pop edi
pop esi
pop ebp
pop ebx
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
push 0x1
push ebp
mov ecx ebx
call sub_4083b0
test al al
je r-xdata
cmp ebp eax
jne r-xdata
mov edi [ edi + 0x4 ]
cmp edi esi
mov esi r--data
je r-xdata
mov eax [ edi + 0x4 ]
cmp eax esi
jne r-xdata
mov edi [ ebx + 0x4 ]
mov ecx ebp
mov eax ecx
push ebp
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov ecx ebx
call sub_408310
mov esi edi
cmp [ eax - 0x1 ] 0xfe
jae r-xdata
mov eax r--data
mov [ ebx + 0x4 ] esi
mov [ ebx + 0x8 ] esi
mov [ ebx + 0xc ] esi
mov eax [ edi + 0x4 ]
cmp eax esi
jne r-xdata
mov [ ebx + 0x4 ] eax
mov ecx [ edi + 0x8 ]
mov [ ebx + 0x8 ] ecx
mov edx [ edi + 0xc ]
mov [ ebx + 0xc ] edx
mov cl [ eax - 0x1 ]
pop edi
inc cl
pop esi
pop ebp
mov [ eax - 0x1 ] cl
pop ebx
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
mov eax r--data
sub_409c50
push 0xffffffff
push sub_418631
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push ebx
push ebp
mov ebp [ esp + 0x1c ]
push esi
push edi
mov [ esp + 0x10 ] ebp
xor edi edi
cmp ebp edi
mov [ esp + 0x1c ] edi
je r-xdata
mov ecx [ esp + 0x14 ]
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
mov esi [ esp + 0x28 ]
mov al [ esi ]
mov [ ebp + 0x4 ] edi
mov [ ebp ] al
mov [ ebp + 0x8 ] edi
mov [ ebp + 0xc ] edi
mov ecx [ esi + 0x8 ]
mov eax [ r--data ]
mov ebx ecx
cmp eax ebx
jae r-xdata
cmp ebp esi
jne r-xdata
mov ebx eax
cmp ebx edi
jbe r-xdata
cmp ebx edi
mov esi eax
jbe r-xdata
push 0x1
push ebx
mov ecx ebp
call sub_4083b0
test al al
je r-xdata
cmp ebx ecx
jne r-xdata
mov ecx ebp
call sub_4084d0
mov eax [ ebp + 0x8 ]
sub eax ebx
cmp eax esi
jae r-xdata
call sub_40d597
mov esi [ esi + 0x4 ]
cmp esi edi
jne r-xdata
mov eax [ esi + 0x4 ]
cmp eax edi
jne r-xdata
cmp esi edi
jbe r-xdata
mov esi eax
mov edi [ ebp + 0x4 ]
mov ecx ebx
mov eax ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov ecx [ ebp + 0x4 ]
mov [ ebp + 0x8 ] ebx
mov [ ecx + ebx ] 0x0
mov esi r--data
cmp [ eax - 0x1 ] 0xfe
jae r-xdata
mov eax r--data
mov ecx ebp
call sub_4084d0
pop edi
pop esi
pop ebp
pop ebx
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
mov ecx [ ebp + 0x4 ]
sub eax esi
add ebx ecx
push eax
lea edx [ ebx + esi ]
push edx
push ebx
call sub_40db20
mov ebx [ ebp + 0x8 ]
add esp 0xc
sub ebx esi
mov ecx ebp
push edi
push ebx
call sub_4083b0
test al al
je r-xdata
push 0x1
mov ecx ebp
call sub_4085a0
mov eax [ esi + 0x4 ]
cmp eax edi
jne r-xdata
push ebx
mov ecx ebp
call sub_408310
mov [ ebp + 0x4 ] eax
mov ecx [ esi + 0x8 ]
mov [ ebp + 0x8 ] ecx
mov edx [ esi + 0xc ]
mov [ ebp + 0xc ] edx
mov cl [ eax - 0x1 ]
pop edi
inc cl
pop esi
pop ebp
mov [ eax - 0x1 ] cl
pop ebx
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
mov eax r--data
sub_409dc0
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov al [ esp + 0x8 ]
mov [ esi + 0x4 ] 0x0
test al 0x1
mov [ esi + 0x8 ] 0x0
mov [ esi + 0xc ] 0x0
je r-xdata
lea ecx [ eax - 0x1 ]
mov al [ eax - 0x1 ]
test al al
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_40d360
add esp 0x4
push ecx
call sub_40d360
add esp 0x4
cmp al 0xff
je r-xdata
dec al
mov [ ecx ] al
jmp r-xdata
sub_409e20
mov eax [ esp + 0x4 ]
push ebx
push esi
mov esi ecx
mov ebx [ eax + 0x8 ]
mov eax [ eax + 0x4 ]
test eax eax
jne r-xdata
mov edx [ esi + 0x8 ]
cmp edx ebx
mov ecx edx
jb r-xdata
mov eax r--data
mov esi [ esi + 0x4 ]
push edi
mov edi eax
xor eax eax
[ esi ] [ edi ]
pop edi
je r-xdata
mov ecx ebx
test eax eax
jne r-xdata
sbb eax eax
sbb eax 0xffffffff
pop esi
pop ebx
retn 0x4
cmp edx ebx
jae r-xdata
xor eax eax
cmp edx ebx
setne al
pop esi
or eax 0xffffffff
pop ebx
retn 0x4
sub_409e70
push ebx
push ebp
mov ebp [ esp + 0xc ]
push esi
mov esi ecx
push edi
mov edi ebp
or ecx 0xffffffff
xor eax eax
mov edx [ esi + 0x8 ]
[ edi ]
not ecx
dec ecx
mov ebx ecx
mov ecx edx
cmp edx ebx
jb r-xdata
mov esi [ esi + 0x4 ]
mov edi ebp
xor eax eax
[ esi ] [ edi ]
je r-xdata
mov ecx ebx
test eax eax
jne r-xdata
sbb eax eax
sbb eax 0xffffffff
pop edi
pop esi
pop ebp
pop ebx
retn 0x4
cmp edx ebx
jae r-xdata
xor eax eax
cmp edx ebx
setne al
pop edi
pop esi
pop ebp
or eax 0xffffffff
pop ebx
retn 0x4
sub_409ed0
push ebx
push esi
mov esi ecx
push edi
mov edi [ esp + 0x10 ]
cmp [ esi + 0x8 ] edi
jae r-xdata
mov eax [ esi + 0x8 ]
mov edx [ esp + 0x14 ]
sub eax edi
cmp eax edx
jae r-xdata
call sub_40d597
mov ebx [ esp + 0x1c ]
mov ecx edx
cmp edx ebx
jb r-xdata
mov edx eax
mov eax [ esi + 0x4 ]
test eax eax
jne r-xdata
mov ecx ebx
lea esi [ eax + edi ]
xor esi esi
jmp r-xdata
test eax eax
jne r-xdata
sbb eax eax
sbb eax 0xffffffff
mov edi [ esp + 0x18 ]
xor eax eax
[ esi ] [ edi ]
je r-xdata
pop edi
pop esi
pop ebx
retn 0x10
cmp edx ebx
jae r-xdata
xor eax eax
cmp edx ebx
setne al
pop edi
pop esi
or eax 0xffffffff
pop ebx
retn 0x10
sub_409f70
push ebx
push ebp
push esi
mov esi ecx
push edi
mov edi [ esp + 0x14 ]
cmp [ esi + 0x8 ] edi
jae r-xdata
mov eax [ esi + 0x8 ]
mov ebx [ esp + 0x18 ]
sub eax edi
cmp eax ebx
jae r-xdata
call sub_40d597
mov ebp [ esp + 0x20 ]
mov edx ebx
cmp ebx ebp
jb r-xdata
mov ebx eax
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov edx ebp
mov ecx [ esp + 0x1c ]
test edx edx
jbe r-xdata
lea eax [ eax + edi * 2 ]
cmp ebx ebp
jae r-xdata
mov si [ eax ]
cmp si [ ecx ]
jne r-xdata
xor eax eax
cmp ebx ebp
setne al
pop edi
pop esi
pop ebp
or eax 0xffffffff
pop ebx
retn 0x10
mov ax [ eax ]
cmp ax [ ecx ]
sbb eax eax
and al 0xfe
inc eax
test eax eax
jne r-xdata
add eax 0x2
add ecx 0x2
dec edx
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn 0x10
jmp r-xdata
sub_409ff0
push 0xffffffff
push sub_41864b
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x3f0
lea eax [ esp + 0x1f0 ]
push 0x104
push eax
push 0x0
call [ GetModuleFileNameA@IAT ]
lea ecx [ esp + 0xec ]
push 0x104
lea edx [ esp + 0x1f4 ]
push ecx
push edx
call [ GetShortPathNameA@IAT ]
lea eax [ esp + 0xec ]
push eax
push rw-data
push rw-data
push 0x80000001
call sub_40a0b0
add esp 0x10
lea ecx [ esp ]
call sub_401000
lea ecx [ esp ]
mov [ esp + 0x3f8 ] 0x0
call sub_402790
lea ecx [ esp ]
mov [ esp + 0x3f8 ] 0xffffffff
call sub_401390
mov ecx [ esp + 0x3f0 ]
xor eax eax
mov [ fs : 0x0 ] ecx
add esp 0x3fc
retn
sub_40a0f0
push 0xffffffff
push sub_41871d
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov al [ esp + 0x14 ]
push ebx
push ebp
push esi
mov esi ecx
push edi
push 0x0
mov [ esp + 0x14 ] esi
lea ebp [ esi + 0xc ]
mov ecx ebp
mov [ ebp ] al
call sub_4085f0
mov dl [ esp + 0x24 ]
lea ecx [ esi + 0x1c ]
push 0x0
mov [ esp + 0x20 ] 0x0
mov [ ecx ] dl
call sub_4085f0
mov al [ esp + 0x24 ]
lea ebx [ esi + 0x2c ]
push 0x0
mov ecx ebx
mov [ esp + 0x20 ] 0x1
mov [ ebx ] al
call sub_4085f0
mov cl [ esp + 0x24 ]
lea edi [ esi + 0x3c ]
push 0x0
mov [ esp + 0x20 ] 0x2
mov [ edi ] cl
mov ecx edi
call sub_4085f0
mov dl [ esp + 0x24 ]
lea ecx [ esi + 0x58 ]
push 0x0
mov [ esp + 0x20 ] 0x3
mov [ ecx ] dl
call sub_4085f0
mov al [ esp + 0x24 ]
lea ecx [ esi + 0x68 ]
push 0x0
mov [ esp + 0x20 ] 0x4
mov [ ecx ] al
call sub_4085f0
mov dl [ esp + 0x24 ]
lea ecx [ esi + 0x78 ]
push 0x0
mov [ esp + 0x20 ] 0x5
mov [ ecx ] dl
call sub_4085f0
mov al [ esp + 0x24 ]
lea ecx [ esi + 0x88 ]
push 0x0
mov [ esp + 0x20 ] 0x6
mov [ ecx ] al
call sub_4085f0
mov dl [ esp + 0x24 ]
lea ecx [ esi + 0x98 ]
push 0x0
mov [ esp + 0x20 ] 0x7
mov [ ecx ] dl
call sub_4085f0
mov al [ esp + 0x24 ]
lea ecx [ esi + 0xb4 ]
push 0x0
mov [ esp + 0x20 ] 0x8
mov [ ecx ] al
call sub_4085f0
mov dl [ esp + 0x24 ]
mov [ esp + 0x1c ] 0x9
lea ecx [ esi + 0xc4 ]
push 0x0
mov [ ecx ] dl
call sub_4085f0
mov al [ esp + 0x24 ]
lea ecx [ esi + 0xe0 ]
push 0x0
mov [ esp + 0x20 ] 0xa
mov [ ecx ] al
call sub_4085f0
mov dl [ esp + 0x24 ]
lea ecx [ esi + 0xf0 ]
push 0x0
mov [ esp + 0x20 ] 0xb
mov [ ecx ] dl
call sub_4085f0
mov al [ esp + 0x24 ]
lea ecx [ esi + 0x104 ]
push 0x0
mov [ esp + 0x20 ] 0xc
mov [ ecx ] al
call sub_4085f0
mov dl [ esp + 0x24 ]
lea ecx [ esi + 0x114 ]
push 0x0
mov [ esp + 0x20 ] 0xd
mov [ ecx ] dl
call sub_4085f0
mov ecx [ esp + 0x24 ]
mov [ esi ] r--data
mov eax [ r--data ]
mov [ esp + 0x1c ] 0xe
push eax
push 0x0
push ecx
mov ecx ebp
call sub_40cf00
mov edx [ esp + 0x28 ]
push rw-data
mov [ esi + 0xd8 ] edx
call sub_40db02
add esp 0x4
mov ecx ebx
push eax
push rw-data
call sub_408ac0
push rw-data
call sub_40db02
add esp 0x4
mov ebx eax
mov ecx edi
push 0x1
push ebx
call sub_409160
test al al
je r-xdata
xor eax eax
mov [ esi + 0x4c ] eax
mov [ esi + 0x50 ] eax
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] eax
mov eax [ rw-data ]
push eax
mov ebp eax
call sub_40db02
add esp 0x4
mov edi eax
lea ebx [ esi + 0x1c ]
push 0x1
push edi
mov ecx ebx
call sub_409160
test al al
je r-xdata
mov eax [ edi + 0x4 ]
push ebx
push rw-data
push eax
call sub_402760
add esp 0xc
mov ecx edi
push ebx
call sub_409140
push rw-data
mov [ esi + 0x54 ] 0x0
call sub_40db02
add esp 0x4
mov edi eax
lea ebx [ esi + 0x58 ]
push 0x1
push edi
mov ecx ebx
call sub_409160
test al al
je r-xdata
mov ecx [ ebx + 0x4 ]
push edi
push ebp
push ecx
call sub_402760
add esp 0xc
mov ecx ebx
push edi
call sub_409140
push rw-data
call sub_40db02
add esp 0x4
mov ebx eax
lea edi [ esi + 0x68 ]
push 0x1
push ebx
mov ecx edi
call sub_409160
test al al
je r-xdata
mov edx [ ebx + 0x4 ]
push edi
push rw-data
push edx
call sub_402760
add esp 0xc
mov ecx ebx
push edi
call sub_409140
push rw-data
call sub_40db02
add esp 0x4
mov ebx eax
lea edi [ esi + 0x78 ]
push 0x1
push ebx
mov ecx edi
call sub_409160
test al al
je r-xdata
mov eax [ edi + 0x4 ]
push ebx
push rw-data
push eax
call sub_402760
add esp 0xc
mov ecx edi
push ebx
call sub_409140
push rw-data
call sub_40db02
add esp 0x4
mov ebx eax
lea edi [ esi + 0x88 ]
push 0x1
push ebx
mov ecx edi
call sub_409160
test al al
je r-xdata
mov ecx [ edi + 0x4 ]
push ebx
push rw-data
push ecx
call sub_402760
add esp 0xc
mov ecx edi
push ebx
call sub_409140
push rw-data
call sub_40db02
add esp 0x4
mov ebx eax
lea edi [ esi + 0x98 ]
push 0x1
push ebx
mov ecx edi
call sub_409160
test al al
je r-xdata
mov edx [ edi + 0x4 ]
push ebx
push rw-data
push edx
call sub_402760
add esp 0xc
mov ecx edi
push ebx
call sub_409140
xor ebp ebp
push rw-data
mov [ esi + 0xa8 ] 0x0
mov [ esi + 0xac ] ebp
mov [ esi + 0xb0 ] ebp
call sub_40db02
add esp 0x4
mov edi eax
lea ebx [ esi + 0xb4 ]
push 0x1
push edi
mov ecx ebx
call sub_409160
test al al
je r-xdata
mov eax [ edi + 0x4 ]
push ebx
push rw-data
push eax
call sub_402760
add esp 0xc
mov ecx edi
push ebx
call sub_409140
push rw-data
call sub_40db02
add esp 0x4
mov ebx eax
lea edi [ esi + 0xc4 ]
push 0x1
push ebx
mov ecx edi
call sub_409160
test al al
je r-xdata
mov ecx [ ebx + 0x4 ]
push edi
push rw-data
push ecx
call sub_402760
add esp 0xc
mov ecx ebx
push edi
call sub_409140
push rw-data
mov [ esi + 0xd4 ] ebp
mov [ esi + 0xdc ] ebp
call sub_40db02
add esp 0x4
mov edi eax
lea ebx [ esi + 0xe0 ]
push 0x1
push edi
mov ecx ebx
call sub_409160
test al al
je r-xdata
mov edx [ edi + 0x4 ]
push ebx
push rw-data
push edx
call sub_402760
add esp 0xc
mov ecx edi
push ebx
call sub_409140
push rw-data
call sub_40db02
add esp 0x4
mov ebx eax
lea edi [ esi + 0xf0 ]
push 0x1
push ebx
mov ecx edi
call sub_409160
test al al
je r-xdata
mov eax [ ebx + 0x4 ]
push edi
push rw-data
push eax
call sub_402760
add esp 0xc
mov ecx ebx
push edi
call sub_409140
push rw-data
mov [ esi + 0x100 ] ebp
call sub_40db02
add esp 0x4
mov edi eax
lea ebx [ esi + 0x104 ]
push 0x1
push edi
mov ecx ebx
call sub_409160
test al al
je r-xdata
mov ecx [ edi + 0x4 ]
push ebx
push rw-data
push ecx
call sub_402760
add esp 0xc
mov ecx edi
push ebx
call sub_409140
push rw-data
call sub_40db02
add esp 0x4
mov ebx eax
lea edi [ esi + 0x114 ]
push 0x1
push ebx
mov ecx edi
call sub_409160
test al al
je r-xdata
mov edx [ ebx + 0x4 ]
push edi
push rw-data
push edx
call sub_402760
add esp 0xc
mov ecx ebx
push edi
call sub_409140
mov ecx [ esp + 0x14 ]
mov eax 0x7530
mov [ esi + 0x130 ] eax
mov [ esi + 0x134 ] eax
mov [ esi + 0x124 ] 0x0
mov [ esi + 0x128 ] ebp
mov [ esi + 0x12c ] 0xea60
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x10
retn 0x8
mov eax [ edi + 0x4 ]
push ebx
push rw-data
push eax
call sub_402760
add esp 0xc
mov ecx edi
push ebx
call sub_409140
sub_40a650
push 0xffffffff
push sub_4187ed
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push ebx
push esi
mov esi ecx
mov [ esp + 0x8 ] esi
mov [ esi ] r--data
mov eax [ esi + 0x4 ]
xor ebx ebx
cmp eax ebx
mov [ esp + 0x14 ] 0xe
je r-xdata
mov eax [ esi + 0xac ]
cmp eax ebx
je r-xdata
push eax
call sub_40c410
mov eax [ esi + 0xd4 ]
cmp eax ebx
je r-xdata
push eax
call sub_40d360
add esp 0x4
push 0x1
lea ecx [ esi + 0x114 ]
mov [ esp + 0x18 ] 0xd
call sub_4085f0
push 0x1
lea ecx [ esi + 0x104 ]
mov [ esp + 0x18 ] 0xc
call sub_4085f0
push 0x1
lea ecx [ esi + 0xf0 ]
mov [ esp + 0x18 ] 0xb
call sub_4085f0
push 0x1
lea ecx [ esi + 0xe0 ]
mov [ esp + 0x18 ] 0xa
call sub_4085f0
push 0x1
lea ecx [ esi + 0xc4 ]
mov [ esp + 0x18 ] 0x9
call sub_4085f0
push 0x1
lea ecx [ esi + 0xb4 ]
mov [ esp + 0x18 ] 0x8
call sub_4085f0
push 0x1
lea ecx [ esi + 0x98 ]
mov [ esp + 0x18 ] 0x7
call sub_4085f0
push 0x1
lea ecx [ esi + 0x88 ]
mov [ esp + 0x18 ] 0x6
call sub_4085f0
push 0x1
lea ecx [ esi + 0x78 ]
mov [ esp + 0x18 ] 0x5
call sub_4085f0
mov eax [ esi + 0x6c ]
cmp eax ebx
je r-xdata
push eax
call sub_40d360
add esp 0x4
mov [ esi + 0x6c ] ebx
mov [ esi + 0x70 ] ebx
mov [ esi + 0x74 ] ebx
mov ecx [ esi + 0x5c ]
cmp ecx ebx
je r-xdata
mov cl [ eax - 0x1 ]
cmp cl bl
je r-xdata
mov [ esi + 0x5c ] ebx
mov [ esi + 0x60 ] ebx
mov [ esi + 0x64 ] ebx
mov ecx [ esi + 0x40 ]
cmp ecx ebx
je r-xdata
mov al [ ecx - 0x1 ]
cmp al bl
je r-xdata
add eax 0xfffffffe
push eax
call sub_40d360
add esp 0x4
cmp cl 0xff
je r-xdata
mov [ esi + 0x40 ] ebx
mov [ esi + 0x44 ] ebx
mov [ esi + 0x48 ] ebx
mov ecx [ esi + 0x30 ]
cmp ecx ebx
je r-xdata
mov al [ ecx - 0x1 ]
cmp al bl
je r-xdata
add ecx 0xfffffffe
push ecx
call sub_40d360
add esp 0x4
cmp al 0xff
je r-xdata
dec cl
mov [ eax - 0x1 ] cl
jmp r-xdata
mov [ esi + 0x30 ] ebx
mov [ esi + 0x34 ] ebx
mov [ esi + 0x38 ] ebx
mov ecx [ esi + 0x20 ]
cmp ecx ebx
je r-xdata
mov al [ ecx - 0x1 ]
cmp al bl
je r-xdata
add ecx 0xfffffffe
push ecx
call sub_40d360
add esp 0x4
cmp al 0xff
je r-xdata
dec al
mov [ ecx - 0x1 ] al
jmp r-xdata
mov [ esi + 0x20 ] ebx
mov [ esi + 0x24 ] ebx
mov [ esi + 0x28 ] ebx
mov ecx [ esi + 0x10 ]
cmp ecx ebx
je r-xdata
mov al [ ecx - 0x1 ]
cmp al bl
je r-xdata
add ecx 0xfffffffe
push ecx
call sub_40d360
add esp 0x4
cmp al 0xff
je r-xdata
dec al
mov [ ecx - 0x1 ] al
jmp r-xdata
mov ecx [ esp + 0xc ]
mov [ esi + 0x10 ] ebx
mov [ esi + 0x14 ] ebx
mov [ esi + 0x18 ] ebx
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
mov al [ ecx - 0x1 ]
cmp al bl
je r-xdata
add ecx 0xfffffffe
push ecx
call sub_40d360
add esp 0x4
cmp al 0xff
je r-xdata
dec al
mov [ ecx - 0x1 ] al
jmp r-xdata
add ecx 0xfffffffe
push ecx
call sub_40d360
add esp 0x4
cmp al 0xff
je r-xdata
dec al
mov [ ecx - 0x1 ] al
jmp r-xdata
dec al
mov [ ecx - 0x1 ] al
jmp r-xdata
sub_40a880
push 0xffffffff
push sub_418818
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x60
push ebx
push ebp
mov ebp ecx
push esi
push edi
xor edi edi
mov eax [ ebp + 0x14 ]
mov [ esp + 0x13 ] 0x1
cmp eax edi
ja r-xdata
mov al [ esp + 0x84 ]
mov esi [ esp + 0x80 ]
mov [ ebp + 0xa8 ] al
push edi
mov cl [ esi ]
mov [ esp + 0x34 ] cl
lea ecx [ esp + 0x34 ]
call sub_4085f0
mov edx [ r--data ]
lea ecx [ esp + 0x30 ]
push edx
push edi
push esi
call sub_40cf00
mov eax [ esp + 0x34 ]
mov [ esp + 0x78 ] edi
cmp eax edi
jne r-xdata
mov [ ebp + 0x8 ] 0x3
jmp r-xdata
push rw-data
push eax
call sub_40e7d9
add esp 0x8
test eax eax
jne r-xdata
mov eax r--data
xor al al
mov eax [ esp + 0x34 ]
cmp eax edi
jne r-xdata
push rw-data
call sub_40db02
add esp 0x4
mov esi eax
lea ecx [ esp + 0x30 ]
push 0x1
push esi
call sub_409160
test al al
je r-xdata
push rw-data
push eax
call sub_40e7d9
add esp 0x8
test eax eax
jne r-xdata
mov eax r--data
cmp [ ebp + 0x4 ] edi
jne r-xdata
mov eax [ esp + 0x34 ]
push esi
push rw-data
push eax
call sub_402760
mov ecx [ esp + 0x40 ]
mov [ esp + 0x44 ] esi
add esp 0xc
mov [ ecx + esi * 2 ] di
jmp r-xdata
mov [ ebp + 0x8 ] 0x57
push rw-data
call sub_40db02
add esp 0x4
mov esi eax
lea ecx [ esp + 0x30 ]
push 0x1
push esi
call sub_409160
test al al
je r-xdata
mov ecx [ ebp + 0x4 ]
push ecx
mov ecx ebp
call sub_40c430
mov dl [ ebp + 0xc ]
lea eax [ ebp + 0xc ]
sub esp 0x10
mov ecx esp
mov [ esp + 0x3c ] esp
mov [ ecx ] dl
mov [ ecx + 0x4 ] edi
mov [ ecx + 0x8 ] edi
mov [ ecx + 0xc ] edi
mov edx [ r--data ]
push edx
push edi
push eax
call sub_40cf00
mov ecx ebp
call sub_40c480
test al al
je r-xdata
mov eax [ ebp + 0x20 ]
cmp eax edi
jne r-xdata
mov al [ ecx - 0x1 ]
test al al
je r-xdata
mov edx [ esp + 0x34 ]
push esi
push rw-data
push edx
call sub_402760
mov eax [ esp + 0x40 ]
mov [ esp + 0x44 ] esi
add esp 0xc
mov [ eax + esi * 2 ] di
mov ecx [ esp + 0x34 ]
cmp ecx edi
je r-xdata
mov eax [ ebp + 0x30 ]
cmp eax edi
jne r-xdata
push eax
mov ecx ebp
call sub_40c3f0
cmp eax edi
mov [ ebp + 0x4 ] eax
jne r-xdata
mov eax r--data
add ecx 0xfffffffe
push ecx
call sub_40d360
add esp 0x4
cmp al 0xff
je r-xdata
mov al [ esp + 0x13 ]
jmp r-xdata
mov al [ ecx - 0x1 ]
test al al
je r-xdata
mov ecx [ ebp + 0x50 ]
mov edx [ ebp + 0x4 ]
push ecx
push eax
push edx
mov ecx ebp
call sub_40c670
mov ebx eax
cmp ebx edi
mov [ esp + 0x2c ] ebx
je r-xdata
mov eax r--data
call [ GetLastError@IAT ]
mov [ ebp + 0x8 ] eax
jmp r-xdata
dec al
mov [ ecx - 0x1 ] al
jmp r-xdata
mov ecx [ esp + 0x70 ]
pop edi
pop esi
pop ebp
mov [ fs : 0x0 ] ecx
pop ebx
add esp 0x6c
retn 0x8
add ecx 0xfffffffe
push ecx
call sub_40d360
add esp 0x4
cmp al 0xff
je r-xdata
mov eax [ ebp + 0x40 ]
mov ecx r--data
cmp eax edi
je r-xdata
mov ecx [ esp + 0x34 ]
cmp ecx edi
je r-xdata
dec al
mov [ ecx - 0x1 ] al
mov al [ esp + 0x13 ]
jmp r-xdata
mov eax [ esp + 0x80 ]
mov eax [ eax + 0x4 ]
cmp eax edi
jne r-xdata
mov ecx eax
mov edx [ ebp + 0x4c ]
push edx
push ecx
push eax
push ebx
mov ecx ebp
call sub_40c6a0
mov esi eax
cmp esi edi
mov [ esp + 0x14 ] esi
je r-xdata
mov eax r--data
push ebx
mov ecx ebp
call sub_40c410
mov al [ ebp + 0x54 ]
test al al
jne r-xdata
mov ebx [ GetLastError@IAT ]
mov [ esp + 0x20 ] edi
cmp [ ebp + 0x4c ] 0x4
jne r-xdata
mov [ esp + 0x13 ] 0x0
cmp [ ebp + 0x60 ] edi
jbe r-xdata
lea eax [ esp + 0x80 ]
push 0x4
push eax
push esi
mov ecx ebp
mov [ esp + 0x8c ] 0x3100
call sub_40c710
cmp [ ebp + 0x70 ] edi
jbe r-xdata
mov dl [ ebp + 0x58 ]
lea eax [ ebp + 0x58 ]
sub esp 0x10
mov ecx esp
mov [ esp + 0x90 ] esp
mov [ ecx ] dl
mov [ ecx + 0x4 ] edi
mov [ ecx + 0x8 ] edi
mov [ ecx + 0xc ] edi
mov edx [ r--data ]
push edx
push edi
push eax
call sub_40cf00
push esi
mov ecx ebp
call sub_40c730
cmp eax edi
jne r-xdata
cmp [ ebp + 0x80 ] edi
jbe r-xdata
push esi
mov ecx ebp
call sub_40c790
test eax eax
jne r-xdata
call ebx
mov [ ebp + 0x8 ] eax
mov al [ esp + 0x84 ]
test al al
je r-xdata
push esi
mov ecx ebp
call sub_40c7c0
test al al
jne r-xdata
call ebx
mov [ ebp + 0x8 ] eax
push esi
mov ecx ebp
call sub_40c950
test eax eax
jne r-xdata
push esi
mov ecx ebp
call sub_40c940
test eax eax
jne r-xdata
call ebx
mov [ ebp + 0x8 ] eax
mov eax [ ebp + 0xac ]
cmp eax edi
je r-xdata
push esi
mov ecx ebp
call sub_40c930
test al al
je r-xdata
call ebx
mov [ ebp + 0x8 ] eax
push esi
mov ecx ebp
call sub_40c990
test eax eax
je r-xdata
mov edx [ ebp + 0xb0 ]
lea ecx [ esp + 0x80 ]
push ecx
push edx
push eax
push esi
mov ecx ebp
mov [ esp + 0x90 ] edi
call sub_40c970
test eax eax
jne r-xdata
mov eax [ esp + 0x20 ]
mov ecx eax
inc eax
cmp ecx 0x3
mov [ esp + 0x20 ] eax
jae r-xdata
push esi
mov ecx ebp
call sub_40c950
test eax eax
je r-xdata
call ebx
mov [ ebp + 0x8 ] eax
jmp r-xdata
lea eax [ esp + 0x80 ]
mov ecx ebp
push eax
push edi
push 0x16
push esi
mov [ esp + 0x90 ] edi
call sub_40c9b0
cmp eax edi
jne r-xdata
call ebx
mov [ ebp + 0x8 ] eax
mov ecx [ esp + 0x80 ]
lea edx [ ecx + ecx ]
push edx
call sub_40daa2
mov ebx eax
add esp 0x4
cmp ebx edi
mov [ esp + 0x1c ] ebx
je r-xdata
call ebx
cmp eax 0x7a
jne r-xdata
mov ebx [ GetLastError@IAT ]
mov eax [ esp + 0x80 ]
mov edi ebx
lea ecx [ eax + eax ]
xor eax eax
mov edx ecx
shr ecx 0x2
[ edi ]
mov ecx edx
and ecx 0x3
[ edi ]
lea eax [ esp + 0x80 ]
mov ecx ebp
push eax
push ebx
push 0x16
push esi
call sub_40c9b0
test eax eax
je r-xdata
lea edx [ esp + 0x80 ]
mov ecx ebp
push edx
push edi
push 0x13
push esi
mov [ esp + 0x90 ] edi
call sub_40c9b0
cmp eax edi
jne r-xdata
mov eax [ esp + 0x80 ]
lea ecx [ eax + eax ]
push ecx
call sub_40daa2
mov esi eax
add esp 0x4
test esi esi
je r-xdata
call ebx
cmp eax 0x7a
jne r-xdata
push ebx
call sub_40d360
add esp 0x4
xor edi edi
mov ecx [ esp + 0x1c ]
lea ebx [ ebp + 0xb4 ]
push ecx
call sub_40db02
add esp 0x4
mov edi eax
mov ecx ebx
push 0x1
push edi
call sub_409160
test al al
je r-xdata
mov eax [ ebp + 0xd4 ]
xor ebx ebx
cmp eax ebx
mov [ esp + 0x1c ] 0x2800
je r-xdata
mov edx [ esp + 0x80 ]
xor eax eax
mov edi esi
lea ecx [ edx + edx ]
mov edx ecx
shr ecx 0x2
[ edi ]
mov ecx edx
and ecx 0x3
[ edi ]
mov ecx [ esp + 0x14 ]
lea eax [ esp + 0x80 ]
push eax
push esi
push 0x13
push ecx
mov ecx ebp
call sub_40c9b0
test eax eax
je r-xdata
lea eax [ esp + 0x60 ]
push ebx
push eax
mov ecx ebp
call sub_40cb50
lea ecx [ esp + 0x80 ]
xor edi edi
push ecx
push edi
push 0x19
push esi
mov ecx ebp
mov [ esp + 0x88 ] 0x1
mov [ esp + 0x90 ] edi
call sub_40c9b0
cmp eax edi
jne r-xdata
mov ecx [ ebx + 0x4 ]
mov eax [ esp + 0x1c ]
test edi edi
jbe r-xdata
push 0x2800
call sub_40daa2
mov edi eax
add esp 0x4
cmp edi ebx
mov [ ebp + 0xd4 ] edi
je r-xdata
push eax
call sub_40d360
add esp 0x4
mov [ ebp + 0xd4 ] ebx
push esi
call sub_40d360
add esp 0x4
push esi
lea edi [ ebp + 0xc4 ]
call sub_40db02
add esp 0x4
mov ecx edi
mov ebx eax
call sub_40d110
cmp eax ebx
jae r-xdata
mov edx [ esp + 0x80 ]
lea eax [ edx + edx ]
push eax
call sub_40daa2
add esp 0x4
lea ecx [ esp + 0x80 ]
mov ebx eax
push ecx
push ebx
push 0x19
push esi
mov ecx ebp
call sub_40c9b0
test eax eax
je r-xdata
call [ GetLastError@IAT ]
cmp eax 0x7a
jne r-xdata
mov edx [ ebx + 0x4 ]
mov esi [ esp + 0x14 ]
mov [ ebx + 0x8 ] edi
mov [ edx + edi * 2 ] 0x0
lea edi [ edx + edi * 2 ]
sub ecx eax
mov edx edi
xor al al
mov [ esp + 0x13 ] 0x0
test al al
jne r-xdata
mov ecx 0xa00
xor eax eax
[ edi ]
mov ecx [ edi + 0x4 ]
test ecx ecx
je r-xdata
call sub_40d36b
push ebx
call sub_40d360
mov esi [ esp + 0x18 ]
add esp 0x4
xor edi edi
push ebx
lea esi [ ebp + 0xe0 ]
call sub_40db02
add esp 0x4
mov edi eax
mov ecx esi
push 0x1
push edi
call sub_409160
test al al
je r-xdata
lea ecx [ esp + 0x80 ]
mov [ esp + 0x80 ] edi
push ecx
push edi
push 0x5
push esi
mov ecx ebp
call sub_40c9b0
cmp eax edi
jne r-xdata
mov si [ eax ]
mov [ ecx + eax ] si
add eax 0x2
dec edx
jne r-xdata
mov ecx [ esp + 0x14 ]
push ecx
mov ecx ebp
call sub_40c410
mov ebx [ esp + 0x2c ]
xor edi edi
call [ GetLastError@IAT ]
mov [ ebp + 0x8 ] eax
push ebx
mov ecx ebp
call sub_40bb00
mov edx [ esp + 0x80 ]
inc edx
push edx
call sub_40daa2
mov esi eax
add esp 0x4
test esi esi
mov [ esp + 0x24 ] esi
je r-xdata
test ebx ebx
jne r-xdata
mov al [ ecx - 0x1 ]
test al al
je r-xdata
mov edx [ esp + 0x80 ]
lea eax [ edx + edx ]
push eax
call sub_40daa2
add esp 0x4
lea ecx [ esp + 0x80 ]
mov ebx eax
push ecx
push ebx
push 0x5
push esi
mov ecx ebp
mov [ esp + 0x38 ] ebx
call sub_40c9b0
test eax eax
je r-xdata
call [ GetLastError@IAT ]
cmp eax 0x7a
jne r-xdata
mov ecx [ esi + 0x4 ]
mov eax ebx
test edi edi
jbe r-xdata
push ebx
mov ecx ebp
call sub_40bb00
mov [ ebp + 0xdc ] ebx
mov eax [ ebp + 0xe4 ]
xor esi esi
mov [ esp + 0x18 ] 0x1
test eax eax
jne r-xdata
jmp r-xdata
mov eax [ esp + 0x80 ]
test eax eax
jbe r-xdata
mov eax [ esp + 0x80 ]
mov edi esi
mov [ esp + 0x18 ] 0x0
lea ecx [ eax + 0x1 ]
xor eax eax
mov edx ecx
shr ecx 0x2
[ edi ]
mov ecx edx
mov edx [ esp + 0x14 ]
and ecx 0x3
[ edi ]
mov ecx [ esp + 0x80 ]
lea eax [ esp + 0x18 ]
push eax
push ecx
push esi
push edx
mov ecx ebp
call sub_40c9f0
test eax eax
je r-xdata
mov eax [ edi + 0xc ]
cmp eax 0x1f
ja r-xdata
push 0x1
mov ecx edi
call sub_4085f0
jmp r-xdata
cmp al 0xff
je r-xdata
push ebx
call sub_40d360
add esp 0x4
mov dl [ esp + 0x84 ]
xor eax eax
mov [ esp + 0x40 ] dl
mov [ esp + 0x44 ] eax
mov [ esp + 0x48 ] eax
mov [ esp + 0x4c ] eax
push ebx
mov [ esp + 0x7c ] 0x2
call sub_40db02
add esp 0x4
mov edi eax
lea ecx [ esp + 0x40 ]
push 0x1
push edi
call sub_409160
test al al
je r-xdata
lea ecx [ esp + 0x80 ]
mov [ esp + 0x80 ] edi
push ecx
push edi
push 0x21
push esi
mov ecx ebp
call sub_40c9b0
cmp eax edi
jne r-xdata
mov eax [ esi + 0x4 ]
mov [ esi + 0x8 ] edi
mov [ eax + edi * 2 ] 0x0
lea edi [ eax + edi * 2 ]
sub ecx ebx
mov [ esp + 0x18 ] edi
push 0x5
push rw-data
push eax
call sub_40e743
add esp 0xc
test eax eax
jne r-xdata
mov eax r--data
mov ecx [ esp + 0x14 ]
lea eax [ esp + 0x80 ]
push eax
push ecx
mov ecx ebp
mov [ esp + 0x88 ] 0x0
call sub_40c9d0
test eax eax
je r-xdata
push esi
call sub_40d360
add esp 0x4
jmp r-xdata
mov eax [ esp + 0x18 ]
mov ecx [ esp + 0x1c ]
add eax ebx
cmp eax ecx
jbe r-xdata
push 0x1
mov ecx edi
call sub_4085f0
cmp eax ebx
jae r-xdata
test ebx ebx
jne r-xdata
mov edx [ esp + 0x80 ]
lea eax [ edx + edx ]
push eax
call sub_40daa2
add esp 0x4
lea ecx [ esp + 0x80 ]
mov ebx eax
push ecx
push ebx
push 0x21
push esi
mov ecx ebp
call sub_40c9b0
test eax eax
je r-xdata
call [ GetLastError@IAT ]
cmp eax 0x7a
jne r-xdata
mov ecx [ esp + 0x44 ]
mov [ esp + 0x78 ] 0x1
test ecx ecx
je r-xdata
mov eax [ esp + 0x44 ]
mov ecx ebx
test edi edi
jbe r-xdata
mov dx [ eax ]
mov [ ecx + eax ] dx
mov edx [ esp + 0x18 ]
add eax 0x2
dec edx
mov [ esp + 0x18 ] edx
jne r-xdata
mov edx [ ebp + 0xdc ]
mov eax [ ebp + 0xd4 ]
mov ecx [ esp + 0x18 ]
mov edi [ MultiByteToWideChar@IAT ]
push 0x0
inc edx
push 0x0
push edx
push eax
push ecx
push esi
call edi
mov ebx eax
test ebx ebx
jg r-xdata
mov esi 0xfde9
mov [ esp + 0x18 ] eax
mov eax [ ebp + 0xd4 ]
mov ecx [ esp + 0x18 ]
mov esi [ esp + 0x24 ]
mov edi ebx
add edi eax
mov eax ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov eax [ esp + 0x18 ]
mov esi [ esp + 0x24 ]
add ebx eax
mov edx [ esp + 0x1c ]
mov ecx [ ebp + 0xd4 ]
mov [ esp + 0x28 ] ecx
lea esi [ edx + edx ]
push esi
call sub_40daa2
mov edi eax
add esp 0x4
test edi edi
mov [ ebp + 0xd4 ] edi
je r-xdata
mov edx [ edi + 0x4 ]
push ebx
push esi
push edx
call sub_402760
add esp 0xc
mov ecx edi
push ebx
call sub_409140
push ebx
mov ecx edi
call sub_409290
dec al
push ebx
mov [ ecx - 0x1 ] al
mov ecx edi
call sub_4085f0
jmp r-xdata
push ebx
call sub_40d360
mov esi [ esp + 0x18 ]
add esp 0x4
xor edi edi
push ebx
lea esi [ ebp + 0x114 ]
call sub_40db02
add esp 0x4
mov edi eax
mov ecx esi
push 0x1
push edi
call sub_409160
test al al
je r-xdata
lea ecx [ esp + 0x80 ]
mov [ esp + 0x80 ] edi
push ecx
push edi
push 0x2b
push esi
mov ecx ebp
call sub_40c9b0
cmp eax edi
jne r-xdata
xor eax eax
xor edi edi
mov [ esp + 0x44 ] eax
mov [ esp + 0x48 ] eax
mov [ esp + 0x4c ] eax
mov al [ ecx - 0x1 ]
test al al
je r-xdata
mov eax [ esp + 0x44 ]
mov [ esp + 0x48 ] edi
mov [ eax + edi * 2 ] 0x0
mov edx edi
lea edi [ ebx + ebx ]
push edi
call sub_40daa2
mov edx eax
add esp 0x4
test edx edx
mov [ esp + 0x28 ] edx
je r-xdata
mov edx [ ebp + 0xdc ]
mov eax [ ebp + 0xd4 ]
xor esi esi
inc edx
push esi
push esi
push edx
push eax
push 0x1
push esi
mov [ esp + 0x30 ] 0x1
call edi
mov ebx eax
test ebx ebx
jle r-xdata
mov ecx [ esp + 0x28 ]
mov [ esp + 0x13 ] 0x0
mov [ ebp + 0xd4 ] ecx
mov ecx esi
xor eax eax
mov [ esp + 0x1c ] ecx
mov edx ecx
shr ecx 0x2
[ edi ]
mov ecx edx
and ecx 0x3
[ edi ]
mov eax [ esp + 0x28 ]
mov edi [ ebp + 0xd4 ]
mov ecx ebx
mov esi eax
mov edx ecx
push eax
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
call sub_40d360
add esp 0x4
mov edx [ esp + 0x80 ]
lea eax [ edx + edx ]
push eax
call sub_40daa2
add esp 0x4
lea ecx [ esp + 0x80 ]
mov ebx eax
push ecx
push ebx
push 0x2b
push esi
mov ecx ebp
mov [ esp + 0x28 ] ebx
call sub_40c9b0
test eax eax
je r-xdata
call [ GetLastError@IAT ]
cmp eax 0x7a
jne r-xdata
mov ecx [ esi + 0x4 ]
mov eax ebx
test edi edi
jbe r-xdata
lea eax [ ecx - 0x2 ]
push eax
call sub_40d360
add esp 0x4
cmp al 0xff
je r-xdata
mov bx [ ecx ]
add ecx 0x2
mov [ eax ] bx
add eax 0x2
dec edx
jne r-xdata
mov ebx [ esp + 0x28 ]
push rw-data
call sub_40db02
mov edi [ esp + 0x3c ]
add esp 0x4
cmp edi eax
mov esi edi
jb r-xdata
mov ecx edi
mov edi edx
mov edx ecx
xor eax eax
shr ecx 0x2
[ edi ]
mov ecx edx
mov edx [ esp + 0x18 ]
and ecx 0x3
push ebx
mov ebx [ esp + 0x2c ]
[ edi ]
mov eax [ ebp + 0xdc ]
mov ecx [ ebp + 0xd4 ]
inc eax
push ebx
push eax
push ecx
push edx
push esi
call [ MultiByteToWideChar@IAT ]
test eax eax
jle r-xdata
push ebx
call sub_40d360
add esp 0x4
mov edx [ esp + 0x18 ]
lea ebx [ ebp + 0x104 ]
push edx
call sub_40db02
add esp 0x4
mov edi eax
mov ecx ebx
push 0x1
push edi
call sub_409160
test al al
je r-xdata
mov ecx [ esp + 0x64 ]
mov [ esp + 0x78 ] 0x0
cmp ecx edi
je r-xdata
mov eax [ esi + 0x4 ]
mov [ esi + 0x8 ] edi
mov [ eax + edi * 2 ] 0x0
lea edi [ eax + edi * 2 ]
sub ecx ebx
mov [ esp + 0x18 ] edi
dec al
mov [ ecx - 0x1 ] al
jmp r-xdata
mov ecx [ esp + 0x34 ]
mov edx rw-data
test esi esi
jbe r-xdata
mov esi eax
push ebx
call sub_40d360
add esp 0x4
push ebx
lea edi [ ebp + 0xf0 ]
call sub_40db02
add esp 0x4
mov ecx edi
mov esi eax
call sub_40d110
cmp eax esi
jae r-xdata
mov ebx [ esp + 0x1c ]
mov [ esp + 0x64 ] edi
mov [ esp + 0x68 ] edi
mov [ esp + 0x6c ] edi
mov al [ ecx - 0x1 ]
test al al
je r-xdata
push rw-data
lea ecx [ esp + 0x54 ]
push ebx
push ecx
call sub_40d200
mov eax [ esp + 0x60 ]
xor edi edi
add esp 0xc
cmp eax edi
mov ecx r--data
je r-xdata
mov ecx [ ebx + 0x4 ]
mov eax [ esp + 0x18 ]
test edi edi
jbe r-xdata
mov dx [ eax ]
mov [ ecx + eax ] dx
mov edx [ esp + 0x18 ]
add eax 0x2
dec edx
mov [ esp + 0x18 ] edx
jne r-xdata
cmp edi eax
jb r-xdata
mov bx [ ecx ]
cmp bx [ edx ]
jne r-xdata
mov ecx [ edi + 0x4 ]
test ecx ecx
je r-xdata
call sub_40d36b
dec ecx
push ecx
call sub_40d360
add esp 0x4
cmp al 0xff
je r-xdata
mov eax [ ebp + 0x10 ]
cmp eax edi
jne r-xdata
mov ecx eax
mov eax [ ebx + 0x4 ]
mov esi [ esp + 0x14 ]
mov [ ebx + 0x8 ] edi
mov [ eax + edi * 2 ] 0x0
lea edi [ eax + edi * 2 ]
sub ecx eax
mov edx edi
xor ecx ecx
cmp edi eax
setne cl
test ecx ecx
jne r-xdata
mov cx [ ecx ]
cmp cx [ edx ]
sbb ecx ecx
and ecx 0xfffffffe
inc ecx
test ecx ecx
jne r-xdata
add ecx 0x2
add edx 0x2
dec esi
jne r-xdata
test esi esi
jne r-xdata
mov al [ ecx - 0x1 ]
test al al
je r-xdata
dec al
mov [ ecx - 0x1 ] al
jmp r-xdata
push ecx
push edi
push eax
call [ InternetSetCookieW@IAT ]
mov ecx [ esp + 0x54 ]
cmp ecx edi
je r-xdata
mov eax r--data
mov si [ eax ]
mov [ ecx + eax ] si
add eax 0x2
dec edx
jne r-xdata
mov al [ esp + 0x84 ]
test al al
jne r-xdata
jmp r-xdata
mov eax [ edi + 0xc ]
cmp eax 0x1f
ja r-xdata
push 0x1
mov ecx edi
call sub_4085f0
jmp r-xdata
cmp al 0xff
je r-xdata
mov ebx [ esp + 0x18 ]
mov [ esp + 0x54 ] edi
mov [ esp + 0x58 ] edi
mov [ esp + 0x5c ] edi
xor edi edi
mov al [ ecx - 0x1 ]
test al al
je r-xdata
push rw-data
call sub_40db02
add esp 0x4
mov [ esp + 0x24 ] eax
test eax eax
je r-xdata
push 0x1
mov ecx edi
call sub_4085f0
cmp eax esi
jae r-xdata
test esi esi
jne r-xdata
lea eax [ ecx - 0x2 ]
push eax
call sub_40d360
add esp 0x4
cmp al 0xff
je r-xdata
push rw-data
call sub_40db02
add esp 0x4
mov [ esp + 0x24 ] eax
test eax eax
je r-xdata
mov ecx [ ebp + 0xf8 ]
test ecx ecx
jbe r-xdata
mov eax [ edi + 0x4 ]
push esi
push ebx
push eax
call sub_402760
mov ecx [ edi + 0x4 ]
mov [ edi + 0x8 ] esi
add esp 0xc
mov [ ecx + esi * 2 ] 0x0
push esi
mov ecx edi
call sub_409290
dec al
push esi
mov [ ecx - 0x1 ] al
mov ecx edi
call sub_4085f0
jmp r-xdata
dec al
mov [ ecx - 0x1 ] al
jmp r-xdata
mov ecx [ ebp + 0xf8 ]
test ecx ecx
jbe r-xdata
mov ecx [ r--data ]
mov ebx ecx
cmp eax ebx
ja r-xdata
mov ecx [ r--data ]
mov ebx ecx
cmp eax ebx
ja r-xdata
mov ecx [ ebp + 0xf4 ]
mov edx 0x1
sub edx eax
mov [ esp + 0x1c ] ecx
add ebx edx
mov [ esp + 0x28 ] ecx
mov ebx [ GetLastError@IAT ]
mov esi [ esp + 0x14 ]
mov [ ebp + 0x8 ] 0xd
xor edi edi
jmp r-xdata
mov si [ rw-data ]
mov ecx 0x1
sub ecx eax
add ebx ecx
mov ecx [ ebp + 0xf4 ]
mov [ esp + 0x1c ] ecx
mov [ esp + 0x28 ] ecx
cmp [ ecx ] si
je r-xdata
cmp [ ecx ] si
je r-xdata
test ecx ecx
je r-xdata
add ecx 0x2
dec edx
je r-xdata
test ecx ecx
je r-xdata
add ecx 0x2
dec edx
je r-xdata
test eax eax
mov esi eax
mov edi rw-data
mov edx ecx
jbe r-xdata
jmp r-xdata
test eax eax
mov esi eax
mov edi rw-data
mov edx ecx
jbe r-xdata
jmp r-xdata
sub ecx [ esp + 0x1c ]
sar ecx 0x1
jmp r-xdata
mov ax [ edx ]
cmp ax [ edi ]
jne r-xdata
sub ecx [ esp + 0x1c ]
sar ecx 0x1
jmp r-xdata
mov ax [ edx ]
cmp ax [ edi ]
jne r-xdata
cmp ecx 0xffffffff
je r-xdata
mov dx [ edx ]
cmp dx [ edi ]
sbb eax eax
and al 0xfe
inc eax
mov [ esp + 0x18 ] eax
je r-xdata
add edx 0x2
add edi 0x2
dec esi
je r-xdata
cmp ecx 0xffffffff
jne r-xdata
mov dx [ edx ]
cmp dx [ edi ]
sbb eax eax
and al 0xfe
inc eax
mov [ esp + 0x18 ] eax
je r-xdata
add edx 0x2
add edi 0x2
dec esi
je r-xdata
mov eax [ esp + 0x28 ]
mov edx ecx
sub edx eax
or eax 0xffffffff
sar edx 0x1
sub eax edx
add ebx eax
mov eax [ esp + 0x24 ]
add ecx 0x2
mov [ esp + 0x28 ] ecx
jmp r-xdata
jmp r-xdata
mov eax [ esp + 0x28 ]
mov edx ecx
sub edx eax
mov si [ rw-data ]
sar edx 0x1
or eax 0xffffffff
sub eax edx
add ebx eax
mov eax [ esp + 0x24 ]
add ecx 0x2
mov [ esp + 0x28 ] ecx
jmp r-xdata
jmp r-xdata
mov si [ rw-data ]
mov edx ebx
test ebx ebx
jbe r-xdata
test ebx ebx
mov edx ebx
jbe r-xdata
sub_40b7c0
push ecx
mov al [ ecx + 0xb4 ]
push ebx
push ebp
lea ebx [ ecx + 0xb4 ]
push esi
mov esi [ esp + 0x14 ]
xor ebp ebp
push edi
mov [ esi ] al
mov [ esi + 0x4 ] ebp
mov [ esi + 0x8 ] ebp
mov [ esi + 0xc ] ebp
mov eax [ ebx + 0x8 ]
mov ecx [ r--data ]
mov edi eax
mov [ esp + 0x10 ] ebp
cmp ecx edi
jae r-xdata
cmp esi ebx
jne r-xdata
mov edi ecx
cmp edi ebp
jbe r-xdata
cmp edi ebp
mov ebx ecx
jbe r-xdata
push 0x1
push edi
mov ecx esi
call sub_409160
test al al
je r-xdata
cmp edi eax
jne r-xdata
mov ecx esi
call sub_40d120
mov eax [ esi + 0x8 ]
sub eax edi
cmp eax ebx
jae r-xdata
call sub_40d597
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn 0x4
mov ecx [ ebx + 0x4 ]
cmp ecx ebp
jne r-xdata
mov eax [ ebx + 0x4 ]
cmp eax ebp
jne r-xdata
cmp ebx ebp
jbe r-xdata
mov ebx eax
mov eax [ esi + 0x4 ]
cmp edi ebp
jbe r-xdata
mov ecx r--data
cmp [ eax - 0x1 ] 0xfe
jae r-xdata
mov eax r--data
mov ecx esi
call sub_40d120
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn 0x4
mov ecx [ esi + 0x4 ]
sub eax ebx
lea edx [ ebx + edi ]
push eax
lea eax [ ecx + edx * 2 ]
lea ecx [ ecx + edi * 2 ]
push eax
push ecx
call sub_40b900
mov edi [ esi + 0x8 ]
add esp 0xc
sub edi ebx
mov ecx esi
push ebp
push edi
call sub_409160
test al al
je r-xdata
mov edx [ esi + 0x4 ]
mov [ esi + 0x8 ] edi
mov [ edx + edi * 2 ] bp
mov edx edi
push 0x1
mov ecx esi
call sub_4085f0
mov eax [ ebx + 0x4 ]
cmp eax ebp
jne r-xdata
push edi
mov ecx esi
call sub_409140
mov bx [ ecx ]
add ecx 0x2
mov [ eax ] bx
add eax 0x2
dec edx
jne r-xdata
mov [ esi + 0x4 ] eax
mov edx [ ebx + 0x8 ]
mov [ esi + 0x8 ] edx
mov ecx [ ebx + 0xc ]
mov [ esi + 0xc ] ecx
mov cl [ eax - 0x1 ]
inc cl
pop edi
mov [ eax - 0x1 ] cl
mov eax esi
pop esi
pop ebp
pop ebx
pop ecx
retn 0x4
mov eax r--data
sub_40b900
mov eax [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
push esi
mov esi [ esp + 0x10 ]
cmp ecx eax
push edi
mov edx eax
jae r-xdata
test esi esi
jbe r-xdata
lea edi [ ecx + esi * 2 ]
cmp eax edi
jae r-xdata
pop edi
pop esi
retn
mov di [ ecx ]
add ecx 0x2
mov [ edx ] di
add edx 0x2
dec esi
jne r-xdata
test esi esi
lea edx [ eax + esi * 2 ]
mov ecx edi
jbe r-xdata
mov di [ ecx - 0x2 ]
sub ecx 0x2
sub edx 0x2
dec esi
mov [ edx ] di
jne r-xdata
pop edi
pop esi
retn
sub_40b950
push ecx
mov al [ ecx + 0xf0 ]
push ebx
push ebp
lea ebx [ ecx + 0xf0 ]
push esi
mov esi [ esp + 0x14 ]
xor ebp ebp
push edi
mov [ esi ] al
mov [ esi + 0x4 ] ebp
mov [ esi + 0x8 ] ebp
mov [ esi + 0xc ] ebp
mov eax [ ebx + 0x8 ]
mov ecx [ r--data ]
mov edi eax
mov [ esp + 0x10 ] ebp
cmp ecx edi
jae r-xdata
cmp esi ebx
jne r-xdata
mov edi ecx
cmp edi ebp
jbe r-xdata
cmp edi ebp
mov ebx ecx
jbe r-xdata
push 0x1
push edi
mov ecx esi
call sub_409160
test al al
je r-xdata
cmp edi eax
jne r-xdata
mov ecx esi
call sub_40d120
mov eax [ esi + 0x8 ]
sub eax edi
cmp eax ebx
jae r-xdata
call sub_40d597
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn 0x4
mov ecx [ ebx + 0x4 ]
cmp ecx ebp
jne r-xdata
mov eax [ ebx + 0x4 ]
cmp eax ebp
jne r-xdata
cmp ebx ebp
jbe r-xdata
mov ebx eax
mov eax [ esi + 0x4 ]
cmp edi ebp
jbe r-xdata
mov ecx r--data
cmp [ eax - 0x1 ] 0xfe
jae r-xdata
mov eax r--data
mov ecx esi
call sub_40d120
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn 0x4
mov ecx [ esi + 0x4 ]
sub eax ebx
lea edx [ ebx + edi ]
push eax
lea eax [ ecx + edx * 2 ]
lea ecx [ ecx + edi * 2 ]
push eax
push ecx
call sub_40b900
mov edi [ esi + 0x8 ]
add esp 0xc
sub edi ebx
mov ecx esi
push ebp
push edi
call sub_409160
test al al
je r-xdata
mov edx [ esi + 0x4 ]
mov [ esi + 0x8 ] edi
mov [ edx + edi * 2 ] bp
mov edx edi
push 0x1
mov ecx esi
call sub_4085f0
mov eax [ ebx + 0x4 ]
cmp eax ebp
jne r-xdata
push edi
mov ecx esi
call sub_409140
mov bx [ ecx ]
add ecx 0x2
mov [ eax ] bx
add eax 0x2
dec edx
jne r-xdata
mov [ esi + 0x4 ] eax
mov edx [ ebx + 0x8 ]
mov [ esi + 0x8 ] edx
mov ecx [ ebx + 0xc ]
mov [ esi + 0xc ] ecx
mov cl [ eax - 0x1 ]
inc cl
pop edi
mov [ eax - 0x1 ] cl
mov eax esi
pop esi
pop ebp
pop ebx
pop ecx
retn 0x4
mov eax r--data
sub_40ba90
push esi
push edi
mov edi ecx
mov eax [ edi + 0xd4 ]
test eax eax
je r-xdata
pop edi
xor al al
pop esi
retn 0x4
mov eax [ edi + 0xdc ]
test eax eax
jbe r-xdata
mov eax [ esp + 0xc ]
mov eax [ eax + 0x4 ]
test eax eax
jne r-xdata
push rw-data
push eax
call sub_40e983
mov esi eax
add esp 0x8
test esi esi
je r-xdata
mov eax r--data
mov ecx [ edi + 0xdc ]
mov edx [ edi + 0xd4 ]
push esi
push 0x1
push ecx
push edx
call sub_40e859
push esi
call sub_40e01e
add esp 0x14
mov al 0x1
pop edi
pop esi
retn 0x4
sub_40bb00
mov edx [ ecx + 0xd8 ]
xor eax eax
sub esp 0x8
cmp edx eax
je r-xdata
add esp 0x8
retn 0x4
mov ecx [ ecx + 0x100 ]
cmp ecx eax
jbe r-xdata
push esi
mov esi [ esp + 0x10 ]
mov [ esp + 0x4 ] esi
mov [ esp + 0x8 ] eax
fild [ esp + 0x4 ]
mov [ esp + 0x4 ] ecx
mov [ esp + 0x8 ] eax
sub esp 0x8
fmul [ r--data ]
fild [ esp + 0xc ]
fdivp st1
fstp [ esp ]
call edx
add esp 0x8
mov al 0x1
pop esi
sub_40bb60
push ecx
mov al [ ecx + 0x104 ]
push ebx
push ebp
lea ebx [ ecx + 0x104 ]
push esi
mov esi [ esp + 0x14 ]
xor ebp ebp
push edi
mov [ esi ] al
mov [ esi + 0x4 ] ebp
mov [ esi + 0x8 ] ebp
mov [ esi + 0xc ] ebp
mov eax [ ebx + 0x8 ]
mov ecx [ r--data ]
mov edi eax
mov [ esp + 0x10 ] ebp
cmp ecx edi
jae r-xdata
cmp esi ebx
jne r-xdata
mov edi ecx
cmp edi ebp
jbe r-xdata
cmp edi ebp
mov ebx ecx
jbe r-xdata
push 0x1
push edi
mov ecx esi
call sub_409160
test al al
je r-xdata
cmp edi eax
jne r-xdata
mov ecx esi
call sub_40d120
mov eax [ esi + 0x8 ]
sub eax edi
cmp eax ebx
jae r-xdata
call sub_40d597
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn 0x4
mov ecx [ ebx + 0x4 ]
cmp ecx ebp
jne r-xdata
mov eax [ ebx + 0x4 ]
cmp eax ebp
jne r-xdata
cmp ebx ebp
jbe r-xdata
mov ebx eax
mov eax [ esi + 0x4 ]
cmp edi ebp
jbe r-xdata
mov ecx r--data
cmp [ eax - 0x1 ] 0xfe
jae r-xdata
mov eax r--data
mov ecx esi
call sub_40d120
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn 0x4
mov ecx [ esi + 0x4 ]
sub eax ebx
lea edx [ ebx + edi ]
push eax
lea eax [ ecx + edx * 2 ]
lea ecx [ ecx + edi * 2 ]
push eax
push ecx
call sub_40b900
mov edi [ esi + 0x8 ]
add esp 0xc
sub edi ebx
mov ecx esi
push ebp
push edi
call sub_409160
test al al
je r-xdata
mov edx [ esi + 0x4 ]
mov [ esi + 0x8 ] edi
mov [ edx + edi * 2 ] bp
mov edx edi
push 0x1
mov ecx esi
call sub_4085f0
mov eax [ ebx + 0x4 ]
cmp eax ebp
jne r-xdata
push edi
mov ecx esi
call sub_409140
mov bx [ ecx ]
add ecx 0x2
mov [ eax ] bx
add eax 0x2
dec edx
jne r-xdata
mov [ esi + 0x4 ] eax
mov edx [ ebx + 0x8 ]
mov [ esi + 0x8 ] edx
mov ecx [ ebx + 0xc ]
mov [ esi + 0xc ] ecx
mov cl [ eax - 0x1 ]
inc cl
pop edi
mov [ eax - 0x1 ] cl
mov eax esi
pop esi
pop ebp
pop ebx
pop ecx
retn 0x4
mov eax r--data
sub_40bca0
push ebx
mov ebx [ esp + 0x8 ]
push ebp
mov ebp [ r--data ]
mov eax [ ebx + 0x8 ]
push esi
push edi
mov edi eax
cmp ebp edi
lea esi [ ecx + 0x68 ]
jae r-xdata
cmp esi ebx
jne r-xdata
mov edi ebp
xor ebp ebp
cmp edi ebp
jbe r-xdata
cmp [ esi + 0x8 ] edi
jae r-xdata
push 0x1
push edi
mov ecx esi
call sub_409160
test al al
je r-xdata
cmp edi eax
jne r-xdata
mov ecx esi
call sub_40d120
mov eax [ esi + 0x8 ]
sub eax edi
cmp eax ebp
jae r-xdata
call sub_40d597
pop edi
pop esi
pop ebp
mov al 0x1
pop ebx
retn 0x4
mov ebx [ ebx + 0x4 ]
mov ecx r--data
cmp ebx ebp
je r-xdata
mov eax [ ebx + 0x4 ]
cmp eax ebp
jne r-xdata
test ebp ebp
jbe r-xdata
mov ebp eax
mov eax [ esi + 0x4 ]
cmp edi ebp
jbe r-xdata
mov ecx ebx
cmp [ eax - 0x1 ] 0xfe
jae r-xdata
mov eax r--data
mov ecx esi
call sub_40d120
pop edi
pop esi
pop ebp
mov al 0x1
pop ebx
retn 0x4
mov ecx [ esi + 0x4 ]
sub eax ebp
push eax
lea eax [ edi + ebp ]
lea edx [ ecx + eax * 2 ]
lea eax [ ecx + edi * 2 ]
push edx
push eax
call sub_40b900
mov edi [ esi + 0x8 ]
add esp 0xc
sub edi ebp
mov ecx esi
push 0x0
push edi
call sub_409160
test al al
je r-xdata
mov eax [ esi + 0x4 ]
mov [ esi + 0x8 ] edi
mov [ eax + edi * 2 ] bp
mov edx edi
mov ecx [ esi + 0x4 ]
cmp ecx ebp
je r-xdata
push edi
mov ecx esi
call sub_409140
mov bx [ ecx ]
add ecx 0x2
mov [ eax ] bx
add eax 0x2
dec edx
jne r-xdata
mov [ esi + 0x4 ] ebp
mov [ esi + 0x8 ] ebp
mov [ esi + 0xc ] ebp
mov eax [ ebx + 0x4 ]
cmp eax ebp
jne r-xdata
mov al [ ecx - 0x1 ]
test al al
je r-xdata
mov [ esi + 0x4 ] eax
mov ecx [ ebx + 0x8 ]
mov [ esi + 0x8 ] ecx
mov edx [ ebx + 0xc ]
mov [ esi + 0xc ] edx
mov cl [ eax - 0x1 ]
inc cl
pop edi
pop esi
mov [ eax - 0x1 ] cl
pop ebp
mov al 0x1
pop ebx
retn 0x4
mov eax r--data
add ecx 0xfffffffe
push ecx
call sub_40d360
add esp 0x4
cmp al 0xff
je r-xdata
dec al
mov [ ecx - 0x1 ] al
jmp r-xdata
sub_40bdf0
push ebx
push ebp
push esi
mov esi [ esp + 0x10 ]
test esi esi
mov ebx ecx
je r-xdata
pop esi
pop ebp
xor al al
pop ebx
retn 0x8
mov eax [ ebx + 0xac ]
test eax eax
je r-xdata
mov ebp [ esp + 0x14 ]
mov [ ebx + 0xac ] 0x0
push ebp
call sub_40daa2
add esp 0x4
mov [ ebx + 0xac ] eax
test eax eax
je r-xdata
push eax
call sub_40d360
add esp 0x4
push edi
mov ecx ebp
mov edi eax
mov eax ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
mov al 0x1
and ecx 0x3
[ edi ] [ esi ]
pop edi
mov [ ebx + 0xb0 ] ebp
pop esi
pop ebp
pop ebx
retn 0x8
sub_40be60
push esi
mov esi ecx
mov eax [ esi + 0xac ]
test eax eax
je r-xdata
mov [ esi + 0xac ] 0x0
mov [ esi + 0xb0 ] 0x0
mov al 0x1
pop esi
retn
push eax
call sub_40d360
add esp 0x4
sub_40be90
push ecx
push ebx
mov ebx [ esp + 0xc ]
push ebp
mov ebp [ r--data ]
mov eax [ ebx + 0x8 ]
push esi
push edi
mov edi eax
cmp ebp edi
mov [ esp + 0x10 ] ecx
lea esi [ ecx + 0xc ]
jae r-xdata
cmp esi ebx
jne r-xdata
mov edi ebp
xor ebp ebp
cmp edi ebp
jbe r-xdata
cmp [ esi + 0x8 ] edi
jae r-xdata
push 0x1
push edi
mov ecx esi
call sub_409160
test al al
je r-xdata
cmp edi eax
jne r-xdata
mov ecx esi
call sub_40d120
mov eax [ esi + 0x8 ]
sub eax edi
cmp eax ebp
jae r-xdata
call sub_40d597
mov ecx [ esp + 0x10 ]
call sub_40be60
pop edi
pop esi
pop ebp
mov al 0x1
pop ebx
pop ecx
retn 0x4
mov ebx [ ebx + 0x4 ]
mov ecx r--data
cmp ebx ebp
je r-xdata
mov eax [ ebx + 0x4 ]
cmp eax ebp
jne r-xdata
test ebp ebp
jbe r-xdata
mov ebp eax
mov eax [ esi + 0x4 ]
cmp edi ebp
jbe r-xdata
mov ecx ebx
cmp [ eax - 0x1 ] 0xfe
jae r-xdata
mov eax r--data
mov ecx esi
call sub_40d120
mov ecx [ esp + 0x10 ]
call sub_40be60
pop edi
pop esi
pop ebp
mov al 0x1
pop ebx
pop ecx
retn 0x4
mov ecx [ esi + 0x4 ]
sub eax ebp
push eax
lea eax [ edi + ebp ]
lea edx [ ecx + eax * 2 ]
lea eax [ ecx + edi * 2 ]
push edx
push eax
call sub_40b900
mov edi [ esi + 0x8 ]
add esp 0xc
sub edi ebp
mov ecx esi
push 0x0
push edi
call sub_409160
test al al
je r-xdata
mov eax [ esi + 0x4 ]
mov [ esi + 0x8 ] edi
mov [ eax + edi * 2 ] bp
mov edx edi
mov ecx [ esi + 0x4 ]
cmp ecx ebp
je r-xdata
push edi
mov ecx esi
call sub_409140
mov bx [ ecx ]
add ecx 0x2
mov [ eax ] bx
add eax 0x2
dec edx
jne r-xdata
mov [ esi + 0x4 ] ebp
mov [ esi + 0x8 ] ebp
mov [ esi + 0xc ] ebp
mov eax [ ebx + 0x4 ]
cmp eax ebp
jne r-xdata
mov al [ ecx - 0x1 ]
test al al
je r-xdata
mov [ esi + 0x4 ] eax
mov ecx [ ebx + 0x8 ]
mov [ esi + 0x8 ] ecx
mov edx [ ebx + 0xc ]
mov [ esi + 0xc ] edx
mov cl [ eax - 0x1 ]
inc cl
mov [ eax - 0x1 ] cl
mov ecx [ esp + 0x10 ]
call sub_40be60
pop edi
pop esi
pop ebp
mov al 0x1
pop ebx
pop ecx
retn 0x4
mov eax r--data
add ecx 0xfffffffe
push ecx
call sub_40d360
add esp 0x4
cmp al 0xff
je r-xdata
dec al
mov [ ecx - 0x1 ] al
jmp r-xdata
sub_40c000
push ebx
mov ebx [ esp + 0x8 ]
push ebp
mov ebp [ r--data ]
mov eax [ ebx + 0x8 ]
push esi
push edi
mov edi eax
cmp ebp edi
lea esi [ ecx + 0x58 ]
jae r-xdata
cmp esi ebx
jne r-xdata
mov edi ebp
xor ebp ebp
cmp edi ebp
jbe r-xdata
cmp [ esi + 0x8 ] edi
jae r-xdata
push 0x1
push edi
mov ecx esi
call sub_409160
test al al
je r-xdata
cmp edi eax
jne r-xdata
mov ecx esi
call sub_40d120
mov eax [ esi + 0x8 ]
sub eax edi
cmp eax ebp
jae r-xdata
call sub_40d597
pop edi
pop esi
pop ebp
mov al 0x1
pop ebx
retn 0x4
mov ebx [ ebx + 0x4 ]
mov ecx r--data
cmp ebx ebp
je r-xdata
mov eax [ ebx + 0x4 ]
cmp eax ebp
jne r-xdata
test ebp ebp
jbe r-xdata
mov ebp eax
mov eax [ esi + 0x4 ]
cmp edi ebp
jbe r-xdata
mov ecx ebx
cmp [ eax - 0x1 ] 0xfe
jae r-xdata
mov eax r--data
mov ecx esi
call sub_40d120
pop edi
pop esi
pop ebp
mov al 0x1
pop ebx
retn 0x4
mov ecx [ esi + 0x4 ]
sub eax ebp
push eax
lea eax [ edi + ebp ]
lea edx [ ecx + eax * 2 ]
lea eax [ ecx + edi * 2 ]
push edx
push eax
call sub_40b900
mov edi [ esi + 0x8 ]
add esp 0xc
sub edi ebp
mov ecx esi
push 0x0
push edi
call sub_409160
test al al
je r-xdata
mov eax [ esi + 0x4 ]
mov [ esi + 0x8 ] edi
mov [ eax + edi * 2 ] bp
mov edx edi
mov ecx [ esi + 0x4 ]
cmp ecx ebp
je r-xdata
push edi
mov ecx esi
call sub_409140
mov bx [ ecx ]
add ecx 0x2
mov [ eax ] bx
add eax 0x2
dec edx
jne r-xdata
mov [ esi + 0x4 ] ebp
mov [ esi + 0x8 ] ebp
mov [ esi + 0xc ] ebp
mov eax [ ebx + 0x4 ]
cmp eax ebp
jne r-xdata
mov al [ ecx - 0x1 ]
test al al
je r-xdata
mov [ esi + 0x4 ] eax
mov ecx [ ebx + 0x8 ]
mov [ esi + 0x8 ] ecx
mov edx [ ebx + 0xc ]
mov [ esi + 0xc ] edx
mov cl [ eax - 0x1 ]
inc cl
pop edi
pop esi
mov [ eax - 0x1 ] cl
pop ebp
mov al 0x1
pop ebx
retn 0x4
mov eax r--data
add ecx 0xfffffffe
push ecx
call sub_40d360
add esp 0x4
cmp al 0xff
je r-xdata
dec al
mov [ ecx - 0x1 ] al
jmp r-xdata
sub_40c150
push ebx
mov ebx [ esp + 0x8 ]
push ebp
mov ebp [ r--data ]
mov eax [ ebx + 0x8 ]
push esi
push edi
mov edi eax
cmp ebp edi
lea esi [ ecx + 0x78 ]
jae r-xdata
cmp esi ebx
jne r-xdata
mov edi ebp
xor ebp ebp
cmp edi ebp
jbe r-xdata
cmp [ esi + 0x8 ] edi
jae r-xdata
push 0x1
push edi
mov ecx esi
call sub_409160
test al al
je r-xdata
cmp edi eax
jne r-xdata
mov ecx esi
call sub_40d120
mov eax [ esi + 0x8 ]
sub eax edi
cmp eax ebp
jae r-xdata
call sub_40d597
pop edi
pop esi
pop ebp
mov al 0x1
pop ebx
retn 0x4
mov ebx [ ebx + 0x4 ]
mov ecx r--data
cmp ebx ebp
je r-xdata
mov eax [ ebx + 0x4 ]
cmp eax ebp
jne r-xdata
test ebp ebp
jbe r-xdata
mov ebp eax
mov eax [ esi + 0x4 ]
cmp edi ebp
jbe r-xdata
mov ecx ebx
cmp [ eax - 0x1 ] 0xfe
jae r-xdata
mov eax r--data
mov ecx esi
call sub_40d120
pop edi
pop esi
pop ebp
mov al 0x1
pop ebx
retn 0x4
mov ecx [ esi + 0x4 ]
sub eax ebp
push eax
lea eax [ edi + ebp ]
lea edx [ ecx + eax * 2 ]
lea eax [ ecx + edi * 2 ]
push edx
push eax
call sub_40b900
mov edi [ esi + 0x8 ]
add esp 0xc
sub edi ebp
mov ecx esi
push 0x0
push edi
call sub_409160
test al al
je r-xdata
mov eax [ esi + 0x4 ]
mov [ esi + 0x8 ] edi
mov [ eax + edi * 2 ] bp
mov edx edi
mov ecx [ esi + 0x4 ]
cmp ecx ebp
je r-xdata
push edi
mov ecx esi
call sub_409140
mov bx [ ecx ]
add ecx 0x2
mov [ eax ] bx
add eax 0x2
dec edx
jne r-xdata
mov [ esi + 0x4 ] ebp
mov [ esi + 0x8 ] ebp
mov [ esi + 0xc ] ebp
mov eax [ ebx + 0x4 ]
cmp eax ebp
jne r-xdata
mov al [ ecx - 0x1 ]
test al al
je r-xdata
mov [ esi + 0x4 ] eax
mov ecx [ ebx + 0x8 ]
mov [ esi + 0x8 ] ecx
mov edx [ ebx + 0xc ]
mov [ esi + 0xc ] edx
mov cl [ eax - 0x1 ]
inc cl
pop edi
pop esi
mov [ eax - 0x1 ] cl
pop ebp
mov al 0x1
pop ebx
retn 0x4
mov eax r--data
add ecx 0xfffffffe
push ecx
call sub_40d360
add esp 0x4
cmp al 0xff
je r-xdata
dec al
mov [ ecx - 0x1 ] al
jmp r-xdata
sub_40c2b0
push ecx
mov al [ ecx + 0x114 ]
push ebx
push ebp
lea ebx [ ecx + 0x114 ]
push esi
mov esi [ esp + 0x14 ]
xor ebp ebp
push edi
mov [ esi ] al
mov [ esi + 0x4 ] ebp
mov [ esi + 0x8 ] ebp
mov [ esi + 0xc ] ebp
mov eax [ ebx + 0x8 ]
mov ecx [ r--data ]
mov edi eax
mov [ esp + 0x10 ] ebp
cmp ecx edi
jae r-xdata
cmp esi ebx
jne r-xdata
mov edi ecx
cmp edi ebp
jbe r-xdata
cmp edi ebp
mov ebx ecx
jbe r-xdata
push 0x1
push edi
mov ecx esi
call sub_409160
test al al
je r-xdata
cmp edi eax
jne r-xdata
mov ecx esi
call sub_40d120
mov eax [ esi + 0x8 ]
sub eax edi
cmp eax ebx
jae r-xdata
call sub_40d597
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn 0x4
mov ecx [ ebx + 0x4 ]
cmp ecx ebp
jne r-xdata
mov eax [ ebx + 0x4 ]
cmp eax ebp
jne r-xdata
cmp ebx ebp
jbe r-xdata
mov ebx eax
mov eax [ esi + 0x4 ]
cmp edi ebp
jbe r-xdata
mov ecx r--data
cmp [ eax - 0x1 ] 0xfe
jae r-xdata
mov eax r--data
mov ecx esi
call sub_40d120
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn 0x4
mov ecx [ esi + 0x4 ]
sub eax ebx
lea edx [ ebx + edi ]
push eax
lea eax [ ecx + edx * 2 ]
lea ecx [ ecx + edi * 2 ]
push eax
push ecx
call sub_40b900
mov edi [ esi + 0x8 ]
add esp 0xc
sub edi ebx
mov ecx esi
push ebp
push edi
call sub_409160
test al al
je r-xdata
mov edx [ esi + 0x4 ]
mov [ esi + 0x8 ] edi
mov [ edx + edi * 2 ] bp
mov edx edi
push 0x1
mov ecx esi
call sub_4085f0
mov eax [ ebx + 0x4 ]
cmp eax ebp
jne r-xdata
push edi
mov ecx esi
call sub_409140
mov bx [ ecx ]
add ecx 0x2
mov [ eax ] bx
add eax 0x2
dec edx
jne r-xdata
mov [ esi + 0x4 ] eax
mov edx [ ebx + 0x8 ]
mov [ esi + 0x8 ] edx
mov ecx [ ebx + 0xc ]
mov [ esi + 0xc ] ecx
mov cl [ eax - 0x1 ]
inc cl
pop edi
mov [ eax - 0x1 ] cl
mov eax esi
pop esi
pop ebp
pop ebx
pop ecx
retn 0x4
mov eax r--data
sub_40c430
mov eax [ esp + 0x4 ]
push esi
test eax eax
mov esi ecx
je r-xdata
pop esi
retn 0x4
mov ecx [ esi + 0x4 ]
push edi
mov edi [ InternetSetOptionW@IAT ]
lea eax [ esi + 0x12c ]
push 0x4
push eax
push 0x2
push ecx
call edi
mov eax [ esi + 0x4 ]
lea edx [ esi + 0x134 ]
push 0x4
push edx
push 0x6
push eax
call edi
mov edx [ esi + 0x4 ]
lea ecx [ esi + 0x130 ]
push 0x4
push ecx
push 0x5
push edx
call edi
pop edi
sub_40c480
push 0xffffffff
push sub_418838
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc6c
push ebx
push esi
push edi
mov ebx ecx
mov dx [ rw-data ]
mov ecx 0x81
xor eax eax
lea edi [ esp + 0x4a ]
mov [ esp + 0x48 ] dx
mov [ esp + 0x250 ] dx
[ edi ]
stosw [ edi ]
mov ecx 0x289
xor eax eax
lea edi [ esp + 0x252 ]
mov esi [ esp + 0xc8c ]
[ edi ]
stosw [ edi ]
mov ecx 0xf
xor eax eax
lea edi [ esp + 0xc ]
mov [ esp + 0xc80 ] 0x0
[ edi ]
lea eax [ esp + 0x48 ]
lea ecx [ esp + 0x250 ]
mov [ esp + 0x1c ] eax
mov [ esp + 0xc ] 0x3c
test esi esi
mov [ esp + 0x20 ] 0x104
mov [ esp + 0x38 ] ecx
mov [ esp + 0x3c ] 0x514
mov [ esp + 0x14 ] 0x1
mov eax r--data
je r-xdata
mov ecx [ esp + 0xc90 ]
lea edx [ esp + 0xc ]
push edx
push 0x0
push ecx
push eax
call [ InternetCrackUrlW@IAT ]
test eax eax
je r-xdata
mov eax esi
test esi esi
je r-xdata
lea edx [ esp + 0x48 ]
push ebp
push edx
lea edi [ ebx + 0x2c ]
call sub_40db02
add esp 0x4
mov esi eax
mov ecx edi
push 0x1
push esi
call sub_409160
test al al
je r-xdata
xor al al
mov al [ esi - 0x1 ]
test al al
je r-xdata
mov edx [ esp + 0x28 ]
mov eax [ esp + 0x3c ]
mov ecx [ esp + 0x1c ]
and edx 0xffff
push eax
mov [ ebx + 0x4c ] ecx
mov [ ebx + 0x50 ] edx
mov ebp eax
lea edi [ ebx + 0x3c ]
call sub_40db02
add esp 0x4
mov esi eax
mov ecx edi
push 0x1
push esi
call sub_409160
test al al
je r-xdata
mov eax [ edi + 0x4 ]
lea ecx [ esp + 0x4c ]
test esi esi
jbe r-xdata
add esi 0xfffffffe
push esi
call sub_40d360
add esp 0x4
cmp al 0xff
je r-xdata
mov ecx [ esp + 0xc90 ]
pop ebp
test ecx ecx
je r-xdata
mov eax [ edi + 0x4 ]
mov ecx ebp
test esi esi
jbe r-xdata
mov eax [ edi + 0x4 ]
mov [ edi + 0x8 ] esi
mov [ eax + esi * 2 ] 0x0
mov edx esi
dec al
mov [ esi - 0x1 ] al
jmp r-xdata
mov al 0x1
jmp r-xdata
mov al [ ecx - 0x1 ]
test al al
je r-xdata
mov eax [ edi + 0x4 ]
mov [ edi + 0x8 ] esi
mov [ eax + esi * 2 ] 0x0
mov edx esi
mov bp [ ecx ]
add ecx 0x2
mov [ eax ] bp
add eax 0x2
dec edx
jne r-xdata
mov ecx [ esp + 0xc78 ]
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0xc78
retn 0x10
add ecx 0xfffffffe
push ecx
call sub_40d360
add esp 0x4
cmp al 0xff
je r-xdata
mov bx [ ecx ]
add ecx 0x2
mov [ eax ] bx
add eax 0x2
dec edx
jne r-xdata
dec al
mov [ ecx - 0x1 ] al
mov al 0x1
jmp r-xdata
sub_40c670
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
push 0x0
push 0x0
push 0x3
push 0x0
push 0x0
push eax
push ecx
push edx
call [ InternetConnectW@IAT ]
retn 0xc
sub_40c6a0
sub esp 0x8
mov eax [ esp + 0x18 ]
mov [ esp ] rw-data
cmp eax 0x4
mov al [ ecx + 0xa8 ]
mov [ esp + 0x4 ] 0x0
jne r-xdata
neg al
sbb eax eax
and eax 0x200000
add eax 0x4400000
neg al
sbb eax eax
and eax 0x200000
add eax 0x4c00000
jmp r-xdata
mov ecx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
push 0x0
push eax
lea eax [ esp + 0x8 ]
push eax
mov eax [ esp + 0x18 ]
push 0x0
push 0x0
push ecx
push edx
push eax
call [ HttpOpenRequestW@IAT ]
add esp 0x8
retn 0x10
sub_40c730
push esi
mov esi [ esp + 0x10 ]
test esi esi
push edi
mov eax r--data
je r-xdata
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0xc ]
push 0x1000000
push ecx
push eax
push edx
call [ HttpAddRequestHeadersW@IAT ]
test esi esi
mov edi eax
je r-xdata
mov eax esi
mov eax edi
pop edi
pop esi
retn 0x14
mov al [ esi - 0x1 ]
test al al
je r-xdata
add esi 0xfffffffe
push esi
call sub_40d360
add esp 0x4
cmp al 0xff
je r-xdata
dec al
mov [ esi - 0x1 ] al
mov eax edi
pop edi
pop esi
retn 0x14
sub_40c790
mov eax [ ecx + 0x6c ]
test eax eax
jne r-xdata
mov ecx [ ecx + 0x10 ]
test ecx ecx
jne r-xdata
mov eax r--data
push eax
push rw-data
push ecx
call [ InternetSetCookieW@IAT ]
retn 0x4
mov ecx r--data
sub_40c7c0
push 0xffffffff
push sub_41885b
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x130
xor eax eax
push ebp
mov [ esp + 0x4 ] eax
push esi
mov ebp ecx
push edi
mov [ esp + 0x10 ] eax
mov ecx 0x40
lea edi [ esp + 0x39 ]
mov [ esp + 0x14 ] eax
mov [ esp + 0x38 ] al
lea esi [ ebp + 0x78 ]
[ edi ]
stosw [ edi ]
lea ecx [ esp + 0x28 ]
push esi
push ecx
mov ecx ebp
mov [ esp + 0x14 ] 0x3
stosb [ edi ]
call sub_40cb50
mov edi [ eax + 0x8 ]
lea edx [ esp + 0x18 ]
push esi
push edx
mov ecx ebp
mov [ esp + 0x14c ] 0x0
call sub_40cb50
mov eax [ eax + 0x4 ]
test eax eax
jne r-xdata
mov ecx edi
mov esi eax
mov eax ecx
lea edi [ esp + 0x38 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
push 0x1
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ esp + 0x1c ]
call sub_4085a0
push 0x1
lea ecx [ esp + 0x2c ]
mov [ esp + 0x148 ] 0xffffffff
call sub_4085a0
mov eax [ ebp + 0x4 ]
mov esi [ InternetSetOptionW@IAT ]
lea edx [ esp + 0xc ]
push 0xc
push edx
lea ecx [ esp + 0x40 ]
push 0x26
push eax
mov [ esp + 0x20 ] ecx
call esi
test eax eax
jne r-xdata
mov eax r--data
mov ecx [ ebp + 0x90 ]
test ecx ecx
jbe r-xdata
call [ GetLastError@IAT ]
mov [ ebp + 0x8 ] eax
xor al al
jmp r-xdata
mov al 0x1
mov eax [ ebp + 0x8c ]
test eax eax
jne r-xdata
mov ecx [ esp + 0x13c ]
pop edi
pop esi
pop ebp
mov [ fs : 0x0 ] ecx
add esp 0x13c
retn 0x4
mov edx [ ebp + 0x4 ]
add ecx ecx
push ecx
push eax
push 0x2b
push edx
call esi
test eax eax
jne r-xdata
mov eax r--data
mov ecx [ ebp + 0xa0 ]
test ecx ecx
jbe r-xdata
call [ GetLastError@IAT ]
mov [ ebp + 0x8 ] eax
xor al al
jmp r-xdata
mov eax [ ebp + 0x9c ]
test eax eax
jne r-xdata
mov edx [ ebp + 0x4 ]
add ecx ecx
push ecx
push eax
push 0x2c
push edx
call esi
test eax eax
jne r-xdata
mov eax r--data
call [ GetLastError@IAT ]
mov [ ebp + 0x8 ] eax
xor al al
jmp r-xdata
sub_40ca10
push 0xffffffff
push sub_418878
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x14
push ebx
push ebp
mov ebp [ esp + 0x30 ]
push esi
xor ebx ebx
push edi
push ebx
push ebx
push ebx
push ebx
push 0xffffffff
push ebp
push ebx
push ebx
mov [ esp + 0x30 ] ebx
call [ WideCharToMultiByte@IAT ]
mov edi eax
cmp edi ebx
jg r-xdata
push edi
call sub_40daa2
mov esi eax
add esp 0x4
cmp esi ebx
jne r-xdata
mov esi [ esp + 0x34 ]
mov al [ esp + 0x34 ]
mov [ esi ] al
jmp r-xdata
push ebx
push ebx
push edi
push esi
push 0xffffffff
push ebp
push ebx
push ebx
call [ WideCharToMultiByte@IAT ]
mov dl [ esp + 0x34 ]
mov [ esi + edi - 0x1 ] bl
mov edi esi
or ecx 0xffffffff
xor eax eax
mov [ esp + 0x14 ] dl
mov [ esp + 0x18 ] ebx
mov [ esp + 0x1c ] ebx
mov [ esp + 0x20 ] ebx
[ edi ]
not ecx
dec ecx
push ecx
push esi
lea ecx [ esp + 0x1c ]
call sub_408900
push esi
mov [ esp + 0x30 ] ebx
call sub_40d360
mov esi [ esp + 0x38 ]
mov al [ esp + 0x18 ]
add esp 0x4
mov ecx esi
mov [ esi ] al
push ebx
call sub_4085a0
mov ecx [ r--data ]
lea edx [ esp + 0x14 ]
push ecx
push ebx
push edx
mov ecx esi
call sub_408080
mov eax [ esp + 0x18 ]
cmp eax ebx
je r-xdata
mov esi [ esp + 0x34 ]
mov cl [ esp + 0x34 ]
mov [ esi ] cl
mov edi rw-data
or ecx 0xffffffff
xor eax eax
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
[ edi ]
not ecx
dec ecx
push ecx
push rw-data
mov ecx esi
call sub_408900
jmp r-xdata
mov ecx [ esp + 0x24 ]
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x20
retn 0x8
mov cl [ eax - 0x1 ]
cmp cl bl
je r-xdata
dec eax
push eax
call sub_40d360
add esp 0x4
cmp cl 0xff
je r-xdata
dec cl
mov [ eax - 0x1 ] cl
jmp r-xdata
sub_40cb50
push 0xffffffff
push sub_418898
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x18
push ebx
push ebp
push esi
push edi
xor ebx ebx
mov [ esp + 0x10 ] ecx
push rw-data
mov [ esp + 0x18 ] ebx
call sub_40db02
mov ebp [ esp + 0x40 ]
mov esi eax
add esp 0x4
mov edi [ ebp + 0x8 ]
cmp edi esi
mov ecx edi
jb r-xdata
mov eax [ ebp + 0x4 ]
push ecx
push rw-data
push eax
call sub_402720
add esp 0xc
cmp eax ebx
jne r-xdata
mov ecx esi
mov ebp [ ebp + 0x4 ]
cmp ebp ebx
jne r-xdata
cmp edi esi
jb r-xdata
mov esi [ esp + 0x38 ]
mov ecx [ esp + 0x10 ]
push ebp
push esi
call sub_40ca10
mov ebp r--data
xor eax eax
cmp edi esi
setne al
cmp eax ebx
jne r-xdata
mov al [ esp + 0x38 ]
mov edi rw-data
mov [ esp + 0x18 ] al
or ecx 0xffffffff
xor eax eax
mov [ esp + 0x1c ] ebx
[ edi ]
not ecx
dec ecx
mov [ esp + 0x20 ] ebx
push ecx
push rw-data
lea ecx [ esp + 0x20 ]
mov [ esp + 0x2c ] ebx
call sub_408900
mov esi [ esp + 0x38 ]
mov cl [ esp + 0x18 ]
lea eax [ esp + 0x18 ]
mov [ esp + 0x30 ] ebx
mov [ esi ] cl
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
mov edx [ r--data ]
mov ecx esi
push edx
push ebx
push eax
call sub_408080
mov ecx [ esp + 0x1c ]
cmp ecx ebx
je r-xdata
mov ecx [ esp + 0x28 ]
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x24
retn 0x8
mov al [ ecx - 0x1 ]
cmp al bl
je r-xdata
dec ecx
push ecx
call sub_40d360
add esp 0x4
jmp r-xdata
cmp al 0xff
je r-xdata
dec al
mov [ ecx - 0x1 ] al
jmp r-xdata
sub_40cc80
push 0xffffffff
push sub_4188b8
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x14
mov eax [ esp + 0x28 ]
push ebx
push ebp
mov ebp [ esp + 0x34 ]
push esi
xor ebx ebx
push edi
push ebx
push ebx
push ebp
push eax
push ebx
push ebx
mov [ esp + 0x28 ] ebx
call [ MultiByteToWideChar@IAT ]
mov edi eax
cmp edi ebx
jg r-xdata
lea edx [ edi + edi + 0x2 ]
push edx
call sub_40daa2
mov esi eax
add esp 0x4
cmp esi ebx
jne r-xdata
mov esi [ esp + 0x34 ]
mov cl [ esp + 0x34 ]
push ebx
mov [ esi ] cl
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
call sub_40db02
add esp 0x4
mov ecx esi
push eax
push ebx
call sub_408ac0
jmp r-xdata
mov ecx [ esp + 0x38 ]
push edi
push esi
push ebp
push ecx
push ebx
push ebx
call [ MultiByteToWideChar@IAT ]
mov [ esi + edi * 2 ] bx
cmp [ esi ] 0xfeff
jne r-xdata
mov esi [ esp + 0x34 ]
mov al [ esp + 0x34 ]
push ebx
mov [ esi ] al
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
call sub_40db02
add esp 0x4
mov ecx esi
push eax
push ebx
call sub_408ac0
jmp r-xdata
mov ecx [ esp + 0x24 ]
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x20
retn 0xc
mov al [ esp + 0x34 ]
push esi
mov [ esp + 0x18 ] al
mov [ esp + 0x1c ] ebx
mov [ esp + 0x20 ] ebx
mov [ esp + 0x24 ] ebx
call sub_40db02
add esp 0x4
lea ecx [ esp + 0x14 ]
push eax
push esi
call sub_408ac0
push esi
mov [ esp + 0x30 ] ebx
call sub_40d360
mov esi [ esp + 0x38 ]
mov cl [ esp + 0x18 ]
add esp 0x4
mov [ esi ] cl
mov ecx esi
push ebx
call sub_4085f0
mov edx [ r--data ]
lea eax [ esp + 0x14 ]
push edx
push ebx
push eax
mov ecx esi
call sub_40cf00
mov ecx [ esp + 0x18 ]
cmp ecx ebx
je r-xdata
cmp edi ebx
jle r-xdata
mov al [ ecx - 0x1 ]
cmp al bl
je r-xdata
mov eax esi
add ecx 0xfffffffe
push ecx
call sub_40d360
add esp 0x4
cmp al 0xff
je r-xdata
mov dx [ eax + 0x2 ]
mov [ eax ] dx
add eax 0x2
dec edi
jne r-xdata
dec al
mov [ ecx - 0x1 ] al
jmp r-xdata
sub_40cdf0
push 0xffffffff
push sub_4188d8
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x14
push ebx
push ebp
push esi
mov ebp ecx
push edi
mov edi rw-data
or ecx 0xffffffff
xor eax eax
xor ebx ebx
mov esi [ esp + 0x38 ]
[ edi ]
mov eax [ esi + 0x8 ]
mov [ esp + 0x10 ] ebx
not ecx
dec ecx
push ecx
push rw-data
push eax
push ebx
mov ecx esi
call sub_409ed0
cmp eax ebx
jne r-xdata
mov eax [ esi + 0x8 ]
mov esi [ esi + 0x4 ]
cmp esi ebx
jne r-xdata
mov cl [ esp + 0x34 ]
push rw-data
mov [ esp + 0x18 ] cl
mov [ esp + 0x1c ] ebx
mov [ esp + 0x20 ] ebx
mov [ esp + 0x24 ] ebx
call sub_40db02
add esp 0x4
lea ecx [ esp + 0x14 ]
push eax
push rw-data
call sub_408ac0
mov esi [ esp + 0x34 ]
mov dl [ esp + 0x14 ]
lea ecx [ esp + 0x14 ]
mov [ esp + 0x2c ] ebx
mov [ esi ] dl
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
mov eax [ r--data ]
push eax
push ebx
push ecx
mov ecx esi
call sub_40cf00
mov ecx [ esp + 0x18 ]
cmp ecx ebx
je r-xdata
push eax
push esi
mov esi [ esp + 0x3c ]
mov ecx ebp
push esi
call sub_40cc80
mov esi r--data
mov ecx [ esp + 0x24 ]
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x20
retn 0x8
mov al [ ecx - 0x1 ]
cmp al bl
je r-xdata
add ecx 0xfffffffe
push ecx
call sub_40d360
add esp 0x4
jmp r-xdata
cmp al 0xff
je r-xdata
dec al
mov [ ecx - 0x1 ] al
jmp r-xdata
sub_40cf00
push ebx
mov ebx [ esp + 0xc ]
push ebp
mov ebp [ esp + 0xc ]
push esi
push edi
mov eax [ ebp + 0x8 ]
mov esi ecx
cmp eax ebx
jae r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ esp + 0x1c ]
mov edi eax
sub edi ebx
cmp ecx edi
jae r-xdata
call sub_40d597
cmp esi ebp
jne r-xdata
mov edi ecx
xor edx edx
cmp edi edx
jbe r-xdata
mov eax [ esi + 0x8 ]
mov ebp [ r--data ]
add edi ebx
cmp eax edi
jae r-xdata
mov ecx esi
call sub_40d110
cmp eax edi
jae r-xdata
cmp edi eax
jne r-xdata
mov ecx esi
call sub_40d120
mov eax [ esi + 0x8 ]
sub eax edi
cmp eax ebp
jae r-xdata
call sub_40d597
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
call sub_40d36b
mov eax [ ebp + 0x4 ]
cmp eax edx
jne r-xdata
test ebp ebp
jbe r-xdata
mov ebp eax
test edi edi
jne r-xdata
mov al [ ecx - 0x1 ]
test al al
je r-xdata
cmp [ eax - 0x1 ] 0xfe
jae r-xdata
mov eax r--data
mov ecx esi
mov ebp ebx
call sub_40d120
mov eax [ esi + 0x8 ]
cmp eax ebx
jae r-xdata
mov ecx [ esi + 0x4 ]
sub eax ebp
push eax
lea eax [ edi + ebp ]
lea edx [ ecx + eax * 2 ]
lea eax [ ecx + edi * 2 ]
push edx
push eax
call sub_40b900
mov edi [ esi + 0x8 ]
add esp 0xc
sub edi ebp
mov ecx esi
push 0x0
push edi
call sub_409160
test al al
je r-xdata
mov eax [ esi + 0xc ]
cmp eax 0x1f
ja r-xdata
push 0x1
mov ecx esi
call sub_4085f0
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
retn 0xc
cmp al 0xff
je r-xdata
mov ecx [ esi + 0x4 ]
cmp ecx edx
je r-xdata
test ebp ebp
jbe r-xdata
mov ebp eax
mov ecx [ esi + 0x4 ]
mov [ esi + 0x8 ] edi
mov [ ecx + edi * 2 ] 0x0
push 0x1
mov ecx esi
call sub_4085f0
cmp eax edi
jae r-xdata
test edi edi
jne r-xdata
mov [ esi + 0x4 ] edx
mov [ esi + 0x8 ] edx
mov [ esi + 0xc ] edx
mov eax [ ebp + 0x4 ]
cmp eax edx
jne r-xdata
mov al [ ecx - 0x1 ]
test al al
je r-xdata
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
retn 0xc
mov ecx [ esi + 0x4 ]
sub eax ebp
push eax
lea edx [ ecx + ebp * 2 ]
push edx
push ecx
call sub_40b900
mov edi [ esi + 0x8 ]
add esp 0xc
sub edi ebp
mov ecx esi
push 0x0
push edi
call sub_409160
test al al
je r-xdata
lea ecx [ eax + ebx * 2 ]
mov eax [ esi + 0x4 ]
test edi edi
jbe r-xdata
mov eax r--data
mov eax [ ebp + 0x4 ]
test eax eax
jne r-xdata
push edi
mov ecx esi
call sub_409290
dec al
push edi
mov [ ecx - 0x1 ] al
mov ecx esi
call sub_4085f0
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
retn 0xc
mov [ esi + 0x4 ] eax
mov ecx [ ebp + 0x8 ]
mov [ esi + 0x8 ] ecx
mov edx [ ebp + 0xc ]
mov [ esi + 0xc ] edx
mov cl [ eax - 0x1 ]
inc cl
pop edi
mov [ eax - 0x1 ] cl
mov eax esi
pop esi
pop ebp
pop ebx
retn 0xc
mov eax r--data
add ecx 0xfffffffe
push ecx
call sub_40d360
add esp 0x4
xor edx edx
cmp al 0xff
je r-xdata
push edi
mov ecx esi
call sub_409140
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
retn 0xc
mov eax [ esi + 0x4 ]
mov [ esi + 0x8 ] edi
mov [ eax + edi * 2 ] 0x0
mov edx edi
dec al
mov [ ecx - 0x1 ] al
jmp r-xdata
mov bx [ ecx ]
add ecx 0x2
mov [ eax ] bx
add eax 0x2
dec edx
jne r-xdata
sub_40d120
push ebp
push esi
mov esi ecx
push edi
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
pop edi
pop esi
pop ebp
retn
mov al [ ecx - 0x1 ]
test al al
je r-xdata
cmp al 0xff
je r-xdata
mov ebp ecx
dec al
mov [ ecx - 0x1 ] al
push ebp
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
mov [ esi + 0xc ] 0x0
call sub_40db02
mov edi eax
add esp 0x4
cmp edi 0x7ffffffd
jbe r-xdata
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
call sub_40d36b
test edi edi
jne r-xdata
mov al [ ecx - 0x1 ]
test al al
je r-xdata
mov eax [ esi + 0xc ]
cmp eax 0x1f
ja r-xdata
push 0x1
mov ecx esi
call sub_4085f0
pop edi
pop esi
pop ebp
retn
cmp al 0xff
je r-xdata
push 0x1
mov ecx esi
call sub_4085f0
cmp eax edi
jae r-xdata
test edi edi
jne r-xdata
mov eax [ esi + 0x4 ]
mov [ esi + 0x8 ] edi
mov [ eax + edi * 2 ] 0x0
mov edx edi
mov eax [ esi + 0x4 ]
mov ecx ebp
test edi edi
jbe r-xdata
push edi
mov ecx esi
call sub_409290
dec al
push edi
mov [ ecx - 0x1 ] al
mov ecx esi
call sub_4085f0
pop edi
pop esi
pop ebp
retn
mov bp [ ecx ]
add ecx 0x2
mov [ eax ] bp
add eax 0x2
dec edx
jne r-xdata
sub_40d200
push 0xffffffff
push sub_4188f8
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x14
mov eax [ esp + 0x28 ]
mov edx [ r--data ]
push ebx
push esi
mov cl [ eax ]
push edi
xor ebx ebx
push edx
mov [ esp + 0x14 ] cl
push ebx
push eax
lea ecx [ esp + 0x1c ]
mov [ esp + 0x18 ] ebx
mov [ esp + 0x20 ] ebx
mov [ esp + 0x24 ] ebx
mov [ esp + 0x28 ] ebx
call sub_40cf00
mov edi [ esp + 0x38 ]
mov [ esp + 0x28 ] ebx
push edi
call sub_40db02
mov edx [ esp + 0x1c ]
mov esi eax
or eax 0xffffffff
add esp 0x4
sub eax edx
cmp eax esi
ja r-xdata
cmp esi ebx
push ebp
jbe r-xdata
call sub_40d36b
mov esi [ esp + 0x34 ]
mov cl [ esp + 0x14 ]
lea eax [ esp + 0x14 ]
mov [ esi ] cl
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
mov edx [ r--data ]
mov ecx esi
push edx
push ebx
push eax
call sub_40cf00
mov ecx [ esp + 0x18 ]
pop ebp
cmp ecx ebx
je r-xdata
mov ecx [ esp + 0x1c ]
push ebx
lea ebp [ ecx + esi ]
lea ecx [ esp + 0x18 ]
push ebp
call sub_409160
test al al
je r-xdata
mov ecx [ esp + 0x20 ]
mov eax esi
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x20
retn
mov al [ ecx - 0x1 ]
cmp al bl
je r-xdata
mov edx [ esp + 0x18 ]
mov eax [ esp + 0x1c ]
mov ecx edi
lea eax [ edx + eax * 2 ]
add ecx 0xfffffffe
push ecx
call sub_40d360
add esp 0x4
cmp al 0xff
je r-xdata
mov dx [ ecx ]
add ecx 0x2
mov [ eax ] dx
add eax 0x2
dec esi
jne r-xdata
mov eax [ esp + 0x18 ]
mov [ esp + 0x1c ] ebp
mov [ eax + ebp * 2 ] bx
dec al
pop edi
mov [ ecx - 0x1 ] al
mov eax esi
pop esi
pop ebx
mov ecx [ esp + 0x14 ]
mov [ fs : 0x0 ] ecx
add esp 0x20
retn
sub_40d36b
mov eax sub_41890c
call sub_40ecec
sub esp 0x30
mov al [ ebp - 0xd ]
push esi
push 0x0
lea ecx [ ebp - 0x20 ]
mov [ ebp - 0x20 ] al
call sub_4085a0
mov esi r--data
push esi
call sub_40ec70
pop ecx
push eax
push esi
lea ecx [ ebp - 0x20 ]
call sub_408900
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x20 ]
push eax
lea ecx [ ebp - 0x3c ]
call sub_40d3c5
lea eax [ ebp - 0x3c ]
push r--data
push eax
mov [ ebp - 0x3c ] r--data
call sub_40ed0b
pop esi
mov eax sub_418920
call sub_40ecec
push ecx
push ecx
push ebx
push esi
lea eax [ ebp - 0x10 ]
push edi
mov esi ecx
push eax
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] rw-data
call sub_40eb93
mov ebx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
lea edi [ esi + 0xc ]
push 0x0
mov al [ ebx ]
mov ecx edi
mov [ edi ] al
call sub_4085a0
push [ r--data ]
mov ecx edi
push 0x0
push ebx
call sub_408080
mov ecx [ ebp - 0xc ]
mov [ esi ] r--data
mov eax esi
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x4
sub_40d3c5
mov eax sub_418920
call sub_40ecec
push ecx
push ecx
push ebx
push esi
lea eax [ ebp - 0x10 ]
push edi
mov esi ecx
push eax
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] rw-data
call sub_40eb93
mov ebx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
lea edi [ esi + 0xc ]
push 0x0
mov al [ ebx ]
mov ecx edi
mov [ edi ] al
call sub_4085a0
push [ r--data ]
mov ecx edi
push 0x0
push ebx
call sub_408080
mov ecx [ ebp - 0xc ]
mov [ esi ] r--data
mov eax esi
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x4
sub_40d453
mov eax sub_418934
call sub_40ecec
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
and [ ebp - 0x4 ] 0x0
push 0x1
lea ecx [ esi + 0xc ]
call sub_4085a0
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_40ec1a
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_40d4ac
mov eax sub_418948
call sub_40ecec
push ecx
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov esi ecx
push ebx
mov [ ebp - 0x10 ] esi
call sub_40ebd0
mov al [ ebx + 0xc ]
and [ ebp - 0x4 ] 0x0
add ebx 0xc
lea edi [ esi + 0xc ]
push 0x0
mov ecx edi
mov [ edi ] al
call sub_4085a0
push [ r--data ]
mov ecx edi
push 0x0
push ebx
call sub_408080
mov ecx [ ebp - 0xc ]
mov [ esi ] r--data
mov eax esi
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x4
sub_40d509
mov eax sub_41895c
call sub_40ecec
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
and [ ebp - 0x4 ] 0x0
push 0x1
lea ecx [ esi + 0xc ]
call sub_4085a0
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_40ec1a
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_40d546
push ebp
mov ebp esp
sub esp 0x1c
push ecx
lea ecx [ ebp - 0x1c ]
call sub_40d57f
lea eax [ ebp - 0x1c ]
push r--data
push eax
call sub_40ed0b
push esi
mov esi ecx
call sub_40d509
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_40d360
pop ecx
sub_40d597
mov eax sub_418970
call sub_40ecec
sub esp 0x30
mov al [ ebp - 0xd ]
push esi
push 0x0
lea ecx [ ebp - 0x20 ]
mov [ ebp - 0x20 ] al
call sub_4085a0
mov esi r--data
push esi
call sub_40ec70
pop ecx
push eax
push esi
lea ecx [ ebp - 0x20 ]
call sub_408900
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x20 ]
push eax
lea ecx [ ebp - 0x3c ]
call sub_40d3c5
lea eax [ ebp - 0x3c ]
push r--data
push eax
mov [ ebp - 0x3c ] r--data
call sub_40ed0b
pop esi
sub_40d5f1
mov eax sub_418984
call sub_40ecec
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
and [ ebp - 0x4 ] 0x0
push 0x1
lea ecx [ esi + 0xc ]
call sub_4085a0
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_40ec1a
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_40d62e
push ebp
mov ebp esp
sub esp 0x1c
push ecx
lea ecx [ ebp - 0x1c ]
call sub_40d667
lea eax [ ebp - 0x1c ]
push r--data
push eax
call sub_40ed0b
push esi
mov esi ecx
call sub_40d5f1
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_40d360
pop ecx
sub_40d6ce
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov eax [ ebp + 0xc ]
add eax 0xc
mov [ ebp - 0x4 ] eax
mov ebx [ fs : 0x0 ]
mov eax [ ebx ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
mov esp [ ebx - 0x4 ]
mov ebp [ ebp - 0x4 ]
jmp eax
sub_40d710
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
mov eax [ fs : 0x0 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] r-xdata
push 0x0
push [ ebp + 0xc ]
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call RtlUnwind
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
and al 0xfd
mov ecx [ ebp + 0xc ]
mov [ ecx + 0x4 ] eax
mov eax [ fs : 0x0 ]
mov ebx [ ebp - 0x8 ]
mov [ ebx ] eax
mov [ fs : 0x0 ] ebx
pop edi
pop esi
pop ebx
leave
retn 0x8
sub_40d75f
push ebp
mov ebp esp
sub esp 0x4
push ebx
push esi
push edi
cld
mov [ ebp - 0x4 ] eax
xor eax eax
push eax
push eax
push eax
push [ ebp - 0x4 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40f085
add esp 0x20
mov [ ebp + 0x14 ] eax
pop edi
pop esi
pop ebx
mov eax [ ebp + 0x14 ]
mov esp ebp
pop ebp
retn
sub_40d795
push ebp
mov ebp esp
sub esp 0x14
mov eax [ ebp + 0xc ]
and [ ebp - 0x14 ] 0x0
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x10 ] sub_40d7e9
inc eax
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
mov eax [ fs : 0x0 ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x14 ]
mov [ fs : 0x0 ] eax
push [ ebp + 0x18 ]
push ecx
push [ ebp + 0x10 ]
call sub_40f880
mov ecx eax
mov eax [ ebp - 0x14 ]
mov [ fs : 0x0 ] eax
mov eax ecx
leave
retn
sub_40d7e9
push ebp
mov ebp esp
cld
mov eax [ ebp + 0xc ]
push 0x0
push eax
push [ eax + 0x10 ]
push [ eax + 0x8 ]
push 0x0
push [ ebp + 0x10 ]
push [ eax + 0xc ]
push [ ebp + 0x8 ]
call sub_40f085
add esp 0x20
pop ebp
retn
sub_40d80e
push ebp
mov ebp esp
sub esp 0x34
push ebx
push esi
push edi
and [ ebp - 0x28 ] 0x0
mov [ ebp - 0x24 ] sub_40d8c2
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0x1c ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x14 ] eax
and [ ebp - 0x10 ] 0x0
and [ ebp - 0xc ] 0x0
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x10 ] r-xdata
mov [ ebp - 0xc ] esp
mov [ ebp - 0x8 ] ebp
mov eax [ fs : 0x0 ]
mov [ ebp - 0x28 ] eax
lea eax [ ebp - 0x28 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x34 ] 0x1
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x30 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x2c ] eax
lea eax [ ebp - 0x30 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax ]
call [ rw-data ]
pop ecx
pop ecx
and [ ebp - 0x34 ] 0x0
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x28 ]
mov [ fs : 0x0 ] eax
mov ebx [ fs : 0x0 ]
mov eax [ ebx ]
mov ebx [ ebp - 0x28 ]
mov [ ebx ] eax
mov [ fs : 0x0 ] ebx
jmp r-xdata
mov eax [ ebp - 0x34 ]
pop edi
pop esi
pop ebx
leave
retn
sub_40d8c2
push ebp
mov ebp esp
push ebx
push esi
push edi
cld
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
and eax 0x66
test eax eax
je r-xdata
push 0x1
mov eax [ ebp + 0xc ]
push [ eax + 0x14 ]
mov eax [ ebp + 0xc ]
push [ eax + 0x10 ]
mov eax [ ebp + 0xc ]
push [ eax + 0x8 ]
push 0x0
push [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
push [ eax + 0xc ]
push [ ebp + 0x8 ]
call sub_40f085
add esp 0x20
mov eax [ ebp + 0xc ]
cmp [ eax + 0x24 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
mov [ eax + 0x24 ] 0x1
push 0x1
pop eax
jmp r-xdata
mov ebx [ ebp + 0xc ]
mov esp [ ebx + 0x1c ]
mov ebp [ ebx + 0x20 ]
jmp [ ebx + 0x18 ]
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_40d710
pop edi
pop esi
pop ebx
pop ebp
retn
sub_40d937
push ebp
mov ebp esp
push ecx
push ebx
push esi
cmp [ ebp + 0xc ] 0x0
push edi
mov edi [ ebp + 0x8 ]
mov esi [ edi + 0xc ]
mov ebx [ edi + 0x10 ]
mov eax esi
mov [ ebp + 0x8 ] esi
mov [ ebp - 0x4 ] eax
jl r-xdata
mov ecx [ ebp + 0x14 ]
inc esi
mov [ ecx ] esi
mov ecx [ ebp + 0x18 ]
mov [ ecx ] eax
cmp eax [ edi + 0xc ]
ja r-xdata
cmp esi 0xffffffff
jne r-xdata
call sub_40f922
cmp esi eax
jbe r-xdata
mov ecx [ ebp + 0x10 ]
dec esi
lea eax [ esi + esi * 4 ]
cmp [ ebx + eax * 4 + 0x4 ] ecx
lea eax [ ebx + eax * 4 ]
jge r-xdata
call sub_40f922
lea eax [ esi + esi * 4 ]
pop edi
pop esi
lea eax [ ebx + eax * 4 ]
pop ebx
leave
retn
cmp esi 0xffffffff
jne r-xdata
cmp ecx [ eax + 0x8 ]
jle r-xdata
cmp [ ebp + 0xc ] 0x0
jge r-xdata
mov eax [ ebp + 0x8 ]
dec [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
mov [ ebp + 0x8 ] esi
mov eax [ ebp - 0x4 ]
sub_40d9b4
push ebp
mov ebp esp
push ebx
push esi
push edi
push ebp
push 0x0
push 0x0
push r-xdata
push [ ebp + 0x8 ]
call RtlUnwind
pop ebp
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40d9f6
push ebx
push esi
push edi
mov eax [ esp + 0x10 ]
push eax
push 0xfffffffe
push sub_40d9d4
push [ fs : 0x0 ]
mov [ fs : 0x0 ] esp
pop [ fs : 0x0 ]
add esp 0xc
pop edi
pop esi
pop ebx
retn
cmp esi [ esp + 0x24 ]
je r-xdata
lea esi [ esi + esi * 2 ]
mov ecx [ ebx + esi * 4 ]
mov [ esp + 0x8 ] ecx
mov [ eax + 0xc ] ecx
cmp [ ebx + esi * 4 + 0x4 ] 0x0
jne r-xdata
jmp r-xdata
push 0x101
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_40da8a
call [ ebx + esi * 4 + 0x8 ]
mov eax [ esp + 0x20 ]
mov ebx [ eax + 0x8 ]
mov esi [ eax + 0xc ]
cmp esi 0xffffffff
je r-xdata
sub_40dab0
push ebp
mov ebp esp
sub esp 0x20
mov eax [ ebp + 0x8 ]
push esi
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x20 ] eax
lea eax [ ebp + 0x10 ]
mov [ ebp - 0x14 ] 0x42
push eax
lea eax [ ebp - 0x20 ]
push [ ebp + 0xc ]
mov [ ebp - 0x1c ] 0x7fffffff
push eax
call sub_40fb3f
add esp 0xc
dec [ ebp - 0x1c ]
mov esi eax
js r-xdata
lea eax [ ebp - 0x20 ]
push eax
push 0x0
call sub_40fa2a
pop ecx
pop ecx
mov eax [ ebp - 0x20 ]
and [ eax ] 0x0
jmp r-xdata
mov eax esi
pop esi
leave
retn
sub_40db02
mov ecx [ esp + 0x4 ]
cmp [ ecx ] 0x0
lea eax [ ecx + 0x2 ]
je r-xdata
sub eax ecx
sar eax 0x1
dec eax
retn
mov dx [ eax ]
inc eax
inc eax
test dx dx
jne r-xdata
sub_40db20
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
test edi 0x3
jne r-xdata
cmp edi eax
jb r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_40db80 ]
jmp [ ecx * 4 + jump_table_40dbfc ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_40dc68 ]
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
inc esi
shr ecx 0x2
inc edi
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_40dc68 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
jmp [ ecx * 4 + jump_table_40de00 ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_40dd08 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40de00 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_40dc68 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_40dc68 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_40dc68 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
dec esi
shr ecx 0x2
dec edi
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_40de00 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40de00 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40de00 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40de00 ]
sub_40de55
push ebx
push ebp
push esi
push edi
mov edi [ esp + 0x14 ]
movzx eax [ edi ]
mov ecx [ rw-data ]
mov al [ ecx + eax * 2 ]
and eax 0x8
movzx eax [ edi ]
push 0x8
push eax
call sub_4103a6
pop ecx
pop ecx
jmp r-xdata
movzx esi [ edi ]
inc edi
cmp esi 0x2d
mov ebp esi
je r-xdata
inc edi
jmp r-xdata
test eax eax
je r-xdata
movzx esi [ edi ]
inc edi
cmp esi 0x2b
jne r-xdata
cmp [ rw-data ] 0x1
jle r-xdata
mov eax [ rw-data ]
mov al [ eax + esi * 2 ]
and eax 0x4
push 0x4
push esi
call sub_4103a6
pop ecx
pop ecx
jmp r-xdata
xor ebx ebx
cmp ebp 0x2d
mov eax ebx
jne r-xdata
lea eax [ ebx + ebx * 4 ]
lea ebx [ esi + eax * 2 - 0x30 ]
movzx esi [ edi ]
inc edi
jmp r-xdata
test eax eax
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn
neg eax
cmp [ rw-data ] 0x1
jle r-xdata
sub_40df3a
push edi
push 0x1
pop edi
cmp [ rw-data ] edi
jne r-xdata
cmp [ esp + 0xc ] 0x0
push ebx
mov ebx [ esp + 0x14 ]
mov [ rw-data ] edi
mov [ rw-data ] bl
jne r-xdata
push [ esp + 0x8 ]
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
push rw-data
push rw-data
call sub_40dfd3
pop ecx
pop ecx
test ebx ebx
pop ebx
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
pop edi
retn
push [ esp + 0x8 ]
mov [ rw-data ] edi
call [ ExitProcess@IAT ]
push rw-data
push rw-data
call sub_40dfd3
pop ecx
pop ecx
mov ecx [ rw-data ]
push esi
lea esi [ ecx - 0x4 ]
cmp esi eax
jb r-xdata
pop esi
mov eax [ esi ]
test eax eax
je r-xdata
sub esi 0x4
cmp esi [ rw-data ]
jae r-xdata
call eax
sub_40dfed
push ebx
push esi
mov esi rw-data
push edi
push esi
call sub_410454
mov edi eax
lea eax [ esp + 0x18 ]
push eax
push [ esp + 0x18 ]
push esi
call sub_40fb3f
push esi
push edi
mov ebx eax
call sub_4104e1
add esp 0x18
mov eax ebx
pop edi
pop esi
pop ebx
retn
sub_40e01e
push esi
mov esi [ esp + 0x8 ]
push edi
or edi 0xffffffff
mov eax [ esi + 0xc ]
test al 0x40
je r-xdata
test al 0x83
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax edi
push esi
call sub_4106f0
push esi
mov edi eax
call sub_41068a
push [ esi + 0x10 ]
call sub_4105d7
add esp 0xc
test eax eax
jge r-xdata
and [ esi + 0xc ] 0x0
pop edi
pop esi
retn
mov eax [ esi + 0x1c ]
test eax eax
je r-xdata
or edi 0xffffffff
jmp r-xdata
push eax
call sub_40eb0e
and [ esi + 0x1c ] 0x0
pop ecx
sub_40e074
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
imul edi [ ebp + 0x10 ]
mov ebx [ ebp + 0x8 ]
mov ecx edi
test edi edi
mov [ ebp - 0x4 ] edi
mov [ ebp + 0x8 ] ecx
jne r-xdata
mov esi [ ebp + 0x14 ]
test [ esi + 0xc ] 0x10c
je r-xdata
xor eax eax
jmp r-xdata
mov [ ebp + 0x14 ] 0x1000
jmp r-xdata
mov eax [ esi + 0x18 ]
mov [ ebp + 0x14 ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
test [ esi + 0xc ] 0x10c
je r-xdata
cmp ecx [ ebp + 0x14 ]
jb r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
push esi
call sub_4107c2
cmp eax 0xffffffff
pop ecx
je r-xdata
cmp [ ebp + 0x14 ] 0x0
mov eax ecx
je r-xdata
cmp ecx eax
mov edi ecx
jb r-xdata
mov eax edi
xor edx edx
sub eax [ ebp + 0x8 ]
div [ ebp + 0xc ]
jmp r-xdata
mov [ ebx ] al
mov eax [ esi + 0x18 ]
inc ebx
dec [ ebp + 0x8 ]
mov [ ebp + 0x14 ] eax
push eax
push ebx
push [ esi + 0x10 ]
call sub_41089b
add esp 0xc
test eax eax
je r-xdata
xor edx edx
div [ ebp + 0x14 ]
mov eax ecx
sub eax edx
push edi
push [ esi ]
push ebx
call sub_40ed50
sub [ ebp + 0x8 ] edi
sub [ esi + 0x4 ] edi
add [ esi ] edi
add esp 0xc
add ebx edi
mov edi [ ebp - 0x4 ]
jmp r-xdata
mov edi eax
mov ecx [ ebp + 0x8 ]
mov eax [ ebp + 0x10 ]
or [ esi + 0xc ] 0x10
jmp r-xdata
cmp eax 0xffffffff
je r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
or [ esi + 0xc ] 0x20
sub [ ebp + 0x8 ] eax
add ebx eax
jmp r-xdata
sub_40e15c
push [ esp + 0x4 ]
call sub_410a91
pop ecx
mov ecx [ esp + 0x8 ]
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
mov edx [ ecx ]
or eax 0xffffffff
and edx [ ecx + 0x4 ]
cmp edx eax
je r-xdata
retn
xor eax eax
sub_40e17e
push esi
mov esi [ esp + 0x8 ]
push edi
mov eax [ esi + 0xc ]
test al 0x83
je r-xdata
mov [ rw-data ] 0x16
or eax 0xffffffff
mov edi [ esp + 0x14 ]
test edi edi
je r-xdata
and al 0xef
cmp edi 0x1
mov [ esi + 0xc ] eax
jne r-xdata
cmp edi 0x1
je r-xdata
push esi
call sub_4106f0
mov eax [ esi + 0xc ]
pop ecx
test al 0x80
je r-xdata
push esi
call sub_410cb2
add [ esp + 0x14 ] eax
pop ecx
xor edi edi
cmp edi 0x2
jne r-xdata
test al 0x1
je r-xdata
and al 0xfc
mov [ esi + 0xc ] eax
jmp r-xdata
push edi
push [ esp + 0x14 ]
push [ esi + 0x10 ]
call sub_410c18
add esp 0xc
xor ecx ecx
cmp eax 0xffffffff
setne cl
dec ecx
mov eax ecx
jmp r-xdata
test al 0x8
je r-xdata
pop edi
pop esi
retn
test ah 0x4
jne r-xdata
mov [ esi + 0x18 ] 0x200
sub_40e240
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
xor eax eax
or ecx 0xffffffff
[ edi ]
inc ecx
neg ecx
dec edi
mov al [ ebp + 0xc ]
std
[ edi ]
inc edi
cmp [ edi ] al
je r-xdata
mov eax edi
xor eax eax
jmp r-xdata
cld
pop edi
leave
retn
sub_40e270
push edi
push esi
push ebx
xor edi edi
mov eax [ esp + 0x14 ]
or eax eax
jge r-xdata
mov eax [ esp + 0x1c ]
or eax eax
jge r-xdata
inc edi
mov edx [ esp + 0x10 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x14 ] eax
mov [ esp + 0x10 ] edx
or eax eax
jne r-xdata
inc edi
mov edx [ esp + 0x18 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x1c ] eax
mov [ esp + 0x18 ] edx
mov ebx eax
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x14 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x10 ]
div ecx
mov edx ebx
jmp r-xdata
shr ebx 0x1
rcr ecx 0x1
shr edx 0x1
rcr eax 0x1
or ebx ebx
jne r-xdata
div ecx
mov esi eax
mul [ esp + 0x1c ]
mov ecx eax
mov eax [ esp + 0x18 ]
mul esi
add edx ecx
jb r-xdata
dec edi
jne r-xdata
dec esi
cmp edx [ esp + 0x14 ]
ja r-xdata
pop ebx
pop esi
pop edi
retn 0x10
neg edx
neg eax
sbb edx 0x0
jb r-xdata
xor edx edx
mov eax esi
cmp eax [ esp + 0x10 ]
jbe r-xdata
sub_40e342
push ebp
mov ebp esp
sub esp 0xcc
lea eax [ ebp - 0x10 ]
push eax
call [ GetLocalTime@IAT ]
lea eax [ ebp - 0x20 ]
push eax
call [ GetSystemTime@IAT ]
mov ax [ ebp - 0x16 ]
cmp ax [ rw-data ]
jne r-xdata
lea eax [ ebp - 0xcc ]
push eax
call [ GetTimeZoneInformation@IAT ]
cmp eax 0xffffffff
je r-xdata
mov ax [ ebp - 0x18 ]
cmp ax [ rw-data ]
jne r-xdata
or eax 0xffffffff
cmp eax 0x2
jne r-xdata
mov ax [ ebp - 0x1a ]
cmp ax [ rw-data ]
jne r-xdata
leave
retn
mov [ ecx ] eax
xor eax eax
jmp r-xdata
cmp [ ebp - 0x32 ] 0x0
je r-xdata
mov ax [ ebp - 0x1e ]
cmp ax [ rw-data ]
jne r-xdata
push esi
push edi
lea esi [ ebp - 0x20 ]
mov edi rw-data
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
mov [ rw-data ] eax
pop esi
cmp [ ebp - 0x24 ] 0x0
je r-xdata
mov ax [ ebp - 0x20 ]
cmp ax [ rw-data ]
jne r-xdata
push 0x1
pop eax
jmp r-xdata
mov eax [ rw-data ]
jmp r-xdata
push eax
movzx eax [ ebp - 0x4 ]
push eax
movzx eax [ ebp - 0x6 ]
push eax
movzx eax [ ebp - 0x8 ]
push eax
movzx eax [ ebp - 0xa ]
push eax
movzx eax [ ebp - 0xe ]
push eax
movzx eax [ ebp - 0x10 ]
push eax
call sub_410ff2
mov ecx [ ebp + 0x8 ]
add esp 0x1c
test ecx ecx
je r-xdata
sub_40e41e
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
push ebx
call sub_40ec70
cmp eax 0x1
pop ecx
jb r-xdata
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
cmp [ ebx + 0x1 ] 0x3a
jne r-xdata
and [ ebp + 0xc ] 0x0
cmp [ ebx ] 0x0
mov eax ebx
mov esi 0xff
mov [ ebp + 0x8 ] eax
je r-xdata
and [ eax ] 0x0
mov esi [ ebp + 0xc ]
test esi esi
je r-xdata
mov ecx [ ebp + 0x10 ]
test ecx ecx
je r-xdata
mov cl [ eax ]
movzx edx cl
test [ edx + rw-data ] 0x4
je r-xdata
inc ebx
inc ebx
jmp r-xdata
push 0x2
push ebx
push esi
call sub_411494
add esp 0xc
and [ esi + 0x2 ] 0x0
mov edi [ ebp - 0x4 ]
test edi edi
je r-xdata
and [ ecx ] 0x0
cmp cl 0x2f
je r-xdata
inc eax
jmp r-xdata
mov edi [ ebp + 0x14 ]
test edi edi
je r-xdata
cmp edi ebx
jb r-xdata
lea ecx [ eax + 0x1 ]
mov [ ebp + 0xc ] ecx
cmp cl 0x5c
je r-xdata
inc eax
cmp [ eax ] 0x0
jne r-xdata
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
sub eax ebx
cmp eax esi
jae r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov edi [ ebp + 0xc ]
mov [ ebp + 0x8 ] eax
test edi edi
je r-xdata
cmp cl 0x2e
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
and [ eax ] 0x0
push esi
push ebx
push edi
call sub_411494
add esp 0xc
and [ esi + edi ] 0x0
mov esi eax
mov edi [ ebp + 0x18 ]
test edi edi
je r-xdata
sub edi ebx
cmp edi esi
jb r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov [ ebp - 0x4 ] eax
jmp r-xdata
sub eax [ ebp - 0x4 ]
cmp eax esi
jae r-xdata
push edi
push ebx
push [ ebp + 0x14 ]
call sub_411494
mov eax [ ebp + 0x14 ]
add esp 0xc
and [ edi + eax ] 0x0
mov eax [ ebp + 0x8 ]
mov edi esi
mov ebx [ ebp + 0xc ]
jmp r-xdata
sub edi ebx
cmp edi esi
jb r-xdata
push esi
push [ ebp - 0x4 ]
push edi
call sub_411494
add esp 0xc
and [ esi + edi ] 0x0
jmp r-xdata
mov esi eax
push edi
push ebx
push [ ebp + 0x10 ]
call sub_411494
mov eax [ ebp + 0x10 ]
add esp 0xc
and [ edi + eax ] 0x0
mov eax [ ebp + 0x8 ]
mov edi esi
sub_40e565
cmp [ rw-data ] 0x0
push ebx
push esi
mov esi [ rw-data ]
push edi
je r-xdata
xor eax eax
test esi esi
jne r-xdata
mov ebx [ esp + 0x10 ]
test ebx ebx
je r-xdata
cmp [ rw-data ] esi
je r-xdata
push ebx
call sub_40ec70
pop ecx
mov edi eax
call sub_41155d
test eax eax
jne r-xdata
push eax
call sub_40ec70
cmp eax edi
pop ecx
jbe r-xdata
mov esi [ rw-data ]
test esi esi
je r-xdata
add esi 0x4
jmp r-xdata
mov eax [ esi ]
cmp [ eax + edi ] 0x3d
jne r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
push edi
push ebx
push eax
call sub_41151e
add esp 0xc
test eax eax
je r-xdata
mov eax [ esi ]
lea eax [ eax + edi + 0x1 ]
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_40e5f0
mov eax [ esp + 0xc ]
push ebx
test eax eax
je r-xdata
pop ebx
retn
mov edx [ esp + 0x8 ]
xor ebx ebx
mov bl [ esp + 0xc ]
test edx 0x3
je r-xdata
sub eax 0x4
jb r-xdata
mov cl [ edx ]
inc edx
xor cl bl
je r-xdata
add eax 0x4
je r-xdata
push edi
mov edi ebx
shl ebx 0x8
add ebx edi
mov edi ebx
shl ebx 0x10
add ebx edi
jmp r-xdata
lea eax [ edx - 0x1 ]
pop ebx
retn
dec eax
je r-xdata
mov cl [ edx ]
inc edx
xor cl bl
je r-xdata
mov ecx [ edx ]
xor ecx ebx
mov edi 0x7efefeff
add edi ecx
xor ecx 0xffffffff
xor ecx edi
add edx 0x4
and ecx 0x81010100
je r-xdata
test edx 0x3
jne r-xdata
dec eax
jne r-xdata
sub eax 0x4
jb r-xdata
mov ecx [ edx - 0x4 ]
xor cl bl
je r-xdata
pop edi
lea eax [ edx - 0x4 ]
pop edi
pop ebx
retn
xor ch bl
je r-xdata
lea eax [ edx - 0x3 ]
pop edi
pop ebx
retn
shr ecx 0x10
xor cl bl
je r-xdata
lea eax [ edx - 0x2 ]
pop edi
pop ebx
retn
xor ch bl
je r-xdata
pop edi
jmp r-xdata
sub_40e695
push esi
push [ rw-data ]
call sub_41186b
mov edx [ rw-data ]
pop ecx
mov ecx [ rw-data ]
mov esi ecx
sub esi edx
add esi 0x4
cmp eax esi
pop esi
jae r-xdata
mov eax [ esp + 0x4 ]
mov [ ecx ] eax
add [ rw-data ] 0x4
retn
push edx
call sub_41186b
add eax 0x10
push eax
push [ rw-data ]
call sub_4115cb
add esp 0xc
test eax eax
jne r-xdata
mov ecx [ rw-data ]
sub ecx [ rw-data ]
mov [ rw-data ] eax
sar ecx 0x2
lea ecx [ eax + ecx * 4 ]
mov [ rw-data ] ecx
retn
sub_40e714
push 0x80
call sub_40f978
test eax eax
pop ecx
mov [ rw-data ] eax
jne r-xdata
and [ eax ] 0x0
mov eax [ rw-data ]
mov [ rw-data ] eax
retn
push 0x18
call sub_40eac5
mov eax [ rw-data ]
pop ecx
sub_40e743
push ebp
mov ebp esp
xor eax eax
cmp [ ebp + 0x10 ] eax
je r-xdata
pop ebp
retn
cmp [ rw-data ] eax
push ebx
jne r-xdata
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0xc ]
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
pop edi
pop esi
test bx bx
je r-xdata
mov ebx eax
cmp ax 0x41
lea ebx [ eax + 0x20 ]
jae r-xdata
cmp bx ax
je r-xdata
inc ecx
inc ecx
inc edx
inc edx
dec [ ebp + 0x10 ]
je r-xdata
cmp ax 0x41
jb r-xdata
mov ax [ edx ]
cmp ax 0x5a
ja r-xdata
mov ax [ esi ]
inc esi
push eax
inc esi
call sub_4118cc
mov ebx eax
mov ax [ edi ]
inc edi
push eax
inc edi
call sub_4118cc
dec [ ebp + 0x10 ]
pop ecx
pop ecx
je r-xdata
movzx ecx ax
movzx eax bx
sub eax ecx
pop ebx
test bx bx
je r-xdata
add eax 0x20
cmp bx ax
je r-xdata
mov ax [ ecx ]
cmp ax 0x5a
ja r-xdata
jmp r-xdata
sub_40e7d9
cmp [ rw-data ] 0x0
push ebx
jne r-xdata
push esi
mov esi [ esp + 0xc ]
push edi
mov edi [ esp + 0x14 ]
mov edx [ esp + 0xc ]
mov ecx [ esp + 0x8 ]
pop edi
pop esi
cmp bx ax
je r-xdata
mov ax [ edx ]
cmp ax 0x5a
ja r-xdata
cmp bx 0x41
jb r-xdata
mov ax [ esi ]
inc esi
push eax
inc esi
call sub_4118cc
mov ebx eax
mov ax [ edi ]
inc edi
push eax
inc edi
call sub_4118cc
pop ecx
test bx bx
pop ecx
je r-xdata
inc ecx
inc ecx
inc edx
inc edx
test bx bx
je r-xdata
cmp ax 0x41
jb r-xdata
add ebx 0x20
movzx ecx ax
movzx eax bx
sub eax ecx
pop ebx
retn
cmp bx ax
je r-xdata
add eax 0x20
mov bx [ ecx ]
cmp bx 0x5a
ja r-xdata
jmp r-xdata
sub_40e859
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
imul edi [ ebp + 0x10 ]
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] edi
test edi edi
mov [ ebp + 0x8 ] eax
mov ebx edi
jne r-xdata
mov esi [ ebp + 0x14 ]
test [ esi + 0xc ] 0x10c
je r-xdata
xor eax eax
jmp r-xdata
mov [ ebp + 0x14 ] 0x1000
mov eax [ esi + 0x18 ]
mov [ ebp + 0x14 ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp ebx [ ebp + 0x14 ]
jb r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov ecx [ esi + 0xc ]
and ecx 0x108
je r-xdata
mov eax [ ebp + 0x8 ]
push esi
movsx eax [ eax ]
push eax
call sub_40fa2a
pop ecx
cmp eax 0xffffffff
pop ecx
je r-xdata
test ecx ecx
je r-xdata
cmp ebx eax
mov edi ebx
jb r-xdata
mov eax edi
inc [ ebp + 0x8 ]
mov eax [ esi + 0x18 ]
dec ebx
mov [ ebp + 0x14 ] eax
test eax eax
jg r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
push esi
call sub_4106f0
test eax eax
pop ecx
jne r-xdata
push edi
push [ ebp + 0x8 ]
push [ esi ]
call sub_40ed50
sub [ esi + 0x4 ] edi
add [ esi ] edi
add esp 0xc
sub ebx edi
add [ ebp + 0x8 ] edi
jmp r-xdata
mov edi eax
test ebx ebx
jne r-xdata
mov [ ebp + 0x14 ] 0x1
mov edi ebx
mov eax ebx
xor edx edx
div [ ebp + 0x14 ]
mov edi ebx
sub edi edx
jmp r-xdata
mov edi [ ebp - 0x4 ]
jmp r-xdata
mov eax [ ebp + 0x10 ]
or [ esi + 0xc ] 0x20
mov eax [ ebp - 0x4 ]
jmp r-xdata
add [ ebp + 0x8 ] eax
sub ebx eax
cmp eax edi
jb r-xdata
push edi
push [ ebp + 0x8 ]
push [ esi + 0x10 ]
call sub_411941
add esp 0xc
cmp eax 0xffffffff
je r-xdata
sub eax ebx
xor edx edx
div [ ebp + 0xc ]
jmp r-xdata
_start
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x10
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
call [ GetVersion@IAT ]
xor edx edx
mov dl ah
mov [ rw-data ] edx
mov ecx eax
and ecx 0xff
mov [ rw-data ] ecx
shl ecx 0x8
add ecx edx
mov [ rw-data ] ecx
shr eax 0x10
mov [ rw-data ] eax
push 0x0
call sub_4129f4
pop ecx
test eax eax
jne r-xdata
and [ ebp - 0x4 ] 0x0
call sub_4126d4
call [ GetCommandLineA@IAT ]
mov [ rw-data ] eax
call sub_4125a2
mov [ rw-data ] eax
call sub_412355
call sub_41229c
call sub_40deeb
mov eax [ rw-data ]
mov [ rw-data ] eax
push eax
push [ rw-data ]
push [ rw-data ]
call sub_409ff0
add esp 0xc
mov [ ebp - 0x1c ] eax
push eax
call sub_40df18
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov ecx [ ecx ]
mov [ ebp - 0x20 ] ecx
push eax
push ecx
call sub_412118
pop ecx
pop ecx
retn
push 0x1c
call sub_40eaea
sub_40eb0e
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
leave
retn
mov eax [ rw-data ]
cmp eax 0x3
jne r-xdata
cmp eax 0x2
jne r-xdata
push esi
call sub_412d08
pop ecx
test eax eax
push esi
je r-xdata
push esi
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push esi
call sub_413a63
add esp 0xc
test eax eax
je r-xdata
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
push eax
call sub_412d33
pop ecx
pop ecx
jmp r-xdata
push eax
push [ ebp + 0x8 ]
push [ ebp - 0x4 ]
call sub_413aba
add esp 0xc
jmp r-xdata
sub_40eb93
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
mov [ esi ] r--data
push [ edi ]
call sub_40ec70
inc eax
push eax
call sub_40daa2
pop ecx
mov [ esi + 0x4 ] eax
test eax eax
pop ecx
je r-xdata
mov [ esi + 0x8 ] 0x1
mov eax esi
pop edi
pop esi
retn 0x4
push [ edi ]
push eax
call sub_413ee0
pop ecx
pop ecx
sub_40ebd0
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
mov [ esi ] r--data
mov eax [ edi + 0x8 ]
test eax eax
mov [ esi + 0x8 ] eax
je r-xdata
mov eax [ edi + 0x4 ]
mov [ esi + 0x4 ] eax
push [ edi + 0x4 ]
call sub_40ec70
inc eax
push eax
call sub_40daa2
pop ecx
mov [ esi + 0x4 ] eax
test eax eax
pop ecx
je r-xdata
mov eax esi
pop edi
pop esi
retn 0x4
push [ edi + 0x4 ]
push eax
call sub_413ee0
pop ecx
pop ecx
jmp r-xdata
sub_40ec70
mov ecx [ esp + 0x4 ]
test ecx 0x3
je r-xdata
mov eax [ ecx ]
mov edx 0x7efefeff
add edx eax
xor eax 0xffffffff
xor eax edx
add ecx 0x4
test eax 0x81010100
je r-xdata
mov al [ ecx ]
inc ecx
test al al
je r-xdata
mov eax [ ecx - 0x4 ]
test al al
je r-xdata
lea eax [ ecx - 0x1 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ecx 0x3
jne r-xdata
lea eax [ ecx - 0x4 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ah ah
je r-xdata
add eax 0x0
lea eax [ ecx - 0x3 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff0000
je r-xdata
lea eax [ ecx - 0x2 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff000000
je r-xdata
jmp r-xdata
sub_40ed0b
push ebp
mov ebp esp
sub esp 0x20
mov eax [ ebp + 0x8 ]
push esi
push edi
push 0x8
pop ecx
mov esi r--data
lea edi [ ebp - 0x20 ]
[ edi ] [ esi ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0xc ]
push eax
push [ ebp - 0x10 ]
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
call [ RaiseException@IAT ]
pop edi
pop esi
leave
retn 0x8
sub_40ed50
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
test edi 0x3
jne r-xdata
cmp edi eax
jb r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_40edb0 ]
jmp [ ecx * 4 + jump_table_40ee2c ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_40ee98 ]
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
inc esi
shr ecx 0x2
inc edi
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_40ee98 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
jmp [ ecx * 4 + jump_table_40f030 ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_40ef38 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40f030 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_40ee98 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_40ee98 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_40ee98 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
dec esi
shr ecx 0x2
dec edi
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_40f030 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40f030 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40f030 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40f030 ]
sub_40f085
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x18 ]
push edi
mov edi 0x19930520
cmp [ esi ] edi
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0x4 ] 0x66
je r-xdata
call sub_40f922
cmp [ esi + 0xc ] 0x0
je r-xdata
cmp [ esi + 0x4 ] 0x0
je r-xdata
push 0x1
pop eax
cmp [ eax ] 0xe06d7363
jne r-xdata
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x24 ]
push esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_40f120
add esp 0x20
cmp [ eax + 0x14 ] edi
jbe r-xdata
push 0xffffffff
push esi
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
call sub_40f3cc
add esp 0x10
jmp r-xdata
mov ecx [ eax + 0x1c ]
mov ecx [ ecx + 0x8 ]
test ecx ecx
je r-xdata
movzx edx [ ebp + 0x24 ]
push edx
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call ecx
add esp 0x20
jmp r-xdata
pop edi
pop esi
pop ebp
retn
sub_40f120
push ebp
mov ebp esp
sub esp 0x18
mov eax [ ebp + 0xc ]
and [ ebp - 0x14 ] 0x0
mov eax [ eax + 0x8 ]
cmp eax 0xffffffff
mov [ ebp - 0x10 ] eax
jl r-xdata
call sub_40f922
mov ecx [ ebp + 0x18 ]
cmp eax [ ecx + 0x4 ]
jl r-xdata
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
cmp [ esi + 0x10 ] 0x3
jne r-xdata
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov ebx 0xe06d7363
push edi
mov edi 0x19930520
cmp [ esi ] ebx
jne r-xdata
jmp sub_40f8cc
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp - 0x10 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_40f2c7
add esp 0x20
jmp r-xdata
cmp [ esi ] ebx
jne r-xdata
cmp [ esi + 0x14 ] edi
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp [ esi + 0x10 ] 0x3
jne r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
cmp [ esi + 0x14 ] edi
jne r-xdata
mov esi [ rw-data ]
test esi esi
je r-xdata
mov edi [ ebp - 0x10 ]
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push edi
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
call sub_40d937
add esp 0x14
mov ebx eax
mov eax [ rw-data ]
push 0x1
push esi
mov [ ebp + 0x10 ] eax
mov [ ebp - 0x14 ] 0x1
call sub_4140b8
pop ecx
test eax eax
pop ecx
jne r-xdata
cmp [ ebp + 0x1c ] 0x0
je r-xdata
cmp [ ebx ] edi
jg r-xdata
cmp [ esi ] ebx
jne r-xdata
call sub_40f922
push 0x1
push esi
call sub_40f7f5
pop ecx
pop ecx
inc [ ebp - 0x4 ]
add ebx 0x14
jmp r-xdata
cmp edi [ ebx + 0x4 ]
jg r-xdata
cmp [ esi + 0x10 ] 0x3
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x18 ]
jae r-xdata
mov eax [ ebx + 0x10 ]
mov [ ebp + 0x8 ] eax
mov eax [ ebx + 0xc ]
test eax eax
mov [ ebp - 0xc ] eax
jle r-xdata
cmp [ esi + 0x14 ] edi
jne r-xdata
mov edi [ ebp - 0x10 ]
mov eax [ esi + 0x1c ]
mov eax [ eax + 0xc ]
lea edi [ eax + 0x4 ]
mov eax [ eax ]
test eax eax
mov [ ebp - 0x8 ] eax
jle r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
dec [ ebp - 0xc ]
add [ ebp + 0x8 ] 0x10
cmp [ ebp - 0xc ] 0x0
jg r-xdata
push [ esi + 0x1c ]
push [ edi ]
push [ ebp + 0x8 ]
call sub_40f36f
add esp 0xc
test eax eax
jne r-xdata
call sub_40f922
jmp r-xdata
push [ ebp - 0x14 ]
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push ebx
push [ edi ]
push [ ebp + 0x8 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_40f480
add esp 0x2c
dec [ ebp - 0x8 ]
add edi 0x4
cmp [ ebp - 0x8 ] eax
jg r-xdata
sub_40f2c7
push ebp
mov ebp esp
push ecx
push ecx
cmp [ rw-data ] 0x0
push esi
push edi
je r-xdata
mov edi [ ebp + 0x1c ]
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push edi
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
call sub_40d937
add esp 0x14
mov esi eax
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40d80e
add esp 0x1c
test eax eax
jne r-xdata
pop edi
pop esi
leave
retn
cmp edi [ esi ]
jl r-xdata
inc [ ebp - 0x4 ]
add esi 0x14
jmp r-xdata
cmp edi [ esi + 0x4 ]
jg r-xdata
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x8 ]
jae r-xdata
mov eax [ esi + 0xc ]
mov ecx [ esi + 0x10 ]
shl eax 0x4
add eax ecx
mov ecx [ eax - 0xc ]
test ecx ecx
je r-xdata
push 0x1
add eax 0xfffffff0
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push esi
push 0x0
push eax
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40f480
add esp 0x2c
cmp [ ecx + 0x8 ] 0x0
jne r-xdata
sub_40f36f
push esi
push edi
mov edi [ esp + 0xc ]
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
push 0x1
pop eax
cmp [ eax + 0x8 ] 0x0
lea edx [ eax + 0x8 ]
je r-xdata
mov esi [ esp + 0x10 ]
mov ecx [ esi + 0x4 ]
cmp eax ecx
je r-xdata
test [ esi ] 0x2
je r-xdata
add ecx 0x8
push ecx
push edx
call sub_413fd0
pop ecx
test eax eax
pop ecx
jne r-xdata
mov eax [ esp + 0x14 ]
mov eax [ eax ]
test al 0x1
je r-xdata
test [ edi ] 0x8
je r-xdata
xor eax eax
jmp r-xdata
test al 0x2
je r-xdata
test [ edi ] 0x1
je r-xdata
pop edi
pop esi
retn
test [ edi ] 0x2
jne r-xdata
sub_40f3cc
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
mov ebx [ ebp + 0x8 ]
mov esi [ ebx + 0x8 ]
mov [ ebp - 0x1c ] esi
mov edi [ ebp + 0x10 ]
mov [ ebx + 0x8 ] esi
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
cmp esi 0xffffffff
jle r-xdata
call sub_40f922
cmp esi [ edi + 0x4 ]
jl r-xdata
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
push 0x103
push ebx
push eax
call sub_40f880
and [ ebp - 0x4 ] 0x0
mov eax [ edi + 0x8 ]
mov eax [ eax + esi * 8 + 0x4 ]
test eax eax
je r-xdata
mov eax [ edi + 0x8 ]
mov esi [ eax + esi * 8 ]
mov [ ebp - 0x1c ] esi
jmp r-xdata
cmp esi [ ebp + 0x14 ]
je r-xdata
sub_40f480
push ebp
mov ebp esp
cmp [ ebp + 0x20 ] 0x0
push ebx
mov ebx [ ebp + 0x1c ]
push esi
push edi
mov edi [ ebp + 0xc ]
je r-xdata
cmp [ ebp + 0x2c ] 0x0
push [ ebp + 0x8 ]
jne r-xdata
push [ ebp + 0x20 ]
push ebx
push edi
push [ ebp + 0x8 ]
call sub_40f631
add esp 0x10
push [ ebp + 0x2c ]
push edi
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
push edi
push eax
call sub_40d6ce
call sub_40d710
mov esi [ ebp + 0x24 ]
push [ esi ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push edi
call sub_40f3cc
mov eax [ esi + 0x4 ]
push 0x100
push [ ebp + 0x28 ]
inc eax
mov [ edi + 0x8 ] eax
push [ ebx + 0xc ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push edi
push [ ebp + 0x8 ]
call sub_40f4fb
add esp 0x2c
test eax eax
je r-xdata
sub_40f4fb
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x1c
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x2c ] eax
xor ebx ebx
mov [ ebp - 0x24 ] ebx
mov esi [ ebp + 0xc ]
mov ecx [ esi - 0x4 ]
mov [ ebp - 0x28 ] ecx
mov ecx [ rw-data ]
mov [ ebp - 0x1c ] ecx
mov ecx [ rw-data ]
mov [ ebp - 0x20 ] ecx
mov edi [ ebp + 0x8 ]
mov [ rw-data ] edi
mov ecx [ ebp + 0x10 ]
mov [ rw-data ] ecx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x4 ] 0x1
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push eax
push [ ebp + 0x14 ]
push esi
call sub_40d795
add esp 0x14
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x4 ] ebx
or [ ebp - 0x4 ] 0xffffffff
call sub_40f5c1
mov eax [ ebp - 0x2c ]
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
sub_40f5c1
mov eax [ ebp - 0x28 ]
mov [ esi - 0x4 ] eax
mov eax [ ebp - 0x1c ]
mov [ rw-data ] eax
mov eax [ ebp - 0x20 ]
mov [ rw-data ] eax
cmp [ edi ] 0xe06d7363
jne r-xdata
retn
cmp [ edi + 0x10 ] 0x3
jne r-xdata
cmp [ edi + 0x14 ] 0x19930520
jne r-xdata
cmp [ ebp - 0x24 ] ebx
jne r-xdata
cmp [ ebp - 0x2c ] ebx
je r-xdata
call sub_40da5e
push eax
push edi
call sub_40f7f5
pop ecx
pop ecx
sub_40f607
mov eax [ esp + 0x4 ]
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x10 ] 0x3
jne r-xdata
cmp [ eax + 0x14 ] 0x19930520
jne r-xdata
cmp [ eax + 0x1c ] 0x0
jne r-xdata
push 0x1
pop eax
retn
sub_40f631
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
mov ecx [ ebp + 0x10 ]
mov eax [ ecx + 0x4 ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ecx + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp + 0xc ]
lea edi [ eax + edx + 0xc ]
and [ ebp - 0x4 ] 0x0
test [ ecx ] 0x8
je r-xdata
mov esi [ ebp + 0x14 ]
test [ esi ] 0x1
je r-xdata
mov esi [ ebp + 0x8 ]
push 0x1
push [ esi + 0x18 ]
call sub_4140b8
pop ecx
pop ecx
test eax eax
je r-xdata
cmp [ esi + 0x18 ] 0x0
mov ebx [ ebp + 0x8 ]
push 0x1
push [ ebx + 0x18 ]
jne r-xdata
mov ebx [ ebp + 0x8 ]
push 0x1
push [ ebx + 0x18 ]
call sub_4140b8
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_40f922
push 0x1
push edi
call sub_4140d4
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_4140b8
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_4140b8
pop ecx
pop ecx
test eax eax
je r-xdata
push 0x1
push edi
call sub_4140d4
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ esi + 0x18 ]
mov [ edi ] eax
mov ecx [ ebp + 0x14 ]
add ecx 0x8
push ecx
push 0x1
push edi
call sub_4140d4
pop ecx
pop ecx
test eax eax
je r-xdata
push 0x1
push edi
call sub_4140d4
pop ecx
pop ecx
test eax eax
je r-xdata
push [ esi + 0x14 ]
push [ ebx + 0x18 ]
push edi
call sub_40db20
add esp 0xc
cmp [ esi + 0x14 ] 0x4
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
push [ esi + 0x18 ]
call sub_4140f0
pop ecx
test eax eax
je r-xdata
push [ esi + 0x14 ]
add esi 0x8
push esi
push [ ebx + 0x18 ]
call sub_40f85c
pop ecx
pop ecx
push eax
push edi
call sub_40db20
add esp 0xc
jmp r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
test [ esi ] 0x4
je r-xdata
add esi 0x8
push esi
jmp r-xdata
lea eax [ esi + 0x8 ]
push eax
push [ ebx + 0x18 ]
call sub_40f85c
pop ecx
pop ecx
push eax
push [ esi + 0x18 ]
push edi
call sub_40d702
jmp r-xdata
push 0x1
lea eax [ esi + 0x8 ]
push eax
push [ ebx + 0x18 ]
call sub_40f85c
pop ecx
pop ecx
push eax
push [ esi + 0x18 ]
push edi
call sub_40d709
jmp r-xdata
push eax
call sub_40f85c
pop ecx
pop ecx
mov [ edi ] eax
jmp r-xdata
sub_40f7f5
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
mov ecx [ eax + 0x1c ]
mov ecx [ ecx + 0x4 ]
test ecx ecx
je r-xdata
and [ ebp - 0x4 ] 0x0
push ecx
push [ eax + 0x18 ]
call sub_40d702
or [ ebp - 0x4 ] 0xffffffff
sub_40f85c
mov ecx [ esp + 0x8 ]
push esi
mov esi [ esp + 0x8 ]
mov eax [ ecx ]
mov edx [ ecx + 0x4 ]
add eax esi
test edx edx
jl r-xdata
pop esi
retn
mov esi [ edx + esi ]
mov ecx [ ecx + 0x8 ]
mov ecx [ esi + ecx ]
add ecx edx
add eax ecx
sub_40f880
push ebp
mov ebp esp
sub esp 0x4
push ebx
push ecx
mov eax [ ebp + 0xc ]
add eax 0xc
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebp
push [ ebp + 0x10 ]
mov ecx [ ebp + 0x10 ]
mov ebp [ ebp - 0x4 ]
call sub_40da81
push esi
push edi
call eax
pop edi
pop esi
mov ebx ebp
pop ebp
mov ecx [ ebp + 0x10 ]
push ebp
mov ebp ebx
cmp ecx 0x100
jne r-xdata
push ecx
call sub_40da81
pop ebp
pop ecx
pop ebx
leave
retn 0xc
mov ecx 0x2
sub_40f8cc
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
and [ ebp - 0x4 ] 0x0
mov eax [ rw-data ]
test eax eax
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
call $+5
jmp r-xdata
mov [ ebp - 0x4 ] 0x1
call eax
jmp r-xdata
push 0xa
call sub_412b6d
push 0x16
call sub_416a68
pop ecx
pop ecx
push 0x3
call sub_40df29
and [ ebp - 0x4 ] 0x0
sub_40f922
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
and [ ebp - 0x4 ] 0x0
mov eax [ rw-data ]
test eax eax
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
call $+5
jmp sub_40f8cc
mov [ ebp - 0x4 ] 0x1
call eax
jmp r-xdata
and [ ebp - 0x4 ] 0x0
sub_40f98a
cmp [ esp + 0x4 ] 0xffffffe0
ja r-xdata
xor eax eax
push [ esp + 0x4 ]
call sub_40f9b6
test eax eax
pop ecx
jne r-xdata
retn
cmp [ esp + 0x8 ] eax
je r-xdata
push [ esp + 0x4 ]
call sub_41411f
test eax eax
pop ecx
jne r-xdata
sub_40f9b6
mov eax [ rw-data ]
push esi
mov esi [ esp + 0x8 ]
cmp eax 0x3
jne r-xdata
cmp eax 0x2
jne r-xdata
cmp esi [ rw-data ]
ja r-xdata
test esi esi
jne r-xdata
mov eax [ esp + 0x8 ]
test eax eax
je r-xdata
push esi
call sub_41305c
test eax eax
pop ecx
je r-xdata
add esi 0xf
and esi 0xfffffff0
push 0x1
pop esi
push 0x10
pop esi
lea esi [ eax + 0xf ]
and esi 0xfffffff0
jmp r-xdata
pop esi
retn
push esi
push 0x0
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov eax esi
shr eax 0x4
push eax
call sub_413aff
test eax eax
pop ecx
jne r-xdata
cmp esi [ rw-data ]
ja r-xdata
pop esi
retn
jmp r-xdata
sub_40fa2a
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0xc ]
mov eax [ esi + 0xc ]
mov ebx [ esi + 0x10 ]
test al 0x82
je r-xdata
or al 0x20
mov [ esi + 0xc ] eax
test al 0x40
jne r-xdata
test al 0x1
je r-xdata
mov eax [ esi + 0xc ]
and [ esi + 0x4 ] 0x0
and [ ebp + 0xc ] 0x0
and al 0xef
or al 0x2
test ax 0x10c
mov [ esi + 0xc ] eax
jne r-xdata
and [ esi + 0x4 ] 0x0
test al 0x10
je r-xdata
test [ esi + 0xc ] 0x108
push edi
je r-xdata
cmp esi rw-data
je r-xdata
mov ecx [ esi + 0x8 ]
and al 0xfe
mov [ esi ] ecx
mov [ esi + 0xc ] eax
push 0x1
lea eax [ ebp + 0x8 ]
pop edi
push edi
push eax
push ebx
call sub_411941
add esp 0xc
mov [ ebp + 0xc ] eax
mov eax [ esi + 0x8 ]
mov edi [ esi ]
sub edi eax
lea ecx [ eax + 0x1 ]
mov [ esi ] ecx
mov ecx [ esi + 0x18 ]
dec ecx
test edi edi
mov [ esi + 0x4 ] ecx
jle r-xdata
push ebx
call sub_41417e
test eax eax
pop ecx
jne r-xdata
cmp esi rw-data
jne r-xdata
mov eax [ ebp + 0x8 ]
and eax 0xff
jmp r-xdata
or [ esi + 0xc ] 0x20
jmp r-xdata
cmp ebx 0xffffffff
je r-xdata
push edi
push eax
push ebx
call sub_411941
add esp 0xc
mov [ ebp + 0xc ] eax
jmp r-xdata
push esi
call sub_41413a
pop ecx
pop esi
pop ebx
pop ebp
retn
or eax 0xffffffff
mov eax rw-data
mov eax ebx
mov ecx ebx
sar eax 0x5
and ecx 0x1f
mov eax [ eax * 4 + rw-data ]
lea eax [ eax + ecx * 8 ]
jmp r-xdata
mov eax [ esi + 0x8 ]
mov cl [ ebp + 0x8 ]
mov [ eax ] cl
jmp r-xdata
push 0x2
push 0x0
push ebx
call sub_410c18
add esp 0xc
test [ eax + 0x4 ] 0x20
je r-xdata
cmp [ ebp + 0xc ] edi
pop edi
je r-xdata
sub_40fb3f
push ebp
mov ebp esp
sub esp 0x24c
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ecx ecx
push edi
mov [ ebp - 0x10 ] ecx
mov bl [ esi ]
inc esi
test bl bl
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x30 ] ecx
mov [ ebp + 0xc ] esi
je r-xdata
mov eax [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
leave
retn
mov edi 0x800
mov edx 0x200
jmp r-xdata
cmp [ ebp - 0x14 ] 0x0
jl r-xdata
cmp bl 0x20
jl r-xdata
xor eax eax
cmp bl 0x78
jg r-xdata
mov esi [ ebp + 0xc ]
mov bl [ esi ]
inc esi
test bl bl
mov [ ebp + 0xc ] esi
jne r-xdata
jmp [ eax * 4 + jump_table_4102bd ]
movsx eax bl
mov al [ eax + r--data ]
and eax 0xf
jmp r-xdata
mov ecx [ ebp - 0x3c ]
mov edx 0x200
mov edi 0x800
xor eax eax
or [ ebp - 0x8 ] 0xffffffff
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x2c ] eax
jmp r-xdata
movsx eax bl
sub eax 0x20
je r-xdata
cmp bl 0x2a
jne r-xdata
and [ ebp - 0x8 ] 0x0
jmp r-xdata
cmp bl 0x2a
jne r-xdata
cmp bl 0x49
je r-xdata
mov ecx [ rw-data ]
and [ ebp - 0x2c ] 0x0
movzx eax bl
test [ ecx + eax * 2 + 0x1 ] 0x80
je r-xdata
movsx eax bl
cmp eax 0x67
jg r-xdata
movsx eax [ ecx + eax * 8 + r--data ]
sar eax 0x4
cmp eax 0x7
mov [ ebp - 0x3c ] eax
ja r-xdata
or [ ebp - 0x4 ] 0x2
jmp r-xdata
sub eax 0x3
je r-xdata
mov eax [ ebp - 0x28 ]
movsx ecx bl
lea eax [ eax + eax * 4 ]
lea eax [ ecx + eax * 2 - 0x30 ]
jmp r-xdata
lea eax [ ebp + 0x10 ]
push eax
call sub_41037b
test eax eax
pop ecx
mov [ ebp - 0x28 ] eax
jge r-xdata
mov eax [ ebp - 0x8 ]
movsx ecx bl
lea eax [ eax + eax * 4 ]
lea eax [ ecx + eax * 2 - 0x30 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
lea eax [ ebp + 0x10 ]
push eax
call sub_41037b
test eax eax
pop ecx
mov [ ebp - 0x8 ] eax
jge r-xdata
cmp [ esi ] 0x36
jne r-xdata
cmp bl 0x68
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x8 ]
movsx eax bl
push eax
call sub_4102dd
add esp 0xc
jmp r-xdata
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x8 ]
movsx eax bl
push eax
call sub_4102dd
mov bl [ esi ]
add esp 0xc
inc esi
mov [ ebp + 0xc ] esi
sub eax 0x69
je r-xdata
cmp eax 0x65
jge r-xdata
or [ ebp - 0x4 ] 0x80
jmp r-xdata
sub eax 0x8
je r-xdata
mov [ ebp - 0x28 ] eax
jmp r-xdata
or [ ebp - 0x4 ] 0x4
neg eax
or [ ebp - 0x8 ] 0xffffffff
jmp r-xdata
and [ ebp - 0x3c ] 0x0
cmp [ esi + 0x1 ] 0x34
jne r-xdata
or [ ebp - 0x4 ] 0x20
jmp r-xdata
cmp bl 0x6c
je r-xdata
or [ ebp - 0x4 ] 0x40
sub eax 0x5
je r-xdata
or [ ebp - 0x4 ] 0x40
cmp [ ebp - 0x8 ] 0x0
lea edi [ ebp - 0x24c ]
mov [ ebp - 0xc ] edi
jge r-xdata
cmp eax 0x58
jg r-xdata
or [ ebp - 0x4 ] 0x1
jmp r-xdata
dec eax
dec eax
je r-xdata
inc esi
inc esi
or [ ebp - 0x3 ] 0x80
mov [ ebp + 0xc ] esi
jmp r-xdata
or [ ebp - 0x4 ] 0x10
jmp r-xdata
cmp bl 0x77
jne r-xdata
test [ ebp - 0x4 ] 0x20
je r-xdata
lea eax [ ebp + 0x10 ]
push eax
call sub_410388
pop ecx
jmp r-xdata
lea eax [ ebp + 0x10 ]
push eax
call sub_41037b
test [ ebp - 0x4 ] 0x20
pop ecx
je r-xdata
dec eax
je r-xdata
jne r-xdata
mov [ ebp - 0x8 ] 0x6
jmp r-xdata
sub eax 0x5a
je r-xdata
je r-xdata
or [ ebp - 0x4 ] 0x4
jmp r-xdata
sub eax 0x3
jne r-xdata
or [ ebp - 0x4 ] edi
jmp r-xdata
test [ ebp - 0x4 ] 0x40
lea eax [ ebp + 0x10 ]
push eax
je r-xdata
test [ ebp - 0x4 ] 0x40
lea eax [ ebp + 0x10 ]
push eax
je r-xdata
test [ ebp - 0x4 ] 0x40
je r-xdata
mov ecx [ ebp - 0x14 ]
mov [ eax ] ecx
mov cx [ ebp - 0x14 ]
mov [ eax ] cx
jmp r-xdata
test [ ebp - 0x4 ] 0x80
mov [ ebp - 0x10 ] 0x8
je r-xdata
dec eax
je r-xdata
cmp [ ebp - 0x8 ] edx
jle r-xdata
cmp bl 0x67
jne r-xdata
mov eax [ ebp + 0x10 ]
push [ ebp - 0x40 ]
add eax 0x8
mov [ ebp + 0x10 ] eax
push [ ebp - 0x8 ]
mov ecx [ eax - 0x8 ]
mov [ ebp - 0x4c ] ecx
mov eax [ eax - 0x4 ]
mov [ ebp - 0x48 ] eax
movsx eax bl
push eax
lea eax [ ebp - 0x4c ]
push edi
push eax
call [ rw-data ]
mov esi [ ebp - 0x4 ]
add esp 0x14
and esi 0x80
je r-xdata
lea eax [ ebp + 0x10 ]
push eax
call sub_41037b
test eax eax
pop ecx
je r-xdata
sub eax 0x9
je r-xdata
mov [ ebp - 0x34 ] 0x7
sub eax 0x43
je r-xdata
or [ ebp - 0x4 ] 0x8
jmp r-xdata
call sub_41037b
pop ecx
xor edx edx
call sub_41037b
pop ecx
jmp r-xdata
call sub_41037b
pop ecx
movzx eax ax
jmp r-xdata
call sub_41037b
pop ecx
movsx eax ax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] edx
test edx edx
jg r-xdata
cmp [ ebp - 0x30 ] 0x0
je r-xdata
mov [ ebp - 0x38 ] 0x1
jmp r-xdata
test [ ebp - 0x3 ] 0x80
je r-xdata
or [ ebp - 0x4 ] edx
jmp r-xdata
mov [ ebp - 0x8 ] 0x8
sub eax 0x3
je r-xdata
cmp [ ebp - 0x8 ] 0xa3
jle r-xdata
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x8 ] 0x1
jmp r-xdata
cmp bl 0x67
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov [ ebp - 0xc ] eax
push eax
jmp r-xdata
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
test [ ebp - 0x4 ] 0x810
lea eax [ ebp + 0x10 ]
push eax
je r-xdata
dec eax
je r-xdata
mov al [ ebp - 0x34 ]
mov [ ebp - 0x16 ] 0x30
add al 0x51
mov [ ebp - 0x24 ] 0x2
mov [ ebp - 0x15 ] al
jmp r-xdata
test [ ebp - 0x4 ] 0x830
jne r-xdata
dec eax
dec eax
je r-xdata
cdq
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
jge r-xdata
and [ ebp - 0x1c ] 0x0
jl r-xdata
push [ ebp - 0x30 ]
call sub_40eb0e
and [ ebp - 0x30 ] 0x0
pop ecx
cmp [ ebp - 0x8 ] 0xffffffff
mov esi 0x7fffffff
je r-xdata
dec eax
dec eax
je r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x15d
push eax
call sub_40f978
test eax eax
pop ecx
mov [ ebp - 0x30 ] eax
je r-xdata
cmp [ edi ] 0x2d
jne r-xdata
test esi esi
jne r-xdata
push edi
call [ rw-data ]
pop ecx
call sub_40ec70
pop ecx
jmp r-xdata
test [ ebp - 0x4 ] edi
je r-xdata
call sub_41037b
pop ecx
mov [ ebp - 0x24c ] al
mov [ ebp - 0x10 ] 0x1
call sub_410398
push eax
lea eax [ ebp - 0x24c ]
push eax
call sub_4141a4
add esp 0xc
mov [ ebp - 0x10 ] eax
test eax eax
jge r-xdata
jmp r-xdata
or [ ebp - 0x4 ] edi
mov [ ebp - 0x40 ] 0x1
add bl 0x20
dec eax
dec eax
je r-xdata
and [ ebp - 0x4 ] 0xfffffff7
mov eax 0x200
cmp [ ebp - 0x8 ] eax
jle r-xdata
mov [ ebp - 0x8 ] 0x1
jmp r-xdata
neg eax
adc edx 0x0
mov [ ebp - 0x20 ] eax
neg edx
or [ ebp - 0x3 ] 0x1
mov [ ebp - 0x1c ] edx
jmp r-xdata
test eax eax
jae r-xdata
lea eax [ ebp + 0x10 ]
push eax
call sub_41037b
test [ ebp - 0x4 ] 0x810
pop ecx
mov ecx eax
mov [ ebp - 0xc ] ecx
je r-xdata
mov esi [ ebp - 0x8 ]
mov [ ebp - 0x10 ] 0xa
sub eax 0x3
jne r-xdata
mov [ ebp - 0x8 ] 0xa3
mov edi eax
mov [ ebp - 0xc ] edi
jmp r-xdata
push edi
or [ ebp - 0x3 ] 0x1
inc edi
mov [ ebp - 0xc ] edi
push edi
call [ rw-data ]
pop ecx
mov [ ebp - 0x10 ] eax
and [ ebp - 0x2c ] 0x0
mov [ ebp - 0xc ] ecx
movsx eax [ eax ]
jmp r-xdata
movsx eax [ eax ]
shr eax 0x1
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x2c ] 0x1
jmp r-xdata
cmp [ ebp - 0x38 ] 0x0
jne r-xdata
lea eax [ ebp - 0x24c ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov [ ebp - 0x38 ] 0x1
jmp r-xdata
sub eax 0xc
jne r-xdata
mov eax [ ebp - 0x20 ]
or eax [ ebp - 0x1c ]
jne r-xdata
mov [ ebp - 0x8 ] eax
test [ ebp - 0x3 ] 0x80
jne r-xdata
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
mov [ ebp - 0x34 ] 0x27
jmp r-xdata
mov ebx [ ebp - 0x4 ]
test bl 0x40
je r-xdata
test [ ebp - 0x4 ] 0x830
jne r-xdata
lea eax [ ebp - 0x4d ]
mov [ ebp - 0xc ] eax
and [ ebp - 0x24 ] 0x0
mov eax ecx
mov ecx [ rw-data ]
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x2c ] 0x1
mov eax ecx
mov ecx [ rw-data ]
mov [ ebp - 0xc ] ecx
test [ ebp - 0x4 ] 0x80
mov [ ebp - 0x10 ] 0x10
je r-xdata
mov esi [ ebp - 0x28 ]
sub esi [ ebp - 0x24 ]
sub esi [ ebp - 0x10 ]
test bl 0xc
jne r-xdata
test bh 0x1
je r-xdata
or [ ebp - 0x4 ] edi
mov eax [ ebp - 0x10 ]
cdq
mov edi edx
mov esi eax
push edi
push esi
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
call sub_414280
push edi
push esi
push [ ebp - 0x1c ]
mov ebx eax
add ebx 0x30
push [ ebp - 0x20 ]
call sub_414210
cmp ebx 0x39
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] edx
jle r-xdata
mov eax [ ebp - 0x20 ]
or eax [ ebp - 0x1c ]
je r-xdata
sub eax ecx
jmp r-xdata
cmp [ eax ] 0x0
je r-xdata
sub eax ecx
sar eax 0x1
jmp r-xdata
cmp [ eax ] 0x0
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x16 ]
push [ ebp + 0x8 ]
push [ ebp - 0x24 ]
push eax
call sub_410343
add esp 0x10
test bl 0x8
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x8 ]
push esi
push 0x20
call sub_410312
add esp 0x10
test bl 0x1
je r-xdata
mov [ ebp - 0x16 ] 0x2d
jmp r-xdata
mov eax [ ebp - 0xc ]
dec [ ebp - 0xc ]
mov [ eax ] bl
jmp r-xdata
add ebx [ ebp - 0x34 ]
lea eax [ ebp - 0x4d ]
sub eax [ ebp - 0xc ]
inc [ ebp - 0xc ]
test [ ebp - 0x3 ] 0x2
mov [ ebp - 0x10 ] eax
je r-xdata
inc eax
jmp r-xdata
inc eax
inc eax
jmp r-xdata
cmp [ ebp - 0x2c ] 0x0
je r-xdata
test bl 0x4
jne r-xdata
test bl 0x2
je r-xdata
mov [ ebp - 0x16 ] 0x2b
jmp r-xdata
mov [ ebp - 0x24 ] 0x1
mov eax [ ebp - 0x8 ]
dec [ ebp - 0x8 ]
test eax eax
jg r-xdata
mov ecx [ ebp - 0xc ]
cmp [ ecx ] 0x30
jne r-xdata
mov edx esi
dec esi
test edx edx
je r-xdata
mov edx esi
dec esi
test edx edx
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x8 ]
push [ ebp - 0x10 ]
push [ ebp - 0xc ]
call sub_410343
add esp 0x10
cmp [ ebp - 0x10 ] 0x0
jle r-xdata
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x8 ]
push esi
push 0x30
call sub_410312
add esp 0x10
mov [ ebp - 0x16 ] 0x20
dec [ ebp - 0xc ]
inc eax
mov ecx [ ebp - 0xc ]
mov [ ecx ] 0x30
test eax eax
jne r-xdata
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x8 ]
push esi
push 0x20
call sub_410312
add esp 0x10
mov eax [ ebp - 0x10 ]
mov ebx [ ebp - 0xc ]
lea edi [ eax - 0x1 ]
test [ ebp - 0x4 ] 0x4
je r-xdata
lea ecx [ ebp - 0x14 ]
push ecx
push [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x44 ]
push eax
call sub_410343
add esp 0x10
mov eax edi
dec edi
test eax eax
jne r-xdata
mov ax [ ebx ]
inc ebx
push eax
lea eax [ ebp - 0x44 ]
push eax
inc ebx
call sub_4141a4
pop ecx
test eax eax
pop ecx
jle r-xdata
jmp r-xdata
sub_4102dd
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
dec [ ecx + 0x4 ]
js r-xdata
push ecx
push [ ebp + 0x8 ]
call sub_40fa2a
pop ecx
pop ecx
mov edx [ ecx ]
mov al [ ebp + 0x8 ]
mov [ edx ] al
inc [ ecx ]
movzx eax al
jmp r-xdata
inc [ eax ]
pop ebp
retn
or [ eax ] 0xffffffff
pop ebp
retn
cmp eax 0xffffffff
mov eax [ ebp + 0x10 ]
jne r-xdata
sub_410312
push esi
push edi
mov edi [ esp + 0x10 ]
mov eax edi
dec edi
test eax eax
jle r-xdata
pop edi
pop esi
retn
mov esi [ esp + 0x18 ]
mov eax edi
dec edi
test eax eax
jg r-xdata
push esi
push [ esp + 0x18 ]
push [ esp + 0x14 ]
call sub_4102dd
add esp 0xc
cmp [ esi ] 0xffffffff
je r-xdata
sub_410343
push ebx
mov ebx [ esp + 0xc ]
mov eax ebx
dec ebx
push esi
push edi
test eax eax
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov edi [ esp + 0x1c ]
mov esi [ esp + 0x10 ]
mov eax ebx
dec ebx
test eax eax
jg r-xdata
movsx eax [ esi ]
push edi
inc esi
push [ esp + 0x1c ]
push eax
call sub_4102dd
add esp 0xc
cmp [ edi ] 0xffffffff
je r-xdata
sub_4103a6
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
lea ecx [ eax + 0x1 ]
cmp ecx 0x100
ja r-xdata
mov ecx eax
push esi
mov esi [ rw-data ]
sar ecx 0x8
movzx edx cl
test [ esi + edx * 2 + 0x1 ] 0x80
pop esi
je r-xdata
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
jmp r-xdata
and [ ebp - 0x3 ] 0x0
mov [ ebp - 0x4 ] al
push 0x1
and [ ebp - 0x2 ] 0x0
mov [ ebp - 0x4 ] cl
mov [ ebp - 0x3 ] al
push 0x2
jmp r-xdata
and eax [ ebp + 0xc ]
leave
retn
movzx eax [ ebp + 0xa ]
leave
retn
pop eax
lea ecx [ ebp + 0xa ]
push 0x1
push 0x0
push 0x0
push ecx
push eax
lea eax [ ebp - 0x4 ]
push eax
push 0x1
call sub_4142f5
add esp 0x1c
test eax eax
jne r-xdata
sub_410420
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
or ecx eax
mov ecx [ esp + 0xc ]
jne r-xdata
push ebx
mul ecx
mov ebx eax
mov eax [ esp + 0x8 ]
mul [ esp + 0x14 ]
add ebx eax
mov eax [ esp + 0x8 ]
mul ecx
add edx ebx
pop ebx
retn 0x10
mov eax [ esp + 0x4 ]
mul ecx
retn 0x10
sub_410454
push esi
mov esi [ esp + 0x8 ]
push [ esi + 0x10 ]
call sub_41417e
test eax eax
pop ecx
je r-xdata
xor eax eax
pop esi
retn
cmp esi rw-data
jne r-xdata
cmp esi rw-data
jne r-xdata
xor eax eax
jmp r-xdata
push 0x1
pop eax
inc [ rw-data ]
test [ esi + 0xc ] 0x10c
jne r-xdata
cmp [ eax * 4 + rw-data ] 0x0
push ebx
push edi
lea edi [ eax * 4 + rw-data ]
mov ebx 0x1000
jne r-xdata
mov edi [ edi ]
mov [ esi + 0x18 ] ebx
mov [ esi + 0x8 ] edi
mov [ esi ] edi
mov [ esi + 0x4 ] ebx
push ebx
call sub_40f978
test eax eax
pop ecx
mov [ edi ] eax
jne r-xdata
lea eax [ esi + 0x14 ]
push 0x2
mov [ esi + 0x8 ] eax
mov [ esi ] eax
pop eax
mov [ esi + 0x18 ] eax
mov [ esi + 0x4 ] eax
jmp r-xdata
or [ esi + 0xc ] 0x1102
push 0x1
pop eax
pop edi
pop ebx
pop esi
retn
sub_4104e1
cmp [ esp + 0x4 ] 0x0
push esi
je r-xdata
mov eax [ esp + 0xc ]
test [ eax + 0xd ] 0x10
je r-xdata
mov esi [ esp + 0xc ]
test [ esi + 0xd ] 0x10
je r-xdata
pop esi
retn
push eax
call sub_4106f0
pop ecx
push esi
call sub_4106f0
and [ esi + 0xd ] 0xee
and [ esi + 0x18 ] 0x0
and [ esi ] 0x0
and [ esi + 0x8 ] 0x0
pop ecx
pop esi
retn
sub_41051e
mov eax [ rw-data ]
push esi
push 0x14
test eax eax
pop esi
jne r-xdata
cmp eax esi
jge r-xdata
mov eax 0x200
jmp r-xdata
push 0x4
push eax
call sub_41443e
pop ecx
mov [ rw-data ] eax
test eax eax
pop ecx
jne r-xdata
mov eax esi
mov [ rw-data ] eax
xor ecx ecx
mov eax rw-data
push 0x4
push esi
mov [ rw-data ] esi
call sub_41443e
pop ecx
mov [ rw-data ] eax
test eax eax
pop ecx
jne r-xdata
mov edx [ rw-data ]
mov [ ecx + edx ] eax
add eax 0x20
add ecx 0x4
cmp eax rw-data
jl r-xdata
xor edx edx
mov ecx rw-data
push 0x1a
call sub_40eac5
pop ecx
or [ ecx ] 0xffffffff
test eax eax
jne r-xdata
mov eax edx
mov esi edx
sar eax 0x5
and esi 0x1f
mov eax [ eax * 4 + rw-data ]
mov eax [ eax + esi * 8 ]
cmp eax 0xffffffff
je r-xdata
pop esi
retn
add ecx 0x20
inc edx
cmp ecx rw-data
jl r-xdata
sub_4105d7
push ebx
push ebp
push esi
push edi
mov edi [ esp + 0x14 ]
cmp edi [ rw-data ]
jae r-xdata
and [ rw-data ] 0x0
mov [ rw-data ] 0x9
mov eax edi
mov esi edi
sar eax 0x5
and esi 0x1f
lea ebx [ eax * 4 + rw-data ]
shl esi 0x3
mov eax [ ebx ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
push edi
call sub_414734
cmp eax 0xffffffff
pop ecx
je r-xdata
xor ebp ebp
cmp edi 0x1
je r-xdata
xor eax eax
jmp r-xdata
push ebp
call sub_414547
pop ecx
jmp r-xdata
push 0x2
call sub_414734
push 0x1
mov ebp eax
call sub_414734
pop ecx
cmp eax ebp
pop ecx
je r-xdata
cmp edi 0x2
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn
or eax 0xffffffff
push edi
call sub_414734
pop ecx
push eax
call [ CloseHandle@IAT ]
test eax eax
jne r-xdata
call [ GetLastError@IAT ]
mov ebp eax
jmp r-xdata
push edi
call sub_4146ba
mov eax [ ebx ]
pop ecx
and [ eax + esi + 0x4 ] 0x0
test ebp ebp
je r-xdata
sub_41068a
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi + 0xc ]
test al 0x83
je r-xdata
pop esi
retn
test al 0x8
je r-xdata
push [ esi + 0x8 ]
call sub_40eb0e
and [ esi + 0xc ] 0xfbf7
xor eax eax
pop ecx
mov [ esi ] eax
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] eax
sub_4106b5
push esi
mov esi [ esp + 0x8 ]
test esi esi
jne r-xdata
push esi
call sub_4106f0
test eax eax
pop ecx
je r-xdata
push esi
call sub_410755
pop ecx
pop esi
retn
test [ esi + 0xd ] 0x40
je r-xdata
or eax 0xffffffff
pop esi
retn
xor eax eax
pop esi
retn
push [ esi + 0x10 ]
call sub_414771
neg eax
pop ecx
pop esi
sbb eax eax
retn
sub_4106f0
push ebx
push esi
mov esi [ esp + 0xc ]
xor ebx ebx
push edi
mov eax [ esi + 0xc ]
mov ecx eax
and ecx 0x3
cmp cl 0x2
jne r-xdata
mov eax [ esi + 0x8 ]
and [ esi + 0x4 ] 0x0
mov [ esi ] eax
pop edi
mov eax ebx
pop esi
pop ebx
retn
test ax 0x108
je r-xdata
mov eax [ esi + 0x8 ]
mov edi [ esi ]
sub edi eax
test edi edi
jle r-xdata
push edi
push eax
push [ esi + 0x10 ]
call sub_411941
add esp 0xc
cmp eax edi
jne r-xdata
or [ esi + 0xc ] 0x20
or ebx 0xffffffff
mov eax [ esi + 0xc ]
test al 0x80
je r-xdata
and al 0xfd
mov [ esi + 0xc ] eax
jmp r-xdata
sub_410755
push ebx
push esi
push edi
xor esi esi
xor ebx ebx
xor edi edi
cmp [ rw-data ] esi
jle r-xdata
cmp [ esp + 0x10 ] 0x1
mov eax ebx
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
inc esi
cmp esi [ rw-data ]
jl r-xdata
mov ecx [ eax + 0xc ]
test cl 0x83
je r-xdata
cmp [ esp + 0x10 ] 0x1
jne r-xdata
cmp [ esp + 0x10 ] 0x0
jne r-xdata
push eax
call sub_4106b5
cmp eax 0xffffffff
pop ecx
je r-xdata
test cl 0x2
je r-xdata
inc ebx
jmp r-xdata
push eax
call sub_4106b5
cmp eax 0xffffffff
pop ecx
jne r-xdata
or edi eax
sub_4107c2
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi + 0xc ]
test al 0x83
je r-xdata
or eax 0xffffffff
pop esi
retn
test al 0x40
jne r-xdata
test al 0x2
je r-xdata
or al 0x1
test ax 0x10c
mov [ esi + 0xc ] eax
jne r-xdata
or al 0x20
mov [ esi + 0xc ] eax
jmp r-xdata
mov eax [ esi + 0x8 ]
mov [ esi ] eax
push esi
call sub_41413a
pop ecx
jmp r-xdata
neg eax
sbb eax eax
and eax 0x10
add eax 0x10
or [ esi + 0xc ] eax
and [ esi + 0x4 ] 0x0
cmp eax 0xffffffff
je r-xdata
push [ esi + 0x18 ]
push [ esi + 0x8 ]
push [ esi + 0x10 ]
call sub_41089b
add esp 0xc
mov [ esi + 0x4 ] eax
test eax eax
je r-xdata
mov edx [ esi + 0xc ]
test dl 0x82
jne r-xdata
cmp [ esi + 0x18 ] 0x200
jne r-xdata
mov ecx [ esi + 0x10 ]
push edi
cmp ecx 0xffffffff
je r-xdata
mov ecx [ esi ]
dec eax
mov [ esi + 0x4 ] eax
movzx eax [ ecx ]
inc ecx
mov [ esi ] ecx
pop esi
retn
mov ecx [ esi + 0xc ]
test cl 0x8
je r-xdata
mov edi rw-data
mov edi ecx
sar edi 0x5
and ecx 0x1f
mov edi [ edi * 4 + rw-data ]
lea edi [ edi + ecx * 8 ]
jmp r-xdata
test ch 0x4
jne r-xdata
or dh 0x20
mov [ esi + 0xc ] edx
mov cl [ edi + 0x4 ]
pop edi
and cl 0x82
cmp cl 0x82
jne r-xdata
mov [ esi + 0x18 ] 0x1000
sub_41089b
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
cmp esi [ rw-data ]
jae r-xdata
and [ rw-data ] 0x0
mov [ rw-data ] 0x9
mov eax esi
and esi 0x1f
sar eax 0x5
shl esi 0x3
lea ebx [ eax * 4 + rw-data ]
mov eax [ eax * 4 + rw-data ]
add eax esi
mov dl [ eax + 0x4 ]
test dl 0x1
je r-xdata
and [ ebp - 0x8 ] 0x0
mov edi [ ebp + 0xc ]
cmp [ ebp + 0x10 ] 0x0
mov ecx edi
je r-xdata
xor eax eax
jmp r-xdata
test dl 0x2
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
test dl 0x48
je r-xdata
lea eax [ ebp - 0xc ]
push 0x0
push eax
mov eax [ ebx ]
push [ ebp + 0x10 ]
push ecx
push [ eax + esi ]
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
mov al [ eax + 0x5 ]
cmp al 0xa
je r-xdata
mov eax [ ebx ]
mov edx [ ebp - 0xc ]
add [ ebp - 0x8 ] edx
lea ecx [ eax + esi + 0x4 ]
mov al [ eax + esi + 0x4 ]
test al 0x80
je r-xdata
call [ GetLastError@IAT ]
push 0x5
pop ecx
cmp eax ecx
jne r-xdata
dec [ ebp + 0x10 ]
mov [ edi ] al
mov eax [ ebx ]
lea ecx [ edi + 0x1 ]
mov [ ebp - 0x8 ] 0x1
mov [ eax + esi + 0x5 ] 0xa
mov eax [ ebp - 0x8 ]
jmp r-xdata
test edx edx
je r-xdata
cmp eax 0x6d
jne r-xdata
mov [ rw-data ] 0x9
mov [ rw-data ] ecx
jmp r-xdata
and al 0xfb
cmp [ edi ] 0xa
jne r-xdata
push eax
call sub_414547
pop ecx
jmp r-xdata
or eax 0xffffffff
sub edi [ ebp + 0xc ]
mov [ ebp - 0x8 ] edi
mov eax [ ebp + 0x10 ]
mov al [ eax ]
cmp al 0x1a
je r-xdata
or al 0x4
jmp r-xdata
mov eax [ ebx ]
lea esi [ eax + esi + 0x4 ]
mov al [ esi ]
test al 0x40
jne r-xdata
cmp al 0xd
je r-xdata
mov [ ecx ] al
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0x8 ]
mov [ ebp + 0x10 ] eax
add ecx eax
cmp eax ecx
mov [ ebp - 0x8 ] ecx
jae r-xdata
or al 0x2
mov [ esi ] al
dec ecx
cmp [ ebp + 0x10 ] ecx
jae r-xdata
mov [ edi ] al
inc edi
inc [ ebp + 0x10 ]
jmp r-xdata
lea eax [ ebp - 0xc ]
push 0x0
push eax
inc [ ebp + 0x10 ]
lea eax [ ebp - 0x1 ]
push 0x1
push eax
mov eax [ ebx ]
push [ eax + esi ]
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp + 0x10 ]
inc eax
cmp [ eax ] 0xa
jne r-xdata
mov ecx [ ebp - 0x8 ]
cmp [ ebp + 0x10 ] ecx
jb r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
call [ GetLastError@IAT ]
test eax eax
jne r-xdata
mov [ edi ] 0xd
inc edi
mov [ ebp + 0x10 ] eax
jmp r-xdata
add [ ebp + 0x10 ] 0x2
jmp r-xdata
jmp r-xdata
mov [ edi ] 0xd
mov eax [ ebx ]
test [ eax + esi + 0x4 ] 0x48
je r-xdata
mov [ edi ] 0xa
jmp r-xdata
cmp edi [ ebp + 0xc ]
jne r-xdata
mov al [ ebp - 0x1 ]
cmp al 0xa
je r-xdata
inc edi
push 0x1
push 0xffffffff
push [ ebp + 0x8 ]
call sub_410c18
add esp 0xc
cmp [ ebp - 0x1 ] 0xa
je r-xdata
cmp [ ebp - 0x1 ] 0xa
jne r-xdata
mov [ edi ] 0xd
mov ecx [ ebx ]
inc edi
mov [ ecx + esi + 0x5 ] al
jmp r-xdata
sub_410a91
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
xor eax eax
mov esi [ edi + 0x10 ]
cmp [ edi + 0x4 ] eax
mov [ ebp - 0x8 ] esi
jge r-xdata
push 0x1
push eax
push eax
push esi
call sub_4147c8
mov ecx edx
add esp 0x10
mov ebx eax
mov [ ebp - 0xc ] ecx
test ecx ecx
mov [ ebp - 0x10 ] ebx
jg r-xdata
mov [ edi + 0x4 ] eax
test [ edi + 0xc ] 0x108
jne r-xdata
jl r-xdata
mov eax [ edi ]
mov ecx [ edi + 0x8 ]
mov edx eax
sub edx ecx
mov [ ebp - 0x4 ] edx
mov edx [ edi + 0xc ]
test dl 0x3
je r-xdata
mov eax [ edi + 0x4 ]
cdq
sub ebx eax
sbb ecx edx
mov eax ebx
mov edx ecx
jmp r-xdata
or edx 0xffffffff
mov eax edx
jmp r-xdata
test ebx ebx
jb r-xdata
test dl 0x80
jne r-xdata
mov edx esi
mov ebx esi
sar edx 0x5
and ebx 0x1f
mov edx [ edx * 4 + rw-data ]
test [ edx + ebx * 8 + 0x4 ] 0x80
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
or ebx [ ebp - 0xc ]
jne r-xdata
mov [ rw-data ] 0x16
mov ebx [ ebp - 0x10 ]
mov edx ecx
test [ edi + 0xc ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
jmp r-xdata
cmp [ edx ] 0xa
jne r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
add eax [ ebp - 0x10 ]
adc edx [ ebp - 0xc ]
mov edx [ edi + 0x4 ]
test edx edx
jne r-xdata
inc edx
jmp r-xdata
inc [ ebp - 0x4 ]
sub eax ecx
add eax edx
mov [ ebp + 0x8 ] eax
mov eax esi
sar eax 0x5
and esi 0x1f
lea ebx [ eax * 4 + rw-data ]
shl esi 0x3
mov eax [ ebx ]
test [ esi + eax + 0x4 ] 0x80
je r-xdata
and [ ebp - 0x4 ] edx
jmp r-xdata
cmp edx eax
jae r-xdata
mov eax [ ebp + 0x8 ]
sub [ ebp - 0x10 ] eax
sbb [ ebp - 0xc ] 0x0
push 0x2
push 0x0
push 0x0
push [ ebp - 0x8 ]
call sub_4147c8
add esp 0x10
cmp eax [ ebp - 0x10 ]
jne r-xdata
push 0x0
push [ ebp - 0xc ]
push [ ebp - 0x10 ]
push [ ebp - 0x8 ]
call sub_4147c8
mov eax 0x200
add esp 0x10
cmp [ ebp + 0x8 ] eax
ja r-xdata
cmp edx [ ebp - 0xc ]
jne r-xdata
mov eax [ edi + 0x18 ]
mov ecx [ edi + 0xc ]
test cl 0x8
je r-xdata
mov eax [ edi + 0x8 ]
mov ecx [ ebp + 0x8 ]
add ecx eax
inc [ ebp + 0x8 ]
test ch 0x4
je r-xdata
test [ edi + 0xd ] 0x20
jmp r-xdata
cmp [ eax ] 0xa
jne r-xdata
mov [ ebp + 0x8 ] eax
mov eax [ ebx ]
test [ esi + eax + 0x4 ] 0x4
je r-xdata
inc eax
jmp r-xdata
inc [ ebp + 0x8 ]
cmp eax ecx
jae r-xdata
sub_410c18
mov eax [ esp + 0x4 ]
push ebx
cmp eax [ rw-data ]
push esi
push edi
jae r-xdata
and [ rw-data ] 0x0
mov [ rw-data ] 0x9
mov ecx eax
mov esi eax
sar ecx 0x5
and esi 0x1f
lea edi [ ecx * 4 + rw-data ]
shl esi 0x3
mov ecx [ edi ]
test [ ecx + esi + 0x4 ] 0x1
je r-xdata
push eax
call sub_414734
cmp eax 0xffffffff
pop ecx
jne r-xdata
push [ esp + 0x18 ]
push 0x0
push [ esp + 0x1c ]
push eax
call [ SetFilePointer@IAT ]
mov ebx eax
cmp ebx 0xffffffff
jne r-xdata
mov [ rw-data ] 0x9
jmp r-xdata
xor eax eax
call [ GetLastError@IAT ]
jmp r-xdata
or eax 0xffffffff
mov eax [ edi ]
and [ eax + esi + 0x4 ] 0xfd
lea eax [ eax + esi + 0x4 ]
mov eax ebx
jmp r-xdata
push eax
call sub_414547
pop ecx
jmp r-xdata
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
sub_410cb2
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
xor ebx ebx
mov esi [ edi + 0x10 ]
cmp [ edi + 0x4 ] ebx
mov [ ebp - 0xc ] esi
jge r-xdata
push 0x1
push ebx
push esi
call sub_410c18
add esp 0xc
cmp eax ebx
mov [ ebp - 0x4 ] eax
jl r-xdata
mov [ edi + 0x4 ] ebx
or eax 0xffffffff
jmp r-xdata
mov edx [ edi + 0xc ]
test dx 0x108
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ edi ]
mov ecx [ edi + 0x8 ]
mov ebx eax
sub ebx ecx
test dl 0x3
mov [ ebp - 0x8 ] ebx
je r-xdata
sub eax [ edi + 0x4 ]
jmp r-xdata
test dl 0x80
jne r-xdata
mov edx esi
mov ebx esi
sar edx 0x5
and ebx 0x1f
mov edx [ edx * 4 + rw-data ]
test [ edx + ebx * 8 + 0x4 ] 0x80
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov [ rw-data ] 0x16
mov edx ecx
test [ edi + 0xc ] 0x1
je r-xdata
mov eax [ ebp - 0x8 ]
jmp r-xdata
cmp [ edx ] 0xa
jne r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
add eax ecx
mov edx [ edi + 0x4 ]
test edx edx
jne r-xdata
inc edx
jmp r-xdata
inc [ ebp - 0x8 ]
sub eax ecx
add eax edx
mov [ ebp + 0x8 ] eax
mov eax esi
sar eax 0x5
and esi 0x1f
lea ebx [ eax * 4 + rw-data ]
shl esi 0x3
mov eax [ ebx ]
test [ esi + eax + 0x4 ] 0x80
je r-xdata
and [ ebp - 0x8 ] edx
jmp r-xdata
cmp edx eax
jae r-xdata
mov eax [ ebp + 0x8 ]
sub [ ebp - 0x4 ] eax
push 0x2
push 0x0
push [ ebp - 0xc ]
call sub_410c18
add esp 0xc
cmp eax [ ebp - 0x4 ]
jne r-xdata
push 0x0
push [ ebp - 0x4 ]
push [ ebp - 0xc ]
call sub_410c18
mov eax 0x200
add esp 0xc
cmp [ ebp + 0x8 ] eax
ja r-xdata
mov eax [ edi + 0x8 ]
mov ecx [ ebp + 0x8 ]
add ecx eax
mov eax [ edi + 0x18 ]
mov ecx [ edi + 0xc ]
test cl 0x8
je r-xdata
test [ edi + 0xd ] 0x20
jmp r-xdata
cmp [ eax ] 0xa
jne r-xdata
inc [ ebp + 0x8 ]
test ch 0x4
je r-xdata
je r-xdata
inc eax
jmp r-xdata
inc [ ebp + 0x8 ]
mov [ ebp + 0x8 ] eax
mov eax [ ebx ]
test [ esi + eax + 0x4 ] 0x4
cmp eax ecx
jae r-xdata
sub_410e0a
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi [ rw-data ]
push edi
mov edi [ ebp + 0xc ]
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ebx
mov al [ edi ]
cmp al 0x61
je r-xdata
mov ecx 0x109
cmp al 0x72
je r-xdata
push 0x1a4
push [ ebp + 0x10 ]
push ecx
push [ ebp + 0x8 ]
call sub_414879
mov ecx eax
add esp 0x10
cmp ecx ebx
jge r-xdata
cmp edx ebx
je r-xdata
xor ecx ecx
or esi 0x1
jmp r-xdata
cmp al 0x77
jne r-xdata
mov eax [ ebp + 0x14 ]
inc [ rw-data ]
mov [ eax + 0xc ] esi
mov [ eax + 0x4 ] ebx
mov [ eax ] ebx
mov [ eax + 0x8 ] ebx
mov [ eax + 0x1c ] ebx
mov [ eax + 0x10 ] ecx
xor eax eax
jmp r-xdata
movsx eax al
cmp eax 0x54
jg r-xdata
push 0x1
pop edx
mov ecx 0x301
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub eax 0x62
je r-xdata
je r-xdata
or esi 0x2
test ch 0xc0
je r-xdata
dec eax
je r-xdata
mov eax 0x1000
test eax ecx
jne r-xdata
sub eax 0x2b
je r-xdata
or ch 0x80
jmp r-xdata
xor edx edx
jmp r-xdata
cmp [ ebp - 0x8 ] ebx
jne r-xdata
sub eax 0xb
je r-xdata
or ecx eax
jmp r-xdata
test cl 0x2
jne r-xdata
sub eax 0x19
je r-xdata
mov al [ edi + 0x1 ]
inc edi
cmp al bl
je r-xdata
mov [ ebp - 0x8 ] 0x1
or esi 0x4000
jmp r-xdata
cmp [ ebp - 0x8 ] ebx
jne r-xdata
sub eax 0x6
jne r-xdata
and ecx 0xfffffffe
and esi 0xfffffffc
or ecx 0x2
or esi 0x80
jmp r-xdata
test cl 0x40
jne r-xdata
sub eax 0xe
je r-xdata
mov [ ebp - 0x8 ] 0x1
and esi 0xffffbfff
jmp r-xdata
test ch 0xc0
jne r-xdata
or ecx 0x40
jmp r-xdata
cmp [ ebp - 0x4 ] ebx
jne r-xdata
dec eax
jne r-xdata
or ch 0x40
jmp r-xdata
mov [ ebp - 0x4 ] 0x1
or ecx 0x10
jmp r-xdata
cmp [ ebp - 0x4 ] ebx
jne r-xdata
mov [ ebp - 0x4 ] 0x1
or ecx 0x20
jmp r-xdata
sub_410f7a
mov edx [ rw-data ]
push ebx
push ebp
push esi
xor ebp ebp
xor esi esi
xor eax eax
cmp edx ebp
push edi
jle r-xdata
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
retn
mov ebx [ rw-data ]
mov edi ebx
mov edi eax
push 0x20
shl edi 0x2
call sub_40f978
pop ecx
mov ecx [ rw-data ]
mov [ edi + ecx ] eax
mov eax [ rw-data ]
mov edi [ edi + eax ]
cmp edi ebp
je r-xdata
test [ ecx + 0xc ] 0x83
je r-xdata
mov esi edi
mov esi [ ebx + eax * 4 ]
jmp r-xdata
inc eax
add edi 0x4
cmp eax edx
jl r-xdata
or [ esi + 0x10 ] 0xffffffff
mov [ esi + 0x4 ] ebp
mov [ esi + 0xc ] ebp
mov [ esi + 0x8 ] ebp
mov [ esi ] ebp
mov [ esi + 0x1c ] ebp
cmp esi ebp
je r-xdata
mov ecx [ edi ]
cmp ecx ebp
je r-xdata
jmp r-xdata
sub_410ff2
push ebp
mov ebp esp
sub esp 0x24
push ebx
mov ebx [ ebp + 0x8 ]
sub ebx 0x76c
cmp ebx 0x46
jl r-xdata
or eax 0xffffffff
cmp ebx 0x8a
jg r-xdata
push esi
push edi
mov edi [ ebp + 0xc ]
mov esi [ edi * 4 + rw-data ]
add esi [ ebp + 0x10 ]
test bl 0x3
jne r-xdata
call sub_414b32
mov eax ebx
lea ecx [ ebx - 0x1 ]
imul eax eax 0x16d
sar ecx 0x2
mov edx esi
mov [ ebp - 0x8 ] esi
add edx ecx
mov [ ebp - 0x10 ] ebx
add eax edx
mov edx [ ebp + 0x1c ]
lea ecx [ eax + eax * 2 ]
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x1c ] eax
lea ecx [ eax + ecx * 8 ]
imul ecx ecx 0x3c
add ecx [ ebp + 0x18 ]
imul ecx ecx 0x3c
add ecx [ rw-data ]
dec edi
cmp [ ebp + 0x20 ] 0x1
mov [ ebp - 0x14 ] edi
pop edi
pop esi
lea ecx [ ecx + edx + 0x7c558180 ]
mov [ ebp + 0x8 ] ecx
je r-xdata
cmp edi 0x2
jle r-xdata
add ecx [ rw-data ]
cmp [ ebp + 0x20 ] 0xffffffff
jne r-xdata
inc esi
pop ebx
leave
retn
mov eax ecx
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea eax [ ebp - 0x24 ]
push eax
call sub_414da5
pop ecx
mov ecx [ ebp + 0x8 ]
test eax eax
je r-xdata
sub_4110b4
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push edi
push [ ebp + 0x8 ]
call sub_41124d
mov esi eax
pop ecx
cmp esi [ rw-data ]
mov [ ebp + 0x8 ] esi
je r-xdata
xor eax eax
jmp r-xdata
xor ebx ebx
cmp esi ebx
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
call sub_4112ca
xor edx edx
mov eax rw-data
push 0x40
xor eax eax
pop ecx
mov edi rw-data
[ edi ]
lea esi [ edx + edx * 2 ]
mov [ ebp - 0x4 ] ebx
shl esi 0x4
stosb [ edi ]
lea ebx [ esi + rw-data ]
add eax 0x30
inc edx
cmp eax rw-data
jb r-xdata
inc [ ebp - 0x4 ]
add ebx 0x8
cmp [ ebp - 0x4 ] 0x4
jb r-xdata
mov dl [ ecx + 0x1 ]
test dl dl
je r-xdata
cmp [ eax ] esi
je r-xdata
lea eax [ ebp - 0x18 ]
push eax
push esi
call [ GetCPInfo@IAT ]
cmp eax 0x1
jne r-xdata
cmp [ ebx ] 0x0
mov ecx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ rw-data ] 0x1
push eax
mov [ rw-data ] eax
call sub_411297
lea esi [ esi + rw-data ]
mov edi rw-data
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop ecx
mov [ rw-data ] eax
movsd [ edi ] [ esi ]
jmp r-xdata
movzx eax [ ecx ]
movzx edi dl
cmp eax edi
ja r-xdata
cmp [ rw-data ] ebx
je r-xdata
push 0x40
xor eax eax
pop ecx
mov edi rw-data
cmp [ ebp - 0x18 ] 0x1
mov [ rw-data ] esi
[ edi ]
stosb [ edi ]
mov [ rw-data ] ebx
jbe r-xdata
call sub_4112f3
inc ecx
inc ecx
cmp [ ecx ] 0x0
jne r-xdata
mov edx [ ebp - 0x4 ]
mov dl [ edx + rw-data ]
or eax 0xffffffff
mov [ rw-data ] ebx
cmp [ ebp - 0x12 ] 0x0
je r-xdata
or [ eax + rw-data ] dl
inc eax
cmp eax edi
jbe r-xdata
push 0x1
pop eax
lea ecx [ ebp - 0x11 ]
or [ eax + rw-data ] 0x8
inc eax
cmp eax 0xff
jb r-xdata
push esi
call sub_411297
pop ecx
mov [ rw-data ] eax
mov [ rw-data ] 0x1
jmp r-xdata
movzx eax [ ecx - 0x1 ]
movzx edx dl
xor eax eax
mov edi rw-data
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
inc ecx
inc ecx
cmp [ ecx - 0x1 ] 0x0
jne r-xdata
or [ eax + rw-data ] 0x4
inc eax
jmp r-xdata
mov dl [ ecx ]
test dl dl
je r-xdata
cmp eax edx
ja r-xdata
sub_41124d
mov eax [ esp + 0x4 ]
and [ rw-data ] 0x0
cmp eax 0xfffffffe
jne r-xdata
cmp eax 0xfffffffd
jne r-xdata
mov [ rw-data ] 0x1
jmp [ GetOEMCP@IAT ]
cmp eax 0xfffffffc
jne r-xdata
mov [ rw-data ] 0x1
jmp [ GetACP@IAT ]
retn
mov eax [ rw-data ]
mov [ rw-data ] 0x1
sub_411297
mov eax [ esp + 0x4 ]
sub eax 0x3a4
je r-xdata
mov eax 0x411
retn
sub eax 0x4
je r-xdata
mov eax 0x804
retn
sub eax 0xd
je r-xdata
mov eax 0x412
retn
dec eax
je r-xdata
mov eax 0x404
retn
xor eax eax
retn
sub_4112ca
push edi
push 0x40
pop ecx
xor eax eax
mov edi rw-data
[ edi ]
stosb [ edi ]
xor eax eax
mov edi rw-data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
pop edi
retn
sub_4112f3
push ebp
mov ebp esp
sub esp 0x514
lea eax [ ebp - 0x14 ]
push esi
push eax
push [ rw-data ]
call [ GetCPInfo@IAT ]
cmp eax 0x1
jne r-xdata
xor eax eax
mov esi 0x100
xor eax eax
mov esi 0x100
cmp eax 0x61
jb r-xdata
cmp eax 0x5a
ja r-xdata
mov [ ebp + eax - 0x114 ] al
inc eax
cmp eax esi
jb r-xdata
mov al [ ebp - 0xe ]
mov [ ebp - 0x114 ] 0x20
test al al
je r-xdata
and [ eax + rw-data ] 0x0
cmp eax 0x7a
ja r-xdata
or [ eax + rw-data ] 0x10
mov cl al
add cl 0x20
push 0x0
lea eax [ ebp - 0x514 ]
push [ rw-data ]
push [ rw-data ]
push eax
lea eax [ ebp - 0x114 ]
push esi
push eax
push 0x1
call sub_4142f5
push 0x0
lea eax [ ebp - 0x214 ]
push [ rw-data ]
push esi
push eax
lea eax [ ebp - 0x114 ]
push esi
push eax
push esi
push [ rw-data ]
call sub_415091
push 0x0
lea eax [ ebp - 0x314 ]
push [ rw-data ]
push esi
push eax
lea eax [ ebp - 0x114 ]
push esi
push eax
push 0x200
push [ rw-data ]
call sub_415091
add esp 0x5c
xor eax eax
lea ecx [ ebp - 0x514 ]
push ebx
push edi
lea edx [ ebp - 0xd ]
cmp eax 0x41
jb r-xdata
pop esi
leave
retn
or [ eax + rw-data ] 0x20
mov cl al
sub cl 0x20
jmp r-xdata
inc eax
cmp eax esi
jb r-xdata
test dl 0x2
je r-xdata
or [ eax + rw-data ] 0x10
mov dl [ ebp + eax - 0x214 ]
inc edx
inc edx
mov al [ edx - 0x1 ]
test al al
jne r-xdata
sub ecx eax
lea edi [ ebp + eax - 0x114 ]
inc ecx
mov eax 0x20202020
mov ebx ecx
shr ecx 0x2
[ edi ]
mov ecx ebx
and ecx 0x3
[ edi ]
mov [ eax + rw-data ] cl
jmp r-xdata
and [ eax + rw-data ] 0x0
or [ eax + rw-data ] 0x20
mov dl [ ebp + eax - 0x314 ]
jmp r-xdata
inc eax
inc ecx
inc ecx
cmp eax esi
jb r-xdata
movzx ecx [ edx ]
movzx eax al
cmp eax ecx
ja r-xdata
pop edi
pop ebx
mov dx [ ecx ]
test dl 0x1
je r-xdata
jmp r-xdata
mov [ eax + rw-data ] dl
jmp r-xdata
sub_411494
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
push edi
mov edi [ ebp + 0x8 ]
mov [ ebp + 0x8 ] edi
jne r-xdata
mov edx [ ebp + 0x10 ]
push esi
test edx edx
je r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
call sub_4152e0
add esp 0xc
jmp r-xdata
mov eax edx
dec edx
test eax eax
pop esi
je r-xdata
mov ecx [ ebp + 0xc ]
pop edi
pop ebp
retn
mov eax [ ebp + 0x8 ]
lea ecx [ edx + 0x1 ]
xor eax eax
mov edx ecx
shr ecx 0x2
[ edi ]
mov ecx edx
and ecx 0x3
[ edi ]
inc edi
inc ecx
test al al
je r-xdata
inc edi
inc ecx
test edx edx
je r-xdata
test edx edx
jne r-xdata
and [ edi - 0x1 ] 0x0
jmp r-xdata
mov al [ ecx ]
dec edx
mov [ edi ] al
inc edi
inc ecx
test al al
je r-xdata
mov al [ ecx ]
dec edx
movzx esi al
test [ esi + rw-data ] 0x4
mov [ edi ] al
je r-xdata
jmp r-xdata
and [ edi - 0x2 ] 0x0
jmp r-xdata
sub_41151e
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
push [ rw-data ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
push 0x1
push [ rw-data ]
call sub_4153de
add esp 0x1c
test eax eax
jne r-xdata
xor eax eax
pop ebp
retn
add eax 0xfffffffe
pop ebp
retn
mov eax 0x7fffffff
pop ebp
retn
sub_41155d
push ecx
push ebx
push ebp
push esi
mov esi [ rw-data ]
push edi
xor edi edi
mov eax [ esi ]
cmp eax edi
je r-xdata
xor eax eax
mov ebx [ WideCharToMultiByte@IAT ]
or eax 0xffffffff
jmp r-xdata
push ebp
call sub_40f978
cmp eax edi
pop ecx
mov [ esp + 0x10 ] eax
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
push edi
push edi
push ebp
push eax
push 0xffffffff
push [ esi ]
push edi
push 0x1
call ebx
test eax eax
je r-xdata
push edi
push [ esp + 0x14 ]
call sub_41565b
mov eax [ esi + 0x4 ]
add esi 0x4
pop ecx
cmp eax edi
pop ecx
jne r-xdata
push edi
push edi
push edi
push edi
push 0xffffffff
push eax
push edi
push 0x1
call ebx
mov ebp eax
cmp ebp edi
je r-xdata
sub_4115cb
push ebp
mov ebp esp
push ecx
cmp [ ebp + 0x8 ] 0x0
push ebx
push esi
push edi
jne r-xdata
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
push [ ebp + 0xc ]
call sub_40f978
pop ecx
jmp r-xdata
mov eax [ rw-data ]
cmp eax 0x3
jne r-xdata
push [ ebp + 0x8 ]
call sub_40eb0e
pop ecx
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp eax 0x2
jne r-xdata
xor edi edi
cmp esi 0xffffffe0
ja r-xdata
xor eax eax
xor eax eax
cmp esi 0xffffffe0
ja r-xdata
cmp esi 0xffffffe0
ja r-xdata
cmp [ rw-data ] 0x0
je r-xdata
push [ ebp + 0x8 ]
call sub_412d08
mov ebx eax
pop ecx
test ebx ebx
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
test esi esi
jne r-xdata
xor edi edi
cmp esi 0xffffffe0
ja r-xdata
test esi esi
jbe r-xdata
mov eax edi
jmp r-xdata
push esi
call sub_41411f
test eax eax
pop ecx
jne r-xdata
test esi esi
jne r-xdata
cmp esi [ rw-data ]
ja r-xdata
push esi
call sub_41411f
test eax eax
pop ecx
jne r-xdata
add esi 0xf
and esi 0xfffffff0
push esi
push [ ebp + 0x8 ]
push 0x0
push [ rw-data ]
call [ HeapReAlloc@IAT ]
test eax eax
jne r-xdata
push 0x1
pop esi
cmp [ rw-data ] 0x0
je r-xdata
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0x8 ]
call sub_413a63
mov ebx eax
add esp 0xc
test ebx ebx
je r-xdata
push 0x10
pop esi
add esi 0xf
and esi 0xfffffff0
jmp r-xdata
jmp r-xdata
add esi 0xf
and esi 0xfffffff0
push esi
push [ ebp + 0x8 ]
push 0x0
push [ rw-data ]
call [ HeapReAlloc@IAT ]
mov edi eax
push 0x1
pop esi
test esi esi
jne r-xdata
mov edi [ ebp + 0x8 ]
push esi
push edi
push ebx
call sub_413511
add esp 0xc
test eax eax
jne r-xdata
push esi
call sub_41411f
test eax eax
pop ecx
jne r-xdata
push esi
push [ ebp + 0x8 ]
push 0x0
push [ rw-data ]
call [ HeapReAlloc@IAT ]
mov edi eax
cmp esi [ rw-data ]
jae r-xdata
add esi 0xf
and esi 0xfffffff0
push esi
push 0x0
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov edi eax
test edi edi
je r-xdata
push 0x1
pop esi
test edi edi
jne r-xdata
push esi
call sub_41305c
mov edi eax
pop ecx
test edi edi
je r-xdata
jmp r-xdata
push esi
push 0x0
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov edi eax
test edi edi
je r-xdata
mov edi esi
shr edi 0x4
push edi
push ebx
push [ ebp + 0xc ]
push [ ebp - 0x4 ]
call sub_413e2b
add esp 0x10
test eax eax
je r-xdata
test ebx ebx
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ecx - 0x4 ]
dec eax
cmp eax esi
jb r-xdata
mov ebx [ ebp + 0x8 ]
mov eax [ ebx - 0x4 ]
dec eax
cmp eax esi
jb r-xdata
movzx eax [ ebx ]
shl eax 0x4
cmp eax esi
jb r-xdata
push edi
call sub_413aff
mov edi eax
pop ecx
test edi edi
je r-xdata
mov edi [ ebp + 0x8 ]
jmp r-xdata
test edi edi
jne r-xdata
push eax
push ecx
push edi
call sub_40ed50
push [ ebp + 0x8 ]
push ebx
call sub_412d33
add esp 0x14
mov eax esi
push eax
push ebx
push edi
call sub_40ed50
push ebx
call sub_412d08
push [ ebp + 0x8 ]
mov ebx eax
push ebx
call sub_412d33
add esp 0x18
mov eax esi
push eax
push [ ebp + 0x8 ]
push edi
call sub_40ed50
push ebx
push [ ebp + 0xc ]
push [ ebp - 0x4 ]
call sub_413aba
add esp 0x18
jmp r-xdata
mov eax esi
movzx eax [ ebx ]
shl eax 0x4
cmp eax esi
jb r-xdata
test edi edi
jne r-xdata
test edi edi
jne r-xdata
push eax
push [ ebp + 0x8 ]
push edi
call sub_40ed50
push ebx
push [ ebp + 0xc ]
push [ ebp - 0x4 ]
call sub_413aba
add esp 0x18
mov eax esi
sub_41186b
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rw-data ]
push esi
cmp eax 0x3
jne r-xdata
cmp eax 0x2
jne r-xdata
mov esi [ ebp + 0x8 ]
push esi
call sub_412d08
test eax eax
pop ecx
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
call sub_413a63
add esp 0xc
test eax eax
je r-xdata
push esi
jmp r-xdata
mov eax [ esi - 0x4 ]
sub eax 0x9
jmp r-xdata
movzx eax [ eax ]
shl eax 0x4
jmp r-xdata
push 0x0
push [ rw-data ]
call [ HeapSize@IAT ]
pop esi
leave
retn
sub_4118cc
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
cmp ax 0xffff
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
or ax ax
leave
retn
cmp ax 0x100
jae r-xdata
cmp ax 0x41
jb r-xdata
push 0x0
lea eax [ ebp - 0x2 ]
push 0x1
push eax
lea eax [ ebp + 0x8 ]
push 0x1
push eax
push 0x100
push [ rw-data ]
call sub_4158a1
add esp 0x1c
test eax eax
mov ax [ ebp + 0x8 ]
je r-xdata
push 0x1
push eax
call sub_415ada
pop ecx
test eax eax
pop ecx
jne r-xdata
leave
retn
cmp ax 0x5a
ja r-xdata
mov ax [ ebp - 0x2 ]
mov ax [ ebp + 0x8 ]
leave
retn
add eax 0x20
leave
retn
sub_411941
push ebp
mov ebp esp
sub esp 0x414
mov ecx [ ebp + 0x8 ]
push ebx
cmp ecx [ rw-data ]
push esi
push edi
jae r-xdata
and [ rw-data ] 0x0
mov [ rw-data ] 0x9
mov eax ecx
mov esi ecx
sar eax 0x5
and esi 0x1f
lea ebx [ eax * 4 + rw-data ]
shl esi 0x3
mov eax [ ebx ]
mov al [ eax + esi + 0x4 ]
test al 0x1
je r-xdata
xor edi edi
cmp [ ebp + 0x10 ] edi
mov [ ebp - 0x8 ] edi
mov [ ebp - 0x10 ] edi
jne r-xdata
test al 0x20
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx ]
add eax esi
test [ eax + 0x4 ] 0x80
je r-xdata
push 0x2
push edi
push ecx
call sub_410c18
add esp 0xc
pop edi
pop esi
pop ebx
leave
retn
lea ecx [ ebp - 0xc ]
push edi
push ecx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ ebp + 0x10 ] edi
mov [ ebp - 0x4 ] eax
mov [ ebp + 0x8 ] edi
jbe r-xdata
call [ GetLastError@IAT ]
mov [ ebp + 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0xc ]
mov [ ebp + 0x8 ] edi
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebx ]
test [ eax + esi + 0x4 ] 0x40
je r-xdata
lea eax [ ebp - 0x414 ]
mov eax [ ebp - 0x8 ]
cmp eax edi
jne r-xdata
mov [ rw-data ] 0x1c
mov [ rw-data ] edi
jmp r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x1a
je r-xdata
mov edi eax
lea eax [ ebp - 0x414 ]
sub edi eax
lea eax [ ebp - 0xc ]
push 0x0
push eax
lea eax [ ebp - 0x414 ]
push edi
push eax
mov eax [ ebx ]
push [ eax + esi ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
inc [ ebp - 0x4 ]
mov cl [ ecx ]
cmp cl 0xa
jne r-xdata
sub eax [ ebp - 0x10 ]
jmp r-xdata
cmp [ ebp + 0x8 ] edi
je r-xdata
or eax 0xffffffff
call [ GetLastError@IAT ]
mov [ ebp + 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0xc ]
add [ ebp - 0x8 ] eax
cmp eax edi
jl r-xdata
mov [ eax ] cl
inc eax
mov ecx eax
lea edx [ ebp - 0x414 ]
sub ecx edx
cmp ecx 0x400
jl r-xdata
inc [ ebp - 0x10 ]
mov [ eax ] 0xd
inc eax
push 0x5
pop eax
cmp [ ebp + 0x8 ] eax
jne r-xdata
xor edi edi
mov eax [ ebp - 0x4 ]
sub eax [ ebp + 0xc ]
cmp eax [ ebp + 0x10 ]
jb r-xdata
mov ecx [ ebp - 0x4 ]
sub ecx [ ebp + 0xc ]
cmp ecx [ ebp + 0x10 ]
jae r-xdata
push [ ebp + 0x8 ]
call sub_414547
pop ecx
jmp r-xdata
mov [ rw-data ] 0x9
mov [ rw-data ] eax
jmp r-xdata
sub_411aee
push ebp
mov ebp esp
push ecx
push ecx
mov edx [ ebp + 0xc ]
push ebx
xor ebx ebx
push esi
movzx eax [ edx ]
mov esi [ rw-data ]
cmp eax 0x61
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ebx
je r-xdata
mov ecx 0x109
cmp eax 0x72
je r-xdata
push 0x1a4
push [ ebp + 0x10 ]
push ecx
push [ ebp + 0x8 ]
call sub_415b2c
add esp 0x10
mov ecx eax
cmp ecx ebx
pop edi
jge r-xdata
cmp edi ebx
je r-xdata
xor ecx ecx
or esi 0x1
jmp r-xdata
cmp eax 0x77
jne r-xdata
mov eax [ ebp + 0x14 ]
inc [ rw-data ]
mov [ eax + 0xc ] esi
mov [ eax + 0x4 ] ebx
mov [ eax ] ebx
mov [ eax + 0x8 ] ebx
mov [ eax + 0x1c ] ebx
mov [ eax + 0x10 ] ecx
xor eax eax
jmp r-xdata
movzx eax ax
cmp eax 0x54
jg r-xdata
push edi
push 0x1
pop edi
mov ecx 0x301
jmp r-xdata
pop esi
pop ebx
leave
retn
sub eax 0x62
je r-xdata
je r-xdata
or esi 0x2
test ch 0xc0
je r-xdata
dec eax
je r-xdata
mov eax 0x1000
test eax ecx
jne r-xdata
sub eax 0x2b
je r-xdata
or ch 0x80
jmp r-xdata
xor edi edi
jmp r-xdata
cmp [ ebp - 0x8 ] ebx
jne r-xdata
sub eax 0xb
je r-xdata
or ecx eax
jmp r-xdata
test cl 0x2
jne r-xdata
sub eax 0x19
je r-xdata
inc edx
inc edx
mov ax [ edx ]
cmp ax bx
je r-xdata
mov [ ebp - 0x8 ] 0x1
or esi 0x4000
jmp r-xdata
cmp [ ebp - 0x8 ] ebx
jne r-xdata
sub eax 0x6
jne r-xdata
and ecx 0xfffffffe
and esi 0xfffffffc
or ecx 0x2
or esi 0x80
jmp r-xdata
test cl 0x40
jne r-xdata
sub eax 0xe
je r-xdata
mov [ ebp - 0x8 ] 0x1
and esi 0xffffbfff
jmp r-xdata
test ch 0xc0
jne r-xdata
or ecx 0x40
jmp r-xdata
cmp [ ebp - 0x4 ] ebx
jne r-xdata
dec eax
jne r-xdata
or ch 0x40
jmp r-xdata
mov [ ebp - 0x4 ] 0x1
or ecx 0x10
jmp r-xdata
cmp [ ebp - 0x4 ] ebx
jne r-xdata
mov [ ebp - 0x4 ] 0x1
or ecx 0x20
jmp r-xdata
sub_411c76
push ebp
mov ebp esp
sub esp 0x18
fld [ r--data ]
fstp [ ebp - 0x8 ]
fld [ r--data ]
fstp [ ebp - 0x10 ]
fld [ ebp - 0x10 ]
fdiv [ ebp - 0x8 ]
fmul [ ebp - 0x8 ]
fsubr [ ebp - 0x10 ]
fstp [ ebp - 0x18 ]
fld [ ebp - 0x18 ]
fcomp [ r--data ]
fnstsw ax
sahf
jbe r-xdata
xor eax eax
leave
retn
push 0x1
pop eax
leave
retn
sub_411cb4
push r--data
call [ GetModuleHandleA@IAT ]
test eax eax
je r-xdata
jmp sub_411c76
push r--data
push eax
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
push 0x0
call eax
retn
sub_411cdd
push esi
mov esi [ esp + 0x8 ]
movsx eax [ esi ]
push eax
call sub_415f4c
cmp eax 0x65
pop ecx
je r-xdata
mov cl [ rw-data ]
mov al [ esi ]
mov [ esi ] cl
inc esi
inc esi
cmp [ rw-data ] 0x1
jle r-xdata
mov cl [ esi ]
mov [ esi ] al
mov al cl
mov cl [ esi ]
inc esi
test cl cl
jne r-xdata
pop esi
retn
movsx eax [ esi ]
mov ecx [ rw-data ]
mov al [ ecx + eax * 2 ]
and eax 0x4
movsx eax [ esi ]
push 0x4
push eax
call sub_4103a6
pop ecx
pop ecx
jmp r-xdata
test eax eax
jne r-xdata
sub_411d37
mov eax [ esp + 0x4 ]
mov dl [ rw-data ]
mov cl [ eax ]
test cl cl
je r-xdata
mov cl [ eax ]
inc eax
test cl cl
je r-xdata
cmp cl dl
je r-xdata
retn
mov cl [ eax ]
test cl cl
je r-xdata
mov cl [ eax + 0x1 ]
inc eax
test cl cl
jne r-xdata
mov ecx eax
cmp cl 0x65
je r-xdata
dec eax
cmp [ eax ] 0x30
je r-xdata
cmp [ eax ] dl
jne r-xdata
cmp cl 0x45
je r-xdata
mov dl [ ecx ]
inc eax
inc ecx
test dl dl
mov [ eax ] dl
jne r-xdata
dec eax
inc eax
jmp r-xdata
sub_411d9d
push ebp
mov ebp esp
push ecx
push ecx
cmp [ ebp + 0x8 ] 0x0
push [ ebp + 0x10 ]
je r-xdata
lea eax [ ebp + 0x10 ]
push eax
call sub_4163d6
mov eax [ ebp + 0xc ]
pop ecx
pop ecx
mov ecx [ ebp + 0x10 ]
mov [ eax ] ecx
leave
retn
lea eax [ ebp - 0x8 ]
push eax
call sub_4163a9
mov eax [ ebp + 0xc ]
pop ecx
pop ecx
mov ecx [ ebp - 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
leave
retn
sub_411ddb
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
push ebx
push esi
je r-xdata
mov eax [ ebp + 0x8 ]
push ecx
push ecx
fld [ eax ]
fstp [ esp ]
call sub_41647a
mov ebx [ ebp + 0x10 ]
mov esi eax
push esi
mov edx [ ebp + 0xc ]
lea eax [ ebx + 0x1 ]
push eax
xor eax eax
cmp [ esi ] 0x2d
sete al
xor ecx ecx
test ebx ebx
setg cl
add edx eax
add ecx edx
push ecx
call sub_416403
add esp 0x14
mov ebx [ ebp + 0x10 ]
mov eax [ rw-data ]
xor ecx ecx
mov esi eax
test ebx ebx
setg cl
push ecx
xor ecx ecx
cmp [ eax ] 0x2d
sete cl
add ecx [ ebp + 0xc ]
push ecx
call sub_4120f3
pop ecx
pop ecx
jmp r-xdata
test ebx ebx
jle r-xdata
mov [ eax ] 0x2d
inc eax
cmp [ esi ] 0x2d
mov eax [ ebp + 0xc ]
jne r-xdata
xor ecx ecx
push r--data
cmp [ rw-data ] cl
sete cl
add ecx eax
add ecx ebx
push ecx
call sub_413ee0
cmp [ ebp + 0x14 ] 0x0
pop ecx
pop ecx
mov ecx eax
je r-xdata
mov cl [ eax + 0x1 ]
push edi
lea edi [ eax + 0x1 ]
mov [ eax ] cl
mov cl [ rw-data ]
mov eax edi
pop edi
mov [ eax ] cl
mov eax [ esi + 0xc ]
inc ecx
cmp [ eax ] 0x30
je r-xdata
mov [ ecx ] 0x45
mov eax [ ebp + 0xc ]
pop esi
pop ebx
pop ebp
retn
mov ebx [ esi + 0x4 ]
dec ebx
jns r-xdata
inc ecx
cmp ebx 0x64
jl r-xdata
neg ebx
mov [ ecx ] 0x2d
inc ecx
cmp ebx 0xa
jl r-xdata
mov eax ebx
push 0x64
cdq
pop esi
idiv esi
add [ ecx ] al
mov eax ebx
cdq
idiv esi
mov ebx edx
add [ ecx + 0x1 ] bl
mov eax ebx
push 0xa
cdq
pop esi
idiv esi
add [ ecx ] al
mov eax ebx
cdq
idiv esi
mov ebx edx
sub_411edf
cmp [ rw-data ] 0x0
push ebx
push ebp
mov ebp [ esp + 0x10 ]
push esi
push edi
je r-xdata
mov eax [ esp + 0x14 ]
push ecx
push ecx
fld [ eax ]
fstp [ esp ]
call sub_41647a
mov ebx [ esp + 0x24 ]
mov esi eax
push esi
mov eax [ esi + 0x4 ]
add eax ebx
push eax
xor eax eax
cmp [ esi ] 0x2d
sete al
add eax ebp
push eax
call sub_416403
add esp 0x14
mov eax [ rw-data ]
mov ebx [ esp + 0x1c ]
mov esi [ rw-data ]
cmp eax ebx
jne r-xdata
mov eax [ esi + 0x4 ]
test eax eax
jg r-xdata
mov [ ebp ] 0x2d
lea edi [ ebp + 0x1 ]
cmp [ esi ] 0x2d
mov edi ebp
jne r-xdata
xor ecx ecx
cmp [ esi ] 0x2d
sete cl
add ecx eax
add ecx ebp
mov eax ecx
mov [ eax ] 0x30
and [ eax + 0x1 ] 0x0
jmp r-xdata
add edi eax
push 0x1
push edi
call sub_4120f3
pop ecx
mov [ edi ] 0x30
pop ecx
inc edi
jmp r-xdata
pop edi
mov eax ebp
pop esi
pop ebp
pop ebx
retn
push 0x1
push edi
call sub_4120f3
mov al [ rw-data ]
pop ecx
mov [ edi ] al
mov esi [ esi + 0x4 ]
inc edi
pop ecx
test esi esi
jge r-xdata
test ebx ebx
jle r-xdata
cmp [ rw-data ] 0x0
je r-xdata
neg esi
cmp ebx esi
jl r-xdata
neg esi
jmp r-xdata
push ebx
push edi
call sub_4120f3
push ebx
push 0x30
push edi
call sub_4165a0
add esp 0x14
mov ebx esi
sub_411fbd
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
push ecx
push ecx
fld [ edi ]
fstp [ esp ]
call sub_41647a
mov [ rw-data ] eax
mov ecx [ eax + 0x4 ]
dec ecx
mov ebx [ ebp + 0x10 ]
mov [ rw-data ] ecx
xor ecx ecx
cmp [ eax ] 0x2d
push eax
push ebx
sete cl
add ecx [ ebp + 0xc ]
mov esi ecx
push esi
call sub_416403
mov eax [ rw-data ]
add esp 0x14
mov ecx [ eax + 0x4 ]
dec ecx
cmp [ rw-data ] ecx
setl cl
mov [ rw-data ] cl
mov eax [ eax + 0x4 ]
dec eax
cmp eax 0xfffffffc
mov [ rw-data ] eax
jl r-xdata
push [ ebp + 0x14 ]
push ebx
push [ ebp + 0xc ]
push edi
call sub_412058
add esp 0x10
cmp eax ebx
jge r-xdata
test cl cl
je r-xdata
push ebx
push [ ebp + 0xc ]
push edi
call sub_41207f
add esp 0xc
jmp r-xdata
mov al [ esi ]
inc esi
test al al
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
and [ esi - 0x2 ] al
sub_4120a2
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x65
je r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_411ddb
cmp [ ebp + 0x10 ] 0x45
je r-xdata
cmp [ ebp + 0x10 ] 0x66
jne r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_411fbd
jmp r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_411edf
add esp 0xc
pop ebp
retn
add esp 0x10
pop ebp
retn
sub_4120f3
push edi
mov edi [ esp + 0xc ]
test edi edi
je r-xdata
pop edi
retn
push esi
mov esi [ esp + 0xc ]
push esi
call sub_40ec70
inc eax
push eax
push esi
add esi edi
push esi
call sub_40db20
add esp 0x10
pop esi
sub_412118
push ebp
mov ebp esp
push ebx
push [ ebp + 0x8 ]
call sub_412259
test eax eax
pop ecx
je r-xdata
push [ ebp + 0xc ]
call [ UnhandledExceptionFilter@IAT ]
mov ebx [ eax + 0x8 ]
test ebx ebx
je r-xdata
cmp ebx 0x5
jne r-xdata
cmp ebx 0x1
je r-xdata
and [ eax + 0x8 ] 0x0
push 0x1
pop eax
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov ecx [ rw-data ]
mov [ ebp + 0x8 ] ecx
mov ecx [ ebp + 0xc ]
mov [ rw-data ] ecx
mov ecx [ eax + 0x4 ]
cmp ecx 0x8
jne r-xdata
pop ebx
pop ebp
retn
and [ eax + 0x8 ] 0x0
push ecx
call ebx
pop ecx
mov ecx [ rw-data ]
mov edx [ rw-data ]
add edx ecx
push esi
cmp ecx edx
jge r-xdata
mov eax [ eax ]
mov esi [ rw-data ]
cmp eax 0xc000008e
jne r-xdata
lea esi [ ecx + ecx * 2 ]
sub edx ecx
lea esi [ esi * 4 + rw-data ]
cmp eax 0xc0000090
jne r-xdata
mov [ rw-data ] 0x83
jmp r-xdata
and [ esi ] 0x0
add esi 0xc
dec edx
jne r-xdata
cmp eax 0xc0000091
jne r-xdata
mov [ rw-data ] 0x81
jmp r-xdata
push [ rw-data ]
push 0x8
call ebx
pop ecx
mov [ rw-data ] esi
pop ecx
pop esi
jmp r-xdata
cmp eax 0xc0000093
jne r-xdata
mov [ rw-data ] 0x84
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
cmp eax 0xc000008d
jne r-xdata
mov [ rw-data ] 0x85
jmp r-xdata
cmp eax 0xc000008f
jne r-xdata
mov [ rw-data ] 0x82
jmp r-xdata
cmp eax 0xc0000092
jne r-xdata
mov [ rw-data ] 0x86
jmp r-xdata
mov [ rw-data ] 0x8a
sub_412259
mov edx [ esp + 0x4 ]
mov ecx [ rw-data ]
cmp [ rw-data ] edx
push esi
mov eax rw-data
je r-xdata
lea ecx [ ecx + ecx * 2 ]
pop esi
lea ecx [ ecx * 4 + rw-data ]
cmp eax ecx
jae r-xdata
lea esi [ ecx + ecx * 2 ]
lea esi [ esi * 4 + rw-data ]
xor eax eax
cmp [ eax ] edx
je r-xdata
cmp [ eax ] edx
jne r-xdata
retn
add eax 0xc
cmp eax esi
jae r-xdata
sub_41229c
push ebx
xor ebx ebx
cmp [ rw-data ] ebx
push esi
push edi
jne r-xdata
mov esi [ rw-data ]
xor edi edi
call sub_411478
lea eax [ edi * 4 + 0x4 ]
push eax
call sub_40f978
mov esi eax
pop ecx
cmp esi ebx
mov [ rw-data ] esi
jne r-xdata
cmp al 0x3d
je r-xdata
mov edi [ rw-data ]
cmp [ edi ] bl
je r-xdata
push 0x9
call sub_40eac5
pop ecx
push esi
call sub_40ec70
pop ecx
lea esi [ esi + eax + 0x1 ]
jmp r-xdata
inc edi
push [ rw-data ]
call sub_40eb0e
pop ecx
mov [ rw-data ] ebx
mov [ esi ] ebx
pop edi
pop esi
mov [ rw-data ] 0x1
pop ebx
retn
push ebp
mov al [ esi ]
cmp al bl
je r-xdata
add edi ebp
cmp [ edi ] bl
jne r-xdata
push ebp
call sub_40f978
cmp eax ebx
pop ecx
mov [ esi ] eax
jne r-xdata
push edi
call sub_40ec70
mov ebp eax
pop ecx
inc ebp
cmp [ edi ] 0x3d
je r-xdata
pop ebp
push edi
push [ esi ]
call sub_413ee0
pop ecx
add esi 0x4
pop ecx
push 0x9
call sub_40eac5
pop ecx
sub_412355
push ebp
mov ebp esp
push ecx
push ecx
push ebx
xor ebx ebx
cmp [ rw-data ] ebx
push esi
push edi
jne r-xdata
mov esi rw-data
push 0x104
push esi
push ebx
call [ GetModuleFileNameA@IAT ]
mov eax [ rw-data ]
mov [ rw-data ] esi
mov edi esi
cmp [ eax ] bl
je r-xdata
call sub_411478
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push ebx
push ebx
push edi
call sub_4123ee
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
lea eax [ eax + ecx * 4 ]
push eax
call sub_40f978
mov esi eax
add esp 0x18
cmp esi ebx
jne r-xdata
mov edi eax
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x4 ]
lea eax [ esi + eax * 4 ]
push eax
push esi
push edi
call sub_4123ee
mov eax [ ebp - 0x4 ]
add esp 0x14
dec eax
mov [ rw-data ] esi
pop edi
pop esi
mov [ rw-data ] eax
pop ebx
leave
retn
push 0x8
call sub_40eac5
pop ecx
sub_4123ee
push ebp
mov ebp esp
mov ecx [ ebp + 0x18 ]
mov eax [ ebp + 0x14 ]
push ebx
push esi
and [ ecx ] 0x0
mov esi [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0xc ]
mov [ eax ] 0x1
mov eax [ ebp + 0x8 ]
test edi edi
je r-xdata
cmp [ eax ] 0x22
jne r-xdata
mov [ edi ] esi
add edi 0x4
mov [ ebp + 0xc ] edi
inc [ ecx ]
test esi esi
je r-xdata
mov dl [ eax + 0x1 ]
inc eax
cmp dl 0x22
je r-xdata
mov dl [ eax ]
inc eax
movzx ebx dl
test [ ebx + rw-data ] 0x4
je r-xdata
mov dl [ eax ]
mov [ esi ] dl
inc esi
inc [ ecx ]
test esi esi
je r-xdata
test dl dl
je r-xdata
cmp dl 0x20
je r-xdata
inc [ ecx ]
test esi esi
je r-xdata
cmp [ eax ] 0x22
jne r-xdata
and [ esi ] 0x0
inc esi
movzx edx dl
test [ edx + rw-data ] 0x4
je r-xdata
test dl dl
jne r-xdata
test dl dl
je r-xdata
inc eax
mov bl [ eax ]
mov [ esi ] bl
inc esi
and [ ebp + 0x18 ] 0x0
inc eax
jmp r-xdata
inc [ ecx ]
test esi esi
je r-xdata
inc [ ecx ]
test esi esi
je r-xdata
test esi esi
je r-xdata
dec eax
jmp r-xdata
cmp dl 0x9
jne r-xdata
test edi edi
je r-xdata
mov dl [ eax ]
cmp dl 0x20
je r-xdata
mov dl [ eax ]
mov [ esi ] dl
inc esi
jmp r-xdata
mov dl [ eax ]
mov [ esi ] dl
inc esi
inc eax
and [ esi - 0x1 ] 0x0
mov eax [ ebp + 0x14 ]
pop edi
pop esi
pop ebx
inc [ eax ]
pop ebp
retn
and [ edi ] 0x0
inc eax
jmp r-xdata
cmp dl 0x9
jne r-xdata
cmp [ eax ] 0x0
je r-xdata
test edi edi
je r-xdata
mov edx [ ebp + 0x14 ]
inc [ edx ]
mov [ edi ] esi
add edi 0x4
mov [ ebp + 0xc ] edi
cmp [ eax ] 0x22
jne r-xdata
inc eax
inc ebx
jmp r-xdata
mov edx ebx
dec ebx
test edx edx
je r-xdata
test bl 0x1
jne r-xdata
cmp [ eax ] 0x5c
jne r-xdata
mov dl [ eax ]
test dl dl
je r-xdata
inc ebx
shr ebx 0x1
xor edi edi
cmp [ ebp + 0x18 ] edi
je r-xdata
test esi esi
je r-xdata
cmp [ ebp + 0x18 ] 0x0
jne r-xdata
inc [ ecx ]
dec ebx
jne r-xdata
mov [ esi ] 0x5c
inc esi
mov [ ebp + 0x8 ] edi
cmp [ eax + 0x1 ] 0x22
lea edx [ eax + 0x1 ]
jne r-xdata
inc [ ecx ]
jmp r-xdata
and [ esi ] 0x0
inc esi
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp dl 0x20
je r-xdata
test esi esi
je r-xdata
mov eax edx
jmp r-xdata
cmp [ eax ] 0x0
je r-xdata
inc eax
jmp r-xdata
test esi esi
je r-xdata
cmp dl 0x9
je r-xdata
mov edi [ ebp + 0xc ]
xor edx edx
cmp [ ebp + 0x18 ] edx
sete dl
mov [ ebp + 0x18 ] edx
mov [ ebp + 0x8 ] 0x1
xor ebx ebx
movzx edx dl
test [ edx + rw-data ] 0x4
je r-xdata
movzx ebx dl
test [ ebx + rw-data ] 0x4
je r-xdata
inc [ ecx ]
inc eax
inc [ ecx ]
mov dl [ eax ]
mov [ esi ] dl
inc esi
jmp r-xdata
mov [ esi ] dl
inc esi
inc eax
inc [ ecx ]
sub_4125a2
push ecx
push ecx
mov eax [ rw-data ]
push ebx
push ebp
mov ebp [ GetEnvironmentStringsW@IAT ]
push esi
push edi
xor ebx ebx
xor esi esi
xor edi edi
cmp eax ebx
jne r-xdata
cmp eax 0x1
jne r-xdata
call ebp
mov esi eax
cmp esi ebx
je r-xdata
cmp eax 0x2
jne r-xdata
cmp esi ebx
jne r-xdata
call [ GetEnvironmentStrings@IAT ]
mov edi eax
cmp edi ebx
je r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
xor eax eax
cmp edi ebx
jne r-xdata
cmp [ esi ] bx
mov eax esi
je r-xdata
call ebp
mov esi eax
cmp esi ebx
je r-xdata
mov [ rw-data ] 0x2
jmp r-xdata
cmp [ edi ] bl
mov eax edi
je r-xdata
call [ GetEnvironmentStrings@IAT ]
mov edi eax
cmp edi ebx
je r-xdata
sub eax esi
mov edi [ WideCharToMultiByte@IAT ]
sar eax 0x1
push ebx
push ebx
inc eax
push ebx
push ebx
push eax
push esi
push ebx
push ebx
mov [ esp + 0x34 ] eax
call edi
mov ebp eax
cmp ebp ebx
je r-xdata
inc eax
inc eax
cmp [ eax ] bx
jne r-xdata
sub eax edi
inc eax
mov ebp eax
push ebp
call sub_40f978
mov esi eax
pop ecx
cmp esi ebx
jne r-xdata
inc eax
cmp [ eax ] bl
jne r-xdata
push esi
call [ FreeEnvironmentStringsW@IAT ]
mov eax ebx
jmp r-xdata
push ebp
call sub_40f978
cmp eax ebx
pop ecx
mov [ esp + 0x10 ] eax
je r-xdata
inc eax
inc eax
cmp [ eax ] bx
jne r-xdata
push ebp
push edi
push esi
call sub_40ed50
add esp 0xc
xor esi esi
jmp r-xdata
inc eax
cmp [ eax ] bl
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
pop ecx
pop ecx
retn
push ebx
push ebx
push ebp
push eax
push [ esp + 0x24 ]
push esi
push ebx
push ebx
call edi
test eax eax
jne r-xdata
push edi
call [ FreeEnvironmentStringsA@IAT ]
mov eax esi
jmp r-xdata
mov ebx [ esp + 0x10 ]
push [ esp + 0x10 ]
call sub_40eb0e
pop ecx
mov [ esp + 0x10 ] ebx
sub_4126d4
sub esp 0x44
push ebx
push ebp
push esi
push edi
push 0x100
call sub_40f978
mov esi eax
pop ecx
test esi esi
jne r-xdata
mov [ rw-data ] esi
mov [ rw-data ] 0x20
lea eax [ esi + 0x100 ]
push 0x1b
call sub_40eac5
pop ecx
lea eax [ esp + 0x10 ]
push eax
call [ GetStartupInfoA@IAT ]
cmp [ esp + 0x42 ] 0x0
je r-xdata
and [ esi + 0x4 ] 0x0
or [ esi ] 0xffffffff
mov [ esi + 0x5 ] 0xa
mov eax [ rw-data ]
add esi 0x8
add eax 0x100
jmp r-xdata
xor ebx ebx
mov eax [ esp + 0x44 ]
test eax eax
je r-xdata
cmp esi eax
jae r-xdata
or [ esi + 0x4 ] 0x80
test ebx ebx
mov [ esi + 0x4 ] 0x81
jne r-xdata
mov esi [ eax ]
lea ebp [ eax + 0x4 ]
mov eax 0x800
cmp esi eax
lea ebx [ esi + ebp ]
jl r-xdata
mov eax [ rw-data ]
cmp [ eax + ebx * 8 ] 0xffffffff
lea esi [ eax + ebx * 8 ]
jne r-xdata
push [ rw-data ]
call [ SetHandleCount@IAT ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x44
retn
mov eax ebx
dec eax
neg eax
sbb eax eax
add eax 0xfffffff5
push 0xfffffff6
pop eax
jmp r-xdata
cmp [ rw-data ] esi
jge r-xdata
mov esi eax
or [ esi + 0x4 ] 0x40
jmp r-xdata
push edi
call [ GetFileType@IAT ]
test eax eax
je r-xdata
push eax
call [ GetStdHandle@IAT ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
xor edi edi
test esi esi
jle r-xdata
mov edi rw-data
inc ebx
cmp ebx 0x3
jl r-xdata
and eax 0xff
mov [ esi ] edi
cmp eax 0x2
jne r-xdata
mov eax [ ebx ]
cmp eax 0xffffffff
je r-xdata
mov esi [ rw-data ]
add [ rw-data ] 0x20
mov [ edi ] eax
lea ecx [ eax + 0x100 ]
cmp eax 0x3
jne r-xdata
inc edi
inc ebp
add ebx 0x4
cmp edi esi
jl r-xdata
mov cl [ ebp ]
test cl 0x1
je r-xdata
add edi 0x4
cmp [ rw-data ] esi
jl r-xdata
and [ eax + 0x4 ] 0x0
or [ eax ] 0xffffffff
mov [ eax + 0x5 ] 0xa
mov ecx [ edi ]
add eax 0x8
add ecx 0x100
jmp r-xdata
or [ esi + 0x4 ] 0x8
jmp r-xdata
test cl 0x8
jne r-xdata
push 0x100
call sub_40f978
test eax eax
pop ecx
je r-xdata
jmp r-xdata
cmp eax ecx
jae r-xdata
mov eax edi
mov ecx edi
sar eax 0x5
and ecx 0x1f
mov eax [ eax * 4 + rw-data ]
lea eax [ eax + ecx * 8 ]
mov ecx [ ebx ]
mov [ eax ] ecx
mov cl [ ebp ]
mov [ eax + 0x4 ] cl
push eax
call [ GetFileType@IAT ]
test eax eax
je r-xdata
sub_41287f
push esi
mov esi [ esp + 0x8 ]
push 0x0
and [ esi ] 0x0
call [ GetModuleHandleA@IAT ]
cmp [ eax ] 0x5a4d
jne r-xdata
pop esi
retn
mov ecx [ eax + 0x3c ]
test ecx ecx
je r-xdata
add eax ecx
mov cl [ eax + 0x1a ]
mov [ esi ] cl
mov al [ eax + 0x1b ]
mov [ esi + 0x1 ] al
sub_4128ac
push ebp
mov ebp esp
mov eax 0x122c
call sub_4169b0
lea eax [ ebp - 0x98 ]
push ebx
push eax
mov [ ebp - 0x98 ] 0x94
call [ GetVersionExA@IAT ]
test eax eax
je r-xdata
lea eax [ ebp - 0x122c ]
push 0x1090
push eax
push r--data
call [ GetEnvironmentVariableA@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x88 ] 0x2
jne r-xdata
lea eax [ ebp - 0x4 ]
push eax
call sub_41287f
cmp [ ebp - 0x4 ] 0x6
pop ecx
sbb eax eax
add eax 0x3
xor ebx ebx
lea ecx [ ebp - 0x122c ]
cmp [ ebp - 0x122c ] bl
je r-xdata
cmp [ ebp - 0x94 ] 0x5
jb r-xdata
lea eax [ ebp - 0x122c ]
push 0x16
push eax
push r--data
call sub_416970
add esp 0xc
test eax eax
jne r-xdata
mov al [ ecx ]
cmp al 0x61
jl r-xdata
push 0x1
pop eax
jmp r-xdata
lea eax [ ebp - 0x19c ]
push 0x104
push eax
push ebx
call [ GetModuleFileNameA@IAT ]
cmp [ ebp - 0x19c ] bl
lea ecx [ ebp - 0x19c ]
je r-xdata
lea eax [ ebp - 0x122c ]
jmp r-xdata
inc ecx
cmp [ ecx ] bl
jne r-xdata
cmp al 0x7a
jg r-xdata
pop ebx
leave
retn
lea eax [ ebp - 0x19c ]
push eax
lea eax [ ebp - 0x122c ]
push eax
call sub_4168f0
pop ecx
pop ecx
mov al [ ecx ]
cmp al 0x61
jl r-xdata
cmp eax ebx
je r-xdata
sub al 0x20
mov [ ecx ] al
push 0x2c
push eax
call sub_416830
pop ecx
cmp eax ebx
pop ecx
je r-xdata
inc ecx
cmp [ ecx ] bl
jne r-xdata
cmp al 0x7a
jg r-xdata
inc eax
mov ecx eax
cmp [ eax ] bl
je r-xdata
sub al 0x20
mov [ ecx ] al
push 0xa
push ebx
push eax
call sub_416601
add esp 0xc
cmp eax 0x2
je r-xdata
cmp [ ecx ] 0x3b
jne r-xdata
cmp eax 0x3
je r-xdata
inc ecx
mov [ ecx ] bl
jmp r-xdata
cmp eax 0x1
je r-xdata
cmp [ ecx ] bl
jne r-xdata
sub_4129f4
xor eax eax
push 0x0
cmp [ esp + 0x8 ] eax
push 0x1000
sete al
push eax
call [ HeapCreate@IAT ]
test eax eax
mov [ rw-data ] eax
je r-xdata
xor eax eax
retn
call sub_4128ac
cmp eax 0x3
mov [ rw-data ] eax
jne r-xdata
cmp eax 0x2
jne r-xdata
push 0x3f8
call sub_412cc0
pop ecx
jmp r-xdata
push 0x1
pop eax
retn
call sub_413807
test eax eax
jne r-xdata
push [ rw-data ]
call [ HeapDestroy@IAT ]
sub_412a54
push esi
inc ebx
xor dh [ eax ]
pop eax
inc ebx
xor [ eax ] dh
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
push edi
push ebp
cld
mov ebx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
test [ eax + 0x4 ] 0x6
jne r-xdata
push ebp
lea ebp [ ebx + 0x10 ]
push 0xffffffff
push ebx
call sub_40d9f6
add esp 0x8
pop ebp
mov eax 0x1
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x8 ]
mov [ ebx - 0x4 ] eax
mov esi [ ebx + 0xc ]
mov edi [ ebx + 0x8 ]
mov eax 0x1
jmp r-xdata
lea ecx [ esi + esi * 2 ]
cmp [ edi + ecx * 4 + 0x4 ] 0x0
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edi [ ebx + 0x8 ]
lea ecx [ esi + esi * 2 ]
mov esi [ edi + ecx * 4 ]
jmp r-xdata
push esi
push ebp
lea ebp [ ebx + 0x10 ]
call [ edi + ecx * 4 + 0x4 ]
pop ebp
pop esi
mov ebx [ ebp + 0xc ]
or eax eax
je r-xdata
cmp esi 0xffffffff
je r-xdata
js r-xdata
mov eax 0x0
jmp r-xdata
mov edi [ ebx + 0x8 ]
push ebx
call sub_40d9b4
add esp 0x4
lea ebp [ ebx + 0x10 ]
push esi
push ebx
call sub_40d9f6
add esp 0x8
lea ecx [ esi + esi * 2 ]
push 0x1
mov eax [ edi + ecx * 4 + 0x8 ]
call sub_40da8a
mov eax [ edi + ecx * 4 ]
mov [ ebx + 0xc ] eax
call [ edi + ecx * 4 + 0x8 ]
sub_412b34
mov eax [ rw-data ]
cmp eax 0x1
je r-xdata
push 0xfc
call sub_412b6d
mov eax [ rw-data ]
pop ecx
test eax eax
je r-xdata
test eax eax
jne r-xdata
push 0xff
call sub_412b6d
pop ecx
call eax
retn
cmp [ rw-data ] 0x1
jne r-xdata
sub_412b6d
push ebp
mov ebp esp
sub esp 0x1a4
mov edx [ ebp + 0x8 ]
xor ecx ecx
mov eax rw-data
push esi
mov esi ecx
shl esi 0x3
cmp edx [ esi + rw-data ]
jne r-xdata
add eax 0x8
inc ecx
cmp eax rw-data
jb r-xdata
pop esi
leave
retn
mov eax [ rw-data ]
cmp eax 0x1
je r-xdata
cmp edx [ eax ]
je r-xdata
lea eax [ ebp + 0x8 ]
lea esi [ esi + rw-data ]
push 0x0
push eax
push [ esi ]
call sub_40ec70
pop ecx
push eax
push [ esi ]
push 0xfffffff4
call [ GetStdHandle@IAT ]
push eax
call [ WriteFile@IAT ]
test eax eax
jne r-xdata
cmp edx 0xfc
je r-xdata
cmp [ rw-data ] 0x1
je r-xdata
lea eax [ ebp - 0x1a4 ]
push 0x104
push eax
push 0x0
call [ GetModuleFileNameA@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x1a4 ]
push edi
push eax
lea edi [ ebp - 0x1a4 ]
call sub_40ec70
inc eax
pop ecx
cmp eax 0x3c
jbe r-xdata
lea eax [ ebp - 0x1a4 ]
push r--data
push eax
call sub_413ee0
pop ecx
pop ecx
lea eax [ ebp - 0xa0 ]
push r--data
push eax
call sub_413ee0
lea eax [ ebp - 0xa0 ]
push edi
push eax
call sub_413ef0
lea eax [ ebp - 0xa0 ]
push r--data
push eax
call sub_413ef0
push [ esi + rw-data ]
lea eax [ ebp - 0xa0 ]
push eax
call sub_413ef0
push 0x12010
lea eax [ ebp - 0xa0 ]
push r--data
push eax
call sub_4169df
add esp 0x2c
pop edi
jmp r-xdata
lea eax [ ebp - 0x1a4 ]
push eax
call sub_40ec70
mov edi eax
lea eax [ ebp - 0x1a4 ]
sub eax 0x3b
push 0x3
add edi eax
push r--data
push edi
call sub_4152e0
add esp 0x10
sub_412cc0
push 0x140
push 0x0
push [ rw-data ]
call [ HeapAlloc@IAT ]
test eax eax
mov [ rw-data ] eax
jne r-xdata
mov ecx [ esp + 0x4 ]
and [ rw-data ] 0x0
and [ rw-data ] 0x0
push 0x1
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov [ rw-data ] 0x10
pop eax
retn
retn
sub_412d08
mov eax [ rw-data ]
lea ecx [ eax + eax * 4 ]
mov eax [ rw-data ]
lea ecx [ eax + ecx * 4 ]
xor eax eax
mov edx [ esp + 0x4 ]
sub edx [ eax + 0xc ]
cmp edx 0x100000
jb r-xdata
retn
add eax 0x14
jmp r-xdata
cmp eax ecx
jae r-xdata
sub_412d33
push ebp
mov ebp esp
sub esp 0x10
mov ecx [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0xc ]
mov eax [ ecx + 0x10 ]
push edi
mov edi esi
add esi 0xfffffffc
sub edi [ ecx + 0xc ]
shr edi 0xf
mov ecx edi
imul ecx ecx 0x204
lea ecx [ ecx + eax + 0x144 ]
mov [ ebp - 0x10 ] ecx
mov ecx [ esi ]
dec ecx
test cl 0x1
mov [ ebp - 0x4 ] ecx
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov edx [ ecx + esi ]
lea ebx [ ecx + esi ]
mov [ ebp - 0xc ] edx
mov edx [ esi - 0x4 ]
mov [ ebp - 0x8 ] edx
mov edx [ ebp - 0xc ]
test dl 0x1
mov [ ebp + 0xc ] ebx
jne r-xdata
mov edx ecx
sar edx 0x4
dec edx
cmp edx 0x3f
jbe r-xdata
sar edx 0x4
dec edx
cmp edx 0x3f
jbe r-xdata
mov ebx [ ebp - 0x8 ]
and ebx 0x1
mov [ ebp - 0xc ] ebx
jne r-xdata
push 0x3f
pop edx
mov ecx [ ebx + 0x4 ]
cmp ecx [ ebx + 0x8 ]
jne r-xdata
push 0x3f
pop edx
mov ebx [ ebp + 0x8 ]
sub esi [ ebp - 0x8 ]
mov ebx [ ebp - 0x8 ]
sar ebx 0x4
push 0x3f
mov [ ebp + 0xc ] esi
dec ebx
pop esi
cmp ebx esi
jbe r-xdata
mov ecx [ ebp - 0x4 ]
cmp edx 0x20
jae r-xdata
mov ecx [ ebp - 0x10 ]
mov ebx [ ecx + edx * 8 + 0x4 ]
lea ecx [ ecx + edx * 8 ]
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ecx
mov [ ecx + 0x4 ] esi
mov ecx [ esi + 0x4 ]
mov [ ecx + 0x8 ] esi
mov ecx [ esi + 0x4 ]
cmp ecx [ esi + 0x8 ]
jne r-xdata
cmp ebx edx
je r-xdata
add ecx [ ebp - 0x8 ]
mov edx ecx
mov [ ebp - 0x4 ] ecx
sar edx 0x4
dec edx
cmp edx esi
jbe r-xdata
mov ebx esi
lea ecx [ edx - 0x20 ]
mov ebx 0x80000000
shr ebx cl
lea ecx [ edx + eax + 0x4 ]
not ebx
and [ eax + edi * 4 + 0xc4 ] ebx
dec [ ecx ]
jne r-xdata
mov ebx 0x80000000
mov ecx edx
shr ebx cl
lea ecx [ edx + eax + 0x4 ]
not ebx
and [ eax + edi * 4 + 0x44 ] ebx
dec [ ecx ]
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ esi ] eax
mov [ eax + esi - 0x4 ] eax
mov eax [ ebp - 0x10 ]
dec [ eax ]
jne r-xdata
mov cl [ edx + eax + 0x4 ]
cmp edx 0x20
mov [ ebp + 0xf ] cl
inc cl
mov [ edx + eax + 0x4 ] cl
jae r-xdata
cmp ebx edx
je r-xdata
mov edx esi
mov ecx [ ebp - 0x4 ]
mov ebx [ ebp + 0xc ]
jmp r-xdata
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] ebx
mov ecx [ ebp + 0x8 ]
and [ ecx ] ebx
jmp r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
mov esi [ ebp + 0xc ]
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov esi [ ecx + 0x4 ]
cmp esi [ ecx + 0x8 ]
jne r-xdata
mov edx [ ebx + 0x8 ]
mov ebx [ ebx + 0x4 ]
add ecx [ ebp - 0xc ]
mov [ edx + 0x4 ] ebx
mov edx [ ebp + 0xc ]
mov [ ebp - 0x4 ] ecx
mov ebx [ edx + 0x4 ]
mov edx [ edx + 0x8 ]
mov [ ebx + 0x8 ] edx
mov eax [ ebp + 0x8 ]
mov [ rw-data ] edi
mov [ rw-data ] eax
mov ecx [ rw-data ]
mov esi [ VirtualFree@IAT ]
shl ecx 0xf
add ecx [ eax + 0xc ]
mov ebx 0x8000
push 0x4000
push ebx
push ecx
call esi
mov ecx [ rw-data ]
mov eax [ rw-data ]
mov edx 0x80000000
shr edx cl
or [ eax + 0x8 ] edx
mov eax [ rw-data ]
mov ecx [ rw-data ]
mov eax [ eax + 0x10 ]
and [ eax + ecx * 4 + 0xc4 ] 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x10 ]
dec [ eax + 0x43 ]
mov eax [ rw-data ]
mov ecx [ eax + 0x10 ]
cmp [ ecx + 0x43 ] 0x0
jne r-xdata
lea ecx [ edx - 0x20 ]
mov edx 0x80000000
shr edx cl
lea eax [ eax + edi * 4 + 0xc4 ]
or [ eax ] edx
lea ecx [ edx - 0x20 ]
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx + 0x4 ] ebx
mov ebx 0x80000000
mov ecx edx
shr ebx cl
lea eax [ eax + edi * 4 + 0x44 ]
or [ eax ] ebx
jmp r-xdata
mov ebx 0x80000000
mov ecx edx
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx ] ebx
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov ecx [ ebp + 0xc ]
mov esi [ ecx + 0x8 ]
mov ecx [ ecx + 0x4 ]
mov [ esi + 0x4 ] ecx
mov ecx [ ebp + 0xc ]
mov esi [ ecx + 0x4 ]
mov ecx [ ecx + 0x8 ]
mov [ esi + 0x8 ] ecx
cmp ebx 0x20
jae r-xdata
cmp [ eax + 0x8 ] 0xffffffff
jne r-xdata
and [ eax + 0x4 ] 0xfffffffe
mov eax [ rw-data ]
lea ecx [ ebx - 0x20 ]
mov esi 0x80000000
shr esi cl
not esi
and [ eax + edi * 4 + 0xc4 ] esi
dec [ ebx + eax + 0x4 ]
jne r-xdata
mov esi 0x80000000
mov ecx ebx
shr esi cl
not esi
and [ eax + edi * 4 + 0x44 ] esi
dec [ ebx + eax + 0x4 ]
jne r-xdata
push ebx
push 0x0
push [ eax + 0xc ]
call esi
mov eax [ rw-data ]
push [ eax + 0x10 ]
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
mov eax [ rw-data ]
mov edx [ rw-data ]
lea eax [ eax + eax * 4 ]
shl eax 0x2
mov ecx eax
mov eax [ rw-data ]
sub ecx eax
lea ecx [ ecx + edx - 0x14 ]
push ecx
lea ecx [ eax + 0x14 ]
push ecx
push eax
call sub_40db20
mov eax [ ebp + 0x8 ]
add esp 0xc
dec [ rw-data ]
cmp eax [ rw-data ]
jbe r-xdata
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] esi
mov ecx [ ebp + 0x8 ]
and [ ecx ] esi
jmp r-xdata
mov eax [ rw-data ]
mov [ rw-data ] eax
sub [ ebp + 0x8 ] 0x14
sub_41305c
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
mov edx [ rw-data ]
push ebx
push esi
lea eax [ eax + eax * 4 ]
push edi
lea edi [ edx + eax * 4 ]
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] edi
lea ecx [ eax + 0x17 ]
and ecx 0xfffffff0
mov [ ebp - 0x10 ] ecx
sar ecx 0x4
dec ecx
cmp ecx 0x20
jge r-xdata
add ecx 0xffffffe0
or eax 0xffffffff
xor esi esi
shr eax cl
mov [ ebp - 0xc ] esi
mov [ ebp - 0x8 ] eax
or esi 0xffffffff
shr esi cl
or [ ebp - 0x8 ] 0xffffffff
mov [ ebp - 0xc ] esi
jmp r-xdata
cmp ebx [ ebp - 0x4 ]
jne r-xdata
mov ecx [ ebx + 0x4 ]
mov edi [ ebx ]
and ecx [ ebp - 0x8 ]
and edi esi
or ecx edi
jne r-xdata
mov eax [ rw-data ]
mov ebx eax
cmp ebx edi
mov [ ebp + 0x8 ] ebx
jae r-xdata
mov [ rw-data ] ebx
mov eax [ ebx + 0x10 ]
mov edx [ eax ]
cmp edx 0xffffffff
mov [ ebp - 0x4 ] edx
je r-xdata
mov ebx edx
add ebx 0x14
cmp ebx [ ebp - 0x4 ]
mov [ ebp + 0x8 ] ebx
jb r-xdata
mov edx [ eax + 0xc4 ]
mov esi [ eax + 0x44 ]
and edx [ ebp - 0x8 ]
and esi [ ebp - 0xc ]
and [ ebp - 0x4 ] 0x0
lea ecx [ eax + 0x44 ]
or edx esi
mov esi [ ebp - 0xc ]
jne r-xdata
mov ecx [ eax + edx * 4 + 0xc4 ]
mov edi [ eax + edx * 4 + 0x44 ]
and ecx [ ebp - 0x8 ]
and edi esi
or ecx edi
jne r-xdata
jne r-xdata
mov ecx [ ebx + 0x4 ]
mov edi [ ebx ]
and ecx [ ebp - 0x8 ]
and edi esi
or ecx edi
jne r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ ecx + 0x84 ]
inc [ ebp - 0x4 ]
and edx [ ebp - 0x8 ]
add ecx 0x4
mov edi esi
and edi [ ecx ]
or edx edi
je r-xdata
mov ecx edx
xor edi edi
imul ecx ecx 0x204
lea ecx [ ecx + eax + 0x144 ]
mov [ ebp - 0xc ] ecx
mov ecx [ eax + edx * 4 + 0x44 ]
and ecx esi
jne r-xdata
cmp ebx [ ebp - 0x4 ]
jae r-xdata
cmp ebx eax
add ebx 0x14
jmp r-xdata
test ecx ecx
jl r-xdata
mov ecx [ eax + edx * 4 + 0xc4 ]
push 0x20
and ecx [ ebp - 0x8 ]
pop edi
jne r-xdata
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
cmp ebx eax
mov [ ebp + 0x8 ] ebx
jae r-xdata
mov ecx [ ebp - 0xc ]
mov edx [ ecx + edi * 8 + 0x4 ]
mov ecx [ edx ]
sub ecx [ ebp - 0x10 ]
mov esi ecx
mov [ ebp - 0x8 ] ecx
sar esi 0x4
dec esi
cmp esi 0x3f
jle r-xdata
shl ecx 0x1
inc edi
jmp r-xdata
push ebx
call sub_413416
pop ecx
mov ecx [ ebx + 0x10 ]
mov [ ecx ] eax
mov eax [ ebx + 0x10 ]
cmp [ eax ] 0xffffffff
jne r-xdata
mov ebx edx
cmp ebx [ ebp - 0x4 ]
add ebx 0x14
mov [ ebp + 0x8 ] ebx
jmp r-xdata
cmp esi edi
je r-xdata
push 0x3f
pop esi
xor eax eax
jmp r-xdata
jne r-xdata
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
test ecx ecx
je r-xdata
mov ecx [ edx + 0x4 ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
call sub_413365
mov ebx eax
test ebx ebx
mov [ ebp + 0x8 ] ebx
je r-xdata
cmp ebx eax
add ebx 0x14
jmp r-xdata
mov esi [ ebp - 0x10 ]
add edx ecx
lea ecx [ esi + 0x1 ]
mov [ edx ] ecx
mov [ edx + esi - 0x4 ] ecx
mov esi [ ebp - 0xc ]
mov ecx [ esi ]
test ecx ecx
lea edi [ ecx + 0x1 ]
mov [ esi ] edi
jne r-xdata
mov [ edx ] ecx
mov [ ecx + edx - 0x4 ] ecx
jmp r-xdata
mov ecx [ edx + 0x8 ]
mov edi [ edx + 0x4 ]
cmp [ ebp - 0x8 ] 0x0
mov [ ecx + 0x4 ] edi
mov ecx [ edx + 0x4 ]
mov edi [ edx + 0x8 ]
mov [ ecx + 0x8 ] edi
je r-xdata
cmp edi 0x20
jge r-xdata
cmp ebx eax
mov [ ebp + 0x8 ] ebx
jae r-xdata
mov ecx [ ebp - 0x4 ]
mov [ eax ] ecx
lea eax [ edx + 0x4 ]
cmp ebx [ rw-data ]
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
mov edi [ ecx + esi * 8 + 0x4 ]
lea ecx [ ecx + esi * 8 ]
mov [ edx + 0x4 ] edi
mov [ edx + 0x8 ] ecx
mov [ ecx + 0x4 ] edx
mov ecx [ edx + 0x4 ]
mov [ ecx + 0x8 ] edx
mov ecx [ edx + 0x4 ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
lea ecx [ edi - 0x20 ]
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp - 0x4 ]
lea edi [ eax + edi + 0x4 ]
lea ecx [ eax + ecx * 4 + 0xc4 ]
not ebx
and [ ecx ] ebx
dec [ edi ]
mov [ ebp - 0x14 ] ebx
jne r-xdata
mov ebx 0x80000000
mov ecx edi
shr ebx cl
mov ecx [ ebp - 0x4 ]
lea edi [ eax + edi + 0x4 ]
not ebx
mov [ ebp - 0x14 ] ebx
and ebx [ eax + ecx * 4 + 0x44 ]
mov [ eax + ecx * 4 + 0x44 ] ebx
dec [ edi ]
jne r-xdata
mov ecx [ ebp - 0x4 ]
cmp ecx [ rw-data ]
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov cl [ esi + eax + 0x4 ]
cmp esi 0x20
mov [ ebp + 0xb ] cl
jge r-xdata
mov ebx [ ebp + 0x8 ]
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp - 0x14 ]
and [ ebx + 0x4 ] ecx
jmp r-xdata
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp - 0x14 ]
and [ ebx ] ecx
jmp r-xdata
and [ rw-data ] 0x0
inc cl
cmp [ ebp + 0xb ] 0x0
mov [ esi + eax + 0x4 ] cl
jne r-xdata
inc cl
cmp [ ebp + 0xb ] 0x0
mov [ esi + eax + 0x4 ] cl
jne r-xdata
mov ecx [ ebp - 0x4 ]
lea edi [ eax + ecx * 4 + 0xc4 ]
lea ecx [ esi - 0x20 ]
mov esi 0x80000000
shr esi cl
or [ edi ] esi
lea ecx [ esi - 0x20 ]
mov edi 0x80000000
shr edi cl
or [ ebx + 0x4 ] edi
mov edi 0x80000000
mov ecx esi
shr edi cl
mov ecx [ ebp - 0x4 ]
or [ eax + ecx * 4 + 0x44 ] edi
jmp r-xdata
mov edi 0x80000000
mov ecx esi
shr edi cl
or [ ebx ] edi
sub_413365
mov eax [ rw-data ]
mov ecx [ rw-data ]
push esi
push edi
xor edi edi
cmp eax ecx
jne r-xdata
mov ecx [ rw-data ]
push 0x41c4
push 0x8
lea eax [ eax + eax * 4 ]
push [ rw-data ]
lea esi [ ecx + eax * 4 ]
call [ HeapAlloc@IAT ]
cmp eax edi
mov [ esi + 0x10 ] eax
je r-xdata
lea eax [ ecx + ecx * 4 + 0x50 ]
shl eax 0x2
push eax
push [ rw-data ]
push edi
push [ rw-data ]
call [ HeapReAlloc@IAT ]
cmp eax edi
je r-xdata
xor eax eax
jmp r-xdata
push 0x4
push 0x2000
push 0x100000
push edi
call [ VirtualAlloc@IAT ]
cmp eax edi
mov [ esi + 0xc ] eax
jne r-xdata
add [ rw-data ] 0x10
mov [ rw-data ] eax
mov eax [ rw-data ]
pop edi
pop esi
retn
or [ esi + 0x8 ] 0xffffffff
mov [ esi ] edi
mov [ esi + 0x4 ] edi
inc [ rw-data ]
mov eax [ esi + 0x10 ]
or [ eax ] 0xffffffff
mov eax esi
push [ esi + 0x10 ]
push edi
push [ rw-data ]
call [ HeapFree@IAT ]
sub_413416
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x8 ]
push ebx
push esi
push edi
mov esi [ ecx + 0x10 ]
mov eax [ ecx + 0x8 ]
xor ebx ebx
mov eax ebx
push 0x3f
imul eax eax 0x204
pop edx
lea eax [ eax + esi + 0x144 ]
mov [ ebp - 0x4 ] eax
shl eax 0x1
inc ebx
jmp r-xdata
mov [ eax + 0x8 ] eax
mov [ eax + 0x4 ] eax
add eax 0x8
dec edx
jne r-xdata
mov edi ebx
push 0x4
shl edi 0xf
add edi [ ecx + 0xc ]
push 0x1000
push 0x8000
push edi
call [ VirtualAlloc@IAT ]
test eax eax
jne r-xdata
test eax eax
jl r-xdata
lea edx [ edi + 0x7000 ]
cmp edi edx
ja r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x4 ]
lea ecx [ edi + 0xc ]
add eax 0x1f8
push 0x1
pop edi
mov [ eax + 0x4 ] ecx
mov [ ecx + 0x8 ] eax
lea ecx [ edx + 0xc ]
mov [ eax + 0x8 ] ecx
mov [ ecx + 0x4 ] eax
and [ esi + ebx * 4 + 0x44 ] 0x0
mov [ esi + ebx * 4 + 0xc4 ] edi
mov al [ esi + 0x43 ]
mov cl al
inc cl
test al al
mov eax [ ebp + 0x8 ]
mov [ esi + 0x43 ] cl
jne r-xdata
lea eax [ edi + 0x10 ]
pop edi
pop esi
pop ebx
leave
retn
mov edx 0x80000000
mov ecx ebx
shr edx cl
not edx
and [ eax + 0x8 ] edx
mov eax ebx
or [ eax + 0x4 ] edi
or [ eax - 0x8 ] 0xffffffff
or [ eax + 0xfec ] 0xffffffff
lea ecx [ eax + 0xffc ]
mov [ eax - 0x4 ] 0xff0
mov [ eax ] ecx
lea ecx [ eax - 0x1004 ]
mov [ eax + 0x4 ] ecx
mov [ eax + 0xfe8 ] 0xff0
add eax 0x1000
lea ecx [ eax - 0x10 ]
cmp ecx edx
jbe r-xdata
sub_413511
push ebp
mov ebp esp
sub esp 0xc
mov ecx [ ebp + 0x8 ]
mov eax [ ebp + 0x10 ]
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
mov edx edi
lea esi [ eax + 0x17 ]
sub edx [ ecx + 0xc ]
mov eax [ ecx + 0x10 ]
and esi 0xfffffff0
shr edx 0xf
mov ecx edx
imul ecx ecx 0x204
lea ecx [ ecx + eax + 0x144 ]
mov [ ebp - 0xc ] ecx
mov ecx [ edi - 0x4 ]
dec ecx
cmp esi ecx
mov [ ebp + 0x10 ] ecx
mov ebx [ ecx + edi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
mov [ ebp - 0x4 ] ebx
jle r-xdata
jge r-xdata
test bl 0x1
jne r-xdata
push 0x1
pop eax
mov ebx [ ebp + 0xc ]
sub [ ebp + 0x10 ] esi
lea ecx [ esi + 0x1 ]
mov [ ebx - 0x4 ] ecx
lea ebx [ ebx + esi - 0x4 ]
mov esi [ ebp + 0x10 ]
mov [ ebp + 0xc ] ebx
sar esi 0x4
dec esi
mov [ ebx - 0x4 ] ecx
cmp esi 0x3f
jbe r-xdata
xor eax eax
jmp r-xdata
add ebx ecx
cmp esi ebx
jg r-xdata
test [ ebp - 0x4 ] 0x1
jne r-xdata
push 0x3f
pop esi
pop edi
pop esi
pop ebx
leave
retn
mov ecx [ ebp - 0x4 ]
sar ecx 0x4
dec ecx
cmp ecx 0x3f
mov [ ebp - 0x8 ] ecx
jbe r-xdata
mov ecx [ ebp - 0xc ]
mov edi [ ecx + esi * 8 + 0x4 ]
lea ecx [ ecx + esi * 8 ]
mov [ ebx + 0x4 ] edi
mov [ ebx + 0x8 ] ecx
mov [ ecx + 0x4 ] ebx
mov ecx [ ebx + 0x4 ]
mov [ ecx + 0x8 ] ebx
mov ecx [ ebx + 0x4 ]
cmp ecx [ ebx + 0x8 ]
jne r-xdata
mov esi [ ebp - 0x4 ]
sar esi 0x4
dec esi
cmp esi 0x3f
jbe r-xdata
mov ebx [ edi + 0x4 ]
cmp ebx [ edi + 0x8 ]
jne r-xdata
push 0x3f
pop ecx
mov [ ebp - 0x8 ] ecx
mov eax [ ebp + 0x10 ]
mov [ ebx ] eax
mov [ eax + ebx - 0x4 ] eax
mov cl [ esi + eax + 0x4 ]
cmp esi 0x20
mov [ ebp + 0xf ] cl
inc cl
mov [ esi + eax + 0x4 ] cl
jae r-xdata
mov ecx [ edi + 0x4 ]
cmp ecx [ edi + 0x8 ]
jne r-xdata
push 0x3f
pop esi
mov ecx [ edi + 0x8 ]
mov ebx [ edi + 0x4 ]
mov [ ecx + 0x4 ] ebx
mov ecx [ edi + 0x4 ]
mov edi [ edi + 0x8 ]
mov [ ecx + 0x8 ] edi
mov ecx [ ebp + 0x10 ]
sub ecx esi
add [ ebp - 0x4 ] ecx
cmp [ ebp - 0x4 ] 0x0
jle r-xdata
cmp ecx 0x20
jae r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
mov ecx [ edi + 0x8 ]
mov esi [ edi + 0x4 ]
mov [ ecx + 0x4 ] esi
mov ecx [ edi + 0x4 ]
mov esi [ edi + 0x8 ]
mov [ ecx + 0x8 ] esi
mov esi [ ebp + 0x10 ]
add esi [ ebp - 0x4 ]
mov [ ebp + 0x10 ] esi
sar esi 0x4
dec esi
cmp esi 0x3f
jbe r-xdata
cmp esi 0x20
jae r-xdata
mov edx [ ebp + 0xc ]
mov edi [ ebp - 0x4 ]
mov ecx [ ebp + 0xc ]
sar edi 0x4
dec edi
lea ecx [ ecx + esi - 0x4 ]
cmp edi 0x3f
jbe r-xdata
add ecx 0xffffffe0
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp - 0x8 ]
lea ecx [ ecx + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0xc4 ] ebx
dec [ ecx ]
jne r-xdata
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp - 0x8 ]
lea ecx [ ecx + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0x44 ] ebx
dec [ ecx ]
jne r-xdata
lea eax [ eax + edx * 4 + 0xc4 ]
lea ecx [ esi - 0x20 ]
mov edx 0x80000000
lea ecx [ esi - 0x20 ]
mov edi 0x80000000
shr edi cl
mov ecx [ ebp + 0x8 ]
or [ ecx + 0x4 ] edi
lea eax [ eax + edx * 4 + 0x44 ]
mov edx 0x80000000
mov ecx esi
jmp r-xdata
mov edi 0x80000000
mov ecx esi
shr edi cl
mov ecx [ ebp + 0x8 ]
or [ ecx ] edi
push 0x3f
pop esi
lea ecx [ esi - 0x20 ]
mov ebx 0x80000000
shr ebx cl
lea ecx [ esi + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0xc4 ] ebx
dec [ ecx ]
jne r-xdata
mov ebx 0x80000000
mov ecx esi
shr ebx cl
lea esi [ esi + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0x44 ] ebx
dec [ esi ]
jne r-xdata
mov ebx [ ebp - 0xc ]
lea ebx [ ebx + edi * 8 ]
mov [ ebp + 0x10 ] ebx
mov ebx [ ebx + 0x4 ]
mov [ ecx + 0x4 ] ebx
mov ebx [ ebp + 0x10 ]
mov [ ecx + 0x8 ] ebx
mov [ ebx + 0x4 ] ecx
mov ebx [ ecx + 0x4 ]
mov [ ebx + 0x8 ] ecx
mov ebx [ ecx + 0x4 ]
cmp ebx [ ecx + 0x8 ]
jne r-xdata
push 0x3f
pop edi
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] ebx
mov ecx [ ebp + 0x8 ]
and [ ecx ] ebx
jmp r-xdata
shr edx cl
or [ eax ] edx
mov ebx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] ebx
mov ecx [ ebp + 0x8 ]
and [ ecx ] ebx
jmp r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ ebp - 0x4 ]
lea eax [ edx + esi - 0x4 ]
mov [ eax ] ecx
mov [ ecx + eax - 0x4 ] ecx
jmp r-xdata
mov cl [ edi + eax + 0x4 ]
cmp edi 0x20
mov [ ebp + 0x13 ] cl
inc cl
mov [ edi + eax + 0x4 ] cl
jae r-xdata
lea eax [ esi + 0x1 ]
mov [ edx - 0x4 ] eax
mov [ edx + esi - 0x8 ] eax
jmp r-xdata
cmp [ ebp + 0x13 ] 0x0
jne r-xdata
cmp [ ebp + 0x13 ] 0x0
jne r-xdata
lea eax [ eax + edx * 4 + 0xc4 ]
lea ecx [ edi - 0x20 ]
mov edx 0x80000000
lea ecx [ edi - 0x20 ]
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx + 0x4 ] ebx
lea eax [ eax + edx * 4 + 0x44 ]
mov edx 0x80000000
mov ecx edi
jmp r-xdata
mov ebx 0x80000000
mov ecx edi
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx ] ebx
shr edx cl
or [ eax ] edx
sub_413807
cmp [ rw-data ] 0xffffffff
push ebx
push ebp
push esi
push edi
jne r-xdata
push 0x2020
push 0x0
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov esi eax
test esi esi
je r-xdata
mov esi rw-data
jmp r-xdata
xor eax eax
mov ebp [ VirtualAlloc@IAT ]
push 0x4
push 0x2000
push __dos_header
push 0x0
call ebp
mov edi eax
test edi edi
je r-xdata
cmp esi rw-data
je r-xdata
push 0x4
mov ebx 0x10000
push 0x1000
push ebx
push edi
call ebp
test eax eax
je r-xdata
push esi
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
push 0x8000
push 0x0
push edi
call [ VirtualFree@IAT ]
mov eax rw-data
cmp esi eax
jne r-xdata
mov [ esi ] eax
mov eax [ rw-data ]
mov [ esi + 0x4 ] eax
mov [ rw-data ] esi
mov eax [ esi + 0x4 ]
mov [ eax ] esi
cmp [ rw-data ] 0x0
jne r-xdata
xor edx edx
cmp ebp 0x10
setge dl
dec edx
and edx ecx
dec edx
inc ebp
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
add eax 0x8
cmp ebp 0x400
jl r-xdata
push ebx
push 0x0
push edi
call sub_4165a0
add esp 0xc
cmp [ rw-data ] 0x0
jne r-xdata
mov [ rw-data ] eax
mov eax esi
jmp r-xdata
or [ edi + 0xf8 ] 0xff
lea eax [ edi + 0x8 ]
mov [ edi ] eax
mov [ edi + 0x4 ] 0xf0
add edi 0x1000
jmp r-xdata
lea eax [ edi + __dos_header ]
lea ecx [ esi + 0x98 ]
mov [ esi + 0x14 ] eax
lea eax [ esi + 0x18 ]
mov [ esi + 0xc ] ecx
mov [ esi + 0x10 ] edi
mov [ esi + 0x8 ] eax
xor ebp ebp
mov ecx 0xf1
mov [ rw-data ] eax
jmp r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn
mov eax [ esi + 0x10 ]
add eax ebx
cmp edi eax
jae r-xdata
sub_41394b
push esi
mov esi [ esp + 0x8 ]
push 0x8000
push 0x0
push [ esi + 0x10 ]
call [ VirtualFree@IAT ]
cmp [ rw-data ] esi
jne r-xdata
cmp esi rw-data
je r-xdata
mov eax [ esi + 0x4 ]
mov [ rw-data ] eax
or [ rw-data ] 0xffffffff
pop esi
retn
mov eax [ esi + 0x4 ]
mov ecx [ esi ]
push esi
push 0x0
mov [ eax ] ecx
mov eax [ esi ]
mov ecx [ esi + 0x4 ]
mov [ eax + 0x4 ] ecx
push [ rw-data ]
call [ HeapFree@IAT ]
pop esi
retn
sub_4139a1
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ rw-data ]
push edi
cmp esi [ rw-data ]
je r-xdata
and [ ebp - 0x4 ] 0x0
lea edi [ esi + 0x2010 ]
mov ebx 0x3ff000
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebp + 0x8 ] 0x0
jg r-xdata
sub ebx 0x1000
sub edi 0x8
test ebx ebx
jge r-xdata
mov eax ebx
push 0x4000
add eax [ esi + 0x10 ]
push 0x1000
push eax
call [ VirtualFree@IAT ]
test eax eax
je r-xdata
cmp [ esi + 0x10 ] 0xffffffff
je r-xdata
cmp [ edi ] 0xf0
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
mov ecx esi
mov esi [ esi + 0x4 ]
je r-xdata
or [ edi ] 0xffffffff
dec [ rw-data ]
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
cmp [ ecx + 0x18 ] 0xffffffff
jne r-xdata
mov [ esi + 0xc ] edi
cmp eax edi
jbe r-xdata
push 0x1
lea eax [ ecx + 0x20 ]
pop edx
inc [ ebp - 0x4 ]
dec [ ebp + 0x8 ]
je r-xdata
cmp edx 0x400
jne r-xdata
inc edx
add eax 0x8
cmp edx 0x400
jl r-xdata
push ecx
call sub_41394b
pop ecx
cmp [ eax ] 0xffffffff
jne r-xdata
sub_413a63
mov eax [ esp + 0x4 ]
mov edx rw-data
push esi
mov ecx edx
mov ecx [ ecx ]
cmp ecx edx
je r-xdata
cmp eax [ ecx + 0x14 ]
jb r-xdata
xor eax eax
pop esi
retn
jmp r-xdata
test al 0xf
jne r-xdata
cmp eax [ ecx + 0x10 ]
jbe r-xdata
mov esi eax
mov edx 0x100
and esi 0xfff
cmp esi edx
jb r-xdata
mov esi [ esp + 0xc ]
mov [ esi ] ecx
mov esi [ esp + 0x10 ]
mov ecx eax
and cx 0xf000
sub eax ecx
mov [ esi ] ecx
sub eax edx
pop esi
sar eax 0x4
lea eax [ eax + ecx + 0x8 ]
retn
sub_413aba
mov eax [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
sub ecx [ eax + 0x10 ]
sar ecx 0xc
lea eax [ eax + ecx * 8 + 0x18 ]
mov ecx [ esp + 0xc ]
movzx edx [ ecx ]
add [ eax ] edx
and [ ecx ] 0x0
cmp [ eax ] 0xf0
mov [ eax + 0x4 ] 0xf1
jne r-xdata
retn
inc [ rw-data ]
cmp [ rw-data ] 0x20
jne r-xdata
push 0x10
call sub_4139a1
pop ecx
sub_413aff
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi [ rw-data ]
push edi
mov ebx [ ebp + 0x8 ]
mov edi [ esi + 0x8 ]
lea ecx [ esi + 0x2018 ]
mov eax edi
sub eax esi
sub eax 0x18
sar eax 0x3
shl eax 0xc
add eax edx
cmp edi ecx
mov [ ebp - 0x4 ] eax
jae r-xdata
mov eax rw-data
mov edi eax
jmp r-xdata
mov ebx [ ebp + 0x8 ]
mov ecx [ edi ]
mov ebx [ ebp + 0x8 ]
cmp ecx ebx
jl r-xdata
mov edi [ edi ]
cmp edi eax
je r-xdata
cmp [ edi + 0xc ] 0x0
jne r-xdata
mov edx [ esi + 0x10 ]
cmp edx 0xffffffff
je r-xdata
mov esi [ esi ]
cmp esi [ rw-data ]
je r-xdata
mov eax [ edi ]
cmp eax ebx
jl r-xdata
add edi 0x8
lea ecx [ esi + 0x2018 ]
add eax 0x1000
cmp edi ecx
mov [ ebp - 0x4 ] eax
jb r-xdata
cmp [ edi + 0x4 ] ebx
jbe r-xdata
call sub_413807
test eax eax
je r-xdata
jmp r-xdata
mov ebx [ edi + 0xc ]
and [ ebp - 0x4 ] 0x0
mov esi ebx
mov eax ebx
sub esi edi
sub esi 0x18
sar esi 0x3
shl esi 0xc
add esi [ edi + 0x10 ]
cmp [ ebx ] 0xffffffff
jne r-xdata
add [ ebp - 0x4 ] 0x1000
add edi 0x8
cmp edi [ ebp - 0x8 ]
jb r-xdata
cmp [ edi + 0x4 ] ebx
jbe r-xdata
jmp r-xdata
push ebx
push ecx
push eax
call sub_413d07
add esp 0xc
test eax eax
jne r-xdata
xor eax eax
mov ecx [ eax + 0x10 ]
mov [ ecx + 0x8 ] bl
lea edx [ ecx + ebx + 0x8 ]
mov [ rw-data ] eax
mov [ ecx ] edx
mov edx 0xf0
sub edx ebx
mov [ ecx + 0x4 ] edx
movzx edx bl
sub [ eax + 0x18 ] edx
lea eax [ ecx + 0x100 ]
jmp r-xdata
cmp [ edi + 0x10 ] 0xffffffff
je r-xdata
mov eax [ ebp - 0x4 ]
push 0x4
shl eax 0xc
push 0x1000
push eax
push esi
mov [ ebp - 0x8 ] eax
call [ VirtualAlloc@IAT ]
cmp eax esi
jne r-xdata
cmp [ ebp - 0x4 ] 0x10
jge r-xdata
jmp r-xdata
push ebx
push eax
push [ ebp - 0x4 ]
call sub_413d07
add esp 0xc
test eax eax
jne r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ esi + 0x10 ]
lea edi [ esi + 0x18 ]
mov [ ebp - 0x8 ] eax
cmp edi eax
mov [ ebp - 0x4 ] ecx
jae r-xdata
mov [ rw-data ] esi
sub [ edi ] ebx
mov [ esi + 0x8 ] edi
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ edi + 0x4 ] ebx
pop edi
pop esi
pop ebx
leave
retn
push 0x0
push [ ebp - 0x8 ]
push esi
call sub_4165a0
mov edx [ ebp - 0x4 ]
add esp 0xc
test edx edx
mov ecx ebx
jle r-xdata
add eax 0x8
inc [ ebp - 0x4 ]
cmp [ eax ] 0xffffffff
je r-xdata
mov [ edi + 0x4 ] ebx
mov [ rw-data ] edi
lea eax [ edi + 0x2018 ]
lea eax [ esi + 0x4 ]
mov [ ebp - 0x4 ] edx
sbb eax eax
and eax ecx
mov [ edi + 0xc ] eax
mov eax [ ebp + 0x8 ]
mov [ esi + 0x8 ] al
mov [ edi + 0x8 ] ebx
sub [ ebx ] eax
sub [ esi + 0x4 ] eax
lea ecx [ esi + eax + 0x8 ]
lea eax [ esi + 0x100 ]
mov [ esi ] ecx
jmp r-xdata
cmp [ ecx ] 0xffffffff
je r-xdata
or [ eax + 0xf4 ] 0xff
lea edx [ eax + 0x4 ]
mov [ eax - 0x4 ] edx
mov edx 0xf0
mov [ eax ] edx
mov [ ecx ] edx
mov [ ecx + 0x4 ] 0xf1
add eax 0x1000
add ecx 0x8
dec [ ebp - 0x4 ]
jne r-xdata
cmp ecx eax
add ecx 0x8
jmp r-xdata
cmp ecx eax
jae r-xdata
sub_413d07
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0x10 ]
push ebx
push esi
mov esi [ ecx + 0x4 ]
push edi
mov edi [ ecx ]
lea ebx [ ecx + 0xf8 ]
cmp esi edx
mov [ ebp - 0x4 ] edi
mov eax edi
mov [ ebp + 0x8 ] ebx
jb r-xdata
add esi edi
cmp [ esi ] 0x0
je r-xdata
lea eax [ edi + edx ]
mov [ edi ] dl
cmp eax ebx
jae r-xdata
lea esi [ eax + edx ]
cmp esi ebx
jae r-xdata
mov eax esi
and [ ecx + 0x4 ] 0x0
lea eax [ ecx + 0x8 ]
mov [ ecx ] eax
add [ ecx ] edx
sub [ ecx + 0x4 ] edx
jmp r-xdata
lea esi [ ecx + 0x8 ]
mov bl [ eax ]
test bl bl
jne r-xdata
imul ecx ecx 0xf
shl eax 0x4
sub eax ecx
jmp r-xdata
lea eax [ edi + 0x8 ]
jmp r-xdata
xor eax eax
lea eax [ esi + edx ]
cmp eax [ ebp + 0x8 ]
jae r-xdata
movzx esi bl
add eax esi
push 0x1
lea ebx [ eax + 0x1 ]
pop esi
pop edi
pop esi
pop ebx
leave
retn
mov al [ esi ]
test al al
jne r-xdata
cmp esi edx
jae r-xdata
inc ebx
inc esi
jmp r-xdata
movzx eax al
add esi eax
jmp r-xdata
push 0x1
lea ebx [ esi + 0x1 ]
pop eax
lea ebx [ eax + edx ]
cmp ebx [ ebp + 0x8 ]
jae r-xdata
cmp eax [ ebp - 0x4 ]
jne r-xdata
cmp [ ebx ] 0x0
jne r-xdata
cmp esi edi
jae r-xdata
cmp eax edx
jae r-xdata
inc ebx
inc eax
jmp r-xdata
and [ ecx + 0x4 ] 0x0
lea esi [ ecx + 0x8 ]
mov [ ecx ] esi
sub esi edx
mov [ ecx ] ebx
mov [ ecx + 0x4 ] esi
jmp r-xdata
sub [ ebp + 0xc ] esi
cmp [ ebp + 0xc ] edx
jb r-xdata
mov [ ecx + 0x4 ] esi
jmp r-xdata
lea ebx [ esi + edx ]
cmp ebx [ ebp + 0x8 ]
jae r-xdata
sub [ ebp + 0xc ] eax
cmp [ ebp + 0xc ] edx
jb r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov [ eax ] dl
add eax 0x8
jmp r-xdata
mov edi [ ebp - 0x4 ]
mov eax ebx
jmp r-xdata
and [ ecx + 0x4 ] 0x0
lea eax [ ecx + 0x8 ]
mov [ ecx ] eax
sub eax edx
mov [ ecx ] ebx
mov [ ecx + 0x4 ] eax
jmp r-xdata
mov esi ebx
jmp r-xdata
lea esi [ eax + edx ]
cmp esi [ ebp + 0x8 ]
jb r-xdata
mov [ esi ] dl
lea eax [ esi + 0x8 ]
sub_413e2b
push ebp
mov ebp esp
push ecx
mov edx [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0xc ]
push esi
movzx ecx [ edx ]
push edi
mov edi [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov eax ebx
sub eax [ edi + 0x10 ]
sar eax 0xc
cmp ecx [ ebp + 0x14 ]
lea edi [ edi + eax * 8 + 0x18 ]
jbe r-xdata
jae r-xdata
mov eax [ ebp + 0x14 ]
sub ecx eax
mov [ edx ] al
add [ edi ] ecx
mov [ edi + 0x4 ] 0xf1
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
leave
retn
mov eax [ ebp + 0x14 ]
lea esi [ edx + eax ]
lea eax [ ebx + 0xf8 ]
cmp esi eax
ja r-xdata
mov [ ebp - 0x4 ] 0x1
lea eax [ ecx + edx ]
jne r-xdata
cmp [ eax ] 0x0
jne r-xdata
mov al [ ebp + 0x14 ]
mov [ edx ] al
mov eax [ ebx ]
cmp edx eax
ja r-xdata
cmp eax esi
inc eax
jmp r-xdata
sub ecx [ ebp + 0x14 ]
add [ edi ] ecx
cmp esi eax
jbe r-xdata
cmp eax esi
jae r-xdata
lea eax [ ebx + 0xf8 ]
cmp esi eax
jae r-xdata
and [ ebx + 0x4 ] 0x0
lea eax [ ebx + 0x8 ]
mov [ ebx ] eax
xor eax eax
mov [ ebx ] esi
cmp [ esi ] al
jne r-xdata
mov [ ebx + 0x4 ] eax
jmp r-xdata
inc eax
cmp [ esi + eax ] 0x0
je r-xdata
sub_413ee0
push edi
mov edi [ esp + 0x8 ]
jmp r-xdata
mov ecx [ esp + 0xc ]
test ecx 0x3
je r-xdata
mov edx 0x7efefeff
mov eax [ ecx ]
add edx eax
xor eax 0xffffffff
xor eax edx
mov edx [ ecx ]
add ecx 0x4
test eax 0x81010100
je r-xdata
mov dl [ ecx ]
inc ecx
test dl dl
je r-xdata
mov [ edi ] edx
add edi 0x4
test dl dl
je r-xdata
mov [ edi ] dl
mov eax [ esp + 0x8 ]
pop edi
retn
mov [ edi ] dl
inc edi
test ecx 0x3
jne r-xdata
test dh dh
je r-xdata
jmp r-xdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
pop edi
retn
test edx 0xff0000
je r-xdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
mov [ edi + 0x2 ] 0x0
pop edi
retn
test edx 0xff000000
je r-xdata
mov [ edi ] edx
mov eax [ esp + 0x8 ]
pop edi
retn
jmp r-xdata
sub_413ef0
mov ecx [ esp + 0x4 ]
push edi
test ecx 0x3
je r-xdata
mov eax [ ecx ]
mov edx 0x7efefeff
add edx eax
xor eax 0xffffffff
xor eax edx
add ecx 0x4
test eax 0x81010100
je r-xdata
mov al [ ecx ]
inc ecx
test al al
je r-xdata
mov eax [ ecx - 0x4 ]
test al al
je r-xdata
lea edi [ ecx - 0x1 ]
jmp r-xdata
test ecx 0x3
jne r-xdata
lea edi [ ecx - 0x4 ]
test ah ah
je r-xdata
mov ecx [ esp + 0xc ]
test ecx 0x3
je r-xdata
mov edx 0x7efefeff
mov eax [ ecx ]
add edx eax
xor eax 0xffffffff
xor eax edx
mov edx [ ecx ]
add ecx 0x4
test eax 0x81010100
je r-xdata
mov dl [ ecx ]
inc ecx
test dl dl
je r-xdata
lea edi [ ecx - 0x3 ]
jmp r-xdata
test eax 0xff0000
je r-xdata
mov [ edi ] edx
add edi 0x4
test dl dl
je r-xdata
mov [ edi ] dl
mov eax [ esp + 0x8 ]
pop edi
retn
mov [ edi ] dl
inc edi
test ecx 0x3
jne r-xdata
lea edi [ ecx - 0x2 ]
jmp r-xdata
test eax 0xff000000
je r-xdata
test dh dh
je r-xdata
jmp r-xdata
jmp r-xdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
pop edi
retn
test edx 0xff0000
je r-xdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
mov [ edi + 0x2 ] 0x0
pop edi
retn
test edx 0xff000000
je r-xdata
mov [ edi ] edx
mov eax [ esp + 0x8 ]
pop edi
retn
jmp r-xdata
sub_413fd0
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
test edx 0x3
jne r-xdata
test edx 0x1
je r-xdata
mov eax [ edx ]
cmp al [ ecx ]
jne r-xdata
mov ax [ edx ]
add edx 0x2
cmp al [ ecx ]
jne r-xdata
mov al [ edx ]
inc edx
cmp al [ ecx ]
jne r-xdata
sbb eax eax
shl eax 0x1
inc eax
retn
or al al
je r-xdata
or al al
je r-xdata
inc ecx
or al al
je r-xdata
xor eax eax
retn
cmp ah [ ecx + 0x1 ]
jne r-xdata
cmp ah [ ecx + 0x1 ]
jne r-xdata
test edx 0x2
je r-xdata
or ah ah
je r-xdata
or ah ah
je r-xdata
shr eax 0x10
cmp al [ ecx + 0x2 ]
jne r-xdata
add ecx 0x2
jmp r-xdata
or al al
je r-xdata
cmp ah [ ecx + 0x3 ]
jne r-xdata
add ecx 0x4
add edx 0x4
or ah ah
jne r-xdata
mov edi edi
sub_414054
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi ]
cmp [ eax ] 0xe06d7363
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp [ eax + 0x10 ] 0x3
jne r-xdata
xor eax eax
push eax
call sub_4140f0
test eax eax
pop ecx
je r-xdata
cmp [ eax + 0x14 ] 0x19930520
jne r-xdata
push esi
call [ rw-data ]
jmp r-xdata
jmp sub_40f8cc
pop esi
retn 0x4
sub_41411f
mov eax [ rw-data ]
test eax eax
je r-xdata
xor eax eax
retn
push [ esp + 0x4 ]
call eax
test eax eax
pop ecx
je r-xdata
push 0x1
pop eax
retn
sub_41413a
inc [ rw-data ]
push 0x1000
call sub_40f978
pop ecx
mov ecx [ esp + 0x4 ]
test eax eax
mov [ ecx + 0x8 ] eax
je r-xdata
or [ ecx + 0xc ] 0x4
lea eax [ ecx + 0x14 ]
mov [ ecx + 0x8 ] eax
mov [ ecx + 0x18 ] 0x2
or [ ecx + 0xc ] 0x8
mov [ ecx + 0x18 ] 0x1000
jmp r-xdata
mov eax [ ecx + 0x8 ]
and [ ecx + 0x4 ] 0x0
mov [ ecx ] eax
retn
sub_4141a4
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
pop ebp
retn
lea ecx [ ebp + 0x8 ]
and [ ebp + 0x8 ] 0x0
push ecx
push 0x0
push [ rw-data ]
push eax
lea eax [ ebp + 0xc ]
push 0x1
push eax
push 0x220
push [ rw-data ]
call [ WideCharToMultiByte@IAT ]
test eax eax
je r-xdata
mov cx [ ebp + 0xc ]
cmp cx 0xff
ja r-xdata
mov [ rw-data ] 0x2a
or eax 0xffffffff
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x1
mov [ eax ] cl
pop eax
pop ebp
retn
pop ebp
retn
sub_414210
push ebx
push esi
mov eax [ esp + 0x18 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0xc ]
div ecx
mov edx ebx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov esi eax
mul [ esp + 0x18 ]
mov ecx eax
mov eax [ esp + 0x14 ]
mul esi
add edx ecx
jb r-xdata
pop esi
pop ebx
retn 0x10
dec esi
cmp edx [ esp + 0x10 ]
ja r-xdata
jb r-xdata
xor edx edx
mov eax esi
cmp eax [ esp + 0xc ]
jbe r-xdata
sub_414280
push ebx
mov eax [ esp + 0x14 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
xor edx edx
div ecx
mov eax [ esp + 0x8 ]
div ecx
mov eax edx
xor edx edx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov ecx eax
mul [ esp + 0x14 ]
xchg ecx eax
mul [ esp + 0x10 ]
add edx ecx
jb r-xdata
pop ebx
retn 0x10
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
cmp edx [ esp + 0xc ]
ja r-xdata
jb r-xdata
sub eax [ esp + 0x8 ]
sbb edx [ esp + 0xc ]
neg edx
neg eax
sbb edx 0x0
cmp eax [ esp + 0x8 ]
jbe r-xdata
sub_4142f5
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x18
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
mov eax [ rw-data ]
xor ebx ebx
cmp eax ebx
jne r-xdata
cmp eax 0x2
jne r-xdata
lea eax [ ebp - 0x1c ]
push eax
push 0x1
pop esi
push esi
push r--data
push esi
call [ GetStringTypeW@IAT ]
test eax eax
je r-xdata
cmp eax 0x1
jne r-xdata
mov eax [ ebp + 0x1c ]
cmp eax ebx
jne r-xdata
lea eax [ ebp - 0x1c ]
push eax
push esi
push r--data
push esi
push ebx
call [ GetStringTypeA@IAT ]
test eax eax
je r-xdata
mov eax esi
jmp r-xdata
xor eax eax
cmp [ ebp + 0x18 ] ebx
jne r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call [ GetStringTypeA@IAT ]
jmp r-xdata
mov eax [ rw-data ]
push 0x2
pop eax
mov [ rw-data ] eax
push ebx
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
mov eax [ ebp + 0x20 ]
neg eax
sbb eax eax
and eax 0x8
inc eax
push eax
push [ ebp + 0x18 ]
call [ MultiByteToWideChar@IAT ]
mov [ ebp - 0x20 ] eax
cmp eax ebx
je r-xdata
mov eax [ rw-data ]
mov [ ebp + 0x18 ] eax
lea esp [ ebp - 0x34 ]
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
mov [ ebp - 0x4 ] ebx
lea edi [ eax + eax ]
mov eax edi
add eax 0x3
and al 0xfc
call sub_4169b0
mov [ ebp - 0x18 ] esp
mov esi esp
mov [ ebp - 0x24 ] esi
push edi
push ebx
push esi
call sub_4165a0
add esp 0xc
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
cmp esi ebx
je r-xdata
push [ ebp - 0x20 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push 0x1
push [ ebp + 0x18 ]
call [ MultiByteToWideChar@IAT ]
cmp eax ebx
je r-xdata
push [ ebp + 0x14 ]
push eax
push esi
push [ ebp + 0x8 ]
call [ GetStringTypeW@IAT ]
jmp r-xdata
sub_41443e
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
imul esi [ ebp + 0xc ]
cmp esi 0xffffffe0
push edi
mov [ ebp + 0x8 ] esi
ja r-xdata
xor edi edi
cmp esi 0xffffffe0
ja r-xdata
test esi esi
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp eax 0x3
jne r-xdata
add esi 0xf
and esi 0xfffffff0
push 0x1
pop esi
mov eax edi
push esi
call sub_41411f
test eax eax
pop ecx
je r-xdata
cmp eax 0x2
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax [ rw-data ]
ja r-xdata
xor eax eax
jmp r-xdata
jmp r-xdata
push esi
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov edi eax
test edi edi
jne r-xdata
cmp esi [ rw-data ]
ja r-xdata
push eax
call sub_41305c
mov edi eax
pop ecx
test edi edi
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov eax esi
shr eax 0x4
push eax
call sub_413aff
mov edi eax
pop ecx
test edi edi
jne r-xdata
push [ ebp + 0x8 ]
jmp r-xdata
push esi
jmp r-xdata
push 0x0
push edi
call sub_4165a0
add esp 0xc
sub_4144ef
push esi
push edi
push 0x3
xor edi edi
pop esi
cmp [ rw-data ] esi
jle r-xdata
mov eax edi
pop edi
pop esi
retn
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
test eax eax
je r-xdata
inc esi
cmp esi [ rw-data ]
jl r-xdata
test [ eax + 0xc ] 0x83
je r-xdata
cmp esi 0x14
jl r-xdata
push eax
call sub_40e01e
cmp eax 0xffffffff
pop ecx
je r-xdata
mov eax [ rw-data ]
push [ eax + esi * 4 ]
call sub_40eb0e
mov eax [ rw-data ]
pop ecx
and [ eax + esi * 4 ] 0x0
inc edi
sub_414547
mov ecx [ esp + 0x4 ]
xor edx edx
mov [ rw-data ] ecx
mov eax rw-data
mov eax [ edx * 8 + rw-data ]
mov [ rw-data ] eax
retn
add eax 0x8
inc edx
cmp eax rw-data
jb r-xdata
cmp ecx [ eax ]
je r-xdata
cmp ecx 0x13
jb r-xdata
cmp ecx 0xbc
jb r-xdata
cmp ecx 0x24
ja r-xdata
mov [ rw-data ] 0x16
cmp ecx 0xca
mov [ rw-data ] 0x8
jbe r-xdata
mov [ rw-data ] 0xd
retn
retn
sub_4145ae
push ebx
push esi
push edi
or ebx 0xffffffff
xor edi edi
xor esi esi
mov ecx rw-data
mov esi 0x100
push esi
call sub_40f978
test eax eax
pop ecx
je r-xdata
lea edx [ eax + 0x100 ]
pop edi
mov eax ebx
pop esi
pop ebx
retn
add [ rw-data ] 0x20
lea ecx [ edi * 4 + rw-data ]
lea edx [ eax + 0x100 ]
mov [ ecx ] eax
add ecx 0x4
inc edi
add esi 0x20
cmp ecx rw-data
jl r-xdata
test [ eax + 0x4 ] 0x1
je r-xdata
shl edi 0x5
mov ebx edi
and [ eax + 0x4 ] 0x0
or [ eax ] 0xffffffff
mov [ eax + 0x5 ] 0xa
mov edx [ ecx ]
add eax 0x8
add edx esi
jmp r-xdata
mov eax [ ecx ]
test eax eax
je r-xdata
jmp r-xdata
or [ eax ] 0xffffffff
sub eax [ ecx ]
sar eax 0x3
add eax esi
mov ebx eax
cmp ebx 0xffffffff
jne r-xdata
add eax 0x8
jmp r-xdata
cmp eax edx
jae r-xdata
cmp eax edx
jae r-xdata
sub_414643
mov eax [ esp + 0x4 ]
push esi
cmp eax [ rw-data ]
push edi
jae r-xdata
and [ rw-data ] 0x0
mov [ rw-data ] 0x9
or eax 0xffffffff
mov ecx eax
mov esi eax
sar ecx 0x5
and esi 0x1f
lea edi [ ecx * 4 + rw-data ]
shl esi 0x3
mov ecx [ edi ]
cmp [ ecx + esi ] 0xffffffff
jne r-xdata
cmp [ rw-data ] 0x1
push ebx
mov ebx [ esp + 0x14 ]
jne r-xdata
mov eax [ edi ]
mov [ eax + esi ] ebx
xor eax eax
pop ebx
jmp r-xdata
sub eax 0x0
je r-xdata
pop edi
pop esi
retn
push ebx
push 0xfffffff6
dec eax
je r-xdata
push ebx
push 0xfffffff5
jmp r-xdata
dec eax
jne r-xdata
call [ SetStdHandle@IAT ]
push ebx
push 0xfffffff4
jmp r-xdata
sub_4146ba
mov ecx [ esp + 0x4 ]
push esi
cmp ecx [ rw-data ]
push edi
jae r-xdata
and [ rw-data ] 0x0
mov [ rw-data ] 0x9
or eax 0xffffffff
mov eax ecx
mov esi ecx
sar eax 0x5
and esi 0x1f
lea edi [ eax * 4 + rw-data ]
shl esi 0x3
mov eax [ edi ]
add eax esi
test [ eax + 0x4 ] 0x1
je r-xdata
cmp [ eax ] 0xffffffff
je r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
mov eax [ edi ]
or [ eax + esi ] 0xffffffff
xor eax eax
jmp r-xdata
xor eax eax
sub ecx eax
je r-xdata
pop edi
pop esi
retn
push eax
push 0xfffffff6
dec ecx
je r-xdata
push eax
push 0xfffffff5
jmp r-xdata
dec ecx
jne r-xdata
call [ SetStdHandle@IAT ]
push eax
push 0xfffffff4
jmp r-xdata
sub_414734
mov eax [ esp + 0x4 ]
cmp eax [ rw-data ]
jae r-xdata
and [ rw-data ] 0x0
mov [ rw-data ] 0x9
or eax 0xffffffff
retn
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
test [ ecx + eax * 8 + 0x4 ] 0x1
lea eax [ ecx + eax * 8 ]
je r-xdata
mov eax [ eax ]
retn
sub_414771
mov eax [ esp + 0x4 ]
cmp eax [ rw-data ]
jae r-xdata
mov [ rw-data ] 0x9
or eax 0xffffffff
mov ecx eax
mov edx eax
sar ecx 0x5
and edx 0x1f
mov ecx [ ecx * 4 + rw-data ]
test [ ecx + edx * 8 + 0x4 ] 0x1
je r-xdata
push eax
call sub_414734
pop ecx
push eax
call [ FlushFileBuffers@IAT ]
test eax eax
jne r-xdata
xor eax eax
call [ GetLastError@IAT ]
jmp r-xdata
retn
mov [ rw-data ] eax
test eax eax
je r-xdata
sub_4147c8
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0x8 ]
push esi
cmp eax [ rw-data ]
push edi
jae r-xdata
and [ rw-data ] 0x0
mov [ rw-data ] 0x9
mov ecx eax
mov esi eax
sar ecx 0x5
and esi 0x1f
lea edi [ ecx * 4 + rw-data ]
shl esi 0x3
mov ecx [ edi ]
test [ ecx + esi + 0x4 ] 0x1
je r-xdata
mov ecx [ ebp + 0xc ]
push eax
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp + 0x10 ]
mov [ ebp - 0x4 ] ecx
call sub_414734
cmp eax 0xffffffff
pop ecx
jne r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x4 ]
push ecx
push [ ebp - 0x8 ]
push eax
call [ SetFilePointer@IAT ]
cmp eax 0xffffffff
mov [ ebp - 0x8 ] eax
jne r-xdata
mov [ rw-data ] 0x9
jmp r-xdata
mov eax [ edi ]
and [ eax + esi + 0x4 ] 0xfd
mov edx [ ebp - 0x4 ]
lea eax [ eax + esi + 0x4 ]
mov eax [ ebp - 0x8 ]
jmp r-xdata
call [ GetLastError@IAT ]
test eax eax
je r-xdata
or eax 0xffffffff
or edx 0xffffffff
pop edi
pop esi
leave
retn
push eax
call sub_414547
pop ecx
jmp r-xdata
sub_414879
push ebp
mov ebp esp
sub esp 0x1c
mov ecx [ ebp + 0xc ]
push ebx
xor ebx ebx
push esi
test cl 0x80
push edi
mov [ ebp - 0x1c ] 0xc
mov [ ebp - 0x18 ] ebx
je r-xdata
and [ ebp - 0x1 ] 0x0
mov [ ebp - 0x14 ] 0x1
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x1 ] 0x10
jmp r-xdata
push 0x3
mov eax ecx
pop esi
and eax esi
sub eax ebx
je r-xdata
test ch 0x40
jne r-xdata
mov eax 0x8000
test eax ecx
jne r-xdata
mov [ ebp - 0xc ] 0x80000000
dec eax
je r-xdata
or [ ebp - 0x1 ] 0x80
cmp [ rw-data ] eax
je r-xdata
mov [ ebp - 0x10 ] ebx
cmp eax 0x20
je r-xdata
mov [ ebp - 0xc ] 0x40000000
jmp r-xdata
dec eax
je r-xdata
cmp ecx 0x500
je r-xdata
je r-xdata
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
cmp eax 0x30
je r-xdata
mov eax [ ebp + 0x10 ]
cmp eax 0x10
je r-xdata
mov [ ebp - 0xc ] 0xc0000000
jmp r-xdata
mov [ rw-data ] 0x16
mov [ rw-data ] ebx
jmp r-xdata
mov [ ebp - 0x8 ] 0x1
cmp ecx 0x600
je r-xdata
mov [ ebp - 0x8 ] esi
jmp r-xdata
cmp ecx ebx
je r-xdata
mov edx 0x700
mov eax 0x400
and ecx edx
mov edi 0x100
cmp ecx eax
jg r-xdata
mov [ ebp - 0x10 ] 0x2
jmp r-xdata
cmp eax 0x40
jne r-xdata
or eax 0xffffffff
jmp r-xdata
test al 0x40
je r-xdata
mov ecx [ rw-data ]
not ecx
and ecx [ ebp + 0x14 ]
test cl 0x80
jne r-xdata
mov [ ebp - 0x8 ] 0x5
jmp r-xdata
cmp ecx edx
je r-xdata
mov eax [ ebp + 0xc ]
mov esi 0x80
test edi eax
je r-xdata
cmp ecx edi
je r-xdata
mov [ ebp - 0x10 ] esi
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
test ah 0x10
je r-xdata
or esi 0x4000000
or [ ebp - 0xa ] 0x1
push 0x1
pop esi
jmp r-xdata
mov [ ebp - 0x8 ] 0x4
jmp r-xdata
cmp ecx 0x200
je r-xdata
test al 0x20
je r-xdata
or esi edi
cmp ecx 0x300
jne r-xdata
test al 0x10
je r-xdata
or esi 0x8000000
jmp r-xdata
mov [ ebp - 0x8 ] 0x2
jmp r-xdata
call sub_4145ae
mov ebx eax
or edi 0xffffffff
cmp ebx edi
jne r-xdata
or esi 0x10000000
push 0x0
push esi
push [ ebp - 0x8 ]
lea eax [ ebp - 0x1c ]
push eax
push [ ebp - 0x10 ]
push [ ebp - 0xc ]
push [ ebp + 0x8 ]
call [ CreateFileA@IAT ]
mov esi eax
cmp esi edi
je r-xdata
and [ rw-data ] 0x0
mov [ rw-data ] 0x18
jmp r-xdata
call [ GetLastError@IAT ]
push eax
call sub_414547
pop ecx
push esi
call [ GetFileType@IAT ]
test eax eax
jne r-xdata
mov eax edi
jmp r-xdata
cmp eax 0x2
jne r-xdata
push esi
call [ CloseHandle@IAT ]
cmp eax 0x3
jne r-xdata
or [ ebp - 0x1 ] 0x40
jmp r-xdata
push esi
push ebx
call sub_414643
pop ecx
mov al [ ebp - 0x1 ]
pop ecx
mov esi ebx
mov ecx ebx
or al 0x1
sar ecx 0x5
and esi 0x1f
mov [ ebp + 0xb ] al
lea edi [ ecx * 4 + rw-data ]
shl esi 0x3
mov ecx [ edi ]
and [ ebp + 0xb ] 0x48
mov [ ecx + esi + 0x4 ] al
jne r-xdata
or [ ebp - 0x1 ] 0x8
cmp [ ebp + 0xb ] 0x0
jne r-xdata
test al 0x80
je r-xdata
mov eax ebx
test [ ebp + 0xc ] 0x8
je r-xdata
test [ ebp + 0xc ] 0x2
je r-xdata
mov eax [ edi ]
or [ eax + esi + 0x4 ] 0x20
lea eax [ eax + esi + 0x4 ]
push 0x2
push 0xffffffff
push ebx
call sub_410c18
add esp 0xc
cmp eax 0xffffffff
mov [ ebp - 0x10 ] eax
jne r-xdata
and [ ebp + 0x13 ] 0x0
lea eax [ ebp + 0x13 ]
push 0x1
push eax
push ebx
call sub_41089b
add esp 0xc
test eax eax
jne r-xdata
cmp [ rw-data ] 0x83
je r-xdata
push 0x0
push 0x0
push ebx
call sub_410c18
add esp 0xc
cmp eax 0xffffffff
jne r-xdata
cmp [ ebp + 0x13 ] 0x1a
jne r-xdata
jmp r-xdata
push ebx
call sub_4105d7
pop ecx
push [ ebp - 0x10 ]
push ebx
call sub_416bda
pop ecx
cmp eax 0xffffffff
pop ecx
je r-xdata
sub_414b47
push ecx
push ebx
push ebp
push esi
push edi
xor ebp ebp
or ebx 0xffffffff
push r--data
xor edi edi
mov [ rw-data ] ebp
mov [ rw-data ] ebx
mov [ rw-data ] ebx
call sub_40e565
mov esi eax
pop ecx
cmp esi ebp
jne r-xdata
cmp [ esi ] 0x0
je r-xdata
push rw-data
call [ GetTimeZoneInformation@IAT ]
cmp eax ebx
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
mov eax [ rw-data ]
cmp eax ebp
je r-xdata
mov eax [ rw-data ]
mov ecx [ rw-data ]
imul eax eax 0x3c
cmp [ rw-data ] bp
push 0x1
pop edx
mov [ rw-data ] eax
mov [ rw-data ] edx
je r-xdata
push [ rw-data ]
call sub_40eb0e
push esi
call sub_40ec70
inc eax
push eax
call sub_40f978
add esp 0xc
cmp eax ebp
mov [ rw-data ] eax
je r-xdata
push eax
push esi
call sub_413fd0
pop ecx
test eax eax
pop ecx
je r-xdata
cmp [ rw-data ] bp
je r-xdata
mov esi ecx
imul esi esi 0x3c
add eax esi
mov [ rw-data ] eax
push esi
push eax
call sub_413ee0
push 0x3
push esi
push [ rw-data ]
call sub_4152e0
mov eax [ rw-data ]
add esi 0x3
add esp 0x14
and [ eax + 0x3 ] 0x0
cmp [ esi ] 0x2d
jne r-xdata
mov [ rw-data ] ebp
mov [ rw-data ] ebp
mov eax [ rw-data ]
cmp eax ebp
je r-xdata
push esi
call sub_40de55
pop ecx
mov bl 0x30
mov ecx eax
imul ecx ecx 0xe10
mov [ rw-data ] ecx
push 0x1
inc esi
pop edi
mov eax [ rw-data ]
and [ eax ] 0x0
cmp [ esp + 0x10 ] ebp
jne r-xdata
sub eax ecx
mov [ rw-data ] edx
imul eax eax 0x3c
mov [ rw-data ] eax
jmp r-xdata
inc esi
jmp r-xdata
cmp al bl
jl r-xdata
mov eax [ rw-data ]
and [ eax ] 0x0
cmp [ esp + 0x10 ] ebp
jne r-xdata
mov eax [ rw-data ]
and [ eax + 0x3f ] 0x0
jmp r-xdata
lea eax [ esp + 0x10 ]
mov esi [ WideCharToMultiByte@IAT ]
push eax
push ebp
push 0x3f
mov edi 0x220
push [ rw-data ]
push ebx
push rw-data
push edi
push [ rw-data ]
call esi
test eax eax
je r-xdata
mov al [ esi ]
cmp al 0x2b
je r-xdata
cmp [ esi ] 0x3a
jne r-xdata
cmp al 0x39
jg r-xdata
mov eax [ rw-data ]
and [ eax + 0x3f ] 0x0
jmp r-xdata
lea eax [ esp + 0x10 ]
push eax
push ebp
push 0x3f
push [ rw-data ]
push ebx
push rw-data
push edi
push [ rw-data ]
call esi
test eax eax
je r-xdata
cmp edi ebp
je r-xdata
inc esi
push esi
call sub_40de55
imul eax eax 0x3c
pop ecx
mov ecx [ rw-data ]
add ecx eax
mov [ rw-data ] ecx
movsx eax [ esi ]
cmp eax ebp
mov [ rw-data ] eax
je r-xdata
neg ecx
mov [ rw-data ] ecx
cmp [ esi ] 0x3a
jne r-xdata
cmp al 0x39
jg r-xdata
push 0x3
push esi
push [ rw-data ]
call sub_4152e0
mov eax [ rw-data ]
add esp 0xc
and [ eax + 0x3 ] 0x0
jmp r-xdata
inc esi
push esi
call sub_40de55
pop ecx
mov ecx [ rw-data ]
add ecx eax
mov [ rw-data ] ecx
inc esi
jmp r-xdata
cmp al 0x39
jg r-xdata
mov al [ esi ]
cmp al bl
jl r-xdata
inc esi
jmp r-xdata
mov al [ esi ]
cmp al bl
jl r-xdata
sub_414da5
push ebx
push esi
push edi
xor edi edi
cmp [ rw-data ] edi
jne r-xdata
mov esi [ esp + 0x10 ]
push 0x1
pop ebx
mov eax [ esi + 0x14 ]
cmp eax [ rw-data ]
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ rw-data ] edi
je r-xdata
cmp eax [ rw-data ]
je r-xdata
pop edi
pop esi
pop ebx
retn
push edi
push edi
push edi
push 0x2
push edi
push edi
push ebx
push 0x4
push eax
push ebx
push ebx
call sub_414f51
push edi
push edi
push edi
push 0x2
push edi
push edi
push 0x5
push 0xa
push [ esi + 0x14 ]
push ebx
push edi
call sub_414f51
add esp 0x58
movzx ecx [ rw-data ]
push ecx
cmp [ rw-data ] di
movzx ecx [ rw-data ]
push ecx
movzx ecx [ rw-data ]
push ecx
movzx ecx [ rw-data ]
push ecx
jne r-xdata
mov edx [ rw-data ]
mov eax [ rw-data ]
mov ecx [ esi + 0x1c ]
cmp edx eax
jge r-xdata
cmp ecx eax
jl r-xdata
cmp ecx edx
jl r-xdata
movzx ecx [ rw-data ]
push ecx
push edi
movzx ecx [ rw-data ]
push edi
push ecx
push eax
push edi
movzx ecx [ rw-data ]
push edi
push ecx
movzx ecx [ rw-data ]
push ecx
movzx ecx [ rw-data ]
push ecx
push eax
push ebx
jmp r-xdata
mov eax ebx
cmp ecx edx
jg r-xdata
cmp ecx eax
jg r-xdata
movzx eax [ rw-data ]
push eax
push edi
movzx eax [ rw-data ]
push edi
push eax
push [ esi + 0x14 ]
push edi
jmp r-xdata
movzx eax [ rw-data ]
push edi
push eax
movzx eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
push [ esi + 0x14 ]
push ebx
push ebx
call sub_414f51
movzx eax [ rw-data ]
add esp 0x2c
cmp [ rw-data ] di
push eax
movzx eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
jne r-xdata
cmp ecx eax
jle r-xdata
cmp ecx edx
jle r-xdata
push edi
call sub_414f51
add esp 0x2c
jmp r-xdata
mov eax [ esi + 0x8 ]
imul eax eax 0x3c
add eax [ esi + 0x4 ]
imul eax eax 0x3c
add eax [ esi ]
imul eax eax 0x3e8
cmp ecx edx
jne r-xdata
cmp ecx edx
jl r-xdata
cmp ecx eax
jge r-xdata
xor ecx ecx
cmp eax [ rw-data ]
setl cl
jmp r-xdata
xor ecx ecx
cmp eax [ rw-data ]
setge cl
mov eax ecx
jmp r-xdata
sub_414f51
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x1
push ebx
mov ebx [ ebp + 0x10 ]
push esi
jne r-xdata
mov eax [ ebp + 0x14 ]
test bl 0x3
jne r-xdata
mov eax [ ebp + 0x14 ]
mov [ ebp + 0x10 ] ebx
and [ ebp + 0x10 ] 0x3
mov esi eax
jne r-xdata
mov ecx [ eax * 4 + rw-data ]
mov ecx [ eax * 4 + rw-data ]
jmp r-xdata
shl esi 0x2
mov eax [ esi + rw-data ]
shl esi 0x2
mov eax [ esi + rw-data ]
jmp r-xdata
mov eax [ ebp + 0x24 ]
mov [ rw-data ] ecx
imul eax eax 0x3c
add eax [ ebp + 0x28 ]
imul eax eax 0x3c
add eax [ rw-data ]
add eax [ ebp + 0x2c ]
imul eax eax 0x3e8
add eax [ ebp + 0x30 ]
mov [ rw-data ] eax
jns r-xdata
mov eax [ ebp + 0x24 ]
mov [ rw-data ] ecx
imul eax eax 0x3c
add eax [ ebp + 0x28 ]
mov [ rw-data ] ebx
imul eax eax 0x3c
add eax [ ebp + 0x2c ]
imul eax eax 0x3e8
add eax [ ebp + 0x30 ]
mov [ rw-data ] eax
jmp r-xdata
add ecx [ ebp + 0x20 ]
imul eax eax 0x7
sub eax edx
add eax [ ebp + 0x1c ]
add ecx eax
imul eax eax 0x7
sub eax edx
add eax [ ebp + 0x1c ]
lea ecx [ ecx + eax - 0x7 ]
jmp r-xdata
mov edx ebx
lea ecx [ eax + 0x1 ]
imul edx edx 0x16d
lea eax [ ebx - 0x1 ]
push edi
sar eax 0x2
mov edi ecx
push 0x7
add edi eax
lea eax [ edx + edi - 0x63db ]
pop edi
cdq
idiv edi
mov eax [ ebp + 0x18 ]
pop edi
cmp edx [ ebp + 0x1c ]
jg r-xdata
mov edx 0x5265c00
cmp eax edx
jl r-xdata
add eax 0x5265c00
dec ecx
mov [ rw-data ] eax
jmp r-xdata
pop esi
pop ebx
pop ebp
retn
cmp [ ebp + 0x8 ] 0x1
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp [ ebp + 0x18 ] 0x5
jne r-xdata
mov [ rw-data ] ebx
sub eax edx
inc ecx
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov esi [ esi + rw-data ]
mov esi [ esi + rw-data ]
jmp r-xdata
sub ecx 0x7
jmp r-xdata
cmp ecx esi
jle r-xdata
sub_415091
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x1c
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
xor edi edi
cmp [ rw-data ] edi
jne r-xdata
cmp [ ebp + 0x14 ] edi
jle r-xdata
push edi
push edi
push 0x1
pop ebx
push ebx
push r--data
mov esi 0x100
push esi
push edi
call [ LCMapStringW@IAT ]
test eax eax
je r-xdata
mov eax [ rw-data ]
cmp eax 0x2
jne r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
call sub_4152b5
pop ecx
pop ecx
mov [ ebp + 0x14 ] eax
push edi
push edi
push ebx
push r--data
push esi
push edi
call [ LCMapStringA@IAT ]
test eax eax
je r-xdata
mov [ rw-data ] ebx
jmp r-xdata
cmp eax 0x1
jne r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringA@IAT ]
jmp r-xdata
xor eax eax
mov [ rw-data ] 0x2
cmp [ ebp + 0x20 ] edi
jne r-xdata
lea esp [ ebp - 0x38 ]
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
push edi
push edi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
mov eax [ ebp + 0x24 ]
neg eax
sbb eax eax
and eax 0x8
inc eax
push eax
push [ ebp + 0x20 ]
call [ MultiByteToWideChar@IAT ]
mov ebx eax
mov [ ebp - 0x1c ] ebx
cmp ebx edi
je r-xdata
mov eax [ rw-data ]
mov [ ebp + 0x20 ] eax
mov [ ebp - 0x4 ] edi
lea eax [ ebx + ebx ]
add eax 0x3
and al 0xfc
call sub_4169b0
mov [ ebp - 0x18 ] esp
mov eax esp
mov [ ebp - 0x24 ] eax
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
cmp [ ebp - 0x24 ] edi
je r-xdata
push ebx
push [ ebp - 0x24 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push 0x1
push [ ebp + 0x20 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
je r-xdata
push edi
push edi
push ebx
push [ ebp - 0x24 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringW@IAT ]
mov esi eax
mov [ ebp - 0x28 ] esi
cmp esi edi
je r-xdata
test [ ebp + 0xd ] 0x4
je r-xdata
mov [ ebp - 0x4 ] 0x1
lea eax [ esi + esi ]
add eax 0x3
and al 0xfc
call sub_4169b0
mov [ ebp - 0x18 ] esp
mov ebx esp
mov [ ebp - 0x20 ] ebx
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
cmp [ ebp + 0x1c ] edi
je r-xdata
cmp ebx edi
je r-xdata
mov eax esi
jmp r-xdata
cmp esi [ ebp + 0x1c ]
jg r-xdata
push esi
push ebx
push [ ebp - 0x1c ]
push [ ebp - 0x24 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringW@IAT ]
test eax eax
je r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push ebx
push [ ebp - 0x24 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringW@IAT ]
test eax eax
jne r-xdata
cmp [ ebp + 0x1c ] edi
push edi
push edi
jne r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push edi
push edi
jmp r-xdata
push esi
push ebx
push 0x220
push [ ebp + 0x20 ]
call [ WideCharToMultiByte@IAT ]
mov esi eax
cmp esi edi
je r-xdata
sub_4152b5
mov edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
test edx edx
push esi
lea ecx [ edx - 0x1 ]
je r-xdata
cmp [ eax ] 0x0
pop esi
jne r-xdata
cmp [ eax ] 0x0
je r-xdata
mov eax edx
retn
sub eax [ esp + 0x4 ]
retn
inc eax
mov esi ecx
dec ecx
test esi esi
jne r-xdata
sub_4152e0
mov ecx [ esp + 0xc ]
push edi
test ecx ecx
je r-xdata
mov eax [ esp + 0x8 ]
pop edi
retn
push esi
push ebx
mov ebx ecx
mov esi [ esp + 0x14 ]
test esi 0x3
mov edi [ esp + 0x10 ]
jne r-xdata
mov al [ esi ]
inc esi
mov [ edi ] al
inc edi
dec ecx
je r-xdata
shr ecx 0x2
jne r-xdata
mov eax [ esp + 0x10 ]
pop ebx
pop esi
pop edi
retn
test al al
je r-xdata
mov edx 0x7efefeff
mov eax [ esi ]
add edx eax
xor eax 0xffffffff
xor eax edx
mov edx [ esi ]
add esi 0x4
test eax 0x81010100
je r-xdata
jmp r-xdata
test edi 0x3
je r-xdata
test esi 0x3
jne r-xdata
mov [ edi ] edx
add edi 0x4
dec ecx
je r-xdata
test dl dl
je r-xdata
mov al [ esi ]
inc esi
mov [ edi ] al
inc edi
test al al
je r-xdata
mov ebx ecx
shr ecx 0x2
jne r-xdata
mov [ edi ] al
inc edi
dec ecx
je r-xdata
mov ebx ecx
shr ecx 0x2
jne r-xdata
and ebx 0x3
je r-xdata
xor edx edx
mov [ edi ] edx
test dh dh
je r-xdata
dec ebx
jne r-xdata
dec ebx
jne r-xdata
xor eax eax
mov [ edi ] al
inc edi
mov eax [ esp + 0x10 ]
pop ebx
pop esi
pop edi
retn
test edi 0x3
jne r-xdata
and ebx 0x3
jne r-xdata
and edx 0xff
mov [ edi ] edx
jmp r-xdata
test edx 0xff0000
je r-xdata
pop ebx
pop esi
mov [ edi ] eax
add edi 0x4
dec ecx
jne r-xdata
add edi 0x4
xor eax eax
dec ecx
je r-xdata
and edx 0xffff
mov [ edi ] edx
jmp r-xdata
test edx 0xff000000
jne r-xdata
mov [ edi ] edx
jmp r-xdata
sub_4153de
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x30
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
xor ebx ebx
cmp [ rw-data ] ebx
push 0x1
pop edi
jne r-xdata
mov esi [ ebp + 0x14 ]
cmp esi ebx
jle r-xdata
push edi
mov eax r--data
push eax
push edi
push eax
push ebx
push ebx
call [ CompareStringW@IAT ]
test eax eax
je r-xdata
cmp [ ebp + 0x1c ] ebx
jle r-xdata
push esi
push [ ebp + 0x10 ]
call sub_4152b5
pop ecx
pop ecx
mov esi eax
mov [ ebp + 0x14 ] esi
push edi
mov eax r--data
push eax
push edi
push eax
push ebx
push ebx
call [ CompareStringA@IAT ]
test eax eax
je r-xdata
mov [ rw-data ] edi
jmp r-xdata
mov eax [ rw-data ]
cmp eax 0x2
jne r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
call sub_4152b5
pop ecx
pop ecx
mov [ ebp + 0x1c ] eax
xor eax eax
mov [ rw-data ] 0x2
cmp eax edi
jne r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ CompareStringA@IAT ]
jmp r-xdata
cmp [ ebp + 0x20 ] ebx
jne r-xdata
lea esp [ ebp - 0x4c ]
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
cmp esi ebx
je r-xdata
mov eax [ rw-data ]
mov [ ebp + 0x20 ] eax
cmp esi [ ebp + 0x1c ]
jne r-xdata
cmp [ ebp + 0x1c ] ebx
jne r-xdata
cmp [ ebp + 0x1c ] edi
jle r-xdata
push 0x2
push ebx
push ebx
push esi
push [ ebp + 0x10 ]
push 0x9
push [ ebp + 0x20 ]
call [ MultiByteToWideChar@IAT ]
mov [ ebp - 0x1c ] eax
cmp eax ebx
je r-xdata
cmp esi edi
jg r-xdata
mov eax edi
jmp r-xdata
mov [ ebp - 0x4 ] ebx
add eax eax
add eax 0x3
and al 0xfc
call sub_4169b0
mov [ ebp - 0x18 ] esp
mov eax esp
mov [ ebp - 0x24 ] eax
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
push 0x3
jmp r-xdata
lea eax [ ebp - 0x3c ]
push eax
push [ ebp + 0x20 ]
call [ GetCPInfo@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x24 ] ebx
je r-xdata
pop eax
jmp r-xdata
cmp esi ebx
jle r-xdata
push [ ebp - 0x1c ]
push [ ebp - 0x24 ]
push esi
push [ ebp + 0x10 ]
push edi
push [ ebp + 0x20 ]
mov esi [ MultiByteToWideChar@IAT ]
call esi
test eax eax
je r-xdata
cmp [ ebp + 0x1c ] ebx
jle r-xdata
cmp [ ebp - 0x3c ] 0x2
jb r-xdata
push ebx
push ebx
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push 0x9
push [ ebp + 0x20 ]
call esi
mov esi eax
mov [ ebp - 0x20 ] esi
cmp esi ebx
je r-xdata
cmp [ ebp - 0x3c ] 0x2
jb r-xdata
lea eax [ ebp - 0x36 ]
cmp [ ebp - 0x36 ] bl
je r-xdata
mov [ ebp - 0x4 ] edi
lea eax [ esi + esi ]
add eax 0x3
and al 0xfc
call sub_4169b0
mov [ ebp - 0x18 ] esp
mov edi esp
mov [ ebp - 0x28 ] edi
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
lea eax [ ebp - 0x36 ]
cmp [ ebp - 0x36 ] bl
je r-xdata
mov dl [ eax + 0x1 ]
cmp dl bl
je r-xdata
cmp edi ebx
je r-xdata
mov dl [ eax + 0x1 ]
cmp dl bl
je r-xdata
mov ecx [ ebp + 0x10 ]
mov cl [ ecx ]
cmp cl [ eax ]
jb r-xdata
push esi
push edi
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push 0x1
push [ ebp + 0x20 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
je r-xdata
mov ecx [ ebp + 0x18 ]
mov cl [ ecx ]
cmp cl [ eax ]
jb r-xdata
inc eax
inc eax
cmp [ eax ] bl
jne r-xdata
cmp cl dl
jbe r-xdata
push esi
push edi
push [ ebp - 0x1c ]
push [ ebp - 0x24 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ CompareStringW@IAT ]
jmp r-xdata
inc eax
inc eax
cmp [ eax ] bl
jne r-xdata
cmp cl dl
jbe r-xdata
jmp r-xdata
sub_41565b
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
xor edi edi
cmp [ ebp + 0x8 ] edi
je r-xdata
or eax 0xffffffff
push 0x3d
push [ ebp + 0x8 ]
call sub_416d20
mov esi eax
pop ecx
cmp esi edi
pop ecx
mov [ ebp - 0x8 ] esi
je r-xdata
cmp [ ebp + 0x8 ] esi
je r-xdata
mov eax [ rw-data ]
xor ebx ebx
cmp [ esi + 0x1 ] bl
sete bl
cmp eax [ rw-data ]
jne r-xdata
cmp eax edi
jne r-xdata
push eax
call sub_41583a
pop ecx
mov [ rw-data ] eax
sub esi [ ebp + 0x8 ]
mov edi [ rw-data ]
mov [ ebp - 0x4 ] edi
push esi
push [ ebp + 0x8 ]
call sub_4157e2
mov esi eax
pop ecx
test esi esi
pop ecx
jl r-xdata
cmp [ ebp + 0xc ] edi
je r-xdata
test ebx ebx
jne r-xdata
cmp [ edi ] 0x0
je r-xdata
cmp ebx edi
jne r-xdata
cmp [ rw-data ] edi
je r-xdata
xor eax eax
jmp r-xdata
test esi esi
jge r-xdata
test ebx ebx
je r-xdata
push 0x4
call sub_40f978
cmp eax edi
pop ecx
mov [ rw-data ] eax
je r-xdata
call sub_41155d
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
lea eax [ esi * 4 + 0x8 ]
push eax
push edi
call sub_4115cb
pop ecx
test eax eax
pop ecx
je r-xdata
neg esi
mov eax [ ebp + 0x8 ]
mov [ edi + esi * 4 ] eax
jmp r-xdata
push [ edi + esi * 4 ]
lea edi [ edi + esi * 4 ]
call sub_40eb0e
pop ecx
mov [ eax ] edi
cmp [ rw-data ] edi
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov [ eax + esi * 4 ] ecx
and [ eax + esi * 4 + 0x4 ] 0x0
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov eax esi
shl eax 0x2
push eax
push [ ebp - 0x4 ]
call sub_4115cb
pop ecx
test eax eax
pop ecx
je r-xdata
mov eax [ edi + 0x4 ]
inc esi
mov [ edi ] eax
add edi 0x4
jmp r-xdata
push 0x4
call sub_40f978
cmp eax edi
pop ecx
mov [ rw-data ] eax
je r-xdata
push [ ebp + 0x8 ]
call sub_40ec70
inc eax
inc eax
push eax
call sub_40f978
mov esi eax
pop ecx
test esi esi
pop ecx
je r-xdata
jmp r-xdata
cmp [ edi ] 0x0
je r-xdata
mov [ eax ] edi
push [ ebp + 0x8 ]
push esi
call sub_413ee0
mov eax esi
pop ecx
sub eax [ ebp + 0x8 ]
pop ecx
add eax [ ebp - 0x8 ]
and [ eax ] 0x0
inc eax
neg ebx
sbb ebx ebx
not ebx
and ebx eax
push ebx
push esi
call [ SetEnvironmentVariableA@IAT ]
push esi
call sub_40eb0e
pop ecx
mov [ rw-data ] eax
sub_4157e2
push esi
mov esi [ rw-data ]
push edi
mov eax [ esi ]
test eax eax
je r-xdata
mov eax esi
sub eax [ rw-data ]
sar eax 0x2
neg eax
mov edi [ esp + 0x10 ]
mov eax [ esi + 0x4 ]
add esi 0x4
test eax eax
jne r-xdata
mov eax [ esi ]
mov al [ eax + edi ]
cmp al 0x3d
je r-xdata
push edi
push eax
push [ esp + 0x14 ]
call sub_41151e
add esp 0xc
test eax eax
jne r-xdata
mov eax esi
sub eax [ rw-data ]
sar eax 0x2
jmp r-xdata
test al al
je r-xdata
pop edi
pop esi
retn
sub_41583a
push edi
mov edi [ esp + 0x8 ]
xor ecx ecx
test edi edi
jne r-xdata
cmp [ edi ] 0x0
lea eax [ edi + 0x4 ]
je r-xdata
xor eax eax
pop edi
retn
push ebx
push ebp
lea eax [ ecx * 4 + 0x4 ]
push esi
push eax
call sub_40f978
mov esi eax
pop ecx
test esi esi
mov ebp esi
jne r-xdata
mov edx [ eax ]
inc ecx
add eax 0x4
test edx edx
jne r-xdata
mov eax [ edi ]
mov ebx edi
push 0x9
call sub_40eac5
pop ecx
and [ esi ] 0x0
mov eax ebp
pop esi
pop ebp
pop ebx
pop edi
retn
push eax
add ebx 0x4
call sub_416d93
mov [ esi ] eax
mov eax [ ebx ]
pop ecx
add esi 0x4
jmp r-xdata
test eax eax
je r-xdata
sub_4158a1
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x1c
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
xor esi esi
cmp [ rw-data ] esi
jne r-xdata
cmp [ ebp + 0x14 ] esi
jle r-xdata
push esi
push esi
push 0x1
pop ebx
push ebx
push r--data
mov edi 0x100
push edi
push esi
call [ LCMapStringW@IAT ]
test eax eax
je r-xdata
mov eax [ rw-data ]
cmp eax 0x1
jne r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
call sub_415aaa
pop ecx
pop ecx
mov [ ebp + 0x14 ] eax
push esi
push esi
push ebx
push r--data
push edi
push esi
call [ LCMapStringA@IAT ]
test eax eax
je r-xdata
mov [ rw-data ] ebx
jmp r-xdata
cmp eax 0x2
jne r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringW@IAT ]
jmp r-xdata
xor eax eax
mov [ rw-data ] 0x2
cmp [ ebp + 0x20 ] esi
jne r-xdata
lea esp [ ebp - 0x38 ]
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
push esi
push esi
push esi
push esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push 0x220
push [ ebp + 0x20 ]
call [ WideCharToMultiByte@IAT ]
mov [ ebp - 0x20 ] eax
cmp eax esi
je r-xdata
mov eax [ rw-data ]
mov [ ebp + 0x20 ] eax
mov [ ebp - 0x4 ] esi
add eax 0x3
and al 0xfc
call sub_4169b0
mov [ ebp - 0x18 ] esp
mov eax esp
mov [ ebp - 0x1c ] eax
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x1c ] esi
je r-xdata
push esi
push esi
push [ ebp - 0x20 ]
push [ ebp - 0x1c ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push 0x220
push [ ebp + 0x20 ]
call [ WideCharToMultiByte@IAT ]
test eax eax
je r-xdata
push esi
push esi
push [ ebp - 0x20 ]
push [ ebp - 0x1c ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringA@IAT ]
mov edi eax
mov [ ebp - 0x2c ] edi
cmp edi esi
je r-xdata
mov [ ebp - 0x4 ] 0x1
add eax 0x3
and al 0xfc
call sub_4169b0
mov [ ebp - 0x18 ] esp
mov ebx esp
mov [ ebp - 0x24 ] ebx
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
cmp ebx esi
je r-xdata
push edi
push ebx
push [ ebp - 0x20 ]
push [ ebp - 0x1c ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringA@IAT ]
test eax eax
je r-xdata
test [ ebp + 0xd ] 0x4
je r-xdata
cmp [ ebp + 0x1c ] esi
jne r-xdata
mov eax [ ebp + 0x1c ]
cmp eax esi
je r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push esi
push esi
jmp r-xdata
mov eax edi
jmp r-xdata
cmp eax edi
jl r-xdata
push edi
push ebx
push 0x1
push [ ebp + 0x20 ]
call [ MultiByteToWideChar@IAT ]
mov edi eax
cmp edi esi
je r-xdata
push eax
push ebx
push [ ebp + 0x18 ]
call sub_4152e0
add esp 0xc
jmp r-xdata
mov eax edi
sub_415aaa
mov edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
test edx edx
push esi
lea ecx [ edx - 0x1 ]
je r-xdata
cmp [ eax ] 0x0
pop esi
jne r-xdata
cmp [ eax ] 0x0
je r-xdata
mov eax edx
retn
sub eax [ esp + 0x4 ]
sar eax 0x1
retn
inc eax
mov esi ecx
inc eax
dec ecx
test esi esi
jne r-xdata
sub_415ada
push ebp
mov ebp esp
push ecx
cmp [ ebp + 0x8 ] 0xffff
je r-xdata
xor eax eax
leave
retn
cmp [ ebp + 0x8 ] 0x100
jae r-xdata
push 0x0
lea eax [ ebp - 0x4 ]
push 0x0
push eax
lea eax [ ebp + 0x8 ]
push 0x1
push eax
push 0x1
call sub_416dbe
add esp 0x18
test eax eax
jne r-xdata
movzx eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
mov ax [ ecx + eax * 2 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
movzx ecx [ ebp + 0xc ]
movzx eax ax
and eax ecx
leave
retn
sub_415b2c
push ebp
mov ebp esp
sub esp 0x1c
mov ecx [ ebp + 0xc ]
push ebx
xor ebx ebx
push esi
test cl 0x80
push edi
mov [ ebp - 0x1c ] 0xc
mov [ ebp - 0x18 ] ebx
je r-xdata
and [ ebp - 0x1 ] 0x0
mov [ ebp - 0x14 ] 0x1
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x1 ] 0x10
jmp r-xdata
push 0x3
mov eax ecx
pop esi
and eax esi
sub eax ebx
je r-xdata
test ch 0x40
jne r-xdata
mov eax 0x8000
test eax ecx
jne r-xdata
mov [ ebp - 0xc ] 0x80000000
dec eax
je r-xdata
or [ ebp - 0x1 ] 0x80
cmp [ rw-data ] eax
je r-xdata
mov [ ebp - 0x10 ] ebx
cmp eax 0x20
je r-xdata
mov [ ebp - 0xc ] 0x40000000
jmp r-xdata
dec eax
je r-xdata
cmp ecx 0x500
je r-xdata
je r-xdata
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
cmp eax 0x30
je r-xdata
mov eax [ ebp + 0x10 ]
cmp eax 0x10
je r-xdata
mov [ ebp - 0xc ] 0xc0000000
jmp r-xdata
mov [ rw-data ] 0x16
mov [ rw-data ] ebx
jmp r-xdata
mov [ ebp - 0x8 ] 0x1
cmp ecx 0x600
je r-xdata
mov [ ebp - 0x8 ] esi
jmp r-xdata
cmp ecx ebx
je r-xdata
mov edx 0x700
mov eax 0x400
and ecx edx
mov edi 0x100
cmp ecx eax
jg r-xdata
mov [ ebp - 0x10 ] 0x2
jmp r-xdata
cmp eax 0x40
jne r-xdata
or eax 0xffffffff
jmp r-xdata
test al 0x40
je r-xdata
mov ecx [ rw-data ]
not ecx
and ecx [ ebp + 0x14 ]
test cl 0x80
jne r-xdata
mov [ ebp - 0x8 ] 0x5
jmp r-xdata
cmp ecx edx
je r-xdata
mov eax [ ebp + 0xc ]
mov esi 0x80
test edi eax
je r-xdata
cmp ecx edi
je r-xdata
mov [ ebp - 0x10 ] esi
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
test ah 0x10
je r-xdata
or esi 0x4000000
or [ ebp - 0xa ] 0x1
push 0x1
pop esi
jmp r-xdata
mov [ ebp - 0x8 ] 0x4
jmp r-xdata
cmp ecx 0x200
je r-xdata
test al 0x20
je r-xdata
or esi edi
cmp ecx 0x300
jne r-xdata
test al 0x10
je r-xdata
or esi 0x8000000
jmp r-xdata
mov [ ebp - 0x8 ] 0x2
jmp r-xdata
call sub_4145ae
mov ebx eax
or edi 0xffffffff
cmp ebx edi
jne r-xdata
or esi 0x10000000
push 0x0
push esi
push [ ebp - 0x8 ]
lea eax [ ebp - 0x1c ]
push eax
push [ ebp - 0x10 ]
push [ ebp - 0xc ]
push [ ebp + 0x8 ]
call [ CreateFileW@IAT ]
mov esi eax
cmp esi edi
je r-xdata
and [ rw-data ] 0x0
mov [ rw-data ] 0x18
jmp r-xdata
call [ GetLastError@IAT ]
push eax
call sub_414547
pop ecx
push esi
call [ GetFileType@IAT ]
test eax eax
jne r-xdata
mov eax edi
jmp r-xdata
cmp eax 0x2
jne r-xdata
push esi
call [ CloseHandle@IAT ]
cmp eax 0x3
jne r-xdata
or [ ebp - 0x1 ] 0x40
jmp r-xdata
push esi
push ebx
call sub_414643
pop ecx
mov al [ ebp - 0x1 ]
pop ecx
mov esi ebx
mov ecx ebx
or al 0x1
sar ecx 0x5
and esi 0x1f
mov [ ebp + 0xb ] al
lea edi [ ecx * 4 + rw-data ]
shl esi 0x3
mov ecx [ edi ]
and [ ebp + 0xb ] 0x48
mov [ ecx + esi + 0x4 ] al
jne r-xdata
or [ ebp - 0x1 ] 0x8
cmp [ ebp + 0xb ] 0x0
jne r-xdata
test al 0x80
je r-xdata
mov eax ebx
test [ ebp + 0xc ] 0x8
je r-xdata
test [ ebp + 0xc ] 0x2
je r-xdata
mov eax [ edi ]
or [ eax + esi + 0x4 ] 0x20
lea eax [ eax + esi + 0x4 ]
push 0x2
push 0xffffffff
push ebx
call sub_410c18
add esp 0xc
cmp eax 0xffffffff
mov [ ebp - 0x10 ] eax
jne r-xdata
and [ ebp + 0x10 ] 0x0
lea eax [ ebp + 0x10 ]
push 0x1
push eax
push ebx
call sub_41089b
add esp 0xc
test eax eax
jne r-xdata
cmp [ rw-data ] 0x83
je r-xdata
push 0x0
push 0x0
push ebx
call sub_410c18
add esp 0xc
cmp eax 0xffffffff
jne r-xdata
cmp [ ebp + 0x10 ] 0x1a
jne r-xdata
jmp r-xdata
push ebx
call sub_4105d7
pop ecx
push [ ebp - 0x10 ]
push ebx
call sub_416bda
pop ecx
cmp eax 0xffffffff
pop ecx
je r-xdata
sub_415de6
push ebp
mov ebp esp
push ecx
push esi
fwait
fnstcw [ ebp - 0x4 ]
push [ ebp - 0x4 ]
call sub_415e31
mov esi eax
mov eax [ ebp + 0xc ]
not eax
and esi eax
mov eax [ ebp + 0x8 ]
and eax [ ebp + 0xc ]
or esi eax
push esi
call sub_415ec3
pop ecx
mov [ ebp + 0xc ] eax
pop ecx
fldcw [ ebp + 0xc ]
mov eax esi
pop esi
leave
retn
sub_415e31
push ebx
mov ebx [ esp + 0x8 ]
xor eax eax
push ebp
test bl 0x1
push edi
je r-xdata
test bl 0x4
je r-xdata
push 0x10
pop eax
test bl 0x8
je r-xdata
or al 0x8
test bl 0x10
je r-xdata
or al 0x4
test bl 0x20
je r-xdata
or al 0x2
test bl 0x2
je r-xdata
or al 0x1
movzx ecx bx
push esi
mov edx ecx
mov esi 0xc00
mov edi 0x300
and edx esi
mov ebp 0x200
je r-xdata
or eax 0x80000
and ecx edi
pop esi
je r-xdata
cmp edx 0x400
je r-xdata
or eax 0x20000
cmp ecx ebp
jne r-xdata
or ah 0x1
cmp edx 0x800
je r-xdata
retn
or eax 0x40000
pop edi
pop ebp
test bh 0x10
pop ebx
je r-xdata
or eax 0x10000
jmp r-xdata
or eax ebp
jmp r-xdata
cmp edx esi
jne r-xdata
or eax edi
jmp r-xdata
sub_415ec3
push ebx
mov ebx [ esp + 0x8 ]
xor eax eax
push esi
test bl 0x10
je r-xdata
test bl 0x8
je r-xdata
push 0x1
pop eax
test bl 0x4
je r-xdata
or al 0x4
test bl 0x2
je r-xdata
or al 0x8
test bl 0x1
je r-xdata
or al 0x10
test ebx 0x80000
je r-xdata
or al 0x20
mov ecx ebx
mov edx 0x300
and ecx edx
mov esi 0x200
je r-xdata
or al 0x2
mov ecx ebx
and ecx 0x30000
je r-xdata
cmp ecx 0x100
je r-xdata
or eax edx
cmp ecx 0x10000
jne r-xdata
or ah 0x4
cmp ecx esi
je r-xdata
retn
or ah 0x10
pop esi
test ebx 0x40000
pop ebx
je r-xdata
or eax esi
jmp r-xdata
or ah 0x8
jmp r-xdata
cmp ecx edx
jne r-xdata
or ah 0xc
jmp r-xdata
sub_415f4c
push ebp
mov ebp esp
push ecx
cmp [ rw-data ] 0x0
push ebx
push esi
push edi
jne r-xdata
mov ebx [ ebp + 0x8 ]
mov edi 0x100
push 0x1
cmp ebx edi
pop esi
jge r-xdata
mov eax [ ebp + 0x8 ]
cmp eax 0x41
jl r-xdata
mov edx [ rw-data ]
mov eax ebx
sar eax 0x8
movzx ecx al
test [ edx + ecx * 2 + 0x1 ] 0x80
je r-xdata
cmp [ rw-data ] esi
jle r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp eax 0x5a
jg r-xdata
and [ ebp + 0x9 ] 0x0
mov [ ebp + 0x8 ] bl
mov eax esi
and [ ebp + 0xa ] 0x0
push 0x2
mov [ ebp + 0x8 ] al
mov [ ebp + 0x9 ] bl
pop eax
jmp r-xdata
mov eax [ rw-data ]
mov al [ eax + ebx * 2 ]
and eax esi
push esi
push ebx
call sub_4103a6
pop ecx
pop ecx
jmp r-xdata
add eax 0x20
jmp r-xdata
mov eax ebx
jmp r-xdata
cmp eax esi
jne r-xdata
push esi
push 0x0
lea ecx [ ebp - 0x4 ]
push 0x3
push ecx
push eax
lea eax [ ebp + 0x8 ]
push eax
push edi
push [ rw-data ]
call sub_415091
add esp 0x20
test eax eax
je r-xdata
test eax eax
jne r-xdata
movzx eax [ ebp - 0x3 ]
movzx ecx [ ebp - 0x4 ]
shl eax 0x8
or eax ecx
movzx eax [ ebp - 0x4 ]
jmp r-xdata
sub_416017
mov eax [ esp + 0x8 ]
push esi
push 0x20
cdq
pop ecx
idiv ecx
push 0x1f
mov esi eax
mov eax [ esp + 0x10 ]
cdq
idiv ecx
pop ecx
mov eax [ esp + 0x8 ]
sub ecx edx
or edx 0xffffffff
shl edx cl
not edx
test [ eax + esi * 4 ] edx
jne r-xdata
xor eax eax
pop esi
retn
inc esi
cmp esi 0x3
jge r-xdata
push 0x1
pop eax
pop esi
retn
lea eax [ eax + esi * 4 ]
inc esi
add eax 0x4
cmp esi 0x3
jl r-xdata
cmp [ eax ] 0x0
jne r-xdata
sub_416060
mov eax [ esp + 0x8 ]
push ebx
push esi
push edi
push 0x20
mov ebx [ esp + 0x14 ]
cdq
pop ecx
idiv ecx
mov esi eax
mov eax [ esp + 0x14 ]
cdq
idiv ecx
lea edi [ ebx + esi * 4 ]
push edi
push 0x1f
pop ecx
push 0x1
pop eax
sub ecx edx
shl eax cl
push eax
push [ edi ]
call sub_416f83
add esp 0xc
dec esi
js r-xdata
pop edi
pop esi
pop ebx
retn
lea edi [ ebx + esi * 4 ]
push edi
push 0x1
push [ edi ]
call sub_416f83
add esp 0xc
dec esi
sub edi 0x4
test esi esi
jge r-xdata
test eax eax
je r-xdata
sub_4160b6
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0xc ]
push ebx
push esi
push edi
lea edi [ eax - 0x1 ]
push 0x20
pop ecx
and [ ebp - 0x4 ] 0x0
lea ebx [ edi + 0x1 ]
push 0x20
mov eax ebx
pop esi
cdq
idiv ecx
push 0x1f
mov ecx eax
mov eax ebx
cdq
idiv esi
mov eax [ ebp + 0x8 ]
pop esi
push 0x1
mov [ ebp - 0x8 ] ecx
lea eax [ eax + ecx * 4 ]
mov [ ebp + 0xc ] eax
sub esi edx
pop edx
mov ecx esi
shl edx cl
test [ eax ] edx
je r-xdata
or edx 0xffffffff
mov ecx esi
shl edx cl
push 0x3
pop ecx
and [ eax ] edx
mov eax [ ebp - 0x8 ]
inc eax
cmp eax ecx
jge r-xdata
inc ebx
push ebx
push [ ebp + 0x8 ]
call sub_416017
pop ecx
test eax eax
pop ecx
jne r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
leave
retn
mov edx [ ebp + 0x8 ]
sub ecx eax
lea edi [ edx + eax * 4 ]
xor eax eax
[ edi ]
mov eax [ ebp + 0xc ]
push edi
push [ ebp + 0x8 ]
call sub_416060
pop ecx
mov [ ebp - 0x4 ] eax
pop ecx
sub_416142
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
push esi
push 0x3
sub ecx eax
pop edx
mov esi [ eax ]
mov [ ecx + eax ] esi
add eax 0x4
dec edx
jne r-xdata
pop esi
retn
sub_416169
mov eax [ esp + 0x4 ]
xor ecx ecx
xor eax eax
retn
inc ecx
add eax 0x4
cmp ecx 0x3
jl r-xdata
cmp [ eax ] 0x0
jne r-xdata
push 0x1
pop eax
retn
sub_416184
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0xc ]
push ebx
push esi
push edi
push 0x20
mov edi [ ebp + 0x8 ]
pop ebx
or esi 0xffffffff
cdq
mov ecx ebx
mov [ ebp - 0x4 ] 0x3
idiv ecx
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0xc ]
cdq
idiv ecx
and [ ebp + 0xc ] 0x0
mov ecx edx
shl esi cl
sub ebx edx
not esi
mov eax [ edi ]
mov ecx eax
and ecx esi
mov [ ebp - 0x8 ] ecx
mov ecx edx
shr eax cl
or eax [ ebp + 0xc ]
mov [ edi ] eax
mov eax [ ebp - 0x8 ]
mov ecx ebx
add edi 0x4
shl eax cl
dec [ ebp - 0x4 ]
mov [ ebp + 0xc ] eax
jne r-xdata
mov edi [ ebp - 0xc ]
push 0x2
pop ebx
mov esi edi
push 0x8
pop ecx
shl esi 0x2
mov eax [ ebp + 0x8 ]
and [ ecx + eax ] 0x0
mov edx [ ebp + 0x8 ]
mov eax ecx
sub eax esi
mov eax [ eax + edx ]
mov [ ecx + edx ] eax
jmp r-xdata
cmp ebx edi
jl r-xdata
pop edi
pop esi
pop ebx
leave
retn
dec ebx
sub ecx 0x4
jns r-xdata
sub_416211
push ebp
mov ebp esp
sub esp 0x18
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
movzx ecx [ eax + 0xa ]
mov ebx ecx
and ecx 0x8000
mov [ ebp + 0x8 ] ecx
mov ecx [ eax + 0x6 ]
mov [ ebp - 0xc ] ecx
mov ecx [ eax + 0x2 ]
movzx eax [ eax ]
mov edi [ ebp + 0x10 ]
and ebx 0x7fff
sub ebx 0x3fff
mov [ ebp - 0x8 ] ecx
shl eax 0x10
cmp ebx 0xffffc001
mov [ ebp - 0x4 ] eax
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x18 ]
push eax
call sub_416142
push [ edi + 0x8 ]
lea eax [ ebp - 0xc ]
push eax
call sub_4160b6
add esp 0x10
test eax eax
je r-xdata
lea eax [ ebp - 0xc ]
xor esi esi
push eax
call sub_416169
test eax eax
pop ecx
jne r-xdata
mov eax [ edi + 0x4 ]
mov ecx eax
sub ecx [ edi + 0x8 ]
cmp ebx ecx
jge r-xdata
inc ebx
xor eax eax
lea eax [ ebp - 0xc ]
push eax
call sub_41615d
pop ecx
cmp ebx eax
jg r-xdata
lea eax [ ebp - 0xc ]
push eax
call sub_41615d
pop ecx
jmp r-xdata
cmp edi 0x20
jne r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ebp - 0x8 ]
mov [ ecx + 0x4 ] esi
mov [ ecx ] edx
jmp r-xdata
push 0x1f
pop ecx
sub ecx [ edi + 0xc ]
mov edi [ edi + 0x10 ]
shl esi cl
mov ecx [ ebp + 0x8 ]
neg ecx
sbb ecx ecx
and ecx 0x80000000
or esi ecx
or esi [ ebp - 0xc ]
cmp edi 0x40
jne r-xdata
cmp ebx [ edi ]
jl r-xdata
sub eax ebx
mov esi eax
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0xc ]
push eax
call sub_416142
lea eax [ ebp - 0xc ]
push esi
push eax
call sub_416184
push [ edi + 0x8 ]
lea eax [ ebp - 0xc ]
push eax
call sub_4160b6
mov eax [ edi + 0xc ]
inc eax
push eax
lea eax [ ebp - 0xc ]
push eax
call sub_416184
add esp 0x20
xor esi esi
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov ecx [ ebp + 0xc ]
mov [ ecx ] esi
push [ edi + 0xc ]
mov esi [ edi + 0x14 ]
and [ ebp - 0x9 ] 0x7f
lea eax [ ebp - 0xc ]
push eax
add esi ebx
call sub_416184
pop ecx
pop ecx
lea eax [ ebp - 0xc ]
push eax
call sub_41615d
push [ edi + 0xc ]
or [ ebp - 0x9 ] 0x80
lea eax [ ebp - 0xc ]
push eax
call sub_416184
mov esi [ edi + 0x14 ]
add esp 0xc
add esi [ edi ]
push 0x1
jmp r-xdata
push 0x2
pop eax
jmp r-xdata
sub_4163a9
push ebp
mov ebp esp
sub esp 0xc
xor eax eax
push eax
push eax
push eax
push eax
push [ ebp + 0xc ]
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0xc ]
push eax
call sub_417124
push [ ebp + 0x8 ]
lea eax [ ebp - 0xc ]
push eax
call sub_41637d
add esp 0x24
leave
retn
sub_4163d6
push ebp
mov ebp esp
sub esp 0xc
xor eax eax
push eax
push eax
push eax
push eax
push [ ebp + 0xc ]
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0xc ]
push eax
call sub_417124
push [ ebp + 0x8 ]
lea eax [ ebp - 0xc ]
push eax
call sub_416393
add esp 0x24
leave
retn
sub_416403
push ebp
mov ebp esp
mov edx [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov ecx [ edx + 0xc ]
push edi
lea edi [ esi + 0x1 ]
mov [ esi ] 0x30
test ebx ebx
mov eax edi
jle r-xdata
and [ eax ] 0x0
test ebx ebx
jl r-xdata
mov [ ebp + 0x8 ] ebx
xor ebx ebx
cmp [ esi ] 0x31
jne r-xdata
cmp [ ecx ] 0x35
jl r-xdata
push 0x30
pop edx
movsx edx dl
inc ecx
jmp r-xdata
push edi
call sub_40ec70
inc eax
push eax
push edi
push esi
call sub_40db20
add esp 0x10
inc [ edx + 0x4 ]
jmp r-xdata
dec eax
cmp [ eax ] 0x39
jne r-xdata
mov dl [ ecx ]
test dl dl
je r-xdata
mov edx [ ebp + 0x10 ]
mov [ eax ] dl
inc eax
dec [ ebp + 0x8 ]
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
inc [ eax ]
mov [ eax ] 0x30
jmp r-xdata
sub_41647a
push ebp
mov ebp esp
sub esp 0xc
push esi
lea eax [ ebp + 0x8 ]
push edi
push eax
lea eax [ ebp - 0xc ]
push eax
call sub_4164de
pop ecx
lea esi [ ebp - 0xc ]
pop ecx
push rw-data
push 0x0
push 0x11
sub esp 0xc
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
call sub_4175f5
mov [ rw-data ] eax
add esp 0x18
movsx eax [ rw-data ]
mov [ rw-data ] eax
pop edi
movsx eax [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] rw-data
mov eax rw-data
pop esi
leave
retn
sub_4164de
push ebp
mov ebp esp
push ecx
mov edx [ ebp + 0xc ]
push ebx
push esi
push edi
mov ax [ edx + 0x6 ]
mov edi 0x7ff
mov ecx eax
and eax 0x8000
shr ecx 0x4
and ecx edi
mov [ ebp + 0xc ] eax
mov eax [ edx + 0x4 ]
mov edx [ edx ]
movzx ebx cx
mov esi 0x80000000
and eax 0xfffff
test ebx ebx
mov [ ebp - 0x4 ] esi
je r-xdata
xor ebx ebx
cmp eax ebx
jne r-xdata
cmp ebx edi
je r-xdata
lea edi [ ecx + 0x3c01 ]
mov [ ebp - 0x4 ] ebx
cmp edx ebx
jne r-xdata
mov edi 0x7fff
jmp r-xdata
lea edi [ ecx + 0x3c00 ]
jmp r-xdata
mov ecx [ ebp + 0xc ]
or ecx edi
mov [ eax + 0x8 ] cx
mov edx [ eax ]
add ecx ecx
mov ebx edx
shr ebx 0x1f
or ebx ecx
lea ecx [ edx + edx ]
mov [ eax ] ecx
mov [ eax + 0x4 ] ebx
add edi 0xffff
mov ecx ebx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4 ] ebx
mov [ eax ] ebx
mov [ eax + 0x8 ] bx
jmp r-xdata
mov ecx edx
shr ecx 0x15
shl eax 0xb
or ecx eax
mov eax [ ebp + 0x8 ]
or ecx [ ebp - 0x4 ]
shl edx 0xb
mov [ eax + 0x4 ] ecx
mov [ eax ] edx
test esi ecx
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_4165a0
mov edx [ esp + 0xc ]
mov ecx [ esp + 0x4 ]
test edx edx
je r-xdata
mov eax [ esp + 0x4 ]
retn
xor eax eax
mov al [ esp + 0x8 ]
push edi
mov edi ecx
cmp edx 0x4
jb r-xdata
mov [ edi ] al
inc edi
dec edx
jne r-xdata
neg ecx
and ecx 0x3
je r-xdata
mov eax [ esp + 0x8 ]
pop edi
retn
mov ecx eax
shl eax 0x8
add eax ecx
mov ecx eax
shl eax 0x10
add eax ecx
mov ecx edx
and edx 0x3
shr ecx 0x2
je r-xdata
sub edx ecx
[ edi ]
test edx edx
je r-xdata
mov [ edi ] al
inc edi
dec ecx
jne r-xdata
sub_416618
push ebp
mov ebp esp
sub esp 0xc
push ebx
and [ ebp - 0x8 ] 0x0
push esi
push edi
mov edi [ ebp + 0x8 ]
mov bl [ edi ]
lea esi [ edi + 0x1 ]
mov [ ebp - 0x4 ] esi
mov ecx [ rw-data ]
movzx eax bl
mov al [ ecx + eax * 2 ]
and eax 0x8
movzx eax bl
push 0x8
push eax
call sub_4103a6
pop ecx
pop ecx
jmp r-xdata
cmp bl 0x2d
mov [ ebp - 0x4 ] esi
jne r-xdata
mov bl [ esi ]
inc esi
jmp r-xdata
test eax eax
je r-xdata
cmp bl 0x2b
jne r-xdata
or [ ebp + 0x14 ] 0x2
jmp r-xdata
cmp [ rw-data ] 0x1
jle r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
jl r-xdata
mov bl [ esi ]
inc esi
mov [ ebp - 0x4 ] esi
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
cmp eax 0x1
je r-xdata
xor eax eax
mov [ eax ] edi
cmp eax 0x24
jg r-xdata
push 0x10
test eax eax
pop ecx
jne r-xdata
cmp [ ebp + 0x10 ] ecx
jne r-xdata
cmp bl 0x30
je r-xdata
or eax 0xffffffff
xor edx edx
div [ ebp + 0x10 ]
mov edi 0x103
mov [ ebp - 0xc ] eax
cmp bl 0x30
jne r-xdata
mov al [ esi ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x10 ] 0xa
jmp r-xdata
mov eax [ rw-data ]
mov al [ eax + esi * 2 ]
and eax 0x4
push 0x4
push esi
call sub_4103a6
pop ecx
pop ecx
jmp r-xdata
mov al [ esi ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x10 ] ecx
cmp al 0x58
je r-xdata
cmp [ rw-data ] 0x1
jle r-xdata
movsx ecx bl
sub ecx 0x30
jmp r-xdata
test eax eax
je r-xdata
mov bl [ esi + 0x1 ]
inc esi
inc esi
mov [ ebp - 0x4 ] esi
cmp al 0x58
jne r-xdata
mov [ ebp + 0x10 ] 0x8
jmp r-xdata
mov eax [ rw-data ]
mov ax [ eax + esi * 2 ]
and eax edi
push edi
push esi
call sub_4103a6
pop ecx
pop ecx
jmp r-xdata
cmp ecx [ ebp + 0x10 ]
jae r-xdata
mov ecx [ ebp + 0x14 ]
dec [ ebp - 0x4 ]
mov edx [ ebp + 0xc ]
test cl 0x8
jne r-xdata
movsx eax bl
push eax
call sub_417888
pop ecx
mov ecx eax
sub ecx 0x37
test eax eax
je r-xdata
mov esi [ ebp - 0x8 ]
or [ ebp + 0x14 ] 0x8
cmp esi [ ebp - 0xc ]
jb r-xdata
test cl 0x4
mov eax 0x7fffffff
jne r-xdata
test edx edx
je r-xdata
imul esi [ ebp + 0x10 ]
add esi ecx
mov [ ebp - 0x8 ] esi
jne r-xdata
test [ ebp + 0x14 ] 0x1
mov [ rw-data ] 0x22
je r-xdata
test cl 0x1
jne r-xdata
and [ ebp - 0x8 ] 0x0
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
cmp [ rw-data ] 0x1
movzx esi bl
jle r-xdata
or [ ebp + 0x14 ] 0x4
jmp r-xdata
or eax 0xffffffff
xor edx edx
div [ ebp + 0x10 ]
cmp ecx edx
jbe r-xdata
mov ecx [ ebp + 0x14 ]
and cl 0x2
neg cl
sbb ecx ecx
neg ecx
add ecx eax
mov [ ebp - 0x8 ] ecx
or [ ebp - 0x8 ] 0xffffffff
jmp r-xdata
test edx edx
je r-xdata
and ecx 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
inc [ ebp - 0x4 ]
mov bl [ eax ]
jmp r-xdata
test [ ebp + 0x14 ] 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ edx ] eax
test ecx ecx
jne r-xdata
cmp [ ebp - 0x8 ] 0x80000000
ja r-xdata
mov eax [ ebp - 0x8 ]
jmp r-xdata
mov eax [ ebp - 0x8 ]
neg eax
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] eax
jbe r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_416830
xor eax eax
mov al [ esp + 0x8 ]
push ebx
mov ebx eax
shl eax 0x8
mov edx [ esp + 0x8 ]
test edx 0x3
je r-xdata
or ebx eax
push edi
mov eax ebx
shl ebx 0x10
push esi
or ebx eax
mov cl [ edx ]
inc edx
cmp cl bl
je r-xdata
mov eax [ edx - 0x4 ]
cmp al bl
je r-xdata
and eax 0x81010100
je r-xdata
lea eax [ edx - 0x1 ]
pop ebx
retn
test cl cl
je r-xdata
lea eax [ edx - 0x4 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
mov ecx [ edx ]
mov edi 0x7efefeff
mov eax ecx
mov esi edi
xor ecx ebx
add esi eax
add edi ecx
xor ecx 0xffffffff
xor eax 0xffffffff
xor ecx edi
xor eax esi
add edx 0x4
and ecx 0x81010100
jne r-xdata
and eax 0x1010100
jne r-xdata
pop ebx
xor eax eax
retn
test edx 0x3
jne r-xdata
pop esi
pop edi
cmp ah bl
je r-xdata
and esi 0x80000000
jne r-xdata
lea eax [ edx - 0x3 ]
pop esi
pop edi
pop ebx
retn
test ah ah
je r-xdata
shr eax 0x10
cmp al bl
je r-xdata
lea eax [ edx - 0x2 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
cmp ah bl
je r-xdata
pop esi
pop edi
lea eax [ edx - 0x1 ]
pop ebx
retn
test ah ah
je r-xdata
jmp r-xdata
sub_4168f0
mov ecx [ esp + 0x8 ]
push edi
push ebx
push esi
mov dl [ ecx ]
mov edi [ esp + 0x10 ]
test dl dl
je r-xdata
mov eax edi
pop esi
pop ebx
pop edi
retn
mov dh [ ecx + 0x1 ]
test dh dh
je r-xdata
xor eax eax
pop esi
pop ebx
pop edi
mov al dl
jmp r-xdata
mov esi edi
mov ecx [ esp + 0x14 ]
mov al [ edi ]
inc esi
cmp al dl
je r-xdata
push ebx
mov ebx eax
shl eax 0x8
mov edx [ esp + 0x8 ]
test edx 0x3
je r-xdata
mov al [ esi ]
inc esi
cmp al dh
jne r-xdata
test al al
je r-xdata
or ebx eax
push edi
mov eax ebx
shl ebx 0x10
push esi
or ebx eax
mov cl [ edx ]
inc edx
cmp cl bl
je r-xdata
cmp al dl
je r-xdata
lea edi [ esi - 0x1 ]
pop esi
pop ebx
pop edi
xor eax eax
retn
mov al [ esi ]
inc esi
mov eax [ edx - 0x4 ]
cmp al bl
je r-xdata
and eax 0x81010100
je r-xdata
lea eax [ edx - 0x1 ]
pop ebx
retn
test cl cl
je r-xdata
test al al
jne r-xdata
lea eax [ edi - 0x1 ]
pop esi
pop ebx
pop edi
retn
mov al [ esi ]
add esi 0x2
cmp al ah
jne r-xdata
lea eax [ edx - 0x4 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
mov ecx [ edx ]
mov edi 0x7efefeff
mov eax ecx
mov esi edi
xor ecx ebx
add esi eax
add edi ecx
xor ecx 0xffffffff
xor eax 0xffffffff
xor ecx edi
xor eax esi
add edx 0x4
and ecx 0x81010100
jne r-xdata
and eax 0x1010100
jne r-xdata
pop ebx
xor eax eax
retn
test edx 0x3
jne r-xdata
mov al [ ecx + 0x3 ]
test al al
je r-xdata
pop esi
pop edi
cmp ah bl
je r-xdata
and esi 0x80000000
jne r-xdata
mov ah [ esi - 0x1 ]
add ecx 0x2
cmp al ah
je r-xdata
lea eax [ edx - 0x3 ]
pop esi
pop edi
pop ebx
retn
test ah ah
je r-xdata
mov ah [ ecx + 0x2 ]
test ah ah
je r-xdata
jmp r-xdata
shr eax 0x10
cmp al bl
je r-xdata
lea eax [ edx - 0x2 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
cmp ah bl
je r-xdata
pop esi
pop edi
lea eax [ edx - 0x1 ]
pop ebx
retn
test ah ah
je r-xdata
jmp r-xdata
sub_416970
push ebp
mov ebp esp
push edi
push esi
push ebx
mov ecx [ ebp + 0x10 ]
jecxz r-xdata
mov eax ecx
pop ebx
pop esi
pop edi
leave
retn
mov ebx ecx
mov edi [ ebp + 0x8 ]
mov esi edi
xor eax eax
[ edi ]
neg ecx
add ecx ebx
mov edi esi
mov esi [ ebp + 0xc ]
[ esi ] [ edi ]
mov al [ esi - 0x1 ]
xor ecx ecx
cmp al [ edi - 0x1 ]
ja r-xdata
not ecx
je r-xdata
dec ecx
dec ecx
sub_4169b0
push ecx
cmp eax 0x1000
lea ecx [ esp + 0x8 ]
jb r-xdata
sub ecx eax
mov eax esp
test [ ecx ] eax
mov esp ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
push eax
retn
sub ecx 0x1000
sub eax 0x1000
test [ ecx ] eax
cmp eax 0x1000
jae r-xdata
sub_4169df
push ebx
xor ebx ebx
cmp [ rw-data ] ebx
push esi
push edi
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
push r--data
call [ LoadLibraryA@IAT ]
mov edi eax
cmp edi ebx
je r-xdata
push [ esp + 0x18 ]
push [ esp + 0x18 ]
push [ esp + 0x18 ]
push ebx
call [ rw-data ]
call eax
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
mov esi [ GetProcAddress@IAT ]
push r--data
push edi
call esi
test eax eax
mov [ rw-data ] eax
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
push r--data
push edi
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
mov [ rw-data ] eax
push ebx
call eax
mov ebx eax
sub_416a68
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax edi
dec eax
dec eax
je r-xdata
mov esi [ rw-data ]
mov eax rw-data
dec eax
dec eax
je r-xdata
test esi esi
jne r-xdata
xor eax eax
jmp r-xdata
push edi
call sub_416b95
mov esi [ eax + 0x8 ]
add eax 0x8
pop ecx
jmp r-xdata
sub eax 0x4
je r-xdata
push ebx
push 0x8
pop ecx
cmp edi ecx
je r-xdata
push 0x3
call sub_40df29
pop edi
pop esi
pop ebp
retn
cmp esi 0x1
jne r-xdata
sub eax 0x3
je r-xdata
mov ebx [ rw-data ]
and [ rw-data ] 0x0
cmp edi ecx
jne r-xdata
cmp edi 0xb
je r-xdata
sub eax 0x4
je r-xdata
and [ eax ] 0x0
cmp edi ecx
jne r-xdata
mov edx [ rw-data ]
mov [ rw-data ] 0x8c
mov [ ebp + 0x8 ] edx
jmp r-xdata
cmp edi 0x4
jne r-xdata
mov esi [ rw-data ]
mov eax rw-data
jmp r-xdata
sub eax 0x6
je r-xdata
push edi
call esi
cmp edi 0xb
pop ecx
je r-xdata
push [ rw-data ]
push 0x8
call esi
pop ecx
pop ecx
jmp r-xdata
cmp edi ecx
jne r-xdata
mov ebx [ ebp + 0x8 ]
mov esi [ rw-data ]
mov eax rw-data
jmp r-xdata
dec eax
je r-xdata
cmp edi 0x8
mov [ rw-data ] ebx
jne r-xdata
cmp edi 0x4
jne r-xdata
mov eax [ rw-data ]
mov ecx [ rw-data ]
add ecx eax
cmp eax ecx
jge r-xdata
mov esi [ rw-data ]
mov eax rw-data
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
xor eax eax
pop ebx
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
lea edx [ eax + eax * 2 ]
sub ecx eax
lea edx [ edx * 4 + rw-data ]
and [ edx ] 0x0
add edx 0xc
dec ecx
jne r-xdata
jmp r-xdata
sub_416b95
mov edx [ esp + 0x4 ]
mov ecx [ rw-data ]
cmp [ rw-data ] edx
push esi
mov eax rw-data
je r-xdata
lea ecx [ ecx + ecx * 2 ]
pop esi
lea ecx [ ecx * 4 + rw-data ]
cmp eax ecx
jae r-xdata
lea esi [ ecx + ecx * 2 ]
lea esi [ esi * 4 + rw-data ]
xor eax eax
cmp [ eax + 0x4 ] edx
je r-xdata
cmp [ eax + 0x4 ] edx
jne r-xdata
retn
add eax 0xc
cmp eax esi
jae r-xdata
sub_416bda
push ebp
mov ebp esp
mov eax 0x1000
call sub_4169b0
push ebx
mov ebx [ ebp + 0x8 ]
push esi
xor esi esi
cmp ebx [ rw-data ]
jae r-xdata
mov [ rw-data ] 0x9
mov eax ebx
mov ecx ebx
sar eax 0x5
and ecx 0x1f
mov eax [ eax * 4 + rw-data ]
test [ eax + ecx * 8 + 0x4 ] 0x1
je r-xdata
push 0x1
push esi
push ebx
call sub_410c18
add esp 0xc
cmp eax 0xffffffff
mov [ ebp + 0x8 ] eax
je r-xdata
or eax 0xffffffff
push 0x2
push esi
push ebx
call sub_410c18
add esp 0xc
cmp eax 0xffffffff
je r-xdata
push edi
mov edi [ ebp + 0xc ]
sub edi eax
test edi edi
jle r-xdata
jge r-xdata
push 0x1000
lea eax [ ebp - 0x1000 ]
push esi
push eax
call sub_4165a0
push 0x8000
push ebx
call sub_417954
add esp 0x14
mov [ ebp + 0xc ] eax
push 0x0
push [ ebp + 0x8 ]
push ebx
call sub_410c18
add esp 0xc
mov eax esi
pop edi
jmp r-xdata
push 0x0
push [ ebp + 0xc ]
push ebx
call sub_410c18
push ebx
call sub_414734
add esp 0x10
push eax
call [ SetEndOfFile@IAT ]
mov esi eax
neg esi
sbb esi esi
neg esi
dec esi
cmp esi 0xffffffff
jne r-xdata
push eax
lea eax [ ebp - 0x1000 ]
push eax
push ebx
call sub_411941
add esp 0xc
cmp eax 0xffffffff
je r-xdata
mov eax edi
pop esi
pop ebx
leave
retn
mov [ rw-data ] 0xd
call [ GetLastError@IAT ]
mov [ rw-data ] eax
cmp [ rw-data ] 0x5
jne r-xdata
sub edi eax
test edi edi
jle r-xdata
or esi 0xffffffff
mov [ rw-data ] 0xd
push [ ebp + 0xc ]
push ebx
call sub_417954
pop ecx
pop ecx
jmp r-xdata
jmp r-xdata
mov eax 0x1000
cmp edi eax
jge r-xdata
sub_416d20
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
mov ecx [ ebp + 0x8 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_416830
pop ecx
pop ecx
pop ebp
retn
movzx edx ax
mov eax [ ebp + 0xc ]
sub eax edx
neg eax
sbb eax eax
not eax
and eax ecx
pop ebp
retn
movzx edx al
test [ edx + rw-data ] 0x4
je r-xdata
movzx edx ax
cmp [ ebp + 0xc ] edx
je r-xdata
mov dl [ ecx + 0x1 ]
inc ecx
test dl dl
je r-xdata
inc ecx
jmp r-xdata
xor eax eax
pop ebp
retn
movzx eax ax
movzx edx dl
shl eax 0x8
or eax edx
cmp [ ebp + 0xc ] eax
je r-xdata
movzx ax [ ecx ]
test ax ax
je r-xdata
lea eax [ ecx - 0x1 ]
pop ebp
retn
jmp r-xdata
sub_416d93
push esi
mov esi [ esp + 0x8 ]
test esi esi
je r-xdata
xor eax eax
pop esi
retn
push esi
call sub_40ec70
inc eax
push eax
call sub_40f978
pop ecx
test eax eax
pop ecx
je r-xdata
push esi
push eax
call sub_413ee0
pop ecx
pop ecx
pop esi
retn
sub_416dbe
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x1c
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
mov eax [ rw-data ]
xor edi edi
cmp eax edi
jne r-xdata
cmp eax 0x1
jne r-xdata
lea eax [ ebp - 0x1c ]
push eax
push 0x1
pop esi
push esi
push r--data
push esi
call [ GetStringTypeW@IAT ]
test eax eax
je r-xdata
cmp eax 0x2
jne r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ GetStringTypeW@IAT ]
jmp r-xdata
lea eax [ ebp - 0x1c ]
push eax
push esi
push r--data
push esi
push edi
call [ GetStringTypeA@IAT ]
test eax eax
je r-xdata
mov eax esi
jmp r-xdata
xor eax eax
cmp [ ebp + 0x18 ] edi
jne r-xdata
lea esp [ ebp - 0x38 ]
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
push 0x2
pop eax
mov [ rw-data ] eax
push edi
push edi
push edi
push edi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push 0x220
push [ ebp + 0x18 ]
call [ WideCharToMultiByte@IAT ]
mov esi eax
mov [ ebp - 0x28 ] esi
cmp esi edi
je r-xdata
mov eax [ rw-data ]
mov [ ebp + 0x18 ] eax
mov [ ebp - 0x4 ] edi
add eax 0x3
and al 0xfc
call sub_4169b0
mov [ ebp - 0x18 ] esp
mov eax esp
mov [ ebp - 0x2c ] eax
push esi
push edi
push eax
call sub_4165a0
add esp 0xc
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
cmp [ ebp - 0x2c ] edi
je r-xdata
push edi
push edi
push esi
push [ ebp - 0x2c ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push 0x220
push [ ebp + 0x18 ]
call [ WideCharToMultiByte@IAT ]
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0x1
lea eax [ esi + esi + 0x2 ]
add eax 0x3
and al 0xfc
call sub_4169b0
mov [ ebp - 0x18 ] esp
mov ebx esp
mov [ ebp - 0x24 ] ebx
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
cmp ebx edi
je r-xdata
mov eax [ ebp + 0x1c ]
cmp eax edi
jne r-xdata
mov ecx [ ebp + 0x10 ]
lea edi [ ecx + ecx ]
lea esi [ edi + ebx ]
or [ esi ] 0xffff
or [ esi - 0x2 ] 0xffff
push ebx
push [ ebp - 0x28 ]
push [ ebp - 0x2c ]
push [ ebp + 0x8 ]
push eax
call [ GetStringTypeA@IAT ]
mov [ ebp - 0x20 ] eax
cmp [ esi - 0x2 ] 0xffff
je r-xdata
mov eax [ rw-data ]
cmp [ esi ] 0xffff
jne r-xdata
push edi
push ebx
push [ ebp + 0x14 ]
call sub_40db20
add esp 0xc
mov eax [ ebp - 0x20 ]
jmp r-xdata
sub_416f83
mov edx [ esp + 0x4 ]
push esi
mov esi [ esp + 0xc ]
xor eax eax
lea ecx [ edx + esi ]
cmp ecx edx
jb r-xdata
push 0x1
pop eax
cmp ecx esi
jae r-xdata
mov edx [ esp + 0x10 ]
pop esi
mov [ edx ] ecx
retn
sub_416fa4
push esi
mov esi [ esp + 0x8 ]
push edi
mov edi [ esp + 0x10 ]
push esi
push [ edi ]
push [ esi ]
call sub_416f83
add esp 0xc
test eax eax
je r-xdata
lea eax [ esi + 0x4 ]
push eax
push [ edi + 0x4 ]
push [ eax ]
call sub_416f83
add esp 0xc
test eax eax
je r-xdata
lea eax [ esi + 0x4 ]
push eax
push 0x1
push [ eax ]
call sub_416f83
add esp 0xc
test eax eax
je r-xdata
lea eax [ esi + 0x8 ]
push eax
push [ edi + 0x8 ]
push [ eax ]
call sub_416f83
add esp 0xc
pop edi
pop esi
retn
inc [ esi + 0x8 ]
inc [ esi + 0x8 ]
sub_417002
mov eax [ esp + 0x4 ]
push esi
push edi
mov esi [ eax ]
mov edi [ eax + 0x4 ]
mov ecx esi
add esi esi
mov [ eax ] esi
lea esi [ edi + edi ]
shr ecx 0x1f
or esi ecx
mov ecx [ eax + 0x8 ]
mov edx edi
mov [ eax + 0x4 ] esi
shr edx 0x1f
shl ecx 0x1
or ecx edx
pop edi
mov [ eax + 0x8 ] ecx
pop esi
retn
sub_417030
mov eax [ esp + 0x4 ]
push esi
push edi
mov edx [ eax + 0x8 ]
mov ecx [ eax + 0x4 ]
mov esi edx
mov edi ecx
shl esi 0x1f
shr ecx 0x1
or ecx esi
mov [ eax + 0x4 ] ecx
mov ecx [ eax ]
shl edi 0x1f
shr ecx 0x1
shr edx 0x1
or ecx edi
pop edi
mov [ eax + 0x8 ] edx
mov [ eax ] ecx
pop esi
retn
sub_41705d
push ebp
mov ebp esp
sub esp 0x10
mov eax [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x10 ]
xor edx edx
cmp eax edx
push esi
mov [ ebp - 0x4 ] 0x404e
mov [ ebx ] edx
mov [ ebx + 0x4 ] edx
mov [ ebx + 0x8 ] edx
jbe r-xdata
cmp [ ebx + 0x8 ] edx
jne r-xdata
push edi
mov [ ebp + 0x10 ] eax
mov esi 0x8000
mov ecx [ ebx + 0x4 ]
mov eax ecx
shr eax 0x10
mov [ ebx + 0x8 ] eax
mov eax [ ebx ]
mov esi eax
shr esi 0x10
shl ecx 0x10
or esi ecx
shl eax 0x10
add [ ebp - 0x4 ] 0xfff0
mov [ ebx + 0x4 ] esi
mov [ ebx ] eax
jmp r-xdata
mov esi ebx
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push ebx
movsd [ edi ] [ esi ]
call sub_417002
push ebx
call sub_417002
lea eax [ ebp - 0x10 ]
push eax
push ebx
call sub_416fa4
push ebx
call sub_417002
mov eax [ ebp + 0x8 ]
and [ ebp - 0xc ] 0x0
and [ ebp - 0x8 ] 0x0
movsx eax [ eax ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x10 ]
push eax
push ebx
call sub_416fa4
add esp 0x1c
inc [ ebp + 0x8 ]
dec [ ebp + 0x10 ]
jne r-xdata
xor edx edx
pop edi
mov ax [ ebp - 0x4 ]
pop esi
mov [ ebx + 0xa ] ax
pop ebx
leave
retn
push ebx
call sub_417002
add [ ebp - 0x4 ] 0xffff
pop ecx
jmp r-xdata
test [ ebx + 0x8 ] esi
jne r-xdata
sub_417124
push ebp
mov ebp esp
sub esp 0x5c
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
lea eax [ ebp - 0x5c ]
push 0x1
mov [ ebp - 0xc ] eax
xor eax eax
pop edx
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x14 ] eax
mov [ ebp + 0x10 ] edi
inc edi
jmp r-xdata
cmp cl 0x9
je r-xdata
mov cl [ edi ]
cmp cl 0x20
je r-xdata
cmp cl 0xa
je r-xdata
cmp cl 0xd
jne r-xdata
push 0x4
pop esi
cmp eax 0xa
je r-xdata
jmp [ eax * 4 + jump_table_4175c5 ]
mov eax [ ebp + 0xc ]
cmp [ ebp - 0x10 ] 0x0
mov [ eax ] edi
je r-xdata
jmp r-xdata
cmp bl 0x31
jl r-xdata
cmp bl 0x31
mov [ ebp - 0x10 ] edx
jl r-xdata
cmp bl 0x31
jl r-xdata
mov [ ebp - 0x10 ] edx
cmp [ ebp - 0x4 ] 0x0
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x24 ] edx
jne r-xdata
cmp [ rw-data ] edx
mov [ ebp - 0x24 ] edx
jle r-xdata
lea ecx [ edi - 0x2 ]
cmp bl 0x31
mov [ ebp + 0x10 ] ecx
jl r-xdata
mov [ ebp - 0x20 ] edx
cmp bl 0x31
jl r-xdata
cmp [ ebp + 0x20 ] 0x0
je r-xdata
mov [ ebp - 0x20 ] 0x1
xor esi esi
xor edx edx
xor eax eax
xor esi esi
xor ebx ebx
mov [ ebp - 0x14 ] 0x4
jmp r-xdata
push 0x18
pop eax
cmp [ ebp - 0x4 ] eax
jbe r-xdata
mov bl [ edi ]
inc edi
cmp eax 0xb
ja r-xdata
cmp bl [ rw-data ]
jne r-xdata
cmp bl 0x39
jg r-xdata
cmp bl [ rw-data ]
je r-xdata
cmp bl 0x39
jle r-xdata
cmp bl [ rw-data ]
je r-xdata
cmp bl 0x39
jle r-xdata
mov ecx [ rw-data ]
movzx eax bl
mov al [ ecx + eax * 2 ]
and eax esi
movzx eax bl
push esi
push eax
call sub_4103a6
pop ecx
pop ecx
push 0x1
pop edx
jmp r-xdata
cmp [ rw-data ] edx
jle r-xdata
cmp bl 0x30
jne r-xdata
mov ecx [ rw-data ]
movzx eax bl
mov al [ ecx + eax * 2 ]
and eax esi
movzx eax bl
push esi
push eax
call sub_4103a6
pop ecx
pop ecx
push 0x1
pop edx
jmp r-xdata
movsx eax bl
sub eax 0x2b
je r-xdata
cmp bl 0x39
jle r-xdata
cmp bl 0x31
jl r-xdata
mov bl [ edi ]
inc edi
jmp r-xdata
cmp bl 0x30
jne r-xdata
cmp bl 0x39
jg r-xdata
push 0xa
dec edi
pop eax
movsx eax bl
lea ecx [ edi - 0x1 ]
sub eax 0x2b
mov [ ebp + 0x10 ] ecx
je r-xdata
mov ecx [ rw-data ]
movzx eax bl
mov al [ ecx + eax * 2 ]
and eax 0x4
movzx eax bl
push 0x4
push eax
call sub_4103a6
pop ecx
pop ecx
jmp r-xdata
mov ecx [ ebp + 0x8 ]
or eax [ ebp - 0x28 ]
pop edi
mov [ ecx + 0x6 ] esi
mov [ ecx + 0x2 ] ebx
mov [ ecx + 0xa ] ax
mov eax [ ebp - 0x14 ]
pop esi
mov [ ecx ] dx
pop ebx
leave
retn
mov eax [ ebp - 0xc ]
cmp [ ebp - 0x45 ] 0x5
jl r-xdata
movsx eax bl
sub eax 0x2b
je r-xdata
push 0x5
jmp r-xdata
push 0x3
jmp r-xdata
mov eax esi
jmp r-xdata
cmp bl 0x2b
je r-xdata
cmp bl 0x30
jne r-xdata
cmp bl [ rw-data ]
jne r-xdata
cmp [ ebp - 0x4 ] 0x19
jae r-xdata
test eax eax
je r-xdata
mov ecx [ rw-data ]
movzx eax bl
mov al [ ecx + eax * 2 ]
and eax esi
movzx eax bl
push esi
push eax
call sub_4103a6
pop ecx
pop ecx
push 0x1
pop edx
jmp r-xdata
dec [ ebp - 0x8 ]
mov bl [ edi ]
inc edi
jmp r-xdata
mov edi [ ebp + 0x10 ]
jmp r-xdata
mov eax esi
jmp r-xdata
test eax eax
je r-xdata
push 0x7
dec eax
dec eax
je r-xdata
push 0x9
dec edi
jmp r-xdata
cmp bl 0x39
jg r-xdata
cmp bl 0x30
jne r-xdata
jmp r-xdata
dec eax
dec eax
jne r-xdata
mov [ ebp - 0x1c ] esi
movsx ecx bl
lea eax [ esi + esi * 4 ]
lea esi [ ecx + eax * 2 - 0x30 ]
cmp esi 0x1450
jg r-xdata
test eax eax
je r-xdata
xor edx edx
xor eax eax
xor esi esi
xor ebx ebx
jmp r-xdata
dec eax
cmp [ eax ] 0x0
jne r-xdata
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0xc ]
dec eax
inc [ ebp - 0x8 ]
jmp r-xdata
inc [ ebp - 0x45 ]
and [ ebp - 0x28 ] 0x0
push 0x2
pop eax
jmp r-xdata
dec eax
dec eax
je r-xdata
pop eax
jmp r-xdata
pop eax
dec edi
push 0xb
jmp r-xdata
cmp bl 0x2d
je r-xdata
mov eax edx
jmp r-xdata
cmp bl 0x2b
je r-xdata
inc [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
inc [ ebp - 0x4 ]
sub bl 0x30
inc [ ebp - 0xc ]
mov [ eax ] bl
jmp r-xdata
cmp [ ebp - 0x4 ] 0x19
jae r-xdata
test eax eax
je r-xdata
dec edi
jmp r-xdata
or [ ebp - 0x18 ] 0xffffffff
push 0x7
pop eax
jmp r-xdata
sub eax 0x3
jne r-xdata
jmp r-xdata
push 0x8
jmp r-xdata
mov edi ecx
mov ecx [ rw-data ]
movzx eax bl
mov al [ ecx + eax * 2 ]
and eax 0x4
movzx eax bl
push 0x4
push eax
call sub_4103a6
pop ecx
pop ecx
jmp r-xdata
mov esi 0x1451
mov bl [ edi ]
inc edi
jmp r-xdata
cmp [ ebp - 0x2c ] 0x0
je r-xdata
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0x5c ]
push [ ebp - 0x4 ]
push eax
call sub_41705d
mov eax [ ebp - 0x1c ]
xor ecx ecx
add esp 0xc
cmp [ ebp - 0x18 ] ecx
jge r-xdata
dec [ ebp - 0x4 ]
inc [ ebp - 0x8 ]
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
jbe r-xdata
push 0x2
mov [ ebp - 0x28 ] 0x8000
pop eax
jmp r-xdata
sub eax 0x3
jne r-xdata
cmp bl 0x30
je r-xdata
cmp bl 0x2d
je r-xdata
cmp [ rw-data ] edx
jle r-xdata
mov bl [ edi ]
inc edi
jmp r-xdata
mov bl [ edi ]
inc edi
jmp r-xdata
mov eax [ ebp - 0xc ]
inc [ ebp - 0x4 ]
sub bl 0x30
inc [ ebp - 0xc ]
dec [ ebp - 0x8 ]
mov [ eax ] bl
mov bl [ edi ]
inc edi
jmp r-xdata
test eax eax
je r-xdata
cmp [ rw-data ] 0x1
jle r-xdata
cmp [ ebp - 0x30 ] 0x0
je r-xdata
xor ebx ebx
mov eax 0x7fff
mov esi 0x80000000
xor edx edx
mov [ ebp - 0x14 ] 0x2
jmp r-xdata
add eax [ ebp - 0x8 ]
cmp [ ebp - 0x20 ] ecx
jne r-xdata
neg eax
jmp r-xdata
cmp bl 0x43
jle r-xdata
jmp r-xdata
cmp [ rw-data ] 0x1
jle r-xdata
xor edx edx
xor eax eax
xor esi esi
xor ebx ebx
mov [ ebp - 0x14 ] 0x1
cmp [ ebp - 0x24 ] ecx
jne r-xdata
add eax [ ebp + 0x18 ]
cmp bl 0x45
jle r-xdata
cmp eax 0x1450
jle r-xdata
sub eax [ ebp + 0x1c ]
push 0x6
jmp r-xdata
cmp bl 0x63
jle r-xdata
cmp eax 0xffffebb0
jge r-xdata
mov [ ebp - 0x2c ] 0x1
cmp bl 0x65
jg r-xdata
push [ ebp + 0x14 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
call sub_417bea
mov edx [ ebp - 0x40 ]
mov ebx [ ebp - 0x3e ]
mov esi [ ebp - 0x3a ]
mov eax [ ebp - 0x36 ]
add esp 0xc
jmp r-xdata
mov [ ebp - 0x30 ] 0x1
jmp r-xdata
mov ebx [ ebp + 0x10 ]
mov esi [ ebp + 0x10 ]
mov eax [ ebp + 0x10 ]
mov edx [ ebp + 0x10 ]
sub_4175f5
push ebp
mov ebp esp
sub esp 0x1c
mov eax [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0x1c ]
push esi
mov ecx eax
mov esi 0x7fff
and ecx 0x8000
and eax esi
test cx cx
push edi
mov [ ebp - 0x1c ] 0xcc
mov [ ebp - 0x1b ] 0xcc
mov [ ebp - 0x1a ] 0xcc
mov [ ebp - 0x19 ] 0xcc
mov [ ebp - 0x18 ] 0xcc
mov [ ebp - 0x17 ] 0xcc
mov [ ebp - 0x16 ] 0xcc
mov [ ebp - 0x15 ] 0xcc
mov [ ebp - 0x14 ] 0xcc
mov [ ebp - 0x13 ] 0xcc
mov [ ebp - 0x12 ] 0xfb
mov [ ebp - 0x11 ] 0x3f
mov [ ebp - 0x4 ] 0x1
mov edx eax
je r-xdata
mov [ ebx + 0x2 ] 0x20
mov [ ebx + 0x2 ] 0x2d
jmp r-xdata
cmp dx si
jne r-xdata
test edi edi
jne r-xdata
mov edi [ ebp + 0xc ]
test dx dx
jne r-xdata
movzx eax dx
mov ecx edi
mov esi eax
shr ecx 0x18
imul eax eax 0x4d10
shr esi 0x8
and [ ebp - 0x10 ] 0x0
push 0x1
lea ecx [ esi + ecx * 2 ]
mov [ ebp - 0x6 ] dx
imul ecx ecx 0x4d
mov [ ebp - 0xa ] edi
lea esi [ ecx + eax - 0x134312f4 ]
mov eax [ ebp + 0x8 ]
sar esi 0x10
mov [ ebp - 0xe ] eax
movsx eax si
neg eax
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_417bea
add esp 0xc
cmp [ ebp - 0x6 ] 0x3fff
jb r-xdata
mov eax 0x80000000
mov [ ebx ] 0x1
cmp edi eax
jne r-xdata
cmp [ ebp + 0x8 ] edi
jne r-xdata
test [ ebp + 0x18 ] 0x1
mov [ ebx ] si
je r-xdata
lea eax [ ebp - 0x1c ]
inc esi
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_4179ca
pop ecx
pop ecx
test edi 0x40000000
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
and [ ebx ] 0x0
mov [ ebx + 0x2 ] 0x20
mov [ ebx + 0x3 ] 0x1
mov [ ebx + 0x4 ] 0x30
jmp r-xdata
mov edi [ ebp + 0x14 ]
mov edi [ ebp + 0x14 ]
movsx eax si
add edi eax
test edi edi
jg r-xdata
test cx cx
je r-xdata
push r--data
jmp r-xdata
and [ ebx + 0x5 ] 0x0
push 0x1
pop eax
jmp r-xdata
movzx esi [ ebp - 0x6 ]
sub esi 0x3ffe
and [ ebp - 0x6 ] 0x0
mov [ ebp + 0x1c ] 0x8
push 0x15
pop edi
cmp edi 0x15
jle r-xdata
jmp r-xdata
cmp edi eax
jne r-xdata
cmp edi 0xc0000000
jne r-xdata
lea eax [ ebx + 0x4 ]
push eax
call sub_413ee0
pop ecx
mov [ ebx + 0x3 ] 0x6
pop ecx
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
lea eax [ ebp - 0x10 ]
push eax
call sub_417002
dec [ ebp + 0x1c ]
pop ecx
jne r-xdata
test esi esi
jge r-xdata
push r--data
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
and [ ebp - 0x4 ] 0x0
jmp r-xdata
lea ecx [ edi + 0x1 ]
lea eax [ ebx + 0x4 ]
test ecx ecx
mov [ ebp + 0x1c ] eax
jle r-xdata
neg esi
and esi 0xff
jle r-xdata
push r--data
push r--data
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov cl [ eax - 0x1 ]
dec eax
dec eax
cmp cl 0x35
lea ecx [ ebx + 0x4 ]
jl r-xdata
mov [ ebp + 0x14 ] ecx
lea eax [ ebp - 0x10 ]
push eax
call sub_417030
dec esi
pop ecx
jne r-xdata
lea eax [ ebx + 0x4 ]
push eax
call sub_413ee0
pop ecx
mov [ ebx + 0x3 ] 0x5
pop ecx
cmp eax ecx
jb r-xdata
cmp eax ecx
jb r-xdata
lea esi [ ebp - 0x10 ]
lea edi [ ebp + 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ ebp - 0x10 ]
push eax
movsd [ edi ] [ esi ]
call sub_417002
lea eax [ ebp - 0x10 ]
push eax
call sub_417002
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_416fa4
lea eax [ ebp - 0x10 ]
push eax
call sub_417002
mov al [ ebp - 0x5 ]
mov ecx [ ebp + 0x1c ]
and [ ebp - 0x5 ] 0x0
add esp 0x14
add al 0x30
inc [ ebp + 0x1c ]
dec [ ebp + 0x14 ]
mov [ ecx ] al
jne r-xdata
mov eax [ ebp + 0x1c ]
and [ ebx ] 0x0
mov [ ebx + 0x2 ] 0x20
mov [ ebx + 0x3 ] 0x1
mov [ ecx ] 0x30
cmp [ eax ] 0x30
jne r-xdata
inc eax
inc [ ebx ]
cmp [ eax ] 0x39
jne r-xdata
cmp eax ecx
jae r-xdata
dec eax
jmp r-xdata
cmp eax ecx
jae r-xdata
mov [ eax ] 0x30
dec eax
jmp r-xdata
sub al bl
sub al 0x3
mov [ ebx + 0x3 ] al
movsx eax al
and [ eax + ebx + 0x4 ] 0x0
inc [ eax ]
sub_417888
push ebp
mov ebp esp
push ecx
cmp [ rw-data ] 0x0
push ebx
jne r-xdata
mov ebx [ ebp + 0x8 ]
cmp ebx 0x100
jge r-xdata
mov eax [ ebp + 0x8 ]
cmp eax 0x61
jl r-xdata
mov edx [ rw-data ]
mov eax ebx
sar eax 0x8
movzx ecx al
test [ edx + ecx * 2 + 0x1 ] 0x80
je r-xdata
cmp [ rw-data ] 0x1
jle r-xdata
pop ebx
leave
retn
cmp eax 0x7a
jg r-xdata
and [ ebp + 0x9 ] 0x0
mov [ ebp + 0x8 ] bl
push 0x1
and [ ebp + 0xa ] 0x0
mov [ ebp + 0x8 ] al
mov [ ebp + 0x9 ] bl
push 0x2
jmp r-xdata
mov eax [ rw-data ]
mov al [ eax + ebx * 2 ]
and eax 0x2
push 0x2
push ebx
call sub_4103a6
pop ecx
pop ecx
jmp r-xdata
sub eax 0x20
jmp r-xdata
mov eax ebx
jmp r-xdata
cmp eax 0x1
jne r-xdata
pop eax
lea ecx [ ebp - 0x4 ]
push 0x1
push 0x0
push 0x3
push ecx
push eax
lea eax [ ebp + 0x8 ]
push eax
push 0x200
push [ rw-data ]
call sub_415091
add esp 0x20
test eax eax
je r-xdata
test eax eax
jne r-xdata
movzx eax [ ebp - 0x3 ]
movzx ecx [ ebp - 0x4 ]
shl eax 0x8
or eax ecx
movzx eax [ ebp - 0x4 ]
jmp r-xdata
sub_417954
mov eax [ esp + 0x4 ]
push esi
cmp eax [ rw-data ]
jae r-xdata
mov [ rw-data ] 0x9
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
lea edx [ ecx + eax * 8 + 0x4 ]
mov cl [ ecx + eax * 8 + 0x4 ]
test cl 0x1
je r-xdata
mov al cl
mov esi 0x8000
and eax 0x80
cmp [ esp + 0xc ] esi
jne r-xdata
cmp [ esp + 0xc ] 0x4000
jne r-xdata
and cl 0x7f
jmp r-xdata
mov [ rw-data ] 0x16
jmp r-xdata
or cl 0x80
neg eax
sbb eax eax
mov [ edx ] cl
and ax 0xc000
add eax esi
pop esi
retn
or eax 0xffffffff
pop esi
retn
sub_4179ca
push ebp
mov ebp esp
sub esp 0x24
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov cx [ ebx + 0xa ]
xor eax eax
push edi
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] eax
mov ax [ esi + 0xa ]
mov edi ecx
mov edx 0x7fff
xor edi eax
and eax edx
and ecx edx
and edi 0x8000
cmp ax 0x7fff
lea edx [ ecx + eax ]
mov [ ebp + 0x8 ] edx
jae r-xdata
neg di
sbb edi edi
and [ esi + 0x4 ] 0x0
and edi 0x80000000
add edi 0x7fff8000
and [ esi ] 0x0
mov [ esi + 0x8 ] edi
cmp cx 0x7fff
jae r-xdata
cmp dx 0xbffd
ja r-xdata
cmp dx 0x3fbf
ja r-xdata
test ax ax
mov edx 0x7fffffff
jne r-xdata
xor eax eax
jmp r-xdata
xor eax eax
inc [ ebp + 0x8 ]
test [ esi + 0x8 ] edx
jne r-xdata
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] eax
mov [ esi ] eax
jmp r-xdata
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x20 ]
mov [ ebp - 0x4 ] eax
mov [ ebp + 0xc ] 0x5
inc [ ebp + 0x8 ]
test [ ebx + 0x8 ] edx
jne r-xdata
xor eax eax
cmp [ esi + 0x4 ] eax
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
add [ ebp - 0x4 ] 0x2
inc [ ebp - 0x10 ]
dec [ ebp + 0xc ]
cmp [ ebp + 0xc ] 0x0
jg r-xdata
add eax esi
lea ecx [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x18 ] eax
cmp [ ebx + 0x4 ] eax
jne r-xdata
cmp cx ax
jne r-xdata
cmp [ esi ] eax
jne r-xdata
mov eax [ ebp - 0x10 ]
add eax eax
cmp [ ebp + 0xc ] 0x0
jle r-xdata
add [ ebp + 0x8 ] 0xc002
cmp [ ebp + 0x8 ] 0x0
jle r-xdata
add [ ebp - 0x8 ] 0x2
sub [ ebp - 0xc ] 0x2
dec [ ebp - 0x18 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
inc [ eax ]
cmp [ ebx ] eax
jne r-xdata
jmp r-xdata
add [ ebp + 0x8 ] 0xffff
cmp [ ebp + 0x8 ] 0x0
jge r-xdata
test [ ebp - 0x19 ] 0x80
jne r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
movzx eax [ eax ]
movzx ecx [ ecx ]
imul eax ecx
mov ecx [ ebp - 0x4 ]
add ecx 0xfffffffc
push ecx
push eax
push [ ecx ]
call sub_416f83
add esp 0xc
test eax eax
je r-xdata
mov [ esi + 0xa ] ax
jmp r-xdata
cmp [ ebp - 0x24 ] 0x8000
ja r-xdata
movsx eax [ ebp + 0x8 ]
neg eax
add [ ebp + 0x8 ] eax
mov ebx eax
cmp [ ebp + 0x8 ] 0x0
jg r-xdata
lea eax [ ebp - 0x24 ]
push eax
call sub_417002
add [ ebp + 0x8 ] 0xffff
pop ecx
cmp [ ebp + 0x8 ] 0x0
jg r-xdata
cmp [ ebp - 0x22 ] 0xffffffff
jne r-xdata
mov eax [ ebp - 0x24 ]
and eax 0x1ffff
cmp eax 0x18000
jne r-xdata
lea eax [ ebp - 0x24 ]
push eax
call sub_417030
dec ebx
pop ecx
jne r-xdata
inc [ ebp - 0x14 ]
inc [ ebp - 0x22 ]
and [ ebp - 0x22 ] 0x0
cmp [ ebp - 0x1e ] 0xffffffff
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp ax 0x7fff
jae r-xdata
test [ ebp - 0x24 ] 0x1
je r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov cx [ ebp - 0x22 ]
or eax edi
mov [ esi ] cx
mov ecx [ ebp - 0x20 ]
mov [ esi + 0x2 ] ecx
mov ecx [ ebp - 0x1c ]
mov [ esi + 0x6 ] ecx
inc [ ebp - 0x1e ]
jmp r-xdata
and [ ebp - 0x1e ] 0x0
cmp [ ebp - 0x1a ] 0xffff
jne r-xdata
or [ ebp - 0x24 ] 0x1
inc [ ebp - 0x1a ]
jmp r-xdata
inc [ ebp + 0x8 ]
mov [ ebp - 0x1a ] 0x8000
jmp r-xdata
sub_417bea
push ebp
mov ebp esp
sub esp 0xc
push ebx
mov ebx rw-data
xor ecx ecx
sub ebx 0x60
cmp [ ebp + 0xc ] ecx
je r-xdata
pop ebx
leave
retn
jge r-xdata
cmp [ ebp + 0x10 ] ecx
jne r-xdata
mov eax [ ebp + 0xc ]
mov ebx rw-data
neg eax
mov [ ebp + 0xc ] eax
sub ebx 0x60
cmp [ ebp + 0xc ] ecx
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] cx
push esi
push edi
cmp [ ebp + 0xc ] ecx
jne r-xdata
lea eax [ eax + eax * 2 ]
cmp [ ebx + eax * 4 ] 0x8000
lea esi [ ebx + eax * 4 ]
jb r-xdata
mov eax [ ebp + 0xc ]
add ebx 0x54
sar [ ebp + 0xc ] 0x3
and eax 0x7
cmp eax ecx
je r-xdata
pop edi
pop esi
push esi
push [ ebp + 0x8 ]
call sub_4179ca
pop ecx
pop ecx
xor ecx ecx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
dec [ ebp - 0xa ]
lea esi [ ebp - 0xc ]
sub_401370
push esi
mov esi ecx
call sub_401390
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_40d360
add esp 0x4
sub_4016c0
push esi
mov esi ecx
call sub_4016e0
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_40d360
add esp 0x4
sub_404360
mov ecx [ esp + 0x4 ]
test ecx ecx
je r-xdata
xor eax eax
retn 0x4
call sub_404380
sub_405f70
push 0x0
call sub_40e342
push eax
call sub_40e31a
add esp 0x8
call sub_40e324
cdq
mov ecx 0x2710
idiv ecx
mov eax edx
retn
sub_4089a0
mov eax 0xfffffffd
retn
sub_408a09
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x14 ] eax
add eax 0x2
test eax eax
jge r-xdata
push eax
call sub_40daa2
mov [ ebp + 0x8 ] eax
add esp 0x4
mov eax r-xdata
retn
xor eax eax
sub_409c40
retn
sub_409f40
mov cl [ rw-data ]
mov al 0x1
test al cl
jne r-xdata
jmp sub_409f60
or cl al
mov [ rw-data ] cl
sub_409f60
push sub_409c40
call sub_40e702
pop ecx
retn
sub_40a0b0
mov eax 0x1
retn
sub_40a0c0
mov cl [ rw-data ]
mov al 0x1
test al cl
jne r-xdata
jmp sub_40a0e0
or cl al
mov [ rw-data ] cl
sub_40a0e0
push sub_409c40
call sub_40e702
pop ecx
retn
sub_40a630
push esi
mov esi ecx
call sub_40a650
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_40d360
add esp 0x4
sub_40c2a0
mov al [ esp + 0x4 ]
mov [ ecx + 0x54 ] al
mov al 0x1
retn 0x4
sub_40c3f0
mov eax [ esp + 0x4 ]
push 0x0
push 0x0
push 0x0
push 0x0
push eax
call [ InternetOpenW@IAT ]
retn 0x4
sub_40c410
mov eax [ esp + 0x4 ]
test eax eax
je r-xdata
retn 0x4
push eax
call [ InternetCloseHandle@IAT ]
sub_40c710
mov eax [ esp + 0xc ]
mov edx [ esp + 0x8 ]
push eax
mov eax [ ecx + 0x4 ]
push edx
push 0x1f
push eax
call [ InternetSetOptionW@IAT ]
retn 0xc
sub_40c930
xor al al
retn 0x4
sub_40c940
mov eax 0x1
retn 0x4
sub_40c950
mov eax [ esp + 0x4 ]
push 0x0
push 0x0
push 0x0
push 0x0
push eax
call [ HttpSendRequestExW@IAT ]
retn 0x4
sub_40c970
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
push eax
mov eax [ esp + 0x8 ]
push ecx
push edx
push eax
call [ InternetWriteFile@IAT ]
retn 0x10
sub_40c990
mov eax [ esp + 0x4 ]
push 0x0
push 0x0
push 0x0
push eax
call [ HttpEndRequestA@IAT ]
retn 0x4
sub_40c9b0
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
push 0x0
push eax
mov eax [ esp + 0xc ]
push ecx
push edx
push eax
call [ HttpQueryInfoW@IAT ]
retn 0x10
sub_40c9d0
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
push 0x0
push 0x0
push eax
push ecx
call [ InternetQueryDataAvailable@IAT ]
retn 0x8
sub_40c9f0
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
push eax
mov eax [ esp + 0x8 ]
push ecx
push edx
push eax
call [ InternetReadFile@IAT ]
retn 0x10
sub_40d110
mov eax 0x7ffffffd
retn
sub_40d330
mov cl [ rw-data ]
mov al 0x1
test al cl
jne r-xdata
jmp sub_40d350
or cl al
mov [ rw-data ] cl
sub_40d350
push sub_409c40
call sub_40e702
pop ecx
retn
sub_40d360
push [ esp + 0x4 ]
call sub_40eb0e
pop ecx
retn
sub_40d429
mov eax [ ecx + 0x10 ]
test eax eax
jne r-xdata
retn
mov eax r--data
sub_40d490
push esi
mov esi ecx
call sub_40d453
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_40d360
pop ecx
sub_40d57f
push esi
mov esi ecx
push [ esp + 0x8 ]
call sub_40d4ac
mov [ esi ] r--data
mov eax esi
pop esi
retn 0x4
sub_40d667
push esi
mov esi ecx
push [ esp + 0x8 ]
call sub_40d4ac
mov [ esi ] r--data
mov eax esi
pop esi
retn 0x4
sub_40d67f
test [ rw-data ] 0x1
jne r-xdata
call sub_40d6a9
test [ rw-data ] 0x1
jne r-xdata
or [ rw-data ] 0x1
jmp sub_40d6b5
or [ rw-data ] 0x1
sub_40d6a9
push sub_409c40
call sub_40e702
pop ecx
retn
sub_40d6b5
push sub_40d6c1
call sub_40e702
pop ecx
retn
sub_40d6c1
retn
gethostname
jmp [ gethostname@IAT ]
WSAStartup
jmp [ WSAStartup@IAT ]
sub_40d702
pop eax
pop ecx
xchg [ esp ] eax
jmp eax
sub_40d709
pop eax
pop ecx
xchg [ esp ] eax
jmp eax
sub_40d92f
push 0x1
pop eax
pop edi
pop esi
pop ebx
pop ebp
retn
sub_40d9d4
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_40da5e
xor eax eax
mov ecx [ fs : 0x0 ]
cmp [ ecx + 0x4 ] sub_40d9d4
jne r-xdata
retn
mov edx [ ecx + 0xc ]
mov edx [ edx + 0xc ]
cmp [ ecx + 0x8 ] edx
jne r-xdata
mov eax 0x1
sub_40da8a
push ebx
push ecx
mov ebx rw-data
mov ecx [ ebp + 0x8 ]
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] ebp
pop ecx
pop ebx
retn 0x4
sub_40daa2
push 0x1
push [ esp + 0x8 ]
call sub_40f98a
pop ecx
pop ecx
retn
sub_40dee0
push [ esp + 0x4 ]
call sub_40de55
pop ecx
retn
sub_40deeb
mov eax [ rw-data ]
test eax eax
je r-xdata
push rw-data
push rw-data
call sub_40dfd3
push rw-data
push rw-data
call sub_40dfd3
add esp 0x10
retn
call eax
sub_40df18
push 0x0
push 0x0
push [ esp + 0xc ]
call sub_40df3a
add esp 0xc
retn
sub_40df29
push 0x0
push 0x1
push [ esp + 0xc ]
call sub_40df3a
add esp 0xc
retn
sub_40e20a
call sub_410f7a
test eax eax
jne r-xdata
push eax
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
call sub_410e0a
add esp 0x10
retn
retn
sub_40e22a
push 0x40
push [ esp + 0xc ]
push [ esp + 0xc ]
call sub_40e20a
add esp 0xc
retn
sub_40e31a
mov eax [ esp + 0x4 ]
mov [ rw-data ] eax
retn
sub_40e324
mov eax [ rw-data ]
imul eax eax 0x343fd
add eax 0x269ec3
mov [ rw-data ] eax
sar eax 0x10
and eax 0x7fff
retn
sub_40e702
push [ esp + 0x4 ]
call sub_40e695
neg eax
sbb eax eax
pop ecx
neg eax
dec eax
retn
sub_40e963
call sub_410f7a
test eax eax
jne r-xdata
push eax
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
call sub_411aee
add esp 0x10
retn
retn
sub_40e983
push 0x40
push [ esp + 0xc ]
push [ esp + 0xc ]
call sub_40e963
add esp 0xc
retn
sub_40e996
call sub_40e9ae
call sub_411cb4
mov [ rw-data ] eax
call sub_411c64
fnclex
retn
sub_40e9ad
retn
sub_40e9ae
mov eax sub_4120a2
mov [ rw-data ] sub_411d37
mov [ rw-data ] eax
mov [ rw-data ] sub_411d9d
mov [ rw-data ] sub_411cdd
mov [ rw-data ] sub_411d85
mov [ rw-data ] eax
retn
sub_40eaea
cmp [ rw-data ] 0x2
je r-xdata
push [ esp + 0x4 ]
call sub_412b6d
pop ecx
push 0xff
call [ ExitProcess@IAT ]
call sub_412b34
sub_40eb77
push esi
mov esi ecx
call sub_40ec1a
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_40d360
pop ecx
sub_40ec1a
cmp [ ecx + 0x8 ] 0x0
mov [ ecx ] r--data
je r-xdata
retn
push [ ecx + 0x4 ]
call sub_40d360
pop ecx
sub_40ec30
mov eax [ ecx + 0x4 ]
test eax eax
jne r-xdata
retn
mov eax r--data
sub_40ec3d
mov [ ecx ] r--data
mov ecx [ ecx + 0x4 ]
test ecx ecx
je r-xdata
retn
push ecx
call sub_40eb0e
pop ecx
sub_40ec52
push esi
mov esi ecx
call sub_40ec3d
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_40d360
pop ecx
sub_40ecec
push 0xffffffff
push eax
mov eax [ fs : 0x0 ]
push eax
mov eax [ esp + 0xc ]
mov [ fs : 0x0 ] esp
mov [ esp + 0xc ] ebp
lea ebp [ esp + 0xc ]
push eax
retn
sub_40f433
push [ ebp - 0x14 ]
call sub_40f46a
pop ecx
retn
sub_40f46a
mov eax [ esp + 0x4 ]
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
je r-xdata
jmp sub_40f8cc
xor eax eax
retn
sub_40f597
push [ ebp - 0x14 ]
call sub_40f607
pop ecx
retn
sub_40f7e9
push 0x1
pop eax
retn
sub_40f7ed
mov esp [ ebp - 0x18 ]
jmp sub_40f8cc
sub_40f84b
xor eax eax
cmp [ ebp + 0xc ] al
setne al
retn
sub_40f854
mov esp [ ebp - 0x18 ]
jmp sub_40f8cc
sub_40f909
push 0x1
pop eax
retn
sub_40f95f
push 0x1
pop eax
retn
sub_41037b
mov eax [ esp + 0x4 ]
add [ eax ] 0x4
mov eax [ eax ]
mov eax [ eax - 0x4 ]
retn
sub_410388
mov eax [ esp + 0x4 ]
add [ eax ] 0x8
mov ecx [ eax ]
mov eax [ ecx - 0x8 ]
mov edx [ ecx - 0x4 ]
retn
sub_410398
mov eax [ esp + 0x4 ]
add [ eax ] 0x4
mov eax [ eax ]
mov ax [ eax - 0x4 ]
retn
sub_4105c3
call sub_41074c
cmp [ rw-data ] 0x0
je r-xdata
retn
jmp sub_4144ef
sub_41074c
push 0x1
call sub_410755
pop ecx
retn
sub_411478
cmp [ rw-data ] 0x0
jne r-xdata
retn
push 0xfffffffd
call sub_4110b4
pop ecx
mov [ rw-data ] 0x1
sub_411c64
push 0x30000
push 0x10000
call sub_415e1b
pop ecx
pop ecx
retn
sub_411d85
mov eax [ esp + 0x4 ]
fld [ eax ]
fcomp [ r--data ]
fnstsw ax
sahf
jb r-xdata
xor eax eax
retn
push 0x1
pop eax
retn
sub_412058
push [ esp + 0x10 ]
mov [ rw-data ] 0x1
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
call sub_411ddb
and [ rw-data ] 0x0
add esp 0x10
retn
sub_41207f
push [ esp + 0xc ]
mov [ rw-data ] 0x1
push [ esp + 0xc ]
push [ esp + 0xc ]
call sub_411edf
and [ rw-data ] 0x0
add esp 0xc
retn
sub_412b19
push ebp
mov ecx [ esp + 0x8 ]
mov ebp [ ecx ]
mov eax [ ecx + 0x1c ]
push eax
mov eax [ ecx + 0x18 ]
push eax
call sub_40d9f6
add esp 0x8
pop ebp
retn 0x4
sub_41409a
push sub_414054
call [ SetUnhandledExceptionFilter@IAT ]
mov [ rw-data ] eax
retn
sub_4140ab
push [ rw-data ]
call [ SetUnhandledExceptionFilter@IAT ]
retn
sub_4140b8
push esi
push 0x1
pop esi
push [ esp + 0xc ]
push [ esp + 0xc ]
call [ IsBadReadPtr@IAT ]
test eax eax
je r-xdata
mov eax esi
pop esi
retn
xor esi esi
sub_4140d4
push esi
push 0x1
pop esi
push [ esp + 0xc ]
push [ esp + 0xc ]
call [ IsBadWritePtr@IAT ]
test eax eax
je r-xdata
mov eax esi
pop esi
retn
xor esi esi
sub_4140f0
push esi
push 0x1
pop esi
push [ esp + 0x8 ]
call [ IsBadCodePtr@IAT ]
test eax eax
je r-xdata
mov eax esi
pop esi
retn
xor esi esi
sub_41417e
mov eax [ esp + 0x4 ]
cmp eax [ rw-data ]
jb r-xdata
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
mov al [ ecx + eax * 8 + 0x4 ]
and eax 0x40
retn
xor eax eax
retn
sub_4143ee
push 0x1
pop eax
retn
sub_414b32
cmp [ rw-data ] 0x0
jne r-xdata
retn
call sub_414b47
inc [ rw-data ]
sub_4151a1
push 0x1
pop eax
retn
sub_415255
push 0x1
pop eax
retn
sub_415595
push 0x1
pop eax
retn
sub_415604
push 0x1
pop eax
retn
sub_4159a3
push 0x1
pop eax
retn
sub_415a20
push 0x1
pop eax
retn
sub_415e1b
mov eax [ esp + 0x8 ]
and eax 0xfff7ffff
push eax
push [ esp + 0x8 ]
call sub_415de6
pop ecx
pop ecx
retn
sub_41637d
push rw-data
push [ esp + 0xc ]
push [ esp + 0xc ]
call sub_416211
add esp 0xc
retn
sub_416393
push rw-data
push [ esp + 0xc ]
push [ esp + 0xc ]
call sub_416211
add esp 0xc
retn
sub_4165f8
push 0x2
call sub_40eac5
pop ecx
retn
sub_416601
push 0x0
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
call sub_416618
add esp 0x10
retn
sub_416eaa
push 0x1
pop eax
retn
sub_416f07
push 0x1
pop eax
retn
RtlUnwind
jmp [ RtlUnwind@IAT ]
sub_417c70
mov ecx [ ebp - 0x64 ]
add ecx 0x4
jmp sub_407f10
sub_417c7b
mov ecx [ ebp - 0x64 ]
add ecx 0x14
jmp sub_407f10
sub_417c86
mov ecx [ ebp - 0x64 ]
add ecx 0x24
jmp sub_407f10
sub_417c91
mov ecx [ ebp - 0x64 ]
add ecx 0x34
jmp sub_407be0
sub_417c9c
mov ecx [ ebp - 0x64 ]
add ecx 0x44
jmp sub_407be0
sub_417ca7
mov ecx [ ebp - 0x64 ]
add ecx 0x54
jmp sub_407be0
sub_417cb2
mov ecx [ ebp - 0x64 ]
add ecx 0x64
jmp sub_407be0
sub_417cbd
mov ecx [ ebp - 0x64 ]
add ecx 0x7c
jmp sub_407be0
sub_417cc8
mov ecx [ ebp - 0x64 ]
add ecx 0x94
jmp sub_407be0
sub_417cd6
mov ecx [ ebp - 0x64 ]
add ecx 0xa4
jmp sub_407be0
sub_417ce4
mov ecx [ ebp - 0x64 ]
add ecx 0xb4
jmp sub_407be0
sub_417cf2
lea ecx [ ebp - 0x60 ]
jmp sub_407be0
sub_417cfa
mov eax r--data
jmp sub_40d75f
sub_417d10
mov ecx [ ebp - 0x10 ]
add ecx 0x4
jmp sub_407f10
sub_417d1b
mov ecx [ ebp - 0x10 ]
add ecx 0x14
jmp sub_407f10
sub_417d26
mov ecx [ ebp - 0x10 ]
add ecx 0x24
jmp sub_407f10
sub_417d31
mov ecx [ ebp - 0x10 ]
add ecx 0x34
jmp sub_407be0
sub_417d3c
mov ecx [ ebp - 0x10 ]
add ecx 0x44
jmp sub_407be0
sub_417d47
mov ecx [ ebp - 0x10 ]
add ecx 0x54
jmp sub_407be0
sub_417d52
mov ecx [ ebp - 0x10 ]
add ecx 0x64
jmp sub_407be0
sub_417d5d
mov ecx [ ebp - 0x10 ]
add ecx 0x7c
jmp sub_407be0
sub_417d68
mov ecx [ ebp - 0x10 ]
add ecx 0x94
jmp sub_407be0
sub_417d76
mov ecx [ ebp - 0x10 ]
add ecx 0xa4
jmp sub_407be0
sub_417d84
mov eax r--data
jmp sub_40d75f
sub_417d90
lea ecx [ ebp + 0x14 ]
jmp sub_407be0
sub_417d98
lea ecx [ ebp + 0x4 ]
jmp sub_407be0
sub_417da0
mov eax [ ebp - 0x10 ]
push eax
call sub_40d360
pop ecx
retn
sub_417dab
mov ecx [ ebp - 0x10 ]
jmp sub_407be0
sub_417db3
mov ecx [ ebp + 0x24 ]
jmp sub_407be0
sub_417dbb
mov eax r--data
jmp sub_40d75f
sub_417dd0
lea ecx [ ebp - 0x5c ]
jmp sub_407be0
sub_417dd8
lea ecx [ ebp - 0x2c ]
jmp sub_407be0
sub_417de0
lea ecx [ ebp - 0x3c ]
jmp sub_407be0
sub_417de8
lea ecx [ ebp - 0x4c ]
jmp sub_407be0
sub_417df0
lea ecx [ ebp - 0x1c ]
jmp sub_407be0
sub_417df8
mov eax r--data
jmp sub_40d75f
sub_417e10
lea ecx [ ebp + 0xc ]
jmp sub_407be0
sub_417e18
lea ecx [ ebp - 0x60 ]
jmp sub_407be0
sub_417e20
lea ecx [ ebp - 0x78 ]
jmp sub_407ed0
sub_417e28
mov eax [ ebp - 0x90 ]
push eax
call sub_40d360
pop ecx
retn
sub_417e36
mov eax [ ebp - 0xa4 ]
and eax 0x1
test eax eax
je r-xdata
retn
lea ecx [ ebp - 0x50 ]
jmp sub_407ed0
sub_417e50
lea ecx [ ebp - 0xa0 ]
jmp sub_407ed0
sub_417e5b
lea ecx [ ebp - 0xa0 ]
jmp sub_407ed0
sub_417e66
lea ecx [ ebp - 0xa0 ]
jmp sub_407be0
sub_417e71
mov ecx [ ebp - 0x90 ]
jmp sub_407be0
sub_417e7c
mov ecx [ ebp - 0x90 ]
jmp sub_407be0
sub_417e87
mov ecx [ ebp - 0x90 ]
jmp sub_407be0
sub_417e92
mov ecx [ ebp - 0x90 ]
jmp sub_407be0
sub_417e9d
lea ecx [ ebp - 0xa0 ]
jmp sub_407be0
sub_417ea8
lea ecx [ ebp - 0x8c ]
jmp sub_407ed0
sub_417eb3
lea ecx [ ebp - 0x8c ]
jmp sub_407ed0
sub_417ebe
lea ecx [ ebp - 0xa0 ]
jmp sub_407be0
sub_417ec9
lea ecx [ ebp - 0x8c ]
jmp sub_407ed0
sub_417ed4
lea ecx [ ebp - 0xa0 ]
jmp sub_407ed0
sub_417edf
lea ecx [ ebp - 0x8c ]
jmp sub_407be0
sub_417eea
lea ecx [ ebp - 0xa0 ]
jmp sub_407ed0
sub_417ef5
lea ecx [ ebp - 0x8c ]
jmp sub_407be0
sub_417f00
lea ecx [ ebp - 0x8c ]
jmp sub_407ed0
sub_417f0b
lea ecx [ ebp - 0x8c ]
jmp sub_407ed0
sub_417f16
lea ecx [ ebp - 0xa0 ]
jmp sub_407be0
sub_417f21
lea ecx [ ebp - 0x8c ]
jmp sub_407ed0
sub_417f2c
lea ecx [ ebp - 0x8c ]
jmp sub_407ed0
sub_417f37
lea ecx [ ebp - 0xa0 ]
jmp sub_407be0
sub_417f42
lea ecx [ ebp - 0x8c ]
jmp sub_407ed0
sub_417f4d
mov eax r--data
jmp sub_40d75f
sub_417f60
lea ecx [ ebp - 0x3c ]
jmp sub_407be0
sub_417f68
lea ecx [ ebp - 0x2c ]
jmp sub_407be0
sub_417f70
lea ecx [ ebp - 0x4c ]
jmp sub_407be0
sub_417f78
mov ecx [ ebp - 0x58 ]
jmp sub_407be0
sub_417f80
mov ecx [ ebp - 0x54 ]
jmp sub_407be0
sub_417f88
lea ecx [ ebp - 0x1c ]
jmp sub_407be0
sub_417f90
lea ecx [ ebp - 0x1c ]
jmp sub_407be0
sub_417f98
mov eax r--data
jmp sub_40d75f
sub_417fb0
lea ecx [ ebp - 0x78 ]
jmp sub_407be0
sub_417fb8
lea ecx [ ebp - 0xa8 ]
jmp sub_407be0
sub_417fc3
lea ecx [ ebp - 0x88 ]
jmp sub_407be0
sub_417fce
mov eax [ ebp - 0xac ]
and eax 0x1
test eax eax
je r-xdata
retn
mov ecx [ ebp + 0x4 ]
jmp sub_407be0
sub_417fe8
lea ecx [ ebp - 0x64 ]
jmp sub_407be0
sub_417ff0
lea ecx [ ebp - 0x1c ]
jmp sub_407be0
sub_417ff8
lea ecx [ ebp - 0x2c ]
jmp sub_407be0
sub_418000
mov ecx [ ebp - 0x40 ]
jmp sub_407be0
sub_418008
lea ecx [ ebp - 0x64 ]
jmp sub_407be0
sub_418010
lea ecx [ ebp - 0x64 ]
jmp sub_407be0
sub_418018
lea ecx [ ebp - 0x98 ]
jmp sub_407be0
sub_418023
lea ecx [ ebp - 0x3c ]
jmp sub_407be0
sub_41802b
lea ecx [ ebp - 0x50 ]
jmp sub_407be0
sub_418033
lea ecx [ ebp - 0x64 ]
jmp sub_407be0
sub_41803b
mov eax r--data
jmp sub_40d75f
sub_418050
lea ecx [ ebp + 0x4 ]
jmp sub_407be0
sub_418058
lea ecx [ ebp - 0x5c ]
jmp sub_407be0
sub_418060
lea ecx [ ebp - 0x6c ]
jmp sub_407be0
sub_418068
mov ecx [ ebp - 0x78 ]
jmp sub_407be0
sub_418070
mov ecx [ ebp - 0x74 ]
jmp sub_407be0
sub_418078
lea ecx [ ebp - 0x4c ]
jmp sub_407be0
sub_418080
mov ecx [ ebp - 0x70 ]
jmp sub_407be0
sub_418088
mov ecx [ ebp - 0x74 ]
jmp sub_407be0
sub_418090
lea ecx [ ebp - 0x2c ]
jmp sub_407be0
sub_418098
mov ecx [ ebp - 0x70 ]
jmp sub_407be0
sub_4180a0
mov ecx [ ebp - 0x74 ]
jmp sub_407be0
sub_4180a8
lea ecx [ ebp - 0x1c ]
jmp sub_407be0
sub_4180b0
mov ecx [ ebp - 0x70 ]
jmp sub_407be0
sub_4180b8
mov ecx [ ebp - 0x74 ]
jmp sub_407be0
sub_4180c0
lea ecx [ ebp - 0x3c ]
jmp sub_407be0
sub_4180c8
mov ecx [ ebp - 0x70 ]
jmp sub_407be0
sub_4180d0
mov ecx [ ebp - 0x70 ]
jmp sub_407be0
sub_4180d8
mov ecx [ ebp - 0x74 ]
jmp sub_407be0
sub_4180e0
lea ecx [ ebp - 0x1c ]
jmp sub_407be0
sub_4180e8
mov ecx [ ebp - 0x70 ]
jmp sub_407be0
sub_4180f0
mov ecx [ ebp - 0x74 ]
jmp sub_407be0
sub_4180f8
lea ecx [ ebp - 0x3c ]
jmp sub_407be0
sub_418100
mov ecx [ ebp - 0x70 ]
jmp sub_407be0
sub_418108
mov ecx [ ebp - 0x74 ]
jmp sub_407be0
sub_418110
lea ecx [ ebp - 0x1c ]
jmp sub_407be0
sub_418118
mov eax r--data
jmp sub_40d75f
sub_418130
lea ecx [ ebp - 0x60 ]
jmp sub_407be0
sub_418138
lea ecx [ ebp - 0x94 ]
jmp sub_407be0
sub_418143
lea ecx [ ebp - 0x84 ]
jmp sub_407be0
sub_41814e
lea ecx [ ebp - 0x84 ]
jmp sub_407be0
sub_418159
mov eax r--data
jmp sub_40d75f
sub_418170
lea ecx [ ebp - 0x828 ]
jmp sub_407be0
sub_41817b
mov eax r--data
jmp sub_40d75f
sub_418190
lea ecx [ ebp + 0x4 ]
jmp sub_407be0
sub_418198
mov eax r--data
jmp sub_40d75f
sub_4181b0
lea ecx [ ebp + 0x4 ]
jmp sub_407be0
sub_4181b8
lea ecx [ ebp - 0x3c ]
jmp sub_407be0
sub_4181c0
lea ecx [ ebp - 0x2c ]
jmp sub_407be0
sub_4181c8
lea ecx [ ebp - 0x1c ]
jmp sub_407be0
sub_4181d0
lea ecx [ ebp - 0x2c ]
jmp sub_407be0
sub_4181d8
lea ecx [ ebp - 0x2c ]
jmp sub_407be0
sub_4181e0
lea ecx [ ebp - 0x2c ]
jmp sub_407be0
sub_4181e8
lea ecx [ ebp - 0x4c ]
jmp sub_407be0
sub_4181f0
lea ecx [ ebp - 0x2c ]
jmp sub_407be0
sub_4181f8
mov eax r--data
jmp sub_40d75f
sub_418210
lea ecx [ ebp + 0x14 ]
jmp sub_407be0
sub_418218
lea ecx [ ebp + 0x4 ]
jmp sub_407be0
sub_418220
lea ecx [ ebp - 0x7c ]
jmp sub_407be0
sub_418228
lea ecx [ ebp - 0x1c ]
jmp sub_407be0
sub_418230
lea ecx [ ebp - 0x2c ]
jmp sub_407be0
sub_418238
lea ecx [ ebp - 0x3c ]
jmp sub_407be0
sub_418240
lea ecx [ ebp - 0x5c ]
jmp sub_407be0
sub_418248
mov ecx [ ebp - 0x84 ]
jmp sub_407be0
sub_418253
mov ecx [ ebp - 0x80 ]
jmp sub_407be0
sub_41825b
lea ecx [ ebp - 0x6c ]
jmp sub_407be0
sub_418263
lea ecx [ ebp - 0x5c ]
jmp sub_407be0
sub_41826b
lea ecx [ ebp - 0x5c ]
jmp sub_407be0
sub_418273
lea ecx [ ebp - 0x1c ]
jmp sub_407be0
sub_41827b
lea ecx [ ebp - 0x4c ]
jmp sub_407be0
sub_418283
lea ecx [ ebp - 0x5c ]
jmp sub_407be0
sub_41828b
mov eax r--data
jmp sub_40d75f
sub_4182a0
lea ecx [ ebp + 0x4 ]
jmp sub_407be0
sub_4182a8
mov eax r--data
jmp sub_40d75f
sub_4182c0
lea ecx [ ebp + 0x4 ]
jmp sub_407be0
sub_4182c8
lea ecx [ ebp - 0x5c ]
jmp sub_407be0
sub_4182d0
lea ecx [ ebp - 0x1c ]
jmp sub_407be0
sub_4182d8
lea ecx [ ebp - 0x2c ]
jmp sub_407be0
sub_4182e0
lea ecx [ ebp - 0x3c ]
jmp sub_407be0
sub_4182e8
mov ecx [ ebp - 0x64 ]
jmp sub_407be0
sub_4182f0
lea ecx [ ebp - 0x4c ]
jmp sub_407be0
sub_4182f8
mov ecx [ ebp - 0x60 ]
jmp sub_407be0
sub_418300
mov eax r--data
jmp sub_40d75f
sub_418310
lea ecx [ ebp - 0x4c ]
jmp sub_407be0
sub_418318
lea ecx [ ebp - 0x6c ]
jmp sub_407be0
sub_418320
lea ecx [ ebp - 0x1c ]
jmp sub_407be0
sub_418328
lea ecx [ ebp - 0x2c ]
jmp sub_407be0
sub_418330
lea ecx [ ebp - 0x3c ]
jmp sub_407be0
sub_418338
mov ecx [ ebp - 0x74 ]
jmp sub_407be0
sub_418340
lea ecx [ ebp - 0x5c ]
jmp sub_407be0
sub_418348
mov ecx [ ebp + 0x4 ]
jmp sub_407be0
sub_418350
lea ecx [ ebp - 0x1c ]
jmp sub_407be0
sub_418358
lea ecx [ ebp - 0x1c ]
jmp sub_407be0
sub_418360
mov eax r--data
jmp sub_40d75f
sub_418370
mov ecx [ ebp - 0x14 ]
jmp sub_407be0
sub_418378
mov ecx [ ebp - 0x10 ]
jmp sub_407be0
sub_418380
mov eax r--data
jmp sub_40d75f
sub_418390
lea ecx [ ebp - 0x3c ]
jmp sub_407be0
sub_418398
lea ecx [ ebp - 0x2c ]
jmp sub_407be0
sub_4183a0
lea ecx [ ebp - 0x4c ]
jmp sub_407be0
sub_4183a8
mov ecx [ ebp - 0x58 ]
jmp sub_407be0
sub_4183b0
mov ecx [ ebp - 0x54 ]
jmp sub_407be0
sub_4183b8
lea ecx [ ebp - 0x1c ]
jmp sub_407be0
sub_4183c0
mov eax r--data
jmp sub_40d75f
sub_4183d0
lea ecx [ ebp - 0x5c ]
jmp sub_407be0
sub_4183d8
mov eax r--data
jmp sub_40d75f
sub_4183f0
lea ecx [ ebp + 0x28 ]
jmp sub_407be0
sub_4183f8
lea ecx [ ebp + 0x18 ]
jmp sub_407be0
sub_418400
lea ecx [ ebp + 0x8 ]
jmp sub_407be0
sub_418408
lea ecx [ ebp - 0x3c ]
jmp sub_407be0
sub_418410
lea ecx [ ebp - 0x2c ]
jmp sub_407be0
sub_418418
lea ecx [ ebp - 0x1c ]
jmp sub_407be0
sub_418420
mov eax [ ebp - 0x40 ]
and eax 0x1
test eax eax
je r-xdata
retn
mov ecx [ ebp + 0x4 ]
jmp sub_407be0
sub_418437
mov eax r--data
jmp sub_40d75f
sub_418450
lea ecx [ ebp - 0x21c ]
jmp sub_407be0
sub_41845b
mov eax r--data
jmp sub_40d75f
sub_418470
lea ecx [ ebp - 0x74 ]
jmp sub_407be0
sub_418478
lea ecx [ ebp - 0x64 ]
jmp sub_407be0
sub_418480
lea ecx [ ebp - 0x98 ]
jmp sub_407be0
sub_41848b
lea ecx [ ebp - 0x50 ]
jmp sub_407be0
sub_418493
lea ecx [ ebp - 0x3c ]
jmp sub_407be0
sub_41849b
mov eax [ ebp - 0x78 ]
and eax 0x1
test eax eax
je r-xdata
retn
mov ecx [ ebp + 0x4 ]
jmp sub_407be0
sub_4184b2
lea ecx [ ebp - 0x98 ]
jmp sub_407be0
sub_4184bd
lea ecx [ ebp - 0x88 ]
jmp sub_407f50
sub_4184c8
lea ecx [ ebp - 0x98 ]
jmp sub_407be0
sub_4184d3
lea ecx [ ebp - 0x98 ]
jmp sub_407be0
sub_4184de
lea ecx [ ebp - 0x2c ]
jmp sub_407be0
sub_4184e6
lea ecx [ ebp - 0x1c ]
jmp sub_407be0
sub_4184ee
lea ecx [ ebp - 0x98 ]
jmp sub_407be0
sub_4184f9
lea ecx [ ebp - 0x2c ]
jmp sub_407be0
sub_418501
mov eax r--data
jmp sub_40d75f
sub_418510
lea ecx [ ebp - 0x1c ]
jmp sub_407be0
sub_418518
mov eax r--data
jmp sub_40d75f
sub_418530
lea ecx [ ebp - 0x60 ]
jmp sub_407be0
sub_418538
mov eax r--data
jmp sub_40d75f
sub_418550
lea ecx [ ebp - 0xa0 ]
jmp sub_407be0
sub_41855b
mov eax r--data
jmp sub_40d75f
sub_418570
mov eax r--data
jmp sub_40d75f
sub_418580
mov eax r--data
jmp sub_40d75f
sub_418590
lea ecx [ ebp - 0x1c ]
jmp sub_407be0
sub_418598
mov eax r--data
jmp sub_40d75f
sub_4185b0
lea ecx [ ebp - 0x1c ]
jmp sub_407be0
sub_4185b8
mov eax r--data
jmp sub_40d75f
sub_4185d0
lea ecx [ ebp - 0x1c ]
jmp sub_407be0
sub_4185d8
mov eax r--data
jmp sub_40d75f
sub_4185f0
mov eax [ ebp + 0x4 ]
push eax
mov ecx [ ebp - 0x10 ]
push ecx
call sub_409c40
add esp 0x8
retn
sub_418601
mov ecx [ ebp - 0x10 ]
jmp sub_407be0
sub_418609
mov eax r--data
jmp sub_40d75f
sub_418620
mov eax [ ebp + 0x4 ]
push eax
mov ecx [ ebp - 0x10 ]
push ecx
call sub_409c40
add esp 0x8
retn
sub_418631
mov eax r--data
jmp sub_40d75f
sub_418640
lea ecx [ ebp - 0x3fc ]
jmp sub_401390
sub_41864b
mov eax r--data
jmp sub_40d75f
sub_418660
mov ecx [ ebp - 0x10 ]
add ecx 0xc
jmp sub_407ed0
sub_41866b
mov ecx [ ebp - 0x10 ]
add ecx 0x1c
jmp sub_407ed0
sub_418676
mov ecx [ ebp - 0x10 ]
add ecx 0x2c
jmp sub_407ed0
sub_418681
mov ecx [ ebp - 0x10 ]
add ecx 0x3c
jmp sub_407ed0
sub_41868c
mov ecx [ ebp - 0x10 ]
add ecx 0x58
jmp sub_407ed0
sub_418697
mov ecx [ ebp - 0x10 ]
add ecx 0x68
jmp sub_407ed0
sub_4186a2
mov ecx [ ebp - 0x10 ]
add ecx 0x78
jmp sub_407ed0
sub_4186ad
mov ecx [ ebp - 0x10 ]
add ecx 0x88
jmp sub_407ed0
sub_4186bb
mov ecx [ ebp - 0x10 ]
add ecx 0x98
jmp sub_407ed0
sub_4186c9
mov ecx [ ebp - 0x10 ]
add ecx 0xb4
jmp sub_407ed0
sub_4186d7
mov ecx [ ebp - 0x10 ]
add ecx 0xc4
jmp sub_407ed0
sub_4186e5
mov ecx [ ebp - 0x10 ]
add ecx 0xe0
jmp sub_407ed0
sub_4186f3
mov ecx [ ebp - 0x10 ]
add ecx 0xf0
jmp sub_407ed0
sub_418701
mov ecx [ ebp - 0x10 ]
add ecx 0x104
jmp sub_407ed0
sub_41870f
mov ecx [ ebp - 0x10 ]
add ecx 0x114
jmp sub_407ed0
sub_41871d
mov eax r--data
jmp sub_40d75f
sub_418730
mov ecx [ ebp - 0x10 ]
add ecx 0xc
jmp sub_407ed0
sub_41873b
mov ecx [ ebp - 0x10 ]
add ecx 0x1c
jmp sub_407ed0
sub_418746
mov ecx [ ebp - 0x10 ]
add ecx 0x2c
jmp sub_407ed0
sub_418751
mov ecx [ ebp - 0x10 ]
add ecx 0x3c
jmp sub_407ed0
sub_41875c
mov ecx [ ebp - 0x10 ]
add ecx 0x58
jmp sub_407ed0
sub_418767
mov ecx [ ebp - 0x10 ]
add ecx 0x68
jmp sub_407ed0
sub_418772
mov ecx [ ebp - 0x10 ]
add ecx 0x78
jmp sub_407ed0
sub_41877d
mov ecx [ ebp - 0x10 ]
add ecx 0x88
jmp sub_407ed0
sub_41878b
mov ecx [ ebp - 0x10 ]
add ecx 0x98
jmp sub_407ed0
sub_418799
mov ecx [ ebp - 0x10 ]
add ecx 0xb4
jmp sub_407ed0
sub_4187a7
mov ecx [ ebp - 0x10 ]
add ecx 0xc4
jmp sub_407ed0
sub_4187b5
mov ecx [ ebp - 0x10 ]
add ecx 0xe0
jmp sub_407ed0
sub_4187c3
mov ecx [ ebp - 0x10 ]
add ecx 0xf0
jmp sub_407ed0
sub_4187d1
mov ecx [ ebp - 0x10 ]
add ecx 0x104
jmp sub_407ed0
sub_4187df
mov ecx [ ebp - 0x10 ]
add ecx 0x114
jmp sub_407ed0
sub_4187ed
mov eax r--data
jmp sub_40d75f
sub_418800
lea ecx [ ebp - 0x4c ]
jmp sub_407ed0
sub_418808
lea ecx [ ebp - 0x1c ]
jmp sub_407be0
sub_418810
lea ecx [ ebp - 0x3c ]
jmp sub_407ed0
sub_418818
mov eax r--data
jmp sub_40d75f
sub_418830
lea ecx [ ebp + 0x4 ]
jmp sub_407ed0
sub_418838
mov eax r--data
jmp sub_40d75f
sub_418850
lea ecx [ ebp - 0x120 ]
jmp sub_407be0
sub_41885b
mov eax r--data
jmp sub_40d75f
sub_418870
lea ecx [ ebp - 0x1c ]
jmp sub_407be0
sub_418878
mov eax r--data
jmp sub_40d75f
sub_418890
lea ecx [ ebp - 0x1c ]
jmp sub_407be0
sub_418898
mov eax r--data
jmp sub_40d75f
sub_4188b0
lea ecx [ ebp - 0x1c ]
jmp sub_407ed0
sub_4188b8
mov eax r--data
jmp sub_40d75f
sub_4188d0
lea ecx [ ebp - 0x1c ]
jmp sub_407ed0
sub_4188d8
mov eax r--data
jmp sub_40d75f
sub_4188f0
lea ecx [ ebp - 0x1c ]
jmp sub_407ed0
sub_4188f8
mov eax r--data
jmp sub_40d75f
sub_418904
lea ecx [ ebp - 0x20 ]
jmp sub_407be0
sub_41890c
mov eax r--data
jmp sub_40d75f
sub_418918
mov ecx [ ebp - 0x14 ]
jmp sub_40ec1a
sub_418920
mov eax r--data
jmp sub_40d75f
sub_41892c
mov ecx [ ebp - 0x10 ]
jmp sub_40ec1a
sub_418934
mov eax r--data
jmp sub_40d75f
sub_418940
mov ecx [ ebp - 0x10 ]
jmp sub_40ec1a
sub_418948
mov eax r--data
jmp sub_40d75f
sub_418954
mov ecx [ ebp - 0x10 ]
jmp sub_40ec1a
sub_41895c
mov eax r--data
jmp sub_40d75f
sub_418968
lea ecx [ ebp - 0x20 ]
jmp sub_407be0
sub_418970
mov eax r--data
jmp sub_40d75f
sub_41897c
mov ecx [ ebp - 0x10 ]
jmp sub_40ec1a
sub_418984
mov eax r--data
jmp sub_40d75f
