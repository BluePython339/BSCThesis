sub_401000
push ebp
mov ebp esp
sub esp 0x900
push ebx
push esi
push edi
push 0x27
call sub_401fb6
mov esi [ ebp + 0x8 ]
push [ esi + 0xc ]
mov edi [ wsprintfW@IAT ]
push [ esi ]
push eax
lea eax [ ebp - 0x900 ]
push eax
call edi
and [ ebp + 0x8 ] 0x0
add esp 0x14
cmp [ esi + 0x10 ] 0x0
jbe r-xdata
lea eax [ ebp - 0x900 ]
push eax
call sub_407690
pop ecx
call sub_403e13
push 0xa
call [ ExitProcess@IAT ]
lea ebx [ esi + 0x14 ]
push [ ebx ]
lea eax [ ebp - 0x100 ]
push r--data
push eax
call edi
add esp 0xc
lea eax [ ebp - 0x100 ]
push eax
lea eax [ ebp - 0x900 ]
push eax
call [ lstrcatW@IAT ]
inc [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
add ebx 0x4
cmp eax [ esi + 0x10 ]
jb r-xdata
sub_4010e2
mov edx [ esp + 0x4 ]
push esi
mov esi [ esp + 0xc ]
mov eax edx
movzx ecx [ esi ]
mov [ edx ] cx
inc edx
inc edx
inc esi
inc esi
test cx cx
jne r-xdata
pop esi
retn
sub_401112
push ebx
mov ebx [ esp + 0x8 ]
push esi
mov esi ecx
inc ebx
cmp ebx [ esi + 0x8 ]
je r-xdata
pop esi
pop ebx
retn 0x4
push edi
xor ecx ecx
push 0x2
pop edx
mov eax ebx
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call ??2@YAPAXI@Z
mov edi eax
xor eax eax
cmp [ esi + 0x8 ] eax
pop ecx
jle r-xdata
mov eax [ esi + 0x4 ]
mov [ esi ] edi
and [ edi + eax * 2 ] 0x0
mov [ esi + 0x8 ] ebx
pop edi
cmp [ esi + 0x4 ] eax
jle r-xdata
push [ esi ]
call ??3@YAXPAX@Z
pop ecx
mov ecx [ esi ]
mov cx [ ecx + eax * 2 ]
mov [ edi + eax * 2 ] cx
inc eax
cmp eax [ esi + 0x4 ]
jl r-xdata
sub_401171
push ebp
mov ebp esp
push ecx
push ecx
test [ rw-data ] 0x1
jne r-xdata
lea eax [ ebp + 0xc ]
push eax
push 0x0
push 0x8001
push [ rw-data ]
call [ SendMessageW@IAT ]
xor eax eax
push 0x0
push 0x0
lea eax [ ebp - 0x8 ]
push eax
push [ rw-data ]
call [ GetDiskFreeSpaceExW@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
cmp eax [ ebp + 0x10 ]
ja r-xdata
jb r-xdata
push 0x2a
call sub_401fb6
push eax
call sub_4076ff
cmp eax 0x1
pop ecx
pop ecx
je r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebp + 0xc ]
jae r-xdata
or [ rw-data ] 0x1
mov [ rw-data ] 0x6a
mov eax 0x80004005
jmp r-xdata
leave
retn 0xc
sub_4011f2
mov eax [ esp + 0x8 ]
test eax eax
je r-xdata
push esi
mov esi [ esp + 0x8 ]
push edi
lea edi [ esi + 0x20 ]
cmp [ edi ] 0x0
je r-xdata
mov [ rw-data ] eax
mov eax 0x80004005
jmp r-xdata
mov ecx edi
call sub_40a018
cmp [ esi + 0x18 ] 0x0
je r-xdata
mov ecx [ esi + 0x1c ]
lea eax [ esi + 0x30 ]
push eax
add ecx 0x8
call sub_40dbb6
retn 0x8
pop edi
xor eax eax
pop esi
push [ esi + 0x3c ]
push [ esi + 0x24 ]
call [ SetFileAttributesW@IAT ]
sub_401243
push ebp
mov ebp esp
push esi
push [ ebp + 0x10 ]
call [ SetLastError@IAT ]
cmp [ ebp + 0xc ] 0x6a
mov esi [ ebp + 0x8 ]
jne r-xdata
cmp [ ebp + 0xc ] 0x69
jne r-xdata
push [ esi + 0x24 ]
push 0x1e
jmp r-xdata
push [ ebp + 0xc ]
mov eax [ esi ]
push esi
call [ eax + 0x1c ]
pop esi
pop ebp
retn 0xc
push [ esi + 0x24 ]
push 0x1f
push 0x1
call sub_40775e
add esp 0xc
sub_401283
cmp [ rw-data ] 0x2
je r-xdata
mov ecx [ esp + 0x4 ]
mov eax [ ecx + 0x8 ]
mov edx [ eax ]
push esi
push ecx
xor ecx ecx
cmp [ rw-data ] 0x2
sete cl
push ecx
push 0xffffffff
push 0x0
push eax
call [ edx + 0x1c ]
cmp [ rw-data ] 0x2
mov esi eax
je r-xdata
jmp r-xdata
mov eax esi
pop esi
retn 0x4
push 0x0
push [ rw-data ]
call [ EndDialog@IAT ]
cmp [ rw-data ] 0x0
je r-xdata
push 0x14
call [ Sleep@IAT ]
sub_4012de
push esi
mov esi ecx
xor eax eax
push edi
mov edi [ esp + 0xc ]
mov [ esi ] eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
push [ edi + 0x4 ]
call sub_401112
push [ edi ]
push [ esi ]
call sub_4010e2
mov eax [ edi + 0x4 ]
pop ecx
pop ecx
mov [ esi + 0x4 ] eax
pop edi
mov eax esi
pop esi
retn 0x4
sub_401310
push esi
mov esi ecx
mov eax [ esi ]
and [ esi + 0x4 ] 0x0
and [ eax ] 0x0
push edi
push [ esp + 0xc ]
call sub_4010fe
pop ecx
mov edi eax
push edi
mov ecx esi
call sub_401112
push [ esp + 0xc ]
push [ esi ]
call sub_4010e2
pop ecx
pop ecx
mov [ esi + 0x4 ] edi
pop edi
mov eax esi
pop esi
retn 0x4
sub_401349
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
cmp edi esi
je r-xdata
pop edi
mov eax esi
pop esi
retn 0x4
and [ esi + 0x4 ] 0x0
mov eax [ esi ]
and [ eax ] 0x0
push [ edi + 0x4 ]
call sub_401112
push [ edi ]
push [ esi ]
call sub_4010e2
mov eax [ edi + 0x4 ]
pop ecx
pop ecx
mov [ esi + 0x4 ] eax
sub_40137f
push ebx
mov ebx [ esp + 0x8 ]
push esi
push edi
mov edi [ ecx + 0x8 ]
mov esi edi
sub esi [ ecx + 0x4 ]
dec esi
cmp ebx esi
jle r-xdata
pop edi
pop esi
pop ebx
retn 0x4
cmp edi 0x40
jle r-xdata
xor eax eax
cmp edi 0x8
setle al
dec eax
and eax 0xc
add eax 0x4
mov eax edi
cdq
sub eax edx
sar eax 0x1
jmp r-xdata
add edi eax
push edi
call sub_401112
sub ebx esi
mov eax ebx
lea edx [ eax + esi ]
cmp edx ebx
jge r-xdata
sub_4013c9
push esi
push edi
mov edi [ esp + 0xc ]
push [ edi + 0x4 ]
mov esi ecx
call sub_40137f
mov eax [ esi + 0x4 ]
mov ecx [ esi ]
push [ edi ]
lea eax [ ecx + eax * 2 ]
push eax
call sub_4010e2
mov eax [ edi + 0x4 ]
add [ esi + 0x4 ] eax
pop ecx
pop ecx
pop edi
mov eax esi
pop esi
retn 0x4
sub_401410
push esi
push 0x1
mov esi ecx
call sub_40137f
mov eax [ esi + 0x4 ]
mov ecx [ esi ]
mov dx [ esp + 0x8 ]
mov [ ecx + eax * 2 ] dx
inc [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
mov ecx [ esi ]
and [ ecx + eax * 2 ] 0x0
mov eax esi
pop esi
retn 0x4
sub_401471
push ebp
mov ebp esp
push r--data
push [ ebp + 0xc ]
call sub_401459
test eax eax
pop ecx
pop ecx
je r-xdata
push r--data
push [ ebp + 0xc ]
call sub_401459
test eax eax
pop ecx
pop ecx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
mov ecx [ eax ]
push eax
call [ ecx + 0x4 ]
xor eax eax
jmp r-xdata
mov eax 0x80004002
pop ebp
retn 0xc
sub_4014da
push esi
mov esi ecx
lea ecx [ esi + 0x8 ]
mov [ esi ] r--data
call j_sub_40d9b4
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call ??3@YAXPAX@Z
pop ecx
sub_4014ff
push ebp
mov ebp esp
push ecx
push esi
push edi
push [ ebp + 0x8 ]
mov esi ecx
lea ecx [ esi + 0x8 ]
call sub_408761
push [ ebp + 0xc ]
lea edi [ esi + 0xc ]
mov ecx edi
call sub_401310
push 0x5c
mov ecx edi
call sub_401410
xor edi edi
lea eax [ ebp - 0x4 ]
push eax
push edi
push esi
push sub_401283
push edi
push edi
mov [ rw-data ] esi
mov [ rw-data ] edi
call [ CreateThread@IAT ]
cmp [ rw-data ] 0x2
mov [ rw-data ] eax
je r-xdata
push 0xffffffff
push [ rw-data ]
call [ WaitForSingleObject@IAT ]
mov eax [ rw-data ]
cmp eax edi
mov [ rw-data ] edi
je r-xdata
call sub_407853
cmp [ rw-data ] edi
jne r-xdata
cmp eax 0x1
je r-xdata
mov eax 0x80004005
lea eax [ ebp + 0x8 ]
push eax
push [ rw-data ]
call [ GetExitCodeThread@IAT ]
test eax eax
mov ecx [ ebp + 0x8 ]
je r-xdata
push 0x11
cmp eax 0x2
je r-xdata
mov eax 0x80070000
mov edx ecx
and edx eax
cmp edx eax
je r-xdata
cmp ecx edi
jne r-xdata
push 0x13
jmp r-xdata
cmp eax 0x3
je r-xdata
and ecx 0xffff
cmp ecx 0xe
jne r-xdata
push ecx
push 0x21
xor eax eax
jmp r-xdata
push edi
call sub_40775e
pop ecx
pop ecx
jmp r-xdata
push 0x12
jmp r-xdata
cmp eax 0x67
jle r-xdata
push ecx
call [ SetLastError@IAT ]
push [ ebp + 0x8 ]
push 0x22
push 0x1
cmp [ rw-data ] 0xffffffff
je r-xdata
call sub_40775e
add esp 0xc
pop edi
pop esi
leave
retn 0x8
push eax
push 0x14
jmp r-xdata
cmp eax 0x6a
jle r-xdata
push edi
jmp r-xdata
sub_40161a
push ebp
mov ebp esp
sub esp 0x4c
push ebx
push edi
xor edi edi
cmp [ rw-data ] edi
je r-xdata
push esi
mov esi [ ebp + 0x8 ]
lea ecx [ esi + 0x20 ]
mov [ ebp - 0x4 ] ecx
call sub_40a018
mov eax [ esi + 0x8 ]
lea edx [ ebp - 0x3c ]
push edx
push 0x3
push [ ebp + 0xc ]
mov [ ebp - 0x3c ] di
mov [ ebp - 0x3a ] di
mov ecx [ eax ]
push eax
call [ ecx + 0x18 ]
cmp eax edi
je r-xdata
mov eax 0x80004004
jmp r-xdata
lea ecx [ ebp - 0x10 ]
call sub_4013f8
cmp [ ebp - 0x3c ] di
je r-xdata
mov edi eax
pop edi
pop ebx
leave
retn 0x10
mov eax [ esi ]
push 0x64
push esi
call [ eax + 0x1c ]
push [ ebp - 0x10 ]
mov esi eax
call ??3@YAXPAX@Z
pop ecx
lea ecx [ ebp - 0x3c ]
call j_sub_40ec94
mov eax esi
cmp [ ebp - 0x3c ] 0x8
jne r-xdata
pop esi
push [ ebp - 0x34 ]
lea ecx [ ebp - 0x10 ]
call sub_401310
lea eax [ ebp - 0x10 ]
push eax
lea eax [ esi + 0xc ]
push eax
lea eax [ ebp - 0x1c ]
push eax
lea ebx [ esi + 0x24 ]
call sub_40143b
add esp 0xc
push eax
mov ecx ebx
call sub_401349
push [ ebp - 0x1c ]
call ??3@YAXPAX@Z
cmp [ ebp + 0x14 ] edi
pop ecx
jne r-xdata
mov eax [ ebp + 0x10 ]
mov [ eax ] edi
mov eax [ esi + 0x8 ]
lea edx [ ebp - 0x2c ]
push edx
push 0x9
push [ ebp + 0xc ]
mov [ ebp - 0x2c ] di
mov [ ebp - 0x2a ] di
mov ecx [ eax ]
push eax
call [ ecx + 0x18 ]
cmp eax edi
mov [ ebp + 0x8 ] eax
je r-xdata
cmp [ ebp - 0x2c ] di
jne r-xdata
lea ecx [ ebp - 0x2c ]
call j_sub_40ec94
push [ ebp - 0x10 ]
call ??3@YAXPAX@Z
mov edi [ ebp + 0x8 ]
pop ecx
jmp r-xdata
cmp [ ebp - 0x2c ] 0x13
je r-xdata
mov [ esi + 0x3c ] edi
jmp r-xdata
lea ecx [ ebp - 0x3c ]
call j_sub_40ec94
mov eax edi
jmp r-xdata
mov eax [ ebp - 0x24 ]
mov [ esi + 0x3c ] eax
push 0x65
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
lea edx [ ebp - 0x2c ]
push edx
push 0x6
push [ ebp + 0xc ]
push eax
call [ ecx + 0x18 ]
cmp eax edi
mov [ ebp + 0x8 ] eax
jne r-xdata
xor eax eax
cmp [ ebp - 0x24 ] di
lea edx [ ebp - 0x2c ]
setne al
push edx
push 0xc
push [ ebp + 0xc ]
mov [ esi + 0x38 ] eax
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x18 ]
cmp eax edi
mov [ ebp + 0xc ] eax
je r-xdata
movzx eax [ ebp - 0x2c ]
cmp eax edi
je r-xdata
lea ecx [ ebp - 0x2c ]
call j_sub_40ec94
push [ ebp - 0x10 ]
call ??3@YAXPAX@Z
mov edi [ ebp + 0xc ]
pop ecx
jmp r-xdata
lea eax [ ebp - 0x4c ]
push eax
call [ GetLocalTime@IAT ]
lea eax [ esi + 0x30 ]
push eax
lea eax [ ebp - 0x4c ]
push eax
call [ SystemTimeToFileTime@IAT ]
cmp eax 0x40
je r-xdata
mov eax [ ebx ]
lea ecx [ esi + 0x30 ]
push ecx
push eax
call sub_402fc3
cmp eax 0xffffffff
pop ecx
pop ecx
je r-xdata
push [ ebx ]
call sub_4032fd
test eax eax
pop ecx
jne r-xdata
mov eax [ ebp - 0x24 ]
mov [ esi + 0x30 ] eax
mov eax [ ebp - 0x20 ]
mov [ esi + 0x34 ] eax
jmp r-xdata
push 0x66
jmp r-xdata
mov edi [ esi ]
call [ GetLastError@IAT ]
push eax
push 0x69
push esi
call [ edi + 0x20 ]
jmp r-xdata
cmp eax 0x1
je r-xdata
lea ecx [ ebp - 0x2c ]
call j_sub_40ec94
push [ ebp - 0x10 ]
call ??3@YAXPAX@Z
pop ecx
jmp r-xdata
push 0x68
jmp r-xdata
cmp [ esi + 0x38 ] edi
je r-xdata
mov eax [ esi ]
push esi
call [ eax + 0x1c ]
mov edi eax
mov eax [ ebp + 0x10 ]
mov [ eax ] edi
jmp r-xdata
push 0x18
call ??2@YAPAXI@Z
cmp eax edi
pop ecx
je r-xdata
xor eax eax
mov [ eax + 0x4 ] edi
mov [ eax ] r--data
or [ eax + 0x8 ] 0xffffffff
jmp r-xdata
mov esi [ ebp + 0xc ]
mov ecx [ ebp - 0x4 ]
push esi
call sub_408761
mov eax [ ebp + 0x10 ]
lea ecx [ ebp - 0x2c ]
mov [ eax ] esi
call j_sub_40ec94
jmp r-xdata
call [ GetLastError@IAT ]
push ebx
lea ecx [ ebp - 0x1c ]
mov [ ebp + 0x8 ] eax
call sub_4012de
lea eax [ ebp - 0x1c ]
push eax
call sub_402d00
cmp eax edi
pop ecx
jge r-xdata
push eax
lea ecx [ ebp + 0xc ]
mov [ esi + 0x1c ] eax
call sub_408726
mov ecx [ ebx ]
mov eax [ esi + 0x1c ]
push 0x1
push ecx
lea ecx [ eax + 0x8 ]
mov [ eax + 0x10 ] edi
mov [ eax + 0x14 ] edi
call sub_40db82
test al al
jne r-xdata
push [ ebp - 0x10 ]
call ??3@YAXPAX@Z
pop ecx
lea ecx [ ebp - 0x3c ]
call j_sub_40ec94
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0x1c ]
mov [ ecx + eax * 2 ] di
push [ ebp - 0x1c ]
mov [ ebp - 0x18 ] eax
call sub_4032fd
test eax eax
pop ecx
jne r-xdata
push [ ebp + 0x8 ]
mov eax [ esi ]
push 0x6a
push esi
call [ eax + 0x20 ]
mov ebx [ ebx ]
mov eax [ esi + 0x1c ]
push 0x1
push ebx
lea ecx [ eax + 0x8 ]
mov [ eax + 0x10 ] edi
mov [ eax + 0x14 ] edi
call sub_40db82
test al al
jne r-xdata
mov eax [ esi ]
push 0x68
push esi
call [ eax + 0x1c ]
jmp r-xdata
lea ecx [ ebp - 0x2c ]
call j_sub_40ec94
push [ ebp - 0x10 ]
call ??3@YAXPAX@Z
pop ecx
mov edi esi
jmp r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
push [ ebp - 0x1c ]
call ??3@YAXPAX@Z
pop ecx
mov ebx [ esi ]
call [ GetLastError@IAT ]
push eax
push 0x6a
push esi
call [ ebx + 0x20 ]
jmp r-xdata
push [ ebp - 0x1c ]
mov esi eax
call ??3@YAXPAX@Z
mov eax [ ebp + 0xc ]
cmp eax edi
pop ecx
je r-xdata
sub_40197a
push esi
push 0x0
push [ esp + 0xc ]
call [ CreateDirectoryW@IAT ]
test eax eax
jne r-xdata
xor eax eax
inc eax
pop esi
retn
call [ GetLastError@IAT ]
mov esi 0xb7
cmp eax esi
je r-xdata
push [ esp + 0x8 ]
call [ GetFileAttributesW@IAT ]
cmp eax 0xffffffff
je r-xdata
push eax
test al 0x10
jne r-xdata
push esi
jmp r-xdata
call [ SetLastError@IAT ]
xor eax eax
pop esi
retn
sub_4019c0
cmp al 0xa
jne r-xdata
cmp al 0x20
je r-xdata
inc [ rw-data ]
add al 0xf7
retn
xor eax eax
inc eax
retn
cmp al 0xd
je r-xdata
test al al
je r-xdata
cmp al 0x9
je r-xdata
xor eax eax
retn
sub_4019e4
push ebp
mov ebp esp
push ecx
mov al [ ebp + 0x8 ]
push 0x0
mov [ ebp + 0x8 ] al
lea eax [ ebp - 0x4 ]
push eax
push 0x3
lea eax [ ebp + 0x8 ]
push eax
push 0xfffffff5
mov [ ebp + 0x9 ] 0xd
mov [ ebp + 0xa ] 0xa
call [ GetStdHandle@IAT ]
push eax
call [ WriteFile@IAT ]
leave
retn
sub_401a13
mov eax [ esp + 0x4 ]
lea ecx [ eax - 0x30 ]
cmp cx 0x9
ja r-xdata
lea ecx [ eax - 0x61 ]
cmp cx 0x19
ja r-xdata
movzx eax ax
sub eax 0x30
retn
lea ecx [ eax - 0x41 ]
cmp cx 0x19
ja r-xdata
movzx eax ax
sub eax 0x57
retn
or eax 0xffffffff
retn
movzx eax ax
sub eax 0x37
retn
sub_401a4b
push esi
mov esi [ esp + 0x8 ]
movzx eax [ esi ]
push eax
call sub_401a13
mov edx eax
shl edx 0x4
pop ecx
js r-xdata
or eax 0xffffffff
pop esi
retn
movzx eax [ esi + 0x2 ]
push eax
call sub_401a13
or edx eax
pop ecx
jl r-xdata
mov eax edx
pop esi
retn
sub_401a8f
push ebp
mov ebp esp
push ecx
push ecx
and [ ebp - 0x4 ] 0x0
cmp [ ebp + 0x10 ] 0x0
push ebx
push esi
push edi
jle r-xdata
mov ecx [ ebp + 0x10 ]
xor eax eax
cmp [ ebp - 0x4 ] ecx
setne al
mov edi [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov esi [ CharUpperW@IAT ]
sub eax edi
mov [ ebp - 0x8 ] eax
jmp r-xdata
movzx eax [ eax + edi ]
test ax ax
je r-xdata
cmp [ edi ] 0x0
je r-xdata
movzx eax ax
movzx eax ax
push eax
call esi
movzx ebx ax
movzx eax [ edi ]
movzx eax ax
push eax
call esi
cmp bx ax
jne r-xdata
mov edi [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
add edi edi
movzx eax [ edi + eax ]
movzx eax ax
push eax
call esi
movzx ebx ax
mov eax [ ebp + 0xc ]
movzx eax [ edi + eax ]
movzx eax ax
push eax
call esi
movzx ecx ax
movzx eax bx
sub eax ecx
jmp r-xdata
inc [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
inc edi
inc edi
cmp eax [ ebp + 0x10 ]
jl r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ ebp - 0x8 ]
sub_401b50
push ebp
mov ebp esp
sub esp 0x1c
push esi
push edi
xor esi esi
push esi
push esi
call [ GetModuleHandleW@IAT ]
push eax
push esi
push esi
push 0x5
push 0x5
push 0xfffffff6
push 0xfffffff6
push esi
push r--data
push r--data
push esi
call [ CreateWindowExW@IAT ]
mov edi eax
cmp edi esi
je r-xdata
pop edi
pop esi
leave
retn
push esi
push 0x1
push 0x1
push edi
call [ SetTimer@IAT ]
push esi
push esi
push esi
lea eax [ ebp - 0x1c ]
push eax
call [ GetMessageW@IAT ]
lea eax [ ebp - 0x1c ]
push eax
call [ DispatchMessageW@IAT ]
push 0x1
push edi
call [ KillTimer@IAT ]
push edi
call [ DestroyWindow@IAT ]
sub_401bbc
push ebx
push [ esp + 0x8 ]
call [ GetParent@IAT ]
mov ebx eax
test ebx ebx
jne r-xdata
push esi
push edi
mov edi [ esp + 0x14 ]
push edi
push [ esp + 0x14 ]
call [ GetWindowRect@IAT ]
mov esi [ ScreenToClient@IAT ]
push edi
push ebx
call esi
add edi 0x8
push edi
push ebx
call esi
pop edi
xor eax eax
pop esi
inc eax
pop ebx
retn
pop ebx
retn
sub_401bf8
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
push 0x0
call [ GetModuleHandleW@IAT ]
mov esi [ FindResourceExA@IAT ]
mov ebx eax
movzx eax [ rw-data ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push ebx
call esi
mov edi eax
test edi edi
jne r-xdata
mov esi [ ebp + 0x10 ]
test esi esi
je r-xdata
push 0x409
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push ebx
call esi
mov edi eax
test edi edi
je r-xdata
push edi
push ebx
call [ LoadResource@IAT ]
test eax eax
je r-xdata
push edi
push ebx
call [ SizeofResource@IAT ]
mov [ esi ] eax
cmp [ rw-data ] 0x0
jne r-xdata
push eax
call [ LockResource@IAT ]
jmp r-xdata
xor eax eax
mov esi [ LoadLibraryA@IAT ]
push r--data
mov ebx r--data
push ebx
mov [ rw-data ] 0x1
call esi
mov edi [ GetProcAddress@IAT ]
push eax
call edi
push 0x0
mov [ ebp - 0x4 ] eax
movzx eax [ rw-data ]
push 0x409
push 0x0
push eax
lea eax [ ebp - 0x44 ]
push r--data
push eax
call [ wsprintfW@IAT ]
add esp 0x18
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
push 0x0
lea eax [ ebp - 0x44 ]
push eax
push 0x4
call [ ebp - 0x4 ]
push r--data
push ebx
call esi
push eax
call edi
test eax eax
mov [ ebp - 0x4 ] eax
je r-xdata
sub_401ce1
push ebp
mov ebp esp
sub esp 0x2c
push ebx
push esi
push edi
xor edi edi
push edi
call [ GetWindowDC@IAT ]
push 0x58
push eax
mov [ ebp - 0x4 ] eax
call [ GetDeviceCaps@IAT ]
cmp eax 0x1
jge r-xdata
mov esi [ MulDiv@IAT ]
push 0x60
push 0x64
push eax
call esi
cmp eax 0x76
jl r-xdata
push 0x60
pop eax
cmp eax 0x91
jle r-xdata
cmp eax 0x91
jg r-xdata
push [ ebp - 0x4 ]
push edi
call [ ReleaseDC@IAT ]
push edi
push edi
push edi
push edi
push [ ebp + 0x8 ]
call [ CopyImage@IAT ]
push 0x3
pop ebx
push 0x2
push 0x4
pop ebx
push 0x3
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
pop edi
lea eax [ ebp - 0x2c ]
push eax
push 0x18
push [ ebp + 0x8 ]
call [ GetObjectW@IAT ]
push edi
push ebx
push [ ebp - 0x28 ]
call esi
push edi
push ebx
push [ ebp - 0x24 ]
mov [ ebp - 0xc ] eax
call esi
push [ ebp - 0x4 ]
mov esi [ CreateCompatibleDC@IAT ]
mov [ ebp - 0x8 ] eax
call esi
push [ ebp - 0x4 ]
mov ebx eax
call esi
push [ ebp + 0x8 ]
mov esi [ SelectObject@IAT ]
push ebx
mov edi eax
call esi
push [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
push [ ebp - 0xc ]
push [ ebp - 0x4 ]
call [ CreateCompatibleBitmap@IAT ]
push eax
push edi
call esi
push 0x4
push edi
mov [ ebp - 0x14 ] eax
call [ SetStretchBltMode@IAT ]
push 0xcc0020
push [ ebp - 0x24 ]
xor eax eax
push [ ebp - 0x28 ]
push eax
push eax
push ebx
push [ ebp - 0x8 ]
push [ ebp - 0xc ]
push eax
push eax
push edi
call [ StretchBlt@IAT ]
push 0x7
push edi
call [ GetCurrentObject@IAT ]
push [ ebp - 0x10 ]
mov [ ebp - 0xc ] eax
push ebx
call esi
push [ ebp - 0x14 ]
push edi
call esi
mov esi [ DeleteDC@IAT ]
push ebx
call esi
push edi
call esi
push [ ebp - 0x4 ]
push 0x0
call [ ReleaseDC@IAT ]
mov eax [ ebp - 0xc ]
jmp r-xdata
sub_401e0c
push ebp
mov ebp esp
sub esp 0x68
push ebx
push esi
push edi
push 0x40
lea eax [ ebp - 0x68 ]
push eax
push [ ebp + 0x8 ]
call [ GetClassNameA@IAT ]
test eax eax
je r-xdata
xor eax eax
push r--data
lea eax [ ebp - 0x68 ]
push eax
call [ lstrcmpiA@IAT ]
test eax eax
jne r-xdata
push 0xfffffff0
push [ ebp + 0x8 ]
call [ GetWindowLongW@IAT ]
test al 0xe
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
call [ GetMenu@IAT ]
movzx eax ax
push eax
push r--data
call sub_401bf8
mov ebx eax
xor esi esi
add esp 0xc
cmp ebx esi
je r-xdata
cmp [ ebp - 0x8 ] 0x10
jb r-xdata
push [ ebp - 0x8 ]
push 0x40
call [ GlobalAlloc@IAT ]
push [ ebp - 0x8 ]
mov edi eax
push ebx
push edi
call memcpy
add esp 0xc
push esi
call [ CoInitialize@IAT ]
lea eax [ ebp - 0xc ]
push eax
push esi
push edi
call [ CreateStreamOnHGlobal@IAT ]
test eax eax
jne r-xdata
push edi
call [ GlobalFree@IAT ]
cmp [ ebp - 0xc ] esi
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
push r--data
push esi
push esi
push [ ebp - 0xc ]
call [ OleLoadPicture@IAT ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
push edi
call [ GlobalFree@IAT ]
mov eax [ ebp - 0x10 ]
cmp eax esi
je r-xdata
lea edx [ ebp - 0x4 ]
push edx
mov [ ebp - 0x4 ] esi
mov ecx [ eax ]
push eax
call [ ecx + 0xc ]
cmp [ ebp - 0x4 ] esi
je r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
xor eax eax
inc eax
jmp r-xdata
push [ ebp - 0x4 ]
call sub_401ce1
pop ecx
lea ecx [ ebp - 0x28 ]
push ecx
push 0x18
push eax
mov [ ebp - 0x4 ] eax
call [ GetObjectW@IAT ]
push 0x6
push [ ebp - 0x20 ]
push [ ebp - 0x24 ]
push esi
push esi
push esi
push [ ebp + 0x8 ]
call [ SetWindowPos@IAT ]
push [ ebp - 0x4 ]
push esi
push 0x172
push [ ebp + 0x8 ]
call [ SendMessageW@IAT ]
pop edi
pop esi
pop ebx
leave
retn
sub_401f60
cmp [ rw-data ] 0x0
jne r-xdata
movzx eax [ rw-data ]
retn
call [ GetUserDefaultUILanguage@IAT ]
mov [ rw-data ] ax
mov ecx [ rw-data ]
and cx 0x3ff
cmp cx 0x9
je r-xdata
call [ GetSystemDefaultUILanguage@IAT ]
cmp ax 0x409
jne r-xdata
movzx eax ax
retn
call [ GetSystemDefaultLCID@IAT ]
mov ecx [ r--data ]
cmp eax ecx
jne r-xdata
mov [ rw-data ] cx
sub_401fb6
push ebp
mov ebp esp
sub esp 0x68
push ebx
push esi
xor ebx ebx
xor esi esi
cmp [ rw-data ] ebx
je r-xdata
shl esi 0x4
cmp [ esi + rw-data ] ebx
jne r-xdata
mov eax rw-data
push edi
mov edi [ GetLastError@IAT ]
call edi
push [ ebp + 0x8 ]
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x68 ]
push r--data
push eax
call [ wsprintfW@IAT ]
add esp 0xc
push ebx
push ebx
mov ebx [ GetEnvironmentVariableW@IAT ]
lea eax [ ebp - 0x68 ]
push eax
call ebx
mov [ ebp - 0x4 ] eax
call edi
test eax eax
jne r-xdata
mov eax r--data
jmp r-xdata
inc esi
mov eax esi
shl eax 0x4
lea eax [ eax + rw-data ]
cmp [ eax ] ebx
jne r-xdata
push [ ebp - 0xc ]
call [ SetLastError@IAT ]
mov eax [ esi + rw-data ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
xor ecx ecx
push 0x2
add eax 0x2
pop edx
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call ??2@YAPAXI@Z
pop ecx
mov ecx [ ebp - 0x4 ]
inc ecx
push ecx
push eax
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x68 ]
push eax
call ebx
cmp eax [ ebp - 0x4 ]
ja r-xdata
pop esi
pop ebx
leave
retn
mov ecx [ ebp + 0x8 ]
cmp [ eax ] ecx
je r-xdata
pop edi
mov ebx [ esi + rw-data ]
lea edi [ esi + rw-data ]
cmp [ edi ] eax
je r-xdata
push [ ebp - 0x8 ]
call edi
test eax eax
jne r-xdata
push ebx
call [ lstrlenW@IAT ]
xor ecx ecx
push 0x2
add eax 0x3
pop edx
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call ??2@YAPAXI@Z
push ebx
push eax
mov [ esi + rw-data ] eax
call [ wcscpy@IAT ]
mov eax [ esi + rw-data ]
add esp 0xc
call sub_401f60
cmp eax [ r--data ]
jne r-xdata
mov eax [ esi + rw-data ]
test eax eax
je r-xdata
mov ebx [ edi ]
mov eax [ ebp - 0x8 ]
mov [ esi + rw-data ] eax
jmp r-xdata
mov edi [ ebp - 0x8 ]
push edi
push eax
call [ lstrcmpiW@IAT ]
test eax eax
je r-xdata
push edi
jmp r-xdata
push [ esi + rw-data ]
call ??3@YAXPAX@Z
mov [ esi + rw-data ] edi
jmp r-xdata
call ??3@YAXPAX@Z
pop ecx
sub_402117
cmp [ rw-data ] 0x0
je r-xdata
retn
push esi
mov esi rw-data
add esi 0x10
cmp [ esi - 0xc ] 0x0
jne r-xdata
push eax
call ??3@YAXPAX@Z
and [ esi ] 0x0
pop ecx
mov eax [ esi ]
test eax eax
je r-xdata
pop esi
sub_402141
cmp [ rw-data ] 0x0
je r-xdata
retn
push r--data
push r--data
call [ LoadLibraryA@IAT ]
push eax
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
push [ rw-data ]
call eax
and [ rw-data ] 0x0
sub_4021a9
push ebp
mov ebp esp
sub esp 0x24
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
push r--data
push r--data
call [ LoadLibraryA@IAT ]
push eax
call [ GetProcAddress@IAT ]
test eax eax
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
lea ecx [ ebp - 0x24 ]
push ecx
call eax
cmp [ ebp - 0x24 ] 0x9
jne r-xdata
cmp esi 0x1
sete al
jmp r-xdata
pop esi
leave
retn
cmp [ ebp - 0x24 ] 0x0
jne r-xdata
cmp esi 0x2
jne r-xdata
xor eax eax
xor eax eax
inc eax
cmp esi eax
je r-xdata
call sub_402175
jmp r-xdata
sub_402223
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi [ eax + 0x4 ]
test esi esi
mov eax [ ebp + 0xc ]
je r-xdata
pop esi
pop ebp
retn 0x8
mov edx [ ecx + 0x4 ]
cmp eax edx
push ebx
push edi
jge r-xdata
or eax 0xffffffff
xor edx edx
test esi esi
jle r-xdata
mov esi [ ebp + 0x8 ]
mov esi [ esi + 0x4 ]
cmp edx esi
je r-xdata
lea esi [ eax + eax ]
pop edi
pop ebx
inc eax
cmp eax [ ecx + 0x4 ]
jl r-xdata
mov edi [ ebp + 0x8 ]
mov ebx [ ecx ]
mov edi [ edi ]
mov bx [ esi + ebx ]
cmp bx [ edi + edx * 2 ]
jne r-xdata
mov edi [ ebp + 0x8 ]
inc edx
inc esi
inc esi
cmp edx [ edi + 0x4 ]
jl r-xdata
lea edi [ edx + eax ]
cmp edi [ ecx + 0x4 ]
jge r-xdata
sub_402284
push ebx
mov ebx [ esp + 0x8 ]
push esi
mov esi ecx
inc ebx
cmp ebx [ esi + 0x8 ]
je r-xdata
pop esi
pop ebx
retn 0x4
push edi
push ebx
call ??2@YAPAXI@Z
mov edi eax
xor eax eax
cmp [ esi + 0x8 ] eax
pop ecx
jle r-xdata
mov eax [ esi + 0x4 ]
mov [ esi ] edi
mov [ edi + eax ] 0x0
mov [ esi + 0x8 ] ebx
pop edi
cmp [ esi + 0x4 ] eax
jle r-xdata
push [ esi ]
call ??3@YAXPAX@Z
pop ecx
mov ecx [ esi ]
mov cl [ eax + ecx ]
mov [ eax + edi ] cl
inc eax
cmp eax [ esi + 0x4 ]
jl r-xdata
sub_4022d0
push ebx
mov ebx [ esp + 0x8 ]
push esi
push edi
mov edi [ ecx + 0x8 ]
mov esi edi
sub esi [ ecx + 0x4 ]
dec esi
cmp ebx esi
jle r-xdata
pop edi
pop esi
pop ebx
retn 0x4
cmp edi 0x40
jle r-xdata
xor eax eax
cmp edi 0x8
setle al
dec eax
and eax 0xc
add eax 0x4
mov eax edi
cdq
sub eax edx
sar eax 0x1
jmp r-xdata
add edi eax
push edi
call sub_402284
sub ebx esi
mov eax ebx
lea edx [ eax + esi ]
cmp edx ebx
jge r-xdata
sub_40231a
mov eax [ ecx ]
mov edx [ ecx + 0x4 ]
mov ecx [ esp + 0x8 ]
sub edx ecx
lea edx [ edx + edx + 0x2 ]
lea ecx [ eax + ecx * 2 ]
push edx
push ecx
mov ecx [ esp + 0xc ]
lea eax [ eax + ecx * 2 ]
push eax
call [ memmove@IAT ]
add esp 0xc
retn 0x8
sub_402359
push esi
jmp r-xdata
mov ecx [ eax ]
cmp ecx [ edx + 0x4 ]
jl r-xdata
mov ecx [ eax ]
mov esi [ edx ]
cmp [ ecx + esi ] 0xa
je r-xdata
xor al al
pop esi
retn
inc [ rw-data ]
mov al 0x1
pop esi
retn
inc ecx
mov [ eax ] ecx
sub_40237e
jmp r-xdata
mov eax [ esi ]
cmp eax [ edx + 0x4 ]
jl r-xdata
mov eax [ edx ]
mov ecx [ esi ]
mov cl [ eax + ecx ]
mov al cl
call sub_4019c0
test al al
jne r-xdata
xor al al
retn
inc [ esi ]
cmp cl 0x3b
jne r-xdata
mov al 0x1
retn
mov eax esi
call sub_402359
test al al
je r-xdata
sub_4023b1
push ebx
mov ebx [ esp + 0x10 ]
test ebx ebx
push esi
push edi
jne r-xdata
mov esi [ ebx ]
xor esi esi
jmp r-xdata
cmp esi [ edi + 0x8 ]
jl r-xdata
mov edi [ esp + 0x10 ]
jmp r-xdata
mov eax [ edi + 0xc ]
mov eax [ eax + esi * 4 ]
push [ esp + 0x14 ]
mov eax [ eax ]
push eax
call [ lstrcmpW@IAT ]
test eax eax
je r-xdata
xor eax eax
test ebx ebx
je r-xdata
inc esi
mov eax [ edi + 0xc ]
mov eax [ eax + esi * 4 ]
jmp r-xdata
mov [ ebx ] esi
pop edi
pop esi
pop ebx
retn
sub_402418
push ebp
mov ebp esp
sub esp 0x40
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
test [ rw-data ] 0x2
mov [ ebp - 0x40 ] 0x40
jne r-xdata
xor eax eax
leave
retn
xor eax eax
inc eax
leave
retn
lea eax [ ebp - 0x40 ]
push eax
call [ GlobalMemoryStatusEx@IAT ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x2c ]
xor eax eax
cmp ecx eax
ja r-xdata
jb r-xdata
push 0x2b
call sub_401fb6
push eax
call sub_4076ff
cmp eax 0x1
pop ecx
pop ecx
je r-xdata
mov eax [ ebp - 0x30 ]
cmp eax [ ebp + 0x8 ]
jae r-xdata
or [ rw-data ] 0x2
or [ rw-data ] 0xffffffff
jmp r-xdata
sub_4024ba
push esi
mov esi ecx
xor eax eax
push edi
push [ esp + 0xc ]
mov [ esi ] eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
call sub_4010fe
pop ecx
mov edi eax
push edi
mov ecx esi
call sub_401112
push [ esp + 0xc ]
push [ esi ]
call sub_4010e2
pop ecx
pop ecx
mov [ esi + 0x4 ] edi
pop edi
mov eax esi
pop esi
retn 0x4
sub_4024f3
push esi
push edi
push [ esp + 0xc ]
mov esi ecx
call sub_4010fe
pop ecx
mov edi eax
push edi
mov ecx esi
call sub_40137f
mov eax [ esi + 0x4 ]
mov ecx [ esi ]
push [ esp + 0xc ]
lea eax [ ecx + eax * 2 ]
push eax
call sub_4010e2
add [ esi + 0x4 ] edi
pop ecx
pop ecx
pop edi
mov eax esi
pop esi
retn 0x4
sub_402529
mov eax [ ecx + 0x4 ]
test eax eax
je r-xdata
or eax 0xffffffff
mov ecx [ ecx ]
mov dx [ esp + 0x4 ]
lea eax [ ecx + eax * 2 - 0x2 ]
jmp r-xdata
cmp [ eax ] dx
jne r-xdata
cmp eax ecx
je r-xdata
sub eax ecx
sar eax 0x1
jmp r-xdata
dec eax
dec eax
retn 0x4
sub_40256c
push esi
mov esi ecx
and [ esi ] 0x0
and [ esi + 0x4 ] 0x0
and [ esi + 0x8 ] 0x0
push 0x1
call sub_402284
mov eax [ esi ]
mov cl [ esp + 0x8 ]
mov [ eax ] cl
mov eax [ esi ]
mov [ eax + 0x1 ] 0x0
mov [ esi + 0x4 ] 0x1
mov eax esi
pop esi
retn 0x4
sub_40259c
push esi
mov esi ecx
xor eax eax
push edi
mov edi [ esp + 0xc ]
mov [ esi ] eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
push [ edi + 0x4 ]
call sub_402284
push [ edi ]
push [ esi ]
call sub_402342
mov eax [ edi + 0x4 ]
pop ecx
pop ecx
mov [ esi + 0x4 ] eax
pop edi
mov eax esi
pop esi
retn 0x4
sub_4025e6
push esi
push 0x1
mov esi ecx
call sub_4022d0
mov ecx [ esi + 0x4 ]
mov eax [ esi ]
mov dl [ esp + 0x8 ]
mov [ eax + ecx ] dl
inc [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
mov ecx [ esi ]
mov [ eax + ecx ] 0x0
mov eax esi
pop esi
retn 0x4
sub_40260e
push esi
push edi
mov edi [ esp + 0xc ]
push edi
mov esi ecx
call sub_4012de
add edi 0xc
push edi
lea ecx [ esi + 0xc ]
call sub_4012de
pop edi
mov eax esi
pop esi
retn 0x4
sub_40262f
mov edx [ ecx ]
mov eax [ esp + 0x8 ]
lea eax [ edx + eax * 2 ]
jmp r-xdata
movzx ecx [ eax ]
cmp cx [ esp + 0x4 ]
jne r-xdata
test cx cx
je r-xdata
sub eax edx
sar eax 0x1
jmp r-xdata
or eax 0xffffffff
inc eax
inc eax
retn 0x8
sub_402657
push esi
mov esi ecx
mov ecx [ esp + 0x8 ]
mov eax [ esi + 0x4 ]
push edi
mov edi [ esp + 0x10 ]
lea edx [ ecx + edi ]
cmp edx eax
jle r-xdata
test edi edi
jle r-xdata
sub eax ecx
mov edi eax
mov eax [ esi + 0x4 ]
pop edi
pop esi
retn 0x8
lea eax [ ecx + edi ]
push eax
push ecx
mov ecx esi
call sub_40231a
sub [ esi + 0x4 ] edi
sub_40268c
push ebx
push esi
mov esi [ esp + 0xc ]
push edi
mov edi ecx
mov eax [ edi + 0x4 ]
cmp [ esi ] eax
jle r-xdata
mov ebx [ esp + 0x14 ]
push ebx
call sub_40137f
mov eax [ esi ]
push eax
add eax ebx
push eax
mov ecx edi
call sub_40231a
pop edi
pop esi
pop ebx
retn 0x8
mov [ esi ] eax
sub_4026d4
push edi
mov edi [ esp + 0x8 ]
mov ecx edi
call sub_4013f8
mov eax [ esp + 0xc ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax edi
pop edi
retn
push ebx
mov ebx [ eax ]
push esi
mov esi [ eax + 0x4 ]
lea eax [ esi + 0x1 ]
push eax
push esi
mov ecx edi
call sub_40220b
push eax
push esi
push ebx
push 0x0
push [ esp + 0x2c ]
call [ MultiByteToWideChar@IAT ]
mov ecx [ edi ]
and [ ecx + eax * 2 ] 0x0
pop esi
mov [ edi + 0x4 ] eax
pop ebx
sub_40271c
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov ecx esi
call sub_402554
mov eax [ ebp + 0xc ]
xor ebx ebx
cmp [ eax + 0x4 ] ebx
je r-xdata
mov eax esi
pop esi
pop ebx
pop ebp
retn
push edi
mov edi [ eax + 0x4 ]
mov eax [ eax ]
push ebx
lea ecx [ edi + edi ]
mov [ ebp + 0x8 ] eax
push ebx
lea eax [ ecx + 0x1 ]
push eax
push ecx
mov ecx esi
call sub_4025ce
push eax
push edi
push [ ebp + 0x8 ]
push ebx
push [ ebp + 0x10 ]
call [ WideCharToMultiByte@IAT ]
mov ecx [ esi ]
mov [ eax + ecx ] bl
mov [ esi + 0x4 ] eax
pop edi
sub_40276d
push ebp
mov ebp esp
sub esp 0xc
lea ecx [ ebp - 0xc ]
call sub_4013f8
cmp [ ebp - 0x4 ] 0x1
jg r-xdata
push esi
mov esi [ ExpandEnvironmentStringsW@IAT ]
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi ]
push 0x1
push [ ebp - 0xc ]
push eax
call esi
test eax eax
jne r-xdata
push 0x1
lea ecx [ ebp - 0xc ]
call sub_401112
push ebx
mov ebx [ edi ]
inc eax
push eax
push eax
lea ecx [ ebp - 0xc ]
call sub_40220b
push eax
push ebx
call esi
mov esi [ ebp - 0xc ]
push esi
call sub_4010fe
and [ esi + eax * 2 ] 0x0
pop ecx
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0xc ]
push eax
mov ecx edi
call sub_401349
push esi
call ??3@YAXPAX@Z
pop ecx
pop ebx
push [ ebp - 0xc ]
call ??3@YAXPAX@Z
pop ecx
jmp r-xdata
pop edi
pop esi
leave
retn
sub_4027ea
push ebp
mov ebp esp
mov eax 0x1020
call sub_412170
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi ]
xor ebx ebx
push ebx
push ebx
push ebx
push ebx
push edi
call [ eax + 0x10 ]
mov eax [ ebp + 0x14 ]
push [ ebp + 0xc ]
mov esi [ lstrlenA@IAT ]
mov [ eax + 0x4 ] ebx
mov eax [ eax ]
mov [ eax ] bl
call esi
push [ ebp + 0x10 ]
mov [ ebp - 0xc ] eax
call esi
mov [ ebp - 0x18 ] eax
xor esi esi
mov [ ebp - 0x1 ] bl
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] ebx
jmp r-xdata
mov eax [ edi ]
lea ecx [ ebp - 0x1c ]
push ecx
mov ecx 0x1000
sub ecx esi
push ecx
lea ecx [ ebp + esi - 0x1020 ]
push ecx
push edi
call [ eax + 0xc ]
test eax eax
jne r-xdata
xor al al
mov eax [ ebp - 0x1c ]
cmp eax ebx
je r-xdata
add esi eax
lea eax [ ebp - 0x1020 ]
xor edi edi
mov [ ebp - 0x8 ] eax
sub eax [ ebp - 0xc ]
cmp edi eax
ja r-xdata
sub eax [ ebp - 0x18 ]
cmp edi eax
ja r-xdata
sub esi edi
add [ ebp - 0x14 ] edi
push esi
lea eax [ ebp + edi - 0x1020 ]
adc [ ebp - 0x10 ] ebx
push eax
lea eax [ ebp - 0x1020 ]
push eax
call [ memmove@IAT ]
add esp 0xc
cmp [ ebp - 0x10 ] ebx
ja r-xdata
push [ ebp - 0xc ]
push [ ebp + 0xc ]
push [ ebp - 0x8 ]
call memcmp
add esp 0xc
test eax eax
jne r-xdata
push [ ebp - 0x18 ]
push [ ebp + 0x10 ]
push [ ebp - 0x8 ]
call memcmp
add esp 0xc
test eax eax
je r-xdata
mov ecx [ ebp + 0x14 ]
xor eax eax
cmp [ ecx + 0x4 ] ebx
setne al
jmp r-xdata
cmp [ ebp - 0x14 ] 0x100000
jbe r-xdata
inc edi
inc [ ebp - 0x8 ]
jmp r-xdata
mov eax [ ebp - 0xc ]
add edi eax
add [ ebp - 0x8 ] eax
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
mov al 0x1
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov al [ eax ]
cmp al bl
mov [ ebp - 0x20 ] al
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov edi [ ebp + 0x8 ]
cmp [ ebp - 0x1 ] bl
mov eax esi
je r-xdata
push [ ebp - 0x20 ]
mov ecx [ ebp + 0x14 ]
call sub_4025e6
sub_40292c
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x8 ]
call sub_402554
and [ esi ] 0x0
mov cl [ edi ]
jmp r-xdata
mov al cl
mov [ ebp - 0x4 ] cl
call sub_4019c0
test al al
je r-xdata
cmp cl 0x3d
je r-xdata
mov eax [ ebp + 0x8 ]
leave
retn
push [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
call sub_4025e6
inc [ esi ]
mov eax [ esi ]
mov cl [ edi + eax ]
sub_402969
push ebp
mov ebp esp
sub esp 0x18
cmp [ rw-data ] 0x3
jne r-xdata
push esi
push edi
lea ecx [ ebp - 0x18 ]
call sub_402554
mov eax [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
mov ecx [ esi ]
mov edi eax
movzx eax [ eax + ecx ]
jmp r-xdata
push 0x7a
call sub_4019e4
jmp r-xdata
test al al
jne r-xdata
xor al al
pop ecx
leave
retn
cmp al 0xa
je r-xdata
push 0xfde9
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0xc ]
push eax
call sub_4026d4
add esp 0xc
cmp [ ebp + 0x10 ] 0x0
pop edi
pop esi
push [ ebp - 0xc ]
jne r-xdata
cmp al 0xd
je r-xdata
push 0x20
push 0x0
call sub_40775e
add esp 0xc
push [ rw-data ]
push 0xb
push 0x0
call sub_40775e
add esp 0x10
jmp r-xdata
push eax
lea ecx [ ebp - 0x18 ]
call sub_4025e6
mov eax [ esi ]
inc edi
mov al [ edi + eax ]
push [ ebp - 0xc ]
call ??3@YAXPAX@Z
push [ ebp - 0x18 ]
call ??3@YAXPAX@Z
pop ecx
sub_402a0f
push ebp
mov ebp esp
sub esp 0x34
push esi
push edi
lea ecx [ ebp - 0x10 ]
call sub_4013f8
mov eax [ ebp + 0x8 ]
mov esi [ eax ]
movzx edi [ esi ]
test di di
je r-xdata
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_401349
push [ ebp - 0x10 ]
call ??3@YAXPAX@Z
pop ecx
pop edi
pop esi
leave
retn
push ebx
lea ebx [ esi + 0x4 ]
push edi
lea ecx [ ebp - 0x10 ]
call sub_401410
inc esi
inc esi
inc ebx
inc ebx
movzx eax [ esi + 0x2 ]
cmp ax 0x78
jne r-xdata
cmp di 0x7e
jne r-xdata
pop ebx
movzx eax [ esi + 0x2 ]
cmp ax 0x58
jne r-xdata
push ebx
call sub_401a4b
test eax eax
pop ecx
jl r-xdata
push ebx
call sub_401a4b
test eax eax
pop ecx
mov [ ebp - 0x4 ] eax
jl r-xdata
push eax
lea ecx [ ebp - 0x28 ]
call sub_40256c
lea ecx [ ebp - 0x1c ]
call sub_4013f8
push 0x0
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x34 ]
push eax
call sub_4026d4
add esp 0xc
push eax
lea ecx [ ebp - 0x1c ]
call sub_401349
push [ ebp - 0x34 ]
call ??3@YAXPAX@Z
pop ecx
lea eax [ ebp - 0x1c ]
push eax
lea ecx [ ebp - 0x10 ]
call sub_4013c9
push [ ebp - 0x1c ]
add esi 0x8
add ebx 0x8
call ??3@YAXPAX@Z
push [ ebp - 0x28 ]
call ??3@YAXPAX@Z
pop ecx
pop ecx
jmp r-xdata
lea eax [ esi + 0x8 ]
push eax
call sub_401a4b
test eax eax
pop ecx
jl r-xdata
movzx edi [ esi ]
test di di
jne r-xdata
xor ecx ecx
mov ch [ ebp - 0x4 ]
or ecx eax
push ecx
lea ecx [ ebp - 0x10 ]
call sub_401410
add esi 0xc
add ebx 0xc
jmp r-xdata
sub_402b1f
push ebp
mov ebp esp
sub esp 0x25c
push ebx
push esi
push edi
push [ ebp + 0x8 ]
lea ecx [ ebp - 0xc ]
call sub_4024ba
push r--data
lea ecx [ ebp - 0xc ]
call sub_4024f3
mov edi [ ebp - 0xc ]
lea eax [ ebp - 0x25c ]
push eax
push edi
call [ FindFirstFileW@IAT ]
mov esi [ SetFileAttributesW@IAT ]
mov ebx eax
cmp ebx 0xffffffff
je r-xdata
push 0x0
push [ ebp + 0x8 ]
call esi
test eax eax
je r-xdata
push [ ebp + 0x8 ]
lea ecx [ ebp - 0xc ]
call sub_401310
push 0x5c
lea ecx [ ebp - 0xc ]
call sub_401410
lea eax [ ebp - 0x230 ]
push eax
lea ecx [ ebp - 0xc ]
call sub_4024f3
test [ ebp - 0x25c ] 0x10
mov edi [ ebp - 0xc ]
je r-xdata
push edi
call ??3@YAXPAX@Z
xor eax eax
push [ ebp + 0x8 ]
call [ RemoveDirectoryW@IAT ]
test eax eax
je r-xdata
push 0x0
push edi
call esi
test eax eax
je r-xdata
push r--data
lea eax [ ebp - 0x230 ]
push eax
call [ lstrcmpW@IAT ]
test eax eax
je r-xdata
push edi
call ??3@YAXPAX@Z
xor eax eax
inc eax
jmp r-xdata
push edi
call [ DeleteFileW@IAT ]
lea eax [ ebp - 0x25c ]
push eax
push ebx
call [ FindNextFileW@IAT ]
test eax eax
jne r-xdata
push r--data
lea eax [ ebp - 0x230 ]
push eax
call [ lstrcmpW@IAT ]
test eax eax
je r-xdata
pop ecx
pop edi
pop esi
pop ebx
leave
retn
push ebx
call [ FindClose@IAT ]
push edi
call sub_402b1f
pop ecx
jmp r-xdata
test eax eax
je r-xdata
sub_402c2c
cmp [ rw-data ] 0x0
je r-xdata
push esi
mov esi [ esp + 0x8 ]
push esi
call [ GetFileAttributesW@IAT ]
cmp eax 0xffffffff
jne r-xdata
xor eax eax
inc eax
retn
test al 0x10
jne r-xdata
xor eax eax
inc eax
pop esi
retn
push esi
call sub_402b1f
pop ecx
pop esi
retn
push 0x0
push esi
call [ SetFileAttributesW@IAT ]
test eax eax
je r-xdata
xor eax eax
pop esi
retn
push esi
call [ DeleteFileW@IAT ]
pop esi
retn
sub_402c76
push ebx
mov ebx [ esp + 0xc ]
mov eax [ ebx ]
and [ ebx + 0x4 ] 0x0
and [ eax ] 0x0
push esi
mov esi [ esp + 0xc ]
push edi
push 0x2
pop edi
jmp r-xdata
movzx eax [ esi ]
test ax ax
jne r-xdata
cmp ax 0x20
ja r-xdata
cmp [ esi ] 0x2c
jne r-xdata
add esi edi
movzx eax [ esi ]
cmp ax 0x7b
jne r-xdata
jmp r-xdata
test ax ax
je r-xdata
jmp r-xdata
add esi edi
mov eax esi
cmp ax 0x2c
je r-xdata
add esi edi
movzx eax [ esi ]
test ax ax
jne r-xdata
movzx eax ax
sub eax 0x7b
je r-xdata
lea eax [ esi + 0x2 ]
cmp [ eax ] 0x7b
jne r-xdata
sub eax edi
jne r-xdata
movzx eax [ esi ]
push eax
mov ecx ebx
call sub_401410
mov esi eax
lea eax [ esi + 0x2 ]
cmp [ eax ] 0x7d
je r-xdata
lea eax [ esi + 0x2 ]
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_402d00
mov ecx [ esp + 0x4 ]
push esi
push 0x5c
call sub_402529
mov ecx [ esp + 0x8 ]
push 0x2f
mov esi eax
call sub_402529
cmp eax esi
jle r-xdata
mov eax esi
pop esi
retn
mov esi eax
sub_402d23
push esi
push edi
mov edi [ esp + 0xc ]
mov ecx edi
call sub_4013f8
push [ esp + 0x10 ]
call [ GetWindowTextLengthW@IAT ]
mov esi eax
test esi esi
jle r-xdata
mov eax edi
pop edi
pop esi
retn
lea eax [ esi + 0x1 ]
push eax
push eax
mov ecx edi
call sub_40220b
push eax
push [ esp + 0x18 ]
call [ GetWindowTextW@IAT ]
mov eax [ edi ]
and [ eax + esi * 2 ] 0x0
mov [ edi + 0x4 ] esi
sub_402d66
push ebp
mov ebp esp
sub esp 0x74
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push 0x40
lea eax [ ebp - 0x74 ]
push eax
push esi
call [ GetClassNameA@IAT ]
test eax eax
je r-xdata
xor eax eax
push r--data
lea eax [ ebp - 0x74 ]
push eax
call [ lstrcmpiA@IAT ]
test eax eax
jne r-xdata
push 0xfffffff0
push esi
call [ GetWindowLongW@IAT ]
test al 0xe
jne r-xdata
lea eax [ ebp - 0x18 ]
push esi
push eax
call sub_402d23
push 0x5
push r--data
push [ ebp - 0x18 ]
call sub_401a8f
add esp 0x14
test eax eax
je r-xdata
push esi
call [ GetParent@IAT ]
xor edi edi
cmp eax edi
mov [ ebp - 0x4 ] eax
je r-xdata
push [ ebp - 0x18 ]
call ??3@YAXPAX@Z
pop ecx
push r--data
call [ LoadLibraryA@IAT ]
lea eax [ ebp - 0x34 ]
push eax
push esi
call sub_401bbc
pop ecx
pop ecx
push esi
call [ GetMenu@IAT ]
push 0x419
mov ebx eax
call [ SetThreadLocale@IAT ]
mov eax [ ebp - 0x28 ]
sub eax [ ebp - 0x30 ]
push edi
push edi
push ebx
push [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x2c ]
sub eax [ ebp - 0x34 ]
push eax
push [ ebp - 0x30 ]
push [ ebp - 0x34 ]
push 0x50000804
push r--data
push r--data
push edi
call [ CreateWindowExW@IAT ]
mov ebx eax
cmp ebx edi
je r-xdata
push esi
call [ DestroyWindow@IAT ]
mov esi [ SendMessageW@IAT ]
push edi
push 0x22
push 0x459
push ebx
call esi
push 0xf
call [ GetSysColor@IAT ]
push eax
push edi
push 0x443
push ebx
call esi
push 0xfde9
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x24 ]
push eax
mov [ ebp - 0x8 ] 0x3a8
mov [ ebp - 0xc ] edi
call sub_40271c
add esp 0xc
push [ ebp - 0x24 ]
lea eax [ ebp - 0xc ]
push eax
push 0x461
push ebx
call esi
push [ ebp - 0x24 ]
call ??3@YAXPAX@Z
push [ ebp - 0x18 ]
call ??3@YAXPAX@Z
pop ecx
pop ecx
mov eax ebx
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_402eb9
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ GetEnvironmentVariableW@IAT ]
push 0x1
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0xc ]
call edi
mov esi [ ebp + 0x8 ]
mov ecx esi
mov ebx eax
call sub_4013f8
lea eax [ ebx + 0x2 ]
push eax
mov ecx esi
mov [ ebp + 0x8 ] eax
call sub_40220b
inc ebx
push ebx
push [ ebp + 0x8 ]
mov ecx esi
call sub_40220b
push eax
push [ ebp + 0xc ]
call edi
mov edi [ esi ]
push edi
call sub_4010fe
and [ edi + eax * 2 ] 0x0
pop ecx
mov [ esi + 0x4 ] eax
pop edi
mov eax esi
pop esi
pop ebx
leave
retn
sub_402f15
push esi
push 0x18
mov esi ecx
call ??2@YAPAXI@Z
test eax eax
pop ecx
je r-xdata
xor eax eax
push [ esp + 0x8 ]
mov ecx eax
call sub_40260e
jmp r-xdata
push eax
mov ecx esi
call sub_40873f
pop esi
retn 0x4
sub_402f3f
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
cmp [ ebp + 0x8 ] eax
push edi
jle r-xdata
mov ecx [ ebp + 0xc ]
mov edi [ ecx + 0x4 ]
test edi edi
je r-xdata
mov [ ebp + 0x8 ] eax
pop edi
pop esi
pop ebp
retn 0x8
push edi
lea eax [ ebp + 0x8 ]
push eax
mov ecx esi
call sub_40268c
xor eax eax
test edi edi
jle r-xdata
add [ esi + 0x4 ] edi
mov eax [ esi + 0x4 ]
mov ecx [ ebp + 0x8 ]
add ecx ecx
push ebx
mov edx [ ebp + 0xc ]
mov edx [ edx ]
mov dx [ edx + eax * 2 ]
mov ebx [ esi ]
mov [ ecx + ebx ] dx
inc eax
inc ecx
inc ecx
cmp eax edi
jl r-xdata
pop ebx
sub_402f96
push [ esp + 0x4 ]
call sub_402c2c
test eax eax
pop ecx
jne r-xdata
xor eax eax
retn
call [ GetLastError@IAT ]
cmp eax 0x5
jne r-xdata
or eax 0xffffffff
retn
test [ rw-data ] 0x8
je r-xdata
xor eax eax
inc eax
retn
sub_402fc3
push ebp
mov ebp esp
sub esp 0x250
push esi
mov esi [ ebp + 0x8 ]
push esi
call [ GetFileAttributesW@IAT ]
cmp eax 0xffffffff
jne r-xdata
test al 0x10
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
push 0x10
call [ SetLastError@IAT ]
or eax 0xffffffff
jmp r-xdata
pop esi
leave
retn
cmp eax 0x2
jne r-xdata
push esi
call sub_402f96
pop ecx
jmp r-xdata
xor eax eax
inc eax
lea eax [ ebp - 0x250 ]
push eax
push esi
call [ FindFirstFileW@IAT ]
cmp eax 0xffffffff
je r-xdata
push eax
call [ FindClose@IAT ]
push [ ebp + 0xc ]
lea eax [ ebp - 0x23c ]
push eax
call [ CompareFileTime@IAT ]
test eax eax
jl r-xdata
sub_40303c
push ebp
mov ebp esp
sub esp 0x5c
and [ ebp - 0x4 ] 0x0
push ebx
push esi
push edi
lea ecx [ ebp - 0x20 ]
call sub_402554
mov ebx [ ebp + 0x8 ]
jmp r-xdata
lea esi [ ebp - 0x4 ]
mov edx ebx
call sub_40237e
test al al
jne r-xdata
lea ecx [ ebp - 0x5c ]
call sub_4013f8
lea ecx [ ebp - 0x50 ]
call sub_4013f8
mov ecx [ ebp - 0x4 ]
mov eax [ ebx ]
lea edi [ eax + ecx ]
lea eax [ ebp - 0x38 ]
push 0xfde9
push eax
lea esi [ ebp - 0xc ]
mov [ ebp - 0x8 ] ecx
call sub_40292c
pop ecx
push eax
lea eax [ ebp - 0x2c ]
push eax
call sub_4026d4
add esp 0xc
push eax
lea ecx [ ebp - 0x5c ]
call sub_401349
push [ ebp - 0x2c ]
call ??3@YAXPAX@Z
push [ ebp - 0x38 ]
call ??3@YAXPAX@Z
mov eax [ ebp - 0xc ]
test eax eax
pop ecx
pop ecx
je r-xdata
jmp r-xdata
push [ ebp + 0x10 ]
push [ ebp - 0x4 ]
add [ ebp - 0x4 ] eax
lea esi [ ebp - 0x4 ]
mov edx ebx
call sub_40237e
test al al
je r-xdata
push [ ebp - 0x20 ]
call ??3@YAXPAX@Z
mov al 0x1
pop ecx
pop edi
pop esi
pop ebx
leave
retn
push [ ebp + 0x10 ]
push [ ebp - 0x8 ]
jmp r-xdata
mov eax [ ebx ]
mov ecx [ ebp - 0x4 ]
cmp [ ecx + eax ] 0x3d
jne r-xdata
push ebx
call sub_402969
add esp 0xc
lea ecx [ ebp - 0x5c ]
mov bl al
call sub_401a79
push [ ebp - 0x20 ]
call ??3@YAXPAX@Z
mov al bl
jmp r-xdata
inc [ ebp - 0x4 ]
call sub_40237e
test al al
je r-xdata
mov eax [ ebx ]
mov esi [ ebp - 0x4 ]
cmp [ esi + eax ] 0x22
jne r-xdata
mov eax [ ebp - 0x20 ]
mov edi [ strncmp@IAT ]
inc esi
and [ ebp - 0x1c ] 0x0
mov [ ebp - 0x4 ] esi
mov [ eax ] 0x0
jmp r-xdata
mov eax [ ebx ]
push 0x5
add eax esi
push r--data
push eax
call edi
add esp 0xc
test eax eax
jne r-xdata
mov eax [ ebx ]
push 0x5
add eax esi
push r--data
push eax
call edi
add esp 0xc
test eax eax
jne r-xdata
jmp r-xdata
cmp esi [ ebx + 0x4 ]
jge r-xdata
mov eax [ ebx ]
mov cl [ eax + esi ]
test cl cl
jne r-xdata
mov eax [ ebx ]
mov cl [ eax + esi ]
inc esi
cmp cl 0x22
mov [ ebp - 0x14 ] cl
mov [ ebp - 0x4 ] esi
je r-xdata
cmp cl 0x22
je r-xdata
mov eax [ ebx ]
cmp [ esi + eax ] 0x0
je r-xdata
push 0xfde9
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x44 ]
push eax
call sub_4026d4
add esp 0xc
push eax
lea ecx [ ebp - 0x50 ]
call sub_401349
push [ ebp - 0x44 ]
call ??3@YAXPAX@Z
lea eax [ ebp - 0x50 ]
push eax
call sub_402a0f
mov esi [ lstrcmpW@IAT ]
pop ecx
pop ecx
push r--data
push [ ebp - 0x5c ]
call esi
test eax eax
jne r-xdata
cmp cl 0x5c
jne r-xdata
cmp cl 0x5c
jne r-xdata
inc esi
mov [ ebp - 0x4 ] esi
cmp [ ebp + 0x10 ] 0x0
je r-xdata
push eax
push 0x3d
lea ecx [ ebp - 0x50 ]
call sub_40262f
test eax eax
jle r-xdata
push [ ebp - 0x14 ]
mov al [ eax + esi ]
inc esi
cmp al 0x22
mov [ ebp - 0x10 ] al
mov [ ebp - 0x4 ] esi
je r-xdata
movzx eax [ eax + esi ]
inc esi
push eax
lea ecx [ ebp - 0x20 ]
mov [ ebp - 0x4 ] esi
call sub_4025e6
cmp [ eax + esi + 0x1 ] 0x22
jne r-xdata
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x5c ]
push eax
call sub_402f15
push 0x0
push [ ebp - 0x5c ]
push [ ebp + 0xc ]
call sub_4023b1
mov edi eax
add esp 0xc
test edi edi
je r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
push 0x22
jmp r-xdata
cmp al cl
je r-xdata
inc esi
push r--data
push [ ebp - 0x5c ]
call esi
test eax eax
je r-xdata
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x5c ]
push eax
call sub_402f15
lea ecx [ ebp - 0x5c ]
call sub_401a79
lea ecx [ ebp - 0x20 ]
push 0x5c
jmp r-xdata
cmp al 0x6e
je r-xdata
push r--data
push [ ebp - 0x5c ]
call esi
test eax eax
je r-xdata
push 0xa
jmp r-xdata
cmp al 0x74
lea ecx [ ebp - 0x20 ]
je r-xdata
push [ ebp - 0x50 ]
lea ecx [ edi + 0xc ]
call sub_401310
jmp r-xdata
push 0x9
jmp r-xdata
push 0x5c
call sub_4025e6
push [ ebp - 0x10 ]
jmp r-xdata
lea ecx [ ebp - 0x5c ]
call sub_401a79
call sub_4025e6
sub_4032fd
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
push edi
call [ lstrlenW@IAT ]
push edi
lea ecx [ ebp - 0x18 ]
mov ebx eax
mov [ ebp - 0x4 ] eax
call sub_4024ba
xor esi esi
cmp [ ebp - 0x10 ] esi
jg r-xdata
movzx eax [ edi + ebx * 2 - 0x2 ]
cmp ax 0x5c
mov edi [ ebp - 0x18 ]
je r-xdata
push esi
lea ecx [ ebp - 0x18 ]
call sub_401112
mov [ edi + ebx * 2 - 0x2 ] si
dec ebx
mov [ ebp - 0x4 ] ebx
cmp ax 0x2f
jne r-xdata
push edi
call sub_40197a
test eax eax
pop ecx
je r-xdata
mov esi ebx
jmp r-xdata
test esi esi
jg r-xdata
lea eax [ ebp - 0xc ]
push eax
call [ GetSystemTimeAsFileTime@IAT ]
push edi
call [ GetFileAttributesW@IAT ]
test al 0x10
jne r-xdata
movzx eax [ edi + esi * 2 ]
cmp ax 0x2f
je r-xdata
test esi esi
je r-xdata
push edi
call sub_40197a
test eax eax
pop ecx
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
push edi
call sub_402fc3
test eax eax
pop ecx
pop ecx
je r-xdata
cmp ax 0x5c
je r-xdata
cmp ebx 0x2
mov ecx [ ebp + 0x8 ]
jne r-xdata
and [ edi + esi * 2 ] 0x0
cmp esi ebx
jge r-xdata
push edi
push 0xc
push 0x1
call sub_40775e
add esp 0xc
jmp r-xdata
xor esi esi
jmp r-xdata
dec esi
push ecx
push 0xc
push 0x1
call sub_40775e
push edi
call ??3@YAXPAX@Z
add esp 0x10
xor eax eax
mov ax [ ecx ]
or ax 0x20
cmp ax 0x61
jb r-xdata
push edi
call ??3@YAXPAX@Z
xor eax eax
pop ecx
inc eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
sub eax esi
inc eax
push eax
mov eax [ ebp + 0x8 ]
lea eax [ eax + esi * 2 ]
push eax
lea ebx [ edi + esi * 2 ]
push ebx
call memcpy
xor ecx ecx
add esp 0xc
cmp [ ebx ] cx
je r-xdata
push edi
call ??3@YAXPAX@Z
pop ecx
mov eax esi
jmp r-xdata
cmp ax 0x7a
ja r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp [ edi + esi * 2 ] cx
jne r-xdata
jmp r-xdata
cmp [ ecx + 0x2 ] 0x3a
jne r-xdata
movzx eax [ edi + esi * 2 ]
cmp ax 0x5c
je r-xdata
push edi
mov [ edi + esi * 2 ] cx
call sub_40197a
test eax eax
pop ecx
je r-xdata
inc esi
xor esi esi
inc esi
cmp ax 0x2f
je r-xdata
cmp esi [ ebp - 0x4 ]
jl r-xdata
sub_40346a
push ebp
mov ebp esp
sub esp 0x27c
push ebx
mov ebx [ _wtol@IAT ]
push esi
mov esi [ ebp + 0x8 ]
movzx eax [ esi ]
cmp ax 0x30
jb r-xdata
movzx eax ax
push 0x20
pop ecx
or eax ecx
sub eax 0x64
je r-xdata
cmp ax 0x39
ja r-xdata
mov ax [ esi + 0x2 ]
or ax cx
sub ax 0x75
neg ax
sbb eax eax
and eax 0x9
add eax 0x10
sub eax 0xc
je r-xdata
push esi
call ebx
pop ecx
jmp r-xdata
movzx ecx [ esi ]
cmp cx 0x2c
jne r-xdata
mov ax [ esi + 0x2 ]
or ax cx
sub ax 0x75
neg ax
sbb eax eax
and eax 0x15
inc eax
inc eax
jmp r-xdata
sub eax 0x3
je r-xdata
push edi
xor edi edi
jmp r-xdata
cmp cx di
je r-xdata
push edi
push eax
lea eax [ ebp - 0x27c ]
push eax
push edi
call [ SHGetSpecialFolderPathW@IAT ]
test eax eax
je r-xdata
mov ax [ esi + 0x2 ]
or ax cx
sub ax 0x75
neg ax
sbb eax eax
and eax 0xb
add eax 0xb
jmp r-xdata
dec eax
jne r-xdata
pop edi
inc esi
inc esi
lea eax [ ebp - 0x27c ]
push eax
lea ecx [ ebp - 0x1c ]
call sub_4024ba
lea ecx [ ebp - 0x64 ]
call sub_4013f8
lea ecx [ ebp - 0x34 ]
call sub_4013f8
lea ecx [ ebp - 0x4c ]
call sub_4013f8
lea ecx [ ebp - 0x28 ]
call sub_4013f8
lea ecx [ ebp - 0x10 ]
call sub_4013f8
lea ecx [ ebp - 0x40 ]
call sub_4013f8
lea ecx [ ebp - 0x58 ]
call sub_4013f8
lea ecx [ ebp - 0x70 ]
call sub_4013f8
lea eax [ ebp - 0x64 ]
push eax
push esi
call sub_402c76
cmp [ ebp - 0x60 ] edi
pop ecx
pop ecx
jne r-xdata
pop esi
xor eax eax
pop ebx
leave
retn
mov ax [ esi + 0x2 ]
or ax cx
sub ax 0x75
neg ax
sbb eax eax
and eax 0x11
add eax 0x7
jmp r-xdata
lea ecx [ ebp - 0x34 ]
push ecx
push eax
call sub_402c76
lea ecx [ ebp - 0x4c ]
push ecx
push eax
call sub_402c76
lea ecx [ ebp - 0x28 ]
push ecx
push eax
call sub_402c76
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_402c76
lea ecx [ ebp - 0x40 ]
push ecx
push eax
call sub_402c76
lea ecx [ ebp - 0x58 ]
push ecx
push eax
call sub_402c76
lea ecx [ ebp - 0x70 ]
push ecx
push eax
call sub_402c76
push [ ebp - 0x70 ]
call ebx
mov esi [ ebp - 0x64 ]
add esp 0x3c
cmp [ ebp - 0xc ] edi
mov ebx eax
jne r-xdata
push [ ebp - 0x70 ]
call ??3@YAXPAX@Z
push [ ebp - 0x58 ]
call ??3@YAXPAX@Z
push [ ebp - 0x40 ]
call ??3@YAXPAX@Z
push [ ebp - 0x10 ]
call ??3@YAXPAX@Z
push [ ebp - 0x28 ]
call ??3@YAXPAX@Z
push [ ebp - 0x4c ]
call ??3@YAXPAX@Z
push [ ebp - 0x34 ]
call ??3@YAXPAX@Z
push [ ebp - 0x64 ]
jmp r-xdata
push 0x5c
lea ecx [ ebp - 0x1c ]
call sub_401410
cmp [ ebp - 0x48 ] edi
je r-xdata
lea eax [ ebp - 0x64 ]
push eax
call sub_402d00
pop ecx
lea eax [ esi + eax * 2 + 0x2 ]
push eax
lea ecx [ ebp - 0x10 ]
call sub_401310
push 0x2e
lea ecx [ ebp - 0x10 ]
call sub_402529
cmp eax edi
jl r-xdata
call ??3@YAXPAX@Z
push [ ebp - 0x1c ]
call ??3@YAXPAX@Z
add esp 0x24
push [ ebp - 0x1c ]
call sub_4032fd
test eax eax
pop ecx
je r-xdata
lea eax [ ebp - 0x4c ]
push eax
lea ecx [ ebp - 0x1c ]
call sub_4013c9
push 0x5c
lea ecx [ ebp - 0x1c ]
call sub_401410
mov ecx [ ebp - 0x10 ]
mov [ ecx + eax * 2 ] di
mov [ ebp - 0xc ] eax
push [ ebp - 0x70 ]
call ??3@YAXPAX@Z
push [ ebp - 0x58 ]
call ??3@YAXPAX@Z
push [ ebp - 0x40 ]
call ??3@YAXPAX@Z
push [ ebp - 0x10 ]
call ??3@YAXPAX@Z
push [ ebp - 0x28 ]
call ??3@YAXPAX@Z
push [ ebp - 0x4c ]
call ??3@YAXPAX@Z
push [ ebp - 0x34 ]
call ??3@YAXPAX@Z
push esi
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x1c ]
call sub_4013c9
push r--data
lea ecx [ ebp - 0x1c ]
call sub_4024f3
lea eax [ ebp + 0x8 ]
push eax
push r--data
push 0x1
push edi
push r--data
mov [ ebp + 0x8 ] edi
call [ CoCreateInstance@IAT ]
test eax eax
jl r-xdata
mov eax [ ebp + 0x8 ]
push esi
mov [ ebp - 0x4 ] edi
mov ecx [ eax ]
push eax
call [ ecx + 0x50 ]
cmp [ ebp - 0x24 ] edi
je r-xdata
cmp [ ebp - 0x30 ] edi
je r-xdata
mov eax [ ebp + 0x8 ]
push [ ebp - 0x28 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x1c ]
cmp [ ebp - 0x3c ] edi
je r-xdata
mov eax [ ebp + 0x8 ]
push [ ebp - 0x34 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x2c ]
cmp [ ebp - 0x54 ] edi
je r-xdata
mov eax [ ebp + 0x8 ]
push [ ebp - 0x40 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x24 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
lea edx [ ebp - 0x4 ]
push edx
push r--data
push eax
call [ ecx ]
test eax eax
jl r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
push ebx
push [ ebp - 0x58 ]
push eax
call [ ecx + 0x44 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
push 0x1
push [ ebp - 0x1c ]
push eax
call [ ecx + 0x18 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
sub_4037ae
push ebp
mov ebp esp
push ecx
push ecx
push ebx
mov ebx [ ebp + 0x8 ]
cmp [ ebx + 0x4 ] 0x0
push esi
mov esi ecx
jne r-xdata
push edi
mov edi [ ebp + 0xc ]
push edi
push ebx
call sub_4026bb
test al al
pop ecx
pop ecx
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x4 ] eax
mov eax [ edi + 0x4 ]
xor edi edi
cmp [ esi + 0x4 ] edi
mov [ ebp - 0x8 ] eax
mov [ ebp + 0x8 ] edi
jle r-xdata
xor eax eax
jmp r-xdata
pop esi
pop ebx
leave
retn 0x8
mov eax [ ebp + 0x8 ]
push edi
push ebx
mov ecx esi
call sub_402223
mov edi eax
test edi edi
jl r-xdata
pop edi
push [ ebp - 0x4 ]
mov ecx esi
push edi
call sub_402657
push [ ebp + 0xc ]
mov ecx esi
push edi
call sub_402f3f
add edi [ ebp - 0x8 ]
inc [ ebp + 0x8 ]
cmp edi [ esi + 0x4 ]
jl r-xdata
sub_403829
push ebp
mov ebp esp
sub esp 0x18
lea ecx [ ebp - 0xc ]
call sub_4013f8
push [ ebp + 0xc ]
lea ecx [ ebp - 0xc ]
call sub_401349
push r--data
lea ecx [ ebp - 0xc ]
call sub_4024f3
push r--data
lea ecx [ ebp - 0x18 ]
call sub_4024ba
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x18 ]
push eax
call sub_4037ae
push [ ebp - 0x18 ]
call ??3@YAXPAX@Z
pop ecx
push [ ebp + 0xc ]
lea ecx [ ebp - 0xc ]
call sub_401349
push r--data
lea ecx [ ebp - 0xc ]
call sub_4024f3
push r--data
lea ecx [ ebp - 0x18 ]
call sub_4024ba
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x18 ]
push eax
call sub_4037ae
push [ ebp - 0x18 ]
call ??3@YAXPAX@Z
lea ecx [ ebp - 0x18 ]
mov [ esp ] r--data
call sub_4024ba
push [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x18 ]
push eax
call sub_4037ae
push [ ebp - 0x18 ]
call ??3@YAXPAX@Z
push [ ebp - 0xc ]
call ??3@YAXPAX@Z
pop ecx
pop ecx
leave
retn
sub_4038e4
push ebp
mov ebp esp
sub esp 0x18
lea ecx [ ebp - 0xc ]
call sub_4013f8
push [ ebp + 0xc ]
lea ecx [ ebp - 0xc ]
call sub_401349
push r--data
lea ecx [ ebp - 0xc ]
call sub_4024f3
push r--data
lea ecx [ ebp - 0x18 ]
call sub_4024ba
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x18 ]
push eax
call sub_4037ae
push [ ebp - 0x18 ]
call ??3@YAXPAX@Z
pop ecx
push [ ebp + 0xc ]
lea ecx [ ebp - 0xc ]
call sub_401349
push r--data
lea ecx [ ebp - 0xc ]
call sub_4024f3
push r--data
lea ecx [ ebp - 0x18 ]
call sub_4024ba
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x18 ]
push eax
call sub_4037ae
push [ ebp - 0x18 ]
call ??3@YAXPAX@Z
lea ecx [ ebp - 0x18 ]
mov [ esp ] r--data
call sub_4024ba
push [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x18 ]
push eax
call sub_4037ae
push [ ebp - 0x18 ]
call ??3@YAXPAX@Z
push [ ebp - 0xc ]
call ??3@YAXPAX@Z
pop ecx
pop ecx
leave
retn
sub_40399f
push ebp
mov ebp esp
sub esp 0x18
lea ecx [ ebp - 0xc ]
call sub_4013f8
push [ ebp + 0xc ]
lea ecx [ ebp - 0xc ]
call sub_401349
push r--data
lea ecx [ ebp - 0xc ]
call sub_4024f3
push r--data
lea ecx [ ebp - 0x18 ]
call sub_4024ba
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x18 ]
push eax
call sub_4037ae
push [ ebp - 0x18 ]
call ??3@YAXPAX@Z
pop ecx
push [ ebp + 0xc ]
lea ecx [ ebp - 0xc ]
call sub_401349
push r--data
lea ecx [ ebp - 0xc ]
call sub_4024f3
push r--data
lea ecx [ ebp - 0x18 ]
call sub_4024ba
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x18 ]
push eax
call sub_4037ae
push [ ebp - 0x18 ]
call ??3@YAXPAX@Z
lea ecx [ ebp - 0x18 ]
mov [ esp ] r--data
call sub_4024ba
push [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x18 ]
push eax
call sub_4037ae
push [ ebp - 0x18 ]
call ??3@YAXPAX@Z
push [ ebp - 0xc ]
call ??3@YAXPAX@Z
pop ecx
pop ecx
leave
retn
sub_403a5a
push ebp
mov ebp esp
sub esp 0x24
push esi
push [ ebp + 0x8 ]
lea eax [ ebp - 0xc ]
push eax
call sub_402d23
lea eax [ ebp - 0xc ]
push eax
call sub_403b30
add esp 0xc
push r--data
lea ecx [ ebp - 0x24 ]
call sub_4024ba
push r--data
lea ecx [ ebp - 0x18 ]
call sub_4024ba
lea eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
lea ecx [ ebp - 0xc ]
call sub_4037ae
push [ ebp - 0x18 ]
call ??3@YAXPAX@Z
push [ ebp - 0x24 ]
call ??3@YAXPAX@Z
pop ecx
pop ecx
push [ ebp - 0xc ]
push [ ebp + 0x8 ]
call [ SetWindowTextW@IAT ]
push [ ebp - 0xc ]
mov esi eax
call ??3@YAXPAX@Z
pop ecx
mov eax esi
pop esi
leave
retn
sub_403b02
push esi
mov esi [ esp + 0x8 ]
push esi
call sub_40276d
mov [ esp ] rw-data
push esi
call sub_4038e4
push rw-data
push esi
call sub_40399f
push esi
call sub_40276d
add esp 0x14
pop esi
retn
sub_403b53
push ebx
push esi
mov esi [ lstrlenW@IAT ]
push edi
push [ esp + 0x14 ]
call esi
mov ebx [ esp + 0x10 ]
push ebx
mov edi eax
call esi
cmp eax edi
jl r-xdata
xor eax eax
push edi
push [ esp + 0x18 ]
push ebx
call [ _wcsnicmp@IAT ]
add esp 0xc
test eax eax
jne r-xdata
lea eax [ ebx + edi * 2 ]
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_403b8d
push [ esp + 0x8 ]
push [ esp + 0x8 ]
call sub_403b53
test eax eax
pop ecx
pop ecx
je r-xdata
xor eax eax
retn
mov ecx [ esp + 0xc ]
dec ecx
je r-xdata
movzx ecx [ eax ]
cmp cx 0x30
jb r-xdata
dec ecx
je r-xdata
cmp cx 0x39
ja r-xdata
movzx ecx [ eax ]
cmp cx 0x30
jb r-xdata
dec ecx
jne r-xdata
cmp [ eax + 0x2 ] 0x3a
jne r-xdata
cmp cx 0x39
ja r-xdata
cmp [ eax ] 0x3a
jne r-xdata
cmp [ eax + 0x2 ] 0x3a
jne r-xdata
add eax 0x4
retn
cmp cx 0x39
ja r-xdata
add eax 0x2
retn
movzx ecx [ eax ]
cmp cx 0x30
jb r-xdata
inc eax
inc eax
movzx ecx [ eax ]
cmp cx 0x30
jae r-xdata
cmp cx 0x61
jb r-xdata
cmp cx 0x39
jbe r-xdata
cmp cx 0x41
jb r-xdata
cmp cx 0x7a
jbe r-xdata
cmp cx 0x5a
jbe r-xdata
sub_403c22
push esi
mov esi [ esp + 0x8 ]
push edi
mov edi [ esp + 0x10 ]
cmp ax 0x2b
je r-xdata
cmp ax 0x39
jbe r-xdata
push esi
call [ _wtol@IAT ]
pop ecx
cmp ax 0x2d
jne r-xdata
inc esi
inc esi
jmp r-xdata
cmp cx 0x2b
jne r-xdata
pop edi
mov eax esi
pop esi
retn
movzx ecx [ esi ]
cmp cx 0x2d
je r-xdata
movzx ecx [ esi ]
cmp cx 0x30
jae r-xdata
cmp cx 0x39
ja r-xdata
test eax eax
jle r-xdata
inc esi
inc esi
dec eax
and [ edi ] eax
jmp r-xdata
or [ edi ] eax
jmp r-xdata
movzx eax [ esi ]
cmp ax 0x30
jb r-xdata
sub_403c85
cmp [ rw-data ] 0xffffffff
mov ecx [ esp + 0x4 ]
je r-xdata
and [ rw-data ] 0x0
movzx eax [ ecx ]
cmp ax 0x2b
je r-xdata
push rw-data
push ecx
call sub_403c22
pop ecx
pop ecx
retn
cmp ax 0x2d
je r-xdata
sub_403cb6
mov ecx [ esp + 0x4 ]
movzx eax [ ecx ]
cmp ax 0x2b
je r-xdata
push rw-data
push ecx
call sub_403c22
pop ecx
pop ecx
retn
cmp ax 0x2d
je r-xdata
and [ rw-data ] 0x0
sub_403cde
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
or eax [ rw-data ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
movzx ecx [ eax ]
cmp cx 0x2b
je r-xdata
lea ecx [ ebp - 0x4 ]
push ecx
push eax
call sub_403c22
pop ecx
pop ecx
mov ecx [ ebp - 0x4 ]
mov edx ecx
and edx 0x7
cmp edx 0x2
jg r-xdata
cmp cx 0x2d
je r-xdata
and ecx 0xfffffff8
mov [ rw-data ] ecx
leave
retn
mov [ rw-data ] edx
and [ ebp - 0x4 ] 0x0
sub_403d30
push ebx
push esi
mov esi [ esp + 0xc ]
movzx eax [ esi ]
cmp ax 0x2d
jne r-xdata
cmp ax 0x2f
jne r-xdata
lea eax [ esi + 0x2 ]
cmp [ eax ] 0x2d
jne r-xdata
xor eax eax
push edi
push [ esp + 0x14 ]
mov edi [ lstrlenW@IAT ]
call edi
push [ esp + 0x14 ]
mov ebx eax
call edi
push eax
push [ esp + 0x18 ]
lea eax [ esi + 0x2 ]
push eax
call sub_401a8f
add esp 0xc
test eax eax
pop edi
jne r-xdata
movzx eax [ esi ]
cmp ax 0x2d
je r-xdata
mov esi eax
lea eax [ esi + ebx * 2 + 0x2 ]
movzx ecx [ eax ]
cmp cx 0x20
jbe r-xdata
pop esi
pop ebx
retn
cmp cx 0x3a
je r-xdata
sub_403e29
push esi
mov esi ecx
and [ esi ] 0x0
and [ esi + 0x4 ] 0x0
and [ esi + 0x8 ] 0x0
push 0x1
call sub_401112
mov eax [ esi ]
mov cx [ esp + 0x8 ]
mov [ eax ] cx
mov eax [ esi ]
and [ eax + 0x2 ] 0x0
mov [ esi + 0x4 ] 0x1
mov eax esi
pop esi
retn 0x4
sub_403e5c
push ebx
mov ebx [ esp + 0x8 ]
push esi
mov esi ecx
mov ecx [ esi ]
xor eax eax
mov [ esi + 0x4 ] eax
push edi
mov [ ecx ] al
xor edi edi
cmp [ ebx ] al
je r-xdata
push edi
mov ecx esi
call sub_402284
push ebx
push [ esi ]
call sub_402342
pop ecx
pop ecx
mov [ esi + 0x4 ] edi
pop edi
mov eax esi
pop esi
pop ebx
retn 0x4
inc edi
cmp [ edi + ebx ] al
jne r-xdata
sub_403e97
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
cmp edi esi
je r-xdata
pop edi
mov eax esi
pop esi
retn 0x4
and [ esi + 0x4 ] 0x0
mov eax [ esi ]
mov [ eax ] 0x0
push [ edi + 0x4 ]
call sub_402284
push [ edi ]
push [ esi ]
call sub_402342
mov eax [ edi + 0x4 ]
pop ecx
pop ecx
mov [ esi + 0x4 ] eax
sub_403ecc
push ebx
mov ebx [ esp + 0x8 ]
push esi
push edi
xor edi edi
cmp [ ebx ] 0x0
mov esi ecx
je r-xdata
push edi
call sub_4022d0
mov eax [ esi + 0x4 ]
add eax [ esi ]
push ebx
push eax
call sub_402342
add [ esi + 0x4 ] edi
pop ecx
pop ecx
pop edi
mov eax esi
pop esi
pop ebx
retn 0x4
inc edi
cmp [ edi + ebx ] 0x0
jne r-xdata
sub_403f5d
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov ecx esi
call sub_4013f8
push 0x2
mov ecx esi
call sub_40220b
mov edi [ GetTempPathW@IAT ]
push eax
push 0x1
call edi
mov ecx [ esi ]
and [ ecx ] 0x0
and [ esi + 0x4 ] 0x0
test eax eax
jbe r-xdata
mov eax [ esi + 0x4 ]
and [ ebp + 0x8 ] 0x0
lea ecx [ eax + 0xf ]
mov [ ebp - 0x4 ] ecx
lea ebx [ eax + eax ]
lea ebx [ eax + 0x1 ]
push ebx
mov ecx esi
call sub_40220b
push eax
push ebx
call edi
mov edi [ esi ]
push edi
call sub_4010fe
and [ edi + eax * 2 ] 0x0
pop ecx
mov [ esi + 0x4 ] eax
pop edi
mov eax esi
pop esi
pop ebx
leave
retn
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0xfff
jl r-xdata
push [ ebp - 0x4 ]
mov ecx esi
call sub_40220b
push [ ebp + 0x8 ]
add eax ebx
push [ ebp + 0xc ]
push eax
call [ wsprintfW@IAT ]
mov edi [ esi ]
push edi
call sub_4010fe
and [ edi + eax * 2 ] 0x0
add esp 0x10
push [ esi ]
mov [ esi + 0x4 ] eax
call [ GetFileAttributesW@IAT ]
cmp eax 0xffffffff
je r-xdata
sub_40400c
push ebp
mov ebp esp
sub esp 0xc
push esi
xor esi esi
cmp [ rw-data ] esi
jle r-xdata
pop esi
leave
retn
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
add eax 0xc
push eax
lea ecx [ ebp - 0xc ]
call sub_4012de
lea eax [ ebp - 0xc ]
push eax
call sub_403b30
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
pop ecx
push [ ebp - 0xc ]
push [ eax ]
call [ SetEnvironmentVariableW@IAT ]
push [ ebp - 0xc ]
call ??3@YAXPAX@Z
inc esi
cmp esi [ rw-data ]
pop ecx
jl r-xdata
sub_404063
push esi
mov esi [ esp + 0xc ]
mov eax [ esi ]
and [ esi + 0x4 ] 0x0
and [ eax ] 0x0
push 0x0
push r--data
push [ esp + 0x10 ]
call sub_4023f9
add esp 0xc
test eax eax
je r-xdata
pop esi
retn
push eax
mov ecx esi
call sub_401310
push esi
call sub_403b30
mov eax [ esi + 0x4 ]
pop ecx
mov ecx [ esi ]
movzx eax [ ecx + eax * 2 - 0x2 ]
cmp ax 0x5c
je r-xdata
cmp ax 0x2f
je r-xdata
push 0x5c
mov ecx esi
call sub_401410
sub_4040b9
push esi
mov esi [ esp + 0x8 ]
movzx eax [ esi ]
cmp ax 0x22
jne r-xdata
test ax ax
je r-xdata
inc esi
inc esi
movzx eax [ esi ]
test ax ax
je r-xdata
mov eax esi
pop esi
retn
cmp ax 0x20
jbe r-xdata
cmp ax 0x22
je r-xdata
movzx eax [ esi ]
test ax ax
jne r-xdata
mov ecx [ esp + 0xc ]
push eax
call sub_401410
inc esi
inc esi
movzx eax [ esi ]
test ax ax
jne r-xdata
cmp [ esi ] 0x0
je r-xdata
mov ecx [ esp + 0xc ]
push eax
call sub_401410
inc esi
inc esi
movzx eax [ esi ]
test ax ax
jne r-xdata
cmp ax 0x20
ja r-xdata
jmp r-xdata
jmp r-xdata
inc esi
inc esi
sub_404128
push ebp
mov ebp esp
sub esp 0x18
cmp [ rw-data ] 0x0
push ebx
push esi
push edi
mov esi rw-data
je r-xdata
xor eax eax
push [ esi ]
call [ lstrlenW@IAT ]
mov ebx [ ebp + 0x8 ]
mov edi eax
push edi
push [ esi ]
push ebx
call sub_401a8f
add esp 0xc
test eax eax
jne r-xdata
add esi 0x4
cmp [ esi ] 0x0
jne r-xdata
cmp [ ebx + edi * 2 ] 0x3d
je r-xdata
push ebx
lea ecx [ ebp - 0xc ]
call sub_4024ba
mov ecx [ ebp - 0xc ]
xor edi edi
xor bl bl
cmp [ ecx ] di
mov eax ecx
je r-xdata
sub eax ecx
sar eax 0x1
lea esi [ eax + eax ]
mov [ esi + ecx ] di
mov [ ebp - 0x8 ] eax
push 0xfde9
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x18 ]
push eax
call sub_40271c
push 0x1
push [ ebp + 0xc ]
lea eax [ ebp - 0x18 ]
push eax
call sub_40303c
add esp 0x18
test al al
push [ ebp - 0x18 ]
jne r-xdata
movzx esi [ eax ]
cmp si 0x20
ja r-xdata
call ??3@YAXPAX@Z
push [ ebp - 0xc ]
call ??3@YAXPAX@Z
mov eax [ ebp + 0x8 ]
pop ecx
pop ecx
add eax esi
jmp r-xdata
call ??3@YAXPAX@Z
push [ ebp - 0xc ]
call ??3@YAXPAX@Z
pop ecx
xor eax eax
pop ecx
inc eax
jmp r-xdata
cmp si 0x22
jne r-xdata
test bl bl
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp si 0x5c
jne r-xdata
test bl bl
sete bl
jmp r-xdata
inc eax
inc eax
cmp [ eax ] di
jne r-xdata
lea edx [ eax + 0x2 ]
cmp [ edx ] 0x22
jne r-xdata
mov eax edx
sub_404223
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
xor ebx ebx
push ebx
push r--data
push esi
call sub_4023f9
add esp 0xc
cmp eax ebx
mov [ ebp - 0x8 ] eax
je r-xdata
push ebx
push r--data
push esi
call sub_4023f9
add esp 0xc
cmp eax ebx
je r-xdata
mov edi rw-data
push eax
mov ecx edi
call sub_401310
push 0x4
call sub_401fb6
pop ecx
push eax
mov ecx edi
call sub_4024f3
mov eax [ rw-data ]
push [ ebp - 0x8 ]
mov edi rw-data
mov ecx edi
mov [ rw-data ] eax
call sub_401310
push 0x29
call sub_401fb6
pop ecx
push eax
mov ecx edi
call sub_4024f3
mov eax [ rw-data ]
mov [ rw-data ] eax
mov eax [ ebp - 0x8 ]
mov [ rw-data ] eax
push ebx
push r--data
push esi
call sub_4023f9
add esp 0xc
cmp eax ebx
je r-xdata
mov [ rw-data ] eax
push ebx
push r--data
push esi
call sub_4023f9
add esp 0xc
cmp eax ebx
je r-xdata
mov [ rw-data ] eax
push ebx
push r--data
push esi
call sub_4023f9
add esp 0xc
cmp eax ebx
je r-xdata
mov [ rw-data ] eax
push ebx
push r--data
push esi
call sub_4023f9
add esp 0xc
cmp eax ebx
je r-xdata
push r--data
push eax
call [ lstrcmpiW@IAT ]
test eax eax
jne r-xdata
push ebx
push r--data
push esi
call sub_4023f9
add esp 0xc
cmp eax ebx
je r-xdata
movzx eax [ eax ]
cmp ax 0x30
jb r-xdata
mov [ rw-data ] 0x2
lea eax [ ebp - 0x4 ]
push eax
mov edi r--data
push edi
push esi
mov [ ebp - 0x4 ] ebx
call sub_4023f9
add esp 0xc
jmp r-xdata
push eax
call sub_403cde
pop ecx
cmp ax 0x32
ja r-xdata
cmp eax ebx
jne r-xdata
movzx eax ax
sub eax 0x30
mov [ rw-data ] eax
inc [ ebp - 0x4 ]
push eax
call sub_403c85
lea eax [ ebp - 0x4 ]
push eax
push edi
push esi
call sub_4023f9
add esp 0x10
lea eax [ ebp - 0x4 ]
push eax
mov edi r--data
push edi
push esi
mov [ ebp - 0x4 ] ebx
call sub_4023f9
add esp 0xc
jmp r-xdata
cmp eax ebx
jne r-xdata
inc [ ebp - 0x4 ]
push eax
call sub_403cb6
lea eax [ ebp - 0x4 ]
push eax
push edi
push esi
call sub_4023f9
add esp 0x10
push ebx
push r--data
push esi
call sub_4023f9
push ebx
push r--data
push esi
mov [ rw-data ] eax
call sub_4023f9
push ebx
push r--data
push esi
mov [ rw-data ] eax
call sub_4023f9
mov edi [ _wtol@IAT ]
add esp 0x24
cmp eax ebx
je r-xdata
push ebx
push r--data
push esi
call sub_4023f9
add esp 0xc
cmp eax ebx
je r-xdata
push eax
call edi
pop ecx
mov [ rw-data ] eax
push ebx
push r--data
push esi
call sub_4023f9
add esp 0xc
cmp eax ebx
je r-xdata
push eax
call edi
pop ecx
mov [ rw-data ] eax
push ebx
push r--data
push esi
call sub_4023f9
add esp 0xc
cmp eax ebx
je r-xdata
mov [ rw-data ] eax
push ebx
push r--data
push esi
call sub_4023f9
add esp 0xc
pop edi
pop esi
cmp eax ebx
pop ebx
je r-xdata
mov [ rw-data ] eax
leave
retn
mov [ rw-data ] eax
sub_40446d
push ebp
mov ebp esp
sub esp 0xc
push esi
push [ ebp + 0x8 ]
lea ecx [ ebp - 0xc ]
call sub_4024ba
push r--data
lea ecx [ ebp - 0xc ]
call sub_4024f3
mov esi [ ebp + 0xc ]
jmp r-xdata
movzx eax [ esi ]
cmp ax 0x20
lea ecx [ ebp - 0xc ]
ja r-xdata
movzx eax ax
push eax
call sub_401410
inc esi
inc esi
push r--data
call sub_4024f3
push [ ebp + 0x10 ]
push [ ebp - 0xc ]
call sub_404128
push [ ebp - 0xc ]
call ??3@YAXPAX@Z
add esp 0xc
pop esi
leave
retn
sub_4044cb
push ebp
mov ebp esp
sub esp 0xc
push [ ebp + 0x8 ]
lea ecx [ ebp - 0xc ]
call sub_4024ba
lea eax [ ebp - 0xc ]
push eax
call sub_403b30
push [ ebp - 0xc ]
call sub_402c2c
push [ ebp - 0xc ]
call ??3@YAXPAX@Z
add esp 0xc
leave
retn
sub_4044fa
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
lea ecx [ ebp - 0x10 ]
call sub_4013f8
mov ebx [ ebp + 0x14 ]
mov edi [ ebp + 0xc ]
mov esi ebx
mov [ ebp + 0x17 ] 0x0
cmp ax 0x61
jb r-xdata
cmp ax 0x39
jbe r-xdata
cmp ax 0x41
jb r-xdata
cmp ax 0x7a
jbe r-xdata
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x10 ]
call sub_401310
movzx eax [ esi ]
push eax
lea ecx [ ebp - 0x10 ]
call sub_401410
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x4 ]
push eax
push [ ebp - 0x10 ]
inc esi
push edi
inc esi
call sub_4023f9
add esp 0xc
test eax eax
je r-xdata
cmp ebx esi
jne r-xdata
cmp ax 0x5a
jbe r-xdata
movzx eax [ esi ]
cmp ax 0x30
jb r-xdata
mov [ ebp + 0x17 ] 0x1
mov eax [ ebp + 0x18 ]
sub eax 0x0
je r-xdata
cmp [ ebp + 0x18 ] 0xffffffff
jne r-xdata
push eax
call [ ebp + 0x8 ]
inc [ ebp - 0x4 ]
lea eax [ ebp - 0x4 ]
push eax
push [ ebp - 0x10 ]
push edi
call sub_4023f9
add esp 0x10
test eax eax
jne r-xdata
jmp r-xdata
push [ ebp - 0x10 ]
call ??3@YAXPAX@Z
pop ecx
pop edi
pop esi
pop ebx
leave
retn
dec eax
je r-xdata
push 0xffffffff
push r--data
push [ ebp + 0x10 ]
push edi
push [ ebp + 0x8 ]
call sub_4044fa
add esp 0x14
movzx eax [ ebx ]
test ax ax
jne r-xdata
cmp [ ebp + 0x17 ] 0x0
jne r-xdata
cmp [ ebp + 0x18 ] 0xffffffff
je r-xdata
test ax ax
je r-xdata
sub_4045e5
push ebp
mov ebp esp
sub esp 0x4c
push esi
lea ecx [ ebp - 0x4c ]
mov [ rw-data ] 0x8
call sub_4065d9
push 0x1
mov [ ebp - 0x4c ] r--data
call sub_401fb6
pop ecx
push eax
lea ecx [ ebp - 0xc ]
call sub_4024ba
xor esi esi
cmp [ rw-data ] esi
jbe r-xdata
push r--data
lea ecx [ ebp - 0xc ]
call sub_4024f3
push 0x2c
call sub_401fb6
pop ecx
push eax
lea ecx [ ebp - 0xc ]
call sub_4024f3
push 0x0
push [ ebp - 0xc ]
lea ecx [ ebp - 0x4c ]
push [ rw-data ]
push 0x11
call sub_4073b9
push [ ebp - 0xc ]
call ??3@YAXPAX@Z
pop ecx
lea ecx [ ebp - 0x4c ]
call sub_406632
pop esi
leave
retn
test esi esi
je r-xdata
mov eax [ esi * 4 + rw-data ]
push [ eax + 0x10 ]
lea ecx [ ebp - 0xc ]
call sub_4024f3
inc esi
cmp esi [ rw-data ]
jb r-xdata
push r--data
lea ecx [ ebp - 0xc ]
call sub_4024f3
sub_4046b2
push ebp
mov ebp esp
push r--data
push [ ebp + 0xc ]
call sub_401459
test eax eax
pop ecx
pop ecx
je r-xdata
push r--data
push [ ebp + 0xc ]
call sub_401459
test eax eax
pop ecx
pop ecx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
push r--data
push [ ebp + 0xc ]
call sub_401459
test eax eax
pop ecx
pop ecx
je r-xdata
pop ebp
retn 0xc
mov eax 0x80004002
mov eax [ ebp + 0x8 ]
mov ecx eax
neg ecx
lea edx [ eax + 0x4 ]
sbb ecx ecx
and ecx edx
mov edx [ ebp + 0x10 ]
mov [ edx ] ecx
jmp r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x4 ]
xor eax eax
jmp r-xdata
sub_404766
push esi
mov esi ecx
and [ esi + 0x4 ] 0x0
mov [ esi ] r--data
and [ esi + 0x8 ] 0x0
lea ecx [ esi + 0xc ]
call sub_4013f8
and [ esi + 0x20 ] 0x0
lea ecx [ esi + 0x24 ]
call sub_4013f8
mov eax esi
pop esi
retn
sub_40478f
push esi
mov esi ecx
push [ esi + 0x24 ]
call ??3@YAXPAX@Z
mov eax [ esi + 0x20 ]
test eax eax
pop ecx
je r-xdata
push [ esi + 0xc ]
call ??3@YAXPAX@Z
mov esi [ esi + 0x8 ]
test esi esi
pop ecx
je r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
pop esi
retn
mov eax [ esi ]
push esi
call [ eax + 0x8 ]
sub_4047c0
push ebp
mov ebp esp
sub esp 0x34
push ebx
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x2 ] 0x3a
jne r-xdata
push esi
call ??3@YAXPAX@Z
movzx eax [ esi + 0x4 ]
cmp ax 0x5c
je r-xdata
mov ax [ esi ]
mov [ ebp - 0x10 ] ax
lea eax [ ebp - 0x10 ]
xor ebx ebx
push eax
mov [ ebp - 0xe ] 0x3a
mov [ ebp - 0xc ] 0x5c
mov [ ebp - 0xa ] bx
call [ GetDriveTypeW@IAT ]
cmp eax 0x3
jne r-xdata
cmp ax 0x2f
jne r-xdata
lea eax [ ebp - 0x28 ]
push r--data
push eax
call sub_403f5d
pop ecx
pop ecx
push ebx
push 0x80
push 0x2
push ebx
push ebx
push 0x40000000
push [ ebp - 0x28 ]
call [ CreateFileW@IAT ]
cmp eax 0xffffffff
mov [ ebp - 0x4 ] eax
je r-xdata
push [ ebp - 0x28 ]
call ??3@YAXPAX@Z
push esi
call ??3@YAXPAX@Z
pop ecx
jmp r-xdata
push edi
lea ecx [ ebp - 0x1c ]
call sub_4013f8
push r--data
lea ecx [ ebp - 0x1c ]
call sub_401310
mov edi r--data
push edi
lea ecx [ ebp - 0x1c ]
call sub_4024f3
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x1c ]
call sub_4013c9
mov esi r--data
push esi
lea ecx [ ebp - 0x1c ]
call sub_4024f3
push r--data
lea ecx [ ebp - 0x1c ]
call sub_4024f3
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x1c ]
call sub_4013c9
push r--data
lea ecx [ ebp - 0x1c ]
call sub_4024f3
push edi
lea ecx [ ebp - 0x1c ]
call sub_4024f3
lea eax [ ebp - 0x28 ]
push eax
lea ecx [ ebp - 0x1c ]
call sub_4013c9
push esi
lea ecx [ ebp - 0x1c ]
call sub_4024f3
mov esi [ ebp - 0x18 ]
push 0x1
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x34 ]
push eax
call sub_40271c
mov eax [ eax ]
add esp 0xc
push ebx
lea ecx [ ebp - 0x8 ]
push ecx
push esi
push eax
push [ ebp - 0x4 ]
call [ WriteFile@IAT ]
push [ ebp - 0x34 ]
mov esi eax
call ??3@YAXPAX@Z
pop ecx
push [ ebp - 0x4 ]
call [ CloseHandle@IAT ]
cmp esi ebx
pop edi
je r-xdata
pop ecx
push [ ebp - 0x28 ]
call sub_402c2c
push [ ebp - 0x1c ]
call ??3@YAXPAX@Z
push [ ebp - 0x28 ]
call ??3@YAXPAX@Z
push [ ebp + 0x8 ]
call ??3@YAXPAX@Z
add esp 0x10
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0x18 ]
jne r-xdata
pop esi
pop ebx
leave
retn
push ebx
push [ ebp + 0x8 ]
call [ SetFileAttributesW@IAT ]
push ebx
push ebx
push ebx
push [ ebp - 0x28 ]
push r--data
push ebx
call [ ShellExecuteW@IAT ]
push [ ebp - 0x1c ]
call ??3@YAXPAX@Z
mov esi [ ebp + 0x8 ]
pop ecx
sub_40497d
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ ebp + 0x8 ]
lea eax [ ebp + 0xc ]
push eax
push esi
mov ebx ecx
call sub_403dc9
mov eax [ ebp + 0xc ]
test eax eax
jle r-xdata
push [ ebp + 0xc ]
mov ecx ebx
push [ ebp + 0x8 ]
call sub_40e939
pop esi
pop ebx
leave
retn 0x8
shl esi 0x2
mov [ ebp - 0x4 ] eax
push edi
add esi 0x4
dec [ ebp - 0x4 ]
jne r-xdata
mov ecx edi
call sub_401a79
push edi
call ??3@YAXPAX@Z
pop ecx
mov eax [ ebx + 0xc ]
mov edi [ esi + eax ]
test edi edi
je r-xdata
pop edi
sub_4049d4
push ebp
mov ebp esp
sub esp 0x10
mov eax [ ecx + 0x4 ]
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x10 ]
lea edx [ ebx + esi ]
cmp edx eax
mov [ ebp - 0x4 ] ecx
jle r-xdata
test ebx ebx
jne r-xdata
mov esi eax
sub esi ebx
push edi
lea ecx [ ebp - 0x10 ]
call sub_402554
push esi
lea ecx [ ebp - 0x10 ]
call sub_402284
mov edi [ ebp - 0x10 ]
xor eax eax
test esi esi
jle r-xdata
cmp esi eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
mov [ edi + esi ] 0x0
mov [ ebp - 0xc ] esi
call sub_40259c
push edi
call ??3@YAXPAX@Z
pop ecx
pop edi
mov ecx [ ebp - 0x4 ]
mov ecx [ ecx ]
add ecx eax
mov cl [ ecx + ebx ]
mov [ edi + eax ] cl
inc eax
cmp eax esi
jl r-xdata
push ecx
mov ecx [ ebp + 0x8 ]
call sub_40259c
jmp r-xdata
mov eax [ ebp + 0x8 ]
pop esi
pop ebx
leave
retn 0xc
sub_404a57
push esi
mov esi [ esp + 0x8 ]
dec [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
jne r-xdata
pop esi
retn 0x4
mov ecx esi
call sub_40478f
push esi
call ??3@YAXPAX@Z
pop ecx
xor eax eax
sub_404a78
push ebp
mov ebp esp
sub esp 0x2a4
push ebx
push esi
push edi
call sub_401f60
push 0x3
call sub_401fb6
push 0x28
mov [ rw-data ] eax
call sub_401fb6
push 0x2
mov [ rw-data ] eax
call sub_401fb6
push 0x5
mov [ rw-data ] eax
call sub_401fb6
push 0x15
mov [ rw-data ] eax
call sub_401fb6
push 0x16
mov [ rw-data ] eax
call sub_401fb6
push 0x17
mov [ rw-data ] eax
call sub_401fb6
add esp 0x1c
xor ebx ebx
mov [ rw-data ] eax
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov edi rw-data
inc ebx
cmp ebx 0x40
jl r-xdata
push ebx
lea eax [ ebp - 0x98 ]
push r--data
push eax
call [ wsprintfW@IAT ]
add esp 0xc
lea ecx [ ebp - 0x18 ]
call sub_4013f8
lea ecx [ ebp - 0xc ]
call sub_4013f8
lea eax [ ebp - 0x98 ]
push eax
lea ecx [ ebp - 0x18 ]
call sub_401310
lea eax [ ebp - 0x2a4 ]
push eax
lea ecx [ ebp - 0xc ]
call sub_401310
lea eax [ ebp - 0x18 ]
push eax
mov ecx edi
call sub_402f15
xor esi esi
push esi
push ebx
lea eax [ ebp - 0x2a4 ]
push eax
push esi
call [ SHGetSpecialFolderPathW@IAT ]
test eax eax
je r-xdata
call [ InitCommonControls@IAT ]
pop edi
pop esi
pop ebx
leave
retn
add esi 0x8
cmp esi 0x28
jb r-xdata
push [ esi + rw-data ]
lea ecx [ ebp - 0x18 ]
call sub_401310
lea eax [ ebp - 0x2a4 ]
push eax
lea ecx [ ebp - 0xc ]
call sub_401310
lea eax [ ebp - 0x18 ]
push eax
mov ecx edi
call sub_402f15
cmp [ esi + rw-data ] ebx
jne r-xdata
lea ecx [ ebp - 0x18 ]
call sub_401a79
sub_404bb1
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push ebx
mov ebx [ eax + 0x4 ]
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
cmp [ esi + 0x4 ] edi
jle r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
lea eax [ ebx + ebx ]
mov [ ebp + 0x8 ] eax
add [ ebp + 0x8 ] 0x2
inc edi
cmp edi [ esi + 0x4 ]
jl r-xdata
mov ecx [ ebp + 0xc ]
mov ecx [ ecx ]
push ebx
push ecx
lea eax [ eax + edi * 2 + 0x2 ]
push eax
call sub_401a8f
add esp 0xc
test eax eax
jne r-xdata
mov eax [ esi ]
cmp [ eax + edi * 2 ] 0x25
jne r-xdata
mov eax [ esi ]
mov ecx [ ebp + 0x8 ]
cmp [ eax + ecx + 0x2 ] 0x25
jne r-xdata
lea eax [ ebx + 0x2 ]
push eax
push edi
mov ecx esi
call sub_402657
push [ ebp + 0x10 ]
mov ecx esi
push edi
call sub_402f3f
sub_404c21
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push edi
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x18 ]
call sub_4024ba
lea eax [ ebp - 0x18 ]
push rw-data
push eax
call sub_403829
mov ebx rw-data
lea eax [ ebp - 0x18 ]
push ebx
push eax
call sub_4038e4
mov edi rw-data
lea eax [ ebp - 0x18 ]
push edi
push eax
call sub_40399f
xor esi esi
add esp 0x18
cmp [ rw-data ] esi
jle r-xdata
push [ ebp - 0x18 ]
call sub_40346a
push [ ebp - 0x18 ]
call ??3@YAXPAX@Z
pop ecx
pop ecx
pop edi
pop esi
pop ebx
leave
retn
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
push [ eax ]
lea eax [ ebp - 0xc ]
push eax
call sub_402eb9
lea eax [ ebp - 0xc ]
push eax
call sub_40276d
lea eax [ ebp - 0xc ]
push rw-data
push eax
call sub_403829
lea eax [ ebp - 0xc ]
push ebx
push eax
call sub_4038e4
lea eax [ ebp - 0xc ]
push edi
push eax
call sub_40399f
lea eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
push [ eax + esi * 4 ]
lea eax [ ebp - 0x18 ]
push eax
call sub_404bb1
push [ ebp - 0xc ]
call ??3@YAXPAX@Z
add esp 0x34
inc esi
cmp esi [ rw-data ]
jl r-xdata
sub_404cec
push ebp
mov ebp esp
push ecx
push ebx
push esi
xor ebx ebx
push edi
mov [ ebp - 0x4 ] ebx
call sub_40865e
push 0x1e8
call ??2@YAPAXI@Z
cmp eax ebx
pop ecx
je r-xdata
xor eax eax
mov ecx eax
call sub_40a9f4
jmp r-xdata
cmp [ rw-data ] 0x2
mov edi [ ebp + 0xc ]
je r-xdata
push 0x8
push ebx
call sub_40775e
mov eax [ esi ]
pop ecx
pop ecx
push esi
call [ eax + 0x8 ]
mov eax 0x80004005
push eax
lea ecx [ ebp - 0x4 ]
call sub_408761
mov edi [ ebp + 0x8 ]
mov eax [ edi ]
push ebx
push ebx
push ebx
push ebx
push edi
call [ eax + 0x10 ]
mov esi [ ebp - 0x4 ]
mov eax [ esi ]
push ebx
push r--data
push edi
push esi
call [ eax + 0xc ]
test eax eax
je r-xdata
push 0x40
call ??2@YAPAXI@Z
cmp eax ebx
pop ecx
je r-xdata
push [ edi ]
call sub_4032fd
test eax eax
pop ecx
jne r-xdata
xor eax eax
mov ecx eax
call sub_404766
jmp r-xdata
mov edi 0x80004005
mov eax [ esi ]
push esi
call [ eax + 0x8 ]
mov eax edi
jmp r-xdata
push [ edi ]
mov ecx eax
push esi
call sub_4014ff
mov edi eax
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_404da7
push ebp
mov ebp esp
sub esp 0x28
or [ ebp - 0x20 ] 0xffffffff
push esi
push edi
push 0x1
push [ ebp + 0x8 ]
xor edi edi
mov esi r--data
lea ecx [ ebp - 0x20 ]
mov [ ebp - 0x24 ] edi
mov [ ebp - 0x28 ] esi
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x14 ] edi
call sub_40db82
test al al
jne r-xdata
lea ecx [ ebp - 0x10 ]
call sub_402554
push rw-data
lea ecx [ ebp - 0x10 ]
call sub_403e5c
push rw-data
lea ecx [ ebp - 0x10 ]
call sub_403ecc
mov eax [ ebp + 0xc ]
push [ eax ]
lea ecx [ ebp - 0x10 ]
call sub_403ecc
push rw-data
lea ecx [ ebp - 0x10 ]
call sub_403ecc
mov edi [ ebp - 0xc ]
lea eax [ ebp - 0x4 ]
push eax
push edi
push [ ebp - 0x10 ]
lea eax [ ebp - 0x28 ]
push eax
call sub_40dd11
test eax eax
jne r-xdata
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_4024ba
lea eax [ ebp - 0x10 ]
push eax
call sub_402d00
cmp eax edi
pop ecx
jl r-xdata
push [ ebp - 0x10 ]
call ??3@YAXPAX@Z
pop ecx
lea ecx [ ebp - 0x20 ]
mov [ ebp - 0x28 ] esi
call j_sub_40d9b4
xor al al
cmp [ ebp - 0x4 ] edi
jne r-xdata
mov ecx [ ebp - 0x10 ]
mov [ ecx + eax * 2 ] di
push [ ebp - 0x10 ]
mov [ ebp - 0xc ] eax
call sub_4032fd
test eax eax
pop ecx
je r-xdata
push [ ebp - 0x10 ]
call ??3@YAXPAX@Z
pop ecx
lea ecx [ ebp - 0x20 ]
mov [ ebp - 0x28 ] esi
call j_sub_40d9b4
mov al 0x1
jmp r-xdata
push 0x1
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x20 ]
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x14 ] edi
call sub_40db82
test al al
je r-xdata
pop edi
pop esi
leave
retn
push [ ebp - 0x10 ]
call ??3@YAXPAX@Z
pop ecx
sub_404eba
push ebp
mov ebp esp
sub esp 0x70
push esi
mov esi [ ebp + 0xc ]
push edi
push rw-data
mov ecx esi
call sub_403e5c
mov edi [ ebp + 0x10 ]
push rw-data
mov ecx edi
call sub_403e5c
mov eax [ esi + 0x4 ]
dec eax
push eax
push 0x0
lea eax [ ebp - 0xc ]
push eax
mov ecx esi
call sub_4049d4
lea eax [ ebp - 0xc ]
push eax
mov ecx esi
call sub_403e97
push [ ebp - 0xc ]
call ??3@YAXPAX@Z
mov eax [ edi + 0x4 ]
pop ecx
dec eax
push eax
push 0x0
lea eax [ ebp - 0xc ]
push eax
mov ecx edi
call sub_4049d4
lea eax [ ebp - 0xc ]
push eax
mov ecx edi
call sub_403e97
push [ ebp - 0xc ]
call ??3@YAXPAX@Z
push [ ebp + 0x8 ]
lea eax [ ebp - 0x70 ]
push r--data
push eax
call [ wsprintfA@IAT ]
add esp 0x10
lea eax [ ebp - 0x70 ]
push eax
mov ecx esi
call sub_403ecc
lea eax [ ebp - 0x70 ]
push eax
mov ecx edi
call sub_403ecc
pop edi
pop esi
leave
retn
sub_404f5a
push ebp
lea ebp [ esp - 0x68 ]
sub esp 0x2a0
push ebx
push esi
push edi
push sub_403d9c
call [ _set_new_handler@IAT ]
pop ecx
call sub_401b50
lea eax [ ebp - 0x238 ]
push eax
mov [ ebp - 0x238 ] 0x114
call [ GetVersionExW@IAT ]
test eax eax
je r-xdata
push 0x10
push r--data
push r--data
push 0x0
call [ MessageBoxA@IAT ]
push 0x14
pop eax
cmp [ ebp - 0x228 ] 0x2
jne r-xdata
cmp [ ebp - 0x234 ] 0x5
jb r-xdata
or [ ebp - 0x44 ] 0xffffffff
or [ ebp - 0x3c ] 0xffffffff
lea ecx [ ebp - 0x50 ]
mov [ rw-data ] 0x3b
mov [ rw-data ] 0x3b
mov [ ebp + 0x54 ] r--data
xor edi edi
mov [ ebp + 0x66 ] 0x0
mov [ ebp + 0x67 ] 0x0
mov [ ebp + 0x64 ] 0x0
mov [ ebp + 0x65 ] 0x0
call sub_4013f8
lea ecx [ ebp - 0x80 ]
call sub_4013f8
push 0x20
pop esi
push esi
lea ecx [ ebp - 0x74 ]
mov [ ebp + 0x2c ] edi
mov [ ebp + 0x30 ] edi
mov [ ebp + 0x34 ] edi
mov [ ebp + 0x38 ] 0x4
mov [ ebp + 0x28 ] r--data
call sub_403e29
lea eax [ ebp - 0x50 ]
push eax
call [ GetCommandLineW@IAT ]
push eax
call sub_4040b9
pop ecx
pop ecx
push eax
lea ecx [ ebp - 0x74 ]
call sub_4024f3
lea eax [ ebp - 0x74 ]
push eax
call sub_402a0f
mov ebx [ ebp - 0x74 ]
add ebx 0x2
mov [ esp ] r--data
push ebx
call sub_403d30
cmp eax edi
pop ecx
pop ecx
je r-xdata
call sub_404a78
push r--data
push ebx
call sub_403d30
test eax eax
pop ecx
pop ecx
je r-xdata
cmp [ eax ] 0x3a
jne r-xdata
mov esi 0x208
cmp [ rw-data ] esi
jg r-xdata
call sub_4045e5
add eax 0x2
push eax
call [ _wtol@IAT ]
pop ecx
lea ecx [ eax - 0x1 ]
cmp ecx 0xfffe
ja r-xdata
push esi
push [ rw-data ]
push edi
call [ GetModuleFileNameW@IAT ]
test eax eax
jne r-xdata
push esi
mov ecx rw-data
call sub_401112
pop edi
pop esi
pop ebx
add ebp 0x68
leave
retn 0x10
cmp [ ebx ] si
ja r-xdata
mov [ rw-data ] ax
jmp r-xdata
mov esi [ rw-data ]
push esi
call sub_4010fe
mov [ esi + eax * 2 ] di
mov [ esp ] r--data
push ebx
mov [ rw-data ] eax
call sub_403d30
mov esi eax
cmp esi edi
pop ecx
pop ecx
je r-xdata
xor esi esi
inc esi
push 0x6
push esi
call sub_40775e
pop ecx
pop ecx
jmp r-xdata
inc ebx
inc ebx
jmp r-xdata
mov esi rw-data
push esi
mov ecx rw-data
call sub_401349
mov edi rw-data
push esi
mov ecx edi
call sub_401349
push esi
call sub_402d00
xor esi esi
cmp eax esi
pop ecx
jl r-xdata
cmp [ esi ] 0x3a
je r-xdata
push [ ebp - 0x74 ]
call ??3@YAXPAX@Z
pop ecx
lea ecx [ ebp + 0x28 ]
call sub_403db3
push [ ebp - 0x80 ]
call ??3@YAXPAX@Z
push [ ebp - 0x50 ]
call ??3@YAXPAX@Z
pop ecx
pop ecx
mov eax esi
jmp r-xdata
movzx eax [ ebx ]
cmp ax di
jne r-xdata
push 0x10
call ??2@YAPAXI@Z
cmp eax esi
pop ecx
je r-xdata
mov ecx [ rw-data ]
lea esi [ eax + eax ]
and [ esi + ecx ] 0x0
mov [ rw-data ] eax
mov eax [ rw-data ]
lea eax [ esi + eax + 0x2 ]
push eax
mov ecx edi
call sub_401310
mov eax [ rw-data ]
lea eax [ esi + eax + 0x2 ]
mov esi rw-data
push eax
mov ecx esi
call sub_401310
push 0x2e
mov ecx esi
call sub_402529
test eax eax
jle r-xdata
movzx ecx [ esi + 0x2 ]
movzx eax cx
or eax 0x20
sub eax 0x61
push 0x2
pop ebx
je r-xdata
push 0x64
cmp ax si
ja r-xdata
xor edi edi
mov ecx eax
call sub_404693
mov edi eax
jmp r-xdata
push esi
mov esi rw-data
mov ecx esi
call sub_401349
push 0x4
call sub_401fb6
pop ecx
push eax
mov ecx esi
call sub_4024f3
mov eax [ rw-data ]
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ rw-data ] eax
xor esi esi
mov ecx [ rw-data ]
and [ ecx + eax * 2 ] 0x0
mov [ rw-data ] eax
mov [ rw-data ] ebx
jmp r-xdata
sub eax ebx
je r-xdata
inc ebx
inc ebx
lea ecx [ ebp + 0x48 ]
call sub_402554
lea ecx [ ebp + 0x1c ]
call sub_402554
lea ecx [ ebp + 0x10 ]
call sub_402554
lea eax [ ebp + 0x10 ]
push eax
lea eax [ ebp + 0x1c ]
push eax
movzx eax [ rw-data ]
push eax
call sub_404eba
mov edi [ ebp + 0x60 ]
lea eax [ ebp + 0x48 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0x1c ]
push edi
call sub_4027ea
add esp 0x1c
test al al
jne r-xdata
push [ rw-data ]
push 0x7
push 0x1
call sub_40775e
mov eax [ ebp + 0x60 ]
add esp 0xc
cmp eax esi
je r-xdata
push edi
lea ecx [ ebp + 0x60 ]
call sub_408726
push [ rw-data ]
mov ecx edi
call sub_40dc71
test al al
jne r-xdata
cmp [ esi ] 0x20
ja r-xdata
xor eax eax
cmp [ esi + 0x4 ] 0x63
sete al
add eax 0x3
mov [ rw-data ] eax
jmp r-xdata
dec eax
je r-xdata
cmp [ rw-data ] esi
jne r-xdata
lea eax [ ebp + 0x48 ]
push eax
push rw-data
push rw-data
push edi
call sub_4027ea
add esp 0x10
test al al
jne r-xdata
push 0x2
jmp r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
add esi ebx
jmp r-xdata
cmp cx 0x44
jne r-xdata
sub eax ebx
je r-xdata
lea ecx [ ebp + 0x28 ]
call sub_40e909
cmp [ ebp + 0x4c ] esi
je r-xdata
push r--data
push ebx
call sub_403d30
cmp eax esi
pop ecx
pop ecx
je r-xdata
push 0x9
push esi
call sub_40775e
push [ ebp + 0x10 ]
call ??3@YAXPAX@Z
push [ ebp + 0x1c ]
call ??3@YAXPAX@Z
push [ ebp + 0x48 ]
call ??3@YAXPAX@Z
add esp 0x14
cmp edi esi
je r-xdata
pop esi
jmp r-xdata
movzx eax [ esi ]
cmp ax di
jne r-xdata
add esi 0x4
cmp [ esi + 0x4 ] 0x3a
jne r-xdata
mov esi 0x2033
jmp r-xdata
sub eax 0x10
jne r-xdata
cmp [ rw-data ] 0x4
je r-xdata
push esi
lea eax [ ebp + 0x28 ]
push eax
lea eax [ ebp + 0x48 ]
push eax
call sub_40303c
add esp 0xc
test al al
jne r-xdata
cmp [ eax ] 0x3a
jne r-xdata
push 0x3
jmp r-xdata
mov eax [ edi ]
push edi
call [ eax + 0x8 ]
cmp ax 0x20
ja r-xdata
push r--data
push esi
mov ebx esi
call sub_403d30
cmp eax edi
pop ecx
pop ecx
je r-xdata
mov [ rw-data ] 0xa
lea eax [ esi + 0x2 ]
push eax
call [ _wtol@IAT ]
cmp eax 0xe10
pop ecx
mov [ rw-data ] eax
ja r-xdata
add esi 0x6
jmp r-xdata
mov esi 0x478e
jmp r-xdata
push [ ebp + 0x10 ]
call ??3@YAXPAX@Z
push [ ebp + 0x1c ]
call ??3@YAXPAX@Z
push [ ebp + 0x48 ]
call ??3@YAXPAX@Z
add esp 0xc
cmp edi esi
je r-xdata
mov eax [ rw-data ]
mov esi rw-data
jmp r-xdata
push [ ebp + 0x10 ]
call ??3@YAXPAX@Z
push [ ebp + 0x1c ]
call ??3@YAXPAX@Z
push [ ebp + 0x48 ]
call ??3@YAXPAX@Z
add esp 0xc
jmp r-xdata
movzx ecx [ eax ]
cmp cx si
je r-xdata
inc eax
inc eax
add esi ebx
cmp [ eax ] 0x3a
jne r-xdata
cmp eax edi
jne r-xdata
movzx eax [ esi ]
cmp ax 0x20
ja r-xdata
mov eax [ edi ]
push edi
call [ eax + 0x8 ]
jmp r-xdata
test eax eax
jne r-xdata
cmp edi esi
je r-xdata
cmp cx 0x20
ja r-xdata
movzx ecx [ eax ]
cmp cx di
jne r-xdata
jmp r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
cmp ax 0x3a
je r-xdata
cmp [ rw-data ] edi
jne r-xdata
push eax
lea eax [ ebp - 0x124 ]
push r--data
push eax
call [ wsprintfW@IAT ]
add esp 0xc
lea ecx [ ebp - 0x68 ]
call sub_4013f8
lea ecx [ ebp - 0x5c ]
call sub_4013f8
lea eax [ ebp - 0x124 ]
push eax
lea ecx [ ebp - 0x68 ]
call sub_401310
push [ esi ]
call sub_401fb6
pop ecx
push eax
lea ecx [ ebp - 0x5c ]
call sub_401310
lea eax [ ebp - 0x68 ]
push eax
mov ecx rw-data
call sub_402f15
lea ecx [ ebp - 0x68 ]
add esi 0x10
call sub_401a79
mov eax [ esi ]
lea eax [ ebp + 0x28 ]
push eax
call sub_404223
pop ecx
dec ebx
push 0x20
dec ebx
pop edi
push 0x4
jmp r-xdata
mov eax [ edi ]
push edi
call [ eax + 0x8 ]
cmp [ eax ] si
je r-xdata
inc eax
inc eax
movzx ecx [ eax ]
cmp cx si
jne r-xdata
cmp cx 0x20
ja r-xdata
mov ecx [ ebp - 0x50 ]
mov [ ecx ] di
lea ecx [ ebp - 0x50 ]
push ecx
push eax
mov [ ebp - 0x4c ] edi
call sub_4040b9
cmp [ rw-data ] 0x2
pop ecx
pop ecx
mov ebx eax
je r-xdata
inc eax
inc eax
movzx eax ax
push eax
mov ecx rw-data
call sub_401410
add esi ebx
mov [ rw-data ] edi
cmp [ esi ] 0x3a
jne r-xdata
jmp r-xdata
movzx eax [ ebx ]
test ax ax
jne r-xdata
inc ebx
inc ebx
cmp [ ebx ] di
ja r-xdata
lea ecx [ ebp + 0x48 ]
push ecx
push eax
call sub_404da7
test al al
pop ecx
pop ecx
jne r-xdata
lea eax [ ebp - 0x50 ]
push eax
mov ecx rw-data
call sub_401349
cmp ax di
ja r-xdata
movzx eax [ ebx ]
cmp ax 0x2f
je r-xdata
jmp r-xdata
push 0xa
push esi
call sub_40775e
push [ ebp + 0x10 ]
call ??3@YAXPAX@Z
push [ ebp + 0x1c ]
call ??3@YAXPAX@Z
push [ ebp + 0x48 ]
call ??3@YAXPAX@Z
add esp 0x14
inc ebx
inc ebx
lea esi [ ebx + 0x2 ]
cmp [ esi ] 0x21
jne r-xdata
cmp ax 0x2d
jne r-xdata
mov [ ebp + 0x58 ] ebx
push r--data
push esi
call sub_403b53
test eax eax
pop ecx
pop ecx
je r-xdata
cmp [ ebx + 0x4 ] di
jbe r-xdata
lea eax [ ebp + 0x28 ]
push eax
call sub_404223
and [ ebp ] 0x0
mov ebx r--data
jmp r-xdata
push r--data
push esi
call sub_403b53
test eax eax
pop ecx
pop ecx
je r-xdata
lea ecx [ ebx + 0x6 ]
movzx eax [ ecx ]
cmp ax 0x30
jb r-xdata
add ebx 0x4
jmp r-xdata
lea eax [ ebp ]
push eax
lea eax [ ebp + 0x28 ]
push ebx
push eax
call sub_4023f9
mov edi eax
add esp 0x10
test edi edi
jne r-xdata
push r--data
push esi
call sub_403b53
test eax eax
pop ecx
pop ecx
je r-xdata
lea eax [ ebp + 0x28 ]
push eax
lea eax [ ebx + 0x6 ]
push eax
push r--data
jmp r-xdata
cmp ax 0x61
jb r-xdata
cmp ax 0x39
jbe r-xdata
movzx eax [ ebx ]
test ax ax
mov [ ebp + 0x58 ] ebx
jne r-xdata
push edi
lea ecx [ ebp - 0x10 ]
call sub_4024ba
push 0x0
push 0x3d
lea ecx [ ebp - 0x10 ]
call sub_40262f
test eax eax
jle r-xdata
jmp r-xdata
push r--data
push esi
call sub_403b53
test eax eax
pop ecx
pop ecx
je r-xdata
lea eax [ ebx + 0x6 ]
movzx ecx [ eax ]
cmp cx 0x30
jb r-xdata
call sub_40446d
add esp 0xc
jmp r-xdata
cmp ax 0x41
jb r-xdata
cmp ax 0x7a
jbe r-xdata
mov [ ebp + 0x54 ] ecx
cmp ax di
ja r-xdata
push [ ebp - 0x10 ]
call ??3@YAXPAX@Z
pop ecx
mov ecx [ ebp - 0x10 ]
lea esi [ eax + eax ]
and [ esi + ecx ] 0x0
lea ecx [ ebp - 0x68 ]
mov [ ebp - 0xc ] eax
call sub_4013f8
lea ecx [ ebp - 0x5c ]
call sub_4013f8
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x68 ]
call sub_401349
lea eax [ esi + edi + 0x2 ]
push eax
lea ecx [ ebp - 0x5c ]
call sub_401310
lea eax [ ebp - 0x68 ]
push eax
mov ecx rw-data
call sub_402f15
inc [ ebp ]
lea ecx [ ebp - 0x68 ]
call sub_401a79
push [ ebp - 0x10 ]
call ??3@YAXPAX@Z
call sub_40400c
xor esi esi
cmp [ rw-data ] 0xffffffff
jne r-xdata
push r--data
push esi
call sub_403b53
test eax eax
pop ecx
pop ecx
je r-xdata
lea eax [ ebp + 0x28 ]
push eax
lea eax [ ebx + 0x6 ]
push eax
push r--data
jmp r-xdata
cmp cx 0x32
ja r-xdata
cmp [ ebx ] di
jbe r-xdata
cmp ax di
ja r-xdata
cmp ax 0x5a
ja r-xdata
inc ebx
inc ebx
cmp [ ebp + 0x65 ] 0x0
je r-xdata
mov [ rw-data ] esi
push r--data
push esi
call sub_403b53
test eax eax
pop ecx
pop ecx
je r-xdata
lea eax [ ebp + 0x28 ]
push eax
lea eax [ ebx + 0x6 ]
push eax
push r--data
jmp r-xdata
cmp [ ebx + 0x8 ] di
ja r-xdata
mov [ ebp + 0x54 ] r--data
jmp r-xdata
cmp [ ebp + 0x66 ] 0x0
je r-xdata
push esi
lea eax [ ebp + 0x28 ]
push r--data
push eax
call sub_4023f9
mov edi eax
add esp 0xc
cmp edi esi
jne r-xdata
push r--data
push esi
call sub_403b53
test eax eax
pop ecx
pop ecx
je r-xdata
lea eax [ ebx + 0x6 ]
movzx ecx [ eax ]
cmp cx 0x30
je r-xdata
lea ecx [ ebp + 0x28 ]
push ecx
push eax
push r--data
jmp r-xdata
mov [ ebp + 0x66 ] 0x1
mov [ ebp + 0x67 ] 0x1
jmp r-xdata
push esi
call [ CoInitialize@IAT ]
push esi
lea eax [ ebp + 0x28 ]
push r--data
push eax
call sub_4023f9
add esp 0xc
test eax eax
mov esi rw-data
je r-xdata
and [ rw-data ] 0xfffffeff
lea ecx [ ebp - 0x108 ]
call sub_403ae9
push esi
push edi
push [ rw-data ]
lea ecx [ ebp - 0x108 ]
push 0x11
call sub_4073b9
lea ecx [ ebp - 0x108 ]
call sub_406632
push [ ebp + 0x10 ]
call ??3@YAXPAX@Z
push [ ebp + 0x1c ]
call ??3@YAXPAX@Z
push [ ebp + 0x48 ]
call ??3@YAXPAX@Z
mov eax [ ebp + 0x60 ]
add esp 0xc
cmp eax esi
je r-xdata
push 0x18
call sub_401fb6
pop ecx
mov edi eax
push r--data
push esi
call sub_403b53
test eax eax
pop ecx
pop ecx
je r-xdata
cmp [ ebx + 0x6 ] di
ja r-xdata
cmp [ ebx + 0x8 ] di
ja r-xdata
cmp cx 0x31
jne r-xdata
push esi
call sub_403b02
cmp [ rw-data ] 0x0
pop ecx
je r-xdata
push eax
mov ecx esi
call sub_401310
xor esi esi
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
jmp r-xdata
movzx eax [ esi ]
cmp ax 0x79
je r-xdata
lea eax [ ebx + 0x6 ]
movzx ecx [ eax ]
cmp cx 0x30
jb r-xdata
mov [ ebp + 0x64 ] 0x1
jmp r-xdata
lea ecx [ ebp + 0x28 ]
push ecx
push eax
push r--data
cmp [ rw-data ] 0x3
jne r-xdata
lea eax [ ebp + 0x28 ]
push eax
call sub_40839e
cmp [ ebx + 0x4 ] di
ja r-xdata
cmp ax 0x59
jne r-xdata
cmp cx 0x39
ja r-xdata
mov ebx r--data
mov esi r--data
xor edi edi
lea eax [ ebp + 0x28 ]
push eax
call sub_4082d1
jmp r-xdata
mov eax [ ebp + 0x60 ]
test eax eax
je r-xdata
cmp ax 0x3f
je r-xdata
mov [ ebp + 0x66 ] 0x1
jmp r-xdata
push eax
call [ _wtol@IAT ]
pop ecx
mov [ rw-data ] eax
jmp r-xdata
lea ecx [ ebp + 0x3c ]
call sub_4013f8
cmp [ ebp + 0x67 ] 0x0
je r-xdata
cmp [ ebp + 0x66 ] 0x0
jne r-xdata
push [ ebp + 0x10 ]
mov edi eax
call ??3@YAXPAX@Z
push [ ebp + 0x1c ]
call ??3@YAXPAX@Z
push [ ebp + 0x48 ]
call ??3@YAXPAX@Z
add esp 0x10
jmp r-xdata
mov esi edi
jmp r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
cmp [ ebx + 0x4 ] di
ja r-xdata
cmp ax 0x68
je r-xdata
cmp [ ebp + 0x40 ] edi
mov [ ebp + 0x65 ] 0x0
jne r-xdata
mov edi [ ebp + 0x54 ]
push eax
push [ rw-data ]
call sub_4075fb
test eax eax
pop ecx
pop ecx
je r-xdata
lea eax [ ebp + 0x28 ]
push eax
push esi
call sub_404128
test eax eax
pop ecx
pop ecx
je r-xdata
mov [ ebp + 0x65 ] 0x1
jmp r-xdata
cmp ax 0x48
jne r-xdata
cmp [ ebp + 0x67 ] 0x0
jne r-xdata
push edi
lea eax [ ebp + 0x28 ]
push ebx
push eax
call sub_4023f9
add esp 0xc
test eax eax
je r-xdata
push [ ebp + 0x3c ]
push 0xe
push 0x0
call sub_40775e
push [ ebp + 0x3c ]
call ??3@YAXPAX@Z
push [ ebp + 0x10 ]
call ??3@YAXPAX@Z
push [ ebp + 0x1c ]
call ??3@YAXPAX@Z
push [ ebp + 0x48 ]
call ??3@YAXPAX@Z
mov eax [ ebp + 0x60 ]
add esp 0x1c
test eax eax
je r-xdata
inc edi
inc edi
movzx eax [ edi ]
cmp ax 0x30
jb r-xdata
push [ ebp + 0x10 ]
call ??3@YAXPAX@Z
push [ ebp + 0x1c ]
call ??3@YAXPAX@Z
push [ ebp + 0x48 ]
call ??3@YAXPAX@Z
add esp 0xc
push 0x10
call [ GetKeyState@IAT ]
test ax ax
jns r-xdata
cmp eax 0x1
je r-xdata
cmp [ rw-data ] edi
jne r-xdata
cmp [ ebp + 0x66 ] 0x0
jne r-xdata
push edi
lea eax [ ebp + 0x28 ]
push esi
push eax
call sub_4023f9
add esp 0xc
test eax eax
je r-xdata
push ebx
lea ecx [ ebp + 0x3c ]
call sub_401310
cmp [ ebp + 0x40 ] edi
mov [ ebp + 0x65 ] 0x1
jne r-xdata
push 0x6
jmp r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
cmp ax 0x61
jb r-xdata
cmp ax 0x39
jbe r-xdata
push 0x5
jmp r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
mov [ ebp + 0x67 ] 0x1
push [ ebp + 0x10 ]
call ??3@YAXPAX@Z
push [ ebp + 0x1c ]
call ??3@YAXPAX@Z
push [ ebp + 0x48 ]
call ??3@YAXPAX@Z
add esp 0xc
mov ebx eax
jmp r-xdata
mov esi rw-data
push esi
lea ecx [ ebp - 0x1c ]
call sub_4012de
lea eax [ ebp - 0x1c ]
push eax
call sub_403b02
cmp [ ebp - 0x18 ] edi
pop ecx
jne r-xdata
lea eax [ ebp - 0x1c ]
push r--data
push eax
call sub_403f5d
pop ecx
pop ecx
mov esi rw-data
push eax
mov ecx esi
call sub_401349
push [ ebp - 0x1c ]
call ??3@YAXPAX@Z
mov [ rw-data ] 0x0
jmp r-xdata
mov eax [ rw-data ]
and ax 0xc0
cmp al 0x80
jne r-xdata
push esi
lea ecx [ ebp + 0x3c ]
call sub_401310
cmp ax 0x41
jb r-xdata
cmp ax 0x7a
jbe r-xdata
push r--data
lea ecx [ ebp + 0x3c ]
call sub_401310
movzx eax [ edi ]
push eax
lea ecx [ ebp + 0x3c ]
call sub_401410
push 0x0
push [ ebp + 0x3c ]
lea eax [ ebp + 0x28 ]
push eax
call sub_4023f9
add esp 0xc
test eax eax
je r-xdata
mov [ ebp + 0x58 ] ebx
push [ ebp - 0x1c ]
mov [ rw-data ] 0x1
call ??3@YAXPAX@Z
lea eax [ ebp - 0x1c ]
push eax
mov ecx esi
call sub_401349
mov eax [ rw-data ]
pop ecx
mov ecx [ rw-data ]
movzx edx [ eax + ecx * 2 - 0x2 ]
cmp dx 0x5c
je r-xdata
push [ rw-data ]
push [ rw-data ]
call sub_40765c
test eax eax
pop ecx
pop ecx
jne r-xdata
push r--data
lea ecx [ ebp + 0x3c ]
call sub_401310
mov eax [ ebp + 0x54 ]
movzx eax [ eax ]
push eax
lea ecx [ ebp + 0x3c ]
call sub_401410
xor edi edi
cmp ax 0x5a
jbe r-xdata
dec ecx
mov [ eax + ecx * 2 ] di
mov [ rw-data ] ecx
cmp dx 0x2f
jne r-xdata
cmp [ rw-data ] al
push [ ebp + 0x3c ]
je r-xdata
cmp [ rw-data ] edi
jne r-xdata
or [ rw-data ] 0x3
cmp [ ebp + 0x66 ] 0x0
je r-xdata
call ??3@YAXPAX@Z
push [ ebp + 0x10 ]
call ??3@YAXPAX@Z
push [ ebp + 0x1c ]
call ??3@YAXPAX@Z
push [ ebp + 0x48 ]
call ??3@YAXPAX@Z
add esp 0x10
jmp r-xdata
call ??3@YAXPAX@Z
pop ecx
jmp r-xdata
call sub_407853
test eax eax
mov esi [ ebp + 0x60 ]
jne r-xdata
push esi
mov esi [ ebp + 0x60 ]
push esi
call sub_404cec
pop ecx
pop ecx
jmp r-xdata
mov eax [ ebp + 0x60 ]
cmp eax edi
je r-xdata
push edi
lea eax [ ebp + 0x28 ]
push r--data
push eax
call sub_4023f9
add esp 0xc
cmp eax edi
je r-xdata
call sub_40400c
cmp [ ebp + 0x64 ] 0x0
je r-xdata
mov eax 0x80004005
cmp eax edi
je r-xdata
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] edi
call sub_4013f8
cmp [ ebp + 0x67 ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
call sub_403e13
push [ ebp + 0x3c ]
call ??3@YAXPAX@Z
push [ ebp + 0x10 ]
call ??3@YAXPAX@Z
push [ ebp + 0x1c ]
call ??3@YAXPAX@Z
push [ ebp + 0x48 ]
call ??3@YAXPAX@Z
add esp 0x10
cmp esi edi
je r-xdata
mov eax [ ebp + 0x54 ]
mov [ ebp + 0x5e ] 0x0
mov [ ebp - 0x40 ] eax
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp + 0x28 ]
push eax
call sub_404063
pop ecx
pop ecx
cmp [ rw-data ] 0xffffffff
jne r-xdata
push 0x8
jmp r-xdata
mov eax [ esi ]
push esi
call [ eax + 0x8 ]
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0x3c ]
lea eax [ ebp + 0x28 ]
push eax
call sub_4023f9
mov edi eax
add esp 0xc
test edi edi
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] edi
jle r-xdata
cmp [ ebp + 0x66 ] 0x0
jne r-xdata
push edi
lea ecx [ ebp - 0x2c ]
call sub_401310
lea eax [ ebp - 0x2c ]
push eax
call sub_403b30
mov esi [ ebp - 0x2c ]
pop ecx
xor edi edi
mov edi [ ebp - 0x40 ]
inc edi
inc edi
movzx eax [ edi ]
cmp ax 0x30
mov [ ebp - 0x40 ] edi
jb r-xdata
push [ ebp - 0x2c ]
call ??3@YAXPAX@Z
push [ ebp + 0x4 ]
call ??3@YAXPAX@Z
pop ecx
pop ecx
jmp r-xdata
mov edi r--data
push edi
push r--data
lea eax [ ebp - 0x5c ]
push rw-data
push eax
call sub_403f02
add esp 0xc
push eax
lea eax [ ebp - 0xc8 ]
push eax
call sub_403f02
add esp 0xc
push eax
lea ecx [ ebp + 0x4 ]
call sub_401349
push [ ebp - 0xc8 ]
call ??3@YAXPAX@Z
push [ ebp - 0x5c ]
call ??3@YAXPAX@Z
pop ecx
pop ecx
push [ ebp + 0x4 ]
call [ GetFileAttributesW@IAT ]
cmp eax 0xffffffff
je r-xdata
cmp [ ebp + 0x64 ] 0x0
jne r-xdata
push 0x0
lea eax [ ebp + 0x28 ]
push r--data
push eax
call sub_4023f9
mov edi eax
add esp 0xc
test edi edi
je r-xdata
mov [ rw-data ] 0x1
push edi
push r--data
push esi
call sub_403b8d
add esp 0xc
cmp eax edi
je r-xdata
mov esi eax
mov [ ebp + 0x5f ] 0x1
jmp r-xdata
cmp ax 0x61
jb r-xdata
cmp ax 0x39
jbe r-xdata
cmp [ rw-data ] edi
jne r-xdata
call sub_403e13
push 0xf
push 0x0
call sub_40775e
push [ ebp - 0x2c ]
call ??3@YAXPAX@Z
push [ ebp + 0x4 ]
call ??3@YAXPAX@Z
push [ ebp - 0x10 ]
call ??3@YAXPAX@Z
push [ ebp + 0x3c ]
call ??3@YAXPAX@Z
push [ ebp + 0x10 ]
call ??3@YAXPAX@Z
push [ ebp + 0x1c ]
call ??3@YAXPAX@Z
push [ ebp + 0x48 ]
call ??3@YAXPAX@Z
add esp 0x24
test esi esi
je r-xdata
mov [ ebp + 0x5e ] 0x1
push [ ebp + 0x3c ]
call ??3@YAXPAX@Z
push [ ebp + 0x10 ]
call ??3@YAXPAX@Z
push [ ebp + 0x1c ]
call ??3@YAXPAX@Z
push [ ebp + 0x48 ]
call ??3@YAXPAX@Z
add esp 0x10
test esi esi
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov eax 0x3e7
cmp [ rw-data ] eax
jle r-xdata
push edi
push r--data
push esi
call sub_403b8d
add esp 0xc
cmp eax edi
je r-xdata
mov esi eax
mov al [ rw-data ]
mov [ ebp + 0x67 ] al
jmp r-xdata
push edi
push r--data
push esi
call sub_403b8d
add esp 0xc
cmp eax edi
je r-xdata
cmp ax 0x41
jb r-xdata
cmp ax 0x7a
jbe r-xdata
push r--data
lea ecx [ ebp + 0x3c ]
call sub_401310
movzx eax [ edi ]
push eax
lea ecx [ ebp + 0x3c ]
call sub_401410
push [ ebp - 0x2c ]
and [ ebp - 0x4 ] 0x0
call ??3@YAXPAX@Z
push [ ebp + 0x4 ]
call ??3@YAXPAX@Z
pop ecx
pop ecx
push [ ebp - 0x10 ]
call ??3@YAXPAX@Z
pop ecx
call sub_40400c
push [ ebp - 0x44 ]
lea eax [ ebp + 0x28 ]
push [ ebp + 0x54 ]
push r--data
push eax
push sub_404c21
call sub_4044fa
add esp 0x14
push [ rw-data ]
call [ SetCurrentDirectoryW@IAT ]
push [ ebp - 0x3c ]
lea eax [ ebp + 0x28 ]
push [ ebp + 0x54 ]
push r--data
push eax
push sub_4044cb
call sub_4044fa
add esp 0x14
call sub_403e13
push 0x7
jmp r-xdata
mov eax [ esi ]
push esi
call [ eax + 0x8 ]
push [ ebp - 0x74 ]
call ??3@YAXPAX@Z
pop ecx
lea ecx [ ebp + 0x28 ]
call sub_403db3
push [ ebp - 0x80 ]
call ??3@YAXPAX@Z
push [ ebp - 0x50 ]
call ??3@YAXPAX@Z
pop ecx
pop ecx
xor eax eax
jmp r-xdata
mov eax [ esi ]
push esi
call [ eax + 0x8 ]
push 0x0
lea eax [ ebp + 0x28 ]
push r--data
push eax
call sub_4023f9
add esp 0xc
test eax eax
je r-xdata
lea ecx [ ebp - 0x110 ]
call sub_403f20
push 0x0
push edi
push [ rw-data ]
lea ecx [ ebp - 0x110 ]
push 0x11
call sub_4073b9
push [ ebp - 0xd4 ]
call ??3@YAXPAX@Z
pop ecx
lea ecx [ ebp - 0x110 ]
call sub_406632
mov [ rw-data ] eax
push 0x2
push r--data
push esi
call sub_403b8d
mov ebx eax
add esp 0xc
cmp ebx edi
je r-xdata
mov esi eax
mov [ ebp + 0x67 ] 0x1
jmp r-xdata
push [ ebp - 0x2c ]
call ??3@YAXPAX@Z
push [ ebp + 0x4 ]
call ??3@YAXPAX@Z
pop ecx
pop ecx
jmp r-xdata
cmp ax 0x5a
ja r-xdata
lea ecx [ ebp + 0x4 ]
mov [ ebp - 0x20 ] edi
mov [ ebp + 0x5f ] 0x0
mov [ ebp + 0x67 ] 0x0
call sub_4013f8
lea ecx [ ebp - 0x2c ]
call sub_4013f8
cmp [ ebp + 0x40 ] edi
jne r-xdata
cmp [ eax ] 0x31
jne r-xdata
push 0x3
push r--data
push esi
call sub_403b8d
add esp 0xc
cmp eax edi
je r-xdata
cmp [ rw-data ] 0xffffffff
jne r-xdata
xor edi edi
sub esp 0xc
mov ecx esp
push rw-data
call sub_4012de
call sub_4047c0
add esp 0xc
push 0x3
push r--data
push esi
call sub_403b8d
add esp 0xc
cmp eax edi
je r-xdata
movzx ecx [ esi + 0x6 ]
sub ecx 0x30
mov [ ebp - 0x44 ] ecx
jmp r-xdata
mov esi ebx
jmp r-xdata
add esi 0x4
push esi
call [ _wtol@IAT ]
pop ecx
mov [ rw-data ] eax
push edi
push r--data
push esi
call sub_403b8d
add esp 0xc
cmp eax edi
jne r-xdata
movzx ecx [ esi + 0x6 ]
sub ecx 0x30
mov [ ebp - 0x3c ] ecx
mov esi eax
jmp r-xdata
mov esi eax
mov [ ebp - 0x20 ] 0x1
jmp r-xdata
push edi
push r--data
push esi
call sub_403b8d
add esp 0xc
cmp eax edi
jne r-xdata
push edi
push r--data
push esi
call sub_403b8d
add esp 0xc
cmp eax edi
jne r-xdata
mov esi eax
mov [ ebp - 0x20 ] 0x2
jmp r-xdata
push edi
push r--data
push esi
call sub_403b8d
add esp 0xc
cmp eax edi
je r-xdata
cmp [ ebp + 0x65 ] 0x0
lea ecx [ ebp + 0x4 ]
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
call sub_401349
cmp [ esi ] 0x22
je r-xdata
mov ebx [ ebp + 0x4 ]
lea eax [ ebp - 0x1c ]
push eax
push ebx
call sub_4040b9
pop ecx
pop ecx
push eax
lea ecx [ ebp - 0x38 ]
call sub_401310
lea eax [ ebp - 0x1c ]
push eax
call sub_403b30
cmp [ rw-data ] edi
mov eax [ ebp - 0x1c ]
pop ecx
mov [ ebp - 0xac ] eax
jne r-xdata
mov [ ebp - 0xa0 ] edi
mov [ ebp - 0xb8 ] 0x8740
push esi
call sub_401310
mov ebx r--data
push ebx
call sub_401310
push esi
lea ecx [ ebp + 0x4 ]
call sub_4024f3
push ebx
lea ecx [ ebp + 0x4 ]
call sub_4024f3
jmp r-xdata
cmp [ ebp + 0x65 ] 0x0
jne r-xdata
push [ ebp - 0x20 ]
call sub_4021a9
test eax eax
pop ecx
je r-xdata
lea ecx [ ebp - 0x1c ]
call sub_4013f8
lea ecx [ ebp - 0x38 ]
call sub_4013f8
push 0x3c
pop esi
push esi
lea eax [ ebp - 0xbc ]
push edi
push eax
call memset
mov eax [ rw-data ]
add esp 0xc
cmp [ ebp + 0x5f ] 0x0
mov [ ebp - 0xbc ] esi
mov [ ebp - 0xa4 ] eax
mov [ ebp - 0xb8 ] 0x740
mov [ ebp - 0xa0 ] 0x1
je r-xdata
push r--data
lea ecx [ ebp + 0x4 ]
call sub_4024f3
jmp r-xdata
push edi
lea eax [ ebp + 0x28 ]
push r--data
push eax
call sub_4023f9
mov esi eax
add esp 0xc
cmp esi edi
je r-xdata
push [ ebp - 0x38 ]
call ??3@YAXPAX@Z
push [ ebp - 0x1c ]
call ??3@YAXPAX@Z
push [ ebp - 0x2c ]
call ??3@YAXPAX@Z
push ebx
call ??3@YAXPAX@Z
mov esi [ ebp + 0x60 ]
add esp 0x10
cmp [ ebp + 0x5e ] 0x0
jne r-xdata
mov esi [ ebp + 0x58 ]
cmp [ esi ] di
je r-xdata
push esi
lea ecx [ ebp + 0x4 ]
call sub_4024f3
mov eax [ ebp - 0x10 ]
mov [ ebp - 0xc ] edi
mov [ eax ] di
push [ ebp - 0x38 ]
inc [ ebp - 0x4 ]
call ??3@YAXPAX@Z
push [ ebp - 0x1c ]
call ??3@YAXPAX@Z
push [ ebp - 0x2c ]
call ??3@YAXPAX@Z
push ebx
call ??3@YAXPAX@Z
mov esi [ ebp + 0x60 ]
add esp 0x10
jmp r-xdata
lea eax [ ebp - 0x38 ]
push eax
call sub_403b30
cmp [ ebp - 0x34 ] edi
pop ecx
je r-xdata
push 0x20
lea ecx [ ebp - 0x38 ]
call sub_401410
push esi
lea ecx [ ebp - 0x38 ]
call sub_4024f3
cmp [ esi ] di
je r-xdata
xor edi edi
jmp r-xdata
lea eax [ ebp - 0xbc ]
push eax
call [ ShellExecuteExW@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x38 ]
mov [ ebp - 0xa8 ] eax
inc esi
inc esi
cmp [ esi ] di
jne r-xdata
push ebx
push 0x10
push 0x1
call sub_40775e
call sub_403e13
push [ ebp - 0x38 ]
call ??3@YAXPAX@Z
push [ ebp - 0x1c ]
call ??3@YAXPAX@Z
push [ ebp - 0x2c ]
call ??3@YAXPAX@Z
push ebx
call ??3@YAXPAX@Z
push [ ebp - 0x10 ]
call ??3@YAXPAX@Z
push [ ebp + 0x3c ]
call ??3@YAXPAX@Z
push [ ebp + 0x10 ]
call ??3@YAXPAX@Z
push [ ebp + 0x1c ]
call ??3@YAXPAX@Z
push [ ebp + 0x48 ]
call ??3@YAXPAX@Z
mov eax [ ebp + 0x60 ]
add esp 0x30
cmp eax edi
je r-xdata
cmp [ ebp + 0x67 ] 0x0
jne r-xdata
mov [ ebp + 0x58 ] esi
push 0x9
jmp r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
push [ ebp - 0x84 ]
call [ CloseHandle@IAT ]
call sub_402141
push 0xffffffff
push [ ebp - 0x84 ]
call [ WaitForSingleObject@IAT ]
sub_40646e
mov eax sub_4126bb
call sub_4121e4
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x10 ] esp
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_404f5a
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn 0x10
sub_4064ce
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi ]
test eax eax
je r-xdata
and [ esi ] 0x0
xor eax eax
pop esi
retn
push eax
call [ CloseHandle@IAT ]
test eax eax
jne r-xdata
pop esi
jmp sub_4064b4
sub_4064fe
push ebp
mov ebp esp
push ecx
lea eax [ ebp - 0x4 ]
push eax
xor eax eax
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
push eax
call [ _beginthreadex@IAT ]
mov ecx [ ebp + 0x8 ]
push eax
mov [ ecx ] eax
call sub_4064c0
add esp 0x1c
leave
retn
sub_406527
xor eax eax
xor ecx ecx
cmp [ esp + 0xc ] eax
push eax
setne cl
push ecx
push [ esp + 0x10 ]
push eax
call [ CreateEventW@IAT ]
mov ecx [ esp + 0x4 ]
push eax
mov [ ecx ] eax
call sub_4064c0
pop ecx
retn
sub_4065d9
xor eax eax
push esi
mov esi ecx
mov [ esi ] r--data
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
mov [ esi + 0x10 ] eax
mov [ esi + 0xc ] eax
mov [ esi + 0x1c ] 0x18
mov [ esi + 0x38 ] eax
cmp [ rw-data ] eax
jne r-xdata
mov eax esi
pop esi
retn
cmp [ rw-data ] eax
jne r-xdata
push edi
mov edi [ GetSystemMetrics@IAT ]
push 0x10
call edi
cdq
sub eax edx
sar eax 0x1
push 0x11
mov [ rw-data ] eax
call edi
cdq
sub eax edx
sar eax 0x1
mov [ rw-data ] eax
pop edi
sub_406639
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
push 0xffffffeb
push edi
call [ GetWindowLongW@IAT ]
mov esi [ ebp + 0x14 ]
mov ebx eax
test ebx ebx
jne r-xdata
mov eax [ ebx ]
push esi
push [ ebp + 0x10 ]
mov ecx ebx
push [ ebp + 0xc ]
call [ eax + 0x28 ]
jmp r-xdata
cmp [ ebp + 0xc ] 0x110
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
xor eax eax
push esi
push 0xffffffeb
push edi
mov ebx esi
call [ SetWindowLongW@IAT ]
push 0x0
push 0x0
push 0x31
push edi
mov [ esi + 0x4 ] edi
call [ SendMessageW@IAT ]
mov [ esi + 0x34 ] eax
sub_406695
mov eax [ esp + 0x4 ]
dec eax
dec eax
je r-xdata
mov eax [ ecx ]
call [ eax + 0x10 ]
sub eax 0x10e
je r-xdata
mov eax [ ecx ]
call [ eax + 0xc ]
jmp r-xdata
dec eax
jne r-xdata
retn 0xc
xor eax eax
movzx edx [ esp + 0x8 ]
mov eax [ ecx ]
push edx
call [ eax + 0x14 ]
jmp r-xdata
sub_4066c5
push ebp
mov ebp esp
sub esp 0x10
lea eax [ ebp - 0x10 ]
push eax
push [ ecx + 0x4 ]
call [ GetWindowRect@IAT ]
mov eax [ ebp - 0x8 ]
sub eax [ ebp - 0x10 ]
cdq
sub eax edx
sar eax 0x1
add eax [ ebp - 0x10 ]
mov [ rw-data ] eax
mov eax [ ebp - 0x4 ]
sub eax [ ebp - 0xc ]
cdq
sub eax edx
sar eax 0x1
add eax [ ebp - 0xc ]
mov [ rw-data ] eax
leave
retn
sub_406700
mov eax [ esp + 0x4 ]
dec eax
dec eax
je r-xdata
mov eax [ ecx ]
call [ eax + 0x1c ]
sub eax 0x4b1
je r-xdata
mov eax [ ecx ]
call [ eax + 0x18 ]
jmp r-xdata
dec eax
je r-xdata
retn 0x4
sub eax 0x5
jne r-xdata
push eax
mov [ rw-data ] 0x1
push [ ecx + 0x4 ]
call [ EndDialog@IAT ]
jmp r-xdata
sub_406739
push ebx
push ebp
push esi
push edi
mov edi [ GetDlgItem@IAT ]
mov esi ecx
push 0x4b3
push [ esi + 0x4 ]
call edi
mov ebx [ SendMessageW@IAT ]
push 0x1
push 0x0
mov ebp 0xf4
push ebp
push eax
call ebx
push 0x4b4
push [ esi + 0x4 ]
call edi
push 0x1
push 0x0
push ebp
push eax
call ebx
push 0x0
push [ esp + 0x18 ]
push 0x401
push [ esi + 0x4 ]
call ebx
push [ esp + 0x14 ]
push [ esi + 0x4 ]
call edi
push 0x1
push 0x1
push ebp
push eax
call ebx
push [ esp + 0x14 ]
push [ esi + 0x4 ]
call edi
push eax
call [ SetFocus@IAT ]
pop edi
pop esi
pop ebp
pop ebx
retn 0x4
sub_4067ac
push ebp
mov ebp esp
sub esp 0x208
and [ ebp - 0x4 ] 0x0
push edi
push 0x0
mov edi ecx
lea ecx [ ebp - 0x208 ]
mov eax 0x1f4
push ecx
push eax
push 0x29
mov [ ebp - 0x208 ] eax
call [ SystemParametersInfoW@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
leave
retn 0x8
test [ rw-data ] 0x200
mov eax [ edi + 0x1c ]
mov ecx [ ebp - 0x1f8 ]
push ebx
push esi
lea esi [ eax + ecx - 0x1a ]
jne r-xdata
lea eax [ ebp - 0x1f0 ]
push eax
call [ CreateFontIndirectW@IAT ]
mov ebx eax
test ebx ebx
je r-xdata
push 0x31
call [ GetSystemMetrics@IAT ]
add esi eax
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0x1f4 ]
mov [ eax ] esi
pop esi
mov [ eax + 0x4 ] ecx
pop ebx
mov eax [ edi ]
push 0x860
push ebx
lea ecx [ ebp - 0x14 ]
push ecx
push [ ebp + 0x8 ]
mov ecx edi
call [ eax + 0x8 ]
test eax eax
je r-xdata
push ebx
call [ DeleteObject@IAT ]
add esi [ ebp - 0xc ]
mov [ ebp - 0x4 ] 0x1
sub_406855
push ebp
mov ebp esp
sub esp 0x10
push esi
mov esi ecx
push [ esi + 0x4 ]
call [ GetParent@IAT ]
test eax eax
jne r-xdata
pop esi
leave
retn
lea eax [ ebp - 0x10 ]
push eax
push [ esi + 0x4 ]
call [ GetWindowRect@IAT ]
mov eax [ ebp - 0x4 ]
sub eax [ ebp - 0xc ]
push 0x5
cdq
sub eax edx
mov edx [ rw-data ]
sar eax 0x1
sub edx eax
mov eax [ ebp - 0x8 ]
sub eax [ ebp - 0x10 ]
xor ecx ecx
push ecx
push ecx
push edx
cdq
sub eax edx
mov edx [ rw-data ]
sar eax 0x1
sub edx eax
push edx
push ecx
push [ esi + 0x4 ]
call [ SetWindowPos@IAT ]
sub_4068eb
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
xor eax eax
inc eax
push [ esp + 0x4 ]
push [ ecx + 0x4 ]
call [ GetDlgItem@IAT ]
test eax eax
je r-xdata
retn 0x8
mov ecx [ esp + 0x8 ]
neg ecx
sbb ecx ecx
and ecx 0x5
push ecx
push eax
call [ ShowWindow@IAT ]
jmp r-xdata
sub_40691d
push ebp
mov ebp esp
sub esp 0xc
push [ ecx + 0x4 ]
and [ ebp - 0x8 ] 0x0
mov [ ebp - 0xc ] ecx
call [ GetDC@IAT ]
test eax eax
mov [ ebp - 0x4 ] eax
je r-xdata
mov eax [ ebp - 0x8 ]
leave
retn 0x10
push ebx
push esi
mov esi [ GetSystemMetrics@IAT ]
push edi
push 0xb
call esi
push 0xffffffc4
pop ebx
push 0x3d
sub ebx eax
call esi
mov edi eax
push 0x3e
add edi ebx
call esi
push [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
push [ ebp - 0x4 ]
mov ebx eax
xor eax eax
sub ebx 0x78
mov [ esi + 0xc ] eax
mov [ esi + 0x4 ] eax
mov [ esi ] eax
mov [ esi + 0x8 ] edi
call [ SelectObject@IAT ]
mov [ ebp + 0xc ] eax
mov eax [ ebp + 0x14 ]
or eax 0x400
push eax
push esi
push 0xffffffff
push [ ebp + 0x8 ]
push [ ebp - 0x4 ]
call [ DrawTextW@IAT ]
xor ecx ecx
test eax eax
setg cl
cmp edi [ esi + 0x8 ]
mov [ ebp - 0x8 ] ecx
jge r-xdata
cmp ebx [ esi + 0xc ]
jge r-xdata
mov [ esi + 0x8 ] edi
push [ ebp + 0xc ]
push [ ebp - 0x4 ]
call [ SelectObject@IAT ]
push [ ebp - 0x4 ]
mov eax [ ebp - 0xc ]
push [ eax + 0x4 ]
call [ ReleaseDC@IAT ]
pop edi
pop esi
pop ebx
mov [ esi + 0xc ] ebx
sub_4069d7
push ebp
mov ebp esp
mov eax [ ebp + 0x1c ]
or eax 0x4
push eax
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push 0x0
push [ ebp + 0x8 ]
push [ ecx + 0x4 ]
call [ GetDlgItem@IAT ]
push eax
call [ SetWindowPos@IAT ]
pop ebp
retn 0x18
sub_406a06
push ebp
mov ebp esp
sub esp 0x2c
and [ ebp - 0xc ] 0x0
and [ ebp - 0x10 ] 0x0
push ebx
mov ebx [ GetDlgItem@IAT ]
push esi
push edi
mov edi 0x4b3
mov esi ecx
push edi
push [ esi + 0x4 ]
call ebx
push 0xfffffff0
push eax
call [ GetWindowLongW@IAT ]
test eax 0x10000000
je r-xdata
mov edi 0x4b4
push edi
push [ esi + 0x4 ]
call ebx
push 0xfffffff0
push eax
call [ GetWindowLongW@IAT ]
test eax 0x10000000
je r-xdata
lea eax [ ebp - 0x2c ]
push eax
push edi
mov ecx esi
call sub_4068ce
mov eax [ ebp - 0x24 ]
sub eax [ ebp - 0x2c ]
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x20 ]
sub eax [ ebp - 0x28 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x10 ]
test eax eax
je r-xdata
lea eax [ ebp - 0x2c ]
push eax
push edi
mov ecx esi
call sub_4068ce
mov eax [ ebp - 0x24 ]
sub eax [ ebp - 0x2c ]
mov [ ebp - 0x1c ] edi
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x20 ]
sub eax [ ebp - 0x28 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0xc ]
test ecx ecx
je r-xdata
mov edi [ GetSystemMetrics@IAT ]
sub eax 0x1a
push 0x10
mov [ ebp - 0x4 ] eax
call edi
push 0x11
mov ebx eax
call edi
push 0x8
mov [ ebp - 0x18 ] eax
call edi
add [ esi + 0x14 ] eax
push 0x7
call edi
add [ esi + 0x18 ] eax
mov ecx [ esi + 0x18 ]
push [ esi + 0x4 ]
mov eax ebx
sub eax [ esi + 0x14 ]
cdq
sub eax edx
mov ebx eax
mov eax [ ebp - 0x18 ]
sub eax ecx
cdq
sub eax edx
sar eax 0x1
sar ebx 0x1
mov [ ebp - 0x8 ] eax
call [ GetParent@IAT ]
test eax eax
mov [ ebp - 0x18 ] eax
je r-xdata
mov [ esi + 0x14 ] eax
mov [ ebp - 0x4 ] eax
lea eax [ ecx + eax + 0xa ]
jmp r-xdata
push 0x4
push [ esi + 0x18 ]
push [ esi + 0x14 ]
push [ ebp - 0x8 ]
push ebx
push 0x0
push [ esi + 0x4 ]
call [ SetWindowPos@IAT ]
xor ebx ebx
cmp [ esi + 0x30 ] ebx
mov ecx esi
je r-xdata
lea ecx [ ebp - 0x2c ]
push ecx
push eax
call [ GetClientRect@IAT ]
mov ebx [ ClientToScreen@IAT ]
lea eax [ ebp - 0x2c ]
push eax
push [ ebp - 0x18 ]
call ebx
lea eax [ ebp - 0x24 ]
push eax
push [ ebp - 0x18 ]
call ebx
mov ebx [ ebp - 0x2c ]
mov eax [ ebp - 0x24 ]
mov edx [ esi + 0x14 ]
mov ecx [ ebp - 0x28 ]
sub eax ebx
cmp eax edx
mov [ ebp - 0x8 ] ecx
jle r-xdata
add eax 0x1a
cmp eax [ esi + 0x14 ]
jle r-xdata
mov eax [ esi + 0x2c ]
push ebx
inc eax
push eax
mov eax [ esi + 0x28 ]
inc eax
push eax
push 0xa
push 0xc
push 0x1
push ebx
push ebx
push 0xc
push 0xc
push 0x4b1
call sub_4069d7
lea eax [ ebp - 0x2c ]
push eax
push 0x4b1
mov ecx esi
call sub_4068ce
mov ecx [ esi + 0x2c ]
push 0x2
pop eax
sub eax [ ebp - 0x28 ]
add [ ebp - 0x20 ] eax
cmp ecx [ ebp - 0x20 ]
jge r-xdata
mov eax [ ebp - 0x20 ]
mov edx [ esi + 0x18 ]
sub eax ecx
cmp eax edx
jle r-xdata
mov eax [ ebp - 0x24 ]
sub eax edx
sub eax ebx
cdq
sub eax edx
mov ebx eax
sar ebx 0x1
add ebx [ ebp - 0x2c ]
mov eax [ ebp - 0x20 ]
sub eax [ ebp - 0x14 ]
push 0x1
push ebx
sub eax 0xa
push ebx
push eax
mov eax [ ebp - 0x24 ]
sub eax [ ebp - 0x4 ]
cdq
sub eax edx
sar eax 0x1
push eax
push [ ebp - 0x1c ]
cmp [ ebp - 0xc ] ebx
je r-xdata
xor eax eax
mov eax [ ebp - 0x20 ]
sub eax ecx
cdq
sub eax edx
sar eax 0x1
jmp r-xdata
add ebx 0xa
add [ ebp - 0x8 ] 0xa
mov eax [ ebp - 0x20 ]
sub eax edx
sub eax ecx
cdq
sub eax edx
sar eax 0x1
add eax ecx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x20 ]
sub eax [ ebp - 0x14 ]
push 0x1
push ebx
sub eax 0xa
push ebx
push eax
mov eax [ ebp - 0x24 ]
sub eax [ ebp - 0x4 ]
mov ecx esi
cdq
sub eax edx
sar eax 0x1
push eax
push 0x4b3
call sub_4069d7
lea eax [ ebp - 0x2c ]
push eax
push 0x4b3
mov ecx esi
call sub_4068ce
mov eax [ ebp - 0x24 ]
push 0x1
push ebx
push ebx
push [ ebp - 0x28 ]
add eax 0xa
push eax
push 0x4b4
jmp r-xdata
push 0x4b2
call sub_4069d7
lea eax [ ebp - 0x2c ]
push eax
push [ esi + 0x4 ]
call [ GetClientRect@IAT ]
cmp [ ebp - 0x10 ] ebx
je r-xdata
inc ecx
push ebx
push ecx
mov ecx [ esi + 0x28 ]
inc ecx
push ecx
add eax 0xa
push eax
mov eax [ ebp - 0x24 ]
add eax 0xb
push eax
mov ecx esi
jmp r-xdata
mov ecx esi
call sub_4069d7
push 0x8
call edi
sub [ esi + 0x14 ] eax
push 0x7
call edi
sub [ esi + 0x18 ] eax
pop edi
pop esi
pop ebx
leave
retn
sub_406ca6
push ebp
mov ebp esp
sub esp 0x20
push esi
mov esi ecx
mov eax [ esi ]
push 0x20
push [ esi + 0x34 ]
lea ecx [ ebp - 0x20 ]
push ecx
push [ ebp + 0xc ]
mov ecx esi
call [ eax + 0x8 ]
test eax eax
je r-xdata
pop esi
leave
retn 0x8
add [ ebp - 0x18 ] 0x20
lea eax [ ebp - 0x10 ]
push eax
push [ ebp + 0x8 ]
mov ecx esi
call sub_4068ce
mov edx [ ebp - 0x8 ]
mov ecx [ ebp - 0x10 ]
mov eax [ ebp - 0x18 ]
sub edx ecx
cmp edx eax
jge r-xdata
mov edx ecx
sub edx [ ebp - 0x8 ]
push 0x0
lea eax [ edx + eax + 0x1 ]
cdq
sub eax edx
mov edx [ ebp - 0x4 ]
sub edx [ ebp - 0xc ]
sar eax 0x1
push edx
lea edx [ eax + eax ]
sub edx ecx
add edx [ ebp - 0x8 ]
sub ecx eax
push edx
push [ ebp - 0xc ]
push ecx
push [ ebp + 0x8 ]
mov ecx esi
call sub_4069d7
sub_406d1c
push esi
push r--data
mov esi ecx
call [ LoadLibraryA@IAT ]
test eax eax
je r-xdata
pop esi
retn
push ebp
push r--data
push eax
call [ GetProcAddress@IAT ]
mov ebp eax
test ebp ebp
je r-xdata
pop ebp
mov eax [ esi + 0x4 ]
push ebx
mov ebx [ GetWindow@IAT ]
push 0x5
push eax
call ebx
mov esi eax
test esi esi
je r-xdata
pop ebx
push edi
mov edi r--data
push edi
push edi
push esi
call ebp
push 0x2
push esi
call ebx
mov esi eax
test esi esi
jne r-xdata
pop edi
sub_406d71
push ebp
mov ebp esp
sub esp 0x358
push ebx
push esi
push edi
push 0x160
lea eax [ ebp - 0x164 ]
push rw-data
push eax
mov edi ecx
call memcpy
add esp 0xc
xor ebx ebx
push ebx
lea eax [ ebp - 0x358 ]
push eax
push ebx
push 0x29
mov [ ebp - 0x358 ] 0x1f4
call [ SystemParametersInfoW@IAT ]
test eax eax
je r-xdata
push ebx
call [ GetModuleHandleW@IAT ]
cmp [ edi + 0x38 ] ebx
mov esi eax
je r-xdata
push ebx
call [ GetDC@IAT ]
push 0x5a
push eax
mov [ ebp - 0x4 ] eax
call [ GetDeviceCaps@IAT ]
push eax
push 0x48
push [ ebp - 0x1c0 ]
call [ MulDiv@IAT ]
push [ ebp - 0x4 ]
mov esi eax
push ebx
neg esi
call [ ReleaseDC@IAT ]
mov ax [ ebp - 0x1b0 ]
mov [ ebp - 0x142 ] ax
mov al [ ebp - 0x1ac ]
mov [ ebp - 0x144 ] si
mov [ ebp - 0x140 ] al
lea eax [ ebp - 0x164 ]
mov [ edi + 0x38 ] ebx
movzx eax [ edi + 0x38 ]
push ebx
push eax
push 0x5
call sub_401bf8
add esp 0xc
cmp eax ebx
jne r-xdata
push edi
push sub_406639
push [ ebp + 0x8 ]
push eax
push esi
call [ DialogBoxIndirectParamW@IAT ]
pop edi
pop esi
pop ebx
leave
retn 0x4
sub_406e4d
push ebp
mov ebp esp
sub esp 0x20
push esi
push edi
mov esi ecx
call sub_406a06
lea eax [ ebp - 0x10 ]
push eax
push 0x4b3
mov ecx esi
call sub_4068ce
lea eax [ ebp - 0x20 ]
push eax
mov edi 0x4b6
push edi
mov ecx esi
call sub_4068ce
mov eax [ ebp - 0x1c ]
sub eax [ ebp - 0x14 ]
mov ecx [ ebp - 0xc ]
lea eax [ ecx + eax - 0x12 ]
mov [ ebp - 0xc ] eax
sub eax [ ebp - 0x1c ]
mov [ ebp - 0x10 ] 0xc
add eax [ ebp - 0x14 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x20 ]
push eax
push [ esi + 0x4 ]
call [ GetClientRect@IAT ]
mov eax [ ebp - 0x18 ]
sub eax [ esi + 0x44 ]
mov ecx [ ebp - 0x4 ]
sub ecx [ ebp - 0xc ]
push 0x0
sub eax 0xd
push ecx
mov [ ebp - 0x8 ] eax
sub eax [ ebp - 0x10 ]
mov ecx esi
push eax
push [ ebp - 0xc ]
push [ ebp - 0x10 ]
push edi
call sub_4069d7
mov eax [ esi + 0x44 ]
mov ecx [ ebp - 0xc ]
push 0x0
push eax
dec ecx
push eax
push ecx
mov ecx [ ebp - 0x18 ]
sub ecx eax
sub ecx 0xb
push ecx
push 0x4b7
mov ecx esi
call sub_4069d7
pop edi
pop esi
leave
retn
sub_406ef6
push ebp
mov ebp esp
sub esp 0x10
push ebx
mov ebx [ ebp + 0x8 ]
push edi
push 0xffffffeb
push ebx
call [ GetParent@IAT ]
push eax
call [ GetWindowLongW@IAT ]
mov edi eax
test edi edi
jne r-xdata
mov eax [ edi + 0x40 ]
test eax eax
je r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ebx
call [ DefWindowProcW@IAT ]
jmp r-xdata
push esi
mov esi [ GetSystemMetrics@IAT ]
push 0x31
call esi
push 0x32
mov [ ebp + 0x10 ] eax
call esi
mov [ ebp + 0x14 ] eax
mov eax [ ebp + 0xc ]
dec eax
dec eax
je r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ebx
push eax
call [ CallWindowProcW@IAT ]
mov [ ebp + 0x8 ] eax
pop edi
pop ebx
leave
retn 0x10
push [ edi + 0x40 ]
push 0xfffffffc
push ebx
call [ SetWindowLongW@IAT ]
sub eax 0xd
jne r-xdata
mov eax [ ebp + 0x8 ]
pop esi
push ebx
call [ GetWindowDC@IAT ]
mov esi eax
lea eax [ ebp - 0x10 ]
push eax
push ebx
call [ GetWindowRect@IAT ]
mov eax [ ebp - 0x4 ]
sub eax [ ebp - 0xc ]
push 0x3
sub eax [ ebp + 0x14 ]
push 0x0
push 0x0
push [ ebp + 0x14 ]
cdq
push [ ebp + 0x10 ]
sub eax edx
push [ edi + 0x3c ]
sar eax 0x1
push eax
mov eax [ ebp - 0x8 ]
sub eax [ ebp - 0x10 ]
sub eax [ ebp + 0x10 ]
cdq
sub eax edx
sar eax 0x1
push eax
push esi
call [ DrawIconEx@IAT ]
push esi
push ebx
call [ ReleaseDC@IAT ]
jmp r-xdata
sub_406fe9
push ebp
mov ebp esp
sub esp 0x5c
test [ rw-data ] 0x10
push esi
mov esi ecx
je r-xdata
pop esi
leave
retn
lea eax [ ebp - 0x5c ]
push eax
push 0x5c
push [ esi + 0x34 ]
call [ GetObjectW@IAT ]
test eax eax
je r-xdata
push edi
lea eax [ ebp - 0x5c ]
push eax
mov [ ebp - 0x4c ] 0x2bc
call [ CreateFontIndirectW@IAT ]
mov edi eax
test edi edi
je r-xdata
pop edi
push 0x4b5
push [ esi + 0x4 ]
call [ GetDlgItem@IAT ]
push 0x0
push edi
push 0x30
push eax
call [ SendMessageW@IAT ]
sub_407044
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
push edi
mov esi ecx
call sub_406a06
cmp [ rw-data ] 0x1
mov edi [ GetClientRect@IAT ]
lea eax [ ebp - 0x14 ]
push eax
jne r-xdata
push 0x4b4
mov ecx esi
call sub_4068ce
mov ebx [ ebp - 0x10 ]
push [ esi + 0x4 ]
call edi
mov ebx [ ebp - 0x8 ]
jmp r-xdata
lea eax [ ebp - 0x14 ]
push eax
mov edi 0x4b8
push edi
mov ecx esi
call sub_4068ce
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x8 ]
push 0x0
sub ecx eax
sub eax [ ebp - 0x8 ]
push ecx
push [ ebp - 0x4 ]
add eax ebx
push eax
push 0xc
push edi
mov ecx esi
call sub_4069d7
pop edi
pop esi
pop ebx
leave
retn
mov eax [ esi + 0x48 ]
push 0x0
sub ebx eax
inc eax
push eax
push ecx
push ebx
push 0xc
push 0x4b5
mov ecx esi
call sub_4069d7
sub ebx 0x5
lea eax [ ebp - 0x14 ]
push eax
push [ esi + 0x4 ]
add ebx 0xfffffff6
call edi
mov ecx [ ebp - 0xc ]
add ecx 0xffffffe8
test [ rw-data ] 0x4
mov [ ebp - 0x4 ] ecx
je r-xdata
sub_407193
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
mov esi ecx
push edi
xor edi edi
xor ebx ebx
cmp [ esi + 0x30 ] edi
mov [ esi + 0x2c ] edi
mov [ esi + 0x28 ] edi
mov [ esi + 0x24 ] edi
mov [ esi + 0x20 ] edi
je r-xdata
mov edx [ esi ]
push 0x850
push [ esi + 0x34 ]
lea eax [ esi + 0x20 ]
push eax
push [ esi + 0x10 ]
mov ecx esi
call [ edx + 0x8 ]
test eax eax
je r-xdata
mov ebx [ GetSystemMetrics@IAT ]
push 0xb
call ebx
mov edi eax
push 0xc
add edi 0xb
call ebx
mov ebx eax
inc ebx
inc ebx
lea eax [ ebp - 0x8 ]
push eax
push [ esi + 0xc ]
mov ecx esi
call sub_4067ac
test eax eax
je r-xdata
mov eax [ esi + 0x2c ]
add edi [ esi + 0x28 ]
cmp eax ebx
jle r-xdata
lea eax [ ebp - 0x18 ]
push eax
push 0x4b3
mov ecx esi
call sub_4068ce
mov eax [ ebp - 0xc ]
add edi 0x1a
sub eax [ ebp - 0x14 ]
mov [ esi + 0x14 ] edi
lea eax [ eax + ebx + 0x26 ]
pop edi
mov [ esi + 0x18 ] eax
pop esi
pop ebx
leave
retn
cmp [ ebp - 0x8 ] edi
jle r-xdata
mov ebx eax
add ebx [ ebp - 0x4 ]
mov edi [ ebp - 0x8 ]
sub_407235
push esi
push [ esp + 0x8 ]
mov esi ecx
push [ esi + 0x4 ]
call [ GetDlgItem@IAT ]
push eax
call [ GetWindowTextLengthW@IAT ]
test eax eax
jne r-xdata
pop esi
retn 0x8
push [ esp + 0xc ]
mov ecx esi
push [ esp + 0xc ]
call sub_4070f3
sub_407263
push ebp
mov ebp esp
sub esp 0x10
push esi
push edi
mov esi ecx
call sub_407193
mov edi [ GetSystemMetrics@IAT ]
push 0x7
call edi
mov ecx [ rw-data ]
sub ecx eax
cmp [ esi + 0x14 ] ecx
jge r-xdata
lea eax [ ebp - 0x10 ]
push eax
push 0x4b6
mov ecx esi
call sub_4068ce
mov eax [ ebp - 0x4 ]
sub eax [ ebp - 0xc ]
pop edi
add eax 0xe
add [ esi + 0x18 ] eax
pop esi
leave
retn
push 0x7
call edi
mov ecx [ rw-data ]
sub ecx eax
mov [ esi + 0x14 ] ecx
sub_4072b8
push esi
push edi
mov esi 0x4b6
mov edi ecx
push esi
push [ edi + 0x4 ]
call [ GetDlgItem@IAT ]
push eax
call [ SetFocus@IAT ]
push [ rw-data ]
mov ecx edi
push esi
call sub_4070f3
mov eax [ rw-data ]
push eax
push eax
push 0xb1
push esi
mov ecx edi
call sub_4065b6
pop edi
pop esi
retn
sub_4072f7
push ebp
mov ebp esp
sub esp 0xc
push esi
push edi
mov esi ecx
call sub_407263
xor eax eax
push 0x4b5
push [ esi + 0x4 ]
lea edi [ esi + 0x48 ]
mov [ esi + 0x54 ] eax
mov [ esi + 0x50 ] eax
mov [ esi + 0x4c ] eax
mov [ edi ] eax
call [ GetDlgItem@IAT ]
push eax
lea eax [ ebp - 0xc ]
push eax
call sub_402d23
mov eax [ esi ]
pop ecx
pop ecx
push 0x850
push [ esi + 0x34 ]
mov ecx esi
push edi
push [ ebp - 0xc ]
call [ eax + 0x8 ]
test eax eax
je r-xdata
push [ ebp - 0xc ]
call ??3@YAXPAX@Z
pop ecx
pop edi
pop esi
leave
retn
mov eax [ esi + 0x50 ]
add eax 0x1a
cmp eax [ esi + 0x14 ]
jle r-xdata
mov eax [ esi + 0x54 ]
add eax 0x9
add [ esi + 0x18 ] eax
mov [ esi + 0x14 ] eax
sub_40736b
push ebp
mov ebp esp
sub esp 0x10
push esi
mov esi ecx
call sub_406e4d
lea eax [ ebp - 0x10 ]
push eax
push 0x4b6
mov ecx esi
call sub_4068ce
mov eax [ esi + 0x54 ]
push 0x0
lea ecx [ eax + 0x1 ]
push ecx
mov ecx [ esi + 0x50 ]
inc ecx
push ecx
mov ecx [ ebp - 0xc ]
sub ecx eax
sub ecx 0x5
push ecx
push [ ebp - 0x10 ]
mov ecx esi
push 0x4b5
call sub_4069d7
mov ecx esi
call sub_4072b8
pop esi
leave
retn
sub_4073b9
push ebp
mov ebp esp
sub esp 0x18
cmp [ ebp + 0xc ] 0x0
push esi
mov esi ecx
je r-xdata
xor eax eax
cmp [ ebp + 0x10 ] 0x0
je r-xdata
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x18 ]
call sub_4024ba
push [ ebp + 0xc ]
lea ecx [ ebp - 0xc ]
call sub_4024ba
lea eax [ ebp - 0x18 ]
push eax
call sub_403b30
lea eax [ ebp - 0xc ]
push eax
call sub_403b30
mov eax [ ebp + 0x8 ]
mov [ esi + 0x8 ] eax
mov eax [ ebp - 0xc ]
pop ecx
mov [ esi + 0xc ] eax
mov eax [ ebp - 0x18 ]
pop ecx
push [ ebp + 0x14 ]
mov [ esi + 0x10 ] eax
mov eax [ esi ]
mov ecx esi
call [ eax + 0x4 ]
push [ ebp - 0xc ]
mov esi eax
call ??3@YAXPAX@Z
push [ ebp - 0x18 ]
call ??3@YAXPAX@Z
pop ecx
pop ecx
mov eax esi
jmp r-xdata
pop esi
leave
retn 0x10
sub_407433
test [ rw-data ] 0x100
jne r-xdata
mov eax [ esp + 0x4 ]
test eax eax
je r-xdata
xor eax eax
inc eax
jmp r-xdata
xor eax eax
jmp r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
retn 0x4
push eax
push [ rw-data ]
push [ rw-data ]
push 0x8
call sub_4073b9
mov eax [ eax + 0x4 ]
sub_407472
push ebp
mov ebp esp
sub esp 0x230
push esi
push edi
push 0x20
lea eax [ ebp - 0x24 ]
push 0x0
push eax
mov esi ecx
call memset
mov eax [ esi + 0x4 ]
mov [ ebp - 0x24 ] eax
add esp 0xc
lea eax [ ebp - 0x24 ]
push eax
mov [ ebp - 0x14 ] 0x1
call [ SHBrowseForFolderW@IAT ]
mov edi eax
test edi edi
je r-xdata
pop edi
pop esi
leave
retn
and [ ebp - 0x230 ] 0x0
lea eax [ ebp - 0x230 ]
push eax
push edi
call [ SHGetPathFromIDListW@IAT ]
test eax eax
je r-xdata
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x4 ]
push eax
call [ SHGetMalloc@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x230 ]
push eax
mov ecx rw-data
call sub_401310
mov ecx esi
call sub_4072b8
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov ecx [ eax ]
push edi
push eax
call [ ecx + 0x14 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
sub_40750b
push ebp
mov ebp esp
sub esp 0x3c
push esi
mov esi ecx
push edi
lea ecx [ ebp - 0x3c ]
call sub_4065d9
push 0x8
mov ecx esi
mov [ ebp - 0x3c ] r--data
call sub_406fd0
push esi
lea ecx [ ebp - 0x3c ]
call sub_407433
push 0x2
mov ecx esi
mov edi eax
call sub_406fd0
mov eax edi
pop edi
pop esi
leave
retn
sub_407547
push ebx
push ebp
push esi
xor ebx ebx
cmp [ rw-data ] ebx
push edi
mov edi [ EndDialog@IAT ]
mov esi ecx
je r-xdata
xor ebp ebp
inc ebp
cmp [ rw-data ] ebx
je r-xdata
push ebx
push [ esi + 0x4 ]
call edi
cmp [ rw-data ] ebp
je r-xdata
push ebp
push [ esi + 0x4 ]
call [ KillTimer@IAT ]
test [ rw-data ] 0x100
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn
mov ebx [ rw-data ]
test ebx ebx
je r-xdata
push ebx
push [ esi + 0x4 ]
jmp r-xdata
mov ecx esi
call sub_40750b
test eax eax
jne r-xdata
push ebx
call [ SuspendThread@IAT ]
test [ rw-data ] 0x100
je r-xdata
call edi
mov eax [ rw-data ]
imul eax eax 0xa
push ebx
push eax
push ebp
push [ esi + 0x4 ]
call [ SetTimer@IAT ]
push 0x16
push ebx
mov [ rw-data ] ebp
call [ TerminateThread@IAT ]
push 0x0
push [ esi + 0x4 ]
mov ecx esi
call sub_40750b
test eax eax
jne r-xdata
push ebx
call [ ResumeThread@IAT ]
jmp r-xdata
sub_4075fb
push ebp
mov ebp esp
mov eax [ rw-data ]
sub esp 0x58
push esi
mov ecx eax
and ecx 0x1000
mov esi ecx
neg esi
sbb esi esi
and esi 0x3
test ax 0x800
je r-xdata
test ecx ecx
je r-xdata
add esi 0x4
jmp r-xdata
add esi 0x8
add esi 0x10
jmp r-xdata
test al 0x40
jne r-xdata
lea ecx [ ebp - 0x58 ]
call sub_407145
lea ecx [ ebp - 0x58 ]
lea ecx [ ebp - 0x3c ]
call sub_407113
lea ecx [ ebp - 0x3c ]
jmp r-xdata
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push esi
call sub_4073b9
pop esi
leave
retn
sub_40765c
push ebp
mov ebp esp
sub esp 0x48
test [ rw-data ] 0x400
push esi
push 0x3
pop esi
je r-xdata
lea ecx [ ebp - 0x48 ]
call sub_40712c
push 0x0
push [ ebp + 0xc ]
lea ecx [ ebp - 0x48 ]
push [ ebp + 0x8 ]
push esi
call sub_4073b9
pop esi
leave
retn
push 0x7
pop esi
sub_407690
push ebp
mov ebp esp
sub esp 0x3c
cmp [ rw-data ] 0x0
jne r-xdata
leave
retn
lea ecx [ ebp - 0x3c ]
mov [ rw-data ] 0x1
call sub_4065d9
push [ rw-data ]
mov [ ebp - 0x3c ] r--data
call [ IsWindow@IAT ]
test eax eax
je r-xdata
push [ rw-data ]
lea ecx [ ebp - 0x3c ]
push [ ebp + 0x8 ]
push [ rw-data ]
push 0xd
call sub_4073b9
push 0x68
push [ rw-data ]
call [ IsBadReadPtr@IAT ]
test eax eax
jne r-xdata
mov ecx [ rw-data ]
push 0x4
call sub_406fd0
sub_4076ff
push ebp
mov ebp esp
sub esp 0x3c
lea ecx [ ebp - 0x3c ]
call sub_4065d9
push [ rw-data ]
mov [ ebp - 0x3c ] r--data
call [ IsWindow@IAT ]
test eax eax
je r-xdata
push [ rw-data ]
lea ecx [ ebp - 0x3c ]
push [ ebp + 0x8 ]
push [ rw-data ]
push 0x14
call sub_4073b9
leave
retn
push 0x68
push [ rw-data ]
call [ IsBadReadPtr@IAT ]
test eax eax
jne r-xdata
mov ecx [ rw-data ]
push 0x4
call sub_406fd0
sub_40775e
push ebp
mov ebp esp
sub esp 0x808
push ebx
push esi
push edi
push [ ebp + 0xc ]
call sub_401fb6
pop ecx
lea ecx [ ebp + 0x10 ]
push ecx
push eax
lea eax [ ebp - 0x808 ]
push eax
mov [ ebp - 0x4 ] ecx
call [ wvsprintfW@IAT ]
xor ebx ebx
cmp [ ebp + 0x8 ] ebx
je r-xdata
lea eax [ ebp - 0x808 ]
push eax
call sub_407690
pop ecx
call [ GetLastError@IAT ]
mov esi [ FormatMessageW@IAT ]
lea ecx [ ebp - 0x4 ]
push ecx
push ebx
lea ecx [ ebp + 0x8 ]
push ecx
movzx ecx [ rw-data ]
push ecx
push eax
push ebx
mov edi 0x1100
push edi
mov [ ebp - 0x8 ] eax
call esi
test eax eax
jne r-xdata
mov esi [ lstrlenW@IAT ]
lea eax [ ebp - 0x808 ]
push eax
call esi
push [ ebp + 0x8 ]
mov edi eax
call esi
xor ecx ecx
push 0x2
lea eax [ eax + edi + 0x2 ]
pop edx
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call ??2@YAPAXI@Z
mov esi [ lstrcpyW@IAT ]
mov ebx eax
pop ecx
lea eax [ ebp - 0x808 ]
push eax
push ebx
call esi
lea eax [ ebx + edi * 2 ]
mov [ eax ] 0xa
push [ ebp + 0x8 ]
add eax 0x2
push eax
call esi
push ebx
call sub_407690
push ebx
call ??3@YAXPAX@Z
pop ecx
pop ecx
push [ ebp + 0x8 ]
call [ LocalFree@IAT ]
jmp r-xdata
lea eax [ ebp - 0x4 ]
push eax
push ebx
lea eax [ ebp + 0x8 ]
push eax
push ebx
push [ ebp - 0x8 ]
push ebx
push edi
call esi
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_407853
push ebp
mov ebp esp
sub esp 0x68
cmp [ rw-data ] 0x0
push esi
push 0x2
pop esi
jne r-xdata
test [ rw-data ] 0x20
je r-xdata
mov [ rw-data ] r--data
lea ecx [ ebp - 0x68 ]
call sub_40715e
push 0x0
push [ rw-data ]
lea ecx [ ebp - 0x68 ]
push [ rw-data ]
push esi
call sub_4073b9
pop esi
leave
retn
push 0x6
pop esi
sub_40789e
push ebp
mov ebp esp
sub esp 0x3c
push esi
mov esi ecx
lea ecx [ ebp - 0x3c ]
call sub_4065d9
push esi
lea ecx [ ebp - 0x3c ]
mov [ ebp - 0x3c ] r--data
call sub_407433
test eax eax
je r-xdata
pop esi
leave
retn
push 0x0
push [ esi + 0x4 ]
call [ EndDialog@IAT ]
sub_4078d1
push ebp
mov ebp esp
sub esp 0xc
push esi
push edi
mov edi ecx
lea ecx [ ebp - 0xc ]
call sub_4013f8
mov esi [ ebp + 0x8 ]
jmp r-xdata
movzx eax [ esi ]
test ax ax
jne r-xdata
cmp ax 0x20
lea ecx [ ebp - 0xc ]
jae r-xdata
push [ ebp - 0xc ]
mov ecx edi
push [ edi + 0x4 ]
call sub_4068b3
push [ ebp - 0xc ]
call ??3@YAXPAX@Z
pop ecx
pop edi
pop esi
leave
retn 0x4
push eax
push 0x20
jmp r-xdata
call sub_401410
inc esi
inc esi
sub_407921
push ebp
mov ebp esp
sub esp 0xc
cmp [ ebp + 0x8 ] 0x4b7
push esi
mov esi ecx
jne r-xdata
cmp [ ebp + 0x8 ] 0x4b3
jne r-xdata
call sub_407472
jmp r-xdata
push [ ebp + 0x8 ]
mov ecx esi
call sub_406700
pop esi
leave
retn 0x4
push 0x4b6
push [ esi + 0x4 ]
call [ GetDlgItem@IAT ]
push eax
lea eax [ ebp - 0xc ]
push eax
call sub_402d23
pop ecx
pop ecx
push eax
mov ecx rw-data
call sub_401349
push [ ebp - 0xc ]
call ??3@YAXPAX@Z
pop ecx
sub_407980
push ebp
mov ebp esp
sub esp 0x20c
push ebx
push esi
mov esi ecx
cmp [ esi + 0x40 ] 0x0
push edi
mov edi 0x4b3
jne r-xdata
mov ebx [ ebp + 0x8 ]
lea eax [ esi + 0x3c ]
push eax
mov ecx ebx
call sub_401349
push 0x1d
call sub_401fb6
push eax
push [ rw-data ]
lea eax [ ebp - 0x20c ]
push r--data
push eax
call [ wsprintfW@IAT ]
add esp 0x14
lea eax [ ebp - 0x20c ]
push eax
mov ecx ebx
call sub_4024f3
push [ ebx ]
mov ecx esi
push edi
call sub_4070f3
pop edi
pop esi
pop ebx
leave
retn 0x4
push 0x19
call sub_401fb6
pop ecx
push eax
push edi
mov ecx esi
call sub_407235
push edi
push [ esi + 0x4 ]
call [ GetDlgItem@IAT ]
push eax
lea eax [ ebp - 0xc ]
push eax
call sub_402d23
pop ecx
pop ecx
push eax
lea ecx [ esi + 0x3c ]
call sub_401349
push [ ebp - 0xc ]
call ??3@YAXPAX@Z
pop ecx
sub_407a22
push ebp
mov ebp esp
sub esp 0x24
push esi
push edi
mov esi ecx
call sub_407193
mov edi [ GetSystemMetrics@IAT ]
push 0x7
call edi
mov ecx [ rw-data ]
sub ecx eax
cmp [ esi + 0x14 ] ecx
jge r-xdata
push [ esi + 0xc ]
lea ecx [ ebp - 0x14 ]
call sub_4024ba
test [ rw-data ] 0x2
mov edi r--data
jne r-xdata
push 0x7
call edi
mov ecx [ rw-data ]
sub ecx eax
mov [ esi + 0x14 ] ecx
lea eax [ ebp - 0x8 ]
push eax
push [ ebp - 0x14 ]
mov ecx esi
call sub_4067ac
test eax eax
je r-xdata
push edi
lea ecx [ ebp - 0x14 ]
call sub_4024f3
lea eax [ ebp - 0x24 ]
push eax
push 0x4b8
mov ecx esi
call sub_4068ce
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x20 ]
add eax 0xe
add [ esi + 0x18 ] eax
test [ rw-data ] 0x4
je r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ esi + 0x14 ]
jle r-xdata
add [ esi + 0x18 ] 0xffffffee
cmp [ rw-data ] 0x1
mov eax [ esi + 0x18 ]
jne r-xdata
mov eax [ esi ]
push 0x820
push [ esi + 0x34 ]
lea ecx [ esi + 0x3c ]
push ecx
push edi
mov ecx esi
call [ eax + 0x8 ]
test eax eax
je r-xdata
mov [ esi + 0x14 ] eax
add eax 0xa
mov [ esi + 0x18 ] eax
lea eax [ ebp - 0x24 ]
push eax
push 0x4b4
mov ecx esi
call sub_4068ce
mov eax [ ebp - 0x20 ]
sub eax [ ebp - 0x18 ]
add [ esi + 0x18 ] eax
jmp r-xdata
add [ esi + 0x18 ] 0x5
mov eax [ esi + 0x48 ]
add [ esi + 0x18 ] eax
push [ ebp - 0x14 ]
call ??3@YAXPAX@Z
pop ecx
pop edi
pop esi
leave
retn
sub_407b1b
push ebp
mov ebp esp
sub esp 0x24
push ebx
push esi
mov esi ecx
push edi
lea ecx [ ebp - 0xc ]
call sub_4013f8
mov eax [ esi + 0x50 ]
mov ecx [ esi + 0x54 ]
or eax ecx
mov ebx [ ebp + 0x8 ]
mov edi 0x7530
je r-xdata
and [ ebp + 0x8 ] 0x0
push 0x0
push edi
push [ ebx + 0x4 ]
push [ ebx ]
call sub_4122c0
push [ esi + 0x54 ]
push [ esi + 0x50 ]
push edx
push eax
call sub_412210
mov [ ebp + 0x8 ] eax
jmp r-xdata
push 0x4b8
push [ esi + 0x4 ]
call [ GetDlgItem@IAT ]
mov edi [ ebp + 0x8 ]
push 0x0
push edi
push 0x402
push eax
call [ SendMessageW@IAT ]
lea eax [ edi + 0x12b ]
cdq
mov ecx 0x12c
idiv ecx
push eax
lea eax [ ebp - 0x24 ]
push r--data
push eax
call [ wsprintfW@IAT ]
add esp 0xc
test [ rw-data ] 0x4
je r-xdata
mov [ ebp + 0x8 ] edi
cmp [ ebp + 0x8 ] edi
jle r-xdata
mov al [ rw-data ]
test al 0x2
jne r-xdata
lea eax [ ebp - 0x24 ]
push eax
push 0x4b5
mov ecx esi
call sub_4070f3
cmp [ esi + 0x60 ] 0x0
je r-xdata
test al 0x1
lea ecx [ ebp - 0xc ]
je r-xdata
push [ ebp - 0xc ]
call ??3@YAXPAX@Z
pop ecx
pop edi
pop esi
pop ebx
leave
retn 0x4
push [ esi + 0x54 ]
mov eax [ esi + 0x60 ]
push [ esi + 0x50 ]
mov ecx [ eax ]
push [ ebx + 0x4 ]
push [ ebx ]
push [ esi + 0x4 ]
push eax
call [ ecx + 0x24 ]
lea eax [ ebp - 0x24 ]
push eax
call sub_401310
push 0x20
lea ecx [ ebp - 0xc ]
call sub_401410
push [ rw-data ]
push [ rw-data ]
call sub_401310
push 0x20
lea ecx [ ebp - 0xc ]
call sub_401410
lea eax [ ebp - 0x24 ]
push eax
jmp r-xdata
lea ecx [ ebp - 0xc ]
call sub_4024f3
push [ ebp - 0xc ]
mov ecx esi
call sub_4078d1
sub_407c48
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
sub eax 0x113
push esi
mov esi ecx
je r-xdata
push edi
lea edi [ esi + 0x58 ]
add [ edi ] 0x1
adc [ edi + 0x4 ] 0x0
cmp [ edi + 0x4 ] 0x0
jl r-xdata
sub eax 0x7eee
je r-xdata
push edi
push 0x0
push 0x8002
push [ esi + 0x4 ]
call [ SendMessageW@IAT ]
pop edi
jg r-xdata
mov eax [ ebp + 0x10 ]
mov ecx [ eax ]
mov [ esi + 0x50 ] ecx
mov eax [ eax + 0x4 ]
mov [ esi + 0x54 ] eax
mov eax [ esi + 0x60 ]
test eax eax
je r-xdata
dec eax
jne r-xdata
push 0x1
push [ esi + 0x4 ]
call [ EndDialog@IAT ]
cmp [ edi ] 0x64
jbe r-xdata
push [ ebp + 0x10 ]
mov ecx esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_406695
pop esi
pop ebp
retn 0xc
mov ecx [ eax ]
push 0x2
push [ esi + 0x4 ]
push eax
call [ ecx + 0x28 ]
push [ esi + 0x54 ]
mov eax [ esi + 0x60 ]
push [ esi + 0x50 ]
mov ecx [ eax ]
push 0x0
push 0x0
push [ esi + 0x4 ]
push eax
call [ ecx + 0x24 ]
jmp r-xdata
push [ ebp + 0x10 ]
call sub_407b1b
jmp r-xdata
sub_407cee
push ecx
push ecx
test [ rw-data ] 0x200
push ebx
mov ebx [ GetModuleHandleW@IAT ]
push ebp
push esi
push edi
mov edi [ LoadIconW@IAT ]
mov esi ecx
mov [ rw-data ] 0x0
jne r-xdata
push [ esi + 0x10 ]
mov ecx esi
push 0x4b2
call sub_4070f3
push [ esi + 0xc ]
mov ecx esi
call sub_4078d1
mov eax [ esi + 0x8 ]
and eax 0x3
xor ebp ebp
sub eax ebp
je r-xdata
push 0x65
push 0x0
call ebx
push eax
call edi
mov ebp [ GetSystemMetrics@IAT ]
push 0x0
push 0x32
mov [ esp + 0x18 ] eax
call ebp
push eax
push 0x31
call ebp
push eax
push 0x1
push 0x65
push 0x0
call ebx
push eax
call [ LoadImageW@IAT ]
test eax eax
mov [ esp + 0x14 ] eax
jne r-xdata
push 0x1b
call sub_401fb6
pop ecx
push eax
push 0x4b3
mov ecx esi
call sub_407235
push 0x1c
dec eax
je r-xdata
push [ esp + 0x10 ]
mov ebp 0x80
push 0x1
push ebp
push [ esi + 0x4 ]
call [ SendMessageW@IAT ]
push [ esp + 0x14 ]
push 0x0
push ebp
push [ esi + 0x4 ]
call [ SendMessageW@IAT ]
mov eax [ esp + 0x10 ]
mov [ esp + 0x14 ] eax
mov eax [ esi + 0x8 ]
and eax 0x1c
cmp eax 0x4
je r-xdata
mov edi [ GetWindow@IAT ]
push 0x5
pop ebx
push ebx
push [ esi + 0x4 ]
jmp r-xdata
push 0x19
call sub_401fb6
pop ecx
push eax
push 0x4b3
mov ecx esi
call sub_407235
push ebp
push 0x4b4
mov ecx esi
call sub_4068eb
jmp r-xdata
dec eax
je r-xdata
push 0x65
push ebp
call ebx
push eax
cmp eax 0x8
je r-xdata
call edi
mov ebp eax
test ebp ebp
jne r-xdata
cmp [ esi + 0x38 ] ebp
je r-xdata
push 0x1a
call sub_401fb6
pop ecx
push eax
mov ebp 0x4b4
push ebp
mov ecx esi
call sub_407235
push 0x0
push 0x4b3
mov ecx esi
call sub_4068eb
push ebp
mov ecx esi
call sub_406739
xor ebp ebp
jmp r-xdata
dec eax
jne r-xdata
push ebp
push 0x4b1
mov ecx esi
mov [ esi + 0x30 ] ebp
call sub_4068eb
push eax
xor ecx ecx
inc ecx
push ecx
push 0x172
push 0x4b1
push [ esi + 0x4 ]
mov [ esi + 0x30 ] ecx
call [ GetDlgItem@IAT ]
push eax
call [ SendMessageW@IAT ]
jmp r-xdata
push 0x7f02
jmp r-xdata
cmp eax 0xc
je r-xdata
push ebp
call sub_403a5a
pop ecx
push 0x2
push ebp
push ebx
push [ esi + 0x4 ]
jmp r-xdata
push 0x19
call sub_401fb6
pop ecx
push eax
push 0x4b3
mov ecx esi
call sub_407235
push 0x1a
jmp r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0x24 ]
mov eax [ esi ]
mov ecx esi
call [ eax + 0x20 ]
mov ecx esi
call sub_406d1c
test [ rw-data ] 0x8
jne r-xdata
push ebp
jmp r-xdata
push 0x7f01
jmp r-xdata
cmp eax 0x10
je r-xdata
call edi
mov ebp eax
test ebp ebp
jne r-xdata
call sub_401fb6
pop ecx
push eax
push 0x4b4
mov ecx esi
call sub_407235
call edi
cmp eax ebp
je r-xdata
push 0x7f04
jmp r-xdata
cmp eax 0x14
jne r-xdata
push ebp
call sub_402d66
test eax eax
pop ecx
jne r-xdata
push ebx
push [ esi + 0x4 ]
jmp r-xdata
push 0x7f03
push 0x2
push ebp
call edi
mov ebx eax
test ebx ebx
jne r-xdata
push ebx
call sub_401e0c
pop ecx
push 0x2
push ebx
test [ rw-data ] 0x8
jne r-xdata
mov ecx esi
call sub_406855
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
pop ecx
pop ecx
retn
mov ecx esi
call sub_406d1c
jmp r-xdata
sub_407f8d
push ebp
mov ebp esp
sub esp 0x4d0
push esi
push edi
lea eax [ ebp - 0x10 ]
push eax
mov edi 0x4b6
push edi
mov esi ecx
call sub_4068ce
mov eax [ ebp - 0x4 ]
sub eax [ ebp - 0xc ]
push 0x1
inc eax
inc eax
push edi
mov ecx esi
mov [ esi + 0x44 ] eax
call sub_4068eb
push 0x1
inc edi
push edi
mov ecx esi
call sub_4068eb
push 0x104
lea eax [ ebp - 0x21c ]
push eax
call [ GetSystemDirectoryW@IAT ]
push 0x103
push 0x2b4
lea eax [ ebp - 0x4d0 ]
push eax
push 0x0
lea eax [ ebp - 0x21c ]
push eax
call [ SHGetFileInfoW@IAT ]
mov eax [ ebp - 0x4d0 ]
push edi
push [ esi + 0x4 ]
mov [ esi + 0x3c ] eax
call [ GetDlgItem@IAT ]
push sub_406ef6
push 0xfffffffc
push eax
call [ SetWindowLongW@IAT ]
mov ecx esi
mov [ esi + 0x40 ] eax
call sub_407cee
mov ecx esi
mov edi eax
call sub_4072b8
mov eax edi
pop edi
pop esi
leave
retn
sub_408035
push esi
push edi
push 0x1
mov edi 0x4b5
push edi
mov esi ecx
call sub_4068eb
push [ rw-data ]
mov ecx esi
push edi
call sub_4070f3
mov ecx esi
call sub_4072b8
pop edi
mov ecx esi
pop esi
jmp sub_407f8d
sub_408064
push ebp
mov ebp esp
sub esp 0xc
cmp [ rw-data ] 0x1
push esi
mov esi ecx
jle r-xdata
mov ecx esi
call sub_407cee
push 0x40
call [ MessageBeep@IAT ]
xor eax eax
pop esi
leave
retn
lea ecx [ ebp - 0xc ]
call sub_4013f8
lea eax [ ebp - 0xc ]
push eax
mov ecx esi
call sub_407980
cmp [ esi + 0x38 ] 0x0
jne r-xdata
push 0x0
push 0x3e8
push 0x1
push [ esi + 0x4 ]
call [ SetTimer@IAT ]
push [ ebp - 0xc ]
call ??3@YAXPAX@Z
pop ecx
push [ ebp - 0xc ]
mov ecx esi
push 0x4b3
call sub_406ca6
sub_4080cd
push ebp
mov ebp esp
sub esp 0xc
cmp [ ebp + 0x8 ] 0x113
push esi
mov esi ecx
jne r-xdata
push [ ebp + 0x10 ]
mov ecx esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_406695
pop esi
leave
retn 0xc
dec [ rw-data ]
jne r-xdata
lea ecx [ ebp - 0xc ]
call sub_4013f8
lea eax [ ebp - 0xc ]
push eax
mov ecx esi
call sub_407980
push [ ebp - 0xc ]
call ??3@YAXPAX@Z
pop ecx
push 0x1
push [ esi + 0x4 ]
call [ EndDialog@IAT ]
jmp r-xdata
sub_408125
push ecx
push ecx
push ebx
push ebp
push esi
push edi
mov esi ecx
mov eax [ esi + 0x4 ]
push 0x1
mov edi 0x4b8
push edi
mov [ rw-data ] eax
mov [ rw-data ] esi
call sub_4068eb
push edi
push [ esi + 0x4 ]
mov edi [ GetDlgItem@IAT ]
call edi
push 0x75300000
push 0x0
push 0x401
push eax
call [ SendMessageW@IAT ]
mov eax [ rw-data ]
test eax eax
mov ebp 0x4b4
je r-xdata
test [ rw-data ] 0x4
mov ebx 0x4b5
je r-xdata
push eax
push ebp
mov ecx esi
call sub_406ca6
push [ rw-data ]
mov ecx esi
push ebp
call sub_4070f3
cmp [ rw-data ] 0x1
jne r-xdata
push 0x1
push ebx
mov ecx esi
call sub_4068eb
push ebx
push [ esi + 0x4 ]
call edi
push 0xfffffff0
push eax
call [ GetWindowLongW@IAT ]
or eax 0x1
push eax
push 0xfffffff0
push ebx
push [ esi + 0x4 ]
call edi
push eax
call [ SetWindowLongW@IAT ]
mov ecx esi
call sub_406fe9
push ebp
push [ esi + 0x4 ]
call edi
push eax
call [ SetFocus@IAT ]
xor ebp ebp
cmp [ rw-data ] ebp
je r-xdata
push 0x0
push ebp
mov ecx esi
call sub_4068eb
mov eax [ esi + 0x4 ]
push 0x0
push eax
call [ GetSystemMenu@IAT ]
test eax eax
je r-xdata
lea eax [ esi + 0x60 ]
mov [ eax ] ebp
test [ rw-data ] 0x2000
jne r-xdata
mov [ esi + 0x58 ] ebp
mov [ esi + 0x5c ] ebp
mov [ esi + 0x50 ] 0x64
mov [ esi + 0x54 ] ebp
mov eax [ rw-data ]
imul eax eax 0xa
push ebp
push eax
push 0x1
push [ esi + 0x4 ]
call [ SetTimer@IAT ]
push 0x1
push 0xf060
push eax
call [ EnableMenuItem@IAT ]
cmp [ rw-data ] 0x1
jne r-xdata
push eax
call sub_4070ee
pop ecx
push eax
push r--data
push 0x1
push ebp
push r--data
call [ CoCreateInstance@IAT ]
push 0x1
mov ecx esi
call sub_406fd0
test [ rw-data ] 0x4
jne r-xdata
push 0x2
push [ esi + 0x4 ]
call edi
push eax
call [ IsWindow@IAT ]
test eax eax
je r-xdata
lea eax [ esp + 0x10 ]
push eax
mov ecx esi
mov [ esp + 0x14 ] ebp
mov [ esp + 0x18 ] ebp
call sub_407b1b
mov ecx esi
call sub_407cee
pop edi
pop esi
pop ebp
pop ebx
pop ecx
pop ecx
retn
push ebp
push ebx
push [ esi + 0x4 ]
call edi
push eax
call [ ShowWindow@IAT ]
push ebp
push 0x2
push [ esi + 0x4 ]
call edi
push eax
call [ EnableWindow@IAT ]
sub_4082d1
push esi
mov esi [ esp + 0x8 ]
push edi
xor edi edi
push edi
push r--data
push esi
call sub_4023f9
add esp 0xc
test eax eax
je r-xdata
test [ rw-data ] 0x100
je r-xdata
push 0x62
call sub_4019e4
pop ecx
mov eax [ rw-data ]
and ax 0xc0
cmp al 0x80
jne r-xdata
push 0x63
call sub_4019e4
pop ecx
cmp [ rw-data ] 0x2
je r-xdata
push 0x70
call sub_4019e4
pop ecx
push edi
push r--data
push esi
call sub_4023f9
add esp 0xc
test eax eax
je r-xdata
push 0x65
call sub_4019e4
pop ecx
push edi
push r--data
push esi
call sub_4023f9
add esp 0xc
test eax eax
je r-xdata
push 0x7a
call sub_4019e4
pop ecx
push edi
push r--data
push esi
call sub_4023f9
add esp 0xc
test eax eax
je r-xdata
push 0x66
call sub_4019e4
pop ecx
push edi
push r--data
push esi
call sub_4023f9
add esp 0xc
test eax eax
pop edi
pop esi
je r-xdata
push 0x68
call sub_4019e4
pop ecx
xor eax eax
retn
push 0x77
call sub_4019e4
pop ecx
sub_40839e
push ebp
mov ebp esp
sub esp 0x4c
push ebx
push edi
mov edi [ rw-data ]
movzx ecx [ edi ]
xor ebx ebx
cmp cx bx
mov [ ebp - 0x4 ] ebx
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop ebx
leave
retn
push esi
sub eax 0x63
je r-xdata
je r-xdata
test [ rw-data ] 0x100
jne r-xdata
dec eax
dec eax
je r-xdata
push ebx
mov esi r--data
push esi
push [ ebp + 0x8 ]
call sub_4023f9
add esp 0xc
cmp eax ebx
jne r-xdata
cmp eax 0x48
jg r-xdata
lea ecx [ ebp - 0x40 ]
call sub_4065d9
push ebx
lea ecx [ ebp - 0x40 ]
mov [ ebp - 0x40 ] r--data
call sub_407433
lea ecx [ ebp - 0x40 ]
cmp cx 0x43
je r-xdata
cmp [ rw-data ] 0x2
jne r-xdata
dec eax
je r-xdata
push eax
push [ rw-data ]
call sub_4075fb
cmp [ edi ] 0x42
jne r-xdata
cmp eax 0x50
je r-xdata
je r-xdata
movzx eax cx
cmp eax 0x62
jg r-xdata
pop esi
mov [ ebp - 0x4 ] 0x64
jmp r-xdata
call sub_407853
jmp r-xdata
cmp cx 0x45
jne r-xdata
push ebx
push r--data
push [ ebp + 0x8 ]
call sub_4023f9
mov esi eax
add esp 0xc
cmp esi ebx
jne r-xdata
dec eax
dec eax
je r-xdata
inc edi
inc edi
movzx ecx [ edi ]
cmp cx bx
jne r-xdata
mov [ ebp - 0x4 ] 0x64
mov eax esi
jmp r-xdata
mov eax [ rw-data ]
and ax 0xc0
cmp al 0x80
je r-xdata
cmp eax 0x57
je r-xdata
push ebx
push r--data
push [ ebp + 0x8 ]
call sub_4023f9
mov esi eax
add esp 0xc
cmp esi ebx
jne r-xdata
sub eax 0x42
je r-xdata
cmp [ rw-data ] ebx
jge r-xdata
cmp [ edi ] 0x46
jne r-xdata
sub eax 0x8
je r-xdata
push [ rw-data ]
push [ rw-data ]
call sub_40765c
jmp r-xdata
cmp cx 0x50
jne r-xdata
push ebx
push r--data
push [ ebp + 0x8 ]
call sub_4023f9
add esp 0xc
test eax eax
jne r-xdata
cmp eax 0x5a
je r-xdata
lea ecx [ ebp - 0x44 ]
call sub_403ae9
push ebx
push esi
push [ rw-data ]
lea ecx [ ebp - 0x44 ]
push 0x11
call sub_4073b9
lea ecx [ ebp - 0x44 ]
jmp r-xdata
cmp [ edi ] 0x48
jne r-xdata
dec eax
je r-xdata
jg r-xdata
mov [ rw-data ] 0x1
cmp [ rw-data ] ebx
mov esi r--data
sub eax 0x7
je r-xdata
pop ecx
pop ecx
jmp r-xdata
push 0x2a
call sub_401fb6
push eax
call sub_4076ff
jmp r-xdata
cmp [ edi ] 0x57
jne r-xdata
push ebx
push r--data
push [ ebp + 0x8 ]
call sub_4023f9
add esp 0xc
test eax eax
jne r-xdata
jmp r-xdata
call sub_406632
mov [ ebp - 0x4 ] 0x64
push 0x18
call sub_401fb6
mov esi eax
cmp esi ebx
pop ecx
jne r-xdata
dec eax
dec eax
je r-xdata
lea ecx [ ebp - 0x4c ]
call sub_403f20
push ebx
push esi
push [ rw-data ]
lea ecx [ ebp - 0x4c ]
push 0x11
call sub_4073b9
push [ ebp - 0x10 ]
call ??3@YAXPAX@Z
pop ecx
lea ecx [ ebp - 0x4c ]
jmp r-xdata
cmp [ edi ] 0x46
jne r-xdata
sub eax 0x3
jne r-xdata
push 0xf
push ebx
call sub_40775e
jmp r-xdata
cmp [ edi ] 0x5a
jne r-xdata
dec eax
jne r-xdata
sub_40865e
xor ecx ecx
push esi
mov esi eax
and esi 0x1
dec esi
not esi
and esi 0xedb88320
shr eax 0x1
xor eax esi
dec edx
jne r-xdata
mov [ ecx * 4 + rw-data ] eax
inc ecx
cmp ecx 0x100
jb r-xdata
push 0x8
mov eax ecx
pop edx
mov edx 0x800
jmp r-xdata
cmp ecx edx
jb r-xdata
mov eax [ ecx * 4 + rw-data ]
mov esi eax
and esi 0xff
shr eax 0x8
xor eax [ esi * 4 + rw-data ]
inc ecx
mov [ ecx * 4 + rw-data ] eax
mov [ rw-data ] r-xdata
call sub_40d835
test eax eax
pop esi
jne r-xdata
retn
mov [ rw-data ] sub_412500
sub_408761
push esi
push edi
mov edi [ esp + 0xc ]
test edi edi
mov esi ecx
je r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
mov eax [ edi ]
push edi
call [ eax + 0x4 ]
mov [ esi ] edi
mov eax edi
pop edi
pop esi
retn 0x4
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
sub_4087ca
push esi
mov esi ecx
mov eax [ esi ]
test eax eax
je r-xdata
test [ esp + 0x8 ] 0x1
je r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
mov eax esi
pop esi
retn 0x4
push esi
call ??3@YAXPAX@Z
pop ecx
sub_408841
push esi
mov esi ecx
lea ecx [ esi + 0x4c ]
call sub_40e988
lea ecx [ esi + 0x38 ]
call sub_40e988
lea ecx [ esi + 0x24 ]
call sub_40e988
lea ecx [ esi + 0x10 ]
call sub_40e988
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov esi [ esi ]
test esi esi
je r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
pop esi
retn
mov eax [ esi ]
push esi
call [ eax + 0x8 ]
sub_40887f
push ebx
push ebp
mov ebp [ esp + 0xc ]
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov edi ecx
mov eax [ edi + 0x8 ]
add eax ebx
push eax
call sub_40e840
xor esi esi
test ebx ebx
jle r-xdata
mov eax edi
pop edi
pop esi
pop ebp
pop ebx
retn 0x4
mov eax [ ebp + 0xc ]
push [ eax + esi * 8 + 0x4 ]
mov ecx edi
push [ eax + esi * 8 ]
call sub_40aca8
inc esi
cmp esi ebx
jl r-xdata
sub_4088bc
mov edx [ ecx + 0x1c ]
xor eax eax
test edx edx
push esi
jle r-xdata
or eax 0xffffffff
mov ecx [ ecx + 0x20 ]
pop esi
retn 0x4
inc eax
add ecx 0x8
cmp eax edx
jl r-xdata
mov esi [ ecx ]
cmp esi [ esp + 0x8 ]
je r-xdata
sub_4088e0
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
and [ eax ] 0x0
cmp [ ecx + 0x8 ] 0x0
push esi
push edi
jbe r-xdata
push r--data
lea eax [ ebp + 0xc ]
push eax
mov [ ebp + 0xc ] 0x1
call _CxxThrowException
mov edi [ ebp + 0x8 ]
mov eax [ ebp + 0x10 ]
mov [ eax ] edi
pop edi
pop esi
pop ebp
retn 0xc
sub edi esi
inc edx
mov [ eax ] edx
cmp edx [ ecx + 0x8 ]
jb r-xdata
mov edx [ eax ]
mov esi [ ecx + 0xc ]
mov esi [ esi + edx * 8 + 0x4 ]
cmp edi esi
jb r-xdata
sub_40892b
mov edx [ ecx + 0x1c ]
xor eax eax
test edx edx
push esi
jle r-xdata
or eax 0xffffffff
mov ecx [ ecx + 0x20 ]
add ecx 0x4
pop esi
retn 0x4
inc eax
add ecx 0x8
cmp eax edx
jl r-xdata
mov esi [ ecx ]
cmp esi [ esp + 0x8 ]
je r-xdata
sub_408952
mov edx [ ecx + 0x30 ]
xor eax eax
test edx edx
push esi
jle r-xdata
or eax 0xffffffff
mov ecx [ ecx + 0x34 ]
pop esi
retn 0x4
inc eax
add ecx 0x4
cmp eax edx
jl r-xdata
mov esi [ ecx ]
cmp esi [ esp + 0x8 ]
je r-xdata
sub_408999
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ esi + 0x8 ]
cmp eax [ edi + 0x8 ]
je r-xdata
and [ ebp - 0x4 ] 0x0
test eax eax
push ebx
jle r-xdata
xor al al
leave
retn
mov eax [ esi + 0x1c ]
cmp eax [ edi + 0x1c ]
jne r-xdata
mov ebx [ esi + 0xc ]
mov eax [ edi + 0xc ]
sub eax ebx
mov [ ebp - 0x8 ] eax
jmp r-xdata
xor al al
jmp r-xdata
and [ ebp - 0x4 ] 0x0
test eax eax
jle r-xdata
add eax ebx
mov ecx ebx
call sub_4086f9
test al al
je r-xdata
pop ebx
leave
retn
mov edx [ esi + 0x58 ]
and [ ebp - 0x4 ] 0x0
test edx edx
jle r-xdata
mov ebx [ esi + 0x20 ]
mov eax [ edi + 0x20 ]
sub eax ebx
mov [ ebp - 0x8 ] eax
jmp r-xdata
inc [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
add ebx 0x8
cmp eax [ esi + 0x8 ]
jl r-xdata
mov eax [ esi + 0x30 ]
cmp eax [ edi + 0x30 ]
je r-xdata
mov eax [ edi + 0x5c ]
mov ecx [ esi + 0x5c ]
sub ecx eax
add eax ebx
mov ecx ebx
call sub_4086f9
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ esi + 0x44 ]
cmp eax [ edi + 0x44 ]
sete al
mov ebx [ ecx + eax + 0x4 ]
cmp ebx [ eax + 0x4 ]
jne r-xdata
inc [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
add ebx 0x8
cmp eax [ esi + 0x1c ]
jl r-xdata
inc [ ebp - 0x4 ]
add eax 0x8
cmp [ ebp - 0x4 ] edx
jl r-xdata
mov eax [ ebp - 0x8 ]
mov ebx [ ecx + eax ]
cmp ebx [ eax ]
jne r-xdata
sub_408a72
mov eax ecx
mov [ eax ] r--data
xor ecx ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
push esi
push 0x8
pop edx
mov [ eax + 0x10 ] edx
mov [ eax + 0x24 ] edx
mov [ eax + 0x18 ] ecx
mov [ eax + 0x1c ] ecx
mov [ eax + 0x20 ] ecx
mov [ eax + 0x14 ] r--data
push 0x4
mov [ eax + 0x2c ] ecx
mov [ eax + 0x30 ] ecx
mov [ eax + 0x34 ] ecx
pop esi
mov [ eax + 0x38 ] esi
mov edx r--data
mov [ eax + 0x28 ] edx
mov [ eax + 0x4c ] esi
mov [ eax + 0x40 ] ecx
mov [ eax + 0x44 ] ecx
mov [ eax + 0x48 ] ecx
mov [ eax + 0x3c ] edx
pop esi
retn
sub_408ac7
push esi
mov esi ecx
lea eax [ esi + 0x4 ]
push eax
call [ DeleteCriticalSection@IAT ]
mov esi [ esi ]
test esi esi
je r-xdata
pop esi
retn
mov eax [ esi ]
push esi
call [ eax + 0x8 ]
sub_408ae2
push esi
mov esi ecx
push edi
mov [ esi + 0x4 ] r--data
xor edi edi
mov [ esi + 0x8 ] edi
lea ecx [ esi + 0xc ]
mov [ esi ] r--data
mov [ esi + 0x4 ] r--data
call sub_408a72
lea eax [ esi + 0x74 ]
mov [ esi + 0x60 ] edi
mov [ esi + 0x64 ] edi
mov [ esi + 0x68 ] edi
push 0x4
pop ecx
mov [ esi + 0x6c ] ecx
mov [ esi + 0x5c ] r--data
mov [ eax + 0x4 ] edi
mov [ eax + 0x8 ] edi
mov [ eax + 0xc ] edi
mov [ eax + 0x10 ] ecx
mov [ eax ] r--data
pop edi
mov eax esi
pop esi
retn
sub_408b75
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push edi
lea eax [ ebp + 0xc ]
push eax
push ebx
mov edi ecx
call sub_403dc9
mov eax [ ebp + 0xc ]
test eax eax
jle r-xdata
push [ ebp + 0xc ]
mov ecx edi
push ebx
call sub_40e939
pop edi
pop ebx
pop ebp
retn 0x8
push esi
mov esi ebx
shl esi 0x2
mov [ ebp + 0x8 ] eax
add esi 0x4
dec [ ebp + 0x8 ]
jne r-xdata
push 0x1
call sub_4087ca
mov eax [ edi + 0xc ]
mov ecx [ esi + eax ]
test ecx ecx
je r-xdata
pop esi
sub_408bc4
push esi
mov esi ecx
lea eax [ esi + 0x8 ]
push eax
call sub_4064ce
lea eax [ esi + 0x4 ]
push eax
call sub_4064ce
push esi
call sub_4064ce
add esp 0xc
pop esi
retn
sub_408be4
push esi
mov esi ecx
lea ecx [ esi + 0xb4 ]
call sub_40e988
lea ecx [ esi + 0xa0 ]
call sub_40e988
lea ecx [ esi + 0x8c ]
call sub_4087b4
lea ecx [ esi + 0x78 ]
call sub_4087b4
mov ecx esi
call sub_40f22f
mov ecx esi
add esi 0x14
neg ecx
sbb ecx ecx
and ecx esi
pop esi
jmp sub_408841
sub_408c44
push ebp
mov ebp esp
push ecx
push ecx
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov ecx ebx
call sub_4086d8
lea ecx [ ebx + 0x50 ]
call sub_40e909
xor esi esi
cmp [ edi + 0x1c ] esi
jle r-xdata
xor eax eax
cmp [ edi + 0x8 ] eax
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x8 ] eax
jle r-xdata
mov eax [ edi + 0x20 ]
lea eax [ eax + esi * 8 ]
mov ecx [ eax ]
push [ eax + 0x4 ]
push ecx
lea ecx [ ebx + 0x14 ]
call sub_40aca8
inc esi
cmp esi [ edi + 0x1c ]
jl r-xdata
xor esi esi
cmp [ edi + 0x30 ] esi
jle r-xdata
mov eax [ edi + 0xc ]
mov ecx [ ebp - 0x8 ]
mov esi [ eax + ecx * 4 ]
mov ebx [ esi + 0x18 ]
mov eax [ esi + 0x14 ]
mov ecx [ ebp + 0x8 ]
push ebx
push eax
call sub_40aca8
push [ esi + 0x4 ]
mov ecx [ ebp + 0x8 ]
push [ esi ]
add ecx 0x50
call sub_40aca8
test ebx ebx
jbe r-xdata
pop esi
pop ebx
leave
retn
add ebx 0x28
inc [ ebp - 0x8 ]
mov eax [ ebp - 0x8 ]
cmp eax [ edi + 0x8 ]
jl r-xdata
push [ ebp - 0x4 ]
mov ecx edi
call sub_40892b
test eax eax
jge r-xdata
mov eax [ edi + 0x34 ]
push [ eax + esi * 4 ]
mov ecx ebx
call sub_40873f
inc esi
cmp esi [ edi + 0x30 ]
jl r-xdata
mov ebx [ ebp + 0x8 ]
inc [ ebp - 0x4 ]
dec ebx
jne r-xdata
mov ecx [ ebp + 0x8 ]
push [ ebp - 0x4 ]
add ecx 0x3c
call sub_40873f
sub_408d2e
push esi
push edi
mov edi [ esp + 0xc ]
push edi
mov esi ecx
call sub_408b5e
lea eax [ edi + 0x14 ]
push eax
lea ecx [ esi + 0x14 ]
call sub_408b5e
lea eax [ edi + 0x28 ]
push eax
lea ecx [ esi + 0x28 ]
call sub_40d3f7
add edi 0x3c
push edi
lea ecx [ esi + 0x3c ]
call sub_40d3f7
pop edi
mov eax esi
pop esi
retn 0x4
sub_408d67
push esi
mov esi ecx
lea ecx [ esi + 0x4 ]
call sub_408d09
lea eax [ esi + 0x78 ]
xor ecx ecx
mov [ esi + 0x74 ] ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] 0x4
mov [ eax ] r--data
mov [ esi + 0x68 ] 0x1
mov [ esi ] cl
mov eax esi
pop esi
retn 0x4
sub_408d9c
push esi
push edi
mov edi [ esp + 0xc ]
push edi
mov esi ecx
call sub_408d2e
add edi 0x50
push edi
lea ecx [ esi + 0x50 ]
call sub_408b5e
pop edi
mov eax esi
pop esi
retn 0x4
sub_408dbd
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ ebp + 0x8 ]
lea eax [ ebp + 0xc ]
push eax
push esi
mov ebx ecx
call sub_403dc9
mov eax [ ebp + 0xc ]
test eax eax
jle r-xdata
push [ ebp + 0xc ]
mov ecx ebx
push [ ebp + 0x8 ]
call sub_40e939
pop esi
pop ebx
leave
retn 0x8
shl esi 0x2
mov [ ebp - 0x4 ] eax
push edi
add esi 0x4
dec [ ebp - 0x4 ]
jne r-xdata
mov ecx edi
call sub_408bc4
push edi
call ??3@YAXPAX@Z
pop ecx
mov eax [ ebx + 0xc ]
mov edi [ esi + eax ]
test edi edi
je r-xdata
pop edi
sub_408e14
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ ebp + 0x8 ]
lea eax [ ebp + 0xc ]
push eax
push esi
mov ebx ecx
call sub_403dc9
mov eax [ ebp + 0xc ]
test eax eax
jle r-xdata
push [ ebp + 0xc ]
mov ecx ebx
push [ ebp + 0x8 ]
call sub_40e939
pop esi
pop ebx
leave
retn 0x8
shl esi 0x2
mov [ ebp - 0x4 ] eax
push edi
add esi 0x4
dec [ ebp - 0x4 ]
jne r-xdata
mov ecx edi
call sub_408be4
push edi
call ??3@YAXPAX@Z
pop ecx
mov eax [ ebx + 0xc ]
mov edi [ esi + eax ]
test edi edi
je r-xdata
pop edi
sub_408e6b
push esi
mov esi [ esp + 0x8 ]
dec [ esi + 0x8 ]
mov eax [ esi + 0x8 ]
jne r-xdata
pop esi
retn 0x4
mov ecx esi
call sub_408c28
push esi
call ??3@YAXPAX@Z
pop ecx
xor eax eax
sub_408e8c
push ebp
lea ebp [ esp - 0x5c ]
sub esp 0xf4
push esi
mov esi [ ebp + 0x74 ]
mov [ ebp + 0x58 ] ecx
mov ecx esi
call sub_40b0f4
test al al
jne r-xdata
push ebx
xor ebx ebx
lea eax [ ebp - 0x30 ]
push edi
push eax
mov [ ebp + 0x2c ] ebx
mov [ ebp + 0x30 ] ebx
mov [ ebp + 0x34 ] ebx
mov [ ebp + 0x38 ] 0x4
mov [ ebp + 0x28 ] r--data
mov [ ebp - 0x34 ] ebx
call sub_4065a9
pop ecx
push [ ebp + 0x64 ]
lea ecx [ ebp - 0x34 ]
call sub_408761
cmp [ esi + 0x30 ] ebx
mov [ ebp + 0x64 ] ebx
jle r-xdata
mov eax 0x80004001
mov edi [ ebp + 0x74 ]
mov eax [ edi + 0x8 ]
lea ecx [ ebp - 0x98 ]
mov [ ebp + 0x40 ] eax
call sub_408d09
lea eax [ ebp - 0x98 ]
push eax
call sub_408c44
mov eax [ ebp + 0x58 ]
cmp [ eax ] bl
pop ecx
je r-xdata
push 0x18
call ??2@YAPAXI@Z
cmp eax ebx
pop ecx
je r-xdata
mov esi eax
mov edi eax
add edi 0x4
lea esi [ ebp - 0x98 ]
call sub_408999
neg al
sbb al al
inc al
je r-xdata
xor esi esi
mov [ eax + 0x4 ] ebx
mov [ eax ] r--data
mov esi eax
jmp r-xdata
mov ecx [ esi + 0x70 ]
mov eax [ ecx ]
lea edx [ ebp - 0x98 ]
push edx
call [ eax ]
cmp eax ebx
je r-xdata
push 0x88
call ??2@YAPAXI@Z
cmp eax ebx
pop ecx
je r-xdata
mov edi [ ebp + 0x58 ]
mov ecx [ edi + 0x70 ]
mov eax [ ecx ]
call [ eax + 0x4 ]
cmp [ ebp + 0x40 ] ebx
mov [ ebp + 0x50 ] ebx
mov [ ebp + 0x3c ] ebx
mov [ ebp + 0x44 ] ebx
jle r-xdata
mov esi [ ebp + 0x58 ]
jmp r-xdata
xor edi edi
mov [ eax + 0x4 ] ebx
mov [ eax ] r--data
mov [ eax + 0x8 ] ebx
mov edi eax
jmp r-xdata
push esi
lea ecx [ ebp + 0x4c ]
call sub_408726
mov ecx [ ebp + 0x64 ]
lea eax [ ebp - 0x34 ]
mov [ esi + 0x8 ] eax
mov eax [ ebp + 0x68 ]
mov [ esi + 0x10 ] eax
mov eax [ ebp + 0x6c ]
mov [ esi + 0x14 ] eax
mov eax [ ebp + 0x70 ]
lea esi [ eax + ecx * 8 ]
mov eax [ esi ]
add [ ebp + 0x68 ] eax
mov eax [ esi + 0x4 ]
push 0x28
adc [ ebp + 0x6c ] eax
call ??2@YAPAXI@Z
cmp eax ebx
pop ecx
je r-xdata
cmp [ ebp + 0x40 ] ebx
mov [ ebp + 0x50 ] ebx
jle r-xdata
mov ebx eax
xor eax eax
mov ecx eax
call sub_408ae2
jmp r-xdata
lea eax [ ebp + 0x70 ]
push eax
lea eax [ ebp + 0x74 ]
push eax
mov eax [ ebp - 0x50 ]
push [ eax ]
lea ecx [ ebp - 0x98 ]
call sub_4088e0
cmp [ edi + 0x68 ] bl
je r-xdata
mov [ ebp + 0x58 ] ebx
lea ecx [ esi + 0x78 ]
call sub_40e909
lea edi [ esi + 0x74 ]
mov ecx edi
call sub_40a018
cmp [ esi + 0x68 ] bl
je r-xdata
mov eax [ ebp + 0x4c ]
cmp eax ebx
je r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
push edi
lea ecx [ ebp + 0x44 ]
call sub_408726
push [ ebp + 0x4c ]
lea ecx [ edi + 0x8 ]
call sub_408761
mov eax [ esi ]
mov [ edi + 0x10 ] eax
mov eax [ esi + 0x4 ]
mov [ edi + 0x14 ] eax
lea eax [ ebp + 0x44 ]
push eax
lea ecx [ ebp + 0x28 ]
mov [ edi + 0x18 ] ebx
mov [ edi + 0x1c ] ebx
mov [ edi + 0x20 ] bl
call sub_40cde7
mov eax [ ebp + 0x44 ]
cmp eax ebx
je r-xdata
lea eax [ ebp - 0x98 ]
push eax
lea ecx [ esi + 0x4 ]
call sub_408d9c
mov [ esi ] 0x1
mov eax [ ebp + 0x74 ]
mov eax [ eax + 0xc ]
mov ecx [ ebp + 0x50 ]
mov edi [ eax + ecx * 4 ]
push ebx
lea eax [ ebp + 0x6c ]
push eax
lea eax [ ebp + 0x64 ]
push eax
mov [ ebp + 0x64 ] ebx
mov [ ebp + 0x6c ] ebx
push [ edi + 0x4 ]
push [ edi ]
call sub_40d97a
add esp 0x14
cmp eax ebx
mov [ ebp + 0x48 ] eax
jne r-xdata
pop esi
add ebp 0x5c
leave
retn 0x1c
xor eax eax
add eax 0x4
jmp r-xdata
push eax
mov ecx edi
mov [ esi + 0x6c ] eax
call sub_408761
mov eax [ esi + 0x6c ]
cmp eax ebx
je r-xdata
cmp [ ebp + 0x40 ] ebx
je r-xdata
mov eax [ edi + 0x6c ]
mov ecx [ ebp + 0x74 ]
mov [ eax + 0x70 ] ecx
mov edx [ esi + 0x14 ]
mov esi [ esi + 0x18 ]
push 0x4
pop ecx
add [ ebp + 0x58 ] ecx
mov eax r--data
mov [ ebp + 0x24 ] ecx
mov [ ebp + 0x10 ] ecx
push edx
lea ecx [ ebp + 0x14 ]
mov [ ebp + 0x48 ] edx
mov [ ebp + 0x18 ] ebx
mov [ ebp + 0x1c ] ebx
mov [ ebp + 0x20 ] ebx
mov [ ebp + 0x14 ] eax
mov [ ebp + 0x4 ] ebx
mov [ ebp + 0x8 ] ebx
mov [ ebp + 0xc ] ebx
mov [ ebp ] eax
call sub_40e840
push esi
lea ecx [ ebp ]
call sub_40e840
cmp esi ebx
jbe r-xdata
mov ecx [ esi + 0xc ]
cmp ecx 0xffffffff
ja r-xdata
inc [ ebp + 0x64 ]
mov eax [ ebp + 0x74 ]
mov ecx [ ebp + 0x64 ]
cmp ecx [ eax + 0x30 ]
jl r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
mov eax [ ebp + 0x6c ]
cmp eax ebx
je r-xdata
cmp [ edi + 0x14 ] 0x1
mov [ ebp + 0x54 ] ebx
jne r-xdata
mov [ esi + 0x70 ] eax
lea ecx [ ebp - 0x48 ]
call sub_40e988
lea ecx [ ebp - 0x98 ]
call sub_408976
lea ecx [ ebp - 0x34 ]
call sub_408ac7
lea ecx [ ebp + 0x28 ]
call sub_4087b4
pop edi
mov eax ebx
pop ebx
jmp r-xdata
push [ ebp + 0x30 ]
lea ecx [ ebp - 0x18 ]
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] 0x4
mov [ ebp - 0x18 ] r--data
call sub_40e840
xor esi esi
cmp [ ebp + 0x30 ] ebx
jle r-xdata
mov esi [ ebp + 0x74 ]
mov [ ebp + 0x4c ] esi
mov esi [ ebp + 0x74 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
mov edx [ eax ]
push ecx
push [ esi + 0x10 ]
push eax
call [ edx + 0xc ]
mov [ ebp + 0x48 ] eax
cmp eax ebx
mov eax [ ebp + 0x54 ]
jne r-xdata
mov eax [ ebp + 0x64 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
cmp [ ebp + 0x6c ] ebx
je r-xdata
cmp [ edi + 0x18 ] 0x1
jne r-xdata
push [ ebp + 0x7c ]
mov eax [ ebp + 0x78 ]
push 0x1
push ebx
lea edx [ ebp - 0x4 ]
push edx
push [ ebp + 0x30 ]
mov [ ebp - 0x4 ] eax
mov eax [ edi + 0x74 ]
mov ecx [ eax ]
push ebx
push [ ebp - 0xc ]
push eax
call [ ecx + 0xc ]
lea ecx [ ebp - 0x18 ]
mov ebx eax
call sub_40e988
jmp r-xdata
mov eax [ ebp + 0x34 ]
mov eax [ eax + esi * 4 ]
push [ eax ]
lea ecx [ ebp - 0x18 ]
call sub_40873f
inc esi
cmp esi [ ebp + 0x30 ]
jl r-xdata
push [ ebp + 0xc ]
mov ecx [ edi + 0x70 ]
push [ ebp + 0x20 ]
mov esi [ ebp + 0x44 ]
mov eax [ ecx ]
push esi
call [ eax + 0x8 ]
lea ecx [ ebp ]
call sub_40e988
lea ecx [ ebp + 0x14 ]
call sub_40e988
inc esi
cmp esi [ ebp + 0x40 ]
mov [ ebp + 0x44 ] esi
jl r-xdata
push [ ebp + 0x50 ]
mov ecx esi
call sub_4088bc
cmp eax ebx
jl r-xdata
mov eax [ esi + 0x48 ]
mov ecx [ ebp + 0x3c ]
lea eax [ eax + ecx * 8 ]
push eax
lea ecx [ ebp ]
call sub_40873f
inc [ ebp + 0x3c ]
dec [ ebp + 0x4c ]
jne r-xdata
jmp r-xdata
cmp eax ebx
je r-xdata
cmp eax ebx
je r-xdata
mov ebx [ ebp + 0x48 ]
jmp r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
mov eax [ ebp + 0x64 ]
cmp eax ebx
je r-xdata
push [ ebp + 0x6c ]
lea ecx [ ebp + 0x54 ]
call sub_408761
cmp [ esi + 0x68 ] bl
je r-xdata
cmp [ ebp + 0x64 ] ebx
je r-xdata
mov eax [ ebp + 0x74 ]
mov eax [ eax + 0xc ]
mov ecx [ ebp + 0x44 ]
mov esi [ eax + ecx * 4 ]
mov eax [ edi + 0x84 ]
mov ecx [ ebp + 0x58 ]
mov eax [ ecx + eax ]
mov eax [ eax ]
lea edx [ ebp + 0x54 ]
push edx
push r--data
mov [ ebp + 0x54 ] ebx
mov ecx [ eax ]
push eax
call [ ecx ]
mov eax [ ebp + 0x54 ]
cmp eax ebx
je r-xdata
push [ ebp + 0x50 ]
mov ecx esi
call sub_408952
cmp eax ebx
jl r-xdata
mov ecx [ esi + 0x20 ]
mov eax [ ecx + eax * 8 + 0x4 ]
mov ecx [ esi + 0x48 ]
jmp r-xdata
cmp [ ebp + 0x48 ] ebx
mov [ ebp + 0x4c ] ebx
jbe r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
mov ebx 0x80004001
jmp r-xdata
lea eax [ ebp + 0x54 ]
push eax
lea ecx [ esi + 0x78 ]
call sub_40cde7
mov eax [ ebp + 0x54 ]
cmp eax ebx
je r-xdata
push [ ebp + 0x6c ]
mov ecx [ esi + 0x6c ]
call sub_40d71f
mov eax [ ebp + 0x6c ]
cmp eax ebx
je r-xdata
push [ ebp + 0x64 ]
lea ecx [ ebp + 0x54 ]
call sub_408761
cmp [ esi + 0x68 ] bl
je r-xdata
lea ecx [ ebp ]
call sub_40e988
lea ecx [ ebp + 0x14 ]
call sub_40e988
mov ebx 0x80004005
jmp r-xdata
mov ecx [ ebp + 0x70 ]
lea eax [ ecx + eax * 8 ]
push eax
lea ecx [ ebp + 0x14 ]
call sub_40873f
inc [ ebp + 0x4c ]
mov eax [ ebp + 0x4c ]
inc [ ebp + 0x50 ]
cmp eax [ ebp + 0x48 ]
jb r-xdata
mov eax [ ebp + 0x6c ]
cmp eax ebx
je r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
push [ ebp + 0x64 ]
mov ecx [ esi + 0x6c ]
call sub_40d6fa
jmp r-xdata
mov eax [ ebp + 0x64 ]
cmp eax ebx
je r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
inc [ ebp + 0x50 ]
mov eax [ ebp + 0x50 ]
cmp eax [ ebp + 0x40 ]
jl r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
sub_40940d
mov eax [ esp + 0x8 ]
push esi
push edi
mov edi ecx
mov ecx [ esp + 0xc ]
mov [ edi + 0x4 ] eax
xor eax eax
cmp ecx 0xffffffff
lea esi [ edi + 0x8 ]
mov [ edi ] ecx
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] eax
mov [ esi + 0x10 ] 0x1
mov [ esi ] r--data
mov [ edi + 0x20 ] eax
mov [ edi + 0x24 ] eax
je r-xdata
mov eax edi
pop edi
pop esi
retn 0x8
push 0x1
mov ecx esi
call sub_40e840
push 0x1
mov ecx esi
call sub_4093eb
sub_4094dd
push ebx
push ebp
mov ebp [ esp + 0xc ]
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
mov eax [ esi + 0x8 ]
add eax edi
push eax
call sub_40e840
xor ebx ebx
test edi edi
jle r-xdata
pop edi
mov eax esi
pop esi
pop ebp
pop ebx
retn 0x4
mov eax [ ebp + 0xc ]
movzx eax [ ebx + eax ]
push eax
mov ecx esi
call sub_4093eb
inc ebx
cmp ebx edi
jl r-xdata
sub_409518
push esi
mov esi ecx
lea ecx [ esi + 0x78 ]
call sub_4087b4
mov eax [ esi + 0x74 ]
test eax eax
je r-xdata
lea ecx [ esi + 0x4 ]
pop esi
jmp sub_408a5f
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
sub_409539
push ebp
mov ebp esp
push ecx
push esi
push edi
mov edi ecx
mov eax [ edi + 0x44 ]
test eax eax
jne r-xdata
lea esi [ eax - 0x1 ]
test esi esi
jl r-xdata
xor edx edx
push r--data
lea eax [ ebp - 0x4 ]
push eax
mov [ ebp - 0x4 ] 0x1
call _CxxThrowException
push esi
mov ecx edi
call sub_40892b
test eax eax
jl r-xdata
mov ecx [ edi + 0x48 ]
mov eax [ ecx + esi * 8 ]
mov edx [ ecx + esi * 8 + 0x4 ]
jmp r-xdata
dec esi
jns r-xdata
pop edi
pop esi
leave
retn
sub_409585
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push edi
lea eax [ ebp + 0xc ]
push eax
push ebx
mov edi ecx
call sub_403dc9
mov eax [ ebp + 0xc ]
test eax eax
jle r-xdata
push [ ebp + 0xc ]
mov ecx edi
push ebx
call sub_40e939
pop edi
pop ebx
pop ebp
retn 0x8
push esi
mov esi ebx
shl esi 0x2
mov [ ebp + 0x8 ] eax
add esi 0x4
dec [ ebp + 0x8 ]
jne r-xdata
push 0x1
call sub_4094be
mov eax [ edi + 0xc ]
mov ecx [ esi + eax ]
test ecx ecx
je r-xdata
pop esi
sub_4095d4
mov eax [ esp + 0x4 ]
mov edx [ ecx + 0x190 ]
shl eax 0x2
push esi
mov esi [ eax + edx ]
mov edx [ ecx + 0x48 ]
mov eax [ eax + edx ]
mov eax [ eax + 0x30 ]
push edi
xor edi edi
xor edx edx
test eax eax
jle r-xdata
mov eax edi
pop edi
pop esi
retn 0x4
mov ecx [ ecx + 0xc ]
lea ecx [ ecx + esi * 8 ]
mov esi [ ecx ]
add edi esi
mov esi [ ecx + 0x4 ]
adc edx esi
add ecx 0x8
dec eax
jne r-xdata
sub_40962a
push esi
push [ esp + 0x8 ]
mov esi ecx
xor eax eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] eax
mov [ esi + 0x10 ] 0x1
mov [ esi ] r--data
call sub_409613
mov eax esi
pop esi
retn 0x4
sub_409654
push esi
push edi
mov edi [ esp + 0xc ]
mov eax [ edi ]
mov esi ecx
mov [ esi ] eax
mov eax [ edi + 0x4 ]
mov [ esi + 0x4 ] eax
lea eax [ edi + 0x8 ]
push eax
lea ecx [ esi + 0x8 ]
call sub_40962a
mov eax [ edi + 0x20 ]
mov [ esi + 0x20 ] eax
mov eax [ edi + 0x24 ]
mov [ esi + 0x24 ] eax
pop edi
mov eax esi
pop esi
retn 0x4
sub_409685
push esi
push 0x28
mov esi ecx
call ??2@YAPAXI@Z
test eax eax
pop ecx
je r-xdata
xor eax eax
push [ esp + 0x8 ]
mov ecx eax
call sub_409654
jmp r-xdata
push eax
mov ecx esi
call sub_40873f
pop esi
retn 0x4
sub_4096af
push ebp
sub esp 0x60
mov eax r-xdata
call sub_4121e4
sub esp 0xc0
push ebx
push esi
push edi
mov [ ebp - 0x10 ] esp
xor edi edi
mov [ ebp - 0x4 ] edi
cmp [ ebp + 0x78 ] edi
setne al
mov [ ebp + 0xc ] al
push [ ebp + 0x7c ]
lea ecx [ ebp + 0x7c ]
call sub_408726
mov [ ebp + 0x38 ] edi
mov [ ebp + 0x3c ] edi
cmp [ ebp + 0x74 ] 0xffffffff
sete [ ebp + 0x7b ]
mov ebx [ ebp + 0x6c ]
cmp [ ebp + 0x7b ] 0x0
je r-xdata
cmp [ ebp + 0x74 ] edi
jne r-xdata
mov eax [ ebx + 0x7c ]
mov [ ebp + 0x74 ] eax
mov [ ebp + 0x4c ] r--data
mov [ ebp + 0x50 ] edi
mov [ ebp + 0x54 ] edi
mov [ ebp + 0x58 ] edi
mov [ ebp + 0x5c ] 0x4
mov [ ebp + 0x4c ] r--data
mov [ ebp + 0x4c ] r--data
xor eax eax
mov eax [ ebp + 0x7c ]
cmp eax edi
mov esi [ ebp + 0x7c ]
mov eax [ esi ]
push [ ebp + 0x3c ]
push [ ebp + 0x38 ]
push esi
call [ eax + 0xc ]
mov edi eax
test edi edi
je r-xdata
cmp [ ebp + 0x7b ] 0x0
jne r-xdata
xor eax eax
jmp sub_409b7b
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
push 0x1
lea ecx [ ebp - 0xcc ]
call sub_408d67
xor esi esi
mov [ ebp + 0x30 ] esi
mov [ ebp + 0x34 ] esi
mov [ ebp + 0x28 ] esi
mov [ ebp + 0x2c ] esi
push 0x38
call ??2@YAPAXI@Z
pop ecx
cmp eax esi
je r-xdata
lea ecx [ ebp + 0x4c ]
call sub_40945d
mov eax [ esi ]
push esi
call [ eax + 0x8 ]
mov [ ebp + 0x48 ] eax
mov ecx [ ebx + 0x1c8 ]
mov esi [ ecx + eax * 4 ]
cmp esi 0xffffffff
jne r-xdata
mov ecx [ ebp + 0x70 ]
mov eax [ ecx + eax * 4 ]
mov [ ebp + 0x70 ] esi
push esi
lea ecx [ ebp + 0x74 ]
call sub_408726
xor edi edi
push edi
push [ ebp + 0x7c ]
mov ecx esi
call sub_40eb53
mov [ ebp + 0x40 ] edi
mov ecx eax
call sub_40ec26
mov esi eax
mov eax [ ebp + 0x54 ]
cmp eax edi
je r-xdata
push esi
push eax
lea ecx [ ebp - 0x40 ]
call sub_40940d
push eax
lea ecx [ ebp + 0x4c ]
call sub_409685
lea ecx [ ebp - 0x38 ]
call sub_40e988
cmp edi [ ebp + 0x54 ]
jl r-xdata
mov eax [ ebp + 0x74 ]
test eax eax
je r-xdata
push esi
push 0xffffffff
lea ecx [ ebp - 0x40 ]
call sub_40940d
push eax
lea ecx [ ebp + 0x4c ]
call sub_409685
lea ecx [ ebp - 0x38 ]
call sub_40e988
mov eax [ ebx + 0x58 ]
mov ecx [ eax + esi * 4 ]
call sub_409539
add [ ebp + 0x38 ] eax
adc [ ebp + 0x3c ] edx
mov ecx [ ebp + 0x58 ]
mov edi [ ebp + 0x54 ]
mov ecx [ ecx + edi * 4 - 0x4 ]
mov [ ecx + 0x20 ] eax
mov [ ecx + 0x24 ] edx
mov ecx [ ebp + 0x58 ]
mov eax [ ecx + eax * 4 - 0x4 ]
cmp esi [ eax + 0x4 ]
je r-xdata
mov [ ebp + 0x24 ] eax
cmp eax [ ebp + 0x74 ]
jae r-xdata
mov eax [ ebp + 0x58 ]
mov esi [ eax + edi * 4 ]
mov eax [ esi + 0x20 ]
mov [ ebp + 0x10 ] eax
mov eax [ esi + 0x24 ]
mov [ ebp + 0x14 ] eax
and [ ebp + 0x1c ] 0x0
and [ ebp + 0x20 ] 0x0
push 0x38
call ??2@YAPAXI@Z
pop ecx
test eax eax
je r-xdata
mov eax [ ebp + 0x74 ]
test eax eax
je r-xdata
lea ecx [ ebp - 0xcc ]
call sub_409518
lea ecx [ ebp + 0x4c ]
call sub_40945d
mov eax [ ebp + 0x7c ]
test eax eax
je r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
mov eax [ ebp + 0x24 ]
inc eax
xor edi edi
jmp r-xdata
sete al
push eax
lea ecx [ edi + 0x8 ]
call sub_4093eb
inc [ ebp + 0x44 ]
jmp r-xdata
mov eax [ ebp + 0x58 ]
mov ecx [ ebp + 0x54 ]
mov edi [ eax + ecx * 4 - 0x4 ]
mov eax [ ebx + 0x1b4 ]
mov esi [ eax + esi * 4 ]
mov eax [ edi + 0x10 ]
mov [ ebp + 0x44 ] eax
xor eax eax
mov ecx eax
call sub_409bfb
jmp r-xdata
lea ecx [ ebp - 0xcc ]
call sub_409518
lea ecx [ ebp + 0x4c ]
call sub_40945d
mov eax [ ebp + 0x7c ]
test eax eax
jmp r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
mov eax esi
jmp sub_409b7b
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
mov eax [ ebp + 0x48 ]
sub eax esi
cmp [ ebp + 0x44 ] eax
ja r-xdata
cmp [ ebx + 0x1e0 ] 0x0
setne cl
push ecx
push [ ebp + 0xc ]
push [ ebp + 0x7c ]
lea ecx [ esi + 0x8 ]
push ecx
push eax
push 0x0
push edi
mov ecx [ ebp + 0x60 ]
call sub_409f9c
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ edi + 0x1a4 ]
mov eax [ ecx + eax * 4 ]
mov [ ebp + 0x60 ] eax
push eax
lea ecx [ ebp + 0x78 ]
call sub_408726
lea edi [ ebx + 0x10 ]
mov [ ebp - 0x18 ] edi
mov eax [ esi ]
cmp eax 0xffffffff
jne r-xdata
je r-xdata
cmp [ esi ] 0xffffffff
jne r-xdata
mov eax [ ebp + 0x78 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x78 ]
test eax eax
je r-xdata
mov esi [ esi + 0x4 ]
mov eax [ edi + 0x48 ]
mov eax [ eax + esi * 4 ]
mov [ ebp + 0x18 ] eax
push esi
mov ecx edi
call sub_4095d4
mov [ ebp + 0x1c ] eax
mov [ ebp + 0x20 ] edx
mov eax [ edi + 0x190 ]
mov ebx [ eax + esi * 4 ]
mov [ ebp - 0x14 ] ebx
push 0x0
push esi
mov ecx edi
call sub_409473
mov [ ebp + 0x4 ] eax
mov [ ebp + 0x8 ] edx
mov [ ebp - 0x4 ] 0x1
mov eax [ edi + 0xc ]
lea eax [ eax + ebx * 8 ]
mov ecx [ ebp + 0x6c ]
mov ecx [ ecx + 0x8 ]
mov ebx [ ebp + 0x74 ]
push ebx
mov esi [ ebp + 0x78 ]
push esi
push [ ebp + 0x18 ]
push eax
push edx
push [ ebp + 0x4 ]
push ecx
lea ecx [ ebp - 0xcc ]
call sub_408e8c
mov edi eax
cmp edi 0x1
jne r-xdata
mov eax [ ebp + 0x74 ]
test eax eax
je r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
inc [ ebp + 0x40 ]
mov eax [ ebp + 0x10 ]
add [ ebp + 0x28 ] eax
mov eax [ ebp + 0x14 ]
adc [ ebp + 0x2c ] eax
mov eax [ ebp + 0x1c ]
add [ ebp + 0x30 ] eax
mov eax [ ebp + 0x20 ]
adc [ ebp + 0x34 ] eax
mov ebx [ ebp + 0x6c ]
mov esi [ ebp + 0x70 ]
mov edi [ ebp + 0x40 ]
jmp r-xdata
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
cmp edi 0x80004001
jne r-xdata
push 0x2
lea ecx [ ebp - 0xcc ]
call sub_409518
lea ecx [ ebp + 0x4c ]
call sub_40945d
mov eax [ ebp + 0x7c ]
test eax eax
je r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
mov eax [ ebp + 0x28 ]
mov [ esi + 0x28 ] eax
mov eax [ ebp + 0x2c ]
mov [ esi + 0x2c ] eax
mov eax [ ebp + 0x30 ]
mov [ esi + 0x20 ] eax
mov eax [ ebp + 0x34 ]
mov [ esi + 0x24 ] eax
mov ecx esi
call sub_40eb48
mov esi eax
test esi esi
je r-xdata
test edi edi
jne r-xdata
push 0x1
jmp r-xdata
test esi esi
je r-xdata
test esi esi
je r-xdata
mov eax ebx
jmp sub_409b7b
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
mov ecx [ ebp + 0x60 ]
mov eax [ ecx + 0x18 ]
mov eax [ eax + 0x8 ]
cmp [ ecx + 0x28 ] eax
je r-xdata
mov ecx [ ebp + 0x60 ]
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov eax [ esi ]
push esi
call [ eax + 0x8 ]
test ebx ebx
je r-xdata
push esi
mov eax [ esi ]
call [ eax + 0x8 ]
and [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
push 0x2
jmp r-xdata
lea ecx [ ebp - 0xcc ]
call sub_409518
lea ecx [ ebp + 0x4c ]
call sub_40945d
mov eax [ ebp + 0x7c ]
test eax eax
je r-xdata
mov eax [ ebx ]
push ebx
call [ eax + 0x8 ]
mov eax [ esi ]
push esi
call [ eax + 0x8 ]
jmp r-xdata
call sub_409f31
mov edi eax
test edi edi
je r-xdata
mov eax edi
jmp sub_409b7b
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
jmp r-xdata
sub_409acf
push 0x2
mov ecx [ ebp + 0x60 ]
call sub_409f31
mov [ ebp + 0x48 ] eax
test eax eax
je r-xdata
and [ ebp - 0x4 ] 0x0
mov eax r-xdata
retn
mov [ ebp ] eax
and [ ebp - 0x4 ] 0x0
mov eax sub_409aed
retn
sub_409aed
mov eax [ ebp + 0x78 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x74 ]
test eax eax
je r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
lea ecx [ ebp - 0xcc ]
call sub_409518
lea ecx [ ebp + 0x4c ]
call sub_40945d
mov eax [ ebp + 0x7c ]
test eax eax
je r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
mov eax [ ebp + 0x48 ]
jmp sub_409b7b
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
sub_409b8f
push esi
mov esi ecx
mov ecx [ esi + 0xc ]
add ecx 0x8
call sub_40a018
inc [ esi + 0x28 ]
push [ esp + 0x8 ]
mov [ esi + 0x2e ] 0x0
mov esi [ esi + 0x1c ]
mov eax [ esi ]
push esi
call [ eax + 0x1c ]
pop esi
retn 0x4
sub_409bd7
push esi
mov esi ecx
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
test [ esp + 0x8 ] 0x1
je r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
mov eax esi
pop esi
retn 0x4
push esi
call ??3@YAXPAX@Z
pop ecx
sub_409bfb
push ebx
push esi
mov esi ecx
mov [ esi + 0x4 ] r--data
xor ebx ebx
mov [ esi + 0x8 ] ebx
push edi
mov [ esi ] r--data
mov [ esi + 0x4 ] r--data
lea edi [ esi + 0x10 ]
mov [ edi ] ebx
push 0x20
mov [ esi + 0x1c ] ebx
call ??2@YAPAXI@Z
cmp eax ebx
pop ecx
je r-xdata
xor eax eax
mov [ eax + 0x4 ] ebx
mov [ eax ] r--data
mov [ eax + 0x8 ] ebx
jmp r-xdata
push eax
mov ecx edi
mov [ esi + 0xc ] eax
call sub_408761
pop edi
mov eax esi
pop esi
pop ebx
retn
sub_409c4e
push ebp
mov ebp esp
push r--data
push [ ebp + 0xc ]
call sub_401459
test eax eax
pop ecx
pop ecx
je r-xdata
push r--data
push [ ebp + 0xc ]
call sub_401459
test eax eax
pop ecx
pop ecx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx eax
neg ecx
lea edx [ eax + 0x4 ]
sbb ecx ecx
and ecx edx
mov edx [ ebp + 0x10 ]
mov [ edx ] ecx
mov ecx [ eax ]
push eax
call [ ecx + 0x4 ]
xor eax eax
jmp r-xdata
mov eax 0x80004002
pop ebp
retn 0xc
sub_409c9d
push esi
mov esi ecx
mov eax [ esi + 0x1c ]
test eax eax
je r-xdata
mov esi [ esi + 0x10 ]
test esi esi
je r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
pop esi
retn
mov eax [ esi ]
push esi
call [ eax + 0x8 ]
sub_409cc6
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
mov esi ecx
mov ecx [ esi + 0x18 ]
mov eax [ esi + 0x28 ]
mov ecx [ ecx + 0xc ]
cmp [ eax + ecx ] 0x0
push edi
je r-xdata
mov [ ebp - 0x4 ] 0x2
xor ecx ecx
cmp [ esi + 0x2c ] cl
setne cl
mov [ ebp - 0x4 ] ecx
jmp r-xdata
mov ecx [ esi + 0xc ]
push [ ebp - 0x8 ]
add ecx 0x8
call sub_408761
mov cl [ esi + 0x2d ]
mov eax [ esi + 0xc ]
or [ eax + 0x18 ] 0xffffffff
cmp [ ebp - 0x4 ] 0x0
mov [ eax + 0x10 ] ebx
mov [ eax + 0x14 ] ebx
mov [ eax + 0x1c ] cl
mov ecx [ esi + 0x14 ]
mov [ esi + 0x2e ] 0x1
mov eax [ ecx + 0x70 ]
mov ebx [ eax + edi * 4 ]
mov eax [ ebx ]
mov [ esi + 0x30 ] eax
mov eax [ ebx + 0x4 ]
mov [ esi + 0x34 ] eax
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp eax ebx
je r-xdata
push [ ebp - 0x4 ]
mov edi [ esi + 0x24 ]
lea edx [ ebp - 0x8 ]
push edx
mov edx [ esi + 0x20 ]
add edi eax
mov eax [ esi + 0x1c ]
add edx edi
xor ebx ebx
push edx
mov [ ebp - 0x8 ] ebx
mov ecx [ eax ]
push eax
call [ ecx + 0x14 ]
cmp eax ebx
mov [ ebp - 0xc ] eax
je r-xdata
mov esi [ esi + 0x1c ]
push [ ebp - 0x4 ]
mov eax [ esi ]
push esi
call [ eax + 0x18 ]
mov esi eax
mov eax [ ebp - 0x8 ]
test eax eax
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
jmp r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
mov eax esi
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
push edi
call sub_409bb5
test al al
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebx + 0x1d ] al
jne r-xdata
mov [ ebp - 0x4 ] 0x2
sub_409daa
mov eax [ ecx + 0x28 ]
add eax [ ecx + 0x24 ]
mov edx [ ecx + 0x14 ]
mov edx [ edx + 0x70 ]
mov eax [ edx + eax * 4 ]
xor edx edx
cmp [ eax + 0x1d ] dl
jne r-xdata
xor eax eax
cmp [ eax + 0x1e ] dl
je r-xdata
cmp [ ecx + 0x2d ] dl
je r-xdata
push esi
mov esi [ ecx + 0xc ]
mov esi [ esi + 0x18 ]
not esi
cmp [ eax + 0xc ] esi
pop esi
je r-xdata
push 0x3
pop eax
jmp r-xdata
push eax
call sub_409b8f
retn
sub_409de7
push esi
mov esi ecx
jmp r-xdata
mov ecx [ esi + 0x18 ]
mov eax [ esi + 0x28 ]
cmp eax [ ecx + 0x8 ]
jl r-xdata
mov ecx [ esi + 0x24 ]
add ecx eax
mov eax [ esi + 0x14 ]
mov eax [ eax + 0x70 ]
mov eax [ eax + ecx * 4 ]
mov ecx [ eax ]
or ecx [ eax + 0x4 ]
jne r-xdata
xor eax eax
mov ecx esi
call sub_409cc6
test eax eax
jne r-xdata
pop esi
retn
mov ecx esi
call sub_409daa
test eax eax
jne r-xdata
sub_409e26
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x14 ]
test edi edi
je r-xdata
mov ecx [ ebp + 0x10 ]
test ecx ecx
je r-xdata
and [ edi ] 0x0
xor eax eax
mov esi [ ebp + 0x8 ]
jmp r-xdata
cmp [ esi + 0x2e ] 0x0
je r-xdata
mov ecx esi
call sub_409de7
test eax eax
jne r-xdata
xor eax eax
cmp eax [ esi + 0x34 ]
ja r-xdata
pop edi
pop esi
pop ebp
retn 0x10
mov eax [ esi + 0x18 ]
mov ecx [ esi + 0x28 ]
cmp ecx [ eax + 0x8 ]
je r-xdata
mov eax [ esi + 0x30 ]
mov [ ebp + 0x14 ] eax
jb r-xdata
test edi edi
je r-xdata
mov ecx esi
call sub_409cc6
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
mov [ ebp + 0x14 ] ecx
jmp r-xdata
cmp ecx [ esi + 0x30 ]
jae r-xdata
mov eax [ ebp + 0x10 ]
add [ edi ] eax
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
add [ ebp + 0xc ] eax
sub [ ebp + 0x10 ] eax
sub [ esi + 0x30 ] eax
sbb [ esi + 0x34 ] 0x0
test edi edi
je r-xdata
mov eax [ esi + 0x10 ]
mov ecx [ eax ]
lea edx [ ebp + 0x14 ]
push edx
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
push eax
call [ ecx + 0xc ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0x10 ]
jmp r-xdata
mov eax [ esi + 0x30 ]
or eax [ esi + 0x34 ]
jne r-xdata
add [ edi ] eax
mov ecx esi
call sub_409daa
test eax eax
jne r-xdata
mov ecx esi
call sub_409de7
jmp r-xdata
test eax eax
jne r-xdata
sub_409ef2
mov eax [ esp + 0x10 ]
and [ eax ] 0x0
and [ eax + 0x4 ] 0x0
mov ecx [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
push esi
mov esi [ ecx + 0x14 ]
cmp edx [ esi + 0x8 ]
jl r-xdata
mov esi [ ecx + 0x20 ]
mov ecx [ ecx + 0x10 ]
mov ecx [ ecx + 0x70 ]
add esi edx
mov ecx [ ecx + esi * 4 ]
mov edx [ ecx ]
mov [ eax ] edx
mov ecx [ ecx + 0x4 ]
mov [ eax + 0x4 ] ecx
xor eax eax
xor eax eax
inc eax
jmp r-xdata
pop esi
retn 0x10
sub_409f31
push esi
mov esi ecx
jmp r-xdata
mov ecx [ esi + 0x28 ]
mov eax [ esi + 0x18 ]
cmp ecx [ eax + 0x8 ]
jl r-xdata
cmp [ esi + 0x2e ] 0x0
mov ecx esi
je r-xdata
xor eax eax
call sub_409cc6
push [ esp + 0x8 ]
call sub_409b8f
jmp r-xdata
pop esi
retn 0x4
test eax eax
jne r-xdata
sub_409f7b
push esi
mov esi [ esp + 0x8 ]
dec [ esi + 0x8 ]
mov eax [ esi + 0x8 ]
jne r-xdata
pop esi
retn 0x4
mov ecx esi
call sub_409c9d
push esi
call ??3@YAXPAX@Z
pop ecx
xor eax eax
sub_409f9c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push [ ebp + 0x18 ]
mov esi ecx
mov [ esi + 0x14 ] eax
mov eax [ ebp + 0xc ]
mov [ esi + 0x20 ] eax
mov eax [ ebp + 0x10 ]
mov [ esi + 0x24 ] eax
mov eax [ ebp + 0x14 ]
lea ecx [ esi + 0x1c ]
mov [ esi + 0x18 ] eax
call sub_408761
mov al [ ebp + 0x1c ]
and [ esi + 0x28 ] 0x0
mov [ esi + 0x2c ] al
mov al [ ebp + 0x20 ]
mov ecx esi
mov [ esi + 0x2d ] al
mov [ esi + 0x2e ] 0x0
call sub_409de7
pop esi
pop ebp
retn 0x1c
sub_40a02c
push esi
push edi
mov esi ecx
call sub_40e909
lea ecx [ esi + 0x14 ]
call sub_40e909
lea ecx [ esi + 0x28 ]
call sub_40e909
lea ecx [ esi + 0x3c ]
call sub_40e909
lea ecx [ esi + 0x50 ]
call sub_40e909
lea ecx [ esi + 0x64 ]
call sub_40e909
lea edi [ esi + 0x78 ]
mov ecx edi
call sub_40e909
lea ecx [ edi + 0x14 ]
call sub_40e909
lea edi [ esi + 0xa0 ]
mov ecx edi
call sub_40e909
lea ecx [ edi + 0x14 ]
call sub_40e909
lea edi [ esi + 0xc8 ]
mov ecx edi
call sub_40e909
lea ecx [ edi + 0x14 ]
call sub_40e909
lea edi [ esi + 0xf0 ]
mov ecx edi
call sub_40e909
lea ecx [ edi + 0x14 ]
call sub_40e909
pop edi
lea ecx [ esi + 0x118 ]
pop esi
jmp sub_40e909
sub_40a0bb
push esi
mov esi ecx
call sub_40a02c
lea ecx [ esi + 0x158 ]
call sub_40e909
lea ecx [ esi + 0x170 ]
call sub_40e909
lea ecx [ esi + 0x184 ]
call sub_40e909
lea ecx [ esi + 0x198 ]
call sub_40e909
lea ecx [ esi + 0x1ac ]
call sub_40e909
xor eax eax
mov [ esi + 0x1c0 ] eax
mov [ esi + 0x1c4 ] eax
mov [ esi + 0x1c8 ] eax
mov [ esi + 0x1cc ] eax
pop esi
retn
sub_40a152
mov eax r-xdata
call sub_4121e4
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x10 ] esp
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x8 ]
lea ecx [ esi + 0x8 ]
call sub_40a018
lea ecx [ esi + 0x10 ]
call sub_40a0bb
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn 0x4
sub_40a19e
push ebp
mov ebp esp
push ebx
push edi
mov edi [ ebp + 0x8 ]
lea eax [ ebp + 0xc ]
push eax
push edi
mov ebx ecx
call sub_403dc9
mov eax [ ebp + 0xc ]
test eax eax
jle r-xdata
push [ ebp + 0xc ]
mov ecx ebx
push edi
call sub_40e939
pop edi
pop ebx
pop ebp
retn 0x8
push esi
mov esi edi
shl esi 0x2
mov [ ebp + 0x8 ] eax
mov eax [ ebx + 0xc ]
push [ eax + esi ]
call ??3@YAXPAX@Z
add esi 0x4
dec [ ebp + 0x8 ]
pop ecx
jne r-xdata
pop esi
sub_40a1e8
mov eax [ esp + 0x4 ]
xor edx edx
cmp eax [ ecx + 0x1c ]
push esi
jge r-xdata
mov eax [ esp + 0xc ]
mov [ eax ] edx
mov [ eax + 0x4 ] edx
xor al al
mov esi [ ecx + 0x20 ]
cmp [ eax + esi ] dl
je r-xdata
mov ecx [ ecx + 0xc ]
mov esi [ ecx + eax * 8 ]
mov edx [ esp + 0xc ]
mov [ edx ] esi
mov eax [ ecx + eax * 8 + 0x4 ]
mov [ edx + 0x4 ] eax
mov al 0x1
jmp r-xdata
pop esi
retn 0x8
sub_40a238
push esi
mov esi ecx
push [ esi + 0x8 ]
mov [ esi ] r--data
call ??3@YAXPAX@Z
test [ esp + 0xc ] 0x1
pop ecx
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call ??3@YAXPAX@Z
pop ecx
sub_40a2bc
push esi
mov esi ecx
push [ esi + 0x10 ]
mov [ esi + 0x8 ] r--data
call ??3@YAXPAX@Z
test [ esp + 0xc ] 0x1
pop ecx
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call ??3@YAXPAX@Z
pop ecx
sub_40a31b
push esi
mov esi ecx
push [ esi + 0x10 ]
call ??3@YAXPAX@Z
test [ esp + 0xc ] 0x1
pop ecx
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call ??3@YAXPAX@Z
pop ecx
sub_40a37a
mov eax ecx
xor ecx ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] 0x8
mov [ eax ] r--data
mov [ eax + 0x18 ] ecx
mov [ eax + 0x1c ] ecx
mov [ eax + 0x20 ] ecx
mov [ eax + 0x24 ] 0x1
mov [ eax + 0x14 ] r--data
retn
sub_40a3ac
push ebp
mov ebp esp
sub esp 0x10
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
call sub_40a1e8
test al al
je r-xdata
leave
retn
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x10 ]
push eax
call sub_40edcf
sub_40a413
mov eax [ ecx + 0x8 ]
dec eax
js r-xdata
xor al al
retn
mov ecx [ ecx + 0xc ]
lea edx [ ecx + eax * 4 ]
dec eax
sub edx 0x4
test eax eax
jge r-xdata
cmp [ ecx + 0x4 ] 0x0
je r-xdata
mov ecx [ edx ]
cmp [ ecx ] 0x6f10701
jne r-xdata
mov al 0x1
retn
sub_40a43d
push esi
mov esi ecx
lea ecx [ esi + 0x118 ]
call sub_40e988
lea ecx [ esi + 0xf0 ]
call sub_40a12d
lea ecx [ esi + 0xc8 ]
call sub_40a12d
lea ecx [ esi + 0xa0 ]
call sub_40a12d
lea ecx [ esi + 0x78 ]
call sub_40a12d
lea ecx [ esi + 0x64 ]
call sub_40a274
lea ecx [ esi + 0x50 ]
call sub_40e988
lea ecx [ esi + 0x3c ]
call sub_40a25e
lea ecx [ esi + 0x28 ]
call sub_40e988
lea ecx [ esi + 0x14 ]
call sub_40e988
mov ecx esi
pop esi
jmp sub_40e988
sub_40a4a4
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push edi
lea eax [ ebp + 0xc ]
push eax
push ebx
mov edi ecx
call sub_403dc9
mov eax [ ebp + 0xc ]
test eax eax
jle r-xdata
push [ ebp + 0xc ]
mov ecx edi
push ebx
call sub_40e939
pop edi
pop ebx
pop ebp
retn 0x8
push esi
mov esi ebx
shl esi 0x2
mov [ ebp + 0x8 ] eax
add esi 0x4
dec [ ebp + 0x8 ]
jne r-xdata
push 0x1
call sub_40a2bc
mov eax [ edi + 0xc ]
mov ecx [ esi + eax ]
test ecx ecx
je r-xdata
pop esi
sub_40a4f3
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push edi
lea eax [ ebp + 0xc ]
push eax
push ebx
mov edi ecx
call sub_403dc9
mov eax [ ebp + 0xc ]
test eax eax
jle r-xdata
push [ ebp + 0xc ]
mov ecx edi
push ebx
call sub_40e939
pop edi
pop ebx
pop ebp
retn 0x8
push esi
mov esi ebx
shl esi 0x2
mov [ ebp + 0x8 ] eax
add esi 0x4
dec [ ebp + 0x8 ]
jne r-xdata
push 0x1
call sub_40a31b
mov eax [ edi + 0xc ]
mov ecx [ esi + eax ]
test ecx ecx
je r-xdata
pop esi
sub_40a542
push ebx
push ebp
push esi
mov esi ecx
mov [ esi + 0x10 ] 0x8
mov [ esi ] r--data
push edi
xor edi edi
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
mov [ esi + 0x18 ] edi
mov [ esi + 0x1c ] edi
mov [ esi + 0x20 ] edi
xor ebp ebp
push 0x4
pop eax
mov ecx r--data
inc ebp
mov [ esi + 0x24 ] ebp
mov ebx r--data
mov [ esi + 0x14 ] ebx
mov [ esi + 0x28 ] ecx
mov [ esi + 0x2c ] edi
mov [ esi + 0x30 ] edi
mov [ esi + 0x34 ] edi
mov [ esi + 0x38 ] eax
mov [ esi + 0x40 ] edi
mov [ esi + 0x44 ] edi
mov [ esi + 0x48 ] edi
mov [ esi + 0x4c ] eax
mov [ esi + 0x3c ] r--data
mov [ esi + 0x50 ] ecx
mov [ esi + 0x54 ] edi
mov [ esi + 0x58 ] edi
mov [ esi + 0x5c ] edi
mov [ esi + 0x60 ] eax
lea ecx [ esi + 0x78 ]
mov [ esi + 0x68 ] edi
mov [ esi + 0x6c ] edi
mov [ esi + 0x70 ] edi
mov [ esi + 0x74 ] eax
mov [ esi + 0x64 ] r--data
call sub_40a37a
lea ecx [ esi + 0xa0 ]
call sub_40a37a
lea ecx [ esi + 0xc8 ]
call sub_40a37a
lea ecx [ esi + 0xf0 ]
call sub_40a37a
lea eax [ esi + 0x118 ]
mov [ eax + 0x4 ] edi
mov [ eax + 0x8 ] edi
mov [ eax + 0xc ] edi
pop edi
mov [ eax + 0x10 ] ebp
mov [ eax ] ebx
mov eax esi
pop esi
pop ebp
pop ebx
retn
sub_40a62b
mov eax r-xdata
call sub_4121e4
sub esp 0x28
push ebx
push esi
push edi
mov [ ebp - 0x10 ] esp
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x34 ] bx
mov [ ebp - 0x32 ] bx
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x80 ]
mov eax [ eax + edx * 4 ]
mov esi [ ebp + 0x10 ]
cmp esi 0xb
ja r-xdata
sub esi 0xc
je r-xdata
je r-xdata
add ecx 0xd8
sub esi 0x3
je r-xdata
add ecx 0xb0
jmp r-xdata
sub esi 0x3
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn 0x10
push edx
call sub_40a607
jmp r-xdata
sub esi 0x4
je r-xdata
lea eax [ ebp - 0x34 ]
push eax
push edx
call sub_40a3ac
pop ecx
cmp [ eax + 0x14 ] ebx
je r-xdata
sub esi 0x3
je r-xdata
push eax
lea ecx [ ebp - 0x34 ]
call sub_40ed63
jmp r-xdata
cmp [ eax + 0x1e ] bl
je r-xdata
dec esi
dec esi
je r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x34 ]
call sub_40ecdd
lea ecx [ ebp - 0x34 ]
call j_sub_40ec94
xor eax eax
jmp r-xdata
add eax 0x10
push eax
lea eax [ ebp - 0x24 ]
push eax
call sub_40e6cb
pop ecx
pop ecx
push [ eax ]
lea ecx [ ebp - 0x34 ]
call sub_40ed1c
push [ ebp - 0x24 ]
call ??3@YAXPAX@Z
jmp r-xdata
movzx eax [ eax + 0x1d ]
dec esi
je r-xdata
push [ eax + 0xc ]
jmp r-xdata
push edx
add ecx 0x10
call sub_409bb5
jmp r-xdata
sub esi 0x8
jne r-xdata
pop ecx
push [ eax + 0x4 ]
push [ eax ]
dec esi
je r-xdata
lea ecx [ ebp - 0x34 ]
call sub_40ed88
jmp r-xdata
lea eax [ ebp - 0x18 ]
push eax
push edx
add ecx 0x100
call sub_40a1e8
test al al
je r-xdata
mov eax [ ecx + 0x1c8 ]
mov eax [ eax + edx * 4 ]
cmp eax 0xffffffff
je r-xdata
dec esi
je r-xdata
push [ ebp - 0x14 ]
push [ ebp - 0x18 ]
jmp r-xdata
push ebx
push ebx
jmp r-xdata
mov esi [ ecx + 0x1b4 ]
cmp [ esi + eax * 4 ] edx
jne r-xdata
cmp [ eax + 0x1f ] bl
je r-xdata
dec esi
jne r-xdata
lea ecx [ ebp - 0x34 ]
call sub_40eda8
jmp r-xdata
push eax
add ecx 0x10
call sub_4095d4
push edx
push eax
jmp r-xdata
push [ eax + 0x8 ]
add ecx 0x88
jmp r-xdata
sub_40a7da
mov eax r-xdata
call sub_4121e4
sub esp 0x58
push ebx
push esi
push edi
mov [ ebp - 0x10 ] esp
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x8 ]
mov eax [ esi ]
push esi
call [ eax + 0x10 ]
mov [ ebp - 0x4 ] 0x1
push [ ebp + 0x14 ]
lea ecx [ ebp + 0x14 ]
call sub_408726
lea ecx [ ebp - 0x64 ]
call sub_40a3dc
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
lea ecx [ ebp - 0x64 ]
call sub_40b4f6
mov edi eax
lea ecx [ ebp - 0x64 ]
test edi edi
je r-xdata
lea edi [ esi + 0x10 ]
push edi
call sub_40cc88
mov ebx eax
test ebx ebx
je r-xdata
call sub_40a3fa
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
mov ecx edi
call sub_40a116
push [ ebp + 0xc ]
lea ecx [ esi + 0x8 ]
call sub_408761
lea ecx [ ebp - 0x64 ]
call sub_40a3fa
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
lea ecx [ ebp - 0x64 ]
call sub_40a3fa
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
mov eax edi
jmp r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
and [ ebp - 0x4 ] 0x0
xor eax eax
jmp r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
mov eax ebx
jmp r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn 0x10
sub_40a8d7
push esi
mov esi ecx
lea ecx [ esi + 0x1ac ]
call sub_40e988
lea ecx [ esi + 0x198 ]
call sub_40e988
lea ecx [ esi + 0x184 ]
call sub_40e988
lea ecx [ esi + 0x170 ]
call sub_40e988
lea ecx [ esi + 0x158 ]
call sub_40e988
mov ecx esi
pop esi
jmp sub_40a43d
sub_40a919
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ ebp + 0x8 ]
lea eax [ ebp + 0xc ]
push eax
push esi
mov ebx ecx
call sub_403dc9
mov eax [ ebp + 0xc ]
test eax eax
jle r-xdata
push [ ebp + 0xc ]
mov ecx ebx
push [ ebp + 0x8 ]
call sub_40e939
pop esi
pop ebx
leave
retn 0x8
shl esi 0x2
mov [ ebp - 0x4 ] eax
push edi
add esi 0x4
dec [ ebp - 0x4 ]
jne r-xdata
mov ecx edi
call sub_40a357
push edi
call ??3@YAXPAX@Z
pop ecx
mov eax [ ebx + 0xc ]
mov edi [ esi + eax ]
test edi edi
je r-xdata
pop edi
sub_40a970
push esi
push edi
mov esi ecx
call sub_40a542
xor ecx ecx
lea eax [ esi + 0x158 ]
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
push 0x8
pop edi
mov [ eax + 0x10 ] edi
mov edx r--data
mov [ eax ] edx
lea eax [ esi + 0x170 ]
mov [ eax + 0x10 ] edi
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
lea eax [ esi + 0x184 ]
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
push 0x4
pop edi
mov [ eax + 0x10 ] edi
mov edx r--data
mov [ eax ] edx
lea eax [ esi + 0x198 ]
mov [ eax + 0x10 ] edi
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax ] edx
lea eax [ esi + 0x1ac ]
mov [ eax + 0x10 ] edi
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax ] edx
pop edi
mov eax esi
pop esi
retn
sub_40aa1b
push ebp
mov ebp esp
push r--data
push [ ebp + 0xc ]
call sub_401459
test eax eax
pop ecx
pop ecx
je r-xdata
push r--data
push [ ebp + 0xc ]
call sub_401459
test eax eax
pop ecx
pop ecx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
mov ecx [ eax ]
push eax
call [ ecx + 0x4 ]
xor eax eax
jmp r-xdata
mov eax 0x80004002
pop ebp
retn 0xc
sub_40aa79
push esi
mov esi [ esp + 0x8 ]
dec [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
jne r-xdata
pop esi
retn 0x4
mov ecx esi
call sub_40aa5f
push esi
call ??3@YAXPAX@Z
pop ecx
xor eax eax
sub_40aa9a
push ebp
mov ebp esp
push ecx
push edi
xor eax eax
lea edi [ ebp - 0x1 ]
stosb [ edi ]
mov al [ ebp - 0x1 ]
mov [ ebp - 0x1 ] al
push r--data
lea eax [ ebp - 0x1 ]
push eax
call _CxxThrowException
sub_40aad1
mov eax [ ecx + 0x4 ]
sub eax [ ecx + 0x8 ]
cmp [ esp + 0x8 ] eax
jbe r-xdata
xor eax eax
cmp [ esp + 0x8 ] eax
jbe r-xdata
call sub_40aa9a
retn 0x8
push esi
mov esi [ ecx + 0x8 ]
mov edx [ ecx ]
mov dl [ edx + esi ]
mov esi [ esp + 0x8 ]
mov [ eax + esi ] dl
inc [ ecx + 0x8 ]
inc eax
cmp eax [ esp + 0xc ]
jb r-xdata
pop esi
sub_40ab08
mov edx [ ecx + 0x8 ]
mov eax [ ecx + 0x4 ]
push esi
push edi
mov edi [ esp + 0x10 ]
xor esi esi
sub eax edx
cmp edi esi
mov esi [ esp + 0xc ]
jb r-xdata
add edx esi
pop edi
mov [ ecx + 0x8 ] edx
pop esi
retn 0x8
ja r-xdata
call sub_40aa9a
cmp esi eax
jbe r-xdata
sub_40ab35
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
push edi
mov edi ecx
mov esi [ edi + 0x8 ]
cmp esi [ edi + 0x4 ]
jb r-xdata
mov ebx [ edi ]
mov cl [ ebx + esi ]
inc esi
xor eax eax
mov [ ebp - 0x2 ] cl
mov [ edi + 0x8 ] esi
mov [ ebp - 0x1 ] 0x80
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] eax
jmp r-xdata
jmp sub_40aa9a
test [ ebp - 0x1 ] cl
je r-xdata
movzx eax [ ebp - 0x1 ]
movzx ecx cl
dec eax
and eax ecx
mov ecx [ ebp - 0xc ]
cdq
shl ecx 0x3
call sub_412320
add eax [ ebp - 0x14 ]
adc edx [ ebp - 0x10 ]
jmp r-xdata
cmp esi [ edi + 0x4 ]
jae r-xdata
pop edi
pop esi
pop ebx
leave
retn
movzx eax [ esi + ebx ]
mov ecx [ ebp - 0x8 ]
cdq
call sub_412320
or [ ebp - 0x14 ] eax
or [ ebp - 0x10 ] edx
shr [ ebp - 0x1 ] 0x1
add [ ebp - 0x8 ] 0x8
inc esi
inc [ ebp - 0xc ]
cmp [ ebp - 0x8 ] 0x40
mov [ edi + 0x8 ] esi
jl r-xdata
mov cl [ ebp - 0x2 ]
mov eax [ ebp - 0x14 ]
mov edx [ ebp - 0x10 ]
sub_40abfb
push esi
mov esi [ ecx + 0x8 ]
push edi
lea edi [ esi + 0x8 ]
cmp edi [ ecx + 0x4 ]
jbe r-xdata
mov edx [ ecx ]
mov eax [ esi + edx ]
mov edx [ esi + edx + 0x4 ]
mov [ ecx + 0x8 ] edi
pop edi
pop esi
retn
jmp sub_40aa9a
sub_40ac1c
push esi
mov ecx edi
xor esi esi
sub ecx rw-data
xor al al
pop esi
retn
inc esi
cmp esi 0x6
jl r-xdata
lea eax [ esi + rw-data ]
mov dl [ ecx + eax ]
cmp dl [ eax ]
jne r-xdata
push 0x14
lea ecx [ edi + 0xc ]
pop edx
call sub_408648
sub eax [ edi + 0x8 ]
pop esi
neg eax
sbb eax eax
inc eax
retn
sub_40ac53
push ecx
push ecx
push ebx
push ebp
push esi
mov esi ecx
lea ebx [ esi + 0x170 ]
push edi
mov ecx ebx
call sub_40e909
push [ esi + 0x8 ]
mov ecx ebx
call sub_40e840
xor ebp ebp
xor edi edi
cmp [ esi + 0x8 ] ebp
mov [ esp + 0x14 ] ebp
jle r-xdata
pop edi
pop esi
pop ebp
pop ebx
pop ecx
pop ecx
retn
push [ esp + 0x14 ]
mov ecx ebx
push ebp
call sub_40aca8
mov eax [ esi + 0xc ]
mov ecx [ eax + edi * 8 ]
mov eax [ eax + edi * 8 + 0x4 ]
add ebp ecx
adc [ esp + 0x14 ] eax
inc edi
cmp edi [ esi + 0x8 ]
jl r-xdata
sub_40aca8
push esi
mov esi ecx
call sub_40e911
mov ecx [ esi + 0x8 ]
mov eax [ esi + 0xc ]
mov edx [ esp + 0x8 ]
mov [ eax + ecx * 8 ] edx
mov edx [ esp + 0xc ]
mov [ eax + ecx * 8 + 0x4 ] edx
mov eax [ esi + 0x8 ]
lea ecx [ eax + 0x1 ]
mov [ esi + 0x8 ] ecx
pop esi
retn 0x8
sub_40ace8
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push edi
lea eax [ ebp + 0xc ]
push eax
push ebx
mov edi ecx
call sub_403dc9
mov eax [ ebp + 0xc ]
test eax eax
jle r-xdata
push [ ebp + 0xc ]
mov ecx edi
push ebx
call sub_40e939
pop edi
pop ebx
pop ebp
retn 0x8
push esi
mov esi ebx
shl esi 0x2
mov [ ebp + 0x8 ] eax
add esi 0x4
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ ecx ]
push 0x1
call [ eax ]
mov eax [ edi + 0xc ]
mov ecx [ esi + eax ]
test ecx ecx
je r-xdata
pop esi
sub_40ad84
mov ecx [ esp + 0x4 ]
push esi
mov esi eax
call sub_40e909
mov ecx [ esp + 0x8 ]
push esi
call sub_40e840
test esi esi
jle r-xdata
pop esi
retn
mov ecx [ esp + 0x8 ]
push 0x0
call sub_4093eb
dec esi
jne r-xdata
sub_40add4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov ecx [ edi + 0x8 ]
mov eax [ edi + 0x4 ]
mov esi [ edi ]
sub eax ecx
add esi ecx
push 0x0
shr eax 0x1
add eax eax
pop ecx
mov [ ebp - 0x4 ] ecx
je r-xdata
cmp ecx eax
jne r-xdata
cmp [ ecx + esi ] 0x0
jne r-xdata
mov ebx ecx
shr ebx 0x1
js r-xdata
call sub_40aa9a
inc ecx
inc ecx
cmp ecx eax
mov [ ebp - 0x4 ] ecx
jb r-xdata
cmp [ ecx + esi + 0x1 ] 0x0
je r-xdata
lea eax [ ebx + ebx ]
cmp eax ecx
jne r-xdata
mov ecx [ ebp + 0x8 ]
push ebx
call sub_40220b
xor ecx ecx
test ebx ebx
jle r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
and [ ecx + ebx * 2 ] 0x0
mov [ eax + 0x4 ] ebx
mov eax [ ebp - 0x4 ]
add eax 0x2
add [ edi + 0x8 ] eax
pop edi
pop esi
pop ebx
leave
retn 0x4
mov dx [ esi ]
mov [ eax + ecx * 2 ] dx
inc ecx
inc esi
inc esi
cmp ecx ebx
jl r-xdata
sub_40ae60
push esi
mov esi ecx
jmp r-xdata
mov ecx [ esi + 0x18 ]
call sub_40ab35
cmp eax [ esp + 0x8 ]
jne r-xdata
or eax edx
je r-xdata
cmp edx [ esp + 0xc ]
jne r-xdata
call sub_40aa9a
mov ecx [ esi + 0x18 ]
call sub_40adc1
pop esi
retn 0x8
sub_40ae8f
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov ecx [ ebp + 0xc ]
push edi
call sub_40e909
mov edi [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
push edi
call sub_40e840
xor bl bl
test edi edi
mov [ ebp + 0xb ] 0x0
jle r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
test bl bl
jne r-xdata
mov al [ ebp + 0xb ]
mov ecx [ ebp + 0xc ]
test al bl
setne al
push eax
call sub_4093eb
shr bl 0x1
dec edi
jne r-xdata
mov ecx [ esi + 0x18 ]
call sub_40aaba
mov [ ebp + 0xb ] al
mov bl 0x80
sub_40aee3
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ esi + 0x18 ]
call sub_40aaba
test al al
jne r-xdata
mov ecx [ ebp + 0xc ]
call sub_40e909
mov esi [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
push esi
call sub_40e840
test esi esi
jle r-xdata
push [ ebp + 0xc ]
mov ecx esi
push [ ebp + 0x8 ]
call sub_40ae8f
jmp r-xdata
pop esi
pop ebp
retn 0x8
mov ecx [ ebp + 0xc ]
push 0x1
call sub_4093eb
dec esi
jne r-xdata
sub_40af2e
push ebx
push 0xc
mov ebx ecx
call ??2@YAPAXI@Z
test eax eax
pop ecx
je r-xdata
xor eax eax
push esi
mov esi [ esp + 0xc ]
push edi
mov edi eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
jmp r-xdata
push eax
mov ecx ebx
call sub_40873f
pop ebx
retn 0x4
sub_40af5a
push ebx
push ebp
push esi
mov esi ecx
lea ebp [ esi + 0x184 ]
push edi
mov ecx ebp
call sub_40e909
push [ esi + 0x44 ]
mov ecx ebp
call sub_40e840
xor ebx ebx
xor edi edi
cmp [ esi + 0x44 ] ebx
jle r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn
push edi
mov ecx ebp
call sub_40873f
mov eax [ esi + 0x48 ]
mov eax [ eax + ebx * 4 ]
add edi [ eax + 0x30 ]
inc ebx
cmp ebx [ esi + 0x44 ]
jl r-xdata
sub_40af9c
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
mov esi ecx
lea ebx [ esi + 0x198 ]
push edi
mov ecx ebx
call sub_40e909
push [ esi + 0x44 ]
mov ecx ebx
call sub_40e840
lea edi [ esi + 0x1ac ]
mov ecx edi
call sub_40e909
push [ esi + 0x6c ]
mov ecx edi
call sub_40e840
xor eax eax
xor edi edi
cmp [ esi + 0x6c ] eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] eax
jg r-xdata
mov ecx [ esi + 0x70 ]
mov edx [ ebp - 0xc ]
mov ecx [ ecx + edx * 4 ]
cmp [ ecx + 0x1c ] 0x0
sete [ ebp - 0x1 ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebp - 0x8 ] eax
jne r-xdata
cmp [ ebp - 0x8 ] eax
jne r-xdata
push edi
lea ecx [ esi + 0x1ac ]
call sub_40873f
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
cmp edi [ esi + 0x44 ]
jge r-xdata
push 0xffffffff
lea ecx [ esi + 0x1ac ]
call sub_40873f
jmp r-xdata
inc [ ebp - 0xc ]
mov eax [ ebp - 0xc ]
cmp eax [ esi + 0x6c ]
jl r-xdata
inc [ ebp - 0x8 ]
mov eax [ esi + 0x5c ]
mov ecx [ ebp - 0x8 ]
cmp ecx [ eax + edi * 4 ]
jb r-xdata
jmp sub_40aa9a
push [ ebp - 0xc ]
mov ecx ebx
call sub_40873f
mov eax [ esi + 0x5c ]
cmp [ eax + edi * 4 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
inc edi
and [ ebp - 0x8 ] 0x0
inc edi
jmp r-xdata
sub_40b070
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
cmp edi [ esi + 0x4 ]
je r-xdata
pop edi
pop esi
retn 0x4
test edi edi
push ebx
jbe r-xdata
xor ebx ebx
push edi
call ??2@YAPAXI@Z
mov ebx eax
mov eax [ esi + 0x4 ]
test eax eax
pop ecx
jbe r-xdata
push [ esi + 0x8 ]
call ??3@YAXPAX@Z
pop ecx
mov [ esi + 0x8 ] ebx
mov [ esi + 0x4 ] edi
pop ebx
cmp eax edi
jb r-xdata
push eax
push [ esi + 0x8 ]
push ebx
call [ memmove@IAT ]
add esp 0xc
jmp r-xdata
mov eax edi
sub_40b0bf
push esi
push edi
mov edi ecx
call sub_40ad6e
mov esi [ esp + 0xc ]
mov eax [ esi + 0x4 ]
test eax eax
jbe r-xdata
mov eax edi
pop edi
pop esi
retn 0x4
push eax
mov ecx edi
call sub_40b070
push [ esi + 0x4 ]
push [ esi + 0x8 ]
push [ edi + 0x8 ]
call [ memmove@IAT ]
add esp 0xc
sub_40b0f4
push ebp
lea ebp [ esp - 0x78 ]
sub esp 0xac
push ebx
push esi
mov esi ecx
cmp [ esi + 0x8 ] 0x20
jg r-xdata
xor al al
mov ecx [ esi + 0x1c ]
cmp ecx 0x20
jg r-xdata
mov eax [ esi + 0x30 ]
add eax ecx
xor ebx ebx
lea ecx [ ebp + 0x60 ]
push ecx
mov [ ebp + 0x64 ] ebx
mov [ ebp + 0x68 ] ebx
mov [ ebp + 0x6c ] ebx
mov [ ebp + 0x70 ] 0x1
mov [ ebp + 0x60 ] r--data
call sub_40ad84
xor edx edx
cmp [ esi + 0x1c ] ebx
pop ecx
jle r-xdata
xor edx edx
cmp [ esi + 0x30 ] ebx
jle r-xdata
mov eax [ esi + 0x20 ]
lea eax [ eax + edx * 8 ]
mov eax [ eax ]
lea ecx [ ebp + 0x60 ]
call sub_40adae
test al al
jne r-xdata
lea eax [ ebp + 0x60 ]
push eax
mov eax [ esi + 0x44 ]
call sub_40ad84
xor edx edx
cmp [ esi + 0x1c ] ebx
pop ecx
jle r-xdata
mov eax [ esi + 0x34 ]
lea eax [ eax + edx * 4 ]
mov eax [ eax ]
lea ecx [ ebp + 0x60 ]
call sub_40adae
test al al
jne r-xdata
lea ecx [ ebp + 0x60 ]
call sub_40e988
inc edx
cmp edx [ esi + 0x1c ]
jl r-xdata
push edi
lea ecx [ ebp + 0x60 ]
call sub_40e988
push 0x20
pop ecx
xor eax eax
cmp [ esi + 0x8 ] ebx
lea edi [ ebp - 0x34 ]
[ edi ]
push 0x4
pop edi
mov eax r--data
mov [ ebp + 0x50 ] ebx
mov [ ebp + 0x54 ] ebx
mov [ ebp + 0x58 ] ebx
mov [ ebp + 0x5c ] edi
mov [ ebp + 0x4c ] eax
mov [ ebp + 0x64 ] ebx
mov [ ebp + 0x68 ] ebx
mov [ ebp + 0x6c ] ebx
mov [ ebp + 0x70 ] edi
mov [ ebp + 0x60 ] eax
jle r-xdata
mov eax [ esi + 0x20 ]
lea eax [ eax + edx * 8 ]
mov eax [ eax + 0x4 ]
lea ecx [ ebp + 0x60 ]
call sub_40adae
test al al
jne r-xdata
inc edx
cmp edx [ esi + 0x30 ]
jl r-xdata
mov eax [ esi + 0x1c ]
test eax eax
jle r-xdata
mov eax [ esi + 0xc ]
mov edi [ eax + ebx * 4 ]
and [ ebp + 0x74 ] 0x0
cmp [ edi + 0x14 ] 0x0
jbe r-xdata
inc edx
cmp edx [ esi + 0x1c ]
jl r-xdata
lea ecx [ ebp + 0x60 ]
call sub_40e988
lea ecx [ ebp + 0x4c ]
call sub_40e988
lea eax [ ebp - 0x34 ]
mov [ ebp + 0x74 ] 0x20
mov esi [ esi + 0x20 ]
mov [ ebp + 0x74 ] eax
and [ ebp + 0x74 ] 0x0
cmp [ edi + 0x18 ] 0x0
jbe r-xdata
push ebx
lea ecx [ ebp + 0x4c ]
call sub_40873f
inc [ ebp + 0x74 ]
mov eax [ ebp + 0x74 ]
cmp eax [ edi + 0x14 ]
jb r-xdata
inc ecx
cmp ecx 0x20
jl r-xdata
mov esi [ ebp + ecx * 4 - 0x34 ]
or esi edx
mov [ eax ] esi
mov eax [ esi ]
mov ecx [ ebp + 0x58 ]
mov eax [ ecx + eax * 4 ]
mov ecx [ esi + 0x4 ]
mov ebx [ ebp + 0x6c ]
mov ecx [ ebx + ecx * 4 ]
xor edx edx
inc edx
shl edx cl
lea eax [ ebp + eax * 4 - 0x34 ]
add esi 0x8
or [ eax ] edx
dec [ ebp + 0x74 ]
jne r-xdata
inc ebx
cmp ebx [ esi + 0x8 ]
jl r-xdata
push ebx
lea ecx [ ebp + 0x60 ]
call sub_40873f
inc [ ebp + 0x74 ]
mov eax [ ebp + 0x74 ]
cmp eax [ edi + 0x18 ]
jb r-xdata
mov edx [ eax ]
xor esi esi
inc esi
shl esi cl
test edx esi
je r-xdata
add eax edi
dec [ ebp + 0x74 ]
jne r-xdata
push 0x4
pop edi
xor ecx ecx
xor ecx ecx
pop edi
inc ecx
cmp ecx 0x20
jl r-xdata
xor eax eax
inc eax
shl eax cl
test [ ebp + ecx * 4 - 0x34 ] eax
jne r-xdata
mov al 0x1
jmp r-xdata
pop esi
pop ebx
add ebp 0x78
leave
retn
sub_40b2dd
mov eax ecx
xor ecx ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax ] r--data
push esi
push 0x4
pop esi
mov [ eax + 0x10 ] esi
mov [ eax + 0x18 ] ecx
mov [ eax + 0x1c ] ecx
mov [ eax + 0x20 ] ecx
mov [ eax + 0x14 ] r--data
push 0x8
pop edx
mov [ eax + 0x24 ] edx
mov [ eax + 0x38 ] esi
mov [ eax + 0x2c ] ecx
mov [ eax + 0x30 ] ecx
mov [ eax + 0x34 ] ecx
mov [ eax + 0x28 ] r--data
mov [ eax + 0x40 ] ecx
mov [ eax + 0x44 ] ecx
mov [ eax + 0x48 ] ecx
mov [ eax + 0x4c ] edx
mov [ eax + 0x3c ] r--data
mov [ eax + 0x54 ] cl
pop esi
retn
sub_40b338
mov edx [ ecx + 0x8 ]
xor eax eax
test edx edx
jle r-xdata
retn
mov ecx [ ecx + 0xc ]
push esi
mov esi [ ecx ]
add eax [ esi + 0x18 ]
add ecx 0x4
dec edx
jne r-xdata
pop esi
sub_40b370
push ebp
mov ebp esp
sub esp 0x24
push ebx
push esi
push edi
push 0x20
pop ebx
mov esi ecx
push ebx
lea edi [ esi + 0x28 ]
push edi
push [ ebp + 0x8 ]
call sub_40f11a
add esp 0xc
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x8
call sub_40ac1c
test al al
je r-xdata
and [ ebp - 0x20 ] 0x0
and [ ebp - 0x1c ] 0x0
push 0x10000
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0x24 ] r--data
call sub_40b070
push ebx
push edi
mov edi [ ebp - 0x1c ]
push edi
mov [ ebp - 0x4 ] ebx
call memcpy
mov eax [ esi + 0x24 ]
mov ebx [ esi + 0x20 ]
mov [ ebp - 0x14 ] eax
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x4 ]
mov edx 0x10000
sub edx eax
push edx
add eax edi
push eax
push [ ebp + 0x8 ]
call [ ecx + 0xc ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x14 ]
mov ecx ebx
sub ecx [ esi + 0x20 ]
sbb eax [ esi + 0x24 ]
cmp eax [ edx + 0x4 ]
ja r-xdata
mov esi eax
mov eax [ ebp - 0x10 ]
add [ ebp - 0x4 ] eax
test eax eax
je r-xdata
push edi
call ??3@YAXPAX@Z
xor eax eax
inc eax
jmp r-xdata
jb r-xdata
call ??3@YAXPAX@Z
mov eax esi
xor esi esi
inc esi
jmp r-xdata
cmp [ ebp - 0x4 ] 0x20
jbe r-xdata
pop ecx
cmp ecx [ edx ]
ja r-xdata
push edi
jmp r-xdata
mov eax [ ebp - 0x4 ]
add eax 0xffffffe0
xor ecx ecx
test eax eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] ecx
jbe r-xdata
add ebx eax
adc [ ebp - 0x14 ] 0x0
sub [ ebp - 0x4 ] eax
push [ ebp - 0x4 ]
add eax edi
push eax
push edi
call [ memmove@IAT ]
jmp r-xdata
jmp r-xdata
mov edx [ ebp + 0xc ]
add esp 0xc
test edx edx
je r-xdata
cmp [ edi + ecx ] 0x37
jne r-xdata
cmp ecx eax
jae r-xdata
cmp ecx eax
je r-xdata
inc ecx
mov [ ebp - 0x8 ] ecx
add edi ecx
call sub_40ac1c
test al al
jne r-xdata
mov edi [ ebp - 0x8 ]
mov eax [ ebp - 0x1c ]
add eax edi
push 0x20
push eax
lea eax [ esi + 0x28 ]
push eax
call memcpy
mov eax [ ebp - 0x14 ]
mov ecx [ ebp + 0x8 ]
add esp 0xc
push 0x0
pop edx
add ebx edi
adc eax edx
push edx
mov [ esi + 0x20 ] ebx
add ebx 0x20
mov [ esi + 0x24 ] eax
mov esi [ ecx ]
push edx
adc eax edx
push eax
push ebx
push ecx
call [ esi + 0x10 ]
push [ ebp - 0x1c ]
mov esi eax
inc [ ebp - 0x8 ]
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0xc ]
mov edi [ ebp - 0x1c ]
mov eax [ ebp - 0xc ]
jb r-xdata
mov ecx [ ebp - 0x8 ]
jmp r-xdata
sub_40b4f6
push esi
mov esi ecx
and [ esi + 0x48 ] 0x0
and [ esi + 0x4c ] 0x0
push edi
call j_sub_40a018
mov edi [ esp + 0xc ]
mov eax [ edi ]
lea ecx [ esi + 0x20 ]
push ecx
push 0x1
push 0x0
push 0x0
push edi
call [ eax + 0x10 ]
test eax eax
jne r-xdata
pop edi
pop esi
retn 0x8
push [ esp + 0x10 ]
mov ecx esi
push edi
call sub_40b370
test eax eax
jne r-xdata
push edi
mov ecx esi
call sub_408761
xor eax eax
sub_40b55b
push ebp
mov ebp esp
push ecx
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
mov edi [ ebp + 0x8 ]
push ebx
push edi
mov [ ebp - 0x4 ] ecx
call sub_40aee3
mov ecx [ ebp + 0x10 ]
call sub_40e909
mov ecx [ ebp + 0x10 ]
push edi
call sub_40e840
xor esi esi
test edi edi
jle r-xdata
pop edi
pop esi
pop ebx
leave
retn 0xc
mov ecx [ ebx + 0xc ]
xor eax eax
cmp [ esi + ecx ] al
je r-xdata
mov ecx [ ebp + 0x10 ]
push eax
call sub_40873f
inc esi
cmp esi edi
jl r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x18 ]
call sub_40abe0
sub_40b5b3
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov ecx [ esi + 0x18 ]
push edi
call sub_40ab35
mov ecx [ ebp + 0x8 ]
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
mov ecx [ esi + 0x18 ]
call sub_40abca
push 0x0
push 0x9
mov ecx esi
mov edi eax
call sub_40ae60
mov ecx [ ebp + 0xc ]
call sub_40e909
mov ecx [ ebp + 0xc ]
push edi
call sub_40e840
test edi edi
jbe r-xdata
mov ecx [ esi + 0x18 ]
call sub_40ab35
mov ebx [ ebp + 0x10 ]
jmp r-xdata
mov ebx edi
mov ecx eax
or ecx edx
jne r-xdata
mov ecx [ esi + 0x18 ]
call sub_40ab35
mov ecx [ ebp + 0xc ]
push edx
push eax
call sub_40aca8
dec ebx
jne r-xdata
cmp eax 0xa
jne r-xdata
cmp [ ebx + 0x8 ] ecx
jne r-xdata
mov ecx [ esi + 0x18 ]
call sub_40adc1
test edx edx
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
push ebx
mov eax edi
call sub_40ad84
pop ecx
mov ecx [ ebp + 0x14 ]
push edi
call sub_40e840
mov ecx [ ebp + 0x14 ]
call sub_40e909
test edi edi
jbe r-xdata
push [ ebp + 0x14 ]
mov ecx esi
push ebx
push edi
call sub_40b55b
jmp r-xdata
mov ecx [ ebp + 0x14 ]
push 0x0
call sub_40873f
dec edi
jne r-xdata
mov ecx [ esi + 0x18 ]
call sub_40ab35
sub_40b67d
push ebp
mov ebp esp
sub esp 0x40
push esi
push edi
mov edi ecx
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x8 ] edi
call sub_40e909
mov esi [ ebp + 0x8 ]
push [ esi + 0x8 ]
mov ecx [ ebp + 0xc ]
call sub_40e840
push ebx
cmp eax 0xa
jne r-xdata
cmp edx ecx
jne r-xdata
cmp eax 0x9
jne r-xdata
cmp edx ecx
je r-xdata
xor ebx ebx
cmp [ esi + 0x8 ] ecx
jle r-xdata
or eax edx
je r-xdata
cmp edx ecx
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x8 ] ecx
jne r-xdata
mov ecx [ edi + 0x18 ]
call sub_40ab35
xor ecx ecx
cmp eax 0xd
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jne r-xdata
mov ecx [ edi + 0x18 ]
call sub_40abca
mov ecx [ ebp + 0xc ]
push eax
call sub_40873f
inc ebx
cmp ebx [ esi + 0x8 ]
jl r-xdata
mov ecx [ edi + 0x18 ]
call sub_40adc1
jmp r-xdata
mov edx [ ebp + 0xc ]
xor ebx ebx
cmp [ edx + 0x8 ] ecx
mov [ ebp - 0x4 ] ebx
jle r-xdata
xor ebx ebx
cmp [ esi + 0x8 ] ecx
jle r-xdata
jmp r-xdata
cmp [ ebp - 0x10 ] 0x9
jne r-xdata
mov eax [ edx + 0xc ]
mov eax [ eax + ebx * 4 ]
test eax eax
je r-xdata
mov ecx [ ebp + 0xc ]
push 0x1
call sub_40873f
inc ebx
cmp ebx [ esi + 0x8 ]
jl r-xdata
mov ebx [ esi + 0x8 ]
cmp ebx ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp + 0x8 ] ecx
jle r-xdata
cmp [ ebp - 0xc ] ecx
jne r-xdata
inc ebx
cmp ebx [ edx + 0x8 ]
mov [ ebp - 0x4 ] ebx
jl r-xdata
and [ ebp - 0x18 ] 0x0
and [ ebp - 0x14 ] 0x0
cmp eax 0x1
jbe r-xdata
xor ecx ecx
mov eax [ ebp - 0x10 ]
cmp eax 0xa
jne r-xdata
mov eax [ edx + 0xc ]
mov [ ebp + 0x10 ] eax
mov ecx [ edi + 0x18 ]
call sub_40ab35
mov [ ebp - 0xc ] edx
mov edx [ ebp + 0xc ]
mov [ ebp - 0x10 ] eax
xor ecx ecx
xor ecx ecx
mov eax [ esi + 0xc ]
mov ecx [ eax + ebx * 4 ]
call sub_409539
sub eax [ ebp - 0x18 ]
mov ecx [ ebp + 0x10 ]
sbb edx [ ebp - 0x14 ]
push edx
push eax
call sub_40aca8
mov edx [ ebp + 0xc ]
dec eax
mov [ ebp + 0x8 ] eax
or eax [ ebp - 0xc ]
je r-xdata
cmp [ ebp - 0xc ] ecx
jne r-xdata
add [ ebp - 0x4 ] eax
mov edx [ esi + 0xc ]
mov edx [ edx + ecx * 4 ]
cmp [ edx + 0x54 ] 0x0
jne r-xdata
dec [ ebp + 0x8 ]
jne r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov eax [ ebp + 0x14 ]
cmp [ eax + 0x8 ] ecx
pop ebx
jne r-xdata
mov ecx [ edi + 0x18 ]
call sub_40adc1
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x40 ]
push eax
push [ ebp - 0x4 ]
mov [ ebp - 0x3c ] ecx
mov [ ebp - 0x38 ] ecx
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x28 ] ecx
mov [ ebp - 0x24 ] ecx
mov [ ebp - 0x20 ] ecx
mov ecx edi
mov [ ebp - 0x30 ] 0x1
mov [ ebp - 0x40 ] r--data
mov [ ebp - 0x1c ] 0x4
mov [ ebp - 0x2c ] r--data
call sub_40b55b
xor ebx ebx
cmp [ esi + 0x8 ] ebx
mov [ ebp + 0x10 ] ebx
jle r-xdata
mov eax [ ebp + 0x10 ]
mov eax [ eax + ecx * 4 ]
cmp eax 0x1
jne r-xdata
xor ecx ecx
add [ ebp + 0x8 ] eax
inc ecx
cmp ecx ebx
jl r-xdata
cmp [ ebp - 0x10 ] 0x9
jne r-xdata
mov ecx [ edi + 0x18 ]
call sub_40ab35
mov ecx [ ebp + 0x10 ]
mov edi edx
mov ebx eax
push edi
push ebx
call sub_40aca8
add [ ebp - 0x18 ] ebx
mov ebx [ ebp - 0x4 ]
adc [ ebp - 0x14 ] edi
mov edi [ ebp - 0x8 ]
pop edi
pop esi
leave
retn 0x14
push eax
mov eax [ ebp + 0x8 ]
call sub_40ad84
pop ecx
mov ecx [ ebp + 0x18 ]
call sub_40e909
mov esi [ ebp + 0x8 ]
test esi esi
jle r-xdata
lea ecx [ ebp - 0x2c ]
call sub_40e988
lea ecx [ ebp - 0x40 ]
call sub_40e988
jmp r-xdata
mov eax [ ebp + 0xc ]
mov eax [ eax + 0xc ]
mov eax [ eax + ebx * 4 ]
cmp eax 0x1
mov ecx [ esi + 0xc ]
mov edi [ ecx + ebx * 4 ]
jne r-xdata
mov ecx [ ebp + 0x18 ]
push 0x0
call sub_40873f
dec esi
jne r-xdata
mov ecx [ edi + 0x18 ]
call sub_40ab35
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
test eax eax
jbe r-xdata
cmp [ edi + 0x54 ] 0x0
je r-xdata
inc ebx
cmp ebx [ esi + 0x8 ]
jl r-xdata
mov edi eax
mov ecx [ ebp + 0x14 ]
push eax
call sub_4093eb
push [ edi + 0x50 ]
mov ecx [ ebp + 0x18 ]
call sub_40873f
jmp r-xdata
mov edi [ ebp - 0x8 ]
mov eax [ ebp - 0x34 ]
mov ecx [ ebp + 0x10 ]
movzx eax [ eax + ecx ]
mov ecx [ ebp + 0x14 ]
push eax
call sub_4093eb
mov eax [ ebp - 0x20 ]
mov ecx [ ebp + 0x10 ]
push [ eax + ecx * 4 ]
mov ecx [ ebp + 0x18 ]
call sub_40873f
inc [ ebp + 0x10 ]
dec edi
jne r-xdata
sub_40b923
push esi
push edi
mov edi [ esp + 0xc ]
mov eax [ edi ]
mov esi ecx
mov [ esi ] eax
mov eax [ edi + 0x4 ]
mov [ esi + 0x4 ] eax
mov eax [ edi + 0x8 ]
mov [ esi + 0x8 ] eax
mov eax [ edi + 0xc ]
mov [ esi + 0xc ] eax
lea eax [ edi + 0x10 ]
push eax
lea ecx [ esi + 0x10 ]
call sub_4012de
mov al [ edi + 0x1c ]
mov [ esi + 0x1c ] al
mov al [ edi + 0x1d ]
mov [ esi + 0x1d ] al
mov al [ edi + 0x1e ]
mov [ esi + 0x1e ] al
mov al [ edi + 0x1f ]
mov [ esi + 0x1f ] al
pop edi
mov eax esi
pop esi
retn 0x4
sub_40b98c
push esi
push [ esp + 0x8 ]
mov esi ecx
xor eax eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] eax
mov [ esi + 0x10 ] 0x4
mov [ esi ] r--data
call sub_40d3f7
mov eax esi
pop esi
retn 0x4
sub_40b9b6
push esi
push [ esp + 0x8 ]
mov esi ecx
xor eax eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] eax
mov [ esi + 0x10 ] 0x8
mov [ esi ] r--data
call sub_408b5e
mov eax esi
pop esi
retn 0x4
sub_40b9e0
push ebp
mov ebp esp
sub esp 0xc
push esi
push edi
mov edi ecx
lea eax [ ebp - 0xc ]
lea esi [ edi + 0x4 ]
push eax
mov ecx esi
call sub_40af2e
mov ecx [ esi + 0xc ]
mov eax [ esi + 0x8 ]
mov eax [ ecx + eax * 4 - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ edi + 0x18 ] eax
and [ eax + 0x8 ] 0x0
mov [ eax ] ecx
mov ecx [ ebp + 0xc ]
pop edi
mov [ eax + 0x4 ] ecx
pop esi
leave
retn 0x8
sub_40ba1a
push esi
mov esi ecx
push edi
lea edi [ esi + 0x4 ]
mov ecx edi
call sub_40e81f
cmp [ esi + 0xc ] 0x0
je r-xdata
pop edi
pop esi
retn
mov eax [ edi + 0x8 ]
mov ecx [ edi + 0xc ]
mov eax [ ecx + eax * 4 - 0x4 ]
mov [ esi + 0x18 ] eax
sub_40ba3e
push esi
push 0x20
mov esi ecx
call ??2@YAPAXI@Z
test eax eax
pop ecx
je r-xdata
xor eax eax
push [ esp + 0x8 ]
mov ecx eax
call sub_40b923
jmp r-xdata
push eax
mov ecx esi
call sub_40873f
pop esi
retn 0x4
sub_40ba68
push esi
push 0xc
mov esi ecx
call ??2@YAPAXI@Z
test eax eax
pop ecx
je r-xdata
xor eax eax
push [ esp + 0x8 ]
mov ecx eax
call sub_40b96c
jmp r-xdata
push eax
mov ecx esi
call sub_40873f
pop esi
retn 0x4
sub_40ba92
push esi
push edi
mov edi [ esp + 0xc ]
mov eax [ edi ]
mov esi ecx
mov [ esi ] eax
mov eax [ edi + 0x4 ]
mov [ esi + 0x4 ] eax
lea eax [ edi + 0x8 ]
push eax
lea ecx [ esi + 0x8 ]
call sub_40b96c
mov eax [ edi + 0x14 ]
mov [ esi + 0x14 ] eax
mov eax [ edi + 0x18 ]
mov [ esi + 0x18 ] eax
pop edi
mov eax esi
pop esi
retn 0x4
sub_40bb12
push esi
push edi
mov edi ecx
call sub_40bac3
mov esi [ esp + 0xc ]
mov ecx [ esi + 0x18 ]
call sub_40aaba
test al al
je r-xdata
pop edi
pop esi
retn 0x8
mov ecx [ esi + 0x18 ]
call sub_40abca
test eax eax
jl r-xdata
call sub_40aa9a
mov ecx [ esp + 0x10 ]
cmp eax [ ecx + 0x8 ]
jge r-xdata
mov ecx [ ecx + 0xc ]
push [ ecx + eax * 4 ]
mov ecx edi
push esi
call sub_40bafc
sub_40bb59
push esi
push 0x20
mov esi ecx
call ??2@YAPAXI@Z
test eax eax
pop ecx
je r-xdata
xor eax eax
push [ esp + 0x8 ]
mov ecx eax
call sub_40ba92
jmp r-xdata
push eax
mov ecx esi
call sub_40873f
pop esi
retn 0x4
sub_40bb83
push ebx
push ebp
mov ebp [ esp + 0xc ]
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
mov eax [ esi + 0x8 ]
add eax edi
push eax
call sub_40e840
xor ebx ebx
test edi edi
jle r-xdata
pop edi
mov eax esi
pop esi
pop ebp
pop ebx
retn 0x4
mov eax [ ebp + 0xc ]
push [ eax + ebx * 4 ]
mov ecx esi
call sub_40bb59
inc ebx
cmp ebx edi
jl r-xdata
sub_40bbbc
push ebp
mov ebp esp
sub esp 0x54
push ebx
push esi
push edi
mov edi ecx
mov ecx [ edi + 0x18 ]
call sub_40abca
mov ebx [ ebp + 0x8 ]
mov ecx ebx
mov [ ebp - 0x14 ] eax
call sub_40e909
push [ ebp - 0x14 ]
mov ecx ebx
call sub_40e840
xor esi esi
cmp [ ebp - 0x14 ] esi
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x10 ] esi
ja r-xdata
lea eax [ ebp - 0x54 ]
push eax
mov ecx ebx
mov [ ebp - 0x4c ] r--data
mov [ ebp - 0x48 ] esi
mov [ ebp - 0x44 ] esi
call sub_40bb59
push esi
call ??3@YAXPAX@Z
mov eax [ ebx + 0x8 ]
pop ecx
mov ecx [ ebx + 0xc ]
mov esi [ ecx + eax * 4 - 0x4 ]
mov ecx [ edi + 0x18 ]
call sub_40aaba
mov ecx [ edi + 0x18 ]
mov [ ebp + 0xb ] al
and eax 0xf
push eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x34 ]
push eax
call sub_40aad1
mov eax [ ebp - 0xc ]
cmp eax 0x8
jg r-xdata
mov eax [ ebp - 0x18 ]
dec eax
lea esi [ ebx + 0x14 ]
mov ecx esi
mov [ ebp + 0x8 ] eax
call sub_40e909
push [ ebp + 0x8 ]
mov ecx esi
call sub_40e840
mov eax [ ebp + 0x8 ]
test eax eax
jbe r-xdata
call sub_40aa9a
xor ecx ecx
cmp eax ecx
mov [ ebp - 0x24 ] ecx
mov [ ebp - 0x20 ] ecx
jle r-xdata
mov esi [ ebp - 0x4 ]
cmp esi [ ebp + 0x8 ]
jb r-xdata
mov [ ebp - 0x1c ] eax
test [ ebp + 0xb ] 0x10
mov eax [ ebp - 0x24 ]
mov [ esi ] eax
mov eax [ ebp - 0x20 ]
mov [ esi + 0x4 ] eax
je r-xdata
mov [ ebp - 0xc ] ecx
lea ecx [ ebp + eax - 0x35 ]
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x1c ] eax
sub esi [ ebp + 0x8 ]
lea ecx [ ebx + 0x28 ]
push esi
mov [ ebp + 0x8 ] ecx
call sub_40e840
cmp esi 0x1
jne r-xdata
mov ecx [ edi + 0x18 ]
call sub_40abca
mov ecx [ edi + 0x18 ]
mov [ ebp - 0x24 ] eax
call sub_40abca
push eax
push [ ebp - 0x24 ]
mov ecx esi
call sub_40aca8
dec [ ebp - 0x1c ]
jne r-xdata
xor eax eax
inc eax
mov [ esi + 0x14 ] eax
mov ecx [ edi + 0x18 ]
call sub_40abca
mov [ esi + 0x14 ] eax
mov ecx [ edi + 0x18 ]
call sub_40abca
jmp r-xdata
mov eax [ ebp - 0x8 ]
movzx eax [ eax ]
mov ecx [ ebp - 0xc ]
cdq
call sub_412320
or [ ebp - 0x24 ] eax
or [ ebp - 0x20 ] edx
dec [ ebp - 0x8 ]
add [ ebp - 0xc ] 0x8
dec [ ebp - 0x1c ]
jne r-xdata
test esi esi
jbe r-xdata
xor esi esi
cmp [ ebp - 0x4 ] esi
jbe r-xdata
test [ ebp + 0xb ] 0x80
jne r-xdata
mov ecx [ edi + 0x18 ]
call sub_40abca
push eax
lea ecx [ esi + 0x8 ]
mov [ ebp - 0x1c ] eax
call sub_40b070
push [ ebp - 0x1c ]
mov ecx [ edi + 0x18 ]
push [ esi + 0x10 ]
call sub_40aad1
test [ ebp + 0xb ] 0x20
mov [ esi + 0x18 ] eax
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x4
mov ecx [ edi + 0x18 ]
call sub_40abca
mov ecx [ ebp + 0x8 ]
push eax
call sub_40873f
dec esi
jne r-xdata
cmp [ ebx + 0x30 ] 0x1
je r-xdata
push esi
mov ecx ebx
call sub_4088bc
test eax eax
jl r-xdata
mov eax [ esi + 0x14 ]
add [ ebp - 0x4 ] eax
mov eax [ esi + 0x18 ]
add [ ebp - 0x18 ] eax
inc [ ebp - 0x10 ]
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x14 ]
jb r-xdata
jmp r-xdata
mov ecx [ ebp + 0x8 ]
push esi
call sub_40873f
inc esi
cmp esi [ ebp - 0x4 ]
jb r-xdata
xor esi esi
jmp r-xdata
jmp r-xdata
sub_40bdcd
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
lea eax [ esi + 0x14 ]
push eax
push [ ebp + 0x10 ]
mov ebx ecx
call sub_40aee3
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x8 ]
push ebx
mov [ ebp - 0x4 ] 0x0
call sub_40bb12
push [ ebp + 0x10 ]
mov ecx esi
call sub_40e840
xor edi edi
cmp [ ebp + 0x10 ] edi
jle r-xdata
lea ecx [ ebp - 0x8 ]
call sub_40bac3
pop edi
pop esi
pop ebx
leave
retn 0xc
mov ecx [ esi + 0x20 ]
xor edx edx
xor eax eax
cmp [ edi + ecx ] dl
je r-xdata
push edx
push eax
mov ecx esi
call sub_40aca8
inc edi
cmp edi [ ebp + 0x10 ]
jl r-xdata
mov ecx [ ebx + 0x18 ]
call sub_40abfb
sub_40be50
push esi
push [ esp + 0x8 ]
mov esi ecx
xor eax eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] eax
mov [ esi + 0x10 ] 0x4
mov [ esi ] r--data
call sub_40be39
mov eax esi
pop esi
retn 0x4
sub_40be7a
push esi
push edi
mov edi [ esp + 0xc ]
push edi
mov esi ecx
call sub_40be50
lea eax [ edi + 0x14 ]
push eax
lea ecx [ esi + 0x14 ]
call sub_40b9b6
lea eax [ edi + 0x28 ]
push eax
lea ecx [ esi + 0x28 ]
call sub_40b98c
lea eax [ edi + 0x3c ]
push eax
lea ecx [ esi + 0x3c ]
call sub_40b9b6
mov eax [ edi + 0x50 ]
mov [ esi + 0x50 ] eax
mov al [ edi + 0x54 ]
mov [ esi + 0x54 ] al
pop edi
mov eax esi
pop esi
retn 0x4
sub_40bebf
push esi
push 0x58
mov esi ecx
call ??2@YAPAXI@Z
test eax eax
pop ecx
je r-xdata
xor eax eax
push [ esp + 0x8 ]
mov ecx eax
call sub_40be7a
jmp r-xdata
push eax
mov ecx esi
call sub_40873f
pop esi
retn 0x4
sub_40bee9
push ebp
mov ebp esp
sub esp 0x8c
push ebx
push esi
push edi
xor edi edi
push edi
push 0xb
mov esi ecx
call sub_40ae60
mov ecx [ esi + 0x18 ]
call sub_40abca
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x34 ]
push esi
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x30 ] 0x0
call sub_40bb12
mov ebx [ ebp + 0xc ]
mov ecx ebx
call sub_40e909
push [ ebp - 0x4 ]
mov ecx ebx
call sub_40e840
mov eax [ ebp - 0x4 ]
cmp eax edi
jbe r-xdata
lea ecx [ ebp - 0x34 ]
call sub_40bac3
push edi
push 0xc
mov ecx esi
call sub_40ae60
cmp [ ebp - 0x4 ] edi
mov [ ebp + 0x8 ] edi
jbe r-xdata
mov [ ebp + 0x8 ] eax
mov ecx [ esi + 0x18 ]
call sub_40ab35
mov ecx eax
or ecx edx
jne r-xdata
mov eax [ ebx + 0xc ]
mov ecx [ ebp + 0x8 ]
mov edi [ eax + ecx * 4 ]
mov ecx edi
call sub_40b338
add edi 0x3c
push eax
mov ecx edi
mov [ ebp + 0xc ] eax
call sub_40e840
mov eax [ ebp + 0xc ]
test eax eax
jbe r-xdata
lea ecx [ ebp - 0x8c ]
call sub_40b2dd
push eax
mov ecx ebx
call sub_40bebf
lea ecx [ ebp - 0x8c ]
call sub_40a357
mov ecx [ ebx + 0xc ]
mov eax [ ebx + 0x8 ]
push [ ecx + eax * 4 - 0x4 ]
mov ecx esi
call sub_40bbbc
dec [ ebp + 0x8 ]
jne r-xdata
cmp eax 0xa
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x8
inc [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
cmp eax [ ebp - 0x4 ]
jb r-xdata
mov [ ebp + 0xc ] eax
mov ecx [ esi + 0x18 ]
call sub_40adc1
cmp edx edi
jne r-xdata
xor edi edi
jmp r-xdata
mov ecx [ esi + 0x18 ]
call sub_40ab35
push edx
push eax
mov ecx edi
call sub_40aca8
dec [ ebp + 0xc ]
jne r-xdata
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x2c ]
push eax
push [ ebp - 0x4 ]
mov ecx esi
mov [ ebp - 0x28 ] edi
mov [ ebp - 0x24 ] edi
mov [ ebp - 0x20 ] edi
mov [ ebp - 0x1c ] 0x1
mov [ ebp - 0x2c ] r--data
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x10 ] edi
mov [ ebp - 0xc ] edi
mov [ ebp - 0x8 ] 0x4
mov [ ebp - 0x18 ] r--data
call sub_40b55b
xor ecx ecx
cmp [ ebp - 0x4 ] edi
jbe r-xdata
lea ecx [ ebp - 0x18 ]
call sub_40e988
lea ecx [ ebp - 0x2c ]
call sub_40e988
jmp r-xdata
mov edx [ ebp - 0x20 ]
mov eax [ ebx + 0xc ]
mov dl [ edx + ecx ]
mov eax [ eax + ecx * 4 ]
mov [ eax + 0x54 ] dl
mov edx [ ebp - 0xc ]
mov edx [ edx + ecx * 4 ]
inc ecx
cmp ecx [ ebp - 0x4 ]
mov [ eax + 0x50 ] edx
jb r-xdata
xor edi edi
sub_40c07f
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ esi + 0x18 ]
push edi
call sub_40ab35
test edx edx
ja r-xdata
call sub_40aa9a
mov edi 0x40000000
jae r-xdata
cmp eax edi
jbe r-xdata
sub eax 0x0
je r-xdata
pop edi
pop esi
pop ebp
retn 0x28
sub eax 0x6
je r-xdata
push [ ebp + 0x18 ]
mov ecx esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_40b5b3
dec eax
je r-xdata
push [ ebp + 0x1c ]
mov ecx esi
push [ ebp + 0x8 ]
call sub_40bee9
jmp r-xdata
dec eax
jne r-xdata
mov ecx [ esi + 0x18 ]
call sub_40ab35
test edx edx
ja r-xdata
push [ ebp + 0x2c ]
mov ecx esi
push [ ebp + 0x28 ]
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
call sub_40b67d
jmp r-xdata
sub_40c0fe
push ebp
lea ebp [ esp - 0x68 ]
sub esp 0x160
push ebx
push esi
push edi
push 0x4
mov eax r--data
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x28 ] eax
mov [ ebp + 0x14 ] eax
mov edi ecx
pop ecx
lea eax [ ebp + 0x14 ]
push eax
xor ebx ebx
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp ]
push eax
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp + 0x40 ]
push eax
lea eax [ ebp - 0x50 ]
push eax
lea eax [ ebp - 0x3c ]
push eax
mov esi r--data
lea eax [ ebp + 0x2c ]
mov [ ebp + 0x2c ] esi
mov [ ebp ] esi
mov esi [ ebp + 0x78 ]
push eax
mov edx r--data
push esi
mov [ ebp - 0x40 ] ecx
mov [ ebp + 0x50 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp + 0x24 ] ecx
push ebx
mov ecx edi
mov [ ebp + 0x30 ] ebx
mov [ ebp + 0x34 ] ebx
mov [ ebp + 0x38 ] ebx
mov [ ebp + 0x3c ] 0x8
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x34 ] ebx
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x2c ] 0x1
mov [ ebp - 0x3c ] edx
mov [ ebp - 0x4c ] ebx
mov [ ebp - 0x48 ] ebx
mov [ ebp - 0x44 ] ebx
mov [ ebp + 0x44 ] ebx
mov [ ebp + 0x48 ] ebx
mov [ ebp + 0x4c ] ebx
mov [ ebp + 0x40 ] r--data
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp + 0x4 ] ebx
mov [ ebp + 0x8 ] ebx
mov [ ebp + 0xc ] ebx
mov [ ebp + 0x10 ] 0x8
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x14 ] edx
mov [ ebp + 0x18 ] ebx
mov [ ebp + 0x1c ] ebx
mov [ ebp + 0x20 ] ebx
call sub_40c07f
push 0x1
lea ecx [ ebp - 0xf8 ]
mov [ ebp + 0x54 ] ebx
call sub_408d67
mov eax [ esi ]
add eax [ ebp + 0x70 ]
mov [ ebp + 0x58 ] eax
mov eax [ esi + 0x4 ]
adc eax [ ebp + 0x74 ]
mov [ ebp + 0x5c ] eax
cmp [ ebp + 0x48 ] ebx
mov [ ebp + 0x74 ] ebx
jle r-xdata
lea ecx [ ebp - 0xf8 ]
call sub_409518
lea ecx [ ebp + 0x14 ]
call sub_40e988
lea ecx [ ebp - 0x14 ]
call sub_40e988
lea ecx [ ebp ]
call sub_40e988
lea ecx [ ebp - 0x28 ]
call sub_40e988
lea ecx [ ebp + 0x40 ]
call sub_40a25e
lea ecx [ ebp - 0x50 ]
call sub_40e988
lea ecx [ ebp - 0x3c ]
call sub_40e988
lea ecx [ ebp + 0x2c ]
call sub_40e988
xor eax eax
mov [ ebp - 0x68 ] ebx
mov [ ebp - 0x64 ] ebx
mov [ ebp - 0x6c ] r--data
call sub_40aa9a
cmp ebx edx
jne r-xdata
push eax
mov ecx esi
call sub_40b070
push 0x14
call ??2@YAPAXI@Z
cmp eax ebx
pop ecx
je r-xdata
xor esi esi
mov [ eax + 0x4 ] ebx
mov [ eax ] r--data
mov esi eax
jmp r-xdata
mov eax [ ebp + 0x60 ]
cmp eax ebx
je r-xdata
mov eax [ ebp + 0x78 ]
cmp [ eax + 0x54 ] bl
je r-xdata
push esi
lea ecx [ ebp + 0x60 ]
call sub_408726
mov eax [ ebp + 0x64 ]
mov eax [ eax + 0x8 ]
push ebx
push [ ebp + 0x60 ]
mov [ esi + 0x8 ] eax
mov eax [ ebp - 0x60 ]
push [ ebp + 0x78 ]
mov [ esi + 0xc ] eax
mov [ esi + 0x10 ] ebx
mov eax [ ebp + 0x38 ]
mov esi [ ebp + 0x54 ]
mov ecx [ edi ]
lea eax [ eax + esi * 8 ]
push eax
push [ ebp + 0x5c ]
push [ ebp + 0x58 ]
push ecx
lea ecx [ ebp - 0xf8 ]
call sub_408e8c
cmp eax ebx
mov [ ebp + 0x28 ] eax
jne r-xdata
lea ecx [ ebp - 0xf8 ]
call sub_409518
lea ecx [ ebp + 0x14 ]
call sub_40e988
lea ecx [ ebp - 0x14 ]
call sub_40e988
lea ecx [ ebp ]
call sub_40e988
lea ecx [ ebp - 0x28 ]
call sub_40e988
lea ecx [ ebp + 0x40 ]
call sub_40a25e
lea ecx [ ebp - 0x50 ]
call sub_40e988
lea ecx [ ebp - 0x3c ]
call sub_40e988
lea ecx [ ebp + 0x2c ]
call sub_40e988
mov eax [ ebp + 0x28 ]
jmp r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
mov eax [ ebp + 0x78 ]
cmp [ eax + 0x30 ] ebx
mov [ ebp + 0x64 ] ebx
jle r-xdata
mov eax [ ebp + 0x64 ]
mov ecx [ eax + 0x8 ]
mov edx [ ebp - 0x60 ]
call sub_408648
mov ecx [ ebp + 0x78 ]
cmp eax [ ecx + 0x50 ]
jne r-xdata
pop edi
pop esi
pop ebx
add ebp 0x68
leave
retn 0x10
mov eax [ ebp + 0x60 ]
cmp eax ebx
je r-xdata
mov ecx [ ebp + 0x38 ]
inc [ ebp + 0x74 ]
mov eax [ ebp + 0x74 ]
cmp eax [ ebp + 0x48 ]
jl r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
mov edx [ ecx + esi * 8 + 0x4 ]
mov eax [ ecx + esi * 8 ]
inc esi
add [ ebp + 0x58 ] eax
mov [ ebp - 0x54 ] edx
adc [ ebp + 0x5c ] edx
add [ edi + 0x48 ] eax
mov eax edx
adc [ edi + 0x4c ] eax
inc [ ebp + 0x64 ]
mov eax [ ebp + 0x78 ]
mov edx [ ebp + 0x64 ]
cmp edx [ eax + 0x30 ]
jl r-xdata
mov [ ebp + 0x54 ] esi
mov eax [ ebp + 0x4c ]
mov ecx [ ebp + 0x74 ]
mov eax [ eax + ecx * 4 ]
mov esi [ ebp + 0x7c ]
mov [ ebp + 0x78 ] eax
lea eax [ ebp - 0x6c ]
push eax
mov ecx esi
call sub_40ba68
push ebx
call ??3@YAXPAX@Z
mov eax [ esi + 0x8 ]
pop ecx
mov ecx [ esi + 0xc ]
mov esi [ ecx + eax * 4 - 0x4 ]
mov ecx [ ebp + 0x78 ]
mov [ ebp + 0x64 ] esi
call sub_409539
cmp eax eax
mov [ ebp - 0x60 ] eax
jne r-xdata
sub_40c3fa
push ebp
lea ebp [ esp - 0x74 ]
sub esp 0xe8
push ebx
push esi
push edi
mov edi ecx
mov ecx [ edi + 0x18 ]
call sub_40ab35
mov esi [ ebp + 0x7c ]
xor ebx ebx
cmp eax 0x2
mov [ ebp + 0x60 ] eax
mov [ ebp + 0x64 ] edx
jne r-xdata
cmp [ ebp + 0x60 ] 0x3
push 0x4
pop eax
mov [ ebp + 0x38 ] ebx
mov [ ebp + 0x3c ] ebx
mov [ ebp + 0x40 ] ebx
mov [ ebp + 0x44 ] eax
mov [ ebp + 0x34 ] r--data
jne r-xdata
cmp edx ebx
jne r-xdata
cmp [ ebp + 0x60 ] eax
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x20 ] 0x8
mov [ ebp - 0x30 ] r--data
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] 0x1
mov [ ebp - 0x1c ] r--data
mov [ ebp + 0x10 ] ebx
mov [ ebp + 0x14 ] ebx
mov [ ebp + 0x18 ] ebx
mov [ ebp + 0x1c ] eax
mov [ ebp + 0xc ] r--data
jne r-xdata
cmp [ ebp + 0x64 ] ebx
jne r-xdata
lea eax [ esi + 0x130 ]
push eax
mov ecx edi
call sub_40b53e
mov ecx [ edi + 0x18 ]
call sub_40ab35
mov [ ebp + 0x60 ] eax
mov [ ebp + 0x64 ] edx
cmp [ esi + 0x44 ] ebx
mov [ ebp + 0x7c ] ebx
jle r-xdata
cmp [ ebp + 0x64 ] ebx
jne r-xdata
lea ecx [ ebp + 0x34 ]
push ecx
lea eax [ esi + 0x150 ]
push eax
push [ esi + 0x144 ]
mov ecx edi
push [ esi + 0x140 ]
call sub_40c0fe
cmp eax ebx
je r-xdata
lea ecx [ esi + 0x64 ]
call sub_40e909
mov eax [ ebp + 0x60 ]
or eax [ ebp + 0x64 ]
jne r-xdata
push 0x1
lea ecx [ esi + 0x50 ]
call sub_40873f
mov eax [ esi + 0x48 ]
mov ecx [ ebp + 0x7c ]
mov ecx [ eax + ecx * 4 ]
mov [ ebp + 0x70 ] ecx
call sub_409539
push edx
push eax
lea ecx [ ebp - 0x30 ]
call sub_40aca8
mov eax [ ebp + 0x70 ]
movzx eax [ eax + 0x54 ]
push eax
lea ecx [ ebp - 0x1c ]
call sub_4093eb
mov eax [ ebp + 0x70 ]
push [ eax + 0x50 ]
lea ecx [ ebp + 0xc ]
call sub_40873f
inc [ ebp + 0x7c ]
mov eax [ ebp + 0x7c ]
cmp eax [ esi + 0x44 ]
jl r-xdata
lea ecx [ ebp + 0xc ]
push ecx
lea ecx [ ebp - 0x1c ]
push ecx
lea ecx [ ebp - 0x30 ]
push ecx
lea ecx [ esi + 0x50 ]
push ecx
lea ecx [ esi + 0x3c ]
push ecx
lea ecx [ esi + 0x28 ]
push ecx
lea ecx [ esi + 0x14 ]
push ecx
push esi
lea eax [ esi + 0x148 ]
push eax
lea eax [ ebp + 0x34 ]
push eax
mov ecx edi
call sub_40c07f
mov ecx [ esi + 0x140 ]
lea eax [ esi + 0x148 ]
add [ eax ] ecx
mov ecx [ esi + 0x144 ]
adc [ eax + 0x4 ] ecx
mov ecx [ edi + 0x18 ]
call sub_40ab35
mov [ ebp + 0x60 ] eax
mov [ ebp + 0x64 ] edx
jmp r-xdata
mov ecx [ esi + 0x140 ]
lea eax [ esi + 0x150 ]
add [ eax ] ecx
mov ecx [ esi + 0x144 ]
adc [ eax + 0x4 ] ecx
mov ecx [ edi + 0x18 ]
call sub_40ab35
push 0x4
mov [ ebp + 0x60 ] eax
mov [ ebp + 0x64 ] edx
pop eax
mov ebx eax
cmp [ ebp + 0x60 ] 0x5
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_40e988
lea ecx [ ebp - 0x1c ]
call sub_40e988
lea ecx [ ebp - 0x30 ]
call sub_40e988
jmp r-xdata
pop edi
pop esi
pop ebx
add ebp 0x74
leave
retn 0x4
call sub_40aa9a
cmp [ ebp + 0x64 ] ebx
je r-xdata
lea ecx [ ebp + 0x34 ]
call sub_40acd2
mov eax ebx
jmp r-xdata
mov ecx [ edi + 0x18 ]
call sub_40abca
push eax
lea ecx [ esi + 0x64 ]
mov [ ebp + 0x7c ] eax
call sub_40e840
cmp [ ebp + 0x7c ] ebx
jbe r-xdata
push ebx
lea ecx [ esi + 0x158 ]
push 0x9
call sub_40aca8
cmp [ esi + 0x8 ] ebx
je r-xdata
mov eax [ ebp + 0x7c ]
mov [ ebp + 0x70 ] eax
cmp [ ebp + 0x7c ] ebx
jbe r-xdata
push ebx
push 0x6
lea ecx [ esi + 0x158 ]
call sub_40aca8
lea ecx [ ebp - 0x74 ]
call sub_40b352
push eax
lea ecx [ esi + 0x64 ]
call sub_40ba3e
push [ ebp - 0x64 ]
call ??3@YAXPAX@Z
dec [ ebp + 0x70 ]
pop ecx
jne r-xdata
lea eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x7c ]
mov [ ebp + 0x24 ] ebx
mov [ ebp + 0x28 ] ebx
mov [ ebp + 0x2c ] ebx
mov [ ebp + 0x30 ] 0x1
mov [ ebp + 0x20 ] r--data
call sub_40ad84
pop ecx
xor ecx ecx
inc ecx
mov eax r--data
mov [ ebp - 0x40 ] ebx
mov [ ebp - 0x3c ] ebx
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x44 ] eax
mov [ ebp - 0x4 ] ebx
mov [ ebp ] ebx
mov [ ebp + 0x4 ] ebx
mov [ ebp + 0x8 ] ecx
mov [ ebp - 0x8 ] eax
mov [ ebp + 0x68 ] ebx
jmp r-xdata
cmp [ ebp + 0x14 ] ebx
je r-xdata
mov ecx [ edi + 0x18 ]
call sub_40ab35
mov [ ebp + 0x50 ] eax
or eax edx
mov [ ebp + 0x54 ] edx
jne r-xdata
push ebx
push 0xa
lea ecx [ esi + 0x158 ]
call sub_40aca8
mov ecx [ edi + 0x18 ]
call sub_40ab35
cmp [ ebp + 0x54 ] ebx
mov ecx [ edi + 0x18 ]
mov [ ebp + 0x58 ] eax
mov eax [ ecx + 0x8 ]
mov [ ebp + 0x5c ] edx
mov [ ebp + 0x70 ] eax
ja r-xdata
xor edi edi
xor eax eax
cmp [ ebp + 0x68 ] ebx
mov [ ebp + 0x64 ] ebx
mov [ ebp + 0x70 ] ebx
jbe r-xdata
push [ ebp + 0x5c ]
push [ ebp + 0x58 ]
call sub_40ab08
jb r-xdata
xor ecx ecx
cmp [ ebp + 0x7c ] ebx
mov [ ebp + 0x6c ] ecx
jbe r-xdata
mov ecx [ ebp + 0x4 ]
cmp [ ecx + eax ] bl
je r-xdata
mov eax [ edi + 0x18 ]
mov eax [ eax + 0x8 ]
sub eax [ ebp + 0x70 ]
xor ecx ecx
cmp eax [ ebp + 0x58 ]
jne r-xdata
cmp [ esi + 0x131 ] 0x2
jbe r-xdata
mov eax [ ebp + 0x50 ]
add eax 0xfffffff2
cmp eax 0xb
ja r-xdata
cmp [ ebp + 0x50 ] 0x40000000
ja r-xdata
lea ecx [ ebp - 0x8 ]
call sub_40e988
lea ecx [ ebp - 0x44 ]
call sub_40e988
lea ecx [ ebp + 0x20 ]
call sub_40e988
lea ecx [ ebp + 0xc ]
call sub_40e988
lea ecx [ ebp - 0x1c ]
call sub_40e988
lea ecx [ ebp - 0x30 ]
call sub_40e988
lea ecx [ ebp + 0x34 ]
call sub_40acd2
xor eax eax
mov edx [ ebp + 0x2c ]
cmp [ edx + ecx ] bl
mov eax [ esi + 0x70 ]
mov eax [ eax + ecx * 4 ]
sete cl
cmp cl bl
mov [ eax + 0x1c ] cl
je r-xdata
inc eax
cmp eax [ ebp + 0x68 ]
jb r-xdata
inc [ ebp + 0x70 ]
cmp ecx [ ebp + 0x5c ]
jne r-xdata
jmp [ eax * 4 + jump_table_40c9ee ]
mov edx [ ebp - 0x38 ]
mov ecx [ ebp + 0x64 ]
cmp [ edx + ecx ] bl
sete dl
mov [ eax + 0x1d ] dl
mov edx [ ebp + 0x4 ]
mov dl [ edx + ecx ]
inc ecx
mov [ ebp + 0x68 ] dl
mov [ ebp + 0x64 ] ecx
mov [ eax ] ebx
mov [ eax + 0x4 ] ebx
mov [ eax + 0x1e ] bl
mov [ eax + 0x1d ] bl
mov ecx [ ebp - 0x24 ]
mov edx [ ecx + edi * 8 ]
mov [ eax ] edx
mov ecx [ ecx + edi * 8 + 0x4 ]
mov [ eax + 0x4 ] ecx
mov ecx [ ebp + 0x18 ]
mov ecx [ ecx + edi * 4 ]
mov [ eax + 0xc ] ecx
mov ecx [ ebp - 0x10 ]
mov cl [ ecx + edi ]
mov [ ebp + 0x68 ] bl
mov [ eax + 0x1e ] cl
inc edi
jmp r-xdata
lea eax [ ebp + 0x34 ]
push eax
push edi
lea ecx [ ebp - 0x54 ]
mov [ ebp - 0x50 ] bl
call sub_40bb12
cmp [ esi + 0x6c ] ebx
mov [ ebp + 0x6c ] ebx
jle r-xdata
lea eax [ ebp - 0x68 ]
push eax
push [ esi + 0x6c ]
mov ecx edi
mov [ ebp - 0x64 ] ebx
mov [ ebp - 0x60 ] ebx
mov [ ebp - 0x5c ] ebx
mov [ ebp - 0x58 ] 0x1
mov [ ebp - 0x68 ] r--data
call sub_40aee3
lea eax [ ebp + 0x34 ]
push eax
push edi
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x48 ] bl
call sub_40bb12
cmp [ ebp + 0x7c ] ebx
mov [ ebp + 0x6c ] ebx
jbe r-xdata
lea eax [ ebp + 0x20 ]
push eax
push [ ebp + 0x7c ]
mov ecx edi
call sub_40ae8f
xor eax eax
cmp [ ebp + 0x28 ] ebx
jbe r-xdata
lea eax [ ebp - 0x44 ]
lea eax [ ebp - 0x8 ]
jmp r-xdata
lea eax [ esi + 0xf0 ]
lea eax [ esi + 0x78 ]
jmp r-xdata
lea eax [ esi + 0xa0 ]
jmp r-xdata
lea eax [ esi + 0xc8 ]
jmp r-xdata
cmp [ ebp + 0x5c ] ebx
mov [ ebp + 0x48 ] ebx
mov [ ebp + 0x4c ] ebx
jb r-xdata
mov ecx [ ebp + 0x6c ]
inc ecx
cmp ecx [ ebp + 0x7c ]
mov [ ebp + 0x6c ] ecx
jb r-xdata
push [ ebp + 0x68 ]
lea ecx [ esi + 0x118 ]
call sub_4093eb
cmp [ ebp + 0x70 ] ebx
je r-xdata
lea ecx [ ebp - 0x54 ]
call sub_40bac3
mov eax [ esi + 0x70 ]
mov ecx [ ebp + 0x6c ]
mov eax [ eax + ecx * 4 ]
mov ecx [ edi + 0x18 ]
add eax 0x10
push eax
call sub_40add4
inc [ ebp + 0x6c ]
mov eax [ ebp + 0x6c ]
cmp eax [ esi + 0x6c ]
jl r-xdata
lea ecx [ ebp - 0x4c ]
call sub_40bac3
lea ecx [ ebp - 0x68 ]
call sub_40e988
jmp r-xdata
mov ecx ebx
lea eax [ ebp - 0x44 ]
push eax
mov eax [ ebp + 0x68 ]
call sub_40ad84
lea eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x68 ]
call sub_40ad84
pop ecx
pop ecx
jmp r-xdata
mov ecx [ ebp + 0x2c ]
cmp [ ecx + eax ] bl
je r-xdata
push [ ebp + 0x54 ]
lea ecx [ esi + 0x158 ]
push [ ebp + 0x50 ]
call sub_40aca8
jmp r-xdata
push eax
push [ ebp + 0x68 ]
mov ecx edi
call sub_40ae8f
jmp r-xdata
push [ ebp + 0x7c ]
mov ecx edi
push eax
lea eax [ ebp + 0x34 ]
push eax
call sub_40bdcd
jmp r-xdata
cmp [ esi + 0x130 ] bl
ja r-xdata
ja r-xdata
inc ecx
cmp ecx [ ebp + 0x7c ]
mov [ ebp + 0x6c ] ecx
jb r-xdata
mov ecx [ edi + 0x18 ]
call sub_40abe0
mov ecx [ ebp + 0x64 ]
mov [ ecx + 0x8 ] eax
mov ecx [ ebp + 0x6c ]
inc eax
cmp eax [ ebp + 0x28 ]
jb r-xdata
inc [ ebp + 0x68 ]
mov ecx [ edi + 0x18 ]
call sub_40aaba
test al al
jne r-xdata
cmp [ ebp + 0x58 ] ebx
jbe r-xdata
mov eax [ esi + 0x70 ]
mov edx [ eax + ecx * 4 ]
mov eax [ ebp - 0x5c ]
mov al [ eax + ecx ]
cmp al bl
mov [ ebp + 0x64 ] edx
mov [ edx + 0x1f ] al
je r-xdata
add [ ebp + 0x48 ] 0x1
adc [ ebp + 0x4c ] ebx
mov eax [ ebp + 0x4c ]
cmp eax [ ebp + 0x5c ]
jb r-xdata
ja r-xdata
mov eax [ ebp + 0x48 ]
cmp eax [ ebp + 0x58 ]
jb r-xdata
jmp r-xdata
sub_40ca1e
push ebp
mov ebp esp
sub esp 0x34
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
mov ecx edi
call sub_40a0bb
mov eax [ esi + 0x20 ]
mov [ edi + 0x138 ] eax
mov eax [ esi + 0x24 ]
mov [ edi + 0x13c ] eax
mov cl [ esi + 0x2e ]
lea eax [ edi + 0x130 ]
mov [ eax ] cl
cmp [ eax ] 0x0
mov cl [ esi + 0x2f ]
mov [ edi + 0x131 ] cl
je r-xdata
mov eax [ esi + 0x30 ]
mov ebx [ esi + 0x40 ]
mov [ ebp + 0x8 ] eax
lea ecx [ esi + 0x34 ]
mov eax [ ecx ]
mov [ ebp - 0xc ] eax
mov eax [ ecx + 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax [ esi + 0x3c ]
mov [ ebp - 0x14 ] eax
mov eax [ esi + 0x44 ]
push 0x14
pop edx
mov [ ebp - 0x4 ] eax
call sub_408648
cmp eax [ ebp + 0x8 ]
jne r-xdata
call sub_40aa9a
mov eax [ esi + 0x20 ]
mov edx [ esi + 0x24 ]
add eax 0x20
push 0x0
mov [ edi + 0x140 ] eax
mov eax [ ebp - 0x14 ]
pop ecx
adc edx ecx
or eax ebx
mov [ edi + 0x144 ] edx
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x4
cmp ebx ecx
ja r-xdata
xor eax eax
inc eax
jmp r-xdata
cmp [ ebp - 0x14 ] 0xffffffff
jbe r-xdata
cmp [ ebp - 0x8 ] ecx
jg r-xdata
mov eax [ esi ]
mov edx [ eax ]
push ecx
push 0x1
push [ ebp - 0x8 ]
push [ ebp - 0xc ]
push eax
call [ edx + 0x10 ]
test eax eax
jne r-xdata
jl r-xdata
push [ ebp - 0x14 ]
and [ ebp - 0x1c ] eax
and [ ebp - 0x18 ] eax
lea ecx [ ebp - 0x20 ]
mov [ ebp - 0x20 ] r--data
call sub_40b070
push [ ebp - 0x14 ]
mov eax [ esi ]
push [ ebp - 0x18 ]
push eax
call sub_40f11a
add esp 0xc
test eax eax
je r-xdata
cmp [ ebp - 0xc ] ecx
jb r-xdata
mov edx [ ebp - 0x14 ]
mov eax edx
add eax 0x20
mov ecx ebx
adc ecx 0x0
add [ esi + 0x48 ] eax
mov eax edx
adc [ esi + 0x4c ] ecx
add eax [ ebp - 0xc ]
mov ecx [ ebp - 0x18 ]
adc ebx [ ebp - 0x8 ]
add eax 0x20
adc ebx 0x0
mov [ edi + 0x1c8 ] eax
mov [ edi + 0x1cc ] ebx
call sub_408648
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov ebx eax
lea eax [ ebp - 0x20 ]
push eax
push esi
lea ecx [ ebp - 0xc ]
mov [ ebp - 0x8 ] 0x0
call sub_40bafc
mov ecx [ esi + 0x18 ]
xor ebx ebx
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x24 ] 0x4
mov [ ebp - 0x34 ] r--data
call sub_40ab35
cmp eax 0x1
jne r-xdata
pop ecx
cmp eax 0x17
jne r-xdata
cmp edx ebx
je r-xdata
cmp edx ebx
jne r-xdata
mov eax [ esi + 0x48 ]
mov [ edi + 0x1c0 ] eax
mov eax [ esi + 0x4c ]
push edi
mov ecx esi
mov [ edi + 0x1c4 ] eax
call sub_40c3fa
lea ecx [ ebp - 0x34 ]
mov esi eax
call sub_40acd2
lea ecx [ ebp - 0xc ]
call sub_40bac3
push [ ebp - 0x18 ]
call ??3@YAXPAX@Z
mov eax esi
lea eax [ ebp - 0x34 ]
push eax
lea eax [ edi + 0x150 ]
push eax
push [ edi + 0x144 ]
mov ecx esi
push [ edi + 0x140 ]
call sub_40c0fe
mov ebx eax
test ebx ebx
je r-xdata
cmp [ ebp - 0x2c ] 0x0
jne r-xdata
lea ecx [ ebp - 0x34 ]
call sub_40acd2
lea ecx [ ebp - 0xc ]
call sub_40bac3
jmp r-xdata
cmp [ ebp - 0x2c ] 0x1
jg r-xdata
lea ecx [ ebp - 0x34 ]
call sub_40acd2
lea ecx [ ebp - 0xc ]
call sub_40bac3
xor ebx ebx
jmp r-xdata
push [ ebp - 0x18 ]
call ??3@YAXPAX@Z
mov eax ebx
jmp r-xdata
lea ecx [ ebp - 0xc ]
call sub_40bac3
mov eax [ ebp - 0x28 ]
push [ eax ]
lea ecx [ ebp - 0xc ]
push esi
call sub_40bafc
mov ecx [ esi + 0x18 ]
call sub_40ab35
cmp eax 0x1
jne r-xdata
test edx edx
jne r-xdata
sub_40cc88
mov eax r-xdata
call sub_4121e4
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x10 ] esp
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
call sub_40ca1e
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn 0x4
sub_40ccc5
xor eax eax
push ebx
push esi
mov esi ecx
mov ecx [ esp + 0xc ]
mov [ esi ] eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] ecx
mov ecx [ esp + 0x10 ]
mov [ esi + 0xc ] ecx
push edi
lea ecx [ esi + 0x10 ]
mov [ ecx + 0x4 ] eax
mov [ ecx + 0x8 ] eax
mov [ ecx + 0xc ] eax
push 0x8
pop ebx
mov [ ecx + 0x10 ] ebx
lea edi [ esi + 0x24 ]
mov edx r--data
mov [ ecx ] edx
mov [ edi + 0x10 ] ebx
mov [ edi ] edx
mov [ edi + 0x4 ] eax
mov [ edi + 0x8 ] eax
mov [ edi + 0xc ] eax
lea ebx [ esi + 0x38 ]
mov [ ebx + 0x4 ] eax
mov [ ebx + 0x8 ] eax
mov [ ebx + 0xc ] eax
mov [ ebx + 0x10 ] 0x4
mov edx r--data
mov [ ebx ] edx
mov [ esi + 0x50 ] eax
mov [ esi + 0x54 ] eax
mov [ esi + 0x58 ] eax
mov [ esi + 0x5c ] 0x4
mov [ esi + 0x4c ] edx
push [ esi + 0x8 ]
call sub_40e840
push [ esi + 0x8 ]
mov ecx ebx
call sub_40e840
push [ esi + 0xc ]
mov ecx edi
call sub_40e840
push [ esi + 0xc ]
lea ecx [ esi + 0x4c ]
call sub_40e840
pop edi
mov eax esi
pop esi
pop ebx
retn 0x8
sub_40cd65
mov eax [ esp + 0x4 ]
mov eax [ eax ]
test eax eax
push esi
mov esi ecx
mov [ esi ] eax
je r-xdata
mov eax esi
pop esi
retn 0x4
mov ecx [ eax ]
push eax
call [ ecx + 0x4 ]
sub_40cd80
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
and [ eax ] 0x0
cmp [ ecx + 0x8 ] 0x0
push esi
push edi
jbe r-xdata
push r--data
lea eax [ ebp + 0xc ]
push eax
mov [ ebp + 0xc ] 0x1
call _CxxThrowException
mov edi [ ebp + 0x8 ]
mov eax [ ebp + 0x10 ]
mov [ eax ] edi
pop edi
pop esi
pop ebp
retn 0xc
sub edi esi
inc edx
mov [ eax ] edx
cmp edx [ ecx + 0x8 ]
jb r-xdata
mov edx [ eax ]
mov esi [ ecx + 0xc ]
mov esi [ esi + edx * 8 ]
cmp edi esi
jb r-xdata
sub_40cde7
push esi
push 0x4
mov esi ecx
call ??2@YAPAXI@Z
test eax eax
pop ecx
je r-xdata
xor eax eax
push [ esp + 0x8 ]
mov ecx eax
call sub_40cd65
jmp r-xdata
push eax
mov ecx esi
call sub_40873f
pop esi
retn 0x4
sub_40ce11
push ebx
push 0x20
mov ebx ecx
call ??2@YAPAXI@Z
test eax eax
pop ecx
je r-xdata
xor eax eax
push esi
mov esi [ esp + 0xc ]
push edi
push 0x8
pop ecx
mov edi eax
[ edi ] [ esi ]
pop edi
pop esi
jmp r-xdata
push eax
mov ecx ebx
call sub_40873f
pop ebx
retn 0x4
sub_40ce66
push ebx
push ebp
mov ebp [ esp + 0xc ]
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
mov eax [ esi + 0x8 ]
add eax edi
push eax
call sub_40e840
xor ebx ebx
test edi edi
jle r-xdata
pop edi
mov eax esi
pop esi
pop ebp
pop ebx
retn 0x4
mov eax [ ebp + 0xc ]
push [ eax + ebx * 4 ]
mov ecx esi
call sub_40873f
inc ebx
cmp ebx edi
jl r-xdata
sub_40ce9f
push ebx
push esi
mov esi ecx
lea ebx [ esi + 0xa0 ]
push edi
mov ecx ebx
call sub_40e909
lea ecx [ esi + 0xb4 ]
call sub_40e909
xor edi edi
cmp [ esi + 0x1c ] edi
jbe r-xdata
xor edi edi
cmp [ esi + 0x20 ] edi
jbe r-xdata
mov eax [ esi + 0x58 ]
lea eax [ eax + edi * 4 ]
cmp [ eax ] 0x0
je r-xdata
mov ebx [ esi + 0x14 ]
test ebx ebx
mov edx [ esi + 0xc0 ]
push [ esp + 0x10 ]
je r-xdata
mov eax [ esi + 0x6c ]
lea eax [ eax + edi * 4 ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ esi + 0x84 ]
mov eax [ eax + edi * 4 ]
push [ eax ]
mov ecx ebx
call sub_40873f
inc edi
cmp edi [ esi + 0x1c ]
jb r-xdata
mov ecx [ esi + 0x30 ]
lea ecx [ ecx + edi * 8 ]
mov [ eax ] ecx
push [ esi + 0x20 ]
mov ecx [ esi + 0x6c ]
mov edi [ esi + 0x58 ]
mov eax [ esi + 0x18 ]
mov ebx [ eax ]
push ecx
push edx
push [ esi + 0x1c ]
push edi
push [ esi + 0xac ]
push eax
call [ ebx + 0xc ]
mov eax [ esi + 0x6c ]
push [ eax ]
mov ecx [ esi + 0x58 ]
push [ ecx ]
mov edi [ esi + 0xac ]
push [ edx ]
mov ebx [ ebx ]
push [ edi ]
push [ esi + 0x14 ]
call [ ebx + 0xc ]
jmp r-xdata
mov eax [ esi + 0x98 ]
mov eax [ eax + edi * 4 ]
push [ eax ]
lea ecx [ esi + 0xb4 ]
call sub_40873f
inc edi
cmp edi [ esi + 0x20 ]
jb r-xdata
mov ecx [ esi + 0x44 ]
lea ecx [ ecx + edi * 8 ]
mov [ eax ] ecx
xor ebx ebx
lea edi [ esi + 0x94 ]
cmp [ edi ] ebx
jle r-xdata
mov eax [ esi + 0x84 ]
mov ecx [ eax + ebx * 4 ]
call sub_40a018
inc ebx
cmp ebx [ edi ]
jl r-xdata
xor ebx ebx
lea edi [ esi + 0x80 ]
cmp [ edi ] ebx
mov [ esi + 0x74 ] eax
jle r-xdata
pop edi
pop esi
pop ebx
retn 0x4
mov eax [ esi + 0x98 ]
mov ecx [ eax + ebx * 4 ]
call sub_40a018
inc ebx
cmp ebx [ edi ]
jl r-xdata
sub_40cfb8
push ebp
mov ebp esp
push edi
mov ecx esi
call sub_40e909
mov ecx [ ebp + 0x8 ]
call sub_40e909
xor edi edi
cmp [ ebp + 0xc ] edi
jbe r-xdata
pop edi
pop ebp
retn
test ebx ebx
je r-xdata
push 0x0
push 0x0
mov ecx esi
call sub_40aca8
push 0x0
mov eax [ ebx + edi * 4 ]
test eax eax
je r-xdata
push [ eax + 0x4 ]
mov ecx esi
push [ eax ]
call sub_40aca8
mov eax [ esi + 0x8 ]
mov ecx [ esi + 0xc ]
lea eax [ ecx + eax * 8 - 0x8 ]
push eax
jmp r-xdata
mov ecx [ ebp + 0x8 ]
call sub_40873f
inc edi
cmp edi [ ebp + 0xc ]
jb r-xdata
sub_40d014
push ebx
mov ebx [ esp + 0x8 ]
push esi
push edi
mov edi ecx
push [ edi + 0x1c ]
lea eax [ edi + 0x4c ]
push eax
lea esi [ edi + 0x24 ]
call sub_40cfb8
push [ edi + 0x20 ]
mov ebx [ esp + 0x20 ]
lea eax [ edi + 0x60 ]
push eax
lea esi [ edi + 0x38 ]
call sub_40cfb8
add esp 0x10
pop edi
pop esi
pop ebx
retn 0x8
sub_40d048
push esi
push edi
mov esi ecx
xor edi edi
cmp [ esi + 0x60 ] edi
jle r-xdata
pop edi
pop esi
retn
mov eax [ esi + 0x64 ]
mov ecx [ eax + edi * 4 ]
call sub_40ee26
inc edi
cmp edi [ esi + 0x60 ]
jl r-xdata
sub_40d067
push ebp
mov ebp esp
sub esp 0x1c
push ebx
push esi
xor eax eax
mov esi ecx
cmp [ esi + 0x7c ] eax
push edi
mov [ ebp - 0x4 ] eax
jle r-xdata
and [ ebp - 0x4 ] 0x0
cmp [ esi + 0x28 ] 0x0
jle r-xdata
jmp r-xdata
xor edi edi
cmp [ esi + 0x3c ] edi
jle r-xdata
mov eax [ esi + 0x2c ]
mov ecx [ ebp - 0x4 ]
lea edi [ eax + ecx * 8 ]
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
push [ edi ]
lea ebx [ esi + 0xc ]
mov ecx ebx
call sub_40cd80
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
push [ edi + 0x4 ]
mov ecx ebx
call sub_4088e0
mov eax [ esi + 0x80 ]
mov edi [ ebp - 0x18 ]
mov ebx [ ebp - 0x1c ]
mov edx [ ebp - 0x14 ]
shl edi 0x2
mov ecx [ edi + eax ]
mov ecx [ ecx + 0x98 ]
push [ ecx + edx * 4 ]
mov ecx [ ebp - 0x10 ]
shl ebx 0x2
mov eax [ ebx + eax ]
mov eax [ eax + 0x84 ]
push [ eax + ecx * 4 ]
mov eax [ esi + 0x68 ]
mov ecx [ ebp - 0x4 ]
mov ecx [ eax + ecx * 4 ]
call sub_40f004
and [ ebp - 0xc ] 0x0
and [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0xc ]
push eax
mov eax [ esi + 0x80 ]
mov ecx [ ebx + eax ]
push r--data
add ecx 0x14
call sub_40cdca
lea eax [ ebp - 0x8 ]
push eax
mov eax [ esi + 0x80 ]
mov ecx [ edi + eax ]
push r--data
add ecx 0x14
call sub_40cdca
mov eax [ ebp - 0xc ]
test eax eax
je r-xdata
mov ecx [ esi + 0x80 ]
mov ebx [ ecx + eax * 4 ]
mov ecx [ esi + 0x18 ]
lea edi [ ecx + eax * 8 ]
lea ecx [ ebx + 0x78 ]
call sub_40e909
xor eax eax
cmp [ edi ] eax
mov [ ebp - 0x8 ] eax
jbe r-xdata
xor edi edi
cmp [ esi + 0x50 ] edi
jle r-xdata
lea ebx [ esi + 0xc ]
mov ecx [ ebp - 0x8 ]
test ecx ecx
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
add ebx 0x8c
mov ecx ebx
call sub_40e909
xor eax eax
cmp [ edi + 0x4 ] eax
mov [ ebp - 0x8 ] eax
jbe r-xdata
mov [ ebp - 0x14 ] eax
pop edi
pop esi
xor eax eax
pop ebx
leave
retn 0x8
lea ebx [ esi + 0xc ]
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
mov eax [ esi + 0x40 ]
push [ eax + edi * 4 ]
mov ecx ebx
call sub_40cd80
mov eax [ ebp + 0x8 ]
push [ eax + edi * 4 ]
mov eax [ esi + 0x80 ]
mov ecx [ ebp - 0x1c ]
mov eax [ eax + ecx * 4 ]
mov eax [ eax + 0x84 ]
mov ecx [ ebp - 0x18 ]
mov ecx [ eax + ecx * 4 ]
call sub_408761
inc edi
cmp edi [ esi + 0x3c ]
jl r-xdata
test eax eax
je r-xdata
mov eax [ ecx ]
push ecx
call [ eax + 0x8 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
mov edi 0x80000
push edi
push [ ebp - 0x10 ]
push eax
call [ ecx + 0xc ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
push edi
push [ ebp - 0x14 ]
push eax
call [ ecx + 0x10 ]
mov eax [ ebp - 0xc ]
inc [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
cmp eax [ esi + 0x7c ]
jl r-xdata
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x14 ]
push eax
lea ecx [ ebx + 0x78 ]
call sub_40cde7
inc [ ebp - 0x8 ]
mov eax [ ebp - 0x8 ]
cmp eax [ edi ]
jb r-xdata
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp + 0x8 ]
push eax
mov eax [ esi + 0x54 ]
push [ eax + edi * 4 ]
mov ecx ebx
call sub_4088e0
mov eax [ ebp + 0xc ]
push [ eax + edi * 4 ]
mov eax [ esi + 0x80 ]
mov ecx [ ebp + 0x8 ]
mov eax [ eax + ecx * 4 ]
mov eax [ eax + 0x98 ]
mov ecx [ ebp - 0x1c ]
mov ecx [ eax + ecx * 4 ]
call sub_408761
inc edi
cmp edi [ esi + 0x50 ]
jl r-xdata
inc [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
cmp eax [ esi + 0x28 ]
jl r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
mov eax [ ebp - 0x4 ]
lea eax [ ebp - 0x14 ]
push eax
mov ecx ebx
call sub_40cde7
inc [ ebp - 0x8 ]
mov eax [ ebp - 0x8 ]
cmp eax [ edi + 0x4 ]
jb r-xdata
sub_40d29a
mov edx [ ecx + 0x7c ]
push esi
xor esi esi
test edx edx
push edi
jle r-xdata
xor eax eax
mov ecx [ ecx + 0x80 ]
mov eax [ esp + 0xc ]
pop edi
pop esi
retn 0x4
inc esi
add ecx 0x4
cmp esi edx
jl r-xdata
mov edi [ ecx ]
cmp [ edi + 0x74 ] eax
je r-xdata
sub_40d2c5
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
push esi
mov esi [ ebp + 0x8 ]
cmp eax [ esi + 0x3c ]
push edi
jne r-xdata
mov eax 0x80070057
mov eax [ ebp + 0x20 ]
cmp eax [ esi + 0x50 ]
jne r-xdata
push [ ebp + 0x18 ]
mov ecx esi
push [ ebp + 0xc ]
call sub_40d067
xor edi edi
cmp [ esi + 0x7c ] edi
jle r-xdata
xor edi edi
cmp [ esi + 0x7c ] edi
jle r-xdata
cmp edi [ esi + 0x70 ]
je r-xdata
mov eax [ esi + 0x70 ]
mov ecx [ esi + 0x80 ]
push [ ebp + 0x24 ]
mov ecx [ ecx + eax * 4 ]
call sub_40ce9f
xor edi edi
cmp [ esi + 0x7c ] edi
jle r-xdata
cmp edi [ esi + 0x70 ]
je r-xdata
inc edi
cmp edi [ esi + 0x7c ]
jl r-xdata
mov eax [ esi + 0x80 ]
mov ecx [ eax + edi * 4 ]
call sub_40f1c4
test eax eax
jne r-xdata
push 0x80004004
mov ecx esi
call sub_40d29a
test eax eax
jne r-xdata
cmp edi [ esi + 0x70 ]
je r-xdata
inc edi
cmp edi [ esi + 0x7c ]
jl r-xdata
mov eax [ esi + 0x80 ]
mov ecx [ eax + edi * 4 ]
call sub_40f220
pop edi
pop esi
pop ebp
retn 0x20
push 0x8007000e
mov ecx esi
call sub_40d29a
test eax eax
jne r-xdata
inc edi
cmp edi [ esi + 0x7c ]
jl r-xdata
mov eax [ esi + 0x80 ]
mov eax [ eax + edi * 4 ]
push [ eax + 0x8 ]
call sub_4064f1
pop ecx
mov edi [ esi + 0x7c ]
xor edx edx
test edi edi
jle r-xdata
push 0x1
mov ecx esi
call sub_40d29a
test eax eax
jne r-xdata
mov ecx [ esi + 0x80 ]
xor ecx ecx
test edi edi
jle r-xdata
inc edx
add ecx 0x4
cmp edx edi
jl r-xdata
cmp eax 0x80004005
je r-xdata
xor eax eax
jmp r-xdata
mov esi [ esi + 0x80 ]
mov eax [ ecx ]
mov eax [ eax + 0x74 ]
test eax eax
je r-xdata
cmp eax 0x1
jne r-xdata
inc ecx
add esi 0x4
cmp ecx edi
jl r-xdata
mov eax [ esi ]
mov eax [ eax + 0x74 ]
test eax eax
jne r-xdata
sub_40d40e
push ebx
push ebp
mov ebp [ esp + 0xc ]
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
mov eax [ esi + 0x8 ]
add eax edi
push eax
call sub_40e840
xor ebx ebx
test edi edi
jle r-xdata
pop edi
mov eax esi
pop esi
pop ebp
pop ebx
retn 0x4
mov eax [ ebp + 0xc ]
push [ eax + ebx * 4 ]
mov ecx esi
call sub_40cde7
inc ebx
cmp ebx edi
jl r-xdata
sub_40d447
push ebx
push esi
push edi
push [ esp + 0x14 ]
mov esi ecx
push [ esp + 0x14 ]
lea ecx [ esi + 0x14 ]
call sub_40ccc5
xor edx edx
mov [ esi + 0x4 ] edx
mov [ esi + 0x8 ] edx
mov [ esi + 0xc ] edx
mov [ esi ] r--data
lea ecx [ esi + 0x78 ]
mov [ ecx + 0x4 ] edx
mov [ ecx + 0x8 ] edx
mov [ ecx + 0xc ] edx
mov [ ecx ] r--data
push 0x4
pop eax
mov [ ecx + 0x10 ] eax
lea edi [ esi + 0x8c ]
mov [ edi + 0x10 ] eax
mov [ edi + 0x4 ] edx
mov [ edi + 0x8 ] edx
mov [ edi + 0xc ] edx
mov [ edi ] r--data
lea ebx [ esi + 0xa0 ]
mov [ ebx + 0x10 ] eax
mov [ ebx + 0x4 ] edx
mov [ ebx + 0x8 ] edx
mov [ ebx + 0xc ] edx
mov [ ebx ] r--data
lea eax [ esi + 0xb4 ]
mov [ eax + 0x4 ] edx
mov [ eax + 0x8 ] edx
mov [ eax + 0xc ] edx
mov [ eax + 0x10 ] 0x4
mov [ eax ] r--data
push [ esi + 0x1c ]
call sub_40e840
push [ esi + 0x1c ]
mov ecx ebx
call sub_40e840
push [ esi + 0x20 ]
mov ecx edi
call sub_40e840
push [ esi + 0x20 ]
lea ecx [ esi + 0xb4 ]
call sub_40e840
pop edi
mov eax esi
pop esi
pop ebx
retn 0x8
sub_40d522
push ebp
mov ebp esp
sub esp 0x20
push ebx
push esi
push edi
push [ ebp + 0x8 ]
mov esi ecx
lea ecx [ esi + 0x8 ]
call sub_408d2e
lea edi [ esi + 0x58 ]
mov ecx edi
call sub_40e909
xor ebx ebx
cmp [ esi + 0x24 ] ebx
mov [ ebp + 0x8 ] ebx
jle r-xdata
xor eax eax
lea eax [ ebp - 0x20 ]
push eax
mov ecx edi
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x18 ] ebx
call sub_40ce11
lea ecx [ ebp - 0x20 ]
call sub_408bc4
mov eax [ edi + 0x8 ]
mov ecx [ edi + 0xc ]
mov ecx [ ecx + eax * 4 - 0x4 ]
call sub_40edf7
cmp eax ebx
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x4
inc [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
cmp eax [ esi + 0x24 ]
jl r-xdata
sub_40d58f
push esi
push edi
mov edi [ esp + 0xc ]
push edi
mov esi ecx
call sub_40cd65
lea eax [ edi + 0x4 ]
push eax
lea ecx [ esi + 0x4 ]
call sub_40cd65
mov eax [ edi + 0x8 ]
mov [ esi + 0x8 ] eax
mov eax [ edi + 0xc ]
mov [ esi + 0xc ] eax
lea eax [ edi + 0x10 ]
push eax
lea ecx [ esi + 0x10 ]
call sub_40b9b6
lea eax [ edi + 0x24 ]
push eax
lea ecx [ esi + 0x24 ]
call sub_40b9b6
lea eax [ edi + 0x38 ]
push eax
lea ecx [ esi + 0x38 ]
call sub_40b98c
add edi 0x4c
push edi
lea ecx [ esi + 0x4c ]
call sub_40b98c
pop edi
mov eax esi
pop esi
retn 0x4
sub_40d5ec
push esi
push [ esp + 0x8 ]
mov esi ecx
xor eax eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] eax
mov [ esi + 0x10 ] 0x4
mov [ esi ] r--data
call sub_40d50b
mov eax esi
pop esi
retn 0x4
sub_40d616
push esi
push edi
mov edi [ esp + 0xc ]
mov eax edi
neg eax
mov esi ecx
lea ecx [ edi + 0x14 ]
sbb eax eax
and eax ecx
push eax
lea ecx [ esi + 0x14 ]
call sub_40d58f
push edi
mov ecx esi
call sub_40ce3f
mov [ esi ] r--data
mov eax [ edi + 0x74 ]
mov [ esi + 0x74 ] eax
lea eax [ edi + 0x78 ]
push eax
lea ecx [ esi + 0x78 ]
call sub_40d5ec
lea eax [ edi + 0x8c ]
push eax
lea ecx [ esi + 0x8c ]
call sub_40d5ec
lea eax [ edi + 0xa0 ]
push eax
lea ecx [ esi + 0xa0 ]
call sub_40b98c
add edi 0xb4
push edi
lea ecx [ esi + 0xb4 ]
call sub_40b98c
pop edi
mov eax esi
pop esi
retn 0x4
sub_40d68f
push esi
push 0xc8
mov esi ecx
call ??2@YAPAXI@Z
test eax eax
pop ecx
je r-xdata
xor eax eax
push [ esp + 0x8 ]
mov ecx eax
call sub_40d616
jmp r-xdata
push eax
mov ecx esi
call sub_40873f
pop esi
retn 0x4
sub_40d6bc
push ebp
lea ebp [ esp - 0x78 ]
sub esp 0xc8
push esi
mov esi ecx
mov ecx [ esi + 0x18 ]
mov eax [ esi + 0x7c ]
lea eax [ ecx + eax * 8 ]
push [ eax + 0x4 ]
lea ecx [ ebp - 0x50 ]
push [ eax ]
call sub_40d447
lea eax [ ebp - 0x50 ]
push eax
lea ecx [ esi + 0x74 ]
call sub_40d68f
lea ecx [ ebp - 0x50 ]
call sub_408be4
pop esi
add ebp 0x78
leave
retn
sub_40d744
pushfd
pop eax
mov edx eax
xor eax [ esp + 0x4 ]
push eax
popfd
pushfd
pop eax
xor eax edx
push edx
popfd
and [ esp + 0x4 ] eax
mov eax [ esp + 0x4 ]
retn
sub_40d75d
push ebp
mov ebp esp
sub esp 0x10
push ebx
xor ebx ebx
xor ecx ecx
xor edx edx
mov eax [ ebp + 0x8 ]
cpuid
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
mov eax [ ebp - 0xc ]
mov ecx [ ebp + 0x14 ]
mov [ ecx ] eax
mov eax [ ebp - 0x10 ]
mov ecx [ ebp + 0x18 ]
mov [ ecx ] eax
pop ebx
leave
retn
sub_40d79e
push 0x40000
call sub_40d744
add esp 0x4
test eax eax
je r-xdata
xor eax eax
retn
push 0x200000
call sub_40d744
add esp 0x4
test eax eax
je r-xdata
push esi
mov esi [ esp + 0x8 ]
lea eax [ esi + 0x8 ]
push eax
lea eax [ esi + 0xc ]
push eax
lea eax [ esi + 0x4 ]
push eax
push esi
push 0x0
call sub_40d75d
lea eax [ esi + 0x1c ]
push eax
lea eax [ esi + 0x18 ]
push eax
lea eax [ esi + 0x14 ]
push eax
add esi 0x10
push esi
push 0x1
call sub_40d75d
add esp 0x28
xor eax eax
inc eax
pop esi
retn
sub_40d7fb
mov edx [ esp + 0x4 ]
push ebx
push esi
mov esi [ edx + 0x4 ]
push edi
xor eax eax
mov ecx rw-data
xor edi edi
add edi 0xc
inc eax
add ecx 0xc
cmp edi 0x24
jb r-xdata
mov ebx [ ecx - 0x4 ]
cmp ebx [ edx + 0x8 ]
jne r-xdata
cmp [ ecx - 0x8 ] esi
jne r-xdata
or eax 0xffffffff
mov ebx [ ecx ]
cmp ebx [ edx + 0xc ]
je r-xdata
pop edi
pop esi
pop ebx
retn
sub_40d835
push ebp
mov ebp esp
lea eax [ ebp - 0x20 ]
sub esp 0x20
push eax
call sub_40d79e
test eax eax
pop ecx
jne r-xdata
mov eax [ ebp - 0x10 ]
push esi
mov esi eax
shr eax 0x4
and eax 0xf00f
push edi
mov edi eax
lea eax [ ebp - 0x20 ]
shr esi 0x8
push eax
and esi 0xff00f
call sub_40d7fb
sub eax 0x0
pop ecx
je r-xdata
inc eax
leave
retn
cmp esi 0x6
jb r-xdata
dec eax
je r-xdata
xor eax eax
inc eax
jne r-xdata
cmp esi 0x5
jb r-xdata
dec eax
jne r-xdata
xor eax eax
jmp r-xdata
cmp edi 0x100c
jne r-xdata
cmp esi 0x6
jb r-xdata
pop edi
pop esi
leave
retn
cmp edi 0x6
jb r-xdata
jne r-xdata
cmp edi 0xa
jmp r-xdata
cmp edi 0xf
jae r-xdata
je r-xdata
sub_40d8ce
push ebp
mov ebp esp
mov eax [ rw-data ]
push ebx
push esi
xor ebx ebx
xor ecx ecx
cmp eax ebx
push edi
mov edi [ ebp + 0x10 ]
jbe r-xdata
cmp [ ebp + 0x20 ] bl
je r-xdata
mov esi [ ecx * 4 + rw-data ]
mov edx [ esi + 0x8 ]
cmp edx [ ebp + 0x8 ]
jne r-xdata
pop edi
pop esi
xor eax eax
pop ebx
pop ebp
retn
cmp [ edi ] ebx
je r-xdata
inc ecx
cmp ecx eax
jb r-xdata
mov edx [ esi + 0xc ]
cmp edx [ ebp + 0xc ]
jne r-xdata
push 0x60
call ??2@YAPAXI@Z
cmp eax ebx
pop ecx
je r-xdata
jmp r-xdata
cmp [ ebp + 0x1c ] bl
je r-xdata
xor esi esi
mov ecx eax
call sub_40e485
mov esi eax
jmp r-xdata
cmp [ esi ] ebx
jne r-xdata
cmp [ esi + 0x4 ] ebx
je r-xdata
mov ecx [ ebp + 0x14 ]
push esi
call sub_408761
push [ edi ]
lea ecx [ esi + 0x58 ]
call sub_408761
call [ esi ]
call [ esi + 0x4 ]
jmp r-xdata
cmp [ esi + 0x14 ] 0x1
jne r-xdata
mov ecx edi
call sub_408761
jmp r-xdata
cmp [ esi + 0x18 ] bl
push eax
je r-xdata
mov ecx [ ebp + 0x18 ]
call sub_408761
mov ecx [ ebp + 0x14 ]
call sub_408761
jmp r-xdata
sub_40d97a
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
push esi
push 0x1
push [ ebp + 0x18 ]
lea eax [ ebp - 0x4 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40d8ce
mov esi eax
mov eax [ ebp - 0x4 ]
add esp 0x1c
test eax eax
je r-xdata
mov eax esi
pop esi
leave
retn
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
sub_40d9b4
push esi
mov esi ecx
mov eax [ esi ]
cmp eax 0xffffffff
je r-xdata
mov al 0x1
pop esi
retn
push eax
call [ CloseHandle@IAT ]
test eax eax
jne r-xdata
or [ esi ] 0xffffffff
xor al al
pop esi
retn
sub_40d9d4
push ebp
mov ebp esp
push ecx
push esi
lea eax [ ebp - 0x4 ]
push eax
push [ ecx ]
call [ GetFileSize@IAT ]
mov esi eax
cmp esi 0xffffffff
jne r-xdata
push 0x1
push 0x0
push 0x0
push [ ebp - 0x4 ]
call sub_4122c0
mov ecx eax
xor eax eax
add ecx esi
adc edx eax
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
mov al 0x1
call [ GetLastError@IAT ]
test eax eax
je r-xdata
xor al al
jmp r-xdata
pop esi
leave
retn 0x4
sub_40da1f
push ebp
mov ebp esp
push ecx
push ecx
mov edx [ ebp + 0xc ]
push [ ebp + 0x10 ]
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] edx
lea edx [ ebp - 0x4 ]
push edx
push eax
push [ ecx ]
mov [ ebp - 0x8 ] eax
call [ SetFilePointer@IAT ]
cmp eax 0xffffffff
mov [ ebp - 0x8 ] eax
jne r-xdata
mov eax [ ebp + 0x14 ]
mov ecx [ ebp - 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
mov al 0x1
call [ GetLastError@IAT ]
test eax eax
je r-xdata
xor al al
jmp r-xdata
leave
retn 0x10
sub_40da85
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_40d9b4
test al al
je r-xdata
pop esi
pop ebp
retn 0x14
push 0x0
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ CreateFileW@IAT ]
xor ecx ecx
cmp eax 0xffffffff
setne cl
mov [ esi ] eax
mov al cl
sub_40db0b
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
push 0x0
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ecx ]
call [ ReadFile@IAT ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp - 0x4 ]
test eax eax
mov [ ecx ] edx
setne al
leave
retn 0xc
sub_40dbc6
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
cmp [ ebp + 0xc ] eax
jbe r-xdata
and [ ebp - 0x4 ] 0x0
push 0x0
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ecx ]
call [ WriteFile@IAT ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp - 0x4 ]
test eax eax
mov [ ecx ] edx
setne al
leave
retn 0xc
mov [ ebp + 0xc ] eax
sub_40dc0f
push ebp
mov ebp esp
push ecx
push ecx
push esi
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0xc ]
mov esi ecx
push [ ebp + 0x8 ]
call sub_40da6a
test al al
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebp + 0x8 ]
jne r-xdata
xor al al
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp eax [ ebp + 0xc ]
jne r-xdata
pop esi
leave
retn 0x8
mov ecx esi
call sub_40dc00
sub_40dc4a
cmp [ esp + 0x4 ] 0x0
je r-xdata
call [ GetLastError@IAT ]
test eax eax
jne r-xdata
xor eax eax
retn
jle r-xdata
mov eax 0x80004005
retn
retn
and eax 0xffff
or eax 0x80070000
sub_40dc79
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
lea eax [ ebp + 0x10 ]
push eax
push [ ebp + 0x10 ]
add ecx 0xc
push [ ebp + 0xc ]
call sub_40db38
mov [ ebp + 0xc ] al
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
push [ ebp + 0xc ]
call sub_40dc4a
pop ecx
pop ebp
retn 0x10
mov ecx [ ebp + 0x10 ]
mov [ eax ] ecx
sub_40dcad
push ebp
mov ebp esp
cmp [ ebp + 0x14 ] 0x3
jb r-xdata
mov ecx [ ebp + 0x8 ]
lea eax [ ebp + 0xc ]
push eax
push [ ebp + 0x14 ]
add ecx 0xc
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_40da1f
mov [ ebp + 0x14 ] al
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
mov eax 0x80030001
jmp r-xdata
push [ ebp + 0x14 ]
call sub_40dc4a
pop ecx
mov ecx [ ebp + 0xc ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn 0x14
sub_40dd11
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
lea eax [ ebp + 0x10 ]
push eax
push [ ebp + 0x10 ]
lea ecx [ esi + 0x8 ]
push [ ebp + 0xc ]
call sub_40dbc6
mov ecx [ ebp + 0x14 ]
mov [ ebp + 0xc ] al
mov eax [ ebp + 0x10 ]
add [ esi + 0x10 ] eax
adc [ esi + 0x14 ] 0x0
test ecx ecx
pop esi
je r-xdata
push [ ebp + 0xc ]
call sub_40dc4a
pop ecx
pop ebp
retn 0x10
mov [ ecx ] eax
sub_40dd4e
push ebp
mov ebp esp
cmp [ ebp + 0x14 ] 0x3
jb r-xdata
mov ecx [ ebp + 0x8 ]
lea eax [ ebp + 0xc ]
push eax
push [ ebp + 0x14 ]
add ecx 0x8
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_40da1f
mov [ ebp + 0x14 ] al
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
mov eax 0x80030001
jmp r-xdata
push [ ebp + 0x14 ]
call sub_40dc4a
pop ecx
mov ecx [ ebp + 0xc ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn 0x14
sub_40dd98
push ebp
mov ebp esp
sub esp 0x10
push esi
mov esi [ ebp + 0x8 ]
lea eax [ ebp - 0x8 ]
push eax
push 0x1
push 0x0
add esi 0x8
push 0x0
mov ecx esi
call sub_40da1f
test al al
jne r-xdata
push [ ebp + 0x10 ]
mov ecx esi
push [ ebp + 0xc ]
call sub_40dc0f
test al al
je r-xdata
mov eax 0x80004005
jmp r-xdata
xor al al
lea eax [ ebp - 0x10 ]
push eax
push [ ebp - 0x4 ]
mov ecx esi
push [ ebp - 0x8 ]
call sub_40da6a
test al al
je r-xdata
pop esi
leave
retn 0xc
mov al 0x1
jmp r-xdata
neg al
sbb eax eax
and eax 0x7fffbffb
add eax 0x80004005
sub_40de15
push esi
mov esi ecx
cmp [ esi + 0x38 ] 0x0
push edi
je r-xdata
mov edi [ esp + 0x10 ]
push edi
push [ esi + 0x20 ]
push [ esp + 0x14 ]
call sub_40f143
add esp 0xc
test eax eax
jne r-xdata
mov ecx [ esi + 0x40 ]
sub ecx [ esi + 0x48 ]
mov eax [ esi + 0x44 ]
sbb eax [ esi + 0x4c ]
xor edx edx
cmp edx eax
jb r-xdata
pop edi
pop esi
retn 0x8
add [ esi + 0x48 ] edi
adc [ esi + 0x4c ] eax
ja r-xdata
mov [ esp + 0x10 ] ecx
cmp [ esp + 0x10 ] ecx
jbe r-xdata
sub_40de75
push esi
mov esi ecx
push [ esi + 0x20 ]
mov [ esi ] r--data
mov [ esi + 0x4 ] r--data
mov [ esi + 0x8 ] r--data
mov [ esi + 0xc ] r--data
mov [ esi + 0x10 ] r--data
mov [ esi + 0x14 ] r--data
mov [ esi + 0x18 ] r--data
call sub_401b29
mov eax [ esi + 0x58 ]
test eax eax
pop ecx
je r-xdata
mov eax [ esi + 0x54 ]
test eax eax
je r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
mov eax [ esi + 0x50 ]
test eax eax
je r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
mov eax [ esi + 0x28 ]
test eax eax
je r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
mov esi [ esi + 0x24 ]
test esi esi
je r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
pop esi
retn
mov eax [ esi ]
push esi
call [ eax + 0x8 ]
sub_40df3d
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
push r--data
push esi
call sub_401459
test eax eax
pop ecx
pop ecx
je r-xdata
push r--data
push esi
call sub_401459
test eax eax
pop ecx
pop ecx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
push r--data
push esi
call sub_401459
test eax eax
pop ecx
pop ecx
je r-xdata
pop esi
pop ebp
retn 0xc
push r--data
push esi
call sub_401459
test eax eax
pop ecx
pop ecx
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax + 0x4 ]
push r--data
push esi
call sub_401459
test eax eax
pop ecx
pop ecx
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax + 0x8 ]
jmp r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x4 ]
xor eax eax
jmp r-xdata
push r--data
push esi
call sub_401459
test eax eax
pop ecx
pop ecx
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax + 0xc ]
jmp r-xdata
mov ecx eax
neg ecx
sbb ecx ecx
and ecx edx
mov edx [ ebp + 0x10 ]
mov [ edx ] ecx
jmp r-xdata
push r--data
push esi
call sub_401459
test eax eax
pop ecx
pop ecx
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax + 0x10 ]
jmp r-xdata
push edi
mov edi r--data
push edi
push esi
call sub_401459
test eax eax
pop ecx
pop ecx
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax + 0x14 ]
jmp r-xdata
mov eax 0x80004002
mov esi [ ebp + 0x8 ]
lea ecx [ esi + 0x54 ]
cmp [ ecx ] 0x0
jne r-xdata
mov ecx [ ebp + 0x10 ]
lea eax [ esi + 0x18 ]
mov [ ecx ] eax
mov eax [ esi ]
push esi
call [ eax + 0x4 ]
xor eax eax
jmp r-xdata
mov eax [ esi + 0x58 ]
mov edx [ eax ]
push ecx
push edi
push eax
call [ edx ]
test eax eax
jne r-xdata
pop edi
sub_40e04e
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov ecx esi
call sub_40de60
test eax eax
jne r-xdata
pop esi
pop ebp
retn 0x18
mov ecx [ ebp + 0x18 ]
push edi
xor edi edi
test ecx ecx
setne al
test al al
mov [ esi + 0x38 ] al
je r-xdata
push ebx
mov eax [ ecx ]
mov [ esi + 0x40 ] eax
mov eax [ ecx + 0x4 ]
mov [ esi + 0x44 ] eax
mov eax 0x20000
sub eax edi
mov [ ebp + 0x8 ] eax
lea eax [ ebp + 0x8 ]
push eax
mov eax [ esi + 0x20 ]
add eax edi
push eax
push [ ebp + 0xc ]
call sub_40f0cf
add esp 0xc
test eax eax
jne r-xdata
mov eax [ esi + 0x4c ]
cmp eax [ esi + 0x44 ]
ja r-xdata
pop ebx
pop edi
mov eax [ ebp + 0x8 ]
add edi eax
mov eax [ esi + 0x58 ]
mov ecx [ eax ]
push edi
push [ esi + 0x20 ]
push eax
call [ ecx + 0x10 ]
mov ebx eax
cmp edi ebx
jae r-xdata
xor eax eax
jmp r-xdata
jb r-xdata
test ebx ebx
je r-xdata
mov eax [ esi + 0x20 ]
mov [ edi + eax ] 0x0
inc edi
cmp edi ebx
jb r-xdata
mov eax [ esi + 0x48 ]
cmp eax [ esi + 0x40 ]
jae r-xdata
test edi edi
jne r-xdata
push ebx
push [ ebp + 0x10 ]
mov ecx esi
call sub_40de15
test eax eax
jne r-xdata
mov eax [ esi + 0x58 ]
mov ecx [ eax ]
push edi
push [ esi + 0x20 ]
push eax
call [ ecx + 0x10 ]
mov ebx eax
push edi
push [ ebp + 0x10 ]
mov ecx esi
call sub_40de15
mov ecx [ ebp + 0x1c ]
test ecx ecx
je r-xdata
xor ecx ecx
jmp r-xdata
mov edx [ ecx ]
lea eax [ esi + 0x48 ]
push eax
push eax
push ecx
call [ edx + 0xc ]
test eax eax
jne r-xdata
cmp ebx edi
jb r-xdata
mov eax [ esi + 0x20 ]
mov dl [ eax + ebx ]
mov [ eax + ecx ] dl
inc ecx
inc ebx
mov edi ecx
jmp r-xdata
cmp [ esi + 0x38 ] 0x0
je r-xdata
sub_40e18b
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x14 ]
test edi edi
je r-xdata
cmp [ ebp + 0x10 ] 0x0
jbe r-xdata
and [ edi ] 0x0
xor eax eax
mov esi [ ebp + 0x8 ]
jmp r-xdata
mov eax [ esi + 0x1c ]
mov ebx 0x20000
sub ebx eax
cmp [ ebp + 0x10 ] ebx
jae r-xdata
mov ecx [ esi + 0x10 ]
push ebx
push [ ebp + 0xc ]
add ecx eax
push ecx
call memcpy
sub [ ebp + 0x10 ] ebx
add esp 0xc
test edi edi
je r-xdata
mov ebx [ ebp + 0x10 ]
mov edi [ esi + 0x1c ]
mov eax [ esi + 0x48 ]
mov ecx [ eax ]
add [ ebp + 0xc ] ebx
add edi ebx
push edi
push [ esi + 0x10 ]
push eax
call [ ecx + 0x10 ]
test eax eax
mov [ esi + 0x1c ] eax
je r-xdata
add [ edi ] ebx
mov [ esi + 0x1c ] edi
jmp r-xdata
cmp eax edi
ja r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov ecx [ esi + 0x18 ]
push eax
push ecx
lea ecx [ esi - 0x10 ]
call sub_40de15
test eax eax
jne r-xdata
mov eax 0x80004005
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
xor ecx ecx
jmp r-xdata
cmp [ esi + 0x1c ] edi
jb r-xdata
mov edx [ esi + 0x1c ]
mov eax [ esi + 0x10 ]
mov dl [ eax + edx ]
mov [ eax + ecx ] dl
inc ecx
inc [ esi + 0x1c ]
cmp [ ebp + 0x10 ] 0x0
mov [ esi + 0x1c ] ecx
ja r-xdata
mov edi [ ebp + 0x14 ]
sub_40e24c
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x18 ]
test ecx ecx
push edi
je r-xdata
mov esi [ esi + 0x14 ]
and [ ebp + 0x8 ] 0x0
mov eax [ esi ]
lea ecx [ ebp + 0x8 ]
push ecx
push r--data
push esi
call [ eax ]
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov eax [ esi + 0x44 ]
mov edx [ eax ]
push ecx
push [ esi + 0xc ]
push eax
call [ edx + 0x10 ]
mov edi eax
mov eax [ esi + 0x18 ]
cmp eax edi
jae r-xdata
xor eax eax
mov ecx [ eax ]
push eax
call [ ecx + 0xc ]
mov esi eax
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
push [ esi + 0x18 ]
mov eax [ esi + 0x14 ]
push eax
lea ecx [ esi - 0x14 ]
call sub_40de15
test eax eax
jne r-xdata
mov ecx [ esi + 0x18 ]
mov eax [ esi + 0xc ]
mov [ eax + ecx ] 0x0
inc [ esi + 0x18 ]
cmp [ esi + 0x18 ] edi
jb r-xdata
mov eax esi
jmp r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
pop edi
pop esi
pop ebp
retn 0x4
and [ esi + 0x18 ] eax
mov eax [ esi + 0x44 ]
mov ecx [ eax ]
push edi
push [ esi + 0xc ]
push eax
call [ ecx + 0x10 ]
cmp eax edi
je r-xdata
mov eax 0x80004005
jmp r-xdata
sub_40e2ee
push esi
mov esi [ esp + 0x8 ]
push [ esp + 0xc ]
xor eax eax
lea ecx [ esi + 0x20 ]
mov [ esi + 0x28 ] eax
mov [ esi + 0x30 ] eax
mov [ esi + 0x2c ] eax
call sub_408761
lea ecx [ esi - 0x4 ]
call sub_40de60
pop esi
retn 0x8
sub_40e327
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
push esi
push edi
mov edi [ ebp + 0x10 ]
test edi edi
jbe r-xdata
and [ eax ] 0x0
xor eax eax
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x28 ]
mov eax [ esi + 0x2c ]
sub eax ecx
cmp edi eax
jb r-xdata
xor eax eax
jmp r-xdata
mov eax [ esi + 0x18 ]
push edi
add eax ecx
push eax
push [ ebp + 0xc ]
call memcpy
mov eax [ ebp + 0x14 ]
add [ esi + 0x28 ] edi
add esp 0xc
test eax eax
je r-xdata
mov edi eax
cmp ecx [ esi + 0x24 ]
jb r-xdata
add [ eax ] edi
mov ecx [ esi + 0x18 ]
mov edx [ esi + 0x2c ]
add edx ecx
mov dl [ edx + eax ]
mov [ ecx + eax ] dl
mov ecx [ esi + 0x2c ]
inc eax
add ecx eax
and [ esi + 0x2c ] 0x0
and [ esi + 0x28 ] 0x0
lea edx [ ebp + 0x10 ]
push edx
mov edx [ esi + 0x18 ]
mov ecx 0x20000
sub ecx eax
add edx eax
mov [ ebp + 0x10 ] ecx
mov ecx [ esi + 0x1c ]
push edx
push ecx
mov [ esi + 0x24 ] eax
call sub_40f0cf
add esp 0xc
test eax eax
jne r-xdata
pop edi
pop esi
pop ebp
retn 0x10
mov eax [ ebp + 0x10 ]
add [ esi + 0x24 ] eax
mov ecx [ esi + 0x24 ]
mov eax [ esi + 0x50 ]
mov edx [ eax ]
push ecx
push [ esi + 0x18 ]
push eax
call [ edx + 0x10 ]
test eax eax
mov [ esi + 0x2c ] eax
jne r-xdata
mov ecx [ esi + 0x24 ]
cmp ecx eax
jae r-xdata
mov eax [ esi + 0x24 ]
test eax eax
je r-xdata
mov ecx [ esi + 0x2c ]
cmp [ esi + 0x28 ] ecx
jne r-xdata
mov eax [ esi + 0x24 ]
mov ecx [ esi + 0x18 ]
mov [ eax + ecx ] 0x0
inc [ esi + 0x24 ]
mov eax [ esi + 0x24 ]
cmp eax [ esi + 0x2c ]
jb r-xdata
jmp r-xdata
push [ esi + 0x24 ]
mov eax [ esi + 0x50 ]
push [ esi + 0x18 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x10 ]
mov [ esi + 0x2c ] eax
jmp r-xdata
sub_40e485
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
mov [ esi + 0x4 ] r--data
mov [ esi + 0x8 ] r--data
mov [ esi + 0xc ] r--data
mov [ esi + 0x10 ] r--data
mov [ esi + 0x14 ] r--data
mov [ esi + 0x18 ] r--data
push edi
xor edi edi
mov [ esi + 0x1c ] edi
mov [ esi ] r--data
mov [ esi + 0x4 ] r--data
mov [ esi + 0x8 ] r--data
mov [ esi + 0xc ] r--data
mov [ esi + 0x10 ] r--data
mov [ esi + 0x14 ] r--data
mov [ esi + 0x18 ] r--data
mov [ esi + 0x24 ] edi
mov [ esi + 0x28 ] edi
mov [ esi + 0x50 ] edi
mov [ esi + 0x54 ] edi
push 0x20000
mov [ esi + 0x58 ] edi
call sub_402482
cmp eax edi
pop ecx
mov [ esi + 0x20 ] eax
jne r-xdata
pop edi
mov eax esi
pop esi
leave
retn
push r--data
lea eax [ ebp - 0x4 ]
push eax
mov [ ebp - 0x4 ] 0x1
call _CxxThrowException
sub_40e528
push esi
mov esi [ esp + 0x8 ]
dec [ esi + 0x1c ]
mov eax [ esi + 0x1c ]
jne r-xdata
pop esi
retn 0x4
mov ecx esi
call sub_40de75
push esi
call ??3@YAXPAX@Z
pop ecx
xor eax eax
sub_40e5be
push esi
xor eax eax
push edi
mov edi [ esp + 0xc ]
inc eax
cmp edi eax
mov esi ecx
jae r-xdata
cmp [ esi + 0x8 ] 0x0
je r-xdata
mov edi eax
call sub_40e585
push edi
mov [ esi + 0x18 ] edi
call sub_402482
pop ecx
xor ecx ecx
test eax eax
setne cl
mov [ esi + 0x8 ] eax
mov al cl
cmp [ esi + 0x18 ] edi
je r-xdata
pop edi
pop esi
retn 0x4
sub_40e602
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi ecx
cmp [ esi + 0x1c ] 0x0
je r-xdata
mov ecx [ esi + 0x8 ]
mov eax [ esi ]
push edi
sub eax ecx
cdq
add [ esi + 0x10 ] eax
mov eax [ esi + 0xc ]
lea edi [ ebp - 0x8 ]
adc [ esi + 0x14 ] edx
mov edx [ eax ]
push edi
push [ esi + 0x18 ]
push ecx
push eax
call [ edx + 0xc ]
test eax eax
pop edi
je r-xdata
xor al al
jmp r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ ebp - 0x8 ]
mov [ esi ] eax
add eax ecx
test ecx ecx
mov [ esi + 0x4 ] eax
sete al
xor ecx ecx
test al al
sete cl
mov [ esi + 0x1c ] al
mov al cl
mov [ ebp - 0x4 ] eax
push r--data
lea eax [ ebp - 0x4 ]
push eax
call _CxxThrowException
pop esi
leave
retn
sub_40e66b
push esi
mov esi ecx
call sub_40e602
test al al
jne r-xdata
mov ecx [ esi ]
mov al [ ecx ]
inc ecx
mov [ esi ] ecx
pop esi
retn
add [ esi + 0x10 ] 0x1
adc [ esi + 0x14 ] 0x0
or al 0xff
pop esi
retn
sub_40e68c
push esi
push edi
mov di [ esp + 0x10 ]
xor eax eax
cmp [ esp + 0xc ] di
mov esi ecx
je r-xdata
pop edi
pop esi
retn 0x8
push ebx
xor ebx ebx
cmp [ esi + 0x4 ] eax
jle r-xdata
mov eax ebx
pop ebx
push eax
push [ esp + 0x14 ]
mov ecx esi
call sub_40262f
test eax eax
jl r-xdata
mov ecx [ esi ]
mov [ ecx + eax * 2 ] di
inc eax
inc ebx
cmp eax [ esi + 0x4 ]
jl r-xdata
sub_40e6ea
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
cmp edx [ ebp + 0x14 ]
ja r-xdata
mov eax [ ebp + 0x10 ]
mov edx [ ebp + 0x14 ]
mov eax [ ebp + 0x8 ]
jb r-xdata
pop ebp
retn
cmp eax [ ebp + 0x10 ]
jb r-xdata
sub_40e707
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x10 ]
mov ecx [ esi + 0x14 ]
push edi
xor edi edi
sub eax [ esi + 0x18 ]
push edi
push [ ebp + 0x10 ]
sbb ecx [ esi + 0x1c ]
mov [ ebp - 0x4 ] edi
push ecx
push eax
call sub_40e6ea
mov edx eax
add esp 0x10
xor eax eax
test edx edx
jbe r-xdata
mov ecx [ ebp + 0x14 ]
test ecx ecx
je r-xdata
mov ecx [ esi + 0x8 ]
mov eax [ ecx ]
lea edi [ ebp - 0x4 ]
push edi
push edx
push [ ebp + 0xc ]
push ecx
call [ eax + 0xc ]
mov edi [ ebp - 0x4 ]
add [ esi + 0x18 ] edi
adc [ esi + 0x1c ] 0x0
test edi edi
jne r-xdata
pop edi
pop esi
leave
retn 0x10
mov [ ecx ] edi
mov [ esi + 0x20 ] 0x1
sub_40e769
push ebp
mov ebp esp
push esi
push edi
mov esi ecx
lea edi [ esi + 0x4 ]
push edi
call [ EnterCriticalSection@IAT ]
mov eax [ esi ]
mov ecx [ eax ]
push 0x0
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call [ ecx + 0x10 ]
test eax eax
je r-xdata
push [ ebp + 0x18 ]
mov esi [ esi ]
push [ ebp + 0x14 ]
mov eax [ esi ]
push [ ebp + 0x10 ]
push esi
call [ eax + 0xc ]
jmp r-xdata
push edi
mov esi eax
call [ LeaveCriticalSection@IAT ]
pop edi
mov eax esi
pop esi
pop ebp
retn 0x14
sub_40e7b4
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
push esi
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x8 ]
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ esi + 0x14 ]
push [ esi + 0x10 ]
call sub_40e769
mov ecx [ ebp - 0x4 ]
add [ esi + 0x10 ] ecx
mov edx [ ebp + 0x14 ]
adc [ esi + 0x14 ] 0x0
test edx edx
pop esi
je r-xdata
leave
retn 0x10
mov [ edx ] ecx
sub_40e7f0
mov edx [ esp + 0x4 ]
push esi
mov esi [ esp + 0xc ]
jmp r-xdata
movzx eax [ edx ]
movzx ecx [ esi ]
inc edx
inc edx
inc esi
inc esi
cmp ax cx
jae r-xdata
ja r-xdata
or eax 0xffffffff
pop esi
retn
xor eax eax
inc eax
pop esi
retn
test ax ax
je r-xdata
xor eax eax
pop esi
retn
sub_40e840
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ecx
cmp ebx [ esi + 0x4 ]
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x4
cmp ebx 0x80000000
jb r-xdata
push edi
mov edi [ esi + 0x10 ]
mov ecx edi
imul ecx ebx
xor edx edx
mov eax ecx
div edi
cmp eax ebx
je r-xdata
mov [ ebp + 0x8 ] 0x100ec1
xor edi edi
test ecx ecx
jbe r-xdata
mov [ ebp + 0x8 ] 0x100ec2
jmp r-xdata
push [ esi + 0xc ]
call ??3@YAXPAX@Z
pop ecx
mov [ esi + 0xc ] edi
mov [ esi + 0x4 ] ebx
pop edi
push ecx
call ??2@YAPAXI@Z
mov edi eax
test edi edi
pop ecx
jne r-xdata
push r--data
lea eax [ ebp + 0x8 ]
push eax
call _CxxThrowException
mov eax [ esi + 0x8 ]
cmp eax ebx
jl r-xdata
mov [ ebp + 0x8 ] 0x100ec3
jmp r-xdata
mov ecx [ esi + 0x10 ]
imul ecx eax
push ecx
push [ esi + 0xc ]
push edi
call memcpy
add esp 0xc
mov eax ebx
sub_40e8da
mov eax [ ecx + 0x10 ]
mov edx [ ecx + 0xc ]
mov ecx [ ecx + 0x8 ]
sub ecx [ esp + 0x8 ]
imul ecx eax
push ecx
mov ecx eax
imul eax [ esp + 0x8 ]
imul ecx [ esp + 0xc ]
add ecx edx
push ecx
add eax edx
push eax
call [ memmove@IAT ]
add esp 0xc
retn 0x8
sub_40e911
mov edx [ ecx + 0x4 ]
cmp [ ecx + 0x8 ] edx
jne r-xdata
retn
xor eax eax
inc eax
cmp edx 0x40
jl r-xdata
cmp edx 0x8
jl r-xdata
mov eax edx
shr eax 0x2
jmp r-xdata
add edx eax
push edx
call sub_40e840
push 0x8
pop eax
sub_40e939
push ebx
mov ebx [ esp + 0x8 ]
push esi
push edi
lea eax [ esp + 0x14 ]
push eax
push ebx
mov esi ecx
call sub_403dc9
mov edi [ esp + 0x14 ]
test edi edi
jle r-xdata
pop edi
pop esi
pop ebx
retn 0x8
lea eax [ ebx + edi ]
push eax
push ebx
mov ecx esi
call sub_40e8da
sub [ esi + 0x8 ] edi
sub_40e9bb
mov eax [ ecx + 0x18 ]
mov edx [ ecx + 0x1c ]
push ebx
push esi
mov esi [ ecx + 0xc ]
xor ebx ebx
push edi
mov edi [ ecx + 0x4 ]
sub eax esi
sbb edx ebx
add eax edi
adc edx ebx
cmp esi edi
pop edi
pop esi
pop ebx
jbe r-xdata
retn
mov ecx [ ecx + 0x10 ]
add eax ecx
adc edx 0x0
sub_40e9e4
push esi
xor eax eax
push edi
mov edi [ esp + 0xc ]
inc eax
cmp edi eax
mov esi ecx
jae r-xdata
cmp [ esi ] 0x0
je r-xdata
mov edi eax
call sub_40e993
push edi
mov [ esi + 0x10 ] edi
call sub_402482
pop ecx
xor ecx ecx
test eax eax
setne cl
mov [ esi ] eax
mov al cl
cmp [ esi + 0x10 ] edi
je r-xdata
pop edi
pop esi
retn 0x4
sub_40ea26
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi ecx
mov eax [ esi + 0xc ]
push edi
mov edi [ esi + 0x4 ]
cmp eax edi
jb r-xdata
sub edi eax
mov eax [ esi + 0x20 ]
xor ebx ebx
cmp eax ebx
mov [ ebp - 0x8 ] ebx
je r-xdata
mov edi [ esi + 0x10 ]
mov eax [ esi + 0x14 ]
cmp eax ebx
je r-xdata
mov ecx [ esi ]
add ecx [ esi + 0xc ]
push edi
push ecx
push eax
call [ memmove@IAT ]
add esp 0xc
add [ esi + 0x20 ] edi
add [ esi + 0xc ] edi
mov ecx [ esi + 0xc ]
mov eax [ esi + 0x10 ]
cmp ecx eax
jne r-xdata
lea edx [ ebp - 0x4 ]
push edx
mov edx [ esi ]
add edx [ esi + 0xc ]
push edi
push edx
mov [ ebp - 0x4 ] ebx
mov ecx [ eax ]
push eax
call [ ecx + 0xc ]
mov edi [ ebp - 0x4 ]
mov [ ebp - 0x8 ] eax
cmp [ esi + 0x4 ] eax
jne r-xdata
mov [ esi + 0xc ] ebx
mov ecx [ esi + 0xc ]
cmp ecx [ esi + 0x4 ]
jbe r-xdata
mov [ esi + 0x24 ] 0x1
mov [ esi + 0x4 ] ebx
add [ esi + 0x18 ] edi
pop edi
mov [ esi + 0x8 ] eax
adc [ esi + 0x1c ] ebx
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
leave
retn
mov eax ecx
sub_40eab7
push esi
mov esi ecx
jmp r-xdata
mov eax [ esi + 0xc ]
cmp eax [ esi + 0x4 ]
jne r-xdata
mov ecx esi
call sub_40ea26
test eax eax
jne r-xdata
xor eax eax
pop esi
retn
sub_40ead3
push ebp
mov ebp esp
push ecx
call sub_40eab7
test eax eax
je r-xdata
leave
retn
mov [ ebp - 0x4 ] eax
push r--data
lea eax [ ebp - 0x4 ]
push eax
call _CxxThrowException
sub_40eaf3
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x8 ]
push edi
xor edi edi
test eax eax
je r-xdata
cmp [ esi + 0x1c ] 0x0
je r-xdata
mov ecx [ eax ]
lea edx [ ebp + 0x10 ]
push edx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call [ ecx + 0xc ]
mov edi eax
mov eax [ ebp + 0x10 ]
add [ esi + 0x10 ] eax
mov ecx [ ebp + 0x14 ]
adc [ esi + 0x14 ] 0x0
test ecx ecx
je r-xdata
push [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov ecx [ esi + 0x18 ]
call sub_408636
mov [ esi + 0x18 ] eax
mov eax edi
pop edi
pop esi
pop ebp
retn 0x10
mov [ ecx ] eax
sub_40eb53
push ebx
push esi
mov esi ecx
lea ebx [ esi + 0xc ]
push edi
mov ecx ebx
call sub_40a018
push [ esp + 0x10 ]
lea edi [ esi + 0x8 ]
mov ecx edi
call sub_408761
mov edi [ edi ]
mov eax [ edi ]
push ebx
push r--data
push edi
call [ eax ]
mov al [ esp + 0x14 ]
pop edi
mov [ esi + 0x10 ] al
pop esi
pop ebx
retn 0x8
sub_40eb8a
push ebp
mov ebp esp
sub esp 0x10
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x20 ]
mov [ ebp - 0x8 ] eax
mov eax [ esi + 0x24 ]
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x28 ]
mov [ ebp - 0x10 ] eax
mov eax [ esi + 0x2c ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
mov ecx [ eax ]
add [ ebp - 0x8 ] ecx
mov eax [ eax + 0x4 ]
adc [ ebp - 0x4 ] eax
cmp [ esi + 0x30 ] 0x0
je r-xdata
mov ecx [ eax ]
add [ ebp - 0x10 ] ecx
mov eax [ eax + 0x4 ]
adc [ ebp - 0xc ] eax
mov eax [ esi + 0x18 ]
add [ ebp - 0x8 ] eax
mov ecx [ esi + 0x1c ]
adc [ ebp - 0x4 ] ecx
add [ ebp - 0x10 ] eax
adc [ ebp - 0xc ] ecx
cmp [ esi + 0x31 ] 0x0
je r-xdata
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
xor eax eax
cmp [ esi + 0x10 ] 0x0
lea eax [ ebp - 0x8 ]
jne r-xdata
mov ecx [ eax ]
lea edx [ ebp - 0x10 ]
push edx
lea edx [ ebp - 0x8 ]
push edx
push eax
call [ ecx + 0xc ]
test eax eax
jne r-xdata
mov esi [ esi + 0x8 ]
mov ecx [ esi ]
push eax
push esi
call [ ecx + 0x10 ]
jmp r-xdata
lea eax [ ebp - 0x10 ]
pop esi
leave
retn 0xc
sub_40ec26
mov eax ecx
xor ecx ecx
mov [ eax + 0x4 ] ecx
mov [ eax ] r--data
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x28 ] ecx
mov [ eax + 0x2c ] ecx
mov [ eax + 0x20 ] ecx
mov [ eax + 0x24 ] ecx
mov [ eax + 0x18 ] ecx
mov [ eax + 0x1c ] ecx
mov [ eax + 0x31 ] 0x1
mov [ eax + 0x30 ] 0x1
retn
sub_40ec54
push esi
mov esi ecx
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
pop esi
retn
mov eax [ esi ]
push esi
call [ eax + 0x8 ]
sub_40ec73
push esi
mov esi [ esp + 0x8 ]
dec [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
jne r-xdata
pop esi
retn 0x4
mov ecx esi
call sub_40ec54
push esi
call ??3@YAXPAX@Z
pop ecx
xor eax eax
sub_40ec94
movzx eax [ ecx ]
cmp eax 0x13
jg r-xdata
cmp eax 0x15
jl r-xdata
cmp eax 0x10
jge r-xdata
push ecx
call [ VariantClear@IAT ]
retn
cmp eax 0x17
jle r-xdata
and [ ecx ] 0x0
and [ ecx + 0x2 ] 0x0
xor eax eax
retn
cmp eax 0x2
jl r-xdata
cmp eax 0x40
jne r-xdata
cmp eax 0x7
jle r-xdata
cmp eax 0x9
jle r-xdata
cmp eax 0xb
jle r-xdata
sub_40ecdd
push esi
mov esi ecx
mov ecx [ esp + 0x8 ]
call sub_40ec94
test eax eax
jl r-xdata
pop esi
retn 0x4
push 0x10
push esi
push [ esp + 0x10 ]
call memcpy
and [ esi ] 0x0
add esp 0xc
xor eax eax
sub_40ed1c
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_40ed06
push [ ebp + 0x8 ]
and [ esi + 0x2 ] 0x0
mov [ esi ] 0x8
call [ SysAllocString@IAT ]
test eax eax
mov [ esi + 0x8 ] eax
jne r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
cmp [ ebp + 0x8 ] eax
je r-xdata
mov eax [ rw-data ]
mov [ ebp + 0x8 ] eax
push r--data
lea eax [ ebp + 0x8 ]
push eax
call _CxxThrowException
sub_40ed63
push esi
mov esi ecx
cmp [ esi ] 0xb
je r-xdata
mov al [ esp + 0x8 ]
neg al
sbb eax eax
mov [ esi + 0x8 ] ax
mov eax esi
pop esi
retn 0x4
call sub_40ed06
mov [ esi ] 0xb
sub_40eda8
push esi
mov esi ecx
cmp [ esi ] 0x15
je r-xdata
mov eax [ esp + 0x8 ]
mov [ esi + 0x8 ] eax
mov eax [ esp + 0xc ]
mov [ esi + 0xc ] eax
mov eax esi
pop esi
retn 0x8
call sub_40ed06
mov [ esi ] 0x15
sub_40edcf
push esi
mov esi ecx
cmp [ esi ] 0x40
je r-xdata
mov eax [ esp + 0x8 ]
mov ecx [ eax ]
mov [ esi + 0x8 ] ecx
mov eax [ eax + 0x4 ]
mov [ esi + 0xc ] eax
mov eax esi
pop esi
retn 0x4
call sub_40ed06
mov [ esi ] 0x40
sub_40edf7
push esi
mov esi ecx
push 0x1
push esi
call sub_406575
test eax eax
pop ecx
pop ecx
jne r-xdata
pop esi
retn
push eax
lea eax [ esi + 0x4 ]
push eax
call sub_406575
test eax eax
pop ecx
pop ecx
jne r-xdata
push eax
add esi 0x8
push esi
call sub_406575
pop ecx
pop ecx
sub_40ee26
push esi
mov esi ecx
lea eax [ esi + 0x4 ]
push eax
call sub_406561
lea eax [ esi + 0x8 ]
push eax
call sub_406561
and [ esi + 0x18 ] 0x0
and [ esi + 0x1c ] 0x0
pop ecx
pop ecx
pop esi
retn
sub_40ee52
push ebp
mov ebp esp
push ecx
push ecx
push esi
push edi
mov edi [ ebp + 0xc ]
test edi edi
mov esi ecx
jbe r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
push esi
mov [ esi + 0x10 ] eax
mov [ esi + 0xc ] edi
call sub_406561
lea eax [ esi + 0x4 ]
push eax
call sub_40654d
mov eax [ esi ]
pop ecx
pop ecx
mov [ ebp - 0x8 ] eax
mov eax [ esi + 0x8 ]
push 0xffffffff
mov [ ebp - 0x4 ] eax
push 0x0
lea eax [ ebp - 0x8 ]
push eax
push 0x2
call [ WaitForMultipleObjects@IAT ]
test eax eax
je r-xdata
xor eax eax
mov [ eax ] edi
xor eax eax
inc eax
jmp r-xdata
pop edi
pop esi
leave
retn 0xc
sub_40eed7
push ebx
push esi
push edi
mov edi [ esp + 0x14 ]
test edi edi
mov esi ecx
jbe r-xdata
mov eax [ esp + 0x18 ]
test eax eax
je r-xdata
lea ebx [ esi + 0x4 ]
push [ ebx ]
call sub_4064f1
test eax eax
pop ecx
jne r-xdata
add [ esi + 0x18 ] edi
adc [ esi + 0x1c ] 0x0
xor eax eax
mov [ eax ] edi
pop edi
pop esi
pop ebx
retn 0xc
mov eax [ esi + 0xc ]
cmp eax edi
jae r-xdata
test eax eax
jbe r-xdata
mov edi eax
push edi
push [ esi + 0x10 ]
push [ esp + 0x18 ]
call memcpy
add [ esi + 0x10 ] edi
add esp 0xc
sub [ esi + 0xc ] edi
jne r-xdata
push ebx
call sub_406561
push esi
call sub_40654d
pop ecx
pop ecx
sub_40ef5a
push esi
mov esi ecx
mov ecx [ esi + 0x8 ]
mov [ esi ] r--data
call sub_40ee47
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call ??3@YAXPAX@Z
pop ecx
sub_40ef97
push r--data
push [ esp + 0xc ]
call sub_401459
test eax eax
pop ecx
pop ecx
je r-xdata
mov eax 0x80004002
mov eax [ esp + 0x4 ]
mov ecx [ esp + 0xc ]
mov [ ecx ] eax
mov ecx [ eax ]
push eax
call [ ecx + 0x4 ]
xor eax eax
jmp r-xdata
retn 0xc
sub_40efc7
push esi
mov esi ecx
mov ecx [ esi + 0x8 ]
mov [ esi ] r--data
call sub_40eeb1
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call ??3@YAXPAX@Z
pop ecx
sub_40f004
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
push 0xc
mov esi ecx
call ??2@YAPAXI@Z
xor ebx ebx
cmp eax ebx
pop ecx
je r-xdata
xor edi edi
mov [ eax + 0x4 ] ebx
mov [ eax ] r--data
mov edi eax
jmp r-xdata
xor edi edi
mov [ eax + 0x4 ] ebx
mov [ eax ] r--data
mov edi eax
jmp r-xdata
push edi
lea ecx [ ebp - 0x4 ]
call sub_408726
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x4 ]
mov [ edi + 0x8 ] esi
push 0xc
mov [ eax ] ecx
call ??2@YAPAXI@Z
cmp eax ebx
pop ecx
je r-xdata
push edi
lea ecx [ ebp + 0x8 ]
call sub_408726
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov [ edi + 0x8 ] esi
mov [ eax ] ecx
pop edi
mov [ esi + 0x10 ] ebx
mov [ esi + 0xc ] ebx
mov [ esi + 0x18 ] ebx
mov [ esi + 0x1c ] ebx
pop esi
pop ebx
leave
retn 0x8
sub_40f080
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x10 ]
mov esi [ edi + 0xc ]
sub esi eax
cmp esi [ ebp + 0x10 ]
jbe r-xdata
mov ecx [ edi + 0x8 ]
push esi
push [ ebp + 0xc ]
add ecx eax
push ecx
call memcpy
mov eax [ ebp + 0x14 ]
add [ edi + 0x10 ] esi
add esp 0xc
test eax eax
je r-xdata
mov esi [ ebp + 0x10 ]
pop edi
test esi esi
pop esi
jne r-xdata
mov [ eax ] esi
xor eax eax
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov eax 0x80004005
jmp r-xdata
pop ebp
retn 0x10
sub_40f0cf
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x10 ]
mov ebx [ esi ]
and [ esi ] 0x0
test ebx ebx
push edi
je r-xdata
xor eax eax
mov edi [ ebp + 0x8 ]
mov ecx [ edi ]
lea edx [ ebp + 0x10 ]
push edx
push eax
push [ ebp + 0xc ]
push edi
call [ ecx + 0xc ]
mov ecx [ ebp + 0x10 ]
add [ esi ] ecx
add [ ebp + 0xc ] ecx
sub ebx ecx
test eax eax
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn
test ecx ecx
je r-xdata
test ebx ebx
jne r-xdata
mov eax 0x80000000
cmp ebx eax
jae r-xdata
sub_40f11a
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x10 ]
lea eax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
mov [ ebp + 0x10 ] esi
push [ ebp + 0x8 ]
call sub_40f0cf
add esp 0xc
test eax eax
jne r-xdata
pop esi
pop ebp
retn
cmp esi [ ebp + 0x10 ]
setne al
sub_40f143
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x10 ]
test edi edi
je r-xdata
xor eax eax
mov esi [ ebp + 0x8 ]
mov ecx [ esi ]
lea edx [ ebp + 0x10 ]
push edx
push eax
push [ ebp + 0xc ]
push esi
call [ ecx + 0xc ]
mov ecx [ ebp + 0x10 ]
add [ ebp + 0xc ] ecx
sub edi ecx
test eax eax
jne r-xdata
mov eax 0x80000000
pop edi
pop esi
pop ebp
retn
test ecx ecx
je r-xdata
mov eax 0x80004005
jmp r-xdata
test edi edi
jne r-xdata
cmp edi 0x80000000
mov eax edi
jb r-xdata
sub_40f190
push esi
mov esi [ esp + 0x8 ]
push [ esi + 0x4 ]
call sub_4064f1
jmp r-xdata
cmp [ esi + 0x10 ] 0x0
pop ecx
je r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax ]
lea eax [ esi + 0x8 ]
push eax
call sub_40654d
push [ esi + 0x4 ]
call sub_4064f1
pop ecx
xor eax eax
pop esi
retn 0x4
sub_40f1c4
push ebx
push esi
mov esi ecx
lea ebx [ esi + 0x4 ]
cmp [ ebx ] 0x0
jne r-xdata
push edi
lea edi [ esi + 0x8 ]
cmp [ edi ] 0x0
jne r-xdata
push ebx
call sub_40659b
test eax eax
pop ecx
jne r-xdata
push ebx
call sub_406561
push edi
call sub_406561
lea eax [ esi + 0xc ]
cmp [ eax ] 0x0
pop ecx
pop ecx
mov [ esi + 0x10 ] 0x0
je r-xdata
push edi
call sub_40659b
test eax eax
pop ecx
jne r-xdata
pop esi
pop ebx
retn
push esi
push sub_40f190
push eax
call sub_4064fe
add esp 0xc
xor eax eax
jmp r-xdata
pop edi
sub_40f22f
push ebx
push esi
mov esi ecx
lea ebx [ esi + 0x4 ]
cmp [ ebx ] 0x0
push edi
mov [ esi ] r--data
mov [ esi + 0x10 ] 0x1
je r-xdata
lea edi [ esi + 0xc ]
mov eax [ edi ]
test eax eax
je r-xdata
push ebx
call sub_40654d
pop ecx
push edi
call sub_4064ce
add esi 0x8
push esi
call sub_4064ce
push ebx
call sub_4064ce
add esp 0xc
pop edi
pop esi
pop ebx
retn
push eax
call sub_4064f1
pop ecx
sub_40f290
push ebp
mov ebp esp
push ebx
push edi
mov edi [ ebp + 0x8 ]
xor ebx ebx
cmp [ edi + 0xc ] ebx
jne r-xdata
push esi
lea esi [ edi + 0x10 ]
mov [ esi ] ebx
mov [ esi + 0x4 ] ebx
mov ebx [ ebp + 0x18 ]
push 0x20000
call sub_402482
cmp eax ebx
pop ecx
mov [ edi + 0xc ] eax
jne r-xdata
mov eax [ ebp + 0xc ]
mov eax [ eax ]
lea ecx [ ebp + 0x8 ]
push ecx
push edx
push [ edi + 0xc ]
push [ ebp + 0xc ]
call [ eax + 0xc ]
test eax eax
jne r-xdata
mov ecx [ ebx ]
sub ecx [ esi ]
mov eax [ ebx + 0x4 ]
sbb eax [ esi + 0x4 ]
test eax eax
ja r-xdata
mov eax 0x8007000e
jmp r-xdata
pop esi
cmp [ ebp + 0x8 ] eax
je r-xdata
jb r-xdata
pop edi
pop ebx
pop ebp
retn 0x18
xor eax eax
cmp [ ebp + 0x10 ] eax
je r-xdata
mov edx [ ebx ]
sub edx [ esi ]
mov [ ebp + 0x8 ] edx
cmp ecx edx
jae r-xdata
mov eax [ ebp + 0x8 ]
add [ esi ] eax
adc [ esi + 0x4 ] 0x0
cmp [ ebp + 0x1c ] 0x0
je r-xdata
push [ ebp + 0x8 ]
push [ edi + 0xc ]
push [ ebp + 0x10 ]
call sub_40f143
add esp 0xc
test eax eax
jne r-xdata
test ebx ebx
mov edx 0x20000
mov [ ebp + 0x8 ] edx
je r-xdata
mov eax [ ebp + 0x1c ]
mov ecx [ eax ]
push esi
push esi
push eax
call [ ecx + 0xc ]
test eax eax
je r-xdata
jmp r-xdata
sub_40f36f
push ebp
mov ebp esp
push r--data
push [ ebp + 0xc ]
call sub_401459
test eax eax
pop ecx
pop ecx
je r-xdata
push r--data
push [ ebp + 0xc ]
call sub_401459
test eax eax
pop ecx
pop ecx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx eax
neg ecx
lea edx [ eax + 0x4 ]
sbb ecx ecx
and ecx edx
mov edx [ ebp + 0x10 ]
mov [ edx ] ecx
mov ecx [ eax ]
push eax
call [ ecx + 0x4 ]
xor eax eax
jmp r-xdata
mov eax 0x80004002
pop ebp
retn 0xc
sub_40f3ed
push esi
mov esi [ esp + 0x8 ]
dec [ esi + 0x8 ]
mov eax [ esi + 0x8 ]
jne r-xdata
pop esi
retn 0x4
mov ecx esi
call sub_40f279
push esi
call ??3@YAXPAX@Z
pop ecx
xor eax eax
sub_40f42e
sub eax 0x0
je r-xdata
xor eax eax
retn
dec eax
je r-xdata
xor eax eax
inc eax
retn
dec eax
je r-xdata
mov eax 0x8007000e
retn
dec eax
dec eax
je r-xdata
mov eax 0x80004001
retn
dec eax
je r-xdata
mov eax 0x80070057
retn
mov eax 0x80004005
retn
sub_40f485
push esi
mov esi ecx
mov eax [ esi + 0x14 ]
test eax eax
je r-xdata
push eax
call sub_401b42
push [ esi + 0xb4 ]
call sub_4024a5
test eax eax
pop ecx
pop ecx
mov [ esi + 0x14 ] eax
jne r-xdata
mov ecx [ esi + 0xb4 ]
cmp ecx [ esi + 0xb0 ]
je r-xdata
mov eax [ esi + 0xb4 ]
mov [ esi + 0xb0 ] eax
mov eax 0x8007000e
pop esi
retn
xor eax eax
pop esi
retn
sub_40f4ce
push ebp
mov ebp esp
sub esp 0x58
mov eax [ edx + 0x10 ]
mov [ ebp - 0x1c ] eax
mov eax [ edx + 0x34 ]
mov ecx [ edx + 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ edx + 0x38 ]
mov [ ebp - 0x24 ] eax
mov eax [ edx + 0x3c ]
mov [ ebp - 0x34 ] eax
mov eax [ edx + 0x40 ]
mov [ ebp - 0x38 ] eax
mov eax [ edx + 0x44 ]
mov [ ebp - 0x44 ] eax
xor eax eax
inc eax
push ebx
push esi
push edi
mov edi eax
shl edi cl
mov ecx [ edx + 0x4 ]
shl eax cl
mov ebx [ edx + 0x18 ]
mov esi [ edx + 0x1c ]
dec edi
dec eax
and [ ebp - 0x28 ] 0x0
mov [ ebp - 0x54 ] eax
mov eax [ edx ]
mov [ ebp - 0x4c ] eax
mov eax [ edx + 0x14 ]
mov [ ebp - 0x3c ] eax
mov eax [ edx + 0x28 ]
mov [ ebp - 0x30 ] eax
mov eax [ edx + 0x24 ]
mov [ ebp - 0x14 ] eax
mov eax [ edx + 0x2c ]
mov [ ebp - 0x20 ] eax
mov eax [ edx + 0x30 ]
mov [ ebp - 0x40 ] eax
mov eax [ edx + 0x20 ]
mov [ ebp - 0x58 ] edi
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] eax
mov ebx esi
shr ebx 0xb
imul ebx ecx
cmp [ ebp - 0x4 ] ebx
jae r-xdata
mov edi [ ebp - 0x4 ]
movzx ebx [ ebx ]
shl edi 0x8
or edi ebx
shl esi 0x8
inc [ ebp - 0x8 ]
mov [ ebp - 0x4 ] edi
mov edi [ ebp - 0x10 ]
sub [ ebp - 0x4 ] ebx
mov edi ecx
shr edi 0x5
sub ecx edi
mov edi [ ebp - 0x10 ]
mov [ edi ] cx
mov ecx [ ebp - 0xc ]
mov edi [ ebp - 0x1c ]
sub esi ebx
cmp esi 0x1000000
lea edi [ edi + ecx * 2 + 0x180 ]
movzx ecx [ edi ]
mov [ ebp - 0x10 ] edi
jae r-xdata
mov eax 0x800
sub eax ecx
mov esi ebx
mov ebx [ ebp - 0x1c ]
shr eax 0x5
add eax ecx
add ebx 0xe6c
cmp [ ebp - 0x40 ] 0x0
mov [ edi ] ax
mov [ ebp - 0x10 ] ebx
jne r-xdata
mov ebx esi
shr ebx 0xb
imul ebx ecx
cmp [ ebp - 0x4 ] ebx
jae r-xdata
mov ebx [ ebp - 0x8 ]
mov edi [ ebp - 0x4 ]
movzx ebx [ ebx ]
shl edi 0x8
or edi ebx
shl esi 0x8
inc [ ebp - 0x8 ]
mov [ ebp - 0x4 ] edi
mov edi [ ebp - 0x10 ]
mov eax [ ebp - 0x14 ]
test eax eax
jne r-xdata
cmp [ ebp - 0x20 ] 0x0
je r-xdata
sub [ ebp - 0x4 ] ebx
mov edi ecx
shr edi 0x5
sub ecx edi
mov edi [ ebp - 0x10 ]
sub esi ebx
cmp [ ebp - 0x40 ] 0x0
mov [ edi ] cx
jne r-xdata
add [ ebp - 0xc ] 0xc
mov esi ebx
mov ebx 0x800
sub ebx ecx
shr ebx 0x5
add ebx ecx
mov ecx [ ebp - 0x1c ]
mov [ edi ] bx
add ecx 0x664
jmp r-xdata
mov ecx [ ebp - 0x3c ]
movzx eax [ eax + ecx - 0x1 ]
mov edi [ ebp - 0x20 ]
and edi [ ebp - 0x54 ]
push 0x8
pop ecx
sub cl [ ebp - 0x4c ]
shr eax cl
mov ecx [ ebp - 0x4c ]
shl edi cl
add eax edi
imul eax eax 0x600
add ebx eax
mov [ ebp - 0x10 ] ebx
mov eax [ ebp - 0x30 ]
cmp [ ebp - 0xc ] 0x7
jae r-xdata
cmp esi 0x1000000
mov ecx [ ebp - 0xc ]
mov edi [ ebp - 0x1c ]
lea ecx [ edi + ecx * 2 + 0x198 ]
mov [ ebp - 0x10 ] ecx
movzx ecx [ ecx ]
jae r-xdata
cmp [ ebp - 0x20 ] 0x0
je r-xdata
cmp esi 0x1000000
movzx edi [ ecx ]
mov [ ebp - 0x18 ] edi
jae r-xdata
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x24 ]
mov [ ebp - 0x2c ] 0x100
sbb ecx ecx
and ecx [ ebp - 0x30 ]
sub ecx [ ebp - 0x24 ]
add ecx [ edx + 0x14 ]
cmp [ ebp - 0xc ] 0xa
movzx eax [ ecx + eax ]
mov [ ebp - 0x48 ] eax
sbb eax eax
and eax 0xfffffffd
add eax 0x6
sub [ ebp - 0xc ] eax
xor ecx ecx
inc ecx
jmp r-xdata
cmp [ ebp - 0xc ] 0x4
jae r-xdata
mov edi esi
shr edi 0xb
imul edi ecx
cmp [ ebp - 0x4 ] edi
jae r-xdata
mov ebx [ ebp - 0x8 ]
mov edi [ ebp - 0x4 ]
movzx ebx [ ebx ]
shl edi 0x8
or edi ebx
shl esi 0x8
inc [ ebp - 0x8 ]
mov [ ebp - 0x4 ] edi
xor eax eax
inc eax
jmp r-xdata
mov edi esi
shr edi 0xb
imul edi [ ebp - 0x18 ]
cmp [ ebp - 0x4 ] edi
jae r-xdata
mov ebx [ ebp - 0x8 ]
mov edi [ ebp - 0x4 ]
movzx ebx [ ebx ]
shl edi 0x8
or edi ebx
shl esi 0x8
inc [ ebp - 0x8 ]
mov [ ebp - 0x4 ] edi
shl [ ebp - 0x48 ] 0x1
mov edi [ ebp - 0x2c ]
and edi [ ebp - 0x48 ]
mov eax [ ebp - 0x2c ]
add eax edi
add eax ecx
cmp esi 0x1000000
lea ebx [ ebx + eax * 2 ]
movzx eax [ ebx ]
mov [ ebp - 0x50 ] ebx
mov [ ebp - 0x18 ] eax
jae r-xdata
push 0x3
pop eax
mov eax [ ebp - 0xc ]
jmp r-xdata
sub [ ebp - 0x4 ] edi
sub esi edi
mov edi ecx
shr edi 0x5
sub ecx edi
cmp esi 0x1000000
mov edi [ ebp - 0x10 ]
mov [ edi ] cx
mov ecx [ ebp - 0xc ]
mov edi [ ebp - 0x1c ]
lea edi [ edi + ecx * 2 + 0x1b0 ]
movzx ecx [ edi ]
mov [ ebp - 0x10 ] edi
jae r-xdata
mov ebx 0x800
sub ebx ecx
shr ebx 0x5
add ebx ecx
mov ecx [ ebp - 0x10 ]
mov [ ecx ] bx
mov ecx [ ebp - 0xc ]
mov ebx [ ebp - 0x1c ]
add ecx 0xf
shl ecx 0x4
add ecx eax
cmp edi 0x1000000
lea ecx [ ebx + ecx * 2 ]
movzx ebx [ ecx ]
mov esi edi
mov [ ebp - 0x18 ] ebx
jae r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x8
sub [ ebp - 0x4 ] edi
sub esi edi
mov edi [ ebp - 0x18 ]
mov ebx edi
shr ebx 0x5
sub edi ebx
cmp esi 0x1000000
mov [ ecx ] di
movzx edi [ ecx + 0x2 ]
jae r-xdata
mov esi edi
mov edi 0x800
sub edi [ ebp - 0x18 ]
shl eax 0x4
shr edi 0x5
add edi [ ebp - 0x18 ]
and [ ebp - 0x2c ] 0x0
mov [ ecx ] di
lea ecx [ eax + ecx + 0x4 ]
mov [ ebp - 0x28 ] 0x8
jmp r-xdata
mov eax esi
shr eax 0xb
imul eax [ ebp - 0x18 ]
cmp [ ebp - 0x4 ] eax
jae r-xdata
mov ebx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
movzx ebx [ ebx ]
shl eax 0x8
or eax ebx
shl esi 0x8
inc [ ebp - 0x8 ]
mov [ ebp - 0x4 ] eax
mov edi esi
shr edi 0xb
imul edi eax
cmp [ ebp - 0x4 ] edi
jae r-xdata
mov ebx [ ebp - 0x8 ]
mov edi [ ebp - 0x4 ]
movzx ebx [ ebx ]
shl edi 0x8
or edi ebx
mov ebx [ ebp - 0x10 ]
shl esi 0x8
inc [ ebp - 0x8 ]
mov [ ebp - 0x4 ] edi
sub [ ebp - 0xc ] eax
xor ecx ecx
inc ecx
mov ebx esi
shr ebx 0xb
imul ebx ecx
cmp [ ebp - 0x4 ] ebx
jae r-xdata
mov ebx [ ebp - 0x8 ]
mov edi [ ebp - 0x4 ]
movzx ebx [ ebx ]
shl edi 0x8
or edi ebx
shl esi 0x8
inc [ ebp - 0x8 ]
mov [ ebp - 0x4 ] edi
mov edi [ ebp - 0x10 ]
mov edi esi
shr edi 0xb
imul edi [ ebp - 0x18 ]
cmp [ ebp - 0x4 ] edi
jae r-xdata
mov ebx [ ebp - 0x8 ]
movzx ebx [ ebx ]
shl edi 0x8
mov esi edi
mov edi [ ebp - 0x4 ]
shl edi 0x8
or edi ebx
inc [ ebp - 0x8 ]
mov [ ebp - 0x4 ] edi
mov ebx esi
shr ebx 0xb
imul ebx edi
cmp [ ebp - 0x4 ] ebx
jae r-xdata
mov ebx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
movzx ebx [ ebx ]
shl eax 0x8
or eax ebx
shl esi 0x8
inc [ ebp - 0x8 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x50 ]
xor edi edi
inc edi
sub [ ebp - 0x4 ] eax
sub esi eax
mov eax [ ebp - 0x18 ]
mov ebx eax
shr ebx 0x5
sub eax ebx
lea ecx [ ecx + ecx + 0x1 ]
mov esi eax
mov eax 0x800
sub eax [ ebp - 0x18 ]
not edi
shr eax 0x5
add eax [ ebp - 0x18 ]
add ecx ecx
jmp r-xdata
sub [ ebp - 0x4 ] edi
mov ebx [ ebp - 0x10 ]
sub esi edi
mov edi eax
shr edi 0x5
sub eax edi
mov [ ecx + ebx ] ax
inc ecx
mov esi edi
mov edi 0x800
sub edi eax
shr edi 0x5
add edi eax
mov [ ecx + ebx ] di
jmp r-xdata
sub [ ebp - 0x4 ] ebx
mov edi ecx
shr edi 0x5
sub ecx edi
mov edi [ ebp - 0x10 ]
mov [ edi ] cx
mov ecx [ ebp - 0xc ]
mov edi [ ebp - 0x1c ]
sub esi ebx
cmp esi 0x1000000
lea edi [ edi + ecx * 2 + 0x1c8 ]
movzx ecx [ edi ]
mov [ ebp - 0x10 ] edi
jae r-xdata
mov esi ebx
mov ebx 0x800
sub ebx ecx
shr ebx 0x5
add ebx ecx
mov ecx [ ebp - 0x34 ]
mov [ edi ] bx
jmp r-xdata
sub [ ebp - 0x4 ] edi
sub esi edi
mov edi [ ebp - 0x18 ]
mov ebx edi
shr ebx 0x5
sub edi ebx
mov [ ecx ] di
jmp r-xdata
mov eax 0x800
sub eax [ ebp - 0x18 ]
mov esi edi
mov edi [ ebp - 0x14 ]
shr eax 0x5
add eax [ ebp - 0x18 ]
cmp edi [ ebp - 0x24 ]
mov [ ecx ] ax
mov eax [ ebp - 0x3c ]
sbb ecx ecx
and ecx [ ebp - 0x30 ]
sub ecx [ ebp - 0x24 ]
add ecx edi
mov cl [ ecx + eax ]
mov [ edi + eax ] cl
inc edi
inc [ ebp - 0x20 ]
cmp [ ebp - 0xc ] 0x7
mov [ ebp - 0x14 ] edi
sbb eax eax
and eax 0xfffffffe
add eax 0xb
mov [ ebp - 0xc ] eax
jmp r-xdata
sub [ ebp - 0x4 ] ebx
mov eax edi
shr eax 0x5
sub edi eax
sub esi ebx
mov [ ecx + 0x2 ] di
add ecx 0x204
mov [ ebp - 0x2c ] 0x10
mov [ ebp - 0x28 ] 0x100
mov esi ebx
mov ebx 0x800
sub ebx edi
shr ebx 0x5
add ebx edi
shl eax 0x4
mov [ ecx + 0x2 ] bx
push 0x8
lea ecx [ eax + ecx + 0x104 ]
pop eax
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x28 ] eax
jmp r-xdata
mov ebx esi
shr ebx 0xb
imul ebx edi
cmp [ ebp - 0x4 ] ebx
jae r-xdata
mov ebx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
movzx ebx [ ebx ]
shl eax 0x8
or eax ebx
shl esi 0x8
inc [ ebp - 0x8 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x50 ]
mov ebx [ ebp - 0x10 ]
mov edi [ ebp - 0x14 ]
mov eax [ ebp - 0x3c ]
inc [ ebp - 0x14 ]
inc [ ebp - 0x20 ]
mov [ edi + eax ] cl
jmp r-xdata
mov ebx [ ebp - 0x50 ]
and [ ebp - 0x2c ] edi
cmp ecx 0x100
mov [ ebx ] ax
jb r-xdata
add ecx ecx
cmp esi 0x1000000
movzx eax [ ecx + ebx ]
jae r-xdata
jmp r-xdata
cmp ecx 0x100
jb r-xdata
mov ebx esi
shr ebx 0xb
imul ebx ecx
cmp [ ebp - 0x4 ] ebx
jae r-xdata
mov ebx [ ebp - 0x8 ]
mov edi [ ebp - 0x4 ]
movzx ebx [ ebx ]
shl edi 0x8
or edi ebx
shl esi 0x8
inc [ ebp - 0x8 ]
mov [ ebp - 0x4 ] edi
mov edi [ ebp - 0x10 ]
mov edi [ ebp - 0x24 ]
mov [ ebp - 0x34 ] edi
mov [ ebp - 0x24 ] ecx
cmp [ ebp - 0xc ] 0x7
sbb ecx ecx
and ecx 0xfffffffd
add ecx 0xb
mov [ ebp - 0xc ] ecx
mov ecx [ ebp - 0x1c ]
add ecx 0xa68
mov eax [ ebp - 0x14 ]
cmp eax [ ebp + 0x8 ]
jae r-xdata
sub [ ebp - 0x4 ] ebx
mov eax edi
shr eax 0x5
sub esi ebx
sub edi eax
mov eax [ ebp - 0x50 ]
mov [ eax + ecx ] di
lea edi [ eax + 0x1 ]
mov esi ebx
mov ebx 0x800
sub ebx edi
shr ebx 0x5
add ebx edi
mov [ eax + ecx ] bx
mov edi eax
jmp r-xdata
sub [ ebp - 0x4 ] ebx
mov edi ecx
shr edi 0x5
sub esi ebx
sub ecx edi
mov edi [ ebp - 0x10 ]
mov [ edi ] cx
mov edi [ ebp - 0x38 ]
mov ecx [ ebp - 0x44 ]
mov [ ebp - 0x44 ] edi
mov esi ebx
mov ebx 0x800
sub ebx ecx
shr ebx 0x5
add ebx ecx
mov ecx [ ebp - 0x38 ]
mov [ edi ] bx
jmp r-xdata
cmp esi 0x1000000
mov eax [ ebp - 0x8 ]
jae r-xdata
mov ebx [ ebp - 0x8 ]
cmp ebx [ ebp + 0xc ]
jae r-xdata
cmp esi 0x1000000
lea eax [ edi + edi ]
movzx edi [ eax + ecx ]
mov [ ebp - 0x50 ] eax
jae r-xdata
sub eax [ ebp - 0x28 ]
add edi eax
cmp [ ebp - 0xc ] 0xc
mov [ ebp - 0x28 ] edi
jb r-xdata
cmp edi [ ebp - 0x28 ]
mov eax [ ebp - 0x2c ]
jb r-xdata
mov edi [ ebp - 0x34 ]
mov [ ebp - 0x38 ] edi
mov [ edx + 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ edx + 0x20 ] eax
mov eax [ ebp - 0x28 ]
mov [ edx + 0x48 ] eax
mov eax [ ebp - 0x14 ]
mov [ edx + 0x24 ] eax
mov eax [ ebp - 0x20 ]
mov [ edx + 0x2c ] eax
mov eax [ ebp - 0x24 ]
mov [ edx + 0x38 ] eax
mov eax [ ebp - 0x34 ]
mov [ edx + 0x3c ] eax
mov eax [ ebp - 0x38 ]
mov [ edx + 0x40 ] eax
mov eax [ ebp - 0x44 ]
mov [ edx + 0x44 ] eax
mov eax [ ebp - 0xc ]
mov [ edx + 0x34 ] eax
mov [ edx + 0x1c ] esi
xor eax eax
mov ecx [ ebp - 0x4 ]
movzx edi [ eax ]
shl ecx 0x8
or ecx edi
shl esi 0x8
mov [ ebp - 0x4 ] ecx
inc eax
mov edi [ ebp - 0x58 ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x14 ]
inc edi
inc edi
cmp eax ecx
je r-xdata
cmp edi 0x4
jae r-xdata
mov eax [ ebp - 0x20 ]
mov ecx [ ebp - 0xc ]
and eax edi
mov edi [ ebp - 0x1c ]
shl ecx 0x4
add ecx eax
cmp esi 0x1000000
lea edi [ edi + ecx * 2 ]
movzx ecx [ edi ]
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x10 ] edi
jae r-xdata
sub eax ecx
cmp eax edi
jae r-xdata
push 0x3
pop ecx
mov ecx edi
jmp r-xdata
mov eax edi
mov [ ebp - 0x48 ] edi
mov [ ebp - 0x48 ] eax
jmp r-xdata
mov edi esi
shr edi 0xb
imul edi eax
cmp [ ebp - 0x4 ] edi
jae r-xdata
mov ebx [ ebp - 0x8 ]
mov edi [ ebp - 0x4 ]
movzx ebx [ ebx ]
shl edi 0x8
or edi ebx
shl esi 0x8
inc [ ebp - 0x8 ]
mov [ ebp - 0x4 ] edi
mov eax [ ebp - 0x1c ]
shl ecx 0x7
cmp esi 0x1000000
lea ecx [ ecx + eax + 0x360 ]
movzx eax [ ecx + 0x2 ]
jae r-xdata
mov ebx [ ebp - 0x14 ]
mov al [ ecx + edi ]
inc [ ebp - 0x14 ]
inc ecx
cmp ecx [ ebp - 0x30 ]
mov [ ebx + edi ] al
jne r-xdata
mov ebx [ ebp - 0x14 ]
sub ecx ebx
add edi ebx
add [ ebp - 0x14 ] eax
mov [ ebp - 0x50 ] ecx
lea ebx [ edi + eax ]
cmp ecx [ ebp - 0x24 ]
sbb ecx ecx
and ecx [ ebp - 0x30 ]
add [ ebp - 0x20 ] eax
sub ecx [ ebp - 0x24 ]
sub edi eax
add ecx [ ebp - 0x14 ]
mov [ ebp - 0x28 ] edi
lea edi [ ecx + eax ]
cmp edi [ ebp - 0x30 ]
mov edi [ ebp - 0x3c ]
ja r-xdata
sub [ ebp - 0x4 ] edi
sub esi edi
mov edi eax
shr edi 0x5
sub eax edi
mov [ ecx + 0x2 ] ax
push 0x3
mov esi edi
mov edi 0x800
sub edi eax
shr edi 0x5
add edi eax
mov [ ecx + 0x2 ] di
push 0x2
jmp r-xdata
dec [ ebp - 0x48 ]
jne r-xdata
xor ecx ecx
mov eax [ ebp - 0x50 ]
mov al [ eax + edi ]
mov [ edi ] al
inc edi
cmp edi ebx
jne r-xdata
jmp r-xdata
mov edi esi
shr edi 0xb
imul edi eax
cmp [ ebp - 0x4 ] edi
jae r-xdata
mov ebx [ ebp - 0x8 ]
mov edi [ ebp - 0x4 ]
movzx ebx [ ebx ]
shl edi 0x8
or edi ebx
mov ebx [ ebp - 0x18 ]
shl esi 0x8
inc [ ebp - 0x8 ]
mov [ ebp - 0x4 ] edi
cmp esi 0x1000000
pop eax
lea ebx [ eax + eax ]
movzx eax [ ebx + ecx ]
mov [ ebp - 0x18 ] ebx
jae r-xdata
sub [ ebp - 0x4 ] edi
sub esi edi
mov edi eax
shr edi 0x5
sub eax edi
mov edi [ ebp - 0x18 ]
mov [ edi + ecx ] ax
inc edi
mov esi edi
mov edi 0x800
sub edi eax
shr edi 0x5
add edi eax
mov [ ebx + ecx ] di
mov edi ebx
jmp r-xdata
mov edi esi
shr edi 0xb
imul edi eax
cmp [ ebp - 0x4 ] edi
jae r-xdata
mov ebx [ ebp - 0x8 ]
mov edi [ ebp - 0x4 ]
movzx ebx [ ebx ]
shl edi 0x8
or edi ebx
mov ebx [ ebp - 0x18 ]
shl esi 0x8
inc [ ebp - 0x8 ]
mov [ ebp - 0x4 ] edi
cmp esi 0x1000000
lea ebx [ edi + edi ]
movzx eax [ ebx + ecx ]
mov [ ebp - 0x18 ] ebx
jae r-xdata
sub [ ebp - 0x4 ] edi
sub esi edi
mov edi eax
shr edi 0x5
sub eax edi
mov edi [ ebp - 0x18 ]
mov [ edi + ecx ] ax
inc edi
mov esi edi
mov edi 0x800
sub edi eax
shr edi 0x5
add edi eax
mov [ ebx + ecx ] di
mov edi ebx
jmp r-xdata
mov edi esi
shr edi 0xb
imul edi eax
cmp [ ebp - 0x4 ] edi
jae r-xdata
mov ebx [ ebp - 0x8 ]
mov edi [ ebp - 0x4 ]
movzx ebx [ ebx ]
shl edi 0x8
or edi ebx
mov ebx [ ebp - 0x18 ]
shl esi 0x8
inc [ ebp - 0x8 ]
mov [ ebp - 0x4 ] edi
cmp esi 0x1000000
lea ebx [ edi + edi ]
movzx eax [ ebx + ecx ]
mov [ ebp - 0x18 ] ebx
jae r-xdata
sub [ ebp - 0x4 ] edi
sub esi edi
mov edi eax
shr edi 0x5
sub eax edi
mov edi [ ebp - 0x18 ]
mov [ edi + ecx ] ax
inc edi
mov esi edi
mov edi 0x800
sub edi eax
shr edi 0x5
add edi eax
mov [ ebx + ecx ] di
mov edi ebx
jmp r-xdata
mov ebx esi
shr ebx 0xb
imul ebx eax
cmp [ ebp - 0x4 ] ebx
jae r-xdata
mov ebx [ ebp - 0x8 ]
mov edi [ ebp - 0x4 ]
movzx ebx [ ebx ]
shl edi 0x8
or edi ebx
shl esi 0x8
inc [ ebp - 0x8 ]
mov [ ebp - 0x4 ] edi
mov edi [ ebp - 0x18 ]
add edi edi
cmp esi 0x1000000
movzx eax [ edi + ecx ]
mov [ ebp - 0x18 ] edi
jae r-xdata
sub [ ebp - 0x4 ] ebx
mov edi eax
shr edi 0x5
sub eax edi
mov edi [ ebp - 0x18 ]
sub esi ebx
mov [ edi + ecx ] ax
inc edi
mov esi ebx
mov ebx 0x800
sub ebx eax
shr ebx 0x5
add ebx eax
mov [ edi + ecx ] bx
jmp r-xdata
mov edi esi
shr edi 0xb
imul edi eax
cmp [ ebp - 0x4 ] edi
jae r-xdata
mov ebx [ ebp - 0x8 ]
mov edi [ ebp - 0x4 ]
movzx ebx [ ebx ]
shl edi 0x8
or edi ebx
mov ebx [ ebp - 0x18 ]
shl esi 0x8
inc [ ebp - 0x8 ]
mov [ ebp - 0x4 ] edi
lea ebx [ edi + edi ]
add ecx ebx
cmp esi 0x1000000
movzx eax [ ecx ]
mov [ ebp - 0x18 ] ebx
jae r-xdata
sub [ ebp - 0x4 ] edi
sub esi edi
mov edi eax
shr edi 0x5
sub eax edi
mov [ ecx ] ax
mov eax [ ebp - 0x18 ]
inc eax
mov esi edi
mov edi 0x800
sub edi eax
shr edi 0x5
add edi eax
mov [ ecx ] di
mov eax ebx
jmp r-xdata
cmp [ ebp - 0x40 ] 0x0
mov ecx [ ebp - 0x38 ]
mov edi [ ebp - 0x28 ]
mov [ ebp - 0x44 ] ecx
mov ecx [ ebp - 0x34 ]
mov [ ebp - 0x38 ] ecx
mov ecx [ ebp - 0x24 ]
mov [ ebp - 0x34 ] ecx
lea ecx [ eax + 0x1 ]
mov [ ebp - 0x24 ] ecx
jne r-xdata
xor edi edi
inc edi
mov ecx eax
mov ebx eax
shr ecx 0x1
and ebx edi
dec ecx
or ebx 0x2
cmp eax 0xe
mov [ ebp - 0x50 ] ecx
jae r-xdata
sub eax 0x40
cmp eax 0x4
jb r-xdata
cmp eax [ ebp - 0x40 ]
cmp eax [ ebp - 0x20 ]
jmp r-xdata
sub ecx 0x4
shl ebx cl
mov [ ebp - 0x48 ] edi
mov [ ebp - 0x18 ] ebx
sub ebx eax
mov eax [ ebp - 0x1c ]
lea ecx [ eax + ebx * 2 + 0x55e ]
mov [ ebp - 0x10 ] ecx
cmp [ ebp - 0xc ] 0x13
sbb eax eax
and eax 0xfffffffd
add eax 0xa
mov [ ebp - 0xc ] eax
jae r-xdata
shr esi 0x1
sub [ ebp - 0x4 ] esi
mov eax [ ebp - 0x4 ]
shr eax 0x1f
neg eax
lea ebx [ eax + ebx * 2 + 0x1 ]
and eax esi
add [ ebp - 0x4 ] eax
dec ecx
jne r-xdata
mov edi [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
movzx edi [ edi ]
shl eax 0x8
or eax edi
shl esi 0x8
inc [ ebp - 0x8 ]
mov [ ebp - 0x4 ] eax
mov ebx esi
shr ebx 0xb
imul ebx eax
cmp [ ebp - 0x4 ] ebx
jae r-xdata
mov ebx [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
movzx ebx [ ebx ]
shl ecx 0x8
or ecx ebx
shl esi 0x8
inc [ ebp - 0x8 ]
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x10 ]
cmp esi 0x1000000
jae r-xdata
mov ecx [ ebp - 0x1c ]
movzx eax [ ecx + 0x646 ]
shl ebx 0x4
cmp esi 0x1000000
mov [ ebp - 0x18 ] ebx
jae r-xdata
sub [ ebp - 0x4 ] ebx
mov ecx eax
shr ecx 0x5
sub eax ecx
mov ecx [ ebp - 0x10 ]
mov [ edi + ecx ] ax
mov eax [ ebp - 0x18 ]
sub esi ebx
inc edi
or eax [ ebp - 0x48 ]
mov [ ebp - 0x18 ] eax
mov esi ebx
mov ebx 0x800
sub ebx eax
shr ebx 0x5
add ebx eax
mov eax [ ebp - 0x18 ]
mov [ edi + ecx ] bx
jmp r-xdata
mov edi esi
shr edi 0xb
imul edi eax
cmp [ ebp - 0x4 ] edi
jae r-xdata
mov ebx [ ebp - 0x8 ]
mov edi [ ebp - 0x4 ]
movzx ebx [ ebx ]
shl edi 0x8
or edi ebx
shl esi 0x8
inc [ ebp - 0x8 ]
mov [ ebp - 0x4 ] edi
add edi edi
cmp esi 0x1000000
movzx eax [ edi + ecx ]
jae r-xdata
jmp r-xdata
shl [ ebp - 0x48 ] 0x1
dec [ ebp - 0x50 ]
jne r-xdata
sub [ ebp - 0x4 ] edi
sub esi edi
mov edi eax
shr edi 0x5
sub eax edi
or [ ebp - 0x18 ] 0x1
mov [ ecx + 0x646 ] ax
push 0x3
mov esi edi
mov edi 0x800
sub edi eax
shr edi 0x5
add edi eax
mov [ ecx + 0x646 ] di
push 0x2
jmp r-xdata
mov edi esi
shr edi 0xb
imul edi eax
cmp [ ebp - 0x4 ] edi
jae r-xdata
mov ebx [ ebp - 0x8 ]
mov edi [ ebp - 0x4 ]
movzx ebx [ ebx ]
shl edi 0x8
or edi ebx
mov ebx [ ebp - 0x2c ]
shl esi 0x8
inc [ ebp - 0x8 ]
mov [ ebp - 0x4 ] edi
cmp esi 0x1000000
pop eax
lea ebx [ eax + eax ]
lea ecx [ ebx + ecx + 0x644 ]
movzx eax [ ecx ]
mov [ ebp - 0x2c ] ebx
jae r-xdata
sub [ ebp - 0x4 ] edi
sub esi edi
mov edi eax
shr edi 0x5
sub eax edi
mov [ ecx ] ax
mov eax [ ebp - 0x2c ]
inc eax
or [ ebp - 0x18 ] 0x2
mov esi edi
mov edi 0x800
sub edi eax
shr edi 0x5
add edi eax
mov [ ecx ] di
mov eax ebx
jmp r-xdata
mov edi esi
shr edi 0xb
imul edi eax
cmp [ ebp - 0x4 ] edi
jae r-xdata
mov ebx [ ebp - 0x8 ]
mov edi [ ebp - 0x4 ]
movzx ebx [ ebx ]
shl edi 0x8
or edi ebx
mov ebx [ ebp - 0x2c ]
shl esi 0x8
inc [ ebp - 0x8 ]
mov [ ebp - 0x4 ] edi
cmp esi 0x1000000
lea ebx [ eax + eax ]
mov eax [ ebp - 0x1c ]
lea ecx [ ebx + eax + 0x644 ]
movzx eax [ ecx ]
mov [ ebp - 0x2c ] ebx
jae r-xdata
sub [ ebp - 0x4 ] edi
sub esi edi
mov edi eax
shr edi 0x5
sub eax edi
mov [ ecx ] ax
mov eax [ ebp - 0x2c ]
inc eax
or [ ebp - 0x18 ] 0x4
mov esi edi
mov edi 0x800
sub edi eax
shr edi 0x5
add edi eax
mov [ ecx ] di
mov eax ebx
jmp r-xdata
mov edi esi
shr edi 0xb
imul edi eax
cmp [ ebp - 0x4 ] edi
jae r-xdata
mov ebx [ ebp - 0x8 ]
mov edi [ ebp - 0x4 ]
movzx ebx [ ebx ]
shl edi 0x8
or edi ebx
shl esi 0x8
inc [ ebp - 0x8 ]
mov [ ebp - 0x4 ] edi
cmp esi 0x1000000
mov ecx [ ebp - 0x1c ]
lea ecx [ ecx + eax * 2 + 0x644 ]
movzx eax [ ecx ]
jae r-xdata
sub [ ebp - 0x4 ] edi
sub esi edi
mov edi eax
shr edi 0x5
sub eax edi
mov [ ecx ] ax
mov eax [ ebp - 0x18 ]
or eax 0x8
mov esi edi
mov edi 0x800
sub edi eax
shr edi 0x5
add edi eax
mov eax [ ebp - 0x18 ]
mov [ ecx ] di
jmp r-xdata
add [ ebp - 0x28 ] 0x112
sub [ ebp - 0xc ] 0xc
cmp eax 0xffffffff
je r-xdata
sub_4101a2
push ebp
mov ebp esp
push ecx
push ecx
mov edx [ eax + 0x48 ]
test edx edx
je r-xdata
leave
retn 0x4
cmp edx 0x112
jae r-xdata
mov ecx [ eax + 0x24 ]
push ebx
mov ebx [ eax + 0x38 ]
push esi
mov esi [ eax + 0x28 ]
mov [ ebp - 0x4 ] ebx
mov ebx [ ebp + 0x8 ]
mov [ ebp - 0x8 ] esi
mov esi edx
sub ebx ecx
cmp ebx esi
push edi
mov edi [ eax + 0x14 ]
jae r-xdata
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov esi ebx
add [ eax + 0x2c ] esi
sub edx esi
mov [ eax + 0x48 ] edx
jmp r-xdata
mov ebx [ eax + 0xc ]
sub ebx [ eax + 0x2c ]
cmp ebx esi
ja r-xdata
test esi esi
jne r-xdata
mov ebx [ eax + 0xc ]
mov [ eax + 0x30 ] ebx
dec esi
cmp ecx [ ebp - 0x4 ]
sbb edx edx
and edx [ ebp - 0x8 ]
sub edx [ ebp - 0x4 ]
add edx ecx
mov dl [ edx + edi ]
mov [ ecx + edi ] dl
inc ecx
pop edi
pop esi
mov [ eax + 0x24 ] ecx
pop ebx
sub_41021b
push ebx
mov ebx [ esp + 0x8 ]
push ebx
push edx
mov edx esi
call sub_40f4ce
test eax eax
jne r-xdata
mov eax [ esi + 0xc ]
mov ecx [ esi + 0x24 ]
sub eax [ esi + 0x2c ]
mov ebx edi
sub ebx ecx
cmp ebx eax
jbe r-xdata
pop ebx
retn 0x4
mov eax [ esi + 0xc ]
cmp [ esi + 0x2c ] eax
jb r-xdata
lea edx [ ecx + eax ]
push edi
mov eax esi
call sub_4101a2
cmp [ esi + 0x24 ] edi
jae r-xdata
mov [ esi + 0x30 ] eax
mov eax 0x112
cmp [ esi + 0x18 ] ebx
jae r-xdata
xor eax eax
mov [ esi + 0x48 ] eax
mov eax 0x112
cmp [ esi + 0x48 ] eax
jb r-xdata
cmp [ esi + 0x30 ] 0x0
mov edx edi
jne r-xdata
jmp r-xdata
cmp [ esi + 0x48 ] eax
jbe r-xdata
sub_410285
push ebp
mov ebp esp
sub esp 0x18
mov ecx [ eax + 0x20 ]
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp + 0xc ]
add edx ecx
mov ecx [ eax + 0x8 ]
mov [ ebp + 0xc ] edx
xor edx edx
inc edx
shl edx cl
push ebx
mov ebx [ eax + 0x10 ]
push esi
mov esi [ eax + 0x1c ]
push edi
mov edi [ eax + 0x34 ]
dec edx
and edx [ eax + 0x2c ]
mov ecx edi
shl ecx 0x4
add ecx edx
cmp esi 0x1000000
movzx ecx [ ebx + ecx * 2 ]
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x14 ] ecx
jae r-xdata
mov ecx esi
shr ecx 0xb
imul ecx [ ebp - 0x14 ]
cmp [ ebp - 0x4 ] ecx
jae r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx [ ebp + 0xc ]
jb r-xdata
sub [ ebp - 0x4 ] ecx
sub esi ecx
mov ebx 0x1000000
cmp esi ebx
jae r-xdata
mov esi ecx
mov ecx [ ebp - 0x8 ]
add ecx 0xe6c
cmp [ eax + 0x30 ] 0x0
mov [ ebp - 0xc ] ecx
jne r-xdata
mov ebx [ ebp - 0x4 ]
movzx ecx [ ecx ]
shl ebx 0x8
or ebx ecx
shl esi 0x8
inc [ ebp + 0x8 ]
mov [ ebp - 0x4 ] ebx
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0x8 ]
movzx ecx [ ecx + edi * 2 + 0x180 ]
mov eax esi
shr eax 0xb
imul eax ecx
cmp [ ebp - 0x4 ] eax
jae r-xdata
mov eax [ ebp + 0x8 ]
cmp eax [ ebp + 0xc ]
jae r-xdata
mov ecx [ eax + 0x24 ]
test ecx ecx
jne r-xdata
cmp [ eax + 0x2c ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub [ ebp - 0x4 ] eax
sub esi eax
cmp esi ebx
mov [ ebp - 0x10 ] 0x3
jae r-xdata
mov ecx [ ebp - 0x8 ]
and [ ebp - 0x18 ] 0x0
mov esi eax
add ecx 0x664
mov [ ebp - 0x10 ] 0x2
jmp r-xdata
mov ecx [ ebp - 0x4 ]
movzx eax [ eax ]
shl ecx 0x8
or ecx eax
shl esi 0x8
inc [ ebp + 0x8 ]
mov [ ebp - 0x4 ] ecx
mov ebx [ eax + 0x14 ]
movzx ebx [ ebx + ecx - 0x1 ]
mov edx [ eax ]
push 0x8
pop ecx
sub cl dl
xor edx edx
shr ebx cl
mov ecx [ eax + 0x4 ]
inc edx
shl edx cl
mov ecx [ eax ]
dec edx
and edx [ eax + 0x2c ]
shl edx cl
add ebx edx
imul ebx ebx 0x600
add [ ebp - 0xc ] ebx
mov ecx [ eax + 0x28 ]
cmp edi 0x7
jae r-xdata
mov eax [ ebp - 0x8 ]
movzx eax [ eax + edi * 2 + 0x198 ]
mov ecx esi
shr ecx 0xb
imul ecx eax
cmp [ ebp - 0x4 ] ecx
jae r-xdata
mov eax [ ebp + 0x8 ]
cmp eax [ ebp + 0xc ]
jae r-xdata
cmp esi ebx
jae r-xdata
mov edx [ eax + 0x24 ]
mov edi [ eax + 0x38 ]
cmp edx edi
jae r-xdata
xor ecx ecx
inc ecx
mov ebx 0x1000000
sub [ ebp - 0x4 ] ecx
sub esi ecx
cmp esi ebx
jae r-xdata
mov eax [ ebp - 0x8 ]
add edi 0xf
shl edi 0x4
add edi edx
cmp ecx ebx
movzx edi [ eax + edi * 2 ]
mov esi ecx
jae r-xdata
mov ecx [ ebp - 0x4 ]
movzx eax [ eax ]
shl ecx 0x8
or ecx eax
shl esi 0x8
inc [ ebp + 0x8 ]
mov [ ebp - 0x4 ] ecx
movzx edi [ ecx ]
mov eax esi
shr eax 0xb
imul eax edi
cmp [ ebp - 0x4 ] eax
jae r-xdata
mov eax [ ebp + 0x8 ]
cmp eax [ ebp + 0xc ]
jae r-xdata
xor ecx ecx
mov ecx [ eax + 0x28 ]
jmp r-xdata
mov eax esi
shr eax 0xb
imul eax edx
cmp [ ebp - 0x4 ] eax
jae r-xdata
mov eax [ ebp + 0x8 ]
cmp eax [ ebp + 0xc ]
jae r-xdata
mov ecx [ ebp - 0x8 ]
movzx ecx [ ecx + edi * 2 + 0x1b0 ]
mov eax esi
shr eax 0xb
imul eax ecx
cmp [ ebp - 0x4 ] eax
jb r-xdata
mov eax [ ebp + 0x8 ]
cmp eax [ ebp + 0xc ]
jae r-xdata
mov eax esi
shr eax 0xb
imul eax edi
cmp [ ebp - 0x4 ] eax
jae r-xdata
mov eax [ ebp + 0x8 ]
cmp eax [ ebp + 0xc ]
jae r-xdata
sub [ ebp - 0x4 ] eax
sub esi eax
cmp esi ebx
jae r-xdata
shl edx 0x4
and [ ebp - 0x14 ] 0x0
mov esi eax
lea ecx [ edx + ecx + 0x4 ]
mov [ ebp - 0xc ] 0x8
jmp r-xdata
mov edi [ ebp - 0x4 ]
movzx eax [ eax ]
shl edi 0x8
or edi eax
shl esi 0x8
inc [ ebp + 0x8 ]
mov [ ebp - 0x4 ] edi
mov ecx esi
shr ecx 0xb
imul ecx [ ebp - 0x14 ]
cmp [ ebp - 0x4 ] ecx
jae r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx [ ebp + 0xc ]
jae r-xdata
mov eax [ eax + 0x14 ]
sub eax edi
add eax edx
movzx eax [ eax + ecx ]
xor edx edx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x8 ] 0x100
inc edx
mov ebx 0x1000000
sub [ ebp - 0x4 ] eax
sub esi eax
inc ecx
mov esi eax
jmp r-xdata
mov edi [ ebp - 0x4 ]
movzx eax [ eax ]
shl edi 0x8
or edi eax
shl esi 0x8
inc [ ebp + 0x8 ]
mov [ ebp - 0x4 ] edi
mov esi eax
jmp r-xdata
sub [ ebp - 0x4 ] eax
sub esi eax
cmp esi ebx
mov eax [ ebp - 0x8 ]
movzx ecx [ eax + edi * 2 + 0x1c8 ]
jae r-xdata
mov ecx [ ebp - 0x4 ]
movzx eax [ eax ]
shl ecx 0x8
or ecx eax
shl esi 0x8
inc [ ebp + 0x8 ]
mov [ ebp - 0x4 ] ecx
sub esi eax
sub [ ebp - 0x4 ] eax
cmp eax ebx
jae r-xdata
movzx eax [ eax ]
shl ecx 0x8
mov esi ecx
mov ecx [ ebp - 0x4 ]
shl ecx 0x8
or ecx eax
inc [ ebp + 0x8 ]
mov [ ebp - 0x4 ] ecx
movzx edi [ ecx + 0x2 ]
mov eax esi
shr eax 0xb
imul eax edi
cmp [ ebp - 0x4 ] eax
jae r-xdata
mov eax [ ebp + 0x8 ]
cmp eax [ ebp + 0xc ]
jae r-xdata
xor eax eax
inc eax
sub esi ecx
sub [ ebp - 0x4 ] ecx
lea edx [ edx + edx + 0x1 ]
mov esi ecx
add edx edx
not eax
jmp r-xdata
mov edi [ ebp - 0x4 ]
movzx ecx [ ecx ]
shl edi 0x8
or edi ecx
shl esi 0x8
inc [ ebp + 0x8 ]
mov [ ebp - 0x4 ] edi
mov eax [ ebp - 0xc ]
add ecx ecx
cmp esi ebx
movzx edx [ ecx + eax ]
jae r-xdata
jmp r-xdata
cmp ecx 0x100
jb r-xdata
mov ecx [ ebp - 0x8 ]
mov [ ebp - 0x18 ] 0xc
add ecx 0xa68
mov eax esi
shr eax 0xb
imul eax ecx
cmp [ ebp - 0x4 ] eax
jae r-xdata
mov eax [ ebp + 0x8 ]
cmp eax [ ebp + 0xc ]
jae r-xdata
push 0x3
pop eax
jmp r-xdata
mov eax [ ebp + 0xc ]
cmp [ ebp + 0x8 ] eax
jae r-xdata
sub [ ebp - 0x4 ] eax
sub esi eax
add ecx 0x204
mov [ ebp - 0x14 ] 0x10
mov [ ebp - 0xc ] 0x100
push 0x8
mov esi eax
pop eax
shl edx 0x4
lea ecx [ edx + ecx + 0x104 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0xc ] eax
jmp r-xdata
mov edi [ ebp - 0x4 ]
movzx eax [ eax ]
shl edi 0x8
or edi eax
shl esi 0x8
inc [ ebp + 0x8 ]
mov [ ebp - 0x4 ] edi
movzx edi [ eax + ecx ]
mov edx esi
shr edx 0xb
imul edx edi
cmp [ ebp - 0x4 ] edx
jae r-xdata
mov edx [ ebp + 0x8 ]
cmp edx [ ebp + 0xc ]
jae r-xdata
shl [ ebp - 0x10 ] 0x1
mov eax [ ebp - 0x8 ]
and eax [ ebp - 0x10 ]
mov edi [ ebp - 0xc ]
lea ecx [ eax + edx ]
add ecx [ ebp - 0x8 ]
cmp esi ebx
movzx ecx [ edi + ecx * 2 ]
mov [ ebp - 0x14 ] ecx
jae r-xdata
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
and [ ebp - 0x8 ] eax
cmp edx 0x100
jb r-xdata
mov edi [ ebp - 0x4 ]
movzx eax [ eax ]
shl edi 0x8
or edi eax
shl esi 0x8
inc [ ebp + 0x8 ]
mov [ ebp - 0x4 ] edi
sub [ ebp - 0x4 ] edx
sub esi edx
inc eax
mov esi edx
jmp r-xdata
mov edi [ ebp - 0x4 ]
movzx edx [ edx ]
shl edi 0x8
or edi edx
shl esi 0x8
inc [ ebp + 0x8 ]
mov [ ebp - 0x4 ] edi
cmp esi ebx
jae r-xdata
add eax eax
cmp esi ebx
jae r-xdata
mov ecx [ ebp - 0x14 ]
sub ecx [ ebp - 0xc ]
add eax ecx
cmp [ ebp - 0x18 ] 0x4
jae r-xdata
cmp eax [ ebp - 0xc ]
jb r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ ebp + 0xc ]
cmp [ ebp + 0x8 ] eax
jae r-xdata
cmp eax 0x4
jb r-xdata
mov edi [ ebp - 0x8 ]
shl eax 0x7
lea eax [ eax + edi + 0x360 ]
mov [ ebp - 0xc ] eax
xor eax eax
inc eax
push 0x3
pop eax
mov ecx esi
shr ecx 0xb
imul ecx edx
cmp [ ebp - 0x4 ] ecx
jae r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx [ ebp + 0xc ]
jae r-xdata
sub [ ebp - 0x4 ] ecx
sub esi ecx
inc eax
mov esi ecx
jmp r-xdata
mov edi [ ebp + 0x8 ]
mov ecx [ ebp - 0x4 ]
movzx edi [ edi ]
shl ecx 0x8
or ecx edi
mov edi [ ebp - 0x8 ]
shl esi 0x8
inc [ ebp + 0x8 ]
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0xc ]
add eax eax
cmp esi ebx
movzx edx [ eax + ecx ]
jae r-xdata
sub eax 0x40
cmp eax 0x4
jb r-xdata
cmp eax 0x40
jb r-xdata
mov ecx eax
shr ecx 0x1
dec ecx
cmp eax 0xe
mov [ ebp - 0x14 ] ecx
jae r-xdata
sub ecx 0x4
mov edx eax
and edx 0x1
or edx 0x2
shl edx cl
sub edx eax
lea ecx [ edi + edx * 2 + 0x55e ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
shr esi 0x1
sub eax esi
shr eax 0x1f
dec eax
and eax esi
sub [ ebp - 0x4 ] eax
dec ecx
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax [ ebp + 0xc ]
jae r-xdata
xor edx edx
inc edx
cmp esi ebx
jae r-xdata
lea ecx [ edi + 0x644 ]
mov [ ebp - 0x14 ] 0x4
mov edx [ ebp - 0x4 ]
movzx eax [ eax ]
shl edx 0x8
or edx eax
shl esi 0x8
inc [ ebp + 0x8 ]
mov [ ebp - 0x4 ] edx
movzx edi [ edx + ecx ]
mov eax esi
shr eax 0xb
imul eax edi
cmp [ ebp - 0x4 ] eax
jae r-xdata
mov eax [ ebp + 0x8 ]
cmp eax [ ebp + 0xc ]
jae r-xdata
sub [ ebp - 0x4 ] eax
sub esi eax
inc edx
mov esi eax
jmp r-xdata
mov edi [ ebp - 0x4 ]
movzx eax [ eax ]
shl edi 0x8
or edi eax
shl esi 0x8
inc [ ebp + 0x8 ]
mov [ ebp - 0x4 ] edi
add edx edx
cmp esi ebx
jae r-xdata
dec [ ebp - 0x14 ]
jne r-xdata
sub_410844
xor edx edx
mov dh [ eax + 0x1 ]
push esi
movzx esi [ eax + 0x3 ]
mov dl [ eax + 0x2 ]
movzx eax [ eax + 0x4 ]
or [ ecx + 0x1c ] 0xffffffff
and [ ecx + 0x4c ] 0x0
shl edx 0x8
or edx esi
shl edx 0x8
or edx eax
mov [ ecx + 0x20 ] edx
pop esi
retn
sub_41086c
mov eax [ esp + 0x4 ]
xor ecx ecx
xor edx edx
inc ecx
cmp [ esp + 0x8 ] edx
mov [ eax + 0x4c ] ecx
mov [ eax + 0x48 ] edx
mov [ eax + 0x58 ] edx
je r-xdata
cmp [ esp + 0xc ] edx
je r-xdata
mov [ eax + 0x2c ] edx
mov [ eax + 0x30 ] edx
mov [ eax + 0x50 ] ecx
retn
mov [ eax + 0x50 ] ecx
sub_4108ad
mov ecx [ edx + 0x4 ]
add ecx [ edx ]
mov eax 0x300
shl eax cl
push edi
mov edi [ edx + 0x10 ]
add eax 0x736
je r-xdata
and [ edx + 0x34 ] 0x0
and [ edx + 0x50 ] 0x0
xor eax eax
inc eax
mov [ edx + 0x44 ] eax
mov [ edx + 0x40 ] eax
mov [ edx + 0x3c ] eax
mov [ edx + 0x38 ] eax
pop edi
retn
mov ecx eax
shr ecx 0x1
mov eax 0x4000400
[ edi ]
adc ecx ecx
[ edi ]
sub_4108ed
push ebp
mov ebp esp
push ecx
push ecx
push ebx
mov ebx [ ebp + 0x14 ]
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebx ]
push [ ebp + 0xc ]
and [ ebx ] 0x0
mov eax esi
mov [ ebp + 0x14 ] edi
call sub_4101a2
mov eax [ ebp + 0x1c ]
and [ eax ] 0x0
cmp [ esi + 0x48 ] 0x112
jne r-xdata
cmp [ esi + 0x4c ] 0x0
je r-xdata
cmp [ esi + 0x20 ] 0x0
jne r-xdata
mov eax [ esi + 0x24 ]
xor ecx ecx
cmp eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] ecx
jb r-xdata
test edi edi
jbe r-xdata
xor eax eax
cmp [ esi + 0x20 ] eax
setne al
mov eax [ ebp + 0x1c ]
mov [ eax ] 0x1
cmp [ esi + 0x50 ] ecx
je r-xdata
mov eax [ esi + 0x48 ]
cmp eax ecx
jne r-xdata
cmp [ esi + 0x58 ] 0x5
jb r-xdata
mov eax [ esi + 0x58 ]
cmp eax 0x5
jae r-xdata
mov eax [ esi + 0x58 ]
test eax eax
jne r-xdata
mov edx esi
call sub_4108ad
cmp [ ebp + 0x18 ] ecx
je r-xdata
cmp [ esi + 0x20 ] ecx
je r-xdata
mov eax [ ebp + 0x1c ]
mov [ eax ] 0x3
lea eax [ esi + 0x5c ]
cmp [ eax ] 0x0
jne r-xdata
mov ecx [ ebp + 0x10 ]
mov cl [ ecx ]
mov [ eax + esi + 0x5c ] cl
inc [ esi + 0x58 ]
inc [ ebp + 0x10 ]
inc [ ebx ]
dec edi
mov [ ebp + 0x14 ] edi
jne r-xdata
and [ ebp + 0x8 ] 0x0
jmp r-xdata
cmp edi 0x14
jb r-xdata
xor eax eax
cmp eax ecx
jne r-xdata
mov eax [ ebp + 0x1c ]
mov [ eax ] 0x4
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
xor eax eax
inc eax
jmp r-xdata
mov ecx esi
call sub_410844
and [ esi + 0x58 ] 0x0
cmp eax 0x14
mov [ ebp - 0x8 ] eax
jb r-xdata
push edi
push [ ebp + 0x10 ]
mov eax esi
call sub_410285
test eax eax
pop ecx
pop ecx
je r-xdata
cmp [ ebp - 0x4 ] eax
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
mov [ ebp - 0x4 ] 0x1
xor eax eax
jmp r-xdata
cmp [ ebp + 0x8 ] edi
jae r-xdata
cmp eax 0x14
mov [ esi + 0x58 ] eax
jb r-xdata
push edi
push [ ebp + 0x10 ]
lea eax [ esi + 0x5c ]
push eax
call memcpy
add esp 0xc
mov [ esi + 0x58 ] edi
add [ ebx ] edi
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp + 0x10 ]
lea edi [ edi + eax - 0x14 ]
jmp r-xdata
mov ecx [ ebp + 0x1c ]
mov [ ecx ] 0x2
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov cl [ edx + ecx ]
mov [ eax + esi + 0x5c ] cl
inc eax
inc [ ebp + 0x8 ]
push eax
lea eax [ esi + 0x5c ]
push eax
mov eax esi
call sub_410285
test eax eax
pop ecx
pop ecx
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov edi [ ebp + 0x10 ]
cmp eax 0x2
jne r-xdata
mov eax [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0xc ]
mov [ esi + 0x18 ] eax
call sub_41021b
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
add [ ebx ] eax
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov edi [ ebp + 0xc ]
lea eax [ esi + 0x5c ]
push eax
mov [ esi + 0x18 ] eax
call sub_41021b
test eax eax
jne r-xdata
mov eax [ esi + 0x18 ]
sub eax [ ebp + 0x10 ]
add [ ebx ] eax
add [ ebp + 0x10 ] eax
sub [ ebp + 0x14 ] eax
jmp r-xdata
cmp eax 0x2
jne r-xdata
mov eax [ esi + 0x18 ]
sub eax [ ebp - 0x8 ]
mov ecx [ ebp + 0x8 ]
sub eax esi
lea eax [ ecx + eax - 0x5c ]
add [ ebx ] eax
add [ ebp + 0x10 ] eax
sub [ ebp + 0x14 ] eax
and [ esi + 0x58 ] 0x0
cmp [ esi + 0x48 ] 0x112
jne r-xdata
mov edi [ ebp + 0x14 ]
jmp r-xdata
sub_410b5c
cmp [ esp + 0xc ] 0x5
jae r-xdata
mov eax [ esp + 0x8 ]
movzx ecx [ eax + 0x2 ]
xor edx edx
mov dh [ eax + 0x4 ]
mov dl [ eax + 0x3 ]
shl edx 0x8
or edx ecx
movzx ecx [ eax + 0x1 ]
shl edx 0x8
or edx ecx
mov ecx 0x1000
cmp edx ecx
jae r-xdata
push 0x4
pop eax
retn
mov ecx [ esp + 0x4 ]
mov [ ecx + 0xc ] edx
mov al [ eax ]
cmp al 0xe1
jae r-xdata
mov edx ecx
movzx eax al
push esi
cdq
push 0x9
pop esi
idiv esi
push 0x5
pop esi
movzx eax al
mov [ ecx ] edx
cdq
idiv esi
pop esi
mov [ ecx + 0x8 ] eax
mov [ ecx + 0x4 ] edx
xor eax eax
retn
sub_410bbc
mov ecx [ eax + 0x4 ]
add ecx [ eax ]
push esi
mov esi 0x300
shl esi cl
add esi 0x736
cmp [ edi + 0x10 ] 0x0
je r-xdata
push ebx
push edi
call sub_410b1a
lea eax [ esi + esi ]
push eax
push ebx
call [ ebx ]
add esp 0x10
test eax eax
mov [ edi + 0x10 ] eax
mov [ edi + 0x54 ] esi
jne r-xdata
cmp esi [ edi + 0x54 ]
je r-xdata
xor eax eax
pop esi
retn
push 0x2
pop eax
pop esi
retn
sub_410bfe
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x10 ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_410b5c
add esp 0xc
test eax eax
jne r-xdata
leave
retn
push ebx
mov ebx [ ebp + 0x14 ]
push edi
mov edi [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
call sub_410bbc
test eax eax
jne r-xdata
pop edi
pop ebx
cmp [ edi + 0x14 ] eax
push esi
je r-xdata
mov eax ebx
mov esi edi
call sub_410b32
push [ ebp - 0x4 ]
push ebx
call [ ebx ]
test eax eax
pop ecx
pop ecx
mov [ edi + 0x14 ] eax
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp eax [ edi + 0x28 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ edi + 0x28 ] eax
lea esi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
xor eax eax
push ebx
push edi
call sub_410b1a
pop ecx
pop ecx
push 0x2
pop eax
jmp r-xdata
pop esi
sub_410c76
push esi
mov esi ecx
lea eax [ esi + 0x20 ]
push rw-data
push eax
mov [ esi ] r--data
mov [ esi + 0x4 ] r--data
mov [ esi + 0x8 ] r--data
call sub_410b40
push [ esi + 0x14 ]
call sub_401b42
mov esi [ esi + 0x10 ]
add esp 0xc
test esi esi
je r-xdata
pop esi
retn
mov eax [ esi ]
push esi
call [ eax + 0x8 ]
sub_410ce1
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
push r--data
push esi
call sub_401459
test eax eax
pop ecx
pop ecx
je r-xdata
push r--data
push esi
call sub_401459
test eax eax
pop ecx
pop ecx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
push r--data
push esi
call sub_401459
test eax eax
pop ecx
pop ecx
je r-xdata
pop esi
pop ebp
retn 0xc
push r--data
push esi
call sub_401459
test eax eax
pop ecx
pop ecx
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax + 0x4 ]
mov eax 0x80004002
mov eax [ ebp + 0x8 ]
lea edx [ eax + 0x8 ]
jmp r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x4 ]
xor eax eax
jmp r-xdata
mov ecx eax
neg ecx
sbb ecx ecx
and ecx edx
mov edx [ ebp + 0x10 ]
mov [ edx ] ecx
jmp r-xdata
sub_410d65
push esi
mov esi [ esp + 0x8 ]
push rw-data
push [ esp + 0x14 ]
lea eax [ esi + 0x1c ]
push [ esp + 0x14 ]
push eax
call sub_410bfe
add esp 0x10
call sub_40f42e
test eax eax
jne r-xdata
pop esi
retn 0xc
lea ecx [ esi - 0x4 ]
mov [ esi + 0x8c ] 0x1
call sub_40f485
sub_410d9f
mov edx [ esp + 0x4 ]
test edx edx
setne al
test al al
mov [ ecx + 0x91 ] al
je r-xdata
and [ ecx + 0xa8 ] 0x0
and [ ecx + 0xac ] 0x0
and [ ecx + 0xbc ] 0x0
add ecx 0x20
push ecx
call sub_410897
pop ecx
retn 0x4
mov eax [ edx ]
mov [ ecx + 0x98 ] eax
mov eax [ edx + 0x4 ]
mov [ ecx + 0x9c ] eax
sub_410e0b
push ebp
mov ebp esp
sub esp 0x2c
push ebx
push esi
mov esi ecx
cmp [ esi + 0x14 ] 0x0
push edi
je r-xdata
xor eax eax
inc eax
cmp [ esi + 0x90 ] 0x0
je r-xdata
mov eax [ esi + 0xa0 ]
mov edx [ esi + 0x48 ]
mov ecx [ esi + 0xb8 ]
mov [ ebp - 0x1c ] eax
mov eax [ esi + 0xa4 ]
mov [ ebp - 0x18 ] eax
mov eax [ esi + 0x44 ]
mov edi edx
sub edi eax
cmp edi ecx
jae r-xdata
add ecx eax
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x8 ] edx
jmp r-xdata
mov edi [ esi + 0x44 ]
mov eax [ ebp - 0x8 ]
and [ ebp - 0xc ] 0x0
sub eax edi
cmp [ esi + 0x91 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
and [ ebx ] 0x0
and [ esi + 0x18 ] 0x0
mov ecx [ eax ]
push ebx
push [ esi + 0xb0 ]
push [ esi + 0x14 ]
push eax
call [ ecx + 0xc ]
test eax eax
jne r-xdata
mov eax [ esi + 0x18 ]
lea ebx [ esi + 0x1c ]
cmp eax [ ebx ]
jne r-xdata
mov ecx [ esi + 0x18 ]
mov edx [ ebx ]
sub edx ecx
mov [ ebp - 0x10 ] edx
lea edx [ ebp - 0x14 ]
push edx
push [ ebp - 0xc ]
lea edx [ ebp - 0x10 ]
push edx
mov edx [ esi + 0x14 ]
add edx ecx
push edx
add eax edi
push eax
lea eax [ esi + 0x20 ]
push eax
call sub_4108ed
mov ecx [ ebp - 0x10 ]
add [ esi + 0x18 ] ecx
mov edx [ esi + 0x44 ]
add esp 0x18
add [ esi + 0xa0 ] ecx
push 0x0
pop ebx
adc [ esi + 0xa4 ] ebx
mov [ ebp - 0xc ] eax
mov eax edx
sub eax edi
lea edi [ esi + 0xa8 ]
add [ edi ] eax
adc [ edi + 0x4 ] ebx
cmp ecx ebx
jne r-xdata
mov ecx [ esi + 0x98 ]
sub ecx [ esi + 0xa8 ]
mov edx [ esi + 0x9c ]
sbb edx [ esi + 0xac ]
mov [ ebp - 0x28 ] edx
xor edx edx
cmp [ ebp - 0x28 ] edx
ja r-xdata
pop edi
pop esi
pop ebx
leave
retn 0xc
mov [ ebp - 0x2 ] 0x0
cmp eax ebx
mov [ ebp - 0x2 ] 0x1
je r-xdata
jb r-xdata
mov [ ebp - 0x1 ] 0x0
mov eax [ edi + 0x4 ]
cmp eax [ esi + 0x9c ]
jb r-xdata
cmp [ esi + 0x91 ] 0x0
je r-xdata
cmp [ esi + 0xc0 ] dl
mov eax ecx
je r-xdata
cmp ecx eax
ja r-xdata
mov eax [ esi + 0xbc ]
mov ecx [ esi + 0x34 ]
sub edx eax
push edx
add ecx eax
push ecx
push [ ebp + 0xc ]
call sub_40f143
mov ecx [ esi + 0x44 ]
mov edx [ esi + 0x48 ]
add esp 0xc
cmp ecx edx
mov [ ebp - 0x10 ] eax
mov [ esi + 0xbc ] ecx
jne r-xdata
cmp edx [ ebp - 0x8 ]
je r-xdata
ja r-xdata
mov [ ebp - 0xc ] 0x1
mov ecx [ esi + 0x44 ]
mov eax [ esi + 0xb8 ]
mov ebx edx
sub ebx ecx
cmp ebx eax
jae r-xdata
mov [ esi + 0x44 ] ebx
mov [ esi + 0xbc ] ebx
cmp [ ebp - 0x2 ] 0x0
jne r-xdata
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
mov eax [ edi ]
cmp eax [ esi + 0x98 ]
jb r-xdata
add eax ecx
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x8 ] edx
jmp r-xdata
cmp [ ebp - 0x1 ] 0x0
je r-xdata
cmp [ ebp - 0xc ] ebx
jne r-xdata
mov eax [ ebp - 0x10 ]
test eax eax
jne r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0x10 ] ebx
je r-xdata
cmp [ ebp - 0x1 ] al
jne r-xdata
mov eax [ esi + 0xa0 ]
sub eax [ ebp - 0x1c ]
mov ecx [ esi + 0xa4 ]
sbb ecx [ ebp - 0x18 ]
push edi
lea edx [ ebp - 0x24 ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp + 0x10 ]
push edx
mov [ ebp - 0x20 ] ecx
mov ecx [ eax ]
push eax
call [ ecx + 0xc ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp - 0x2 ] al
jne r-xdata
jmp r-xdata
xor eax eax
cmp [ ebp - 0x14 ] 0x1
setne al
jmp r-xdata
xor ebx ebx
sub_411037
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x14 ] 0x0
jne r-xdata
push [ ebp + 0x18 ]
mov eax [ esi ]
push esi
call [ eax + 0x10 ]
push [ ebp + 0x1c ]
mov ecx esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_410e0b
mov eax 0x80070057
jmp r-xdata
pop esi
pop ebp
retn 0x18
sub_41107d
mov eax ecx
mov [ eax + 0x4 ] r--data
mov [ eax + 0x8 ] r--data
xor ecx ecx
mov [ eax + 0xc ] ecx
mov [ eax ] r--data
mov [ eax + 0x4 ] r--data
mov [ eax + 0x8 ] r--data
mov [ eax + 0x10 ] ecx
mov [ eax + 0x14 ] ecx
mov [ eax + 0x90 ] cl
mov [ eax + 0x91 ] cl
mov [ eax + 0xb4 ] 0x100000
mov [ eax + 0xb8 ] __dos_header
mov [ eax + 0xc0 ] cl
mov [ eax + 0xa0 ] ecx
mov [ eax + 0xa4 ] ecx
mov [ eax + 0x1c ] ecx
mov [ eax + 0x18 ] ecx
mov [ eax + 0x34 ] ecx
mov [ eax + 0x30 ] ecx
retn
sub_411120
sub eax 0x0
je r-xdata
xor eax eax
retn
dec eax
je r-xdata
xor eax eax
inc eax
retn
dec eax
je r-xdata
mov eax 0x8007000e
retn
sub eax 0x3
je r-xdata
mov eax 0x80070057
retn
mov eax 0x80004005
retn
sub_41117d
cmp [ esp + 0x4 ] 0x28
jbe r-xdata
jne r-xdata
push 0x4
pop eax
retn
movzx eax [ esp + 0x4 ]
mov ecx eax
shr ecx 0x1
and eax 0x1
add ecx 0xb
or eax 0x2
shl eax cl
or eax 0xffffffff
jmp r-xdata
mov ecx eax
shr ecx 0x8
mov [ edx + 0x2 ] cl
mov ecx eax
mov [ edx + 0x1 ] al
shr eax 0x18
shr ecx 0x10
mov [ edx + 0x4 ] al
mov [ edx ] 0x4
mov [ edx + 0x3 ] cl
xor eax eax
retn
sub_4111c2
push ebp
mov ebp esp
push ecx
push ecx
push [ ebp + 0xc ]
lea edx [ ebp - 0x8 ]
call sub_41117d
test eax eax
pop ecx
jne r-xdata
leave
retn
push [ ebp + 0x10 ]
mov eax edx
push 0x5
push eax
push [ ebp + 0x8 ]
call sub_410bfe
add esp 0x10
sub_411211
mov edx [ ecx + 0x78 ]
sub edx 0x0
push esi
je r-xdata
test al al
mov [ ecx + 0x7c ] al
jne r-xdata
dec edx
je r-xdata
js r-xdata
push 0x8
xor edx edx
mov dh al
push 0x2
or [ ecx + 0x74 ] edx
jmp r-xdata
dec edx
je r-xdata
and eax 0x1f
shl eax 0x10
mov [ ecx + 0x74 ] eax
and al 0x7f
cmp al 0x2
jbe r-xdata
pop eax
pop esi
retn
movzx eax al
or eax [ ecx + 0x74 ]
inc eax
mov [ ecx + 0x74 ] eax
mov al [ ecx + 0x7c ]
and al 0x80
neg al
sbb eax eax
and eax 0xfffffffd
dec edx
je r-xdata
and [ ecx + 0x74 ] 0x0
jmp r-xdata
push 0x9
jmp r-xdata
xor edx edx
mov dh al
push 0x4
mov [ ecx + 0x70 ] edx
jmp r-xdata
dec edx
je r-xdata
xor eax eax
inc eax
pop esi
retn
movzx eax al
or eax [ ecx + 0x70 ]
inc eax
mov [ ecx + 0x70 ] eax
mov al [ ecx + 0x7c ]
and al 0x60
cmp al 0x40
jb r-xdata
dec edx
jne r-xdata
mov eax [ ecx + 0x88 ]
neg eax
sbb eax eax
and eax 0x3
jmp r-xdata
push 0x5
jmp r-xdata
cmp al 0xe1
jae r-xdata
add eax 0x6
pop esi
retn
movzx eax al
push edi
cdq
push 0x9
pop esi
idiv esi
push 0x5
pop edi
movzx eax al
mov esi edx
cdq
idiv edi
pop edi
mov [ ecx + 0x8 ] eax
lea eax [ edx + esi ]
cmp eax 0x4
jg r-xdata
and [ ecx + 0x88 ] 0x0
mov [ ecx ] esi
mov [ ecx + 0x4 ] edx
push 0x6
jmp r-xdata
sub_4112f1
mov eax [ esi + 0x14 ]
add eax [ esi + 0x24 ]
push edi
push [ esp + 0x8 ]
push eax
call memcpy
add [ esi + 0x24 ] edi
add esp 0xc
cmp [ esi + 0x30 ] 0x0
jne r-xdata
add [ esi + 0x2c ] edi
retn
mov eax [ esi + 0xc ]
mov ecx eax
sub ecx [ esi + 0x2c ]
cmp ecx edi
ja r-xdata
mov [ esi + 0x30 ] eax
sub_411321
push ebp
mov ebp esp
push ecx
push ecx
mov ecx [ ebp + 0x1c ]
push ebx
mov ebx [ ebp + 0x14 ]
mov eax [ ebx ]
and [ ebx ] 0x0
and [ ecx ] 0x0
push esi
mov esi [ ebp + 0x8 ]
push edi
mov [ ebp - 0x4 ] eax
jmp r-xdata
cmp [ esi + 0x78 ] 0x8
jne r-xdata
mov edx [ esi + 0x78 ]
cmp edx 0x9
mov eax [ esi + 0x24 ]
mov [ ebp - 0x8 ] eax
je r-xdata
mov [ ecx ] 0x1
xor eax eax
inc eax
jmp r-xdata
mov edi [ ebp + 0xc ]
cmp eax edi
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp edx 0x6
je r-xdata
cmp [ ebp + 0x18 ] 0x0
je r-xdata
mov edx [ ebx ]
mov ecx [ esi + 0x74 ]
and [ ebp + 0x8 ] 0x0
sub edi eax
mov eax [ ebp - 0x4 ]
sub eax edx
cmp ecx edi
mov [ ebp + 0x14 ] eax
ja r-xdata
cmp edx 0x7
je r-xdata
mov [ ecx ] 0x2
jmp r-xdata
mov cl [ esi + 0x7c ]
test cl cl
js r-xdata
mov edi ecx
mov [ ebp + 0x8 ] 0x1
mov eax [ ebx ]
cmp eax [ ebp - 0x4 ]
je r-xdata
xor eax eax
cmp [ esi + 0x78 ] 0x6
jne r-xdata
cmp edx [ ebp - 0x4 ]
je r-xdata
mov [ ecx ] 0x3
jmp r-xdata
inc eax
mov [ ebx ] eax
mov eax [ ebp + 0x10 ]
mov al [ eax ]
mov ecx esi
call sub_411211
inc [ ebp + 0x10 ]
mov [ esi + 0x78 ] eax
jmp r-xdata
mov ecx [ esi + 0x70 ]
cmp eax ecx
jbe r-xdata
shr ecx 0x5
and ecx 0x3
xor eax eax
cmp ecx 0x3
sete al
xor edx edx
test ecx ecx
setg dl
test eax eax
mov ecx edx
jne r-xdata
mov eax [ ebp + 0x1c ]
mov [ eax ] 0x3
jmp r-xdata
cmp [ esi + 0x78 ] 0x6
jne r-xdata
mov ecx [ ebp + 0x1c ]
push [ ebp + 0x1c ]
lea eax [ ebp + 0x14 ]
push [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x8 ]
push [ ebp + 0x10 ]
add edi eax
push edi
push esi
call sub_4108ed
mov edx [ ebp + 0x14 ]
add [ ebx ] edx
mov ecx [ esi + 0x24 ]
sub ecx [ ebp - 0x8 ]
add [ ebp + 0x10 ] edx
sub [ esi + 0x74 ] ecx
sub [ esi + 0x70 ] edx
mov edi [ esi + 0x74 ]
add esp 0x18
test eax eax
jne r-xdata
mov [ ebp + 0x14 ] ecx
test ecx ecx
jne r-xdata
cmp [ esi + 0x80 ] eax
jne r-xdata
cmp [ ebp + 0x14 ] edi
jbe r-xdata
xor edx edx
cmp cl 0x1
sete dl
xor eax eax
cmp edx eax
je r-xdata
mov eax [ ebp + 0x1c ]
mov eax [ eax ]
cmp eax 0x3
je r-xdata
push ecx
push eax
push esi
call sub_41086c
and [ esi + 0x80 ] 0x0
mov eax [ ebp + 0x14 ]
add esp 0xc
and [ esi + 0x84 ] 0x0
mov [ esi + 0x78 ] 0x7
cmp [ esi + 0x84 ] ecx
jne r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov [ ebp + 0x14 ] edi
cmp [ esi + 0x80 ] eax
jne r-xdata
xor ecx ecx
inc ecx
mov [ esi + 0x84 ] ecx
mov [ esi + 0x88 ] ecx
jmp r-xdata
test edx edx
jne r-xdata
push [ ebp + 0x10 ]
mov edi [ ebp + 0x14 ]
call sub_4112f1
mov eax [ ebp + 0x14 ]
add [ ebx ] eax
add [ ebp + 0x10 ] eax
sub [ esi + 0x74 ] eax
mov eax [ esi + 0x74 ]
neg eax
sbb eax eax
and eax 0x7
pop ecx
mov [ esi + 0x78 ] eax
jmp r-xdata
push eax
push edx
push esi
mov [ esi + 0x80 ] eax
call sub_41086c
add esp 0xc
mov eax [ ebp + 0x1c ]
cmp [ eax ] 0x4
jne r-xdata
test ecx ecx
jne r-xdata
mov [ eax ] 0x2
cmp eax 0x4
jne r-xdata
test edi edi
jne r-xdata
cmp [ esi + 0x70 ] ecx
jne r-xdata
and [ esi + 0x78 ] ecx
sub_411551
push esi
mov esi ecx
lea eax [ esi + 0x20 ]
push rw-data
push eax
mov [ esi ] r--data
mov [ esi + 0x4 ] r--data
mov [ esi + 0x8 ] r--data
call sub_410b40
push [ esi + 0x14 ]
call sub_401b42
mov esi [ esi + 0x10 ]
add esp 0xc
test esi esi
je r-xdata
pop esi
retn
mov eax [ esi ]
push esi
call [ eax + 0x8 ]
sub_4115dd
push ebp
mov ebp esp
push r--data
push [ ebp + 0xc ]
call sub_401459
test eax eax
pop ecx
pop ecx
je r-xdata
push r--data
push [ ebp + 0xc ]
call sub_401459
test eax eax
pop ecx
pop ecx
jne r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax + 0x4 ]
push r--data
push [ ebp + 0xc ]
call sub_401459
test eax eax
pop ecx
pop ecx
je r-xdata
pop ebp
retn 0xc
mov eax 0x80004002
mov eax [ ebp + 0x8 ]
lea edx [ eax + 0x8 ]
jmp r-xdata
mov ecx eax
neg ecx
sbb ecx ecx
and ecx edx
mov edx [ ebp + 0x10 ]
mov [ edx ] ecx
mov ecx [ eax ]
push eax
call [ ecx + 0x4 ]
xor eax eax
jmp r-xdata
sub_411647
cmp [ esp + 0xc ] 0x1
je r-xdata
mov eax [ esp + 0x8 ]
movzx eax [ eax ]
push esi
mov esi [ esp + 0x8 ]
push rw-data
push eax
lea eax [ esi + 0x1c ]
push eax
call sub_4111c2
add esp 0xc
call sub_411120
test eax eax
jne r-xdata
push 0x4
pop eax
jmp r-xdata
pop esi
cmp [ esi + 0x10 ] eax
jne r-xdata
retn 0xc
xor eax eax
push 0x100000
call sub_4024a5
test eax eax
pop ecx
mov [ esi + 0x10 ] eax
jne r-xdata
mov eax 0x8007000e
jmp r-xdata
sub_4116c4
mov ecx [ esp + 0x8 ]
push ebx
xor ebx ebx
cmp ecx ebx
setne al
cmp al bl
push esi
mov esi [ esp + 0xc ]
mov [ esi + 0xac ] al
je r-xdata
lea eax [ esi + 0x20 ]
push eax
call sub_4111ec
pop ecx
mov [ esi + 0x1c ] ebx
mov [ esi + 0x18 ] ebx
mov [ esi + 0xc0 ] ebx
mov [ esi + 0xc4 ] ebx
mov [ esi + 0xb8 ] ebx
mov [ esi + 0xbc ] ebx
pop esi
xor eax eax
pop ebx
retn 0x8
mov eax [ ecx ]
mov [ esi + 0xb0 ] eax
mov eax [ ecx + 0x4 ]
mov [ esi + 0xb4 ] eax
sub_41171f
push ebp
mov ebp esp
sub esp 0x10
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x14 ] 0x0
jne r-xdata
push [ ebp + 0x18 ]
mov eax [ esi ]
push esi
call [ eax + 0x18 ]
push ebx
push edi
xor eax eax
inc eax
jmp r-xdata
mov edi [ esi + 0x44 ]
mov eax [ esi + 0x48 ]
sub eax edi
mov ecx __dos_header
cmp eax ecx
jbe r-xdata
mov eax [ ebp + 0xc ]
and [ ebx ] 0x0
and [ esi + 0x18 ] 0x0
mov ecx [ eax ]
push ebx
push 0x100000
push [ esi + 0x14 ]
push eax
call [ ecx + 0xc ]
test eax eax
jne r-xdata
pop esi
leave
retn 0x18
cmp [ esi + 0xac ] 0x0
je r-xdata
mov eax ecx
pop edi
pop ebx
mov ecx [ esi + 0x18 ]
mov edx [ ebx ]
sub edx ecx
mov [ ebp + 0x8 ] edx
lea edx [ ebp - 0x8 ]
push edx
push 0x0
lea edx [ ebp + 0x8 ]
push edx
mov edx [ esi + 0x14 ]
add edx ecx
push edx
add eax edi
push eax
lea eax [ esi + 0x20 ]
push eax
call sub_411321
mov ecx [ ebp + 0x8 ]
add [ esi + 0x18 ] ecx
mov edx [ esi + 0x44 ]
add esp 0x18
lea ebx [ esi + 0xb8 ]
add [ ebx ] ecx
mov [ ebp - 0x4 ] eax
mov eax edx
adc [ ebx + 0x4 ] 0x0
sub eax edi
lea edi [ esi + 0xc0 ]
add [ edi ] eax
adc [ edi + 0x4 ] 0x0
test ecx ecx
jne r-xdata
mov ecx [ esi + 0xb0 ]
sub ecx [ esi + 0xc0 ]
mov edx [ esi + 0xb4 ]
sbb edx [ esi + 0xc4 ]
mov [ ebp - 0xc ] edx
xor edx edx
cmp [ ebp - 0xc ] edx
ja r-xdata
mov [ ebp + 0x1b ] 0x0
test eax eax
mov [ ebp + 0x1b ] 0x1
je r-xdata
jb r-xdata
mov [ ebp + 0xb ] 0x0
mov eax [ edi + 0x4 ]
cmp eax [ esi + 0xb4 ]
jb r-xdata
cmp [ esi + 0xac ] 0x0
je r-xdata
mov eax ecx
cmp ecx eax
jae r-xdata
push edx
push [ esi + 0x34 ]
push [ ebp + 0x10 ]
call sub_40f143
add esp 0xc
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
cmp edx [ esi + 0x48 ]
je r-xdata
ja r-xdata
xor eax eax
inc eax
jmp r-xdata
test eax eax
jne r-xdata
cmp [ ebp + 0x1b ] 0x0
jne r-xdata
mov [ ebp + 0xb ] 0x1
jmp r-xdata
mov eax [ edi ]
cmp eax [ esi + 0xb0 ]
jb r-xdata
cmp [ ebp + 0xb ] al
jne r-xdata
cmp [ ebp + 0xb ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp + 0x1b ] al
jne r-xdata
mov eax [ esi + 0x44 ]
cmp eax [ esi + 0x48 ]
jne r-xdata
xor eax eax
cmp [ ebp - 0x8 ] 0x1
setne al
cmp [ ebp + 0x1c ] 0x0
je r-xdata
and [ esi + 0x44 ] 0x0
mov eax [ esi + 0x18 ]
lea ebx [ esi + 0x1c ]
cmp eax [ ebx ]
jne r-xdata
mov eax [ ebp + 0x1c ]
mov ecx [ eax ]
push edi
push ebx
push eax
call [ ecx + 0xc ]
test eax eax
je r-xdata
jmp r-xdata
sub_4118d0
mov eax ecx
mov [ eax + 0x4 ] r--data
mov [ eax + 0x8 ] r--data
xor ecx ecx
mov [ eax + 0xc ] ecx
mov [ eax ] r--data
mov [ eax + 0x4 ] r--data
mov [ eax + 0x8 ] r--data
mov [ eax + 0x10 ] ecx
mov [ eax + 0x14 ] ecx
mov [ eax + 0xac ] cl
mov [ eax + 0x34 ] ecx
mov [ eax + 0x30 ] ecx
retn
sub_41196e
push ebp
mov ebp esp
push ecx
push ecx
mov ecx [ ebp + 0x14 ]
mov edx [ ecx ]
mov ecx [ ebp + 0xc ]
xor eax eax
and edx 0x7
cmp ecx 0x5
jae r-xdata
add [ ebp + 0x10 ] 0x5
or [ ebp + 0xc ] 0xffffffff
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
lea ecx [ edi + ecx - 0x4 ]
mov [ ebp - 0x4 ] ecx
leave
retn
cmp esi [ ebp - 0x4 ]
jb r-xdata
mov al [ esi ]
and al 0xfe
cmp al 0xe8
je r-xdata
mov eax esi
sub eax edi
cmp esi [ ebp - 0x4 ]
mov [ ebp - 0x8 ] eax
jae r-xdata
inc esi
mov esi eax
sub esi [ ebp + 0xc ]
push 0x3
lea ecx [ esi - 0x1 ]
shl edx cl
pop edi
and edx 0x7
cmp edi esi
sbb ecx ecx
not ecx
pop edi
and ecx edx
mov edx [ ebp + 0x14 ]
pop esi
mov [ edx ] ecx
pop ebx
leave
retn
mov ecx eax
sub ecx [ ebp + 0xc ]
cmp ecx 0x3
jbe r-xdata
dec ecx
shl edx cl
and edx 0x7
je r-xdata
xor edx edx
mov cl [ esi + 0x4 ]
test cl cl
mov [ ebp + 0xc ] eax
je r-xdata
movzx ecx [ edx + r--data ]
mov ebx esi
sub ebx ecx
cmp [ edx + r--data ] 0x0
mov cl [ ebx + 0x4 ]
je r-xdata
xor ebx ebx
mov bh cl
movzx ecx [ esi + 0x2 ]
mov bl [ esi + 0x3 ]
shl ebx 0x8
or ebx ecx
movzx ecx [ esi + 0x1 ]
shl ebx 0x8
or ebx ecx
mov edi ebx
cmp cl 0xff
jne r-xdata
mov [ ebp + 0xc ] eax
test cl cl
je r-xdata
sub edi eax
sub edi [ ebp + 0x10 ]
mov ebx edi
lea ebx [ edi + eax ]
add ebx [ ebp + 0x10 ]
jmp r-xdata
and edx 0x3
add edx edx
or edx 0x1
inc eax
jmp r-xdata
lea esi [ eax + edi ]
jmp r-xdata
cmp cl 0xff
jne r-xdata
mov edi [ ebp + 0x8 ]
mov ecx ebx
shr ecx 0x18
and cl 0x1
dec cl
not cl
mov [ esi + 0x4 ] cl
mov ecx ebx
shr ecx 0x10
mov [ esi + 0x3 ] cl
mov ecx ebx
shr ecx 0x8
mov [ esi + 0x2 ] cl
mov [ esi + 0x1 ] bl
add eax 0x5
jmp r-xdata
movzx edi [ edx + r--data ]
push 0x18
shl edi 0x3
pop ecx
sub ecx edi
mov eax ebx
shr eax cl
test al al
je r-xdata
test edx edx
je r-xdata
mov eax [ ebp - 0x8 ]
push 0x20
pop ecx
sub ecx edi
xor edi edi
inc edi
shl edi cl
dec edi
xor edi ebx
jmp r-xdata
cmp al 0xff
jne r-xdata
cmp [ ebp + 0x18 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
sub_411b3a
mov al [ esp + 0x8 ]
and al 0xfe
cmp al 0xe8
je r-xdata
xor eax eax
inc eax
retn
push [ esp + 0x8 ]
push [ esp + 0x8 ]
call sub_411b22
test al al
pop ecx
pop ecx
jne r-xdata
xor eax eax
retn
sub_411ba6
push esi
mov esi ecx
mov eax [ esi ]
cmp eax [ esi + 0x4 ]
jb r-xdata
mov eax [ esi ]
mov al [ eax ]
mov ecx [ esp + 0x8 ]
mov [ ecx ] al
inc [ esi ]
mov al 0x1
call sub_40e602
test al al
je r-xdata
pop esi
retn 0x4
sub_411be2
push esi
push edi
mov esi ecx
call sub_40e597
and [ esi + 0x24 ] 0x0
or [ esi + 0x20 ] 0xffffffff
push 0x5
pop edi
mov al [ ecx ]
inc ecx
mov [ esi ] ecx
mov ecx esi
call sub_40e66b
jmp r-xdata
mov ecx [ esi ]
cmp ecx [ esi + 0x4 ]
jb r-xdata
pop edi
pop esi
retn
mov ecx [ esi + 0x24 ]
movzx eax al
shl ecx 0x8
or ecx eax
dec edi
mov [ esi + 0x24 ] ecx
jne r-xdata
sub_411c1f
push esi
mov esi [ esp + 0x8 ]
mov edx [ esi + 0x20 ]
mov eax edx
shr eax 0xb
imul eax [ ecx ]
push edi
mov edi [ esi + 0x24 ]
cmp edi eax
jae r-xdata
sub edx eax
sub edi eax
mov [ esi + 0x20 ] edx
mov [ esi + 0x24 ] edi
mov eax [ ecx ]
mov edx eax
shr edx 0x5
sub eax edx
mov [ ecx ] eax
cmp [ esi + 0x20 ] 0x1000000
jae r-xdata
mov [ esi + 0x20 ] eax
mov eax [ ecx ]
mov edx 0x800
sub edx eax
shr edx 0x5
add edx eax
mov [ ecx ] edx
cmp [ esi + 0x20 ] 0x1000000
jae r-xdata
xor eax eax
inc eax
mov ecx [ esi ]
cmp ecx [ esi + 0x4 ]
jb r-xdata
xor eax eax
jmp r-xdata
mov ecx [ esi ]
cmp ecx [ esi + 0x4 ]
jb r-xdata
mov al [ ecx ]
inc ecx
mov [ esi ] ecx
mov ecx esi
call sub_40e66b
jmp r-xdata
pop edi
pop esi
retn 0x4
mov al [ ecx ]
inc ecx
mov [ esi ] ecx
mov ecx esi
call sub_40e66b
jmp r-xdata
mov ecx [ esi + 0x24 ]
movzx eax al
shl ecx 0x8
or ecx eax
shl [ esi + 0x20 ] 0x8
mov [ esi + 0x24 ] ecx
mov ecx [ esi + 0x24 ]
movzx eax al
shl ecx 0x8
or ecx eax
shl [ esi + 0x20 ] 0x8
mov [ esi + 0x24 ] ecx
sub_411ce2
push esi
mov esi ecx
lea ecx [ esi + 0x1c ]
call sub_40a018
lea ecx [ esi + 0x3c ]
call sub_40a018
lea ecx [ esi + 0x5c ]
call sub_40a018
lea ecx [ esi + 0x7c ]
call sub_40a018
lea ecx [ esi + 0x4b4 ]
pop esi
jmp sub_40a018
sub_411d11
push ebp
mov ebp esp
sub esp 0xc
cmp [ ebp + 0x10 ] 0x4
push ebx
push edi
mov ebx ecx
jne r-xdata
mov eax 0x80070057
cmp [ ebp + 0x1c ] 0x1
jne r-xdata
push [ ebx + 0x4c8 ]
lea ecx [ ebx + 0x10 ]
call sub_40e5be
test al al
jne r-xdata
push [ ebx + 0x4cc ]
lea ecx [ ebx + 0x30 ]
call sub_40e5be
test al al
je r-xdata
mov eax 0x8007000e
jmp r-xdata
push [ ebx + 0x4d0 ]
lea ecx [ ebx + 0x50 ]
call sub_40e5be
test al al
je r-xdata
pop edi
pop ebx
leave
retn 0x1c
mov eax [ ebx + 0x4d4 ]
lea edi [ ebx + 0x70 ]
push eax
mov ecx edi
call sub_40e5be
test al al
je r-xdata
push [ ebx + 0x4d8 ]
lea ecx [ ebx + 0x4a0 ]
call sub_40e9e4
test al al
je r-xdata
push esi
mov esi [ ebp + 0x8 ]
push [ esi ]
lea ecx [ ebx + 0x10 ]
call sub_40e5fa
push [ esi + 0x4 ]
lea ecx [ ebx + 0x30 ]
call sub_40e5fa
push [ esi + 0x8 ]
lea ecx [ ebx + 0x50 ]
call sub_40e5fa
push [ esi + 0xc ]
mov ecx edi
call sub_40e5fa
mov eax [ ebp + 0x14 ]
push [ eax ]
lea esi [ ebx + 0x4a0 ]
mov ecx esi
call sub_40ea1e
lea ecx [ ebx + 0x10 ]
call sub_40e597
lea ecx [ ebx + 0x30 ]
call sub_40e597
lea ecx [ ebx + 0x50 ]
call sub_40e597
mov ecx edi
call sub_411be2
mov ecx esi
call sub_40e9a3
and [ ebp + 0x8 ] 0x0
lea edi [ ebx + 0x98 ]
mov ecx 0x102
mov eax 0x400
[ edi ]
mov [ ebp + 0x14 ] 0x0
mov [ ebp + 0x1c ] 0x0
xor esi esi
mov esi [ ebp + 0x20 ]
test esi esi
je r-xdata
call sub_40eab7
jmp r-xdata
push [ ebp + 0x1c ]
call sub_411b01
push [ ebp + 0x1c ]
push [ ebp + 0x14 ]
call sub_411b3a
test al al
pop ecx
pop ecx
jne r-xdata
lea ecx [ ebx + 0x4a0 ]
call sub_40e9bb
lea ecx [ ebp - 0xc ]
push ecx
push 0x0
mov [ ebp - 0xc ] eax
mov eax [ esi ]
push esi
mov [ ebp - 0x8 ] edx
call [ eax + 0xc ]
test eax eax
jne r-xdata
mov esi eax
add [ ebp + 0x8 ] esi
cmp esi 0x40000
je r-xdata
mov al [ ebp + 0x1c ]
inc esi
cmp esi 0x40000
mov [ ebp + 0x14 ] al
jb r-xdata
and [ ebp + 0x8 ] eax
cmp [ ebp + 0x8 ] 0x100000
jb r-xdata
lea eax [ ebx + 0x70 ]
push eax
push [ ebp + 0x1c ]
push [ ebp + 0x14 ]
call sub_411b5e
pop ecx
pop ecx
lea ecx [ ebx + eax * 4 + 0x98 ]
call sub_411c1f
cmp eax 0x1
jne r-xdata
lea eax [ ebp + 0x1c ]
push eax
lea ecx [ ebx + 0x10 ]
call sub_411ba6
test al al
lea ecx [ ebx + 0x4a0 ]
je r-xdata
mov al [ ebp + 0x1c ]
mov [ ebp + 0x14 ] al
jmp r-xdata
xor edi edi
cmp [ ebp + 0x1c ] 0xe8
lea eax [ ebx + 0x30 ]
je r-xdata
mov [ ebp - 0x4 ] eax
xor esi esi
lea eax [ ebx + 0x50 ]
xor esi esi
inc esi
jmp r-xdata
movzx eax [ ebp + 0x13 ]
shl edi 0x8
or edi eax
inc esi
cmp esi 0x4
jl r-xdata
mov ecx ebx
call sub_411ce2
mov eax esi
pop esi
jmp r-xdata
mov ecx [ ebp - 0x4 ]
lea eax [ ebp + 0x13 ]
push eax
call sub_411ba6
test al al
je r-xdata
lea esi [ ebx + 0x4a0 ]
mov ecx esi
call sub_40e9bb
sub edi eax
sub edi 0x4
push edi
mov ecx esi
call sub_411b01
mov eax edi
shr eax 0x8
push eax
mov ecx esi
call sub_411b01
mov eax edi
shr eax 0x10
push eax
mov ecx esi
call sub_411b01
shr edi 0x18
push edi
mov ecx esi
mov [ ebp - 0x4 ] edi
call sub_411b01
mov al [ ebp - 0x4 ]
add [ ebp + 0x8 ] 0x4
mov [ ebp + 0x14 ] al
jmp r-xdata
sub_411f85
mov eax r-xdata
call sub_4121e4
sub esp 0xc
push ebx
push esi
push edi
mov [ ebp - 0x10 ] esp
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
call sub_411d11
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn 0x20
sub_412002
push esi
mov esi ecx
push edi
mov [ esi + 0x4 ] r--data
xor edi edi
mov [ esi + 0x8 ] edi
lea ecx [ esi + 0x10 ]
mov [ esi ] r--data
mov [ esi + 0x4 ] r--data
call sub_40e5ab
lea ecx [ esi + 0x30 ]
call sub_40e5ab
lea ecx [ esi + 0x50 ]
call sub_40e5ab
lea ecx [ esi + 0x70 ]
call sub_40e5ab
lea eax [ esi + 0x4a0 ]
mov [ eax ] edi
mov [ eax + 0x4 ] edi
mov [ eax + 0x14 ] edi
mov [ eax + 0x20 ] edi
mov eax 0x100000
mov [ esi + 0x4c8 ] eax
mov [ esi + 0x4cc ] eax
mov [ esi + 0x4d0 ] eax
mov [ esi + 0x4d4 ] eax
pop edi
mov [ esi + 0x4d8 ] 0x10000
mov eax esi
pop esi
retn
sub_41207c
push ebp
mov ebp esp
push r--data
push [ ebp + 0xc ]
call sub_401459
test eax eax
pop ecx
pop ecx
je r-xdata
push r--data
push [ ebp + 0xc ]
call sub_401459
test eax eax
pop ecx
pop ecx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx eax
neg ecx
lea edx [ eax + 0x4 ]
sbb ecx ecx
and ecx edx
mov edx [ ebp + 0x10 ]
mov [ edx ] ecx
mov ecx [ eax ]
push eax
call [ ecx + 0x4 ]
xor eax eax
jmp r-xdata
mov eax 0x80004002
pop ebp
retn 0xc
sub_4120d5
push esi
mov esi ecx
lea ecx [ esi + 0x4a0 ]
call sub_411bcb
lea ecx [ esi + 0x70 ]
call sub_411ccb
lea ecx [ esi + 0x50 ]
call sub_411ccb
lea ecx [ esi + 0x30 ]
call sub_411ccb
lea ecx [ esi + 0x10 ]
pop esi
jmp sub_411ccb
sub_41211d
push esi
mov esi [ esp + 0x8 ]
dec [ esi + 0x8 ]
mov eax [ esi + 0x8 ]
jne r-xdata
pop esi
retn 0x4
mov ecx esi
call sub_4120d5
push esi
call ??3@YAXPAX@Z
pop ecx
xor eax eax
sub_412170
push ecx
cmp eax 0x1000
lea ecx [ esp + 0x8 ]
jb r-xdata
sub ecx eax
mov eax esp
test [ ecx ] eax
mov esp ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
push eax
retn
sub ecx 0x1000
sub eax 0x1000
test [ ecx ] eax
cmp eax 0x1000
jae r-xdata
sub_412210
push edi
push esi
push ebx
xor edi edi
mov eax [ esp + 0x14 ]
or eax eax
jge r-xdata
mov eax [ esp + 0x1c ]
or eax eax
jge r-xdata
inc edi
mov edx [ esp + 0x10 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x14 ] eax
mov [ esp + 0x10 ] edx
or eax eax
jne r-xdata
inc edi
mov edx [ esp + 0x18 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x1c ] eax
mov [ esp + 0x18 ] edx
mov ebx eax
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x14 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x10 ]
div ecx
mov edx ebx
jmp r-xdata
shr ebx 0x1
rcr ecx 0x1
shr edx 0x1
rcr eax 0x1
or ebx ebx
jne r-xdata
div ecx
mov esi eax
mul [ esp + 0x1c ]
mov ecx eax
mov eax [ esp + 0x18 ]
mul esi
add edx ecx
jb r-xdata
dec edi
jne r-xdata
dec esi
cmp edx [ esp + 0x14 ]
ja r-xdata
pop ebx
pop esi
pop edi
retn 0x10
neg edx
neg eax
sbb edx 0x0
jb r-xdata
xor edx edx
mov eax esi
cmp eax [ esp + 0x10 ]
jbe r-xdata
sub_4122c0
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
or ecx eax
mov ecx [ esp + 0xc ]
jne r-xdata
push ebx
mul ecx
mov ebx eax
mov eax [ esp + 0x8 ]
mul [ esp + 0x14 ]
add ebx eax
mov eax [ esp + 0x8 ]
mul ecx
add edx ebx
pop ebx
retn 0x10
mov eax [ esp + 0x4 ]
mul ecx
retn 0x10
sub_412320
cmp cl 0x40
jae r-xdata
xor eax eax
xor edx edx
retn
cmp cl 0x20
jae r-xdata
mov edx eax
xor eax eax
and cl 0x1f
shl edx cl
retn
shld edx eax cl
shl eax cl
retn
sub_412340
cmp cl 0x40
jae r-xdata
xor eax eax
xor edx edx
retn
cmp cl 0x20
jae r-xdata
mov eax edx
xor edx edx
and cl 0x1f
shr eax cl
retn
shrd eax edx cl
shr edx cl
retn
_start
push ebp
mov ebp esp
push 0xffffffff
push r--data
push _except_handler3
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x68
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
xor ebx ebx
mov [ ebp - 0x4 ] ebx
push 0x2
call [ __set_app_type@IAT ]
pop ecx
or [ rw-data ] 0xffffffff
or [ rw-data ] 0xffffffff
call [ __p__fmode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
call [ __p__commode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
mov eax [ _adjust_fdiv@IAT ]
mov eax [ eax ]
mov [ rw-data ] eax
call sub_4124eb
cmp [ rw-data ] ebx
jne r-xdata
call sub_4124d6
push rw-data
push rw-data
call _initterm
mov eax [ rw-data ]
mov [ ebp - 0x6c ] eax
lea eax [ ebp - 0x6c ]
push eax
push [ rw-data ]
lea eax [ ebp - 0x64 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
lea eax [ ebp - 0x60 ]
push eax
call [ __getmainargs@IAT ]
push rw-data
push rw-data
call _initterm
add esp 0x24
mov eax [ _acmdln@IAT ]
mov esi [ eax ]
mov [ ebp - 0x74 ] esi
cmp [ esi ] 0x22
jne r-xdata
push sub_4124e8
call [ __setusermatherr@IAT ]
pop ecx
cmp [ esi ] 0x20
jbe r-xdata
inc esi
mov [ ebp - 0x74 ] esi
mov al [ esi ]
cmp al bl
je r-xdata
mov al [ esi ]
cmp al bl
je r-xdata
inc esi
mov [ ebp - 0x74 ] esi
jmp r-xdata
cmp [ esi ] 0x22
jne r-xdata
cmp al 0x22
jne r-xdata
mov [ ebp - 0x30 ] ebx
lea eax [ ebp - 0x5c ]
push eax
call [ GetStartupInfoA@IAT ]
test [ ebp - 0x30 ] 0x1
je r-xdata
cmp al 0x20
jbe r-xdata
inc esi
mov [ ebp - 0x74 ] esi
push 0xa
pop eax
movzx eax [ ebp - 0x2c ]
jmp r-xdata
push eax
push esi
push ebx
push ebx
call [ GetModuleHandleA@IAT ]
push eax
call sub_40646e
mov [ ebp - 0x68 ] eax
push eax
call [ exit@IAT ]
sub_412500
push ebx
push ebp
push esi
push edi
mov eax ecx
mov edi [ esp + 0x14 ]
mov ebp [ esp + 0x18 ]
test edi edi
je r-xdata
test edi edi
je r-xdata
test edx 0x7
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn 0x8
movzx esi [ edx ]
inc edx
movzx ebx al
xor esi ebx
shr eax 0x8
xor eax [ ebp + esi * 4 ]
dec edi
jmp r-xdata
cmp edi 0x10
jb r-xdata
movzx esi [ edx ]
inc edx
movzx ebx al
xor esi ebx
shr eax 0x8
xor eax [ ebp + esi * 4 ]
dec edi
jne r-xdata
add edi edx
mov [ esp + 0x14 ] edi
sub edi 0x8
and edi 0xfffffff8
sub edx edi
xor eax [ edx + edi ]
mov ecx [ edx + edi + 0x4 ]
nop
mov esi [ edx + edi + 0x8 ]
movzx ebx cl
xor esi [ ebp + ebx * 4 + 0xc00 ]
movzx ebx ch
xor esi [ ebp + ebx * 4 + 0x800 ]
shr ecx 0x10
movzx ebx cl
movzx ecx ch
xor esi [ ebp + ebx * 4 + 0x400 ]
movzx ebx al
xor esi [ ebp + ecx * 4 ]
mov ecx [ edx + edi + 0xc ]
xor esi [ ebp + ebx * 4 + 0x1c00 ]
movzx ebx ah
shr eax 0x10
xor esi [ ebp + ebx * 4 + 0x1800 ]
movzx ebx al
xor esi [ ebp + ebx * 4 + 0x1400 ]
movzx ebx ah
mov eax [ ebp + ebx * 4 + 0x1000 ]
xor eax esi
add edx 0x8
jne r-xdata
xor eax [ edx + edi ]
mov edx edi
mov edi [ esp + 0x14 ]
sub edi edx
sub_4125db
add eax 0x0
push ebx
push ebp
push esi
push edi
mov eax ecx
mov edi [ esp + 0x14 ]
mov ebp [ esp + 0x18 ]
test edi edi
je r-xdata
test edi edi
je r-xdata
test edx 0x7
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn 0x8
movzx esi [ edx ]
inc edx
movzx ebx al
xor esi ebx
shr eax 0x8
xor eax [ ebp + esi * 4 ]
dec edi
jmp r-xdata
cmp edi 0x10
jb r-xdata
movzx esi [ edx ]
inc edx
movzx ebx al
xor esi ebx
shr eax 0x8
xor eax [ ebp + esi * 4 ]
dec edi
jne r-xdata
add edi edx
mov [ esp + 0x14 ] edi
sub edi 0x8
and edi 0xfffffff8
sub edx edi
xor eax [ edx + edi ]
add eax 0x0
movzx ecx al
movzx ebx ah
shr eax 0x10
movzx esi ah
and eax 0xff
mov ecx [ ebp + ecx * 4 + 0xc00 ]
xor ecx [ edx + edi + 0x4 ]
xor ecx [ ebp + ebx * 4 + 0x800 ]
xor ecx [ ebp + esi * 4 ]
xor ecx [ ebp + eax * 4 + 0x400 ]
movzx eax cl
movzx ebx ch
shr ecx 0x10
movzx esi ch
and ecx 0xff
mov eax [ ebp + eax * 4 + 0xc00 ]
xor eax [ edx + edi + 0x8 ]
xor eax [ ebp + ebx * 4 + 0x800 ]
xor eax [ ebp + esi * 4 ]
xor eax [ ebp + ecx * 4 + 0x400 ]
add edx 0x8
jne r-xdata
xor eax [ edx + edi ]
mov edx edi
mov edi [ esp + 0x14 ]
sub edi edx
sub_40108b
push [ esp + 0x4 ]
call sub_401000
sub_4010c7
mov eax [ esp + 0x4 ]
and [ eax + 0x18 ] 0x0
cmp [ esp + 0x8 ] 0x0
jne r-xdata
xor eax eax
retn 0x8
mov [ eax + 0x18 ] 0x1
sub_40143b
push ebp
mov ebp esp
push [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
call sub_4012de
push [ ebp + 0x10 ]
mov ecx [ ebp + 0x8 ]
call sub_4013c9
mov eax [ ebp + 0x8 ]
pop ebp
retn
sub_4014b5
mov eax [ esp + 0x4 ]
inc [ eax + 0x4 ]
mov eax [ eax + 0x4 ]
retn 0x4
sub_4014c2
mov ecx [ esp + 0x4 ]
dec [ ecx + 0x4 ]
mov eax [ ecx + 0x4 ]
jne r-xdata
retn 0x4
mov eax [ ecx ]
push 0x1
call [ eax + 0x18 ]
xor eax eax
sub_401b29
cmp [ esp + 0x4 ] 0x0
je r-xdata
retn
push 0x8000
push 0x0
push [ esp + 0xc ]
call [ VirtualFree@IAT ]
sub_401b42
cmp [ esp + 0x4 ] 0x0
je r-xdata
retn
jmp [ free@IAT ]
sub_402175
and [ rw-data ] 0x0
push r--data
push r--data
call [ LoadLibraryA@IAT ]
push eax
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
retn
push rw-data
call eax
mov [ rw-data ] 0x1
sub_402342
mov edx [ esp + 0x4 ]
push esi
mov esi [ esp + 0xc ]
mov eax edx
mov cl [ esi ]
mov [ edx ] cl
inc edx
inc esi
test cl cl
jne r-xdata
pop esi
retn
sub_402482
push [ esp + 0x4 ]
call sub_402418
test eax eax
pop ecx
jne r-xdata
push 0x4
push 0x1000
push [ esp + 0xc ]
push 0x0
call [ VirtualAlloc@IAT ]
retn
retn
sub_4024a5
push [ esp + 0x4 ]
call sub_402418
test eax eax
pop ecx
jne r-xdata
jmp [ malloc@IAT ]
retn
sub_4025ce
mov eax [ esp + 0x4 ]
push esi
mov esi ecx
cmp eax [ esi + 0x8 ]
jl r-xdata
mov eax [ esi ]
pop esi
retn 0x4
push eax
call sub_402284
sub_4026bb
mov eax [ esp + 0x8 ]
push [ eax ]
mov eax [ esp + 0x8 ]
push [ eax ]
call sub_40e7f0
neg eax
pop ecx
sbb eax eax
pop ecx
inc eax
retn
sub_403ad1
push 0x1
push [ ecx + 0x4 ]
call [ EndDialog@IAT ]
retn
sub_403add
push 0x0
push [ ecx + 0x4 ]
call [ EndDialog@IAT ]
retn
sub_403ae9
push esi
mov esi ecx
call sub_4065d9
mov [ esi ] r--data
mov [ esi + 0x38 ] 0x7d6
mov eax esi
pop esi
retn
sub_403d9c
push 0x10
push r--data
push r--data
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
sub_403dc9
mov eax [ ecx + 0x8 ]
mov ecx [ esp + 0x8 ]
mov edx [ ecx ]
add edx [ esp + 0x4 ]
cmp edx eax
jle r-xdata
retn 0x8
sub eax [ esp + 0x4 ]
mov [ ecx ] eax
sub_403de3
push esi
mov esi ecx
call sub_403db3
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call ??3@YAXPAX@Z
pop ecx
sub_403dff
push esi
mov esi ecx
push [ esi + 0x3c ]
call ??3@YAXPAX@Z
pop ecx
mov ecx esi
pop esi
jmp sub_406632
sub_403f20
push esi
mov esi ecx
call sub_4065d9
lea ecx [ esi + 0x3c ]
mov [ esi ] r--data
call sub_4013f8
mov [ esi + 0x38 ] 0x7d5
mov eax esi
pop esi
retn
sub_403f41
push esi
mov esi ecx
call sub_403dff
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call ??3@YAXPAX@Z
pop ecx
sub_404693
mov eax ecx
mov [ eax + 0x4 ] r--data
and [ eax + 0x8 ] 0x0
mov [ eax ] r--data
mov [ eax + 0x4 ] r--data
or [ eax + 0xc ] 0xffffffff
retn
sub_40471e
mov ecx [ esp + 0x4 ]
dec [ ecx + 0x8 ]
mov eax [ ecx + 0x8 ]
jne r-xdata
retn 0x4
mov eax [ ecx ]
push 0x1
call [ eax + 0x14 ]
xor eax eax
sub_404736
push esi
mov esi ecx
call sub_40de00
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call ??3@YAXPAX@Z
pop ecx
sub_404752
sub [ esp + 0x4 ] 0x4
jmp sub_4046b2
sub_40475c
sub [ esp + 0x4 ] 0x4
jmp sub_40471e
sub_406496
or [ ebp - 0x4 ] 0xffffffff
mov eax r-xdata
retn
sub_4064b4
call [ GetLastError@IAT ]
test eax eax
jne r-xdata
retn
inc eax
sub_4064c0
xor eax eax
cmp [ esp + 0x4 ] eax
jne r-xdata
retn
jmp sub_4064b4
sub_40654d
mov eax [ esp + 0x4 ]
push [ eax ]
call [ SetEvent@IAT ]
push eax
call sub_4064c0
pop ecx
retn
sub_406588
push [ esp + 0x8 ]
push 0x0
push [ esp + 0xc ]
call sub_406527
add esp 0xc
retn
sub_4065a9
push [ esp + 0x4 ]
call [ InitializeCriticalSection@IAT ]
xor eax eax
retn
sub_4065b6
push [ esp + 0x4 ]
push [ ecx + 0x4 ]
call [ GetDlgItem@IAT ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push eax
call [ SendMessageW@IAT ]
retn 0x10
sub_406632
mov [ ecx ] r--data
retn
sub_4068b3
push [ esp + 0x8 ]
push [ esp + 0x8 ]
call [ SetWindowTextW@IAT ]
push [ esp + 0x4 ]
call sub_403a5a
pop ecx
retn 0x8
sub_4070ee
mov eax [ esp + 0x4 ]
retn
sub_4070f3
push esi
push [ esp + 0xc ]
mov esi ecx
push [ esp + 0xc ]
push [ esi + 0x4 ]
call [ GetDlgItem@IAT ]
push eax
mov ecx esi
call sub_4068b3
pop esi
retn 0x8
sub_407113
push esi
mov esi ecx
call sub_4065d9
mov [ esi ] r--data
mov [ esi + 0x38 ] 0x7d1
mov eax esi
pop esi
retn
sub_40712c
push esi
mov esi ecx
call sub_4065d9
mov [ esi ] r--data
mov [ esi + 0x38 ] 0x7d2
mov eax esi
pop esi
retn
sub_407145
push esi
mov esi ecx
call sub_40712c
mov [ esi ] r--data
mov [ esi + 0x38 ] 0x7d3
mov eax esi
pop esi
retn
sub_40715e
push esi
mov esi ecx
call sub_4065d9
mov [ esi ] r--data
mov [ esi + 0x38 ] 0x7d4
mov eax esi
pop esi
retn
sub_407177
push esi
mov esi ecx
call sub_406632
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call ??3@YAXPAX@Z
pop ecx
sub_407f5d
call sub_407cee
push 0x10
call [ MessageBeep@IAT ]
xor eax eax
retn
sub_407f6d
push esi
mov esi ecx
call sub_407cee
push 0x4b4
mov ecx esi
call sub_406739
push 0x30
call [ MessageBeep@IAT ]
xor eax eax
pop esi
retn
sub_408636
push rw-data
push [ esp + 0x8 ]
call [ rw-data ]
retn 0x4
sub_4086d8
push esi
mov esi ecx
call sub_40e909
lea ecx [ esi + 0x14 ]
call sub_40e909
lea ecx [ esi + 0x28 ]
call sub_40e909
lea ecx [ esi + 0x3c ]
pop esi
jmp sub_40e909
sub_40870e
mov ecx [ esp + 0x4 ]
dec [ ecx + 0x4 ]
mov eax [ ecx + 0x4 ]
jne r-xdata
retn 0x4
push ecx
call ??3@YAXPAX@Z
pop ecx
xor eax eax
sub_408788
push esi
mov esi ecx
mov [ esi ] r--data
call sub_40e909
mov ecx esi
pop esi
jmp sub_40e988
sub_40879e
push esi
mov esi ecx
mov [ esi ] r--data
call sub_40e909
mov ecx esi
pop esi
jmp sub_40e988
sub_4087ed
push esi
mov esi ecx
call sub_408788
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call ??3@YAXPAX@Z
pop ecx
sub_408809
push esi
mov esi ecx
call sub_40879e
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call ??3@YAXPAX@Z
pop ecx
sub_408825
push esi
mov esi ecx
call sub_4087b4
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call ??3@YAXPAX@Z
pop ecx
sub_408976
push esi
mov esi ecx
lea ecx [ esi + 0x3c ]
call sub_40e988
lea ecx [ esi + 0x28 ]
call sub_40e988
lea ecx [ esi + 0x14 ]
call sub_40e988
mov ecx esi
pop esi
jmp sub_40e988
sub_408a5f
push esi
mov esi ecx
lea ecx [ esi + 0x50 ]
call sub_40e988
mov ecx esi
pop esi
jmp sub_408976
sub_408b37
mov eax [ esp + 0x4 ]
inc [ eax + 0x8 ]
mov eax [ eax + 0x8 ]
retn 0x4
sub_408b44
push [ esp + 0xc ]
mov eax [ ecx + 0x7c ]
mov ecx [ esp + 0x8 ]
push [ esp + 0xc ]
mov ecx [ eax + ecx * 4 ]
call sub_40d014
retn 0xc
sub_408c28
push esi
mov esi ecx
lea ecx [ esi + 0x74 ]
call sub_40879e
lea ecx [ esi + 0x5c ]
call sub_408788
lea ecx [ esi + 0xc ]
pop esi
jmp sub_408976
sub_408d09
push esi
mov esi ecx
call sub_408a72
xor eax eax
mov [ esi + 0x54 ] eax
mov [ esi + 0x58 ] eax
mov [ esi + 0x5c ] eax
mov [ esi + 0x60 ] 0x8
mov [ esi + 0x50 ] r--data
mov eax esi
pop esi
retn
sub_409473
mov eax [ ecx + 0x190 ]
mov edx [ esp + 0x4 ]
mov edx [ eax + edx * 4 ]
add edx [ esp + 0x8 ]
push esi
mov esi [ ecx + 0x17c ]
mov eax [ esi + edx * 8 ]
add eax [ ecx + 0x148 ]
mov edx [ esi + edx * 8 + 0x4 ]
adc edx [ ecx + 0x14c ]
pop esi
retn 0x8
sub_4094a2
push esi
mov esi ecx
call sub_40945d
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call ??3@YAXPAX@Z
pop ecx
sub_4094be
push esi
mov esi ecx
lea ecx [ esi + 0x8 ]
call sub_40e988
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call ??3@YAXPAX@Z
pop ecx
sub_409613
push esi
mov esi ecx
call sub_40e909
push [ esp + 0x8 ]
mov ecx esi
call sub_4094dd
pop esi
retn 0x4
sub_409b6c
or [ ebp - 0x4 ] 0xffffffff
mov eax sub_409b76
retn
sub_409b76
mov eax 0x8007000e
sub_409b7b
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
add ebp 0x64
leave
retn 0x14
sub_409bb5
mov eax [ esp + 0x4 ]
cmp eax [ ecx + 0x120 ]
jge r-xdata
xor eax eax
mov ecx [ ecx + 0x124 ]
cmp [ eax + ecx ] 0x0
je r-xdata
xor eax eax
inc eax
jmp r-xdata
retn 0x4
sub_409cbc
sub [ esp + 0x4 ] 0x4
jmp sub_409c4e
sub_409f63
mov ecx [ esp + 0x4 ]
dec [ ecx + 0x4 ]
mov eax [ ecx + 0x4 ]
jne r-xdata
retn 0x4
push 0x1
call sub_409bd7
xor eax eax
sub_409fe5
sub [ esp + 0x4 ] 0x4
jmp sub_409f7b
sub_409fef
mov eax [ esp + 0x8 ]
and [ eax ] 0x0
xor eax eax
retn 0x8
sub_409ffb
mov eax 0x80004001
retn 0x14
sub_40a003
mov eax [ esp + 0xc ]
and [ eax ] 0x0
xor eax eax
retn 0xc
sub_40a010
mov eax 0x80004001
retn 0x8
sub_40a116
push esi
mov esi ecx
call sub_40af5a
mov ecx esi
call sub_40ac53
mov ecx esi
pop esi
jmp sub_40af9c
sub_40a140
mov eax [ esp + 0x4 ]
mov eax [ eax + 0x7c ]
mov ecx [ esp + 0x8 ]
mov [ ecx ] eax
xor eax eax
retn 0x8
sub_40a17e
or [ ebp - 0x4 ] 0xffffffff
mov eax sub_40a188
retn
sub_40a188
mov eax 0x8007000e
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn 0x4
sub_40a222
push esi
mov esi ecx
mov [ esi ] r--data
call sub_40e909
mov ecx esi
pop esi
jmp sub_40e988
sub_40a274
push esi
mov esi ecx
mov [ esi ] r--data
call sub_40e909
mov ecx esi
pop esi
jmp sub_40e988
sub_40a28a
push esi
mov esi ecx
mov [ esi ] r--data
call sub_40e909
mov ecx esi
pop esi
jmp sub_40e988
sub_40a2a0
push esi
mov esi ecx
call sub_40a222
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call ??3@YAXPAX@Z
pop ecx
sub_40a2e3
push esi
mov esi ecx
call sub_40a25e
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call ??3@YAXPAX@Z
pop ecx
sub_40a2ff
push esi
mov esi ecx
call sub_40a274
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call ??3@YAXPAX@Z
pop ecx
sub_40a33b
push esi
mov esi ecx
call sub_40a28a
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call ??3@YAXPAX@Z
pop ecx
sub_40a357
push esi
mov esi ecx
lea ecx [ esi + 0x3c ]
call sub_40e988
lea ecx [ esi + 0x28 ]
call sub_40e988
lea ecx [ esi + 0x14 ]
call sub_40e988
mov ecx esi
pop esi
jmp sub_40a222
sub_40a3dc
mov eax ecx
xor ecx ecx
mov [ eax ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] ecx
mov [ eax + 0x14 ] 0x4
mov [ eax + 0x4 ] r--data
retn
sub_40a607
mov eax [ ecx + 0x1c8 ]
mov edx [ esp + 0x4 ]
mov eax [ eax + edx * 4 ]
cmp eax 0xffffffff
je r-xdata
xor al al
mov ecx [ ecx + 0x58 ]
mov ecx [ ecx + eax * 4 ]
call sub_40a413
jmp r-xdata
retn 0x4
sub_40a7ba
or [ ebp - 0x4 ] 0xffffffff
mov eax sub_40a7c4
retn
sub_40a7c4
mov eax 0x8007000e
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn 0x10
sub_40a898
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x10 ]
mov [ ebp - 0x14 ] 0x1
and [ ebp - 0x4 ] 0x0
mov eax r-xdata
retn
sub_40a8b7
or [ ebp - 0x4 ] 0xffffffff
mov eax sub_40a8c1
retn
sub_40a8c1
mov eax 0x8007000e
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn 0x10
sub_40a9f4
push esi
mov esi ecx
and [ esi + 0x4 ] 0x0
mov [ esi ] r--data
and [ esi + 0x8 ] 0x0
lea ecx [ esi + 0x10 ]
call sub_40a970
mov [ esi + 0x1e0 ] 0x4
mov eax esi
pop esi
retn
sub_40aa5f
push esi
mov esi ecx
lea ecx [ esi + 0x10 ]
call sub_40a8d7
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
pop esi
retn
mov eax [ esi ]
push esi
call [ eax + 0x8 ]
sub_40aaba
mov edx [ ecx + 0x8 ]
cmp edx [ ecx + 0x4 ]
jb r-xdata
mov eax [ ecx ]
mov al [ edx + eax ]
inc edx
mov [ ecx + 0x8 ] edx
retn
jmp sub_40aa9a
sub_40abe0
mov eax [ ecx + 0x8 ]
lea edx [ eax + 0x4 ]
cmp edx [ ecx + 0x4 ]
jbe r-xdata
push esi
mov esi [ ecx ]
mov eax [ eax + esi ]
mov [ ecx + 0x8 ] edx
pop esi
retn
jmp sub_40aa9a
sub_40ad36
push esi
mov esi ecx
call sub_40e988
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call ??3@YAXPAX@Z
pop ecx
sub_40ad52
push esi
mov esi ecx
call sub_40acd2
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call ??3@YAXPAX@Z
pop ecx
sub_40ad6e
push esi
mov esi ecx
push [ esi + 0x8 ]
call ??3@YAXPAX@Z
and [ esi + 0x8 ] 0x0
and [ esi + 0x4 ] 0x0
pop ecx
pop esi
retn
j_sub_40a018
jmp sub_40a018
sub_40b352
push esi
mov esi ecx
lea ecx [ esi + 0x10 ]
call sub_4013f8
xor al al
mov [ esi + 0x1d ] al
mov [ esi + 0x1e ] al
mov [ esi + 0x1f ] al
mov [ esi + 0x1c ] 0x1
mov eax esi
pop esi
retn
sub_40b53e
push esi
mov esi ecx
jmp r-xdata
mov ecx [ esi + 0x18 ]
call sub_40ab35
or eax edx
jne r-xdata
mov ecx [ esi + 0x18 ]
call sub_40adc1
pop esi
retn 0x4
sub_40b96c
push esi
push [ esp + 0x8 ]
mov esi ecx
and [ esi + 0x4 ] 0x0
and [ esi + 0x8 ] 0x0
mov [ esi ] r--data
call sub_40b0bf
mov eax esi
pop esi
retn 0x4
sub_40bad9
push esi
mov esi ecx
call sub_40bac3
push [ esp + 0x10 ]
mov ecx [ esp + 0xc ]
push [ esp + 0x10 ]
mov [ esi ] ecx
call sub_40b9e0
mov [ esi + 0x4 ] 0x1
pop esi
retn 0xc
sub_40be39
push esi
mov esi ecx
call sub_40e909
push [ esp + 0x8 ]
mov ecx esi
call sub_40bb83
pop esi
retn 0x4
sub_40cca7
or [ ebp - 0x4 ] 0xffffffff
mov eax r-xdata
retn
sub_40ce3f
mov eax ecx
mov ecx [ esp + 0x4 ]
mov [ eax ] r--data
mov edx [ ecx + 0x4 ]
mov [ eax + 0x4 ] edx
mov edx [ ecx + 0x8 ]
mov [ eax + 0x8 ] edx
mov edx [ ecx + 0xc ]
mov [ eax + 0xc ] edx
mov cl [ ecx + 0x10 ]
mov [ eax + 0x10 ] cl
retn 0x4
sub_40d3f7
push esi
mov esi ecx
call sub_40e909
push [ esp + 0x8 ]
mov ecx esi
call sub_40ce66
pop esi
retn 0x4
sub_40d503
push 0x0
call sub_40ce9f
retn
sub_40d50b
push esi
mov esi ecx
call sub_40e909
push [ esp + 0x8 ]
mov ecx esi
call sub_40d40e
pop esi
retn 0x4
sub_40d6fa
push esi
mov esi ecx
call sub_40d6bc
mov eax [ esi + 0x7c ]
mov ecx [ esi + 0x80 ]
mov ecx [ ecx + eax * 4 - 0x4 ]
push [ esp + 0x8 ]
add ecx 0x14
call sub_408761
pop esi
retn 0x4
sub_40d71f
push esi
mov esi ecx
call sub_40d6bc
mov eax [ esi + 0x7c ]
mov ecx [ esi + 0x80 ]
mov ecx [ ecx + eax * 4 - 0x4 ]
push [ esp + 0x8 ]
add ecx 0x18
call sub_408761
pop esi
retn 0x4
sub_40d8b2
mov eax [ rw-data ]
cmp eax 0x40
jae r-xdata
retn
mov ecx [ esp + 0x4 ]
mov [ eax * 4 + rw-data ] ecx
inc eax
mov [ rw-data ] eax
sub_40da6a
push [ esp + 0xc ]
push 0x0
push [ esp + 0x10 ]
push [ esp + 0x10 ]
call sub_40da1f
retn 0xc
j_sub_40d9b4
jmp sub_40d9b4
sub_40dabe
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push 0x80000000
push [ esp + 0x14 ]
call sub_40da85
retn 0x10
sub_40dadb
mov al [ esp + 0x8 ]
neg al
push 0x80
push 0x3
sbb eax eax
and eax 0x2
or eax 0x1
push eax
push [ esp + 0x10 ]
call sub_40dabe
retn 0x8
sub_40dafd
push 0x0
push [ esp + 0x8 ]
call sub_40dadb
retn 0x4
sub_40db38
push ebp
mov ebp esp
mov eax [ rw-data ]
cmp [ ebp + 0xc ] eax
jbe r-xdata
pop ebp
jmp sub_40db0b
mov [ ebp + 0xc ] eax
sub_40db4e
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push 0x40000000
push [ esp + 0x14 ]
call sub_40da85
retn 0x10
sub_40db6b
push 0x80
push [ esp + 0xc ]
push 0x1
push [ esp + 0x10 ]
call sub_40db4e
retn 0x8
sub_40db82
xor eax eax
cmp [ esp + 0x8 ] al
setne al
inc eax
push eax
push [ esp + 0x8 ]
call sub_40db6b
retn 0x8
sub_40db99
push [ esp + 0xc ]
push [ esp + 0xc ]
push [ esp + 0xc ]
push [ ecx ]
call [ SetFileTime@IAT ]
neg eax
sbb eax eax
neg eax
retn 0xc
sub_40dbb6
push [ esp + 0x4 ]
push 0x0
push 0x0
call sub_40db99
retn 0x4
sub_40dc00
push [ ecx ]
call [ SetEndOfFile@IAT ]
neg eax
sbb eax eax
neg eax
retn
sub_40dc71
add ecx 0xc
jmp sub_40dafd
sub_40dcf7
mov ecx [ esp + 0x4 ]
push [ esp + 0x8 ]
add ecx 0x8
call sub_40d9d4
push eax
call sub_40dc4a
pop ecx
retn 0x8
sub_40de00
mov [ ecx ] r--data
mov [ ecx + 0x4 ] r--data
add ecx 0xc
jmp j_sub_40d9b4
sub_40de60
xor eax eax
mov [ ecx + 0x48 ] eax
mov [ ecx + 0x4c ] eax
mov [ ecx + 0x38 ] al
mov ecx [ ecx + 0x58 ]
mov eax [ ecx ]
push ecx
call [ eax + 0xc ]
retn
sub_40def4
mov eax [ esp + 0x4 ]
inc [ eax + 0x1c ]
mov eax [ eax + 0x1c ]
retn 0x4
sub_40df01
sub [ esp + 0x4 ] 0xc
jmp sub_40def4
sub_40df0b
sub [ esp + 0x4 ] 0x10
jmp sub_40def4
sub_40df15
sub [ esp + 0x4 ] 0x14
jmp sub_40def4
sub_40df1f
sub [ esp + 0x4 ] 0x18
jmp sub_40def4
sub_40df29
sub [ esp + 0x4 ] 0x4
jmp sub_40def4
sub_40df33
sub [ esp + 0x4 ] 0x8
jmp sub_40def4
sub_40e159
push esi
mov esi [ esp + 0x8 ]
push [ esp + 0xc ]
and [ esi + 0x20 ] 0x0
lea ecx [ esi + 0x1c ]
call sub_408761
lea ecx [ esi - 0xc ]
call sub_40de60
pop esi
retn 0x8
sub_40e17a
mov ecx [ esp + 0x4 ]
add ecx 0x1c
call sub_40a018
xor eax eax
retn 0x4
sub_40e316
mov ecx [ esp + 0x4 ]
add ecx 0x20
call sub_40a018
xor eax eax
retn 0x4
sub_40e431
push [ esp + 0xc ]
mov eax [ esp + 0x8 ]
mov eax [ eax + 0x3c ]
push [ esp + 0xc ]
mov ecx [ eax ]
push eax
call [ ecx + 0xc ]
retn 0xc
sub_40e449
sub [ esp + 0x4 ] 0x4
jmp sub_40df3d
sub_40e453
sub [ esp + 0x4 ] 0x8
jmp sub_40df3d
sub_40e45d
sub [ esp + 0x4 ] 0xc
jmp sub_40df3d
sub_40e467
sub [ esp + 0x4 ] 0x10
jmp sub_40df3d
sub_40e471
sub [ esp + 0x4 ] 0x14
jmp sub_40df3d
sub_40e47b
sub [ esp + 0x4 ] 0x18
jmp sub_40df3d
sub_40e549
sub [ esp + 0x4 ] 0x18
jmp sub_40e528
sub_40e553
sub [ esp + 0x4 ] 0x4
jmp sub_40e528
sub_40e55d
sub [ esp + 0x4 ] 0x8
jmp sub_40e528
sub_40e567
sub [ esp + 0x4 ] 0xc
jmp sub_40e528
sub_40e571
sub [ esp + 0x4 ] 0x10
jmp sub_40e528
sub_40e57b
sub [ esp + 0x4 ] 0x14
jmp sub_40e528
sub_40e585
push esi
mov esi ecx
push [ esi + 0x8 ]
call sub_401b29
and [ esi + 0x8 ] 0x0
pop ecx
pop esi
retn
sub_40e6cb
push [ esp + 0x8 ]
mov ecx [ esp + 0x8 ]
call sub_4012de
mov ecx [ esp + 0x4 ]
push 0x5c
push 0x2f
call sub_40e68c
mov eax [ esp + 0x4 ]
retn
sub_40e81f
mov edx [ ecx + 0x8 ]
mov eax [ ecx ]
push 0x1
dec edx
push edx
call [ eax + 0x4 ]
retn
sub_40e82c
mov edx [ ecx + 0x8 ]
sub edx [ esp + 0x4 ]
mov eax [ ecx ]
push edx
push [ esp + 0x8 ]
call [ eax + 0x4 ]
retn 0x4
sub_40e96a
push esi
mov esi ecx
call sub_40e909
push [ esi + 0xc ]
call ??3@YAXPAX@Z
xor eax eax
pop ecx
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] eax
pop esi
retn
sub_40e993
push esi
mov esi ecx
push [ esi ]
call sub_401b29
and [ esi ] 0x0
pop ecx
pop esi
retn
sub_40e9a3
mov edx [ ecx + 0x10 ]
xor eax eax
mov [ ecx + 0xc ] eax
mov [ ecx + 0x8 ] edx
mov [ ecx + 0x4 ] eax
mov [ ecx + 0x18 ] eax
mov [ ecx + 0x1c ] eax
mov [ ecx + 0x24 ] al
retn
sub_40ea1e
add ecx 0x14
jmp sub_408761
sub_40eb48
mov eax [ ecx ]
push 0x0
push 0x0
push ecx
call [ eax + 0xc ]
retn
j_sub_40ec94
jmp sub_40ec94
sub_40ed06
push esi
mov esi ecx
call j_sub_40ec94
test eax eax
jge r-xdata
pop esi
retn
mov [ esi ] 0xa
mov [ esi + 0x8 ] eax
sub_40ed88
push esi
mov esi ecx
cmp [ esi ] 0x13
je r-xdata
mov eax [ esp + 0x8 ]
mov [ esi + 0x8 ] eax
mov eax esi
pop esi
retn 0x4
call sub_40ed06
mov [ esi ] 0x13
sub_40ee47
add ecx 0x8
push ecx
call sub_40654d
pop ecx
retn
sub_40eeb1
add ecx 0x4
push ecx
call sub_40654d
pop ecx
retn
sub_40eebc
push [ esp + 0x10 ]
mov eax [ esp + 0x8 ]
push [ esp + 0x10 ]
mov ecx [ eax + 0x8 ]
push [ esp + 0x10 ]
call sub_40ee52
retn 0x10
sub_40ef3f
push [ esp + 0x10 ]
mov eax [ esp + 0x8 ]
push [ esp + 0x10 ]
mov ecx [ eax + 0x8 ]
push [ esp + 0x10 ]
call sub_40eed7
retn 0x10
sub_40ef7f
mov ecx [ esp + 0x4 ]
dec [ ecx + 0x4 ]
mov eax [ ecx + 0x4 ]
jne r-xdata
retn 0x4
push 0x1
call sub_40ef5a
xor eax eax
sub_40efec
mov ecx [ esp + 0x4 ]
dec [ ecx + 0x4 ]
mov eax [ ecx + 0x4 ]
jne r-xdata
retn 0x4
push 0x1
call sub_40efc7
xor eax eax
sub_40f220
mov [ ecx + 0x10 ] 0x0
add ecx 0x4
push ecx
call sub_40654d
pop ecx
retn
sub_40f279
push [ ecx + 0xc ]
mov [ ecx ] r--data
mov [ ecx + 0x4 ] r--data
call sub_401b29
pop ecx
retn
sub_40f34d
mov eax [ esp + 0x4 ]
mov edx [ eax + 0xc ]
mov ecx [ esp + 0x8 ]
mov [ ecx ] edx
mov eax [ eax + 0x10 ]
mov [ ecx + 0x4 ] eax
xor eax eax
retn 0x8
sub_40f365
sub [ esp + 0x4 ] 0x4
jmp sub_408b37
sub_40f3be
sub [ esp + 0x4 ] 0x4
jmp sub_40f36f
sub_40f3c8
mov eax ecx
mov [ eax + 0x4 ] r--data
xor ecx ecx
mov [ eax + 0x8 ] ecx
mov [ eax ] r--data
mov [ eax + 0x4 ] r--data
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] ecx
mov [ eax + 0x14 ] ecx
retn
sub_40f40e
sub [ esp + 0x4 ] 0x4
jmp sub_40f3ed
sub_40f418
push 0x18
call ??2@YAPAXI@Z
test eax eax
pop ecx
je r-xdata
xor eax eax
retn
mov ecx eax
jmp sub_40f3c8
sub_40f45f
mov eax [ esp + 0x4 ]
mov ecx [ esp + 0xc ]
mov [ eax + 0xac ] ecx
xor eax eax
retn 0xc
sub_40f472
mov eax [ esp + 0x4 ]
mov ecx [ esp + 0xc ]
mov [ eax + 0xb0 ] ecx
xor eax eax
retn 0xc
sub_410897
mov eax [ esp + 0x4 ]
and [ eax + 0x24 ] 0x0
push 0x1
push 0x1
push eax
call sub_41086c
add esp 0xc
retn
sub_410b1a
mov eax [ esp + 0x8 ]
push esi
mov esi [ esp + 0x8 ]
push [ esi + 0x10 ]
push eax
call [ eax + 0x4 ]
and [ esi + 0x10 ] 0x0
pop ecx
pop ecx
pop esi
retn
sub_410b32
push [ esi + 0x14 ]
push eax
call [ eax + 0x4 ]
and [ esi + 0x14 ] 0x0
pop ecx
pop ecx
retn
sub_410b40
push esi
push [ esp + 0xc ]
mov esi [ esp + 0xc ]
push esi
call sub_410b1a
mov eax [ esp + 0x14 ]
pop ecx
pop ecx
call sub_410b32
pop esi
retn
sub_410cb5
mov ecx [ esp + 0x4 ]
dec [ ecx + 0xc ]
mov eax [ ecx + 0xc ]
jne r-xdata
retn 0x4
mov eax [ ecx ]
push 0x1
call [ eax + 0x14 ]
xor eax eax
sub_410ccd
sub [ esp + 0x4 ] 0x4
jmp sub_410cb5
sub_410cd7
sub [ esp + 0x4 ] 0x8
jmp sub_410cb5
sub_410de5
mov ecx [ esp + 0x4 ]
push [ esp + 0x8 ]
xor eax eax
mov [ ecx + 0xa0 ] eax
mov [ ecx + 0xa4 ] eax
mov [ ecx + 0x1c ] eax
mov [ ecx + 0x18 ] eax
call sub_410d9f
xor eax eax
retn 0x8
sub_411069
sub [ esp + 0x4 ] 0x4
jmp sub_410ce1
sub_411073
sub [ esp + 0x4 ] 0x8
jmp sub_410ce1
sub_4110eb
push esi
mov esi ecx
call sub_410c76
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call ??3@YAXPAX@Z
pop ecx
sub_411107
push 0xc8
call ??2@YAPAXI@Z
test eax eax
pop ecx
je r-xdata
xor eax eax
retn
mov ecx eax
jmp sub_41107d
sub_411149
push [ esp + 0x8 ]
call sub_4024a5
pop ecx
retn
sub_411154
push [ esp + 0x8 ]
call sub_401b42
pop ecx
retn
sub_41115f
mov eax [ esp + 0x4 ]
mov edx [ eax + 0xb0 ]
mov ecx [ esp + 0x8 ]
mov [ ecx ] edx
mov eax [ eax + 0xb4 ]
mov [ ecx + 0x4 ] eax
xor eax eax
retn 0x8
sub_4111ec
mov eax [ esp + 0x4 ]
and [ eax + 0x78 ] 0x0
xor ecx ecx
inc ecx
push eax
mov [ eax + 0x80 ] ecx
mov [ eax + 0x84 ] ecx
mov [ eax + 0x88 ] ecx
call sub_410897
pop ecx
retn
sub_411590
mov eax [ esp + 0x4 ]
inc [ eax + 0xc ]
mov eax [ eax + 0xc ]
retn 0x4
sub_41159d
mov ecx [ esp + 0x4 ]
dec [ ecx + 0xc ]
mov eax [ ecx + 0xc ]
jne r-xdata
retn 0x4
mov eax [ ecx ]
push 0x1
call [ eax + 0x1c ]
xor eax eax
sub_4115b5
sub [ esp + 0x4 ] 0x4
jmp sub_411590
sub_4115bf
sub [ esp + 0x4 ] 0x8
jmp sub_411590
sub_4115c9
sub [ esp + 0x4 ] 0x4
jmp sub_41159d
sub_4115d3
sub [ esp + 0x4 ] 0x8
jmp sub_41159d
sub_41169e
mov ecx [ esp + 0x4 ]
push [ esp + 0x8 ]
add ecx 0x10
call sub_408761
xor eax eax
retn 0x8
sub_4116b3
mov ecx [ esp + 0x4 ]
add ecx 0x10
call sub_40a018
xor eax eax
retn 0x4
sub_4118bc
sub [ esp + 0x4 ] 0x4
jmp sub_4115dd
sub_4118c6
sub [ esp + 0x4 ] 0x8
jmp sub_4115dd
sub_41190c
push esi
mov esi ecx
call sub_411551
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call ??3@YAXPAX@Z
pop ecx
sub_411928
push 0xc8
call ??2@YAPAXI@Z
test eax eax
pop ecx
je r-xdata
xor eax eax
retn
mov ecx eax
jmp sub_4118d0
sub_411941
mov ecx [ esp + 0x4 ]
mov eax [ ecx ]
and [ ecx + 0x8 ] 0x0
call [ eax + 0x14 ]
xor eax eax
retn 0x4
sub_411953
push esi
push [ esp + 0x10 ]
mov esi [ esp + 0xc ]
push [ esp + 0x10 ]
mov eax [ esi ]
mov ecx esi
call [ eax + 0x18 ]
add [ esi + 0x8 ] eax
pop esi
retn 0xc
sub_411ac6
push 0x0
lea eax [ ecx + 0xc ]
push eax
push [ ecx + 0x8 ]
push [ esp + 0x14 ]
push [ esp + 0x14 ]
call sub_41196e
add esp 0x14
retn 0x8
sub_411ae2
and [ ecx + 0xc ] 0x0
retn
sub_411ae7
push 0x10
call ??2@YAPAXI@Z
test eax eax
pop ecx
je r-xdata
xor eax eax
retn
and [ eax + 0x4 ] 0x0
mov [ eax ] r--data
retn
sub_411b22
cmp [ esp + 0x4 ] 0xf
jne r-xdata
xor eax eax
retn
mov al [ esp + 0x8 ]
and al 0xf0
cmp al 0x80
jne r-xdata
xor eax eax
inc eax
retn
sub_411b5e
cmp [ esp + 0x8 ] 0xe8
jne r-xdata
xor eax eax
cmp [ esp + 0x8 ] 0xe9
setne al
add eax 0x100
retn
movzx eax [ esp + 0x4 ]
retn
sub_411b7b
mov eax [ esp + 0x4 ]
mov ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
mov [ eax + edx * 4 + 0x4c4 ] ecx
xor eax eax
retn 0xc
sub_411b93
mov eax [ esp + 0x4 ]
mov ecx [ esp + 0xc ]
mov [ eax + 0x4d4 ] ecx
xor eax eax
retn 0xc
sub_411bcb
push esi
mov esi ecx
call sub_40e993
mov eax [ esi + 0x14 ]
test eax eax
pop esi
je r-xdata
retn
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
sub_411fbb
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov [ ebp + 0x24 ] eax
or [ ebp - 0x4 ] 0xffffffff
mov eax r-xdata
retn
sub_411fd2
mov eax [ ebp - 0x18 ]
mov eax [ eax ]
mov [ ebp + 0x24 ] eax
or [ ebp - 0x4 ] 0xffffffff
mov eax r-xdata
retn
sub_411fe4
or [ ebp - 0x4 ] 0xffffffff
mov eax sub_411fee
retn
sub_411fee
xor eax eax
inc eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn 0x20
sub_4120cb
sub [ esp + 0x4 ] 0x4
jmp sub_41207c
sub_412104
push 0x4e0
call ??2@YAPAXI@Z
test eax eax
pop ecx
je r-xdata
xor eax eax
retn
mov ecx eax
jmp sub_412002
sub_41213e
sub [ esp + 0x4 ] 0x4
jmp sub_41211d
??3@YAXPAX@Z
jmp [ operator delete@IAT ]
??2@YAPAXI@Z
jmp [ operator new@IAT ]
_purecall
jmp [ _purecall@IAT ]
memcmp
jmp [ memcmp@IAT ]
memcpy
jmp [ memcpy@IAT ]
sub_41219f
cmp [ rw-data ] 0xffffffff
jne r-xdata
push rw-data
push rw-data
push [ esp + 0xc ]
call __dllonexit
add esp 0xc
retn
push [ esp + 0x4 ]
call [ _onexit@IAT ]
pop ecx
retn
sub_4121cb
push [ esp + 0x4 ]
call sub_41219f
neg eax
sbb eax eax
pop ecx
neg eax
dec eax
retn
memset
jmp [ memset@IAT ]
sub_4121e4
push 0xffffffff
push eax
mov eax [ fs : 0x0 ]
push eax
mov eax [ esp + 0xc ]
mov [ fs : 0x0 ] esp
mov [ esp + 0xc ] ebp
lea ebp [ esp + 0xc ]
push eax
retn
_CxxThrowException
jmp [ _CxxThrowException@IAT ]
sub_4122fa
push esi
mov esi ecx
call ??1type_info@@UAE@XZ
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call ??3@YAXPAX@Z
pop ecx
sub_4124b1
mov esp [ ebp - 0x18 ]
push [ ebp - 0x78 ]
call [ _exit@IAT ]
int3
__dllonexit
jmp [ __dllonexit@IAT ]
??1type_info@@UAE@XZ
jmp [ type_info::~type_info@IAT ]
_XcptFilter
jmp [ _XcptFilter@IAT ]
_initterm
jmp [ _initterm@IAT ]
sub_4124d6
push 0x30000
push 0x10000
call _controlfp
pop ecx
pop ecx
retn
sub_4124e8
xor eax eax
retn
sub_4124eb
retn
_except_handler3
jmp [ _except_handler3@IAT ]
_controlfp
jmp [ _controlfp@IAT ]
sub_4126bb
mov eax r--data
jmp sub_40108b
sub_412701
push j_sub_402117
call sub_4121cb
pop ecx
retn
sub_41270d
push 0x3
mov ecx rw-data
call sub_401112
push sub_412821
call sub_4121cb
pop ecx
retn
sub_412725
push 0x3
mov ecx rw-data
call sub_401112
push sub_41282e
call sub_4121cb
pop ecx
retn
sub_41273d
push 0x3
mov ecx rw-data
call sub_401112
push sub_41283b
call sub_4121cb
pop ecx
retn
sub_412755
push 0x3
mov ecx rw-data
call sub_401112
push sub_412848
call sub_4121cb
pop ecx
retn
sub_41276d
push 0x3
mov ecx rw-data
call sub_401112
push sub_412855
call sub_4121cb
pop ecx
retn
sub_412785
push 0x3
mov ecx rw-data
call sub_401112
push sub_412862
call sub_4121cb
pop ecx
retn
sub_41279d
push 0x3
mov ecx rw-data
call sub_401112
push sub_41286f
call sub_4121cb
pop ecx
retn
sub_4127b5
push sub_41287c
call sub_4121cb
pop ecx
retn
sub_4127c1
dec [ rw-data ]
retn
sub_4127c8
push 0x3
mov ecx rw-data
call sub_401112
push r-xdata
call sub_4121cb
pop ecx
retn
sub_4127e0
push rw-data
call sub_40d8b2
pop ecx
retn
sub_4127ec
push rw-data
call sub_40d8b2
pop ecx
retn
sub_4127f8
push rw-data
call sub_40d8b2
pop ecx
retn
sub_412804
push rw-data
call sub_40d8b2
pop ecx
retn
sub_412810
push rw-data
call sub_40d8b2
pop ecx
retn
j_sub_402117
jmp sub_402117
sub_412821
push [ rw-data ]
call ??3@YAXPAX@Z
pop ecx
retn
sub_41282e
push [ rw-data ]
call ??3@YAXPAX@Z
pop ecx
retn
sub_41283b
push [ rw-data ]
call ??3@YAXPAX@Z
pop ecx
retn
sub_412848
push [ rw-data ]
call ??3@YAXPAX@Z
pop ecx
retn
sub_412855
push [ rw-data ]
call ??3@YAXPAX@Z
pop ecx
retn
sub_412862
push [ rw-data ]
call ??3@YAXPAX@Z
pop ecx
retn
sub_41286f
push [ rw-data ]
call ??3@YAXPAX@Z
pop ecx
retn
sub_41287c
mov ecx rw-data
jmp sub_403db3
