sub_401000
push sub_40144c
call sub_40140f
mov eax [ rw-data ]
mov [ esp ] rw-data
push [ rw-data ]
mov [ rw-data ] eax
push rw-data
push rw-data
push rw-data
call [ __wgetmainargs@IAT ]
add esp 0x14
mov [ rw-data ] eax
test eax eax
jge r-xdata
retn
push 0x8
call _amsg_exit
pop ecx
sub_40104b
push 0x5c
push r--data
call sub_4015dc
xor ebx ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x4 ] ebx
lea eax [ ebp - 0x6c ]
push eax
call [ GetStartupInfoW@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp - 0x4 ] 0x1
mov eax [ fs : 0x18 ]
mov esi [ eax + 0x4 ]
mov [ ebp - 0x20 ] ebx
mov edi rw-data
xor esi esi
inc esi
cmp eax esi
jne r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
push 0x1f
call _amsg_exit
pop ecx
jmp r-xdata
push 0x3e8
call [ Sleep@IAT ]
jmp r-xdata
xor esi esi
inc esi
mov [ ebp - 0x20 ] esi
jmp r-xdata
mov [ rw-data ] esi
mov [ rw-data ] esi
push r--data
push r--data
call _initterm_e
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ rw-data ]
cmp eax esi
jne r-xdata
push ebx
push esi
push edi
call [ InterlockedCompareExchange@IAT ]
cmp eax ebx
je r-xdata
mov eax [ rw-data ]
cmp eax esi
jne r-xdata
cmp [ ebp - 0x20 ] ebx
jne r-xdata
push r--data
push r--data
call _initterm
pop ecx
pop ecx
mov [ rw-data ] 0x2
jmp r-xdata
cmp [ rw-data ] ebx
je r-xdata
push ebx
push edi
call [ InterlockedExchange@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
mov eax 0xff
mov eax [ _wcmdln@IAT ]
cmp [ eax ] ebx
je r-xdata
push rw-data
call sub_401510
pop ecx
test eax eax
je r-xdata
mov eax [ eax ]
push ebx
push 0x2
push ebx
call [ rw-data ]
cmp cx 0x22
jne r-xdata
cmp cx bx
je r-xdata
inc eax
inc eax
jmp r-xdata
xor ecx ecx
cmp [ ebp - 0x1c ] ebx
sete cl
mov [ ebp - 0x1c ] ecx
movzx ecx [ eax ]
cmp cx bx
je r-xdata
cmp [ ebp - 0x1c ] ebx
jne r-xdata
mov [ ebp - 0x24 ] eax
movzx ecx [ eax ]
cmp cx 0x20
ja r-xdata
test [ ebp - 0x40 ] 0x1
je r-xdata
cmp cx 0x20
ja r-xdata
push 0xa
pop ecx
movzx ecx [ ebp - 0x3c ]
jmp r-xdata
inc eax
inc eax
mov [ ebp - 0x24 ] eax
jmp r-xdata
cmp [ rw-data ] ebx
jne r-xdata
push eax
call [ exit@IAT ]
push ecx
push eax
push ebx
push __dos_header
call sub_407690
mov [ rw-data ] eax
cmp [ rw-data ] ebx
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ rw-data ]
jmp r-xdata
call [ _cexit@IAT ]
call sub_401621
retn
sub_4011d8
mov esp [ ebp - 0x18 ]
mov eax [ ebp - 0x28 ]
mov [ rw-data ] eax
xor ebx ebx
cmp [ rw-data ] ebx
jne r-xdata
cmp [ rw-data ] ebx
jne r-xdata
push eax
call [ _exit@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ rw-data ]
jmp r-xdata
call [ _cexit@IAT ]
call sub_401621
retn
sub_401229
mov eax 0x5a4d
cmp [ __dos_header ] ax
je r-xdata
mov eax [ r--data ]
lea eax [ eax + __dos_header ]
cmp [ eax ] 0x4550
jne r-xdata
xor eax eax
jmp r-xdata
movzx ecx [ eax + 0x18 ]
cmp ecx 0x10b
je r-xdata
push 0x2
mov [ rw-data ] eax
call [ __set_app_type@IAT ]
push 0xffffffff
call [ _encode_pointer@IAT ]
pop ecx
pop ecx
mov [ rw-data ] eax
mov [ rw-data ] eax
call [ __p__fmode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
call [ __p__commode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
mov eax [ _adjust_fdiv@IAT ]
mov eax [ eax ]
mov [ rw-data ] eax
call sub_401426
call sub_401685
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ eax + 0x74 ] 0xe
jbe r-xdata
cmp ecx 0x20b
jne r-xdata
call sub_40165a
cmp [ rw-data ] 0xffffffff
jne r-xdata
push sub_401685
call [ __setusermatherr@IAT ]
pop ecx
xor ecx ecx
cmp [ eax + 0xe8 ] ecx
cmp [ eax + 0x84 ] 0xe
jbe r-xdata
xor eax eax
retn
push 0xffffffff
call [ _configthreadlocale@IAT ]
pop ecx
xor ecx ecx
cmp [ eax + 0xf8 ] ecx
jmp r-xdata
setne cl
mov eax ecx
sub_401314
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
jne r-xdata
xor eax eax
pop ebp
retn 0x4
cmp [ eax + 0x10 ] 0x3
jne r-xdata
mov eax [ eax + 0x14 ]
cmp eax 0x19930520
je r-xdata
call ?terminate@@YAXXZ
cmp eax 0x19930521
je r-xdata
cmp eax 0x19930522
je r-xdata
cmp eax 0x1994000
jne r-xdata
sub_40136a
push 0x14
push r--data
call sub_4015dc
push [ rw-data ]
mov esi [ _decode_pointer@IAT ]
call esi
pop ecx
mov [ ebp - 0x1c ] eax
cmp eax 0xffffffff
jne r-xdata
push 0x8
call _lock
pop ecx
and [ ebp - 0x4 ] 0x0
push [ rw-data ]
call esi
mov [ ebp - 0x1c ] eax
push [ rw-data ]
call esi
pop ecx
pop ecx
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
push [ ebp + 0x8 ]
mov esi [ _encode_pointer@IAT ]
call esi
pop ecx
push eax
call __dllonexit
mov [ ebp - 0x24 ] eax
push [ ebp - 0x1c ]
call esi
mov [ rw-data ] eax
push [ ebp - 0x20 ]
call esi
add esp 0x14
mov [ rw-data ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_401406
mov eax [ ebp - 0x24 ]
push [ ebp + 0x8 ]
call [ _onexit@IAT ]
pop ecx
jmp r-xdata
call sub_401621
retn
sub_401426
mov edi edi
push esi
mov eax r--data
mov esi r--data
push edi
mov edi eax
cmp eax esi
jae r-xdata
pop edi
pop esi
retn
mov eax [ edi ]
test eax eax
je r-xdata
add edi 0x4
cmp edi esi
jb r-xdata
call eax
sub_40144c
mov edi edi
push esi
mov eax r--data
mov esi r--data
push edi
mov edi eax
cmp eax esi
jae r-xdata
pop edi
pop esi
retn
mov eax [ edi ]
test eax eax
je r-xdata
add edi 0x4
cmp edi esi
jb r-xdata
call eax
sub_401480
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax 0x5a4d
cmp [ ecx ] ax
je r-xdata
mov eax [ ecx + 0x3c ]
add eax ecx
cmp [ eax ] 0x4550
jne r-xdata
xor eax eax
pop ebp
retn
xor edx edx
mov ecx 0x10b
cmp [ eax + 0x18 ] cx
sete dl
mov eax edx
pop ebp
retn
sub_4014c0
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x3c ]
add ecx eax
movzx eax [ ecx + 0x14 ]
push ebx
push esi
movzx esi [ ecx + 0x6 ]
xor edx edx
push edi
lea eax [ eax + ecx + 0x18 ]
test esi esi
jbe r-xdata
xor eax eax
mov edi [ ebp + 0xc ]
inc edx
add eax 0x28
cmp edx esi
jb r-xdata
mov ebx [ eax + 0x8 ]
add ebx ecx
cmp edi ebx
jb r-xdata
mov ecx [ eax + 0xc ]
cmp edi ecx
jb r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_401510
mov edi edi
push ebp
mov ebp esp
push 0xfffffffe
push r--data
push sub_401635
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x8 ] eax
xor eax ebp
push eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x18 ] esp
mov [ ebp - 0x4 ] 0x0
push __dos_header
call sub_401480
add esp 0x4
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
xor eax eax
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
sub eax __dos_header
push eax
push __dos_header
call sub_4014c0
add esp 0x8
test eax eax
je r-xdata
mov eax [ eax + 0x24 ]
shr eax 0x1f
not eax
and eax 0x1
mov [ ebp - 0x4 ] 0xfffffffe
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4015dc
push sub_401635
push [ fs : 0x0 ]
mov eax [ esp + 0x10 ]
mov [ esp + 0x10 ] ebp
lea ebp [ esp + 0x10 ]
sub esp eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x4 ] eax
xor eax ebp
push eax
mov [ ebp - 0x18 ] esp
push [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
retn
sub_401635
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push sub_401736
push rw-data
call _except_handler4_common
add esp 0x18
pop ebp
retn
sub_40165a
mov edi edi
push esi
push 0x30000
push 0x10000
xor esi esi
push esi
call _controlfp_s
add esp 0xc
test eax eax
je r-xdata
pop esi
retn
push esi
push esi
push esi
push esi
push esi
call _invoke_watson
add esp 0x14
sub_401688
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
push ebx
push edi
mov edi 0xbb40e64e
mov ebx 0xffff0000
cmp eax edi
je r-xdata
push esi
lea eax [ ebp - 0x8 ]
push eax
call [ GetSystemTimeAsFileTime@IAT ]
mov esi [ ebp - 0x4 ]
xor esi [ ebp - 0x8 ]
call [ GetCurrentProcessId@IAT ]
xor esi eax
call [ GetCurrentThreadId@IAT ]
xor esi eax
call [ GetTickCount@IAT ]
xor esi eax
lea eax [ ebp - 0x10 ]
push eax
call [ QueryPerformanceCounter@IAT ]
mov eax [ ebp - 0xc ]
xor eax [ ebp - 0x10 ]
xor esi eax
cmp esi edi
jne r-xdata
test ebx eax
je r-xdata
test ebx esi
jne r-xdata
mov esi 0xbb40e64f
jmp r-xdata
not eax
mov [ rw-data ] eax
jmp r-xdata
mov [ rw-data ] esi
not esi
mov [ rw-data ] esi
pop esi
mov eax esi
shl eax 0x10
or esi eax
pop edi
pop ebx
leave
retn
sub_401758
mov edi edi
push ebp
mov ebp esp
sub esp 0x328
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov [ rw-data ] edx
mov [ rw-data ] ebx
mov [ rw-data ] esi
mov [ rw-data ] edi
mov [ rw-data ] ss
mov [ rw-data ] cs
mov [ rw-data ] ds
mov [ rw-data ] es
mov [ rw-data ] fs
mov [ rw-data ] gs
pushfd
pop [ rw-data ]
mov eax [ ebp ]
mov [ rw-data ] eax
mov eax [ ebp + 0x4 ]
mov [ rw-data ] eax
lea eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebp - 0x320 ]
mov [ rw-data ] 0x10001
mov eax [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] 0xc0000409
mov [ rw-data ] 0x1
mov eax [ rw-data ]
mov [ ebp - 0x328 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x324 ] eax
call [ IsDebuggerPresent@IAT ]
mov [ rw-data ] eax
push 0x1
call _crt_debugger_hook
pop ecx
push 0x0
call [ SetUnhandledExceptionFilter@IAT ]
push r--data
call [ UnhandledExceptionFilter@IAT ]
cmp [ rw-data ] 0x0
jne r-xdata
push 0xc0000409
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
leave
retn
push 0x1
call _crt_debugger_hook
pop ecx
sub_4018b0
push ebp
mov ebp esp
push 0xfffffffe
push r--data
push sub_401635
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x8 ] eax
xor eax ebp
push eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x18 ] esp
mov [ ebp - 0x4 ] 0x0
push ecx
call [ InitializeCriticalSection@IAT ]
xor eax eax
jmp r-xdata
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_401930
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
push esi
mov esi [ ebp + 0x8 ]
cmp esi 0xffffffff
je r-xdata
mov edx [ eax ]
mov [ rw-data ] edx
mov edx [ eax + 0x4 ]
mov [ rw-data ] edx
mov edx [ eax + 0x8 ]
mov [ rw-data ] edx
mov eax [ eax + 0xc ]
mov [ rw-data ] eax
mov esi [ rw-data ]
cmp esi [ rw-data ]
jae r-xdata
mov [ ecx + 0x2c ] esi
test esi esi
je r-xdata
xor eax eax
pop esi
pop ebp
retn 0xc
mov edi edi
cmp [ esi ] 0x0
je r-xdata
add esi 0x4
cmp esi [ rw-data ]
jb r-xdata
mov edx [ eax + 0x20 ]
push 0x1
call edx
mov ecx [ esi + 0x20 ]
push 0x1
call ecx
add esi 0x24
cmp [ esi ] 0x0
jne r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
sub_4019b0
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
test ebx ebx
jne r-xdata
mov esi [ ebx + 0x8 ]
test esi esi
je r-xdata
push ebx
push ebx
push 0x1
push 0xc0000005
call [ RaiseException@IAT ]
pop esi
mov [ ebx + 0x8 ] 0x0
pop ebx
pop ebp
retn 0x4
push edi
mov eax [ esi + 0x4 ]
mov ecx [ esi ]
push eax
call ecx
mov edi [ esi + 0x8 ]
push esi
call ??3@YAXPAX@Z
add esp 0x4
mov esi edi
test edi edi
jne r-xdata
pop edi
sub_401a10
push ebp
mov ebp esp
push esi
mov esi ecx
cmp [ esi ] 0x0
jne r-xdata
mov eax [ esi ]
mov edx [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
sub edx eax
push 0xd
sub edx 0xd
push eax
mov [ eax ] 0x42444c7
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] 0xe9
mov [ eax + 0x9 ] edx
call [ GetCurrentProcess@IAT ]
push eax
call [ FlushInstructionCache@IAT ]
mov eax 0x1
pop esi
pop ebp
retn 0x8
call j_sub_4197a0
mov [ esi ] eax
test eax eax
jne r-xdata
pop esi
pop ebp
retn 0x8
sub_401a70
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov ecx [ ecx ]
push eax
mov eax [ ebp + 0x8 ]
push edx
push eax
push ecx
call [ PostMessageW@IAT ]
pop ebp
retn 0xc
sub_401a90
push ebp
mov ebp esp
push 0xffffffff
push sub_419d14
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov edi [ utf::string::string@IAT ]
lea ecx [ esi + 0x4 ]
mov [ esi ] 0x0
mov [ esi + 0x1 ] 0x0
mov [ esi + 0x2 ] 0x0
call edi
mov [ ebp - 0x4 ] 0x0
lea ecx [ esi + 0x28 ]
call edi
mov [ ebp - 0x4 ] 0x1
lea ecx [ esi + 0x4c ]
call edi
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_401b00
push ebp
mov ebp esp
push 0xffffffff
push sub_419ccf
mov eax [ fs : 0x0 ]
push eax
sub esp 0x58
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx 0x1
cmp [ ebp + 0x8 ] ebx
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0xd ] 0x0
mov eax ebx
mov [ ebp - 0x18 ] ebx
jle r-xdata
push r--data
push r--data
call Ordinal_vmwarebase_4
add esp 0x8
xor al al
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi [ ebp + 0x10 ]
mov edi [ utf::string::string@IAT ]
push r--data
push r--data
call Ordinal_vmwarebase_4
add esp 0x8
xor al al
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
movzx ecx [ eax + 0x2 ]
add ecx 0xffffffb9
cmp ecx 0x2f
ja r-xdata
mov eax [ ebp - 0x18 ]
mov ebx 0x1
add eax ebx
cmp eax [ ebp + 0x8 ]
mov [ ebp - 0x18 ] eax
jl r-xdata
movzx ecx [ ecx + lookup_table_401ee8 ]
jmp [ ecx * 4 + jump_table_401ec4 ]
mov ecx [ ebp + 0xc ]
mov eax [ ecx + eax * 4 ]
mov edx 0x2d
cmp dx [ eax ]
jne r-xdata
cmp [ ebp - 0xd ] 0x0
jne r-xdata
mov [ esi + 0x2 ] 0x1
mov [ ebp - 0xd ] 0x1
jmp r-xdata
mov [ esi ] 0x1
mov [ ebp - 0xd ] 0x1
jmp r-xdata
mov [ esi + 0x1 ] 0x1
mov [ ebp - 0xd ] 0x1
jmp r-xdata
mov edx 0x3a
cmp dx [ eax + 0x4 ]
jne r-xdata
mov ecx 0x3a
cmp cx [ eax + 0x4 ]
jne r-xdata
mov ecx 0x3a
cmp cx [ eax + 0x4 ]
jne r-xdata
mov edx 0x3a
cmp dx [ eax + 0x4 ]
jne r-xdata
mov edx 0x3a
cmp dx [ eax + 0x4 ]
jne r-xdata
cmp [ esi ] 0x0
mov edi [ utf::string::empty@IAT ]
je r-xdata
push r--data
push r--data
call Ordinal_vmwarebase_4
add esp 0x8
xor al al
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub esp 0x24
add eax 0x6
mov ecx esp
mov [ ebp - 0x1c ] esp
push eax
call edi
mov [ ebp - 0x4 ] 0x0
lea ecx [ esi + 0x28 ]
jmp r-xdata
mov bl 0x1
add eax 0x6
push eax
lea ecx [ ebp - 0x40 ]
call edi
mov [ ebp - 0x4 ] ebx
or [ ebp - 0x14 ] ebx
lea edx [ esi + 0x28 ]
push edx
lea eax [ ebp - 0x40 ]
push eax
call [ wui::util::unityHelperXml::LookUpVmxPath@IAT ]
add esp 0x8
test al al
je r-xdata
push r--data
push r--data
call Ordinal_vmwarebase_4
add esp 0x8
xor al al
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub esp 0x24
add eax 0x6
mov ecx esp
mov [ ebp - 0x1c ] esp
push eax
call edi
mov [ ebp - 0x4 ] 0x2
lea ecx [ esi + 0x4c ]
jmp r-xdata
mov bl 0x1
add eax 0x6
push eax
lea ecx [ ebp - 0x64 ]
call edi
mov [ ebp - 0x4 ] 0x3
or [ ebp - 0x14 ] 0x2
lea eax [ esi + 0x4c ]
push eax
lea ecx [ ebp - 0x64 ]
push ecx
call [ wui::util::unityHelperXml::LookUpExecPath@IAT ]
add esp 0x8
test al al
je r-xdata
push r--data
push r--data
call Ordinal_vmwarebase_4
add esp 0x8
xor al al
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub esp 0x24
add eax 0x6
mov ecx esp
mov [ ebp - 0x1c ] esp
push eax
call edi
mov [ ebp - 0x4 ] 0x4
lea ecx [ esi + 0x4 ]
cmp [ esi + 0x1 ] 0x0
je r-xdata
cmp [ esi + 0x1 ] 0x0
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
call [ utf::string::operator=@IAT ]
test bl bl
je r-xdata
and [ ebp - 0x14 ] 0xfffffffe
lea ecx [ ebp - 0x40 ]
call [ utf::string::~string@IAT ]
xor bl bl
jmp r-xdata
test bl bl
je r-xdata
and [ ebp - 0x14 ] 0xfffffffd
lea ecx [ ebp - 0x64 ]
call [ utf::string::~string@IAT ]
xor bl bl
jmp r-xdata
mov al bl
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea ecx [ esi + 0x28 ]
call edi
test al al
jne r-xdata
lea ecx [ esi + 0x4 ]
call edi
test al al
je r-xdata
push r--data
push r--data
call Ordinal_vmwarebase_4
add esp 0x8
xor al al
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push r--data
push r--data
call Ordinal_vmwarebase_4
add esp 0x8
xor al al
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x14 ] 0x1
je r-xdata
push r--data
push r--data
call Ordinal_vmwarebase_4
add esp 0x8
xor al al
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x14 ] 0x2
je r-xdata
push r--data
push r--data
call Ordinal_vmwarebase_4
add esp 0x8
xor al al
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea ecx [ esi + 0x4c ]
call edi
test al al
je r-xdata
push r--data
push r--data
call Ordinal_vmwarebase_4
add esp 0x8
xor al al
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_401ef1
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
add [ eax ] ecx
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
add al [ ebx ]
or [ eax + ecx ] al
or [ eax ] cl
add eax 0x8080808
or [ eax ] cl
push es
or [ eax ] cl
or [ edi ] al
int3
sub_401f20
push ebp
mov ebp esp
push 0xffffffff
push sub_419d14
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] 0x1
mov edi [ utf::string::~string@IAT ]
lea ecx [ esi + 0x4c ]
call edi
mov [ ebp - 0x4 ] 0x0
lea ecx [ esi + 0x28 ]
call edi
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ esi + 0x4 ]
call edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_401f90
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
push eax
push r--data
push ecx
push edx
call [ swprintf_s@IAT ]
add esp 0x10
pop ebp
retn
sub_402000
push ebp
mov ebp esp
push 0xffffffff
push sub_419d69
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
lea eax [ ebp + 0x8 ]
push eax
call [ std::exception::exception@IAT ]
mov [ ebp - 0x4 ] 0x0
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_402060
push ebp
mov ebp esp
push 0xffffffff
push sub_419d39
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] ecx
mov [ ecx ] r--data
mov [ ebp - 0x4 ] 0xffffffff
call [ std::exception::~exception@IAT ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_4020b0
push ebp
mov ebp esp
push 0xffffffff
push sub_419d69
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0xffffffff
call [ std::exception::~exception@IAT ]
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
push esi
call ??3@YAXPAX@Z
add esp 0x4
sub_402110
push ebp
mov ebp esp
push 0xffffffff
push sub_419da5
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
call [ std::exception::exception@IAT ]
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ esi + 0xc ]
mov [ esi ] r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_402180
push ebp
mov ebp esp
push 0xffffffff
push sub_419da5
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x0
lea ecx [ esi + 0xc ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call [ std::exception::~exception@IAT ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
sub_4021f0
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_402180
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call ??3@YAXPAX@Z
add esp 0x4
sub_402220
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi ]
push edi
mov edi [ ebp + 0x8 ]
test eax eax
je r-xdata
call [ _invalid_parameter_noinfo@IAT ]
cmp eax [ edi ]
je r-xdata
mov eax [ esi + 0x4 ]
xor ecx ecx
cmp eax [ edi + 0x4 ]
pop edi
sete cl
mov al cl
pop esi
pop ebp
retn 0x4
sub_402250
push ebp
mov ebp esp
push 0xffffffff
push sub_419df8
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov eax [ ebp + 0x8 ]
push eax
call sub_402110
mov [ ebp - 0x4 ] 0x0
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_4022b0
push ebp
mov ebp esp
push 0xffffffff
push sub_419dc8
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] ecx
mov [ ecx ] r--data
mov [ ebp - 0x4 ] 0xffffffff
call sub_402180
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_402300
push ebp
mov ebp esp
push 0xffffffff
push sub_419df8
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0xffffffff
call sub_402180
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
push esi
call ??3@YAXPAX@Z
add esp 0x4
sub_402360
push ebp
mov ebp esp
push 0xffffffff
push sub_419df8
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov eax [ ebp + 0x8 ]
push eax
call sub_402110
mov [ ebp - 0x4 ] 0x0
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_4023c0
push ebp
mov ebp esp
push 0xffffffff
push sub_419dc8
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] ecx
mov [ ecx ] r--data
mov [ ebp - 0x4 ] 0xffffffff
call sub_402180
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_402410
push ebp
mov ebp esp
push 0xffffffff
push sub_419df8
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0xffffffff
call sub_402180
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
push esi
call ??3@YAXPAX@Z
add esp 0x4
sub_402470
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
cmp [ ecx + 0x15 ] 0x0
jne r-xdata
pop ebp
retn
nop
mov eax ecx
mov ecx [ eax + 0x8 ]
cmp [ ecx + 0x15 ] 0x0
je r-xdata
sub_402490
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
cmp [ ecx + 0x15 ] 0x0
jne r-xdata
pop ebp
retn
mov edi edi
mov eax ecx
mov ecx [ eax ]
cmp [ ecx + 0x15 ] 0x0
je r-xdata
sub_4024b0
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
push esi
mov esi [ eax + 0x8 ]
mov [ edx ] esi
mov esi [ eax + 0x8 ]
cmp [ esi + 0x15 ] 0x0
jne r-xdata
mov esi [ edx + 0x4 ]
mov [ eax + 0x4 ] esi
mov ecx [ ecx + 0x18 ]
pop esi
cmp edx [ ecx + 0x4 ]
jne r-xdata
mov [ esi + 0x4 ] edx
mov ecx [ edx + 0x4 ]
cmp edx [ ecx + 0x8 ]
jne r-xdata
mov [ ecx + 0x4 ] eax
mov [ eax + 0x8 ] edx
mov [ edx + 0x4 ] eax
pop ebp
retn 0x4
mov [ ecx ] eax
mov [ eax + 0x8 ] edx
mov [ edx + 0x4 ] eax
pop ebp
retn 0x4
mov [ ecx + 0x8 ] eax
mov [ eax + 0x8 ] edx
mov [ edx + 0x4 ] eax
pop ebp
retn 0x4
sub_402510
push esi
mov esi ecx
cmp [ esi ] 0x0
push edi
mov edi [ _invalid_parameter_noinfo@IAT ]
jne r-xdata
mov eax [ esi + 0x4 ]
cmp [ eax + 0x15 ] 0x0
je r-xdata
call edi
mov ecx [ eax + 0x8 ]
cmp [ ecx + 0x15 ] 0x0
jne r-xdata
call edi
pop edi
pop esi
retn
mov eax [ eax + 0x4 ]
cmp [ eax + 0x15 ] 0x0
jne r-xdata
mov eax [ ecx ]
cmp [ eax + 0x15 ] 0x0
jne r-xdata
pop edi
mov [ esi + 0x4 ] eax
pop esi
retn
lea esp [ esp ]
pop edi
mov [ esi + 0x4 ] ecx
pop esi
retn
mov ecx eax
mov eax [ ecx ]
cmp [ eax + 0x15 ] 0x0
je r-xdata
mov [ esi + 0x4 ] eax
mov edx eax
mov eax [ edx + 0x4 ]
cmp [ eax + 0x15 ] 0x0
je r-xdata
mov ecx [ esi + 0x4 ]
cmp ecx [ eax + 0x8 ]
jne r-xdata
sub_402580
push ebp
mov ebp esp
push 0xffffffff
push sub_419e31
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ecx [ ebp + 0x8 ]
mov [ ebp + 0x8 ] ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] 0x0
test ecx ecx
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0xc ]
push eax
call [ utf::string::string@IAT ]
sub_4025e0
push ebp
mov ebp esp
push 0xffffffff
push sub_419e5b
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ecx + 0xc ]
test eax eax
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
push eax
call sub_41978e
sub_402650
push ebp
mov ebp esp
push 0xffffffff
push sub_41d1cc
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push 0x38
call [ sigc::internal::slot_rep::operator new@IAT ]
add esp 0x4
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
xor eax eax
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx eax
call sub_407180
jmp r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_4026d0
push ebp
mov ebp esp
push 0xffffffff
push sub_419d69
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov eax [ ebp + 0x8 ]
push eax
call [ std::exception::exception@IAT ]
mov [ ebp - 0x4 ] 0x0
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_402730
push esi
mov esi ecx
cmp [ esi + 0x4 ] 0x0
push edi
lea edi [ esi + 0x4 ]
je r-xdata
pop edi
pop esi
retn
cmp [ esi + 0xc ] 0x0
je r-xdata
mov eax [ esi + 0x28 ]
test eax eax
je r-xdata
push edi
call sub_4019b0
mov [ esi + 0xc ] 0x0
add esi 0x10
push esi
call [ DeleteCriticalSection@IAT ]
mov [ edi ] 0x0
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
sub_402780
push ebp
mov ebp esp
push 0xffffffff
push sub_419e88
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] 0xffffffff
cmp [ esi + 0x4 ] 0x0
lea edi [ esi + 0x4 ]
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
cmp [ esi + 0xc ] 0x0
je r-xdata
mov eax [ esi + 0x28 ]
test eax eax
je r-xdata
push edi
call sub_4019b0
mov [ esi + 0xc ] 0x0
add esi 0x10
push esi
call [ DeleteCriticalSection@IAT ]
mov [ edi ] 0x0
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
sub_402800
push esi
push edi
mov edi ecx
mov esi [ edi + 0x2c ]
test esi esi
je r-xdata
mov esi [ rw-data ]
cmp esi [ rw-data ]
jae r-xdata
cmp [ esi ] 0x0
je r-xdata
cmp [ edi + 0x4 ] 0x0
lea esi [ edi + 0x4 ]
je r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
pop edi
pop esi
retn
cmp [ edi + 0xc ] 0x0
je r-xdata
add esi 0x4
cmp esi [ rw-data ]
jb r-xdata
mov ecx [ eax + 0x20 ]
push 0x0
call ecx
mov eax [ esi + 0x20 ]
push 0x0
mov [ esi + 0x10 ] 0x0
call eax
add esi 0x24
cmp [ esi ] 0x0
jne r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ edi + 0x28 ]
test eax eax
je r-xdata
push esi
call sub_4019b0
mov [ edi + 0xc ] 0x0
add edi 0x10
push edi
call [ DeleteCriticalSection@IAT ]
mov [ esi ] 0x0
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
sub_4028a0
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
push edi
lea edi [ esi + 0x1c ]
push 0x0
push 0x0
push 0x0
push edi
call [ GetMessageW@IAT ]
cmp eax 0xffffffff
je r-xdata
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test eax eax
je r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
push edi
call [ PeekMessageW@IAT ]
test eax eax
jne r-xdata
mov eax [ esi + 0x24 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ esi ]
mov edx [ eax ]
push edi
mov ecx esi
call edx
test eax eax
jne r-xdata
mov eax [ esi ]
mov edx [ eax + 0x4 ]
push ebx
mov ecx esi
call edx
inc ebx
test eax eax
jne r-xdata
mov eax [ esi + 0x20 ]
cmp eax 0x118
ja r-xdata
push edi
call [ TranslateMessage@IAT ]
push edi
call [ DispatchMessageW@IAT ]
mov [ ebp - 0x4 ] eax
cmp eax 0x200
je r-xdata
jmp r-xdata
cmp eax 0xf
je r-xdata
xor ebx ebx
mov [ ebp - 0x4 ] 0x1
cmp eax 0xa0
jmp r-xdata
je r-xdata
sub_402950
push ebp
mov ebp esp
push 0xffffffff
push sub_419ebb
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi ecx
mov [ ebp - 0x14 ] esi
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov ecx esi
call sub_401930
mov edi eax
mov [ ebp + 0x10 ] edi
xor ebx ebx
cmp edi ebx
jl r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
call [ GetCurrentThreadId@IAT ]
mov [ esi + 0x30 ] eax
mov [ esi + 0x34 ] ebx
mov [ ebp - 0x4 ] ebx
push 0xc
call ??2@YAPAXI@Z
add esp 0x4
mov [ ebp + 0xc ] eax
mov [ ebp - 0x4 ] 0x1
cmp eax ebx
je r-xdata
xor eax eax
mov [ ebp - 0x4 ] bl
mov [ esi + 0x34 ] eax
mov [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
mov [ eax ] ebx
mov [ eax + 0x4 ] ebx
mov [ eax + 0x8 ] ebx
mov [ ebp - 0x4 ] bl
mov [ esi + 0x34 ] eax
mov [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
cmp [ esi + 0x34 ] ebx
jne r-xdata
mov [ esi + 0x38 ] ebx
mov eax edi
mov eax 0x8007000e
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_402a60
push ebp
mov ebp esp
push 0xffffffff
push sub_41b439
mov eax [ fs : 0x0 ]
push eax
sub esp 0x44
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push r--data
lea ecx [ ebp - 0x28 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x28 ]
push eax
lea ecx [ ebp - 0x50 ]
call sub_402250
push r--data
lea ecx [ ebp - 0x50 ]
push ecx
call _CxxThrowException
sub_402ac0
push ebp
mov ebp esp
push 0xffffffff
push sub_419ef5
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov edi [ ebp + 0x8 ]
push edi
call [ std::exception::exception@IAT ]
mov [ ebp - 0x4 ] 0x0
add edi 0xc
push edi
lea ecx [ esi + 0xc ]
mov [ esi ] r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_402b30
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
sub esp 0xc
test ecx ecx
ja r-xdata
or eax 0xffffffff
xor edx edx
div ecx
cmp eax 0x4
jae r-xdata
xor ecx ecx
add ecx ecx
add ecx ecx
push ecx
call ??2@YAPAXI@Z
add esp 0x4
mov esp ebp
pop ebp
retn 0x4
push 0x0
lea ecx [ ebp - 0xc ]
call sub_402000
push r--data
lea eax [ ebp - 0xc ]
push eax
call _CxxThrowException
sub_402b80
push ebp
mov ebp esp
push 0xffffffff
push sub_419df8
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov eax [ ebp + 0x8 ]
push eax
call sub_402ac0
mov [ ebp - 0x4 ] 0x0
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_402be0
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
push esi
mov esi [ eax ]
mov [ edx + 0x8 ] esi
mov esi [ eax ]
cmp [ esi + 0x15 ] 0x0
jne r-xdata
mov esi [ edx + 0x4 ]
mov [ eax + 0x4 ] esi
mov ecx [ ecx + 0x18 ]
pop esi
cmp edx [ ecx + 0x4 ]
jne r-xdata
mov [ esi + 0x4 ] edx
mov ecx [ edx + 0x4 ]
cmp edx [ ecx ]
jne r-xdata
mov [ ecx + 0x4 ] eax
mov [ eax ] edx
mov [ edx + 0x4 ] eax
pop ebp
retn 0x4
mov [ ecx + 0x8 ] eax
mov [ eax ] edx
mov [ edx + 0x4 ] eax
pop ebp
retn 0x4
mov [ ecx ] eax
mov [ eax ] edx
mov [ edx + 0x4 ] eax
pop ebp
retn 0x4
sub_402c40
push ebp
mov ebp esp
push 0xffffffff
push sub_419f18
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
xor eax eax
mov [ esi + 0x10 ] eax
mov [ esi + 0x14 ] eax
mov [ esi + 0x18 ] eax
mov [ esi + 0x1c ] eax
mov [ esi + 0x20 ] eax
mov [ esi + 0x24 ] eax
mov [ esi + 0x4 ] eax
mov [ esi + 0xc ] eax
mov [ esi + 0x8 ] eax
mov [ rw-data ] esi
lea ecx [ esi + 0x10 ]
mov [ esi + 0x28 ] eax
call sub_4018b0
test eax eax
jge r-xdata
mov [ esi + 0x4 ] 0x24
mov [ rw-data ] 0x1
jmp r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
sub_402cd0
push ebp
mov ebp esp
push 0xffffffff
push sub_419f56
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] ecx
or edx 0xffffffff
mov [ ebp - 0x4 ] edx
lea eax [ ecx + 0x8 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ eax + 0xc ]
test eax eax
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
push eax
call sub_41978e
sub_402d30
push esi
mov esi ecx
mov eax [ esi ]
push edi
xor edi edi
cmp eax edi
je r-xdata
mov [ esi + 0x8 ] edi
mov [ esi + 0x4 ] edi
pop edi
pop esi
retn
push eax
call [ free@IAT ]
add esp 0x4
mov [ esi ] edi
sub_402d60
push ebp
mov ebp esp
push 0xffffffff
push sub_419f99
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] ecx
mov eax [ ecx ]
mov ecx [ ebp + 0x8 ]
lea eax [ eax + ecx * 2 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0x8
mov edx [ ebp + 0xc ]
mov cx [ edx ]
mov [ eax ] cx
sub_402de0
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mul [ ebp + 0x10 ]
test edx edx
ja r-xdata
mov eax 0x80070057
pop ebp
retn
cmp eax 0xffffffff
jbe r-xdata
mov ecx [ ebp + 0x8 ]
mov [ ecx ] eax
xor eax eax
pop ebp
retn
sub_402e10
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mul [ ebp + 0x10 ]
test edx edx
ja r-xdata
xor eax eax
pop ebp
retn
cmp eax 0xffffffff
jbe r-xdata
push eax
mov eax [ ebp + 0x8 ]
push eax
call [ CoTaskMemRealloc@IAT ]
pop ebp
retn
sub_402e40
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x10 ]
push esi
call [ lstrlenW@IAT ]
mov ecx [ ebp + 0xc ]
lea eax [ eax + eax + 0x2 ]
push eax
mov eax [ ebp + 0x8 ]
push esi
lea edx [ ecx + ecx ]
push edx
push eax
call [ memcpy_s@IAT ]
add esp 0x10
neg eax
sbb eax eax
inc eax
pop esi
pop ebp
retn
sub_402e70
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0x50
ja r-xdata
push 0x80004005
call sub_401870
movzx ecx [ eax + lookup_table_402ebc ]
jmp [ ecx * 4 + jump_table_402eac ]
push 0x8007000e
call sub_401870
push 0x80070057
call sub_401870
pop ebp
retn
sub_402ec0
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add [ ebx ] eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add al [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add al [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add ah cl
int3
sub_402f10
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push ecx
push edx
push eax
call [ memcpy_s@IAT ]
push eax
call sub_402e70
add esp 0x14
pop ebp
retn
sub_402fd0
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
push esi
push edi
xor edi edi
cmp [ ecx + 0x28 ] edi
lea esi [ ecx + 0x28 ]
jne r-xdata
mov eax 0x80004003
pop ebx
pop ebp
retn 0x4
mov eax [ esi ]
mov [ ebx ] eax
mov esi [ esi ]
mov ecx [ esi ]
mov edx [ ecx + 0x4 ]
push esi
call edx
push esi
push r--data
push 0x1
push edi
push r--data
call [ CoCreateInstance@IAT ]
mov edi eax
test edi edi
jl r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_403030
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
test ecx ecx
je r-xdata
pop ebp
retn
push esi
push edi
lea edi [ ecx - 0x1 ]
mov ecx [ ebp + 0x8 ]
xor eax eax
test edi edi
jbe r-xdata
xor eax eax
pop edi
mov [ ecx ] ax
pop esi
mov esi [ ebp + 0x10 ]
jmp r-xdata
movzx edx [ esi ]
test dx dx
je r-xdata
mov [ ecx ] dx
add ecx 0x2
cmp [ esi ] 0x27
jne r-xdata
inc eax
add esi 0x2
cmp eax edi
jb r-xdata
inc eax
cmp eax edi
jae r-xdata
mov edx 0x27
mov [ ecx ] dx
add ecx 0x2
sub_4030a0
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
push esi
mov esi ecx
jne r-xdata
mov eax [ rw-data ]
mov edx [ ebp + 0x8 ]
test eax eax
je r-xdata
push r--data
call [ GetModuleHandleW@IAT ]
test eax eax
je r-xdata
mov eax [ esi ]
push edx
push eax
call [ RegDeleteKeyW@IAT ]
pop esi
pop ebp
retn 0x4
mov ecx [ esi + 0x4 ]
push 0x0
push ecx
mov ecx [ esi ]
push edx
push ecx
call eax
pop esi
pop ebp
retn 0x4
mov [ rw-data ] 0x1
push r--data
push eax
call [ GetProcAddress@IAT ]
mov [ rw-data ] eax
sub_403110
push ebp
mov ebp esp
push ecx
mov edx [ ebp + 0x8 ]
push esi
push edi
mov edi [ ebp + 0x10 ]
lea eax [ ebp - 0x4 ]
push eax
push edi
mov esi ecx
mov ecx [ ebp + 0xc ]
push 0x0
push ecx
push edx
mov [ ebp - 0x4 ] 0x0
call [ RegOpenKeyExW@IAT ]
test eax eax
jne r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn 0xc
mov ecx [ esi ]
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x4 ]
and edi 0x300
mov [ esi ] ecx
mov [ esi + 0x4 ] edi
push ecx
call [ RegCloseKey@IAT ]
mov [ esi ] 0x0
sub_403170
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push 0x4
lea eax [ ebp + 0xc ]
push eax
mov eax [ ecx ]
push 0x4
push 0x0
push edx
push eax
call [ RegSetValueExW@IAT ]
pop ebp
retn 0x8
sub_403190
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi ecx
test esi esi
jne r-xdata
push esi
call [ lstrlenW@IAT ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0x8 ]
lea eax [ eax + eax + 0x2 ]
push eax
mov eax [ edi ]
push esi
push ecx
push 0x0
push edx
push eax
call [ RegSetValueExW@IAT ]
pop edi
pop esi
pop ebp
retn 0xc
pop edi
lea eax [ esi + 0xd ]
pop esi
pop ebp
retn 0xc
sub_4031d0
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0xc ]
mov [ ebp - 0x4 ] ecx
test esi esi
jne r-xdata
push ebx
mov ebx [ lstrlenW@IAT ]
push edi
xor edi edi
lea eax [ esi + 0xd ]
pop esi
mov esp ebp
pop ebp
retn 0x8
push esi
call ebx
inc eax
lea ecx [ eax + eax ]
add esi ecx
add edi ecx
cmp eax 0x1
jne r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
push edi
push eax
mov eax [ edx ]
push 0x7
push 0x0
push ecx
push eax
call [ RegSetValueExW@IAT ]
pop edi
pop ebx
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_403230
mov eax [ ecx ]
mov ecx 0x27
cmp cx [ eax ]
jne r-xdata
xor eax eax
retn
push eax
call [ CharNextW@IAT ]
mov edx 0x27
cmp dx [ eax ]
je r-xdata
mov eax 0x1
retn
sub_403260
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0x64
push esi
mov esi ecx
jge r-xdata
mov ecx 0x2
mov [ esi + 0x4 ] eax
mul ecx
mov [ esi ] 0x0
test edx edx
ja r-xdata
mov eax 0x3e8
xor eax eax
jmp r-xdata
cmp eax 0xffffffff
jbe r-xdata
mov [ esi + 0x8 ] eax
test eax eax
je r-xdata
push eax
call [ CoTaskMemAlloc@IAT ]
mov eax esi
pop esi
pop ebp
retn 0x4
xor edx edx
mov [ eax ] dx
sub_4032c0
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi ]
push edi
mov edi [ ebp + 0xc ]
lea ecx [ eax + edi + 0x1 ]
cmp ecx eax
jle r-xdata
pop edi
xor eax eax
pop esi
pop ebp
retn 0x8
cmp ecx edi
jle r-xdata
cmp ecx [ esi + 0x4 ]
jl r-xdata
mov eax [ esi ]
test eax eax
jl r-xdata
lea ecx [ ecx ]
mov edx [ esi + 0x4 ]
cmp eax edx
jge r-xdata
add eax eax
cmp ecx eax
mov [ esi + 0x4 ] eax
jge r-xdata
mov ecx edx
sub ecx eax
cmp ecx edx
jg r-xdata
mov eax [ esi + 0x4 ]
cmp eax 0x3fffffff
jg r-xdata
push 0x2
push eax
mov eax [ esi + 0x8 ]
push eax
call sub_402e10
add esp 0xc
test eax eax
je r-xdata
lea edx [ edi + edi ]
push edx
mov edx [ ebp + 0x8 ]
push edx
mov edx [ esi + 0x8 ]
add ecx ecx
push ecx
lea eax [ edx + eax * 2 ]
push eax
call sub_402f10
add [ esi ] edi
mov eax [ esi ]
mov ecx [ esi + 0x8 ]
add esp 0x10
xor edx edx
pop edi
mov [ ecx + eax * 2 ] dx
lea eax [ edx + 0x1 ]
pop esi
pop ebp
retn 0x8
mov [ esi + 0x8 ] eax
sub_403360
push ebp
mov ebp esp
push 0xffffffff
push sub_419fc8
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ecx + 0x18 ] 0x0
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
push ecx
mov [ ecx + 0x18 ] 0x0
call [ DeleteCriticalSection@IAT ]
sub_4033b0
push ebp
mov ebp esp
push 0xffffffff
push sub_419ffe
mov eax [ fs : 0x0 ]
push eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
xor esi esi
test [ rw-data ] 0x1
jne r-xdata
mov edi [ ebp + 0x8 ]
mov ebx [ lstrcmpiW@IAT ]
or [ rw-data ] 0x1
mov [ ebp - 0x4 ] esi
mov eax 0x8
mov [ rw-data ] ax
mov ecx 0x4008
mov edx 0x13
mov eax 0x11
mov [ rw-data ] r--data
mov [ rw-data ] r--data
mov [ rw-data ] cx
mov [ rw-data ] r--data
mov [ rw-data ] dx
mov [ rw-data ] r--data
mov [ rw-data ] ax
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp + 0xc ]
mov dx [ esi * 8 + rw-data ]
mov [ eax ] dx
mov eax 0x1
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
inc esi
cmp esi 0x4
jb r-xdata
mov ecx [ esi * 8 + rw-data ]
push ecx
push edi
call ebx
test eax eax
je r-xdata
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4034a0
push ebp
mov ebp esp
movzx ecx [ ebp + 0x8 ]
lea eax [ ecx - 0x30 ]
cmp eax 0x36
ja r-xdata
xor al al
movzx edx [ eax + lookup_table_4034dc ]
jmp [ edx * 4 + jump_table_4034cc ]
lea eax [ ecx - 0x37 ]
pop ebp
retn
lea eax [ ecx - 0x57 ]
pop ebp
retn
pop ebp
retn
sub_4034e0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ecx ]
add [ ecx ] eax
add [ ecx ] eax
add [ ebx ] eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ edx ]
add al [ edx ]
add al [ edx ]
add cl ah
int3
sub_403520
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
xor ebx ebx
test eax eax
jne r-xdata
movzx ecx [ eax ]
test cx cx
je r-xdata
pop ebx
pop ebp
retn
mov eax ebx
pop ebx
pop ebp
retn
push esi
mov esi [ CharNextW@IAT ]
push edi
mov di [ ebp + 0xc ]
pop edi
mov ebx eax
pop esi
push eax
call esi
movzx ecx [ eax ]
test cx cx
jne r-xdata
cmp cx di
je r-xdata
pop edi
pop esi
mov eax ebx
pop ebx
pop ebp
retn
sub_403570
push esi
push edi
mov edi [ CharNextW@IAT ]
mov esi ecx
lea ebx [ ebx ]
pop edi
pop esi
retn
movzx ecx [ ecx + lookup_table_4035b0 ]
jmp [ ecx * 4 + jump_table_4035a8 ]
push eax
call edi
mov [ esi ] eax
jmp r-xdata
mov eax [ esi ]
movzx ecx [ eax ]
add ecx 0xfffffff7
cmp ecx 0x17
ja r-xdata
sub_4035d0
push ebp
mov ebp esp
push ebx
mov ebx ecx
call sub_403570
mov ecx [ ebx ]
movzx eax [ ecx ]
xor edx edx
cmp dx ax
jne r-xdata
push esi
mov esi [ ebp + 0x8 ]
mov edx 0x27
push edi
mov [ ebp + 0x8 ] esi
cmp dx ax
jne r-xdata
mov eax 0x80020009
pop ebx
pop ebp
retn 0x4
mov edi [ ebx ]
movzx eax [ edi ]
add eax 0xfffffff7
cmp eax 0x17
ja r-xdata
mov edi [ CharNextW@IAT ]
push ecx
call edi
xor ecx ecx
mov [ ebx ] eax
cmp cx [ eax ]
push edi
call [ CharNextW@IAT ]
mov edx [ ebp + 0x8 ]
mov [ ebx ] eax
sub eax edi
sar eax 0x1
lea ecx [ esi + eax * 2 + 0x2 ]
add edx 0x2000
cmp ecx edx
jae r-xdata
movzx edx [ eax + lookup_table_40372c ]
jmp [ edx * 4 + jump_table_403724 ]
mov ecx [ ebx ]
xor edx edx
cmp dx [ ecx ]
je r-xdata
mov eax [ ebx ]
mov edx 0x27
cmp dx [ eax ]
jne r-xdata
pop edi
pop esi
mov eax 0x80020009
pop ebx
pop ebp
retn 0x4
test eax eax
jle r-xdata
xor ecx ecx
pop edi
mov [ esi ] cx
pop esi
xor eax eax
pop ebx
pop ebp
retn 0x4
xor eax eax
mov [ esi ] ax
mov ecx [ ebx ]
push ecx
call edi
pop edi
mov [ ebx ] eax
pop esi
xor eax eax
pop ebx
pop ebp
retn 0x4
mov eax [ ebx ]
mov edx 0x27
cmp dx [ eax ]
jne r-xdata
push eax
call edi
mov ecx 0x27
cmp cx [ eax ]
jne r-xdata
mov edx [ ebx ]
xor eax eax
cmp ax [ edx ]
jne r-xdata
lea ecx [ ecx ]
mov edi [ ebx ]
push edi
call [ CharNextW@IAT ]
mov edx [ ebp + 0x8 ]
mov [ ebx ] eax
sub eax edi
sar eax 0x1
lea ecx [ esi + eax * 2 + 0x2 ]
add edx 0x2000
cmp ecx edx
jae r-xdata
push eax
call edi
mov [ ebx ] eax
mov cx [ edi ]
mov [ esi ] cx
add esi 0x2
add edi 0x2
sub eax 0x1
jne r-xdata
test eax eax
jle r-xdata
mov edx [ ebx ]
mov edi [ CharNextW@IAT ]
xor eax eax
cmp ax [ edx ]
jmp r-xdata
jmp r-xdata
je r-xdata
mov cx [ edi ]
mov [ esi ] cx
add esi 0x2
add edi 0x2
sub eax 0x1
jne r-xdata
sub_403750
push ebp
mov ebp esp
push ebx
mov ebx [ lstrcmpiW@IAT ]
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi r--data
pop edi
pop esi
xor eax eax
pop ebx
pop ebp
retn 0x4
add esi 0x4
cmp esi r--data
jl r-xdata
mov eax [ esi ]
push eax
push edi
call ebx
test eax eax
je r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
pop ebp
retn 0x4
sub_403790
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x8 ]
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0x4 ]
push eax
push 0x0
push 0x0
push 0x0
push ecx
mov [ ebp - 0x4 ] 0x0
call [ RegQueryInfoKeyW@IAT ]
test eax eax
je r-xdata
xor edx edx
cmp edx [ ebp - 0x4 ]
sbb eax eax
neg eax
mov esp ebp
pop ebp
retn 0x4
xor eax eax
mov esp ebp
pop ebp
retn 0x4
sub_4037e0
push ebp
mov ebp esp
mov eax 0x2004
call sub_419310
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push edi
mov edi [ ebp + 0x8 ]
cmp [ edi ] 0x3d
mov esi ecx
jne r-xdata
xor eax eax
push edi
call sub_4035d0
test eax eax
jl r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_401736
mov esp ebp
pop ebp
retn 0x4
mov ecx esi
call sub_403570
lea eax [ ebp - 0x2004 ]
push eax
mov ecx esi
call sub_4035d0
test eax eax
jl r-xdata
push edi
mov ecx esi
call sub_4035d0
test eax eax
jl r-xdata
sub_403850
push esi
mov esi ecx
cmp [ esi ] 0x0
je r-xdata
pop esi
retn
push edi
mov edi [ free@IAT ]
nop
mov eax [ esi ]
mov ecx [ eax ]
push eax
mov [ esi ] ecx
call edi
add esp 0x4
cmp [ esi ] 0x0
jne r-xdata
pop edi
sub_403880
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
xor esi esi
cmp [ edi + 0x8 ] esi
jle r-xdata
pop edi
pop esi
or eax 0xffffffff
pop ebx
pop ebp
retn 0x4
mov ebx [ ebp + 0x8 ]
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
inc esi
cmp esi [ edi + 0x8 ]
jl r-xdata
mov eax [ ebx ]
mov ecx [ edi ]
mov ecx [ ecx + esi * 4 ]
push eax
push ecx
call [ lstrcmpiW@IAT ]
test eax eax
je r-xdata
sub_4038d0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push eax
mov esi ecx
call [ malloc@IAT ]
add esp 0x4
test eax eax
jne r-xdata
mov [ esi ] eax
pop esi
pop ebp
retn 0x4
push 0x8007000e
call sub_401870
sub_403920
push ebp
mov ebp esp
push 0xffffffff
push sub_41a02b
mov eax [ fs : 0x0 ]
push eax
sub esp 0x224
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax ecx
mov ecx [ ebp + 0x8 ]
xor edi edi
mov [ ebp - 0x224 ] eax
mov [ ebp - 0x228 ] ecx
mov [ ebp - 0x218 ] edi
mov [ ebp - 0x214 ] edi
mov [ ebp - 0x4 ] edi
mov esi [ eax + 0x4 ]
mov eax [ eax ]
lea edx [ ebp - 0x220 ]
push edx
or esi 0x2001f
push esi
push edi
push ecx
push eax
mov [ ebp - 0x220 ] edi
call [ RegOpenKeyExW@IAT ]
mov ebx eax
cmp ebx edi
jne r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x218 ]
cmp eax edi
je r-xdata
mov ecx [ ebp - 0x218 ]
xor eax eax
cmp ecx edi
je r-xdata
mov eax ebx
jmp r-xdata
push eax
call [ RegCloseKey@IAT ]
mov [ ebp - 0x218 ] edi
mov ecx [ ebp - 0x220 ]
and esi 0x300
mov [ ebp - 0x214 ] edi
mov ebx eax
mov [ ebp - 0x218 ] ecx
mov [ ebp - 0x214 ] esi
cmp eax edi
je r-xdata
push ecx
call [ RegCloseKey@IAT ]
mov [ ebp - 0x218 ] edi
mov [ ebp - 0x214 ] edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_401736
mov esp ebp
pop ebp
retn 0x4
mov esi [ RegEnumKeyExW@IAT ]
lea eax [ ebp - 0x230 ]
push eax
push edi
push edi
push edi
lea edx [ ebp - 0x21c ]
push edx
lea eax [ ebp - 0x210 ]
push eax
push edi
push ecx
mov [ ebp - 0x21c ] 0x100
call esi
test eax eax
jne r-xdata
mov eax [ ebp - 0x218 ]
cmp eax edi
je r-xdata
lea ebx [ ebx ]
mov eax [ ebp - 0x228 ]
mov ecx [ ebp - 0x224 ]
push eax
mov [ ebp - 0x214 ] edi
call sub_4030a0
mov esi eax
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x218 ]
cmp eax edi
je r-xdata
push eax
call [ RegCloseKey@IAT ]
mov [ ebp - 0x218 ] edi
lea edx [ ebp - 0x230 ]
push edx
mov edx [ ebp - 0x218 ]
push edi
push edi
push edi
lea eax [ ebp - 0x21c ]
push eax
lea ecx [ ebp - 0x210 ]
push ecx
push edi
push edx
mov [ ebp - 0x21c ] 0x100
call esi
test eax eax
je r-xdata
mov eax esi
push eax
call [ RegCloseKey@IAT ]
mov [ ebp - 0x218 ] edi
lea ecx [ ebp - 0x210 ]
push ecx
lea ecx [ ebp - 0x218 ]
call sub_403920
mov ebx eax
cmp ebx edi
jne r-xdata
sub_403af0
push esi
push edi
mov esi ecx
xor edi edi
cmp [ esi + 0x8 ] edi
jle r-xdata
mov eax [ esi ]
mov edi [ free@IAT ]
test eax eax
je r-xdata
jmp r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
push eax
call edi
add esp 0x4
mov [ esi ] 0x0
test edi edi
jl r-xdata
pop edi
mov [ esi + 0x8 ] 0x0
xor eax eax
pop esi
retn
push eax
call edi
add esp 0x4
mov [ esi + 0x4 ] 0x0
push 0x0
push 0x0
push 0x1
push 0xc000008c
call [ RaiseException@IAT ]
int3
cmp edi [ esi + 0x8 ]
jge r-xdata
mov eax [ esi ]
mov ecx [ eax + edi * 4 ]
push ecx
call ??_V@YAXPAX@Z
add esp 0x4
cmp edi [ esi + 0x8 ]
jge r-xdata
mov edx [ esi + 0x4 ]
mov eax [ edx + edi * 4 ]
push eax
call ??_V@YAXPAX@Z
inc edi
add esp 0x4
cmp edi [ esi + 0x8 ]
jl r-xdata
sub_403b80
push ebp
mov ebp esp
push 0xffffffff
push sub_41a068
mov eax [ fs : 0x0 ]
push eax
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov esi [ ebp + 0x8 ]
xor eax eax
cmp esi eax
jne r-xdata
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] eax
push esi
call [ lstrlenW@IAT ]
push eax
push esi
mov ecx edi
call sub_4032c0
mov esi eax
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp + 0x8 ]
call sub_403850
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_403c00
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
lea esi [ edi + 0x10 ]
push esi
call [ EnterCriticalSection@IAT ]
lea ecx [ edi + 0x4 ]
call sub_403af0
push esi
mov edi eax
call [ LeaveCriticalSection@IAT ]
mov eax edi
pop edi
pop esi
pop ebp
retn 0x4
sub_403c50
push esi
mov esi ecx
mov eax [ esi ]
push edi
mov edi [ free@IAT ]
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
push eax
call edi
add esp 0x4
mov [ esi ] 0x0
pop edi
mov [ esi + 0x8 ] 0x0
pop esi
retn
push eax
call edi
add esp 0x4
mov [ esi + 0x4 ] 0x0
sub_403cc0
push ebp
mov ebp esp
push 0xffffffff
push sub_41a0c3
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ ecx ]
add edx edx
add edx edx
add eax edx
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0x0
je r-xdata
or esi 0xffffffff
mov [ ebp - 0x4 ] esi
mov eax [ ecx + 0x4 ]
add eax edx
mov [ ebp + 0xc ] eax
mov [ ebp - 0x4 ] 0x1
je r-xdata
mov esi [ ebp + 0xc ]
mov esi [ esi ]
mov [ eax ] esi
mov [ ebp - 0x4 ] esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0xc
mov ecx [ ebp + 0x10 ]
mov edx [ ecx ]
mov [ eax ] edx
sub_403d40
push ebp
mov ebp esp
push 0xffffffff
push sub_41a0e8
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] ecx
mov [ ecx ] r--data
mov [ ebp - 0x4 ] 0xffffffff
call sub_402780
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_403d90
push ebp
mov ebp esp
push 0xffffffff
push sub_41a118
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0xffffffff
call sub_402780
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
push esi
call ??3@YAXPAX@Z
add esp 0x4
sub_403df0
push ebp
mov ebp esp
push 0xffffffff
push sub_41a148
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
xor edi edi
mov [ ebp - 0x4 ] edi
call sub_403af0
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ esi ]
mov ebx [ free@IAT ]
cmp eax edi
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax edi
je r-xdata
push eax
call ebx
add esp 0x4
mov [ esi ] edi
mov [ esi + 0x8 ] edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push eax
call ebx
add esp 0x4
mov [ esi + 0x4 ] edi
sub_403e70
push ebp
mov ebp esp
push 0xffffffff
push sub_41a186
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x1
lea edi [ esi + 0x10 ]
push edi
call [ EnterCriticalSection@IAT ]
add esi 0x4
mov ecx esi
call sub_403af0
push edi
call [ LeaveCriticalSection@IAT ]
mov [ ebp - 0x4 ] 0x0
mov ecx edi
call sub_403360
mov [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_403df0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_403f20
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_403e70
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call ??3@YAXPAX@Z
add esp 0x4
sub_403f50
push ebp
mov ebp esp
push esi
push edi
mov esi ecx
lea edi [ esi + 0x10 ]
push edi
call [ EnterCriticalSection@IAT ]
lea eax [ ebp + 0x8 ]
add esi 0x4
push eax
mov ecx esi
call sub_403880
cmp eax 0xffffffff
jne r-xdata
test eax eax
jl r-xdata
push edi
xor esi esi
call [ LeaveCriticalSection@IAT ]
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
push 0x0
push 0x0
push 0x1
push 0xc000008c
call [ RaiseException@IAT ]
int3
cmp eax [ esi + 0x8 ]
jge r-xdata
mov ecx [ esi + 0x4 ]
mov esi [ ecx + eax * 4 ]
push edi
call [ LeaveCriticalSection@IAT ]
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
sub_403fc0
push ebp
mov ebp esp
push 0xffffffff
push sub_41a1b8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x64
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
mov esi ecx
mov [ ebp - 0x70 ] ebx
test edi edi
je r-xdata
mov eax 0x80004003
test ebx ebx
je r-xdata
push edi
mov [ ebx ] 0x0
call [ lstrlenW@IAT ]
add eax eax
push eax
lea ecx [ ebp - 0x6c ]
call sub_403260
xor eax eax
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x64 ] eax
jne r-xdata
mov [ esi ] edi
mov cl [ rw-data ]
mov [ ebp - 0x59 ] cl
mov [ ebp - 0x58 ] eax
mov [ ebp - 0x60 ] eax
mov [ ebp - 0x52 ] al
mov [ ebp - 0x51 ] al
cmp [ edi ] ax
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
push eax
call [ CoTaskMemFree@IAT ]
mov eax 0x8007000e
jmp r-xdata
mov ecx [ ebp - 0x64 ]
mov [ ebp - 0x64 ] eax
mov [ ebp - 0x6c ] eax
mov [ ebp - 0x68 ] eax
mov [ ebx ] ecx
mov ebx [ CharNextW@IAT ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_401736
mov esp ebp
pop ebp
retn 0x8
mov eax [ esi ]
cmp [ eax ] 0x25
jne r-xdata
cmp [ ebp - 0x60 ] 0x0
jne r-xdata
push 0x1
push eax
lea ecx [ ebp - 0x6c ]
call sub_4032c0
test eax eax
je r-xdata
push eax
call ebx
mov [ esi ] eax
cmp [ eax ] 0x25
je r-xdata
mov edx [ esi ]
mov eax 0x27
cmp ax [ edx ]
jne r-xdata
mov eax [ esi ]
push r--data
push eax
call [ wcsstr@IAT ]
add esp 0x8
test eax eax
je r-xdata
mov [ ebp - 0x58 ] 0x8007000e
jmp r-xdata
mov eax [ esi ]
push eax
call ebx
mov ecx eax
mov [ esi ] eax
cmp [ ecx ] 0x0
jne r-xdata
push 0x25
push eax
call sub_403520
mov edi eax
add esp 0x8
test edi edi
je r-xdata
cmp [ ebp - 0x51 ] 0x0
jne r-xdata
cmp [ ebp - 0x51 ] 0x0
jne r-xdata
mov ecx [ esi ]
cmp eax ecx
jne r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov edx [ ebp - 0x64 ]
push edx
call [ CoTaskMemFree@IAT ]
mov eax [ ebp - 0x58 ]
jmp r-xdata
cmp [ ebp - 0x59 ] 0x1
jne r-xdata
mov ebx [ ebp - 0x70 ]
xor eax eax
mov [ ebp - 0x58 ] 0x80020009
jmp r-xdata
mov ecx [ esi ]
sub eax ecx
sar eax 0x1
cmp eax 0x1f
jg r-xdata
mov edx [ esi ]
movzx eax [ edx ]
cmp ax 0x7b
jne r-xdata
mov ecx esi
call sub_403230
test eax eax
je r-xdata
mov [ ebp - 0x51 ] 0x1
jmp r-xdata
push ecx
call ebx
push eax
mov [ esi ] eax
call ebx
push eax
mov [ esi ] eax
call ebx
push eax
mov [ esi ] eax
call ebx
push r--data
lea ecx [ ebp - 0x6c ]
mov [ esi ] eax
call sub_403b80
test eax eax
je r-xdata
mov [ ebp - 0x58 ] 0x80004005
jmp r-xdata
push eax
push ecx
lea eax [ ebp - 0x50 ]
push 0x20
push eax
call [ wcsncpy_s@IAT ]
push eax
call sub_402e70
add esp 0x14
lea ecx [ ebp - 0x50 ]
push ecx
mov ecx [ esi + 0x4 ]
call sub_403f50
test eax eax
je r-xdata
cmp ax 0x7d
jne r-xdata
inc [ ebp - 0x60 ]
mov ecx [ esi ]
push ecx
call ebx
push 0x1
push eax
lea ecx [ ebp - 0x6c ]
mov [ esi ] eax
call sub_4032c0
test eax eax
je r-xdata
mov [ ebp - 0x51 ] 0x0
jmp r-xdata
mov [ ebp - 0x52 ] 0x1
push eax
lea ecx [ ebp - 0x6c ]
call sub_403b80
test eax eax
je r-xdata
sub [ ebp - 0x60 ] 0x1
jne r-xdata
cmp [ esi ] edi
je r-xdata
cmp [ ebp - 0x52 ] 0x1
jne r-xdata
nop
push r--data
lea ecx [ ebp - 0x6c ]
call sub_403b80
test eax eax
je r-xdata
mov edx [ esi ]
push edx
call ebx
mov [ esi ] eax
cmp eax edi
jne r-xdata
jmp r-xdata
mov [ ebp - 0x52 ] 0x0
sub_404250
push ebp
mov ebp esp
push 0xffffffff
push sub_41a1e8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
mov esi [ ebp + 0xc ]
test esi esi
je r-xdata
push 0x0
push 0x0
push 0x1
push 0xc0000005
call [ RaiseException@IAT ]
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
mov [ esi ] eax
call [ GetCurrentThreadId@IAT ]
lea edi [ ebx + 0x4 ]
mov [ ebp - 0x14 ] edi
mov [ esi + 0x4 ] eax
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0x4 ] 0x0
push edi
call [ EnterCriticalSection@IAT ]
mov eax [ ebx + 0x1c ]
mov [ esi + 0x8 ] eax
mov [ ebp - 0x10 ] 0x1
mov [ ebx + 0x1c ] esi
mov [ ebp - 0x4 ] 0xffffffff
push edi
call [ LeaveCriticalSection@IAT ]
mov [ ebp - 0x10 ] 0x0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_404300
push ebp
mov ebp esp
push 0xffffffff
push sub_41a1e8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi [ ebp + 0x8 ]
xor ebx ebx
cmp edi ebx
jne r-xdata
lea eax [ edi + 0x4 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] bl
mov [ ebp - 0x4 ] ebx
push eax
call [ EnterCriticalSection@IAT ]
mov esi [ edi + 0x1c ]
mov [ ebp - 0x10 ] 0x1
test esi esi
je r-xdata
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x14 ]
push eax
call [ LeaveCriticalSection@IAT ]
mov [ ebp - 0x10 ] 0x0
mov eax ebx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
call [ GetCurrentThreadId@IAT ]
xor ecx ecx
lea ecx [ ecx ]
test ecx ecx
jne r-xdata
mov ecx esi
mov esi [ esi + 0x8 ]
test esi esi
jne r-xdata
mov edx [ esi + 0x8 ]
mov [ ecx + 0x8 ] edx
mov eax [ esi + 0x8 ]
mov [ edi + 0x1c ] eax
jmp r-xdata
cmp [ esi + 0x4 ] eax
je r-xdata
jmp r-xdata
mov ebx [ esi ]
sub_4043c0
push ebp
mov ebp esp
push 0xffffffff
push sub_41a218
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] 0xffffffff
cmp [ esi + 0x4 ] 0x0
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
mov eax [ esi ]
push eax
call [ LeaveCriticalSection@IAT ]
mov [ esi + 0x4 ] 0x0
sub_404420
push ebp
mov ebp esp
push 0xffffffff
push sub_41a250
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
or eax 0xffffffff
mov [ ebp - 0x4 ] eax
mov [ esi ] r--data
mov [ ebp - 0x4 ] eax
call sub_402780
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
push esi
call ??3@YAXPAX@Z
add esp 0x4
sub_404480
push ebp
mov ebp esp
push 0xffffffff
push sub_41a286
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax ecx
mov [ ebp - 0x10 ] eax
xor ecx ecx
mov [ eax ] r--data
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ ebp - 0x4 ] ecx
mov [ eax + 0x10 ] ecx
mov [ eax + 0x14 ] ecx
mov [ eax + 0x18 ] ecx
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_4044e0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi [ edi + 0x8 ]
sub esi 0x1
js r-xdata
pop edi
pop esi
xor eax eax
pop ebx
pop ebp
retn 0x4
mov ebx [ ebp + 0x8 ]
push 0x0
push 0x0
push 0x1
push 0xc000008c
call [ RaiseException@IAT ]
int3
cmp esi [ edi + 0x8 ]
jge r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ eax + esi * 4 ]
test ecx ecx
je r-xdata
sub esi 0x1
jns r-xdata
mov edx [ ecx ]
mov eax [ edx ]
push ebx
call eax
test eax eax
jne r-xdata
test esi esi
jl r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
pop ebp
retn 0x4
sub_404540
push esi
push edi
mov edi ecx
xor esi esi
cmp [ edi + 0x14 ] esi
jle r-xdata
pop edi
xor eax eax
pop esi
retn 0x4
jmp r-xdata
test esi esi
jl r-xdata
push 0x0
push 0x0
push 0x1
push 0xc000008c
call [ RaiseException@IAT ]
int3
cmp esi [ edi + 0x14 ]
jge r-xdata
mov eax [ edi + 0x10 ]
mov ecx [ eax + esi * 4 ]
test ecx ecx
je r-xdata
inc esi
cmp esi [ edi + 0x14 ]
jl r-xdata
mov edx [ ecx ]
mov eax [ edx ]
call eax
sub_404590
push ebp
mov ebp esp
push 0xffffffff
push sub_41a2c6
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
xor edi edi
mov [ ebp - 0x4 ] edi
mov eax [ esi + 0x10 ]
mov ebx [ free@IAT ]
cmp eax edi
je r-xdata
mov [ esi + 0x14 ] edi
mov [ esi + 0x18 ] edi
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ esi + 0x4 ]
cmp eax edi
je r-xdata
push eax
call ebx
add esp 0x4
mov [ esi + 0x10 ] edi
mov [ esi + 0xc ] edi
mov [ esi + 0x8 ] edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push eax
call ebx
add esp 0x4
mov [ esi + 0x4 ] edi
sub_404610
push ebp
mov ebp esp
push 0xffffffff
push sub_41a2f8
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] 0xffffffff
call sub_402cd0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_404660
push ebp
mov ebp esp
push 0xffffffff
push sub_41a328
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ecx ]
push eax
call ??3@YAXPAX@Z
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_4046b0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
cmp [ edi + 0x15 ] 0x0
mov ebx ecx
mov esi edi
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov eax [ esi + 0x8 ]
push eax
mov ecx ebx
call sub_4046b0
mov esi [ esi ]
push edi
call ??3@YAXPAX@Z
add esp 0x4
cmp [ esi + 0x15 ] 0x0
mov edi esi
je r-xdata
sub_4046f0
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ecx
mov edx [ esi + 0x4 ]
mov eax [ esi + 0x8 ]
push edi
cmp edx eax
jne r-xdata
mov eax [ esi + 0x4 ]
push ebx
push eax
mov ecx esi
call sub_402d60
mov eax 0x1
add [ esi + 0x4 ] eax
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov ecx [ esi ]
cmp ebx ecx
jb r-xdata
test eax eax
jne r-xdata
lea edi [ ecx + eax * 2 ]
cmp ebx edi
jae r-xdata
lea edi [ edx + edx ]
test edi edi
jl r-xdata
lea edi [ eax + 0x1 ]
jmp r-xdata
push 0x80004005
call sub_401870
pop edi
pop esi
xor eax eax
pop ebx
pop ebp
retn 0x4
cmp edi 0x3fffffff
ja r-xdata
push 0x2
push edi
push ecx
call [ _recalloc@IAT ]
add esp 0xc
test eax eax
je r-xdata
mov [ esi + 0x8 ] edi
mov [ esi ] eax
sub_404770
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x8 ]
mov ecx [ esi ]
push edi
mov edi [ _recalloc@IAT ]
push 0x4
inc eax
push eax
push ecx
call edi
add esp 0xc
test eax eax
jne r-xdata
mov edx [ esi + 0x8 ]
push 0x4
inc edx
mov [ esi ] eax
mov eax [ esi + 0x4 ]
push edx
push eax
call edi
add esp 0xc
test eax eax
je r-xdata
pop edi
xor eax eax
pop esi
pop ebp
retn 0x8
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
push ecx
mov [ esi + 0x4 ] eax
mov eax [ esi + 0x8 ]
push edx
push eax
mov ecx esi
call sub_403cc0
inc [ esi + 0x8 ]
pop edi
mov eax 0x1
pop esi
pop ebp
retn 0x8
sub_4047e0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
mov ecx 0x2
mul ecx
test edx edx
ja r-xdata
push 0x80070057
call sub_401870
cmp eax 0xffffffff
jbe r-xdata
cmp eax 0x400
jbe r-xdata
lea edx [ esi + 0x4 ]
mov [ esi ] edx
mov eax edx
pop esi
pop ebp
retn 0x4
push eax
mov ecx esi
call sub_4038d0
mov eax [ esi ]
pop esi
pop ebp
retn 0x4
sub_404830
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
mov ecx 0x2
mul ecx
test edx edx
ja r-xdata
push 0x80070057
call sub_401870
cmp eax 0xffffffff
jbe r-xdata
cmp eax 0x100
jbe r-xdata
lea edx [ esi + 0x4 ]
mov [ esi ] edx
mov eax edx
pop esi
pop ebp
retn 0x4
push eax
mov ecx esi
call sub_4038d0
mov eax [ esi ]
pop esi
pop ebp
retn 0x4
sub_404880
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
xor ecx ecx
ja r-xdata
push 0x80070057
call sub_401870
cmp eax 0xffffffff
jbe r-xdata
cmp eax 0x100
jbe r-xdata
lea eax [ esi + 0x4 ]
mov [ esi ] eax
pop esi
pop ebp
retn 0x4
push eax
mov ecx esi
call sub_4038d0
mov eax [ esi ]
pop esi
pop ebp
retn 0x4
sub_4048c0
push ebp
mov ebp esp
push 0xffffffff
push sub_41a360
mov eax [ fs : 0x0 ]
push eax
sub esp 0x20
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x2c ] ecx
mov eax [ ebp + 0x8 ]
xor ebx ebx
cmp eax ebx
je r-xdata
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp [ ebp + 0xc ] ebx
je r-xdata
mov [ ebp - 0x20 ] ebx
push eax
call [ lstrlenW@IAT ]
lea esi [ eax + eax + 0x2 ]
mov [ ebp - 0x28 ] esi
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x4 ] ebx
xor ecx ecx
mov eax esi
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call ??_U@YAPAXI@Z
add esp 0x4
mov edi eax
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x4 ] 0x2
mov [ ebp - 0x18 ] edi
mov eax [ ebp + 0xc ]
push eax
call [ lstrlenW@IAT ]
lea esi [ eax + eax + 0x2 ]
mov [ ebp - 0x24 ] esi
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x4 ] 0x3
xor ecx ecx
mov eax esi
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call ??_U@YAPAXI@Z
add esp 0x4
mov ebx eax
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x4 ] 0x2
jmp r-xdata
mov [ ebp - 0x24 ] 0x0
mov [ ebp - 0x4 ] 0x5
mov [ ebp - 0x24 ] ebx
test edi edi
je r-xdata
mov [ ebp - 0x20 ] 0x8007000e
jmp r-xdata
test ebx ebx
je r-xdata
xor edx edx
cmp [ ebp - 0x20 ] edx
setge dl
mov esi edx
mov [ ebp - 0x4 ] 0x2
push ebx
call ??_V@YAXPAX@Z
xor edi edi
mov [ ebp - 0x24 ] edi
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x18 ]
push eax
call ??_V@YAXPAX@Z
add esp 0x8
mov [ ebp - 0x18 ] edi
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp - 0x28 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
push eax
push edi
call sub_402f10
push esi
mov edx [ ebp + 0xc ]
push edx
push esi
push ebx
call sub_402f10
add esp 0x20
lea eax [ ebp - 0x1c ]
push eax
lea ecx [ ebp - 0x14 ]
push ecx
mov ecx [ ebp - 0x2c ]
call sub_404770
test eax eax
jne r-xdata
xor ebx ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x24 ] ebx
sub_404a70
push ebp
mov ebp esp
push 0xffffffff
push sub_41a388
mov eax [ fs : 0x0 ]
push eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov eax 0x80070057
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov ebx [ ebp + 0x10 ]
test ebx ebx
je r-xdata
mov esi [ ebp + 0x8 ]
lea edi [ esi + 0x10 ]
push edi
call [ EnterCriticalSection@IAT ]
xor eax eax
mov [ ebp + 0x10 ] eax
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push ebx
push eax
lea ecx [ esi + 0x4 ]
call sub_4048c0
push edi
mov esi eax
call [ LeaveCriticalSection@IAT ]
neg esi
sbb esi esi
and esi 0x7ff8fff2
add esi 0x8007000e
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp + 0x10 ]
call sub_403850
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_404b20
push ebp
mov ebp esp
push 0xffffffff
push sub_41a3d1
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax 0x2120
call sub_419310
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x2128 ] ecx
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x2120 ] edi
mov ebx [ ebp + 0xc ]
mov [ ebp - 0x212c ] ebx
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x2130 ] eax
xor esi esi
mov [ ebp - 0x211c ] esi
lea edx [ ebp - 0x2014 ]
push edx
call sub_4035d0
cmp eax esi
jl r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_401736
mov esp ebp
pop ebp
retn 0xc
lea eax [ ebp - 0x211c ]
push eax
lea ecx [ ebp - 0x2014 ]
push ecx
call sub_4033b0
add esp 0x8
test eax eax
jne r-xdata
mov ecx [ ebp - 0x2128 ]
call sub_403570
lea edx [ ebp - 0x2014 ]
push edx
mov ecx [ ebp - 0x2128 ]
call sub_4035d0
cmp eax esi
jl r-xdata
mov eax 0x80020009
jmp r-xdata
movzx eax [ ebp - 0x211c ]
cmp eax 0x13
jg r-xdata
cmp eax 0x4008
jne r-xdata
je r-xdata
mov ecx [ ebp - 0x2130 ]
push ecx
mov ecx [ ebp - 0x2128 ]
call sub_4035d0
xor edx edx
cmp eax esi
setge dl
dec edx
and eax edx
lea edx [ ebp - 0x2014 ]
push edx
call [ lstrlenW@IAT ]
add eax 0x2
mov [ ebp - 0x2118 ] esi
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x4 ] 0x1
push eax
lea ecx [ ebp - 0x2118 ]
call sub_404830
mov [ ebp - 0x4 ] esi
jmp r-xdata
mov [ ebp - 0x2120 ] esi
mov [ ebp - 0x4 ] 0x3
lea edx [ ebp - 0x2124 ]
push edx
push esi
push esi
lea eax [ ebp - 0x2014 ]
push eax
call [ VarUI4FromStr@IAT ]
mov ecx [ ebp - 0x2124 ]
push ecx
push ebx
mov ecx edi
call sub_403170
mov edi eax
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x2120 ]
call sub_403850
jmp r-xdata
cmp eax 0x8
je r-xdata
mov eax [ ebp - 0x2118 ]
cmp eax esi
je r-xdata
cmp edi esi
je r-xdata
push 0x1
lea ecx [ ebp - 0x2014 ]
push ecx
push ebx
mov ecx edi
call sub_403190
mov edi eax
jmp r-xdata
cmp eax 0x11
jne r-xdata
mov edi 0xe
mov esi eax
lea edi [ ebp - 0x2014 ]
cmp [ ebp - 0x2014 ] 0x0
je r-xdata
push edi
call sub_402f80
add esp 0x4
jmp r-xdata
lea eax [ ebp - 0x2014 ]
push eax
call [ lstrlenW@IAT ]
mov ebx eax
mov [ ebp - 0x2124 ] ebx
test bl 0x1
jne r-xdata
lea ecx [ ebp - 0x2118 ]
call sub_4038c0
xor edx edx
mov [ esi ] dx
add esi 0x2
xor eax eax
mov [ esi ] ax
mov ecx [ ebp - 0x2118 ]
push ecx
mov edx [ ebp - 0x212c ]
push edx
mov ecx [ ebp - 0x2120 ]
call sub_4031d0
mov edi eax
xor esi esi
jmp r-xdata
mov ebx [ CharNextW@IAT ]
mov eax 0x80004005
jmp r-xdata
cdq
sub eax edx
mov edi eax
sar edi 0x1
mov [ ebp - 0x211c ] edi
mov [ ebp - 0x2118 ] esi
mov [ ebp - 0x4 ] 0x4
mov [ ebp - 0x4 ] 0x5
push edi
lea ecx [ ebp - 0x2118 ]
call sub_404880
mov [ ebp - 0x4 ] 0x4
jmp r-xdata
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0x2114 ]
cmp [ ebp - 0x2118 ] eax
je r-xdata
mov [ esi ] cx
add esi 0x2
add edi 0x2
cmp [ eax ] 0x30
jne r-xdata
mov eax [ ebp - 0x2118 ]
cmp eax esi
jne r-xdata
push edi
call ebx
movzx ecx [ edi ]
cmp cx 0x5c
jne r-xdata
xor ecx ecx
mov [ esi ] cx
add esi 0x2
push eax
call ebx
mov edi eax
jmp r-xdata
push edi
push esi
push eax
call memset
add esp 0xc
cmp ebx esi
jle r-xdata
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x2114 ]
cmp [ ebp - 0x2118 ] ecx
je r-xdata
cmp [ edi ] 0x0
jne r-xdata
mov eax [ ebp - 0x2120 ]
mov eax [ eax ]
push edi
mov ecx [ ebp - 0x2118 ]
push ecx
push 0x3
push esi
mov edx [ ebp - 0x212c ]
push edx
push eax
call [ RegSetValueExW@IAT ]
mov edi eax
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0x2114 ]
cmp [ ebp - 0x2118 ] eax
je r-xdata
nop
lea ecx [ ebp - 0x2118 ]
call sub_4038c0
lea ecx [ ebp - 0x2118 ]
call sub_4038c0
jmp r-xdata
mov edx esi
shr edx 0x1
mov eax [ ebp - 0x2118 ]
lea edi [ edx + eax ]
movzx ecx [ ebp + esi * 2 - 0x2014 ]
push ecx
call sub_4034a0
add esp 0x4
mov edx esi
and edx 0x1
add edx edx
add edx edx
mov ecx 0x4
sub ecx edx
shl al cl
or [ edi ] al
inc esi
cmp esi ebx
jl r-xdata
xor esi esi
mov edi [ ebp - 0x211c ]
sub_404ee0
push ebp
mov ebp esp
push 0xffffffff
push sub_41a437
mov eax [ fs : 0x0 ]
push eax
mov eax 0x224c
call sub_419310
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0x221c ] ecx
mov [ ebp - 0x222c ] eax
mov [ ebp - 0x2224 ] ebx
mov [ ebp - 0x2220 ] ebx
mov [ ebp - 0x4 ] ebx
mov edx [ ebp + 0x14 ]
push edi
mov [ ebp - 0x2254 ] edx
call sub_4035d0
mov esi eax
cmp esi ebx
jge r-xdata
cmp [ edi ] 0x7d
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov [ ebp - 0x2220 ] ebx
jmp r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x2224 ]
xor edi edi
cmp eax edi
je r-xdata
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_401736
mov esp ebp
pop ebp
retn 0x10
mov [ ebp - 0x2220 ] edi
push eax
call [ RegCloseKey@IAT ]
mov [ ebp - 0x2224 ] edi
mov esi [ lstrcmpiW@IAT ]
push r--data
push edi
mov [ ebp - 0x2228 ] 0x1
call esi
mov ebx eax
neg ebx
push r--data
sbb ebx ebx
push edi
inc ebx
call esi
test eax eax
je r-xdata
mov ecx [ ebp - 0x221c ]
push edi
call sub_4035d0
mov esi eax
test esi esi
jl r-xdata
test ebx ebx
je r-xdata
xor esi esi
cmp [ ebp + 0x10 ] esi
je r-xdata
xor esi esi
push r--data
push edi
call [ lstrcmpiW@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x2238 ] esi
mov [ ebp - 0x2234 ] esi
mov [ ebp - 0x4 ] 0x1
push 0x5c
push edi
call sub_403520
add esp 0x8
test eax eax
jne r-xdata
mov ebx [ ebp - 0x222c ]
push r--data
push edi
call [ lstrcmpiW@IAT ]
test eax eax
jne r-xdata
mov ecx [ ebp - 0x221c ]
push edi
mov [ ebp - 0x2228 ] eax
call sub_4035d0
mov esi eax
test esi esi
jl r-xdata
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x2238 ]
call sub_403900
mov ecx [ ebp - 0x221c ]
push edi
call sub_403750
test eax eax
je r-xdata
push 0x5c
push edi
call sub_403520
add esp 0x8
test eax eax
jne r-xdata
lea ecx [ ebp - 0x2218 ]
push ecx
mov ecx [ ebp - 0x221c ]
call sub_4035d0
mov esi eax
test esi esi
jl r-xdata
xor esi esi
cmp ebx esi
je r-xdata
mov eax [ ebp - 0x222c ]
push edi
lea ecx [ ebp - 0x2238 ]
mov [ ebp - 0x2238 ] eax
mov [ ebp - 0x2234 ] esi
call sub_403920
mov [ ebp - 0x2238 ] esi
mov [ ebp - 0x2234 ] esi
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x2224 ]
call sub_403900
mov eax 0x80020009
jmp r-xdata
cmp [ ebp + 0x10 ] esi
je r-xdata
mov ecx [ ebp - 0x221c ]
push edi
call sub_4035d0
mov esi eax
test esi esi
jl r-xdata
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x2234 ] esi
jmp r-xdata
mov ebx [ ebp - 0x221c ]
push edi
mov ecx ebx
call sub_4035d0
mov esi eax
test esi esi
jl r-xdata
cmp [ ebp + 0x14 ] esi
jne r-xdata
lea ecx [ ebp - 0x2228 ]
push ecx
push 0x2001f
push esi
push edi
push ebx
mov [ ebp - 0x2228 ] esi
call [ RegOpenKeyExW@IAT ]
cmp eax esi
jne r-xdata
cmp [ edi ] 0x3d
jne r-xdata
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x2238 ]
jmp r-xdata
push edi
mov ecx ebx
call sub_4037e0
mov esi eax
test esi esi
jl r-xdata
mov [ ebp - 0x2230 ] 0x2
mov ebx [ ebp - 0x2230 ]
jmp r-xdata
push 0x20019
push edi
push ebx
lea ecx [ ebp - 0x2224 ]
call sub_403110
mov ebx eax
mov [ ebp - 0x2230 ] eax
cmp ebx esi
je r-xdata
push 0x20019
push edi
push ebx
lea ecx [ ebp - 0x2224 ]
call sub_403110
cmp eax esi
je r-xdata
mov ecx [ ebp - 0x2224 ]
xor eax eax
cmp ecx esi
je r-xdata
xor ebx ebx
cmp [ ebp + 0x10 ] ebx
je r-xdata
call sub_403900
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x2234 ] 0x0
mov [ ebp + 0x14 ] 0x1
push 0xffffffff
push edi
lea ecx [ ebp - 0x218 ]
push 0x104
push ecx
call [ wcsncpy_s@IAT ]
push eax
call sub_402e70
mov ecx [ ebp - 0x221c ]
add esp 0x14
push edi
call sub_4035d0
mov esi eax
test esi esi
jl r-xdata
mov ecx [ ebp - 0x221c ]
push edi
call sub_4035d0
mov esi eax
test esi esi
jl r-xdata
lea eax [ ebp - 0x2258 ]
push eax
lea ecx [ ebp - 0x2228 ]
push ecx
push esi
push 0x2001f
push esi
push esi
push esi
push edi
push ebx
mov [ ebp - 0x2228 ] esi
call [ RegCreateKeyExW@IAT ]
cmp eax esi
jne r-xdata
mov edx [ ebp - 0x2228 ]
mov [ ebp - 0x2220 ] esi
mov [ ebp - 0x2224 ] edx
mov [ ebp - 0x2220 ] esi
cmp eax esi
je r-xdata
push ecx
call [ RegCloseKey@IAT ]
mov [ ebp - 0x2224 ] esi
cmp [ ebp + 0x14 ] ebx
jne r-xdata
mov [ ebp - 0x2240 ] ebx
mov [ ebp - 0x223c ] ebx
mov [ ebp - 0x4 ] 0x2
mov edx [ ebp - 0x222c ]
push edi
lea eax [ ebp - 0x2218 ]
push eax
lea ecx [ ebp - 0x2240 ]
push ecx
mov ecx [ ebp - 0x221c ]
mov [ ebp - 0x2240 ] edx
mov [ ebp - 0x223c ] ebx
call sub_404b20
mov esi eax
cmp esi ebx
mov [ ebp - 0x2240 ] ebx
mov [ ebp - 0x223c ] ebx
jl r-xdata
cmp [ edi ] 0x7d
jne r-xdata
push edi
call [ lstrlenW@IAT ]
cmp eax 0x1
jne r-xdata
mov ecx [ ebp - 0x221c ]
push edi
call sub_4037e0
mov esi eax
test esi esi
jl r-xdata
cmp [ edi ] 0x3d
jne r-xdata
push eax
call sub_402f80
add esp 0x4
mov esi eax
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x2224 ]
call sub_403900
jmp r-xdata
mov ecx [ ebp - 0x2224 ]
xor eax eax
cmp ecx esi
je r-xdata
mov ecx [ ebp - 0x221c ]
push edi
call sub_4037e0
mov esi eax
cmp esi ebx
jmp r-xdata
cmp [ ebp - 0x2228 ] ebx
je r-xdata
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x2240 ]
call sub_403900
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x2224 ]
call sub_403900
jmp r-xdata
mov [ ebp - 0x4 ] bl
mov [ ebp - 0x223c ] ebx
jmp r-xdata
jmp r-xdata
mov edx [ ebp + 0x10 ]
mov eax [ ebp - 0x2224 ]
mov ecx [ ebp - 0x221c ]
push 0x0
push edx
push eax
push edi
call sub_404ee0
mov esi eax
test esi esi
jl r-xdata
cmp [ edi ] 0x7b
jne r-xdata
cmp [ edi ] 0x7b
jne r-xdata
mov ecx [ ebp - 0x221c ]
push edi
push 0x0
lea eax [ ebp - 0x2224 ]
push eax
call sub_404b20
mov esi eax
test esi esi
jl r-xdata
mov eax esi
mov edx [ ebp - 0x2228 ]
mov [ ebp - 0x2220 ] esi
mov [ ebp - 0x2224 ] edx
mov [ ebp - 0x2220 ] esi
cmp eax esi
jne r-xdata
push ecx
call [ RegCloseKey@IAT ]
mov [ ebp - 0x2224 ] esi
jl r-xdata
mov [ ebp - 0x2250 ] ebx
mov [ ebp - 0x224c ] ebx
mov [ ebp - 0x4 ] 0x3
mov edx [ ebp - 0x222c ]
push 0x20006
push ebx
push edx
lea ecx [ ebp - 0x2250 ]
call sub_403110
cmp eax ebx
jne r-xdata
mov ecx [ ebp - 0x221c ]
push edi
call sub_4035d0
mov esi eax
test esi esi
mov eax [ ebp - 0x2254 ]
mov [ ebp + 0x14 ] eax
cmp ebx 0x2
je r-xdata
push edi
call [ lstrlenW@IAT ]
cmp eax 0x1
jne r-xdata
jmp r-xdata
push eax
call sub_402f80
add esp 0x4
mov esi eax
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x2250 ]
jmp r-xdata
mov esi [ ebp - 0x2250 ]
lea eax [ ebp - 0x2218 ]
push eax
push esi
call [ RegDeleteValueW@IAT ]
cmp eax ebx
je r-xdata
test ebx ebx
je r-xdata
mov ebx [ ebp + 0x14 ]
mov edx [ ebp - 0x2224 ]
mov ecx [ ebp - 0x221c ]
push ebx
push 0x0
push edx
push edi
call sub_404ee0
mov esi eax
test esi esi
jge r-xdata
mov [ ebp - 0x4 ] 0x0
cmp esi ebx
je r-xdata
cmp eax 0x2
jne r-xdata
mov ebx [ ebp - 0x2224 ]
test eax eax
je r-xdata
test eax eax
jne r-xdata
mov ecx [ ebp - 0x221c ]
push edi
call sub_4035d0
mov esi eax
test esi esi
jl r-xdata
test ebx ebx
je r-xdata
mov [ ebp - 0x224c ] ebx
push esi
call [ RegCloseKey@IAT ]
mov [ ebp - 0x2250 ] ebx
mov ecx [ ebp - 0x221c ]
push ebx
call sub_403790
mov [ ebp - 0x2230 ] eax
xor eax eax
test ebx ebx
je r-xdata
mov ecx [ ebp - 0x221c ]
push ebx
call sub_403790
test eax eax
je r-xdata
push ebx
call sub_402f80
add esp 0x4
mov esi eax
jmp r-xdata
mov ebx [ ebp - 0x2230 ]
mov [ ebp - 0x2220 ] 0x0
test eax eax
jne r-xdata
push ebx
call [ RegCloseKey@IAT ]
mov [ ebp - 0x2224 ] 0x0
lea ecx [ ebp - 0x218 ]
push ecx
mov ecx [ ebp - 0x221c ]
call sub_403750
test eax eax
je r-xdata
cmp [ ebp - 0x2228 ] eax
je r-xdata
cmp [ ebp - 0x2228 ] 0x0
je r-xdata
cmp [ ebp - 0x2230 ] eax
jne r-xdata
lea edx [ ebp - 0x218 ]
push edx
lea ecx [ ebp - 0x2224 ]
call sub_403920
jmp r-xdata
xor ebx ebx
mov [ ebp - 0x2248 ] ebx
mov [ ebp - 0x2244 ] ebx
mov [ ebp - 0x4 ] 0x4
mov eax [ ebp - 0x222c ]
lea ecx [ ebp - 0x218 ]
push ecx
lea ecx [ ebp - 0x2248 ]
mov [ ebp - 0x2248 ] eax
mov [ ebp - 0x2244 ] ebx
call sub_4030a0
mov [ ebp - 0x2248 ] ebx
mov [ ebp - 0x2244 ] ebx
cmp eax ebx
jne r-xdata
push eax
call sub_402f80
add esp 0x4
mov esi eax
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x2248 ]
mov [ ebp - 0x4 ] bl
lea ecx [ ebp - 0x2248 ]
call sub_403900
jmp r-xdata
sub_405680
push ebp
mov ebp esp
push 0xffffffff
push sub_41a486
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax ecx
mov [ ebp - 0x10 ] eax
lea ecx [ eax + 0x4 ]
mov [ eax ] r--data
mov [ ebp - 0x14 ] ecx
mov [ ecx ] 0x0
mov [ ecx + 0x4 ] 0x0
mov [ ecx + 0x8 ] 0x0
mov [ ebp - 0x4 ] 0x1
lea edx [ eax + 0x10 ]
xor esi esi
mov [ edx ] esi
mov [ edx + 0x4 ] esi
mov [ edx + 0x8 ] esi
mov [ edx + 0xc ] esi
mov [ edx + 0x10 ] esi
mov [ edx + 0x14 ] esi
mov [ ebp - 0x14 ] edx
mov [ edx + 0x18 ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
sub_405710
push ebp
mov ebp esp
push 0xffffffff
push sub_41a4c0
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov eax [ rw-data ]
add eax 0x10
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x4 ] 0x1
mov eax [ ebp - 0x18 ]
push eax
call [ EnterCriticalSection@IAT ]
mov [ ebp - 0x14 ] 0x1
call [ GetCurrentThreadId@IAT ]
lea ecx [ ebp + 0x8 ]
push ecx
mov ecx [ esi + 0x34 ]
lea edx [ ebp - 0x10 ]
push edx
mov [ ebp - 0x10 ] eax
call sub_404770
mov esi eax
mov eax [ ebp - 0x18 ]
push eax
call [ LeaveCriticalSection@IAT ]
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x18 ]
call sub_4043c0
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_4057b0
push ebp
mov ebp esp
push 0xffffffff
push sub_41a4f0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov eax [ rw-data ]
add eax 0x10
xor ebx ebx
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] bl
mov [ ebp - 0x4 ] 0x1
mov eax [ ebp - 0x14 ]
push eax
call [ EnterCriticalSection@IAT ]
mov eax [ edi + 0x38 ]
mov [ ebp - 0x10 ] 0x1
cmp eax ebx
je r-xdata
mov esi [ edi + 0x38 ]
cmp esi ebx
je r-xdata
cmp [ eax + 0x4 ] ebx
jle r-xdata
mov edx [ ebp - 0x14 ]
push edx
mov [ edi + 0x38 ] ebx
call [ LeaveCriticalSection@IAT ]
mov [ ebp - 0x10 ] bl
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_4043c0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ esi ]
cmp eax ebx
je r-xdata
mov eax [ eax ]
mov ecx [ eax ]
push ecx
call [ DestroyWindow@IAT ]
push esi
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
call ??3@YAXPAX@Z
add esp 0x4
push eax
call [ free@IAT ]
add esp 0x4
mov [ esi ] ebx
sub_405870
push ebp
mov ebp esp
push 0xffffffff
push sub_41a520
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] 0xffffffff
call sub_402cd0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_4058c0
push ebp
mov ebp esp
push 0xffffffff
push sub_41b888
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
push ecx
mov [ ebp - 0x14 ] esp
mov [ ebp - 0x14 ] esp
call sub_40e610
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_405920
push esi
mov esi ecx
mov eax [ esi + 0x1c ]
test eax eax
je r-xdata
pop esi
retn
mov ecx [ esi + 0x18 ]
lea eax [ eax + ecx - 0x1 ]
mov ecx [ esi + 0x14 ]
cmp ecx eax
ja r-xdata
mov edx [ esi + 0x10 ]
mov ecx [ edx + eax * 4 ]
call [ utf::string::~string@IAT ]
add [ esi + 0x1c ] 0xffffffff
jne r-xdata
sub eax ecx
mov [ esi + 0x18 ] 0x0
sub_405960
push ebp
mov ebp esp
push esi
push rw-data
call sub_404300
mov esi eax
test esi esi
jne r-xdata
mov eax [ esi ]
mov edx [ eax + 0x8 ]
push ebx
push edi
mov edi [ ebp + 0x8 ]
mov ecx esi
mov [ esi + 0x4 ] edi
call edx
push esi
lea ebx [ esi + 0x14 ]
push eax
mov ecx ebx
call sub_401a10
mov ebx [ ebx ]
push ebx
push 0xfffffffc
push edi
call [ SetWindowLongW@IAT ]
mov eax [ ebp + 0x14 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
push eax
push ecx
push edx
push edi
call ebx
pop edi
pop ebx
pop esi
pop ebp
retn 0x10
pop esi
pop ebp
retn 0x10
sub_4059c0
push ebp
mov ebp esp
mov eax 0x200c
call sub_419310
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push esi
push edi
mov edi ecx
lea ecx [ ebp - 0x2008 ]
push ecx
push eax
mov ecx edi
mov [ ebp - 0x2008 ] 0x0
call sub_403fc0
mov esi eax
test esi esi
jl r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_401736
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp - 0x2008 ]
xor edx edx
mov [ edi ] eax
cmp dx [ eax ]
je r-xdata
mov eax [ ebp - 0x2008 ]
push eax
call [ CoTaskMemFree@IAT ]
mov eax esi
push ebx
pop ebx
xor esi esi
nop
mov ebx [ esi * 8 + r--data ]
test ebx ebx
je r-xdata
inc esi
cmp esi 0xe
jb r-xdata
mov esi 0x80020009
jmp r-xdata
lea eax [ ebp - 0x2004 ]
push eax
mov ecx edi
call sub_4035d0
mov esi eax
test esi esi
jl r-xdata
mov ecx [ esi * 8 + r--data ]
push ecx
lea edx [ ebp - 0x2004 ]
push edx
call [ lstrcmpiW@IAT ]
test eax eax
je r-xdata
mov ecx 0x7b
cmp cx [ ebp - 0x2004 ]
jne r-xdata
mov eax [ ebp + 0xc ]
push 0x0
test eax eax
je r-xdata
push 0x0
push ebx
lea ecx [ ebp - 0x2004 ]
push ecx
mov ecx edi
call sub_404ee0
mov esi eax
test esi esi
jl r-xdata
mov edx [ edi ]
push eax
push ebx
lea eax [ ebp - 0x2004 ]
push eax
mov ecx edi
mov [ ebp - 0x200c ] edx
call sub_404ee0
mov esi eax
test esi esi
jge r-xdata
mov ecx edi
call sub_403570
mov edx [ edi ]
xor eax eax
cmp ax [ edx ]
jne r-xdata
mov ecx [ ebp - 0x200c ]
push 0x0
push 0x0
push ebx
lea edx [ ebp - 0x2004 ]
mov [ edi ] ecx
push edx
mov ecx edi
call sub_404ee0
lea eax [ ebp - 0x2004 ]
push eax
mov ecx edi
call sub_4035d0
mov esi eax
test esi esi
jl r-xdata
jmp r-xdata
sub_405b20
push ebp
mov ebp esp
push ecx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edi
call sub_4057b0
mov esi [ edi + 0x34 ]
test esi esi
je r-xdata
mov ecx edi
call sub_402800
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov eax [ esi ]
mov edi [ free@IAT ]
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
push eax
call edi
add esp 0x4
mov [ esi ] 0x0
push esi
mov [ esi + 0x8 ] 0x0
call ??3@YAXPAX@Z
mov edi [ ebp - 0x4 ]
add esp 0x4
push eax
call edi
add esp 0x4
mov [ esi + 0x4 ] 0x0
sub_405b90
push ebp
mov ebp esp
push 0xffffffff
push sub_41a54e
mov eax [ fs : 0x0 ]
push eax
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ecx 0x1
test [ rw-data ] cl
jne r-xdata
mov eax rw-data
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
or [ rw-data ] ecx
xor eax eax
mov [ ebp - 0x4 ] eax
push 0x48
mov [ rw-data ] ecx
push eax
xor ecx ecx
xor edx edx
push rw-data
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] 0x7f00
mov [ rw-data ] cx
mov [ rw-data ] dx
call memset
add esp 0xc
mov [ ebp - 0x4 ] 0xffffffff
sub_405c30
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
test edi edi
je r-xdata
xor eax eax
pop edi
pop ebp
retn
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
push esi
push eax
call [ RegisterClassExW@IAT ]
movzx esi ax
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ edi + 0x20 ]
mov [ ebp + 0x8 ] esi
call sub_4046f0
movzx eax si
pop esi
pop edi
pop ebp
retn
sub_405c70
push ebp
mov ebp esp
push 0xffffffff
push sub_41a578
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
push ecx
mov [ ebp - 0x14 ] esp
mov [ ebp - 0x14 ] esp
call sub_4058c0
xor eax eax
mov [ ebp - 0x4 ] eax
mov [ esi + 0x10 ] eax
mov [ esi + 0x14 ] eax
mov [ esi + 0x18 ] eax
mov [ esi + 0x1c ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
sub_405ce0
push ebx
push esi
mov esi ecx
xor ebx ebx
push edi
cmp [ esi + 0x1c ] ebx
je r-xdata
mov edi [ esi + 0x14 ]
cmp edi ebx
jbe r-xdata
mov edi [ utf::string::~string@IAT ]
mov eax [ esi + 0x10 ]
cmp eax ebx
je r-xdata
mov eax [ esi + 0x10 ]
dec edi
cmp [ eax + edi * 4 ] ebx
lea eax [ eax + edi * 4 ]
je r-xdata
cmp [ esi + 0x1c ] ebx
jne r-xdata
mov ecx [ esi + 0x18 ]
lea eax [ eax + ecx - 0x1 ]
mov ecx [ esi + 0x14 ]
cmp ecx eax
ja r-xdata
pop edi
mov [ esi + 0x10 ] ebx
mov [ esi + 0x14 ] ebx
pop esi
pop ebx
retn
push eax
call ??3@YAXPAX@Z
add esp 0x4
cmp edi ebx
ja r-xdata
mov ecx [ eax ]
push ecx
call ??3@YAXPAX@Z
add esp 0x4
mov eax [ esi + 0x1c ]
cmp eax ebx
je r-xdata
mov edx [ esi + 0x10 ]
mov ecx [ edx + eax * 4 ]
call edi
add [ esi + 0x1c ] 0xffffffff
jne r-xdata
sub eax ecx
mov [ esi + 0x18 ] ebx
sub_405d60
push ebp
mov ebp esp
push 0xffffffff
push sub_41a5a9
mov eax [ fs : 0x0 ]
push eax
sub esp 0x50
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] ecx
mov ebx [ ebp + 0x10 ]
cmp [ ebx + 0x15 ] 0x0
je r-xdata
lea ecx [ ebp + 0xc ]
mov [ ebp - 0x14 ] ebx
call sub_402510
mov ecx [ ebx ]
cmp [ ecx + 0x15 ] 0x0
je r-xdata
push r--data
lea ecx [ ebp - 0x34 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x34 ]
push eax
lea ecx [ ebp - 0x5c ]
call sub_402360
push r--data
lea ecx [ ebp - 0x5c ]
push ecx
call _CxxThrowException
mov edx [ ebx + 0x8 ]
cmp [ edx + 0x15 ] 0x0
je r-xdata
mov edi [ ebx + 0x8 ]
jmp r-xdata
mov eax [ ebp + 0x10 ]
mov edi [ eax + 0x8 ]
lea edx [ eax + 0x8 ]
cmp eax ebx
jne r-xdata
mov edi ecx
jmp r-xdata
cmp [ edi + 0x15 ] 0x0
mov esi [ ebx + 0x4 ]
jne r-xdata
mov [ ecx + 0x4 ] eax
mov ecx [ ebx ]
mov [ eax ] ecx
cmp eax [ ebx + 0x8 ]
jne r-xdata
mov ecx [ ebp - 0x10 ]
mov eax [ ecx + 0x18 ]
cmp [ eax + 0x4 ] ebx
jne r-xdata
mov [ edi + 0x4 ] esi
cmp [ edi + 0x15 ] 0x0
mov esi [ eax + 0x4 ]
jne r-xdata
mov esi eax
jmp r-xdata
cmp [ esi ] ebx
jne r-xdata
mov [ eax + 0x4 ] edi
jmp r-xdata
mov [ esi ] edi
mov ecx [ ebx + 0x8 ]
mov [ edx ] ecx
mov edx [ ebx + 0x8 ]
mov [ edx + 0x4 ] eax
mov [ edi + 0x4 ] esi
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0x18 ]
cmp [ ecx + 0x4 ] ebx
jne r-xdata
mov [ esi + 0x8 ] edi
mov [ esi ] edi
jmp r-xdata
mov eax [ ecx + 0x18 ]
cmp [ eax ] ebx
jne r-xdata
mov ecx [ ebx + 0x4 ]
cmp [ ecx ] ebx
jne r-xdata
mov [ ecx + 0x4 ] eax
jmp r-xdata
mov ecx [ ecx + 0x18 ]
mov [ ebp - 0x18 ] ecx
cmp [ ecx + 0x8 ] ebx
jne r-xdata
cmp [ edi + 0x15 ] 0x0
je r-xdata
mov [ ecx + 0x8 ] eax
mov [ ecx ] eax
jmp r-xdata
mov edx [ ebx + 0x4 ]
mov [ eax + 0x4 ] edx
lea ecx [ ebx + 0x14 ]
add eax 0x14
cmp eax ecx
je r-xdata
mov eax [ ebp - 0x14 ]
mov bl 0x1
cmp [ eax + 0x14 ] bl
jne r-xdata
cmp [ edi + 0x15 ] 0x0
je r-xdata
push edi
call sub_402490
mov ecx [ ebp - 0x10 ]
add esp 0x4
mov eax esi
jmp r-xdata
mov bl [ ecx ]
mov dl [ eax ]
mov [ eax ] bl
mov [ ecx ] dl
mov ecx [ ebp - 0x14 ]
push ecx
call ??3@YAXPAX@Z
mov edx [ ebp - 0x10 ]
mov eax [ edx + 0x1c ]
add esp 0x4
test eax eax
jbe r-xdata
mov ecx [ ebp - 0x10 ]
mov edx [ ecx + 0x18 ]
cmp edi [ edx + 0x4 ]
je r-xdata
push edi
call sub_402470
mov ecx [ ebp - 0x18 ]
add esp 0x4
mov [ ecx + 0x8 ] eax
jmp r-xdata
mov eax esi
mov [ ecx + 0x8 ] eax
jmp r-xdata
mov edx [ ecx + 0x18 ]
mov [ edx ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ edx ]
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
dec eax
mov [ edx + 0x1c ] eax
mov [ edi + 0x14 ] bl
cmp [ edi + 0x14 ] bl
jne r-xdata
mov eax [ esi ]
cmp edi eax
jne r-xdata
cmp [ eax + 0x14 ] 0x0
jne r-xdata
mov eax [ esi + 0x8 ]
cmp [ eax + 0x14 ] 0x0
jne r-xdata
cmp [ eax + 0x15 ] 0x0
jne r-xdata
mov [ eax + 0x14 ] bl
push esi
mov [ esi + 0x14 ] 0x0
call sub_4024b0
mov eax [ esi ]
mov ecx [ ebp - 0x10 ]
cmp [ eax + 0x15 ] 0x0
jne r-xdata
mov [ eax + 0x14 ] bl
push esi
mov [ esi + 0x14 ] 0x0
call sub_402be0
mov eax [ esi + 0x8 ]
mov ecx [ ebp - 0x10 ]
mov eax [ ecx + 0x18 ]
mov edi esi
mov esi [ esi + 0x4 ]
cmp edi [ eax + 0x4 ]
jne r-xdata
mov edx [ eax + 0x8 ]
cmp [ edx + 0x14 ] bl
jne r-xdata
mov edx [ eax ]
cmp [ edx + 0x14 ] bl
jne r-xdata
jmp r-xdata
mov edx [ eax ]
cmp [ edx + 0x14 ] bl
jne r-xdata
mov edx [ eax ]
cmp [ edx + 0x14 ] bl
jne r-xdata
mov edx [ eax + 0x8 ]
cmp [ edx + 0x14 ] bl
jne r-xdata
mov edx [ eax + 0x8 ]
cmp [ edx + 0x14 ] bl
je r-xdata
mov dl [ esi + 0x14 ]
mov [ eax + 0x14 ] dl
mov [ esi + 0x14 ] bl
mov eax [ eax ]
push esi
mov [ eax + 0x14 ] bl
call sub_4024b0
mov edx [ eax + 0x8 ]
mov [ edx + 0x14 ] bl
push eax
mov [ eax + 0x14 ] 0x0
call sub_402be0
mov eax [ esi ]
mov ecx [ ebp - 0x10 ]
mov [ eax + 0x14 ] 0x0
mov dl [ esi + 0x14 ]
mov [ eax + 0x14 ] dl
mov [ esi + 0x14 ] bl
mov eax [ eax + 0x8 ]
push esi
mov [ eax + 0x14 ] bl
call sub_402be0
jmp r-xdata
mov edx [ eax ]
mov [ edx + 0x14 ] bl
push eax
mov [ eax + 0x14 ] 0x0
call sub_4024b0
mov eax [ esi + 0x8 ]
mov ecx [ ebp - 0x10 ]
sub_406010
push ebp
mov ebp esp
push 0xffffffff
push sub_419df8
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov eax [ ebp + 0x8 ]
push eax
call sub_402ac0
mov [ ebp - 0x4 ] 0x0
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_406070
push ebp
mov ebp esp
push 0xffffffff
push sub_41a5d8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x70
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi [ ebp + 0x8 ]
test edi edi
je r-xdata
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
mov ebx [ ebp + 0x10 ]
test ebx ebx
je r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
cmp [ ebx + 0x40 ] 0x0
jne r-xdata
cmp [ ebx + 0x30 ] 0x0
je r-xdata
add eax 0x4
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x1c ]
call sub_402630
test eax eax
jge r-xdata
mov ax [ ebx + 0x40 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebx + 0x34 ]
mov edx [ ebp + 0x14 ]
mov [ edx ] ecx
cmp [ ebx + 0x40 ] 0x0
jne r-xdata
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x1c ]
call sub_402dc0
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x1c ]
call sub_402dc0
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
cmp [ ebx + 0x3c ] 0x0
je r-xdata
mov ecx [ ebx + 0x28 ]
mov edx [ ebx + 0x8 ]
mov esi [ GetClassInfoExW@IAT ]
mov [ ebp - 0x10 ] ecx
lea ecx [ ebp - 0x4c ]
push ecx
push eax
push 0x0
mov [ ebp - 0x14 ] edx
mov [ ebp - 0x4c ] 0x30
call esi
test eax eax
jne r-xdata
mov eax [ edi + 0x8 ]
xor eax eax
jmp r-xdata
mov edx [ ebp - 0x14 ]
mov ecx 0xc
lea esi [ ebp - 0x4c ]
mov edi ebx
[ edi ] [ esi ]
mov eax [ ebx + 0x8 ]
mov ecx [ ebp - 0x10 ]
mov edi [ ebp + 0x8 ]
mov [ ebx + 0x34 ] eax
mov [ ebx + 0x28 ] ecx
mov [ ebx + 0x8 ] edx
jmp r-xdata
mov eax [ ebx + 0x30 ]
mov ecx [ edi + 0x4 ]
lea edx [ ebp - 0x4c ]
push edx
push eax
push ecx
call esi
test eax eax
je r-xdata
mov eax [ ebx + 0x28 ]
lea edx [ ebp - 0x7c ]
push edx
mov ecx 0xc
mov esi ebx
lea edi [ ebp - 0x7c ]
[ edi ] [ esi ]
mov ecx [ ebx + 0x14 ]
push eax
push ecx
call [ GetClassInfoExW@IAT ]
mov [ ebx + 0x40 ] ax
test ax ax
jne r-xdata
push ebx
lea esi [ ebx + 0x42 ]
push 0x25
push esi
call sub_401f90
add esp 0xc
mov [ ebx + 0x28 ] esi
mov ecx [ ebx + 0x38 ]
push ecx
push eax
call sub_401fb0
add esp 0x8
mov [ ebx + 0x1c ] eax
mov edx [ edi + 0x4 ]
and [ ebx + 0x4 ] 0xffffbfff
cmp [ ebx + 0x28 ] 0x0
mov [ ebx + 0x14 ] edx
jne r-xdata
mov eax [ ebp + 0xc ]
push ebx
push eax
call sub_405c30
add esp 0x8
mov [ ebx + 0x40 ] ax
sub_406220
push ebp
mov ebp esp
push 0xffffffff
push sub_41a616
mov eax [ fs : 0x0 ]
push eax
sub esp 0x424
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov eax [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
mov ebx [ ebp + 0x10 ]
xor edx edx
mov [ ebp - 0x428 ] edx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x42c ] ecx
mov [ ebp - 0x430 ] edx
mov [ ebp - 0x418 ] edx
mov [ ebp - 0x4 ] 0x1
push 0x2
push edx
push eax
call [ LoadLibraryExW@IAT ]
mov esi eax
mov [ ebp - 0x424 ] esi
test esi esi
jne r-xdata
push ebx
push edi
push esi
call [ FindResourceW@IAT ]
mov edi eax
test edi edi
jne r-xdata
call sub_402f60
mov edi eax
jmp r-xdata
push edi
push esi
call [ LoadResource@IAT ]
mov ebx eax
mov [ ebp - 0x41c ] ebx
test ebx ebx
jne r-xdata
call sub_402f60
jmp r-xdata
mov [ ebp - 0x4 ] 0x0
lea edx [ ebp - 0x414 ]
cmp [ ebp - 0x418 ] edx
je r-xdata
push edi
push esi
call [ SizeofResource@IAT ]
mov edi eax
mov [ ebp - 0x420 ] edi
lea eax [ edi + 0x1 ]
cmp eax edi
jae r-xdata
call sub_402f60
jmp r-xdata
mov edi eax
mov [ ebp - 0x4 ] 0xffffffff
mov eax edi
lea ecx [ ebp - 0x418 ]
call sub_4038c0
mov [ ebp - 0x4 ] 0x2
push eax
lea ecx [ ebp - 0x418 ]
call sub_4047e0
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
mov [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x414 ]
cmp [ ebp - 0x418 ] eax
je r-xdata
mov eax [ ebp - 0x418 ]
test eax eax
jne r-xdata
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x428 ]
call sub_403850
mov eax 0x8007000e
jmp r-xdata
lea ecx [ ebp - 0x418 ]
call sub_4038c0
push edi
push eax
push edi
push ebx
push 0x0
push 0x3
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
mov edi 0x8007000e
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_401736
mov esp ebp
pop ebp
retn 0x10
xor ecx ecx
mov edx [ ebp - 0x418 ]
mov [ edx + eax * 2 ] cx
mov eax [ ebp + 0x14 ]
push eax
mov ecx [ ebp - 0x418 ]
push ecx
lea ecx [ ebp - 0x430 ]
call sub_4059c0
call sub_402f60
jmp r-xdata
push esi
call [ FreeLibrary@IAT ]
sub_406400
push ebp
mov ebp esp
push 0xffffffff
push sub_41a648
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x14 ]
movzx ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
push 0x1
push eax
push ecx
mov ecx [ ebp + 0x8 ]
push edx
call sub_406220
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0x10
sub_406460
push ebp
mov ebp esp
push 0xffffffff
push sub_41a678
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
xor edx edx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x4 ] edx
mov ecx [ ebp + 0x10 ]
cmp ecx edx
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov eax 0x80070057
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x10
mov eax [ ebp + 0x14 ]
cmp eax edx
je r-xdata
push 0x1
push eax
mov eax [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push eax
call sub_406220
mov esi eax
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_403850
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x10
sub_4064f0
push ebp
mov ebp esp
push 0xffffffff
push sub_41a648
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] eax
movzx ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x14 ]
push eax
push ecx
mov ecx [ ebp + 0x8 ]
push edx
call sub_406220
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0x10
sub_406550
push ebp
mov ebp esp
push 0xffffffff
push sub_41a678
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
xor edx edx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x4 ] edx
mov ecx [ ebp + 0x10 ]
cmp ecx edx
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov eax 0x80070057
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x10
mov eax [ ebp + 0x14 ]
cmp eax edx
je r-xdata
push edx
push eax
mov eax [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push eax
call sub_406220
mov esi eax
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_403850
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x10
sub_4065e0
push ebp
mov ebp esp
push 0xffffffff
push sub_41a6b6
mov eax [ fs : 0x0 ]
push eax
sub esp 0xa68
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
mov esi [ ebp + 0x14 ]
lea ecx [ ebp - 0xa74 ]
mov [ ebp - 0xa48 ] eax
call sub_405680
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0xa64 ]
call sub_4018b0
mov edi eax
test edi edi
jl r-xdata
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0xa74 ]
call sub_403e70
mov eax edi
jmp r-xdata
mov [ ebp - 0xa4c ] 0x1
test esi esi
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_401736
mov esp ebp
pop ebp
retn 0x10
mov eax [ ebx ]
mov edx [ eax + 0x14 ]
lea ecx [ ebp - 0xa74 ]
push ecx
mov ecx ebx
call edx
mov esi eax
test esi esi
jl r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0xa74 ]
call sub_403e70
mov eax esi
mov [ ebp - 0xa44 ] 0x0
mov [ ebp - 0x4 ] 0x1
mov esi [ rw-data ]
push 0x104
lea eax [ ebp - 0x218 ]
push eax
push esi
call [ GetModuleFileNameW@IAT ]
test eax eax
jne r-xdata
mov ecx [ esi + 0x4 ]
push ecx
push eax
lea edx [ ebp - 0xa74 ]
push edx
call sub_404a70
mov eax [ esi + 0x8 ]
add esi 0x8
test eax eax
jne r-xdata
cmp eax 0x104
jne r-xdata
call sub_402f60
jmp r-xdata
lea ecx [ ebp - 0x218 ]
push ecx
lea edx [ ebp - 0xa40 ]
push 0x208
push edx
call sub_403030
add esp 0xc
test esi esi
je r-xdata
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0xa44 ]
call sub_403850
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0xa74 ]
call sub_403e70
mov eax 0x8007007a
jmp r-xdata
mov esi eax
lea eax [ ebp - 0xa40 ]
push eax
lea ecx [ ebp - 0x62e ]
mov edx 0x22
push 0x20b
push ecx
mov [ ebp - 0x630 ] dx
call sub_402e40
add esp 0xc
test al al
jne r-xdata
push 0x0
call [ GetModuleHandleW@IAT ]
cmp esi eax
je r-xdata
lea edx [ ebp - 0x630 ]
push edx
call [ lstrlenW@IAT ]
mov ecx 0x22
xor edx edx
mov [ ebp + eax * 2 - 0x630 ] cx
mov [ ebp + eax * 2 - 0x62e ] dx
lea eax [ ebp - 0x630 ]
mov [ ebp - 0x4 ] al
lea ecx [ ebp - 0xa44 ]
call sub_403850
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0xa74 ]
call sub_403e70
mov eax 0x80004005
jmp r-xdata
lea eax [ ebp - 0xa40 ]
jmp r-xdata
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0xa44 ]
call sub_403850
lea edx [ ebp - 0xa40 ]
push edx
push r--data
lea eax [ ebp - 0xa74 ]
push eax
call sub_404a70
mov esi eax
test esi esi
jl r-xdata
push eax
push r--data
lea ecx [ ebp - 0xa74 ]
push ecx
call sub_404a70
mov esi eax
test esi esi
jl r-xdata
cmp [ ebp + 0x10 ] 0x0
mov ecx [ ebp - 0xa48 ]
push r--data
push ecx
lea edx [ ebp - 0x218 ]
lea eax [ ebp - 0xa74 ]
push edx
push eax
je r-xdata
call sub_406550
call sub_406460
jmp r-xdata
sub_406860
push ebp
mov ebp esp
push 0xffffffff
push sub_41a6f6
mov eax [ fs : 0x0 ]
push eax
sub esp 0xa64
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x14 ]
lea ecx [ ebp - 0xa70 ]
mov [ ebp - 0xa44 ] eax
call sub_405680
xor ebx ebx
mov [ ebp - 0x4 ] ebx
lea ecx [ ebp - 0xa60 ]
call sub_4018b0
mov edi eax
cmp edi ebx
jl r-xdata
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0xa70 ]
call sub_403e70
mov eax edi
jmp r-xdata
mov [ ebp - 0xa48 ] 0x1
cmp esi ebx
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_401736
mov esp ebp
pop ebp
retn 0x10
mov ecx [ ebp - 0xa44 ]
mov eax [ ecx ]
mov eax [ eax + 0x14 ]
lea edx [ ebp - 0xa70 ]
push edx
call eax
mov esi eax
cmp esi ebx
jl r-xdata
mov eax [ esi ]
cmp eax ebx
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0xa70 ]
call sub_403e70
mov eax esi
mov [ ebp - 0xa44 ] ebx
mov [ ebp - 0x4 ] 0x1
mov esi [ rw-data ]
push 0x104
lea ecx [ ebp - 0x218 ]
push ecx
push esi
call [ GetModuleFileNameW@IAT ]
cmp eax ebx
jne r-xdata
lea esp [ esp ]
cmp eax 0x104
jne r-xdata
call sub_402f60
jmp r-xdata
mov ecx [ esi + 0x4 ]
push ecx
push eax
lea edx [ ebp - 0xa70 ]
push edx
call sub_404a70
mov eax [ esi + 0x8 ]
add esi 0x8
cmp eax ebx
jne r-xdata
lea edx [ ebp - 0x218 ]
push edx
lea eax [ ebp - 0xa40 ]
push 0x208
push eax
call sub_403030
add esp 0xc
cmp esi ebx
je r-xdata
mov [ ebp - 0x4 ] bl
lea ecx [ ebp - 0xa44 ]
call sub_403850
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0xa70 ]
call sub_403e70
mov eax 0x8007007a
jmp r-xdata
mov esi eax
lea ecx [ ebp - 0xa40 ]
push ecx
lea edx [ ebp - 0x62e ]
mov eax 0x22
push 0x20b
push edx
mov [ ebp - 0x630 ] ax
call sub_402e40
add esp 0xc
test al al
jne r-xdata
push ebx
call [ GetModuleHandleW@IAT ]
cmp esi eax
je r-xdata
lea eax [ ebp - 0x630 ]
push eax
call [ lstrlenW@IAT ]
mov ecx 0x22
xor edx edx
mov [ ebp + eax * 2 - 0x630 ] cx
mov [ ebp + eax * 2 - 0x62e ] dx
lea eax [ ebp - 0x630 ]
push eax
push r--data
lea ecx [ ebp - 0xa70 ]
push ecx
mov [ ebp - 0x4 ] bl
lea ecx [ ebp - 0xa44 ]
call sub_403850
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0xa70 ]
call sub_403e70
mov eax 0x80004005
jmp r-xdata
lea ecx [ ebp - 0xa40 ]
push ecx
push r--data
lea edx [ ebp - 0xa70 ]
push edx
jmp r-xdata
mov [ ebp - 0x4 ] bl
lea ecx [ ebp - 0xa44 ]
call sub_403850
lea edx [ ebp - 0xa40 ]
push edx
push r--data
lea eax [ ebp - 0xa70 ]
push eax
call sub_404a70
mov esi eax
cmp esi ebx
jl r-xdata
call sub_404a70
mov esi eax
cmp esi ebx
jl r-xdata
mov ecx [ ebp + 0xc ]
push r--data
push ecx
lea edx [ ebp - 0x218 ]
lea eax [ ebp - 0xa70 ]
push edx
push eax
cmp [ ebp + 0x10 ] ebx
je r-xdata
call sub_4064f0
call sub_406400
jmp r-xdata
sub_406af0
push ebp
mov ebp esp
push 0xffffffff
push sub_41a738
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] 0x0
call sub_405ce0
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ esi ]
push eax
call ??3@YAXPAX@Z
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
sub_406b50
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
sub esp 0x8
push ebx
mov ebx ecx
mov eax [ ebx + 0x14 ]
mov ecx 0x71c71c7
sub ecx eax
cmp ecx edx
jae r-xdata
mov ecx eax
shr ecx 0x1
cmp ecx 0x8
jae r-xdata
call sub_402a60
push esi
push edi
cmp edx ecx
jae r-xdata
mov ecx 0x8
mov esi [ ebx + 0x18 ]
add eax edx
push eax
lea ecx [ ebx + 0x8 ]
mov [ ebp - 0x8 ] esi
call sub_402b30
mov ecx [ ebx + 0x10 ]
mov [ ebp - 0x4 ] eax
add esi esi
add esi esi
lea edi [ esi + eax ]
mov eax [ ebx + 0x14 ]
add eax eax
add eax eax
lea edx [ esi + ecx ]
sub eax edx
add eax ecx
sar eax 0x2
lea ecx [ eax * 4 ]
add edi ecx
test eax eax
jbe r-xdata
mov esi 0x71c71c7
sub esi ecx
cmp eax esi
ja r-xdata
mov edx [ ebp + 0x8 ]
cmp [ ebp - 0x8 ] edx
ja r-xdata
push ecx
push edx
mov edx [ ebp - 0x4 ]
push ecx
lea eax [ esi + edx ]
push eax
call [ memmove_s@IAT ]
add esp 0x10
mov [ ebp + 0x8 ] ecx
mov edx ecx
mov ecx [ ebx + 0x10 ]
lea eax [ edx * 4 ]
sar eax 0x2
test eax eax
jbe r-xdata
mov eax [ ebx + 0x10 ]
sar esi 0x2
mov edx esi
lea ecx [ edx * 4 ]
lea esi [ ecx + edi ]
test edx edx
jbe r-xdata
mov eax [ ebx + 0x10 ]
lea ecx [ edx * 4 ]
mov edx [ ebp - 0x4 ]
add ecx eax
sub esi ecx
add esi eax
sar esi 0x2
lea eax [ esi * 4 ]
lea edi [ eax + edx ]
test esi esi
jbe r-xdata
add eax eax
add eax eax
push eax
push ecx
push eax
push edi
call [ memmove_s@IAT ]
mov edx [ ebp + 0x8 ]
add esp 0x10
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
sub eax ecx
je r-xdata
push ecx
push eax
push ecx
push edi
call [ memmove_s@IAT ]
add esp 0x10
mov ecx [ ebp + 0x8 ]
test ecx ecx
jbe r-xdata
push eax
push ecx
push eax
push edx
call [ memmove_s@IAT ]
add esp 0x10
test ecx ecx
jbe r-xdata
mov ecx eax
xor eax eax
mov edi esi
[ edi ]
mov ecx [ ebp - 0x8 ]
mov eax [ ebx + 0x10 ]
pop edi
pop esi
test eax eax
je r-xdata
xor eax eax
[ edi ]
mov edi [ ebp - 0x4 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
add [ ebx + 0x14 ] ecx
mov [ ebx + 0x10 ] eax
pop ebx
mov esp ebp
pop ebp
retn 0x4
push eax
call ??3@YAXPAX@Z
add esp 0x4
sub_406cc0
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
mov esi ecx
mov eax [ esi + 0x18 ]
mov ebx [ eax ]
mov eax [ esi ]
push edi
mov edi [ ebp + 0xc ]
test edi edi
je r-xdata
call [ _invalid_parameter_noinfo@IAT ]
mov edi [ ebp + 0xc ]
cmp edi eax
je r-xdata
test edi edi
je r-xdata
mov ecx [ ebp + 0x14 ]
mov ebx [ esi + 0x18 ]
mov eax [ esi ]
test ecx ecx
je r-xdata
cmp [ ebp + 0x10 ] ebx
jne r-xdata
call [ _invalid_parameter_noinfo@IAT ]
mov edi [ ebp + 0xc ]
cmp edi [ ebp + 0x14 ]
je r-xdata
call [ _invalid_parameter_noinfo@IAT ]
mov edi [ ebp + 0xc ]
cmp ecx eax
je r-xdata
mov esi [ esi ]
mov eax [ ebp + 0x8 ]
pop edi
mov [ eax ] esi
pop esi
mov [ eax + 0x4 ] ebx
pop ebx
mov esp ebp
pop ebp
retn 0x14
lea ecx [ ebp + 0xc ]
call sub_402510
push ebx
push edi
lea eax [ ebp - 0x8 ]
push eax
mov ecx esi
call sub_405d60
mov edi [ ebp + 0xc ]
jmp r-xdata
mov ebx [ ebp + 0x10 ]
cmp ebx [ ebp + 0x18 ]
je r-xdata
mov ecx [ esi + 0x18 ]
mov edx [ ecx + 0x4 ]
push edx
mov ecx esi
call sub_4046b0
mov eax [ esi + 0x18 ]
mov [ eax + 0x4 ] eax
mov eax [ esi + 0x18 ]
mov [ esi + 0x1c ] 0x0
mov [ eax ] eax
mov eax [ esi + 0x18 ]
mov [ eax + 0x8 ] eax
mov eax [ esi + 0x18 ]
mov ecx [ eax ]
mov edx [ esi ]
mov eax [ ebp + 0x8 ]
pop edi
pop esi
mov [ eax + 0x4 ] ecx
mov [ eax ] edx
pop ebx
mov esp ebp
pop ebp
retn 0x14
cmp [ ebp + 0x18 ] ebx
jne r-xdata
sub_406d90
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x30 ]
mov edx [ eax + 0x2c ]
push ecx
mov ecx [ eax + 0x28 ]
push edx
mov edx [ eax + 0x18 ]
push ecx
mov ecx [ eax + 0x24 ]
add ecx [ eax + 0x1c ]
call edx
pop ebp
retn
sub_406dd0
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x1c ]
inc eax
push edi
cmp [ esi + 0x14 ] eax
ja r-xdata
mov edi [ esi + 0x18 ]
add edi [ esi + 0x1c ]
mov eax [ esi + 0x14 ]
cmp eax edi
ja r-xdata
push 0x1
call sub_406b50
mov ecx [ esi + 0x10 ]
cmp [ ecx + edi * 4 ] 0x0
jne r-xdata
sub edi eax
mov eax [ ebp + 0x8 ]
mov ecx [ esi + 0x10 ]
mov edx [ ecx + edi * 4 ]
push eax
push edx
call sub_402580
add esp 0x8
inc [ esi + 0x1c ]
pop edi
pop esi
pop ebp
retn 0x4
push 0x24
call ??2@YAPAXI@Z
mov edx [ esi + 0x10 ]
add esp 0x4
mov [ edx + edi * 4 ] eax
sub_406e30
push ebp
mov ebp esp
push esi
push edi
mov esi ecx
call sub_405b90
cmp [ eax + 0x30 ] 0x0
jne r-xdata
call sub_405b90
mov ecx [ ebp + 0x14 ]
push ecx
lea edx [ esi + 0x20 ]
push edx
push eax
push rw-data
push rw-data
call sub_406070
mov ecx [ ebp + 0x14 ]
add esp 0x14
movzx edx ax
test ecx ecx
jne r-xdata
call sub_405b90
mov [ eax + 0x30 ] 0x0
mov eax [ ebp + 0x10 ]
test eax eax
jne r-xdata
mov ecx 0x80000000
mov edi [ ebp + 0x20 ]
push edi
push edx
mov edx [ ebp + 0x1c ]
push edx
mov edx [ ebp + 0x18 ]
push edx
push ecx
mov ecx [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
push ecx
mov ecx esi
call sub_40e6d0
pop edi
pop esi
pop ebp
retn 0x1c
sub_406eb0
push ebp
mov ebp esp
push 0xffffffff
push sub_41a770
mov eax [ fs : 0x0 ]
push eax
sub esp 0x58
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
lea ecx [ ebp - 0x64 ]
call sub_404480
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x2c ]
call sub_405c70
mov [ ebp - 0x4 ] 0x1
lea eax [ ebp - 0x64 ]
push eax
mov ecx rw-data
call sub_405710
mov esi [ ebp + 0x8 ]
lea ecx [ esi + 0x4c ]
push ecx
lea ecx [ ebp - 0x2c ]
call sub_406dd0
lea edx [ ebp - 0x2c ]
push edx
add esi 0x28
push esi
call sub_4097b0
add esp 0x8
lea ecx [ ebp - 0x64 ]
call sub_4028a0
mov esi eax
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x2c ]
call sub_406af0
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x64 ]
call sub_404590
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
sub_406f60
push ebp
mov ebp esp
push 0xffffffff
push sub_41a7b8
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] 0x0
mov eax [ esi + 0x18 ]
mov ecx [ esi ]
mov edx [ eax ]
push eax
push ecx
push edx
push ecx
lea eax [ ebp - 0x18 ]
push eax
mov ecx esi
call sub_406cc0
mov eax [ esi + 0x18 ]
push eax
call ??3@YAXPAX@Z
mov [ esi + 0x18 ] 0x0
mov [ esi + 0x1c ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ esi ]
push ecx
call ??3@YAXPAX@Z
add esp 0x8
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
sub_406ff0
push ebp
mov ebp esp
push 0xffffffff
push sub_41a7e8
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] 0xffffffff
call sub_406f60
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_407040
push ebp
mov ebp esp
push 0xffffffff
push sub_41a873
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] 0x5
mov eax [ esi + 0x74 ]
push eax
call GdipDeleteStringFormat
mov [ ebp - 0x4 ] 0x4
mov eax [ esi + 0x70 ]
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0x3
lea ecx [ esi + 0x58 ]
call sub_40ef80
mov al 0x2
mov [ ebp - 0x4 ] al
lea ecx [ esi + 0x38 ]
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x4 ] al
call sub_406f60
mov [ ebp - 0x4 ] 0x1
lea ecx [ esi + 0x34 ]
call [ sigc::trackable::~trackable@IAT ]
mov [ ebp - 0x4 ] 0x0
mov eax [ esi + 0x2c ]
push eax
call ??_V@YAXPAX@Z
add esp 0x4
mov [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_402cd0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
push eax
call [ DeleteObject@IAT ]
test eax eax
je r-xdata
mov [ esi + 0x70 ] 0x0
sub_407100
push ebp
mov ebp esp
push 0xffffffff
push sub_41a8d5
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] 0x2
lea ecx [ esi + 0x94 ]
call sub_407040
mov al 0x1
mov [ ebp - 0x4 ] al
lea ecx [ esi + 0x2c ]
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x4 ] al
call sub_406f60
mov [ ebp - 0x4 ] 0x0
lea ecx [ esi + 0x24 ]
call [ sigc::trackable::~trackable@IAT ]
mov [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_402cd0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
sub_407180
push ebp
mov ebp esp
push 0xffffffff
push sub_41ac32
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx ecx
mov [ ebp - 0x10 ] ebx
mov esi [ ebp + 0x8 ]
mov edi [ esi + 0x4 ]
call [ sigc::trackable::trackable@IAT ]
xor eax eax
mov [ ebp - 0x4 ] eax
mov [ ebx + 0x4 ] edi
mov [ ebx + 0x8 ] sub_40b530
mov [ ebx + 0xc ] sub_402650
mov [ ebx + 0x10 ] eax
mov [ ebx + 0x14 ] eax
mov [ ebp - 0x4 ] 0x1
lea eax [ ebx + 0x18 ]
mov edi eax
add esi 0x18
mov ecx 0x8
[ edi ] [ esi ]
mov ecx [ sigc::internal::slot_rep::notify@IAT ]
mov eax [ eax + 0x8 ]
push ecx
push ebx
mov ecx eax
call [ sigc::trackable::add_destroy_notify_callback@IAT ]
mov [ ebp - 0x4 ] 0xffffffff
mov eax ebx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_407220
push ebp
mov ebp esp
push 0xffffffff
push sub_41ac32
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx ecx
mov [ ebp - 0x10 ] ebx
call [ sigc::trackable::trackable@IAT ]
xor eax eax
mov [ ebp - 0x4 ] eax
mov [ ebx + 0x4 ] eax
mov [ ebx + 0x8 ] sub_40b530
mov [ ebx + 0xc ] sub_402650
mov [ ebx + 0x10 ] eax
mov [ ebx + 0x14 ] eax
mov [ ebp - 0x4 ] 0x1
mov esi [ ebp + 0x8 ]
lea eax [ ebx + 0x18 ]
mov edi eax
mov ecx 0x8
[ edi ] [ esi ]
mov ecx [ sigc::internal::slot_rep::notify@IAT ]
mov eax [ eax + 0x8 ]
push ecx
push ebx
mov ecx eax
call [ sigc::trackable::add_destroy_notify_callback@IAT ]
mov [ ebp - 0x4 ] 0xffffffff
mov eax ebx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4072c0
push ebp
mov ebp esp
push 0xffffffff
push sub_41d205
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
push 0x38
call [ sigc::internal::slot_rep::operator new@IAT ]
add esp 0x4
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
xor eax eax
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx eax
call sub_407220
jmp r-xdata
mov [ ebp - 0x4 ] 0xffffffff
push eax
mov ecx esi
call [ sigc::slot_base::slot_base@IAT ]
mov [ ebp - 0x4 ] 0x1
mov edx [ esi ]
mov [ edx + 0x4 ] sub_406d90
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_407350
push ebp
mov ebp esp
push 0xffffffff
push sub_41d288
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov eax [ ebp + 0x8 ]
push eax
call sub_4072c0
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_4073a0
push ebp
mov ebp esp
push 0xffffffff
push sub_41a92d
mov eax [ fs : 0x0 ]
push eax
sub esp 0x1e8
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
push 0x94
call ??2@YAPAXI@Z
add esp 0x4
mov [ ebp - 0x38 ] eax
xor edi edi
mov [ ebp - 0x4 ] edi
cmp eax edi
je r-xdata
xor ebx ebx
push 0x1
mov ecx eax
call sub_40c250
mov ebx eax
jmp r-xdata
lea ecx [ ebp - 0x30 ]
push ecx
lea ecx [ ebp - 0x90 ]
call [ utf::string::string@IAT ]
mov [ ebp - 0x4 ] 0x2
add esi 0x4
push esi
lea edx [ ebp - 0x90 ]
push edx
mov ecx ebx
call sub_40c2e0
test al al
sete [ ebp - 0x31 ]
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x90 ]
call [ utf::string::~string@IAT ]
cmp [ ebp - 0x31 ] 0x0
je r-xdata
push 0x10
push r--data
lea eax [ ebp - 0x30 ]
push eax
call [ lstrcpynW@IAT ]
mov [ ebp - 0x4 ] 0xffffffff
mov [ ebp - 0x4c ] ebx
mov [ ebp - 0x4 ] 0x1
xor eax eax
lea ecx [ ebp - 0x40 ]
push ecx
lea edx [ ebp - 0x30 ]
push edx
mov [ ebp - 0x30 ] ax
mov [ ebp - 0x2e ] eax
mov [ ebp - 0x2a ] eax
mov [ ebp - 0x26 ] eax
mov [ ebp - 0x22 ] eax
mov [ ebp - 0x1e ] eax
mov [ ebp - 0x1a ] eax
mov [ ebp - 0x16 ] eax
mov [ ebp - 0x12 ] ax
mov [ ebp - 0x40 ] 0x10
call [ GetComputerNameW@IAT ]
test eax eax
jne r-xdata
lea ecx [ ebp - 0xc8 ]
call sub_404480
mov [ ebp - 0x4 ] 0x3
push ebx
lea ecx [ ebp - 0x1f4 ]
call sub_40b860
mov [ ebp - 0x4 ] 0x4
lea eax [ ebp - 0xc8 ]
push eax
mov ecx rw-data
call sub_405710
push edi
push ecx
mov eax esp
mov [ ebp - 0x38 ] esp
push edi
push edi
push edi
push ecx
mov [ eax ] edi
mov eax esp
mov [ ebp - 0x38 ] esp
push edi
lea ecx [ ebp - 0x1f4 ]
mov [ eax ] edi
call sub_406e30
cmp eax edi
jne r-xdata
push r--data
push r--data
call Ordinal_vmwarebase_2
add esp 0x8
mov [ ebp - 0x4 ] 0xffffffff
cmp ebx edi
je r-xdata
push edi
push rw-data
push rw-data
push edi
mov ecx ebx
call [ cui::ipc::Dispatch::GetControl@IAT ]
mov ecx eax
call [ cui::ipc::Control::GetConnection@IAT ]
push eax
call __RTDynamicCast
mov ecx 0x4
mov [ ebp - 0x68 ] ecx
lea esi [ ebp - 0x1f4 ]
mov [ ebp - 0x38 ] eax
mov eax sub_401a70
lea edx [ ebp - 0x1d0 ]
mov [ ebp - 0x60 ] esi
mov [ ebp - 0x58 ] edi
mov [ ebp - 0x54 ] edi
mov [ ebp - 0x6c ] eax
mov [ ebp - 0x64 ] edx
mov ecx 0x8
lea esi [ ebp - 0x6c ]
lea edi [ ebp - 0x8c ]
mov [ ebp - 0x5c ] 0x10
[ edi ] [ esi ]
add esp 0x14
lea ecx [ ebp - 0x8c ]
push ecx
lea ecx [ ebp - 0x48 ]
call sub_407350
mov [ ebp - 0x4 ] 0x5
mov ecx [ ebp - 0x38 ]
lea edx [ ebp - 0x48 ]
push edx
lea eax [ ebp - 0x3c ]
push eax
add ecx 0x8
call [ sigc::signal_base::connect@IAT ]
mov [ ebp - 0x4 ] 0x4
lea ecx [ ebp - 0x48 ]
call sub_410e70
lea ecx [ ebp - 0xc8 ]
call sub_4028a0
mov esi eax
mov [ ebp - 0x4 ] 0x3
lea ecx [ ebp - 0x1f4 ]
call sub_407100
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0xc8 ]
call sub_404590
mov [ ebp - 0x4 ] 0xffffffff
test ebx ebx
je r-xdata
call [ GetLastError@IAT ]
push eax
push r--data
push r--data
call Ordinal_vmwarebase_2
add esp 0xc
mov [ ebp - 0x4 ] 0x3
lea ecx [ ebp - 0x1f4 ]
call sub_407100
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0xc8 ]
call sub_404590
mov [ ebp - 0x4 ] 0xffffffff
cmp ebx edi
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebx ]
mov edx [ eax ]
push 0x1
mov ecx ebx
call edx
mov eax esi
mov edx [ ebx ]
mov eax [ edx ]
push 0x1
mov ecx ebx
call eax
or eax 0xffffffff
jmp r-xdata
mov edx [ ebx ]
mov eax [ edx ]
push 0x1
mov ecx ebx
call eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_401736
mov esp ebp
pop ebp
retn
sub_407670
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
push eax
je r-xdata
call sub_406eb0
add esp 0x4
pop ebp
retn
call sub_4073a0
add esp 0x4
pop ebp
retn
sub_407690
push ebp
mov ebp esp
push 0xffffffff
push sub_41a980
mov eax [ fs : 0x0 ]
push eax
sub esp 0x160
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x10 ]
push 0x1
lea ecx [ ebp - 0x148 ]
call [ wui::util::CInitGdiplus::CInitGdiplus@IAT ]
xor ebx ebx
mov [ ebp - 0x4 ] ebx
call Ordinal_vmwarebase_349
cmp al bl
jne r-xdata
push ebx
push ebx
push ebx
call Ordinal_vmwarebase_750
call Ordinal_vmwarebase_459
call Ordinal_vmwarebase_880
push r--data
call Ordinal_vmwarebase_659
lea eax [ ebp - 0x140 ]
push eax
call Ordinal_vmwarebase_8
lea ecx [ ebp - 0x140 ]
push ecx
push r--data
mov [ ebp - 0x138 ] r--data
mov [ ebp - 0x134 ] r--data
call Ordinal_vmwarebase_6
lea edx [ ebp - 0x140 ]
push edx
call Ordinal_vmwarebase_11
add esp 0x20
test al al
je r-xdata
push 0x130
push r--data
push r--data
call Ordinal_vmwarebase_3
push r--data
call [ OutputDebugStringW@IAT ]
push ebx
push ebx
call Ordinal_vmwarebase_7
add esp 0x8
jmp r-xdata
push r--data
call Ordinal_vmwarebase_2
movzx edx [ ebp - 0x7f ]
movzx eax [ ebp - 0x80 ]
push edx
push eax
push r--data
call Ordinal_vmwarebase_2
mov esi [ utf::string::w_str@IAT ]
add esp 0x10
lea ecx [ ebp - 0x7c ]
call esi
push eax
push r--data
call Ordinal_vmwarebase_2
add esp 0x8
lea ecx [ ebp - 0x58 ]
call esi
push eax
push r--data
call Ordinal_vmwarebase_2
add esp 0x8
lea ecx [ ebp - 0x34 ]
call esi
push eax
push r--data
call Ordinal_vmwarebase_2
add esp 0x8
cmp [ ebp - 0x7e ] bl
je r-xdata
push esi
lea ecx [ ebp - 0x16c ]
call [ utf::string::string@IAT ]
mov [ ebp - 0x4 ] 0x2
mov ecx eax
call [ utf::string::c_str@IAT ]
push eax
push r--data
push r--data
call Ordinal_vmwarebase_4
add esp 0xc
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x16c ]
call [ utf::string::~string@IAT ]
push ebx
call [ CoInitialize@IAT ]
lea ecx [ ebp - 0x80 ]
call sub_401a90
mov [ ebp - 0x4 ] 0x1
mov ecx [ __wargv@IAT ]
mov edx [ ecx ]
lea eax [ ebp - 0x80 ]
push eax
mov eax [ __argc@IAT ]
mov ecx [ eax ]
push edx
push ecx
call sub_401b00
add esp 0xc
cmp al bl
jne r-xdata
xor esi esi
cmp [ ebp - 0x80 ] bl
je r-xdata
push ebx
push r--data
call [ FindWindowW@IAT ]
mov esi eax
cmp esi ebx
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_401736
mov esp ebp
pop ebp
retn 0x10
lea ecx [ ebp - 0x148 ]
call [ wui::util::CInitGdiplus::Succeeded@IAT ]
test al al
jne r-xdata
mov ecx [ rw-data ]
push ecx
push ebx
push ebx
call [ CreateMutexW@IAT ]
mov esi eax
cmp esi ebx
je r-xdata
mov [ ebp - 0x4 ] bl
lea ecx [ ebp - 0x80 ]
call sub_401f20
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x148 ]
call [ wui::util::CInitGdiplus::~CInitGdiplus@IAT ]
xor eax eax
jmp r-xdata
push r--data
push r--data
call Ordinal_vmwarebase_2
add esp 0x8
push ebx
push ebx
push 0x10
push esi
call [ SendMessageW@IAT ]
mov eax [ ebp + 0x8 ]
push ebx
push eax
push ebx
mov ecx rw-data
call sub_402950
lea ecx [ ebp - 0x80 ]
push ecx
call sub_407670
add esp 0x4
mov ecx rw-data
mov edi eax
call sub_405b20
call [ CoUninitialize@IAT ]
cmp esi ebx
je r-xdata
mov edx [ ebp - 0x144 ]
push edx
push r--data
push r--data
call Ordinal_vmwarebase_4
add esp 0xc
jmp r-xdata
call [ GetLastError@IAT ]
cmp eax 0xb7
jne r-xdata
push edi
push r--data
call Ordinal_vmwarebase_2
add esp 0x8
cmp edi ebx
jne r-xdata
push esi
call [ CloseHandle@IAT ]
mov [ ebp - 0x4 ] bl
lea ecx [ ebp - 0x80 ]
call sub_401f20
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x148 ]
call [ wui::util::CInitGdiplus::~CInitGdiplus@IAT ]
or eax 0xffffffff
jmp r-xdata
push r--data
push r--data
call Ordinal_vmwarebase_2
add esp 0x8
push esi
call [ CloseHandle@IAT ]
mov [ ebp - 0x4 ] bl
lea ecx [ ebp - 0x80 ]
call sub_401f20
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x148 ]
call [ wui::util::CInitGdiplus::~CInitGdiplus@IAT ]
mov eax 0xfffffffe
jmp r-xdata
call Ordinal_vmwarebase_9
mov [ ebp - 0x4 ] bl
lea ecx [ ebp - 0x80 ]
call sub_401f20
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x148 ]
call [ wui::util::CInitGdiplus::~CInitGdiplus@IAT ]
mov eax edi
push ebx
call Ordinal_vmwarebase_18
add esp 0x4
sub_4079f0
push ebp
mov ebp esp
push 0xffffffff
push sub_41aa19
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] 0xffffffff
call [ sigc::signal_base::~signal_base@IAT ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_407a40
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
push eax
push ecx
mov ecx [ rw-data ]
call sub_411010
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
push 0x0
call [ PostQuitMessage@IAT ]
pop ebp
retn
mov edx [ ecx ]
mov eax [ edx ]
push 0x1
call eax
sub_407a80
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov eax [ ecx ]
mov edx [ eax + 0x4 ]
call edx
push eax
push r--data
call Ordinal_vmwarebase_2
mov ecx [ rw-data ]
add esp 0x8
test ecx ecx
je r-xdata
push 0x1
call [ PostQuitMessage@IAT ]
pop ebp
retn
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
sub_407ac0
push ebp
mov ebp esp
push 0xffffffff
push sub_41aa49
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] 0xffffffff
call [ utf::string::~string@IAT ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_407b10
push ebp
mov ebp esp
push 0xffffffff
push sub_41aa78
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] ecx
mov eax [ ecx - 0x18 ]
mov [ ecx - 0x1c ] r--data
mov edx [ eax + 0x8 ]
mov [ edx + ecx - 0x18 ] r--data
mov eax [ ecx - 0x18 ]
mov edx [ eax + 0xc ]
mov [ edx + ecx - 0x18 ] r--data
mov eax [ ecx - 0x18 ]
mov eax [ eax + 0x8 ]
lea edx [ eax - 0x18 ]
mov [ eax + ecx - 0x1c ] edx
mov eax [ ecx - 0x18 ]
mov eax [ eax + 0xc ]
lea edx [ eax - 0x40 ]
mov [ eax + ecx - 0x1c ] edx
mov [ ebp - 0x4 ] 0x0
mov [ ecx - 0x14 ] 0xc0000001
mov [ ebp - 0x4 ] 0xffffffff
call sub_417640
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_407ba0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
jne r-xdata
xor eax eax
pop ebp
retn 0x4
cmp [ eax + 0x4 ] 0x0
jne r-xdata
cmp [ eax + 0x8 ] 0xc0
jne r-xdata
cmp [ eax + 0xc ] 0x46000000
jne r-xdata
mov eax 0x1
pop ebp
retn 0x4
sub_407be0
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
push esi
je r-xdata
mov eax 0x80070057
pop esi
pop ebp
retn 0x10
mov esi [ ebp + 0xc ]
test esi esi
je r-xdata
push ebx
mov ebx [ ebp + 0x14 ]
test ebx ebx
jne r-xdata
push edi
mov edi [ ebp + 0x10 ]
push edi
mov [ ebx ] 0x0
call sub_407ba0
test eax eax
je r-xdata
pop ebx
mov eax 0x80004003
pop esi
pop ebp
retn 0x10
mov ecx [ esi + 0x8 ]
test ecx ecx
je r-xdata
mov esi [ esi + 0x4 ]
add esi [ ebp + 0x8 ]
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
push esi
call ecx
mov [ ebx ] esi
xor eax eax
pop edi
pop ebx
mov eax 0x80004002
pop esi
pop ebp
retn 0x10
mov eax [ esi ]
xor ebx ebx
test eax eax
sete bl
test ebx ebx
jne r-xdata
cmp ecx 0x1
je r-xdata
mov edx [ eax ]
cmp edx [ edi ]
jne r-xdata
mov esi [ esi + 0x4 ]
add esi [ ebp + 0x8 ]
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
push esi
call ecx
mov edx [ ebp + 0x14 ]
pop edi
pop ebx
mov [ edx ] esi
xor eax eax
pop esi
pop ebp
retn 0x10
mov edx [ esi + 0x4 ]
mov eax [ ebp + 0x14 ]
push edx
mov edx [ ebp + 0x8 ]
push eax
push edi
push edx
call ecx
test eax eax
je r-xdata
mov ecx [ esi + 0x14 ]
add esi 0xc
test ecx ecx
jne r-xdata
mov edx [ eax + 0x4 ]
cmp edx [ edi + 0x4 ]
jne r-xdata
pop edi
pop ebx
pop esi
pop ebp
retn 0x10
test ebx ebx
jne r-xdata
mov edx [ eax + 0x8 ]
cmp edx [ edi + 0x8 ]
jne r-xdata
test eax eax
jl r-xdata
mov eax [ eax + 0xc ]
cmp eax [ edi + 0xc ]
jne r-xdata
sub_407d10
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add [ eax + 0x8 ] 0xffffffff
push esi
mov esi [ eax + 0x8 ]
jne r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
test eax eax
je r-xdata
mov ecx [ eax + 0x4 ]
mov edx [ ecx + 0x8 ]
lea ecx [ edx + eax + 0x4 ]
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
sub_407d60
push ebx
mov ebx [ _invalid_parameter_noinfo@IAT ]
push esi
mov esi ecx
mov eax [ esi ]
push edi
mov edi [ esi + 0x4 ]
test eax eax
jne r-xdata
mov ecx [ eax ]
jmp r-xdata
call ebx
mov eax [ esi ]
test eax eax
je r-xdata
test eax eax
je r-xdata
xor ecx ecx
xor eax eax
mov eax [ eax ]
jmp r-xdata
mov esi [ esi ]
test esi esi
je r-xdata
call ebx
mov eax [ eax + 0x1c ]
add eax [ ecx + 0x18 ]
cmp [ esi + 0x4 ] eax
jb r-xdata
xor eax eax
mov eax [ esi ]
jmp r-xdata
test esi esi
je r-xdata
test esi esi
je r-xdata
cmp [ eax + 0x14 ] edi
ja r-xdata
xor eax eax
mov edx [ eax + 0x10 ]
mov eax [ edx + edi * 4 ]
pop edi
pop esi
pop ebx
retn
mov esi [ esi ]
mov ecx [ esi + 0x10 ]
mov eax [ ecx + edi * 4 ]
pop edi
pop esi
pop ebx
retn
xor eax eax
mov eax [ esi ]
jmp r-xdata
sub edi [ eax + 0x14 ]
sub_407de0
push esi
mov esi ecx
mov eax [ esi ]
push edi
mov edi [ _invalid_parameter_noinfo@IAT ]
test eax eax
jne r-xdata
mov ecx [ eax ]
jmp r-xdata
call edi
mov eax [ esi ]
test eax eax
je r-xdata
test eax eax
je r-xdata
xor ecx ecx
xor eax eax
mov eax [ eax ]
jmp r-xdata
inc [ esi + 0x4 ]
pop edi
mov eax esi
pop esi
retn
call edi
mov eax [ eax + 0x1c ]
add eax [ ecx + 0x18 ]
cmp [ esi + 0x4 ] eax
jb r-xdata
sub_407e20
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi ]
push edi
mov edi [ ebp + 0x8 ]
test eax eax
je r-xdata
call [ _invalid_parameter_noinfo@IAT ]
cmp eax [ edi ]
je r-xdata
mov eax [ esi + 0x4 ]
xor ecx ecx
cmp eax [ edi + 0x4 ]
pop edi
setne cl
mov al cl
pop esi
pop ebp
retn 0x4
sub_407e50
push ebp
mov ebp esp
push 0xffffffff
push sub_41d1cc
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push 0x1c
call [ sigc::internal::slot_rep::operator new@IAT ]
add esp 0x4
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
xor eax eax
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx eax
call sub_4085b0
jmp r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_407ec0
push ebp
mov ebp esp
push 0xffffffff
push sub_41d1cc
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push 0x60
call [ sigc::internal::slot_rep::operator new@IAT ]
add esp 0x4
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
xor eax eax
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx eax
call sub_408dc0
jmp r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_407f30
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov eax [ esi ]
push edi
test eax eax
jne r-xdata
mov ebx [ eax ]
jmp r-xdata
call [ _invalid_parameter_noinfo@IAT ]
mov eax [ esi ]
test eax eax
je r-xdata
test eax eax
je r-xdata
xor ebx ebx
xor edx edx
mov edx [ eax ]
jmp r-xdata
call [ _invalid_parameter_noinfo@IAT ]
test eax eax
je r-xdata
mov edx [ edx + 0x1c ]
mov ecx [ esi + 0x4 ]
mov edi [ ebp + 0x8 ]
add edx [ ebx + 0x18 ]
add ecx edi
cmp ecx edx
ja r-xdata
xor eax eax
mov eax [ eax ]
jmp r-xdata
add [ esi + 0x4 ] edi
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
cmp ecx [ eax + 0x18 ]
jae r-xdata
sub_407fe0
push ebp
mov ebp esp
push 0xffffffff
push sub_41aae0
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov eax [ esi - 0x68 ]
mov [ esi - 0x6c ] r--data
mov ecx [ eax + 0x8 ]
mov [ ecx + esi - 0x68 ] r--data
mov edx [ esi - 0x68 ]
mov eax [ edx + 0x8 ]
lea ecx [ eax - 0x68 ]
mov [ eax + esi - 0x6c ] ecx
mov [ ebp - 0x4 ] 0x2
mov edi [ utf::string::~string@IAT ]
lea ecx [ esi - 0x30 ]
call edi
mov [ ebp - 0x4 ] 0x1
lea ecx [ esi - 0x54 ]
call edi
mov [ ebp - 0x4 ] 0x0
lea ecx [ esi - 0x58 ]
call [ sigc::connection::~connection@IAT ]
or eax 0xffffffff
mov [ ebp - 0x4 ] eax
lea ecx [ esi - 0x64 ]
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] eax
call [ sigc::signal_base::~signal_base@IAT ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_4080c0
push ebp
mov ebp esp
push 0xffffffff
push sub_41ab7a
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x14 ] esi
xor edi edi
mov [ ebp - 0x10 ] edi
cmp [ ebp + 0x8 ] edi
je r-xdata
mov eax [ esi + 0x4 ]
mov [ esi ] r--data
mov ecx [ eax + 0x8 ]
mov [ ecx + esi + 0x4 ] r--data
mov edx [ esi + 0x4 ]
mov eax [ edx + 0x8 ]
lea ecx [ eax - 0x68 ]
mov [ eax + esi ] ecx
lea ecx [ esi + 0x8 ]
mov [ ebp + 0x8 ] ecx
call [ sigc::signal_base::signal_base@IAT ]
mov [ ebp - 0x4 ] 0x4
lea ecx [ esi + 0x14 ]
mov [ esi + 0x10 ] edi
call [ sigc::connection::connection@IAT ]
mov [ ebp - 0x4 ] 0x5
mov edi [ utf::string::string@IAT ]
lea ecx [ esi + 0x18 ]
call edi
mov [ ebp - 0x4 ] 0x6
lea ecx [ esi + 0x3c ]
call edi
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
lea ecx [ esi + 0x64 ]
mov [ esi + 0x4 ] r--data
mov [ esi + 0x70 ] r--data
call [ sigc::trackable::trackable@IAT ]
mov [ ebp - 0x4 ] edi
push edi
lea ecx [ esi + 0x6c ]
mov [ ebp - 0x10 ] 0x1
call [ cui::ipc::Connection::Connection@IAT ]
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x10 ] 0x3
sub_4081b0
push ebp
mov ebp esp
push esi
lea esi [ ecx - 0x6c ]
push edi
lea edi [ esi + 0x6c ]
mov ecx edi
call sub_407fe0
mov ecx edi
call [ cui::ipc::Connection::~Connection@IAT ]
lea ecx [ esi + 0x64 ]
call [ sigc::trackable::~trackable@IAT ]
test [ ebp + 0x8 ] 0x1
je r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call ??3@YAXPAX@Z
add esp 0x4
sub_4081f0
push ebp
mov ebp esp
push esi
lea esi [ ecx - 0x1c ]
push edi
lea edi [ esi + 0x1c ]
mov ecx edi
call sub_407b10
lea ecx [ esi + 0xb0 ]
call sub_407fe0
mov ecx edi
call [ cui::ipc::Connection::~Connection@IAT ]
lea ecx [ esi + 0x14 ]
call [ sigc::trackable::~trackable@IAT ]
test [ ebp + 0x8 ] 0x1
je r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call ??3@YAXPAX@Z
add esp 0x4
sub_408240
push ebp
mov ebp esp
push 0xffffffff
push sub_41ac04
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x14 ] esi
cmp [ ebp + 0xc ] 0x0
mov [ ebp - 0x10 ] 0x0
je r-xdata
push 0x0
mov ecx esi
call sub_416df0
mov [ ebp - 0x4 ] 0x3
mov eax [ esi + 0x4 ]
mov [ esi ] r--data
mov ecx [ eax + 0x8 ]
mov [ ecx + esi + 0x4 ] r--data
mov edx [ esi + 0x4 ]
mov eax [ edx + 0xc ]
mov [ eax + esi + 0x4 ] r--data
mov ecx [ esi + 0x4 ]
mov eax [ ecx + 0x8 ]
lea edx [ eax - 0x18 ]
mov [ eax + esi ] edx
mov eax [ esi + 0x4 ]
mov eax [ eax + 0xc ]
lea ecx [ eax - 0x40 ]
mov [ eax + esi ] ecx
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x8
lea ecx [ esi + 0x14 ]
mov [ esi + 0x4 ] r--data
mov [ esi + 0x20 ] r--data
mov [ esi + 0x48 ] r--data
call [ sigc::trackable::trackable@IAT ]
mov [ ebp - 0x4 ] 0x0
push 0x0
lea ecx [ esi + 0x1c ]
mov [ ebp - 0x10 ] 0x1
call [ cui::ipc::Connection::Connection@IAT ]
mov [ ebp - 0x4 ] 0x1
push 0x0
lea ecx [ esi + 0x44 ]
mov [ ebp - 0x10 ] 0x3
call sub_4080c0
mov [ ebp - 0x4 ] 0x2
mov [ ebp - 0x10 ] 0x7
sub_408340
push esi
mov esi ecx
cmp [ esi + 0x1c ] 0x0
je r-xdata
pop esi
retn
mov eax [ esi + 0x18 ]
mov ecx [ esi + 0x10 ]
mov ecx [ ecx + eax * 4 ]
call [ utf::string::~string@IAT ]
inc [ esi + 0x18 ]
mov eax [ esi + 0x18 ]
cmp [ esi + 0x14 ] eax
ja r-xdata
add [ esi + 0x1c ] 0xffffffff
jne r-xdata
mov [ esi + 0x18 ] 0x0
mov [ esi + 0x18 ] 0x0
sub_408380
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x10 ]
movzx edx [ ecx ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x18 ]
push edx
call ecx
add esp 0x8
pop ebp
retn
sub_4083c0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x2c ]
mov edx [ ecx + 0x4 ]
push esi
mov esi [ eax + 0x20 ]
mov edx [ edx + esi ]
add edx [ eax + 0x1c ]
mov eax [ eax + 0x18 ]
lea ecx [ edx + ecx + 0x4 ]
pop esi
pop ebp
jmp eax
sub_4083f0
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ecx
mov eax [ esi + 0x1c ]
push edi
mov edi [ esi + 0x18 ]
add eax edi
mov [ ebx ] 0x0
cmp edi eax
jbe r-xdata
mov ecx [ esi ]
mov [ ebx + 0x4 ] edi
pop edi
pop esi
mov [ ebx ] ecx
mov eax ebx
pop ebx
pop ebp
retn 0x4
call [ _invalid_parameter_noinfo@IAT ]
sub_408430
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov edi ecx
mov eax [ edi + 0x18 ]
mov esi [ edi + 0x1c ]
add esi eax
mov [ ebx ] 0x0
cmp eax esi
jbe r-xdata
mov eax [ edi ]
pop edi
mov [ ebx + 0x4 ] esi
mov [ ebx ] eax
pop esi
mov eax ebx
pop ebx
pop ebp
retn 0x4
call [ _invalid_parameter_noinfo@IAT ]
sub_408470
push ebp
mov ebp esp
sub esp 0x24
push ebx
push esi
mov esi ecx
mov eax [ esi + 0x1c ]
push edi
mov edi [ esi + 0x18 ]
add eax edi
mov [ ebp - 0xc ] edi
cmp edi eax
jbe r-xdata
mov ebx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
mov esi [ esi ]
cmp ebx eax
je r-xdata
call [ _invalid_parameter_noinfo@IAT ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea ecx [ edi + ebx ]
mov [ ebp - 0x4 ] ecx
lea edx [ edi + eax ]
jmp r-xdata
dec eax
dec edx
mov [ ebp + 0xc ] eax
mov [ ebp - 0x8 ] edx
cmp ebx eax
je r-xdata
mov [ ebp - 0x20 ] edi
test esi esi
jne r-xdata
mov eax [ esi ]
mov ecx eax
jmp r-xdata
call [ _invalid_parameter_noinfo@IAT ]
mov edx [ ebp - 0x8 ]
xor eax eax
xor ecx ecx
mov ecx [ ecx + 0x1c ]
add ecx [ eax + 0x18 ]
cmp edx ecx
ja r-xdata
call [ _invalid_parameter_noinfo@IAT ]
mov edx [ ebp - 0x8 ]
test esi esi
je r-xdata
mov eax [ esi ]
mov ecx eax
jmp r-xdata
call [ _invalid_parameter_noinfo@IAT ]
mov ebx [ ebp + 0x8 ]
xor eax eax
xor ecx ecx
xor eax eax
mov eax [ esi ]
jmp r-xdata
mov edx [ ecx + 0x1c ]
add edx [ eax + 0x18 ]
mov ecx [ ebp - 0x4 ]
cmp ecx edx
ja r-xdata
call [ _invalid_parameter_noinfo@IAT ]
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp - 0x4 ]
test esi esi
je r-xdata
lea ecx [ ebp - 0x14 ]
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] edx
call sub_407d60
mov edx [ ebp - 0xc ]
mov edi eax
mov [ ebp - 0x20 ] edx
test esi esi
jne r-xdata
cmp edx [ eax + 0x18 ]
jae r-xdata
mov edi [ ebp - 0xc ]
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x8 ]
xor eax eax
mov eax [ esi ]
jmp r-xdata
mov [ ebp - 0x18 ] ecx
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x1c ] esi
call sub_407d60
push edi
mov ecx eax
call [ utf::string::swap@IAT ]
inc [ ebp - 0x4 ]
inc ebx
mov [ ebp + 0x8 ] ebx
cmp ebx [ ebp + 0xc ]
jne r-xdata
cmp ecx [ eax + 0x18 ]
jae r-xdata
sub_4085b0
push ebp
mov ebp esp
push 0xffffffff
push sub_41ac32
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov edi [ ebp + 0x8 ]
mov ebx [ edi + 0x4 ]
call [ sigc::trackable::trackable@IAT ]
xor eax eax
mov [ ebp - 0x4 ] eax
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] sub_408590
mov [ esi + 0xc ] sub_407e50
mov [ esi + 0x10 ] eax
mov [ esi + 0x14 ] eax
mov [ ebp - 0x4 ] 0x1
mov eax [ edi + 0x18 ]
mov [ esi + 0x18 ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_408630
push ebp
mov ebp esp
push 0xffffffff
push sub_41ac58
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] 0xffffffff
call sub_406af0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_408680
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x1c ]
inc eax
push edi
cmp [ esi + 0x14 ] eax
ja r-xdata
mov edi [ esi + 0x18 ]
test edi edi
jne r-xdata
push 0x1
call sub_406b50
mov ecx [ esi + 0x10 ]
dec edi
cmp [ ecx + edi * 4 ] 0x0
jne r-xdata
mov edi [ esi + 0x14 ]
mov eax [ ebp + 0x8 ]
mov ecx [ esi + 0x10 ]
mov edx [ ecx + edi * 4 ]
push eax
push edx
call sub_402580
add esp 0x8
inc [ esi + 0x1c ]
mov [ esi + 0x18 ] edi
pop edi
pop esi
pop ebp
retn 0x4
push 0x24
call ??2@YAPAXI@Z
mov edx [ esi + 0x10 ]
add esp 0x4
mov [ edx + edi * 4 ] eax
sub_4086e0
push ebp
mov ebp esp
push 0xffffffff
push sub_41ad12
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
call [ sigc::trackable::trackable@IAT ]
xor eax eax
mov [ ebp - 0x4 ] eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] sub_408590
mov [ esi + 0xc ] sub_407e50
mov [ esi + 0x10 ] eax
mov [ esi + 0x14 ] eax
mov [ ebp - 0x4 ] 0x1
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ esi + 0x18 ] ecx
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_408760
push ebp
mov ebp esp
push 0xffffffff
push sub_41aca7
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
xor eax eax
mov [ ebp - 0x4 ] eax
lea ecx [ esi + 0x28 ]
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x4 ] al
call sub_406af0
or eax 0xffffffff
mov [ ebp - 0x4 ] eax
lea ecx [ esi + 0x4 ]
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x4 ] eax
call [ utf::string::~string@IAT ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
sub_4087d0
push ebp
mov ebp esp
push 0xffffffff
push sub_41d205
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
push 0x1c
call [ sigc::internal::slot_rep::operator new@IAT ]
add esp 0x4
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
xor eax eax
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx eax
call sub_4086e0
jmp r-xdata
mov [ ebp - 0x4 ] 0xffffffff
push eax
mov ecx esi
call [ sigc::slot_base::slot_base@IAT ]
mov [ ebp - 0x4 ] 0x1
mov edx [ esi ]
mov [ edx + 0x4 ] sub_408380
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_408860
push ebp
mov ebp esp
push 0xffffffff
push sub_41ace2
mov eax [ fs : 0x0 ]
push eax
sub esp 0x30
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi ecx
mov [ ebp - 0x18 ] esi
mov edi [ esi + 0x18 ]
mov eax [ esi + 0x1c ]
add eax edi
cmp edi eax
jbe r-xdata
mov eax [ esi ]
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
call [ _invalid_parameter_noinfo@IAT ]
call [ _invalid_parameter_noinfo@IAT ]
cmp ecx eax
je r-xdata
call [ _invalid_parameter_noinfo@IAT ]
cmp eax [ ebp + 0x18 ]
je r-xdata
mov eax [ ebp + 0xc ]
sub eax edi
mov ebx eax
mov eax [ esi + 0x1c ]
mov edi eax
sub edi ebx
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x1c
cmp ebx edi
jae r-xdata
mov ecx [ ebp + 0x14 ]
cmp ecx [ ebp + 0x1c ]
je r-xdata
mov [ ebp - 0x4 ] 0x3
mov edi [ utf::string::string@IAT ]
mov [ ebp - 0x4 ] 0x0
mov edi [ utf::string::string@IAT ]
mov [ ebp - 0x4 ] 0xffffffff
mov edi [ ebp - 0x14 ]
cmp ebx edi
jae r-xdata
lea ecx [ ebp + 0x10 ]
call sub_407d60
push eax
lea ecx [ ebp - 0x3c ]
call edi
mov [ ebp - 0x4 ] 0x4
push eax
mov ecx esi
call sub_406dd0
mov [ ebp - 0x4 ] 0x3
lea ecx [ ebp - 0x3c ]
call [ utf::string::~string@IAT ]
lea ecx [ ebp + 0x10 ]
call sub_407de0
jmp r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ esi + 0x1c ]
sub eax [ ebp - 0x14 ]
mov ecx esi
test ebx ebx
jbe r-xdata
lea ecx [ ebp + 0x10 ]
call sub_407d60
push eax
lea ecx [ ebp - 0x3c ]
call edi
mov [ ebp - 0x4 ] 0x1
push eax
mov ecx esi
call sub_408680
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x3c ]
call [ utf::string::~string@IAT ]
lea ecx [ ebp + 0x10 ]
call sub_407de0
jmp r-xdata
push edi
push ebx
mov ecx esi
call sub_408470
mov ecx [ esi + 0x1c ]
push ecx
push edi
mov ecx esi
call sub_408470
mov edx [ esi + 0x1c ]
push edx
push ebx
jmp r-xdata
lea eax [ ebp + 0x18 ]
push eax
lea ecx [ ebp + 0x10 ]
call sub_407e20
test al al
je r-xdata
push eax
push 0x0
jmp r-xdata
add ebx eax
push ebx
push eax
call sub_408470
push ebx
push 0x0
lea edx [ ebp + 0x18 ]
push edx
lea ecx [ ebp + 0x10 ]
call sub_407e20
test al al
je r-xdata
mov ecx esi
call sub_408470
sub_408a60
push ebp
mov ebp esp
mov eax [ ebp + 0x1c ]
mov edx [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x18 ]
push edx
mov edx [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push edx
mov edx [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push edx
push eax
call sub_408860
pop ebp
retn 0x18
sub_408a90
push ebp
mov ebp esp
push 0xffffffff
push sub_41ad12
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
call [ sigc::trackable::trackable@IAT ]
xor eax eax
mov [ ebp - 0x4 ] eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] sub_408a40
mov [ esi + 0xc ] sub_4118f0
mov [ esi + 0x10 ] eax
mov [ esi + 0x14 ] eax
mov [ ebp - 0x4 ] 0x1
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ esi + 0x18 ] ecx
mov edx [ eax + 0x4 ]
mov [ esi + 0x1c ] edx
mov ecx [ eax + 0x8 ]
mov [ esi + 0x20 ] ecx
mov edx [ eax + 0xc ]
mov [ esi + 0x24 ] edx
mov ecx [ eax + 0x10 ]
mov [ esi + 0x28 ] ecx
mov edx [ eax + 0x14 ]
mov eax [ sigc::internal::slot_rep::notify@IAT ]
push eax
mov [ esi + 0x2c ] edx
mov ecx [ esi + 0x28 ]
push esi
call [ sigc::trackable::add_destroy_notify_callback@IAT ]
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_408b60
push ebp
mov ebp esp
push 0xffffffff
push sub_41ad38
mov eax [ fs : 0x0 ]
push eax
sub esp 0x28
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi ecx
mov [ ebp - 0x14 ] esi
push ecx
mov [ ebp - 0x18 ] esp
mov [ ebp - 0x18 ] esp
call sub_4058c0
xor eax eax
mov [ ebp - 0x4 ] eax
mov [ esi + 0x10 ] eax
mov [ esi + 0x14 ] eax
mov [ esi + 0x18 ] eax
mov [ esi + 0x1c ] eax
mov [ ebp - 0x4 ] 0x1
lea eax [ ebp - 0x24 ]
push eax
mov ecx esi
call sub_4083f0
mov ebx [ eax ]
mov ecx [ eax + 0x4 ]
mov [ ebp - 0x18 ] ecx
lea edx [ ebp - 0x2c ]
push edx
mov ecx [ ebp + 0x8 ]
call sub_408430
mov edi eax
lea eax [ ebp - 0x34 ]
push eax
mov ecx [ ebp + 0x8 ]
call sub_4083f0
mov ecx [ edi + 0x4 ]
push ecx
mov edx [ edi ]
push edx
mov ecx [ eax + 0x4 ]
push ecx
mov edx [ eax ]
push edx
mov eax [ ebp - 0x18 ]
push eax
push ebx
mov ecx esi
call sub_408a60
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_408c30
push ebp
mov ebp esp
push 0xffffffff
push sub_41d205
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
push 0x30
call [ sigc::internal::slot_rep::operator new@IAT ]
add esp 0x4
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
xor eax eax
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx eax
call sub_408a90
jmp r-xdata
mov [ ebp - 0x4 ] 0xffffffff
push eax
mov ecx esi
call [ sigc::slot_base::slot_base@IAT ]
mov [ ebp - 0x4 ] 0x1
mov edx [ esi ]
mov [ edx + 0x4 ] sub_4083c0
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_408cc0
push ebp
mov ebp esp
push 0xffffffff
push sub_41ad87
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ebp + 0xc ]
mov [ esi ] ecx
lea ecx [ esi + 0x4 ]
push edx
mov [ ebp + 0x8 ] ecx
call [ utf::string::string@IAT ]
mov [ ebp - 0x4 ] 0x1
mov eax [ ebp + 0x10 ]
lea ecx [ esi + 0x28 ]
push eax
mov [ ebp + 0x8 ] ecx
call sub_408b60
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0xc
sub_408d40
push ebp
mov ebp esp
push 0xffffffff
push sub_41add7
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov edi [ ebp + 0x8 ]
mov eax [ edi ]
lea edx [ edi + 0x4 ]
lea ecx [ esi + 0x4 ]
push edx
mov [ esi ] eax
mov [ ebp + 0x8 ] ecx
call [ utf::string::string@IAT ]
mov [ ebp - 0x4 ] 0x1
add edi 0x28
lea ecx [ esi + 0x28 ]
push edi
mov [ ebp + 0x8 ] ecx
call sub_408b60
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_408dc0
push ebp
mov ebp esp
push 0xffffffff
push sub_41ae1d
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov edi [ ebp + 0x8 ]
mov ebx [ edi + 0x4 ]
call [ sigc::trackable::trackable@IAT ]
xor eax eax
mov [ ebp - 0x4 ] eax
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] sub_408b40
mov [ esi + 0xc ] sub_407ec0
mov [ esi + 0x10 ] eax
mov [ esi + 0x14 ] eax
mov [ ebp - 0x4 ] 0x1
add edi 0x18
push edi
lea ecx [ esi + 0x18 ]
call sub_408d40
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_408e50
push ebp
mov ebp esp
push 0xffffffff
push sub_41aee1
mov eax [ fs : 0x0 ]
push eax
sub esp 0x30
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x14 ] esi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
lea edi [ ebx + 0x3 ]
cmp [ ebp + 0x8 ] ebx
je r-xdata
push 0x0
push 0x0
mov ecx esi
call sub_408240
mov [ ebp - 0x4 ] edi
mov eax [ esi + 0x4 ]
mov [ esi ] r--data
mov ecx [ eax + 0x8 ]
mov [ ecx + esi + 0x4 ] r--data
mov edx [ esi + 0x4 ]
mov eax [ edx + 0xc ]
mov [ eax + esi + 0x4 ] r--data
mov ecx [ esi + 0x4 ]
mov eax [ ecx + 0x8 ]
lea edx [ eax - 0x24 ]
mov [ eax + esi ] edx
mov eax [ esi + 0x4 ]
mov eax [ eax + 0xc ]
lea ecx [ eax - 0x4c ]
mov [ eax + esi ] ecx
lea edi [ esi + 0x14 ]
mov ecx edi
mov [ ebp + 0x8 ] ecx
call [ sigc::signal_base::signal_base@IAT ]
mov bl 0x6
mov [ ebp - 0x4 ] bl
xor edx edx
xor ecx ecx
mov [ ebp - 0x34 ] edx
mov edx [ esi + 0x4 ]
mov [ esi + 0x1c ] ecx
mov eax sub_407d40
mov [ ebp - 0x3c ] eax
mov eax [ edx + 0x4 ]
mov [ ebp - 0x38 ] ecx
lea ecx [ eax + esi + 0x4 ]
lea edx [ ebp - 0x3c ]
mov [ ebp - 0x2c ] ecx
push edx
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x28 ] esi
call sub_408c30
mov [ ebp - 0x4 ] 0x8
lea eax [ ebp - 0x1c ]
push eax
lea ecx [ ebp - 0x24 ]
push ecx
mov ecx edi
call [ sigc::signal_base::connect@IAT ]
mov [ ebp - 0x4 ] bl
lea ecx [ ebp - 0x1c ]
call [ sigc::slot_base::~slot_base@IAT ]
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea ecx [ esi + 0x20 ]
mov [ esi + 0x4 ] r--data
mov [ esi + 0x2c ] r--data
mov [ esi + 0x54 ] r--data
call [ sigc::trackable::trackable@IAT ]
mov [ ebp - 0x4 ] ebx
mov ebx 0x1
push 0x0
lea ecx [ esi + 0x28 ]
mov [ ebp - 0x10 ] ebx
call [ cui::ipc::Connection::Connection@IAT ]
mov [ ebp - 0x4 ] ebx
push 0x0
lea ecx [ esi + 0x50 ]
mov [ ebp - 0x10 ] edi
call sub_4080c0
mov [ ebp - 0x4 ] 0x2
mov [ ebp - 0x10 ] 0x7
sub_408fb0
push ebp
mov ebp esp
push 0xffffffff
push sub_419e31
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ecx [ ebp + 0x8 ]
mov [ ebp + 0x8 ] ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] 0x0
test ecx ecx
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0xc ]
push eax
call [ sigc::slot_base::slot_base@IAT ]
sub_409060
push ebp
mov ebp esp
push 0xffffffff
push sub_41af27
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
xor eax eax
mov [ ebp - 0x4 ] eax
lea ecx [ esi - 0x14 ]
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x4 ] al
call [ sigc::signal_base::~signal_base@IAT ]
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ esi - 0xc ]
call sub_407b10
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
sub_4090e0
push ebp
mov ebp esp
push 0xffffffff
push sub_41af50
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov edi ecx
push 0x10
call ??2@YAPAXI@Z
add esp 0x4
mov esi eax
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
mov [ ebp - 0x14 ] 0x1
lea eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ esi ] eax
mov [ ebp - 0x14 ] 0x2
mov edx [ ebp + 0x10 ]
push edx
lea eax [ esi + 0x8 ]
push eax
lea ecx [ edi + 0x10 ]
call sub_4090c0
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov ecx [ ebp + 0xc ]
mov [ eax ] ecx
sub_409190
push ebp
mov ebp esp
push 0xffffffff
push sub_41c0c9
mov eax [ fs : 0x0 ]
push eax
sub esp 0x44
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ecx + 0x18 ]
mov edx [ ebp + 0x8 ]
mov esi 0x1fffffff
sub esi eax
cmp esi edx
jae r-xdata
add eax edx
mov [ ecx + 0x18 ] eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
push r--data
lea ecx [ ebp - 0x28 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x28 ]
push eax
lea ecx [ ebp - 0x50 ]
call sub_402250
push r--data
lea ecx [ ebp - 0x50 ]
push ecx
call _CxxThrowException
sub_409210
push ebp
mov ebp esp
push esi
lea esi [ ecx - 0x28 ]
push edi
lea edi [ esi + 0x28 ]
mov ecx edi
call sub_409060
lea ecx [ esi + 0xbc ]
call sub_407fe0
mov ecx edi
call [ cui::ipc::Connection::~Connection@IAT ]
lea ecx [ esi + 0x20 ]
call [ sigc::trackable::~trackable@IAT ]
test [ ebp + 0x8 ] 0x1
je r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call ??3@YAXPAX@Z
add esp 0x4
sub_409260
push ebp
mov ebp esp
push 0xffffffff
push sub_41af7c
mov eax [ fs : 0x0 ]
push eax
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp + 0x8 ]
add ecx 0x8
call [ sigc::slot_base::~slot_base@IAT ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0x4
sub_4092b0
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
mov edx [ eax + 0x4 ]
push ebx
push esi
push edi
mov ebx ecx
mov ecx [ ebp + 0x14 ]
lea edi [ eax + 0x4 ]
push ecx
push edx
push eax
mov ecx ebx
call sub_4090e0
push 0x1
mov ecx ebx
mov esi eax
call sub_409190
mov [ edi ] esi
mov eax [ esi + 0x4 ]
mov edi [ _invalid_parameter_noinfo@IAT ]
mov [ eax ] esi
mov eax [ ebp + 0xc ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0x10 ]
mov ecx [ ecx + 0x4 ]
mov [ ebp + 0x10 ] ecx
test eax eax
je r-xdata
call edi
mov eax [ ebp + 0xc ]
xor eax eax
mov eax [ eax ]
jmp r-xdata
mov esi [ ebp + 0x8 ]
mov [ esi ] 0x0
mov [ esi + 0x4 ] ecx
test ebx ebx
jne r-xdata
call edi
mov ecx [ ebp + 0x10 ]
cmp ecx [ eax + 0x14 ]
jne r-xdata
mov edx [ ebx ]
pop edi
mov [ esi ] edx
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x10
call edi
sub_409330
push ebp
mov ebp esp
sub esp 0x8
mov eax [ ebp + 0xc ]
push ebx
mov ebx [ _invalid_parameter_noinfo@IAT ]
push esi
mov esi [ ebp + 0x10 ]
push edi
mov edi ecx
mov [ ebp - 0x8 ] eax
test eax eax
jne r-xdata
mov eax [ eax ]
jmp r-xdata
call ebx
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
mov ecx [ ebp + 0x10 ]
cmp ecx [ eax + 0x14 ]
jne r-xdata
xor eax eax
mov edx [ ebp + 0x10 ]
mov eax [ edx ]
mov [ ebp + 0x10 ] eax
cmp esi [ edi + 0x14 ]
je r-xdata
call ebx
mov ecx [ edi ]
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x10 ]
pop edi
pop esi
mov [ eax + 0x4 ] edx
mov [ eax ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov ecx [ esi + 0x4 ]
mov edx [ esi ]
mov [ ecx ] edx
mov ecx [ esi + 0x4 ]
mov eax [ esi ]
mov [ eax + 0x4 ] ecx
push esi
lea ecx [ edi + 0x8 ]
call sub_409260
push esi
call ??3@YAXPAX@Z
add esp 0x4
dec [ edi + 0x18 ]
sub_4093b0
push ebp
mov ebp esp
push 0xffffffff
push sub_41afa9
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov eax [ ebp + 0x8 ]
mov [ esi ] eax
xor eax eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
mov eax [ esi ]
mov edi [ eax + 0x14 ]
mov ebx [ eax ]
lea ecx [ ebp - 0x14 ]
call [ sigc::slot_base::slot_base@IAT ]
mov [ ebp - 0x4 ] 0x0
push eax
push edi
push ebx
lea ecx [ ebp - 0x1c ]
push ecx
mov ecx [ esi ]
call sub_4092b0
mov edx [ eax ]
mov [ esi + 0x4 ] edx
mov eax [ eax + 0x4 ]
mov [ esi + 0x8 ] eax
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call [ sigc::slot_base::~slot_base@IAT ]
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_409440
push ebp
mov ebp esp
mov eax [ ecx + 0x8 ]
mov edx [ ecx + 0x4 ]
mov ecx [ ecx ]
sub esp 0x8
push eax
push edx
lea eax [ ebp - 0x8 ]
push eax
call sub_409330
mov esp ebp
pop ebp
retn
sub_409460
push ebp
mov ebp esp
push 0xffffffff
push sub_41c2b1
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov ebx 0x1
mov [ ebp + 0x8 ] eax
add [ eax ] bx
add [ eax + 0x2 ] bx
mov [ ebp - 0x4 ] 0x0
add eax 0x8
push eax
lea ecx [ ebp - 0x18 ]
call sub_4093b0
mov [ ebp - 0x4 ] bl
mov ecx [ ebp - 0x18 ]
mov eax [ ecx + 0x14 ]
mov eax [ eax ]
mov esi [ ecx ]
mov ebx [ _invalid_parameter_noinfo@IAT ]
mov edi eax
call ebx
cmp esi [ ebp - 0x14 ]
je r-xdata
mov [ ebp - 0x4 ] 0x0
push eax
mov eax [ ebp - 0x14 ]
push eax
lea ecx [ ebp - 0x14 ]
push ecx
mov ecx [ ebp - 0x18 ]
call sub_409330
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp + 0x8 ]
call [ sigc::internal::signal_exec::~signal_exec@IAT ]
test esi esi
jne r-xdata
mov eax [ ebp - 0x10 ]
cmp edi eax
je r-xdata
mov eax [ esi ]
jmp r-xdata
call ebx
xor eax eax
cmp edi [ eax + 0x14 ]
jne r-xdata
mov eax [ edi + 0x8 ]
test eax eax
je r-xdata
call ebx
test esi esi
jne r-xdata
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ esi ]
jmp r-xdata
call ebx
xor eax eax
test esi esi
jne r-xdata
cmp edi [ eax + 0x14 ]
jne r-xdata
mov edi [ edi ]
jmp r-xdata
call ebx
mov eax [ esi ]
jmp r-xdata
call ebx
xor eax eax
test esi esi
je r-xdata
cmp edi [ eax + 0x14 ]
jne r-xdata
cmp [ edi + 0xc ] 0x0
jne r-xdata
call ebx
test esi esi
jne r-xdata
mov eax [ esi ]
jmp r-xdata
call ebx
xor eax eax
cmp edi [ eax + 0x14 ]
jne r-xdata
test esi esi
jne r-xdata
call ebx
mov eax [ esi ]
jmp r-xdata
call ebx
xor eax eax
cmp edi [ eax + 0x14 ]
jne r-xdata
mov eax [ edi + 0x8 ]
mov edx [ eax + 0x4 ]
mov ecx eax
push ecx
call edx
add esp 0x4
call ebx
sub_4095b0
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x18 ]
inc [ esi + 0x1c ]
push eax
call sub_409460
add esp 0x4
inc [ esi + 0x8 ]
mov eax [ esi + 0x8 ]
pop esi
pop ebp
retn 0x4
sub_4095e0
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x18 ]
push edi
or edi 0xffffffff
add [ esi + 0x1c ] edi
push eax
call sub_409460
add esp 0x4
add [ esi + 0x8 ] edi
mov edi [ esi + 0x8 ]
jne r-xdata
mov eax edi
pop edi
pop esi
pop ebp
retn 0x4
mov ecx [ esi + 0x4 ]
mov edx [ ecx + 0x8 ]
mov eax [ edx + esi + 0x4 ]
lea ecx [ edx + esi + 0x4 ]
mov edx [ eax ]
push 0x1
call edx
sub_409620
push ebp
mov ebp esp
push 0xffffffff
push sub_41affa
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0x4 ] 0x2
mov edx [ ebp + 0xc ]
lea eax [ ebp + 0x34 ]
push eax
lea ecx [ ebp + 0x10 ]
push ecx
push edx
mov ecx esi
call sub_408cc0
mov eax 0x1
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] al
lea ecx [ ebp + 0x10 ]
call [ utf::string::~string@IAT ]
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp + 0x34 ]
call sub_406af0
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
sub_4096a0
push ebp
mov ebp esp
push 0xffffffff
push sub_41b03d
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
call [ sigc::trackable::trackable@IAT ]
xor eax eax
mov [ ebp - 0x4 ] eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] sub_408b40
mov [ esi + 0xc ] sub_407ec0
mov [ esi + 0x10 ] eax
mov [ esi + 0x14 ] eax
mov [ ebp - 0x4 ] 0x1
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ esi + 0x18 ]
call sub_408d40
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_409720
push ebp
mov ebp esp
push 0xffffffff
push sub_41d205
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
push 0x60
call [ sigc::internal::slot_rep::operator new@IAT ]
add esp 0x4
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
xor eax eax
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx eax
call sub_4096a0
jmp r-xdata
mov [ ebp - 0x4 ] 0xffffffff
push eax
mov ecx esi
call [ sigc::slot_base::slot_base@IAT ]
mov [ ebp - 0x4 ] 0x1
mov edx [ esi ]
mov [ edx + 0x4 ] sub_4083a0
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_4097b0
push ebp
mov ebp esp
push 0xffffffff
push sub_41b0af
mov eax [ fs : 0x0 ]
push eax
sub esp 0x58
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push 0xb4
call ??2@YAPAXI@Z
add esp 0x4
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
xor edi edi
push 0x1
mov ecx eax
call sub_408e50
mov edi eax
jmp r-xdata
xor eax eax
test edi edi
jne r-xdata
or ebx 0xffffffff
mov [ ebp - 0x4 ] ebx
push 0x10
call ??2@YAPAXI@Z
add esp 0x4
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x1
test eax eax
je r-xdata
mov ecx [ edi + 0x4 ]
mov edx [ ecx + 0x8 ]
lea ecx [ edx + edi + 0x4 ]
push 0x1
push ecx
mov ecx eax
call sub_410db0
jmp r-xdata
xor ecx ecx
push 0x1
push ecx
mov ecx eax
call sub_410db0
jmp r-xdata
mov [ ebp - 0x4 ] ebx
sub esp 0x20
mov [ rw-data ] eax
mov eax [ ebp + 0xc ]
mov ecx esp
mov [ ebp - 0x14 ] esp
push eax
call sub_408b60
mov [ ebp - 0x4 ] 0x2
mov esi [ ebp + 0x8 ]
sub esp 0x24
mov ecx esp
mov [ ebp - 0x18 ] esp
push esi
call [ utf::string::string@IAT ]
mov [ ebp - 0x4 ] 0x3
lea ecx [ ebp - 0x10 ]
push ecx
lea edx [ ebp - 0x64 ]
mov [ ebp - 0x10 ] sub_407a40
push edx
mov [ ebp - 0x4 ] ebx
call sub_409620
mov ebx 0x4
mov [ ebp - 0x4 ] ebx
add esp 0x44
mov ecx esp
mov [ ebp - 0x18 ] esp
push eax
mov [ ebp - 0x14 ] ecx
call sub_409720
mov [ ebp - 0x4 ] 0x6
sub esp 0x8
mov ecx esp
lea eax [ ebp - 0x10 ]
mov [ ebp - 0x14 ] esp
push eax
mov [ ebp - 0x10 ] sub_407a80
mov [ ebp - 0x1c ] ecx
call sub_4087d0
mov [ ebp - 0x4 ] 0x8
push esi
mov [ ebp - 0x4 ] bl
mov ecx edi
call sub_416f50
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x64 ]
call sub_408760
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_409900
push ebp
mov ebp esp
sub esp 0x120
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push 0x118
lea eax [ ebp - 0x11c ]
push 0x0
push eax
call memset
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
mov ax [ ebp + 0x10 ]
mov esi [ VerSetConditionMask@IAT ]
add esp 0xc
push 0x3
push 0x2
mov [ ebp - 0x11c ] ecx
mov cx [ ebp + 0x14 ]
mov [ ebp - 0x118 ] edx
mov edx [ ebp + 0x18 ]
push 0x0
push 0x0
mov [ ebp - 0x120 ] 0x11c
mov [ ebp - 0xc ] ax
mov [ ebp - 0xa ] cx
mov [ ebp - 0x114 ] edx
call esi
push 0x3
push 0x1
push edx
push eax
call esi
push 0x3
push 0x20
push edx
push eax
call esi
push 0x3
push 0x10
push edx
push eax
call esi
push 0x3
push 0x4
push edx
push eax
call esi
push edx
push eax
push 0x37
lea eax [ ebp - 0x120 ]
push eax
call [ VerifyVersionInfoW@IAT ]
mov ecx [ ebp - 0x4 ]
neg eax
sbb eax eax
xor ecx ebp
neg eax
pop esi
call sub_401736
mov esp ebp
pop ebp
retn
sub_4099c0
push ebp
mov ebp esp
push 0xffffffff
push sub_41b0de
mov eax [ fs : 0x0 ]
push eax
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
test [ rw-data ] 0x1
jne r-xdata
mov esi [ GetSystemMetrics@IAT ]
push 0x1000
call esi
test eax eax
jne r-xdata
or [ rw-data ] 0x1
mov [ ebp - 0x4 ] 0x0
push 0x0
push 0x0
push 0x0
push 0x1
push 0x5
call sub_409900
add esp 0x14
mov [ rw-data ] al
mov [ ebp - 0x4 ] 0xffffffff
mov eax 0x1
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
cmp [ rw-data ] al
je r-xdata
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
push 0x2001
call esi
test eax eax
jne r-xdata
sub_409a70
push esi
mov esi ecx
mov eax [ esi + 0x78 ]
mov ecx [ esi + 0x74 ]
push edi
mov edi [ PtInRect@IAT ]
push eax
push ecx
lea edx [ esi + 0x60 ]
push edx
call edi
test eax eax
jne r-xdata
pop edi
pop esi
retn
mov eax [ esi + 0x78 ]
mov ecx [ esi + 0x74 ]
push eax
push ecx
lea edx [ esi + 0x11c ]
push edx
call edi
test eax eax
jne r-xdata
push eax
push eax
mov eax [ esi + 0x4 ]
push 0x8000
push eax
call [ PostMessageW@IAT ]
sub_409ac0
push esi
mov esi ecx
cmp [ esi + 0x88 ] 0x0
je r-xdata
mov eax [ esi + 0x4c ]
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
push 0x25
push eax
call [ UnregisterHotKey@IAT ]
mov [ esi + 0x88 ] 0x0
pop esi
retn
push eax
call [ UnhookWindowsHookEx@IAT ]
mov [ esi + 0x4c ] 0x0
sub_409b00
push esi
mov esi ecx
cmp [ esi + 0x88 ] 0x0
je r-xdata
mov eax [ esi + 0x80 ]
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
push 0x25
push eax
call [ UnregisterHotKey@IAT ]
mov [ esi + 0x88 ] 0x0
pop esi
retn
mov ecx [ esi + 0x84 ]
mov edx [ esi + 0x4 ]
push eax
push ecx
push 0x25
push edx
call [ RegisterHotKey@IAT ]
test eax eax
setne al
mov [ esi + 0x88 ] al
test al al
jne r-xdata
call [ GetLastError@IAT ]
push eax
push r--data
push r--data
call Ordinal_vmwarebase_4
add esp 0xc
sub_409b70
push ebp
mov ebp esp
sub esp 0x10
push esi
push edi
mov esi ecx
push 0x0
lea edi [ esi + 0x50 ]
push edi
call [ MonitorFromRect@IAT ]
test eax eax
je r-xdata
mov ecx [ esi + 0x98 ]
lea eax [ ebp - 0x10 ]
push eax
push ecx
call [ GetWindowRect@IAT ]
mov eax [ esi + 0x70 ]
cmp eax 0x3
jne r-xdata
push eax
lea ecx [ esi + 0x94 ]
call sub_40ebd0
cmp eax 0x1
jne r-xdata
mov eax [ edi ]
mov ecx [ esi + 0x54 ]
sub ecx [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov edi eax
sub edi [ ebp - 0x10 ]
add ecx edx
add [ ebp - 0x8 ] edi
mov edi ecx
sub edi edx
add [ ebp - 0x4 ] edi
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] ecx
jmp r-xdata
test eax eax
jne r-xdata
mov ecx [ esi + 0x5c ]
mov eax [ edi ]
jmp r-xdata
mov edx [ ebp - 0x4 ]
push 0x4
sub edx ecx
push edx
mov edx [ ebp - 0x8 ]
sub edx eax
push edx
push ecx
push eax
mov eax [ esi + 0x98 ]
push 0x0
push eax
call [ SetWindowPos@IAT ]
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
mov [ esi + 0x11c ] ecx
mov ecx [ ebp - 0x4 ]
mov [ esi + 0x120 ] edx
mov [ esi + 0x124 ] eax
pop edi
mov [ esi + 0x128 ] ecx
pop esi
mov esp ebp
pop ebp
retn
cmp eax 0x2
jne r-xdata
mov ecx [ esi + 0x54 ]
mov eax [ esi + 0x58 ]
mov edx eax
sub edx [ ebp - 0x10 ]
mov [ ebp - 0x10 ] eax
add [ ebp - 0x8 ] edx
mov edx ecx
sub edx [ ebp - 0xc ]
mov [ ebp - 0xc ] ecx
add [ ebp - 0x4 ] edx
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x10 ]
mov ecx [ esi + 0x54 ]
push ebx
mov ebx [ ebp - 0x8 ]
mov eax edx
sub eax ebx
add eax [ edi ]
mov edi eax
sub edi edx
add ebx edi
mov edx ecx
sub edx [ ebp - 0xc ]
mov [ ebp - 0x8 ] ebx
add [ ebp - 0x4 ] edx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] ecx
pop ebx
jmp r-xdata
sub_409c80
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0x201
je r-xdata
mov eax 0x1
pop ebp
retn 0x4
cmp eax 0x202
je r-xdata
cmp eax 0x203
je r-xdata
cmp eax 0x204
je r-xdata
cmp eax 0x205
je r-xdata
cmp eax 0x206
je r-xdata
cmp eax 0x207
je r-xdata
cmp eax 0x208
je r-xdata
cmp eax 0x209
je r-xdata
cmp eax 0x20b
je r-xdata
cmp eax 0x20c
je r-xdata
cmp eax 0x20d
je r-xdata
xor eax eax
pop ebp
retn 0x4
sub_409cf0
push ebp
mov ebp esp
push esi
push edi
call [ GetForegroundWindow@IAT ]
mov edi eax
call [ GetCurrentThreadId@IAT ]
push 0x0
push edi
mov esi eax
call [ GetWindowThreadProcessId@IAT ]
mov edi eax
cmp esi edi
jne r-xdata
push ebx
mov ebx [ AttachThreadInput@IAT ]
push 0x1
push edi
push esi
call ebx
test eax eax
jne r-xdata
pop edi
pop esi
pop ebp
jmp [ SetForegroundWindow@IAT ]
mov ecx [ ebp + 0x8 ]
push ecx
call [ SetForegroundWindow@IAT ]
test eax eax
jne r-xdata
call [ GetLastError@IAT ]
push eax
push r--data
push r--data
call Ordinal_vmwarebase_4
add esp 0xc
pop ebx
pop edi
pop esi
pop ebp
retn 0x4
push 0x0
push edi
push esi
call ebx
pop ebx
pop edi
pop esi
pop ebp
retn 0x4
call [ GetLastError@IAT ]
push eax
push r--data
push r--data
call Ordinal_vmwarebase_4
add esp 0xc
sub_409d90
push ebp
mov ebp esp
sub esp 0x20
push ebx
push esi
push edi
xor edi edi
push edi
push r--data
push edi
push edi
call [ FindWindowExW@IAT ]
mov esi eax
cmp esi edi
je r-xdata
push r--data
push r--data
call Ordinal_vmwarebase_2
add esp 0x8
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov ebx [ GetWindowRect@IAT ]
push edi
push r--data
push esi
push edi
call [ FindWindowExW@IAT ]
mov esi eax
cmp esi edi
jne r-xdata
push 0xffffffec
push esi
call [ GetWindowLongW@IAT ]
test eax 0x80000
je r-xdata
xor eax eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x10 ]
push eax
push esi
mov [ ebp - 0x10 ] edi
mov [ ebp - 0x20 ] edi
call ebx
test eax eax
je r-xdata
lea ecx [ ebp - 0x10 ]
push ecx
lea edx [ ebp + 0x8 ]
push edx
lea eax [ ebp - 0x20 ]
push eax
call [ IntersectRect@IAT ]
test eax eax
jne r-xdata
push esi
push r--data
push r--data
call Ordinal_vmwarebase_2
add esp 0xc
pop edi
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_409e50
push esi
mov esi ecx
cmp [ esi + 0x90 ] 0x0
jne r-xdata
pop esi
retn
mov eax [ esi + 0x4 ]
push 0x0
push 0x1f4
push 0x26
push eax
call [ SetTimer@IAT ]
test eax eax
setne cl
mov [ esi + 0x90 ] cl
sub_409eb0
push esi
mov esi ecx
cmp [ esi ] 0x0
push edi
mov edi [ _invalid_parameter_noinfo@IAT ]
jne r-xdata
mov eax [ esi + 0x4 ]
cmp [ eax + 0x15 ] 0x0
je r-xdata
call edi
mov ecx [ eax ]
cmp [ ecx + 0x15 ] 0x0
jne r-xdata
mov eax [ eax + 0x8 ]
mov [ esi + 0x4 ] eax
cmp [ eax + 0x15 ] 0x0
je r-xdata
mov eax [ eax + 0x4 ]
cmp [ eax + 0x15 ] 0x0
jne r-xdata
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x15 ] 0x0
jne r-xdata
pop edi
pop esi
retn
call edi
pop edi
pop esi
retn
mov ecx [ esi + 0x4 ]
cmp [ ecx + 0x15 ] 0x0
jne r-xdata
lea ebx [ ebx ]
pop edi
mov [ esi + 0x4 ] ecx
pop esi
retn
lea esp [ esp ]
mov [ esi + 0x4 ] eax
mov [ esi + 0x4 ] eax
mov edx eax
mov eax [ edx + 0x4 ]
cmp [ eax + 0x15 ] 0x0
je r-xdata
mov ecx eax
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x15 ] 0x0
je r-xdata
mov ecx [ esi + 0x4 ]
cmp ecx [ eax ]
jne r-xdata
sub_409f40
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
mov eax ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x14 ]
mov [ eax + 0x4 ] edx
mov edx [ ecx ]
mov [ eax + 0xc ] edx
mov ecx [ ecx + 0x4 ]
mov dl [ ebp + 0x18 ]
mov [ eax + 0x10 ] ecx
mov [ eax + 0x14 ] dl
mov [ eax + 0x15 ] 0x0
pop ebp
retn 0x14
sub_409f80
push ebp
mov ebp esp
push 0xffffffff
push sub_41d1cc
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push 0x28
call [ sigc::internal::slot_rep::operator new@IAT ]
add esp 0x4
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
xor eax eax
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx eax
call sub_40b550
jmp r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_409ff0
push ebp
mov ebp esp
push 0xffffffff
push sub_41d1cc
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push 0x30
call [ sigc::internal::slot_rep::operator new@IAT ]
add esp 0x4
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
xor eax eax
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx eax
call sub_40b600
jmp r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_40a060
push esi
mov esi ecx
cmp [ esi + 0x88 ] 0x0
je r-xdata
mov eax [ esi + 0x4c ]
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
push 0x25
push eax
call [ UnregisterHotKey@IAT ]
mov [ esi + 0x88 ] 0x0
mov ecx [ esi + 0x98 ]
push ecx
call [ IsWindow@IAT ]
test eax eax
je r-xdata
push eax
call [ UnhookWindowsHookEx@IAT ]
mov [ esi + 0x4c ] 0x0
push 0x0
mov [ rw-data ] 0x0
call [ PostQuitMessage@IAT ]
pop esi
retn
mov edx [ esi + 0x98 ]
push edx
call [ DestroyWindow@IAT ]
sub_40a0d0
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
sub esp 0x10
push esi
mov esi ecx
push eax
lea ecx [ ebp - 0x10 ]
push ecx
call [ cui::Modifiers::FromBitfield@IAT ]
movzx edx [ ebp + 0x8 ]
mov eax 0x1
add esp 0x8
mov [ esi + 0x80 ] edx
mov [ esi + 0x84 ] 0x0
cmp [ ebp - 0x10 ] eax
jne r-xdata
cmp [ ebp - 0x8 ] eax
jne r-xdata
mov [ esi + 0x84 ] 0x2
cmp [ ebp - 0xc ] eax
jne r-xdata
or [ esi + 0x84 ] 0x4
cmp [ esi + 0x4c ] 0x0
je r-xdata
or [ esi + 0x84 ] eax
pop esi
mov esp ebp
pop ebp
retn 0x8
mov ecx esi
call sub_409b00
sub_40a140
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
mov ebx [ eax + 0x4 ]
push esi
push edi
mov edi [ eax ]
mov esi ecx
push 0x0
mov ecx ebx
push ecx
mov edx edi
push edx
call [ MonitorFromPoint@IAT ]
test eax eax
jne r-xdata
mov [ esi + 0x74 ] edi
mov [ esi + 0x78 ] ebx
mov edi [ esi + 0x74 ]
mov ebx [ esi + 0x78 ]
jmp r-xdata
cmp [ esi + 0x110 ] 0x0
jne r-xdata
cmp [ esi + 0x90 ] 0x0
je r-xdata
push ebx
push edi
lea eax [ esi + 0x60 ]
push eax
call [ PtInRect@IAT ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
mov eax [ esi + 0x98 ]
push eax
mov [ esi + 0x7c ] 0x0
call [ IsWindowVisible@IAT ]
test eax eax
je r-xdata
mov eax [ ebp + 0xc ]
cmp eax 0x200
jne r-xdata
mov ecx [ esi + 0x4 ]
push 0x26
push ecx
call [ KillTimer@IAT ]
mov [ esi + 0x90 ] 0x0
push ebx
push edi
lea ecx [ esi + 0x11c ]
push ecx
call [ PtInRect@IAT ]
test eax eax
je r-xdata
push eax
mov ecx esi
call sub_409c80
test al al
je r-xdata
mov edx [ esi + 0x98 ]
push edx
call [ IsWindowVisible@IAT ]
test eax eax
jne r-xdata
cmp [ esi + 0x8a ] 0x0
je r-xdata
mov ecx esi
call sub_409e80
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
mov ecx [ esi + 0x98 ]
push ecx
call [ IsWindowVisible@IAT ]
test eax eax
je r-xdata
cmp [ esi + 0x7c ] al
jne r-xdata
mov ecx esi
mov [ esi + 0x8a ] 0x0
call sub_409e50
call [ GetTickCount@IAT ]
cmp eax [ esi + 0x8c ]
jb r-xdata
mov edx [ esi + 0x98 ]
push 0x0
push edx
mov [ esi + 0x7c ] 0x1
call [ ShowWindow@IAT ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
mov ecx esi
call sub_409b70
mov eax [ esi + 0x4 ]
push 0x0
push 0x1
push 0x8000
push eax
call [ PostMessageW@IAT ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_40a290
push ebp
mov ebp esp
push esi
push edi
push 0x0
push r--data
mov edi ecx
call [ FindWindowW@IAT ]
test eax eax
jne r-xdata
push 0x0
push r--data
push 0x0
push eax
call [ FindWindowExW@IAT ]
mov esi eax
test esi esi
jne r-xdata
call [ GetLastError@IAT ]
push eax
push r--data
push r--data
call Ordinal_vmwarebase_4
add esp 0xc
xor eax eax
pop edi
pop esi
pop ebp
retn 0x10
pop edi
mov eax esi
pop esi
pop ebp
retn 0x10
call [ GetVersion@IAT ]
and eax 0xf
cmp al 0x6
jb r-xdata
call [ GetLastError@IAT ]
push eax
push r--data
push r--data
call Ordinal_vmwarebase_4
add esp 0xc
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
sub esp 0x10
mov eax esp
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] edx
mov edx [ ebp + 0x14 ]
mov [ eax + 0x8 ] ecx
mov ecx edi
mov [ eax + 0xc ] edx
call sub_409d90
mov esi eax
pop edi
pop esi
pop ebp
retn 0x10
sub_40a340
push ebp
mov ebp esp
push 0xffffffff
push sub_41b116
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax ecx
mov [ ebp - 0x10 ] eax
xor edx edx
lea ecx [ eax + 0x8 ]
mov [ eax + 0x4 ] edx
mov [ ebp - 0x14 ] ecx
mov [ ecx + 0xc ] edx
mov [ ebp - 0x4 ] 0x1
mov [ eax + 0x18 ] edx
mov [ eax + 0x1c ] edx
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_40a3a0
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x18 ]
push edi
mov edi [ _invalid_parameter_noinfo@IAT ]
mov edi edi
call edi
cmp eax [ ebp + 0x10 ]
je r-xdata
pop edi
pop esi
pop ebp
retn
inc [ esi ]
lea ecx [ ebp + 0x8 ]
call sub_402510
jmp r-xdata
mov eax [ ebp + 0xc ]
cmp eax [ ebp + 0x14 ]
je r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
sub_40a3e0
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
test ebx ebx
jge r-xdata
mov edx [ rw-data ]
mov eax [ edx + 0x4 ]
push esi
push edi
push eax
call [ IsWindow@IAT ]
mov esi [ ebp + 0x10 ]
mov edi [ ebp + 0xc ]
test eax eax
je r-xdata
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
push eax
push ecx
push ebx
push 0x0
call [ CallNextHookEx@IAT ]
pop ebx
pop ebp
retn 0xc
push esi
push edi
push ebx
push 0x0
call [ CallNextHookEx@IAT ]
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
mov ecx [ rw-data ]
push edi
push esi
call sub_40a140
sub_40a440
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
sub esp 0x8
sub eax 0x25
push esi
push edi
mov esi ecx
je r-xdata
mov edi [ FindWindowW@IAT ]
push 0x0
push r--data
call edi
test eax eax
jne r-xdata
sub eax 0x1
je r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
push eax
push r--data
call edi
test eax eax
jne r-xdata
cmp [ esi + 0x90 ] 0x0
je r-xdata
mov eax [ esi + 0x18 ]
pop edi
mov [ eax + 0x20 ] 0x0
pop esi
mov esp ebp
pop ebp
retn 0x4
push r--data
push r--data
call Ordinal_vmwarebase_2
mov ecx [ esi + 0x4 ]
add esp 0x8
push ecx
call [ DestroyWindow@IAT ]
lea edx [ ebp - 0x8 ]
push edx
call [ GetCursorPos@IAT ]
test eax eax
je r-xdata
mov ecx [ esi + 0x4 ]
push 0x26
push ecx
call [ KillTimer@IAT ]
mov [ esi + 0x90 ] 0x0
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov edi [ PtInRect@IAT ]
push eax
push ecx
lea edx [ esi + 0x11c ]
push edx
call edi
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
push eax
push ecx
lea edx [ esi + 0x60 ]
push edx
call edi
test eax eax
jne r-xdata
push eax
push eax
mov eax [ esi + 0x4 ]
push 0x8000
push eax
call [ PostMessageW@IAT ]
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_40a530
push ebp
mov ebp esp
sub esp 0x34
cmp [ ebp + 0x8 ] 0x25
push esi
mov esi ecx
je r-xdata
mov eax [ esi + 0x68 ]
add eax [ esi + 0x60 ]
push ebx
cdq
sub eax edx
push edi
mov edi eax
mov eax [ esi + 0x6c ]
add eax [ esi + 0x64 ]
push 0x4d
cdq
sub eax edx
mov ebx eax
xor eax eax
sar edi 0x1
sar ebx 0x1
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] eax
call [ GetSystemMetrics@IAT ]
neg eax
push 0x4c
mov [ ebp + 0x8 ] eax
call [ GetSystemMetrics@IAT ]
add ebx [ ebp + 0x8 ]
sub edi eax
mov [ ebp - 0x8 ] edi
fild [ ebp - 0x8 ]
mov edi [ GetSystemMetrics@IAT ]
push 0x4e
mov [ ebp - 0x4 ] ebx
fmul [ r--data ]
fstp [ ebp - 0x10 ]
call edi
mov [ ebp + 0x8 ] eax
fild [ ebp + 0x8 ]
push 0x4f
fdivr [ ebp - 0x10 ]
fstp [ ebp - 0x18 ]
fild [ ebp - 0x4 ]
fmul [ r--data ]
fstp [ ebp - 0x10 ]
call edi
mov [ ebp + 0x8 ] eax
fild [ ebp + 0x8 ]
mov [ ebp - 0x34 ] 0x0
fdivr [ ebp - 0x10 ]
fld [ ebp - 0x18 ]
call sub_419350
mov [ ebp - 0x30 ] eax
call sub_419350
push 0x1c
lea ecx [ ebp - 0x34 ]
push ecx
push 0x1
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x24 ] 0xc001
mov [ esi + 0x89 ] 0x1
call [ SendInput@IAT ]
pop edi
pop ebx
pop esi
mov esp ebp
pop ebp
retn 0xc
mov eax [ esi + 0x18 ]
mov [ eax + 0x20 ] 0x0
pop esi
mov esp ebp
pop ebp
retn 0xc
sub_40a620
push ebp
mov ebp esp
sub esp 0x4c
xor eax eax
push ebx
push esi
push edi
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x24 ]
push eax
push 0x5
mov esi ecx
mov [ ebp - 0x24 ] 0x24
call [ SHAppBarMessage@IAT ]
lea ecx [ ebp - 0x14 ]
push ecx
lea edi [ esi + 0x50 ]
push edi
call [ CopyRect@IAT ]
mov edx [ ebp - 0x18 ]
push 0x2
push edi
mov [ esi + 0x70 ] edx
call [ MonitorFromRect@IAT ]
xor ecx ecx
mov [ ebp - 0x48 ] ecx
mov [ ebp - 0x44 ] ecx
mov [ ebp - 0x40 ] ecx
mov [ ebp - 0x3c ] ecx
mov [ ebp - 0x38 ] ecx
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x28 ] ecx
lea ecx [ ebp - 0x4c ]
push ecx
push eax
mov [ ebp - 0x4c ] 0x28
call [ GetMonitorInfoW@IAT ]
test eax eax
je r-xdata
mov ecx [ edi ]
mov edx [ edi + 0x4 ]
sub esp 0x10
mov eax esp
mov [ eax ] ecx
mov ecx [ edi + 0x8 ]
mov [ eax + 0x4 ] edx
mov edx [ edi + 0xc ]
mov [ eax + 0x8 ] ecx
mov ecx esi
mov [ eax + 0xc ] edx
call sub_40a290
test eax eax
jne r-xdata
lea edx [ ebp - 0x48 ]
push edx
push edi
push edi
call [ IntersectRect@IAT ]
lea ebx [ esi + 0x60 ]
push ebx
push eax
call [ GetWindowRect@IAT ]
mov eax [ ebp - 0x18 ]
cmp eax 0x3
je r-xdata
mov eax [ edi ]
mov ecx [ edi + 0x4 ]
mov edx [ edi + 0x8 ]
mov [ esi + 0x60 ] eax
mov eax [ edi + 0xc ]
mov [ esi + 0x64 ] ecx
mov [ esi + 0x68 ] edx
mov [ esi + 0x6c ] eax
mov eax [ ebp - 0x18 ]
cmp eax 0x3
je r-xdata
mov ecx [ esi + 0x54 ]
mov edx [ esi + 0x5c ]
mov eax [ edi ]
pop edi
mov [ esi + 0x64 ] ecx
mov [ esi + 0x6c ] edx
pop esi
mov [ ebx ] eax
pop ebx
mov esp ebp
pop ebp
retn
cmp eax 0x1
je r-xdata
mov edx [ esi + 0x60 ]
add edx 0x40
mov [ esi + 0x68 ] edx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp eax 0x1
je r-xdata
mov ecx [ esi + 0x58 ]
mov edx [ esi + 0x54 ]
mov eax [ edi ]
mov [ esi + 0x68 ] ecx
mov [ esi + 0x64 ] edx
mov [ ebx ] eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ esi + 0x64 ]
add ecx 0x20
mov [ esi + 0x6c ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40a770
push ebp
mov ebp esp
push 0xffffffff
push sub_41b148
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
call sub_40a340
mov [ ebp - 0x4 ] 0x0
mov eax [ DefWindowProcW@IAT ]
mov [ esi + 0x20 ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
sub_40a7d0
push ebp
mov ebp esp
push 0xffffffff
push sub_41b170
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
push 0x18
call ??2@YAPAXI@Z
add esp 0x4
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
mov edx 0x1
mov [ ebp - 0x14 ] edx
lea ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
mov [ eax ] 0x0
mov [ ebp - 0x14 ] 0x2
lea ecx [ eax + 0x8 ]
test ecx ecx
je r-xdata
mov [ ecx ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
mov [ eax + 0x14 ] dl
mov [ eax + 0x15 ] 0x0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ecx ] 0x0
sub_40a880
push ebp
mov ebp esp
push 0xffffffff
push sub_41b1a1
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
push 0x18
call ??2@YAPAXI@Z
add esp 0x4
mov esi eax
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x4 ] 0x1
test esi esi
je r-xdata
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
mov eax [ ebp + 0x18 ]
push eax
mov ecx [ ebp + 0x14 ]
push ecx
mov edx [ ebp + 0x10 ]
push edx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx esi
call sub_409f40
sub_40a920
push ebp
mov ebp esp
push 0xffffffff
push sub_41b1d1
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
push 0x4
call ??2@YAPAXI@Z
add esp 0x4
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
xor eax eax
mov [ eax ] esi
jmp r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov [ esi ] eax
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_40a990
push ebp
mov ebp esp
push esi
mov esi [ _invalid_parameter_noinfo@IAT ]
push edi
xor edi edi
lea ecx [ ecx ]
call esi
mov eax [ ebp + 0x8 ]
cmp eax [ ebp + 0x10 ]
je r-xdata
mov eax edi
pop edi
pop esi
pop ebp
retn
test eax eax
jne r-xdata
mov ecx [ ebp + 0xc ]
cmp ecx [ ebp + 0x14 ]
je r-xdata
mov eax [ eax ]
jmp r-xdata
call esi
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp + 0xc ]
cmp edx [ eax + 0x18 ]
jne r-xdata
xor eax eax
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x10 ]
call sub_411260
test al al
je r-xdata
call esi
lea ecx [ ebp + 0x8 ]
call sub_402510
jmp r-xdata
inc edi
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
sub_40aa00
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x1
push ebx
push esi
mov esi ecx
mov al [ esi + 0x89 ]
sete bl
push edi
mov [ ebp + 0xc ] al
mov [ esi + 0x89 ] 0x0
test bl bl
jne r-xdata
call sub_4099c0
test al al
je r-xdata
mov edi [ esi + 0x98 ]
call [ GetForegroundWindow@IAT ]
cmp eax edi
jne r-xdata
movzx edi bl
neg edi
sbb edi edi
and edi 0xffff0000
add edi 0x90000
test bl bl
je r-xdata
mov ecx [ esi + 0x98 ]
test bl bl
je r-xdata
push 0x0
call [ SetFocus@IAT ]
mov eax [ esi + 0x98 ]
push eax
call [ IsWindowVisible@IAT ]
test eax eax
je r-xdata
mov edx [ esi + 0x98 ]
push edx
call [ IsWindowVisible@IAT ]
test eax eax
je r-xdata
push 0x0
push ecx
call [ ShowWindow@IAT ]
pop edi
pop esi
xor eax eax
pop ebx
pop ebp
retn 0xc
push 0x5
push ecx
call [ ShowWindow@IAT ]
cmp [ ebp + 0xc ] 0x0
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
pop ebp
retn 0xc
mov ecx esi
call sub_409ac0
mov ecx [ esi + 0x98 ]
push edi
push 0xc8
push ecx
call [ AnimateWindow@IAT ]
test bl bl
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
pop ebp
retn 0xc
mov eax [ ebp + 0xc ]
push eax
lea ecx [ esi + 0x94 ]
call sub_40eb70
pop edi
pop esi
xor eax eax
pop ebx
pop ebp
retn 0xc
mov edx [ esi + 0x98 ]
push edx
mov ecx esi
call sub_409cf0
mov ecx [ rw-data ]
push 0x0
push ecx
push sub_40a3e0
push 0xe
call [ SetWindowsHookExW@IAT ]
mov [ esi + 0x4c ] eax
test eax eax
je r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov ecx esi
call sub_409b00
mov eax [ ebp + 0xc ]
push eax
lea ecx [ esi + 0x94 ]
call sub_40eb70
mov edx [ esi + 0x98 ]
push edx
mov ecx esi
call sub_409cf0
sub_40ab50
push ebp
mov ebp esp
mov edx [ ecx + 0x18 ]
mov eax [ edx + 0x4 ]
cmp [ eax + 0x15 ] 0x0
push ebx
push esi
mov ebx edx
jne r-xdata
cmp [ edx + 0x15 ] 0x0
je r-xdata
mov esi [ ebp + 0xc ]
push edi
mov edi [ esi ]
lea esp [ esp ]
mov eax [ edx ]
mov eax [ ecx + 0x18 ]
mov eax [ eax + 0x4 ]
jmp r-xdata
cmp [ edx + 0x15 ] 0x0
je r-xdata
mov eax [ eax + 0x8 ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ecx ]
pop esi
mov [ eax + 0x4 ] ebx
mov [ eax ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] edx
pop ebx
pop ebp
retn 0x8
mov esi [ ebp + 0xc ]
mov esi [ esi ]
mov edi edi
cmp [ eax + 0x15 ] 0x0
jne r-xdata
mov ebx eax
mov eax [ eax ]
cmp edi esi
jge r-xdata
cmp [ eax + 0x15 ] 0x0
je r-xdata
mov eax [ eax + 0x8 ]
mov edx eax
mov eax [ eax ]
jmp r-xdata
mov esi [ eax + 0xc ]
cmp esi edi
jge r-xdata
pop edi
mov edx eax
cmp esi [ eax + 0xc ]
jge r-xdata
cmp [ eax + 0x15 ] 0x0
je r-xdata
sub_40abe0
push ebp
mov ebp esp
push 0xffffffff
push sub_41b1f9
mov eax [ fs : 0x0 ]
push eax
sub esp 0x44
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
cmp [ edi + 0x1c ] 0x1ffffffe
jb r-xdata
mov edx [ ebp + 0x14 ]
mov eax [ edi + 0x18 ]
mov esi [ ebp + 0x10 ]
push 0x0
push edx
push eax
push esi
push eax
call sub_40a880
mov ecx eax
mov eax [ edi + 0x18 ]
mov ebx 0x1
add [ edi + 0x1c ] ebx
mov [ ebp + 0x14 ] ecx
cmp esi eax
jne r-xdata
push r--data
lea ecx [ ebp - 0x28 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x28 ]
push eax
lea ecx [ ebp - 0x50 ]
call sub_402250
push r--data
lea ecx [ ebp - 0x50 ]
push ecx
call _CxxThrowException
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov [ eax + 0x4 ] ecx
mov eax [ edi + 0x18 ]
mov [ eax ] ecx
mov edx [ edi + 0x18 ]
mov [ edx + 0x8 ] ecx
jmp r-xdata
mov [ esi + 0x8 ] ecx
mov eax [ edi + 0x18 ]
cmp esi [ eax + 0x8 ]
jne r-xdata
mov [ esi ] ecx
mov eax [ edi + 0x18 ]
cmp esi [ eax ]
jne r-xdata
mov edx [ ecx + 0x4 ]
cmp [ edx + 0x14 ] 0x0
lea eax [ ecx + 0x4 ]
mov esi ecx
jne r-xdata
mov [ eax + 0x8 ] ecx
mov [ eax ] ecx
jmp r-xdata
mov eax [ edi + 0x18 ]
mov edx [ eax + 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ edx + 0x14 ] bl
mov [ eax + 0x4 ] ecx
mov ecx [ edi ]
mov [ eax ] ecx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
lea ecx [ ecx ]
mov edx [ edx ]
cmp [ edx + 0x14 ] 0x0
jne r-xdata
mov edx [ edx + 0x8 ]
cmp [ edx + 0x14 ] 0x0
jne r-xdata
cmp esi [ ecx ]
jne r-xdata
mov [ ecx + 0x14 ] bl
mov [ edx + 0x14 ] bl
mov edx [ eax ]
mov ecx [ edx + 0x4 ]
mov [ ecx + 0x14 ] 0x0
mov edx [ eax ]
mov esi [ edx + 0x4 ]
jmp r-xdata
cmp esi [ ecx + 0x8 ]
jne r-xdata
mov [ ecx + 0x14 ] bl
mov [ edx + 0x14 ] bl
mov edx [ eax ]
mov ecx [ edx + 0x4 ]
mov [ ecx + 0x14 ] 0x0
mov edx [ eax ]
mov esi [ edx + 0x4 ]
jmp r-xdata
mov eax [ esi + 0x4 ]
mov [ eax + 0x14 ] bl
mov ecx [ esi + 0x4 ]
mov edx [ ecx + 0x4 ]
mov [ edx + 0x14 ] 0x0
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x4 ]
push ecx
mov ecx edi
call sub_402be0
mov esi ecx
push esi
mov ecx edi
call sub_4024b0
mov edx [ esi + 0x4 ]
cmp [ edx + 0x14 ] 0x0
lea eax [ esi + 0x4 ]
je r-xdata
mov eax [ esi + 0x4 ]
mov [ eax + 0x14 ] bl
mov ecx [ esi + 0x4 ]
mov edx [ ecx + 0x4 ]
mov [ edx + 0x14 ] 0x0
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x4 ]
push ecx
mov ecx edi
call sub_4024b0
jmp r-xdata
mov esi ecx
push esi
mov ecx edi
call sub_402be0
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
cmp ecx [ edx ]
jne r-xdata
mov ecx [ ebp + 0x14 ]
sub_40ad90
push ebp
mov ebp esp
push 0xffffffff
push sub_41b828
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
push ecx
mov [ ebp - 0x14 ] esp
mov [ ebp - 0x14 ] esp
call sub_40a920
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_40ae10
push ebp
mov ebp esp
mov ecx [ ebp + 0x10 ]
mov edx [ ecx ]
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
push edx
mov edx [ ecx ]
mov ecx [ eax + 0x24 ]
add ecx [ eax + 0x1c ]
mov eax [ eax + 0x18 ]
push edx
call eax
pop ebp
retn
sub_40ae30
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
push edi
mov edi ecx
mov esi [ edi + 0x18 ]
mov eax [ esi + 0x4 ]
cmp [ eax + 0x15 ] 0x0
mov cl 0x1
mov [ ebp - 0x4 ] cl
jne r-xdata
mov edx [ edi ]
mov ebx esi
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0xc ] edx
test cl cl
je r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ecx ]
mov ecx [ ebx + 0xc ]
mov eax [ ebp + 0xc ]
cmp ecx [ eax ]
jge r-xdata
mov eax [ edi + 0x18 ]
mov ebx [ eax ]
test edx edx
je r-xdata
mov eax [ eax + 0x8 ]
mov eax [ eax ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
pop edi
pop esi
mov [ eax + 0x4 ] ebx
mov [ eax + 0x8 ] 0x0
mov [ eax ] edx
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov edx [ ebp - 0x4 ]
push eax
push esi
push edx
lea eax [ ebp - 0xc ]
push eax
mov ecx edi
call sub_40abe0
mov ecx eax
mov edx [ ecx ]
mov eax [ ebp + 0x8 ]
mov ecx [ ecx + 0x4 ]
pop edi
pop esi
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] 0x1
mov [ eax ] edx
pop ebx
mov esp ebp
pop ebp
retn 0x8
call [ _invalid_parameter_noinfo@IAT ]
cmp edx edx
je r-xdata
cmp edx [ eax + 0xc ]
mov esi eax
setl cl
mov [ ebp - 0x4 ] cl
test cl cl
je r-xdata
cmp [ eax + 0x15 ] 0x0
je r-xdata
lea ecx [ ebp - 0xc ]
call sub_409eb0
mov ebx [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
mov ecx [ ebp + 0xc ]
push ecx
push esi
push 0x1
lea edx [ ebp - 0xc ]
push edx
mov ecx edi
call sub_40abe0
mov ecx eax
mov edx [ ecx ]
mov eax [ ebp + 0x8 ]
mov ecx [ ecx + 0x4 ]
pop edi
pop esi
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] 0x1
mov [ eax ] edx
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp esi ebx
jne r-xdata
sub_40af40
push ebp
mov ebp esp
sub esp 0x10
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov esi ecx
push eax
lea ecx [ ebp - 0x10 ]
push ecx
mov ecx esi
call sub_40ab50
mov edi [ ebp - 0x4 ]
mov ebx [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
mov [ ebp + 0x8 ] 0x0
mov edx [ ebp + 0x8 ]
push edx
mov edx [ ebp - 0x10 ]
lea eax [ ebp + 0x8 ]
push eax
push edi
push ebx
push ecx
push edx
call sub_40a3a0
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x10 ]
add esp 0x18
push edi
push ebx
push eax
push ecx
lea edx [ ebp - 0x8 ]
push edx
mov ecx esi
call sub_406cc0
mov eax [ ebp + 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_40afb0
push ebp
mov ebp esp
sub esp 0x14
push esi
mov esi ecx
cmp [ esi + 0x1c ] 0x0
push edi
jne r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ esi + 0x18 ]
mov edi [ edx ]
mov eax [ esi ]
push ebx
mov ebx [ _invalid_parameter_noinfo@IAT ]
test ecx ecx
je r-xdata
mov eax [ ebp + 0x14 ]
mov ecx [ esi + 0x18 ]
mov edi [ ebp + 0x8 ]
push eax
push ecx
push 0x1
push edi
mov ecx esi
call sub_40abe0
mov eax edi
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x10
call ebx
mov ecx [ ebp + 0xc ]
cmp ecx eax
je r-xdata
mov edi [ esi + 0x18 ]
mov edx [ esi ]
test ecx ecx
je r-xdata
mov edi [ ebp + 0x14 ]
mov ecx [ edi ]
cmp ecx [ eax + 0xc ]
jge r-xdata
mov eax [ ebp + 0x10 ]
cmp eax edi
jne r-xdata
call ebx
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
cmp ecx edx
je r-xdata
push edi
lea eax [ ebp - 0x14 ]
push eax
mov ecx esi
call sub_40ae30
mov edx [ eax ]
mov ecx [ ebp + 0x8 ]
pop ebx
mov [ ecx ] edx
mov eax [ eax + 0x4 ]
pop edi
mov [ ecx + 0x4 ] eax
mov eax ecx
pop esi
mov esp ebp
pop ebp
retn 0x10
push edi
mov edi [ ebp + 0x8 ]
push eax
push 0x1
push edi
mov ecx esi
call sub_40abe0
pop ebx
mov eax edi
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x10
mov edx [ edi ]
cmp [ eax + 0xc ] edx
jle r-xdata
mov edx [ esi + 0x18 ]
mov eax [ edx + 0x8 ]
mov ecx [ eax + 0xc ]
cmp ecx [ edi ]
jge r-xdata
cmp eax edi
mov edi [ ebp + 0x14 ]
jne r-xdata
jge r-xdata
mov [ ebp - 0x8 ] ecx
lea ecx [ ebp - 0x8 ]
mov [ ebp - 0x4 ] eax
call sub_409eb0
mov edx [ edi ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xc ] edx
jge r-xdata
push edi
mov edi [ ebp + 0x8 ]
push eax
push 0x0
push edi
mov ecx esi
call sub_40abe0
pop ebx
mov eax edi
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x10
mov edx [ esi ]
mov [ ebp - 0x8 ] ecx
mov ecx [ esi + 0x18 ]
mov [ ebp - 0xc ] ecx
lea ecx [ ebp - 0x8 ]
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x10 ] edx
call sub_402510
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x8 ]
call sub_402220
mov ecx [ ebp - 0x4 ]
test al al
jne r-xdata
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
cmp [ eax + 0xc ] edx
mov edx [ eax + 0x8 ]
cmp [ edx + 0x15 ] 0x0
push edi
mov edi [ ebp + 0x8 ]
mov ecx esi
je r-xdata
mov eax [ ebp + 0x10 ]
mov edx [ eax + 0x8 ]
cmp [ edx + 0x15 ] 0x0
push edi
mov edi [ ebp + 0x8 ]
je r-xdata
mov edx [ edi ]
cmp edx [ ecx + 0xc ]
jge r-xdata
mov eax [ ebp + 0x10 ]
push eax
push 0x1
push edi
call sub_40abe0
pop ebx
mov eax edi
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x10
push eax
push 0x0
push edi
call sub_40abe0
pop ebx
mov eax edi
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x10
push ecx
push 0x1
push edi
mov ecx esi
call sub_40abe0
pop ebx
mov eax edi
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x10
push eax
push 0x0
push edi
mov ecx esi
call sub_40abe0
pop ebx
mov eax edi
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x10
sub_40b170
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov eax [ esi + 0x44 ]
mov ecx [ esi + 0x2c ]
mov [ ebp - 0x4 ] 0x0
mov ebx [ ebp - 0x4 ]
push ebx
push eax
mov edx eax
mov edx [ edx ]
push ecx
mov edi ecx
push edx
push edi
call sub_40a990
add esp 0x14
test eax eax
jg r-xdata
cmp [ esi + 0x4c ] 0x0
jne r-xdata
xor ebx ebx
cmp [ esi + 0x88 ] bl
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ rw-data ]
push 0x0
push ecx
push sub_40a3e0
push 0xe
call [ SetWindowsHookExW@IAT ]
mov [ esi + 0x4c ] eax
test eax eax
je r-xdata
mov eax [ esi + 0x4c ]
cmp eax ebx
je r-xdata
mov eax [ esi + 0x4 ]
push 0x25
push eax
call [ UnregisterHotKey@IAT ]
mov [ esi + 0x88 ] bl
mov ecx esi
call sub_409b00
push eax
call [ UnhookWindowsHookEx@IAT ]
pop edi
mov [ esi + 0x4c ] ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40b210
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
mov edi ecx
mov ecx [ edi + 0x18 ]
mov eax [ ecx + 0x4 ]
cmp [ eax + 0x15 ] 0x0
mov [ ebp - 0x4 ] ecx
jne r-xdata
mov esi [ edi ]
mov eax [ edi + 0x18 ]
mov ebx ecx
mov [ ebp - 0xc ] eax
test esi esi
je r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ edx ]
nop
call [ _invalid_parameter_noinfo@IAT ]
mov ecx [ ebp - 0x4 ]
cmp esi esi
je r-xdata
mov ecx eax
mov eax [ eax ]
mov eax [ eax + 0x8 ]
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
lea eax [ ebp - 0x8 ]
push eax
push ebx
push esi
lea ecx [ ebp - 0x10 ]
push ecx
mov ecx edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] 0x0
call sub_40afb0
mov esi [ eax ]
mov ebx [ eax + 0x4 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
cmp eax [ ecx + 0xc ]
jge r-xdata
cmp ecx [ ebp - 0xc ]
je r-xdata
cmp [ eax + 0xc ] edx
jge r-xdata
mov [ ebp - 0x4 ] ecx
cmp [ eax + 0x15 ] 0x0
je r-xdata
mov esi [ esi ]
jmp r-xdata
call [ _invalid_parameter_noinfo@IAT ]
test esi esi
jne r-xdata
cmp ebx [ esi + 0x18 ]
jne r-xdata
pop edi
pop esi
lea eax [ ebx + 0x10 ]
pop ebx
mov esp ebp
pop ebp
retn 0x4
call [ _invalid_parameter_noinfo@IAT ]
sub_40b2c0
push ebp
mov ebp esp
sub esp 0x10
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ecx
push edi
mov ecx ebx
call sub_411230
push eax
push r--data
push r--data
call Ordinal_vmwarebase_2
mov eax [ esi + 0x98 ]
add esp 0xc
push eax
call [ IsWindowVisible@IAT ]
test eax eax
je r-xdata
mov ecx ebx
call sub_411230
lea edx [ ebp + 0x8 ]
mov [ ebp + 0x8 ] eax
push edx
lea eax [ ebp - 0x10 ]
lea edi [ esi + 0x2c ]
push eax
mov ecx edi
call sub_40ab50
mov eax [ ebp - 0x4 ]
mov [ ebp + 0x8 ] 0x0
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x8 ]
lea edx [ ebp + 0x8 ]
push edx
mov edx [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x10 ]
push ecx
push edx
push eax
call sub_40a3a0
add esp 0x18
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov ecx [ esi + 0x98 ]
push 0x0
push ecx
call [ ShowWindow@IAT ]
mov ecx esi
call sub_40b170
cmp [ esi + 0x48 ] 0x0
jne r-xdata
mov ecx ebx
call sub_411230
lea ecx [ ebp + 0x8 ]
push ecx
mov ecx edi
mov [ ebp + 0x8 ] eax
call sub_40af40
push edi
lea ecx [ esi + 0x94 ]
call sub_410830
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
push r--data
push r--data
call Ordinal_vmwarebase_2
mov edx [ esi + 0x4 ]
add esp 0x8
push 0x0
push 0x0
push 0x10
push edx
call [ PostMessageW@IAT ]
sub_40b3b0
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
mov ecx edi
call sub_411260
movzx eax al
push eax
mov ecx edi
call sub_411230
push eax
push r--data
push r--data
call Ordinal_vmwarebase_2
mov ecx [ esi + 0x98 ]
add esp 0x10
push ecx
call [ IsWindowVisible@IAT ]
test eax eax
je r-xdata
lea eax [ esi + 0x2c ]
push eax
lea ecx [ esi + 0x94 ]
call sub_410830
mov ecx esi
call sub_40b170
mov ecx edi
call sub_411260
test al al
je r-xdata
mov edx [ esi + 0x98 ]
push 0x0
push edx
call [ ShowWindow@IAT ]
pop edi
pop esi
pop ebp
retn 0x4
mov [ esi + 0x8a ] 0x1
call [ GetTickCount@IAT ]
add eax 0x1388
mov ecx esi
mov [ esi + 0x8c ] eax
call sub_409b70
mov ecx [ esi + 0x4 ]
push 0x0
push 0x1
push 0x8000
push ecx
call [ PostMessageW@IAT ]
sub_40b460
push esi
mov esi ecx
mov eax [ esi + 0x98 ]
push eax
call [ IsWindowVisible@IAT ]
test eax eax
je r-xdata
lea edx [ esi + 0x2c ]
push edx
lea ecx [ esi + 0x94 ]
call sub_410830
mov ecx esi
pop esi
jmp sub_40b170
mov ecx [ esi + 0x98 ]
push 0x0
push ecx
call [ ShowWindow@IAT ]
sub_40b4a0
push ebp
mov ebp esp
push 0xffffffff
push sub_41c338
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov eax [ ebp + 0x8 ]
push ecx
mov [ ebp - 0x14 ] esp
mov [ ebp - 0x14 ] esp
push eax
call sub_413570
mov [ ebp - 0x4 ] 0x0
mov ecx esi
call sub_40a7d0
mov [ esi + 0x18 ] eax
mov [ eax + 0x15 ] 0x1
mov eax [ esi + 0x18 ]
mov [ eax + 0x4 ] eax
mov eax [ esi + 0x18 ]
mov [ eax ] eax
mov eax [ esi + 0x18 ]
mov [ eax + 0x8 ] eax
mov [ esi + 0x1c ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_40b550
push ebp
mov ebp esp
push 0xffffffff
push sub_41ac32
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov edi [ ebp + 0x8 ]
mov ebx [ edi + 0x4 ]
call [ sigc::trackable::trackable@IAT ]
xor eax eax
mov [ ebp - 0x4 ] eax
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] sub_40b530
mov [ esi + 0xc ] sub_409f80
mov [ esi + 0x10 ] eax
mov [ esi + 0x14 ] eax
mov [ ebp - 0x4 ] 0x1
mov ecx [ edi + 0x18 ]
lea eax [ edi + 0x18 ]
mov [ esi + 0x18 ] ecx
mov edx [ eax + 0x4 ]
mov [ esi + 0x1c ] edx
mov ecx [ eax + 0x8 ]
mov [ esi + 0x20 ] ecx
mov edx [ eax + 0xc ]
mov eax [ sigc::internal::slot_rep::notify@IAT ]
push eax
mov [ esi + 0x24 ] edx
mov ecx [ esi + 0x20 ]
push esi
call [ sigc::trackable::add_destroy_notify_callback@IAT ]
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_40b600
push ebp
mov ebp esp
push 0xffffffff
push sub_41ac32
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov edi [ ebp + 0x8 ]
mov ebx [ edi + 0x4 ]
call [ sigc::trackable::trackable@IAT ]
xor eax eax
mov [ ebp - 0x4 ] eax
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] sub_40b530
mov [ esi + 0xc ] sub_409ff0
mov [ esi + 0x10 ] eax
mov [ esi + 0x14 ] eax
mov [ ebp - 0x4 ] 0x1
mov eax [ edi + 0x18 ]
mov [ esi + 0x18 ] eax
mov ecx [ edi + 0x1c ]
mov [ esi + 0x1c ] ecx
mov edx [ edi + 0x20 ]
mov [ esi + 0x20 ] edx
mov eax [ edi + 0x24 ]
mov [ esi + 0x24 ] eax
mov ecx [ edi + 0x28 ]
mov eax [ sigc::internal::slot_rep::notify@IAT ]
mov [ esi + 0x28 ] ecx
mov edx [ edi + 0x2c ]
push eax
mov [ esi + 0x2c ] edx
mov ecx [ esi + 0x20 ]
push esi
call [ sigc::trackable::add_destroy_notify_callback@IAT ]
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_40b6b0
push ebp
mov ebp esp
push 0xffffffff
push sub_41b228
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x14 ] esi
lea eax [ ebp - 0xd ]
push eax
lea ecx [ ebp - 0xd ]
push ecx
mov ecx esi
call sub_40b4a0
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
sub_40b710
push ebp
mov ebp esp
push 0xffffffff
push sub_41ad12
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
call [ sigc::trackable::trackable@IAT ]
xor eax eax
mov [ ebp - 0x4 ] eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] sub_40b530
mov [ esi + 0xc ] sub_409f80
mov [ esi + 0x10 ] eax
mov [ esi + 0x14 ] eax
mov [ ebp - 0x4 ] 0x1
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ esi + 0x18 ] ecx
mov edx [ eax + 0x4 ]
mov [ esi + 0x1c ] edx
mov ecx [ eax + 0x8 ]
mov [ esi + 0x20 ] ecx
mov edx [ eax + 0xc ]
mov eax [ sigc::internal::slot_rep::notify@IAT ]
push eax
mov [ esi + 0x24 ] edx
mov ecx [ esi + 0x20 ]
push esi
call [ sigc::trackable::add_destroy_notify_callback@IAT ]
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_40b7b0
push ebp
mov ebp esp
push 0xffffffff
push sub_41ad12
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
call [ sigc::trackable::trackable@IAT ]
xor eax eax
mov [ ebp - 0x4 ] eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] sub_40b530
mov [ esi + 0xc ] sub_409ff0
mov [ esi + 0x10 ] eax
mov [ esi + 0x14 ] eax
mov [ ebp - 0x4 ] 0x1
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ esi + 0x18 ] ecx
mov edx [ eax + 0x4 ]
mov [ esi + 0x1c ] edx
mov ecx [ eax + 0x8 ]
mov [ esi + 0x20 ] ecx
mov edx [ eax + 0xc ]
mov [ esi + 0x24 ] edx
mov ecx [ eax + 0x10 ]
mov [ esi + 0x28 ] ecx
mov edx [ eax + 0x14 ]
mov eax [ sigc::internal::slot_rep::notify@IAT ]
push eax
mov [ esi + 0x2c ] edx
mov ecx [ esi + 0x20 ]
push esi
call [ sigc::trackable::add_destroy_notify_callback@IAT ]
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_40b860
push ebp
mov ebp esp
push 0xffffffff
push sub_41b285
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
call sub_40a770
mov [ ebp - 0x4 ] 0x1
lea ecx [ esi + 0x24 ]
call [ sigc::trackable::trackable@IAT ]
mov [ ebp - 0x4 ] 0x2
mov eax [ ebp + 0x8 ]
lea ecx [ esi + 0x2c ]
mov [ esi ] r--data
mov [ esi + 0x28 ] eax
call sub_40b6b0
mov [ ebp - 0x4 ] 0x3
xor ebx ebx
lea ecx [ esi + 0x94 ]
mov [ esi + 0x4c ] ebx
mov [ esi + 0x7c ] bl
mov [ esi + 0x80 ] 0x55
mov [ esi + 0x84 ] 0x6
mov [ esi + 0x88 ] bl
mov [ esi + 0x89 ] bl
mov [ esi + 0x8a ] bl
mov [ esi + 0x8c ] ebx
mov [ esi + 0x90 ] bl
call sub_40f840
mov [ ebp - 0x4 ] 0x4
mov edi [ SetRectEmpty@IAT ]
lea ecx [ esi + 0x50 ]
push ecx
mov [ esi + 0x78 ] ebx
mov [ esi + 0x74 ] ebx
call edi
lea edx [ esi + 0x60 ]
push edx
call edi
lea eax [ esi + 0x11c ]
push eax
call edi
mov [ rw-data ] esi
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_40b960
push ebp
mov ebp esp
sub esp 0x24
mov ecx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x14 ]
push esi
mov esi [ ebp + 0x8 ]
mov edx [ esi + 0x18 ]
mov eax [ esi + 0x4 ]
push edi
mov edi [ ebp + 0x10 ]
mov [ ebp - 0x20 ] ecx
xor ecx ecx
push ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x10 ] ecx
lea ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp + 0xc ]
mov [ ebp + 0x10 ] edx
push ebx
lea edx [ ebp - 0x24 ]
push edi
mov [ esi + 0x18 ] edx
mov edx [ esi ]
mov edx [ edx ]
push ecx
push eax
mov ecx esi
mov [ ebp - 0x8 ] 0x24
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x18 ] ebx
call edx
test eax eax
jne r-xdata
mov eax [ esi + 0x1c ]
test al 0x1
je r-xdata
mov eax [ ebp + 0xc ]
cmp eax 0x82
je r-xdata
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0x8 ]
pop edi
mov [ esi + 0x18 ] ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
xor edx edx
cmp [ ebp + 0x10 ] edx
jne r-xdata
mov eax [ esi + 0x4 ]
push 0xfffffffc
push eax
call [ GetWindowLongW@IAT ]
mov edx [ esi + 0x4 ]
push ebx
push edi
push 0x82
mov [ ebp + 0xc ] eax
mov eax [ esi + 0x20 ]
push edx
push eax
call [ CallWindowProcW@IAT ]
mov ecx [ esi + 0x20 ]
mov [ ebp + 0x8 ] eax
cmp ecx [ DefWindowProcW@IAT ]
je r-xdata
mov ecx [ esi + 0x20 ]
push ebx
push edi
push eax
mov eax [ esi + 0x4 ]
push eax
push ecx
call [ CallWindowProcW@IAT ]
mov [ ebp + 0x8 ] eax
jmp r-xdata
mov ecx [ esi + 0x4 ]
and eax 0xfffffffe
mov [ esi + 0x4 ] edx
mov [ esi + 0x18 ] edx
mov edx [ esi ]
mov [ esi + 0x1c ] eax
mov eax [ edx + 0xc ]
push ecx
mov ecx esi
call eax
mov eax [ ebp + 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
or [ esi + 0x1c ] 0x1
mov eax [ esi + 0x4 ]
push 0xfffffffc
push eax
call [ GetWindowLongW@IAT ]
cmp eax [ ebp + 0xc ]
jne r-xdata
mov edx [ esi + 0x20 ]
mov eax [ esi + 0x4 ]
push edx
push 0xfffffffc
push eax
call [ SetWindowLongW@IAT ]
sub_40ba90
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_407100
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call ??3@YAXPAX@Z
add esp 0x4
sub_40bac0
push ebp
mov ebp esp
push 0xffffffff
push sub_41d205
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
push 0x28
call [ sigc::internal::slot_rep::operator new@IAT ]
add esp 0x4
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
xor eax eax
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx eax
call sub_40b710
jmp r-xdata
mov [ ebp - 0x4 ] 0xffffffff
push eax
mov ecx esi
call [ sigc::slot_base::slot_base@IAT ]
mov [ ebp - 0x4 ] 0x1
mov edx [ esi ]
mov [ edx + 0x4 ] sub_40adf0
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_40bb50
push ebp
mov ebp esp
push 0xffffffff
push sub_41d205
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
push 0x28
call [ sigc::internal::slot_rep::operator new@IAT ]
add esp 0x4
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
xor eax eax
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx eax
call sub_40b710
jmp r-xdata
mov [ ebp - 0x4 ] 0xffffffff
push eax
mov ecx esi
call [ sigc::slot_base::slot_base@IAT ]
mov [ ebp - 0x4 ] 0x1
mov edx [ esi ]
mov [ edx + 0x4 ] sub_40e7f0
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_40bbe0
push ebp
mov ebp esp
push 0xffffffff
push sub_41d205
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
push 0x28
call [ sigc::internal::slot_rep::operator new@IAT ]
add esp 0x4
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
xor eax eax
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx eax
call sub_40b710
jmp r-xdata
mov [ ebp - 0x4 ] 0xffffffff
push eax
mov ecx esi
call [ sigc::slot_base::slot_base@IAT ]
mov [ ebp - 0x4 ] 0x1
mov edx [ esi ]
mov [ edx + 0x4 ] sub_40ae10
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_40bc70
push ebp
mov ebp esp
push 0xffffffff
push sub_41d205
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
push 0x30
call [ sigc::internal::slot_rep::operator new@IAT ]
add esp 0x4
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
xor eax eax
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx eax
call sub_40b7b0
jmp r-xdata
mov [ ebp - 0x4 ] 0xffffffff
push eax
mov ecx esi
call [ sigc::slot_base::slot_base@IAT ]
mov [ ebp - 0x4 ] 0x1
mov edx [ esi ]
mov [ edx + 0x4 ] sub_40af20
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_40bd00
push ebp
mov ebp esp
push 0xffffffff
push sub_41d288
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov eax [ ebp + 0x8 ]
push eax
call sub_40bac0
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_40bd50
push ebp
mov ebp esp
push 0xffffffff
push sub_41d288
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov eax [ ebp + 0x8 ]
push eax
call sub_40bb50
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_40bda0
push ebp
mov ebp esp
push 0xffffffff
push sub_41d288
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov eax [ ebp + 0x8 ]
push eax
call sub_40bbe0
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_40bdf0
push ebp
mov ebp esp
push 0xffffffff
push sub_41b2e2
mov eax [ fs : 0x0 ]
push eax
sub esp 0x28
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov edi [ ebp + 0x8 ]
mov ecx edi
call sub_411230
push eax
push r--data
push r--data
call Ordinal_vmwarebase_2
mov eax [ esi + 0x48 ]
add esp 0xc
test eax eax
jne r-xdata
mov ecx [ esi + 0x98 ]
push ecx
call [ IsWindowVisible@IAT ]
test eax eax
je r-xdata
push eax
mov eax [ esi + 0x4 ]
push 0x1388
push 0x25
push eax
call [ SetTimer@IAT ]
mov ecx edi
call sub_411230
mov [ ebp + 0x8 ] eax
lea eax [ ebp + 0x8 ]
lea ebx [ esi + 0x2c ]
push eax
mov ecx ebx
call sub_40b210
push ebx
lea ecx [ esi + 0x94 ]
mov [ eax ] edi
call sub_410830
xor ecx ecx
mov [ ebp - 0x30 ] ecx
lea ecx [ ebp - 0x34 ]
mov eax sub_40b3b0
push ecx
lea ebx [ esi + 0x24 ]
lea ecx [ ebp - 0x14 ]
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x28 ] esi
mov [ ebp - 0x24 ] edi
call sub_40bc70
mov [ ebp - 0x4 ] 0x1
lea edx [ ebp - 0x14 ]
push edx
lea eax [ ebp - 0x1c ]
push eax
lea ecx [ edi + 0x20 ]
call [ sigc::signal_base::connect@IAT ]
mov eax [ ebp - 0x14 ]
test eax eax
je r-xdata
mov edx [ esi + 0x98 ]
push 0x0
push edx
call [ ShowWindow@IAT ]
xor ecx ecx
mov [ ebp - 0x28 ] ecx
lea ecx [ ebp - 0x2c ]
mov eax sub_40b460
push ecx
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x20 ] esi
call sub_40bb50
mov [ ebp - 0x4 ] 0x3
lea edx [ ebp - 0x1c ]
push edx
lea eax [ ebp - 0x24 ]
push eax
lea ecx [ edi + 0x8 ]
call [ sigc::signal_base::connect@IAT ]
mov [ ebp - 0x4 ] 0x1
mov edi [ sigc::slot_base::~slot_base@IAT ]
lea ecx [ ebp - 0x1c ]
call edi
mov ecx esi
call sub_40b170
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
push eax
call ecx
add esp 0x4
sub_40bf70
push ebp
mov ebp esp
push 0xffffffff
push sub_41b364
mov eax [ fs : 0x0 ]
push eax
sub esp 0x18
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov eax [ esi + 0x28 ]
push eax
push 0x0
lea ecx [ esi + 0x94 ]
call sub_410c80
test eax eax
jne r-xdata
mov ecx esi
call sub_40a620
xor ecx ecx
mov [ ebp - 0x20 ] ecx
lea ecx [ ebp - 0x24 ]
mov eax sub_40bdf0
push ecx
lea edi [ esi + 0x24 ]
lea ecx [ ebp - 0x14 ]
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x18 ] esi
call sub_40bd00
mov [ ebp - 0x4 ] 0x0
mov ecx [ esi + 0x28 ]
mov ebx [ sigc::signal_base::connect@IAT ]
lea edx [ ebp - 0x14 ]
push edx
lea eax [ ebp - 0x1c ]
add ecx 0xc
push eax
call ebx
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call [ sigc::slot_base::~slot_base@IAT ]
xor ecx ecx
mov [ ebp - 0x20 ] ecx
lea ecx [ ebp - 0x24 ]
mov eax sub_40b2c0
push ecx
lea ecx [ ebp - 0x14 ]
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x18 ] esi
call sub_40bd00
mov [ ebp - 0x4 ] 0x3
mov ecx [ esi + 0x28 ]
lea edx [ ebp - 0x14 ]
push edx
lea eax [ ebp - 0x1c ]
add ecx 0x14
push eax
call ebx
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call [ sigc::slot_base::~slot_base@IAT ]
xor ecx ecx
mov [ ebp - 0x20 ] ecx
lea ecx [ ebp - 0x24 ]
mov eax sub_409a70
push ecx
lea ecx [ ebp - 0x14 ]
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x18 ] esi
call sub_40bd50
mov [ ebp - 0x4 ] 0x6
mov ecx [ esi + 0x28 ]
lea edx [ ebp - 0x14 ]
push edx
lea eax [ ebp - 0x1c ]
add ecx 0x1c
push eax
call ebx
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call [ sigc::slot_base::~slot_base@IAT ]
mov eax sub_40a0d0
xor ecx ecx
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x1c ] edi
lea ecx [ ebp - 0x24 ]
push ecx
lea ecx [ ebp - 0x14 ]
mov [ ebp - 0x18 ] esi
call sub_40bda0
mov [ ebp - 0x4 ] 0x9
mov esi [ esi + 0x28 ]
lea edx [ ebp - 0x14 ]
push edx
lea eax [ ebp - 0x1c ]
add esi 0x24
push eax
mov ecx esi
call ebx
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call [ sigc::slot_base::~slot_base@IAT ]
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
push r--data
push r--data
call Ordinal_vmwarebase_2
add esp 0x8
or eax 0xffffffff
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_40c120
push ebp
mov ebp esp
cmp [ ebp + 0x1c ] 0x0
push esi
push edi
mov esi ecx
jne r-xdata
pop edi
xor eax eax
pop esi
pop ebp
retn 0x18
mov eax [ ebp + 0xc ]
mov edi 0x1
cmp eax edi
jne r-xdata
cmp eax 0x1a
jne r-xdata
mov ecx [ ebp + 0x14 ]
mov eax [ esi + 0x18 ]
push ecx
mov ecx esi
mov [ eax + 0x20 ] edi
call sub_40bf70
mov edx [ ebp + 0x18 ]
mov [ edx ] eax
mov eax [ esi + 0x18 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
cmp eax 0x8000
jne r-xdata
mov ecx [ esi + 0x18 ]
mov [ ecx + 0x20 ] edi
mov ecx esi
call sub_40a620
mov eax edi
pop edi
pop esi
pop ebp
retn 0x18
cmp eax 0x2
jne r-xdata
mov edx [ ebp + 0x14 ]
mov ecx [ esi + 0x18 ]
mov eax [ ebp + 0x10 ]
push edx
push eax
mov [ ecx + 0x20 ] edi
push 0x8000
mov ecx esi
call sub_40aa00
mov ecx [ ebp + 0x18 ]
mov [ ecx ] eax
mov edx [ esi + 0x18 ]
cmp [ edx + 0x20 ] 0x0
je r-xdata
mov eax edi
pop edi
pop esi
pop ebp
retn 0x18
cmp eax 0x113
jne r-xdata
mov eax [ esi + 0x18 ]
mov [ eax + 0x20 ] edi
call sub_40a060
mov ecx [ ebp + 0x18 ]
mov [ ecx ] 0x0
mov edx [ esi + 0x18 ]
cmp [ edx + 0x20 ] 0x0
je r-xdata
mov eax edi
pop edi
pop esi
pop ebp
retn 0x18
cmp eax 0x312
jne r-xdata
mov ecx [ ebp + 0x10 ]
mov eax [ esi + 0x18 ]
push ecx
mov ecx esi
mov [ eax + 0x20 ] edi
call sub_40a440
jmp r-xdata
mov eax edi
pop edi
pop esi
pop ebp
retn 0x18
mov eax [ ebp + 0x14 ]
mov ecx [ esi + 0x18 ]
mov edx eax
shr edx 0x10
movzx eax ax
push edx
mov [ ecx + 0x20 ] edi
mov ecx [ ebp + 0x10 ]
push eax
push ecx
mov ecx esi
call sub_40a530
jmp r-xdata
mov edx [ ebp + 0x18 ]
mov [ edx ] 0x0
mov eax [ esi + 0x18 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
sub_40c250
push ebp
mov ebp esp
push 0xffffffff
push sub_41b3a8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x14 ] esi
cmp [ ebp + 0x8 ] 0x0
mov [ ebp - 0x10 ] 0x0
je r-xdata
push 0x0
mov ecx esi
call sub_415750
mov [ ebp - 0x4 ] 0x1
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
lea ecx [ esi + 0x90 ]
mov [ esi + 0x4 ] r--data
call [ sigc::trackable::trackable@IAT ]
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x10 ] 0x1
sub_40c2e0
push ebp
mov ebp esp
push 0xffffffff
push sub_41b3db
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
xor ebx ebx
cmp [ edi + 0x2c ] ebx
jne r-xdata
mov ecx edi
call [ cui::ipc::Dispatch::GetControl@IAT ]
test eax eax
jne r-xdata
call [ wui::ipc::CreateServerConnection@IAT ]
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebx + 0x14 ]
mov ecx [ eax + 0xc ]
mov eax [ ebp + 0xc ]
mov edx [ ecx + ebx + 0x14 ]
mov edx [ edx ]
lea ecx [ ecx + ebx + 0x14 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call edx
test al al
jne r-xdata
push 0x54
call ??2@YAPAXI@Z
mov esi eax
add esp 0x4
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
mov [ edi + 0x2c ] eax
mov eax [ ebx + 0x14 ]
mov ecx [ eax + 0x8 ]
lea eax [ ecx + ebx + 0x14 ]
mov ecx edi
call sub_414890
mov al 0x1
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
push r--data
push r--data
call Ordinal_vmwarebase_2
add esp 0x8
xor al al
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
xor esi esi
mov edx [ edi + 0x2c ]
push 0x1
push edx
mov ecx esi
call [ cui::ipc::Control::Control@IAT ]
mov [ esi ] r--data
jmp r-xdata
mov [ ebp - 0x4 ] 0xffffffff
push esi
mov ecx edi
call [ cui::ipc::Dispatch::SetControl@IAT ]
sub_40c3e0
push ebp
mov ebp esp
push esi
mov esi ecx
call [ cui::ipc::Control::~Control@IAT ]
lea ecx [ esi + 0x50 ]
call [ sigc::trackable::~trackable@IAT ]
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call ??3@YAXPAX@Z
add esp 0x4
sub_40c420
push ebp
mov ebp esp
push 0xffffffff
push sub_41b408
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0xffffffff
call sub_4153d0
lea ecx [ esi + 0x90 ]
call [ sigc::trackable::~trackable@IAT ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
sub_40c490
push ebp
mov ebp esp
push 0xffffffff
push sub_41b439
mov eax [ fs : 0x0 ]
push eax
sub esp 0x44
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push r--data
lea ecx [ ebp - 0x28 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x28 ]
push eax
lea ecx [ ebp - 0x50 ]
call sub_402250
push r--data
lea ecx [ ebp - 0x50 ]
push ecx
call _CxxThrowException
sub_40c4f0
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_40c420
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call ??3@YAXPAX@Z
add esp 0x4
sub_40c520
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
cmp eax ecx
je r-xdata
pop ebp
retn
mov edx [ ebp + 0x10 ]
push esi
mov si [ edx ]
mov [ eax ] si
add eax 0x2
cmp eax ecx
jne r-xdata
pop esi
sub_40c550
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
sub eax edx
sar eax 0x1
push esi
mov esi [ ebp + 0x10 ]
lea ecx [ eax + eax ]
sub esi ecx
test eax eax
jle r-xdata
mov eax esi
pop esi
pop ebp
retn
push ecx
push edx
push ecx
push esi
call [ memmove_s@IAT ]
add esp 0x10
sub_40c580
push ebp
mov ebp esp
push ebx
mov ebx [ _invalid_parameter_noinfo@IAT ]
push esi
mov esi [ ecx ]
push edi
mov edi [ ecx + 0x4 ]
test esi esi
jne r-xdata
mov eax [ esi ]
jmp r-xdata
call ebx
xor eax eax
mov ecx [ ebp + 0xc ]
lea edi [ edi + ecx * 2 ]
cmp edi [ eax + 0x10 ]
ja r-xdata
call ebx
test esi esi
je r-xdata
xor eax eax
mov eax [ esi ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4 ] edi
pop edi
mov [ eax ] esi
pop esi
pop ebx
pop ebp
retn 0x8
cmp edi [ eax + 0xc ]
jae r-xdata
sub_40c5d0
push ebp
mov ebp esp
push 0xffffffff
push sub_41b8c0
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
xor edi edi
mov [ ebp - 0x4 ] edi
mov eax [ esi + 0xc ]
cmp eax edi
je r-xdata
mov [ esi + 0xc ] edi
mov [ esi + 0x10 ] edi
mov [ esi + 0x14 ] edi
mov [ ebp - 0x4 ] 0xffffffff
mov edx [ esi ]
push edx
call ??3@YAXPAX@Z
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov ecx [ esi + 0x14 ]
sub ecx eax
sar ecx 0x1
push ecx
push eax
lea ecx [ esi + 0x8 ]
call [ std::allocator<wchar_t>::deallocate@IAT ]
sub_40c650
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0x10 ]
sub eax ecx
sar eax 0x1
lea eax [ eax + eax ]
push esi
lea esi [ eax + edx ]
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0xc
push eax
push ecx
push eax
push edx
call [ memmove_s@IAT ]
add esp 0x10
sub_40c680
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x8 ]
mov eax esi
mov ecx edi
test esi esi
jbe r-xdata
lea eax [ edi + esi * 2 ]
pop edi
pop esi
pop ebp
retn 0xc
mov edx [ ebp + 0x10 ]
push ebx
mov bx [ edx ]
mov [ ecx ] bx
dec eax
add ecx 0x2
test eax eax
ja r-xdata
pop ebx
sub_40c6b0
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ecx
push edi
mov [ ebx ] 0x0
test esi esi
je r-xdata
call [ _invalid_parameter_noinfo@IAT ]
mov eax [ ebp + 0x10 ]
mov eax [ ebp + 0x10 ]
cmp [ esi + 0xc ] eax
ja r-xdata
call [ _invalid_parameter_noinfo@IAT ]
mov edi [ ebp + 0x18 ]
cmp edi [ esi + 0x10 ]
jbe r-xdata
cmp eax [ esi + 0x10 ]
jbe r-xdata
call [ _invalid_parameter_noinfo@IAT ]
cmp eax ecx
je r-xdata
mov eax [ ebx ]
mov ecx [ esi ]
test eax eax
je r-xdata
mov edi [ ebp + 0x18 ]
mov ecx [ esi ]
mov [ ebx ] ecx
mov [ ebx + 0x4 ] eax
cmp [ esi + 0xc ] edi
ja r-xdata
pop edi
pop esi
mov eax ebx
pop ebx
pop ebp
retn 0x14
mov eax [ esi + 0x10 ]
sub eax edi
sar eax 0x1
lea ecx [ eax + eax ]
lea ebx [ ecx + edx ]
test eax eax
jle r-xdata
mov edx [ ebx + 0x4 ]
cmp edx edi
je r-xdata
mov eax [ ebp + 0x8 ]
pop edi
mov [ esi + 0x10 ] ebx
pop esi
pop ebx
pop ebp
retn 0x14
push ecx
push edi
push ecx
push edx
call [ memmove_s@IAT ]
add esp 0x10
sub_40c750
push ebp
mov ebp esp
push 0xffffffff
push sub_41b460
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi ecx
mov [ ebp - 0x1c ] esi
mov ecx [ esi + 0xc ]
test ecx ecx
jne r-xdata
mov eax [ esi + 0x14 ]
sub eax ecx
sar eax 0x1
mov edx eax
xor edx edx
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov ebx [ esi + 0x10 ]
mov eax ebx
sub eax ecx
sar eax 0x1
mov ecx 0x7fffffff
sub ecx eax
cmp ecx edi
jae r-xdata
mov edi [ ebp + 0x10 ]
test edi edi
je r-xdata
lea ecx [ eax + edi ]
cmp edx ecx
jae r-xdata
call sub_40c490
mov ecx ebx
mov eax [ ebp + 0xc ]
sub ecx eax
sar ecx 0x1
cmp ecx edi
jae r-xdata
mov eax edx
shr eax 0x1
mov ebx 0x7fffffff
sub ebx eax
cmp ebx edx
jae r-xdata
mov ecx [ ebp + 0x14 ]
movzx edx [ ecx ]
mov [ ebp + 0x10 ] edx
lea eax [ edi + edi ]
mov [ ebp + 0x14 ] eax
mov edi ebx
sub edi eax
push ebx
push ebx
push edi
mov ecx esi
call sub_40c650
mov [ esi + 0x10 ] eax
push ebx
push edi
mov eax [ ebp + 0xc ]
push eax
call sub_40c550
lea ecx [ ebp + 0x10 ]
push ecx
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x14 ]
add edx eax
push edx
push eax
call sub_40c520
add esp 0x18
mov edx [ ebp + 0x14 ]
movzx ecx [ edx ]
mov [ ebp + 0x10 ] ecx
lea ecx [ edi + edi ]
mov [ ebp + 0x14 ] ecx
add ecx eax
push ecx
push ebx
push eax
mov ecx esi
call sub_40c650
mov [ ebp - 0x4 ] 0x2
mov eax [ esi + 0x10 ]
lea edx [ ebp + 0x10 ]
push edx
mov ecx eax
sub ecx [ ebp + 0xc ]
sar ecx 0x1
sub edi ecx
push edi
push eax
mov ecx esi
call sub_40c680
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp + 0x14 ]
add [ esi + 0x10 ] eax
mov esi [ esi + 0x10 ]
lea edx [ ebp + 0x10 ]
push edx
sub esi eax
push esi
mov eax [ ebp + 0xc ]
push eax
call sub_40c520
add esp 0xc
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
add edx eax
mov [ ebp - 0x14 ] edx
mov [ ebp - 0x14 ] 0x0
mov edx [ ebp - 0x14 ]
jmp r-xdata
lea ecx [ esi + 0x8 ]
push edx
call [ std::allocator<wchar_t>::allocate@IAT ]
mov [ ebp + 0x10 ] eax
mov ebx [ ebp + 0xc ]
sub ebx [ esi + 0xc ]
sar ebx 0x1
mov [ ebp - 0x4 ] 0x0
mov edx [ ebp + 0x14 ]
push edx
push edi
lea eax [ eax + ebx * 2 ]
push eax
mov ecx esi
call sub_40c680
mov [ ebp - 0x18 ] 0x1
mov ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov eax [ esi + 0xc ]
push eax
mov ecx esi
call sub_40c650
mov [ ebp - 0x18 ] 0x2
lea ecx [ ebx + edi ]
mov ebx [ ebp + 0x10 ]
lea edx [ ebx + ecx * 2 ]
push edx
mov eax [ esi + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov ecx esi
call sub_40c650
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ esi + 0xc ]
mov edx [ esi + 0x10 ]
sub edx eax
sar edx 0x1
add edi edx
test eax eax
je r-xdata
mov [ ebp - 0x14 ] ecx
mov edx ecx
cmp edx ecx
jae r-xdata
mov edx [ ebp - 0x14 ]
lea eax [ ebx + edx * 2 ]
mov [ esi + 0x14 ] eax
lea ecx [ ebx + edi * 2 ]
mov [ esi + 0x10 ] ecx
mov [ esi + 0xc ] ebx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov ecx [ esi + 0x14 ]
sub ecx eax
sar ecx 0x1
push ecx
push eax
lea ecx [ esi + 0x8 ]
call [ std::allocator<wchar_t>::deallocate@IAT ]
sub_40c9a0
push ebp
mov ebp esp
sub esp 0x18
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ecx
mov ecx [ esi + 0xc ]
push edi
mov edi [ esi + 0x10 ]
mov eax edi
sub eax ecx
sar eax 0x1
cmp ebx eax
jbe r-xdata
jae r-xdata
cmp ecx edi
jbe r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp ecx edi
jbe r-xdata
mov edx [ esi + 0x10 ]
sub edx [ esi + 0xc ]
mov eax [ esi ]
lea ecx [ ebp + 0xc ]
push ecx
sar edx 0x1
sub ebx edx
push ebx
push edi
push eax
mov ecx esi
call sub_40c750
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
call [ _invalid_parameter_noinfo@IAT ]
mov eax [ esi ]
mov [ ebp - 0x10 ] eax
mov eax [ esi + 0xc ]
mov [ ebp + 0xc ] eax
cmp eax [ esi + 0x10 ]
jbe r-xdata
call [ _invalid_parameter_noinfo@IAT ]
mov ecx [ esi ]
push ebx
lea edx [ ebp - 0x18 ]
mov [ ebp - 0x8 ] ecx
push edx
lea ecx [ ebp - 0x8 ]
mov [ ebp - 0x4 ] eax
call sub_40c580
mov ecx [ ebp - 0x10 ]
mov edx [ eax + 0x4 ]
mov eax [ eax ]
push edi
push ecx
push edx
push eax
lea ecx [ ebp - 0x10 ]
push ecx
mov ecx esi
call sub_40c6b0
call [ _invalid_parameter_noinfo@IAT ]
mov eax [ ebp + 0xc ]
sub_40ca50
push ebp
mov ebp esp
push 0xffffffff
push sub_41b4af
mov eax [ fs : 0x0 ]
push eax
sub esp 0x2a4
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx [ ebp + 0x8 ]
lea ecx [ ebp - 0x258 ]
call sub_40ea00
xor eax eax
mov [ ebp - 0x4 ] eax
mov edi [ AssocQueryStringW@IAT ]
lea ecx [ ebp - 0x240 ]
push ecx
push eax
push r--data
push r--data
push 0x2
push eax
mov [ ebp - 0x240 ] eax
call edi
mov esi eax
test esi esi
jl r-xdata
lea ecx [ ebp - 0x23c ]
call [ utf::string::string@IAT ]
mov [ ebp - 0x4 ] 0x1
test esi esi
jl r-xdata
mov edx [ ebp - 0x240 ]
push 0x0
push edx
lea ecx [ ebp - 0x258 ]
call sub_40c9a0
mov eax [ ebp - 0x248 ]
sub eax [ ebp - 0x24c ]
sar eax 0x1
jne r-xdata
xor edx edx
push 0x206
push edx
lea eax [ ebp - 0x216 ]
push eax
mov [ ebp - 0x218 ] dx
call memset
add esp 0xc
push 0x104
lea ecx [ ebp - 0x218 ]
push ecx
push 0x0
call [ GetModuleFileNameW@IAT ]
lea edx [ ebp - 0x218 ]
push edx
call [ PathRemoveFileSpecW@IAT ]
push 0x0
push 0x41
call Ordinal_vmwarebase_25
add esp 0x8
test al al
je r-xdata
mov eax [ ebp - 0x248 ]
sub eax [ ebp - 0x24c ]
sar eax 0x1
jne r-xdata
mov edx [ ebp - 0x24c ]
lea ecx [ ebp - 0x240 ]
push ecx
push edx
push r--data
push r--data
push 0x2
push 0x0
call edi
mov esi eax
call [ _invalid_parameter_noinfo@IAT ]
push r--data
lea ecx [ ebp - 0x218 ]
push ecx
push r--data
lea eax [ ebp - 0x218 ]
push eax
jmp r-xdata
mov esi [ utf::string::c_str@IAT ]
mov edi [ ebp - 0x24c ]
mov ecx ebx
call esi
sub esp 0x24
mov ecx esp
mov [ ebp - 0x25c ] esp
push eax
push edi
push r--data
push ecx
call [ cui::Format@IAT ]
add esp 0x10
mov [ ebp - 0x4 ] 0x2
jmp r-xdata
call [ _invalid_parameter_noinfo@IAT ]
mov ecx [ ebp - 0x24c ]
lea edx [ ebp - 0x26c ]
push edx
lea eax [ ebp - 0x2b0 ]
push eax
push 0x0
push 0x0
push 0x20
push 0x0
push 0x0
push 0x0
push ecx
push 0x0
call [ CreateProcessW@IAT ]
mov esi eax
test esi esi
je r-xdata
call [ _invalid_parameter_noinfo@IAT ]
call [ PathAppendW@IAT ]
mov esi [ utf::string::c_str@IAT ]
mov ecx ebx
call esi
sub esp 0x24
mov edx esp
mov [ ebp - 0x25c ] esp
push eax
lea eax [ ebp - 0x218 ]
push eax
push r--data
push edx
call [ cui::Format@IAT ]
add esp 0x10
mov [ ebp - 0x4 ] 0x3
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x23c ]
call [ utf::string::operator=@IAT ]
push 0x40
lea ecx [ ebp - 0x2ac ]
push 0x0
push ecx
mov [ ebp - 0x2b0 ] 0x44
call memset
xor eax eax
add esp 0xc
lea ecx [ ebp - 0x23c ]
mov [ ebp - 0x26c ] 0x0
mov [ ebp - 0x268 ] eax
mov [ ebp - 0x264 ] eax
mov [ ebp - 0x260 ] eax
call esi
push eax
push r--data
push r--data
call Ordinal_vmwarebase_2
lea edx [ ebp - 0x258 ]
push edx
lea eax [ ebp - 0x23c ]
push eax
call [ utf::CreateWritableBuffer@IAT ]
mov ecx [ ebp - 0x248 ]
sub ecx [ ebp - 0x24c ]
add esp 0x14
sar ecx 0x1
jne r-xdata
call [ GetLastError@IAT ]
push eax
push r--data
call Ordinal_vmwarebase_4
add esp 0x8
mov edx [ ebp - 0x26c ]
mov edi [ CloseHandle@IAT ]
push edx
call edi
mov eax [ ebp - 0x268 ]
push eax
call edi
jmp r-xdata
test esi esi
setne bl
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x23c ]
call [ utf::string::~string@IAT ]
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x258 ]
call sub_40c5d0
mov al bl
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_401736
mov esp ebp
pop ebp
retn 0x4
sub_40cd40
push esi
mov esi ecx
mov eax [ esi ]
push eax
call [ DestroyWindow@IAT ]
test eax eax
jne r-xdata
mov [ esi ] 0x0
mov eax 0x1
pop esi
retn
pop esi
retn
sub_40cd60
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
mov esi [ ebp + 0xc ]
fld [ esi + 0x8 ]
push edi
call sub_419350
fld [ esi + 0xc ]
mov ebx eax
call sub_419350
fld [ esi ]
mov [ ebp - 0x4 ] eax
call sub_419350
fld [ esi + 0x4 ]
mov edi eax
call sub_419350
mov edx [ ebp - 0x4 ]
mov ecx eax
mov eax [ ebp + 0x8 ]
mov [ eax ] edi
add edi ebx
mov [ eax + 0x8 ] edi
pop edi
mov [ eax + 0x4 ] ecx
add ecx edx
pop esi
mov [ eax + 0xc ] ecx
pop ebx
mov esp ebp
pop ebp
retn
sub_40cdb0
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
cmp [ edi + 0x4 ] 0x100
mov esi ecx
jne r-xdata
mov eax [ esi - 0x20 ]
push edi
push eax
call [ IsDialogMessageW@IAT ]
pop edi
pop esi
pop ebp
retn 0x4
cmp [ esi + 0x58 ] 0x0
jne r-xdata
mov eax [ edi + 0x8 ]
cmp eax 0x27
jne r-xdata
cmp eax 0x25
je r-xdata
mov eax [ esi - 0x20 ]
push 0x0
push 0x0
push 0x400
push eax
call [ SendMessageW@IAT ]
test eax eax
jle r-xdata
pop edi
mov eax 0x1
pop esi
pop ebp
retn 0x4
mov ecx [ esi - 0x20 ]
movzx edi ax
push edi
push ecx
call [ GetDlgItem@IAT ]
mov edx [ esi - 0x20 ]
push eax
push edi
push 0x111
push edx
call [ PostMessageW@IAT ]
sub_40ce60
push ebp
mov ebp esp
sub esp 0x10
push ebx
push edi
mov edi [ GetModuleHandleW@IAT ]
push r--data
mov ebx ecx
call edi
test eax eax
je r-xdata
pop edi
pop ebx
mov esp ebp
pop ebp
retn
push esi
mov esi [ GetProcAddress@IAT ]
push r--data
push eax
call esi
test eax eax
je r-xdata
pop esi
call eax
test eax eax
je r-xdata
push r--data
call edi
test eax eax
je r-xdata
push r--data
push eax
call esi
test eax eax
je r-xdata
mov edx [ ebx + 0x4 ]
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] ecx
lea ecx [ ebp - 0x10 ]
push ecx
push edx
mov [ ebp - 0x10 ] 0x3
mov [ ebp - 0xc ] 0x1
call eax
sub_40cf00
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
push eax
mov [ esi ] r--data
call GdipDeleteBrush
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call GdipFree
sub_40cf30
push ebp
mov ebp esp
push 0xffffffff
push sub_41b4e8
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ecx + 0x4 ]
push eax
mov [ ecx ] r--data
call GdipDeleteBrush
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_40cf80
push ebp
mov ebp esp
push 0xffffffff
push sub_41b510
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov edi ecx
mov [ ebp - 0x14 ] edi
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
mov ebx [ ebp + 0x8 ]
test ebx ebx
je r-xdata
push eax
call ??_V@YAXPAX@Z
add esp 0x4
mov [ edi + 0x4 ] 0x0
mov al 0x1
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
push ebx
call [ lstrlenW@IAT ]
mov esi eax
inc esi
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x4 ] 0x0
xor ecx ecx
mov eax esi
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call ??_U@YAPAXI@Z
add esp 0x4
mov [ edi + 0x4 ] eax
mov [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
mov edi [ edi + 0x4 ]
test edi edi
jne r-xdata
push ebx
push esi
push edi
call [ wcscpy_s@IAT ]
push eax
call sub_402e70
add esp 0x10
xor al al
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_40d0a0
push ebp
mov ebp esp
push edi
mov edi ecx
mov ecx [ ebp + 0x8 ]
test ecx ecx
jl r-xdata
xor eax eax
pop edi
pop ebp
retn 0x4
mov eax [ edi + 0x4 ]
cmp ecx eax
jge r-xdata
lea edx [ eax - 0x1 ]
cmp ecx edx
je r-xdata
dec [ edi + 0x4 ]
mov eax 0x1
pop edi
pop ebp
retn 0x4
sub eax ecx
push esi
mov esi [ edi ]
add eax eax
add eax eax
lea ecx [ esi + ecx * 4 ]
lea edx [ eax - 0x4 ]
push edx
lea esi [ ecx + 0x4 ]
push esi
push eax
push ecx
call [ memmove_s@IAT ]
push eax
call sub_402e70
add esp 0x14
pop esi
sub_40d100
push ebp
mov ebp esp
push 0xffffffff
push sub_419e31
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0xc ]
mov edx [ ecx ]
mov [ eax ] edx
mov ecx [ ecx + 0x4 ]
mov [ eax + 0x4 ] ecx
sub_40d180
push ebp
mov ebp esp
push 0xffffffff
push sub_41b538
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x14 ] esi
mov [ esi ] r--data
mov [ esi + 0x8 ] 0x6
xor eax eax
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
mov [ esi ] r--data
mov eax [ eax ]
push ecx
push eax
call GdipCreateSolidFill
mov edx [ ebp - 0x10 ]
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] edx
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_40d200
push ebp
mov ebp esp
push 0xffffffff
push sub_41b568
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x14 ] esi
mov [ esi ] r--data
mov [ esi + 0x8 ] 0x6
xor edx edx
mov [ ebp - 0x4 ] edx
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
lea edi [ ebp - 0x10 ]
push edi
push edx
mov [ ebp - 0x10 ] edx
mov edx [ ebp + 0x14 ]
mov [ esi ] r--data
mov eax [ eax ]
mov ecx [ ecx ]
push edx
push eax
mov eax [ ebp + 0x8 ]
push ecx
push eax
call GdipCreateLineBrushFromRect
mov ecx [ ebp - 0x10 ]
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] ecx
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x10
sub_40d290
push ebp
mov ebp esp
push 0xffffffff
push sub_41b598
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ esi + 0x4 ]
push eax
mov [ esi ] r--data
call GdipDeleteBrush
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
push esi
call GdipFree
sub_40d2f0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
mov ecx [ esi ]
push eax
push ecx
call GdipReleaseDC
test eax eax
je r-xdata
pop esi
pop ebp
retn 0x4
mov [ esi + 0x4 ] eax
sub_40d310
push ebp
mov ebp esp
sub esp 0x44
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
mov [ ebp - 0x44 ] 0x0
test eax eax
je r-xdata
lea ecx [ ebp - 0x44 ]
push ecx
push edi
call GdipCreateFontFromDC
mov edx [ ebp - 0x44 ]
mov [ esi ] edx
lea ecx [ ebp - 0x40 ]
push ecx
push 0x3c
push eax
call [ GetObjectA@IAT ]
lea edx [ ebp - 0x44 ]
push edx
test eax eax
je r-xdata
push edi
call GdipCreateFontFromDC
mov [ esi + 0x4 ] eax
mov eax [ ebp - 0x44 ]
mov [ esi ] eax
pop edi
mov eax esi
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_401736
mov esp ebp
pop ebp
retn 0x8
lea eax [ ebp - 0x40 ]
push eax
push edi
call GdipCreateFontFromLogfontA
mov ecx [ ebp - 0x44 ]
mov [ esi ] ecx
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov [ esi + 0x4 ] eax
pop edi
mov eax esi
xor ecx ebp
pop esi
call sub_401736
mov esp ebp
pop ebp
retn 0x8
sub_40d3b0
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
sub esp 0xc
test ecx ecx
ja r-xdata
or eax 0xffffffff
xor edx edx
div ecx
cmp eax 0x8
jae r-xdata
xor ecx ecx
add ecx ecx
add ecx ecx
add ecx ecx
push ecx
call ??2@YAPAXI@Z
add esp 0x4
mov esp ebp
pop ebp
retn 0x4
push 0x0
lea ecx [ ebp - 0xc ]
call sub_402000
push r--data
lea eax [ ebp - 0xc ]
push eax
call _CxxThrowException
sub_40d420
push ebp
mov ebp esp
push 0xffffffff
push sub_41b5d9
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] ecx
mov eax [ ecx ]
mov ecx [ ebp + 0x8 ]
lea eax [ eax + ecx * 4 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0x8
mov edx [ ebp + 0xc ]
mov ecx [ edx ]
mov [ eax ] ecx
sub_40d4c0
push ebp
mov ebp esp
push 0xffffffff
push sub_41b600
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x4 ] 0x0
mov ebx [ ebp + 0x14 ]
mov edi [ ebp + 0x10 ]
mov esi [ ebp + 0x8 ]
lea esp [ esp ]
mov [ ebp - 0x4 ] 0xffffffff
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push esi
push edi
mov ecx ebx
call sub_40d480
add edi 0x4
mov [ ebp + 0x10 ] edi
add esi 0x4
mov [ ebp + 0x8 ] esi
jmp r-xdata
cmp esi [ ebp + 0xc ]
je r-xdata
sub_40d550
push ebp
mov ebp esp
sub esp 0x10
cmp [ ebp + 0x8 ] 0xe9e
push esi
mov esi ecx
je r-xdata
mov ecx [ esi + 0x4 ]
push ecx
call [ IsWindowVisible@IAT ]
test eax eax
jne r-xdata
mov eax [ esi + 0x18 ]
mov [ eax + 0x20 ] 0x0
pop esi
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
push 0x3
sub ecx eax
push ecx
mov ecx [ ebp - 0x10 ]
sub edx ecx
push edx
push eax
mov eax [ esi + 0x4 ]
push ecx
push 0x0
push eax
call [ SetWindowPos@IAT ]
pop esi
mov esp ebp
pop ebp
retn 0x4
mov edx [ esi + 0x4 ]
push 0xe9e
push edx
call [ KillTimer@IAT ]
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_40d5c0
push ebp
mov ebp esp
push 0xffffffff
push sub_41b628
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x4 ] 0x0
push r--data
call [ GetModuleHandleW@IAT ]
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov eax 0x1
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
push r--data
push eax
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
call eax
test eax eax
je r-xdata
mov ecx [ esi + 0x4 ]
lea eax [ ebp - 0x1c ]
push eax
push ecx
call [ GetClientRect@IAT ]
mov edx [ ebp + 0x8 ]
mov edi [ SetBkColor@IAT ]
push 0x0
push edx
call edi
mov esi eax
cmp esi 0xffffffff
je r-xdata
mov ecx [ ebp + 0x8 ]
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0x1c ]
push eax
push 0x2
push 0x0
push 0x0
push ecx
call [ ExtTextOutW@IAT ]
mov edx [ ebp + 0x8 ]
push esi
push edx
call edi
sub_40d680
push ebp
mov ebp esp
push 0xffffffff
push sub_41b670
mov eax [ fs : 0x0 ]
push eax
sub esp 0x88
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx ecx
mov esi [ ebp + 0x8 ]
mov ecx [ esi ]
lea eax [ ebp - 0x20 ]
push eax
xor edi edi
push ecx
mov [ ebp - 0x20 ] edi
call GdipGetDC
cmp eax edi
je r-xdata
mov esi [ ebp - 0x20 ]
mov [ ebp - 0x48 ] esi
mov [ ebp - 0x4 ] edi
fldz
cmp [ ebp + 0x20 ] 0x0
fst [ ebp - 0x10 ]
mov edi [ GetModuleHandleW@IAT ]
fst [ ebp - 0x14 ]
fst [ ebp - 0x18 ]
fst [ ebp - 0x1c ]
fst [ ebp - 0x28 ]
fst [ ebp - 0x2c ]
fst [ ebp - 0x30 ]
fstp [ ebp - 0x34 ]
fld1
je r-xdata
mov [ esi + 0x4 ] eax
fld [ ebp + 0xc ]
mov edx [ ebp + 0xc ]
fadd [ r--data ]
mov ecx [ ebp + 0x14 ]
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x1c ] edx
fstp [ ebp - 0x1c ]
mov edx [ ebp - 0x1c ]
mov [ ebp - 0x14 ] ecx
fld [ ebp - 0x14 ]
fsub [ r--data ]
mov ecx [ ebp + 0x18 ]
mov [ ebp - 0x34 ] edx
mov [ ebp - 0x30 ] eax
fstp [ ebp - 0x14 ]
mov [ ebp - 0x18 ] eax
fld [ ebp - 0x1c ]
mov eax [ ebp - 0x14 ]
fadd st1
push r--data
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x2c ] eax
fstp [ ebp - 0x34 ]
mov [ ebp - 0x28 ] ecx
fadd [ ebp - 0x30 ]
fstp [ ebp - 0x30 ]
call edi
test eax eax
je r-xdata
push r--data
fstp st0
call edi
test eax eax
je r-xdata
call [ wui::util::IsHighContrastOn@IAT ]
test al al
je r-xdata
push r--data
push eax
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
fld [ ebp + 0xc ]
fld1
fadd st1
fxch st1
fstp [ ebp + 0xc ]
fld [ ebp + 0x10 ]
fadd st1
fstp [ ebp + 0x10 ]
jmp r-xdata
push r--data
push eax
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
mov eax [ ebx + 0x70 ]
push eax
push esi
lea ecx [ ebp - 0x24 ]
call sub_40d310
mov [ ebp - 0x4 ] 0x1
lea eax [ ebp + 0x20 ]
push eax
lea ecx [ ebp - 0x40 ]
mov [ ebp + 0x20 ] 0xffffffff
call sub_40d180
mov [ ebp - 0x4 ] 0x2
lea ecx [ ebp + 0x20 ]
push ecx
lea ecx [ ebp - 0x54 ]
mov [ ebp + 0x20 ] 0x80000000
call sub_40d180
mov [ ebp - 0x4 ] 0x3
push esi
mov esi [ ebp + 0x8 ]
mov edx [ esi ]
push edx
call GdipReleaseDC
test eax eax
je r-xdata
fld [ ebp - 0x10 ]
call sub_419350
fld [ ebp - 0x14 ]
mov [ ebp + 0x20 ] eax
call sub_419350
fld [ ebp - 0x18 ]
mov [ ebp - 0x24 ] eax
call sub_419350
fld [ ebp - 0x1c ]
mov edi eax
call sub_419350
mov ebx [ ebx + 0x70 ]
mov ecx [ ebp - 0x24 ]
mov edx [ ebp + 0x20 ]
mov [ ebp - 0x44 ] eax
mov [ ebp - 0x40 ] edi
push ebx
add eax ecx
add edi edx
push esi
mov [ ebp - 0x3c ] eax
mov [ ebp - 0x38 ] edi
call [ SelectObject@IAT ]
push 0x1
push esi
call [ SetBkMode@IAT ]
push 0x12
call [ GetSysColor@IAT ]
push eax
push esi
call [ SetTextColor@IAT ]
mov ecx [ ebp + 0x1c ]
call [ utf::string::w_str@IAT ]
push 0x824
lea ecx [ ebp - 0x44 ]
push ecx
push 0xffffffff
push eax
push esi
call [ DrawTextW@IAT ]
push esi
mov esi [ ebp + 0x8 ]
mov edx [ esi ]
push edx
call GdipReleaseDC
test eax eax
je r-xdata
call eax
test eax eax
je r-xdata
call eax
test eax eax
jne r-xdata
mov ecx [ ebp + 0x1c ]
add ebx 0x74
call [ utf::string::w_str@IAT ]
test ebx ebx
je r-xdata
mov [ esi + 0x4 ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x1c
mov [ esi + 0x4 ] eax
jmp r-xdata
cmp [ ebx + 0x28 ] 0x0
je r-xdata
fld1
xor ecx ecx
mov ecx [ ebx ]
jmp r-xdata
push 0x3c
lea ecx [ ebp - 0x90 ]
push 0x0
push ecx
mov [ ebp - 0x94 ] 0x40
call memset
lea edx [ ebp - 0x1c ]
push edx
lea eax [ ebp - 0x44 ]
push eax
call sub_40cd60
mov eax [ ebx + 0x70 ]
add esp 0x14
push eax
push esi
mov [ ebp - 0x90 ] 0x2800
mov [ ebp - 0x60 ] 0xf
call [ SelectObject@IAT ]
push r--data
call edi
test eax eax
je r-xdata
mov ecx [ ebp + 0x1c ]
call [ utf::string::w_str@IAT ]
test ebx ebx
je r-xdata
mov [ esi + 0x4 ] eax
mov edx [ ebp - 0x50 ]
mov edi [ ebp - 0x24 ]
push edx
mov edx [ esi ]
push ecx
lea ecx [ ebp - 0x34 ]
push ecx
push edi
push 0xffffffff
push eax
push edx
call GdipDrawString
test eax eax
je r-xdata
push r--data
push eax
call [ GetProcAddress@IAT ]
mov edi eax
test edi edi
je r-xdata
xor ebx ebx
mov ebx [ ebx ]
jmp r-xdata
lea ecx [ ebp - 0x94 ]
push ecx
mov ecx [ ebp + 0x1c ]
lea edx [ ebp - 0x44 ]
push edx
push 0x824
push 0xffffffff
call [ utf::string::w_str@IAT ]
push eax
mov eax [ ebx + 0x28 ]
push 0x0
push 0x0
push esi
push eax
call edi
mov ecx [ ebp + 0x8 ]
push esi
call sub_40d2f0
jmp r-xdata
mov [ ebp - 0x4 ] 0x2
lea ecx [ ebp - 0x54 ]
call sub_40cf30
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x40 ]
call sub_40cf30
mov [ ebp - 0x4 ] 0x0
push edi
call GdipDeleteFont
mov [ esi + 0x4 ] eax
mov ecx [ ebp - 0x3c ]
push ecx
push ebx
lea edx [ ebp - 0x1c ]
push edx
push edi
push 0xffffffff
push eax
mov eax [ esi ]
push eax
call GdipDrawString
test eax eax
je r-xdata
sub_40d9f0
push ebp
mov ebp esp
push 0xffffffff
push sub_41b6a0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0x8 ]
mov edi eax
or esi 0xffffffff
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x10 ] esi
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0x1
push 0xfffffffe
push 0xfffffffe
lea eax [ ebp + 0xc ]
push eax
call [ InflateRect@IAT ]
mov ecx [ ebp + 0x8 ]
push 0xffffff
push ecx
call [ SetTextColor@IAT ]
mov edx [ ebp + 0x8 ]
push 0x202020
push edx
call [ SetBkColor@IAT ]
mov ecx [ ebp + 0x8 ]
lea eax [ ebp + 0xc ]
push eax
push ecx
call [ DrawFocusRect@IAT ]
mov [ ebp - 0x4 ] 0x0
cmp esi 0xffffffff
je r-xdata
push eax
call [ SaveDC@IAT ]
mov esi eax
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x14
push esi
push edi
call [ RestoreDC@IAT ]
sub_40dab0
push ebp
mov ebp esp
push 0xffffffff
push sub_41b9f8
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] 0x0
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0x8 ]
push eax
mov [ esi + 0x4 ] eax
call [ GetDC@IAT ]
mov [ esi ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_40db10
push ebp
mov ebp esp
push 0xffffffff
push sub_41b6d0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
cmp [ rw-data ] 0xffffffff
jne r-xdata
xor eax eax
cmp [ rw-data ] 0x1
sete al
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
add eax 0x10
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0x4 ] 0x1
mov eax [ ebp - 0x14 ]
push eax
call [ EnterCriticalSection@IAT ]
cmp [ rw-data ] 0xffffffff
mov [ ebp - 0x10 ] 0x1
jne r-xdata
mov edx [ ebp - 0x14 ]
push edx
call [ LeaveCriticalSection@IAT ]
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_4043c0
push r--data
call [ LoadLibraryW@IAT ]
xor ecx ecx
test eax eax
setne cl
mov [ rw-data ] ecx
test eax eax
je r-xdata
push eax
call [ FreeLibrary@IAT ]
sub_40dbd0
push ebp
mov ebp esp
push 0xffffffff
push sub_41b6fb
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov ecx [ esi + 0x4 ]
lea eax [ ebp - 0x10 ]
push eax
push ecx
mov [ ebp - 0x10 ] 0x0
call GdipCloneBrush
test eax eax
je r-xdata
push 0xc
call GdipAlloc
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
mov [ esi + 0x8 ] eax
xor esi esi
mov esi [ esi + 0x8 ]
mov ecx [ ebp - 0x10 ]
mov [ eax + 0x8 ] esi
mov [ eax ] r--data
mov [ eax + 0x4 ] ecx
mov esi eax
jmp r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x10 ]
push edx
call GdipDeleteBrush
mov [ ebp - 0x4 ] 0xffffffff
test esi esi
jne r-xdata
sub_40dc70
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0xc ]
fld [ eax ]
push esi
fstp [ ebp - 0xc ]
sub esp 0x10
fld [ eax + 0x4 ]
mov esi ecx
mov edx [ esi ]
fstp [ ebp - 0x8 ]
fld [ eax + 0x8 ]
fstp [ ebp - 0x4 ]
fld [ eax + 0xc ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
fstp [ ebp + 0xc ]
fld [ ebp + 0xc ]
fstp [ esp + 0xc ]
fld [ ebp - 0x4 ]
fstp [ esp + 0x8 ]
fld [ ebp - 0x8 ]
fstp [ esp + 0x4 ]
fld [ ebp - 0xc ]
fstp [ esp ]
push ecx
push edx
call GdipFillRectangle
test eax eax
je r-xdata
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
mov [ esi + 0x4 ] eax
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_40dce0
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ecx
mov edx [ esi + 0x4 ]
mov eax [ esi + 0x8 ]
push edi
cmp edx eax
jne r-xdata
mov eax [ esi + 0x4 ]
push ebx
push eax
mov ecx esi
call sub_40d420
mov eax 0x1
add [ esi + 0x4 ] eax
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov ecx [ esi ]
cmp ebx ecx
jb r-xdata
test eax eax
jne r-xdata
lea edi [ ecx + eax * 4 ]
cmp ebx edi
jae r-xdata
lea edi [ edx + edx ]
test edi edi
jl r-xdata
lea edi [ eax + 0x1 ]
jmp r-xdata
push 0x80004005
call sub_401870
pop edi
pop esi
xor eax eax
pop ebx
pop ebp
retn 0x4
cmp edi 0x1fffffff
ja r-xdata
push 0x4
push edi
push ecx
call [ _recalloc@IAT ]
add esp 0xc
test eax eax
je r-xdata
mov [ esi + 0x8 ] edi
mov [ esi ] eax
sub_40dd60
push ebp
mov ebp esp
push esi
mov esi [ ecx + 0x4 ]
xor eax eax
push edi
test esi esi
jle r-xdata
pop edi
xor eax eax
pop esi
pop ebp
retn 0x4
mov edx [ ebp + 0x8 ]
mov edi [ edx ]
mov edx [ ecx ]
cmp eax 0xffffffff
jne r-xdata
inc eax
add edx 0x4
cmp eax esi
jl r-xdata
push eax
call sub_40d0a0
pop edi
pop esi
pop ebp
retn 0x4
cmp [ edx ] edi
je r-xdata
pop edi
xor eax eax
pop esi
pop ebp
retn 0x4
sub_40ddb0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
cmp eax ecx
je r-xdata
pop ebp
retn
mov edx [ ebp + 0x10 ]
push esi
mov esi [ edx ]
mov [ eax ] esi
add eax 0x4
cmp eax ecx
jne r-xdata
pop esi
sub_40ddd0
push ebp
mov ebp esp
push 0xffffffff
push sub_41b720
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x4 ] 0x0
mov ebx [ ebp + 0x14 ]
mov edi [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
lea esp [ esp ]
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x10 ]
push eax
push esi
mov ecx ebx
call sub_40d480
dec edi
mov [ ebp + 0xc ] edi
add esi 0x4
mov [ ebp + 0x8 ] esi
jmp r-xdata
test edi edi
jbe r-xdata
sub_40de50
push ebp
mov ebp esp
push 0xffffffff
push sub_41b740
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x4 ] 0x0
mov ebx [ ebp + 0x14 ]
mov edi [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
lea esp [ esp ]
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x10 ]
push eax
push esi
mov ecx ebx
call sub_40d4a0
dec edi
mov [ ebp + 0xc ] edi
add esi 0x8
mov [ ebp + 0x8 ] esi
jmp r-xdata
test edi edi
jbe r-xdata
sub_40ded0
push ebp
mov ebp esp
push 0xffffffff
push sub_41b798
mov eax [ fs : 0x0 ]
push eax
sub esp 0x34
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi [ GetModuleHandleW@IAT ]
push r--data
call edi
xor ebx ebx
cmp eax ebx
je r-xdata
call [ wui::util::IsHighContrastOn@IAT ]
test al al
je r-xdata
mov esi [ GetProcAddress@IAT ]
push r--data
push eax
call esi
cmp eax ebx
je r-xdata
mov eax [ ebp + 0x1c ]
mov cl [ eax + 0x2 ]
mov dl [ eax + 0x1 ]
movzx eax [ eax ]
or eax 0xffffff00
movzx edx dl
shl eax 0x8
or eax edx
movzx ecx cl
shl eax 0x8
or eax ecx
lea edx [ ebp + 0x1c ]
push edx
lea ecx [ ebp - 0x30 ]
mov [ ebp + 0x1c ] eax
call sub_40d180
mov [ ebp - 0x4 ] 0x2
mov esi [ ebp + 0x8 ]
lea ecx [ ebp + 0xc ]
push ecx
push eax
mov ecx esi
call sub_40dc70
or edi 0xffffffff
mov [ ebp - 0x4 ] edi
lea ecx [ ebp - 0x30 ]
call sub_40cf30
fld [ r--data ]
cmp [ ebp + 0x20 ] 0x0
push 0x1
je r-xdata
mov edi [ ebp + 0x8 ]
mov eax [ edi ]
lea edx [ ebp + 0x1c ]
push edx
push eax
mov [ ebp + 0x1c ] ebx
call GdipGetDC
cmp eax ebx
je r-xdata
call eax
test eax eax
je r-xdata
mov edx [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x40 ] ecx
mov ecx [ ebp + 0x18 ]
mov [ ebp - 0x3c ] edx
lea edx [ ebp + 0x20 ]
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] ecx
fstp [ ebp - 0x34 ]
push edx
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x40 ]
push ecx
lea ecx [ ebp - 0x24 ]
mov [ ebp + 0x20 ] 0xffffff
mov [ ebp + 0x8 ] 0x4cffffff
call sub_40d200
mov ebx 0x5
mov [ ebp - 0x4 ] ebx
lea edx [ ebp - 0x40 ]
push edx
lea eax [ ebp - 0x24 ]
push eax
mov ecx esi
call sub_40dc70
fld [ ebp + 0x18 ]
fsub [ r--data ]
push 0x1
lea ecx [ ebp + 0x20 ]
push ecx
fstp [ ebp + 0x20 ]
lea edx [ ebp + 0x8 ]
fld [ ebp - 0x40 ]
push edx
fadd [ r--data ]
lea eax [ ebp - 0x40 ]
push eax
lea ecx [ ebp - 0x30 ]
fstp [ ebp - 0x40 ]
mov [ ebp + 0x8 ] 0x0
fld [ ebp + 0x20 ]
mov [ ebp + 0x20 ] 0x4c000000
fadd [ ebp - 0x3c ]
fstp [ ebp - 0x3c ]
call sub_40d200
mov [ ebp - 0x4 ] 0x6
fld [ ebp - 0x3c ]
fadd [ r--data ]
lea ecx [ ebp - 0x40 ]
push ecx
lea edx [ ebp - 0x30 ]
push edx
fstp [ ebp - 0x3c ]
mov ecx esi
call sub_40dc70
mov [ ebp - 0x4 ] bl
lea ecx [ ebp - 0x30 ]
call sub_40cf30
mov [ ebp - 0x4 ] edi
lea ecx [ ebp - 0x24 ]
mov eax [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x14 ]
mov [ ebp - 0x40 ] edx
mov edx [ ebp + 0x18 ]
mov [ ebp - 0x3c ] eax
mov [ ebp - 0x38 ] ecx
lea eax [ ebp + 0x20 ]
push eax
mov [ ebp - 0x34 ] edx
fstp [ ebp - 0x34 ]
lea ecx [ ebp + 0x8 ]
push ecx
lea edx [ ebp - 0x40 ]
push edx
lea ecx [ ebp - 0x30 ]
mov [ ebp + 0x20 ] ebx
mov [ ebp + 0x8 ] 0x4c000000
call sub_40d200
mov ebx 0x3
mov [ ebp - 0x4 ] ebx
lea eax [ ebp - 0x40 ]
push eax
lea ecx [ ebp - 0x30 ]
push ecx
mov ecx esi
call sub_40dc70
fld [ ebp + 0x18 ]
fsub [ r--data ]
push 0x1
lea edx [ ebp + 0x20 ]
push edx
fstp [ ebp + 0x20 ]
lea eax [ ebp + 0x8 ]
fld [ ebp - 0x40 ]
push eax
fadd [ r--data ]
lea ecx [ ebp - 0x40 ]
push ecx
lea ecx [ ebp - 0x24 ]
fstp [ ebp - 0x40 ]
mov [ ebp + 0x8 ] 0xffffff
fld [ ebp + 0x20 ]
mov [ ebp + 0x20 ] 0x4cffffff
fadd [ ebp - 0x3c ]
fstp [ ebp - 0x3c ]
call sub_40d200
mov [ ebp - 0x4 ] 0x4
fld [ ebp - 0x3c ]
fadd [ r--data ]
lea edx [ ebp - 0x40 ]
push edx
lea eax [ ebp - 0x24 ]
push eax
fstp [ ebp - 0x3c ]
mov ecx esi
call sub_40dc70
mov [ ebp - 0x4 ] bl
lea ecx [ ebp - 0x24 ]
call sub_40cf30
mov [ ebp - 0x4 ] edi
lea ecx [ ebp - 0x30 ]
jmp r-xdata
mov esi [ ebp + 0x1c ]
mov [ ebp + 0x8 ] esi
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp + 0xc ]
push ecx
lea edx [ ebp - 0x40 ]
push edx
call sub_40cd60
add esp 0x8
cmp [ ebp + 0x20 ] 0x0
mov eax 0x10
je r-xdata
mov [ edi + 0x4 ] eax
push r--data
mov [ ebp - 0x14 ] 0x646fa3dc
mov [ ebp + 0x1c ] 0x64000000
call edi
cmp eax ebx
je r-xdata
call sub_40cf30
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x1c
push eax
push 0x4
lea eax [ ebp - 0x40 ]
push eax
push esi
call [ DrawFrameControl@IAT ]
mov ecx [ edi ]
push esi
push ecx
call GdipReleaseDC
cmp eax ebx
je r-xdata
mov eax 0x210
lea eax [ ebp - 0x14 ]
cmp [ ebp + 0x20 ] bl
jne r-xdata
push r--data
push eax
call esi
cmp eax ebx
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x1c
mov [ edi + 0x4 ] eax
push eax
lea ecx [ ebp - 0x30 ]
call sub_40d180
mov [ ebp - 0x4 ] ebx
lea ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push eax
call sub_40dc70
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x30 ]
call sub_40cf30
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x1c
lea eax [ ebp + 0x1c ]
lea ecx [ ebp - 0x18 ]
push ecx
lea edx [ ebp - 0x10 ]
push edx
call eax
cmp eax ebx
jl r-xdata
mov edx [ ebp - 0x10 ]
mov eax edx
shr eax 0x10
movzx eax al
mov ecx edx
shr ecx 0x8
or eax 0x6400
shl eax 0x8
movzx ecx cl
or eax ecx
movzx edx dl
shl eax 0x8
or eax edx
mov [ ebp + 0x1c ] eax
sub_40e270
push ebp
mov ebp esp
push 0xffffffff
push sub_41b7f8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x6c
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
cmp [ ebp + 0x1c ] 0x0
fld [ r--data ]
fstp [ ebp - 0x78 ]
fldz
fst [ ebp - 0x74 ]
fld [ r--data ]
fst [ ebp - 0x70 ]
fst [ ebp - 0x6c ]
fld [ r--data ]
fst [ ebp - 0x68 ]
fld [ r--data ]
fstp [ ebp - 0x64 ]
fxch st1
fst [ ebp - 0x60 ]
fst [ ebp - 0x5c ]
fst [ ebp - 0x50 ]
fstp [ ebp - 0x4c ]
fxch st1
fstp [ ebp - 0x58 ]
fstp [ ebp - 0x54 ]
je r-xdata
xor esi esi
push r--data
call [ GetModuleHandleW@IAT ]
xor esi esi
cmp eax esi
je r-xdata
push 0x1
push rw-data
push rw-data
lea edi [ esi - 0x8 ]
push edi
lea ecx [ ebp - 0x48 ]
call sub_40d200
mov [ ebp - 0x4 ] 0x3
fld [ edi ]
fstp [ ebp - 0x18 ]
mov ecx [ ebp - 0x30 ]
fld [ esi - 0x4 ]
mov edx [ ebx ]
fstp [ ebp - 0x14 ]
sub esp 0x10
fld [ esi ]
fstp [ ebp - 0x10 ]
fld [ esi + 0x4 ]
fstp [ ebp + 0x8 ]
fld [ ebp + 0x8 ]
fstp [ esp + 0xc ]
fld [ ebp - 0x10 ]
fstp [ esp + 0x8 ]
fld [ ebp - 0x14 ]
fstp [ esp + 0x4 ]
fld [ ebp - 0x18 ]
fstp [ esp ]
push ecx
push edx
call GdipDrawRectangle
test eax eax
je r-xdata
fld [ ebp + 0xc ]
fld1
fadd st1
fxch st1
fstp [ ebp + 0xc ]
fadd [ ebp + 0x10 ]
fstp [ ebp + 0x10 ]
jmp r-xdata
push r--data
push eax
call [ GetProcAddress@IAT ]
cmp eax esi
je r-xdata
fld [ edi ]
mov eax [ ebp - 0x38 ]
fstp [ ebp - 0x10 ]
mov ecx [ ebx ]
fld [ esi - 0x4 ]
sub esp 0x10
fstp [ ebp - 0x14 ]
fld [ esi ]
fstp [ ebp - 0x18 ]
fld [ esi + 0x4 ]
fstp [ ebp + 0x8 ]
fld [ ebp + 0x8 ]
fstp [ esp + 0xc ]
fld [ ebp - 0x18 ]
fstp [ esp + 0x8 ]
fld [ ebp - 0x14 ]
fstp [ esp + 0x4 ]
fld [ ebp - 0x10 ]
fstp [ esp ]
push eax
push ecx
call GdipFillRectangle
test eax eax
je r-xdata
mov [ ebx + 0x4 ] eax
fld [ ebp - 0x78 ]
push rw-data
fld [ ebp + 0xc ]
lea ecx [ ebp - 0x3c ]
fld st0
faddp st2
fxch st1
fstp [ ebp - 0x78 ]
fld [ ebp - 0x74 ]
fld [ ebp + 0x10 ]
fld st0
faddp st2
fxch st1
fstp [ ebp - 0x74 ]
fld [ ebp - 0x78 ]
fld [ r--data ]
fadd st1
fxch st1
fstp [ ebp - 0x78 ]
fld [ ebp + 0x18 ]
fsub [ r--data ]
fmul [ r--data ]
fstp [ ebp + 0x1c ]
fld [ ebp + 0x1c ]
fld st0
fadd [ ebp - 0x74 ]
fstp [ ebp - 0x74 ]
fld [ ebp - 0x68 ]
fadd st4
fstp [ ebp - 0x68 ]
fld [ ebp - 0x64 ]
fadd st3
fstp [ ebp - 0x64 ]
fld [ ebp - 0x68 ]
fadd st2
fstp [ ebp - 0x68 ]
fld st0
fadd [ ebp - 0x64 ]
fstp [ ebp - 0x64 ]
fld [ ebp - 0x58 ]
faddp st4
fxch st3
fstp [ ebp - 0x58 ]
fld [ ebp - 0x54 ]
faddp st2
fxch st1
fstp [ ebp - 0x54 ]
fxch st1
fstp [ ebp + 0x1c ]
fadd [ ebp - 0x58 ]
fstp [ ebp - 0x58 ]
fld [ ebp - 0x54 ]
fadd [ ebp + 0x1c ]
fstp [ ebp - 0x54 ]
call sub_40d180
mov [ ebp - 0x4 ] esi
fld1
lea eax [ ebp - 0x30 ]
push eax
push esi
push ecx
mov ecx [ ebp - 0x38 ]
fstp [ esp ]
push ecx
mov [ ebp - 0x30 ] esi
call GdipCreatePen2
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x4 ] 0x1
fld1
mov eax [ rw-data ]
lea edx [ ebp - 0x28 ]
push edx
push esi
push ecx
fstp [ esp ]
push eax
mov [ ebp - 0x28 ] esi
call GdipCreatePen1
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x4 ] 0x2
mov ebx [ ebp + 0x8 ]
lea esi [ ebp - 0x70 ]
mov [ ebp + 0x1c ] 0x3
jmp r-xdata
call eax
test eax eax
jne r-xdata
fld [ edi ]
mov edx [ ebp - 0x28 ]
fstp [ ebp - 0x10 ]
mov eax [ ebx ]
fld [ esi - 0x4 ]
sub esp 0x10
fstp [ ebp - 0x14 ]
fld [ esi ]
fstp [ ebp - 0x18 ]
fld [ esi + 0x4 ]
fstp [ ebp + 0x8 ]
fld [ ebp + 0x8 ]
fstp [ esp + 0xc ]
fld [ ebp - 0x18 ]
fstp [ esp + 0x8 ]
fld [ ebp - 0x14 ]
fstp [ esp + 0x4 ]
fld [ ebp - 0x10 ]
fstp [ esp ]
push edx
push eax
call GdipDrawRectangle
test eax eax
je r-xdata
mov [ ebx + 0x4 ] eax
fld [ edi ]
mov edx [ ebp - 0x44 ]
fld [ r--data ]
lea ecx [ ebp - 0x20 ]
fsub st1
push ecx
fxch st1
push 0x0
push ecx
fstp [ edi ]
mov [ ebp - 0x20 ] 0x0
fsubr [ esi - 0x4 ]
fstp [ esi - 0x4 ]
fld [ esi ]
fld [ r--data ]
fsub st1
fxch st1
fstp [ esi ]
fsubr [ esi + 0x4 ]
fstp [ esi + 0x4 ]
fld1
fstp [ esp ]
push edx
call GdipCreatePen2
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0x4
fld [ edi ]
fstp [ ebp - 0x10 ]
mov eax [ ebp - 0x20 ]
fld [ esi - 0x4 ]
mov ecx [ ebx ]
fstp [ ebp - 0x14 ]
sub esp 0x10
fld [ esi ]
fstp [ ebp - 0x18 ]
fld [ esi + 0x4 ]
fstp [ ebp + 0x8 ]
fld [ ebp + 0x8 ]
fstp [ esp + 0xc ]
fld [ ebp - 0x18 ]
fstp [ esp + 0x8 ]
fld [ ebp - 0x14 ]
fstp [ esp + 0x4 ]
fld [ ebp - 0x10 ]
fstp [ esp ]
push eax
push ecx
call GdipDrawRectangle
test eax eax
je r-xdata
mov [ ebx + 0x4 ] eax
mov [ ebp - 0x4 ] 0x3
mov edx [ ebp - 0x20 ]
push edx
call GdipDeletePen
mov [ ebp - 0x4 ] 0x2
mov eax [ ebp - 0x44 ]
push eax
mov [ ebp - 0x48 ] r--data
call GdipDeleteBrush
add esi 0x10
sub [ ebp + 0x1c ] 0x1
jne r-xdata
mov [ ebx + 0x4 ] eax
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp - 0x28 ]
push ecx
call GdipDeletePen
mov [ ebp - 0x4 ] 0x0
mov edx [ ebp - 0x30 ]
push edx
call GdipDeletePen
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x38 ]
push eax
mov [ ebp - 0x3c ] r--data
call GdipDeleteBrush
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
sub_40e610
push ebp
mov ebp esp
push 0xffffffff
push sub_41b828
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
push ecx
mov [ ebp - 0x14 ] esp
mov [ ebp - 0x14 ] esp
call sub_40a920
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_40e670
push ebp
mov ebp esp
push esi
mov esi [ ecx + 0x8 ]
xor eax eax
push edi
test esi esi
jle r-xdata
pop edi
xor eax eax
pop esi
pop ebp
retn 0x4
mov edx [ ebp + 0x8 ]
mov edi [ edx ]
mov edx [ ecx ]
cmp eax 0xffffffff
jne r-xdata
inc eax
add edx 0x4
cmp eax esi
jl r-xdata
test eax eax
jl r-xdata
cmp [ edx ] edi
je r-xdata
pop edi
xor eax eax
pop esi
pop ebp
retn 0x4
push 0x0
push 0x0
push 0x1
push 0xc000008c
call [ RaiseException@IAT ]
int3
cmp eax esi
jge r-xdata
mov ecx [ ecx + 0x4 ]
mov eax [ ecx + eax * 4 ]
pop edi
pop esi
pop ebp
retn 0x4
sub_40e6d0
push ebp
mov ebp esp
push esi
mov esi ecx
cmp [ esi + 0x14 ] 0x0
jne r-xdata
mov eax [ esi + 0x14 ]
mov ecx 0xfffffff3
push 0xd
sub ecx eax
push eax
mov [ eax ] 0x42444c7
mov [ eax + 0x4 ] 0x0
mov [ eax + 0x8 ] 0xe9
mov [ eax + 0x9 ] ecx
call [ GetCurrentProcess@IAT ]
push eax
call [ FlushInstructionCache@IAT ]
cmp [ ebp + 0x20 ] 0x0
je r-xdata
call j_sub_4197a0
mov [ esi + 0x14 ] eax
test eax eax
je r-xdata
xor eax eax
pop esi
pop ebp
retn 0x20
push ebx
push edi
push esi
lea edx [ esi + 0x8 ]
push edx
push rw-data
call sub_404250
mov edi [ ebp + 0x1c ]
mov ebx [ ebp + 0x14 ]
test edi edi
jne r-xdata
push 0xe
call [ SetLastError@IAT ]
mov eax [ ebp + 0xc ]
test eax eax
jne r-xdata
test ebx 0x40000000
je r-xdata
mov esi [ ebp + 0x24 ]
mov ecx [ eax + 0x4 ]
mov edx [ eax ]
push esi
mov esi [ rw-data ]
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
mov esi [ eax + 0xc ]
mov eax [ eax + 0x8 ]
sub esi ecx
push esi
sub eax edx
push eax
mov eax [ ebp + 0x18 ]
push ecx
mov ecx [ ebp + 0x10 ]
push edx
movzx edx [ ebp + 0x20 ]
push ebx
push ecx
push edx
push eax
call [ CreateWindowExW@IAT ]
pop edi
pop ebx
pop esi
pop ebp
retn 0x20
mov eax rw-data
mov [ ebp + 0xc ] eax
mov edi esi
mov [ ebp + 0x1c ] edi
sub_40e7b0
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
mov eax ecx
sub eax edx
sar eax 0x2
add eax eax
add eax eax
push esi
mov esi [ ebp + 0x10 ]
push edi
mov edi eax
mov eax esi
sub eax edi
cmp edx ecx
je r-xdata
pop edi
pop esi
pop ebp
retn
sub esi ecx
mov edi [ ecx - 0x4 ]
sub ecx 0x4
mov [ esi + ecx ] edi
cmp ecx edx
jne r-xdata
sub_40e810
push ebp
mov ebp esp
push 0xffffffff
push sub_41b860
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov eax [ rw-data ]
add eax 0x10
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0x4 ] 0x1
mov eax [ ebp - 0x14 ]
push eax
call [ EnterCriticalSection@IAT ]
lea ecx [ ebp + 0x8 ]
push ecx
mov ecx [ esi + 0x34 ]
mov [ ebp - 0x10 ] 0x1
call sub_40e670
mov edx [ ebp - 0x14 ]
push edx
mov esi eax
call [ LeaveCriticalSection@IAT ]
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_4043c0
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_40e8a0
push ebp
mov ebp esp
sub esp 0x200
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push 0x1f4
lea eax [ ebp - 0x1f8 ]
push 0x0
push eax
mov esi ecx
mov [ ebp - 0x1fc ] 0x1f4
call memset
mov edx [ ebp - 0x1fc ]
add esp 0xc
push 0x0
lea ecx [ ebp - 0x1fc ]
push ecx
push edx
push 0x29
call [ SystemParametersInfoW@IAT ]
fild [ ebp - 0x64 ]
fmul [ r--data ]
call sub_419350
cmp [ ebp - 0x54 ] 0x1f4
mov [ ebp - 0x64 ] eax
jg r-xdata
lea eax [ ebp - 0x64 ]
push eax
call [ CreateFontIndirectW@IAT ]
mov [ esi + 0x70 ] eax
mov ecx [ esi + 0x74 ]
push 0x0
push ecx
call GdipSetStringFormatHotkeyPrefix
test eax eax
je r-xdata
mov [ ebp - 0x54 ] 0x1f4
mov edx [ esi + 0x74 ]
push 0x1000
push edx
call GdipSetStringFormatFlags
test eax eax
je r-xdata
mov [ esi + 0x78 ] eax
mov eax [ esi + 0x74 ]
push 0x1
push eax
call GdipSetStringFormatLineAlign
test eax eax
je r-xdata
mov [ esi + 0x78 ] eax
mov ecx [ esi + 0x74 ]
push 0x3
push ecx
call GdipSetStringFormatTrimming
test eax eax
je r-xdata
mov [ esi + 0x78 ] eax
call [ GetCurrentThreadId@IAT ]
push eax
mov ecx rw-data
call sub_40e810
lea edx [ ebp - 0x200 ]
add esi 0x24
push edx
lea ecx [ eax + 0x4 ]
mov [ ebp - 0x200 ] esi
call sub_40dce0
mov ecx [ ebp - 0x4 ]
xor ecx ebp
xor eax eax
pop esi
call sub_401736
mov esp ebp
pop ebp
retn 0x4
mov [ esi + 0x78 ] eax
sub_40e9b0
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
call [ GetCurrentThreadId@IAT ]
push eax
mov ecx rw-data
call sub_40e810
test esi esi
je r-xdata
lea ecx [ ebp - 0x4 ]
push ecx
lea ecx [ eax + 0x4 ]
mov [ ebp - 0x4 ] 0x0
call sub_40dd60
pop esi
mov esp ebp
pop ebp
retn
lea ecx [ ebp - 0x4 ]
add esi 0x24
push ecx
lea ecx [ eax + 0x4 ]
mov [ ebp - 0x4 ] esi
call sub_40dd60
pop esi
mov esp ebp
pop ebp
retn
sub_40ea00
push ebp
mov ebp esp
push 0xffffffff
push sub_41b888
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
push ecx
mov [ ebp - 0x14 ] esp
mov [ ebp - 0x14 ] esp
call sub_40e610
xor eax eax
mov [ ebp - 0x4 ] eax
mov [ esi + 0xc ] eax
mov [ esi + 0x10 ] eax
mov [ esi + 0x14 ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
sub_40ea60
push ebp
mov ebp esp
push ecx
mov edx [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp + 0x10 ]
push edx
add ecx 0x8
push ecx
push eax
push esi
push edi
call sub_40ddd0
add esp 0x18
lea eax [ edi + esi * 4 ]
pop edi
pop esi
mov esp ebp
pop ebp
retn 0xc
sub_40eaa0
push ebp
mov ebp esp
push ecx
mov edx [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp + 0x10 ]
push edx
add ecx 0x8
push ecx
push eax
push esi
push edi
call sub_40de50
add esp 0x18
lea eax [ edi + esi * 8 ]
pop edi
pop esi
mov esp ebp
pop ebp
retn 0xc
sub_40eae0
push ebp
mov ebp esp
sub esp 0x14
push esi
push edi
mov edi [ GetFocus@IAT ]
mov esi ecx
call edi
push eax
mov eax [ esi + 0x4 ]
push eax
call [ IsChild@IAT ]
test eax eax
je r-xdata
pop edi
xor eax eax
pop esi
mov esp ebp
pop ebp
retn
call edi
push eax
call [ GetDlgCtrlID@IAT ]
lea ecx [ ebp - 0x4 ]
push ecx
lea edx [ ebp - 0x14 ]
mov edi eax
push edx
lea ecx [ esi + 0x38 ]
mov [ ebp - 0x4 ] edi
call sub_40ab50
mov edx [ ebp - 0x8 ]
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0xc ]
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx [ ebp - 0x10 ]
push edx
mov edx [ ebp - 0x14 ]
push eax
push ecx
push edx
call sub_40a3a0
add esp 0x18
cmp [ ebp - 0x4 ] 0x0
jbe r-xdata
movzx eax di
pop edi
or eax 0x534b0000
pop esi
mov esp ebp
pop ebp
retn
sub_40eb70
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
push esi
mov esi ecx
je r-xdata
mov ecx [ esi + 0x4 ]
push 0x0
push 0xfa
push 0xe9e
push ecx
call [ SetTimer@IAT ]
pop esi
pop ebp
retn 0x4
push ebx
mov ebx [ _invalid_parameter_noinfo@IAT ]
push edi
mov edi [ esi + 0x64 ]
cmp edi [ esi + 0x68 ]
jbe r-xdata
mov eax [ esi + 0x58 ]
test eax eax
jne r-xdata
call ebx
mov eax [ eax ]
jmp r-xdata
call ebx
xor eax eax
cmp edi [ eax + 0x10 ]
jb r-xdata
mov eax [ edi ]
push eax
call [ SetFocus@IAT ]
pop edi
pop ebx
call ebx
sub_40ebd0
push ebp
mov ebp esp
sub esp 0x60
xor eax eax
push edi
mov [ ebp - 0x5c ] eax
mov [ ebp - 0x58 ] eax
mov [ ebp - 0x54 ] eax
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x4c ] eax
mov [ ebp - 0x48 ] eax
mov [ ebp - 0x44 ] eax
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x3c ] eax
mov edi ecx
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x60 ]
push eax
push ecx
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x60 ] 0x28
call [ GetMonitorInfoW@IAT ]
test eax eax
je r-xdata
pop edi
mov esp ebp
pop ebp
retn 0x4
push ebx
push esi
mov esi [ CopyRect@IAT ]
lea edx [ ebp - 0x4c ]
push edx
lea eax [ ebp - 0x28 ]
push eax
call esi
mov eax [ ebp - 0x20 ]
sub eax [ ebp - 0x28 ]
mov ecx [ edi + 0x84 ]
cdq
sub eax edx
sar eax 0x1
cmp ecx eax
jge r-xdata
lea ecx [ ebp - 0x4c ]
push ecx
lea edx [ ebp - 0x38 ]
push edx
call esi
mov eax [ ebp - 0x30 ]
sub eax [ ebp - 0x38 ]
cdq
sub eax edx
sar eax 0x1
mov [ ebp + 0x8 ] eax
mov [ ebp + 0x8 ] ecx
jmp r-xdata
mov edi [ edi + 0x58 ]
mov ebx esi
jmp r-xdata
call [ _invalid_parameter_noinfo@IAT ]
mov ecx [ edi + 0x4 ]
lea eax [ ebp - 0x18 ]
push eax
push ecx
call [ GetClientRect@IAT ]
mov edx [ ebp - 0xc ]
sub edx [ ebp - 0x14 ]
mov eax [ ebp + 0x8 ]
mov ecx [ edi + 0x4 ]
push 0x16
push edx
push eax
push 0x0
push 0x0
push 0x0
push ecx
call [ SetWindowPos@IAT ]
mov esi [ edi + 0x64 ]
cmp esi [ edi + 0x68 ]
jbe r-xdata
mov esi [ ebp - 0x4 ]
mov eax [ esi + 0x68 ]
mov [ ebp - 0x8 ] eax
cmp [ esi + 0x64 ] eax
jbe r-xdata
mov eax [ esi + 0x58 ]
test edi edi
je r-xdata
call [ _invalid_parameter_noinfo@IAT ]
call [ _invalid_parameter_noinfo@IAT ]
cmp edi eax
je r-xdata
mov ecx esi
call sub_40ce60
pop esi
pop ebx
test edi edi
jne r-xdata
cmp ebx [ ebp - 0x8 ]
je r-xdata
mov eax [ edi ]
jmp r-xdata
call [ _invalid_parameter_noinfo@IAT ]
xor eax eax
cmp ebx [ eax + 0x10 ]
jb r-xdata
mov eax [ ebx ]
lea edx [ ebp - 0x18 ]
push edx
push eax
call [ GetClientRect@IAT ]
mov esi [ ebp - 0xc ]
sub esi [ ebp - 0x14 ]
test edi edi
jne r-xdata
call [ _invalid_parameter_noinfo@IAT ]
mov eax [ edi ]
jmp r-xdata
call [ _invalid_parameter_noinfo@IAT ]
xor eax eax
cmp ebx [ eax + 0x10 ]
jb r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ebx ]
push 0x16
push esi
push ecx
push 0x0
push 0x0
push 0x0
push edx
call [ SetWindowPos@IAT ]
test edi edi
jne r-xdata
call [ _invalid_parameter_noinfo@IAT ]
mov eax [ edi ]
jmp r-xdata
call [ _invalid_parameter_noinfo@IAT ]
xor eax eax
cmp ebx [ eax + 0x10 ]
jb r-xdata
add ebx 0x4
jmp r-xdata
call [ _invalid_parameter_noinfo@IAT ]
sub_40ed60
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov edi ecx
mov [ ebx ] 0x0
test edi edi
je r-xdata
call [ _invalid_parameter_noinfo@IAT ]
mov eax [ ebp + 0x10 ]
mov eax [ ebp + 0x10 ]
cmp [ edi + 0xc ] eax
ja r-xdata
call [ _invalid_parameter_noinfo@IAT ]
mov esi [ ebp + 0x18 ]
cmp esi [ edi + 0x10 ]
jbe r-xdata
cmp eax [ edi + 0x10 ]
jbe r-xdata
call [ _invalid_parameter_noinfo@IAT ]
cmp eax ecx
je r-xdata
mov eax [ ebx ]
mov ecx [ edi ]
test eax eax
je r-xdata
mov esi [ ebp + 0x18 ]
mov ecx [ edi ]
mov [ ebx ] ecx
mov [ ebx + 0x4 ] eax
cmp [ edi + 0xc ] esi
ja r-xdata
pop edi
pop esi
mov eax ebx
pop ebx
pop ebp
retn 0x14
mov ecx [ edi + 0x10 ]
mov eax ecx
sub eax esi
sar eax 0x2
lea eax [ edx + eax * 4 ]
mov [ ebp + 0x8 ] eax
mov eax esi
cmp esi ecx
je r-xdata
mov edx [ ebx + 0x4 ]
cmp edx esi
je r-xdata
mov ecx [ ebp + 0x8 ]
mov [ edi + 0x10 ] ecx
sub edx esi
lea esp [ esp ]
mov esi [ eax ]
mov [ edx + eax ] esi
add eax 0x4
cmp eax ecx
jne r-xdata
sub_40ee00
push esi
mov esi ecx
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
mov [ esi + 0xc ] 0x0
mov [ esi + 0x10 ] 0x0
mov [ esi + 0x14 ] 0x0
pop esi
retn
push eax
call ??3@YAXPAX@Z
add esp 0x4
sub_40ee30
push ebp
mov ebp esp
push ecx
mov edx [ ebp + 0x10 ]
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp + 0x10 ]
push edx
mov edx [ ebp + 0x8 ]
add ecx 0x8
push ecx
mov ecx [ ebp + 0xc ]
push eax
push ecx
push edx
call sub_40d4c0
add esp 0x18
mov esp ebp
pop ebp
retn 0xc
sub_40ee60
push ebp
mov ebp esp
sub esp 0x24
push ebx
push esi
mov esi ecx
lea eax [ ebp + 0xc ]
push eax
lea ecx [ ebp - 0x24 ]
lea ebx [ esi + 0x38 ]
push ecx
mov ecx ebx
call sub_40ab50
mov edx [ ebp + 0xc ]
mov ecx [ ebp - 0x18 ]
push edx
mov edx [ ebp - 0x1c ]
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x20 ]
push ecx
mov ecx [ ebp - 0x24 ]
push edx
push eax
push ecx
mov [ ebp - 0x4 ] 0x0
call sub_40a3a0
add esp 0x18
cmp [ ebp - 0x4 ] 0x0
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
push edi
push 0xffffffff
call [ AllowSetForegroundWindow@IAT ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
lea eax [ ebp - 0x14 ]
push eax
push ecx
mov [ esi + 0x7c ] 0x1
mov [ esi + 0x80 ] edx
call [ GetWindowRect@IAT ]
mov esi [ ebp - 0x8 ]
mov edi [ ebp - 0xc ]
sub esi [ ebp - 0x10 ]
sub edi [ ebp - 0x14 ]
lea edx [ ebp + 0xc ]
push edx
mov ecx ebx
call sub_40b210
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x14 ]
push esi
push edi
push ecx
mov ecx [ eax ]
push edx
call sub_411280
pop edi
sub_40ef00
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
push ebx
push esi
push edi
mov esi ecx
jne r-xdata
mov eax [ ebp + 0x14 ]
push eax
lea ecx [ esi + 0x20 ]
push ecx
push rw-data
push rw-data
push rw-data
call sub_406070
mov ecx [ ebp + 0x14 ]
add esp 0x14
movzx edi ax
test ecx ecx
jne r-xdata
mov [ rw-data ] 0x0
mov edx [ ebp + 0x18 ]
test edx edx
jne r-xdata
mov ecx 0x86000000
mov eax [ ebp + 0x10 ]
test eax eax
jne r-xdata
mov edx 0x88
mov ebx [ ebp + 0x20 ]
push ebx
push edi
mov edi [ ebp + 0x1c ]
push edi
push edx
mov edx [ ebp + 0xc ]
push ecx
push eax
mov eax [ ebp + 0x8 ]
push edx
push eax
mov ecx esi
call sub_40e6d0
pop edi
pop esi
pop ebx
pop ebp
retn 0x1c
sub_40ef80
push ebp
mov ebp esp
push 0xffffffff
push sub_41b8c0
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
xor edi edi
mov [ ebp - 0x4 ] edi
mov eax [ esi + 0xc ]
cmp eax edi
je r-xdata
mov [ esi + 0xc ] edi
mov [ esi + 0x10 ] edi
mov [ esi + 0x14 ] edi
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ esi ]
push eax
call ??3@YAXPAX@Z
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
push eax
call ??3@YAXPAX@Z
add esp 0x4
sub_40eff0
push ebp
mov ebp esp
push 0xffffffff
push sub_41b8e0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi ecx
mov [ ebp - 0x14 ] esi
xor ebx ebx
mov [ esi + 0xc ] ebx
mov [ esi + 0x10 ] ebx
mov [ esi + 0x14 ] ebx
mov edi [ ebp + 0x8 ]
cmp edi ebx
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp edi 0x1fffffff
jbe r-xdata
push edi
lea ecx [ esi + 0x8 ]
call sub_40d3b0
mov [ esi + 0xc ] eax
mov [ esi + 0x10 ] eax
lea eax [ eax + edi * 8 ]
mov [ esi + 0x14 ] eax
mov [ ebp - 0x4 ] ebx
mov ecx [ ebp + 0xc ]
push ecx
push edi
mov edx [ esi + 0xc ]
push edx
mov ecx esi
call sub_40eaa0
mov [ esi + 0x10 ] eax
mov [ ebp - 0x4 ] 0xffffffff
call sub_40c490
sub_40f0a0
push ebp
mov ebp esp
push 0xffffffff
push sub_41b900
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi ecx
mov edx [ esi + 0xc ]
test edx edx
jne r-xdata
mov eax [ esi + 0x14 ]
sub eax edx
sar eax 0x2
mov ecx eax
xor ecx ecx
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov ebx [ esi + 0x10 ]
mov eax ebx
sub eax edx
sar eax 0x2
mov edx 0x3fffffff
sub edx eax
cmp edx edi
jae r-xdata
mov edi [ ebp + 0x10 ]
test edi edi
je r-xdata
lea edx [ eax + edi ]
cmp ecx edx
jae r-xdata
call sub_40c490
mov ecx ebx
mov eax [ ebp + 0xc ]
sub ecx eax
sar ecx 0x2
cmp ecx edi
jae r-xdata
mov eax ecx
shr eax 0x1
mov ebx 0x3fffffff
sub ebx eax
cmp ebx ecx
jae r-xdata
mov ecx [ ebp + 0x14 ]
mov edx [ ecx ]
mov [ ebp + 0x10 ] edx
lea eax [ edi * 4 ]
mov [ ebp + 0x14 ] eax
mov edi ebx
sub edi eax
push ebx
push ebx
push edi
mov ecx esi
call sub_40ee30
mov [ esi + 0x10 ] eax
push ebx
push edi
mov eax [ ebp + 0xc ]
push eax
call sub_40e7b0
lea ecx [ ebp + 0x10 ]
push ecx
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x14 ]
add edx eax
push edx
push eax
call sub_40ddb0
add esp 0x18
mov edx [ ebp + 0x14 ]
mov ecx [ edx ]
mov [ ebp + 0x10 ] ecx
lea ecx [ edi * 4 ]
mov [ ebp + 0x14 ] ecx
add ecx eax
push ecx
push ebx
push eax
mov ecx esi
call sub_40ee30
mov [ ebp - 0x4 ] 0x2
mov eax [ esi + 0x10 ]
lea edx [ ebp + 0x10 ]
push edx
mov ecx eax
sub ecx [ ebp + 0xc ]
sar ecx 0x2
sub edi ecx
push edi
push eax
mov ecx esi
call sub_40ea60
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp + 0x14 ]
add [ esi + 0x10 ] eax
mov esi [ esi + 0x10 ]
lea edx [ ebp + 0x10 ]
push edx
sub esi eax
push esi
mov eax [ ebp + 0xc ]
push eax
call sub_40ddb0
add esp 0xc
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
add ecx eax
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x14 ] 0x0
mov ecx [ ebp - 0x14 ]
jmp r-xdata
push ecx
lea ecx [ esi + 0x8 ]
call sub_402b30
mov [ ebp + 0x10 ] eax
mov ebx [ ebp + 0xc ]
sub ebx [ esi + 0xc ]
sar ebx 0x2
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp + 0x14 ]
push ecx
push edi
lea edx [ eax + ebx * 4 ]
push edx
mov ecx esi
call sub_40ea60
mov [ ebp - 0x18 ] 0x1
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ esi + 0xc ]
push edx
mov ecx esi
call sub_40ee30
mov [ ebp - 0x18 ] 0x2
lea eax [ ebx + edi ]
mov ebx [ ebp + 0x10 ]
lea ecx [ ebx + eax * 4 ]
push ecx
mov edx [ esi + 0x10 ]
push edx
mov eax [ ebp + 0xc ]
push eax
mov ecx esi
call sub_40ee30
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ esi + 0xc ]
mov ecx [ esi + 0x10 ]
sub ecx eax
sar ecx 0x2
add edi ecx
test eax eax
je r-xdata
mov [ ebp - 0x14 ] edx
mov ecx edx
cmp ecx edx
jae r-xdata
mov edx [ ebp - 0x14 ]
lea eax [ ebx + edx * 4 ]
mov [ esi + 0x14 ] eax
lea ecx [ ebx + edi * 4 ]
mov [ esi + 0x10 ] ecx
mov [ esi + 0xc ] ebx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
push eax
call ??3@YAXPAX@Z
add esp 0x4
sub_40f2e0
push ebp
mov ebp esp
push 0xffffffff
push sub_41b888
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
push ecx
mov [ ebp - 0x14 ] esp
mov [ ebp - 0x14 ] esp
call sub_40e610
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
push eax
push ecx
mov ecx esi
call sub_40eff0
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_40f350
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
mov esi ecx
mov eax [ esi + 0x10 ]
push edi
mov edi [ esi + 0xc ]
mov ecx eax
sub ecx edi
test ecx 0xfffffffc
jne r-xdata
cmp edi eax
jbe r-xdata
xor ebx ebx
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ esi ]
test ecx ecx
je r-xdata
call [ _invalid_parameter_noinfo@IAT ]
mov edx [ ebp + 0x14 ]
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
push edx
push 0x1
push eax
push ecx
mov ecx esi
call sub_40f0a0
mov edi [ esi + 0xc ]
cmp edi [ esi + 0x10 ]
jbe r-xdata
call [ _invalid_parameter_noinfo@IAT ]
cmp ecx eax
je r-xdata
mov esi [ esi ]
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] edi
test esi esi
jne r-xdata
call [ _invalid_parameter_noinfo@IAT ]
mov ebx [ ebp + 0x10 ]
sub ebx edi
sar ebx 0x2
mov eax [ esi ]
jmp r-xdata
call [ _invalid_parameter_noinfo@IAT ]
xor eax eax
lea edi [ edi + ebx * 4 ]
cmp edi [ eax + 0x10 ]
ja r-xdata
call [ _invalid_parameter_noinfo@IAT ]
test esi esi
je r-xdata
xor esi esi
mov esi [ esi ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x4 ] edi
pop edi
pop esi
mov [ eax ] edx
pop ebx
mov esp ebp
pop ebp
retn 0x10
cmp edi [ esi + 0xc ]
jae r-xdata
sub_40f410
push ebp
mov ebp esp
push 0xffffffff
push sub_41b958
mov eax [ fs : 0x0 ]
push eax
sub esp 0x54
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx [ GetModuleHandleW@IAT ]
xor esi esi
cmp [ ebp + 0x1c ] 0x0
mov eax 0xa
mov [ ebp - 0x48 ] esi
mov [ ebp - 0x44 ] esi
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x3c ] eax
je r-xdata
fld [ ebp + 0x14 ]
sub eax [ ebp - 0x48 ]
fadd [ ebp + 0xc ]
mov [ ebp + 0x1c ] eax
fisub [ ebp + 0x1c ]
fsub [ r--data ]
call sub_419350
fld [ ebp + 0x18 ]
fmul [ r--data ]
mov esi eax
mov eax [ ebp - 0x3c ]
sub eax [ ebp - 0x44 ]
fadd [ ebp + 0x10 ]
mov [ ebp - 0x18 ] esi
cdq
sub eax edx
sar eax 0x1
mov [ ebp + 0x1c ] eax
fisub [ ebp + 0x1c ]
call sub_419350
mov edi eax
push r--data
mov [ ebp - 0x14 ] edi
call ebx
xor ebx ebx
cmp eax ebx
je r-xdata
push r--data
call ebx
cmp eax esi
je r-xdata
mov esi [ ebp + 0x8 ]
mov edx [ esi ]
lea ecx [ ebp - 0x10 ]
push ecx
push edx
mov [ ebp - 0x10 ] ebx
call GdipGetDC
cmp eax ebx
je r-xdata
push r--data
push eax
call [ GetProcAddress@IAT ]
cmp eax ebx
je r-xdata
fld [ ebp + 0xc ]
fld1
fadd st1
fxch st1
fstp [ ebp + 0xc ]
fadd [ ebp + 0x10 ]
fstp [ ebp + 0x10 ]
push r--data
push eax
call [ GetProcAddress@IAT ]
cmp eax esi
je r-xdata
mov esi [ ebp - 0x10 ]
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x4 ] 0x2
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x4 ] 0x3
mov [ ebp + 0x1c ] ebx
mov [ ebp - 0x4 ] 0x4
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x4 ] 0x5
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x28 ] 0xffffffff
mov [ ebp - 0x4 ] 0x6
push esi
call [ CreateCompatibleDC@IAT ]
mov edi eax
mov [ ebp - 0x1c ] edi
mov eax [ ebp - 0x3c ]
sub eax [ ebp - 0x44 ]
mov ecx [ ebp - 0x40 ]
sub ecx [ ebp - 0x48 ]
push ebx
push 0x1
push 0x1
push eax
push ecx
call [ CreateBitmap@IAT ]
mov ebx eax
mov [ ebp + 0x1c ] ebx
test edi edi
je r-xdata
mov [ esi + 0x4 ] eax
call eax
test eax eax
je r-xdata
call eax
test eax eax
jne r-xdata
push ebx
push edi
call [ SelectObject@IAT ]
push 0x0
push 0x2
lea eax [ ebp - 0x48 ]
push eax
push edi
call [ DrawFrameControl@IAT ]
call [ wui::util::IsHighContrastOn@IAT ]
test al al
je r-xdata
push edi
mov [ ebp - 0x2c ] edi
call [ SaveDC@IAT ]
mov [ ebp - 0x28 ] eax
lea eax [ ebp + 0x1c ]
push eax
lea ecx [ ebp - 0x38 ]
mov [ ebp + 0x1c ] 0xff000000
call sub_40d180
mov [ ebp - 0x4 ] ebx
lea ecx [ ebp - 0x2c ]
push ecx
push 0x3
lea ecx [ ebp - 0x60 ]
mov [ ebp - 0x2c ] esi
mov [ ebp - 0x28 ] edi
call sub_40f2e0
mov [ ebp - 0x4 ] 0x1
mov eax [ ebp - 0x50 ]
mov ecx [ ebp - 0x54 ]
mov edi [ _invalid_parameter_noinfo@IAT ]
mov edx eax
sub edx ecx
sar edx 0x3
test edx edx
ja r-xdata
mov eax [ ebp - 0x40 ]
mov eax [ ebp - 0x3c ]
sub eax [ ebp - 0x44 ]
mov ecx [ ebp - 0x40 ]
sub ecx [ ebp - 0x48 ]
push 0x8800c6
push 0x0
push 0x0
push edi
push eax
mov eax [ ebp - 0x14 ]
push ecx
mov ecx [ ebp - 0x18 ]
push eax
push ecx
push esi
call [ BitBlt@IAT ]
mov ebx [ GetSysColor@IAT ]
push 0x12
call ebx
push eax
push esi
call [ SetTextColor@IAT ]
push 0xf
call ebx
push eax
push esi
call [ SetBkColor@IAT ]
mov eax [ ebp - 0x3c ]
sub eax [ ebp - 0x44 ]
mov ecx [ ebp - 0x40 ]
sub ecx [ ebp - 0x48 ]
mov edx [ ebp - 0x18 ]
push 0xcc0020
push 0x0
push 0x0
push edi
push eax
push ecx
mov ecx [ ebp - 0x14 ]
push ecx
push edx
push esi
call [ BitBlt@IAT ]
mov ebx [ ebp + 0x1c ]
jmp r-xdata
sub eax ecx
sar eax 0x3
mov esi ecx
cmp eax 0x1
ja r-xdata
call edi
mov eax [ ebp - 0x50 ]
mov ecx [ ebp - 0x54 ]
mov [ ebp - 0x4 ] 0x5
mov eax [ ebp - 0x28 ]
cmp eax 0xffffffff
je r-xdata
mov [ esi + 0x4 ] eax
push esi
mov esi [ ebp + 0x8 ]
mov edx [ esi ]
push edx
call GdipReleaseDC
test eax eax
je r-xdata
mov eax [ esi ]
add eax 0x4
mov [ ecx + 0x8 ] eax
mov eax [ ebp - 0x50 ]
mov ecx [ ebp - 0x54 ]
mov edx eax
sub edx ecx
sar edx 0x3
test edx edx
ja r-xdata
call edi
mov ecx [ ebp - 0x54 ]
mov [ ebp - 0x4 ] 0x3
test ebx ebx
je r-xdata
push eax
mov eax [ ebp - 0x2c ]
push eax
call [ RestoreDC@IAT ]
sub eax ecx
sar eax 0x3
mov esi ecx
cmp eax 0x1
ja r-xdata
call edi
mov eax [ ebp - 0x50 ]
mov ecx [ ebp - 0x54 ]
mov [ ebp - 0x4 ] 0x2
test edi edi
je r-xdata
push ebx
call [ DeleteObject@IAT ]
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
add eax 0x4
mov [ ecx + 0xc ] eax
mov eax [ ebp - 0x50 ]
mov ecx [ ebp - 0x54 ]
mov edx eax
sub edx ecx
sar edx 0x3
test edx edx
ja r-xdata
call edi
mov ecx [ ebp - 0x54 ]
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
push edi
mov [ ebp - 0x1c ] 0x0
call [ DeleteDC@IAT ]
mov [ ebp + 0x1c ] 0x0
sub eax ecx
sar eax 0x3
mov esi ecx
cmp eax 0x2
ja r-xdata
call edi
mov eax [ ebp - 0x50 ]
mov ecx [ ebp - 0x54 ]
mov eax [ esi + 0x4 ]
add eax 0x8
mov [ ecx + 0x14 ] eax
mov esi [ ebp - 0x50 ]
sub esi [ ebp - 0x54 ]
sar esi 0x3
cmp esi ebx
ja r-xdata
call edi
mov ecx [ ebp - 0x54 ]
mov ecx [ ebp - 0x54 ]
mov edx [ ebp - 0x34 ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi ]
push ecx
push edx
push eax
call GdipFillPolygonI
cmp eax ebx
je r-xdata
call edi
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x60 ]
call sub_40ef80
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x38 ]
call sub_40cf30
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
mov [ esi + 0x4 ] eax
sub_40f7c0
push ebp
mov ebp esp
sub esp 0x8
push esi
mov esi ecx
mov ecx [ esi + 0xc ]
push edi
test ecx ecx
jne r-xdata
mov eax [ esi + 0x14 ]
sub eax ecx
sar eax 0x2
xor eax eax
jmp r-xdata
cmp ecx edi
jbe r-xdata
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
push ecx
lea edx [ esi + 0x8 ]
push edx
push eax
push 0x1
push edi
call sub_40ddd0
add esp 0x18
add edi 0x4
mov [ esi + 0x10 ] edi
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
mov edi [ esi + 0x10 ]
mov edx edi
sub edx ecx
sar edx 0x2
cmp edx eax
jae r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ esi ]
push ecx
push edi
push eax
lea edx [ ebp - 0x8 ]
push edx
mov ecx esi
call sub_40f350
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
call [ _invalid_parameter_noinfo@IAT ]
sub_40f840
push ebp
mov ebp esp
push 0xffffffff
push sub_41b9d3
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
call sub_40a770
mov [ ebp - 0x4 ] 0x1
mov [ esi + 0x24 ] r--data
lea edi [ esi + 0x28 ]
xor ebx ebx
mov [ edi ] ebx
call sub_40db10
mov [ edi + 0x4 ] ebx
mov [ edi + 0x8 ] ebx
mov [ ebp - 0x4 ] 0x2
lea ecx [ esi + 0x34 ]
call [ sigc::trackable::trackable@IAT ]
mov [ ebp - 0x4 ] 0x3
lea ecx [ esi + 0x38 ]
mov [ esi ] r--data
mov [ esi + 0x24 ] r--data
call sub_40b6b0
mov [ ebp - 0x4 ] 0x4
lea ecx [ esi + 0x58 ]
call sub_40ea00
mov [ ebp - 0x4 ] 0x5
mov [ esi + 0x70 ] ebx
mov [ ebp - 0x4 ] 0x6
lea ebx [ esi + 0x74 ]
push ebx
push 0x0
push 0x0
mov [ ebx ] 0x0
call GdipCreateStringFormat
mov [ ebx + 0x4 ] eax
mov [ ebp - 0x4 ] 0x7
or ebx 0xffffffff
push r--data
mov ecx edi
mov [ esi + 0x7c ] 0x0
mov [ esi + 0x80 ] ebx
mov [ esi + 0x84 ] 0x0
call sub_40cf80
mov [ ebp - 0x4 ] ebx
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40f930
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi ]
test eax eax
je r-xdata
mov edx [ ebp + 0x14 ]
mov [ edx ] 0x0
mov eax 0x1
pop esi
pop ebp
retn 0x10
push eax
call [ CloseThemeData@IAT ]
test eax eax
jl r-xdata
mov ecx [ ebp + 0x14 ]
mov [ ecx ] 0x0
mov eax 0x1
pop esi
pop ebp
retn 0x10
mov eax [ ebp + 0x14 ]
mov [ esi ] 0x0
mov [ eax ] 0x0
mov eax 0x1
pop esi
pop ebp
retn 0x10
sub_40f990
push ebp
mov ebp esp
test ecx ecx
je r-xdata
xor eax eax
lea eax [ ecx - 0x28 ]
jmp r-xdata
mov ecx [ eax + 0x18 ]
mov [ ecx + 0x20 ] 0x1
mov edx [ eax + 0x18 ]
mov eax [ edx + 0x20 ]
mov ecx [ ebp + 0x14 ]
mov [ ecx ] eax
mov eax 0x1
pop ebp
retn 0x10
sub_40f9c0
push ebp
mov ebp esp
push 0xffffffff
push sub_41b9f8
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] 0x0
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0x8 ]
push eax
mov [ esi + 0x4 ] eax
call [ GetWindowDC@IAT ]
mov [ esi ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_40fa20
push ebp
mov ebp esp
push 0xffffffff
push sub_41b9f8
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] 0x0
mov eax [ esi ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov [ esi ] 0x0
call [ ReleaseDC@IAT ]
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ esi ]
test eax eax
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
push eax
mov [ esi ] 0x0
call [ DeleteDC@IAT ]
sub_40fa90
push ebp
mov ebp esp
push 0xffffffff
push sub_41ba30
mov eax [ fs : 0x0 ]
push eax
sub esp 0x24
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0xc ]
push esi
lea ecx [ ebp - 0x20 ]
call sub_40f9c0
xor ebx ebx
mov [ ebp - 0x4 ] ebx
cmp [ ebp - 0x20 ] ebx
jne r-xdata
mov edi [ GetSystemMetrics@IAT ]
push 0x5
call edi
push 0x6
mov [ ebp - 0x10 ] eax
call edi
mov ecx [ ebp + 0x1c ]
mov edx [ ebp + 0x18 ]
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
push 0x4b1
push ecx
push edx
push eax
call [ GetThemeInt@IAT ]
test eax eax
jl r-xdata
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x20 ]
call sub_40fa20
xor al al
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x30 ]
push edx
push esi
call [ GetWindowRect@IAT ]
push 0x2d
call edi
push 0x2e
mov esi eax
call edi
mov edi eax
neg eax
push eax
mov ecx esi
neg ecx
push ecx
lea edx [ ebp - 0x30 ]
push edx
call [ InflateRect@IAT ]
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x4 ] 0x1
lea eax [ ebp - 0x30 ]
push eax
call [ CreateRectRgnIndirect@IAT ]
mov [ ebp - 0x14 ] eax
cmp eax ebx
je r-xdata
mov ecx [ ebp - 0x10 ]
mov [ ebp - 0x18 ] ecx
mov ecx [ ebp + 0x10 ]
cmp ecx ebx
je r-xdata
mov ecx [ ebp - 0x2c ]
mov edx [ ebp - 0x30 ]
mov ebx [ OffsetRect@IAT ]
neg ecx
push ecx
neg edx
push edx
lea eax [ ebp - 0x30 ]
push eax
call ebx
push edi
push esi
lea ecx [ ebp - 0x30 ]
push ecx
call ebx
mov edx [ ebp - 0x24 ]
mov eax [ ebp - 0x28 ]
mov ecx [ ebp - 0x2c ]
push edx
mov edx [ ebp - 0x30 ]
push eax
mov eax [ ebp - 0x20 ]
push ecx
push edx
push eax
call [ ExcludeClipRect@IAT ]
push edi
push esi
lea ecx [ ebp - 0x30 ]
push ecx
call [ InflateRect@IAT ]
mov eax [ ebp + 0x1c ]
mov ecx [ ebp + 0x18 ]
push 0x0
lea edx [ ebp - 0x30 ]
push edx
mov edx [ ebp - 0x20 ]
push eax
mov eax [ ebp + 0x8 ]
push ecx
push edx
push eax
call [ DrawThemeBackground@IAT ]
mov eax [ ebp - 0x10 ]
cmp eax esi
jge r-xdata
push 0x1
push eax
push ecx
push eax
call [ CombineRgn@IAT ]
mov esi [ ebp - 0x14 ]
mov eax [ ebp + 0xc ]
push 0x0
push esi
push 0x85
push eax
call [ DefWindowProcW@IAT ]
mov [ ebp - 0x4 ] 0x0
push esi
call [ DeleteObject@IAT ]
test eax eax
je r-xdata
mov ebx [ ebp - 0x18 ]
cmp ebx edi
jge r-xdata
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x20 ]
call sub_40fa20
mov al 0x1
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x14 ] 0x0
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
sub ebx edi
push ebx
sub eax esi
push eax
lea edx [ ebp - 0x30 ]
push edx
call [ InflateRect@IAT ]
mov eax [ ebp + 0x14 ]
mov edx [ ebp - 0x20 ]
push eax
lea ecx [ ebp - 0x30 ]
push ecx
push edx
call [ FillRect@IAT ]
mov ecx [ ebp + 0xc ]
push 0xfffffff6
push ecx
call [ GetClassLongW@IAT ]
mov [ ebp + 0x14 ] eax
mov eax [ ebp - 0x10 ]
sub_40fc80
push ebp
mov ebp esp
push 0xffffffff
push sub_41ba58
mov eax [ fs : 0x0 ]
push eax
sub esp 0x44
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
cmp [ esi ] 0x1
je r-xdata
push 0xf
call [ GetSystemMetrics@IAT ]
mov [ esi + 0x10 ] eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
test ecx ecx
je r-xdata
xor ecx ecx
add ecx 0xffffffd8
jmp r-xdata
mov eax [ esi + 0x4 ]
push eax
mov eax [ ecx + 0x4 ]
push eax
call [ GetDlgItem@IAT ]
push eax
lea ecx [ ebp - 0x14 ]
call sub_40dab0
mov [ ebp - 0x4 ] 0x0
push 0x38
lea ecx [ ebp - 0x4c ]
push 0x0
push ecx
mov [ ebp - 0x50 ] 0x0
call memset
mov eax [ ebp - 0x14 ]
add esp 0xc
lea edx [ ebp - 0x50 ]
push edx
push eax
call [ GetTextMetricsW@IAT ]
mov ecx [ ebp - 0x50 ]
mov [ esi + 0x10 ] ecx
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_40fa20
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_40fd40
push ebx
push esi
mov esi ecx
test esi esi
je r-xdata
xor ebx ebx
lea ebx [ esi - 0x28 ]
jmp r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop esi
xor eax eax
pop ebx
retn
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov ebx [ ebx + 0x4 ]
push edi
mov edi [ esi + 0x4 ]
call sub_40db10
test al al
jne r-xdata
push eax
call [ CloseThemeData@IAT ]
test eax eax
jl r-xdata
push edi
push ebx
call [ OpenThemeData@IAT ]
pop edi
mov [ esi ] eax
pop esi
pop ebx
retn
pop edi
pop esi
xor eax eax
pop ebx
retn
mov [ esi ] 0x0
sub_40fda0
push ebp
mov ebp esp
test ecx ecx
je r-xdata
xor eax eax
lea eax [ ecx - 0x28 ]
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov ecx [ ecx ]
push 0x0
push 0x0
push 0x0
push edx
push eax
push ecx
call sub_40fa90
add esp 0x18
pop ebp
retn 0x4
sub_40fdd0
push ebp
mov ebp esp
push esi
test ecx ecx
je r-xdata
xor esi esi
lea esi [ ecx - 0x28 ]
jmp r-xdata
mov ecx [ ebp + 0x10 ]
mov eax [ esi + 0x18 ]
push ecx
lea ecx [ esi + 0x28 ]
mov [ eax + 0x20 ] 0x1
call sub_40fc80
mov edx [ esi + 0x18 ]
mov eax [ edx + 0x20 ]
mov ecx [ ebp + 0x14 ]
mov [ ecx ] eax
mov eax 0x1
pop esi
pop ebp
retn 0x10
sub_40fe10
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi ]
test eax eax
je r-xdata
cmp [ esi + 0x4 ] 0x0
je r-xdata
push eax
call [ CloseThemeData@IAT ]
test eax eax
jl r-xdata
mov ecx [ ebp + 0x14 ]
mov [ ecx ] 0x0
mov eax 0x1
pop esi
pop ebp
retn 0x10
mov ecx esi
call sub_40fd40
mov eax [ ebp + 0x14 ]
mov [ eax ] 0x0
mov eax 0x1
pop esi
pop ebp
retn 0x10
mov [ esi ] 0x0
sub_40fe60
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
push edi
test esi esi
je r-xdata
xor edi edi
lea edi [ esi - 0x28 ]
jmp r-xdata
pop edi
pop esi
mov eax ebx
pop ebx
pop ebp
retn 0x10
mov ecx [ edi + 0x4 ]
push 0xffffffec
push ecx
call [ GetWindowLongW@IAT ]
test eax 0x200
je r-xdata
mov eax [ ebp + 0x14 ]
xor ebx ebx
mov [ eax ] ebx
call sub_40db10
test al al
je r-xdata
mov eax [ esi + 0x8 ]
test al 0x1
je r-xdata
cmp [ esi ] ebx
je r-xdata
mov edx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
push edx
mov edx [ edi + 0x4 ]
push eax
push ecx
push edx
call [ DefWindowProcW@IAT ]
mov ecx [ ebp + 0x14 ]
pop edi
pop esi
mov [ ecx ] 0x1
pop ebx
pop ebp
retn 0x10
test al 0x2
je r-xdata
mov eax [ ebp + 0xc ]
mov edx eax
dec edx
neg edx
sbb edx edx
and edx eax
push edx
lea ecx [ edi + 0x28 ]
call sub_40fda0
test al al
je r-xdata
mov eax [ ebp + 0x14 ]
mov [ eax ] 0x1
sub_40ff00
push ebp
mov ebp esp
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
xor eax eax
pop ebp
retn 0x18
mov eax [ ebp + 0xc ]
cmp eax 0x1
jne r-xdata
cmp eax 0x2
jne r-xdata
cmp [ ecx + 0x4 ] 0x0
je r-xdata
cmp eax 0x31a
jne r-xdata
mov eax [ ebp + 0x14 ]
lea edx [ ebp + 0x1c ]
push edx
mov edx [ ebp + 0x10 ]
push eax
push edx
push 0x2
mov [ ebp + 0x1c ] 0x1
call sub_40f930
cmp [ ebp + 0x1c ] 0x0
mov ecx [ ebp + 0x18 ]
mov [ ecx ] eax
je r-xdata
mov eax [ ebp + 0x18 ]
mov [ eax ] 0x1
call sub_40fd40
cmp eax 0x85
jne r-xdata
mov eax [ ebp + 0x14 ]
lea edx [ ebp + 0x1c ]
push edx
mov edx [ ebp + 0x10 ]
push eax
push edx
push 0x31a
mov [ ebp + 0x1c ] 0x1
call sub_40fe10
cmp [ ebp + 0x1c ] 0x0
mov ecx [ ebp + 0x18 ]
mov [ ecx ] eax
je r-xdata
mov eax 0x1
pop ebp
retn 0x18
mov eax [ ebp + 0x14 ]
lea edx [ ebp + 0x1c ]
push edx
mov edx [ ebp + 0x10 ]
push eax
push edx
push 0x85
mov [ ebp + 0x1c ] 0x1
call sub_40fe60
cmp [ ebp + 0x1c ] 0x0
mov ecx [ ebp + 0x18 ]
mov [ ecx ] eax
je r-xdata
mov eax 0x1
pop ebp
retn 0x18
mov eax 0x1
pop ebp
retn 0x18
sub_40ffe0
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_407040
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call ??3@YAXPAX@Z
add esp 0x4
sub_410010
push ebp
mov ebp esp
push 0xffffffff
push sub_41baa8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x78
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
xor eax eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] 0xffffffff
mov [ ebp - 0x4 ] 0x2
mov edi [ ebp + 0x8 ]
lea eax [ edi + 0x1c ]
push eax
lea ecx [ ebp - 0x48 ]
push ecx
call [ CopyRect@IAT ]
mov eax [ edi + 0x18 ]
push eax
call [ CreateCompatibleDC@IAT ]
mov ebx eax
push r--data
mov [ ebp - 0x14 ] ebx
call [ GetModuleHandleW@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x3c ]
sub eax [ ebp - 0x44 ]
mov ecx [ ebp - 0x40 ]
sub ecx [ ebp - 0x48 ]
mov edx [ edi + 0x18 ]
push eax
push ecx
push edx
call [ CreateCompatibleBitmap@IAT ]
push r--data
push eax
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
mov edx [ ebp - 0x10 ]
push edx
push ebx
call [ SelectObject@IAT ]
lea eax [ ebp + 0x8 ]
push eax
push ebx
mov [ ebp + 0x8 ] 0x0
call GdipCreateFromHDC
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x4 ] 0x3
mov edx [ edi + 0x4 ]
lea eax [ ebp - 0x18 ]
push eax
lea ecx [ esi + 0x38 ]
mov [ ebp + 0x8 ] 0x0
mov [ ebp - 0x18 ] edx
call sub_40b210
fild [ ebp - 0x48 ]
mov edx [ ebp - 0x40 ]
mov ecx [ eax ]
sub edx [ ebp - 0x48 ]
fstp [ ebp - 0x20 ]
fild [ ebp - 0x44 ]
mov eax [ ebp - 0x3c ]
sub eax [ ebp - 0x44 ]
mov [ ebp - 0x1c ] edx
fstp [ ebp - 0x24 ]
push 0x0
fild [ ebp - 0x1c ]
mov [ ebp - 0x1c ] eax
push 0x0
mov [ ebp - 0x18 ] ecx
mov ecx [ edi + 0x14 ]
fstp [ ebp - 0x28 ]
fild [ ebp - 0x1c ]
push 0xf2
push ecx
fstp [ ebp - 0x1c ]
fld [ ebp - 0x20 ]
fstp [ ebp - 0x58 ]
fld [ ebp - 0x24 ]
fstp [ ebp - 0x54 ]
fld [ ebp - 0x28 ]
fstp [ ebp - 0x50 ]
fld [ ebp - 0x1c ]
fstp [ ebp - 0x4c ]
call [ SendMessageW@IAT ]
test al 0x4
jne r-xdata
push ebx
mov [ ebp - 0x38 ] ebx
call [ SaveDC@IAT ]
mov [ ebp - 0x34 ] eax
call eax
test eax eax
je r-xdata
mov [ ebp + 0x8 ] 0x1
mov edx [ edi + 0x4 ]
cmp edx [ esi + 0x80 ]
jne r-xdata
mov edx [ ebp - 0x40 ]
sub edx [ ebp - 0x48 ]
xor eax eax
push 0x0
mov [ ebp - 0x78 ] eax
mov [ ebp - 0x80 ] eax
mov [ ebp - 0x7c ] eax
mov [ ebp - 0x74 ] eax
mov [ ebp - 0x70 ] eax
mov [ ebp - 0x6c ] eax
mov [ ebp - 0x68 ] eax
mov [ ebp - 0x64 ] eax
mov [ ebp - 0x60 ] eax
mov [ ebp - 0x5c ] eax
mov eax [ ebp - 0x44 ]
sub eax [ ebp - 0x3c ]
push 0x0
push 0x0
mov ecx 0x1
mov [ ebp - 0x78 ] cx
push 0x0
lea ecx [ ebp - 0x84 ]
mov [ ebp - 0x7c ] eax
mov eax [ edi + 0x18 ]
mov [ ebp - 0x80 ] edx
push ecx
mov edx 0x20
push eax
mov [ ebp - 0x84 ] 0x28
mov [ ebp - 0x76 ] dx
mov [ ebp - 0x74 ] 0x0
call [ CreateDIBSection@IAT ]
jmp r-xdata
mov eax [ ebp - 0x44 ]
mov ecx [ ebp - 0x48 ]
mov edx [ ebp - 0x3c ]
mov esi [ ebp - 0x14 ]
push 0xcc0020
push eax
push ecx
push esi
sub edx eax
push edx
mov edx [ ebp - 0x40 ]
sub edx ecx
push edx
push eax
mov eax [ edi + 0x18 ]
push ecx
push eax
call [ BitBlt@IAT ]
mov [ ebp - 0x4 ] 0x2
push ebx
call GdipDeleteGraphics
mov [ ebp - 0x4 ] 0x1
mov eax [ ebp - 0x34 ]
cmp eax 0xffffffff
je r-xdata
test eax 0x200
jne r-xdata
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp - 0x18 ]
push ebx
call sub_411270
mov ecx [ ebp - 0x58 ]
mov edx [ ebp - 0x54 ]
push eax
sub esp 0x10
mov eax esp
mov [ eax ] ecx
mov ecx [ ebp - 0x50 ]
mov [ eax + 0x4 ] edx
mov edx [ ebp - 0x4c ]
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] edx
lea eax [ ebp - 0x30 ]
push eax
mov ecx esi
call sub_40ded0
mov ecx [ ebp - 0x58 ]
mov edx [ ebp - 0x54 ]
push ebx
sub esp 0x10
mov eax esp
mov [ eax ] ecx
mov ecx [ ebp - 0x50 ]
mov [ eax + 0x4 ] edx
mov edx [ ebp - 0x4c ]
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] edx
lea eax [ ebp - 0x30 ]
push eax
mov ecx esi
call sub_40e270
mov ecx [ ebp - 0x18 ]
push ebx
call sub_411240
mov ecx [ ebp - 0x58 ]
mov edx [ ebp - 0x54 ]
push eax
sub esp 0x10
mov eax esp
mov [ eax ] ecx
mov ecx [ ebp - 0x50 ]
mov [ eax + 0x4 ] edx
mov edx [ ebp - 0x4c ]
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] edx
lea eax [ ebp - 0x30 ]
push eax
mov ecx esi
call sub_40d680
mov ecx [ ebp - 0x58 ]
mov edx [ ebp - 0x54 ]
push ebx
sub esp 0x10
mov eax esp
mov [ eax ] ecx
mov ecx [ ebp - 0x50 ]
mov [ eax + 0x4 ] edx
mov edx [ ebp - 0x4c ]
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] edx
lea eax [ ebp - 0x30 ]
push eax
mov ecx esi
call sub_40f410
mov eax [ edi + 0x10 ]
mov ebx [ ebp - 0x30 ]
test al 0x10
je r-xdata
mov [ ebp - 0x10 ] eax
test ebx ebx
je r-xdata
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x10 ]
xor edi edi
cmp eax edi
je r-xdata
mov ecx [ ebp - 0x38 ]
push eax
push ecx
call [ RestoreDC@IAT ]
lea ecx [ ebp + 0x8 ]
push ecx
push ebx
mov [ ebp + 0x8 ] 0x0
call GdipGetDC
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
cmp esi edi
je r-xdata
push eax
call [ DeleteObject@IAT ]
cmp eax edi
je r-xdata
mov edx [ ebp - 0x48 ]
mov ecx [ ebp - 0x44 ]
sub esp 0x10
mov eax esp
mov [ eax ] edx
mov edx [ ebp - 0x40 ]
mov [ eax + 0x4 ] ecx
mov ecx [ ebp - 0x3c ]
mov [ eax + 0x8 ] edx
mov edx [ ebp + 0x8 ]
push ecx
mov [ eax + 0xc ] ecx
mov eax esp
mov [ ebp - 0x28 ] esp
mov [ eax ] edx
mov [ ebp - 0x4 ] 0x4
mov [ ebp - 0x4 ] 0x3
mov ecx esi
call sub_40d9f0
mov eax [ ebp + 0x8 ]
push eax
push ebx
call GdipReleaseDC
test eax eax
je r-xdata
mov [ ebp - 0x2c ] eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
push esi
mov [ ebp - 0x14 ] edi
call [ DeleteDC@IAT ]
mov [ ebp - 0x10 ] edi
mov [ ebp - 0x2c ] eax
sub_4103a0
push ebp
mov ebp esp
push 0xffffffff
push sub_41bb1f
mov eax [ fs : 0x0 ]
push eax
sub esp 0x90
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov eax [ esi + 0x4 ]
push eax
lea ecx [ ebp - 0x4c ]
call sub_40dab0
xor edi edi
mov [ ebp - 0x4 ] edi
mov eax [ ebp - 0x4c ]
mov [ ebp - 0x64 ] eax
mov [ ebp - 0x60 ] 0xffffffff
cmp eax edi
je r-xdata
mov [ ebp - 0x4 ] 0x1
mov edx [ ebp - 0x4c ]
lea ecx [ ebp - 0x3c ]
push ecx
push edx
mov [ ebp - 0x3c ] edi
call GdipCreateFromHDC
mov [ ebp - 0x70 ] eax
mov eax [ ebp - 0x3c ]
mov [ ebp - 0x74 ] eax
mov [ ebp - 0x4 ] 0x2
mov eax [ esi + 0x70 ]
mov ecx [ ebp - 0x4c ]
push eax
push ecx
lea ecx [ ebp - 0x8c ]
call sub_40d310
mov [ ebp - 0x4 ] 0x3
mov ecx esi
call sub_40ce60
mov ebx [ esi + 0x68 ]
cmp [ esi + 0x64 ] ebx
jbe r-xdata
push eax
call [ SaveDC@IAT ]
mov [ ebp - 0x60 ] eax
mov edi [ esi + 0x64 ]
cmp edi [ esi + 0x68 ]
jbe r-xdata
call [ _invalid_parameter_noinfo@IAT ]
cmp edi ebx
je r-xdata
call [ _invalid_parameter_noinfo@IAT ]
mov eax [ esi + 0x68 ]
lea ebx [ esi + 0x58 ]
mov [ ebp - 0x38 ] eax
cmp [ ebx + 0xc ] eax
jbe r-xdata
jmp r-xdata
mov edi [ ebx + 0xc ]
mov edx [ ebx ]
mov [ ebp - 0x44 ] edx
cmp edi [ ebx + 0x10 ]
jbe r-xdata
call [ _invalid_parameter_noinfo@IAT ]
mov ecx edi
call sub_40cd40
add edi 0x4
cmp edi ebx
jne r-xdata
mov ecx [ ebp - 0x38 ]
mov edx [ ebp - 0x44 ]
mov eax [ ebx ]
push ecx
push edx
push edi
push eax
lea eax [ ebp - 0x6c ]
push eax
mov ecx ebx
call sub_40ed60
mov eax [ esi + 0x50 ]
mov eax [ eax ]
mov ebx [ esi + 0x38 ]
xor edi edi
mov [ ebp - 0x3c ] edi
mov [ ebp - 0x38 ] edi
mov [ ebp - 0x44 ] ebx
mov [ ebp - 0x40 ] eax
call [ _invalid_parameter_noinfo@IAT ]
call [ _invalid_parameter_noinfo@IAT ]
cmp ebx eax
je r-xdata
cmp edi 0x14
ja r-xdata
test ebx ebx
jne r-xdata
mov edx [ ebp - 0x68 ]
cmp [ ebp - 0x40 ] edx
je r-xdata
mov ecx [ ebp - 0x3c ]
mov eax [ esi + 0x50 ]
xor ebx ebx
add ecx 0x2d
add edi 0xe
mov [ ebp - 0x50 ] edi
mov edi [ esi + 0x38 ]
mov [ ebp - 0x5c ] ebx
mov [ ebp - 0x58 ] ebx
mov [ ebp - 0x54 ] ecx
mov eax [ eax ]
mov [ ebp - 0x44 ] edi
mov [ ebp - 0x40 ] eax
mov edi 0x14
mov ebx [ ebx ]
jmp r-xdata
call [ _invalid_parameter_noinfo@IAT ]
call [ _invalid_parameter_noinfo@IAT ]
cmp edi eax
je r-xdata
mov eax [ ebp - 0x40 ]
cmp eax [ ebx + 0x18 ]
jne r-xdata
mov ecx [ ebp - 0x40 ]
mov ecx [ ecx + 0x10 ]
call sub_411240
push eax
lea ecx [ ebp - 0x34 ]
call [ utf::string::string@IAT ]
mov [ ebp - 0x4 ] 0x4
fldz
fst [ ebp - 0x78 ]
lea ecx [ ebp - 0x34 ]
fst [ ebp - 0x7c ]
lea ebx [ esi + 0x74 ]
fst [ ebp - 0x80 ]
fstp [ ebp - 0x84 ]
call [ utf::string::w_str@IAT ]
fldz
fst [ ebp - 0x9c ]
fst [ ebp - 0x98 ]
fst [ ebp - 0x94 ]
fstp [ ebp - 0x90 ]
test ebx ebx
je r-xdata
call [ _invalid_parameter_noinfo@IAT ]
mov ecx [ ebp - 0x58 ]
mov eax [ ebp - 0x54 ]
mov edx [ esi + 0x4 ]
push 0x6
push ecx
push eax
push 0x0
push 0x0
push 0x0
push edx
mov [ esi + 0x84 ] eax
call [ SetWindowPos@IAT ]
mov [ ebp - 0x4 ] 0x2
mov eax [ ebp - 0x8c ]
push eax
call GdipDeleteFont
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp - 0x74 ]
push ecx
call GdipDeleteGraphics
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x60 ]
cmp eax 0xffffffff
je r-xdata
test edi edi
jne r-xdata
mov eax [ ebp - 0x68 ]
cmp [ ebp - 0x40 ] eax
je r-xdata
xor ebx ebx
mov ebx [ ebx ]
jmp r-xdata
mov [ ebp - 0x4 ] 0x8
mov eax [ ebp - 0x4c ]
push eax
mov eax [ ebp - 0x48 ]
xor esi esi
push eax
mov [ ebp - 0x4c ] esi
call [ ReleaseDC@IAT ]
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x4c ]
cmp eax esi
je r-xdata
mov edx [ ebp - 0x64 ]
push eax
push edx
call [ RestoreDC@IAT ]
mov edi [ edi ]
jmp r-xdata
call [ _invalid_parameter_noinfo@IAT ]
fld [ ebp - 0x7c ]
fadd [ r--data ]
fstp [ ebp - 0x7c ]
fild [ ebp - 0x3c ]
fstp [ ebp - 0x3c ]
fld [ ebp - 0x3c ]
fld [ ebp - 0x7c ]
fcom st1
fnstsw ax
test ah 0x5
jpe r-xdata
mov [ ebp - 0x70 ] eax
push 0x0
push 0x0
lea edx [ ebp - 0x84 ]
push edx
mov edx [ ebp - 0x8c ]
push ebx
lea ecx [ ebp - 0x9c ]
push ecx
push edx
push 0xffffffff
push eax
mov eax [ ebp - 0x74 ]
push eax
call GdipMeasureString
test eax eax
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_401736
mov esp ebp
pop ebp
retn
push eax
mov [ ebp - 0x4c ] esi
call [ DeleteDC@IAT ]
mov ecx [ ebp - 0x40 ]
cmp ecx [ edi + 0x18 ]
jne r-xdata
mov edx [ ebp - 0x40 ]
mov edi [ edx + 0x10 ]
lea ecx [ ebp - 0x34 ]
call [ utf::string::string@IAT ]
mov [ ebp - 0x4 ] 0x5
mov ecx edi
mov [ ebp - 0x38 ] 0x5401000b
call sub_411240
cmp ebx 0x9
jae r-xdata
call [ _invalid_parameter_noinfo@IAT ]
fstp st1
fstp st0
jmp r-xdata
sub esp 0x24
mov ecx esp
mov [ ebp - 0x3c ] esp
push eax
call [ utf::string::string@IAT ]
mov [ ebp - 0x4 ] 0x7
mov ecx eax
call [ utf::string::c_str@IAT ]
sub esp 0x24
mov ecx esp
mov [ ebp - 0x3c ] esp
push eax
lea edx [ ebx + 0x1 ]
push edx
push r--data
push ecx
call [ cui::Format@IAT ]
add esp 0x10
mov [ ebp - 0x4 ] 0x6
jmp r-xdata
fstp st1
fstp st0
jmp r-xdata
fstp [ ebp - 0x3c ]
fld [ ebp - 0x3c ]
call sub_419350
fild [ ebp - 0x38 ]
mov [ ebp - 0x3c ] eax
fstp [ ebp - 0x38 ]
fld [ ebp - 0x38 ]
fld [ ebp - 0x78 ]
fcom st1
fnstsw ax
test ah 0x5
jpe r-xdata
mov ecx edi
call sub_411230
lea ecx [ ebp - 0x34 ]
mov edi eax
call [ utf::string::w_str@IAT ]
mov edx [ rw-data ]
mov ecx [ esi + 0x4 ]
push 0x0
push edx
mov edx [ ebp - 0x50 ]
push edi
mov edi [ ebp - 0x54 ]
push ecx
mov ecx [ ebp - 0x58 ]
sub edx ecx
push edx
mov edx [ ebp - 0x5c ]
sub edi edx
push edi
push ecx
mov ecx [ ebp - 0x38 ]
push edx
push ecx
push eax
push r--data
push 0x0
call [ CreateWindowExW@IAT ]
mov ecx [ esi + 0x70 ]
push 0x1
push ecx
push 0x30
push eax
mov [ ebp - 0x38 ] eax
call [ SendMessageW@IAT ]
lea edx [ ebp - 0x38 ]
push edx
lea ecx [ esi + 0x58 ]
call sub_40f7c0
mov eax [ ebp - 0x50 ]
sub eax [ ebp - 0x58 ]
push eax
push 0x0
lea eax [ ebp - 0x5c ]
push eax
call [ OffsetRect@IAT ]
mov [ ebp - 0x4 ] 0x3
lea ecx [ ebp - 0x34 ]
call [ utf::string::~string@IAT ]
lea ecx [ ebp - 0x44 ]
call sub_402510
mov edi [ ebp - 0x44 ]
inc ebx
jmp r-xdata
mov [ ebp - 0x38 ] 0x5403000b
mov [ ebp - 0x4 ] 0x5
lea ecx [ ebp - 0x34 ]
call [ utf::string::operator=@IAT ]
test ebx ebx
jne r-xdata
mov ecx [ esi + 0x50 ]
mov eax [ esi + 0x38 ]
mov [ ebp - 0x68 ] ecx
test ebx ebx
je r-xdata
fstp [ ebp - 0x38 ]
fld [ ebp - 0x38 ]
call sub_419350
mov edi eax
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x4 ] 0x3
lea ecx [ ebp - 0x34 ]
call [ utf::string::~string@IAT ]
lea ecx [ ebp - 0x44 ]
call sub_402510
mov ebx [ ebp - 0x44 ]
jmp r-xdata
mov edx [ esi + 0x50 ]
mov eax [ esi + 0x38 ]
mov [ ebp - 0x68 ] edx
test edi edi
je r-xdata
sub_410830
push ebp
mov ebp esp
sub esp 0x20
mov eax [ ecx + 0x50 ]
push ebx
push esi
lea esi [ ecx + 0x38 ]
mov [ ebp - 0x4 ] ecx
mov ecx [ eax + 0x4 ]
push edi
push ecx
mov ecx esi
call sub_4046b0
mov eax [ esi + 0x18 ]
mov ebx [ ebp + 0x8 ]
mov [ eax + 0x4 ] eax
mov eax [ esi + 0x18 ]
mov [ esi + 0x1c ] 0x0
mov [ eax ] eax
mov eax [ esi + 0x18 ]
mov [ eax + 0x8 ] eax
mov edx [ ebx + 0x18 ]
mov eax [ edx ]
mov edi [ ebx ]
mov [ ebp - 0xc ] edi
mov [ ebp - 0x8 ] eax
call [ _invalid_parameter_noinfo@IAT ]
cmp edi eax
je r-xdata
mov ecx [ ebp - 0x4 ]
cmp [ ecx + 0x54 ] 0x0
pop edi
pop esi
pop ebx
je r-xdata
test edi edi
jne r-xdata
mov ecx [ ebp - 0x10 ]
cmp [ ebp - 0x8 ] ecx
je r-xdata
mov esp ebp
pop ebp
retn 0x4
call sub_4103a0
mov eax [ edi ]
jmp r-xdata
call [ _invalid_parameter_noinfo@IAT ]
xor eax eax
mov edx [ ebp - 0x8 ]
cmp edx [ eax + 0x18 ]
jne r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0x10 ]
call sub_411260
test al al
je r-xdata
call [ _invalid_parameter_noinfo@IAT ]
lea ecx [ ebp - 0xc ]
call sub_402510
mov edi [ ebp - 0xc ]
jmp r-xdata
test edi edi
jne r-xdata
mov eax [ ebx + 0x18 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebx ]
test edi edi
je r-xdata
mov edi [ edi ]
jmp r-xdata
call [ _invalid_parameter_noinfo@IAT ]
mov ecx [ ebp - 0x8 ]
cmp ecx [ edi + 0x18 ]
jne r-xdata
mov edx [ ebp - 0x8 ]
add edx 0xc
push edx
lea eax [ ebp - 0x20 ]
push eax
mov ecx esi
call sub_40ae30
call [ _invalid_parameter_noinfo@IAT ]
sub_410920
push ebp
mov ebp esp
mov eax [ ebp + 0x1c ]
sub eax 0x0
push esi
push edi
je r-xdata
mov eax [ ebp + 0xc ]
cmp eax 0x2b
jne r-xdata
mov edi 0x1
sub eax edi
jne r-xdata
cmp eax 0x2c
jne r-xdata
test ecx ecx
je r-xdata
pop edi
xor eax eax
pop esi
pop ebp
retn 0x18
mov eax [ ebp + 0xc ]
cmp eax 0x202b
jne r-xdata
cmp eax 0x39
jne r-xdata
mov edx [ ebp + 0x14 ]
lea edi [ eax - 0x2b ]
lea eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push edx
push eax
push 0x2c
xor esi esi
lea esi [ ecx - 0x28 ]
jmp r-xdata
cmp eax 0x202c
jne r-xdata
test ecx ecx
je r-xdata
cmp eax 0x2d
jne r-xdata
test ecx ecx
je r-xdata
mov eax edi
pop edi
pop esi
pop ebp
retn 0x18
mov eax edi
pop edi
pop esi
pop ebp
retn 0x18
mov eax [ ebp + 0x14 ]
mov edx [ esi + 0x18 ]
mov edi 0x1
push eax
mov ecx esi
mov [ edx + 0x20 ] edi
call sub_410010
mov ecx [ esi + 0x18 ]
mov eax [ ecx + 0x20 ]
mov edx [ ebp + 0x18 ]
mov [ edx ] edi
test eax eax
je r-xdata
cmp eax 0x2039
jne r-xdata
mov eax [ ebp + 0x14 ]
lea edx [ ebp + 0xc ]
push edx
mov edx [ ebp + 0x10 ]
push eax
push edx
push 0x202c
jmp r-xdata
xor esi esi
lea esi [ ecx - 0x28 ]
jmp r-xdata
mov eax [ ebp + 0x14 ]
lea edx [ ebp + 0xc ]
push edx
mov edx [ ebp + 0x10 ]
push eax
push edx
mov edi 0x1
push 0x2d
mov [ ebp + 0xc ] edi
call sub_40f990
jmp r-xdata
xor eax eax
lea eax [ ecx - 0x28 ]
jmp r-xdata
cmp eax 0x202d
jne r-xdata
test ecx ecx
je r-xdata
mov [ ebp + 0xc ] edi
call sub_40fdd0
je r-xdata
mov ecx [ ebp + 0x14 ]
mov eax [ esi + 0x18 ]
push ecx
mov ecx esi
mov [ eax + 0x20 ] edi
call sub_410010
mov edx [ esi + 0x18 ]
mov eax [ edx + 0x20 ]
mov ecx [ ebp + 0x18 ]
mov [ ecx ] edi
test eax eax
jmp r-xdata
mov ecx [ ebp + 0x18 ]
cmp [ ebp + 0xc ] 0x0
mov [ ecx ] eax
mov eax edi
pop edi
pop esi
pop ebp
retn 0x18
mov edx [ eax + 0x18 ]
mov ecx [ ebp + 0x18 ]
mov edi 0x1
mov [ edx + 0x20 ] edi
mov eax [ eax + 0x18 ]
mov eax [ eax + 0x20 ]
mov [ ecx ] 0x0
test eax eax
je r-xdata
mov eax [ ebp + 0x14 ]
lea edx [ ebp + 0xc ]
push edx
mov edx [ ebp + 0x10 ]
push eax
push edx
push 0x202d
mov [ ebp + 0xc ] edi
call sub_40f990
jmp r-xdata
xor eax eax
lea eax [ ecx - 0x28 ]
jmp r-xdata
mov edx [ eax + 0x18 ]
mov ecx [ ebp + 0x18 ]
mov [ edx + 0x20 ] edi
mov eax [ eax + 0x18 ]
mov eax [ eax + 0x20 ]
mov [ ecx ] 0x0
test eax eax
jmp r-xdata
sub_410ac0
push ebp
mov ebp esp
push 0xffffffff
push sub_41bb58
mov eax [ fs : 0x0 ]
push eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
mov edi [ ebp + 0x18 ]
mov eax [ ebp + 0x14 ]
mov ebx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
push 0x0
push edi
push eax
mov eax [ ebp + 0x8 ]
push ebx
push edx
lea ecx [ esi + 0x28 ]
push eax
mov [ ebp + 0x1c ] ecx
call sub_40ff00
test eax eax
jne r-xdata
mov eax 0x1
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
mov eax [ ebp + 0xc ]
mov ecx 0x1
cmp eax ecx
jne r-xdata
cmp eax 0x2
jne r-xdata
mov eax [ esi + 0x18 ]
mov [ eax + 0x20 ] ecx
mov ecx [ ebp + 0x14 ]
push ecx
mov ecx esi
call sub_40e8a0
cmp eax 0x400
jne r-xdata
mov eax [ esi + 0x18 ]
mov [ eax + 0x20 ] ecx
mov ecx esi
call sub_40e9b0
mov [ edi ] 0x0
jmp r-xdata
mov eax [ ebp + 0xc ]
cmp eax 0x113
jne r-xdata
mov eax [ esi + 0x18 ]
mov [ eax + 0x20 ] ecx
mov ecx esi
call sub_40eae0
jmp r-xdata
mov esi [ esi + 0x18 ]
cmp [ esi + 0x20 ] 0x0
cmp eax 0x14
jne r-xdata
mov eax [ esi + 0x18 ]
mov [ eax + 0x20 ] ecx
push ebx
mov ecx esi
call sub_40d550
mov [ edi ] 0x0
jmp r-xdata
mov [ edi ] eax
cmp eax 0x31e
jne r-xdata
mov eax [ esi + 0x18 ]
push ecx
mov [ eax + 0x20 ] ecx
mov eax esp
mov [ ebp + 0x18 ] esp
mov [ eax ] ebx
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_40d5c0
mov [ edi ] eax
mov edx [ esi + 0x18 ]
cmp [ edx + 0x20 ] 0x0
jmp r-xdata
cmp eax 0x111
jne r-xdata
mov eax [ esi + 0x18 ]
mov [ eax + 0x20 ] ecx
mov ecx esi
call sub_40ce60
mov [ edi ] 0x0
mov ecx [ esi + 0x18 ]
cmp [ ecx + 0x20 ] 0x0
jmp r-xdata
je r-xdata
mov ecx [ ebp + 0x14 ]
mov edx [ ebp + 0x8 ]
push 0x0
push edi
push ecx
mov ecx [ ebp + 0x1c ]
push ebx
push eax
push edx
call sub_410920
test eax eax
jne r-xdata
mov edx ebx
shr edx 0x10
xor eax eax
cmp ax dx
jne r-xdata
mov edx [ esi + 0x18 ]
mov eax [ ebp + 0x14 ]
mov [ edx + 0x20 ] ecx
movzx ecx bx
push eax
push ecx
push 0x0
mov ecx esi
call sub_40ee60
mov [ edi ] 0x0
mov edx [ esi + 0x18 ]
cmp [ edx + 0x20 ] 0x0
jmp r-xdata
sub_410c80
push ebp
mov ebp esp
push 0xffffffff
push sub_41bb99
mov eax [ fs : 0x0 ]
push eax
sub esp 0x18
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
push 0x0
push ecx
mov eax esp
mov [ ebp - 0x10 ] esp
push 0x0
push 0x0
push 0x0
push ecx
mov [ eax ] 0x0
mov eax esp
mov [ eax ] 0x0
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] esp
push eax
call sub_40ef00
mov edi eax
test edi edi
jne r-xdata
xor ecx ecx
mov eax sub_40ce30
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] ecx
test esi esi
je r-xdata
call [ GetLastError@IAT ]
push eax
push r--data
push r--data
call Ordinal_vmwarebase_2
add esp 0xc
jmp r-xdata
xor eax eax
lea eax [ esi + 0x34 ]
jmp r-xdata
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x8
lea ecx [ ebp - 0x24 ]
push ecx
lea ecx [ ebp - 0x14 ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] esi
call sub_40bd50
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp + 0xc ]
lea edx [ ebp - 0x14 ]
push edx
lea eax [ ebp - 0x1c ]
push eax
add ecx 0x1c
call [ sigc::signal_base::connect@IAT ]
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call [ sigc::slot_base::~slot_base@IAT ]
sub_410d60
push ebp
mov ebp esp
push 0xffffffff
push sub_41bbc9
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] 0xffffffff
call [ sigc::slot_base::~slot_base@IAT ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_410db0
push ebp
mov ebp esp
push 0xffffffff
push sub_41bc21
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x14 ] esi
xor edi edi
mov [ ebp - 0x10 ] edi
cmp [ ebp + 0xc ] edi
je r-xdata
push edi
mov ecx esi
call [ cui::ipc::Dispatch::Dispatch@IAT ]
mov [ ebp - 0x4 ] 0x1
push 0x54
mov [ esi ] r--data
call ??2@YAPAXI@Z
mov edi eax
add esp 0x4
mov [ ebp + 0xc ] edi
mov [ ebp - 0x4 ] 0x2
test edi edi
je r-xdata
lea ecx [ esi + 0xc ]
mov [ esi + 0x4 ] r--data
call [ sigc::trackable::trackable@IAT ]
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x10 ] 0x1
xor edi edi
mov eax [ ebp + 0x8 ]
push 0x1
push eax
mov ecx edi
call [ cui::ipc::Control::Control@IAT ]
mov [ edi ] r--data
jmp r-xdata
mov [ ebp - 0x4 ] 0x1
push edi
mov ecx esi
call [ cui::ipc::Dispatch::SetControl@IAT ]
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_410e70
push ebp
mov ebp esp
push 0xffffffff
push sub_41bc51
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] 0xffffffff
call [ sigc::slot_base::~slot_base@IAT ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_410ec0
push ebp
mov ebp esp
push 0xffffffff
push sub_41bc79
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] 0xffffffff
call [ cui::ipc::Dispatch::~Dispatch@IAT ]
lea ecx [ esi + 0xc ]
call [ sigc::trackable::~trackable@IAT ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
sub_410f10
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_410ec0
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call ??3@YAXPAX@Z
add esp 0x4
sub_410f40
push ebp
mov ebp esp
push 0xffffffff
push sub_41bcd3
mov eax [ fs : 0x0 ]
push eax
sub esp 0x24
push ebx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x4 ] 0x2
push r--data
lea ecx [ ebp - 0x30 ]
call [ utf::string::string@IAT ]
mov [ ebp - 0x4 ] 0x3
lea eax [ ebp - 0x30 ]
push eax
lea ecx [ ebp + 0xc ]
call [ utf::string::operator==@IAT ]
mov bl al
mov [ ebp - 0x4 ] 0x2
mov esi [ utf::string::~string@IAT ]
lea ecx [ ebp - 0x30 ]
call esi
test bl bl
je r-xdata
lea ecx [ ebp + 0xc ]
call [ utf::string::c_str@IAT ]
push eax
push r--data
call Ordinal_vmwarebase_2
add esp 0x8
cmp [ ebp + 0x4c ] 0x0
je r-xdata
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp + 0xc ]
call esi
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp + 0x30 ]
call sub_406af0
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp + 0x50 ]
call [ sigc::slot_base::~slot_base@IAT ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x50
push 0x48
push r--data
push r--data
call Ordinal_vmwarebase_3
sub_411010
push ebp
mov ebp esp
push 0xffffffff
push sub_41bd3b
mov eax [ fs : 0x0 ]
push eax
sub esp 0x50
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] ecx
lea ecx [ ebp - 0x38 ]
call sub_405c70
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x38 ]
call sub_406dd0
mov ebx [ ebp + 0xc ]
mov esi [ ebx + 0x18 ]
mov ecx [ ebx + 0x1c ]
add ecx esi
cmp esi ecx
jbe r-xdata
mov edi [ ebx ]
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x14 ] esi
call [ _invalid_parameter_noinfo@IAT ]
mov eax [ ebx ]
test edi edi
je r-xdata
call [ _invalid_parameter_noinfo@IAT ]
call [ _invalid_parameter_noinfo@IAT ]
cmp edi eax
je r-xdata
push 0xffffffff
sub esp 0x20
lea edx [ ebp - 0x38 ]
mov ecx esp
mov [ ebp + 0x8 ] esp
push edx
call sub_408b60
mov [ ebp - 0x4 ] 0x3
mov eax [ cui::ipc::UnityHelper::COMMAND_ID_GHI_LAUNCH@IAT ]
sub esp 0x24
mov ecx esp
mov [ ebp + 0xc ] esp
push eax
call [ utf::string::string@IAT ]
mov [ ebp - 0x4 ] 0x4
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x10 ]
call [ cui::ipc::Dispatch::SendCommand@IAT ]
mov [ ebp - 0x4 ] 0x5
lea ecx [ ebp - 0x38 ]
call sub_405ce0
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0x38 ]
push ecx
call ??3@YAXPAX@Z
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov esi [ ebx + 0x18 ]
mov edx [ ebx + 0x1c ]
add edx esi
cmp esi edx
jbe r-xdata
cmp [ ebp - 0x14 ] esi
je r-xdata
mov eax [ ebx ]
test edi edi
je r-xdata
call [ _invalid_parameter_noinfo@IAT ]
call [ _invalid_parameter_noinfo@IAT ]
cmp edi eax
je r-xdata
lea ecx [ ebp - 0x18 ]
call sub_407d60
mov ecx [ ebp - 0x1c ]
mov edi eax
mov eax [ ebp - 0x24 ]
inc ecx
cmp eax ecx
ja r-xdata
lea ecx [ ebp - 0x18 ]
call sub_407d60
mov ecx eax
call [ utf::string::c_str@IAT ]
push eax
call Ordinal_vmwarebase_182
mov esi eax
add esp 0x4
test esi esi
je r-xdata
cmp [ ebp - 0x14 ] esi
je r-xdata
mov edx [ ebp - 0x20 ]
mov ecx [ ebp - 0x1c ]
lea esi [ ecx + edx ]
cmp eax esi
ja r-xdata
push 0x1
lea ecx [ ebp - 0x38 ]
call sub_406b50
mov eax [ ebp - 0x24 ]
push esi
lea ecx [ ebp - 0x5c ]
call [ utf::string::string@IAT ]
mov [ ebp - 0x4 ] 0x1
lea eax [ ebp - 0x5c ]
push eax
lea ecx [ ebp - 0x38 ]
call sub_406dd0
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x5c ]
call [ utf::string::~string@IAT ]
push esi
call [ free@IAT ]
add esp 0x4
jmp r-xdata
mov edx [ ebp - 0x28 ]
cmp [ edx + esi * 4 ] 0x0
jne r-xdata
sub esi eax
test edi edi
jne r-xdata
mov edx [ ebp - 0x28 ]
mov ecx [ edx + esi * 4 ]
mov [ ebp + 0x8 ] ecx
mov [ ebp + 0xc ] ecx
mov [ ebp - 0x4 ] 0x2
test ecx ecx
je r-xdata
push 0x24
call ??2@YAPAXI@Z
mov ecx [ ebp - 0x28 ]
add esp 0x4
mov [ ecx + esi * 4 ] eax
mov eax [ edi ]
mov ecx eax
jmp r-xdata
call [ _invalid_parameter_noinfo@IAT ]
xor eax eax
xor ecx ecx
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x1c ]
mov edi [ ebp - 0x18 ]
push edi
call [ utf::string::string@IAT ]
mov ecx [ ecx + 0x1c ]
add ecx [ eax + 0x18 ]
cmp [ ebp - 0x14 ] ecx
jb r-xdata
inc [ ebp - 0x14 ]
jmp r-xdata
call [ _invalid_parameter_noinfo@IAT ]
mov eax [ ebx + 0x18 ]
mov esi [ ebx + 0x1c ]
add esi eax
cmp eax esi
jbe r-xdata
sub_411280
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
mov edx [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0xc ]
push edx
mov edx [ ebp + 0x8 ]
push eax
mov eax [ ecx + 0x34 ]
mov ecx [ ecx + 0x30 ]
push edx
push eax
call sub_414010
pop ebp
retn 0x10
sub_4112b0
push ebp
mov ebp esp
push 0xffffffff
push sub_41be2e
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x8
mov edi [ utf::string::~string@IAT ]
lea ecx [ esi + 0xa4 ]
call edi
mov [ ebp - 0x4 ] 0x7
lea ecx [ esi + 0x80 ]
call edi
mov [ ebp - 0x4 ] 0x6
lea ecx [ esi + 0x5c ]
call edi
mov [ ebp - 0x4 ] 0x5
lea ecx [ esi + 0x38 ]
call edi
mov al 0x4
mov [ ebp - 0x4 ] al
lea ecx [ esi + 0x28 ]
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x4 ] al
mov edi [ sigc::signal_base::~signal_base@IAT ]
call edi
mov al 0x3
mov [ ebp - 0x4 ] al
lea ecx [ esi + 0x20 ]
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x4 ] al
call edi
mov al 0x2
mov [ ebp - 0x4 ] al
lea ecx [ esi + 0x18 ]
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x4 ] al
call edi
mov al 0x1
mov [ ebp - 0x4 ] al
lea ecx [ esi + 0x10 ]
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x4 ] al
call edi
xor al al
mov [ ebp - 0x4 ] al
lea ecx [ esi + 0x8 ]
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x4 ] al
call edi
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ esi + 0x4 ]
call [ sigc::trackable::~trackable@IAT ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_411390
push ebp
mov ebp esp
push 0xffffffff
push sub_41bf1e
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
lea ecx [ esi + 0x4 ]
call [ sigc::trackable::trackable@IAT ]
mov [ ebp - 0x4 ] 0x0
mov edi [ sigc::signal_base::signal_base@IAT ]
lea ecx [ esi + 0x8 ]
mov [ esi ] r--data
mov [ ebp - 0x14 ] ecx
call edi
mov [ ebp - 0x4 ] 0x3
lea ecx [ esi + 0x10 ]
mov [ ebp - 0x14 ] ecx
call edi
mov [ ebp - 0x4 ] 0x6
lea ecx [ esi + 0x18 ]
mov [ ebp - 0x14 ] ecx
call edi
mov [ ebp - 0x4 ] 0x9
lea ecx [ esi + 0x20 ]
mov [ ebp - 0x14 ] ecx
call edi
mov [ ebp - 0x4 ] 0xc
lea ecx [ esi + 0x28 ]
mov [ ebp - 0x14 ] ecx
call edi
mov [ ebp - 0x4 ] 0xf
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x10 ]
mov eax [ ebp + 0x8 ]
mov edi [ utf::string::string@IAT ]
mov [ esi + 0x34 ] ecx
push edx
lea ecx [ esi + 0x38 ]
mov [ esi + 0x30 ] eax
call edi
mov [ ebp - 0x4 ] 0x10
mov eax [ ebp + 0x14 ]
push eax
lea ecx [ esi + 0x5c ]
call edi
mov [ ebp - 0x4 ] 0x11
mov ecx [ ebp + 0x18 ]
push ecx
lea ecx [ esi + 0x80 ]
call edi
mov [ ebp - 0x4 ] 0x12
mov edx [ ebp + 0x1c ]
push edx
lea ecx [ esi + 0xa4 ]
call edi
mov [ ebp - 0x4 ] 0x13
push 0xff
push 0x0
push 0x0
push 0x0
lea ecx [ esi + 0xca ]
mov [ esi + 0xc8 ] 0x0
mov [ esi + 0xc9 ] 0x0
call [ cui::Color::Color@IAT ]
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x18
sub_4114b0
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_4112b0
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call ??3@YAXPAX@Z
add esp 0x4
sub_4114e0
push ebp
mov ebp esp
push 0xffffffff
push sub_41bf49
mov eax [ fs : 0x0 ]
push eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov ebx [ ebp + 0x8 ]
lea edi [ esi + 0x38 ]
push edi
mov ecx ebx
call [ utf::string::operator!=@IAT ]
test al al
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub esp 0x24
mov ecx esp
mov [ ebp + 0x8 ] esp
push ebx
call [ utf::string::string@IAT ]
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
mov ecx edi
call [ utf::string::operator=@IAT ]
mov eax [ esi + 0xc ]
push eax
call sub_409460
add esp 0x4
sub_411560
push ebp
mov ebp esp
push 0xffffffff
push sub_41bf82
mov eax [ fs : 0x0 ]
push eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov ebx [ ebp + 0x8 ]
lea edi [ esi + 0x80 ]
push edi
mov ecx ebx
call [ utf::string::operator!=@IAT ]
test al al
jne r-xdata
sub esp 0x24
mov ecx esp
mov [ ebp + 0x8 ] esp
push ebx
mov ebx [ utf::string::string@IAT ]
call ebx
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
mov ecx edi
mov edi [ utf::string::operator=@IAT ]
call edi
mov edx [ ebp + 0xc ]
sub esp 0x24
mov ecx esp
mov [ ebp + 0x8 ] esp
push edx
call ebx
mov [ ebp - 0x4 ] 0x1
lea ecx [ esi + 0xa4 ]
mov [ ebp - 0x4 ] 0xffffffff
call edi
mov eax [ esi + 0x14 ]
push eax
call sub_409460
add esp 0x4
mov ecx [ ebp + 0xc ]
lea eax [ esi + 0xa4 ]
push eax
call [ utf::string::operator!=@IAT ]
test al al
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_411680
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ecx
push edi
lea edi [ esi + 0xca ]
push ebx
mov ecx edi
call [ cui::Color::operator!=@IAT ]
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov ecx [ esi + 0x2c ]
mov eax [ ebx ]
push ecx
mov [ edi ] eax
call sub_409460
add esp 0x4
sub_4116d0
push ebp
mov ebp esp
push 0xffffffff
push sub_41bfa9
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov eax [ ebp + 0x8 ]
push eax
call [ utf::string::string@IAT ]
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp + 0xc ]
mov edx [ ecx ]
mov [ esi + 0x24 ] edx
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_411750
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
cmp [ ecx + 0x35 ] 0x0
jne r-xdata
pop ebp
retn
nop
mov eax ecx
mov ecx [ eax + 0x8 ]
cmp [ ecx + 0x35 ] 0x0
je r-xdata
sub_411770
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
cmp [ ecx + 0x35 ] 0x0
jne r-xdata
pop ebp
retn
mov edi edi
mov eax ecx
mov ecx [ eax ]
cmp [ ecx + 0x35 ] 0x0
je r-xdata
sub_411790
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
push esi
mov esi [ eax + 0x8 ]
mov [ edx ] esi
mov esi [ eax + 0x8 ]
cmp [ esi + 0x35 ] 0x0
jne r-xdata
mov esi [ edx + 0x4 ]
mov [ eax + 0x4 ] esi
mov ecx [ ecx + 0x18 ]
pop esi
cmp edx [ ecx + 0x4 ]
jne r-xdata
mov [ esi + 0x4 ] edx
mov ecx [ edx + 0x4 ]
cmp edx [ ecx + 0x8 ]
jne r-xdata
mov [ ecx + 0x4 ] eax
mov [ eax + 0x8 ] edx
mov [ edx + 0x4 ] eax
pop ebp
retn 0x4
mov [ ecx ] eax
mov [ eax + 0x8 ] edx
mov [ edx + 0x4 ] eax
pop ebp
retn 0x4
mov [ ecx + 0x8 ] eax
mov [ eax + 0x8 ] edx
mov [ edx + 0x4 ] eax
pop ebp
retn 0x4
sub_4117f0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
cmp [ ecx + 0x4d ] 0x0
jne r-xdata
pop ebp
retn
nop
mov eax ecx
mov ecx [ eax + 0x8 ]
cmp [ ecx + 0x4d ] 0x0
je r-xdata
sub_411810
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
cmp [ ecx + 0x4d ] 0x0
jne r-xdata
pop ebp
retn
mov edi edi
mov eax ecx
mov ecx [ eax ]
cmp [ ecx + 0x4d ] 0x0
je r-xdata
sub_411830
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
push esi
mov esi [ eax + 0x8 ]
mov [ edx ] esi
mov esi [ eax + 0x8 ]
cmp [ esi + 0x4d ] 0x0
jne r-xdata
mov esi [ edx + 0x4 ]
mov [ eax + 0x4 ] esi
mov ecx [ ecx + 0x18 ]
pop esi
cmp edx [ ecx + 0x4 ]
jne r-xdata
mov [ esi + 0x4 ] edx
mov ecx [ edx + 0x4 ]
cmp edx [ ecx + 0x8 ]
jne r-xdata
mov [ ecx + 0x4 ] eax
mov [ eax + 0x8 ] edx
mov [ edx + 0x4 ] eax
pop ebp
retn 0x4
mov [ ecx ] eax
mov [ eax + 0x8 ] edx
mov [ edx + 0x4 ] eax
pop ebp
retn 0x4
mov [ ecx + 0x8 ] eax
mov [ eax + 0x8 ] edx
mov [ edx + 0x4 ] eax
pop ebp
retn 0x4
sub_411890
push ebp
mov ebp esp
push 0xffffffff
push sub_41cd19
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov edi [ ebp + 0x8 ]
push edi
call [ utf::string::string@IAT ]
mov [ ebp - 0x4 ] 0x0
mov eax [ edi + 0x24 ]
mov [ esi + 0x24 ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_4118f0
push ebp
mov ebp esp
push 0xffffffff
push sub_41d1cc
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push 0x30
call [ sigc::internal::slot_rep::operator new@IAT ]
add esp 0x4
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
xor eax eax
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx eax
call sub_413b50
jmp r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_411960
push ebp
mov ebp esp
push 0xffffffff
push sub_41bfe1
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] 0xffffffff
call [ sigc::signal_base::~signal_base@IAT ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_4119b0
push esi
mov esi ecx
mov eax [ esi ]
push edi
mov edi [ _invalid_parameter_noinfo@IAT ]
test eax eax
jne r-xdata
mov eax [ eax ]
jmp r-xdata
call edi
mov eax [ esi ]
test eax eax
je r-xdata
mov ecx [ esi + 0x4 ]
cmp ecx [ eax + 0x14 ]
jne r-xdata
xor eax eax
mov eax [ esi + 0x4 ]
pop edi
add eax 0x8
pop esi
retn
call edi
sub_4119f0
push ebp
mov ebp esp
push 0xffffffff
push sub_41c008
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov [ ebp - 0x10 ] edi
mov esi [ ebp + 0x8 ]
mov [ edi ] esi
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
mov eax [ ecx + esi + 0x28 ]
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0x0
mov edx [ esi ]
mov eax [ edx + 0x4 ]
add eax esi
cmp [ eax + 0x8 ] 0x0
jne r-xdata
lea ecx [ eax + 0x4 ]
call [ std::_Mutex::_Lock@IAT ]
mov ecx [ esi ]
mov edx [ ecx + 0x4 ]
cmp [ edx + esi + 0x8 ] 0x0
sete al
mov [ edi + 0x4 ] al
mov [ ebp - 0x4 ] 0xffffffff
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
mov eax [ eax + 0x2c ]
test eax eax
je r-xdata
mov ecx eax
call [ std::basic_ostream<char,struct std::char_traits<char> >::flush@IAT ]
sub_411a90
push ebp
mov ebp esp
push 0xffffffff
push sub_41c038
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] 0x0
call [ std::uncaught_exception@IAT ]
test al al
jne r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ esi ]
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
mov eax [ edx + eax + 0x28 ]
test eax eax
je r-xdata
mov ecx [ esi ]
call [ std::basic_ostream<char,struct std::char_traits<char> >::_Osfx@IAT ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
lea ecx [ eax + 0x4 ]
call [ std::_Mutex::_Unlock@IAT ]
sub_411b10
push ebp
mov ebp esp
mov eax [ ecx + 0x18 ]
push esi
mov esi [ eax + 0x4 ]
cmp [ esi + 0x35 ] 0x0
push edi
mov edi eax
jne r-xdata
pop edi
pop esi
pop ebp
retn 0x4
push ebx
mov ebx [ ebp + 0x8 ]
jmp r-xdata
push ebx
lea ecx [ esi + 0xc ]
call [ utf::string::operator<=@IAT ]
test al al
je r-xdata
mov edi esi
mov esi [ esi ]
mov esi [ esi + 0x8 ]
jmp r-xdata
mov eax edi
pop ebx
cmp [ esi + 0x35 ] 0x0
je r-xdata
sub_411b60
push ebp
mov ebp esp
mov eax [ ecx + 0x18 ]
push esi
mov esi [ eax + 0x4 ]
cmp [ esi + 0x4d ] 0x0
push edi
mov edi eax
jne r-xdata
pop edi
pop esi
pop ebp
retn 0x4
push ebx
mov ebx [ ebp + 0x8 ]
jmp r-xdata
push ebx
lea ecx [ esi + 0xc ]
call [ utf::string::operator<=@IAT ]
test al al
je r-xdata
mov edi esi
mov esi [ esi ]
mov esi [ esi + 0x8 ]
jmp r-xdata
mov eax edi
pop ebx
cmp [ esi + 0x4d ] 0x0
je r-xdata
sub_411bb0
push esi
mov esi ecx
mov eax [ esi ]
push edi
mov edi [ _invalid_parameter_noinfo@IAT ]
test eax eax
jne r-xdata
mov eax [ eax ]
jmp r-xdata
call edi
mov eax [ esi ]
test eax eax
je r-xdata
mov ecx [ esi + 0x4 ]
cmp ecx [ eax + 0x14 ]
jne r-xdata
xor eax eax
mov edx [ esi + 0x4 ]
mov eax [ edx ]
mov [ esi + 0x4 ] eax
pop edi
mov eax esi
pop esi
retn
call edi
sub_411bf0
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
push esi
mov esi [ eax ]
mov [ edx + 0x8 ] esi
mov esi [ eax ]
cmp [ esi + 0x35 ] 0x0
jne r-xdata
mov esi [ edx + 0x4 ]
mov [ eax + 0x4 ] esi
mov ecx [ ecx + 0x18 ]
pop esi
cmp edx [ ecx + 0x4 ]
jne r-xdata
mov [ esi + 0x4 ] edx
mov ecx [ edx + 0x4 ]
cmp edx [ ecx ]
jne r-xdata
mov [ ecx + 0x4 ] eax
mov [ eax ] edx
mov [ edx + 0x4 ] eax
pop ebp
retn 0x4
mov [ ecx + 0x8 ] eax
mov [ eax ] edx
mov [ edx + 0x4 ] eax
pop ebp
retn 0x4
mov [ ecx ] eax
mov [ eax ] edx
mov [ edx + 0x4 ] eax
pop ebp
retn 0x4
sub_411c50
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
push esi
mov esi [ eax ]
mov [ edx + 0x8 ] esi
mov esi [ eax ]
cmp [ esi + 0x4d ] 0x0
jne r-xdata
mov esi [ edx + 0x4 ]
mov [ eax + 0x4 ] esi
mov ecx [ ecx + 0x18 ]
pop esi
cmp edx [ ecx + 0x4 ]
jne r-xdata
mov [ esi + 0x4 ] edx
mov ecx [ edx + 0x4 ]
cmp edx [ ecx ]
jne r-xdata
mov [ ecx + 0x4 ] eax
mov [ eax ] edx
mov [ edx + 0x4 ] eax
pop ebp
retn 0x4
mov [ ecx + 0x8 ] eax
mov [ eax ] edx
mov [ edx + 0x4 ] eax
pop ebp
retn 0x4
mov [ ecx ] eax
mov [ eax ] edx
mov [ edx + 0x4 ] eax
pop ebp
retn 0x4
sub_411cb0
push esi
mov esi ecx
cmp [ esi ] 0x0
push edi
mov edi [ _invalid_parameter_noinfo@IAT ]
jne r-xdata
mov eax [ esi + 0x4 ]
cmp [ eax + 0x4d ] 0x0
je r-xdata
call edi
mov ecx [ eax ]
cmp [ ecx + 0x4d ] 0x0
jne r-xdata
mov eax [ eax + 0x8 ]
mov [ esi + 0x4 ] eax
cmp [ eax + 0x4d ] 0x0
je r-xdata
mov eax [ eax + 0x4 ]
cmp [ eax + 0x4d ] 0x0
jne r-xdata
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x4d ] 0x0
jne r-xdata
pop edi
pop esi
retn
call edi
pop edi
pop esi
retn
mov ecx [ esi + 0x4 ]
cmp [ ecx + 0x4d ] 0x0
jne r-xdata
lea ebx [ ebx ]
pop edi
mov [ esi + 0x4 ] ecx
pop esi
retn
lea esp [ esp ]
mov [ esi + 0x4 ] eax
mov [ esi + 0x4 ] eax
mov edx eax
mov eax [ edx + 0x4 ]
cmp [ eax + 0x4d ] 0x0
je r-xdata
mov ecx eax
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x4d ] 0x0
je r-xdata
mov ecx [ esi + 0x4 ]
cmp ecx [ eax ]
jne r-xdata
sub_411d40
push esi
mov esi ecx
cmp [ esi ] 0x0
push edi
mov edi [ _invalid_parameter_noinfo@IAT ]
jne r-xdata
mov eax [ esi + 0x4 ]
cmp [ eax + 0x4d ] 0x0
je r-xdata
call edi
mov ecx [ eax + 0x8 ]
cmp [ ecx + 0x4d ] 0x0
jne r-xdata
call edi
pop edi
pop esi
retn
mov eax [ eax + 0x4 ]
cmp [ eax + 0x4d ] 0x0
jne r-xdata
mov eax [ ecx ]
cmp [ eax + 0x4d ] 0x0
jne r-xdata
pop edi
mov [ esi + 0x4 ] eax
pop esi
retn
lea esp [ esp ]
pop edi
mov [ esi + 0x4 ] ecx
pop esi
retn
mov ecx eax
mov eax [ ecx ]
cmp [ eax + 0x4d ] 0x0
je r-xdata
mov [ esi + 0x4 ] eax
mov edx eax
mov eax [ edx + 0x4 ]
cmp [ eax + 0x4d ] 0x0
je r-xdata
mov ecx [ esi + 0x4 ]
cmp ecx [ eax + 0x8 ]
jne r-xdata
sub_411db0
push esi
mov esi ecx
cmp [ esi ] 0x0
push edi
mov edi [ _invalid_parameter_noinfo@IAT ]
jne r-xdata
mov eax [ esi + 0x4 ]
cmp [ eax + 0x35 ] 0x0
je r-xdata
call edi
mov ecx [ eax ]
cmp [ ecx + 0x35 ] 0x0
jne r-xdata
mov eax [ eax + 0x8 ]
mov [ esi + 0x4 ] eax
cmp [ eax + 0x35 ] 0x0
je r-xdata
mov eax [ eax + 0x4 ]
cmp [ eax + 0x35 ] 0x0
jne r-xdata
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x35 ] 0x0
jne r-xdata
pop edi
pop esi
retn
call edi
pop edi
pop esi
retn
mov ecx [ esi + 0x4 ]
cmp [ ecx + 0x35 ] 0x0
jne r-xdata
lea ebx [ ebx ]
pop edi
mov [ esi + 0x4 ] ecx
pop esi
retn
lea esp [ esp ]
mov [ esi + 0x4 ] eax
mov [ esi + 0x4 ] eax
mov edx eax
mov eax [ edx + 0x4 ]
cmp [ eax + 0x35 ] 0x0
je r-xdata
mov ecx eax
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x35 ] 0x0
je r-xdata
mov ecx [ esi + 0x4 ]
cmp ecx [ eax ]
jne r-xdata
sub_411e40
push esi
mov esi ecx
cmp [ esi ] 0x0
push edi
mov edi [ _invalid_parameter_noinfo@IAT ]
jne r-xdata
mov eax [ esi + 0x4 ]
cmp [ eax + 0x35 ] 0x0
je r-xdata
call edi
mov ecx [ eax + 0x8 ]
cmp [ ecx + 0x35 ] 0x0
jne r-xdata
call edi
pop edi
pop esi
retn
mov eax [ eax + 0x4 ]
cmp [ eax + 0x35 ] 0x0
jne r-xdata
mov eax [ ecx ]
cmp [ eax + 0x35 ] 0x0
jne r-xdata
pop edi
mov [ esi + 0x4 ] eax
pop esi
retn
lea esp [ esp ]
pop edi
mov [ esi + 0x4 ] ecx
pop esi
retn
mov ecx eax
mov eax [ ecx ]
cmp [ eax + 0x35 ] 0x0
je r-xdata
mov [ esi + 0x4 ] eax
mov edx eax
mov eax [ edx + 0x4 ]
cmp [ eax + 0x35 ] 0x0
je r-xdata
mov ecx [ esi + 0x4 ]
cmp ecx [ eax + 0x8 ]
jne r-xdata
sub_411eb0
push ebp
mov ebp esp
push 0xffffffff
push sub_41c06b
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x10 ]
mov [ esi ] eax
mov eax [ ebp + 0x14 ]
mov [ esi + 0x4 ] ecx
push eax
lea ecx [ esi + 0xc ]
mov [ esi + 0x8 ] edx
call sub_411890
xor eax eax
mov [ ebp - 0x4 ] eax
mov cl [ ebp + 0x18 ]
mov [ esi + 0x34 ] cl
mov [ esi + 0x35 ] al
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x14
sub_411f20
push ebp
mov ebp esp
push 0xffffffff
push sub_41c098
mov eax [ fs : 0x0 ]
push eax
sub esp 0x24
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
xor edi edi
mov [ ebp - 0x14 ] edi
mov eax [ ebp + 0xc ]
push eax
call [ std::char_traits<char>::length@IAT ]
add esp 0x4
mov ebx eax
mov esi [ ebp + 0x8 ]
mov ecx [ esi ]
mov edx [ ecx + 0x4 ]
mov eax [ edx + esi + 0x18 ]
cmp eax edi
jle r-xdata
push esi
lea ecx [ ebp - 0x30 ]
call sub_4119f0
mov [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x2c ] 0x0
jne r-xdata
cmp eax ebx
jle r-xdata
mov [ ebp - 0x4 ] 0x1
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
mov eax [ ecx + esi + 0x10 ]
and eax 0x1c0
cmp eax 0x40
je r-xdata
mov [ ebp - 0x14 ] 0x4
jmp r-xdata
sub eax ebx
mov edi eax
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx [ eax + esi + 0x28 ]
push ebx
mov edx [ ebp + 0xc ]
push edx
call [ std::basic_streambuf<char,struct std::char_traits<char> >::sputn@IAT ]
cmp eax ebx
je r-xdata
test edi edi
jle r-xdata
push 0x0
mov eax [ ebp - 0x14 ]
push eax
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
call [ std::basic_ios<char,struct std::char_traits<char> >::setstate@IAT ]
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x30 ]
call sub_411a90
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
test edi edi
jle r-xdata
mov [ ebp - 0x14 ] 0x4
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
mov edx [ esi ]
mov eax [ edx + 0x4 ]
add eax esi
mov cl [ eax + 0x30 ]
mov [ ebp - 0x18 ] cl
mov eax [ eax + 0x28 ]
mov edx [ ebp - 0x18 ]
push edx
mov ecx eax
call [ std::basic_streambuf<char,struct std::char_traits<char> >::sputc@IAT ]
mov [ ebp - 0x1c ] eax
call [ std::char_traits<char>::eof@IAT ]
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x1c ]
push eax
lea ecx [ ebp - 0x20 ]
push ecx
call [ std::char_traits<char>::eq_int_type@IAT ]
add esp 0x8
test al al
je r-xdata
mov ecx [ esi ]
mov eax [ ecx + 0x4 ]
add eax esi
xor ecx ecx
mov [ eax + 0x18 ] ecx
mov [ ebp - 0x4 ] ecx
jmp r-xdata
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx + esi ]
mov dl [ eax + 0x30 ]
mov [ ebp - 0x20 ] dl
mov eax [ eax + 0x28 ]
mov ecx [ ebp - 0x20 ]
push ecx
mov ecx eax
call [ std::basic_streambuf<char,struct std::char_traits<char> >::sputc@IAT ]
mov [ ebp - 0x18 ] eax
call [ std::char_traits<char>::eof@IAT ]
mov [ ebp - 0x24 ] eax
lea edx [ ebp - 0x18 ]
push edx
lea eax [ ebp - 0x24 ]
push eax
call [ std::char_traits<char>::eq_int_type@IAT ]
add esp 0x8
test al al
je r-xdata
dec edi
mov [ ebp - 0x28 ] edi
jmp r-xdata
or [ ebp - 0x14 ] 0x4
dec edi
mov [ ebp - 0x28 ] edi
jmp r-xdata
or [ ebp - 0x14 ] 0x4
mov ecx [ esi ]
mov eax [ ecx + 0x4 ]
add eax esi
xor ecx ecx
mov [ eax + 0x18 ] ecx
mov [ ebp - 0x4 ] ecx
jmp r-xdata
sub_4120f0
push esi
mov esi ecx
cmp [ esi ] 0x0
push edi
mov edi [ _invalid_parameter_noinfo@IAT ]
jne r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x4 ]
mov eax [ esi ]
mov [ esi + 0x4 ] ecx
test eax eax
je r-xdata
call edi
xor eax eax
mov eax [ eax ]
jmp r-xdata
pop edi
mov eax esi
pop esi
retn
call edi
cmp ecx [ eax + 0x14 ]
jne r-xdata
sub_412130
push ebp
mov ebp esp
push 0xffffffff
push sub_41c0c9
mov eax [ fs : 0x0 ]
push eax
sub esp 0x44
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ecx + 0x18 ]
mov edx [ ebp + 0x8 ]
mov esi 0x7ffffff
sub esi eax
cmp esi edx
jae r-xdata
add eax edx
mov [ ecx + 0x18 ] eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
push r--data
lea ecx [ ebp - 0x28 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x28 ]
push eax
lea ecx [ ebp - 0x50 ]
call sub_402250
push r--data
lea ecx [ ebp - 0x50 ]
push ecx
call _CxxThrowException
sub_4121b0
push ebp
mov ebp esp
push 0xffffffff
push sub_41c100
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ecx ]
push eax
call ??3@YAXPAX@Z
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_412200
push ebp
mov ebp esp
push 0xffffffff
push sub_41c120
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
push 0x28
call ??2@YAPAXI@Z
add esp 0x4
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
mov [ ebp - 0x18 ] 0x1
lea ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
mov [ eax ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ecx ] eax
sub_412290
push ebp
mov ebp esp
push 0xffffffff
push sub_41c140
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
push 0x38
call ??2@YAPAXI@Z
add esp 0x4
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
mov edx 0x1
mov [ ebp - 0x14 ] edx
lea ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
mov [ eax ] 0x0
mov [ ebp - 0x14 ] 0x2
lea ecx [ eax + 0x8 ]
test ecx ecx
je r-xdata
mov [ ecx ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
mov [ eax + 0x34 ] dl
mov [ eax + 0x35 ] 0x0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ecx ] 0x0
sub_412340
push ebp
mov ebp esp
push 0xffffffff
push sub_41c171
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
push 0x38
call ??2@YAPAXI@Z
add esp 0x4
mov esi eax
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x4 ] 0x1
test esi esi
je r-xdata
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
mov eax [ ebp + 0x18 ]
push eax
mov ecx [ ebp + 0x14 ]
push ecx
mov edx [ ebp + 0x10 ]
push edx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx esi
call sub_411eb0
sub_4123e0
push ebp
mov ebp esp
push 0xffffffff
push sub_41c190
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
push 0x50
call ??2@YAPAXI@Z
add esp 0x4
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
mov edx 0x1
mov [ ebp - 0x14 ] edx
lea ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
mov [ eax ] 0x0
mov [ ebp - 0x14 ] 0x2
lea ecx [ eax + 0x8 ]
test ecx ecx
je r-xdata
mov [ ecx ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
mov [ eax + 0x4c ] dl
mov [ eax + 0x4d ] 0x0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ecx ] 0x0
sub_412490
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x18 ]
push edi
mov edi [ _invalid_parameter_noinfo@IAT ]
mov edi edi
call edi
cmp eax [ ebp + 0x10 ]
je r-xdata
pop edi
pop esi
pop ebp
retn
inc [ esi ]
lea ecx [ ebp + 0x8 ]
call sub_411e40
jmp r-xdata
mov eax [ ebp + 0xc ]
cmp eax [ ebp + 0x14 ]
je r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
sub_4124d0
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x18 ]
push edi
mov edi [ _invalid_parameter_noinfo@IAT ]
mov edi edi
call edi
cmp eax [ ebp + 0x10 ]
je r-xdata
pop edi
pop esi
pop ebp
retn
inc [ esi ]
lea ecx [ ebp + 0x8 ]
call sub_411d40
jmp r-xdata
mov eax [ ebp + 0xc ]
cmp eax [ ebp + 0x14 ]
je r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
sub_412510
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
push eax
push ecx
mov ecx [ ebp + 0x8 ]
push edx
add ecx 0x18
call sub_416ad0
pop ebp
retn
sub_412530
push ebp
mov ebp esp
push ebx
mov ebx [ _invalid_parameter_noinfo@IAT ]
push esi
push edi
mov edi [ utf::string::c_str@IAT ]
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x1c ]
mov edx [ ebp + 0x20 ]
pop edi
pop esi
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
pop ebx
pop ebp
retn
lea ecx [ ebp + 0xc ]
call sub_407d60
mov esi [ ebp + 0x20 ]
mov ecx eax
call edi
push eax
push esi
call sub_411f20
mov eax [ ebp + 0x1c ]
add esp 0x8
test eax eax
je r-xdata
mov ecx [ ebp + 0x20 ]
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
add eax ecx
mov ecx [ eax + 0x8 ]
and cl 0x6
movsx edx cl
neg edx
sbb edx edx
not edx
test eax edx
jne r-xdata
mov ecx [ ebp + 0x20 ]
push eax
push ecx
call sub_411f20
add esp 0x8
inc [ ebp + 0x10 ]
jmp r-xdata
call ebx
mov eax [ ebp + 0x10 ]
cmp eax [ ebp + 0x18 ]
je r-xdata
sub_4125b0
push ebp
mov ebp esp
push 0xffffffff
push sub_41c1c8
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ecx ]
push eax
call ??3@YAXPAX@Z
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_412600
push ebp
mov ebp esp
push 0xffffffff
push sub_41c20d
mov eax [ fs : 0x0 ]
push eax
sub esp 0x50
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] ecx
mov ebx [ ebp + 0x10 ]
cmp [ ebx + 0x35 ] 0x0
je r-xdata
lea ecx [ ebp + 0xc ]
mov [ ebp - 0x14 ] ebx
call sub_411e40
mov ecx [ ebx ]
cmp [ ecx + 0x35 ] 0x0
je r-xdata
push r--data
lea ecx [ ebp - 0x34 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x34 ]
push eax
lea ecx [ ebp - 0x5c ]
call sub_402360
push r--data
lea ecx [ ebp - 0x5c ]
push ecx
call _CxxThrowException
mov edx [ ebx + 0x8 ]
cmp [ edx + 0x35 ] 0x0
je r-xdata
mov edi [ ebx + 0x8 ]
jmp r-xdata
mov eax [ ebp + 0x10 ]
mov edi [ eax + 0x8 ]
lea edx [ eax + 0x8 ]
cmp eax ebx
jne r-xdata
mov edi ecx
jmp r-xdata
cmp [ edi + 0x35 ] 0x0
mov esi [ ebx + 0x4 ]
jne r-xdata
mov [ ecx + 0x4 ] eax
mov ecx [ ebx ]
mov [ eax ] ecx
cmp eax [ ebx + 0x8 ]
jne r-xdata
mov ecx [ ebp - 0x10 ]
mov eax [ ecx + 0x18 ]
cmp [ eax + 0x4 ] ebx
jne r-xdata
mov [ edi + 0x4 ] esi
cmp [ edi + 0x35 ] 0x0
mov esi [ eax + 0x4 ]
jne r-xdata
mov esi eax
jmp r-xdata
cmp [ esi ] ebx
jne r-xdata
mov [ eax + 0x4 ] edi
jmp r-xdata
mov [ esi ] edi
mov ecx [ ebx + 0x8 ]
mov [ edx ] ecx
mov edx [ ebx + 0x8 ]
mov [ edx + 0x4 ] eax
mov [ edi + 0x4 ] esi
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0x18 ]
cmp [ ecx + 0x4 ] ebx
jne r-xdata
mov [ esi + 0x8 ] edi
mov [ esi ] edi
jmp r-xdata
mov eax [ ecx + 0x18 ]
cmp [ eax ] ebx
jne r-xdata
mov ecx [ ebx + 0x4 ]
cmp [ ecx ] ebx
jne r-xdata
mov [ ecx + 0x4 ] eax
jmp r-xdata
mov ecx [ ecx + 0x18 ]
mov [ ebp - 0x18 ] ecx
cmp [ ecx + 0x8 ] ebx
jne r-xdata
cmp [ edi + 0x35 ] 0x0
je r-xdata
mov [ ecx + 0x8 ] eax
mov [ ecx ] eax
jmp r-xdata
mov edx [ ebx + 0x4 ]
mov [ eax + 0x4 ] edx
lea ecx [ ebx + 0x34 ]
add eax 0x34
cmp eax ecx
je r-xdata
mov eax [ ebp - 0x14 ]
mov bl 0x1
cmp [ eax + 0x34 ] bl
jne r-xdata
cmp [ edi + 0x35 ] 0x0
je r-xdata
push edi
call sub_411770
mov ecx [ ebp - 0x10 ]
add esp 0x4
mov eax esi
jmp r-xdata
mov bl [ ecx ]
mov dl [ eax ]
mov [ eax ] bl
mov [ ecx ] dl
or eax 0xffffffff
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x14 ]
add ecx 0xc
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x4 ] eax
call [ utf::string::~string@IAT ]
mov ecx [ ebp - 0x14 ]
push ecx
call ??3@YAXPAX@Z
mov edx [ ebp - 0x10 ]
mov eax [ edx + 0x1c ]
add esp 0x4
test eax eax
jbe r-xdata
mov ecx [ ebp - 0x10 ]
mov edx [ ecx + 0x18 ]
cmp edi [ edx + 0x4 ]
je r-xdata
push edi
call sub_411750
mov ecx [ ebp - 0x18 ]
add esp 0x4
mov [ ecx + 0x8 ] eax
jmp r-xdata
mov eax esi
mov [ ecx + 0x8 ] eax
jmp r-xdata
mov edx [ ecx + 0x18 ]
mov [ edx ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ edx ]
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
dec eax
mov [ edx + 0x1c ] eax
mov [ edi + 0x34 ] bl
cmp [ edi + 0x34 ] bl
jne r-xdata
mov eax [ esi ]
cmp edi eax
jne r-xdata
cmp [ eax + 0x34 ] 0x0
jne r-xdata
mov eax [ esi + 0x8 ]
cmp [ eax + 0x34 ] 0x0
jne r-xdata
cmp [ eax + 0x35 ] 0x0
jne r-xdata
mov [ eax + 0x34 ] bl
push esi
mov [ esi + 0x34 ] 0x0
call sub_411790
mov eax [ esi ]
mov ecx [ ebp - 0x10 ]
cmp [ eax + 0x35 ] 0x0
jne r-xdata
mov [ eax + 0x34 ] bl
push esi
mov [ esi + 0x34 ] 0x0
call sub_411bf0
mov eax [ esi + 0x8 ]
mov ecx [ ebp - 0x10 ]
mov eax [ ecx + 0x18 ]
mov edi esi
mov esi [ esi + 0x4 ]
cmp edi [ eax + 0x4 ]
jne r-xdata
mov edx [ eax + 0x8 ]
cmp [ edx + 0x34 ] bl
jne r-xdata
mov edx [ eax ]
cmp [ edx + 0x34 ] bl
jne r-xdata
jmp r-xdata
mov edx [ eax ]
cmp [ edx + 0x34 ] bl
jne r-xdata
mov edx [ eax ]
cmp [ edx + 0x34 ] bl
jne r-xdata
mov edx [ eax + 0x8 ]
cmp [ edx + 0x34 ] bl
jne r-xdata
mov edx [ eax + 0x8 ]
cmp [ edx + 0x34 ] bl
je r-xdata
mov dl [ esi + 0x34 ]
mov [ eax + 0x34 ] dl
mov [ esi + 0x34 ] bl
mov eax [ eax ]
push esi
mov [ eax + 0x34 ] bl
call sub_411790
mov edx [ eax + 0x8 ]
mov [ edx + 0x34 ] bl
push eax
mov [ eax + 0x34 ] 0x0
call sub_411bf0
mov eax [ esi ]
mov ecx [ ebp - 0x10 ]
mov [ eax + 0x34 ] 0x0
mov dl [ esi + 0x34 ]
mov [ eax + 0x34 ] dl
mov [ esi + 0x34 ] bl
mov eax [ eax + 0x8 ]
push esi
mov [ eax + 0x34 ] bl
call sub_411bf0
jmp r-xdata
mov edx [ eax ]
mov [ edx + 0x34 ] bl
push eax
mov [ eax + 0x34 ] 0x0
call sub_411790
mov eax [ esi + 0x8 ]
mov ecx [ ebp - 0x10 ]
sub_4128d0
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
push edi
mov edi ecx
mov eax [ edi + 0x18 ]
mov esi [ eax + 0x4 ]
cmp [ esi + 0x35 ] 0x0
mov [ ebp - 0x8 ] edi
mov [ ebp - 0x4 ] eax
mov ebx eax
jne r-xdata
cmp [ ebx + 0x35 ] 0x0
je r-xdata
nop
mov esi [ ebx ]
mov ecx [ edi + 0x18 ]
mov esi [ ecx + 0x4 ]
jmp r-xdata
cmp [ ebx + 0x35 ] 0x0
je r-xdata
mov esi [ esi + 0x8 ]
jmp r-xdata
mov ecx [ edi ]
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
pop edi
pop esi
mov [ eax + 0xc ] ebx
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
mov [ eax + 0x8 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebp + 0xc ]
lea edx [ esi + 0xc ]
push edx
call [ utf::string::operator<=@IAT ]
test al al
je r-xdata
cmp [ esi + 0x35 ] 0x0
jne r-xdata
mov [ ebp - 0x4 ] esi
mov esi [ esi ]
mov ecx [ ebp + 0xc ]
push edi
call [ utf::string::operator<=@IAT ]
test al al
je r-xdata
cmp [ esi + 0x35 ] 0x0
je r-xdata
mov esi [ esi + 0x8 ]
mov ebx esi
mov esi [ esi ]
jmp r-xdata
mov eax [ ebp + 0xc ]
lea edi [ esi + 0xc ]
push eax
mov ecx edi
call [ utf::string::operator<=@IAT ]
test al al
je r-xdata
mov edi [ ebp - 0x8 ]
mov ebx esi
cmp [ esi + 0x35 ] 0x0
je r-xdata
sub_412980
push ebp
mov ebp esp
push 0xffffffff
push sub_41b1f9
mov eax [ fs : 0x0 ]
push eax
sub esp 0x44
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
cmp [ edi + 0x1c ] 0x6666665
jb r-xdata
mov edx [ ebp + 0x14 ]
mov eax [ edi + 0x18 ]
mov esi [ ebp + 0x10 ]
push 0x0
push edx
push eax
push esi
push eax
call sub_412340
mov ecx eax
mov eax [ edi + 0x18 ]
mov ebx 0x1
add [ edi + 0x1c ] ebx
mov [ ebp + 0x14 ] ecx
cmp esi eax
jne r-xdata
push r--data
lea ecx [ ebp - 0x28 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x28 ]
push eax
lea ecx [ ebp - 0x50 ]
call sub_402250
push r--data
lea ecx [ ebp - 0x50 ]
push ecx
call _CxxThrowException
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov [ eax + 0x4 ] ecx
mov eax [ edi + 0x18 ]
mov [ eax ] ecx
mov edx [ edi + 0x18 ]
mov [ edx + 0x8 ] ecx
jmp r-xdata
mov [ esi + 0x8 ] ecx
mov eax [ edi + 0x18 ]
cmp esi [ eax + 0x8 ]
jne r-xdata
mov [ esi ] ecx
mov eax [ edi + 0x18 ]
cmp esi [ eax ]
jne r-xdata
mov edx [ ecx + 0x4 ]
cmp [ edx + 0x34 ] 0x0
lea eax [ ecx + 0x4 ]
mov esi ecx
jne r-xdata
mov [ eax + 0x8 ] ecx
mov [ eax ] ecx
jmp r-xdata
mov eax [ edi + 0x18 ]
mov edx [ eax + 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ edx + 0x34 ] bl
mov [ eax + 0x4 ] ecx
mov ecx [ edi ]
mov [ eax ] ecx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
lea ecx [ ecx ]
mov edx [ edx ]
cmp [ edx + 0x34 ] 0x0
jne r-xdata
mov edx [ edx + 0x8 ]
cmp [ edx + 0x34 ] 0x0
jne r-xdata
cmp esi [ ecx ]
jne r-xdata
mov [ ecx + 0x34 ] bl
mov [ edx + 0x34 ] bl
mov edx [ eax ]
mov ecx [ edx + 0x4 ]
mov [ ecx + 0x34 ] 0x0
mov edx [ eax ]
mov esi [ edx + 0x4 ]
jmp r-xdata
cmp esi [ ecx + 0x8 ]
jne r-xdata
mov [ ecx + 0x34 ] bl
mov [ edx + 0x34 ] bl
mov edx [ eax ]
mov ecx [ edx + 0x4 ]
mov [ ecx + 0x34 ] 0x0
mov edx [ eax ]
mov esi [ edx + 0x4 ]
jmp r-xdata
mov eax [ esi + 0x4 ]
mov [ eax + 0x34 ] bl
mov ecx [ esi + 0x4 ]
mov edx [ ecx + 0x4 ]
mov [ edx + 0x34 ] 0x0
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x4 ]
push ecx
mov ecx edi
call sub_411bf0
mov esi ecx
push esi
mov ecx edi
call sub_411790
mov edx [ esi + 0x4 ]
cmp [ edx + 0x34 ] 0x0
lea eax [ esi + 0x4 ]
je r-xdata
mov eax [ esi + 0x4 ]
mov [ eax + 0x34 ] bl
mov ecx [ esi + 0x4 ]
mov edx [ ecx + 0x4 ]
mov [ edx + 0x34 ] 0x0
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x4 ]
push ecx
mov ecx edi
call sub_411790
jmp r-xdata
mov esi ecx
push esi
mov ecx edi
call sub_411bf0
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
cmp ecx [ edx ]
jne r-xdata
mov ecx [ ebp + 0x14 ]
sub_412b30
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
push edi
mov edi ecx
mov eax [ edi + 0x18 ]
mov esi [ eax + 0x4 ]
cmp [ esi + 0x4d ] 0x0
mov [ ebp - 0x8 ] edi
mov [ ebp - 0x4 ] eax
mov ebx eax
jne r-xdata
cmp [ ebx + 0x4d ] 0x0
je r-xdata
nop
mov esi [ ebx ]
mov ecx [ edi + 0x18 ]
mov esi [ ecx + 0x4 ]
jmp r-xdata
cmp [ ebx + 0x4d ] 0x0
je r-xdata
mov esi [ esi + 0x8 ]
jmp r-xdata
mov ecx [ edi ]
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
pop edi
pop esi
mov [ eax + 0xc ] ebx
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
mov [ eax + 0x8 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebp + 0xc ]
lea edx [ esi + 0xc ]
push edx
call [ utf::string::operator<=@IAT ]
test al al
je r-xdata
cmp [ esi + 0x4d ] 0x0
jne r-xdata
mov [ ebp - 0x4 ] esi
mov esi [ esi ]
mov ecx [ ebp + 0xc ]
push edi
call [ utf::string::operator<=@IAT ]
test al al
je r-xdata
cmp [ esi + 0x4d ] 0x0
je r-xdata
mov esi [ esi + 0x8 ]
mov ebx esi
mov esi [ esi ]
jmp r-xdata
mov eax [ ebp + 0xc ]
lea edi [ esi + 0xc ]
push eax
mov ecx edi
call [ utf::string::operator<=@IAT ]
test al al
je r-xdata
mov edi [ ebp - 0x8 ]
mov ebx esi
cmp [ esi + 0x4d ] 0x0
je r-xdata
sub_412be0
push ebp
mov ebp esp
push 0xffffffff
push sub_41c244
mov eax [ fs : 0x0 ]
push eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx ecx
mov edi [ ebp + 0x8 ]
cmp [ edi + 0x35 ] 0x0
mov esi edi
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ esi + 0x8 ]
push eax
mov ecx ebx
call sub_412be0
mov esi [ esi ]
or eax 0xffffffff
mov [ ebp - 0x4 ] eax
lea ecx [ edi + 0xc ]
mov [ ebp + 0x8 ] ecx
mov [ ebp - 0x4 ] eax
call [ utf::string::~string@IAT ]
push edi
call ??3@YAXPAX@Z
add esp 0x4
cmp [ esi + 0x35 ] 0x0
mov edi esi
mov [ ebp + 0x8 ] edi
je r-xdata
sub_412c60
push ebp
mov ebp esp
push 0xffffffff
push sub_41b888
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov eax [ ebp + 0x8 ]
push ecx
movzx ecx [ eax ]
mov [ ebp - 0x14 ] esp
mov [ ebp - 0x14 ] esp
push ecx
mov ecx esi
call sub_40ad90
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_412cc0
push ebp
mov ebp esp
push 0xffffffff
push sub_41c280
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ecx ]
push eax
call ??3@YAXPAX@Z
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_412d10
push ebp
mov ebp esp
push 0xffffffff
push sub_41a578
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
push ecx
mov [ ebp - 0x14 ] esp
mov [ ebp - 0x14 ] esp
call sub_4058c0
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_412d70
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
mov ebx ecx
push edi
mov edi [ ebx + 0x18 ]
mov esi [ edi + 0x4 ]
cmp [ esi + 0x35 ] 0x0
mov al 0x1
mov [ ebp - 0x4 ] al
jne r-xdata
mov esi [ ebx ]
mov [ ebp - 0x8 ] edi
mov [ ebp - 0xc ] esi
test al al
je r-xdata
lea esp [ esp ]
mov edx [ ebp + 0xc ]
mov ecx [ ebp - 0x8 ]
push edx
add ecx 0xc
call [ utf::string::operator<=@IAT ]
test al al
je r-xdata
mov ecx [ ebx + 0x18 ]
mov edx [ ecx ]
mov [ ebp - 0x10 ] edx
test esi esi
je r-xdata
mov esi [ esi + 0x8 ]
mov esi [ esi ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
pop edi
mov [ eax ] esi
pop esi
mov [ eax + 0x8 ] 0x0
mov [ eax + 0x4 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0x4 ]
push eax
push edi
push ecx
lea edx [ ebp - 0x14 ]
push edx
mov ecx ebx
call sub_412980
mov edx [ eax ]
mov ecx [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
pop edi
pop esi
mov [ ecx + 0x4 ] eax
mov [ ecx ] edx
mov [ ecx + 0x8 ] 0x1
mov eax ecx
pop ebx
mov esp ebp
pop ebp
retn 0x8
call [ _invalid_parameter_noinfo@IAT ]
cmp esi esi
je r-xdata
mov ecx [ ebp + 0xc ]
lea eax [ esi + 0xc ]
push eax
mov edi esi
call [ utf::string::operator<=@IAT ]
mov [ ebp - 0x4 ] al
test al al
je r-xdata
cmp [ esi + 0x35 ] 0x0
je r-xdata
lea ecx [ ebp - 0xc ]
call sub_411db0
mov esi [ ebp - 0xc ]
mov eax [ ebp + 0xc ]
push eax
push edi
push 0x1
lea ecx [ ebp - 0x14 ]
push ecx
mov ecx ebx
call sub_412980
mov ecx eax
mov edx [ ecx ]
mov eax [ ebp + 0x8 ]
mov ecx [ ecx + 0x4 ]
pop edi
pop esi
mov [ eax ] edx
mov [ eax + 0x8 ] 0x1
mov [ eax + 0x4 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp edi [ ebp - 0x10 ]
jne r-xdata
sub_412e70
push ebp
mov ebp esp
push 0xffffffff
push sub_41a578
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov eax [ ebp + 0x8 ]
push ecx
mov [ ebp - 0x14 ] esp
mov [ ebp - 0x14 ] esp
push eax
call sub_412c60
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_412ed0
push ebp
mov ebp esp
sub esp 0x10
push esi
mov esi ecx
mov eax [ esi + 0x1c ]
push edi
mov edi [ esi + 0x18 ]
add eax edi
cmp edi eax
jbe r-xdata
mov ecx [ ebp + 0x8 ]
mov esi [ esi ]
push ecx
lea ecx [ ebp - 0x8 ]
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] edi
call sub_407f30
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] eax
call sub_407d60
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
call [ _invalid_parameter_noinfo@IAT ]
sub_412f20
push ebp
mov ebp esp
sub esp 0x10
mov eax [ ebp + 0xc ]
push ebx
push esi
push eax
mov esi ecx
call sub_411b60
mov ebx eax
mov [ ebp - 0x4 ] ebx
test esi esi
jne r-xdata
mov eax [ esi ]
push edi
mov edi [ esi + 0x18 ]
mov [ ebp - 0x8 ] eax
test eax eax
je r-xdata
call [ _invalid_parameter_noinfo@IAT ]
call [ _invalid_parameter_noinfo@IAT ]
cmp eax eax
je r-xdata
mov ecx [ esi + 0x18 ]
mov edx [ esi ]
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x10 ] edx
lea ecx [ ebp - 0x10 ]
mov ecx [ ebp + 0xc ]
add ebx 0xc
push ebx
call [ utf::string::operator<=@IAT ]
test al al
jne r-xdata
cmp ebx edi
pop edi
je r-xdata
lea ecx [ ebp - 0x8 ]
jmp r-xdata
mov edx [ ecx ]
mov eax [ ebp + 0x8 ]
mov ecx [ ecx + 0x4 ]
pop esi
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_412fa0
push ebp
mov ebp esp
push 0xffffffff
push sub_41c2d8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
push ecx
mov [ ebp - 0x14 ] esp
mov [ ebp - 0x14 ] esp
call sub_412d10
mov [ ebp - 0x4 ] 0x0
mov ecx esi
call sub_412200
mov [ esi + 0x14 ] eax
mov [ esi + 0x18 ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
sub_413010
push ebp
mov ebp esp
push 0xffffffff
push sub_41c2b1
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov ebx 0x1
mov [ ebp + 0x8 ] eax
add [ eax ] bx
add [ eax + 0x2 ] bx
mov [ ebp - 0x4 ] 0x0
add eax 0x8
push eax
lea ecx [ ebp - 0x18 ]
call sub_4093b0
mov [ ebp - 0x4 ] bl
mov ecx [ ebp - 0x18 ]
mov eax [ ecx + 0x14 ]
mov eax [ eax ]
mov esi [ ecx ]
mov ebx [ _invalid_parameter_noinfo@IAT ]
mov edi eax
call ebx
cmp esi [ ebp - 0x14 ]
je r-xdata
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x14 ]
push eax
push ecx
mov ecx [ ebp - 0x18 ]
lea edx [ ebp - 0x14 ]
push edx
call sub_409330
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp + 0x8 ]
call [ sigc::internal::signal_exec::~signal_exec@IAT ]
test esi esi
jne r-xdata
mov eax [ ebp - 0x10 ]
cmp edi eax
je r-xdata
mov eax [ esi ]
jmp r-xdata
call ebx
xor eax eax
cmp edi [ eax + 0x14 ]
jne r-xdata
mov eax [ edi + 0x8 ]
test eax eax
je r-xdata
call ebx
test esi esi
jne r-xdata
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ esi ]
jmp r-xdata
call ebx
xor eax eax
test esi esi
jne r-xdata
cmp edi [ eax + 0x14 ]
jne r-xdata
mov edi [ edi ]
jmp r-xdata
call ebx
mov eax [ esi ]
jmp r-xdata
call ebx
xor eax eax
test esi esi
je r-xdata
cmp edi [ eax + 0x14 ]
jne r-xdata
cmp [ edi + 0xc ] 0x0
jne r-xdata
call ebx
test esi esi
jne r-xdata
mov eax [ esi ]
jmp r-xdata
call ebx
xor eax eax
cmp edi [ eax + 0x14 ]
jne r-xdata
test esi esi
jne r-xdata
call ebx
mov eax [ esi ]
jmp r-xdata
call ebx
xor eax eax
cmp edi [ eax + 0x14 ]
jne r-xdata
mov eax [ edi + 0x8 ]
mov ecx [ ebp + 0xc ]
mov edx eax
mov eax [ eax + 0x4 ]
push ecx
push edx
call eax
add esp 0x8
call ebx
sub_413160
push ebp
mov ebp esp
push 0xffffffff
push sub_41c2b1
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov ebx 0x1
mov [ ebp + 0x8 ] eax
add [ eax ] bx
add [ eax + 0x2 ] bx
mov [ ebp - 0x4 ] 0x0
add eax 0x8
push eax
lea ecx [ ebp - 0x18 ]
call sub_4093b0
mov [ ebp - 0x4 ] bl
mov ecx [ ebp - 0x18 ]
mov eax [ ecx + 0x14 ]
mov eax [ eax ]
mov esi [ ecx ]
mov ebx [ _invalid_parameter_noinfo@IAT ]
mov edi eax
call ebx
cmp esi [ ebp - 0x14 ]
je r-xdata
mov [ ebp - 0x4 ] 0x0
push eax
mov eax [ ebp - 0x14 ]
push eax
lea ecx [ ebp - 0x14 ]
push ecx
mov ecx [ ebp - 0x18 ]
call sub_409330
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp + 0x8 ]
call [ sigc::internal::signal_exec::~signal_exec@IAT ]
test esi esi
jne r-xdata
mov eax [ ebp - 0x10 ]
cmp edi eax
je r-xdata
mov eax [ esi ]
jmp r-xdata
call ebx
xor eax eax
cmp edi [ eax + 0x14 ]
jne r-xdata
mov eax [ edi + 0x8 ]
test eax eax
je r-xdata
call ebx
test esi esi
jne r-xdata
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ esi ]
jmp r-xdata
call ebx
xor eax eax
test esi esi
jne r-xdata
cmp edi [ eax + 0x14 ]
jne r-xdata
mov edi [ edi ]
jmp r-xdata
call ebx
mov eax [ esi ]
jmp r-xdata
call ebx
xor eax eax
test esi esi
je r-xdata
cmp edi [ eax + 0x14 ]
jne r-xdata
cmp [ edi + 0xc ] 0x0
jne r-xdata
call ebx
test esi esi
jne r-xdata
mov eax [ esi ]
jmp r-xdata
call ebx
xor eax eax
cmp edi [ eax + 0x14 ]
jne r-xdata
test esi esi
jne r-xdata
call ebx
mov eax [ esi ]
jmp r-xdata
call ebx
xor eax eax
cmp edi [ eax + 0x14 ]
jne r-xdata
mov ecx [ ebp + 0x10 ]
mov eax [ edi + 0x8 ]
mov edx [ ebp + 0xc ]
push ecx
push edx
mov edx [ eax + 0x4 ]
mov ecx eax
push ecx
call edx
add esp 0xc
call ebx
sub_4132b0
push ebp
mov ebp esp
sub esp 0x14
push esi
mov esi ecx
cmp [ esi + 0x1c ] 0x0
push edi
jne r-xdata
mov eax [ ebp + 0xc ]
mov edx [ esi + 0x18 ]
mov edi [ edx ]
mov ecx [ esi ]
push ebx
mov ebx [ _invalid_parameter_noinfo@IAT ]
test eax eax
je r-xdata
mov eax [ ebp + 0x14 ]
mov ecx [ esi + 0x18 ]
mov edi [ ebp + 0x8 ]
push eax
push ecx
push 0x1
push edi
mov ecx esi
call sub_412980
mov eax edi
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x10
call ebx
mov eax [ ebp + 0xc ]
cmp eax ecx
je r-xdata
mov edi [ esi + 0x18 ]
mov ecx [ esi ]
test eax eax
je r-xdata
mov edi [ ebp + 0x14 ]
add edx 0xc
push edx
mov ecx edi
call [ utf::string::operator<=@IAT ]
test al al
je r-xdata
mov edx [ ebp + 0x10 ]
cmp edx edi
jne r-xdata
call ebx
mov edx [ ebp + 0x10 ]
cmp eax ecx
je r-xdata
push edi
lea eax [ ebp - 0x14 ]
push eax
mov ecx esi
call sub_412d70
mov edx [ eax ]
mov ecx [ ebp + 0x8 ]
pop ebx
mov [ ecx ] edx
mov eax [ eax + 0x4 ]
pop edi
mov [ ecx + 0x4 ] eax
mov eax ecx
pop esi
mov esp ebp
pop ebp
retn 0x10
mov eax [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0x8 ]
push eax
push 0x1
push edi
mov ecx esi
call sub_412980
pop ebx
mov eax edi
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x10
mov ebx [ utf::string::operator<=@IAT ]
add edx 0xc
push edx
mov ecx edi
call ebx
test al al
je r-xdata
mov ecx [ esi + 0x18 ]
mov ecx [ ecx + 0x8 ]
add ecx 0xc
push edi
call [ utf::string::operator<=@IAT ]
test al al
je r-xdata
cmp edx edi
mov edi [ ebp + 0x14 ]
jne r-xdata
mov ecx [ ebp + 0x10 ]
push edi
add ecx 0xc
call ebx
test al al
je r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x10 ]
mov [ ebp - 0x8 ] ecx
lea ecx [ ebp - 0x8 ]
mov [ ebp - 0x4 ] edx
call sub_411db0
mov ecx [ ebp - 0x4 ]
push edi
add ecx 0xc
call ebx
test al al
je r-xdata
mov edx [ esi + 0x18 ]
mov eax [ edx + 0x8 ]
push edi
mov edi [ ebp + 0x8 ]
push eax
push 0x0
push edi
mov ecx esi
call sub_412980
pop ebx
mov eax edi
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x10
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edx [ esi + 0x18 ]
mov [ ebp - 0x8 ] eax
mov eax [ esi ]
mov [ ebp - 0x4 ] ecx
lea ecx [ ebp - 0x8 ]
mov [ ebp - 0xc ] edx
mov [ ebp - 0x10 ] eax
call sub_411e40
lea ecx [ ebp - 0x10 ]
push ecx
lea ecx [ ebp - 0x8 ]
call sub_402220
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x8 ]
cmp [ ecx + 0x35 ] 0x0
push edi
mov edi [ ebp + 0x8 ]
mov ecx esi
jne r-xdata
mov eax [ ebp + 0x10 ]
mov ecx [ eax + 0x8 ]
cmp [ ecx + 0x35 ] 0x0
push edi
mov edi [ ebp + 0x8 ]
mov ecx esi
je r-xdata
mov edx [ ebp - 0x4 ]
add edx 0xc
push edx
mov ecx edi
call ebx
test al al
je r-xdata
push eax
push 0x0
push edi
call sub_412980
pop ebx
mov eax edi
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x10
mov edx [ ebp + 0x10 ]
push edx
push 0x1
push edi
call sub_412980
pop ebx
mov eax edi
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x10
mov edx [ ebp - 0x4 ]
push edx
push 0x1
push edi
call sub_412980
pop ebx
mov eax edi
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x10
sub_4134a0
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
mov esi ecx
mov eax [ esi + 0x18 ]
mov ebx [ eax ]
mov eax [ esi ]
push edi
mov edi [ ebp + 0xc ]
test edi edi
je r-xdata
call [ _invalid_parameter_noinfo@IAT ]
mov edi [ ebp + 0xc ]
cmp edi eax
je r-xdata
test edi edi
je r-xdata
mov ecx [ ebp + 0x14 ]
mov ebx [ esi + 0x18 ]
mov eax [ esi ]
test ecx ecx
je r-xdata
cmp [ ebp + 0x10 ] ebx
jne r-xdata
call [ _invalid_parameter_noinfo@IAT ]
mov edi [ ebp + 0xc ]
cmp edi [ ebp + 0x14 ]
je r-xdata
call [ _invalid_parameter_noinfo@IAT ]
mov edi [ ebp + 0xc ]
cmp ecx eax
je r-xdata
mov esi [ esi ]
mov eax [ ebp + 0x8 ]
pop edi
mov [ eax ] esi
pop esi
mov [ eax + 0x4 ] ebx
pop ebx
mov esp ebp
pop ebp
retn 0x14
lea ecx [ ebp + 0xc ]
call sub_411e40
push ebx
push edi
lea eax [ ebp - 0x8 ]
push eax
mov ecx esi
call sub_412600
mov edi [ ebp + 0xc ]
jmp r-xdata
mov ebx [ ebp + 0x10 ]
cmp ebx [ ebp + 0x18 ]
je r-xdata
mov ecx [ esi + 0x18 ]
mov edx [ ecx + 0x4 ]
push edx
mov ecx esi
call sub_412be0
mov eax [ esi + 0x18 ]
mov [ eax + 0x4 ] eax
mov eax [ esi + 0x18 ]
mov [ esi + 0x1c ] 0x0
mov [ eax ] eax
mov eax [ esi + 0x18 ]
mov [ eax + 0x8 ] eax
mov eax [ esi + 0x18 ]
mov ecx [ eax ]
mov edx [ esi ]
mov eax [ ebp + 0x8 ]
pop edi
pop esi
mov [ eax + 0x4 ] ecx
mov [ eax ] edx
pop ebx
mov esp ebp
pop ebp
retn 0x14
cmp [ ebp + 0x18 ] ebx
jne r-xdata
sub_413570
push ebp
mov ebp esp
push 0xffffffff
push sub_41c2d8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov eax [ ebp + 0x8 ]
push ecx
mov [ ebp - 0x14 ] esp
mov [ ebp - 0x14 ] esp
push eax
call sub_412e70
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_4135d0
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
xor eax eax
mov eax [ eax ]
jmp r-xdata
xor eax eax
mov eax [ eax ]
jmp r-xdata
mov edx [ eax ]
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x18 ]
push edi
test eax eax
je r-xdata
mov edi [ ebp - 0x4 ]
mov ecx [ ebp + 0x10 ]
mov eax [ eax ]
push edi
mov edi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0x20 ]
push edi
mov edi [ ebp + 0x1c ]
push edi
push esi
mov esi [ ebp + 0x8 ]
push edx
push ecx
push eax
push esi
call sub_412530
add esp 0x28
pop edi
mov eax esi
pop esi
mov esp ebp
pop ebp
retn
sub_413650
push ebp
mov ebp esp
push 0xffffffff
push sub_41c311
mov eax [ fs : 0x0 ]
push eax
sub esp 0x38
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov eax [ ebp + 0x8 ]
push eax
call sub_411b10
mov ebx eax
test esi esi
jne r-xdata
mov edi [ esi ]
mov ecx [ esi + 0x18 ]
mov [ ebp - 0x10 ] ecx
test edi edi
je r-xdata
call [ _invalid_parameter_noinfo@IAT ]
call [ _invalid_parameter_noinfo@IAT ]
cmp edi edi
je r-xdata
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
push ecx
lea ecx [ ebp - 0x44 ]
mov [ ebp - 0x10 ] 0x0
call sub_4116d0
mov [ ebp - 0x4 ] 0x0
push eax
push ebx
push edi
lea edx [ ebp - 0x1c ]
push edx
mov ecx esi
call sub_4132b0
mov edi [ eax ]
mov ebx [ eax + 0x4 ]
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x44 ]
call [ utf::string::~string@IAT ]
mov ecx [ ebp + 0x8 ]
lea edx [ ebx + 0xc ]
push edx
call [ utf::string::operator<=@IAT ]
test al al
je r-xdata
cmp ebx [ ebp - 0x10 ]
je r-xdata
mov edi [ edi ]
jmp r-xdata
call [ _invalid_parameter_noinfo@IAT ]
test edi edi
jne r-xdata
cmp ebx [ edi + 0x18 ]
jne r-xdata
lea eax [ ebx + 0x30 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
call [ _invalid_parameter_noinfo@IAT ]
sub_413730
push ebp
mov ebp esp
push 0xffffffff
push sub_41a7b8
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] 0x0
mov eax [ esi + 0x18 ]
mov ecx [ esi ]
mov edx [ eax ]
push eax
push ecx
push edx
push ecx
lea eax [ ebp - 0x18 ]
push eax
mov ecx esi
call sub_4134a0
mov eax [ esi + 0x18 ]
push eax
call ??3@YAXPAX@Z
mov [ esi + 0x18 ] 0x0
mov [ esi + 0x1c ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ esi ]
push ecx
call ??3@YAXPAX@Z
add esp 0x8
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
sub_4137c0
push ebp
mov ebp esp
sub esp 0x10
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov esi ecx
push eax
lea ecx [ ebp - 0x10 ]
push ecx
mov ecx esi
call sub_4128d0
mov edi [ ebp - 0x4 ]
mov ebx [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
mov [ ebp + 0x8 ] 0x0
mov edx [ ebp + 0x8 ]
push edx
mov edx [ ebp - 0x10 ]
lea eax [ ebp + 0x8 ]
push eax
push edi
push ebx
push ecx
push edx
call sub_412490
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x10 ]
add esp 0x18
push edi
push ebx
push eax
push ecx
lea edx [ ebp - 0x8 ]
push edx
mov ecx esi
call sub_4134a0
mov eax [ ebp + 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_413830
push ebp
mov ebp esp
push 0xffffffff
push sub_41c338
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov eax [ ebp + 0x8 ]
push ecx
mov [ ebp - 0x14 ] esp
mov [ ebp - 0x14 ] esp
push eax
call sub_413570
mov [ ebp - 0x4 ] 0x0
mov ecx esi
call sub_412290
mov [ esi + 0x18 ] eax
mov [ eax + 0x35 ] 0x1
mov eax [ esi + 0x18 ]
mov [ eax + 0x4 ] eax
mov eax [ esi + 0x18 ]
mov [ eax ] eax
mov eax [ esi + 0x18 ]
mov [ eax + 0x8 ] eax
mov [ esi + 0x1c ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_4138c0
push ebp
mov ebp esp
push 0xffffffff
push sub_41c338
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov eax [ ebp + 0x8 ]
push ecx
mov [ ebp - 0x14 ] esp
mov [ ebp - 0x14 ] esp
push eax
call sub_413570
mov [ ebp - 0x4 ] 0x0
mov ecx esi
call sub_4123e0
mov [ esi + 0x18 ] eax
mov [ eax + 0x4d ] 0x1
mov eax [ esi + 0x18 ]
mov [ eax + 0x4 ] eax
mov eax [ esi + 0x18 ]
mov [ eax ] eax
mov eax [ esi + 0x18 ]
mov [ eax + 0x8 ] eax
mov [ esi + 0x1c ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_413950
push ebp
mov ebp esp
push 0xffffffff
push sub_41c398
mov eax [ fs : 0x0 ]
push eax
sub esp 0xe4
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx [ ebp + 0x8 ]
mov esi [ ebp + 0x10 ]
mov edi [ ebp + 0xc ]
push 0x1
push 0x2
lea ecx [ ebp - 0xf0 ]
mov [ ebp - 0x54 ] ebx
mov [ ebp - 0x40 ] esi
mov [ ebp - 0x38 ] 0x0
call [ std::basic_ostringstream<char,struct std::char_traits<char>,class std::allocator<char> >::basic_ostringstream<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov [ ebp - 0x4 ] 0x1
mov ecx esi
call [ utf::string::c_str@IAT ]
mov esi [ edi + 0x1c ]
mov [ ebp - 0x50 ] eax
mov eax [ edi + 0x18 ]
add esi eax
cmp eax esi
jbe r-xdata
mov ecx [ edi + 0x18 ]
mov edx [ edi + 0x1c ]
mov eax [ edi ]
add edx ecx
mov [ ebp - 0x48 ] eax
mov [ ebp - 0x3c ] ecx
cmp ecx edx
jbe r-xdata
call [ _invalid_parameter_noinfo@IAT ]
mov edx [ ebp - 0x48 ]
mov edi [ edi ]
lea eax [ ebp - 0xf0 ]
push eax
mov eax [ ebp - 0x50 ]
push eax
push esi
push edx
push ecx
lea eax [ ebp - 0x48 ]
push edi
push eax
call sub_4135d0
add esp 0x1c
lea ecx [ ebp - 0x70 ]
push ecx
lea ecx [ ebp - 0xf0 ]
call [ std::basic_ostringstream<char,struct std::char_traits<char>,class std::allocator<char> >::str@IAT ]
mov [ ebp - 0x4 ] 0x2
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
lea ecx [ ebp - 0x34 ]
call [ utf::string::string@IAT ]
mov [ ebp - 0x4 ] 0x4
lea ecx [ ebp - 0x70 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov ecx [ ebp - 0x40 ]
mov esi [ utf::string::length@IAT ]
call esi
lea ecx [ ebp - 0x34 ]
mov edi eax
call esi
sub eax edi
push eax
push 0x0
push ebx
lea ecx [ ebp - 0x34 ]
call [ utf::string::substr@IAT ]
mov [ ebp - 0x38 ] 0x1
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x34 ]
call [ utf::string::~string@IAT ]
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0xf0 ]
call [ std::basic_ostringstream<char,struct std::char_traits<char>,class std::allocator<char> >::`vector deleting destructor'@IAT ]
mov eax ebx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_401736
mov esp ebp
pop ebp
retn
call [ _invalid_parameter_noinfo@IAT ]
mov ecx [ ebp - 0x3c ]
sub_413aa0
push ebp
mov ebp esp
push 0xffffffff
push sub_41c3cb
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov eax [ ebp + 0xc ]
mov esi [ ebp + 0x10 ]
mov ebx [ _invalid_parameter_noinfo@IAT ]
mov [ ebp - 0x14 ] eax
test eax eax
jne r-xdata
mov eax [ eax ]
jmp r-xdata
call ebx
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
mov ecx [ ebp + 0x10 ]
cmp ecx [ eax + 0x14 ]
jne r-xdata
xor eax eax
mov edx [ ebp + 0x10 ]
mov eax [ edx ]
mov [ ebp + 0x10 ] eax
mov [ ebp - 0x10 ] esi
cmp esi [ edi + 0x14 ]
je r-xdata
call ebx
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ edi ]
mov [ eax + 0x4 ] ecx
mov [ eax ] edx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov eax [ esi + 0x4 ]
mov ecx [ esi ]
mov [ eax ] ecx
mov edx [ esi ]
mov eax [ esi + 0x4 ]
mov [ edx + 0x4 ] eax
or ebx 0xffffffff
mov [ ebp - 0x4 ] ebx
lea ecx [ esi + 0x8 ]
call sub_406af0
push esi
call ??3@YAXPAX@Z
add esp 0x4
add [ edi + 0x18 ] ebx
sub_413b50
push ebp
mov ebp esp
push 0xffffffff
push sub_41ac32
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov edi [ ebp + 0x8 ]
mov ebx [ edi + 0x4 ]
call [ sigc::trackable::trackable@IAT ]
xor eax eax
mov [ ebp - 0x4 ] eax
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] sub_408a40
mov [ esi + 0xc ] sub_4118f0
mov [ esi + 0x10 ] eax
mov [ esi + 0x14 ] eax
mov [ ebp - 0x4 ] 0x1
mov ecx [ edi + 0x18 ]
mov [ esi + 0x18 ] ecx
mov edx [ edi + 0x1c ]
lea eax [ edi + 0x18 ]
mov [ esi + 0x1c ] edx
mov ecx [ eax + 0x8 ]
mov [ esi + 0x20 ] ecx
mov edx [ eax + 0xc ]
mov [ esi + 0x24 ] edx
mov ecx [ eax + 0x10 ]
mov [ esi + 0x28 ] ecx
mov edx [ eax + 0x14 ]
mov eax [ sigc::internal::slot_rep::notify@IAT ]
push eax
mov [ esi + 0x2c ] edx
mov ecx [ esi + 0x28 ]
push esi
call [ sigc::trackable::add_destroy_notify_callback@IAT ]
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_413c00
push ebp
mov ebp esp
push 0xffffffff
push sub_41c3f8
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] 0xffffffff
call sub_413730
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_413c50
push ebp
mov ebp esp
push esi
lea eax [ ebp + 0x8 ]
push eax
add ecx 0x30
call sub_40b210
mov esi [ eax ]
test esi esi
je r-xdata
pop esi
pop ebp
retn 0x14
mov ecx [ ebp + 0xc ]
push ecx
mov ecx esi
call sub_4114e0
mov edx [ ebp + 0x14 ]
mov eax [ ebp + 0x10 ]
push edx
push eax
mov ecx esi
call sub_411560
mov ecx [ ebp + 0x18 ]
push ecx
lea ecx [ ebp + 0x8 ]
call [ cui::Color::Color@IAT ]
lea edx [ ebp + 0x8 ]
push edx
mov ecx esi
call sub_411680
sub_413ca0
push ebp
mov ebp esp
lea eax [ ebp + 0x8 ]
push eax
add ecx 0x30
call sub_40b210
mov ecx [ eax ]
test ecx ecx
je r-xdata
pop ebp
retn 0x8
mov edx [ ebp + 0xc ]
push edx
call sub_411620
sub_413cd0
push ebp
mov ebp esp
lea eax [ ebp + 0x8 ]
push eax
add ecx 0x30
call sub_40b210
mov ecx [ eax ]
test ecx ecx
je r-xdata
pop ebp
retn 0x8
mov edx [ ebp + 0xc ]
push edx
call sub_411650
sub_413d00
push ebp
mov ebp esp
push 0xffffffff
push sub_41c432
mov eax [ fs : 0x0 ]
push eax
sub esp 0x54
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
cmp [ ebp + 0x14 ] 0x0
mov eax [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
mov esi [ edi + 0x1c ]
mov [ ebp - 0x3c ] eax
je r-xdata
cmp esi [ ebp + 0x10 ]
sete al
cmp esi [ ebp + 0x10 ]
setae al
jmp r-xdata
mov al 0x1
push r--data
lea ecx [ ebp - 0x60 ]
call [ utf::string::string@IAT ]
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x60 ]
push ecx
lea edx [ ebp - 0x34 ]
push edi
push edx
call sub_413950
add esp 0xc
mov [ ebp - 0x4 ] 0x2
mov ebx [ utf::string::~string@IAT ]
lea ecx [ ebp - 0x60 ]
call ebx
cmp [ ebp + 0x14 ] 0x0
mov [ ebp - 0x38 ] r--data
jne r-xdata
test al al
jne r-xdata
mov edi [ utf::string::c_str@IAT ]
lea ecx [ ebp - 0x34 ]
call edi
mov ecx [ ebp - 0x38 ]
push eax
mov eax [ ebp + 0x10 ]
push esi
push eax
push ecx
mov ecx [ ebp - 0x3c ]
call edi
push eax
push r--data
push r--data
call Ordinal_vmwarebase_4
add esp 0x1c
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x34 ]
call ebx
xor al al
jmp r-xdata
mov [ ebp - 0x38 ] r--data
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_401736
mov esp ebp
pop ebp
retn 0x10
sub_413e00
push ebp
mov ebp esp
push 0xffffffff
push sub_41c468
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x14 ] esi
lea eax [ ebp - 0xd ]
push eax
lea ecx [ ebp - 0xd ]
push ecx
mov ecx esi
call sub_413830
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
sub_413e60
push ebp
mov ebp esp
push 0xffffffff
push sub_41c4b3
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x14 ] ecx
mov eax [ ecx + 0x14 ]
mov esi [ eax ]
mov [ eax ] eax
mov eax [ ecx + 0x14 ]
mov [ eax + 0x4 ] eax
mov [ ebp - 0x10 ] esi
mov [ ecx + 0x18 ] 0x0
cmp esi [ ecx + 0x14 ]
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
jmp r-xdata
mov edi [ esi ]
mov [ ebp - 0x4 ] 0xffffffff
lea ebx [ esi + 0x8 ]
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x4 ] 0x1
mov ecx ebx
call sub_405ce0
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebx ]
push eax
call ??3@YAXPAX@Z
push esi
call ??3@YAXPAX@Z
mov ecx [ ebp - 0x14 ]
add esp 0x8
mov esi edi
mov [ ebp - 0x10 ] esi
cmp edi [ ecx + 0x14 ]
jne r-xdata
sub_413f10
push ebp
mov ebp esp
push 0xffffffff
push sub_419e31
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ecx [ ebp + 0x8 ]
mov [ ebp + 0x8 ] ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] 0x0
test ecx ecx
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0xc ]
push eax
call sub_408b60
sub_413f70
push ebp
mov ebp esp
push 0xffffffff
push sub_41c4f1
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov eax [ ebp + 0x10 ]
mov edi [ esi + 0x14 ]
sub esp 0x8
mov ecx esp
mov [ ebp - 0x10 ] esp
push eax
mov [ ebp - 0x14 ] ecx
call [ sigc::slot_base::slot_base@IAT ]
mov [ ebp - 0x4 ] 0x2
mov edx [ ebp + 0xc ]
sub esp 0x20
mov ecx esp
mov [ ebp + 0x10 ] esp
push edx
call sub_408b60
mov [ ebp - 0x4 ] 0x3
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ edi + 0x4 ]
mov eax [ esi + 0x8 ]
push ecx
mov ecx [ edx + eax ]
add ecx [ esi + 0x4 ]
lea ecx [ ecx + edi + 0x4 ]
mov [ ebp - 0x4 ] 0xffffffff
mov edx [ esi ]
call edx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0xc
sub_414010
push ebp
mov ebp esp
push 0xffffffff
push sub_41c571
mov eax [ fs : 0x0 ]
push eax
sub esp 0x6c
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] ecx
lea ecx [ ebp - 0x30 ]
call sub_405c70
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0xc ]
mov edi [ cui::Format@IAT ]
push eax
lea ecx [ ebp - 0x78 ]
push r--data
push ecx
call edi
add esp 0xc
mov [ ebp - 0x4 ] 0x1
mov ebx [ utf::string::c_str@IAT ]
mov ecx eax
call ebx
push eax
lea ecx [ ebp - 0x54 ]
call [ utf::string::string@IAT ]
mov [ ebp - 0x4 ] 0x2
lea edx [ ebp - 0x54 ]
push edx
lea ecx [ ebp - 0x30 ]
call sub_406dd0
mov [ ebp - 0x4 ] 0x1
mov esi [ utf::string::~string@IAT ]
lea ecx [ ebp - 0x54 ]
call esi
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x78 ]
call esi
mov eax [ ebp + 0x10 ]
push eax
lea ecx [ ebp - 0x78 ]
push r--data
push ecx
call edi
add esp 0xc
mov [ ebp - 0x4 ] 0x3
mov ecx eax
call ebx
push eax
lea ecx [ ebp - 0x54 ]
call [ utf::string::string@IAT ]
mov [ ebp - 0x4 ] 0x4
lea edx [ ebp - 0x54 ]
push edx
lea ecx [ ebp - 0x30 ]
call sub_406dd0
mov [ ebp - 0x4 ] 0x3
lea ecx [ ebp - 0x54 ]
call esi
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x78 ]
call esi
mov eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp - 0x78 ]
push r--data
push ecx
call edi
add esp 0xc
mov [ ebp - 0x4 ] 0x5
mov ecx eax
call ebx
push eax
lea ecx [ ebp - 0x54 ]
call [ utf::string::string@IAT ]
mov [ ebp - 0x4 ] 0x6
lea edx [ ebp - 0x54 ]
push edx
lea ecx [ ebp - 0x30 ]
call sub_406dd0
mov [ ebp - 0x4 ] 0x5
lea ecx [ ebp - 0x54 ]
call esi
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x78 ]
call esi
mov eax [ ebp + 0x18 ]
push eax
lea ecx [ ebp - 0x78 ]
push r--data
push ecx
call edi
add esp 0xc
mov [ ebp - 0x4 ] 0x7
mov ecx eax
call ebx
push eax
lea ecx [ ebp - 0x54 ]
call [ utf::string::string@IAT ]
mov [ ebp - 0x4 ] 0x8
lea edx [ ebp - 0x54 ]
push edx
lea ecx [ ebp - 0x30 ]
call sub_406dd0
mov [ ebp - 0x4 ] 0x7
lea ecx [ ebp - 0x54 ]
call esi
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x78 ]
call esi
mov eax [ ebp + 0x8 ]
push eax
sub esp 0x20
lea edx [ ebp - 0x30 ]
mov ecx esp
mov [ ebp + 0xc ] esp
push edx
call sub_408b60
mov [ ebp - 0x4 ] 0x9
mov eax [ cui::ipc::UnityHelper::COMMAND_ID_SHOW_APPS_MENU@IAT ]
sub esp 0x24
mov ecx esp
mov [ ebp + 0x10 ] esp
push eax
call [ utf::string::string@IAT ]
mov [ ebp - 0x4 ] 0xa
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x10 ]
call [ cui::ipc::Dispatch::SendCommand@IAT ]
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x30 ]
call sub_406af0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
sub_4141e0
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
pop esi
mov esp ebp
pop ebp
retn 0x4
push edi
call sub_411230
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x4 ]
lea edi [ esi + 0x30 ]
push eax
mov ecx edi
call sub_40b210
mov ecx [ eax ]
test ecx ecx
je r-xdata
mov ecx [ ebp + 0x8 ]
call sub_411230
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx edi
mov [ ebp - 0x4 ] eax
call sub_40af40
mov ecx [ ebp + 0x8 ]
call sub_411250
push eax
lea ecx [ esi + 0x50 ]
call sub_4137c0
mov eax [ esi + 0x18 ]
lea edx [ ebp + 0x8 ]
push edx
push eax
call sub_413010
mov ecx [ ebp + 0x8 ]
add esp 0x8
pop edi
test ecx ecx
je r-xdata
push 0x0
call sub_411650
mov edx [ ecx ]
mov eax [ edx ]
push 0x1
call eax
sub_4142a0
push ebp
mov ebp esp
push 0xffffffff
push sub_41d205
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
push 0x30
call [ sigc::internal::slot_rep::operator new@IAT ]
add esp 0x4
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
xor eax eax
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx eax
call sub_408a90
jmp r-xdata
mov [ ebp - 0x4 ] 0xffffffff
push eax
mov ecx esi
call [ sigc::slot_base::slot_base@IAT ]
mov [ ebp - 0x4 ] 0x1
mov edx [ esi ]
mov [ edx + 0x4 ] sub_412510
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_414330
push ebp
mov ebp esp
push esi
mov esi ecx
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ esi + 0x30 ]
call sub_40b210
mov ecx [ eax ]
push ecx
mov ecx esi
call sub_4141e0
pop esi
pop ebp
retn 0x4
sub_414360
push ebp
mov ebp esp
push 0xffffffff
push sub_41c599
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
push ecx
lea ecx [ esi + 0x30 ]
mov [ ebp - 0x10 ] eax
call sub_40b210
mov edx [ eax ]
push edx
mov ecx esi
call sub_4141e0
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp + 0x10 ]
call [ utf::string::~string@IAT ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x2c
sub_4143d0
push ebp
mov ebp esp
push 0xffffffff
push sub_41c5e0
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] 0x0
call sub_413e60
mov eax [ esi + 0x14 ]
push eax
call ??3@YAXPAX@Z
mov [ esi + 0x14 ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ esi ]
push eax
call ??3@YAXPAX@Z
add esp 0x8
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
sub_414440
push ebp
mov ebp esp
push 0xffffffff
push sub_41c714
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] 0x0
lea ecx [ esi + 0x24 ]
call sub_4143d0
mov [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call [ utf::string::~string@IAT ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
sub_4144a0
push ebp
mov ebp esp
push 0xffffffff
push sub_41c600
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov edi ecx
push 0x28
call ??2@YAPAXI@Z
add esp 0x4
mov esi eax
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
mov [ ebp - 0x14 ] 0x1
lea eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ esi ] eax
mov [ ebp - 0x14 ] 0x2
mov edx [ ebp + 0x10 ]
push edx
lea eax [ esi + 0x8 ]
push eax
lea ecx [ edi + 0x10 ]
call sub_414280
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov ecx [ ebp + 0xc ]
mov [ eax ] ecx
sub_414550
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
push eax
push ecx
mov ecx [ ebp + 0x8 ]
push edx
add ecx 0x18
call sub_413f70
pop ebp
retn
sub_414570
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov edx [ eax + 0x4 ]
push ebx
push esi
push edi
mov edi ecx
mov ecx [ ebp + 0x10 ]
lea ebx [ eax + 0x4 ]
push ecx
push edx
push eax
mov ecx edi
call sub_4144a0
push 0x1
mov ecx edi
mov esi eax
call sub_412130
mov [ ebx ] esi
mov eax [ esi + 0x4 ]
pop edi
mov [ eax ] esi
pop esi
pop ebx
pop ebp
retn 0xc
sub_4145b0
push ebp
mov ebp esp
push 0xffffffff
push sub_41c620
mov eax [ fs : 0x0 ]
push eax
sub esp 0x1c
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi ecx
mov [ ebp - 0x14 ] esi
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x20 ] eax
mov ecx [ ebp + 0x14 ]
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x1c
lea ecx [ ebp + 0x10 ]
call sub_4119b0
push eax
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx esi
call sub_414570
lea ecx [ ebp + 0x10 ]
call sub_411bb0
jmp r-xdata
lea edx [ ebp + 0x18 ]
push edx
lea ecx [ ebp + 0x10 ]
call sub_407e20
test al al
je r-xdata
sub_414640
lea edx [ ebp + 0x10 ]
push edx
lea ecx [ ebp - 0x20 ]
call sub_407e20
test al al
je r-xdata
push 0x0
push 0x0
call _CxxThrowException
mov esi [ ebp - 0x14 ]
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x18 ] eax
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x14 ] ecx
lea ecx [ ebp - 0x18 ]
call sub_4120f0
mov edx [ eax + 0x4 ]
push edx
mov eax [ eax ]
push eax
lea ecx [ ebp - 0x28 ]
push ecx
mov ecx esi
call sub_413aa0
lea ecx [ ebp - 0x20 ]
call sub_411bb0
lea edx [ ebp + 0x10 ]
push edx
lea ecx [ ebp - 0x20 ]
call sub_407e20
test al al
jne r-xdata
sub_4146a0
push ebp
mov ebp esp
mov eax [ ebp + 0x1c ]
mov edx [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x18 ]
push edx
mov edx [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push edx
mov edx [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push edx
push eax
call sub_4145b0
pop ebp
retn 0x18
sub_4146d0
push ebp
mov ebp esp
push 0xffffffff
push sub_41d205
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
push 0x30
call [ sigc::internal::slot_rep::operator new@IAT ]
add esp 0x4
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
xor eax eax
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx eax
call sub_408a90
jmp r-xdata
mov [ ebp - 0x4 ] 0xffffffff
push eax
mov ecx esi
call [ sigc::slot_base::slot_base@IAT ]
mov [ ebp - 0x4 ] 0x1
mov edx [ esi ]
mov [ edx + 0x4 ] sub_414550
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_414760
push ebp
mov ebp esp
push 0xffffffff
push sub_41c648
mov eax [ fs : 0x0 ]
push eax
sub esp 0x20
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi ecx
mov [ ebp - 0x14 ] esi
push ecx
mov [ ebp - 0x18 ] esp
mov [ ebp - 0x18 ] esp
call sub_412d10
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov ecx esi
call sub_412200
mov [ esi + 0x14 ] eax
mov [ esi + 0x18 ] ebx
mov [ ebp - 0x4 ] 0x1
mov eax [ esi + 0x14 ]
mov edx [ eax ]
mov [ ebp - 0x24 ] ebx
mov edi [ esi ]
mov [ ebp - 0x24 ] edi
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x14 ]
mov [ ebp - 0x1c ] ebx
mov ecx [ ecx ]
mov [ ebp - 0x1c ] ecx
mov ebx [ eax ]
mov [ ebp - 0x2c ] 0x0
mov [ ebp - 0x2c ] ecx
push eax
mov eax ecx
push eax
push ebx
push ecx
push edx
push edi
mov ecx esi
call sub_4146a0
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_414820
push ebp
mov ebp esp
push 0xffffffff
push sub_41c684
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov edi [ ebp + 0x8 ]
push edi
call [ utf::string::string@IAT ]
mov [ ebp - 0x4 ] 0x0
add edi 0x24
push edi
lea ecx [ esi + 0x24 ]
call sub_414760
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_414890
push ebp
mov ebp esp
push 0xffffffff
push sub_41c6e2
mov eax [ fs : 0x0 ]
push eax
sub esp 0x2c
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
call [ cui::ipc::Dispatch::GetControl@IAT ]
mov [ ebp - 0x10 ] eax
xor ecx ecx
xor edx edx
mov eax sub_414360
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x30 ] edx
test esi esi
jne r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx + esi + 0x4 ]
xor eax eax
jmp r-xdata
lea edx [ ebp - 0x38 ]
push edx
lea ecx [ ebp - 0x18 ]
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] esi
call sub_4142a0
mov [ ebp - 0x4 ] 0x1
mov ecx [ esi + 0x2c ]
mov edi [ sigc::signal_base::connect@IAT ]
lea eax [ ebp - 0x18 ]
push eax
lea edx [ ebp - 0x20 ]
add ecx 0x18
push edx
call edi
mov [ ebp - 0x4 ] 0xffffffff
mov ebx [ sigc::slot_base::~slot_base@IAT ]
lea ecx [ ebp - 0x18 ]
call ebx
mov eax [ cui::ipc::Dispatch::ReceiveMessage@IAT ]
xor ecx ecx
mov [ ebp - 0x38 ] eax
mov eax [ esi + 0x4 ]
xor edx edx
mov [ ebp - 0x34 ] ecx
mov ecx [ eax + 0x4 ]
mov [ ebp - 0x30 ] edx
lea edx [ ecx + esi + 0x4 ]
lea eax [ ebp - 0x38 ]
push eax
lea ecx [ ebp - 0x18 ]
mov [ ebp - 0x28 ] edx
mov [ ebp - 0x24 ] esi
call sub_4146d0
mov [ ebp - 0x4 ] 0x5
lea ecx [ ebp - 0x18 ]
push ecx
mov ecx [ ebp - 0x10 ]
lea edx [ ebp - 0x20 ]
push edx
add ecx 0x8
call edi
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x18 ]
call ebx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_414990
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
sub esp 0x8
push esi
mov esi ecx
cmp esi eax
je r-xdata
mov eax esi
pop esi
mov esp ebp
pop ebp
retn 0x4
push ebx
mov ebx [ eax ]
push edi
mov edi [ eax + 0x14 ]
mov eax [ edi ]
mov [ ebp - 0x4 ] eax
call sub_413e60
mov edx [ ebp + 0x8 ]
mov ecx [ esi + 0x14 ]
mov eax [ ecx ]
mov ecx [ esi ]
push edx
mov edx [ ebp - 0x4 ]
push edi
push ebx
push edx
push ebx
push eax
push ecx
mov ecx esi
call sub_4145b0
pop edi
pop ebx
sub_4149e0
push ebp
mov ebp esp
push 0xffffffff
push sub_41c714
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov eax [ ebp + 0x8 ]
push eax
call [ utf::string::string@IAT ]
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp + 0xc ]
push ecx
lea ecx [ esi + 0x24 ]
call sub_414760
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_414a50
push ebp
mov ebp esp
push 0xffffffff
push sub_41c758
mov eax [ fs : 0x0 ]
push eax
sub esp 0x50
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] ecx
mov ebx [ ebp + 0x10 ]
cmp [ ebx + 0x4d ] 0x0
je r-xdata
lea ecx [ ebp + 0xc ]
mov [ ebp - 0x14 ] ebx
call sub_411d40
mov ecx [ ebx ]
cmp [ ecx + 0x4d ] 0x0
je r-xdata
push r--data
lea ecx [ ebp - 0x34 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x34 ]
push eax
lea ecx [ ebp - 0x5c ]
call sub_402360
push r--data
lea ecx [ ebp - 0x5c ]
push ecx
call _CxxThrowException
mov edx [ ebx + 0x8 ]
cmp [ edx + 0x4d ] 0x0
je r-xdata
mov edi [ ebx + 0x8 ]
jmp r-xdata
mov eax [ ebp + 0x10 ]
mov edi [ eax + 0x8 ]
lea edx [ eax + 0x8 ]
cmp eax ebx
jne r-xdata
mov edi ecx
jmp r-xdata
cmp [ edi + 0x4d ] 0x0
mov esi [ ebx + 0x4 ]
jne r-xdata
mov [ ecx + 0x4 ] eax
mov ecx [ ebx ]
mov [ eax ] ecx
cmp eax [ ebx + 0x8 ]
jne r-xdata
mov ecx [ ebp - 0x10 ]
mov eax [ ecx + 0x18 ]
cmp [ eax + 0x4 ] ebx
jne r-xdata
mov [ edi + 0x4 ] esi
cmp [ edi + 0x4d ] 0x0
mov esi [ eax + 0x4 ]
jne r-xdata
mov esi eax
jmp r-xdata
cmp [ esi ] ebx
jne r-xdata
mov [ eax + 0x4 ] edi
jmp r-xdata
mov [ esi ] edi
mov ecx [ ebx + 0x8 ]
mov [ edx ] ecx
mov edx [ ebx + 0x8 ]
mov [ edx + 0x4 ] eax
mov [ edi + 0x4 ] esi
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0x18 ]
cmp [ ecx + 0x4 ] ebx
jne r-xdata
mov [ esi + 0x8 ] edi
mov [ esi ] edi
jmp r-xdata
mov eax [ ecx + 0x18 ]
cmp [ eax ] ebx
jne r-xdata
mov ecx [ ebx + 0x4 ]
cmp [ ecx ] ebx
jne r-xdata
mov [ ecx + 0x4 ] eax
jmp r-xdata
mov ecx [ ecx + 0x18 ]
mov [ ebp - 0x18 ] ecx
cmp [ ecx + 0x8 ] ebx
jne r-xdata
cmp [ edi + 0x4d ] 0x0
je r-xdata
mov [ ecx + 0x8 ] eax
mov [ ecx ] eax
jmp r-xdata
mov edx [ ebx + 0x4 ]
mov [ eax + 0x4 ] edx
lea ecx [ ebx + 0x4c ]
add eax 0x4c
cmp eax ecx
je r-xdata
mov eax [ ebp - 0x14 ]
mov bl 0x1
cmp [ eax + 0x4c ] bl
jne r-xdata
cmp [ edi + 0x4d ] 0x0
je r-xdata
push edi
call sub_411810
mov ecx [ ebp - 0x10 ]
add esp 0x4
mov eax esi
jmp r-xdata
mov bl [ ecx ]
mov dl [ eax ]
mov [ eax ] bl
mov [ ecx ] dl
or edi 0xffffffff
mov [ ebp - 0x4 ] edi
mov esi [ ebp - 0x14 ]
add esi 0xc
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x4 ] 0x2
lea ecx [ esi + 0x24 ]
call sub_4143d0
mov [ ebp - 0x4 ] edi
mov ecx esi
call [ utf::string::~string@IAT ]
mov ecx [ ebp - 0x14 ]
push ecx
call ??3@YAXPAX@Z
mov edx [ ebp - 0x10 ]
mov eax [ edx + 0x1c ]
add esp 0x4
test eax eax
jbe r-xdata
mov ecx [ ebp - 0x10 ]
mov edx [ ecx + 0x18 ]
cmp edi [ edx + 0x4 ]
je r-xdata
push edi
call sub_4117f0
mov ecx [ ebp - 0x18 ]
add esp 0x4
mov [ ecx + 0x8 ] eax
jmp r-xdata
mov eax esi
mov [ ecx + 0x8 ] eax
jmp r-xdata
mov edx [ ecx + 0x18 ]
mov [ edx ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ edx ]
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
dec eax
mov [ edx + 0x1c ] eax
mov [ edi + 0x4c ] bl
cmp [ edi + 0x4c ] bl
jne r-xdata
mov eax [ esi ]
cmp edi eax
jne r-xdata
cmp [ eax + 0x4c ] 0x0
jne r-xdata
mov eax [ esi + 0x8 ]
cmp [ eax + 0x4c ] 0x0
jne r-xdata
cmp [ eax + 0x4d ] 0x0
jne r-xdata
mov [ eax + 0x4c ] bl
push esi
mov [ esi + 0x4c ] 0x0
call sub_411830
mov eax [ esi ]
mov ecx [ ebp - 0x10 ]
cmp [ eax + 0x4d ] 0x0
jne r-xdata
mov [ eax + 0x4c ] bl
push esi
mov [ esi + 0x4c ] 0x0
call sub_411c50
mov eax [ esi + 0x8 ]
mov ecx [ ebp - 0x10 ]
mov eax [ ecx + 0x18 ]
mov edi esi
mov esi [ esi + 0x4 ]
cmp edi [ eax + 0x4 ]
jne r-xdata
mov edx [ eax + 0x8 ]
cmp [ edx + 0x4c ] bl
jne r-xdata
mov edx [ eax ]
cmp [ edx + 0x4c ] bl
jne r-xdata
jmp r-xdata
mov edx [ eax ]
cmp [ edx + 0x4c ] bl
jne r-xdata
mov edx [ eax ]
cmp [ edx + 0x4c ] bl
jne r-xdata
mov edx [ eax + 0x8 ]
cmp [ edx + 0x4c ] bl
jne r-xdata
mov edx [ eax + 0x8 ]
cmp [ edx + 0x4c ] bl
je r-xdata
mov dl [ esi + 0x4c ]
mov [ eax + 0x4c ] dl
mov [ esi + 0x4c ] bl
mov eax [ eax ]
push esi
mov [ eax + 0x4c ] bl
call sub_411830
mov edx [ eax + 0x8 ]
mov [ edx + 0x4c ] bl
push eax
mov [ eax + 0x4c ] 0x0
call sub_411c50
mov eax [ esi ]
mov ecx [ ebp - 0x10 ]
mov [ eax + 0x4c ] 0x0
mov dl [ esi + 0x4c ]
mov [ eax + 0x4c ] dl
mov [ esi + 0x4c ] bl
mov eax [ eax + 0x8 ]
push esi
mov [ eax + 0x4c ] bl
call sub_411c50
jmp r-xdata
mov edx [ eax ]
mov [ edx + 0x4c ] bl
push eax
mov [ eax + 0x4c ] 0x0
call sub_411830
mov eax [ esi + 0x8 ]
mov ecx [ ebp - 0x10 ]
sub_414d30
push ebp
mov ebp esp
push 0xffffffff
push sub_41c7bf
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] ecx
mov ebx [ ebp + 0x8 ]
cmp [ ebx + 0x4d ] 0x0
mov esi ebx
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ esi + 0x8 ]
mov ecx [ ebp - 0x10 ]
push eax
call sub_414d30
mov esi [ esi ]
mov [ ebp - 0x4 ] 0xffffffff
lea edi [ ebx + 0xc ]
mov [ ebp + 0x8 ] edi
mov [ ebp - 0x4 ] 0x1
add edi 0x24
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x4 ] 0x3
mov ecx edi
call sub_413e60
mov eax [ edi + 0x14 ]
push eax
call ??3@YAXPAX@Z
mov [ edi + 0x14 ] 0x0
mov [ ebp - 0x4 ] 0x1
mov edi [ edi ]
push edi
call ??3@YAXPAX@Z
add esp 0x8
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp + 0x8 ]
call [ utf::string::~string@IAT ]
push ebx
call ??3@YAXPAX@Z
add esp 0x4
cmp [ esi + 0x4d ] 0x0
mov ebx esi
mov [ ebp + 0x8 ] ebx
je r-xdata
sub_414df0
push ebp
mov ebp esp
push 0xffffffff
push sub_41c7eb
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x10 ]
mov [ esi ] eax
mov eax [ ebp + 0x14 ]
mov [ esi + 0x4 ] ecx
push eax
lea ecx [ esi + 0xc ]
mov [ esi + 0x8 ] edx
call sub_414820
xor eax eax
mov [ ebp - 0x4 ] eax
mov cl [ ebp + 0x18 ]
mov [ esi + 0x4c ] cl
mov [ esi + 0x4d ] al
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x14
sub_414e60
push ebp
mov ebp esp
push 0xffffffff
push sub_41c821
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
push 0x50
call ??2@YAPAXI@Z
add esp 0x4
mov esi eax
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x4 ] 0x1
test esi esi
je r-xdata
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
mov eax [ ebp + 0x18 ]
push eax
mov ecx [ ebp + 0x14 ]
push ecx
mov edx [ ebp + 0x10 ]
push edx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx esi
call sub_414df0
sub_414f00
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
mov esi ecx
mov eax [ esi + 0x18 ]
mov ebx [ eax ]
mov eax [ esi ]
push edi
mov edi [ ebp + 0xc ]
test edi edi
je r-xdata
call [ _invalid_parameter_noinfo@IAT ]
mov edi [ ebp + 0xc ]
cmp edi eax
je r-xdata
test edi edi
je r-xdata
mov ecx [ ebp + 0x14 ]
mov ebx [ esi + 0x18 ]
mov eax [ esi ]
test ecx ecx
je r-xdata
cmp [ ebp + 0x10 ] ebx
jne r-xdata
call [ _invalid_parameter_noinfo@IAT ]
mov edi [ ebp + 0xc ]
cmp edi [ ebp + 0x14 ]
je r-xdata
call [ _invalid_parameter_noinfo@IAT ]
mov edi [ ebp + 0xc ]
cmp ecx eax
je r-xdata
mov esi [ esi ]
mov eax [ ebp + 0x8 ]
pop edi
mov [ eax ] esi
pop esi
mov [ eax + 0x4 ] ebx
pop ebx
mov esp ebp
pop ebp
retn 0x14
lea ecx [ ebp + 0xc ]
call sub_411d40
push ebx
push edi
lea eax [ ebp - 0x8 ]
push eax
mov ecx esi
call sub_414a50
mov edi [ ebp + 0xc ]
jmp r-xdata
mov ebx [ ebp + 0x10 ]
cmp ebx [ ebp + 0x18 ]
je r-xdata
mov ecx [ esi + 0x18 ]
mov edx [ ecx + 0x4 ]
push edx
mov ecx esi
call sub_414d30
mov eax [ esi + 0x18 ]
mov [ eax + 0x4 ] eax
mov eax [ esi + 0x18 ]
mov [ esi + 0x1c ] 0x0
mov [ eax ] eax
mov eax [ esi + 0x18 ]
mov [ eax + 0x8 ] eax
mov eax [ esi + 0x18 ]
mov ecx [ eax ]
mov edx [ esi ]
mov eax [ ebp + 0x8 ]
pop edi
pop esi
mov [ eax + 0x4 ] ecx
mov [ eax ] edx
pop ebx
mov esp ebp
pop ebp
retn 0x14
cmp [ ebp + 0x18 ] ebx
jne r-xdata
sub_414fd0
push ebp
mov ebp esp
push 0xffffffff
push sub_41b1f9
mov eax [ fs : 0x0 ]
push eax
sub esp 0x44
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
cmp [ edi + 0x1c ] 0x3fffffe
jb r-xdata
mov edx [ ebp + 0x14 ]
mov eax [ edi + 0x18 ]
mov esi [ ebp + 0x10 ]
push 0x0
push edx
push eax
push esi
push eax
call sub_414e60
mov ecx eax
mov eax [ edi + 0x18 ]
mov ebx 0x1
add [ edi + 0x1c ] ebx
mov [ ebp + 0x14 ] ecx
cmp esi eax
jne r-xdata
push r--data
lea ecx [ ebp - 0x28 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x28 ]
push eax
lea ecx [ ebp - 0x50 ]
call sub_402250
push r--data
lea ecx [ ebp - 0x50 ]
push ecx
call _CxxThrowException
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov [ eax + 0x4 ] ecx
mov eax [ edi + 0x18 ]
mov [ eax ] ecx
mov edx [ edi + 0x18 ]
mov [ edx + 0x8 ] ecx
jmp r-xdata
mov [ esi + 0x8 ] ecx
mov eax [ edi + 0x18 ]
cmp esi [ eax + 0x8 ]
jne r-xdata
mov [ esi ] ecx
mov eax [ edi + 0x18 ]
cmp esi [ eax ]
jne r-xdata
mov edx [ ecx + 0x4 ]
cmp [ edx + 0x4c ] 0x0
lea eax [ ecx + 0x4 ]
mov esi ecx
jne r-xdata
mov [ eax + 0x8 ] ecx
mov [ eax ] ecx
jmp r-xdata
mov eax [ edi + 0x18 ]
mov edx [ eax + 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ edx + 0x4c ] bl
mov [ eax + 0x4 ] ecx
mov ecx [ edi ]
mov [ eax ] ecx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
lea ecx [ ecx ]
mov edx [ edx ]
cmp [ edx + 0x4c ] 0x0
jne r-xdata
mov edx [ edx + 0x8 ]
cmp [ edx + 0x4c ] 0x0
jne r-xdata
cmp esi [ ecx ]
jne r-xdata
mov [ ecx + 0x4c ] bl
mov [ edx + 0x4c ] bl
mov edx [ eax ]
mov ecx [ edx + 0x4 ]
mov [ ecx + 0x4c ] 0x0
mov edx [ eax ]
mov esi [ edx + 0x4 ]
jmp r-xdata
cmp esi [ ecx + 0x8 ]
jne r-xdata
mov [ ecx + 0x4c ] bl
mov [ edx + 0x4c ] bl
mov edx [ eax ]
mov ecx [ edx + 0x4 ]
mov [ ecx + 0x4c ] 0x0
mov edx [ eax ]
mov esi [ edx + 0x4 ]
jmp r-xdata
mov eax [ esi + 0x4 ]
mov [ eax + 0x4c ] bl
mov ecx [ esi + 0x4 ]
mov edx [ ecx + 0x4 ]
mov [ edx + 0x4c ] 0x0
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x4 ]
push ecx
mov ecx edi
call sub_411c50
mov esi ecx
push esi
mov ecx edi
call sub_411830
mov edx [ esi + 0x4 ]
cmp [ edx + 0x4c ] 0x0
lea eax [ esi + 0x4 ]
je r-xdata
mov eax [ esi + 0x4 ]
mov [ eax + 0x4c ] bl
mov ecx [ esi + 0x4 ]
mov edx [ ecx + 0x4 ]
mov [ edx + 0x4c ] 0x0
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x4 ]
push ecx
mov ecx edi
call sub_411830
jmp r-xdata
mov esi ecx
push esi
mov ecx edi
call sub_411c50
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
cmp ecx [ edx ]
jne r-xdata
mov ecx [ ebp + 0x14 ]
sub_415180
push ebp
mov ebp esp
push 0xffffffff
push sub_41a7b8
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] 0x0
mov eax [ esi + 0x18 ]
mov ecx [ esi ]
mov edx [ eax ]
push eax
push ecx
push edx
push ecx
lea eax [ ebp - 0x18 ]
push eax
mov ecx esi
call sub_414f00
mov eax [ esi + 0x18 ]
push eax
call ??3@YAXPAX@Z
mov [ esi + 0x18 ] 0x0
mov [ esi + 0x1c ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ esi ]
push ecx
call ??3@YAXPAX@Z
add esp 0x8
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
sub_415210
push ebp
mov ebp esp
sub esp 0x10
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov esi ecx
push eax
lea ecx [ ebp - 0x10 ]
push ecx
mov ecx esi
call sub_412b30
mov edi [ ebp - 0x4 ]
mov ebx [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
mov [ ebp + 0x8 ] 0x0
mov edx [ ebp + 0x8 ]
push edx
mov edx [ ebp - 0x10 ]
lea eax [ ebp + 0x8 ]
push eax
push edi
push ebx
push ecx
push edx
call sub_4124d0
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x10 ]
add esp 0x18
push edi
push ebx
push eax
push ecx
lea edx [ ebp - 0x8 ]
push edx
mov ecx esi
call sub_414f00
mov eax [ ebp + 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_415280
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
mov ebx ecx
push edi
mov edi [ ebx + 0x18 ]
mov esi [ edi + 0x4 ]
cmp [ esi + 0x4d ] 0x0
mov al 0x1
mov [ ebp - 0x4 ] al
jne r-xdata
mov esi [ ebx ]
mov [ ebp - 0x8 ] edi
mov [ ebp - 0xc ] esi
test al al
je r-xdata
lea esp [ esp ]
mov edx [ ebp + 0xc ]
mov ecx [ ebp - 0x8 ]
push edx
add ecx 0xc
call [ utf::string::operator<=@IAT ]
test al al
je r-xdata
mov ecx [ ebx + 0x18 ]
mov edx [ ecx ]
mov [ ebp - 0x10 ] edx
test esi esi
je r-xdata
mov esi [ esi + 0x8 ]
mov esi [ esi ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
pop edi
mov [ eax ] esi
pop esi
mov [ eax + 0x8 ] 0x0
mov [ eax + 0x4 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0x4 ]
push eax
push edi
push ecx
lea edx [ ebp - 0x14 ]
push edx
mov ecx ebx
call sub_414fd0
mov edx [ eax ]
mov ecx [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
pop edi
pop esi
mov [ ecx + 0x4 ] eax
mov [ ecx ] edx
mov [ ecx + 0x8 ] 0x1
mov eax ecx
pop ebx
mov esp ebp
pop ebp
retn 0x8
call [ _invalid_parameter_noinfo@IAT ]
cmp esi esi
je r-xdata
mov ecx [ ebp + 0xc ]
lea eax [ esi + 0xc ]
push eax
mov edi esi
call [ utf::string::operator<=@IAT ]
mov [ ebp - 0x4 ] al
test al al
je r-xdata
cmp [ esi + 0x4d ] 0x0
je r-xdata
lea ecx [ ebp - 0xc ]
call sub_411cb0
mov esi [ ebp - 0xc ]
mov eax [ ebp + 0xc ]
push eax
push edi
push 0x1
lea ecx [ ebp - 0x14 ]
push ecx
mov ecx ebx
call sub_414fd0
mov ecx eax
mov edx [ ecx ]
mov eax [ ebp + 0x8 ]
mov ecx [ ecx + 0x4 ]
pop edi
pop esi
mov [ eax ] edx
mov [ eax + 0x8 ] 0x1
mov [ eax + 0x4 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp edi [ ebp - 0x10 ]
jne r-xdata
sub_415380
push ebp
mov ebp esp
push 0xffffffff
push sub_41c848
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] 0xffffffff
call sub_415180
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_4153d0
push ebp
mov ebp esp
push 0xffffffff
push sub_41c922
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov eax 0x6
mov [ ebp - 0x4 ] eax
lea ecx [ esi + 0x70 ]
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x4 ] al
call sub_415180
mov al 0x5
mov [ ebp - 0x4 ] al
lea ecx [ esi + 0x50 ]
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x4 ] al
call sub_413730
mov al 0x4
mov [ ebp - 0x4 ] al
lea ecx [ esi + 0x30 ]
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x4 ] al
call sub_406f60
mov al 0x3
mov [ ebp - 0x4 ] al
lea ecx [ esi + 0x24 ]
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x4 ] al
mov edi [ sigc::signal_base::~signal_base@IAT ]
call edi
mov al 0x2
mov [ ebp - 0x4 ] al
lea ecx [ esi + 0x1c ]
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x4 ] al
call edi
mov al 0x1
mov [ ebp - 0x4 ] al
lea ecx [ esi + 0x14 ]
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x4 ] al
call edi
xor al al
mov [ ebp - 0x4 ] al
lea ecx [ esi + 0xc ]
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x4 ] al
call edi
mov [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call [ cui::ipc::Dispatch::~Dispatch@IAT ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_4154d0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
push eax
lea ecx [ esi + 0x70 ]
call sub_415210
cmp [ esi + 0x8c ] 0x0
jne r-xdata
pop esi
pop ebp
retn 0x4
cmp [ esi + 0x4c ] 0x0
jne r-xdata
mov edx [ esi ]
mov eax [ edx + 0xc ]
mov ecx esi
call eax
sub_415500
push ebp
mov ebp esp
push 0xffffffff
push sub_41c948
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x14 ] esi
lea eax [ ebp - 0xd ]
push eax
lea ecx [ ebp - 0xd ]
push ecx
mov ecx esi
call sub_4138c0
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
sub_415560
push ebp
mov ebp esp
sub esp 0x14
push esi
mov esi ecx
cmp [ esi + 0x1c ] 0x0
push edi
jne r-xdata
mov eax [ ebp + 0xc ]
mov edx [ esi + 0x18 ]
mov edi [ edx ]
mov ecx [ esi ]
push ebx
mov ebx [ _invalid_parameter_noinfo@IAT ]
test eax eax
je r-xdata
mov eax [ ebp + 0x14 ]
mov ecx [ esi + 0x18 ]
mov edi [ ebp + 0x8 ]
push eax
push ecx
push 0x1
push edi
mov ecx esi
call sub_414fd0
mov eax edi
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x10
call ebx
mov eax [ ebp + 0xc ]
cmp eax ecx
je r-xdata
mov edi [ esi + 0x18 ]
mov ecx [ esi ]
test eax eax
je r-xdata
mov edi [ ebp + 0x14 ]
add edx 0xc
push edx
mov ecx edi
call [ utf::string::operator<=@IAT ]
test al al
je r-xdata
mov edx [ ebp + 0x10 ]
cmp edx edi
jne r-xdata
call ebx
mov edx [ ebp + 0x10 ]
cmp eax ecx
je r-xdata
push edi
lea eax [ ebp - 0x14 ]
push eax
mov ecx esi
call sub_415280
mov edx [ eax ]
mov ecx [ ebp + 0x8 ]
pop ebx
mov [ ecx ] edx
mov eax [ eax + 0x4 ]
pop edi
mov [ ecx + 0x4 ] eax
mov eax ecx
pop esi
mov esp ebp
pop ebp
retn 0x10
mov eax [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0x8 ]
push eax
push 0x1
push edi
mov ecx esi
call sub_414fd0
pop ebx
mov eax edi
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x10
mov ebx [ utf::string::operator<=@IAT ]
add edx 0xc
push edx
mov ecx edi
call ebx
test al al
je r-xdata
mov ecx [ esi + 0x18 ]
mov ecx [ ecx + 0x8 ]
add ecx 0xc
push edi
call [ utf::string::operator<=@IAT ]
test al al
je r-xdata
cmp edx edi
mov edi [ ebp + 0x14 ]
jne r-xdata
mov ecx [ ebp + 0x10 ]
push edi
add ecx 0xc
call ebx
test al al
je r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x10 ]
mov [ ebp - 0x8 ] ecx
lea ecx [ ebp - 0x8 ]
mov [ ebp - 0x4 ] edx
call sub_411cb0
mov ecx [ ebp - 0x4 ]
push edi
add ecx 0xc
call ebx
test al al
je r-xdata
mov edx [ esi + 0x18 ]
mov eax [ edx + 0x8 ]
push edi
mov edi [ ebp + 0x8 ]
push eax
push 0x0
push edi
mov ecx esi
call sub_414fd0
pop ebx
mov eax edi
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x10
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edx [ esi + 0x18 ]
mov [ ebp - 0x8 ] eax
mov eax [ esi ]
mov [ ebp - 0x4 ] ecx
lea ecx [ ebp - 0x8 ]
mov [ ebp - 0xc ] edx
mov [ ebp - 0x10 ] eax
call sub_411d40
lea ecx [ ebp - 0x10 ]
push ecx
lea ecx [ ebp - 0x8 ]
call sub_402220
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x8 ]
cmp [ ecx + 0x4d ] 0x0
push edi
mov edi [ ebp + 0x8 ]
mov ecx esi
jne r-xdata
mov eax [ ebp + 0x10 ]
mov ecx [ eax + 0x8 ]
cmp [ ecx + 0x4d ] 0x0
push edi
mov edi [ ebp + 0x8 ]
mov ecx esi
je r-xdata
mov edx [ ebp - 0x4 ]
add edx 0xc
push edx
mov ecx edi
call ebx
test al al
je r-xdata
push eax
push 0x0
push edi
call sub_414fd0
pop ebx
mov eax edi
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x10
mov edx [ ebp + 0x10 ]
push edx
push 0x1
push edi
call sub_414fd0
pop ebx
mov eax edi
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x10
mov edx [ ebp - 0x4 ]
push edx
push 0x1
push edi
call sub_414fd0
pop ebx
mov eax edi
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x10
sub_415750
push ebp
mov ebp esp
push 0xffffffff
push sub_41ca2a
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] 0x0
cmp [ ebp + 0x8 ] 0x0
mov edi 0x1
je r-xdata
push 0x0
mov ecx esi
call [ cui::ipc::Dispatch::Dispatch@IAT ]
mov [ ebp - 0x4 ] edi
mov edi [ sigc::signal_base::signal_base@IAT ]
lea ecx [ esi + 0xc ]
mov [ esi ] r--data
mov [ ebp + 0x8 ] ecx
call edi
mov [ ebp - 0x4 ] 0x4
lea ecx [ esi + 0x14 ]
mov [ ebp + 0x8 ] ecx
call edi
mov [ ebp - 0x4 ] 0x7
lea ecx [ esi + 0x1c ]
mov [ ebp + 0x8 ] ecx
call edi
mov [ ebp - 0x4 ] 0xa
lea ecx [ esi + 0x24 ]
mov [ ebp + 0x8 ] ecx
call edi
mov [ ebp - 0x4 ] 0xd
lea ecx [ esi + 0x30 ]
mov [ esi + 0x2c ] 0x0
call sub_40b6b0
mov [ ebp - 0x4 ] 0xe
lea ecx [ esi + 0x50 ]
call sub_413e00
mov [ ebp - 0x4 ] 0xf
lea ecx [ esi + 0x70 ]
call sub_415500
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
lea ecx [ esi + 0x90 ]
mov [ esi + 0x4 ] r--data
call [ sigc::trackable::trackable@IAT ]
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x10 ] edi
sub_415840
push ebp
mov ebp esp
push 0xffffffff
push sub_41ca60
mov eax [ fs : 0x0 ]
push eax
sub esp 0x64
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov eax [ ebp + 0x8 ]
push eax
call sub_411b60
mov ebx eax
test edi edi
jne r-xdata
mov esi [ edi ]
mov ecx [ edi + 0x18 ]
mov [ ebp - 0x10 ] ecx
test esi esi
je r-xdata
call [ _invalid_parameter_noinfo@IAT ]
call [ _invalid_parameter_noinfo@IAT ]
cmp esi esi
je r-xdata
lea ecx [ ebp - 0x30 ]
call sub_412fa0
mov [ ebp - 0x4 ] 0x0
push eax
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x70 ]
call sub_4149e0
mov [ ebp - 0x4 ] 0x1
push eax
push ebx
push esi
lea ecx [ ebp - 0x14 ]
push ecx
mov ecx edi
call sub_415560
mov esi [ eax ]
mov ebx [ eax + 0x4 ]
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x70 ]
call sub_414440
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x30 ]
call sub_4143d0
mov ecx [ ebp + 0x8 ]
lea edx [ ebx + 0xc ]
push edx
call [ utf::string::operator<=@IAT ]
test al al
je r-xdata
cmp ebx [ ebp - 0x10 ]
je r-xdata
mov esi [ esi ]
jmp r-xdata
call [ _invalid_parameter_noinfo@IAT ]
test esi esi
jne r-xdata
cmp ebx [ esi + 0x18 ]
jne r-xdata
lea eax [ ebx + 0x30 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
call [ _invalid_parameter_noinfo@IAT ]
sub_415930
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_4153d0
lea ecx [ esi + 0x90 ]
call [ sigc::trackable::~trackable@IAT ]
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call ??3@YAXPAX@Z
add esp 0x4
sub_415960
push ebp
mov ebp esp
push 0xffffffff
push sub_41ca99
mov eax [ fs : 0x0 ]
push eax
sub esp 0x2c
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov ebx [ ebp + 0x8 ]
push ebx
lea ecx [ edi + 0x50 ]
call sub_413650
mov ecx [ eax ]
test ecx ecx
jne r-xdata
call sub_411230
mov edx [ ebp + 0xc ]
push eax
sub esp 0x20
mov ecx esp
mov [ ebp + 0x8 ] esp
push edx
call sub_408b60
mov [ ebp - 0x4 ] 0x1
mov eax [ cui::ipc::UnityHelper::COMMAND_ID_GHI_LAUNCH@IAT ]
sub esp 0x24
mov ecx esp
mov [ ebp + 0xc ] esp
push eax
call [ utf::string::string@IAT ]
mov [ ebp - 0x4 ] 0x2
mov [ ebp - 0x4 ] 0xffffffff
mov ecx edi
call [ cui::ipc::Dispatch::SendCommand@IAT ]
mov ecx [ edi + 0x70 ]
mov eax [ edi + 0x88 ]
lea esi [ edi + 0x70 ]
push ebx
lea edx [ ebp - 0x1c ]
mov [ ebp - 0x14 ] ecx
push edx
mov ecx esi
mov [ ebp - 0x10 ] eax
call sub_412f20
mov ecx [ eax ]
mov [ ebp + 0x8 ] eax
test ecx ecx
je r-xdata
call [ _invalid_parameter_noinfo@IAT ]
mov eax [ ebp + 0x8 ]
cmp ecx [ ebp - 0x14 ]
je r-xdata
push ebx
mov ecx esi
call sub_415840
mov ecx [ ebp + 0xc ]
mov esi eax
mov edi [ esi + 0x14 ]
mov edx [ edi + 0x4 ]
push ecx
push edx
push edi
mov ecx esi
call sub_4144a0
push 0x1
mov ecx esi
mov ebx eax
call sub_412130
mov [ edi + 0x4 ] ebx
mov eax [ ebx + 0x4 ]
mov [ eax ] ebx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov edx [ edi ]
mov eax [ edx + 0x8 ]
push ebx
mov ecx edi
call eax
test al al
je r-xdata
mov ecx [ ebp - 0x10 ]
cmp [ eax + 0x4 ] ecx
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea ecx [ ebp - 0x38 ]
call sub_412fa0
mov [ ebp - 0x4 ] 0x0
push eax
push ebx
mov ecx esi
call sub_415840
mov ecx eax
call sub_414990
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x38 ]
call sub_4143d0
sub_415ac0
push ebp
mov ebp esp
push 0xffffffff
push sub_41cacb
mov eax [ fs : 0x0 ]
push eax
sub esp 0x14
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
push 0xd0
call ??2@YAPAXI@Z
add esp 0x4
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0x0
mov edi [ ebp + 0x10 ]
test eax eax
je r-xdata
xor eax eax
mov ecx [ ebp + 0x18 ]
mov edx [ ebp + 0x14 ]
push ecx
mov ecx [ ebp + 0xc ]
push edx
mov edx [ ebp + 0x8 ]
push edi
push ecx
push edx
push esi
mov ecx eax
call sub_411390
jmp r-xdata
call [ _invalid_parameter_noinfo@IAT ]
cmp eax [ ebp - 0x18 ]
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x1c ]
push eax
lea ecx [ ebp + 0x18 ]
call [ cui::Color::Color@IAT ]
lea ecx [ ebp + 0x18 ]
push ecx
mov ecx [ ebp - 0x10 ]
call sub_411680
lea edx [ ebp + 0x8 ]
push edx
lea ecx [ esi + 0x30 ]
call sub_40b210
mov ecx [ ebp - 0x10 ]
mov [ eax ] ecx
push edi
lea ecx [ esi + 0x50 ]
call sub_413650
mov edx [ ebp - 0x10 ]
mov [ eax ] edx
mov ecx [ esi + 0x10 ]
lea eax [ ebp - 0x10 ]
push eax
push ecx
call sub_413010
mov edx [ esi + 0x88 ]
mov eax [ esi + 0x70 ]
add esp 0x8
lea ebx [ esi + 0x70 ]
push edi
lea ecx [ ebp - 0x20 ]
push ecx
mov ecx ebx
mov [ ebp - 0x14 ] edx
mov [ ebp - 0x18 ] eax
call sub_412f20
mov edi eax
mov eax [ edi ]
test eax eax
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
mov eax [ ebp + 0x10 ]
push eax
mov ecx ebx
call sub_415840
mov ecx [ eax + 0x14 ]
mov edx [ ecx ]
mov edi [ eax ]
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x14 ] edx
lea esp [ esp ]
mov edx [ ebp - 0x14 ]
cmp [ edi + 0x4 ] edx
je r-xdata
call [ _invalid_parameter_noinfo@IAT ]
cmp edi eax
je r-xdata
mov ecx [ ebp + 0x10 ]
push ecx
mov ecx ebx
call sub_415210
test edi edi
jne r-xdata
mov edx [ ebp - 0x1c ]
cmp [ ebp - 0x14 ] edx
je r-xdata
mov eax [ edi ]
jmp r-xdata
call [ _invalid_parameter_noinfo@IAT ]
xor eax eax
mov ecx [ ebp - 0x14 ]
cmp ecx [ eax + 0x14 ]
jne r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp + 0x10 ]
add edx 0x8
push edx
push eax
mov ecx esi
call sub_415960
test edi edi
jne r-xdata
call [ _invalid_parameter_noinfo@IAT ]
mov eax [ edi ]
jmp r-xdata
call [ _invalid_parameter_noinfo@IAT ]
xor eax eax
mov ecx [ ebp - 0x14 ]
cmp ecx [ eax + 0x14 ]
jne r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ edx ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x8 ]
jmp r-xdata
call [ _invalid_parameter_noinfo@IAT ]
mov ecx [ eax + 0x14 ]
mov eax [ eax ]
mov [ ebp - 0x1c ] ecx
test edi edi
je r-xdata
sub_415c70
push ebp
mov ebp esp
push 0xffffffff
push sub_41cb23
mov eax [ fs : 0x0 ]
push eax
sub esp 0x34
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi ecx
mov [ ebp - 0x4 ] 0x2
mov ebx 0x3
mov [ ebp - 0x4 ] bl
mov eax [ cui::ipc::UnityHelper::COMMAND_ID_ADD_VM@IAT ]
push eax
lea ecx [ ebp + 0xc ]
mov edi [ utf::string::operator==@IAT ]
call edi
test al al
je r-xdata
mov ecx [ cui::ipc::UnityHelper::COMMAND_ID_REMOVE_VM@IAT ]
push ecx
lea ecx [ ebp + 0xc ]
call edi
test al al
je r-xdata
push 0x0
push 0x5
lea ecx [ ebp + 0x30 ]
push ecx
lea edx [ ebp + 0xc ]
push edx
mov ecx esi
call sub_413d00
test al al
jne r-xdata
mov edx [ cui::ipc::UnityHelper::COMMAND_ID_OPEN_VM_FAILED@IAT ]
push edx
lea ecx [ ebp + 0xc ]
call edi
lea ecx [ ebp + 0xc ]
test al al
je r-xdata
push 0x0
push 0x0
lea edx [ ebp + 0x30 ]
push edx
lea eax [ ebp + 0xc ]
push eax
mov ecx esi
call sub_413d00
test al al
je r-xdata
push 0x4
lea ecx [ ebp + 0x30 ]
call sub_412ed0
push eax
push ebx
lea ecx [ ebp + 0x30 ]
call sub_412ed0
push eax
push 0x2
lea ecx [ ebp + 0x30 ]
call sub_412ed0
push eax
push 0x1
lea ecx [ ebp + 0x30 ]
call sub_412ed0
push eax
push 0x0
lea ecx [ ebp + 0x30 ]
call sub_412ed0
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
call sub_415ac0
jmp r-xdata
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp + 0xc ]
call [ utf::string::~string@IAT ]
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp + 0x30 ]
call sub_406af0
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp + 0x50 ]
call sub_410e70
mov edx [ cui::ipc::UnityHelper::COMMAND_ID_UPDATE_VM_INFO@IAT ]
push edx
call edi
lea ecx [ ebp + 0xc ]
test al al
je r-xdata
push 0x0
push 0x1
lea eax [ ebp + 0x30 ]
push eax
push ecx
mov ecx esi
call sub_413d00
test al al
je r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx esi
call sub_414330
jmp r-xdata
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp + 0xc ]
call [ utf::string::~string@IAT ]
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp + 0x30 ]
call sub_406af0
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp + 0x50 ]
call [ sigc::slot_base::~slot_base@IAT ]
jmp r-xdata
mov eax [ cui::ipc::UnityHelper::COMMAND_ID_SET_UNITY_ACTIVE@IAT ]
push eax
call edi
test al al
je r-xdata
push 0x0
push 0x4
lea eax [ ebp + 0x30 ]
push eax
push ecx
mov ecx esi
call sub_413d00
test al al
je r-xdata
push 0x0
lea ecx [ ebp + 0x30 ]
call sub_412ed0
push eax
mov ecx esi
call sub_4154d0
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_401736
mov esp ebp
pop ebp
retn 0x50
mov eax [ cui::ipc::UnityHelper::COMMAND_ID_SHOW_APPS_BUTTON@IAT ]
push eax
lea ecx [ ebp + 0xc ]
call edi
test al al
je r-xdata
push 0x0
push 0x1
lea ecx [ ebp + 0x30 ]
push ecx
lea edx [ ebp + 0xc ]
push edx
mov ecx esi
call sub_413d00
test al al
je r-xdata
push ebx
lea ecx [ ebp + 0x30 ]
call sub_412ed0
push eax
push 0x2
lea ecx [ ebp + 0x30 ]
call sub_412ed0
push eax
push 0x1
lea ecx [ ebp + 0x30 ]
call sub_412ed0
push eax
push 0x0
lea ecx [ ebp + 0x30 ]
call sub_412ed0
push eax
mov edx [ ebp + 0x8 ]
push edx
mov ecx esi
call sub_413c50
jmp r-xdata
mov ecx [ cui::ipc::UnityHelper::COMMAND_ID_HIDE_APPS_BUTTON@IAT ]
push ecx
lea ecx [ ebp + 0xc ]
call edi
test al al
je r-xdata
push 0x0
push 0x0
lea ecx [ ebp + 0x30 ]
push ecx
lea edx [ ebp + 0xc ]
push edx
mov ecx esi
call sub_413d00
test al al
je r-xdata
push 0x0
lea ecx [ ebp + 0x30 ]
call sub_412ed0
mov ecx eax
call [ utf::string::c_str@IAT ]
push eax
call [ atoi@IAT ]
add esp 0x4
test eax eax
setne al
movzx ecx al
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov ecx esi
call sub_413ca0
jmp r-xdata
mov edx [ cui::ipc::UnityHelper::COMMAND_ID_MENU_CLOSED@IAT ]
push edx
lea ecx [ ebp + 0xc ]
call edi
lea ecx [ ebp + 0xc ]
test al al
je r-xdata
push 0x0
push 0x0
lea edx [ ebp + 0x30 ]
push edx
lea eax [ ebp + 0xc ]
push eax
mov ecx esi
call sub_413d00
test al al
je r-xdata
push 0x1
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
call sub_413cd0
jmp r-xdata
mov eax [ cui::ipc::UnityHelper::COMMAND_ID_GHI_LAUNCH@IAT ]
push eax
call edi
test al al
je r-xdata
push 0x0
push 0x0
lea eax [ ebp + 0x30 ]
push eax
push ecx
mov ecx esi
call sub_413d00
test al al
je r-xdata
push 0x0
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx esi
call sub_413cd0
jmp r-xdata
mov edx [ cui::ipc::UnityHelper::COMMAND_ID_LAUNCH_MENU_HOTKEY_CHANGED@IAT ]
push edx
lea ecx [ ebp + 0xc ]
call edi
lea ecx [ ebp + 0xc ]
test al al
je r-xdata
push 0x1
push 0x2
lea ecx [ ebp + 0x30 ]
push ecx
lea edx [ ebp + 0xc ]
push edx
mov ecx esi
call sub_413d00
test al al
je r-xdata
mov edx [ esi + 0x20 ]
push edx
call sub_409460
add esp 0x4
jmp r-xdata
call [ utf::string::c_str@IAT ]
push eax
push r--data
call Ordinal_vmwarebase_4
add esp 0x8
push 0x0
push 0x2
lea eax [ ebp + 0x30 ]
push eax
push ecx
mov ecx esi
call sub_413d00
test al al
je r-xdata
push 0x0
lea ecx [ ebp + 0x30 ]
call sub_412ed0
push eax
lea ecx [ ebp - 0x38 ]
call [ utf::string::string@IAT ]
mov [ ebp - 0x4 ] 0x4
lea ecx [ ebp + 0x30 ]
call sub_408340
lea eax [ ebp + 0x30 ]
push eax
lea ecx [ ebp - 0x38 ]
push ecx
mov ecx esi
call sub_415960
mov [ ebp - 0x4 ] bl
lea ecx [ ebp - 0x38 ]
call [ utf::string::~string@IAT ]
jmp r-xdata
push 0x1
lea ecx [ ebp + 0x30 ]
call sub_412ed0
mov ecx eax
mov edi [ utf::string::c_str@IAT ]
call edi
push eax
mov ebx [ atoi@IAT ]
call ebx
add esp 0x4
mov [ ebp - 0x40 ] eax
push 0x0
lea ecx [ ebp + 0x30 ]
call sub_412ed0
mov ecx eax
call edi
push eax
call ebx
add esp 0x4
mov [ ebp - 0x3c ] eax
lea edx [ ebp - 0x40 ]
push edx
lea eax [ ebp - 0x3c ]
push eax
lea ecx [ esi + 0x24 ]
call sub_413630
jmp r-xdata
sub_416120
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ ecx ]
mov ebx [ esi - 0xc ]
sub esi 0x10
mov [ ebp - 0x4 ] ecx
mov ecx [ esi ]
mov eax [ ecx ]
mov edx [ eax + 0x10 ]
push edi
call edx
mov ecx [ ebp + 0x8 ]
mov edx [ eax ]
mov edx [ edx ]
push 0x2
push ecx
mov ecx eax
call edx
mov edi eax
test edi edi
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp ebx eax
jge r-xdata
call sub_416110
lea eax [ eax + eax + 0x2 ]
push eax
lea edx [ esi + 0x10 ]
push edx
lea ecx [ edi + 0x10 ]
push eax
push ecx
mov [ ebp + 0x8 ] ecx
call [ memcpy_s@IAT ]
add esp 0x10
mov [ edi + 0x4 ] ebx
lea eax [ esi + 0xc ]
or ecx 0xffffffff
[ eax ] ecx
dec ecx
test ecx ecx
jg r-xdata
mov eax ebx
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
pop edi
pop esi
mov [ edx ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov ecx [ esi ]
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
push esi
call eax
sub_4161b0
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push esi
mov esi ecx
mov eax [ esi ]
mov ecx [ eax - 0x10 ]
sub eax 0x10
cmp [ eax + 0x8 ] edx
jge r-xdata
call sub_416110
test edx edx
jle r-xdata
push edi
mov edi [ ecx ]
push 0x2
push edx
push eax
mov eax [ edi + 0x8 ]
call eax
pop edi
test eax eax
jne r-xdata
add eax 0x10
mov [ esi ] eax
pop esi
pop ebp
retn 0x4
sub_4161f0
push ebp
mov ebp esp
push 0xffffffff
push sub_41cb61
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov eax [ ebp + 0x8 ]
push eax
call [ sigc::slot_base::slot_base@IAT ]
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_416240
mov eax [ ecx ]
sub eax 0x10
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
retn
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
sub_416260
push ebp
mov ebp esp
mov eax [ ecx ]
mov edx [ ebp + 0x8 ]
sub eax 0x10
push esi
mov esi [ eax + 0x4 ]
cmp esi edx
jle r-xdata
cmp [ eax + 0xc ] 0x1
pop esi
jle r-xdata
mov edx esi
mov eax [ eax + 0x8 ]
cmp eax edx
jge r-xdata
push edx
call sub_416120
pop ebp
retn 0x4
pop ebp
retn 0x4
cmp eax 0x400
jle r-xdata
add eax eax
add eax 0x400
jmp r-xdata
push eax
call sub_4161b0
mov eax edx
cmp eax edx
jge r-xdata
sub_4162b0
push ebp
mov ebp esp
push 0xffffffff
push sub_41cb88
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov eax [ rw-data ]
mov edx [ eax + 0xc ]
mov ecx rw-data
call edx
add eax 0x10
mov [ esi ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
sub_416310
push ebp
mov ebp esp
push 0xffffffff
push sub_41cbb8
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ecx ]
sub eax 0x10
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
sub_416370
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov edi ecx
test ebx ebx
jne r-xdata
mov eax [ ebp + 0xc ]
push eax
push ebx
call [ _vscwprintf@IAT ]
mov esi eax
mov eax [ edi ]
mov edx [ eax - 0x8 ]
sub eax 0x10
mov ecx 0x1
sub ecx [ eax + 0xc ]
sub edx esi
add esp 0x8
or ecx edx
jge r-xdata
push 0x80070057
call sub_401870
mov eax [ ebp + 0xc ]
mov edx [ edi ]
push eax
push ebx
lea ecx [ esi + 0x1 ]
push ecx
push edx
call [ vswprintf_s@IAT ]
add esp 0x10
test esi esi
jl r-xdata
push esi
mov ecx edi
call sub_416260
mov eax [ edi ]
cmp esi [ eax - 0x8 ]
jg r-xdata
mov [ eax - 0xc ] esi
mov eax [ edi ]
xor ecx ecx
pop edi
mov [ eax + esi * 2 ] cx
pop esi
pop ebx
pop ebp
retn 0x8
sub_416410
push ebp
mov ebp esp
push 0xffffffff
push sub_41cbf7
mov eax [ fs : 0x0 ]
push eax
sub esp 0x298
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
xor ebx ebx
push r--data
push ebx
push ebx
mov [ ebp - 0x224 ] eax
mov [ ebp - 0x228 ] ecx
mov [ ebp - 0x219 ] bl
call [ CreateMutexW@IAT ]
mov edi eax
cmp edi ebx
jne r-xdata
mov esi 0x5
push r--data
call Ordinal_vmwarebase_4
add esp 0x4
xor al al
jmp r-xdata
push r--data
call Ordinal_vmwarebase_4
add esp 0x4
cmp eax ebx
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_401736
mov esp ebp
pop ebp
retn
cmp esi ebx
je r-xdata
cmp eax 0x80
je r-xdata
push edi
call [ CloseHandle@IAT ]
xor al al
jmp r-xdata
mov edx [ rw-data ]
push edx
push ebx
push 0x100000
call [ OpenMutexW@IAT ]
cmp eax ebx
je r-xdata
push 0x3e8
call [ Sleep@IAT ]
dec esi
cmp esi ebx
jg r-xdata
push 0x40
lea eax [ ebp - 0x2a0 ]
push ebx
push eax
mov [ ebp - 0x2a4 ] 0x44
call memset
push 0x206
xor eax eax
lea edx [ ebp - 0x216 ]
xor ecx ecx
push ebx
push edx
mov [ ebp - 0x23c ] ebx
mov [ ebp - 0x238 ] eax
mov [ ebp - 0x234 ] eax
mov [ ebp - 0x230 ] eax
mov [ ebp - 0x218 ] cx
call memset
add esp 0x18
lea ecx [ ebp - 0x220 ]
call sub_4162b0
mov [ ebp - 0x4 ] ebx
push 0x104
lea eax [ ebp - 0x218 ]
push eax
push ebx
call [ GetModuleFileNameW@IAT ]
lea ecx [ ebp - 0x218 ]
push ecx
call [ PathRemoveFileSpecW@IAT ]
push r--data
lea edx [ ebp - 0x218 ]
push edx
call [ PathAppendW@IAT ]
mov ecx [ ebp - 0x228 ]
call [ utf::string::w_str@IAT ]
push eax
lea eax [ ebp - 0x218 ]
push eax
lea ecx [ ebp - 0x220 ]
push r--data
push ecx
call sub_4163f0
mov edx [ ebp - 0x220 ]
add esp 0x10
push edx
lea ecx [ ebp - 0x260 ]
call [ utf::string::string@IAT ]
mov [ ebp - 0x4 ] 0x1
mov ecx eax
call [ utf::string::c_str@IAT ]
push eax
push r--data
push r--data
call Ordinal_vmwarebase_2
add esp 0xc
mov [ ebp - 0x4 ] bl
lea ecx [ ebp - 0x260 ]
call [ utf::string::~string@IAT ]
mov edx [ ebp - 0x220 ]
mov ecx [ edx - 0x8 ]
mov eax 0x1
sub eax [ edx - 0x4 ]
or ecx eax
jge r-xdata
mov esi [ CloseHandle@IAT ]
push eax
call esi
push edi
call [ ReleaseMutex@IAT ]
push edi
call esi
mov al 0x1
jmp r-xdata
push 0x3e8
push edi
call [ WaitForSingleObject@IAT ]
cmp eax 0xffffffff
je r-xdata
lea eax [ ebp - 0x23c ]
push eax
lea ecx [ ebp - 0x2a4 ]
push ecx
push ebx
push ebx
push 0x20
push 0x1
push ebx
push ebx
push edx
push ebx
call [ CreateProcessW@IAT ]
mov esi [ CloseHandle@IAT ]
test eax eax
je r-xdata
push ebx
lea ecx [ ebp - 0x220 ]
call sub_416260
mov edx [ ebp - 0x220 ]
call [ GetLastError@IAT ]
push eax
push r--data
push r--data
call Ordinal_vmwarebase_4
add esp 0xc
mov edx [ ebp - 0x224 ]
mov eax [ ebp - 0x23c ]
push 0x1388
push ebx
lea ecx [ ebp - 0x22c ]
push ecx
push 0x2
mov [ ebp - 0x22c ] edx
mov [ ebp - 0x228 ] eax
call [ WaitForMultipleObjects@IAT ]
cmp eax ebx
jne r-xdata
cmp eax 0x1
jne r-xdata
mov edx [ ebp - 0x23c ]
push edx
mov [ ebp - 0x219 ] 0x1
call esi
mov eax [ ebp - 0x238 ]
push eax
call esi
jmp r-xdata
cmp eax 0x102
jne r-xdata
mov eax [ ebp - 0x23c ]
lea edx [ ebp - 0x224 ]
push edx
push eax
call [ GetExitCodeProcess@IAT ]
mov ecx [ ebp - 0x224 ]
push ecx
push r--data
jmp r-xdata
push edi
call [ ReleaseMutex@IAT ]
push edi
call esi
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x220 ]
call sub_416310
mov al [ ebp - 0x219 ]
push eax
push r--data
push r--data
call Ordinal_vmwarebase_4
mov edx [ ebp - 0x23c ]
add esp 0x4
push edx
call esi
mov eax [ ebp - 0x238 ]
push eax
call esi
jmp r-xdata
call Ordinal_vmwarebase_4
mov edx [ ebp - 0x23c ]
add esp 0x8
push edx
call esi
mov eax [ ebp - 0x238 ]
push eax
call esi
jmp r-xdata
sub_416770
push ebp
mov ebp esp
push esi
mov esi ecx
call [ sigc::slot_base::empty@IAT ]
test al al
jne r-xdata
pop esi
pop ebp
retn 0x8
mov ecx esi
call [ sigc::slot_base::blocked@IAT ]
test al al
jne r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
mov eax [ esi ]
push ecx
push edx
push eax
mov eax [ eax + 0x4 ]
call eax
add esp 0xc
sub_4167c0
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x0
push esi
mov esi ecx
push edi
mov edi [ ebp + 0x8 ]
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x1
je r-xdata
mov [ esi ] edi
test edi edi
je r-xdata
push edi
call [ SysStringByteLen@IAT ]
push eax
push edi
call [ SysAllocStringByteLen@IAT ]
mov [ esi ] eax
test eax eax
jne r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
push 0x8007000e
call sub_4190c0
sub_416810
push ebp
mov ebp esp
push 0xffffffff
push sub_41cc28
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
push esi
call [ VariantInit@IAT ]
mov eax [ ebp + 0x8 ]
push eax
push esi
call [ VariantCopy@IAT ]
test eax eax
jge r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
push eax
call sub_4190c0
sub_4168b0
push ebp
mov ebp esp
push 0xffffffff
push sub_41ccb8
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ecx ]
test eax eax
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
sub_416900
push ebp
mov ebp esp
push 0xffffffff
push sub_41cc58
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] 0xffffffff
push ecx
call [ VariantClear@IAT ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_416950
push ebp
mov ebp esp
push 0xffffffff
push sub_41cc94
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] ecx
or eax 0xffffffff
mov [ ebp - 0x4 ] eax
add ecx 0x20
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] eax
call [ utf::string::~string@IAT ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_4169a0
push ebp
mov ebp esp
push 0xffffffff
push sub_41ccb8
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax ecx
mov [ ebp - 0x10 ] eax
mov [ eax ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0x4
sub_4169f0
push ebp
mov ebp esp
push 0xffffffff
push sub_41ccb8
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax ecx
mov [ ebp - 0x10 ] eax
mov [ eax ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_416a40
push ebp
mov ebp esp
push 0xffffffff
push sub_41ccf4
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ esi ] ecx
mov edx [ eax + 0x4 ]
mov [ esi + 0x4 ] edx
mov ecx [ eax + 0x8 ]
mov [ esi + 0x8 ] ecx
mov edx [ eax + 0xc ]
mov [ esi + 0xc ] edx
mov ecx [ eax + 0x10 ]
mov [ esi + 0x10 ] ecx
mov edx [ eax + 0x14 ]
mov [ esi + 0x14 ] edx
mov ecx [ eax + 0x18 ]
mov [ esi + 0x18 ] ecx
mov edx [ eax + 0x1c ]
add eax 0x20
lea ecx [ esi + 0x20 ]
push eax
mov [ esi + 0x1c ] edx
mov [ ebp + 0x8 ] ecx
call [ utf::string::string@IAT ]
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_416ad0
push ebp
mov ebp esp
push 0xffffffff
push sub_41cd19
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov eax [ ebp + 0x10 ]
mov edi [ esi + 0x14 ]
sub esp 0x24
mov ecx esp
mov [ ebp - 0x10 ] esp
push eax
call [ utf::string::string@IAT ]
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp + 0xc ]
mov edx [ ecx ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov eax [ esi + 0x8 ]
push edx
mov edx [ edi + 0x4 ]
push ecx
mov ecx [ edx + eax ]
add ecx [ esi + 0x4 ]
lea ecx [ ecx + edi + 0x4 ]
mov [ ebp - 0x4 ] 0xffffffff
mov edx [ esi ]
call edx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0xc
sub_416b50
push ebp
mov ebp esp
push 0xffffffff
push sub_41cd4b
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
push 0xc
call ??2@YAPAXI@Z
add esp 0x4
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
xor eax eax
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
push ecx
push edx
mov ecx eax
call sub_4167c0
jmp r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x8
push 0x8007000e
call sub_4190c0
mov [ ebp - 0x4 ] 0xffffffff
mov [ esi ] eax
test eax eax
jne r-xdata
sub_416bd0
push ebp
mov ebp esp
push 0xffffffff
push sub_41cd78
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
cmp [ esi ] 0x16
jne r-xdata
lea eax [ ebp - 0x1c ]
push eax
call [ VariantInit@IAT ]
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x1c ]
cmp ecx esi
jne r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
push 0x16
push 0x0
push esi
lea eax [ ebp - 0x1c ]
push eax
call [ VariantChangeType@IAT ]
test eax eax
jge r-xdata
mov edx 0x16
cmp dx [ ebp - 0x1c ]
je r-xdata
mov esi [ ebp - 0x14 ]
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x1c ]
push ecx
call [ VariantClear@IAT ]
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
push eax
call sub_4190c0
sub_416c80
push ebp
mov ebp esp
push 0xffffffff
push sub_41cda8
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov eax [ ebp + 0x8 ]
mov [ esi ] eax
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
push eax
call edx
sub_416ce0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
test eax eax
jne r-xdata
push eax
call [ SysAllocString@IAT ]
mov [ esi ] eax
test eax eax
jne r-xdata
mov [ esi ] eax
mov eax esi
pop esi
pop ebp
retn 0x4
push 0x8007000e
call sub_401870
sub_416d20
push ebp
mov ebp esp
push esi
push edi
mov esi ecx
push esi
call [ VariantClear@IAT ]
mov edi [ ebp + 0x8 ]
mov eax 0x8
mov [ esi ] ax
mov eax [ edi ]
test eax eax
je r-xdata
mov [ esi + 0x8 ] eax
test eax eax
jne r-xdata
push eax
call [ SysStringByteLen@IAT ]
mov ecx [ edi ]
push eax
push ecx
call [ SysAllocStringByteLen@IAT ]
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
cmp [ edi ] eax
je r-xdata
mov edx 0xa
push 0x8007000e
mov [ esi ] dx
mov [ esi + 0x8 ] 0x8007000e
call sub_401870
sub_416d80
push ebp
mov ebp esp
push esi
mov esi ecx
cmp [ esi ] 0x3
je r-xdata
mov edx [ ebp + 0x8 ]
mov [ esi + 0x8 ] edx
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call [ VariantClear@IAT ]
mov ecx [ ebp + 0x8 ]
mov eax 0x3
mov [ esi ] ax
mov [ esi + 0x8 ] ecx
mov eax esi
pop esi
pop ebp
retn 0x4
sub_416dc0
push ebp
mov ebp esp
push esi
mov esi ecx
push esi
call [ VariantClear@IAT ]
mov eax 0x9
mov [ esi ] ax
mov eax [ ebp + 0x8 ]
mov [ esi + 0x8 ] eax
test eax eax
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
push eax
call edx
sub_416df0
push ebp
mov ebp esp
push 0xffffffff
push sub_41ce3c
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] 0x0
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov [ esi + 0x8 ] 0x0
mov eax [ esi + 0x4 ]
mov [ esi ] r--data
mov ecx [ eax + 0x8 ]
mov [ ecx + esi + 0x4 ] r--data
mov edx [ esi + 0x4 ]
mov eax [ edx + 0xc ]
mov [ eax + esi + 0x4 ] r--data
mov ecx [ esi + 0x4 ]
mov eax [ ecx + 0x8 ]
lea edx [ eax - 0x18 ]
mov [ eax + esi ] edx
mov eax [ esi + 0x4 ]
mov eax [ eax + 0xc ]
lea ecx [ eax - 0x40 ]
mov [ eax + esi ] ecx
lea eax [ esi + 0xc ]
mov [ ebp + 0x8 ] eax
mov [ eax ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
lea ecx [ esi + 0x14 ]
mov [ esi + 0x4 ] r--data
mov [ esi + 0x20 ] r--data
mov [ esi + 0x48 ] r--data
call [ sigc::trackable::trackable@IAT ]
mov [ ebp - 0x4 ] 0x0
push 0x0
lea ecx [ esi + 0x1c ]
mov [ ebp - 0x10 ] 0x1
call [ cui::ipc::Connection::Connection@IAT ]
mov [ ebp - 0x4 ] 0x1
push 0x0
lea ecx [ esi + 0x44 ]
mov [ ebp - 0x10 ] 0x3
call sub_4080c0
mov [ ebp - 0x4 ] 0x2
mov [ ebp - 0x10 ] 0x7
sub_416f00
push ebp
mov ebp esp
push 0xffffffff
push sub_41ce70
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ecx ]
test eax eax
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
sub_416f50
push ebp
mov ebp esp
push 0xffffffff
push sub_41cf31
mov eax [ fs : 0x0 ]
push eax
sub esp 0xec
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0xc8 ]
call [ utf::string::string@IAT ]
mov [ ebp - 0x4 ] 0x2
xor eax eax
mov [ ebp - 0xa0 ] eax
mov [ ebp - 0x9c ] eax
mov [ ebp - 0x98 ] eax
lea eax [ ebp - 0xa4 ]
push eax
mov [ ebp - 0xa4 ] 0x0
call [ CoCreateGuid@IAT ]
mov edi [ utf::string::operator=@IAT ]
test eax eax
jl r-xdata
lea ecx [ ebp - 0xc8 ]
call [ utf::string::empty@IAT ]
test al al
je r-xdata
xor ecx ecx
push 0x62
push ecx
lea edx [ ebp - 0x92 ]
push edx
mov [ ebp - 0x94 ] cx
call memset
add esp 0xc
push 0x32
lea eax [ ebp - 0x94 ]
push eax
lea ecx [ ebp - 0xa4 ]
push ecx
call [ StringFromGUID2@IAT ]
test eax eax
jl r-xdata
lea ecx [ ebp - 0xc8 ]
call [ utf::string::c_str@IAT ]
push eax
push r--data
push r--data
call Ordinal_vmwarebase_2
add esp 0xc
lea ecx [ ebp - 0xc8 ]
call [ utf::string::w_str@IAT ]
push eax
push 0x0
push 0x1
push 0x0
call [ CreateEventW@IAT ]
mov edi eax
test edi edi
jne r-xdata
sub esp 0x24
mov ebx esp
mov [ ebp - 0xd0 ] esp
push esi
call [ GetTickCount@IAT ]
push eax
push r--data
push ebx
call [ cui::Format@IAT ]
add esp 0x10
mov [ ebp - 0x4 ] 0x4
mov [ ebp - 0x4 ] 0x2
lea ecx [ ebp - 0xc8 ]
call edi
sub esp 0x24
lea edx [ ebp - 0x94 ]
mov ecx esp
mov [ ebp - 0xd0 ] esp
push edx
call [ utf::string::string@IAT ]
mov [ ebp - 0x4 ] 0x3
mov [ ebp - 0x4 ] 0x2
lea ecx [ ebp - 0xc8 ]
call edi
lea eax [ ebp - 0xc8 ]
push eax
push edi
call sub_416410
add esp 0x8
test al al
jne r-xdata
call [ GetLastError@IAT ]
push eax
push r--data
push r--data
call Ordinal_vmwarebase_4
add esp 0xc
push r--data
lea ecx [ ebp - 0xf8 ]
call [ utf::string::string@IAT ]
mov bl 0x5
mov [ ebp - 0x4 ] bl
lea eax [ ebp - 0xf8 ]
push eax
lea ecx [ ebp - 0x78 ]
mov [ ebp - 0xc9 ] 0x0
call [ cui::Error::Error@IAT ]
mov esi eax
mov [ ebp - 0x4 ] 0x6
lea ecx [ ebp + 0xc ]
call [ sigc::slot_base::empty@IAT ]
test al al
jne r-xdata
xor eax eax
lea edx [ ebp - 0xd4 ]
mov [ ebp - 0x2e ] eax
mov [ ebp - 0x2a ] eax
mov [ ebp - 0x26 ] eax
mov [ ebp - 0x22 ] eax
mov [ ebp - 0x1e ] eax
mov [ ebp - 0x1a ] eax
mov [ ebp - 0x16 ] eax
mov [ ebp - 0x12 ] ax
push edx
lea eax [ ebp - 0x30 ]
xor ecx ecx
push eax
mov [ ebp - 0x30 ] cx
mov [ ebp - 0xd4 ] 0x10
call [ GetComputerNameW@IAT ]
test eax eax
jne r-xdata
push r--data
push r--data
call Ordinal_vmwarebase_4
add esp 0x8
push edi
call [ CloseHandle@IAT ]
push r--data
lea ecx [ ebp - 0xf8 ]
call [ utf::string::string@IAT ]
mov bl 0xb
mov [ ebp - 0x4 ] bl
lea ecx [ ebp - 0xf8 ]
push ecx
lea ecx [ ebp - 0x78 ]
mov [ ebp - 0xc9 ] 0x0
call [ cui::Error::Error@IAT ]
mov esi eax
mov [ ebp - 0x4 ] 0xc
lea ecx [ ebp + 0xc ]
call [ sigc::slot_base::empty@IAT ]
test al al
jne r-xdata
mov [ ebp - 0x4 ] bl
lea ecx [ ebp - 0x78 ]
call [ cui::Error::~Error@IAT ]
mov [ ebp - 0x4 ] 0x2
mov esi [ utf::string::~string@IAT ]
lea ecx [ ebp - 0xf8 ]
call esi
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0xc8 ]
call esi
mov [ ebp - 0x4 ] 0x0
mov esi [ sigc::slot_base::~slot_base@IAT ]
lea ecx [ ebp + 0xc ]
call esi
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp + 0x14 ]
call esi
jmp r-xdata
lea ecx [ ebp + 0xc ]
call [ sigc::slot_base::blocked@IAT ]
test al al
jne r-xdata
lea edx [ ebp - 0x30 ]
push edx
lea ecx [ ebp - 0xf8 ]
call [ utf::string::string@IAT ]
mov [ ebp - 0x4 ] 0xd
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0xc ]
mov edx [ ecx + esi + 0x4 ]
mov edx [ edx ]
lea eax [ ebp - 0xc8 ]
lea ecx [ ecx + esi + 0x4 ]
push eax
lea eax [ ebp - 0xf8 ]
push eax
call edx
mov bl al
mov [ ebp - 0x4 ] 0x2
mov esi [ utf::string::~string@IAT ]
lea ecx [ ebp - 0xf8 ]
call esi
test bl bl
je r-xdata
push 0x10
push r--data
lea ecx [ ebp - 0x30 ]
push ecx
call [ lstrcpynW@IAT ]
mov [ ebp - 0x4 ] bl
lea ecx [ ebp - 0x78 ]
call [ cui::Error::~Error@IAT ]
mov [ ebp - 0x4 ] 0x2
mov esi [ utf::string::~string@IAT ]
lea ecx [ ebp - 0xf8 ]
call esi
jmp r-xdata
lea ecx [ ebp + 0xc ]
call [ sigc::slot_base::blocked@IAT ]
test al al
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_401736
mov esp ebp
pop ebp
retn 0x14
mov eax [ ebp + 0xc ]
mov edx [ eax + 0x4 ]
push esi
lea ecx [ ebp - 0xc9 ]
push ecx
push eax
call edx
add esp 0xc
push r--data
push r--data
call Ordinal_vmwarebase_4
add esp 0x8
push r--data
lea ecx [ ebp - 0xf8 ]
call [ utf::string::string@IAT ]
mov bl 0xe
mov [ ebp - 0x4 ] bl
lea ecx [ ebp - 0xf8 ]
push ecx
lea ecx [ ebp - 0x78 ]
mov [ ebp - 0xc9 ] 0x0
call [ cui::Error::Error@IAT ]
mov [ ebp - 0x4 ] 0xf
push eax
lea edx [ ebp - 0xc9 ]
push edx
lea ecx [ ebp + 0xc ]
call sub_416770
mov [ ebp - 0x4 ] bl
lea ecx [ ebp - 0x78 ]
call [ cui::Error::~Error@IAT ]
mov [ ebp - 0x4 ] 0x2
lea ecx [ ebp - 0xf8 ]
call esi
lea ecx [ ebp + 0x14 ]
call [ sigc::slot_base::empty@IAT ]
test al al
jne r-xdata
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0xc8 ]
call esi
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp + 0xc ]
call sub_410e70
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp + 0x14 ]
call sub_410e70
mov eax [ ebp + 0xc ]
push esi
lea edx [ ebp - 0xc9 ]
push edx
push eax
mov eax [ eax + 0x4 ]
call eax
add esp 0xc
push edi
call [ CloseHandle@IAT ]
lea ecx [ ebp + 0x14 ]
call [ sigc::slot_base::blocked@IAT ]
test al al
jne r-xdata
mov eax [ ebp + 0x14 ]
push eax
mov eax [ eax + 0x4 ]
call eax
add esp 0x4
jmp r-xdata
sub_4173b0
push ebp
mov ebp esp
push 0xffffffff
push sub_41cf68
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov eax [ ebp + 0x8 ]
push eax
call sub_416c80
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_417400
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0x14 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x18 ]
mov [ eax + 0x4 ] edx
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0xc ]
test ecx ecx
jne r-xdata
mov edx [ ecx + 0x4 ]
mov edx [ edx + 0x4 ]
lea edx [ edx + ecx + 0x4 ]
mov [ eax + 0x10 ] edx
mov [ eax + 0x14 ] ecx
pop ebp
retn
xor edx edx
mov [ eax + 0x10 ] edx
mov [ eax + 0x14 ] ecx
pop ebp
retn
sub_417440
push ebp
mov ebp esp
push 0xffffffff
push sub_41ccf4
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ esi ] ecx
mov edx [ eax + 0x4 ]
mov [ esi + 0x4 ] edx
mov ecx [ eax + 0x8 ]
mov [ esi + 0x8 ] ecx
mov edx [ eax + 0xc ]
mov [ esi + 0xc ] edx
mov ecx [ eax + 0x10 ]
mov [ esi + 0x10 ] ecx
mov edx [ eax + 0x14 ]
mov eax [ ebp + 0xc ]
mov [ esi + 0x14 ] edx
mov ecx [ eax ]
mov edx [ ebp + 0x10 ]
mov [ esi + 0x18 ] ecx
mov eax [ edx ]
mov edx [ ebp + 0x14 ]
lea ecx [ esi + 0x20 ]
push edx
mov [ esi + 0x1c ] eax
mov [ ebp + 0x8 ] ecx
call [ utf::string::string@IAT ]
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x10
sub_4174d0
push ebp
mov ebp esp
push 0xffffffff
push sub_41cfb2
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0x4 ] 0x1
lea eax [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0xc ]
lea ecx [ ebp + 0x14 ]
push ecx
lea edx [ ebp + 0x10 ]
push edx
push eax
mov ecx esi
call sub_417440
mov [ ebp - 0x10 ] 0x1
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp + 0x18 ]
call [ utf::string::~string@IAT ]
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
sub_417550
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
add ecx 0x18
lea eax [ ecx + 0x20 ]
push eax
lea edx [ ecx + 0x1c ]
push edx
lea eax [ ecx + 0x18 ]
push eax
call sub_416ad0
pop ebp
retn
sub_417570
push esi
push edi
mov edi ecx
mov esi [ edi ]
test esi esi
je r-xdata
pop edi
pop esi
retn
lea eax [ esi + 0x8 ]
push eax
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov [ edi ] 0x0
test esi esi
je r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
push eax
call [ SysFreeString@IAT ]
push esi
call ??3@YAXPAX@Z
add esp 0x4
push eax
call ??_V@YAXPAX@Z
add esp 0x4
sub_4175c0
push ebp
mov ebp esp
push 0xffffffff
push sub_41cfe9
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x14 ] 0x0
cmp [ ecx + 0x8 ] 0x0
mov [ ebp - 0x10 ] 0x0
je r-xdata
mov ecx [ ebp - 0x10 ]
mov esi [ ebp + 0x8 ]
push 0x0
push ecx
mov ecx esi
call sub_416b50
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x14 ] 0x1
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
mov eax [ ecx + 0x8 ]
mov ecx [ eax ]
lea edx [ ebp - 0x10 ]
push edx
push eax
mov eax [ ecx + 0x14 ]
call eax
sub_417640
push ebp
mov ebp esp
push 0xffffffff
push sub_41d034
mov eax [ fs : 0x0 ]
push eax
sub esp 0x34
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi ecx
mov [ ebp - 0x14 ] esi
mov [ esi - 0x1c ] r--data
mov eax [ esi - 0x18 ]
mov ecx [ eax + 0x8 ]
mov [ ecx + esi - 0x18 ] r--data
mov edx [ esi - 0x18 ]
mov eax [ edx + 0xc ]
mov [ eax + esi - 0x18 ] r--data
mov ecx [ esi - 0x18 ]
mov eax [ ecx + 0x8 ]
lea edx [ eax - 0x18 ]
mov [ eax + esi - 0x1c ] edx
mov eax [ esi - 0x18 ]
mov eax [ eax + 0xc ]
lea ecx [ eax - 0x40 ]
mov [ eax + esi - 0x1c ] ecx
xor edi edi
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x4 ] 0x1
lea ecx [ esi - 0x10 ]
cmp [ ecx ] edi
je r-xdata
mov [ ebp - 0x4 ] edi
jmp r-xdata
call sub_416890
or ecx 0xffffffff
mov [ ebp - 0x4 ] ecx
lea eax [ esi - 0x10 ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x4 ] ecx
mov eax [ eax ]
test eax eax
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ eax ]
push eax
mov edx [ ecx + 0x8 ]
call edx
sub_4176ca
mov ecx [ ebp - 0x1c ]
mov esi [ ecx + 0x4 ]
lea edx [ ebp - 0x18 ]
push edx
call sub_4175c0
mov bl 0x3
mov [ ebp - 0x4 ] bl
push eax
lea ecx [ ebp - 0x40 ]
call [ utf::string::string@IAT ]
mov [ ebp - 0x4 ] 0x4
mov ecx eax
call [ utf::string::c_str@IAT ]
push eax
push esi
push r--data
call Ordinal_vmwarebase_2
add esp 0xc
mov [ ebp - 0x4 ] bl
lea ecx [ ebp - 0x40 ]
call [ utf::string::~string@IAT ]
mov [ ebp - 0x4 ] 0x2
lea ecx [ ebp - 0x18 ]
call sub_417570
mov [ ebp - 0x4 ] 0x0
mov eax r-xdata
retn
sub_417780
push ebp
mov ebp esp
push 0xffffffff
push sub_41d0a5
mov eax [ fs : 0x0 ]
push eax
sub esp 0x74
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi ecx
mov [ ebp - 0x20 ] esi
xor ebx ebx
mov [ ebp - 0x4 ] ebx
push ebx
lea ecx [ ebp - 0x14 ]
call sub_4169a0
mov [ ebp - 0x4 ] 0x1
lea eax [ ebp - 0x14 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call ?GetMoniker@util@wui@@YAJABVstring@utf@@PAPAUIMoniker@@@Z
add esp 0x8
mov [ ebp - 0x4 ] 0x2
lea edi [ esi - 0x38 ]
cmp [ edi ] ebx
je r-xdata
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
push r--data
call Ordinal_vmwarebase_2
add esp 0x4
mov ecx edi
call sub_416890
cmp [ ebp - 0x14 ] ebx
jne r-xdata
lea ecx [ ebp - 0x18 ]
call sub_4169f0
mov [ ebp - 0x4 ] 0x6
lea eax [ ebp - 0x18 ]
push eax
push ebx
call [ CreateBindCtx@IAT ]
mov ecx [ ebp - 0x18 ]
cmp ecx ebx
je r-xdata
push r--data
call Ordinal_vmwarebase_2
add esp 0x4
cmp [ esi - 0x38 ] ebx
jne r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
lea edi [ esi - 0x38 ]
push edi
push r--data
push ebx
push ecx
push eax
mov eax [ edx + 0x20 ]
call eax
lea ecx [ esi - 0x44 ]
push ecx
lea ecx [ ebp - 0x1c ]
call sub_4173b0
mov [ ebp - 0x4 ] 0x7
lea edx [ ebp - 0x5c ]
push edx
call [ VariantInit@IAT ]
mov [ ebp - 0x4 ] 0x8
push sub_416d10
push sub_416880
push 0x1
push 0x10
lea eax [ ebp - 0x4c ]
push eax
call sub_4194c3
mov [ ebp - 0x4 ] 0x9
mov ecx [ ebp - 0x1c ]
push ecx
lea ecx [ ebp - 0x4c ]
call sub_416dc0
lea edx [ ebp - 0x4c ]
mov [ ebp - 0x3c ] edx
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x34 ] 0x1
mov [ ebp - 0x30 ] ebx
mov eax [ esi - 0x38 ]
mov ecx [ eax ]
push ebx
push ebx
lea edx [ ebp - 0x5c ]
push edx
lea edx [ ebp - 0x3c ]
push edx
push 0x1
push 0x400
push r--data
push ebx
push eax
mov eax [ ecx + 0x18 ]
call eax
cmp eax ebx
jge r-xdata
push r--data
call Ordinal_vmwarebase_2
add esp 0x4
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x18 ]
call sub_4168b0
jmp r-xdata
mov [ ebp - 0x4 ] 0x8
push sub_416d10
push 0x1
push 0x10
lea edx [ ebp - 0x4c ]
push edx
call sub_419460
mov [ ebp - 0x4 ] 0x7
lea eax [ ebp - 0x5c ]
push eax
call [ VariantClear@IAT ]
mov [ ebp - 0x4 ] 0x6
lea ecx [ ebp - 0x1c ]
call sub_416f00
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x18 ]
call sub_4168b0
mov [ ebp - 0x4 ] bl
lea ecx [ ebp - 0x14 ]
call sub_4168b0
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov eax [ esi - 0x40 ]
mov ecx [ eax + 0xc ]
lea ecx [ ecx + esi - 0x40 ]
call sub_418cb0
test al al
je r-xdata
push eax
push r--data
call Ordinal_vmwarebase_2
add esp 0x8
mov ecx [ esi - 0x40 ]
mov edx [ ecx + 0xc ]
lea ecx [ edx + esi - 0x40 ]
mov eax [ ecx ]
mov edx [ eax + 0x4 ]
call edx
mov [ ebp - 0x4 ] 0x8
push sub_416d10
push 0x1
push 0x10
lea eax [ ebp - 0x4c ]
push eax
call sub_419460
mov [ ebp - 0x4 ] 0x7
lea ecx [ ebp - 0x5c ]
push ecx
call [ VariantClear@IAT ]
mov [ ebp - 0x4 ] 0x6
lea ecx [ ebp - 0x1c ]
call sub_416f00
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x18 ]
call sub_4168b0
jmp r-xdata
mov [ ebp - 0x4 ] bl
lea ecx [ ebp - 0x14 ]
call sub_4168b0
xor al al
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
push ebx
mov edx [ esi - 0x40 ]
mov eax [ edx + 0x8 ]
lea ecx [ eax + esi - 0x40 ]
call [ cui::ipc::Connection::SetConnectionState@IAT ]
mov al 0x1
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_4177fd
mov ecx [ ebp - 0x28 ]
mov esi [ ecx + 0x4 ]
lea edx [ ebp - 0x24 ]
push edx
call sub_4175c0
mov bl 0x4
mov [ ebp - 0x4 ] bl
push eax
lea ecx [ ebp - 0x80 ]
call [ utf::string::string@IAT ]
mov [ ebp - 0x4 ] 0x5
mov ecx eax
call [ utf::string::c_str@IAT ]
push eax
push esi
push r--data
call Ordinal_vmwarebase_2
add esp 0xc
mov [ ebp - 0x4 ] bl
lea ecx [ ebp - 0x80 ]
call [ utf::string::~string@IAT ]
mov [ ebp - 0x4 ] 0x3
lea ecx [ ebp - 0x24 ]
call sub_417570
mov [ ebp - 0x4 ] 0x1
mov eax sub_41787a
retn
sub_41787a
mov esi [ ebp - 0x20 ]
xor ebx ebx
cmp [ ebp - 0x14 ] ebx
jne r-xdata
lea ecx [ ebp - 0x18 ]
call sub_4169f0
mov [ ebp - 0x4 ] 0x6
lea eax [ ebp - 0x18 ]
push eax
push ebx
call [ CreateBindCtx@IAT ]
mov ecx [ ebp - 0x18 ]
cmp ecx ebx
je r-xdata
push r--data
call Ordinal_vmwarebase_2
add esp 0x4
cmp [ esi - 0x38 ] ebx
jne r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
lea edi [ esi - 0x38 ]
push edi
push r--data
push ebx
push ecx
push eax
mov eax [ edx + 0x20 ]
call eax
lea ecx [ esi - 0x44 ]
push ecx
lea ecx [ ebp - 0x1c ]
call sub_4173b0
mov [ ebp - 0x4 ] 0x7
lea edx [ ebp - 0x5c ]
push edx
call [ VariantInit@IAT ]
mov [ ebp - 0x4 ] 0x8
push sub_416d10
push sub_416880
push 0x1
push 0x10
lea eax [ ebp - 0x4c ]
push eax
call sub_4194c3
mov [ ebp - 0x4 ] 0x9
mov ecx [ ebp - 0x1c ]
push ecx
lea ecx [ ebp - 0x4c ]
call sub_416dc0
lea edx [ ebp - 0x4c ]
mov [ ebp - 0x3c ] edx
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x34 ] 0x1
mov [ ebp - 0x30 ] ebx
mov eax [ esi - 0x38 ]
mov ecx [ eax ]
push ebx
push ebx
lea edx [ ebp - 0x5c ]
push edx
lea edx [ ebp - 0x3c ]
push edx
push 0x1
push 0x400
push r--data
push ebx
push eax
mov eax [ ecx + 0x18 ]
call eax
cmp eax ebx
jge r-xdata
push r--data
call Ordinal_vmwarebase_2
add esp 0x4
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x18 ]
call sub_4168b0
jmp r-xdata
mov [ ebp - 0x4 ] 0x8
push sub_416d10
push 0x1
push 0x10
lea edx [ ebp - 0x4c ]
push edx
call sub_419460
mov [ ebp - 0x4 ] 0x7
lea eax [ ebp - 0x5c ]
push eax
call [ VariantClear@IAT ]
mov [ ebp - 0x4 ] 0x6
lea ecx [ ebp - 0x1c ]
call sub_416f00
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x18 ]
call sub_4168b0
mov [ ebp - 0x4 ] bl
lea ecx [ ebp - 0x14 ]
call sub_4168b0
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov eax [ esi - 0x40 ]
mov ecx [ eax + 0xc ]
lea ecx [ ecx + esi - 0x40 ]
call sub_418cb0
test al al
je r-xdata
push eax
push r--data
call Ordinal_vmwarebase_2
add esp 0x8
mov ecx [ esi - 0x40 ]
mov edx [ ecx + 0xc ]
lea ecx [ edx + esi - 0x40 ]
mov eax [ ecx ]
mov edx [ eax + 0x4 ]
call edx
mov [ ebp - 0x4 ] 0x8
push sub_416d10
push 0x1
push 0x10
lea eax [ ebp - 0x4c ]
push eax
call sub_419460
mov [ ebp - 0x4 ] 0x7
lea ecx [ ebp - 0x5c ]
push ecx
call [ VariantClear@IAT ]
mov [ ebp - 0x4 ] 0x6
lea ecx [ ebp - 0x1c ]
call sub_416f00
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x18 ]
call sub_4168b0
jmp r-xdata
mov [ ebp - 0x4 ] bl
lea ecx [ ebp - 0x14 ]
call sub_4168b0
xor al al
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
push ebx
mov edx [ esi - 0x40 ]
mov eax [ edx + 0x8 ]
lea ecx [ eax + esi - 0x40 ]
call [ cui::ipc::Connection::SetConnectionState@IAT ]
mov al 0x1
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_417a78
mov ecx [ ebp - 0x2c ]
mov esi [ ecx + 0x4 ]
lea edx [ ebp + 0x8 ]
push edx
call sub_4175c0
mov bl 0xb
mov [ ebp - 0x4 ] bl
push eax
lea ecx [ ebp - 0x80 ]
call [ utf::string::string@IAT ]
mov [ ebp - 0x4 ] 0xc
mov ecx eax
call [ utf::string::c_str@IAT ]
push eax
push esi
push r--data
call Ordinal_vmwarebase_2
add esp 0xc
mov [ ebp - 0x4 ] bl
lea ecx [ ebp - 0x80 ]
call [ utf::string::~string@IAT ]
mov [ ebp - 0x4 ] 0xa
lea ecx [ ebp + 0x8 ]
call sub_417570
mov [ ebp - 0x4 ] 0xffffffff
mov eax r-xdata
retn
sub_417b00
push ebp
mov ebp esp
push 0xffffffff
push sub_41d0e1
mov eax [ fs : 0x0 ]
push eax
sub esp 0x30
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi ecx
mov [ ebp - 0x4 ] 0x0
mov eax [ esi - 0x40 ]
mov ecx [ eax + 0x8 ]
lea ecx [ ecx + esi - 0x40 ]
call [ cui::ipc::Connection::GetConnectionState@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x1
mov edx [ esi - 0x40 ]
mov eax [ edx + 0x8 ]
lea ecx [ eax + esi - 0x40 ]
mov edi [ cui::ipc::Connection::SetConnectionState@IAT ]
call edi
lea ecx [ esi - 0x38 ]
call sub_416890
push 0x2
mov ecx [ esi - 0x40 ]
mov edx [ ecx + 0x8 ]
lea ecx [ edx + esi - 0x40 ]
call edi
mov eax [ esi - 0x40 ]
mov ecx [ eax + 0xc ]
lea eax [ ecx + esi - 0x38 ]
mov edx [ eax + 0x4 ]
push edx
call sub_409460
add esp 0x4
sub_417ba1
mov ecx [ ebp - 0x18 ]
mov esi [ ecx + 0x4 ]
lea eax [ ebp - 0x14 ]
push eax
call sub_4175c0
mov bl 0x2
mov [ ebp - 0x4 ] bl
push eax
lea ecx [ ebp - 0x3c ]
call [ utf::string::string@IAT ]
mov [ ebp - 0x4 ] 0x3
mov ecx eax
call [ utf::string::c_str@IAT ]
push eax
push esi
push r--data
call Ordinal_vmwarebase_2
add esp 0xc
mov [ ebp - 0x4 ] bl
lea ecx [ ebp - 0x3c ]
call [ utf::string::~string@IAT ]
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x14 ]
call sub_417570
mov [ ebp - 0x4 ] 0xffffffff
mov eax sub_417bff
retn
sub_417c30
push ebp
mov ebp esp
push 0xffffffff
push sub_41c2b1
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ esi + 0x20 ] 0x0
je r-xdata
push esi
lea ecx [ ebp + 0x8 ]
call [ sigc::internal::signal_exec::signal_exec@IAT ]
mov [ ebp - 0x4 ] 0x0
add esi 0x8
push esi
lea ecx [ ebp - 0x18 ]
call sub_4093b0
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp - 0x18 ]
mov eax [ ecx + 0x14 ]
mov eax [ eax ]
mov esi [ ecx ]
mov ebx eax
lea ebx [ ebx ]
mov edi [ _invalid_parameter_noinfo@IAT ]
call edi
jmp r-xdata
cmp esi [ ebp - 0x14 ]
je r-xdata
mov eax [ ebp - 0x10 ]
cmp ebx eax
je r-xdata
mov edi [ _invalid_parameter_noinfo@IAT ]
mov [ ebp - 0x4 ] 0x0
push eax
mov eax [ ebp - 0x14 ]
push eax
lea ecx [ ebp - 0x14 ]
push ecx
mov ecx [ ebp - 0x18 ]
call sub_409330
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp + 0x8 ]
call [ sigc::internal::signal_exec::~signal_exec@IAT ]
test esi esi
jne r-xdata
mov eax [ esi ]
jmp r-xdata
call edi
xor eax eax
cmp ebx [ eax + 0x14 ]
jne r-xdata
lea edi [ ebx + 0x8 ]
mov ecx edi
call [ sigc::slot_base::empty@IAT ]
test al al
jne r-xdata
call edi
test esi esi
jne r-xdata
test esi esi
jne r-xdata
mov eax [ esi ]
jmp r-xdata
call [ _invalid_parameter_noinfo@IAT ]
xor eax eax
mov eax [ esi ]
jmp r-xdata
call [ _invalid_parameter_noinfo@IAT ]
xor eax eax
cmp ebx [ eax + 0x14 ]
jne r-xdata
mov ebx [ ebx ]
jmp r-xdata
call [ _invalid_parameter_noinfo@IAT ]
cmp ebx [ eax + 0x14 ]
jne r-xdata
mov ecx edi
call [ sigc::slot_base::blocked@IAT ]
test al al
jne r-xdata
call [ _invalid_parameter_noinfo@IAT ]
test esi esi
je r-xdata
test esi esi
jne r-xdata
mov eax [ esi ]
jmp r-xdata
call [ _invalid_parameter_noinfo@IAT ]
xor eax eax
cmp ebx [ eax + 0x14 ]
jne r-xdata
test esi esi
jne r-xdata
call [ _invalid_parameter_noinfo@IAT ]
mov eax [ esi ]
jmp r-xdata
call [ _invalid_parameter_noinfo@IAT ]
xor eax eax
cmp ebx [ eax + 0x14 ]
jne r-xdata
mov ecx [ ebp + 0x10 ]
mov eax [ edi ]
mov edx [ ebp + 0xc ]
push ecx
push edx
mov edx [ eax + 0x4 ]
mov ecx eax
push ecx
call edx
add esp 0xc
call [ _invalid_parameter_noinfo@IAT ]
sub_417de0
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
push esi
lea ecx [ ebp - 0x4 ]
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
call [ sigc::internal::slot_do_unbind::slot_do_unbind@IAT ]
mov ecx [ esi + 0x28 ]
mov eax [ eax ]
push ecx
lea ecx [ ebp + 0x8 ]
mov [ ebp + 0x8 ] eax
call [ sigc::internal::slot_do_unbind::operator~@IAT ]
xor eax eax
pop esi
mov esp ebp
pop ebp
retn
sub_417e20
push ebp
mov ebp esp
push 0xffffffff
push sub_41d109
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x4 ]
push sub_417fa0
push sub_417de0
push eax
call [ sigc::internal::slot_rep::slot_rep@IAT ]
mov [ ebp - 0x4 ] 0x0
mov ecx [ edi + 0x18 ]
mov [ esi + 0x18 ] ecx
mov edx [ edi + 0x1c ]
lea eax [ edi + 0x18 ]
mov [ esi + 0x1c ] edx
mov ecx [ eax + 0x8 ]
mov [ esi + 0x20 ] ecx
mov edx [ eax + 0xc ]
mov [ esi + 0x24 ] edx
mov ecx [ eax + 0x10 ]
mov [ esi + 0x28 ] ecx
mov edx [ eax + 0x14 ]
push esi
lea ecx [ ebp - 0x14 ]
mov [ esi + 0x2c ] edx
call [ sigc::internal::slot_do_bind::slot_do_bind@IAT ]
mov eax [ eax ]
mov [ ebp + 0x8 ] eax
mov eax [ esi + 0x28 ]
push eax
lea ecx [ ebp + 0x8 ]
call [ sigc::internal::slot_do_bind::operator~@IAT ]
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_417ed0
push ebp
mov ebp esp
push esi
lea esi [ ecx - 0x1c ]
push edi
lea edi [ esi + 0x1c ]
mov ecx edi
call sub_417640
lea ecx [ esi + 0xb0 ]
call sub_407fe0
mov ecx edi
call [ cui::ipc::Connection::~Connection@IAT ]
lea ecx [ esi + 0x14 ]
call [ sigc::trackable::~trackable@IAT ]
test [ ebp + 0x8 ] 0x1
je r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call ??3@YAXPAX@Z
add esp 0x4
sub_417f20
push ebp
mov ebp esp
push 0xffffffff
push sub_41d144
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
push eax
lea ecx [ ebp - 0x10 ]
lea esi [ eax + 0x18 ]
call [ sigc::internal::slot_do_unbind::slot_do_unbind@IAT ]
mov eax [ eax ]
mov [ ebp + 0x8 ] eax
mov eax [ esi + 0x10 ]
push eax
lea ecx [ ebp + 0x8 ]
call [ sigc::internal::slot_do_unbind::operator~@IAT ]
mov [ ebp + 0x8 ] esi
or eax 0xffffffff
mov [ ebp - 0x4 ] eax
lea ecx [ esi + 0x20 ]
mov [ ebp + 0x8 ] ecx
mov [ ebp - 0x4 ] eax
call [ utf::string::~string@IAT ]
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
sub_417fa0
push ebp
mov ebp esp
push 0xffffffff
push sub_41d1cc
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push 0x30
call [ sigc::internal::slot_rep::operator new@IAT ]
add esp 0x4
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
xor eax eax
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx eax
call sub_417e20
jmp r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_418010
push ebp
mov ebp esp
push 0xffffffff
push sub_41d174
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov ebx [ ebp + 0x8 ]
mov eax [ ebx + 0x4 ]
push sub_418160
push sub_417f20
push eax
call [ sigc::internal::slot_rep::slot_rep@IAT ]
mov [ ebp - 0x4 ] 0x0
lea edi [ esi + 0x18 ]
add ebx 0x18
push ebx
mov ecx edi
call sub_416a40
mov [ ebp - 0x4 ] 0x1
push esi
lea ecx [ ebp - 0x14 ]
call [ sigc::internal::slot_do_bind::slot_do_bind@IAT ]
mov ecx [ eax ]
mov edi [ edi + 0x10 ]
mov [ ebp + 0x8 ] ecx
push edi
lea ecx [ ebp + 0x8 ]
call [ sigc::internal::slot_do_bind::operator~@IAT ]
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4180b0
push ebp
mov ebp esp
push 0xffffffff
push sub_41d199
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
push sub_417fa0
push sub_417de0
push 0x0
call [ sigc::internal::slot_rep::slot_rep@IAT ]
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ esi + 0x18 ] ecx
mov edx [ eax + 0x4 ]
mov [ esi + 0x1c ] edx
mov ecx [ eax + 0x8 ]
mov [ esi + 0x20 ] ecx
mov edx [ eax + 0xc ]
mov [ esi + 0x24 ] edx
mov ecx [ eax + 0x10 ]
mov [ esi + 0x28 ] ecx
mov edx [ eax + 0x14 ]
push esi
lea ecx [ ebp - 0x14 ]
mov [ esi + 0x2c ] edx
call [ sigc::internal::slot_do_bind::slot_do_bind@IAT ]
mov eax [ eax ]
mov [ ebp + 0x8 ] eax
mov eax [ esi + 0x28 ]
push eax
lea ecx [ ebp + 0x8 ]
call [ sigc::internal::slot_do_bind::operator~@IAT ]
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_418160
push ebp
mov ebp esp
push 0xffffffff
push sub_41d1cc
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push 0x60
call [ sigc::internal::slot_rep::operator new@IAT ]
add esp 0x4
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
xor eax eax
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx eax
call sub_418010
jmp r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_4181d0
push ebp
mov ebp esp
push 0xffffffff
push sub_41d205
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
push 0x30
call [ sigc::internal::slot_rep::operator new@IAT ]
add esp 0x4
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
xor eax eax
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx eax
call sub_4180b0
jmp r-xdata
mov [ ebp - 0x4 ] 0xffffffff
push eax
mov ecx esi
call [ sigc::slot_base::slot_base@IAT ]
mov [ ebp - 0x4 ] 0x1
mov edx [ esi ]
mov [ edx + 0x4 ] sub_4083c0
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_418260
push ebp
mov ebp esp
push 0xffffffff
push sub_41d234
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
push sub_418160
push sub_417f20
push 0x0
call [ sigc::internal::slot_rep::slot_rep@IAT ]
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0x8 ]
lea edi [ esi + 0x18 ]
push eax
mov ecx edi
call sub_416a40
mov [ ebp - 0x4 ] 0x1
push esi
lea ecx [ ebp - 0x14 ]
call [ sigc::internal::slot_do_bind::slot_do_bind@IAT ]
mov ecx [ eax ]
mov edi [ edi + 0x10 ]
mov [ ebp + 0x8 ] ecx
push edi
lea ecx [ ebp + 0x8 ]
call [ sigc::internal::slot_do_bind::operator~@IAT ]
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_4182f0
push ebp
mov ebp esp
push 0xffffffff
push sub_41d25b
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
xor ebx ebx
mov eax [ ebp + 0x8 ]
cmp eax ebx
jne r-xdata
mov [ eax ] ebx
mov edi 0x8007000e
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x4 ] ebx
push 0xb4
call ??2@YAPAXI@Z
add esp 0x4
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0x1
cmp eax ebx
je r-xdata
mov eax 0x80004003
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
xor eax eax
mov [ ebp - 0x4 ] bl
mov esi eax
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
push 0x1
mov ecx eax
call sub_408e50
mov [ ebp - 0x4 ] bl
mov esi eax
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
cmp esi ebx
je r-xdata
mov eax [ esi ]
push esi
mov ecx [ eax + 0x4 ]
call ecx
mov edx [ ebp + 0x8 ]
mov [ edx ] esi
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
xor edi edi
sub_4183d0
push ebp
mov ebp esp
push 0xffffffff
push sub_41d288
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov eax [ ebp + 0x8 ]
push eax
call sub_4181d0
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_418420
push ebp
mov ebp esp
push 0xffffffff
push sub_41d205
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
push 0x60
call [ sigc::internal::slot_rep::operator new@IAT ]
add esp 0x4
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
xor eax eax
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx eax
call sub_418260
jmp r-xdata
mov [ ebp - 0x4 ] 0xffffffff
push eax
mov ecx esi
call [ sigc::slot_base::slot_base@IAT ]
mov [ ebp - 0x4 ] 0x1
mov edx [ esi ]
mov [ edx + 0x4 ] sub_417550
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
?CreateClientConnection@ipc@wui@@YAPAV?$CComObjectNoLockCreator@VClientConnectionImpl@ipc@wui@@@12@XZ
push ebp
mov ebp esp
push ecx
lea eax [ ebp - 0x4 ]
push eax
mov [ ebp - 0x4 ] 0x0
call sub_4182f0
mov eax [ ebp - 0x4 ]
test eax eax
jne r-xdata
mov esp ebp
pop ebp
retn
push 0x4e
push r--data
push r--data
call Ordinal_vmwarebase_3
sub_4184e0
push ebp
mov ebp esp
push 0xffffffff
push sub_41d288
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov eax [ ebp + 0x8 ]
push eax
call sub_418420
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_418530
push ebp
mov ebp esp
push 0xffffffff
push sub_41d317
mov eax [ fs : 0x0 ]
push eax
sub esp 0xe4
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi ecx
mov [ ebp - 0x18 ] esi
xor edi edi
mov [ ebp - 0x4 ] edi
cmp [ esi + 0xc ] edi
jne r-xdata
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x4c ]
push ecx
call [ VariantInit@IAT ]
mov [ ebp - 0x4 ] 0x2
push sub_416d10
push sub_416880
mov ebx 0x3
push ebx
push 0x10
lea edx [ ebp - 0x84 ]
push edx
call sub_4194c3
mov [ ebp - 0x4 ] bl
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0xc ]
mov edx [ ecx + esi + 0x64 ]
push edx
lea ecx [ ebp - 0x84 ]
call sub_416d80
mov eax [ ebp + 0xc ]
push eax
lea ecx [ ebp - 0x74 ]
call sub_416d80
lea ecx [ ebp + 0x10 ]
call [ utf::string::w_str@IAT ]
push eax
lea ecx [ ebp - 0x14 ]
call sub_416ce0
mov [ ebp - 0x4 ] 0x4
push eax
lea ecx [ ebp - 0x64 ]
call sub_416d20
mov [ ebp - 0x4 ] bl
mov ecx [ ebp - 0x14 ]
push ecx
call [ SysFreeString@IAT ]
lea edx [ ebp - 0x84 ]
mov [ ebp - 0x3c ] edx
mov [ ebp - 0x38 ] edi
mov [ ebp - 0x34 ] ebx
mov [ ebp - 0x30 ] edi
mov eax [ esi + 0xc ]
mov ecx [ eax ]
push edi
push edi
lea edx [ ebp - 0x4c ]
push edx
lea edx [ ebp - 0x3c ]
push edx
push 0x1
push 0x400
push r--data
mov edx [ ebp + 0x8 ]
push edx
push eax
mov eax [ ecx + 0x18 ]
call eax
cmp eax edi
jge r-xdata
push r--data
call Ordinal_vmwarebase_2
add esp 0x4
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0xc ]
lea ecx [ ecx + esi + 0x4 ]
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
call eax
mov [ ebp - 0x4 ] 0x2
push sub_416d10
push ebx
push 0x10
lea ecx [ ebp - 0x84 ]
push ecx
call sub_419460
mov [ ebp - 0x4 ] 0x1
lea edx [ ebp - 0x4c ]
push edx
call [ VariantClear@IAT ]
mov [ ebp - 0x4 ] edi
jmp r-xdata
cmp eax 0x8001010d
jne r-xdata
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp + 0x10 ]
call [ utf::string::~string@IAT ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x2c
push eax
push r--data
call Ordinal_vmwarebase_2
add esp 0x8
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0xc ]
lea ecx [ ecx + esi + 0x4 ]
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
call eax
mov edi sub_418530
mov [ ebp - 0x24 ] edi
xor eax eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] eax
sub esp 0x24
mov ecx esp
mov [ ebp - 0x14 ] esp
lea edx [ ebp + 0x10 ]
push edx
call [ utf::string::string@IAT ]
mov [ ebp - 0x4 ] 0x5
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
sub esp 0xc
mov eax esp
mov [ eax ] edi
mov edx [ ebp - 0x20 ]
mov [ eax + 0x4 ] edx
mov ecx [ ebp - 0x1c ]
mov [ eax + 0x8 ] ecx
push esi
lea edx [ ebp - 0x9c ]
push edx
call sub_417400
add esp 0x14
push eax
lea eax [ ebp - 0xf0 ]
push eax
mov [ ebp - 0x4 ] bl
call sub_4174d0
add esp 0x34
mov [ ebp - 0x4 ] 0x6
push eax
lea ecx [ ebp - 0x2c ]
call sub_4184e0
mov [ ebp - 0x4 ] 0x8
lea ecx [ ebp - 0xf0 ]
call sub_416950
push 0xa
sub esp 0x8
mov ecx esp
mov [ ebp - 0x50 ] esp
lea edx [ ebp - 0x2c ]
push edx
call sub_4161f0
mov [ ebp - 0x4 ] 0x9
lea eax [ ebp - 0x14 ]
push eax
mov [ ebp - 0x4 ] 0x8
call ?ScheduleCallback@util@wui@@YA?AUconnection@sigc@@V?$slot@XUnil@sigc@@U12@U12@U12@U12@U12@U12@@4@I@Z
add esp 0x10
lea ecx [ ebp - 0x14 ]
call [ sigc::connection::~connection@IAT ]
mov [ ebp - 0x4 ] bl
lea ecx [ ebp - 0x2c ]
call sub_410e70
mov [ ebp - 0x4 ] 0x2
push sub_416d10
push ebx
push 0x10
lea ecx [ ebp - 0x84 ]
push ecx
call sub_419460
mov [ ebp - 0x4 ] 0x1
lea edx [ ebp - 0x4c ]
push edx
call [ VariantClear@IAT ]
jmp r-xdata
sub_4187ad
mov ecx [ ebp - 0x54 ]
mov esi [ ecx + 0x4 ]
lea eax [ ebp - 0x14 ]
push eax
call sub_4175c0
mov bl 0xb
mov [ ebp - 0x4 ] bl
push eax
lea ecx [ ebp - 0xa8 ]
call [ utf::string::string@IAT ]
mov [ ebp - 0x4 ] 0xc
mov ecx eax
call [ utf::string::c_str@IAT ]
push eax
push esi
push r--data
call Ordinal_vmwarebase_2
add esp 0xc
mov [ ebp - 0x4 ] bl
lea ecx [ ebp - 0xa8 ]
call [ utf::string::~string@IAT ]
mov [ ebp - 0x4 ] 0xa
lea ecx [ ebp - 0x14 ]
call sub_417570
mov eax [ ebp - 0x18 ]
mov ecx [ eax + 0x4 ]
mov edx [ ecx + 0xc ]
lea ecx [ edx + eax + 0x4 ]
mov eax [ ecx ]
mov edx [ eax + 0x4 ]
call edx
mov [ ebp - 0x4 ] 0x0
mov eax r-xdata
retn
sub_41882a
push 0x80004005
push r--data
call Ordinal_vmwarebase_2
add esp 0x8
mov eax [ ebp - 0x18 ]
mov ecx [ eax + 0x4 ]
mov edx [ ecx + 0xc ]
lea ecx [ edx + eax + 0x4 ]
mov eax [ ecx ]
mov edx [ eax + 0x4 ]
call edx
mov [ ebp - 0x4 ] 0x0
mov eax r-xdata
retn
sub_418860
push ebp
mov ebp esp
push 0xffffffff
push sub_41d373
mov eax [ fs : 0x0 ]
push eax
sub esp 0x28
push ebx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0xc ]
lea eax [ ecx + esi ]
xor ebx ebx
cmp [ eax + 0x14 ] ebx
jne r-xdata
cmp [ esi + 0x10 ] bl
je r-xdata
lea ecx [ eax + 0x18 ]
call [ sigc::connection::empty@IAT ]
test al al
jne r-xdata
mov eax sub_418860
xor ecx ecx
mov [ ebp - 0x34 ] eax
mov eax [ esi + 0x4 ]
xor edx edx
mov [ ebp - 0x30 ] ecx
mov ecx [ eax + 0x4 ]
mov [ ebp - 0x2c ] edx
lea edx [ ecx + esi + 0x4 ]
lea eax [ ebp - 0x34 ]
push eax
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x24 ] edx
mov [ ebp - 0x20 ] esi
call sub_4183d0
mov [ ebp - 0x4 ] ebx
mov ecx [ esi + 0x4 ]
mov edx [ ecx + 0xc ]
mov eax [ edx + esi + 0x14 ]
push eax
sub esp 0x8
lea edx [ ebp - 0x1c ]
mov ecx esp
mov [ ebp - 0x14 ] esp
push edx
call sub_4161f0
mov [ ebp - 0x4 ] 0x1
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x4 ] bl
call ?ScheduleCallback@util@wui@@YA?AUconnection@sigc@@V?$slot@XUnil@sigc@@U12@U12@U12@U12@U12@U12@@4@I@Z
add esp 0x10
mov [ ebp - 0x4 ] 0x2
mov ecx [ esi + 0x4 ]
mov edx [ ecx + 0xc ]
push eax
lea ecx [ edx + esi + 0x18 ]
call [ sigc::connection::operator=@IAT ]
mov [ ebp - 0x4 ] bl
lea ecx [ ebp - 0x10 ]
call [ sigc::connection::~connection@IAT ]
sub esp 0x24
mov ecx esp
mov [ ebp - 0x14 ] esp
push r--data
call [ utf::string::string@IAT ]
mov [ ebp - 0x4 ] 0x3
push 0xffffffff
push 0x2
mov [ ebp - 0x4 ] bl
mov ecx esi
call sub_418530
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x1c ]
call [ sigc::slot_base::~slot_base@IAT ]
mov ecx [ esi + 0x4 ]
mov edx [ ecx + 0xc ]
mov eax [ edx + esi + 0x4 ]
lea ecx [ edx + esi + 0x4 ]
mov edx [ eax + 0x4 ]
call edx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ esi + 0x4 ]
mov eax [ edx + 0xc ]
lea ecx [ eax + esi + 0x18 ]
call [ sigc::connection::disconnect@IAT ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4189b0
push ebp
mov ebp esp
push 0xffffffff
push sub_41d3a2
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x4 ] 0x0
sub esp 0x24
lea eax [ ebp + 0xc ]
mov ecx esp
mov [ ebp - 0x10 ] esp
push eax
call [ utf::string::string@IAT ]
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp + 0x8 ]
push ecx
push 0x1
lea ecx [ esi - 0x1c ]
mov [ ebp - 0x4 ] 0x0
call sub_418530
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp + 0xc ]
call [ utf::string::~string@IAT ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x28
sub_418a30
push ebp
mov ebp esp
push 0xffffffff
push sub_41d40e
mov eax [ fs : 0x0 ]
push eax
sub esp 0x84
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0x1c ]
xor ebx ebx
mov [ ebp - 0x4 ] ebx
cmp edi ebx
jne r-xdata
mov eax [ ebp + 0xc ]
cmp eax 0x3
ja r-xdata
mov eax 0x80020004
jmp r-xdata
push 0x168
push r--data
push r--data
call Ordinal_vmwarebase_3
mov ecx [ ebp - 0x40 ]
mov esi [ ecx + 0x4 ]
lea eax [ ebp - 0x3c ]
push eax
call sub_4175c0
mov bl 0x9
mov [ ebp - 0x4 ] bl
push eax
lea ecx [ ebp - 0x38 ]
call [ utf::string::string@IAT ]
mov [ ebp - 0x4 ] 0xa
mov ecx eax
call [ utf::string::c_str@IAT ]
push eax
push esi
push r--data
call Ordinal_vmwarebase_2
add esp 0xc
mov [ ebp - 0x4 ] bl
lea ecx [ ebp - 0x38 ]
call [ utf::string::~string@IAT ]
mov [ ebp - 0x4 ] 0x8
lea ecx [ ebp - 0x3c ]
call sub_417570
mov [ ebp - 0x4 ] 0xffffffff
mov eax r-xdata
retn
jmp [ eax * 4 + jump_table_418c74 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_401736
mov esp ebp
pop ebp
retn 0x24
mov eax [ edi ]
push eax
lea ecx [ ebp - 0x90 ]
call sub_416810
mov [ ebp - 0x4 ] 0x1
mov ecx eax
call sub_416bd0
mov ecx [ esi + 0x4 ]
mov edx [ ecx + 0xc ]
mov [ edx + esi + 0x64 ] eax
mov [ ebp - 0x4 ] bl
lea ecx [ ebp - 0x90 ]
jmp r-xdata
mov eax [ edi ]
push eax
lea ecx [ ebp - 0x50 ]
call sub_416810
mov [ ebp - 0x4 ] 0x2
mov ecx eax
call sub_416bd0
mov [ ebp - 0x3c ] eax
mov [ ebp - 0x4 ] bl
lea ecx [ ebp - 0x50 ]
call sub_416900
mov ecx [ edi ]
add ecx 0x10
push ecx
lea ecx [ ebp - 0x80 ]
call sub_416810
mov [ ebp - 0x4 ] 0x3
mov ecx eax
call sub_416bd0
mov [ ebp - 0x4 ] bl
lea ecx [ ebp - 0x80 ]
call sub_416900
mov edx [ edi ]
add edx 0x20
push edx
lea eax [ ebp - 0x38 ]
push eax
mov ecx [ esi + 0x4 ]
mov edx [ ecx + 0xc ]
lea ecx [ edx + esi + 0x4 ]
call sub_418fc0
mov [ ebp - 0x4 ] 0x4
lea eax [ ebp - 0x38 ]
push eax
lea ecx [ ebp - 0x3c ]
push ecx
mov edx [ esi + 0x4 ]
mov eax [ edx + 0x8 ]
lea ecx [ eax + esi + 0x14 ]
call sub_417dc0
mov [ ebp - 0x4 ] bl
lea ecx [ ebp - 0x38 ]
call [ utf::string::~string@IAT ]
jmp r-xdata
mov ecx [ edi ]
push ecx
lea ecx [ ebp - 0x60 ]
call sub_416810
mov [ ebp - 0x4 ] 0x5
mov ecx eax
call sub_416bd0
mov edi eax
mov [ ebp - 0x4 ] bl
lea ecx [ ebp - 0x60 ]
call sub_416900
sub esp 0x24
mov ecx esp
mov [ ebp - 0x3c ] esp
push r--data
call [ utf::string::string@IAT ]
mov [ ebp - 0x4 ] 0x6
push edi
push 0x3
mov [ ebp - 0x4 ] bl
mov ecx esi
call sub_418530
jmp r-xdata
mov edx [ edi ]
push edx
lea ecx [ ebp - 0x70 ]
call sub_416810
mov [ ebp - 0x4 ] 0x7
mov ecx eax
call sub_416bd0
mov [ ebp - 0x4 ] bl
lea ecx [ ebp - 0x70 ]
call sub_416900
mov [ esi + 0x10 ] bl
mov [ ebp - 0x4 ] 0xffffffff
xor eax eax
sub_418cb0
push ebp
mov ebp esp
push 0xffffffff
push sub_41d452
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov eax [ ebp + 0x8 ]
mov edi [ utf::string::string@IAT ]
sub esp 0x24
mov ecx esp
mov [ ebp - 0x10 ] esp
push eax
call edi
mov [ ebp - 0x4 ] 0x0
lea ecx [ esi + 0x18 ]
mov [ ebp - 0x4 ] 0xffffffff
mov ebx [ utf::string::operator=@IAT ]
call ebx
mov edx [ ebp + 0xc ]
sub esp 0x24
mov ecx esp
mov [ ebp + 0x8 ] esp
push edx
call edi
mov [ ebp - 0x4 ] 0x1
lea ecx [ esi + 0x3c ]
mov [ ebp - 0x4 ] 0xffffffff
call ebx
mov al 0x1
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_418d40
push ebp
mov ebp esp
push 0xffffffff
push sub_41d479
mov eax [ fs : 0x0 ]
push eax
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x4 ] 0x0
push 0x5f
push r--data
push r--data
call Ordinal_vmwarebase_3
int3
sub_418d90
push ebp
mov ebp esp
push 0xffffffff
push sub_41d4ab
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov [ ebp - 0x10 ] edi
push 0xc
call ??2@YAPAXI@Z
mov esi eax
add esp 0x4
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
xor esi esi
mov edi [ ebp + 0x8 ]
push edi
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x1
call [ SysAllocString@IAT ]
mov [ esi ] eax
test eax eax
jne r-xdata
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
push 0x8007000e
call sub_4190c0
mov edi [ ebp - 0x10 ]
jmp r-xdata
test edi edi
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov [ edi ] esi
test esi esi
jne r-xdata
push 0x8007000e
call sub_4190c0
sub_418e40
push esi
mov esi [ ecx ]
test esi esi
je r-xdata
pop esi
retn
add [ esi + 0x4 ] 0xffffffff
jne r-xdata
mov eax [ esi ]
push eax
call [ free@IAT ]
push esi
call ??3@YAXPAX@Z
add esp 0x8
sub_418e70
push ebp
mov ebp esp
push 0xffffffff
push sub_41d4e3
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov [ ebp - 0x10 ] edi
mov [ ebp - 0x4 ] 0x0
mov esi [ edi + 0x4 ]
test esi esi
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov esi [ edi ]
test esi esi
je r-xdata
add [ esi + 0x4 ] 0xffffffff
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
lea ecx [ esi + 0x8 ]
push ecx
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax [ esi ]
push eax
call [ free@IAT ]
push esi
call ??3@YAXPAX@Z
add esp 0x8
mov [ edi ] 0x0
test esi esi
je r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
push eax
call [ SysFreeString@IAT ]
push esi
call ??3@YAXPAX@Z
add esp 0x4
push eax
call ??_V@YAXPAX@Z
add esp 0x4
sub_418f20
push ebp
mov ebp esp
push 0xffffffff
push sub_41d513
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov eax [ ebp + 0x8 ]
push eax
call sub_418d90
xor eax eax
mov [ ebp - 0x4 ] eax
mov [ esi + 0x4 ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_418f80
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x8 ]
lea ecx [ ecx + esi + 0x4 ]
call [ cui::ipc::Connection::GetConnectionState@IAT ]
test eax eax
jne r-xdata
pop esi
retn
mov edx [ esi + 0x4 ]
mov eax [ edx + 0x8 ]
push 0x2
lea ecx [ eax + esi + 0x4 ]
call [ cui::ipc::Connection::SetConnectionState@IAT ]
mov ecx [ esi + 0xc ]
push ecx
call sub_409460
add esp 0x4
sub_418fc0
push ebp
mov ebp esp
push 0xffffffff
push sub_41d597
mov eax [ fs : 0x0 ]
push eax
sub esp 0x54
push ebx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x10 ] 0x0
cmp [ eax ] 0x8
jne r-xdata
push r--data
lea ecx [ ebp - 0x3c ]
call [ utf::string::string@IAT ]
mov [ ebp - 0x4 ] 0x3
mov ebx 0x4
mov eax [ eax + 0x8 ]
push eax
lea ecx [ ebp - 0x18 ]
call sub_418f20
mov [ ebp - 0x4 ] 0x1
push eax
lea ecx [ ebp - 0x60 ]
mov [ ebp - 0x10 ] 0x1
call [ utf::string::string@IAT ]
mov [ ebp - 0x4 ] 0x2
mov ebx 0x3
jmp r-xdata
mov [ ebp - 0x4 ] 0x1
test bl 0x2
je r-xdata
and ebx 0xfffffffb
lea ecx [ ebp - 0x3c ]
mov [ ebp - 0x10 ] ebx
call [ utf::string::~string@IAT ]
mov [ ebp - 0x10 ] ebx
mov esi [ ebp + 0x8 ]
push eax
mov ecx esi
call [ utf::string::string@IAT ]
or ebx 0x8
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x4 ] 0x2
test bl 0x4
je r-xdata
mov [ ebp - 0x4 ] 0x0
test bl 0x1
je r-xdata
and ebx 0xfffffffd
lea ecx [ ebp - 0x60 ]
mov [ ebp - 0x10 ] ebx
call [ utf::string::~string@IAT ]
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
and ebx 0xfffffffe
lea ecx [ ebp - 0x18 ]
mov [ ebp - 0x10 ] ebx
call sub_418e70
sub_4190e0
mov edi edi
push esi
mov esi ecx
mov eax [ esi + 0x8 ]
mov [ esi ] r--data
test eax eax
je r-xdata
cmp [ esi + 0xc ] 0x0
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
pop esi
retn
call [ GetProcessHeap@IAT ]
test eax eax
je r-xdata
mov ecx [ esi + 0xc ]
push ecx
push 0x0
push eax
call [ HeapFree@IAT ]
sub_419120
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
push r--data
lea edx [ ebp - 0x10 ]
push edx
mov [ ebp - 0x10 ] r--data
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] 0x0
call _CxxThrowException
sub_419160
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
mov [ esi ] r--data
mov ecx [ eax + 0x4 ]
mov [ esi + 0x4 ] ecx
mov edx [ eax + 0x8 ]
mov eax edx
mov [ esi + 0x8 ] edx
mov [ esi + 0xc ] 0x0
test eax eax
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
push eax
call edx
sub_4191a0
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x8 ]
mov [ esi ] r--data
test eax eax
je r-xdata
cmp [ esi + 0xc ] 0x0
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
test [ ebp + 0x8 ] 0x1
je r-xdata
call [ GetProcessHeap@IAT ]
test eax eax
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call ??3@YAXPAX@Z
add esp 0x4
mov ecx [ esi + 0xc ]
push ecx
push 0x0
push eax
call [ HeapFree@IAT ]
sub_41929e
mov edi edi
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x2
push edi
mov edi ecx
je r-xdata
call ?_type_info_dtor_internal_method@type_info@@QAEXXZ
test [ ebp + 0x8 ] 0x1
je r-xdata
push esi
push ?_type_info_dtor_internal_method@type_info@@QAEXXZ
lea esi [ edi - 0x4 ]
push [ esi ]
push 0xc
push edi
call sub_419460
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax edi
push edi
call ??3@YAXPAX@Z
pop ecx
mov eax esi
pop esi
jmp r-xdata
push esi
call operator delete
pop ecx
pop edi
pop ebp
retn 0x4
sub_419310
push ecx
lea ecx [ esp + 0x4 ]
sub ecx eax
sbb eax eax
not eax
and ecx eax
mov eax esp
and eax 0xfffff000
sub eax 0x1000
test [ eax ] eax
jmp r-xdata
mov eax ecx
pop ecx
xchg esp eax
mov eax [ eax ]
mov [ esp ] eax
retn
cmp ecx eax
jb r-xdata
sub_419350
cmp [ rw-data ] 0x0
je r-xdata
push ebp
mov ebp esp
sub esp 0x20
and esp 0xfffffff0
fld st0
fst [ esp + 0x18 ]
fistp [ esp + 0x10 ]
fild [ esp + 0x10 ]
mov edx [ esp + 0x18 ]
mov eax [ esp + 0x10 ]
test eax eax
je r-xdata
push ebp
mov ebp esp
sub esp 0x8
and esp 0xfffffff8
fstp [ esp ]
cvttsd2si eax [ esp ]
leave
retn
mov edx [ esp + 0x14 ]
test edx 0x7fffffff
jne r-xdata
fsubp st1
test edx edx
jns r-xdata
fstp [ esp + 0x18 ]
fstp [ esp + 0x18 ]
fstp [ esp ]
mov ecx [ esp ]
add ecx 0x7fffffff
sbb eax 0x0
mov edx [ esp + 0x14 ]
sbb edx 0x0
jmp r-xdata
fstp [ esp ]
mov ecx [ esp ]
xor ecx 0x80000000
add ecx 0x7fffffff
adc eax 0x0
mov edx [ esp + 0x14 ]
adc edx 0x0
jmp r-xdata
leave
retn
sub_419402
push 0x14
push r--data
call sub_4015dc
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x4 ] 0xfffffffe
call sub_401621
retn 0x10
mov ecx [ ebp + 0x8 ]
sub ecx [ ebp + 0xc ]
mov [ ebp + 0x8 ] ecx
call [ ebp + 0x14 ]
jmp r-xdata
dec [ ebp + 0x10 ]
js r-xdata
sub_419425
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x1c ]
mov eax [ eax ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x20 ]
cmp [ eax ] 0xe06d7363
je r-xdata
call ?terminate@@YAXXZ
mov esp [ ebp - 0x18 ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_401621
retn 0x10
mov [ ebp - 0x24 ] 0x0
mov eax [ ebp - 0x24 ]
retn
sub_419460
push 0xc
push r--data
call sub_4015dc
and [ ebp - 0x1c ] 0x0
mov esi [ ebp + 0xc ]
mov eax esi
imul eax [ ebp + 0x10 ]
add [ ebp + 0x8 ] eax
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x1c ] 0x1
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4194ab
call sub_401621
retn 0x10
sub [ ebp + 0x8 ] esi
mov ecx [ ebp + 0x8 ]
call [ ebp + 0x14 ]
jmp r-xdata
dec [ ebp + 0x10 ]
js r-xdata
sub_4194c3
push 0x10
push r--data
call sub_4015dc
xor eax eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x20 ] 0x1
mov [ ebp - 0x4 ] 0xfffffffe
call sub_419510
call sub_401621
retn 0x14
mov esi [ ebp + 0x8 ]
mov ecx esi
call [ ebp + 0x14 ]
add esi [ ebp + 0xc ]
mov [ ebp + 0x8 ] esi
inc [ ebp - 0x1c ]
jmp r-xdata
mov eax [ ebp - 0x1c ]
cmp eax [ ebp + 0x10 ]
jge r-xdata
sub_4195ac
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
xor eax eax
push ebx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] eax
push ebx
pushfd
pop eax
mov ecx eax
xor eax 0x200000
push eax
popfd
pushfd
pop edx
sub edx ecx
je r-xdata
pop ebx
test [ ebp - 0x4 ] 0x4000000
je r-xdata
push ecx
popfd
xor eax eax
cpuid
mov [ ebp - 0xc ] eax
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] edx
mov [ ebp - 0x10 ] ecx
mov eax 0x1
cpuid
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
call sub_41955c
test eax eax
je r-xdata
xor eax eax
inc eax
jmp r-xdata
pop ebx
leave
retn
sub_419622
mov edi edi
push esi
mov esi ecx
cmp [ esi ] 0x0
je r-xdata
pop esi
retn
push ebx
mov ebx [ esi + 0x8 ]
cmp ebx [ esi + 0xc ]
jae r-xdata
lea eax [ esi + 0x10 ]
push eax
call [ DeleteCriticalSection@IAT ]
and [ esi ] 0x0
pop ebx
push edi
add ebx 0x4
cmp ebx [ esi + 0xc ]
jb r-xdata
mov eax [ edi + 0x10 ]
test eax eax
je r-xdata
mov edi [ ebx ]
test edi edi
je r-xdata
pop edi
and [ edi + 0x10 ] 0x0
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
sub_419666
mov edi edi
push esi
mov esi ecx
push edi
lea edi [ esi + 0x10 ]
mov ecx edi
call sub_401890
and [ esi ] 0x0
mov ecx edi
mov [ esi + 0x4 ] __dos_header
mov [ esi + 0x8 ] r--data
mov [ esi + 0xc ] r--data
call sub_4018b0
test eax eax
jge r-xdata
mov [ esi ] 0x28
mov [ rw-data ] 0x1
jmp r-xdata
pop edi
mov eax esi
pop esi
retn
sub_4196ad
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
push [ ebp + 0x8 ]
cmp eax 0x1
jne r-xdata
push eax
call [ rw-data ]
pop ebp
retn
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
pop ebp
retn
sub_4196d9
push 0xc
call [ IsProcessorFeaturePresent@IAT ]
test eax eax
jne r-xdata
push ebx
push esi
push edi
push r--data
call [ LoadLibraryA@IAT ]
mov edi eax
xor ebx ebx
cmp edi ebx
je r-xdata
inc eax
mov [ rw-data ] eax
retn
cmp [ rw-data ] ebx
je r-xdata
mov esi [ GetProcAddress@IAT ]
push r--data
push edi
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
mov [ rw-data ] eax
xor eax eax
cmp [ rw-data ] ebx
je r-xdata
mov eax [ fs : 0x18 ]
mov esi [ eax + 0x30 ]
add esi 0x34
mov eax [ esi ]
cmp eax ebx
jne r-xdata
mov [ rw-data ] eax
xor eax eax
inc eax
jmp r-xdata
push 0x8
push ebx
mov ebx [ GetProcessHeap@IAT ]
call ebx
push eax
call [ HeapAlloc@IAT ]
mov edi eax
xor eax eax
cmp edi eax
je r-xdata
pop edi
pop esi
pop ebx
retn
push eax
push edi
push esi
mov [ edi ] eax
mov [ edi + 0x4 ] eax
call [ InterlockedCompareExchange@IAT ]
test eax eax
je r-xdata
mov eax [ esi ]
push edi
push 0x0
call ebx
push eax
call [ HeapFree@IAT ]
sub_4197a0
cmp [ rw-data ] 0x0
push esi
jne r-xdata
mov eax [ rw-data ]
cmp eax 0x1
jne r-xdata
call sub_4196d9
test eax eax
je r-xdata
push eax
call [ rw-data ]
test eax eax
jne r-xdata
push 0xd
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
test eax eax
je r-xdata
xor eax eax
pop esi
retn
pop esi
retn
push 0x40
mov eax 0x1000
push eax
push eax
push 0x0
call [ VirtualAlloc@IAT ]
mov esi eax
test esi esi
jne r-xdata
pop esi
retn
mov eax [ esi ]
push edi
push [ rw-data ]
call [ rw-data ]
mov edi eax
test edi edi
je r-xdata
mov edi esi
add esi 0xff0
push 0x8000
push 0x0
push esi
call [ VirtualFree@IAT ]
jmp r-xdata
push edi
push [ rw-data ]
call [ rw-data ]
add edi 0x10
cmp edi esi
jb r-xdata
mov eax edi
pop edi
sub_419845
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
cmp [ eax ] 0x2c
jne r-xdata
mov eax 0x80070057
jmp r-xdata
and [ eax + 0x1c ] 0x0
lea ecx [ eax + 0x4 ]
call sub_4018b0
pop ebp
retn 0x4
sub_41986d
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jl r-xdata
push 0x0
push 0x0
push 0x1
push 0xc000008c
call [ RaiseException@IAT ]
int3
cmp eax [ ecx + 0x4 ]
jge r-xdata
mov ecx [ ecx ]
lea eax [ ecx + eax * 2 ]
pop ebp
retn 0x4
sub_4198b5
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
cmp esi edi
jne r-xdata
mov eax [ esi ]
cmp eax edi
je r-xdata
mov eax 0x80070057
jmp r-xdata
xor eax eax
cmp eax 0x2c
jne r-xdata
pop edi
pop esi
pop ebp
retn 0x8
cmp [ esi + 0x24 ] edi
jle r-xdata
lea ecx [ esi + 0x20 ]
call sub_41995b
lea eax [ esi + 0x4 ]
push eax
call [ DeleteCriticalSection@IAT ]
and [ esi ] 0x0
push ebx
lea ebx [ esi + 0x20 ]
push edi
mov ecx ebx
call sub_41986d
movzx eax [ eax ]
push [ ebp + 0xc ]
push eax
call [ UnregisterClassA@IAT ]
inc edi
cmp edi [ esi + 0x24 ]
jl r-xdata
pop ebx
sub_419919
mov edi edi
push esi
mov esi ecx
call sub_419899
push esi
mov [ esi ] 0x2c
call sub_419845
test eax eax
jge r-xdata
mov eax esi
pop esi
retn
mov [ rw-data ] 0x1
and [ esi ] 0x0
sub_41995b
mov edi edi
push esi
mov esi ecx
mov eax [ esi ]
test eax eax
je r-xdata
and [ esi + 0x4 ] 0x0
and [ esi + 0x8 ] 0x0
pop esi
retn
push eax
call free
and [ esi ] 0x0
pop ecx
sub_4199ae
mov edi edi
push esi
mov esi ecx
call sub_41997a
mov eax __dos_header
lea ecx [ esi + 0x14 ]
mov [ esi ] 0x38
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] eax
mov [ esi + 0xc ] 0x900
mov [ esi + 0x10 ] r--data
call sub_4018b0
test eax eax
jge r-xdata
mov eax esi
pop esi
retn
mov [ rw-data ] 0x1
sub_419a3d
mov edi edi
push ebp
mov ebp esp
xor eax eax
cmp [ ebp + 0x8 ] eax
jne r-xdata
cmp [ ebp + 0xc ] eax
jne r-xdata
push [ ebp + 0xc ]
mov eax [ ecx ]
call [ eax ]
jmp r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
push [ ecx + 0x4 ]
call [ HeapReAlloc@IAT ]
push [ ebp + 0x8 ]
mov eax [ ecx ]
call [ eax + 0x4 ]
xor eax eax
jmp r-xdata
pop ebp
retn 0x8
sub_419a8e
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_4199ee
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call ??3@YAXPAX@Z
pop ecx
sub_419aaf
mov edi edi
push ebp
mov ebp esp
mov eax ecx
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x4 ] ecx
mov [ eax ] r--data
xor ecx ecx
mov [ eax + 0x14 ] 0x2
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] ecx
mov [ eax + 0x18 ] cx
mov [ eax + 0x1a ] cx
mov [ eax + 0x8 ] eax
pop ebp
retn 0x4
sub_419aff
mov edi edi
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call ??3@YAXPAX@Z
pop ecx
sub_419b21
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
or edx 0xffffffff
sub edx eax
cmp edx ecx
jae r-xdata
add eax ecx
mov ecx [ ebp + 0x8 ]
mov [ ecx ] eax
xor eax eax
pop ebp
retn
mov eax 0x80070057
pop ebp
retn
sub_419b47
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
push [ ebp + 0xc ]
add esi 0x8
and esi 0xfffffff8
lea eax [ ebp + 0x8 ]
push esi
push eax
mov edi ecx
call sub_402de0
add esp 0xc
test eax eax
jl r-xdata
xor eax eax
push [ ebp + 0x8 ]
lea eax [ ebp + 0x8 ]
push 0x10
push eax
call sub_419b21
add esp 0xc
test eax eax
jl r-xdata
mov ecx [ edi + 0x4 ]
push [ ebp + 0x8 ]
mov eax [ ecx ]
call [ eax ]
test eax eax
je r-xdata
dec esi
and [ eax + 0x4 ] 0x0
mov [ eax ] edi
mov [ eax + 0xc ] 0x1
mov [ eax + 0x8 ] esi
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0x8
sub_419bab
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
push edi
push [ ebp + 0x10 ]
add esi 0x8
and esi 0xfffffff8
lea eax [ ebp + 0xc ]
push esi
push eax
mov edi ecx
call sub_402de0
add esp 0xc
test eax eax
jl r-xdata
xor eax eax
push [ ebp + 0xc ]
lea eax [ ebp + 0xc ]
push 0x10
push eax
call sub_419b21
add esp 0xc
test eax eax
jl r-xdata
push [ ebp + 0xc ]
mov ecx [ edi + 0x4 ]
push [ ebp + 0x8 ]
mov eax [ ecx ]
call [ eax + 0x8 ]
test eax eax
je r-xdata
dec esi
mov [ eax + 0x8 ] esi
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0xc
sub_41d5c0
push ebp
mov ebp esp
push 0xffffffff
push sub_41a9c4
mov eax [ fs : 0x0 ]
push eax
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ecx rw-data
call sub_402c40
mov [ ebp - 0x4 ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] rw-data
mov [ ebp - 0x4 ] 0x1
mov [ rw-data ] r--data
mov [ ebp - 0x4 ] 0xffffffff
push sub_41d6c0
call sub_40140f
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_41d6c0
push ebp
mov ebp esp
push 0xffffffff
push sub_41a9f4
mov eax [ fs : 0x0 ]
push eax
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
or eax 0xffffffff
mov [ ebp - 0x4 ] eax
mov [ rw-data ] r--data
mov [ ebp - 0x4 ] eax
mov ecx rw-data
call sub_402780
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
_start
push ebp
mov ebp esp
sub esp 0x574
mov [ ebp - 0x12c ] 0x0
mov [ ebp - 0x154 ] 0x0
mov [ ebp - 0x284 ] 0x0
call sub_42f27d
nop
nop
pop [ ebp - 0x12c ]
mov eax [ ebp - 0x12c ]
sub eax 0x24c
mov [ ebp - 0x284 ] eax
mov [ ebp - 0x540 ] 0x0
mov [ ebp - 0x2a8 ] 0x0
mov [ ebp - 0x420 ] 0x0
mov [ ebp - 0x144 ] 0x0
mov ecx [ ebp - 0x284 ]
mov edx [ ecx ]
mov [ ebp - 0x420 ] edx
mov eax [ ebp - 0x284 ]
add eax 0x4
mov [ ebp - 0x140 ] eax
mov ecx [ ebp - 0x140 ]
push ecx
call sub_42ff70
add esp 0x4
call sub_430130
mov [ ebp - 0x54c ] eax
mov edx [ ebp - 0x140 ]
push edx
mov eax [ ebp - 0x54c ]
push eax
call sub_430160
add esp 0x8
mov [ ebp - 0x540 ] eax
mov ecx [ ebp - 0x284 ]
mov edx [ ecx + 0x1c ]
mov [ ebp - 0x144 ] edx
mov [ ebp - 0x548 ] 0x0
mov [ ebp - 0x53c ] 0x0
mov eax [ ebp - 0x284 ]
add eax 0xa0
mov [ ebp - 0x2a4 ] eax
mov ecx [ ebp - 0x284 ]
add ecx 0x1f0
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x284 ]
add edx 0xd0
mov [ ebp - 0x128 ] edx
mov [ ebp - 0x124 ] 0x0
mov [ ebp - 0x150 ] 0x0
mov eax [ ebp - 0x12c ]
sub eax 0x1
mov [ ebp - 0x12c ] eax
mov ecx [ ebp - 0x12c ]
mov edx [ ecx ]
mov [ ebp - 0x154 ] edx
jmp rwxdata
mov [ ebp - 0x2a0 ] 0x0
mov [ ebp - 0x41c ] 0x0
mov [ ebp - 0x418 ] 0x0
mov [ ebp - 0x13c ] 0x0
mov [ ebp - 0x14c ] 0x0
mov [ ebp - 0x29c ] 0x0
mov [ ebp - 0x538 ] 0x0
mov [ ebp - 0x544 ] 0x0
mov [ ebp - 0x280 ] 0x0
mov [ ebp - 0x28c ] 0x0
mov [ ebp - 0x55c ] 0x0
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x534 ] 0x0
mov [ ebp - 0x268 ] 0x0
mov [ ebp - 0x414 ] 0x0
mov [ ebp - 0x298 ] 0x0
mov edx [ ebp - 0x284 ]
add edx 0x1f0
mov [ ebp - 0x124 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax ]
mov [ ebp - 0x2a0 ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x4 ]
mov [ ebp - 0x41c ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x8 ]
mov [ ebp - 0x418 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0xc ]
mov [ ebp - 0x13c ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x10 ]
mov [ ebp - 0x14c ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x14 ]
mov [ ebp - 0x29c ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0x18 ]
mov [ ebp - 0x538 ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x1c ]
mov [ ebp - 0x544 ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x20 ]
mov [ ebp - 0x280 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0x24 ]
mov [ ebp - 0x28c ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x28 ]
mov [ ebp - 0x55c ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x2c ]
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0x30 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x34 ]
mov [ ebp - 0x534 ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x38 ]
mov [ ebp - 0x268 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0x3c ]
mov [ ebp - 0x414 ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x40 ]
mov [ ebp - 0x298 ] eax
mov [ ebp - 0x264 ] 0x0
mov ecx [ ebp - 0x284 ]
add ecx 0x20
mov [ ebp - 0x264 ] ecx
mov [ ebp - 0x2b4 ] 0x0
mov [ ebp - 0x18 ] 0x0
push 0x103
lea edx [ ebp - 0x120 ]
push edx
push 0x0
call [ ebp - 0x41c ]
push 0x0
push 0x0
push 0x3
push 0x0
push 0x1
push 0x80000000
lea eax [ ebp - 0x120 ]
push eax
call [ ebp - 0x418 ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0xffffffff
je rwxdata
mov eax [ ebp - 0x548 ]
push eax
call [ ebp - 0x540 ]
mov [ ebp - 0x150 ] eax
cmp [ ebp - 0x150 ] 0x0
jne rwxdata
cmp [ ebp - 0x154 ] 0x652a5e26
je rwxdata
call [ ebp - 0x420 ]
xor eax eax
mov esp ebp
pop ebp
retn
push 0x0
mov ecx [ ebp - 0xc ]
push ecx
call [ ebp - 0x14c ]
mov [ ebp - 0x288 ] eax
cmp [ ebp - 0x288 ] 0xc800000
ja rwxdata
mov ecx [ ebp - 0x128 ]
mov [ ebp - 0x53c ] ecx
mov edx [ ebp - 0x53c ]
movsx eax [ edx ]
test eax eax
je rwxdata
jmp rwxdata
mov ecx [ ebp - 0xc ]
push ecx
call [ ebp - 0x13c ]
push 0x4
push 0x1000
mov edx [ ebp - 0x288 ]
push edx
push 0x0
call [ ebp - 0x29c ]
mov [ ebp - 0x294 ] eax
cmp [ ebp - 0x294 ] 0x0
je rwxdata
mov edx [ ebp - 0x128 ]
add edx 0x5
mov [ ebp - 0x128 ] edx
mov eax [ ebp - 0x548 ]
mov [ ebp - 0x570 ] eax
mov [ ebp - 0x56c ] 0x0
mov ecx [ ebp - 0x53c ]
push ecx
mov edx [ ebp - 0x150 ]
push edx
call sub_430160
add esp 0x8
mov [ ebp - 0x124 ] eax
mov [ ebp - 0x560 ] 0x4
push 0x0
lea eax [ ebp - 0x550 ]
push eax
mov ecx [ ebp - 0x288 ]
push ecx
mov edx [ ebp - 0x294 ]
push edx
mov eax [ ebp - 0xc ]
push eax
call [ ebp - 0x544 ]
mov ecx [ ebp - 0x550 ]
mov edx [ ebp - 0x294 ]
lea eax [ edx + ecx - 0x3 ]
mov [ ebp - 0x148 ] eax
jmp rwxdata
mov edx [ ebp - 0x56c ]
mov eax [ ebp - 0x2a4 ]
lea ecx [ eax + edx + 0x1 ]
mov [ ebp - 0x2a4 ] ecx
jmp rwxdata
mov ecx [ ebp - 0x570 ]
movsx edx [ ecx ]
mov eax [ ebp - 0x570 ]
add eax 0x1
mov [ ebp - 0x570 ] eax
test edx edx
je rwxdata
mov edx [ ebp - 0x14 ]
add edx 0x4
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0x53c ]
mov [ ebp - 0x568 ] eax
mov [ ebp - 0x564 ] 0x0
mov edx [ ebp - 0x14 ]
add edx [ ebp - 0x560 ]
mov eax [ ebp - 0x560 ]
mov cl [ ebp + eax - 0x124 ]
mov [ edx ] cl
jmp rwxdata
mov edx [ ebp - 0x148 ]
cmp edx [ ebp - 0x294 ]
jbe rwxdata
mov eax [ ebp - 0x2a4 ]
mov [ ebp - 0x548 ] eax
mov ecx [ ebp - 0x548 ]
movsx edx [ ecx ]
test edx edx
je rwxdata
mov ecx [ ebp - 0x56c ]
add ecx 0x1
mov [ ebp - 0x56c ] ecx
jmp rwxdata
mov edx [ ebp - 0x564 ]
mov eax [ ebp - 0x128 ]
lea ecx [ eax + edx + 0x1 ]
mov [ ebp - 0x128 ] ecx
jmp rwxdata
mov ecx [ ebp - 0x568 ]
movsx edx [ ecx ]
mov eax [ ebp - 0x568 ]
add eax 0x1
mov [ ebp - 0x568 ] eax
test edx edx
je rwxdata
mov eax [ ebp - 0x560 ]
mov ecx [ ebp - 0x560 ]
sub ecx 0x1
mov [ ebp - 0x560 ] ecx
test eax eax
je rwxdata
mov eax [ ebp - 0x148 ]
cmp eax [ ebp - 0x294 ]
jbe rwxdata
mov eax [ ebp - 0x148 ]
movsx ecx [ eax ]
cmp ecx 0x36
jne rwxdata
cmp [ ebp - 0x570 ] 0x0
je rwxdata
mov ecx [ ebp - 0x564 ]
add ecx 0x1
mov [ ebp - 0x564 ] ecx
jmp rwxdata
push 0x8000
push 0x0
mov eax [ ebp - 0x294 ]
push eax
call [ ebp - 0x538 ]
mov ecx [ ebp - 0x148 ]
add ecx 0x4
mov [ ebp - 0x148 ] ecx
mov [ ebp - 0x130 ] 0x0
jmp rwxdata
jmp rwxdata
mov edx [ ebp - 0x148 ]
movsx eax [ edx + 0x1 ]
cmp eax 0x2a
jne rwxdata
cmp [ ebp - 0x568 ] 0x0
je rwxdata
mov ecx [ ebp - 0x148 ]
movsx edx [ ecx ]
cmp edx 0x3a
je rwxdata
mov ecx [ ebp - 0x148 ]
sub ecx 0x1
mov [ ebp - 0x148 ] ecx
mov ecx [ ebp - 0x148 ]
movsx edx [ ecx + 0x2 ]
cmp edx 0x23
jne rwxdata
mov edx [ ebp - 0x130 ]
sub edx 0x1
mov [ ebp - 0x554 ] edx
jmp rwxdata
mov eax [ ebp - 0x130 ]
mov ecx [ ebp - 0x148 ]
mov dl [ ecx ]
mov [ ebp + eax - 0x120 ] dl
mov eax [ ebp - 0x148 ]
movsx ecx [ eax ]
cmp ecx 0x2e
jne rwxdata
jmp rwxdata
mov ecx [ ebp - 0x554 ]
movsx edx [ ebp + ecx - 0x120 ]
cmp edx 0x2e
je rwxdata
jmp rwxdata
mov [ ebp - 0x554 ] 0x0
jmp rwxdata
mov [ ebp - 0x2b0 ] 0x0
mov eax [ ebp - 0x554 ]
add eax 0x1
mov [ ebp - 0x554 ] eax
jmp rwxdata
jmp rwxdata
mov edx [ ebp - 0x130 ]
add edx 0x1
mov [ ebp - 0x130 ] edx
mov eax [ ebp - 0x148 ]
add eax 0x1
mov [ ebp - 0x148 ] eax
mov eax [ ebp - 0x554 ]
cmp eax [ ebp - 0x130 ]
jae rwxdata
mov eax [ ebp - 0x554 ]
cmp eax [ ebp - 0x130 ]
jae rwxdata
mov eax [ ebp - 0x554 ]
sub eax 0x1
mov [ ebp - 0x554 ] eax
mov ecx [ ebp - 0x554 ]
mov [ ebp + ecx - 0x260 ] 0x0
lea edx [ ebp - 0x260 ]
push edx
call sub_42ff70
add esp 0x4
push 0x104
lea eax [ ebp - 0x260 ]
push eax
call [ ebp - 0x8 ]
push 0x0
lea ecx [ ebp - 0x260 ]
push ecx
call [ ebp - 0x280 ]
mov ecx [ ebp - 0x554 ]
mov edx [ ebp - 0x554 ]
mov al [ ebp + edx - 0x120 ]
mov [ ebp + ecx - 0x260 ] al
jmp rwxdata
mov ecx [ ebp - 0x2b0 ]
mov [ ebp + ecx - 0x260 ] 0x0
mov edx [ ebp - 0x130 ]
mov [ ebp + edx - 0x120 ] 0x0
lea eax [ ebp - 0x120 ]
push eax
call sub_42ff70
add esp 0x4
lea ecx [ ebp - 0x260 ]
push ecx
call sub_42ff70
add esp 0x4
push 0x104
lea edx [ ebp - 0x120 ]
push edx
call [ ebp - 0x8 ]
mov eax [ ebp - 0x148 ]
add eax 0x1
mov [ ebp - 0x148 ] eax
mov [ ebp - 0x130 ] 0x0
jmp rwxdata
mov ecx [ ebp - 0x2b0 ]
mov edx [ ebp - 0x554 ]
mov al [ ebp + edx - 0x120 ]
mov [ ebp + ecx - 0x260 ] al
jmp rwxdata
mov edx [ ebp - 0x554 ]
add edx 0x1
mov [ ebp - 0x554 ] edx
mov edx [ ebp - 0x130 ]
movsx eax [ ebp + edx - 0x120 ]
test eax eax
je rwxdata
mov ecx [ ebp - 0x554 ]
add ecx 0x1
mov [ ebp - 0x554 ] ecx
mov edx [ ebp - 0x2b0 ]
add edx 0x1
mov [ ebp - 0x2b0 ] edx
mov ecx [ ebp - 0x130 ]
mov [ ebp + ecx - 0x530 ] 0x20
mov edx [ ebp - 0x130 ]
add edx 0x1
mov [ ebp - 0x130 ] edx
mov eax [ ebp - 0x130 ]
mov [ ebp + eax - 0x530 ] 0x2f
mov ecx [ ebp - 0x130 ]
add ecx 0x1
mov [ ebp - 0x130 ] ecx
mov [ ebp - 0x290 ] 0x0
jmp rwxdata
mov ecx [ ebp - 0x130 ]
mov edx [ ebp - 0x130 ]
mov al [ ebp + edx - 0x120 ]
mov [ ebp + ecx - 0x530 ] al
jmp rwxdata
mov eax [ ebp - 0x148 ]
movsx ecx [ eax ]
cmp ecx 0x26
je rwxdata
mov ecx [ ebp - 0x130 ]
add ecx 0x1
mov [ ebp - 0x130 ] ecx
mov ecx [ ebp - 0x130 ]
mov [ ebp + ecx - 0x530 ] 0x0
mov edx [ ebp - 0x148 ]
add edx 0x1
mov [ ebp - 0x148 ] edx
mov eax [ ebp - 0x264 ]
push eax
call sub_42ff70
add esp 0x4
mov ecx [ ebp - 0x144 ]
and ecx 0x1
je rwxdata
mov edx [ ebp - 0x290 ]
imul edx edx 0xa
mov eax [ ebp - 0x148 ]
movsx ecx [ eax ]
lea edx [ edx + ecx - 0x30 ]
mov [ ebp - 0x290 ] edx
mov eax [ ebp - 0x130 ]
mov ecx [ ebp - 0x148 ]
mov dl [ ecx ]
mov [ ebp + eax - 0x530 ] dl
mov eax [ ebp - 0x130 ]
add eax 0x1
mov [ ebp - 0x130 ] eax
jmp rwxdata
mov eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x290 ]
jae rwxdata
mov edx [ ebp - 0x144 ]
and edx 0x10
je rwxdata
mov edx [ ebp - 0x148 ]
add edx 0x1
mov [ ebp - 0x148 ] edx
mov eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x290 ]
ja rwxdata
mov ecx [ ebp - 0x264 ]
add ecx 0x30
push ecx
call sub_42ff70
add esp 0x4
lea edx [ ebp - 0x27c ]
push edx
lea eax [ ebp - 0x138 ]
push eax
push 0x0
push 0xf003f
push 0x0
push 0x0
push 0x0
mov ecx [ ebp - 0x264 ]
add ecx 0x30
push ecx
push 0x80000001
call [ ebp - 0x4 ]
mov [ ebp - 0x2b4 ] eax
cmp [ ebp - 0x2b4 ] 0x0
jne rwxdata
lea eax [ ebp - 0x27c ]
push eax
lea ecx [ ebp - 0x138 ]
push ecx
push 0x0
push 0xf003f
push 0x0
push 0x0
push 0x0
mov edx [ ebp - 0x264 ]
push edx
push 0x80000001
call [ ebp - 0x4 ]
mov [ ebp - 0x2b4 ] eax
lea eax [ ebp - 0x27c ]
push eax
lea ecx [ ebp - 0x138 ]
push ecx
push 0x0
push 0xf003f
push 0x0
push 0x0
push 0x0
mov edx [ ebp - 0x264 ]
push edx
push 0x80000002
call [ ebp - 0x4 ]
mov [ ebp - 0x2b4 ] eax
jmp rwxdata
mov ecx [ ebp - 0x18 ]
cmp ecx [ ebp - 0x290 ]
jae rwxdata
mov edx [ ebp - 0x264 ]
add edx 0x70
push edx
call sub_42ff70
add esp 0x4
mov eax [ ebp - 0x264 ]
add eax 0x70
push eax
mov ecx [ ebp - 0x138 ]
push ecx
call [ ebp - 0x298 ]
mov [ ebp - 0x2b4 ] eax
mov edx [ ebp - 0x138 ]
push edx
call [ ebp - 0x534 ]
mov [ ebp - 0x130 ] 0x0
jmp rwxdata
cmp [ ebp - 0x2b4 ] 0x0
jne rwxdata
push 0x0
push 0x80
push 0x1
push 0x0
push 0x1
push 0x40000000
lea eax [ ebp - 0x120 ]
push eax
call [ ebp - 0x418 ]
mov [ ebp - 0x558 ] eax
push 0x0
push 0x80
push 0x2
push 0x0
push 0x1
push 0x40000000
lea edx [ ebp - 0x120 ]
push edx
call [ ebp - 0x418 ]
mov [ ebp - 0x558 ] eax
jmp rwxdata
cmp [ ebp - 0x130 ] 0xa
jae rwxdata
push 0xfb18
mov ecx [ ebp - 0x148 ]
push ecx
call sub_4300a0
add esp 0x8
push 0x0
lea edx [ ebp - 0x550 ]
push edx
push 0xfb18
mov eax [ ebp - 0x148 ]
push eax
mov ecx [ ebp - 0x558 ]
push ecx
call [ ebp - 0x28c ]
mov edx [ ebp - 0x558 ]
push edx
call [ ebp - 0x13c ]
mov eax [ ebp - 0x144 ]
and eax 0x100
je rwxdata
cmp [ ebp - 0x558 ] 0xffffffff
je rwxdata
cmp [ ebp - 0x2b4 ] 0x0
jne rwxdata
lea ecx [ ebp - 0x134 ]
push ecx
lea edx [ ebp - 0x410 ]
push edx
lea eax [ ebp - 0x10 ]
push eax
push 0x0
lea ecx [ ebp - 0x260 ]
push ecx
mov edx [ ebp - 0x138 ]
push edx
call [ ebp - 0x414 ]
mov [ ebp - 0x2b4 ] eax
cmp [ ebp - 0x2b4 ] 0x0
jne rwxdata
mov [ ebp - 0x574 ] 0x44
mov [ ebp - 0x2ac ] 0x0
jmp rwxdata
mov [ ebp - 0x130 ] 0x0
jmp rwxdata
jmp rwxdata
jmp rwxdata
mov [ ebp - 0x300 ] 0x44
mov [ ebp - 0x2d4 ] 0x81
mov eax [ ebp - 0x144 ]
and eax 0x1000
je rwxdata
mov ecx [ ebp - 0x574 ]
sub ecx 0x1
mov [ ebp - 0x574 ] ecx
mov edx [ ebp - 0x574 ]
mov [ ebp + edx - 0x300 ] 0x0
jmp rwxdata
mov ecx [ ebp - 0x2ac ]
movsx edx [ ebp + ecx - 0x530 ]
test edx edx
je rwxdata
mov ecx [ ebp - 0x130 ]
movsx edx [ ebp + ecx - 0x410 ]
cmp edx 0x2f
je rwxdata
mov eax [ ebp - 0x130 ]
add eax 0x1
mov [ ebp - 0x130 ] eax
mov edx 0x5
mov [ ebp - 0x2d0 ] dx
xor ecx ecx
mov [ ebp - 0x2d0 ] cx
jmp rwxdata
cmp [ ebp - 0x574 ] 0x0
je rwxdata
mov eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x290 ]
jae rwxdata
jmp rwxdata
mov edx [ ebp - 0x130 ]
movsx eax [ ebp + edx - 0x410 ]
cmp eax 0x2f
jne rwxdata
mov eax [ ebp - 0x130 ]
movsx ecx [ ebp + eax - 0x410 ]
test ecx ecx
je rwxdata
lea eax [ ebp - 0x278 ]
push eax
lea ecx [ ebp - 0x300 ]
push ecx
push 0x0
push 0x0
push 0x20
push 0x0
push 0x0
push 0x0
lea edx [ ebp - 0x120 ]
push edx
push 0x0
call [ ebp - 0x55c ]
mov edx [ ebp - 0x138 ]
push edx
call [ ebp - 0x534 ]
mov ecx [ ebp - 0x2ac ]
push ecx
lea edx [ ebp - 0x530 ]
push edx
push 0x1
push 0x0
lea eax [ ebp - 0x260 ]
push eax
mov ecx [ ebp - 0x138 ]
push ecx
call [ ebp - 0x268 ]
mov [ ebp - 0x2b4 ] eax
mov eax [ ebp - 0x2ac ]
add eax 0x1
mov [ ebp - 0x2ac ] eax
mov ecx [ ebp - 0x130 ]
add ecx 0x1
mov [ ebp - 0x130 ] ecx
jmp rwxdata
jmp rwxdata
mov eax [ ebp - 0x130 ]
movsx ecx [ ebp + eax - 0x410 ]
test ecx ecx
je rwxdata
mov eax [ ebp - 0x130 ]
add eax 0x1
mov [ ebp - 0x130 ] eax
mov edx [ ebp - 0x18 ]
imul edx edx 0xa
mov eax [ ebp - 0x130 ]
movsx ecx [ ebp + eax - 0x410 ]
lea edx [ edx + ecx - 0x30 ]
mov [ ebp - 0x18 ] edx
jmp rwxdata
mov edx [ ebp - 0x130 ]
add edx 0x1
mov [ ebp - 0x130 ] edx
sub_42f27d
nop
pop [ ebp - 0x12c ]
mov eax [ ebp - 0x12c ]
sub eax 0x24c
mov [ ebp - 0x284 ] eax
mov [ ebp - 0x540 ] 0x0
mov [ ebp - 0x2a8 ] 0x0
mov [ ebp - 0x420 ] 0x0
mov [ ebp - 0x144 ] 0x0
mov ecx [ ebp - 0x284 ]
mov edx [ ecx ]
mov [ ebp - 0x420 ] edx
mov eax [ ebp - 0x284 ]
add eax 0x4
mov [ ebp - 0x140 ] eax
mov ecx [ ebp - 0x140 ]
push ecx
call sub_42ff70
add esp 0x4
call sub_430130
mov [ ebp - 0x54c ] eax
mov edx [ ebp - 0x140 ]
push edx
mov eax [ ebp - 0x54c ]
push eax
call sub_430160
add esp 0x8
mov [ ebp - 0x540 ] eax
mov ecx [ ebp - 0x284 ]
mov edx [ ecx + 0x1c ]
mov [ ebp - 0x144 ] edx
mov [ ebp - 0x548 ] 0x0
mov [ ebp - 0x53c ] 0x0
mov eax [ ebp - 0x284 ]
add eax 0xa0
mov [ ebp - 0x2a4 ] eax
mov ecx [ ebp - 0x284 ]
add ecx 0x1f0
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x284 ]
add edx 0xd0
mov [ ebp - 0x128 ] edx
mov [ ebp - 0x124 ] 0x0
mov [ ebp - 0x150 ] 0x0
mov eax [ ebp - 0x12c ]
sub eax 0x1
mov [ ebp - 0x12c ] eax
mov ecx [ ebp - 0x12c ]
mov edx [ ecx ]
mov [ ebp - 0x154 ] edx
jmp rwxdata
mov [ ebp - 0x2a0 ] 0x0
mov [ ebp - 0x41c ] 0x0
mov [ ebp - 0x418 ] 0x0
mov [ ebp - 0x13c ] 0x0
mov [ ebp - 0x14c ] 0x0
mov [ ebp - 0x29c ] 0x0
mov [ ebp - 0x538 ] 0x0
mov [ ebp - 0x544 ] 0x0
mov [ ebp - 0x280 ] 0x0
mov [ ebp - 0x28c ] 0x0
mov [ ebp - 0x55c ] 0x0
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x534 ] 0x0
mov [ ebp - 0x268 ] 0x0
mov [ ebp - 0x414 ] 0x0
mov [ ebp - 0x298 ] 0x0
mov edx [ ebp - 0x284 ]
add edx 0x1f0
mov [ ebp - 0x124 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax ]
mov [ ebp - 0x2a0 ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x4 ]
mov [ ebp - 0x41c ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x8 ]
mov [ ebp - 0x418 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0xc ]
mov [ ebp - 0x13c ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x10 ]
mov [ ebp - 0x14c ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x14 ]
mov [ ebp - 0x29c ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0x18 ]
mov [ ebp - 0x538 ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x1c ]
mov [ ebp - 0x544 ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x20 ]
mov [ ebp - 0x280 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0x24 ]
mov [ ebp - 0x28c ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x28 ]
mov [ ebp - 0x55c ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x2c ]
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0x30 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x34 ]
mov [ ebp - 0x534 ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x38 ]
mov [ ebp - 0x268 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0x3c ]
mov [ ebp - 0x414 ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x40 ]
mov [ ebp - 0x298 ] eax
mov [ ebp - 0x264 ] 0x0
mov ecx [ ebp - 0x284 ]
add ecx 0x20
mov [ ebp - 0x264 ] ecx
mov [ ebp - 0x2b4 ] 0x0
mov [ ebp - 0x18 ] 0x0
push 0x103
lea edx [ ebp - 0x120 ]
push edx
push 0x0
call [ ebp - 0x41c ]
push 0x0
push 0x0
push 0x3
push 0x0
push 0x1
push 0x80000000
lea eax [ ebp - 0x120 ]
push eax
call [ ebp - 0x418 ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0xffffffff
je rwxdata
mov eax [ ebp - 0x548 ]
push eax
call [ ebp - 0x540 ]
mov [ ebp - 0x150 ] eax
cmp [ ebp - 0x150 ] 0x0
jne rwxdata
cmp [ ebp - 0x154 ] 0x652a5e26
je rwxdata
call [ ebp - 0x420 ]
xor eax eax
mov esp ebp
pop ebp
retn
push 0x0
mov ecx [ ebp - 0xc ]
push ecx
call [ ebp - 0x14c ]
mov [ ebp - 0x288 ] eax
cmp [ ebp - 0x288 ] 0xc800000
ja rwxdata
mov ecx [ ebp - 0x128 ]
mov [ ebp - 0x53c ] ecx
mov edx [ ebp - 0x53c ]
movsx eax [ edx ]
test eax eax
je rwxdata
jmp rwxdata
mov ecx [ ebp - 0xc ]
push ecx
call [ ebp - 0x13c ]
push 0x4
push 0x1000
mov edx [ ebp - 0x288 ]
push edx
push 0x0
call [ ebp - 0x29c ]
mov [ ebp - 0x294 ] eax
cmp [ ebp - 0x294 ] 0x0
je rwxdata
mov edx [ ebp - 0x128 ]
add edx 0x5
mov [ ebp - 0x128 ] edx
mov eax [ ebp - 0x548 ]
mov [ ebp - 0x570 ] eax
mov [ ebp - 0x56c ] 0x0
mov ecx [ ebp - 0x53c ]
push ecx
mov edx [ ebp - 0x150 ]
push edx
call sub_430160
add esp 0x8
mov [ ebp - 0x124 ] eax
mov [ ebp - 0x560 ] 0x4
push 0x0
lea eax [ ebp - 0x550 ]
push eax
mov ecx [ ebp - 0x288 ]
push ecx
mov edx [ ebp - 0x294 ]
push edx
mov eax [ ebp - 0xc ]
push eax
call [ ebp - 0x544 ]
mov ecx [ ebp - 0x550 ]
mov edx [ ebp - 0x294 ]
lea eax [ edx + ecx - 0x3 ]
mov [ ebp - 0x148 ] eax
jmp rwxdata
mov edx [ ebp - 0x56c ]
mov eax [ ebp - 0x2a4 ]
lea ecx [ eax + edx + 0x1 ]
mov [ ebp - 0x2a4 ] ecx
jmp rwxdata
mov ecx [ ebp - 0x570 ]
movsx edx [ ecx ]
mov eax [ ebp - 0x570 ]
add eax 0x1
mov [ ebp - 0x570 ] eax
test edx edx
je rwxdata
mov edx [ ebp - 0x14 ]
add edx 0x4
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0x53c ]
mov [ ebp - 0x568 ] eax
mov [ ebp - 0x564 ] 0x0
mov edx [ ebp - 0x14 ]
add edx [ ebp - 0x560 ]
mov eax [ ebp - 0x560 ]
mov cl [ ebp + eax - 0x124 ]
mov [ edx ] cl
jmp rwxdata
mov edx [ ebp - 0x148 ]
cmp edx [ ebp - 0x294 ]
jbe rwxdata
mov eax [ ebp - 0x2a4 ]
mov [ ebp - 0x548 ] eax
mov ecx [ ebp - 0x548 ]
movsx edx [ ecx ]
test edx edx
je rwxdata
mov ecx [ ebp - 0x56c ]
add ecx 0x1
mov [ ebp - 0x56c ] ecx
jmp rwxdata
mov edx [ ebp - 0x564 ]
mov eax [ ebp - 0x128 ]
lea ecx [ eax + edx + 0x1 ]
mov [ ebp - 0x128 ] ecx
jmp rwxdata
mov ecx [ ebp - 0x568 ]
movsx edx [ ecx ]
mov eax [ ebp - 0x568 ]
add eax 0x1
mov [ ebp - 0x568 ] eax
test edx edx
je rwxdata
mov eax [ ebp - 0x560 ]
mov ecx [ ebp - 0x560 ]
sub ecx 0x1
mov [ ebp - 0x560 ] ecx
test eax eax
je rwxdata
mov eax [ ebp - 0x148 ]
cmp eax [ ebp - 0x294 ]
jbe rwxdata
mov eax [ ebp - 0x148 ]
movsx ecx [ eax ]
cmp ecx 0x36
jne rwxdata
cmp [ ebp - 0x570 ] 0x0
je rwxdata
mov ecx [ ebp - 0x564 ]
add ecx 0x1
mov [ ebp - 0x564 ] ecx
jmp rwxdata
push 0x8000
push 0x0
mov eax [ ebp - 0x294 ]
push eax
call [ ebp - 0x538 ]
mov ecx [ ebp - 0x148 ]
add ecx 0x4
mov [ ebp - 0x148 ] ecx
mov [ ebp - 0x130 ] 0x0
jmp rwxdata
jmp rwxdata
mov edx [ ebp - 0x148 ]
movsx eax [ edx + 0x1 ]
cmp eax 0x2a
jne rwxdata
cmp [ ebp - 0x568 ] 0x0
je rwxdata
mov ecx [ ebp - 0x148 ]
movsx edx [ ecx ]
cmp edx 0x3a
je rwxdata
mov ecx [ ebp - 0x148 ]
sub ecx 0x1
mov [ ebp - 0x148 ] ecx
mov ecx [ ebp - 0x148 ]
movsx edx [ ecx + 0x2 ]
cmp edx 0x23
jne rwxdata
mov edx [ ebp - 0x130 ]
sub edx 0x1
mov [ ebp - 0x554 ] edx
jmp rwxdata
mov eax [ ebp - 0x130 ]
mov ecx [ ebp - 0x148 ]
mov dl [ ecx ]
mov [ ebp + eax - 0x120 ] dl
mov eax [ ebp - 0x148 ]
movsx ecx [ eax ]
cmp ecx 0x2e
jne rwxdata
jmp rwxdata
mov ecx [ ebp - 0x554 ]
movsx edx [ ebp + ecx - 0x120 ]
cmp edx 0x2e
je rwxdata
jmp rwxdata
mov [ ebp - 0x554 ] 0x0
jmp rwxdata
mov [ ebp - 0x2b0 ] 0x0
mov eax [ ebp - 0x554 ]
add eax 0x1
mov [ ebp - 0x554 ] eax
jmp rwxdata
jmp rwxdata
mov edx [ ebp - 0x130 ]
add edx 0x1
mov [ ebp - 0x130 ] edx
mov eax [ ebp - 0x148 ]
add eax 0x1
mov [ ebp - 0x148 ] eax
mov eax [ ebp - 0x554 ]
cmp eax [ ebp - 0x130 ]
jae rwxdata
mov eax [ ebp - 0x554 ]
cmp eax [ ebp - 0x130 ]
jae rwxdata
mov eax [ ebp - 0x554 ]
sub eax 0x1
mov [ ebp - 0x554 ] eax
mov ecx [ ebp - 0x554 ]
mov [ ebp + ecx - 0x260 ] 0x0
lea edx [ ebp - 0x260 ]
push edx
call sub_42ff70
add esp 0x4
push 0x104
lea eax [ ebp - 0x260 ]
push eax
call [ ebp - 0x8 ]
push 0x0
lea ecx [ ebp - 0x260 ]
push ecx
call [ ebp - 0x280 ]
mov ecx [ ebp - 0x554 ]
mov edx [ ebp - 0x554 ]
mov al [ ebp + edx - 0x120 ]
mov [ ebp + ecx - 0x260 ] al
jmp rwxdata
mov ecx [ ebp - 0x2b0 ]
mov [ ebp + ecx - 0x260 ] 0x0
mov edx [ ebp - 0x130 ]
mov [ ebp + edx - 0x120 ] 0x0
lea eax [ ebp - 0x120 ]
push eax
call sub_42ff70
add esp 0x4
lea ecx [ ebp - 0x260 ]
push ecx
call sub_42ff70
add esp 0x4
push 0x104
lea edx [ ebp - 0x120 ]
push edx
call [ ebp - 0x8 ]
mov eax [ ebp - 0x148 ]
add eax 0x1
mov [ ebp - 0x148 ] eax
mov [ ebp - 0x130 ] 0x0
jmp rwxdata
mov ecx [ ebp - 0x2b0 ]
mov edx [ ebp - 0x554 ]
mov al [ ebp + edx - 0x120 ]
mov [ ebp + ecx - 0x260 ] al
jmp rwxdata
mov edx [ ebp - 0x554 ]
add edx 0x1
mov [ ebp - 0x554 ] edx
mov edx [ ebp - 0x130 ]
movsx eax [ ebp + edx - 0x120 ]
test eax eax
je rwxdata
mov ecx [ ebp - 0x554 ]
add ecx 0x1
mov [ ebp - 0x554 ] ecx
mov edx [ ebp - 0x2b0 ]
add edx 0x1
mov [ ebp - 0x2b0 ] edx
mov ecx [ ebp - 0x130 ]
mov [ ebp + ecx - 0x530 ] 0x20
mov edx [ ebp - 0x130 ]
add edx 0x1
mov [ ebp - 0x130 ] edx
mov eax [ ebp - 0x130 ]
mov [ ebp + eax - 0x530 ] 0x2f
mov ecx [ ebp - 0x130 ]
add ecx 0x1
mov [ ebp - 0x130 ] ecx
mov [ ebp - 0x290 ] 0x0
jmp rwxdata
mov ecx [ ebp - 0x130 ]
mov edx [ ebp - 0x130 ]
mov al [ ebp + edx - 0x120 ]
mov [ ebp + ecx - 0x530 ] al
jmp rwxdata
mov eax [ ebp - 0x148 ]
movsx ecx [ eax ]
cmp ecx 0x26
je rwxdata
mov ecx [ ebp - 0x130 ]
add ecx 0x1
mov [ ebp - 0x130 ] ecx
mov ecx [ ebp - 0x130 ]
mov [ ebp + ecx - 0x530 ] 0x0
mov edx [ ebp - 0x148 ]
add edx 0x1
mov [ ebp - 0x148 ] edx
mov eax [ ebp - 0x264 ]
push eax
call sub_42ff70
add esp 0x4
mov ecx [ ebp - 0x144 ]
and ecx 0x1
je rwxdata
mov edx [ ebp - 0x290 ]
imul edx edx 0xa
mov eax [ ebp - 0x148 ]
movsx ecx [ eax ]
lea edx [ edx + ecx - 0x30 ]
mov [ ebp - 0x290 ] edx
mov eax [ ebp - 0x130 ]
mov ecx [ ebp - 0x148 ]
mov dl [ ecx ]
mov [ ebp + eax - 0x530 ] dl
mov eax [ ebp - 0x130 ]
add eax 0x1
mov [ ebp - 0x130 ] eax
jmp rwxdata
mov eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x290 ]
jae rwxdata
mov edx [ ebp - 0x144 ]
and edx 0x10
je rwxdata
mov edx [ ebp - 0x148 ]
add edx 0x1
mov [ ebp - 0x148 ] edx
mov eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x290 ]
ja rwxdata
mov ecx [ ebp - 0x264 ]
add ecx 0x30
push ecx
call sub_42ff70
add esp 0x4
lea edx [ ebp - 0x27c ]
push edx
lea eax [ ebp - 0x138 ]
push eax
push 0x0
push 0xf003f
push 0x0
push 0x0
push 0x0
mov ecx [ ebp - 0x264 ]
add ecx 0x30
push ecx
push 0x80000001
call [ ebp - 0x4 ]
mov [ ebp - 0x2b4 ] eax
cmp [ ebp - 0x2b4 ] 0x0
jne rwxdata
lea eax [ ebp - 0x27c ]
push eax
lea ecx [ ebp - 0x138 ]
push ecx
push 0x0
push 0xf003f
push 0x0
push 0x0
push 0x0
mov edx [ ebp - 0x264 ]
push edx
push 0x80000001
call [ ebp - 0x4 ]
mov [ ebp - 0x2b4 ] eax
lea eax [ ebp - 0x27c ]
push eax
lea ecx [ ebp - 0x138 ]
push ecx
push 0x0
push 0xf003f
push 0x0
push 0x0
push 0x0
mov edx [ ebp - 0x264 ]
push edx
push 0x80000002
call [ ebp - 0x4 ]
mov [ ebp - 0x2b4 ] eax
jmp rwxdata
mov ecx [ ebp - 0x18 ]
cmp ecx [ ebp - 0x290 ]
jae rwxdata
mov edx [ ebp - 0x264 ]
add edx 0x70
push edx
call sub_42ff70
add esp 0x4
mov eax [ ebp - 0x264 ]
add eax 0x70
push eax
mov ecx [ ebp - 0x138 ]
push ecx
call [ ebp - 0x298 ]
mov [ ebp - 0x2b4 ] eax
mov edx [ ebp - 0x138 ]
push edx
call [ ebp - 0x534 ]
mov [ ebp - 0x130 ] 0x0
jmp rwxdata
cmp [ ebp - 0x2b4 ] 0x0
jne rwxdata
push 0x0
push 0x80
push 0x1
push 0x0
push 0x1
push 0x40000000
lea eax [ ebp - 0x120 ]
push eax
call [ ebp - 0x418 ]
mov [ ebp - 0x558 ] eax
push 0x0
push 0x80
push 0x2
push 0x0
push 0x1
push 0x40000000
lea edx [ ebp - 0x120 ]
push edx
call [ ebp - 0x418 ]
mov [ ebp - 0x558 ] eax
jmp rwxdata
cmp [ ebp - 0x130 ] 0xa
jae rwxdata
push 0xfb18
mov ecx [ ebp - 0x148 ]
push ecx
call sub_4300a0
add esp 0x8
push 0x0
lea edx [ ebp - 0x550 ]
push edx
push 0xfb18
mov eax [ ebp - 0x148 ]
push eax
mov ecx [ ebp - 0x558 ]
push ecx
call [ ebp - 0x28c ]
mov edx [ ebp - 0x558 ]
push edx
call [ ebp - 0x13c ]
mov eax [ ebp - 0x144 ]
and eax 0x100
je rwxdata
cmp [ ebp - 0x558 ] 0xffffffff
je rwxdata
cmp [ ebp - 0x2b4 ] 0x0
jne rwxdata
lea ecx [ ebp - 0x134 ]
push ecx
lea edx [ ebp - 0x410 ]
push edx
lea eax [ ebp - 0x10 ]
push eax
push 0x0
lea ecx [ ebp - 0x260 ]
push ecx
mov edx [ ebp - 0x138 ]
push edx
call [ ebp - 0x414 ]
mov [ ebp - 0x2b4 ] eax
cmp [ ebp - 0x2b4 ] 0x0
jne rwxdata
mov [ ebp - 0x574 ] 0x44
mov [ ebp - 0x2ac ] 0x0
jmp rwxdata
mov [ ebp - 0x130 ] 0x0
jmp rwxdata
jmp rwxdata
jmp rwxdata
mov [ ebp - 0x300 ] 0x44
mov [ ebp - 0x2d4 ] 0x81
mov eax [ ebp - 0x144 ]
and eax 0x1000
je rwxdata
mov ecx [ ebp - 0x574 ]
sub ecx 0x1
mov [ ebp - 0x574 ] ecx
mov edx [ ebp - 0x574 ]
mov [ ebp + edx - 0x300 ] 0x0
jmp rwxdata
mov ecx [ ebp - 0x2ac ]
movsx edx [ ebp + ecx - 0x530 ]
test edx edx
je rwxdata
mov ecx [ ebp - 0x130 ]
movsx edx [ ebp + ecx - 0x410 ]
cmp edx 0x2f
je rwxdata
mov eax [ ebp - 0x130 ]
add eax 0x1
mov [ ebp - 0x130 ] eax
mov edx 0x5
mov [ ebp - 0x2d0 ] dx
xor ecx ecx
mov [ ebp - 0x2d0 ] cx
jmp rwxdata
cmp [ ebp - 0x574 ] 0x0
je rwxdata
mov eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x290 ]
jae rwxdata
jmp rwxdata
mov edx [ ebp - 0x130 ]
movsx eax [ ebp + edx - 0x410 ]
cmp eax 0x2f
jne rwxdata
mov eax [ ebp - 0x130 ]
movsx ecx [ ebp + eax - 0x410 ]
test ecx ecx
je rwxdata
lea eax [ ebp - 0x278 ]
push eax
lea ecx [ ebp - 0x300 ]
push ecx
push 0x0
push 0x0
push 0x20
push 0x0
push 0x0
push 0x0
lea edx [ ebp - 0x120 ]
push edx
push 0x0
call [ ebp - 0x55c ]
mov edx [ ebp - 0x138 ]
push edx
call [ ebp - 0x534 ]
mov ecx [ ebp - 0x2ac ]
push ecx
lea edx [ ebp - 0x530 ]
push edx
push 0x1
push 0x0
lea eax [ ebp - 0x260 ]
push eax
mov ecx [ ebp - 0x138 ]
push ecx
call [ ebp - 0x268 ]
mov [ ebp - 0x2b4 ] eax
mov eax [ ebp - 0x2ac ]
add eax 0x1
mov [ ebp - 0x2ac ] eax
mov ecx [ ebp - 0x130 ]
add ecx 0x1
mov [ ebp - 0x130 ] ecx
jmp rwxdata
jmp rwxdata
mov eax [ ebp - 0x130 ]
movsx ecx [ ebp + eax - 0x410 ]
test ecx ecx
je rwxdata
mov eax [ ebp - 0x130 ]
add eax 0x1
mov [ ebp - 0x130 ] eax
mov edx [ ebp - 0x18 ]
imul edx edx 0xa
mov eax [ ebp - 0x130 ]
movsx ecx [ ebp + eax - 0x410 ]
lea edx [ edx + ecx - 0x30 ]
mov [ ebp - 0x18 ] edx
jmp rwxdata
mov edx [ ebp - 0x130 ]
add edx 0x1
mov [ ebp - 0x130 ] edx
sub_42ff70
push ebp
mov ebp esp
sub esp 0x24
mov [ ebp - 0x14 ] 0x1
mov [ ebp - 0x13 ] 0x1
mov [ ebp - 0x12 ] 0x2
mov [ ebp - 0x11 ] 0x10
mov [ ebp - 0x10 ] 0x4
mov [ ebp - 0xf ] 0x4
mov [ ebp - 0xe ] 0x8
mov [ ebp - 0xd ] 0x8
mov [ ebp - 0xc ] 0x10
mov [ ebp - 0xb ] 0x2
mov [ ebp - 0xa ] 0x20
mov [ ebp - 0x9 ] 0x40
mov [ ebp - 0x8 ] 0x40
mov [ ebp - 0x7 ] 0x20
mov [ ebp - 0x6 ] 0x80
mov [ ebp - 0x5 ] 0x80
mov [ ebp - 0x4 ] 0x0
jmp rwxdata
mov ecx [ ebp + 0x8 ]
add ecx [ ebp - 0x4 ]
movsx edx [ ecx ]
test edx edx
je rwxdata
mov [ ebp - 0x1c ] 0x0
jmp rwxdata
jmp rwxdata
mov ecx [ ebp - 0x1c ]
cmp ecx [ ebp - 0x4 ]
jge rwxdata
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x4 ]
sub ecx 0x1
mov [ ebp - 0x4 ] ecx
jmp rwxdata
mov [ ebp - 0x15 ] 0x0
mov [ ebp - 0x20 ] 0x0
jmp rwxdata
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x4 ]
movsx ecx [ eax ]
cmp ecx 0x20
jne rwxdata
cmp [ ebp - 0x20 ] 0x8
jge rwxdata
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x4 ]
mov [ edx + 0x1 ] 0x0
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x4 ] 0x0
jle rwxdata
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x1c ]
mov al [ ebp - 0x15 ]
mov [ edx ] al
jmp rwxdata
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x1c ]
movsx ecx [ eax ]
mov edx [ ebp - 0x20 ]
movzx eax [ ebp + edx * 2 - 0x14 ]
and ecx eax
je rwxdata
jmp rwxdata
mov eax [ ebp - 0x1c ]
add eax 0x1
mov [ ebp - 0x1c ] eax
movzx ecx [ ebp - 0x15 ]
mov edx [ ebp - 0x20 ]
movzx eax [ ebp + edx * 2 - 0x13 ]
not eax
and ecx eax
mov [ ebp - 0x24 ] ecx
movzx ecx [ ebp - 0x15 ]
mov edx [ ebp - 0x20 ]
movzx eax [ ebp + edx * 2 - 0x13 ]
or ecx eax
mov [ ebp - 0x24 ] ecx
jmp rwxdata
mov edx [ ebp - 0x4 ]
sub edx 0x1
mov [ ebp - 0x4 ] edx
mov edx [ ebp - 0x20 ]
add edx 0x1
mov [ ebp - 0x20 ] edx
mov cl [ ebp - 0x24 ]
mov [ ebp - 0x15 ] cl
jmp rwxdata
sub_4300a0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x4 ] 0x0
jmp rwxdata
mov ecx [ ebp - 0x4 ]
cmp ecx [ ebp + 0xc ]
jge rwxdata
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x4 ]
movzx eax [ edx ]
cmp eax 0x64
jne rwxdata
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x4 ]
movzx eax [ edx ]
xor eax 0x80be78ab
mov ecx [ ebp + 0x8 ]
add ecx [ ebp - 0x4 ]
mov [ ecx ] al
jmp rwxdata
mov ecx [ ebp + 0x8 ]
add ecx [ ebp - 0x4 ]
movzx edx [ ecx + 0x1 ]
cmp edx 0x7d
jne rwxdata
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x4 ]
movzx ecx [ eax + 0x2 ]
cmp ecx 0x77
jne rwxdata
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x4 ]
movzx eax [ edx + 0x6 ]
cmp eax 0x61
jne rwxdata
mov ecx [ ebp - 0x4 ]
add ecx 0x3e4
mov [ ebp - 0x4 ] ecx
sub_430130
push ebp
mov ebp esp
push ecx
mov eax [ fs : 0x30 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0xc ]
mov eax [ eax ]
mov eax [ eax ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_430160
push ebp
mov ebp esp
sub esp 0x30
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x10 ]
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x10 ]
add eax [ edx + 0x3c ]
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x10 ]
add edx [ ecx + 0x78 ]
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] 0x0
jmp rwxdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
cmp edx [ ecx + 0x18 ]
jae rwxdata
xor eax eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x20 ]
add ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov eax [ ecx + edx * 4 ]
add eax [ ebp - 0x10 ]
mov [ ebp - 0x18 ] eax
mov ecx [ ebp - 0x18 ]
mov [ ebp - 0x20 ] ecx
mov edx [ ebp + 0xc ]
mov [ ebp - 0x24 ] edx
sbb eax eax
sbb eax 0xffffffff
mov [ ebp - 0x2c ] eax
cmp [ ebp - 0x25 ] 0x0
je rwxdata
jmp rwxdata
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x24 ]
add eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x8 ]
mov dx [ eax + ecx * 2 ]
mov [ ebp - 0x1c ] dx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x1c ]
add ecx [ ebp - 0x10 ]
movzx edx [ ebp - 0x1c ]
mov eax [ ecx + edx * 4 ]
add eax [ ebp - 0x10 ]
jmp rwxdata
mov [ ebp - 0x2c ] 0x0
jmp rwxdata
mov eax [ ebp - 0x24 ]
mov cl [ eax + 0x1 ]
mov [ ebp - 0x26 ] cl
mov edx [ ebp - 0x20 ]
cmp cl [ edx + 0x1 ]
jne rwxdata
mov eax [ ebp - 0x8 ]
add eax 0x1
mov [ ebp - 0x8 ] eax
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x2c ]
mov [ ebp - 0x30 ] ecx
cmp [ ebp - 0x30 ] 0x0
jne rwxdata
add [ ebp - 0x24 ] 0x2
add [ ebp - 0x20 ] 0x2
cmp [ ebp - 0x26 ] 0x0
jne rwxdata
mov eax [ ebp - 0x24 ]
mov cl [ eax ]
mov [ ebp - 0x25 ] cl
mov edx [ ebp - 0x20 ]
cmp cl [ edx ]
jne rwxdata
sub_4011c4
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov ecx [ ecx ]
mov [ ebp - 0x28 ] ecx
push eax
push ecx
call _XcptFilter
pop ecx
pop ecx
retn
sub_401210
xor eax eax
inc eax
retn
sub_401214
mov esp [ ebp - 0x18 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov eax 0xff
call sub_401621
retn
sub_40130a
call sub_401688
jmp sub_40104b
sub_401356
push sub_401314
call [ SetUnhandledExceptionFilter@IAT ]
xor eax eax
retn
_amsg_exit
jmp [ _amsg_exit@IAT ]
sub_401406
push 0x8
call _unlock
pop ecx
retn
sub_40140f
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_40136a
neg eax
sbb eax eax
neg eax
pop ecx
dec eax
pop ebp
retn
_XcptFilter
jmp [ _XcptFilter@IAT ]
sub_40159b
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov eax [ ecx ]
xor edx edx
cmp eax 0xc0000005
sete dl
mov eax edx
retn
_initterm
jmp [ _initterm@IAT ]
_initterm_e
jmp [ _initterm_e@IAT ]
sub_401621
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
push ecx
retn
sub_401685
xor eax eax
retn
?terminate@@YAXXZ
jmp [ terminate@IAT ]
_unlock
jmp [ _unlock@IAT ]
__dllonexit
jmp [ __dllonexit@IAT ]
_lock
jmp [ _lock@IAT ]
_except_handler4_common
jmp [ _except_handler4_common@IAT ]
_invoke_watson
jmp [ _invoke_watson@IAT ]
_controlfp_s
jmp [ _controlfp_s@IAT ]
_crt_debugger_hook
jmp [ _crt_debugger_hook@IAT ]
sub_401890
mov eax ecx
xor ecx ecx
mov [ eax ] ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] ecx
mov [ eax + 0x14 ] ecx
retn
sub_4018f5
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov eax [ ecx ]
xor edx edx
cmp eax 0xc0000017
sete dl
mov eax edx
retn
sub_401a00
mov eax [ ecx ]
test eax eax
je r-xdata
retn
push eax
call sub_41978e
sub_401fb0
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
push eax
push ecx
call [ LoadCursorW@IAT ]
pop ebp
retn
sub_401fd0
mov eax [ ecx + 0x4 ]
push eax
call ??_V@YAXPAX@Z
pop ecx
retn
sub_401fe0
mov ecx [ ecx ]
test ecx ecx
je r-xdata
retn
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
sub_401ff0
mov eax [ ecx ]
push eax
call GdipDeleteStringFormat
retn
sub_4021e0
add ecx 0xc
jmp [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
sub_402630
push esi
mov esi ecx
mov eax [ esi ]
push eax
call [ EnterCriticalSection@IAT ]
mov [ esi + 0x4 ] 0x1
xor eax eax
pop esi
retn
sub_4026c0
retn
sub_4029ee
mov [ ebp - 0x4 ] 0xffffffff
mov eax r-xdata
retn
sub_402a40
push esi
mov esi ecx
mov eax [ esi ]
test eax eax
je r-xdata
pop esi
retn
push eax
call [ DeleteObject@IAT ]
test eax eax
je r-xdata
mov [ esi ] 0x0
sub_402f40
cmp [ ecx + 0x18 ] 0x0
je r-xdata
retn
push ecx
mov [ ecx + 0x18 ] 0x0
call [ DeleteCriticalSection@IAT ]
sub_402fa0
add ecx 0x8
push ecx
call [ InterlockedIncrement@IAT ]
retn
sub_402fb0
add ecx 0x8
push ecx
call [ InterlockedDecrement@IAT ]
retn
sub_402fc0
mov eax [ ecx + 0x8 ]
retn
sub_403090
mov eax 0x80004005
retn 0x10
sub_4032b0
mov eax [ ecx + 0x8 ]
push eax
call [ CoTaskMemFree@IAT ]
retn
sub_4035b2
add [ ecx ] eax
add [ ecx ] al
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ eax ] eax
int3
sub_40372e
add [ ecx ] eax
add [ ecx ] al
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ eax ] eax
int3
sub_403c30
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ecx + 0xc ]
push r--data
push r--data
push eax
call edx
pop ebp
retn 0x4
sub_403c90
push esi
mov esi ecx
mov eax [ esi ]
push eax
call ??_V@YAXPAX@Z
add esp 0x4
mov [ esi ] 0x0
pop esi
retn
sub_403cb0
lea eax [ ecx + 0x4 ]
cmp [ ecx ] eax
je r-xdata
retn
jmp sub_4038c0
sub_403ef0
mov eax 0x80004001
retn 0xc
sub_403f00
mov eax 0x1
retn 0x4
sub_403f10
xor eax eax
retn 0x4
sub_404944
mov [ ebp - 0x4 ] 0xffffffff
mov eax r-xdata
retn
sub_4049a4
mov [ ebp - 0x4 ] 0x2
mov eax r-xdata
retn
sub_404c51
mov [ ebp - 0x4 ] 0x4
mov eax r-xdata
retn
sub_404dd7
mov [ ebp - 0x4 ] 0x0
mov eax r-xdata
retn
sub_40633d
mov [ ebp - 0x4 ] 0x1
mov eax r-xdata
retn
sub_406db0
push ebp
mov ebp esp
pop ebp
jmp sub_4065e0
sub_406dc0
push ebp
mov ebp esp
pop ebp
jmp sub_406860
sub_407cd0
mov eax 0x80004001
retn 0x8
sub_407ce0
mov eax 0x80004001
retn 0x10
sub_407cf0
mov eax 0x80004001
retn 0x18
sub_407d00
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
inc [ eax + 0x8 ]
mov eax [ eax + 0x8 ]
pop ebp
retn 0x4
sub_407d40
cmp [ ecx + 0x1c ] 0x1
jg r-xdata
retn
mov eax [ ecx + 0x4 ]
mov edx [ eax + 0xc ]
mov eax [ edx + ecx + 0x4 ]
lea ecx [ edx + ecx + 0x4 ]
mov edx [ eax + 0x4 ]
jmp edx
sub_407f90
sub ecx [ ecx - 0x4 ]
jmp sub_417b00
sub_407fa0
sub ecx [ ecx - 0x4 ]
jmp sub_4189b0
sub_407fb0
sub ecx [ ecx - 0x4 ]
jmp sub_418c90
sub_407fc0
sub ecx [ ecx - 0x4 ]
jmp sub_4081f0
sub_407fd0
sub ecx [ ecx - 0x4 ]
jmp sub_417780
sub_408080
sub ecx [ ecx - 0x4 ]
jmp sub_418d40
sub_4080a0
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
push eax
push ecx
push r--data
push edx
call sub_407be0
pop ebp
retn 0xc
sub_4083a0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
lea ecx [ eax + 0x40 ]
lea edx [ eax + 0x1c ]
mov eax [ eax + 0x18 ]
push ecx
push edx
call eax
add esp 0x8
pop ebp
retn
sub_408590
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
xor eax eax
pop ebp
retn
sub_408975
mov esi [ ebp - 0x18 ]
mov edi [ ebp - 0x14 ]
cmp edi [ esi + 0x1c ]
jae r-xdata
push 0x0
push 0x0
call _CxxThrowException
mov ecx esi
call sub_408340
cmp edi [ esi + 0x1c ]
jb r-xdata
sub_408a14
mov esi [ ebp - 0x18 ]
mov edi [ ebp - 0x14 ]
cmp edi [ esi + 0x1c ]
jae r-xdata
push 0x0
push 0x0
call _CxxThrowException
nop
mov ecx esi
call sub_405920
cmp edi [ esi + 0x1c ]
jb r-xdata
sub_408a40
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov ecx [ eax + 0x28 ]
push eax
call [ sigc::trackable::remove_destroy_notify_callback@IAT ]
xor eax eax
pop ebp
retn
sub_408b40
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
lea ecx [ eax + 0x18 ]
call sub_408760
xor eax eax
pop ebp
retn
sub_408c15
mov ecx [ ebp - 0x14 ]
call sub_405ce0
xor eax eax
push eax
push eax
call _CxxThrowException
sub_409010
sub ecx [ ecx - 0x4 ]
sub ecx 0xc
jmp sub_417780
sub_409020
sub ecx [ ecx - 0x4 ]
jmp sub_409210
sub_409030
sub ecx [ ecx - 0x4 ]
sub ecx 0xc
jmp sub_417b00
sub_409040
sub ecx [ ecx - 0x4 ]
sub ecx 0xc
jmp sub_4189b0
sub_409050
sub ecx [ ecx - 0x4 ]
sub ecx 0xc
jmp sub_418c90
sub_4090c0
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
push eax
push ecx
call sub_408fb0
add esp 0x8
pop ebp
retn 0x8
sub_409173
mov ecx [ ebp - 0x18 ]
push ecx
call ??3@YAXPAX@Z
add esp 0x4
push 0x0
push 0x0
call _CxxThrowException
sub_409e80
push esi
mov esi ecx
cmp [ esi + 0x90 ] 0x0
je r-xdata
pop esi
retn
mov eax [ esi + 0x4 ]
push 0x26
push eax
call [ KillTimer@IAT ]
mov [ esi + 0x90 ] 0x0
sub_40a862
mov eax [ ebp - 0x18 ]
push eax
call ??3@YAXPAX@Z
add esp 0x4
push 0x0
push 0x0
call _CxxThrowException
sub_40a908
mov edx [ ebp - 0x14 ]
push edx
call ??3@YAXPAX@Z
add esp 0x4
push 0x0
push 0x0
call _CxxThrowException
sub_40adf0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov edx [ ecx ]
mov ecx [ eax + 0x24 ]
add ecx [ eax + 0x1c ]
mov eax [ eax + 0x18 ]
push edx
call eax
pop ebp
retn
sub_40af20
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x28 ]
mov edx [ eax + 0x18 ]
push ecx
mov ecx [ eax + 0x24 ]
add ecx [ eax + 0x1c ]
call edx
pop ebp
retn
sub_40b530
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov ecx [ eax + 0x20 ]
push eax
call [ sigc::trackable::remove_destroy_notify_callback@IAT ]
xor eax eax
pop ebp
retn
sub_40b950
retn 0x4
sub_40ba80
mov eax sub_40b960
retn
sub_40c410
push 0x0
call [ PostQuitMessage@IAT ]
retn
sub_40c480
mov eax [ ecx ]
push eax
call ??3@YAXPAX@Z
pop ecx
retn
sub_40c8a1
mov edx [ ebp - 0x14 ]
push edx
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp - 0x1c ]
add ecx 0x8
call [ std::allocator<wchar_t>::deallocate@IAT ]
push 0x0
push 0x0
call _CxxThrowException
sub_40ce30
mov eax [ ecx + 0x4 ]
push 0x185
push 0x0
push 0x0
push eax
mov [ ecx + 0x7c ] 0x0
mov [ ecx + 0x80 ] 0xffffffff
call [ RedrawWindow@IAT ]
retn
sub_40cee0
mov eax [ ecx + 0x4 ]
push eax
mov [ ecx ] r--data
call GdipDeleteBrush
retn
sub_40cef0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
call GdipFree
pop ebp
retn
sub_40d00d
mov [ ebp - 0x4 ] 0xffffffff
mov eax r-xdata
retn
sub_40d070
mov eax [ ecx ]
push eax
call GdipDeletePen
retn
sub_40d080
mov eax [ ecx ]
push eax
call GdipDeleteGraphics
retn
sub_40d090
mov eax [ ecx ]
push eax
call GdipDeleteFont
retn
sub_40d160
mov eax [ ecx + 0x4 ]
cmp eax 0xffffffff
je r-xdata
retn
push eax
mov eax [ ecx ]
push eax
call [ RestoreDC@IAT ]
sub_40d400
mov eax [ ecx ]
test eax eax
je r-xdata
retn
push eax
mov [ ecx ] 0x0
call [ DeleteDC@IAT ]
sub_40d480
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
pop ebp
retn 0x8
mov ecx [ ebp + 0xc ]
mov edx [ ecx ]
mov [ eax ] edx
sub_40d4a0
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
push eax
push ecx
call sub_40d100
add esp 0x8
pop ebp
retn 0x8
sub_40d537
push 0x0
push 0x0
call _CxxThrowException
sub_40de45
push 0x0
push 0x0
call _CxxThrowException
sub_40dec5
push 0x0
push 0x0
call _CxxThrowException
sub_40e7f0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x24 ]
add ecx [ eax + 0x1c ]
mov eax [ eax + 0x18 ]
pop ebp
jmp eax
sub_40f085
mov ecx [ ebp - 0x14 ]
call sub_40ee00
xor ebx ebx
push ebx
push ebx
call _CxxThrowException
sub_40f1e8
mov edx [ ebp + 0x10 ]
push edx
call ??3@YAXPAX@Z
add esp 0x4
push 0x0
push 0x0
call _CxxThrowException
sub_411240
lea eax [ ecx + 0x38 ]
retn
sub_411250
lea eax [ ecx + 0x5c ]
retn
sub_411260
mov al [ ecx + 0xc9 ]
retn
sub_411270
lea eax [ ecx + 0xca ]
retn
sub_411620
push ebp
mov ebp esp
mov al [ ebp + 0x8 ]
cmp al [ ecx + 0xc8 ]
je r-xdata
pop ebp
retn 0x4
mov [ ecx + 0xc8 ] al
mov eax [ ecx + 0x1c ]
push eax
call sub_409460
add esp 0x4
sub_411650
push ebp
mov ebp esp
mov al [ ebp + 0x8 ]
cmp al [ ecx + 0xc9 ]
je r-xdata
pop ebp
retn 0x4
mov [ ecx + 0xc9 ] al
mov eax [ ecx + 0x24 ]
push eax
call sub_409460
add esp 0x4
sub_4116c0
xor al al
retn 0x4
sub_411730
mov eax [ ecx ]
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
mov eax [ edx + eax + 0x28 ]
test eax eax
je r-xdata
retn
lea ecx [ eax + 0x4 ]
jmp [ std::_Mutex::_Unlock@IAT ]
sub_412094
push 0x1
push 0x4
mov eax [ ebp + 0x8 ]
mov edx [ eax ]
mov ecx [ edx + 0x4 ]
add ecx eax
call [ std::basic_ios<char,struct std::char_traits<char> >::setstate@IAT ]
mov [ ebp - 0x4 ] 0x0
mov eax r-xdata
retn
sub_41226e
mov eax [ ebp - 0x14 ]
push eax
call ??3@YAXPAX@Z
add esp 0x4
push 0x0
push 0x0
call _CxxThrowException
sub_412322
mov eax [ ebp - 0x18 ]
push eax
call ??3@YAXPAX@Z
add esp 0x4
push 0x0
push 0x0
call _CxxThrowException
sub_4123c8
mov edx [ ebp - 0x14 ]
push edx
call ??3@YAXPAX@Z
add esp 0x4
push 0x0
push 0x0
call _CxxThrowException
sub_412472
mov eax [ ebp - 0x18 ]
push eax
call ??3@YAXPAX@Z
add esp 0x4
push 0x0
push 0x0
call _CxxThrowException
sub_413630
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
push eax
mov eax [ ecx + 0x4 ]
push edx
push eax
call sub_413160
add esp 0xc
pop ebp
retn 0x8
sub_414260
push esi
mov esi ecx
call sub_413e60
mov eax [ esi + 0x14 ]
push eax
call ??3@YAXPAX@Z
add esp 0x4
mov [ esi + 0x14 ] 0x0
pop esi
retn
sub_414280
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
push eax
push ecx
call sub_413f10
add esp 0x8
pop ebp
retn 0x8
sub_414533
mov ecx [ ebp - 0x18 ]
push ecx
call ??3@YAXPAX@Z
add esp 0x4
push 0x0
push 0x0
call _CxxThrowException
sub_414805
mov ecx [ ebp - 0x14 ]
call sub_414260
push 0x0
push 0x0
call _CxxThrowException
sub_414ee8
mov edx [ ebp - 0x14 ]
push edx
call ??3@YAXPAX@Z
add esp 0x4
push 0x0
push 0x0
call _CxxThrowException
sub_4154b0
push 0x55
push r--data
push r--data
call Ordinal_vmwarebase_3
int3
sub_41607f
push 0xa1
push r--data
push r--data
call Ordinal_vmwarebase_3
int3
??4CGuestLaunchMenu@wui@@QAEAAV01@ABV01@@Z
push ebp
mov ebp esp
mov eax ecx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ eax ] edx
pop ebp
retn 0x4
?GetUnityOptions@UnityMgr@wui@@UAEIXZ
mov eax 0x2
retn
?GetLaunchMenu@UnityMgr@wui@@QAEAAVCGuestLaunchMenu@2@XZ
lea eax [ ecx + 0x220 ]
retn
?GetAllowMultimon@UnityMgr@wui@@QBE_NXZ
mov al [ ecx + 0x21c ]
retn
?GetUnityWindowZOrder@UnityMgr@wui@@QBEABV?$vector@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@XZ
lea eax [ ecx + 0x1a0 ]
retn
??_DVM@wui@@IAEXXZ
push esi
mov esi ecx
call ??1VM@wui@@MAE@XZ
lea ecx [ esi + 0x2c4 ]
pop esi
jmp [ sigc::trackable::~trackable@IAT ]
sub_416110
push 0x8007000e
call sub_401870
sub_4163f0
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
lea eax [ ebp + 0x10 ]
push eax
push ecx
mov ecx [ ebp + 0x8 ]
call sub_416370
pop ebp
retn
sub_4167b0
mov eax [ ecx ]
test eax eax
je r-xdata
retn
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
sub_416870
mov eax [ ecx ]
push eax
call [ SysFreeString@IAT ]
retn
sub_416880
push esi
mov esi ecx
push esi
call [ VariantInit@IAT ]
mov eax esi
pop esi
retn
sub_416890
mov eax [ ecx ]
test eax eax
je r-xdata
retn
mov [ ecx ] 0x0
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
sub_416ef0
sub ecx [ ecx - 0x4 ]
jmp sub_417ed0
sub_417728
push 0x80004005
push r--data
call Ordinal_vmwarebase_2
add esp 0x8
mov [ ebp - 0x4 ] 0x0
mov eax r-xdata
retn
sub_41785b
push 0x80004005
push r--data
call Ordinal_vmwarebase_2
add esp 0x8
mov [ ebp - 0x4 ] 0x1
mov eax sub_41787a
retn
sub_417ad6
push 0x80004005
push r--data
call Ordinal_vmwarebase_2
add esp 0x8
mov [ ebp - 0x4 ] 0xffffffff
mov eax r-xdata
retn
sub_417bff
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_417c11
push 0x80004005
push r--data
call Ordinal_vmwarebase_2
add esp 0x8
mov [ ebp - 0x4 ] 0xffffffff
mov eax r-xdata
retn
sub_417dc0
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
push eax
mov eax [ ecx + 0x4 ]
push edx
push eax
call sub_417c30
add esp 0xc
pop ebp
retn 0x8
sub_418392
mov [ ebp - 0x4 ] 0xffffffff
mov eax r-xdata
retn
sub_418c53
push 0x80004005
push r--data
call Ordinal_vmwarebase_2
add esp 0x8
mov [ ebp - 0x4 ] 0xffffffff
mov eax r-xdata
retn
sub_418c90
push ebp
mov ebp esp
mov eax [ ecx - 0x40 ]
mov edx [ eax + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ edx + ecx - 0x30 ] eax
add ecx 0xffffffbc
call sub_418860
pop ebp
retn 0x4
sub_418d80
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx + 0x10 ] eax
pop ebp
retn 0x4
sub_4190c0
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push 0x0
push eax
call [ rw-data ]
pop ebp
retn 0x4
GdipDeleteStringFormat
jmp [ GdipDeleteStringFormat@IAT ]
GdipDeleteBrush
jmp [ GdipDeleteBrush@IAT ]
GdipFree
jmp [ GdipFree@IAT ]
GdipAlloc
jmp [ GdipAlloc@IAT ]
GdipCreatePen1
jmp [ GdipCreatePen1@IAT ]
GdipCreatePen2
jmp [ GdipCreatePen2@IAT ]
GdipDeletePen
jmp [ GdipDeletePen@IAT ]
GdipCreateStringFormat
jmp [ GdipCreateStringFormat@IAT ]
GdipDeleteGraphics
jmp [ GdipDeleteGraphics@IAT ]
GdipDeleteFont
jmp [ GdipDeleteFont@IAT ]
GdipCreateSolidFill
jmp [ GdipCreateSolidFill@IAT ]
GdipCreateLineBrushFromRect
jmp [ GdipCreateLineBrushFromRect@IAT ]
GdipSetStringFormatFlags
jmp [ GdipSetStringFormatFlags@IAT ]
GdipSetStringFormatLineAlign
jmp [ GdipSetStringFormatLineAlign@IAT ]
GdipSetStringFormatHotkeyPrefix
jmp [ GdipSetStringFormatHotkeyPrefix@IAT ]
GdipSetStringFormatTrimming
jmp [ GdipSetStringFormatTrimming@IAT ]
GdipCreateFromHDC
jmp [ GdipCreateFromHDC@IAT ]
GdipGetDC
jmp [ GdipGetDC@IAT ]
GdipReleaseDC
jmp [ GdipReleaseDC@IAT ]
GdipDrawRectangle
jmp [ GdipDrawRectangle@IAT ]
GdipFillRectangle
jmp [ GdipFillRectangle@IAT ]
GdipFillPolygonI
jmp [ GdipFillPolygonI@IAT ]
GdipDrawString
jmp [ GdipDrawString@IAT ]
GdipMeasureString
jmp [ GdipMeasureString@IAT ]
GdipCreateFontFromDC
jmp [ GdipCreateFontFromDC@IAT ]
GdipCreateFontFromLogfontA
jmp [ GdipCreateFontFromLogfontA@IAT ]
GdipCloneBrush
jmp [ GdipCloneBrush@IAT ]
_CxxThrowException
jmp [ _CxxThrowException@IAT ]
__CxxFrameHandler3
jmp [ __CxxFrameHandler3@IAT ]
??_V@YAXPAX@Z
jmp [ `placement delete closure'@IAT ]
?what@exception@std@@UBEPBDXZ
jmp [ std::exception::what@IAT ]
??2@YAPAXI@Z
jmp [ operator new@IAT ]
??0exception@std@@QAE@ABV01@@Z
jmp [ std::exception::exception@IAT ]
free
jmp [ free@IAT ]
??_U@YAPAXI@Z
jmp [ operator delete[]@IAT ]
memset
jmp [ memset@IAT ]
__RTDynamicCast
jmp [ __RTDynamicCast@IAT ]
_purecall
jmp [ _purecall@IAT ]
sub_4194ab
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
retn
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_419402
sub_419510
cmp [ ebp - 0x20 ] 0x0
jne r-xdata
retn
push [ ebp + 0x18 ]
push [ ebp - 0x1c ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_419402
sub_419530
push ecx
lea ecx [ esp + 0x8 ]
sub ecx eax
and ecx 0xf
add eax ecx
sbb ecx ecx
or eax ecx
pop ecx
jmp sub_419310
sub_419546
push ecx
lea ecx [ esp + 0x8 ]
sub ecx eax
and ecx 0x7
add eax ecx
sbb ecx ecx
or eax ecx
pop ecx
jmp sub_419310
sub_41955c
push 0xc
push r--data
call sub_4015dc
and [ ebp - 0x4 ] 0x0
movapd xmm0 xmm1
mov [ ebp - 0x1c ] 0x1
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x1c ]
call sub_401621
retn
sub_419579
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov eax [ eax ]
cmp eax 0xc0000005
je r-xdata
xor eax eax
inc eax
retn
cmp eax 0xc000001d
je r-xdata
xor eax eax
retn
sub_41960e
call sub_4195ac
mov [ rw-data ] eax
xor eax eax
retn
?_type_info_dtor_internal_method@type_info@@QAEXXZ
jmp [ type_info::_type_info_dtor_internal_method@IAT ]
sub_41978e
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_4196ad
pop ecx
pop ebp
retn 0x4
j_sub_4197a0
jmp sub_4197a0
sub_419899
mov edi edi
push esi
mov esi ecx
lea ecx [ esi + 0x4 ]
call sub_401890
xor eax eax
mov [ esi + 0x20 ] eax
mov [ esi + 0x24 ] eax
mov [ esi + 0x28 ] eax
mov eax esi
pop esi
retn
sub_419941
mov edi edi
push esi
push [ rw-data ]
mov esi ecx
push esi
call sub_4198b5
lea ecx [ esi + 0x20 ]
pop esi
jmp sub_41995b
sub_41997a
mov edi edi
push esi
mov esi ecx
lea ecx [ esi + 0x14 ]
call sub_401890
xor eax eax
mov [ esi + 0x2c ] eax
mov [ esi + 0x30 ] eax
mov [ esi + 0x34 ] eax
mov eax esi
pop esi
retn
sub_419996
mov edi edi
push esi
mov esi ecx
lea eax [ esi + 0x14 ]
push eax
call [ DeleteCriticalSection@IAT ]
lea ecx [ esi + 0x2c ]
pop esi
jmp sub_41995b
sub_4199ee
cmp [ ecx + 0x8 ] 0x0
mov [ ecx ] r--data
je r-xdata
retn
mov ecx [ ecx + 0x4 ]
test ecx ecx
je r-xdata
push ecx
call [ HeapDestroy@IAT ]
sub_419a09
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
push 0x0
push [ ecx + 0x4 ]
call [ HeapAlloc@IAT ]
pop ebp
retn 0x4
sub_419a20
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
pop ebp
retn 0x4
push [ ebp + 0x8 ]
push 0x0
push [ ecx + 0x4 ]
call [ HeapFree@IAT ]
sub_419a77
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
push 0x0
push [ ecx + 0x4 ]
call [ HeapSize@IAT ]
pop ebp
retn 0x4
sub_419ae0
mov edi edi
push ebp
mov ebp esp
mov ecx [ ecx + 0x4 ]
mov eax [ ecx ]
pop ebp
jmp [ eax + 0x4 ]
??1VM@wui@@MAE@XZ
jmp [ wui::VM::~VM@IAT ]
?GetMoniker@util@wui@@YAJABVstring@utf@@PAPAUIMoniker@@@Z
jmp [ wui::util::GetMoniker@IAT ]
?ScheduleCallback@util@wui@@YA?AUconnection@sigc@@V?$slot@XUnil@sigc@@U12@U12@U12@U12@U12@U12@@4@I@Z
jmp [ wui::util::ScheduleCallback@IAT ]
Ordinal_vmwarebase_4
jmp [ Ordinal_vmwarebase_4@IAT ]
Ordinal_vmwarebase_2
jmp [ Ordinal_vmwarebase_2@IAT ]
Ordinal_vmwarebase_9
jmp [ Ordinal_vmwarebase_9@IAT ]
Ordinal_vmwarebase_18
jmp [ Ordinal_vmwarebase_18@IAT ]
Ordinal_vmwarebase_7
jmp [ Ordinal_vmwarebase_7@IAT ]
Ordinal_vmwarebase_11
jmp [ Ordinal_vmwarebase_11@IAT ]
Ordinal_vmwarebase_6
jmp [ Ordinal_vmwarebase_6@IAT ]
Ordinal_vmwarebase_8
jmp [ Ordinal_vmwarebase_8@IAT ]
Ordinal_vmwarebase_659
jmp [ Ordinal_vmwarebase_659@IAT ]
Ordinal_vmwarebase_880
jmp [ Ordinal_vmwarebase_880@IAT ]
Ordinal_vmwarebase_459
jmp [ Ordinal_vmwarebase_459@IAT ]
Ordinal_vmwarebase_750
jmp [ Ordinal_vmwarebase_750@IAT ]
Ordinal_vmwarebase_3
jmp [ Ordinal_vmwarebase_3@IAT ]
Ordinal_vmwarebase_349
jmp [ Ordinal_vmwarebase_349@IAT ]
Ordinal_vmwarebase_25
jmp [ Ordinal_vmwarebase_25@IAT ]
Ordinal_vmwarebase_182
jmp [ Ordinal_vmwarebase_182@IAT ]
sub_419c80
mov ecx [ ebp - 0x1c ]
jmp [ utf::string::~string@IAT ]
sub_419c89
mov eax [ ebp - 0x14 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x14 ] 0xfffffffe
lea ecx [ ebp - 0x40 ]
jmp [ utf::string::~string@IAT ]
sub_419ca3
mov ecx [ ebp - 0x1c ]
jmp [ utf::string::~string@IAT ]
sub_419cac
mov eax [ ebp - 0x14 ]
and eax 0x2
je r-xdata
retn
and [ ebp - 0x14 ] 0xfffffffd
lea ecx [ ebp - 0x64 ]
jmp [ utf::string::~string@IAT ]
sub_419cc6
mov ecx [ ebp - 0x1c ]
jmp [ utf::string::~string@IAT ]
sub_419ccf
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x68 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_419cf0
mov ecx [ ebp - 0x10 ]
add ecx 0x4
jmp [ utf::string::~string@IAT ]
sub_419cfc
mov ecx [ ebp - 0x10 ]
add ecx 0x28
jmp [ utf::string::~string@IAT ]
sub_419d08
mov ecx [ ebp - 0x10 ]
add ecx 0x4c
jmp [ utf::string::~string@IAT ]
sub_419d14
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_419d30
mov ecx [ ebp - 0x10 ]
jmp [ std::exception::~exception@IAT ]
sub_419d39
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_419d60
mov ecx [ ebp - 0x10 ]
jmp [ std::exception::~exception@IAT ]
sub_419d69
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_419d90
mov ecx [ ebp - 0x10 ]
jmp [ std::exception::~exception@IAT ]
sub_419d99
mov ecx [ ebp - 0x10 ]
add ecx 0xc
jmp [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_419da5
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_419dc0
mov ecx [ ebp - 0x10 ]
jmp sub_402180
sub_419dc8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_419df0
mov ecx [ ebp - 0x10 ]
jmp sub_402180
sub_419df8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_419e20
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x10 ]
push ecx
call sub_4026c0
add esp 0x8
retn
sub_419e31
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_419e50
mov ecx [ ebp - 0x10 ]
add ecx 0xc
jmp sub_401a00
sub_419e5b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_419e80
mov ecx [ ebp - 0x10 ]
jmp sub_402730
sub_419e88
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_419eb0
mov eax [ ebp + 0xc ]
push eax
call ??3@YAXPAX@Z
pop ecx
retn
sub_419ebb
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_419ee0
mov ecx [ ebp - 0x10 ]
jmp [ std::exception::~exception@IAT ]
sub_419ee9
mov ecx [ ebp - 0x10 ]
add ecx 0xc
jmp [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_419ef5
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_419f10
mov ecx [ ebp - 0x10 ]
jmp sub_402730
sub_419f18
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_419f40
mov ecx [ ebp - 0x10 ]
add ecx 0x8
jmp sub_4025e0
sub_419f4b
mov ecx [ ebp - 0x10 ]
add ecx 0xc
jmp sub_401a00
sub_419f56
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_419f80
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
mov edx [ ebp + 0x8 ]
lea eax [ ecx + edx * 2 ]
push eax
mov ecx [ ebp - 0x14 ]
push ecx
call sub_4026c0
add esp 0x8
retn
sub_419f99
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_419fc0
mov ecx [ ebp - 0x10 ]
jmp sub_402f40
sub_419fc8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_419ff0
mov eax [ rw-data ]
and eax 0xfffffffe
mov [ rw-data ] eax
retn
sub_419ffe
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41a020
lea ecx [ ebp - 0x218 ]
jmp sub_403900
sub_41a02b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x234 ]
xor ecx eax
call sub_401736
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41a060
lea ecx [ ebp + 0x8 ]
jmp sub_403850
sub_41a068
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41a090
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
mov edx [ ebp + 0x8 ]
lea eax [ ecx + edx * 4 ]
push eax
mov ecx [ ebp - 0x14 ]
push ecx
call sub_4026c0
add esp 0x8
retn
sub_41a0a9
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x4 ]
mov edx [ ebp + 0x8 ]
lea eax [ ecx + edx * 4 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
call sub_4026c0
add esp 0x8
retn
sub_41a0c3
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41a0e0
mov ecx [ ebp - 0x10 ]
jmp sub_402780
sub_41a0e8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41a110
mov ecx [ ebp - 0x10 ]
jmp sub_402780
sub_41a118
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41a140
mov ecx [ ebp - 0x10 ]
jmp sub_403c50
sub_41a148
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41a170
mov ecx [ ebp - 0x10 ]
add ecx 0x4
jmp sub_403df0
sub_41a17b
mov ecx [ ebp - 0x10 ]
add ecx 0x10
jmp sub_403360
sub_41a186
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41a1b0
lea ecx [ ebp - 0x6c ]
jmp sub_4032b0
sub_41a1b8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x74 ]
xor ecx eax
call sub_401736
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41a1e0
lea ecx [ ebp - 0x14 ]
jmp sub_402dc0
sub_41a1e8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41a210
mov ecx [ ebp - 0x10 ]
jmp sub_402dc0
sub_41a218
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41a240
mov ecx [ ebp - 0x10 ]
jmp sub_403d40
sub_41a248
mov ecx [ ebp - 0x10 ]
jmp sub_402780
sub_41a250
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41a270
mov ecx [ ebp - 0x10 ]
add ecx 0x4
jmp sub_402d30
sub_41a27b
mov ecx [ ebp - 0x10 ]
add ecx 0x10
jmp sub_402d30
sub_41a286
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41a2b0
mov ecx [ ebp - 0x10 ]
add ecx 0x4
jmp sub_402d30
sub_41a2bb
mov ecx [ ebp - 0x10 ]
add ecx 0x10
jmp sub_402d30
sub_41a2c6
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41a2f0
mov ecx [ ebp - 0x10 ]
jmp sub_402cd0
sub_41a2f8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41a320
mov ecx [ ebp - 0x10 ]
jmp sub_40c480
sub_41a328
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41a350
lea ecx [ ebp - 0x18 ]
jmp sub_403c90
sub_41a358
lea ecx [ ebp - 0x24 ]
jmp sub_403c90
sub_41a360
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41a380
lea ecx [ ebp + 0x10 ]
jmp sub_403850
sub_41a388
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41a3b0
lea ecx [ ebp - 0x2118 ]
jmp sub_403cb0
sub_41a3bb
lea ecx [ ebp - 0x2120 ]
jmp sub_403850
sub_41a3c6
lea ecx [ ebp - 0x2118 ]
jmp sub_403cb0
sub_41a3d1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x2134 ]
xor ecx eax
call sub_401736
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41a400
lea ecx [ ebp - 0x2224 ]
jmp sub_403900
sub_41a40b
lea ecx [ ebp - 0x2238 ]
jmp sub_403900
sub_41a416
lea ecx [ ebp - 0x2240 ]
jmp sub_403900
sub_41a421
lea ecx [ ebp - 0x2250 ]
jmp sub_403900
sub_41a42c
lea ecx [ ebp - 0x2248 ]
jmp sub_403900
sub_41a437
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x225c ]
xor ecx eax
call sub_401736
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41a460
mov ecx [ ebp - 0x14 ]
jmp sub_403c50
sub_41a468
mov ecx [ ebp - 0x10 ]
add ecx 0x4
jmp sub_403df0
sub_41a473
mov ecx [ ebp - 0x14 ]
jmp sub_402f40
sub_41a47b
mov ecx [ ebp - 0x10 ]
add ecx 0x10
jmp sub_403360
sub_41a486
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41a4b0
lea ecx [ ebp - 0x18 ]
jmp sub_402dc0
sub_41a4b8
lea ecx [ ebp - 0x18 ]
jmp sub_4043c0
sub_41a4c0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41a4e0
lea ecx [ ebp - 0x14 ]
jmp sub_402dc0
sub_41a4e8
lea ecx [ ebp - 0x14 ]
jmp sub_4043c0
sub_41a4f0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41a510
mov ecx [ ebp - 0x10 ]
jmp sub_404610
sub_41a518
mov ecx [ ebp - 0x10 ]
jmp sub_402cd0
sub_41a520
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41a540
mov eax [ rw-data ]
and eax 0xfffffffe
mov [ rw-data ] eax
retn
sub_41a54e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41a570
mov ecx [ ebp - 0x10 ]
jmp sub_4121b0
sub_41a578
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41a5a0
lea ecx [ ebp - 0x34 ]
jmp [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_41a5a9
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x60 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41a5d0
lea ecx [ ebp - 0x1c ]
jmp sub_402dc0
sub_41a5d8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x80 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41a600
lea ecx [ ebp - 0x428 ]
jmp sub_403850
sub_41a60b
lea ecx [ ebp - 0x418 ]
jmp sub_403cb0
sub_41a616
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x434 ]
xor ecx eax
call sub_401736
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41a640
lea ecx [ ebp - 0x10 ]
jmp sub_403850
sub_41a648
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41a670
lea ecx [ ebp - 0x10 ]
jmp sub_403850
sub_41a678
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41a6a0
lea ecx [ ebp - 0xa74 ]
jmp sub_403e70
sub_41a6ab
lea ecx [ ebp - 0xa44 ]
jmp sub_403850
sub_41a6b6
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xa78 ]
xor ecx eax
call sub_401736
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41a6e0
lea ecx [ ebp - 0xa70 ]
jmp sub_403e70
sub_41a6eb
lea ecx [ ebp - 0xa44 ]
jmp sub_403850
sub_41a6f6
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xa74 ]
xor ecx eax
call sub_401736
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41a720
mov ecx [ ebp - 0x10 ]
jmp sub_4121b0
sub_41a728
mov ecx [ ebp - 0x10 ]
jmp sub_404660
sub_41a730
mov ecx [ ebp - 0x10 ]
jmp sub_40c480
sub_41a738
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41a760
lea ecx [ ebp - 0x64 ]
jmp sub_404590
sub_41a768
lea ecx [ ebp - 0x2c ]
jmp sub_406af0
sub_41a770
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x60 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41a790
mov ecx [ ebp - 0x10 ]
jmp sub_412cc0
sub_41a798
mov ecx [ ebp - 0x10 ]
jmp sub_4125b0
sub_41a7a0
mov ecx [ ebp - 0x10 ]
jmp sub_4121b0
sub_41a7a8
mov ecx [ ebp - 0x10 ]
jmp sub_404660
sub_41a7b0
mov ecx [ ebp - 0x10 ]
jmp sub_40c480
sub_41a7b8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41a7e0
mov ecx [ ebp - 0x10 ]
jmp sub_406f60
sub_41a7e8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41a810
mov ecx [ ebp - 0x10 ]
jmp sub_405870
sub_41a818
mov ecx [ ebp - 0x10 ]
add ecx 0x28
jmp sub_401fd0
sub_41a823
mov ecx [ ebp - 0x10 ]
add ecx 0x34
jmp [ sigc::trackable::~trackable@IAT ]
sub_41a82f
mov ecx [ ebp - 0x10 ]
add ecx 0x38
jmp sub_406ff0
sub_41a83a
mov ecx [ ebp - 0x10 ]
add ecx 0x58
jmp sub_40ef80
sub_41a845
mov ecx [ ebp - 0x10 ]
add ecx 0x70
jmp sub_402a40
sub_41a850
mov ecx [ ebp - 0x10 ]
add ecx 0x74
jmp sub_401ff0
sub_41a85b
mov ecx [ ebp - 0x14 ]
jmp sub_406f60
sub_41a863
mov ecx [ ebp - 0x10 ]
jmp sub_404610
sub_41a86b
mov ecx [ ebp - 0x10 ]
jmp sub_402cd0
sub_41a873
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41a890
mov ecx [ ebp - 0x10 ]
jmp sub_405870
sub_41a898
mov ecx [ ebp - 0x10 ]
add ecx 0x24
jmp [ sigc::trackable::~trackable@IAT ]
sub_41a8a4
mov ecx [ ebp - 0x10 ]
add ecx 0x2c
jmp sub_406ff0
sub_41a8af
mov ecx [ ebp - 0x10 ]
add ecx 0x94
jmp sub_407040
sub_41a8bd
mov ecx [ ebp - 0x14 ]
jmp sub_406f60
sub_41a8c5
mov ecx [ ebp - 0x10 ]
jmp sub_404610
sub_41a8cd
mov ecx [ ebp - 0x10 ]
jmp sub_402cd0
sub_41a8d5
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41a8f0
mov eax [ ebp - 0x38 ]
push eax
call ??3@YAXPAX@Z
pop ecx
retn
sub_41a8fb
lea ecx [ ebp - 0x4c ]
jmp sub_401fe0
sub_41a903
lea ecx [ ebp - 0x90 ]
jmp [ utf::string::~string@IAT ]
sub_41a90f
lea ecx [ ebp - 0xc8 ]
jmp sub_404590
sub_41a91a
lea ecx [ ebp - 0x1f4 ]
jmp sub_407100
sub_41a925
lea ecx [ ebp - 0x48 ]
jmp sub_410e70
sub_41a92d
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1f8 ]
xor ecx eax
call sub_401736
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41a960
lea ecx [ ebp - 0x148 ]
jmp [ wui::util::CInitGdiplus::~CInitGdiplus@IAT ]
sub_41a96c
lea ecx [ ebp - 0x80 ]
jmp sub_401f20
sub_41a974
lea ecx [ ebp - 0x16c ]
jmp [ utf::string::~string@IAT ]
sub_41a980
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x170 ]
xor ecx eax
call sub_401736
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41a9b0
mov ecx rw-data
jmp sub_402780
sub_41a9ba
mov ecx rw-data
jmp sub_403d40
sub_41a9c4
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41a9e0
mov ecx rw-data
jmp sub_403d40
sub_41a9ea
mov ecx rw-data
jmp sub_402780
sub_41a9f4
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41aa10
mov ecx [ ebp - 0x10 ]
jmp [ sigc::signal_base::~signal_base@IAT ]
sub_41aa19
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41aa40
mov ecx [ ebp - 0x10 ]
jmp [ utf::string::~string@IAT ]
sub_41aa49
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41aa70
mov ecx [ ebp - 0x10 ]
jmp sub_417640
sub_41aa78
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41aaa0
mov ecx [ ebp - 0x10 ]
sub ecx 0x64
jmp sub_411960
sub_41aaab
mov ecx [ ebp - 0x10 ]
sub ecx 0x58
jmp [ sigc::connection::~connection@IAT ]
sub_41aab7
mov ecx [ ebp - 0x10 ]
sub ecx 0x54
jmp [ utf::string::~string@IAT ]
sub_41aac3
mov ecx [ ebp - 0x10 ]
sub ecx 0x30
jmp [ utf::string::~string@IAT ]
sub_41aacf
mov ecx [ ebp - 0x10 ]
jmp sub_4079f0
sub_41aad7
mov ecx [ ebp - 0x10 ]
jmp [ sigc::signal_base::~signal_base@IAT ]
sub_41aae0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41ab00
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp - 0x14 ]
add ecx 0x64
jmp [ sigc::trackable::~trackable@IAT ]
sub_41ab1d
mov eax [ ebp - 0x10 ]
and eax 0x2
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffd
mov ecx [ ebp - 0x14 ]
add ecx 0x6c
jmp [ cui::ipc::Connection::~Connection@IAT ]
sub_41ab3a
mov ecx [ ebp + 0x8 ]
jmp [ sigc::signal_base::~signal_base@IAT ]
sub_41ab43
mov ecx [ ebp + 0x8 ]
jmp sub_4079f0
sub_41ab4b
mov ecx [ ebp - 0x14 ]
add ecx 0x8
jmp sub_411960
sub_41ab56
mov ecx [ ebp - 0x14 ]
add ecx 0x14
jmp [ sigc::connection::~connection@IAT ]
sub_41ab62
mov ecx [ ebp - 0x14 ]
add ecx 0x18
jmp [ utf::string::~string@IAT ]
sub_41ab6e
mov ecx [ ebp - 0x14 ]
add ecx 0x3c
jmp [ utf::string::~string@IAT ]
sub_41ab7a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41aba0
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp - 0x14 ]
add ecx 0x14
jmp [ sigc::trackable::~trackable@IAT ]
sub_41abbd
mov eax [ ebp - 0x10 ]
and eax 0x2
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffd
mov ecx [ ebp - 0x14 ]
add ecx 0x1c
jmp [ cui::ipc::Connection::~Connection@IAT ]
sub_41abda
mov eax [ ebp - 0x10 ]
and eax 0x4
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffb
mov ecx [ ebp - 0x14 ]
add ecx 0xb0
jmp sub_407fe0
sub_41abf9
mov ecx [ ebp - 0x14 ]
add ecx 0x1c
jmp sub_417640
sub_41ac04
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41ac20
mov ecx [ ebp - 0x10 ]
jmp [ sigc::trackable::~trackable@IAT ]
sub_41ac29
mov ecx [ ebp - 0x10 ]
jmp [ sigc::internal::slot_rep::~slot_rep@IAT ]
sub_41ac32
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41ac50
mov ecx [ ebp - 0x10 ]
jmp sub_406af0
sub_41ac58
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41ac80
mov ecx [ ebp - 0x10 ]
add ecx 0x4
jmp sub_407ac0
sub_41ac8b
mov ecx [ ebp - 0x10 ]
add ecx 0x28
jmp sub_408630
sub_41ac96
mov ecx [ ebp - 0x14 ]
jmp sub_406af0
sub_41ac9e
mov ecx [ ebp - 0x14 ]
jmp [ utf::string::~string@IAT ]
sub_41aca7
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41acd0
lea ecx [ ebp - 0x3c ]
jmp [ utf::string::~string@IAT ]
sub_41acd9
lea ecx [ ebp - 0x3c ]
jmp [ utf::string::~string@IAT ]
sub_41ace2
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x40 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41ad00
mov ecx [ ebp - 0x10 ]
jmp [ sigc::trackable::~trackable@IAT ]
sub_41ad09
mov ecx [ ebp - 0x10 ]
jmp [ sigc::internal::slot_rep::~slot_rep@IAT ]
sub_41ad12
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41ad30
mov ecx [ ebp - 0x14 ]
jmp sub_4121b0
sub_41ad38
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x38 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41ad60
mov ecx [ ebp + 0x8 ]
jmp [ utf::string::~string@IAT ]
sub_41ad69
mov ecx [ ebp - 0x10 ]
add ecx 0x4
jmp sub_407ac0
sub_41ad74
mov ecx [ ebp + 0x8 ]
jmp sub_406af0
sub_41ad7c
mov ecx [ ebp - 0x10 ]
add ecx 0x28
jmp sub_408630
sub_41ad87
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41adb0
mov ecx [ ebp + 0x8 ]
jmp [ utf::string::~string@IAT ]
sub_41adb9
mov ecx [ ebp - 0x10 ]
add ecx 0x4
jmp sub_407ac0
sub_41adc4
mov ecx [ ebp + 0x8 ]
jmp sub_406af0
sub_41adcc
mov ecx [ ebp - 0x10 ]
add ecx 0x28
jmp sub_408630
sub_41add7
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41ae00
mov ecx [ ebp - 0x10 ]
jmp [ sigc::trackable::~trackable@IAT ]
sub_41ae09
mov ecx [ ebp - 0x10 ]
jmp [ sigc::internal::slot_rep::~slot_rep@IAT ]
sub_41ae12
mov ecx [ ebp - 0x10 ]
add ecx 0x18
jmp sub_408760
sub_41ae1d
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41ae40
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp - 0x14 ]
add ecx 0x20
jmp [ sigc::trackable::~trackable@IAT ]
sub_41ae5d
mov eax [ ebp - 0x10 ]
and eax 0x2
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffd
mov ecx [ ebp - 0x14 ]
add ecx 0x28
jmp [ cui::ipc::Connection::~Connection@IAT ]
sub_41ae7a
mov eax [ ebp - 0x10 ]
and eax 0x4
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffb
mov ecx [ ebp - 0x14 ]
add ecx 0xbc
jmp sub_407fe0
sub_41ae99
mov ecx [ ebp - 0x14 ]
add ecx 0x1c
jmp sub_407b10
sub_41aea4
mov ecx [ ebp + 0x8 ]
jmp [ sigc::signal_base::~signal_base@IAT ]
sub_41aead
mov ecx [ ebp + 0x8 ]
jmp sub_4079f0
sub_41aeb5
mov ecx [ ebp - 0x14 ]
add ecx 0x14
jmp sub_411960
sub_41aec0
lea ecx [ ebp - 0x1c ]
jmp sub_410d60
sub_41aec8
lea ecx [ ebp - 0x1c ]
jmp sub_410e70
sub_41aed0
lea ecx [ ebp - 0x1c ]
jmp sub_410d60
sub_41aed8
lea ecx [ ebp - 0x1c ]
jmp [ sigc::slot_base::~slot_base@IAT ]
sub_41aee1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x40 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41af00
mov ecx [ ebp - 0x10 ]
sub ecx 0xc
jmp sub_407b10
sub_41af0b
mov ecx [ ebp - 0x10 ]
sub ecx 0x14
jmp sub_411960
sub_41af16
mov ecx [ ebp - 0x14 ]
jmp sub_4079f0
sub_41af1e
mov ecx [ ebp - 0x14 ]
jmp [ sigc::signal_base::~signal_base@IAT ]
sub_41af27
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41af50
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41af70
mov ecx [ ebp + 0x8 ]
add ecx 0x8
jmp [ sigc::slot_base::~slot_base@IAT ]
sub_41af7c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41afa0
lea ecx [ ebp - 0x14 ]
jmp [ sigc::slot_base::~slot_base@IAT ]
sub_41afa9
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41afd0
lea ecx [ ebp + 0x34 ]
jmp sub_406af0
sub_41afd8
lea ecx [ ebp + 0x10 ]
jmp [ utf::string::~string@IAT ]
sub_41afe1
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp - 0x14 ]
jmp sub_408760
sub_41affa
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41b020
mov ecx [ ebp - 0x10 ]
jmp [ sigc::trackable::~trackable@IAT ]
sub_41b029
mov ecx [ ebp - 0x10 ]
jmp [ sigc::internal::slot_rep::~slot_rep@IAT ]
sub_41b032
mov ecx [ ebp - 0x10 ]
add ecx 0x18
jmp sub_408760
sub_41b03d
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41b060
mov eax [ ebp - 0x10 ]
push eax
call ??3@YAXPAX@Z
pop ecx
retn
sub_41b06b
mov eax [ ebp - 0x10 ]
push eax
call ??3@YAXPAX@Z
pop ecx
retn
sub_41b076
mov ecx [ ebp - 0x14 ]
jmp sub_406af0
sub_41b07e
mov ecx [ ebp - 0x18 ]
jmp [ utf::string::~string@IAT ]
sub_41b087
lea ecx [ ebp - 0x64 ]
jmp sub_408760
sub_41b08f
mov ecx [ ebp - 0x14 ]
jmp sub_410d60
sub_41b097
mov ecx [ ebp - 0x18 ]
jmp sub_410e70
sub_41b09f
mov ecx [ ebp - 0x1c ]
jmp sub_410d60
sub_41b0a7
mov ecx [ ebp - 0x14 ]
jmp sub_410e70
sub_41b0af
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x68 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41b0d0
mov eax [ rw-data ]
and eax 0xfffffffe
mov [ rw-data ] eax
retn
sub_41b0de
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41b100
mov ecx [ ebp - 0x14 ]
add ecx 0xc
jmp sub_401a00
sub_41b10b
mov ecx [ ebp - 0x10 ]
add ecx 0x8
jmp sub_4025e0
sub_41b116
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41b140
mov ecx [ ebp - 0x10 ]
jmp sub_402cd0
sub_41b148
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41b170
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41b190
mov eax [ ebp - 0x14 ]
push eax
mov ecx [ ebp - 0x18 ]
push ecx
call sub_4026c0
add esp 0x8
retn
sub_41b1a1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41b1c0
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x14 ]
push ecx
call sub_4026c0
add esp 0x8
retn
sub_41b1d1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41b1f0
lea ecx [ ebp - 0x28 ]
jmp [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_41b1f9
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x54 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41b220
mov ecx [ ebp - 0x14 ]
jmp sub_406f60
sub_41b228
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41b250
mov ecx [ ebp - 0x10 ]
jmp sub_404610
sub_41b258
mov ecx [ ebp - 0x10 ]
jmp sub_405870
sub_41b260
mov ecx [ ebp - 0x10 ]
add ecx 0x24
jmp [ sigc::trackable::~trackable@IAT ]
sub_41b26c
mov ecx [ ebp - 0x10 ]
add ecx 0x2c
jmp sub_406ff0
sub_41b277
mov ecx [ ebp - 0x10 ]
add ecx 0x94
jmp sub_407040
sub_41b285
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41b2a0
lea ecx [ ebp - 0x14 ]
jmp sub_410d60
sub_41b2a8
lea ecx [ ebp - 0x14 ]
jmp sub_410e70
sub_41b2b0
lea ecx [ ebp - 0x1c ]
jmp sub_410d60
sub_41b2b8
lea ecx [ ebp - 0x1c ]
jmp sub_410e70
sub_41b2c0
lea ecx [ ebp - 0x1c ]
jmp sub_410d60
sub_41b2c8
lea ecx [ ebp - 0x1c ]
jmp [ sigc::slot_base::~slot_base@IAT ]
sub_41b2d1
lea ecx [ ebp - 0x14 ]
jmp sub_410d60
sub_41b2d9
lea ecx [ ebp - 0x14 ]
jmp [ sigc::slot_base::~slot_base@IAT ]
sub_41b2e2
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x38 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41b300
lea ecx [ ebp - 0x14 ]
jmp sub_410e70
sub_41b308
lea ecx [ ebp - 0x14 ]
jmp sub_410d60
sub_41b310
lea ecx [ ebp - 0x14 ]
jmp [ sigc::slot_base::~slot_base@IAT ]
sub_41b319
lea ecx [ ebp - 0x14 ]
jmp sub_410e70
sub_41b321
lea ecx [ ebp - 0x14 ]
jmp sub_410d60
sub_41b329
lea ecx [ ebp - 0x14 ]
jmp [ sigc::slot_base::~slot_base@IAT ]
sub_41b332
lea ecx [ ebp - 0x14 ]
jmp sub_410e70
sub_41b33a
lea ecx [ ebp - 0x14 ]
jmp sub_410d60
sub_41b342
lea ecx [ ebp - 0x14 ]
jmp [ sigc::slot_base::~slot_base@IAT ]
sub_41b34b
lea ecx [ ebp - 0x14 ]
jmp sub_410e70
sub_41b353
lea ecx [ ebp - 0x14 ]
jmp sub_410d60
sub_41b35b
lea ecx [ ebp - 0x14 ]
jmp [ sigc::slot_base::~slot_base@IAT ]
sub_41b364
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x28 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41b380
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp - 0x14 ]
add ecx 0x90
jmp [ sigc::trackable::~trackable@IAT ]
sub_41b3a0
mov ecx [ ebp - 0x14 ]
jmp sub_4153d0
sub_41b3a8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41b3d0
mov eax [ ebp - 0x10 ]
push eax
call ??3@YAXPAX@Z
pop ecx
retn
sub_41b3db
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41b400
mov ecx [ ebp - 0x10 ]
jmp sub_4153d0
sub_41b408
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41b430
lea ecx [ ebp - 0x28 ]
jmp [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_41b439
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x48 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41b460
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41b480
lea ecx [ ebp - 0x258 ]
jmp sub_40c5d0
sub_41b48b
lea ecx [ ebp - 0x23c ]
jmp [ utf::string::~string@IAT ]
sub_41b497
mov ecx [ ebp - 0x25c ]
jmp [ utf::string::~string@IAT ]
sub_41b4a3
mov ecx [ ebp - 0x25c ]
jmp [ utf::string::~string@IAT ]
sub_41b4af
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x2b4 ]
xor ecx eax
call sub_401736
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41b4e0
mov ecx [ ebp - 0x10 ]
jmp sub_40cee0
sub_41b4e8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41b510
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41b530
mov ecx [ ebp - 0x14 ]
jmp sub_40cee0
sub_41b538
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41b560
mov ecx [ ebp - 0x14 ]
jmp sub_40cee0
sub_41b568
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41b590
mov ecx [ ebp - 0x10 ]
jmp sub_40cee0
sub_41b598
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41b5c0
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
mov edx [ ebp + 0x8 ]
lea eax [ ecx + edx * 4 ]
push eax
mov ecx [ ebp - 0x14 ]
push ecx
call sub_4026c0
add esp 0x8
retn
sub_41b5d9
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41b600
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41b620
lea ecx [ ebp + 0x8 ]
jmp sub_4026c0
sub_41b628
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41b650
lea ecx [ ebp - 0x48 ]
jmp sub_4026c0
sub_41b658
lea ecx [ ebp - 0x24 ]
jmp sub_40d090
sub_41b660
lea ecx [ ebp - 0x40 ]
jmp sub_40cf30
sub_41b668
lea ecx [ ebp - 0x54 ]
jmp sub_40cf30
sub_41b670
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x98 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41b690
lea ecx [ ebp + 0x8 ]
jmp sub_4026c0
sub_41b698
lea ecx [ ebp - 0x14 ]
jmp sub_40d160
sub_41b6a0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41b6c0
lea ecx [ ebp - 0x14 ]
jmp sub_402dc0
sub_41b6c8
lea ecx [ ebp - 0x14 ]
jmp sub_4043c0
sub_41b6d0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41b6f0
mov eax [ ebp - 0x14 ]
push eax
call sub_40cef0
pop ecx
retn
sub_41b6fb
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41b720
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41b740
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41b760
lea ecx [ ebp - 0x30 ]
jmp sub_40cf30
sub_41b768
lea ecx [ ebp + 0x8 ]
jmp sub_4026c0
sub_41b770
lea ecx [ ebp - 0x30 ]
jmp sub_40cf30
sub_41b778
lea ecx [ ebp - 0x30 ]
jmp sub_40cf30
sub_41b780
lea ecx [ ebp - 0x24 ]
jmp sub_40cf30
sub_41b788
lea ecx [ ebp - 0x24 ]
jmp sub_40cf30
sub_41b790
lea ecx [ ebp - 0x30 ]
jmp sub_40cf30
sub_41b798
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x44 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41b7c0
lea ecx [ ebp - 0x3c ]
jmp sub_40cf30
sub_41b7c8
lea ecx [ ebp - 0x30 ]
jmp sub_40d070
sub_41b7d0
lea ecx [ ebp - 0x28 ]
jmp sub_40d070
sub_41b7d8
lea ecx [ ebp - 0x48 ]
jmp sub_40cf30
sub_41b7e0
lea ecx [ ebp - 0x20 ]
jmp sub_40d070
sub_41b7e8
lea ecx [ ebp - 0x48 ]
jmp sub_40cee0
sub_41b7f0
lea ecx [ ebp - 0x3c ]
jmp sub_40cee0
sub_41b7f8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x7c ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41b820
mov ecx [ ebp - 0x10 ]
jmp sub_40c480
sub_41b828
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41b850
lea ecx [ ebp - 0x14 ]
jmp sub_402dc0
sub_41b858
lea ecx [ ebp - 0x14 ]
jmp sub_4043c0
sub_41b860
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41b880
mov ecx [ ebp - 0x10 ]
jmp sub_404660
sub_41b888
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41b8b0
mov ecx [ ebp - 0x10 ]
jmp sub_404660
sub_41b8b8
mov ecx [ ebp - 0x10 ]
jmp sub_40c480
sub_41b8c0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41b8e0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41b900
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41b920
lea ecx [ ebp - 0x38 ]
jmp sub_40cf30
sub_41b928
lea ecx [ ebp - 0x60 ]
jmp sub_40ef80
sub_41b930
lea ecx [ ebp - 0x20 ]
jmp sub_4026c0
sub_41b938
lea ecx [ ebp - 0x1c ]
jmp sub_40d400
sub_41b940
lea ecx [ ebp + 0x1c ]
jmp sub_402a40
sub_41b948
lea ecx [ ebp - 0x24 ]
jmp sub_402a40
sub_41b950
lea ecx [ ebp - 0x2c ]
jmp sub_40d160
sub_41b958
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x64 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41b980
mov ecx [ ebp - 0x10 ]
jmp sub_404610
sub_41b988
mov ecx [ ebp - 0x10 ]
jmp sub_405870
sub_41b990
mov ecx [ ebp - 0x10 ]
add ecx 0x28
jmp sub_401fd0
sub_41b99b
mov ecx [ ebp - 0x10 ]
add ecx 0x34
jmp [ sigc::trackable::~trackable@IAT ]
sub_41b9a7
mov ecx [ ebp - 0x10 ]
add ecx 0x38
jmp sub_406ff0
sub_41b9b2
mov ecx [ ebp - 0x10 ]
add ecx 0x58
jmp sub_40ef80
sub_41b9bd
mov ecx [ ebp - 0x10 ]
add ecx 0x70
jmp sub_402a40
sub_41b9c8
mov ecx [ ebp - 0x10 ]
add ecx 0x74
jmp sub_401ff0
sub_41b9d3
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41b9f0
mov ecx [ ebp - 0x10 ]
jmp sub_40d400
sub_41b9f8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41ba20
lea ecx [ ebp - 0x20 ]
jmp sub_40fa20
sub_41ba28
lea ecx [ ebp - 0x14 ]
jmp sub_402a40
sub_41ba30
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x34 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41ba50
lea ecx [ ebp - 0x14 ]
jmp sub_40fa20
sub_41ba58
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x4c ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41ba80
lea ecx [ ebp - 0x14 ]
jmp sub_40d400
sub_41ba88
lea ecx [ ebp - 0x10 ]
jmp sub_402a40
sub_41ba90
lea ecx [ ebp - 0x38 ]
jmp sub_40d160
sub_41ba98
lea ecx [ ebp - 0x30 ]
jmp sub_40d080
sub_41baa0
mov ecx [ ebp - 0x28 ]
jmp sub_4026c0
sub_41baa8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x88 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41bad0
lea ecx [ ebp - 0x4c ]
jmp sub_40fa20
sub_41bad8
lea ecx [ ebp - 0x64 ]
jmp sub_40d160
sub_41bae0
lea ecx [ ebp - 0x74 ]
jmp sub_40d080
sub_41bae8
lea ecx [ ebp - 0x8c ]
jmp sub_40d090
sub_41baf3
lea ecx [ ebp - 0x34 ]
jmp [ utf::string::~string@IAT ]
sub_41bafc
lea ecx [ ebp - 0x34 ]
jmp [ utf::string::~string@IAT ]
sub_41bb05
mov ecx [ ebp - 0x3c ]
jmp [ utf::string::~string@IAT ]
sub_41bb0e
mov ecx [ ebp - 0x3c ]
jmp [ utf::string::~string@IAT ]
sub_41bb17
lea ecx [ ebp - 0x4c ]
jmp sub_40d400
sub_41bb1f
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xa0 ]
xor ecx eax
call sub_401736
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41bb50
mov ecx [ ebp + 0x18 ]
jmp sub_4026c0
sub_41bb58
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41bb80
lea ecx [ ebp - 0x14 ]
jmp sub_410e70
sub_41bb88
lea ecx [ ebp - 0x14 ]
jmp sub_410d60
sub_41bb90
lea ecx [ ebp - 0x14 ]
jmp [ sigc::slot_base::~slot_base@IAT ]
sub_41bb99
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41bbc0
mov ecx [ ebp - 0x10 ]
jmp [ sigc::slot_base::~slot_base@IAT ]
sub_41bbc9
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41bbf0
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp - 0x14 ]
add ecx 0xc
jmp [ sigc::trackable::~trackable@IAT ]
sub_41bc0d
mov ecx [ ebp - 0x14 ]
jmp [ cui::ipc::Dispatch::~Dispatch@IAT ]
sub_41bc16
mov eax [ ebp + 0xc ]
push eax
call ??3@YAXPAX@Z
pop ecx
retn
sub_41bc21
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41bc40
mov ecx [ ebp - 0x10 ]
jmp sub_410d60
sub_41bc48
mov ecx [ ebp - 0x10 ]
jmp [ sigc::slot_base::~slot_base@IAT ]
sub_41bc51
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41bc70
mov ecx [ ebp - 0x10 ]
jmp [ cui::ipc::Dispatch::~Dispatch@IAT ]
sub_41bc79
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41bca0
lea ecx [ ebp + 0x50 ]
jmp sub_410e70
sub_41bca8
lea ecx [ ebp + 0x30 ]
jmp sub_406af0
sub_41bcb0
lea ecx [ ebp + 0xc ]
jmp [ utf::string::~string@IAT ]
sub_41bcb9
lea ecx [ ebp - 0x30 ]
jmp [ utf::string::~string@IAT ]
sub_41bcc2
lea ecx [ ebp + 0x50 ]
jmp sub_410d60
sub_41bcca
lea ecx [ ebp + 0x50 ]
jmp [ sigc::slot_base::~slot_base@IAT ]
sub_41bcd3
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41bcf0
lea ecx [ ebp - 0x38 ]
jmp sub_406af0
sub_41bcf8
lea ecx [ ebp - 0x5c ]
jmp [ utf::string::~string@IAT ]
sub_41bd01
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
call sub_4026c0
add esp 0x8
retn
sub_41bd12
mov ecx [ ebp + 0x8 ]
jmp sub_406af0
sub_41bd1a
mov ecx [ ebp + 0xc ]
jmp [ utf::string::~string@IAT ]
sub_41bd23
lea ecx [ ebp - 0x38 ]
jmp sub_4121b0
sub_41bd2b
lea ecx [ ebp - 0x38 ]
jmp sub_404660
sub_41bd33
lea ecx [ ebp - 0x38 ]
jmp sub_40c480
sub_41bd3b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x60 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41bd60
mov ecx [ ebp - 0x10 ]
add ecx 0x4
jmp [ sigc::trackable::~trackable@IAT ]
sub_41bd6c
mov ecx [ ebp - 0x10 ]
add ecx 0x8
jmp sub_411960
sub_41bd77
mov ecx [ ebp - 0x10 ]
add ecx 0x10
jmp sub_411960
sub_41bd82
mov ecx [ ebp - 0x10 ]
add ecx 0x18
jmp sub_411960
sub_41bd8d
mov ecx [ ebp - 0x10 ]
add ecx 0x20
jmp sub_411960
sub_41bd98
mov ecx [ ebp - 0x10 ]
add ecx 0x28
jmp sub_411960
sub_41bda3
mov ecx [ ebp - 0x10 ]
add ecx 0x38
jmp [ utf::string::~string@IAT ]
sub_41bdaf
mov ecx [ ebp - 0x10 ]
add ecx 0x5c
jmp [ utf::string::~string@IAT ]
sub_41bdbb
mov ecx [ ebp - 0x10 ]
add ecx 0x80
jmp [ utf::string::~string@IAT ]
sub_41bdca
mov ecx [ ebp - 0x10 ]
add ecx 0xa4
jmp [ utf::string::~string@IAT ]
sub_41bdd9
mov ecx [ ebp - 0x14 ]
jmp sub_4079f0
sub_41bde1
mov ecx [ ebp - 0x14 ]
jmp [ sigc::signal_base::~signal_base@IAT ]
sub_41bdea
mov ecx [ ebp - 0x14 ]
jmp sub_4079f0
sub_41bdf2
mov ecx [ ebp - 0x14 ]
jmp [ sigc::signal_base::~signal_base@IAT ]
sub_41bdfb
mov ecx [ ebp - 0x14 ]
jmp sub_4079f0
sub_41be03
mov ecx [ ebp - 0x14 ]
jmp [ sigc::signal_base::~signal_base@IAT ]
sub_41be0c
mov ecx [ ebp - 0x14 ]
jmp sub_4079f0
sub_41be14
mov ecx [ ebp - 0x14 ]
jmp [ sigc::signal_base::~signal_base@IAT ]
sub_41be1d
mov ecx [ ebp - 0x14 ]
jmp sub_4079f0
sub_41be25
mov ecx [ ebp - 0x14 ]
jmp [ sigc::signal_base::~signal_base@IAT ]
sub_41be2e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41be50
mov ecx [ ebp - 0x10 ]
add ecx 0x4
jmp [ sigc::trackable::~trackable@IAT ]
sub_41be5c
mov ecx [ ebp - 0x14 ]
jmp [ sigc::signal_base::~signal_base@IAT ]
sub_41be65
mov ecx [ ebp - 0x14 ]
jmp sub_4079f0
sub_41be6d
mov ecx [ ebp - 0x10 ]
add ecx 0x8
jmp sub_411960
sub_41be78
mov ecx [ ebp - 0x14 ]
jmp [ sigc::signal_base::~signal_base@IAT ]
sub_41be81
mov ecx [ ebp - 0x14 ]
jmp sub_4079f0
sub_41be89
mov ecx [ ebp - 0x10 ]
add ecx 0x10
jmp sub_411960
sub_41be94
mov ecx [ ebp - 0x14 ]
jmp [ sigc::signal_base::~signal_base@IAT ]
sub_41be9d
mov ecx [ ebp - 0x14 ]
jmp sub_4079f0
sub_41bea5
mov ecx [ ebp - 0x10 ]
add ecx 0x18
jmp sub_411960
sub_41beb0
mov ecx [ ebp - 0x14 ]
jmp [ sigc::signal_base::~signal_base@IAT ]
sub_41beb9
mov ecx [ ebp - 0x14 ]
jmp sub_4079f0
sub_41bec1
mov ecx [ ebp - 0x10 ]
add ecx 0x20
jmp sub_411960
sub_41becc
mov ecx [ ebp - 0x14 ]
jmp [ sigc::signal_base::~signal_base@IAT ]
sub_41bed5
mov ecx [ ebp - 0x14 ]
jmp sub_4079f0
sub_41bedd
mov ecx [ ebp - 0x10 ]
add ecx 0x28
jmp sub_411960
sub_41bee8
mov ecx [ ebp - 0x10 ]
add ecx 0x38
jmp [ utf::string::~string@IAT ]
sub_41bef4
mov ecx [ ebp - 0x10 ]
add ecx 0x5c
jmp [ utf::string::~string@IAT ]
sub_41bf00
mov ecx [ ebp - 0x10 ]
add ecx 0x80
jmp [ utf::string::~string@IAT ]
sub_41bf0f
mov ecx [ ebp - 0x10 ]
add ecx 0xa4
jmp [ utf::string::~string@IAT ]
sub_41bf1e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41bf40
mov ecx [ ebp + 0x8 ]
jmp [ utf::string::~string@IAT ]
sub_41bf49
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41bf70
mov ecx [ ebp + 0x8 ]
jmp [ utf::string::~string@IAT ]
sub_41bf79
mov ecx [ ebp + 0x8 ]
jmp [ utf::string::~string@IAT ]
sub_41bf82
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41bfa0
mov ecx [ ebp - 0x10 ]
jmp [ utf::string::~string@IAT ]
sub_41bfa9
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41bfd0
mov ecx [ ebp - 0x10 ]
jmp sub_4079f0
sub_41bfd8
mov ecx [ ebp - 0x10 ]
jmp [ sigc::signal_base::~signal_base@IAT ]
sub_41bfe1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41c000
mov ecx [ ebp - 0x10 ]
jmp sub_411730
sub_41c008
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41c030
mov ecx [ ebp - 0x10 ]
jmp sub_411730
sub_41c038
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41c060
mov ecx [ ebp - 0x10 ]
add ecx 0xc
jmp sub_407ac0
sub_41c06b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41c090
lea ecx [ ebp - 0x30 ]
jmp sub_411a90
sub_41c098
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x34 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41c0c0
lea ecx [ ebp - 0x28 ]
jmp [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_41c0c9
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x4c ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41c0f0
mov ecx [ ebp - 0x10 ]
jmp sub_404660
sub_41c0f8
mov ecx [ ebp - 0x10 ]
jmp sub_40c480
sub_41c100
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41c120
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41c140
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41c160
mov eax [ ebp - 0x14 ]
push eax
mov ecx [ ebp - 0x18 ]
push ecx
call sub_4026c0
add esp 0x8
retn
sub_41c171
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41c190
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41c1b0
mov ecx [ ebp - 0x10 ]
jmp sub_4121b0
sub_41c1b8
mov ecx [ ebp - 0x10 ]
jmp sub_404660
sub_41c1c0
mov ecx [ ebp - 0x10 ]
jmp sub_40c480
sub_41c1c8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41c1f0
lea ecx [ ebp - 0x34 ]
jmp [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_41c1f9
mov ecx [ ebp - 0x14 ]
add ecx 0xc
jmp sub_407ac0
sub_41c204
mov ecx [ ebp - 0x18 ]
jmp [ utf::string::~string@IAT ]
sub_41c20d
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x60 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41c230
mov ecx [ ebp + 0x8 ]
add ecx 0xc
jmp sub_407ac0
sub_41c23b
mov ecx [ ebp + 0x8 ]
jmp [ utf::string::~string@IAT ]
sub_41c244
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41c260
mov ecx [ ebp - 0x10 ]
jmp sub_4125b0
sub_41c268
mov ecx [ ebp - 0x10 ]
jmp sub_4121b0
sub_41c270
mov ecx [ ebp - 0x10 ]
jmp sub_404660
sub_41c278
mov ecx [ ebp - 0x10 ]
jmp sub_40c480
sub_41c280
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41c2a0
lea ecx [ ebp + 0x8 ]
jmp [ sigc::internal::signal_exec::~signal_exec@IAT ]
sub_41c2a9
lea ecx [ ebp - 0x18 ]
jmp sub_409440
sub_41c2b1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41c2d0
mov ecx [ ebp - 0x10 ]
jmp sub_4125b0
sub_41c2d8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41c300
lea ecx [ ebp - 0x44 ]
jmp sub_407ac0
sub_41c308
lea ecx [ ebp - 0x44 ]
jmp [ utf::string::~string@IAT ]
sub_41c311
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x48 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41c330
mov ecx [ ebp - 0x10 ]
jmp sub_412cc0
sub_41c338
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41c360
lea ecx [ ebp - 0xf0 ]
jmp [ std::basic_ostringstream<char,struct std::char_traits<char>,class std::allocator<char> >::`vector deleting destructor'@IAT ]
sub_41c36c
lea ecx [ ebp - 0x70 ]
jmp [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_41c375
lea ecx [ ebp - 0x34 ]
jmp [ utf::string::~string@IAT ]
sub_41c37e
mov eax [ ebp - 0x38 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x38 ] 0xfffffffe
mov ecx [ ebp - 0x54 ]
jmp [ utf::string::~string@IAT ]
sub_41c398
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xf4 ]
xor ecx eax
call sub_401736
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41c3c0
mov ecx [ ebp - 0x10 ]
add ecx 0x8
jmp sub_406af0
sub_41c3cb
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41c3f0
mov ecx [ ebp - 0x10 ]
jmp sub_413730
sub_41c3f8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41c420
lea ecx [ ebp - 0x60 ]
jmp [ utf::string::~string@IAT ]
sub_41c429
lea ecx [ ebp - 0x34 ]
jmp [ utf::string::~string@IAT ]
sub_41c432
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x64 ]
xor ecx eax
call sub_401736
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41c460
mov ecx [ ebp - 0x14 ]
jmp sub_413730
sub_41c468
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41c490
mov ecx [ ebp - 0x10 ]
add ecx 0x8
jmp sub_406af0
sub_41c49b
mov ecx [ ebp - 0x10 ]
jmp sub_4121b0
sub_41c4a3
mov ecx [ ebp - 0x10 ]
jmp sub_404660
sub_41c4ab
mov ecx [ ebp - 0x10 ]
jmp sub_40c480
sub_41c4b3
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41c4d0
mov ecx [ ebp - 0x14 ]
jmp [ sigc::slot_base::~slot_base@IAT ]
sub_41c4d9
mov ecx [ ebp - 0x14 ]
jmp sub_410d60
sub_41c4e1
mov ecx [ ebp - 0x10 ]
jmp sub_410e70
sub_41c4e9
mov ecx [ ebp + 0x10 ]
jmp sub_406af0
sub_41c4f1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41c510
lea ecx [ ebp - 0x30 ]
jmp sub_406af0
sub_41c518
lea ecx [ ebp - 0x78 ]
jmp [ utf::string::~string@IAT ]
sub_41c521
lea ecx [ ebp - 0x54 ]
jmp [ utf::string::~string@IAT ]
sub_41c52a
lea ecx [ ebp - 0x78 ]
jmp [ utf::string::~string@IAT ]
sub_41c533
lea ecx [ ebp - 0x54 ]
jmp [ utf::string::~string@IAT ]
sub_41c53c
lea ecx [ ebp - 0x78 ]
jmp [ utf::string::~string@IAT ]
sub_41c545
lea ecx [ ebp - 0x54 ]
jmp [ utf::string::~string@IAT ]
sub_41c54e
lea ecx [ ebp - 0x78 ]
jmp [ utf::string::~string@IAT ]
sub_41c557
lea ecx [ ebp - 0x54 ]
jmp [ utf::string::~string@IAT ]
sub_41c560
mov ecx [ ebp + 0xc ]
jmp sub_406af0
sub_41c568
mov ecx [ ebp + 0x10 ]
jmp [ utf::string::~string@IAT ]
sub_41c571
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x7c ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41c590
lea ecx [ ebp + 0x10 ]
jmp [ utf::string::~string@IAT ]
sub_41c599
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41c5c0
mov ecx [ ebp - 0x10 ]
jmp sub_4125b0
sub_41c5c8
mov ecx [ ebp - 0x10 ]
jmp sub_4121b0
sub_41c5d0
mov ecx [ ebp - 0x10 ]
jmp sub_404660
sub_41c5d8
mov ecx [ ebp - 0x10 ]
jmp sub_40c480
sub_41c5e0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41c600
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41c620
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x2c ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41c640
mov ecx [ ebp - 0x14 ]
jmp sub_4125b0
sub_41c648
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41c670
mov ecx [ ebp - 0x10 ]
jmp [ utf::string::~string@IAT ]
sub_41c679
mov ecx [ ebp - 0x10 ]
add ecx 0x24
jmp sub_4143d0
sub_41c684
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41c6a0
lea ecx [ ebp - 0x18 ]
jmp sub_410d60
sub_41c6a8
lea ecx [ ebp - 0x18 ]
jmp sub_410e70
sub_41c6b0
lea ecx [ ebp - 0x18 ]
jmp sub_410d60
sub_41c6b8
lea ecx [ ebp - 0x18 ]
jmp [ sigc::slot_base::~slot_base@IAT ]
sub_41c6c1
lea ecx [ ebp - 0x18 ]
jmp sub_410d60
sub_41c6c9
lea ecx [ ebp - 0x18 ]
jmp sub_410e70
sub_41c6d1
lea ecx [ ebp - 0x18 ]
jmp sub_410d60
sub_41c6d9
lea ecx [ ebp - 0x18 ]
jmp [ sigc::slot_base::~slot_base@IAT ]
sub_41c6e2
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x3c ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41c700
mov ecx [ ebp - 0x10 ]
jmp [ utf::string::~string@IAT ]
sub_41c709
mov ecx [ ebp - 0x10 ]
add ecx 0x24
jmp sub_4143d0
sub_41c714
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41c730
lea ecx [ ebp - 0x34 ]
jmp [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_41c739
mov ecx [ ebp - 0x14 ]
add ecx 0xc
jmp sub_414440
sub_41c744
mov ecx [ ebp - 0x18 ]
jmp [ utf::string::~string@IAT ]
sub_41c74d
mov ecx [ ebp - 0x18 ]
add ecx 0x24
jmp sub_4143d0
sub_41c758
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x60 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41c780
mov ecx [ ebp + 0x8 ]
add ecx 0xc
jmp sub_414440
sub_41c78b
mov ecx [ ebp + 0x8 ]
jmp [ utf::string::~string@IAT ]
sub_41c794
mov ecx [ ebp + 0x8 ]
add ecx 0x24
jmp sub_4143d0
sub_41c79f
mov ecx [ ebp - 0x14 ]
jmp sub_4125b0
sub_41c7a7
mov ecx [ ebp - 0x14 ]
jmp sub_4121b0
sub_41c7af
mov ecx [ ebp - 0x14 ]
jmp sub_404660
sub_41c7b7
mov ecx [ ebp - 0x14 ]
jmp sub_40c480
sub_41c7bf
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41c7e0
mov ecx [ ebp - 0x10 ]
add ecx 0xc
jmp sub_414440
sub_41c7eb
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41c810
mov eax [ ebp - 0x14 ]
push eax
mov ecx [ ebp - 0x18 ]
push ecx
call sub_4026c0
add esp 0x8
retn
sub_41c821
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41c840
mov ecx [ ebp - 0x10 ]
jmp sub_415180
sub_41c848
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41c870
mov ecx [ ebp - 0x10 ]
jmp [ cui::ipc::Dispatch::~Dispatch@IAT ]
sub_41c879
mov ecx [ ebp - 0x10 ]
add ecx 0xc
jmp sub_411960
sub_41c884
mov ecx [ ebp - 0x10 ]
add ecx 0x14
jmp sub_411960
sub_41c88f
mov ecx [ ebp - 0x10 ]
add ecx 0x1c
jmp sub_411960
sub_41c89a
mov ecx [ ebp - 0x10 ]
add ecx 0x24
jmp sub_411960
sub_41c8a5
mov ecx [ ebp - 0x10 ]
add ecx 0x30
jmp sub_406ff0
sub_41c8b0
mov ecx [ ebp - 0x10 ]
add ecx 0x50
jmp sub_413c00
sub_41c8bb
mov ecx [ ebp - 0x10 ]
add ecx 0x70
jmp sub_415380
sub_41c8c6
mov ecx [ ebp - 0x14 ]
jmp sub_415180
sub_41c8ce
mov ecx [ ebp - 0x14 ]
jmp sub_413730
sub_41c8d6
mov ecx [ ebp - 0x14 ]
jmp sub_406f60
sub_41c8de
mov ecx [ ebp - 0x14 ]
jmp sub_4079f0
sub_41c8e6
mov ecx [ ebp - 0x14 ]
jmp [ sigc::signal_base::~signal_base@IAT ]
sub_41c8ef
mov ecx [ ebp - 0x14 ]
jmp sub_4079f0
sub_41c8f7
mov ecx [ ebp - 0x14 ]
jmp [ sigc::signal_base::~signal_base@IAT ]
sub_41c900
mov ecx [ ebp - 0x14 ]
jmp sub_4079f0
sub_41c908
mov ecx [ ebp - 0x14 ]
jmp [ sigc::signal_base::~signal_base@IAT ]
sub_41c911
mov ecx [ ebp - 0x14 ]
jmp sub_4079f0
sub_41c919
mov ecx [ ebp - 0x14 ]
jmp [ sigc::signal_base::~signal_base@IAT ]
sub_41c922
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41c940
mov ecx [ ebp - 0x14 ]
jmp sub_415180
sub_41c948
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41c970
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp - 0x14 ]
add ecx 0x90
jmp [ sigc::trackable::~trackable@IAT ]
sub_41c990
mov ecx [ ebp - 0x14 ]
jmp [ cui::ipc::Dispatch::~Dispatch@IAT ]
sub_41c999
mov ecx [ ebp + 0x8 ]
jmp [ sigc::signal_base::~signal_base@IAT ]
sub_41c9a2
mov ecx [ ebp + 0x8 ]
jmp sub_4079f0
sub_41c9aa
mov ecx [ ebp - 0x14 ]
add ecx 0xc
jmp sub_411960
sub_41c9b5
mov ecx [ ebp + 0x8 ]
jmp [ sigc::signal_base::~signal_base@IAT ]
sub_41c9be
mov ecx [ ebp + 0x8 ]
jmp sub_4079f0
sub_41c9c6
mov ecx [ ebp - 0x14 ]
add ecx 0x14
jmp sub_411960
sub_41c9d1
mov ecx [ ebp + 0x8 ]
jmp [ sigc::signal_base::~signal_base@IAT ]
sub_41c9da
mov ecx [ ebp + 0x8 ]
jmp sub_4079f0
sub_41c9e2
mov ecx [ ebp - 0x14 ]
add ecx 0x1c
jmp sub_411960
sub_41c9ed
mov ecx [ ebp + 0x8 ]
jmp [ sigc::signal_base::~signal_base@IAT ]
sub_41c9f6
mov ecx [ ebp + 0x8 ]
jmp sub_4079f0
sub_41c9fe
mov ecx [ ebp - 0x14 ]
add ecx 0x24
jmp sub_411960
sub_41ca09
mov ecx [ ebp - 0x14 ]
add ecx 0x30
jmp sub_406ff0
sub_41ca14
mov ecx [ ebp - 0x14 ]
add ecx 0x50
jmp sub_413c00
sub_41ca1f
mov ecx [ ebp - 0x14 ]
add ecx 0x70
jmp sub_415380
sub_41ca2a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41ca50
lea ecx [ ebp - 0x30 ]
jmp sub_4143d0
sub_41ca58
lea ecx [ ebp - 0x70 ]
jmp sub_414440
sub_41ca60
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x74 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41ca80
lea ecx [ ebp - 0x38 ]
jmp sub_4143d0
sub_41ca88
mov ecx [ ebp + 0x8 ]
jmp sub_406af0
sub_41ca90
mov ecx [ ebp + 0xc ]
jmp [ utf::string::~string@IAT ]
sub_41ca99
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x3c ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41cac0
mov eax [ ebp - 0x14 ]
push eax
call ??3@YAXPAX@Z
pop ecx
retn
sub_41cacb
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41caf0
lea ecx [ ebp + 0x50 ]
jmp sub_410e70
sub_41caf8
lea ecx [ ebp + 0x30 ]
jmp sub_406af0
sub_41cb00
lea ecx [ ebp + 0xc ]
jmp [ utf::string::~string@IAT ]
sub_41cb09
lea ecx [ ebp - 0x38 ]
jmp [ utf::string::~string@IAT ]
sub_41cb12
lea ecx [ ebp + 0x50 ]
jmp sub_410d60
sub_41cb1a
lea ecx [ ebp + 0x50 ]
jmp [ sigc::slot_base::~slot_base@IAT ]
sub_41cb23
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x44 ]
xor ecx eax
call sub_401736
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41cb50
mov ecx [ ebp - 0x10 ]
jmp [ sigc::slot_base::~slot_base@IAT ]
sub_41cb59
mov ecx [ ebp - 0x10 ]
jmp sub_410d60
sub_41cb61
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41cb80
mov ecx [ ebp - 0x10 ]
jmp sub_416240
sub_41cb88
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41cbb0
mov ecx [ ebp - 0x10 ]
jmp sub_416240
sub_41cbb8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41cbe0
lea ecx [ ebp - 0x220 ]
jmp sub_416310
sub_41cbeb
lea ecx [ ebp - 0x260 ]
jmp [ utf::string::~string@IAT ]
sub_41cbf7
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x2a8 ]
xor ecx eax
call sub_401736
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41cc20
mov ecx [ ebp - 0x10 ]
jmp sub_416d10
sub_41cc28
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41cc50
mov ecx [ ebp - 0x10 ]
jmp sub_416d10
sub_41cc58
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41cc80
mov ecx [ ebp - 0x10 ]
add ecx 0x20
jmp sub_407ac0
sub_41cc8b
mov ecx [ ebp - 0x10 ]
jmp [ utf::string::~string@IAT ]
sub_41cc94
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41ccb0
mov ecx [ ebp - 0x10 ]
jmp sub_4167b0
sub_41ccb8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41cce0
mov ecx [ ebp + 0x8 ]
jmp [ utf::string::~string@IAT ]
sub_41cce9
mov ecx [ ebp - 0x10 ]
add ecx 0x20
jmp sub_407ac0
sub_41ccf4
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41cd10
mov ecx [ ebp - 0x10 ]
jmp [ utf::string::~string@IAT ]
sub_41cd19
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41cd40
mov eax [ ebp - 0x10 ]
push eax
call ??3@YAXPAX@Z
pop ecx
retn
sub_41cd4b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41cd70
lea ecx [ ebp - 0x1c ]
jmp sub_416d10
sub_41cd78
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41cda0
mov ecx [ ebp - 0x10 ]
jmp sub_4167b0
sub_41cda8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41cdd0
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp - 0x14 ]
add ecx 0x14
jmp [ sigc::trackable::~trackable@IAT ]
sub_41cded
mov eax [ ebp - 0x10 ]
and eax 0x2
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffd
mov ecx [ ebp - 0x14 ]
add ecx 0x1c
jmp [ cui::ipc::Connection::~Connection@IAT ]
sub_41ce0a
mov eax [ ebp - 0x10 ]
and eax 0x4
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffb
mov ecx [ ebp - 0x14 ]
add ecx 0xb0
jmp sub_407fe0
sub_41ce29
mov ecx [ ebp + 0x8 ]
jmp sub_4167b0
sub_41ce31
mov ecx [ ebp - 0x14 ]
add ecx 0xc
jmp sub_4168b0
sub_41ce3c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41ce60
mov ecx [ ebp - 0x10 ]
jmp sub_4168b0
sub_41ce68
mov ecx [ ebp - 0x10 ]
jmp sub_4167b0
sub_41ce70
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41ce90
lea ecx [ ebp + 0x14 ]
jmp sub_410e70
sub_41ce98
lea ecx [ ebp + 0xc ]
jmp sub_410e70
sub_41cea0
lea ecx [ ebp - 0xc8 ]
jmp [ utf::string::~string@IAT ]
sub_41ceac
mov ecx [ ebp - 0xd0 ]
jmp [ utf::string::~string@IAT ]
sub_41ceb8
mov ecx [ ebp - 0xd0 ]
jmp [ utf::string::~string@IAT ]
sub_41cec4
lea ecx [ ebp - 0xf8 ]
jmp [ utf::string::~string@IAT ]
sub_41ced0
lea ecx [ ebp - 0x78 ]
jmp [ cui::Error::~Error@IAT ]
sub_41ced9
lea ecx [ ebp + 0xc ]
jmp sub_410d60
sub_41cee1
lea ecx [ ebp + 0xc ]
jmp [ sigc::slot_base::~slot_base@IAT ]
sub_41ceea
lea ecx [ ebp + 0x14 ]
jmp sub_410d60
sub_41cef2
lea ecx [ ebp + 0x14 ]
jmp [ sigc::slot_base::~slot_base@IAT ]
sub_41cefb
lea ecx [ ebp - 0xf8 ]
jmp [ utf::string::~string@IAT ]
sub_41cf07
lea ecx [ ebp - 0x78 ]
jmp [ cui::Error::~Error@IAT ]
sub_41cf10
lea ecx [ ebp - 0xf8 ]
jmp [ utf::string::~string@IAT ]
sub_41cf1c
lea ecx [ ebp - 0xf8 ]
jmp [ utf::string::~string@IAT ]
sub_41cf28
lea ecx [ ebp - 0x78 ]
jmp [ cui::Error::~Error@IAT ]
sub_41cf31
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xfc ]
xor ecx eax
call sub_401736
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41cf60
mov ecx [ ebp - 0x10 ]
jmp sub_4168b0
sub_41cf68
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41cf90
lea ecx [ ebp + 0x18 ]
jmp [ utf::string::~string@IAT ]
sub_41cf99
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp - 0x14 ]
jmp sub_416950
sub_41cfb2
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41cfd0
mov eax [ ebp - 0x14 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x14 ] 0xfffffffe
mov ecx [ ebp + 0x8 ]
jmp sub_417570
sub_41cfe9
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41d010
mov ecx [ ebp - 0x14 ]
sub ecx 0x10
jmp sub_4168b0
sub_41d01b
lea ecx [ ebp - 0x18 ]
jmp sub_417570
sub_41d023
lea ecx [ ebp - 0x40 ]
jmp [ utf::string::~string@IAT ]
sub_41d02c
mov ecx [ ebp - 0x18 ]
jmp sub_4167b0
sub_41d034
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x44 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41d050
lea ecx [ ebp - 0x14 ]
jmp sub_4168b0
sub_41d058
lea ecx [ ebp - 0x24 ]
jmp sub_417570
sub_41d060
lea ecx [ ebp - 0x80 ]
jmp [ utf::string::~string@IAT ]
sub_41d069
lea ecx [ ebp - 0x18 ]
jmp sub_4168b0
sub_41d071
lea ecx [ ebp - 0x1c ]
jmp sub_416f00
sub_41d079
lea ecx [ ebp - 0x5c ]
jmp sub_416d10
sub_41d081
push sub_416d10
push 0x1
push 0x10
lea eax [ ebp - 0x4c ]
push eax
call sub_419460
retn
sub_41d094
lea ecx [ ebp + 0x8 ]
jmp sub_417570
sub_41d09c
lea ecx [ ebp - 0x80 ]
jmp [ utf::string::~string@IAT ]
sub_41d0a5
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x84 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41d0d0
lea ecx [ ebp - 0x14 ]
jmp sub_417570
sub_41d0d8
lea ecx [ ebp - 0x3c ]
jmp [ utf::string::~string@IAT ]
sub_41d0e1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x40 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41d100
mov ecx [ ebp - 0x10 ]
jmp [ sigc::internal::slot_rep::~slot_rep@IAT ]
sub_41d109
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41d130
mov ecx [ ebp + 0x8 ]
add ecx 0x20
jmp sub_407ac0
sub_41d13b
mov ecx [ ebp + 0x8 ]
jmp [ utf::string::~string@IAT ]
sub_41d144
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41d160
mov ecx [ ebp - 0x10 ]
jmp [ sigc::internal::slot_rep::~slot_rep@IAT ]
sub_41d169
mov ecx [ ebp - 0x10 ]
add ecx 0x18
jmp sub_416950
sub_41d174
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41d190
mov ecx [ ebp - 0x10 ]
jmp [ sigc::internal::slot_rep::~slot_rep@IAT ]
sub_41d199
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41d1c0
mov eax [ ebp - 0x10 ]
push eax
call [ sigc::internal::slot_rep::operator delete@IAT ]
pop ecx
retn
sub_41d1cc
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41d1f0
mov eax [ ebp - 0x14 ]
push eax
call [ sigc::internal::slot_rep::operator delete@IAT ]
pop ecx
retn
sub_41d1fc
mov ecx [ ebp - 0x10 ]
jmp [ sigc::slot_base::~slot_base@IAT ]
sub_41d205
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41d220
mov ecx [ ebp - 0x10 ]
jmp [ sigc::internal::slot_rep::~slot_rep@IAT ]
sub_41d229
mov ecx [ ebp - 0x10 ]
add ecx 0x18
jmp sub_416950
sub_41d234
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41d250
mov eax [ ebp - 0x1c ]
push eax
call ??3@YAXPAX@Z
pop ecx
retn
sub_41d25b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41d280
mov ecx [ ebp - 0x10 ]
jmp sub_410d60
sub_41d288
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41d2b0
lea ecx [ ebp + 0x10 ]
jmp [ utf::string::~string@IAT ]
sub_41d2b9
lea ecx [ ebp - 0x4c ]
jmp sub_416d10
sub_41d2c1
push sub_416d10
push 0x3
push 0x10
lea eax [ ebp - 0x84 ]
push eax
call sub_419460
retn
sub_41d2d7
lea ecx [ ebp - 0x14 ]
jmp sub_416870
sub_41d2df
mov ecx [ ebp - 0x14 ]
jmp [ utf::string::~string@IAT ]
sub_41d2e8
lea ecx [ ebp - 0xf0 ]
jmp sub_416950
sub_41d2f3
lea ecx [ ebp - 0x2c ]
jmp sub_410e70
sub_41d2fb
mov ecx [ ebp - 0x50 ]
jmp sub_410e70
sub_41d303
lea ecx [ ebp - 0x14 ]
jmp sub_417570
sub_41d30b
lea ecx [ ebp - 0xa8 ]
jmp [ utf::string::~string@IAT ]
sub_41d317
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xf4 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41d340
lea ecx [ ebp - 0x1c ]
jmp sub_410e70
sub_41d348
mov ecx [ ebp - 0x14 ]
jmp sub_410e70
sub_41d350
lea ecx [ ebp - 0x10 ]
jmp [ sigc::connection::~connection@IAT ]
sub_41d359
mov ecx [ ebp - 0x14 ]
jmp [ utf::string::~string@IAT ]
sub_41d362
lea ecx [ ebp - 0x1c ]
jmp sub_410d60
sub_41d36a
lea ecx [ ebp - 0x1c ]
jmp [ sigc::slot_base::~slot_base@IAT ]
sub_41d373
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x34 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41d390
lea ecx [ ebp + 0xc ]
jmp [ utf::string::~string@IAT ]
sub_41d399
mov ecx [ ebp - 0x10 ]
jmp [ utf::string::~string@IAT ]
sub_41d3a2
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41d3c0
lea ecx [ ebp - 0x90 ]
jmp sub_416900
sub_41d3cb
lea ecx [ ebp - 0x50 ]
jmp sub_416900
sub_41d3d3
lea ecx [ ebp - 0x80 ]
jmp sub_416900
sub_41d3db
lea ecx [ ebp - 0x38 ]
jmp [ utf::string::~string@IAT ]
sub_41d3e4
lea ecx [ ebp - 0x60 ]
jmp sub_416900
sub_41d3ec
mov ecx [ ebp - 0x3c ]
jmp [ utf::string::~string@IAT ]
sub_41d3f5
lea ecx [ ebp - 0x70 ]
jmp sub_416900
sub_41d3fd
lea ecx [ ebp - 0x3c ]
jmp sub_417570
sub_41d405
lea ecx [ ebp - 0x38 ]
jmp [ utf::string::~string@IAT ]
sub_41d40e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x94 ]
xor ecx eax
call sub_401736
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41d440
mov ecx [ ebp - 0x10 ]
jmp [ utf::string::~string@IAT ]
sub_41d449
mov ecx [ ebp + 0x8 ]
jmp [ utf::string::~string@IAT ]
sub_41d452
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41d470
lea ecx [ ebp + 0xc ]
jmp [ utf::string::~string@IAT ]
sub_41d479
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41d4a0
mov eax [ ebp - 0x14 ]
push eax
call ??3@YAXPAX@Z
pop ecx
retn
sub_41d4ab
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41d4d0
mov ecx [ ebp - 0x10 ]
jmp sub_417570
sub_41d4d8
mov ecx [ ebp - 0x10 ]
add ecx 0x4
jmp sub_418e40
sub_41d4e3
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41d500
mov ecx [ ebp - 0x10 ]
jmp sub_417570
sub_41d508
mov ecx [ ebp - 0x10 ]
add ecx 0x4
jmp sub_418e40
sub_41d513
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41d530
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
lea ecx [ ebp - 0x18 ]
jmp sub_418e70
sub_41d549
mov eax [ ebp - 0x10 ]
and eax 0x2
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0x60 ]
jmp [ utf::string::~string@IAT ]
sub_41d563
mov eax [ ebp - 0x10 ]
and eax 0x4
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffb
lea ecx [ ebp - 0x3c ]
jmp [ utf::string::~string@IAT ]
sub_41d57d
mov eax [ ebp - 0x10 ]
and eax 0x8
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffff7
mov ecx [ ebp + 0x8 ]
jmp [ utf::string::~string@IAT ]
sub_41d597
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x60 ]
xor ecx eax
call sub_401736
mov eax r--data
jmp __CxxFrameHandler3
sub_41d63b
mov ecx rw-data
call sub_419666
push sub_41d70e
call sub_40140f
pop ecx
retn
sub_41d651
mov ecx rw-data
call sub_419919
push sub_41d718
call sub_40140f
pop ecx
retn
sub_41d667
mov ecx rw-data
call sub_4199ae
push sub_41d722
call sub_40140f
pop ecx
retn
sub_41d67d
call [ GetProcessHeap@IAT ]
push sub_41d72c
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] 0x0
call sub_40140f
pop ecx
retn
sub_41d6a5
push rw-data
mov ecx rw-data
call sub_419aaf
push sub_41d736
call sub_40140f
pop ecx
retn
sub_41d70e
mov ecx rw-data
jmp sub_419622
sub_41d718
mov ecx rw-data
jmp sub_419941
sub_41d722
mov ecx rw-data
jmp sub_419996
sub_41d72c
mov ecx rw-data
jmp sub_4199ee
sub_41d736
mov [ rw-data ] r--data
retn
