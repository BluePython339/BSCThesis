sub_4012f8
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add edx 0x40
add al dl
pop ebp
inc eax
add [ eax + 0x6f ] dh
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] ch
and [ edi + 0x70 ] cl
je rwxdata
jb rwxdata
outsd
outsb
jae rwxdata
push 0x65687420
je rwxdata
imul esp [ fs : esi + 0x66 ] 0x6e657265
popad
jbe rwxdata
and [ edi + 0x66 ] ch
and [ ecx + 0x6d ] ch
je rwxdata
and [ edi + 0x61 ] ah
imul esi [ ebx + 0x68 ] 0x65687420
jb rwxdata
popad
outsb
and [ gs : si + 0x68 ] dh
and [ gs : edx + 0x6c ] ah
outsd
arpl [ ebx + 0x20 ] bp
insb
popad
jns rwxdata
imul ebp [ ecx + 0x6e ] 0x64
and [ edi + 0x66 ] ch
and [ ecx + 0x6d ] ch
popad
inc ebx
imul ebp [ ecx + 0x62 ] 0x93a656c
or [ eax ] esp
or ch [ ecx + 0x2e ]
and [ ecx + 0x6f ] bl
jne rwxdata
and [ gs : esi + 0x69 ] ah
arpl [ ebp + 0x61 ] bp
jb rwxdata
popad
and [ eax + 0x6c ] dh
popad
jns rwxdata
insd
add [ cs : eax ] al
add [ edx ] ch
and [ eax + 0x6f ] cl
ja rwxdata
and [ gs : edi + 0x61 ] ah
popad
and [ esi + 0x6f ] ah
imul ebp [ esi + 0x69 ] 0x74206873
jne rwxdata
or [ ecx ] ecx
and [ edx ] cl
imul ebp [ ecx + 0x2e ] 0x20756f59
arpl [ ecx + 0x6e ] sp
and [ ebx + 0x68 ] ah
jae rwxdata
je rwxdata
arpl [ ecx + 0x6e ] sp
and [ ebx + 0x65 ] dh
insb
arpl [ gs : eax + 0x64 ] si
imul esp [ esi + 0x66 ] 0x6e657265
add [ eax - 0x8 ] cl
add [ cs : eax ] al
add [ eax ] al
and eax 0x302e332d
popad
outsb
imul esi [ ebx + 0x68 ] 0x77206465
push 0x61206e65
insb
insb
and [ eax + ebp * 2 + 0x65 ] dh
and [ edx + 0x6c ] ah
outsd
arpl [ ebx + 0x73 ] bp
and [ ecx + 0x72 ] ah
and [ gs : ebx + 0x6c ] ah
popad
and [ eax + ebp * 2 + 0x65 ] dh
and [ edx + 0x6c ] ah
outsd
arpl [ ebx + 0x73 ] bp
insb
insb
and [ edx + 0x65 ] ah
and [ esi + 0x69 ] ah
or [ ecx ] ecx
or al [ ebx + 0x6c ]
imul esp [ ebx + 0x6b ] 0x206e6f20
jae rwxdata
imul esp [ ebx + 0x6b ] 0x65766520
outsb
je rwxdata
dec eax
imul esp [ edi + 0x68 ] 0x726f6373
cmp cl [ gs : ecx ]
or [ edx ] ecx
popad
and [ cs : eax + ebp * 2 + 0x65 ] dl
and [ esi + 0x75 ] ch
insd
bound esp [ ebp + 0x72 ]
and [ edi + 0x66 ] ch
and [ ebx + 0x6c ] ah
push 0x61672065
jb rwxdata
add [ eax ] al
add [ edx ] ch
and [ ebx + 0x72 ] al
imul esi [ ebp + 0x72 ] 0x66206169
outsd
jg rwxdata
push es
je rwxdata
add [ eax ] al
add [ ebx + 0x3a ] al
pop esp
push esp
inc edi
popad
insd
popad
add [ eax ] al
add [ ecx + 0x2b ] ah
add [ eax ] al
and eax 0x64332d
add [ eax ] al
add [ 0x322e322d ] ah
add [ eax ] al
jb rwxdata
add [ eax ] al
and eax 0x66322e32
add [ eax ] al
add [ ebx + 0x3a ] al
pop esp
dec esi
inc edi
popad
insd
popad
je rwxdata
insd
imul ebp [ ecx + 0x72 ] 0x69617020
jb rwxdata
and [ gs : ecx + ebp * 2 + 0x6d ] dh
je rwxdata
sbb al 0x1f
push es
xor eax [ ebx - 0x108a7fce ]
mov [ esi ] ecx
xchg ebp eax
aas
sti
jmp [ eax ]
lea edi [ ebp + 0x31b91384 ]
je rwxdata
xor [ esi ] 0xffffff81
push esi
or bh cl
pop ds
add [ eax ] al
ja rwxdata
insd
and [ gs : edi + 0x69 ] dh
popad
popad
jae rwxdata
outsd
and [ ecx + 0x6d ] ch
jb rwxdata
imul esp [ ebp + 0x6e ] 0x20
je rwxdata
sbb ah bh
or eax 0xd6ee919
or cl [ eax ]
aaa
cli
add eax 0x75
or [ ebp + 0x3fb8618 ] cl
and al 0x50
push 0xffffffe1
mov edi 0x85969804
inc ebp
mov [ esi + 0x6f08c538 ] eax
sbb [ ecx ] edx
sbb [ 0x4750bb7 ] bh
cmp ecx ecx
retn 0x62f0
push 0xfffffff3
stosb [ edi ]
inc edx
cmovo edx [ ecx ]
inc esp
retn 0xc710
jle rwxdata
add [ eax ] al
inc ecx
push eax
xor esi [ edx ]
sbb [ eax ] al
add [ eax ] al
push eax
adc [ eax ] al
add dl al
jbe rwxdata
or [ cs : ecx ] ecx
or al [ edi + 0x61 ]
jo rwxdata
jb rwxdata
popad
and [ gs : ecx + 0x6b ] dh
outsb
and [ edi + ebp * 2 + 0x20 ] dh
imul bp [ esi + 0x69 ] 0x6873
and [ eax + ebp * 2 + 0x65 ] dh
and [ esi + 0x69 ] ah
outsb
imul esi [ ebx + 0x68 ] 0x65687420
and [ edi + 0x61 ] ah
insd
or [ cs : ecx ] ecx
bound ebp [ esi ]
and [ eax + ebp * 2 + 0x65 ] dl
and [ ecx + ebp * 2 + 0x6d ] dh
push cs
push edx
sbb al 0x8b
xor eax 0x63023730
jbe rwxdata
popad
mov esp 0x48000018
clc
imul esi [ edx + 0x20 ] 0x6920666f
insd
sub_4024a7
push ecx
bound ebp [ edx + 0xb395958 ]
je rwxdata
jbe rwxdata
cmp ah bl
int3
push eax
mov bl 0x3
sbb al 0xcc
xor [ esi ] eax
fsub [ edx ]
cmp [ edi - 0x7acef8af ] edx
clc
je rwxdata
dec edx
or dl [ edx - 0x3a ]
push ss
mov ebp [ edi - 0x389467f8 ]
inc ebp
xor eax ebx
add bl [ edi ]
jno rwxdata
test eax 0xf3720b59

aam 0xb8
push ecx
push ecx
sbb esi esp
dec esp
stc
aam 0x20
sub eax 0x4b3fc62
xchg ecx eax
mov dh 0xd0
nop
adc cl [ edi ]
retn
jmp rwxdata
or [ eax + 0x3145c76b ] bl
fadd [ edx ]
pop ds
jmp 0xffffffffda8d64a2
sub_404694
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov al [ 0xffffffffa8004059 ]
inc esi
inc eax
add [ eax + eax ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
and [ ebx + 0x40 ] bl
add [ ecx ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + eax ] al
add [ eax ] al
jo rwxdata
xchg edx eax
mov [ 0xffffffffa38c0040 ] eax
inc eax
add [ esi - 0x7fffbf5d ] al
mov [ 0xffffffffa37a0040 ] eax
inc eax
add [ ebx + 0x40 ] dh
add [ esi - 0x5d ] ch
inc eax
add [ eax - 0x5d ] ch
inc eax
add [ edx - 0x5d ] ah
inc eax
add [ ebx + 0x40 ] bl
add [ esi - 0x5d ] dl
inc eax
add [ eax - 0x5d ] dl
inc eax
add [ edx - 0x5d ] cl
inc eax
add [ ebx + 0x40 ] al
add [ esi ] bh
mov [ 0xffffffffa3380040 ] eax
inc eax
add [ edx ] dh
mov [ 0xffffffffa32c0040 ] eax
inc eax
add [ esi ] ah
mov [ 0x59600040 ] eax
inc eax
add [ eax - 0x3fffbfa3 ] dh
pop ebp
inc eax
add [ eax ] ah
mov [ 0xffffffffa31a0040 ] eax
inc eax
add [ ebx ] dl
inc eax
add [ esi ] cl
mov [ 0xffffffffa3080040 ] eax
inc eax
add [ edx ] al
mov [ 0xffffffffa2fc0040 ] eax
inc eax
add dh dh
mov [ 0xffffffffa2f00040 ] al
inc eax
add dl ch
mov [ 0xffffffffa2e40040 ] al
inc eax
add al al
pop ecx
inc eax
add dh bl
mov [ 0xffffffffa2d80040 ] al
inc eax
add dl dl
mov [ 0xffffffffa2cc0040 ] al
inc eax
add dh al
mov [ 0x5cd00040 ] al
inc eax
add al dl
outsb
inc eax
add [ eax + 0x5c ] dl
inc eax
add al dl
outsb
inc eax
add al al
mov [ 0x5d400040 ] al
inc eax
add al dl
outsb
inc eax
add [ eax + 0x5c ] dl
inc eax
add al dl
outsb
inc eax
add dh bh
mov [ 0x5c200040 ] eax
inc eax
add al dl
outsb
inc eax
add [ eax + 0x5c ] dl
inc eax
add al dl
outsb
inc eax
add [ esp ] al
inc eax
add [ eax + 0x5c ] ah
inc eax
add al dl
outsb
inc eax
add [ eax + 0x5c ] dl
inc eax
add al dl
outsb
inc eax
add [ eax + 0x20004059 ] ah
dec eax
inc eax
add [ ecx ] dl
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ ebx ] cl
add al 0x0
add [ ebx ] cl
add al 0x0
add [ eax + eax ] cl
add [ eax ] al
jo rwxdata
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dl
mov [ 0x58900040 ] eax
inc eax
add al dl
outsb
inc eax
add [ eax + 0x5c ] dl
inc eax
add al dl
outsb
inc eax
add dh cl
mov [ 0xffffffffa3c80040 ] eax
inc eax
add dl al
mov [ 0xffffffffa3bc0040 ] eax
inc eax
add [ esi - 0x4fffbf5d ] dh
mov [ 0xffffffffa3aa0040 ] eax
inc eax
add [ eax - 0x5bffbfa7 ] dh
mov [ 0xffffffffa39e0040 ] eax
inc eax
add [ eax - 0x6dffbf5d ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dl
mov [ 0x5f700040 ] eax
inc eax
add al dl
outsb
inc eax
add [ eax + 0x5c ] dl
inc eax
add al dl
outsb
inc eax
add dh cl
mov [ 0xffffffffa3c80040 ] eax
inc eax
add dl al
mov [ 0xffffffffa3bc0040 ] eax
inc eax
add [ esi - 0x4fffbf5d ] dh
mov [ 0xffffffffa3aa0040 ] eax
inc eax
add [ eax - 0x5bffbf9f ] dl
mov [ 0xffffffffa39e0040 ] eax
inc eax
add [ eax - 0x6dffbf5d ] bl
mov [ 0xffffffffa38c0040 ] eax
inc eax
add [ esi - 0x7fffbf5d ] al
mov [ 0xffffffffa37a0040 ] eax
inc eax
add [ ebx + 0x40 ] dh
add [ esi - 0x5d ] ch
inc eax
add [ eax - 0x5d ] ch
inc eax
add [ edx - 0x5d ] ah
inc eax
add [ ebx + 0x40 ] bl
add [ esi - 0x5d ] dl
inc eax
add [ eax - 0x5d ] dl
inc eax
add [ edx - 0x5d ] cl
inc eax
add [ ebx + 0x40 ] al
add [ esi ] bh
mov [ 0xffffffffa3380040 ] eax
inc eax
add [ edx ] dh
mov [ 0xffffffffa32c0040 ] eax
inc eax
add [ esi ] ah
mov [ 0x60c00040 ] eax
inc eax
add [ eax - 0x3fffbfa3 ] dh
pop ebp
inc eax
add [ eax ] ah
mov [ 0xffffffffa31a0040 ] eax
inc eax
add [ ebx ] dl
inc eax
add [ esi ] cl
mov [ 0xffffffffa3080040 ] eax
inc eax
add [ edx ] al
mov [ 0xffffffffa2fc0040 ] eax
inc eax
add dh dh
mov [ 0xffffffffa2f00040 ] al
inc eax
add dl ch
mov [ 0xffffffffa2e40040 ] al
inc eax
add al ah
popad
inc eax
add dh bl
mov [ 0x61a00040 ] al
inc eax
add dl dl
mov [ 0xffffffffa2cc0040 ] al
inc eax
add [ edx - 0x1fffbf5c ] al
outsb
inc eax
add al dl
outsb
inc eax
add [ eax + 0x5c ] dl
inc eax
add al dl
outsb
inc eax
add [ esp + 0x40 ] bh
add al cl
mov [ 0xffffffffa3c20040 ] eax
inc eax
add [ ebx - 0x5c49ffc0 ] bh
inc eax
add [ eax - 0x55ffbf5d ] dh
mov [ 0xffffffffa4760040 ] eax
inc eax
add [ ebx - 0x5c61ffc0 ] ah
inc eax
add [ eax - 0x6dffbf5d ] bl
mov [ 0xffffffffa38c0040 ] eax
inc eax
add [ esi - 0x7fffbf5d ] al
mov [ 0xffffffffa37a0040 ] eax
inc eax
add [ ebx + 0x40 ] dh
add [ esi - 0x5d ] ch
inc eax
add [ eax - 0x5d ] ch
inc eax
add [ edx - 0x5d ] ah
inc eax
add [ ebx + 0x40 ] bl
add [ esi - 0x5d ] dl
inc eax
add [ eax - 0x5d ] dl
inc eax
add [ edx - 0x5d ] cl
inc eax
add [ ebx + 0x40 ] al
add [ esi ] bh
mov [ 0xffffffffa3380040 ] eax
inc eax
add [ edx ] dh
mov [ 0xffffffffa32c0040 ] eax
inc eax
add [ esi ] ah
mov [ 0x6ed00040 ] eax
inc eax
add [ eax - 0x3fffbfa3 ] dh
pop ebp
inc eax
add [ eax - 0x5c ] dh
inc eax
add [ edx ] bl
mov [ 0xffffffffa3140040 ] eax
inc eax
add [ esi ] cl
mov [ 0xffffffffa3080040 ] eax
inc eax
add [ edx ] al
mov [ 0xffffffffa2fc0040 ] eax
inc eax
add [ edx - 0x5c ] ch
inc eax
add al dh
mov [ 0xffffffffa4640040 ] al
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsd
inc eax
add [ eax + 0x4a ] bl
inc eax
add [ ecx ] dl
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ esi - 0x1f ] al
add [ eax ] al
inc esi
loope rwxdata
inc eax
add [ ecx ] dl
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ esp + eax ] cl
add [ eax ] al
or al 0x4
add [ eax ] al
or al 0x0
add [ eax ] al
sub [ ebx + 0x40 ] 0x0
adc eax [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or eax 0x90000000
imul eax [ eax ] 0x14
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add al al
insd
inc eax
add [ ecx ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + eax ] al
add [ eax ] al
mov al 0x6b
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + eax ] cl
add [ eax ] al
mov esi 0x40a4
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi ] dh
movsd [ edi ] [ esi ]
inc eax
add [ eax + 0x6f ] al
inc eax
add al dl
outsb
inc eax
add [ eax + 0x5c ] dl
inc eax
add al dl
outsb
inc eax
add [ esp + 0x40 ] bh
add [ eax ] dh
movsd [ edi ] [ esi ]
inc eax
add dl al
mov [ 0xffffffffa3bc0040 ] eax
inc eax
add [ esi - 0x4fffbf5d ] dh
mov [ 0xffffffffa3aa0040 ] eax
inc eax
add [ eax ] dl
outsd
inc eax
add [ ebx - 0x5c61ffc0 ] ah
inc eax
add [ eax - 0x6dffbf5d ] bl
mov [ 0xffffffffa38c0040 ] eax
inc eax
add [ esi - 0x7fffbf5d ] al
mov [ 0xffffffffa37a0040 ] eax
inc eax
add [ ebx + 0x40 ] dh
add [ eax + 0x2a00406f ] dh
movsd [ edi ] [ esi ]
inc eax
add [ 0xffffffffa51e0040 ] ah
inc eax
add [ eax ] bl
movsd [ edi ] [ esi ]
inc eax
add [ edx ] dl
movsd [ edi ] [ esi ]
inc eax
add [ 0xffffffffa5060040 ] cl
inc eax
add [ eax ] al
movsd [ edi ] [ esi ]
inc eax
add dl bh
movsb [ edi ] [ esi ]
inc eax
add ah dh
movsb [ edi ] [ esi ]
inc eax
add dh ch
movsb [ edi ] [ esi ]
inc eax
add al ch
movsb [ edi ] [ esi ]
inc eax
add dl ah
movsb [ edi ] [ esi ]
inc eax
add ah bl
movsb [ edi ] [ esi ]
inc eax
add dh dl
movsb [ edi ] [ esi ]
inc eax
add al dl
movsb [ edi ] [ esi ]
inc eax
add dl cl
movsb [ edi ] [ esi ]
inc eax
add ah al
movsb [ edi ] [ esi ]
inc eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x38004059 ] ah
dec ebx
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x58004059 ] ah
dec ebx
inc eax
add [ edx ] dl
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] dl
add [ eax ] al
add al dl
jle rwxdata
add [ eax + eax ] cl
add [ eax ] al
and [ eax + 0x1110040 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jmp 0xffffffffe9404bc8
add [ edi ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + eax ] cl
add [ eax ] al
push eax
jg rwxdata
add [ eax + eax ] cl
add [ eax ] al
xor [ eax + 0x1110040 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
0xea000003 0x3
add [ edi ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx ] ah
add [ eax ] al
add [ eax ] dl
add [ eax ] 0x11
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add al ch
add eax [ eax ]
add al ch
add eax [ eax ]
sub_4057d0
push 0xffffffff
push sub_40c2e2
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov eax [ esp + 0x14 ]
push ebx
push ebp
push esi
push edi
mov esi ecx
push eax
push 0x109
mov [ esp + 0x18 ] esi
call Ordinal_MFC42_324
xor eax eax
mov [ esi + 0x60 ] rwxdata
mov [ esp + 0x1c ] eax
mov [ esi + 0x64 ] eax
mov [ esi + 0x6c ] eax
mov [ esi + 0x68 ] rwxdata
lea edi [ esi + 0x78 ]
mov [ esp + 0x1c ] 0x2
mov ecx edi
call Ordinal_MFC42_540
lea ebx [ esi + 0x7c ]
mov [ esp + 0x1c ] 0x3
mov ecx ebx
call Ordinal_MFC42_540
lea ebp [ esi + 0x80 ]
mov [ esp + 0x1c ] 0x4
mov ecx ebp
call Ordinal_MFC42_540
push rwxdata
mov ecx edi
mov [ esp + 0x20 ] 0x5
mov [ esi ] rwxdata
call Ordinal_MFC42_860
push rwxdata
mov ecx ebx
call Ordinal_MFC42_860
push rwxdata
mov ecx ebp
call Ordinal_MFC42_860
mov ecx [ esp + 0x14 ]
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x10
retn 0x4
sub_4058b0
push 0xffffffff
push sub_40c334
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x8
push esi
mov esi ecx
push edi
mov [ esp + 0x8 ] esi
lea ecx [ esi + 0x80 ]
mov [ esp + 0x18 ] 0x4
call Ordinal_MFC42_800
lea ecx [ esi + 0x7c ]
mov [ esp + 0x18 ] 0x3
call Ordinal_MFC42_800
lea ecx [ esi + 0x78 ]
mov [ esp + 0x18 ] 0x2
call Ordinal_MFC42_800
lea edi [ esi + 0x68 ]
mov [ esp + 0xc ] edi
mov [ edi ] rwxdata
mov ecx edi
mov [ esp + 0x18 ] 0x5
call Ordinal_MFC42_2414
mov [ edi ] rwxdata
lea edi [ esi + 0x60 ]
mov [ esp + 0xc ] edi
mov [ edi ] rwxdata
mov ecx edi
mov [ esp + 0x18 ] 0x6
call Ordinal_MFC42_2414
mov ecx esi
mov [ edi ] rwxdata
mov [ esp + 0x18 ] 0xffffffff
call Ordinal_MFC42_641
mov ecx [ esp + 0x10 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x14
retn
sub_405960
push esi
mov esi ecx
push edi
mov edi [ esp + 0xc ]
lea eax [ esi + 0x78 ]
push eax
push 0x40c
push edi
call Ordinal_MFC42_2370
lea ecx [ esi + 0x7c ]
push ecx
push 0x40d
push edi
call Ordinal_MFC42_2370
add esi 0x80
push esi
push 0x40e
push edi
call Ordinal_MFC42_2370
pop edi
pop esi
retn 0x4
sub_4059c0
sub esp 0x18
push esi
mov esi ecx
call Ordinal_MFC42_4710
push 0x1
mov ecx esi
call Ordinal_MFC42_6334
lea eax [ esi + 0x78 ]
push rwxdata
push eax
call Ordinal_MFC42_2818
lea ecx [ esi + 0x7c ]
push rwxdata
push ecx
call Ordinal_MFC42_2818
lea edx [ esi + 0x80 ]
push rwxdata
push edx
call Ordinal_MFC42_2818
add esp 0x18
mov ecx esi
push 0x0
call Ordinal_MFC42_6334
push 0x107
push 0x2
push 0x107
call Ordinal_MFC42_1146
push eax
call [ LoadBitmapA@IAT ]
push eax
lea ecx [ esi + 0x60 ]
call Ordinal_MFC42_1641
mov ecx [ esi + 0x64 ]
lea eax [ esp + 0x4 ]
push eax
push 0x18
push ecx
call [ GetObjectA@IAT ]
mov eax [ esp + 0x8 ]
mov edx [ esi + 0x20 ]
mov ecx [ esp + 0xc ]
push 0x1
push 0x0
mov [ esi + 0x70 ] eax
push edx
mov [ esi + 0x74 ] ecx
call [ InvalidateRect@IAT ]
mov eax 0x1
pop esi
add esp 0x18
retn
sub_405a70
mov eax [ esp + 0xc ]
push ebx
push esi
mov esi [ esp + 0xc ]
push edi
mov edi [ esp + 0x14 ]
push eax
push edi
push esi
call Ordinal_MFC42_4476
push 0x1
mov ecx esi
mov ebx eax
call Ordinal_MFC42_5875
mov ecx edi
call Ordinal_MFC42_3089
cmp eax 0x40c
je rwxdata
push 0x1
mov ecx esi
call Ordinal_MFC42_5875
mov eax [ esi ]
push 0xffffff
mov ecx esi
call [ eax + 0x38 ]
mov ecx edi
call Ordinal_MFC42_3089
cmp eax 0x40d
je rwxdata
mov ecx edi
call Ordinal_MFC42_3089
cmp eax 0x40e
je rwxdata
mov ecx edi
call Ordinal_MFC42_3089
cmp eax 0x40f
jne rwxdata
pop edi
mov eax ebx
pop esi
pop ebx
retn 0xc
push 0x1
mov ecx esi
call Ordinal_MFC42_5875
mov edx [ esi ]
push 0x9bff9b
mov ecx esi
call [ edx + 0x38 ]
jmp rwxdata
push 0x0
mov ecx esi
call Ordinal_MFC42_6086
push 0x5
call [ GetStockObject@IAT ]
pop edi
pop esi
pop ebx
retn 0xc
sub_405b20
push 0xffffffff
push sub_40c348
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x20
push ebx
push ebp
push esi
mov esi ecx
push edi
lea ecx [ esp + 0x10 ]
call Ordinal_MFC42_323
mov ebp [ esp + 0x40 ]
mov [ esp + 0x38 ] 0x0
test ebp ebp
jne rwxdata
mov eax [ ebp + 0x4 ]
xor eax eax
jmp rwxdata
push eax
mov eax [ esp + 0x18 ]
push eax
call Ordinal_MFC42_5785
mov edx [ esi + 0x20 ]
lea ecx [ esp + 0x20 ]
push ecx
push edx
mov edi eax
call [ GetClientRect@IAT ]
mov ecx [ esp + 0x2c ]
mov edx [ esp + 0x24 ]
mov eax [ esp + 0x20 ]
mov ebx [ esi + 0x74 ]
mov esi [ esi + 0x70 ]
sub ecx edx
mov edx [ esp + 0x28 ]
push 0xcc0020
sub edx eax
lea eax [ esp + 0x14 ]
neg eax
sbb eax eax
push ebx
and eax [ esp + 0x1c ]
push esi
push 0x0
push 0x0
push eax
mov eax [ ebp + 0x4 ]
push ecx
push edx
push 0x0
push 0x0
push eax
call [ StretchBlt@IAT ]
test edi edi
je rwxdata
mov eax [ eax + 0x4 ]
push eax
call [ CreateCompatibleDC@IAT ]
push eax
lea ecx [ esp + 0x14 ]
call Ordinal_MFC42_1640
lea eax [ esi + 0x60 ]
test eax eax
je rwxdata
mov ecx [ esp + 0x14 ]
push edi
push ecx
call Ordinal_MFC42_5785
lea ecx [ esp + 0x10 ]
mov [ esp + 0x38 ] 0xffffffff
call Ordinal_MFC42_640
mov ecx [ esp + 0x30 ]
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x2c
retn 0x4
mov edi [ edi + 0x4 ]
sub_405c80
push 0xffffffff
push sub_40c368
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push esi
mov esi ecx
mov [ esp + 0x4 ] esi
mov [ esi ] rwxdata
mov [ esp + 0x10 ] 0x0
call Ordinal_MFC42_2414
mov ecx [ esp + 0x8 ]
mov [ esi ] rwxdata
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_405cf0
push 0xffffffff
push sub_40c388
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push esi
mov esi ecx
mov [ esp + 0x4 ] esi
mov [ esi ] rwxdata
mov [ esp + 0x10 ] 0x0
call Ordinal_MFC42_2414
mov ecx [ esp + 0x8 ]
mov [ esi ] rwxdata
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_405d60
push 0xffffffff
push sub_40c3a8
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push esi
mov esi ecx
mov [ esp + 0x4 ] esi
mov [ esi ] rwxdata
mov [ esp + 0x10 ] 0x0
call Ordinal_MFC42_2414
mov ecx [ esp + 0x8 ]
mov [ esi ] rwxdata
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_405e10
push 0xffffffff
push sub_40c462
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov eax [ esp + 0x14 ]
push esi
push edi
mov esi ecx
push eax
push 0xa3
mov [ esp + 0x10 ] esi
call Ordinal_MFC42_324
xor eax eax
mov [ esi + 0x90 ] rwxdata
mov [ esp + 0x14 ] eax
mov [ esi + 0x94 ] eax
mov [ esi + 0x9c ] eax
mov [ esi + 0x98 ] rwxdata
lea edi [ esi + 0xa8 ]
mov [ esp + 0x14 ] 0x2
mov ecx edi
call Ordinal_MFC42_567
mov [ edi ] rwxdata
lea edi [ esi + 0xe8 ]
mov [ esp + 0x14 ] 0x3
mov ecx edi
call Ordinal_MFC42_567
mov [ edi ] rwxdata
lea edi [ esi + 0x128 ]
mov [ esp + 0x14 ] 0x4
mov ecx edi
call Ordinal_MFC42_567
mov [ edi ] rwxdata
lea edi [ esi + 0x168 ]
mov [ esp + 0x14 ] 0x5
mov ecx edi
call Ordinal_MFC42_567
mov [ edi ] rwxdata
lea edi [ esi + 0x1a8 ]
mov [ esp + 0x14 ] 0x6
mov ecx edi
call Ordinal_MFC42_567
mov [ edi ] rwxdata
lea edi [ esi + 0x1e8 ]
mov [ esp + 0x14 ] 0x7
mov ecx edi
call Ordinal_MFC42_567
mov [ edi ] rwxdata
lea edi [ esi + 0x228 ]
mov [ esp + 0x14 ] 0x8
mov ecx edi
call Ordinal_MFC42_567
mov [ edi ] rwxdata
lea edi [ esi + 0x268 ]
mov [ esp + 0x14 ] 0x9
mov ecx edi
call Ordinal_MFC42_567
mov [ edi ] rwxdata
lea edi [ esi + 0x2a8 ]
mov [ esp + 0x14 ] 0xa
mov ecx edi
call Ordinal_MFC42_567
mov [ edi ] rwxdata
lea edi [ esi + 0x2e8 ]
mov [ esp + 0x14 ] 0xb
mov ecx edi
call Ordinal_MFC42_567
mov ecx [ esp + 0xc ]
mov [ edi ] rwxdata
mov [ esi ] rwxdata
mov eax esi
pop edi
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn 0x4
sub_405f90
push 0xffffffff
push sub_40c522
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x8
push esi
mov esi ecx
push edi
mov [ esp + 0x8 ] esi
lea ecx [ esi + 0x2e8 ]
mov [ esp + 0x18 ] 0xb
call Ordinal_MFC42_656
lea ecx [ esi + 0x2a8 ]
mov [ esp + 0x18 ] 0xa
call Ordinal_MFC42_656
lea ecx [ esi + 0x268 ]
mov [ esp + 0x18 ] 0x9
call Ordinal_MFC42_656
lea ecx [ esi + 0x228 ]
mov [ esp + 0x18 ] 0x8
call Ordinal_MFC42_656
lea ecx [ esi + 0x1e8 ]
mov [ esp + 0x18 ] 0x7
call Ordinal_MFC42_656
lea ecx [ esi + 0x1a8 ]
mov [ esp + 0x18 ] 0x6
call Ordinal_MFC42_656
lea ecx [ esi + 0x168 ]
mov [ esp + 0x18 ] 0x5
call Ordinal_MFC42_656
lea ecx [ esi + 0x128 ]
mov [ esp + 0x18 ] 0x4
call Ordinal_MFC42_656
lea ecx [ esi + 0xe8 ]
mov [ esp + 0x18 ] 0x3
call Ordinal_MFC42_656
lea ecx [ esi + 0xa8 ]
mov [ esp + 0x18 ] 0x2
call Ordinal_MFC42_656
lea edi [ esi + 0x98 ]
mov [ esp + 0xc ] edi
mov [ edi ] rwxdata
mov ecx edi
mov [ esp + 0x18 ] 0xc
call Ordinal_MFC42_2414
mov [ edi ] rwxdata
lea edi [ esi + 0x90 ]
mov [ esp + 0xc ] edi
mov [ edi ] rwxdata
mov ecx edi
mov [ esp + 0x18 ] 0xd
call Ordinal_MFC42_2414
mov ecx esi
mov [ edi ] rwxdata
mov [ esp + 0x18 ] 0xffffffff
call Ordinal_MFC42_641
mov ecx [ esp + 0x10 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x14
retn
sub_4060c0
push esi
mov esi ecx
push edi
mov edi [ esp + 0xc ]
lea eax [ esi + 0xa8 ]
push eax
push 0x417
push edi
call Ordinal_MFC42_2302
lea ecx [ esi + 0xe8 ]
push ecx
push 0x416
push edi
call Ordinal_MFC42_2302
lea edx [ esi + 0x128 ]
push edx
push 0x415
push edi
call Ordinal_MFC42_2302
lea eax [ esi + 0x168 ]
push eax
push 0x414
push edi
call Ordinal_MFC42_2302
lea ecx [ esi + 0x1a8 ]
push ecx
push 0x413
push edi
call Ordinal_MFC42_2302
lea edx [ esi + 0x1e8 ]
push edx
push 0x40a
push edi
call Ordinal_MFC42_2302
lea eax [ esi + 0x228 ]
push eax
push 0x409
push edi
call Ordinal_MFC42_2302
lea ecx [ esi + 0x268 ]
push ecx
push 0x408
push edi
call Ordinal_MFC42_2302
lea edx [ esi + 0x2a8 ]
push edx
push 0x407
push edi
call Ordinal_MFC42_2302
add esi 0x2e8
push esi
push 0x406
push edi
call Ordinal_MFC42_2302
pop edi
pop esi
retn 0x4
sub_4061a0
mov ax [ rwxdata ]
push esi
cmp ax 0x1
mov esi ecx
jne rwxdata
cmp ax 0x2
jne rwxdata
push 0x0
jmp rwxdata
mov ecx esi
mov [ rwxdata ] 0x0
call Ordinal_MFC42_4853
pop esi
retn
push 0x1
mov ecx esi
call sub_4069d0
sub_4061e0
sub esp 0x18
push esi
mov esi ecx
call Ordinal_MFC42_4710
mov ax [ rwxdata ]
test ax ax
jne rwxdata
cmp ax 0x1
jne rwxdata
mov eax [ esi + 0x20 ]
push 0x1
push 0x40c
push eax
call [ CheckDlgButton@IAT ]
push 0x1
mov ecx esi
call sub_406310
jmp rwxdata
cmp ax 0x2
jne rwxdata
mov ecx [ esi + 0x20 ]
push 0x1
push 0x40b
push ecx
call [ CheckDlgButton@IAT ]
push 0x40c
mov ecx esi
call Ordinal_MFC42_3092
push 0x0
mov ecx eax
call Ordinal_MFC42_2642
push 0x40b
mov ecx esi
call Ordinal_MFC42_3092
push 0x0
mov ecx eax
call Ordinal_MFC42_2642
push 0x0
jmp rwxdata
push 0x10a
push 0x2
push 0x10a
call Ordinal_MFC42_1146
push eax
call [ LoadBitmapA@IAT ]
push eax
lea ecx [ esi + 0x90 ]
call Ordinal_MFC42_1641
mov ecx [ esi + 0x94 ]
lea eax [ esp + 0x4 ]
push eax
push 0x18
push ecx
call [ GetObjectA@IAT ]
mov eax [ esp + 0x8 ]
mov edx [ esi + 0x20 ]
mov ecx [ esp + 0xc ]
push 0x1
push 0x0
mov [ esi + 0xa0 ] eax
push edx
mov [ esi + 0xa4 ] ecx
call [ InvalidateRect@IAT ]
mov eax 0x1
pop esi
add esp 0x18
retn
mov edx [ esi + 0x20 ]
push 0x1
push 0x40c
push edx
call [ CheckDlgButton@IAT ]
push 0x40b
mov ecx esi
call Ordinal_MFC42_3092
push 0x0
mov ecx eax
call Ordinal_MFC42_2642
push 0x40c
mov ecx esi
call Ordinal_MFC42_3092
push 0x0
mov ecx eax
call Ordinal_MFC42_2642
push 0x1
mov ecx esi
call sub_4064a0
sub_406310
mov eax [ esp + 0x4 ]
sub esp 0x10
test eax eax
push esi
mov esi ecx
push rwxdata
jne rwxdata
push rwxdata
push rwxdata
jmp rwxdata
pop esi
add esp 0x10
retn 0x4
push ebx
push ebp
mov ebp [ fread@IAT ]
push edi
lea ebx [ esi + 0x60 ]
mov [ esp + 0x10 ] 0x0
call [ fopen@IAT ]
add esp 0x8
mov [ esi + 0x88 ] eax
test eax eax
je rwxdata
push rwxdata
push rwxdata
jmp rwxdata
push 0x0
mov ecx esi
call Ordinal_MFC42_6334
inc edi
cmp edi 0x5
mov [ esp + 0x10 ] edi
jl rwxdata
jmp [ edi * 4 + jump_table_406488 ]
lea ecx [ esp + 0x20 ]
push ecx
call [ sprintf@IAT ]
mov edi [ esp + 0x20 ]
add esp 0x10
cmp edi 0x4
ja rwxdata
mov ecx 0xa
xor eax eax
mov edi ebx
[ edi ]
mov eax [ esi + 0x88 ]
push eax
push 0x1
push 0x28
push ebx
call ebp
add esp 0x10
mov ecx esi
push 0x1
call Ordinal_MFC42_6334
mov eax [ esp + 0x24 ]
mov edx [ esi + 0x84 ]
xor ecx ecx
push edx
mov [ esp + 0x18 ] ecx
test eax eax
mov eax [ esi + 0x80 ]
mov [ esp + 0x1c ] ecx
mov [ esp + 0x20 ] cx
push eax
jne rwxdata
mov ecx [ esi + 0x88 ]
push ecx
call [ fclose@IAT ]
add esp 0x4
pop edi
pop ebp
pop ebx
push ebx
push 0x406
mov ecx esi
call Ordinal_MFC42_5953
lea edx [ esp + 0x14 ]
push edx
push 0x413
jmp rwxdata
push ebx
push 0x407
mov ecx esi
call Ordinal_MFC42_5953
lea eax [ esp + 0x14 ]
push eax
push 0x414
jmp rwxdata
push ebx
push 0x408
mov ecx esi
call Ordinal_MFC42_5953
lea ecx [ esp + 0x14 ]
push ecx
push 0x415
jmp rwxdata
push ebx
push 0x409
mov ecx esi
call Ordinal_MFC42_5953
lea edx [ esp + 0x14 ]
push edx
push 0x416
jmp rwxdata
push ebx
push 0x40a
mov ecx esi
call Ordinal_MFC42_5953
lea eax [ esp + 0x14 ]
push eax
push 0x417
mov ecx esi
call Ordinal_MFC42_5953
sub_4064a0
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x14
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
push edi
call sub_406310
test edi edi
push rwxdata
jne rwxdata
push rwxdata
call [ fopen@IAT ]
mov [ esi + 0x88 ] eax
mov eax [ rwxdata ]
push eax
lea ecx [ esp + 0x20 ]
push rwxdata
push ecx
call [ sprintf@IAT ]
add esp 0x14
push rwxdata
call [ fopen@IAT ]
mov [ esi + 0x88 ] eax
mov eax [ rwxdata ]
mov ecx [ rwxdata ]
push eax
push ecx
lea edx [ esp + 0x24 ]
push rwxdata
push edx
call [ sprintf@IAT ]
add esp 0x18
jmp rwxdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov [ esp + 0x10 ] 0x0
lea ebx [ esi + 0x60 ]
mov eax [ esi + 0x88 ]
test eax eax
je rwxdata
mov eax [ ebp + 0x8 ]
test eax eax
jne rwxdata
mov edi [ ebp + 0x8 ]
test edi edi
je rwxdata
mov edi [ ebp + 0x8 ]
fld [ esi + 0x80 ]
fcomp [ rwxdata ]
fnstsw ax
test ah 0x40
jne rwxdata
mov eax [ esp + 0x10 ]
cmp eax 0x4
ja rwxdata
jmp rwxdata
cmp edi 0x1
jne rwxdata
cmp edi 0x1
je rwxdata
mov edi [ ebp + 0x8 ]
mov eax [ esp + 0x10 ]
inc eax
cmp eax 0x5
mov [ esp + 0x10 ] eax
jl rwxdata
jmp [ eax * 4 + jump_table_406954 ]
fild [ rwxdata ]
fcomp [ esi + 0x80 ]
fnstsw ax
test ah 0x41
je rwxdata
fld [ esi + 0x80 ]
fcomp [ rwxdata ]
fnstsw ax
test ah 0x40
je rwxdata
jmp rwxdata
mov ecx 0xa
xor eax eax
mov edi ebx
[ edi ]
mov edx [ esi + 0x88 ]
push edx
push 0x1
push 0x28
push ebx
call [ fread@IAT ]
fld [ rwxdata ]
fcomp [ esi + 0x80 ]
add esp 0x10
fnstsw ax
test ah 0x41
je rwxdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
push 0x1
mov ecx esi
call Ordinal_MFC42_6334
push 0x1
lea ecx [ esi + 0x2e8 ]
call Ordinal_MFC42_2642
push 0x0
push 0x406
mov ecx esi
call Ordinal_MFC42_5953
lea eax [ esp + 0x14 ]
mov ecx esi
push eax
push 0x413
call Ordinal_MFC42_5953
push ebx
push 0x407
mov ecx esi
call Ordinal_MFC42_5953
mov ecx [ esi + 0x84 ]
mov edx [ esi + 0x80 ]
push ecx
push edx
push edi
push 0x414
mov ecx esi
call sub_406970
mov ecx 0xa
xor eax eax
mov edi ebx
[ edi ]
mov eax [ esi + 0x88 ]
push eax
push 0x1
push 0x28
push ebx
call [ fread@IAT ]
add esp 0x10
mov ecx esi
push ebx
push 0x408
call Ordinal_MFC42_5953
mov ecx [ esi + 0x84 ]
mov edx [ esi + 0x80 ]
mov eax [ ebp + 0x8 ]
push ecx
push edx
push eax
push 0x415
mov ecx esi
call sub_406970
mov ecx 0xa
xor eax eax
mov edi ebx
[ edi ]
mov ecx [ esi + 0x88 ]
push ecx
push 0x1
push 0x28
push ebx
call [ fread@IAT ]
add esp 0x10
mov ecx esi
push ebx
push 0x409
call Ordinal_MFC42_5953
mov edx [ esi + 0x84 ]
mov eax [ esi + 0x80 ]
mov ecx [ ebp + 0x8 ]
push edx
push eax
push ecx
jmp rwxdata
push 0x1
mov ecx esi
call Ordinal_MFC42_6334
push 0x1
lea ecx [ esi + 0x2a8 ]
call Ordinal_MFC42_2642
push 0x0
push 0x407
mov ecx esi
call Ordinal_MFC42_5953
lea eax [ esp + 0x14 ]
mov ecx esi
push eax
push 0x414
call Ordinal_MFC42_5953
push ebx
push 0x408
mov ecx esi
call Ordinal_MFC42_5953
mov ecx [ esi + 0x84 ]
mov edx [ esi + 0x80 ]
push ecx
push edx
push edi
push 0x415
mov ecx esi
call sub_406970
mov ecx 0xa
xor eax eax
mov edi ebx
[ edi ]
mov eax [ esi + 0x88 ]
push eax
push 0x1
push 0x28
push ebx
call [ fread@IAT ]
add esp 0x10
mov ecx esi
push ebx
push 0x409
call Ordinal_MFC42_5953
mov ecx [ esi + 0x84 ]
mov edx [ esi + 0x80 ]
mov eax [ ebp + 0x8 ]
push ecx
push edx
push eax
push 0x416
mov ecx esi
call sub_406970
mov ecx 0xa
xor eax eax
mov edi ebx
[ edi ]
mov ecx [ esi + 0x88 ]
push ecx
push 0x1
push 0x28
push ebx
call [ fread@IAT ]
add esp 0x10
mov ecx esi
push ebx
push 0x40a
call Ordinal_MFC42_5953
mov edx [ esi + 0x84 ]
mov eax [ esi + 0x80 ]
mov ecx [ ebp + 0x8 ]
push edx
push eax
push ecx
push 0x417
mov ecx esi
call sub_406970
push 0x0
mov ecx esi
call Ordinal_MFC42_6334
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
push 0x1
mov ecx esi
call Ordinal_MFC42_6334
push 0x1
lea ecx [ esi + 0x268 ]
call Ordinal_MFC42_2642
push 0x0
push 0x408
mov ecx esi
call Ordinal_MFC42_5953
lea edx [ esp + 0x14 ]
mov ecx esi
push edx
push 0x415
call Ordinal_MFC42_5953
push ebx
push 0x409
mov ecx esi
call Ordinal_MFC42_5953
mov eax [ esi + 0x84 ]
mov ecx [ esi + 0x80 ]
push eax
push ecx
push edi
push 0x1
mov ecx esi
call Ordinal_MFC42_6334
push 0x1
lea ecx [ esi + 0x228 ]
call Ordinal_MFC42_2642
push 0x0
push 0x409
mov ecx esi
call Ordinal_MFC42_5953
lea eax [ esp + 0x14 ]
mov ecx esi
push eax
push 0x416
call Ordinal_MFC42_5953
push ebx
push 0x40a
mov ecx esi
call Ordinal_MFC42_5953
mov ecx [ esi + 0x84 ]
mov edx [ esi + 0x80 ]
push ecx
push edx
push edi
push 0x417
mov ecx esi
call sub_406970
push 0x0
mov ecx esi
call Ordinal_MFC42_6334
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
push 0x1
mov ecx esi
call Ordinal_MFC42_6334
push 0x1
lea ecx [ esi + 0x1e8 ]
call Ordinal_MFC42_2642
push 0x0
push 0x40a
mov ecx esi
call Ordinal_MFC42_5953
lea eax [ esp + 0x14 ]
mov ecx esi
push eax
push 0x417
call Ordinal_MFC42_5953
push 0x0
mov ecx esi
call Ordinal_MFC42_6334
jmp rwxdata
push 0x416
mov ecx esi
call sub_406970
mov ecx 0xa
xor eax eax
mov edi ebx
[ edi ]
mov edx [ esi + 0x88 ]
push edx
push 0x1
push 0x28
push ebx
call [ fread@IAT ]
add esp 0x10
mov ecx esi
push ebx
push 0x40a
call Ordinal_MFC42_5953
mov eax [ esi + 0x84 ]
mov ecx [ esi + 0x80 ]
mov edx [ ebp + 0x8 ]
push eax
push ecx
push edx
push 0x417
mov ecx esi
call sub_406970
push 0x0
mov ecx esi
call Ordinal_MFC42_6334
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_406970
sub esp 0xc
xor eax eax
mov edx [ esp + 0x18 ]
mov [ esp ] eax
push esi
mov [ esp + 0x8 ] eax
mov esi ecx
mov ecx [ esp + 0x20 ]
mov [ esp + 0xc ] ax
mov eax [ esp + 0x18 ]
push ecx
test eax eax
push edx
jne rwxdata
push rwxdata
push rwxdata
jmp rwxdata
lea eax [ esp + 0x10 ]
push eax
call [ sprintf@IAT ]
mov edx [ esp + 0x24 ]
add esp 0x10
lea ecx [ esp + 0x4 ]
push ecx
push edx
mov ecx esi
call Ordinal_MFC42_5953
pop esi
add esp 0xc
retn 0x10
sub_4069d0
mov eax [ esp + 0x4 ]
sub esp 0xc
test eax eax
push esi
mov esi ecx
push rwxdata
jne rwxdata
push rwxdata
push rwxdata
jmp rwxdata
pop esi
add esp 0xc
retn 0x4
push ebx
push ebp
push edi
lea ebx [ esi + 0x60 ]
xor ebp ebp
call [ fopen@IAT ]
add esp 0x8
mov [ esi + 0x88 ] eax
test eax eax
je rwxdata
push 0x0
mov ecx esi
call Ordinal_MFC42_6334
mov edx [ esi + 0x88 ]
push edx
push 0x1
push 0x28
push ebx
call [ fwrite@IAT ]
add esp 0x10
inc ebp
cmp ebp 0x5
jl rwxdata
jmp [ ebp * 4 + jump_table_406b54 ]
mov ecx 0xa
xor eax eax
mov edi ebx
push 0x1
[ edi ]
mov [ esp + 0x14 ] eax
mov ecx esi
mov [ esp + 0x18 ] eax
mov [ esp + 0x1c ] ax
call Ordinal_MFC42_6334
cmp ebp 0x4
ja rwxdata
mov eax [ esi + 0x88 ]
push eax
call [ fclose@IAT ]
add esp 0x4
pop edi
pop ebp
pop ebx
push 0x19
push ebx
push 0x406
mov ecx esi
call Ordinal_MFC42_3098
lea ecx [ esp + 0x10 ]
push 0x5
push ecx
push 0x413
mov ecx esi
call Ordinal_MFC42_3098
lea edx [ esp + 0x10 ]
push edx
jmp rwxdata
push 0x19
push ebx
push 0x407
mov ecx esi
call Ordinal_MFC42_3098
lea eax [ esp + 0x10 ]
push 0x5
push eax
push 0x414
jmp rwxdata
push 0x19
push ebx
push 0x408
mov ecx esi
call Ordinal_MFC42_3098
lea edx [ esp + 0x10 ]
push 0x5
push edx
push 0x415
mov ecx esi
call Ordinal_MFC42_3098
lea eax [ esp + 0x10 ]
push eax
jmp rwxdata
push 0x19
push ebx
push 0x409
mov ecx esi
call Ordinal_MFC42_3098
lea ecx [ esp + 0x10 ]
push 0x5
push ecx
push 0x416
mov ecx esi
call Ordinal_MFC42_3098
lea edx [ esp + 0x10 ]
push edx
jmp rwxdata
push 0x19
push ebx
push 0x40a
mov ecx esi
call Ordinal_MFC42_3098
lea eax [ esp + 0x10 ]
push 0x5
push eax
push 0x417
call [ atof@IAT ]
fstp [ esi + 0x80 ]
add esp 0x4
mov ecx esi
call Ordinal_MFC42_3098
lea ecx [ esp + 0x10 ]
push ecx
sub_406bb0
push 0xffffffff
push sub_40c558
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x10
mov eax [ esp + 0x28 ]
push ebx
mov ebx [ esp + 0x28 ]
push esi
push edi
mov edi [ esp + 0x2c ]
push eax
push ebx
push edi
call Ordinal_MFC42_4476
mov esi eax
mov [ esp + 0x18 ] 0x0
mov [ esp + 0x14 ] rwxdata
push 0x1
mov ecx edi
mov [ esp + 0x28 ] 0x0
call Ordinal_MFC42_5875
mov ecx ebx
call Ordinal_MFC42_3089
cmp eax 0xffffffff
jne rwxdata
mov ecx ebx
call Ordinal_MFC42_3089
cmp eax 0x406
je rwxdata
push 0x1
mov ecx edi
call Ordinal_MFC42_5875
mov edx [ edi ]
push 0xff
mov ecx edi
call [ edx + 0x38 ]
push 0x5
call [ GetStockObject@IAT ]
mov esi eax
mov [ esp + 0x14 ] rwxdata
mov [ esp + 0x24 ] 0x1
jmp rwxdata
mov [ esp + 0x10 ] 0x0
mov [ esp + 0xc ] rwxdata
lea ecx [ esp + 0xc ]
mov [ esp + 0x24 ] 0x2
call Ordinal_MFC42_2414
push 0x110
push 0x2
push 0x110
call Ordinal_MFC42_1146
push eax
call [ LoadBitmapA@IAT ]
push eax
lea ecx [ esp + 0x10 ]
call Ordinal_MFC42_1641
mov ecx rwxdata
call Ordinal_MFC42_2414
mov esi [ esp + 0x10 ]
lea eax [ esp + 0xc ]
neg eax
sbb eax eax
and eax esi
push eax
call [ CreatePatternBrush@IAT ]
push eax
mov ecx rwxdata
call Ordinal_MFC42_1641
push 0x1
mov ecx edi
call Ordinal_MFC42_5875
mov eax [ edi ]
push 0xffffff
mov ecx edi
call [ eax + 0x38 ]
push rwxdata
mov ecx edi
call Ordinal_MFC42_5787
mov eax [ rwxdata ]
mov esi rwxdata
neg esi
sbb esi esi
mov [ esp + 0xc ] rwxdata
and esi eax
lea ecx [ esp + 0xc ]
mov [ esp + 0x24 ] 0x3
call Ordinal_MFC42_2414
mov ecx ebx
call Ordinal_MFC42_3089
cmp eax 0x407
je rwxdata
lea ecx [ esp + 0x14 ]
call Ordinal_MFC42_2414
mov ecx [ esp + 0x1c ]
mov eax esi
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x1c
retn 0xc
mov ecx ebx
call Ordinal_MFC42_3089
cmp eax 0x408
je rwxdata
mov ecx ebx
call Ordinal_MFC42_3089
cmp eax 0x409
je rwxdata
mov ecx ebx
call Ordinal_MFC42_3089
cmp eax 0x40a
je rwxdata
mov ecx ebx
call Ordinal_MFC42_3089
cmp eax 0x413
je rwxdata
mov ecx ebx
call Ordinal_MFC42_3089
cmp eax 0x414
je rwxdata
mov ecx ebx
call Ordinal_MFC42_3089
cmp eax 0x415
je rwxdata
mov ecx ebx
call Ordinal_MFC42_3089
cmp eax 0x416
je rwxdata
mov ecx ebx
call Ordinal_MFC42_3089
cmp eax 0x417
jne rwxdata
mov [ esp + 0x14 ] rwxdata
mov [ esp + 0x24 ] 0x4
sub_406dc0
push 0xffffffff
push sub_40c578
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x20
push ebx
push ebp
push esi
mov esi ecx
push edi
lea ecx [ esp + 0x10 ]
call Ordinal_MFC42_323
mov ebp [ esp + 0x40 ]
mov [ esp + 0x38 ] 0x0
test ebp ebp
jne rwxdata
mov eax [ ebp + 0x4 ]
xor eax eax
jmp rwxdata
push eax
mov eax [ esp + 0x18 ]
push eax
call Ordinal_MFC42_5785
mov edx [ esi + 0x20 ]
lea ecx [ esp + 0x20 ]
push ecx
push edx
mov edi eax
call [ GetClientRect@IAT ]
mov ecx [ esp + 0x2c ]
mov edx [ esp + 0x24 ]
mov eax [ esp + 0x20 ]
mov ebx [ esi + 0xa4 ]
mov esi [ esi + 0xa0 ]
sub ecx edx
mov edx [ esp + 0x28 ]
push 0xcc0020
sub edx eax
lea eax [ esp + 0x14 ]
neg eax
sbb eax eax
push ebx
and eax [ esp + 0x1c ]
push esi
push 0x0
push 0x0
push eax
mov eax [ ebp + 0x4 ]
push ecx
push edx
push 0x0
push 0x0
push eax
call [ StretchBlt@IAT ]
test edi edi
je rwxdata
mov eax [ eax + 0x4 ]
push eax
call [ CreateCompatibleDC@IAT ]
push eax
lea ecx [ esp + 0x14 ]
call Ordinal_MFC42_1640
lea eax [ esi + 0x90 ]
test eax eax
je rwxdata
mov ecx [ esp + 0x14 ]
push edi
push ecx
call Ordinal_MFC42_5785
lea ecx [ esp + 0x10 ]
mov [ esp + 0x38 ] 0xffffffff
call Ordinal_MFC42_640
mov ecx [ esp + 0x30 ]
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x2c
retn 0x4
mov edi [ edi + 0x4 ]
sub_406fb0
push 0xffffffff
push sub_40c719
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x91c
push esi
mov esi ecx
push 0x0
call Ordinal_MFC42_1134
add esp 0x4
mov ecx esi
call Ordinal_MFC42_2621
push 0x0
lea ecx [ esp + 0xc ]
call sub_407610
lea eax [ esp + 0x8 ]
lea ecx [ esp + 0x8 ]
mov [ esp + 0x928 ] 0x0
mov [ esi + 0x20 ] eax
call Ordinal_MFC42_2514
push 0x0
lea ecx [ esp + 0xc ]
call Ordinal_MFC42_6215
lea ecx [ esp + 0x918 ]
mov [ esp + 0x928 ] 0x21
call Ordinal_MFC42_800
lea ecx [ esp + 0x8d4 ]
mov [ esp + 0x928 ] 0x20
call Ordinal_MFC42_609
lea ecx [ esp + 0x894 ]
mov [ esp + 0x928 ] 0x1f
call Ordinal_MFC42_609
lea ecx [ esp + 0x854 ]
mov [ esp + 0x928 ] 0x1e
call Ordinal_MFC42_609
lea ecx [ esp + 0x814 ]
mov [ esp + 0x928 ] 0x1d
call Ordinal_MFC42_609
lea ecx [ esp + 0x7d4 ]
mov [ esp + 0x928 ] 0x1c
call Ordinal_MFC42_609
lea ecx [ esp + 0x794 ]
mov [ esp + 0x928 ] 0x1b
call Ordinal_MFC42_609
lea ecx [ esp + 0x754 ]
mov [ esp + 0x928 ] 0x1a
call Ordinal_MFC42_609
lea ecx [ esp + 0x714 ]
mov [ esp + 0x928 ] 0x19
call Ordinal_MFC42_609
mov [ esp + 0x928 ] 0x18
lea ecx [ esp + 0x6d4 ]
call Ordinal_MFC42_609
lea ecx [ esp + 0x694 ]
mov [ esp + 0x928 ] 0x17
call Ordinal_MFC42_609
lea ecx [ esp + 0x654 ]
mov [ esp + 0x928 ] 0x16
call Ordinal_MFC42_609
lea ecx [ esp + 0x614 ]
mov [ esp + 0x928 ] 0x15
call Ordinal_MFC42_609
lea ecx [ esp + 0x5d4 ]
mov [ esp + 0x928 ] 0x14
call Ordinal_MFC42_609
lea ecx [ esp + 0x594 ]
mov [ esp + 0x928 ] 0x13
call Ordinal_MFC42_609
lea ecx [ esp + 0x554 ]
mov [ esp + 0x928 ] 0x12
call Ordinal_MFC42_609
lea ecx [ esp + 0x514 ]
mov [ esp + 0x928 ] 0x11
call Ordinal_MFC42_609
lea ecx [ esp + 0x4d4 ]
mov [ esp + 0x928 ] 0x10
call Ordinal_MFC42_609
lea ecx [ esp + 0x494 ]
mov [ esp + 0x928 ] 0xf
call Ordinal_MFC42_609
lea ecx [ esp + 0x454 ]
mov [ esp + 0x928 ] 0xe
call Ordinal_MFC42_609
lea ecx [ esp + 0x414 ]
mov [ esp + 0x928 ] 0xd
call Ordinal_MFC42_609
lea ecx [ esp + 0x3d4 ]
mov [ esp + 0x928 ] 0xc
call Ordinal_MFC42_609
lea ecx [ esp + 0x394 ]
mov [ esp + 0x928 ] 0xb
call Ordinal_MFC42_609
lea ecx [ esp + 0x354 ]
mov [ esp + 0x928 ] 0xa
call Ordinal_MFC42_609
lea ecx [ esp + 0x314 ]
mov [ esp + 0x928 ] 0x9
call Ordinal_MFC42_609
lea ecx [ esp + 0x2d4 ]
mov [ esp + 0x928 ] 0x8
call Ordinal_MFC42_609
lea ecx [ esp + 0x294 ]
mov [ esp + 0x928 ] 0x7
call Ordinal_MFC42_609
lea ecx [ esp + 0x254 ]
mov [ esp + 0x928 ] 0x6
call Ordinal_MFC42_609
lea ecx [ esp + 0x214 ]
mov [ esp + 0x928 ] 0x5
call Ordinal_MFC42_609
lea ecx [ esp + 0x1d4 ]
mov [ esp + 0x928 ] 0x4
call Ordinal_MFC42_609
lea ecx [ esp + 0x194 ]
mov [ esp + 0x928 ] 0x3
call Ordinal_MFC42_609
lea ecx [ esp + 0x184 ]
mov [ esp + 0x184 ] rwxdata
mov [ esp + 0x4 ] ecx
lea ecx [ esp + 0x184 ]
mov [ esp + 0x928 ] 0x22
call Ordinal_MFC42_2414
mov esi rwxdata
lea edx [ esp + 0x17c ]
mov [ esp + 0x184 ] esi
mov [ esp + 0x4 ] edx
mov [ esp + 0x17c ] rwxdata
lea ecx [ esp + 0x17c ]
mov [ esp + 0x928 ] 0x23
call Ordinal_MFC42_2414
mov [ esp + 0x17c ] esi
lea ecx [ esp + 0x8 ]
mov [ esp + 0x928 ] 0xffffffff
call Ordinal_MFC42_641
mov ecx [ esp + 0x920 ]
xor eax eax
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x928
retn
sub_407320
push 0xffffffff
push sub_40c908
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x8
push esi
mov esi ecx
push edi
mov [ esp + 0x8 ] esi
lea ecx [ esi + 0x910 ]
mov [ esp + 0x18 ] 0x20
call Ordinal_MFC42_800
lea ecx [ esi + 0x8cc ]
mov [ esp + 0x18 ] 0x1f
call Ordinal_MFC42_609
lea ecx [ esi + 0x88c ]
mov [ esp + 0x18 ] 0x1e
call Ordinal_MFC42_609
lea ecx [ esi + 0x84c ]
mov [ esp + 0x18 ] 0x1d
call Ordinal_MFC42_609
lea ecx [ esi + 0x80c ]
mov [ esp + 0x18 ] 0x1c
call Ordinal_MFC42_609
lea ecx [ esi + 0x7cc ]
mov [ esp + 0x18 ] 0x1b
call Ordinal_MFC42_609
lea ecx [ esi + 0x78c ]
mov [ esp + 0x18 ] 0x1a
call Ordinal_MFC42_609
lea ecx [ esi + 0x74c ]
mov [ esp + 0x18 ] 0x19
call Ordinal_MFC42_609
lea ecx [ esi + 0x70c ]
mov [ esp + 0x18 ] 0x18
call Ordinal_MFC42_609
lea ecx [ esi + 0x6cc ]
mov [ esp + 0x18 ] 0x17
call Ordinal_MFC42_609
lea ecx [ esi + 0x68c ]
mov [ esp + 0x18 ] 0x16
call Ordinal_MFC42_609
lea ecx [ esi + 0x64c ]
mov [ esp + 0x18 ] 0x15
call Ordinal_MFC42_609
lea ecx [ esi + 0x60c ]
mov [ esp + 0x18 ] 0x14
call Ordinal_MFC42_609
lea ecx [ esi + 0x5cc ]
mov [ esp + 0x18 ] 0x13
call Ordinal_MFC42_609
mov [ esp + 0x18 ] 0x12
lea ecx [ esi + 0x58c ]
call Ordinal_MFC42_609
lea ecx [ esi + 0x54c ]
mov [ esp + 0x18 ] 0x11
call Ordinal_MFC42_609
lea ecx [ esi + 0x50c ]
mov [ esp + 0x18 ] 0x10
call Ordinal_MFC42_609
lea ecx [ esi + 0x4cc ]
mov [ esp + 0x18 ] 0xf
call Ordinal_MFC42_609
lea ecx [ esi + 0x48c ]
mov [ esp + 0x18 ] 0xe
call Ordinal_MFC42_609
lea ecx [ esi + 0x44c ]
mov [ esp + 0x18 ] 0xd
call Ordinal_MFC42_609
lea ecx [ esi + 0x40c ]
mov [ esp + 0x18 ] 0xc
call Ordinal_MFC42_609
lea ecx [ esi + 0x3cc ]
mov [ esp + 0x18 ] 0xb
call Ordinal_MFC42_609
lea ecx [ esi + 0x38c ]
mov [ esp + 0x18 ] 0xa
call Ordinal_MFC42_609
lea ecx [ esi + 0x34c ]
mov [ esp + 0x18 ] 0x9
call Ordinal_MFC42_609
lea ecx [ esi + 0x30c ]
mov [ esp + 0x18 ] 0x8
call Ordinal_MFC42_609
lea ecx [ esi + 0x2cc ]
mov [ esp + 0x18 ] 0x7
call Ordinal_MFC42_609
lea ecx [ esi + 0x28c ]
mov [ esp + 0x18 ] 0x6
call Ordinal_MFC42_609
lea ecx [ esi + 0x24c ]
mov [ esp + 0x18 ] 0x5
call Ordinal_MFC42_609
lea ecx [ esi + 0x20c ]
mov [ esp + 0x18 ] 0x4
call Ordinal_MFC42_609
lea ecx [ esi + 0x1cc ]
mov [ esp + 0x18 ] 0x3
call Ordinal_MFC42_609
lea ecx [ esi + 0x18c ]
mov [ esp + 0x18 ] 0x2
call Ordinal_MFC42_609
lea edi [ esi + 0x17c ]
mov [ esp + 0xc ] edi
mov [ edi ] rwxdata
mov ecx edi
mov [ esp + 0x18 ] 0x21
call Ordinal_MFC42_2414
mov [ edi ] rwxdata
lea edi [ esi + 0x174 ]
mov [ esp + 0xc ] edi
mov [ edi ] rwxdata
mov ecx edi
mov [ esp + 0x18 ] 0x22
call Ordinal_MFC42_2414
mov ecx esi
mov [ edi ] rwxdata
mov [ esp + 0x18 ] 0xffffffff
call Ordinal_MFC42_641
mov ecx [ esp + 0x10 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x14
retn
sub_407610
push 0xffffffff
push sub_40caf6
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov eax [ esp + 0x14 ]
push esi
push edi
mov esi ecx
push eax
push 0x66
mov [ esp + 0x10 ] esi
call Ordinal_MFC42_324
lea edi [ esi + 0x174 ]
mov [ esp + 0x14 ] 0x0
mov ecx edi
call sub_40a290
mov [ edi ] rwxdata
lea edi [ esi + 0x17c ]
mov [ esp + 0x14 ] 0x1
mov ecx edi
call sub_40a290
mov [ edi ] rwxdata
lea edi [ esi + 0x18c ]
mov [ esp + 0x14 ] 0x2
mov ecx edi
call Ordinal_MFC42_567
mov [ edi ] rwxdata
lea edi [ esi + 0x1cc ]
mov [ esp + 0x14 ] 0x3
mov ecx edi
call Ordinal_MFC42_567
mov [ edi ] rwxdata
lea edi [ esi + 0x20c ]
mov [ esp + 0x14 ] 0x4
mov ecx edi
call Ordinal_MFC42_567
mov [ edi ] rwxdata
lea edi [ esi + 0x24c ]
mov [ esp + 0x14 ] 0x5
mov ecx edi
call Ordinal_MFC42_567
mov [ edi ] rwxdata
lea edi [ esi + 0x28c ]
mov [ esp + 0x14 ] 0x6
mov ecx edi
call Ordinal_MFC42_567
mov [ edi ] rwxdata
lea edi [ esi + 0x2cc ]
mov [ esp + 0x14 ] 0x7
mov ecx edi
call Ordinal_MFC42_567
mov [ edi ] rwxdata
lea edi [ esi + 0x30c ]
mov [ esp + 0x14 ] 0x8
mov ecx edi
call Ordinal_MFC42_567
mov [ edi ] rwxdata
lea edi [ esi + 0x34c ]
mov [ esp + 0x14 ] 0x9
mov ecx edi
call Ordinal_MFC42_567
mov [ edi ] rwxdata
lea edi [ esi + 0x38c ]
mov [ esp + 0x14 ] 0xa
mov ecx edi
call Ordinal_MFC42_567
mov [ edi ] rwxdata
lea edi [ esi + 0x3cc ]
mov [ esp + 0x14 ] 0xb
mov ecx edi
call Ordinal_MFC42_567
mov [ edi ] rwxdata
lea edi [ esi + 0x40c ]
mov [ esp + 0x14 ] 0xc
mov ecx edi
call Ordinal_MFC42_567
mov [ edi ] rwxdata
lea edi [ esi + 0x44c ]
mov [ esp + 0x14 ] 0xd
mov ecx edi
call Ordinal_MFC42_567
mov [ edi ] rwxdata
lea edi [ esi + 0x48c ]
mov [ esp + 0x14 ] 0xe
mov ecx edi
call Ordinal_MFC42_567
mov [ edi ] rwxdata
lea edi [ esi + 0x4cc ]
mov [ esp + 0x14 ] 0xf
mov ecx edi
call Ordinal_MFC42_567
mov [ edi ] rwxdata
lea edi [ esi + 0x50c ]
mov [ esp + 0x14 ] 0x10
mov ecx edi
call Ordinal_MFC42_567
mov [ edi ] rwxdata
lea edi [ esi + 0x54c ]
mov [ esp + 0x14 ] 0x11
mov ecx edi
call Ordinal_MFC42_567
mov [ edi ] rwxdata
lea edi [ esi + 0x58c ]
mov [ esp + 0x14 ] 0x12
mov ecx edi
call Ordinal_MFC42_567
mov [ edi ] rwxdata
lea edi [ esi + 0x5cc ]
mov [ esp + 0x14 ] 0x13
mov ecx edi
call Ordinal_MFC42_567
mov [ edi ] rwxdata
lea edi [ esi + 0x60c ]
mov [ esp + 0x14 ] 0x14
mov ecx edi
call Ordinal_MFC42_567
mov [ edi ] rwxdata
lea edi [ esi + 0x64c ]
mov [ esp + 0x14 ] 0x15
mov ecx edi
call Ordinal_MFC42_567
mov [ edi ] rwxdata
lea edi [ esi + 0x68c ]
mov [ esp + 0x14 ] 0x16
mov ecx edi
call Ordinal_MFC42_567
mov [ edi ] rwxdata
lea edi [ esi + 0x6cc ]
mov [ esp + 0x14 ] 0x17
mov ecx edi
call Ordinal_MFC42_567
mov [ edi ] rwxdata
lea edi [ esi + 0x70c ]
mov [ esp + 0x14 ] 0x18
mov ecx edi
call Ordinal_MFC42_567
mov [ edi ] rwxdata
lea edi [ esi + 0x74c ]
mov [ esp + 0x14 ] 0x19
mov ecx edi
call Ordinal_MFC42_567
mov [ edi ] rwxdata
lea edi [ esi + 0x78c ]
mov [ esp + 0x14 ] 0x1a
mov ecx edi
call Ordinal_MFC42_567
mov [ edi ] rwxdata
lea edi [ esi + 0x7cc ]
mov [ esp + 0x14 ] 0x1b
mov ecx edi
call Ordinal_MFC42_567
mov [ edi ] rwxdata
lea edi [ esi + 0x80c ]
mov [ esp + 0x14 ] 0x1c
mov ecx edi
call Ordinal_MFC42_567
mov [ edi ] rwxdata
lea edi [ esi + 0x84c ]
mov [ esp + 0x14 ] 0x1d
mov ecx edi
call Ordinal_MFC42_567
mov [ edi ] rwxdata
lea edi [ esi + 0x88c ]
mov [ esp + 0x14 ] 0x1e
mov ecx edi
call Ordinal_MFC42_567
mov [ edi ] rwxdata
lea edi [ esi + 0x8cc ]
mov [ esp + 0x14 ] 0x1f
mov ecx edi
call Ordinal_MFC42_567
mov [ edi ] rwxdata
lea edi [ esi + 0x910 ]
mov [ esp + 0x14 ] 0x20
mov ecx edi
call Ordinal_MFC42_540
push rwxdata
mov ecx edi
mov [ esp + 0x18 ] 0x21
mov [ esi ] rwxdata
mov [ esi + 0x90c ] 0x0
call Ordinal_MFC42_860
call Ordinal_MFC42_1168
push 0xb5
push 0xe
push 0xb5
call Ordinal_MFC42_1146
push eax
call [ LoadIconA@IAT ]
mov ecx [ esp + 0xc ]
mov [ esi + 0x914 ] eax
mov eax esi
pop edi
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn 0x4
sub_4079d0
push esi
mov esi ecx
push edi
mov edi [ esp + 0xc ]
lea eax [ esi + 0x18c ]
push eax
push 0x3f0
push edi
call Ordinal_MFC42_2302
lea ecx [ esi + 0x1cc ]
push ecx
push 0x3ef
push edi
call Ordinal_MFC42_2302
lea edx [ esi + 0x20c ]
push edx
push 0x3ee
push edi
call Ordinal_MFC42_2302
lea eax [ esi + 0x24c ]
push eax
push 0x3ed
push edi
call Ordinal_MFC42_2302
lea ecx [ esi + 0x28c ]
push ecx
push 0x3ec
push edi
call Ordinal_MFC42_2302
lea edx [ esi + 0x2cc ]
push edx
push 0x3eb
push edi
call Ordinal_MFC42_2302
lea eax [ esi + 0x30c ]
push eax
push 0x405
push edi
call Ordinal_MFC42_2302
lea ecx [ esi + 0x34c ]
push ecx
push 0x3ea
push edi
call Ordinal_MFC42_2302
lea edx [ esi + 0x38c ]
push edx
push 0x404
push edi
call Ordinal_MFC42_2302
lea eax [ esi + 0x3cc ]
push eax
push 0x403
push edi
call Ordinal_MFC42_2302
lea ecx [ esi + 0x40c ]
push ecx
push 0x402
push edi
call Ordinal_MFC42_2302
lea edx [ esi + 0x44c ]
push edx
push 0x401
push edi
call Ordinal_MFC42_2302
lea eax [ esi + 0x48c ]
push eax
push 0x400
push edi
call Ordinal_MFC42_2302
lea ecx [ esi + 0x4cc ]
push ecx
push 0x3ff
push edi
call Ordinal_MFC42_2302
lea edx [ esi + 0x50c ]
push edx
push 0x3fe
push edi
call Ordinal_MFC42_2302
lea eax [ esi + 0x54c ]
push eax
push 0x3fd
push edi
call Ordinal_MFC42_2302
lea ecx [ esi + 0x58c ]
push ecx
push 0x3fc
push edi
call Ordinal_MFC42_2302
lea edx [ esi + 0x5cc ]
push edx
push 0x3fb
push edi
call Ordinal_MFC42_2302
lea eax [ esi + 0x60c ]
push eax
push 0x3e9
push edi
call Ordinal_MFC42_2302
lea ecx [ esi + 0x64c ]
push ecx
push 0x3fa
push edi
call Ordinal_MFC42_2302
lea edx [ esi + 0x68c ]
push edx
push 0x3f9
push edi
call Ordinal_MFC42_2302
lea eax [ esi + 0x6cc ]
push eax
push 0x3f8
push edi
call Ordinal_MFC42_2302
lea ecx [ esi + 0x70c ]
push ecx
push 0x3f7
push edi
call Ordinal_MFC42_2302
lea edx [ esi + 0x74c ]
push edx
push 0x3f6
push edi
call Ordinal_MFC42_2302
lea eax [ esi + 0x78c ]
push eax
push 0x3f5
push edi
call Ordinal_MFC42_2302
lea ecx [ esi + 0x7cc ]
push ecx
push 0x3f4
push edi
call Ordinal_MFC42_2302
lea edx [ esi + 0x80c ]
push edx
push 0x3f3
push edi
call Ordinal_MFC42_2302
lea eax [ esi + 0x84c ]
push eax
push 0x3f2
push edi
call Ordinal_MFC42_2302
lea ecx [ esi + 0x88c ]
push ecx
push 0x3f1
push edi
call Ordinal_MFC42_2302
lea edx [ esi + 0x8cc ]
push edx
push 0x3e8
push edi
call Ordinal_MFC42_2302
lea eax [ esi + 0x90c ]
push eax
push 0x407
push edi
call Ordinal_MFC42_2364
add esi 0x910
push esi
push 0x406
push edi
call Ordinal_MFC42_2370
pop edi
pop esi
retn 0x4
sub_407c30
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_40cb08
push eax
mov [ fs : 0x0 ] esp
sub esp 0x28
push ebx
push ebp
push esi
push edi
mov esi ecx
call Ordinal_MFC42_4710
mov eax [ esi + 0x20 ]
xor ebx ebx
push ebx
push eax
call [ GetSystemMenu@IAT ]
push eax
call Ordinal_MFC42_2863
mov edi eax
cmp edi ebx
je rwxdata
mov edx [ esi + 0x914 ]
mov eax [ esi + 0x20 ]
mov edi [ SendMessageA@IAT ]
mov ebp 0x1
push edx
push ebp
push 0x80
push eax
call edi
mov ecx [ esi + 0x914 ]
mov edx [ esi + 0x20 ]
push ecx
push ebx
push 0x80
push edx
call edi
push ebp
push ebx
push ebx
push ebx
push ebx
mov ecx esi
call Ordinal_MFC42_4299
push ebx
mov ecx esi
call Ordinal_MFC42_6215
push ebx
push 0x80
push 0x40000
mov ecx esi
call Ordinal_MFC42_4287
mov eax 0x1e
mov [ esi + 0x160 ] ebp
mov [ esi + 0x164 ] eax
mov [ esi + 0x168 ] eax
mov [ rwxdata ] ebp
mov ebp [ LoadIconA@IAT ]
mov [ rwxdata ] bx
mov [ esi + 0x15c ] ebx
mov [ esi + 0x60 ] ebx
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x0
mov edi 0xb5
lea ebx [ esi + 0x6c ]
lea ecx [ esp + 0x10 ]
call Ordinal_MFC42_540
push 0x65
lea ecx [ esp + 0x14 ]
mov [ esp + 0x44 ] ebx
call Ordinal_MFC42_4160
mov ecx [ esp + 0x10 ]
cmp [ ecx - 0x8 ] ebx
je rwxdata
call Ordinal_MFC42_1168
mov eax edi
and eax 0xffff
push eax
push 0xe
push eax
call Ordinal_MFC42_1146
push eax
call ebp
mov [ ebx ] eax
add ebx 0x4
inc edi
lea eax [ edi - 0xb5 ]
cmp eax 0xf
jl rwxdata
mov eax [ esi + 0x164 ]
xor edi edi
test eax eax
jle rwxdata
lea ecx [ esp + 0x10 ]
mov [ esp + 0x40 ] 0xffffffff
call Ordinal_MFC42_800
mov edx [ edi + 0x4 ]
mov ebp [ AppendMenuA@IAT ]
push ebx
push ebx
push 0x800
push edx
call ebp
mov eax [ esp + 0x10 ]
mov ecx [ edi + 0x4 ]
push eax
push 0x10
push ebx
push ecx
call ebp
mov eax [ esi + 0x20 ]
mov edi [ SetTimer@IAT ]
push 0x0
push 0x1
push 0x3
push eax
call edi
mov ecx esi
call sub_409920
mov ecx [ esi + 0x164 ]
push ecx
mov ecx esi
call sub_408200
mov edx [ esi + 0x20 ]
push 0x0
push 0xbb8
push 0x4
push edx
call edi
fld [ esi + 0x60 ]
sub esp 0x8
lea eax [ esp + 0x1c ]
fstp [ esp ]
push rwxdata
push eax
call [ sprintf@IAT ]
add esp 0x10
mov ecx esi
push 0x1
call Ordinal_MFC42_6334
lea ecx [ esp + 0x14 ]
lea edx [ esi + 0x910 ]
push ecx
push rwxdata
push edx
call Ordinal_MFC42_2818
add esp 0xc
mov ecx esi
push 0x0
call Ordinal_MFC42_6334
mov eax [ esi + 0x20 ]
push rwxdata
push eax
call [ SetWindowTextA@IAT ]
push 0x110
push 0x2
push 0x110
call Ordinal_MFC42_1146
push eax
call [ LoadBitmapA@IAT ]
push eax
lea ecx [ esi + 0x174 ]
call Ordinal_MFC42_1641
mov edx [ esi + 0x178 ]
lea ecx [ esp + 0x20 ]
push ecx
push 0x18
push edx
call [ GetObjectA@IAT ]
mov eax [ esp + 0x24 ]
mov ecx [ esp + 0x28 ]
mov [ esi + 0x184 ] eax
mov eax [ esi + 0x20 ]
push 0x1
push 0x0
push eax
mov [ esi + 0x188 ] ecx
call [ InvalidateRect@IAT ]
mov ecx [ esp + 0x38 ]
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x34
retn
mov ebp [ GetDlgItem@IAT ]
lea ebx [ esi + 0xe4 ]
mov edx [ esi + 0x20 ]
lea ecx [ edi + 0x3e8 ]
push ecx
push edx
call ebp
mov [ ebx ] eax
mov eax [ esi + 0x164 ]
inc edi
add ebx 0x4
cmp edi eax
jl rwxdata
sub_407ed0
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_40cb28
push eax
mov eax [ esp + 0x10 ]
mov [ fs : 0x0 ] esp
and eax 0xfff0
sub esp 0x60
cmp eax 0x10
jne rwxdata
call Ordinal_MFC42_2379
mov ecx [ esp + 0x60 ]
mov [ fs : 0x0 ] ecx
add esp 0x6c
retn 0x8
lea ecx [ esp ]
call sub_4075a0
lea ecx [ esp ]
mov [ esp + 0x68 ] 0x0
call Ordinal_MFC42_2514
lea ecx [ esp ]
mov [ esp + 0x68 ] 0xffffffff
call Ordinal_MFC42_641
mov ecx [ esp + 0x60 ]
mov [ fs : 0x0 ] ecx
add esp 0x6c
retn 0x8
sub_407f50
sub esp 0x64
push esi
mov esi ecx
mov eax [ esi + 0x20 ]
push eax
call [ IsIconic@IAT ]
test eax eax
je rwxdata
mov ecx esi
call Ordinal_MFC42_2379
pop esi
add esp 0x64
retn
push ebx
push edi
push esi
lea ecx [ esp + 0x20 ]
call Ordinal_MFC42_470
mov edi [ esp + 0x20 ]
lea eax [ esp + 0x1c ]
mov ecx [ esi + 0x20 ]
push 0x0
neg eax
sbb eax eax
and eax edi
push eax
push 0x27
push ecx
call [ SendMessageA@IAT ]
mov edi [ GetSystemMetrics@IAT ]
push 0xb
call edi
push 0xc
mov ebx eax
call edi
mov edi eax
mov eax [ esi + 0x20 ]
lea edx [ esp + 0xc ]
push edx
push eax
call [ GetClientRect@IAT ]
mov ecx [ esi + 0x914 ]
mov eax [ esp + 0x18 ]
push ecx
mov ecx [ esp + 0x14 ]
sub eax ecx
sub eax edi
inc eax
cdq
sub eax edx
mov edx [ esp + 0x10 ]
sar eax 0x1
push eax
mov eax [ esp + 0x1c ]
sub eax edx
sub eax ebx
inc eax
cdq
sub eax edx
mov edx [ esp + 0x28 ]
sar eax 0x1
push eax
push edx
call [ DrawIcon@IAT ]
lea ecx [ esp + 0x1c ]
call Ordinal_MFC42_755
pop edi
pop ebx
pop esi
add esp 0x64
retn
sub_408200
push ecx
push ebx
push esi
push edi
mov esi ecx
push 0x0
mov [ esp + 0x10 ] esi
call [ time@IAT ]
push eax
call [ srand@IAT ]
mov edi [ esp + 0x1c ]
add esp 0x8
xor ebx ebx
test edi edi
jle rwxdata
pop edi
pop esi
pop ebx
pop ecx
retn 0x4
add esi 0xa8
push ebp
mov ebp [ rand@IAT ]
mov [ esp + 0x18 ] esi
test edx edx
jl rwxdata
mov eax [ esp + 0x10 ]
movsx ecx [ eax + esi * 2 + 0xa8 ]
cmp edx ecx
jne rwxdata
call ebp
cdq
idiv edi
xor esi esi
test ebx ebx
jle rwxdata
cmp edx edi
jge rwxdata
inc esi
cmp esi ebx
jl rwxdata
or esi 0xffffffff
call ebp
cdq
idiv edi
mov eax [ esp + 0x18 ]
inc ebx
mov [ eax ] dx
add eax 0x2
cmp ebx edi
mov [ esp + 0x18 ] eax
jl rwxdata
mov esi [ esp + 0x10 ]
pop ebp
test edi edi
jle rwxdata
mov eax edi
cdq
sub eax edx
lea edx [ esi + 0xa8 ]
sar eax 0x1
add edx 0x2
dec edi
jne rwxdata
sub ecx eax
mov [ edx ] cx
mov cx [ edx ]
movsx esi cx
cmp esi eax
jl rwxdata
sub_4082b0
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_40cbe5
push eax
mov [ fs : 0x0 ] esp
sub esp 0x32c
push esi
mov esi ecx
push edi
mov ecx [ esi + 0x15c ]
inc ecx
mov [ esi + 0x15c ] ecx
mov eax [ rwxdata ]
test eax eax
jne rwxdata
mov eax [ esi + 0x160 ]
mov edi 0x2
cmp eax edi
jle rwxdata
mov ecx esi
mov [ rwxdata ] 0x1
call sub_4087c0
jne rwxdata
mov eax [ esi + 0x170 ]
push 0x0
push 0x0
push eax
mov ecx esi
call sub_408e70
mov ecx [ esi + 0x16c ]
push 0x0
push 0x0
push ecx
mov ecx esi
call sub_408e70
mov eax [ esp + 0x344 ]
push 0x0
mov [ esi + 0x16c ] eax
mov [ esi + 0x170 ] eax
movsx edx [ esi + eax * 2 + 0xa8 ]
mov ecx [ esi + edx * 4 + 0x6c ]
push ecx
push eax
mov ecx esi
call sub_408e70
mov [ esi + 0x160 ] edi
jmp rwxdata
cmp eax 0x1
jne rwxdata
mov eax [ esp + 0x344 ]
push 0x0
mov [ esi + 0x170 ] eax
movsx edx [ esi + eax * 2 + 0xa8 ]
mov ecx [ esi + edx * 4 + 0x6c ]
push ecx
push eax
mov ecx esi
call sub_408e70
mov eax [ esi + 0x160 ]
mov ecx [ esi + 0x16c ]
inc eax
mov [ esi + 0x160 ] eax
mov eax [ esi + 0x170 ]
cmp eax ecx
je rwxdata
mov ecx [ esp + 0x334 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x338
retn 0x4
mov eax [ esp + 0x344 ]
mov [ esi + 0x160 ] edi
mov [ esi + 0x16c ] eax
mov [ esi + 0x170 ] eax
movsx edx [ esi + eax * 2 + 0xa8 ]
push 0x0
mov ecx [ esi + edx * 4 + 0x6c ]
push ecx
push eax
mov ecx esi
call sub_408e70
movsx edx [ esi + ecx * 2 + 0xa8 ]
movsx ecx [ esi + eax * 2 + 0xa8 ]
sub ecx edx
mov [ esp + 0x8 ] ecx
jne rwxdata
mov ecx [ esi + 0x20 ]
push 0x0
push 0x5dc
push 0x1
push ecx
call [ SetTimer@IAT ]
jmp rwxdata
push 0x1
push 0x0
push eax
mov ecx esi
call sub_408e70
mov edx [ esi + 0x16c ]
push 0x1
push 0x0
push edx
mov ecx esi
call sub_408e70
mov eax [ esi + 0x168 ]
test eax eax
jg rwxdata
mov [ rwxdata ] 0x1
mov [ rwxdata ] 0x0
mov eax [ esi + 0x20 ]
push edi
push eax
call [ KillTimer@IAT ]
fld [ esi + 0x60 ]
push 0x0
fstp [ rwxdata ]
mov ecx [ esi + 0x15c ]
mov [ rwxdata ] ecx
lea ecx [ esp + 0x10 ]
call sub_405e10
lea ecx [ esp + 0xc ]
mov [ esp + 0x33c ] 0x0
call Ordinal_MFC42_2514
lea ecx [ esp + 0xc ]
mov [ rwxdata ] di
call Ordinal_MFC42_2514
lea ecx [ esp + 0x2f4 ]
mov [ esp + 0x33c ] 0xc
call Ordinal_MFC42_656
lea ecx [ esp + 0x2b4 ]
mov [ esp + 0x33c ] 0xb
call Ordinal_MFC42_656
lea ecx [ esp + 0x274 ]
mov [ esp + 0x33c ] 0xa
call Ordinal_MFC42_656
lea ecx [ esp + 0x234 ]
mov [ esp + 0x33c ] 0x9
call Ordinal_MFC42_656
lea ecx [ esp + 0x1f4 ]
mov [ esp + 0x33c ] 0x8
call Ordinal_MFC42_656
lea ecx [ esp + 0x1b4 ]
mov [ esp + 0x33c ] 0x7
call Ordinal_MFC42_656
lea ecx [ esp + 0x174 ]
mov [ esp + 0x33c ] 0x6
call Ordinal_MFC42_656
lea ecx [ esp + 0x134 ]
mov [ esp + 0x33c ] 0x5
call Ordinal_MFC42_656
lea ecx [ esp + 0xf4 ]
mov [ esp + 0x33c ] 0x4
call Ordinal_MFC42_656
lea ecx [ esp + 0xb4 ]
mov [ esp + 0x33c ] 0x3
call Ordinal_MFC42_656
lea edx [ esp + 0xa4 ]
mov edi rwxdata
mov [ esp + 0x8 ] edx
mov [ esp + 0xa4 ] edi
lea ecx [ esp + 0xa4 ]
mov [ esp + 0x33c ] 0xd
call Ordinal_MFC42_2414
mov esi rwxdata
lea eax [ esp + 0x9c ]
mov [ esp + 0xa4 ] esi
mov [ esp + 0x8 ] eax
mov [ esp + 0x9c ] edi
lea ecx [ esp + 0x9c ]
mov [ esp + 0x33c ] 0xe
call Ordinal_MFC42_2414
mov [ esp + 0x9c ] esi
mov [ esp + 0x33c ] 0xffffffff
lea ecx [ esp + 0xc ]
call Ordinal_MFC42_641
jmp rwxdata
sub_408610
mov eax [ esp + 0x4 ]
sub esp 0x14
cmp eax 0x1
push esi
mov esi ecx
jne rwxdata
cmp eax 0x2
jne rwxdata
mov eax [ esi + 0x170 ]
mov ecx [ esi + 0x16c ]
cmp eax ecx
je rwxdata
cmp eax 0x4
jne rwxdata
call [ GetTickCount@IAT ]
mov ecx [ esi + 0x68 ]
mov [ esi + 0x64 ] eax
sub eax ecx
mov [ esp + 0x8 ] 0x0
mov [ esp + 0x4 ] eax
sub esp 0x8
fild [ esp + 0xc ]
lea edx [ esp + 0x14 ]
fmul [ rwxdata ]
fmul [ rwxdata ]
fadd [ esi + 0x60 ]
fst [ esi + 0x60 ]
fstp [ esp ]
push rwxdata
push edx
call [ sprintf@IAT ]
add esp 0x10
mov ecx esi
push 0x1
call Ordinal_MFC42_6334
lea eax [ esp + 0xc ]
lea ecx [ esi + 0x910 ]
push eax
push rwxdata
push ecx
call Ordinal_MFC42_2818
add esp 0xc
mov ecx esi
push 0x0
call Ordinal_MFC42_6334
mov edx [ esi + 0x64 ]
mov [ esi + 0x68 ] edx
jmp rwxdata
push 0x1
mov ecx esi
call Ordinal_MFC42_6334
mov ecx [ esi + 0x15c ]
push 0x0
mov [ esi + 0x90c ] ecx
mov ecx esi
call Ordinal_MFC42_6334
mov ecx esi
call Ordinal_MFC42_2379
pop esi
add esp 0x14
retn 0x4
push 0x0
push 0x0
push eax
mov ecx esi
call sub_408e70
mov eax [ esi + 0x16c ]
push 0x0
push 0x0
push eax
mov ecx esi
call sub_408e70
mov ecx [ esi + 0x20 ]
push 0x1
push ecx
mov [ esi + 0x160 ] 0x1
call [ KillTimer@IAT ]
jmp rwxdata
call [ GetTickCount@IAT ]
mov edx [ esi + 0x68 ]
mov [ esi + 0x64 ] eax
sub eax edx
mov [ esp + 0x8 ] 0x0
mov [ esp + 0x4 ] eax
sub esp 0x8
fild [ esp + 0xc ]
lea eax [ esp + 0x14 ]
fmul [ rwxdata ]
fmul [ rwxdata ]
fadd [ esi + 0x60 ]
fst [ esi + 0x60 ]
fstp [ esp ]
push rwxdata
push eax
call [ sprintf@IAT ]
add esp 0x10
mov ecx esi
push 0x1
call Ordinal_MFC42_6334
lea ecx [ esp + 0xc ]
lea edx [ esi + 0x910 ]
push ecx
push rwxdata
push edx
call Ordinal_MFC42_2818
add esp 0xc
mov ecx esi
push 0x0
call Ordinal_MFC42_6334
mov eax [ esi + 0x64 ]
mov ecx esi
mov [ esi + 0x68 ] eax
call sub_40a180
sub_4087c0
push 0xffffffff
push sub_40cbf8
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push ebx
mov ebx ecx
push esi
push edi
lea ecx [ esp + 0xc ]
call Ordinal_MFC42_540
mov eax [ ebx + 0x20 ]
mov [ esp + 0x18 ] 0x0
push eax
call [ GetMenu@IAT ]
push eax
call Ordinal_MFC42_2863
mov esi eax
test esi esi
je rwxdata
lea ecx [ esp + 0xc ]
mov [ esp + 0x18 ] 0xffffffff
call Ordinal_MFC42_800
mov ecx [ esp + 0x10 ]
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
mov ecx [ esi + 0x4 ]
push ebp
mov ebp [ GetMenuStringA@IAT ]
push 0x32
push 0x0
push 0x0
push 0x8004
push ecx
call ebp
test eax eax
jle rwxdata
lea ecx [ esp + 0x10 ]
call Ordinal_MFC42_2614
lea edi [ eax + eax + 0x2 ]
lea ecx [ esp + 0x10 ]
push edi
call Ordinal_MFC42_2919
mov edx [ esi + 0x4 ]
push 0x32
push edi
push eax
push 0x8004
push edx
call ebp
push 0xffffffff
lea ecx [ esp + 0x14 ]
call Ordinal_MFC42_5572
jmp rwxdata
mov edx [ esp + 0xc ]
push rwxdata
push edx
call edi
add esp 0x8
test eax eax
jne rwxdata
mov eax [ esp + 0xc ]
push rwxdata
push eax
call edi
add esp 0x8
test eax eax
jne rwxdata
mov eax [ ebx + 0x15c ]
mov edi [ _mbscmp@IAT ]
test eax eax
pop ebp
jl rwxdata
mov [ rwxdata ] eax
mov eax [ ebx + 0x20 ]
push 0x2
push eax
call [ KillTimer@IAT ]
lea ecx [ esp + 0xc ]
push rwxdata
push ecx
call Ordinal_MFC42_2818
mov edx [ esp + 0x14 ]
mov eax [ esi + 0x4 ]
add esp 0x8
push edx
push 0x8004
push 0x0
push 0x8004
push eax
call [ GetTickCount@IAT ]
mov ecx [ ebx + 0x20 ]
push 0x0
push 0x12c
push 0x2
push ecx
mov [ ebx + 0x68 ] eax
call [ SetTimer@IAT ]
lea edx [ esp + 0xc ]
push rwxdata
push edx
call Ordinal_MFC42_2818
mov eax [ esp + 0x14 ]
mov ecx [ esi + 0x4 ]
add esp 0x8
push eax
push 0x8004
push 0x0
push 0x8004
push ecx
jmp rwxdata
call [ ModifyMenuA@IAT ]
sub_408940
push 0xffffffff
push sub_40ccb5
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x32c
push 0x0
lea ecx [ esp + 0x8 ]
mov [ rwxdata ] 0x0
call sub_405e10
lea ecx [ esp + 0x4 ]
mov [ esp + 0x334 ] 0x0
call Ordinal_MFC42_2514
lea ecx [ esp + 0x2ec ]
mov [ esp + 0x334 ] 0xc
call Ordinal_MFC42_656
lea ecx [ esp + 0x2ac ]
mov [ esp + 0x334 ] 0xb
call Ordinal_MFC42_656
lea ecx [ esp + 0x26c ]
mov [ esp + 0x334 ] 0xa
call Ordinal_MFC42_656
lea ecx [ esp + 0x22c ]
mov [ esp + 0x334 ] 0x9
call Ordinal_MFC42_656
lea ecx [ esp + 0x1ec ]
mov [ esp + 0x334 ] 0x8
call Ordinal_MFC42_656
lea ecx [ esp + 0x1ac ]
mov [ esp + 0x334 ] 0x7
call Ordinal_MFC42_656
lea ecx [ esp + 0x16c ]
mov [ esp + 0x334 ] 0x6
call Ordinal_MFC42_656
lea ecx [ esp + 0x12c ]
mov [ esp + 0x334 ] 0x5
call Ordinal_MFC42_656
lea ecx [ esp + 0xec ]
mov [ esp + 0x334 ] 0x4
call Ordinal_MFC42_656
lea ecx [ esp + 0xac ]
mov [ esp + 0x334 ] 0x3
call Ordinal_MFC42_656
lea eax [ esp + 0x9c ]
mov [ esp + 0x9c ] rwxdata
mov [ esp ] eax
lea ecx [ esp + 0x9c ]
mov [ esp + 0x334 ] 0xd
call Ordinal_MFC42_2414
lea ecx [ esp + 0x94 ]
mov [ esp + 0x9c ] rwxdata
mov [ esp ] ecx
mov [ esp + 0x94 ] rwxdata
lea ecx [ esp + 0x94 ]
mov [ esp + 0x334 ] 0xe
call Ordinal_MFC42_2414
lea ecx [ esp + 0x4 ]
mov [ esp + 0x94 ] rwxdata
mov [ esp + 0x334 ] 0xffffffff
call Ordinal_MFC42_641
mov ecx [ esp + 0x32c ]
mov [ fs : 0x0 ] ecx
add esp 0x338
retn
sub_408b00
sub esp 0x30
push ebx
push ebp
push esi
mov esi ecx
push edi
xor ebx ebx
mov eax [ esi + 0x164 ]
xor edi edi
cmp eax ebx
jle rwxdata
mov [ rwxdata ] ebx
mov [ esi + 0x160 ] 0x1
mov [ rwxdata ] bx
mov [ rwxdata ] ebx
mov [ esi + 0x170 ] ebx
mov ecx [ rwxdata ]
mov [ esi + 0x16c ] ecx
mov edx [ rwxdata ]
mov [ esi + 0x15c ] edx
mov [ esi + 0x60 ] ebx
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x0
mov eax [ esi + 0x164 ]
mov ecx esi
mov [ esi + 0x168 ] eax
call sub_4087c0
mov ecx [ esi + 0x164 ]
push ecx
mov ecx esi
call sub_408200
fld [ esi + 0x60 ]
sub esp 0x8
lea edx [ esp + 0x3c ]
fstp [ esp ]
push rwxdata
push edx
call [ sprintf@IAT ]
add esp 0x10
mov ecx esi
push 0x1
call Ordinal_MFC42_6334
lea eax [ esp + 0x34 ]
lea ecx [ esi + 0x910 ]
push eax
push rwxdata
push ecx
call Ordinal_MFC42_2818
add esp 0xc
mov ecx esi
push ebx
call Ordinal_MFC42_6334
push 0x5
lea ecx [ esi + 0x8cc ]
call Ordinal_MFC42_6215
push 0x5
lea ecx [ esi + 0x60c ]
call Ordinal_MFC42_6215
push 0x5
lea ecx [ esi + 0x34c ]
call Ordinal_MFC42_6215
push 0x5
lea ecx [ esi + 0x2cc ]
call Ordinal_MFC42_6215
push 0x5
lea ecx [ esi + 0x28c ]
call Ordinal_MFC42_6215
push 0x5
lea ecx [ esi + 0x24c ]
call Ordinal_MFC42_6215
push 0x5
lea ecx [ esi + 0x20c ]
call Ordinal_MFC42_6215
push 0x5
lea ecx [ esi + 0x1cc ]
call Ordinal_MFC42_6215
push 0x5
lea ecx [ esi + 0x18c ]
call Ordinal_MFC42_6215
push 0x5
lea ecx [ esi + 0x88c ]
call Ordinal_MFC42_6215
push 0x5
lea ecx [ esi + 0x84c ]
call Ordinal_MFC42_6215
push 0x5
lea ecx [ esi + 0x80c ]
call Ordinal_MFC42_6215
push 0x5
lea ecx [ esi + 0x7cc ]
call Ordinal_MFC42_6215
push 0x5
lea ecx [ esi + 0x78c ]
call Ordinal_MFC42_6215
push 0x5
lea ecx [ esi + 0x74c ]
call Ordinal_MFC42_6215
push 0x5
lea ecx [ esi + 0x70c ]
call Ordinal_MFC42_6215
push 0x5
lea ecx [ esi + 0x6cc ]
call Ordinal_MFC42_6215
push 0x5
lea ecx [ esi + 0x68c ]
call Ordinal_MFC42_6215
lea edi [ esi + 0x64c ]
push 0x5
mov ecx edi
call Ordinal_MFC42_6215
lea ebx [ esi + 0x5cc ]
push 0x5
mov ecx ebx
call Ordinal_MFC42_6215
lea ebp [ esi + 0x58c ]
push 0x5
mov ecx ebp
call Ordinal_MFC42_6215
lea ecx [ esi + 0x54c ]
push 0x5
mov [ esp + 0x14 ] ecx
call Ordinal_MFC42_6215
lea ecx [ esi + 0x50c ]
push 0x5
mov [ esp + 0x18 ] ecx
call Ordinal_MFC42_6215
lea ecx [ esi + 0x4cc ]
push 0x5
mov [ esp + 0x1c ] ecx
call Ordinal_MFC42_6215
lea ecx [ esi + 0x48c ]
push 0x5
mov [ esp + 0x20 ] ecx
call Ordinal_MFC42_6215
lea ecx [ esi + 0x44c ]
push 0x5
mov [ esp + 0x24 ] ecx
call Ordinal_MFC42_6215
lea ecx [ esi + 0x40c ]
push 0x5
mov [ esp + 0x28 ] ecx
call Ordinal_MFC42_6215
lea ecx [ esi + 0x3cc ]
push 0x5
mov [ esp + 0x2c ] ecx
call Ordinal_MFC42_6215
lea ecx [ esi + 0x38c ]
push 0x5
mov [ esp + 0x30 ] ecx
call Ordinal_MFC42_6215
lea ecx [ esi + 0x30c ]
push 0x5
mov [ esp + 0x34 ] ecx
call Ordinal_MFC42_6215
mov esi [ esi + 0x164 ]
cmp esi 0x18
jg rwxdata
lea eax [ esi + 0xa8 ]
lea ebp [ esi + 0xe4 ]
mov [ esp + 0x10 ] eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x30
retn
cmp esi 0x12
jne rwxdata
mov edx [ esi + 0x20 ]
lea ecx [ edi + 0x3e8 ]
push ecx
push edx
call [ GetDlgItem@IAT ]
mov [ ebp ] eax
mov eax [ esp + 0x10 ]
push ebx
push ebx
push edi
mov ecx esi
mov [ eax ] 0xffff
call sub_408e70
mov ecx [ esp + 0x10 ]
mov eax [ esi + 0x164 ]
inc edi
add ebp 0x4
add ecx 0x2
cmp edi eax
mov [ esp + 0x10 ] ecx
jl rwxdata
mov ecx [ esp + 0x1c ]
push 0x0
call Ordinal_MFC42_6215
mov ecx [ esp + 0x20 ]
push 0x0
call Ordinal_MFC42_6215
mov ecx [ esp + 0x24 ]
push 0x0
call Ordinal_MFC42_6215
mov ecx [ esp + 0x28 ]
push 0x0
call Ordinal_MFC42_6215
mov ecx [ esp + 0x2c ]
push 0x0
call Ordinal_MFC42_6215
mov ecx [ esp + 0x30 ]
push 0x0
call Ordinal_MFC42_6215
push 0x0
mov ecx edi
call Ordinal_MFC42_6215
push 0x0
mov ecx ebx
call Ordinal_MFC42_6215
push 0x0
mov ecx ebp
call Ordinal_MFC42_6215
mov ecx [ esp + 0x10 ]
push 0x0
call Ordinal_MFC42_6215
mov ecx [ esp + 0x14 ]
push 0x0
call Ordinal_MFC42_6215
mov ecx [ esp + 0x18 ]
push 0x0
call Ordinal_MFC42_6215
sub_408e70
mov eax [ esp + 0xc ]
test eax eax
jne rwxdata
mov eax [ ecx + 0x168 ]
dec eax
mov [ ecx + 0x168 ] eax
mov eax [ esp + 0x4 ]
cmp eax 0x1d
ja rwxdata
mov eax [ esp + 0x4 ]
cmp eax 0x1d
ja rwxdata
retn 0xc
jmp [ eax * 4 + jump_table_409740 ]
jmp [ eax * 4 + jump_table_4096c8 ]
push 0x0
add ecx 0x8cc
call Ordinal_MFC42_6215
retn 0xc
push 0x0
add ecx 0x60c
call Ordinal_MFC42_6215
retn 0xc
push 0x0
add ecx 0x34c
call Ordinal_MFC42_6215
retn 0xc
push 0x0
add ecx 0x2cc
call Ordinal_MFC42_6215
retn 0xc
push 0x0
add ecx 0x28c
call Ordinal_MFC42_6215
retn 0xc
push 0x0
add ecx 0x24c
call Ordinal_MFC42_6215
retn 0xc
push 0x0
add ecx 0x20c
call Ordinal_MFC42_6215
retn 0xc
push 0x0
add ecx 0x1cc
call Ordinal_MFC42_6215
retn 0xc
push 0x0
add ecx 0x18c
call Ordinal_MFC42_6215
retn 0xc
push 0x0
add ecx 0x88c
call Ordinal_MFC42_6215
retn 0xc
push 0x0
add ecx 0x84c
call Ordinal_MFC42_6215
retn 0xc
push 0x0
add ecx 0x80c
call Ordinal_MFC42_6215
retn 0xc
push 0x0
add ecx 0x7cc
call Ordinal_MFC42_6215
retn 0xc
push 0x0
add ecx 0x78c
call Ordinal_MFC42_6215
retn 0xc
push 0x0
add ecx 0x74c
call Ordinal_MFC42_6215
retn 0xc
push 0x0
add ecx 0x70c
call Ordinal_MFC42_6215
retn 0xc
push 0x0
add ecx 0x6cc
call Ordinal_MFC42_6215
retn 0xc
push 0x0
add ecx 0x68c
call Ordinal_MFC42_6215
retn 0xc
push 0x0
add ecx 0x64c
call Ordinal_MFC42_6215
retn 0xc
push 0x0
add ecx 0x5cc
call Ordinal_MFC42_6215
retn 0xc
push 0x0
add ecx 0x58c
call Ordinal_MFC42_6215
retn 0xc
push 0x0
add ecx 0x54c
call Ordinal_MFC42_6215
retn 0xc
push 0x0
add ecx 0x50c
call Ordinal_MFC42_6215
retn 0xc
push 0x0
add ecx 0x4cc
call Ordinal_MFC42_6215
retn 0xc
push 0x0
add ecx 0x48c
call Ordinal_MFC42_6215
retn 0xc
push 0x0
add ecx 0x44c
call Ordinal_MFC42_6215
retn 0xc
push 0x0
add ecx 0x40c
call Ordinal_MFC42_6215
retn 0xc
push 0x0
add ecx 0x3cc
call Ordinal_MFC42_6215
retn 0xc
push 0x0
add ecx 0x38c
call Ordinal_MFC42_6215
retn 0xc
push 0x0
add ecx 0x30c
call Ordinal_MFC42_6215
lea eax [ ecx + 0x8cc ]
test eax eax
je rwxdata
lea eax [ ecx + 0x60c ]
test eax eax
je rwxdata
lea eax [ ecx + 0x34c ]
test eax eax
je rwxdata
lea eax [ ecx + 0x2cc ]
test eax eax
je rwxdata
lea eax [ ecx + 0x28c ]
test eax eax
je rwxdata
lea eax [ ecx + 0x24c ]
test eax eax
je rwxdata
lea eax [ ecx + 0x20c ]
test eax eax
je rwxdata
lea eax [ ecx + 0x1cc ]
test eax eax
je rwxdata
lea eax [ ecx + 0x18c ]
test eax eax
je rwxdata
lea eax [ ecx + 0x88c ]
test eax eax
je rwxdata
lea eax [ ecx + 0x84c ]
test eax eax
je rwxdata
lea eax [ ecx + 0x80c ]
test eax eax
je rwxdata
lea eax [ ecx + 0x7cc ]
test eax eax
je rwxdata
lea eax [ ecx + 0x78c ]
test eax eax
je rwxdata
lea eax [ ecx + 0x74c ]
test eax eax
je rwxdata
lea eax [ ecx + 0x70c ]
test eax eax
je rwxdata
lea eax [ ecx + 0x6cc ]
test eax eax
je rwxdata
lea eax [ ecx + 0x68c ]
test eax eax
je rwxdata
lea eax [ ecx + 0x64c ]
test eax eax
je rwxdata
lea eax [ ecx + 0x5cc ]
test eax eax
je rwxdata
lea eax [ ecx + 0x58c ]
test eax eax
je rwxdata
lea eax [ ecx + 0x54c ]
test eax eax
je rwxdata
lea eax [ ecx + 0x50c ]
test eax eax
je rwxdata
lea eax [ ecx + 0x4cc ]
test eax eax
je rwxdata
lea eax [ ecx + 0x48c ]
test eax eax
je rwxdata
lea eax [ ecx + 0x44c ]
test eax eax
je rwxdata
lea eax [ ecx + 0x40c ]
test eax eax
je rwxdata
lea eax [ ecx + 0x3cc ]
test eax eax
je rwxdata
lea eax [ ecx + 0x38c ]
test eax eax
je rwxdata
lea eax [ ecx + 0x30c ]
test eax eax
je rwxdata
mov edx [ eax + 0x20 ]
test edx edx
je rwxdata
mov edx [ eax + 0x20 ]
test edx edx
je rwxdata
mov edx [ eax + 0x20 ]
test edx edx
je rwxdata
mov edx [ eax + 0x20 ]
test edx edx
je rwxdata
mov edx [ eax + 0x20 ]
test edx edx
je rwxdata
mov edx [ eax + 0x20 ]
test edx edx
je rwxdata
mov edx [ eax + 0x20 ]
test edx edx
je rwxdata
mov edx [ eax + 0x20 ]
test edx edx
je rwxdata
mov edx [ eax + 0x20 ]
test edx edx
je rwxdata
mov edx [ eax + 0x20 ]
test edx edx
je rwxdata
mov edx [ eax + 0x20 ]
test edx edx
je rwxdata
mov edx [ eax + 0x20 ]
test edx edx
je rwxdata
mov edx [ eax + 0x20 ]
test edx edx
je rwxdata
mov edx [ eax + 0x20 ]
test edx edx
je rwxdata
mov edx [ eax + 0x20 ]
test edx edx
je rwxdata
mov edx [ eax + 0x20 ]
test edx edx
je rwxdata
mov edx [ eax + 0x20 ]
test edx edx
je rwxdata
mov edx [ eax + 0x20 ]
test edx edx
je rwxdata
mov edx [ eax + 0x20 ]
test edx edx
je rwxdata
mov edx [ eax + 0x20 ]
test edx edx
je rwxdata
mov edx [ eax + 0x20 ]
test edx edx
je rwxdata
mov edx [ eax + 0x20 ]
test edx edx
je rwxdata
mov edx [ eax + 0x20 ]
test edx edx
je rwxdata
mov edx [ eax + 0x20 ]
test edx edx
je rwxdata
mov edx [ eax + 0x20 ]
test edx edx
je rwxdata
mov edx [ eax + 0x20 ]
test edx edx
je rwxdata
mov edx [ eax + 0x20 ]
test edx edx
je rwxdata
mov edx [ eax + 0x20 ]
test edx edx
je rwxdata
mov edx [ eax + 0x20 ]
test edx edx
je rwxdata
mov edx [ eax + 0x20 ]
test edx edx
je rwxdata
mov eax [ esp + 0x8 ]
mov ecx [ ecx + 0x8ec ]
push eax
push 0x1
push 0xf7
push ecx
call [ SendMessageA@IAT ]
retn 0xc
mov edx [ esp + 0x8 ]
mov eax [ ecx + 0x62c ]
push edx
push 0x1
push 0xf7
push eax
call [ SendMessageA@IAT ]
retn 0xc
mov edx [ esp + 0x8 ]
mov eax [ ecx + 0x36c ]
push edx
push 0x1
push 0xf7
push eax
call [ SendMessageA@IAT ]
retn 0xc
mov edx [ esp + 0x8 ]
mov eax [ ecx + 0x2ec ]
push edx
push 0x1
push 0xf7
push eax
call [ SendMessageA@IAT ]
retn 0xc
mov edx [ esp + 0x8 ]
mov eax [ ecx + 0x2ac ]
push edx
push 0x1
push 0xf7
push eax
call [ SendMessageA@IAT ]
retn 0xc
mov edx [ esp + 0x8 ]
mov eax [ ecx + 0x26c ]
push edx
push 0x1
push 0xf7
push eax
call [ SendMessageA@IAT ]
retn 0xc
mov edx [ esp + 0x8 ]
mov eax [ ecx + 0x22c ]
push edx
push 0x1
push 0xf7
push eax
call [ SendMessageA@IAT ]
retn 0xc
mov edx [ esp + 0x8 ]
mov eax [ ecx + 0x1ec ]
push edx
push 0x1
push 0xf7
push eax
call [ SendMessageA@IAT ]
retn 0xc
mov edx [ esp + 0x8 ]
mov eax [ ecx + 0x1ac ]
push edx
push 0x1
push 0xf7
push eax
call [ SendMessageA@IAT ]
retn 0xc
mov edx [ esp + 0x8 ]
mov eax [ ecx + 0x8ac ]
push edx
push 0x1
push 0xf7
push eax
call [ SendMessageA@IAT ]
retn 0xc
mov edx [ esp + 0x8 ]
mov eax [ ecx + 0x86c ]
push edx
push 0x1
push 0xf7
push eax
call [ SendMessageA@IAT ]
retn 0xc
mov edx [ esp + 0x8 ]
mov eax [ ecx + 0x82c ]
push edx
push 0x1
push 0xf7
push eax
call [ SendMessageA@IAT ]
retn 0xc
mov edx [ esp + 0x8 ]
mov eax [ ecx + 0x7ec ]
push edx
push 0x1
push 0xf7
push eax
call [ SendMessageA@IAT ]
retn 0xc
mov edx [ esp + 0x8 ]
mov eax [ ecx + 0x7ac ]
push edx
push 0x1
push 0xf7
push eax
call [ SendMessageA@IAT ]
retn 0xc
mov edx [ esp + 0x8 ]
mov eax [ ecx + 0x76c ]
push edx
push 0x1
push 0xf7
push eax
call [ SendMessageA@IAT ]
retn 0xc
mov edx [ esp + 0x8 ]
mov eax [ ecx + 0x72c ]
push edx
push 0x1
push 0xf7
push eax
call [ SendMessageA@IAT ]
retn 0xc
mov edx [ esp + 0x8 ]
mov eax [ ecx + 0x6ec ]
push edx
push 0x1
push 0xf7
push eax
call [ SendMessageA@IAT ]
retn 0xc
mov edx [ esp + 0x8 ]
mov eax [ ecx + 0x6ac ]
push edx
push 0x1
push 0xf7
push eax
call [ SendMessageA@IAT ]
retn 0xc
mov edx [ esp + 0x8 ]
mov eax [ ecx + 0x66c ]
push edx
push 0x1
push 0xf7
push eax
call [ SendMessageA@IAT ]
retn 0xc
mov edx [ esp + 0x8 ]
mov eax [ ecx + 0x5ec ]
push edx
push 0x1
push 0xf7
push eax
call [ SendMessageA@IAT ]
retn 0xc
mov edx [ esp + 0x8 ]
mov eax [ ecx + 0x5ac ]
push edx
push 0x1
push 0xf7
push eax
call [ SendMessageA@IAT ]
retn 0xc
mov edx [ esp + 0x8 ]
mov eax [ ecx + 0x56c ]
push edx
push 0x1
push 0xf7
push eax
call [ SendMessageA@IAT ]
retn 0xc
mov edx [ esp + 0x8 ]
mov eax [ ecx + 0x52c ]
push edx
push 0x1
push 0xf7
push eax
call [ SendMessageA@IAT ]
retn 0xc
mov edx [ esp + 0x8 ]
mov eax [ ecx + 0x4ec ]
push edx
push 0x1
push 0xf7
push eax
call [ SendMessageA@IAT ]
retn 0xc
mov edx [ esp + 0x8 ]
mov eax [ ecx + 0x4ac ]
push edx
push 0x1
push 0xf7
push eax
call [ SendMessageA@IAT ]
retn 0xc
mov edx [ esp + 0x8 ]
mov eax [ ecx + 0x46c ]
push edx
push 0x1
push 0xf7
push eax
call [ SendMessageA@IAT ]
retn 0xc
mov edx [ esp + 0x8 ]
mov eax [ ecx + 0x42c ]
push edx
push 0x1
push 0xf7
push eax
call [ SendMessageA@IAT ]
retn 0xc
mov edx [ esp + 0x8 ]
mov eax [ ecx + 0x3ec ]
push edx
push 0x1
push 0xf7
push eax
call [ SendMessageA@IAT ]
retn 0xc
mov edx [ esp + 0x8 ]
mov eax [ ecx + 0x3ac ]
push edx
push 0x1
push 0xf7
push eax
call [ SendMessageA@IAT ]
retn 0xc
mov edx [ esp + 0x8 ]
mov eax [ ecx + 0x32c ]
push edx
push 0x1
push 0xf7
push eax
call [ SendMessageA@IAT ]
retn 0xc
sub_4097c0
push 0xffffffff
push sub_40cd0c
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x88
push 0x0
lea ecx [ esp + 0x8 ]
call sub_4057d0
lea ecx [ esp + 0x4 ]
mov [ esp + 0x90 ] 0x0
call Ordinal_MFC42_2514
lea ecx [ esp + 0x84 ]
mov [ esp + 0x90 ] 0x5
call Ordinal_MFC42_800
lea ecx [ esp + 0x80 ]
mov [ esp + 0x90 ] 0x4
call Ordinal_MFC42_800
lea ecx [ esp + 0x7c ]
mov [ esp + 0x90 ] 0x3
call Ordinal_MFC42_800
lea eax [ esp + 0x6c ]
mov [ esp + 0x6c ] rwxdata
mov [ esp ] eax
lea ecx [ esp + 0x6c ]
mov [ esp + 0x90 ] 0x6
call Ordinal_MFC42_2414
lea ecx [ esp + 0x64 ]
mov [ esp + 0x6c ] rwxdata
mov [ esp ] ecx
mov [ esp + 0x64 ] rwxdata
lea ecx [ esp + 0x64 ]
mov [ esp + 0x90 ] 0x7
call Ordinal_MFC42_2414
lea ecx [ esp + 0x4 ]
mov [ esp + 0x64 ] rwxdata
mov [ esp + 0x90 ] 0xffffffff
call Ordinal_MFC42_641
mov ecx [ esp + 0x88 ]
mov [ fs : 0x0 ] ecx
add esp 0x94
retn
sub_4098c0
push 0xffffffff
push sub_40cd28
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x60
lea ecx [ esp ]
call sub_4075a0
lea ecx [ esp ]
mov [ esp + 0x68 ] 0x0
call Ordinal_MFC42_2514
lea ecx [ esp ]
mov [ esp + 0x68 ] 0xffffffff
call Ordinal_MFC42_641
mov ecx [ esp + 0x60 ]
mov [ fs : 0x0 ] ecx
add esp 0x6c
retn
sub_409920
push ebx
mov ebx ecx
push esi
push edi
mov eax [ ebx + 0x20 ]
push eax
call [ GetMenu@IAT ]
push eax
call Ordinal_MFC42_2863
mov esi eax
test esi esi
je rwxdata
lea edi [ ebx + 0x6c ]
mov ebx [ LoadIconA@IAT ]
mov esi 0xb6
mov ecx [ esi + 0x4 ]
mov edi [ CheckMenuItem@IAT ]
push 0x8
push 0x8015
push ecx
call edi
mov edx [ esi + 0x4 ]
push 0x0
push 0x800e
push edx
call edi
mov eax [ esi + 0x4 ]
push 0x0
push 0x800c
push eax
call edi
mov ecx [ esi + 0x4 ]
push 0x0
push 0x8010
push ecx
call edi
mov edx [ esi + 0x4 ]
push 0x0
push 0x800f
push edx
call edi
call Ordinal_MFC42_1168
mov eax esi
and eax 0xffff
push eax
push 0xe
push eax
call Ordinal_MFC42_1146
push eax
call ebx
mov [ edi ] eax
add edi 0x4
inc esi
lea eax [ esi - 0xb6 ]
cmp eax 0xf
jl rwxdata
pop edi
pop esi
pop ebx
retn
sub_4099c0
push ebx
mov ebx ecx
push esi
push edi
mov eax [ ebx + 0x20 ]
push eax
call [ GetMenu@IAT ]
push eax
call Ordinal_MFC42_2863
mov esi eax
test esi esi
je rwxdata
lea edi [ ebx + 0x6c ]
mov ebx [ LoadIconA@IAT ]
mov esi 0xd4
mov ecx [ esi + 0x4 ]
mov edi [ CheckMenuItem@IAT ]
push 0x0
push 0x8015
push ecx
call edi
mov edx [ esi + 0x4 ]
push 0x8
push 0x800e
push edx
call edi
mov eax [ esi + 0x4 ]
push 0x0
push 0x800c
push eax
call edi
mov ecx [ esi + 0x4 ]
push 0x0
push 0x8010
push ecx
call edi
mov edx [ esi + 0x4 ]
push 0x0
push 0x800f
push edx
call edi
call Ordinal_MFC42_1168
mov eax esi
and eax 0xffff
push eax
push 0xe
push eax
call Ordinal_MFC42_1146
push eax
call ebx
mov [ edi ] eax
add edi 0x4
inc esi
lea eax [ esi - 0xd4 ]
cmp eax 0xf
jl rwxdata
pop edi
pop esi
pop ebx
retn
sub_409a60
push ebx
mov ebx ecx
push esi
push edi
mov eax [ ebx + 0x20 ]
push eax
call [ GetMenu@IAT ]
push eax
call Ordinal_MFC42_2863
mov esi eax
test esi esi
je rwxdata
lea edi [ ebx + 0x6c ]
mov ebx [ LoadIconA@IAT ]
mov esi 0xc5
mov ecx [ esi + 0x4 ]
mov edi [ CheckMenuItem@IAT ]
push 0x0
push 0x8015
push ecx
call edi
mov edx [ esi + 0x4 ]
push 0x0
push 0x800e
push edx
call edi
mov eax [ esi + 0x4 ]
push 0x8
push 0x800c
push eax
call edi
mov ecx [ esi + 0x4 ]
push 0x0
push 0x8010
push ecx
call edi
mov edx [ esi + 0x4 ]
push 0x0
push 0x800f
push edx
call edi
call Ordinal_MFC42_1168
mov eax esi
and eax 0xffff
push eax
push 0xe
push eax
call Ordinal_MFC42_1146
push eax
call ebx
mov [ edi ] eax
add edi 0x4
inc esi
lea eax [ esi - 0xc5 ]
cmp eax 0xf
jl rwxdata
pop edi
pop esi
pop ebx
retn
sub_409b00
push ebx
mov ebx ecx
push esi
push edi
mov eax [ ebx + 0x20 ]
push eax
call [ GetMenu@IAT ]
push eax
call Ordinal_MFC42_2863
mov esi eax
test esi esi
je rwxdata
lea edi [ ebx + 0x6c ]
mov ebx [ LoadIconA@IAT ]
mov esi 0xe3
mov ecx [ esi + 0x4 ]
mov edi [ CheckMenuItem@IAT ]
push 0x0
push 0x8015
push ecx
call edi
mov edx [ esi + 0x4 ]
push 0x0
push 0x800e
push edx
call edi
mov eax [ esi + 0x4 ]
push 0x0
push 0x800c
push eax
call edi
mov ecx [ esi + 0x4 ]
push 0x8
push 0x8010
push ecx
call edi
mov edx [ esi + 0x4 ]
push 0x0
push 0x800f
push edx
call edi
call Ordinal_MFC42_1168
mov eax esi
and eax 0xffff
push eax
push 0xe
push eax
call Ordinal_MFC42_1146
push eax
call ebx
mov [ edi ] eax
add edi 0x4
inc esi
lea eax [ esi - 0xe3 ]
cmp eax 0xf
jl rwxdata
pop edi
pop esi
pop ebx
retn
sub_409ba0
push ebx
mov ebx ecx
push esi
push edi
mov eax [ ebx + 0x20 ]
push eax
call [ GetMenu@IAT ]
push eax
call Ordinal_MFC42_2863
mov esi eax
test esi esi
je rwxdata
lea edi [ ebx + 0x6c ]
mov ebx [ LoadIconA@IAT ]
mov esi 0xf2
mov ecx [ esi + 0x4 ]
mov edi [ CheckMenuItem@IAT ]
push 0x0
push 0x8015
push ecx
call edi
mov edx [ esi + 0x4 ]
push 0x0
push 0x800e
push edx
call edi
mov eax [ esi + 0x4 ]
push 0x0
push 0x800c
push eax
call edi
mov ecx [ esi + 0x4 ]
push 0x0
push 0x8010
push ecx
call edi
mov edx [ esi + 0x4 ]
push 0x8
push 0x800f
push edx
call edi
call Ordinal_MFC42_1168
mov eax esi
and eax 0xffff
push eax
push 0xe
push eax
call Ordinal_MFC42_1146
push eax
call ebx
mov [ edi ] eax
add edi 0x4
inc esi
lea eax [ esi - 0xf2 ]
cmp eax 0xf
jl rwxdata
pop edi
pop esi
pop ebx
retn
sub_409c40
push esi
mov esi ecx
push edi
mov eax [ esi + 0x20 ]
push eax
call [ GetMenu@IAT ]
push eax
call Ordinal_MFC42_2863
mov edi eax
test edi edi
je rwxdata
push 0x0
lea ecx [ esi + 0x48c ]
mov [ esi + 0x164 ] 0x18
call Ordinal_MFC42_6215
push 0x0
lea ecx [ esi + 0x44c ]
call Ordinal_MFC42_6215
push 0x0
lea ecx [ esi + 0x40c ]
call Ordinal_MFC42_6215
push 0x0
lea ecx [ esi + 0x3cc ]
call Ordinal_MFC42_6215
push 0x0
lea ecx [ esi + 0x38c ]
call Ordinal_MFC42_6215
push 0x0
lea ecx [ esi + 0x30c ]
call Ordinal_MFC42_6215
mov ecx esi
call sub_408b00
mov ecx esi
call sub_409ec0
pop edi
pop esi
retn
mov ecx [ edi + 0x4 ]
push ebx
mov ebx [ CheckMenuItem@IAT ]
push 0x0
push 0x8012
push ecx
call ebx
mov edx [ edi + 0x4 ]
push 0x8
push 0x8013
push edx
call ebx
mov eax [ edi + 0x4 ]
push 0x0
push 0x8014
push eax
call ebx
pop ebx
sub_409d00
push 0xffffffff
push sub_40cd48
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push ebp
mov ebp [ GetMenu@IAT ]
push esi
mov esi ecx
push edi
mov eax [ esi + 0x20 ]
push eax
call ebp
push eax
call Ordinal_MFC42_2863
mov edi eax
test edi edi
je rwxdata
mov ecx esi
mov [ esi + 0x164 ] 0x1e
call sub_408b00
lea ecx [ esp + 0xc ]
call Ordinal_MFC42_540
mov ecx [ esi + 0x20 ]
mov [ esp + 0x18 ] 0x0
push ecx
call ebp
push eax
call Ordinal_MFC42_2863
mov ecx esi
call sub_409ec0
lea ecx [ esp + 0xc ]
mov [ esp + 0x18 ] 0xffffffff
call Ordinal_MFC42_800
mov ecx [ esp + 0x10 ]
pop edi
pop esi
pop ebp
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
mov ecx [ edi + 0x4 ]
push ebx
mov ebx [ CheckMenuItem@IAT ]
push 0x8
push 0x8012
push ecx
call ebx
mov edx [ edi + 0x4 ]
push 0x0
push 0x8013
push edx
call ebx
mov eax [ edi + 0x4 ]
push 0x0
push 0x8014
push eax
call ebx
pop ebx
sub_409dc0
push esi
mov esi ecx
push edi
mov eax [ esi + 0x20 ]
push eax
call [ GetMenu@IAT ]
push eax
call Ordinal_MFC42_2863
mov edi eax
test edi edi
je rwxdata
push 0x0
lea ecx [ esi + 0x64c ]
mov [ esi + 0x164 ] 0x12
call Ordinal_MFC42_6215
push 0x0
lea ecx [ esi + 0x5cc ]
call Ordinal_MFC42_6215
push 0x0
lea ecx [ esi + 0x58c ]
call Ordinal_MFC42_6215
push 0x0
lea ecx [ esi + 0x54c ]
call Ordinal_MFC42_6215
push 0x0
lea ecx [ esi + 0x50c ]
call Ordinal_MFC42_6215
push 0x0
lea ecx [ esi + 0x4cc ]
call Ordinal_MFC42_6215
push 0x0
lea ecx [ esi + 0x48c ]
call Ordinal_MFC42_6215
push 0x0
lea ecx [ esi + 0x44c ]
call Ordinal_MFC42_6215
push 0x0
lea ecx [ esi + 0x40c ]
call Ordinal_MFC42_6215
push 0x0
lea ecx [ esi + 0x3cc ]
call Ordinal_MFC42_6215
push 0x0
lea ecx [ esi + 0x38c ]
call Ordinal_MFC42_6215
push 0x0
lea ecx [ esi + 0x30c ]
call Ordinal_MFC42_6215
mov ecx esi
call sub_408b00
mov ecx esi
call sub_409ec0
pop edi
pop esi
retn
mov ecx [ edi + 0x4 ]
push ebx
mov ebx [ CheckMenuItem@IAT ]
push 0x0
push 0x8012
push ecx
call ebx
mov edx [ edi + 0x4 ]
push 0x0
push 0x8013
push edx
call ebx
mov eax [ edi + 0x4 ]
push 0x8
push 0x8014
push eax
call ebx
pop ebx
sub_409ec0
push 0xffffffff
push sub_40cd68
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push ebp
mov ebp ecx
push edi
lea ecx [ esp + 0x8 ]
call Ordinal_MFC42_540
mov eax [ ebp + 0x20 ]
mov [ esp + 0x14 ] 0x0
push eax
call [ GetMenu@IAT ]
push eax
call Ordinal_MFC42_2863
mov edi eax
test edi edi
je rwxdata
lea ecx [ esp + 0x8 ]
mov [ esp + 0x14 ] 0xffffffff
call Ordinal_MFC42_800
mov ecx [ esp + 0xc ]
pop edi
pop ebp
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
mov ecx [ edi + 0x4 ]
push ebx
mov ebx [ GetMenuStringA@IAT ]
push 0x32
push 0x0
push 0x0
push 0x8004
push ecx
call ebx
test eax eax
jle rwxdata
lea ecx [ esp + 0xc ]
call Ordinal_MFC42_2614
push esi
lea esi [ eax + eax + 0x2 ]
push esi
lea ecx [ esp + 0x14 ]
call Ordinal_MFC42_2919
mov edx [ edi + 0x4 ]
push 0x32
push esi
push eax
push 0x8004
push edx
call ebx
push 0xffffffff
lea ecx [ esp + 0x14 ]
call Ordinal_MFC42_5572
pop esi
jmp rwxdata
mov ecx ebp
call sub_4087c0
mov eax [ esp + 0xc ]
push rwxdata
push eax
call [ _mbscmp@IAT ]
add esp 0x8
test eax eax
pop ebx
jne rwxdata
sub_409fa0
mov eax [ esp + 0xc ]
push ebx
push esi
mov esi [ esp + 0xc ]
push edi
mov edi [ esp + 0x14 ]
push eax
push edi
push esi
call Ordinal_MFC42_4476
push 0x1
mov ecx esi
mov ebx eax
call Ordinal_MFC42_5875
mov ecx edi
call Ordinal_MFC42_3089
cmp eax 0xffffffff
jne rwxdata
mov ecx edi
call Ordinal_MFC42_3089
cmp eax 0x406
je rwxdata
push 0x1
mov ecx esi
call Ordinal_MFC42_5875
mov edx [ esi ]
push 0xff0000
mov ecx esi
call [ edx + 0x38 ]
jmp rwxdata
push 0x1
mov ecx esi
call Ordinal_MFC42_5875
mov eax [ esi ]
push 0x0
mov ecx esi
call [ eax + 0x38 ]
mov edx [ esi ]
push 0x0
mov ecx esi
call [ edx + 0x34 ]
mov ecx edi
call Ordinal_MFC42_3089
cmp eax 0x407
jne rwxdata
push 0x0
mov ecx esi
call Ordinal_MFC42_6086
push 0x5
call [ GetStockObject@IAT ]
pop edi
pop esi
pop ebx
retn 0xc
pop edi
mov eax ebx
pop esi
pop ebx
retn 0xc
push 0x1
mov ecx esi
call Ordinal_MFC42_5875
mov eax [ esi ]
push 0x0
mov ecx esi
call [ eax + 0x38 ]
mov edx [ esi ]
push 0x0
mov ecx esi
call [ edx + 0x34 ]
mov ecx edi
call Ordinal_MFC42_3089
cmp eax 0x3e8
jne rwxdata
sub_40a070
push 0xffffffff
push sub_40cd88
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x20
push ebx
push ebp
push esi
mov esi ecx
push edi
lea ecx [ esp + 0x10 ]
call Ordinal_MFC42_323
mov ebp [ esp + 0x40 ]
mov [ esp + 0x38 ] 0x0
test ebp ebp
jne rwxdata
mov eax [ ebp + 0x4 ]
xor eax eax
jmp rwxdata
push eax
mov eax [ esp + 0x18 ]
push eax
call Ordinal_MFC42_5785
mov edx [ esi + 0x20 ]
lea ecx [ esp + 0x20 ]
push ecx
push edx
mov edi eax
call [ GetClientRect@IAT ]
mov ecx [ esp + 0x2c ]
mov edx [ esp + 0x24 ]
mov eax [ esp + 0x20 ]
mov ebx [ esi + 0x188 ]
mov esi [ esi + 0x184 ]
sub ecx edx
mov edx [ esp + 0x28 ]
push 0xcc0020
sub edx eax
lea eax [ esp + 0x14 ]
neg eax
sbb eax eax
push ebx
and eax [ esp + 0x1c ]
push esi
push 0x0
push 0x0
push eax
mov eax [ ebp + 0x4 ]
push ecx
push edx
push 0x0
push 0x0
push eax
call [ StretchBlt@IAT ]
test edi edi
je rwxdata
mov eax [ eax + 0x4 ]
push eax
call [ CreateCompatibleDC@IAT ]
push eax
lea ecx [ esp + 0x14 ]
call Ordinal_MFC42_1640
lea eax [ esi + 0x174 ]
test eax eax
je rwxdata
mov ecx [ esp + 0x14 ]
push edi
push ecx
call Ordinal_MFC42_5785
lea ecx [ esp + 0x10 ]
mov [ esp + 0x38 ] 0xffffffff
call Ordinal_MFC42_640
mov ecx [ esp + 0x30 ]
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x2c
retn 0x4
mov edi [ edi + 0x4 ]
sub_40a180
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
xor ebx ebx
xor esi esi
push edi
mov [ ebp - 0x8 ] 0x64
mov [ ebp - 0x7 ] 0x8b
mov [ ebp - 0x6 ] 0x35
mov [ ebp - 0x5 ] 0x30
mov [ ebp - 0x4 ] bl
mov [ ebp - 0x3 ] bl
mov [ ebp - 0x2 ] bl
xor eax eax
inc eax
cmp eax 0x7
jb rwxdata
inc esi
xor ecx ecx
xor edx edx
mov cl [ eax + rwxdata ]
mov dl [ ebp + eax - 0x8 ]
sub edx ecx
jne rwxdata
push 0x317e
call Ordinal_MFC42_823
add esp 0x4
cmp esi 0x7
je rwxdata
push ebx
call [ exit@IAT ]
push rwxdata
call sub_40be84
mov esi eax
add esp 0x4
cmp esi 0xffffffff
je rwxdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push esi
call sub_40be28
push eax
call [ malloc@IAT ]
mov edi eax
add esp 0x8
cmp edi ebx
je rwxdata
mov ecx [ ebp - 0x8 ]
xor eax eax
mov dl 0xff
xor ecx ecx
jmp rwxdata
inc ecx
cmp ecx 0xa
je rwxdata
inc eax
cmp eax 0x18bf
jb rwxdata
sub eax 0xa
cmp [ eax + rwxdata ] dl
jne rwxdata
jmp rwxdata
xor ecx ecx
push esi
inc eax
push edi
push eax
push rwxdata
call sub_40a790
add esp 0x10
cmp eax esi
jne rwxdata
mov [ ecx + rwxdata ] bl
mov dl [ edi ]
inc edi
mov [ ecx + rwxdata ] dl
jmp rwxdata
cmp ecx eax
jae rwxdata
mov [ ebp - 0x8 ] rwxdata
mov eax [ ebp - 0x8 ]
inc eax
mov ebx 0x24
add eax ebx
call eax
xor ebx ebx
inc ecx
cmp ecx 0x18bf
jb rwxdata
_start
push ebp
mov ebp esp
push 0xffffffff
push rwxdata
push _except_handler3
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x68
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
xor ebx ebx
mov [ ebp - 0x4 ] ebx
push 0x2
call [ __set_app_type@IAT ]
pop ecx
or [ rwxdata ] 0xffffffff
or [ rwxdata ] 0xffffffff
call [ __p__fmode@IAT ]
mov ecx [ rwxdata ]
mov [ eax ] ecx
call [ __p__commode@IAT ]
mov ecx [ rwxdata ]
mov [ eax ] ecx
mov eax [ _adjust_fdiv@IAT ]
mov eax [ eax ]
mov [ rwxdata ] eax
call sub_40a783
cmp [ rwxdata ] ebx
jne rwxdata
call sub_40a76e
push rwxdata
push rwxdata
call _initterm
mov eax [ rwxdata ]
mov [ ebp - 0x6c ] eax
lea eax [ ebp - 0x6c ]
push eax
push [ rwxdata ]
lea eax [ ebp - 0x64 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
lea eax [ ebp - 0x60 ]
push eax
call [ __getmainargs@IAT ]
push rwxdata
push rwxdata
call _initterm
add esp 0x24
mov eax [ _acmdln@IAT ]
mov esi [ eax ]
mov [ ebp - 0x74 ] esi
cmp [ esi ] 0x22
jne rwxdata
push sub_40a780
call [ __setusermatherr@IAT ]
pop ecx
cmp [ esi ] 0x20
jbe rwxdata
inc esi
mov [ ebp - 0x74 ] esi
mov al [ esi ]
cmp al bl
je rwxdata
mov al [ esi ]
cmp al bl
je rwxdata
inc esi
mov [ ebp - 0x74 ] esi
jmp rwxdata
cmp [ esi ] 0x22
jne rwxdata
cmp al 0x22
jne rwxdata
mov [ ebp - 0x30 ] ebx
lea eax [ ebp - 0x5c ]
push eax
call [ GetStartupInfoA@IAT ]
test [ ebp - 0x30 ] 0x1
je rwxdata
cmp al 0x20
jbe rwxdata
inc esi
mov [ ebp - 0x74 ] esi
push 0xa
pop eax
movzx eax [ ebp - 0x2c ]
jmp rwxdata
push eax
push esi
push ebx
push ebx
call [ GetModuleHandleA@IAT ]
push eax
call sub_40c242
mov [ ebp - 0x68 ] eax
push eax
call [ exit@IAT ]
sub_40a790
pushad
mov esi [ esp + 0x24 ]
mov ecx [ esp + 0x28 ]
mov edi [ esp + 0x2c ]
test esi esi
je rwxdata
or eax 0xffffffff
test edi edi
je rwxdata
cmp ecx 0x18
jb rwxdata
mov ebx [ esi ]
cmp ebx 0x32335041
jne rwxdata
mov ebx [ esi + 0x4 ]
cmp ebx 0x18
jb rwxdata
sub ecx ebx
jb rwxdata
cmp [ esi + 0x8 ] ecx
ja rwxdata
add ebx esi
push [ esi + 0x8 ]
push ebx
call sub_40c164
add esp 0x8
cmp eax [ esi + 0xc ]
jne rwxdata
mov ecx [ esp + 0x30 ]
cmp [ esi + 0x10 ] ecx
ja rwxdata
push ecx
push edi
push [ esi + 0x8 ]
push ebx
call sub_40bea8
add esp 0x10
cmp eax [ esi + 0x10 ]
jne rwxdata
mov ebx eax
push eax
push edi
call sub_40c164
add esp 0x8
cmp eax [ esi + 0x14 ]
mov eax ebx
je rwxdata
mov [ esp + 0x1c ] eax
popad
retn
sub_40a810
mov eax [ esp + 0x4 ]
cmp eax 0x2
jge rwxdata
cmp eax 0x4
jge rwxdata
mov eax 0x64
retn 0x4
cmp eax 0x8
jge rwxdata
mov eax 0x2
retn 0x4
cmp eax 0x10
jge rwxdata
mov eax 0x4
retn 0x4
cmp eax 0x20
jge rwxdata
mov eax 0x6
retn 0x4
cmp eax 0x40
jge rwxdata
mov eax 0x8
retn 0x4
cmp eax 0x80
jge rwxdata
mov eax 0xa
retn 0x4
cmp eax 0x100
jge rwxdata
mov eax 0xc
retn 0x4
cmp eax 0x200
jge rwxdata
mov eax 0xe
retn 0x4
cmp eax 0x400
jge rwxdata
mov eax 0x10
retn 0x4
cmp eax 0x800
jge rwxdata
mov eax 0x12
retn 0x4
cmp eax 0x1000
jge rwxdata
mov eax 0x14
retn 0x4
cmp eax 0x2000
jge rwxdata
mov eax 0x16
retn 0x4
cmp eax 0x4000
jge rwxdata
mov eax 0x18
retn 0x4
cmp eax 0x8000
jge rwxdata
mov eax 0x1a
retn 0x4
xor ecx ecx
cmp eax 0x10000
setge cl
lea ecx [ ecx + ecx + 0x1e ]
mov eax ecx
retn 0x4
mov eax 0x1c
retn 0x4
sub_40a8fc
add [ ecx + 0x41c ] 0xffffffff
jne rwxdata
cmp [ esp + 0x4 ] 0x0
mov ecx [ ecx + 0x418 ]
je rwxdata
mov eax [ ecx + 0x410 ]
mov [ ecx + 0x418 ] eax
inc eax
mov [ ecx + 0x41c ] 0x8
mov [ ecx + 0x410 ] eax
shl [ ecx ] 0x1
retn 0x4
mov al [ ecx ]
add al al
inc al
mov [ ecx ] al
retn 0x4
sub_40a96e
add [ ecx + 0x41c ] 0xffffffff
jne rwxdata
mov ecx [ ecx + 0x418 ]
mov al [ ecx ]
add al al
inc al
mov [ ecx ] al
retn
mov eax [ ecx + 0x410 ]
mov [ ecx + 0x418 ] eax
inc eax
mov [ ecx + 0x41c ] 0x8
mov [ ecx + 0x410 ] eax
sub_40a9a3
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x4 ]
push ebp
push esi
push edi
xor esi esi
lea ecx [ ecx ]
mov edi eax
and edi 0x1
shr eax 0x1
inc esi
lea edx [ edi + edx * 2 ]
cmp eax 0x1
ja rwxdata
sub esi 0x1
mov ebp 0xffffffff
lea edi [ ebp + 0x9 ]
je rwxdata
add [ ecx + 0x41c ] ebp
jne rwxdata
push ebx
mov edi edi
mov eax [ ecx + 0x418 ]
test dl 0x1
je rwxdata
mov eax [ ecx + 0x410 ]
mov [ ecx + 0x418 ] eax
inc eax
mov [ ecx + 0x41c ] edi
mov [ ecx + 0x410 ] eax
mov eax [ ecx + 0x418 ]
test dl 0x1
je rwxdata
mov eax [ ecx + 0x410 ]
mov [ ecx + 0x418 ] eax
inc eax
mov [ ecx + 0x41c ] edi
mov [ ecx + 0x410 ] eax
shl [ eax ] 0x1
mov dl [ eax ]
add dl dl
inc dl
mov [ eax ] dl
jmp rwxdata
shl [ eax ] 0x1
mov bl [ eax ]
add bl bl
inc bl
mov [ eax ] bl
jmp rwxdata
mov ecx [ ecx + 0x418 ]
shl [ ecx ] 0x1
pop edi
pop esi
pop ebp
retn 0x4
mov eax [ ecx + 0x410 ]
mov [ ecx + 0x418 ] eax
inc eax
mov [ ecx + 0x41c ] edi
mov [ ecx + 0x410 ] eax
add [ ecx + 0x41c ] ebp
jne rwxdata
mov eax [ ecx + 0x418 ]
mov bl [ eax ]
add bl bl
inc bl
shr edx 0x1
sub esi 0x1
mov [ eax ] bl
jne rwxdata
mov eax [ ecx + 0x410 ]
mov [ ecx + 0x418 ] eax
inc eax
mov [ ecx + 0x41c ] edi
mov [ ecx + 0x410 ] eax
add [ ecx + 0x41c ] ebp
jne rwxdata
add [ ecx + 0x41c ] ebp
jne rwxdata
pop ebx
sub_40aaa9
push ebx
push ebp
mov ebp [ esp + 0x10 ]
push esi
xor eax eax
push edi
cmp ebp 0xf
jbe rwxdata
mov edi [ esp + 0x14 ]
mov esi edi
sub esi ebp
lea esp [ esp ]
mov ebp 0xf
add eax 0x7
mov ecx ebp
mov edx esi
lea ebx [ ebx ]
mov bl [ edi ]
test bl bl
je rwxdata
pop edi
pop esi
pop ebp
pop ebx
retn 0xc
add eax 0x7
test ecx ecx
jne rwxdata
dec ecx
inc edx
test ecx ecx
jne rwxdata
inc edi
inc esi
sub [ esp + 0x1c ] 0x1
jne rwxdata
add eax 0x2
jmp rwxdata
cmp bl [ edx ]
je rwxdata
sub_40ab02
mov edx [ esp + 0x4 ]
push ebp
push esi
mov esi ecx
mov [ esi + 0x428 ] 0x0
mov cl [ edx ]
test cl cl
je rwxdata
or ecx 0xffffffff
add [ esi + 0x41c ] ecx
lea ebp [ ecx + 0x9 ]
jne rwxdata
push edi
mov edi [ esp + 0x14 ]
cmp edi 0xf
jbe rwxdata
mov eax [ esi + 0x418 ]
mov dl [ eax ]
add dl dl
inc dl
mov [ eax ] dl
add [ esi + 0x41c ] ecx
jne rwxdata
mov eax [ esi + 0x410 ]
mov [ esi + 0x418 ] eax
inc eax
mov [ esi + 0x41c ] ebp
mov [ esi + 0x410 ] eax
mov eax edx
sub eax edi
nop
mov edi 0xf
mov eax [ esi + 0x418 ]
mov dl [ eax ]
add dl dl
inc dl
mov [ eax ] dl
add [ esi + 0x41c ] ecx
jne rwxdata
mov eax [ esi + 0x410 ]
mov [ esi + 0x418 ] eax
inc eax
mov [ esi + 0x41c ] ebp
mov [ esi + 0x410 ] eax
test edi edi
je rwxdata
dec edi
inc eax
test edi edi
jne rwxdata
mov eax [ esi + 0x418 ]
mov dl [ eax ]
add dl dl
inc dl
mov [ eax ] dl
add [ esi + 0x41c ] ecx
jne rwxdata
mov eax [ esi + 0x410 ]
mov [ esi + 0x418 ] eax
inc eax
mov [ esi + 0x41c ] ebp
mov [ esi + 0x410 ] eax
add [ esi + 0x41c ] 0xffffffff
jne rwxdata
or ecx 0xffffffff
add [ esi + 0x41c ] ecx
lea ebp [ ecx + 0x9 ]
jne rwxdata
cmp cl [ eax ]
je rwxdata
mov eax [ esi + 0x418 ]
shl [ eax ] 0x1
add [ esi + 0x41c ] ecx
jne rwxdata
mov eax [ esi + 0x410 ]
mov [ esi + 0x418 ] eax
inc eax
mov [ esi + 0x41c ] ebp
mov [ esi + 0x410 ] eax
mov eax [ esi + 0x418 ]
shl [ eax ] 0x1
mov eax [ esi + 0x410 ]
mov cl [ edx ]
pop edi
mov [ eax ] cl
inc [ esi + 0x410 ]
pop esi
pop ebp
retn 0x8
mov eax [ esi + 0x410 ]
mov [ esi + 0x418 ] eax
inc eax
mov [ esi + 0x41c ] 0x8
mov [ esi + 0x410 ] eax
mov eax [ esi + 0x418 ]
mov dl [ eax ]
add dl dl
inc dl
mov [ eax ] dl
add [ esi + 0x41c ] ecx
jne rwxdata
mov eax [ esi + 0x410 ]
mov [ esi + 0x418 ] eax
inc eax
mov [ esi + 0x41c ] ebp
mov [ esi + 0x410 ] eax
mov eax [ esi + 0x418 ]
shl [ eax ] 0x1
add [ esi + 0x41c ] ecx
jne rwxdata
mov eax [ esi + 0x410 ]
mov [ esi + 0x418 ] eax
inc eax
mov [ esi + 0x41c ] ebp
mov [ esi + 0x410 ] eax
mov eax [ esi + 0x418 ]
mov dl [ eax ]
add dl dl
inc dl
mov [ eax ] dl
add [ esi + 0x41c ] ecx
jne rwxdata
mov eax [ esi + 0x410 ]
mov [ esi + 0x418 ] eax
inc eax
mov [ esi + 0x41c ] ebp
mov [ esi + 0x410 ] eax
mov eax [ esi + 0x418 ]
shl [ eax ] 0x1
add [ esi + 0x41c ] ecx
jne rwxdata
mov eax [ esi + 0x410 ]
mov [ esi + 0x418 ] eax
inc eax
mov [ esi + 0x41c ] ebp
mov [ esi + 0x410 ] eax
mov eax [ esi + 0x418 ]
mov cl [ eax ]
add cl cl
inc cl
mov edx edi
and edx ebp
mov [ eax ] cl
push edx
mov ecx esi
call sub_40a8fc
mov eax edi
and eax 0x4
push eax
mov ecx esi
call sub_40a8fc
mov ecx edi
and ecx 0x2
push ecx
mov ecx esi
call sub_40a8fc
and edi 0x1
push edi
mov ecx esi
call sub_40a8fc
pop edi
pop esi
pop ebp
retn 0x8
mov eax [ esi + 0x410 ]
mov [ esi + 0x418 ] eax
inc eax
mov [ esi + 0x41c ] ebp
mov [ esi + 0x410 ] eax
mov esi [ esi + 0x418 ]
shl [ esi ] 0x1
pop esi
pop ebp
retn 0x8
mov eax [ esi + 0x410 ]
mov [ esi + 0x418 ] eax
inc eax
mov [ esi + 0x41c ] ebp
mov [ esi + 0x410 ] eax
sub_40ad8a
mov eax [ esp + 0x4 ]
push esi
push edi
mov edi [ esp + 0x10 ]
mov esi ecx
cmp eax 0x80
jae rwxdata
cmp eax [ esi + 0x424 ]
je rwxdata
cmp edi 0x4
jae rwxdata
push edi
call sub_40a810
pop edi
add eax 0x4
pop esi
retn 0x8
cmp eax 0x80
jae rwxdata
cmp eax [ esi + 0x424 ]
je rwxdata
cmp eax 0x500
jb rwxdata
sub edi 0x2
jmp rwxdata
neg eax
sbb eax eax
and eax 0x6
pop edi
add eax 0x5
pop esi
retn 0x8
cmp eax 0x7d00
jb rwxdata
dec edi
shr eax 0x8
push ebx
add eax 0x3
push eax
call sub_40a810
push edi
mov ecx esi
mov ebx eax
call sub_40a810
lea eax [ eax + ebx + 0xa ]
pop ebx
pop edi
pop esi
retn 0x8
dec edi
sub_40ae0c
push ebx
mov ebx [ esp + 0x8 ]
push ebp
push esi
mov esi ecx
cmp [ esi + 0x428 ] 0x0
push edi
je rwxdata
mov [ esi + 0x428 ] 0x1
cmp ebx 0x80
jae rwxdata
cmp ebx 0x80
jae rwxdata
or edi 0xffffffff
add [ esi + 0x41c ] edi
lea ebp [ edi + 0x9 ]
jne rwxdata
cmp [ esp + 0x18 ] 0x4
jae rwxdata
or edi 0xffffffff
add [ esi + 0x41c ] edi
lea ebp [ edi + 0x9 ]
jne rwxdata
cmp [ esp + 0x18 ] 0x4
jae rwxdata
mov eax [ esi + 0x418 ]
mov dl [ eax ]
add dl dl
inc dl
mov [ eax ] dl
add [ esi + 0x41c ] edi
jne rwxdata
mov eax [ esi + 0x410 ]
mov [ esi + 0x418 ] eax
inc eax
mov [ esi + 0x41c ] ebp
mov [ esi + 0x410 ] eax
cmp ebx [ esi + 0x424 ]
je rwxdata
mov eax [ esi + 0x418 ]
mov cl [ eax ]
add cl cl
inc cl
mov [ eax ] cl
add [ esi + 0x41c ] edi
jne rwxdata
mov eax [ esi + 0x410 ]
mov [ esi + 0x418 ] eax
inc eax
mov [ esi + 0x41c ] ebp
mov [ esi + 0x410 ] eax
call sub_40a96e
mov ecx esi
call sub_40a96e
mov ecx esi
call sub_40a93f
mov al [ esp + 0x18 ]
mov edx [ esi + 0x410 ]
mov cl bl
and al 0x1
add cl cl
add al cl
pop edi
mov [ edx ] al
inc [ esi + 0x410 ]
mov [ esi + 0x424 ] ebx
pop esi
pop ebp
pop ebx
retn 0x8
mov eax [ esi + 0x418 ]
shl [ eax ] 0x1
cmp ebx [ esi + 0x424 ]
je rwxdata
mov eax [ esi + 0x410 ]
mov [ esi + 0x418 ] eax
inc eax
mov [ esi + 0x41c ] ebp
mov [ esi + 0x410 ] eax
call sub_40a96e
mov ecx esi
call sub_40a96e
mov ecx esi
call sub_40a93f
mov al [ esp + 0x18 ]
mov ecx [ esi + 0x410 ]
mov dl bl
and al 0x1
add dl dl
add al dl
pop edi
mov [ ecx ] al
inc [ esi + 0x410 ]
mov [ esi + 0x424 ] ebx
pop esi
pop ebp
pop ebx
retn 0x8
mov eax [ esi + 0x418 ]
shl [ eax ] 0x1
mov edx ebx
shr edx 0x8
add edx 0x2
push edx
mov ecx esi
call sub_40a9a3
mov eax [ esi + 0x410 ]
mov [ eax ] bl
mov eax 0x1
add [ esi + 0x410 ] eax
mov [ esi + 0x424 ] ebx
cmp ebx 0x80
jae rwxdata
mov eax [ esi + 0x410 ]
mov [ esi + 0x418 ] eax
inc eax
mov [ esi + 0x41c ] ebp
mov [ esi + 0x410 ] eax
add [ esi + 0x41c ] edi
jne rwxdata
mov eax ebx
shr eax 0x8
add eax 0x3
push eax
call sub_40a9a3
mov ecx [ esi + 0x410 ]
mov [ ecx ] bl
mov eax 0x1
add [ esi + 0x410 ] eax
mov [ esi + 0x424 ] ebx
cmp ebx 0x80
jae rwxdata
cmp ebx 0x500
jb rwxdata
sub [ esp + 0x18 ] 0x2
mov ecx [ esp + 0x18 ]
push ecx
mov ecx esi
call sub_40a9a3
pop edi
pop esi
pop ebp
pop ebx
retn 0x8
mov eax [ esi + 0x418 ]
shl [ eax ] 0x1
add [ esi + 0x41c ] edi
jne rwxdata
mov eax [ esi + 0x410 ]
mov [ esi + 0x418 ] eax
inc eax
mov [ esi + 0x41c ] ebp
mov [ esi + 0x410 ] eax
cmp ebx 0x500
jb rwxdata
sub [ esp + 0x18 ] 0x2
mov edx [ esp + 0x18 ]
push edx
mov ecx esi
call sub_40a9a3
pop edi
pop esi
pop ebp
pop ebx
retn 0x8
cmp ebx 0x7d00
jb rwxdata
sub [ esp + 0x18 ] eax
mov eax [ esi + 0x418 ]
shl [ eax ] 0x1
mov eax [ esi + 0x410 ]
mov [ esi + 0x418 ] eax
inc eax
mov [ esi + 0x41c ] ebp
mov [ esi + 0x410 ] eax
cmp ebx 0x7d00
jb rwxdata
sub [ esp + 0x18 ] eax
mov ecx [ esp + 0x18 ]
push ecx
mov ecx esi
call sub_40a9a3
pop edi
pop esi
pop ebp
pop ebx
retn 0x8
sub [ esp + 0x18 ] eax
mov edx [ esp + 0x18 ]
push edx
mov ecx esi
call sub_40a9a3
pop edi
pop esi
pop ebp
pop ebx
retn 0x8
sub [ esp + 0x18 ] eax
mov edx [ esp + 0x18 ]
push edx
mov ecx esi
call sub_40a9a3
pop edi
pop esi
pop ebp
pop ebx
retn 0x8
sub_40b0d6
mov eax [ esp + 0x4 ]
lea edx [ eax + 0x16800 ]
cmp edx [ ecx + 0x404 ]
jbe rwxdata
xor eax eax
retn 0x4
mov ecx [ ecx + 0x40c ]
cmp eax ecx
jbe rwxdata
sub eax ecx
add eax 0x16800
retn 0x4
sub eax ecx
retn 0x4
sub_40b106
sub esp 0x10
push ebx
push ebp
mov ebp [ esp + 0x20 ]
push esi
xor ebx ebx
mov esi ecx
push edi
mov [ esp + 0x10 ] ebx
mov [ esp + 0x18 ] ebx
cmp [ esi + 0x408 ] ebp
jae rwxdata
mov eax [ esp + 0x30 ]
mov edx 0x16700
cmp eax edx
jbe rwxdata
jmp rwxdata
cmp eax 0x1
jbe rwxdata
mov [ esp + 0x30 ] edx
jmp rwxdata
mov eax [ esi + 0x404 ]
lea ecx [ eax + 0x16800 ]
cmp ecx eax
jbe rwxdata
mov eax [ esp + 0x24 ]
mov edx [ esp + 0x10 ]
mov ecx [ esp + 0x18 ]
pop edi
pop esi
pop ebp
mov [ eax + 0x4 ] edx
mov [ eax ] ecx
pop ebx
add esp 0x10
retn 0x10
movzx eax [ ebp ]
movzx ecx [ ebp + 0x1 ]
mov eax [ esi + eax * 4 + 0x4 ]
mov edi [ eax + ecx * 4 ]
cmp edi ebx
je rwxdata
xor eax eax
mov ecx [ esi + 0x40c ]
cmp eax ecx
jbe rwxdata
mov ecx [ esi + 0x420 ]
lea eax [ edi + ecx ]
mov [ esp + 0x1c ] 0x800
cmp eax ebp
jb rwxdata
cmp [ esi + 0x408 ] ebp
jb rwxdata
dec eax
mov [ esi + 0x40c ] eax
sub eax ecx
add eax 0x16800
jmp rwxdata
sub eax ecx
jmp rwxdata
cmp [ esp + 0x2c ] edx
jbe rwxdata
mov edi edi
mov ecx [ esi + 0x408 ]
movzx edx [ ecx ]
movzx ecx [ ecx + 0x1 ]
mov edx [ esi + edx * 4 + 0x4 ]
mov ecx [ edx + ecx * 4 ]
mov edi [ esi ]
mov [ edi + eax * 4 ] ecx
mov eax [ esi + 0x408 ]
movzx edx [ eax ]
movzx eax [ eax + 0x1 ]
mov ecx [ esi + edx * 4 + 0x4 ]
mov edx [ esi + 0x404 ]
mov [ ecx + eax * 4 ] edx
mov ecx 0x1
add [ esi + 0x404 ] ecx
add [ esi + 0x408 ] ecx
mov eax [ esi + 0x404 ]
mov ecx eax
sub ecx [ esi + 0x40c ]
cmp ecx 0x16800
jbe rwxdata
cmp edi ebx
je rwxdata
mov [ esp + 0x2c ] edx
lea eax [ edi + 0x16800 ]
cmp eax [ esi + 0x404 ]
jbe rwxdata
lea ebx [ ebx ]
xor edi edi
mov eax [ esi + 0x40c ]
cmp edi eax
jbe rwxdata
mov ecx [ esp + 0x10 ]
mov dl [ ecx + eax ]
cmp dl [ ebp + ecx ]
mov ecx [ esp + 0x14 ]
mov ebx 0x2
je rwxdata
cmp edi ebx
je rwxdata
sub edi eax
add edi 0x16800
jmp rwxdata
sub edi eax
jmp rwxdata
mov edx [ esp + 0x30 ]
cmp ebx edx
jae rwxdata
cmp ecx [ esi + 0x424 ]
jne rwxdata
mov eax [ esi ]
mov edi [ eax + edi * 4 ]
lea eax [ edi + ecx ]
cmp eax ebp
jae rwxdata
je rwxdata
lea ecx [ ebp + 0x2 ]
mov ebp eax
sub ebp [ esp + 0x28 ]
lea eax [ edi + 0x16800 ]
cmp eax [ esi + 0x404 ]
jbe rwxdata
mov [ esp + 0x18 ] ecx
mov [ esp + 0x10 ] ebx
cmp ebx [ esp + 0x10 ]
jbe rwxdata
mov ecx [ esp + 0x14 ]
mov ebp [ esp + 0x28 ]
cmp ebx edx
inc ebx
inc ecx
cmp ebx edx
jb rwxdata
xor edi edi
mov eax [ esi + 0x40c ]
cmp edi eax
jbe rwxdata
cmp ecx [ esi + 0x424 ]
jne rwxdata
push ebx
push ecx
mov ecx esi
call sub_40ad8a
mov ecx [ esp + 0x10 ]
mov edx [ esp + 0x18 ]
push ecx
push edx
mov ecx esi
mov ebp eax
call sub_40ad8a
sub ebp eax
mov ecx [ esp + 0x14 ]
add ebp ebp
mov eax 0x4ec4ec4f
imul ebp
mov ebp [ esp + 0x28 ]
sar edx 0x2
mov eax edx
shr eax 0x1f
add eax edx
add eax [ esp + 0x10 ]
cmp ebx eax
jbe rwxdata
mov al [ ebp + ecx ]
cmp al [ ecx ]
jne rwxdata
test edi edi
jne rwxdata
sub edi eax
add edi 0x16800
jmp rwxdata
sub edi eax
jmp rwxdata
push ebx
push ecx
mov ecx esi
call sub_40ad8a
mov edx [ esp + 0x10 ]
mov ebp eax
mov eax [ esp + 0x18 ]
push edx
push eax
mov ecx esi
call sub_40ad8a
mov ecx eax
sub ecx ebp
mov ebp [ esp + 0x28 ]
mov eax 0x2aaaaaab
imul ecx
mov ecx edx
shr ecx 0x1f
add ecx edx
add ecx ebx
cmp ecx [ esp + 0x10 ]
jb rwxdata
mov [ esp + 0x18 ] ecx
jmp rwxdata
mov ecx ebp
sub ecx eax
mov [ esp + 0x14 ] ecx
cmp ecx [ esp + 0x2c ]
ja rwxdata
jmp rwxdata
mov ecx [ esi ]
mov edi [ ecx + edi * 4 ]
mov eax [ esi + 0x420 ]
add eax edi
sub [ esp + 0x1c ] 0x1
je rwxdata
mov edx [ esp + 0x14 ]
mov [ esp + 0x18 ] edx
mov [ esp + 0x10 ] ebx
sub_40b3cd
sub esp 0x38
cmp [ esp + 0x44 ] 0x0
push esi
mov esi ecx
jne rwxdata
mov eax [ esp + 0x40 ]
test eax eax
jne rwxdata
xor eax eax
pop esi
add esp 0x38
retn 0x18
mov ecx [ esp + 0x44 ]
test ecx ecx
je rwxdata
or eax 0xffffffff
pop esi
add esp 0x38
retn 0x18
mov edx [ esp + 0x4c ]
test edx edx
je rwxdata
mov [ esi + 0x414 ] eax
dec eax
mov [ esi + 0x420 ] eax
mov [ esi + 0x410 ] ecx
mov eax 0xabeefbee
xor ecx ecx
push edi
movzx edi [ ecx + rwxdata ]
rol eax 0x1
xor eax edi
movzx edi [ ecx + rwxdata ]
rol eax 0x1
xor eax edi
movzx edi [ ecx + rwxdata ]
rol eax 0x1
xor eax edi
movzx edi [ ecx + rwxdata ]
rol eax 0x1
add ecx 0x4
xor eax edi
cmp ecx 0x100
jb rwxdata
test eax eax
jne rwxdata
pop edi
pop esi
add esp 0x38
retn 0x18
push ebx
mov [ esi ] edx
lea ecx [ esi + 0x4 ]
add edx 0x5a018
mov edi 0x100
lea ebx [ eax + 0x1 ]
push ebp
mov ebp [ ecx ]
mov [ ebp + eax ] 0x0
add eax 0x4
cmp eax 0x400
jb rwxdata
add edx 0x400
add ecx 0x4
sub edi ebx
jne rwxdata
mov [ ecx ] edx
xor eax eax
add eax 0x0
mov ecx [ esi + 0x414 ]
mov edx [ esi ]
or eax 0xffffffff
mov [ esi + 0x424 ] eax
mov [ esi + 0x408 ] ecx
mov [ esi + 0x404 ] ebx
mov [ esi + 0x40c ] edi
mov [ edx ] edi
mov ecx [ esi + 0x414 ]
mov edx [ esi + 0x410 ]
mov [ esi + 0x428 ] edi
mov cl [ ecx ]
mov [ esp + 0x1c ] eax
mov eax [ esp + 0x54 ]
mov [ edx ] cl
add [ esi + 0x414 ] ebx
add [ esi + 0x410 ] ebx
dec eax
mov [ esp + 0x10 ] edi
mov [ esp + 0x18 ] edi
mov [ esi + 0x41c ] ebx
mov [ esp + 0x58 ] ebx
cmp eax ebx
jbe rwxdata
mov edi [ esp + 0x54 ]
mov ebp 0x1
cmp ebx edi
jae rwxdata
lea ebx [ ebx ]
or ebx 0xffffffff
add [ esi + 0x41c ] ebx
lea ecx [ ebx + 0x9 ]
jne rwxdata
lea ebx [ ebx ]
cmp ebx [ esp + 0x1c ]
jne rwxdata
mov ecx [ esp + 0x18 ]
inc ecx
mov [ esp + 0x18 ] ecx
test cl cl
jne rwxdata
mov eax [ esi + 0x418 ]
mov dl [ eax ]
add dl dl
inc dl
mov [ eax ] dl
add [ esi + 0x41c ] ebx
jne rwxdata
mov eax [ esi + 0x410 ]
mov [ esi + 0x418 ] eax
inc eax
mov [ esi + 0x41c ] ecx
mov [ esi + 0x410 ] eax
mov eax [ esi + 0x414 ]
push ebx
push eax
mov ecx esi
call sub_40ab02
add [ esi + 0x414 ] ebp
add ebx ebp
cmp ebx edi
jb rwxdata
mov eax [ esp + 0x54 ]
mov ecx [ esi + 0x414 ]
sub eax ebx
push eax
push ebx
push ecx
lea edx [ esp + 0x34 ]
push edx
mov ecx esi
call sub_40b106
mov ebp [ esp + 0x2c ]
mov ebp [ esp + 0x44 ]
mov edx [ esp + 0x40 ]
mov [ esp + 0x2c ] ebp
mov [ esp + 0x28 ] edx
jmp rwxdata
mov edx [ esp + 0x60 ]
mov ecx [ esi + 0x410 ]
sub ecx [ esp + 0x50 ]
push edx
mov edx [ esi + 0x414 ]
sub edx [ esp + 0x50 ]
push ecx
mov ecx [ esp + 0x5c ]
push edx
push ecx
call eax
add esp 0x10
test eax eax
je rwxdata
mov eax [ esi + 0x418 ]
mov dl [ eax ]
add dl dl
inc dl
mov [ eax ] dl
add [ esi + 0x41c ] ebx
jne rwxdata
mov eax [ esi + 0x410 ]
mov [ esi + 0x418 ] eax
inc eax
mov [ esi + 0x41c ] ecx
mov [ esi + 0x410 ] eax
test edi edi
je rwxdata
mov eax [ esi + 0x424 ]
mov [ esp + 0x14 ] 0x0
cmp [ esp + 0x28 ] eax
jne rwxdata
cmp ebp 0x2
jl rwxdata
pop ebp
pop ebx
pop edi
or eax 0xffffffff
pop esi
add esp 0x38
retn 0x18
mov eax [ esi + 0x418 ]
shl [ eax ] 0x1
mov eax [ esi + 0x410 ]
mov [ eax ] 0x0
mov ecx [ esi + 0x41c ]
mov eax [ esi + 0x418 ]
add [ esi + 0x410 ] ebp
sub ecx ebp
shl [ eax ] cl
mov eax [ esp + 0x5c ]
test eax eax
je rwxdata
mov eax [ esi + 0x410 ]
mov [ esi + 0x418 ] eax
inc eax
mov [ esi + 0x41c ] ecx
mov [ esi + 0x410 ] eax
mov eax [ esi + 0x414 ]
push ebx
push eax
mov ecx esi
call sub_40ab02
inc edi
jmp rwxdata
mov eax [ esp + 0x54 ]
mov edx [ esi + 0x414 ]
sub eax ebx
mov [ esp + 0x20 ] eax
dec eax
push eax
lea ecx [ ebx + 0x1 ]
push ecx
inc edx
push edx
lea eax [ esp + 0x4c ]
push eax
mov ecx esi
call sub_40b106
mov ecx [ esp + 0x28 ]
cmp [ esp + 0x40 ] ecx
lea eax [ ebx + 0x1 ]
mov [ esp + 0x1c ] eax
push ebp
jl rwxdata
cmp edi 0x1
jbe rwxdata
mov eax [ esi + 0x410 ]
sub eax [ esp + 0x50 ]
pop ebp
pop ebx
mov ecx [ esp + 0x60 ]
mov edx [ esi + 0x410 ]
sub edx [ esp + 0x50 ]
push ecx
mov ecx [ esi + 0x414 ]
sub ecx [ esp + 0x50 ]
push edx
push ecx
push edi
call eax
add esp 0x10
test eax eax
jne rwxdata
mov eax [ esp + 0x54 ]
inc ebx
dec eax
mov [ esp + 0x58 ] ebx
cmp ebx eax
jb rwxdata
cmp edi [ esp + 0x3c ]
jne rwxdata
inc [ esi + 0x414 ]
mov ecx [ esp + 0x2c ]
push ecx
mov ecx esi
call sub_40ad8a
mov edx [ esp + 0x44 ]
mov ebx eax
mov eax [ esp + 0x40 ]
push edx
push eax
mov ecx esi
call sub_40ad8a
sub ebx eax
mov eax ebx
mov ebx [ esp + 0x58 ]
cdq
and edx 0x3
add eax edx
sar eax 0x2
mov edx ecx
push edx
mov ecx esi
call sub_40ad8a
mov ecx [ esp + 0x40 ]
mov [ esp + 0x24 ] eax
mov eax [ esp + 0x44 ]
push eax
push ecx
mov ecx esi
call sub_40ad8a
mov ecx [ esp + 0x24 ]
sub ecx eax
add ecx ecx
mov eax 0x38e38e39
imul ecx
sar edx 0x1
mov eax edx
shr eax 0x1f
add eax edx
jmp rwxdata
test edi edi
je rwxdata
cmp [ esp + 0x38 ] eax
je rwxdata
pop ebp
mov eax ebx
pop ebx
pop edi
pop esi
add esp 0x38
retn 0x18
mov eax [ esp + 0x5c ]
test eax eax
je rwxdata
test edi edi
je rwxdata
mov edx [ esp + 0x54 ]
mov ecx edi
sub ecx ebx
lea eax [ edx + ecx ]
cmp eax edi
jbe rwxdata
test edi edi
jbe rwxdata
mov [ esp + 0x14 ] 0x1
add eax [ esp + 0x44 ]
cmp ebp eax
jge rwxdata
cmp ebp 0x3
jg rwxdata
cmp edi 0x1
jbe rwxdata
mov eax [ esp + 0x10 ]
push edi
sub ebx edi
push ebx
push eax
mov ecx esi
call sub_40aaa9
mov ecx [ esp + 0x38 ]
push edi
push ecx
mov ecx esi
mov ebx eax
call sub_40ad8a
cmp eax ebx
jge rwxdata
cmp edi 0x1
jbe rwxdata
push eax
mov eax [ esp + 0x14 ]
mov ebp ebx
sub ebp edi
push ebp
push eax
lea ecx [ esp + 0x3c ]
push ecx
mov ecx esi
mov [ esp + 0x24 ] ebp
call sub_40b106
cmp [ esp + 0x34 ] edi
jb rwxdata
mov eax edi
jne rwxdata
cmp [ esp + 0x44 ] ebp
jl rwxdata
mov eax [ esp + 0x28 ]
push ebp
push eax
mov ecx esi
call sub_40ae0c
add [ esi + 0x414 ] ebp
lea ebx [ ebp + ebx - 0x1 ]
jmp rwxdata
mov eax [ esi + 0x414 ]
push ebp
push ebx
push eax
mov ecx esi
call sub_40aaa9
mov ecx [ esp + 0x28 ]
push ebp
push ecx
mov ecx esi
mov ebx eax
call sub_40ad8a
cmp eax ebx
jg rwxdata
mov edx [ esp + 0x10 ]
lea ecx [ ebx - 0x1 ]
push ecx
push edx
mov ecx esi
call sub_40ab02
mov edx [ esp + 0x54 ]
mov ecx edi
sub ecx ebx
lea eax [ edx + ecx ]
cmp eax edi
jbe rwxdata
mov ebx [ esp + 0x58 ]
mov eax [ esp + 0x38 ]
cmp eax 0x500
jl rwxdata
mov edx [ esp + 0x10 ]
lea ecx [ ebx - 0x1 ]
push ecx
push edx
mov ecx esi
call sub_40ab02
mov ecx [ esp + 0x10 ]
push edi
mov eax ebx
sub eax edi
push eax
push ecx
mov ecx esi
call sub_40aaa9
mov edx [ esp + 0x38 ]
push edi
push edx
mov ecx esi
mov ebp eax
call sub_40ad8a
cmp eax ebp
jg rwxdata
mov eax [ esp + 0x10 ]
push edi
push ebp
push eax
mov ecx esi
call sub_40aaa9
mov ecx [ esp + 0x38 ]
push edi
push ecx
mov ecx esi
mov ebp eax
call sub_40ad8a
cmp eax ebp
jge rwxdata
mov edx [ esp + 0x30 ]
push edi
push edx
mov ecx esi
call sub_40ad8a
mov ebp eax
mov eax [ esp + 0x38 ]
push edi
push eax
mov ecx esi
call sub_40ad8a
cmp eax ebp
mov ebp [ esp + 0x14 ]
jle rwxdata
cmp [ esp + 0x14 ] 0x0
jne rwxdata
cmp [ esp + 0x44 ] ebp
jge rwxdata
test edi edi
mov ecx [ esp + 0x28 ]
push ebp
push ecx
mov ecx esi
call sub_40ad8a
mov edx [ esp + 0x44 ]
mov ebx eax
mov eax [ esp + 0x40 ]
push edx
push eax
mov ecx esi
call sub_40ad8a
cmp eax ebx
mov ebx [ esp + 0x58 ]
jge rwxdata
test edi edi
je rwxdata
mov ebx [ esp + 0x58 ]
mov [ esp + 0x14 ] ebp
test ebp ebp
je rwxdata
mov eax [ esp + 0x28 ]
cmp eax [ esi + 0x424 ]
jne rwxdata
push eax
mov eax [ esp + 0x14 ]
sub ebx edi
push ebx
push eax
lea ecx [ esp + 0x3c ]
push ecx
mov ecx esi
mov [ esp + 0x24 ] ebx
call sub_40b106
cmp [ esp + 0x34 ] edi
jb rwxdata
mov eax edi
cmp eax 0x7d00
jl rwxdata
cmp edi 0x2
je rwxdata
mov ebp [ esp + 0x10 ]
mov eax [ esp + 0x38 ]
cmp eax [ esi + 0x424 ]
jne rwxdata
mov ebp [ esp + 0x10 ]
add eax 0x0
mov eax [ esp + 0x38 ]
cmp eax [ esi + 0x424 ]
jne rwxdata
mov ecx [ esp + 0x30 ]
mov edx [ esp + 0x34 ]
mov [ esp + 0x38 ] ecx
mov [ esp + 0x3c ] edx
test edi edi
jne rwxdata
cmp ebp 0x2
jle rwxdata
mov ecx [ esi + 0x414 ]
push 0x1
push ebx
push ecx
mov ecx esi
call sub_40aaa9
mov edx [ esp + 0x44 ]
mov ebx eax
mov eax [ esp + 0x40 ]
push edx
push eax
mov ecx esi
call sub_40ad8a
mov ecx [ esp + 0x28 ]
push ebp
push ecx
mov ecx esi
lea ebx [ eax + ebx + 0x1 ]
call sub_40ad8a
cmp ebx eax
mov ebx [ esp + 0x58 ]
jle rwxdata
mov [ esp + 0x14 ] 0x1
lea ebx [ ebp + ebx - 0x1 ]
jmp rwxdata
mov edx [ esi + 0x414 ]
push ebx
push edx
mov ecx esi
call sub_40ab02
mov eax 0x1
add [ esi + 0x414 ] eax
sub [ esp + 0x14 ] eax
jne rwxdata
cmp eax 0x500
jl rwxdata
cmp [ esi + 0x428 ] 0x0
je rwxdata
mov eax [ esp + 0x10 ]
push edi
push ebx
push eax
mov ecx esi
call sub_40aaa9
mov ecx [ esp + 0x38 ]
push edi
push ecx
mov ecx esi
mov ebx eax
call sub_40ad8a
cmp eax ebx
jge rwxdata
mov edx [ esp + 0x30 ]
push edi
push edx
mov ecx esi
call sub_40ad8a
mov ebx eax
mov eax [ esp + 0x38 ]
push edi
push eax
mov ecx esi
call sub_40ad8a
cmp eax ebx
mov ebx [ esp + 0x14 ]
jle rwxdata
mov ebx [ esp + 0x58 ]
cmp edi 0x3
je rwxdata
mov eax ebx
sub eax edi
push eax
push ebp
mov ecx esi
call sub_40ab02
inc ebp
sub edi 0x1
jne rwxdata
jmp rwxdata
cmp eax 0x500
jl rwxdata
cmp [ esi + 0x428 ] 0x0
je rwxdata
mov edx ebx
sub edx edi
push edx
push ebp
mov ecx esi
call sub_40ab02
inc ebp
sub edi 0x1
jne rwxdata
mov [ esp + 0x10 ] ebp
cmp eax 0x500
jl rwxdata
cmp [ esi + 0x428 ] 0x0
je rwxdata
inc edi
jmp rwxdata
mov ecx [ esp + 0x28 ]
mov edx [ esi + 0x414 ]
mov [ esp + 0x3c ] ebp
mov [ esp + 0x38 ] ecx
mov [ esp + 0x10 ] edx
mov edx [ esp + 0x20 ]
mov eax [ esi + 0x414 ]
add edx 0xfffffffe
push edx
add ebx 0x2
push ebx
add eax 0x2
push eax
lea ecx [ esp + 0x3c ]
push ecx
mov ecx esi
call sub_40b106
mov eax [ esp + 0x30 ]
cmp eax [ esp + 0x28 ]
mov edx [ esp + 0x34 ]
push edx
mov ecx esi
push eax
jl rwxdata
mov [ esp + 0x14 ] 0x0
jmp rwxdata
cmp eax 0x7d00
jl rwxdata
cmp ebp 0x2
je rwxdata
mov ebx [ esp + 0x58 ]
mov ebx [ esp + 0x58 ]
mov ebx [ esp + 0x28 ]
cmp ebx [ esi + 0x424 ]
jne rwxdata
mov ecx [ esp + 0x30 ]
mov edx [ esp + 0x34 ]
mov [ esp + 0x38 ] ecx
mov [ esp + 0x3c ] edx
cmp eax 0x7d00
jl rwxdata
cmp edi 0x2
je rwxdata
push edi
push eax
mov ecx esi
call sub_40ae0c
jmp rwxdata
cmp eax 0x7d00
jl rwxdata
cmp edi 0x2
je rwxdata
push edi
push eax
mov ecx esi
call sub_40ae0c
xor edi edi
jmp rwxdata
call sub_40ad8a
mov ebx eax
mov eax [ esp + 0x28 ]
push ebp
push eax
mov ecx esi
call sub_40ad8a
mov ecx eax
sub ecx ebx
add ecx ecx
mov eax 0x2e8ba2e9
imul ecx
sar edx 0x1
mov ecx edx
shr ecx 0x1f
add ecx edx
call sub_40ad8a
mov ebx eax
mov eax [ esp + 0x28 ]
push ebp
push eax
mov ecx esi
call sub_40ad8a
sub eax ebx
cdq
and edx 0x3
add eax edx
mov ecx eax
sar ecx 0x2
jmp rwxdata
mov eax [ esp + 0x10 ]
mov edx ebx
sub edx edi
push edx
push eax
mov ecx esi
call sub_40ab02
inc [ esp + 0x10 ]
sub edi 0x1
jne rwxdata
jmp rwxdata
mov ebx [ esp + 0x58 ]
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
push edi
push edx
push eax
mov ecx esi
call sub_40aaa9
push ebp
push ebx
mov ecx esi
mov [ esp + 0x2c ] eax
call sub_40ad8a
mov ecx [ esp + 0x24 ]
add ecx eax
mov edx ebx
push ebp
inc edx
mov [ esp + 0x28 ] ecx
push edx
mov ecx esi
call sub_40ad8a
mov ebx eax
mov eax [ esp + 0x38 ]
push edi
push eax
mov ecx esi
call sub_40ad8a
mov ebp [ esp + 0x2c ]
add ebx eax
mov eax [ esp + 0x24 ]
cmp eax ebx
mov ebx [ esp + 0x58 ]
jle rwxdata
cmp edi 0x3
je rwxdata
cmp edi 0x3
je rwxdata
test edi edi
jbe rwxdata
mov [ esp + 0x14 ] 0x1
mov eax [ esp + 0x34 ]
add ecx eax
cmp ebp ecx
jge rwxdata
cmp eax 0x500
jl rwxdata
cmp [ esi + 0x428 ] 0x0
je rwxdata
jmp rwxdata
cmp [ esp + 0x14 ] 0x0
jne rwxdata
cmp eax ebp
jl rwxdata
cmp [ esp + 0x38 ] 0x7d00
jl rwxdata
cmp edi 0x2
je rwxdata
mov ecx [ esp + 0x38 ]
push edi
push ecx
mov ecx esi
call sub_40ae0c
jmp rwxdata
mov eax [ esp + 0x38 ]
cmp eax [ esi + 0x424 ]
jne rwxdata
mov ebx [ esp + 0x58 ]
cmp ebp 0x3
jle rwxdata
mov edx [ esp + 0x30 ]
push eax
push edx
mov ecx esi
call sub_40ad8a
mov ebx eax
mov eax [ esp + 0x28 ]
push ebp
push eax
mov ecx esi
call sub_40ad8a
cmp ebx eax
jl rwxdata
cmp edi 0x3
je rwxdata
xor edi edi
mov ecx [ esp + 0x20 ]
mov edx [ esp + 0x58 ]
mov eax [ esi + 0x414 ]
add ecx 0xfffffffd
push ecx
add edx 0x3
push edx
add eax 0x3
push eax
lea ecx [ esp + 0x3c ]
push ecx
mov ecx esi
call sub_40b106
mov eax [ esp + 0x30 ]
mov edx [ esp + 0x34 ]
mov ebx [ esp + 0x28 ]
cmp eax ebx
push edx
mov ecx esi
push eax
jl rwxdata
call sub_40ad8a
push ebp
push ebx
mov ecx esi
mov [ esp + 0x2c ] eax
call sub_40ad8a
mov ecx eax
mov eax [ esp + 0x24 ]
sub ecx eax
add ecx ecx
mov eax 0x2e8ba2e9
imul ecx
sar edx 0x1
mov ecx edx
shr ecx 0x1f
add ecx edx
call sub_40ad8a
push ebp
push ebx
mov ecx esi
mov [ esp + 0x2c ] eax
call sub_40ad8a
mov ecx [ esp + 0x24 ]
sub eax ecx
cdq
and edx 0x3
add eax edx
mov ecx eax
sar ecx 0x2
jmp rwxdata
test edi edi
jbe rwxdata
mov [ esp + 0x14 ] 0x1
mov eax [ esp + 0x34 ]
add ecx eax
cmp ebp ecx
jge rwxdata
cmp [ esp + 0x14 ] 0x0
jne rwxdata
cmp eax ebp
jl rwxdata
mov edx [ esp + 0x30 ]
push eax
push edx
mov ecx esi
call sub_40ad8a
mov ebx eax
mov eax [ esp + 0x28 ]
push ebp
push eax
mov ecx esi
call sub_40ad8a
cmp ebx eax
jl rwxdata
sub_40be36
mov eax [ esp + 0xc ]
sub esp 0x42c
test eax eax
jne rwxdata
mov ecx [ esp + 0x444 ]
mov edx [ esp + 0x440 ]
push ecx
mov ecx [ esp + 0x440 ]
push edx
mov edx [ esp + 0x43c ]
push ecx
push eax
mov eax [ esp + 0x440 ]
push edx
push eax
lea ecx [ esp + 0x18 ]
call sub_40b3cd
add esp 0x42c
retn
add esp 0x42c
retn
sub_40be84
pushad
mov esi [ esp + 0x24 ]
mov ebx [ esi ]
or eax 0xffffffff
cmp ebx 0x32335041
jne rwxdata
mov [ esp + 0x1c ] eax
popad
retn
mov ebx [ esi + 0x4 ]
cmp ebx 0x18
jb rwxdata
mov eax [ esi + 0x10 ]
sub_40bea8
pushad
mov esi [ esp + 0x24 ]
mov eax [ esp + 0x28 ]
mov edi [ esp + 0x2c ]
mov ecx [ esp + 0x30 ]
push eax
push ecx
test esi esi
je rwxdata
add esp 0x8
popad
or eax 0xffffffff
retn
test edi edi
je rwxdata
cld
xor edx edx
mov al [ esi ]
add esi 0x1
sub [ esp ] 0x1
jb rwxdata
mov [ edi ] al
add edi 0x1
mov ebx 0x2
jae rwxdata
sub [ esp + 0x4 ] 0x1
jb rwxdata
sub [ esp + 0x4 ] 0x1
jb rwxdata
add dl dl
jne rwxdata
mov dl [ esi ]
inc esi
add dl dl
inc dl
jae rwxdata
sub [ esp + 0x4 ] 0x1
jb rwxdata
mov eax 0x1
xor eax eax
add dl dl
jne rwxdata
mov dl [ esi ]
inc esi
add dl dl
inc dl
adc eax eax
jb rwxdata
sub [ esp + 0x4 ] 0x1
jb rwxdata
jae rwxdata
sub [ esp + 0x4 ] 0x1
jb rwxdata
add dl dl
jne rwxdata
mov dl [ esi ]
inc esi
add dl dl
inc dl
sub [ esp + 0x4 ] 0x1
jb rwxdata
add dl dl
jne rwxdata
mov dl [ esi ]
inc esi
add dl dl
inc dl
jb rwxdata
sub [ esp + 0x4 ] 0x1
jb rwxdata
mov al [ esi ]
inc esi
xor ecx ecx
shr al 0x1
je rwxdata
adc eax eax
add dl dl
jne rwxdata
sub [ esp + 0x4 ] 0x1
jb rwxdata
add dl dl
jne rwxdata
sub eax ebx
mov ebx 0x1
jne rwxdata
mov dl [ esi ]
inc esi
add dl dl
inc dl
add esp 0x8
sub edi [ esp + 0x2c ]
mov [ esp + 0x1c ] edi
popad
retn
adc ecx 0x2
mov ebp eax
push ecx
mov ecx [ esp + 0x3c ]
sub ecx [ esp + 0x4 ]
cmp eax ecx
pop ecx
ja rwxdata
adc eax eax
add dl dl
jne rwxdata
sub [ esp + 0x4 ] 0x1
jb rwxdata
mov dl [ esi ]
inc esi
add dl dl
inc dl
dec eax
test eax 0xff000000
jne rwxdata
mov ecx 0x1
sub [ esp ] ecx
jb rwxdata
adc eax eax
add dl dl
jne rwxdata
sub [ esp + 0x4 ] 0x1
jb rwxdata
mov dl [ esi ]
inc esi
add dl dl
inc dl
shl eax 0x8
sub [ esp + 0x4 ] 0x1
jb rwxdata
adc ecx ecx
jb rwxdata
sub [ esp + 0x4 ] 0x1
jb rwxdata
push esi
mov esi edi
sub esi eax
[ edi ] [ esi ]
pop esi
mov ebx 0x1
jmp rwxdata
adc eax eax
je rwxdata
sub [ esp + 0x4 ] 0x1
jb rwxdata
mov dl [ esi ]
inc esi
add dl dl
inc dl
mov al [ esi ]
inc esi
mov ebp eax
mov ecx 0x1
add dl dl
jne rwxdata
mov dl [ esi ]
inc esi
add dl dl
inc dl
add dl dl
jne rwxdata
sub [ esp ] 0x1
jb rwxdata
mov ebx [ esp + 0x38 ]
sub ebx [ esp ]
cmp eax ebx
ja rwxdata
mov dl [ esi ]
inc esi
add dl dl
inc dl
adc ecx ecx
jb rwxdata
sub [ esp + 0x4 ] 0x1
jb rwxdata
jb rwxdata
sub [ esp + 0x4 ] 0x1
jb rwxdata
mov [ edi ] al
inc edi
mov ebx 0x2
jmp rwxdata
mov ebx edi
sub ebx eax
mov al [ ebx ]
add dl dl
jne rwxdata
mov dl [ esi ]
inc esi
add dl dl
inc dl
add dl dl
jne rwxdata
push ecx
mov ecx [ esp + 0x3c ]
sub ecx [ esp + 0x4 ]
cmp ebp ecx
pop ecx
ja rwxdata
mov dl [ esi ]
inc esi
add dl dl
inc dl
jb rwxdata
sub [ esp + 0x4 ] 0x1
jb rwxdata
sub [ esp ] ecx
jb rwxdata
add dl dl
jne rwxdata
cmp eax 0x7d00
sbb ecx 0xffffffff
cmp eax 0x500
sbb ecx 0xffffffff
cmp eax 0x80
adc ecx 0x0
cmp eax 0x80
adc ecx 0x0
push ecx
mov ecx [ esp + 0x3c ]
sub ecx [ esp + 0x4 ]
cmp eax ecx
pop ecx
ja rwxdata
mov dl [ esi ]
inc esi
add dl dl
inc dl
push esi
mov esi edi
sub esi ebp
[ edi ] [ esi ]
pop esi
jmp rwxdata
sub [ esp ] ecx
jb rwxdata
push esi
mov esi edi
sub esi eax
[ edi ] [ esi ]
pop esi
jmp rwxdata
sub_40c164
pushad
mov esi [ esp + 0x24 ]
mov ecx [ esp + 0x28 ]
mov edi rwxdata
sub eax eax
test esi esi
je rwxdata
mov [ esp + 0x1c ] eax
popad
retn
sub eax 0x1
test ecx ecx
je rwxdata
not eax
test esi 0x3
je rwxdata
mov edx ecx
and edx 0x7
shr ecx 0x3
je rwxdata
xor al [ esi ]
inc esi
mov ebx 0xff
and ebx eax
shr eax 0x8
xor eax [ edi + ebx * 4 ]
dec ecx
jne rwxdata
mov ecx edx
test ecx ecx
je rwxdata
xor eax [ esi ]
add esi 0x4
mov ebx 0xff
and ebx eax
shr eax 0x8
xor eax [ edi + ebx * 4 ]
mov ebx 0xff
and ebx eax
shr eax 0x8
xor eax [ edi + ebx * 4 ]
mov ebx 0xff
and ebx eax
shr eax 0x8
xor eax [ edi + ebx * 4 ]
mov ebx 0xff
and ebx eax
shr eax 0x8
xor eax [ edi + ebx * 4 ]
xor eax [ esi ]
add esi 0x4
mov ebx 0xff
and ebx eax
shr eax 0x8
xor eax [ edi + ebx * 4 ]
mov ebx 0xff
and ebx eax
shr eax 0x8
xor eax [ edi + ebx * 4 ]
mov ebx 0xff
and ebx eax
shr eax 0x8
xor eax [ edi + ebx * 4 ]
mov ebx 0xff
and ebx eax
shr eax 0x8
xor eax [ edi + ebx * 4 ]
dec ecx
jne rwxdata
xor al [ esi ]
inc esi
mov ebx 0xff
and ebx eax
shr eax 0x8
xor eax [ edi + ebx * 4 ]
dec ecx
jne rwxdata
sub_40c25a
call Ordinal_MFC42_1168
mov ecx [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
test ecx ecx
mov [ eax + 0x14 ] cl
mov [ eax + 0x1040 ] edx
jne rwxdata
push 0x1
pop eax
retn 0x8
push 0xfffffffd
call [ _setmbcp@IAT ]
pop ecx
sub_40d2fd
leave
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] ch
leave
inc eax
add [ ecx ] al
add [ eax ] al
add [ esi ] dh
leave
inc eax
add [ edx ] al
add [ eax ] al
add [ ecx + ecx * 8 + 0x40 ] al
add [ ebx ] al
add [ eax ] al
add [ edx - 0x37 ] dl
inc eax
add [ eax + eax ] al
add [ eax ] al
pushad
leave
inc eax
add [ 0x6e000000 ] al
leave
inc eax
add [ esi ] al
add [ eax ] al
add [ ecx + ecx * 8 + 0x40 ] bh
add [ edi ] al
add [ eax ] al
add [ edx + 0x80040c9 ] cl
add [ eax ] al
add [ eax + 0x90040c9 ] bl
add [ eax ] al
add [ esi + 0xa0040c9 ] ah
add [ eax ] al
add [ ecx + ecx * 8 + 0xb0040 ] dh
add [ eax ] al
retn 0x40c9
sub_40d35f
add [ eax + eax ] cl
add [ eax ] al
ror cl 0x1
inc eax
add [ 0xffffffffde000000 ] cl
leave
inc eax
add [ esi ] cl
add [ eax ] al
add ah ch
leave
inc eax
add [ edi ] cl
add [ eax ] al
add dl bh
leave
inc eax
add [ eax ] dl
add [ eax ] al
add [ eax ] cl
0x40
sub_40d3b0
push ss
add [ eax ] al
add [ edx + ecx * 8 + 0x40 ] bl
add [ edi ] dl
add [ eax ] al
add [ edx - 0x36 ] ch
inc eax
add [ eax ] bl
add [ eax ] al
add [ eax - 0x36 ] bh
inc eax
add [ ecx ] bl
add [ eax ] al
add [ esi + 0x1a0040ca ] al
add [ eax ] al
add [ edx + ecx * 8 + 0x1b0040 ] dl
add [ eax ] al
mov [ 0x1c0040ca ] al
add [ eax ] al
add [ eax + 0x1d0040ca ] dh
add [ eax ] al
add [ esi + 0x1e0040ca ] bh
add [ eax ] al
add ah cl
0x40
sub_40575c
retn 0x3b3
sub_405791
mov ebp 0xbac28abd
0x9330
sub_405890
push esi
mov esi ecx
call sub_4058b0
test [ esp + 0x8 ] 0x1
je rwxdata
mov eax esi
pop esi
retn 0x4
push esi
call Ordinal_MFC42_825
add esp 0x4
sub_4059a0
mov eax [ Ordinal_MFC42_4234@IAT ]
retn
sub_4059b0
mov eax rwxdata
retn
sub_405c20
mov al [ esp + 0x4 ]
push esi
mov esi ecx
test al 0x1
mov [ esi ] rwxdata
je rwxdata
mov eax esi
pop esi
retn 0x4
push esi
call Ordinal_MFC42_825
add esp 0x4
sub_405c40
mov [ ecx ] rwxdata
retn
sub_405c50
retn
sub_405c60
push esi
mov esi ecx
call sub_405c80
test [ esp + 0x8 ] 0x1
je rwxdata
mov eax esi
pop esi
retn 0x4
push esi
call Ordinal_MFC42_825
add esp 0x4
sub_405cd0
push esi
mov esi ecx
call sub_405cf0
test [ esp + 0x8 ] 0x1
je rwxdata
mov eax esi
pop esi
retn 0x4
push esi
call Ordinal_MFC42_825
add esp 0x4
sub_405d40
push esi
mov esi ecx
call sub_405d60
test [ esp + 0x8 ] 0x1
je rwxdata
mov eax esi
pop esi
retn 0x4
push esi
call Ordinal_MFC42_825
add esp 0x4
sub_405db0
mov eax [ ecx + 0x20 ]
push 0x0
push eax
call [ EnableWindow@IAT ]
retn
sub_405dc0
mov eax [ ecx + 0x20 ]
push 0x1
push eax
call [ EnableWindow@IAT ]
retn
sub_405dd0
call sub_405de0
jmp sub_405df0
sub_405de0
mov ecx rwxdata
jmp sub_406ec0
sub_405df0
push sub_405e00
call sub_40a5ec
pop ecx
retn
sub_405e00
mov ecx rwxdata
jmp sub_405cf0
sub_405f70
push esi
mov esi ecx
call sub_405f90
test [ esp + 0x8 ] 0x1
je rwxdata
mov eax esi
pop esi
retn 0x4
push esi
call Ordinal_MFC42_825
add esp 0x4
sub_406190
mov eax rwxdata
retn
sub_406b70
push 0x0
call sub_406310
retn
sub_406b80
push 0x1
call sub_406310
retn
sub_406b90
push esi
mov esi ecx
push 0x1
mov eax [ esi + 0x20 ]
push eax
call [ KillTimer@IAT ]
mov ecx esi
call Ordinal_MFC42_2379
pop esi
retn 0x4
sub_406ec0
mov eax ecx
mov [ eax + 0x4 ] 0x0
mov [ eax ] rwxdata
retn
sub_406ed0
retn 0x4
sub_406ee0
push esi
mov esi ecx
call Ordinal_MFC42_656
test [ esp + 0x8 ] 0x1
je rwxdata
mov eax esi
pop esi
retn 0x4
push esi
call Ordinal_MFC42_825
add esp 0x4
sub_406f00
mov eax [ Ordinal_MFC42_4274@IAT ]
retn
sub_406f10
mov eax rwxdata
retn
sub_406f20
push esi
mov esi ecx
push 0x0
call Ordinal_MFC42_561
mov [ esi ] rwxdata
mov eax esi
pop esi
retn
sub_406f40
push esi
mov esi ecx
call sub_406f60
test [ esp + 0x8 ] 0x1
je rwxdata
mov eax esi
pop esi
retn 0x4
push esi
call Ordinal_MFC42_825
add esp 0x4
sub_406f60
jmp Ordinal_MFC42_815
sub_406f70
call sub_406f80
jmp sub_406f90
sub_406f80
mov ecx rwxdata
jmp sub_406f20
sub_406f90
push sub_406fa0
call sub_40a5ec
pop ecx
retn
sub_406fa0
mov ecx rwxdata
jmp sub_406f60
sub_4075a0
push esi
push 0x0
mov esi ecx
push 0x64
call Ordinal_MFC42_324
mov [ esi ] rwxdata
mov eax esi
pop esi
retn
sub_4075c0
push esi
mov esi ecx
call sub_4075e0
test [ esp + 0x8 ] 0x1
je rwxdata
mov eax esi
pop esi
retn 0x4
push esi
call Ordinal_MFC42_825
add esp 0x4
sub_4075e0
jmp Ordinal_MFC42_641
sub_4075f0
retn 0x4
sub_407600
mov eax rwxdata
retn
sub_4079b0
push esi
mov esi ecx
call sub_407320
test [ esp + 0x8 ] 0x1
je rwxdata
mov eax esi
pop esi
retn 0x4
push esi
call Ordinal_MFC42_825
add esp 0x4
sub_407c20
mov eax rwxdata
retn
sub_408010
mov eax [ ecx + 0x914 ]
retn
sub_408020
push 0x0
call sub_4082b0
retn
sub_408030
push 0x1
call sub_4082b0
retn
sub_408040
push 0x2
call sub_4082b0
retn
sub_408050
push 0x3
call sub_4082b0
retn
sub_408060
push 0x4
call sub_4082b0
retn
sub_408070
push 0x5
call sub_4082b0
retn
sub_408080
push 0x6
call sub_4082b0
retn
sub_408090
push 0x7
call sub_4082b0
retn
sub_4080a0
push 0x8
call sub_4082b0
retn
sub_4080b0
push 0x9
call sub_4082b0
retn
sub_4080c0
push 0xa
call sub_4082b0
retn
sub_4080d0
push 0xb
call sub_4082b0
retn
sub_4080e0
push 0xc
call sub_4082b0
retn
sub_4080f0
push 0xd
call sub_4082b0
retn
sub_408100
push 0xe
call sub_4082b0
retn
sub_408110
push 0xf
call sub_4082b0
retn
sub_408120
push 0x10
call sub_4082b0
retn
sub_408130
push 0x11
call sub_4082b0
retn
sub_408140
push 0x12
call sub_4082b0
retn
sub_408150
push 0x13
call sub_4082b0
retn
sub_408160
push 0x14
call sub_4082b0
retn
sub_408170
push 0x15
call sub_4082b0
retn
sub_408180
push 0x16
call sub_4082b0
retn
sub_408190
push 0x17
call sub_4082b0
retn
sub_4081a0
push 0x18
call sub_4082b0
retn
sub_4081b0
push 0x19
call sub_4082b0
retn
sub_4081c0
push 0x1a
call sub_4082b0
retn
sub_4081d0
push 0x1b
call sub_4082b0
retn
sub_4081e0
push 0x1c
call sub_4082b0
retn
sub_4081f0
push 0x1d
call sub_4082b0
retn
sub_408600
jmp Ordinal_MFC42_4376
j_sub_408b00
jmp sub_408b00
sub_40a170
call Ordinal_MFC42_2379
retn 0xc
sub_40a290
mov eax ecx
mov [ eax ] rwxdata
mov [ eax + 0x4 ] 0x0
retn
sub_40a2a0
push esi
mov esi ecx
call Ordinal_MFC42_609
test [ esp + 0x8 ] 0x1
je rwxdata
mov eax esi
pop esi
retn 0x4
push esi
call Ordinal_MFC42_825
add esp 0x4
Ordinal_MFC42_3571
jmp [ Ordinal_MFC42_3571@IAT ]
Ordinal_MFC42_3573
jmp [ Ordinal_MFC42_3573@IAT ]
Ordinal_MFC42_5265
jmp [ Ordinal_MFC42_5265@IAT ]
Ordinal_MFC42_4376
jmp [ Ordinal_MFC42_4376@IAT ]
Ordinal_MFC42_4853
jmp [ Ordinal_MFC42_4853@IAT ]
Ordinal_MFC42_4998
jmp [ Ordinal_MFC42_4998@IAT ]
Ordinal_MFC42_2514
jmp [ Ordinal_MFC42_2514@IAT ]
Ordinal_MFC42_6052
jmp [ Ordinal_MFC42_6052@IAT ]
Ordinal_MFC42_4078
jmp [ Ordinal_MFC42_4078@IAT ]
Ordinal_MFC42_1775
jmp [ Ordinal_MFC42_1775@IAT ]
Ordinal_MFC42_4407
jmp [ Ordinal_MFC42_4407@IAT ]
Ordinal_MFC42_5241
jmp [ Ordinal_MFC42_5241@IAT ]
Ordinal_MFC42_2385
jmp [ Ordinal_MFC42_2385@IAT ]
Ordinal_MFC42_5163
jmp [ Ordinal_MFC42_5163@IAT ]
Ordinal_MFC42_6374
jmp [ Ordinal_MFC42_6374@IAT ]
Ordinal_MFC42_4353
jmp [ Ordinal_MFC42_4353@IAT ]
Ordinal_MFC42_5280
jmp [ Ordinal_MFC42_5280@IAT ]
Ordinal_MFC42_3798
jmp [ Ordinal_MFC42_3798@IAT ]
Ordinal_MFC42_4837
jmp [ Ordinal_MFC42_4837@IAT ]
Ordinal_MFC42_4441
jmp [ Ordinal_MFC42_4441@IAT ]
Ordinal_MFC42_2648
jmp [ Ordinal_MFC42_2648@IAT ]
Ordinal_MFC42_2055
jmp [ Ordinal_MFC42_2055@IAT ]
Ordinal_MFC42_6376
jmp [ Ordinal_MFC42_6376@IAT ]
Ordinal_MFC42_3749
jmp [ Ordinal_MFC42_3749@IAT ]
Ordinal_MFC42_5065
jmp [ Ordinal_MFC42_5065@IAT ]
Ordinal_MFC42_1727
jmp [ Ordinal_MFC42_1727@IAT ]
Ordinal_MFC42_5261
jmp [ Ordinal_MFC42_5261@IAT ]
Ordinal_MFC42_2446
jmp [ Ordinal_MFC42_2446@IAT ]
Ordinal_MFC42_2124
jmp [ Ordinal_MFC42_2124@IAT ]
Ordinal_MFC42_5277
jmp [ Ordinal_MFC42_5277@IAT ]
Ordinal_MFC42_2982
jmp [ Ordinal_MFC42_2982@IAT ]
Ordinal_MFC42_3147
jmp [ Ordinal_MFC42_3147@IAT ]
Ordinal_MFC42_3259
jmp [ Ordinal_MFC42_3259@IAT ]
Ordinal_MFC42_4465
jmp [ Ordinal_MFC42_4465@IAT ]
Ordinal_MFC42_3136
jmp [ Ordinal_MFC42_3136@IAT ]
Ordinal_MFC42_3262
jmp [ Ordinal_MFC42_3262@IAT ]
Ordinal_MFC42_2985
jmp [ Ordinal_MFC42_2985@IAT ]
Ordinal_MFC42_3081
jmp [ Ordinal_MFC42_3081@IAT ]
Ordinal_MFC42_2976
jmp [ Ordinal_MFC42_2976@IAT ]
Ordinal_MFC42_3830
jmp [ Ordinal_MFC42_3830@IAT ]
Ordinal_MFC42_3831
jmp [ Ordinal_MFC42_3831@IAT ]
Ordinal_MFC42_3825
jmp [ Ordinal_MFC42_3825@IAT ]
Ordinal_MFC42_3079
jmp [ Ordinal_MFC42_3079@IAT ]
Ordinal_MFC42_4080
jmp [ Ordinal_MFC42_4080@IAT ]
Ordinal_MFC42_4627
jmp [ Ordinal_MFC42_4627@IAT ]
Ordinal_MFC42_4425
jmp [ Ordinal_MFC42_4425@IAT ]
Ordinal_MFC42_3597
jmp [ Ordinal_MFC42_3597@IAT ]
Ordinal_MFC42_800
jmp [ Ordinal_MFC42_800@IAT ]
Ordinal_MFC42_641
jmp [ Ordinal_MFC42_641@IAT ]
Ordinal_MFC42_860
jmp [ Ordinal_MFC42_860@IAT ]
Ordinal_MFC42_540
jmp [ Ordinal_MFC42_540@IAT ]
Ordinal_MFC42_324
jmp [ Ordinal_MFC42_324@IAT ]
Ordinal_MFC42_825
jmp [ Ordinal_MFC42_825@IAT ]
Ordinal_MFC42_3663
jmp [ Ordinal_MFC42_3663@IAT ]
Ordinal_MFC42_3626
jmp [ Ordinal_MFC42_3626@IAT ]
Ordinal_MFC42_2414
jmp [ Ordinal_MFC42_2414@IAT ]
Ordinal_MFC42_2370
jmp [ Ordinal_MFC42_2370@IAT ]
Ordinal_MFC42_1641
jmp [ Ordinal_MFC42_1641@IAT ]
Ordinal_MFC42_1146
jmp [ Ordinal_MFC42_1146@IAT ]
Ordinal_MFC42_2818
jmp [ Ordinal_MFC42_2818@IAT ]
Ordinal_MFC42_6334
jmp [ Ordinal_MFC42_6334@IAT ]
Ordinal_MFC42_4710
jmp [ Ordinal_MFC42_4710@IAT ]
Ordinal_MFC42_6086
jmp [ Ordinal_MFC42_6086@IAT ]
Ordinal_MFC42_3089
jmp [ Ordinal_MFC42_3089@IAT ]
Ordinal_MFC42_5875
jmp [ Ordinal_MFC42_5875@IAT ]
Ordinal_MFC42_4476
jmp [ Ordinal_MFC42_4476@IAT ]
Ordinal_MFC42_640
jmp [ Ordinal_MFC42_640@IAT ]
Ordinal_MFC42_5785
jmp [ Ordinal_MFC42_5785@IAT ]
Ordinal_MFC42_1640
jmp [ Ordinal_MFC42_1640@IAT ]
Ordinal_MFC42_323
jmp [ Ordinal_MFC42_323@IAT ]
Ordinal_MFC42_6055
jmp [ Ordinal_MFC42_6055@IAT ]
Ordinal_MFC42_1776
jmp [ Ordinal_MFC42_1776@IAT ]
Ordinal_MFC42_5290
jmp [ Ordinal_MFC42_5290@IAT ]
Ordinal_MFC42_3402
jmp [ Ordinal_MFC42_3402@IAT ]
Ordinal_MFC42_4424
jmp [ Ordinal_MFC42_4424@IAT ]
Ordinal_MFC42_3610
jmp [ Ordinal_MFC42_3610@IAT ]
Ordinal_MFC42_656
jmp [ Ordinal_MFC42_656@IAT ]
Ordinal_MFC42_567
jmp [ Ordinal_MFC42_567@IAT ]
Ordinal_MFC42_2302
jmp [ Ordinal_MFC42_2302@IAT ]
Ordinal_MFC42_2642
jmp [ Ordinal_MFC42_2642@IAT ]
Ordinal_MFC42_3092
jmp [ Ordinal_MFC42_3092@IAT ]
Ordinal_MFC42_5953
jmp [ Ordinal_MFC42_5953@IAT ]
Ordinal_MFC42_3098
jmp [ Ordinal_MFC42_3098@IAT ]
Ordinal_MFC42_2379
jmp [ Ordinal_MFC42_2379@IAT ]
Ordinal_MFC42_5787
jmp [ Ordinal_MFC42_5787@IAT ]
Ordinal_MFC42_4673
jmp [ Ordinal_MFC42_4673@IAT ]
Ordinal_MFC42_6375
jmp [ Ordinal_MFC42_6375@IAT ]
Ordinal_MFC42_4486
jmp [ Ordinal_MFC42_4486@IAT ]
Ordinal_MFC42_2554
jmp [ Ordinal_MFC42_2554@IAT ]
Ordinal_MFC42_2512
jmp [ Ordinal_MFC42_2512@IAT ]
Ordinal_MFC42_5731
jmp [ Ordinal_MFC42_5731@IAT ]
Ordinal_MFC42_3922
jmp [ Ordinal_MFC42_3922@IAT ]
Ordinal_MFC42_1089
jmp [ Ordinal_MFC42_1089@IAT ]
Ordinal_MFC42_5199
jmp [ Ordinal_MFC42_5199@IAT ]
Ordinal_MFC42_2396
jmp [ Ordinal_MFC42_2396@IAT ]
Ordinal_MFC42_3346
jmp [ Ordinal_MFC42_3346@IAT ]
Ordinal_MFC42_5300
jmp [ Ordinal_MFC42_5300@IAT ]
Ordinal_MFC42_5302
jmp [ Ordinal_MFC42_5302@IAT ]
Ordinal_MFC42_2725
jmp [ Ordinal_MFC42_2725@IAT ]
Ordinal_MFC42_4079
jmp [ Ordinal_MFC42_4079@IAT ]
Ordinal_MFC42_4698
jmp [ Ordinal_MFC42_4698@IAT ]
Ordinal_MFC42_5307
jmp [ Ordinal_MFC42_5307@IAT ]
Ordinal_MFC42_5289
jmp [ Ordinal_MFC42_5289@IAT ]
Ordinal_MFC42_5714
jmp [ Ordinal_MFC42_5714@IAT ]
Ordinal_MFC42_4622
jmp [ Ordinal_MFC42_4622@IAT ]
Ordinal_MFC42_3738
jmp [ Ordinal_MFC42_3738@IAT ]
Ordinal_MFC42_561
jmp [ Ordinal_MFC42_561@IAT ]
Ordinal_MFC42_815
jmp [ Ordinal_MFC42_815@IAT ]
Ordinal_MFC42_609
jmp [ Ordinal_MFC42_609@IAT ]
Ordinal_MFC42_6215
jmp [ Ordinal_MFC42_6215@IAT ]
Ordinal_MFC42_2621
jmp [ Ordinal_MFC42_2621@IAT ]
Ordinal_MFC42_1134
jmp [ Ordinal_MFC42_1134@IAT ]
Ordinal_MFC42_2575
jmp [ Ordinal_MFC42_2575@IAT ]
Ordinal_MFC42_4396
jmp [ Ordinal_MFC42_4396@IAT ]
Ordinal_MFC42_3574
jmp [ Ordinal_MFC42_3574@IAT ]
Ordinal_MFC42_1168
jmp [ Ordinal_MFC42_1168@IAT ]
Ordinal_MFC42_2364
jmp [ Ordinal_MFC42_2364@IAT ]
Ordinal_MFC42_4287
jmp [ Ordinal_MFC42_4287@IAT ]
Ordinal_MFC42_4299
jmp [ Ordinal_MFC42_4299@IAT ]
Ordinal_MFC42_4160
jmp [ Ordinal_MFC42_4160@IAT ]
Ordinal_MFC42_2863
jmp [ Ordinal_MFC42_2863@IAT ]
Ordinal_MFC42_755
jmp [ Ordinal_MFC42_755@IAT ]
Ordinal_MFC42_470
jmp [ Ordinal_MFC42_470@IAT ]
Ordinal_MFC42_2614
jmp [ Ordinal_MFC42_2614@IAT ]
Ordinal_MFC42_5572
jmp [ Ordinal_MFC42_5572@IAT ]
Ordinal_MFC42_2919
jmp [ Ordinal_MFC42_2919@IAT ]
Ordinal_MFC42_823
jmp [ Ordinal_MFC42_823@IAT ]
__CxxFrameHandler
jmp [ __CxxFrameHandler@IAT ]
sub_40a5c0
cmp [ rwxdata ] 0xffffffff
jne rwxdata
push rwxdata
push rwxdata
push [ esp + 0xc ]
call __dllonexit
add esp 0xc
retn
push [ esp + 0x4 ]
call [ _onexit@IAT ]
pop ecx
retn
sub_40a5ec
push [ esp + 0x4 ]
call sub_40a5c0
neg eax
sbb eax eax
pop ecx
neg eax
dec eax
retn
__dllonexit
jmp [ __dllonexit@IAT ]
_XcptFilter
jmp [ _XcptFilter@IAT ]
_initterm
jmp [ _initterm@IAT ]
sub_40a76e
push 0x30000
push 0x10000
call _controlfp
pop ecx
pop ecx
retn
sub_40a780
xor eax eax
retn
sub_40a783
retn
_except_handler3
jmp [ _except_handler3@IAT ]
_controlfp
jmp [ _controlfp@IAT ]
sub_40be22
mov eax 0xa0000
retn
sub_40be28
mov eax [ esp + 0x4 ]
mov ecx eax
shr ecx 0x3
lea eax [ eax + ecx + 0x40 ]
retn
sub_40c242
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
call Ordinal_MFC42_1576
retn 0x10
j_sub_40c288
jmp sub_40c288
sub_40c288
push 0x600
push 0x0
call sub_40c25a
mov [ rwxdata ] al
retn
Ordinal_MFC42_1576
jmp [ Ordinal_MFC42_1576@IAT ]
sub_40c2a0
mov ecx [ ebp - 0x10 ]
jmp Ordinal_MFC42_641
sub_40c2a8
mov ecx [ ebp - 0x10 ]
add ecx 0x60
jmp sub_405d60
sub_40c2b3
mov ecx [ ebp - 0x10 ]
add ecx 0x68
jmp sub_405cf0
sub_40c2be
mov ecx [ ebp - 0x10 ]
add ecx 0x78
jmp Ordinal_MFC42_800
sub_40c2c9
mov ecx [ ebp - 0x10 ]
add ecx 0x7c
jmp Ordinal_MFC42_800
sub_40c2d4
mov ecx [ ebp - 0x10 ]
add ecx 0x80
jmp Ordinal_MFC42_800
sub_40c2e2
mov eax rwxdata
jmp __CxxFrameHandler
sub_40c2f0
mov ecx [ ebp - 0x14 ]
jmp Ordinal_MFC42_641
sub_40c2f8
mov ecx [ ebp - 0x14 ]
add ecx 0x60
jmp sub_405d60
sub_40c303
mov ecx [ ebp - 0x14 ]
add ecx 0x68
jmp sub_405cf0
sub_40c30e
mov ecx [ ebp - 0x14 ]
add ecx 0x78
jmp Ordinal_MFC42_800
sub_40c319
mov ecx [ ebp - 0x14 ]
add ecx 0x7c
jmp Ordinal_MFC42_800
sub_40c324
mov ecx [ ebp - 0x10 ]
jmp sub_405c40
sub_40c32c
mov ecx [ ebp - 0x10 ]
jmp sub_405c40
sub_40c334
mov eax rwxdata
jmp __CxxFrameHandler
sub_40c340
lea ecx [ ebp - 0x2c ]
jmp Ordinal_MFC42_640
sub_40c348
mov eax rwxdata
jmp __CxxFrameHandler
sub_40c360
mov ecx [ ebp - 0x10 ]
jmp sub_405c40
sub_40c368
mov eax rwxdata
jmp __CxxFrameHandler
sub_40c380
mov ecx [ ebp - 0x10 ]
jmp sub_405c40
sub_40c388
mov eax rwxdata
jmp __CxxFrameHandler
sub_40c3a0
mov ecx [ ebp - 0x10 ]
jmp sub_405c40
sub_40c3a8
mov eax rwxdata
jmp __CxxFrameHandler
sub_40c3c0
mov ecx [ ebp - 0x10 ]
jmp Ordinal_MFC42_641
sub_40c3c8
mov ecx [ ebp - 0x10 ]
add ecx 0x90
jmp sub_405d60
sub_40c3d6
mov ecx [ ebp - 0x10 ]
add ecx 0x98
jmp sub_405cf0
sub_40c3e4
mov ecx [ ebp - 0x10 ]
add ecx 0xa8
jmp Ordinal_MFC42_656
sub_40c3f2
mov ecx [ ebp - 0x10 ]
add ecx 0xe8
jmp Ordinal_MFC42_656
sub_40c400
mov ecx [ ebp - 0x10 ]
add ecx 0x128
jmp Ordinal_MFC42_656
sub_40c40e
mov ecx [ ebp - 0x10 ]
add ecx 0x168
jmp Ordinal_MFC42_656
sub_40c41c
mov ecx [ ebp - 0x10 ]
add ecx 0x1a8
jmp Ordinal_MFC42_656
sub_40c42a
mov ecx [ ebp - 0x10 ]
add ecx 0x1e8
jmp Ordinal_MFC42_656
sub_40c438
mov ecx [ ebp - 0x10 ]
add ecx 0x228
jmp Ordinal_MFC42_656
sub_40c446
mov ecx [ ebp - 0x10 ]
add ecx 0x268
jmp Ordinal_MFC42_656
sub_40c454
mov ecx [ ebp - 0x10 ]
add ecx 0x2a8
jmp Ordinal_MFC42_656
sub_40c462
mov eax rwxdata
jmp __CxxFrameHandler
sub_40c470
mov ecx [ ebp - 0x14 ]
jmp Ordinal_MFC42_641
sub_40c478
mov ecx [ ebp - 0x14 ]
add ecx 0x90
jmp sub_405d60
sub_40c486
mov ecx [ ebp - 0x14 ]
add ecx 0x98
jmp sub_405cf0
sub_40c494
mov ecx [ ebp - 0x14 ]
add ecx 0xa8
jmp Ordinal_MFC42_656
sub_40c4a2
mov ecx [ ebp - 0x14 ]
add ecx 0xe8
jmp Ordinal_MFC42_656
sub_40c4b0
mov ecx [ ebp - 0x14 ]
add ecx 0x128
jmp Ordinal_MFC42_656
sub_40c4be
mov ecx [ ebp - 0x14 ]
add ecx 0x168
jmp Ordinal_MFC42_656
sub_40c4cc
mov ecx [ ebp - 0x14 ]
add ecx 0x1a8
jmp Ordinal_MFC42_656
sub_40c4da
mov ecx [ ebp - 0x14 ]
add ecx 0x1e8
jmp Ordinal_MFC42_656
sub_40c4e8
mov ecx [ ebp - 0x14 ]
add ecx 0x228
jmp Ordinal_MFC42_656
sub_40c4f6
mov ecx [ ebp - 0x14 ]
add ecx 0x268
jmp Ordinal_MFC42_656
sub_40c504
mov ecx [ ebp - 0x14 ]
add ecx 0x2a8
jmp Ordinal_MFC42_656
sub_40c512
mov ecx [ ebp - 0x10 ]
jmp sub_405c40
sub_40c51a
mov ecx [ ebp - 0x10 ]
jmp sub_405c40
sub_40c522
mov eax rwxdata
jmp __CxxFrameHandler
sub_40c530
lea ecx [ ebp - 0x14 ]
jmp sub_405cf0
sub_40c538
lea ecx [ ebp - 0x14 ]
jmp sub_405c40
sub_40c540
lea ecx [ ebp - 0x1c ]
jmp sub_405d60
sub_40c548
lea ecx [ ebp - 0x1c ]
jmp sub_405c40
sub_40c550
lea ecx [ ebp - 0x14 ]
jmp sub_405c40
sub_40c558
mov eax rwxdata
jmp __CxxFrameHandler
sub_40c570
lea ecx [ ebp - 0x2c ]
jmp Ordinal_MFC42_640
sub_40c578
mov eax rwxdata
jmp __CxxFrameHandler
sub_40c590
lea ecx [ ebp - 0x924 ]
jmp sub_407320
sub_40c59b
lea ecx [ ebp - 0x924 ]
jmp Ordinal_MFC42_641
sub_40c5a6
lea ecx [ ebp - 0x7b0 ]
jmp sub_405d60
sub_40c5b1
lea ecx [ ebp - 0x7a8 ]
jmp sub_405cf0
sub_40c5bc
lea ecx [ ebp - 0x798 ]
jmp Ordinal_MFC42_609
sub_40c5c7
lea ecx [ ebp - 0x758 ]
jmp Ordinal_MFC42_609
sub_40c5d2
lea ecx [ ebp - 0x718 ]
jmp Ordinal_MFC42_609
sub_40c5dd
lea ecx [ ebp - 0x6d8 ]
jmp Ordinal_MFC42_609
sub_40c5e8
lea ecx [ ebp - 0x698 ]
jmp Ordinal_MFC42_609
sub_40c5f3
lea ecx [ ebp - 0x658 ]
jmp Ordinal_MFC42_609
sub_40c5fe
lea ecx [ ebp - 0x618 ]
jmp Ordinal_MFC42_609
sub_40c609
lea ecx [ ebp - 0x5d8 ]
jmp Ordinal_MFC42_609
sub_40c614
lea ecx [ ebp - 0x598 ]
jmp Ordinal_MFC42_609
sub_40c61f
lea ecx [ ebp - 0x558 ]
jmp Ordinal_MFC42_609
sub_40c62a
lea ecx [ ebp - 0x518 ]
jmp Ordinal_MFC42_609
sub_40c635
lea ecx [ ebp - 0x4d8 ]
jmp Ordinal_MFC42_609
sub_40c640
lea ecx [ ebp - 0x498 ]
jmp Ordinal_MFC42_609
sub_40c64b
lea ecx [ ebp - 0x458 ]
jmp Ordinal_MFC42_609
sub_40c656
lea ecx [ ebp - 0x418 ]
jmp Ordinal_MFC42_609
sub_40c661
lea ecx [ ebp - 0x3d8 ]
jmp Ordinal_MFC42_609
sub_40c66c
lea ecx [ ebp - 0x398 ]
jmp Ordinal_MFC42_609
sub_40c677
lea ecx [ ebp - 0x358 ]
jmp Ordinal_MFC42_609
sub_40c682
lea ecx [ ebp - 0x318 ]
jmp Ordinal_MFC42_609
sub_40c68d
lea ecx [ ebp - 0x2d8 ]
jmp Ordinal_MFC42_609
sub_40c698
lea ecx [ ebp - 0x298 ]
jmp Ordinal_MFC42_609
sub_40c6a3
lea ecx [ ebp - 0x258 ]
jmp Ordinal_MFC42_609
sub_40c6ae
lea ecx [ ebp - 0x218 ]
jmp Ordinal_MFC42_609
sub_40c6b9
lea ecx [ ebp - 0x1d8 ]
jmp Ordinal_MFC42_609
sub_40c6c4
lea ecx [ ebp - 0x198 ]
jmp Ordinal_MFC42_609
sub_40c6cf
lea ecx [ ebp - 0x158 ]
jmp Ordinal_MFC42_609
sub_40c6da
lea ecx [ ebp - 0x118 ]
jmp Ordinal_MFC42_609
sub_40c6e5
lea ecx [ ebp - 0xd8 ]
jmp Ordinal_MFC42_609
sub_40c6f0
lea ecx [ ebp - 0x98 ]
jmp Ordinal_MFC42_609
sub_40c6fb
lea ecx [ ebp - 0x58 ]
jmp Ordinal_MFC42_609
sub_40c703
mov ecx [ ebp - 0x928 ]
jmp sub_405c40
sub_40c70e
mov ecx [ ebp - 0x928 ]
jmp sub_405c40
sub_40c719
mov eax rwxdata
jmp __CxxFrameHandler
sub_40c730
mov ecx [ ebp - 0x14 ]
jmp Ordinal_MFC42_641
sub_40c738
mov ecx [ ebp - 0x14 ]
add ecx 0x174
jmp sub_405d60
sub_40c746
mov ecx [ ebp - 0x14 ]
add ecx 0x17c
jmp sub_405cf0
sub_40c754
mov ecx [ ebp - 0x14 ]
add ecx 0x18c
jmp Ordinal_MFC42_609
sub_40c762
mov ecx [ ebp - 0x14 ]
add ecx 0x1cc
jmp Ordinal_MFC42_609
sub_40c770
mov ecx [ ebp - 0x14 ]
add ecx 0x20c
jmp Ordinal_MFC42_609
sub_40c77e
mov ecx [ ebp - 0x14 ]
add ecx 0x24c
jmp Ordinal_MFC42_609
sub_40c78c
mov ecx [ ebp - 0x14 ]
add ecx 0x28c
jmp Ordinal_MFC42_609
sub_40c79a
mov ecx [ ebp - 0x14 ]
add ecx 0x2cc
jmp Ordinal_MFC42_609
sub_40c7a8
mov ecx [ ebp - 0x14 ]
add ecx 0x30c
jmp Ordinal_MFC42_609
sub_40c7b6
mov ecx [ ebp - 0x14 ]
add ecx 0x34c
jmp Ordinal_MFC42_609
sub_40c7c4
mov ecx [ ebp - 0x14 ]
add ecx 0x38c
jmp Ordinal_MFC42_609
sub_40c7d2
mov ecx [ ebp - 0x14 ]
add ecx 0x3cc
jmp Ordinal_MFC42_609
sub_40c7e0
mov ecx [ ebp - 0x14 ]
add ecx 0x40c
jmp Ordinal_MFC42_609
sub_40c7ee
mov ecx [ ebp - 0x14 ]
add ecx 0x44c
jmp Ordinal_MFC42_609
sub_40c7fc
mov ecx [ ebp - 0x14 ]
add ecx 0x48c
jmp Ordinal_MFC42_609
sub_40c80a
mov ecx [ ebp - 0x14 ]
add ecx 0x4cc
jmp Ordinal_MFC42_609
sub_40c818
mov ecx [ ebp - 0x14 ]
add ecx 0x50c
jmp Ordinal_MFC42_609
sub_40c826
mov ecx [ ebp - 0x14 ]
add ecx 0x54c
jmp Ordinal_MFC42_609
sub_40c834
mov ecx [ ebp - 0x14 ]
add ecx 0x58c
jmp Ordinal_MFC42_609
sub_40c842
mov ecx [ ebp - 0x14 ]
add ecx 0x5cc
jmp Ordinal_MFC42_609
sub_40c850
mov ecx [ ebp - 0x14 ]
add ecx 0x60c
jmp Ordinal_MFC42_609
sub_40c85e
mov ecx [ ebp - 0x14 ]
add ecx 0x64c
jmp Ordinal_MFC42_609
sub_40c86c
mov ecx [ ebp - 0x14 ]
add ecx 0x68c
jmp Ordinal_MFC42_609
sub_40c87a
mov ecx [ ebp - 0x14 ]
add ecx 0x6cc
jmp Ordinal_MFC42_609
sub_40c888
mov ecx [ ebp - 0x14 ]
add ecx 0x70c
jmp Ordinal_MFC42_609
sub_40c896
mov ecx [ ebp - 0x14 ]
add ecx 0x74c
jmp Ordinal_MFC42_609
sub_40c8a4
mov ecx [ ebp - 0x14 ]
add ecx 0x78c
jmp Ordinal_MFC42_609
sub_40c8b2
mov ecx [ ebp - 0x14 ]
add ecx 0x7cc
jmp Ordinal_MFC42_609
sub_40c8c0
mov ecx [ ebp - 0x14 ]
add ecx 0x80c
jmp Ordinal_MFC42_609
sub_40c8ce
mov ecx [ ebp - 0x14 ]
add ecx 0x84c
jmp Ordinal_MFC42_609
sub_40c8dc
mov ecx [ ebp - 0x14 ]
add ecx 0x88c
jmp Ordinal_MFC42_609
sub_40c8ea
mov ecx [ ebp - 0x14 ]
add ecx 0x8cc
jmp Ordinal_MFC42_609
sub_40c8f8
mov ecx [ ebp - 0x10 ]
jmp sub_405c40
sub_40c900
mov ecx [ ebp - 0x10 ]
jmp sub_405c40
sub_40c908
mov eax rwxdata
jmp __CxxFrameHandler
sub_40c920
mov ecx [ ebp - 0x10 ]
jmp Ordinal_MFC42_641
sub_40c928
mov ecx [ ebp - 0x10 ]
add ecx 0x174
jmp sub_405d60
sub_40c936
mov ecx [ ebp - 0x10 ]
add ecx 0x17c
jmp sub_405cf0
sub_40c944
mov ecx [ ebp - 0x10 ]
add ecx 0x18c
jmp Ordinal_MFC42_609
sub_40c952
mov ecx [ ebp - 0x10 ]
add ecx 0x1cc
jmp Ordinal_MFC42_609
sub_40c960
mov ecx [ ebp - 0x10 ]
add ecx 0x20c
jmp Ordinal_MFC42_609
sub_40c96e
mov ecx [ ebp - 0x10 ]
add ecx 0x24c
jmp Ordinal_MFC42_609
sub_40c97c
mov ecx [ ebp - 0x10 ]
add ecx 0x28c
jmp Ordinal_MFC42_609
sub_40c98a
mov ecx [ ebp - 0x10 ]
add ecx 0x2cc
jmp Ordinal_MFC42_609
sub_40c998
mov ecx [ ebp - 0x10 ]
add ecx 0x30c
jmp Ordinal_MFC42_609
sub_40c9a6
mov ecx [ ebp - 0x10 ]
add ecx 0x34c
jmp Ordinal_MFC42_609
sub_40c9b4
mov ecx [ ebp - 0x10 ]
add ecx 0x38c
jmp Ordinal_MFC42_609
sub_40c9c2
mov ecx [ ebp - 0x10 ]
add ecx 0x3cc
jmp Ordinal_MFC42_609
sub_40c9d0
mov ecx [ ebp - 0x10 ]
add ecx 0x40c
jmp Ordinal_MFC42_609
sub_40c9de
mov ecx [ ebp - 0x10 ]
add ecx 0x44c
jmp Ordinal_MFC42_609
sub_40c9ec
mov ecx [ ebp - 0x10 ]
add ecx 0x48c
jmp Ordinal_MFC42_609
sub_40c9fa
mov ecx [ ebp - 0x10 ]
add ecx 0x4cc
jmp Ordinal_MFC42_609
sub_40ca08
mov ecx [ ebp - 0x10 ]
add ecx 0x50c
jmp Ordinal_MFC42_609
sub_40ca16
mov ecx [ ebp - 0x10 ]
add ecx 0x54c
jmp Ordinal_MFC42_609
sub_40ca24
mov ecx [ ebp - 0x10 ]
add ecx 0x58c
jmp Ordinal_MFC42_609
sub_40ca32
mov ecx [ ebp - 0x10 ]
add ecx 0x5cc
jmp Ordinal_MFC42_609
sub_40ca40
mov ecx [ ebp - 0x10 ]
add ecx 0x60c
jmp Ordinal_MFC42_609
sub_40ca4e
mov ecx [ ebp - 0x10 ]
add ecx 0x64c
jmp Ordinal_MFC42_609
sub_40ca5c
mov ecx [ ebp - 0x10 ]
add ecx 0x68c
jmp Ordinal_MFC42_609
sub_40ca6a
mov ecx [ ebp - 0x10 ]
add ecx 0x6cc
jmp Ordinal_MFC42_609
sub_40ca78
mov ecx [ ebp - 0x10 ]
add ecx 0x70c
jmp Ordinal_MFC42_609
sub_40ca86
mov ecx [ ebp - 0x10 ]
add ecx 0x74c
jmp Ordinal_MFC42_609
sub_40ca94
mov ecx [ ebp - 0x10 ]
add ecx 0x78c
jmp Ordinal_MFC42_609
sub_40caa2
mov ecx [ ebp - 0x10 ]
add ecx 0x7cc
jmp Ordinal_MFC42_609
sub_40cab0
mov ecx [ ebp - 0x10 ]
add ecx 0x80c
jmp Ordinal_MFC42_609
sub_40cabe
mov ecx [ ebp - 0x10 ]
add ecx 0x84c
jmp Ordinal_MFC42_609
sub_40cacc
mov ecx [ ebp - 0x10 ]
add ecx 0x88c
jmp Ordinal_MFC42_609
sub_40cada
mov ecx [ ebp - 0x10 ]
add ecx 0x8cc
jmp Ordinal_MFC42_609
sub_40cae8
mov ecx [ ebp - 0x10 ]
add ecx 0x910
jmp Ordinal_MFC42_800
sub_40caf6
mov eax rwxdata
jmp __CxxFrameHandler
sub_40cb00
lea ecx [ ebp - 0x34 ]
jmp Ordinal_MFC42_800
sub_40cb08
mov eax rwxdata
jmp __CxxFrameHandler
sub_40cb20
lea ecx [ ebp - 0x6c ]
jmp sub_4075e0
sub_40cb28
mov eax rwxdata
jmp __CxxFrameHandler
sub_40cb40
lea ecx [ ebp - 0x334 ]
jmp sub_405f90
sub_40cb4b
lea ecx [ ebp - 0x334 ]
jmp Ordinal_MFC42_641
sub_40cb56
lea ecx [ ebp - 0x2a4 ]
jmp sub_405d60
sub_40cb61
lea ecx [ ebp - 0x29c ]
jmp sub_405cf0
sub_40cb6c
lea ecx [ ebp - 0x28c ]
jmp Ordinal_MFC42_656
sub_40cb77
lea ecx [ ebp - 0x24c ]
jmp Ordinal_MFC42_656
sub_40cb82
lea ecx [ ebp - 0x20c ]
jmp Ordinal_MFC42_656
sub_40cb8d
lea ecx [ ebp - 0x1cc ]
jmp Ordinal_MFC42_656
sub_40cb98
lea ecx [ ebp - 0x18c ]
jmp Ordinal_MFC42_656
sub_40cba3
lea ecx [ ebp - 0x14c ]
jmp Ordinal_MFC42_656
sub_40cbae
lea ecx [ ebp - 0x10c ]
jmp Ordinal_MFC42_656
sub_40cbb9
lea ecx [ ebp - 0xcc ]
jmp Ordinal_MFC42_656
sub_40cbc4
lea ecx [ ebp - 0x8c ]
jmp Ordinal_MFC42_656
sub_40cbcf
mov ecx [ ebp - 0x338 ]
jmp sub_405c40
sub_40cbda
mov ecx [ ebp - 0x338 ]
jmp sub_405c40
sub_40cbe5
mov eax rwxdata
jmp __CxxFrameHandler
sub_40cbf0
lea ecx [ ebp - 0x10 ]
jmp Ordinal_MFC42_800
sub_40cbf8
mov eax rwxdata
jmp __CxxFrameHandler
sub_40cc10
lea ecx [ ebp - 0x334 ]
jmp sub_405f90
sub_40cc1b
lea ecx [ ebp - 0x334 ]
jmp Ordinal_MFC42_641
sub_40cc26
lea ecx [ ebp - 0x2a4 ]
jmp sub_405d60
sub_40cc31
lea ecx [ ebp - 0x29c ]
jmp sub_405cf0
sub_40cc3c
lea ecx [ ebp - 0x28c ]
jmp Ordinal_MFC42_656
sub_40cc47
lea ecx [ ebp - 0x24c ]
jmp Ordinal_MFC42_656
sub_40cc52
lea ecx [ ebp - 0x20c ]
jmp Ordinal_MFC42_656
sub_40cc5d
lea ecx [ ebp - 0x1cc ]
jmp Ordinal_MFC42_656
sub_40cc68
lea ecx [ ebp - 0x18c ]
jmp Ordinal_MFC42_656
sub_40cc73
lea ecx [ ebp - 0x14c ]
jmp Ordinal_MFC42_656
sub_40cc7e
lea ecx [ ebp - 0x10c ]
jmp Ordinal_MFC42_656
sub_40cc89
lea ecx [ ebp - 0xcc ]
jmp Ordinal_MFC42_656
sub_40cc94
lea ecx [ ebp - 0x8c ]
jmp Ordinal_MFC42_656
sub_40cc9f
mov ecx [ ebp - 0x338 ]
jmp sub_405c40
sub_40ccaa
mov ecx [ ebp - 0x338 ]
jmp sub_405c40
sub_40ccb5
mov eax rwxdata
jmp __CxxFrameHandler
sub_40ccc0
lea ecx [ ebp - 0x90 ]
jmp sub_4058b0
sub_40cccb
lea ecx [ ebp - 0x90 ]
jmp Ordinal_MFC42_641
sub_40ccd6
lea ecx [ ebp - 0x30 ]
jmp sub_405d60
sub_40ccde
lea ecx [ ebp - 0x28 ]
jmp sub_405cf0
sub_40cce6
lea ecx [ ebp - 0x18 ]
jmp Ordinal_MFC42_800
sub_40ccee
lea ecx [ ebp - 0x14 ]
jmp Ordinal_MFC42_800
sub_40ccf6
mov ecx [ ebp - 0x94 ]
jmp sub_405c40
sub_40cd01
mov ecx [ ebp - 0x94 ]
jmp sub_405c40
sub_40cd0c
mov eax rwxdata
jmp __CxxFrameHandler
sub_40cd20
lea ecx [ ebp - 0x6c ]
jmp sub_4075e0
sub_40cd28
mov eax rwxdata
jmp __CxxFrameHandler
sub_40cd40
lea ecx [ ebp - 0x10 ]
jmp Ordinal_MFC42_800
sub_40cd48
mov eax rwxdata
jmp __CxxFrameHandler
sub_40cd60
lea ecx [ ebp - 0x10 ]
jmp Ordinal_MFC42_800
sub_40cd68
mov eax rwxdata
jmp __CxxFrameHandler
sub_40cd80
lea ecx [ ebp - 0x2c ]
jmp Ordinal_MFC42_640
sub_40cd88
mov eax rwxdata
jmp __CxxFrameHandler
sub_40cdbb
jmp [ eax + 0x40c2 ]
sub_40ce0b
push eax
retn 0x40
sub_40ce10
add [ eax ] al
add [ eax ] al
clc
retn 0x40
sub_40ce18
add [ eax ] eax
add [ eax ] al
add eax ebx
inc eax
add [ edx ] al
add [ eax ] al
add [ esi ] cl
retn
sub_40ce26
inc eax
add [ ebx ] al
add [ eax ] al
add [ ecx ] bl
retn
sub_40ce8b
jmp [ eax - 0x3d ]
sub_40d388
adc [ eax ] eax
add [ eax ] al
push ss
0x40
sub_40d390
adc al [ eax ]
add [ eax ] al
and al 0xca
inc eax
add [ ebx ] dl
add [ eax ] al
add [ edx ] dh
0x40
sub_40d3a0
adc al 0x0
add [ eax ] al
inc eax
0x40
sub_40d3a8
adc eax 0x4e000000
0x40
sub_40d3f8
pop ds
add [ eax ] al
add dl bl
0x40
sub_40d42b
inc [ eax ]

sub_40d453
jmp [ eax ]
sub_40d513
push eax

sub_40d53b
call [ eax ]
int3
