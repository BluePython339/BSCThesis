sub_401060
sub esp 0x10
push ebx
mov ebx [ esp + 0x2c ]
push ebp
push esi
push edi
mov edi [ esp + 0x30 ]
imul edi ebx
mov edx ebx
mov [ esp + 0x18 ] ecx
neg edx
mov [ esp + 0x1c ] edx
mov edx [ esp + 0x2c ]
mov [ esp + 0x10 ] 0x0
lea eax [ ecx + 0x4 ]
add edi edx
mov [ esp + 0x14 ] 0x4
jmp r-xdata
mov esi [ esp + 0x34 ]
mov edx [ esp + 0x10 ]
imul esi ebx
lea ecx [ ecx + edx * 8 + 0x2c ]
mov ebp ebx
mov edx eax
mov eax [ esp + 0x28 ]
neg ebp
mov [ esp + 0x38 ] ecx
mov [ esp + 0x30 ] edx
add esi eax
mov [ esp + 0x2c ] 0x4
mov eax [ esp + 0x2c ]
add edx 0x2
add esi ebp
dec eax
mov [ esp + 0x30 ] edx
mov [ esp + 0x2c ] eax
jne r-xdata
mov eax [ esp + 0x24 ]
test eax eax
je r-xdata
cmp [ edx ] 0x1
jne r-xdata
mov ecx [ esp + 0x14 ]
mov eax edx
mov edx [ esp + 0x1c ]
add edi edx
dec ecx
mov [ esp + 0x14 ] ecx
jne r-xdata
mov eax [ esp + 0x10 ]
mov [ ecx - 0x4 ] esi
mov [ ecx ] edi
inc eax
add ecx 0x8
mov [ esp + 0x10 ] eax
mov [ esp + 0x38 ] ecx
mov eax [ eax + 0x4 ]
lea edx [ edi + ebx ]
lea ecx [ esi + ebx ]
push edx
push ecx
push edi
push esi
push eax
call [ Rectangle@IAT ]
mov ecx [ esp + 0x38 ]
mov edx [ esp + 0x30 ]
mov ecx [ esp + 0x18 ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10
retn 0x20
sub_401140
push esi
mov esi ecx
call sub_4014d0
movsx eax [ esp + 0x14 ]
mov ecx 0x3
cmp eax ecx
ja r-xdata
pop esi
retn 0x10
jmp [ eax * 4 + jump_table_4011e8 ]
mov eax 0x1
mov [ esi + 0x48 ] ecx
mov [ esi + 0xe ] ax
mov [ esi + 0x16 ] ax
mov [ esi + 0x1e ] ax
mov [ esi + 0x20 ] ax
mov [ esi + 0x4c ] 0x2
pop esi
retn 0x10
mov eax 0x1
mov [ esi + 0x48 ] ecx
mov [ esi + 0x1a ] ax
mov [ esi + 0x22 ] ax
mov [ esi + 0x1e ] ax
mov [ esi + 0x20 ] ax
mov [ esi + 0x4c ] ecx
pop esi
retn 0x10
mov eax 0x1
mov [ esi + 0x48 ] 0x2
mov [ esi + 0xe ] ax
mov [ esi + 0x10 ] ax
mov [ esi + 0x18 ] ax
mov [ esi + 0x20 ] ax
mov [ esi + 0x4c ] ecx
pop esi
retn 0x10
mov eax 0x1
mov [ esi + 0x48 ] ecx
mov [ esi + 0x1a ] ax
mov [ esi + 0x16 ] ax
mov [ esi + 0x1e ] ax
mov [ esi + 0x18 ] ax
mov [ esi + 0x4c ] ecx
sub_401200
push esi
mov esi ecx
call sub_4014d0
movsx eax [ esp + 0x14 ]
mov ecx 0x3
cmp eax ecx
ja r-xdata
pop esi
retn 0x10
jmp [ eax * 4 + jump_table_4012ac ]
mov eax 0x1
mov [ esi + 0x48 ] ecx
mov [ esi + 0x10 ] ax
mov [ esi + 0x18 ] ax
mov [ esi + 0x20 ] ax
mov [ esi + 0x1e ] ax
mov [ esi + 0x4c ] 0x2
pop esi
retn 0x10
mov eax 0x1
mov [ esi + 0x48 ] ecx
mov [ esi + 0x14 ] ax
mov [ esi + 0x16 ] ax
mov [ esi + 0x20 ] ax
mov [ esi + 0x18 ] ax
mov [ esi + 0x4c ] 0x2
pop esi
retn 0x10
mov eax 0x1
mov [ esi + 0x48 ] ecx
mov [ esi + 0xe ] ax
mov [ esi + 0x16 ] ax
mov [ esi + 0x1e ] ax
mov [ esi + 0x10 ] ax
mov [ esi + 0x4c ] 0x2
pop esi
retn 0x10
mov eax 0x1
mov [ esi + 0x48 ] ecx
mov [ esi + 0x16 ] ax
mov [ esi + 0x1e ] ax
mov [ esi + 0x20 ] ax
mov [ esi + 0x22 ] ax
mov [ esi + 0x4c ] ecx
sub_4012f0
push esi
mov esi ecx
call sub_4014d0
movsx eax [ esp + 0x14 ]
sub eax 0x0
je r-xdata
mov eax 0x1
mov [ esi + 0x1a ] ax
mov [ esi + 0x18 ] ax
mov [ esi + 0x1e ] ax
mov [ esi + 0x20 ] ax
mov eax 0x3
mov [ esi + 0x48 ] eax
mov [ esi + 0x4c ] eax
dec eax
jne r-xdata
pop esi
retn 0x10
mov eax 0x1
mov [ esi + 0x48 ] 0x3
mov [ esi + 0xe ] ax
mov [ esi + 0x16 ] ax
mov [ esi + 0x18 ] ax
mov [ esi + 0x20 ] ax
mov [ esi + 0x4c ] 0x2
pop esi
retn 0x10
sub_401350
push esi
mov esi ecx
call sub_4014d0
movsx eax [ esp + 0x14 ]
sub eax 0x0
je r-xdata
mov eax 0x1
mov [ esi + 0x16 ] ax
mov [ esi + 0x18 ] ax
mov [ esi + 0x22 ] ax
mov [ esi + 0x20 ] ax
mov eax 0x3
mov [ esi + 0x48 ] eax
mov [ esi + 0x4c ] eax
dec eax
jne r-xdata
pop esi
retn 0x10
mov eax 0x1
mov [ esi + 0x48 ] 0x3
mov [ esi + 0x10 ] ax
mov [ esi + 0x16 ] ax
mov [ esi + 0x18 ] ax
mov [ esi + 0x1e ] ax
mov [ esi + 0x4c ] 0x2
pop esi
retn 0x10
sub_4013b0
push esi
mov esi ecx
call sub_4014d0
movsx eax [ esp + 0x14 ]
sub eax 0x0
je r-xdata
mov eax 0x1
mov [ esi + 0x48 ] 0x3
mov [ esi + 0xe ] ax
mov [ esi + 0x16 ] ax
mov [ esi + 0x1e ] ax
mov [ esi + 0x6 ] ax
mov [ esi + 0x4c ] eax
dec eax
jne r-xdata
pop esi
retn 0x10
mov eax 0x1
mov [ esi + 0x48 ] 0x2
mov [ esi + 0x18 ] ax
mov [ esi + 0x16 ] ax
mov [ esi + 0x1a ] ax
mov [ esi + 0x14 ] ax
mov [ esi + 0x4c ] 0x3
pop esi
retn 0x10
sub_401410
push esi
mov esi ecx
call sub_4014d0
movsx eax [ esp + 0x14 ]
mov ecx 0x3
cmp eax ecx
ja r-xdata
pop esi
retn 0x10
jmp [ eax * 4 + jump_table_4014b4 ]
mov eax 0x1
mov [ esi + 0x48 ] ecx
mov [ esi + 0x18 ] ax
mov [ esi + 0x22 ] ax
mov [ esi + 0x1e ] ax
mov [ esi + 0x20 ] ax
mov [ esi + 0x4c ] ecx
pop esi
retn 0x10
mov eax 0x1
mov [ esi + 0x48 ] ecx
mov [ esi + 0x16 ] ax
mov [ esi + 0x20 ] ax
mov [ esi + 0x18 ] ax
mov [ esi + 0x10 ] ax
mov [ esi + 0x4c ] 0x2
pop esi
retn 0x10
mov eax 0x1
mov [ esi + 0x48 ] ecx
mov [ esi + 0x1a ] ax
mov [ esi + 0x16 ] ax
mov [ esi + 0x18 ] ax
mov [ esi + 0x20 ] ax
mov [ esi + 0x4c ] ecx
pop esi
retn 0x10
mov eax 0x1
mov [ esi + 0x48 ] ecx
mov [ esi + 0x10 ] ax
mov [ esi + 0x18 ] ax
mov [ esi + 0x20 ] ax
mov [ esi + 0x1a ] ax
mov [ esi + 0x4c ] ecx
sub_401590
push 0xffffffff
push sub_403548
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x12c
push esi
mov esi ecx
push 0x0
call Ordinal_MFC42_1134
add esp 0x4
mov ecx esi
call Ordinal_MFC42_2621
push 0x4
mov ecx esi
call Ordinal_MFC42_4159
push 0x6c
call Ordinal_MFC42_823
add esp 0x4
mov [ esp + 0x4 ] eax
test eax eax
mov [ esp + 0x138 ] 0x0
je r-xdata
xor eax eax
push r--data
push r--data
push r--data
push 0x80
mov ecx eax
call Ordinal_MFC42_520
jmp r-xdata
mov ecx [ esi + 0x20 ]
push 0x0
call Ordinal_MFC42_6215
mov esi [ esi + 0x20 ]
mov edx [ esi + 0x20 ]
push edx
call [ UpdateWindow@IAT ]
push 0x408
push rwxdata
lea eax [ esp + 0x34 ]
push rwxdata
push eax
call [ sprintf@IAT ]
add esp 0x10
lea ecx [ esp + 0x8 ]
mov [ esp + 0x138 ] 0xffffffff
call Ordinal_MFC42_617
mov ecx [ esp + 0x130 ]
mov eax 0x1
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x138
retn
lea ecx [ esp + 0x8 ]
mov [ esp + 0x138 ] 0xffffffff
call Ordinal_MFC42_617
xor eax eax
pop esi
mov ecx [ esp + 0x12c ]
mov [ fs : 0x0 ] ecx
add esp 0x138
retn
push eax
mov ecx esi
mov [ esp + 0x13c ] 0xffffffff
call Ordinal_MFC42_986
lea ecx [ esp + 0x8 ]
call Ordinal_MFC42_296
lea eax [ esp + 0x8 ]
mov ecx esi
push eax
mov [ esp + 0x13c ] 0x1
call Ordinal_MFC42_5214
lea ecx [ esp + 0x8 ]
push ecx
mov ecx esi
call Ordinal_MFC42_5301
test eax eax
jne r-xdata
sub_401750
push 0xffffffff
push sub_403568
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x60
lea ecx [ esp ]
call sub_4016e0
lea ecx [ esp ]
mov [ esp + 0x68 ] 0x0
call Ordinal_MFC42_2514
lea ecx [ esp ]
mov [ esp + 0x68 ] 0xffffffff
call Ordinal_MFC42_641
mov ecx [ esp + 0x60 ]
mov [ fs : 0x0 ] ecx
add esp 0x6c
retn
sub_401800
push 0xffffffff
push sub_40358a
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push 0x54
call Ordinal_MFC42_823
add esp 0x4
mov [ esp ] eax
test eax eax
mov [ esp + 0xc ] 0x0
je r-xdata
mov ecx [ esp + 0x4 ]
xor eax eax
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
mov ecx eax
call sub_4018a0
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_401c20
push 0xffffffff
push sub_4035aa
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push 0x48
call Ordinal_MFC42_823
add esp 0x4
mov [ esp ] eax
test eax eax
mov [ esp + 0xc ] 0x0
je r-xdata
mov ecx [ esp + 0x4 ]
xor eax eax
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
mov ecx eax
call sub_401d80
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_401cc0
push ebx
push esi
xor ebx ebx
push edi
xor eax eax
mov dl 0x1
mov [ ecx + rw-data ] bl
lea esi [ eax + eax * 4 ]
lea edi [ ecx + eax ]
mov [ edi + esi * 2 + rw-data ] dl
jmp r-xdata
cmp eax 0x18
je r-xdata
inc eax
cmp eax 0x19
jl r-xdata
inc ecx
cmp ecx 0xb
jl r-xdata
xor ecx ecx
pop edi
pop esi
pop ebx
retn
sub_401d00
mov eax [ esp + 0x4 ]
cmp eax 0x6
ja r-xdata
xor eax eax
retn
jmp [ eax * 4 + jump_table_401d60 ]
mov eax rw-data
mov [ rw-data ] eax
retn
mov eax rw-data
mov [ rw-data ] eax
retn
mov eax rw-data
mov [ rw-data ] eax
retn
mov eax rw-data
mov [ rw-data ] eax
retn
mov eax rw-data
mov [ rw-data ] eax
retn
mov eax rw-data
mov [ rw-data ] eax
retn
mov eax rw-data
mov [ rw-data ] eax
retn
sub_401d80
push esi
mov esi ecx
call Ordinal_MFC42_560
mov [ esi ] r--data
mov [ esi + 0x44 ] 0x0
call sub_401cc0
call [ rand@IAT ]
and eax 0x80000007
jns r-xdata
mov [ rw-data ] eax
mov eax esi
pop esi
retn
dec eax
or eax 0xfffffff8
inc eax
sub_401e00
push ecx
push ebx
push ebp
push esi
push edi
xor esi esi
mov dl 0x1
mov [ esp + 0x13 ] 0x0
mov edi 0x17
cmp esi 0x9
jne r-xdata
lea ecx [ edi + edi * 4 ]
xor ebp ebp
lea edx [ edi + ecx * 2 + rw-data ]
mov [ esp + 0x13 ] 0x0
jmp r-xdata
inc esi
cmp esi 0xb
jl r-xdata
mov eax 0x1010101
mov ecx rw-data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] ax
mov [ rw-data ] al
mov [ esp + 0x13 ] 0x1
cmp ebp 0xa
jne r-xdata
dec edi
test edi edi
jg r-xdata
cmp [ esi + rw-data ] dl
je r-xdata
mov bl [ ecx + eax - 0xb ]
mov [ ecx + eax ] bl
inc eax
cmp eax 0xb
jl r-xdata
sub ecx 0xb
cmp ecx rw-data
jge r-xdata
mov al [ esp + 0x13 ]
test al al
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
inc ebp
cmp ebp 0xb
jl r-xdata
mov ecx edx
mov eax 0x1010101
mov [ ecx ] eax
mov [ ecx + 0x4 ] eax
mov [ ecx + 0x8 ] ax
mov [ ecx + 0xa ] al
lea eax [ edi - 0x1 ]
test eax eax
jl r-xdata
xor eax eax
cmp [ edx + ebp ] 0x1
je r-xdata
jmp r-xdata
lea ecx [ eax + eax * 4 ]
lea esi [ eax + 0x1 ]
lea ecx [ eax + ecx * 2 + rw-data ]
mov bl [ ecx + eax - 0xb ]
mov [ ecx + eax ] bl
inc eax
cmp eax 0xb
jl r-xdata
sub ecx 0xb
dec esi
jne r-xdata
xor eax eax
sub_401ee0
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_403628
push eax
mov [ fs : 0x0 ] esp
mov al [ ecx + 0x44 ]
sub esp 0x44
test al al
push ebx
push ebp
push esi
push edi
mov bl 0x1
jne r-xdata
xor ebp ebp
mov [ esp + 0x24 ] r--data
mov [ esp + 0x28 ] ebp
lea ecx [ esp + 0x44 ]
mov [ esp + 0x5c ] ebp
call Ordinal_MFC42_323
push ebp
mov [ esp + 0x60 ] bl
call [ CreateCompatibleDC@IAT ]
push eax
lea ecx [ esp + 0x48 ]
call Ordinal_MFC42_1640
mov eax [ rw-data ]
mov esi [ rw-data ]
mov ecx [ rw-data ]
mov edx [ rw-data ]
sub eax esi
sub ecx edx
push eax
mov eax [ esp + 0x68 ]
push ecx
mov ecx [ eax + 0x4 ]
push ecx
call [ CreateCompatibleBitmap@IAT ]
push eax
lea ecx [ esp + 0x28 ]
call Ordinal_MFC42_1641
mov ebx [ esp + 0x28 ]
mov edx [ esp + 0x48 ]
lea eax [ esp + 0x24 ]
neg eax
sbb eax eax
and eax ebx
push eax
push edx
call Ordinal_MFC42_5785
mov eax [ rw-data ]
mov ecx [ rw-data ]
mov edi [ rw-data ]
sub eax ecx
mov ecx [ rw-data ]
push 0xffffff
sub ecx edi
push eax
push ecx
push ebp
push ebp
lea ecx [ esp + 0x58 ]
call Ordinal_MFC42_2753
mov [ esp + 0x20 ] ebp
mov [ esp + 0x1c ] r--data
mov edi r--data
mov [ esp + 0x18 ] ebp
mov [ esp + 0x14 ] edi
mov esi [ CreateSolidBrush@IAT ]
push 0x2b86f5
mov [ esp + 0x60 ] 0x3
call esi
push eax
lea ecx [ esp + 0x18 ]
call Ordinal_MFC42_1641
mov [ esp + 0x40 ] ebp
mov [ esp + 0x3c ] edi
push 0x2b0e91
mov [ esp + 0x60 ] 0x4
call esi
push eax
lea ecx [ esp + 0x40 ]
call Ordinal_MFC42_1641
mov [ esp + 0x38 ] ebp
mov [ esp + 0x34 ] edi
push 0x570e0f
mov [ esp + 0x60 ] 0x5
call esi
push eax
lea ecx [ esp + 0x38 ]
call Ordinal_MFC42_1641
mov [ esp + 0x30 ] ebp
mov [ esp + 0x2c ] edi
push 0x218ec7
mov [ esp + 0x60 ] 0x6
call esi
push eax
lea ecx [ esp + 0x30 ]
call Ordinal_MFC42_1641
push 0x212217
push 0x2
push ebp
call [ CreatePen@IAT ]
push eax
lea ecx [ esp + 0x20 ]
call Ordinal_MFC42_1641
lea edx [ esp + 0x1c ]
lea ecx [ esp + 0x44 ]
push edx
call Ordinal_MFC42_5788
lea eax [ esp + 0x14 ]
lea ecx [ esp + 0x44 ]
push eax
call Ordinal_MFC42_5787
mov ecx [ rw-data ]
push ecx
call sub_401d00
mov edx [ rw-data ]
mov ecx [ rw-data ]
add esp 0x4
push edx
mov edx [ eax + 0x4c ]
push ecx
mov ecx [ eax + 0x48 ]
push 0x19
push edx
mov edx [ rw-data ]
push ecx
mov ecx [ rw-data ]
push edx
lea edx [ esp + 0x5c ]
push ecx
push edx
mov ecx eax
call sub_401060
xor esi esi
mov eax [ ecx + 0x20 ]
push rw-data
push eax
mov [ ecx + 0x44 ] bl
call [ GetClientRect@IAT ]
mov ecx [ rw-data ]
mov edx [ rw-data ]
add ecx 0x64
mov [ rw-data ] edx
mov [ rw-data ] ecx
mov edx [ esp + 0x10 ]
add edi 0x19
inc edx
cmp edi 0x113
mov [ esp + 0x10 ] edx
jl r-xdata
cmp esi 0x16
jne r-xdata
mov edx [ esp + 0x10 ]
cmp [ edx ] 0x0
jne r-xdata
inc esi
cmp esi 0x18
jl r-xdata
cmp esi 0x13
jl r-xdata
lea eax [ esp + 0x3c ]
push eax
jmp r-xdata
lea eax [ esi + esi * 4 ]
xor edi edi
lea ecx [ esi + eax * 2 + rw-data ]
mov [ esp + 0x10 ] ecx
call sub_401e00
mov ecx [ rw-data ]
mov eax [ rw-data ]
mov edx [ rw-data ]
mov ebx [ rw-data ]
mov esi [ esp + 0x48 ]
sub ecx eax
lea eax [ esp + 0x44 ]
sub edx ebx
neg eax
sbb eax eax
push 0xcc0020
and eax esi
push ebp
push ebp
push eax
push ecx
mov ecx [ esp + 0x78 ]
push edx
push ebp
mov edx [ ecx + 0x4 ]
push ebp
push edx
call [ BitBlt@IAT ]
lea ecx [ esp + 0x1c ]
call Ordinal_MFC42_2414
lea ecx [ esp + 0x14 ]
call Ordinal_MFC42_2414
lea ecx [ esp + 0x24 ]
call Ordinal_MFC42_2414
lea ecx [ esp + 0x44 ]
call Ordinal_MFC42_2405
mov esi r--data
mov [ esp + 0x2c ] esi
lea ecx [ esp + 0x2c ]
mov [ esp + 0x5c ] 0x7
call Ordinal_MFC42_2414
mov edi r--data
mov [ esp + 0x34 ] esi
mov [ esp + 0x2c ] edi
lea ecx [ esp + 0x34 ]
mov [ esp + 0x5c ] 0x8
call Ordinal_MFC42_2414
mov [ esp + 0x34 ] edi
mov [ esp + 0x3c ] esi
lea ecx [ esp + 0x3c ]
mov [ esp + 0x5c ] 0x9
call Ordinal_MFC42_2414
mov [ esp + 0x3c ] edi
mov [ esp + 0x14 ] esi
lea ecx [ esp + 0x14 ]
mov [ esp + 0x5c ] 0xa
call Ordinal_MFC42_2414
mov [ esp + 0x14 ] edi
mov [ esp + 0x1c ] esi
lea ecx [ esp + 0x1c ]
mov [ esp + 0x5c ] 0xb
call Ordinal_MFC42_2414
lea ecx [ esp + 0x44 ]
mov [ esp + 0x1c ] edi
mov [ esp + 0x5c ] 0x0
call Ordinal_MFC42_640
mov [ esp + 0x24 ] esi
lea ecx [ esp + 0x24 ]
mov [ esp + 0x5c ] 0xc
call Ordinal_MFC42_2414
mov ecx [ esp + 0x54 ]
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x50
retn 0x4
cmp esi 0xf
jl r-xdata
cmp esi 0x15
jg r-xdata
lea ecx [ esp + 0x48 ]
call Ordinal_MFC42_5787
mov edx [ rw-data ]
mov ebp [ rw-data ]
lea eax [ esi + esi * 4 + 0x5 ]
lea ebx [ edi + ebp + 0x19 ]
add ebp edi
lea ecx [ edx + eax * 4 ]
add eax ecx
lea ecx [ esi + esi * 4 ]
push eax
mov eax [ esp + 0x4c ]
lea edx [ edx + ecx * 4 ]
push ebx
add ecx edx
push ecx
push ebp
push eax
call [ Rectangle@IAT ]
xor ebp ebp
cmp esi 0x14
jg r-xdata
lea ecx [ esp + 0x34 ]
push ecx
lea ecx [ esp + 0x48 ]
call Ordinal_MFC42_5787
lea edx [ esp + 0x2c ]
push edx
sub_4022d0
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0xc ]
mov [ ebp - 0x4 ] ecx
mov [ ebp + 0x8 ] 0x1
lea ebx [ esi + edi - 0x1 ]
call [ rand@IAT ]
cdq
mov ecx 0x7
idiv ecx
mov eax [ ebp + 0x8 ]
inc eax
cmp eax 0xf
mov [ ebp + 0x8 ] eax
mov [ rw-data ] edx
jl r-xdata
cmp al [ ebx - 0x1 ]
je r-xdata
mov eax [ ebp - 0x4 ]
dec ebx
mov [ eax + 0x44 ] 0x0
mov al [ ebx ]
test al al
je r-xdata
jmp r-xdata
call sub_401cc0
mov edx [ ebp - 0x4 ]
mov [ edx + 0x44 ] 0x1
lea eax [ edi + edi ]
push eax
push 0x0
call [ GlobalAlloc@IAT ]
mov edx eax
xor eax eax
test edi edi
mov [ ebp - 0x8 ] edx
mov [ ebp + 0xc ] 0x2
jle r-xdata
test edi edi
mov [ ebp - 0xc ] esi
mov ebx esi
mov [ ebp + 0x8 ] 0x0
jle r-xdata
mov ecx edx
mov eax [ ebp - 0x4 ]
mov cl [ eax + 0x44 ]
test cl cl
je r-xdata
mov esi edx
mov bl [ eax + esi ]
add ecx 0x2
shr bl 0x4
add bl 0x1e
mov [ ecx - 0x2 ] bl
mov bl [ eax + esi ]
and bl 0xf
add bl 0x1e
inc eax
mov [ ecx - 0x1 ] bl
cmp eax edi
jl r-xdata
pop edi
pop esi
mov eax edx
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax 0x9
test eax eax
mov eax [ ebp - 0xc ]
add eax 0x2
add eax 0x8
sub eax 0x7
sub eax 0x1
mov ebx 0x23
add eax ebx
mov ecx eax
call ecx
mov edx [ ebp - 0x8 ]
push 0x0
call [ exit@IAT ]
mov ecx [ ebp + 0xc ]
mov eax 0xa
cmp ecx eax
jge r-xdata
mov al [ esi ]
add esi 0x2
xor al 0xc7
mov [ esi - 0x2 ] al
add al 0x2
shl al 0x4
mov [ ebx ] al
mov cl [ esi - 0x1 ]
sub cl 0x1e
xor cl al
mov eax [ ebp + 0x8 ]
mov [ ebx ] cl
inc ebx
inc eax
cmp eax edi
mov [ ebp + 0x8 ] eax
jl r-xdata
mov [ ebp + 0xc ] eax
mov ecx [ ebp - 0x4 ]
push 0x4
push 0x8
call sub_4022b0
test al al
je r-xdata
mov edx [ ebp - 0x8 ]
sub_402430
mov eax [ rw-data ]
push ebp
push esi
push edi
mov edi [ rw-data ]
mov ebp ecx
add edi 0x19
push eax
mov [ rw-data ] edi
call sub_401d00
mov esi eax
add esp 0x4
mov ecx esi
mov ax [ esi + 0x24 ]
mov edx [ esi ]
push eax
push 0x0
push 0x0
push 0x0
call [ edx ]
mov ecx [ rw-data ]
mov edx [ rw-data ]
mov eax [ esi + 0x4c ]
push ecx
mov ecx [ esi + 0x48 ]
push edx
mov edx [ rw-data ]
push 0x19
push eax
mov eax [ rw-data ]
push ecx
push edx
push eax
push 0x0
mov ecx esi
call sub_401060
xor esi esi
xor esi esi
add esi 0x8
cmp esi 0x20
jl r-xdata
mov edx [ rw-data ]
push edx
call sub_401d00
mov ecx [ eax + esi + 0x28 ]
mov edx [ rw-data ]
sub ecx edx
mov eax 0x51eb851f
imul ecx
mov ecx [ rw-data ]
sar edx 0x3
mov eax edx
push ecx
shr eax 0x1f
add edx eax
mov edi edx
call sub_401d00
mov ecx [ eax + esi + 0x2c ]
mov eax [ rw-data ]
sub ecx eax
mov eax 0x51eb851f
imul ecx
sar edx 0x3
mov eax edx
add esi 0x8
shr eax 0x1f
add edx eax
add esp 0x8
add edi edx
cmp esi 0x20
lea ecx [ edx + edx * 4 ]
mov [ edi + ecx * 2 + rw-data ] 0x0
jl r-xdata
call [ rand@IAT ]
lea eax [ eax + eax * 2 ]
mov ecx 0x7
cdq
idiv ecx
push edx
mov [ rw-data ] edx
call sub_401d00
mov eax [ rw-data ]
mov edi [ rw-data ]
sub eax edi
add esp 0x4
cdq
sub eax edx
mov edx [ rw-data ]
sar eax 0x1
sub eax 0xc
pop edi
pop esi
mov [ rw-data ] eax
mov [ rw-data ] edx
pop ebp
retn 0x4
mov ecx [ rw-data ]
push ecx
call sub_401d00
mov ecx [ eax + esi + 0x28 ]
mov eax [ rw-data ]
sub ecx eax
mov eax 0x51eb851f
imul ecx
mov ecx [ rw-data ]
sar edx 0x3
mov eax edx
push ecx
shr eax 0x1f
add edx eax
mov edi edx
call sub_401d00
mov ecx [ eax + esi + 0x2c ]
mov edx [ rw-data ]
sub ecx edx
mov eax 0x51eb851f
imul ecx
sar edx 0x3
mov eax edx
add esp 0x8
shr eax 0x1f
add edx eax
add edi edx
lea ecx [ edx + edx * 4 ]
mov al [ edi + ecx * 2 + rw-data ]
test al al
je r-xdata
mov eax [ rw-data ]
cmp eax 0xa
jle r-xdata
inc eax
mov [ rw-data ] eax
mov eax [ ebp + 0x20 ]
push 0x1
push 0x0
push eax
call [ InvalidateRect@IAT ]
mov ecx ebp
call Ordinal_MFC42_2379
pop edi
pop esi
pop ebp
retn 0x4
cmp eax 0x64
jge r-xdata
push 0x0
mov ecx ebp
call sub_402850
sub_402610
mov eax [ esp + 0x4 ]
push esi
mov esi ecx
push eax
call Ordinal_MFC42_4464
cmp eax 0xffffffff
jne r-xdata
mov [ rw-data ] 0x0
mov ecx [ esi + 0x20 ]
push 0x0
push 0x96
push 0x1
push ecx
call [ SetTimer@IAT ]
lea edx [ esp + 0x8 ]
push edx
call [ time@IAT ]
lea eax [ esp + 0xc ]
push eax
call [ gmtime@IAT ]
mov ecx [ eax ]
push ecx
call [ srand@IAT ]
add esp 0xc
xor eax eax
pop esi
retn 0x4
or eax eax
pop esi
retn 0x4
sub_402670
mov eax [ rw-data ]
push ebx
push esi
push edi
mov ebx ecx
push eax
call sub_401d00
mov edx [ esp + 0x14 ]
mov ecx eax
add esp 0x4
lea eax [ edx - 0x25 ]
cmp eax 0x3
ja r-xdata
mov ecx ebx
call Ordinal_MFC42_2379
pop edi
pop esi
pop ebx
retn 0xc
jmp [ eax * 4 + jump_table_40282c ]
mov ax [ ecx + 0x24 ]
inc ax
movsx eax ax
cdq
idiv [ ecx + 0x50 ]
mov [ ecx + 0x24 ] dx
mov ecx ebx
call Ordinal_MFC42_2379
pop edi
pop esi
pop ebx
retn 0xc
mov eax [ rw-data ]
mov ecx [ rw-data ]
cmp eax ecx
jle r-xdata
xor esi esi
xor edi edi
add eax 0x19
mov ecx ebx
mov [ rw-data ] eax
call Ordinal_MFC42_2379
pop edi
pop esi
pop ebx
retn 0xc
sub eax 0x19
add esi 0x8
cmp esi 0x20
jl r-xdata
lea eax [ edx + edx * 4 ]
add edi edx
mov cl [ edi + eax * 2 + rw-data ]
test cl cl
jne r-xdata
add edi 0x8
cmp edi 0x20
jl r-xdata
lea eax [ edx + edx * 4 ]
add esi edx
mov cl [ esi + eax * 2 + rw-data ]
test cl cl
jne r-xdata
mov ecx [ rw-data ]
push ecx
call sub_401d00
mov ecx [ eax + esi + 0x28 ]
mov eax [ rw-data ]
sub ecx eax
mov eax 0x51eb851f
imul ecx
mov ecx [ rw-data ]
sar edx 0x3
mov eax edx
push ecx
shr eax 0x1f
add edx eax
mov edi edx
call sub_401d00
mov ecx [ eax + esi + 0x2c ]
mov edx [ rw-data ]
sub ecx edx
mov eax 0x51eb851f
imul ecx
sar edx 0x3
mov eax edx
lea ecx [ edi - 0x1 ]
shr eax 0x1f
add esp 0x8
add edx eax
test ecx ecx
jl r-xdata
mov eax [ rw-data ]
mov ecx [ rw-data ]
cmp eax ecx
jge r-xdata
add [ rw-data ] 0x19
mov ecx [ rw-data ]
push ecx
call sub_401d00
mov ecx [ eax + edi + 0x28 ]
mov eax [ rw-data ]
sub ecx eax
mov eax 0x51eb851f
imul ecx
mov ecx [ rw-data ]
sar edx 0x3
mov eax edx
push ecx
shr eax 0x1f
add edx eax
mov esi edx
call sub_401d00
mov ecx [ eax + edi + 0x2c ]
mov edx [ rw-data ]
sub ecx edx
mov eax 0x51eb851f
imul ecx
sar edx 0x3
mov eax edx
lea ecx [ esi + 0x1 ]
shr eax 0x1f
add esp 0x8
add edx eax
cmp ecx 0xa
jg r-xdata
mov eax [ rw-data ]
mov ecx [ rw-data ]
cmp eax ecx
jle r-xdata
sub [ rw-data ] 0x19
sub eax 0x19
mov ecx ebx
mov [ rw-data ] eax
call Ordinal_MFC42_2379
pop edi
pop esi
pop ebx
retn 0xc
add eax 0x19
add eax 0x19
mov [ rw-data ] eax
sub eax 0x19
sub_402850
sub esp 0x17c
lea eax [ esp + 0x3c ]
push ebx
push esi
mov ebx ecx
push edi
mov ecx 0xc
mov esi rwxdata
lea edi [ esp + 0x14 ]
push eax
[ edi ] [ esi ]
lea ecx [ esp + 0x18 ]
push ecx
movsw [ edi ] [ esi ]
call [ FindFirstFileA@IAT ]
lea edi [ esp + 0x14 ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
jne r-xdata
lea edx [ esp + 0x14 ]
push 0x1f37
push rwxdata
mov ecx ebx
mov [ esp + 0x14 ] edx
call sub_4022d0
push 0x0
call [ exit@IAT ]
push eax
call [ exit@IAT ]
sub_402910
push 0xffffffff
push sub_403648
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push esi
mov esi ecx
mov [ esp + 0x4 ] esi
mov [ esi ] r--data
mov [ esp + 0x10 ] 0x0
call Ordinal_MFC42_2414
mov ecx [ esp + 0x8 ]
mov [ esi ] r--data
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_402980
push 0xffffffff
push sub_403668
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push esi
mov esi ecx
mov [ esp + 0x4 ] esi
mov [ esi ] r--data
mov [ esp + 0x10 ] 0x0
call Ordinal_MFC42_2414
mov ecx [ esp + 0x8 ]
mov [ esi ] r--data
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_4029f0
push 0xffffffff
push sub_403688
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push esi
mov esi ecx
mov [ esp + 0x4 ] esi
mov [ esi ] r--data
mov [ esp + 0x10 ] 0x0
call Ordinal_MFC42_2414
mov ecx [ esp + 0x8 ]
mov [ esi ] r--data
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_402a60
push 0xffffffff
push sub_4036a8
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push esi
mov esi ecx
mov [ esp + 0x4 ] esi
mov [ esi ] r--data
mov [ esp + 0x10 ] 0x0
call Ordinal_MFC42_2414
mov ecx [ esp + 0x8 ]
mov [ esi ] r--data
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_402ab0
push 0xffffffff
push sub_4036ca
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push 0x1e0
call Ordinal_MFC42_823
add esp 0x4
mov [ esp ] eax
test eax eax
mov [ esp + 0xc ] 0x0
je r-xdata
mov ecx [ esp + 0x4 ]
xor eax eax
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
mov ecx eax
call sub_402b50
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_402b50
push 0xffffffff
push sub_4036f6
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push esi
mov esi ecx
mov [ esp + 0x4 ] esi
call Ordinal_MFC42_366
lea ecx [ esi + 0xc0 ]
mov [ esp + 0x10 ] 0x0
call Ordinal_MFC42_529
lea ecx [ esi + 0x140 ]
mov [ esp + 0x10 ] 0x1
call Ordinal_MFC42_554
mov ecx [ esp + 0x8 ]
mov [ esi ] r--data
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_402bd0
push 0xffffffff
push sub_403716
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push esi
mov esi ecx
mov [ esp + 0x4 ] esi
mov [ esi ] r--data
lea ecx [ esi + 0x140 ]
mov [ esp + 0x10 ] 0x1
call Ordinal_MFC42_807
lea ecx [ esi + 0xc0 ]
mov [ esp + 0x10 ] 0x0
call Ordinal_MFC42_796
mov ecx esi
mov [ esp + 0x10 ] 0xffffffff
call Ordinal_MFC42_674
mov ecx [ esp + 0x8 ]
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_402c40
mov eax [ esp + 0x4 ]
push ebx
push ebp
push esi
push edi
mov esi ecx
push eax
call Ordinal_MFC42_4457
cmp eax 0xffffffff
je r-xdata
pop edi
pop esi
pop ebp
or eax 0xffffffff
pop ebx
retn 0x4
push 0xe800
xor eax eax
sub esp 0x10
xor ecx ecx
mov ebp esp
xor edx edx
lea edi [ esi + 0x140 ]
push 0x50402834
mov [ ebp ] eax
xor ebx ebx
push 0x800
push esi
mov [ ebp + 0x4 ] ecx
mov ecx edi
mov [ ebp + 0x8 ] edx
mov [ ebp + 0xc ] ebx
call Ordinal_MFC42_6625
test eax eax
je r-xdata
push 0x80
mov ecx edi
call Ordinal_MFC42_4163
test eax eax
je r-xdata
lea ebx [ esi + 0xc0 ]
push 0xe801
push 0x50008200
push esi
mov ecx ebx
call Ordinal_MFC42_2117
test eax eax
je r-xdata
push 0x4
push rwxdata
mov ecx ebx
call Ordinal_MFC42_6000
test eax eax
je r-xdata
push 0xf000
mov ecx edi
call Ordinal_MFC42_2626
push 0x0
mov ecx edi
call Ordinal_MFC42_6215
push 0x0
mov ecx ebx
call Ordinal_MFC42_6215
push 0xf000
mov ecx esi
call Ordinal_MFC42_2627
push 0x0
push 0x0
push edi
mov ecx esi
call Ordinal_MFC42_2494
push 0x0
mov ecx esi
call sub_402dd0
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
retn 0x4
sub_402d30
push esi
mov esi [ esp + 0x8 ]
push esi
call Ordinal_MFC42_5252
test eax eax
jne r-xdata
mov al [ rw-data ]
push edi
mov edi [ GetSystemMetrics@IAT ]
test al 0x1
jne r-xdata
pop esi
retn 0x4
mov cl [ rw-data ]
mov al 0x2
test al cl
jne r-xdata
mov cl al
push 0x0
or cl 0x1
mov [ rw-data ] cl
call edi
mov [ rw-data ] eax
mov eax 0x55555556
pop edi
imul [ rw-data ]
mov eax edx
shr eax 0x1f
add edx eax
mov eax 0x38e38e39
mov [ esi + 0x1c ] edx
mov ecx [ rw-data ]
imul ecx
sar edx 0x1
mov ecx edx
mov [ esi + 0x14 ] 0x11f
shr ecx 0x1f
add edx ecx
mov [ esi + 0x10 ] 0x264
mov [ esi + 0x18 ] edx
mov eax 0x1
pop esi
retn 0x4
or cl al
push 0x1
mov [ rw-data ] cl
call edi
mov [ rw-data ] eax
sub_402dd0
mov eax [ rw-data ]
push esi
test eax eax
mov esi ecx
jne r-xdata
mov cl [ esp + 0x8 ]
test cl cl
je r-xdata
test esi esi
je r-xdata
test esi esi
jne r-xdata
test esi esi
jne r-xdata
push eax
call [ GetMenu@IAT ]
mov [ rw-data ] eax
mov eax [ esi + 0x20 ]
mov eax [ esi + 0x20 ]
xor eax eax
jmp r-xdata
mov ecx [ esi + 0x20 ]
xor ecx ecx
jmp r-xdata
push 0x0
push eax
call [ SetMenu@IAT ]
push 0x20
push 0x0
push 0xc00000
mov ecx esi
call Ordinal_MFC42_4284
pop esi
retn 0x4
push eax
push ecx
call [ SetMenu@IAT ]
push 0x20
push 0xc00000
push 0x0
mov ecx esi
call Ordinal_MFC42_4284
pop esi
retn 0x4
_start
push ebp
mov ebp esp
push 0xffffffff
push r--data
push _except_handler3
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x68
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
xor ebx ebx
mov [ ebp - 0x4 ] ebx
push 0x2
call [ __set_app_type@IAT ]
pop ecx
or [ rw-data ] 0xffffffff
or [ rw-data ] 0xffffffff
call [ __p__fmode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
call [ __p__commode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
mov eax [ _adjust_fdiv@IAT ]
mov eax [ eax ]
mov [ rw-data ] eax
call sub_4034b5
cmp [ rwxdata ] ebx
jne r-xdata
call sub_4034a0
push rwxdata
push rwxdata
call _initterm
mov eax [ rw-data ]
mov [ ebp - 0x6c ] eax
lea eax [ ebp - 0x6c ]
push eax
push [ rw-data ]
lea eax [ ebp - 0x64 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
lea eax [ ebp - 0x60 ]
push eax
call [ __getmainargs@IAT ]
push rwxdata
push rwxdata
call _initterm
add esp 0x24
mov eax [ _acmdln@IAT ]
mov esi [ eax ]
mov [ ebp - 0x74 ] esi
cmp [ esi ] 0x22
jne r-xdata
push sub_4034b2
call [ __setusermatherr@IAT ]
pop ecx
cmp [ esi ] 0x20
jbe r-xdata
inc esi
mov [ ebp - 0x74 ] esi
mov al [ esi ]
cmp al bl
je r-xdata
mov al [ esi ]
cmp al bl
je r-xdata
inc esi
mov [ ebp - 0x74 ] esi
jmp r-xdata
cmp [ esi ] 0x22
jne r-xdata
cmp al 0x22
jne r-xdata
mov [ ebp - 0x30 ] ebx
lea eax [ ebp - 0x5c ]
push eax
call [ GetStartupInfoA@IAT ]
test [ ebp - 0x30 ] 0x1
je r-xdata
cmp al 0x20
jbe r-xdata
inc esi
mov [ ebp - 0x74 ] esi
push 0xa
pop eax
movzx eax [ ebp - 0x2c ]
jmp r-xdata
push eax
push esi
push ebx
push ebx
call [ GetModuleHandleA@IAT ]
push eax
call sub_4034c2
mov [ ebp - 0x68 ] eax
push eax
call [ exit@IAT ]
sub_4034da
call Ordinal_MFC42_1168
mov ecx [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
test ecx ecx
mov [ eax + 0x14 ] cl
mov [ eax + 0x1040 ] edx
jne r-xdata
push 0x1
pop eax
retn 0x8
push 0xfffffffd
call [ _setmbcp@IAT ]
pop ecx
sub_401000
mov edx ecx
push edi
mov ecx 0x8
xor eax eax
lea edi [ edx + 0x4 ]
mov [ edx ] r--data
[ edi ]
mov [ edx + 0x24 ] ax
mov eax edx
pop edi
retn
sub_401020
push esi
mov esi ecx
call sub_401040
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call Ordinal_MFC42_825
add esp 0x4
sub_401040
mov [ ecx ] r--data
retn
sub_401050
retn 0x10
sub_4012c0
push esi
mov esi ecx
call sub_4014d0
mov eax 0x1
mov [ esi + 0x48 ] 0x2
mov [ esi + 0x18 ] ax
mov [ esi + 0x16 ] ax
mov [ esi + 0x1e ] ax
mov [ esi + 0x20 ] ax
mov [ esi + 0x4c ] 0x3
pop esi
retn 0x10
sub_4014d0
push edi
lea edi [ ecx + 0x4 ]
mov ecx 0x8
xor eax eax
[ edi ]
pop edi
retn
sub_4014e0
mov eax [ Ordinal_MFC42_4274@IAT ]
retn
sub_4014f0
mov eax r--data
retn
sub_401500
push esi
mov esi ecx
push 0x0
call Ordinal_MFC42_561
mov [ esi ] r--data
mov eax esi
pop esi
retn
sub_401520
push esi
mov esi ecx
call sub_401540
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call Ordinal_MFC42_825
add esp 0x4
sub_401540
jmp Ordinal_MFC42_815
sub_401550
call sub_401560
jmp sub_401570
sub_401560
mov ecx rw-data
jmp sub_401500
sub_401570
push sub_401580
call sub_403314
pop ecx
retn
sub_401580
mov ecx rw-data
jmp sub_401540
sub_4016e0
push esi
push 0x0
mov esi ecx
push 0x64
call Ordinal_MFC42_324
mov [ esi ] r--data
mov eax esi
pop esi
retn
sub_401700
push esi
mov esi ecx
call sub_401720
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call Ordinal_MFC42_825
add esp 0x4
sub_401720
jmp Ordinal_MFC42_641
sub_401730
mov eax [ Ordinal_MFC42_4234@IAT ]
retn
sub_401740
mov eax r--data
retn
sub_4017b0
mov eax [ esp + 0x4 ]
push eax
call Ordinal_MFC42_825
pop ecx
retn 0x4
sub_4017c0
retn
sub_4017d0
retn 0x4
sub_4017e0
mov eax [ ecx + 0x20 ]
push 0x0
push eax
call [ EnableWindow@IAT ]
retn
sub_4017f0
mov eax [ ecx + 0x20 ]
push 0x1
push eax
call [ EnableWindow@IAT ]
retn
sub_401860
mov eax [ Ordinal_MFC42_1825@IAT ]
retn
sub_401870
mov eax r--data
retn
sub_401880
mov eax [ Ordinal_MFC42_4238@IAT ]
retn
sub_401890
mov eax r--data
retn
sub_4018a0
push esi
mov esi ecx
call Ordinal_MFC42_338
mov [ esi ] r--data
mov eax esi
pop esi
retn
sub_4018c0
push esi
mov esi ecx
call sub_4018e0
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call Ordinal_MFC42_825
add esp 0x4
sub_4018e0
mov [ ecx ] r--data
jmp Ordinal_MFC42_652
sub_4018f0
call Ordinal_MFC42_4823
neg eax
sbb eax eax
neg eax
retn
sub_401900
retn 0x4
sub_401910
mov eax [ ecx + 0x48 ]
retn
sub_401920
mov eax [ esp + 0x4 ]
mov [ ecx + 0x48 ] eax
retn 0x4
sub_401930
jmp r-xdata
retn
sub_401950
call sub_401960
jmp sub_401990
sub_401960
mov ecx rw-data
jmp sub_401970
sub_401970
push esi
mov esi ecx
call sub_401000
mov [ esi ] r--data
mov [ esi + 0x50 ] 0x4
mov eax esi
pop esi
retn
sub_401990
push sub_4019a0
call sub_403314
pop ecx
retn
sub_4019a0
mov ecx rw-data
jmp j_sub_401040
sub_4019b0
call sub_4019c0
jmp sub_401a00
sub_4019c0
mov ecx rw-data
jmp sub_4019d0
sub_4019d0
push esi
mov esi ecx
call sub_401000
mov [ esi ] r--data
mov [ esi + 0x50 ] 0x1
mov eax esi
pop esi
retn
j_sub_401040
jmp sub_401040
sub_401a00
push sub_401a10
call sub_403314
pop ecx
retn
sub_401a10
mov ecx rw-data
jmp j_sub_401040
sub_401a20
call sub_401a30
jmp sub_401a60
sub_401a30
mov ecx rw-data
jmp sub_401a40
sub_401a40
push esi
mov esi ecx
call sub_401000
mov [ esi ] r--data
mov [ esi + 0x50 ] 0x2
mov eax esi
pop esi
retn
sub_401a60
push sub_401a70
call sub_403314
pop ecx
retn
sub_401a70
mov ecx rw-data
jmp j_sub_401040
sub_401a80
call sub_401a90
jmp sub_401ac0
sub_401a90
mov ecx rw-data
jmp sub_401aa0
sub_401aa0
push esi
mov esi ecx
call sub_401000
mov [ esi ] r--data
mov [ esi + 0x50 ] 0x2
mov eax esi
pop esi
retn
sub_401ac0
push sub_401ad0
call sub_403314
pop ecx
retn
sub_401ad0
mov ecx rw-data
jmp j_sub_401040
sub_401ae0
call sub_401af0
jmp sub_401b20
sub_401af0
mov ecx rw-data
jmp sub_401b00
sub_401b00
push esi
mov esi ecx
call sub_401000
mov [ esi ] r--data
mov [ esi + 0x50 ] 0x4
mov eax esi
pop esi
retn
sub_401b20
push sub_401b30
call sub_403314
pop ecx
retn
sub_401b30
mov ecx rw-data
jmp j_sub_401040
sub_401b40
call sub_401b50
jmp sub_401ba0
sub_401b50
mov ecx rw-data
jmp sub_401b60
sub_401b60
push esi
mov esi ecx
call sub_401000
mov [ esi ] r--data
mov [ esi + 0x50 ] 0x4
mov eax esi
pop esi
retn
sub_401b80
push esi
mov esi ecx
call j_sub_401040
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call Ordinal_MFC42_825
add esp 0x4
sub_401ba0
push sub_401bb0
call sub_403314
pop ecx
retn
sub_401bb0
mov ecx rw-data
jmp j_sub_401040
sub_401bc0
call sub_401bd0
jmp sub_401c00
sub_401bd0
mov ecx rw-data
jmp sub_401be0
sub_401be0
push esi
mov esi ecx
call sub_401000
mov [ esi ] r--data
mov [ esi + 0x50 ] 0x2
mov eax esi
pop esi
retn
sub_401c00
push sub_401c10
call sub_403314
pop ecx
retn
sub_401c10
mov ecx rw-data
jmp j_sub_401040
sub_401c80
mov eax [ Ordinal_MFC42_1945@IAT ]
retn
sub_401c90
mov eax r--data
retn
sub_401ca0
mov eax [ Ordinal_MFC42_4273@IAT ]
retn
sub_401cb0
mov eax r--data
retn
sub_401dc0
push esi
mov esi ecx
call sub_401de0
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call Ordinal_MFC42_825
add esp 0x4
sub_401de0
mov [ ecx ] r--data
jmp Ordinal_MFC42_813
sub_401df0
mov eax [ esp + 0x4 ]
push eax
call Ordinal_MFC42_5260
retn 0x4
sub_4022b0
mov eax [ esp + 0x4 ]
cdq
idiv [ esp + 0x8 ]
cmp eax 0x2
sete al
retn 0x8
sub_402410
mov eax [ esp + 0x4 ]
push eax
call Ordinal_MFC42_2535
retn 0x4
sub_402420
retn 0x8
sub_40283c
nop
nop
nop
nop
mov eax 0x1
retn 0x4
sub_4028e0
mov [ ecx ] r--data
retn
sub_4028f0
push esi
mov esi ecx
call sub_402910
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call Ordinal_MFC42_825
add esp 0x4
sub_402960
push esi
mov esi ecx
call sub_402980
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call Ordinal_MFC42_825
add esp 0x4
sub_4029d0
push esi
mov esi ecx
call sub_4029f0
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call Ordinal_MFC42_825
add esp 0x4
sub_402a40
push esi
mov esi ecx
call sub_402a60
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call Ordinal_MFC42_825
add esp 0x4
sub_402b10
mov eax [ Ordinal_MFC42_1842@IAT ]
retn
sub_402b20
mov eax r--data
retn
sub_402b30
mov eax [ Ordinal_MFC42_4242@IAT ]
retn
sub_402b40
mov eax r--data
retn
sub_402bb0
push esi
mov esi ecx
call sub_402bd0
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call Ordinal_MFC42_825
add esp 0x4
Ordinal_MFC42_825
jmp [ Ordinal_MFC42_825@IAT ]
Ordinal_MFC42_4615
jmp [ Ordinal_MFC42_4615@IAT ]
Ordinal_MFC42_4612
jmp [ Ordinal_MFC42_4612@IAT ]
Ordinal_MFC42_4610
jmp [ Ordinal_MFC42_4610@IAT ]
Ordinal_MFC42_6375
jmp [ Ordinal_MFC42_6375@IAT ]
Ordinal_MFC42_4486
jmp [ Ordinal_MFC42_4486@IAT ]
Ordinal_MFC42_2554
jmp [ Ordinal_MFC42_2554@IAT ]
Ordinal_MFC42_2512
jmp [ Ordinal_MFC42_2512@IAT ]
Ordinal_MFC42_5731
jmp [ Ordinal_MFC42_5731@IAT ]
Ordinal_MFC42_3922
jmp [ Ordinal_MFC42_3922@IAT ]
Ordinal_MFC42_1089
jmp [ Ordinal_MFC42_1089@IAT ]
Ordinal_MFC42_5199
jmp [ Ordinal_MFC42_5199@IAT ]
Ordinal_MFC42_2396
jmp [ Ordinal_MFC42_2396@IAT ]
Ordinal_MFC42_3346
jmp [ Ordinal_MFC42_3346@IAT ]
Ordinal_MFC42_5300
jmp [ Ordinal_MFC42_5300@IAT ]
Ordinal_MFC42_5302
jmp [ Ordinal_MFC42_5302@IAT ]
Ordinal_MFC42_2725
jmp [ Ordinal_MFC42_2725@IAT ]
Ordinal_MFC42_4079
jmp [ Ordinal_MFC42_4079@IAT ]
Ordinal_MFC42_4698
jmp [ Ordinal_MFC42_4698@IAT ]
Ordinal_MFC42_5307
jmp [ Ordinal_MFC42_5307@IAT ]
Ordinal_MFC42_5289
jmp [ Ordinal_MFC42_5289@IAT ]
Ordinal_MFC42_5714
jmp [ Ordinal_MFC42_5714@IAT ]
Ordinal_MFC42_2982
jmp [ Ordinal_MFC42_2982@IAT ]
Ordinal_MFC42_3147
jmp [ Ordinal_MFC42_3147@IAT ]
Ordinal_MFC42_3259
jmp [ Ordinal_MFC42_3259@IAT ]
Ordinal_MFC42_4465
jmp [ Ordinal_MFC42_4465@IAT ]
Ordinal_MFC42_3136
jmp [ Ordinal_MFC42_3136@IAT ]
Ordinal_MFC42_3262
jmp [ Ordinal_MFC42_3262@IAT ]
Ordinal_MFC42_2985
jmp [ Ordinal_MFC42_2985@IAT ]
Ordinal_MFC42_3081
jmp [ Ordinal_MFC42_3081@IAT ]
Ordinal_MFC42_2976
jmp [ Ordinal_MFC42_2976@IAT ]
Ordinal_MFC42_3830
jmp [ Ordinal_MFC42_3830@IAT ]
Ordinal_MFC42_3831
jmp [ Ordinal_MFC42_3831@IAT ]
Ordinal_MFC42_3825
jmp [ Ordinal_MFC42_3825@IAT ]
Ordinal_MFC42_3079
jmp [ Ordinal_MFC42_3079@IAT ]
Ordinal_MFC42_4080
jmp [ Ordinal_MFC42_4080@IAT ]
Ordinal_MFC42_4622
jmp [ Ordinal_MFC42_4622@IAT ]
Ordinal_MFC42_4424
jmp [ Ordinal_MFC42_4424@IAT ]
Ordinal_MFC42_3738
jmp [ Ordinal_MFC42_3738@IAT ]
Ordinal_MFC42_561
jmp [ Ordinal_MFC42_561@IAT ]
Ordinal_MFC42_815
jmp [ Ordinal_MFC42_815@IAT ]
Ordinal_MFC42_6215
jmp [ Ordinal_MFC42_6215@IAT ]
Ordinal_MFC42_617
jmp [ Ordinal_MFC42_617@IAT ]
Ordinal_MFC42_5301
jmp [ Ordinal_MFC42_5301@IAT ]
Ordinal_MFC42_5214
jmp [ Ordinal_MFC42_5214@IAT ]
Ordinal_MFC42_296
jmp [ Ordinal_MFC42_296@IAT ]
Ordinal_MFC42_986
jmp [ Ordinal_MFC42_986@IAT ]
Ordinal_MFC42_520
jmp [ Ordinal_MFC42_520@IAT ]
Ordinal_MFC42_823
jmp [ Ordinal_MFC42_823@IAT ]
Ordinal_MFC42_4159
jmp [ Ordinal_MFC42_4159@IAT ]
Ordinal_MFC42_2621
jmp [ Ordinal_MFC42_2621@IAT ]
Ordinal_MFC42_1134
jmp [ Ordinal_MFC42_1134@IAT ]
Ordinal_MFC42_5265
jmp [ Ordinal_MFC42_5265@IAT ]
Ordinal_MFC42_4376
jmp [ Ordinal_MFC42_4376@IAT ]
Ordinal_MFC42_4853
jmp [ Ordinal_MFC42_4853@IAT ]
Ordinal_MFC42_4998
jmp [ Ordinal_MFC42_4998@IAT ]
Ordinal_MFC42_4710
jmp [ Ordinal_MFC42_4710@IAT ]
Ordinal_MFC42_2514
jmp [ Ordinal_MFC42_2514@IAT ]
Ordinal_MFC42_6052
jmp [ Ordinal_MFC42_6052@IAT ]
Ordinal_MFC42_4078
jmp [ Ordinal_MFC42_4078@IAT ]
Ordinal_MFC42_1775
jmp [ Ordinal_MFC42_1775@IAT ]
Ordinal_MFC42_4407
jmp [ Ordinal_MFC42_4407@IAT ]
Ordinal_MFC42_5241
jmp [ Ordinal_MFC42_5241@IAT ]
Ordinal_MFC42_2385
jmp [ Ordinal_MFC42_2385@IAT ]
Ordinal_MFC42_5163
jmp [ Ordinal_MFC42_5163@IAT ]
Ordinal_MFC42_6374
jmp [ Ordinal_MFC42_6374@IAT ]
Ordinal_MFC42_4353
jmp [ Ordinal_MFC42_4353@IAT ]
Ordinal_MFC42_5280
jmp [ Ordinal_MFC42_5280@IAT ]
Ordinal_MFC42_3798
jmp [ Ordinal_MFC42_3798@IAT ]
Ordinal_MFC42_4837
jmp [ Ordinal_MFC42_4837@IAT ]
Ordinal_MFC42_4441
jmp [ Ordinal_MFC42_4441@IAT ]
Ordinal_MFC42_2648
jmp [ Ordinal_MFC42_2648@IAT ]
Ordinal_MFC42_2055
jmp [ Ordinal_MFC42_2055@IAT ]
Ordinal_MFC42_6376
jmp [ Ordinal_MFC42_6376@IAT ]
Ordinal_MFC42_3749
jmp [ Ordinal_MFC42_3749@IAT ]
Ordinal_MFC42_5065
jmp [ Ordinal_MFC42_5065@IAT ]
Ordinal_MFC42_1727
jmp [ Ordinal_MFC42_1727@IAT ]
Ordinal_MFC42_5261
jmp [ Ordinal_MFC42_5261@IAT ]
Ordinal_MFC42_2446
jmp [ Ordinal_MFC42_2446@IAT ]
Ordinal_MFC42_2124
jmp [ Ordinal_MFC42_2124@IAT ]
Ordinal_MFC42_5277
jmp [ Ordinal_MFC42_5277@IAT ]
Ordinal_MFC42_4627
jmp [ Ordinal_MFC42_4627@IAT ]
Ordinal_MFC42_4425
jmp [ Ordinal_MFC42_4425@IAT ]
Ordinal_MFC42_3597
jmp [ Ordinal_MFC42_3597@IAT ]
Ordinal_MFC42_324
jmp [ Ordinal_MFC42_324@IAT ]
Ordinal_MFC42_641
jmp [ Ordinal_MFC42_641@IAT ]
Ordinal_MFC42_4696
jmp [ Ordinal_MFC42_4696@IAT ]
Ordinal_MFC42_3058
jmp [ Ordinal_MFC42_3058@IAT ]
Ordinal_MFC42_3065
jmp [ Ordinal_MFC42_3065@IAT ]
Ordinal_MFC42_6336
jmp [ Ordinal_MFC42_6336@IAT ]
Ordinal_MFC42_2510
jmp [ Ordinal_MFC42_2510@IAT ]
Ordinal_MFC42_2542
jmp [ Ordinal_MFC42_2542@IAT ]
Ordinal_MFC42_5243
jmp [ Ordinal_MFC42_5243@IAT ]
Ordinal_MFC42_5740
jmp [ Ordinal_MFC42_5740@IAT ]
Ordinal_MFC42_1746
jmp [ Ordinal_MFC42_1746@IAT ]
Ordinal_MFC42_5577
jmp [ Ordinal_MFC42_5577@IAT ]
Ordinal_MFC42_3172
jmp [ Ordinal_MFC42_3172@IAT ]
Ordinal_MFC42_5653
jmp [ Ordinal_MFC42_5653@IAT ]
Ordinal_MFC42_4420
jmp [ Ordinal_MFC42_4420@IAT ]
Ordinal_MFC42_4953
jmp [ Ordinal_MFC42_4953@IAT ]
Ordinal_MFC42_4858
jmp [ Ordinal_MFC42_4858@IAT ]
Ordinal_MFC42_2399
jmp [ Ordinal_MFC42_2399@IAT ]
Ordinal_MFC42_4387
jmp [ Ordinal_MFC42_4387@IAT ]
Ordinal_MFC42_3454
jmp [ Ordinal_MFC42_3454@IAT ]
Ordinal_MFC42_3198
jmp [ Ordinal_MFC42_3198@IAT ]
Ordinal_MFC42_6080
jmp [ Ordinal_MFC42_6080@IAT ]
Ordinal_MFC42_6175
jmp [ Ordinal_MFC42_6175@IAT ]
Ordinal_MFC42_4623
jmp [ Ordinal_MFC42_4623@IAT ]
Ordinal_MFC42_4426
jmp [ Ordinal_MFC42_4426@IAT ]
Ordinal_MFC42_338
jmp [ Ordinal_MFC42_338@IAT ]
Ordinal_MFC42_652
jmp [ Ordinal_MFC42_652@IAT ]
Ordinal_MFC42_4823
jmp [ Ordinal_MFC42_4823@IAT ]
Ordinal_MFC42_4614
jmp [ Ordinal_MFC42_4614@IAT ]
Ordinal_MFC42_4613
jmp [ Ordinal_MFC42_4613@IAT ]
Ordinal_MFC42_4589
jmp [ Ordinal_MFC42_4589@IAT ]
Ordinal_MFC42_4899
jmp [ Ordinal_MFC42_4899@IAT ]
Ordinal_MFC42_5076
jmp [ Ordinal_MFC42_5076@IAT ]
Ordinal_MFC42_4341
jmp [ Ordinal_MFC42_4341@IAT ]
Ordinal_MFC42_4349
jmp [ Ordinal_MFC42_4349@IAT ]
Ordinal_MFC42_4723
jmp [ Ordinal_MFC42_4723@IAT ]
Ordinal_MFC42_4890
jmp [ Ordinal_MFC42_4890@IAT ]
Ordinal_MFC42_4531
jmp [ Ordinal_MFC42_4531@IAT ]
Ordinal_MFC42_4545
jmp [ Ordinal_MFC42_4545@IAT ]
Ordinal_MFC42_4543
jmp [ Ordinal_MFC42_4543@IAT ]
Ordinal_MFC42_4526
jmp [ Ordinal_MFC42_4526@IAT ]
Ordinal_MFC42_4529
jmp [ Ordinal_MFC42_4529@IAT ]
Ordinal_MFC42_4524
jmp [ Ordinal_MFC42_4524@IAT ]
Ordinal_MFC42_4964
jmp [ Ordinal_MFC42_4964@IAT ]
Ordinal_MFC42_4961
jmp [ Ordinal_MFC42_4961@IAT ]
Ordinal_MFC42_4108
jmp [ Ordinal_MFC42_4108@IAT ]
Ordinal_MFC42_6055
jmp [ Ordinal_MFC42_6055@IAT ]
Ordinal_MFC42_1776
jmp [ Ordinal_MFC42_1776@IAT ]
Ordinal_MFC42_5240
jmp [ Ordinal_MFC42_5240@IAT ]
Ordinal_MFC42_5290
jmp [ Ordinal_MFC42_5290@IAT ]
Ordinal_MFC42_3748
jmp [ Ordinal_MFC42_3748@IAT ]
Ordinal_MFC42_1726
jmp [ Ordinal_MFC42_1726@IAT ]
Ordinal_MFC42_4432
jmp [ Ordinal_MFC42_4432@IAT ]
Ordinal_MFC42_560
jmp [ Ordinal_MFC42_560@IAT ]
Ordinal_MFC42_813
jmp [ Ordinal_MFC42_813@IAT ]
Ordinal_MFC42_5260
jmp [ Ordinal_MFC42_5260@IAT ]
Ordinal_MFC42_3571
jmp [ Ordinal_MFC42_3571@IAT ]
Ordinal_MFC42_3573
jmp [ Ordinal_MFC42_3573@IAT ]
Ordinal_MFC42_3693
jmp [ Ordinal_MFC42_3693@IAT ]
Ordinal_MFC42_3626
jmp [ Ordinal_MFC42_3626@IAT ]
Ordinal_MFC42_3663
jmp [ Ordinal_MFC42_3663@IAT ]
Ordinal_MFC42_640
jmp [ Ordinal_MFC42_640@IAT ]
Ordinal_MFC42_2405
jmp [ Ordinal_MFC42_2405@IAT ]
Ordinal_MFC42_2414
jmp [ Ordinal_MFC42_2414@IAT ]
Ordinal_MFC42_5787
jmp [ Ordinal_MFC42_5787@IAT ]
Ordinal_MFC42_5788
jmp [ Ordinal_MFC42_5788@IAT ]
Ordinal_MFC42_2753
jmp [ Ordinal_MFC42_2753@IAT ]
Ordinal_MFC42_5785
jmp [ Ordinal_MFC42_5785@IAT ]
Ordinal_MFC42_1641
jmp [ Ordinal_MFC42_1641@IAT ]
Ordinal_MFC42_1640
jmp [ Ordinal_MFC42_1640@IAT ]
Ordinal_MFC42_323
jmp [ Ordinal_MFC42_323@IAT ]
Ordinal_MFC42_2535
jmp [ Ordinal_MFC42_2535@IAT ]
Ordinal_MFC42_2379
jmp [ Ordinal_MFC42_2379@IAT ]
Ordinal_MFC42_4464
jmp [ Ordinal_MFC42_4464@IAT ]
Ordinal_MFC42_2723
jmp [ Ordinal_MFC42_2723@IAT ]
Ordinal_MFC42_2390
jmp [ Ordinal_MFC42_2390@IAT ]
Ordinal_MFC42_3059
jmp [ Ordinal_MFC42_3059@IAT ]
Ordinal_MFC42_5100
jmp [ Ordinal_MFC42_5100@IAT ]
Ordinal_MFC42_5103
jmp [ Ordinal_MFC42_5103@IAT ]
Ordinal_MFC42_4467
jmp [ Ordinal_MFC42_4467@IAT ]
Ordinal_MFC42_4303
jmp [ Ordinal_MFC42_4303@IAT ]
Ordinal_MFC42_3350
jmp [ Ordinal_MFC42_3350@IAT ]
Ordinal_MFC42_5012
jmp [ Ordinal_MFC42_5012@IAT ]
Ordinal_MFC42_975
jmp [ Ordinal_MFC42_975@IAT ]
Ordinal_MFC42_5472
jmp [ Ordinal_MFC42_5472@IAT ]
Ordinal_MFC42_3403
jmp [ Ordinal_MFC42_3403@IAT ]
Ordinal_MFC42_2879
jmp [ Ordinal_MFC42_2879@IAT ]
Ordinal_MFC42_2878
jmp [ Ordinal_MFC42_2878@IAT ]
Ordinal_MFC42_4151
jmp [ Ordinal_MFC42_4151@IAT ]
Ordinal_MFC42_4077
jmp [ Ordinal_MFC42_4077@IAT ]
Ordinal_MFC42_5237
jmp [ Ordinal_MFC42_5237@IAT ]
Ordinal_MFC42_5282
jmp [ Ordinal_MFC42_5282@IAT ]
Ordinal_MFC42_2649
jmp [ Ordinal_MFC42_2649@IAT ]
Ordinal_MFC42_1665
jmp [ Ordinal_MFC42_1665@IAT ]
Ordinal_MFC42_4436
jmp [ Ordinal_MFC42_4436@IAT ]
Ordinal_MFC42_4427
jmp [ Ordinal_MFC42_4427@IAT ]
Ordinal_MFC42_796
jmp [ Ordinal_MFC42_796@IAT ]
Ordinal_MFC42_674
jmp [ Ordinal_MFC42_674@IAT ]
Ordinal_MFC42_554
jmp [ Ordinal_MFC42_554@IAT ]
Ordinal_MFC42_529
jmp [ Ordinal_MFC42_529@IAT ]
Ordinal_MFC42_366
jmp [ Ordinal_MFC42_366@IAT ]
Ordinal_MFC42_807
jmp [ Ordinal_MFC42_807@IAT ]
Ordinal_MFC42_2494
jmp [ Ordinal_MFC42_2494@IAT ]
Ordinal_MFC42_2627
jmp [ Ordinal_MFC42_2627@IAT ]
Ordinal_MFC42_2626
jmp [ Ordinal_MFC42_2626@IAT ]
Ordinal_MFC42_6000
jmp [ Ordinal_MFC42_6000@IAT ]
Ordinal_MFC42_2117
jmp [ Ordinal_MFC42_2117@IAT ]
Ordinal_MFC42_4163
jmp [ Ordinal_MFC42_4163@IAT ]
Ordinal_MFC42_6625
jmp [ Ordinal_MFC42_6625@IAT ]
Ordinal_MFC42_4457
jmp [ Ordinal_MFC42_4457@IAT ]
Ordinal_MFC42_5252
jmp [ Ordinal_MFC42_5252@IAT ]
Ordinal_MFC42_4284
jmp [ Ordinal_MFC42_4284@IAT ]
sub_4032e8
cmp [ rw-data ] 0xffffffff
jne r-xdata
push rw-data
push rw-data
push [ esp + 0xc ]
call __dllonexit
add esp 0xc
retn
push [ esp + 0x4 ]
call [ _onexit@IAT ]
pop ecx
retn
sub_403314
push [ esp + 0x4 ]
call sub_4032e8
neg eax
sbb eax eax
pop ecx
neg eax
dec eax
retn
__CxxFrameHandler
jmp [ __CxxFrameHandler@IAT ]
__dllonexit
jmp [ __dllonexit@IAT ]
_XcptFilter
jmp [ _XcptFilter@IAT ]
_initterm
jmp [ _initterm@IAT ]
sub_4034a0
push 0x30000
push 0x10000
call _controlfp
pop ecx
pop ecx
retn
sub_4034b2
xor eax eax
retn
sub_4034b5
retn
_except_handler3
jmp [ _except_handler3@IAT ]
_controlfp
jmp [ _controlfp@IAT ]
sub_4034c2
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
call Ordinal_MFC42_1576
retn 0x10
j_sub_403508
jmp sub_403508
sub_403508
push 0x600
push 0x0
call sub_4034da
mov [ rw-data ] al
retn
Ordinal_MFC42_1576
jmp [ Ordinal_MFC42_1576@IAT ]
Ordinal_MFC42_1168
jmp [ Ordinal_MFC42_1168@IAT ]
sub_403530
mov eax [ ebp - 0x138 ]
push eax
call sub_4017b0
retn
sub_40353d
lea ecx [ ebp - 0x134 ]
jmp Ordinal_MFC42_617
sub_403548
mov eax r--data
jmp __CxxFrameHandler
sub_403560
lea ecx [ ebp - 0x6c ]
jmp sub_401720
sub_403568
mov eax r--data
jmp __CxxFrameHandler
sub_403580
mov eax [ ebp - 0x10 ]
push eax
call sub_4017b0
retn
sub_40358a
mov eax r--data
jmp __CxxFrameHandler
sub_4035a0
mov eax [ ebp - 0x10 ]
push eax
call sub_4017b0
retn
sub_4035aa
mov eax r--data
jmp __CxxFrameHandler
sub_4035c0
lea ecx [ ebp - 0x3c ]
jmp sub_402a60
sub_4035c8
lea ecx [ ebp - 0x1c ]
jmp Ordinal_MFC42_640
sub_4035d0
lea ecx [ ebp - 0x44 ]
jmp sub_402980
sub_4035d8
lea ecx [ ebp - 0x4c ]
jmp sub_4029f0
sub_4035e0
lea ecx [ ebp - 0x24 ]
jmp sub_4029f0
sub_4035e8
lea ecx [ ebp - 0x2c ]
jmp sub_4029f0
sub_4035f0
lea ecx [ ebp - 0x34 ]
jmp sub_4029f0
sub_4035f8
lea ecx [ ebp - 0x34 ]
jmp sub_4028e0
sub_403600
lea ecx [ ebp - 0x2c ]
jmp sub_4028e0
sub_403608
lea ecx [ ebp - 0x24 ]
jmp sub_4028e0
sub_403610
lea ecx [ ebp - 0x4c ]
jmp sub_4028e0
sub_403618
lea ecx [ ebp - 0x44 ]
jmp sub_4028e0
sub_403620
lea ecx [ ebp - 0x3c ]
jmp sub_4028e0
sub_403628
mov eax r--data
jmp __CxxFrameHandler
sub_403640
mov ecx [ ebp - 0x10 ]
jmp sub_4028e0
sub_403648
mov eax r--data
jmp __CxxFrameHandler
sub_403660
mov ecx [ ebp - 0x10 ]
jmp sub_4028e0
sub_403668
mov eax r--data
jmp __CxxFrameHandler
sub_403680
mov ecx [ ebp - 0x10 ]
jmp sub_4028e0
sub_403688
mov eax r--data
jmp __CxxFrameHandler
sub_4036a0
mov ecx [ ebp - 0x10 ]
jmp sub_4028e0
sub_4036a8
mov eax r--data
jmp __CxxFrameHandler
sub_4036c0
mov eax [ ebp - 0x10 ]
push eax
call sub_4017b0
retn
sub_4036ca
mov eax r--data
jmp __CxxFrameHandler
sub_4036e0
mov ecx [ ebp - 0x10 ]
jmp Ordinal_MFC42_674
sub_4036e8
mov ecx [ ebp - 0x10 ]
add ecx 0xc0
jmp Ordinal_MFC42_796
sub_4036f6
mov eax r--data
jmp __CxxFrameHandler
sub_403700
mov ecx [ ebp - 0x10 ]
jmp Ordinal_MFC42_674
sub_403708
mov ecx [ ebp - 0x10 ]
add ecx 0xc0
jmp Ordinal_MFC42_796
sub_403716
mov eax r--data
jmp __CxxFrameHandler
